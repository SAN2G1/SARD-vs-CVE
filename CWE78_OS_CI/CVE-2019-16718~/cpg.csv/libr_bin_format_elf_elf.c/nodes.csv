command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3594408	File	data/converged/CVE-2019-16718~_radare2/libr_bin_format_elf_elf.c								
ANR	3594409	Function	UTX_MUL	49:0:1297:1378							
ANR	3594410	FunctionDef	"UTX_MUL (ut64 * r , ut64 a , ut64 b)"		3594409	0					
ANR	3594411	CompoundStatement		49:51:1348:1378	3594409	0					
ANR	3594412	ReturnStatement	"return UT64_MUL ( r , a , b ) ;"	50:1:1351:1376	3594409	0	True				
ANR	3594413	CallExpression	"UT64_MUL ( r , a , b )"		3594409	0					
ANR	3594414	Callee	UT64_MUL		3594409	0					
ANR	3594415	Identifier	UT64_MUL		3594409	0					
ANR	3594416	ArgumentList	r		3594409	1					
ANR	3594417	Argument	r		3594409	0					
ANR	3594418	Identifier	r		3594409	0					
ANR	3594419	Argument	a		3594409	1					
ANR	3594420	Identifier	a		3594409	0					
ANR	3594421	Argument	b		3594409	2					
ANR	3594422	Identifier	b		3594409	0					
ANR	3594423	ReturnType	static inline int		3594409	1					
ANR	3594424	Identifier	UTX_MUL		3594409	2					
ANR	3594425	ParameterList	"ut64 * r , ut64 a , ut64 b"		3594409	3					
ANR	3594426	Parameter	ut64 * r	49:26:1323:1329	3594409	0	True				
ANR	3594427	ParameterType	ut64 *		3594409	0					
ANR	3594428	Identifier	r		3594409	1					
ANR	3594429	Parameter	ut64 a	49:35:1332:1337	3594409	1	True				
ANR	3594430	ParameterType	ut64		3594409	0					
ANR	3594431	Identifier	a		3594409	1					
ANR	3594432	Parameter	ut64 b	49:43:1340:1345	3594409	2	True				
ANR	3594433	ParameterType	ut64		3594409	0					
ANR	3594434	Identifier	b		3594409	1					
ANR	3594435	CFGEntryNode	ENTRY		3594409		True				
ANR	3594436	CFGExitNode	EXIT		3594409		True				
ANR	3594437	Symbol	a		3594409						
ANR	3594438	Symbol	r		3594409						
ANR	3594439	Symbol	b		3594409						
ANR	3594440	Symbol	UT64_MUL		3594409						
ANR	3594441	Function	UTX_MUL	53:0:1386:1510							
ANR	3594442	FunctionDef	"UTX_MUL (ut64 * r , ut64 a , ut64 b)"		3594441	0					
ANR	3594443	CompoundStatement		53:51:1437:1510	3594441	0					
ANR	3594444	IdentifierDeclStatement	ut32 r2 = * r ;	54:1:1440:1452	3594441	0	True				
ANR	3594445	IdentifierDecl	r2 = * r		3594441	0					
ANR	3594446	IdentifierDeclType	ut32		3594441	0					
ANR	3594447	Identifier	r2		3594441	1					
ANR	3594448	AssignmentExpression	r2 = * r		3594441	2		=			
ANR	3594449	Identifier	r2		3594441	0					
ANR	3594450	UnaryOperationExpression	* r		3594441	1					
ANR	3594451	UnaryOperator	*		3594441	0					
ANR	3594452	Identifier	r		3594441	1					
ANR	3594453	IdentifierDeclStatement	"int res = UT32_MUL ( & r2 , a , b ) ;"	55:1:1455:1485	3594441	1	True				
ANR	3594454	IdentifierDecl	"res = UT32_MUL ( & r2 , a , b )"		3594441	0					
ANR	3594455	IdentifierDeclType	int		3594441	0					
ANR	3594456	Identifier	res		3594441	1					
ANR	3594457	AssignmentExpression	"res = UT32_MUL ( & r2 , a , b )"		3594441	2		=			
ANR	3594458	Identifier	res		3594441	0					
ANR	3594459	CallExpression	"UT32_MUL ( & r2 , a , b )"		3594441	1					
ANR	3594460	Callee	UT32_MUL		3594441	0					
ANR	3594461	Identifier	UT32_MUL		3594441	0					
ANR	3594462	ArgumentList	& r2		3594441	1					
ANR	3594463	Argument	& r2		3594441	0					
ANR	3594464	UnaryOperationExpression	& r2		3594441	0					
ANR	3594465	UnaryOperator	&		3594441	0					
ANR	3594466	Identifier	r2		3594441	1					
ANR	3594467	Argument	a		3594441	1					
ANR	3594468	Identifier	a		3594441	0					
ANR	3594469	Argument	b		3594441	2					
ANR	3594470	Identifier	b		3594441	0					
ANR	3594471	ExpressionStatement	* r = r2	56:1:1488:1495	3594441	2	True				
ANR	3594472	AssignmentExpression	* r = r2		3594441	0		=			
ANR	3594473	UnaryOperationExpression	* r		3594441	0					
ANR	3594474	UnaryOperator	*		3594441	0					
ANR	3594475	Identifier	r		3594441	1					
ANR	3594476	Identifier	r2		3594441	1					
ANR	3594477	ReturnStatement	return res ;	57:1:1498:1508	3594441	3	True				
ANR	3594478	Identifier	res		3594441	0					
ANR	3594479	ReturnType	static inline int		3594441	1					
ANR	3594480	Identifier	UTX_MUL		3594441	2					
ANR	3594481	ParameterList	"ut64 * r , ut64 a , ut64 b"		3594441	3					
ANR	3594482	Parameter	ut64 * r	53:26:1412:1418	3594441	0	True				
ANR	3594483	ParameterType	ut64 *		3594441	0					
ANR	3594484	Identifier	r		3594441	1					
ANR	3594485	Parameter	ut64 a	53:35:1421:1426	3594441	1	True				
ANR	3594486	ParameterType	ut64		3594441	0					
ANR	3594487	Identifier	a		3594441	1					
ANR	3594488	Parameter	ut64 b	53:43:1429:1434	3594441	2	True				
ANR	3594489	ParameterType	ut64		3594441	0					
ANR	3594490	Identifier	b		3594441	1					
ANR	3594491	CFGEntryNode	ENTRY		3594441		True				
ANR	3594492	CFGExitNode	EXIT		3594441		True				
ANR	3594493	Symbol	r2		3594441						
ANR	3594494	Symbol	UT32_MUL		3594441						
ANR	3594495	Symbol	a		3594441						
ANR	3594496	Symbol	res		3594441						
ANR	3594497	Symbol	r		3594441						
ANR	3594498	Symbol	b		3594441						
ANR	3594499	Symbol	& r2		3594441						
ANR	3594500	Symbol	* r		3594441						
ANR	3594501	ClassDef	<unnamed>	65:0:1604:1658							
ANR	3594502	ClassDef	reginfo	74:8:1670:1729							
ANR	3594503	DeclStmt									
ANR	3594504	Decl							ut32	ut32	regsize
ANR	3594505	DeclStmt									
ANR	3594506	Decl							ut32	ut32	regdelta
ANR	3594507	DeclStmt									
ANR	3594508	Decl							reginfo	reginfo	reginfo_t
ANR	3594509	DeclStmt									
ANR	3594510	Decl							reginfo_t	reginfo_t [ ARCH_LEN ]	reginf
ANR	3594511	Function	__strnlen	87:0:1852:2037							
ANR	3594512	FunctionDef	"__strnlen (const char * str , int len)"		3594511	0					
ANR	3594513	CompoundStatement		87:54:1906:2037	3594511	0					
ANR	3594514	IdentifierDeclStatement	int l = 0 ;	88:1:1909:1918	3594511	0	True				
ANR	3594515	IdentifierDecl	l = 0		3594511	0					
ANR	3594516	IdentifierDeclType	int		3594511	0					
ANR	3594517	Identifier	l		3594511	1					
ANR	3594518	AssignmentExpression	l = 0		3594511	2		=			
ANR	3594519	Identifier	l		3594511	0					
ANR	3594520	PrimaryExpression	0		3594511	1					
ANR	3594521	WhileStatement	while ( IS_PRINTABLE ( * str ) && -- len )		3594511	1					
ANR	3594522	Condition	IS_PRINTABLE ( * str ) && -- len	89:8:1928:1955	3594511	0	True				
ANR	3594523	AndExpression	IS_PRINTABLE ( * str ) && -- len		3594511	0		&&			
ANR	3594524	CallExpression	IS_PRINTABLE ( * str )		3594511	0					
ANR	3594525	Callee	IS_PRINTABLE		3594511	0					
ANR	3594526	Identifier	IS_PRINTABLE		3594511	0					
ANR	3594527	ArgumentList	* str		3594511	1					
ANR	3594528	Argument	* str		3594511	0					
ANR	3594529	UnaryOperationExpression	* str		3594511	0					
ANR	3594530	UnaryOperator	*		3594511	0					
ANR	3594531	Identifier	str		3594511	1					
ANR	3594532	UnaryExpression	-- len		3594511	1					
ANR	3594533	IncDec	--		3594511	0					
ANR	3594534	Identifier	len		3594511	1					
ANR	3594535	CompoundStatement		3:38:51:51	3594511	1					
ANR	3594536	IfStatement	if ( ( ( ut8 ) * str ) == 0xff )		3594511	0					
ANR	3594537	Condition	( ( ut8 ) * str ) == 0xff	90:6:1966:1984	3594511	0	True				
ANR	3594538	EqualityExpression	( ( ut8 ) * str ) == 0xff		3594511	0		==			
ANR	3594539	CastExpression	( ut8 ) * str		3594511	0					
ANR	3594540	CastTarget	ut8		3594511	0					
ANR	3594541	UnaryOperationExpression	* str		3594511	1					
ANR	3594542	UnaryOperator	*		3594511	0					
ANR	3594543	Identifier	str		3594511	1					
ANR	3594544	PrimaryExpression	0xff		3594511	1					
ANR	3594545	CompoundStatement		4:27:80:80	3594511	1					
ANR	3594546	BreakStatement	break ;	91:3:1992:1997	3594511	0	True				
ANR	3594547	ExpressionStatement	str ++	93:2:2005:2010	3594511	1	True				
ANR	3594548	PostIncDecOperationExpression	str ++		3594511	0					
ANR	3594549	Identifier	str		3594511	0					
ANR	3594550	IncDec	++		3594511	1					
ANR	3594551	ExpressionStatement	l ++	94:2:2014:2017	3594511	2	True				
ANR	3594552	PostIncDecOperationExpression	l ++		3594511	0					
ANR	3594553	Identifier	l		3594511	0					
ANR	3594554	IncDec	++		3594511	1					
ANR	3594555	ReturnStatement	return l + 1 ;	96:1:2023:2035	3594511	2	True				
ANR	3594556	AdditiveExpression	l + 1		3594511	0		+			
ANR	3594557	Identifier	l		3594511	0					
ANR	3594558	PrimaryExpression	1		3594511	1					
ANR	3594559	ReturnType	static inline int		3594511	1					
ANR	3594560	Identifier	__strnlen		3594511	2					
ANR	3594561	ParameterList	"const char * str , int len"		3594511	3					
ANR	3594562	Parameter	const char * str	87:28:1880:1894	3594511	0	True				
ANR	3594563	ParameterType	const char *		3594511	0					
ANR	3594564	Identifier	str		3594511	1					
ANR	3594565	Parameter	int len	87:45:1897:1903	3594511	1	True				
ANR	3594566	ParameterType	int		3594511	0					
ANR	3594567	Identifier	len		3594511	1					
ANR	3594568	CFGEntryNode	ENTRY		3594511		True				
ANR	3594569	CFGExitNode	EXIT		3594511		True				
ANR	3594570	Symbol	str		3594511						
ANR	3594571	Symbol	IS_PRINTABLE		3594511						
ANR	3594572	Symbol	len		3594511						
ANR	3594573	Symbol	* str		3594511						
ANR	3594574	Symbol	l		3594511						
ANR	3594575	Function	is_bin_etrel	99:0:2040:2116							
ANR	3594576	FunctionDef	is_bin_etrel (ELFOBJ * bin)		3594575	0					
ANR	3594577	CompoundStatement		99:38:2078:2116	3594575	0					
ANR	3594578	ReturnStatement	return bin -> ehdr . e_type == ET_REL ;	100:1:2081:2114	3594575	0	True				
ANR	3594579	EqualityExpression	bin -> ehdr . e_type == ET_REL		3594575	0		==			
ANR	3594580	MemberAccess	bin -> ehdr . e_type		3594575	0					
ANR	3594581	PtrMemberAccess	bin -> ehdr		3594575	0					
ANR	3594582	Identifier	bin		3594575	0					
ANR	3594583	Identifier	ehdr		3594575	1					
ANR	3594584	Identifier	e_type		3594575	1					
ANR	3594585	Identifier	ET_REL		3594575	1					
ANR	3594586	ReturnType	static bool		3594575	1					
ANR	3594587	Identifier	is_bin_etrel		3594575	2					
ANR	3594588	ParameterList	ELFOBJ * bin		3594575	3					
ANR	3594589	Parameter	ELFOBJ * bin	99:25:2065:2075	3594575	0	True				
ANR	3594590	ParameterType	ELFOBJ *		3594575	0					
ANR	3594591	Identifier	bin		3594575	1					
ANR	3594592	CFGEntryNode	ENTRY		3594575		True				
ANR	3594593	CFGExitNode	EXIT		3594575		True				
ANR	3594594	Symbol	bin -> ehdr . e_type		3594575						
ANR	3594595	Symbol	ET_REL		3594575						
ANR	3594596	Symbol	bin		3594575						
ANR	3594597	Symbol	bin -> ehdr		3594575						
ANR	3594598	Symbol	* bin		3594575						
ANR	3594599	Function	__is_valid_ident	103:0:2119:2285							
ANR	3594600	FunctionDef	__is_valid_ident (ELFOBJ * bin)		3594599	0					
ANR	3594601	CompoundStatement		103:42:2161:2285	3594599	0					
ANR	3594602	ReturnStatement	"return ! strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG ) || ! strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG ) ;"	104:1:2164:2283	3594599	0	True				
ANR	3594603	OrExpression	"! strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG ) || ! strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG )"		3594599	0		||			
ANR	3594604	UnaryOperationExpression	"! strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG )"		3594599	0					
ANR	3594605	UnaryOperator	!		3594599	0					
ANR	3594606	CallExpression	"strncmp ( ( char * ) bin -> ehdr . e_ident , ELFMAG , SELFMAG )"		3594599	1					
ANR	3594607	Callee	strncmp		3594599	0					
ANR	3594608	Identifier	strncmp		3594599	0					
ANR	3594609	ArgumentList	( char * ) bin -> ehdr . e_ident		3594599	1					
ANR	3594610	Argument	( char * ) bin -> ehdr . e_ident		3594599	0					
ANR	3594611	CastExpression	( char * ) bin -> ehdr . e_ident		3594599	0					
ANR	3594612	CastTarget	char *		3594599	0					
ANR	3594613	MemberAccess	bin -> ehdr . e_ident		3594599	1					
ANR	3594614	PtrMemberAccess	bin -> ehdr		3594599	0					
ANR	3594615	Identifier	bin		3594599	0					
ANR	3594616	Identifier	ehdr		3594599	1					
ANR	3594617	Identifier	e_ident		3594599	1					
ANR	3594618	Argument	ELFMAG		3594599	1					
ANR	3594619	Identifier	ELFMAG		3594599	0					
ANR	3594620	Argument	SELFMAG		3594599	2					
ANR	3594621	Identifier	SELFMAG		3594599	0					
ANR	3594622	UnaryOperationExpression	"! strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG )"		3594599	1					
ANR	3594623	UnaryOperator	!		3594599	0					
ANR	3594624	CallExpression	"strncmp ( ( char * ) bin -> ehdr . e_ident , CGCMAG , SCGCMAG )"		3594599	1					
ANR	3594625	Callee	strncmp		3594599	0					
ANR	3594626	Identifier	strncmp		3594599	0					
ANR	3594627	ArgumentList	( char * ) bin -> ehdr . e_ident		3594599	1					
ANR	3594628	Argument	( char * ) bin -> ehdr . e_ident		3594599	0					
ANR	3594629	CastExpression	( char * ) bin -> ehdr . e_ident		3594599	0					
ANR	3594630	CastTarget	char *		3594599	0					
ANR	3594631	MemberAccess	bin -> ehdr . e_ident		3594599	1					
ANR	3594632	PtrMemberAccess	bin -> ehdr		3594599	0					
ANR	3594633	Identifier	bin		3594599	0					
ANR	3594634	Identifier	ehdr		3594599	1					
ANR	3594635	Identifier	e_ident		3594599	1					
ANR	3594636	Argument	CGCMAG		3594599	1					
ANR	3594637	Identifier	CGCMAG		3594599	0					
ANR	3594638	Argument	SCGCMAG		3594599	2					
ANR	3594639	Identifier	SCGCMAG		3594599	0					
ANR	3594640	ReturnType	static bool		3594599	1					
ANR	3594641	Identifier	__is_valid_ident		3594599	2					
ANR	3594642	ParameterList	ELFOBJ * bin		3594599	3					
ANR	3594643	Parameter	ELFOBJ * bin	103:29:2148:2158	3594599	0	True				
ANR	3594644	ParameterType	ELFOBJ *		3594599	0					
ANR	3594645	Identifier	bin		3594599	1					
ANR	3594646	CFGEntryNode	ENTRY		3594599		True				
ANR	3594647	CFGExitNode	EXIT		3594599		True				
ANR	3594648	Symbol	strncmp		3594599						
ANR	3594649	Symbol	SELFMAG		3594599						
ANR	3594650	Symbol	SCGCMAG		3594599						
ANR	3594651	Symbol	bin		3594599						
ANR	3594652	Symbol	bin -> ehdr . e_ident		3594599						
ANR	3594653	Symbol	bin -> ehdr		3594599						
ANR	3594654	Symbol	CGCMAG		3594599						
ANR	3594655	Symbol	ELFMAG		3594599						
ANR	3594656	Symbol	* bin		3594599						
ANR	3594657	Function	init_ehdr	108:0:2288:8009							
ANR	3594658	FunctionDef	init_ehdr (ELFOBJ * bin)		3594657	0					
ANR	3594659	CompoundStatement		108:35:2323:8009	3594657	0					
ANR	3594660	IdentifierDeclStatement	ut8 e_ident [ EI_NIDENT ] ;	109:1:2326:2348	3594657	0	True				
ANR	3594661	IdentifierDecl	e_ident [ EI_NIDENT ]		3594657	0					
ANR	3594662	IdentifierDeclType	ut8 [ EI_NIDENT ]		3594657	0					
ANR	3594663	Identifier	e_ident		3594657	1					
ANR	3594664	Identifier	EI_NIDENT		3594657	2					
ANR	3594665	IdentifierDeclStatement	ut8 ehdr [ sizeof ( Elf_ ( Ehdr ) ) ] = { 0 } ;	110:1:2351:2388	3594657	1	True				
ANR	3594666	IdentifierDecl	ehdr [ sizeof ( Elf_ ( Ehdr ) ) ] = { 0 }		3594657	0					
ANR	3594667	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Ehdr ) ) ]		3594657	0					
ANR	3594668	Identifier	ehdr		3594657	1					
ANR	3594669	SizeofExpression	sizeof ( Elf_ ( Ehdr ) )		3594657	2					
ANR	3594670	Sizeof	sizeof		3594657	0					
ANR	3594671	CallExpression	Elf_ ( Ehdr )		3594657	1					
ANR	3594672	Callee	Elf_		3594657	0					
ANR	3594673	Identifier	Elf_		3594657	0					
ANR	3594674	ArgumentList	Ehdr		3594657	1					
ANR	3594675	Argument	Ehdr		3594657	0					
ANR	3594676	Identifier	Ehdr		3594657	0					
ANR	3594677	AssignmentExpression	ehdr [ sizeof ( Elf_ ( Ehdr ) ) ] = { 0 }		3594657	3		=			
ANR	3594678	Identifier	ehdr		3594657	0					
ANR	3594679	InitializerList	0		3594657	1					
ANR	3594680	PrimaryExpression	0		3594657	0					
ANR	3594681	IdentifierDeclStatement	"int i , len ;"	111:1:2391:2401	3594657	2	True				
ANR	3594682	IdentifierDecl	i		3594657	0					
ANR	3594683	IdentifierDeclType	int		3594657	0					
ANR	3594684	Identifier	i		3594657	1					
ANR	3594685	IdentifierDecl	len		3594657	1					
ANR	3594686	IdentifierDeclType	int		3594657	0					
ANR	3594687	Identifier	len		3594657	1					
ANR	3594688	IfStatement	"if ( r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT ) == - 1 )"		3594657	3					
ANR	3594689	Condition	"r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT ) == - 1"	112:5:2408:2458	3594657	0	True				
ANR	3594690	EqualityExpression	"r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT ) == - 1"		3594657	0		==			
ANR	3594691	CallExpression	"r_buf_read_at ( bin -> b , 0 , e_ident , EI_NIDENT )"		3594657	0					
ANR	3594692	Callee	r_buf_read_at		3594657	0					
ANR	3594693	Identifier	r_buf_read_at		3594657	0					
ANR	3594694	ArgumentList	bin -> b		3594657	1					
ANR	3594695	Argument	bin -> b		3594657	0					
ANR	3594696	PtrMemberAccess	bin -> b		3594657	0					
ANR	3594697	Identifier	bin		3594657	0					
ANR	3594698	Identifier	b		3594657	1					
ANR	3594699	Argument	0		3594657	1					
ANR	3594700	PrimaryExpression	0		3594657	0					
ANR	3594701	Argument	e_ident		3594657	2					
ANR	3594702	Identifier	e_ident		3594657	0					
ANR	3594703	Argument	EI_NIDENT		3594657	3					
ANR	3594704	Identifier	EI_NIDENT		3594657	0					
ANR	3594705	UnaryOperationExpression	- 1		3594657	1					
ANR	3594706	UnaryOperator	-		3594657	0					
ANR	3594707	PrimaryExpression	1		3594657	1					
ANR	3594708	CompoundStatement		5:58:137:137	3594657	1					
ANR	3594709	ExpressionStatement	"bprintf ( ""read (magic)\\n"" )"	113:2:2465:2491	3594657	0	True				
ANR	3594710	CallExpression	"bprintf ( ""read (magic)\\n"" )"		3594657	0					
ANR	3594711	Callee	bprintf		3594657	0					
ANR	3594712	Identifier	bprintf		3594657	0					
ANR	3594713	ArgumentList	"""read (magic)\\n"""		3594657	1					
ANR	3594714	Argument	"""read (magic)\\n"""		3594657	0					
ANR	3594715	PrimaryExpression	"""read (magic)\\n"""		3594657	0					
ANR	3594716	ReturnStatement	return false ;	114:2:2495:2507	3594657	1	True				
ANR	3594717	Identifier	false		3594657	0					
ANR	3594718	Statement	sdb_set	116:1:2513:2519	3594657	4	True				
ANR	3594719	Statement	(	116:9:2521:2521	3594657	5	True				
ANR	3594720	Statement	bin	116:10:2522:2524	3594657	6	True				
ANR	3594721	Statement	->	116:13:2525:2526	3594657	7	True				
ANR	3594722	Statement	kv	116:15:2527:2528	3594657	8	True				
ANR	3594723	Statement	","	116:17:2529:2529	3594657	9	True				
ANR	3594724	Statement	"""elf_type.cparse"""	116:19:2531:2547	3594657	10	True				
ANR	3594725	Statement	","	116:36:2548:2548	3594657	11	True				
ANR	3594726	Statement	"""enum elf_type { ET_NONE=0, ET_REL=1,"""	116:38:2550:2587	3594657	12	True				
ANR	3594727	Statement	""" ET_EXEC=2, ET_DYN=3, ET_CORE=4, ET_LOOS=0xfe00, ET_HIOS=0xfeff,"""	117:3:2592:2657	3594657	13	True				
ANR	3594728	Statement	""" ET_LOPROC=0xff00, ET_HIPROC=0xffff };"""	118:3:2662:2701	3594657	14	True				
ANR	3594729	Statement	","	118:43:2702:2702	3594657	15	True				
ANR	3594730	Statement	0	118:45:2704:2704	3594657	16	True				
ANR	3594731	Statement	)	118:46:2705:2705	3594657	17	True				
ANR	3594732	ExpressionStatement		118:47:2706:2706	3594657	18	True				
ANR	3594733	Statement	sdb_set	119:1:2709:2715	3594657	19	True				
ANR	3594734	Statement	(	119:9:2717:2717	3594657	20	True				
ANR	3594735	Statement	bin	119:10:2718:2720	3594657	21	True				
ANR	3594736	Statement	->	119:13:2721:2722	3594657	22	True				
ANR	3594737	Statement	kv	119:15:2723:2724	3594657	23	True				
ANR	3594738	Statement	","	119:17:2725:2725	3594657	24	True				
ANR	3594739	Statement	"""elf_machine.cparse"""	119:19:2727:2746	3594657	25	True				
ANR	3594740	Statement	","	119:39:2747:2747	3594657	26	True				
ANR	3594741	Statement	"""enum elf_machine {EM_NONE=0, EM_M32=1,"""	119:41:2749:2788	3594657	27	True				
ANR	3594742	Statement	""" EM_SPARC=2, EM_386=3, EM_68K=4, EM_88K=5, EM_IAMCU=6, EM_860=7, EM_MIPS=8,"""	120:3:2793:2869	3594657	28	True				
ANR	3594743	Statement	""" EM_S370=9, EM_MIPS_RS3_LE=10, EM_RS6000=11, EM_PARISC=15, EM_nCUBE=16,"""	121:3:2874:2946	3594657	29	True				
ANR	3594744	Statement	""" EM_VPP500=17, EM_SPARC32PLUS=18, EM_960=19, EM_PPC=20, EM_PPC64=21, EM_S390=22,"""	122:3:2951:3032	3594657	30	True				
ANR	3594745	Statement	""" EM_SPU=23, EM_V800=36, EM_FR20=37, EM_RH32=38, EM_RCE=39, EM_ARM=40,"""	123:3:3037:3107	3594657	31	True				
ANR	3594746	Statement	""" EM_ALPHA=41, EM_SH=42, EM_SPARCV9=43, EM_TRICORE=44, EM_ARC=45, EM_H8_300=46,"""	124:3:3112:3191	3594657	32	True				
ANR	3594747	Statement	""" EM_H8_300H=47, EM_H8S=48, EM_H8_500=49, EM_IA_64=50, EM_MIPS_X=51,"""	125:3:3196:3264	3594657	33	True				
ANR	3594748	Statement	""" EM_COLDFIRE=52, EM_68HC12=53, EM_MMA=54, EM_PCP=55, EM_NCPU=56, EM_NDR1=57,"""	126:3:3269:3346	3594657	34	True				
ANR	3594749	Statement	""" EM_STARCORE=58, EM_ME16=59, EM_ST100=60, EM_TINYJ=61, EM_X86_64=62, EM_PDSP=63,"""	127:3:3351:3432	3594657	35	True				
ANR	3594750	Statement	""" EM_PDP10=64, EM_PDP11=65, EM_FX66=66, EM_ST9PLUS=67, EM_ST7=68, EM_68HC16=69,"""	128:3:3437:3516	3594657	36	True				
ANR	3594751	Statement	""" EM_68HC11=70, EM_68HC08=71, EM_68HC05=72, EM_SVX=73, EM_ST19=74, EM_VAX=75,"""	129:3:3521:3598	3594657	37	True				
ANR	3594752	Statement	""" EM_CRIS=76, EM_JAVELIN=77, EM_FIREPATH=78, EM_ZSP=79, EM_MMIX=80, EM_HUANY=81,"""	130:3:3603:3683	3594657	38	True				
ANR	3594753	Statement	""" EM_PRISM=82, EM_AVR=83, EM_FR30=84, EM_D10V=85, EM_D30V=86, EM_V850=87,"""	131:3:3688:3761	3594657	39	True				
ANR	3594754	Statement	""" EM_M32R=88, EM_MN10300=89, EM_MN10200=90, EM_PJ=91, EM_OPENRISC=92,"""	132:3:3766:3835	3594657	40	True				
ANR	3594755	Statement	""" EM_ARC_COMPACT=93, EM_XTENSA=94, EM_VIDEOCORE=95, EM_TMM_GPP=96, EM_NS32K=97,"""	133:3:3840:3919	3594657	41	True				
ANR	3594756	Statement	""" EM_TPC=98, EM_SNP1K=99, EM_ST200=100, EM_IP2K=101, EM_MAX=102, EM_CR=103,"""	134:3:3924:3999	3594657	42	True				
ANR	3594757	Statement	""" EM_F2MC16=104, EM_MSP430=105, EM_BLACKFIN=106, EM_SE_C33=107, EM_SEP=108,"""	135:3:4004:4079	3594657	43	True				
ANR	3594758	Statement	""" EM_ARCA=109, EM_UNICORE=110, EM_EXCESS=111, EM_DXP=112, EM_ALTERA_NIOS2=113,"""	136:3:4084:4162	3594657	44	True				
ANR	3594759	Statement	""" EM_CRX=114, EM_XGATE=115, EM_C166=116, EM_M16C=117, EM_DSPIC30F=118, EM_CE=119,"""	137:3:4167:4248	3594657	45	True				
ANR	3594760	Statement	""" EM_M32C=120, EM_TSK3000=131, EM_RS08=132, EM_SHARC=133, EM_ECOG2=134,"""	138:3:4253:4324	3594657	46	True				
ANR	3594761	Statement	""" EM_SCORE7=135, EM_DSP24=136, EM_VIDEOCORE3=137, EM_LATTICEMICO32=138,"""	139:3:4329:4400	3594657	47	True				
ANR	3594762	Statement	""" EM_SE_C17=139, EM_TI_C6000=140, EM_TI_C2000=141, EM_TI_C5500=142,"""	140:3:4405:4472	3594657	48	True				
ANR	3594763	Statement	""" EM_TI_ARP32=143, EM_TI_PRU=144,"""	141:3:4477:4510	3594657	49	True				
ANR	3594764	Statement	""" EM_MMDSP_PLUS=160, EM_CYPRESS_M8C=161, EM_R32C=162, EM_TRIMEDIA=163,"""	142:3:4515:4585	3594657	50	True				
ANR	3594765	Statement	""" EM_HEXAGON=164, EM_8051=165, EM_STXP7X=166, EM_NDS32=167,"""	143:3:4590:4649	3594657	51	True				
ANR	3594766	Statement	""" EM_ECOG1X=168, EM_MAXQ30=169, EM_XIMO16=170, EM_MANIK=171, EM_CRAYNV2=172,"""	144:3:4654:4730	3594657	52	True				
ANR	3594767	Statement	""" EM_RX=173, EM_METAG=174, EM_MCST_ELBRUS=175, EM_ECOG16=176, EM_CR16=177,"""	145:3:4735:4809	3594657	53	True				
ANR	3594768	Statement	""" EM_ETPU=178, EM_SLE9X=179, EM_L10M=180, EM_K10M=181, EM_AARCH64=183,"""	146:3:4814:4884	3594657	54	True				
ANR	3594769	Statement	""" EM_AVR32=185, EM_STM8=186, EM_TILE64=187, EM_TILEPRO=188, EM_CUDA=190,"""	147:3:4889:4961	3594657	55	True				
ANR	3594770	Statement	""" EM_TILEGX=191, EM_CLOUDSHIELD=192, EM_COREA_1ST=193, EM_COREA_2ND=194,"""	148:3:4966:5038	3594657	56	True				
ANR	3594771	Statement	""" EM_ARC_COMPACT2=195, EM_OPEN8=196, EM_RL78=197, EM_VIDEOCORE5=198,"""	149:3:5043:5111	3594657	57	True				
ANR	3594772	Statement	""" EM_78KOR=199, EM_56800EX=200, EM_BA1=201, EM_BA2=202, EM_XCORE=203,"""	150:3:5116:5185	3594657	58	True				
ANR	3594773	Statement	""" EM_MCHP_PIC=204, EM_INTEL205=205, EM_INTEL206=206, EM_INTEL207=207,"""	151:3:5190:5259	3594657	59	True				
ANR	3594774	Statement	""" EM_INTEL208=208, EM_INTEL209=209, EM_KM32=210, EM_KMX32=211, EM_KMX16=212,"""	152:3:5264:5340	3594657	60	True				
ANR	3594775	Statement	""" EM_KMX8=213, EM_KVARC=214, EM_CDP=215, EM_COGE=216, EM_COOL=217, EM_NORC=218,"""	153:3:5345:5424	3594657	61	True				
ANR	3594776	Statement	""" EM_CSR_KALIMBA=219, EM_AMDGPU=224, EM_RISCV=243, EM_LANAI=244, EM_BPF=247,"""	154:3:5429:5505	3594657	62	True				
ANR	3594777	Statement	""" EM_CSKY=252}"""	155:3:5510:5524	3594657	63	True				
ANR	3594778	Statement	","	155:18:5525:5525	3594657	64	True				
ANR	3594779	Statement	0	155:20:5527:5527	3594657	65	True				
ANR	3594780	Statement	)	155:21:5528:5528	3594657	66	True				
ANR	3594781	ExpressionStatement		155:22:5529:5529	3594657	67	True				
ANR	3594782	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_class.cparse"" , ""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"" , 0 )"	156:1:5532:5636	3594657	68	True				
ANR	3594783	CallExpression	"sdb_set ( bin -> kv , ""elf_class.cparse"" , ""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"" , 0 )"		3594657	0					
ANR	3594784	Callee	sdb_set		3594657	0					
ANR	3594785	Identifier	sdb_set		3594657	0					
ANR	3594786	ArgumentList	bin -> kv		3594657	1					
ANR	3594787	Argument	bin -> kv		3594657	0					
ANR	3594788	PtrMemberAccess	bin -> kv		3594657	0					
ANR	3594789	Identifier	bin		3594657	0					
ANR	3594790	Identifier	kv		3594657	1					
ANR	3594791	Argument	"""elf_class.cparse"""		3594657	1					
ANR	3594792	PrimaryExpression	"""elf_class.cparse"""		3594657	0					
ANR	3594793	Argument	"""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"""		3594657	2					
ANR	3594794	PrimaryExpression	"""enum elf_class {ELFCLASSNONE=0, ELFCLASS32=1, ELFCLASS64=2};"""		3594657	0					
ANR	3594795	Argument	0		3594657	3					
ANR	3594796	PrimaryExpression	0		3594657	0					
ANR	3594797	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_data.cparse"" , ""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"" , 0 )"	157:1:5639:5742	3594657	69	True				
ANR	3594798	CallExpression	"sdb_set ( bin -> kv , ""elf_data.cparse"" , ""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"" , 0 )"		3594657	0					
ANR	3594799	Callee	sdb_set		3594657	0					
ANR	3594800	Identifier	sdb_set		3594657	0					
ANR	3594801	ArgumentList	bin -> kv		3594657	1					
ANR	3594802	Argument	bin -> kv		3594657	0					
ANR	3594803	PtrMemberAccess	bin -> kv		3594657	0					
ANR	3594804	Identifier	bin		3594657	0					
ANR	3594805	Identifier	kv		3594657	1					
ANR	3594806	Argument	"""elf_data.cparse"""		3594657	1					
ANR	3594807	PrimaryExpression	"""elf_data.cparse"""		3594657	0					
ANR	3594808	Argument	"""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"""		3594657	2					
ANR	3594809	PrimaryExpression	"""enum elf_data {ELFDATANONE=0, ELFDATA2LSB=1, ELFDATA2MSB=2};"""		3594657	0					
ANR	3594810	Argument	0		3594657	3					
ANR	3594811	PrimaryExpression	0		3594657	0					
ANR	3594812	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_hdr_version.cparse"" , ""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"	158:1:5745:5842	3594657	70	True				
ANR	3594813	CallExpression	"sdb_set ( bin -> kv , ""elf_hdr_version.cparse"" , ""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"		3594657	0					
ANR	3594814	Callee	sdb_set		3594657	0					
ANR	3594815	Identifier	sdb_set		3594657	0					
ANR	3594816	ArgumentList	bin -> kv		3594657	1					
ANR	3594817	Argument	bin -> kv		3594657	0					
ANR	3594818	PtrMemberAccess	bin -> kv		3594657	0					
ANR	3594819	Identifier	bin		3594657	0					
ANR	3594820	Identifier	kv		3594657	1					
ANR	3594821	Argument	"""elf_hdr_version.cparse"""		3594657	1					
ANR	3594822	PrimaryExpression	"""elf_hdr_version.cparse"""		3594657	0					
ANR	3594823	Argument	"""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"""		3594657	2					
ANR	3594824	PrimaryExpression	"""enum elf_hdr_version {EV_NONE=0, EV_CURRENT=1};"""		3594657	0					
ANR	3594825	Argument	0		3594657	3					
ANR	3594826	PrimaryExpression	0		3594657	0					
ANR	3594827	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_obj_version.cparse"" , ""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"	159:1:5845:5942	3594657	71	True				
ANR	3594828	CallExpression	"sdb_set ( bin -> kv , ""elf_obj_version.cparse"" , ""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"" , 0 )"		3594657	0					
ANR	3594829	Callee	sdb_set		3594657	0					
ANR	3594830	Identifier	sdb_set		3594657	0					
ANR	3594831	ArgumentList	bin -> kv		3594657	1					
ANR	3594832	Argument	bin -> kv		3594657	0					
ANR	3594833	PtrMemberAccess	bin -> kv		3594657	0					
ANR	3594834	Identifier	bin		3594657	0					
ANR	3594835	Identifier	kv		3594657	1					
ANR	3594836	Argument	"""elf_obj_version.cparse"""		3594657	1					
ANR	3594837	PrimaryExpression	"""elf_obj_version.cparse"""		3594657	0					
ANR	3594838	Argument	"""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"""		3594657	2					
ANR	3594839	PrimaryExpression	"""enum elf_obj_version {EV_NONE=0, EV_CURRENT=1};"""		3594657	0					
ANR	3594840	Argument	0		3594657	3					
ANR	3594841	PrimaryExpression	0		3594657	0					
ANR	3594842	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.offset"" , 0 , 0 )"	160:1:5945:5993	3594657	72	True				
ANR	3594843	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.offset"" , 0 , 0 )"		3594657	0					
ANR	3594844	Callee	sdb_num_set		3594657	0					
ANR	3594845	Identifier	sdb_num_set		3594657	0					
ANR	3594846	ArgumentList	bin -> kv		3594657	1					
ANR	3594847	Argument	bin -> kv		3594657	0					
ANR	3594848	PtrMemberAccess	bin -> kv		3594657	0					
ANR	3594849	Identifier	bin		3594657	0					
ANR	3594850	Identifier	kv		3594657	1					
ANR	3594851	Argument	"""elf_header.offset"""		3594657	1					
ANR	3594852	PrimaryExpression	"""elf_header.offset"""		3594657	0					
ANR	3594853	Argument	0		3594657	2					
ANR	3594854	PrimaryExpression	0		3594657	0					
ANR	3594855	Argument	0		3594657	3					
ANR	3594856	PrimaryExpression	0		3594657	0					
ANR	3594857	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.size"" , sizeof ( Elf_ ( Ehdr ) ) , 0 )"	161:1:5996:6060	3594657	73	True				
ANR	3594858	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.size"" , sizeof ( Elf_ ( Ehdr ) ) , 0 )"		3594657	0					
ANR	3594859	Callee	sdb_num_set		3594657	0					
ANR	3594860	Identifier	sdb_num_set		3594657	0					
ANR	3594861	ArgumentList	bin -> kv		3594657	1					
ANR	3594862	Argument	bin -> kv		3594657	0					
ANR	3594863	PtrMemberAccess	bin -> kv		3594657	0					
ANR	3594864	Identifier	bin		3594657	0					
ANR	3594865	Identifier	kv		3594657	1					
ANR	3594866	Argument	"""elf_header.size"""		3594657	1					
ANR	3594867	PrimaryExpression	"""elf_header.size"""		3594657	0					
ANR	3594868	Argument	sizeof ( Elf_ ( Ehdr ) )		3594657	2					
ANR	3594869	SizeofExpression	sizeof ( Elf_ ( Ehdr ) )		3594657	0					
ANR	3594870	Sizeof	sizeof		3594657	0					
ANR	3594871	CallExpression	Elf_ ( Ehdr )		3594657	1					
ANR	3594872	Callee	Elf_		3594657	0					
ANR	3594873	Identifier	Elf_		3594657	0					
ANR	3594874	ArgumentList	Ehdr		3594657	1					
ANR	3594875	Argument	Ehdr		3594657	0					
ANR	3594876	Identifier	Ehdr		3594657	0					
ANR	3594877	Argument	0		3594657	3					
ANR	3594878	PrimaryExpression	0		3594657	0					
ANR	3594879	Statement	sdb_set	162:1:6063:6069	3594657	74	True				
ANR	3594880	Statement	(	162:9:6071:6071	3594657	75	True				
ANR	3594881	Statement	bin	162:10:6072:6074	3594657	76	True				
ANR	3594882	Statement	->	162:13:6075:6076	3594657	77	True				
ANR	3594883	Statement	kv	162:15:6077:6078	3594657	78	True				
ANR	3594884	Statement	","	162:17:6079:6079	3594657	79	True				
ANR	3594885	Statement	"""elf_ident.format"""	162:19:6081:6098	3594657	80	True				
ANR	3594886	Statement	","	162:37:6099:6099	3594657	81	True				
ANR	3594887	Statement	"""[4]z[1]E[1]E[1]E.::"""	162:39:6101:6121	3594657	82	True				
ANR	3594888	Statement	""" magic (elf_class)class (elf_data)data (elf_hdr_version)version"""	163:10:6133:6197	3594657	83	True				
ANR	3594889	Statement	","	163:75:6198:6198	3594657	84	True				
ANR	3594890	Statement	0	163:77:6200:6200	3594657	85	True				
ANR	3594891	Statement	)	163:78:6201:6201	3594657	86	True				
ANR	3594892	ExpressionStatement		163:79:6202:6202	3594657	87	True				
ANR	3594893	Statement	sdb_set	165:1:6221:6227	3594657	88	True				
ANR	3594894	Statement	(	165:9:6229:6229	3594657	89	True				
ANR	3594895	Statement	bin	165:10:6230:6232	3594657	90	True				
ANR	3594896	Statement	->	165:13:6233:6234	3594657	91	True				
ANR	3594897	Statement	kv	165:15:6235:6236	3594657	92	True				
ANR	3594898	Statement	","	165:17:6237:6237	3594657	93	True				
ANR	3594899	Statement	"""elf_header.format"""	165:19:6239:6257	3594657	94	True				
ANR	3594900	Statement	","	165:38:6258:6258	3594657	95	True				
ANR	3594901	Statement	"""?[2]E[2]E[4]Eqqqxwwwwww"""	165:40:6260:6284	3594657	96	True				
ANR	3594902	Statement	""" (elf_ident)ident (elf_type)type (elf_machine)machine (elf_obj_version)version"""	166:2:6288:6367	3594657	97	True				
ANR	3594903	Statement	""" entry phoff shoff flags ehsize phentsize phnum shentsize shnum shstrndx"""	167:2:6371:6444	3594657	98	True				
ANR	3594904	Statement	","	167:76:6445:6445	3594657	99	True				
ANR	3594905	Statement	0	167:78:6447:6447	3594657	100	True				
ANR	3594906	Statement	)	167:79:6448:6448	3594657	101	True				
ANR	3594907	ExpressionStatement		167:80:6449:6449	3594657	102	True				
ANR	3594908	ExpressionStatement	bin -> endian = ( e_ident [ EI_DATA ] == ELFDATA2MSB ) ? 1 : 0	173:1:6696:6749	3594657	103	True				
ANR	3594909	AssignmentExpression	bin -> endian = ( e_ident [ EI_DATA ] == ELFDATA2MSB ) ? 1 : 0		3594657	0		=			
ANR	3594910	PtrMemberAccess	bin -> endian		3594657	0					
ANR	3594911	Identifier	bin		3594657	0					
ANR	3594912	Identifier	endian		3594657	1					
ANR	3594913	ConditionalExpression	( e_ident [ EI_DATA ] == ELFDATA2MSB ) ? 1 : 0		3594657	1					
ANR	3594914	Condition	e_ident [ EI_DATA ] == ELFDATA2MSB		3594657	0					
ANR	3594915	EqualityExpression	e_ident [ EI_DATA ] == ELFDATA2MSB		3594657	0		==			
ANR	3594916	ArrayIndexing	e_ident [ EI_DATA ]		3594657	0					
ANR	3594917	Identifier	e_ident		3594657	0					
ANR	3594918	Identifier	EI_DATA		3594657	1					
ANR	3594919	Identifier	ELFDATA2MSB		3594657	1					
ANR	3594920	PrimaryExpression	1		3594657	1					
ANR	3594921	PrimaryExpression	0		3594657	2					
ANR	3594922	ExpressionStatement	"memset ( & bin -> ehdr , 0 , sizeof ( Elf_ ( Ehdr ) ) )"	174:1:6752:6795	3594657	104	True				
ANR	3594923	CallExpression	"memset ( & bin -> ehdr , 0 , sizeof ( Elf_ ( Ehdr ) ) )"		3594657	0					
ANR	3594924	Callee	memset		3594657	0					
ANR	3594925	Identifier	memset		3594657	0					
ANR	3594926	ArgumentList	& bin -> ehdr		3594657	1					
ANR	3594927	Argument	& bin -> ehdr		3594657	0					
ANR	3594928	UnaryOperationExpression	& bin -> ehdr		3594657	0					
ANR	3594929	UnaryOperator	&		3594657	0					
ANR	3594930	PtrMemberAccess	bin -> ehdr		3594657	1					
ANR	3594931	Identifier	bin		3594657	0					
ANR	3594932	Identifier	ehdr		3594657	1					
ANR	3594933	Argument	0		3594657	1					
ANR	3594934	PrimaryExpression	0		3594657	0					
ANR	3594935	Argument	sizeof ( Elf_ ( Ehdr ) )		3594657	2					
ANR	3594936	SizeofExpression	sizeof ( Elf_ ( Ehdr ) )		3594657	0					
ANR	3594937	Sizeof	sizeof		3594657	0					
ANR	3594938	CallExpression	Elf_ ( Ehdr )		3594657	1					
ANR	3594939	Callee	Elf_		3594657	0					
ANR	3594940	Identifier	Elf_		3594657	0					
ANR	3594941	ArgumentList	Ehdr		3594657	1					
ANR	3594942	Argument	Ehdr		3594657	0					
ANR	3594943	Identifier	Ehdr		3594657	0					
ANR	3594944	ExpressionStatement	"len = r_buf_read_at ( bin -> b , 0 , ehdr , sizeof ( ehdr ) )"	175:1:6798:6850	3594657	105	True				
ANR	3594945	AssignmentExpression	"len = r_buf_read_at ( bin -> b , 0 , ehdr , sizeof ( ehdr ) )"		3594657	0		=			
ANR	3594946	Identifier	len		3594657	0					
ANR	3594947	CallExpression	"r_buf_read_at ( bin -> b , 0 , ehdr , sizeof ( ehdr ) )"		3594657	1					
ANR	3594948	Callee	r_buf_read_at		3594657	0					
ANR	3594949	Identifier	r_buf_read_at		3594657	0					
ANR	3594950	ArgumentList	bin -> b		3594657	1					
ANR	3594951	Argument	bin -> b		3594657	0					
ANR	3594952	PtrMemberAccess	bin -> b		3594657	0					
ANR	3594953	Identifier	bin		3594657	0					
ANR	3594954	Identifier	b		3594657	1					
ANR	3594955	Argument	0		3594657	1					
ANR	3594956	PrimaryExpression	0		3594657	0					
ANR	3594957	Argument	ehdr		3594657	2					
ANR	3594958	Identifier	ehdr		3594657	0					
ANR	3594959	Argument	sizeof ( ehdr )		3594657	3					
ANR	3594960	SizeofExpression	sizeof ( ehdr )		3594657	0					
ANR	3594961	Sizeof	sizeof		3594657	0					
ANR	3594962	SizeofOperand	ehdr		3594657	1					
ANR	3594963	IfStatement	if ( len < 32 )		3594657	106					
ANR	3594964	Condition	len < 32	176:5:6857:6864	3594657	0	True				
ANR	3594965	RelationalExpression	len < 32		3594657	0		<			
ANR	3594966	Identifier	len		3594657	0					
ANR	3594967	PrimaryExpression	32		3594657	1					
ANR	3594968	CompoundStatement		69:15:4543:4543	3594657	1					
ANR	3594969	ExpressionStatement	"bprintf ( ""read (ehdr)\\n"" )"	177:2:6908:6933	3594657	0	True				
ANR	3594970	CallExpression	"bprintf ( ""read (ehdr)\\n"" )"		3594657	0					
ANR	3594971	Callee	bprintf		3594657	0					
ANR	3594972	Identifier	bprintf		3594657	0					
ANR	3594973	ArgumentList	"""read (ehdr)\\n"""		3594657	1					
ANR	3594974	Argument	"""read (ehdr)\\n"""		3594657	0					
ANR	3594975	PrimaryExpression	"""read (ehdr)\\n"""		3594657	0					
ANR	3594976	ReturnStatement	return false ;	178:2:6937:6949	3594657	1	True				
ANR	3594977	Identifier	false		3594657	0					
ANR	3594978	ExpressionStatement	"memcpy ( & bin -> ehdr . e_ident , ehdr , 16 )"	181:1:6986:7023	3594657	107	True				
ANR	3594979	CallExpression	"memcpy ( & bin -> ehdr . e_ident , ehdr , 16 )"		3594657	0					
ANR	3594980	Callee	memcpy		3594657	0					
ANR	3594981	Identifier	memcpy		3594657	0					
ANR	3594982	ArgumentList	& bin -> ehdr . e_ident		3594657	1					
ANR	3594983	Argument	& bin -> ehdr . e_ident		3594657	0					
ANR	3594984	UnaryOperationExpression	& bin -> ehdr . e_ident		3594657	0					
ANR	3594985	UnaryOperator	&		3594657	0					
ANR	3594986	MemberAccess	bin -> ehdr . e_ident		3594657	1					
ANR	3594987	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3594988	Identifier	bin		3594657	0					
ANR	3594989	Identifier	ehdr		3594657	1					
ANR	3594990	Identifier	e_ident		3594657	1					
ANR	3594991	Argument	ehdr		3594657	1					
ANR	3594992	Identifier	ehdr		3594657	0					
ANR	3594993	Argument	16		3594657	2					
ANR	3594994	PrimaryExpression	16		3594657	0					
ANR	3594995	IfStatement	if ( ! __is_valid_ident ( bin ) )		3594657	108					
ANR	3594996	Condition	! __is_valid_ident ( bin )	182:5:7030:7052	3594657	0	True				
ANR	3594997	UnaryOperationExpression	! __is_valid_ident ( bin )		3594657	0					
ANR	3594998	UnaryOperator	!		3594657	0					
ANR	3594999	CallExpression	__is_valid_ident ( bin )		3594657	1					
ANR	3595000	Callee	__is_valid_ident		3594657	0					
ANR	3595001	Identifier	__is_valid_ident		3594657	0					
ANR	3595002	ArgumentList	bin		3594657	1					
ANR	3595003	Argument	bin		3594657	0					
ANR	3595004	Identifier	bin		3594657	0					
ANR	3595005	CompoundStatement		75:30:4731:4731	3594657	1					
ANR	3595006	ReturnStatement	return false ;	183:2:7059:7071	3594657	0	True				
ANR	3595007	Identifier	false		3594657	0					
ANR	3595008	ExpressionStatement	i = 16	185:1:7077:7083	3594657	109	True				
ANR	3595009	AssignmentExpression	i = 16		3594657	0		=			
ANR	3595010	Identifier	i		3594657	0					
ANR	3595011	PrimaryExpression	16		3594657	1					
ANR	3595012	ExpressionStatement	"bin -> ehdr . e_type = READ16 ( ehdr , i )"	187:1:7135:7170	3594657	110	True				
ANR	3595013	AssignmentExpression	"bin -> ehdr . e_type = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595014	MemberAccess	bin -> ehdr . e_type		3594657	0					
ANR	3595015	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595016	Identifier	bin		3594657	0					
ANR	3595017	Identifier	ehdr		3594657	1					
ANR	3595018	Identifier	e_type		3594657	1					
ANR	3595019	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595020	Callee	READ16		3594657	0					
ANR	3595021	Identifier	READ16		3594657	0					
ANR	3595022	ArgumentList	ehdr		3594657	1					
ANR	3595023	Argument	ehdr		3594657	0					
ANR	3595024	Identifier	ehdr		3594657	0					
ANR	3595025	Argument	i		3594657	1					
ANR	3595026	Identifier	i		3594657	0					
ANR	3595027	ExpressionStatement	"bin -> ehdr . e_machine = READ16 ( ehdr , i )"	188:1:7173:7211	3594657	111	True				
ANR	3595028	AssignmentExpression	"bin -> ehdr . e_machine = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595029	MemberAccess	bin -> ehdr . e_machine		3594657	0					
ANR	3595030	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595031	Identifier	bin		3594657	0					
ANR	3595032	Identifier	ehdr		3594657	1					
ANR	3595033	Identifier	e_machine		3594657	1					
ANR	3595034	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595035	Callee	READ16		3594657	0					
ANR	3595036	Identifier	READ16		3594657	0					
ANR	3595037	ArgumentList	ehdr		3594657	1					
ANR	3595038	Argument	ehdr		3594657	0					
ANR	3595039	Identifier	ehdr		3594657	0					
ANR	3595040	Argument	i		3594657	1					
ANR	3595041	Identifier	i		3594657	0					
ANR	3595042	ExpressionStatement	"bin -> ehdr . e_version = READ32 ( ehdr , i )"	189:1:7214:7252	3594657	112	True				
ANR	3595043	AssignmentExpression	"bin -> ehdr . e_version = READ32 ( ehdr , i )"		3594657	0		=			
ANR	3595044	MemberAccess	bin -> ehdr . e_version		3594657	0					
ANR	3595045	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595046	Identifier	bin		3594657	0					
ANR	3595047	Identifier	ehdr		3594657	1					
ANR	3595048	Identifier	e_version		3594657	1					
ANR	3595049	CallExpression	"READ32 ( ehdr , i )"		3594657	1					
ANR	3595050	Callee	READ32		3594657	0					
ANR	3595051	Identifier	READ32		3594657	0					
ANR	3595052	ArgumentList	ehdr		3594657	1					
ANR	3595053	Argument	ehdr		3594657	0					
ANR	3595054	Identifier	ehdr		3594657	0					
ANR	3595055	Argument	i		3594657	1					
ANR	3595056	Identifier	i		3594657	0					
ANR	3595057	ExpressionStatement	"bin -> ehdr . e_entry = READ64 ( ehdr , i )"	191:1:7271:7307	3594657	113	True				
ANR	3595058	AssignmentExpression	"bin -> ehdr . e_entry = READ64 ( ehdr , i )"		3594657	0		=			
ANR	3595059	MemberAccess	bin -> ehdr . e_entry		3594657	0					
ANR	3595060	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595061	Identifier	bin		3594657	0					
ANR	3595062	Identifier	ehdr		3594657	1					
ANR	3595063	Identifier	e_entry		3594657	1					
ANR	3595064	CallExpression	"READ64 ( ehdr , i )"		3594657	1					
ANR	3595065	Callee	READ64		3594657	0					
ANR	3595066	Identifier	READ64		3594657	0					
ANR	3595067	ArgumentList	ehdr		3594657	1					
ANR	3595068	Argument	ehdr		3594657	0					
ANR	3595069	Identifier	ehdr		3594657	0					
ANR	3595070	Argument	i		3594657	1					
ANR	3595071	Identifier	i		3594657	0					
ANR	3595072	ExpressionStatement	"bin -> ehdr . e_phoff = READ64 ( ehdr , i )"	192:1:7310:7346	3594657	114	True				
ANR	3595073	AssignmentExpression	"bin -> ehdr . e_phoff = READ64 ( ehdr , i )"		3594657	0		=			
ANR	3595074	MemberAccess	bin -> ehdr . e_phoff		3594657	0					
ANR	3595075	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595076	Identifier	bin		3594657	0					
ANR	3595077	Identifier	ehdr		3594657	1					
ANR	3595078	Identifier	e_phoff		3594657	1					
ANR	3595079	CallExpression	"READ64 ( ehdr , i )"		3594657	1					
ANR	3595080	Callee	READ64		3594657	0					
ANR	3595081	Identifier	READ64		3594657	0					
ANR	3595082	ArgumentList	ehdr		3594657	1					
ANR	3595083	Argument	ehdr		3594657	0					
ANR	3595084	Identifier	ehdr		3594657	0					
ANR	3595085	Argument	i		3594657	1					
ANR	3595086	Identifier	i		3594657	0					
ANR	3595087	ExpressionStatement	"bin -> ehdr . e_shoff = READ64 ( ehdr , i )"	193:1:7349:7385	3594657	115	True				
ANR	3595088	AssignmentExpression	"bin -> ehdr . e_shoff = READ64 ( ehdr , i )"		3594657	0		=			
ANR	3595089	MemberAccess	bin -> ehdr . e_shoff		3594657	0					
ANR	3595090	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595091	Identifier	bin		3594657	0					
ANR	3595092	Identifier	ehdr		3594657	1					
ANR	3595093	Identifier	e_shoff		3594657	1					
ANR	3595094	CallExpression	"READ64 ( ehdr , i )"		3594657	1					
ANR	3595095	Callee	READ64		3594657	0					
ANR	3595096	Identifier	READ64		3594657	0					
ANR	3595097	ArgumentList	ehdr		3594657	1					
ANR	3595098	Argument	ehdr		3594657	0					
ANR	3595099	Identifier	ehdr		3594657	0					
ANR	3595100	Argument	i		3594657	1					
ANR	3595101	Identifier	i		3594657	0					
ANR	3595102	ExpressionStatement	"bin -> ehdr . e_flags = READ32 ( ehdr , i )"	199:1:7518:7554	3594657	116	True				
ANR	3595103	AssignmentExpression	"bin -> ehdr . e_flags = READ32 ( ehdr , i )"		3594657	0		=			
ANR	3595104	MemberAccess	bin -> ehdr . e_flags		3594657	0					
ANR	3595105	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595106	Identifier	bin		3594657	0					
ANR	3595107	Identifier	ehdr		3594657	1					
ANR	3595108	Identifier	e_flags		3594657	1					
ANR	3595109	CallExpression	"READ32 ( ehdr , i )"		3594657	1					
ANR	3595110	Callee	READ32		3594657	0					
ANR	3595111	Identifier	READ32		3594657	0					
ANR	3595112	ArgumentList	ehdr		3594657	1					
ANR	3595113	Argument	ehdr		3594657	0					
ANR	3595114	Identifier	ehdr		3594657	0					
ANR	3595115	Argument	i		3594657	1					
ANR	3595116	Identifier	i		3594657	0					
ANR	3595117	ExpressionStatement	"bin -> ehdr . e_ehsize = READ16 ( ehdr , i )"	200:1:7557:7594	3594657	117	True				
ANR	3595118	AssignmentExpression	"bin -> ehdr . e_ehsize = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595119	MemberAccess	bin -> ehdr . e_ehsize		3594657	0					
ANR	3595120	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595121	Identifier	bin		3594657	0					
ANR	3595122	Identifier	ehdr		3594657	1					
ANR	3595123	Identifier	e_ehsize		3594657	1					
ANR	3595124	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595125	Callee	READ16		3594657	0					
ANR	3595126	Identifier	READ16		3594657	0					
ANR	3595127	ArgumentList	ehdr		3594657	1					
ANR	3595128	Argument	ehdr		3594657	0					
ANR	3595129	Identifier	ehdr		3594657	0					
ANR	3595130	Argument	i		3594657	1					
ANR	3595131	Identifier	i		3594657	0					
ANR	3595132	ExpressionStatement	"bin -> ehdr . e_phentsize = READ16 ( ehdr , i )"	201:1:7597:7637	3594657	118	True				
ANR	3595133	AssignmentExpression	"bin -> ehdr . e_phentsize = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595134	MemberAccess	bin -> ehdr . e_phentsize		3594657	0					
ANR	3595135	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595136	Identifier	bin		3594657	0					
ANR	3595137	Identifier	ehdr		3594657	1					
ANR	3595138	Identifier	e_phentsize		3594657	1					
ANR	3595139	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595140	Callee	READ16		3594657	0					
ANR	3595141	Identifier	READ16		3594657	0					
ANR	3595142	ArgumentList	ehdr		3594657	1					
ANR	3595143	Argument	ehdr		3594657	0					
ANR	3595144	Identifier	ehdr		3594657	0					
ANR	3595145	Argument	i		3594657	1					
ANR	3595146	Identifier	i		3594657	0					
ANR	3595147	ExpressionStatement	"bin -> ehdr . e_phnum = READ16 ( ehdr , i )"	202:1:7640:7676	3594657	119	True				
ANR	3595148	AssignmentExpression	"bin -> ehdr . e_phnum = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595149	MemberAccess	bin -> ehdr . e_phnum		3594657	0					
ANR	3595150	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595151	Identifier	bin		3594657	0					
ANR	3595152	Identifier	ehdr		3594657	1					
ANR	3595153	Identifier	e_phnum		3594657	1					
ANR	3595154	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595155	Callee	READ16		3594657	0					
ANR	3595156	Identifier	READ16		3594657	0					
ANR	3595157	ArgumentList	ehdr		3594657	1					
ANR	3595158	Argument	ehdr		3594657	0					
ANR	3595159	Identifier	ehdr		3594657	0					
ANR	3595160	Argument	i		3594657	1					
ANR	3595161	Identifier	i		3594657	0					
ANR	3595162	ExpressionStatement	"bin -> ehdr . e_shentsize = READ16 ( ehdr , i )"	203:1:7679:7719	3594657	120	True				
ANR	3595163	AssignmentExpression	"bin -> ehdr . e_shentsize = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595164	MemberAccess	bin -> ehdr . e_shentsize		3594657	0					
ANR	3595165	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595166	Identifier	bin		3594657	0					
ANR	3595167	Identifier	ehdr		3594657	1					
ANR	3595168	Identifier	e_shentsize		3594657	1					
ANR	3595169	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595170	Callee	READ16		3594657	0					
ANR	3595171	Identifier	READ16		3594657	0					
ANR	3595172	ArgumentList	ehdr		3594657	1					
ANR	3595173	Argument	ehdr		3594657	0					
ANR	3595174	Identifier	ehdr		3594657	0					
ANR	3595175	Argument	i		3594657	1					
ANR	3595176	Identifier	i		3594657	0					
ANR	3595177	ExpressionStatement	"bin -> ehdr . e_shnum = READ16 ( ehdr , i )"	204:1:7722:7758	3594657	121	True				
ANR	3595178	AssignmentExpression	"bin -> ehdr . e_shnum = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595179	MemberAccess	bin -> ehdr . e_shnum		3594657	0					
ANR	3595180	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595181	Identifier	bin		3594657	0					
ANR	3595182	Identifier	ehdr		3594657	1					
ANR	3595183	Identifier	e_shnum		3594657	1					
ANR	3595184	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595185	Callee	READ16		3594657	0					
ANR	3595186	Identifier	READ16		3594657	0					
ANR	3595187	ArgumentList	ehdr		3594657	1					
ANR	3595188	Argument	ehdr		3594657	0					
ANR	3595189	Identifier	ehdr		3594657	0					
ANR	3595190	Argument	i		3594657	1					
ANR	3595191	Identifier	i		3594657	0					
ANR	3595192	ExpressionStatement	"bin -> ehdr . e_shstrndx = READ16 ( ehdr , i )"	205:1:7761:7800	3594657	122	True				
ANR	3595193	AssignmentExpression	"bin -> ehdr . e_shstrndx = READ16 ( ehdr , i )"		3594657	0		=			
ANR	3595194	MemberAccess	bin -> ehdr . e_shstrndx		3594657	0					
ANR	3595195	PtrMemberAccess	bin -> ehdr		3594657	0					
ANR	3595196	Identifier	bin		3594657	0					
ANR	3595197	Identifier	ehdr		3594657	1					
ANR	3595198	Identifier	e_shstrndx		3594657	1					
ANR	3595199	CallExpression	"READ16 ( ehdr , i )"		3594657	1					
ANR	3595200	Callee	READ16		3594657	0					
ANR	3595201	Identifier	READ16		3594657	0					
ANR	3595202	ArgumentList	ehdr		3594657	1					
ANR	3595203	Argument	ehdr		3594657	0					
ANR	3595204	Identifier	ehdr		3594657	0					
ANR	3595205	Argument	i		3594657	1					
ANR	3595206	Identifier	i		3594657	0					
ANR	3595207	ReturnStatement	return true ;	206:1:7803:7814	3594657	123	True				
ANR	3595208	Identifier	true		3594657	0					
ANR	3595209	ReturnType	static bool		3594657	1					
ANR	3595210	Identifier	init_ehdr		3594657	2					
ANR	3595211	ParameterList	ELFOBJ * bin		3594657	3					
ANR	3595212	Parameter	ELFOBJ * bin	108:22:2310:2320	3594657	0	True				
ANR	3595213	ParameterType	ELFOBJ *		3594657	0					
ANR	3595214	Identifier	bin		3594657	1					
ANR	3595215	CFGEntryNode	ENTRY		3594657		True				
ANR	3595216	CFGExitNode	EXIT		3594657		True				
ANR	3595217	Symbol	bin -> ehdr . e_shnum		3594657						
ANR	3595218	Symbol	bin -> b		3594657						
ANR	3595219	Symbol	bin		3594657						
ANR	3595220	Symbol	bin -> kv		3594657						
ANR	3595221	Symbol	READ64		3594657						
ANR	3595222	Symbol	* bin		3594657						
ANR	3595223	Symbol	bin -> ehdr . e_phoff		3594657						
ANR	3595224	Symbol	len		3594657						
ANR	3595225	Symbol	bin -> ehdr . e_flags		3594657						
ANR	3595226	Symbol	bin -> ehdr . e_shstrndx		3594657						
ANR	3595227	Symbol	bin -> ehdr		3594657						
ANR	3595228	Symbol	ehdr		3594657						
ANR	3595229	Symbol	EI_DATA		3594657						
ANR	3595230	Symbol	Elf_		3594657						
ANR	3595231	Symbol	& bin -> ehdr . e_ident		3594657						
ANR	3595232	Symbol	bin -> ehdr . e_type		3594657						
ANR	3595233	Symbol	ELFDATA2MSB		3594657						
ANR	3595234	Symbol	READ16		3594657						
ANR	3595235	Symbol	bin -> ehdr . e_phentsize		3594657						
ANR	3595236	Symbol	bin -> ehdr . e_entry		3594657						
ANR	3595237	Symbol	false		3594657						
ANR	3595238	Symbol	* e_ident		3594657						
ANR	3595239	Symbol	i		3594657						
ANR	3595240	Symbol	bin -> ehdr . e_version		3594657						
ANR	3595241	Symbol	bin -> ehdr . e_ehsize		3594657						
ANR	3595242	Symbol	EI_NIDENT		3594657						
ANR	3595243	Symbol	bin -> ehdr . e_phnum		3594657						
ANR	3595244	Symbol	bin -> ehdr . e_shentsize		3594657						
ANR	3595245	Symbol	READ32		3594657						
ANR	3595246	Symbol	__is_valid_ident		3594657						
ANR	3595247	Symbol	Ehdr		3594657						
ANR	3595248	Symbol	* EI_DATA		3594657						
ANR	3595249	Symbol	& bin -> ehdr		3594657						
ANR	3595250	Symbol	bin -> endian		3594657						
ANR	3595251	Symbol	bin -> ehdr . e_machine		3594657						
ANR	3595252	Symbol	r_buf_read_at		3594657						
ANR	3595253	Symbol	true		3594657						
ANR	3595254	Symbol	bin -> ehdr . e_shoff		3594657						
ANR	3595255	Symbol	e_ident		3594657						
ANR	3595256	Function	read_phdr	212:0:8012:9647							
ANR	3595257	FunctionDef	"read_phdr (ELFOBJ * bin , bool linux_kernel_hack)"		3595256	0					
ANR	3595258	CompoundStatement		212:59:8071:9647	3595256	0					
ANR	3595259	IdentifierDeclStatement	bool phdr_found = false ;	213:1:8074:8097	3595256	0	True				
ANR	3595260	IdentifierDecl	phdr_found = false		3595256	0					
ANR	3595261	IdentifierDeclType	bool		3595256	0					
ANR	3595262	Identifier	phdr_found		3595256	1					
ANR	3595263	AssignmentExpression	phdr_found = false		3595256	2		=			
ANR	3595264	Identifier	false		3595256	0					
ANR	3595265	Identifier	false		3595256	1					
ANR	3595266	IdentifierDeclStatement	int i ;	214:1:8100:8105	3595256	1	True				
ANR	3595267	IdentifierDecl	i		3595256	0					
ANR	3595268	IdentifierDeclType	int		3595256	0					
ANR	3595269	Identifier	i		3595256	1					
ANR	3595270	IdentifierDeclStatement	const bool is_elf64 = true ;	216:1:8124:8150	3595256	2	True				
ANR	3595271	IdentifierDecl	is_elf64 = true		3595256	0					
ANR	3595272	IdentifierDeclType	const bool		3595256	0					
ANR	3595273	Identifier	is_elf64		3595256	1					
ANR	3595274	AssignmentExpression	is_elf64 = true		3595256	2		=			
ANR	3595275	Identifier	true		3595256	0					
ANR	3595276	Identifier	true		3595256	1					
ANR	3595277	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3595256	3					
ANR	3595278	ForInit	i = 0 ;	221:6:8202:8207	3595256	0	True				
ANR	3595279	AssignmentExpression	i = 0		3595256	0		=			
ANR	3595280	Identifier	i		3595256	0					
ANR	3595281	PrimaryExpression	0		3595256	1					
ANR	3595282	Condition	i < bin -> ehdr . e_phnum	221:13:8209:8229	3595256	1	True				
ANR	3595283	RelationalExpression	i < bin -> ehdr . e_phnum		3595256	0		<			
ANR	3595284	Identifier	i		3595256	0					
ANR	3595285	MemberAccess	bin -> ehdr . e_phnum		3595256	1					
ANR	3595286	PtrMemberAccess	bin -> ehdr		3595256	0					
ANR	3595287	Identifier	bin		3595256	0					
ANR	3595288	Identifier	ehdr		3595256	1					
ANR	3595289	Identifier	e_phnum		3595256	1					
ANR	3595290	PostIncDecOperationExpression	i ++	221:36:8232:8234	3595256	2	True				
ANR	3595291	Identifier	i		3595256	0					
ANR	3595292	IncDec	++		3595256	1					
ANR	3595293	CompoundStatement		13:2:223:327	3595256	3					
ANR	3595294	IdentifierDeclStatement	ut8 phdr [ sizeof ( Elf_ ( Phdr ) ) ] = { 0 } ;	222:2:8241:8278	3595256	0	True				
ANR	3595295	IdentifierDecl	phdr [ sizeof ( Elf_ ( Phdr ) ) ] = { 0 }		3595256	0					
ANR	3595296	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Phdr ) ) ]		3595256	0					
ANR	3595297	Identifier	phdr		3595256	1					
ANR	3595298	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		3595256	2					
ANR	3595299	Sizeof	sizeof		3595256	0					
ANR	3595300	CallExpression	Elf_ ( Phdr )		3595256	1					
ANR	3595301	Callee	Elf_		3595256	0					
ANR	3595302	Identifier	Elf_		3595256	0					
ANR	3595303	ArgumentList	Phdr		3595256	1					
ANR	3595304	Argument	Phdr		3595256	0					
ANR	3595305	Identifier	Phdr		3595256	0					
ANR	3595306	AssignmentExpression	phdr [ sizeof ( Elf_ ( Phdr ) ) ] = { 0 }		3595256	3		=			
ANR	3595307	Identifier	phdr		3595256	0					
ANR	3595308	InitializerList	0		3595256	1					
ANR	3595309	PrimaryExpression	0		3595256	0					
ANR	3595310	IdentifierDeclStatement	int j = 0 ;	223:2:8282:8291	3595256	1	True				
ANR	3595311	IdentifierDecl	j = 0		3595256	0					
ANR	3595312	IdentifierDeclType	int		3595256	0					
ANR	3595313	Identifier	j		3595256	1					
ANR	3595314	AssignmentExpression	j = 0		3595256	2		=			
ANR	3595315	Identifier	j		3595256	0					
ANR	3595316	PrimaryExpression	0		3595256	1					
ANR	3595317	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) ) ;"	224:2:8295:8399	3595256	2	True				
ANR	3595318	IdentifierDecl	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) )"		3595256	0					
ANR	3595319	IdentifierDeclType	int		3595256	0					
ANR	3595320	Identifier	len		3595256	1					
ANR	3595321	AssignmentExpression	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) )"		3595256	2		=			
ANR	3595322	Identifier	len		3595256	0					
ANR	3595323	CallExpression	"r_buf_read_at ( bin -> b , bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) ) , phdr , sizeof ( Elf_ ( Phdr ) ) )"		3595256	1					
ANR	3595324	Callee	r_buf_read_at		3595256	0					
ANR	3595325	Identifier	r_buf_read_at		3595256	0					
ANR	3595326	ArgumentList	bin -> b		3595256	1					
ANR	3595327	Argument	bin -> b		3595256	0					
ANR	3595328	PtrMemberAccess	bin -> b		3595256	0					
ANR	3595329	Identifier	bin		3595256	0					
ANR	3595330	Identifier	b		3595256	1					
ANR	3595331	Argument	bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) )		3595256	1					
ANR	3595332	AdditiveExpression	bin -> ehdr . e_phoff + i * sizeof ( Elf_ ( Phdr ) )		3595256	0		+			
ANR	3595333	MemberAccess	bin -> ehdr . e_phoff		3595256	0					
ANR	3595334	PtrMemberAccess	bin -> ehdr		3595256	0					
ANR	3595335	Identifier	bin		3595256	0					
ANR	3595336	Identifier	ehdr		3595256	1					
ANR	3595337	Identifier	e_phoff		3595256	1					
ANR	3595338	MultiplicativeExpression	i * sizeof ( Elf_ ( Phdr ) )		3595256	1		*			
ANR	3595339	Identifier	i		3595256	0					
ANR	3595340	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		3595256	1					
ANR	3595341	Sizeof	sizeof		3595256	0					
ANR	3595342	CallExpression	Elf_ ( Phdr )		3595256	1					
ANR	3595343	Callee	Elf_		3595256	0					
ANR	3595344	Identifier	Elf_		3595256	0					
ANR	3595345	ArgumentList	Phdr		3595256	1					
ANR	3595346	Argument	Phdr		3595256	0					
ANR	3595347	Identifier	Phdr		3595256	0					
ANR	3595348	Argument	phdr		3595256	2					
ANR	3595349	Identifier	phdr		3595256	0					
ANR	3595350	Argument	sizeof ( Elf_ ( Phdr ) )		3595256	3					
ANR	3595351	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		3595256	0					
ANR	3595352	Sizeof	sizeof		3595256	0					
ANR	3595353	CallExpression	Elf_ ( Phdr )		3595256	1					
ANR	3595354	Callee	Elf_		3595256	0					
ANR	3595355	Identifier	Elf_		3595256	0					
ANR	3595356	ArgumentList	Phdr		3595256	1					
ANR	3595357	Argument	Phdr		3595256	0					
ANR	3595358	Identifier	Phdr		3595256	0					
ANR	3595359	IfStatement	if ( len < 1 )		3595256	3					
ANR	3595360	Condition	len < 1	225:6:8407:8413	3595256	0	True				
ANR	3595361	RelationalExpression	len < 1		3595256	0		<			
ANR	3595362	Identifier	len		3595256	0					
ANR	3595363	PrimaryExpression	1		3595256	1					
ANR	3595364	CompoundStatement		14:15:344:344	3595256	1					
ANR	3595365	ExpressionStatement	"bprintf ( ""read (phdr)\\n"" )"	226:3:8421:8446	3595256	0	True				
ANR	3595366	CallExpression	"bprintf ( ""read (phdr)\\n"" )"		3595256	0					
ANR	3595367	Callee	bprintf		3595256	0					
ANR	3595368	Identifier	bprintf		3595256	0					
ANR	3595369	ArgumentList	"""read (phdr)\\n"""		3595256	1					
ANR	3595370	Argument	"""read (phdr)\\n"""		3595256	0					
ANR	3595371	PrimaryExpression	"""read (phdr)\\n"""		3595256	0					
ANR	3595372	ExpressionStatement	R_FREE ( bin -> phdr )	227:3:8451:8469	3595256	1	True				
ANR	3595373	CallExpression	R_FREE ( bin -> phdr )		3595256	0					
ANR	3595374	Callee	R_FREE		3595256	0					
ANR	3595375	Identifier	R_FREE		3595256	0					
ANR	3595376	ArgumentList	bin -> phdr		3595256	1					
ANR	3595377	Argument	bin -> phdr		3595256	0					
ANR	3595378	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595379	Identifier	bin		3595256	0					
ANR	3595380	Identifier	phdr		3595256	1					
ANR	3595381	ReturnStatement	return false ;	228:3:8474:8486	3595256	2	True				
ANR	3595382	Identifier	false		3595256	0					
ANR	3595383	ExpressionStatement	"bin -> phdr [ i ] . p_type = READ32 ( phdr , j )"	230:2:8494:8532	3595256	4	True				
ANR	3595384	AssignmentExpression	"bin -> phdr [ i ] . p_type = READ32 ( phdr , j )"		3595256	0		=			
ANR	3595385	MemberAccess	bin -> phdr [ i ] . p_type		3595256	0					
ANR	3595386	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595387	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595388	Identifier	bin		3595256	0					
ANR	3595389	Identifier	phdr		3595256	1					
ANR	3595390	Identifier	i		3595256	1					
ANR	3595391	Identifier	p_type		3595256	1					
ANR	3595392	CallExpression	"READ32 ( phdr , j )"		3595256	1					
ANR	3595393	Callee	READ32		3595256	0					
ANR	3595394	Identifier	READ32		3595256	0					
ANR	3595395	ArgumentList	phdr		3595256	1					
ANR	3595396	Argument	phdr		3595256	0					
ANR	3595397	Identifier	phdr		3595256	0					
ANR	3595398	Argument	j		3595256	1					
ANR	3595399	Identifier	j		3595256	0					
ANR	3595400	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_PHDR )		3595256	5					
ANR	3595401	Condition	bin -> phdr [ i ] . p_type == PT_PHDR	231:6:8540:8569	3595256	0	True				
ANR	3595402	EqualityExpression	bin -> phdr [ i ] . p_type == PT_PHDR		3595256	0		==			
ANR	3595403	MemberAccess	bin -> phdr [ i ] . p_type		3595256	0					
ANR	3595404	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595405	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595406	Identifier	bin		3595256	0					
ANR	3595407	Identifier	phdr		3595256	1					
ANR	3595408	Identifier	i		3595256	1					
ANR	3595409	Identifier	p_type		3595256	1					
ANR	3595410	Identifier	PT_PHDR		3595256	1					
ANR	3595411	CompoundStatement		20:38:500:500	3595256	1					
ANR	3595412	ExpressionStatement	phdr_found = true	232:3:8577:8594	3595256	0	True				
ANR	3595413	AssignmentExpression	phdr_found = true		3595256	0		=			
ANR	3595414	Identifier	phdr_found		3595256	0					
ANR	3595415	Identifier	true		3595256	1					
ANR	3595416	IfStatement	if ( is_elf64 )		3595256	6					
ANR	3595417	Condition	is_elf64	235:6:8607:8614	3595256	0	True				
ANR	3595418	Identifier	is_elf64		3595256	0					
ANR	3595419	CompoundStatement		24:16:545:545	3595256	1					
ANR	3595420	ExpressionStatement	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"	236:3:8622:8661	3595256	0	True				
ANR	3595421	AssignmentExpression	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"		3595256	0		=			
ANR	3595422	MemberAccess	bin -> phdr [ i ] . p_flags		3595256	0					
ANR	3595423	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595424	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595425	Identifier	bin		3595256	0					
ANR	3595426	Identifier	phdr		3595256	1					
ANR	3595427	Identifier	i		3595256	1					
ANR	3595428	Identifier	p_flags		3595256	1					
ANR	3595429	CallExpression	"READ32 ( phdr , j )"		3595256	1					
ANR	3595430	Callee	READ32		3595256	0					
ANR	3595431	Identifier	READ32		3595256	0					
ANR	3595432	ArgumentList	phdr		3595256	1					
ANR	3595433	Argument	phdr		3595256	0					
ANR	3595434	Identifier	phdr		3595256	0					
ANR	3595435	Argument	j		3595256	1					
ANR	3595436	Identifier	j		3595256	0					
ANR	3595437	ExpressionStatement	"bin -> phdr [ i ] . p_offset = READWORD ( phdr , j )"	238:2:8669:8711	3595256	7	True				
ANR	3595438	AssignmentExpression	"bin -> phdr [ i ] . p_offset = READWORD ( phdr , j )"		3595256	0		=			
ANR	3595439	MemberAccess	bin -> phdr [ i ] . p_offset		3595256	0					
ANR	3595440	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595441	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595442	Identifier	bin		3595256	0					
ANR	3595443	Identifier	phdr		3595256	1					
ANR	3595444	Identifier	i		3595256	1					
ANR	3595445	Identifier	p_offset		3595256	1					
ANR	3595446	CallExpression	"READWORD ( phdr , j )"		3595256	1					
ANR	3595447	Callee	READWORD		3595256	0					
ANR	3595448	Identifier	READWORD		3595256	0					
ANR	3595449	ArgumentList	phdr		3595256	1					
ANR	3595450	Argument	phdr		3595256	0					
ANR	3595451	Identifier	phdr		3595256	0					
ANR	3595452	Argument	j		3595256	1					
ANR	3595453	Identifier	j		3595256	0					
ANR	3595454	ExpressionStatement	"bin -> phdr [ i ] . p_vaddr = READWORD ( phdr , j )"	239:2:8715:8756	3595256	8	True				
ANR	3595455	AssignmentExpression	"bin -> phdr [ i ] . p_vaddr = READWORD ( phdr , j )"		3595256	0		=			
ANR	3595456	MemberAccess	bin -> phdr [ i ] . p_vaddr		3595256	0					
ANR	3595457	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595458	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595459	Identifier	bin		3595256	0					
ANR	3595460	Identifier	phdr		3595256	1					
ANR	3595461	Identifier	i		3595256	1					
ANR	3595462	Identifier	p_vaddr		3595256	1					
ANR	3595463	CallExpression	"READWORD ( phdr , j )"		3595256	1					
ANR	3595464	Callee	READWORD		3595256	0					
ANR	3595465	Identifier	READWORD		3595256	0					
ANR	3595466	ArgumentList	phdr		3595256	1					
ANR	3595467	Argument	phdr		3595256	0					
ANR	3595468	Identifier	phdr		3595256	0					
ANR	3595469	Argument	j		3595256	1					
ANR	3595470	Identifier	j		3595256	0					
ANR	3595471	ExpressionStatement	"bin -> phdr [ i ] . p_paddr = READWORD ( phdr , j )"	240:2:8760:8801	3595256	9	True				
ANR	3595472	AssignmentExpression	"bin -> phdr [ i ] . p_paddr = READWORD ( phdr , j )"		3595256	0		=			
ANR	3595473	MemberAccess	bin -> phdr [ i ] . p_paddr		3595256	0					
ANR	3595474	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595475	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595476	Identifier	bin		3595256	0					
ANR	3595477	Identifier	phdr		3595256	1					
ANR	3595478	Identifier	i		3595256	1					
ANR	3595479	Identifier	p_paddr		3595256	1					
ANR	3595480	CallExpression	"READWORD ( phdr , j )"		3595256	1					
ANR	3595481	Callee	READWORD		3595256	0					
ANR	3595482	Identifier	READWORD		3595256	0					
ANR	3595483	ArgumentList	phdr		3595256	1					
ANR	3595484	Argument	phdr		3595256	0					
ANR	3595485	Identifier	phdr		3595256	0					
ANR	3595486	Argument	j		3595256	1					
ANR	3595487	Identifier	j		3595256	0					
ANR	3595488	ExpressionStatement	"bin -> phdr [ i ] . p_filesz = READWORD ( phdr , j )"	241:2:8805:8847	3595256	10	True				
ANR	3595489	AssignmentExpression	"bin -> phdr [ i ] . p_filesz = READWORD ( phdr , j )"		3595256	0		=			
ANR	3595490	MemberAccess	bin -> phdr [ i ] . p_filesz		3595256	0					
ANR	3595491	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595492	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595493	Identifier	bin		3595256	0					
ANR	3595494	Identifier	phdr		3595256	1					
ANR	3595495	Identifier	i		3595256	1					
ANR	3595496	Identifier	p_filesz		3595256	1					
ANR	3595497	CallExpression	"READWORD ( phdr , j )"		3595256	1					
ANR	3595498	Callee	READWORD		3595256	0					
ANR	3595499	Identifier	READWORD		3595256	0					
ANR	3595500	ArgumentList	phdr		3595256	1					
ANR	3595501	Argument	phdr		3595256	0					
ANR	3595502	Identifier	phdr		3595256	0					
ANR	3595503	Argument	j		3595256	1					
ANR	3595504	Identifier	j		3595256	0					
ANR	3595505	ExpressionStatement	"bin -> phdr [ i ] . p_memsz = READWORD ( phdr , j )"	242:2:8851:8892	3595256	11	True				
ANR	3595506	AssignmentExpression	"bin -> phdr [ i ] . p_memsz = READWORD ( phdr , j )"		3595256	0		=			
ANR	3595507	MemberAccess	bin -> phdr [ i ] . p_memsz		3595256	0					
ANR	3595508	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595509	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595510	Identifier	bin		3595256	0					
ANR	3595511	Identifier	phdr		3595256	1					
ANR	3595512	Identifier	i		3595256	1					
ANR	3595513	Identifier	p_memsz		3595256	1					
ANR	3595514	CallExpression	"READWORD ( phdr , j )"		3595256	1					
ANR	3595515	Callee	READWORD		3595256	0					
ANR	3595516	Identifier	READWORD		3595256	0					
ANR	3595517	ArgumentList	phdr		3595256	1					
ANR	3595518	Argument	phdr		3595256	0					
ANR	3595519	Identifier	phdr		3595256	0					
ANR	3595520	Argument	j		3595256	1					
ANR	3595521	Identifier	j		3595256	0					
ANR	3595522	IfStatement	if ( ! is_elf64 )		3595256	12					
ANR	3595523	Condition	! is_elf64	243:6:8900:8908	3595256	0	True				
ANR	3595524	UnaryOperationExpression	! is_elf64		3595256	0					
ANR	3595525	UnaryOperator	!		3595256	0					
ANR	3595526	Identifier	is_elf64		3595256	1					
ANR	3595527	CompoundStatement		32:17:839:839	3595256	1					
ANR	3595528	ExpressionStatement	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"	244:3:8916:8955	3595256	0	True				
ANR	3595529	AssignmentExpression	"bin -> phdr [ i ] . p_flags = READ32 ( phdr , j )"		3595256	0		=			
ANR	3595530	MemberAccess	bin -> phdr [ i ] . p_flags		3595256	0					
ANR	3595531	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595532	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595533	Identifier	bin		3595256	0					
ANR	3595534	Identifier	phdr		3595256	1					
ANR	3595535	Identifier	i		3595256	1					
ANR	3595536	Identifier	p_flags		3595256	1					
ANR	3595537	CallExpression	"READ32 ( phdr , j )"		3595256	1					
ANR	3595538	Callee	READ32		3595256	0					
ANR	3595539	Identifier	READ32		3595256	0					
ANR	3595540	ArgumentList	phdr		3595256	1					
ANR	3595541	Argument	phdr		3595256	0					
ANR	3595542	Identifier	phdr		3595256	0					
ANR	3595543	Argument	j		3595256	1					
ANR	3595544	Identifier	j		3595256	0					
ANR	3595545	ExpressionStatement	"bin -> phdr [ i ] . p_align = READWORD ( phdr , j )"	247:2:9056:9097	3595256	13	True				
ANR	3595546	AssignmentExpression	"bin -> phdr [ i ] . p_align = READWORD ( phdr , j )"		3595256	0		=			
ANR	3595547	MemberAccess	bin -> phdr [ i ] . p_align		3595256	0					
ANR	3595548	ArrayIndexing	bin -> phdr [ i ]		3595256	0					
ANR	3595549	PtrMemberAccess	bin -> phdr		3595256	0					
ANR	3595550	Identifier	bin		3595256	0					
ANR	3595551	Identifier	phdr		3595256	1					
ANR	3595552	Identifier	i		3595256	1					
ANR	3595553	Identifier	p_align		3595256	1					
ANR	3595554	CallExpression	"READWORD ( phdr , j )"		3595256	1					
ANR	3595555	Callee	READWORD		3595256	0					
ANR	3595556	Identifier	READWORD		3595256	0					
ANR	3595557	ArgumentList	phdr		3595256	1					
ANR	3595558	Argument	phdr		3595256	0					
ANR	3595559	Identifier	phdr		3595256	0					
ANR	3595560	Argument	j		3595256	1					
ANR	3595561	Identifier	j		3595256	0					
ANR	3595562	IfStatement	if ( linux_kernel_hack && phdr_found )		3595256	4					
ANR	3595563	Condition	linux_kernel_hack && phdr_found	256:5:9430:9460	3595256	0	True				
ANR	3595564	AndExpression	linux_kernel_hack && phdr_found		3595256	0		&&			
ANR	3595565	Identifier	linux_kernel_hack		3595256	0					
ANR	3595566	Identifier	phdr_found		3595256	1					
ANR	3595567	CompoundStatement		46:2:1395:1443	3595256	1					
ANR	3595568	IdentifierDeclStatement	ut64 load_addr = Elf_ ( r_bin_elf_get_baddr ) ( bin ) ;	257:2:9467:9515	3595256	0	True				
ANR	3595569	IdentifierDecl	load_addr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		3595256	0					
ANR	3595570	IdentifierDeclType	ut64		3595256	0					
ANR	3595571	Identifier	load_addr		3595256	1					
ANR	3595572	AssignmentExpression	load_addr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		3595256	2		=			
ANR	3595573	Identifier	load_addr		3595256	0					
ANR	3595574	CallExpression	Elf_ ( r_bin_elf_get_baddr ) ( bin )		3595256	1					
ANR	3595575	Callee	Elf_ ( r_bin_elf_get_baddr )		3595256	0					
ANR	3595576	CallExpression	Elf_ ( r_bin_elf_get_baddr )		3595256	0					
ANR	3595577	Callee	Elf_		3595256	0					
ANR	3595578	Identifier	Elf_		3595256	0					
ANR	3595579	ArgumentList	r_bin_elf_get_baddr		3595256	1					
ANR	3595580	Argument	r_bin_elf_get_baddr		3595256	0					
ANR	3595581	Identifier	r_bin_elf_get_baddr		3595256	0					
ANR	3595582	ArgumentList	bin		3595256	1					
ANR	3595583	Argument	bin		3595256	0					
ANR	3595584	Identifier	bin		3595256	0					
ANR	3595585	ExpressionStatement	"bin -> ehdr . e_phoff = Elf_ ( r_bin_elf_v2p ) ( bin , load_addr + bin -> ehdr . e_phoff )"	258:2:9519:9595	3595256	1	True				
ANR	3595586	AssignmentExpression	"bin -> ehdr . e_phoff = Elf_ ( r_bin_elf_v2p ) ( bin , load_addr + bin -> ehdr . e_phoff )"		3595256	0		=			
ANR	3595587	MemberAccess	bin -> ehdr . e_phoff		3595256	0					
ANR	3595588	PtrMemberAccess	bin -> ehdr		3595256	0					
ANR	3595589	Identifier	bin		3595256	0					
ANR	3595590	Identifier	ehdr		3595256	1					
ANR	3595591	Identifier	e_phoff		3595256	1					
ANR	3595592	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , load_addr + bin -> ehdr . e_phoff )"		3595256	1					
ANR	3595593	Callee	Elf_ ( r_bin_elf_v2p )		3595256	0					
ANR	3595594	CallExpression	Elf_ ( r_bin_elf_v2p )		3595256	0					
ANR	3595595	Callee	Elf_		3595256	0					
ANR	3595596	Identifier	Elf_		3595256	0					
ANR	3595597	ArgumentList	r_bin_elf_v2p		3595256	1					
ANR	3595598	Argument	r_bin_elf_v2p		3595256	0					
ANR	3595599	Identifier	r_bin_elf_v2p		3595256	0					
ANR	3595600	ArgumentList	bin		3595256	1					
ANR	3595601	Argument	bin		3595256	0					
ANR	3595602	Identifier	bin		3595256	0					
ANR	3595603	Argument	load_addr + bin -> ehdr . e_phoff		3595256	1					
ANR	3595604	AdditiveExpression	load_addr + bin -> ehdr . e_phoff		3595256	0		+			
ANR	3595605	Identifier	load_addr		3595256	0					
ANR	3595606	MemberAccess	bin -> ehdr . e_phoff		3595256	1					
ANR	3595607	PtrMemberAccess	bin -> ehdr		3595256	0					
ANR	3595608	Identifier	bin		3595256	0					
ANR	3595609	Identifier	ehdr		3595256	1					
ANR	3595610	Identifier	e_phoff		3595256	1					
ANR	3595611	ReturnStatement	"return read_phdr ( bin , false ) ;"	259:2:9599:9628	3595256	2	True				
ANR	3595612	CallExpression	"read_phdr ( bin , false )"		3595256	0					
ANR	3595613	Callee	read_phdr		3595256	0					
ANR	3595614	Identifier	read_phdr		3595256	0					
ANR	3595615	ArgumentList	bin		3595256	1					
ANR	3595616	Argument	bin		3595256	0					
ANR	3595617	Identifier	bin		3595256	0					
ANR	3595618	Argument	false		3595256	1					
ANR	3595619	Identifier	false		3595256	0					
ANR	3595620	ReturnStatement	return true ;	261:1:9634:9645	3595256	5	True				
ANR	3595621	Identifier	true		3595256	0					
ANR	3595622	ReturnType	static bool		3595256	1					
ANR	3595623	Identifier	read_phdr		3595256	2					
ANR	3595624	ParameterList	"ELFOBJ * bin , bool linux_kernel_hack"		3595256	3					
ANR	3595625	Parameter	ELFOBJ * bin	212:22:8034:8044	3595256	0	True				
ANR	3595626	ParameterType	ELFOBJ *		3595256	0					
ANR	3595627	Identifier	bin		3595256	1					
ANR	3595628	Parameter	bool linux_kernel_hack	212:35:8047:8068	3595256	1	True				
ANR	3595629	ParameterType	bool		3595256	0					
ANR	3595630	Identifier	linux_kernel_hack		3595256	1					
ANR	3595631	CFGEntryNode	ENTRY		3595256		True				
ANR	3595632	CFGExitNode	EXIT		3595256		True				
ANR	3595633	Symbol	bin -> b		3595256						
ANR	3595634	Symbol	Phdr		3595256						
ANR	3595635	Symbol	bin		3595256						
ANR	3595636	Symbol	bin -> phdr [ i ] . p_memsz		3595256						
ANR	3595637	Symbol	PT_PHDR		3595256						
ANR	3595638	Symbol	linux_kernel_hack		3595256						
ANR	3595639	Symbol	bin -> phdr		3595256						
ANR	3595640	Symbol	* bin		3595256						
ANR	3595641	Symbol	bin -> ehdr . e_phoff		3595256						
ANR	3595642	Symbol	bin -> phdr [ i ] . p_filesz		3595256						
ANR	3595643	Symbol	phdr_found		3595256						
ANR	3595644	Symbol	r_bin_elf_get_baddr		3595256						
ANR	3595645	Symbol	len		3595256						
ANR	3595646	Symbol	bin -> ehdr		3595256						
ANR	3595647	Symbol	bin -> phdr [ i ] . p_align		3595256						
ANR	3595648	Symbol	* * bin		3595256						
ANR	3595649	Symbol	bin -> phdr [ i ] . p_flags		3595256						
ANR	3595650	Symbol	r_bin_elf_v2p		3595256						
ANR	3595651	Symbol	bin -> phdr [ i ] . p_vaddr		3595256						
ANR	3595652	Symbol	Elf_		3595256						
ANR	3595653	Symbol	READWORD		3595256						
ANR	3595654	Symbol	load_addr		3595256						
ANR	3595655	Symbol	false		3595256						
ANR	3595656	Symbol	i		3595256						
ANR	3595657	Symbol	j		3595256						
ANR	3595658	Symbol	bin -> ehdr . e_phnum		3595256						
ANR	3595659	Symbol	READ32		3595256						
ANR	3595660	Symbol	is_elf64		3595256						
ANR	3595661	Symbol	* bin -> phdr		3595256						
ANR	3595662	Symbol	read_phdr		3595256						
ANR	3595663	Symbol	bin -> phdr [ i ] . p_offset		3595256						
ANR	3595664	Symbol	phdr		3595256						
ANR	3595665	Symbol	* i		3595256						
ANR	3595666	Symbol	true		3595256						
ANR	3595667	Symbol	r_buf_read_at		3595256						
ANR	3595668	Symbol	bin -> phdr [ i ] . p_type		3595256						
ANR	3595669	Symbol	bin -> phdr [ i ] . p_paddr		3595256						
ANR	3595670	Function	init_phdr	264:0:9650:11637							
ANR	3595671	FunctionDef	init_phdr (ELFOBJ * bin)		3595670	0					
ANR	3595672	CompoundStatement		264:34:9684:11637	3595670	0					
ANR	3595673	IdentifierDeclStatement	ut32 phdr_size ;	265:1:9687:9701	3595670	0	True				
ANR	3595674	IdentifierDecl	phdr_size		3595670	0					
ANR	3595675	IdentifierDeclType	ut32		3595670	0					
ANR	3595676	Identifier	phdr_size		3595670	1					
ANR	3595677	ExpressionStatement	"r_return_val_if_fail ( ! bin -> phdr , false )"	267:1:9705:9745	3595670	1	True				
ANR	3595678	CallExpression	"r_return_val_if_fail ( ! bin -> phdr , false )"		3595670	0					
ANR	3595679	Callee	r_return_val_if_fail		3595670	0					
ANR	3595680	Identifier	r_return_val_if_fail		3595670	0					
ANR	3595681	ArgumentList	! bin -> phdr		3595670	1					
ANR	3595682	Argument	! bin -> phdr		3595670	0					
ANR	3595683	UnaryOperationExpression	! bin -> phdr		3595670	0					
ANR	3595684	UnaryOperator	!		3595670	0					
ANR	3595685	PtrMemberAccess	bin -> phdr		3595670	1					
ANR	3595686	Identifier	bin		3595670	0					
ANR	3595687	Identifier	phdr		3595670	1					
ANR	3595688	Argument	false		3595670	1					
ANR	3595689	Identifier	false		3595670	0					
ANR	3595690	IfStatement	if ( ! bin -> ehdr . e_phnum )		3595670	2					
ANR	3595691	Condition	! bin -> ehdr . e_phnum	269:5:9753:9770	3595670	0	True				
ANR	3595692	UnaryOperationExpression	! bin -> ehdr . e_phnum		3595670	0					
ANR	3595693	UnaryOperator	!		3595670	0					
ANR	3595694	MemberAccess	bin -> ehdr . e_phnum		3595670	1					
ANR	3595695	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595696	Identifier	bin		3595670	0					
ANR	3595697	Identifier	ehdr		3595670	1					
ANR	3595698	Identifier	e_phnum		3595670	1					
ANR	3595699	CompoundStatement		6:25:88:88	3595670	1					
ANR	3595700	ReturnStatement	return false ;	270:2:9777:9789	3595670	0	True				
ANR	3595701	Identifier	false		3595670	0					
ANR	3595702	IfStatement	"if ( ! UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) ) )"		3595670	3					
ANR	3595703	Condition	"! UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) )"	272:5:9799:9866	3595670	0	True				
ANR	3595704	UnaryOperationExpression	"! UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) )"		3595670	0					
ANR	3595705	UnaryOperator	!		3595670	0					
ANR	3595706	CallExpression	"UT32_MUL ( & phdr_size , ( ut32 ) bin -> ehdr . e_phnum , sizeof ( Elf_ ( Phdr ) ) )"		3595670	1					
ANR	3595707	Callee	UT32_MUL		3595670	0					
ANR	3595708	Identifier	UT32_MUL		3595670	0					
ANR	3595709	ArgumentList	& phdr_size		3595670	1					
ANR	3595710	Argument	& phdr_size		3595670	0					
ANR	3595711	UnaryOperationExpression	& phdr_size		3595670	0					
ANR	3595712	UnaryOperator	&		3595670	0					
ANR	3595713	Identifier	phdr_size		3595670	1					
ANR	3595714	Argument	( ut32 ) bin -> ehdr . e_phnum		3595670	1					
ANR	3595715	CastExpression	( ut32 ) bin -> ehdr . e_phnum		3595670	0					
ANR	3595716	CastTarget	ut32		3595670	0					
ANR	3595717	MemberAccess	bin -> ehdr . e_phnum		3595670	1					
ANR	3595718	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595719	Identifier	bin		3595670	0					
ANR	3595720	Identifier	ehdr		3595670	1					
ANR	3595721	Identifier	e_phnum		3595670	1					
ANR	3595722	Argument	sizeof ( Elf_ ( Phdr ) )		3595670	2					
ANR	3595723	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		3595670	0					
ANR	3595724	Sizeof	sizeof		3595670	0					
ANR	3595725	CallExpression	Elf_ ( Phdr )		3595670	1					
ANR	3595726	Callee	Elf_		3595670	0					
ANR	3595727	Identifier	Elf_		3595670	0					
ANR	3595728	ArgumentList	Phdr		3595670	1					
ANR	3595729	Argument	Phdr		3595670	0					
ANR	3595730	Identifier	Phdr		3595670	0					
ANR	3595731	CompoundStatement		9:75:184:184	3595670	1					
ANR	3595732	ReturnStatement	return false ;	273:2:9873:9885	3595670	0	True				
ANR	3595733	Identifier	false		3595670	0					
ANR	3595734	IfStatement	if ( ! phdr_size )		3595670	4					
ANR	3595735	Condition	! phdr_size	275:5:9895:9904	3595670	0	True				
ANR	3595736	UnaryOperationExpression	! phdr_size		3595670	0					
ANR	3595737	UnaryOperator	!		3595670	0					
ANR	3595738	Identifier	phdr_size		3595670	1					
ANR	3595739	CompoundStatement		12:17:222:222	3595670	1					
ANR	3595740	ReturnStatement	return false ;	276:2:9911:9923	3595670	0	True				
ANR	3595741	Identifier	false		3595670	0					
ANR	3595742	IfStatement	if ( phdr_size > bin -> size )		3595670	5					
ANR	3595743	Condition	phdr_size > bin -> size	278:5:9933:9953	3595670	0	True				
ANR	3595744	RelationalExpression	phdr_size > bin -> size		3595670	0		>			
ANR	3595745	Identifier	phdr_size		3595670	0					
ANR	3595746	PtrMemberAccess	bin -> size		3595670	1					
ANR	3595747	Identifier	bin		3595670	0					
ANR	3595748	Identifier	size		3595670	1					
ANR	3595749	CompoundStatement		15:28:271:271	3595670	1					
ANR	3595750	ReturnStatement	return false ;	279:2:9960:9972	3595670	0	True				
ANR	3595751	Identifier	false		3595670	0					
ANR	3595752	IfStatement	if ( phdr_size > ( ut32 ) bin -> size )		3595670	6					
ANR	3595753	Condition	phdr_size > ( ut32 ) bin -> size	281:5:9982:10008	3595670	0	True				
ANR	3595754	RelationalExpression	phdr_size > ( ut32 ) bin -> size		3595670	0		>			
ANR	3595755	Identifier	phdr_size		3595670	0					
ANR	3595756	CastExpression	( ut32 ) bin -> size		3595670	1					
ANR	3595757	CastTarget	ut32		3595670	0					
ANR	3595758	PtrMemberAccess	bin -> size		3595670	1					
ANR	3595759	Identifier	bin		3595670	0					
ANR	3595760	Identifier	size		3595670	1					
ANR	3595761	CompoundStatement		18:34:326:326	3595670	1					
ANR	3595762	ReturnStatement	return false ;	282:2:10015:10027	3595670	0	True				
ANR	3595763	Identifier	false		3595670	0					
ANR	3595764	IfStatement	if ( bin -> ehdr . e_phoff > bin -> size )		3595670	7					
ANR	3595765	Condition	bin -> ehdr . e_phoff > bin -> size	284:5:10037:10065	3595670	0	True				
ANR	3595766	RelationalExpression	bin -> ehdr . e_phoff > bin -> size		3595670	0		>			
ANR	3595767	MemberAccess	bin -> ehdr . e_phoff		3595670	0					
ANR	3595768	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595769	Identifier	bin		3595670	0					
ANR	3595770	Identifier	ehdr		3595670	1					
ANR	3595771	Identifier	e_phoff		3595670	1					
ANR	3595772	PtrMemberAccess	bin -> size		3595670	1					
ANR	3595773	Identifier	bin		3595670	0					
ANR	3595774	Identifier	size		3595670	1					
ANR	3595775	CompoundStatement		21:36:383:383	3595670	1					
ANR	3595776	ReturnStatement	return false ;	285:2:10072:10084	3595670	0	True				
ANR	3595777	Identifier	false		3595670	0					
ANR	3595778	IfStatement	if ( bin -> ehdr . e_phoff + phdr_size > bin -> size )		3595670	8					
ANR	3595779	Condition	bin -> ehdr . e_phoff + phdr_size > bin -> size	287:5:10094:10134	3595670	0	True				
ANR	3595780	RelationalExpression	bin -> ehdr . e_phoff + phdr_size > bin -> size		3595670	0		>			
ANR	3595781	AdditiveExpression	bin -> ehdr . e_phoff + phdr_size		3595670	0		+			
ANR	3595782	MemberAccess	bin -> ehdr . e_phoff		3595670	0					
ANR	3595783	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595784	Identifier	bin		3595670	0					
ANR	3595785	Identifier	ehdr		3595670	1					
ANR	3595786	Identifier	e_phoff		3595670	1					
ANR	3595787	Identifier	phdr_size		3595670	1					
ANR	3595788	PtrMemberAccess	bin -> size		3595670	1					
ANR	3595789	Identifier	bin		3595670	0					
ANR	3595790	Identifier	size		3595670	1					
ANR	3595791	CompoundStatement		24:48:452:452	3595670	1					
ANR	3595792	ReturnStatement	return false ;	288:2:10141:10153	3595670	0	True				
ANR	3595793	Identifier	false		3595670	0					
ANR	3595794	IfStatement	"if ( ! ( bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum ) ) )"		3595670	9					
ANR	3595795	Condition	"! ( bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum ) )"	290:5:10163:10216	3595670	0	True				
ANR	3595796	UnaryOperationExpression	"! ( bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum ) )"		3595670	0					
ANR	3595797	UnaryOperator	!		3595670	0					
ANR	3595798	AssignmentExpression	"bin -> phdr = R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum )"		3595670	1		=			
ANR	3595799	PtrMemberAccess	bin -> phdr		3595670	0					
ANR	3595800	Identifier	bin		3595670	0					
ANR	3595801	Identifier	phdr		3595670	1					
ANR	3595802	CallExpression	"R_NEWS0 ( Elf_ ( Phdr ) , bin -> ehdr . e_phnum )"		3595670	1					
ANR	3595803	Callee	R_NEWS0		3595670	0					
ANR	3595804	Identifier	R_NEWS0		3595670	0					
ANR	3595805	ArgumentList	Elf_ ( Phdr )		3595670	1					
ANR	3595806	Argument	Elf_ ( Phdr )		3595670	0					
ANR	3595807	CallExpression	Elf_ ( Phdr )		3595670	0					
ANR	3595808	Callee	Elf_		3595670	0					
ANR	3595809	Identifier	Elf_		3595670	0					
ANR	3595810	ArgumentList	Phdr		3595670	1					
ANR	3595811	Argument	Phdr		3595670	0					
ANR	3595812	Identifier	Phdr		3595670	0					
ANR	3595813	Argument	bin -> ehdr . e_phnum		3595670	1					
ANR	3595814	MemberAccess	bin -> ehdr . e_phnum		3595670	0					
ANR	3595815	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595816	Identifier	bin		3595670	0					
ANR	3595817	Identifier	ehdr		3595670	1					
ANR	3595818	Identifier	e_phnum		3595670	1					
ANR	3595819	CompoundStatement		27:61:534:534	3595670	1					
ANR	3595820	ExpressionStatement	"perror ( ""malloc (phdr)"" )"	291:2:10223:10247	3595670	0	True				
ANR	3595821	CallExpression	"perror ( ""malloc (phdr)"" )"		3595670	0					
ANR	3595822	Callee	perror		3595670	0					
ANR	3595823	Identifier	perror		3595670	0					
ANR	3595824	ArgumentList	"""malloc (phdr)"""		3595670	1					
ANR	3595825	Argument	"""malloc (phdr)"""		3595670	0					
ANR	3595826	PrimaryExpression	"""malloc (phdr)"""		3595670	0					
ANR	3595827	ReturnStatement	return false ;	292:2:10251:10263	3595670	1	True				
ANR	3595828	Identifier	false		3595670	0					
ANR	3595829	IdentifierDeclStatement	bool linux_kern_hack = false ;	295:1:10270:10298	3595670	10	True				
ANR	3595830	IdentifierDecl	linux_kern_hack = false		3595670	0					
ANR	3595831	IdentifierDeclType	bool		3595670	0					
ANR	3595832	Identifier	linux_kern_hack		3595670	1					
ANR	3595833	AssignmentExpression	linux_kern_hack = false		3595670	2		=			
ANR	3595834	Identifier	false		3595670	0					
ANR	3595835	Identifier	false		3595670	1					
ANR	3595836	IdentifierDeclStatement	const int _128K = 1024 * 128 ;	297:1:10353:10381	3595670	11	True				
ANR	3595837	IdentifierDecl	_128K = 1024 * 128		3595670	0					
ANR	3595838	IdentifierDeclType	const int		3595670	0					
ANR	3595839	Identifier	_128K		3595670	1					
ANR	3595840	AssignmentExpression	_128K = 1024 * 128		3595670	2		=			
ANR	3595841	Identifier	_128K		3595670	0					
ANR	3595842	MultiplicativeExpression	1024 * 128		3595670	1		*			
ANR	3595843	PrimaryExpression	1024		3595670	0					
ANR	3595844	PrimaryExpression	128		3595670	1					
ANR	3595845	IfStatement	if ( r_buf_size ( bin -> b ) > _128K && ( bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386 ) )		3595670	12					
ANR	3595846	Condition	r_buf_size ( bin -> b ) > _128K && ( bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386 )	298:5:10388:10485	3595670	0	True				
ANR	3595847	AndExpression	r_buf_size ( bin -> b ) > _128K && ( bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386 )		3595670	0		&&			
ANR	3595848	RelationalExpression	r_buf_size ( bin -> b ) > _128K		3595670	0		>			
ANR	3595849	CallExpression	r_buf_size ( bin -> b )		3595670	0					
ANR	3595850	Callee	r_buf_size		3595670	0					
ANR	3595851	Identifier	r_buf_size		3595670	0					
ANR	3595852	ArgumentList	bin -> b		3595670	1					
ANR	3595853	Argument	bin -> b		3595670	0					
ANR	3595854	PtrMemberAccess	bin -> b		3595670	0					
ANR	3595855	Identifier	bin		3595670	0					
ANR	3595856	Identifier	b		3595670	1					
ANR	3595857	Identifier	_128K		3595670	1					
ANR	3595858	OrExpression	bin -> ehdr . e_machine == EM_X86_64 || bin -> ehdr . e_machine == EM_386		3595670	1		||			
ANR	3595859	EqualityExpression	bin -> ehdr . e_machine == EM_X86_64		3595670	0		==			
ANR	3595860	MemberAccess	bin -> ehdr . e_machine		3595670	0					
ANR	3595861	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595862	Identifier	bin		3595670	0					
ANR	3595863	Identifier	ehdr		3595670	1					
ANR	3595864	Identifier	e_machine		3595670	1					
ANR	3595865	Identifier	EM_X86_64		3595670	1					
ANR	3595866	EqualityExpression	bin -> ehdr . e_machine == EM_386		3595670	1		==			
ANR	3595867	MemberAccess	bin -> ehdr . e_machine		3595670	0					
ANR	3595868	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595869	Identifier	bin		3595670	0					
ANR	3595870	Identifier	ehdr		3595670	1					
ANR	3595871	Identifier	e_machine		3595670	1					
ANR	3595872	Identifier	EM_386		3595670	1					
ANR	3595873	CompoundStatement		35:105:803:803	3595670	1					
ANR	3595874	ExpressionStatement	linux_kern_hack = true	299:2:10492:10514	3595670	0	True				
ANR	3595875	AssignmentExpression	linux_kern_hack = true		3595670	0		=			
ANR	3595876	Identifier	linux_kern_hack		3595670	0					
ANR	3595877	Identifier	true		3595670	1					
ANR	3595878	IfStatement	"if ( ! read_phdr ( bin , linux_kern_hack ) )"		3595670	13					
ANR	3595879	Condition	"! read_phdr ( bin , linux_kern_hack )"	301:5:10524:10556	3595670	0	True				
ANR	3595880	UnaryOperationExpression	"! read_phdr ( bin , linux_kern_hack )"		3595670	0					
ANR	3595881	UnaryOperator	!		3595670	0					
ANR	3595882	CallExpression	"read_phdr ( bin , linux_kern_hack )"		3595670	1					
ANR	3595883	Callee	read_phdr		3595670	0					
ANR	3595884	Identifier	read_phdr		3595670	0					
ANR	3595885	ArgumentList	bin		3595670	1					
ANR	3595886	Argument	bin		3595670	0					
ANR	3595887	Identifier	bin		3595670	0					
ANR	3595888	Argument	linux_kern_hack		3595670	1					
ANR	3595889	Identifier	linux_kern_hack		3595670	0					
ANR	3595890	CompoundStatement		38:40:874:874	3595670	1					
ANR	3595891	ReturnStatement	return false ;	302:2:10563:10575	3595670	0	True				
ANR	3595892	Identifier	false		3595670	0					
ANR	3595893	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_phdr.offset"" , bin -> ehdr . e_phoff , 0 )"	305:1:10582:10644	3595670	14	True				
ANR	3595894	CallExpression	"sdb_num_set ( bin -> kv , ""elf_phdr.offset"" , bin -> ehdr . e_phoff , 0 )"		3595670	0					
ANR	3595895	Callee	sdb_num_set		3595670	0					
ANR	3595896	Identifier	sdb_num_set		3595670	0					
ANR	3595897	ArgumentList	bin -> kv		3595670	1					
ANR	3595898	Argument	bin -> kv		3595670	0					
ANR	3595899	PtrMemberAccess	bin -> kv		3595670	0					
ANR	3595900	Identifier	bin		3595670	0					
ANR	3595901	Identifier	kv		3595670	1					
ANR	3595902	Argument	"""elf_phdr.offset"""		3595670	1					
ANR	3595903	PrimaryExpression	"""elf_phdr.offset"""		3595670	0					
ANR	3595904	Argument	bin -> ehdr . e_phoff		3595670	2					
ANR	3595905	MemberAccess	bin -> ehdr . e_phoff		3595670	0					
ANR	3595906	PtrMemberAccess	bin -> ehdr		3595670	0					
ANR	3595907	Identifier	bin		3595670	0					
ANR	3595908	Identifier	ehdr		3595670	1					
ANR	3595909	Identifier	e_phoff		3595670	1					
ANR	3595910	Argument	0		3595670	3					
ANR	3595911	PrimaryExpression	0		3595670	0					
ANR	3595912	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_phdr.size"" , sizeof ( Elf_ ( Phdr ) ) , 0 )"	306:1:10647:10709	3595670	15	True				
ANR	3595913	CallExpression	"sdb_num_set ( bin -> kv , ""elf_phdr.size"" , sizeof ( Elf_ ( Phdr ) ) , 0 )"		3595670	0					
ANR	3595914	Callee	sdb_num_set		3595670	0					
ANR	3595915	Identifier	sdb_num_set		3595670	0					
ANR	3595916	ArgumentList	bin -> kv		3595670	1					
ANR	3595917	Argument	bin -> kv		3595670	0					
ANR	3595918	PtrMemberAccess	bin -> kv		3595670	0					
ANR	3595919	Identifier	bin		3595670	0					
ANR	3595920	Identifier	kv		3595670	1					
ANR	3595921	Argument	"""elf_phdr.size"""		3595670	1					
ANR	3595922	PrimaryExpression	"""elf_phdr.size"""		3595670	0					
ANR	3595923	Argument	sizeof ( Elf_ ( Phdr ) )		3595670	2					
ANR	3595924	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		3595670	0					
ANR	3595925	Sizeof	sizeof		3595670	0					
ANR	3595926	CallExpression	Elf_ ( Phdr )		3595670	1					
ANR	3595927	Callee	Elf_		3595670	0					
ANR	3595928	Identifier	Elf_		3595670	0					
ANR	3595929	ArgumentList	Phdr		3595670	1					
ANR	3595930	Argument	Phdr		3595670	0					
ANR	3595931	Identifier	Phdr		3595670	0					
ANR	3595932	Argument	0		3595670	3					
ANR	3595933	PrimaryExpression	0		3595670	0					
ANR	3595934	Statement	sdb_set	307:1:10712:10718	3595670	16	True				
ANR	3595935	Statement	(	307:9:10720:10720	3595670	17	True				
ANR	3595936	Statement	bin	307:10:10721:10723	3595670	18	True				
ANR	3595937	Statement	->	307:13:10724:10725	3595670	19	True				
ANR	3595938	Statement	kv	307:15:10726:10727	3595670	20	True				
ANR	3595939	Statement	","	307:17:10728:10728	3595670	21	True				
ANR	3595940	Statement	"""elf_p_type.cparse"""	307:19:10730:10748	3595670	22	True				
ANR	3595941	Statement	","	307:38:10749:10749	3595670	23	True				
ANR	3595942	Statement	"""enum elf_p_type {PT_NULL=0,PT_LOAD=1,PT_DYNAMIC=2,"""	307:40:10751:10802	3595670	24	True				
ANR	3595943	Statement	"""PT_INTERP=3,PT_NOTE=4,PT_SHLIB=5,PT_PHDR=6,PT_LOOS=0x60000000,"""	308:2:10806:10869	3595670	25	True				
ANR	3595944	Statement	"""PT_HIOS=0x6fffffff,PT_LOPROC=0x70000000,PT_HIPROC=0x7fffffff};"""	309:2:10873:10936	3595670	26	True				
ANR	3595945	Statement	","	309:66:10937:10937	3595670	27	True				
ANR	3595946	Statement	0	310:2:10941:10941	3595670	28	True				
ANR	3595947	Statement	)	310:3:10942:10942	3595670	29	True				
ANR	3595948	ExpressionStatement		310:4:10943:10943	3595670	30	True				
ANR	3595949	Statement	sdb_set	311:1:10946:10952	3595670	31	True				
ANR	3595950	Statement	(	311:9:10954:10954	3595670	32	True				
ANR	3595951	Statement	bin	311:10:10955:10957	3595670	33	True				
ANR	3595952	Statement	->	311:13:10958:10959	3595670	34	True				
ANR	3595953	Statement	kv	311:15:10960:10961	3595670	35	True				
ANR	3595954	Statement	","	311:17:10962:10962	3595670	36	True				
ANR	3595955	Statement	"""elf_p_flags.cparse"""	311:19:10964:10983	3595670	37	True				
ANR	3595956	Statement	","	311:39:10984:10984	3595670	38	True				
ANR	3595957	Statement	"""enum elf_p_flags {PF_None=0,PF_Exec=1,"""	311:41:10986:11025	3595670	39	True				
ANR	3595958	Statement	"""PF_Write=2,PF_Write_Exec=3,PF_Read=4,PF_Read_Exec=5,PF_Read_Write=6,"""	312:3:11030:11099	3595670	40	True				
ANR	3595959	Statement	"""PF_Read_Write_Exec=7};"""	313:3:11104:11127	3595670	41	True				
ANR	3595960	Statement	","	313:27:11128:11128	3595670	42	True				
ANR	3595961	Statement	0	313:29:11130:11130	3595670	43	True				
ANR	3595962	Statement	)	313:30:11131:11131	3595670	44	True				
ANR	3595963	ExpressionStatement		313:31:11132:11132	3595670	45	True				
ANR	3595964	Statement	sdb_set	315:1:11151:11157	3595670	46	True				
ANR	3595965	Statement	(	315:9:11159:11159	3595670	47	True				
ANR	3595966	Statement	bin	315:10:11160:11162	3595670	48	True				
ANR	3595967	Statement	->	315:13:11163:11164	3595670	49	True				
ANR	3595968	Statement	kv	315:15:11165:11166	3595670	50	True				
ANR	3595969	Statement	","	315:17:11167:11167	3595670	51	True				
ANR	3595970	Statement	"""elf_phdr.format"""	315:19:11169:11185	3595670	52	True				
ANR	3595971	Statement	","	315:36:11186:11186	3595670	53	True				
ANR	3595972	Statement	"""[4]E[4]Eqqqqqq (elf_p_type)type (elf_p_flags)flags"""	315:38:11188:11239	3595670	54	True				
ANR	3595973	Statement	""" offset vaddr paddr filesz memsz align"""	316:3:11244:11283	3595670	55	True				
ANR	3595974	Statement	","	316:43:11284:11284	3595670	56	True				
ANR	3595975	Statement	0	316:45:11286:11286	3595670	57	True				
ANR	3595976	Statement	)	316:46:11287:11287	3595670	58	True				
ANR	3595977	ExpressionStatement		316:47:11288:11288	3595670	59	True				
ANR	3595978	ReturnStatement	return true ;	321:1:11444:11455	3595670	60	True				
ANR	3595979	Identifier	true		3595670	0					
ANR	3595980	ReturnType	static int		3595670	1					
ANR	3595981	Identifier	init_phdr		3595670	2					
ANR	3595982	ParameterList	ELFOBJ * bin		3595670	3					
ANR	3595983	Parameter	ELFOBJ * bin	264:21:9671:9681	3595670	0	True				
ANR	3595984	ParameterType	ELFOBJ *		3595670	0					
ANR	3595985	Identifier	bin		3595670	1					
ANR	3595986	CFGEntryNode	ENTRY		3595670		True				
ANR	3595987	CFGExitNode	EXIT		3595670		True				
ANR	3595988	Symbol	UT32_MUL		3595670						
ANR	3595989	Symbol	Elf_		3595670						
ANR	3595990	Symbol	bin -> size		3595670						
ANR	3595991	Symbol	_128K		3595670						
ANR	3595992	Symbol	bin -> b		3595670						
ANR	3595993	Symbol	Phdr		3595670						
ANR	3595994	Symbol	bin		3595670						
ANR	3595995	Symbol	false		3595670						
ANR	3595996	Symbol	phdr_size		3595670						
ANR	3595997	Symbol	bin -> phdr		3595670						
ANR	3595998	Symbol	bin -> ehdr . e_phnum		3595670						
ANR	3595999	Symbol	EM_X86_64		3595670						
ANR	3596000	Symbol	bin -> kv		3595670						
ANR	3596001	Symbol	linux_kern_hack		3595670						
ANR	3596002	Symbol	* bin		3595670						
ANR	3596003	Symbol	read_phdr		3595670						
ANR	3596004	Symbol	bin -> ehdr . e_phoff		3595670						
ANR	3596005	Symbol	& phdr_size		3595670						
ANR	3596006	Symbol	bin -> ehdr		3595670						
ANR	3596007	Symbol	R_NEWS0		3595670						
ANR	3596008	Symbol	bin -> ehdr . e_machine		3595670						
ANR	3596009	Symbol	true		3595670						
ANR	3596010	Symbol	EM_386		3595670						
ANR	3596011	Symbol	r_buf_size		3595670						
ANR	3596012	Function	init_shdr	327:0:11640:14383							
ANR	3596013	FunctionDef	init_shdr (ELFOBJ * bin)		3596012	0					
ANR	3596014	CompoundStatement		327:34:11674:14383	3596012	0					
ANR	3596015	IdentifierDeclStatement	ut32 shdr_size ;	328:1:11677:11691	3596012	0	True				
ANR	3596016	IdentifierDecl	shdr_size		3596012	0					
ANR	3596017	IdentifierDeclType	ut32		3596012	0					
ANR	3596018	Identifier	shdr_size		3596012	1					
ANR	3596019	IdentifierDeclStatement	ut8 shdr [ sizeof ( Elf_ ( Shdr ) ) ] = { 0 } ;	329:1:11694:11731	3596012	1	True				
ANR	3596020	IdentifierDecl	shdr [ sizeof ( Elf_ ( Shdr ) ) ] = { 0 }		3596012	0					
ANR	3596021	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Shdr ) ) ]		3596012	0					
ANR	3596022	Identifier	shdr		3596012	1					
ANR	3596023	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3596012	2					
ANR	3596024	Sizeof	sizeof		3596012	0					
ANR	3596025	CallExpression	Elf_ ( Shdr )		3596012	1					
ANR	3596026	Callee	Elf_		3596012	0					
ANR	3596027	Identifier	Elf_		3596012	0					
ANR	3596028	ArgumentList	Shdr		3596012	1					
ANR	3596029	Argument	Shdr		3596012	0					
ANR	3596030	Identifier	Shdr		3596012	0					
ANR	3596031	AssignmentExpression	shdr [ sizeof ( Elf_ ( Shdr ) ) ] = { 0 }		3596012	3		=			
ANR	3596032	Identifier	shdr		3596012	0					
ANR	3596033	InitializerList	0		3596012	1					
ANR	3596034	PrimaryExpression	0		3596012	0					
ANR	3596035	IdentifierDeclStatement	"int i , j , len ;"	330:1:11734:11747	3596012	2	True				
ANR	3596036	IdentifierDecl	i		3596012	0					
ANR	3596037	IdentifierDeclType	int		3596012	0					
ANR	3596038	Identifier	i		3596012	1					
ANR	3596039	IdentifierDecl	j		3596012	1					
ANR	3596040	IdentifierDeclType	int		3596012	0					
ANR	3596041	Identifier	j		3596012	1					
ANR	3596042	IdentifierDecl	len		3596012	2					
ANR	3596043	IdentifierDeclType	int		3596012	0					
ANR	3596044	Identifier	len		3596012	1					
ANR	3596045	ExpressionStatement	"r_return_val_if_fail ( bin && ! bin -> shdr , false )"	332:1:11751:11798	3596012	3	True				
ANR	3596046	CallExpression	"r_return_val_if_fail ( bin && ! bin -> shdr , false )"		3596012	0					
ANR	3596047	Callee	r_return_val_if_fail		3596012	0					
ANR	3596048	Identifier	r_return_val_if_fail		3596012	0					
ANR	3596049	ArgumentList	bin && ! bin -> shdr		3596012	1					
ANR	3596050	Argument	bin && ! bin -> shdr		3596012	0					
ANR	3596051	AndExpression	bin && ! bin -> shdr		3596012	0		&&			
ANR	3596052	Identifier	bin		3596012	0					
ANR	3596053	UnaryOperationExpression	! bin -> shdr		3596012	1					
ANR	3596054	UnaryOperator	!		3596012	0					
ANR	3596055	PtrMemberAccess	bin -> shdr		3596012	1					
ANR	3596056	Identifier	bin		3596012	0					
ANR	3596057	Identifier	shdr		3596012	1					
ANR	3596058	Argument	false		3596012	1					
ANR	3596059	Identifier	false		3596012	0					
ANR	3596060	IfStatement	"if ( ! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) ) )"		3596012	4					
ANR	3596061	Condition	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"	334:5:11806:11867	3596012	0	True				
ANR	3596062	UnaryOperationExpression	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		3596012	0					
ANR	3596063	UnaryOperator	!		3596012	0					
ANR	3596064	CallExpression	"UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		3596012	1					
ANR	3596065	Callee	UT32_MUL		3596012	0					
ANR	3596066	Identifier	UT32_MUL		3596012	0					
ANR	3596067	ArgumentList	& shdr_size		3596012	1					
ANR	3596068	Argument	& shdr_size		3596012	0					
ANR	3596069	UnaryOperationExpression	& shdr_size		3596012	0					
ANR	3596070	UnaryOperator	&		3596012	0					
ANR	3596071	Identifier	shdr_size		3596012	1					
ANR	3596072	Argument	bin -> ehdr . e_shnum		3596012	1					
ANR	3596073	MemberAccess	bin -> ehdr . e_shnum		3596012	0					
ANR	3596074	PtrMemberAccess	bin -> ehdr		3596012	0					
ANR	3596075	Identifier	bin		3596012	0					
ANR	3596076	Identifier	ehdr		3596012	1					
ANR	3596077	Identifier	e_shnum		3596012	1					
ANR	3596078	Argument	sizeof ( Elf_ ( Shdr ) )		3596012	2					
ANR	3596079	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3596012	0					
ANR	3596080	Sizeof	sizeof		3596012	0					
ANR	3596081	CallExpression	Elf_ ( Shdr )		3596012	1					
ANR	3596082	Callee	Elf_		3596012	0					
ANR	3596083	Identifier	Elf_		3596012	0					
ANR	3596084	ArgumentList	Shdr		3596012	1					
ANR	3596085	Argument	Shdr		3596012	0					
ANR	3596086	Identifier	Shdr		3596012	0					
ANR	3596087	CompoundStatement		8:69:195:195	3596012	1					
ANR	3596088	ReturnStatement	return false ;	335:2:11874:11886	3596012	0	True				
ANR	3596089	Identifier	false		3596012	0					
ANR	3596090	IfStatement	if ( shdr_size < 1 )		3596012	5					
ANR	3596091	Condition	shdr_size < 1	337:5:11896:11908	3596012	0	True				
ANR	3596092	RelationalExpression	shdr_size < 1		3596012	0		<			
ANR	3596093	Identifier	shdr_size		3596012	0					
ANR	3596094	PrimaryExpression	1		3596012	1					
ANR	3596095	CompoundStatement		11:20:236:236	3596012	1					
ANR	3596096	ReturnStatement	return false ;	338:2:11915:11927	3596012	0	True				
ANR	3596097	Identifier	false		3596012	0					
ANR	3596098	IfStatement	if ( shdr_size > bin -> size )		3596012	6					
ANR	3596099	Condition	shdr_size > bin -> size	340:5:11937:11957	3596012	0	True				
ANR	3596100	RelationalExpression	shdr_size > bin -> size		3596012	0		>			
ANR	3596101	Identifier	shdr_size		3596012	0					
ANR	3596102	PtrMemberAccess	bin -> size		3596012	1					
ANR	3596103	Identifier	bin		3596012	0					
ANR	3596104	Identifier	size		3596012	1					
ANR	3596105	CompoundStatement		14:28:285:285	3596012	1					
ANR	3596106	ReturnStatement	return false ;	341:2:11964:11976	3596012	0	True				
ANR	3596107	Identifier	false		3596012	0					
ANR	3596108	IfStatement	if ( bin -> ehdr . e_shoff > bin -> size )		3596012	7					
ANR	3596109	Condition	bin -> ehdr . e_shoff > bin -> size	343:5:11986:12014	3596012	0	True				
ANR	3596110	RelationalExpression	bin -> ehdr . e_shoff > bin -> size		3596012	0		>			
ANR	3596111	MemberAccess	bin -> ehdr . e_shoff		3596012	0					
ANR	3596112	PtrMemberAccess	bin -> ehdr		3596012	0					
ANR	3596113	Identifier	bin		3596012	0					
ANR	3596114	Identifier	ehdr		3596012	1					
ANR	3596115	Identifier	e_shoff		3596012	1					
ANR	3596116	PtrMemberAccess	bin -> size		3596012	1					
ANR	3596117	Identifier	bin		3596012	0					
ANR	3596118	Identifier	size		3596012	1					
ANR	3596119	CompoundStatement		17:36:342:342	3596012	1					
ANR	3596120	ReturnStatement	return false ;	344:2:12021:12033	3596012	0	True				
ANR	3596121	Identifier	false		3596012	0					
ANR	3596122	IfStatement	if ( bin -> ehdr . e_shoff + shdr_size > bin -> size )		3596012	8					
ANR	3596123	Condition	bin -> ehdr . e_shoff + shdr_size > bin -> size	346:5:12043:12083	3596012	0	True				
ANR	3596124	RelationalExpression	bin -> ehdr . e_shoff + shdr_size > bin -> size		3596012	0		>			
ANR	3596125	AdditiveExpression	bin -> ehdr . e_shoff + shdr_size		3596012	0		+			
ANR	3596126	MemberAccess	bin -> ehdr . e_shoff		3596012	0					
ANR	3596127	PtrMemberAccess	bin -> ehdr		3596012	0					
ANR	3596128	Identifier	bin		3596012	0					
ANR	3596129	Identifier	ehdr		3596012	1					
ANR	3596130	Identifier	e_shoff		3596012	1					
ANR	3596131	Identifier	shdr_size		3596012	1					
ANR	3596132	PtrMemberAccess	bin -> size		3596012	1					
ANR	3596133	Identifier	bin		3596012	0					
ANR	3596134	Identifier	size		3596012	1					
ANR	3596135	CompoundStatement		20:48:411:411	3596012	1					
ANR	3596136	ReturnStatement	return false ;	347:2:12090:12102	3596012	0	True				
ANR	3596137	Identifier	false		3596012	0					
ANR	3596138	IfStatement	"if ( ! ( bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum ) ) )"		3596012	9					
ANR	3596139	Condition	"! ( bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum ) )"	349:5:12112:12165	3596012	0	True				
ANR	3596140	UnaryOperationExpression	"! ( bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum ) )"		3596012	0					
ANR	3596141	UnaryOperator	!		3596012	0					
ANR	3596142	AssignmentExpression	"bin -> shdr = R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum )"		3596012	1		=			
ANR	3596143	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596144	Identifier	bin		3596012	0					
ANR	3596145	Identifier	shdr		3596012	1					
ANR	3596146	CallExpression	"R_NEWS0 ( Elf_ ( Shdr ) , bin -> ehdr . e_shnum )"		3596012	1					
ANR	3596147	Callee	R_NEWS0		3596012	0					
ANR	3596148	Identifier	R_NEWS0		3596012	0					
ANR	3596149	ArgumentList	Elf_ ( Shdr )		3596012	1					
ANR	3596150	Argument	Elf_ ( Shdr )		3596012	0					
ANR	3596151	CallExpression	Elf_ ( Shdr )		3596012	0					
ANR	3596152	Callee	Elf_		3596012	0					
ANR	3596153	Identifier	Elf_		3596012	0					
ANR	3596154	ArgumentList	Shdr		3596012	1					
ANR	3596155	Argument	Shdr		3596012	0					
ANR	3596156	Identifier	Shdr		3596012	0					
ANR	3596157	Argument	bin -> ehdr . e_shnum		3596012	1					
ANR	3596158	MemberAccess	bin -> ehdr . e_shnum		3596012	0					
ANR	3596159	PtrMemberAccess	bin -> ehdr		3596012	0					
ANR	3596160	Identifier	bin		3596012	0					
ANR	3596161	Identifier	ehdr		3596012	1					
ANR	3596162	Identifier	e_shnum		3596012	1					
ANR	3596163	CompoundStatement		23:61:493:493	3596012	1					
ANR	3596164	ExpressionStatement	"perror ( ""malloc (shdr)"" )"	350:2:12172:12196	3596012	0	True				
ANR	3596165	CallExpression	"perror ( ""malloc (shdr)"" )"		3596012	0					
ANR	3596166	Callee	perror		3596012	0					
ANR	3596167	Identifier	perror		3596012	0					
ANR	3596168	ArgumentList	"""malloc (shdr)"""		3596012	1					
ANR	3596169	Argument	"""malloc (shdr)"""		3596012	0					
ANR	3596170	PrimaryExpression	"""malloc (shdr)"""		3596012	0					
ANR	3596171	ReturnStatement	return false ;	351:2:12200:12212	3596012	1	True				
ANR	3596172	Identifier	false		3596012	0					
ANR	3596173	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shdr.offset"" , bin -> ehdr . e_shoff , 0 )"	353:1:12218:12280	3596012	10	True				
ANR	3596174	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shdr.offset"" , bin -> ehdr . e_shoff , 0 )"		3596012	0					
ANR	3596175	Callee	sdb_num_set		3596012	0					
ANR	3596176	Identifier	sdb_num_set		3596012	0					
ANR	3596177	ArgumentList	bin -> kv		3596012	1					
ANR	3596178	Argument	bin -> kv		3596012	0					
ANR	3596179	PtrMemberAccess	bin -> kv		3596012	0					
ANR	3596180	Identifier	bin		3596012	0					
ANR	3596181	Identifier	kv		3596012	1					
ANR	3596182	Argument	"""elf_shdr.offset"""		3596012	1					
ANR	3596183	PrimaryExpression	"""elf_shdr.offset"""		3596012	0					
ANR	3596184	Argument	bin -> ehdr . e_shoff		3596012	2					
ANR	3596185	MemberAccess	bin -> ehdr . e_shoff		3596012	0					
ANR	3596186	PtrMemberAccess	bin -> ehdr		3596012	0					
ANR	3596187	Identifier	bin		3596012	0					
ANR	3596188	Identifier	ehdr		3596012	1					
ANR	3596189	Identifier	e_shoff		3596012	1					
ANR	3596190	Argument	0		3596012	3					
ANR	3596191	PrimaryExpression	0		3596012	0					
ANR	3596192	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shdr.size"" , sizeof ( Elf_ ( Shdr ) ) , 0 )"	354:1:12283:12345	3596012	11	True				
ANR	3596193	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shdr.size"" , sizeof ( Elf_ ( Shdr ) ) , 0 )"		3596012	0					
ANR	3596194	Callee	sdb_num_set		3596012	0					
ANR	3596195	Identifier	sdb_num_set		3596012	0					
ANR	3596196	ArgumentList	bin -> kv		3596012	1					
ANR	3596197	Argument	bin -> kv		3596012	0					
ANR	3596198	PtrMemberAccess	bin -> kv		3596012	0					
ANR	3596199	Identifier	bin		3596012	0					
ANR	3596200	Identifier	kv		3596012	1					
ANR	3596201	Argument	"""elf_shdr.size"""		3596012	1					
ANR	3596202	PrimaryExpression	"""elf_shdr.size"""		3596012	0					
ANR	3596203	Argument	sizeof ( Elf_ ( Shdr ) )		3596012	2					
ANR	3596204	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3596012	0					
ANR	3596205	Sizeof	sizeof		3596012	0					
ANR	3596206	CallExpression	Elf_ ( Shdr )		3596012	1					
ANR	3596207	Callee	Elf_		3596012	0					
ANR	3596208	Identifier	Elf_		3596012	0					
ANR	3596209	ArgumentList	Shdr		3596012	1					
ANR	3596210	Argument	Shdr		3596012	0					
ANR	3596211	Identifier	Shdr		3596012	0					
ANR	3596212	Argument	0		3596012	3					
ANR	3596213	PrimaryExpression	0		3596012	0					
ANR	3596214	Statement	sdb_set	355:1:12348:12354	3596012	12	True				
ANR	3596215	Statement	(	355:9:12356:12356	3596012	13	True				
ANR	3596216	Statement	bin	355:10:12357:12359	3596012	14	True				
ANR	3596217	Statement	->	355:13:12360:12361	3596012	15	True				
ANR	3596218	Statement	kv	355:15:12362:12363	3596012	16	True				
ANR	3596219	Statement	","	355:17:12364:12364	3596012	17	True				
ANR	3596220	Statement	"""elf_s_type.cparse"""	355:19:12366:12384	3596012	18	True				
ANR	3596221	Statement	","	355:38:12385:12385	3596012	19	True				
ANR	3596222	Statement	"""enum elf_s_type {SHT_NULL=0,SHT_PROGBITS=1,"""	355:40:12387:12431	3596012	20	True				
ANR	3596223	Statement	"""SHT_SYMTAB=2,SHT_STRTAB=3,SHT_RELA=4,SHT_HASH=5,SHT_DYNAMIC=6,SHT_NOTE=7,"""	356:3:12436:12510	3596012	21	True				
ANR	3596224	Statement	"""SHT_NOBITS=8,SHT_REL=9,SHT_SHLIB=10,SHT_DYNSYM=11,SHT_LOOS=0x60000000,"""	357:3:12515:12586	3596012	22	True				
ANR	3596225	Statement	"""SHT_HIOS=0x6fffffff,SHT_LOPROC=0x70000000,SHT_HIPROC=0x7fffffff};"""	358:3:12591:12657	3596012	23	True				
ANR	3596226	Statement	","	358:70:12658:12658	3596012	24	True				
ANR	3596227	Statement	0	358:72:12660:12660	3596012	25	True				
ANR	3596228	Statement	)	358:73:12661:12661	3596012	26	True				
ANR	3596229	ExpressionStatement		358:74:12662:12662	3596012	27	True				
ANR	3596230	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		3596012	28					
ANR	3596231	ForInit	i = 0 ;	360:6:12671:12676	3596012	0	True				
ANR	3596232	AssignmentExpression	i = 0		3596012	0		=			
ANR	3596233	Identifier	i		3596012	0					
ANR	3596234	PrimaryExpression	0		3596012	1					
ANR	3596235	Condition	i < bin -> ehdr . e_shnum	360:13:12678:12698	3596012	1	True				
ANR	3596236	RelationalExpression	i < bin -> ehdr . e_shnum		3596012	0		<			
ANR	3596237	Identifier	i		3596012	0					
ANR	3596238	MemberAccess	bin -> ehdr . e_shnum		3596012	1					
ANR	3596239	PtrMemberAccess	bin -> ehdr		3596012	0					
ANR	3596240	Identifier	bin		3596012	0					
ANR	3596241	Identifier	ehdr		3596012	1					
ANR	3596242	Identifier	e_shnum		3596012	1					
ANR	3596243	PostIncDecOperationExpression	i ++	360:36:12701:12703	3596012	2	True				
ANR	3596244	Identifier	i		3596012	0					
ANR	3596245	IncDec	++		3596012	1					
ANR	3596246	CompoundStatement		34:41:1031:1031	3596012	3					
ANR	3596247	ExpressionStatement	j = 0	361:2:12710:12715	3596012	0	True				
ANR	3596248	AssignmentExpression	j = 0		3596012	0		=			
ANR	3596249	Identifier	j		3596012	0					
ANR	3596250	PrimaryExpression	0		3596012	1					
ANR	3596251	ExpressionStatement	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) ) , shdr , sizeof ( Elf_ ( Shdr ) ) )"	362:2:12719:12819	3596012	1	True				
ANR	3596252	AssignmentExpression	"len = r_buf_read_at ( bin -> b , bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) ) , shdr , sizeof ( Elf_ ( Shdr ) ) )"		3596012	0		=			
ANR	3596253	Identifier	len		3596012	0					
ANR	3596254	CallExpression	"r_buf_read_at ( bin -> b , bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) ) , shdr , sizeof ( Elf_ ( Shdr ) ) )"		3596012	1					
ANR	3596255	Callee	r_buf_read_at		3596012	0					
ANR	3596256	Identifier	r_buf_read_at		3596012	0					
ANR	3596257	ArgumentList	bin -> b		3596012	1					
ANR	3596258	Argument	bin -> b		3596012	0					
ANR	3596259	PtrMemberAccess	bin -> b		3596012	0					
ANR	3596260	Identifier	bin		3596012	0					
ANR	3596261	Identifier	b		3596012	1					
ANR	3596262	Argument	bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) )		3596012	1					
ANR	3596263	AdditiveExpression	bin -> ehdr . e_shoff + i * sizeof ( Elf_ ( Shdr ) )		3596012	0		+			
ANR	3596264	MemberAccess	bin -> ehdr . e_shoff		3596012	0					
ANR	3596265	PtrMemberAccess	bin -> ehdr		3596012	0					
ANR	3596266	Identifier	bin		3596012	0					
ANR	3596267	Identifier	ehdr		3596012	1					
ANR	3596268	Identifier	e_shoff		3596012	1					
ANR	3596269	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		3596012	1		*			
ANR	3596270	Identifier	i		3596012	0					
ANR	3596271	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3596012	1					
ANR	3596272	Sizeof	sizeof		3596012	0					
ANR	3596273	CallExpression	Elf_ ( Shdr )		3596012	1					
ANR	3596274	Callee	Elf_		3596012	0					
ANR	3596275	Identifier	Elf_		3596012	0					
ANR	3596276	ArgumentList	Shdr		3596012	1					
ANR	3596277	Argument	Shdr		3596012	0					
ANR	3596278	Identifier	Shdr		3596012	0					
ANR	3596279	Argument	shdr		3596012	2					
ANR	3596280	Identifier	shdr		3596012	0					
ANR	3596281	Argument	sizeof ( Elf_ ( Shdr ) )		3596012	3					
ANR	3596282	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3596012	0					
ANR	3596283	Sizeof	sizeof		3596012	0					
ANR	3596284	CallExpression	Elf_ ( Shdr )		3596012	1					
ANR	3596285	Callee	Elf_		3596012	0					
ANR	3596286	Identifier	Elf_		3596012	0					
ANR	3596287	ArgumentList	Shdr		3596012	1					
ANR	3596288	Argument	Shdr		3596012	0					
ANR	3596289	Identifier	Shdr		3596012	0					
ANR	3596290	IfStatement	if ( len < 1 )		3596012	2					
ANR	3596291	Condition	len < 1	363:6:12827:12833	3596012	0	True				
ANR	3596292	RelationalExpression	len < 1		3596012	0		<			
ANR	3596293	Identifier	len		3596012	0					
ANR	3596294	PrimaryExpression	1		3596012	1					
ANR	3596295	CompoundStatement		37:15:1161:1161	3596012	1					
ANR	3596296	Statement	bprintf	364:3:12841:12847	3596012	0	True				
ANR	3596297	Statement	(	364:11:12849:12849	3596012	1	True				
ANR	3596298	Statement	"""read (shdr) at 0x%"""	364:12:12850:12869	3596012	2	True				
ANR	3596299	Statement	PFMT64x	364:33:12871:12877	3596012	3	True				
ANR	3596300	Statement	"""\\n"""	364:41:12879:12882	3596012	4	True				
ANR	3596301	Statement	","	364:45:12883:12883	3596012	5	True				
ANR	3596302	Statement	(	364:47:12885:12885	3596012	6	True				
ANR	3596303	Statement	ut64	364:48:12886:12889	3596012	7	True				
ANR	3596304	Statement	)	364:52:12890:12890	3596012	8	True				
ANR	3596305	Statement	bin	364:54:12892:12894	3596012	9	True				
ANR	3596306	Statement	->	364:57:12895:12896	3596012	10	True				
ANR	3596307	Statement	ehdr	364:59:12897:12900	3596012	11	True				
ANR	3596308	Statement	.	364:63:12901:12901	3596012	12	True				
ANR	3596309	Statement	e_shoff	364:64:12902:12908	3596012	13	True				
ANR	3596310	Statement	)	364:71:12909:12909	3596012	14	True				
ANR	3596311	ExpressionStatement		364:72:12910:12910	3596012	15	True				
ANR	3596312	ExpressionStatement	R_FREE ( bin -> shdr )	365:3:12915:12933	3596012	16	True				
ANR	3596313	CallExpression	R_FREE ( bin -> shdr )		3596012	0					
ANR	3596314	Callee	R_FREE		3596012	0					
ANR	3596315	Identifier	R_FREE		3596012	0					
ANR	3596316	ArgumentList	bin -> shdr		3596012	1					
ANR	3596317	Argument	bin -> shdr		3596012	0					
ANR	3596318	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596319	Identifier	bin		3596012	0					
ANR	3596320	Identifier	shdr		3596012	1					
ANR	3596321	ReturnStatement	return false ;	366:3:12938:12950	3596012	17	True				
ANR	3596322	Identifier	false		3596012	0					
ANR	3596323	ExpressionStatement	"bin -> shdr [ i ] . sh_name = READ32 ( shdr , j )"	368:2:12958:12997	3596012	3	True				
ANR	3596324	AssignmentExpression	"bin -> shdr [ i ] . sh_name = READ32 ( shdr , j )"		3596012	0		=			
ANR	3596325	MemberAccess	bin -> shdr [ i ] . sh_name		3596012	0					
ANR	3596326	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596327	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596328	Identifier	bin		3596012	0					
ANR	3596329	Identifier	shdr		3596012	1					
ANR	3596330	Identifier	i		3596012	1					
ANR	3596331	Identifier	sh_name		3596012	1					
ANR	3596332	CallExpression	"READ32 ( shdr , j )"		3596012	1					
ANR	3596333	Callee	READ32		3596012	0					
ANR	3596334	Identifier	READ32		3596012	0					
ANR	3596335	ArgumentList	shdr		3596012	1					
ANR	3596336	Argument	shdr		3596012	0					
ANR	3596337	Identifier	shdr		3596012	0					
ANR	3596338	Argument	j		3596012	1					
ANR	3596339	Identifier	j		3596012	0					
ANR	3596340	ExpressionStatement	"bin -> shdr [ i ] . sh_type = READ32 ( shdr , j )"	369:2:13001:13040	3596012	4	True				
ANR	3596341	AssignmentExpression	"bin -> shdr [ i ] . sh_type = READ32 ( shdr , j )"		3596012	0		=			
ANR	3596342	MemberAccess	bin -> shdr [ i ] . sh_type		3596012	0					
ANR	3596343	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596344	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596345	Identifier	bin		3596012	0					
ANR	3596346	Identifier	shdr		3596012	1					
ANR	3596347	Identifier	i		3596012	1					
ANR	3596348	Identifier	sh_type		3596012	1					
ANR	3596349	CallExpression	"READ32 ( shdr , j )"		3596012	1					
ANR	3596350	Callee	READ32		3596012	0					
ANR	3596351	Identifier	READ32		3596012	0					
ANR	3596352	ArgumentList	shdr		3596012	1					
ANR	3596353	Argument	shdr		3596012	0					
ANR	3596354	Identifier	shdr		3596012	0					
ANR	3596355	Argument	j		3596012	1					
ANR	3596356	Identifier	j		3596012	0					
ANR	3596357	ExpressionStatement	"bin -> shdr [ i ] . sh_flags = READWORD ( shdr , j )"	370:2:13044:13086	3596012	5	True				
ANR	3596358	AssignmentExpression	"bin -> shdr [ i ] . sh_flags = READWORD ( shdr , j )"		3596012	0		=			
ANR	3596359	MemberAccess	bin -> shdr [ i ] . sh_flags		3596012	0					
ANR	3596360	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596361	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596362	Identifier	bin		3596012	0					
ANR	3596363	Identifier	shdr		3596012	1					
ANR	3596364	Identifier	i		3596012	1					
ANR	3596365	Identifier	sh_flags		3596012	1					
ANR	3596366	CallExpression	"READWORD ( shdr , j )"		3596012	1					
ANR	3596367	Callee	READWORD		3596012	0					
ANR	3596368	Identifier	READWORD		3596012	0					
ANR	3596369	ArgumentList	shdr		3596012	1					
ANR	3596370	Argument	shdr		3596012	0					
ANR	3596371	Identifier	shdr		3596012	0					
ANR	3596372	Argument	j		3596012	1					
ANR	3596373	Identifier	j		3596012	0					
ANR	3596374	ExpressionStatement	"bin -> shdr [ i ] . sh_addr = READWORD ( shdr , j )"	371:2:13090:13131	3596012	6	True				
ANR	3596375	AssignmentExpression	"bin -> shdr [ i ] . sh_addr = READWORD ( shdr , j )"		3596012	0		=			
ANR	3596376	MemberAccess	bin -> shdr [ i ] . sh_addr		3596012	0					
ANR	3596377	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596378	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596379	Identifier	bin		3596012	0					
ANR	3596380	Identifier	shdr		3596012	1					
ANR	3596381	Identifier	i		3596012	1					
ANR	3596382	Identifier	sh_addr		3596012	1					
ANR	3596383	CallExpression	"READWORD ( shdr , j )"		3596012	1					
ANR	3596384	Callee	READWORD		3596012	0					
ANR	3596385	Identifier	READWORD		3596012	0					
ANR	3596386	ArgumentList	shdr		3596012	1					
ANR	3596387	Argument	shdr		3596012	0					
ANR	3596388	Identifier	shdr		3596012	0					
ANR	3596389	Argument	j		3596012	1					
ANR	3596390	Identifier	j		3596012	0					
ANR	3596391	ExpressionStatement	"bin -> shdr [ i ] . sh_offset = READWORD ( shdr , j )"	372:2:13135:13178	3596012	7	True				
ANR	3596392	AssignmentExpression	"bin -> shdr [ i ] . sh_offset = READWORD ( shdr , j )"		3596012	0		=			
ANR	3596393	MemberAccess	bin -> shdr [ i ] . sh_offset		3596012	0					
ANR	3596394	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596395	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596396	Identifier	bin		3596012	0					
ANR	3596397	Identifier	shdr		3596012	1					
ANR	3596398	Identifier	i		3596012	1					
ANR	3596399	Identifier	sh_offset		3596012	1					
ANR	3596400	CallExpression	"READWORD ( shdr , j )"		3596012	1					
ANR	3596401	Callee	READWORD		3596012	0					
ANR	3596402	Identifier	READWORD		3596012	0					
ANR	3596403	ArgumentList	shdr		3596012	1					
ANR	3596404	Argument	shdr		3596012	0					
ANR	3596405	Identifier	shdr		3596012	0					
ANR	3596406	Argument	j		3596012	1					
ANR	3596407	Identifier	j		3596012	0					
ANR	3596408	ExpressionStatement	"bin -> shdr [ i ] . sh_size = READWORD ( shdr , j )"	373:2:13182:13223	3596012	8	True				
ANR	3596409	AssignmentExpression	"bin -> shdr [ i ] . sh_size = READWORD ( shdr , j )"		3596012	0		=			
ANR	3596410	MemberAccess	bin -> shdr [ i ] . sh_size		3596012	0					
ANR	3596411	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596412	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596413	Identifier	bin		3596012	0					
ANR	3596414	Identifier	shdr		3596012	1					
ANR	3596415	Identifier	i		3596012	1					
ANR	3596416	Identifier	sh_size		3596012	1					
ANR	3596417	CallExpression	"READWORD ( shdr , j )"		3596012	1					
ANR	3596418	Callee	READWORD		3596012	0					
ANR	3596419	Identifier	READWORD		3596012	0					
ANR	3596420	ArgumentList	shdr		3596012	1					
ANR	3596421	Argument	shdr		3596012	0					
ANR	3596422	Identifier	shdr		3596012	0					
ANR	3596423	Argument	j		3596012	1					
ANR	3596424	Identifier	j		3596012	0					
ANR	3596425	ExpressionStatement	"bin -> shdr [ i ] . sh_link = READ32 ( shdr , j )"	374:2:13227:13266	3596012	9	True				
ANR	3596426	AssignmentExpression	"bin -> shdr [ i ] . sh_link = READ32 ( shdr , j )"		3596012	0		=			
ANR	3596427	MemberAccess	bin -> shdr [ i ] . sh_link		3596012	0					
ANR	3596428	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596429	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596430	Identifier	bin		3596012	0					
ANR	3596431	Identifier	shdr		3596012	1					
ANR	3596432	Identifier	i		3596012	1					
ANR	3596433	Identifier	sh_link		3596012	1					
ANR	3596434	CallExpression	"READ32 ( shdr , j )"		3596012	1					
ANR	3596435	Callee	READ32		3596012	0					
ANR	3596436	Identifier	READ32		3596012	0					
ANR	3596437	ArgumentList	shdr		3596012	1					
ANR	3596438	Argument	shdr		3596012	0					
ANR	3596439	Identifier	shdr		3596012	0					
ANR	3596440	Argument	j		3596012	1					
ANR	3596441	Identifier	j		3596012	0					
ANR	3596442	ExpressionStatement	"bin -> shdr [ i ] . sh_info = READ32 ( shdr , j )"	375:2:13270:13309	3596012	10	True				
ANR	3596443	AssignmentExpression	"bin -> shdr [ i ] . sh_info = READ32 ( shdr , j )"		3596012	0		=			
ANR	3596444	MemberAccess	bin -> shdr [ i ] . sh_info		3596012	0					
ANR	3596445	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596446	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596447	Identifier	bin		3596012	0					
ANR	3596448	Identifier	shdr		3596012	1					
ANR	3596449	Identifier	i		3596012	1					
ANR	3596450	Identifier	sh_info		3596012	1					
ANR	3596451	CallExpression	"READ32 ( shdr , j )"		3596012	1					
ANR	3596452	Callee	READ32		3596012	0					
ANR	3596453	Identifier	READ32		3596012	0					
ANR	3596454	ArgumentList	shdr		3596012	1					
ANR	3596455	Argument	shdr		3596012	0					
ANR	3596456	Identifier	shdr		3596012	0					
ANR	3596457	Argument	j		3596012	1					
ANR	3596458	Identifier	j		3596012	0					
ANR	3596459	ExpressionStatement	"bin -> shdr [ i ] . sh_addralign = READWORD ( shdr , j )"	376:2:13313:13359	3596012	11	True				
ANR	3596460	AssignmentExpression	"bin -> shdr [ i ] . sh_addralign = READWORD ( shdr , j )"		3596012	0		=			
ANR	3596461	MemberAccess	bin -> shdr [ i ] . sh_addralign		3596012	0					
ANR	3596462	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596463	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596464	Identifier	bin		3596012	0					
ANR	3596465	Identifier	shdr		3596012	1					
ANR	3596466	Identifier	i		3596012	1					
ANR	3596467	Identifier	sh_addralign		3596012	1					
ANR	3596468	CallExpression	"READWORD ( shdr , j )"		3596012	1					
ANR	3596469	Callee	READWORD		3596012	0					
ANR	3596470	Identifier	READWORD		3596012	0					
ANR	3596471	ArgumentList	shdr		3596012	1					
ANR	3596472	Argument	shdr		3596012	0					
ANR	3596473	Identifier	shdr		3596012	0					
ANR	3596474	Argument	j		3596012	1					
ANR	3596475	Identifier	j		3596012	0					
ANR	3596476	ExpressionStatement	"bin -> shdr [ i ] . sh_entsize = READWORD ( shdr , j )"	377:2:13363:13407	3596012	12	True				
ANR	3596477	AssignmentExpression	"bin -> shdr [ i ] . sh_entsize = READWORD ( shdr , j )"		3596012	0		=			
ANR	3596478	MemberAccess	bin -> shdr [ i ] . sh_entsize		3596012	0					
ANR	3596479	ArrayIndexing	bin -> shdr [ i ]		3596012	0					
ANR	3596480	PtrMemberAccess	bin -> shdr		3596012	0					
ANR	3596481	Identifier	bin		3596012	0					
ANR	3596482	Identifier	shdr		3596012	1					
ANR	3596483	Identifier	i		3596012	1					
ANR	3596484	Identifier	sh_entsize		3596012	1					
ANR	3596485	CallExpression	"READWORD ( shdr , j )"		3596012	1					
ANR	3596486	Callee	READWORD		3596012	0					
ANR	3596487	Identifier	READWORD		3596012	0					
ANR	3596488	ArgumentList	shdr		3596012	1					
ANR	3596489	Argument	shdr		3596012	0					
ANR	3596490	Identifier	shdr		3596012	0					
ANR	3596491	Argument	j		3596012	1					
ANR	3596492	Identifier	j		3596012	0					
ANR	3596493	Statement	sdb_set	381:1:13430:13436	3596012	29	True				
ANR	3596494	Statement	(	381:9:13438:13438	3596012	30	True				
ANR	3596495	Statement	bin	381:10:13439:13441	3596012	31	True				
ANR	3596496	Statement	->	381:13:13442:13443	3596012	32	True				
ANR	3596497	Statement	kv	381:15:13444:13445	3596012	33	True				
ANR	3596498	Statement	","	381:17:13446:13446	3596012	34	True				
ANR	3596499	Statement	"""elf_s_flags_64.cparse"""	381:19:13448:13470	3596012	35	True				
ANR	3596500	Statement	","	381:42:13471:13471	3596012	36	True				
ANR	3596501	Statement	"""enum elf_s_flags_64 {SF64_None=0,SF64_Exec=1,"""	381:44:13473:13519	3596012	37	True				
ANR	3596502	Statement	"""SF64_Alloc=2,SF64_Alloc_Exec=3,SF64_Write=4,SF64_Write_Exec=5,"""	382:3:13524:13587	3596012	38	True				
ANR	3596503	Statement	"""SF64_Write_Alloc=6,SF64_Write_Alloc_Exec=7};"""	383:3:13592:13637	3596012	39	True				
ANR	3596504	Statement	","	383:49:13638:13638	3596012	40	True				
ANR	3596505	Statement	0	383:51:13640:13640	3596012	41	True				
ANR	3596506	Statement	)	383:52:13641:13641	3596012	42	True				
ANR	3596507	ExpressionStatement		383:53:13642:13642	3596012	43	True				
ANR	3596508	Statement	sdb_set	384:1:13645:13651	3596012	44	True				
ANR	3596509	Statement	(	384:9:13653:13653	3596012	45	True				
ANR	3596510	Statement	bin	384:10:13654:13656	3596012	46	True				
ANR	3596511	Statement	->	384:13:13657:13658	3596012	47	True				
ANR	3596512	Statement	kv	384:15:13659:13660	3596012	48	True				
ANR	3596513	Statement	","	384:17:13661:13661	3596012	49	True				
ANR	3596514	Statement	"""elf_shdr.format"""	384:19:13663:13679	3596012	50	True				
ANR	3596515	Statement	","	384:36:13680:13680	3596012	51	True				
ANR	3596516	Statement	"""x[4]E[8]Eqqqxxqq name (elf_s_type)type"""	384:38:13682:13721	3596012	52	True				
ANR	3596517	Statement	""" (elf_s_flags_64)flags addr offset size link info addralign entsize"""	385:3:13726:13794	3596012	53	True				
ANR	3596518	Statement	","	385:72:13795:13795	3596012	54	True				
ANR	3596519	Statement	0	385:74:13797:13797	3596012	55	True				
ANR	3596520	Statement	)	385:75:13798:13798	3596012	56	True				
ANR	3596521	ExpressionStatement		385:76:13799:13799	3596012	57	True				
ANR	3596522	ReturnStatement	return true ;	393:1:14187:14198	3596012	58	True				
ANR	3596523	Identifier	true		3596012	0					
ANR	3596524	ReturnType	static int		3596012	1					
ANR	3596525	Identifier	init_shdr		3596012	2					
ANR	3596526	ParameterList	ELFOBJ * bin		3596012	3					
ANR	3596527	Parameter	ELFOBJ * bin	327:21:11661:11671	3596012	0	True				
ANR	3596528	ParameterType	ELFOBJ *		3596012	0					
ANR	3596529	Identifier	bin		3596012	1					
ANR	3596530	CFGEntryNode	ENTRY		3596012		True				
ANR	3596531	CFGExitNode	EXIT		3596012		True				
ANR	3596532	Symbol	bin -> ehdr . e_shnum		3596012						
ANR	3596533	Symbol	bin -> size		3596012						
ANR	3596534	Symbol	bin -> b		3596012						
ANR	3596535	Symbol	bin		3596012						
ANR	3596536	Symbol	* bin -> shdr		3596012						
ANR	3596537	Symbol	bin -> kv		3596012						
ANR	3596538	Symbol	* bin		3596012						
ANR	3596539	Symbol	len		3596012						
ANR	3596540	Symbol	bin -> shdr [ i ] . sh_flags		3596012						
ANR	3596541	Symbol	bin -> shdr [ i ] . sh_entsize		3596012						
ANR	3596542	Symbol	shdr		3596012						
ANR	3596543	Symbol	bin -> ehdr		3596012						
ANR	3596544	Symbol	R_NEWS0		3596012						
ANR	3596545	Symbol	* * bin		3596012						
ANR	3596546	Symbol	Elf_		3596012						
ANR	3596547	Symbol	UT32_MUL		3596012						
ANR	3596548	Symbol	READWORD		3596012						
ANR	3596549	Symbol	& shdr_size		3596012						
ANR	3596550	Symbol	Shdr		3596012						
ANR	3596551	Symbol	bin -> shdr [ i ] . sh_size		3596012						
ANR	3596552	Symbol	false		3596012						
ANR	3596553	Symbol	i		3596012						
ANR	3596554	Symbol	j		3596012						
ANR	3596555	Symbol	bin -> shdr [ i ] . sh_name		3596012						
ANR	3596556	Symbol	READ32		3596012						
ANR	3596557	Symbol	bin -> shdr		3596012						
ANR	3596558	Symbol	bin -> shdr [ i ] . sh_addr		3596012						
ANR	3596559	Symbol	bin -> shdr [ i ] . sh_info		3596012						
ANR	3596560	Symbol	bin -> shdr [ i ] . sh_offset		3596012						
ANR	3596561	Symbol	bin -> shdr [ i ] . sh_addralign		3596012						
ANR	3596562	Symbol	* i		3596012						
ANR	3596563	Symbol	r_buf_read_at		3596012						
ANR	3596564	Symbol	true		3596012						
ANR	3596565	Symbol	bin -> ehdr . e_shoff		3596012						
ANR	3596566	Symbol	bin -> shdr [ i ] . sh_type		3596012						
ANR	3596567	Symbol	shdr_size		3596012						
ANR	3596568	Symbol	bin -> shdr [ i ] . sh_link		3596012						
ANR	3596569	Function	init_strtab	403:0:14550:16014							
ANR	3596570	FunctionDef	init_strtab (ELFOBJ * bin)		3596569	0					
ANR	3596571	CompoundStatement		403:36:14586:16014	3596569	0					
ANR	3596572	ExpressionStatement	"r_return_val_if_fail ( ! bin -> strtab , false )"	404:1:14589:14631	3596569	0	True				
ANR	3596573	CallExpression	"r_return_val_if_fail ( ! bin -> strtab , false )"		3596569	0					
ANR	3596574	Callee	r_return_val_if_fail		3596569	0					
ANR	3596575	Identifier	r_return_val_if_fail		3596569	0					
ANR	3596576	ArgumentList	! bin -> strtab		3596569	1					
ANR	3596577	Argument	! bin -> strtab		3596569	0					
ANR	3596578	UnaryOperationExpression	! bin -> strtab		3596569	0					
ANR	3596579	UnaryOperator	!		3596569	0					
ANR	3596580	PtrMemberAccess	bin -> strtab		3596569	1					
ANR	3596581	Identifier	bin		3596569	0					
ANR	3596582	Identifier	strtab		3596569	1					
ANR	3596583	Argument	false		3596569	1					
ANR	3596584	Identifier	false		3596569	0					
ANR	3596585	IfStatement	if ( ! bin -> shdr )		3596569	1					
ANR	3596586	Condition	! bin -> shdr	406:5:14639:14648	3596569	0	True				
ANR	3596587	UnaryOperationExpression	! bin -> shdr		3596569	0					
ANR	3596588	UnaryOperator	!		3596569	0					
ANR	3596589	PtrMemberAccess	bin -> shdr		3596569	1					
ANR	3596590	Identifier	bin		3596569	0					
ANR	3596591	Identifier	shdr		3596569	1					
ANR	3596592	CompoundStatement		4:17:64:64	3596569	1					
ANR	3596593	ReturnStatement	return false ;	407:2:14655:14667	3596569	0	True				
ANR	3596594	Identifier	false		3596569	0					
ANR	3596595	Statement	Elf_	410:1:14674:14677	3596569	2	True				
ANR	3596596	ExpressionStatement	( Half ) shstrndx = bin -> ehdr . e_shstrndx	410:5:14678:14716	3596569	3	True				
ANR	3596597	AssignmentExpression	( Half ) shstrndx = bin -> ehdr . e_shstrndx		3596569	0		=			
ANR	3596598	CastExpression	( Half ) shstrndx		3596569	0					
ANR	3596599	CastTarget	Half		3596569	0					
ANR	3596600	Identifier	shstrndx		3596569	1					
ANR	3596601	MemberAccess	bin -> ehdr . e_shstrndx		3596569	1					
ANR	3596602	PtrMemberAccess	bin -> ehdr		3596569	0					
ANR	3596603	Identifier	bin		3596569	0					
ANR	3596604	Identifier	ehdr		3596569	1					
ANR	3596605	Identifier	e_shstrndx		3596569	1					
ANR	3596606	IfStatement	"if ( shstrndx != SHN_UNDEF && ! is_shidx_valid ( bin , shstrndx ) )"		3596569	4					
ANR	3596607	Condition	"shstrndx != SHN_UNDEF && ! is_shidx_valid ( bin , shstrndx )"	411:5:14723:14778	3596569	0	True				
ANR	3596608	AndExpression	"shstrndx != SHN_UNDEF && ! is_shidx_valid ( bin , shstrndx )"		3596569	0		&&			
ANR	3596609	EqualityExpression	shstrndx != SHN_UNDEF		3596569	0		!=			
ANR	3596610	Identifier	shstrndx		3596569	0					
ANR	3596611	Identifier	SHN_UNDEF		3596569	1					
ANR	3596612	UnaryOperationExpression	"! is_shidx_valid ( bin , shstrndx )"		3596569	1					
ANR	3596613	UnaryOperator	!		3596569	0					
ANR	3596614	CallExpression	"is_shidx_valid ( bin , shstrndx )"		3596569	1					
ANR	3596615	Callee	is_shidx_valid		3596569	0					
ANR	3596616	Identifier	is_shidx_valid		3596569	0					
ANR	3596617	ArgumentList	bin		3596569	1					
ANR	3596618	Argument	bin		3596569	0					
ANR	3596619	Identifier	bin		3596569	0					
ANR	3596620	Argument	shstrndx		3596569	1					
ANR	3596621	Identifier	shstrndx		3596569	0					
ANR	3596622	CompoundStatement		9:63:194:194	3596569	1					
ANR	3596623	ReturnStatement	return false ;	412:2:14785:14797	3596569	0	True				
ANR	3596624	Identifier	false		3596569	0					
ANR	3596625	IfStatement	if ( bin -> shdr [ shstrndx ] . sh_size > UT32_MAX )		3596569	5					
ANR	3596626	Condition	bin -> shdr [ shstrndx ] . sh_size > UT32_MAX	416:5:14900:14937	3596569	0	True				
ANR	3596627	RelationalExpression	bin -> shdr [ shstrndx ] . sh_size > UT32_MAX		3596569	0		>			
ANR	3596628	MemberAccess	bin -> shdr [ shstrndx ] . sh_size		3596569	0					
ANR	3596629	ArrayIndexing	bin -> shdr [ shstrndx ]		3596569	0					
ANR	3596630	PtrMemberAccess	bin -> shdr		3596569	0					
ANR	3596631	Identifier	bin		3596569	0					
ANR	3596632	Identifier	shdr		3596569	1					
ANR	3596633	Identifier	shstrndx		3596569	1					
ANR	3596634	Identifier	sh_size		3596569	1					
ANR	3596635	Identifier	UT32_MAX		3596569	1					
ANR	3596636	CompoundStatement		14:45:353:353	3596569	1					
ANR	3596637	ReturnStatement	return false ;	417:2:14944:14956	3596569	0	True				
ANR	3596638	Identifier	false		3596569	0					
ANR	3596639	IfStatement	if ( ! bin -> shdr [ shstrndx ] . sh_size )		3596569	6					
ANR	3596640	Condition	! bin -> shdr [ shstrndx ] . sh_size	419:5:14966:14993	3596569	0	True				
ANR	3596641	UnaryOperationExpression	! bin -> shdr [ shstrndx ] . sh_size		3596569	0					
ANR	3596642	UnaryOperator	!		3596569	0					
ANR	3596643	MemberAccess	bin -> shdr [ shstrndx ] . sh_size		3596569	1					
ANR	3596644	ArrayIndexing	bin -> shdr [ shstrndx ]		3596569	0					
ANR	3596645	PtrMemberAccess	bin -> shdr		3596569	0					
ANR	3596646	Identifier	bin		3596569	0					
ANR	3596647	Identifier	shdr		3596569	1					
ANR	3596648	Identifier	shstrndx		3596569	1					
ANR	3596649	Identifier	sh_size		3596569	1					
ANR	3596650	CompoundStatement		17:35:409:409	3596569	1					
ANR	3596651	ReturnStatement	return false ;	420:2:15000:15012	3596569	0	True				
ANR	3596652	Identifier	false		3596569	0					
ANR	3596653	ExpressionStatement	bin -> shstrtab_section = bin -> strtab_section = & bin -> shdr [ shstrndx ]	422:1:15018:15084	3596569	7	True				
ANR	3596654	AssignmentExpression	bin -> shstrtab_section = bin -> strtab_section = & bin -> shdr [ shstrndx ]		3596569	0		=			
ANR	3596655	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596656	Identifier	bin		3596569	0					
ANR	3596657	Identifier	shstrtab_section		3596569	1					
ANR	3596658	AssignmentExpression	bin -> strtab_section = & bin -> shdr [ shstrndx ]		3596569	1		=			
ANR	3596659	PtrMemberAccess	bin -> strtab_section		3596569	0					
ANR	3596660	Identifier	bin		3596569	0					
ANR	3596661	Identifier	strtab_section		3596569	1					
ANR	3596662	UnaryOperationExpression	& bin -> shdr [ shstrndx ]		3596569	1					
ANR	3596663	UnaryOperator	&		3596569	0					
ANR	3596664	ArrayIndexing	bin -> shdr [ shstrndx ]		3596569	1					
ANR	3596665	PtrMemberAccess	bin -> shdr		3596569	0					
ANR	3596666	Identifier	bin		3596569	0					
ANR	3596667	Identifier	shdr		3596569	1					
ANR	3596668	Identifier	shstrndx		3596569	1					
ANR	3596669	ExpressionStatement	bin -> shstrtab_size = bin -> shstrtab_section -> sh_size	423:1:15087:15138	3596569	8	True				
ANR	3596670	AssignmentExpression	bin -> shstrtab_size = bin -> shstrtab_section -> sh_size		3596569	0		=			
ANR	3596671	PtrMemberAccess	bin -> shstrtab_size		3596569	0					
ANR	3596672	Identifier	bin		3596569	0					
ANR	3596673	Identifier	shstrtab_size		3596569	1					
ANR	3596674	PtrMemberAccess	bin -> shstrtab_section -> sh_size		3596569	1					
ANR	3596675	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596676	Identifier	bin		3596569	0					
ANR	3596677	Identifier	shstrtab_section		3596569	1					
ANR	3596678	Identifier	sh_size		3596569	1					
ANR	3596679	IfStatement	if ( bin -> shstrtab_size > bin -> size )		3596569	9					
ANR	3596680	Condition	bin -> shstrtab_size > bin -> size	424:5:15145:15174	3596569	0	True				
ANR	3596681	RelationalExpression	bin -> shstrtab_size > bin -> size		3596569	0		>			
ANR	3596682	PtrMemberAccess	bin -> shstrtab_size		3596569	0					
ANR	3596683	Identifier	bin		3596569	0					
ANR	3596684	Identifier	shstrtab_size		3596569	1					
ANR	3596685	PtrMemberAccess	bin -> size		3596569	1					
ANR	3596686	Identifier	bin		3596569	0					
ANR	3596687	Identifier	size		3596569	1					
ANR	3596688	CompoundStatement		22:37:590:590	3596569	1					
ANR	3596689	ReturnStatement	return false ;	425:2:15181:15193	3596569	0	True				
ANR	3596690	Identifier	false		3596569	0					
ANR	3596691	IfStatement	if ( bin -> shstrtab_section -> sh_offset > bin -> size )		3596569	10					
ANR	3596692	Condition	bin -> shstrtab_section -> sh_offset > bin -> size	427:5:15203:15246	3596569	0	True				
ANR	3596693	RelationalExpression	bin -> shstrtab_section -> sh_offset > bin -> size		3596569	0		>			
ANR	3596694	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		3596569	0					
ANR	3596695	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596696	Identifier	bin		3596569	0					
ANR	3596697	Identifier	shstrtab_section		3596569	1					
ANR	3596698	Identifier	sh_offset		3596569	1					
ANR	3596699	PtrMemberAccess	bin -> size		3596569	1					
ANR	3596700	Identifier	bin		3596569	0					
ANR	3596701	Identifier	size		3596569	1					
ANR	3596702	CompoundStatement		25:51:662:662	3596569	1					
ANR	3596703	ReturnStatement	return false ;	428:2:15253:15265	3596569	0	True				
ANR	3596704	Identifier	false		3596569	0					
ANR	3596705	IfStatement	if ( bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size > bin -> size )		3596569	11					
ANR	3596706	Condition	bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size > bin -> size	430:5:15275:15351	3596569	0	True				
ANR	3596707	RelationalExpression	bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size > bin -> size		3596569	0		>			
ANR	3596708	AdditiveExpression	bin -> shstrtab_section -> sh_offset + bin -> shstrtab_section -> sh_size		3596569	0		+			
ANR	3596709	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		3596569	0					
ANR	3596710	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596711	Identifier	bin		3596569	0					
ANR	3596712	Identifier	shstrtab_section		3596569	1					
ANR	3596713	Identifier	sh_offset		3596569	1					
ANR	3596714	PtrMemberAccess	bin -> shstrtab_section -> sh_size		3596569	1					
ANR	3596715	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596716	Identifier	bin		3596569	0					
ANR	3596717	Identifier	shstrtab_section		3596569	1					
ANR	3596718	Identifier	sh_size		3596569	1					
ANR	3596719	PtrMemberAccess	bin -> size		3596569	1					
ANR	3596720	Identifier	bin		3596569	0					
ANR	3596721	Identifier	size		3596569	1					
ANR	3596722	CompoundStatement		28:84:767:767	3596569	1					
ANR	3596723	ReturnStatement	return false ;	431:2:15358:15370	3596569	0	True				
ANR	3596724	Identifier	false		3596569	0					
ANR	3596725	IfStatement	"if ( ! ( bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 ) ) )"		3596569	12					
ANR	3596726	Condition	"! ( bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 ) )"	434:5:15381:15433	3596569	0	True				
ANR	3596727	UnaryOperationExpression	"! ( bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 ) )"		3596569	0					
ANR	3596728	UnaryOperator	!		3596569	0					
ANR	3596729	AssignmentExpression	"bin -> shstrtab = calloc ( 1 , bin -> shstrtab_size + 1 )"		3596569	1		=			
ANR	3596730	PtrMemberAccess	bin -> shstrtab		3596569	0					
ANR	3596731	Identifier	bin		3596569	0					
ANR	3596732	Identifier	shstrtab		3596569	1					
ANR	3596733	CallExpression	"calloc ( 1 , bin -> shstrtab_size + 1 )"		3596569	1					
ANR	3596734	Callee	calloc		3596569	0					
ANR	3596735	Identifier	calloc		3596569	0					
ANR	3596736	ArgumentList	1		3596569	1					
ANR	3596737	Argument	1		3596569	0					
ANR	3596738	PrimaryExpression	1		3596569	0					
ANR	3596739	Argument	bin -> shstrtab_size + 1		3596569	1					
ANR	3596740	AdditiveExpression	bin -> shstrtab_size + 1		3596569	0		+			
ANR	3596741	PtrMemberAccess	bin -> shstrtab_size		3596569	0					
ANR	3596742	Identifier	bin		3596569	0					
ANR	3596743	Identifier	shstrtab_size		3596569	1					
ANR	3596744	PrimaryExpression	1		3596569	1					
ANR	3596745	CompoundStatement		32:60:849:849	3596569	1					
ANR	3596746	ExpressionStatement	"perror ( ""malloc"" )"	435:2:15440:15457	3596569	0	True				
ANR	3596747	CallExpression	"perror ( ""malloc"" )"		3596569	0					
ANR	3596748	Callee	perror		3596569	0					
ANR	3596749	Identifier	perror		3596569	0					
ANR	3596750	ArgumentList	"""malloc"""		3596569	1					
ANR	3596751	Argument	"""malloc"""		3596569	0					
ANR	3596752	PrimaryExpression	"""malloc"""		3596569	0					
ANR	3596753	ExpressionStatement	bin -> shstrtab = NULL	436:2:15461:15481	3596569	1	True				
ANR	3596754	AssignmentExpression	bin -> shstrtab = NULL		3596569	0		=			
ANR	3596755	PtrMemberAccess	bin -> shstrtab		3596569	0					
ANR	3596756	Identifier	bin		3596569	0					
ANR	3596757	Identifier	shstrtab		3596569	1					
ANR	3596758	Identifier	NULL		3596569	1					
ANR	3596759	ReturnStatement	return false ;	437:2:15485:15497	3596569	2	True				
ANR	3596760	Identifier	false		3596569	0					
ANR	3596761	IdentifierDeclStatement	"int res = r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size ) ;"	439:1:15503:15624	3596569	13	True				
ANR	3596762	IdentifierDecl	"res = r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size )"		3596569	0					
ANR	3596763	IdentifierDeclType	int		3596569	0					
ANR	3596764	Identifier	res		3596569	1					
ANR	3596765	AssignmentExpression	"res = r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size )"		3596569	2		=			
ANR	3596766	Identifier	res		3596569	0					
ANR	3596767	CallExpression	"r_buf_read_at ( bin -> b , bin -> shstrtab_section -> sh_offset , ( ut8 * ) bin -> shstrtab , bin -> shstrtab_section -> sh_size )"		3596569	1					
ANR	3596768	Callee	r_buf_read_at		3596569	0					
ANR	3596769	Identifier	r_buf_read_at		3596569	0					
ANR	3596770	ArgumentList	bin -> b		3596569	1					
ANR	3596771	Argument	bin -> b		3596569	0					
ANR	3596772	PtrMemberAccess	bin -> b		3596569	0					
ANR	3596773	Identifier	bin		3596569	0					
ANR	3596774	Identifier	b		3596569	1					
ANR	3596775	Argument	bin -> shstrtab_section -> sh_offset		3596569	1					
ANR	3596776	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		3596569	0					
ANR	3596777	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596778	Identifier	bin		3596569	0					
ANR	3596779	Identifier	shstrtab_section		3596569	1					
ANR	3596780	Identifier	sh_offset		3596569	1					
ANR	3596781	Argument	( ut8 * ) bin -> shstrtab		3596569	2					
ANR	3596782	CastExpression	( ut8 * ) bin -> shstrtab		3596569	0					
ANR	3596783	CastTarget	ut8 *		3596569	0					
ANR	3596784	PtrMemberAccess	bin -> shstrtab		3596569	1					
ANR	3596785	Identifier	bin		3596569	0					
ANR	3596786	Identifier	shstrtab		3596569	1					
ANR	3596787	Argument	bin -> shstrtab_section -> sh_size		3596569	3					
ANR	3596788	PtrMemberAccess	bin -> shstrtab_section -> sh_size		3596569	0					
ANR	3596789	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596790	Identifier	bin		3596569	0					
ANR	3596791	Identifier	shstrtab_section		3596569	1					
ANR	3596792	Identifier	sh_size		3596569	1					
ANR	3596793	IfStatement	if ( res < 1 )		3596569	14					
ANR	3596794	Condition	res < 1	441:5:15631:15637	3596569	0	True				
ANR	3596795	RelationalExpression	res < 1		3596569	0		<			
ANR	3596796	Identifier	res		3596569	0					
ANR	3596797	PrimaryExpression	1		3596569	1					
ANR	3596798	CompoundStatement		39:14:1053:1053	3596569	1					
ANR	3596799	Statement	bprintf	442:2:15644:15650	3596569	0	True				
ANR	3596800	Statement	(	442:10:15652:15652	3596569	1	True				
ANR	3596801	Statement	"""read (shstrtab) at 0x%"""	442:11:15653:15676	3596569	2	True				
ANR	3596802	Statement	PFMT64x	442:36:15678:15684	3596569	3	True				
ANR	3596803	Statement	"""\\n"""	442:44:15686:15689	3596569	4	True				
ANR	3596804	Statement	","	442:48:15690:15690	3596569	5	True				
ANR	3596805	Statement	(	442:50:15692:15692	3596569	6	True				
ANR	3596806	Statement	ut64	442:51:15693:15696	3596569	7	True				
ANR	3596807	Statement	)	442:55:15697:15697	3596569	8	True				
ANR	3596808	Statement	bin	442:57:15699:15701	3596569	9	True				
ANR	3596809	Statement	->	442:60:15702:15703	3596569	10	True				
ANR	3596810	Statement	shstrtab_section	442:62:15704:15719	3596569	11	True				
ANR	3596811	Statement	->	442:78:15720:15721	3596569	12	True				
ANR	3596812	Statement	sh_offset	442:80:15722:15730	3596569	13	True				
ANR	3596813	Statement	)	442:89:15731:15731	3596569	14	True				
ANR	3596814	ExpressionStatement		442:90:15732:15732	3596569	15	True				
ANR	3596815	ExpressionStatement	R_FREE ( bin -> shstrtab )	443:2:15736:15758	3596569	16	True				
ANR	3596816	CallExpression	R_FREE ( bin -> shstrtab )		3596569	0					
ANR	3596817	Callee	R_FREE		3596569	0					
ANR	3596818	Identifier	R_FREE		3596569	0					
ANR	3596819	ArgumentList	bin -> shstrtab		3596569	1					
ANR	3596820	Argument	bin -> shstrtab		3596569	0					
ANR	3596821	PtrMemberAccess	bin -> shstrtab		3596569	0					
ANR	3596822	Identifier	bin		3596569	0					
ANR	3596823	Identifier	shstrtab		3596569	1					
ANR	3596824	ReturnStatement	return false ;	444:2:15762:15774	3596569	17	True				
ANR	3596825	Identifier	false		3596569	0					
ANR	3596826	ExpressionStatement	bin -> shstrtab [ bin -> shstrtab_section -> sh_size ] = '\\0'	446:1:15780:15832	3596569	15	True				
ANR	3596827	AssignmentExpression	bin -> shstrtab [ bin -> shstrtab_section -> sh_size ] = '\\0'		3596569	0		=			
ANR	3596828	ArrayIndexing	bin -> shstrtab [ bin -> shstrtab_section -> sh_size ]		3596569	0					
ANR	3596829	PtrMemberAccess	bin -> shstrtab		3596569	0					
ANR	3596830	Identifier	bin		3596569	0					
ANR	3596831	Identifier	shstrtab		3596569	1					
ANR	3596832	PtrMemberAccess	bin -> shstrtab_section -> sh_size		3596569	1					
ANR	3596833	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596834	Identifier	bin		3596569	0					
ANR	3596835	Identifier	shstrtab_section		3596569	1					
ANR	3596836	Identifier	sh_size		3596569	1					
ANR	3596837	PrimaryExpression	'\\0'		3596569	1					
ANR	3596838	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shstrtab.offset"" , bin -> shstrtab_section -> sh_offset , 0 )"	448:1:15836:15917	3596569	16	True				
ANR	3596839	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shstrtab.offset"" , bin -> shstrtab_section -> sh_offset , 0 )"		3596569	0					
ANR	3596840	Callee	sdb_num_set		3596569	0					
ANR	3596841	Identifier	sdb_num_set		3596569	0					
ANR	3596842	ArgumentList	bin -> kv		3596569	1					
ANR	3596843	Argument	bin -> kv		3596569	0					
ANR	3596844	PtrMemberAccess	bin -> kv		3596569	0					
ANR	3596845	Identifier	bin		3596569	0					
ANR	3596846	Identifier	kv		3596569	1					
ANR	3596847	Argument	"""elf_shstrtab.offset"""		3596569	1					
ANR	3596848	PrimaryExpression	"""elf_shstrtab.offset"""		3596569	0					
ANR	3596849	Argument	bin -> shstrtab_section -> sh_offset		3596569	2					
ANR	3596850	PtrMemberAccess	bin -> shstrtab_section -> sh_offset		3596569	0					
ANR	3596851	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596852	Identifier	bin		3596569	0					
ANR	3596853	Identifier	shstrtab_section		3596569	1					
ANR	3596854	Identifier	sh_offset		3596569	1					
ANR	3596855	Argument	0		3596569	3					
ANR	3596856	PrimaryExpression	0		3596569	0					
ANR	3596857	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_shstrtab.size"" , bin -> shstrtab_section -> sh_size , 0 )"	449:1:15920:15997	3596569	17	True				
ANR	3596858	CallExpression	"sdb_num_set ( bin -> kv , ""elf_shstrtab.size"" , bin -> shstrtab_section -> sh_size , 0 )"		3596569	0					
ANR	3596859	Callee	sdb_num_set		3596569	0					
ANR	3596860	Identifier	sdb_num_set		3596569	0					
ANR	3596861	ArgumentList	bin -> kv		3596569	1					
ANR	3596862	Argument	bin -> kv		3596569	0					
ANR	3596863	PtrMemberAccess	bin -> kv		3596569	0					
ANR	3596864	Identifier	bin		3596569	0					
ANR	3596865	Identifier	kv		3596569	1					
ANR	3596866	Argument	"""elf_shstrtab.size"""		3596569	1					
ANR	3596867	PrimaryExpression	"""elf_shstrtab.size"""		3596569	0					
ANR	3596868	Argument	bin -> shstrtab_section -> sh_size		3596569	2					
ANR	3596869	PtrMemberAccess	bin -> shstrtab_section -> sh_size		3596569	0					
ANR	3596870	PtrMemberAccess	bin -> shstrtab_section		3596569	0					
ANR	3596871	Identifier	bin		3596569	0					
ANR	3596872	Identifier	shstrtab_section		3596569	1					
ANR	3596873	Identifier	sh_size		3596569	1					
ANR	3596874	Argument	0		3596569	3					
ANR	3596875	PrimaryExpression	0		3596569	0					
ANR	3596876	ReturnStatement	return true ;	451:1:16001:16012	3596569	18	True				
ANR	3596877	Identifier	true		3596569	0					
ANR	3596878	ReturnType	static int		3596569	1					
ANR	3596879	Identifier	init_strtab		3596569	2					
ANR	3596880	ParameterList	ELFOBJ * bin		3596569	3					
ANR	3596881	Parameter	ELFOBJ * bin	403:23:14573:14583	3596569	0	True				
ANR	3596882	ParameterType	ELFOBJ *		3596569	0					
ANR	3596883	Identifier	bin		3596569	1					
ANR	3596884	CFGEntryNode	ENTRY		3596569		True				
ANR	3596885	CFGExitNode	EXIT		3596569		True				
ANR	3596886	Symbol	UT32_MAX		3596569						
ANR	3596887	Symbol	bin -> shstrtab_section -> sh_size		3596569						
ANR	3596888	Symbol	bin -> size		3596569						
ANR	3596889	Symbol	shstrndx		3596569						
ANR	3596890	Symbol	bin -> b		3596569						
ANR	3596891	Symbol	* bin -> shstrtab_section -> sh_size		3596569						
ANR	3596892	Symbol	* * * bin		3596569						
ANR	3596893	Symbol	bin		3596569						
ANR	3596894	Symbol	bin -> shstrtab_size		3596569						
ANR	3596895	Symbol	bin -> shstrtab		3596569						
ANR	3596896	Symbol	* bin -> shdr		3596569						
ANR	3596897	Symbol	bin -> shdr [ shstrndx ] . sh_size		3596569						
ANR	3596898	Symbol	calloc		3596569						
ANR	3596899	Symbol	bin -> kv		3596569						
ANR	3596900	Symbol	* bin		3596569						
ANR	3596901	Symbol	bin -> shstrtab_section		3596569						
ANR	3596902	Symbol	bin -> ehdr . e_shstrndx		3596569						
ANR	3596903	Symbol	bin -> ehdr		3596569						
ANR	3596904	Symbol	* * bin -> shstrtab_section		3596569						
ANR	3596905	Symbol	* * bin		3596569						
ANR	3596906	Symbol	bin -> strtab		3596569						
ANR	3596907	Symbol	SHN_UNDEF		3596569						
ANR	3596908	Symbol	bin -> strtab_section		3596569						
ANR	3596909	Symbol	res		3596569						
ANR	3596910	Symbol	* shstrndx		3596569						
ANR	3596911	Symbol	NULL		3596569						
ANR	3596912	Symbol	* bin -> shstrtab_section		3596569						
ANR	3596913	Symbol	false		3596569						
ANR	3596914	Symbol	bin -> shstrtab_section -> sh_offset		3596569						
ANR	3596915	Symbol	bin -> shdr		3596569						
ANR	3596916	Symbol	r_buf_read_at		3596569						
ANR	3596917	Symbol	* bin -> shstrtab		3596569						
ANR	3596918	Symbol	true		3596569						
ANR	3596919	Symbol	is_shidx_valid		3596569						
ANR	3596920	Function	get_dynamic_segment	454:19:16036:16430							
ANR	3596921	FunctionDef	get_dynamic_segment (ELFOBJ * bin)		3596920	0					
ANR	3596922	CompoundStatement		454:52:16069:16430	3596920	0					
ANR	3596923	IdentifierDeclStatement	int i ;	455:1:16072:16077	3596920	0	True				
ANR	3596924	IdentifierDecl	i		3596920	0					
ANR	3596925	IdentifierDeclType	int		3596920	0					
ANR	3596926	Identifier	i		3596920	1					
ANR	3596927	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3596920	1					
ANR	3596928	ForInit	i = 0 ;	456:6:16085:16090	3596920	0	True				
ANR	3596929	AssignmentExpression	i = 0		3596920	0		=			
ANR	3596930	Identifier	i		3596920	0					
ANR	3596931	PrimaryExpression	0		3596920	1					
ANR	3596932	Condition	i < bin -> ehdr . e_phnum	456:13:16092:16112	3596920	1	True				
ANR	3596933	RelationalExpression	i < bin -> ehdr . e_phnum		3596920	0		<			
ANR	3596934	Identifier	i		3596920	0					
ANR	3596935	MemberAccess	bin -> ehdr . e_phnum		3596920	1					
ANR	3596936	PtrMemberAccess	bin -> ehdr		3596920	0					
ANR	3596937	Identifier	bin		3596920	0					
ANR	3596938	Identifier	ehdr		3596920	1					
ANR	3596939	Identifier	e_phnum		3596920	1					
ANR	3596940	PostIncDecOperationExpression	i ++	456:36:16115:16117	3596920	2	True				
ANR	3596941	Identifier	i		3596920	0					
ANR	3596942	IncDec	++		3596920	1					
ANR	3596943	CompoundStatement		3:41:50:50	3596920	3					
ANR	3596944	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_DYNAMIC )		3596920	0					
ANR	3596945	Condition	bin -> phdr [ i ] . p_type == PT_DYNAMIC	457:6:16128:16160	3596920	0	True				
ANR	3596946	EqualityExpression	bin -> phdr [ i ] . p_type == PT_DYNAMIC		3596920	0		==			
ANR	3596947	MemberAccess	bin -> phdr [ i ] . p_type		3596920	0					
ANR	3596948	ArrayIndexing	bin -> phdr [ i ]		3596920	0					
ANR	3596949	PtrMemberAccess	bin -> phdr		3596920	0					
ANR	3596950	Identifier	bin		3596920	0					
ANR	3596951	Identifier	phdr		3596920	1					
ANR	3596952	Identifier	i		3596920	1					
ANR	3596953	Identifier	p_type		3596920	1					
ANR	3596954	Identifier	PT_DYNAMIC		3596920	1					
ANR	3596955	CompoundStatement		4:41:93:93	3596920	1					
ANR	3596956	IfStatement	if ( bin -> phdr [ i ] . p_filesz > bin -> size )		3596920	0					
ANR	3596957	Condition	bin -> phdr [ i ] . p_filesz > bin -> size	458:7:16172:16204	3596920	0	True				
ANR	3596958	RelationalExpression	bin -> phdr [ i ] . p_filesz > bin -> size		3596920	0		>			
ANR	3596959	MemberAccess	bin -> phdr [ i ] . p_filesz		3596920	0					
ANR	3596960	ArrayIndexing	bin -> phdr [ i ]		3596920	0					
ANR	3596961	PtrMemberAccess	bin -> phdr		3596920	0					
ANR	3596962	Identifier	bin		3596920	0					
ANR	3596963	Identifier	phdr		3596920	1					
ANR	3596964	Identifier	i		3596920	1					
ANR	3596965	Identifier	p_filesz		3596920	1					
ANR	3596966	PtrMemberAccess	bin -> size		3596920	1					
ANR	3596967	Identifier	bin		3596920	0					
ANR	3596968	Identifier	size		3596920	1					
ANR	3596969	CompoundStatement		5:42:137:137	3596920	1					
ANR	3596970	ReturnStatement	return NULL ;	459:4:16213:16224	3596920	0	True				
ANR	3596971	Identifier	NULL		3596920	0					
ANR	3596972	IfStatement	if ( bin -> phdr [ i ] . p_offset > bin -> size )		3596920	1					
ANR	3596973	Condition	bin -> phdr [ i ] . p_offset > bin -> size	461:7:16238:16270	3596920	0	True				
ANR	3596974	RelationalExpression	bin -> phdr [ i ] . p_offset > bin -> size		3596920	0		>			
ANR	3596975	MemberAccess	bin -> phdr [ i ] . p_offset		3596920	0					
ANR	3596976	ArrayIndexing	bin -> phdr [ i ]		3596920	0					
ANR	3596977	PtrMemberAccess	bin -> phdr		3596920	0					
ANR	3596978	Identifier	bin		3596920	0					
ANR	3596979	Identifier	phdr		3596920	1					
ANR	3596980	Identifier	i		3596920	1					
ANR	3596981	Identifier	p_offset		3596920	1					
ANR	3596982	PtrMemberAccess	bin -> size		3596920	1					
ANR	3596983	Identifier	bin		3596920	0					
ANR	3596984	Identifier	size		3596920	1					
ANR	3596985	CompoundStatement		8:42:203:203	3596920	1					
ANR	3596986	ReturnStatement	return NULL ;	462:4:16279:16290	3596920	0	True				
ANR	3596987	Identifier	NULL		3596920	0					
ANR	3596988	IfStatement	if ( bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) ) > bin -> size )		3596920	2					
ANR	3596989	Condition	bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) ) > bin -> size	464:7:16304:16357	3596920	0	True				
ANR	3596990	RelationalExpression	bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) ) > bin -> size		3596920	0		>			
ANR	3596991	AdditiveExpression	bin -> phdr [ i ] . p_offset + sizeof ( Elf_ ( Dyn ) )		3596920	0		+			
ANR	3596992	MemberAccess	bin -> phdr [ i ] . p_offset		3596920	0					
ANR	3596993	ArrayIndexing	bin -> phdr [ i ]		3596920	0					
ANR	3596994	PtrMemberAccess	bin -> phdr		3596920	0					
ANR	3596995	Identifier	bin		3596920	0					
ANR	3596996	Identifier	phdr		3596920	1					
ANR	3596997	Identifier	i		3596920	1					
ANR	3596998	Identifier	p_offset		3596920	1					
ANR	3596999	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		3596920	1					
ANR	3597000	Sizeof	sizeof		3596920	0					
ANR	3597001	CallExpression	Elf_ ( Dyn )		3596920	1					
ANR	3597002	Callee	Elf_		3596920	0					
ANR	3597003	Identifier	Elf_		3596920	0					
ANR	3597004	ArgumentList	Dyn		3596920	1					
ANR	3597005	Argument	Dyn		3596920	0					
ANR	3597006	Identifier	Dyn		3596920	0					
ANR	3597007	PtrMemberAccess	bin -> size		3596920	1					
ANR	3597008	Identifier	bin		3596920	0					
ANR	3597009	Identifier	size		3596920	1					
ANR	3597010	CompoundStatement		11:63:290:290	3596920	1					
ANR	3597011	ReturnStatement	return NULL ;	465:4:16366:16377	3596920	0	True				
ANR	3597012	Identifier	NULL		3596920	0					
ANR	3597013	ReturnStatement	return & bin -> phdr [ i ] ;	467:3:16387:16407	3596920	3	True				
ANR	3597014	UnaryOperationExpression	& bin -> phdr [ i ]		3596920	0					
ANR	3597015	UnaryOperator	&		3596920	0					
ANR	3597016	ArrayIndexing	bin -> phdr [ i ]		3596920	1					
ANR	3597017	PtrMemberAccess	bin -> phdr		3596920	0					
ANR	3597018	Identifier	bin		3596920	0					
ANR	3597019	Identifier	phdr		3596920	1					
ANR	3597020	Identifier	i		3596920	1					
ANR	3597021	ReturnStatement	return NULL ;	470:1:16417:16428	3596920	2	True				
ANR	3597022	Identifier	NULL		3596920	0					
ANR	3597023	Identifier	get_dynamic_segment		3596920	1					
ANR	3597024	ParameterList	ELFOBJ * bin		3596920	2					
ANR	3597025	Parameter	ELFOBJ * bin	454:39:16056:16066	3596920	0	True				
ANR	3597026	ParameterType	ELFOBJ *		3596920	0					
ANR	3597027	Identifier	bin		3596920	1					
ANR	3597028	CFGEntryNode	ENTRY		3596920		True				
ANR	3597029	CFGExitNode	EXIT		3596920		True				
ANR	3597030	Symbol	Elf_		3596920						
ANR	3597031	Symbol	bin -> size		3596920						
ANR	3597032	Symbol	NULL		3596920						
ANR	3597033	Symbol	bin		3596920						
ANR	3597034	Symbol	i		3596920						
ANR	3597035	Symbol	bin -> phdr		3596920						
ANR	3597036	Symbol	bin -> ehdr . e_phnum		3596920						
ANR	3597037	Symbol	PT_DYNAMIC		3596920						
ANR	3597038	Symbol	* bin		3596920						
ANR	3597039	Symbol	* bin -> phdr		3596920						
ANR	3597040	Symbol	bin -> phdr [ i ] . p_filesz		3596920						
ANR	3597041	Symbol	bin -> phdr [ i ] . p_offset		3596920						
ANR	3597042	Symbol	* i		3596920						
ANR	3597043	Symbol	bin -> ehdr		3596920						
ANR	3597044	Symbol	Dyn		3596920						
ANR	3597045	Symbol	bin -> phdr [ i ] . p_type		3596920						
ANR	3597046	Symbol	* * bin		3596920						
ANR	3597047	DeclStmt									
ANR	3597048	Decl							int	int	r
ANR	3597049	DeclStmt									
ANR	3597050	Decl							int	int	res
ANR	3597051	DeclStmt									
ANR	3597052	Decl							ut8	ut8 [ sizeof ( Elf_ ( Dyn ) ) ]	sdyn
ANR	3597053	DeclStmt									
ANR	3597054	Decl							int	int	j
ANR	3597055	DeclStmt									
ANR	3597056	Decl							int	int	len
ANR	3597057	Function	init_dynamic_section	509:0:17391:19794							
ANR	3597058	FunctionDef	init_dynamic_section (ELFOBJ * bin)		3597057	0					
ANR	3597059	CompoundStatement		509:45:17436:19794	3597057	0					
ANR	3597060	ExpressionStatement	Elf_ ( Dyn ) * dyn = NULL	510:1:17439:17460	3597057	0	True				
ANR	3597061	AssignmentExpression	Elf_ ( Dyn ) * dyn = NULL		3597057	0		=			
ANR	3597062	MultiplicativeExpression	Elf_ ( Dyn ) * dyn		3597057	0		*			
ANR	3597063	CallExpression	Elf_ ( Dyn )		3597057	0					
ANR	3597064	Callee	Elf_		3597057	0					
ANR	3597065	Identifier	Elf_		3597057	0					
ANR	3597066	ArgumentList	Dyn		3597057	1					
ANR	3597067	Argument	Dyn		3597057	0					
ANR	3597068	Identifier	Dyn		3597057	0					
ANR	3597069	Identifier	dyn		3597057	1					
ANR	3597070	Identifier	NULL		3597057	1					
ANR	3597071	IdentifierDeclStatement	ut64 strtabaddr = 0 ;	511:1:17463:17482	3597057	1	True				
ANR	3597072	IdentifierDecl	strtabaddr = 0		3597057	0					
ANR	3597073	IdentifierDeclType	ut64		3597057	0					
ANR	3597074	Identifier	strtabaddr		3597057	1					
ANR	3597075	AssignmentExpression	strtabaddr = 0		3597057	2		=			
ANR	3597076	Identifier	strtabaddr		3597057	0					
ANR	3597077	PrimaryExpression	0		3597057	1					
ANR	3597078	IdentifierDeclStatement	char * strtab = NULL ;	512:1:17485:17504	3597057	2	True				
ANR	3597079	IdentifierDecl	* strtab = NULL		3597057	0					
ANR	3597080	IdentifierDeclType	char *		3597057	0					
ANR	3597081	Identifier	strtab		3597057	1					
ANR	3597082	AssignmentExpression	* strtab = NULL		3597057	2		=			
ANR	3597083	Identifier	NULL		3597057	0					
ANR	3597084	Identifier	NULL		3597057	1					
ANR	3597085	IdentifierDeclStatement	"size_t relentry = 0 , strsize = 0 ;"	513:1:17507:17539	3597057	3	True				
ANR	3597086	IdentifierDecl	relentry = 0		3597057	0					
ANR	3597087	IdentifierDeclType	size_t		3597057	0					
ANR	3597088	Identifier	relentry		3597057	1					
ANR	3597089	AssignmentExpression	relentry = 0		3597057	2		=			
ANR	3597090	Identifier	relentry		3597057	0					
ANR	3597091	PrimaryExpression	0		3597057	1					
ANR	3597092	IdentifierDecl	strsize = 0		3597057	1					
ANR	3597093	IdentifierDeclType	size_t		3597057	0					
ANR	3597094	Identifier	strsize		3597057	1					
ANR	3597095	AssignmentExpression	strsize = 0		3597057	2		=			
ANR	3597096	Identifier	strsize		3597057	0					
ANR	3597097	PrimaryExpression	0		3597057	1					
ANR	3597098	IdentifierDeclStatement	"int i , len , r ;"	514:1:17542:17555	3597057	4	True				
ANR	3597099	IdentifierDecl	i		3597057	0					
ANR	3597100	IdentifierDeclType	int		3597057	0					
ANR	3597101	Identifier	i		3597057	1					
ANR	3597102	IdentifierDecl	len		3597057	1					
ANR	3597103	IdentifierDeclType	int		3597057	0					
ANR	3597104	Identifier	len		3597057	1					
ANR	3597105	IdentifierDecl	r		3597057	2					
ANR	3597106	IdentifierDeclType	int		3597057	0					
ANR	3597107	Identifier	r		3597057	1					
ANR	3597108	IdentifierDeclStatement	ut8 sdyn [ sizeof ( Elf_ ( Dyn ) ) ] = { 0 } ;	515:1:17558:17594	3597057	5	True				
ANR	3597109	IdentifierDecl	sdyn [ sizeof ( Elf_ ( Dyn ) ) ] = { 0 }		3597057	0					
ANR	3597110	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Dyn ) ) ]		3597057	0					
ANR	3597111	Identifier	sdyn		3597057	1					
ANR	3597112	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		3597057	2					
ANR	3597113	Sizeof	sizeof		3597057	0					
ANR	3597114	CallExpression	Elf_ ( Dyn )		3597057	1					
ANR	3597115	Callee	Elf_		3597057	0					
ANR	3597116	Identifier	Elf_		3597057	0					
ANR	3597117	ArgumentList	Dyn		3597057	1					
ANR	3597118	Argument	Dyn		3597057	0					
ANR	3597119	Identifier	Dyn		3597057	0					
ANR	3597120	AssignmentExpression	sdyn [ sizeof ( Elf_ ( Dyn ) ) ] = { 0 }		3597057	3		=			
ANR	3597121	Identifier	sdyn		3597057	0					
ANR	3597122	InitializerList	0		3597057	1					
ANR	3597123	PrimaryExpression	0		3597057	0					
ANR	3597124	IdentifierDeclStatement	"ut64 dyn_size = 0 , loaded_offset ;"	516:1:17597:17629	3597057	6	True				
ANR	3597125	IdentifierDecl	dyn_size = 0		3597057	0					
ANR	3597126	IdentifierDeclType	ut64		3597057	0					
ANR	3597127	Identifier	dyn_size		3597057	1					
ANR	3597128	AssignmentExpression	dyn_size = 0		3597057	2		=			
ANR	3597129	Identifier	dyn_size		3597057	0					
ANR	3597130	PrimaryExpression	0		3597057	1					
ANR	3597131	IdentifierDecl	loaded_offset		3597057	1					
ANR	3597132	IdentifierDeclType	ut64		3597057	0					
ANR	3597133	Identifier	loaded_offset		3597057	1					
ANR	3597134	ExpressionStatement	"r_return_val_if_fail ( bin , false )"	518:1:17633:17666	3597057	7	True				
ANR	3597135	CallExpression	"r_return_val_if_fail ( bin , false )"		3597057	0					
ANR	3597136	Callee	r_return_val_if_fail		3597057	0					
ANR	3597137	Identifier	r_return_val_if_fail		3597057	0					
ANR	3597138	ArgumentList	bin		3597057	1					
ANR	3597139	Argument	bin		3597057	0					
ANR	3597140	Identifier	bin		3597057	0					
ANR	3597141	Argument	false		3597057	1					
ANR	3597142	Identifier	false		3597057	0					
ANR	3597143	IfStatement	if ( ! bin -> phdr || ! bin -> ehdr . e_phnum )		3597057	8					
ANR	3597144	Condition	! bin -> phdr || ! bin -> ehdr . e_phnum	519:5:17673:17704	3597057	0	True				
ANR	3597145	OrExpression	! bin -> phdr || ! bin -> ehdr . e_phnum		3597057	0		||			
ANR	3597146	UnaryOperationExpression	! bin -> phdr		3597057	0					
ANR	3597147	UnaryOperator	!		3597057	0					
ANR	3597148	PtrMemberAccess	bin -> phdr		3597057	1					
ANR	3597149	Identifier	bin		3597057	0					
ANR	3597150	Identifier	phdr		3597057	1					
ANR	3597151	UnaryOperationExpression	! bin -> ehdr . e_phnum		3597057	1					
ANR	3597152	UnaryOperator	!		3597057	0					
ANR	3597153	MemberAccess	bin -> ehdr . e_phnum		3597057	1					
ANR	3597154	PtrMemberAccess	bin -> ehdr		3597057	0					
ANR	3597155	Identifier	bin		3597057	0					
ANR	3597156	Identifier	ehdr		3597057	1					
ANR	3597157	Identifier	e_phnum		3597057	1					
ANR	3597158	CompoundStatement		11:39:270:270	3597057	1					
ANR	3597159	ReturnStatement	return false ;	520:2:17711:17723	3597057	0	True				
ANR	3597160	Identifier	false		3597057	0					
ANR	3597161	ExpressionStatement	Elf_ ( Phdr ) * dyn_phdr = get_dynamic_segment ( bin )	523:1:17730:17778	3597057	9	True				
ANR	3597162	AssignmentExpression	Elf_ ( Phdr ) * dyn_phdr = get_dynamic_segment ( bin )		3597057	0		=			
ANR	3597163	MultiplicativeExpression	Elf_ ( Phdr ) * dyn_phdr		3597057	0		*			
ANR	3597164	CallExpression	Elf_ ( Phdr )		3597057	0					
ANR	3597165	Callee	Elf_		3597057	0					
ANR	3597166	Identifier	Elf_		3597057	0					
ANR	3597167	ArgumentList	Phdr		3597057	1					
ANR	3597168	Argument	Phdr		3597057	0					
ANR	3597169	Identifier	Phdr		3597057	0					
ANR	3597170	Identifier	dyn_phdr		3597057	1					
ANR	3597171	CallExpression	get_dynamic_segment ( bin )		3597057	1					
ANR	3597172	Callee	get_dynamic_segment		3597057	0					
ANR	3597173	Identifier	get_dynamic_segment		3597057	0					
ANR	3597174	ArgumentList	bin		3597057	1					
ANR	3597175	Argument	bin		3597057	0					
ANR	3597176	Identifier	bin		3597057	0					
ANR	3597177	IfStatement	if ( ! dyn_phdr )		3597057	10					
ANR	3597178	Condition	! dyn_phdr	524:5:17785:17793	3597057	0	True				
ANR	3597179	UnaryOperationExpression	! dyn_phdr		3597057	0					
ANR	3597180	UnaryOperator	!		3597057	0					
ANR	3597181	Identifier	dyn_phdr		3597057	1					
ANR	3597182	CompoundStatement		16:16:359:359	3597057	1					
ANR	3597183	ReturnStatement	return false ;	525:2:17800:17812	3597057	0	True				
ANR	3597184	Identifier	false		3597057	0					
ANR	3597185	ExpressionStatement	dyn_size = dyn_phdr -> p_filesz	527:1:17818:17847	3597057	11	True				
ANR	3597186	AssignmentExpression	dyn_size = dyn_phdr -> p_filesz		3597057	0		=			
ANR	3597187	Identifier	dyn_size		3597057	0					
ANR	3597188	PtrMemberAccess	dyn_phdr -> p_filesz		3597057	1					
ANR	3597189	Identifier	dyn_phdr		3597057	0					
ANR	3597190	Identifier	p_filesz		3597057	1					
ANR	3597191	IdentifierDeclStatement	"int entries = compute_dyn_entries ( bin , dyn_phdr , dyn_size ) ;"	529:1:17851:17910	3597057	12	True				
ANR	3597192	IdentifierDecl	"entries = compute_dyn_entries ( bin , dyn_phdr , dyn_size )"		3597057	0					
ANR	3597193	IdentifierDeclType	int		3597057	0					
ANR	3597194	Identifier	entries		3597057	1					
ANR	3597195	AssignmentExpression	"entries = compute_dyn_entries ( bin , dyn_phdr , dyn_size )"		3597057	2		=			
ANR	3597196	Identifier	entries		3597057	0					
ANR	3597197	CallExpression	"compute_dyn_entries ( bin , dyn_phdr , dyn_size )"		3597057	1					
ANR	3597198	Callee	compute_dyn_entries		3597057	0					
ANR	3597199	Identifier	compute_dyn_entries		3597057	0					
ANR	3597200	ArgumentList	bin		3597057	1					
ANR	3597201	Argument	bin		3597057	0					
ANR	3597202	Identifier	bin		3597057	0					
ANR	3597203	Argument	dyn_phdr		3597057	1					
ANR	3597204	Identifier	dyn_phdr		3597057	0					
ANR	3597205	Argument	dyn_size		3597057	2					
ANR	3597206	Identifier	dyn_size		3597057	0					
ANR	3597207	IfStatement	if ( entries < 0 )		3597057	13					
ANR	3597208	Condition	entries < 0	530:5:17917:17927	3597057	0	True				
ANR	3597209	RelationalExpression	entries < 0		3597057	0		<			
ANR	3597210	Identifier	entries		3597057	0					
ANR	3597211	PrimaryExpression	0		3597057	1					
ANR	3597212	CompoundStatement		22:18:493:493	3597057	1					
ANR	3597213	ReturnStatement	return false ;	531:2:17934:17946	3597057	0	True				
ANR	3597214	Identifier	false		3597057	0					
ANR	3597215	ExpressionStatement	"dyn = R_NEWS0 ( Elf_ ( Dyn ) , entries )"	534:1:17953:17987	3597057	14	True				
ANR	3597216	AssignmentExpression	"dyn = R_NEWS0 ( Elf_ ( Dyn ) , entries )"		3597057	0		=			
ANR	3597217	Identifier	dyn		3597057	0					
ANR	3597218	CallExpression	"R_NEWS0 ( Elf_ ( Dyn ) , entries )"		3597057	1					
ANR	3597219	Callee	R_NEWS0		3597057	0					
ANR	3597220	Identifier	R_NEWS0		3597057	0					
ANR	3597221	ArgumentList	Elf_ ( Dyn )		3597057	1					
ANR	3597222	Argument	Elf_ ( Dyn )		3597057	0					
ANR	3597223	CallExpression	Elf_ ( Dyn )		3597057	0					
ANR	3597224	Callee	Elf_		3597057	0					
ANR	3597225	Identifier	Elf_		3597057	0					
ANR	3597226	ArgumentList	Dyn		3597057	1					
ANR	3597227	Argument	Dyn		3597057	0					
ANR	3597228	Identifier	Dyn		3597057	0					
ANR	3597229	Argument	entries		3597057	1					
ANR	3597230	Identifier	entries		3597057	0					
ANR	3597231	IfStatement	if ( ! dyn )		3597057	15					
ANR	3597232	Condition	! dyn	535:5:17994:17997	3597057	0	True				
ANR	3597233	UnaryOperationExpression	! dyn		3597057	0					
ANR	3597234	UnaryOperator	!		3597057	0					
ANR	3597235	Identifier	dyn		3597057	1					
ANR	3597236	CompoundStatement		27:11:563:563	3597057	1					
ANR	3597237	ReturnStatement	return false ;	536:2:18004:18016	3597057	0	True				
ANR	3597238	Identifier	false		3597057	0					
ANR	3597239	IfStatement	"if ( ! UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) ) )"		3597057	16					
ANR	3597240	Condition	"! UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) )"	538:5:18026:18074	3597057	0	True				
ANR	3597241	UnaryOperationExpression	"! UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) )"		3597057	0					
ANR	3597242	UnaryOperator	!		3597057	0					
ANR	3597243	CallExpression	"UTX_MUL ( & dyn_size , entries , sizeof ( Elf_ ( Dyn ) ) )"		3597057	1					
ANR	3597244	Callee	UTX_MUL		3597057	0					
ANR	3597245	Identifier	UTX_MUL		3597057	0					
ANR	3597246	ArgumentList	& dyn_size		3597057	1					
ANR	3597247	Argument	& dyn_size		3597057	0					
ANR	3597248	UnaryOperationExpression	& dyn_size		3597057	0					
ANR	3597249	UnaryOperator	&		3597057	0					
ANR	3597250	Identifier	dyn_size		3597057	1					
ANR	3597251	Argument	entries		3597057	1					
ANR	3597252	Identifier	entries		3597057	0					
ANR	3597253	Argument	sizeof ( Elf_ ( Dyn ) )		3597057	2					
ANR	3597254	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		3597057	0					
ANR	3597255	Sizeof	sizeof		3597057	0					
ANR	3597256	CallExpression	Elf_ ( Dyn )		3597057	1					
ANR	3597257	Callee	Elf_		3597057	0					
ANR	3597258	Identifier	Elf_		3597057	0					
ANR	3597259	ArgumentList	Dyn		3597057	1					
ANR	3597260	Argument	Dyn		3597057	0					
ANR	3597261	Identifier	Dyn		3597057	0					
ANR	3597262	CompoundStatement		30:56:640:640	3597057	1					
ANR	3597263	GotoStatement	goto beach ;	539:2:18081:18091	3597057	0	True				
ANR	3597264	Identifier	beach		3597057	0					
ANR	3597265	ExpressionStatement	"loaded_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn_phdr -> p_vaddr )"	541:1:18097:18161	3597057	17	True				
ANR	3597266	AssignmentExpression	"loaded_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn_phdr -> p_vaddr )"		3597057	0		=			
ANR	3597267	Identifier	loaded_offset		3597057	0					
ANR	3597268	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn_phdr -> p_vaddr )"		3597057	1					
ANR	3597269	Callee	Elf_ ( r_bin_elf_v2p_new )		3597057	0					
ANR	3597270	CallExpression	Elf_ ( r_bin_elf_v2p_new )		3597057	0					
ANR	3597271	Callee	Elf_		3597057	0					
ANR	3597272	Identifier	Elf_		3597057	0					
ANR	3597273	ArgumentList	r_bin_elf_v2p_new		3597057	1					
ANR	3597274	Argument	r_bin_elf_v2p_new		3597057	0					
ANR	3597275	Identifier	r_bin_elf_v2p_new		3597057	0					
ANR	3597276	ArgumentList	bin		3597057	1					
ANR	3597277	Argument	bin		3597057	0					
ANR	3597278	Identifier	bin		3597057	0					
ANR	3597279	Argument	dyn_phdr -> p_vaddr		3597057	1					
ANR	3597280	PtrMemberAccess	dyn_phdr -> p_vaddr		3597057	0					
ANR	3597281	Identifier	dyn_phdr		3597057	0					
ANR	3597282	Identifier	p_vaddr		3597057	1					
ANR	3597283	IfStatement	if ( loaded_offset == UT64_MAX )		3597057	18					
ANR	3597284	Condition	loaded_offset == UT64_MAX	542:5:18168:18192	3597057	0	True				
ANR	3597285	EqualityExpression	loaded_offset == UT64_MAX		3597057	0		==			
ANR	3597286	Identifier	loaded_offset		3597057	0					
ANR	3597287	Identifier	UT64_MAX		3597057	1					
ANR	3597288	CompoundStatement		34:32:758:758	3597057	1					
ANR	3597289	GotoStatement	goto beach ;	543:2:18199:18209	3597057	0	True				
ANR	3597290	Identifier	beach		3597057	0					
ANR	3597291	IfStatement	if ( ! dyn_size || loaded_offset + dyn_size > bin -> size )		3597057	19					
ANR	3597292	Condition	! dyn_size || loaded_offset + dyn_size > bin -> size	546:5:18220:18268	3597057	0	True				
ANR	3597293	OrExpression	! dyn_size || loaded_offset + dyn_size > bin -> size		3597057	0		||			
ANR	3597294	UnaryOperationExpression	! dyn_size		3597057	0					
ANR	3597295	UnaryOperator	!		3597057	0					
ANR	3597296	Identifier	dyn_size		3597057	1					
ANR	3597297	RelationalExpression	loaded_offset + dyn_size > bin -> size		3597057	1		>			
ANR	3597298	AdditiveExpression	loaded_offset + dyn_size		3597057	0		+			
ANR	3597299	Identifier	loaded_offset		3597057	0					
ANR	3597300	Identifier	dyn_size		3597057	1					
ANR	3597301	PtrMemberAccess	bin -> size		3597057	1					
ANR	3597302	Identifier	bin		3597057	0					
ANR	3597303	Identifier	size		3597057	1					
ANR	3597304	CompoundStatement		38:56:834:834	3597057	1					
ANR	3597305	GotoStatement	goto beach ;	547:2:18275:18285	3597057	0	True				
ANR	3597306	Identifier	beach		3597057	0					
ANR	3597307	ForStatement	for ( i = 0 ; i < entries ; i ++ )		3597057	20					
ANR	3597308	ForInit	i = 0 ;	549:6:18296:18301	3597057	0	True				
ANR	3597309	AssignmentExpression	i = 0		3597057	0		=			
ANR	3597310	Identifier	i		3597057	0					
ANR	3597311	PrimaryExpression	0		3597057	1					
ANR	3597312	Condition	i < entries	549:13:18303:18313	3597057	1	True				
ANR	3597313	RelationalExpression	i < entries		3597057	0		<			
ANR	3597314	Identifier	i		3597057	0					
ANR	3597315	Identifier	entries		3597057	1					
ANR	3597316	PostIncDecOperationExpression	i ++	549:26:18316:18318	3597057	2	True				
ANR	3597317	Identifier	i		3597057	0					
ANR	3597318	IncDec	++		3597057	1					
ANR	3597319	CompoundStatement		42:2:888:897	3597057	3					
ANR	3597320	IdentifierDeclStatement	int j = 0 ;	550:2:18325:18334	3597057	0	True				
ANR	3597321	IdentifierDecl	j = 0		3597057	0					
ANR	3597322	IdentifierDeclType	int		3597057	0					
ANR	3597323	Identifier	j		3597057	1					
ANR	3597324	AssignmentExpression	j = 0		3597057	2		=			
ANR	3597325	Identifier	j		3597057	0					
ANR	3597326	PrimaryExpression	0		3597057	1					
ANR	3597327	ExpressionStatement	"len = r_buf_read_at ( bin -> b , loaded_offset + i * sizeof ( Elf_ ( Dyn ) ) , sdyn , sizeof ( Elf_ ( Dyn ) ) )"	551:2:18338:18432	3597057	1	True				
ANR	3597328	AssignmentExpression	"len = r_buf_read_at ( bin -> b , loaded_offset + i * sizeof ( Elf_ ( Dyn ) ) , sdyn , sizeof ( Elf_ ( Dyn ) ) )"		3597057	0		=			
ANR	3597329	Identifier	len		3597057	0					
ANR	3597330	CallExpression	"r_buf_read_at ( bin -> b , loaded_offset + i * sizeof ( Elf_ ( Dyn ) ) , sdyn , sizeof ( Elf_ ( Dyn ) ) )"		3597057	1					
ANR	3597331	Callee	r_buf_read_at		3597057	0					
ANR	3597332	Identifier	r_buf_read_at		3597057	0					
ANR	3597333	ArgumentList	bin -> b		3597057	1					
ANR	3597334	Argument	bin -> b		3597057	0					
ANR	3597335	PtrMemberAccess	bin -> b		3597057	0					
ANR	3597336	Identifier	bin		3597057	0					
ANR	3597337	Identifier	b		3597057	1					
ANR	3597338	Argument	loaded_offset + i * sizeof ( Elf_ ( Dyn ) )		3597057	1					
ANR	3597339	AdditiveExpression	loaded_offset + i * sizeof ( Elf_ ( Dyn ) )		3597057	0		+			
ANR	3597340	Identifier	loaded_offset		3597057	0					
ANR	3597341	MultiplicativeExpression	i * sizeof ( Elf_ ( Dyn ) )		3597057	1		*			
ANR	3597342	Identifier	i		3597057	0					
ANR	3597343	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		3597057	1					
ANR	3597344	Sizeof	sizeof		3597057	0					
ANR	3597345	CallExpression	Elf_ ( Dyn )		3597057	1					
ANR	3597346	Callee	Elf_		3597057	0					
ANR	3597347	Identifier	Elf_		3597057	0					
ANR	3597348	ArgumentList	Dyn		3597057	1					
ANR	3597349	Argument	Dyn		3597057	0					
ANR	3597350	Identifier	Dyn		3597057	0					
ANR	3597351	Argument	sdyn		3597057	2					
ANR	3597352	Identifier	sdyn		3597057	0					
ANR	3597353	Argument	sizeof ( Elf_ ( Dyn ) )		3597057	3					
ANR	3597354	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		3597057	0					
ANR	3597355	Sizeof	sizeof		3597057	0					
ANR	3597356	CallExpression	Elf_ ( Dyn )		3597057	1					
ANR	3597357	Callee	Elf_		3597057	0					
ANR	3597358	Identifier	Elf_		3597057	0					
ANR	3597359	ArgumentList	Dyn		3597057	1					
ANR	3597360	Argument	Dyn		3597057	0					
ANR	3597361	Identifier	Dyn		3597057	0					
ANR	3597362	IfStatement	if ( len < 1 )		3597057	2					
ANR	3597363	Condition	len < 1	552:6:18440:18446	3597057	0	True				
ANR	3597364	RelationalExpression	len < 1		3597057	0		<			
ANR	3597365	Identifier	len		3597057	0					
ANR	3597366	PrimaryExpression	1		3597057	1					
ANR	3597367	CompoundStatement		44:15:1012:1012	3597057	1					
ANR	3597368	ExpressionStatement	"bprintf ( ""read (dyn)\\n"" )"	553:3:18454:18478	3597057	0	True				
ANR	3597369	CallExpression	"bprintf ( ""read (dyn)\\n"" )"		3597057	0					
ANR	3597370	Callee	bprintf		3597057	0					
ANR	3597371	Identifier	bprintf		3597057	0					
ANR	3597372	ArgumentList	"""read (dyn)\\n"""		3597057	1					
ANR	3597373	Argument	"""read (dyn)\\n"""		3597057	0					
ANR	3597374	PrimaryExpression	"""read (dyn)\\n"""		3597057	0					
ANR	3597375	GotoStatement	goto beach ;	554:3:18483:18493	3597057	1	True				
ANR	3597376	Identifier	beach		3597057	0					
ANR	3597377	ExpressionStatement	"dyn [ i ] . d_tag = READWORD ( sdyn , j )"	556:2:18501:18534	3597057	3	True				
ANR	3597378	AssignmentExpression	"dyn [ i ] . d_tag = READWORD ( sdyn , j )"		3597057	0		=			
ANR	3597379	MemberAccess	dyn [ i ] . d_tag		3597057	0					
ANR	3597380	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597381	Identifier	dyn		3597057	0					
ANR	3597382	Identifier	i		3597057	1					
ANR	3597383	Identifier	d_tag		3597057	1					
ANR	3597384	CallExpression	"READWORD ( sdyn , j )"		3597057	1					
ANR	3597385	Callee	READWORD		3597057	0					
ANR	3597386	Identifier	READWORD		3597057	0					
ANR	3597387	ArgumentList	sdyn		3597057	1					
ANR	3597388	Argument	sdyn		3597057	0					
ANR	3597389	Identifier	sdyn		3597057	0					
ANR	3597390	Argument	j		3597057	1					
ANR	3597391	Identifier	j		3597057	0					
ANR	3597392	ExpressionStatement	"dyn [ i ] . d_un . d_ptr = READWORD ( sdyn , j )"	557:2:18538:18576	3597057	4	True				
ANR	3597393	AssignmentExpression	"dyn [ i ] . d_un . d_ptr = READWORD ( sdyn , j )"		3597057	0		=			
ANR	3597394	MemberAccess	dyn [ i ] . d_un . d_ptr		3597057	0					
ANR	3597395	MemberAccess	dyn [ i ] . d_un		3597057	0					
ANR	3597396	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597397	Identifier	dyn		3597057	0					
ANR	3597398	Identifier	i		3597057	1					
ANR	3597399	Identifier	d_un		3597057	1					
ANR	3597400	Identifier	d_ptr		3597057	1					
ANR	3597401	CallExpression	"READWORD ( sdyn , j )"		3597057	1					
ANR	3597402	Callee	READWORD		3597057	0					
ANR	3597403	Identifier	READWORD		3597057	0					
ANR	3597404	ArgumentList	sdyn		3597057	1					
ANR	3597405	Argument	sdyn		3597057	0					
ANR	3597406	Identifier	sdyn		3597057	0					
ANR	3597407	Argument	j		3597057	1					
ANR	3597408	Identifier	j		3597057	0					
ANR	3597409	SwitchStatement	switch ( dyn [ i ] . d_tag )		3597057	5					
ANR	3597410	Condition	dyn [ i ] . d_tag	559:10:18589:18600	3597057	0	True				
ANR	3597411	MemberAccess	dyn [ i ] . d_tag		3597057	0					
ANR	3597412	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597413	Identifier	dyn		3597057	0					
ANR	3597414	Identifier	i		3597057	1					
ANR	3597415	Identifier	d_tag		3597057	1					
ANR	3597416	CompoundStatement		51:24:1166:1166	3597057	1					
ANR	3597417	Label	case DT_STRTAB :	560:2:18607:18621	3597057	0	True				
ANR	3597418	Identifier	DT_STRTAB		3597057	0					
ANR	3597419	ExpressionStatement	"strtabaddr = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn [ i ] . d_un . d_ptr )"	561:3:18626:18687	3597057	1	True				
ANR	3597420	AssignmentExpression	"strtabaddr = Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn [ i ] . d_un . d_ptr )"		3597057	0		=			
ANR	3597421	Identifier	strtabaddr		3597057	0					
ANR	3597422	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , dyn [ i ] . d_un . d_ptr )"		3597057	1					
ANR	3597423	Callee	Elf_ ( r_bin_elf_v2p_new )		3597057	0					
ANR	3597424	CallExpression	Elf_ ( r_bin_elf_v2p_new )		3597057	0					
ANR	3597425	Callee	Elf_		3597057	0					
ANR	3597426	Identifier	Elf_		3597057	0					
ANR	3597427	ArgumentList	r_bin_elf_v2p_new		3597057	1					
ANR	3597428	Argument	r_bin_elf_v2p_new		3597057	0					
ANR	3597429	Identifier	r_bin_elf_v2p_new		3597057	0					
ANR	3597430	ArgumentList	bin		3597057	1					
ANR	3597431	Argument	bin		3597057	0					
ANR	3597432	Identifier	bin		3597057	0					
ANR	3597433	Argument	dyn [ i ] . d_un . d_ptr		3597057	1					
ANR	3597434	MemberAccess	dyn [ i ] . d_un . d_ptr		3597057	0					
ANR	3597435	MemberAccess	dyn [ i ] . d_un		3597057	0					
ANR	3597436	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597437	Identifier	dyn		3597057	0					
ANR	3597438	Identifier	i		3597057	1					
ANR	3597439	Identifier	d_un		3597057	1					
ANR	3597440	Identifier	d_ptr		3597057	1					
ANR	3597441	BreakStatement	break ;	562:3:18692:18697	3597057	2	True				
ANR	3597442	Label	case DT_STRSZ :	563:2:18701:18714	3597057	3	True				
ANR	3597443	Identifier	DT_STRSZ		3597057	0					
ANR	3597444	ExpressionStatement	strsize = dyn [ i ] . d_un . d_val	564:3:18719:18746	3597057	4	True				
ANR	3597445	AssignmentExpression	strsize = dyn [ i ] . d_un . d_val		3597057	0		=			
ANR	3597446	Identifier	strsize		3597057	0					
ANR	3597447	MemberAccess	dyn [ i ] . d_un . d_val		3597057	1					
ANR	3597448	MemberAccess	dyn [ i ] . d_un		3597057	0					
ANR	3597449	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597450	Identifier	dyn		3597057	0					
ANR	3597451	Identifier	i		3597057	1					
ANR	3597452	Identifier	d_un		3597057	1					
ANR	3597453	Identifier	d_val		3597057	1					
ANR	3597454	BreakStatement	break ;	565:3:18751:18756	3597057	5	True				
ANR	3597455	Label	case DT_PLTREL :	566:2:18760:18774	3597057	6	True				
ANR	3597456	Identifier	DT_PLTREL		3597057	0					
ANR	3597457	ExpressionStatement	bin -> is_rela = dyn [ i ] . d_un . d_val	567:3:18779:18811	3597057	7	True				
ANR	3597458	AssignmentExpression	bin -> is_rela = dyn [ i ] . d_un . d_val		3597057	0		=			
ANR	3597459	PtrMemberAccess	bin -> is_rela		3597057	0					
ANR	3597460	Identifier	bin		3597057	0					
ANR	3597461	Identifier	is_rela		3597057	1					
ANR	3597462	MemberAccess	dyn [ i ] . d_un . d_val		3597057	1					
ANR	3597463	MemberAccess	dyn [ i ] . d_un		3597057	0					
ANR	3597464	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597465	Identifier	dyn		3597057	0					
ANR	3597466	Identifier	i		3597057	1					
ANR	3597467	Identifier	d_un		3597057	1					
ANR	3597468	Identifier	d_val		3597057	1					
ANR	3597469	BreakStatement	break ;	568:3:18816:18821	3597057	8	True				
ANR	3597470	Label	case DT_RELAENT :	569:2:18825:18840	3597057	9	True				
ANR	3597471	Identifier	DT_RELAENT		3597057	0					
ANR	3597472	ExpressionStatement	relentry = dyn [ i ] . d_un . d_val	570:3:18845:18873	3597057	10	True				
ANR	3597473	AssignmentExpression	relentry = dyn [ i ] . d_un . d_val		3597057	0		=			
ANR	3597474	Identifier	relentry		3597057	0					
ANR	3597475	MemberAccess	dyn [ i ] . d_un . d_val		3597057	1					
ANR	3597476	MemberAccess	dyn [ i ] . d_un		3597057	0					
ANR	3597477	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597478	Identifier	dyn		3597057	0					
ANR	3597479	Identifier	i		3597057	1					
ANR	3597480	Identifier	d_un		3597057	1					
ANR	3597481	Identifier	d_val		3597057	1					
ANR	3597482	BreakStatement	break ;	571:3:18878:18883	3597057	11	True				
ANR	3597483	Label	default :	572:2:18887:18894	3597057	12	True				
ANR	3597484	Identifier	default		3597057	0					
ANR	3597485	IfStatement	if ( ( dyn [ i ] . d_tag >= DT_VERSYM ) && ( dyn [ i ] . d_tag <= DT_VERNEEDNUM ) )		3597057	13					
ANR	3597486	Condition	( dyn [ i ] . d_tag >= DT_VERSYM ) && ( dyn [ i ] . d_tag <= DT_VERNEEDNUM )	573:7:18903:18964	3597057	0	True				
ANR	3597487	AndExpression	( dyn [ i ] . d_tag >= DT_VERSYM ) && ( dyn [ i ] . d_tag <= DT_VERNEEDNUM )		3597057	0		&&			
ANR	3597488	RelationalExpression	dyn [ i ] . d_tag >= DT_VERSYM		3597057	0		>=			
ANR	3597489	MemberAccess	dyn [ i ] . d_tag		3597057	0					
ANR	3597490	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597491	Identifier	dyn		3597057	0					
ANR	3597492	Identifier	i		3597057	1					
ANR	3597493	Identifier	d_tag		3597057	1					
ANR	3597494	Identifier	DT_VERSYM		3597057	1					
ANR	3597495	RelationalExpression	dyn [ i ] . d_tag <= DT_VERNEEDNUM		3597057	1		<=			
ANR	3597496	MemberAccess	dyn [ i ] . d_tag		3597057	0					
ANR	3597497	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597498	Identifier	dyn		3597057	0					
ANR	3597499	Identifier	i		3597057	1					
ANR	3597500	Identifier	d_tag		3597057	1					
ANR	3597501	Identifier	DT_VERNEEDNUM		3597057	1					
ANR	3597502	CompoundStatement		65:71:1530:1530	3597057	1					
ANR	3597503	ExpressionStatement	bin -> version_info [ DT_VERSIONTAGIDX ( dyn [ i ] . d_tag ) ] = dyn [ i ] . d_un . d_val	574:4:18973:19043	3597057	0	True				
ANR	3597504	AssignmentExpression	bin -> version_info [ DT_VERSIONTAGIDX ( dyn [ i ] . d_tag ) ] = dyn [ i ] . d_un . d_val		3597057	0		=			
ANR	3597505	ArrayIndexing	bin -> version_info [ DT_VERSIONTAGIDX ( dyn [ i ] . d_tag ) ]		3597057	0					
ANR	3597506	PtrMemberAccess	bin -> version_info		3597057	0					
ANR	3597507	Identifier	bin		3597057	0					
ANR	3597508	Identifier	version_info		3597057	1					
ANR	3597509	CallExpression	DT_VERSIONTAGIDX ( dyn [ i ] . d_tag )		3597057	1					
ANR	3597510	Callee	DT_VERSIONTAGIDX		3597057	0					
ANR	3597511	Identifier	DT_VERSIONTAGIDX		3597057	0					
ANR	3597512	ArgumentList	dyn [ i ] . d_tag		3597057	1					
ANR	3597513	Argument	dyn [ i ] . d_tag		3597057	0					
ANR	3597514	MemberAccess	dyn [ i ] . d_tag		3597057	0					
ANR	3597515	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597516	Identifier	dyn		3597057	0					
ANR	3597517	Identifier	i		3597057	1					
ANR	3597518	Identifier	d_tag		3597057	1					
ANR	3597519	MemberAccess	dyn [ i ] . d_un . d_val		3597057	1					
ANR	3597520	MemberAccess	dyn [ i ] . d_un		3597057	0					
ANR	3597521	ArrayIndexing	dyn [ i ]		3597057	0					
ANR	3597522	Identifier	dyn		3597057	0					
ANR	3597523	Identifier	i		3597057	1					
ANR	3597524	Identifier	d_un		3597057	1					
ANR	3597525	Identifier	d_val		3597057	1					
ANR	3597526	BreakStatement	break ;	576:3:19053:19058	3597057	14	True				
ANR	3597527	IfStatement	if ( ! bin -> is_rela )		3597057	21					
ANR	3597528	Condition	! bin -> is_rela	579:5:19072:19084	3597057	0	True				
ANR	3597529	UnaryOperationExpression	! bin -> is_rela		3597057	0					
ANR	3597530	UnaryOperator	!		3597057	0					
ANR	3597531	PtrMemberAccess	bin -> is_rela		3597057	1					
ANR	3597532	Identifier	bin		3597057	0					
ANR	3597533	Identifier	is_rela		3597057	1					
ANR	3597534	CompoundStatement		71:20:1650:1650	3597057	1					
ANR	3597535	ExpressionStatement	bin -> is_rela = sizeof ( Elf_ ( Rela ) ) == relentry ? DT_RELA : DT_REL	580:2:19091:19154	3597057	0	True				
ANR	3597536	AssignmentExpression	bin -> is_rela = sizeof ( Elf_ ( Rela ) ) == relentry ? DT_RELA : DT_REL		3597057	0		=			
ANR	3597537	PtrMemberAccess	bin -> is_rela		3597057	0					
ANR	3597538	Identifier	bin		3597057	0					
ANR	3597539	Identifier	is_rela		3597057	1					
ANR	3597540	ConditionalExpression	sizeof ( Elf_ ( Rela ) ) == relentry ? DT_RELA : DT_REL		3597057	1					
ANR	3597541	Condition	sizeof ( Elf_ ( Rela ) ) == relentry		3597057	0					
ANR	3597542	EqualityExpression	sizeof ( Elf_ ( Rela ) ) == relentry		3597057	0		==			
ANR	3597543	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3597057	0					
ANR	3597544	Sizeof	sizeof		3597057	0					
ANR	3597545	CallExpression	Elf_ ( Rela )		3597057	1					
ANR	3597546	Callee	Elf_		3597057	0					
ANR	3597547	Identifier	Elf_		3597057	0					
ANR	3597548	ArgumentList	Rela		3597057	1					
ANR	3597549	Argument	Rela		3597057	0					
ANR	3597550	Identifier	Rela		3597057	0					
ANR	3597551	Identifier	relentry		3597057	1					
ANR	3597552	Identifier	DT_RELA		3597057	1					
ANR	3597553	Identifier	DT_REL		3597057	2					
ANR	3597554	IfStatement	if ( strtabaddr == UT64_MAX || strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size )		3597057	22					
ANR	3597555	Condition	strtabaddr == UT64_MAX || strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size	582:5:19164:19304	3597057	0	True				
ANR	3597556	OrExpression	strtabaddr == UT64_MAX || strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		3597057	0		||			
ANR	3597557	EqualityExpression	strtabaddr == UT64_MAX		3597057	0		==			
ANR	3597558	Identifier	strtabaddr		3597057	0					
ANR	3597559	Identifier	UT64_MAX		3597057	1					
ANR	3597560	OrExpression	strtabaddr > bin -> size || strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		3597057	1		||			
ANR	3597561	RelationalExpression	strtabaddr > bin -> size		3597057	0		>			
ANR	3597562	Identifier	strtabaddr		3597057	0					
ANR	3597563	PtrMemberAccess	bin -> size		3597057	1					
ANR	3597564	Identifier	bin		3597057	0					
ANR	3597565	Identifier	size		3597057	1					
ANR	3597566	OrExpression	strsize > ST32_MAX || ! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		3597057	1		||			
ANR	3597567	RelationalExpression	strsize > ST32_MAX		3597057	0		>			
ANR	3597568	Identifier	strsize		3597057	0					
ANR	3597569	Identifier	ST32_MAX		3597057	1					
ANR	3597570	OrExpression	! strsize || strsize > bin -> size || strtabaddr + strsize > bin -> size		3597057	1		||			
ANR	3597571	UnaryOperationExpression	! strsize		3597057	0					
ANR	3597572	UnaryOperator	!		3597057	0					
ANR	3597573	Identifier	strsize		3597057	1					
ANR	3597574	OrExpression	strsize > bin -> size || strtabaddr + strsize > bin -> size		3597057	1		||			
ANR	3597575	RelationalExpression	strsize > bin -> size		3597057	0		>			
ANR	3597576	Identifier	strsize		3597057	0					
ANR	3597577	PtrMemberAccess	bin -> size		3597057	1					
ANR	3597578	Identifier	bin		3597057	0					
ANR	3597579	Identifier	size		3597057	1					
ANR	3597580	RelationalExpression	strtabaddr + strsize > bin -> size		3597057	1		>			
ANR	3597581	AdditiveExpression	strtabaddr + strsize		3597057	0		+			
ANR	3597582	Identifier	strtabaddr		3597057	0					
ANR	3597583	Identifier	strsize		3597057	1					
ANR	3597584	PtrMemberAccess	bin -> size		3597057	1					
ANR	3597585	Identifier	bin		3597057	0					
ANR	3597586	Identifier	size		3597057	1					
ANR	3597587	CompoundStatement		74:148:1870:1870	3597057	1					
ANR	3597588	IfStatement	if ( ! strtabaddr )		3597057	0					
ANR	3597589	Condition	! strtabaddr	583:6:19315:19325	3597057	0	True				
ANR	3597590	UnaryOperationExpression	! strtabaddr		3597057	0					
ANR	3597591	UnaryOperator	!		3597057	0					
ANR	3597592	Identifier	strtabaddr		3597057	1					
ANR	3597593	CompoundStatement		75:19:1891:1891	3597057	1					
ANR	3597594	ExpressionStatement	"bprintf ( ""DT_STRTAB not found or invalid\\n"" )"	584:3:19333:19377	3597057	0	True				
ANR	3597595	CallExpression	"bprintf ( ""DT_STRTAB not found or invalid\\n"" )"		3597057	0					
ANR	3597596	Callee	bprintf		3597057	0					
ANR	3597597	Identifier	bprintf		3597057	0					
ANR	3597598	ArgumentList	"""DT_STRTAB not found or invalid\\n"""		3597057	1					
ANR	3597599	Argument	"""DT_STRTAB not found or invalid\\n"""		3597057	0					
ANR	3597600	PrimaryExpression	"""DT_STRTAB not found or invalid\\n"""		3597057	0					
ANR	3597601	GotoStatement	goto beach ;	586:2:19385:19395	3597057	1	True				
ANR	3597602	Identifier	beach		3597057	0					
ANR	3597603	ExpressionStatement	"strtab = ( char * ) calloc ( 1 , strsize + 1 )"	588:1:19401:19441	3597057	23	True				
ANR	3597604	AssignmentExpression	"strtab = ( char * ) calloc ( 1 , strsize + 1 )"		3597057	0		=			
ANR	3597605	Identifier	strtab		3597057	0					
ANR	3597606	CastExpression	"( char * ) calloc ( 1 , strsize + 1 )"		3597057	1					
ANR	3597607	CastTarget	char *		3597057	0					
ANR	3597608	CallExpression	"calloc ( 1 , strsize + 1 )"		3597057	1					
ANR	3597609	Callee	calloc		3597057	0					
ANR	3597610	Identifier	calloc		3597057	0					
ANR	3597611	ArgumentList	1		3597057	1					
ANR	3597612	Argument	1		3597057	0					
ANR	3597613	PrimaryExpression	1		3597057	0					
ANR	3597614	Argument	strsize + 1		3597057	1					
ANR	3597615	AdditiveExpression	strsize + 1		3597057	0		+			
ANR	3597616	Identifier	strsize		3597057	0					
ANR	3597617	PrimaryExpression	1		3597057	1					
ANR	3597618	IfStatement	if ( ! strtab )		3597057	24					
ANR	3597619	Condition	! strtab	589:5:19448:19454	3597057	0	True				
ANR	3597620	UnaryOperationExpression	! strtab		3597057	0					
ANR	3597621	UnaryOperator	!		3597057	0					
ANR	3597622	Identifier	strtab		3597057	1					
ANR	3597623	CompoundStatement		81:14:2020:2020	3597057	1					
ANR	3597624	GotoStatement	goto beach ;	590:2:19461:19471	3597057	0	True				
ANR	3597625	Identifier	beach		3597057	0					
ANR	3597626	ExpressionStatement	"r = r_buf_read_at ( bin -> b , strtabaddr , ( ut8 * ) strtab , strsize )"	592:1:19477:19539	3597057	25	True				
ANR	3597627	AssignmentExpression	"r = r_buf_read_at ( bin -> b , strtabaddr , ( ut8 * ) strtab , strsize )"		3597057	0		=			
ANR	3597628	Identifier	r		3597057	0					
ANR	3597629	CallExpression	"r_buf_read_at ( bin -> b , strtabaddr , ( ut8 * ) strtab , strsize )"		3597057	1					
ANR	3597630	Callee	r_buf_read_at		3597057	0					
ANR	3597631	Identifier	r_buf_read_at		3597057	0					
ANR	3597632	ArgumentList	bin -> b		3597057	1					
ANR	3597633	Argument	bin -> b		3597057	0					
ANR	3597634	PtrMemberAccess	bin -> b		3597057	0					
ANR	3597635	Identifier	bin		3597057	0					
ANR	3597636	Identifier	b		3597057	1					
ANR	3597637	Argument	strtabaddr		3597057	1					
ANR	3597638	Identifier	strtabaddr		3597057	0					
ANR	3597639	Argument	( ut8 * ) strtab		3597057	2					
ANR	3597640	CastExpression	( ut8 * ) strtab		3597057	0					
ANR	3597641	CastTarget	ut8 *		3597057	0					
ANR	3597642	Identifier	strtab		3597057	1					
ANR	3597643	Argument	strsize		3597057	3					
ANR	3597644	Identifier	strsize		3597057	0					
ANR	3597645	IfStatement	if ( r < 1 )		3597057	26					
ANR	3597646	Condition	r < 1	593:5:19546:19550	3597057	0	True				
ANR	3597647	RelationalExpression	r < 1		3597057	0		<			
ANR	3597648	Identifier	r		3597057	0					
ANR	3597649	PrimaryExpression	1		3597057	1					
ANR	3597650	CompoundStatement		85:12:2116:2116	3597057	1					
ANR	3597651	ExpressionStatement	free ( strtab )	594:2:19557:19570	3597057	0	True				
ANR	3597652	CallExpression	free ( strtab )		3597057	0					
ANR	3597653	Callee	free		3597057	0					
ANR	3597654	Identifier	free		3597057	0					
ANR	3597655	ArgumentList	strtab		3597057	1					
ANR	3597656	Argument	strtab		3597057	0					
ANR	3597657	Identifier	strtab		3597057	0					
ANR	3597658	GotoStatement	goto beach ;	595:2:19574:19584	3597057	1	True				
ANR	3597659	Identifier	beach		3597057	0					
ANR	3597660	ExpressionStatement	bin -> dyn_buf = dyn	597:1:19590:19608	3597057	27	True				
ANR	3597661	AssignmentExpression	bin -> dyn_buf = dyn		3597057	0		=			
ANR	3597662	PtrMemberAccess	bin -> dyn_buf		3597057	0					
ANR	3597663	Identifier	bin		3597057	0					
ANR	3597664	Identifier	dyn_buf		3597057	1					
ANR	3597665	Identifier	dyn		3597057	1					
ANR	3597666	ExpressionStatement	bin -> dyn_entries = entries	598:1:19611:19637	3597057	28	True				
ANR	3597667	AssignmentExpression	bin -> dyn_entries = entries		3597057	0		=			
ANR	3597668	PtrMemberAccess	bin -> dyn_entries		3597057	0					
ANR	3597669	Identifier	bin		3597057	0					
ANR	3597670	Identifier	dyn_entries		3597057	1					
ANR	3597671	Identifier	entries		3597057	1					
ANR	3597672	ExpressionStatement	bin -> strtab = strtab	599:1:19640:19660	3597057	29	True				
ANR	3597673	AssignmentExpression	bin -> strtab = strtab		3597057	0		=			
ANR	3597674	PtrMemberAccess	bin -> strtab		3597057	0					
ANR	3597675	Identifier	bin		3597057	0					
ANR	3597676	Identifier	strtab		3597057	1					
ANR	3597677	Identifier	strtab		3597057	1					
ANR	3597678	ExpressionStatement	bin -> strtab_size = strsize	600:1:19663:19689	3597057	30	True				
ANR	3597679	AssignmentExpression	bin -> strtab_size = strsize		3597057	0		=			
ANR	3597680	PtrMemberAccess	bin -> strtab_size		3597057	0					
ANR	3597681	Identifier	bin		3597057	0					
ANR	3597682	Identifier	strtab_size		3597057	1					
ANR	3597683	Identifier	strsize		3597057	1					
ANR	3597684	ExpressionStatement	"init_dynamic_section_sdb ( bin , strtabaddr , strsize )"	601:1:19692:19743	3597057	31	True				
ANR	3597685	CallExpression	"init_dynamic_section_sdb ( bin , strtabaddr , strsize )"		3597057	0					
ANR	3597686	Callee	init_dynamic_section_sdb		3597057	0					
ANR	3597687	Identifier	init_dynamic_section_sdb		3597057	0					
ANR	3597688	ArgumentList	bin		3597057	1					
ANR	3597689	Argument	bin		3597057	0					
ANR	3597690	Identifier	bin		3597057	0					
ANR	3597691	Argument	strtabaddr		3597057	1					
ANR	3597692	Identifier	strtabaddr		3597057	0					
ANR	3597693	Argument	strsize		3597057	2					
ANR	3597694	Identifier	strsize		3597057	0					
ANR	3597695	ReturnStatement	return true ;	602:1:19746:19757	3597057	32	True				
ANR	3597696	Identifier	true		3597057	0					
ANR	3597697	Label	beach :	603:0:19759:19764	3597057	33	True				
ANR	3597698	Identifier	beach		3597057	0					
ANR	3597699	ExpressionStatement	free ( dyn )	604:1:19767:19777	3597057	34	True				
ANR	3597700	CallExpression	free ( dyn )		3597057	0					
ANR	3597701	Callee	free		3597057	0					
ANR	3597702	Identifier	free		3597057	0					
ANR	3597703	ArgumentList	dyn		3597057	1					
ANR	3597704	Argument	dyn		3597057	0					
ANR	3597705	Identifier	dyn		3597057	0					
ANR	3597706	ReturnStatement	return false ;	605:1:19780:19792	3597057	35	True				
ANR	3597707	Identifier	false		3597057	0					
ANR	3597708	ReturnType	static int		3597057	1					
ANR	3597709	Identifier	init_dynamic_section		3597057	2					
ANR	3597710	ParameterList	ELFOBJ * bin		3597057	3					
ANR	3597711	Parameter	ELFOBJ * bin	509:32:17423:17433	3597057	0	True				
ANR	3597712	ParameterType	ELFOBJ *		3597057	0					
ANR	3597713	Identifier	bin		3597057	1					
ANR	3597714	CFGEntryNode	ENTRY		3597057		True				
ANR	3597715	CFGExitNode	EXIT		3597057		True				
ANR	3597716	Symbol	bin -> size		3597057						
ANR	3597717	Symbol	bin -> b		3597057						
ANR	3597718	Symbol	* DT_VERSIONTAGIDX		3597057						
ANR	3597719	Symbol	Phdr		3597057						
ANR	3597720	Symbol	strtabaddr		3597057						
ANR	3597721	Symbol	ST32_MAX		3597057						
ANR	3597722	Symbol	bin		3597057						
ANR	3597723	Symbol	bin -> phdr		3597057						
ANR	3597724	Symbol	strtab		3597057						
ANR	3597725	Symbol	sdyn		3597057						
ANR	3597726	Symbol	len		3597057						
ANR	3597727	Symbol	compute_dyn_entries		3597057						
ANR	3597728	Symbol	* bin -> version_info		3597057						
ANR	3597729	Symbol	bin -> ehdr		3597057						
ANR	3597730	Symbol	dyn [ i ] . d_un . d_ptr		3597057						
ANR	3597731	Symbol	DT_VERSIONTAGIDX		3597057						
ANR	3597732	Symbol	DT_REL		3597057						
ANR	3597733	Symbol	bin -> strtab		3597057						
ANR	3597734	Symbol	bin -> strtab_size		3597057						
ANR	3597735	Symbol	& dyn_size		3597057						
ANR	3597736	Symbol	READWORD		3597057						
ANR	3597737	Symbol	bin -> dyn_buf		3597057						
ANR	3597738	Symbol	NULL		3597057						
ANR	3597739	Symbol	bin -> dyn_entries		3597057						
ANR	3597740	Symbol	bin -> ehdr . e_phnum		3597057						
ANR	3597741	Symbol	dyn_phdr -> p_filesz		3597057						
ANR	3597742	Symbol	Rela		3597057						
ANR	3597743	Symbol	entries		3597057						
ANR	3597744	Symbol	UTX_MUL		3597057						
ANR	3597745	Symbol	true		3597057						
ANR	3597746	Symbol	DT_VERNEEDNUM		3597057						
ANR	3597747	Symbol	dyn_phdr -> p_vaddr		3597057						
ANR	3597748	Symbol	* dyn_phdr		3597057						
ANR	3597749	Symbol	calloc		3597057						
ANR	3597750	Symbol	get_dynamic_segment		3597057						
ANR	3597751	Symbol	* bin		3597057						
ANR	3597752	Symbol	loaded_offset		3597057						
ANR	3597753	Symbol	relentry		3597057						
ANR	3597754	Symbol	dyn [ i ] . d_un . d_val		3597057						
ANR	3597755	Symbol	R_NEWS0		3597057						
ANR	3597756	Symbol	Dyn		3597057						
ANR	3597757	Symbol	* * bin		3597057						
ANR	3597758	Symbol	UT64_MAX		3597057						
ANR	3597759	Symbol	* dyn		3597057						
ANR	3597760	Symbol	dyn [ i ] . d_tag		3597057						
ANR	3597761	Symbol	Elf_		3597057						
ANR	3597762	Symbol	dyn [ i ] . d_un		3597057						
ANR	3597763	Symbol	DT_VERSYM		3597057						
ANR	3597764	Symbol	dyn_phdr		3597057						
ANR	3597765	Symbol	false		3597057						
ANR	3597766	Symbol	DT_RELA		3597057						
ANR	3597767	Symbol	strsize		3597057						
ANR	3597768	Symbol	i		3597057						
ANR	3597769	Symbol	dyn_size		3597057						
ANR	3597770	Symbol	j		3597057						
ANR	3597771	Symbol	bin -> is_rela		3597057						
ANR	3597772	Symbol	r		3597057						
ANR	3597773	Symbol	* i		3597057						
ANR	3597774	Symbol	dyn		3597057						
ANR	3597775	Symbol	r_bin_elf_v2p_new		3597057						
ANR	3597776	Symbol	r_buf_read_at		3597057						
ANR	3597777	Symbol	bin -> version_info		3597057						
ANR	3597778	Function	get_section_by_name	608:0:19797:20100							
ANR	3597779	FunctionDef	"get_section_by_name (ELFOBJ * bin , const char * section_name)"		3597778	0					
ANR	3597780	CompoundStatement		608:82:19879:20100	3597778	0					
ANR	3597781	IdentifierDeclStatement	int i ;	609:1:19882:19887	3597778	0	True				
ANR	3597782	IdentifierDecl	i		3597778	0					
ANR	3597783	IdentifierDeclType	int		3597778	0					
ANR	3597784	Identifier	i		3597778	1					
ANR	3597785	IfStatement	if ( bin -> g_sections )		3597778	1					
ANR	3597786	Condition	bin -> g_sections	610:5:19894:19908	3597778	0	True				
ANR	3597787	PtrMemberAccess	bin -> g_sections		3597778	0					
ANR	3597788	Identifier	bin		3597778	0					
ANR	3597789	Identifier	g_sections		3597778	1					
ANR	3597790	CompoundStatement		3:22:31:31	3597778	1					
ANR	3597791	ForStatement	for ( i = 0 ; ! bin -> g_sections [ i ] . last ; i ++ )		3597778	0					
ANR	3597792	ForInit	i = 0 ;	611:7:19920:19925	3597778	0	True				
ANR	3597793	AssignmentExpression	i = 0		3597778	0		=			
ANR	3597794	Identifier	i		3597778	0					
ANR	3597795	PrimaryExpression	0		3597778	1					
ANR	3597796	Condition	! bin -> g_sections [ i ] . last	611:14:19927:19950	3597778	1	True				
ANR	3597797	UnaryOperationExpression	! bin -> g_sections [ i ] . last		3597778	0					
ANR	3597798	UnaryOperator	!		3597778	0					
ANR	3597799	MemberAccess	bin -> g_sections [ i ] . last		3597778	1					
ANR	3597800	ArrayIndexing	bin -> g_sections [ i ]		3597778	0					
ANR	3597801	PtrMemberAccess	bin -> g_sections		3597778	0					
ANR	3597802	Identifier	bin		3597778	0					
ANR	3597803	Identifier	g_sections		3597778	1					
ANR	3597804	Identifier	i		3597778	1					
ANR	3597805	Identifier	last		3597778	1					
ANR	3597806	PostIncDecOperationExpression	i ++	611:40:19953:19955	3597778	2	True				
ANR	3597807	Identifier	i		3597778	0					
ANR	3597808	IncDec	++		3597778	1					
ANR	3597809	CompoundStatement		4:45:78:78	3597778	3					
ANR	3597810	IfStatement	"if ( ! strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 ) )"		3597778	0					
ANR	3597811	Condition	"! strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 )"	612:7:19967:20037	3597778	0	True				
ANR	3597812	UnaryOperationExpression	"! strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 )"		3597778	0					
ANR	3597813	UnaryOperator	!		3597778	0					
ANR	3597814	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , section_name , ELF_STRING_LENGTH - 1 )"		3597778	1					
ANR	3597815	Callee	strncmp		3597778	0					
ANR	3597816	Identifier	strncmp		3597778	0					
ANR	3597817	ArgumentList	bin -> g_sections [ i ] . name		3597778	1					
ANR	3597818	Argument	bin -> g_sections [ i ] . name		3597778	0					
ANR	3597819	MemberAccess	bin -> g_sections [ i ] . name		3597778	0					
ANR	3597820	ArrayIndexing	bin -> g_sections [ i ]		3597778	0					
ANR	3597821	PtrMemberAccess	bin -> g_sections		3597778	0					
ANR	3597822	Identifier	bin		3597778	0					
ANR	3597823	Identifier	g_sections		3597778	1					
ANR	3597824	Identifier	i		3597778	1					
ANR	3597825	Identifier	name		3597778	1					
ANR	3597826	Argument	section_name		3597778	1					
ANR	3597827	Identifier	section_name		3597778	0					
ANR	3597828	Argument	ELF_STRING_LENGTH - 1		3597778	2					
ANR	3597829	AdditiveExpression	ELF_STRING_LENGTH - 1		3597778	0		-			
ANR	3597830	Identifier	ELF_STRING_LENGTH		3597778	0					
ANR	3597831	PrimaryExpression	1		3597778	1					
ANR	3597832	CompoundStatement		5:80:160:160	3597778	1					
ANR	3597833	ReturnStatement	return & bin -> g_sections [ i ] ;	613:4:20046:20072	3597778	0	True				
ANR	3597834	UnaryOperationExpression	& bin -> g_sections [ i ]		3597778	0					
ANR	3597835	UnaryOperator	&		3597778	0					
ANR	3597836	ArrayIndexing	bin -> g_sections [ i ]		3597778	1					
ANR	3597837	PtrMemberAccess	bin -> g_sections		3597778	0					
ANR	3597838	Identifier	bin		3597778	0					
ANR	3597839	Identifier	g_sections		3597778	1					
ANR	3597840	Identifier	i		3597778	1					
ANR	3597841	ReturnStatement	return NULL ;	617:1:20087:20098	3597778	2	True				
ANR	3597842	Identifier	NULL		3597778	0					
ANR	3597843	ReturnType	static RBinElfSection *		3597778	1					
ANR	3597844	Identifier	get_section_by_name		3597778	2					
ANR	3597845	ParameterList	"ELFOBJ * bin , const char * section_name"		3597778	3					
ANR	3597846	Parameter	ELFOBJ * bin	608:43:19840:19850	3597778	0	True				
ANR	3597847	ParameterType	ELFOBJ *		3597778	0					
ANR	3597848	Identifier	bin		3597778	1					
ANR	3597849	Parameter	const char * section_name	608:56:19853:19876	3597778	1	True				
ANR	3597850	ParameterType	const char *		3597778	0					
ANR	3597851	Identifier	section_name		3597778	1					
ANR	3597852	CFGEntryNode	ENTRY		3597778		True				
ANR	3597853	CFGExitNode	EXIT		3597778		True				
ANR	3597854	Symbol	NULL		3597778						
ANR	3597855	Symbol	* bin -> g_sections		3597778						
ANR	3597856	Symbol	bin		3597778						
ANR	3597857	Symbol	section_name		3597778						
ANR	3597858	Symbol	i		3597778						
ANR	3597859	Symbol	ELF_STRING_LENGTH		3597778						
ANR	3597860	Symbol	* bin		3597778						
ANR	3597861	Symbol	bin -> g_sections		3597778						
ANR	3597862	Symbol	strncmp		3597778						
ANR	3597863	Symbol	* i		3597778						
ANR	3597864	Symbol	bin -> g_sections [ i ] . name		3597778						
ANR	3597865	Symbol	* * bin		3597778						
ANR	3597866	Symbol	bin -> g_sections [ i ] . last		3597778						
ANR	3597867	Function	get_ver_flags	620:0:20103:20488							
ANR	3597868	FunctionDef	get_ver_flags (ut32 flags)		3597867	0					
ANR	3597869	CompoundStatement		620:39:20142:20488	3597867	0					
ANR	3597870	Statement	static	621:1:20145:20150	3597867	0	True				
ANR	3597871	IdentifierDeclStatement	char buff [ 32 ] ;	621:8:20152:20165	3597867	1	True				
ANR	3597872	IdentifierDecl	buff [ 32 ]		3597867	0					
ANR	3597873	IdentifierDeclType	char [ 32 ]		3597867	0					
ANR	3597874	Identifier	buff		3597867	1					
ANR	3597875	PrimaryExpression	32		3597867	2					
ANR	3597876	ExpressionStatement	buff [ 0 ] = 0	622:1:20168:20179	3597867	2	True				
ANR	3597877	AssignmentExpression	buff [ 0 ] = 0		3597867	0		=			
ANR	3597878	ArrayIndexing	buff [ 0 ]		3597867	0					
ANR	3597879	Identifier	buff		3597867	0					
ANR	3597880	PrimaryExpression	0		3597867	1					
ANR	3597881	PrimaryExpression	0		3597867	1					
ANR	3597882	IfStatement	if ( ! flags )		3597867	3					
ANR	3597883	Condition	! flags	624:5:20187:20192	3597867	0	True				
ANR	3597884	UnaryOperationExpression	! flags		3597867	0					
ANR	3597885	UnaryOperator	!		3597867	0					
ANR	3597886	Identifier	flags		3597867	1					
ANR	3597887	CompoundStatement		5:13:52:52	3597867	1					
ANR	3597888	ReturnStatement	"return ""none"" ;"	625:2:20199:20212	3597867	0	True				
ANR	3597889	PrimaryExpression	"""none"""		3597867	0					
ANR	3597890	IfStatement	if ( flags & VER_FLG_BASE )		3597867	4					
ANR	3597891	Condition	flags & VER_FLG_BASE	627:5:20222:20241	3597867	0	True				
ANR	3597892	BitAndExpression	flags & VER_FLG_BASE		3597867	0		&			
ANR	3597893	Identifier	flags		3597867	0					
ANR	3597894	Identifier	VER_FLG_BASE		3597867	1					
ANR	3597895	CompoundStatement		8:27:101:101	3597867	1					
ANR	3597896	ExpressionStatement	"strcpy ( buff , ""BASE "" )"	628:2:20248:20270	3597867	0	True				
ANR	3597897	CallExpression	"strcpy ( buff , ""BASE "" )"		3597867	0					
ANR	3597898	Callee	strcpy		3597867	0					
ANR	3597899	Identifier	strcpy		3597867	0					
ANR	3597900	ArgumentList	buff		3597867	1					
ANR	3597901	Argument	buff		3597867	0					
ANR	3597902	Identifier	buff		3597867	0					
ANR	3597903	Argument	"""BASE """		3597867	1					
ANR	3597904	PrimaryExpression	"""BASE """		3597867	0					
ANR	3597905	IfStatement	if ( flags & VER_FLG_WEAK )		3597867	5					
ANR	3597906	Condition	flags & VER_FLG_WEAK	630:5:20280:20299	3597867	0	True				
ANR	3597907	BitAndExpression	flags & VER_FLG_WEAK		3597867	0		&			
ANR	3597908	Identifier	flags		3597867	0					
ANR	3597909	Identifier	VER_FLG_WEAK		3597867	1					
ANR	3597910	CompoundStatement		11:27:159:159	3597867	1					
ANR	3597911	IfStatement	if ( flags & VER_FLG_BASE )		3597867	0					
ANR	3597912	Condition	flags & VER_FLG_BASE	631:6:20310:20329	3597867	0	True				
ANR	3597913	BitAndExpression	flags & VER_FLG_BASE		3597867	0		&			
ANR	3597914	Identifier	flags		3597867	0					
ANR	3597915	Identifier	VER_FLG_BASE		3597867	1					
ANR	3597916	CompoundStatement		12:28:189:189	3597867	1					
ANR	3597917	ExpressionStatement	"strcat ( buff , ""| "" )"	632:3:20337:20356	3597867	0	True				
ANR	3597918	CallExpression	"strcat ( buff , ""| "" )"		3597867	0					
ANR	3597919	Callee	strcat		3597867	0					
ANR	3597920	Identifier	strcat		3597867	0					
ANR	3597921	ArgumentList	buff		3597867	1					
ANR	3597922	Argument	buff		3597867	0					
ANR	3597923	Identifier	buff		3597867	0					
ANR	3597924	Argument	"""| """		3597867	1					
ANR	3597925	PrimaryExpression	"""| """		3597867	0					
ANR	3597926	ExpressionStatement	"strcat ( buff , ""WEAK "" )"	634:2:20364:20386	3597867	1	True				
ANR	3597927	CallExpression	"strcat ( buff , ""WEAK "" )"		3597867	0					
ANR	3597928	Callee	strcat		3597867	0					
ANR	3597929	Identifier	strcat		3597867	0					
ANR	3597930	ArgumentList	buff		3597867	1					
ANR	3597931	Argument	buff		3597867	0					
ANR	3597932	Identifier	buff		3597867	0					
ANR	3597933	Argument	"""WEAK """		3597867	1					
ANR	3597934	PrimaryExpression	"""WEAK """		3597867	0					
ANR	3597935	IfStatement	if ( flags & ~ ( VER_FLG_BASE | VER_FLG_WEAK ) )		3597867	6					
ANR	3597936	Condition	flags & ~ ( VER_FLG_BASE | VER_FLG_WEAK )	637:5:20397:20434	3597867	0	True				
ANR	3597937	BitAndExpression	flags & ~ ( VER_FLG_BASE | VER_FLG_WEAK )		3597867	0		&			
ANR	3597938	Identifier	flags		3597867	0					
ANR	3597939	UnaryOperationExpression	~ ( VER_FLG_BASE | VER_FLG_WEAK )		3597867	1					
ANR	3597940	UnaryOperator	~		3597867	0					
ANR	3597941	InclusiveOrExpression	VER_FLG_BASE | VER_FLG_WEAK		3597867	1		|			
ANR	3597942	Identifier	VER_FLG_BASE		3597867	0					
ANR	3597943	Identifier	VER_FLG_WEAK		3597867	1					
ANR	3597944	CompoundStatement		18:45:294:294	3597867	1					
ANR	3597945	ExpressionStatement	"strcat ( buff , ""| <unknown>"" )"	638:2:20441:20469	3597867	0	True				
ANR	3597946	CallExpression	"strcat ( buff , ""| <unknown>"" )"		3597867	0					
ANR	3597947	Callee	strcat		3597867	0					
ANR	3597948	Identifier	strcat		3597867	0					
ANR	3597949	ArgumentList	buff		3597867	1					
ANR	3597950	Argument	buff		3597867	0					
ANR	3597951	Identifier	buff		3597867	0					
ANR	3597952	Argument	"""| <unknown>"""		3597867	1					
ANR	3597953	PrimaryExpression	"""| <unknown>"""		3597867	0					
ANR	3597954	ReturnStatement	return buff ;	640:1:20475:20486	3597867	7	True				
ANR	3597955	Identifier	buff		3597867	0					
ANR	3597956	ReturnType	static char *		3597867	1					
ANR	3597957	Identifier	get_ver_flags		3597867	2					
ANR	3597958	ParameterList	ut32 flags		3597867	3					
ANR	3597959	Parameter	ut32 flags	620:27:20130:20139	3597867	0	True				
ANR	3597960	ParameterType	ut32		3597867	0					
ANR	3597961	Identifier	flags		3597867	1					
ANR	3597962	CFGEntryNode	ENTRY		3597867		True				
ANR	3597963	CFGExitNode	EXIT		3597867		True				
ANR	3597964	Symbol	VER_FLG_BASE		3597867						
ANR	3597965	Symbol	* buff		3597867						
ANR	3597966	Symbol	VER_FLG_WEAK		3597867						
ANR	3597967	Symbol	flags		3597867						
ANR	3597968	Symbol	buff		3597867						
ANR	3597969	DeclStmt									
ANR	3597970	Decl							int	int	i
ANR	3597971	DeclStmt									
ANR	3597972	Decl							const ut64	const ut64	num_entries
ANR	3597973	DeclStmt									
ANR	3597974	Decl							const char	const char *	section_name
ANR	3597975	DeclStmt									
ANR	3597976	Decl							const char	const char *	link_section_name
ANR	3597977	DeclStmt									
ANR	3597978	Decl							Sdb	Sdb *	sdb
ANR	3597979	DeclStmt									
ANR	3597980	Decl							ut8	ut8 *	edata
ANR	3597981	DeclStmt									
ANR	3597982	Decl							ut16	ut16 *	data
ANR	3597983	DeclStmt									
ANR	3597984	Decl							ut64	ut64	off
ANR	3597985	DeclStmt									
ANR	3597986	Decl							char	char *	tmp_val
ANR	3597987	DeclStmt									
ANR	3597988	Decl							int	int	j
ANR	3597989	DeclStmt									
ANR	3597990	Decl							int	int	check_def
ANR	3597991	DeclStmt									
ANR	3597992	Decl							char	char [ 32 ]	key
ANR	3597993	DeclStmt									
ANR	3597994	Decl							int	int	k
ANR	3597995	DeclStmt									
ANR	3597996	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verneed ) ) ]	svn
ANR	3597997	DeclStmt									
ANR	3597998	Decl							ut64	ut64	offset
ANR	3597999	DeclStmt									
ANR	3598000	Decl							ut8	ut8 [ sizeof ( Elf_ ( Vernaux ) ) ]	svna
ANR	3598001	DeclStmt									
ANR	3598002	Decl							ut64	ut64	a_off
ANR	3598003	DeclStmt									
ANR	3598004	Decl							ut64	ut64	vinfoaddr
ANR	3598005	DeclStmt									
ANR	3598006	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verdef ) ) ]	svd
ANR	3598007	DeclStmt									
ANR	3598008	Decl							ut64	ut64	offset
ANR	3598009	DeclStmt									
ANR	3598010	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verdaux ) ) ]	svda
ANR	3598011	DeclStmt									
ANR	3598012	Decl							ut64	ut64	off_vda
ANR	3598013	DeclStmt									
ANR	3598014	Decl							const char	const char *	name
ANR	3598015	DeclStmt									
ANR	3598016	Decl							const char	const char *	section_name
ANR	3598017	DeclStmt									
ANR	3598018	Decl							const char	const char *	link_section_name
ANR	3598019	DeclStmt									
ANR	3598020	Decl							char	char *	end
ANR	3598021	DeclStmt									
ANR	3598022	Decl							ut8	ut8 [ sizeof ( Elf_ ( Verdef ) ) ]	dfs
ANR	3598023	DeclStmt									
ANR	3598024	Decl							Sdb	Sdb *	sdb
ANR	3598025	DeclStmt									
ANR	3598026	Decl							ut32	ut32	cnt
ANR	3598027	DeclStmt									
ANR	3598028	Decl							size_t	size_t	i
ANR	3598029	DeclStmt									
ANR	3598030	Decl							Sdb	Sdb *	sdb_verdef
ANR	3598031	DeclStmt									
ANR	3598032	Decl							char	char *	vstart
ANR	3598033	DeclStmt									
ANR	3598034	Decl							size_t	size_t	vstart_off
ANR	3598035	DeclStmt									
ANR	3598036	Decl							char	char [ 32 ]	key
ANR	3598037	DeclStmt									
ANR	3598038	Decl							int	int	j
ANR	3598039	DeclStmt									
ANR	3598040	Decl							int	int	isum
ANR	3598041	DeclStmt									
ANR	3598042	Decl							int	int	vdaux
ANR	3598043	DeclStmt									
ANR	3598044	Decl							int	int	k
ANR	3598045	DeclStmt									
ANR	3598046	Decl							Sdb	Sdb *	sdb_parent
ANR	3598047	DeclStmt									
ANR	3598048	Decl							ut8	ut8 *	end
ANR	3598049	Decl							ut8	ut8 *	need
ANR	3598050	DeclStmt									
ANR	3598051	Decl							const char	const char *	section_name
ANR	3598052	DeclStmt									
ANR	3598053	Decl							const char	const char *	link_section_name
ANR	3598054	DeclStmt									
ANR	3598055	Decl							Sdb	Sdb *	sdb_vernaux
ANR	3598056	DeclStmt									
ANR	3598057	Decl							Sdb	Sdb *	sdb_version
ANR	3598058	DeclStmt									
ANR	3598059	Decl							Sdb	Sdb *	sdb
ANR	3598060	DeclStmt									
ANR	3598061	Decl							ut64	ut64	i
ANR	3598062	DeclStmt									
ANR	3598063	Decl							int	int	cnt
ANR	3598064	DeclStmt									
ANR	3598065	Decl							int	int	j
ANR	3598066	Decl							int	int	isum
ANR	3598067	DeclStmt									
ANR	3598068	Decl							ut8	ut8 *	vstart
ANR	3598069	DeclStmt									
ANR	3598070	Decl							char	char [ 32 ]	key
ANR	3598071	DeclStmt									
ANR	3598072	Decl							char	char *	s
ANR	3598073	DeclStmt									
ANR	3598074	Decl							st32	st32	vnaux
ANR	3598075	DeclStmt									
ANR	3598076	Decl							ut32	ut32	vn_cnt
ANR	3598077	DeclStmt									
ANR	3598078	Decl							int	int	k
ANR	3598079	DeclStmt									
ANR	3598080	Decl							char	char [ 16 ]	name
ANR	3598081	DeclStmt									
ANR	3598082	Decl							char	char *	key
ANR	3598083	DeclStmt									
ANR	3598084	Decl							char	char *	val
ANR	3598085	Function	store_versioninfo	1117:0:34641:35916							
ANR	3598086	FunctionDef	store_versioninfo (ELFOBJ * bin)		3598085	0					
ANR	3598087	CompoundStatement		1117:43:34684:35916	3598085	0					
ANR	3598088	IdentifierDeclStatement	Sdb * sdb_versioninfo = NULL ;	1118:1:34687:34714	3598085	0	True				
ANR	3598089	IdentifierDecl	* sdb_versioninfo = NULL		3598085	0					
ANR	3598090	IdentifierDeclType	Sdb *		3598085	0					
ANR	3598091	Identifier	sdb_versioninfo		3598085	1					
ANR	3598092	AssignmentExpression	* sdb_versioninfo = NULL		3598085	2		=			
ANR	3598093	Identifier	NULL		3598085	0					
ANR	3598094	Identifier	NULL		3598085	1					
ANR	3598095	IdentifierDeclStatement	int num_verdef = 0 ;	1119:1:34717:34735	3598085	1	True				
ANR	3598096	IdentifierDecl	num_verdef = 0		3598085	0					
ANR	3598097	IdentifierDeclType	int		3598085	0					
ANR	3598098	Identifier	num_verdef		3598085	1					
ANR	3598099	AssignmentExpression	num_verdef = 0		3598085	2		=			
ANR	3598100	Identifier	num_verdef		3598085	0					
ANR	3598101	PrimaryExpression	0		3598085	1					
ANR	3598102	IdentifierDeclStatement	int num_verneed = 0 ;	1120:1:34738:34757	3598085	2	True				
ANR	3598103	IdentifierDecl	num_verneed = 0		3598085	0					
ANR	3598104	IdentifierDeclType	int		3598085	0					
ANR	3598105	Identifier	num_verneed		3598085	1					
ANR	3598106	AssignmentExpression	num_verneed = 0		3598085	2		=			
ANR	3598107	Identifier	num_verneed		3598085	0					
ANR	3598108	PrimaryExpression	0		3598085	1					
ANR	3598109	IdentifierDeclStatement	int num_versym = 0 ;	1121:1:34760:34778	3598085	3	True				
ANR	3598110	IdentifierDecl	num_versym = 0		3598085	0					
ANR	3598111	IdentifierDeclType	int		3598085	0					
ANR	3598112	Identifier	num_versym		3598085	1					
ANR	3598113	AssignmentExpression	num_versym = 0		3598085	2		=			
ANR	3598114	Identifier	num_versym		3598085	0					
ANR	3598115	PrimaryExpression	0		3598085	1					
ANR	3598116	IdentifierDeclStatement	int i ;	1122:1:34781:34786	3598085	4	True				
ANR	3598117	IdentifierDecl	i		3598085	0					
ANR	3598118	IdentifierDeclType	int		3598085	0					
ANR	3598119	Identifier	i		3598085	1					
ANR	3598120	IfStatement	if ( ! bin || ! bin -> shdr )		3598085	5					
ANR	3598121	Condition	! bin || ! bin -> shdr	1124:5:34794:34811	3598085	0	True				
ANR	3598122	OrExpression	! bin || ! bin -> shdr		3598085	0		||			
ANR	3598123	UnaryOperationExpression	! bin		3598085	0					
ANR	3598124	UnaryOperator	!		3598085	0					
ANR	3598125	Identifier	bin		3598085	1					
ANR	3598126	UnaryOperationExpression	! bin -> shdr		3598085	1					
ANR	3598127	UnaryOperator	!		3598085	0					
ANR	3598128	PtrMemberAccess	bin -> shdr		3598085	1					
ANR	3598129	Identifier	bin		3598085	0					
ANR	3598130	Identifier	shdr		3598085	1					
ANR	3598131	CompoundStatement		8:25:129:129	3598085	1					
ANR	3598132	ReturnStatement	return NULL ;	1125:2:34818:34829	3598085	0	True				
ANR	3598133	Identifier	NULL		3598085	0					
ANR	3598134	IfStatement	if ( ! ( sdb_versioninfo = sdb_new0 ( ) ) )		3598085	6					
ANR	3598135	Condition	! ( sdb_versioninfo = sdb_new0 ( ) )	1127:5:34839:34870	3598085	0	True				
ANR	3598136	UnaryOperationExpression	! ( sdb_versioninfo = sdb_new0 ( ) )		3598085	0					
ANR	3598137	UnaryOperator	!		3598085	0					
ANR	3598138	AssignmentExpression	sdb_versioninfo = sdb_new0 ( )		3598085	1		=			
ANR	3598139	Identifier	sdb_versioninfo		3598085	0					
ANR	3598140	CallExpression	sdb_new0 ( )		3598085	1					
ANR	3598141	Callee	sdb_new0		3598085	0					
ANR	3598142	Identifier	sdb_new0		3598085	0					
ANR	3598143	ArgumentList			3598085	1					
ANR	3598144	CompoundStatement		11:39:188:188	3598085	1					
ANR	3598145	ReturnStatement	return NULL ;	1128:2:34877:34888	3598085	0	True				
ANR	3598146	Identifier	NULL		3598085	0					
ANR	3598147	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		3598085	7					
ANR	3598148	ForInit	i = 0 ;	1131:6:34900:34905	3598085	0	True				
ANR	3598149	AssignmentExpression	i = 0		3598085	0		=			
ANR	3598150	Identifier	i		3598085	0					
ANR	3598151	PrimaryExpression	0		3598085	1					
ANR	3598152	Condition	i < bin -> ehdr . e_shnum	1131:13:34907:34927	3598085	1	True				
ANR	3598153	RelationalExpression	i < bin -> ehdr . e_shnum		3598085	0		<			
ANR	3598154	Identifier	i		3598085	0					
ANR	3598155	MemberAccess	bin -> ehdr . e_shnum		3598085	1					
ANR	3598156	PtrMemberAccess	bin -> ehdr		3598085	0					
ANR	3598157	Identifier	bin		3598085	0					
ANR	3598158	Identifier	ehdr		3598085	1					
ANR	3598159	Identifier	e_shnum		3598085	1					
ANR	3598160	PostIncDecOperationExpression	i ++	1131:36:34930:34932	3598085	2	True				
ANR	3598161	Identifier	i		3598085	0					
ANR	3598162	IncDec	++		3598085	1					
ANR	3598163	CompoundStatement		23:2:435:478	3598085	3					
ANR	3598164	IdentifierDeclStatement	Sdb * sdb = NULL ;	1132:2:34939:34954	3598085	0	True				
ANR	3598165	IdentifierDecl	* sdb = NULL		3598085	0					
ANR	3598166	IdentifierDeclType	Sdb *		3598085	0					
ANR	3598167	Identifier	sdb		3598085	1					
ANR	3598168	AssignmentExpression	* sdb = NULL		3598085	2		=			
ANR	3598169	Identifier	NULL		3598085	0					
ANR	3598170	Identifier	NULL		3598085	1					
ANR	3598171	IdentifierDeclStatement	char key [ 32 ] = { 0 } ;	1133:2:34958:34976	3598085	1	True				
ANR	3598172	IdentifierDecl	key [ 32 ] = { 0 }		3598085	0					
ANR	3598173	IdentifierDeclType	char [ 32 ]		3598085	0					
ANR	3598174	Identifier	key		3598085	1					
ANR	3598175	PrimaryExpression	32		3598085	2					
ANR	3598176	AssignmentExpression	key [ 32 ] = { 0 }		3598085	3		=			
ANR	3598177	Identifier	key		3598085	0					
ANR	3598178	InitializerList	0		3598085	1					
ANR	3598179	PrimaryExpression	0		3598085	0					
ANR	3598180	IdentifierDeclStatement	int size = bin -> shdr [ i ] . sh_size ;	1134:2:34980:35011	3598085	2	True				
ANR	3598181	IdentifierDecl	size = bin -> shdr [ i ] . sh_size		3598085	0					
ANR	3598182	IdentifierDeclType	int		3598085	0					
ANR	3598183	Identifier	size		3598085	1					
ANR	3598184	AssignmentExpression	size = bin -> shdr [ i ] . sh_size		3598085	2		=			
ANR	3598185	Identifier	size		3598085	0					
ANR	3598186	MemberAccess	bin -> shdr [ i ] . sh_size		3598085	1					
ANR	3598187	ArrayIndexing	bin -> shdr [ i ]		3598085	0					
ANR	3598188	PtrMemberAccess	bin -> shdr		3598085	0					
ANR	3598189	Identifier	bin		3598085	0					
ANR	3598190	Identifier	shdr		3598085	1					
ANR	3598191	Identifier	i		3598085	1					
ANR	3598192	Identifier	sh_size		3598085	1					
ANR	3598193	IfStatement	if ( size - ( i * sizeof ( Elf_ ( Shdr ) ) > bin -> size ) )		3598085	3					
ANR	3598194	Condition	size - ( i * sizeof ( Elf_ ( Shdr ) ) > bin -> size )	1136:6:35020:35063	3598085	0	True				
ANR	3598195	AdditiveExpression	size - ( i * sizeof ( Elf_ ( Shdr ) ) > bin -> size )		3598085	0		-			
ANR	3598196	Identifier	size		3598085	0					
ANR	3598197	RelationalExpression	i * sizeof ( Elf_ ( Shdr ) ) > bin -> size		3598085	1		>			
ANR	3598198	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		3598085	0		*			
ANR	3598199	Identifier	i		3598085	0					
ANR	3598200	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3598085	1					
ANR	3598201	Sizeof	sizeof		3598085	0					
ANR	3598202	CallExpression	Elf_ ( Shdr )		3598085	1					
ANR	3598203	Callee	Elf_		3598085	0					
ANR	3598204	Identifier	Elf_		3598085	0					
ANR	3598205	ArgumentList	Shdr		3598085	1					
ANR	3598206	Argument	Shdr		3598085	0					
ANR	3598207	Identifier	Shdr		3598085	0					
ANR	3598208	PtrMemberAccess	bin -> size		3598085	1					
ANR	3598209	Identifier	bin		3598085	0					
ANR	3598210	Identifier	size		3598085	1					
ANR	3598211	CompoundStatement		20:52:381:381	3598085	1					
ANR	3598212	ExpressionStatement	size = bin -> size - ( i * sizeof ( Elf_ ( Shdr ) ) )	1137:3:35071:35112	3598085	0	True				
ANR	3598213	AssignmentExpression	size = bin -> size - ( i * sizeof ( Elf_ ( Shdr ) ) )		3598085	0		=			
ANR	3598214	Identifier	size		3598085	0					
ANR	3598215	AdditiveExpression	bin -> size - ( i * sizeof ( Elf_ ( Shdr ) ) )		3598085	1		-			
ANR	3598216	PtrMemberAccess	bin -> size		3598085	0					
ANR	3598217	Identifier	bin		3598085	0					
ANR	3598218	Identifier	size		3598085	1					
ANR	3598219	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		3598085	1		*			
ANR	3598220	Identifier	i		3598085	0					
ANR	3598221	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3598085	1					
ANR	3598222	Sizeof	sizeof		3598085	0					
ANR	3598223	CallExpression	Elf_ ( Shdr )		3598085	1					
ANR	3598224	Callee	Elf_		3598085	0					
ANR	3598225	Identifier	Elf_		3598085	0					
ANR	3598226	ArgumentList	Shdr		3598085	1					
ANR	3598227	Argument	Shdr		3598085	0					
ANR	3598228	Identifier	Shdr		3598085	0					
ANR	3598229	IdentifierDeclStatement	int left = size - ( i * sizeof ( Elf_ ( Shdr ) ) ) ;	1139:2:35120:35163	3598085	4	True				
ANR	3598230	IdentifierDecl	left = size - ( i * sizeof ( Elf_ ( Shdr ) ) )		3598085	0					
ANR	3598231	IdentifierDeclType	int		3598085	0					
ANR	3598232	Identifier	left		3598085	1					
ANR	3598233	AssignmentExpression	left = size - ( i * sizeof ( Elf_ ( Shdr ) ) )		3598085	2		=			
ANR	3598234	Identifier	left		3598085	0					
ANR	3598235	AdditiveExpression	size - ( i * sizeof ( Elf_ ( Shdr ) ) )		3598085	1		-			
ANR	3598236	Identifier	size		3598085	0					
ANR	3598237	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		3598085	1		*			
ANR	3598238	Identifier	i		3598085	0					
ANR	3598239	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3598085	1					
ANR	3598240	Sizeof	sizeof		3598085	0					
ANR	3598241	CallExpression	Elf_ ( Shdr )		3598085	1					
ANR	3598242	Callee	Elf_		3598085	0					
ANR	3598243	Identifier	Elf_		3598085	0					
ANR	3598244	ArgumentList	Shdr		3598085	1					
ANR	3598245	Argument	Shdr		3598085	0					
ANR	3598246	Identifier	Shdr		3598085	0					
ANR	3598247	ExpressionStatement	"left = R_MIN ( left , bin -> shdr [ i ] . sh_size )"	1140:2:35167:35208	3598085	5	True				
ANR	3598248	AssignmentExpression	"left = R_MIN ( left , bin -> shdr [ i ] . sh_size )"		3598085	0		=			
ANR	3598249	Identifier	left		3598085	0					
ANR	3598250	CallExpression	"R_MIN ( left , bin -> shdr [ i ] . sh_size )"		3598085	1					
ANR	3598251	Callee	R_MIN		3598085	0					
ANR	3598252	Identifier	R_MIN		3598085	0					
ANR	3598253	ArgumentList	left		3598085	1					
ANR	3598254	Argument	left		3598085	0					
ANR	3598255	Identifier	left		3598085	0					
ANR	3598256	Argument	bin -> shdr [ i ] . sh_size		3598085	1					
ANR	3598257	MemberAccess	bin -> shdr [ i ] . sh_size		3598085	0					
ANR	3598258	ArrayIndexing	bin -> shdr [ i ]		3598085	0					
ANR	3598259	PtrMemberAccess	bin -> shdr		3598085	0					
ANR	3598260	Identifier	bin		3598085	0					
ANR	3598261	Identifier	shdr		3598085	1					
ANR	3598262	Identifier	i		3598085	1					
ANR	3598263	Identifier	sh_size		3598085	1					
ANR	3598264	IfStatement	if ( left < 0 )		3598085	6					
ANR	3598265	Condition	left < 0	1141:6:35216:35223	3598085	0	True				
ANR	3598266	RelationalExpression	left < 0		3598085	0		<			
ANR	3598267	Identifier	left		3598085	0					
ANR	3598268	PrimaryExpression	0		3598085	1					
ANR	3598269	CompoundStatement		25:16:541:541	3598085	1					
ANR	3598270	BreakStatement	break ;	1142:3:35231:35236	3598085	0	True				
ANR	3598271	SwitchStatement	switch ( bin -> shdr [ i ] . sh_type )		3598085	7					
ANR	3598272	Condition	bin -> shdr [ i ] . sh_type	1144:10:35252:35271	3598085	0	True				
ANR	3598273	MemberAccess	bin -> shdr [ i ] . sh_type		3598085	0					
ANR	3598274	ArrayIndexing	bin -> shdr [ i ]		3598085	0					
ANR	3598275	PtrMemberAccess	bin -> shdr		3598085	0					
ANR	3598276	Identifier	bin		3598085	0					
ANR	3598277	Identifier	shdr		3598085	1					
ANR	3598278	Identifier	i		3598085	1					
ANR	3598279	Identifier	sh_type		3598085	1					
ANR	3598280	CompoundStatement		28:32:589:589	3598085	1					
ANR	3598281	Label	case SHT_GNU_verdef :	1145:2:35278:35297	3598085	0	True				
ANR	3598282	Identifier	SHT_GNU_verdef		3598085	0					
ANR	3598283	ExpressionStatement	"sdb = store_versioninfo_gnu_verdef ( bin , & bin -> shdr [ i ] , left )"	1146:3:35302:35363	3598085	1	True				
ANR	3598284	AssignmentExpression	"sdb = store_versioninfo_gnu_verdef ( bin , & bin -> shdr [ i ] , left )"		3598085	0		=			
ANR	3598285	Identifier	sdb		3598085	0					
ANR	3598286	CallExpression	"store_versioninfo_gnu_verdef ( bin , & bin -> shdr [ i ] , left )"		3598085	1					
ANR	3598287	Callee	store_versioninfo_gnu_verdef		3598085	0					
ANR	3598288	Identifier	store_versioninfo_gnu_verdef		3598085	0					
ANR	3598289	ArgumentList	bin		3598085	1					
ANR	3598290	Argument	bin		3598085	0					
ANR	3598291	Identifier	bin		3598085	0					
ANR	3598292	Argument	& bin -> shdr [ i ]		3598085	1					
ANR	3598293	UnaryOperationExpression	& bin -> shdr [ i ]		3598085	0					
ANR	3598294	UnaryOperator	&		3598085	0					
ANR	3598295	ArrayIndexing	bin -> shdr [ i ]		3598085	1					
ANR	3598296	PtrMemberAccess	bin -> shdr		3598085	0					
ANR	3598297	Identifier	bin		3598085	0					
ANR	3598298	Identifier	shdr		3598085	1					
ANR	3598299	Identifier	i		3598085	1					
ANR	3598300	Argument	left		3598085	2					
ANR	3598301	Identifier	left		3598085	0					
ANR	3598302	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ""verdef%d"" , num_verdef ++ )"	1147:3:35368:35422	3598085	2	True				
ANR	3598303	CallExpression	"snprintf ( key , sizeof ( key ) , ""verdef%d"" , num_verdef ++ )"		3598085	0					
ANR	3598304	Callee	snprintf		3598085	0					
ANR	3598305	Identifier	snprintf		3598085	0					
ANR	3598306	ArgumentList	key		3598085	1					
ANR	3598307	Argument	key		3598085	0					
ANR	3598308	Identifier	key		3598085	0					
ANR	3598309	Argument	sizeof ( key )		3598085	1					
ANR	3598310	SizeofExpression	sizeof ( key )		3598085	0					
ANR	3598311	Sizeof	sizeof		3598085	0					
ANR	3598312	SizeofOperand	key		3598085	1					
ANR	3598313	Argument	"""verdef%d"""		3598085	2					
ANR	3598314	PrimaryExpression	"""verdef%d"""		3598085	0					
ANR	3598315	Argument	num_verdef ++		3598085	3					
ANR	3598316	PostIncDecOperationExpression	num_verdef ++		3598085	0					
ANR	3598317	Identifier	num_verdef		3598085	0					
ANR	3598318	IncDec	++		3598085	1					
ANR	3598319	ExpressionStatement	"sdb_ns_set ( sdb_versioninfo , key , sdb )"	1148:3:35427:35465	3598085	3	True				
ANR	3598320	CallExpression	"sdb_ns_set ( sdb_versioninfo , key , sdb )"		3598085	0					
ANR	3598321	Callee	sdb_ns_set		3598085	0					
ANR	3598322	Identifier	sdb_ns_set		3598085	0					
ANR	3598323	ArgumentList	sdb_versioninfo		3598085	1					
ANR	3598324	Argument	sdb_versioninfo		3598085	0					
ANR	3598325	Identifier	sdb_versioninfo		3598085	0					
ANR	3598326	Argument	key		3598085	1					
ANR	3598327	Identifier	key		3598085	0					
ANR	3598328	Argument	sdb		3598085	2					
ANR	3598329	Identifier	sdb		3598085	0					
ANR	3598330	BreakStatement	break ;	1149:3:35470:35475	3598085	4	True				
ANR	3598331	Label	case SHT_GNU_verneed :	1150:2:35479:35499	3598085	5	True				
ANR	3598332	Identifier	SHT_GNU_verneed		3598085	0					
ANR	3598333	ExpressionStatement	"sdb = store_versioninfo_gnu_verneed ( bin , & bin -> shdr [ i ] , left )"	1151:3:35504:35566	3598085	6	True				
ANR	3598334	AssignmentExpression	"sdb = store_versioninfo_gnu_verneed ( bin , & bin -> shdr [ i ] , left )"		3598085	0		=			
ANR	3598335	Identifier	sdb		3598085	0					
ANR	3598336	CallExpression	"store_versioninfo_gnu_verneed ( bin , & bin -> shdr [ i ] , left )"		3598085	1					
ANR	3598337	Callee	store_versioninfo_gnu_verneed		3598085	0					
ANR	3598338	Identifier	store_versioninfo_gnu_verneed		3598085	0					
ANR	3598339	ArgumentList	bin		3598085	1					
ANR	3598340	Argument	bin		3598085	0					
ANR	3598341	Identifier	bin		3598085	0					
ANR	3598342	Argument	& bin -> shdr [ i ]		3598085	1					
ANR	3598343	UnaryOperationExpression	& bin -> shdr [ i ]		3598085	0					
ANR	3598344	UnaryOperator	&		3598085	0					
ANR	3598345	ArrayIndexing	bin -> shdr [ i ]		3598085	1					
ANR	3598346	PtrMemberAccess	bin -> shdr		3598085	0					
ANR	3598347	Identifier	bin		3598085	0					
ANR	3598348	Identifier	shdr		3598085	1					
ANR	3598349	Identifier	i		3598085	1					
ANR	3598350	Argument	left		3598085	2					
ANR	3598351	Identifier	left		3598085	0					
ANR	3598352	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ""verneed%d"" , num_verneed ++ )"	1152:3:35571:35627	3598085	7	True				
ANR	3598353	CallExpression	"snprintf ( key , sizeof ( key ) , ""verneed%d"" , num_verneed ++ )"		3598085	0					
ANR	3598354	Callee	snprintf		3598085	0					
ANR	3598355	Identifier	snprintf		3598085	0					
ANR	3598356	ArgumentList	key		3598085	1					
ANR	3598357	Argument	key		3598085	0					
ANR	3598358	Identifier	key		3598085	0					
ANR	3598359	Argument	sizeof ( key )		3598085	1					
ANR	3598360	SizeofExpression	sizeof ( key )		3598085	0					
ANR	3598361	Sizeof	sizeof		3598085	0					
ANR	3598362	SizeofOperand	key		3598085	1					
ANR	3598363	Argument	"""verneed%d"""		3598085	2					
ANR	3598364	PrimaryExpression	"""verneed%d"""		3598085	0					
ANR	3598365	Argument	num_verneed ++		3598085	3					
ANR	3598366	PostIncDecOperationExpression	num_verneed ++		3598085	0					
ANR	3598367	Identifier	num_verneed		3598085	0					
ANR	3598368	IncDec	++		3598085	1					
ANR	3598369	ExpressionStatement	"sdb_ns_set ( sdb_versioninfo , key , sdb )"	1153:3:35632:35670	3598085	8	True				
ANR	3598370	CallExpression	"sdb_ns_set ( sdb_versioninfo , key , sdb )"		3598085	0					
ANR	3598371	Callee	sdb_ns_set		3598085	0					
ANR	3598372	Identifier	sdb_ns_set		3598085	0					
ANR	3598373	ArgumentList	sdb_versioninfo		3598085	1					
ANR	3598374	Argument	sdb_versioninfo		3598085	0					
ANR	3598375	Identifier	sdb_versioninfo		3598085	0					
ANR	3598376	Argument	key		3598085	1					
ANR	3598377	Identifier	key		3598085	0					
ANR	3598378	Argument	sdb		3598085	2					
ANR	3598379	Identifier	sdb		3598085	0					
ANR	3598380	BreakStatement	break ;	1154:3:35675:35680	3598085	9	True				
ANR	3598381	Label	case SHT_GNU_versym :	1155:2:35684:35703	3598085	10	True				
ANR	3598382	Identifier	SHT_GNU_versym		3598085	0					
ANR	3598383	ExpressionStatement	"sdb = store_versioninfo_gnu_versym ( bin , & bin -> shdr [ i ] , left )"	1156:3:35708:35769	3598085	11	True				
ANR	3598384	AssignmentExpression	"sdb = store_versioninfo_gnu_versym ( bin , & bin -> shdr [ i ] , left )"		3598085	0		=			
ANR	3598385	Identifier	sdb		3598085	0					
ANR	3598386	CallExpression	"store_versioninfo_gnu_versym ( bin , & bin -> shdr [ i ] , left )"		3598085	1					
ANR	3598387	Callee	store_versioninfo_gnu_versym		3598085	0					
ANR	3598388	Identifier	store_versioninfo_gnu_versym		3598085	0					
ANR	3598389	ArgumentList	bin		3598085	1					
ANR	3598390	Argument	bin		3598085	0					
ANR	3598391	Identifier	bin		3598085	0					
ANR	3598392	Argument	& bin -> shdr [ i ]		3598085	1					
ANR	3598393	UnaryOperationExpression	& bin -> shdr [ i ]		3598085	0					
ANR	3598394	UnaryOperator	&		3598085	0					
ANR	3598395	ArrayIndexing	bin -> shdr [ i ]		3598085	1					
ANR	3598396	PtrMemberAccess	bin -> shdr		3598085	0					
ANR	3598397	Identifier	bin		3598085	0					
ANR	3598398	Identifier	shdr		3598085	1					
ANR	3598399	Identifier	i		3598085	1					
ANR	3598400	Argument	left		3598085	2					
ANR	3598401	Identifier	left		3598085	0					
ANR	3598402	ExpressionStatement	"snprintf ( key , sizeof ( key ) , ""versym%d"" , num_versym ++ )"	1157:3:35774:35828	3598085	12	True				
ANR	3598403	CallExpression	"snprintf ( key , sizeof ( key ) , ""versym%d"" , num_versym ++ )"		3598085	0					
ANR	3598404	Callee	snprintf		3598085	0					
ANR	3598405	Identifier	snprintf		3598085	0					
ANR	3598406	ArgumentList	key		3598085	1					
ANR	3598407	Argument	key		3598085	0					
ANR	3598408	Identifier	key		3598085	0					
ANR	3598409	Argument	sizeof ( key )		3598085	1					
ANR	3598410	SizeofExpression	sizeof ( key )		3598085	0					
ANR	3598411	Sizeof	sizeof		3598085	0					
ANR	3598412	SizeofOperand	key		3598085	1					
ANR	3598413	Argument	"""versym%d"""		3598085	2					
ANR	3598414	PrimaryExpression	"""versym%d"""		3598085	0					
ANR	3598415	Argument	num_versym ++		3598085	3					
ANR	3598416	PostIncDecOperationExpression	num_versym ++		3598085	0					
ANR	3598417	Identifier	num_versym		3598085	0					
ANR	3598418	IncDec	++		3598085	1					
ANR	3598419	ExpressionStatement	"sdb_ns_set ( sdb_versioninfo , key , sdb )"	1158:3:35833:35871	3598085	13	True				
ANR	3598420	CallExpression	"sdb_ns_set ( sdb_versioninfo , key , sdb )"		3598085	0					
ANR	3598421	Callee	sdb_ns_set		3598085	0					
ANR	3598422	Identifier	sdb_ns_set		3598085	0					
ANR	3598423	ArgumentList	sdb_versioninfo		3598085	1					
ANR	3598424	Argument	sdb_versioninfo		3598085	0					
ANR	3598425	Identifier	sdb_versioninfo		3598085	0					
ANR	3598426	Argument	key		3598085	1					
ANR	3598427	Identifier	key		3598085	0					
ANR	3598428	Argument	sdb		3598085	2					
ANR	3598429	Identifier	sdb		3598085	0					
ANR	3598430	BreakStatement	break ;	1159:3:35876:35881	3598085	14	True				
ANR	3598431	ReturnStatement	return sdb_versioninfo ;	1163:1:35892:35914	3598085	8	True				
ANR	3598432	Identifier	sdb_versioninfo		3598085	0					
ANR	3598433	ReturnType	static Sdb *		3598085	1					
ANR	3598434	Identifier	store_versioninfo		3598085	2					
ANR	3598435	ParameterList	ELFOBJ * bin		3598085	3					
ANR	3598436	Parameter	ELFOBJ * bin	1117:30:34671:34681	3598085	0	True				
ANR	3598437	ParameterType	ELFOBJ *		3598085	0					
ANR	3598438	Identifier	bin		3598085	1					
ANR	3598439	CFGEntryNode	ENTRY		3598085		True				
ANR	3598440	CFGExitNode	EXIT		3598085		True				
ANR	3598441	Symbol	bin -> ehdr . e_shnum		3598085						
ANR	3598442	Symbol	bin -> size		3598085						
ANR	3598443	Symbol	bin		3598085						
ANR	3598444	Symbol	* bin -> shdr		3598085						
ANR	3598445	Symbol	* bin		3598085						
ANR	3598446	Symbol	store_versioninfo_gnu_verdef		3598085						
ANR	3598447	Symbol	store_versioninfo_gnu_versym		3598085						
ANR	3598448	Symbol	bin -> ehdr		3598085						
ANR	3598449	Symbol	num_versym		3598085						
ANR	3598450	Symbol	* * bin		3598085						
ANR	3598451	Symbol	sdb_versioninfo		3598085						
ANR	3598452	Symbol	store_versioninfo_gnu_verneed		3598085						
ANR	3598453	Symbol	num_verdef		3598085						
ANR	3598454	Symbol	key		3598085						
ANR	3598455	Symbol	Elf_		3598085						
ANR	3598456	Symbol	sdb_new0		3598085						
ANR	3598457	Symbol	NULL		3598085						
ANR	3598458	Symbol	Shdr		3598085						
ANR	3598459	Symbol	bin -> shdr [ i ] . sh_size		3598085						
ANR	3598460	Symbol	i		3598085						
ANR	3598461	Symbol	R_MIN		3598085						
ANR	3598462	Symbol	bin -> shdr		3598085						
ANR	3598463	Symbol	sdb		3598085						
ANR	3598464	Symbol	* i		3598085						
ANR	3598465	Symbol	size		3598085						
ANR	3598466	Symbol	left		3598085						
ANR	3598467	Symbol	bin -> shdr [ i ] . sh_type		3598085						
ANR	3598468	Symbol	num_verneed		3598085						
ANR	3598469	Function	init_dynstr	1166:0:35919:37040							
ANR	3598470	FunctionDef	init_dynstr (ELFOBJ * bin)		3598469	0					
ANR	3598471	CompoundStatement		1166:37:35956:37040	3598469	0					
ANR	3598472	IdentifierDeclStatement	"int i , r ;"	1167:1:35959:35967	3598469	0	True				
ANR	3598473	IdentifierDecl	i		3598469	0					
ANR	3598474	IdentifierDeclType	int		3598469	0					
ANR	3598475	Identifier	i		3598469	1					
ANR	3598476	IdentifierDecl	r		3598469	1					
ANR	3598477	IdentifierDeclType	int		3598469	0					
ANR	3598478	Identifier	r		3598469	1					
ANR	3598479	IdentifierDeclStatement	const char * section_name = NULL ;	1168:1:35970:36001	3598469	1	True				
ANR	3598480	IdentifierDecl	* section_name = NULL		3598469	0					
ANR	3598481	IdentifierDeclType	const char *		3598469	0					
ANR	3598482	Identifier	section_name		3598469	1					
ANR	3598483	AssignmentExpression	* section_name = NULL		3598469	2		=			
ANR	3598484	Identifier	NULL		3598469	0					
ANR	3598485	Identifier	NULL		3598469	1					
ANR	3598486	IfStatement	if ( ! bin || ! bin -> shdr )		3598469	2					
ANR	3598487	Condition	! bin || ! bin -> shdr	1169:5:36008:36025	3598469	0	True				
ANR	3598488	OrExpression	! bin || ! bin -> shdr		3598469	0		||			
ANR	3598489	UnaryOperationExpression	! bin		3598469	0					
ANR	3598490	UnaryOperator	!		3598469	0					
ANR	3598491	Identifier	bin		3598469	1					
ANR	3598492	UnaryOperationExpression	! bin -> shdr		3598469	1					
ANR	3598493	UnaryOperator	!		3598469	0					
ANR	3598494	PtrMemberAccess	bin -> shdr		3598469	1					
ANR	3598495	Identifier	bin		3598469	0					
ANR	3598496	Identifier	shdr		3598469	1					
ANR	3598497	CompoundStatement		4:25:71:71	3598469	1					
ANR	3598498	ReturnStatement	return false ;	1170:2:36032:36044	3598469	0	True				
ANR	3598499	Identifier	false		3598469	0					
ANR	3598500	IfStatement	if ( ! bin -> shstrtab )		3598469	3					
ANR	3598501	Condition	! bin -> shstrtab	1172:5:36054:36067	3598469	0	True				
ANR	3598502	UnaryOperationExpression	! bin -> shstrtab		3598469	0					
ANR	3598503	UnaryOperator	!		3598469	0					
ANR	3598504	PtrMemberAccess	bin -> shstrtab		3598469	1					
ANR	3598505	Identifier	bin		3598469	0					
ANR	3598506	Identifier	shstrtab		3598469	1					
ANR	3598507	CompoundStatement		7:21:113:113	3598469	1					
ANR	3598508	ReturnStatement	return false ;	1173:2:36074:36086	3598469	0	True				
ANR	3598509	Identifier	false		3598469	0					
ANR	3598510	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; ++ i )		3598469	4					
ANR	3598511	ForInit	i = 0 ;	1175:6:36097:36102	3598469	0	True				
ANR	3598512	AssignmentExpression	i = 0		3598469	0		=			
ANR	3598513	Identifier	i		3598469	0					
ANR	3598514	PrimaryExpression	0		3598469	1					
ANR	3598515	Condition	i < bin -> ehdr . e_shnum	1175:13:36104:36124	3598469	1	True				
ANR	3598516	RelationalExpression	i < bin -> ehdr . e_shnum		3598469	0		<			
ANR	3598517	Identifier	i		3598469	0					
ANR	3598518	MemberAccess	bin -> ehdr . e_shnum		3598469	1					
ANR	3598519	PtrMemberAccess	bin -> ehdr		3598469	0					
ANR	3598520	Identifier	bin		3598469	0					
ANR	3598521	Identifier	ehdr		3598469	1					
ANR	3598522	Identifier	e_shnum		3598469	1					
ANR	3598523	UnaryExpression	++ i	1175:36:36127:36129	3598469	2	True				
ANR	3598524	IncDec	++		3598469	0					
ANR	3598525	Identifier	i		3598469	1					
ANR	3598526	CompoundStatement		10:41:175:175	3598469	3					
ANR	3598527	IfStatement	if ( bin -> shdr [ i ] . sh_name > bin -> shstrtab_size )		3598469	0					
ANR	3598528	Condition	bin -> shdr [ i ] . sh_name > bin -> shstrtab_size	1176:6:36140:36180	3598469	0	True				
ANR	3598529	RelationalExpression	bin -> shdr [ i ] . sh_name > bin -> shstrtab_size		3598469	0		>			
ANR	3598530	MemberAccess	bin -> shdr [ i ] . sh_name		3598469	0					
ANR	3598531	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598532	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598533	Identifier	bin		3598469	0					
ANR	3598534	Identifier	shdr		3598469	1					
ANR	3598535	Identifier	i		3598469	1					
ANR	3598536	Identifier	sh_name		3598469	1					
ANR	3598537	PtrMemberAccess	bin -> shstrtab_size		3598469	1					
ANR	3598538	Identifier	bin		3598469	0					
ANR	3598539	Identifier	shstrtab_size		3598469	1					
ANR	3598540	CompoundStatement		11:49:226:226	3598469	1					
ANR	3598541	ReturnStatement	return false ;	1177:3:36188:36200	3598469	0	True				
ANR	3598542	Identifier	false		3598469	0					
ANR	3598543	ExpressionStatement	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]	1179:2:36208:36259	3598469	1	True				
ANR	3598544	AssignmentExpression	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		3598469	0		=			
ANR	3598545	Identifier	section_name		3598469	0					
ANR	3598546	UnaryOperationExpression	& bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		3598469	1					
ANR	3598547	UnaryOperator	&		3598469	0					
ANR	3598548	ArrayIndexing	bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		3598469	1					
ANR	3598549	PtrMemberAccess	bin -> shstrtab		3598469	0					
ANR	3598550	Identifier	bin		3598469	0					
ANR	3598551	Identifier	shstrtab		3598469	1					
ANR	3598552	MemberAccess	bin -> shdr [ i ] . sh_name		3598469	1					
ANR	3598553	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598554	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598555	Identifier	bin		3598469	0					
ANR	3598556	Identifier	shdr		3598469	1					
ANR	3598557	Identifier	i		3598469	1					
ANR	3598558	Identifier	sh_name		3598469	1					
ANR	3598559	IfStatement	"if ( bin -> shdr [ i ] . sh_type == SHT_STRTAB && ! strcmp ( section_name , "".dynstr"" ) )"		3598469	2					
ANR	3598560	Condition	"bin -> shdr [ i ] . sh_type == SHT_STRTAB && ! strcmp ( section_name , "".dynstr"" )"	1180:6:36267:36337	3598469	0	True				
ANR	3598561	AndExpression	"bin -> shdr [ i ] . sh_type == SHT_STRTAB && ! strcmp ( section_name , "".dynstr"" )"		3598469	0		&&			
ANR	3598562	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_STRTAB		3598469	0		==			
ANR	3598563	MemberAccess	bin -> shdr [ i ] . sh_type		3598469	0					
ANR	3598564	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598565	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598566	Identifier	bin		3598469	0					
ANR	3598567	Identifier	shdr		3598469	1					
ANR	3598568	Identifier	i		3598469	1					
ANR	3598569	Identifier	sh_type		3598469	1					
ANR	3598570	Identifier	SHT_STRTAB		3598469	1					
ANR	3598571	UnaryOperationExpression	"! strcmp ( section_name , "".dynstr"" )"		3598469	1					
ANR	3598572	UnaryOperator	!		3598469	0					
ANR	3598573	CallExpression	"strcmp ( section_name , "".dynstr"" )"		3598469	1					
ANR	3598574	Callee	strcmp		3598469	0					
ANR	3598575	Identifier	strcmp		3598469	0					
ANR	3598576	ArgumentList	section_name		3598469	1					
ANR	3598577	Argument	section_name		3598469	0					
ANR	3598578	Identifier	section_name		3598469	0					
ANR	3598579	Argument	""".dynstr"""		3598469	1					
ANR	3598580	PrimaryExpression	""".dynstr"""		3598469	0					
ANR	3598581	CompoundStatement		15:79:383:383	3598469	1					
ANR	3598582	IfStatement	"if ( ! ( bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) ) ) )"		3598469	0					
ANR	3598583	Condition	"! ( bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) ) )"	1181:7:36349:36421	3598469	0	True				
ANR	3598584	UnaryOperationExpression	"! ( bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) ) )"		3598469	0					
ANR	3598585	UnaryOperator	!		3598469	0					
ANR	3598586	AssignmentExpression	"bin -> dynstr = ( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) )"		3598469	1		=			
ANR	3598587	PtrMemberAccess	bin -> dynstr		3598469	0					
ANR	3598588	Identifier	bin		3598469	0					
ANR	3598589	Identifier	dynstr		3598469	1					
ANR	3598590	CastExpression	"( char * ) calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) )"		3598469	1					
ANR	3598591	CastTarget	char *		3598469	0					
ANR	3598592	CallExpression	"calloc ( bin -> shdr [ i ] . sh_size + 1 , sizeof ( char ) )"		3598469	1					
ANR	3598593	Callee	calloc		3598469	0					
ANR	3598594	Identifier	calloc		3598469	0					
ANR	3598595	ArgumentList	bin -> shdr [ i ] . sh_size + 1		3598469	1					
ANR	3598596	Argument	bin -> shdr [ i ] . sh_size + 1		3598469	0					
ANR	3598597	AdditiveExpression	bin -> shdr [ i ] . sh_size + 1		3598469	0		+			
ANR	3598598	MemberAccess	bin -> shdr [ i ] . sh_size		3598469	0					
ANR	3598599	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598600	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598601	Identifier	bin		3598469	0					
ANR	3598602	Identifier	shdr		3598469	1					
ANR	3598603	Identifier	i		3598469	1					
ANR	3598604	Identifier	sh_size		3598469	1					
ANR	3598605	PrimaryExpression	1		3598469	1					
ANR	3598606	Argument	sizeof ( char )		3598469	1					
ANR	3598607	SizeofExpression	sizeof ( char )		3598469	0					
ANR	3598608	Sizeof	sizeof		3598469	0					
ANR	3598609	SizeofOperand	char		3598469	1					
ANR	3598610	CompoundStatement		16:82:467:467	3598469	1					
ANR	3598611	ExpressionStatement	"bprintf ( ""Cannot allocate memory for dynamic strings\\n"" )"	1182:4:36430:36485	3598469	0	True				
ANR	3598612	CallExpression	"bprintf ( ""Cannot allocate memory for dynamic strings\\n"" )"		3598469	0					
ANR	3598613	Callee	bprintf		3598469	0					
ANR	3598614	Identifier	bprintf		3598469	0					
ANR	3598615	ArgumentList	"""Cannot allocate memory for dynamic strings\\n"""		3598469	1					
ANR	3598616	Argument	"""Cannot allocate memory for dynamic strings\\n"""		3598469	0					
ANR	3598617	PrimaryExpression	"""Cannot allocate memory for dynamic strings\\n"""		3598469	0					
ANR	3598618	ReturnStatement	return false ;	1183:4:36491:36503	3598469	1	True				
ANR	3598619	Identifier	false		3598469	0					
ANR	3598620	IfStatement	if ( bin -> shdr [ i ] . sh_offset > bin -> size )		3598469	1					
ANR	3598621	Condition	bin -> shdr [ i ] . sh_offset > bin -> size	1185:7:36517:36550	3598469	0	True				
ANR	3598622	RelationalExpression	bin -> shdr [ i ] . sh_offset > bin -> size		3598469	0		>			
ANR	3598623	MemberAccess	bin -> shdr [ i ] . sh_offset		3598469	0					
ANR	3598624	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598625	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598626	Identifier	bin		3598469	0					
ANR	3598627	Identifier	shdr		3598469	1					
ANR	3598628	Identifier	i		3598469	1					
ANR	3598629	Identifier	sh_offset		3598469	1					
ANR	3598630	PtrMemberAccess	bin -> size		3598469	1					
ANR	3598631	Identifier	bin		3598469	0					
ANR	3598632	Identifier	size		3598469	1					
ANR	3598633	CompoundStatement		20:43:596:596	3598469	1					
ANR	3598634	ReturnStatement	return false ;	1186:4:36559:36571	3598469	0	True				
ANR	3598635	Identifier	false		3598469	0					
ANR	3598636	IfStatement	if ( bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size > bin -> size )		3598469	2					
ANR	3598637	Condition	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size > bin -> size	1188:7:36585:36641	3598469	0	True				
ANR	3598638	RelationalExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size > bin -> size		3598469	0		>			
ANR	3598639	AdditiveExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size		3598469	0		+			
ANR	3598640	MemberAccess	bin -> shdr [ i ] . sh_offset		3598469	0					
ANR	3598641	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598642	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598643	Identifier	bin		3598469	0					
ANR	3598644	Identifier	shdr		3598469	1					
ANR	3598645	Identifier	i		3598469	1					
ANR	3598646	Identifier	sh_offset		3598469	1					
ANR	3598647	MemberAccess	bin -> shdr [ i ] . sh_size		3598469	1					
ANR	3598648	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598649	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598650	Identifier	bin		3598469	0					
ANR	3598651	Identifier	shdr		3598469	1					
ANR	3598652	Identifier	i		3598469	1					
ANR	3598653	Identifier	sh_size		3598469	1					
ANR	3598654	PtrMemberAccess	bin -> size		3598469	1					
ANR	3598655	Identifier	bin		3598469	0					
ANR	3598656	Identifier	size		3598469	1					
ANR	3598657	CompoundStatement		23:66:687:687	3598469	1					
ANR	3598658	ReturnStatement	return false ;	1189:4:36650:36662	3598469	0	True				
ANR	3598659	Identifier	false		3598469	0					
ANR	3598660	IfStatement	if ( bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size < bin -> shdr [ i ] . sh_size )		3598469	3					
ANR	3598661	Condition	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size < bin -> shdr [ i ] . sh_size	1191:7:36676:36743	3598469	0	True				
ANR	3598662	RelationalExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size < bin -> shdr [ i ] . sh_size		3598469	0		<			
ANR	3598663	AdditiveExpression	bin -> shdr [ i ] . sh_offset + bin -> shdr [ i ] . sh_size		3598469	0		+			
ANR	3598664	MemberAccess	bin -> shdr [ i ] . sh_offset		3598469	0					
ANR	3598665	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598666	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598667	Identifier	bin		3598469	0					
ANR	3598668	Identifier	shdr		3598469	1					
ANR	3598669	Identifier	i		3598469	1					
ANR	3598670	Identifier	sh_offset		3598469	1					
ANR	3598671	MemberAccess	bin -> shdr [ i ] . sh_size		3598469	1					
ANR	3598672	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598673	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598674	Identifier	bin		3598469	0					
ANR	3598675	Identifier	shdr		3598469	1					
ANR	3598676	Identifier	i		3598469	1					
ANR	3598677	Identifier	sh_size		3598469	1					
ANR	3598678	MemberAccess	bin -> shdr [ i ] . sh_size		3598469	1					
ANR	3598679	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598680	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598681	Identifier	bin		3598469	0					
ANR	3598682	Identifier	shdr		3598469	1					
ANR	3598683	Identifier	i		3598469	1					
ANR	3598684	Identifier	sh_size		3598469	1					
ANR	3598685	CompoundStatement		26:77:789:789	3598469	1					
ANR	3598686	ReturnStatement	return false ;	1192:4:36752:36764	3598469	0	True				
ANR	3598687	Identifier	false		3598469	0					
ANR	3598688	ExpressionStatement	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset , ( ut8 * ) bin -> dynstr , bin -> shdr [ i ] . sh_size )"	1194:3:36774:36865	3598469	4	True				
ANR	3598689	AssignmentExpression	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset , ( ut8 * ) bin -> dynstr , bin -> shdr [ i ] . sh_size )"		3598469	0		=			
ANR	3598690	Identifier	r		3598469	0					
ANR	3598691	CallExpression	"r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset , ( ut8 * ) bin -> dynstr , bin -> shdr [ i ] . sh_size )"		3598469	1					
ANR	3598692	Callee	r_buf_read_at		3598469	0					
ANR	3598693	Identifier	r_buf_read_at		3598469	0					
ANR	3598694	ArgumentList	bin -> b		3598469	1					
ANR	3598695	Argument	bin -> b		3598469	0					
ANR	3598696	PtrMemberAccess	bin -> b		3598469	0					
ANR	3598697	Identifier	bin		3598469	0					
ANR	3598698	Identifier	b		3598469	1					
ANR	3598699	Argument	bin -> shdr [ i ] . sh_offset		3598469	1					
ANR	3598700	MemberAccess	bin -> shdr [ i ] . sh_offset		3598469	0					
ANR	3598701	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598702	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598703	Identifier	bin		3598469	0					
ANR	3598704	Identifier	shdr		3598469	1					
ANR	3598705	Identifier	i		3598469	1					
ANR	3598706	Identifier	sh_offset		3598469	1					
ANR	3598707	Argument	( ut8 * ) bin -> dynstr		3598469	2					
ANR	3598708	CastExpression	( ut8 * ) bin -> dynstr		3598469	0					
ANR	3598709	CastTarget	ut8 *		3598469	0					
ANR	3598710	PtrMemberAccess	bin -> dynstr		3598469	1					
ANR	3598711	Identifier	bin		3598469	0					
ANR	3598712	Identifier	dynstr		3598469	1					
ANR	3598713	Argument	bin -> shdr [ i ] . sh_size		3598469	3					
ANR	3598714	MemberAccess	bin -> shdr [ i ] . sh_size		3598469	0					
ANR	3598715	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598716	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598717	Identifier	bin		3598469	0					
ANR	3598718	Identifier	shdr		3598469	1					
ANR	3598719	Identifier	i		3598469	1					
ANR	3598720	Identifier	sh_size		3598469	1					
ANR	3598721	IfStatement	if ( r < 1 )		3598469	5					
ANR	3598722	Condition	r < 1	1195:7:36874:36878	3598469	0	True				
ANR	3598723	RelationalExpression	r < 1		3598469	0		<			
ANR	3598724	Identifier	r		3598469	0					
ANR	3598725	PrimaryExpression	1		3598469	1					
ANR	3598726	CompoundStatement		30:14:924:924	3598469	1					
ANR	3598727	ExpressionStatement	R_FREE ( bin -> dynstr )	1196:4:36887:36907	3598469	0	True				
ANR	3598728	CallExpression	R_FREE ( bin -> dynstr )		3598469	0					
ANR	3598729	Callee	R_FREE		3598469	0					
ANR	3598730	Identifier	R_FREE		3598469	0					
ANR	3598731	ArgumentList	bin -> dynstr		3598469	1					
ANR	3598732	Argument	bin -> dynstr		3598469	0					
ANR	3598733	PtrMemberAccess	bin -> dynstr		3598469	0					
ANR	3598734	Identifier	bin		3598469	0					
ANR	3598735	Identifier	dynstr		3598469	1					
ANR	3598736	ExpressionStatement	bin -> dynstr_size = 0	1197:4:36913:36933	3598469	1	True				
ANR	3598737	AssignmentExpression	bin -> dynstr_size = 0		3598469	0		=			
ANR	3598738	PtrMemberAccess	bin -> dynstr_size		3598469	0					
ANR	3598739	Identifier	bin		3598469	0					
ANR	3598740	Identifier	dynstr_size		3598469	1					
ANR	3598741	PrimaryExpression	0		3598469	1					
ANR	3598742	ReturnStatement	return false ;	1198:4:36939:36951	3598469	2	True				
ANR	3598743	Identifier	false		3598469	0					
ANR	3598744	ExpressionStatement	bin -> dynstr_size = bin -> shdr [ i ] . sh_size	1200:3:36961:37000	3598469	6	True				
ANR	3598745	AssignmentExpression	bin -> dynstr_size = bin -> shdr [ i ] . sh_size		3598469	0		=			
ANR	3598746	PtrMemberAccess	bin -> dynstr_size		3598469	0					
ANR	3598747	Identifier	bin		3598469	0					
ANR	3598748	Identifier	dynstr_size		3598469	1					
ANR	3598749	MemberAccess	bin -> shdr [ i ] . sh_size		3598469	1					
ANR	3598750	ArrayIndexing	bin -> shdr [ i ]		3598469	0					
ANR	3598751	PtrMemberAccess	bin -> shdr		3598469	0					
ANR	3598752	Identifier	bin		3598469	0					
ANR	3598753	Identifier	shdr		3598469	1					
ANR	3598754	Identifier	i		3598469	1					
ANR	3598755	Identifier	sh_size		3598469	1					
ANR	3598756	ReturnStatement	return true ;	1201:3:37005:37016	3598469	7	True				
ANR	3598757	Identifier	true		3598469	0					
ANR	3598758	ReturnStatement	return false ;	1204:1:37026:37038	3598469	5	True				
ANR	3598759	Identifier	false		3598469	0					
ANR	3598760	ReturnType	static bool		3598469	1					
ANR	3598761	Identifier	init_dynstr		3598469	2					
ANR	3598762	ParameterList	ELFOBJ * bin		3598469	3					
ANR	3598763	Parameter	ELFOBJ * bin	1166:24:35943:35953	3598469	0	True				
ANR	3598764	ParameterType	ELFOBJ *		3598469	0					
ANR	3598765	Identifier	bin		3598469	1					
ANR	3598766	CFGEntryNode	ENTRY		3598469		True				
ANR	3598767	CFGExitNode	EXIT		3598469		True				
ANR	3598768	Symbol	bin -> ehdr . e_shnum		3598469						
ANR	3598769	Symbol	bin -> size		3598469						
ANR	3598770	Symbol	bin -> b		3598469						
ANR	3598771	Symbol	bin		3598469						
ANR	3598772	Symbol	bin -> shstrtab_size		3598469						
ANR	3598773	Symbol	bin -> shstrtab		3598469						
ANR	3598774	Symbol	* bin -> shdr		3598469						
ANR	3598775	Symbol	calloc		3598469						
ANR	3598776	Symbol	* bin		3598469						
ANR	3598777	Symbol	bin -> ehdr		3598469						
ANR	3598778	Symbol	* * bin		3598469						
ANR	3598779	Symbol	bin -> dynstr		3598469						
ANR	3598780	Symbol	strcmp		3598469						
ANR	3598781	Symbol	bin -> dynstr_size		3598469						
ANR	3598782	Symbol	NULL		3598469						
ANR	3598783	Symbol	section_name		3598469						
ANR	3598784	Symbol	bin -> shdr [ i ] . sh_size		3598469						
ANR	3598785	Symbol	false		3598469						
ANR	3598786	Symbol	i		3598469						
ANR	3598787	Symbol	bin -> shdr [ i ] . sh_name		3598469						
ANR	3598788	Symbol	SHT_STRTAB		3598469						
ANR	3598789	Symbol	bin -> shdr		3598469						
ANR	3598790	Symbol	bin -> shdr [ i ] . sh_offset		3598469						
ANR	3598791	Symbol	r		3598469						
ANR	3598792	Symbol	* i		3598469						
ANR	3598793	Symbol	r_buf_read_at		3598469						
ANR	3598794	Symbol	true		3598469						
ANR	3598795	Symbol	bin -> shdr [ i ] . sh_type		3598469						
ANR	3598796	Function	elf_init	1207:0:37043:38064							
ANR	3598797	FunctionDef	elf_init (ELFOBJ * bin)		3598796	0					
ANR	3598798	CompoundStatement		1207:34:37077:38064	3598796	0					
ANR	3598799	IfStatement	if ( ! init_ehdr ( bin ) )		3598796	0					
ANR	3598800	Condition	! init_ehdr ( bin )	1209:5:37109:37124	3598796	0	True				
ANR	3598801	UnaryOperationExpression	! init_ehdr ( bin )		3598796	0					
ANR	3598802	UnaryOperator	!		3598796	0					
ANR	3598803	CallExpression	init_ehdr ( bin )		3598796	1					
ANR	3598804	Callee	init_ehdr		3598796	0					
ANR	3598805	Identifier	init_ehdr		3598796	0					
ANR	3598806	ArgumentList	bin		3598796	1					
ANR	3598807	Argument	bin		3598796	0					
ANR	3598808	Identifier	bin		3598796	0					
ANR	3598809	CompoundStatement		3:23:49:49	3598796	1					
ANR	3598810	ReturnStatement	return false ;	1210:2:37131:37143	3598796	0	True				
ANR	3598811	Identifier	false		3598796	0					
ANR	3598812	IfStatement	if ( ! init_phdr ( bin ) && ! is_bin_etrel ( bin ) )		3598796	1					
ANR	3598813	Condition	! init_phdr ( bin ) && ! is_bin_etrel ( bin )	1212:5:37153:37191	3598796	0	True				
ANR	3598814	AndExpression	! init_phdr ( bin ) && ! is_bin_etrel ( bin )		3598796	0		&&			
ANR	3598815	UnaryOperationExpression	! init_phdr ( bin )		3598796	0					
ANR	3598816	UnaryOperator	!		3598796	0					
ANR	3598817	CallExpression	init_phdr ( bin )		3598796	1					
ANR	3598818	Callee	init_phdr		3598796	0					
ANR	3598819	Identifier	init_phdr		3598796	0					
ANR	3598820	ArgumentList	bin		3598796	1					
ANR	3598821	Argument	bin		3598796	0					
ANR	3598822	Identifier	bin		3598796	0					
ANR	3598823	UnaryOperationExpression	! is_bin_etrel ( bin )		3598796	1					
ANR	3598824	UnaryOperator	!		3598796	0					
ANR	3598825	CallExpression	is_bin_etrel ( bin )		3598796	1					
ANR	3598826	Callee	is_bin_etrel		3598796	0					
ANR	3598827	Identifier	is_bin_etrel		3598796	0					
ANR	3598828	ArgumentList	bin		3598796	1					
ANR	3598829	Argument	bin		3598796	0					
ANR	3598830	Identifier	bin		3598796	0					
ANR	3598831	CompoundStatement		6:46:116:116	3598796	1					
ANR	3598832	ExpressionStatement	"bprintf ( ""Cannot initialize program headers\\n"" )"	1213:2:37198:37245	3598796	0	True				
ANR	3598833	CallExpression	"bprintf ( ""Cannot initialize program headers\\n"" )"		3598796	0					
ANR	3598834	Callee	bprintf		3598796	0					
ANR	3598835	Identifier	bprintf		3598796	0					
ANR	3598836	ArgumentList	"""Cannot initialize program headers\\n"""		3598796	1					
ANR	3598837	Argument	"""Cannot initialize program headers\\n"""		3598796	0					
ANR	3598838	PrimaryExpression	"""Cannot initialize program headers\\n"""		3598796	0					
ANR	3598839	IfStatement	if ( bin -> ehdr . e_type != ET_CORE )		3598796	2					
ANR	3598840	Condition	bin -> ehdr . e_type != ET_CORE	1215:5:37255:37281	3598796	0	True				
ANR	3598841	EqualityExpression	bin -> ehdr . e_type != ET_CORE		3598796	0		!=			
ANR	3598842	MemberAccess	bin -> ehdr . e_type		3598796	0					
ANR	3598843	PtrMemberAccess	bin -> ehdr		3598796	0					
ANR	3598844	Identifier	bin		3598796	0					
ANR	3598845	Identifier	ehdr		3598796	1					
ANR	3598846	Identifier	e_type		3598796	1					
ANR	3598847	Identifier	ET_CORE		3598796	1					
ANR	3598848	CompoundStatement		9:34:206:206	3598796	1					
ANR	3598849	IfStatement	if ( ! init_shdr ( bin ) )		3598796	0					
ANR	3598850	Condition	! init_shdr ( bin )	1216:6:37292:37307	3598796	0	True				
ANR	3598851	UnaryOperationExpression	! init_shdr ( bin )		3598796	0					
ANR	3598852	UnaryOperator	!		3598796	0					
ANR	3598853	CallExpression	init_shdr ( bin )		3598796	1					
ANR	3598854	Callee	init_shdr		3598796	0					
ANR	3598855	Identifier	init_shdr		3598796	0					
ANR	3598856	ArgumentList	bin		3598796	1					
ANR	3598857	Argument	bin		3598796	0					
ANR	3598858	Identifier	bin		3598796	0					
ANR	3598859	CompoundStatement		10:24:232:232	3598796	1					
ANR	3598860	ExpressionStatement	"bprintf ( ""Cannot initialize section headers\\n"" )"	1217:3:37315:37362	3598796	0	True				
ANR	3598861	CallExpression	"bprintf ( ""Cannot initialize section headers\\n"" )"		3598796	0					
ANR	3598862	Callee	bprintf		3598796	0					
ANR	3598863	Identifier	bprintf		3598796	0					
ANR	3598864	ArgumentList	"""Cannot initialize section headers\\n"""		3598796	1					
ANR	3598865	Argument	"""Cannot initialize section headers\\n"""		3598796	0					
ANR	3598866	PrimaryExpression	"""Cannot initialize section headers\\n"""		3598796	0					
ANR	3598867	IfStatement	if ( ! init_strtab ( bin ) )		3598796	1					
ANR	3598868	Condition	! init_strtab ( bin )	1219:6:37374:37391	3598796	0	True				
ANR	3598869	UnaryOperationExpression	! init_strtab ( bin )		3598796	0					
ANR	3598870	UnaryOperator	!		3598796	0					
ANR	3598871	CallExpression	init_strtab ( bin )		3598796	1					
ANR	3598872	Callee	init_strtab		3598796	0					
ANR	3598873	Identifier	init_strtab		3598796	0					
ANR	3598874	ArgumentList	bin		3598796	1					
ANR	3598875	Argument	bin		3598796	0					
ANR	3598876	Identifier	bin		3598796	0					
ANR	3598877	CompoundStatement		13:26:316:316	3598796	1					
ANR	3598878	ExpressionStatement	"bprintf ( ""Cannot initialize strings table\\n"" )"	1220:3:37399:37444	3598796	0	True				
ANR	3598879	CallExpression	"bprintf ( ""Cannot initialize strings table\\n"" )"		3598796	0					
ANR	3598880	Callee	bprintf		3598796	0					
ANR	3598881	Identifier	bprintf		3598796	0					
ANR	3598882	ArgumentList	"""Cannot initialize strings table\\n"""		3598796	1					
ANR	3598883	Argument	"""Cannot initialize strings table\\n"""		3598796	0					
ANR	3598884	PrimaryExpression	"""Cannot initialize strings table\\n"""		3598796	0					
ANR	3598885	IfStatement	if ( ! init_dynstr ( bin ) && ! is_bin_etrel ( bin ) )		3598796	2					
ANR	3598886	Condition	! init_dynstr ( bin ) && ! is_bin_etrel ( bin )	1222:6:37456:37496	3598796	0	True				
ANR	3598887	AndExpression	! init_dynstr ( bin ) && ! is_bin_etrel ( bin )		3598796	0		&&			
ANR	3598888	UnaryOperationExpression	! init_dynstr ( bin )		3598796	0					
ANR	3598889	UnaryOperator	!		3598796	0					
ANR	3598890	CallExpression	init_dynstr ( bin )		3598796	1					
ANR	3598891	Callee	init_dynstr		3598796	0					
ANR	3598892	Identifier	init_dynstr		3598796	0					
ANR	3598893	ArgumentList	bin		3598796	1					
ANR	3598894	Argument	bin		3598796	0					
ANR	3598895	Identifier	bin		3598796	0					
ANR	3598896	UnaryOperationExpression	! is_bin_etrel ( bin )		3598796	1					
ANR	3598897	UnaryOperator	!		3598796	0					
ANR	3598898	CallExpression	is_bin_etrel ( bin )		3598796	1					
ANR	3598899	Callee	is_bin_etrel		3598796	0					
ANR	3598900	Identifier	is_bin_etrel		3598796	0					
ANR	3598901	ArgumentList	bin		3598796	1					
ANR	3598902	Argument	bin		3598796	0					
ANR	3598903	Identifier	bin		3598796	0					
ANR	3598904	CompoundStatement		16:49:421:421	3598796	1					
ANR	3598905	ExpressionStatement	"bprintf ( ""Cannot initialize dynamic strings\\n"" )"	1223:3:37504:37551	3598796	0	True				
ANR	3598906	CallExpression	"bprintf ( ""Cannot initialize dynamic strings\\n"" )"		3598796	0					
ANR	3598907	Callee	bprintf		3598796	0					
ANR	3598908	Identifier	bprintf		3598796	0					
ANR	3598909	ArgumentList	"""Cannot initialize dynamic strings\\n"""		3598796	1					
ANR	3598910	Argument	"""Cannot initialize dynamic strings\\n"""		3598796	0					
ANR	3598911	PrimaryExpression	"""Cannot initialize dynamic strings\\n"""		3598796	0					
ANR	3598912	ExpressionStatement	bin -> baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )	1225:2:37559:37603	3598796	3	True				
ANR	3598913	AssignmentExpression	bin -> baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		3598796	0		=			
ANR	3598914	PtrMemberAccess	bin -> baddr		3598796	0					
ANR	3598915	Identifier	bin		3598796	0					
ANR	3598916	Identifier	baddr		3598796	1					
ANR	3598917	CallExpression	Elf_ ( r_bin_elf_get_baddr ) ( bin )		3598796	1					
ANR	3598918	Callee	Elf_ ( r_bin_elf_get_baddr )		3598796	0					
ANR	3598919	CallExpression	Elf_ ( r_bin_elf_get_baddr )		3598796	0					
ANR	3598920	Callee	Elf_		3598796	0					
ANR	3598921	Identifier	Elf_		3598796	0					
ANR	3598922	ArgumentList	r_bin_elf_get_baddr		3598796	1					
ANR	3598923	Argument	r_bin_elf_get_baddr		3598796	0					
ANR	3598924	Identifier	r_bin_elf_get_baddr		3598796	0					
ANR	3598925	ArgumentList	bin		3598796	1					
ANR	3598926	Argument	bin		3598796	0					
ANR	3598927	Identifier	bin		3598796	0					
ANR	3598928	IfStatement	if ( ! init_dynamic_section ( bin ) && ! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin ) )		3598796	4					
ANR	3598929	Condition	! init_dynamic_section ( bin ) && ! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin )	1226:6:37611:37696	3598796	0	True				
ANR	3598930	AndExpression	! init_dynamic_section ( bin ) && ! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin )		3598796	0		&&			
ANR	3598931	UnaryOperationExpression	! init_dynamic_section ( bin )		3598796	0					
ANR	3598932	UnaryOperator	!		3598796	0					
ANR	3598933	CallExpression	init_dynamic_section ( bin )		3598796	1					
ANR	3598934	Callee	init_dynamic_section		3598796	0					
ANR	3598935	Identifier	init_dynamic_section		3598796	0					
ANR	3598936	ArgumentList	bin		3598796	1					
ANR	3598937	Argument	bin		3598796	0					
ANR	3598938	Identifier	bin		3598796	0					
ANR	3598939	AndExpression	! Elf_ ( r_bin_elf_is_static ) ( bin ) && ! is_bin_etrel ( bin )		3598796	1		&&			
ANR	3598940	UnaryOperationExpression	! Elf_ ( r_bin_elf_is_static ) ( bin )		3598796	0					
ANR	3598941	UnaryOperator	!		3598796	0					
ANR	3598942	CallExpression	Elf_ ( r_bin_elf_is_static ) ( bin )		3598796	1					
ANR	3598943	Callee	Elf_ ( r_bin_elf_is_static )		3598796	0					
ANR	3598944	CallExpression	Elf_ ( r_bin_elf_is_static )		3598796	0					
ANR	3598945	Callee	Elf_		3598796	0					
ANR	3598946	Identifier	Elf_		3598796	0					
ANR	3598947	ArgumentList	r_bin_elf_is_static		3598796	1					
ANR	3598948	Argument	r_bin_elf_is_static		3598796	0					
ANR	3598949	Identifier	r_bin_elf_is_static		3598796	0					
ANR	3598950	ArgumentList	bin		3598796	1					
ANR	3598951	Argument	bin		3598796	0					
ANR	3598952	Identifier	bin		3598796	0					
ANR	3598953	UnaryOperationExpression	! is_bin_etrel ( bin )		3598796	1					
ANR	3598954	UnaryOperator	!		3598796	0					
ANR	3598955	CallExpression	is_bin_etrel ( bin )		3598796	1					
ANR	3598956	Callee	is_bin_etrel		3598796	0					
ANR	3598957	Identifier	is_bin_etrel		3598796	0					
ANR	3598958	ArgumentList	bin		3598796	1					
ANR	3598959	Argument	bin		3598796	0					
ANR	3598960	Identifier	bin		3598796	0					
ANR	3598961	CompoundStatement		20:94:621:621	3598796	1					
ANR	3598962	ExpressionStatement	"bprintf ( ""Cannot initialize dynamic section\\n"" )"	1227:3:37704:37751	3598796	0	True				
ANR	3598963	CallExpression	"bprintf ( ""Cannot initialize dynamic section\\n"" )"		3598796	0					
ANR	3598964	Callee	bprintf		3598796	0					
ANR	3598965	Identifier	bprintf		3598796	0					
ANR	3598966	ArgumentList	"""Cannot initialize dynamic section\\n"""		3598796	1					
ANR	3598967	Argument	"""Cannot initialize dynamic section\\n"""		3598796	0					
ANR	3598968	PrimaryExpression	"""Cannot initialize dynamic section\\n"""		3598796	0					
ANR	3598969	ExpressionStatement	bin -> imports_by_ord_size = 0	1231:1:37762:37790	3598796	3	True				
ANR	3598970	AssignmentExpression	bin -> imports_by_ord_size = 0		3598796	0		=			
ANR	3598971	PtrMemberAccess	bin -> imports_by_ord_size		3598796	0					
ANR	3598972	Identifier	bin		3598796	0					
ANR	3598973	Identifier	imports_by_ord_size		3598796	1					
ANR	3598974	PrimaryExpression	0		3598796	1					
ANR	3598975	ExpressionStatement	bin -> imports_by_ord = NULL	1232:1:37793:37819	3598796	4	True				
ANR	3598976	AssignmentExpression	bin -> imports_by_ord = NULL		3598796	0		=			
ANR	3598977	PtrMemberAccess	bin -> imports_by_ord		3598796	0					
ANR	3598978	Identifier	bin		3598796	0					
ANR	3598979	Identifier	imports_by_ord		3598796	1					
ANR	3598980	Identifier	NULL		3598796	1					
ANR	3598981	ExpressionStatement	bin -> symbols_by_ord_size = 0	1233:1:37822:37850	3598796	5	True				
ANR	3598982	AssignmentExpression	bin -> symbols_by_ord_size = 0		3598796	0		=			
ANR	3598983	PtrMemberAccess	bin -> symbols_by_ord_size		3598796	0					
ANR	3598984	Identifier	bin		3598796	0					
ANR	3598985	Identifier	symbols_by_ord_size		3598796	1					
ANR	3598986	PrimaryExpression	0		3598796	1					
ANR	3598987	ExpressionStatement	bin -> symbols_by_ord = NULL	1234:1:37853:37879	3598796	6	True				
ANR	3598988	AssignmentExpression	bin -> symbols_by_ord = NULL		3598796	0		=			
ANR	3598989	PtrMemberAccess	bin -> symbols_by_ord		3598796	0					
ANR	3598990	Identifier	bin		3598796	0					
ANR	3598991	Identifier	symbols_by_ord		3598796	1					
ANR	3598992	Identifier	NULL		3598796	1					
ANR	3598993	ExpressionStatement	bin -> g_sections = Elf_ ( r_bin_elf_get_sections ) ( bin )	1235:1:37882:37934	3598796	7	True				
ANR	3598994	AssignmentExpression	bin -> g_sections = Elf_ ( r_bin_elf_get_sections ) ( bin )		3598796	0		=			
ANR	3598995	PtrMemberAccess	bin -> g_sections		3598796	0					
ANR	3598996	Identifier	bin		3598796	0					
ANR	3598997	Identifier	g_sections		3598796	1					
ANR	3598998	CallExpression	Elf_ ( r_bin_elf_get_sections ) ( bin )		3598796	1					
ANR	3598999	Callee	Elf_ ( r_bin_elf_get_sections )		3598796	0					
ANR	3599000	CallExpression	Elf_ ( r_bin_elf_get_sections )		3598796	0					
ANR	3599001	Callee	Elf_		3598796	0					
ANR	3599002	Identifier	Elf_		3598796	0					
ANR	3599003	ArgumentList	r_bin_elf_get_sections		3598796	1					
ANR	3599004	Argument	r_bin_elf_get_sections		3598796	0					
ANR	3599005	Identifier	r_bin_elf_get_sections		3598796	0					
ANR	3599006	ArgumentList	bin		3598796	1					
ANR	3599007	Argument	bin		3598796	0					
ANR	3599008	Identifier	bin		3598796	0					
ANR	3599009	ExpressionStatement	bin -> boffset = Elf_ ( r_bin_elf_get_boffset ) ( bin )	1236:1:37937:37985	3598796	8	True				
ANR	3599010	AssignmentExpression	bin -> boffset = Elf_ ( r_bin_elf_get_boffset ) ( bin )		3598796	0		=			
ANR	3599011	PtrMemberAccess	bin -> boffset		3598796	0					
ANR	3599012	Identifier	bin		3598796	0					
ANR	3599013	Identifier	boffset		3598796	1					
ANR	3599014	CallExpression	Elf_ ( r_bin_elf_get_boffset ) ( bin )		3598796	1					
ANR	3599015	Callee	Elf_ ( r_bin_elf_get_boffset )		3598796	0					
ANR	3599016	CallExpression	Elf_ ( r_bin_elf_get_boffset )		3598796	0					
ANR	3599017	Callee	Elf_		3598796	0					
ANR	3599018	Identifier	Elf_		3598796	0					
ANR	3599019	ArgumentList	r_bin_elf_get_boffset		3598796	1					
ANR	3599020	Argument	r_bin_elf_get_boffset		3598796	0					
ANR	3599021	Identifier	r_bin_elf_get_boffset		3598796	0					
ANR	3599022	ArgumentList	bin		3598796	1					
ANR	3599023	Argument	bin		3598796	0					
ANR	3599024	Identifier	bin		3598796	0					
ANR	3599025	ExpressionStatement	"sdb_ns_set ( bin -> kv , ""versioninfo"" , store_versioninfo ( bin ) )"	1237:1:37988:38048	3598796	9	True				
ANR	3599026	CallExpression	"sdb_ns_set ( bin -> kv , ""versioninfo"" , store_versioninfo ( bin ) )"		3598796	0					
ANR	3599027	Callee	sdb_ns_set		3598796	0					
ANR	3599028	Identifier	sdb_ns_set		3598796	0					
ANR	3599029	ArgumentList	bin -> kv		3598796	1					
ANR	3599030	Argument	bin -> kv		3598796	0					
ANR	3599031	PtrMemberAccess	bin -> kv		3598796	0					
ANR	3599032	Identifier	bin		3598796	0					
ANR	3599033	Identifier	kv		3598796	1					
ANR	3599034	Argument	"""versioninfo"""		3598796	1					
ANR	3599035	PrimaryExpression	"""versioninfo"""		3598796	0					
ANR	3599036	Argument	store_versioninfo ( bin )		3598796	2					
ANR	3599037	CallExpression	store_versioninfo ( bin )		3598796	0					
ANR	3599038	Callee	store_versioninfo		3598796	0					
ANR	3599039	Identifier	store_versioninfo		3598796	0					
ANR	3599040	ArgumentList	bin		3598796	1					
ANR	3599041	Argument	bin		3598796	0					
ANR	3599042	Identifier	bin		3598796	0					
ANR	3599043	ReturnStatement	return true ;	1238:1:38051:38062	3598796	10	True				
ANR	3599044	Identifier	true		3598796	0					
ANR	3599045	ReturnType	static bool		3598796	1					
ANR	3599046	Identifier	elf_init		3598796	2					
ANR	3599047	ParameterList	ELFOBJ * bin		3598796	3					
ANR	3599048	Parameter	ELFOBJ * bin	1207:21:37064:37074	3598796	0	True				
ANR	3599049	ParameterType	ELFOBJ *		3598796	0					
ANR	3599050	Identifier	bin		3598796	1					
ANR	3599051	CFGEntryNode	ENTRY		3598796		True				
ANR	3599052	CFGExitNode	EXIT		3598796		True				
ANR	3599053	Symbol	init_dynstr		3598796						
ANR	3599054	Symbol	bin		3598796						
ANR	3599055	Symbol	is_bin_etrel		3598796						
ANR	3599056	Symbol	bin -> kv		3598796						
ANR	3599057	Symbol	* bin		3598796						
ANR	3599058	Symbol	bin -> g_sections		3598796						
ANR	3599059	Symbol	bin -> symbols_by_ord		3598796						
ANR	3599060	Symbol	ET_CORE		3598796						
ANR	3599061	Symbol	init_shdr		3598796						
ANR	3599062	Symbol	r_bin_elf_get_baddr		3598796						
ANR	3599063	Symbol	r_bin_elf_is_static		3598796						
ANR	3599064	Symbol	init_dynamic_section		3598796						
ANR	3599065	Symbol	bin -> ehdr		3598796						
ANR	3599066	Symbol	bin -> imports_by_ord_size		3598796						
ANR	3599067	Symbol	init_ehdr		3598796						
ANR	3599068	Symbol	bin -> symbols_by_ord_size		3598796						
ANR	3599069	Symbol	bin -> ehdr . e_type		3598796						
ANR	3599070	Symbol	Elf_		3598796						
ANR	3599071	Symbol	bin -> imports_by_ord		3598796						
ANR	3599072	Symbol	store_versioninfo		3598796						
ANR	3599073	Symbol	r_bin_elf_get_boffset		3598796						
ANR	3599074	Symbol	NULL		3598796						
ANR	3599075	Symbol	r_bin_elf_get_sections		3598796						
ANR	3599076	Symbol	false		3598796						
ANR	3599077	Symbol	init_strtab		3598796						
ANR	3599078	Symbol	bin -> baddr		3598796						
ANR	3599079	Symbol	bin -> boffset		3598796						
ANR	3599080	Symbol	init_phdr		3598796						
ANR	3599081	Symbol	true		3598796						
ANR	3599082	Function	r_bin_elf_get_section_offset	1241:0:38067:38280							
ANR	3599083	FunctionDef	"r_bin_elf_get_section_offset (ELFOBJ * bin , const char * section_name)"		3599082	0					
ANR	3599084	CompoundStatement		1241:79:38146:38280	3599082	0					
ANR	3599085	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , section_name ) ;"	1242:1:38149:38214	3599082	0	True				
ANR	3599086	IdentifierDecl	"* section = get_section_by_name ( bin , section_name )"		3599082	0					
ANR	3599087	IdentifierDeclType	RBinElfSection *		3599082	0					
ANR	3599088	Identifier	section		3599082	1					
ANR	3599089	AssignmentExpression	"* section = get_section_by_name ( bin , section_name )"		3599082	2		=			
ANR	3599090	Identifier	section		3599082	0					
ANR	3599091	CallExpression	"get_section_by_name ( bin , section_name )"		3599082	1					
ANR	3599092	Callee	get_section_by_name		3599082	0					
ANR	3599093	Identifier	get_section_by_name		3599082	0					
ANR	3599094	ArgumentList	bin		3599082	1					
ANR	3599095	Argument	bin		3599082	0					
ANR	3599096	Identifier	bin		3599082	0					
ANR	3599097	Argument	section_name		3599082	1					
ANR	3599098	Identifier	section_name		3599082	0					
ANR	3599099	IfStatement	if ( ! section )		3599082	1					
ANR	3599100	Condition	! section	1243:5:38221:38228	3599082	0	True				
ANR	3599101	UnaryOperationExpression	! section		3599082	0					
ANR	3599102	UnaryOperator	!		3599082	0					
ANR	3599103	Identifier	section		3599082	1					
ANR	3599104	CompoundStatement		3:15:84:84	3599082	1					
ANR	3599105	ReturnStatement	return UT64_MAX ;	1244:2:38235:38250	3599082	0	True				
ANR	3599106	Identifier	UT64_MAX		3599082	0					
ANR	3599107	ReturnStatement	return section -> offset ;	1246:1:38256:38278	3599082	2	True				
ANR	3599108	PtrMemberAccess	section -> offset		3599082	0					
ANR	3599109	Identifier	section		3599082	0					
ANR	3599110	Identifier	offset		3599082	1					
ANR	3599111	ReturnType	ut64 Elf_		3599082	1					
ANR	3599112	Identifier	( r_bin_elf_get_section_offset )		3599082	2					
ANR	3599113	Identifier	r_bin_elf_get_section_offset		3599082	3					
ANR	3599114	ParameterList	"ELFOBJ * bin , const char * section_name"		3599082	4					
ANR	3599115	Parameter	ELFOBJ * bin	1241:40:38107:38117	3599082	0	True				
ANR	3599116	ParameterType	ELFOBJ *		3599082	0					
ANR	3599117	Identifier	bin		3599082	1					
ANR	3599118	Parameter	const char * section_name	1241:53:38120:38143	3599082	1	True				
ANR	3599119	ParameterType	const char *		3599082	0					
ANR	3599120	Identifier	section_name		3599082	1					
ANR	3599121	CFGEntryNode	ENTRY		3599082		True				
ANR	3599122	CFGExitNode	EXIT		3599082		True				
ANR	3599123	Symbol	* section		3599082						
ANR	3599124	Symbol	bin		3599082						
ANR	3599125	Symbol	section_name		3599082						
ANR	3599126	Symbol	get_section_by_name		3599082						
ANR	3599127	Symbol	section		3599082						
ANR	3599128	Symbol	UT64_MAX		3599082						
ANR	3599129	Symbol	section -> offset		3599082						
ANR	3599130	Function	r_bin_elf_get_section_addr	1249:0:38283:38471							
ANR	3599131	FunctionDef	"r_bin_elf_get_section_addr (ELFOBJ * bin , const char * section_name)"		3599130	0					
ANR	3599132	CompoundStatement		1249:77:38360:38471	3599130	0					
ANR	3599133	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , section_name ) ;"	1250:1:38363:38428	3599130	0	True				
ANR	3599134	IdentifierDecl	"* section = get_section_by_name ( bin , section_name )"		3599130	0					
ANR	3599135	IdentifierDeclType	RBinElfSection *		3599130	0					
ANR	3599136	Identifier	section		3599130	1					
ANR	3599137	AssignmentExpression	"* section = get_section_by_name ( bin , section_name )"		3599130	2		=			
ANR	3599138	Identifier	section		3599130	0					
ANR	3599139	CallExpression	"get_section_by_name ( bin , section_name )"		3599130	1					
ANR	3599140	Callee	get_section_by_name		3599130	0					
ANR	3599141	Identifier	get_section_by_name		3599130	0					
ANR	3599142	ArgumentList	bin		3599130	1					
ANR	3599143	Argument	bin		3599130	0					
ANR	3599144	Identifier	bin		3599130	0					
ANR	3599145	Argument	section_name		3599130	1					
ANR	3599146	Identifier	section_name		3599130	0					
ANR	3599147	ReturnStatement	return section ? section -> rva : UT64_MAX ;	1251:1:38431:38469	3599130	1	True				
ANR	3599148	ConditionalExpression	section ? section -> rva : UT64_MAX		3599130	0					
ANR	3599149	Condition	section		3599130	0					
ANR	3599150	Identifier	section		3599130	0					
ANR	3599151	PtrMemberAccess	section -> rva		3599130	1					
ANR	3599152	Identifier	section		3599130	0					
ANR	3599153	Identifier	rva		3599130	1					
ANR	3599154	Identifier	UT64_MAX		3599130	2					
ANR	3599155	ReturnType	ut64 Elf_		3599130	1					
ANR	3599156	Identifier	( r_bin_elf_get_section_addr )		3599130	2					
ANR	3599157	Identifier	r_bin_elf_get_section_addr		3599130	3					
ANR	3599158	ParameterList	"ELFOBJ * bin , const char * section_name"		3599130	4					
ANR	3599159	Parameter	ELFOBJ * bin	1249:38:38321:38331	3599130	0	True				
ANR	3599160	ParameterType	ELFOBJ *		3599130	0					
ANR	3599161	Identifier	bin		3599130	1					
ANR	3599162	Parameter	const char * section_name	1249:51:38334:38357	3599130	1	True				
ANR	3599163	ParameterType	const char *		3599130	0					
ANR	3599164	Identifier	section_name		3599130	1					
ANR	3599165	CFGEntryNode	ENTRY		3599130		True				
ANR	3599166	CFGExitNode	EXIT		3599130		True				
ANR	3599167	Symbol	* section		3599130						
ANR	3599168	Symbol	bin		3599130						
ANR	3599169	Symbol	section_name		3599130						
ANR	3599170	Symbol	section -> rva		3599130						
ANR	3599171	Symbol	get_section_by_name		3599130						
ANR	3599172	Symbol	section		3599130						
ANR	3599173	Symbol	UT64_MAX		3599130						
ANR	3599174	Function	r_bin_elf_get_section_addr_end	1254:0:38474:38682							
ANR	3599175	FunctionDef	"r_bin_elf_get_section_addr_end (ELFOBJ * bin , const char * section_name)"		3599174	0					
ANR	3599176	CompoundStatement		1254:81:38555:38682	3599174	0					
ANR	3599177	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , section_name ) ;"	1255:1:38558:38623	3599174	0	True				
ANR	3599178	IdentifierDecl	"* section = get_section_by_name ( bin , section_name )"		3599174	0					
ANR	3599179	IdentifierDeclType	RBinElfSection *		3599174	0					
ANR	3599180	Identifier	section		3599174	1					
ANR	3599181	AssignmentExpression	"* section = get_section_by_name ( bin , section_name )"		3599174	2		=			
ANR	3599182	Identifier	section		3599174	0					
ANR	3599183	CallExpression	"get_section_by_name ( bin , section_name )"		3599174	1					
ANR	3599184	Callee	get_section_by_name		3599174	0					
ANR	3599185	Identifier	get_section_by_name		3599174	0					
ANR	3599186	ArgumentList	bin		3599174	1					
ANR	3599187	Argument	bin		3599174	0					
ANR	3599188	Identifier	bin		3599174	0					
ANR	3599189	Argument	section_name		3599174	1					
ANR	3599190	Identifier	section_name		3599174	0					
ANR	3599191	ReturnStatement	return section ? section -> rva + section -> size : UT64_MAX ;	1256:1:38626:38680	3599174	1	True				
ANR	3599192	ConditionalExpression	section ? section -> rva + section -> size : UT64_MAX		3599174	0					
ANR	3599193	Condition	section		3599174	0					
ANR	3599194	Identifier	section		3599174	0					
ANR	3599195	AdditiveExpression	section -> rva + section -> size		3599174	1		+			
ANR	3599196	PtrMemberAccess	section -> rva		3599174	0					
ANR	3599197	Identifier	section		3599174	0					
ANR	3599198	Identifier	rva		3599174	1					
ANR	3599199	PtrMemberAccess	section -> size		3599174	1					
ANR	3599200	Identifier	section		3599174	0					
ANR	3599201	Identifier	size		3599174	1					
ANR	3599202	Identifier	UT64_MAX		3599174	2					
ANR	3599203	ReturnType	ut64 Elf_		3599174	1					
ANR	3599204	Identifier	( r_bin_elf_get_section_addr_end )		3599174	2					
ANR	3599205	Identifier	r_bin_elf_get_section_addr_end		3599174	3					
ANR	3599206	ParameterList	"ELFOBJ * bin , const char * section_name"		3599174	4					
ANR	3599207	Parameter	ELFOBJ * bin	1254:42:38516:38526	3599174	0	True				
ANR	3599208	ParameterType	ELFOBJ *		3599174	0					
ANR	3599209	Identifier	bin		3599174	1					
ANR	3599210	Parameter	const char * section_name	1254:55:38529:38552	3599174	1	True				
ANR	3599211	ParameterType	const char *		3599174	0					
ANR	3599212	Identifier	section_name		3599174	1					
ANR	3599213	CFGEntryNode	ENTRY		3599174		True				
ANR	3599214	CFGExitNode	EXIT		3599174		True				
ANR	3599215	Symbol	* section		3599174						
ANR	3599216	Symbol	bin		3599174						
ANR	3599217	Symbol	section_name		3599174						
ANR	3599218	Symbol	section -> rva		3599174						
ANR	3599219	Symbol	get_section_by_name		3599174						
ANR	3599220	Symbol	section -> size		3599174						
ANR	3599221	Symbol	section		3599174						
ANR	3599222	Symbol	UT64_MAX		3599174						
ANR	3599223	ClassDef	ht_rel_t	1264:0:38914:39006							
ANR	3599224	ClassDef	<unnamed>	1265:1:38933:38981							
ANR	3599225	DeclStmt									
ANR	3599226	Decl									r
ANR	3599227	DeclStmt									
ANR	3599228	Decl							bool	bool	is_rela
ANR	3599229	DeclStmt									
ANR	3599230	Decl							int	int	k
ANR	3599231	Function	get_rel_sec	1273:0:39010:39228							
ANR	3599232	FunctionDef	"get_rel_sec (ELFOBJ * bin , const char * * sects)"		3599231	0					
ANR	3599233	CompoundStatement		1273:68:39078:39228	3599231	0					
ANR	3599234	IdentifierDeclStatement	RBinElfSection * rel_sec = NULL ;	1274:1:39081:39111	3599231	0	True				
ANR	3599235	IdentifierDecl	* rel_sec = NULL		3599231	0					
ANR	3599236	IdentifierDeclType	RBinElfSection *		3599231	0					
ANR	3599237	Identifier	rel_sec		3599231	1					
ANR	3599238	AssignmentExpression	* rel_sec = NULL		3599231	2		=			
ANR	3599239	Identifier	NULL		3599231	0					
ANR	3599240	Identifier	NULL		3599231	1					
ANR	3599241	IdentifierDeclStatement	int j = 0 ;	1275:1:39114:39123	3599231	1	True				
ANR	3599242	IdentifierDecl	j = 0		3599231	0					
ANR	3599243	IdentifierDeclType	int		3599231	0					
ANR	3599244	Identifier	j		3599231	1					
ANR	3599245	AssignmentExpression	j = 0		3599231	2		=			
ANR	3599246	Identifier	j		3599231	0					
ANR	3599247	PrimaryExpression	0		3599231	1					
ANR	3599248	WhileStatement	while ( ! rel_sec && sects [ j ] )		3599231	2					
ANR	3599249	Condition	! rel_sec && sects [ j ]	1276:8:39133:39152	3599231	0	True				
ANR	3599250	AndExpression	! rel_sec && sects [ j ]		3599231	0		&&			
ANR	3599251	UnaryOperationExpression	! rel_sec		3599231	0					
ANR	3599252	UnaryOperator	!		3599231	0					
ANR	3599253	Identifier	rel_sec		3599231	1					
ANR	3599254	ArrayIndexing	sects [ j ]		3599231	1					
ANR	3599255	Identifier	sects		3599231	0					
ANR	3599256	Identifier	j		3599231	1					
ANR	3599257	CompoundStatement		4:30:76:76	3599231	1					
ANR	3599258	ExpressionStatement	"rel_sec = get_section_by_name ( bin , sects [ j ++ ] )"	1277:2:39159:39206	3599231	0	True				
ANR	3599259	AssignmentExpression	"rel_sec = get_section_by_name ( bin , sects [ j ++ ] )"		3599231	0		=			
ANR	3599260	Identifier	rel_sec		3599231	0					
ANR	3599261	CallExpression	"get_section_by_name ( bin , sects [ j ++ ] )"		3599231	1					
ANR	3599262	Callee	get_section_by_name		3599231	0					
ANR	3599263	Identifier	get_section_by_name		3599231	0					
ANR	3599264	ArgumentList	bin		3599231	1					
ANR	3599265	Argument	bin		3599231	0					
ANR	3599266	Identifier	bin		3599231	0					
ANR	3599267	Argument	sects [ j ++ ]		3599231	1					
ANR	3599268	ArrayIndexing	sects [ j ++ ]		3599231	0					
ANR	3599269	Identifier	sects		3599231	0					
ANR	3599270	PostIncDecOperationExpression	j ++		3599231	1					
ANR	3599271	Identifier	j		3599231	0					
ANR	3599272	IncDec	++		3599231	1					
ANR	3599273	ReturnStatement	return rel_sec ;	1279:1:39212:39226	3599231	3	True				
ANR	3599274	Identifier	rel_sec		3599231	0					
ANR	3599275	ReturnType	static RBinElfSection *		3599231	1					
ANR	3599276	Identifier	get_rel_sec		3599231	2					
ANR	3599277	ParameterList	"ELFOBJ * bin , const char * * sects"		3599231	3					
ANR	3599278	Parameter	ELFOBJ * bin	1273:35:39045:39055	3599231	0	True				
ANR	3599279	ParameterType	ELFOBJ *		3599231	0					
ANR	3599280	Identifier	bin		3599231	1					
ANR	3599281	Parameter	const char * * sects	1273:48:39058:39075	3599231	1	True				
ANR	3599282	ParameterType	const char * *		3599231	0					
ANR	3599283	Identifier	sects		3599231	1					
ANR	3599284	CFGEntryNode	ENTRY		3599231		True				
ANR	3599285	CFGExitNode	EXIT		3599231		True				
ANR	3599286	Symbol	sects		3599231						
ANR	3599287	Symbol	NULL		3599231						
ANR	3599288	Symbol	* j		3599231						
ANR	3599289	Symbol	rel_sec		3599231						
ANR	3599290	Symbol	bin		3599231						
ANR	3599291	Symbol	get_section_by_name		3599231						
ANR	3599292	Symbol	j		3599231						
ANR	3599293	Symbol	* sects		3599231						
ANR	3599294	DeclStmt									
ANR	3599295	Decl							int	int	l
ANR	3599296	DeclStmt									
ANR	3599297	Decl							int	int	l
ANR	3599298	Function	read_ht_rel	1295:0:39560:39882							
ANR	3599299	FunctionDef	"read_ht_rel (ELFOBJ * bin , ut8 * rl , int k)"		3599298	0					
ANR	3599300	CompoundStatement		1295:65:39625:39882	3599298	0					
ANR	3599301	Statement	struct	1296:1:39628:39633	3599298	0	True				
ANR	3599302	Statement	ht_rel_t	1296:8:39635:39642	3599298	1	True				
ANR	3599303	Statement	*	1296:17:39644:39644	3599298	2	True				
ANR	3599304	Statement	rel	1296:18:39645:39647	3599298	3	True				
ANR	3599305	Statement	=	1296:22:39649:39649	3599298	4	True				
ANR	3599306	Statement	R_NEW0	1296:24:39651:39656	3599298	5	True				
ANR	3599307	Statement	(	1296:31:39658:39658	3599298	6	True				
ANR	3599308	Statement	struct	1296:32:39659:39664	3599298	7	True				
ANR	3599309	Statement	ht_rel_t	1296:39:39666:39673	3599298	8	True				
ANR	3599310	Statement	)	1296:47:39674:39674	3599298	9	True				
ANR	3599311	ExpressionStatement		1296:48:39675:39675	3599298	10	True				
ANR	3599312	IfStatement	if ( ! rel )		3599298	11					
ANR	3599313	Condition	! rel	1297:5:39682:39685	3599298	0	True				
ANR	3599314	UnaryOperationExpression	! rel		3599298	0					
ANR	3599315	UnaryOperator	!		3599298	0					
ANR	3599316	Identifier	rel		3599298	1					
ANR	3599317	CompoundStatement		3:11:62:62	3599298	1					
ANR	3599318	ReturnStatement	return NULL ;	1298:2:39692:39703	3599298	0	True				
ANR	3599319	Identifier	NULL		3599298	0					
ANR	3599320	ExpressionStatement	rel -> is_rela = bin -> is_rela == DT_RELA	1301:1:39710:39748	3599298	12	True				
ANR	3599321	AssignmentExpression	rel -> is_rela = bin -> is_rela == DT_RELA		3599298	0		=			
ANR	3599322	PtrMemberAccess	rel -> is_rela		3599298	0					
ANR	3599323	Identifier	rel		3599298	0					
ANR	3599324	Identifier	is_rela		3599298	1					
ANR	3599325	EqualityExpression	bin -> is_rela == DT_RELA		3599298	1		==			
ANR	3599326	PtrMemberAccess	bin -> is_rela		3599298	0					
ANR	3599327	Identifier	bin		3599298	0					
ANR	3599328	Identifier	is_rela		3599298	1					
ANR	3599329	Identifier	DT_RELA		3599298	1					
ANR	3599330	ExpressionStatement	rel -> k = k	1302:1:39751:39761	3599298	13	True				
ANR	3599331	AssignmentExpression	rel -> k = k		3599298	0		=			
ANR	3599332	PtrMemberAccess	rel -> k		3599298	0					
ANR	3599333	Identifier	rel		3599298	0					
ANR	3599334	Identifier	k		3599298	1					
ANR	3599335	Identifier	k		3599298	1					
ANR	3599336	IfStatement	if ( rel -> is_rela )		3599298	14					
ANR	3599337	Condition	rel -> is_rela	1303:5:39768:39779	3599298	0	True				
ANR	3599338	PtrMemberAccess	rel -> is_rela		3599298	0					
ANR	3599339	Identifier	rel		3599298	0					
ANR	3599340	Identifier	is_rela		3599298	1					
ANR	3599341	CompoundStatement		9:19:156:156	3599298	1					
ANR	3599342	ExpressionStatement	"read_rela ( bin , & rel -> r . rela , rl )"	1304:2:39786:39819	3599298	0	True				
ANR	3599343	CallExpression	"read_rela ( bin , & rel -> r . rela , rl )"		3599298	0					
ANR	3599344	Callee	read_rela		3599298	0					
ANR	3599345	Identifier	read_rela		3599298	0					
ANR	3599346	ArgumentList	bin		3599298	1					
ANR	3599347	Argument	bin		3599298	0					
ANR	3599348	Identifier	bin		3599298	0					
ANR	3599349	Argument	& rel -> r . rela		3599298	1					
ANR	3599350	UnaryOperationExpression	& rel -> r . rela		3599298	0					
ANR	3599351	UnaryOperator	&		3599298	0					
ANR	3599352	MemberAccess	rel -> r . rela		3599298	1					
ANR	3599353	PtrMemberAccess	rel -> r		3599298	0					
ANR	3599354	Identifier	rel		3599298	0					
ANR	3599355	Identifier	r		3599298	1					
ANR	3599356	Identifier	rela		3599298	1					
ANR	3599357	Argument	rl		3599298	2					
ANR	3599358	Identifier	rl		3599298	0					
ANR	3599359	ElseStatement	else		3599298	0					
ANR	3599360	CompoundStatement		11:8:203:203	3599298	0					
ANR	3599361	ExpressionStatement	"read_rel ( bin , & rel -> r . rel , rl )"	1306:2:39833:39864	3599298	0	True				
ANR	3599362	CallExpression	"read_rel ( bin , & rel -> r . rel , rl )"		3599298	0					
ANR	3599363	Callee	read_rel		3599298	0					
ANR	3599364	Identifier	read_rel		3599298	0					
ANR	3599365	ArgumentList	bin		3599298	1					
ANR	3599366	Argument	bin		3599298	0					
ANR	3599367	Identifier	bin		3599298	0					
ANR	3599368	Argument	& rel -> r . rel		3599298	1					
ANR	3599369	UnaryOperationExpression	& rel -> r . rel		3599298	0					
ANR	3599370	UnaryOperator	&		3599298	0					
ANR	3599371	MemberAccess	rel -> r . rel		3599298	1					
ANR	3599372	PtrMemberAccess	rel -> r		3599298	0					
ANR	3599373	Identifier	rel		3599298	0					
ANR	3599374	Identifier	r		3599298	1					
ANR	3599375	Identifier	rel		3599298	1					
ANR	3599376	Argument	rl		3599298	2					
ANR	3599377	Identifier	rl		3599298	0					
ANR	3599378	ReturnStatement	return rel ;	1308:1:39870:39880	3599298	15	True				
ANR	3599379	Identifier	rel		3599298	0					
ANR	3599380	ReturnType	static struct ht_rel_t *		3599298	1					
ANR	3599381	Identifier	read_ht_rel		3599298	2					
ANR	3599382	ParameterList	"ELFOBJ * bin , ut8 * rl , int k"		3599298	3					
ANR	3599383	Parameter	ELFOBJ * bin	1295:36:39596:39606	3599298	0	True				
ANR	3599384	ParameterType	ELFOBJ *		3599298	0					
ANR	3599385	Identifier	bin		3599298	1					
ANR	3599386	Parameter	ut8 * rl	1295:49:39609:39615	3599298	1	True				
ANR	3599387	ParameterType	ut8 *		3599298	0					
ANR	3599388	Identifier	rl		3599298	1					
ANR	3599389	Parameter	int k	1295:58:39618:39622	3599298	2	True				
ANR	3599390	ParameterType	int		3599298	0					
ANR	3599391	Identifier	k		3599298	1					
ANR	3599392	CFGEntryNode	ENTRY		3599298		True				
ANR	3599393	CFGExitNode	EXIT		3599298		True				
ANR	3599394	Symbol	NULL		3599298						
ANR	3599395	Symbol	* rel		3599298						
ANR	3599396	Symbol	& rel -> r . rela		3599298						
ANR	3599397	Symbol	bin		3599298						
ANR	3599398	Symbol	& rel -> r . rel		3599298						
ANR	3599399	Symbol	DT_RELA		3599298						
ANR	3599400	Symbol	bin -> is_rela		3599298						
ANR	3599401	Symbol	k		3599298						
ANR	3599402	Symbol	* bin		3599298						
ANR	3599403	Symbol	rel -> is_rela		3599298						
ANR	3599404	Symbol	rel -> r		3599298						
ANR	3599405	Symbol	& rel -> r		3599298						
ANR	3599406	Symbol	rel		3599298						
ANR	3599407	Symbol	rl		3599298						
ANR	3599408	Symbol	rel -> k		3599298						
ANR	3599409	Function	rel_cache_free	1311:0:39885:39945							
ANR	3599410	FunctionDef	rel_cache_free (HtUPKv * kv)		3599409	0					
ANR	3599411	CompoundStatement		1311:39:39924:39945	3599409	0					
ANR	3599412	ExpressionStatement	free ( kv -> value )	1312:1:39927:39943	3599409	0	True				
ANR	3599413	CallExpression	free ( kv -> value )		3599409	0					
ANR	3599414	Callee	free		3599409	0					
ANR	3599415	Identifier	free		3599409	0					
ANR	3599416	ArgumentList	kv -> value		3599409	1					
ANR	3599417	Argument	kv -> value		3599409	0					
ANR	3599418	PtrMemberAccess	kv -> value		3599409	0					
ANR	3599419	Identifier	kv		3599409	0					
ANR	3599420	Identifier	value		3599409	1					
ANR	3599421	ReturnType	static void		3599409	1					
ANR	3599422	Identifier	rel_cache_free		3599409	2					
ANR	3599423	ParameterList	HtUPKv * kv		3599409	3					
ANR	3599424	Parameter	HtUPKv * kv	1311:27:39912:39921	3599409	0	True				
ANR	3599425	ParameterType	HtUPKv *		3599409	0					
ANR	3599426	Identifier	kv		3599409	1					
ANR	3599427	CFGEntryNode	ENTRY		3599409		True				
ANR	3599428	CFGExitNode	EXIT		3599409		True				
ANR	3599429	Symbol	* kv		3599409						
ANR	3599430	Symbol	kv -> value		3599409						
ANR	3599431	Symbol	kv		3599409						
ANR	3599432	Function	rel_cache_new	1315:0:39948:41198							
ANR	3599433	FunctionDef	rel_cache_new (ELFOBJ * bin)		3599432	0					
ANR	3599434	CompoundStatement		1315:40:39988:41198	3599432	0					
ANR	3599435	IdentifierDeclStatement	ut8 rl [ MAX_REL_RELA_SZ ] = { 0 } ;	1316:1:39991:40022	3599432	0	True				
ANR	3599436	IdentifierDecl	rl [ MAX_REL_RELA_SZ ] = { 0 }		3599432	0					
ANR	3599437	IdentifierDeclType	ut8 [ MAX_REL_RELA_SZ ]		3599432	0					
ANR	3599438	Identifier	rl		3599432	1					
ANR	3599439	Identifier	MAX_REL_RELA_SZ		3599432	2					
ANR	3599440	AssignmentExpression	rl [ MAX_REL_RELA_SZ ] = { 0 }		3599432	3		=			
ANR	3599441	Identifier	MAX_REL_RELA_SZ		3599432	0					
ANR	3599442	InitializerList	0		3599432	1					
ANR	3599443	PrimaryExpression	0		3599432	0					
ANR	3599444	IdentifierDeclStatement	RBinElfSection * rel_sec = NULL ;	1317:1:40025:40055	3599432	1	True				
ANR	3599445	IdentifierDecl	* rel_sec = NULL		3599432	0					
ANR	3599446	IdentifierDeclType	RBinElfSection *		3599432	0					
ANR	3599447	Identifier	rel_sec		3599432	1					
ANR	3599448	AssignmentExpression	* rel_sec = NULL		3599432	2		=			
ANR	3599449	Identifier	NULL		3599432	0					
ANR	3599450	Identifier	NULL		3599432	1					
ANR	3599451	IdentifierDeclStatement	"int j , k , tsize , nrel ;"	1318:1:40058:40079	3599432	2	True				
ANR	3599452	IdentifierDecl	j		3599432	0					
ANR	3599453	IdentifierDeclType	int		3599432	0					
ANR	3599454	Identifier	j		3599432	1					
ANR	3599455	IdentifierDecl	k		3599432	1					
ANR	3599456	IdentifierDeclType	int		3599432	0					
ANR	3599457	Identifier	k		3599432	1					
ANR	3599458	IdentifierDecl	tsize		3599432	2					
ANR	3599459	IdentifierDeclType	int		3599432	0					
ANR	3599460	Identifier	tsize		3599432	1					
ANR	3599461	IdentifierDecl	nrel		3599432	3					
ANR	3599462	IdentifierDeclType	int		3599432	0					
ANR	3599463	Identifier	nrel		3599432	1					
ANR	3599464	IdentifierDeclStatement	"const char * rel_sect [ ] = { "".rel.plt"" , "".rela.plt"" , "".rel.dyn"" , "".rela.dyn"" , NULL } ;"	1319:1:40082:40165	3599432	3	True				
ANR	3599465	IdentifierDecl	"* rel_sect [ ] = { "".rel.plt"" , "".rela.plt"" , "".rel.dyn"" , "".rela.dyn"" , NULL }"		3599432	0					
ANR	3599466	IdentifierDeclType	const char * [ ]		3599432	0					
ANR	3599467	Identifier	rel_sect		3599432	1					
ANR	3599468	AssignmentExpression	"* rel_sect [ ] = { "".rel.plt"" , "".rela.plt"" , "".rel.dyn"" , "".rela.dyn"" , NULL }"		3599432	2		=			
ANR	3599469	Identifier	rel_sect		3599432	0					
ANR	3599470	InitializerList	""".rel.plt"""		3599432	1					
ANR	3599471	PrimaryExpression	""".rel.plt"""		3599432	0					
ANR	3599472	PrimaryExpression	""".rela.plt"""		3599432	1					
ANR	3599473	PrimaryExpression	""".rel.dyn"""		3599432	2					
ANR	3599474	PrimaryExpression	""".rela.dyn"""		3599432	3					
ANR	3599475	Identifier	NULL		3599432	4					
ANR	3599476	IdentifierDeclStatement	"const char * rela_sect [ ] = { "".rela.plt"" , "".rel.plt"" , "".rela.dyn"" , "".rel.dyn"" , NULL } ;"	1320:1:40168:40252	3599432	4	True				
ANR	3599477	IdentifierDecl	"* rela_sect [ ] = { "".rela.plt"" , "".rel.plt"" , "".rela.dyn"" , "".rel.dyn"" , NULL }"		3599432	0					
ANR	3599478	IdentifierDeclType	const char * [ ]		3599432	0					
ANR	3599479	Identifier	rela_sect		3599432	1					
ANR	3599480	AssignmentExpression	"* rela_sect [ ] = { "".rela.plt"" , "".rel.plt"" , "".rela.dyn"" , "".rel.dyn"" , NULL }"		3599432	2		=			
ANR	3599481	Identifier	rela_sect		3599432	0					
ANR	3599482	InitializerList	""".rela.plt"""		3599432	1					
ANR	3599483	PrimaryExpression	""".rela.plt"""		3599432	0					
ANR	3599484	PrimaryExpression	""".rel.plt"""		3599432	1					
ANR	3599485	PrimaryExpression	""".rela.dyn"""		3599432	2					
ANR	3599486	PrimaryExpression	""".rel.dyn"""		3599432	3					
ANR	3599487	Identifier	NULL		3599432	4					
ANR	3599488	IdentifierDeclStatement	HtUP * rel_cache ;	1321:1:40255:40270	3599432	5	True				
ANR	3599489	IdentifierDecl	* rel_cache		3599432	0					
ANR	3599490	IdentifierDeclType	HtUP *		3599432	0					
ANR	3599491	Identifier	rel_cache		3599432	1					
ANR	3599492	IfStatement	if ( ( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr )		3599432	6					
ANR	3599493	Condition	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr	1323:5:40278:40319	3599432	0	True				
ANR	3599494	AndExpression	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr		3599432	0		&&			
ANR	3599495	OrExpression	! bin -> shdr || ! bin -> strtab		3599432	0		||			
ANR	3599496	UnaryOperationExpression	! bin -> shdr		3599432	0					
ANR	3599497	UnaryOperator	!		3599432	0					
ANR	3599498	PtrMemberAccess	bin -> shdr		3599432	1					
ANR	3599499	Identifier	bin		3599432	0					
ANR	3599500	Identifier	shdr		3599432	1					
ANR	3599501	UnaryOperationExpression	! bin -> strtab		3599432	1					
ANR	3599502	UnaryOperator	!		3599432	0					
ANR	3599503	PtrMemberAccess	bin -> strtab		3599432	1					
ANR	3599504	Identifier	bin		3599432	0					
ANR	3599505	Identifier	strtab		3599432	1					
ANR	3599506	UnaryOperationExpression	! bin -> phdr		3599432	1					
ANR	3599507	UnaryOperator	!		3599432	0					
ANR	3599508	PtrMemberAccess	bin -> phdr		3599432	1					
ANR	3599509	Identifier	bin		3599432	0					
ANR	3599510	Identifier	phdr		3599432	1					
ANR	3599511	CompoundStatement		9:49:333:333	3599432	1					
ANR	3599512	ReturnStatement	return NULL ;	1324:2:40326:40337	3599432	0	True				
ANR	3599513	Identifier	NULL		3599432	0					
ANR	3599514	IfStatement	if ( bin -> is_rela == DT_REL )		3599432	7					
ANR	3599515	Condition	bin -> is_rela == DT_REL	1327:5:40348:40369	3599432	0	True				
ANR	3599516	EqualityExpression	bin -> is_rela == DT_REL		3599432	0		==			
ANR	3599517	PtrMemberAccess	bin -> is_rela		3599432	0					
ANR	3599518	Identifier	bin		3599432	0					
ANR	3599519	Identifier	is_rela		3599432	1					
ANR	3599520	Identifier	DT_REL		3599432	1					
ANR	3599521	CompoundStatement		13:29:383:383	3599432	1					
ANR	3599522	ExpressionStatement	"rel_sec = get_rel_sec ( bin , rel_sect )"	1328:2:40376:40413	3599432	0	True				
ANR	3599523	AssignmentExpression	"rel_sec = get_rel_sec ( bin , rel_sect )"		3599432	0		=			
ANR	3599524	Identifier	rel_sec		3599432	0					
ANR	3599525	CallExpression	"get_rel_sec ( bin , rel_sect )"		3599432	1					
ANR	3599526	Callee	get_rel_sec		3599432	0					
ANR	3599527	Identifier	get_rel_sec		3599432	0					
ANR	3599528	ArgumentList	bin		3599432	1					
ANR	3599529	Argument	bin		3599432	0					
ANR	3599530	Identifier	bin		3599432	0					
ANR	3599531	Argument	rel_sect		3599432	1					
ANR	3599532	Identifier	rel_sect		3599432	0					
ANR	3599533	ExpressionStatement	tsize = sizeof ( Elf_ ( Rel ) )	1329:2:40417:40443	3599432	1	True				
ANR	3599534	AssignmentExpression	tsize = sizeof ( Elf_ ( Rel ) )		3599432	0		=			
ANR	3599535	Identifier	tsize		3599432	0					
ANR	3599536	SizeofExpression	sizeof ( Elf_ ( Rel ) )		3599432	1					
ANR	3599537	Sizeof	sizeof		3599432	0					
ANR	3599538	CallExpression	Elf_ ( Rel )		3599432	1					
ANR	3599539	Callee	Elf_		3599432	0					
ANR	3599540	Identifier	Elf_		3599432	0					
ANR	3599541	ArgumentList	Rel		3599432	1					
ANR	3599542	Argument	Rel		3599432	0					
ANR	3599543	Identifier	Rel		3599432	0					
ANR	3599544	ElseStatement	else		3599432	0					
ANR	3599545	IfStatement	if ( bin -> is_rela == DT_RELA )		3599432	0					
ANR	3599546	Condition	bin -> is_rela == DT_RELA	1330:12:40457:40479	3599432	0	True				
ANR	3599547	EqualityExpression	bin -> is_rela == DT_RELA		3599432	0		==			
ANR	3599548	PtrMemberAccess	bin -> is_rela		3599432	0					
ANR	3599549	Identifier	bin		3599432	0					
ANR	3599550	Identifier	is_rela		3599432	1					
ANR	3599551	Identifier	DT_RELA		3599432	1					
ANR	3599552	CompoundStatement		16:37:493:493	3599432	1					
ANR	3599553	ExpressionStatement	"rel_sec = get_rel_sec ( bin , rela_sect )"	1331:2:40486:40524	3599432	0	True				
ANR	3599554	AssignmentExpression	"rel_sec = get_rel_sec ( bin , rela_sect )"		3599432	0		=			
ANR	3599555	Identifier	rel_sec		3599432	0					
ANR	3599556	CallExpression	"get_rel_sec ( bin , rela_sect )"		3599432	1					
ANR	3599557	Callee	get_rel_sec		3599432	0					
ANR	3599558	Identifier	get_rel_sec		3599432	0					
ANR	3599559	ArgumentList	bin		3599432	1					
ANR	3599560	Argument	bin		3599432	0					
ANR	3599561	Identifier	bin		3599432	0					
ANR	3599562	Argument	rela_sect		3599432	1					
ANR	3599563	Identifier	rela_sect		3599432	0					
ANR	3599564	ExpressionStatement	tsize = sizeof ( Elf_ ( Rela ) )	1332:2:40528:40555	3599432	1	True				
ANR	3599565	AssignmentExpression	tsize = sizeof ( Elf_ ( Rela ) )		3599432	0		=			
ANR	3599566	Identifier	tsize		3599432	0					
ANR	3599567	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3599432	1					
ANR	3599568	Sizeof	sizeof		3599432	0					
ANR	3599569	CallExpression	Elf_ ( Rela )		3599432	1					
ANR	3599570	Callee	Elf_		3599432	0					
ANR	3599571	Identifier	Elf_		3599432	0					
ANR	3599572	ArgumentList	Rela		3599432	1					
ANR	3599573	Argument	Rela		3599432	0					
ANR	3599574	Identifier	Rela		3599432	0					
ANR	3599575	IfStatement	if ( ! rel_sec || rel_sec -> size < 1 )		3599432	8					
ANR	3599576	Condition	! rel_sec || rel_sec -> size < 1	1334:5:40565:40593	3599432	0	True				
ANR	3599577	OrExpression	! rel_sec || rel_sec -> size < 1		3599432	0		||			
ANR	3599578	UnaryOperationExpression	! rel_sec		3599432	0					
ANR	3599579	UnaryOperator	!		3599432	0					
ANR	3599580	Identifier	rel_sec		3599432	1					
ANR	3599581	RelationalExpression	rel_sec -> size < 1		3599432	1		<			
ANR	3599582	PtrMemberAccess	rel_sec -> size		3599432	0					
ANR	3599583	Identifier	rel_sec		3599432	0					
ANR	3599584	Identifier	size		3599432	1					
ANR	3599585	PrimaryExpression	1		3599432	1					
ANR	3599586	CompoundStatement		20:36:607:607	3599432	1					
ANR	3599587	ReturnStatement	return NULL ;	1335:2:40600:40611	3599432	0	True				
ANR	3599588	Identifier	NULL		3599432	0					
ANR	3599589	ExpressionStatement	nrel = ( ut32 ) ( ( int ) rel_sec -> size / ( int ) tsize )	1338:1:40618:40665	3599432	9	True				
ANR	3599590	AssignmentExpression	nrel = ( ut32 ) ( ( int ) rel_sec -> size / ( int ) tsize )		3599432	0		=			
ANR	3599591	Identifier	nrel		3599432	0					
ANR	3599592	CastExpression	( ut32 ) ( ( int ) rel_sec -> size / ( int ) tsize )		3599432	1					
ANR	3599593	CastTarget	ut32		3599432	0					
ANR	3599594	MultiplicativeExpression	( int ) rel_sec -> size / ( int ) tsize		3599432	1		/			
ANR	3599595	CastExpression	( int ) rel_sec -> size		3599432	0					
ANR	3599596	CastTarget	int		3599432	0					
ANR	3599597	PtrMemberAccess	rel_sec -> size		3599432	1					
ANR	3599598	Identifier	rel_sec		3599432	0					
ANR	3599599	Identifier	size		3599432	1					
ANR	3599600	CastExpression	( int ) tsize		3599432	1					
ANR	3599601	CastTarget	int		3599432	0					
ANR	3599602	Identifier	tsize		3599432	1					
ANR	3599603	IfStatement	if ( nrel < 1 )		3599432	10					
ANR	3599604	Condition	nrel < 1	1339:5:40672:40679	3599432	0	True				
ANR	3599605	RelationalExpression	nrel < 1		3599432	0		<			
ANR	3599606	Identifier	nrel		3599432	0					
ANR	3599607	PrimaryExpression	1		3599432	1					
ANR	3599608	CompoundStatement		25:15:693:693	3599432	1					
ANR	3599609	ReturnStatement	return NULL ;	1340:2:40686:40697	3599432	0	True				
ANR	3599610	Identifier	NULL		3599432	0					
ANR	3599611	IdentifierDeclStatement	"const int htsize = R_MIN ( nrel , 1024 ) ;"	1343:1:40704:40741	3599432	11	True				
ANR	3599612	IdentifierDecl	"htsize = R_MIN ( nrel , 1024 )"		3599432	0					
ANR	3599613	IdentifierDeclType	const int		3599432	0					
ANR	3599614	Identifier	htsize		3599432	1					
ANR	3599615	AssignmentExpression	"htsize = R_MIN ( nrel , 1024 )"		3599432	2		=			
ANR	3599616	Identifier	htsize		3599432	0					
ANR	3599617	CallExpression	"R_MIN ( nrel , 1024 )"		3599432	1					
ANR	3599618	Callee	R_MIN		3599432	0					
ANR	3599619	Identifier	R_MIN		3599432	0					
ANR	3599620	ArgumentList	nrel		3599432	1					
ANR	3599621	Argument	nrel		3599432	0					
ANR	3599622	Identifier	nrel		3599432	0					
ANR	3599623	Argument	1024		3599432	1					
ANR	3599624	PrimaryExpression	1024		3599432	0					
ANR	3599625	ExpressionStatement	"rel_cache = ht_up_new_size ( htsize , NULL , rel_cache_free , NULL )"	1344:1:40744:40807	3599432	12	True				
ANR	3599626	AssignmentExpression	"rel_cache = ht_up_new_size ( htsize , NULL , rel_cache_free , NULL )"		3599432	0		=			
ANR	3599627	Identifier	rel_cache		3599432	0					
ANR	3599628	CallExpression	"ht_up_new_size ( htsize , NULL , rel_cache_free , NULL )"		3599432	1					
ANR	3599629	Callee	ht_up_new_size		3599432	0					
ANR	3599630	Identifier	ht_up_new_size		3599432	0					
ANR	3599631	ArgumentList	htsize		3599432	1					
ANR	3599632	Argument	htsize		3599432	0					
ANR	3599633	Identifier	htsize		3599432	0					
ANR	3599634	Argument	NULL		3599432	1					
ANR	3599635	Identifier	NULL		3599432	0					
ANR	3599636	Argument	rel_cache_free		3599432	2					
ANR	3599637	Identifier	rel_cache_free		3599432	0					
ANR	3599638	Argument	NULL		3599432	3					
ANR	3599639	Identifier	NULL		3599432	0					
ANR	3599640	ForStatement	"for ( j = k = 0 ; j < rel_sec -> size && k < nrel ; j += tsize , k ++ )"		3599432	13					
ANR	3599641	ForInit	j = k = 0 ;	1346:6:40816:40825	3599432	0	True				
ANR	3599642	AssignmentExpression	j = k = 0		3599432	0		=			
ANR	3599643	Identifier	j		3599432	0					
ANR	3599644	AssignmentExpression	k = 0		3599432	1		=			
ANR	3599645	Identifier	k		3599432	0					
ANR	3599646	PrimaryExpression	0		3599432	1					
ANR	3599647	Condition	j < rel_sec -> size && k < nrel	1346:17:40827:40855	3599432	1	True				
ANR	3599648	AndExpression	j < rel_sec -> size && k < nrel		3599432	0		&&			
ANR	3599649	RelationalExpression	j < rel_sec -> size		3599432	0		<			
ANR	3599650	Identifier	j		3599432	0					
ANR	3599651	PtrMemberAccess	rel_sec -> size		3599432	1					
ANR	3599652	Identifier	rel_sec		3599432	0					
ANR	3599653	Identifier	size		3599432	1					
ANR	3599654	RelationalExpression	k < nrel		3599432	1		<			
ANR	3599655	Identifier	k		3599432	0					
ANR	3599656	Identifier	nrel		3599432	1					
ANR	3599657	Expression	"j += tsize , k ++"	1346:48:40858:40872	3599432	2	True				
ANR	3599658	AssignmentExpression	j += tsize		3599432	0		+=			
ANR	3599659	Identifier	j		3599432	0					
ANR	3599660	Identifier	tsize		3599432	1					
ANR	3599661	PostIncDecOperationExpression	k ++		3599432	1					
ANR	3599662	Identifier	k		3599432	0					
ANR	3599663	IncDec	++		3599432	1					
ANR	3599664	CompoundStatement		37:2:994:1041	3599432	3					
ANR	3599665	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize ) ;"	1347:2:40879:40943	3599432	0	True				
ANR	3599666	IdentifierDecl	"len = r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize )"		3599432	0					
ANR	3599667	IdentifierDeclType	int		3599432	0					
ANR	3599668	Identifier	len		3599432	1					
ANR	3599669	AssignmentExpression	"len = r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize )"		3599432	2		=			
ANR	3599670	Identifier	len		3599432	0					
ANR	3599671	CallExpression	"r_buf_read_at ( bin -> b , rel_sec -> offset + j , rl , tsize )"		3599432	1					
ANR	3599672	Callee	r_buf_read_at		3599432	0					
ANR	3599673	Identifier	r_buf_read_at		3599432	0					
ANR	3599674	ArgumentList	bin -> b		3599432	1					
ANR	3599675	Argument	bin -> b		3599432	0					
ANR	3599676	PtrMemberAccess	bin -> b		3599432	0					
ANR	3599677	Identifier	bin		3599432	0					
ANR	3599678	Identifier	b		3599432	1					
ANR	3599679	Argument	rel_sec -> offset + j		3599432	1					
ANR	3599680	AdditiveExpression	rel_sec -> offset + j		3599432	0		+			
ANR	3599681	PtrMemberAccess	rel_sec -> offset		3599432	0					
ANR	3599682	Identifier	rel_sec		3599432	0					
ANR	3599683	Identifier	offset		3599432	1					
ANR	3599684	Identifier	j		3599432	1					
ANR	3599685	Argument	rl		3599432	2					
ANR	3599686	Identifier	rl		3599432	0					
ANR	3599687	Argument	tsize		3599432	3					
ANR	3599688	Identifier	tsize		3599432	0					
ANR	3599689	IfStatement	if ( len != tsize )		3599432	1					
ANR	3599690	Condition	len != tsize	1348:6:40951:40962	3599432	0	True				
ANR	3599691	EqualityExpression	len != tsize		3599432	0		!=			
ANR	3599692	Identifier	len		3599432	0					
ANR	3599693	Identifier	tsize		3599432	1					
ANR	3599694	CompoundStatement		34:20:976:976	3599432	1					
ANR	3599695	BreakStatement	break ;	1349:3:40970:40975	3599432	0	True				
ANR	3599696	IdentifierDeclStatement	"struct ht_rel_t * rel = read_ht_rel ( bin , rl , k ) ;"	1351:2:40983:41030	3599432	2	True				
ANR	3599697	IdentifierDecl	"* rel = read_ht_rel ( bin , rl , k )"		3599432	0					
ANR	3599698	IdentifierDeclType	struct ht_rel_t *		3599432	0					
ANR	3599699	Identifier	rel		3599432	1					
ANR	3599700	AssignmentExpression	"* rel = read_ht_rel ( bin , rl , k )"		3599432	2		=			
ANR	3599701	Identifier	rel		3599432	0					
ANR	3599702	CallExpression	"read_ht_rel ( bin , rl , k )"		3599432	1					
ANR	3599703	Callee	read_ht_rel		3599432	0					
ANR	3599704	Identifier	read_ht_rel		3599432	0					
ANR	3599705	ArgumentList	bin		3599432	1					
ANR	3599706	Argument	bin		3599432	0					
ANR	3599707	Identifier	bin		3599432	0					
ANR	3599708	Argument	rl		3599432	1					
ANR	3599709	Identifier	rl		3599432	0					
ANR	3599710	Argument	k		3599432	2					
ANR	3599711	Identifier	k		3599432	0					
ANR	3599712	IfStatement	if ( ! rel )		3599432	3					
ANR	3599713	Condition	! rel	1352:6:41038:41041	3599432	0	True				
ANR	3599714	UnaryOperationExpression	! rel		3599432	0					
ANR	3599715	UnaryOperator	!		3599432	0					
ANR	3599716	Identifier	rel		3599432	1					
ANR	3599717	CompoundStatement		38:12:1055:1055	3599432	1					
ANR	3599718	GotoStatement	goto out ;	1353:3:41049:41057	3599432	0	True				
ANR	3599719	Identifier	out		3599432	0					
ANR	3599720	IfStatement	"if ( ! ht_up_insert ( rel_cache , REL_SYM , rel ) )"		3599432	4					
ANR	3599721	Condition	"! ht_up_insert ( rel_cache , REL_SYM , rel )"	1356:6:41070:41108	3599432	0	True				
ANR	3599722	UnaryOperationExpression	"! ht_up_insert ( rel_cache , REL_SYM , rel )"		3599432	0					
ANR	3599723	UnaryOperator	!		3599432	0					
ANR	3599724	CallExpression	"ht_up_insert ( rel_cache , REL_SYM , rel )"		3599432	1					
ANR	3599725	Callee	ht_up_insert		3599432	0					
ANR	3599726	Identifier	ht_up_insert		3599432	0					
ANR	3599727	ArgumentList	rel_cache		3599432	1					
ANR	3599728	Argument	rel_cache		3599432	0					
ANR	3599729	Identifier	rel_cache		3599432	0					
ANR	3599730	Argument	REL_SYM		3599432	1					
ANR	3599731	Identifier	REL_SYM		3599432	0					
ANR	3599732	Argument	rel		3599432	2					
ANR	3599733	Identifier	rel		3599432	0					
ANR	3599734	CompoundStatement		42:47:1122:1122	3599432	1					
ANR	3599735	ExpressionStatement	free ( rel )	1357:3:41116:41126	3599432	0	True				
ANR	3599736	CallExpression	free ( rel )		3599432	0					
ANR	3599737	Callee	free		3599432	0					
ANR	3599738	Identifier	free		3599432	0					
ANR	3599739	ArgumentList	rel		3599432	1					
ANR	3599740	Argument	rel		3599432	0					
ANR	3599741	Identifier	rel		3599432	0					
ANR	3599742	ReturnStatement	return rel_cache ;	1360:1:41136:41152	3599432	14	True				
ANR	3599743	Identifier	rel_cache		3599432	0					
ANR	3599744	Label	out :	1361:0:41154:41157	3599432	15	True				
ANR	3599745	Identifier	out		3599432	0					
ANR	3599746	ExpressionStatement	ht_up_free ( rel_cache )	1362:1:41160:41182	3599432	16	True				
ANR	3599747	CallExpression	ht_up_free ( rel_cache )		3599432	0					
ANR	3599748	Callee	ht_up_free		3599432	0					
ANR	3599749	Identifier	ht_up_free		3599432	0					
ANR	3599750	ArgumentList	rel_cache		3599432	1					
ANR	3599751	Argument	rel_cache		3599432	0					
ANR	3599752	Identifier	rel_cache		3599432	0					
ANR	3599753	ReturnStatement	return NULL ;	1363:1:41185:41196	3599432	17	True				
ANR	3599754	Identifier	NULL		3599432	0					
ANR	3599755	ReturnType	static HtUP *		3599432	1					
ANR	3599756	Identifier	rel_cache_new		3599432	2					
ANR	3599757	ParameterList	ELFOBJ * bin		3599432	3					
ANR	3599758	Parameter	ELFOBJ * bin	1315:27:39975:39985	3599432	0	True				
ANR	3599759	ParameterType	ELFOBJ *		3599432	0					
ANR	3599760	Identifier	bin		3599432	1					
ANR	3599761	CFGEntryNode	ENTRY		3599432		True				
ANR	3599762	CFGExitNode	EXIT		3599432		True				
ANR	3599763	Symbol	bin -> b		3599432						
ANR	3599764	Symbol	read_ht_rel		3599432						
ANR	3599765	Symbol	bin		3599432						
ANR	3599766	Symbol	bin -> phdr		3599432						
ANR	3599767	Symbol	get_rel_sec		3599432						
ANR	3599768	Symbol	* bin		3599432						
ANR	3599769	Symbol	ht_up_insert		3599432						
ANR	3599770	Symbol	len		3599432						
ANR	3599771	Symbol	rel_sec		3599432						
ANR	3599772	Symbol	rel_cache_free		3599432						
ANR	3599773	Symbol	nrel		3599432						
ANR	3599774	Symbol	rel		3599432						
ANR	3599775	Symbol	rela_sect		3599432						
ANR	3599776	Symbol	htsize		3599432						
ANR	3599777	Symbol	rel_sec -> offset		3599432						
ANR	3599778	Symbol	bin -> strtab		3599432						
ANR	3599779	Symbol	DT_REL		3599432						
ANR	3599780	Symbol	Elf_		3599432						
ANR	3599781	Symbol	rel_sec -> size		3599432						
ANR	3599782	Symbol	MAX_REL_RELA_SZ		3599432						
ANR	3599783	Symbol	NULL		3599432						
ANR	3599784	Symbol	DT_RELA		3599432						
ANR	3599785	Symbol	j		3599432						
ANR	3599786	Symbol	bin -> is_rela		3599432						
ANR	3599787	Symbol	R_MIN		3599432						
ANR	3599788	Symbol	k		3599432						
ANR	3599789	Symbol	* rel_sec		3599432						
ANR	3599790	Symbol	tsize		3599432						
ANR	3599791	Symbol	Rela		3599432						
ANR	3599792	Symbol	bin -> shdr		3599432						
ANR	3599793	Symbol	rel_cache		3599432						
ANR	3599794	Symbol	Rel		3599432						
ANR	3599795	Symbol	ht_up_new_size		3599432						
ANR	3599796	Symbol	r_buf_read_at		3599432						
ANR	3599797	Symbol	REL_SYM		3599432						
ANR	3599798	Symbol	rl		3599432						
ANR	3599799	Symbol	rel_sect		3599432						
ANR	3599800	Function	get_dyn_entry	1366:0:41201:41668							
ANR	3599801	FunctionDef	"get_dyn_entry (ELFOBJ * bin , int dyn_entry)"		3599800	0					
ANR	3599802	CompoundStatement		1366:54:41255:41668	3599800	0					
ANR	3599803	IdentifierDeclStatement	int i ;	1367:1:41258:41263	3599800	0	True				
ANR	3599804	IdentifierDecl	i		3599800	0					
ANR	3599805	IdentifierDeclType	int		3599800	0					
ANR	3599806	Identifier	i		3599800	1					
ANR	3599807	ForStatement	for ( i = 0 ; i < bin -> dyn_entries ; i ++ )		3599800	1					
ANR	3599808	ForInit	i = 0 ;	1368:6:41271:41276	3599800	0	True				
ANR	3599809	AssignmentExpression	i = 0		3599800	0		=			
ANR	3599810	Identifier	i		3599800	0					
ANR	3599811	PrimaryExpression	0		3599800	1					
ANR	3599812	Condition	i < bin -> dyn_entries	1368:13:41278:41297	3599800	1	True				
ANR	3599813	RelationalExpression	i < bin -> dyn_entries		3599800	0		<			
ANR	3599814	Identifier	i		3599800	0					
ANR	3599815	PtrMemberAccess	bin -> dyn_entries		3599800	1					
ANR	3599816	Identifier	bin		3599800	0					
ANR	3599817	Identifier	dyn_entries		3599800	1					
ANR	3599818	PostIncDecOperationExpression	i ++	1368:35:41300:41302	3599800	2	True				
ANR	3599819	Identifier	i		3599800	0					
ANR	3599820	IncDec	++		3599800	1					
ANR	3599821	CompoundStatement		3:40:49:49	3599800	3					
ANR	3599822	IfStatement	if ( bin -> dyn_buf [ i ] . d_tag == dyn_entry )		3599800	0					
ANR	3599823	Condition	bin -> dyn_buf [ i ] . d_tag == dyn_entry	1369:6:41313:41346	3599800	0	True				
ANR	3599824	EqualityExpression	bin -> dyn_buf [ i ] . d_tag == dyn_entry		3599800	0		==			
ANR	3599825	MemberAccess	bin -> dyn_buf [ i ] . d_tag		3599800	0					
ANR	3599826	ArrayIndexing	bin -> dyn_buf [ i ]		3599800	0					
ANR	3599827	PtrMemberAccess	bin -> dyn_buf		3599800	0					
ANR	3599828	Identifier	bin		3599800	0					
ANR	3599829	Identifier	dyn_buf		3599800	1					
ANR	3599830	Identifier	i		3599800	1					
ANR	3599831	Identifier	d_tag		3599800	1					
ANR	3599832	Identifier	dyn_entry		3599800	1					
ANR	3599833	CompoundStatement		4:42:93:93	3599800	1					
ANR	3599834	SwitchStatement	switch ( bin -> dyn_buf [ i ] . d_tag )		3599800	0					
ANR	3599835	Condition	bin -> dyn_buf [ i ] . d_tag	1370:11:41362:41382	3599800	0	True				
ANR	3599836	MemberAccess	bin -> dyn_buf [ i ] . d_tag		3599800	0					
ANR	3599837	ArrayIndexing	bin -> dyn_buf [ i ]		3599800	0					
ANR	3599838	PtrMemberAccess	bin -> dyn_buf		3599800	0					
ANR	3599839	Identifier	bin		3599800	0					
ANR	3599840	Identifier	dyn_buf		3599800	1					
ANR	3599841	Identifier	i		3599800	1					
ANR	3599842	Identifier	d_tag		3599800	1					
ANR	3599843	CompoundStatement		5:34:129:129	3599800	1					
ANR	3599844	Label	case DT_REL :	1371:3:41390:41401	3599800	0	True				
ANR	3599845	Identifier	DT_REL		3599800	0					
ANR	3599846	Label	case DT_RELA :	1372:3:41406:41418	3599800	1	True				
ANR	3599847	Identifier	DT_RELA		3599800	0					
ANR	3599848	Label	case DT_PLTGOT :	1373:3:41423:41437	3599800	2	True				
ANR	3599849	Identifier	DT_PLTGOT		3599800	0					
ANR	3599850	Label	case DT_JMPREL :	1374:3:41442:41456	3599800	3	True				
ANR	3599851	Identifier	DT_JMPREL		3599800	0					
ANR	3599852	ReturnStatement	return bin -> dyn_buf [ i ] . d_un . d_ptr ;	1375:4:41462:41495	3599800	4	True				
ANR	3599853	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		3599800	0					
ANR	3599854	MemberAccess	bin -> dyn_buf [ i ] . d_un		3599800	0					
ANR	3599855	ArrayIndexing	bin -> dyn_buf [ i ]		3599800	0					
ANR	3599856	PtrMemberAccess	bin -> dyn_buf		3599800	0					
ANR	3599857	Identifier	bin		3599800	0					
ANR	3599858	Identifier	dyn_buf		3599800	1					
ANR	3599859	Identifier	i		3599800	1					
ANR	3599860	Identifier	d_un		3599800	1					
ANR	3599861	Identifier	d_ptr		3599800	1					
ANR	3599862	Label	case DT_RELSZ :	1376:3:41500:41513	3599800	5	True				
ANR	3599863	Identifier	DT_RELSZ		3599800	0					
ANR	3599864	Label	case DT_RELASZ :	1377:3:41518:41532	3599800	6	True				
ANR	3599865	Identifier	DT_RELASZ		3599800	0					
ANR	3599866	Label	case DT_PLTRELSZ :	1378:3:41537:41553	3599800	7	True				
ANR	3599867	Identifier	DT_PLTRELSZ		3599800	0					
ANR	3599868	ReturnStatement	return bin -> dyn_buf [ i ] . d_un . d_val ;	1379:4:41559:41592	3599800	8	True				
ANR	3599869	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		3599800	0					
ANR	3599870	MemberAccess	bin -> dyn_buf [ i ] . d_un		3599800	0					
ANR	3599871	ArrayIndexing	bin -> dyn_buf [ i ]		3599800	0					
ANR	3599872	PtrMemberAccess	bin -> dyn_buf		3599800	0					
ANR	3599873	Identifier	bin		3599800	0					
ANR	3599874	Identifier	dyn_buf		3599800	1					
ANR	3599875	Identifier	i		3599800	1					
ANR	3599876	Identifier	d_un		3599800	1					
ANR	3599877	Identifier	d_val		3599800	1					
ANR	3599878	Label	default :	1380:3:41597:41604	3599800	9	True				
ANR	3599879	Identifier	default		3599800	0					
ANR	3599880	ExpressionStatement	r_warn_if_reached ( )	1381:4:41610:41630	3599800	10	True				
ANR	3599881	CallExpression	r_warn_if_reached ( )		3599800	0					
ANR	3599882	Callee	r_warn_if_reached		3599800	0					
ANR	3599883	Identifier	r_warn_if_reached		3599800	0					
ANR	3599884	ArgumentList			3599800	1					
ANR	3599885	BreakStatement	break ;	1382:4:41636:41641	3599800	11	True				
ANR	3599886	ReturnStatement	return - 1 ;	1387:1:41657:41666	3599800	2	True				
ANR	3599887	UnaryOperationExpression	- 1		3599800	0					
ANR	3599888	UnaryOperator	-		3599800	0					
ANR	3599889	PrimaryExpression	1		3599800	1					
ANR	3599890	ReturnType	static ut64		3599800	1					
ANR	3599891	Identifier	get_dyn_entry		3599800	2					
ANR	3599892	ParameterList	"ELFOBJ * bin , int dyn_entry"		3599800	3					
ANR	3599893	Parameter	ELFOBJ * bin	1366:26:41227:41237	3599800	0	True				
ANR	3599894	ParameterType	ELFOBJ *		3599800	0					
ANR	3599895	Identifier	bin		3599800	1					
ANR	3599896	Parameter	int dyn_entry	1366:39:41240:41252	3599800	1	True				
ANR	3599897	ParameterType	int		3599800	0					
ANR	3599898	Identifier	dyn_entry		3599800	1					
ANR	3599899	CFGEntryNode	ENTRY		3599800		True				
ANR	3599900	CFGExitNode	EXIT		3599800		True				
ANR	3599901	Symbol	bin -> dyn_buf		3599800						
ANR	3599902	Symbol	bin		3599800						
ANR	3599903	Symbol	bin -> dyn_entries		3599800						
ANR	3599904	Symbol	i		3599800						
ANR	3599905	Symbol	* bin		3599800						
ANR	3599906	Symbol	bin -> dyn_buf [ i ] . d_tag		3599800						
ANR	3599907	Symbol	* i		3599800						
ANR	3599908	Symbol	bin -> dyn_buf [ i ] . d_un		3599800						
ANR	3599909	Symbol	bin -> dyn_buf [ i ] . d_un . d_ptr		3599800						
ANR	3599910	Symbol	dyn_entry		3599800						
ANR	3599911	Symbol	* * bin		3599800						
ANR	3599912	Symbol	bin -> dyn_buf [ i ] . d_un . d_val		3599800						
ANR	3599913	Symbol	* bin -> dyn_buf		3599800						
ANR	3599914	Function	get_got_addr	1390:0:41671:41977							
ANR	3599915	FunctionDef	get_got_addr (ELFOBJ * bin)		3599914	0					
ANR	3599916	CompoundStatement		1390:38:41709:41977	3599914	0					
ANR	3599917	IdentifierDeclStatement	"ut64 ret = get_dyn_entry ( bin , DT_PLTGOT ) ;"	1391:1:41712:41753	3599914	0	True				
ANR	3599918	IdentifierDecl	"ret = get_dyn_entry ( bin , DT_PLTGOT )"		3599914	0					
ANR	3599919	IdentifierDeclType	ut64		3599914	0					
ANR	3599920	Identifier	ret		3599914	1					
ANR	3599921	AssignmentExpression	"ret = get_dyn_entry ( bin , DT_PLTGOT )"		3599914	2		=			
ANR	3599922	Identifier	ret		3599914	0					
ANR	3599923	CallExpression	"get_dyn_entry ( bin , DT_PLTGOT )"		3599914	1					
ANR	3599924	Callee	get_dyn_entry		3599914	0					
ANR	3599925	Identifier	get_dyn_entry		3599914	0					
ANR	3599926	ArgumentList	bin		3599914	1					
ANR	3599927	Argument	bin		3599914	0					
ANR	3599928	Identifier	bin		3599914	0					
ANR	3599929	Argument	DT_PLTGOT		3599914	1					
ANR	3599930	Identifier	DT_PLTGOT		3599914	0					
ANR	3599931	IfStatement	if ( ret != - 1 )		3599914	1					
ANR	3599932	Condition	ret != - 1	1392:5:41760:41768	3599914	0	True				
ANR	3599933	EqualityExpression	ret != - 1		3599914	0		!=			
ANR	3599934	Identifier	ret		3599914	0					
ANR	3599935	UnaryOperationExpression	- 1		3599914	1					
ANR	3599936	UnaryOperator	-		3599914	0					
ANR	3599937	PrimaryExpression	1		3599914	1					
ANR	3599938	CompoundStatement		3:16:61:61	3599914	1					
ANR	3599939	ReturnStatement	return ret ;	1393:2:41775:41785	3599914	0	True				
ANR	3599940	Identifier	ret		3599914	0					
ANR	3599941	ExpressionStatement	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got"" )"	1396:1:41792:41844	3599914	2	True				
ANR	3599942	AssignmentExpression	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got"" )"		3599914	0		=			
ANR	3599943	Identifier	ret		3599914	0					
ANR	3599944	CallExpression	"Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got"" )"		3599914	1					
ANR	3599945	Callee	Elf_ ( r_bin_elf_get_section_addr )		3599914	0					
ANR	3599946	CallExpression	Elf_ ( r_bin_elf_get_section_addr )		3599914	0					
ANR	3599947	Callee	Elf_		3599914	0					
ANR	3599948	Identifier	Elf_		3599914	0					
ANR	3599949	ArgumentList	r_bin_elf_get_section_addr		3599914	1					
ANR	3599950	Argument	r_bin_elf_get_section_addr		3599914	0					
ANR	3599951	Identifier	r_bin_elf_get_section_addr		3599914	0					
ANR	3599952	ArgumentList	bin		3599914	1					
ANR	3599953	Argument	bin		3599914	0					
ANR	3599954	Identifier	bin		3599914	0					
ANR	3599955	Argument	""".got"""		3599914	1					
ANR	3599956	PrimaryExpression	""".got"""		3599914	0					
ANR	3599957	IfStatement	if ( ret )		3599914	3					
ANR	3599958	Condition	ret	1397:5:41851:41853	3599914	0	True				
ANR	3599959	Identifier	ret		3599914	0					
ANR	3599960	CompoundStatement		8:10:146:146	3599914	1					
ANR	3599961	ReturnStatement	return ret ;	1398:2:41860:41870	3599914	0	True				
ANR	3599962	Identifier	ret		3599914	0					
ANR	3599963	ExpressionStatement	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got.plt"" )"	1401:1:41877:41933	3599914	4	True				
ANR	3599964	AssignmentExpression	"ret = Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got.plt"" )"		3599914	0		=			
ANR	3599965	Identifier	ret		3599914	0					
ANR	3599966	CallExpression	"Elf_ ( r_bin_elf_get_section_addr ) ( bin , "".got.plt"" )"		3599914	1					
ANR	3599967	Callee	Elf_ ( r_bin_elf_get_section_addr )		3599914	0					
ANR	3599968	CallExpression	Elf_ ( r_bin_elf_get_section_addr )		3599914	0					
ANR	3599969	Callee	Elf_		3599914	0					
ANR	3599970	Identifier	Elf_		3599914	0					
ANR	3599971	ArgumentList	r_bin_elf_get_section_addr		3599914	1					
ANR	3599972	Argument	r_bin_elf_get_section_addr		3599914	0					
ANR	3599973	Identifier	r_bin_elf_get_section_addr		3599914	0					
ANR	3599974	ArgumentList	bin		3599914	1					
ANR	3599975	Argument	bin		3599914	0					
ANR	3599976	Identifier	bin		3599914	0					
ANR	3599977	Argument	""".got.plt"""		3599914	1					
ANR	3599978	PrimaryExpression	""".got.plt"""		3599914	0					
ANR	3599979	IfStatement	if ( ret )		3599914	5					
ANR	3599980	Condition	ret	1402:5:41940:41942	3599914	0	True				
ANR	3599981	Identifier	ret		3599914	0					
ANR	3599982	CompoundStatement		13:10:235:235	3599914	1					
ANR	3599983	ReturnStatement	return ret ;	1403:2:41949:41959	3599914	0	True				
ANR	3599984	Identifier	ret		3599914	0					
ANR	3599985	ReturnStatement	return - 1 ;	1406:1:41966:41975	3599914	6	True				
ANR	3599986	UnaryOperationExpression	- 1		3599914	0					
ANR	3599987	UnaryOperator	-		3599914	0					
ANR	3599988	PrimaryExpression	1		3599914	1					
ANR	3599989	ReturnType	static ut64		3599914	1					
ANR	3599990	Identifier	get_got_addr		3599914	2					
ANR	3599991	ParameterList	ELFOBJ * bin		3599914	3					
ANR	3599992	Parameter	ELFOBJ * bin	1390:25:41696:41706	3599914	0	True				
ANR	3599993	ParameterType	ELFOBJ *		3599914	0					
ANR	3599994	Identifier	bin		3599914	1					
ANR	3599995	CFGEntryNode	ENTRY		3599914		True				
ANR	3599996	CFGExitNode	EXIT		3599914		True				
ANR	3599997	Symbol	ret		3599914						
ANR	3599998	Symbol	Elf_		3599914						
ANR	3599999	Symbol	get_dyn_entry		3599914						
ANR	3600000	Symbol	bin		3599914						
ANR	3600001	Symbol	r_bin_elf_get_section_addr		3599914						
ANR	3600002	Symbol	DT_PLTGOT		3599914						
ANR	3600003	Function	get_import_addr_ppc	1409:0:41980:42773							
ANR	3600004	FunctionDef	"get_import_addr_ppc (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section , int nrel)"		3600003	0					
ANR	3600005	CompoundStatement		1409:106:42086:42773	3600003	0					
ANR	3600006	IdentifierDeclStatement	ut8 buf [ 4 ] = { 0 } ;	1410:1:42089:42107	3600003	0	True				
ANR	3600007	IdentifierDecl	buf [ 4 ] = { 0 }		3600003	0					
ANR	3600008	IdentifierDeclType	ut8 [ 4 ]		3600003	0					
ANR	3600009	Identifier	buf		3600003	1					
ANR	3600010	PrimaryExpression	4		3600003	2					
ANR	3600011	AssignmentExpression	buf [ 4 ] = { 0 }		3600003	3		=			
ANR	3600012	Identifier	buf		3600003	0					
ANR	3600013	InitializerList	0		3600003	1					
ANR	3600014	PrimaryExpression	0		3600003	0					
ANR	3600015	IfStatement	if ( ! plt_section )		3600003	1					
ANR	3600016	Condition	! plt_section	1411:5:42114:42125	3600003	0	True				
ANR	3600017	UnaryOperationExpression	! plt_section		3600003	0					
ANR	3600018	UnaryOperator	!		3600003	0					
ANR	3600019	Identifier	plt_section		3600003	1					
ANR	3600020	CompoundStatement		3:19:41:41	3600003	1					
ANR	3600021	ReturnStatement	return - 1 ;	1412:2:42132:42141	3600003	0	True				
ANR	3600022	UnaryOperationExpression	- 1		3600003	0					
ANR	3600023	UnaryOperator	-		3600003	0					
ANR	3600024	PrimaryExpression	1		3600003	1					
ANR	3600025	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) ) ;"	1414:1:42147:42219	3600003	2	True				
ANR	3600026	IdentifierDecl	"len = r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) )"		3600003	0					
ANR	3600027	IdentifierDeclType	int		3600003	0					
ANR	3600028	Identifier	len		3600003	1					
ANR	3600029	AssignmentExpression	"len = r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) )"		3600003	2		=			
ANR	3600030	Identifier	len		3600003	0					
ANR	3600031	CallExpression	"r_buf_read_at ( bin -> b , plt_section -> offset , buf , sizeof ( buf ) )"		3600003	1					
ANR	3600032	Callee	r_buf_read_at		3600003	0					
ANR	3600033	Identifier	r_buf_read_at		3600003	0					
ANR	3600034	ArgumentList	bin -> b		3600003	1					
ANR	3600035	Argument	bin -> b		3600003	0					
ANR	3600036	PtrMemberAccess	bin -> b		3600003	0					
ANR	3600037	Identifier	bin		3600003	0					
ANR	3600038	Identifier	b		3600003	1					
ANR	3600039	Argument	plt_section -> offset		3600003	1					
ANR	3600040	PtrMemberAccess	plt_section -> offset		3600003	0					
ANR	3600041	Identifier	plt_section		3600003	0					
ANR	3600042	Identifier	offset		3600003	1					
ANR	3600043	Argument	buf		3600003	2					
ANR	3600044	Identifier	buf		3600003	0					
ANR	3600045	Argument	sizeof ( buf )		3600003	3					
ANR	3600046	SizeofExpression	sizeof ( buf )		3600003	0					
ANR	3600047	Sizeof	sizeof		3600003	0					
ANR	3600048	SizeofOperand	buf		3600003	1					
ANR	3600049	IfStatement	if ( len < 4 )		3600003	3					
ANR	3600050	Condition	len < 4	1415:5:42226:42232	3600003	0	True				
ANR	3600051	RelationalExpression	len < 4		3600003	0		<			
ANR	3600052	Identifier	len		3600003	0					
ANR	3600053	PrimaryExpression	4		3600003	1					
ANR	3600054	CompoundStatement		7:14:148:148	3600003	1					
ANR	3600055	ReturnStatement	return - 1 ;	1416:2:42239:42248	3600003	0	True				
ANR	3600056	UnaryOperationExpression	- 1		3600003	0					
ANR	3600057	UnaryOperator	-		3600003	0					
ANR	3600058	PrimaryExpression	1		3600003	1					
ANR	3600059	IfStatement	if ( bin -> endian )		3600003	4					
ANR	3600060	Condition	bin -> endian	1419:5:42259:42269	3600003	0	True				
ANR	3600061	PtrMemberAccess	bin -> endian		3600003	0					
ANR	3600062	Identifier	bin		3600003	0					
ANR	3600063	Identifier	endian		3600003	1					
ANR	3600064	CompoundStatement		12:2:189:218	3600003	1					
ANR	3600065	IdentifierDeclStatement	ut64 base = r_read_be32 ( buf ) ;	1420:2:42276:42305	3600003	0	True				
ANR	3600066	IdentifierDecl	base = r_read_be32 ( buf )		3600003	0					
ANR	3600067	IdentifierDeclType	ut64		3600003	0					
ANR	3600068	Identifier	base		3600003	1					
ANR	3600069	AssignmentExpression	base = r_read_be32 ( buf )		3600003	2		=			
ANR	3600070	Identifier	base		3600003	0					
ANR	3600071	CallExpression	r_read_be32 ( buf )		3600003	1					
ANR	3600072	Callee	r_read_be32		3600003	0					
ANR	3600073	Identifier	r_read_be32		3600003	0					
ANR	3600074	ArgumentList	buf		3600003	1					
ANR	3600075	Argument	buf		3600003	0					
ANR	3600076	Identifier	buf		3600003	0					
ANR	3600077	ExpressionStatement	base -= ( nrel * 16 )	1421:2:42309:42328	3600003	1	True				
ANR	3600078	AssignmentExpression	base -= ( nrel * 16 )		3600003	0		-=			
ANR	3600079	Identifier	base		3600003	0					
ANR	3600080	MultiplicativeExpression	nrel * 16		3600003	1		*			
ANR	3600081	Identifier	nrel		3600003	0					
ANR	3600082	PrimaryExpression	16		3600003	1					
ANR	3600083	ExpressionStatement	base += ( rel -> k * 16 )	1422:2:42332:42353	3600003	2	True				
ANR	3600084	AssignmentExpression	base += ( rel -> k * 16 )		3600003	0		+=			
ANR	3600085	Identifier	base		3600003	0					
ANR	3600086	MultiplicativeExpression	rel -> k * 16		3600003	1		*			
ANR	3600087	PtrMemberAccess	rel -> k		3600003	0					
ANR	3600088	Identifier	rel		3600003	0					
ANR	3600089	Identifier	k		3600003	1					
ANR	3600090	PrimaryExpression	16		3600003	1					
ANR	3600091	ReturnStatement	return base ;	1423:2:42357:42368	3600003	3	True				
ANR	3600092	Identifier	base		3600003	0					
ANR	3600093	IdentifierDeclStatement	ut64 base = r_read_le32 ( buf ) ;	1435:1:42678:42707	3600003	5	True				
ANR	3600094	IdentifierDecl	base = r_read_le32 ( buf )		3600003	0					
ANR	3600095	IdentifierDeclType	ut64		3600003	0					
ANR	3600096	Identifier	base		3600003	1					
ANR	3600097	AssignmentExpression	base = r_read_le32 ( buf )		3600003	2		=			
ANR	3600098	Identifier	base		3600003	0					
ANR	3600099	CallExpression	r_read_le32 ( buf )		3600003	1					
ANR	3600100	Callee	r_read_le32		3600003	0					
ANR	3600101	Identifier	r_read_le32		3600003	0					
ANR	3600102	ArgumentList	buf		3600003	1					
ANR	3600103	Argument	buf		3600003	0					
ANR	3600104	Identifier	buf		3600003	0					
ANR	3600105	ExpressionStatement	base -= ( nrel * 12 ) + 20	1436:1:42710:42734	3600003	6	True				
ANR	3600106	AssignmentExpression	base -= ( nrel * 12 ) + 20		3600003	0		-=			
ANR	3600107	Identifier	base		3600003	0					
ANR	3600108	AdditiveExpression	( nrel * 12 ) + 20		3600003	1		+			
ANR	3600109	MultiplicativeExpression	nrel * 12		3600003	0		*			
ANR	3600110	Identifier	nrel		3600003	0					
ANR	3600111	PrimaryExpression	12		3600003	1					
ANR	3600112	PrimaryExpression	20		3600003	1					
ANR	3600113	ExpressionStatement	base += ( rel -> k * 8 )	1437:1:42737:42757	3600003	7	True				
ANR	3600114	AssignmentExpression	base += ( rel -> k * 8 )		3600003	0		+=			
ANR	3600115	Identifier	base		3600003	0					
ANR	3600116	MultiplicativeExpression	rel -> k * 8		3600003	1		*			
ANR	3600117	PtrMemberAccess	rel -> k		3600003	0					
ANR	3600118	Identifier	rel		3600003	0					
ANR	3600119	Identifier	k		3600003	1					
ANR	3600120	PrimaryExpression	8		3600003	1					
ANR	3600121	ReturnStatement	return base ;	1438:1:42760:42771	3600003	8	True				
ANR	3600122	Identifier	base		3600003	0					
ANR	3600123	ReturnType	static ut64		3600003	1					
ANR	3600124	Identifier	get_import_addr_ppc		3600003	2					
ANR	3600125	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section , int nrel"		3600003	3					
ANR	3600126	Parameter	ELFOBJ * bin	1409:32:42012:42022	3600003	0	True				
ANR	3600127	ParameterType	ELFOBJ *		3600003	0					
ANR	3600128	Identifier	bin		3600003	1					
ANR	3600129	Parameter	struct ht_rel_t * rel	1409:45:42025:42044	3600003	1	True				
ANR	3600130	ParameterType	struct ht_rel_t *		3600003	0					
ANR	3600131	Identifier	rel		3600003	1					
ANR	3600132	Parameter	RBinElfSection * plt_section	1409:67:42047:42073	3600003	2	True				
ANR	3600133	ParameterType	RBinElfSection *		3600003	0					
ANR	3600134	Identifier	plt_section		3600003	1					
ANR	3600135	Parameter	int nrel	1409:96:42076:42083	3600003	3	True				
ANR	3600136	ParameterType	int		3600003	0					
ANR	3600137	Identifier	nrel		3600003	1					
ANR	3600138	CFGEntryNode	ENTRY		3600003		True				
ANR	3600139	CFGExitNode	EXIT		3600003		True				
ANR	3600140	Symbol	bin -> b		3600003						
ANR	3600141	Symbol	* rel		3600003						
ANR	3600142	Symbol	r_read_le32		3600003						
ANR	3600143	Symbol	plt_section -> offset		3600003						
ANR	3600144	Symbol	bin		3600003						
ANR	3600145	Symbol	r_read_be32		3600003						
ANR	3600146	Symbol	* bin		3600003						
ANR	3600147	Symbol	buf		3600003						
ANR	3600148	Symbol	len		3600003						
ANR	3600149	Symbol	plt_section		3600003						
ANR	3600150	Symbol	* plt_section		3600003						
ANR	3600151	Symbol	bin -> endian		3600003						
ANR	3600152	Symbol	rel		3600003						
ANR	3600153	Symbol	nrel		3600003						
ANR	3600154	Symbol	r_buf_read_at		3600003						
ANR	3600155	Symbol	rel -> k		3600003						
ANR	3600156	Symbol	base		3600003						
ANR	3600157	Function	get_import_addr_sparc	1441:0:42776:43196							
ANR	3600158	FunctionDef	"get_import_addr_sparc (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		3600157	0					
ANR	3600159	CompoundStatement		1441:98:42874:43196	3600157	0					
ANR	3600160	IfStatement	if ( ! plt_section )		3600157	0					
ANR	3600161	Condition	! plt_section	1442:5:42881:42892	3600157	0	True				
ANR	3600162	UnaryOperationExpression	! plt_section		3600157	0					
ANR	3600163	UnaryOperator	!		3600157	0					
ANR	3600164	Identifier	plt_section		3600157	1					
ANR	3600165	CompoundStatement		2:19:20:20	3600157	1					
ANR	3600166	ReturnStatement	return UT64_MAX ;	1443:2:42899:42914	3600157	0	True				
ANR	3600167	Identifier	UT64_MAX		3600157	0					
ANR	3600168	IdentifierDeclStatement	ut64 plt_addr = plt_section -> rva ;	1445:1:42920:42952	3600157	1	True				
ANR	3600169	IdentifierDecl	plt_addr = plt_section -> rva		3600157	0					
ANR	3600170	IdentifierDeclType	ut64		3600157	0					
ANR	3600171	Identifier	plt_addr		3600157	1					
ANR	3600172	AssignmentExpression	plt_addr = plt_section -> rva		3600157	2		=			
ANR	3600173	Identifier	plt_addr		3600157	0					
ANR	3600174	PtrMemberAccess	plt_section -> rva		3600157	1					
ANR	3600175	Identifier	plt_section		3600157	0					
ANR	3600176	Identifier	rva		3600157	1					
ANR	3600177	SwitchStatement	switch ( REL_TYPE )		3600157	2					
ANR	3600178	Condition	REL_TYPE	1446:9:42963:42970	3600157	0	True				
ANR	3600179	Identifier	REL_TYPE		3600157	0					
ANR	3600180	CompoundStatement		6:19:98:98	3600157	1					
ANR	3600181	Label	case R_SPARC_JMP_SLOT :	1447:1:42976:42997	3600157	0	True				
ANR	3600182	Identifier	R_SPARC_JMP_SLOT		3600157	0					
ANR	3600183	ExpressionStatement	plt_addr += rel -> k * 12 + 20	1448:2:43001:43029	3600157	1	True				
ANR	3600184	AssignmentExpression	plt_addr += rel -> k * 12 + 20		3600157	0		+=			
ANR	3600185	Identifier	plt_addr		3600157	0					
ANR	3600186	AdditiveExpression	rel -> k * 12 + 20		3600157	1		+			
ANR	3600187	MultiplicativeExpression	rel -> k * 12		3600157	0		*			
ANR	3600188	PtrMemberAccess	rel -> k		3600157	0					
ANR	3600189	Identifier	rel		3600157	0					
ANR	3600190	Identifier	k		3600157	1					
ANR	3600191	PrimaryExpression	12		3600157	1					
ANR	3600192	PrimaryExpression	20		3600157	1					
ANR	3600193	IfStatement	if ( plt_addr & 1 )		3600157	2					
ANR	3600194	Condition	plt_addr & 1	1450:6:43055:43066	3600157	0	True				
ANR	3600195	BitAndExpression	plt_addr & 1		3600157	0		&			
ANR	3600196	Identifier	plt_addr		3600157	0					
ANR	3600197	PrimaryExpression	1		3600157	1					
ANR	3600198	CompoundStatement		10:20:194:194	3600157	1					
ANR	3600199	ExpressionStatement	plt_addr --	1451:3:43074:43084	3600157	0	True				
ANR	3600200	PostIncDecOperationExpression	plt_addr --		3600157	0					
ANR	3600201	Identifier	plt_addr		3600157	0					
ANR	3600202	IncDec	--		3600157	1					
ANR	3600203	ReturnStatement	return plt_addr ;	1453:2:43092:43107	3600157	3	True				
ANR	3600204	Identifier	plt_addr		3600157	0					
ANR	3600205	Label	default :	1454:1:43110:43117	3600157	4	True				
ANR	3600206	Identifier	default		3600157	0					
ANR	3600207	ExpressionStatement	"bprintf ( ""Unknown sparc reloc type %d\\n"" , REL_TYPE )"	1455:2:43121:43172	3600157	5	True				
ANR	3600208	CallExpression	"bprintf ( ""Unknown sparc reloc type %d\\n"" , REL_TYPE )"		3600157	0					
ANR	3600209	Callee	bprintf		3600157	0					
ANR	3600210	Identifier	bprintf		3600157	0					
ANR	3600211	ArgumentList	"""Unknown sparc reloc type %d\\n"""		3600157	1					
ANR	3600212	Argument	"""Unknown sparc reloc type %d\\n"""		3600157	0					
ANR	3600213	PrimaryExpression	"""Unknown sparc reloc type %d\\n"""		3600157	0					
ANR	3600214	Argument	REL_TYPE		3600157	1					
ANR	3600215	Identifier	REL_TYPE		3600157	0					
ANR	3600216	ReturnStatement	return UT64_MAX ;	1456:2:43176:43191	3600157	6	True				
ANR	3600217	Identifier	UT64_MAX		3600157	0					
ANR	3600218	ReturnType	static ut64		3600157	1					
ANR	3600219	Identifier	get_import_addr_sparc		3600157	2					
ANR	3600220	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		3600157	3					
ANR	3600221	Parameter	ELFOBJ * bin	1441:34:42810:42820	3600157	0	True				
ANR	3600222	ParameterType	ELFOBJ *		3600157	0					
ANR	3600223	Identifier	bin		3600157	1					
ANR	3600224	Parameter	struct ht_rel_t * rel	1441:47:42823:42842	3600157	1	True				
ANR	3600225	ParameterType	struct ht_rel_t *		3600157	0					
ANR	3600226	Identifier	rel		3600157	1					
ANR	3600227	Parameter	RBinElfSection * plt_section	1441:69:42845:42871	3600157	2	True				
ANR	3600228	ParameterType	RBinElfSection *		3600157	0					
ANR	3600229	Identifier	plt_section		3600157	1					
ANR	3600230	CFGEntryNode	ENTRY		3600157		True				
ANR	3600231	CFGExitNode	EXIT		3600157		True				
ANR	3600232	Symbol	plt_section -> rva		3600157						
ANR	3600233	Symbol	REL_TYPE		3600157						
ANR	3600234	Symbol	* rel		3600157						
ANR	3600235	Symbol	plt_section		3600157						
ANR	3600236	Symbol	bin		3600157						
ANR	3600237	Symbol	plt_addr		3600157						
ANR	3600238	Symbol	* plt_section		3600157						
ANR	3600239	Symbol	rel		3600157						
ANR	3600240	Symbol	UT64_MAX		3600157						
ANR	3600241	Symbol	rel -> k		3600157						
ANR	3600242	Function	get_import_addr_arm	1460:0:43199:43701							
ANR	3600243	FunctionDef	"get_import_addr_arm (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		3600242	0					
ANR	3600244	CompoundStatement		1460:96:43295:43701	3600242	0					
ANR	3600245	IfStatement	if ( ! plt_section )		3600242	0					
ANR	3600246	Condition	! plt_section	1461:5:43302:43313	3600242	0	True				
ANR	3600247	UnaryOperationExpression	! plt_section		3600242	0					
ANR	3600248	UnaryOperator	!		3600242	0					
ANR	3600249	Identifier	plt_section		3600242	1					
ANR	3600250	CompoundStatement		2:19:20:20	3600242	1					
ANR	3600251	ReturnStatement	return UT32_MAX ;	1462:2:43320:43335	3600242	0	True				
ANR	3600252	Identifier	UT32_MAX		3600242	0					
ANR	3600253	IdentifierDeclStatement	ut64 plt_addr = plt_section -> rva ;	1464:1:43341:43373	3600242	1	True				
ANR	3600254	IdentifierDecl	plt_addr = plt_section -> rva		3600242	0					
ANR	3600255	IdentifierDeclType	ut64		3600242	0					
ANR	3600256	Identifier	plt_addr		3600242	1					
ANR	3600257	AssignmentExpression	plt_addr = plt_section -> rva		3600242	2		=			
ANR	3600258	Identifier	plt_addr		3600242	0					
ANR	3600259	PtrMemberAccess	plt_section -> rva		3600242	1					
ANR	3600260	Identifier	plt_section		3600242	0					
ANR	3600261	Identifier	rva		3600242	1					
ANR	3600262	SwitchStatement	switch ( REL_TYPE )		3600242	2					
ANR	3600263	Condition	REL_TYPE	1465:9:43384:43391	3600242	0	True				
ANR	3600264	Identifier	REL_TYPE		3600242	0					
ANR	3600265	CompoundStatement		6:19:98:98	3600242	1					
ANR	3600266	Label	case R_ARM_JUMP_SLOT :	1466:1:43397:43417	3600242	0	True				
ANR	3600267	Identifier	R_ARM_JUMP_SLOT		3600242	0					
ANR	3600268	CompoundStatement		7:23:123:123	3600242	1					
ANR	3600269	ExpressionStatement	plt_addr += rel -> k * 12 + 20	1467:2:43423:43451	3600242	0	True				
ANR	3600270	AssignmentExpression	plt_addr += rel -> k * 12 + 20		3600242	0		+=			
ANR	3600271	Identifier	plt_addr		3600242	0					
ANR	3600272	AdditiveExpression	rel -> k * 12 + 20		3600242	1		+			
ANR	3600273	MultiplicativeExpression	rel -> k * 12		3600242	0		*			
ANR	3600274	PtrMemberAccess	rel -> k		3600242	0					
ANR	3600275	Identifier	rel		3600242	0					
ANR	3600276	Identifier	k		3600242	1					
ANR	3600277	PrimaryExpression	12		3600242	1					
ANR	3600278	PrimaryExpression	20		3600242	1					
ANR	3600279	IfStatement	if ( plt_addr & 1 )		3600242	1					
ANR	3600280	Condition	plt_addr & 1	1469:6:43477:43488	3600242	0	True				
ANR	3600281	BitAndExpression	plt_addr & 1		3600242	0		&			
ANR	3600282	Identifier	plt_addr		3600242	0					
ANR	3600283	PrimaryExpression	1		3600242	1					
ANR	3600284	CompoundStatement		10:20:195:195	3600242	1					
ANR	3600285	ExpressionStatement	plt_addr --	1470:3:43496:43506	3600242	0	True				
ANR	3600286	PostIncDecOperationExpression	plt_addr --		3600242	0					
ANR	3600287	Identifier	plt_addr		3600242	0					
ANR	3600288	IncDec	--		3600242	1					
ANR	3600289	ReturnStatement	return plt_addr ;	1472:2:43514:43529	3600242	2	True				
ANR	3600290	Identifier	plt_addr		3600242	0					
ANR	3600291	Label	case R_AARCH64_JUMP_SLOT :	1474:1:43535:43559	3600242	2	True				
ANR	3600292	Identifier	R_AARCH64_JUMP_SLOT		3600242	0					
ANR	3600293	ReturnStatement	return plt_addr + rel -> k * 16 + 32 ;	1475:2:43563:43597	3600242	3	True				
ANR	3600294	AdditiveExpression	plt_addr + rel -> k * 16 + 32		3600242	0		+			
ANR	3600295	Identifier	plt_addr		3600242	0					
ANR	3600296	AdditiveExpression	rel -> k * 16 + 32		3600242	1		+			
ANR	3600297	MultiplicativeExpression	rel -> k * 16		3600242	0		*			
ANR	3600298	PtrMemberAccess	rel -> k		3600242	0					
ANR	3600299	Identifier	rel		3600242	0					
ANR	3600300	Identifier	k		3600242	1					
ANR	3600301	PrimaryExpression	16		3600242	1					
ANR	3600302	PrimaryExpression	32		3600242	1					
ANR	3600303	Label	default :	1476:1:43600:43607	3600242	4	True				
ANR	3600304	Identifier	default		3600242	0					
ANR	3600305	ExpressionStatement	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"	1477:2:43611:43677	3600242	5	True				
ANR	3600306	CallExpression	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"		3600242	0					
ANR	3600307	Callee	bprintf		3600242	0					
ANR	3600308	Identifier	bprintf		3600242	0					
ANR	3600309	ArgumentList	"""Unsupported relocation type for imports %d\\n"""		3600242	1					
ANR	3600310	Argument	"""Unsupported relocation type for imports %d\\n"""		3600242	0					
ANR	3600311	PrimaryExpression	"""Unsupported relocation type for imports %d\\n"""		3600242	0					
ANR	3600312	Argument	REL_TYPE		3600242	1					
ANR	3600313	Identifier	REL_TYPE		3600242	0					
ANR	3600314	ReturnStatement	return UT64_MAX ;	1478:2:43681:43696	3600242	6	True				
ANR	3600315	Identifier	UT64_MAX		3600242	0					
ANR	3600316	ReturnType	static ut64		3600242	1					
ANR	3600317	Identifier	get_import_addr_arm		3600242	2					
ANR	3600318	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		3600242	3					
ANR	3600319	Parameter	ELFOBJ * bin	1460:32:43231:43241	3600242	0	True				
ANR	3600320	ParameterType	ELFOBJ *		3600242	0					
ANR	3600321	Identifier	bin		3600242	1					
ANR	3600322	Parameter	struct ht_rel_t * rel	1460:45:43244:43263	3600242	1	True				
ANR	3600323	ParameterType	struct ht_rel_t *		3600242	0					
ANR	3600324	Identifier	rel		3600242	1					
ANR	3600325	Parameter	RBinElfSection * plt_section	1460:67:43266:43292	3600242	2	True				
ANR	3600326	ParameterType	RBinElfSection *		3600242	0					
ANR	3600327	Identifier	plt_section		3600242	1					
ANR	3600328	CFGEntryNode	ENTRY		3600242		True				
ANR	3600329	CFGExitNode	EXIT		3600242		True				
ANR	3600330	Symbol	UT32_MAX		3600242						
ANR	3600331	Symbol	plt_section -> rva		3600242						
ANR	3600332	Symbol	REL_TYPE		3600242						
ANR	3600333	Symbol	* rel		3600242						
ANR	3600334	Symbol	plt_section		3600242						
ANR	3600335	Symbol	bin		3600242						
ANR	3600336	Symbol	* plt_section		3600242						
ANR	3600337	Symbol	plt_addr		3600242						
ANR	3600338	Symbol	rel		3600242						
ANR	3600339	Symbol	rel -> k		3600242						
ANR	3600340	Symbol	UT64_MAX		3600242						
ANR	3600341	Function	get_import_addr_x86	1482:0:43704:47243							
ANR	3600342	FunctionDef	"get_import_addr_x86 (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		3600341	0					
ANR	3600343	CompoundStatement		1482:96:43800:47243	3600341	0					
ANR	3600344	IdentifierDeclStatement	"ut64 plt_addr , plt_sym_addr = - 1 ;"	1483:1:43803:43835	3600341	0	True				
ANR	3600345	IdentifierDecl	plt_addr		3600341	0					
ANR	3600346	IdentifierDeclType	ut64		3600341	0					
ANR	3600347	Identifier	plt_addr		3600341	1					
ANR	3600348	IdentifierDecl	plt_sym_addr = - 1		3600341	1					
ANR	3600349	IdentifierDeclType	ut64		3600341	0					
ANR	3600350	Identifier	plt_sym_addr		3600341	1					
ANR	3600351	AssignmentExpression	plt_sym_addr = - 1		3600341	2		=			
ANR	3600352	Identifier	plt_sym_addr		3600341	0					
ANR	3600353	UnaryOperationExpression	- 1		3600341	1					
ANR	3600354	UnaryOperator	-		3600341	0					
ANR	3600355	PrimaryExpression	1		3600341	1					
ANR	3600356	IdentifierDeclStatement	ut8 buf [ sizeof ( Elf_ ( Addr ) ) ] ;	1484:1:43838:43866	3600341	1	True				
ANR	3600357	IdentifierDecl	buf [ sizeof ( Elf_ ( Addr ) ) ]		3600341	0					
ANR	3600358	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Addr ) ) ]		3600341	0					
ANR	3600359	Identifier	buf		3600341	1					
ANR	3600360	SizeofExpression	sizeof ( Elf_ ( Addr ) )		3600341	2					
ANR	3600361	Sizeof	sizeof		3600341	0					
ANR	3600362	CallExpression	Elf_ ( Addr )		3600341	1					
ANR	3600363	Callee	Elf_		3600341	0					
ANR	3600364	Identifier	Elf_		3600341	0					
ANR	3600365	ArgumentList	Addr		3600341	1					
ANR	3600366	Argument	Addr		3600341	0					
ANR	3600367	Identifier	Addr		3600341	0					
ANR	3600368	IdentifierDeclStatement	int len ;	1485:1:43869:43876	3600341	2	True				
ANR	3600369	IdentifierDecl	len		3600341	0					
ANR	3600370	IdentifierDeclType	int		3600341	0					
ANR	3600371	Identifier	len		3600341	1					
ANR	3600372	IdentifierDeclStatement	"RBinElfSection * pltsec_section = get_section_by_name ( bin , "".plt.sec"" ) ;"	1487:1:43880:43950	3600341	3	True				
ANR	3600373	IdentifierDecl	"* pltsec_section = get_section_by_name ( bin , "".plt.sec"" )"		3600341	0					
ANR	3600374	IdentifierDeclType	RBinElfSection *		3600341	0					
ANR	3600375	Identifier	pltsec_section		3600341	1					
ANR	3600376	AssignmentExpression	"* pltsec_section = get_section_by_name ( bin , "".plt.sec"" )"		3600341	2		=			
ANR	3600377	Identifier	pltsec_section		3600341	0					
ANR	3600378	CallExpression	"get_section_by_name ( bin , "".plt.sec"" )"		3600341	1					
ANR	3600379	Callee	get_section_by_name		3600341	0					
ANR	3600380	Identifier	get_section_by_name		3600341	0					
ANR	3600381	ArgumentList	bin		3600341	1					
ANR	3600382	Argument	bin		3600341	0					
ANR	3600383	Identifier	bin		3600341	0					
ANR	3600384	Argument	""".plt.sec"""		3600341	1					
ANR	3600385	PrimaryExpression	""".plt.sec"""		3600341	0					
ANR	3600386	IdentifierDeclStatement	ut64 got_addr = get_got_addr ( bin ) ;	1488:1:43953:43987	3600341	4	True				
ANR	3600387	IdentifierDecl	got_addr = get_got_addr ( bin )		3600341	0					
ANR	3600388	IdentifierDeclType	ut64		3600341	0					
ANR	3600389	Identifier	got_addr		3600341	1					
ANR	3600390	AssignmentExpression	got_addr = get_got_addr ( bin )		3600341	2		=			
ANR	3600391	Identifier	got_addr		3600341	0					
ANR	3600392	CallExpression	get_got_addr ( bin )		3600341	1					
ANR	3600393	Callee	get_got_addr		3600341	0					
ANR	3600394	Identifier	get_got_addr		3600341	0					
ANR	3600395	ArgumentList	bin		3600341	1					
ANR	3600396	Argument	bin		3600341	0					
ANR	3600397	Identifier	bin		3600341	0					
ANR	3600398	IfStatement	if ( got_addr == - 1 )		3600341	5					
ANR	3600399	Condition	got_addr == - 1	1489:5:43994:44007	3600341	0	True				
ANR	3600400	EqualityExpression	got_addr == - 1		3600341	0		==			
ANR	3600401	Identifier	got_addr		3600341	0					
ANR	3600402	UnaryOperationExpression	- 1		3600341	1					
ANR	3600403	UnaryOperator	-		3600341	0					
ANR	3600404	PrimaryExpression	1		3600341	1					
ANR	3600405	CompoundStatement		8:21:209:209	3600341	1					
ANR	3600406	ReturnStatement	return UT64_MAX ;	1490:2:44014:44029	3600341	0	True				
ANR	3600407	Identifier	UT64_MAX		3600341	0					
ANR	3600408	IdentifierDeclStatement	"ut64 got_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr ) ;"	1493:1:44036:44093	3600341	6	True				
ANR	3600409	IdentifierDecl	"got_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr )"		3600341	0					
ANR	3600410	IdentifierDeclType	ut64		3600341	0					
ANR	3600411	Identifier	got_offset		3600341	1					
ANR	3600412	AssignmentExpression	"got_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr )"		3600341	2		=			
ANR	3600413	Identifier	got_offset		3600341	0					
ANR	3600414	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , got_addr )"		3600341	1					
ANR	3600415	Callee	Elf_ ( r_bin_elf_v2p_new )		3600341	0					
ANR	3600416	CallExpression	Elf_ ( r_bin_elf_v2p_new )		3600341	0					
ANR	3600417	Callee	Elf_		3600341	0					
ANR	3600418	Identifier	Elf_		3600341	0					
ANR	3600419	ArgumentList	r_bin_elf_v2p_new		3600341	1					
ANR	3600420	Argument	r_bin_elf_v2p_new		3600341	0					
ANR	3600421	Identifier	r_bin_elf_v2p_new		3600341	0					
ANR	3600422	ArgumentList	bin		3600341	1					
ANR	3600423	Argument	bin		3600341	0					
ANR	3600424	Identifier	bin		3600341	0					
ANR	3600425	Argument	got_addr		3600341	1					
ANR	3600426	Identifier	got_addr		3600341	0					
ANR	3600427	IfStatement	if ( got_offset == UT64_MAX )		3600341	7					
ANR	3600428	Condition	got_offset == UT64_MAX	1494:5:44100:44121	3600341	0	True				
ANR	3600429	EqualityExpression	got_offset == UT64_MAX		3600341	0		==			
ANR	3600430	Identifier	got_offset		3600341	0					
ANR	3600431	Identifier	UT64_MAX		3600341	1					
ANR	3600432	CompoundStatement		13:29:323:323	3600341	1					
ANR	3600433	ReturnStatement	return UT64_MAX ;	1495:2:44128:44143	3600341	0	True				
ANR	3600434	Identifier	UT64_MAX		3600341	0					
ANR	3600435	IdentifierDeclStatement	ut64 of = REL_OFFSET - got_addr + got_offset ;	1498:1:44150:44194	3600341	8	True				
ANR	3600436	IdentifierDecl	of = REL_OFFSET - got_addr + got_offset		3600341	0					
ANR	3600437	IdentifierDeclType	ut64		3600341	0					
ANR	3600438	Identifier	of		3600341	1					
ANR	3600439	AssignmentExpression	of = REL_OFFSET - got_addr + got_offset		3600341	2		=			
ANR	3600440	Identifier	of		3600341	0					
ANR	3600441	AdditiveExpression	REL_OFFSET - got_addr + got_offset		3600341	1		-			
ANR	3600442	Identifier	REL_OFFSET		3600341	0					
ANR	3600443	AdditiveExpression	got_addr + got_offset		3600341	1		+			
ANR	3600444	Identifier	got_addr		3600341	0					
ANR	3600445	Identifier	got_offset		3600341	1					
ANR	3600446	SwitchStatement	switch ( REL_TYPE )		3600341	9					
ANR	3600447	Condition	REL_TYPE	1500:9:44206:44213	3600341	0	True				
ANR	3600448	Identifier	REL_TYPE		3600341	0					
ANR	3600449	CompoundStatement		19:19:415:415	3600341	1					
ANR	3600450	Label	case 1 :	1501:1:44219:44225	3600341	0	True				
ANR	3600451	Label	case R_386_GLOB_DAT :	1505:1:44345:44364	3600341	1	True				
ANR	3600452	Identifier	R_386_GLOB_DAT		3600341	0					
ANR	3600453	Label	case R_386_JMP_SLOT :	1506:1:44367:44386	3600341	2	True				
ANR	3600454	Identifier	R_386_JMP_SLOT		3600341	0					
ANR	3600455	IfStatement	if ( of > bin -> size || of + sizeof ( Elf_ ( Addr ) ) >= bin -> size )		3600341	3					
ANR	3600456	Condition	of > bin -> size || of + sizeof ( Elf_ ( Addr ) ) >= bin -> size	1507:6:44394:44448	3600341	0	True				
ANR	3600457	OrExpression	of > bin -> size || of + sizeof ( Elf_ ( Addr ) ) >= bin -> size		3600341	0		||			
ANR	3600458	RelationalExpression	of > bin -> size		3600341	0		>			
ANR	3600459	Identifier	of		3600341	0					
ANR	3600460	PtrMemberAccess	bin -> size		3600341	1					
ANR	3600461	Identifier	bin		3600341	0					
ANR	3600462	Identifier	size		3600341	1					
ANR	3600463	RelationalExpression	of + sizeof ( Elf_ ( Addr ) ) >= bin -> size		3600341	1		>=			
ANR	3600464	AdditiveExpression	of + sizeof ( Elf_ ( Addr ) )		3600341	0		+			
ANR	3600465	Identifier	of		3600341	0					
ANR	3600466	SizeofExpression	sizeof ( Elf_ ( Addr ) )		3600341	1					
ANR	3600467	Sizeof	sizeof		3600341	0					
ANR	3600468	CallExpression	Elf_ ( Addr )		3600341	1					
ANR	3600469	Callee	Elf_		3600341	0					
ANR	3600470	Identifier	Elf_		3600341	0					
ANR	3600471	ArgumentList	Addr		3600341	1					
ANR	3600472	Argument	Addr		3600341	0					
ANR	3600473	Identifier	Addr		3600341	0					
ANR	3600474	PtrMemberAccess	bin -> size		3600341	1					
ANR	3600475	Identifier	bin		3600341	0					
ANR	3600476	Identifier	size		3600341	1					
ANR	3600477	CompoundStatement		26:63:650:650	3600341	1					
ANR	3600478	ReturnStatement	return UT64_MAX ;	1508:3:44456:44471	3600341	0	True				
ANR	3600479	Identifier	UT64_MAX		3600341	0					
ANR	3600480	ExpressionStatement	"len = r_buf_read_at ( bin -> b , of , buf , sizeof ( Elf_ ( Addr ) ) )"	1511:2:44480:44538	3600341	4	True				
ANR	3600481	AssignmentExpression	"len = r_buf_read_at ( bin -> b , of , buf , sizeof ( Elf_ ( Addr ) ) )"		3600341	0		=			
ANR	3600482	Identifier	len		3600341	0					
ANR	3600483	CallExpression	"r_buf_read_at ( bin -> b , of , buf , sizeof ( Elf_ ( Addr ) ) )"		3600341	1					
ANR	3600484	Callee	r_buf_read_at		3600341	0					
ANR	3600485	Identifier	r_buf_read_at		3600341	0					
ANR	3600486	ArgumentList	bin -> b		3600341	1					
ANR	3600487	Argument	bin -> b		3600341	0					
ANR	3600488	PtrMemberAccess	bin -> b		3600341	0					
ANR	3600489	Identifier	bin		3600341	0					
ANR	3600490	Identifier	b		3600341	1					
ANR	3600491	Argument	of		3600341	1					
ANR	3600492	Identifier	of		3600341	0					
ANR	3600493	Argument	buf		3600341	2					
ANR	3600494	Identifier	buf		3600341	0					
ANR	3600495	Argument	sizeof ( Elf_ ( Addr ) )		3600341	3					
ANR	3600496	SizeofExpression	sizeof ( Elf_ ( Addr ) )		3600341	0					
ANR	3600497	Sizeof	sizeof		3600341	0					
ANR	3600498	CallExpression	Elf_ ( Addr )		3600341	1					
ANR	3600499	Callee	Elf_		3600341	0					
ANR	3600500	Identifier	Elf_		3600341	0					
ANR	3600501	ArgumentList	Addr		3600341	1					
ANR	3600502	Argument	Addr		3600341	0					
ANR	3600503	Identifier	Addr		3600341	0					
ANR	3600504	IfStatement	if ( len < - 1 )		3600341	5					
ANR	3600505	Condition	len < - 1	1512:6:44546:44553	3600341	0	True				
ANR	3600506	RelationalExpression	len < - 1		3600341	0		<			
ANR	3600507	Identifier	len		3600341	0					
ANR	3600508	UnaryOperationExpression	- 1		3600341	1					
ANR	3600509	UnaryOperator	-		3600341	0					
ANR	3600510	PrimaryExpression	1		3600341	1					
ANR	3600511	CompoundStatement		31:16:755:755	3600341	1					
ANR	3600512	ReturnStatement	return UT64_MAX ;	1513:3:44561:44576	3600341	0	True				
ANR	3600513	Identifier	UT64_MAX		3600341	0					
ANR	3600514	ExpressionStatement	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )	1515:2:44584:44669	3600341	6	True				
ANR	3600515	AssignmentExpression	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		3600341	0		=			
ANR	3600516	Identifier	plt_sym_addr		3600341	0					
ANR	3600517	ConditionalExpression	sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		3600341	1					
ANR	3600518	Condition	sizeof ( Elf_ ( Addr ) ) == 4		3600341	0					
ANR	3600519	EqualityExpression	sizeof ( Elf_ ( Addr ) ) == 4		3600341	0		==			
ANR	3600520	SizeofExpression	sizeof ( Elf_ ( Addr ) )		3600341	0					
ANR	3600521	Sizeof	sizeof		3600341	0					
ANR	3600522	CallExpression	Elf_ ( Addr )		3600341	1					
ANR	3600523	Callee	Elf_		3600341	0					
ANR	3600524	Identifier	Elf_		3600341	0					
ANR	3600525	ArgumentList	Addr		3600341	1					
ANR	3600526	Argument	Addr		3600341	0					
ANR	3600527	Identifier	Addr		3600341	0					
ANR	3600528	PrimaryExpression	4		3600341	1					
ANR	3600529	CallExpression	r_read_le32 ( buf )		3600341	1					
ANR	3600530	Callee	r_read_le32		3600341	0					
ANR	3600531	Identifier	r_read_le32		3600341	0					
ANR	3600532	ArgumentList	buf		3600341	1					
ANR	3600533	Argument	buf		3600341	0					
ANR	3600534	Identifier	buf		3600341	0					
ANR	3600535	CallExpression	r_read_le64 ( buf )		3600341	2					
ANR	3600536	Callee	r_read_le64		3600341	0					
ANR	3600537	Identifier	r_read_le64		3600341	0					
ANR	3600538	ArgumentList	buf		3600341	1					
ANR	3600539	Argument	buf		3600341	0					
ANR	3600540	Identifier	buf		3600341	0					
ANR	3600541	IfStatement	if ( ! plt_sym_addr )		3600341	7					
ANR	3600542	Condition	! plt_sym_addr	1519:6:44678:44690	3600341	0	True				
ANR	3600543	UnaryOperationExpression	! plt_sym_addr		3600341	0					
ANR	3600544	UnaryOperator	!		3600341	0					
ANR	3600545	Identifier	plt_sym_addr		3600341	1					
ANR	3600546	CompoundStatement		41:3:1018:1075	3600341	1					
ANR	3600547	IdentifierDeclStatement	"RBinElfSection * s = get_section_by_name ( bin , "".plt.got"" ) ;"	1522:3:44819:44876	3600341	0	True				
ANR	3600548	IdentifierDecl	"* s = get_section_by_name ( bin , "".plt.got"" )"		3600341	0					
ANR	3600549	IdentifierDeclType	RBinElfSection *		3600341	0					
ANR	3600550	Identifier	s		3600341	1					
ANR	3600551	AssignmentExpression	"* s = get_section_by_name ( bin , "".plt.got"" )"		3600341	2		=			
ANR	3600552	Identifier	s		3600341	0					
ANR	3600553	CallExpression	"get_section_by_name ( bin , "".plt.got"" )"		3600341	1					
ANR	3600554	Callee	get_section_by_name		3600341	0					
ANR	3600555	Identifier	get_section_by_name		3600341	0					
ANR	3600556	ArgumentList	bin		3600341	1					
ANR	3600557	Argument	bin		3600341	0					
ANR	3600558	Identifier	bin		3600341	0					
ANR	3600559	Argument	""".plt.got"""		3600341	1					
ANR	3600560	PrimaryExpression	""".plt.got"""		3600341	0					
ANR	3600561	IfStatement	if ( Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO || ! s )		3600341	1					
ANR	3600562	Condition	Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO || ! s	1523:7:44885:44940	3600341	0	True				
ANR	3600563	OrExpression	Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO || ! s		3600341	0		||			
ANR	3600564	RelationalExpression	Elf_ ( r_bin_elf_has_relro ) ( bin ) < R_ELF_PART_RELRO		3600341	0		<			
ANR	3600565	CallExpression	Elf_ ( r_bin_elf_has_relro ) ( bin )		3600341	0					
ANR	3600566	Callee	Elf_ ( r_bin_elf_has_relro )		3600341	0					
ANR	3600567	CallExpression	Elf_ ( r_bin_elf_has_relro )		3600341	0					
ANR	3600568	Callee	Elf_		3600341	0					
ANR	3600569	Identifier	Elf_		3600341	0					
ANR	3600570	ArgumentList	r_bin_elf_has_relro		3600341	1					
ANR	3600571	Argument	r_bin_elf_has_relro		3600341	0					
ANR	3600572	Identifier	r_bin_elf_has_relro		3600341	0					
ANR	3600573	ArgumentList	bin		3600341	1					
ANR	3600574	Argument	bin		3600341	0					
ANR	3600575	Identifier	bin		3600341	0					
ANR	3600576	Identifier	R_ELF_PART_RELRO		3600341	1					
ANR	3600577	UnaryOperationExpression	! s		3600341	1					
ANR	3600578	UnaryOperator	!		3600341	0					
ANR	3600579	Identifier	s		3600341	1					
ANR	3600580	CompoundStatement		42:65:1142:1142	3600341	1					
ANR	3600581	ReturnStatement	return 0 ;	1524:4:44949:44957	3600341	0	True				
ANR	3600582	PrimaryExpression	0		3600341	0					
ANR	3600583	ExpressionStatement	plt_addr = s -> offset	1526:3:44967:44987	3600341	2	True				
ANR	3600584	AssignmentExpression	plt_addr = s -> offset		3600341	0		=			
ANR	3600585	Identifier	plt_addr		3600341	0					
ANR	3600586	PtrMemberAccess	s -> offset		3600341	1					
ANR	3600587	Identifier	s		3600341	0					
ANR	3600588	Identifier	offset		3600341	1					
ANR	3600589	ExpressionStatement	of = of + got_addr - got_offset	1527:3:44992:45023	3600341	3	True				
ANR	3600590	AssignmentExpression	of = of + got_addr - got_offset		3600341	0		=			
ANR	3600591	Identifier	of		3600341	0					
ANR	3600592	AdditiveExpression	of + got_addr - got_offset		3600341	1		+			
ANR	3600593	Identifier	of		3600341	0					
ANR	3600594	AdditiveExpression	got_addr - got_offset		3600341	1		-			
ANR	3600595	Identifier	got_addr		3600341	0					
ANR	3600596	Identifier	got_offset		3600341	1					
ANR	3600597	WhileStatement	while ( plt_addr + 2 + 4 < s -> offset + s -> size )		3600341	4					
ANR	3600598	Condition	plt_addr + 2 + 4 < s -> offset + s -> size	1528:10:45035:45072	3600341	0	True				
ANR	3600599	RelationalExpression	plt_addr + 2 + 4 < s -> offset + s -> size		3600341	0		<			
ANR	3600600	AdditiveExpression	plt_addr + 2 + 4		3600341	0		+			
ANR	3600601	Identifier	plt_addr		3600341	0					
ANR	3600602	AdditiveExpression	2 + 4		3600341	1		+			
ANR	3600603	PrimaryExpression	2		3600341	0					
ANR	3600604	PrimaryExpression	4		3600341	1					
ANR	3600605	AdditiveExpression	s -> offset + s -> size		3600341	1		+			
ANR	3600606	PtrMemberAccess	s -> offset		3600341	0					
ANR	3600607	Identifier	s		3600341	0					
ANR	3600608	Identifier	offset		3600341	1					
ANR	3600609	PtrMemberAccess	s -> size		3600341	1					
ANR	3600610	Identifier	s		3600341	0					
ANR	3600611	Identifier	size		3600341	1					
ANR	3600612	CompoundStatement		47:50:1274:1274	3600341	1					
ANR	3600613	ExpressionStatement	"len = r_buf_read_at ( bin -> b , plt_addr + 2 , buf , 4 )"	1544:4:45589:45639	3600341	0	True				
ANR	3600614	AssignmentExpression	"len = r_buf_read_at ( bin -> b , plt_addr + 2 , buf , 4 )"		3600341	0		=			
ANR	3600615	Identifier	len		3600341	0					
ANR	3600616	CallExpression	"r_buf_read_at ( bin -> b , plt_addr + 2 , buf , 4 )"		3600341	1					
ANR	3600617	Callee	r_buf_read_at		3600341	0					
ANR	3600618	Identifier	r_buf_read_at		3600341	0					
ANR	3600619	ArgumentList	bin -> b		3600341	1					
ANR	3600620	Argument	bin -> b		3600341	0					
ANR	3600621	PtrMemberAccess	bin -> b		3600341	0					
ANR	3600622	Identifier	bin		3600341	0					
ANR	3600623	Identifier	b		3600341	1					
ANR	3600624	Argument	plt_addr + 2		3600341	1					
ANR	3600625	AdditiveExpression	plt_addr + 2		3600341	0		+			
ANR	3600626	Identifier	plt_addr		3600341	0					
ANR	3600627	PrimaryExpression	2		3600341	1					
ANR	3600628	Argument	buf		3600341	2					
ANR	3600629	Identifier	buf		3600341	0					
ANR	3600630	Argument	4		3600341	3					
ANR	3600631	PrimaryExpression	4		3600341	0					
ANR	3600632	IfStatement	if ( len < - 1 )		3600341	1					
ANR	3600633	Condition	len < - 1	1545:8:45649:45656	3600341	0	True				
ANR	3600634	RelationalExpression	len < - 1		3600341	0		<			
ANR	3600635	Identifier	len		3600341	0					
ANR	3600636	UnaryOperationExpression	- 1		3600341	1					
ANR	3600637	UnaryOperator	-		3600341	0					
ANR	3600638	PrimaryExpression	1		3600341	1					
ANR	3600639	CompoundStatement		64:18:1858:1858	3600341	1					
ANR	3600640	ReturnStatement	return UT64_MAX ;	1546:5:45666:45681	3600341	0	True				
ANR	3600641	Identifier	UT64_MAX		3600341	0					
ANR	3600642	ExpressionStatement	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )	1548:4:45693:45782	3600341	2	True				
ANR	3600643	AssignmentExpression	plt_sym_addr = sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		3600341	0		=			
ANR	3600644	Identifier	plt_sym_addr		3600341	0					
ANR	3600645	ConditionalExpression	sizeof ( Elf_ ( Addr ) ) == 4 ? r_read_le32 ( buf ) : r_read_le64 ( buf )		3600341	1					
ANR	3600646	Condition	sizeof ( Elf_ ( Addr ) ) == 4		3600341	0					
ANR	3600647	EqualityExpression	sizeof ( Elf_ ( Addr ) ) == 4		3600341	0		==			
ANR	3600648	SizeofExpression	sizeof ( Elf_ ( Addr ) )		3600341	0					
ANR	3600649	Sizeof	sizeof		3600341	0					
ANR	3600650	CallExpression	Elf_ ( Addr )		3600341	1					
ANR	3600651	Callee	Elf_		3600341	0					
ANR	3600652	Identifier	Elf_		3600341	0					
ANR	3600653	ArgumentList	Addr		3600341	1					
ANR	3600654	Argument	Addr		3600341	0					
ANR	3600655	Identifier	Addr		3600341	0					
ANR	3600656	PrimaryExpression	4		3600341	1					
ANR	3600657	CallExpression	r_read_le32 ( buf )		3600341	1					
ANR	3600658	Callee	r_read_le32		3600341	0					
ANR	3600659	Identifier	r_read_le32		3600341	0					
ANR	3600660	ArgumentList	buf		3600341	1					
ANR	3600661	Argument	buf		3600341	0					
ANR	3600662	Identifier	buf		3600341	0					
ANR	3600663	CallExpression	r_read_le64 ( buf )		3600341	2					
ANR	3600664	Callee	r_read_le64		3600341	0					
ANR	3600665	Identifier	r_read_le64		3600341	0					
ANR	3600666	ArgumentList	buf		3600341	1					
ANR	3600667	Argument	buf		3600341	0					
ANR	3600668	Identifier	buf		3600341	0					
ANR	3600669	IfStatement	"if ( ( plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr ) ) == of )"		3600341	3					
ANR	3600670	Condition	"( plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr ) ) == of"	1553:8:45816:45877	3600341	0	True				
ANR	3600671	EqualityExpression	"( plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr ) ) == of"		3600341	0		==			
ANR	3600672	AdditiveExpression	"plt_addr + 6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr )"		3600341	0		+			
ANR	3600673	Identifier	plt_addr		3600341	0					
ANR	3600674	AdditiveExpression	"6 + Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr )"		3600341	1		+			
ANR	3600675	PrimaryExpression	6		3600341	0					
ANR	3600676	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , plt_sym_addr )"		3600341	1					
ANR	3600677	Callee	Elf_ ( r_bin_elf_v2p )		3600341	0					
ANR	3600678	CallExpression	Elf_ ( r_bin_elf_v2p )		3600341	0					
ANR	3600679	Callee	Elf_		3600341	0					
ANR	3600680	Identifier	Elf_		3600341	0					
ANR	3600681	ArgumentList	r_bin_elf_v2p		3600341	1					
ANR	3600682	Argument	r_bin_elf_v2p		3600341	0					
ANR	3600683	Identifier	r_bin_elf_v2p		3600341	0					
ANR	3600684	ArgumentList	bin		3600341	1					
ANR	3600685	Argument	bin		3600341	0					
ANR	3600686	Identifier	bin		3600341	0					
ANR	3600687	Argument	plt_sym_addr		3600341	1					
ANR	3600688	Identifier	plt_sym_addr		3600341	0					
ANR	3600689	Identifier	of		3600341	1					
ANR	3600690	CompoundStatement		72:72:2079:2079	3600341	1					
ANR	3600691	ReturnStatement	return plt_addr ;	1554:5:45887:45902	3600341	0	True				
ANR	3600692	Identifier	plt_addr		3600341	0					
ANR	3600693	IfStatement	if ( plt_sym_addr == of )		3600341	4					
ANR	3600694	Condition	plt_sym_addr == of	1556:8:45918:45935	3600341	0	True				
ANR	3600695	EqualityExpression	plt_sym_addr == of		3600341	0		==			
ANR	3600696	Identifier	plt_sym_addr		3600341	0					
ANR	3600697	Identifier	of		3600341	1					
ANR	3600698	CompoundStatement		75:28:2137:2137	3600341	1					
ANR	3600699	ReturnStatement	return plt_addr ;	1557:5:45945:45960	3600341	0	True				
ANR	3600700	Identifier	plt_addr		3600341	0					
ANR	3600701	ExpressionStatement	plt_addr += 8	1559:4:45972:45985	3600341	5	True				
ANR	3600702	AssignmentExpression	plt_addr += 8		3600341	0		+=			
ANR	3600703	Identifier	plt_addr		3600341	0					
ANR	3600704	PrimaryExpression	8		3600341	1					
ANR	3600705	ReturnStatement	return plt_sym_addr ;	1561:3:45995:46014	3600341	5	True				
ANR	3600706	Identifier	plt_sym_addr		3600341	0					
ANR	3600707	ElseStatement	else		3600341	0					
ANR	3600708	CompoundStatement		82:3:2229:2294	3600341	0					
ANR	3600709	IdentifierDeclStatement	"ut64 plt_sym_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr ) ;"	1563:3:46030:46095	3600341	0	True				
ANR	3600710	IdentifierDecl	"plt_sym_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr )"		3600341	0					
ANR	3600711	IdentifierDeclType	ut64		3600341	0					
ANR	3600712	Identifier	plt_sym_offset		3600341	1					
ANR	3600713	AssignmentExpression	"plt_sym_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr )"		3600341	2		=			
ANR	3600714	Identifier	plt_sym_offset		3600341	0					
ANR	3600715	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , plt_sym_addr )"		3600341	1					
ANR	3600716	Callee	Elf_ ( r_bin_elf_v2p_new )		3600341	0					
ANR	3600717	CallExpression	Elf_ ( r_bin_elf_v2p_new )		3600341	0					
ANR	3600718	Callee	Elf_		3600341	0					
ANR	3600719	Identifier	Elf_		3600341	0					
ANR	3600720	ArgumentList	r_bin_elf_v2p_new		3600341	1					
ANR	3600721	Argument	r_bin_elf_v2p_new		3600341	0					
ANR	3600722	Identifier	r_bin_elf_v2p_new		3600341	0					
ANR	3600723	ArgumentList	bin		3600341	1					
ANR	3600724	Argument	bin		3600341	0					
ANR	3600725	Identifier	bin		3600341	0					
ANR	3600726	Argument	plt_sym_addr		3600341	1					
ANR	3600727	Identifier	plt_sym_addr		3600341	0					
ANR	3600728	IfStatement	if ( plt_sym_offset != UT64_MAX )		3600341	1					
ANR	3600729	Condition	plt_sym_offset != UT64_MAX	1564:7:46104:46129	3600341	0	True				
ANR	3600730	EqualityExpression	plt_sym_offset != UT64_MAX		3600341	0		!=			
ANR	3600731	Identifier	plt_sym_offset		3600341	0					
ANR	3600732	Identifier	UT64_MAX		3600341	1					
ANR	3600733	CompoundStatement		83:35:2331:2331	3600341	1					
ANR	3600734	ExpressionStatement	"len = r_buf_read_at ( bin -> b , plt_sym_offset - 6 , buf , sizeof ( buf ) )"	1565:4:46138:46205	3600341	0	True				
ANR	3600735	AssignmentExpression	"len = r_buf_read_at ( bin -> b , plt_sym_offset - 6 , buf , sizeof ( buf ) )"		3600341	0		=			
ANR	3600736	Identifier	len		3600341	0					
ANR	3600737	CallExpression	"r_buf_read_at ( bin -> b , plt_sym_offset - 6 , buf , sizeof ( buf ) )"		3600341	1					
ANR	3600738	Callee	r_buf_read_at		3600341	0					
ANR	3600739	Identifier	r_buf_read_at		3600341	0					
ANR	3600740	ArgumentList	bin -> b		3600341	1					
ANR	3600741	Argument	bin -> b		3600341	0					
ANR	3600742	PtrMemberAccess	bin -> b		3600341	0					
ANR	3600743	Identifier	bin		3600341	0					
ANR	3600744	Identifier	b		3600341	1					
ANR	3600745	Argument	plt_sym_offset - 6		3600341	1					
ANR	3600746	AdditiveExpression	plt_sym_offset - 6		3600341	0		-			
ANR	3600747	Identifier	plt_sym_offset		3600341	0					
ANR	3600748	PrimaryExpression	6		3600341	1					
ANR	3600749	Argument	buf		3600341	2					
ANR	3600750	Identifier	buf		3600341	0					
ANR	3600751	Argument	sizeof ( buf )		3600341	3					
ANR	3600752	SizeofExpression	sizeof ( buf )		3600341	0					
ANR	3600753	Sizeof	sizeof		3600341	0					
ANR	3600754	SizeofOperand	buf		3600341	1					
ANR	3600755	IfStatement	if ( len > 0 && buf [ 0 ] != 0xff )		3600341	1					
ANR	3600756	Condition	len > 0 && buf [ 0 ] != 0xff	1566:8:46215:46239	3600341	0	True				
ANR	3600757	AndExpression	len > 0 && buf [ 0 ] != 0xff		3600341	0		&&			
ANR	3600758	RelationalExpression	len > 0		3600341	0		>			
ANR	3600759	Identifier	len		3600341	0					
ANR	3600760	PrimaryExpression	0		3600341	1					
ANR	3600761	EqualityExpression	buf [ 0 ] != 0xff		3600341	1		!=			
ANR	3600762	ArrayIndexing	buf [ 0 ]		3600341	0					
ANR	3600763	Identifier	buf		3600341	0					
ANR	3600764	PrimaryExpression	0		3600341	1					
ANR	3600765	PrimaryExpression	0xff		3600341	1					
ANR	3600766	CompoundStatement		85:35:2441:2441	3600341	1					
ANR	3600767	IfStatement	if ( pltsec_section )		3600341	0					
ANR	3600768	Condition	pltsec_section	1582:9:46674:46687	3600341	0	True				
ANR	3600769	Identifier	pltsec_section		3600341	0					
ANR	3600770	CompoundStatement		101:25:2889:2889	3600341	1					
ANR	3600771	ReturnStatement	return pltsec_section -> rva + rel -> k * 16 ;	1586:6:46820:46860	3600341	0	True				
ANR	3600772	AdditiveExpression	pltsec_section -> rva + rel -> k * 16		3600341	0		+			
ANR	3600773	PtrMemberAccess	pltsec_section -> rva		3600341	0					
ANR	3600774	Identifier	pltsec_section		3600341	0					
ANR	3600775	Identifier	rva		3600341	1					
ANR	3600776	MultiplicativeExpression	rel -> k * 16		3600341	1		*			
ANR	3600777	PtrMemberAccess	rel -> k		3600341	0					
ANR	3600778	Identifier	rel		3600341	0					
ANR	3600779	Identifier	k		3600341	1					
ANR	3600780	PrimaryExpression	16		3600341	1					
ANR	3600781	ReturnStatement	return plt_sym_addr ;	1590:5:46950:46969	3600341	1	True				
ANR	3600782	Identifier	plt_sym_addr		3600341	0					
ANR	3600783	ReturnStatement	return plt_sym_addr - 6 ;	1599:3:47118:47141	3600341	2	True				
ANR	3600784	AdditiveExpression	plt_sym_addr - 6		3600341	0		-			
ANR	3600785	Identifier	plt_sym_addr		3600341	0					
ANR	3600786	PrimaryExpression	6		3600341	1					
ANR	3600787	Label	default :	1601:1:47148:47155	3600341	8	True				
ANR	3600788	Identifier	default		3600341	0					
ANR	3600789	ExpressionStatement	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"	1602:2:47159:47225	3600341	9	True				
ANR	3600790	CallExpression	"bprintf ( ""Unsupported relocation type for imports %d\\n"" , REL_TYPE )"		3600341	0					
ANR	3600791	Callee	bprintf		3600341	0					
ANR	3600792	Identifier	bprintf		3600341	0					
ANR	3600793	ArgumentList	"""Unsupported relocation type for imports %d\\n"""		3600341	1					
ANR	3600794	Argument	"""Unsupported relocation type for imports %d\\n"""		3600341	0					
ANR	3600795	PrimaryExpression	"""Unsupported relocation type for imports %d\\n"""		3600341	0					
ANR	3600796	Argument	REL_TYPE		3600341	1					
ANR	3600797	Identifier	REL_TYPE		3600341	0					
ANR	3600798	ReturnStatement	return of ;	1603:2:47229:47238	3600341	10	True				
ANR	3600799	Identifier	of		3600341	0					
ANR	3600800	ReturnType	static ut64		3600341	1					
ANR	3600801	Identifier	get_import_addr_x86		3600341	2					
ANR	3600802	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		3600341	3					
ANR	3600803	Parameter	ELFOBJ * bin	1482:32:43736:43746	3600341	0	True				
ANR	3600804	ParameterType	ELFOBJ *		3600341	0					
ANR	3600805	Identifier	bin		3600341	1					
ANR	3600806	Parameter	struct ht_rel_t * rel	1482:45:43749:43768	3600341	1	True				
ANR	3600807	ParameterType	struct ht_rel_t *		3600341	0					
ANR	3600808	Identifier	rel		3600341	1					
ANR	3600809	Parameter	RBinElfSection * plt_section	1482:67:43771:43797	3600341	2	True				
ANR	3600810	ParameterType	RBinElfSection *		3600341	0					
ANR	3600811	Identifier	plt_section		3600341	1					
ANR	3600812	CFGEntryNode	ENTRY		3600341		True				
ANR	3600813	CFGExitNode	EXIT		3600341		True				
ANR	3600814	Symbol	REL_TYPE		3600341						
ANR	3600815	Symbol	bin -> size		3600341						
ANR	3600816	Symbol	bin -> b		3600341						
ANR	3600817	Symbol	s -> size		3600341						
ANR	3600818	Symbol	got_addr		3600341						
ANR	3600819	Symbol	* rel		3600341						
ANR	3600820	Symbol	r_read_le64		3600341						
ANR	3600821	Symbol	bin		3600341						
ANR	3600822	Symbol	pltsec_section		3600341						
ANR	3600823	Symbol	s -> offset		3600341						
ANR	3600824	Symbol	Addr		3600341						
ANR	3600825	Symbol	got_offset		3600341						
ANR	3600826	Symbol	* bin		3600341						
ANR	3600827	Symbol	plt_sym_addr		3600341						
ANR	3600828	Symbol	REL_OFFSET		3600341						
ANR	3600829	Symbol	len		3600341						
ANR	3600830	Symbol	plt_section		3600341						
ANR	3600831	Symbol	of		3600341						
ANR	3600832	Symbol	rel		3600341						
ANR	3600833	Symbol	r_bin_elf_has_relro		3600341						
ANR	3600834	Symbol	UT64_MAX		3600341						
ANR	3600835	Symbol	r_bin_elf_v2p		3600341						
ANR	3600836	Symbol	rel -> k		3600341						
ANR	3600837	Symbol	Elf_		3600341						
ANR	3600838	Symbol	* pltsec_section		3600341						
ANR	3600839	Symbol	* buf		3600341						
ANR	3600840	Symbol	r_read_le32		3600341						
ANR	3600841	Symbol	plt_addr		3600341						
ANR	3600842	Symbol	pltsec_section -> rva		3600341						
ANR	3600843	Symbol	get_section_by_name		3600341						
ANR	3600844	Symbol	get_got_addr		3600341						
ANR	3600845	Symbol	buf		3600341						
ANR	3600846	Symbol	s		3600341						
ANR	3600847	Symbol	R_ELF_PART_RELRO		3600341						
ANR	3600848	Symbol	r_bin_elf_v2p_new		3600341						
ANR	3600849	Symbol	r_buf_read_at		3600341						
ANR	3600850	Symbol	plt_sym_offset		3600341						
ANR	3600851	Symbol	* s		3600341						
ANR	3600852	Function	get_import_addr_mips	1607:0:47246:48176							
ANR	3600853	FunctionDef	"get_import_addr_mips (ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section)"		3600852	0					
ANR	3600854	CompoundStatement		1607:97:47343:48176	3600852	0					
ANR	3600855	IdentifierDeclStatement	"RBinElfSection * s = get_section_by_name ( bin , "".rela.plt"" ) ;"	1608:1:47346:47404	3600852	0	True				
ANR	3600856	IdentifierDecl	"* s = get_section_by_name ( bin , "".rela.plt"" )"		3600852	0					
ANR	3600857	IdentifierDeclType	RBinElfSection *		3600852	0					
ANR	3600858	Identifier	s		3600852	1					
ANR	3600859	AssignmentExpression	"* s = get_section_by_name ( bin , "".rela.plt"" )"		3600852	2		=			
ANR	3600860	Identifier	s		3600852	0					
ANR	3600861	CallExpression	"get_section_by_name ( bin , "".rela.plt"" )"		3600852	1					
ANR	3600862	Callee	get_section_by_name		3600852	0					
ANR	3600863	Identifier	get_section_by_name		3600852	0					
ANR	3600864	ArgumentList	bin		3600852	1					
ANR	3600865	Argument	bin		3600852	0					
ANR	3600866	Identifier	bin		3600852	0					
ANR	3600867	Argument	""".rela.plt"""		3600852	1					
ANR	3600868	PrimaryExpression	""".rela.plt"""		3600852	0					
ANR	3600869	IfStatement	if ( s )		3600852	1					
ANR	3600870	Condition	s	1609:5:47411:47411	3600852	0	True				
ANR	3600871	Identifier	s		3600852	0					
ANR	3600872	CompoundStatement		7:2:146:218	3600852	1					
ANR	3600873	IdentifierDeclStatement	ut8 buf [ 1024 ] ;	1610:2:47418:47431	3600852	0	True				
ANR	3600874	IdentifierDecl	buf [ 1024 ]		3600852	0					
ANR	3600875	IdentifierDeclType	ut8 [ 1024 ]		3600852	0					
ANR	3600876	Identifier	buf		3600852	1					
ANR	3600877	PrimaryExpression	1024		3600852	2					
ANR	3600878	IdentifierDeclStatement	const ut8 * base ;	1611:2:47435:47450	3600852	1	True				
ANR	3600879	IdentifierDecl	* base		3600852	0					
ANR	3600880	IdentifierDeclType	const ut8 *		3600852	0					
ANR	3600881	Identifier	base		3600852	1					
ANR	3600882	IdentifierDeclStatement	ut64 plt_addr = s -> rva + s -> size ;	1612:2:47454:47486	3600852	2	True				
ANR	3600883	IdentifierDecl	plt_addr = s -> rva + s -> size		3600852	0					
ANR	3600884	IdentifierDeclType	ut64		3600852	0					
ANR	3600885	Identifier	plt_addr		3600852	1					
ANR	3600886	AssignmentExpression	plt_addr = s -> rva + s -> size		3600852	2		=			
ANR	3600887	Identifier	plt_addr		3600852	0					
ANR	3600888	AdditiveExpression	s -> rva + s -> size		3600852	1		+			
ANR	3600889	PtrMemberAccess	s -> rva		3600852	0					
ANR	3600890	Identifier	s		3600852	0					
ANR	3600891	Identifier	rva		3600852	1					
ANR	3600892	PtrMemberAccess	s -> size		3600852	1					
ANR	3600893	Identifier	s		3600852	0					
ANR	3600894	Identifier	size		3600852	1					
ANR	3600895	IdentifierDeclStatement	"int len = r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) ) ;"	1613:2:47490:47562	3600852	3	True				
ANR	3600896	IdentifierDecl	"len = r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) )"		3600852	0					
ANR	3600897	IdentifierDeclType	int		3600852	0					
ANR	3600898	Identifier	len		3600852	1					
ANR	3600899	AssignmentExpression	"len = r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) )"		3600852	2		=			
ANR	3600900	Identifier	len		3600852	0					
ANR	3600901	CallExpression	"r_buf_read_at ( bin -> b , s -> offset + s -> size , buf , sizeof ( buf ) )"		3600852	1					
ANR	3600902	Callee	r_buf_read_at		3600852	0					
ANR	3600903	Identifier	r_buf_read_at		3600852	0					
ANR	3600904	ArgumentList	bin -> b		3600852	1					
ANR	3600905	Argument	bin -> b		3600852	0					
ANR	3600906	PtrMemberAccess	bin -> b		3600852	0					
ANR	3600907	Identifier	bin		3600852	0					
ANR	3600908	Identifier	b		3600852	1					
ANR	3600909	Argument	s -> offset + s -> size		3600852	1					
ANR	3600910	AdditiveExpression	s -> offset + s -> size		3600852	0		+			
ANR	3600911	PtrMemberAccess	s -> offset		3600852	0					
ANR	3600912	Identifier	s		3600852	0					
ANR	3600913	Identifier	offset		3600852	1					
ANR	3600914	PtrMemberAccess	s -> size		3600852	1					
ANR	3600915	Identifier	s		3600852	0					
ANR	3600916	Identifier	size		3600852	1					
ANR	3600917	Argument	buf		3600852	2					
ANR	3600918	Identifier	buf		3600852	0					
ANR	3600919	Argument	sizeof ( buf )		3600852	3					
ANR	3600920	SizeofExpression	sizeof ( buf )		3600852	0					
ANR	3600921	Sizeof	sizeof		3600852	0					
ANR	3600922	SizeofOperand	buf		3600852	1					
ANR	3600923	IfStatement	if ( len != sizeof ( buf ) )		3600852	4					
ANR	3600924	Condition	len != sizeof ( buf )	1614:6:47570:47588	3600852	0	True				
ANR	3600925	EqualityExpression	len != sizeof ( buf )		3600852	0		!=			
ANR	3600926	Identifier	len		3600852	0					
ANR	3600927	SizeofExpression	sizeof ( buf )		3600852	1					
ANR	3600928	Sizeof	sizeof		3600852	0					
ANR	3600929	SizeofOperand	buf		3600852	1					
ANR	3600930	CompoundStatement		8:27:247:247	3600852	1					
ANR	3600931	ExpressionStatement	"base = r_mem_mem_aligned ( buf , sizeof ( buf ) , ( const ut8 * ) ""\\x3c\\x0f\\x00"" , 3 , 4 )"	1617:2:47610:47689	3600852	5	True				
ANR	3600932	AssignmentExpression	"base = r_mem_mem_aligned ( buf , sizeof ( buf ) , ( const ut8 * ) ""\\x3c\\x0f\\x00"" , 3 , 4 )"		3600852	0		=			
ANR	3600933	Identifier	base		3600852	0					
ANR	3600934	CallExpression	"r_mem_mem_aligned ( buf , sizeof ( buf ) , ( const ut8 * ) ""\\x3c\\x0f\\x00"" , 3 , 4 )"		3600852	1					
ANR	3600935	Callee	r_mem_mem_aligned		3600852	0					
ANR	3600936	Identifier	r_mem_mem_aligned		3600852	0					
ANR	3600937	ArgumentList	buf		3600852	1					
ANR	3600938	Argument	buf		3600852	0					
ANR	3600939	Identifier	buf		3600852	0					
ANR	3600940	Argument	sizeof ( buf )		3600852	1					
ANR	3600941	SizeofExpression	sizeof ( buf )		3600852	0					
ANR	3600942	Sizeof	sizeof		3600852	0					
ANR	3600943	SizeofOperand	buf		3600852	1					
ANR	3600944	Argument	"( const ut8 * ) ""\\x3c\\x0f\\x00"""		3600852	2					
ANR	3600945	CastExpression	"( const ut8 * ) ""\\x3c\\x0f\\x00"""		3600852	0					
ANR	3600946	CastTarget	const ut8 *		3600852	0					
ANR	3600947	PrimaryExpression	"""\\x3c\\x0f\\x00"""		3600852	1					
ANR	3600948	Argument	3		3600852	3					
ANR	3600949	PrimaryExpression	3		3600852	0					
ANR	3600950	Argument	4		3600852	4					
ANR	3600951	PrimaryExpression	4		3600852	0					
ANR	3600952	IfStatement	if ( base )		3600852	6					
ANR	3600953	Condition	base	1618:6:47697:47700	3600852	0	True				
ANR	3600954	Identifier	base		3600852	0					
ANR	3600955	CompoundStatement		12:12:359:359	3600852	1					
ANR	3600956	ExpressionStatement	plt_addr += ( int ) ( size_t ) ( base - buf )	1619:3:47708:47746	3600852	0	True				
ANR	3600957	AssignmentExpression	plt_addr += ( int ) ( size_t ) ( base - buf )		3600852	0		+=			
ANR	3600958	Identifier	plt_addr		3600852	0					
ANR	3600959	CastExpression	( int ) ( size_t ) ( base - buf )		3600852	1					
ANR	3600960	CastTarget	int		3600852	0					
ANR	3600961	CastExpression	( size_t ) ( base - buf )		3600852	1					
ANR	3600962	CastTarget	size_t		3600852	0					
ANR	3600963	AdditiveExpression	base - buf		3600852	1		-			
ANR	3600964	Identifier	base		3600852	0					
ANR	3600965	Identifier	buf		3600852	1					
ANR	3600966	ElseStatement	else		3600852	0					
ANR	3600967	CompoundStatement		14:9:413:413	3600852	0					
ANR	3600968	ExpressionStatement	plt_addr += MIPS_PLT_OFFSET + 8	1621:3:47762:47793	3600852	0	True				
ANR	3600969	AssignmentExpression	plt_addr += MIPS_PLT_OFFSET + 8		3600852	0		+=			
ANR	3600970	Identifier	plt_addr		3600852	0					
ANR	3600971	AdditiveExpression	MIPS_PLT_OFFSET + 8		3600852	1		+			
ANR	3600972	Identifier	MIPS_PLT_OFFSET		3600852	0					
ANR	3600973	PrimaryExpression	8		3600852	1					
ANR	3600974	ExpressionStatement	plt_addr += rel -> k * 16	1623:2:47819:47842	3600852	7	True				
ANR	3600975	AssignmentExpression	plt_addr += rel -> k * 16		3600852	0		+=			
ANR	3600976	Identifier	plt_addr		3600852	0					
ANR	3600977	MultiplicativeExpression	rel -> k * 16		3600852	1		*			
ANR	3600978	PtrMemberAccess	rel -> k		3600852	0					
ANR	3600979	Identifier	rel		3600852	0					
ANR	3600980	Identifier	k		3600852	1					
ANR	3600981	PrimaryExpression	16		3600852	1					
ANR	3600982	ReturnStatement	return plt_addr ;	1624:2:47846:47861	3600852	8	True				
ANR	3600983	Identifier	plt_addr		3600852	0					
ANR	3600984	IfStatement	if ( plt_section )		3600852	2					
ANR	3600985	Condition	plt_section	1626:5:47871:47881	3600852	0	True				
ANR	3600986	Identifier	plt_section		3600852	0					
ANR	3600987	CompoundStatement		22:2:590:619	3600852	1					
ANR	3600988	IdentifierDeclStatement	const int sizeOfProcedureLinkageTable = 32 ;	1627:2:47888:47930	3600852	0	True				
ANR	3600989	IdentifierDecl	sizeOfProcedureLinkageTable = 32		3600852	0					
ANR	3600990	IdentifierDeclType	const int		3600852	0					
ANR	3600991	Identifier	sizeOfProcedureLinkageTable		3600852	1					
ANR	3600992	AssignmentExpression	sizeOfProcedureLinkageTable = 32		3600852	2		=			
ANR	3600993	Identifier	sizeOfProcedureLinkageTable		3600852	0					
ANR	3600994	PrimaryExpression	32		3600852	1					
ANR	3600995	IdentifierDeclStatement	const int sizeOfPltEntry = 16 ;	1628:2:47934:47963	3600852	1	True				
ANR	3600996	IdentifierDecl	sizeOfPltEntry = 16		3600852	0					
ANR	3600997	IdentifierDeclType	const int		3600852	0					
ANR	3600998	Identifier	sizeOfPltEntry		3600852	1					
ANR	3600999	AssignmentExpression	sizeOfPltEntry = 16		3600852	2		=			
ANR	3601000	Identifier	sizeOfPltEntry		3600852	0					
ANR	3601001	PrimaryExpression	16		3600852	1					
ANR	3601002	ReturnStatement	return plt_section -> rva + sizeOfProcedureLinkageTable + ( rel -> k * sizeOfPltEntry ) ;	1629:2:47967:48048	3600852	2	True				
ANR	3601003	AdditiveExpression	plt_section -> rva + sizeOfProcedureLinkageTable + ( rel -> k * sizeOfPltEntry )		3600852	0		+			
ANR	3601004	PtrMemberAccess	plt_section -> rva		3600852	0					
ANR	3601005	Identifier	plt_section		3600852	0					
ANR	3601006	Identifier	rva		3600852	1					
ANR	3601007	AdditiveExpression	sizeOfProcedureLinkageTable + ( rel -> k * sizeOfPltEntry )		3600852	1		+			
ANR	3601008	Identifier	sizeOfProcedureLinkageTable		3600852	0					
ANR	3601009	MultiplicativeExpression	rel -> k * sizeOfPltEntry		3600852	1		*			
ANR	3601010	PtrMemberAccess	rel -> k		3600852	0					
ANR	3601011	Identifier	rel		3600852	0					
ANR	3601012	Identifier	k		3600852	1					
ANR	3601013	Identifier	sizeOfPltEntry		3600852	1					
ANR	3601014	Statement	eprintf	1632:1:48055:48061	3600852	3	True				
ANR	3601015	Statement	(	1632:9:48063:48063	3600852	4	True				
ANR	3601016	Statement	"""Unsupported relocs type %"""	1632:10:48064:48090	3600852	5	True				
ANR	3601017	Statement	PFMT64u	1632:38:48092:48098	3600852	6	True				
ANR	3601018	Statement	""" for arch %d\\n"""	1632:46:48100:48115	3600852	7	True				
ANR	3601019	Statement	","	1632:62:48116:48116	3600852	8	True				
ANR	3601020	Statement	(	1633:2:48120:48120	3600852	9	True				
ANR	3601021	Statement	ut64	1633:3:48121:48124	3600852	10	True				
ANR	3601022	Statement	)	1633:7:48125:48125	3600852	11	True				
ANR	3601023	Statement	REL_TYPE	1633:8:48126:48133	3600852	12	True				
ANR	3601024	Statement	","	1633:16:48134:48134	3600852	13	True				
ANR	3601025	Statement	bin	1633:18:48136:48138	3600852	14	True				
ANR	3601026	Statement	->	1633:21:48139:48140	3600852	15	True				
ANR	3601027	Statement	ehdr	1633:23:48141:48144	3600852	16	True				
ANR	3601028	Statement	.	1633:27:48145:48145	3600852	17	True				
ANR	3601029	Statement	e_machine	1633:28:48146:48154	3600852	18	True				
ANR	3601030	Statement	)	1633:37:48155:48155	3600852	19	True				
ANR	3601031	ExpressionStatement		1633:38:48156:48156	3600852	20	True				
ANR	3601032	ReturnStatement	return UT64_MAX ;	1634:1:48159:48174	3600852	21	True				
ANR	3601033	Identifier	UT64_MAX		3600852	0					
ANR	3601034	ReturnType	static ut64		3600852	1					
ANR	3601035	Identifier	get_import_addr_mips		3600852	2					
ANR	3601036	ParameterList	"ELFOBJ * bin , struct ht_rel_t * rel , RBinElfSection * plt_section"		3600852	3					
ANR	3601037	Parameter	ELFOBJ * bin	1607:33:47279:47289	3600852	0	True				
ANR	3601038	ParameterType	ELFOBJ *		3600852	0					
ANR	3601039	Identifier	bin		3600852	1					
ANR	3601040	Parameter	struct ht_rel_t * rel	1607:46:47292:47311	3600852	1	True				
ANR	3601041	ParameterType	struct ht_rel_t *		3600852	0					
ANR	3601042	Identifier	rel		3600852	1					
ANR	3601043	Parameter	RBinElfSection * plt_section	1607:68:47314:47340	3600852	2	True				
ANR	3601044	ParameterType	RBinElfSection *		3600852	0					
ANR	3601045	Identifier	plt_section		3600852	1					
ANR	3601046	CFGEntryNode	ENTRY		3600852		True				
ANR	3601047	CFGExitNode	EXIT		3600852		True				
ANR	3601048	Symbol	s -> size		3600852						
ANR	3601049	Symbol	bin -> b		3600852						
ANR	3601050	Symbol	* rel		3600852						
ANR	3601051	Symbol	bin		3600852						
ANR	3601052	Symbol	s -> rva		3600852						
ANR	3601053	Symbol	s -> offset		3600852						
ANR	3601054	Symbol	* bin		3600852						
ANR	3601055	Symbol	sizeOfPltEntry		3600852						
ANR	3601056	Symbol	len		3600852						
ANR	3601057	Symbol	plt_section		3600852						
ANR	3601058	Symbol	* plt_section		3600852						
ANR	3601059	Symbol	rel		3600852						
ANR	3601060	Symbol	rel -> k		3600852						
ANR	3601061	Symbol	UT64_MAX		3600852						
ANR	3601062	Symbol	sizeOfProcedureLinkageTable		3600852						
ANR	3601063	Symbol	plt_addr		3600852						
ANR	3601064	Symbol	get_section_by_name		3600852						
ANR	3601065	Symbol	plt_section -> rva		3600852						
ANR	3601066	Symbol	buf		3600852						
ANR	3601067	Symbol	s		3600852						
ANR	3601068	Symbol	r_mem_mem_aligned		3600852						
ANR	3601069	Symbol	r_buf_read_at		3600852						
ANR	3601070	Symbol	* s		3600852						
ANR	3601071	Symbol	MIPS_PLT_OFFSET		3600852						
ANR	3601072	Symbol	base		3600852						
ANR	3601073	Function	get_import_addr	1637:0:48179:49357							
ANR	3601074	FunctionDef	"get_import_addr (ELFOBJ * bin , int sym)"		3601073	0					
ANR	3601075	CompoundStatement		1637:50:48229:49357	3601073	0					
ANR	3601076	IdentifierDeclStatement	int nrel ;	1638:1:48232:48240	3601073	0	True				
ANR	3601077	IdentifierDecl	nrel		3601073	0					
ANR	3601078	IdentifierDeclType	int		3601073	0					
ANR	3601079	Identifier	nrel		3601073	1					
ANR	3601080	IfStatement	if ( ( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr )		3601073	1					
ANR	3601081	Condition	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr	1640:5:48248:48289	3601073	0	True				
ANR	3601082	AndExpression	( ! bin -> shdr || ! bin -> strtab ) && ! bin -> phdr		3601073	0		&&			
ANR	3601083	OrExpression	! bin -> shdr || ! bin -> strtab		3601073	0		||			
ANR	3601084	UnaryOperationExpression	! bin -> shdr		3601073	0					
ANR	3601085	UnaryOperator	!		3601073	0					
ANR	3601086	PtrMemberAccess	bin -> shdr		3601073	1					
ANR	3601087	Identifier	bin		3601073	0					
ANR	3601088	Identifier	shdr		3601073	1					
ANR	3601089	UnaryOperationExpression	! bin -> strtab		3601073	1					
ANR	3601090	UnaryOperator	!		3601073	0					
ANR	3601091	PtrMemberAccess	bin -> strtab		3601073	1					
ANR	3601092	Identifier	bin		3601073	0					
ANR	3601093	Identifier	strtab		3601073	1					
ANR	3601094	UnaryOperationExpression	! bin -> phdr		3601073	1					
ANR	3601095	UnaryOperator	!		3601073	0					
ANR	3601096	PtrMemberAccess	bin -> phdr		3601073	1					
ANR	3601097	Identifier	bin		3601073	0					
ANR	3601098	Identifier	phdr		3601073	1					
ANR	3601099	CompoundStatement		4:49:62:62	3601073	1					
ANR	3601100	ReturnStatement	return UT64_MAX ;	1641:2:48296:48311	3601073	0	True				
ANR	3601101	Identifier	UT64_MAX		3601073	0					
ANR	3601102	IfStatement	if ( ! bin -> rel_cache )		3601073	2					
ANR	3601103	Condition	! bin -> rel_cache	1645:5:48369:48383	3601073	0	True				
ANR	3601104	UnaryOperationExpression	! bin -> rel_cache		3601073	0					
ANR	3601105	UnaryOperator	!		3601073	0					
ANR	3601106	PtrMemberAccess	bin -> rel_cache		3601073	1					
ANR	3601107	Identifier	bin		3601073	0					
ANR	3601108	Identifier	rel_cache		3601073	1					
ANR	3601109	CompoundStatement		9:22:156:156	3601073	1					
ANR	3601110	ExpressionStatement	bin -> rel_cache = rel_cache_new ( bin )	1646:2:48390:48426	3601073	0	True				
ANR	3601111	AssignmentExpression	bin -> rel_cache = rel_cache_new ( bin )		3601073	0		=			
ANR	3601112	PtrMemberAccess	bin -> rel_cache		3601073	0					
ANR	3601113	Identifier	bin		3601073	0					
ANR	3601114	Identifier	rel_cache		3601073	1					
ANR	3601115	CallExpression	rel_cache_new ( bin )		3601073	1					
ANR	3601116	Callee	rel_cache_new		3601073	0					
ANR	3601117	Identifier	rel_cache_new		3601073	0					
ANR	3601118	ArgumentList	bin		3601073	1					
ANR	3601119	Argument	bin		3601073	0					
ANR	3601120	Identifier	bin		3601073	0					
ANR	3601121	IfStatement	if ( ! bin -> rel_cache )		3601073	1					
ANR	3601122	Condition	! bin -> rel_cache	1647:6:48434:48448	3601073	0	True				
ANR	3601123	UnaryOperationExpression	! bin -> rel_cache		3601073	0					
ANR	3601124	UnaryOperator	!		3601073	0					
ANR	3601125	PtrMemberAccess	bin -> rel_cache		3601073	1					
ANR	3601126	Identifier	bin		3601073	0					
ANR	3601127	Identifier	rel_cache		3601073	1					
ANR	3601128	CompoundStatement		11:23:221:221	3601073	1					
ANR	3601129	ReturnStatement	return UT64_MAX ;	1648:3:48456:48471	3601073	0	True				
ANR	3601130	Identifier	UT64_MAX		3601073	0					
ANR	3601131	IdentifierDeclStatement	"struct ht_rel_t * rel = ht_up_find ( bin -> rel_cache , sym , NULL ) ;"	1653:1:48518:48579	3601073	3	True				
ANR	3601132	IdentifierDecl	"* rel = ht_up_find ( bin -> rel_cache , sym , NULL )"		3601073	0					
ANR	3601133	IdentifierDeclType	struct ht_rel_t *		3601073	0					
ANR	3601134	Identifier	rel		3601073	1					
ANR	3601135	AssignmentExpression	"* rel = ht_up_find ( bin -> rel_cache , sym , NULL )"		3601073	2		=			
ANR	3601136	Identifier	rel		3601073	0					
ANR	3601137	CallExpression	"ht_up_find ( bin -> rel_cache , sym , NULL )"		3601073	1					
ANR	3601138	Callee	ht_up_find		3601073	0					
ANR	3601139	Identifier	ht_up_find		3601073	0					
ANR	3601140	ArgumentList	bin -> rel_cache		3601073	1					
ANR	3601141	Argument	bin -> rel_cache		3601073	0					
ANR	3601142	PtrMemberAccess	bin -> rel_cache		3601073	0					
ANR	3601143	Identifier	bin		3601073	0					
ANR	3601144	Identifier	rel_cache		3601073	1					
ANR	3601145	Argument	sym		3601073	1					
ANR	3601146	Identifier	sym		3601073	0					
ANR	3601147	Argument	NULL		3601073	2					
ANR	3601148	Identifier	NULL		3601073	0					
ANR	3601149	IfStatement	if ( ! rel )		3601073	4					
ANR	3601150	Condition	! rel	1654:5:48586:48589	3601073	0	True				
ANR	3601151	UnaryOperationExpression	! rel		3601073	0					
ANR	3601152	UnaryOperator	!		3601073	0					
ANR	3601153	Identifier	rel		3601073	1					
ANR	3601154	CompoundStatement		18:11:362:362	3601073	1					
ANR	3601155	ReturnStatement	return UT64_MAX ;	1655:2:48596:48611	3601073	0	True				
ANR	3601156	Identifier	UT64_MAX		3601073	0					
ANR	3601157	IdentifierDeclStatement	"RBinElfSection * plt_section = get_section_by_name ( bin , "".plt"" ) ;"	1658:1:48618:48681	3601073	5	True				
ANR	3601158	IdentifierDecl	"* plt_section = get_section_by_name ( bin , "".plt"" )"		3601073	0					
ANR	3601159	IdentifierDeclType	RBinElfSection *		3601073	0					
ANR	3601160	Identifier	plt_section		3601073	1					
ANR	3601161	AssignmentExpression	"* plt_section = get_section_by_name ( bin , "".plt"" )"		3601073	2		=			
ANR	3601162	Identifier	plt_section		3601073	0					
ANR	3601163	CallExpression	"get_section_by_name ( bin , "".plt"" )"		3601073	1					
ANR	3601164	Callee	get_section_by_name		3601073	0					
ANR	3601165	Identifier	get_section_by_name		3601073	0					
ANR	3601166	ArgumentList	bin		3601073	1					
ANR	3601167	Argument	bin		3601073	0					
ANR	3601168	Identifier	bin		3601073	0					
ANR	3601169	Argument	""".plt"""		3601073	1					
ANR	3601170	PrimaryExpression	""".plt"""		3601073	0					
ANR	3601171	ExpressionStatement	nrel = bin -> rel_cache -> count	1659:1:48684:48712	3601073	6	True				
ANR	3601172	AssignmentExpression	nrel = bin -> rel_cache -> count		3601073	0		=			
ANR	3601173	Identifier	nrel		3601073	0					
ANR	3601174	PtrMemberAccess	bin -> rel_cache -> count		3601073	1					
ANR	3601175	PtrMemberAccess	bin -> rel_cache		3601073	0					
ANR	3601176	Identifier	bin		3601073	0					
ANR	3601177	Identifier	rel_cache		3601073	1					
ANR	3601178	Identifier	count		3601073	1					
ANR	3601179	SwitchStatement	switch ( bin -> ehdr . e_machine )		3601073	7					
ANR	3601180	Condition	bin -> ehdr . e_machine	1661:9:48724:48742	3601073	0	True				
ANR	3601181	MemberAccess	bin -> ehdr . e_machine		3601073	0					
ANR	3601182	PtrMemberAccess	bin -> ehdr		3601073	0					
ANR	3601183	Identifier	bin		3601073	0					
ANR	3601184	Identifier	ehdr		3601073	1					
ANR	3601185	Identifier	e_machine		3601073	1					
ANR	3601186	CompoundStatement		25:30:515:515	3601073	1					
ANR	3601187	Label	case EM_PPC :	1662:1:48748:48759	3601073	0	True				
ANR	3601188	Identifier	EM_PPC		3601073	0					
ANR	3601189	Label	case EM_PPC64 :	1663:1:48762:48775	3601073	1	True				
ANR	3601190	Identifier	EM_PPC64		3601073	0					
ANR	3601191	ReturnStatement	"return get_import_addr_ppc ( bin , rel , plt_section , nrel ) ;"	1664:2:48779:48835	3601073	2	True				
ANR	3601192	CallExpression	"get_import_addr_ppc ( bin , rel , plt_section , nrel )"		3601073	0					
ANR	3601193	Callee	get_import_addr_ppc		3601073	0					
ANR	3601194	Identifier	get_import_addr_ppc		3601073	0					
ANR	3601195	ArgumentList	bin		3601073	1					
ANR	3601196	Argument	bin		3601073	0					
ANR	3601197	Identifier	bin		3601073	0					
ANR	3601198	Argument	rel		3601073	1					
ANR	3601199	Identifier	rel		3601073	0					
ANR	3601200	Argument	plt_section		3601073	2					
ANR	3601201	Identifier	plt_section		3601073	0					
ANR	3601202	Argument	nrel		3601073	3					
ANR	3601203	Identifier	nrel		3601073	0					
ANR	3601204	Label	case EM_SPARC :	1665:1:48838:48851	3601073	3	True				
ANR	3601205	Identifier	EM_SPARC		3601073	0					
ANR	3601206	Label	case EM_SPARCV9 :	1666:1:48854:48869	3601073	4	True				
ANR	3601207	Identifier	EM_SPARCV9		3601073	0					
ANR	3601208	Label	case EM_SPARC32PLUS :	1667:1:48872:48891	3601073	5	True				
ANR	3601209	Identifier	EM_SPARC32PLUS		3601073	0					
ANR	3601210	ReturnStatement	"return get_import_addr_sparc ( bin , rel , plt_section ) ;"	1668:2:48895:48947	3601073	6	True				
ANR	3601211	CallExpression	"get_import_addr_sparc ( bin , rel , plt_section )"		3601073	0					
ANR	3601212	Callee	get_import_addr_sparc		3601073	0					
ANR	3601213	Identifier	get_import_addr_sparc		3601073	0					
ANR	3601214	ArgumentList	bin		3601073	1					
ANR	3601215	Argument	bin		3601073	0					
ANR	3601216	Identifier	bin		3601073	0					
ANR	3601217	Argument	rel		3601073	1					
ANR	3601218	Identifier	rel		3601073	0					
ANR	3601219	Argument	plt_section		3601073	2					
ANR	3601220	Identifier	plt_section		3601073	0					
ANR	3601221	Label	case EM_ARM :	1669:1:48950:48961	3601073	7	True				
ANR	3601222	Identifier	EM_ARM		3601073	0					
ANR	3601223	Label	case EM_AARCH64 :	1670:1:48964:48979	3601073	8	True				
ANR	3601224	Identifier	EM_AARCH64		3601073	0					
ANR	3601225	ReturnStatement	"return get_import_addr_arm ( bin , rel , plt_section ) ;"	1671:2:48983:49033	3601073	9	True				
ANR	3601226	CallExpression	"get_import_addr_arm ( bin , rel , plt_section )"		3601073	0					
ANR	3601227	Callee	get_import_addr_arm		3601073	0					
ANR	3601228	Identifier	get_import_addr_arm		3601073	0					
ANR	3601229	ArgumentList	bin		3601073	1					
ANR	3601230	Argument	bin		3601073	0					
ANR	3601231	Identifier	bin		3601073	0					
ANR	3601232	Argument	rel		3601073	1					
ANR	3601233	Identifier	rel		3601073	0					
ANR	3601234	Argument	plt_section		3601073	2					
ANR	3601235	Identifier	plt_section		3601073	0					
ANR	3601236	Label	case EM_386 :	1672:1:49036:49047	3601073	10	True				
ANR	3601237	Identifier	EM_386		3601073	0					
ANR	3601238	Label	case EM_X86_64 :	1673:1:49050:49064	3601073	11	True				
ANR	3601239	Identifier	EM_X86_64		3601073	0					
ANR	3601240	ReturnStatement	"return get_import_addr_x86 ( bin , rel , plt_section ) ;"	1674:2:49068:49118	3601073	12	True				
ANR	3601241	CallExpression	"get_import_addr_x86 ( bin , rel , plt_section )"		3601073	0					
ANR	3601242	Callee	get_import_addr_x86		3601073	0					
ANR	3601243	Identifier	get_import_addr_x86		3601073	0					
ANR	3601244	ArgumentList	bin		3601073	1					
ANR	3601245	Argument	bin		3601073	0					
ANR	3601246	Identifier	bin		3601073	0					
ANR	3601247	Argument	rel		3601073	1					
ANR	3601248	Identifier	rel		3601073	0					
ANR	3601249	Argument	plt_section		3601073	2					
ANR	3601250	Identifier	plt_section		3601073	0					
ANR	3601251	Label	case EM_MIPS :	1675:1:49121:49133	3601073	13	True				
ANR	3601252	Identifier	EM_MIPS		3601073	0					
ANR	3601253	ReturnStatement	"return get_import_addr_mips ( bin , rel , plt_section ) ;"	1676:2:49165:49216	3601073	14	True				
ANR	3601254	CallExpression	"get_import_addr_mips ( bin , rel , plt_section )"		3601073	0					
ANR	3601255	Callee	get_import_addr_mips		3601073	0					
ANR	3601256	Identifier	get_import_addr_mips		3601073	0					
ANR	3601257	ArgumentList	bin		3601073	1					
ANR	3601258	Argument	bin		3601073	0					
ANR	3601259	Identifier	bin		3601073	0					
ANR	3601260	Argument	rel		3601073	1					
ANR	3601261	Identifier	rel		3601073	0					
ANR	3601262	Argument	plt_section		3601073	2					
ANR	3601263	Identifier	plt_section		3601073	0					
ANR	3601264	Label	default :	1677:1:49219:49226	3601073	15	True				
ANR	3601265	Identifier	default		3601073	0					
ANR	3601266	Statement	eprintf	1678:2:49230:49236	3601073	16	True				
ANR	3601267	Statement	(	1678:10:49238:49238	3601073	17	True				
ANR	3601268	Statement	"""Unsupported relocs type %"""	1678:11:49239:49265	3601073	18	True				
ANR	3601269	Statement	PFMT64u	1678:39:49267:49273	3601073	19	True				
ANR	3601270	Statement	""" for arch %d\\n"""	1678:47:49275:49290	3601073	20	True				
ANR	3601271	Statement	","	1678:63:49291:49291	3601073	21	True				
ANR	3601272	Statement	(	1679:3:49296:49296	3601073	22	True				
ANR	3601273	Statement	ut64	1679:4:49297:49300	3601073	23	True				
ANR	3601274	Statement	)	1679:8:49301:49301	3601073	24	True				
ANR	3601275	Statement	REL_TYPE	1679:10:49303:49310	3601073	25	True				
ANR	3601276	Statement	","	1679:18:49311:49311	3601073	26	True				
ANR	3601277	Statement	bin	1679:20:49313:49315	3601073	27	True				
ANR	3601278	Statement	->	1679:23:49316:49317	3601073	28	True				
ANR	3601279	Statement	ehdr	1679:25:49318:49321	3601073	29	True				
ANR	3601280	Statement	.	1679:29:49322:49322	3601073	30	True				
ANR	3601281	Statement	e_machine	1679:30:49323:49331	3601073	31	True				
ANR	3601282	Statement	)	1679:39:49332:49332	3601073	32	True				
ANR	3601283	ExpressionStatement		1679:40:49333:49333	3601073	33	True				
ANR	3601284	ReturnStatement	return UT64_MAX ;	1680:2:49337:49352	3601073	34	True				
ANR	3601285	Identifier	UT64_MAX		3601073	0					
ANR	3601286	ReturnType	static ut64		3601073	1					
ANR	3601287	Identifier	get_import_addr		3601073	2					
ANR	3601288	ParameterList	"ELFOBJ * bin , int sym"		3601073	3					
ANR	3601289	Parameter	ELFOBJ * bin	1637:28:48207:48217	3601073	0	True				
ANR	3601290	ParameterType	ELFOBJ *		3601073	0					
ANR	3601291	Identifier	bin		3601073	1					
ANR	3601292	Parameter	int sym	1637:41:48220:48226	3601073	1	True				
ANR	3601293	ParameterType	int		3601073	0					
ANR	3601294	Identifier	sym		3601073	1					
ANR	3601295	CFGEntryNode	ENTRY		3601073		True				
ANR	3601296	CFGExitNode	EXIT		3601073		True				
ANR	3601297	Symbol	ht_up_find		3601073						
ANR	3601298	Symbol	get_import_addr_x86		3601073						
ANR	3601299	Symbol	get_import_addr_mips		3601073						
ANR	3601300	Symbol	bin		3601073						
ANR	3601301	Symbol	sym		3601073						
ANR	3601302	Symbol	bin -> phdr		3601073						
ANR	3601303	Symbol	rel_cache_new		3601073						
ANR	3601304	Symbol	* bin		3601073						
ANR	3601305	Symbol	plt_section		3601073						
ANR	3601306	Symbol	bin -> ehdr		3601073						
ANR	3601307	Symbol	nrel		3601073						
ANR	3601308	Symbol	rel		3601073						
ANR	3601309	Symbol	bin -> rel_cache		3601073						
ANR	3601310	Symbol	* * bin		3601073						
ANR	3601311	Symbol	UT64_MAX		3601073						
ANR	3601312	Symbol	bin -> strtab		3601073						
ANR	3601313	Symbol	get_import_addr_ppc		3601073						
ANR	3601314	Symbol	NULL		3601073						
ANR	3601315	Symbol	get_import_addr_arm		3601073						
ANR	3601316	Symbol	get_section_by_name		3601073						
ANR	3601317	Symbol	get_import_addr_sparc		3601073						
ANR	3601318	Symbol	bin -> shdr		3601073						
ANR	3601319	Symbol	bin -> ehdr . e_machine		3601073						
ANR	3601320	Symbol	bin -> rel_cache -> count		3601073						
ANR	3601321	Symbol	* bin -> rel_cache		3601073						
ANR	3601322	Function	r_bin_elf_has_nx	1684:0:49360:49596							
ANR	3601323	FunctionDef	r_bin_elf_has_nx (ELFOBJ * bin)		3601322	0					
ANR	3601324	CompoundStatement		1684:40:49400:49596	3601322	0					
ANR	3601325	IdentifierDeclStatement	int i ;	1685:1:49403:49408	3601322	0	True				
ANR	3601326	IdentifierDecl	i		3601322	0					
ANR	3601327	IdentifierDeclType	int		3601322	0					
ANR	3601328	Identifier	i		3601322	1					
ANR	3601329	IfStatement	if ( bin && bin -> phdr )		3601322	1					
ANR	3601330	Condition	bin && bin -> phdr	1686:5:49415:49430	3601322	0	True				
ANR	3601331	AndExpression	bin && bin -> phdr		3601322	0		&&			
ANR	3601332	Identifier	bin		3601322	0					
ANR	3601333	PtrMemberAccess	bin -> phdr		3601322	1					
ANR	3601334	Identifier	bin		3601322	0					
ANR	3601335	Identifier	phdr		3601322	1					
ANR	3601336	CompoundStatement		3:23:32:32	3601322	1					
ANR	3601337	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3601322	0					
ANR	3601338	ForInit	i = 0 ;	1687:7:49442:49447	3601322	0	True				
ANR	3601339	AssignmentExpression	i = 0		3601322	0		=			
ANR	3601340	Identifier	i		3601322	0					
ANR	3601341	PrimaryExpression	0		3601322	1					
ANR	3601342	Condition	i < bin -> ehdr . e_phnum	1687:14:49449:49469	3601322	1	True				
ANR	3601343	RelationalExpression	i < bin -> ehdr . e_phnum		3601322	0		<			
ANR	3601344	Identifier	i		3601322	0					
ANR	3601345	MemberAccess	bin -> ehdr . e_phnum		3601322	1					
ANR	3601346	PtrMemberAccess	bin -> ehdr		3601322	0					
ANR	3601347	Identifier	bin		3601322	0					
ANR	3601348	Identifier	ehdr		3601322	1					
ANR	3601349	Identifier	e_phnum		3601322	1					
ANR	3601350	PostIncDecOperationExpression	i ++	1687:37:49472:49474	3601322	2	True				
ANR	3601351	Identifier	i		3601322	0					
ANR	3601352	IncDec	++		3601322	1					
ANR	3601353	CompoundStatement		4:42:76:76	3601322	3					
ANR	3601354	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_GNU_STACK )		3601322	0					
ANR	3601355	Condition	bin -> phdr [ i ] . p_type == PT_GNU_STACK	1688:7:49486:49520	3601322	0	True				
ANR	3601356	EqualityExpression	bin -> phdr [ i ] . p_type == PT_GNU_STACK		3601322	0		==			
ANR	3601357	MemberAccess	bin -> phdr [ i ] . p_type		3601322	0					
ANR	3601358	ArrayIndexing	bin -> phdr [ i ]		3601322	0					
ANR	3601359	PtrMemberAccess	bin -> phdr		3601322	0					
ANR	3601360	Identifier	bin		3601322	0					
ANR	3601361	Identifier	phdr		3601322	1					
ANR	3601362	Identifier	i		3601322	1					
ANR	3601363	Identifier	p_type		3601322	1					
ANR	3601364	Identifier	PT_GNU_STACK		3601322	1					
ANR	3601365	CompoundStatement		5:44:122:122	3601322	1					
ANR	3601366	ReturnStatement	return ( ! ( bin -> phdr [ i ] . p_flags & 1 ) ) ? 1 : 0 ;	1689:4:49529:49571	3601322	0	True				
ANR	3601367	ConditionalExpression	( ! ( bin -> phdr [ i ] . p_flags & 1 ) ) ? 1 : 0		3601322	0					
ANR	3601368	Condition	! ( bin -> phdr [ i ] . p_flags & 1 )		3601322	0					
ANR	3601369	UnaryOperationExpression	! ( bin -> phdr [ i ] . p_flags & 1 )		3601322	0					
ANR	3601370	UnaryOperator	!		3601322	0					
ANR	3601371	BitAndExpression	bin -> phdr [ i ] . p_flags & 1		3601322	1		&			
ANR	3601372	MemberAccess	bin -> phdr [ i ] . p_flags		3601322	0					
ANR	3601373	ArrayIndexing	bin -> phdr [ i ]		3601322	0					
ANR	3601374	PtrMemberAccess	bin -> phdr		3601322	0					
ANR	3601375	Identifier	bin		3601322	0					
ANR	3601376	Identifier	phdr		3601322	1					
ANR	3601377	Identifier	i		3601322	1					
ANR	3601378	Identifier	p_flags		3601322	1					
ANR	3601379	PrimaryExpression	1		3601322	1					
ANR	3601380	PrimaryExpression	1		3601322	1					
ANR	3601381	PrimaryExpression	0		3601322	2					
ANR	3601382	ReturnStatement	return 0 ;	1693:1:49586:49594	3601322	2	True				
ANR	3601383	PrimaryExpression	0		3601322	0					
ANR	3601384	ReturnType	int Elf_		3601322	1					
ANR	3601385	Identifier	( r_bin_elf_has_nx )		3601322	2					
ANR	3601386	Identifier	r_bin_elf_has_nx		3601322	3					
ANR	3601387	ParameterList	ELFOBJ * bin		3601322	4					
ANR	3601388	Parameter	ELFOBJ * bin	1684:27:49387:49397	3601322	0	True				
ANR	3601389	ParameterType	ELFOBJ *		3601322	0					
ANR	3601390	Identifier	bin		3601322	1					
ANR	3601391	CFGEntryNode	ENTRY		3601322		True				
ANR	3601392	CFGExitNode	EXIT		3601322		True				
ANR	3601393	Symbol	PT_GNU_STACK		3601322						
ANR	3601394	Symbol	* i		3601322						
ANR	3601395	Symbol	bin		3601322						
ANR	3601396	Symbol	bin -> ehdr		3601322						
ANR	3601397	Symbol	i		3601322						
ANR	3601398	Symbol	bin -> phdr		3601322						
ANR	3601399	Symbol	bin -> phdr [ i ] . p_type		3601322						
ANR	3601400	Symbol	bin -> ehdr . e_phnum		3601322						
ANR	3601401	Symbol	* * bin		3601322						
ANR	3601402	Symbol	bin -> phdr [ i ] . p_flags		3601322						
ANR	3601403	Symbol	* bin		3601322						
ANR	3601404	Symbol	* bin -> phdr		3601322						
ANR	3601405	Function	r_bin_elf_has_relro	1696:0:49599:50480							
ANR	3601406	FunctionDef	r_bin_elf_has_relro (ELFOBJ * bin)		3601405	0					
ANR	3601407	CompoundStatement		1696:43:49642:50480	3601405	0					
ANR	3601408	IdentifierDeclStatement	int i ;	1697:1:49645:49650	3601405	0	True				
ANR	3601409	IdentifierDecl	i		3601405	0					
ANR	3601410	IdentifierDeclType	int		3601405	0					
ANR	3601411	Identifier	i		3601405	1					
ANR	3601412	IdentifierDeclStatement	bool haveBindNow = false ;	1698:1:49653:49677	3601405	1	True				
ANR	3601413	IdentifierDecl	haveBindNow = false		3601405	0					
ANR	3601414	IdentifierDeclType	bool		3601405	0					
ANR	3601415	Identifier	haveBindNow		3601405	1					
ANR	3601416	AssignmentExpression	haveBindNow = false		3601405	2		=			
ANR	3601417	Identifier	false		3601405	0					
ANR	3601418	Identifier	false		3601405	1					
ANR	3601419	IdentifierDeclStatement	bool haveGnuRelro = false ;	1699:1:49680:49705	3601405	2	True				
ANR	3601420	IdentifierDecl	haveGnuRelro = false		3601405	0					
ANR	3601421	IdentifierDeclType	bool		3601405	0					
ANR	3601422	Identifier	haveGnuRelro		3601405	1					
ANR	3601423	AssignmentExpression	haveGnuRelro = false		3601405	2		=			
ANR	3601424	Identifier	false		3601405	0					
ANR	3601425	Identifier	false		3601405	1					
ANR	3601426	IfStatement	if ( bin && bin -> dyn_buf )		3601405	3					
ANR	3601427	Condition	bin && bin -> dyn_buf	1700:5:49712:49730	3601405	0	True				
ANR	3601428	AndExpression	bin && bin -> dyn_buf		3601405	0		&&			
ANR	3601429	Identifier	bin		3601405	0					
ANR	3601430	PtrMemberAccess	bin -> dyn_buf		3601405	1					
ANR	3601431	Identifier	bin		3601405	0					
ANR	3601432	Identifier	dyn_buf		3601405	1					
ANR	3601433	CompoundStatement		5:26:90:90	3601405	1					
ANR	3601434	ForStatement	for ( i = 0 ; i < bin -> dyn_entries ; i ++ )		3601405	0					
ANR	3601435	ForInit	i = 0 ;	1701:7:49742:49747	3601405	0	True				
ANR	3601436	AssignmentExpression	i = 0		3601405	0		=			
ANR	3601437	Identifier	i		3601405	0					
ANR	3601438	PrimaryExpression	0		3601405	1					
ANR	3601439	Condition	i < bin -> dyn_entries	1701:14:49749:49768	3601405	1	True				
ANR	3601440	RelationalExpression	i < bin -> dyn_entries		3601405	0		<			
ANR	3601441	Identifier	i		3601405	0					
ANR	3601442	PtrMemberAccess	bin -> dyn_entries		3601405	1					
ANR	3601443	Identifier	bin		3601405	0					
ANR	3601444	Identifier	dyn_entries		3601405	1					
ANR	3601445	PostIncDecOperationExpression	i ++	1701:36:49771:49773	3601405	2	True				
ANR	3601446	Identifier	i		3601405	0					
ANR	3601447	IncDec	++		3601405	1					
ANR	3601448	CompoundStatement		6:41:133:133	3601405	3					
ANR	3601449	SwitchStatement	switch ( bin -> dyn_buf [ i ] . d_tag )		3601405	0					
ANR	3601450	Condition	bin -> dyn_buf [ i ] . d_tag	1702:11:49789:49809	3601405	0	True				
ANR	3601451	MemberAccess	bin -> dyn_buf [ i ] . d_tag		3601405	0					
ANR	3601452	ArrayIndexing	bin -> dyn_buf [ i ]		3601405	0					
ANR	3601453	PtrMemberAccess	bin -> dyn_buf		3601405	0					
ANR	3601454	Identifier	bin		3601405	0					
ANR	3601455	Identifier	dyn_buf		3601405	1					
ANR	3601456	Identifier	i		3601405	1					
ANR	3601457	Identifier	d_tag		3601405	1					
ANR	3601458	CompoundStatement		7:34:169:169	3601405	1					
ANR	3601459	Label	case DT_BIND_NOW :	1703:3:49817:49833	3601405	0	True				
ANR	3601460	Identifier	DT_BIND_NOW		3601405	0					
ANR	3601461	ExpressionStatement	haveBindNow = true	1704:4:49839:49857	3601405	1	True				
ANR	3601462	AssignmentExpression	haveBindNow = true		3601405	0		=			
ANR	3601463	Identifier	haveBindNow		3601405	0					
ANR	3601464	Identifier	true		3601405	1					
ANR	3601465	BreakStatement	break ;	1705:4:49863:49868	3601405	2	True				
ANR	3601466	Label	case DT_FLAGS :	1706:3:49873:49886	3601405	3	True				
ANR	3601467	Identifier	DT_FLAGS		3601405	0					
ANR	3601468	ForStatement	for ( i ++ ; i < bin -> dyn_entries ; i ++ )		3601405	4					
ANR	3601469	ForInit	i ++ ;	1707:9:49897:49900	3601405	0	True				
ANR	3601470	PostIncDecOperationExpression	i ++		3601405	0					
ANR	3601471	Identifier	i		3601405	0					
ANR	3601472	IncDec	++		3601405	1					
ANR	3601473	Condition	i < bin -> dyn_entries	1707:14:49902:49921	3601405	1	True				
ANR	3601474	RelationalExpression	i < bin -> dyn_entries		3601405	0		<			
ANR	3601475	Identifier	i		3601405	0					
ANR	3601476	PtrMemberAccess	bin -> dyn_entries		3601405	1					
ANR	3601477	Identifier	bin		3601405	0					
ANR	3601478	Identifier	dyn_entries		3601405	1					
ANR	3601479	PostIncDecOperationExpression	i ++	1707:37:49925:49927	3601405	2	True				
ANR	3601480	Identifier	i		3601405	0					
ANR	3601481	IncDec	++		3601405	1					
ANR	3601482	CompoundStatement		13:5:294:327	3601405	3					
ANR	3601483	IdentifierDeclStatement	ut32 dTag = bin -> dyn_buf [ i ] . d_tag ;	1708:5:49937:49970	3601405	0	True				
ANR	3601484	IdentifierDecl	dTag = bin -> dyn_buf [ i ] . d_tag		3601405	0					
ANR	3601485	IdentifierDeclType	ut32		3601405	0					
ANR	3601486	Identifier	dTag		3601405	1					
ANR	3601487	AssignmentExpression	dTag = bin -> dyn_buf [ i ] . d_tag		3601405	2		=			
ANR	3601488	Identifier	dTag		3601405	0					
ANR	3601489	MemberAccess	bin -> dyn_buf [ i ] . d_tag		3601405	1					
ANR	3601490	ArrayIndexing	bin -> dyn_buf [ i ]		3601405	0					
ANR	3601491	PtrMemberAccess	bin -> dyn_buf		3601405	0					
ANR	3601492	Identifier	bin		3601405	0					
ANR	3601493	Identifier	dyn_buf		3601405	1					
ANR	3601494	Identifier	i		3601405	1					
ANR	3601495	Identifier	d_tag		3601405	1					
ANR	3601496	IfStatement	if ( ! dTag )		3601405	1					
ANR	3601497	Condition	! dTag	1709:9:49981:49985	3601405	0	True				
ANR	3601498	UnaryOperationExpression	! dTag		3601405	0					
ANR	3601499	UnaryOperator	!		3601405	0					
ANR	3601500	Identifier	dTag		3601405	1					
ANR	3601501	CompoundStatement		14:16:345:345	3601405	1					
ANR	3601502	BreakStatement	break ;	1710:6:49996:50001	3601405	0	True				
ANR	3601503	SwitchStatement	switch ( dTag )		3601405	2					
ANR	3601504	Condition	dTag	1712:13:50023:50026	3601405	0	True				
ANR	3601505	Identifier	dTag		3601405	0					
ANR	3601506	CompoundStatement		17:19:386:386	3601405	1					
ANR	3601507	Label	case DT_FLAGS_1 :	1713:5:50036:50051	3601405	0	True				
ANR	3601508	Identifier	DT_FLAGS_1		3601405	0					
ANR	3601509	IfStatement	if ( bin -> dyn_buf [ i ] . d_un . d_val & DF_1_NOW )		3601405	1					
ANR	3601510	Condition	bin -> dyn_buf [ i ] . d_un . d_val & DF_1_NOW	1714:10:50063:50099	3601405	0	True				
ANR	3601511	BitAndExpression	bin -> dyn_buf [ i ] . d_un . d_val & DF_1_NOW		3601405	0		&			
ANR	3601512	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		3601405	0					
ANR	3601513	MemberAccess	bin -> dyn_buf [ i ] . d_un		3601405	0					
ANR	3601514	ArrayIndexing	bin -> dyn_buf [ i ]		3601405	0					
ANR	3601515	PtrMemberAccess	bin -> dyn_buf		3601405	0					
ANR	3601516	Identifier	bin		3601405	0					
ANR	3601517	Identifier	dyn_buf		3601405	1					
ANR	3601518	Identifier	i		3601405	1					
ANR	3601519	Identifier	d_un		3601405	1					
ANR	3601520	Identifier	d_val		3601405	1					
ANR	3601521	Identifier	DF_1_NOW		3601405	1					
ANR	3601522	CompoundStatement		19:49:459:459	3601405	1					
ANR	3601523	ExpressionStatement	haveBindNow = true	1715:7:50111:50129	3601405	0	True				
ANR	3601524	AssignmentExpression	haveBindNow = true		3601405	0		=			
ANR	3601525	Identifier	haveBindNow		3601405	0					
ANR	3601526	Identifier	true		3601405	1					
ANR	3601527	BreakStatement	break ;	1716:7:50138:50143	3601405	1	True				
ANR	3601528	BreakStatement	break ;	1720:4:50170:50175	3601405	5	True				
ANR	3601529	IfStatement	if ( bin && bin -> phdr )		3601405	4					
ANR	3601530	Condition	bin && bin -> phdr	1724:5:50194:50209	3601405	0	True				
ANR	3601531	AndExpression	bin && bin -> phdr		3601405	0		&&			
ANR	3601532	Identifier	bin		3601405	0					
ANR	3601533	PtrMemberAccess	bin -> phdr		3601405	1					
ANR	3601534	Identifier	bin		3601405	0					
ANR	3601535	Identifier	phdr		3601405	1					
ANR	3601536	CompoundStatement		29:23:569:569	3601405	1					
ANR	3601537	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3601405	0					
ANR	3601538	ForInit	i = 0 ;	1725:7:50221:50226	3601405	0	True				
ANR	3601539	AssignmentExpression	i = 0		3601405	0		=			
ANR	3601540	Identifier	i		3601405	0					
ANR	3601541	PrimaryExpression	0		3601405	1					
ANR	3601542	Condition	i < bin -> ehdr . e_phnum	1725:14:50228:50248	3601405	1	True				
ANR	3601543	RelationalExpression	i < bin -> ehdr . e_phnum		3601405	0		<			
ANR	3601544	Identifier	i		3601405	0					
ANR	3601545	MemberAccess	bin -> ehdr . e_phnum		3601405	1					
ANR	3601546	PtrMemberAccess	bin -> ehdr		3601405	0					
ANR	3601547	Identifier	bin		3601405	0					
ANR	3601548	Identifier	ehdr		3601405	1					
ANR	3601549	Identifier	e_phnum		3601405	1					
ANR	3601550	PostIncDecOperationExpression	i ++	1725:37:50251:50253	3601405	2	True				
ANR	3601551	Identifier	i		3601405	0					
ANR	3601552	IncDec	++		3601405	1					
ANR	3601553	CompoundStatement		30:42:613:613	3601405	3					
ANR	3601554	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_GNU_RELRO )		3601405	0					
ANR	3601555	Condition	bin -> phdr [ i ] . p_type == PT_GNU_RELRO	1726:7:50265:50299	3601405	0	True				
ANR	3601556	EqualityExpression	bin -> phdr [ i ] . p_type == PT_GNU_RELRO		3601405	0		==			
ANR	3601557	MemberAccess	bin -> phdr [ i ] . p_type		3601405	0					
ANR	3601558	ArrayIndexing	bin -> phdr [ i ]		3601405	0					
ANR	3601559	PtrMemberAccess	bin -> phdr		3601405	0					
ANR	3601560	Identifier	bin		3601405	0					
ANR	3601561	Identifier	phdr		3601405	1					
ANR	3601562	Identifier	i		3601405	1					
ANR	3601563	Identifier	p_type		3601405	1					
ANR	3601564	Identifier	PT_GNU_RELRO		3601405	1					
ANR	3601565	CompoundStatement		31:44:659:659	3601405	1					
ANR	3601566	ExpressionStatement	haveGnuRelro = true	1727:4:50308:50327	3601405	0	True				
ANR	3601567	AssignmentExpression	haveGnuRelro = true		3601405	0		=			
ANR	3601568	Identifier	haveGnuRelro		3601405	0					
ANR	3601569	Identifier	true		3601405	1					
ANR	3601570	BreakStatement	break ;	1728:4:50333:50338	3601405	1	True				
ANR	3601571	IfStatement	if ( haveGnuRelro )		3601405	5					
ANR	3601572	Condition	haveGnuRelro	1732:5:50357:50368	3601405	0	True				
ANR	3601573	Identifier	haveGnuRelro		3601405	0					
ANR	3601574	CompoundStatement		37:19:728:728	3601405	1					
ANR	3601575	IfStatement	if ( haveBindNow )		3601405	0					
ANR	3601576	Condition	haveBindNow	1733:6:50379:50389	3601405	0	True				
ANR	3601577	Identifier	haveBindNow		3601405	0					
ANR	3601578	CompoundStatement		38:19:749:749	3601405	1					
ANR	3601579	ReturnStatement	return R_ELF_FULL_RELRO ;	1734:3:50397:50420	3601405	0	True				
ANR	3601580	Identifier	R_ELF_FULL_RELRO		3601405	0					
ANR	3601581	ReturnStatement	return R_ELF_PART_RELRO ;	1736:2:50428:50451	3601405	1	True				
ANR	3601582	Identifier	R_ELF_PART_RELRO		3601405	0					
ANR	3601583	ReturnStatement	return R_ELF_NO_RELRO ;	1738:1:50457:50478	3601405	6	True				
ANR	3601584	Identifier	R_ELF_NO_RELRO		3601405	0					
ANR	3601585	ReturnType	int Elf_		3601405	1					
ANR	3601586	Identifier	( r_bin_elf_has_relro )		3601405	2					
ANR	3601587	Identifier	r_bin_elf_has_relro		3601405	3					
ANR	3601588	ParameterList	ELFOBJ * bin		3601405	4					
ANR	3601589	Parameter	ELFOBJ * bin	1696:30:49629:49639	3601405	0	True				
ANR	3601590	ParameterType	ELFOBJ *		3601405	0					
ANR	3601591	Identifier	bin		3601405	1					
ANR	3601592	CFGEntryNode	ENTRY		3601405		True				
ANR	3601593	CFGExitNode	EXIT		3601405		True				
ANR	3601594	Symbol	bin		3601405						
ANR	3601595	Symbol	bin -> phdr		3601405						
ANR	3601596	Symbol	* bin		3601405						
ANR	3601597	Symbol	DF_1_NOW		3601405						
ANR	3601598	Symbol	R_ELF_FULL_RELRO		3601405						
ANR	3601599	Symbol	R_ELF_NO_RELRO		3601405						
ANR	3601600	Symbol	bin -> ehdr		3601405						
ANR	3601601	Symbol	* * bin		3601405						
ANR	3601602	Symbol	bin -> dyn_buf [ i ] . d_un . d_val		3601405						
ANR	3601603	Symbol	* bin -> dyn_buf		3601405						
ANR	3601604	Symbol	PT_GNU_RELRO		3601405						
ANR	3601605	Symbol	bin -> dyn_buf		3601405						
ANR	3601606	Symbol	bin -> dyn_entries		3601405						
ANR	3601607	Symbol	false		3601405						
ANR	3601608	Symbol	i		3601405						
ANR	3601609	Symbol	bin -> ehdr . e_phnum		3601405						
ANR	3601610	Symbol	bin -> dyn_buf [ i ] . d_tag		3601405						
ANR	3601611	Symbol	* bin -> phdr		3601405						
ANR	3601612	Symbol	haveBindNow		3601405						
ANR	3601613	Symbol	* i		3601405						
ANR	3601614	Symbol	bin -> dyn_buf [ i ] . d_un		3601405						
ANR	3601615	Symbol	R_ELF_PART_RELRO		3601405						
ANR	3601616	Symbol	haveGnuRelro		3601405						
ANR	3601617	Symbol	true		3601405						
ANR	3601618	Symbol	dTag		3601405						
ANR	3601619	Symbol	bin -> phdr [ i ] . p_type		3601405						
ANR	3601620	Function	r_bin_elf_get_baddr	1749:0:50733:51291							
ANR	3601621	FunctionDef	r_bin_elf_get_baddr (ELFOBJ * bin)		3601620	0					
ANR	3601622	CompoundStatement		1749:44:50777:51291	3601620	0					
ANR	3601623	IdentifierDeclStatement	int i ;	1750:1:50780:50785	3601620	0	True				
ANR	3601624	IdentifierDecl	i		3601620	0					
ANR	3601625	IdentifierDeclType	int		3601620	0					
ANR	3601626	Identifier	i		3601620	1					
ANR	3601627	IdentifierDeclStatement	"ut64 tmp , base = UT64_MAX ;"	1751:1:50788:50813	3601620	1	True				
ANR	3601628	IdentifierDecl	tmp		3601620	0					
ANR	3601629	IdentifierDeclType	ut64		3601620	0					
ANR	3601630	Identifier	tmp		3601620	1					
ANR	3601631	IdentifierDecl	base = UT64_MAX		3601620	1					
ANR	3601632	IdentifierDeclType	ut64		3601620	0					
ANR	3601633	Identifier	base		3601620	1					
ANR	3601634	AssignmentExpression	base = UT64_MAX		3601620	2		=			
ANR	3601635	Identifier	UT64_MAX		3601620	0					
ANR	3601636	Identifier	UT64_MAX		3601620	1					
ANR	3601637	IfStatement	if ( ! bin )		3601620	2					
ANR	3601638	Condition	! bin	1752:5:50820:50823	3601620	0	True				
ANR	3601639	UnaryOperationExpression	! bin		3601620	0					
ANR	3601640	UnaryOperator	!		3601620	0					
ANR	3601641	Identifier	bin		3601620	1					
ANR	3601642	CompoundStatement		4:11:48:48	3601620	1					
ANR	3601643	ReturnStatement	return 0 ;	1753:2:50830:50838	3601620	0	True				
ANR	3601644	PrimaryExpression	0		3601620	0					
ANR	3601645	IfStatement	if ( bin -> phdr )		3601620	3					
ANR	3601646	Condition	bin -> phdr	1755:5:50848:50856	3601620	0	True				
ANR	3601647	PtrMemberAccess	bin -> phdr		3601620	0					
ANR	3601648	Identifier	bin		3601620	0					
ANR	3601649	Identifier	phdr		3601620	1					
ANR	3601650	CompoundStatement		7:16:81:81	3601620	1					
ANR	3601651	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3601620	0					
ANR	3601652	ForInit	i = 0 ;	1756:7:50868:50873	3601620	0	True				
ANR	3601653	AssignmentExpression	i = 0		3601620	0		=			
ANR	3601654	Identifier	i		3601620	0					
ANR	3601655	PrimaryExpression	0		3601620	1					
ANR	3601656	Condition	i < bin -> ehdr . e_phnum	1756:14:50875:50895	3601620	1	True				
ANR	3601657	RelationalExpression	i < bin -> ehdr . e_phnum		3601620	0		<			
ANR	3601658	Identifier	i		3601620	0					
ANR	3601659	MemberAccess	bin -> ehdr . e_phnum		3601620	1					
ANR	3601660	PtrMemberAccess	bin -> ehdr		3601620	0					
ANR	3601661	Identifier	bin		3601620	0					
ANR	3601662	Identifier	ehdr		3601620	1					
ANR	3601663	Identifier	e_phnum		3601620	1					
ANR	3601664	PostIncDecOperationExpression	i ++	1756:37:50898:50900	3601620	2	True				
ANR	3601665	Identifier	i		3601620	0					
ANR	3601666	IncDec	++		3601620	1					
ANR	3601667	CompoundStatement		8:42:125:125	3601620	3					
ANR	3601668	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_LOAD )		3601620	0					
ANR	3601669	Condition	bin -> phdr [ i ] . p_type == PT_LOAD	1757:7:50912:50941	3601620	0	True				
ANR	3601670	EqualityExpression	bin -> phdr [ i ] . p_type == PT_LOAD		3601620	0		==			
ANR	3601671	MemberAccess	bin -> phdr [ i ] . p_type		3601620	0					
ANR	3601672	ArrayIndexing	bin -> phdr [ i ]		3601620	0					
ANR	3601673	PtrMemberAccess	bin -> phdr		3601620	0					
ANR	3601674	Identifier	bin		3601620	0					
ANR	3601675	Identifier	phdr		3601620	1					
ANR	3601676	Identifier	i		3601620	1					
ANR	3601677	Identifier	p_type		3601620	1					
ANR	3601678	Identifier	PT_LOAD		3601620	1					
ANR	3601679	CompoundStatement		9:39:166:166	3601620	1					
ANR	3601680	ExpressionStatement	tmp = ( ut64 ) bin -> phdr [ i ] . p_vaddr & ELF_PAGE_MASK	1758:4:50950:50998	3601620	0	True				
ANR	3601681	AssignmentExpression	tmp = ( ut64 ) bin -> phdr [ i ] . p_vaddr & ELF_PAGE_MASK		3601620	0		=			
ANR	3601682	Identifier	tmp		3601620	0					
ANR	3601683	BitAndExpression	( ut64 ) bin -> phdr [ i ] . p_vaddr & ELF_PAGE_MASK		3601620	1		&			
ANR	3601684	CastExpression	( ut64 ) bin -> phdr [ i ] . p_vaddr		3601620	0					
ANR	3601685	CastTarget	ut64		3601620	0					
ANR	3601686	MemberAccess	bin -> phdr [ i ] . p_vaddr		3601620	1					
ANR	3601687	ArrayIndexing	bin -> phdr [ i ]		3601620	0					
ANR	3601688	PtrMemberAccess	bin -> phdr		3601620	0					
ANR	3601689	Identifier	bin		3601620	0					
ANR	3601690	Identifier	phdr		3601620	1					
ANR	3601691	Identifier	i		3601620	1					
ANR	3601692	Identifier	p_vaddr		3601620	1					
ANR	3601693	Identifier	ELF_PAGE_MASK		3601620	1					
ANR	3601694	ExpressionStatement	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )	1759:4:51004:51044	3601620	1	True				
ANR	3601695	AssignmentExpression	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		3601620	0		=			
ANR	3601696	Identifier	tmp		3601620	0					
ANR	3601697	AdditiveExpression	tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		3601620	1		-			
ANR	3601698	Identifier	tmp		3601620	0					
ANR	3601699	MultiplicativeExpression	tmp % ( 1 << ELF_PAGE_SIZE )		3601620	1		%			
ANR	3601700	Identifier	tmp		3601620	0					
ANR	3601701	ShiftExpression	1 << ELF_PAGE_SIZE		3601620	1		<<			
ANR	3601702	PrimaryExpression	1		3601620	0					
ANR	3601703	Identifier	ELF_PAGE_SIZE		3601620	1					
ANR	3601704	IfStatement	if ( tmp < base )		3601620	2					
ANR	3601705	Condition	tmp < base	1760:8:51054:51063	3601620	0	True				
ANR	3601706	RelationalExpression	tmp < base		3601620	0		<			
ANR	3601707	Identifier	tmp		3601620	0					
ANR	3601708	Identifier	base		3601620	1					
ANR	3601709	CompoundStatement		12:20:288:288	3601620	1					
ANR	3601710	ExpressionStatement	base = tmp	1761:5:51073:51083	3601620	0	True				
ANR	3601711	AssignmentExpression	base = tmp		3601620	0		=			
ANR	3601712	Identifier	base		3601620	0					
ANR	3601713	Identifier	tmp		3601620	1					
ANR	3601714	IfStatement	if ( base == UT64_MAX && is_bin_etrel ( bin ) )		3601620	4					
ANR	3601715	Condition	base == UT64_MAX && is_bin_etrel ( bin )	1766:5:51108:51145	3601620	0	True				
ANR	3601716	AndExpression	base == UT64_MAX && is_bin_etrel ( bin )		3601620	0		&&			
ANR	3601717	EqualityExpression	base == UT64_MAX		3601620	0		==			
ANR	3601718	Identifier	base		3601620	0					
ANR	3601719	Identifier	UT64_MAX		3601620	1					
ANR	3601720	CallExpression	is_bin_etrel ( bin )		3601620	1					
ANR	3601721	Callee	is_bin_etrel		3601620	0					
ANR	3601722	Identifier	is_bin_etrel		3601620	0					
ANR	3601723	ArgumentList	bin		3601620	1					
ANR	3601724	Argument	bin		3601620	0					
ANR	3601725	Identifier	bin		3601620	0					
ANR	3601726	CompoundStatement		18:45:370:370	3601620	1					
ANR	3601727	ReturnStatement	return 0x08000000 ;	1769:2:51234:51251	3601620	0	True				
ANR	3601728	PrimaryExpression	0x08000000		3601620	0					
ANR	3601729	ReturnStatement	return base == UT64_MAX ? 0 : base ;	1771:1:51257:51289	3601620	5	True				
ANR	3601730	ConditionalExpression	base == UT64_MAX ? 0 : base		3601620	0					
ANR	3601731	Condition	base == UT64_MAX		3601620	0					
ANR	3601732	EqualityExpression	base == UT64_MAX		3601620	0		==			
ANR	3601733	Identifier	base		3601620	0					
ANR	3601734	Identifier	UT64_MAX		3601620	1					
ANR	3601735	PrimaryExpression	0		3601620	1					
ANR	3601736	Identifier	base		3601620	2					
ANR	3601737	ReturnType	ut64 Elf_		3601620	1					
ANR	3601738	Identifier	( r_bin_elf_get_baddr )		3601620	2					
ANR	3601739	Identifier	r_bin_elf_get_baddr		3601620	3					
ANR	3601740	ParameterList	ELFOBJ * bin		3601620	4					
ANR	3601741	Parameter	ELFOBJ * bin	1749:31:50764:50774	3601620	0	True				
ANR	3601742	ParameterType	ELFOBJ *		3601620	0					
ANR	3601743	Identifier	bin		3601620	1					
ANR	3601744	CFGEntryNode	ENTRY		3601620		True				
ANR	3601745	CFGExitNode	EXIT		3601620		True				
ANR	3601746	Symbol	ELF_PAGE_MASK		3601620						
ANR	3601747	Symbol	bin		3601620						
ANR	3601748	Symbol	i		3601620						
ANR	3601749	Symbol	bin -> phdr		3601620						
ANR	3601750	Symbol	PT_LOAD		3601620						
ANR	3601751	Symbol	is_bin_etrel		3601620						
ANR	3601752	Symbol	bin -> ehdr . e_phnum		3601620						
ANR	3601753	Symbol	* bin		3601620						
ANR	3601754	Symbol	* bin -> phdr		3601620						
ANR	3601755	Symbol	ELF_PAGE_SIZE		3601620						
ANR	3601756	Symbol	* i		3601620						
ANR	3601757	Symbol	tmp		3601620						
ANR	3601758	Symbol	bin -> ehdr		3601620						
ANR	3601759	Symbol	bin -> phdr [ i ] . p_type		3601620						
ANR	3601760	Symbol	* * bin		3601620						
ANR	3601761	Symbol	UT64_MAX		3601620						
ANR	3601762	Symbol	base		3601620						
ANR	3601763	Symbol	bin -> phdr [ i ] . p_vaddr		3601620						
ANR	3601764	Function	r_bin_elf_get_boffset	1774:0:51294:51712							
ANR	3601765	FunctionDef	r_bin_elf_get_boffset (ELFOBJ * bin)		3601764	0					
ANR	3601766	CompoundStatement		1774:46:51340:51712	3601764	0					
ANR	3601767	IdentifierDeclStatement	int i ;	1775:1:51343:51348	3601764	0	True				
ANR	3601768	IdentifierDecl	i		3601764	0					
ANR	3601769	IdentifierDeclType	int		3601764	0					
ANR	3601770	Identifier	i		3601764	1					
ANR	3601771	IdentifierDeclStatement	"ut64 tmp , base = UT64_MAX ;"	1776:1:51351:51376	3601764	1	True				
ANR	3601772	IdentifierDecl	tmp		3601764	0					
ANR	3601773	IdentifierDeclType	ut64		3601764	0					
ANR	3601774	Identifier	tmp		3601764	1					
ANR	3601775	IdentifierDecl	base = UT64_MAX		3601764	1					
ANR	3601776	IdentifierDeclType	ut64		3601764	0					
ANR	3601777	Identifier	base		3601764	1					
ANR	3601778	AssignmentExpression	base = UT64_MAX		3601764	2		=			
ANR	3601779	Identifier	UT64_MAX		3601764	0					
ANR	3601780	Identifier	UT64_MAX		3601764	1					
ANR	3601781	ExpressionStatement	"r_return_val_if_fail ( bin , 0 )"	1777:1:51379:51408	3601764	2	True				
ANR	3601782	CallExpression	"r_return_val_if_fail ( bin , 0 )"		3601764	0					
ANR	3601783	Callee	r_return_val_if_fail		3601764	0					
ANR	3601784	Identifier	r_return_val_if_fail		3601764	0					
ANR	3601785	ArgumentList	bin		3601764	1					
ANR	3601786	Argument	bin		3601764	0					
ANR	3601787	Identifier	bin		3601764	0					
ANR	3601788	Argument	0		3601764	1					
ANR	3601789	PrimaryExpression	0		3601764	0					
ANR	3601790	IfStatement	if ( ! bin -> phdr )		3601764	3					
ANR	3601791	Condition	! bin -> phdr	1779:5:51416:51425	3601764	0	True				
ANR	3601792	UnaryOperationExpression	! bin -> phdr		3601764	0					
ANR	3601793	UnaryOperator	!		3601764	0					
ANR	3601794	PtrMemberAccess	bin -> phdr		3601764	1					
ANR	3601795	Identifier	bin		3601764	0					
ANR	3601796	Identifier	phdr		3601764	1					
ANR	3601797	CompoundStatement		6:17:87:87	3601764	1					
ANR	3601798	ReturnStatement	return 0 ;	1780:2:51432:51440	3601764	0	True				
ANR	3601799	PrimaryExpression	0		3601764	0					
ANR	3601800	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3601764	4					
ANR	3601801	ForInit	i = 0 ;	1783:6:51452:51457	3601764	0	True				
ANR	3601802	AssignmentExpression	i = 0		3601764	0		=			
ANR	3601803	Identifier	i		3601764	0					
ANR	3601804	PrimaryExpression	0		3601764	1					
ANR	3601805	Condition	i < bin -> ehdr . e_phnum	1783:13:51459:51479	3601764	1	True				
ANR	3601806	RelationalExpression	i < bin -> ehdr . e_phnum		3601764	0		<			
ANR	3601807	Identifier	i		3601764	0					
ANR	3601808	MemberAccess	bin -> ehdr . e_phnum		3601764	1					
ANR	3601809	PtrMemberAccess	bin -> ehdr		3601764	0					
ANR	3601810	Identifier	bin		3601764	0					
ANR	3601811	Identifier	ehdr		3601764	1					
ANR	3601812	Identifier	e_phnum		3601764	1					
ANR	3601813	PostIncDecOperationExpression	i ++	1783:36:51482:51484	3601764	2	True				
ANR	3601814	Identifier	i		3601764	0					
ANR	3601815	IncDec	++		3601764	1					
ANR	3601816	CompoundStatement		10:41:146:146	3601764	3					
ANR	3601817	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_LOAD )		3601764	0					
ANR	3601818	Condition	bin -> phdr [ i ] . p_type == PT_LOAD	1784:6:51495:51524	3601764	0	True				
ANR	3601819	EqualityExpression	bin -> phdr [ i ] . p_type == PT_LOAD		3601764	0		==			
ANR	3601820	MemberAccess	bin -> phdr [ i ] . p_type		3601764	0					
ANR	3601821	ArrayIndexing	bin -> phdr [ i ]		3601764	0					
ANR	3601822	PtrMemberAccess	bin -> phdr		3601764	0					
ANR	3601823	Identifier	bin		3601764	0					
ANR	3601824	Identifier	phdr		3601764	1					
ANR	3601825	Identifier	i		3601764	1					
ANR	3601826	Identifier	p_type		3601764	1					
ANR	3601827	Identifier	PT_LOAD		3601764	1					
ANR	3601828	CompoundStatement		11:38:186:186	3601764	1					
ANR	3601829	ExpressionStatement	tmp = ( ut64 ) bin -> phdr [ i ] . p_offset & ELF_PAGE_MASK	1785:3:51532:51581	3601764	0	True				
ANR	3601830	AssignmentExpression	tmp = ( ut64 ) bin -> phdr [ i ] . p_offset & ELF_PAGE_MASK		3601764	0		=			
ANR	3601831	Identifier	tmp		3601764	0					
ANR	3601832	BitAndExpression	( ut64 ) bin -> phdr [ i ] . p_offset & ELF_PAGE_MASK		3601764	1		&			
ANR	3601833	CastExpression	( ut64 ) bin -> phdr [ i ] . p_offset		3601764	0					
ANR	3601834	CastTarget	ut64		3601764	0					
ANR	3601835	MemberAccess	bin -> phdr [ i ] . p_offset		3601764	1					
ANR	3601836	ArrayIndexing	bin -> phdr [ i ]		3601764	0					
ANR	3601837	PtrMemberAccess	bin -> phdr		3601764	0					
ANR	3601838	Identifier	bin		3601764	0					
ANR	3601839	Identifier	phdr		3601764	1					
ANR	3601840	Identifier	i		3601764	1					
ANR	3601841	Identifier	p_offset		3601764	1					
ANR	3601842	Identifier	ELF_PAGE_MASK		3601764	1					
ANR	3601843	ExpressionStatement	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )	1786:3:51586:51626	3601764	1	True				
ANR	3601844	AssignmentExpression	tmp = tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		3601764	0		=			
ANR	3601845	Identifier	tmp		3601764	0					
ANR	3601846	AdditiveExpression	tmp - ( tmp % ( 1 << ELF_PAGE_SIZE ) )		3601764	1		-			
ANR	3601847	Identifier	tmp		3601764	0					
ANR	3601848	MultiplicativeExpression	tmp % ( 1 << ELF_PAGE_SIZE )		3601764	1		%			
ANR	3601849	Identifier	tmp		3601764	0					
ANR	3601850	ShiftExpression	1 << ELF_PAGE_SIZE		3601764	1		<<			
ANR	3601851	PrimaryExpression	1		3601764	0					
ANR	3601852	Identifier	ELF_PAGE_SIZE		3601764	1					
ANR	3601853	IfStatement	if ( tmp < base )		3601764	2					
ANR	3601854	Condition	tmp < base	1787:7:51635:51644	3601764	0	True				
ANR	3601855	RelationalExpression	tmp < base		3601764	0		<			
ANR	3601856	Identifier	tmp		3601764	0					
ANR	3601857	Identifier	base		3601764	1					
ANR	3601858	CompoundStatement		14:19:306:306	3601764	1					
ANR	3601859	ExpressionStatement	base = tmp	1788:4:51653:51663	3601764	0	True				
ANR	3601860	AssignmentExpression	base = tmp		3601764	0		=			
ANR	3601861	Identifier	base		3601764	0					
ANR	3601862	Identifier	tmp		3601764	1					
ANR	3601863	ReturnStatement	return base == UT64_MAX ? 0 : base ;	1792:1:51678:51710	3601764	5	True				
ANR	3601864	ConditionalExpression	base == UT64_MAX ? 0 : base		3601764	0					
ANR	3601865	Condition	base == UT64_MAX		3601764	0					
ANR	3601866	EqualityExpression	base == UT64_MAX		3601764	0		==			
ANR	3601867	Identifier	base		3601764	0					
ANR	3601868	Identifier	UT64_MAX		3601764	1					
ANR	3601869	PrimaryExpression	0		3601764	1					
ANR	3601870	Identifier	base		3601764	2					
ANR	3601871	ReturnType	ut64 Elf_		3601764	1					
ANR	3601872	Identifier	( r_bin_elf_get_boffset )		3601764	2					
ANR	3601873	Identifier	r_bin_elf_get_boffset		3601764	3					
ANR	3601874	ParameterList	ELFOBJ * bin		3601764	4					
ANR	3601875	Parameter	ELFOBJ * bin	1774:33:51327:51337	3601764	0	True				
ANR	3601876	ParameterType	ELFOBJ *		3601764	0					
ANR	3601877	Identifier	bin		3601764	1					
ANR	3601878	CFGEntryNode	ENTRY		3601764		True				
ANR	3601879	CFGExitNode	EXIT		3601764		True				
ANR	3601880	Symbol	ELF_PAGE_MASK		3601764						
ANR	3601881	Symbol	bin		3601764						
ANR	3601882	Symbol	i		3601764						
ANR	3601883	Symbol	bin -> phdr		3601764						
ANR	3601884	Symbol	PT_LOAD		3601764						
ANR	3601885	Symbol	bin -> ehdr . e_phnum		3601764						
ANR	3601886	Symbol	* bin		3601764						
ANR	3601887	Symbol	* bin -> phdr		3601764						
ANR	3601888	Symbol	ELF_PAGE_SIZE		3601764						
ANR	3601889	Symbol	bin -> phdr [ i ] . p_offset		3601764						
ANR	3601890	Symbol	* i		3601764						
ANR	3601891	Symbol	tmp		3601764						
ANR	3601892	Symbol	bin -> ehdr		3601764						
ANR	3601893	Symbol	bin -> phdr [ i ] . p_type		3601764						
ANR	3601894	Symbol	* * bin		3601764						
ANR	3601895	Symbol	UT64_MAX		3601764						
ANR	3601896	Symbol	base		3601764						
ANR	3601897	Function	r_bin_elf_get_init_offset	1795:0:51715:52184							
ANR	3601898	FunctionDef	r_bin_elf_get_init_offset (ELFOBJ * bin)		3601897	0					
ANR	3601899	CompoundStatement		1795:50:51765:52184	3601897	0					
ANR	3601900	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	1796:1:51768:51819	3601897	0	True				
ANR	3601901	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3601897	0					
ANR	3601902	IdentifierDeclType	ut64		3601897	0					
ANR	3601903	Identifier	entry		3601897	1					
ANR	3601904	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3601897	2		=			
ANR	3601905	Identifier	entry		3601897	0					
ANR	3601906	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3601897	1					
ANR	3601907	Callee	Elf_ ( r_bin_elf_get_entry_offset )		3601897	0					
ANR	3601908	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		3601897	0					
ANR	3601909	Callee	Elf_		3601897	0					
ANR	3601910	Identifier	Elf_		3601897	0					
ANR	3601911	ArgumentList	r_bin_elf_get_entry_offset		3601897	1					
ANR	3601912	Argument	r_bin_elf_get_entry_offset		3601897	0					
ANR	3601913	Identifier	r_bin_elf_get_entry_offset		3601897	0					
ANR	3601914	ArgumentList	bin		3601897	1					
ANR	3601915	Argument	bin		3601897	0					
ANR	3601916	Identifier	bin		3601897	0					
ANR	3601917	IdentifierDeclStatement	ut8 buf [ 128 ] ;	1797:1:51822:51834	3601897	1	True				
ANR	3601918	IdentifierDecl	buf [ 128 ]		3601897	0					
ANR	3601919	IdentifierDeclType	ut8 [ 128 ]		3601897	0					
ANR	3601920	Identifier	buf		3601897	1					
ANR	3601921	PrimaryExpression	128		3601897	2					
ANR	3601922	IfStatement	if ( ! bin || entry == UT64_MAX )		3601897	2					
ANR	3601923	Condition	! bin || entry == UT64_MAX	1798:5:51841:51865	3601897	0	True				
ANR	3601924	OrExpression	! bin || entry == UT64_MAX		3601897	0		||			
ANR	3601925	UnaryOperationExpression	! bin		3601897	0					
ANR	3601926	UnaryOperator	!		3601897	0					
ANR	3601927	Identifier	bin		3601897	1					
ANR	3601928	EqualityExpression	entry == UT64_MAX		3601897	1		==			
ANR	3601929	Identifier	entry		3601897	0					
ANR	3601930	Identifier	UT64_MAX		3601897	1					
ANR	3601931	CompoundStatement		4:32:102:102	3601897	1					
ANR	3601932	ReturnStatement	return UT64_MAX ;	1799:2:51872:51887	3601897	0	True				
ANR	3601933	Identifier	UT64_MAX		3601897	0					
ANR	3601934	IfStatement	"if ( r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) ) < 1 )"		3601897	3					
ANR	3601935	Condition	"r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) ) < 1"	1801:5:51897:51953	3601897	0	True				
ANR	3601936	RelationalExpression	"r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) ) < 1"		3601897	0		<			
ANR	3601937	CallExpression	"r_buf_read_at ( bin -> b , entry + 16 , buf , sizeof ( buf ) )"		3601897	0					
ANR	3601938	Callee	r_buf_read_at		3601897	0					
ANR	3601939	Identifier	r_buf_read_at		3601897	0					
ANR	3601940	ArgumentList	bin -> b		3601897	1					
ANR	3601941	Argument	bin -> b		3601897	0					
ANR	3601942	PtrMemberAccess	bin -> b		3601897	0					
ANR	3601943	Identifier	bin		3601897	0					
ANR	3601944	Identifier	b		3601897	1					
ANR	3601945	Argument	entry + 16		3601897	1					
ANR	3601946	AdditiveExpression	entry + 16		3601897	0		+			
ANR	3601947	Identifier	entry		3601897	0					
ANR	3601948	PrimaryExpression	16		3601897	1					
ANR	3601949	Argument	buf		3601897	2					
ANR	3601950	Identifier	buf		3601897	0					
ANR	3601951	Argument	sizeof ( buf )		3601897	3					
ANR	3601952	SizeofExpression	sizeof ( buf )		3601897	0					
ANR	3601953	Sizeof	sizeof		3601897	0					
ANR	3601954	SizeofOperand	buf		3601897	1					
ANR	3601955	PrimaryExpression	1		3601897	1					
ANR	3601956	CompoundStatement		7:64:190:190	3601897	1					
ANR	3601957	ExpressionStatement	"bprintf ( ""read (init_offset)\\n"" )"	1802:2:51960:51992	3601897	0	True				
ANR	3601958	CallExpression	"bprintf ( ""read (init_offset)\\n"" )"		3601897	0					
ANR	3601959	Callee	bprintf		3601897	0					
ANR	3601960	Identifier	bprintf		3601897	0					
ANR	3601961	ArgumentList	"""read (init_offset)\\n"""		3601897	1					
ANR	3601962	Argument	"""read (init_offset)\\n"""		3601897	0					
ANR	3601963	PrimaryExpression	"""read (init_offset)\\n"""		3601897	0					
ANR	3601964	ReturnStatement	return 0 ;	1803:2:51996:52004	3601897	1	True				
ANR	3601965	PrimaryExpression	0		3601897	0					
ANR	3601966	IfStatement	if ( buf [ 0 ] == 0x68 )		3601897	4					
ANR	3601967	Condition	buf [ 0 ] == 0x68	1805:5:52014:52027	3601897	0	True				
ANR	3601968	EqualityExpression	buf [ 0 ] == 0x68		3601897	0		==			
ANR	3601969	ArrayIndexing	buf [ 0 ]		3601897	0					
ANR	3601970	Identifier	buf		3601897	0					
ANR	3601971	PrimaryExpression	0		3601897	1					
ANR	3601972	PrimaryExpression	0x68		3601897	1					
ANR	3601973	CompoundStatement		12:2:288:297	3601897	1					
ANR	3601974	IdentifierDeclStatement	ut64 addr ;	1806:2:52054:52063	3601897	0	True				
ANR	3601975	IdentifierDecl	addr		3601897	0					
ANR	3601976	IdentifierDeclType	ut64		3601897	0					
ANR	3601977	Identifier	addr		3601897	1					
ANR	3601978	ExpressionStatement	"memmove ( buf , buf + 1 , 4 )"	1807:2:52067:52092	3601897	1	True				
ANR	3601979	CallExpression	"memmove ( buf , buf + 1 , 4 )"		3601897	0					
ANR	3601980	Callee	memmove		3601897	0					
ANR	3601981	Identifier	memmove		3601897	0					
ANR	3601982	ArgumentList	buf		3601897	1					
ANR	3601983	Argument	buf		3601897	0					
ANR	3601984	Identifier	buf		3601897	0					
ANR	3601985	Argument	buf + 1		3601897	1					
ANR	3601986	AdditiveExpression	buf + 1		3601897	0		+			
ANR	3601987	Identifier	buf		3601897	0					
ANR	3601988	PrimaryExpression	1		3601897	1					
ANR	3601989	Argument	4		3601897	2					
ANR	3601990	PrimaryExpression	4		3601897	0					
ANR	3601991	ExpressionStatement	addr = ( ut64 ) r_read_le32 ( buf )	1808:2:52096:52126	3601897	2	True				
ANR	3601992	AssignmentExpression	addr = ( ut64 ) r_read_le32 ( buf )		3601897	0		=			
ANR	3601993	Identifier	addr		3601897	0					
ANR	3601994	CastExpression	( ut64 ) r_read_le32 ( buf )		3601897	1					
ANR	3601995	CastTarget	ut64		3601897	0					
ANR	3601996	CallExpression	r_read_le32 ( buf )		3601897	1					
ANR	3601997	Callee	r_read_le32		3601897	0					
ANR	3601998	Identifier	r_read_le32		3601897	0					
ANR	3601999	ArgumentList	buf		3601897	1					
ANR	3602000	Argument	buf		3601897	0					
ANR	3602001	Identifier	buf		3601897	0					
ANR	3602002	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1809:2:52130:52168	3601897	3	True				
ANR	3602003	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		3601897	0					
ANR	3602004	Callee	Elf_ ( r_bin_elf_v2p )		3601897	0					
ANR	3602005	CallExpression	Elf_ ( r_bin_elf_v2p )		3601897	0					
ANR	3602006	Callee	Elf_		3601897	0					
ANR	3602007	Identifier	Elf_		3601897	0					
ANR	3602008	ArgumentList	r_bin_elf_v2p		3601897	1					
ANR	3602009	Argument	r_bin_elf_v2p		3601897	0					
ANR	3602010	Identifier	r_bin_elf_v2p		3601897	0					
ANR	3602011	ArgumentList	bin		3601897	1					
ANR	3602012	Argument	bin		3601897	0					
ANR	3602013	Identifier	bin		3601897	0					
ANR	3602014	Argument	addr		3601897	1					
ANR	3602015	Identifier	addr		3601897	0					
ANR	3602016	ReturnStatement	return 0 ;	1811:1:52174:52182	3601897	5	True				
ANR	3602017	PrimaryExpression	0		3601897	0					
ANR	3602018	ReturnType	ut64 Elf_		3601897	1					
ANR	3602019	Identifier	( r_bin_elf_get_init_offset )		3601897	2					
ANR	3602020	Identifier	r_bin_elf_get_init_offset		3601897	3					
ANR	3602021	ParameterList	ELFOBJ * bin		3601897	4					
ANR	3602022	Parameter	ELFOBJ * bin	1795:37:51752:51762	3601897	0	True				
ANR	3602023	ParameterType	ELFOBJ *		3601897	0					
ANR	3602024	Identifier	bin		3601897	1					
ANR	3602025	CFGEntryNode	ENTRY		3601897		True				
ANR	3602026	CFGExitNode	EXIT		3601897		True				
ANR	3602027	Symbol	Elf_		3601897						
ANR	3602028	Symbol	bin -> b		3601897						
ANR	3602029	Symbol	* buf		3601897						
ANR	3602030	Symbol	r_read_le32		3601897						
ANR	3602031	Symbol	bin		3601897						
ANR	3602032	Symbol	* bin		3601897						
ANR	3602033	Symbol	entry		3601897						
ANR	3602034	Symbol	buf		3601897						
ANR	3602035	Symbol	r_buf_read_at		3601897						
ANR	3602036	Symbol	UT64_MAX		3601897						
ANR	3602037	Symbol	addr		3601897						
ANR	3602038	Symbol	r_bin_elf_v2p		3601897						
ANR	3602039	Symbol	r_bin_elf_get_entry_offset		3601897						
ANR	3602040	Function	r_bin_elf_get_fini_offset	1814:0:52187:52648							
ANR	3602041	FunctionDef	r_bin_elf_get_fini_offset (ELFOBJ * bin)		3602040	0					
ANR	3602042	CompoundStatement		1814:50:52237:52648	3602040	0					
ANR	3602043	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	1815:1:52240:52291	3602040	0	True				
ANR	3602044	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3602040	0					
ANR	3602045	IdentifierDeclType	ut64		3602040	0					
ANR	3602046	Identifier	entry		3602040	1					
ANR	3602047	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3602040	2		=			
ANR	3602048	Identifier	entry		3602040	0					
ANR	3602049	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3602040	1					
ANR	3602050	Callee	Elf_ ( r_bin_elf_get_entry_offset )		3602040	0					
ANR	3602051	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		3602040	0					
ANR	3602052	Callee	Elf_		3602040	0					
ANR	3602053	Identifier	Elf_		3602040	0					
ANR	3602054	ArgumentList	r_bin_elf_get_entry_offset		3602040	1					
ANR	3602055	Argument	r_bin_elf_get_entry_offset		3602040	0					
ANR	3602056	Identifier	r_bin_elf_get_entry_offset		3602040	0					
ANR	3602057	ArgumentList	bin		3602040	1					
ANR	3602058	Argument	bin		3602040	0					
ANR	3602059	Identifier	bin		3602040	0					
ANR	3602060	IdentifierDeclStatement	ut8 buf [ 512 ] ;	1816:1:52294:52306	3602040	1	True				
ANR	3602061	IdentifierDecl	buf [ 512 ]		3602040	0					
ANR	3602062	IdentifierDeclType	ut8 [ 512 ]		3602040	0					
ANR	3602063	Identifier	buf		3602040	1					
ANR	3602064	PrimaryExpression	512		3602040	2					
ANR	3602065	IfStatement	if ( ! bin || entry == UT64_MAX )		3602040	2					
ANR	3602066	Condition	! bin || entry == UT64_MAX	1817:5:52313:52337	3602040	0	True				
ANR	3602067	OrExpression	! bin || entry == UT64_MAX		3602040	0		||			
ANR	3602068	UnaryOperationExpression	! bin		3602040	0					
ANR	3602069	UnaryOperator	!		3602040	0					
ANR	3602070	Identifier	bin		3602040	1					
ANR	3602071	EqualityExpression	entry == UT64_MAX		3602040	1		==			
ANR	3602072	Identifier	entry		3602040	0					
ANR	3602073	Identifier	UT64_MAX		3602040	1					
ANR	3602074	CompoundStatement		4:32:102:102	3602040	1					
ANR	3602075	ReturnStatement	return UT64_MAX ;	1818:2:52344:52359	3602040	0	True				
ANR	3602076	Identifier	UT64_MAX		3602040	0					
ANR	3602077	IfStatement	"if ( r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) ) == - 1 )"		3602040	3					
ANR	3602078	Condition	"r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) ) == - 1"	1820:5:52369:52427	3602040	0	True				
ANR	3602079	EqualityExpression	"r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) ) == - 1"		3602040	0		==			
ANR	3602080	CallExpression	"r_buf_read_at ( bin -> b , entry + 11 , buf , sizeof ( buf ) )"		3602040	0					
ANR	3602081	Callee	r_buf_read_at		3602040	0					
ANR	3602082	Identifier	r_buf_read_at		3602040	0					
ANR	3602083	ArgumentList	bin -> b		3602040	1					
ANR	3602084	Argument	bin -> b		3602040	0					
ANR	3602085	PtrMemberAccess	bin -> b		3602040	0					
ANR	3602086	Identifier	bin		3602040	0					
ANR	3602087	Identifier	b		3602040	1					
ANR	3602088	Argument	entry + 11		3602040	1					
ANR	3602089	AdditiveExpression	entry + 11		3602040	0		+			
ANR	3602090	Identifier	entry		3602040	0					
ANR	3602091	PrimaryExpression	11		3602040	1					
ANR	3602092	Argument	buf		3602040	2					
ANR	3602093	Identifier	buf		3602040	0					
ANR	3602094	Argument	sizeof ( buf )		3602040	3					
ANR	3602095	SizeofExpression	sizeof ( buf )		3602040	0					
ANR	3602096	Sizeof	sizeof		3602040	0					
ANR	3602097	SizeofOperand	buf		3602040	1					
ANR	3602098	UnaryOperationExpression	- 1		3602040	1					
ANR	3602099	UnaryOperator	-		3602040	0					
ANR	3602100	PrimaryExpression	1		3602040	1					
ANR	3602101	CompoundStatement		7:66:192:192	3602040	1					
ANR	3602102	ExpressionStatement	"bprintf ( ""read (get_fini)\\n"" )"	1821:2:52434:52463	3602040	0	True				
ANR	3602103	CallExpression	"bprintf ( ""read (get_fini)\\n"" )"		3602040	0					
ANR	3602104	Callee	bprintf		3602040	0					
ANR	3602105	Identifier	bprintf		3602040	0					
ANR	3602106	ArgumentList	"""read (get_fini)\\n"""		3602040	1					
ANR	3602107	Argument	"""read (get_fini)\\n"""		3602040	0					
ANR	3602108	PrimaryExpression	"""read (get_fini)\\n"""		3602040	0					
ANR	3602109	ReturnStatement	return 0 ;	1822:2:52467:52475	3602040	1	True				
ANR	3602110	PrimaryExpression	0		3602040	0					
ANR	3602111	IfStatement	if ( * buf == 0x68 )		3602040	4					
ANR	3602112	Condition	* buf == 0x68	1824:5:52485:52496	3602040	0	True				
ANR	3602113	EqualityExpression	* buf == 0x68		3602040	0		==			
ANR	3602114	UnaryOperationExpression	* buf		3602040	0					
ANR	3602115	UnaryOperator	*		3602040	0					
ANR	3602116	Identifier	buf		3602040	1					
ANR	3602117	PrimaryExpression	0x68		3602040	1					
ANR	3602118	CompoundStatement		13:2:317:352	3602040	1					
ANR	3602119	ExpressionStatement	"memmove ( buf , buf + 1 , 4 )"	1825:2:52526:52551	3602040	0	True				
ANR	3602120	CallExpression	"memmove ( buf , buf + 1 , 4 )"		3602040	0					
ANR	3602121	Callee	memmove		3602040	0					
ANR	3602122	Identifier	memmove		3602040	0					
ANR	3602123	ArgumentList	buf		3602040	1					
ANR	3602124	Argument	buf		3602040	0					
ANR	3602125	Identifier	buf		3602040	0					
ANR	3602126	Argument	buf + 1		3602040	1					
ANR	3602127	AdditiveExpression	buf + 1		3602040	0		+			
ANR	3602128	Identifier	buf		3602040	0					
ANR	3602129	PrimaryExpression	1		3602040	1					
ANR	3602130	Argument	4		3602040	2					
ANR	3602131	PrimaryExpression	4		3602040	0					
ANR	3602132	IdentifierDeclStatement	ut64 addr = ( ut64 ) r_read_le32 ( buf ) ;	1826:2:52555:52590	3602040	1	True				
ANR	3602133	IdentifierDecl	addr = ( ut64 ) r_read_le32 ( buf )		3602040	0					
ANR	3602134	IdentifierDeclType	ut64		3602040	0					
ANR	3602135	Identifier	addr		3602040	1					
ANR	3602136	AssignmentExpression	addr = ( ut64 ) r_read_le32 ( buf )		3602040	2		=			
ANR	3602137	Identifier	addr		3602040	0					
ANR	3602138	CastExpression	( ut64 ) r_read_le32 ( buf )		3602040	1					
ANR	3602139	CastTarget	ut64		3602040	0					
ANR	3602140	CallExpression	r_read_le32 ( buf )		3602040	1					
ANR	3602141	Callee	r_read_le32		3602040	0					
ANR	3602142	Identifier	r_read_le32		3602040	0					
ANR	3602143	ArgumentList	buf		3602040	1					
ANR	3602144	Argument	buf		3602040	0					
ANR	3602145	Identifier	buf		3602040	0					
ANR	3602146	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1827:2:52594:52632	3602040	2	True				
ANR	3602147	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		3602040	0					
ANR	3602148	Callee	Elf_ ( r_bin_elf_v2p )		3602040	0					
ANR	3602149	CallExpression	Elf_ ( r_bin_elf_v2p )		3602040	0					
ANR	3602150	Callee	Elf_		3602040	0					
ANR	3602151	Identifier	Elf_		3602040	0					
ANR	3602152	ArgumentList	r_bin_elf_v2p		3602040	1					
ANR	3602153	Argument	r_bin_elf_v2p		3602040	0					
ANR	3602154	Identifier	r_bin_elf_v2p		3602040	0					
ANR	3602155	ArgumentList	bin		3602040	1					
ANR	3602156	Argument	bin		3602040	0					
ANR	3602157	Identifier	bin		3602040	0					
ANR	3602158	Argument	addr		3602040	1					
ANR	3602159	Identifier	addr		3602040	0					
ANR	3602160	ReturnStatement	return 0 ;	1829:1:52638:52646	3602040	5	True				
ANR	3602161	PrimaryExpression	0		3602040	0					
ANR	3602162	ReturnType	ut64 Elf_		3602040	1					
ANR	3602163	Identifier	( r_bin_elf_get_fini_offset )		3602040	2					
ANR	3602164	Identifier	r_bin_elf_get_fini_offset		3602040	3					
ANR	3602165	ParameterList	ELFOBJ * bin		3602040	4					
ANR	3602166	Parameter	ELFOBJ * bin	1814:37:52224:52234	3602040	0	True				
ANR	3602167	ParameterType	ELFOBJ *		3602040	0					
ANR	3602168	Identifier	bin		3602040	1					
ANR	3602169	CFGEntryNode	ENTRY		3602040		True				
ANR	3602170	CFGExitNode	EXIT		3602040		True				
ANR	3602171	Symbol	Elf_		3602040						
ANR	3602172	Symbol	bin -> b		3602040						
ANR	3602173	Symbol	* buf		3602040						
ANR	3602174	Symbol	r_read_le32		3602040						
ANR	3602175	Symbol	bin		3602040						
ANR	3602176	Symbol	* bin		3602040						
ANR	3602177	Symbol	entry		3602040						
ANR	3602178	Symbol	buf		3602040						
ANR	3602179	Symbol	r_buf_read_at		3602040						
ANR	3602180	Symbol	UT64_MAX		3602040						
ANR	3602181	Symbol	addr		3602040						
ANR	3602182	Symbol	r_bin_elf_v2p		3602040						
ANR	3602183	Symbol	r_bin_elf_get_entry_offset		3602040						
ANR	3602184	Function	r_bin_elf_get_entry_offset	1832:0:52651:53116							
ANR	3602185	FunctionDef	r_bin_elf_get_entry_offset (ELFOBJ * bin)		3602184	0					
ANR	3602186	CompoundStatement		1832:51:52702:53116	3602184	0					
ANR	3602187	ExpressionStatement	"r_return_val_if_fail ( bin , UT64_MAX )"	1833:1:52705:52741	3602184	0	True				
ANR	3602188	CallExpression	"r_return_val_if_fail ( bin , UT64_MAX )"		3602184	0					
ANR	3602189	Callee	r_return_val_if_fail		3602184	0					
ANR	3602190	Identifier	r_return_val_if_fail		3602184	0					
ANR	3602191	ArgumentList	bin		3602184	1					
ANR	3602192	Argument	bin		3602184	0					
ANR	3602193	Identifier	bin		3602184	0					
ANR	3602194	Argument	UT64_MAX		3602184	1					
ANR	3602195	Identifier	UT64_MAX		3602184	0					
ANR	3602196	IdentifierDeclStatement	ut64 entry = bin -> ehdr . e_entry ;	1834:1:52744:52774	3602184	1	True				
ANR	3602197	IdentifierDecl	entry = bin -> ehdr . e_entry		3602184	0					
ANR	3602198	IdentifierDeclType	ut64		3602184	0					
ANR	3602199	Identifier	entry		3602184	1					
ANR	3602200	AssignmentExpression	entry = bin -> ehdr . e_entry		3602184	2		=			
ANR	3602201	Identifier	entry		3602184	0					
ANR	3602202	MemberAccess	bin -> ehdr . e_entry		3602184	1					
ANR	3602203	PtrMemberAccess	bin -> ehdr		3602184	0					
ANR	3602204	Identifier	bin		3602184	0					
ANR	3602205	Identifier	ehdr		3602184	1					
ANR	3602206	Identifier	e_entry		3602184	1					
ANR	3602207	IfStatement	if ( ! entry )		3602184	2					
ANR	3602208	Condition	! entry	1835:5:52781:52786	3602184	0	True				
ANR	3602209	UnaryOperationExpression	! entry		3602184	0					
ANR	3602210	UnaryOperator	!		3602184	0					
ANR	3602211	Identifier	entry		3602184	1					
ANR	3602212	CompoundStatement		4:13:86:86	3602184	1					
ANR	3602213	ExpressionStatement	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init.text"" )"	1836:2:52793:52854	3602184	0	True				
ANR	3602214	AssignmentExpression	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init.text"" )"		3602184	0		=			
ANR	3602215	Identifier	entry		3602184	0					
ANR	3602216	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init.text"" )"		3602184	1					
ANR	3602217	Callee	Elf_ ( r_bin_elf_get_section_offset )		3602184	0					
ANR	3602218	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		3602184	0					
ANR	3602219	Callee	Elf_		3602184	0					
ANR	3602220	Identifier	Elf_		3602184	0					
ANR	3602221	ArgumentList	r_bin_elf_get_section_offset		3602184	1					
ANR	3602222	Argument	r_bin_elf_get_section_offset		3602184	0					
ANR	3602223	Identifier	r_bin_elf_get_section_offset		3602184	0					
ANR	3602224	ArgumentList	bin		3602184	1					
ANR	3602225	Argument	bin		3602184	0					
ANR	3602226	Identifier	bin		3602184	0					
ANR	3602227	Argument	""".init.text"""		3602184	1					
ANR	3602228	PrimaryExpression	""".init.text"""		3602184	0					
ANR	3602229	IfStatement	if ( entry != UT64_MAX )		3602184	1					
ANR	3602230	Condition	entry != UT64_MAX	1837:6:52862:52878	3602184	0	True				
ANR	3602231	EqualityExpression	entry != UT64_MAX		3602184	0		!=			
ANR	3602232	Identifier	entry		3602184	0					
ANR	3602233	Identifier	UT64_MAX		3602184	1					
ANR	3602234	CompoundStatement		6:25:178:178	3602184	1					
ANR	3602235	ReturnStatement	return entry ;	1838:3:52886:52898	3602184	0	True				
ANR	3602236	Identifier	entry		3602184	0					
ANR	3602237	ExpressionStatement	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".text"" )"	1840:2:52906:52962	3602184	2	True				
ANR	3602238	AssignmentExpression	"entry = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".text"" )"		3602184	0		=			
ANR	3602239	Identifier	entry		3602184	0					
ANR	3602240	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".text"" )"		3602184	1					
ANR	3602241	Callee	Elf_ ( r_bin_elf_get_section_offset )		3602184	0					
ANR	3602242	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		3602184	0					
ANR	3602243	Callee	Elf_		3602184	0					
ANR	3602244	Identifier	Elf_		3602184	0					
ANR	3602245	ArgumentList	r_bin_elf_get_section_offset		3602184	1					
ANR	3602246	Argument	r_bin_elf_get_section_offset		3602184	0					
ANR	3602247	Identifier	r_bin_elf_get_section_offset		3602184	0					
ANR	3602248	ArgumentList	bin		3602184	1					
ANR	3602249	Argument	bin		3602184	0					
ANR	3602250	Identifier	bin		3602184	0					
ANR	3602251	Argument	""".text"""		3602184	1					
ANR	3602252	PrimaryExpression	""".text"""		3602184	0					
ANR	3602253	IfStatement	if ( entry != UT64_MAX )		3602184	3					
ANR	3602254	Condition	entry != UT64_MAX	1841:6:52970:52986	3602184	0	True				
ANR	3602255	EqualityExpression	entry != UT64_MAX		3602184	0		!=			
ANR	3602256	Identifier	entry		3602184	0					
ANR	3602257	Identifier	UT64_MAX		3602184	1					
ANR	3602258	CompoundStatement		10:25:286:286	3602184	1					
ANR	3602259	ReturnStatement	return entry ;	1842:3:52994:53006	3602184	0	True				
ANR	3602260	Identifier	entry		3602184	0					
ANR	3602261	ReturnStatement	"return Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init"" ) ;"	1844:2:53014:53069	3602184	4	True				
ANR	3602262	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".init"" )"		3602184	0					
ANR	3602263	Callee	Elf_ ( r_bin_elf_get_section_offset )		3602184	0					
ANR	3602264	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		3602184	0					
ANR	3602265	Callee	Elf_		3602184	0					
ANR	3602266	Identifier	Elf_		3602184	0					
ANR	3602267	ArgumentList	r_bin_elf_get_section_offset		3602184	1					
ANR	3602268	Argument	r_bin_elf_get_section_offset		3602184	0					
ANR	3602269	Identifier	r_bin_elf_get_section_offset		3602184	0					
ANR	3602270	ArgumentList	bin		3602184	1					
ANR	3602271	Argument	bin		3602184	0					
ANR	3602272	Identifier	bin		3602184	0					
ANR	3602273	Argument	""".init"""		3602184	1					
ANR	3602274	PrimaryExpression	""".init"""		3602184	0					
ANR	3602275	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , entry ) ;"	1846:1:53075:53114	3602184	3	True				
ANR	3602276	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , entry )"		3602184	0					
ANR	3602277	Callee	Elf_ ( r_bin_elf_v2p )		3602184	0					
ANR	3602278	CallExpression	Elf_ ( r_bin_elf_v2p )		3602184	0					
ANR	3602279	Callee	Elf_		3602184	0					
ANR	3602280	Identifier	Elf_		3602184	0					
ANR	3602281	ArgumentList	r_bin_elf_v2p		3602184	1					
ANR	3602282	Argument	r_bin_elf_v2p		3602184	0					
ANR	3602283	Identifier	r_bin_elf_v2p		3602184	0					
ANR	3602284	ArgumentList	bin		3602184	1					
ANR	3602285	Argument	bin		3602184	0					
ANR	3602286	Identifier	bin		3602184	0					
ANR	3602287	Argument	entry		3602184	1					
ANR	3602288	Identifier	entry		3602184	0					
ANR	3602289	ReturnType	ut64 Elf_		3602184	1					
ANR	3602290	Identifier	( r_bin_elf_get_entry_offset )		3602184	2					
ANR	3602291	Identifier	r_bin_elf_get_entry_offset		3602184	3					
ANR	3602292	ParameterList	ELFOBJ * bin		3602184	4					
ANR	3602293	Parameter	ELFOBJ * bin	1832:38:52689:52699	3602184	0	True				
ANR	3602294	ParameterType	ELFOBJ *		3602184	0					
ANR	3602295	Identifier	bin		3602184	1					
ANR	3602296	CFGEntryNode	ENTRY		3602184		True				
ANR	3602297	CFGExitNode	EXIT		3602184		True				
ANR	3602298	Symbol	Elf_		3602184						
ANR	3602299	Symbol	entry		3602184						
ANR	3602300	Symbol	bin		3602184						
ANR	3602301	Symbol	bin -> ehdr		3602184						
ANR	3602302	Symbol	bin -> ehdr . e_entry		3602184						
ANR	3602303	Symbol	UT64_MAX		3602184						
ANR	3602304	Symbol	r_bin_elf_v2p		3602184						
ANR	3602305	Symbol	* bin		3602184						
ANR	3602306	Symbol	r_bin_elf_get_section_offset		3602184						
ANR	3602307	Function	getmainsymbol	1849:0:53119:53412							
ANR	3602308	FunctionDef	getmainsymbol (ELFOBJ * bin)		3602307	0					
ANR	3602309	CompoundStatement		1849:39:53158:53412	3602307	0					
ANR	3602310	IdentifierDeclStatement	struct r_bin_elf_symbol_t * symbol ;	1850:1:53161:53194	3602307	0	True				
ANR	3602311	IdentifierDecl	* symbol		3602307	0					
ANR	3602312	IdentifierDeclType	struct r_bin_elf_symbol_t *		3602307	0					
ANR	3602313	Identifier	symbol		3602307	1					
ANR	3602314	IdentifierDeclStatement	int i ;	1851:1:53197:53202	3602307	1	True				
ANR	3602315	IdentifierDecl	i		3602307	0					
ANR	3602316	IdentifierDeclType	int		3602307	0					
ANR	3602317	Identifier	i		3602307	1					
ANR	3602318	IfStatement	if ( ! ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) ) )		3602307	2					
ANR	3602319	Condition	! ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) )	1852:5:53209:53253	3602307	0	True				
ANR	3602320	UnaryOperationExpression	! ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) )		3602307	0					
ANR	3602321	UnaryOperator	!		3602307	0					
ANR	3602322	AssignmentExpression	symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin )		3602307	1		=			
ANR	3602323	Identifier	symbol		3602307	0					
ANR	3602324	CallExpression	Elf_ ( r_bin_elf_get_symbols ) ( bin )		3602307	1					
ANR	3602325	Callee	Elf_ ( r_bin_elf_get_symbols )		3602307	0					
ANR	3602326	CallExpression	Elf_ ( r_bin_elf_get_symbols )		3602307	0					
ANR	3602327	Callee	Elf_		3602307	0					
ANR	3602328	Identifier	Elf_		3602307	0					
ANR	3602329	ArgumentList	r_bin_elf_get_symbols		3602307	1					
ANR	3602330	Argument	r_bin_elf_get_symbols		3602307	0					
ANR	3602331	Identifier	r_bin_elf_get_symbols		3602307	0					
ANR	3602332	ArgumentList	bin		3602307	1					
ANR	3602333	Argument	bin		3602307	0					
ANR	3602334	Identifier	bin		3602307	0					
ANR	3602335	CompoundStatement		4:52:97:97	3602307	1					
ANR	3602336	ReturnStatement	return UT64_MAX ;	1853:2:53260:53275	3602307	0	True				
ANR	3602337	Identifier	UT64_MAX		3602307	0					
ANR	3602338	ForStatement	for ( i = 0 ; ! symbol [ i ] . last ; i ++ )		3602307	3					
ANR	3602339	ForInit	i = 0 ;	1855:6:53286:53291	3602307	0	True				
ANR	3602340	AssignmentExpression	i = 0		3602307	0		=			
ANR	3602341	Identifier	i		3602307	0					
ANR	3602342	PrimaryExpression	0		3602307	1					
ANR	3602343	Condition	! symbol [ i ] . last	1855:13:53293:53307	3602307	1	True				
ANR	3602344	UnaryOperationExpression	! symbol [ i ] . last		3602307	0					
ANR	3602345	UnaryOperator	!		3602307	0					
ANR	3602346	MemberAccess	symbol [ i ] . last		3602307	1					
ANR	3602347	ArrayIndexing	symbol [ i ]		3602307	0					
ANR	3602348	Identifier	symbol		3602307	0					
ANR	3602349	Identifier	i		3602307	1					
ANR	3602350	Identifier	last		3602307	1					
ANR	3602351	PostIncDecOperationExpression	i ++	1855:30:53310:53312	3602307	2	True				
ANR	3602352	Identifier	i		3602307	0					
ANR	3602353	IncDec	++		3602307	1					
ANR	3602354	CompoundStatement		7:35:156:156	3602307	3					
ANR	3602355	IfStatement	"if ( ! strcmp ( symbol [ i ] . name , ""main"" ) )"		3602307	0					
ANR	3602356	Condition	"! strcmp ( symbol [ i ] . name , ""main"" )"	1856:6:53323:53354	3602307	0	True				
ANR	3602357	UnaryOperationExpression	"! strcmp ( symbol [ i ] . name , ""main"" )"		3602307	0					
ANR	3602358	UnaryOperator	!		3602307	0					
ANR	3602359	CallExpression	"strcmp ( symbol [ i ] . name , ""main"" )"		3602307	1					
ANR	3602360	Callee	strcmp		3602307	0					
ANR	3602361	Identifier	strcmp		3602307	0					
ANR	3602362	ArgumentList	symbol [ i ] . name		3602307	1					
ANR	3602363	Argument	symbol [ i ] . name		3602307	0					
ANR	3602364	MemberAccess	symbol [ i ] . name		3602307	0					
ANR	3602365	ArrayIndexing	symbol [ i ]		3602307	0					
ANR	3602366	Identifier	symbol		3602307	0					
ANR	3602367	Identifier	i		3602307	1					
ANR	3602368	Identifier	name		3602307	1					
ANR	3602369	Argument	"""main"""		3602307	1					
ANR	3602370	PrimaryExpression	"""main"""		3602307	0					
ANR	3602371	CompoundStatement		8:40:198:198	3602307	1					
ANR	3602372	ReturnStatement	return symbol [ i ] . offset ;	1857:3:53362:53385	3602307	0	True				
ANR	3602373	MemberAccess	symbol [ i ] . offset		3602307	0					
ANR	3602374	ArrayIndexing	symbol [ i ]		3602307	0					
ANR	3602375	Identifier	symbol		3602307	0					
ANR	3602376	Identifier	i		3602307	1					
ANR	3602377	Identifier	offset		3602307	1					
ANR	3602378	ReturnStatement	return UT64_MAX ;	1860:1:53395:53410	3602307	4	True				
ANR	3602379	Identifier	UT64_MAX		3602307	0					
ANR	3602380	ReturnType	static ut64		3602307	1					
ANR	3602381	Identifier	getmainsymbol		3602307	2					
ANR	3602382	ParameterList	ELFOBJ * bin		3602307	3					
ANR	3602383	Parameter	ELFOBJ * bin	1849:26:53145:53155	3602307	0	True				
ANR	3602384	ParameterType	ELFOBJ *		3602307	0					
ANR	3602385	Identifier	bin		3602307	1					
ANR	3602386	CFGEntryNode	ENTRY		3602307		True				
ANR	3602387	CFGExitNode	EXIT		3602307		True				
ANR	3602388	Symbol	Elf_		3602307						
ANR	3602389	Symbol	symbol [ i ] . last		3602307						
ANR	3602390	Symbol	strcmp		3602307						
ANR	3602391	Symbol	symbol		3602307						
ANR	3602392	Symbol	* i		3602307						
ANR	3602393	Symbol	symbol [ i ] . name		3602307						
ANR	3602394	Symbol	bin		3602307						
ANR	3602395	Symbol	i		3602307						
ANR	3602396	Symbol	r_bin_elf_get_symbols		3602307						
ANR	3602397	Symbol	UT64_MAX		3602307						
ANR	3602398	Symbol	* symbol		3602307						
ANR	3602399	Symbol	symbol [ i ] . offset		3602307						
ANR	3602400	Function	r_bin_elf_get_main_offset	1863:0:53415:58297							
ANR	3602401	FunctionDef	r_bin_elf_get_main_offset (ELFOBJ * bin)		3602400	0					
ANR	3602402	CompoundStatement		1863:50:53465:58297	3602400	0					
ANR	3602403	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	1864:1:53468:53519	3602400	0	True				
ANR	3602404	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3602400	0					
ANR	3602405	IdentifierDeclType	ut64		3602400	0					
ANR	3602406	Identifier	entry		3602400	1					
ANR	3602407	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3602400	2		=			
ANR	3602408	Identifier	entry		3602400	0					
ANR	3602409	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3602400	1					
ANR	3602410	Callee	Elf_ ( r_bin_elf_get_entry_offset )		3602400	0					
ANR	3602411	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		3602400	0					
ANR	3602412	Callee	Elf_		3602400	0					
ANR	3602413	Identifier	Elf_		3602400	0					
ANR	3602414	ArgumentList	r_bin_elf_get_entry_offset		3602400	1					
ANR	3602415	Argument	r_bin_elf_get_entry_offset		3602400	0					
ANR	3602416	Identifier	r_bin_elf_get_entry_offset		3602400	0					
ANR	3602417	ArgumentList	bin		3602400	1					
ANR	3602418	Argument	bin		3602400	0					
ANR	3602419	Identifier	bin		3602400	0					
ANR	3602420	IdentifierDeclStatement	ut8 buf [ 256 ] ;	1865:1:53522:53534	3602400	1	True				
ANR	3602421	IdentifierDecl	buf [ 256 ]		3602400	0					
ANR	3602422	IdentifierDeclType	ut8 [ 256 ]		3602400	0					
ANR	3602423	Identifier	buf		3602400	1					
ANR	3602424	PrimaryExpression	256		3602400	2					
ANR	3602425	IfStatement	if ( ! bin || entry == UT64_MAX )		3602400	2					
ANR	3602426	Condition	! bin || entry == UT64_MAX	1866:5:53541:53565	3602400	0	True				
ANR	3602427	OrExpression	! bin || entry == UT64_MAX		3602400	0		||			
ANR	3602428	UnaryOperationExpression	! bin		3602400	0					
ANR	3602429	UnaryOperator	!		3602400	0					
ANR	3602430	Identifier	bin		3602400	1					
ANR	3602431	EqualityExpression	entry == UT64_MAX		3602400	1		==			
ANR	3602432	Identifier	entry		3602400	0					
ANR	3602433	Identifier	UT64_MAX		3602400	1					
ANR	3602434	CompoundStatement		4:32:102:102	3602400	1					
ANR	3602435	ReturnStatement	return UT64_MAX ;	1867:2:53572:53587	3602400	0	True				
ANR	3602436	Identifier	UT64_MAX		3602400	0					
ANR	3602437	IfStatement	if ( entry > bin -> size || ( entry + sizeof ( buf ) ) > bin -> size )		3602400	3					
ANR	3602438	Condition	entry > bin -> size || ( entry + sizeof ( buf ) ) > bin -> size	1869:5:53597:53651	3602400	0	True				
ANR	3602439	OrExpression	entry > bin -> size || ( entry + sizeof ( buf ) ) > bin -> size		3602400	0		||			
ANR	3602440	RelationalExpression	entry > bin -> size		3602400	0		>			
ANR	3602441	Identifier	entry		3602400	0					
ANR	3602442	PtrMemberAccess	bin -> size		3602400	1					
ANR	3602443	Identifier	bin		3602400	0					
ANR	3602444	Identifier	size		3602400	1					
ANR	3602445	RelationalExpression	( entry + sizeof ( buf ) ) > bin -> size		3602400	1		>			
ANR	3602446	AdditiveExpression	entry + sizeof ( buf )		3602400	0		+			
ANR	3602447	Identifier	entry		3602400	0					
ANR	3602448	SizeofExpression	sizeof ( buf )		3602400	1					
ANR	3602449	Sizeof	sizeof		3602400	0					
ANR	3602450	SizeofOperand	buf		3602400	1					
ANR	3602451	PtrMemberAccess	bin -> size		3602400	1					
ANR	3602452	Identifier	bin		3602400	0					
ANR	3602453	Identifier	size		3602400	1					
ANR	3602454	CompoundStatement		7:62:188:188	3602400	1					
ANR	3602455	ReturnStatement	return UT64_MAX ;	1870:2:53658:53673	3602400	0	True				
ANR	3602456	Identifier	UT64_MAX		3602400	0					
ANR	3602457	IfStatement	"if ( r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) ) < 1 )"		3602400	4					
ANR	3602458	Condition	"r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) ) < 1"	1873:5:53722:53773	3602400	0	True				
ANR	3602459	RelationalExpression	"r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) ) < 1"		3602400	0		<			
ANR	3602460	CallExpression	"r_buf_read_at ( bin -> b , entry , buf , sizeof ( buf ) )"		3602400	0					
ANR	3602461	Callee	r_buf_read_at		3602400	0					
ANR	3602462	Identifier	r_buf_read_at		3602400	0					
ANR	3602463	ArgumentList	bin -> b		3602400	1					
ANR	3602464	Argument	bin -> b		3602400	0					
ANR	3602465	PtrMemberAccess	bin -> b		3602400	0					
ANR	3602466	Identifier	bin		3602400	0					
ANR	3602467	Identifier	b		3602400	1					
ANR	3602468	Argument	entry		3602400	1					
ANR	3602469	Identifier	entry		3602400	0					
ANR	3602470	Argument	buf		3602400	2					
ANR	3602471	Identifier	buf		3602400	0					
ANR	3602472	Argument	sizeof ( buf )		3602400	3					
ANR	3602473	SizeofExpression	sizeof ( buf )		3602400	0					
ANR	3602474	Sizeof	sizeof		3602400	0					
ANR	3602475	SizeofOperand	buf		3602400	1					
ANR	3602476	PrimaryExpression	1		3602400	1					
ANR	3602477	CompoundStatement		11:59:310:310	3602400	1					
ANR	3602478	ExpressionStatement	"bprintf ( ""read (main)\\n"" )"	1874:2:53780:53805	3602400	0	True				
ANR	3602479	CallExpression	"bprintf ( ""read (main)\\n"" )"		3602400	0					
ANR	3602480	Callee	bprintf		3602400	0					
ANR	3602481	Identifier	bprintf		3602400	0					
ANR	3602482	ArgumentList	"""read (main)\\n"""		3602400	1					
ANR	3602483	Argument	"""read (main)\\n"""		3602400	0					
ANR	3602484	PrimaryExpression	"""read (main)\\n"""		3602400	0					
ANR	3602485	ReturnStatement	return UT64_MAX ;	1875:2:53809:53824	3602400	1	True				
ANR	3602486	Identifier	UT64_MAX		3602400	0					
ANR	3602487	IfStatement	if ( buf [ 0x18 + 3 ] == 0x58 && buf [ 0x2f ] == 0x00 )		3602400	5					
ANR	3602488	Condition	buf [ 0x18 + 3 ] == 0x58 && buf [ 0x2f ] == 0x00	1878:5:53844:53883	3602400	0	True				
ANR	3602489	AndExpression	buf [ 0x18 + 3 ] == 0x58 && buf [ 0x2f ] == 0x00		3602400	0		&&			
ANR	3602490	EqualityExpression	buf [ 0x18 + 3 ] == 0x58		3602400	0		==			
ANR	3602491	ArrayIndexing	buf [ 0x18 + 3 ]		3602400	0					
ANR	3602492	Identifier	buf		3602400	0					
ANR	3602493	AdditiveExpression	0x18 + 3		3602400	1		+			
ANR	3602494	PrimaryExpression	0x18		3602400	0					
ANR	3602495	PrimaryExpression	3		3602400	1					
ANR	3602496	PrimaryExpression	0x58		3602400	1					
ANR	3602497	EqualityExpression	buf [ 0x2f ] == 0x00		3602400	1		==			
ANR	3602498	ArrayIndexing	buf [ 0x2f ]		3602400	0					
ANR	3602499	Identifier	buf		3602400	0					
ANR	3602500	PrimaryExpression	0x2f		3602400	1					
ANR	3602501	PrimaryExpression	0x00		3602400	1					
ANR	3602502	CompoundStatement		18:2:479:520	3602400	1					
ANR	3602503	IdentifierDeclStatement	"ut32 entry_vaddr = Elf_ ( r_bin_elf_p2v ) ( bin , entry ) ;"	1879:2:53890:53941	3602400	0	True				
ANR	3602504	IdentifierDecl	"entry_vaddr = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	0					
ANR	3602505	IdentifierDeclType	ut32		3602400	0					
ANR	3602506	Identifier	entry_vaddr		3602400	1					
ANR	3602507	AssignmentExpression	"entry_vaddr = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	2		=			
ANR	3602508	Identifier	entry_vaddr		3602400	0					
ANR	3602509	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	1					
ANR	3602510	Callee	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3602511	CallExpression	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3602512	Callee	Elf_		3602400	0					
ANR	3602513	Identifier	Elf_		3602400	0					
ANR	3602514	ArgumentList	r_bin_elf_p2v		3602400	1					
ANR	3602515	Argument	r_bin_elf_p2v		3602400	0					
ANR	3602516	Identifier	r_bin_elf_p2v		3602400	0					
ANR	3602517	ArgumentList	bin		3602400	1					
ANR	3602518	Argument	bin		3602400	0					
ANR	3602519	Identifier	bin		3602400	0					
ANR	3602520	Argument	entry		3602400	1					
ANR	3602521	Identifier	entry		3602400	0					
ANR	3602522	IdentifierDeclStatement	ut32 main_addr = r_read_le32 ( & buf [ 0x30 ] ) ;	1880:2:53945:53986	3602400	1	True				
ANR	3602523	IdentifierDecl	main_addr = r_read_le32 ( & buf [ 0x30 ] )		3602400	0					
ANR	3602524	IdentifierDeclType	ut32		3602400	0					
ANR	3602525	Identifier	main_addr		3602400	1					
ANR	3602526	AssignmentExpression	main_addr = r_read_le32 ( & buf [ 0x30 ] )		3602400	2		=			
ANR	3602527	Identifier	main_addr		3602400	0					
ANR	3602528	CallExpression	r_read_le32 ( & buf [ 0x30 ] )		3602400	1					
ANR	3602529	Callee	r_read_le32		3602400	0					
ANR	3602530	Identifier	r_read_le32		3602400	0					
ANR	3602531	ArgumentList	& buf [ 0x30 ]		3602400	1					
ANR	3602532	Argument	& buf [ 0x30 ]		3602400	0					
ANR	3602533	UnaryOperationExpression	& buf [ 0x30 ]		3602400	0					
ANR	3602534	UnaryOperator	&		3602400	0					
ANR	3602535	ArrayIndexing	buf [ 0x30 ]		3602400	1					
ANR	3602536	Identifier	buf		3602400	0					
ANR	3602537	PrimaryExpression	0x30		3602400	1					
ANR	3602538	IfStatement	if ( ( main_addr >> 16 ) == ( entry_vaddr >> 16 ) )		3602400	2					
ANR	3602539	Condition	( main_addr >> 16 ) == ( entry_vaddr >> 16 )	1881:6:53994:54033	3602400	0	True				
ANR	3602540	EqualityExpression	( main_addr >> 16 ) == ( entry_vaddr >> 16 )		3602400	0		==			
ANR	3602541	ShiftExpression	main_addr >> 16		3602400	0		>>			
ANR	3602542	Identifier	main_addr		3602400	0					
ANR	3602543	PrimaryExpression	16		3602400	1					
ANR	3602544	ShiftExpression	entry_vaddr >> 16		3602400	1		>>			
ANR	3602545	Identifier	entry_vaddr		3602400	0					
ANR	3602546	PrimaryExpression	16		3602400	1					
ANR	3602547	CompoundStatement		19:48:570:570	3602400	1					
ANR	3602548	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , main_addr ) ;"	1882:3:54041:54084	3602400	0	True				
ANR	3602549	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , main_addr )"		3602400	0					
ANR	3602550	Callee	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602551	CallExpression	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602552	Callee	Elf_		3602400	0					
ANR	3602553	Identifier	Elf_		3602400	0					
ANR	3602554	ArgumentList	r_bin_elf_v2p		3602400	1					
ANR	3602555	Argument	r_bin_elf_v2p		3602400	0					
ANR	3602556	Identifier	r_bin_elf_v2p		3602400	0					
ANR	3602557	ArgumentList	bin		3602400	1					
ANR	3602558	Argument	bin		3602400	0					
ANR	3602559	Identifier	bin		3602400	0					
ANR	3602560	Argument	main_addr		3602400	1					
ANR	3602561	Identifier	main_addr		3602400	0					
ANR	3602562	IfStatement	if ( entry & 1 )		3602400	6					
ANR	3602563	Condition	entry & 1	1889:5:54166:54174	3602400	0	True				
ANR	3602564	BitAndExpression	entry & 1		3602400	0		&			
ANR	3602565	Identifier	entry		3602400	0					
ANR	3602566	PrimaryExpression	1		3602400	1					
ANR	3602567	CompoundStatement		28:2:715:728	3602400	1					
ANR	3602568	IdentifierDeclStatement	int delta = 0 ;	1890:2:54181:54194	3602400	0	True				
ANR	3602569	IdentifierDecl	delta = 0		3602400	0					
ANR	3602570	IdentifierDeclType	int		3602400	0					
ANR	3602571	Identifier	delta		3602400	1					
ANR	3602572	AssignmentExpression	delta = 0		3602400	2		=			
ANR	3602573	Identifier	delta		3602400	0					
ANR	3602574	PrimaryExpression	0		3602400	1					
ANR	3602575	IfStatement	"if ( ! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 ) )"		3602400	1					
ANR	3602576	Condition	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 )"	1892:6:54229:54293	3602400	0	True				
ANR	3602577	UnaryOperationExpression	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 )"		3602400	0					
ANR	3602578	UnaryOperator	!		3602400	0					
ANR	3602579	CallExpression	"memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"" , 11 )"		3602400	1					
ANR	3602580	Callee	memcmp		3602400	0					
ANR	3602581	Identifier	memcmp		3602400	0					
ANR	3602582	ArgumentList	buf		3602400	1					
ANR	3602583	Argument	buf		3602400	0					
ANR	3602584	Identifier	buf		3602400	0					
ANR	3602585	Argument	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"""		3602400	1					
ANR	3602586	PrimaryExpression	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x02\\xbc\\x6a\\x46"""		3602400	0					
ANR	3602587	Argument	11		3602400	2					
ANR	3602588	PrimaryExpression	11		3602400	0					
ANR	3602589	CompoundStatement		30:73:830:830	3602400	1					
ANR	3602590	ExpressionStatement	delta = 0x28	1894:3:54345:54357	3602400	0	True				
ANR	3602591	AssignmentExpression	delta = 0x28		3602400	0		=			
ANR	3602592	Identifier	delta		3602400	0					
ANR	3602593	PrimaryExpression	0x28		3602400	1					
ANR	3602594	ElseStatement	else		3602400	0					
ANR	3602595	IfStatement	"if ( ! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 ) )"		3602400	0					
ANR	3602596	Condition	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 )"	1895:13:54372:54436	3602400	0	True				
ANR	3602597	UnaryOperationExpression	"! memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 )"		3602400	0					
ANR	3602598	UnaryOperator	!		3602400	0					
ANR	3602599	CallExpression	"memcmp ( buf , ""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"" , 11 )"		3602400	1					
ANR	3602600	Callee	memcmp		3602400	0					
ANR	3602601	Identifier	memcmp		3602400	0					
ANR	3602602	ArgumentList	buf		3602400	1					
ANR	3602603	Argument	buf		3602400	0					
ANR	3602604	Identifier	buf		3602400	0					
ANR	3602605	Argument	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"""		3602400	1					
ANR	3602606	PrimaryExpression	"""\\xf0\\x00\\x0b\\x4f\\xf0\\x00\\x0e\\x5d\\xf8\\x04\\x1b"""		3602400	0					
ANR	3602607	Argument	11		3602400	2					
ANR	3602608	PrimaryExpression	11		3602400	0					
ANR	3602609	CompoundStatement		33:80:973:973	3602400	1					
ANR	3602610	ExpressionStatement	delta = 0x30	1897:3:54495:54507	3602400	0	True				
ANR	3602611	AssignmentExpression	delta = 0x30		3602400	0		=			
ANR	3602612	Identifier	delta		3602400	0					
ANR	3602613	PrimaryExpression	0x30		3602400	1					
ANR	3602614	IfStatement	if ( delta )		3602400	2					
ANR	3602615	Condition	delta	1899:6:54519:54523	3602400	0	True				
ANR	3602616	Identifier	delta		3602400	0					
ANR	3602617	CompoundStatement		38:3:1065:1134	3602400	1					
ANR	3602618	IdentifierDeclStatement	"ut64 pa = Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 ) ;"	1900:3:54531:54600	3602400	0	True				
ANR	3602619	IdentifierDecl	"pa = Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 )"		3602400	0					
ANR	3602620	IdentifierDeclType	ut64		3602400	0					
ANR	3602621	Identifier	pa		3602400	1					
ANR	3602622	AssignmentExpression	"pa = Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 )"		3602400	2		=			
ANR	3602623	Identifier	pa		3602400	0					
ANR	3602624	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ delta - 1 ] ) & ~1 )"		3602400	1					
ANR	3602625	Callee	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602626	CallExpression	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602627	Callee	Elf_		3602400	0					
ANR	3602628	Identifier	Elf_		3602400	0					
ANR	3602629	ArgumentList	r_bin_elf_v2p		3602400	1					
ANR	3602630	Argument	r_bin_elf_v2p		3602400	0					
ANR	3602631	Identifier	r_bin_elf_v2p		3602400	0					
ANR	3602632	ArgumentList	bin		3602400	1					
ANR	3602633	Argument	bin		3602400	0					
ANR	3602634	Identifier	bin		3602400	0					
ANR	3602635	Argument	r_read_le32 ( & buf [ delta - 1 ] ) & ~1		3602400	1					
ANR	3602636	BitAndExpression	r_read_le32 ( & buf [ delta - 1 ] ) & ~1		3602400	0		&			
ANR	3602637	CallExpression	r_read_le32 ( & buf [ delta - 1 ] )		3602400	0					
ANR	3602638	Callee	r_read_le32		3602400	0					
ANR	3602639	Identifier	r_read_le32		3602400	0					
ANR	3602640	ArgumentList	& buf [ delta - 1 ]		3602400	1					
ANR	3602641	Argument	& buf [ delta - 1 ]		3602400	0					
ANR	3602642	UnaryOperationExpression	& buf [ delta - 1 ]		3602400	0					
ANR	3602643	UnaryOperator	&		3602400	0					
ANR	3602644	ArrayIndexing	buf [ delta - 1 ]		3602400	1					
ANR	3602645	Identifier	buf		3602400	0					
ANR	3602646	AdditiveExpression	delta - 1		3602400	1		-			
ANR	3602647	Identifier	delta		3602400	0					
ANR	3602648	PrimaryExpression	1		3602400	1					
ANR	3602649	Identifier	~1		3602400	1					
ANR	3602650	IfStatement	if ( pa < r_buf_size ( bin -> b ) )		3602400	1					
ANR	3602651	Condition	pa < r_buf_size ( bin -> b )	1901:7:54609:54632	3602400	0	True				
ANR	3602652	RelationalExpression	pa < r_buf_size ( bin -> b )		3602400	0		<			
ANR	3602653	Identifier	pa		3602400	0					
ANR	3602654	CallExpression	r_buf_size ( bin -> b )		3602400	1					
ANR	3602655	Callee	r_buf_size		3602400	0					
ANR	3602656	Identifier	r_buf_size		3602400	0					
ANR	3602657	ArgumentList	bin -> b		3602400	1					
ANR	3602658	Argument	bin -> b		3602400	0					
ANR	3602659	PtrMemberAccess	bin -> b		3602400	0					
ANR	3602660	Identifier	bin		3602400	0					
ANR	3602661	Identifier	b		3602400	1					
ANR	3602662	CompoundStatement		39:33:1169:1169	3602400	1					
ANR	3602663	ReturnStatement	return pa ;	1902:4:54641:54650	3602400	0	True				
ANR	3602664	Identifier	pa		3602400	0					
ANR	3602665	ElseStatement	else		3602400	0					
ANR	3602666	CompoundStatement		43:8:1203:1203	3602400	0					
ANR	3602667	IfStatement	"if ( ! memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 ) )"		3602400	0					
ANR	3602668	Condition	"! memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 )"	1907:6:54708:54759	3602400	0	True				
ANR	3602669	UnaryOperationExpression	"! memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 )"		3602400	0					
ANR	3602670	UnaryOperator	!		3602400	0					
ANR	3602671	CallExpression	"memcmp ( buf , ""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"" , 8 )"		3602400	1					
ANR	3602672	Callee	memcmp		3602400	0					
ANR	3602673	Identifier	memcmp		3602400	0					
ANR	3602674	ArgumentList	buf		3602400	1					
ANR	3602675	Argument	buf		3602400	0					
ANR	3602676	Identifier	buf		3602400	0					
ANR	3602677	Argument	"""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"""		3602400	1					
ANR	3602678	PrimaryExpression	"""\\x00\\xb0\\xa0\\xe3\\x00\\xe0\\xa0\\xe3"""		3602400	0					
ANR	3602679	Argument	8		3602400	2					
ANR	3602680	PrimaryExpression	8		3602400	0					
ANR	3602681	CompoundStatement		45:60:1296:1296	3602400	1					
ANR	3602682	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x34 ] ) & ~1 ) ;"	1908:3:54767:54830	3602400	0	True				
ANR	3602683	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x34 ] ) & ~1 )"		3602400	0					
ANR	3602684	Callee	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602685	CallExpression	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602686	Callee	Elf_		3602400	0					
ANR	3602687	Identifier	Elf_		3602400	0					
ANR	3602688	ArgumentList	r_bin_elf_v2p		3602400	1					
ANR	3602689	Argument	r_bin_elf_v2p		3602400	0					
ANR	3602690	Identifier	r_bin_elf_v2p		3602400	0					
ANR	3602691	ArgumentList	bin		3602400	1					
ANR	3602692	Argument	bin		3602400	0					
ANR	3602693	Identifier	bin		3602400	0					
ANR	3602694	Argument	r_read_le32 ( & buf [ 0x34 ] ) & ~1		3602400	1					
ANR	3602695	BitAndExpression	r_read_le32 ( & buf [ 0x34 ] ) & ~1		3602400	0		&			
ANR	3602696	CallExpression	r_read_le32 ( & buf [ 0x34 ] )		3602400	0					
ANR	3602697	Callee	r_read_le32		3602400	0					
ANR	3602698	Identifier	r_read_le32		3602400	0					
ANR	3602699	ArgumentList	& buf [ 0x34 ]		3602400	1					
ANR	3602700	Argument	& buf [ 0x34 ]		3602400	0					
ANR	3602701	UnaryOperationExpression	& buf [ 0x34 ]		3602400	0					
ANR	3602702	UnaryOperator	&		3602400	0					
ANR	3602703	ArrayIndexing	buf [ 0x34 ]		3602400	1					
ANR	3602704	Identifier	buf		3602400	0					
ANR	3602705	PrimaryExpression	0x34		3602400	1					
ANR	3602706	Identifier	~1		3602400	1					
ANR	3602707	ElseStatement	else		3602400	0					
ANR	3602708	IfStatement	"if ( ! memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 ) )"		3602400	0					
ANR	3602709	Condition	"! memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 )"	1909:13:54845:54896	3602400	0	True				
ANR	3602710	UnaryOperationExpression	"! memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 )"		3602400	0					
ANR	3602711	UnaryOperator	!		3602400	0					
ANR	3602712	CallExpression	"memcmp ( buf , ""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"" , 8 )"		3602400	1					
ANR	3602713	Callee	memcmp		3602400	0					
ANR	3602714	Identifier	memcmp		3602400	0					
ANR	3602715	ArgumentList	buf		3602400	1					
ANR	3602716	Argument	buf		3602400	0					
ANR	3602717	Identifier	buf		3602400	0					
ANR	3602718	Argument	"""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"""		3602400	1					
ANR	3602719	PrimaryExpression	"""\\x24\\xc0\\x9f\\xe5\\x00\\xb0\\xa0\\xe3"""		3602400	0					
ANR	3602720	Argument	8		3602400	2					
ANR	3602721	PrimaryExpression	8		3602400	0					
ANR	3602722	CompoundStatement		47:67:1433:1433	3602400	1					
ANR	3602723	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x30 ] ) & ~1 ) ;"	1910:3:54904:54967	3602400	0	True				
ANR	3602724	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0x30 ] ) & ~1 )"		3602400	0					
ANR	3602725	Callee	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602726	CallExpression	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602727	Callee	Elf_		3602400	0					
ANR	3602728	Identifier	Elf_		3602400	0					
ANR	3602729	ArgumentList	r_bin_elf_v2p		3602400	1					
ANR	3602730	Argument	r_bin_elf_v2p		3602400	0					
ANR	3602731	Identifier	r_bin_elf_v2p		3602400	0					
ANR	3602732	ArgumentList	bin		3602400	1					
ANR	3602733	Argument	bin		3602400	0					
ANR	3602734	Identifier	bin		3602400	0					
ANR	3602735	Argument	r_read_le32 ( & buf [ 0x30 ] ) & ~1		3602400	1					
ANR	3602736	BitAndExpression	r_read_le32 ( & buf [ 0x30 ] ) & ~1		3602400	0		&			
ANR	3602737	CallExpression	r_read_le32 ( & buf [ 0x30 ] )		3602400	0					
ANR	3602738	Callee	r_read_le32		3602400	0					
ANR	3602739	Identifier	r_read_le32		3602400	0					
ANR	3602740	ArgumentList	& buf [ 0x30 ]		3602400	1					
ANR	3602741	Argument	& buf [ 0x30 ]		3602400	0					
ANR	3602742	UnaryOperationExpression	& buf [ 0x30 ]		3602400	0					
ANR	3602743	UnaryOperator	&		3602400	0					
ANR	3602744	ArrayIndexing	buf [ 0x30 ]		3602400	1					
ANR	3602745	Identifier	buf		3602400	0					
ANR	3602746	PrimaryExpression	0x30		3602400	1					
ANR	3602747	Identifier	~1		3602400	1					
ANR	3602748	IfStatement	"if ( ! memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 ) )"		3602400	7					
ANR	3602749	Condition	"! memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 )"	1916:5:55040:55091	3602400	0	True				
ANR	3602750	UnaryOperationExpression	"! memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 )"		3602400	0					
ANR	3602751	UnaryOperator	!		3602400	0					
ANR	3602752	CallExpression	"memcmp ( buf , ""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"" , 8 )"		3602400	1					
ANR	3602753	Callee	memcmp		3602400	0					
ANR	3602754	Identifier	memcmp		3602400	0					
ANR	3602755	ArgumentList	buf		3602400	1					
ANR	3602756	Argument	buf		3602400	0					
ANR	3602757	Identifier	buf		3602400	0					
ANR	3602758	Argument	"""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"""		3602400	1					
ANR	3602759	PrimaryExpression	"""\\x21\\x00\\xe0\\x03\\x01\\x00\\x11\\x04"""		3602400	0					
ANR	3602760	Argument	8		3602400	2					
ANR	3602761	PrimaryExpression	8		3602400	0					
ANR	3602762	CompoundStatement		65:2:1878:1893	3602400	1					
ANR	3602763	IdentifierDeclStatement	ut64 got_offset ;	1927:2:55344:55359	3602400	0	True				
ANR	3602764	IdentifierDecl	got_offset		3602400	0					
ANR	3602765	IdentifierDeclType	ut64		3602400	0					
ANR	3602766	Identifier	got_offset		3602400	1					
ANR	3602767	IfStatement	"if ( ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1 || ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1 )"		3602400	1					
ANR	3602768	Condition	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1 || ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1"	1928:6:55367:55518	3602400	0	True				
ANR	3602769	OrExpression	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1 || ( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1"		3602400	0		||			
ANR	3602770	EqualityExpression	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" ) ) != - 1"		3602400	0		!=			
ANR	3602771	AssignmentExpression	"got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" )"		3602400	0		=			
ANR	3602772	Identifier	got_offset		3602400	0					
ANR	3602773	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got"" )"		3602400	1					
ANR	3602774	Callee	Elf_ ( r_bin_elf_get_section_offset )		3602400	0					
ANR	3602775	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		3602400	0					
ANR	3602776	Callee	Elf_		3602400	0					
ANR	3602777	Identifier	Elf_		3602400	0					
ANR	3602778	ArgumentList	r_bin_elf_get_section_offset		3602400	1					
ANR	3602779	Argument	r_bin_elf_get_section_offset		3602400	0					
ANR	3602780	Identifier	r_bin_elf_get_section_offset		3602400	0					
ANR	3602781	ArgumentList	bin		3602400	1					
ANR	3602782	Argument	bin		3602400	0					
ANR	3602783	Identifier	bin		3602400	0					
ANR	3602784	Argument	""".got"""		3602400	1					
ANR	3602785	PrimaryExpression	""".got"""		3602400	0					
ANR	3602786	UnaryOperationExpression	- 1		3602400	1					
ANR	3602787	UnaryOperator	-		3602400	0					
ANR	3602788	PrimaryExpression	1		3602400	1					
ANR	3602789	EqualityExpression	"( got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" ) ) != - 1"		3602400	1		!=			
ANR	3602790	AssignmentExpression	"got_offset = Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" )"		3602400	0		=			
ANR	3602791	Identifier	got_offset		3602400	0					
ANR	3602792	CallExpression	"Elf_ ( r_bin_elf_get_section_offset ) ( bin , "".got.plt"" )"		3602400	1					
ANR	3602793	Callee	Elf_ ( r_bin_elf_get_section_offset )		3602400	0					
ANR	3602794	CallExpression	Elf_ ( r_bin_elf_get_section_offset )		3602400	0					
ANR	3602795	Callee	Elf_		3602400	0					
ANR	3602796	Identifier	Elf_		3602400	0					
ANR	3602797	ArgumentList	r_bin_elf_get_section_offset		3602400	1					
ANR	3602798	Argument	r_bin_elf_get_section_offset		3602400	0					
ANR	3602799	Identifier	r_bin_elf_get_section_offset		3602400	0					
ANR	3602800	ArgumentList	bin		3602400	1					
ANR	3602801	Argument	bin		3602400	0					
ANR	3602802	Identifier	bin		3602400	0					
ANR	3602803	Argument	""".got.plt"""		3602400	1					
ANR	3602804	PrimaryExpression	""".got.plt"""		3602400	0					
ANR	3602805	UnaryOperationExpression	- 1		3602400	1					
ANR	3602806	UnaryOperator	-		3602400	0					
ANR	3602807	PrimaryExpression	1		3602400	1					
ANR	3602808	CompoundStatement		70:3:2102:2112	3602400	1					
ANR	3602809	IdentifierDeclStatement	const ut64 gp = got_offset + 0x7ff0 ;	1931:3:55528:55563	3602400	0	True				
ANR	3602810	IdentifierDecl	gp = got_offset + 0x7ff0		3602400	0					
ANR	3602811	IdentifierDeclType	const ut64		3602400	0					
ANR	3602812	Identifier	gp		3602400	1					
ANR	3602813	AssignmentExpression	gp = got_offset + 0x7ff0		3602400	2		=			
ANR	3602814	Identifier	gp		3602400	0					
ANR	3602815	AdditiveExpression	got_offset + 0x7ff0		3602400	1		+			
ANR	3602816	Identifier	got_offset		3602400	0					
ANR	3602817	PrimaryExpression	0x7ff0		3602400	1					
ANR	3602818	IdentifierDeclStatement	unsigned i ;	1932:3:55568:55578	3602400	1	True				
ANR	3602819	IdentifierDecl	i		3602400	0					
ANR	3602820	IdentifierDeclType	unsigned		3602400	0					
ANR	3602821	Identifier	i		3602400	1					
ANR	3602822	ForStatement	for ( i = 0 ; i < sizeof ( buf ) / sizeof ( buf [ 0 ] ) ; i += 4 )		3602400	2					
ANR	3602823	ForInit	i = 0 ;	1933:8:55588:55593	3602400	0	True				
ANR	3602824	AssignmentExpression	i = 0		3602400	0		=			
ANR	3602825	Identifier	i		3602400	0					
ANR	3602826	PrimaryExpression	0		3602400	1					
ANR	3602827	Condition	i < sizeof ( buf ) / sizeof ( buf [ 0 ] )	1933:15:55595:55626	3602400	1	True				
ANR	3602828	RelationalExpression	i < sizeof ( buf ) / sizeof ( buf [ 0 ] )		3602400	0		<			
ANR	3602829	Identifier	i		3602400	0					
ANR	3602830	MultiplicativeExpression	sizeof ( buf ) / sizeof ( buf [ 0 ] )		3602400	1		/			
ANR	3602831	SizeofExpression	sizeof ( buf )		3602400	0					
ANR	3602832	Sizeof	sizeof		3602400	0					
ANR	3602833	SizeofOperand	buf		3602400	1					
ANR	3602834	SizeofExpression	sizeof ( buf [ 0 ] )		3602400	1					
ANR	3602835	Sizeof	sizeof		3602400	0					
ANR	3602836	ArrayIndexing	buf [ 0 ]		3602400	1					
ANR	3602837	Identifier	buf		3602400	0					
ANR	3602838	PrimaryExpression	0		3602400	1					
ANR	3602839	AssignmentExpression	i += 4	1933:49:55629:55634	3602400	2	True	+=			
ANR	3602840	Identifier	i		3602400	0					
ANR	3602841	PrimaryExpression	4		3602400	1					
ANR	3602842	CompoundStatement		72:4:2177:2217	3602400	3					
ANR	3602843	IdentifierDeclStatement	const ut32 instr = r_read_le32 ( & buf [ i ] ) ;	1934:4:55643:55683	3602400	0	True				
ANR	3602844	IdentifierDecl	instr = r_read_le32 ( & buf [ i ] )		3602400	0					
ANR	3602845	IdentifierDeclType	const ut32		3602400	0					
ANR	3602846	Identifier	instr		3602400	1					
ANR	3602847	AssignmentExpression	instr = r_read_le32 ( & buf [ i ] )		3602400	2		=			
ANR	3602848	Identifier	instr		3602400	0					
ANR	3602849	CallExpression	r_read_le32 ( & buf [ i ] )		3602400	1					
ANR	3602850	Callee	r_read_le32		3602400	0					
ANR	3602851	Identifier	r_read_le32		3602400	0					
ANR	3602852	ArgumentList	& buf [ i ]		3602400	1					
ANR	3602853	Argument	& buf [ i ]		3602400	0					
ANR	3602854	UnaryOperationExpression	& buf [ i ]		3602400	0					
ANR	3602855	UnaryOperator	&		3602400	0					
ANR	3602856	ArrayIndexing	buf [ i ]		3602400	1					
ANR	3602857	Identifier	buf		3602400	0					
ANR	3602858	Identifier	i		3602400	1					
ANR	3602859	IfStatement	if ( ( instr & 0xffff0000 ) == 0x8f840000 )		3602400	1					
ANR	3602860	Condition	( instr & 0xffff0000 ) == 0x8f840000	1935:8:55693:55726	3602400	0	True				
ANR	3602861	EqualityExpression	( instr & 0xffff0000 ) == 0x8f840000		3602400	0		==			
ANR	3602862	BitAndExpression	instr & 0xffff0000		3602400	0		&			
ANR	3602863	Identifier	instr		3602400	0					
ANR	3602864	PrimaryExpression	0xffff0000		3602400	1					
ANR	3602865	PrimaryExpression	0x8f840000		3602400	1					
ANR	3602866	CompoundStatement		74:5:2291:2329	3602400	1					
ANR	3602867	IdentifierDeclStatement	const short delta = instr & 0x0000ffff ;	1936:5:55757:55795	3602400	0	True				
ANR	3602868	IdentifierDecl	delta = instr & 0x0000ffff		3602400	0					
ANR	3602869	IdentifierDeclType	const short		3602400	0					
ANR	3602870	Identifier	delta		3602400	1					
ANR	3602871	AssignmentExpression	delta = instr & 0x0000ffff		3602400	2		=			
ANR	3602872	Identifier	delta		3602400	0					
ANR	3602873	BitAndExpression	instr & 0x0000ffff		3602400	1		&			
ANR	3602874	Identifier	instr		3602400	0					
ANR	3602875	PrimaryExpression	0x0000ffff		3602400	1					
ANR	3602876	ExpressionStatement	"r_buf_read_at ( bin -> b , gp + delta , buf , 4 )"	1937:5:55802:55869	3602400	1	True				
ANR	3602877	CallExpression	"r_buf_read_at ( bin -> b , gp + delta , buf , 4 )"		3602400	0					
ANR	3602878	Callee	r_buf_read_at		3602400	0					
ANR	3602879	Identifier	r_buf_read_at		3602400	0					
ANR	3602880	ArgumentList	bin -> b		3602400	1					
ANR	3602881	Argument	bin -> b		3602400	0					
ANR	3602882	PtrMemberAccess	bin -> b		3602400	0					
ANR	3602883	Identifier	bin		3602400	0					
ANR	3602884	Identifier	b		3602400	1					
ANR	3602885	Argument	gp + delta		3602400	1					
ANR	3602886	AdditiveExpression	gp + delta		3602400	0		+			
ANR	3602887	Identifier	gp		3602400	0					
ANR	3602888	Identifier	delta		3602400	1					
ANR	3602889	Argument	buf		3602400	2					
ANR	3602890	Identifier	buf		3602400	0					
ANR	3602891	Argument	4		3602400	3					
ANR	3602892	PrimaryExpression	4		3602400	0					
ANR	3602893	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0 ] ) ) ;"	1938:5:55876:55931	3602400	2	True				
ANR	3602894	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , r_read_le32 ( & buf [ 0 ] ) )"		3602400	0					
ANR	3602895	Callee	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602896	CallExpression	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3602897	Callee	Elf_		3602400	0					
ANR	3602898	Identifier	Elf_		3602400	0					
ANR	3602899	ArgumentList	r_bin_elf_v2p		3602400	1					
ANR	3602900	Argument	r_bin_elf_v2p		3602400	0					
ANR	3602901	Identifier	r_bin_elf_v2p		3602400	0					
ANR	3602902	ArgumentList	bin		3602400	1					
ANR	3602903	Argument	bin		3602400	0					
ANR	3602904	Identifier	bin		3602400	0					
ANR	3602905	Argument	r_read_le32 ( & buf [ 0 ] )		3602400	1					
ANR	3602906	CallExpression	r_read_le32 ( & buf [ 0 ] )		3602400	0					
ANR	3602907	Callee	r_read_le32		3602400	0					
ANR	3602908	Identifier	r_read_le32		3602400	0					
ANR	3602909	ArgumentList	& buf [ 0 ]		3602400	1					
ANR	3602910	Argument	& buf [ 0 ]		3602400	0					
ANR	3602911	UnaryOperationExpression	& buf [ 0 ]		3602400	0					
ANR	3602912	UnaryOperator	&		3602400	0					
ANR	3602913	ArrayIndexing	buf [ 0 ]		3602400	1					
ANR	3602914	Identifier	buf		3602400	0					
ANR	3602915	PrimaryExpression	0		3602400	1					
ANR	3602916	ReturnStatement	return 0 ;	1943:2:55951:55959	3602400	2	True				
ANR	3602917	PrimaryExpression	0		3602400	0					
ANR	3602918	IfStatement	"if ( buf [ 0 ] == 0xe8 && ! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 ) )"		3602400	8					
ANR	3602919	Condition	"buf [ 0 ] == 0xe8 && ! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"	1946:5:55981:56071	3602400	0	True				
ANR	3602920	AndExpression	"buf [ 0 ] == 0xe8 && ! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"		3602400	0		&&			
ANR	3602921	EqualityExpression	buf [ 0 ] == 0xe8		3602400	0		==			
ANR	3602922	ArrayIndexing	buf [ 0 ]		3602400	0					
ANR	3602923	Identifier	buf		3602400	0					
ANR	3602924	PrimaryExpression	0		3602400	1					
ANR	3602925	PrimaryExpression	0xe8		3602400	1					
ANR	3602926	UnaryOperationExpression	"! memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"		3602400	1					
ANR	3602927	UnaryOperator	!		3602400	0					
ANR	3602928	CallExpression	"memcmp ( buf + 5 , ""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"" , 12 )"		3602400	1					
ANR	3602929	Callee	memcmp		3602400	0					
ANR	3602930	Identifier	memcmp		3602400	0					
ANR	3602931	ArgumentList	buf + 5		3602400	1					
ANR	3602932	Argument	buf + 5		3602400	0					
ANR	3602933	AdditiveExpression	buf + 5		3602400	0		+			
ANR	3602934	Identifier	buf		3602400	0					
ANR	3602935	PrimaryExpression	5		3602400	1					
ANR	3602936	Argument	"""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"""		3602400	1					
ANR	3602937	PrimaryExpression	"""\\x50\\xe8\\x00\\x00\\x00\\x00\\xb8\\x01\\x00\\x00\\x00\\x53"""		3602400	0					
ANR	3602938	Argument	12		3602400	2					
ANR	3602939	PrimaryExpression	12		3602400	0					
ANR	3602940	CompoundStatement		87:2:2729:2786	3602400	1					
ANR	3602941	IdentifierDeclStatement	size_t SIZEOF_CALL = 5 ;	1947:2:56078:56100	3602400	0	True				
ANR	3602942	IdentifierDecl	SIZEOF_CALL = 5		3602400	0					
ANR	3602943	IdentifierDeclType	size_t		3602400	0					
ANR	3602944	Identifier	SIZEOF_CALL		3602400	1					
ANR	3602945	AssignmentExpression	SIZEOF_CALL = 5		3602400	2		=			
ANR	3602946	Identifier	SIZEOF_CALL		3602400	0					
ANR	3602947	PrimaryExpression	5		3602400	1					
ANR	3602948	IdentifierDeclStatement	ut64 rel_addr = ( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) ) ;	1948:2:56104:56191	3602400	1	True				
ANR	3602949	IdentifierDecl	rel_addr = ( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) )		3602400	0					
ANR	3602950	IdentifierDeclType	ut64		3602400	0					
ANR	3602951	Identifier	rel_addr		3602400	1					
ANR	3602952	AssignmentExpression	rel_addr = ( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) )		3602400	2		=			
ANR	3602953	Identifier	rel_addr		3602400	0					
ANR	3602954	CastExpression	( ut64 ) ( ( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) ) )		3602400	1					
ANR	3602955	CastTarget	ut64		3602400	0					
ANR	3602956	CastExpression	( int ) ( buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 ) )		3602400	1					
ANR	3602957	CastTarget	int		3602400	0					
ANR	3602958	AdditiveExpression	buf [ 1 ] + ( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 )		3602400	1		+			
ANR	3602959	ArrayIndexing	buf [ 1 ]		3602400	0					
ANR	3602960	Identifier	buf		3602400	0					
ANR	3602961	PrimaryExpression	1		3602400	1					
ANR	3602962	AdditiveExpression	( buf [ 2 ] << 8 ) + ( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 )		3602400	1		+			
ANR	3602963	ShiftExpression	buf [ 2 ] << 8		3602400	0		<<			
ANR	3602964	ArrayIndexing	buf [ 2 ]		3602400	0					
ANR	3602965	Identifier	buf		3602400	0					
ANR	3602966	PrimaryExpression	2		3602400	1					
ANR	3602967	PrimaryExpression	8		3602400	1					
ANR	3602968	AdditiveExpression	( buf [ 3 ] << 16 ) + ( buf [ 4 ] << 24 )		3602400	1		+			
ANR	3602969	ShiftExpression	buf [ 3 ] << 16		3602400	0		<<			
ANR	3602970	ArrayIndexing	buf [ 3 ]		3602400	0					
ANR	3602971	Identifier	buf		3602400	0					
ANR	3602972	PrimaryExpression	3		3602400	1					
ANR	3602973	PrimaryExpression	16		3602400	1					
ANR	3602974	ShiftExpression	buf [ 4 ] << 24		3602400	1		<<			
ANR	3602975	ArrayIndexing	buf [ 4 ]		3602400	0					
ANR	3602976	Identifier	buf		3602400	0					
ANR	3602977	PrimaryExpression	4		3602400	1					
ANR	3602978	PrimaryExpression	24		3602400	1					
ANR	3602979	IdentifierDeclStatement	"ut64 addr = Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL ) ;"	1949:2:56195:56252	3602400	2	True				
ANR	3602980	IdentifierDecl	"addr = Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL )"		3602400	0					
ANR	3602981	IdentifierDeclType	ut64		3602400	0					
ANR	3602982	Identifier	addr		3602400	1					
ANR	3602983	AssignmentExpression	"addr = Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL )"		3602400	2		=			
ANR	3602984	Identifier	addr		3602400	0					
ANR	3602985	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry + SIZEOF_CALL )"		3602400	1					
ANR	3602986	Callee	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3602987	CallExpression	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3602988	Callee	Elf_		3602400	0					
ANR	3602989	Identifier	Elf_		3602400	0					
ANR	3602990	ArgumentList	r_bin_elf_p2v		3602400	1					
ANR	3602991	Argument	r_bin_elf_p2v		3602400	0					
ANR	3602992	Identifier	r_bin_elf_p2v		3602400	0					
ANR	3602993	ArgumentList	bin		3602400	1					
ANR	3602994	Argument	bin		3602400	0					
ANR	3602995	Identifier	bin		3602400	0					
ANR	3602996	Argument	entry + SIZEOF_CALL		3602400	1					
ANR	3602997	AdditiveExpression	entry + SIZEOF_CALL		3602400	0		+			
ANR	3602998	Identifier	entry		3602400	0					
ANR	3602999	Identifier	SIZEOF_CALL		3602400	1					
ANR	3603000	ExpressionStatement	addr += rel_addr	1950:2:56256:56272	3602400	3	True				
ANR	3603001	AssignmentExpression	addr += rel_addr		3602400	0		+=			
ANR	3603002	Identifier	addr		3602400	0					
ANR	3603003	Identifier	rel_addr		3602400	1					
ANR	3603004	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1951:2:56276:56314	3602400	4	True				
ANR	3603005	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		3602400	0					
ANR	3603006	Callee	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3603007	CallExpression	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3603008	Callee	Elf_		3602400	0					
ANR	3603009	Identifier	Elf_		3602400	0					
ANR	3603010	ArgumentList	r_bin_elf_v2p		3602400	1					
ANR	3603011	Argument	r_bin_elf_v2p		3602400	0					
ANR	3603012	Identifier	r_bin_elf_v2p		3602400	0					
ANR	3603013	ArgumentList	bin		3602400	1					
ANR	3603014	Argument	bin		3602400	0					
ANR	3603015	Identifier	bin		3602400	0					
ANR	3603016	Argument	addr		3602400	1					
ANR	3603017	Identifier	addr		3602400	0					
ANR	3603018	IfStatement	if ( buf [ 0x00 ] == 0x48 && buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8 )		3602400	9					
ANR	3603019	Condition	buf [ 0x00 ] == 0x48 && buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8	1954:5:56336:56394	3602400	0	True				
ANR	3603020	AndExpression	buf [ 0x00 ] == 0x48 && buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8		3602400	0		&&			
ANR	3603021	EqualityExpression	buf [ 0x00 ] == 0x48		3602400	0		==			
ANR	3603022	ArrayIndexing	buf [ 0x00 ]		3602400	0					
ANR	3603023	Identifier	buf		3602400	0					
ANR	3603024	PrimaryExpression	0x00		3602400	1					
ANR	3603025	PrimaryExpression	0x48		3602400	1					
ANR	3603026	AndExpression	buf [ 0x1e ] == 0x8d && buf [ 0x11 ] == 0xe8		3602400	1		&&			
ANR	3603027	EqualityExpression	buf [ 0x1e ] == 0x8d		3602400	0		==			
ANR	3603028	ArrayIndexing	buf [ 0x1e ]		3602400	0					
ANR	3603029	Identifier	buf		3602400	0					
ANR	3603030	PrimaryExpression	0x1e		3602400	1					
ANR	3603031	PrimaryExpression	0x8d		3602400	1					
ANR	3603032	EqualityExpression	buf [ 0x11 ] == 0xe8		3602400	1		==			
ANR	3603033	ArrayIndexing	buf [ 0x11 ]		3602400	0					
ANR	3603034	Identifier	buf		3602400	0					
ANR	3603035	PrimaryExpression	0x11		3602400	1					
ANR	3603036	PrimaryExpression	0xe8		3602400	1					
ANR	3603037	CompoundStatement		95:2:3028:3074	3602400	1					
ANR	3603038	IdentifierDeclStatement	ut32 * pmain = ( ut32 * ) ( buf + 0x30 ) ;	1955:2:56401:56434	3602400	0	True				
ANR	3603039	IdentifierDecl	* pmain = ( ut32 * ) ( buf + 0x30 )		3602400	0					
ANR	3603040	IdentifierDeclType	ut32 *		3602400	0					
ANR	3603041	Identifier	pmain		3602400	1					
ANR	3603042	AssignmentExpression	* pmain = ( ut32 * ) ( buf + 0x30 )		3602400	2		=			
ANR	3603043	Identifier	pmain		3602400	0					
ANR	3603044	CastExpression	( ut32 * ) ( buf + 0x30 )		3602400	1					
ANR	3603045	CastTarget	ut32 *		3602400	0					
ANR	3603046	AdditiveExpression	buf + 0x30		3602400	1		+			
ANR	3603047	Identifier	buf		3602400	0					
ANR	3603048	PrimaryExpression	0x30		3602400	1					
ANR	3603049	IdentifierDeclStatement	"ut64 vmain = Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain ) ;"	1956:2:56438:56490	3602400	1	True				
ANR	3603050	IdentifierDecl	"vmain = Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain )"		3602400	0					
ANR	3603051	IdentifierDeclType	ut64		3602400	0					
ANR	3603052	Identifier	vmain		3602400	1					
ANR	3603053	AssignmentExpression	"vmain = Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain )"		3602400	2		=			
ANR	3603054	Identifier	vmain		3602400	0					
ANR	3603055	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , ( ut64 ) * pmain )"		3602400	1					
ANR	3603056	Callee	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3603057	CallExpression	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3603058	Callee	Elf_		3602400	0					
ANR	3603059	Identifier	Elf_		3602400	0					
ANR	3603060	ArgumentList	r_bin_elf_p2v		3602400	1					
ANR	3603061	Argument	r_bin_elf_p2v		3602400	0					
ANR	3603062	Identifier	r_bin_elf_p2v		3602400	0					
ANR	3603063	ArgumentList	bin		3602400	1					
ANR	3603064	Argument	bin		3602400	0					
ANR	3603065	Identifier	bin		3602400	0					
ANR	3603066	Argument	( ut64 ) * pmain		3602400	1					
ANR	3603067	CastExpression	( ut64 ) * pmain		3602400	0					
ANR	3603068	CastTarget	ut64		3602400	0					
ANR	3603069	UnaryOperationExpression	* pmain		3602400	1					
ANR	3603070	UnaryOperator	*		3602400	0					
ANR	3603071	Identifier	pmain		3602400	1					
ANR	3603072	IdentifierDeclStatement	"ut64 ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry ) ;"	1957:2:56494:56540	3602400	2	True				
ANR	3603073	IdentifierDecl	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	0					
ANR	3603074	IdentifierDeclType	ut64		3602400	0					
ANR	3603075	Identifier	ventry		3602400	1					
ANR	3603076	AssignmentExpression	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	2		=			
ANR	3603077	Identifier	ventry		3602400	0					
ANR	3603078	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	1					
ANR	3603079	Callee	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3603080	CallExpression	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3603081	Callee	Elf_		3602400	0					
ANR	3603082	Identifier	Elf_		3602400	0					
ANR	3603083	ArgumentList	r_bin_elf_p2v		3602400	1					
ANR	3603084	Argument	r_bin_elf_p2v		3602400	0					
ANR	3603085	Identifier	r_bin_elf_p2v		3602400	0					
ANR	3603086	ArgumentList	bin		3602400	1					
ANR	3603087	Argument	bin		3602400	0					
ANR	3603088	Identifier	bin		3602400	0					
ANR	3603089	Argument	entry		3602400	1					
ANR	3603090	Identifier	entry		3602400	0					
ANR	3603091	IfStatement	if ( vmain >> 16 == ventry >> 16 )		3602400	3					
ANR	3603092	Condition	vmain >> 16 == ventry >> 16	1958:6:56548:56574	3602400	0	True				
ANR	3603093	EqualityExpression	vmain >> 16 == ventry >> 16		3602400	0		==			
ANR	3603094	ShiftExpression	vmain >> 16		3602400	0		>>			
ANR	3603095	Identifier	vmain		3602400	0					
ANR	3603096	PrimaryExpression	16		3602400	1					
ANR	3603097	ShiftExpression	ventry >> 16		3602400	1		>>			
ANR	3603098	Identifier	ventry		3602400	0					
ANR	3603099	PrimaryExpression	16		3602400	1					
ANR	3603100	CompoundStatement		96:35:3111:3111	3602400	1					
ANR	3603101	ReturnStatement	return ( ut64 ) vmain ;	1959:3:56582:56600	3602400	0	True				
ANR	3603102	CastExpression	( ut64 ) vmain		3602400	0					
ANR	3603103	CastTarget	ut64		3602400	0					
ANR	3603104	Identifier	vmain		3602400	1					
ANR	3603105	IfStatement	if ( buf [ 0x1d ] == 0x48 && buf [ 0x1e ] == 0x8b )		3602400	10					
ANR	3603106	Condition	buf [ 0x1d ] == 0x48 && buf [ 0x1e ] == 0x8b	1963:5:56626:56663	3602400	0	True				
ANR	3603107	AndExpression	buf [ 0x1d ] == 0x48 && buf [ 0x1e ] == 0x8b		3602400	0		&&			
ANR	3603108	EqualityExpression	buf [ 0x1d ] == 0x48		3602400	0		==			
ANR	3603109	ArrayIndexing	buf [ 0x1d ]		3602400	0					
ANR	3603110	Identifier	buf		3602400	0					
ANR	3603111	PrimaryExpression	0x1d		3602400	1					
ANR	3603112	PrimaryExpression	0x48		3602400	1					
ANR	3603113	EqualityExpression	buf [ 0x1e ] == 0x8b		3602400	1		==			
ANR	3603114	ArrayIndexing	buf [ 0x1e ]		3602400	0					
ANR	3603115	Identifier	buf		3602400	0					
ANR	3603116	PrimaryExpression	0x1e		3602400	1					
ANR	3603117	PrimaryExpression	0x8b		3602400	1					
ANR	3603118	CompoundStatement		101:45:3200:3200	3602400	1					
ANR	3603119	IfStatement	"if ( ! memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 ) )"		3602400	0					
ANR	3603120	Condition	"! memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 )"	1964:6:56674:56709	3602400	0	True				
ANR	3603121	UnaryOperationExpression	"! memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 )"		3602400	0					
ANR	3603122	UnaryOperator	!		3602400	0					
ANR	3603123	CallExpression	"memcmp ( buf , ""\\x31\\xed\\x49\\x89"" , 4 )"		3602400	1					
ANR	3603124	Callee	memcmp		3602400	0					
ANR	3603125	Identifier	memcmp		3602400	0					
ANR	3603126	ArgumentList	buf		3602400	1					
ANR	3603127	Argument	buf		3602400	0					
ANR	3603128	Identifier	buf		3602400	0					
ANR	3603129	Argument	"""\\x31\\xed\\x49\\x89"""		3602400	1					
ANR	3603130	PrimaryExpression	"""\\x31\\xed\\x49\\x89"""		3602400	0					
ANR	3603131	Argument	4		3602400	2					
ANR	3603132	PrimaryExpression	4		3602400	0					
ANR	3603133	CompoundStatement		104:3:3281:3310	3602400	1					
ANR	3603134	IdentifierDeclStatement	"ut64 maddr , baddr ;"	1965:3:56725:56742	3602400	0	True				
ANR	3603135	IdentifierDecl	maddr		3602400	0					
ANR	3603136	IdentifierDeclType	ut64		3602400	0					
ANR	3603137	Identifier	maddr		3602400	1					
ANR	3603138	IdentifierDecl	baddr		3602400	1					
ANR	3603139	IdentifierDeclType	ut64		3602400	0					
ANR	3603140	Identifier	baddr		3602400	1					
ANR	3603141	IdentifierDeclStatement	ut8 n32s [ sizeof ( ut32 ) ] = { 0 } ;	1966:3:56747:56776	3602400	1	True				
ANR	3603142	IdentifierDecl	n32s [ sizeof ( ut32 ) ] = { 0 }		3602400	0					
ANR	3603143	IdentifierDeclType	ut8 [ sizeof ( ut32 ) ]		3602400	0					
ANR	3603144	Identifier	n32s		3602400	1					
ANR	3603145	SizeofExpression	sizeof ( ut32 )		3602400	2					
ANR	3603146	Sizeof	sizeof		3602400	0					
ANR	3603147	SizeofOperand	ut32		3602400	1					
ANR	3603148	AssignmentExpression	n32s [ sizeof ( ut32 ) ] = { 0 }		3602400	3		=			
ANR	3603149	Identifier	n32s		3602400	0					
ANR	3603150	InitializerList	0		3602400	1					
ANR	3603151	PrimaryExpression	0		3602400	0					
ANR	3603152	ExpressionStatement	maddr = entry + 0x24 + r_read_le32 ( buf + 0x20 )	1967:3:56781:56828	3602400	2	True				
ANR	3603153	AssignmentExpression	maddr = entry + 0x24 + r_read_le32 ( buf + 0x20 )		3602400	0		=			
ANR	3603154	Identifier	maddr		3602400	0					
ANR	3603155	AdditiveExpression	entry + 0x24 + r_read_le32 ( buf + 0x20 )		3602400	1		+			
ANR	3603156	Identifier	entry		3602400	0					
ANR	3603157	AdditiveExpression	0x24 + r_read_le32 ( buf + 0x20 )		3602400	1		+			
ANR	3603158	PrimaryExpression	0x24		3602400	0					
ANR	3603159	CallExpression	r_read_le32 ( buf + 0x20 )		3602400	1					
ANR	3603160	Callee	r_read_le32		3602400	0					
ANR	3603161	Identifier	r_read_le32		3602400	0					
ANR	3603162	ArgumentList	buf + 0x20		3602400	1					
ANR	3603163	Argument	buf + 0x20		3602400	0					
ANR	3603164	AdditiveExpression	buf + 0x20		3602400	0		+			
ANR	3603165	Identifier	buf		3602400	0					
ANR	3603166	PrimaryExpression	0x20		3602400	1					
ANR	3603167	IfStatement	"if ( r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) ) == - 1 )"		3602400	3					
ANR	3603168	Condition	"r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) ) == - 1"	1968:7:56837:56892	3602400	0	True				
ANR	3603169	EqualityExpression	"r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) ) == - 1"		3602400	0		==			
ANR	3603170	CallExpression	"r_buf_read_at ( bin -> b , maddr , n32s , sizeof ( ut32 ) )"		3602400	0					
ANR	3603171	Callee	r_buf_read_at		3602400	0					
ANR	3603172	Identifier	r_buf_read_at		3602400	0					
ANR	3603173	ArgumentList	bin -> b		3602400	1					
ANR	3603174	Argument	bin -> b		3602400	0					
ANR	3603175	PtrMemberAccess	bin -> b		3602400	0					
ANR	3603176	Identifier	bin		3602400	0					
ANR	3603177	Identifier	b		3602400	1					
ANR	3603178	Argument	maddr		3602400	1					
ANR	3603179	Identifier	maddr		3602400	0					
ANR	3603180	Argument	n32s		3602400	2					
ANR	3603181	Identifier	n32s		3602400	0					
ANR	3603182	Argument	sizeof ( ut32 )		3602400	3					
ANR	3603183	SizeofExpression	sizeof ( ut32 )		3602400	0					
ANR	3603184	Sizeof	sizeof		3602400	0					
ANR	3603185	SizeofOperand	ut32		3602400	1					
ANR	3603186	UnaryOperationExpression	- 1		3602400	1					
ANR	3603187	UnaryOperator	-		3602400	0					
ANR	3603188	PrimaryExpression	1		3602400	1					
ANR	3603189	CompoundStatement		106:65:3429:3429	3602400	1					
ANR	3603190	ExpressionStatement	"bprintf ( ""read (maddr) 2\\n"" )"	1969:4:56901:56929	3602400	0	True				
ANR	3603191	CallExpression	"bprintf ( ""read (maddr) 2\\n"" )"		3602400	0					
ANR	3603192	Callee	bprintf		3602400	0					
ANR	3603193	Identifier	bprintf		3602400	0					
ANR	3603194	ArgumentList	"""read (maddr) 2\\n"""		3602400	1					
ANR	3603195	Argument	"""read (maddr) 2\\n"""		3602400	0					
ANR	3603196	PrimaryExpression	"""read (maddr) 2\\n"""		3602400	0					
ANR	3603197	ReturnStatement	return 0 ;	1970:4:56935:56943	3602400	1	True				
ANR	3603198	PrimaryExpression	0		3602400	0					
ANR	3603199	ExpressionStatement	maddr = ( ut64 ) r_read_le32 ( & n32s [ 0 ] )	1972:3:56953:56989	3602400	4	True				
ANR	3603200	AssignmentExpression	maddr = ( ut64 ) r_read_le32 ( & n32s [ 0 ] )		3602400	0		=			
ANR	3603201	Identifier	maddr		3602400	0					
ANR	3603202	CastExpression	( ut64 ) r_read_le32 ( & n32s [ 0 ] )		3602400	1					
ANR	3603203	CastTarget	ut64		3602400	0					
ANR	3603204	CallExpression	r_read_le32 ( & n32s [ 0 ] )		3602400	1					
ANR	3603205	Callee	r_read_le32		3602400	0					
ANR	3603206	Identifier	r_read_le32		3602400	0					
ANR	3603207	ArgumentList	& n32s [ 0 ]		3602400	1					
ANR	3603208	Argument	& n32s [ 0 ]		3602400	0					
ANR	3603209	UnaryOperationExpression	& n32s [ 0 ]		3602400	0					
ANR	3603210	UnaryOperator	&		3602400	0					
ANR	3603211	ArrayIndexing	n32s [ 0 ]		3602400	1					
ANR	3603212	Identifier	n32s		3602400	0					
ANR	3603213	PrimaryExpression	0		3602400	1					
ANR	3603214	ExpressionStatement	baddr = ( bin -> ehdr . e_entry >> 16 ) << 16	1973:3:56994:57033	3602400	5	True				
ANR	3603215	AssignmentExpression	baddr = ( bin -> ehdr . e_entry >> 16 ) << 16		3602400	0		=			
ANR	3603216	Identifier	baddr		3602400	0					
ANR	3603217	ShiftExpression	( bin -> ehdr . e_entry >> 16 ) << 16		3602400	1		<<			
ANR	3603218	ShiftExpression	bin -> ehdr . e_entry >> 16		3602400	0		>>			
ANR	3603219	MemberAccess	bin -> ehdr . e_entry		3602400	0					
ANR	3603220	PtrMemberAccess	bin -> ehdr		3602400	0					
ANR	3603221	Identifier	bin		3602400	0					
ANR	3603222	Identifier	ehdr		3602400	1					
ANR	3603223	Identifier	e_entry		3602400	1					
ANR	3603224	PrimaryExpression	16		3602400	1					
ANR	3603225	PrimaryExpression	16		3602400	1					
ANR	3603226	IfStatement	if ( bin -> phdr )		3602400	6					
ANR	3603227	Condition	bin -> phdr	1974:7:57042:57050	3602400	0	True				
ANR	3603228	PtrMemberAccess	bin -> phdr		3602400	0					
ANR	3603229	Identifier	bin		3602400	0					
ANR	3603230	Identifier	phdr		3602400	1					
ANR	3603231	CompoundStatement		112:18:3587:3587	3602400	1					
ANR	3603232	ExpressionStatement	baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )	1975:4:57059:57098	3602400	0	True				
ANR	3603233	AssignmentExpression	baddr = Elf_ ( r_bin_elf_get_baddr ) ( bin )		3602400	0		=			
ANR	3603234	Identifier	baddr		3602400	0					
ANR	3603235	CallExpression	Elf_ ( r_bin_elf_get_baddr ) ( bin )		3602400	1					
ANR	3603236	Callee	Elf_ ( r_bin_elf_get_baddr )		3602400	0					
ANR	3603237	CallExpression	Elf_ ( r_bin_elf_get_baddr )		3602400	0					
ANR	3603238	Callee	Elf_		3602400	0					
ANR	3603239	Identifier	Elf_		3602400	0					
ANR	3603240	ArgumentList	r_bin_elf_get_baddr		3602400	1					
ANR	3603241	Argument	r_bin_elf_get_baddr		3602400	0					
ANR	3603242	Identifier	r_bin_elf_get_baddr		3602400	0					
ANR	3603243	ArgumentList	bin		3602400	1					
ANR	3603244	Argument	bin		3602400	0					
ANR	3603245	Identifier	bin		3602400	0					
ANR	3603246	ExpressionStatement	maddr += baddr	1977:3:57108:57122	3602400	7	True				
ANR	3603247	AssignmentExpression	maddr += baddr		3602400	0		+=			
ANR	3603248	Identifier	maddr		3602400	0					
ANR	3603249	Identifier	baddr		3602400	1					
ANR	3603250	ReturnStatement	return maddr ;	1978:3:57127:57139	3602400	8	True				
ANR	3603251	Identifier	maddr		3602400	0					
ANR	3603252	IfStatement	"if ( ! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 ) && buf [ 156 ] == 0xe8 )"		3602400	11					
ANR	3603253	Condition	"! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 ) && buf [ 156 ] == 0xe8"	1983:5:57184:57235	3602400	0	True				
ANR	3603254	AndExpression	"! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 ) && buf [ 156 ] == 0xe8"		3602400	0		&&			
ANR	3603255	UnaryOperationExpression	"! memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 )"		3602400	0					
ANR	3603256	UnaryOperator	!		3602400	0					
ANR	3603257	CallExpression	"memcmp ( buf , ""\\x49\\x89\\xd9"" , 3 )"		3602400	1					
ANR	3603258	Callee	memcmp		3602400	0					
ANR	3603259	Identifier	memcmp		3602400	0					
ANR	3603260	ArgumentList	buf		3602400	1					
ANR	3603261	Argument	buf		3602400	0					
ANR	3603262	Identifier	buf		3602400	0					
ANR	3603263	Argument	"""\\x49\\x89\\xd9"""		3602400	1					
ANR	3603264	PrimaryExpression	"""\\x49\\x89\\xd9"""		3602400	0					
ANR	3603265	Argument	3		3602400	2					
ANR	3603266	PrimaryExpression	3		3602400	0					
ANR	3603267	EqualityExpression	buf [ 156 ] == 0xe8		3602400	1		==			
ANR	3603268	ArrayIndexing	buf [ 156 ]		3602400	0					
ANR	3603269	Identifier	buf		3602400	0					
ANR	3603270	PrimaryExpression	156		3602400	1					
ANR	3603271	PrimaryExpression	0xe8		3602400	1					
ANR	3603272	CompoundStatement		121:59:3772:3772	3602400	1					
ANR	3603273	ReturnStatement	return r_read_le32 ( & buf [ 157 ] ) + entry + 156 + 5 ;	1984:2:57253:57301	3602400	0	True				
ANR	3603274	AdditiveExpression	r_read_le32 ( & buf [ 157 ] ) + entry + 156 + 5		3602400	0		+			
ANR	3603275	CallExpression	r_read_le32 ( & buf [ 157 ] )		3602400	0					
ANR	3603276	Callee	r_read_le32		3602400	0					
ANR	3603277	Identifier	r_read_le32		3602400	0					
ANR	3603278	ArgumentList	& buf [ 157 ]		3602400	1					
ANR	3603279	Argument	& buf [ 157 ]		3602400	0					
ANR	3603280	UnaryOperationExpression	& buf [ 157 ]		3602400	0					
ANR	3603281	UnaryOperator	&		3602400	0					
ANR	3603282	ArrayIndexing	buf [ 157 ]		3602400	1					
ANR	3603283	Identifier	buf		3602400	0					
ANR	3603284	PrimaryExpression	157		3602400	1					
ANR	3603285	AdditiveExpression	entry + 156 + 5		3602400	1		+			
ANR	3603286	Identifier	entry		3602400	0					
ANR	3603287	AdditiveExpression	156 + 5		3602400	1		+			
ANR	3603288	PrimaryExpression	156		3602400	0					
ANR	3603289	PrimaryExpression	5		3602400	1					
ANR	3603290	IfStatement	"if ( ! memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 ) )"		3602400	12					
ANR	3603291	Condition	"! memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 )"	1986:5:57311:57345	3602400	0	True				
ANR	3603292	UnaryOperationExpression	"! memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 )"		3602400	0					
ANR	3603293	UnaryOperator	!		3602400	0					
ANR	3603294	CallExpression	"memcmp ( buf + 29 , ""\\x48\\xc7\\xc7"" , 3 )"		3602400	1					
ANR	3603295	Callee	memcmp		3602400	0					
ANR	3603296	Identifier	memcmp		3602400	0					
ANR	3603297	ArgumentList	buf + 29		3602400	1					
ANR	3603298	Argument	buf + 29		3602400	0					
ANR	3603299	AdditiveExpression	buf + 29		3602400	0		+			
ANR	3603300	Identifier	buf		3602400	0					
ANR	3603301	PrimaryExpression	29		3602400	1					
ANR	3603302	Argument	"""\\x48\\xc7\\xc7"""		3602400	1					
ANR	3603303	PrimaryExpression	"""\\x48\\xc7\\xc7"""		3602400	0					
ANR	3603304	Argument	3		3602400	2					
ANR	3603305	PrimaryExpression	3		3602400	0					
ANR	3603306	CompoundStatement		125:2:3895:3939	3602400	1					
ANR	3603307	IdentifierDeclStatement	ut64 addr = ( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] ) ;	1987:2:57361:57405	3602400	0	True				
ANR	3603308	IdentifierDecl	addr = ( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] )		3602400	0					
ANR	3603309	IdentifierDeclType	ut64		3602400	0					
ANR	3603310	Identifier	addr		3602400	1					
ANR	3603311	AssignmentExpression	addr = ( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] )		3602400	2		=			
ANR	3603312	Identifier	addr		3602400	0					
ANR	3603313	CastExpression	( ut64 ) r_read_le32 ( & buf [ 29 + 3 ] )		3602400	1					
ANR	3603314	CastTarget	ut64		3602400	0					
ANR	3603315	CallExpression	r_read_le32 ( & buf [ 29 + 3 ] )		3602400	1					
ANR	3603316	Callee	r_read_le32		3602400	0					
ANR	3603317	Identifier	r_read_le32		3602400	0					
ANR	3603318	ArgumentList	& buf [ 29 + 3 ]		3602400	1					
ANR	3603319	Argument	& buf [ 29 + 3 ]		3602400	0					
ANR	3603320	UnaryOperationExpression	& buf [ 29 + 3 ]		3602400	0					
ANR	3603321	UnaryOperator	&		3602400	0					
ANR	3603322	ArrayIndexing	buf [ 29 + 3 ]		3602400	1					
ANR	3603323	Identifier	buf		3602400	0					
ANR	3603324	AdditiveExpression	29 + 3		3602400	1		+			
ANR	3603325	PrimaryExpression	29		3602400	0					
ANR	3603326	PrimaryExpression	3		3602400	1					
ANR	3603327	ReturnStatement	"return Elf_ ( r_bin_elf_v2p ) ( bin , addr ) ;"	1988:2:57409:57447	3602400	1	True				
ANR	3603328	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , addr )"		3602400	0					
ANR	3603329	Callee	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3603330	CallExpression	Elf_ ( r_bin_elf_v2p )		3602400	0					
ANR	3603331	Callee	Elf_		3602400	0					
ANR	3603332	Identifier	Elf_		3602400	0					
ANR	3603333	ArgumentList	r_bin_elf_v2p		3602400	1					
ANR	3603334	Argument	r_bin_elf_v2p		3602400	0					
ANR	3603335	Identifier	r_bin_elf_v2p		3602400	0					
ANR	3603336	ArgumentList	bin		3602400	1					
ANR	3603337	Argument	bin		3602400	0					
ANR	3603338	Identifier	bin		3602400	0					
ANR	3603339	Argument	addr		3602400	1					
ANR	3603340	Identifier	addr		3602400	0					
ANR	3603341	IdentifierDeclStatement	int bo = 29 ;	1997:1:57641:57652	3602400	13	True				
ANR	3603342	IdentifierDecl	bo = 29		3602400	0					
ANR	3603343	IdentifierDeclType	int		3602400	0					
ANR	3603344	Identifier	bo		3602400	1					
ANR	3603345	AssignmentExpression	bo = 29		3602400	2		=			
ANR	3603346	Identifier	bo		3602400	0					
ANR	3603347	PrimaryExpression	29		3602400	1					
ANR	3603348	IfStatement	if ( buf [ 0 ] == 0xf3 && buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa )		3602400	14					
ANR	3603349	Condition	buf [ 0 ] == 0xf3 && buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa	1998:5:57715:57782	3602400	0	True				
ANR	3603350	AndExpression	buf [ 0 ] == 0xf3 && buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa		3602400	0		&&			
ANR	3603351	EqualityExpression	buf [ 0 ] == 0xf3		3602400	0		==			
ANR	3603352	ArrayIndexing	buf [ 0 ]		3602400	0					
ANR	3603353	Identifier	buf		3602400	0					
ANR	3603354	PrimaryExpression	0		3602400	1					
ANR	3603355	PrimaryExpression	0xf3		3602400	1					
ANR	3603356	AndExpression	buf [ 1 ] == 0x0f && buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa		3602400	1		&&			
ANR	3603357	EqualityExpression	buf [ 1 ] == 0x0f		3602400	0		==			
ANR	3603358	ArrayIndexing	buf [ 1 ]		3602400	0					
ANR	3603359	Identifier	buf		3602400	0					
ANR	3603360	PrimaryExpression	1		3602400	1					
ANR	3603361	PrimaryExpression	0x0f		3602400	1					
ANR	3603362	AndExpression	buf [ 2 ] == 0x1e && buf [ 3 ] == 0xfa		3602400	1		&&			
ANR	3603363	EqualityExpression	buf [ 2 ] == 0x1e		3602400	0		==			
ANR	3603364	ArrayIndexing	buf [ 2 ]		3602400	0					
ANR	3603365	Identifier	buf		3602400	0					
ANR	3603366	PrimaryExpression	2		3602400	1					
ANR	3603367	PrimaryExpression	0x1e		3602400	1					
ANR	3603368	EqualityExpression	buf [ 3 ] == 0xfa		3602400	1		==			
ANR	3603369	ArrayIndexing	buf [ 3 ]		3602400	0					
ANR	3603370	Identifier	buf		3602400	0					
ANR	3603371	PrimaryExpression	3		3602400	1					
ANR	3603372	PrimaryExpression	0xfa		3602400	1					
ANR	3603373	CompoundStatement		136:75:4319:4319	3602400	1					
ANR	3603374	ExpressionStatement	bo = 33	2000:2:57846:57853	3602400	0	True				
ANR	3603375	AssignmentExpression	bo = 33		3602400	0		=			
ANR	3603376	Identifier	bo		3602400	0					
ANR	3603377	PrimaryExpression	33		3602400	1					
ANR	3603378	IfStatement	if ( buf [ bo ] == 0x48 && buf [ bo + 1 ] == 0x8d )		3602400	15					
ANR	3603379	Condition	buf [ bo ] == 0x48 && buf [ bo + 1 ] == 0x8d	2002:5:57863:57900	3602400	0	True				
ANR	3603380	AndExpression	buf [ bo ] == 0x48 && buf [ bo + 1 ] == 0x8d		3602400	0		&&			
ANR	3603381	EqualityExpression	buf [ bo ] == 0x48		3602400	0		==			
ANR	3603382	ArrayIndexing	buf [ bo ]		3602400	0					
ANR	3603383	Identifier	buf		3602400	0					
ANR	3603384	Identifier	bo		3602400	1					
ANR	3603385	PrimaryExpression	0x48		3602400	1					
ANR	3603386	EqualityExpression	buf [ bo + 1 ] == 0x8d		3602400	1		==			
ANR	3603387	ArrayIndexing	buf [ bo + 1 ]		3602400	0					
ANR	3603388	Identifier	buf		3602400	0					
ANR	3603389	AdditiveExpression	bo + 1		3602400	1		+			
ANR	3603390	Identifier	bo		3602400	0					
ANR	3603391	PrimaryExpression	1		3602400	1					
ANR	3603392	PrimaryExpression	0x8d		3602400	1					
ANR	3603393	CompoundStatement		144:2:4590:4636	3602400	1					
ANR	3603394	IdentifierDeclStatement	ut8 * p = buf + bo + 3 ;	2003:2:57938:57959	3602400	0	True				
ANR	3603395	IdentifierDecl	* p = buf + bo + 3		3602400	0					
ANR	3603396	IdentifierDeclType	ut8 *		3602400	0					
ANR	3603397	Identifier	p		3602400	1					
ANR	3603398	AssignmentExpression	* p = buf + bo + 3		3602400	2		=			
ANR	3603399	Identifier	p		3602400	0					
ANR	3603400	AdditiveExpression	buf + bo + 3		3602400	1		+			
ANR	3603401	Identifier	buf		3602400	0					
ANR	3603402	AdditiveExpression	bo + 3		3602400	1		+			
ANR	3603403	Identifier	bo		3602400	0					
ANR	3603404	PrimaryExpression	3		3602400	1					
ANR	3603405	IdentifierDeclStatement	st32 maindelta = ( st32 ) r_read_le32 ( p ) ;	2004:2:57963:58001	3602400	1	True				
ANR	3603406	IdentifierDecl	maindelta = ( st32 ) r_read_le32 ( p )		3602400	0					
ANR	3603407	IdentifierDeclType	st32		3602400	0					
ANR	3603408	Identifier	maindelta		3602400	1					
ANR	3603409	AssignmentExpression	maindelta = ( st32 ) r_read_le32 ( p )		3602400	2		=			
ANR	3603410	Identifier	maindelta		3602400	0					
ANR	3603411	CastExpression	( st32 ) r_read_le32 ( p )		3602400	1					
ANR	3603412	CastTarget	st32		3602400	0					
ANR	3603413	CallExpression	r_read_le32 ( p )		3602400	1					
ANR	3603414	Callee	r_read_le32		3602400	0					
ANR	3603415	Identifier	r_read_le32		3602400	0					
ANR	3603416	ArgumentList	p		3602400	1					
ANR	3603417	Argument	p		3602400	0					
ANR	3603418	Identifier	p		3602400	0					
ANR	3603419	IdentifierDeclStatement	ut64 vmain = ( ut64 ) ( entry + bo + maindelta ) + 7 ;	2005:2:58005:58052	3602400	2	True				
ANR	3603420	IdentifierDecl	vmain = ( ut64 ) ( entry + bo + maindelta ) + 7		3602400	0					
ANR	3603421	IdentifierDeclType	ut64		3602400	0					
ANR	3603422	Identifier	vmain		3602400	1					
ANR	3603423	AssignmentExpression	vmain = ( ut64 ) ( entry + bo + maindelta ) + 7		3602400	2		=			
ANR	3603424	Identifier	vmain		3602400	0					
ANR	3603425	AdditiveExpression	( ut64 ) ( entry + bo + maindelta ) + 7		3602400	1		+			
ANR	3603426	CastExpression	( ut64 ) ( entry + bo + maindelta )		3602400	0					
ANR	3603427	CastTarget	ut64		3602400	0					
ANR	3603428	AdditiveExpression	entry + bo + maindelta		3602400	1		+			
ANR	3603429	Identifier	entry		3602400	0					
ANR	3603430	AdditiveExpression	bo + maindelta		3602400	1		+			
ANR	3603431	Identifier	bo		3602400	0					
ANR	3603432	Identifier	maindelta		3602400	1					
ANR	3603433	PrimaryExpression	7		3602400	1					
ANR	3603434	IdentifierDeclStatement	"ut64 ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry ) ;"	2006:2:58056:58102	3602400	3	True				
ANR	3603435	IdentifierDecl	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	0					
ANR	3603436	IdentifierDeclType	ut64		3602400	0					
ANR	3603437	Identifier	ventry		3602400	1					
ANR	3603438	AssignmentExpression	"ventry = Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	2		=			
ANR	3603439	Identifier	ventry		3602400	0					
ANR	3603440	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , entry )"		3602400	1					
ANR	3603441	Callee	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3603442	CallExpression	Elf_ ( r_bin_elf_p2v )		3602400	0					
ANR	3603443	Callee	Elf_		3602400	0					
ANR	3603444	Identifier	Elf_		3602400	0					
ANR	3603445	ArgumentList	r_bin_elf_p2v		3602400	1					
ANR	3603446	Argument	r_bin_elf_p2v		3602400	0					
ANR	3603447	Identifier	r_bin_elf_p2v		3602400	0					
ANR	3603448	ArgumentList	bin		3602400	1					
ANR	3603449	Argument	bin		3602400	0					
ANR	3603450	Identifier	bin		3602400	0					
ANR	3603451	Argument	entry		3602400	1					
ANR	3603452	Identifier	entry		3602400	0					
ANR	3603453	IfStatement	if ( vmain >> 16 == ventry >> 16 )		3602400	4					
ANR	3603454	Condition	vmain >> 16 == ventry >> 16	2007:6:58110:58132	3602400	0	True				
ANR	3603455	EqualityExpression	vmain >> 16 == ventry >> 16		3602400	0		==			
ANR	3603456	ShiftExpression	vmain >> 16		3602400	0		>>			
ANR	3603457	Identifier	vmain		3602400	0					
ANR	3603458	PrimaryExpression	16		3602400	1					
ANR	3603459	ShiftExpression	ventry >> 16		3602400	1		>>			
ANR	3603460	Identifier	ventry		3602400	0					
ANR	3603461	PrimaryExpression	16		3602400	1					
ANR	3603462	CompoundStatement		145:31:4669:4669	3602400	1					
ANR	3603463	ReturnStatement	return ( ut64 ) vmain ;	2008:3:58140:58158	3602400	0	True				
ANR	3603464	CastExpression	( ut64 ) vmain		3602400	0					
ANR	3603465	CastTarget	ut64		3602400	0					
ANR	3603466	Identifier	vmain		3602400	1					
ANR	3603467	CompoundStatement		152:2:4740:4768	3602400	16					
ANR	3603468	IdentifierDeclStatement	ut64 m = getmainsymbol ( bin ) ;	2014:2:58206:58234	3602400	0	True				
ANR	3603469	IdentifierDecl	m = getmainsymbol ( bin )		3602400	0					
ANR	3603470	IdentifierDeclType	ut64		3602400	0					
ANR	3603471	Identifier	m		3602400	1					
ANR	3603472	AssignmentExpression	m = getmainsymbol ( bin )		3602400	2		=			
ANR	3603473	Identifier	m		3602400	0					
ANR	3603474	CallExpression	getmainsymbol ( bin )		3602400	1					
ANR	3603475	Callee	getmainsymbol		3602400	0					
ANR	3603476	Identifier	getmainsymbol		3602400	0					
ANR	3603477	ArgumentList	bin		3602400	1					
ANR	3603478	Argument	bin		3602400	0					
ANR	3603479	Identifier	bin		3602400	0					
ANR	3603480	IfStatement	if ( m != UT64_MAX )		3602400	1					
ANR	3603481	Condition	m != UT64_MAX	2015:6:58242:58254	3602400	0	True				
ANR	3603482	EqualityExpression	m != UT64_MAX		3602400	0		!=			
ANR	3603483	Identifier	m		3602400	0					
ANR	3603484	Identifier	UT64_MAX		3602400	1					
ANR	3603485	CompoundStatement		153:21:4791:4791	3602400	1					
ANR	3603486	ReturnStatement	return m ;	2016:3:58262:58270	3602400	0	True				
ANR	3603487	Identifier	m		3602400	0					
ANR	3603488	ReturnStatement	return UT64_MAX ;	2019:1:58280:58295	3602400	17	True				
ANR	3603489	Identifier	UT64_MAX		3602400	0					
ANR	3603490	ReturnType	ut64 Elf_		3602400	1					
ANR	3603491	Identifier	( r_bin_elf_get_main_offset )		3602400	2					
ANR	3603492	Identifier	r_bin_elf_get_main_offset		3602400	3					
ANR	3603493	ParameterList	ELFOBJ * bin		3602400	4					
ANR	3603494	Parameter	ELFOBJ * bin	1863:37:53452:53462	3602400	0	True				
ANR	3603495	ParameterType	ELFOBJ *		3602400	0					
ANR	3603496	Identifier	bin		3602400	1					
ANR	3603497	CFGEntryNode	ENTRY		3602400		True				
ANR	3603498	CFGExitNode	EXIT		3602400		True				
ANR	3603499	Symbol	bin -> size		3602400						
ANR	3603500	Symbol	baddr		3602400						
ANR	3603501	Symbol	bin -> b		3602400						
ANR	3603502	Symbol	bin		3602400						
ANR	3603503	Symbol	delta		3602400						
ANR	3603504	Symbol	bin -> phdr		3602400						
ANR	3603505	Symbol	* pmain		3602400						
ANR	3603506	Symbol	bo		3602400						
ANR	3603507	Symbol	* bin		3602400						
ANR	3603508	Symbol	got_offset		3602400						
ANR	3603509	Symbol	* bo		3602400						
ANR	3603510	Symbol	r_bin_elf_get_baddr		3602400						
ANR	3603511	Symbol	memcmp		3602400						
ANR	3603512	Symbol	SIZEOF_CALL		3602400						
ANR	3603513	Symbol	maindelta		3602400						
ANR	3603514	Symbol	instr		3602400						
ANR	3603515	Symbol	bin -> ehdr		3602400						
ANR	3603516	Symbol	rel_addr		3602400						
ANR	3603517	Symbol	UT64_MAX		3602400						
ANR	3603518	Symbol	r_bin_elf_p2v		3602400						
ANR	3603519	Symbol	r_bin_elf_v2p		3602400						
ANR	3603520	Symbol	addr		3602400						
ANR	3603521	Symbol	r_bin_elf_get_entry_offset		3602400						
ANR	3603522	Symbol	vmain		3602400						
ANR	3603523	Symbol	Elf_		3602400						
ANR	3603524	Symbol	* buf		3602400						
ANR	3603525	Symbol	ventry		3602400						
ANR	3603526	Symbol	r_read_le32		3602400						
ANR	3603527	Symbol	getmainsymbol		3602400						
ANR	3603528	Symbol	bin -> ehdr . e_entry		3602400						
ANR	3603529	Symbol	gp		3602400						
ANR	3603530	Symbol	i		3602400						
ANR	3603531	Symbol	m		3602400						
ANR	3603532	Symbol	r_bin_elf_get_section_offset		3602400						
ANR	3603533	Symbol	p		3602400						
ANR	3603534	Symbol	entry		3602400						
ANR	3603535	Symbol	pa		3602400						
ANR	3603536	Symbol	buf		3602400						
ANR	3603537	Symbol	~1		3602400						
ANR	3603538	Symbol	maddr		3602400						
ANR	3603539	Symbol	pmain		3602400						
ANR	3603540	Symbol	n32s		3602400						
ANR	3603541	Symbol	entry_vaddr		3602400						
ANR	3603542	Symbol	main_addr		3602400						
ANR	3603543	Symbol	r_buf_read_at		3602400						
ANR	3603544	Symbol	r_buf_size		3602400						
ANR	3603545	Function	r_bin_elf_get_stripped	2022:0:58300:58520							
ANR	3603546	FunctionDef	r_bin_elf_get_stripped (ELFOBJ * bin)		3603545	0					
ANR	3603547	CompoundStatement		2022:47:58347:58520	3603545	0					
ANR	3603548	IdentifierDeclStatement	int i ;	2023:1:58350:58355	3603545	0	True				
ANR	3603549	IdentifierDecl	i		3603545	0					
ANR	3603550	IdentifierDeclType	int		3603545	0					
ANR	3603551	Identifier	i		3603545	1					
ANR	3603552	IfStatement	if ( ! bin -> shdr )		3603545	1					
ANR	3603553	Condition	! bin -> shdr	2024:5:58362:58371	3603545	0	True				
ANR	3603554	UnaryOperationExpression	! bin -> shdr		3603545	0					
ANR	3603555	UnaryOperator	!		3603545	0					
ANR	3603556	PtrMemberAccess	bin -> shdr		3603545	1					
ANR	3603557	Identifier	bin		3603545	0					
ANR	3603558	Identifier	shdr		3603545	1					
ANR	3603559	CompoundStatement		3:17:26:26	3603545	1					
ANR	3603560	ReturnStatement	return false ;	2025:2:58378:58390	3603545	0	True				
ANR	3603561	Identifier	false		3603545	0					
ANR	3603562	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		3603545	2					
ANR	3603563	ForInit	i = 0 ;	2027:6:58401:58406	3603545	0	True				
ANR	3603564	AssignmentExpression	i = 0		3603545	0		=			
ANR	3603565	Identifier	i		3603545	0					
ANR	3603566	PrimaryExpression	0		3603545	1					
ANR	3603567	Condition	i < bin -> ehdr . e_shnum	2027:13:58408:58428	3603545	1	True				
ANR	3603568	RelationalExpression	i < bin -> ehdr . e_shnum		3603545	0		<			
ANR	3603569	Identifier	i		3603545	0					
ANR	3603570	MemberAccess	bin -> ehdr . e_shnum		3603545	1					
ANR	3603571	PtrMemberAccess	bin -> ehdr		3603545	0					
ANR	3603572	Identifier	bin		3603545	0					
ANR	3603573	Identifier	ehdr		3603545	1					
ANR	3603574	Identifier	e_shnum		3603545	1					
ANR	3603575	PostIncDecOperationExpression	i ++	2027:36:58431:58433	3603545	2	True				
ANR	3603576	Identifier	i		3603545	0					
ANR	3603577	IncDec	++		3603545	1					
ANR	3603578	CompoundStatement		6:41:88:88	3603545	3					
ANR	3603579	IfStatement	if ( bin -> shdr [ i ] . sh_type == SHT_SYMTAB )		3603545	0					
ANR	3603580	Condition	bin -> shdr [ i ] . sh_type == SHT_SYMTAB	2028:6:58444:58477	3603545	0	True				
ANR	3603581	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_SYMTAB		3603545	0		==			
ANR	3603582	MemberAccess	bin -> shdr [ i ] . sh_type		3603545	0					
ANR	3603583	ArrayIndexing	bin -> shdr [ i ]		3603545	0					
ANR	3603584	PtrMemberAccess	bin -> shdr		3603545	0					
ANR	3603585	Identifier	bin		3603545	0					
ANR	3603586	Identifier	shdr		3603545	1					
ANR	3603587	Identifier	i		3603545	1					
ANR	3603588	Identifier	sh_type		3603545	1					
ANR	3603589	Identifier	SHT_SYMTAB		3603545	1					
ANR	3603590	CompoundStatement		7:42:132:132	3603545	1					
ANR	3603591	ReturnStatement	return false ;	2029:3:58485:58497	3603545	0	True				
ANR	3603592	Identifier	false		3603545	0					
ANR	3603593	ReturnStatement	return true ;	2032:1:58507:58518	3603545	3	True				
ANR	3603594	Identifier	true		3603545	0					
ANR	3603595	ReturnType	bool Elf_		3603545	1					
ANR	3603596	Identifier	( r_bin_elf_get_stripped )		3603545	2					
ANR	3603597	Identifier	r_bin_elf_get_stripped		3603545	3					
ANR	3603598	ParameterList	ELFOBJ * bin		3603545	4					
ANR	3603599	Parameter	ELFOBJ * bin	2022:34:58334:58344	3603545	0	True				
ANR	3603600	ParameterType	ELFOBJ *		3603545	0					
ANR	3603601	Identifier	bin		3603545	1					
ANR	3603602	CFGEntryNode	ENTRY		3603545		True				
ANR	3603603	CFGExitNode	EXIT		3603545		True				
ANR	3603604	Symbol	bin -> ehdr . e_shnum		3603545						
ANR	3603605	Symbol	SHT_SYMTAB		3603545						
ANR	3603606	Symbol	bin		3603545						
ANR	3603607	Symbol	false		3603545						
ANR	3603608	Symbol	i		3603545						
ANR	3603609	Symbol	* bin -> shdr		3603545						
ANR	3603610	Symbol	* bin		3603545						
ANR	3603611	Symbol	bin -> shdr		3603545						
ANR	3603612	Symbol	* i		3603545						
ANR	3603613	Symbol	bin -> ehdr		3603545						
ANR	3603614	Symbol	true		3603545						
ANR	3603615	Symbol	bin -> shdr [ i ] . sh_type		3603545						
ANR	3603616	Symbol	* * bin		3603545						
ANR	3603617	Function	r_bin_elf_intrp	2035:6:58529:59257							
ANR	3603618	FunctionDef	r_bin_elf_intrp (ELFOBJ * bin)		3603617	0					
ANR	3603619	CompoundStatement		2035:41:58564:59257	3603617	0					
ANR	3603620	IdentifierDeclStatement	int i ;	2036:1:58567:58572	3603617	0	True				
ANR	3603621	IdentifierDecl	i		3603617	0					
ANR	3603622	IdentifierDeclType	int		3603617	0					
ANR	3603623	Identifier	i		3603617	1					
ANR	3603624	IfStatement	if ( ! bin || ! bin -> phdr )		3603617	1					
ANR	3603625	Condition	! bin || ! bin -> phdr	2037:5:58579:58596	3603617	0	True				
ANR	3603626	OrExpression	! bin || ! bin -> phdr		3603617	0		||			
ANR	3603627	UnaryOperationExpression	! bin		3603617	0					
ANR	3603628	UnaryOperator	!		3603617	0					
ANR	3603629	Identifier	bin		3603617	1					
ANR	3603630	UnaryOperationExpression	! bin -> phdr		3603617	1					
ANR	3603631	UnaryOperator	!		3603617	0					
ANR	3603632	PtrMemberAccess	bin -> phdr		3603617	1					
ANR	3603633	Identifier	bin		3603617	0					
ANR	3603634	Identifier	phdr		3603617	1					
ANR	3603635	CompoundStatement		3:25:34:34	3603617	1					
ANR	3603636	ReturnStatement	return NULL ;	2038:2:58603:58614	3603617	0	True				
ANR	3603637	Identifier	NULL		3603617	0					
ANR	3603638	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3603617	2					
ANR	3603639	ForInit	i = 0 ;	2040:6:58625:58630	3603617	0	True				
ANR	3603640	AssignmentExpression	i = 0		3603617	0		=			
ANR	3603641	Identifier	i		3603617	0					
ANR	3603642	PrimaryExpression	0		3603617	1					
ANR	3603643	Condition	i < bin -> ehdr . e_phnum	2040:13:58632:58652	3603617	1	True				
ANR	3603644	RelationalExpression	i < bin -> ehdr . e_phnum		3603617	0		<			
ANR	3603645	Identifier	i		3603617	0					
ANR	3603646	MemberAccess	bin -> ehdr . e_phnum		3603617	1					
ANR	3603647	PtrMemberAccess	bin -> ehdr		3603617	0					
ANR	3603648	Identifier	bin		3603617	0					
ANR	3603649	Identifier	ehdr		3603617	1					
ANR	3603650	Identifier	e_phnum		3603617	1					
ANR	3603651	PostIncDecOperationExpression	i ++	2040:36:58655:58657	3603617	2	True				
ANR	3603652	Identifier	i		3603617	0					
ANR	3603653	IncDec	++		3603617	1					
ANR	3603654	CompoundStatement		6:41:95:95	3603617	3					
ANR	3603655	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_INTERP )		3603617	0					
ANR	3603656	Condition	bin -> phdr [ i ] . p_type == PT_INTERP	2041:6:58668:58699	3603617	0	True				
ANR	3603657	EqualityExpression	bin -> phdr [ i ] . p_type == PT_INTERP		3603617	0		==			
ANR	3603658	MemberAccess	bin -> phdr [ i ] . p_type		3603617	0					
ANR	3603659	ArrayIndexing	bin -> phdr [ i ]		3603617	0					
ANR	3603660	PtrMemberAccess	bin -> phdr		3603617	0					
ANR	3603661	Identifier	bin		3603617	0					
ANR	3603662	Identifier	phdr		3603617	1					
ANR	3603663	Identifier	i		3603617	1					
ANR	3603664	Identifier	p_type		3603617	1					
ANR	3603665	Identifier	PT_INTERP		3603617	1					
ANR	3603666	CompoundStatement		15:3:400:427	3603617	1					
ANR	3603667	IdentifierDeclStatement	ut64 addr = bin -> phdr [ i ] . p_offset ;	2042:3:58707:58740	3603617	0	True				
ANR	3603668	IdentifierDecl	addr = bin -> phdr [ i ] . p_offset		3603617	0					
ANR	3603669	IdentifierDeclType	ut64		3603617	0					
ANR	3603670	Identifier	addr		3603617	1					
ANR	3603671	AssignmentExpression	addr = bin -> phdr [ i ] . p_offset		3603617	2		=			
ANR	3603672	Identifier	addr		3603617	0					
ANR	3603673	MemberAccess	bin -> phdr [ i ] . p_offset		3603617	1					
ANR	3603674	ArrayIndexing	bin -> phdr [ i ]		3603617	0					
ANR	3603675	PtrMemberAccess	bin -> phdr		3603617	0					
ANR	3603676	Identifier	bin		3603617	0					
ANR	3603677	Identifier	phdr		3603617	1					
ANR	3603678	Identifier	i		3603617	1					
ANR	3603679	Identifier	p_offset		3603617	1					
ANR	3603680	IdentifierDeclStatement	int sz = bin -> phdr [ i ] . p_filesz ;	2043:3:58745:58775	3603617	1	True				
ANR	3603681	IdentifierDecl	sz = bin -> phdr [ i ] . p_filesz		3603617	0					
ANR	3603682	IdentifierDeclType	int		3603617	0					
ANR	3603683	Identifier	sz		3603617	1					
ANR	3603684	AssignmentExpression	sz = bin -> phdr [ i ] . p_filesz		3603617	2		=			
ANR	3603685	Identifier	sz		3603617	0					
ANR	3603686	MemberAccess	bin -> phdr [ i ] . p_filesz		3603617	1					
ANR	3603687	ArrayIndexing	bin -> phdr [ i ]		3603617	0					
ANR	3603688	PtrMemberAccess	bin -> phdr		3603617	0					
ANR	3603689	Identifier	bin		3603617	0					
ANR	3603690	Identifier	phdr		3603617	1					
ANR	3603691	Identifier	i		3603617	1					
ANR	3603692	Identifier	p_filesz		3603617	1					
ANR	3603693	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.intrp_addr"" , addr , 0 )"	2044:3:58780:58835	3603617	2	True				
ANR	3603694	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.intrp_addr"" , addr , 0 )"		3603617	0					
ANR	3603695	Callee	sdb_num_set		3603617	0					
ANR	3603696	Identifier	sdb_num_set		3603617	0					
ANR	3603697	ArgumentList	bin -> kv		3603617	1					
ANR	3603698	Argument	bin -> kv		3603617	0					
ANR	3603699	PtrMemberAccess	bin -> kv		3603617	0					
ANR	3603700	Identifier	bin		3603617	0					
ANR	3603701	Identifier	kv		3603617	1					
ANR	3603702	Argument	"""elf_header.intrp_addr"""		3603617	1					
ANR	3603703	PrimaryExpression	"""elf_header.intrp_addr"""		3603617	0					
ANR	3603704	Argument	addr		3603617	2					
ANR	3603705	Identifier	addr		3603617	0					
ANR	3603706	Argument	0		3603617	3					
ANR	3603707	PrimaryExpression	0		3603617	0					
ANR	3603708	ExpressionStatement	"sdb_num_set ( bin -> kv , ""elf_header.intrp_size"" , sz , 0 )"	2045:3:58840:58893	3603617	3	True				
ANR	3603709	CallExpression	"sdb_num_set ( bin -> kv , ""elf_header.intrp_size"" , sz , 0 )"		3603617	0					
ANR	3603710	Callee	sdb_num_set		3603617	0					
ANR	3603711	Identifier	sdb_num_set		3603617	0					
ANR	3603712	ArgumentList	bin -> kv		3603617	1					
ANR	3603713	Argument	bin -> kv		3603617	0					
ANR	3603714	PtrMemberAccess	bin -> kv		3603617	0					
ANR	3603715	Identifier	bin		3603617	0					
ANR	3603716	Identifier	kv		3603617	1					
ANR	3603717	Argument	"""elf_header.intrp_size"""		3603617	1					
ANR	3603718	PrimaryExpression	"""elf_header.intrp_size"""		3603617	0					
ANR	3603719	Argument	sz		3603617	2					
ANR	3603720	Identifier	sz		3603617	0					
ANR	3603721	Argument	0		3603617	3					
ANR	3603722	PrimaryExpression	0		3603617	0					
ANR	3603723	IfStatement	if ( sz < 1 || sz > r_buf_size ( bin -> b ) )		3603617	4					
ANR	3603724	Condition	sz < 1 || sz > r_buf_size ( bin -> b )	2046:7:58902:58935	3603617	0	True				
ANR	3603725	OrExpression	sz < 1 || sz > r_buf_size ( bin -> b )		3603617	0		||			
ANR	3603726	RelationalExpression	sz < 1		3603617	0		<			
ANR	3603727	Identifier	sz		3603617	0					
ANR	3603728	PrimaryExpression	1		3603617	1					
ANR	3603729	RelationalExpression	sz > r_buf_size ( bin -> b )		3603617	1		>			
ANR	3603730	Identifier	sz		3603617	0					
ANR	3603731	CallExpression	r_buf_size ( bin -> b )		3603617	1					
ANR	3603732	Callee	r_buf_size		3603617	0					
ANR	3603733	Identifier	r_buf_size		3603617	0					
ANR	3603734	ArgumentList	bin -> b		3603617	1					
ANR	3603735	Argument	bin -> b		3603617	0					
ANR	3603736	PtrMemberAccess	bin -> b		3603617	0					
ANR	3603737	Identifier	bin		3603617	0					
ANR	3603738	Identifier	b		3603617	1					
ANR	3603739	CompoundStatement		12:43:373:373	3603617	1					
ANR	3603740	ReturnStatement	return NULL ;	2047:4:58944:58955	3603617	0	True				
ANR	3603741	Identifier	NULL		3603617	0					
ANR	3603742	IdentifierDeclStatement	char * str = malloc ( sz + 1 ) ;	2049:3:58965:58992	3603617	5	True				
ANR	3603743	IdentifierDecl	* str = malloc ( sz + 1 )		3603617	0					
ANR	3603744	IdentifierDeclType	char *		3603617	0					
ANR	3603745	Identifier	str		3603617	1					
ANR	3603746	AssignmentExpression	* str = malloc ( sz + 1 )		3603617	2		=			
ANR	3603747	Identifier	str		3603617	0					
ANR	3603748	CallExpression	malloc ( sz + 1 )		3603617	1					
ANR	3603749	Callee	malloc		3603617	0					
ANR	3603750	Identifier	malloc		3603617	0					
ANR	3603751	ArgumentList	sz + 1		3603617	1					
ANR	3603752	Argument	sz + 1		3603617	0					
ANR	3603753	AdditiveExpression	sz + 1		3603617	0		+			
ANR	3603754	Identifier	sz		3603617	0					
ANR	3603755	PrimaryExpression	1		3603617	1					
ANR	3603756	IfStatement	if ( ! str )		3603617	6					
ANR	3603757	Condition	! str	2050:7:59001:59004	3603617	0	True				
ANR	3603758	UnaryOperationExpression	! str		3603617	0					
ANR	3603759	UnaryOperator	!		3603617	0					
ANR	3603760	Identifier	str		3603617	1					
ANR	3603761	CompoundStatement		16:13:442:442	3603617	1					
ANR	3603762	ReturnStatement	return NULL ;	2051:4:59013:59024	3603617	0	True				
ANR	3603763	Identifier	NULL		3603617	0					
ANR	3603764	IfStatement	"if ( r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz ) < 1 )"		3603617	7					
ANR	3603765	Condition	"r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz ) < 1"	2053:7:59038:59084	3603617	0	True				
ANR	3603766	RelationalExpression	"r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz ) < 1"		3603617	0		<			
ANR	3603767	CallExpression	"r_buf_read_at ( bin -> b , addr , ( ut8 * ) str , sz )"		3603617	0					
ANR	3603768	Callee	r_buf_read_at		3603617	0					
ANR	3603769	Identifier	r_buf_read_at		3603617	0					
ANR	3603770	ArgumentList	bin -> b		3603617	1					
ANR	3603771	Argument	bin -> b		3603617	0					
ANR	3603772	PtrMemberAccess	bin -> b		3603617	0					
ANR	3603773	Identifier	bin		3603617	0					
ANR	3603774	Identifier	b		3603617	1					
ANR	3603775	Argument	addr		3603617	1					
ANR	3603776	Identifier	addr		3603617	0					
ANR	3603777	Argument	( ut8 * ) str		3603617	2					
ANR	3603778	CastExpression	( ut8 * ) str		3603617	0					
ANR	3603779	CastTarget	ut8 *		3603617	0					
ANR	3603780	Identifier	str		3603617	1					
ANR	3603781	Argument	sz		3603617	3					
ANR	3603782	Identifier	sz		3603617	0					
ANR	3603783	PrimaryExpression	1		3603617	1					
ANR	3603784	CompoundStatement		19:56:522:522	3603617	1					
ANR	3603785	ExpressionStatement	"bprintf ( ""read (main)\\n"" )"	2054:4:59093:59118	3603617	0	True				
ANR	3603786	CallExpression	"bprintf ( ""read (main)\\n"" )"		3603617	0					
ANR	3603787	Callee	bprintf		3603617	0					
ANR	3603788	Identifier	bprintf		3603617	0					
ANR	3603789	ArgumentList	"""read (main)\\n"""		3603617	1					
ANR	3603790	Argument	"""read (main)\\n"""		3603617	0					
ANR	3603791	PrimaryExpression	"""read (main)\\n"""		3603617	0					
ANR	3603792	ExpressionStatement	free ( str )	2055:4:59124:59134	3603617	1	True				
ANR	3603793	CallExpression	free ( str )		3603617	0					
ANR	3603794	Callee	free		3603617	0					
ANR	3603795	Identifier	free		3603617	0					
ANR	3603796	ArgumentList	str		3603617	1					
ANR	3603797	Argument	str		3603617	0					
ANR	3603798	Identifier	str		3603617	0					
ANR	3603799	ReturnStatement	return 0 ;	2056:4:59140:59148	3603617	2	True				
ANR	3603800	PrimaryExpression	0		3603617	0					
ANR	3603801	ExpressionStatement	str [ sz ] = 0	2058:3:59158:59169	3603617	8	True				
ANR	3603802	AssignmentExpression	str [ sz ] = 0		3603617	0		=			
ANR	3603803	ArrayIndexing	str [ sz ]		3603617	0					
ANR	3603804	Identifier	str		3603617	0					
ANR	3603805	Identifier	sz		3603617	1					
ANR	3603806	PrimaryExpression	0		3603617	1					
ANR	3603807	ExpressionStatement	"sdb_set ( bin -> kv , ""elf_header.intrp"" , str , 0 )"	2059:3:59174:59219	3603617	9	True				
ANR	3603808	CallExpression	"sdb_set ( bin -> kv , ""elf_header.intrp"" , str , 0 )"		3603617	0					
ANR	3603809	Callee	sdb_set		3603617	0					
ANR	3603810	Identifier	sdb_set		3603617	0					
ANR	3603811	ArgumentList	bin -> kv		3603617	1					
ANR	3603812	Argument	bin -> kv		3603617	0					
ANR	3603813	PtrMemberAccess	bin -> kv		3603617	0					
ANR	3603814	Identifier	bin		3603617	0					
ANR	3603815	Identifier	kv		3603617	1					
ANR	3603816	Argument	"""elf_header.intrp"""		3603617	1					
ANR	3603817	PrimaryExpression	"""elf_header.intrp"""		3603617	0					
ANR	3603818	Argument	str		3603617	2					
ANR	3603819	Identifier	str		3603617	0					
ANR	3603820	Argument	0		3603617	3					
ANR	3603821	PrimaryExpression	0		3603617	0					
ANR	3603822	ReturnStatement	return str ;	2060:3:59224:59234	3603617	10	True				
ANR	3603823	Identifier	str		3603617	0					
ANR	3603824	ReturnStatement	return NULL ;	2063:1:59244:59255	3603617	3	True				
ANR	3603825	Identifier	NULL		3603617	0					
ANR	3603826	ReturnType	Elf_		3603617	1					
ANR	3603827	Identifier	( r_bin_elf_intrp )		3603617	2					
ANR	3603828	Identifier	r_bin_elf_intrp		3603617	3					
ANR	3603829	ParameterList	ELFOBJ * bin		3603617	4					
ANR	3603830	Parameter	ELFOBJ * bin	2035:28:58551:58561	3603617	0	True				
ANR	3603831	ParameterType	ELFOBJ *		3603617	0					
ANR	3603832	Identifier	bin		3603617	1					
ANR	3603833	CFGEntryNode	ENTRY		3603617		True				
ANR	3603834	CFGExitNode	EXIT		3603617		True				
ANR	3603835	Symbol	malloc		3603617						
ANR	3603836	Symbol	bin -> b		3603617						
ANR	3603837	Symbol	NULL		3603617						
ANR	3603838	Symbol	bin		3603617						
ANR	3603839	Symbol	sz		3603617						
ANR	3603840	Symbol	i		3603617						
ANR	3603841	Symbol	bin -> phdr		3603617						
ANR	3603842	Symbol	bin -> ehdr . e_phnum		3603617						
ANR	3603843	Symbol	bin -> kv		3603617						
ANR	3603844	Symbol	* bin		3603617						
ANR	3603845	Symbol	* sz		3603617						
ANR	3603846	Symbol	* bin -> phdr		3603617						
ANR	3603847	Symbol	bin -> phdr [ i ] . p_filesz		3603617						
ANR	3603848	Symbol	str		3603617						
ANR	3603849	Symbol	bin -> phdr [ i ] . p_offset		3603617						
ANR	3603850	Symbol	* i		3603617						
ANR	3603851	Symbol	PT_INTERP		3603617						
ANR	3603852	Symbol	bin -> ehdr		3603617						
ANR	3603853	Symbol	r_buf_read_at		3603617						
ANR	3603854	Symbol	bin -> phdr [ i ] . p_type		3603617						
ANR	3603855	Symbol	* * bin		3603617						
ANR	3603856	Symbol	* str		3603617						
ANR	3603857	Symbol	addr		3603617						
ANR	3603858	Symbol	r_buf_size		3603617						
ANR	3603859	Function	r_bin_elf_is_static	2066:0:59260:59515							
ANR	3603860	FunctionDef	r_bin_elf_is_static (ELFOBJ * bin)		3603859	0					
ANR	3603861	CompoundStatement		2066:44:59304:59515	3603859	0					
ANR	3603862	IdentifierDeclStatement	int i ;	2067:1:59307:59312	3603859	0	True				
ANR	3603863	IdentifierDecl	i		3603859	0					
ANR	3603864	IdentifierDeclType	int		3603859	0					
ANR	3603865	Identifier	i		3603859	1					
ANR	3603866	IfStatement	if ( ! bin -> phdr )		3603859	1					
ANR	3603867	Condition	! bin -> phdr	2068:5:59319:59328	3603859	0	True				
ANR	3603868	UnaryOperationExpression	! bin -> phdr		3603859	0					
ANR	3603869	UnaryOperator	!		3603859	0					
ANR	3603870	PtrMemberAccess	bin -> phdr		3603859	1					
ANR	3603871	Identifier	bin		3603859	0					
ANR	3603872	Identifier	phdr		3603859	1					
ANR	3603873	CompoundStatement		3:17:26:26	3603859	1					
ANR	3603874	ReturnStatement	return false ;	2069:2:59335:59347	3603859	0	True				
ANR	3603875	Identifier	false		3603859	0					
ANR	3603876	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3603859	2					
ANR	3603877	ForInit	i = 0 ;	2071:6:59358:59363	3603859	0	True				
ANR	3603878	AssignmentExpression	i = 0		3603859	0		=			
ANR	3603879	Identifier	i		3603859	0					
ANR	3603880	PrimaryExpression	0		3603859	1					
ANR	3603881	Condition	i < bin -> ehdr . e_phnum	2071:13:59365:59385	3603859	1	True				
ANR	3603882	RelationalExpression	i < bin -> ehdr . e_phnum		3603859	0		<			
ANR	3603883	Identifier	i		3603859	0					
ANR	3603884	MemberAccess	bin -> ehdr . e_phnum		3603859	1					
ANR	3603885	PtrMemberAccess	bin -> ehdr		3603859	0					
ANR	3603886	Identifier	bin		3603859	0					
ANR	3603887	Identifier	ehdr		3603859	1					
ANR	3603888	Identifier	e_phnum		3603859	1					
ANR	3603889	PostIncDecOperationExpression	i ++	2071:36:59388:59390	3603859	2	True				
ANR	3603890	Identifier	i		3603859	0					
ANR	3603891	IncDec	++		3603859	1					
ANR	3603892	CompoundStatement		6:41:88:88	3603859	3					
ANR	3603893	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_INTERP || bin -> phdr [ i ] . p_type == PT_DYNAMIC )		3603859	0					
ANR	3603894	Condition	bin -> phdr [ i ] . p_type == PT_INTERP || bin -> phdr [ i ] . p_type == PT_DYNAMIC	2072:6:59401:59472	3603859	0	True				
ANR	3603895	OrExpression	bin -> phdr [ i ] . p_type == PT_INTERP || bin -> phdr [ i ] . p_type == PT_DYNAMIC		3603859	0		||			
ANR	3603896	EqualityExpression	bin -> phdr [ i ] . p_type == PT_INTERP		3603859	0		==			
ANR	3603897	MemberAccess	bin -> phdr [ i ] . p_type		3603859	0					
ANR	3603898	ArrayIndexing	bin -> phdr [ i ]		3603859	0					
ANR	3603899	PtrMemberAccess	bin -> phdr		3603859	0					
ANR	3603900	Identifier	bin		3603859	0					
ANR	3603901	Identifier	phdr		3603859	1					
ANR	3603902	Identifier	i		3603859	1					
ANR	3603903	Identifier	p_type		3603859	1					
ANR	3603904	Identifier	PT_INTERP		3603859	1					
ANR	3603905	EqualityExpression	bin -> phdr [ i ] . p_type == PT_DYNAMIC		3603859	1		==			
ANR	3603906	MemberAccess	bin -> phdr [ i ] . p_type		3603859	0					
ANR	3603907	ArrayIndexing	bin -> phdr [ i ]		3603859	0					
ANR	3603908	PtrMemberAccess	bin -> phdr		3603859	0					
ANR	3603909	Identifier	bin		3603859	0					
ANR	3603910	Identifier	phdr		3603859	1					
ANR	3603911	Identifier	i		3603859	1					
ANR	3603912	Identifier	p_type		3603859	1					
ANR	3603913	Identifier	PT_DYNAMIC		3603859	1					
ANR	3603914	CompoundStatement		8:38:170:170	3603859	1					
ANR	3603915	ReturnStatement	return false ;	2074:3:59480:59492	3603859	0	True				
ANR	3603916	Identifier	false		3603859	0					
ANR	3603917	ReturnStatement	return true ;	2077:1:59502:59513	3603859	3	True				
ANR	3603918	Identifier	true		3603859	0					
ANR	3603919	ReturnType	bool Elf_		3603859	1					
ANR	3603920	Identifier	( r_bin_elf_is_static )		3603859	2					
ANR	3603921	Identifier	r_bin_elf_is_static		3603859	3					
ANR	3603922	ParameterList	ELFOBJ * bin		3603859	4					
ANR	3603923	Parameter	ELFOBJ * bin	2066:31:59291:59301	3603859	0	True				
ANR	3603924	ParameterType	ELFOBJ *		3603859	0					
ANR	3603925	Identifier	bin		3603859	1					
ANR	3603926	CFGEntryNode	ENTRY		3603859		True				
ANR	3603927	CFGExitNode	EXIT		3603859		True				
ANR	3603928	Symbol	bin		3603859						
ANR	3603929	Symbol	false		3603859						
ANR	3603930	Symbol	i		3603859						
ANR	3603931	Symbol	bin -> phdr		3603859						
ANR	3603932	Symbol	bin -> ehdr . e_phnum		3603859						
ANR	3603933	Symbol	PT_DYNAMIC		3603859						
ANR	3603934	Symbol	* bin		3603859						
ANR	3603935	Symbol	* bin -> phdr		3603859						
ANR	3603936	Symbol	* i		3603859						
ANR	3603937	Symbol	PT_INTERP		3603859						
ANR	3603938	Symbol	bin -> ehdr		3603859						
ANR	3603939	Symbol	true		3603859						
ANR	3603940	Symbol	bin -> phdr [ i ] . p_type		3603859						
ANR	3603941	Symbol	* * bin		3603859						
ANR	3603942	Function	r_bin_elf_get_data_encoding	2080:6:59524:59866							
ANR	3603943	FunctionDef	r_bin_elf_get_data_encoding (ELFOBJ * bin)		3603942	0					
ANR	3603944	CompoundStatement		2080:53:59571:59866	3603942	0					
ANR	3603945	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_DATA ] )		3603942	0					
ANR	3603946	Condition	bin -> ehdr . e_ident [ EI_DATA ]	2081:9:59582:59607	3603942	0	True				
ANR	3603947	ArrayIndexing	bin -> ehdr . e_ident [ EI_DATA ]		3603942	0					
ANR	3603948	MemberAccess	bin -> ehdr . e_ident		3603942	0					
ANR	3603949	PtrMemberAccess	bin -> ehdr		3603942	0					
ANR	3603950	Identifier	bin		3603942	0					
ANR	3603951	Identifier	ehdr		3603942	1					
ANR	3603952	Identifier	e_ident		3603942	1					
ANR	3603953	Identifier	EI_DATA		3603942	1					
ANR	3603954	CompoundStatement		2:37:38:38	3603942	1					
ANR	3603955	Label	case ELFDATANONE :	2082:1:59613:59629	3603942	0	True				
ANR	3603956	Identifier	ELFDATANONE		3603942	0					
ANR	3603957	ReturnStatement	"return strdup ( ""none"" ) ;"	2082:19:59631:59653	3603942	1	True				
ANR	3603958	CallExpression	"strdup ( ""none"" )"		3603942	0					
ANR	3603959	Callee	strdup		3603942	0					
ANR	3603960	Identifier	strdup		3603942	0					
ANR	3603961	ArgumentList	"""none"""		3603942	1					
ANR	3603962	Argument	"""none"""		3603942	0					
ANR	3603963	PrimaryExpression	"""none"""		3603942	0					
ANR	3603964	Label	case ELFDATA2LSB :	2083:1:59656:59672	3603942	2	True				
ANR	3603965	Identifier	ELFDATA2LSB		3603942	0					
ANR	3603966	ReturnStatement	"return strdup ( ""2's complement, little endian"" ) ;"	2083:19:59674:59721	3603942	3	True				
ANR	3603967	CallExpression	"strdup ( ""2's complement, little endian"" )"		3603942	0					
ANR	3603968	Callee	strdup		3603942	0					
ANR	3603969	Identifier	strdup		3603942	0					
ANR	3603970	ArgumentList	"""2's complement, little endian"""		3603942	1					
ANR	3603971	Argument	"""2's complement, little endian"""		3603942	0					
ANR	3603972	PrimaryExpression	"""2's complement, little endian"""		3603942	0					
ANR	3603973	Label	case ELFDATA2MSB :	2084:1:59724:59740	3603942	4	True				
ANR	3603974	Identifier	ELFDATA2MSB		3603942	0					
ANR	3603975	ReturnStatement	"return strdup ( ""2's complement, big endian"" ) ;"	2084:19:59742:59786	3603942	5	True				
ANR	3603976	CallExpression	"strdup ( ""2's complement, big endian"" )"		3603942	0					
ANR	3603977	Callee	strdup		3603942	0					
ANR	3603978	Identifier	strdup		3603942	0					
ANR	3603979	ArgumentList	"""2's complement, big endian"""		3603942	1					
ANR	3603980	Argument	"""2's complement, big endian"""		3603942	0					
ANR	3603981	PrimaryExpression	"""2's complement, big endian"""		3603942	0					
ANR	3603982	Label	default :	2085:1:59789:59796	3603942	6	True				
ANR	3603983	Identifier	default		3603942	0					
ANR	3603984	ReturnStatement	"return r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_DATA ] ) ;"	2085:10:59798:59861	3603942	7	True				
ANR	3603985	CallExpression	"r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_DATA ] )"		3603942	0					
ANR	3603986	Callee	r_str_newf		3603942	0					
ANR	3603987	Identifier	r_str_newf		3603942	0					
ANR	3603988	ArgumentList	"""<unknown: %x>"""		3603942	1					
ANR	3603989	Argument	"""<unknown: %x>"""		3603942	0					
ANR	3603990	PrimaryExpression	"""<unknown: %x>"""		3603942	0					
ANR	3603991	Argument	bin -> ehdr . e_ident [ EI_DATA ]		3603942	1					
ANR	3603992	ArrayIndexing	bin -> ehdr . e_ident [ EI_DATA ]		3603942	0					
ANR	3603993	MemberAccess	bin -> ehdr . e_ident		3603942	0					
ANR	3603994	PtrMemberAccess	bin -> ehdr		3603942	0					
ANR	3603995	Identifier	bin		3603942	0					
ANR	3603996	Identifier	ehdr		3603942	1					
ANR	3603997	Identifier	e_ident		3603942	1					
ANR	3603998	Identifier	EI_DATA		3603942	1					
ANR	3603999	ReturnType	Elf_		3603942	1					
ANR	3604000	Identifier	( r_bin_elf_get_data_encoding )		3603942	2					
ANR	3604001	Identifier	r_bin_elf_get_data_encoding		3603942	3					
ANR	3604002	ParameterList	ELFOBJ * bin		3603942	4					
ANR	3604003	Parameter	ELFOBJ * bin	2080:40:59558:59568	3603942	0	True				
ANR	3604004	ParameterType	ELFOBJ *		3603942	0					
ANR	3604005	Identifier	bin		3603942	1					
ANR	3604006	CFGEntryNode	ENTRY		3603942		True				
ANR	3604007	CFGExitNode	EXIT		3603942		True				
ANR	3604008	Symbol	* EI_DATA		3603942						
ANR	3604009	Symbol	* bin -> ehdr		3603942						
ANR	3604010	Symbol	bin		3603942						
ANR	3604011	Symbol	bin -> ehdr . e_ident		3603942						
ANR	3604012	Symbol	bin -> ehdr		3603942						
ANR	3604013	Symbol	* * bin		3603942						
ANR	3604014	Symbol	strdup		3603942						
ANR	3604015	Symbol	r_str_newf		3603942						
ANR	3604016	Symbol	* bin -> ehdr . e_ident		3603942						
ANR	3604017	Symbol	* bin		3603942						
ANR	3604018	Symbol	EI_DATA		3603942						
ANR	3604019	Function	r_bin_elf_has_va	2089:0:59869:59925							
ANR	3604020	FunctionDef	r_bin_elf_has_va (ELFOBJ * bin)		3604019	0					
ANR	3604021	CompoundStatement		2089:40:59909:59925	3604019	0					
ANR	3604022	ReturnStatement	return true ;	2090:1:59912:59923	3604019	0	True				
ANR	3604023	Identifier	true		3604019	0					
ANR	3604024	ReturnType	int Elf_		3604019	1					
ANR	3604025	Identifier	( r_bin_elf_has_va )		3604019	2					
ANR	3604026	Identifier	r_bin_elf_has_va		3604019	3					
ANR	3604027	ParameterList	ELFOBJ * bin		3604019	4					
ANR	3604028	Parameter	ELFOBJ * bin	2089:27:59896:59906	3604019	0	True				
ANR	3604029	ParameterType	ELFOBJ *		3604019	0					
ANR	3604030	Identifier	bin		3604019	1					
ANR	3604031	CFGEntryNode	ENTRY		3604019		True				
ANR	3604032	CFGExitNode	EXIT		3604019		True				
ANR	3604033	Symbol	bin		3604019						
ANR	3604034	Symbol	true		3604019						
ANR	3604035	Function	r_bin_elf_get_arch	2093:6:59934:61273							
ANR	3604036	FunctionDef	r_bin_elf_get_arch (ELFOBJ * bin)		3604035	0					
ANR	3604037	CompoundStatement		2093:44:59972:61273	3604035	0					
ANR	3604038	SwitchStatement	switch ( bin -> ehdr . e_machine )		3604035	0					
ANR	3604039	Condition	bin -> ehdr . e_machine	2094:9:59983:60001	3604035	0	True				
ANR	3604040	MemberAccess	bin -> ehdr . e_machine		3604035	0					
ANR	3604041	PtrMemberAccess	bin -> ehdr		3604035	0					
ANR	3604042	Identifier	bin		3604035	0					
ANR	3604043	Identifier	ehdr		3604035	1					
ANR	3604044	Identifier	e_machine		3604035	1					
ANR	3604045	CompoundStatement		2:30:31:31	3604035	1					
ANR	3604046	Label	case EM_ARC :	2095:1:60007:60018	3604035	0	True				
ANR	3604047	Identifier	EM_ARC		3604035	0					
ANR	3604048	Label	case EM_ARC_A5 :	2096:1:60021:60035	3604035	1	True				
ANR	3604049	Identifier	EM_ARC_A5		3604035	0					
ANR	3604050	ReturnStatement	"return strdup ( ""arc"" ) ;"	2097:2:60039:60060	3604035	2	True				
ANR	3604051	CallExpression	"strdup ( ""arc"" )"		3604035	0					
ANR	3604052	Callee	strdup		3604035	0					
ANR	3604053	Identifier	strdup		3604035	0					
ANR	3604054	ArgumentList	"""arc"""		3604035	1					
ANR	3604055	Argument	"""arc"""		3604035	0					
ANR	3604056	PrimaryExpression	"""arc"""		3604035	0					
ANR	3604057	Label	case EM_AVR :	2098:1:60063:60074	3604035	3	True				
ANR	3604058	Identifier	EM_AVR		3604035	0					
ANR	3604059	ReturnStatement	"return strdup ( ""avr"" ) ;"	2098:14:60076:60097	3604035	4	True				
ANR	3604060	CallExpression	"strdup ( ""avr"" )"		3604035	0					
ANR	3604061	Callee	strdup		3604035	0					
ANR	3604062	Identifier	strdup		3604035	0					
ANR	3604063	ArgumentList	"""avr"""		3604035	1					
ANR	3604064	Argument	"""avr"""		3604035	0					
ANR	3604065	PrimaryExpression	"""avr"""		3604035	0					
ANR	3604066	Label	case EM_CRIS :	2099:1:60100:60112	3604035	5	True				
ANR	3604067	Identifier	EM_CRIS		3604035	0					
ANR	3604068	ReturnStatement	"return strdup ( ""cris"" ) ;"	2099:15:60114:60136	3604035	6	True				
ANR	3604069	CallExpression	"strdup ( ""cris"" )"		3604035	0					
ANR	3604070	Callee	strdup		3604035	0					
ANR	3604071	Identifier	strdup		3604035	0					
ANR	3604072	ArgumentList	"""cris"""		3604035	1					
ANR	3604073	Argument	"""cris"""		3604035	0					
ANR	3604074	PrimaryExpression	"""cris"""		3604035	0					
ANR	3604075	Label	case EM_68K :	2100:1:60139:60150	3604035	7	True				
ANR	3604076	Identifier	EM_68K		3604035	0					
ANR	3604077	ReturnStatement	"return strdup ( ""m68k"" ) ;"	2100:14:60152:60174	3604035	8	True				
ANR	3604078	CallExpression	"strdup ( ""m68k"" )"		3604035	0					
ANR	3604079	Callee	strdup		3604035	0					
ANR	3604080	Identifier	strdup		3604035	0					
ANR	3604081	ArgumentList	"""m68k"""		3604035	1					
ANR	3604082	Argument	"""m68k"""		3604035	0					
ANR	3604083	PrimaryExpression	"""m68k"""		3604035	0					
ANR	3604084	Label	case EM_MIPS :	2101:1:60177:60189	3604035	9	True				
ANR	3604085	Identifier	EM_MIPS		3604035	0					
ANR	3604086	Label	case EM_MIPS_RS3_LE :	2102:1:60192:60211	3604035	10	True				
ANR	3604087	Identifier	EM_MIPS_RS3_LE		3604035	0					
ANR	3604088	Label	case EM_MIPS_X :	2103:1:60214:60228	3604035	11	True				
ANR	3604089	Identifier	EM_MIPS_X		3604035	0					
ANR	3604090	ReturnStatement	"return strdup ( ""mips"" ) ;"	2104:2:60232:60254	3604035	12	True				
ANR	3604091	CallExpression	"strdup ( ""mips"" )"		3604035	0					
ANR	3604092	Callee	strdup		3604035	0					
ANR	3604093	Identifier	strdup		3604035	0					
ANR	3604094	ArgumentList	"""mips"""		3604035	1					
ANR	3604095	Argument	"""mips"""		3604035	0					
ANR	3604096	PrimaryExpression	"""mips"""		3604035	0					
ANR	3604097	Label	case EM_MCST_ELBRUS :	2105:1:60257:60276	3604035	13	True				
ANR	3604098	Identifier	EM_MCST_ELBRUS		3604035	0					
ANR	3604099	ReturnStatement	"return strdup ( ""elbrus"" ) ;"	2106:2:60280:60304	3604035	14	True				
ANR	3604100	CallExpression	"strdup ( ""elbrus"" )"		3604035	0					
ANR	3604101	Callee	strdup		3604035	0					
ANR	3604102	Identifier	strdup		3604035	0					
ANR	3604103	ArgumentList	"""elbrus"""		3604035	1					
ANR	3604104	Argument	"""elbrus"""		3604035	0					
ANR	3604105	PrimaryExpression	"""elbrus"""		3604035	0					
ANR	3604106	Label	case EM_TRICORE :	2107:1:60307:60322	3604035	15	True				
ANR	3604107	Identifier	EM_TRICORE		3604035	0					
ANR	3604108	ReturnStatement	"return strdup ( ""tricore"" ) ;"	2108:2:60326:60351	3604035	16	True				
ANR	3604109	CallExpression	"strdup ( ""tricore"" )"		3604035	0					
ANR	3604110	Callee	strdup		3604035	0					
ANR	3604111	Identifier	strdup		3604035	0					
ANR	3604112	ArgumentList	"""tricore"""		3604035	1					
ANR	3604113	Argument	"""tricore"""		3604035	0					
ANR	3604114	PrimaryExpression	"""tricore"""		3604035	0					
ANR	3604115	Label	case EM_RCE :	2109:1:60354:60365	3604035	17	True				
ANR	3604116	Identifier	EM_RCE		3604035	0					
ANR	3604117	ReturnStatement	"return strdup ( ""mcore"" ) ;"	2110:2:60369:60392	3604035	18	True				
ANR	3604118	CallExpression	"strdup ( ""mcore"" )"		3604035	0					
ANR	3604119	Callee	strdup		3604035	0					
ANR	3604120	Identifier	strdup		3604035	0					
ANR	3604121	ArgumentList	"""mcore"""		3604035	1					
ANR	3604122	Argument	"""mcore"""		3604035	0					
ANR	3604123	PrimaryExpression	"""mcore"""		3604035	0					
ANR	3604124	Label	case EM_ARM :	2111:1:60395:60406	3604035	19	True				
ANR	3604125	Identifier	EM_ARM		3604035	0					
ANR	3604126	Label	case EM_AARCH64 :	2112:1:60409:60424	3604035	20	True				
ANR	3604127	Identifier	EM_AARCH64		3604035	0					
ANR	3604128	ReturnStatement	"return strdup ( ""arm"" ) ;"	2113:2:60428:60449	3604035	21	True				
ANR	3604129	CallExpression	"strdup ( ""arm"" )"		3604035	0					
ANR	3604130	Callee	strdup		3604035	0					
ANR	3604131	Identifier	strdup		3604035	0					
ANR	3604132	ArgumentList	"""arm"""		3604035	1					
ANR	3604133	Argument	"""arm"""		3604035	0					
ANR	3604134	PrimaryExpression	"""arm"""		3604035	0					
ANR	3604135	Label	case EM_HEXAGON :	2114:1:60452:60467	3604035	22	True				
ANR	3604136	Identifier	EM_HEXAGON		3604035	0					
ANR	3604137	ReturnStatement	"return strdup ( ""hexagon"" ) ;"	2115:2:60471:60496	3604035	23	True				
ANR	3604138	CallExpression	"strdup ( ""hexagon"" )"		3604035	0					
ANR	3604139	Callee	strdup		3604035	0					
ANR	3604140	Identifier	strdup		3604035	0					
ANR	3604141	ArgumentList	"""hexagon"""		3604035	1					
ANR	3604142	Argument	"""hexagon"""		3604035	0					
ANR	3604143	PrimaryExpression	"""hexagon"""		3604035	0					
ANR	3604144	Label	case EM_BLACKFIN :	2116:1:60499:60515	3604035	24	True				
ANR	3604145	Identifier	EM_BLACKFIN		3604035	0					
ANR	3604146	ReturnStatement	"return strdup ( ""blackfin"" ) ;"	2117:2:60519:60545	3604035	25	True				
ANR	3604147	CallExpression	"strdup ( ""blackfin"" )"		3604035	0					
ANR	3604148	Callee	strdup		3604035	0					
ANR	3604149	Identifier	strdup		3604035	0					
ANR	3604150	ArgumentList	"""blackfin"""		3604035	1					
ANR	3604151	Argument	"""blackfin"""		3604035	0					
ANR	3604152	PrimaryExpression	"""blackfin"""		3604035	0					
ANR	3604153	Label	case EM_SPARC :	2118:1:60548:60561	3604035	26	True				
ANR	3604154	Identifier	EM_SPARC		3604035	0					
ANR	3604155	Label	case EM_SPARC32PLUS :	2119:1:60564:60583	3604035	27	True				
ANR	3604156	Identifier	EM_SPARC32PLUS		3604035	0					
ANR	3604157	Label	case EM_SPARCV9 :	2120:1:60586:60601	3604035	28	True				
ANR	3604158	Identifier	EM_SPARCV9		3604035	0					
ANR	3604159	ReturnStatement	"return strdup ( ""sparc"" ) ;"	2121:2:60605:60628	3604035	29	True				
ANR	3604160	CallExpression	"strdup ( ""sparc"" )"		3604035	0					
ANR	3604161	Callee	strdup		3604035	0					
ANR	3604162	Identifier	strdup		3604035	0					
ANR	3604163	ArgumentList	"""sparc"""		3604035	1					
ANR	3604164	Argument	"""sparc"""		3604035	0					
ANR	3604165	PrimaryExpression	"""sparc"""		3604035	0					
ANR	3604166	Label	case EM_PPC :	2122:1:60631:60642	3604035	30	True				
ANR	3604167	Identifier	EM_PPC		3604035	0					
ANR	3604168	Label	case EM_PPC64 :	2123:1:60645:60658	3604035	31	True				
ANR	3604169	Identifier	EM_PPC64		3604035	0					
ANR	3604170	ReturnStatement	"return strdup ( ""ppc"" ) ;"	2124:2:60662:60683	3604035	32	True				
ANR	3604171	CallExpression	"strdup ( ""ppc"" )"		3604035	0					
ANR	3604172	Callee	strdup		3604035	0					
ANR	3604173	Identifier	strdup		3604035	0					
ANR	3604174	ArgumentList	"""ppc"""		3604035	1					
ANR	3604175	Argument	"""ppc"""		3604035	0					
ANR	3604176	PrimaryExpression	"""ppc"""		3604035	0					
ANR	3604177	Label	case EM_PARISC :	2125:1:60686:60700	3604035	33	True				
ANR	3604178	Identifier	EM_PARISC		3604035	0					
ANR	3604179	ReturnStatement	"return strdup ( ""hppa"" ) ;"	2126:2:60704:60726	3604035	34	True				
ANR	3604180	CallExpression	"strdup ( ""hppa"" )"		3604035	0					
ANR	3604181	Callee	strdup		3604035	0					
ANR	3604182	Identifier	strdup		3604035	0					
ANR	3604183	ArgumentList	"""hppa"""		3604035	1					
ANR	3604184	Argument	"""hppa"""		3604035	0					
ANR	3604185	PrimaryExpression	"""hppa"""		3604035	0					
ANR	3604186	Label	case EM_PROPELLER :	2127:1:60729:60746	3604035	35	True				
ANR	3604187	Identifier	EM_PROPELLER		3604035	0					
ANR	3604188	ReturnStatement	"return strdup ( ""propeller"" ) ;"	2128:2:60750:60777	3604035	36	True				
ANR	3604189	CallExpression	"strdup ( ""propeller"" )"		3604035	0					
ANR	3604190	Callee	strdup		3604035	0					
ANR	3604191	Identifier	strdup		3604035	0					
ANR	3604192	ArgumentList	"""propeller"""		3604035	1					
ANR	3604193	Argument	"""propeller"""		3604035	0					
ANR	3604194	PrimaryExpression	"""propeller"""		3604035	0					
ANR	3604195	Label	case EM_MICROBLAZE :	2129:1:60780:60798	3604035	37	True				
ANR	3604196	Identifier	EM_MICROBLAZE		3604035	0					
ANR	3604197	ReturnStatement	"return strdup ( ""microblaze.gnu"" ) ;"	2130:2:60802:60834	3604035	38	True				
ANR	3604198	CallExpression	"strdup ( ""microblaze.gnu"" )"		3604035	0					
ANR	3604199	Callee	strdup		3604035	0					
ANR	3604200	Identifier	strdup		3604035	0					
ANR	3604201	ArgumentList	"""microblaze.gnu"""		3604035	1					
ANR	3604202	Argument	"""microblaze.gnu"""		3604035	0					
ANR	3604203	PrimaryExpression	"""microblaze.gnu"""		3604035	0					
ANR	3604204	Label	case EM_RISCV :	2131:1:60837:60850	3604035	39	True				
ANR	3604205	Identifier	EM_RISCV		3604035	0					
ANR	3604206	ReturnStatement	"return strdup ( ""riscv"" ) ;"	2132:2:60854:60877	3604035	40	True				
ANR	3604207	CallExpression	"strdup ( ""riscv"" )"		3604035	0					
ANR	3604208	Callee	strdup		3604035	0					
ANR	3604209	Identifier	strdup		3604035	0					
ANR	3604210	ArgumentList	"""riscv"""		3604035	1					
ANR	3604211	Argument	"""riscv"""		3604035	0					
ANR	3604212	PrimaryExpression	"""riscv"""		3604035	0					
ANR	3604213	Label	case EM_VAX :	2133:1:60880:60891	3604035	41	True				
ANR	3604214	Identifier	EM_VAX		3604035	0					
ANR	3604215	ReturnStatement	"return strdup ( ""vax"" ) ;"	2134:2:60895:60916	3604035	42	True				
ANR	3604216	CallExpression	"strdup ( ""vax"" )"		3604035	0					
ANR	3604217	Callee	strdup		3604035	0					
ANR	3604218	Identifier	strdup		3604035	0					
ANR	3604219	ArgumentList	"""vax"""		3604035	1					
ANR	3604220	Argument	"""vax"""		3604035	0					
ANR	3604221	PrimaryExpression	"""vax"""		3604035	0					
ANR	3604222	Label	case EM_XTENSA :	2135:1:60919:60933	3604035	43	True				
ANR	3604223	Identifier	EM_XTENSA		3604035	0					
ANR	3604224	ReturnStatement	"return strdup ( ""xtensa"" ) ;"	2136:2:60937:60961	3604035	44	True				
ANR	3604225	CallExpression	"strdup ( ""xtensa"" )"		3604035	0					
ANR	3604226	Callee	strdup		3604035	0					
ANR	3604227	Identifier	strdup		3604035	0					
ANR	3604228	ArgumentList	"""xtensa"""		3604035	1					
ANR	3604229	Argument	"""xtensa"""		3604035	0					
ANR	3604230	PrimaryExpression	"""xtensa"""		3604035	0					
ANR	3604231	Label	case EM_LANAI :	2137:1:60964:60977	3604035	45	True				
ANR	3604232	Identifier	EM_LANAI		3604035	0					
ANR	3604233	ReturnStatement	"return strdup ( ""lanai"" ) ;"	2138:2:60981:61004	3604035	46	True				
ANR	3604234	CallExpression	"strdup ( ""lanai"" )"		3604035	0					
ANR	3604235	Callee	strdup		3604035	0					
ANR	3604236	Identifier	strdup		3604035	0					
ANR	3604237	ArgumentList	"""lanai"""		3604035	1					
ANR	3604238	Argument	"""lanai"""		3604035	0					
ANR	3604239	PrimaryExpression	"""lanai"""		3604035	0					
ANR	3604240	Label	case EM_VIDEOCORE3 :	2139:1:61007:61025	3604035	47	True				
ANR	3604241	Identifier	EM_VIDEOCORE3		3604035	0					
ANR	3604242	Label	case EM_VIDEOCORE4 :	2140:1:61028:61046	3604035	48	True				
ANR	3604243	Identifier	EM_VIDEOCORE4		3604035	0					
ANR	3604244	ReturnStatement	"return strdup ( ""vc4"" ) ;"	2141:2:61050:61071	3604035	49	True				
ANR	3604245	CallExpression	"strdup ( ""vc4"" )"		3604035	0					
ANR	3604246	Callee	strdup		3604035	0					
ANR	3604247	Identifier	strdup		3604035	0					
ANR	3604248	ArgumentList	"""vc4"""		3604035	1					
ANR	3604249	Argument	"""vc4"""		3604035	0					
ANR	3604250	PrimaryExpression	"""vc4"""		3604035	0					
ANR	3604251	Label	case EM_MSP430 :	2142:1:61074:61088	3604035	50	True				
ANR	3604252	Identifier	EM_MSP430		3604035	0					
ANR	3604253	ReturnStatement	"return strdup ( ""msp430"" ) ;"	2143:2:61092:61116	3604035	51	True				
ANR	3604254	CallExpression	"strdup ( ""msp430"" )"		3604035	0					
ANR	3604255	Callee	strdup		3604035	0					
ANR	3604256	Identifier	strdup		3604035	0					
ANR	3604257	ArgumentList	"""msp430"""		3604035	1					
ANR	3604258	Argument	"""msp430"""		3604035	0					
ANR	3604259	PrimaryExpression	"""msp430"""		3604035	0					
ANR	3604260	Label	case EM_SH :	2144:1:61119:61129	3604035	52	True				
ANR	3604261	Identifier	EM_SH		3604035	0					
ANR	3604262	ReturnStatement	"return strdup ( ""sh"" ) ;"	2145:2:61133:61153	3604035	53	True				
ANR	3604263	CallExpression	"strdup ( ""sh"" )"		3604035	0					
ANR	3604264	Callee	strdup		3604035	0					
ANR	3604265	Identifier	strdup		3604035	0					
ANR	3604266	ArgumentList	"""sh"""		3604035	1					
ANR	3604267	Argument	"""sh"""		3604035	0					
ANR	3604268	PrimaryExpression	"""sh"""		3604035	0					
ANR	3604269	Label	case EM_V850 :	2146:1:61156:61168	3604035	54	True				
ANR	3604270	Identifier	EM_V850		3604035	0					
ANR	3604271	ReturnStatement	"return strdup ( ""v850"" ) ;"	2147:2:61172:61194	3604035	55	True				
ANR	3604272	CallExpression	"strdup ( ""v850"" )"		3604035	0					
ANR	3604273	Callee	strdup		3604035	0					
ANR	3604274	Identifier	strdup		3604035	0					
ANR	3604275	ArgumentList	"""v850"""		3604035	1					
ANR	3604276	Argument	"""v850"""		3604035	0					
ANR	3604277	PrimaryExpression	"""v850"""		3604035	0					
ANR	3604278	Label	case EM_IA_64 :	2148:1:61197:61210	3604035	56	True				
ANR	3604279	Identifier	EM_IA_64		3604035	0					
ANR	3604280	ReturnStatement	"return strdup ( ""ia64"" ) ;"	2149:2:61214:61235	3604035	57	True				
ANR	3604281	CallExpression	"strdup ( ""ia64"" )"		3604035	0					
ANR	3604282	Callee	strdup		3604035	0					
ANR	3604283	Identifier	strdup		3604035	0					
ANR	3604284	ArgumentList	"""ia64"""		3604035	1					
ANR	3604285	Argument	"""ia64"""		3604035	0					
ANR	3604286	PrimaryExpression	"""ia64"""		3604035	0					
ANR	3604287	Label	default :	2150:1:61238:61245	3604035	58	True				
ANR	3604288	Identifier	default		3604035	0					
ANR	3604289	ReturnStatement	"return strdup ( ""x86"" ) ;"	2150:10:61247:61268	3604035	59	True				
ANR	3604290	CallExpression	"strdup ( ""x86"" )"		3604035	0					
ANR	3604291	Callee	strdup		3604035	0					
ANR	3604292	Identifier	strdup		3604035	0					
ANR	3604293	ArgumentList	"""x86"""		3604035	1					
ANR	3604294	Argument	"""x86"""		3604035	0					
ANR	3604295	PrimaryExpression	"""x86"""		3604035	0					
ANR	3604296	ReturnType	Elf_		3604035	1					
ANR	3604297	Identifier	( r_bin_elf_get_arch )		3604035	2					
ANR	3604298	Identifier	r_bin_elf_get_arch		3604035	3					
ANR	3604299	ParameterList	ELFOBJ * bin		3604035	4					
ANR	3604300	Parameter	ELFOBJ * bin	2093:31:59959:59969	3604035	0	True				
ANR	3604301	ParameterType	ELFOBJ *		3604035	0					
ANR	3604302	Identifier	bin		3604035	1					
ANR	3604303	CFGEntryNode	ENTRY		3604035		True				
ANR	3604304	CFGExitNode	EXIT		3604035		True				
ANR	3604305	Symbol	bin		3604035						
ANR	3604306	Symbol	bin -> ehdr		3604035						
ANR	3604307	Symbol	bin -> ehdr . e_machine		3604035						
ANR	3604308	Symbol	strdup		3604035						
ANR	3604309	Symbol	* bin		3604035						
ANR	3604310	Function	r_bin_elf_get_machine_name	2156:6:61345:72509							
ANR	3604311	FunctionDef	r_bin_elf_get_machine_name (ELFOBJ * bin)		3604310	0					
ANR	3604312	CompoundStatement		2156:52:61391:72509	3604310	0					
ANR	3604313	SwitchStatement	switch ( bin -> ehdr . e_machine )		3604310	0					
ANR	3604314	Condition	bin -> ehdr . e_machine	2157:9:61402:61420	3604310	0	True				
ANR	3604315	MemberAccess	bin -> ehdr . e_machine		3604310	0					
ANR	3604316	PtrMemberAccess	bin -> ehdr		3604310	0					
ANR	3604317	Identifier	bin		3604310	0					
ANR	3604318	Identifier	ehdr		3604310	1					
ANR	3604319	Identifier	e_machine		3604310	1					
ANR	3604320	CompoundStatement		2:30:31:31	3604310	1					
ANR	3604321	Label	case EM_NONE :	2158:1:61426:61438	3604310	0	True				
ANR	3604322	Identifier	EM_NONE		3604310	0					
ANR	3604323	ReturnStatement	"return strdup ( ""No machine"" ) ;"	2158:24:61449:61477	3604310	1	True				
ANR	3604324	CallExpression	"strdup ( ""No machine"" )"		3604310	0					
ANR	3604325	Callee	strdup		3604310	0					
ANR	3604326	Identifier	strdup		3604310	0					
ANR	3604327	ArgumentList	"""No machine"""		3604310	1					
ANR	3604328	Argument	"""No machine"""		3604310	0					
ANR	3604329	PrimaryExpression	"""No machine"""		3604310	0					
ANR	3604330	Label	case EM_M32 :	2159:1:61480:61491	3604310	2	True				
ANR	3604331	Identifier	EM_M32		3604310	0					
ANR	3604332	ReturnStatement	"return strdup ( ""AT&T WE 32100"" ) ;"	2159:24:61503:61534	3604310	3	True				
ANR	3604333	CallExpression	"strdup ( ""AT&T WE 32100"" )"		3604310	0					
ANR	3604334	Callee	strdup		3604310	0					
ANR	3604335	Identifier	strdup		3604310	0					
ANR	3604336	ArgumentList	"""AT&T WE 32100"""		3604310	1					
ANR	3604337	Argument	"""AT&T WE 32100"""		3604310	0					
ANR	3604338	PrimaryExpression	"""AT&T WE 32100"""		3604310	0					
ANR	3604339	Label	case EM_SPARC :	2160:1:61537:61550	3604310	4	True				
ANR	3604340	Identifier	EM_SPARC		3604310	0					
ANR	3604341	ReturnStatement	"return strdup ( ""SUN SPARC"" ) ;"	2160:24:61560:61587	3604310	5	True				
ANR	3604342	CallExpression	"strdup ( ""SUN SPARC"" )"		3604310	0					
ANR	3604343	Callee	strdup		3604310	0					
ANR	3604344	Identifier	strdup		3604310	0					
ANR	3604345	ArgumentList	"""SUN SPARC"""		3604310	1					
ANR	3604346	Argument	"""SUN SPARC"""		3604310	0					
ANR	3604347	PrimaryExpression	"""SUN SPARC"""		3604310	0					
ANR	3604348	Label	case EM_386 :	2161:1:61590:61601	3604310	6	True				
ANR	3604349	Identifier	EM_386		3604310	0					
ANR	3604350	ReturnStatement	"return strdup ( ""Intel 80386"" ) ;"	2161:24:61613:61642	3604310	7	True				
ANR	3604351	CallExpression	"strdup ( ""Intel 80386"" )"		3604310	0					
ANR	3604352	Callee	strdup		3604310	0					
ANR	3604353	Identifier	strdup		3604310	0					
ANR	3604354	ArgumentList	"""Intel 80386"""		3604310	1					
ANR	3604355	Argument	"""Intel 80386"""		3604310	0					
ANR	3604356	PrimaryExpression	"""Intel 80386"""		3604310	0					
ANR	3604357	Label	case EM_68K :	2162:1:61645:61656	3604310	8	True				
ANR	3604358	Identifier	EM_68K		3604310	0					
ANR	3604359	ReturnStatement	"return strdup ( ""Motorola m68k family"" ) ;"	2162:24:61668:61706	3604310	9	True				
ANR	3604360	CallExpression	"strdup ( ""Motorola m68k family"" )"		3604310	0					
ANR	3604361	Callee	strdup		3604310	0					
ANR	3604362	Identifier	strdup		3604310	0					
ANR	3604363	ArgumentList	"""Motorola m68k family"""		3604310	1					
ANR	3604364	Argument	"""Motorola m68k family"""		3604310	0					
ANR	3604365	PrimaryExpression	"""Motorola m68k family"""		3604310	0					
ANR	3604366	Label	case EM_88K :	2163:1:61709:61720	3604310	10	True				
ANR	3604367	Identifier	EM_88K		3604310	0					
ANR	3604368	ReturnStatement	"return strdup ( ""Motorola m88k family"" ) ;"	2163:24:61732:61770	3604310	11	True				
ANR	3604369	CallExpression	"strdup ( ""Motorola m88k family"" )"		3604310	0					
ANR	3604370	Callee	strdup		3604310	0					
ANR	3604371	Identifier	strdup		3604310	0					
ANR	3604372	ArgumentList	"""Motorola m88k family"""		3604310	1					
ANR	3604373	Argument	"""Motorola m88k family"""		3604310	0					
ANR	3604374	PrimaryExpression	"""Motorola m88k family"""		3604310	0					
ANR	3604375	Label	case EM_860 :	2164:1:61773:61784	3604310	12	True				
ANR	3604376	Identifier	EM_860		3604310	0					
ANR	3604377	ReturnStatement	"return strdup ( ""Intel 80860"" ) ;"	2164:24:61796:61825	3604310	13	True				
ANR	3604378	CallExpression	"strdup ( ""Intel 80860"" )"		3604310	0					
ANR	3604379	Callee	strdup		3604310	0					
ANR	3604380	Identifier	strdup		3604310	0					
ANR	3604381	ArgumentList	"""Intel 80860"""		3604310	1					
ANR	3604382	Argument	"""Intel 80860"""		3604310	0					
ANR	3604383	PrimaryExpression	"""Intel 80860"""		3604310	0					
ANR	3604384	Label	case EM_MIPS :	2165:1:61828:61840	3604310	14	True				
ANR	3604385	Identifier	EM_MIPS		3604310	0					
ANR	3604386	ReturnStatement	"return strdup ( ""MIPS R3000"" ) ;"	2165:24:61851:61879	3604310	15	True				
ANR	3604387	CallExpression	"strdup ( ""MIPS R3000"" )"		3604310	0					
ANR	3604388	Callee	strdup		3604310	0					
ANR	3604389	Identifier	strdup		3604310	0					
ANR	3604390	ArgumentList	"""MIPS R3000"""		3604310	1					
ANR	3604391	Argument	"""MIPS R3000"""		3604310	0					
ANR	3604392	PrimaryExpression	"""MIPS R3000"""		3604310	0					
ANR	3604393	Label	case EM_S370 :	2166:1:61882:61894	3604310	16	True				
ANR	3604394	Identifier	EM_S370		3604310	0					
ANR	3604395	ReturnStatement	"return strdup ( ""IBM System/370"" ) ;"	2166:24:61905:61937	3604310	17	True				
ANR	3604396	CallExpression	"strdup ( ""IBM System/370"" )"		3604310	0					
ANR	3604397	Callee	strdup		3604310	0					
ANR	3604398	Identifier	strdup		3604310	0					
ANR	3604399	ArgumentList	"""IBM System/370"""		3604310	1					
ANR	3604400	Argument	"""IBM System/370"""		3604310	0					
ANR	3604401	PrimaryExpression	"""IBM System/370"""		3604310	0					
ANR	3604402	Label	case EM_MIPS_RS3_LE :	2167:1:61940:61959	3604310	18	True				
ANR	3604403	Identifier	EM_MIPS_RS3_LE		3604310	0					
ANR	3604404	ReturnStatement	"return strdup ( ""MIPS R3000 little-endian"" ) ;"	2167:24:61963:62005	3604310	19	True				
ANR	3604405	CallExpression	"strdup ( ""MIPS R3000 little-endian"" )"		3604310	0					
ANR	3604406	Callee	strdup		3604310	0					
ANR	3604407	Identifier	strdup		3604310	0					
ANR	3604408	ArgumentList	"""MIPS R3000 little-endian"""		3604310	1					
ANR	3604409	Argument	"""MIPS R3000 little-endian"""		3604310	0					
ANR	3604410	PrimaryExpression	"""MIPS R3000 little-endian"""		3604310	0					
ANR	3604411	Label	case EM_PARISC :	2168:1:62008:62022	3604310	20	True				
ANR	3604412	Identifier	EM_PARISC		3604310	0					
ANR	3604413	ReturnStatement	"return strdup ( ""HPPA"" ) ;"	2168:24:62031:62053	3604310	21	True				
ANR	3604414	CallExpression	"strdup ( ""HPPA"" )"		3604310	0					
ANR	3604415	Callee	strdup		3604310	0					
ANR	3604416	Identifier	strdup		3604310	0					
ANR	3604417	ArgumentList	"""HPPA"""		3604310	1					
ANR	3604418	Argument	"""HPPA"""		3604310	0					
ANR	3604419	PrimaryExpression	"""HPPA"""		3604310	0					
ANR	3604420	Label	case EM_VPP500 :	2169:1:62056:62070	3604310	22	True				
ANR	3604421	Identifier	EM_VPP500		3604310	0					
ANR	3604422	ReturnStatement	"return strdup ( ""Fujitsu VPP500"" ) ;"	2169:24:62079:62111	3604310	23	True				
ANR	3604423	CallExpression	"strdup ( ""Fujitsu VPP500"" )"		3604310	0					
ANR	3604424	Callee	strdup		3604310	0					
ANR	3604425	Identifier	strdup		3604310	0					
ANR	3604426	ArgumentList	"""Fujitsu VPP500"""		3604310	1					
ANR	3604427	Argument	"""Fujitsu VPP500"""		3604310	0					
ANR	3604428	PrimaryExpression	"""Fujitsu VPP500"""		3604310	0					
ANR	3604429	Label	case EM_SPARC32PLUS :	2170:1:62114:62133	3604310	24	True				
ANR	3604430	Identifier	EM_SPARC32PLUS		3604310	0					
ANR	3604431	ReturnStatement	"return strdup ( ""Sun's \\""v8plus\\"""" ) ;"	2170:24:62137:62171	3604310	25	True				
ANR	3604432	CallExpression	"strdup ( ""Sun's \\""v8plus\\"""" )"		3604310	0					
ANR	3604433	Callee	strdup		3604310	0					
ANR	3604434	Identifier	strdup		3604310	0					
ANR	3604435	ArgumentList	"""Sun's \\""v8plus\\"""""		3604310	1					
ANR	3604436	Argument	"""Sun's \\""v8plus\\"""""		3604310	0					
ANR	3604437	PrimaryExpression	"""Sun's \\""v8plus\\"""""		3604310	0					
ANR	3604438	Label	case EM_960 :	2171:1:62174:62185	3604310	26	True				
ANR	3604439	Identifier	EM_960		3604310	0					
ANR	3604440	ReturnStatement	"return strdup ( ""Intel 80960"" ) ;"	2171:24:62197:62226	3604310	27	True				
ANR	3604441	CallExpression	"strdup ( ""Intel 80960"" )"		3604310	0					
ANR	3604442	Callee	strdup		3604310	0					
ANR	3604443	Identifier	strdup		3604310	0					
ANR	3604444	ArgumentList	"""Intel 80960"""		3604310	1					
ANR	3604445	Argument	"""Intel 80960"""		3604310	0					
ANR	3604446	PrimaryExpression	"""Intel 80960"""		3604310	0					
ANR	3604447	Label	case EM_PPC :	2172:1:62229:62240	3604310	28	True				
ANR	3604448	Identifier	EM_PPC		3604310	0					
ANR	3604449	ReturnStatement	"return strdup ( ""PowerPC"" ) ;"	2172:24:62252:62277	3604310	29	True				
ANR	3604450	CallExpression	"strdup ( ""PowerPC"" )"		3604310	0					
ANR	3604451	Callee	strdup		3604310	0					
ANR	3604452	Identifier	strdup		3604310	0					
ANR	3604453	ArgumentList	"""PowerPC"""		3604310	1					
ANR	3604454	Argument	"""PowerPC"""		3604310	0					
ANR	3604455	PrimaryExpression	"""PowerPC"""		3604310	0					
ANR	3604456	Label	case EM_PPC64 :	2173:1:62280:62293	3604310	30	True				
ANR	3604457	Identifier	EM_PPC64		3604310	0					
ANR	3604458	ReturnStatement	"return strdup ( ""PowerPC 64-bit"" ) ;"	2173:24:62303:62335	3604310	31	True				
ANR	3604459	CallExpression	"strdup ( ""PowerPC 64-bit"" )"		3604310	0					
ANR	3604460	Callee	strdup		3604310	0					
ANR	3604461	Identifier	strdup		3604310	0					
ANR	3604462	ArgumentList	"""PowerPC 64-bit"""		3604310	1					
ANR	3604463	Argument	"""PowerPC 64-bit"""		3604310	0					
ANR	3604464	PrimaryExpression	"""PowerPC 64-bit"""		3604310	0					
ANR	3604465	Label	case EM_S390 :	2174:1:62338:62350	3604310	32	True				
ANR	3604466	Identifier	EM_S390		3604310	0					
ANR	3604467	ReturnStatement	"return strdup ( ""IBM S390"" ) ;"	2174:24:62361:62387	3604310	33	True				
ANR	3604468	CallExpression	"strdup ( ""IBM S390"" )"		3604310	0					
ANR	3604469	Callee	strdup		3604310	0					
ANR	3604470	Identifier	strdup		3604310	0					
ANR	3604471	ArgumentList	"""IBM S390"""		3604310	1					
ANR	3604472	Argument	"""IBM S390"""		3604310	0					
ANR	3604473	PrimaryExpression	"""IBM S390"""		3604310	0					
ANR	3604474	Label	case EM_V800 :	2175:1:62390:62402	3604310	34	True				
ANR	3604475	Identifier	EM_V800		3604310	0					
ANR	3604476	ReturnStatement	"return strdup ( ""NEC V800 series"" ) ;"	2175:24:62413:62446	3604310	35	True				
ANR	3604477	CallExpression	"strdup ( ""NEC V800 series"" )"		3604310	0					
ANR	3604478	Callee	strdup		3604310	0					
ANR	3604479	Identifier	strdup		3604310	0					
ANR	3604480	ArgumentList	"""NEC V800 series"""		3604310	1					
ANR	3604481	Argument	"""NEC V800 series"""		3604310	0					
ANR	3604482	PrimaryExpression	"""NEC V800 series"""		3604310	0					
ANR	3604483	Label	case EM_FR20 :	2176:1:62449:62461	3604310	36	True				
ANR	3604484	Identifier	EM_FR20		3604310	0					
ANR	3604485	ReturnStatement	"return strdup ( ""Fujitsu FR20"" ) ;"	2176:24:62472:62502	3604310	37	True				
ANR	3604486	CallExpression	"strdup ( ""Fujitsu FR20"" )"		3604310	0					
ANR	3604487	Callee	strdup		3604310	0					
ANR	3604488	Identifier	strdup		3604310	0					
ANR	3604489	ArgumentList	"""Fujitsu FR20"""		3604310	1					
ANR	3604490	Argument	"""Fujitsu FR20"""		3604310	0					
ANR	3604491	PrimaryExpression	"""Fujitsu FR20"""		3604310	0					
ANR	3604492	Label	case EM_RH32 :	2177:1:62505:62517	3604310	38	True				
ANR	3604493	Identifier	EM_RH32		3604310	0					
ANR	3604494	ReturnStatement	"return strdup ( ""TRW RH-32"" ) ;"	2177:24:62528:62555	3604310	39	True				
ANR	3604495	CallExpression	"strdup ( ""TRW RH-32"" )"		3604310	0					
ANR	3604496	Callee	strdup		3604310	0					
ANR	3604497	Identifier	strdup		3604310	0					
ANR	3604498	ArgumentList	"""TRW RH-32"""		3604310	1					
ANR	3604499	Argument	"""TRW RH-32"""		3604310	0					
ANR	3604500	PrimaryExpression	"""TRW RH-32"""		3604310	0					
ANR	3604501	Label	case EM_RCE :	2178:1:62558:62569	3604310	40	True				
ANR	3604502	Identifier	EM_RCE		3604310	0					
ANR	3604503	ReturnStatement	"return strdup ( ""Motorola RCE"" ) ;"	2178:24:62581:62611	3604310	41	True				
ANR	3604504	CallExpression	"strdup ( ""Motorola RCE"" )"		3604310	0					
ANR	3604505	Callee	strdup		3604310	0					
ANR	3604506	Identifier	strdup		3604310	0					
ANR	3604507	ArgumentList	"""Motorola RCE"""		3604310	1					
ANR	3604508	Argument	"""Motorola RCE"""		3604310	0					
ANR	3604509	PrimaryExpression	"""Motorola RCE"""		3604310	0					
ANR	3604510	Label	case EM_ARM :	2179:1:62614:62625	3604310	42	True				
ANR	3604511	Identifier	EM_ARM		3604310	0					
ANR	3604512	ReturnStatement	"return strdup ( ""ARM"" ) ;"	2179:24:62637:62658	3604310	43	True				
ANR	3604513	CallExpression	"strdup ( ""ARM"" )"		3604310	0					
ANR	3604514	Callee	strdup		3604310	0					
ANR	3604515	Identifier	strdup		3604310	0					
ANR	3604516	ArgumentList	"""ARM"""		3604310	1					
ANR	3604517	Argument	"""ARM"""		3604310	0					
ANR	3604518	PrimaryExpression	"""ARM"""		3604310	0					
ANR	3604519	Label	case EM_BLACKFIN :	2180:1:62661:62677	3604310	44	True				
ANR	3604520	Identifier	EM_BLACKFIN		3604310	0					
ANR	3604521	ReturnStatement	"return strdup ( ""Analog Devices Blackfin"" ) ;"	2180:24:62684:62725	3604310	45	True				
ANR	3604522	CallExpression	"strdup ( ""Analog Devices Blackfin"" )"		3604310	0					
ANR	3604523	Callee	strdup		3604310	0					
ANR	3604524	Identifier	strdup		3604310	0					
ANR	3604525	ArgumentList	"""Analog Devices Blackfin"""		3604310	1					
ANR	3604526	Argument	"""Analog Devices Blackfin"""		3604310	0					
ANR	3604527	PrimaryExpression	"""Analog Devices Blackfin"""		3604310	0					
ANR	3604528	Label	case EM_FAKE_ALPHA :	2181:1:62728:62746	3604310	46	True				
ANR	3604529	Identifier	EM_FAKE_ALPHA		3604310	0					
ANR	3604530	ReturnStatement	"return strdup ( ""Digital Alpha"" ) ;"	2181:24:62751:62782	3604310	47	True				
ANR	3604531	CallExpression	"strdup ( ""Digital Alpha"" )"		3604310	0					
ANR	3604532	Callee	strdup		3604310	0					
ANR	3604533	Identifier	strdup		3604310	0					
ANR	3604534	ArgumentList	"""Digital Alpha"""		3604310	1					
ANR	3604535	Argument	"""Digital Alpha"""		3604310	0					
ANR	3604536	PrimaryExpression	"""Digital Alpha"""		3604310	0					
ANR	3604537	Label	case EM_SH :	2182:1:62785:62795	3604310	48	True				
ANR	3604538	Identifier	EM_SH		3604310	0					
ANR	3604539	ReturnStatement	"return strdup ( ""Hitachi SH"" ) ;"	2182:24:62808:62836	3604310	49	True				
ANR	3604540	CallExpression	"strdup ( ""Hitachi SH"" )"		3604310	0					
ANR	3604541	Callee	strdup		3604310	0					
ANR	3604542	Identifier	strdup		3604310	0					
ANR	3604543	ArgumentList	"""Hitachi SH"""		3604310	1					
ANR	3604544	Argument	"""Hitachi SH"""		3604310	0					
ANR	3604545	PrimaryExpression	"""Hitachi SH"""		3604310	0					
ANR	3604546	Label	case EM_SPARCV9 :	2183:1:62839:62854	3604310	50	True				
ANR	3604547	Identifier	EM_SPARCV9		3604310	0					
ANR	3604548	ReturnStatement	"return strdup ( ""SPARC v9 64-bit"" ) ;"	2183:24:62862:62895	3604310	51	True				
ANR	3604549	CallExpression	"strdup ( ""SPARC v9 64-bit"" )"		3604310	0					
ANR	3604550	Callee	strdup		3604310	0					
ANR	3604551	Identifier	strdup		3604310	0					
ANR	3604552	ArgumentList	"""SPARC v9 64-bit"""		3604310	1					
ANR	3604553	Argument	"""SPARC v9 64-bit"""		3604310	0					
ANR	3604554	PrimaryExpression	"""SPARC v9 64-bit"""		3604310	0					
ANR	3604555	Label	case EM_TRICORE :	2184:1:62898:62913	3604310	52	True				
ANR	3604556	Identifier	EM_TRICORE		3604310	0					
ANR	3604557	ReturnStatement	"return strdup ( ""Siemens Tricore"" ) ;"	2184:24:62921:62954	3604310	53	True				
ANR	3604558	CallExpression	"strdup ( ""Siemens Tricore"" )"		3604310	0					
ANR	3604559	Callee	strdup		3604310	0					
ANR	3604560	Identifier	strdup		3604310	0					
ANR	3604561	ArgumentList	"""Siemens Tricore"""		3604310	1					
ANR	3604562	Argument	"""Siemens Tricore"""		3604310	0					
ANR	3604563	PrimaryExpression	"""Siemens Tricore"""		3604310	0					
ANR	3604564	Label	case EM_ARC :	2185:1:62957:62968	3604310	54	True				
ANR	3604565	Identifier	EM_ARC		3604310	0					
ANR	3604566	ReturnStatement	"return strdup ( ""Argonaut RISC Core"" ) ;"	2185:24:62980:63016	3604310	55	True				
ANR	3604567	CallExpression	"strdup ( ""Argonaut RISC Core"" )"		3604310	0					
ANR	3604568	Callee	strdup		3604310	0					
ANR	3604569	Identifier	strdup		3604310	0					
ANR	3604570	ArgumentList	"""Argonaut RISC Core"""		3604310	1					
ANR	3604571	Argument	"""Argonaut RISC Core"""		3604310	0					
ANR	3604572	PrimaryExpression	"""Argonaut RISC Core"""		3604310	0					
ANR	3604573	Label	case EM_H8_300 :	2186:1:63019:63033	3604310	56	True				
ANR	3604574	Identifier	EM_H8_300		3604310	0					
ANR	3604575	ReturnStatement	"return strdup ( ""Hitachi H8/300"" ) ;"	2186:24:63042:63074	3604310	57	True				
ANR	3604576	CallExpression	"strdup ( ""Hitachi H8/300"" )"		3604310	0					
ANR	3604577	Callee	strdup		3604310	0					
ANR	3604578	Identifier	strdup		3604310	0					
ANR	3604579	ArgumentList	"""Hitachi H8/300"""		3604310	1					
ANR	3604580	Argument	"""Hitachi H8/300"""		3604310	0					
ANR	3604581	PrimaryExpression	"""Hitachi H8/300"""		3604310	0					
ANR	3604582	Label	case EM_H8_300H :	2187:1:63077:63092	3604310	58	True				
ANR	3604583	Identifier	EM_H8_300H		3604310	0					
ANR	3604584	ReturnStatement	"return strdup ( ""Hitachi H8/300H"" ) ;"	2187:24:63100:63133	3604310	59	True				
ANR	3604585	CallExpression	"strdup ( ""Hitachi H8/300H"" )"		3604310	0					
ANR	3604586	Callee	strdup		3604310	0					
ANR	3604587	Identifier	strdup		3604310	0					
ANR	3604588	ArgumentList	"""Hitachi H8/300H"""		3604310	1					
ANR	3604589	Argument	"""Hitachi H8/300H"""		3604310	0					
ANR	3604590	PrimaryExpression	"""Hitachi H8/300H"""		3604310	0					
ANR	3604591	Label	case EM_H8S :	2188:1:63136:63147	3604310	60	True				
ANR	3604592	Identifier	EM_H8S		3604310	0					
ANR	3604593	ReturnStatement	"return strdup ( ""Hitachi H8S"" ) ;"	2188:24:63159:63188	3604310	61	True				
ANR	3604594	CallExpression	"strdup ( ""Hitachi H8S"" )"		3604310	0					
ANR	3604595	Callee	strdup		3604310	0					
ANR	3604596	Identifier	strdup		3604310	0					
ANR	3604597	ArgumentList	"""Hitachi H8S"""		3604310	1					
ANR	3604598	Argument	"""Hitachi H8S"""		3604310	0					
ANR	3604599	PrimaryExpression	"""Hitachi H8S"""		3604310	0					
ANR	3604600	Label	case EM_H8_500 :	2189:1:63191:63205	3604310	62	True				
ANR	3604601	Identifier	EM_H8_500		3604310	0					
ANR	3604602	ReturnStatement	"return strdup ( ""Hitachi H8/500"" ) ;"	2189:24:63214:63246	3604310	63	True				
ANR	3604603	CallExpression	"strdup ( ""Hitachi H8/500"" )"		3604310	0					
ANR	3604604	Callee	strdup		3604310	0					
ANR	3604605	Identifier	strdup		3604310	0					
ANR	3604606	ArgumentList	"""Hitachi H8/500"""		3604310	1					
ANR	3604607	Argument	"""Hitachi H8/500"""		3604310	0					
ANR	3604608	PrimaryExpression	"""Hitachi H8/500"""		3604310	0					
ANR	3604609	Label	case EM_IA_64 :	2190:1:63249:63262	3604310	64	True				
ANR	3604610	Identifier	EM_IA_64		3604310	0					
ANR	3604611	ReturnStatement	"return strdup ( ""Intel Merced"" ) ;"	2190:24:63272:63302	3604310	65	True				
ANR	3604612	CallExpression	"strdup ( ""Intel Merced"" )"		3604310	0					
ANR	3604613	Callee	strdup		3604310	0					
ANR	3604614	Identifier	strdup		3604310	0					
ANR	3604615	ArgumentList	"""Intel Merced"""		3604310	1					
ANR	3604616	Argument	"""Intel Merced"""		3604310	0					
ANR	3604617	PrimaryExpression	"""Intel Merced"""		3604310	0					
ANR	3604618	Label	case EM_MIPS_X :	2191:1:63305:63319	3604310	66	True				
ANR	3604619	Identifier	EM_MIPS_X		3604310	0					
ANR	3604620	ReturnStatement	"return strdup ( ""Stanford MIPS-X"" ) ;"	2191:24:63328:63361	3604310	67	True				
ANR	3604621	CallExpression	"strdup ( ""Stanford MIPS-X"" )"		3604310	0					
ANR	3604622	Callee	strdup		3604310	0					
ANR	3604623	Identifier	strdup		3604310	0					
ANR	3604624	ArgumentList	"""Stanford MIPS-X"""		3604310	1					
ANR	3604625	Argument	"""Stanford MIPS-X"""		3604310	0					
ANR	3604626	PrimaryExpression	"""Stanford MIPS-X"""		3604310	0					
ANR	3604627	Label	case EM_COLDFIRE :	2192:1:63364:63380	3604310	68	True				
ANR	3604628	Identifier	EM_COLDFIRE		3604310	0					
ANR	3604629	ReturnStatement	"return strdup ( ""Motorola Coldfire"" ) ;"	2192:24:63387:63422	3604310	69	True				
ANR	3604630	CallExpression	"strdup ( ""Motorola Coldfire"" )"		3604310	0					
ANR	3604631	Callee	strdup		3604310	0					
ANR	3604632	Identifier	strdup		3604310	0					
ANR	3604633	ArgumentList	"""Motorola Coldfire"""		3604310	1					
ANR	3604634	Argument	"""Motorola Coldfire"""		3604310	0					
ANR	3604635	PrimaryExpression	"""Motorola Coldfire"""		3604310	0					
ANR	3604636	Label	case EM_68HC12 :	2193:1:63425:63439	3604310	70	True				
ANR	3604637	Identifier	EM_68HC12		3604310	0					
ANR	3604638	ReturnStatement	"return strdup ( ""Motorola M68HC12"" ) ;"	2193:24:63448:63482	3604310	71	True				
ANR	3604639	CallExpression	"strdup ( ""Motorola M68HC12"" )"		3604310	0					
ANR	3604640	Callee	strdup		3604310	0					
ANR	3604641	Identifier	strdup		3604310	0					
ANR	3604642	ArgumentList	"""Motorola M68HC12"""		3604310	1					
ANR	3604643	Argument	"""Motorola M68HC12"""		3604310	0					
ANR	3604644	PrimaryExpression	"""Motorola M68HC12"""		3604310	0					
ANR	3604645	Label	case EM_MMA :	2194:1:63485:63496	3604310	72	True				
ANR	3604646	Identifier	EM_MMA		3604310	0					
ANR	3604647	ReturnStatement	"return strdup ( ""Fujitsu MMA Multimedia Accelerator"" ) ;"	2194:24:63508:63560	3604310	73	True				
ANR	3604648	CallExpression	"strdup ( ""Fujitsu MMA Multimedia Accelerator"" )"		3604310	0					
ANR	3604649	Callee	strdup		3604310	0					
ANR	3604650	Identifier	strdup		3604310	0					
ANR	3604651	ArgumentList	"""Fujitsu MMA Multimedia Accelerator"""		3604310	1					
ANR	3604652	Argument	"""Fujitsu MMA Multimedia Accelerator"""		3604310	0					
ANR	3604653	PrimaryExpression	"""Fujitsu MMA Multimedia Accelerator"""		3604310	0					
ANR	3604654	Label	case EM_PCP :	2195:1:63563:63574	3604310	74	True				
ANR	3604655	Identifier	EM_PCP		3604310	0					
ANR	3604656	ReturnStatement	"return strdup ( ""Siemens PCP"" ) ;"	2195:24:63586:63615	3604310	75	True				
ANR	3604657	CallExpression	"strdup ( ""Siemens PCP"" )"		3604310	0					
ANR	3604658	Callee	strdup		3604310	0					
ANR	3604659	Identifier	strdup		3604310	0					
ANR	3604660	ArgumentList	"""Siemens PCP"""		3604310	1					
ANR	3604661	Argument	"""Siemens PCP"""		3604310	0					
ANR	3604662	PrimaryExpression	"""Siemens PCP"""		3604310	0					
ANR	3604663	Label	case EM_NCPU :	2196:1:63618:63630	3604310	76	True				
ANR	3604664	Identifier	EM_NCPU		3604310	0					
ANR	3604665	ReturnStatement	"return strdup ( ""Sony nCPU embeeded RISC"" ) ;"	2196:24:63641:63682	3604310	77	True				
ANR	3604666	CallExpression	"strdup ( ""Sony nCPU embeeded RISC"" )"		3604310	0					
ANR	3604667	Callee	strdup		3604310	0					
ANR	3604668	Identifier	strdup		3604310	0					
ANR	3604669	ArgumentList	"""Sony nCPU embeeded RISC"""		3604310	1					
ANR	3604670	Argument	"""Sony nCPU embeeded RISC"""		3604310	0					
ANR	3604671	PrimaryExpression	"""Sony nCPU embeeded RISC"""		3604310	0					
ANR	3604672	Label	case EM_NDR1 :	2197:1:63685:63697	3604310	78	True				
ANR	3604673	Identifier	EM_NDR1		3604310	0					
ANR	3604674	ReturnStatement	"return strdup ( ""Denso NDR1 microprocessor"" ) ;"	2197:24:63708:63751	3604310	79	True				
ANR	3604675	CallExpression	"strdup ( ""Denso NDR1 microprocessor"" )"		3604310	0					
ANR	3604676	Callee	strdup		3604310	0					
ANR	3604677	Identifier	strdup		3604310	0					
ANR	3604678	ArgumentList	"""Denso NDR1 microprocessor"""		3604310	1					
ANR	3604679	Argument	"""Denso NDR1 microprocessor"""		3604310	0					
ANR	3604680	PrimaryExpression	"""Denso NDR1 microprocessor"""		3604310	0					
ANR	3604681	Label	case EM_STARCORE :	2198:1:63754:63770	3604310	80	True				
ANR	3604682	Identifier	EM_STARCORE		3604310	0					
ANR	3604683	ReturnStatement	"return strdup ( ""Motorola Start*Core processor"" ) ;"	2198:24:63777:63824	3604310	81	True				
ANR	3604684	CallExpression	"strdup ( ""Motorola Start*Core processor"" )"		3604310	0					
ANR	3604685	Callee	strdup		3604310	0					
ANR	3604686	Identifier	strdup		3604310	0					
ANR	3604687	ArgumentList	"""Motorola Start*Core processor"""		3604310	1					
ANR	3604688	Argument	"""Motorola Start*Core processor"""		3604310	0					
ANR	3604689	PrimaryExpression	"""Motorola Start*Core processor"""		3604310	0					
ANR	3604690	Label	case EM_ME16 :	2199:1:63827:63839	3604310	82	True				
ANR	3604691	Identifier	EM_ME16		3604310	0					
ANR	3604692	ReturnStatement	"return strdup ( ""Toyota ME16 processor"" ) ;"	2199:24:63850:63889	3604310	83	True				
ANR	3604693	CallExpression	"strdup ( ""Toyota ME16 processor"" )"		3604310	0					
ANR	3604694	Callee	strdup		3604310	0					
ANR	3604695	Identifier	strdup		3604310	0					
ANR	3604696	ArgumentList	"""Toyota ME16 processor"""		3604310	1					
ANR	3604697	Argument	"""Toyota ME16 processor"""		3604310	0					
ANR	3604698	PrimaryExpression	"""Toyota ME16 processor"""		3604310	0					
ANR	3604699	Label	case EM_ST100 :	2200:1:63892:63905	3604310	84	True				
ANR	3604700	Identifier	EM_ST100		3604310	0					
ANR	3604701	ReturnStatement	"return strdup ( ""STMicroelectronic ST100 processor"" ) ;"	2200:24:63915:63966	3604310	85	True				
ANR	3604702	CallExpression	"strdup ( ""STMicroelectronic ST100 processor"" )"		3604310	0					
ANR	3604703	Callee	strdup		3604310	0					
ANR	3604704	Identifier	strdup		3604310	0					
ANR	3604705	ArgumentList	"""STMicroelectronic ST100 processor"""		3604310	1					
ANR	3604706	Argument	"""STMicroelectronic ST100 processor"""		3604310	0					
ANR	3604707	PrimaryExpression	"""STMicroelectronic ST100 processor"""		3604310	0					
ANR	3604708	Label	case EM_TINYJ :	2201:1:63969:63982	3604310	86	True				
ANR	3604709	Identifier	EM_TINYJ		3604310	0					
ANR	3604710	ReturnStatement	"return strdup ( ""Advanced Logic Corp. Tinyj emb.fam"" ) ;"	2201:24:63992:64044	3604310	87	True				
ANR	3604711	CallExpression	"strdup ( ""Advanced Logic Corp. Tinyj emb.fam"" )"		3604310	0					
ANR	3604712	Callee	strdup		3604310	0					
ANR	3604713	Identifier	strdup		3604310	0					
ANR	3604714	ArgumentList	"""Advanced Logic Corp. Tinyj emb.fam"""		3604310	1					
ANR	3604715	Argument	"""Advanced Logic Corp. Tinyj emb.fam"""		3604310	0					
ANR	3604716	PrimaryExpression	"""Advanced Logic Corp. Tinyj emb.fam"""		3604310	0					
ANR	3604717	Label	case EM_X86_64 :	2202:1:64047:64061	3604310	88	True				
ANR	3604718	Identifier	EM_X86_64		3604310	0					
ANR	3604719	ReturnStatement	"return strdup ( ""AMD x86-64 architecture"" ) ;"	2202:24:64070:64111	3604310	89	True				
ANR	3604720	CallExpression	"strdup ( ""AMD x86-64 architecture"" )"		3604310	0					
ANR	3604721	Callee	strdup		3604310	0					
ANR	3604722	Identifier	strdup		3604310	0					
ANR	3604723	ArgumentList	"""AMD x86-64 architecture"""		3604310	1					
ANR	3604724	Argument	"""AMD x86-64 architecture"""		3604310	0					
ANR	3604725	PrimaryExpression	"""AMD x86-64 architecture"""		3604310	0					
ANR	3604726	Label	case EM_LANAI :	2203:1:64114:64127	3604310	90	True				
ANR	3604727	Identifier	EM_LANAI		3604310	0					
ANR	3604728	ReturnStatement	"return strdup ( ""32bit LANAI architecture"" ) ;"	2203:24:64137:64179	3604310	91	True				
ANR	3604729	CallExpression	"strdup ( ""32bit LANAI architecture"" )"		3604310	0					
ANR	3604730	Callee	strdup		3604310	0					
ANR	3604731	Identifier	strdup		3604310	0					
ANR	3604732	ArgumentList	"""32bit LANAI architecture"""		3604310	1					
ANR	3604733	Argument	"""32bit LANAI architecture"""		3604310	0					
ANR	3604734	PrimaryExpression	"""32bit LANAI architecture"""		3604310	0					
ANR	3604735	Label	case EM_PDSP :	2204:1:64182:64194	3604310	92	True				
ANR	3604736	Identifier	EM_PDSP		3604310	0					
ANR	3604737	ReturnStatement	"return strdup ( ""Sony DSP Processor"" ) ;"	2204:24:64205:64241	3604310	93	True				
ANR	3604738	CallExpression	"strdup ( ""Sony DSP Processor"" )"		3604310	0					
ANR	3604739	Callee	strdup		3604310	0					
ANR	3604740	Identifier	strdup		3604310	0					
ANR	3604741	ArgumentList	"""Sony DSP Processor"""		3604310	1					
ANR	3604742	Argument	"""Sony DSP Processor"""		3604310	0					
ANR	3604743	PrimaryExpression	"""Sony DSP Processor"""		3604310	0					
ANR	3604744	Label	case EM_PDP10 :	2205:1:64244:64257	3604310	94	True				
ANR	3604745	Identifier	EM_PDP10		3604310	0					
ANR	3604746	ReturnStatement	"return strdup ( ""Digital Equipment Corp. PDP-10"" ) ;"	2205:24:64267:64315	3604310	95	True				
ANR	3604747	CallExpression	"strdup ( ""Digital Equipment Corp. PDP-10"" )"		3604310	0					
ANR	3604748	Callee	strdup		3604310	0					
ANR	3604749	Identifier	strdup		3604310	0					
ANR	3604750	ArgumentList	"""Digital Equipment Corp. PDP-10"""		3604310	1					
ANR	3604751	Argument	"""Digital Equipment Corp. PDP-10"""		3604310	0					
ANR	3604752	PrimaryExpression	"""Digital Equipment Corp. PDP-10"""		3604310	0					
ANR	3604753	Label	case EM_PDP11 :	2206:1:64318:64331	3604310	96	True				
ANR	3604754	Identifier	EM_PDP11		3604310	0					
ANR	3604755	ReturnStatement	"return strdup ( ""Digital Equipment Corp. PDP-11"" ) ;"	2206:24:64341:64389	3604310	97	True				
ANR	3604756	CallExpression	"strdup ( ""Digital Equipment Corp. PDP-11"" )"		3604310	0					
ANR	3604757	Callee	strdup		3604310	0					
ANR	3604758	Identifier	strdup		3604310	0					
ANR	3604759	ArgumentList	"""Digital Equipment Corp. PDP-11"""		3604310	1					
ANR	3604760	Argument	"""Digital Equipment Corp. PDP-11"""		3604310	0					
ANR	3604761	PrimaryExpression	"""Digital Equipment Corp. PDP-11"""		3604310	0					
ANR	3604762	Label	case EM_FX66 :	2207:1:64392:64404	3604310	98	True				
ANR	3604763	Identifier	EM_FX66		3604310	0					
ANR	3604764	ReturnStatement	"return strdup ( ""Siemens FX66 microcontroller"" ) ;"	2207:24:64415:64461	3604310	99	True				
ANR	3604765	CallExpression	"strdup ( ""Siemens FX66 microcontroller"" )"		3604310	0					
ANR	3604766	Callee	strdup		3604310	0					
ANR	3604767	Identifier	strdup		3604310	0					
ANR	3604768	ArgumentList	"""Siemens FX66 microcontroller"""		3604310	1					
ANR	3604769	Argument	"""Siemens FX66 microcontroller"""		3604310	0					
ANR	3604770	PrimaryExpression	"""Siemens FX66 microcontroller"""		3604310	0					
ANR	3604771	Label	case EM_ST9PLUS :	2208:1:64464:64479	3604310	100	True				
ANR	3604772	Identifier	EM_ST9PLUS		3604310	0					
ANR	3604773	ReturnStatement	"return strdup ( ""STMicroelectronics ST9+ 8/16 mc"" ) ;"	2208:24:64487:64536	3604310	101	True				
ANR	3604774	CallExpression	"strdup ( ""STMicroelectronics ST9+ 8/16 mc"" )"		3604310	0					
ANR	3604775	Callee	strdup		3604310	0					
ANR	3604776	Identifier	strdup		3604310	0					
ANR	3604777	ArgumentList	"""STMicroelectronics ST9+ 8/16 mc"""		3604310	1					
ANR	3604778	Argument	"""STMicroelectronics ST9+ 8/16 mc"""		3604310	0					
ANR	3604779	PrimaryExpression	"""STMicroelectronics ST9+ 8/16 mc"""		3604310	0					
ANR	3604780	Label	case EM_ST7 :	2209:1:64539:64550	3604310	102	True				
ANR	3604781	Identifier	EM_ST7		3604310	0					
ANR	3604782	ReturnStatement	"return strdup ( ""STmicroelectronics ST7 8 bit mc"" ) ;"	2209:24:64562:64611	3604310	103	True				
ANR	3604783	CallExpression	"strdup ( ""STmicroelectronics ST7 8 bit mc"" )"		3604310	0					
ANR	3604784	Callee	strdup		3604310	0					
ANR	3604785	Identifier	strdup		3604310	0					
ANR	3604786	ArgumentList	"""STmicroelectronics ST7 8 bit mc"""		3604310	1					
ANR	3604787	Argument	"""STmicroelectronics ST7 8 bit mc"""		3604310	0					
ANR	3604788	PrimaryExpression	"""STmicroelectronics ST7 8 bit mc"""		3604310	0					
ANR	3604789	Label	case EM_68HC16 :	2210:1:64614:64628	3604310	104	True				
ANR	3604790	Identifier	EM_68HC16		3604310	0					
ANR	3604791	ReturnStatement	"return strdup ( ""Motorola MC68HC16 microcontroller"" ) ;"	2210:24:64637:64688	3604310	105	True				
ANR	3604792	CallExpression	"strdup ( ""Motorola MC68HC16 microcontroller"" )"		3604310	0					
ANR	3604793	Callee	strdup		3604310	0					
ANR	3604794	Identifier	strdup		3604310	0					
ANR	3604795	ArgumentList	"""Motorola MC68HC16 microcontroller"""		3604310	1					
ANR	3604796	Argument	"""Motorola MC68HC16 microcontroller"""		3604310	0					
ANR	3604797	PrimaryExpression	"""Motorola MC68HC16 microcontroller"""		3604310	0					
ANR	3604798	Label	case EM_68HC11 :	2211:1:64691:64705	3604310	106	True				
ANR	3604799	Identifier	EM_68HC11		3604310	0					
ANR	3604800	ReturnStatement	"return strdup ( ""Motorola MC68HC11 microcontroller"" ) ;"	2211:24:64714:64765	3604310	107	True				
ANR	3604801	CallExpression	"strdup ( ""Motorola MC68HC11 microcontroller"" )"		3604310	0					
ANR	3604802	Callee	strdup		3604310	0					
ANR	3604803	Identifier	strdup		3604310	0					
ANR	3604804	ArgumentList	"""Motorola MC68HC11 microcontroller"""		3604310	1					
ANR	3604805	Argument	"""Motorola MC68HC11 microcontroller"""		3604310	0					
ANR	3604806	PrimaryExpression	"""Motorola MC68HC11 microcontroller"""		3604310	0					
ANR	3604807	Label	case EM_68HC08 :	2212:1:64768:64782	3604310	108	True				
ANR	3604808	Identifier	EM_68HC08		3604310	0					
ANR	3604809	ReturnStatement	"return strdup ( ""Motorola MC68HC08 microcontroller"" ) ;"	2212:24:64791:64842	3604310	109	True				
ANR	3604810	CallExpression	"strdup ( ""Motorola MC68HC08 microcontroller"" )"		3604310	0					
ANR	3604811	Callee	strdup		3604310	0					
ANR	3604812	Identifier	strdup		3604310	0					
ANR	3604813	ArgumentList	"""Motorola MC68HC08 microcontroller"""		3604310	1					
ANR	3604814	Argument	"""Motorola MC68HC08 microcontroller"""		3604310	0					
ANR	3604815	PrimaryExpression	"""Motorola MC68HC08 microcontroller"""		3604310	0					
ANR	3604816	Label	case EM_68HC05 :	2213:1:64845:64859	3604310	110	True				
ANR	3604817	Identifier	EM_68HC05		3604310	0					
ANR	3604818	ReturnStatement	"return strdup ( ""Motorola MC68HC05 microcontroller"" ) ;"	2213:24:64868:64919	3604310	111	True				
ANR	3604819	CallExpression	"strdup ( ""Motorola MC68HC05 microcontroller"" )"		3604310	0					
ANR	3604820	Callee	strdup		3604310	0					
ANR	3604821	Identifier	strdup		3604310	0					
ANR	3604822	ArgumentList	"""Motorola MC68HC05 microcontroller"""		3604310	1					
ANR	3604823	Argument	"""Motorola MC68HC05 microcontroller"""		3604310	0					
ANR	3604824	PrimaryExpression	"""Motorola MC68HC05 microcontroller"""		3604310	0					
ANR	3604825	Label	case EM_SVX :	2214:1:64922:64933	3604310	112	True				
ANR	3604826	Identifier	EM_SVX		3604310	0					
ANR	3604827	ReturnStatement	"return strdup ( ""Silicon Graphics SVx"" ) ;"	2214:24:64945:64983	3604310	113	True				
ANR	3604828	CallExpression	"strdup ( ""Silicon Graphics SVx"" )"		3604310	0					
ANR	3604829	Callee	strdup		3604310	0					
ANR	3604830	Identifier	strdup		3604310	0					
ANR	3604831	ArgumentList	"""Silicon Graphics SVx"""		3604310	1					
ANR	3604832	Argument	"""Silicon Graphics SVx"""		3604310	0					
ANR	3604833	PrimaryExpression	"""Silicon Graphics SVx"""		3604310	0					
ANR	3604834	Label	case EM_ST19 :	2215:1:64986:64998	3604310	114	True				
ANR	3604835	Identifier	EM_ST19		3604310	0					
ANR	3604836	ReturnStatement	"return strdup ( ""STMicroelectronics ST19 8 bit mc"" ) ;"	2215:24:65009:65059	3604310	115	True				
ANR	3604837	CallExpression	"strdup ( ""STMicroelectronics ST19 8 bit mc"" )"		3604310	0					
ANR	3604838	Callee	strdup		3604310	0					
ANR	3604839	Identifier	strdup		3604310	0					
ANR	3604840	ArgumentList	"""STMicroelectronics ST19 8 bit mc"""		3604310	1					
ANR	3604841	Argument	"""STMicroelectronics ST19 8 bit mc"""		3604310	0					
ANR	3604842	PrimaryExpression	"""STMicroelectronics ST19 8 bit mc"""		3604310	0					
ANR	3604843	Label	case EM_VAX :	2216:1:65062:65073	3604310	116	True				
ANR	3604844	Identifier	EM_VAX		3604310	0					
ANR	3604845	ReturnStatement	"return strdup ( ""Digital VAX"" ) ;"	2216:24:65085:65114	3604310	117	True				
ANR	3604846	CallExpression	"strdup ( ""Digital VAX"" )"		3604310	0					
ANR	3604847	Callee	strdup		3604310	0					
ANR	3604848	Identifier	strdup		3604310	0					
ANR	3604849	ArgumentList	"""Digital VAX"""		3604310	1					
ANR	3604850	Argument	"""Digital VAX"""		3604310	0					
ANR	3604851	PrimaryExpression	"""Digital VAX"""		3604310	0					
ANR	3604852	Label	case EM_CRIS :	2217:1:65117:65129	3604310	118	True				
ANR	3604853	Identifier	EM_CRIS		3604310	0					
ANR	3604854	ReturnStatement	"return strdup ( ""Axis Communications 32-bit embedded processor"" ) ;"	2217:24:65140:65203	3604310	119	True				
ANR	3604855	CallExpression	"strdup ( ""Axis Communications 32-bit embedded processor"" )"		3604310	0					
ANR	3604856	Callee	strdup		3604310	0					
ANR	3604857	Identifier	strdup		3604310	0					
ANR	3604858	ArgumentList	"""Axis Communications 32-bit embedded processor"""		3604310	1					
ANR	3604859	Argument	"""Axis Communications 32-bit embedded processor"""		3604310	0					
ANR	3604860	PrimaryExpression	"""Axis Communications 32-bit embedded processor"""		3604310	0					
ANR	3604861	Label	case EM_JAVELIN :	2218:1:65206:65221	3604310	120	True				
ANR	3604862	Identifier	EM_JAVELIN		3604310	0					
ANR	3604863	ReturnStatement	"return strdup ( ""Infineon Technologies 32-bit embedded processor"" ) ;"	2218:24:65229:65294	3604310	121	True				
ANR	3604864	CallExpression	"strdup ( ""Infineon Technologies 32-bit embedded processor"" )"		3604310	0					
ANR	3604865	Callee	strdup		3604310	0					
ANR	3604866	Identifier	strdup		3604310	0					
ANR	3604867	ArgumentList	"""Infineon Technologies 32-bit embedded processor"""		3604310	1					
ANR	3604868	Argument	"""Infineon Technologies 32-bit embedded processor"""		3604310	0					
ANR	3604869	PrimaryExpression	"""Infineon Technologies 32-bit embedded processor"""		3604310	0					
ANR	3604870	Label	case EM_FIREPATH :	2219:1:65297:65313	3604310	122	True				
ANR	3604871	Identifier	EM_FIREPATH		3604310	0					
ANR	3604872	ReturnStatement	"return strdup ( ""Element 14 64-bit DSP Processor"" ) ;"	2219:24:65320:65369	3604310	123	True				
ANR	3604873	CallExpression	"strdup ( ""Element 14 64-bit DSP Processor"" )"		3604310	0					
ANR	3604874	Callee	strdup		3604310	0					
ANR	3604875	Identifier	strdup		3604310	0					
ANR	3604876	ArgumentList	"""Element 14 64-bit DSP Processor"""		3604310	1					
ANR	3604877	Argument	"""Element 14 64-bit DSP Processor"""		3604310	0					
ANR	3604878	PrimaryExpression	"""Element 14 64-bit DSP Processor"""		3604310	0					
ANR	3604879	Label	case EM_ZSP :	2220:1:65372:65383	3604310	124	True				
ANR	3604880	Identifier	EM_ZSP		3604310	0					
ANR	3604881	ReturnStatement	"return strdup ( ""LSI Logic 16-bit DSP Processor"" ) ;"	2220:24:65395:65443	3604310	125	True				
ANR	3604882	CallExpression	"strdup ( ""LSI Logic 16-bit DSP Processor"" )"		3604310	0					
ANR	3604883	Callee	strdup		3604310	0					
ANR	3604884	Identifier	strdup		3604310	0					
ANR	3604885	ArgumentList	"""LSI Logic 16-bit DSP Processor"""		3604310	1					
ANR	3604886	Argument	"""LSI Logic 16-bit DSP Processor"""		3604310	0					
ANR	3604887	PrimaryExpression	"""LSI Logic 16-bit DSP Processor"""		3604310	0					
ANR	3604888	Label	case EM_MMIX :	2221:1:65446:65458	3604310	126	True				
ANR	3604889	Identifier	EM_MMIX		3604310	0					
ANR	3604890	ReturnStatement	"return strdup ( ""Donald Knuth's educational 64-bit processor"" ) ;"	2221:24:65469:65530	3604310	127	True				
ANR	3604891	CallExpression	"strdup ( ""Donald Knuth's educational 64-bit processor"" )"		3604310	0					
ANR	3604892	Callee	strdup		3604310	0					
ANR	3604893	Identifier	strdup		3604310	0					
ANR	3604894	ArgumentList	"""Donald Knuth's educational 64-bit processor"""		3604310	1					
ANR	3604895	Argument	"""Donald Knuth's educational 64-bit processor"""		3604310	0					
ANR	3604896	PrimaryExpression	"""Donald Knuth's educational 64-bit processor"""		3604310	0					
ANR	3604897	Label	case EM_HUANY :	2222:1:65533:65546	3604310	128	True				
ANR	3604898	Identifier	EM_HUANY		3604310	0					
ANR	3604899	ReturnStatement	"return strdup ( ""Harvard University machine-independent object files"" ) ;"	2222:24:65556:65625	3604310	129	True				
ANR	3604900	CallExpression	"strdup ( ""Harvard University machine-independent object files"" )"		3604310	0					
ANR	3604901	Callee	strdup		3604310	0					
ANR	3604902	Identifier	strdup		3604310	0					
ANR	3604903	ArgumentList	"""Harvard University machine-independent object files"""		3604310	1					
ANR	3604904	Argument	"""Harvard University machine-independent object files"""		3604310	0					
ANR	3604905	PrimaryExpression	"""Harvard University machine-independent object files"""		3604310	0					
ANR	3604906	Label	case EM_PRISM :	2223:1:65628:65641	3604310	130	True				
ANR	3604907	Identifier	EM_PRISM		3604310	0					
ANR	3604908	ReturnStatement	"return strdup ( ""SiTera Prism"" ) ;"	2223:24:65651:65681	3604310	131	True				
ANR	3604909	CallExpression	"strdup ( ""SiTera Prism"" )"		3604310	0					
ANR	3604910	Callee	strdup		3604310	0					
ANR	3604911	Identifier	strdup		3604310	0					
ANR	3604912	ArgumentList	"""SiTera Prism"""		3604310	1					
ANR	3604913	Argument	"""SiTera Prism"""		3604310	0					
ANR	3604914	PrimaryExpression	"""SiTera Prism"""		3604310	0					
ANR	3604915	Label	case EM_AVR :	2224:1:65684:65695	3604310	132	True				
ANR	3604916	Identifier	EM_AVR		3604310	0					
ANR	3604917	ReturnStatement	"return strdup ( ""Atmel AVR 8-bit microcontroller"" ) ;"	2224:24:65707:65756	3604310	133	True				
ANR	3604918	CallExpression	"strdup ( ""Atmel AVR 8-bit microcontroller"" )"		3604310	0					
ANR	3604919	Callee	strdup		3604310	0					
ANR	3604920	Identifier	strdup		3604310	0					
ANR	3604921	ArgumentList	"""Atmel AVR 8-bit microcontroller"""		3604310	1					
ANR	3604922	Argument	"""Atmel AVR 8-bit microcontroller"""		3604310	0					
ANR	3604923	PrimaryExpression	"""Atmel AVR 8-bit microcontroller"""		3604310	0					
ANR	3604924	Label	case EM_FR30 :	2225:1:65759:65771	3604310	134	True				
ANR	3604925	Identifier	EM_FR30		3604310	0					
ANR	3604926	ReturnStatement	"return strdup ( ""Fujitsu FR30"" ) ;"	2225:24:65782:65812	3604310	135	True				
ANR	3604927	CallExpression	"strdup ( ""Fujitsu FR30"" )"		3604310	0					
ANR	3604928	Callee	strdup		3604310	0					
ANR	3604929	Identifier	strdup		3604310	0					
ANR	3604930	ArgumentList	"""Fujitsu FR30"""		3604310	1					
ANR	3604931	Argument	"""Fujitsu FR30"""		3604310	0					
ANR	3604932	PrimaryExpression	"""Fujitsu FR30"""		3604310	0					
ANR	3604933	Label	case EM_D10V :	2226:1:65815:65827	3604310	136	True				
ANR	3604934	Identifier	EM_D10V		3604310	0					
ANR	3604935	ReturnStatement	"return strdup ( ""Mitsubishi D10V"" ) ;"	2226:24:65838:65871	3604310	137	True				
ANR	3604936	CallExpression	"strdup ( ""Mitsubishi D10V"" )"		3604310	0					
ANR	3604937	Callee	strdup		3604310	0					
ANR	3604938	Identifier	strdup		3604310	0					
ANR	3604939	ArgumentList	"""Mitsubishi D10V"""		3604310	1					
ANR	3604940	Argument	"""Mitsubishi D10V"""		3604310	0					
ANR	3604941	PrimaryExpression	"""Mitsubishi D10V"""		3604310	0					
ANR	3604942	Label	case EM_D30V :	2227:1:65874:65886	3604310	138	True				
ANR	3604943	Identifier	EM_D30V		3604310	0					
ANR	3604944	ReturnStatement	"return strdup ( ""Mitsubishi D30V"" ) ;"	2227:24:65897:65930	3604310	139	True				
ANR	3604945	CallExpression	"strdup ( ""Mitsubishi D30V"" )"		3604310	0					
ANR	3604946	Callee	strdup		3604310	0					
ANR	3604947	Identifier	strdup		3604310	0					
ANR	3604948	ArgumentList	"""Mitsubishi D30V"""		3604310	1					
ANR	3604949	Argument	"""Mitsubishi D30V"""		3604310	0					
ANR	3604950	PrimaryExpression	"""Mitsubishi D30V"""		3604310	0					
ANR	3604951	Label	case EM_V850 :	2228:1:65933:65945	3604310	140	True				
ANR	3604952	Identifier	EM_V850		3604310	0					
ANR	3604953	ReturnStatement	"return strdup ( ""NEC v850"" ) ;"	2228:24:65956:65982	3604310	141	True				
ANR	3604954	CallExpression	"strdup ( ""NEC v850"" )"		3604310	0					
ANR	3604955	Callee	strdup		3604310	0					
ANR	3604956	Identifier	strdup		3604310	0					
ANR	3604957	ArgumentList	"""NEC v850"""		3604310	1					
ANR	3604958	Argument	"""NEC v850"""		3604310	0					
ANR	3604959	PrimaryExpression	"""NEC v850"""		3604310	0					
ANR	3604960	Label	case EM_M32R :	2229:1:65985:65997	3604310	142	True				
ANR	3604961	Identifier	EM_M32R		3604310	0					
ANR	3604962	ReturnStatement	"return strdup ( ""Mitsubishi M32R"" ) ;"	2229:24:66008:66041	3604310	143	True				
ANR	3604963	CallExpression	"strdup ( ""Mitsubishi M32R"" )"		3604310	0					
ANR	3604964	Callee	strdup		3604310	0					
ANR	3604965	Identifier	strdup		3604310	0					
ANR	3604966	ArgumentList	"""Mitsubishi M32R"""		3604310	1					
ANR	3604967	Argument	"""Mitsubishi M32R"""		3604310	0					
ANR	3604968	PrimaryExpression	"""Mitsubishi M32R"""		3604310	0					
ANR	3604969	Label	case EM_MN10300 :	2230:1:66044:66059	3604310	144	True				
ANR	3604970	Identifier	EM_MN10300		3604310	0					
ANR	3604971	ReturnStatement	"return strdup ( ""Matsushita MN10300"" ) ;"	2230:24:66067:66103	3604310	145	True				
ANR	3604972	CallExpression	"strdup ( ""Matsushita MN10300"" )"		3604310	0					
ANR	3604973	Callee	strdup		3604310	0					
ANR	3604974	Identifier	strdup		3604310	0					
ANR	3604975	ArgumentList	"""Matsushita MN10300"""		3604310	1					
ANR	3604976	Argument	"""Matsushita MN10300"""		3604310	0					
ANR	3604977	PrimaryExpression	"""Matsushita MN10300"""		3604310	0					
ANR	3604978	Label	case EM_MN10200 :	2231:1:66106:66121	3604310	146	True				
ANR	3604979	Identifier	EM_MN10200		3604310	0					
ANR	3604980	ReturnStatement	"return strdup ( ""Matsushita MN10200"" ) ;"	2231:24:66129:66165	3604310	147	True				
ANR	3604981	CallExpression	"strdup ( ""Matsushita MN10200"" )"		3604310	0					
ANR	3604982	Callee	strdup		3604310	0					
ANR	3604983	Identifier	strdup		3604310	0					
ANR	3604984	ArgumentList	"""Matsushita MN10200"""		3604310	1					
ANR	3604985	Argument	"""Matsushita MN10200"""		3604310	0					
ANR	3604986	PrimaryExpression	"""Matsushita MN10200"""		3604310	0					
ANR	3604987	Label	case EM_PJ :	2232:1:66168:66178	3604310	148	True				
ANR	3604988	Identifier	EM_PJ		3604310	0					
ANR	3604989	ReturnStatement	"return strdup ( ""picoJava"" ) ;"	2232:24:66191:66217	3604310	149	True				
ANR	3604990	CallExpression	"strdup ( ""picoJava"" )"		3604310	0					
ANR	3604991	Callee	strdup		3604310	0					
ANR	3604992	Identifier	strdup		3604310	0					
ANR	3604993	ArgumentList	"""picoJava"""		3604310	1					
ANR	3604994	Argument	"""picoJava"""		3604310	0					
ANR	3604995	PrimaryExpression	"""picoJava"""		3604310	0					
ANR	3604996	Label	case EM_OPENRISC :	2233:1:66220:66236	3604310	150	True				
ANR	3604997	Identifier	EM_OPENRISC		3604310	0					
ANR	3604998	ReturnStatement	"return strdup ( ""OpenRISC 32-bit embedded processor"" ) ;"	2233:24:66243:66295	3604310	151	True				
ANR	3604999	CallExpression	"strdup ( ""OpenRISC 32-bit embedded processor"" )"		3604310	0					
ANR	3605000	Callee	strdup		3604310	0					
ANR	3605001	Identifier	strdup		3604310	0					
ANR	3605002	ArgumentList	"""OpenRISC 32-bit embedded processor"""		3604310	1					
ANR	3605003	Argument	"""OpenRISC 32-bit embedded processor"""		3604310	0					
ANR	3605004	PrimaryExpression	"""OpenRISC 32-bit embedded processor"""		3604310	0					
ANR	3605005	Label	case EM_ARC_A5 :	2234:1:66298:66312	3604310	152	True				
ANR	3605006	Identifier	EM_ARC_A5		3604310	0					
ANR	3605007	ReturnStatement	"return strdup ( ""ARC Cores Tangent-A5"" ) ;"	2234:24:66321:66359	3604310	153	True				
ANR	3605008	CallExpression	"strdup ( ""ARC Cores Tangent-A5"" )"		3604310	0					
ANR	3605009	Callee	strdup		3604310	0					
ANR	3605010	Identifier	strdup		3604310	0					
ANR	3605011	ArgumentList	"""ARC Cores Tangent-A5"""		3604310	1					
ANR	3605012	Argument	"""ARC Cores Tangent-A5"""		3604310	0					
ANR	3605013	PrimaryExpression	"""ARC Cores Tangent-A5"""		3604310	0					
ANR	3605014	Label	case EM_XTENSA :	2235:1:66362:66376	3604310	154	True				
ANR	3605015	Identifier	EM_XTENSA		3604310	0					
ANR	3605016	ReturnStatement	"return strdup ( ""Tensilica Xtensa Architecture"" ) ;"	2235:24:66385:66432	3604310	155	True				
ANR	3605017	CallExpression	"strdup ( ""Tensilica Xtensa Architecture"" )"		3604310	0					
ANR	3605018	Callee	strdup		3604310	0					
ANR	3605019	Identifier	strdup		3604310	0					
ANR	3605020	ArgumentList	"""Tensilica Xtensa Architecture"""		3604310	1					
ANR	3605021	Argument	"""Tensilica Xtensa Architecture"""		3604310	0					
ANR	3605022	PrimaryExpression	"""Tensilica Xtensa Architecture"""		3604310	0					
ANR	3605023	Label	case EM_AARCH64 :	2236:1:66435:66450	3604310	156	True				
ANR	3605024	Identifier	EM_AARCH64		3604310	0					
ANR	3605025	ReturnStatement	"return strdup ( ""ARM aarch64"" ) ;"	2236:24:66458:66487	3604310	157	True				
ANR	3605026	CallExpression	"strdup ( ""ARM aarch64"" )"		3604310	0					
ANR	3605027	Callee	strdup		3604310	0					
ANR	3605028	Identifier	strdup		3604310	0					
ANR	3605029	ArgumentList	"""ARM aarch64"""		3604310	1					
ANR	3605030	Argument	"""ARM aarch64"""		3604310	0					
ANR	3605031	PrimaryExpression	"""ARM aarch64"""		3604310	0					
ANR	3605032	Label	case EM_PROPELLER :	2237:1:66490:66507	3604310	158	True				
ANR	3605033	Identifier	EM_PROPELLER		3604310	0					
ANR	3605034	ReturnStatement	"return strdup ( ""Parallax Propeller"" ) ;"	2237:24:66513:66549	3604310	159	True				
ANR	3605035	CallExpression	"strdup ( ""Parallax Propeller"" )"		3604310	0					
ANR	3605036	Callee	strdup		3604310	0					
ANR	3605037	Identifier	strdup		3604310	0					
ANR	3605038	ArgumentList	"""Parallax Propeller"""		3604310	1					
ANR	3605039	Argument	"""Parallax Propeller"""		3604310	0					
ANR	3605040	PrimaryExpression	"""Parallax Propeller"""		3604310	0					
ANR	3605041	Label	case EM_MICROBLAZE :	2238:1:66552:66570	3604310	160	True				
ANR	3605042	Identifier	EM_MICROBLAZE		3604310	0					
ANR	3605043	ReturnStatement	"return strdup ( ""Xilinx MicroBlaze"" ) ;"	2238:24:66575:66610	3604310	161	True				
ANR	3605044	CallExpression	"strdup ( ""Xilinx MicroBlaze"" )"		3604310	0					
ANR	3605045	Callee	strdup		3604310	0					
ANR	3605046	Identifier	strdup		3604310	0					
ANR	3605047	ArgumentList	"""Xilinx MicroBlaze"""		3604310	1					
ANR	3605048	Argument	"""Xilinx MicroBlaze"""		3604310	0					
ANR	3605049	PrimaryExpression	"""Xilinx MicroBlaze"""		3604310	0					
ANR	3605050	Label	case EM_RISCV :	2239:1:66613:66626	3604310	162	True				
ANR	3605051	Identifier	EM_RISCV		3604310	0					
ANR	3605052	ReturnStatement	"return strdup ( ""RISC V"" ) ;"	2239:24:66636:66660	3604310	163	True				
ANR	3605053	CallExpression	"strdup ( ""RISC V"" )"		3604310	0					
ANR	3605054	Callee	strdup		3604310	0					
ANR	3605055	Identifier	strdup		3604310	0					
ANR	3605056	ArgumentList	"""RISC V"""		3604310	1					
ANR	3605057	Argument	"""RISC V"""		3604310	0					
ANR	3605058	PrimaryExpression	"""RISC V"""		3604310	0					
ANR	3605059	Label	case EM_VIDEOCORE3 :	2240:1:66663:66681	3604310	164	True				
ANR	3605060	Identifier	EM_VIDEOCORE3		3604310	0					
ANR	3605061	ReturnStatement	"return strdup ( ""VideoCore III"" ) ;"	2240:24:66686:66717	3604310	165	True				
ANR	3605062	CallExpression	"strdup ( ""VideoCore III"" )"		3604310	0					
ANR	3605063	Callee	strdup		3604310	0					
ANR	3605064	Identifier	strdup		3604310	0					
ANR	3605065	ArgumentList	"""VideoCore III"""		3604310	1					
ANR	3605066	Argument	"""VideoCore III"""		3604310	0					
ANR	3605067	PrimaryExpression	"""VideoCore III"""		3604310	0					
ANR	3605068	Label	case EM_VIDEOCORE4 :	2241:1:66720:66738	3604310	166	True				
ANR	3605069	Identifier	EM_VIDEOCORE4		3604310	0					
ANR	3605070	ReturnStatement	"return strdup ( ""VideoCore IV"" ) ;"	2241:24:66743:66773	3604310	167	True				
ANR	3605071	CallExpression	"strdup ( ""VideoCore IV"" )"		3604310	0					
ANR	3605072	Callee	strdup		3604310	0					
ANR	3605073	Identifier	strdup		3604310	0					
ANR	3605074	ArgumentList	"""VideoCore IV"""		3604310	1					
ANR	3605075	Argument	"""VideoCore IV"""		3604310	0					
ANR	3605076	PrimaryExpression	"""VideoCore IV"""		3604310	0					
ANR	3605077	Label	case EM_LATTICEMICO32 :	2242:1:66776:66797	3604310	168	True				
ANR	3605078	Identifier	EM_LATTICEMICO32		3604310	0					
ANR	3605079	ReturnStatement	"return strdup ( ""RISC processor for Lattice FPGA architecture"" ) ;"	2242:24:66799:66861	3604310	169	True				
ANR	3605080	CallExpression	"strdup ( ""RISC processor for Lattice FPGA architecture"" )"		3604310	0					
ANR	3605081	Callee	strdup		3604310	0					
ANR	3605082	Identifier	strdup		3604310	0					
ANR	3605083	ArgumentList	"""RISC processor for Lattice FPGA architecture"""		3604310	1					
ANR	3605084	Argument	"""RISC processor for Lattice FPGA architecture"""		3604310	0					
ANR	3605085	PrimaryExpression	"""RISC processor for Lattice FPGA architecture"""		3604310	0					
ANR	3605086	Label	case EM_SE_C17 :	2243:1:66864:66878	3604310	170	True				
ANR	3605087	Identifier	EM_SE_C17		3604310	0					
ANR	3605088	ReturnStatement	"return strdup ( ""Seiko Epson C17 family"" ) ;"	2243:24:66887:66927	3604310	171	True				
ANR	3605089	CallExpression	"strdup ( ""Seiko Epson C17 family"" )"		3604310	0					
ANR	3605090	Callee	strdup		3604310	0					
ANR	3605091	Identifier	strdup		3604310	0					
ANR	3605092	ArgumentList	"""Seiko Epson C17 family"""		3604310	1					
ANR	3605093	Argument	"""Seiko Epson C17 family"""		3604310	0					
ANR	3605094	PrimaryExpression	"""Seiko Epson C17 family"""		3604310	0					
ANR	3605095	Label	case EM_TI_C6000 :	2244:1:66930:66946	3604310	172	True				
ANR	3605096	Identifier	EM_TI_C6000		3604310	0					
ANR	3605097	ReturnStatement	"return strdup ( ""The Texas Instruments TMS320C6000 DSP family"" ) ;"	2244:24:66953:67015	3604310	173	True				
ANR	3605098	CallExpression	"strdup ( ""The Texas Instruments TMS320C6000 DSP family"" )"		3604310	0					
ANR	3605099	Callee	strdup		3604310	0					
ANR	3605100	Identifier	strdup		3604310	0					
ANR	3605101	ArgumentList	"""The Texas Instruments TMS320C6000 DSP family"""		3604310	1					
ANR	3605102	Argument	"""The Texas Instruments TMS320C6000 DSP family"""		3604310	0					
ANR	3605103	PrimaryExpression	"""The Texas Instruments TMS320C6000 DSP family"""		3604310	0					
ANR	3605104	Label	case EM_TI_C2000 :	2245:1:67018:67034	3604310	174	True				
ANR	3605105	Identifier	EM_TI_C2000		3604310	0					
ANR	3605106	ReturnStatement	"return strdup ( ""The Texas Instruments TMS320C2000 DSP family"" ) ;"	2245:24:67041:67103	3604310	175	True				
ANR	3605107	CallExpression	"strdup ( ""The Texas Instruments TMS320C2000 DSP family"" )"		3604310	0					
ANR	3605108	Callee	strdup		3604310	0					
ANR	3605109	Identifier	strdup		3604310	0					
ANR	3605110	ArgumentList	"""The Texas Instruments TMS320C2000 DSP family"""		3604310	1					
ANR	3605111	Argument	"""The Texas Instruments TMS320C2000 DSP family"""		3604310	0					
ANR	3605112	PrimaryExpression	"""The Texas Instruments TMS320C2000 DSP family"""		3604310	0					
ANR	3605113	Label	case EM_TI_C5500 :	2246:1:67106:67122	3604310	176	True				
ANR	3605114	Identifier	EM_TI_C5500		3604310	0					
ANR	3605115	ReturnStatement	"return strdup ( ""The Texas Instruments TMS320C55x DSP family"" ) ;"	2246:24:67129:67190	3604310	177	True				
ANR	3605116	CallExpression	"strdup ( ""The Texas Instruments TMS320C55x DSP family"" )"		3604310	0					
ANR	3605117	Callee	strdup		3604310	0					
ANR	3605118	Identifier	strdup		3604310	0					
ANR	3605119	ArgumentList	"""The Texas Instruments TMS320C55x DSP family"""		3604310	1					
ANR	3605120	Argument	"""The Texas Instruments TMS320C55x DSP family"""		3604310	0					
ANR	3605121	PrimaryExpression	"""The Texas Instruments TMS320C55x DSP family"""		3604310	0					
ANR	3605122	Label	case EM_TI_ARP32 :	2247:1:67193:67209	3604310	178	True				
ANR	3605123	Identifier	EM_TI_ARP32		3604310	0					
ANR	3605124	ReturnStatement	"return strdup ( ""Texas Instruments Application Specific RISC Processor, 32bit fetch"" ) ;"	2247:24:67216:67300	3604310	179	True				
ANR	3605125	CallExpression	"strdup ( ""Texas Instruments Application Specific RISC Processor, 32bit fetch"" )"		3604310	0					
ANR	3605126	Callee	strdup		3604310	0					
ANR	3605127	Identifier	strdup		3604310	0					
ANR	3605128	ArgumentList	"""Texas Instruments Application Specific RISC Processor, 32bit fetch"""		3604310	1					
ANR	3605129	Argument	"""Texas Instruments Application Specific RISC Processor, 32bit fetch"""		3604310	0					
ANR	3605130	PrimaryExpression	"""Texas Instruments Application Specific RISC Processor, 32bit fetch"""		3604310	0					
ANR	3605131	Label	case EM_TI_PRU :	2248:1:67303:67317	3604310	180	True				
ANR	3605132	Identifier	EM_TI_PRU		3604310	0					
ANR	3605133	ReturnStatement	"return strdup ( ""Texas Instruments Programmable Realtime Unit"" ) ;"	2248:24:67326:67388	3604310	181	True				
ANR	3605134	CallExpression	"strdup ( ""Texas Instruments Programmable Realtime Unit"" )"		3604310	0					
ANR	3605135	Callee	strdup		3604310	0					
ANR	3605136	Identifier	strdup		3604310	0					
ANR	3605137	ArgumentList	"""Texas Instruments Programmable Realtime Unit"""		3604310	1					
ANR	3605138	Argument	"""Texas Instruments Programmable Realtime Unit"""		3604310	0					
ANR	3605139	PrimaryExpression	"""Texas Instruments Programmable Realtime Unit"""		3604310	0					
ANR	3605140	Label	case EM_MMDSP_PLUS :	2249:1:67391:67409	3604310	182	True				
ANR	3605141	Identifier	EM_MMDSP_PLUS		3604310	0					
ANR	3605142	ReturnStatement	"return strdup ( ""STMicroelectronics 64bit VLIW Data Signal Processor"" ) ;"	2249:24:67414:67483	3604310	183	True				
ANR	3605143	CallExpression	"strdup ( ""STMicroelectronics 64bit VLIW Data Signal Processor"" )"		3604310	0					
ANR	3605144	Callee	strdup		3604310	0					
ANR	3605145	Identifier	strdup		3604310	0					
ANR	3605146	ArgumentList	"""STMicroelectronics 64bit VLIW Data Signal Processor"""		3604310	1					
ANR	3605147	Argument	"""STMicroelectronics 64bit VLIW Data Signal Processor"""		3604310	0					
ANR	3605148	PrimaryExpression	"""STMicroelectronics 64bit VLIW Data Signal Processor"""		3604310	0					
ANR	3605149	Label	case EM_CYPRESS_M8C :	2250:1:67486:67505	3604310	184	True				
ANR	3605150	Identifier	EM_CYPRESS_M8C		3604310	0					
ANR	3605151	ReturnStatement	"return strdup ( ""Cypress M8C microprocessor"" ) ;"	2250:24:67509:67553	3604310	185	True				
ANR	3605152	CallExpression	"strdup ( ""Cypress M8C microprocessor"" )"		3604310	0					
ANR	3605153	Callee	strdup		3604310	0					
ANR	3605154	Identifier	strdup		3604310	0					
ANR	3605155	ArgumentList	"""Cypress M8C microprocessor"""		3604310	1					
ANR	3605156	Argument	"""Cypress M8C microprocessor"""		3604310	0					
ANR	3605157	PrimaryExpression	"""Cypress M8C microprocessor"""		3604310	0					
ANR	3605158	Label	case EM_R32C :	2251:1:67556:67568	3604310	186	True				
ANR	3605159	Identifier	EM_R32C		3604310	0					
ANR	3605160	ReturnStatement	"return strdup ( ""Renesas R32C series microprocessors"" ) ;"	2251:24:67579:67632	3604310	187	True				
ANR	3605161	CallExpression	"strdup ( ""Renesas R32C series microprocessors"" )"		3604310	0					
ANR	3605162	Callee	strdup		3604310	0					
ANR	3605163	Identifier	strdup		3604310	0					
ANR	3605164	ArgumentList	"""Renesas R32C series microprocessors"""		3604310	1					
ANR	3605165	Argument	"""Renesas R32C series microprocessors"""		3604310	0					
ANR	3605166	PrimaryExpression	"""Renesas R32C series microprocessors"""		3604310	0					
ANR	3605167	Label	case EM_TRIMEDIA :	2252:1:67635:67651	3604310	188	True				
ANR	3605168	Identifier	EM_TRIMEDIA		3604310	0					
ANR	3605169	ReturnStatement	"return strdup ( ""NXP Semiconductors TriMedia architecture family"" ) ;"	2252:24:67658:67723	3604310	189	True				
ANR	3605170	CallExpression	"strdup ( ""NXP Semiconductors TriMedia architecture family"" )"		3604310	0					
ANR	3605171	Callee	strdup		3604310	0					
ANR	3605172	Identifier	strdup		3604310	0					
ANR	3605173	ArgumentList	"""NXP Semiconductors TriMedia architecture family"""		3604310	1					
ANR	3605174	Argument	"""NXP Semiconductors TriMedia architecture family"""		3604310	0					
ANR	3605175	PrimaryExpression	"""NXP Semiconductors TriMedia architecture family"""		3604310	0					
ANR	3605176	Label	case EM_QDSP6 :	2253:1:67726:67739	3604310	190	True				
ANR	3605177	Identifier	EM_QDSP6		3604310	0					
ANR	3605178	ReturnStatement	"return strdup ( ""QUALCOMM DSP6 Processor"" ) ;"	2253:24:67749:67790	3604310	191	True				
ANR	3605179	CallExpression	"strdup ( ""QUALCOMM DSP6 Processor"" )"		3604310	0					
ANR	3605180	Callee	strdup		3604310	0					
ANR	3605181	Identifier	strdup		3604310	0					
ANR	3605182	ArgumentList	"""QUALCOMM DSP6 Processor"""		3604310	1					
ANR	3605183	Argument	"""QUALCOMM DSP6 Processor"""		3604310	0					
ANR	3605184	PrimaryExpression	"""QUALCOMM DSP6 Processor"""		3604310	0					
ANR	3605185	Label	case EM_8051 :	2254:1:67809:67821	3604310	192	True				
ANR	3605186	Identifier	EM_8051		3604310	0					
ANR	3605187	ReturnStatement	"return strdup ( ""Intel 8051 and variants"" ) ;"	2254:24:67832:67873	3604310	193	True				
ANR	3605188	CallExpression	"strdup ( ""Intel 8051 and variants"" )"		3604310	0					
ANR	3605189	Callee	strdup		3604310	0					
ANR	3605190	Identifier	strdup		3604310	0					
ANR	3605191	ArgumentList	"""Intel 8051 and variants"""		3604310	1					
ANR	3605192	Argument	"""Intel 8051 and variants"""		3604310	0					
ANR	3605193	PrimaryExpression	"""Intel 8051 and variants"""		3604310	0					
ANR	3605194	Label	case EM_STXP7X :	2255:1:67876:67890	3604310	194	True				
ANR	3605195	Identifier	EM_STXP7X		3604310	0					
ANR	3605196	ReturnStatement	"return strdup ( ""STMicroelectronics STxP7x family of configurable and extensible RISC processors"" ) ;"	2255:24:67899:67996	3604310	195	True				
ANR	3605197	CallExpression	"strdup ( ""STMicroelectronics STxP7x family of configurable and extensible RISC processors"" )"		3604310	0					
ANR	3605198	Callee	strdup		3604310	0					
ANR	3605199	Identifier	strdup		3604310	0					
ANR	3605200	ArgumentList	"""STMicroelectronics STxP7x family of configurable and extensible RISC processors"""		3604310	1					
ANR	3605201	Argument	"""STMicroelectronics STxP7x family of configurable and extensible RISC processors"""		3604310	0					
ANR	3605202	PrimaryExpression	"""STMicroelectronics STxP7x family of configurable and extensible RISC processors"""		3604310	0					
ANR	3605203	Label	case EM_NDS32 :	2256:1:67999:68012	3604310	196	True				
ANR	3605204	Identifier	EM_NDS32		3604310	0					
ANR	3605205	ReturnStatement	"return strdup ( ""Andes Technology compact code size embedded RISC processor family"" ) ;"	2256:24:68022:68105	3604310	197	True				
ANR	3605206	CallExpression	"strdup ( ""Andes Technology compact code size embedded RISC processor family"" )"		3604310	0					
ANR	3605207	Callee	strdup		3604310	0					
ANR	3605208	Identifier	strdup		3604310	0					
ANR	3605209	ArgumentList	"""Andes Technology compact code size embedded RISC processor family"""		3604310	1					
ANR	3605210	Argument	"""Andes Technology compact code size embedded RISC processor family"""		3604310	0					
ANR	3605211	PrimaryExpression	"""Andes Technology compact code size embedded RISC processor family"""		3604310	0					
ANR	3605212	Label	case EM_ECOG1 :	2257:1:68108:68121	3604310	198	True				
ANR	3605213	Identifier	EM_ECOG1		3604310	0					
ANR	3605214	ReturnStatement	"return strdup ( ""Cyan Technology eCOG1X family"" ) ;"	2257:24:68131:68178	3604310	199	True				
ANR	3605215	CallExpression	"strdup ( ""Cyan Technology eCOG1X family"" )"		3604310	0					
ANR	3605216	Callee	strdup		3604310	0					
ANR	3605217	Identifier	strdup		3604310	0					
ANR	3605218	ArgumentList	"""Cyan Technology eCOG1X family"""		3604310	1					
ANR	3605219	Argument	"""Cyan Technology eCOG1X family"""		3604310	0					
ANR	3605220	PrimaryExpression	"""Cyan Technology eCOG1X family"""		3604310	0					
ANR	3605221	Label	case EM_MAXQ30 :	2259:1:68273:68287	3604310	200	True				
ANR	3605222	Identifier	EM_MAXQ30		3604310	0					
ANR	3605223	ReturnStatement	"return strdup ( ""Dallas Semiconductor MAXQ30 Core Micro-controllers"" ) ;"	2259:24:68296:68364	3604310	201	True				
ANR	3605224	CallExpression	"strdup ( ""Dallas Semiconductor MAXQ30 Core Micro-controllers"" )"		3604310	0					
ANR	3605225	Callee	strdup		3604310	0					
ANR	3605226	Identifier	strdup		3604310	0					
ANR	3605227	ArgumentList	"""Dallas Semiconductor MAXQ30 Core Micro-controllers"""		3604310	1					
ANR	3605228	Argument	"""Dallas Semiconductor MAXQ30 Core Micro-controllers"""		3604310	0					
ANR	3605229	PrimaryExpression	"""Dallas Semiconductor MAXQ30 Core Micro-controllers"""		3604310	0					
ANR	3605230	Label	case EM_XIMO16 :	2260:1:68367:68381	3604310	202	True				
ANR	3605231	Identifier	EM_XIMO16		3604310	0					
ANR	3605232	ReturnStatement	"return strdup ( ""New Japan Radio (NJR) 16-bit DSP Processor"" ) ;"	2260:24:68390:68450	3604310	203	True				
ANR	3605233	CallExpression	"strdup ( ""New Japan Radio (NJR) 16-bit DSP Processor"" )"		3604310	0					
ANR	3605234	Callee	strdup		3604310	0					
ANR	3605235	Identifier	strdup		3604310	0					
ANR	3605236	ArgumentList	"""New Japan Radio (NJR) 16-bit DSP Processor"""		3604310	1					
ANR	3605237	Argument	"""New Japan Radio (NJR) 16-bit DSP Processor"""		3604310	0					
ANR	3605238	PrimaryExpression	"""New Japan Radio (NJR) 16-bit DSP Processor"""		3604310	0					
ANR	3605239	Label	case EM_MANIK :	2261:1:68453:68466	3604310	204	True				
ANR	3605240	Identifier	EM_MANIK		3604310	0					
ANR	3605241	ReturnStatement	"return strdup ( ""M2000 Reconfigurable RISC Microprocessor"" ) ;"	2261:24:68476:68534	3604310	205	True				
ANR	3605242	CallExpression	"strdup ( ""M2000 Reconfigurable RISC Microprocessor"" )"		3604310	0					
ANR	3605243	Callee	strdup		3604310	0					
ANR	3605244	Identifier	strdup		3604310	0					
ANR	3605245	ArgumentList	"""M2000 Reconfigurable RISC Microprocessor"""		3604310	1					
ANR	3605246	Argument	"""M2000 Reconfigurable RISC Microprocessor"""		3604310	0					
ANR	3605247	PrimaryExpression	"""M2000 Reconfigurable RISC Microprocessor"""		3604310	0					
ANR	3605248	Label	case EM_CRAYNV2 :	2262:1:68537:68552	3604310	206	True				
ANR	3605249	Identifier	EM_CRAYNV2		3604310	0					
ANR	3605250	ReturnStatement	"return strdup ( ""Cray Inc. NV2 vector architecture"" ) ;"	2262:24:68560:68611	3604310	207	True				
ANR	3605251	CallExpression	"strdup ( ""Cray Inc. NV2 vector architecture"" )"		3604310	0					
ANR	3605252	Callee	strdup		3604310	0					
ANR	3605253	Identifier	strdup		3604310	0					
ANR	3605254	ArgumentList	"""Cray Inc. NV2 vector architecture"""		3604310	1					
ANR	3605255	Argument	"""Cray Inc. NV2 vector architecture"""		3604310	0					
ANR	3605256	PrimaryExpression	"""Cray Inc. NV2 vector architecture"""		3604310	0					
ANR	3605257	Label	case EM_RX :	2263:1:68614:68624	3604310	208	True				
ANR	3605258	Identifier	EM_RX		3604310	0					
ANR	3605259	ReturnStatement	"return strdup ( ""Renesas RX family"" ) ;"	2263:24:68637:68672	3604310	209	True				
ANR	3605260	CallExpression	"strdup ( ""Renesas RX family"" )"		3604310	0					
ANR	3605261	Callee	strdup		3604310	0					
ANR	3605262	Identifier	strdup		3604310	0					
ANR	3605263	ArgumentList	"""Renesas RX family"""		3604310	1					
ANR	3605264	Argument	"""Renesas RX family"""		3604310	0					
ANR	3605265	PrimaryExpression	"""Renesas RX family"""		3604310	0					
ANR	3605266	Label	case EM_METAG :	2264:1:68675:68688	3604310	210	True				
ANR	3605267	Identifier	EM_METAG		3604310	0					
ANR	3605268	ReturnStatement	"return strdup ( ""Imagination Technologies META processor architecture"" ) ;"	2264:24:68698:68768	3604310	211	True				
ANR	3605269	CallExpression	"strdup ( ""Imagination Technologies META processor architecture"" )"		3604310	0					
ANR	3605270	Callee	strdup		3604310	0					
ANR	3605271	Identifier	strdup		3604310	0					
ANR	3605272	ArgumentList	"""Imagination Technologies META processor architecture"""		3604310	1					
ANR	3605273	Argument	"""Imagination Technologies META processor architecture"""		3604310	0					
ANR	3605274	PrimaryExpression	"""Imagination Technologies META processor architecture"""		3604310	0					
ANR	3605275	Label	case EM_MCST_ELBRUS :	2265:1:68771:68790	3604310	212	True				
ANR	3605276	Identifier	EM_MCST_ELBRUS		3604310	0					
ANR	3605277	ReturnStatement	"return strdup ( ""MCST Elbrus general purpose hardware architecture"" ) ;"	2265:24:68794:68861	3604310	213	True				
ANR	3605278	CallExpression	"strdup ( ""MCST Elbrus general purpose hardware architecture"" )"		3604310	0					
ANR	3605279	Callee	strdup		3604310	0					
ANR	3605280	Identifier	strdup		3604310	0					
ANR	3605281	ArgumentList	"""MCST Elbrus general purpose hardware architecture"""		3604310	1					
ANR	3605282	Argument	"""MCST Elbrus general purpose hardware architecture"""		3604310	0					
ANR	3605283	PrimaryExpression	"""MCST Elbrus general purpose hardware architecture"""		3604310	0					
ANR	3605284	Label	case EM_ECOG16 :	2266:1:68864:68878	3604310	214	True				
ANR	3605285	Identifier	EM_ECOG16		3604310	0					
ANR	3605286	ReturnStatement	"return strdup ( ""Cyan Technology eCOG16 family"" ) ;"	2266:24:68887:68934	3604310	215	True				
ANR	3605287	CallExpression	"strdup ( ""Cyan Technology eCOG16 family"" )"		3604310	0					
ANR	3605288	Callee	strdup		3604310	0					
ANR	3605289	Identifier	strdup		3604310	0					
ANR	3605290	ArgumentList	"""Cyan Technology eCOG16 family"""		3604310	1					
ANR	3605291	Argument	"""Cyan Technology eCOG16 family"""		3604310	0					
ANR	3605292	PrimaryExpression	"""Cyan Technology eCOG16 family"""		3604310	0					
ANR	3605293	Label	case EM_CR16 :	2267:1:68937:68949	3604310	216	True				
ANR	3605294	Identifier	EM_CR16		3604310	0					
ANR	3605295	ReturnStatement	"return strdup ( ""National Semiconductor CompactRISC CR16 16-bit microprocessor"" ) ;"	2267:24:68960:69039	3604310	217	True				
ANR	3605296	CallExpression	"strdup ( ""National Semiconductor CompactRISC CR16 16-bit microprocessor"" )"		3604310	0					
ANR	3605297	Callee	strdup		3604310	0					
ANR	3605298	Identifier	strdup		3604310	0					
ANR	3605299	ArgumentList	"""National Semiconductor CompactRISC CR16 16-bit microprocessor"""		3604310	1					
ANR	3605300	Argument	"""National Semiconductor CompactRISC CR16 16-bit microprocessor"""		3604310	0					
ANR	3605301	PrimaryExpression	"""National Semiconductor CompactRISC CR16 16-bit microprocessor"""		3604310	0					
ANR	3605302	Label	case EM_ETPU :	2268:1:69042:69054	3604310	218	True				
ANR	3605303	Identifier	EM_ETPU		3604310	0					
ANR	3605304	ReturnStatement	"return strdup ( ""Freescale Extended Time Processing Unit"" ) ;"	2268:24:69065:69122	3604310	219	True				
ANR	3605305	CallExpression	"strdup ( ""Freescale Extended Time Processing Unit"" )"		3604310	0					
ANR	3605306	Callee	strdup		3604310	0					
ANR	3605307	Identifier	strdup		3604310	0					
ANR	3605308	ArgumentList	"""Freescale Extended Time Processing Unit"""		3604310	1					
ANR	3605309	Argument	"""Freescale Extended Time Processing Unit"""		3604310	0					
ANR	3605310	PrimaryExpression	"""Freescale Extended Time Processing Unit"""		3604310	0					
ANR	3605311	Label	case EM_SLE9X :	2269:1:69125:69138	3604310	220	True				
ANR	3605312	Identifier	EM_SLE9X		3604310	0					
ANR	3605313	ReturnStatement	"return strdup ( ""Infineon Technologies SLE9X core"" ) ;"	2269:24:69148:69198	3604310	221	True				
ANR	3605314	CallExpression	"strdup ( ""Infineon Technologies SLE9X core"" )"		3604310	0					
ANR	3605315	Callee	strdup		3604310	0					
ANR	3605316	Identifier	strdup		3604310	0					
ANR	3605317	ArgumentList	"""Infineon Technologies SLE9X core"""		3604310	1					
ANR	3605318	Argument	"""Infineon Technologies SLE9X core"""		3604310	0					
ANR	3605319	PrimaryExpression	"""Infineon Technologies SLE9X core"""		3604310	0					
ANR	3605320	Label	case EM_L10M :	2270:1:69201:69213	3604310	222	True				
ANR	3605321	Identifier	EM_L10M		3604310	0					
ANR	3605322	ReturnStatement	"return strdup ( ""Intel L10M"" ) ;"	2270:24:69224:69252	3604310	223	True				
ANR	3605323	CallExpression	"strdup ( ""Intel L10M"" )"		3604310	0					
ANR	3605324	Callee	strdup		3604310	0					
ANR	3605325	Identifier	strdup		3604310	0					
ANR	3605326	ArgumentList	"""Intel L10M"""		3604310	1					
ANR	3605327	Argument	"""Intel L10M"""		3604310	0					
ANR	3605328	PrimaryExpression	"""Intel L10M"""		3604310	0					
ANR	3605329	Label	case EM_K10M :	2271:1:69255:69267	3604310	224	True				
ANR	3605330	Identifier	EM_K10M		3604310	0					
ANR	3605331	ReturnStatement	"return strdup ( ""Intel K10M"" ) ;"	2271:24:69278:69306	3604310	225	True				
ANR	3605332	CallExpression	"strdup ( ""Intel K10M"" )"		3604310	0					
ANR	3605333	Callee	strdup		3604310	0					
ANR	3605334	Identifier	strdup		3604310	0					
ANR	3605335	ArgumentList	"""Intel K10M"""		3604310	1					
ANR	3605336	Argument	"""Intel K10M"""		3604310	0					
ANR	3605337	PrimaryExpression	"""Intel K10M"""		3604310	0					
ANR	3605338	Label	case EM_AVR32 :	2273:1:69405:69418	3604310	226	True				
ANR	3605339	Identifier	EM_AVR32		3604310	0					
ANR	3605340	ReturnStatement	"return strdup ( ""Atmel Corporation 32-bit microprocessor family"" ) ;"	2273:24:69428:69492	3604310	227	True				
ANR	3605341	CallExpression	"strdup ( ""Atmel Corporation 32-bit microprocessor family"" )"		3604310	0					
ANR	3605342	Callee	strdup		3604310	0					
ANR	3605343	Identifier	strdup		3604310	0					
ANR	3605344	ArgumentList	"""Atmel Corporation 32-bit microprocessor family"""		3604310	1					
ANR	3605345	Argument	"""Atmel Corporation 32-bit microprocessor family"""		3604310	0					
ANR	3605346	PrimaryExpression	"""Atmel Corporation 32-bit microprocessor family"""		3604310	0					
ANR	3605347	Label	case EM_STM8 :	2274:1:69495:69507	3604310	228	True				
ANR	3605348	Identifier	EM_STM8		3604310	0					
ANR	3605349	ReturnStatement	"return strdup ( ""STMicroeletronics STM8 8-bit microcontroller"" ) ;"	2274:24:69518:69580	3604310	229	True				
ANR	3605350	CallExpression	"strdup ( ""STMicroeletronics STM8 8-bit microcontroller"" )"		3604310	0					
ANR	3605351	Callee	strdup		3604310	0					
ANR	3605352	Identifier	strdup		3604310	0					
ANR	3605353	ArgumentList	"""STMicroeletronics STM8 8-bit microcontroller"""		3604310	1					
ANR	3605354	Argument	"""STMicroeletronics STM8 8-bit microcontroller"""		3604310	0					
ANR	3605355	PrimaryExpression	"""STMicroeletronics STM8 8-bit microcontroller"""		3604310	0					
ANR	3605356	Label	case EM_TILE64 :	2275:1:69583:69597	3604310	230	True				
ANR	3605357	Identifier	EM_TILE64		3604310	0					
ANR	3605358	ReturnStatement	"return strdup ( ""Tilera TILE64 multicore architecture family"" ) ;"	2275:24:69606:69667	3604310	231	True				
ANR	3605359	CallExpression	"strdup ( ""Tilera TILE64 multicore architecture family"" )"		3604310	0					
ANR	3605360	Callee	strdup		3604310	0					
ANR	3605361	Identifier	strdup		3604310	0					
ANR	3605362	ArgumentList	"""Tilera TILE64 multicore architecture family"""		3604310	1					
ANR	3605363	Argument	"""Tilera TILE64 multicore architecture family"""		3604310	0					
ANR	3605364	PrimaryExpression	"""Tilera TILE64 multicore architecture family"""		3604310	0					
ANR	3605365	Label	case EM_TILEPRO :	2276:1:69670:69685	3604310	232	True				
ANR	3605366	Identifier	EM_TILEPRO		3604310	0					
ANR	3605367	ReturnStatement	"return strdup ( ""Tilera TILEPro multicore architecture family"" ) ;"	2276:24:69693:69755	3604310	233	True				
ANR	3605368	CallExpression	"strdup ( ""Tilera TILEPro multicore architecture family"" )"		3604310	0					
ANR	3605369	Callee	strdup		3604310	0					
ANR	3605370	Identifier	strdup		3604310	0					
ANR	3605371	ArgumentList	"""Tilera TILEPro multicore architecture family"""		3604310	1					
ANR	3605372	Argument	"""Tilera TILEPro multicore architecture family"""		3604310	0					
ANR	3605373	PrimaryExpression	"""Tilera TILEPro multicore architecture family"""		3604310	0					
ANR	3605374	Label	case EM_CUDA :	2278:1:69870:69882	3604310	234	True				
ANR	3605375	Identifier	EM_CUDA		3604310	0					
ANR	3605376	ReturnStatement	"return strdup ( ""NVIDIA CUDA architecture"" ) ;"	2278:24:69893:69935	3604310	235	True				
ANR	3605377	CallExpression	"strdup ( ""NVIDIA CUDA architecture"" )"		3604310	0					
ANR	3605378	Callee	strdup		3604310	0					
ANR	3605379	Identifier	strdup		3604310	0					
ANR	3605380	ArgumentList	"""NVIDIA CUDA architecture"""		3604310	1					
ANR	3605381	Argument	"""NVIDIA CUDA architecture"""		3604310	0					
ANR	3605382	PrimaryExpression	"""NVIDIA CUDA architecture"""		3604310	0					
ANR	3605383	Label	case EM_TILEGX :	2279:1:69938:69952	3604310	236	True				
ANR	3605384	Identifier	EM_TILEGX		3604310	0					
ANR	3605385	ReturnStatement	"return strdup ( ""Tilera TILE-Gx multicore architecture family"" ) ;"	2279:24:69961:70023	3604310	237	True				
ANR	3605386	CallExpression	"strdup ( ""Tilera TILE-Gx multicore architecture family"" )"		3604310	0					
ANR	3605387	Callee	strdup		3604310	0					
ANR	3605388	Identifier	strdup		3604310	0					
ANR	3605389	ArgumentList	"""Tilera TILE-Gx multicore architecture family"""		3604310	1					
ANR	3605390	Argument	"""Tilera TILE-Gx multicore architecture family"""		3604310	0					
ANR	3605391	PrimaryExpression	"""Tilera TILE-Gx multicore architecture family"""		3604310	0					
ANR	3605392	Label	case EM_CLOUDSHIELD :	2280:1:70026:70045	3604310	238	True				
ANR	3605393	Identifier	EM_CLOUDSHIELD		3604310	0					
ANR	3605394	ReturnStatement	"return strdup ( ""CloudShield architecture family"" ) ;"	2280:24:70049:70098	3604310	239	True				
ANR	3605395	CallExpression	"strdup ( ""CloudShield architecture family"" )"		3604310	0					
ANR	3605396	Callee	strdup		3604310	0					
ANR	3605397	Identifier	strdup		3604310	0					
ANR	3605398	ArgumentList	"""CloudShield architecture family"""		3604310	1					
ANR	3605399	Argument	"""CloudShield architecture family"""		3604310	0					
ANR	3605400	PrimaryExpression	"""CloudShield architecture family"""		3604310	0					
ANR	3605401	Label	case EM_COREA_1ST :	2281:1:70101:70118	3604310	240	True				
ANR	3605402	Identifier	EM_COREA_1ST		3604310	0					
ANR	3605403	ReturnStatement	"return strdup ( ""KIPO-KAIST Core-A 1st generation processor family"" ) ;"	2281:24:70124:70191	3604310	241	True				
ANR	3605404	CallExpression	"strdup ( ""KIPO-KAIST Core-A 1st generation processor family"" )"		3604310	0					
ANR	3605405	Callee	strdup		3604310	0					
ANR	3605406	Identifier	strdup		3604310	0					
ANR	3605407	ArgumentList	"""KIPO-KAIST Core-A 1st generation processor family"""		3604310	1					
ANR	3605408	Argument	"""KIPO-KAIST Core-A 1st generation processor family"""		3604310	0					
ANR	3605409	PrimaryExpression	"""KIPO-KAIST Core-A 1st generation processor family"""		3604310	0					
ANR	3605410	Label	case EM_COREA_2ND :	2282:1:70194:70211	3604310	242	True				
ANR	3605411	Identifier	EM_COREA_2ND		3604310	0					
ANR	3605412	ReturnStatement	"return strdup ( ""KIPO-KAIST Core-A 2nd generation processor family"" ) ;"	2282:24:70217:70284	3604310	243	True				
ANR	3605413	CallExpression	"strdup ( ""KIPO-KAIST Core-A 2nd generation processor family"" )"		3604310	0					
ANR	3605414	Callee	strdup		3604310	0					
ANR	3605415	Identifier	strdup		3604310	0					
ANR	3605416	ArgumentList	"""KIPO-KAIST Core-A 2nd generation processor family"""		3604310	1					
ANR	3605417	Argument	"""KIPO-KAIST Core-A 2nd generation processor family"""		3604310	0					
ANR	3605418	PrimaryExpression	"""KIPO-KAIST Core-A 2nd generation processor family"""		3604310	0					
ANR	3605419	Label	case EM_ARC_COMPACT2 :	2283:1:70287:70307	3604310	244	True				
ANR	3605420	Identifier	EM_ARC_COMPACT2		3604310	0					
ANR	3605421	ReturnStatement	"return strdup ( ""Synopsys ARCompact V2"" ) ;"	2283:24:70310:70349	3604310	245	True				
ANR	3605422	CallExpression	"strdup ( ""Synopsys ARCompact V2"" )"		3604310	0					
ANR	3605423	Callee	strdup		3604310	0					
ANR	3605424	Identifier	strdup		3604310	0					
ANR	3605425	ArgumentList	"""Synopsys ARCompact V2"""		3604310	1					
ANR	3605426	Argument	"""Synopsys ARCompact V2"""		3604310	0					
ANR	3605427	PrimaryExpression	"""Synopsys ARCompact V2"""		3604310	0					
ANR	3605428	Label	case EM_OPEN8 :	2284:1:70352:70365	3604310	246	True				
ANR	3605429	Identifier	EM_OPEN8		3604310	0					
ANR	3605430	ReturnStatement	"return strdup ( ""Open8 8-bit RISC soft processor core"" ) ;"	2284:24:70375:70429	3604310	247	True				
ANR	3605431	CallExpression	"strdup ( ""Open8 8-bit RISC soft processor core"" )"		3604310	0					
ANR	3605432	Callee	strdup		3604310	0					
ANR	3605433	Identifier	strdup		3604310	0					
ANR	3605434	ArgumentList	"""Open8 8-bit RISC soft processor core"""		3604310	1					
ANR	3605435	Argument	"""Open8 8-bit RISC soft processor core"""		3604310	0					
ANR	3605436	PrimaryExpression	"""Open8 8-bit RISC soft processor core"""		3604310	0					
ANR	3605437	Label	case EM_RL78 :	2285:1:70432:70444	3604310	248	True				
ANR	3605438	Identifier	EM_RL78		3604310	0					
ANR	3605439	ReturnStatement	"return strdup ( ""Renesas RL78 family"" ) ;"	2285:24:70455:70492	3604310	249	True				
ANR	3605440	CallExpression	"strdup ( ""Renesas RL78 family"" )"		3604310	0					
ANR	3605441	Callee	strdup		3604310	0					
ANR	3605442	Identifier	strdup		3604310	0					
ANR	3605443	ArgumentList	"""Renesas RL78 family"""		3604310	1					
ANR	3605444	Argument	"""Renesas RL78 family"""		3604310	0					
ANR	3605445	PrimaryExpression	"""Renesas RL78 family"""		3604310	0					
ANR	3605446	Label	case EM_VIDEOCORE5 :	2286:1:70495:70513	3604310	250	True				
ANR	3605447	Identifier	EM_VIDEOCORE5		3604310	0					
ANR	3605448	ReturnStatement	"return strdup ( ""Broadcom VideoCore V processor"" ) ;"	2286:24:70518:70566	3604310	251	True				
ANR	3605449	CallExpression	"strdup ( ""Broadcom VideoCore V processor"" )"		3604310	0					
ANR	3605450	Callee	strdup		3604310	0					
ANR	3605451	Identifier	strdup		3604310	0					
ANR	3605452	ArgumentList	"""Broadcom VideoCore V processor"""		3604310	1					
ANR	3605453	Argument	"""Broadcom VideoCore V processor"""		3604310	0					
ANR	3605454	PrimaryExpression	"""Broadcom VideoCore V processor"""		3604310	0					
ANR	3605455	Label	case EM_78KOR :	2287:1:70569:70582	3604310	252	True				
ANR	3605456	Identifier	EM_78KOR		3604310	0					
ANR	3605457	ReturnStatement	"return strdup ( ""Renesas 78KOR family"" ) ;"	2287:24:70592:70630	3604310	253	True				
ANR	3605458	CallExpression	"strdup ( ""Renesas 78KOR family"" )"		3604310	0					
ANR	3605459	Callee	strdup		3604310	0					
ANR	3605460	Identifier	strdup		3604310	0					
ANR	3605461	ArgumentList	"""Renesas 78KOR family"""		3604310	1					
ANR	3605462	Argument	"""Renesas 78KOR family"""		3604310	0					
ANR	3605463	PrimaryExpression	"""Renesas 78KOR family"""		3604310	0					
ANR	3605464	Label	case EM_BA1 :	2289:1:70745:70756	3604310	254	True				
ANR	3605465	Identifier	EM_BA1		3604310	0					
ANR	3605466	ReturnStatement	"return strdup ( ""Beyond BA1 CPU architecture"" ) ;"	2289:24:70768:70813	3604310	255	True				
ANR	3605467	CallExpression	"strdup ( ""Beyond BA1 CPU architecture"" )"		3604310	0					
ANR	3605468	Callee	strdup		3604310	0					
ANR	3605469	Identifier	strdup		3604310	0					
ANR	3605470	ArgumentList	"""Beyond BA1 CPU architecture"""		3604310	1					
ANR	3605471	Argument	"""Beyond BA1 CPU architecture"""		3604310	0					
ANR	3605472	PrimaryExpression	"""Beyond BA1 CPU architecture"""		3604310	0					
ANR	3605473	Label	case EM_BA2 :	2290:1:70816:70827	3604310	256	True				
ANR	3605474	Identifier	EM_BA2		3604310	0					
ANR	3605475	ReturnStatement	"return strdup ( ""Beyond BA2 CPU architecture"" ) ;"	2290:24:70839:70884	3604310	257	True				
ANR	3605476	CallExpression	"strdup ( ""Beyond BA2 CPU architecture"" )"		3604310	0					
ANR	3605477	Callee	strdup		3604310	0					
ANR	3605478	Identifier	strdup		3604310	0					
ANR	3605479	ArgumentList	"""Beyond BA2 CPU architecture"""		3604310	1					
ANR	3605480	Argument	"""Beyond BA2 CPU architecture"""		3604310	0					
ANR	3605481	PrimaryExpression	"""Beyond BA2 CPU architecture"""		3604310	0					
ANR	3605482	Label	case EM_XCORE :	2291:1:70887:70900	3604310	258	True				
ANR	3605483	Identifier	EM_XCORE		3604310	0					
ANR	3605484	ReturnStatement	"return strdup ( ""XMOS xCORE processor family"" ) ;"	2291:24:70910:70955	3604310	259	True				
ANR	3605485	CallExpression	"strdup ( ""XMOS xCORE processor family"" )"		3604310	0					
ANR	3605486	Callee	strdup		3604310	0					
ANR	3605487	Identifier	strdup		3604310	0					
ANR	3605488	ArgumentList	"""XMOS xCORE processor family"""		3604310	1					
ANR	3605489	Argument	"""XMOS xCORE processor family"""		3604310	0					
ANR	3605490	PrimaryExpression	"""XMOS xCORE processor family"""		3604310	0					
ANR	3605491	Label	case EM_MCHP_PIC :	2292:1:70958:70974	3604310	260	True				
ANR	3605492	Identifier	EM_MCHP_PIC		3604310	0					
ANR	3605493	ReturnStatement	"return strdup ( ""Microchip 8-bit PIC(r) family"" ) ;"	2292:24:70981:71028	3604310	261	True				
ANR	3605494	CallExpression	"strdup ( ""Microchip 8-bit PIC(r) family"" )"		3604310	0					
ANR	3605495	Callee	strdup		3604310	0					
ANR	3605496	Identifier	strdup		3604310	0					
ANR	3605497	ArgumentList	"""Microchip 8-bit PIC(r) family"""		3604310	1					
ANR	3605498	Argument	"""Microchip 8-bit PIC(r) family"""		3604310	0					
ANR	3605499	PrimaryExpression	"""Microchip 8-bit PIC(r) family"""		3604310	0					
ANR	3605500	Label	case EM_INTEL205 :	2293:1:71031:71047	3604310	262	True				
ANR	3605501	Identifier	EM_INTEL205		3604310	0					
ANR	3605502	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2293:24:71054:71089	3604310	263	True				
ANR	3605503	CallExpression	"strdup ( ""Reserved by Intel"" )"		3604310	0					
ANR	3605504	Callee	strdup		3604310	0					
ANR	3605505	Identifier	strdup		3604310	0					
ANR	3605506	ArgumentList	"""Reserved by Intel"""		3604310	1					
ANR	3605507	Argument	"""Reserved by Intel"""		3604310	0					
ANR	3605508	PrimaryExpression	"""Reserved by Intel"""		3604310	0					
ANR	3605509	Label	case EM_INTEL206 :	2294:1:71092:71108	3604310	264	True				
ANR	3605510	Identifier	EM_INTEL206		3604310	0					
ANR	3605511	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2294:24:71115:71150	3604310	265	True				
ANR	3605512	CallExpression	"strdup ( ""Reserved by Intel"" )"		3604310	0					
ANR	3605513	Callee	strdup		3604310	0					
ANR	3605514	Identifier	strdup		3604310	0					
ANR	3605515	ArgumentList	"""Reserved by Intel"""		3604310	1					
ANR	3605516	Argument	"""Reserved by Intel"""		3604310	0					
ANR	3605517	PrimaryExpression	"""Reserved by Intel"""		3604310	0					
ANR	3605518	Label	case EM_INTEL207 :	2295:1:71153:71169	3604310	266	True				
ANR	3605519	Identifier	EM_INTEL207		3604310	0					
ANR	3605520	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2295:24:71176:71211	3604310	267	True				
ANR	3605521	CallExpression	"strdup ( ""Reserved by Intel"" )"		3604310	0					
ANR	3605522	Callee	strdup		3604310	0					
ANR	3605523	Identifier	strdup		3604310	0					
ANR	3605524	ArgumentList	"""Reserved by Intel"""		3604310	1					
ANR	3605525	Argument	"""Reserved by Intel"""		3604310	0					
ANR	3605526	PrimaryExpression	"""Reserved by Intel"""		3604310	0					
ANR	3605527	Label	case EM_INTEL208 :	2296:1:71214:71230	3604310	268	True				
ANR	3605528	Identifier	EM_INTEL208		3604310	0					
ANR	3605529	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2296:24:71237:71272	3604310	269	True				
ANR	3605530	CallExpression	"strdup ( ""Reserved by Intel"" )"		3604310	0					
ANR	3605531	Callee	strdup		3604310	0					
ANR	3605532	Identifier	strdup		3604310	0					
ANR	3605533	ArgumentList	"""Reserved by Intel"""		3604310	1					
ANR	3605534	Argument	"""Reserved by Intel"""		3604310	0					
ANR	3605535	PrimaryExpression	"""Reserved by Intel"""		3604310	0					
ANR	3605536	Label	case EM_INTEL209 :	2297:1:71275:71291	3604310	270	True				
ANR	3605537	Identifier	EM_INTEL209		3604310	0					
ANR	3605538	ReturnStatement	"return strdup ( ""Reserved by Intel"" ) ;"	2297:24:71298:71333	3604310	271	True				
ANR	3605539	CallExpression	"strdup ( ""Reserved by Intel"" )"		3604310	0					
ANR	3605540	Callee	strdup		3604310	0					
ANR	3605541	Identifier	strdup		3604310	0					
ANR	3605542	ArgumentList	"""Reserved by Intel"""		3604310	1					
ANR	3605543	Argument	"""Reserved by Intel"""		3604310	0					
ANR	3605544	PrimaryExpression	"""Reserved by Intel"""		3604310	0					
ANR	3605545	Label	case EM_KM32 :	2298:1:71336:71348	3604310	272	True				
ANR	3605546	Identifier	EM_KM32		3604310	0					
ANR	3605547	ReturnStatement	"return strdup ( ""KM211 KM32 32-bit processor"" ) ;"	2298:24:71359:71404	3604310	273	True				
ANR	3605548	CallExpression	"strdup ( ""KM211 KM32 32-bit processor"" )"		3604310	0					
ANR	3605549	Callee	strdup		3604310	0					
ANR	3605550	Identifier	strdup		3604310	0					
ANR	3605551	ArgumentList	"""KM211 KM32 32-bit processor"""		3604310	1					
ANR	3605552	Argument	"""KM211 KM32 32-bit processor"""		3604310	0					
ANR	3605553	PrimaryExpression	"""KM211 KM32 32-bit processor"""		3604310	0					
ANR	3605554	Label	case EM_KMX32 :	2299:1:71407:71420	3604310	274	True				
ANR	3605555	Identifier	EM_KMX32		3604310	0					
ANR	3605556	ReturnStatement	"return strdup ( ""KM211 KMX32 32-bit processor"" ) ;"	2299:24:71430:71476	3604310	275	True				
ANR	3605557	CallExpression	"strdup ( ""KM211 KMX32 32-bit processor"" )"		3604310	0					
ANR	3605558	Callee	strdup		3604310	0					
ANR	3605559	Identifier	strdup		3604310	0					
ANR	3605560	ArgumentList	"""KM211 KMX32 32-bit processor"""		3604310	1					
ANR	3605561	Argument	"""KM211 KMX32 32-bit processor"""		3604310	0					
ANR	3605562	PrimaryExpression	"""KM211 KMX32 32-bit processor"""		3604310	0					
ANR	3605563	Label	case EM_KMX16 :	2300:1:71479:71492	3604310	276	True				
ANR	3605564	Identifier	EM_KMX16		3604310	0					
ANR	3605565	ReturnStatement	"return strdup ( ""KM211 KMX16 16-bit processor"" ) ;"	2300:24:71502:71548	3604310	277	True				
ANR	3605566	CallExpression	"strdup ( ""KM211 KMX16 16-bit processor"" )"		3604310	0					
ANR	3605567	Callee	strdup		3604310	0					
ANR	3605568	Identifier	strdup		3604310	0					
ANR	3605569	ArgumentList	"""KM211 KMX16 16-bit processor"""		3604310	1					
ANR	3605570	Argument	"""KM211 KMX16 16-bit processor"""		3604310	0					
ANR	3605571	PrimaryExpression	"""KM211 KMX16 16-bit processor"""		3604310	0					
ANR	3605572	Label	case EM_KMX8 :	2301:1:71551:71563	3604310	278	True				
ANR	3605573	Identifier	EM_KMX8		3604310	0					
ANR	3605574	ReturnStatement	"return strdup ( ""KM211 KMX8 8-bit processor"" ) ;"	2301:24:71574:71618	3604310	279	True				
ANR	3605575	CallExpression	"strdup ( ""KM211 KMX8 8-bit processor"" )"		3604310	0					
ANR	3605576	Callee	strdup		3604310	0					
ANR	3605577	Identifier	strdup		3604310	0					
ANR	3605578	ArgumentList	"""KM211 KMX8 8-bit processor"""		3604310	1					
ANR	3605579	Argument	"""KM211 KMX8 8-bit processor"""		3604310	0					
ANR	3605580	PrimaryExpression	"""KM211 KMX8 8-bit processor"""		3604310	0					
ANR	3605581	Label	case EM_KVARC :	2302:1:71621:71634	3604310	280	True				
ANR	3605582	Identifier	EM_KVARC		3604310	0					
ANR	3605583	ReturnStatement	"return strdup ( ""KM211 KVARC processor"" ) ;"	2302:24:71644:71683	3604310	281	True				
ANR	3605584	CallExpression	"strdup ( ""KM211 KVARC processor"" )"		3604310	0					
ANR	3605585	Callee	strdup		3604310	0					
ANR	3605586	Identifier	strdup		3604310	0					
ANR	3605587	ArgumentList	"""KM211 KVARC processor"""		3604310	1					
ANR	3605588	Argument	"""KM211 KVARC processor"""		3604310	0					
ANR	3605589	PrimaryExpression	"""KM211 KVARC processor"""		3604310	0					
ANR	3605590	Label	case EM_CDP :	2303:1:71686:71697	3604310	282	True				
ANR	3605591	Identifier	EM_CDP		3604310	0					
ANR	3605592	ReturnStatement	"return strdup ( ""Paneve CDP architecture family"" ) ;"	2303:24:71709:71757	3604310	283	True				
ANR	3605593	CallExpression	"strdup ( ""Paneve CDP architecture family"" )"		3604310	0					
ANR	3605594	Callee	strdup		3604310	0					
ANR	3605595	Identifier	strdup		3604310	0					
ANR	3605596	ArgumentList	"""Paneve CDP architecture family"""		3604310	1					
ANR	3605597	Argument	"""Paneve CDP architecture family"""		3604310	0					
ANR	3605598	PrimaryExpression	"""Paneve CDP architecture family"""		3604310	0					
ANR	3605599	Label	case EM_COGE :	2304:1:71760:71772	3604310	284	True				
ANR	3605600	Identifier	EM_COGE		3604310	0					
ANR	3605601	ReturnStatement	"return strdup ( ""Cognitive Smart Memory Processor"" ) ;"	2304:24:71783:71833	3604310	285	True				
ANR	3605602	CallExpression	"strdup ( ""Cognitive Smart Memory Processor"" )"		3604310	0					
ANR	3605603	Callee	strdup		3604310	0					
ANR	3605604	Identifier	strdup		3604310	0					
ANR	3605605	ArgumentList	"""Cognitive Smart Memory Processor"""		3604310	1					
ANR	3605606	Argument	"""Cognitive Smart Memory Processor"""		3604310	0					
ANR	3605607	PrimaryExpression	"""Cognitive Smart Memory Processor"""		3604310	0					
ANR	3605608	Label	case EM_COOL :	2305:1:71836:71848	3604310	286	True				
ANR	3605609	Identifier	EM_COOL		3604310	0					
ANR	3605610	ReturnStatement	"return strdup ( ""Bluechip Systems CoolEngine"" ) ;"	2305:24:71859:71904	3604310	287	True				
ANR	3605611	CallExpression	"strdup ( ""Bluechip Systems CoolEngine"" )"		3604310	0					
ANR	3605612	Callee	strdup		3604310	0					
ANR	3605613	Identifier	strdup		3604310	0					
ANR	3605614	ArgumentList	"""Bluechip Systems CoolEngine"""		3604310	1					
ANR	3605615	Argument	"""Bluechip Systems CoolEngine"""		3604310	0					
ANR	3605616	PrimaryExpression	"""Bluechip Systems CoolEngine"""		3604310	0					
ANR	3605617	Label	case EM_NORC :	2306:1:71907:71919	3604310	288	True				
ANR	3605618	Identifier	EM_NORC		3604310	0					
ANR	3605619	ReturnStatement	"return strdup ( ""Nanoradio Optimized RISC"" ) ;"	2306:24:71930:71972	3604310	289	True				
ANR	3605620	CallExpression	"strdup ( ""Nanoradio Optimized RISC"" )"		3604310	0					
ANR	3605621	Callee	strdup		3604310	0					
ANR	3605622	Identifier	strdup		3604310	0					
ANR	3605623	ArgumentList	"""Nanoradio Optimized RISC"""		3604310	1					
ANR	3605624	Argument	"""Nanoradio Optimized RISC"""		3604310	0					
ANR	3605625	PrimaryExpression	"""Nanoradio Optimized RISC"""		3604310	0					
ANR	3605626	Label	case EM_CSR_KALIMBA :	2307:1:71975:71994	3604310	290	True				
ANR	3605627	Identifier	EM_CSR_KALIMBA		3604310	0					
ANR	3605628	ReturnStatement	"return strdup ( ""CSR Kalimba architecture family"" ) ;"	2307:24:71998:72047	3604310	291	True				
ANR	3605629	CallExpression	"strdup ( ""CSR Kalimba architecture family"" )"		3604310	0					
ANR	3605630	Callee	strdup		3604310	0					
ANR	3605631	Identifier	strdup		3604310	0					
ANR	3605632	ArgumentList	"""CSR Kalimba architecture family"""		3604310	1					
ANR	3605633	Argument	"""CSR Kalimba architecture family"""		3604310	0					
ANR	3605634	PrimaryExpression	"""CSR Kalimba architecture family"""		3604310	0					
ANR	3605635	Label	case EM_Z80 :	2308:1:72050:72061	3604310	292	True				
ANR	3605636	Identifier	EM_Z80		3604310	0					
ANR	3605637	ReturnStatement	"return strdup ( ""Zilog Z80"" ) ;"	2308:24:72073:72100	3604310	293	True				
ANR	3605638	CallExpression	"strdup ( ""Zilog Z80"" )"		3604310	0					
ANR	3605639	Callee	strdup		3604310	0					
ANR	3605640	Identifier	strdup		3604310	0					
ANR	3605641	ArgumentList	"""Zilog Z80"""		3604310	1					
ANR	3605642	Argument	"""Zilog Z80"""		3604310	0					
ANR	3605643	PrimaryExpression	"""Zilog Z80"""		3604310	0					
ANR	3605644	Label	case EM_VISIUM :	2309:1:72103:72117	3604310	294	True				
ANR	3605645	Identifier	EM_VISIUM		3604310	0					
ANR	3605646	ReturnStatement	"return strdup ( ""Controls and Data Services VISIUMcore processor"" ) ;"	2309:24:72126:72191	3604310	295	True				
ANR	3605647	CallExpression	"strdup ( ""Controls and Data Services VISIUMcore processor"" )"		3604310	0					
ANR	3605648	Callee	strdup		3604310	0					
ANR	3605649	Identifier	strdup		3604310	0					
ANR	3605650	ArgumentList	"""Controls and Data Services VISIUMcore processor"""		3604310	1					
ANR	3605651	Argument	"""Controls and Data Services VISIUMcore processor"""		3604310	0					
ANR	3605652	PrimaryExpression	"""Controls and Data Services VISIUMcore processor"""		3604310	0					
ANR	3605653	Label	case EM_FT32 :	2310:1:72194:72206	3604310	296	True				
ANR	3605654	Identifier	EM_FT32		3604310	0					
ANR	3605655	ReturnStatement	"return strdup ( ""FTDI Chip FT32 high performance 32-bit RISC architecture"" ) ;"	2310:24:72217:72291	3604310	297	True				
ANR	3605656	CallExpression	"strdup ( ""FTDI Chip FT32 high performance 32-bit RISC architecture"" )"		3604310	0					
ANR	3605657	Callee	strdup		3604310	0					
ANR	3605658	Identifier	strdup		3604310	0					
ANR	3605659	ArgumentList	"""FTDI Chip FT32 high performance 32-bit RISC architecture"""		3604310	1					
ANR	3605660	Argument	"""FTDI Chip FT32 high performance 32-bit RISC architecture"""		3604310	0					
ANR	3605661	PrimaryExpression	"""FTDI Chip FT32 high performance 32-bit RISC architecture"""		3604310	0					
ANR	3605662	Label	case EM_MOXIE :	2311:1:72294:72307	3604310	298	True				
ANR	3605663	Identifier	EM_MOXIE		3604310	0					
ANR	3605664	ReturnStatement	"return strdup ( ""Moxie processor family"" ) ;"	2311:24:72317:72357	3604310	299	True				
ANR	3605665	CallExpression	"strdup ( ""Moxie processor family"" )"		3604310	0					
ANR	3605666	Callee	strdup		3604310	0					
ANR	3605667	Identifier	strdup		3604310	0					
ANR	3605668	ArgumentList	"""Moxie processor family"""		3604310	1					
ANR	3605669	Argument	"""Moxie processor family"""		3604310	0					
ANR	3605670	PrimaryExpression	"""Moxie processor family"""		3604310	0					
ANR	3605671	Label	case EM_AMDGPU :	2312:1:72360:72374	3604310	300	True				
ANR	3605672	Identifier	EM_AMDGPU		3604310	0					
ANR	3605673	ReturnStatement	"return strdup ( ""AMD GPU architecture"" ) ;"	2312:24:72383:72421	3604310	301	True				
ANR	3605674	CallExpression	"strdup ( ""AMD GPU architecture"" )"		3604310	0					
ANR	3605675	Callee	strdup		3604310	0					
ANR	3605676	Identifier	strdup		3604310	0					
ANR	3605677	ArgumentList	"""AMD GPU architecture"""		3604310	1					
ANR	3605678	Argument	"""AMD GPU architecture"""		3604310	0					
ANR	3605679	PrimaryExpression	"""AMD GPU architecture"""		3604310	0					
ANR	3605680	Label	default :	2314:1:72425:72432	3604310	302	True				
ANR	3605681	Identifier	default		3604310	0					
ANR	3605682	ReturnStatement	"return r_str_newf ( ""<unknown>: 0x%x"" , bin -> ehdr . e_machine ) ;"	2314:22:72446:72504	3604310	303	True				
ANR	3605683	CallExpression	"r_str_newf ( ""<unknown>: 0x%x"" , bin -> ehdr . e_machine )"		3604310	0					
ANR	3605684	Callee	r_str_newf		3604310	0					
ANR	3605685	Identifier	r_str_newf		3604310	0					
ANR	3605686	ArgumentList	"""<unknown>: 0x%x"""		3604310	1					
ANR	3605687	Argument	"""<unknown>: 0x%x"""		3604310	0					
ANR	3605688	PrimaryExpression	"""<unknown>: 0x%x"""		3604310	0					
ANR	3605689	Argument	bin -> ehdr . e_machine		3604310	1					
ANR	3605690	MemberAccess	bin -> ehdr . e_machine		3604310	0					
ANR	3605691	PtrMemberAccess	bin -> ehdr		3604310	0					
ANR	3605692	Identifier	bin		3604310	0					
ANR	3605693	Identifier	ehdr		3604310	1					
ANR	3605694	Identifier	e_machine		3604310	1					
ANR	3605695	ReturnType	Elf_		3604310	1					
ANR	3605696	Identifier	( r_bin_elf_get_machine_name )		3604310	2					
ANR	3605697	Identifier	r_bin_elf_get_machine_name		3604310	3					
ANR	3605698	ParameterList	ELFOBJ * bin		3604310	4					
ANR	3605699	Parameter	ELFOBJ * bin	2156:39:61378:61388	3604310	0	True				
ANR	3605700	ParameterType	ELFOBJ *		3604310	0					
ANR	3605701	Identifier	bin		3604310	1					
ANR	3605702	CFGEntryNode	ENTRY		3604310		True				
ANR	3605703	CFGExitNode	EXIT		3604310		True				
ANR	3605704	Symbol	bin		3604310						
ANR	3605705	Symbol	bin -> ehdr		3604310						
ANR	3605706	Symbol	bin -> ehdr . e_machine		3604310						
ANR	3605707	Symbol	strdup		3604310						
ANR	3605708	Symbol	r_str_newf		3604310						
ANR	3605709	Symbol	* bin		3604310						
ANR	3605710	Function	r_bin_elf_get_file_type	2318:6:72518:73247							
ANR	3605711	FunctionDef	r_bin_elf_get_file_type (ELFOBJ * bin)		3605710	0					
ANR	3605712	CompoundStatement		2318:49:72561:73247	3605710	0					
ANR	3605713	IdentifierDeclStatement	ut32 e_type ;	2319:1:72564:72575	3605710	0	True				
ANR	3605714	IdentifierDecl	e_type		3605710	0					
ANR	3605715	IdentifierDeclType	ut32		3605710	0					
ANR	3605716	Identifier	e_type		3605710	1					
ANR	3605717	IfStatement	if ( ! bin )		3605710	1					
ANR	3605718	Condition	! bin	2320:5:72582:72585	3605710	0	True				
ANR	3605719	UnaryOperationExpression	! bin		3605710	0					
ANR	3605720	UnaryOperator	!		3605710	0					
ANR	3605721	Identifier	bin		3605710	1					
ANR	3605722	CompoundStatement		3:11:26:26	3605710	1					
ANR	3605723	ReturnStatement	return NULL ;	2321:2:72592:72603	3605710	0	True				
ANR	3605724	Identifier	NULL		3605710	0					
ANR	3605725	ExpressionStatement	e_type = ( ut32 ) bin -> ehdr . e_type	2323:1:72609:72640	3605710	2	True				
ANR	3605726	AssignmentExpression	e_type = ( ut32 ) bin -> ehdr . e_type		3605710	0		=			
ANR	3605727	Identifier	e_type		3605710	0					
ANR	3605728	CastExpression	( ut32 ) bin -> ehdr . e_type		3605710	1					
ANR	3605729	CastTarget	ut32		3605710	0					
ANR	3605730	MemberAccess	bin -> ehdr . e_type		3605710	1					
ANR	3605731	PtrMemberAccess	bin -> ehdr		3605710	0					
ANR	3605732	Identifier	bin		3605710	0					
ANR	3605733	Identifier	ehdr		3605710	1					
ANR	3605734	Identifier	e_type		3605710	1					
ANR	3605735	SwitchStatement	switch ( e_type )		3605710	3					
ANR	3605736	Condition	e_type	2324:9:72701:72706	3605710	0	True				
ANR	3605737	Identifier	e_type		3605710	0					
ANR	3605738	CompoundStatement		7:17:147:147	3605710	1					
ANR	3605739	Label	case ET_NONE :	2325:1:72712:72724	3605710	0	True				
ANR	3605740	Identifier	ET_NONE		3605710	0					
ANR	3605741	ReturnStatement	"return strdup ( ""NONE (None)"" ) ;"	2325:15:72726:72755	3605710	1	True				
ANR	3605742	CallExpression	"strdup ( ""NONE (None)"" )"		3605710	0					
ANR	3605743	Callee	strdup		3605710	0					
ANR	3605744	Identifier	strdup		3605710	0					
ANR	3605745	ArgumentList	"""NONE (None)"""		3605710	1					
ANR	3605746	Argument	"""NONE (None)"""		3605710	0					
ANR	3605747	PrimaryExpression	"""NONE (None)"""		3605710	0					
ANR	3605748	Label	case ET_REL :	2326:1:72758:72769	3605710	2	True				
ANR	3605749	Identifier	ET_REL		3605710	0					
ANR	3605750	ReturnStatement	"return strdup ( ""REL (Relocatable file)"" ) ;"	2326:15:72772:72812	3605710	3	True				
ANR	3605751	CallExpression	"strdup ( ""REL (Relocatable file)"" )"		3605710	0					
ANR	3605752	Callee	strdup		3605710	0					
ANR	3605753	Identifier	strdup		3605710	0					
ANR	3605754	ArgumentList	"""REL (Relocatable file)"""		3605710	1					
ANR	3605755	Argument	"""REL (Relocatable file)"""		3605710	0					
ANR	3605756	PrimaryExpression	"""REL (Relocatable file)"""		3605710	0					
ANR	3605757	Label	case ET_EXEC :	2327:1:72815:72827	3605710	4	True				
ANR	3605758	Identifier	ET_EXEC		3605710	0					
ANR	3605759	ReturnStatement	"return strdup ( ""EXEC (Executable file)"" ) ;"	2327:15:72829:72869	3605710	5	True				
ANR	3605760	CallExpression	"strdup ( ""EXEC (Executable file)"" )"		3605710	0					
ANR	3605761	Callee	strdup		3605710	0					
ANR	3605762	Identifier	strdup		3605710	0					
ANR	3605763	ArgumentList	"""EXEC (Executable file)"""		3605710	1					
ANR	3605764	Argument	"""EXEC (Executable file)"""		3605710	0					
ANR	3605765	PrimaryExpression	"""EXEC (Executable file)"""		3605710	0					
ANR	3605766	Label	case ET_DYN :	2328:1:72872:72883	3605710	6	True				
ANR	3605767	Identifier	ET_DYN		3605710	0					
ANR	3605768	ReturnStatement	"return strdup ( ""DYN (Shared object file)"" ) ;"	2328:15:72886:72928	3605710	7	True				
ANR	3605769	CallExpression	"strdup ( ""DYN (Shared object file)"" )"		3605710	0					
ANR	3605770	Callee	strdup		3605710	0					
ANR	3605771	Identifier	strdup		3605710	0					
ANR	3605772	ArgumentList	"""DYN (Shared object file)"""		3605710	1					
ANR	3605773	Argument	"""DYN (Shared object file)"""		3605710	0					
ANR	3605774	PrimaryExpression	"""DYN (Shared object file)"""		3605710	0					
ANR	3605775	Label	case ET_CORE :	2329:1:72931:72943	3605710	8	True				
ANR	3605776	Identifier	ET_CORE		3605710	0					
ANR	3605777	ReturnStatement	"return strdup ( ""CORE (Core file)"" ) ;"	2329:15:72945:72979	3605710	9	True				
ANR	3605778	CallExpression	"strdup ( ""CORE (Core file)"" )"		3605710	0					
ANR	3605779	Callee	strdup		3605710	0					
ANR	3605780	Identifier	strdup		3605710	0					
ANR	3605781	ArgumentList	"""CORE (Core file)"""		3605710	1					
ANR	3605782	Argument	"""CORE (Core file)"""		3605710	0					
ANR	3605783	PrimaryExpression	"""CORE (Core file)"""		3605710	0					
ANR	3605784	IfStatement	if ( ( e_type >= ET_LOPROC ) && ( e_type <= ET_HIPROC ) )		3605710	4					
ANR	3605785	Condition	( e_type >= ET_LOPROC ) && ( e_type <= ET_HIPROC )	2331:5:72989:73034	3605710	0	True				
ANR	3605786	AndExpression	( e_type >= ET_LOPROC ) && ( e_type <= ET_HIPROC )		3605710	0		&&			
ANR	3605787	RelationalExpression	e_type >= ET_LOPROC		3605710	0		>=			
ANR	3605788	Identifier	e_type		3605710	0					
ANR	3605789	Identifier	ET_LOPROC		3605710	1					
ANR	3605790	RelationalExpression	e_type <= ET_HIPROC		3605710	1		<=			
ANR	3605791	Identifier	e_type		3605710	0					
ANR	3605792	Identifier	ET_HIPROC		3605710	1					
ANR	3605793	CompoundStatement		14:53:475:475	3605710	1					
ANR	3605794	ReturnStatement	"return r_str_newf ( ""Processor Specific: %x"" , e_type ) ;"	2332:2:73041:73093	3605710	0	True				
ANR	3605795	CallExpression	"r_str_newf ( ""Processor Specific: %x"" , e_type )"		3605710	0					
ANR	3605796	Callee	r_str_newf		3605710	0					
ANR	3605797	Identifier	r_str_newf		3605710	0					
ANR	3605798	ArgumentList	"""Processor Specific: %x"""		3605710	1					
ANR	3605799	Argument	"""Processor Specific: %x"""		3605710	0					
ANR	3605800	PrimaryExpression	"""Processor Specific: %x"""		3605710	0					
ANR	3605801	Argument	e_type		3605710	1					
ANR	3605802	Identifier	e_type		3605710	0					
ANR	3605803	IfStatement	if ( ( e_type >= ET_LOOS ) && ( e_type <= ET_HIOS ) )		3605710	5					
ANR	3605804	Condition	( e_type >= ET_LOOS ) && ( e_type <= ET_HIOS )	2334:5:73103:73144	3605710	0	True				
ANR	3605805	AndExpression	( e_type >= ET_LOOS ) && ( e_type <= ET_HIOS )		3605710	0		&&			
ANR	3605806	RelationalExpression	e_type >= ET_LOOS		3605710	0		>=			
ANR	3605807	Identifier	e_type		3605710	0					
ANR	3605808	Identifier	ET_LOOS		3605710	1					
ANR	3605809	RelationalExpression	e_type <= ET_HIOS		3605710	1		<=			
ANR	3605810	Identifier	e_type		3605710	0					
ANR	3605811	Identifier	ET_HIOS		3605710	1					
ANR	3605812	CompoundStatement		17:49:585:585	3605710	1					
ANR	3605813	ReturnStatement	"return r_str_newf ( ""OS Specific: %x"" , e_type ) ;"	2335:2:73151:73196	3605710	0	True				
ANR	3605814	CallExpression	"r_str_newf ( ""OS Specific: %x"" , e_type )"		3605710	0					
ANR	3605815	Callee	r_str_newf		3605710	0					
ANR	3605816	Identifier	r_str_newf		3605710	0					
ANR	3605817	ArgumentList	"""OS Specific: %x"""		3605710	1					
ANR	3605818	Argument	"""OS Specific: %x"""		3605710	0					
ANR	3605819	PrimaryExpression	"""OS Specific: %x"""		3605710	0					
ANR	3605820	Argument	e_type		3605710	1					
ANR	3605821	Identifier	e_type		3605710	0					
ANR	3605822	ReturnStatement	"return r_str_newf ( ""<unknown>: %x"" , e_type ) ;"	2337:1:73202:73245	3605710	6	True				
ANR	3605823	CallExpression	"r_str_newf ( ""<unknown>: %x"" , e_type )"		3605710	0					
ANR	3605824	Callee	r_str_newf		3605710	0					
ANR	3605825	Identifier	r_str_newf		3605710	0					
ANR	3605826	ArgumentList	"""<unknown>: %x"""		3605710	1					
ANR	3605827	Argument	"""<unknown>: %x"""		3605710	0					
ANR	3605828	PrimaryExpression	"""<unknown>: %x"""		3605710	0					
ANR	3605829	Argument	e_type		3605710	1					
ANR	3605830	Identifier	e_type		3605710	0					
ANR	3605831	ReturnType	Elf_		3605710	1					
ANR	3605832	Identifier	( r_bin_elf_get_file_type )		3605710	2					
ANR	3605833	Identifier	r_bin_elf_get_file_type		3605710	3					
ANR	3605834	ParameterList	ELFOBJ * bin		3605710	4					
ANR	3605835	Parameter	ELFOBJ * bin	2318:36:72548:72558	3605710	0	True				
ANR	3605836	ParameterType	ELFOBJ *		3605710	0					
ANR	3605837	Identifier	bin		3605710	1					
ANR	3605838	CFGEntryNode	ENTRY		3605710		True				
ANR	3605839	CFGExitNode	EXIT		3605710		True				
ANR	3605840	Symbol	bin -> ehdr . e_type		3605710						
ANR	3605841	Symbol	NULL		3605710						
ANR	3605842	Symbol	ET_HIOS		3605710						
ANR	3605843	Symbol	ET_LOOS		3605710						
ANR	3605844	Symbol	bin		3605710						
ANR	3605845	Symbol	bin -> ehdr		3605710						
ANR	3605846	Symbol	ET_LOPROC		3605710						
ANR	3605847	Symbol	strdup		3605710						
ANR	3605848	Symbol	r_str_newf		3605710						
ANR	3605849	Symbol	ET_HIPROC		3605710						
ANR	3605850	Symbol	e_type		3605710						
ANR	3605851	Symbol	* bin		3605710						
ANR	3605852	Function	r_bin_elf_get_elf_class	2340:6:73256:73564							
ANR	3605853	FunctionDef	r_bin_elf_get_elf_class (ELFOBJ * bin)		3605852	0					
ANR	3605854	CompoundStatement		2340:49:73299:73564	3605852	0					
ANR	3605855	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_CLASS ] )		3605852	0					
ANR	3605856	Condition	bin -> ehdr . e_ident [ EI_CLASS ]	2341:9:73310:73336	3605852	0	True				
ANR	3605857	ArrayIndexing	bin -> ehdr . e_ident [ EI_CLASS ]		3605852	0					
ANR	3605858	MemberAccess	bin -> ehdr . e_ident		3605852	0					
ANR	3605859	PtrMemberAccess	bin -> ehdr		3605852	0					
ANR	3605860	Identifier	bin		3605852	0					
ANR	3605861	Identifier	ehdr		3605852	1					
ANR	3605862	Identifier	e_ident		3605852	1					
ANR	3605863	Identifier	EI_CLASS		3605852	1					
ANR	3605864	CompoundStatement		2:38:39:39	3605852	1					
ANR	3605865	Label	case ELFCLASSNONE :	2342:1:73342:73359	3605852	0	True				
ANR	3605866	Identifier	ELFCLASSNONE		3605852	0					
ANR	3605867	ReturnStatement	"return strdup ( ""none"" ) ;"	2342:20:73361:73383	3605852	1	True				
ANR	3605868	CallExpression	"strdup ( ""none"" )"		3605852	0					
ANR	3605869	Callee	strdup		3605852	0					
ANR	3605870	Identifier	strdup		3605852	0					
ANR	3605871	ArgumentList	"""none"""		3605852	1					
ANR	3605872	Argument	"""none"""		3605852	0					
ANR	3605873	PrimaryExpression	"""none"""		3605852	0					
ANR	3605874	Label	case ELFCLASS32 :	2343:1:73386:73401	3605852	2	True				
ANR	3605875	Identifier	ELFCLASS32		3605852	0					
ANR	3605876	ReturnStatement	"return strdup ( ""ELF32"" ) ;"	2343:20:73405:73428	3605852	3	True				
ANR	3605877	CallExpression	"strdup ( ""ELF32"" )"		3605852	0					
ANR	3605878	Callee	strdup		3605852	0					
ANR	3605879	Identifier	strdup		3605852	0					
ANR	3605880	ArgumentList	"""ELF32"""		3605852	1					
ANR	3605881	Argument	"""ELF32"""		3605852	0					
ANR	3605882	PrimaryExpression	"""ELF32"""		3605852	0					
ANR	3605883	Label	case ELFCLASS64 :	2344:1:73431:73446	3605852	4	True				
ANR	3605884	Identifier	ELFCLASS64		3605852	0					
ANR	3605885	ReturnStatement	"return strdup ( ""ELF64"" ) ;"	2344:20:73450:73473	3605852	5	True				
ANR	3605886	CallExpression	"strdup ( ""ELF64"" )"		3605852	0					
ANR	3605887	Callee	strdup		3605852	0					
ANR	3605888	Identifier	strdup		3605852	0					
ANR	3605889	ArgumentList	"""ELF64"""		3605852	1					
ANR	3605890	Argument	"""ELF64"""		3605852	0					
ANR	3605891	PrimaryExpression	"""ELF64"""		3605852	0					
ANR	3605892	Label	default :	2345:1:73476:73483	3605852	6	True				
ANR	3605893	Identifier	default		3605852	0					
ANR	3605894	ReturnStatement	"return r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_CLASS ] ) ;"	2345:20:73495:73559	3605852	7	True				
ANR	3605895	CallExpression	"r_str_newf ( ""<unknown: %x>"" , bin -> ehdr . e_ident [ EI_CLASS ] )"		3605852	0					
ANR	3605896	Callee	r_str_newf		3605852	0					
ANR	3605897	Identifier	r_str_newf		3605852	0					
ANR	3605898	ArgumentList	"""<unknown: %x>"""		3605852	1					
ANR	3605899	Argument	"""<unknown: %x>"""		3605852	0					
ANR	3605900	PrimaryExpression	"""<unknown: %x>"""		3605852	0					
ANR	3605901	Argument	bin -> ehdr . e_ident [ EI_CLASS ]		3605852	1					
ANR	3605902	ArrayIndexing	bin -> ehdr . e_ident [ EI_CLASS ]		3605852	0					
ANR	3605903	MemberAccess	bin -> ehdr . e_ident		3605852	0					
ANR	3605904	PtrMemberAccess	bin -> ehdr		3605852	0					
ANR	3605905	Identifier	bin		3605852	0					
ANR	3605906	Identifier	ehdr		3605852	1					
ANR	3605907	Identifier	e_ident		3605852	1					
ANR	3605908	Identifier	EI_CLASS		3605852	1					
ANR	3605909	ReturnType	Elf_		3605852	1					
ANR	3605910	Identifier	( r_bin_elf_get_elf_class )		3605852	2					
ANR	3605911	Identifier	r_bin_elf_get_elf_class		3605852	3					
ANR	3605912	ParameterList	ELFOBJ * bin		3605852	4					
ANR	3605913	Parameter	ELFOBJ * bin	2340:36:73286:73296	3605852	0	True				
ANR	3605914	ParameterType	ELFOBJ *		3605852	0					
ANR	3605915	Identifier	bin		3605852	1					
ANR	3605916	CFGEntryNode	ENTRY		3605852		True				
ANR	3605917	CFGExitNode	EXIT		3605852		True				
ANR	3605918	Symbol	* EI_CLASS		3605852						
ANR	3605919	Symbol	EI_CLASS		3605852						
ANR	3605920	Symbol	* bin -> ehdr		3605852						
ANR	3605921	Symbol	bin		3605852						
ANR	3605922	Symbol	bin -> ehdr . e_ident		3605852						
ANR	3605923	Symbol	bin -> ehdr		3605852						
ANR	3605924	Symbol	* * bin		3605852						
ANR	3605925	Symbol	strdup		3605852						
ANR	3605926	Symbol	r_str_newf		3605852						
ANR	3605927	Symbol	* bin -> ehdr . e_ident		3605852						
ANR	3605928	Symbol	* bin		3605852						
ANR	3605929	Function	r_bin_elf_get_bits	2349:0:73567:75148							
ANR	3605930	FunctionDef	r_bin_elf_get_bits (ELFOBJ * bin)		3605929	0					
ANR	3605931	CompoundStatement		2349:42:73609:75148	3605929	0					
ANR	3605932	IfStatement	if ( bin -> ehdr . e_machine == EM_ARC_A5 )		3605929	0					
ANR	3605933	Condition	bin -> ehdr . e_machine == EM_ARC_A5	2351:5:73642:73673	3605929	0	True				
ANR	3605934	EqualityExpression	bin -> ehdr . e_machine == EM_ARC_A5		3605929	0		==			
ANR	3605935	MemberAccess	bin -> ehdr . e_machine		3605929	0					
ANR	3605936	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3605937	Identifier	bin		3605929	0					
ANR	3605938	Identifier	ehdr		3605929	1					
ANR	3605939	Identifier	e_machine		3605929	1					
ANR	3605940	Identifier	EM_ARC_A5		3605929	1					
ANR	3605941	CompoundStatement		3:39:66:66	3605929	1					
ANR	3605942	ReturnStatement	return 16 ;	2352:2:73680:73689	3605929	0	True				
ANR	3605943	PrimaryExpression	16		3605929	0					
ANR	3605944	IfStatement	if ( bin -> phdr && bin -> ehdr . e_machine == EM_MIPS )		3605929	1					
ANR	3605945	Condition	bin -> phdr && bin -> ehdr . e_machine == EM_MIPS	2355:5:73719:73761	3605929	0	True				
ANR	3605946	AndExpression	bin -> phdr && bin -> ehdr . e_machine == EM_MIPS		3605929	0		&&			
ANR	3605947	PtrMemberAccess	bin -> phdr		3605929	0					
ANR	3605948	Identifier	bin		3605929	0					
ANR	3605949	Identifier	phdr		3605929	1					
ANR	3605950	EqualityExpression	bin -> ehdr . e_machine == EM_MIPS		3605929	1		==			
ANR	3605951	MemberAccess	bin -> ehdr . e_machine		3605929	0					
ANR	3605952	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3605953	Identifier	bin		3605929	0					
ANR	3605954	Identifier	ehdr		3605929	1					
ANR	3605955	Identifier	e_machine		3605929	1					
ANR	3605956	Identifier	EM_MIPS		3605929	1					
ANR	3605957	CompoundStatement		8:2:158:212	3605929	1					
ANR	3605958	IdentifierDeclStatement	const ut32 mipsType = bin -> ehdr . e_flags & EF_MIPS_ARCH ;	2356:2:73768:73822	3605929	0	True				
ANR	3605959	IdentifierDecl	mipsType = bin -> ehdr . e_flags & EF_MIPS_ARCH		3605929	0					
ANR	3605960	IdentifierDeclType	const ut32		3605929	0					
ANR	3605961	Identifier	mipsType		3605929	1					
ANR	3605962	AssignmentExpression	mipsType = bin -> ehdr . e_flags & EF_MIPS_ARCH		3605929	2		=			
ANR	3605963	Identifier	mipsType		3605929	0					
ANR	3605964	BitAndExpression	bin -> ehdr . e_flags & EF_MIPS_ARCH		3605929	1		&			
ANR	3605965	MemberAccess	bin -> ehdr . e_flags		3605929	0					
ANR	3605966	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3605967	Identifier	bin		3605929	0					
ANR	3605968	Identifier	ehdr		3605929	1					
ANR	3605969	Identifier	e_flags		3605929	1					
ANR	3605970	Identifier	EF_MIPS_ARCH		3605929	1					
ANR	3605971	IfStatement	if ( bin -> ehdr . e_type == ET_EXEC )		3605929	1					
ANR	3605972	Condition	bin -> ehdr . e_type == ET_EXEC	2357:6:73830:73856	3605929	0	True				
ANR	3605973	EqualityExpression	bin -> ehdr . e_type == ET_EXEC		3605929	0		==			
ANR	3605974	MemberAccess	bin -> ehdr . e_type		3605929	0					
ANR	3605975	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3605976	Identifier	bin		3605929	0					
ANR	3605977	Identifier	ehdr		3605929	1					
ANR	3605978	Identifier	e_type		3605929	1					
ANR	3605979	Identifier	ET_EXEC		3605929	1					
ANR	3605980	CompoundStatement		11:3:264:287	3605929	1					
ANR	3605981	IdentifierDeclStatement	int i ;	2358:3:73864:73869	3605929	0	True				
ANR	3605982	IdentifierDecl	i		3605929	0					
ANR	3605983	IdentifierDeclType	int		3605929	0					
ANR	3605984	Identifier	i		3605929	1					
ANR	3605985	IdentifierDeclStatement	bool haveInterp = false ;	2359:3:73874:73897	3605929	1	True				
ANR	3605986	IdentifierDecl	haveInterp = false		3605929	0					
ANR	3605987	IdentifierDeclType	bool		3605929	0					
ANR	3605988	Identifier	haveInterp		3605929	1					
ANR	3605989	AssignmentExpression	haveInterp = false		3605929	2		=			
ANR	3605990	Identifier	false		3605929	0					
ANR	3605991	Identifier	false		3605929	1					
ANR	3605992	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3605929	2					
ANR	3605993	ForInit	i = 0 ;	2360:8:73907:73912	3605929	0	True				
ANR	3605994	AssignmentExpression	i = 0		3605929	0		=			
ANR	3605995	Identifier	i		3605929	0					
ANR	3605996	PrimaryExpression	0		3605929	1					
ANR	3605997	Condition	i < bin -> ehdr . e_phnum	2360:15:73914:73934	3605929	1	True				
ANR	3605998	RelationalExpression	i < bin -> ehdr . e_phnum		3605929	0		<			
ANR	3605999	Identifier	i		3605929	0					
ANR	3606000	MemberAccess	bin -> ehdr . e_phnum		3605929	1					
ANR	3606001	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3606002	Identifier	bin		3605929	0					
ANR	3606003	Identifier	ehdr		3605929	1					
ANR	3606004	Identifier	e_phnum		3605929	1					
ANR	3606005	PostIncDecOperationExpression	i ++	2360:38:73937:73939	3605929	2	True				
ANR	3606006	Identifier	i		3605929	0					
ANR	3606007	IncDec	++		3605929	1					
ANR	3606008	CompoundStatement		12:43:332:332	3605929	3					
ANR	3606009	IfStatement	if ( bin -> phdr [ i ] . p_type == PT_INTERP )		3605929	0					
ANR	3606010	Condition	bin -> phdr [ i ] . p_type == PT_INTERP	2361:8:73952:73983	3605929	0	True				
ANR	3606011	EqualityExpression	bin -> phdr [ i ] . p_type == PT_INTERP		3605929	0		==			
ANR	3606012	MemberAccess	bin -> phdr [ i ] . p_type		3605929	0					
ANR	3606013	ArrayIndexing	bin -> phdr [ i ]		3605929	0					
ANR	3606014	PtrMemberAccess	bin -> phdr		3605929	0					
ANR	3606015	Identifier	bin		3605929	0					
ANR	3606016	Identifier	phdr		3605929	1					
ANR	3606017	Identifier	i		3605929	1					
ANR	3606018	Identifier	p_type		3605929	1					
ANR	3606019	Identifier	PT_INTERP		3605929	1					
ANR	3606020	CompoundStatement		13:42:376:376	3605929	1					
ANR	3606021	ExpressionStatement	haveInterp = true	2362:5:73993:74010	3605929	0	True				
ANR	3606022	AssignmentExpression	haveInterp = true		3605929	0		=			
ANR	3606023	Identifier	haveInterp		3605929	0					
ANR	3606024	Identifier	true		3605929	1					
ANR	3606025	IfStatement	if ( ! haveInterp && mipsType == EF_MIPS_ARCH_3 )		3605929	3					
ANR	3606026	Condition	! haveInterp && mipsType == EF_MIPS_ARCH_3	2365:7:74030:74070	3605929	0	True				
ANR	3606027	AndExpression	! haveInterp && mipsType == EF_MIPS_ARCH_3		3605929	0		&&			
ANR	3606028	UnaryOperationExpression	! haveInterp		3605929	0					
ANR	3606029	UnaryOperator	!		3605929	0					
ANR	3606030	Identifier	haveInterp		3605929	1					
ANR	3606031	EqualityExpression	mipsType == EF_MIPS_ARCH_3		3605929	1		==			
ANR	3606032	Identifier	mipsType		3605929	0					
ANR	3606033	Identifier	EF_MIPS_ARCH_3		3605929	1					
ANR	3606034	CompoundStatement		17:50:463:463	3605929	1					
ANR	3606035	ReturnStatement	return 64 ;	2367:4:74104:74113	3605929	0	True				
ANR	3606036	PrimaryExpression	64		3605929	0					
ANR	3606037	SwitchStatement	switch ( mipsType )		3605929	2					
ANR	3606038	Condition	mipsType	2371:10:74230:74237	3605929	0	True				
ANR	3606039	Identifier	mipsType		3605929	0					
ANR	3606040	CompoundStatement		23:20:630:630	3605929	1					
ANR	3606041	Label	case EF_MIPS_ARCH_1 :	2372:2:74244:74263	3605929	0	True				
ANR	3606042	Identifier	EF_MIPS_ARCH_1		3605929	0					
ANR	3606043	Label	case EF_MIPS_ARCH_2 :	2373:2:74267:74286	3605929	1	True				
ANR	3606044	Identifier	EF_MIPS_ARCH_2		3605929	0					
ANR	3606045	Label	case EF_MIPS_ARCH_3 :	2374:2:74290:74309	3605929	2	True				
ANR	3606046	Identifier	EF_MIPS_ARCH_3		3605929	0					
ANR	3606047	Label	case EF_MIPS_ARCH_4 :	2375:2:74313:74332	3605929	3	True				
ANR	3606048	Identifier	EF_MIPS_ARCH_4		3605929	0					
ANR	3606049	Label	case EF_MIPS_ARCH_5 :	2376:2:74336:74355	3605929	4	True				
ANR	3606050	Identifier	EF_MIPS_ARCH_5		3605929	0					
ANR	3606051	Label	case EF_MIPS_ARCH_32 :	2377:2:74359:74379	3605929	5	True				
ANR	3606052	Identifier	EF_MIPS_ARCH_32		3605929	0					
ANR	3606053	ReturnStatement	return 32 ;	2378:3:74384:74393	3605929	6	True				
ANR	3606054	PrimaryExpression	32		3605929	0					
ANR	3606055	Label	case EF_MIPS_ARCH_64 :	2379:2:74397:74417	3605929	7	True				
ANR	3606056	Identifier	EF_MIPS_ARCH_64		3605929	0					
ANR	3606057	ReturnStatement	return 64 ;	2380:3:74422:74431	3605929	8	True				
ANR	3606058	PrimaryExpression	64		3605929	0					
ANR	3606059	Label	case EF_MIPS_ARCH_32R2 :	2381:2:74435:74457	3605929	9	True				
ANR	3606060	Identifier	EF_MIPS_ARCH_32R2		3605929	0					
ANR	3606061	ReturnStatement	return 32 ;	2382:3:74462:74471	3605929	10	True				
ANR	3606062	PrimaryExpression	32		3605929	0					
ANR	3606063	Label	case EF_MIPS_ARCH_64R2 :	2383:2:74475:74497	3605929	11	True				
ANR	3606064	Identifier	EF_MIPS_ARCH_64R2		3605929	0					
ANR	3606065	ReturnStatement	return 64 ;	2384:3:74502:74511	3605929	12	True				
ANR	3606066	PrimaryExpression	64		3605929	0					
ANR	3606067	BreakStatement	break ;	2385:3:74516:74521	3605929	13	True				
ANR	3606068	ReturnStatement	return 32 ;	2387:2:74529:74538	3605929	3	True				
ANR	3606069	PrimaryExpression	32		3605929	0					
ANR	3606070	IfStatement	if ( bin -> ehdr . e_machine == EM_ARM )		3605929	2					
ANR	3606071	Condition	bin -> ehdr . e_machine == EM_ARM	2390:5:74570:74598	3605929	0	True				
ANR	3606072	EqualityExpression	bin -> ehdr . e_machine == EM_ARM		3605929	0		==			
ANR	3606073	MemberAccess	bin -> ehdr . e_machine		3605929	0					
ANR	3606074	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3606075	Identifier	bin		3605929	0					
ANR	3606076	Identifier	ehdr		3605929	1					
ANR	3606077	Identifier	e_machine		3605929	1					
ANR	3606078	Identifier	EM_ARM		3605929	1					
ANR	3606079	CompoundStatement		55:2:1277:1328	3605929	1					
ANR	3606080	IfStatement	if ( bin -> ehdr . e_type != ET_EXEC )		3605929	0					
ANR	3606081	Condition	bin -> ehdr . e_type != ET_EXEC	2391:6:74609:74635	3605929	0	True				
ANR	3606082	EqualityExpression	bin -> ehdr . e_type != ET_EXEC		3605929	0		!=			
ANR	3606083	MemberAccess	bin -> ehdr . e_type		3605929	0					
ANR	3606084	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3606085	Identifier	bin		3605929	0					
ANR	3606086	Identifier	ehdr		3605929	1					
ANR	3606087	Identifier	e_type		3605929	1					
ANR	3606088	Identifier	ET_EXEC		3605929	1					
ANR	3606089	CompoundStatement		44:3:1033:1066	3605929	1					
ANR	3606090	IdentifierDeclStatement	struct r_bin_elf_symbol_t * symbol ;	2392:3:74643:74676	3605929	0	True				
ANR	3606091	IdentifierDecl	* symbol		3605929	0					
ANR	3606092	IdentifierDeclType	struct r_bin_elf_symbol_t *		3605929	0					
ANR	3606093	Identifier	symbol		3605929	1					
ANR	3606094	IfStatement	if ( ( symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin ) ) )		3605929	1					
ANR	3606095	Condition	symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin )	2393:7:74685:74728	3605929	0	True				
ANR	3606096	AssignmentExpression	symbol = Elf_ ( r_bin_elf_get_symbols ) ( bin )		3605929	0		=			
ANR	3606097	Identifier	symbol		3605929	0					
ANR	3606098	CallExpression	Elf_ ( r_bin_elf_get_symbols ) ( bin )		3605929	1					
ANR	3606099	Callee	Elf_ ( r_bin_elf_get_symbols )		3605929	0					
ANR	3606100	CallExpression	Elf_ ( r_bin_elf_get_symbols )		3605929	0					
ANR	3606101	Callee	Elf_		3605929	0					
ANR	3606102	Identifier	Elf_		3605929	0					
ANR	3606103	ArgumentList	r_bin_elf_get_symbols		3605929	1					
ANR	3606104	Argument	r_bin_elf_get_symbols		3605929	0					
ANR	3606105	Identifier	r_bin_elf_get_symbols		3605929	0					
ANR	3606106	ArgumentList	bin		3605929	1					
ANR	3606107	Argument	bin		3605929	0					
ANR	3606108	Identifier	bin		3605929	0					
ANR	3606109	CompoundStatement		46:4:1127:1136	3605929	1					
ANR	3606110	IdentifierDeclStatement	int i = 0 ;	2394:4:74737:74746	3605929	0	True				
ANR	3606111	IdentifierDecl	i = 0		3605929	0					
ANR	3606112	IdentifierDeclType	int		3605929	0					
ANR	3606113	Identifier	i		3605929	1					
ANR	3606114	AssignmentExpression	i = 0		3605929	2		=			
ANR	3606115	Identifier	i		3605929	0					
ANR	3606116	PrimaryExpression	0		3605929	1					
ANR	3606117	ForStatement	for ( i = 0 ; ! symbol [ i ] . last ; i ++ )		3605929	1					
ANR	3606118	ForInit	i = 0 ;	2395:9:74757:74762	3605929	0	True				
ANR	3606119	AssignmentExpression	i = 0		3605929	0		=			
ANR	3606120	Identifier	i		3605929	0					
ANR	3606121	PrimaryExpression	0		3605929	1					
ANR	3606122	Condition	! symbol [ i ] . last	2395:16:74764:74778	3605929	1	True				
ANR	3606123	UnaryOperationExpression	! symbol [ i ] . last		3605929	0					
ANR	3606124	UnaryOperator	!		3605929	0					
ANR	3606125	MemberAccess	symbol [ i ] . last		3605929	1					
ANR	3606126	ArrayIndexing	symbol [ i ]		3605929	0					
ANR	3606127	Identifier	symbol		3605929	0					
ANR	3606128	Identifier	i		3605929	1					
ANR	3606129	Identifier	last		3605929	1					
ANR	3606130	PostIncDecOperationExpression	i ++	2395:33:74781:74783	3605929	2	True				
ANR	3606131	Identifier	i		3605929	0					
ANR	3606132	IncDec	++		3605929	1					
ANR	3606133	CompoundStatement		48:5:1183:1212	3605929	3					
ANR	3606134	IdentifierDeclStatement	ut64 paddr = symbol [ i ] . offset ;	2396:5:74793:74822	3605929	0	True				
ANR	3606135	IdentifierDecl	paddr = symbol [ i ] . offset		3605929	0					
ANR	3606136	IdentifierDeclType	ut64		3605929	0					
ANR	3606137	Identifier	paddr		3605929	1					
ANR	3606138	AssignmentExpression	paddr = symbol [ i ] . offset		3605929	2		=			
ANR	3606139	Identifier	paddr		3605929	0					
ANR	3606140	MemberAccess	symbol [ i ] . offset		3605929	1					
ANR	3606141	ArrayIndexing	symbol [ i ]		3605929	0					
ANR	3606142	Identifier	symbol		3605929	0					
ANR	3606143	Identifier	i		3605929	1					
ANR	3606144	Identifier	offset		3605929	1					
ANR	3606145	IfStatement	if ( paddr & 1 )		3605929	1					
ANR	3606146	Condition	paddr & 1	2397:9:74833:74841	3605929	0	True				
ANR	3606147	BitAndExpression	paddr & 1		3605929	0		&			
ANR	3606148	Identifier	paddr		3605929	0					
ANR	3606149	PrimaryExpression	1		3605929	1					
ANR	3606150	CompoundStatement		49:20:1234:1234	3605929	1					
ANR	3606151	ReturnStatement	return 16 ;	2398:6:74852:74861	3605929	0	True				
ANR	3606152	PrimaryExpression	16		3605929	0					
ANR	3606153	IdentifierDeclStatement	ut64 entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin ) ;	2403:2:74887:74938	3605929	1	True				
ANR	3606154	IdentifierDecl	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3605929	0					
ANR	3606155	IdentifierDeclType	ut64		3605929	0					
ANR	3606156	Identifier	entry		3605929	1					
ANR	3606157	AssignmentExpression	entry = Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3605929	2		=			
ANR	3606158	Identifier	entry		3605929	0					
ANR	3606159	CallExpression	Elf_ ( r_bin_elf_get_entry_offset ) ( bin )		3605929	1					
ANR	3606160	Callee	Elf_ ( r_bin_elf_get_entry_offset )		3605929	0					
ANR	3606161	CallExpression	Elf_ ( r_bin_elf_get_entry_offset )		3605929	0					
ANR	3606162	Callee	Elf_		3605929	0					
ANR	3606163	Identifier	Elf_		3605929	0					
ANR	3606164	ArgumentList	r_bin_elf_get_entry_offset		3605929	1					
ANR	3606165	Argument	r_bin_elf_get_entry_offset		3605929	0					
ANR	3606166	Identifier	r_bin_elf_get_entry_offset		3605929	0					
ANR	3606167	ArgumentList	bin		3605929	1					
ANR	3606168	Argument	bin		3605929	0					
ANR	3606169	Identifier	bin		3605929	0					
ANR	3606170	IfStatement	if ( entry & 1 )		3605929	2					
ANR	3606171	Condition	entry & 1	2404:6:74946:74954	3605929	0	True				
ANR	3606172	BitAndExpression	entry & 1		3605929	0		&			
ANR	3606173	Identifier	entry		3605929	0					
ANR	3606174	PrimaryExpression	1		3605929	1					
ANR	3606175	CompoundStatement		56:17:1347:1347	3605929	1					
ANR	3606176	ReturnStatement	return 16 ;	2405:3:74962:74971	3605929	0	True				
ANR	3606177	PrimaryExpression	16		3605929	0					
ANR	3606178	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_CLASS ] )		3605929	3					
ANR	3606179	Condition	bin -> ehdr . e_ident [ EI_CLASS ]	2408:9:74989:75015	3605929	0	True				
ANR	3606180	ArrayIndexing	bin -> ehdr . e_ident [ EI_CLASS ]		3605929	0					
ANR	3606181	MemberAccess	bin -> ehdr . e_ident		3605929	0					
ANR	3606182	PtrMemberAccess	bin -> ehdr		3605929	0					
ANR	3606183	Identifier	bin		3605929	0					
ANR	3606184	Identifier	ehdr		3605929	1					
ANR	3606185	Identifier	e_ident		3605929	1					
ANR	3606186	Identifier	EI_CLASS		3605929	1					
ANR	3606187	CompoundStatement		60:38:1408:1408	3605929	1					
ANR	3606188	Label	case ELFCLASS32 :	2409:1:75021:75036	3605929	0	True				
ANR	3606189	Identifier	ELFCLASS32		3605929	0					
ANR	3606190	ReturnStatement	return 32 ;	2409:20:75040:75049	3605929	1	True				
ANR	3606191	PrimaryExpression	32		3605929	0					
ANR	3606192	Label	case ELFCLASS64 :	2410:1:75052:75067	3605929	2	True				
ANR	3606193	Identifier	ELFCLASS64		3605929	0					
ANR	3606194	ReturnStatement	return 64 ;	2410:20:75071:75080	3605929	3	True				
ANR	3606195	PrimaryExpression	64		3605929	0					
ANR	3606196	Label	case ELFCLASSNONE :	2411:1:75083:75100	3605929	4	True				
ANR	3606197	Identifier	ELFCLASSNONE		3605929	0					
ANR	3606198	Label	default :	2412:1:75103:75110	3605929	5	True				
ANR	3606199	Identifier	default		3605929	0					
ANR	3606200	ReturnStatement	return 32 ;	2412:20:75122:75131	3605929	6	True				
ANR	3606201	PrimaryExpression	32		3605929	0					
ANR	3606202	ReturnType	int Elf_		3605929	1					
ANR	3606203	Identifier	( r_bin_elf_get_bits )		3605929	2					
ANR	3606204	Identifier	r_bin_elf_get_bits		3605929	3					
ANR	3606205	ParameterList	ELFOBJ * bin		3605929	4					
ANR	3606206	Parameter	ELFOBJ * bin	2349:29:73596:73606	3605929	0	True				
ANR	3606207	ParameterType	ELFOBJ *		3605929	0					
ANR	3606208	Identifier	bin		3605929	1					
ANR	3606209	CFGEntryNode	ENTRY		3605929		True				
ANR	3606210	CFGExitNode	EXIT		3605929		True				
ANR	3606211	Symbol	symbol [ i ] . last		3605929						
ANR	3606212	Symbol	symbol		3605929						
ANR	3606213	Symbol	EM_ARM		3605929						
ANR	3606214	Symbol	bin		3605929						
ANR	3606215	Symbol	EM_MIPS		3605929						
ANR	3606216	Symbol	bin -> phdr		3605929						
ANR	3606217	Symbol	r_bin_elf_get_symbols		3605929						
ANR	3606218	Symbol	* bin		3605929						
ANR	3606219	Symbol	mipsType		3605929						
ANR	3606220	Symbol	* EI_CLASS		3605929						
ANR	3606221	Symbol	EM_ARC_A5		3605929						
ANR	3606222	Symbol	bin -> ehdr . e_flags		3605929						
ANR	3606223	Symbol	* bin -> ehdr		3605929						
ANR	3606224	Symbol	PT_INTERP		3605929						
ANR	3606225	Symbol	bin -> ehdr . e_ident		3605929						
ANR	3606226	Symbol	bin -> ehdr		3605929						
ANR	3606227	Symbol	* * bin		3605929						
ANR	3606228	Symbol	* symbol		3605929						
ANR	3606229	Symbol	r_bin_elf_get_entry_offset		3605929						
ANR	3606230	Symbol	bin -> ehdr . e_type		3605929						
ANR	3606231	Symbol	Elf_		3605929						
ANR	3606232	Symbol	ET_EXEC		3605929						
ANR	3606233	Symbol	haveInterp		3605929						
ANR	3606234	Symbol	false		3605929						
ANR	3606235	Symbol	EF_MIPS_ARCH_3		3605929						
ANR	3606236	Symbol	i		3605929						
ANR	3606237	Symbol	bin -> ehdr . e_phnum		3605929						
ANR	3606238	Symbol	* bin -> ehdr . e_ident		3605929						
ANR	3606239	Symbol	* bin -> phdr		3605929						
ANR	3606240	Symbol	entry		3605929						
ANR	3606241	Symbol	* i		3605929						
ANR	3606242	Symbol	EI_CLASS		3605929						
ANR	3606243	Symbol	paddr		3605929						
ANR	3606244	Symbol	bin -> ehdr . e_machine		3605929						
ANR	3606245	Symbol	true		3605929						
ANR	3606246	Symbol	bin -> phdr [ i ] . p_type		3605929						
ANR	3606247	Symbol	EF_MIPS_ARCH		3605929						
ANR	3606248	Symbol	symbol [ i ] . offset		3605929						
ANR	3606249	Function	noodle	2416:0:75151:75395							
ANR	3606250	FunctionDef	"noodle (ELFOBJ * bin , const char * s)"		3606249	0					
ANR	3606251	CompoundStatement		2416:53:75204:75395	3606249	0					
ANR	3606252	IfStatement	if ( r_buf_size ( bin -> b ) <= 64 )		3606249	0					
ANR	3606253	Condition	r_buf_size ( bin -> b ) <= 64	2417:5:75211:75235	3606249	0	True				
ANR	3606254	RelationalExpression	r_buf_size ( bin -> b ) <= 64		3606249	0		<=			
ANR	3606255	CallExpression	r_buf_size ( bin -> b )		3606249	0					
ANR	3606256	Callee	r_buf_size		3606249	0					
ANR	3606257	Identifier	r_buf_size		3606249	0					
ANR	3606258	ArgumentList	bin -> b		3606249	1					
ANR	3606259	Argument	bin -> b		3606249	0					
ANR	3606260	PtrMemberAccess	bin -> b		3606249	0					
ANR	3606261	Identifier	bin		3606249	0					
ANR	3606262	Identifier	b		3606249	1					
ANR	3606263	PrimaryExpression	64		3606249	1					
ANR	3606264	CompoundStatement		2:33:34:34	3606249	1					
ANR	3606265	ReturnStatement	return 0 ;	2418:2:75243:75251	3606249	0	True				
ANR	3606266	PrimaryExpression	0		3606249	0					
ANR	3606267	IdentifierDeclStatement	ut8 tmp [ 64 ] ;	2420:1:75257:75268	3606249	1	True				
ANR	3606268	IdentifierDecl	tmp [ 64 ]		3606249	0					
ANR	3606269	IdentifierDeclType	ut8 [ 64 ]		3606249	0					
ANR	3606270	Identifier	tmp		3606249	1					
ANR	3606271	PrimaryExpression	64		3606249	2					
ANR	3606272	ExpressionStatement	"r_buf_read_at ( bin -> b , r_buf_size ( bin -> b ) - 64 , tmp , 64 )"	2421:1:75271:75328	3606249	2	True				
ANR	3606273	CallExpression	"r_buf_read_at ( bin -> b , r_buf_size ( bin -> b ) - 64 , tmp , 64 )"		3606249	0					
ANR	3606274	Callee	r_buf_read_at		3606249	0					
ANR	3606275	Identifier	r_buf_read_at		3606249	0					
ANR	3606276	ArgumentList	bin -> b		3606249	1					
ANR	3606277	Argument	bin -> b		3606249	0					
ANR	3606278	PtrMemberAccess	bin -> b		3606249	0					
ANR	3606279	Identifier	bin		3606249	0					
ANR	3606280	Identifier	b		3606249	1					
ANR	3606281	Argument	r_buf_size ( bin -> b ) - 64		3606249	1					
ANR	3606282	AdditiveExpression	r_buf_size ( bin -> b ) - 64		3606249	0		-			
ANR	3606283	CallExpression	r_buf_size ( bin -> b )		3606249	0					
ANR	3606284	Callee	r_buf_size		3606249	0					
ANR	3606285	Identifier	r_buf_size		3606249	0					
ANR	3606286	ArgumentList	bin -> b		3606249	1					
ANR	3606287	Argument	bin -> b		3606249	0					
ANR	3606288	PtrMemberAccess	bin -> b		3606249	0					
ANR	3606289	Identifier	bin		3606249	0					
ANR	3606290	Identifier	b		3606249	1					
ANR	3606291	PrimaryExpression	64		3606249	1					
ANR	3606292	Argument	tmp		3606249	2					
ANR	3606293	Identifier	tmp		3606249	0					
ANR	3606294	Argument	64		3606249	3					
ANR	3606295	PrimaryExpression	64		3606249	0					
ANR	3606296	ReturnStatement	"return r_mem_mem ( tmp , 64 , ( const ut8 * ) s , strlen ( s ) ) != NULL ;"	2422:1:75331:75393	3606249	3	True				
ANR	3606297	EqualityExpression	"r_mem_mem ( tmp , 64 , ( const ut8 * ) s , strlen ( s ) ) != NULL"		3606249	0		!=			
ANR	3606298	CallExpression	"r_mem_mem ( tmp , 64 , ( const ut8 * ) s , strlen ( s ) )"		3606249	0					
ANR	3606299	Callee	r_mem_mem		3606249	0					
ANR	3606300	Identifier	r_mem_mem		3606249	0					
ANR	3606301	ArgumentList	tmp		3606249	1					
ANR	3606302	Argument	tmp		3606249	0					
ANR	3606303	Identifier	tmp		3606249	0					
ANR	3606304	Argument	64		3606249	1					
ANR	3606305	PrimaryExpression	64		3606249	0					
ANR	3606306	Argument	( const ut8 * ) s		3606249	2					
ANR	3606307	CastExpression	( const ut8 * ) s		3606249	0					
ANR	3606308	CastTarget	const ut8 *		3606249	0					
ANR	3606309	Identifier	s		3606249	1					
ANR	3606310	Argument	strlen ( s )		3606249	3					
ANR	3606311	CallExpression	strlen ( s )		3606249	0					
ANR	3606312	Callee	strlen		3606249	0					
ANR	3606313	Identifier	strlen		3606249	0					
ANR	3606314	ArgumentList	s		3606249	1					
ANR	3606315	Argument	s		3606249	0					
ANR	3606316	Identifier	s		3606249	0					
ANR	3606317	Identifier	NULL		3606249	1					
ANR	3606318	ReturnType	static inline int		3606249	1					
ANR	3606319	Identifier	noodle		3606249	2					
ANR	3606320	ParameterList	"ELFOBJ * bin , const char * s"		3606249	3					
ANR	3606321	Parameter	ELFOBJ * bin	2416:25:75176:75186	3606249	0	True				
ANR	3606322	ParameterType	ELFOBJ *		3606249	0					
ANR	3606323	Identifier	bin		3606249	1					
ANR	3606324	Parameter	const char * s	2416:38:75189:75201	3606249	1	True				
ANR	3606325	ParameterType	const char *		3606249	0					
ANR	3606326	Identifier	s		3606249	1					
ANR	3606327	CFGEntryNode	ENTRY		3606249		True				
ANR	3606328	CFGExitNode	EXIT		3606249		True				
ANR	3606329	Symbol	strlen		3606249						
ANR	3606330	Symbol	bin -> b		3606249						
ANR	3606331	Symbol	s		3606249						
ANR	3606332	Symbol	NULL		3606249						
ANR	3606333	Symbol	bin		3606249						
ANR	3606334	Symbol	tmp		3606249						
ANR	3606335	Symbol	r_mem_mem		3606249						
ANR	3606336	Symbol	r_buf_size		3606249						
ANR	3606337	Symbol	* bin		3606249						
ANR	3606338	Function	needle	2425:0:75398:75692							
ANR	3606339	FunctionDef	"needle (ELFOBJ * bin , const char * s)"		3606338	0					
ANR	3606340	CompoundStatement		2425:53:75451:75692	3606338	0					
ANR	3606341	IfStatement	if ( bin -> shstrtab )		3606338	0					
ANR	3606342	Condition	bin -> shstrtab	2426:5:75458:75470	3606338	0	True				
ANR	3606343	PtrMemberAccess	bin -> shstrtab		3606338	0					
ANR	3606344	Identifier	bin		3606338	0					
ANR	3606345	Identifier	shstrtab		3606338	1					
ANR	3606346	CompoundStatement		3:2:25:54	3606338	1					
ANR	3606347	IdentifierDeclStatement	ut32 len = bin -> shstrtab_size ;	2427:2:75477:75506	3606338	0	True				
ANR	3606348	IdentifierDecl	len = bin -> shstrtab_size		3606338	0					
ANR	3606349	IdentifierDeclType	ut32		3606338	0					
ANR	3606350	Identifier	len		3606338	1					
ANR	3606351	AssignmentExpression	len = bin -> shstrtab_size		3606338	2		=			
ANR	3606352	Identifier	len		3606338	0					
ANR	3606353	PtrMemberAccess	bin -> shstrtab_size		3606338	1					
ANR	3606354	Identifier	bin		3606338	0					
ANR	3606355	Identifier	shstrtab_size		3606338	1					
ANR	3606356	IfStatement	if ( len > 4096 )		3606338	1					
ANR	3606357	Condition	len > 4096	2428:6:75514:75523	3606338	0	True				
ANR	3606358	RelationalExpression	len > 4096		3606338	0		>			
ANR	3606359	Identifier	len		3606338	0					
ANR	3606360	PrimaryExpression	4096		3606338	1					
ANR	3606361	CompoundStatement		4:18:74:74	3606338	1					
ANR	3606362	ExpressionStatement	len = 4096	2429:3:75531:75541	3606338	0	True				
ANR	3606363	AssignmentExpression	len = 4096		3606338	0		=			
ANR	3606364	Identifier	len		3606338	0					
ANR	3606365	PrimaryExpression	4096		3606338	1					
ANR	3606366	ReturnStatement	"return r_mem_mem ( ( const ut8 * ) bin -> shstrtab , len , ( const ut8 * ) s , strlen ( s ) ) != NULL ;"	2431:2:75588:75676	3606338	2	True				
ANR	3606367	EqualityExpression	"r_mem_mem ( ( const ut8 * ) bin -> shstrtab , len , ( const ut8 * ) s , strlen ( s ) ) != NULL"		3606338	0		!=			
ANR	3606368	CallExpression	"r_mem_mem ( ( const ut8 * ) bin -> shstrtab , len , ( const ut8 * ) s , strlen ( s ) )"		3606338	0					
ANR	3606369	Callee	r_mem_mem		3606338	0					
ANR	3606370	Identifier	r_mem_mem		3606338	0					
ANR	3606371	ArgumentList	( const ut8 * ) bin -> shstrtab		3606338	1					
ANR	3606372	Argument	( const ut8 * ) bin -> shstrtab		3606338	0					
ANR	3606373	CastExpression	( const ut8 * ) bin -> shstrtab		3606338	0					
ANR	3606374	CastTarget	const ut8 *		3606338	0					
ANR	3606375	PtrMemberAccess	bin -> shstrtab		3606338	1					
ANR	3606376	Identifier	bin		3606338	0					
ANR	3606377	Identifier	shstrtab		3606338	1					
ANR	3606378	Argument	len		3606338	1					
ANR	3606379	Identifier	len		3606338	0					
ANR	3606380	Argument	( const ut8 * ) s		3606338	2					
ANR	3606381	CastExpression	( const ut8 * ) s		3606338	0					
ANR	3606382	CastTarget	const ut8 *		3606338	0					
ANR	3606383	Identifier	s		3606338	1					
ANR	3606384	Argument	strlen ( s )		3606338	3					
ANR	3606385	CallExpression	strlen ( s )		3606338	0					
ANR	3606386	Callee	strlen		3606338	0					
ANR	3606387	Identifier	strlen		3606338	0					
ANR	3606388	ArgumentList	s		3606338	1					
ANR	3606389	Argument	s		3606338	0					
ANR	3606390	Identifier	s		3606338	0					
ANR	3606391	Identifier	NULL		3606338	1					
ANR	3606392	ReturnStatement	return 0 ;	2434:1:75682:75690	3606338	1	True				
ANR	3606393	PrimaryExpression	0		3606338	0					
ANR	3606394	ReturnType	static inline int		3606338	1					
ANR	3606395	Identifier	needle		3606338	2					
ANR	3606396	ParameterList	"ELFOBJ * bin , const char * s"		3606338	3					
ANR	3606397	Parameter	ELFOBJ * bin	2425:25:75423:75433	3606338	0	True				
ANR	3606398	ParameterType	ELFOBJ *		3606338	0					
ANR	3606399	Identifier	bin		3606338	1					
ANR	3606400	Parameter	const char * s	2425:38:75436:75448	3606338	1	True				
ANR	3606401	ParameterType	const char *		3606338	0					
ANR	3606402	Identifier	s		3606338	1					
ANR	3606403	CFGEntryNode	ENTRY		3606338		True				
ANR	3606404	CFGExitNode	EXIT		3606338		True				
ANR	3606405	Symbol	strlen		3606338						
ANR	3606406	Symbol	s		3606338						
ANR	3606407	Symbol	NULL		3606338						
ANR	3606408	Symbol	len		3606338						
ANR	3606409	Symbol	bin		3606338						
ANR	3606410	Symbol	bin -> shstrtab_size		3606338						
ANR	3606411	Symbol	bin -> shstrtab		3606338						
ANR	3606412	Symbol	r_mem_mem		3606338						
ANR	3606413	Symbol	* bin		3606338						
ANR	3606414	Function	r_bin_elf_get_osabi_name	2438:6:75788:76987							
ANR	3606415	FunctionDef	r_bin_elf_get_osabi_name (ELFOBJ * bin)		3606414	0					
ANR	3606416	CompoundStatement		2438:50:75832:76987	3606414	0					
ANR	3606417	IdentifierDeclStatement	size_t i ;	2439:1:75835:75843	3606414	0	True				
ANR	3606418	IdentifierDecl	i		3606414	0					
ANR	3606419	IdentifierDeclType	size_t		3606414	0					
ANR	3606420	Identifier	i		3606414	1					
ANR	3606421	IdentifierDeclStatement	size_t num = bin -> ehdr . e_shnum ;	2440:1:75846:75876	3606414	1	True				
ANR	3606422	IdentifierDecl	num = bin -> ehdr . e_shnum		3606414	0					
ANR	3606423	IdentifierDeclType	size_t		3606414	0					
ANR	3606424	Identifier	num		3606414	1					
ANR	3606425	AssignmentExpression	num = bin -> ehdr . e_shnum		3606414	2		=			
ANR	3606426	Identifier	num		3606414	0					
ANR	3606427	MemberAccess	bin -> ehdr . e_shnum		3606414	1					
ANR	3606428	PtrMemberAccess	bin -> ehdr		3606414	0					
ANR	3606429	Identifier	bin		3606414	0					
ANR	3606430	Identifier	ehdr		3606414	1					
ANR	3606431	Identifier	e_shnum		3606414	1					
ANR	3606432	IdentifierDeclStatement	const char * section_name = NULL ;	2441:1:75879:75910	3606414	2	True				
ANR	3606433	IdentifierDecl	* section_name = NULL		3606414	0					
ANR	3606434	IdentifierDeclType	const char *		3606414	0					
ANR	3606435	Identifier	section_name		3606414	1					
ANR	3606436	AssignmentExpression	* section_name = NULL		3606414	2		=			
ANR	3606437	Identifier	NULL		3606414	0					
ANR	3606438	Identifier	NULL		3606414	1					
ANR	3606439	SwitchStatement	switch ( bin -> ehdr . e_ident [ EI_OSABI ] )		3606414	3					
ANR	3606440	Condition	bin -> ehdr . e_ident [ EI_OSABI ]	2442:9:75921:75947	3606414	0	True				
ANR	3606441	ArrayIndexing	bin -> ehdr . e_ident [ EI_OSABI ]		3606414	0					
ANR	3606442	MemberAccess	bin -> ehdr . e_ident		3606414	0					
ANR	3606443	PtrMemberAccess	bin -> ehdr		3606414	0					
ANR	3606444	Identifier	bin		3606414	0					
ANR	3606445	Identifier	ehdr		3606414	1					
ANR	3606446	Identifier	e_ident		3606414	1					
ANR	3606447	Identifier	EI_OSABI		3606414	1					
ANR	3606448	CompoundStatement		5:38:117:117	3606414	1					
ANR	3606449	Label	case ELFOSABI_LINUX :	2443:1:75953:75972	3606414	0	True				
ANR	3606450	Identifier	ELFOSABI_LINUX		3606414	0					
ANR	3606451	ReturnStatement	"return strdup ( ""linux"" ) ;"	2443:22:75974:75996	3606414	1	True				
ANR	3606452	CallExpression	"strdup ( ""linux"" )"		3606414	0					
ANR	3606453	Callee	strdup		3606414	0					
ANR	3606454	Identifier	strdup		3606414	0					
ANR	3606455	ArgumentList	"""linux"""		3606414	1					
ANR	3606456	Argument	"""linux"""		3606414	0					
ANR	3606457	PrimaryExpression	"""linux"""		3606414	0					
ANR	3606458	Label	case ELFOSABI_SOLARIS :	2444:1:75999:76020	3606414	2	True				
ANR	3606459	Identifier	ELFOSABI_SOLARIS		3606414	0					
ANR	3606460	ReturnStatement	"return strdup ( ""solaris"" ) ;"	2444:24:76022:76046	3606414	3	True				
ANR	3606461	CallExpression	"strdup ( ""solaris"" )"		3606414	0					
ANR	3606462	Callee	strdup		3606414	0					
ANR	3606463	Identifier	strdup		3606414	0					
ANR	3606464	ArgumentList	"""solaris"""		3606414	1					
ANR	3606465	Argument	"""solaris"""		3606414	0					
ANR	3606466	PrimaryExpression	"""solaris"""		3606414	0					
ANR	3606467	Label	case ELFOSABI_FREEBSD :	2445:1:76049:76070	3606414	4	True				
ANR	3606468	Identifier	ELFOSABI_FREEBSD		3606414	0					
ANR	3606469	ReturnStatement	"return strdup ( ""freebsd"" ) ;"	2445:24:76072:76096	3606414	5	True				
ANR	3606470	CallExpression	"strdup ( ""freebsd"" )"		3606414	0					
ANR	3606471	Callee	strdup		3606414	0					
ANR	3606472	Identifier	strdup		3606414	0					
ANR	3606473	ArgumentList	"""freebsd"""		3606414	1					
ANR	3606474	Argument	"""freebsd"""		3606414	0					
ANR	3606475	PrimaryExpression	"""freebsd"""		3606414	0					
ANR	3606476	Label	case ELFOSABI_HPUX :	2446:1:76099:76117	3606414	6	True				
ANR	3606477	Identifier	ELFOSABI_HPUX		3606414	0					
ANR	3606478	ReturnStatement	"return strdup ( ""hpux"" ) ;"	2446:21:76119:76140	3606414	7	True				
ANR	3606479	CallExpression	"strdup ( ""hpux"" )"		3606414	0					
ANR	3606480	Callee	strdup		3606414	0					
ANR	3606481	Identifier	strdup		3606414	0					
ANR	3606482	ArgumentList	"""hpux"""		3606414	1					
ANR	3606483	Argument	"""hpux"""		3606414	0					
ANR	3606484	PrimaryExpression	"""hpux"""		3606414	0					
ANR	3606485	IfStatement	if ( bin -> shdr && bin -> shstrtab )		3606414	4					
ANR	3606486	Condition	bin -> shdr && bin -> shstrtab	2449:5:76151:76176	3606414	0	True				
ANR	3606487	AndExpression	bin -> shdr && bin -> shstrtab		3606414	0		&&			
ANR	3606488	PtrMemberAccess	bin -> shdr		3606414	0					
ANR	3606489	Identifier	bin		3606414	0					
ANR	3606490	Identifier	shdr		3606414	1					
ANR	3606491	PtrMemberAccess	bin -> shstrtab		3606414	1					
ANR	3606492	Identifier	bin		3606414	0					
ANR	3606493	Identifier	shstrtab		3606414	1					
ANR	3606494	CompoundStatement		12:33:346:346	3606414	1					
ANR	3606495	ForStatement	for ( i = 0 ; i < num ; i ++ )		3606414	0					
ANR	3606496	ForInit	i = 0 ;	2450:7:76188:76193	3606414	0	True				
ANR	3606497	AssignmentExpression	i = 0		3606414	0		=			
ANR	3606498	Identifier	i		3606414	0					
ANR	3606499	PrimaryExpression	0		3606414	1					
ANR	3606500	Condition	i < num	2450:14:76195:76201	3606414	1	True				
ANR	3606501	RelationalExpression	i < num		3606414	0		<			
ANR	3606502	Identifier	i		3606414	0					
ANR	3606503	Identifier	num		3606414	1					
ANR	3606504	PostIncDecOperationExpression	i ++	2450:23:76204:76206	3606414	2	True				
ANR	3606505	Identifier	i		3606414	0					
ANR	3606506	IncDec	++		3606414	1					
ANR	3606507	CompoundStatement		13:28:376:376	3606414	3					
ANR	3606508	IfStatement	if ( bin -> shdr [ i ] . sh_type == SHT_NOTE && bin -> shdr [ i ] . sh_name < bin -> shstrtab_size )		3606414	0					
ANR	3606509	Condition	bin -> shdr [ i ] . sh_type == SHT_NOTE && bin -> shdr [ i ] . sh_name < bin -> shstrtab_size	2451:7:76218:76294	3606414	0	True				
ANR	3606510	AndExpression	bin -> shdr [ i ] . sh_type == SHT_NOTE && bin -> shdr [ i ] . sh_name < bin -> shstrtab_size		3606414	0		&&			
ANR	3606511	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_NOTE		3606414	0		==			
ANR	3606512	MemberAccess	bin -> shdr [ i ] . sh_type		3606414	0					
ANR	3606513	ArrayIndexing	bin -> shdr [ i ]		3606414	0					
ANR	3606514	PtrMemberAccess	bin -> shdr		3606414	0					
ANR	3606515	Identifier	bin		3606414	0					
ANR	3606516	Identifier	shdr		3606414	1					
ANR	3606517	Identifier	i		3606414	1					
ANR	3606518	Identifier	sh_type		3606414	1					
ANR	3606519	Identifier	SHT_NOTE		3606414	1					
ANR	3606520	RelationalExpression	bin -> shdr [ i ] . sh_name < bin -> shstrtab_size		3606414	1		<			
ANR	3606521	MemberAccess	bin -> shdr [ i ] . sh_name		3606414	0					
ANR	3606522	ArrayIndexing	bin -> shdr [ i ]		3606414	0					
ANR	3606523	PtrMemberAccess	bin -> shdr		3606414	0					
ANR	3606524	Identifier	bin		3606414	0					
ANR	3606525	Identifier	shdr		3606414	1					
ANR	3606526	Identifier	i		3606414	1					
ANR	3606527	Identifier	sh_name		3606414	1					
ANR	3606528	PtrMemberAccess	bin -> shstrtab_size		3606414	1					
ANR	3606529	Identifier	bin		3606414	0					
ANR	3606530	Identifier	shstrtab_size		3606414	1					
ANR	3606531	CompoundStatement		14:86:464:464	3606414	1					
ANR	3606532	ExpressionStatement	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]	2452:4:76303:76354	3606414	0	True				
ANR	3606533	AssignmentExpression	section_name = & bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		3606414	0		=			
ANR	3606534	Identifier	section_name		3606414	0					
ANR	3606535	UnaryOperationExpression	& bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		3606414	1					
ANR	3606536	UnaryOperator	&		3606414	0					
ANR	3606537	ArrayIndexing	bin -> shstrtab [ bin -> shdr [ i ] . sh_name ]		3606414	1					
ANR	3606538	PtrMemberAccess	bin -> shstrtab		3606414	0					
ANR	3606539	Identifier	bin		3606414	0					
ANR	3606540	Identifier	shstrtab		3606414	1					
ANR	3606541	MemberAccess	bin -> shdr [ i ] . sh_name		3606414	1					
ANR	3606542	ArrayIndexing	bin -> shdr [ i ]		3606414	0					
ANR	3606543	PtrMemberAccess	bin -> shdr		3606414	0					
ANR	3606544	Identifier	bin		3606414	0					
ANR	3606545	Identifier	shdr		3606414	1					
ANR	3606546	Identifier	i		3606414	1					
ANR	3606547	Identifier	sh_name		3606414	1					
ANR	3606548	IfStatement	"if ( ! strcmp ( section_name , "".note.openbsd.ident"" ) )"		3606414	1					
ANR	3606549	Condition	"! strcmp ( section_name , "".note.openbsd.ident"" )"	2453:8:76364:76408	3606414	0	True				
ANR	3606550	UnaryOperationExpression	"! strcmp ( section_name , "".note.openbsd.ident"" )"		3606414	0					
ANR	3606551	UnaryOperator	!		3606414	0					
ANR	3606552	CallExpression	"strcmp ( section_name , "".note.openbsd.ident"" )"		3606414	1					
ANR	3606553	Callee	strcmp		3606414	0					
ANR	3606554	Identifier	strcmp		3606414	0					
ANR	3606555	ArgumentList	section_name		3606414	1					
ANR	3606556	Argument	section_name		3606414	0					
ANR	3606557	Identifier	section_name		3606414	0					
ANR	3606558	Argument	""".note.openbsd.ident"""		3606414	1					
ANR	3606559	PrimaryExpression	""".note.openbsd.ident"""		3606414	0					
ANR	3606560	CompoundStatement		16:55:578:578	3606414	1					
ANR	3606561	ReturnStatement	"return strdup ( ""openbsd"" ) ;"	2454:5:76418:76443	3606414	0	True				
ANR	3606562	CallExpression	"strdup ( ""openbsd"" )"		3606414	0					
ANR	3606563	Callee	strdup		3606414	0					
ANR	3606564	Identifier	strdup		3606414	0					
ANR	3606565	ArgumentList	"""openbsd"""		3606414	1					
ANR	3606566	Argument	"""openbsd"""		3606414	0					
ANR	3606567	PrimaryExpression	"""openbsd"""		3606414	0					
ANR	3606568	IfStatement	"if ( ! strcmp ( section_name , "".note.minix.ident"" ) )"		3606414	2					
ANR	3606569	Condition	"! strcmp ( section_name , "".note.minix.ident"" )"	2456:8:76459:76501	3606414	0	True				
ANR	3606570	UnaryOperationExpression	"! strcmp ( section_name , "".note.minix.ident"" )"		3606414	0					
ANR	3606571	UnaryOperator	!		3606414	0					
ANR	3606572	CallExpression	"strcmp ( section_name , "".note.minix.ident"" )"		3606414	1					
ANR	3606573	Callee	strcmp		3606414	0					
ANR	3606574	Identifier	strcmp		3606414	0					
ANR	3606575	ArgumentList	section_name		3606414	1					
ANR	3606576	Argument	section_name		3606414	0					
ANR	3606577	Identifier	section_name		3606414	0					
ANR	3606578	Argument	""".note.minix.ident"""		3606414	1					
ANR	3606579	PrimaryExpression	""".note.minix.ident"""		3606414	0					
ANR	3606580	CompoundStatement		19:53:671:671	3606414	1					
ANR	3606581	ReturnStatement	"return strdup ( ""minix"" ) ;"	2457:5:76511:76534	3606414	0	True				
ANR	3606582	CallExpression	"strdup ( ""minix"" )"		3606414	0					
ANR	3606583	Callee	strdup		3606414	0					
ANR	3606584	Identifier	strdup		3606414	0					
ANR	3606585	ArgumentList	"""minix"""		3606414	1					
ANR	3606586	Argument	"""minix"""		3606414	0					
ANR	3606587	PrimaryExpression	"""minix"""		3606414	0					
ANR	3606588	IfStatement	"if ( ! strcmp ( section_name , "".note.netbsd.ident"" ) )"		3606414	3					
ANR	3606589	Condition	"! strcmp ( section_name , "".note.netbsd.ident"" )"	2459:8:76550:76593	3606414	0	True				
ANR	3606590	UnaryOperationExpression	"! strcmp ( section_name , "".note.netbsd.ident"" )"		3606414	0					
ANR	3606591	UnaryOperator	!		3606414	0					
ANR	3606592	CallExpression	"strcmp ( section_name , "".note.netbsd.ident"" )"		3606414	1					
ANR	3606593	Callee	strcmp		3606414	0					
ANR	3606594	Identifier	strcmp		3606414	0					
ANR	3606595	ArgumentList	section_name		3606414	1					
ANR	3606596	Argument	section_name		3606414	0					
ANR	3606597	Identifier	section_name		3606414	0					
ANR	3606598	Argument	""".note.netbsd.ident"""		3606414	1					
ANR	3606599	PrimaryExpression	""".note.netbsd.ident"""		3606414	0					
ANR	3606600	CompoundStatement		22:54:763:763	3606414	1					
ANR	3606601	ReturnStatement	"return strdup ( ""netbsd"" ) ;"	2460:5:76603:76627	3606414	0	True				
ANR	3606602	CallExpression	"strdup ( ""netbsd"" )"		3606414	0					
ANR	3606603	Callee	strdup		3606414	0					
ANR	3606604	Identifier	strdup		3606414	0					
ANR	3606605	ArgumentList	"""netbsd"""		3606414	1					
ANR	3606606	Argument	"""netbsd"""		3606414	0					
ANR	3606607	PrimaryExpression	"""netbsd"""		3606414	0					
ANR	3606608	IfStatement	"if ( ! strcmp ( section_name , "".note.android.ident"" ) )"		3606414	4					
ANR	3606609	Condition	"! strcmp ( section_name , "".note.android.ident"" )"	2462:8:76643:76687	3606414	0	True				
ANR	3606610	UnaryOperationExpression	"! strcmp ( section_name , "".note.android.ident"" )"		3606414	0					
ANR	3606611	UnaryOperator	!		3606414	0					
ANR	3606612	CallExpression	"strcmp ( section_name , "".note.android.ident"" )"		3606414	1					
ANR	3606613	Callee	strcmp		3606414	0					
ANR	3606614	Identifier	strcmp		3606414	0					
ANR	3606615	ArgumentList	section_name		3606414	1					
ANR	3606616	Argument	section_name		3606414	0					
ANR	3606617	Identifier	section_name		3606414	0					
ANR	3606618	Argument	""".note.android.ident"""		3606414	1					
ANR	3606619	PrimaryExpression	""".note.android.ident"""		3606414	0					
ANR	3606620	CompoundStatement		25:55:857:857	3606414	1					
ANR	3606621	ReturnStatement	"return strdup ( ""android"" ) ;"	2463:5:76697:76722	3606414	0	True				
ANR	3606622	CallExpression	"strdup ( ""android"" )"		3606414	0					
ANR	3606623	Callee	strdup		3606414	0					
ANR	3606624	Identifier	strdup		3606414	0					
ANR	3606625	ArgumentList	"""android"""		3606414	1					
ANR	3606626	Argument	"""android"""		3606414	0					
ANR	3606627	PrimaryExpression	"""android"""		3606414	0					
ANR	3606628	IfStatement	"if ( needle ( bin , ""freebsd"" ) )"		3606414	5					
ANR	3606629	Condition	"needle ( bin , ""freebsd"" )"	2469:5:76774:76796	3606414	0	True				
ANR	3606630	CallExpression	"needle ( bin , ""freebsd"" )"		3606414	0					
ANR	3606631	Callee	needle		3606414	0					
ANR	3606632	Identifier	needle		3606414	0					
ANR	3606633	ArgumentList	bin		3606414	1					
ANR	3606634	Argument	bin		3606414	0					
ANR	3606635	Identifier	bin		3606414	0					
ANR	3606636	Argument	"""freebsd"""		3606414	1					
ANR	3606637	PrimaryExpression	"""freebsd"""		3606414	0					
ANR	3606638	CompoundStatement		32:30:966:966	3606414	1					
ANR	3606639	ReturnStatement	"return strdup ( ""freebsd"" ) ;"	2470:2:76803:76828	3606414	0	True				
ANR	3606640	CallExpression	"strdup ( ""freebsd"" )"		3606414	0					
ANR	3606641	Callee	strdup		3606414	0					
ANR	3606642	Identifier	strdup		3606414	0					
ANR	3606643	ArgumentList	"""freebsd"""		3606414	1					
ANR	3606644	Argument	"""freebsd"""		3606414	0					
ANR	3606645	PrimaryExpression	"""freebsd"""		3606414	0					
ANR	3606646	IfStatement	"if ( noodle ( bin , ""BEOS:APP_VERSION"" ) )"		3606414	6					
ANR	3606647	Condition	"noodle ( bin , ""BEOS:APP_VERSION"" )"	2472:5:76838:76869	3606414	0	True				
ANR	3606648	CallExpression	"noodle ( bin , ""BEOS:APP_VERSION"" )"		3606414	0					
ANR	3606649	Callee	noodle		3606414	0					
ANR	3606650	Identifier	noodle		3606414	0					
ANR	3606651	ArgumentList	bin		3606414	1					
ANR	3606652	Argument	bin		3606414	0					
ANR	3606653	Identifier	bin		3606414	0					
ANR	3606654	Argument	"""BEOS:APP_VERSION"""		3606414	1					
ANR	3606655	PrimaryExpression	"""BEOS:APP_VERSION"""		3606414	0					
ANR	3606656	CompoundStatement		35:39:1039:1039	3606414	1					
ANR	3606657	ReturnStatement	"return strdup ( ""beos"" ) ;"	2473:2:76876:76898	3606414	0	True				
ANR	3606658	CallExpression	"strdup ( ""beos"" )"		3606414	0					
ANR	3606659	Callee	strdup		3606414	0					
ANR	3606660	Identifier	strdup		3606414	0					
ANR	3606661	ArgumentList	"""beos"""		3606414	1					
ANR	3606662	Argument	"""beos"""		3606414	0					
ANR	3606663	PrimaryExpression	"""beos"""		3606414	0					
ANR	3606664	IfStatement	"if ( needle ( bin , ""GNU"" ) )"		3606414	7					
ANR	3606665	Condition	"needle ( bin , ""GNU"" )"	2475:5:76908:76926	3606414	0	True				
ANR	3606666	CallExpression	"needle ( bin , ""GNU"" )"		3606414	0					
ANR	3606667	Callee	needle		3606414	0					
ANR	3606668	Identifier	needle		3606414	0					
ANR	3606669	ArgumentList	bin		3606414	1					
ANR	3606670	Argument	bin		3606414	0					
ANR	3606671	Identifier	bin		3606414	0					
ANR	3606672	Argument	"""GNU"""		3606414	1					
ANR	3606673	PrimaryExpression	"""GNU"""		3606414	0					
ANR	3606674	CompoundStatement		38:26:1096:1096	3606414	1					
ANR	3606675	ReturnStatement	"return strdup ( ""linux"" ) ;"	2476:2:76933:76956	3606414	0	True				
ANR	3606676	CallExpression	"strdup ( ""linux"" )"		3606414	0					
ANR	3606677	Callee	strdup		3606414	0					
ANR	3606678	Identifier	strdup		3606414	0					
ANR	3606679	ArgumentList	"""linux"""		3606414	1					
ANR	3606680	Argument	"""linux"""		3606414	0					
ANR	3606681	PrimaryExpression	"""linux"""		3606414	0					
ANR	3606682	ReturnStatement	"return strdup ( ""linux"" ) ;"	2478:1:76962:76985	3606414	8	True				
ANR	3606683	CallExpression	"strdup ( ""linux"" )"		3606414	0					
ANR	3606684	Callee	strdup		3606414	0					
ANR	3606685	Identifier	strdup		3606414	0					
ANR	3606686	ArgumentList	"""linux"""		3606414	1					
ANR	3606687	Argument	"""linux"""		3606414	0					
ANR	3606688	PrimaryExpression	"""linux"""		3606414	0					
ANR	3606689	ReturnType	Elf_		3606414	1					
ANR	3606690	Identifier	( r_bin_elf_get_osabi_name )		3606414	2					
ANR	3606691	Identifier	r_bin_elf_get_osabi_name		3606414	3					
ANR	3606692	ParameterList	ELFOBJ * bin		3606414	4					
ANR	3606693	Parameter	ELFOBJ * bin	2438:37:75819:75829	3606414	0	True				
ANR	3606694	ParameterType	ELFOBJ *		3606414	0					
ANR	3606695	Identifier	bin		3606414	1					
ANR	3606696	CFGEntryNode	ENTRY		3606414		True				
ANR	3606697	CFGExitNode	EXIT		3606414		True				
ANR	3606698	Symbol	bin -> ehdr . e_shnum		3606414						
ANR	3606699	Symbol	bin		3606414						
ANR	3606700	Symbol	num		3606414						
ANR	3606701	Symbol	bin -> shstrtab_size		3606414						
ANR	3606702	Symbol	bin -> shstrtab		3606414						
ANR	3606703	Symbol	* bin -> shdr		3606414						
ANR	3606704	Symbol	noodle		3606414						
ANR	3606705	Symbol	* bin		3606414						
ANR	3606706	Symbol	* bin -> ehdr		3606414						
ANR	3606707	Symbol	bin -> ehdr . e_ident		3606414						
ANR	3606708	Symbol	bin -> ehdr		3606414						
ANR	3606709	Symbol	* * bin		3606414						
ANR	3606710	Symbol	strcmp		3606414						
ANR	3606711	Symbol	NULL		3606414						
ANR	3606712	Symbol	section_name		3606414						
ANR	3606713	Symbol	i		3606414						
ANR	3606714	Symbol	SHT_NOTE		3606414						
ANR	3606715	Symbol	bin -> shdr [ i ] . sh_name		3606414						
ANR	3606716	Symbol	* bin -> ehdr . e_ident		3606414						
ANR	3606717	Symbol	bin -> shdr		3606414						
ANR	3606718	Symbol	* EI_OSABI		3606414						
ANR	3606719	Symbol	* i		3606414						
ANR	3606720	Symbol	bin -> shdr [ i ] . sh_type		3606414						
ANR	3606721	Symbol	strdup		3606414						
ANR	3606722	Symbol	needle		3606414						
ANR	3606723	Symbol	EI_OSABI		3606414						
ANR	3606724	Function	r_bin_elf_grab_regstate	2481:5:76995:79127							
ANR	3606725	FunctionDef	"r_bin_elf_grab_regstate (ELFOBJ * bin , int * len)"		3606724	0					
ANR	3606726	CompoundStatement		2481:58:77048:79127	3606724	0					
ANR	3606727	IfStatement	if ( bin -> phdr )		3606724	0					
ANR	3606728	Condition	bin -> phdr	2482:5:77055:77063	3606724	0	True				
ANR	3606729	PtrMemberAccess	bin -> phdr		3606724	0					
ANR	3606730	Identifier	bin		3606724	0					
ANR	3606731	Identifier	phdr		3606724	1					
ANR	3606732	CompoundStatement		4:2:30:57	3606724	1					
ANR	3606733	IdentifierDeclStatement	int i ;	2483:2:77070:77075	3606724	0	True				
ANR	3606734	IdentifierDecl	i		3606724	0					
ANR	3606735	IdentifierDeclType	int		3606724	0					
ANR	3606736	Identifier	i		3606724	1					
ANR	3606737	IdentifierDeclStatement	int num = bin -> ehdr . e_phnum ;	2484:2:77079:77106	3606724	1	True				
ANR	3606738	IdentifierDecl	num = bin -> ehdr . e_phnum		3606724	0					
ANR	3606739	IdentifierDeclType	int		3606724	0					
ANR	3606740	Identifier	num		3606724	1					
ANR	3606741	AssignmentExpression	num = bin -> ehdr . e_phnum		3606724	2		=			
ANR	3606742	Identifier	num		3606724	0					
ANR	3606743	MemberAccess	bin -> ehdr . e_phnum		3606724	1					
ANR	3606744	PtrMemberAccess	bin -> ehdr		3606724	0					
ANR	3606745	Identifier	bin		3606724	0					
ANR	3606746	Identifier	ehdr		3606724	1					
ANR	3606747	Identifier	e_phnum		3606724	1					
ANR	3606748	ForStatement	for ( i = 0 ; i < num ; i ++ )		3606724	2					
ANR	3606749	ForInit	i = 0 ;	2485:7:77115:77120	3606724	0	True				
ANR	3606750	AssignmentExpression	i = 0		3606724	0		=			
ANR	3606751	Identifier	i		3606724	0					
ANR	3606752	PrimaryExpression	0		3606724	1					
ANR	3606753	Condition	i < num	2485:14:77122:77128	3606724	1	True				
ANR	3606754	RelationalExpression	i < num		3606724	0		<			
ANR	3606755	Identifier	i		3606724	0					
ANR	3606756	Identifier	num		3606724	1					
ANR	3606757	PostIncDecOperationExpression	i ++	2485:23:77131:77133	3606724	2	True				
ANR	3606758	Identifier	i		3606724	0					
ANR	3606759	IncDec	++		3606724	1					
ANR	3606760	CompoundStatement		61:3:1733:1760	3606724	3					
ANR	3606761	IfStatement	if ( bin -> phdr [ i ] . p_type != PT_NOTE )		3606724	0					
ANR	3606762	Condition	bin -> phdr [ i ] . p_type != PT_NOTE	2486:7:77145:77174	3606724	0	True				
ANR	3606763	EqualityExpression	bin -> phdr [ i ] . p_type != PT_NOTE		3606724	0		!=			
ANR	3606764	MemberAccess	bin -> phdr [ i ] . p_type		3606724	0					
ANR	3606765	ArrayIndexing	bin -> phdr [ i ]		3606724	0					
ANR	3606766	PtrMemberAccess	bin -> phdr		3606724	0					
ANR	3606767	Identifier	bin		3606724	0					
ANR	3606768	Identifier	phdr		3606724	1					
ANR	3606769	Identifier	i		3606724	1					
ANR	3606770	Identifier	p_type		3606724	1					
ANR	3606771	Identifier	PT_NOTE		3606724	1					
ANR	3606772	CompoundStatement		6:39:128:128	3606724	1					
ANR	3606773	ContinueStatement	continue ;	2487:4:77183:77191	3606724	0	True				
ANR	3606774	IdentifierDeclStatement	int bits = Elf_ ( r_bin_elf_get_bits ) ( bin ) ;	2489:3:77201:77241	3606724	1	True				
ANR	3606775	IdentifierDecl	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		3606724	0					
ANR	3606776	IdentifierDeclType	int		3606724	0					
ANR	3606777	Identifier	bits		3606724	1					
ANR	3606778	AssignmentExpression	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		3606724	2		=			
ANR	3606779	Identifier	bits		3606724	0					
ANR	3606780	CallExpression	Elf_ ( r_bin_elf_get_bits ) ( bin )		3606724	1					
ANR	3606781	Callee	Elf_ ( r_bin_elf_get_bits )		3606724	0					
ANR	3606782	CallExpression	Elf_ ( r_bin_elf_get_bits )		3606724	0					
ANR	3606783	Callee	Elf_		3606724	0					
ANR	3606784	Identifier	Elf_		3606724	0					
ANR	3606785	ArgumentList	r_bin_elf_get_bits		3606724	1					
ANR	3606786	Argument	r_bin_elf_get_bits		3606724	0					
ANR	3606787	Identifier	r_bin_elf_get_bits		3606724	0					
ANR	3606788	ArgumentList	bin		3606724	1					
ANR	3606789	Argument	bin		3606724	0					
ANR	3606790	Identifier	bin		3606724	0					
ANR	3606791	IdentifierDeclStatement	int elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr ) ;	2490:3:77246:77322	3606724	2	True				
ANR	3606792	IdentifierDecl	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		3606724	0					
ANR	3606793	IdentifierDeclType	int		3606724	0					
ANR	3606794	Identifier	elf_nhdr_size		3606724	1					
ANR	3606795	AssignmentExpression	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		3606724	2		=			
ANR	3606796	Identifier	elf_nhdr_size		3606724	0					
ANR	3606797	ConditionalExpression	( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		3606724	1					
ANR	3606798	Condition	bits == 64		3606724	0					
ANR	3606799	EqualityExpression	bits == 64		3606724	0		==			
ANR	3606800	Identifier	bits		3606724	0					
ANR	3606801	PrimaryExpression	64		3606724	1					
ANR	3606802	SizeofExpression	sizeof ( Elf64_Nhdr )		3606724	1					
ANR	3606803	Sizeof	sizeof		3606724	0					
ANR	3606804	SizeofOperand	Elf64_Nhdr		3606724	1					
ANR	3606805	SizeofExpression	sizeof ( Elf32_Nhdr )		3606724	2					
ANR	3606806	Sizeof	sizeof		3606724	0					
ANR	3606807	SizeofOperand	Elf32_Nhdr		3606724	1					
ANR	3606808	IdentifierDeclStatement	"void * elf_nhdr = calloc ( elf_nhdr_size , 1 ) ;"	2491:3:77327:77369	3606724	3	True				
ANR	3606809	IdentifierDecl	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		3606724	0					
ANR	3606810	IdentifierDeclType	void *		3606724	0					
ANR	3606811	Identifier	elf_nhdr		3606724	1					
ANR	3606812	AssignmentExpression	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		3606724	2		=			
ANR	3606813	Identifier	elf_nhdr		3606724	0					
ANR	3606814	CallExpression	"calloc ( elf_nhdr_size , 1 )"		3606724	1					
ANR	3606815	Callee	calloc		3606724	0					
ANR	3606816	Identifier	calloc		3606724	0					
ANR	3606817	ArgumentList	elf_nhdr_size		3606724	1					
ANR	3606818	Argument	elf_nhdr_size		3606724	0					
ANR	3606819	Identifier	elf_nhdr_size		3606724	0					
ANR	3606820	Argument	1		3606724	1					
ANR	3606821	PrimaryExpression	1		3606724	0					
ANR	3606822	IdentifierDeclStatement	bool regs_found = false ;	2492:3:77374:77397	3606724	4	True				
ANR	3606823	IdentifierDecl	regs_found = false		3606724	0					
ANR	3606824	IdentifierDeclType	bool		3606724	0					
ANR	3606825	Identifier	regs_found		3606724	1					
ANR	3606826	AssignmentExpression	regs_found = false		3606724	2		=			
ANR	3606827	Identifier	false		3606724	0					
ANR	3606828	Identifier	false		3606724	1					
ANR	3606829	IdentifierDeclStatement	ut64 offset = 0 ;	2493:3:77402:77417	3606724	5	True				
ANR	3606830	IdentifierDecl	offset = 0		3606724	0					
ANR	3606831	IdentifierDeclType	ut64		3606724	0					
ANR	3606832	Identifier	offset		3606724	1					
ANR	3606833	AssignmentExpression	offset = 0		3606724	2		=			
ANR	3606834	Identifier	offset		3606724	0					
ANR	3606835	PrimaryExpression	0		3606724	1					
ANR	3606836	WhileStatement	while ( ! regs_found )		3606724	6					
ANR	3606837	Condition	! regs_found	2495:10:77430:77440	3606724	0	True				
ANR	3606838	UnaryOperationExpression	! regs_found		3606724	0					
ANR	3606839	UnaryOperator	!		3606724	0					
ANR	3606840	Identifier	regs_found		3606724	1					
ANR	3606841	CompoundStatement		17:4:437:444	3606724	1					
ANR	3606842	IdentifierDeclStatement	"ut32 n_descsz , n_namesz , n_type ;"	2496:4:77449:77480	3606724	0	True				
ANR	3606843	IdentifierDecl	n_descsz		3606724	0					
ANR	3606844	IdentifierDeclType	ut32		3606724	0					
ANR	3606845	Identifier	n_descsz		3606724	1					
ANR	3606846	IdentifierDecl	n_namesz		3606724	1					
ANR	3606847	IdentifierDeclType	ut32		3606724	0					
ANR	3606848	Identifier	n_namesz		3606724	1					
ANR	3606849	IdentifierDecl	n_type		3606724	2					
ANR	3606850	IdentifierDeclType	ut32		3606724	0					
ANR	3606851	Identifier	n_type		3606724	1					
ANR	3606852	IdentifierDeclStatement	int ret ;	2497:4:77486:77493	3606724	1	True				
ANR	3606853	IdentifierDecl	ret		3606724	0					
ANR	3606854	IdentifierDeclType	int		3606724	0					
ANR	3606855	Identifier	ret		3606724	1					
ANR	3606856	ExpressionStatement	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"	2498:4:77499:77584	3606724	2	True				
ANR	3606857	AssignmentExpression	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		3606724	0		=			
ANR	3606858	Identifier	ret		3606724	0					
ANR	3606859	CallExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		3606724	1					
ANR	3606860	Callee	r_buf_read_at		3606724	0					
ANR	3606861	Identifier	r_buf_read_at		3606724	0					
ANR	3606862	ArgumentList	bin -> b		3606724	1					
ANR	3606863	Argument	bin -> b		3606724	0					
ANR	3606864	PtrMemberAccess	bin -> b		3606724	0					
ANR	3606865	Identifier	bin		3606724	0					
ANR	3606866	Identifier	b		3606724	1					
ANR	3606867	Argument	bin -> phdr [ i ] . p_offset + offset		3606724	1					
ANR	3606868	AdditiveExpression	bin -> phdr [ i ] . p_offset + offset		3606724	0		+			
ANR	3606869	MemberAccess	bin -> phdr [ i ] . p_offset		3606724	0					
ANR	3606870	ArrayIndexing	bin -> phdr [ i ]		3606724	0					
ANR	3606871	PtrMemberAccess	bin -> phdr		3606724	0					
ANR	3606872	Identifier	bin		3606724	0					
ANR	3606873	Identifier	phdr		3606724	1					
ANR	3606874	Identifier	i		3606724	1					
ANR	3606875	Identifier	p_offset		3606724	1					
ANR	3606876	Identifier	offset		3606724	1					
ANR	3606877	Argument	elf_nhdr		3606724	2					
ANR	3606878	Identifier	elf_nhdr		3606724	0					
ANR	3606879	Argument	elf_nhdr_size		3606724	3					
ANR	3606880	Identifier	elf_nhdr_size		3606724	0					
ANR	3606881	IfStatement	if ( ret != elf_nhdr_size )		3606724	3					
ANR	3606882	Condition	ret != elf_nhdr_size	2499:8:77594:77613	3606724	0	True				
ANR	3606883	EqualityExpression	ret != elf_nhdr_size		3606724	0		!=			
ANR	3606884	Identifier	ret		3606724	0					
ANR	3606885	Identifier	elf_nhdr_size		3606724	1					
ANR	3606886	CompoundStatement		19:30:567:567	3606724	1					
ANR	3606887	ExpressionStatement	"bprintf ( ""Cannot read NOTES hdr from CORE file\\n"" )"	2500:5:77623:77673	3606724	0	True				
ANR	3606888	CallExpression	"bprintf ( ""Cannot read NOTES hdr from CORE file\\n"" )"		3606724	0					
ANR	3606889	Callee	bprintf		3606724	0					
ANR	3606890	Identifier	bprintf		3606724	0					
ANR	3606891	ArgumentList	"""Cannot read NOTES hdr from CORE file\\n"""		3606724	1					
ANR	3606892	Argument	"""Cannot read NOTES hdr from CORE file\\n"""		3606724	0					
ANR	3606893	PrimaryExpression	"""Cannot read NOTES hdr from CORE file\\n"""		3606724	0					
ANR	3606894	ExpressionStatement	free ( elf_nhdr )	2501:5:77680:77695	3606724	1	True				
ANR	3606895	CallExpression	free ( elf_nhdr )		3606724	0					
ANR	3606896	Callee	free		3606724	0					
ANR	3606897	Identifier	free		3606724	0					
ANR	3606898	ArgumentList	elf_nhdr		3606724	1					
ANR	3606899	Argument	elf_nhdr		3606724	0					
ANR	3606900	Identifier	elf_nhdr		3606724	0					
ANR	3606901	ReturnStatement	return NULL ;	2502:5:77702:77713	3606724	2	True				
ANR	3606902	Identifier	NULL		3606724	0					
ANR	3606903	IfStatement	if ( bits == 64 )		3606724	4					
ANR	3606904	Condition	bits == 64	2504:8:77729:77738	3606724	0	True				
ANR	3606905	EqualityExpression	bits == 64		3606724	0		==			
ANR	3606906	Identifier	bits		3606724	0					
ANR	3606907	PrimaryExpression	64		3606724	1					
ANR	3606908	CompoundStatement		24:20:692:692	3606724	1					
ANR	3606909	ExpressionStatement	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )	2505:5:77748:77804	3606724	0	True				
ANR	3606910	AssignmentExpression	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		3606724	0		=			
ANR	3606911	Identifier	n_descsz		3606724	0					
ANR	3606912	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		3606724	1					
ANR	3606913	Callee	round_up		3606724	0					
ANR	3606914	Identifier	round_up		3606724	0					
ANR	3606915	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3606724	1					
ANR	3606916	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3606724	0					
ANR	3606917	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3606724	0					
ANR	3606918	CastExpression	( Elf64_Nhdr * ) elf_nhdr		3606724	0					
ANR	3606919	CastTarget	Elf64_Nhdr *		3606724	0					
ANR	3606920	Identifier	elf_nhdr		3606724	1					
ANR	3606921	Identifier	n_descsz		3606724	1					
ANR	3606922	ExpressionStatement	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )	2506:5:77811:77867	3606724	1	True				
ANR	3606923	AssignmentExpression	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		3606724	0		=			
ANR	3606924	Identifier	n_namesz		3606724	0					
ANR	3606925	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		3606724	1					
ANR	3606926	Callee	round_up		3606724	0					
ANR	3606927	Identifier	round_up		3606724	0					
ANR	3606928	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3606724	1					
ANR	3606929	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3606724	0					
ANR	3606930	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3606724	0					
ANR	3606931	CastExpression	( Elf64_Nhdr * ) elf_nhdr		3606724	0					
ANR	3606932	CastTarget	Elf64_Nhdr *		3606724	0					
ANR	3606933	Identifier	elf_nhdr		3606724	1					
ANR	3606934	Identifier	n_namesz		3606724	1					
ANR	3606935	ExpressionStatement	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type	2507:5:77874:77915	3606724	2	True				
ANR	3606936	AssignmentExpression	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		3606724	0		=			
ANR	3606937	Identifier	n_type		3606724	0					
ANR	3606938	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		3606724	1					
ANR	3606939	CastExpression	( Elf64_Nhdr * ) elf_nhdr		3606724	0					
ANR	3606940	CastTarget	Elf64_Nhdr *		3606724	0					
ANR	3606941	Identifier	elf_nhdr		3606724	1					
ANR	3606942	Identifier	n_type		3606724	1					
ANR	3606943	ElseStatement	else		3606724	0					
ANR	3606944	CompoundStatement		28:11:879:879	3606724	0					
ANR	3606945	ExpressionStatement	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )	2509:5:77935:77991	3606724	0	True				
ANR	3606946	AssignmentExpression	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		3606724	0		=			
ANR	3606947	Identifier	n_descsz		3606724	0					
ANR	3606948	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		3606724	1					
ANR	3606949	Callee	round_up		3606724	0					
ANR	3606950	Identifier	round_up		3606724	0					
ANR	3606951	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3606724	1					
ANR	3606952	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3606724	0					
ANR	3606953	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3606724	0					
ANR	3606954	CastExpression	( Elf32_Nhdr * ) elf_nhdr		3606724	0					
ANR	3606955	CastTarget	Elf32_Nhdr *		3606724	0					
ANR	3606956	Identifier	elf_nhdr		3606724	1					
ANR	3606957	Identifier	n_descsz		3606724	1					
ANR	3606958	ExpressionStatement	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )	2510:5:77998:78054	3606724	1	True				
ANR	3606959	AssignmentExpression	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		3606724	0		=			
ANR	3606960	Identifier	n_namesz		3606724	0					
ANR	3606961	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		3606724	1					
ANR	3606962	Callee	round_up		3606724	0					
ANR	3606963	Identifier	round_up		3606724	0					
ANR	3606964	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3606724	1					
ANR	3606965	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3606724	0					
ANR	3606966	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3606724	0					
ANR	3606967	CastExpression	( Elf32_Nhdr * ) elf_nhdr		3606724	0					
ANR	3606968	CastTarget	Elf32_Nhdr *		3606724	0					
ANR	3606969	Identifier	elf_nhdr		3606724	1					
ANR	3606970	Identifier	n_namesz		3606724	1					
ANR	3606971	ExpressionStatement	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type	2511:5:78061:78102	3606724	2	True				
ANR	3606972	AssignmentExpression	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		3606724	0		=			
ANR	3606973	Identifier	n_type		3606724	0					
ANR	3606974	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		3606724	1					
ANR	3606975	CastExpression	( Elf32_Nhdr * ) elf_nhdr		3606724	0					
ANR	3606976	CastTarget	Elf32_Nhdr *		3606724	0					
ANR	3606977	Identifier	elf_nhdr		3606724	1					
ANR	3606978	Identifier	n_type		3606724	1					
ANR	3606979	IfStatement	if ( n_type == NT_PRSTATUS )		3606724	5					
ANR	3606980	Condition	n_type == NT_PRSTATUS	2513:8:78118:78138	3606724	0	True				
ANR	3606981	EqualityExpression	n_type == NT_PRSTATUS		3606724	0		==			
ANR	3606982	Identifier	n_type		3606724	0					
ANR	3606983	Identifier	NT_PRSTATUS		3606724	1					
ANR	3606984	CompoundStatement		33:31:1092:1092	3606724	1					
ANR	3606985	ExpressionStatement	regs_found = true	2514:5:78148:78165	3606724	0	True				
ANR	3606986	AssignmentExpression	regs_found = true		3606724	0		=			
ANR	3606987	Identifier	regs_found		3606724	0					
ANR	3606988	Identifier	true		3606724	1					
ANR	3606989	ExpressionStatement	free ( elf_nhdr )	2515:5:78172:78187	3606724	1	True				
ANR	3606990	CallExpression	free ( elf_nhdr )		3606724	0					
ANR	3606991	Callee	free		3606724	0					
ANR	3606992	Identifier	free		3606724	0					
ANR	3606993	ArgumentList	elf_nhdr		3606724	1					
ANR	3606994	Argument	elf_nhdr		3606724	0					
ANR	3606995	Identifier	elf_nhdr		3606724	0					
ANR	3606996	ElseStatement	else		3606724	0					
ANR	3606997	CompoundStatement		36:11:1151:1151	3606724	0					
ANR	3606998	ExpressionStatement	offset += elf_nhdr_size + n_descsz + n_namesz	2517:5:78207:78252	3606724	0	True				
ANR	3606999	AssignmentExpression	offset += elf_nhdr_size + n_descsz + n_namesz		3606724	0		+=			
ANR	3607000	Identifier	offset		3606724	0					
ANR	3607001	AdditiveExpression	elf_nhdr_size + n_descsz + n_namesz		3606724	1		+			
ANR	3607002	Identifier	elf_nhdr_size		3606724	0					
ANR	3607003	AdditiveExpression	n_descsz + n_namesz		3606724	1		+			
ANR	3607004	Identifier	n_descsz		3606724	0					
ANR	3607005	Identifier	n_namesz		3606724	1					
ANR	3607006	IdentifierDeclStatement	int regdelta = 0 ;	2521:3:78269:78285	3606724	7	True				
ANR	3607007	IdentifierDecl	regdelta = 0		3606724	0					
ANR	3607008	IdentifierDeclType	int		3606724	0					
ANR	3607009	Identifier	regdelta		3606724	1					
ANR	3607010	AssignmentExpression	regdelta = 0		3606724	2		=			
ANR	3607011	Identifier	regdelta		3606724	0					
ANR	3607012	PrimaryExpression	0		3606724	1					
ANR	3607013	IdentifierDeclStatement	int regsize = 0 ;	2522:3:78290:78305	3606724	8	True				
ANR	3607014	IdentifierDecl	regsize = 0		3606724	0					
ANR	3607015	IdentifierDeclType	int		3606724	0					
ANR	3607016	Identifier	regsize		3606724	1					
ANR	3607017	AssignmentExpression	regsize = 0		3606724	2		=			
ANR	3607018	Identifier	regsize		3606724	0					
ANR	3607019	PrimaryExpression	0		3606724	1					
ANR	3607020	SwitchStatement	switch ( bin -> ehdr . e_machine )		3606724	9					
ANR	3607021	Condition	bin -> ehdr . e_machine	2523:11:78318:78336	3606724	0	True				
ANR	3607022	MemberAccess	bin -> ehdr . e_machine		3606724	0					
ANR	3607023	PtrMemberAccess	bin -> ehdr		3606724	0					
ANR	3607024	Identifier	bin		3606724	0					
ANR	3607025	Identifier	ehdr		3606724	1					
ANR	3607026	Identifier	e_machine		3606724	1					
ANR	3607027	CompoundStatement		43:32:1290:1290	3606724	1					
ANR	3607028	Label	case EM_AARCH64 :	2524:4:78345:78360	3606724	0	True				
ANR	3607029	Identifier	EM_AARCH64		3606724	0					
ANR	3607030	ExpressionStatement	regsize = reginf [ AARCH64 ] . regsize	2525:5:78367:78400	3606724	1	True				
ANR	3607031	AssignmentExpression	regsize = reginf [ AARCH64 ] . regsize		3606724	0		=			
ANR	3607032	Identifier	regsize		3606724	0					
ANR	3607033	MemberAccess	reginf [ AARCH64 ] . regsize		3606724	1					
ANR	3607034	ArrayIndexing	reginf [ AARCH64 ]		3606724	0					
ANR	3607035	Identifier	reginf		3606724	0					
ANR	3607036	Identifier	AARCH64		3606724	1					
ANR	3607037	Identifier	regsize		3606724	1					
ANR	3607038	ExpressionStatement	regdelta = reginf [ AARCH64 ] . regdelta	2526:5:78407:78442	3606724	2	True				
ANR	3607039	AssignmentExpression	regdelta = reginf [ AARCH64 ] . regdelta		3606724	0		=			
ANR	3607040	Identifier	regdelta		3606724	0					
ANR	3607041	MemberAccess	reginf [ AARCH64 ] . regdelta		3606724	1					
ANR	3607042	ArrayIndexing	reginf [ AARCH64 ]		3606724	0					
ANR	3607043	Identifier	reginf		3606724	0					
ANR	3607044	Identifier	AARCH64		3606724	1					
ANR	3607045	Identifier	regdelta		3606724	1					
ANR	3607046	BreakStatement	break ;	2527:5:78449:78454	3606724	3	True				
ANR	3607047	Label	case EM_ARM :	2528:4:78460:78471	3606724	4	True				
ANR	3607048	Identifier	EM_ARM		3606724	0					
ANR	3607049	ExpressionStatement	regsize = reginf [ ARM ] . regsize	2529:5:78478:78507	3606724	5	True				
ANR	3607050	AssignmentExpression	regsize = reginf [ ARM ] . regsize		3606724	0		=			
ANR	3607051	Identifier	regsize		3606724	0					
ANR	3607052	MemberAccess	reginf [ ARM ] . regsize		3606724	1					
ANR	3607053	ArrayIndexing	reginf [ ARM ]		3606724	0					
ANR	3607054	Identifier	reginf		3606724	0					
ANR	3607055	Identifier	ARM		3606724	1					
ANR	3607056	Identifier	regsize		3606724	1					
ANR	3607057	ExpressionStatement	regdelta = reginf [ ARM ] . regdelta	2530:5:78514:78545	3606724	6	True				
ANR	3607058	AssignmentExpression	regdelta = reginf [ ARM ] . regdelta		3606724	0		=			
ANR	3607059	Identifier	regdelta		3606724	0					
ANR	3607060	MemberAccess	reginf [ ARM ] . regdelta		3606724	1					
ANR	3607061	ArrayIndexing	reginf [ ARM ]		3606724	0					
ANR	3607062	Identifier	reginf		3606724	0					
ANR	3607063	Identifier	ARM		3606724	1					
ANR	3607064	Identifier	regdelta		3606724	1					
ANR	3607065	BreakStatement	break ;	2531:5:78552:78557	3606724	7	True				
ANR	3607066	Label	case EM_386 :	2532:4:78563:78574	3606724	8	True				
ANR	3607067	Identifier	EM_386		3606724	0					
ANR	3607068	ExpressionStatement	regsize = reginf [ X86 ] . regsize	2533:5:78581:78610	3606724	9	True				
ANR	3607069	AssignmentExpression	regsize = reginf [ X86 ] . regsize		3606724	0		=			
ANR	3607070	Identifier	regsize		3606724	0					
ANR	3607071	MemberAccess	reginf [ X86 ] . regsize		3606724	1					
ANR	3607072	ArrayIndexing	reginf [ X86 ]		3606724	0					
ANR	3607073	Identifier	reginf		3606724	0					
ANR	3607074	Identifier	X86		3606724	1					
ANR	3607075	Identifier	regsize		3606724	1					
ANR	3607076	ExpressionStatement	regdelta = reginf [ X86 ] . regdelta	2534:5:78617:78648	3606724	10	True				
ANR	3607077	AssignmentExpression	regdelta = reginf [ X86 ] . regdelta		3606724	0		=			
ANR	3607078	Identifier	regdelta		3606724	0					
ANR	3607079	MemberAccess	reginf [ X86 ] . regdelta		3606724	1					
ANR	3607080	ArrayIndexing	reginf [ X86 ]		3606724	0					
ANR	3607081	Identifier	reginf		3606724	0					
ANR	3607082	Identifier	X86		3606724	1					
ANR	3607083	Identifier	regdelta		3606724	1					
ANR	3607084	BreakStatement	break ;	2535:5:78655:78660	3606724	11	True				
ANR	3607085	Label	case EM_X86_64 :	2536:4:78666:78680	3606724	12	True				
ANR	3607086	Identifier	EM_X86_64		3606724	0					
ANR	3607087	ExpressionStatement	regsize = reginf [ X86_64 ] . regsize	2537:5:78687:78719	3606724	13	True				
ANR	3607088	AssignmentExpression	regsize = reginf [ X86_64 ] . regsize		3606724	0		=			
ANR	3607089	Identifier	regsize		3606724	0					
ANR	3607090	MemberAccess	reginf [ X86_64 ] . regsize		3606724	1					
ANR	3607091	ArrayIndexing	reginf [ X86_64 ]		3606724	0					
ANR	3607092	Identifier	reginf		3606724	0					
ANR	3607093	Identifier	X86_64		3606724	1					
ANR	3607094	Identifier	regsize		3606724	1					
ANR	3607095	ExpressionStatement	regdelta = reginf [ X86_64 ] . regdelta	2538:5:78726:78760	3606724	14	True				
ANR	3607096	AssignmentExpression	regdelta = reginf [ X86_64 ] . regdelta		3606724	0		=			
ANR	3607097	Identifier	regdelta		3606724	0					
ANR	3607098	MemberAccess	reginf [ X86_64 ] . regdelta		3606724	1					
ANR	3607099	ArrayIndexing	reginf [ X86_64 ]		3606724	0					
ANR	3607100	Identifier	reginf		3606724	0					
ANR	3607101	Identifier	X86_64		3606724	1					
ANR	3607102	Identifier	regdelta		3606724	1					
ANR	3607103	BreakStatement	break ;	2539:5:78767:78772	3606724	15	True				
ANR	3607104	IdentifierDeclStatement	ut8 * buf = malloc ( regsize ) ;	2541:3:78782:78809	3606724	10	True				
ANR	3607105	IdentifierDecl	* buf = malloc ( regsize )		3606724	0					
ANR	3607106	IdentifierDeclType	ut8 *		3606724	0					
ANR	3607107	Identifier	buf		3606724	1					
ANR	3607108	AssignmentExpression	* buf = malloc ( regsize )		3606724	2		=			
ANR	3607109	Identifier	buf		3606724	0					
ANR	3607110	CallExpression	malloc ( regsize )		3606724	1					
ANR	3607111	Callee	malloc		3606724	0					
ANR	3607112	Identifier	malloc		3606724	0					
ANR	3607113	ArgumentList	regsize		3606724	1					
ANR	3607114	Argument	regsize		3606724	0					
ANR	3607115	Identifier	regsize		3606724	0					
ANR	3607116	IfStatement	"if ( r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize ) != regsize )"		3606724	11					
ANR	3607117	Condition	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize ) != regsize"	2542:7:78818:78907	3606724	0	True				
ANR	3607118	EqualityExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize ) != regsize"		3606724	0		!=			
ANR	3607119	CallExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset + offset + regdelta , buf , regsize )"		3606724	0					
ANR	3607120	Callee	r_buf_read_at		3606724	0					
ANR	3607121	Identifier	r_buf_read_at		3606724	0					
ANR	3607122	ArgumentList	bin -> b		3606724	1					
ANR	3607123	Argument	bin -> b		3606724	0					
ANR	3607124	PtrMemberAccess	bin -> b		3606724	0					
ANR	3607125	Identifier	bin		3606724	0					
ANR	3607126	Identifier	b		3606724	1					
ANR	3607127	Argument	bin -> phdr [ i ] . p_offset + offset + regdelta		3606724	1					
ANR	3607128	AdditiveExpression	bin -> phdr [ i ] . p_offset + offset + regdelta		3606724	0		+			
ANR	3607129	MemberAccess	bin -> phdr [ i ] . p_offset		3606724	0					
ANR	3607130	ArrayIndexing	bin -> phdr [ i ]		3606724	0					
ANR	3607131	PtrMemberAccess	bin -> phdr		3606724	0					
ANR	3607132	Identifier	bin		3606724	0					
ANR	3607133	Identifier	phdr		3606724	1					
ANR	3607134	Identifier	i		3606724	1					
ANR	3607135	Identifier	p_offset		3606724	1					
ANR	3607136	AdditiveExpression	offset + regdelta		3606724	1		+			
ANR	3607137	Identifier	offset		3606724	0					
ANR	3607138	Identifier	regdelta		3606724	1					
ANR	3607139	Argument	buf		3606724	2					
ANR	3607140	Identifier	buf		3606724	0					
ANR	3607141	Argument	regsize		3606724	3					
ANR	3607142	Identifier	regsize		3606724	0					
ANR	3607143	Identifier	regsize		3606724	1					
ANR	3607144	CompoundStatement		62:99:1861:1861	3606724	1					
ANR	3607145	ExpressionStatement	free ( buf )	2543:4:78916:78926	3606724	0	True				
ANR	3607146	CallExpression	free ( buf )		3606724	0					
ANR	3607147	Callee	free		3606724	0					
ANR	3607148	Identifier	free		3606724	0					
ANR	3607149	ArgumentList	buf		3606724	1					
ANR	3607150	Argument	buf		3606724	0					
ANR	3607151	Identifier	buf		3606724	0					
ANR	3607152	ExpressionStatement	"bprintf ( ""Cannot read register state from CORE file\\n"" )"	2544:4:78932:78987	3606724	1	True				
ANR	3607153	CallExpression	"bprintf ( ""Cannot read register state from CORE file\\n"" )"		3606724	0					
ANR	3607154	Callee	bprintf		3606724	0					
ANR	3607155	Identifier	bprintf		3606724	0					
ANR	3607156	ArgumentList	"""Cannot read register state from CORE file\\n"""		3606724	1					
ANR	3607157	Argument	"""Cannot read register state from CORE file\\n"""		3606724	0					
ANR	3607158	PrimaryExpression	"""Cannot read register state from CORE file\\n"""		3606724	0					
ANR	3607159	ReturnStatement	return NULL ;	2545:4:78993:79004	3606724	2	True				
ANR	3607160	Identifier	NULL		3606724	0					
ANR	3607161	IfStatement	if ( len )		3606724	12					
ANR	3607162	Condition	len	2547:7:79018:79020	3606724	0	True				
ANR	3607163	Identifier	len		3606724	0					
ANR	3607164	CompoundStatement		67:12:1974:1974	3606724	1					
ANR	3607165	ExpressionStatement	* len = regsize	2548:4:79029:79043	3606724	0	True				
ANR	3607166	AssignmentExpression	* len = regsize		3606724	0		=			
ANR	3607167	UnaryOperationExpression	* len		3606724	0					
ANR	3607168	UnaryOperator	*		3606724	0					
ANR	3607169	Identifier	len		3606724	1					
ANR	3607170	Identifier	regsize		3606724	1					
ANR	3607171	ReturnStatement	return buf ;	2550:3:79053:79063	3606724	13	True				
ANR	3607172	Identifier	buf		3606724	0					
ANR	3607173	ExpressionStatement	"bprintf ( ""Cannot find NOTE section\\n"" )"	2553:1:79073:79111	3606724	1	True				
ANR	3607174	CallExpression	"bprintf ( ""Cannot find NOTE section\\n"" )"		3606724	0					
ANR	3607175	Callee	bprintf		3606724	0					
ANR	3607176	Identifier	bprintf		3606724	0					
ANR	3607177	ArgumentList	"""Cannot find NOTE section\\n"""		3606724	1					
ANR	3607178	Argument	"""Cannot find NOTE section\\n"""		3606724	0					
ANR	3607179	PrimaryExpression	"""Cannot find NOTE section\\n"""		3606724	0					
ANR	3607180	ReturnStatement	return NULL ;	2554:1:79114:79125	3606724	2	True				
ANR	3607181	Identifier	NULL		3606724	0					
ANR	3607182	ReturnType	Elf_		3606724	1					
ANR	3607183	Identifier	( r_bin_elf_grab_regstate )		3606724	2					
ANR	3607184	Identifier	r_bin_elf_grab_regstate		3606724	3					
ANR	3607185	ParameterList	"ELFOBJ * bin , int * len"		3606724	4					
ANR	3607186	Parameter	ELFOBJ * bin	2481:35:77025:77035	3606724	0	True				
ANR	3607187	ParameterType	ELFOBJ *		3606724	0					
ANR	3607188	Identifier	bin		3606724	1					
ANR	3607189	Parameter	int * len	2481:48:77038:77045	3606724	1	True				
ANR	3607190	ParameterType	int *		3606724	0					
ANR	3607191	Identifier	len		3606724	1					
ANR	3607192	CFGEntryNode	ENTRY		3606724		True				
ANR	3607193	CFGExitNode	EXIT		3606724		True				
ANR	3607194	Symbol	bin -> b		3606724						
ANR	3607195	Symbol	* reginf		3606724						
ANR	3607196	Symbol	regs_found		3606724						
ANR	3607197	Symbol	reginf		3606724						
ANR	3607198	Symbol	bin		3606724						
ANR	3607199	Symbol	num		3606724						
ANR	3607200	Symbol	reginf [ AARCH64 ] . regsize		3606724						
ANR	3607201	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		3606724						
ANR	3607202	Symbol	bin -> phdr		3606724						
ANR	3607203	Symbol	reginf [ ARM ] . regsize		3606724						
ANR	3607204	Symbol	* elf_nhdr		3606724						
ANR	3607205	Symbol	r_bin_elf_get_bits		3606724						
ANR	3607206	Symbol	round_up		3606724						
ANR	3607207	Symbol	len		3606724						
ANR	3607208	Symbol	AARCH64		3606724						
ANR	3607209	Symbol	bin -> ehdr		3606724						
ANR	3607210	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3606724						
ANR	3607211	Symbol	* ARM		3606724						
ANR	3607212	Symbol	reginf [ X86 ] . regdelta		3606724						
ANR	3607213	Symbol	reginf [ X86_64 ] . regsize		3606724						
ANR	3607214	Symbol	elf_nhdr		3606724						
ANR	3607215	Symbol	X86_64		3606724						
ANR	3607216	Symbol	ret		3606724						
ANR	3607217	Symbol	NULL		3606724						
ANR	3607218	Symbol	offset		3606724						
ANR	3607219	Symbol	bits		3606724						
ANR	3607220	Symbol	bin -> ehdr . e_phnum		3606724						
ANR	3607221	Symbol	regdelta		3606724						
ANR	3607222	Symbol	reginf [ X86 ] . regsize		3606724						
ANR	3607223	Symbol	* bin -> phdr		3606724						
ANR	3607224	Symbol	bin -> phdr [ i ] . p_offset		3606724						
ANR	3607225	Symbol	n_descsz		3606724						
ANR	3607226	Symbol	elf_nhdr_size		3606724						
ANR	3607227	Symbol	true		3606724						
ANR	3607228	Symbol	ARM		3606724						
ANR	3607229	Symbol	* X86		3606724						
ANR	3607230	Symbol	reginf [ AARCH64 ] . regdelta		3606724						
ANR	3607231	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		3606724						
ANR	3607232	Symbol	calloc		3606724						
ANR	3607233	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3606724						
ANR	3607234	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3606724						
ANR	3607235	Symbol	n_type		3606724						
ANR	3607236	Symbol	* bin		3606724						
ANR	3607237	Symbol	n_namesz		3606724						
ANR	3607238	Symbol	regsize		3606724						
ANR	3607239	Symbol	X86		3606724						
ANR	3607240	Symbol	* * bin		3606724						
ANR	3607241	Symbol	Elf_		3606724						
ANR	3607242	Symbol	malloc		3606724						
ANR	3607243	Symbol	PT_NOTE		3606724						
ANR	3607244	Symbol	NT_PRSTATUS		3606724						
ANR	3607245	Symbol	false		3606724						
ANR	3607246	Symbol	i		3606724						
ANR	3607247	Symbol	reginf [ ARM ] . regdelta		3606724						
ANR	3607248	Symbol	* X86_64		3606724						
ANR	3607249	Symbol	buf		3606724						
ANR	3607250	Symbol	* i		3606724						
ANR	3607251	Symbol	bin -> ehdr . e_machine		3606724						
ANR	3607252	Symbol	r_buf_read_at		3606724						
ANR	3607253	Symbol	bin -> phdr [ i ] . p_type		3606724						
ANR	3607254	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3606724						
ANR	3607255	Symbol	* AARCH64		3606724						
ANR	3607256	Symbol	reginf [ X86_64 ] . regdelta		3606724						
ANR	3607257	Symbol	* len		3606724						
ANR	3607258	Function	r_bin_elf_is_big_endian	2557:0:79130:79232							
ANR	3607259	FunctionDef	r_bin_elf_is_big_endian (ELFOBJ * bin)		3607258	0					
ANR	3607260	CompoundStatement		2557:47:79177:79232	3607258	0					
ANR	3607261	ReturnStatement	return ( bin -> ehdr . e_ident [ EI_DATA ] == ELFDATA2MSB ) ;	2558:1:79180:79230	3607258	0	True				
ANR	3607262	EqualityExpression	bin -> ehdr . e_ident [ EI_DATA ] == ELFDATA2MSB		3607258	0		==			
ANR	3607263	ArrayIndexing	bin -> ehdr . e_ident [ EI_DATA ]		3607258	0					
ANR	3607264	MemberAccess	bin -> ehdr . e_ident		3607258	0					
ANR	3607265	PtrMemberAccess	bin -> ehdr		3607258	0					
ANR	3607266	Identifier	bin		3607258	0					
ANR	3607267	Identifier	ehdr		3607258	1					
ANR	3607268	Identifier	e_ident		3607258	1					
ANR	3607269	Identifier	EI_DATA		3607258	1					
ANR	3607270	Identifier	ELFDATA2MSB		3607258	1					
ANR	3607271	ReturnType	int Elf_		3607258	1					
ANR	3607272	Identifier	( r_bin_elf_is_big_endian )		3607258	2					
ANR	3607273	Identifier	r_bin_elf_is_big_endian		3607258	3					
ANR	3607274	ParameterList	ELFOBJ * bin		3607258	4					
ANR	3607275	Parameter	ELFOBJ * bin	2557:34:79164:79174	3607258	0	True				
ANR	3607276	ParameterType	ELFOBJ *		3607258	0					
ANR	3607277	Identifier	bin		3607258	1					
ANR	3607278	CFGEntryNode	ENTRY		3607258		True				
ANR	3607279	CFGExitNode	EXIT		3607258		True				
ANR	3607280	Symbol	ELFDATA2MSB		3607258						
ANR	3607281	Symbol	* EI_DATA		3607258						
ANR	3607282	Symbol	* bin -> ehdr		3607258						
ANR	3607283	Symbol	bin		3607258						
ANR	3607284	Symbol	bin -> ehdr . e_ident		3607258						
ANR	3607285	Symbol	bin -> ehdr		3607258						
ANR	3607286	Symbol	* * bin		3607258						
ANR	3607287	Symbol	* bin -> ehdr . e_ident		3607258						
ANR	3607288	Symbol	* bin		3607258						
ANR	3607289	Symbol	EI_DATA		3607258						
ANR	3607290	Function	r_bin_elf_get_rpath	2562:6:79267:79880							
ANR	3607291	FunctionDef	r_bin_elf_get_rpath (ELFOBJ * bin)		3607290	0					
ANR	3607292	CompoundStatement		2562:45:79306:79880	3607290	0					
ANR	3607293	IdentifierDeclStatement	char * ret = NULL ;	2563:1:79309:79325	3607290	0	True				
ANR	3607294	IdentifierDecl	* ret = NULL		3607290	0					
ANR	3607295	IdentifierDeclType	char *		3607290	0					
ANR	3607296	Identifier	ret		3607290	1					
ANR	3607297	AssignmentExpression	* ret = NULL		3607290	2		=			
ANR	3607298	Identifier	NULL		3607290	0					
ANR	3607299	Identifier	NULL		3607290	1					
ANR	3607300	IdentifierDeclStatement	int j ;	2564:1:79328:79333	3607290	1	True				
ANR	3607301	IdentifierDecl	j		3607290	0					
ANR	3607302	IdentifierDeclType	int		3607290	0					
ANR	3607303	Identifier	j		3607290	1					
ANR	3607304	IfStatement	if ( ! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab )		3607290	2					
ANR	3607305	Condition	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab	2566:5:79341:79391	3607290	0	True				
ANR	3607306	OrExpression	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab		3607290	0		||			
ANR	3607307	UnaryOperationExpression	! bin		3607290	0					
ANR	3607308	UnaryOperator	!		3607290	0					
ANR	3607309	Identifier	bin		3607290	1					
ANR	3607310	OrExpression	! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab		3607290	1		||			
ANR	3607311	UnaryOperationExpression	! bin -> phdr		3607290	0					
ANR	3607312	UnaryOperator	!		3607290	0					
ANR	3607313	PtrMemberAccess	bin -> phdr		3607290	1					
ANR	3607314	Identifier	bin		3607290	0					
ANR	3607315	Identifier	phdr		3607290	1					
ANR	3607316	OrExpression	! bin -> dyn_buf || ! bin -> strtab		3607290	1		||			
ANR	3607317	UnaryOperationExpression	! bin -> dyn_buf		3607290	0					
ANR	3607318	UnaryOperator	!		3607290	0					
ANR	3607319	PtrMemberAccess	bin -> dyn_buf		3607290	1					
ANR	3607320	Identifier	bin		3607290	0					
ANR	3607321	Identifier	dyn_buf		3607290	1					
ANR	3607322	UnaryOperationExpression	! bin -> strtab		3607290	1					
ANR	3607323	UnaryOperator	!		3607290	0					
ANR	3607324	PtrMemberAccess	bin -> strtab		3607290	1					
ANR	3607325	Identifier	bin		3607290	0					
ANR	3607326	Identifier	strtab		3607290	1					
ANR	3607327	CompoundStatement		5:58:87:87	3607290	1					
ANR	3607328	ReturnStatement	return NULL ;	2567:2:79398:79409	3607290	0	True				
ANR	3607329	Identifier	NULL		3607290	0					
ANR	3607330	ForStatement	for ( j = 0 ; j < bin -> dyn_entries ; j ++ )		3607290	3					
ANR	3607331	ForInit	j = 0 ;	2569:6:79420:79425	3607290	0	True				
ANR	3607332	AssignmentExpression	j = 0		3607290	0		=			
ANR	3607333	Identifier	j		3607290	0					
ANR	3607334	PrimaryExpression	0		3607290	1					
ANR	3607335	Condition	j < bin -> dyn_entries	2569:13:79427:79445	3607290	1	True				
ANR	3607336	RelationalExpression	j < bin -> dyn_entries		3607290	0		<			
ANR	3607337	Identifier	j		3607290	0					
ANR	3607338	PtrMemberAccess	bin -> dyn_entries		3607290	1					
ANR	3607339	Identifier	bin		3607290	0					
ANR	3607340	Identifier	dyn_entries		3607290	1					
ANR	3607341	PostIncDecOperationExpression	j ++	2569:34:79448:79450	3607290	2	True				
ANR	3607342	Identifier	j		3607290	0					
ANR	3607343	IncDec	++		3607290	1					
ANR	3607344	CompoundStatement		8:39:146:146	3607290	3					
ANR	3607345	IfStatement	if ( bin -> dyn_buf [ j ] . d_tag == DT_RPATH || bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH )		3607290	0					
ANR	3607346	Condition	bin -> dyn_buf [ j ] . d_tag == DT_RPATH || bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH	2570:6:79461:79532	3607290	0	True				
ANR	3607347	OrExpression	bin -> dyn_buf [ j ] . d_tag == DT_RPATH || bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH		3607290	0		||			
ANR	3607348	EqualityExpression	bin -> dyn_buf [ j ] . d_tag == DT_RPATH		3607290	0		==			
ANR	3607349	MemberAccess	bin -> dyn_buf [ j ] . d_tag		3607290	0					
ANR	3607350	ArrayIndexing	bin -> dyn_buf [ j ]		3607290	0					
ANR	3607351	PtrMemberAccess	bin -> dyn_buf		3607290	0					
ANR	3607352	Identifier	bin		3607290	0					
ANR	3607353	Identifier	dyn_buf		3607290	1					
ANR	3607354	Identifier	j		3607290	1					
ANR	3607355	Identifier	d_tag		3607290	1					
ANR	3607356	Identifier	DT_RPATH		3607290	1					
ANR	3607357	EqualityExpression	bin -> dyn_buf [ j ] . d_tag == DT_RUNPATH		3607290	1		==			
ANR	3607358	MemberAccess	bin -> dyn_buf [ j ] . d_tag		3607290	0					
ANR	3607359	ArrayIndexing	bin -> dyn_buf [ j ]		3607290	0					
ANR	3607360	PtrMemberAccess	bin -> dyn_buf		3607290	0					
ANR	3607361	Identifier	bin		3607290	0					
ANR	3607362	Identifier	dyn_buf		3607290	1					
ANR	3607363	Identifier	j		3607290	1					
ANR	3607364	Identifier	d_tag		3607290	1					
ANR	3607365	Identifier	DT_RUNPATH		3607290	1					
ANR	3607366	CompoundStatement		9:80:228:228	3607290	1					
ANR	3607367	IfStatement	"if ( ! ( ret = calloc ( 1 , ELF_STRING_LENGTH ) ) )"		3607290	0					
ANR	3607368	Condition	"! ( ret = calloc ( 1 , ELF_STRING_LENGTH ) )"	2571:7:79544:79581	3607290	0	True				
ANR	3607369	UnaryOperationExpression	"! ( ret = calloc ( 1 , ELF_STRING_LENGTH ) )"		3607290	0					
ANR	3607370	UnaryOperator	!		3607290	0					
ANR	3607371	AssignmentExpression	"ret = calloc ( 1 , ELF_STRING_LENGTH )"		3607290	1		=			
ANR	3607372	Identifier	ret		3607290	0					
ANR	3607373	CallExpression	"calloc ( 1 , ELF_STRING_LENGTH )"		3607290	1					
ANR	3607374	Callee	calloc		3607290	0					
ANR	3607375	Identifier	calloc		3607290	0					
ANR	3607376	ArgumentList	1		3607290	1					
ANR	3607377	Argument	1		3607290	0					
ANR	3607378	PrimaryExpression	1		3607290	0					
ANR	3607379	Argument	ELF_STRING_LENGTH		3607290	1					
ANR	3607380	Identifier	ELF_STRING_LENGTH		3607290	0					
ANR	3607381	CompoundStatement		10:47:277:277	3607290	1					
ANR	3607382	ExpressionStatement	"perror ( ""malloc (rpath)"" )"	2572:4:79590:79615	3607290	0	True				
ANR	3607383	CallExpression	"perror ( ""malloc (rpath)"" )"		3607290	0					
ANR	3607384	Callee	perror		3607290	0					
ANR	3607385	Identifier	perror		3607290	0					
ANR	3607386	ArgumentList	"""malloc (rpath)"""		3607290	1					
ANR	3607387	Argument	"""malloc (rpath)"""		3607290	0					
ANR	3607388	PrimaryExpression	"""malloc (rpath)"""		3607290	0					
ANR	3607389	ReturnStatement	return NULL ;	2573:4:79621:79632	3607290	1	True				
ANR	3607390	Identifier	NULL		3607290	0					
ANR	3607391	IfStatement	if ( bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size )		3607290	1					
ANR	3607392	Condition	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size	2575:7:79646:79690	3607290	0	True				
ANR	3607393	RelationalExpression	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size		3607290	0		>			
ANR	3607394	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		3607290	0					
ANR	3607395	MemberAccess	bin -> dyn_buf [ j ] . d_un		3607290	0					
ANR	3607396	ArrayIndexing	bin -> dyn_buf [ j ]		3607290	0					
ANR	3607397	PtrMemberAccess	bin -> dyn_buf		3607290	0					
ANR	3607398	Identifier	bin		3607290	0					
ANR	3607399	Identifier	dyn_buf		3607290	1					
ANR	3607400	Identifier	j		3607290	1					
ANR	3607401	Identifier	d_un		3607290	1					
ANR	3607402	Identifier	d_val		3607290	1					
ANR	3607403	PtrMemberAccess	bin -> strtab_size		3607290	1					
ANR	3607404	Identifier	bin		3607290	0					
ANR	3607405	Identifier	strtab_size		3607290	1					
ANR	3607406	CompoundStatement		14:54:386:386	3607290	1					
ANR	3607407	ExpressionStatement	free ( ret )	2576:4:79699:79709	3607290	0	True				
ANR	3607408	CallExpression	free ( ret )		3607290	0					
ANR	3607409	Callee	free		3607290	0					
ANR	3607410	Identifier	free		3607290	0					
ANR	3607411	ArgumentList	ret		3607290	1					
ANR	3607412	Argument	ret		3607290	0					
ANR	3607413	Identifier	ret		3607290	0					
ANR	3607414	ReturnStatement	return NULL ;	2577:4:79715:79726	3607290	1	True				
ANR	3607415	Identifier	NULL		3607290	0					
ANR	3607416	ExpressionStatement	"strncpy ( ret , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"	2579:3:79736:79810	3607290	2	True				
ANR	3607417	CallExpression	"strncpy ( ret , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"		3607290	0					
ANR	3607418	Callee	strncpy		3607290	0					
ANR	3607419	Identifier	strncpy		3607290	0					
ANR	3607420	ArgumentList	ret		3607290	1					
ANR	3607421	Argument	ret		3607290	0					
ANR	3607422	Identifier	ret		3607290	0					
ANR	3607423	Argument	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		3607290	1					
ANR	3607424	AdditiveExpression	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		3607290	0		+			
ANR	3607425	PtrMemberAccess	bin -> strtab		3607290	0					
ANR	3607426	Identifier	bin		3607290	0					
ANR	3607427	Identifier	strtab		3607290	1					
ANR	3607428	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		3607290	1					
ANR	3607429	MemberAccess	bin -> dyn_buf [ j ] . d_un		3607290	0					
ANR	3607430	ArrayIndexing	bin -> dyn_buf [ j ]		3607290	0					
ANR	3607431	PtrMemberAccess	bin -> dyn_buf		3607290	0					
ANR	3607432	Identifier	bin		3607290	0					
ANR	3607433	Identifier	dyn_buf		3607290	1					
ANR	3607434	Identifier	j		3607290	1					
ANR	3607435	Identifier	d_un		3607290	1					
ANR	3607436	Identifier	d_val		3607290	1					
ANR	3607437	Argument	ELF_STRING_LENGTH		3607290	2					
ANR	3607438	Identifier	ELF_STRING_LENGTH		3607290	0					
ANR	3607439	ExpressionStatement	ret [ ELF_STRING_LENGTH - 1 ] = '\\0'	2580:3:79815:79848	3607290	3	True				
ANR	3607440	AssignmentExpression	ret [ ELF_STRING_LENGTH - 1 ] = '\\0'		3607290	0		=			
ANR	3607441	ArrayIndexing	ret [ ELF_STRING_LENGTH - 1 ]		3607290	0					
ANR	3607442	Identifier	ret		3607290	0					
ANR	3607443	AdditiveExpression	ELF_STRING_LENGTH - 1		3607290	1		-			
ANR	3607444	Identifier	ELF_STRING_LENGTH		3607290	0					
ANR	3607445	PrimaryExpression	1		3607290	1					
ANR	3607446	PrimaryExpression	'\\0'		3607290	1					
ANR	3607447	BreakStatement	break ;	2581:3:79853:79858	3607290	4	True				
ANR	3607448	ReturnStatement	return ret ;	2584:1:79868:79878	3607290	4	True				
ANR	3607449	Identifier	ret		3607290	0					
ANR	3607450	ReturnType	Elf_		3607290	1					
ANR	3607451	Identifier	( r_bin_elf_get_rpath )		3607290	2					
ANR	3607452	Identifier	r_bin_elf_get_rpath		3607290	3					
ANR	3607453	ParameterList	ELFOBJ * bin		3607290	4					
ANR	3607454	Parameter	ELFOBJ * bin	2562:32:79293:79303	3607290	0	True				
ANR	3607455	ParameterType	ELFOBJ *		3607290	0					
ANR	3607456	Identifier	bin		3607290	1					
ANR	3607457	CFGEntryNode	ENTRY		3607290		True				
ANR	3607458	CFGExitNode	EXIT		3607290		True				
ANR	3607459	Symbol	ret		3607290						
ANR	3607460	Symbol	DT_RUNPATH		3607290						
ANR	3607461	Symbol	bin -> dyn_buf		3607290						
ANR	3607462	Symbol	NULL		3607290						
ANR	3607463	Symbol	bin		3607290						
ANR	3607464	Symbol	bin -> dyn_entries		3607290						
ANR	3607465	Symbol	DT_RPATH		3607290						
ANR	3607466	Symbol	bin -> phdr		3607290						
ANR	3607467	Symbol	j		3607290						
ANR	3607468	Symbol	bin -> dyn_buf [ j ] . d_un . d_val		3607290						
ANR	3607469	Symbol	calloc		3607290						
ANR	3607470	Symbol	bin -> dyn_buf [ j ] . d_un		3607290						
ANR	3607471	Symbol	* ret		3607290						
ANR	3607472	Symbol	ELF_STRING_LENGTH		3607290						
ANR	3607473	Symbol	* bin		3607290						
ANR	3607474	Symbol	* j		3607290						
ANR	3607475	Symbol	* ELF_STRING_LENGTH		3607290						
ANR	3607476	Symbol	bin -> dyn_buf [ j ] . d_tag		3607290						
ANR	3607477	Symbol	* * bin		3607290						
ANR	3607478	Symbol	* bin -> dyn_buf		3607290						
ANR	3607479	Symbol	bin -> strtab		3607290						
ANR	3607480	Symbol	bin -> strtab_size		3607290						
ANR	3607481	Function	sectionIsInvalid	2587:0:79883:79998							
ANR	3607482	FunctionDef	"sectionIsInvalid (ELFOBJ * bin , RBinElfSection * sect)"		3607481	0					
ANR	3607483	CompoundStatement		2587:64:79947:79998	3607481	0					
ANR	3607484	ReturnStatement	return ( sect -> offset + sect -> size > bin -> size ) ;	2588:1:79950:79996	3607481	0	True				
ANR	3607485	RelationalExpression	sect -> offset + sect -> size > bin -> size		3607481	0		>			
ANR	3607486	AdditiveExpression	sect -> offset + sect -> size		3607481	0		+			
ANR	3607487	PtrMemberAccess	sect -> offset		3607481	0					
ANR	3607488	Identifier	sect		3607481	0					
ANR	3607489	Identifier	offset		3607481	1					
ANR	3607490	PtrMemberAccess	sect -> size		3607481	1					
ANR	3607491	Identifier	sect		3607481	0					
ANR	3607492	Identifier	size		3607481	1					
ANR	3607493	PtrMemberAccess	bin -> size		3607481	1					
ANR	3607494	Identifier	bin		3607481	0					
ANR	3607495	Identifier	size		3607481	1					
ANR	3607496	ReturnType	static bool		3607481	1					
ANR	3607497	Identifier	sectionIsInvalid		3607481	2					
ANR	3607498	ParameterList	"ELFOBJ * bin , RBinElfSection * sect"		3607481	3					
ANR	3607499	Parameter	ELFOBJ * bin	2587:29:79912:79922	3607481	0	True				
ANR	3607500	ParameterType	ELFOBJ *		3607481	0					
ANR	3607501	Identifier	bin		3607481	1					
ANR	3607502	Parameter	RBinElfSection * sect	2587:42:79925:79944	3607481	1	True				
ANR	3607503	ParameterType	RBinElfSection *		3607481	0					
ANR	3607504	Identifier	sect		3607481	1					
ANR	3607505	CFGEntryNode	ENTRY		3607481		True				
ANR	3607506	CFGExitNode	EXIT		3607481		True				
ANR	3607507	Symbol	bin -> size		3607481						
ANR	3607508	Symbol	sect -> offset		3607481						
ANR	3607509	Symbol	bin		3607481						
ANR	3607510	Symbol	sect		3607481						
ANR	3607511	Symbol	sect -> size		3607481						
ANR	3607512	Symbol	* sect		3607481						
ANR	3607513	Symbol	* bin		3607481						
ANR	3607514	Function	get_relocs_num	2591:0:80001:81001							
ANR	3607515	FunctionDef	get_relocs_num (ELFOBJ * bin)		3607514	0					
ANR	3607516	CompoundStatement		2591:42:80043:81001	3607514	0					
ANR	3607517	IdentifierDeclStatement	"size_t i , size , ret = 0 ;"	2592:1:80046:80069	3607514	0	True				
ANR	3607518	IdentifierDecl	i		3607514	0					
ANR	3607519	IdentifierDeclType	size_t		3607514	0					
ANR	3607520	Identifier	i		3607514	1					
ANR	3607521	IdentifierDecl	size		3607514	1					
ANR	3607522	IdentifierDeclType	size_t		3607514	0					
ANR	3607523	Identifier	size		3607514	1					
ANR	3607524	IdentifierDecl	ret = 0		3607514	2					
ANR	3607525	IdentifierDeclType	size_t		3607514	0					
ANR	3607526	Identifier	ret		3607514	1					
ANR	3607527	AssignmentExpression	ret = 0		3607514	2		=			
ANR	3607528	Identifier	ret		3607514	0					
ANR	3607529	PrimaryExpression	0		3607514	1					
ANR	3607530	Statement	define	2597:1:80235:80240	3607514	1	True				
ANR	3607531	Statement	NUMENTRIES_ROUNDUP	2597:8:80242:80259	3607514	2	True				
ANR	3607532	Statement	(	2597:26:80260:80260	3607514	3	True				
ANR	3607533	Statement	sectionsize	2597:27:80261:80271	3607514	4	True				
ANR	3607534	Statement	","	2597:38:80272:80272	3607514	5	True				
ANR	3607535	Statement	entrysize	2597:40:80274:80282	3607514	6	True				
ANR	3607536	Statement	)	2597:49:80283:80283	3607514	7	True				
ANR	3607537	Statement	(	2597:51:80285:80285	3607514	8	True				
ANR	3607538	Statement	(	2597:52:80286:80286	3607514	9	True				
ANR	3607539	Statement	(	2597:53:80287:80287	3607514	10	True				
ANR	3607540	Statement	sectionsize	2597:54:80288:80298	3607514	11	True				
ANR	3607541	Statement	)	2597:65:80299:80299	3607514	12	True				
ANR	3607542	Statement	+	2597:66:80300:80300	3607514	13	True				
ANR	3607543	Statement	(	2597:67:80301:80301	3607514	14	True				
ANR	3607544	Statement	entrysize	2597:68:80302:80310	3607514	15	True				
ANR	3607545	Statement	)	2597:77:80311:80311	3607514	16	True				
ANR	3607546	Statement	-	2597:78:80312:80312	3607514	17	True				
ANR	3607547	Statement	1	2597:79:80313:80313	3607514	18	True				
ANR	3607548	Statement	)	2597:80:80314:80314	3607514	19	True				
ANR	3607549	Statement	/	2597:81:80315:80315	3607514	20	True				
ANR	3607550	Statement	(	2597:82:80316:80316	3607514	21	True				
ANR	3607551	Statement	entrysize	2597:83:80317:80325	3607514	22	True				
ANR	3607552	Statement	)	2597:92:80326:80326	3607514	23	True				
ANR	3607553	Statement	)	2597:93:80327:80327	3607514	24	True				
ANR	3607554	IfStatement	if ( ! bin -> g_sections )		3607514	25					
ANR	3607555	Condition	! bin -> g_sections	2598:5:80334:80349	3607514	0	True				
ANR	3607556	UnaryOperationExpression	! bin -> g_sections		3607514	0					
ANR	3607557	UnaryOperator	!		3607514	0					
ANR	3607558	PtrMemberAccess	bin -> g_sections		3607514	1					
ANR	3607559	Identifier	bin		3607514	0					
ANR	3607560	Identifier	g_sections		3607514	1					
ANR	3607561	CompoundStatement		8:23:308:308	3607514	1					
ANR	3607562	ReturnStatement	return 0 ;	2599:2:80356:80364	3607514	0	True				
ANR	3607563	PrimaryExpression	0		3607514	0					
ANR	3607564	ExpressionStatement	size = bin -> is_rela == DT_REL ? sizeof ( Elf_ ( Rel ) ) : sizeof ( Elf_ ( Rela ) )	2601:1:80370:80442	3607514	26	True				
ANR	3607565	AssignmentExpression	size = bin -> is_rela == DT_REL ? sizeof ( Elf_ ( Rel ) ) : sizeof ( Elf_ ( Rela ) )		3607514	0		=			
ANR	3607566	Identifier	size		3607514	0					
ANR	3607567	ConditionalExpression	bin -> is_rela == DT_REL ? sizeof ( Elf_ ( Rel ) ) : sizeof ( Elf_ ( Rela ) )		3607514	1					
ANR	3607568	Condition	bin -> is_rela == DT_REL		3607514	0					
ANR	3607569	EqualityExpression	bin -> is_rela == DT_REL		3607514	0		==			
ANR	3607570	PtrMemberAccess	bin -> is_rela		3607514	0					
ANR	3607571	Identifier	bin		3607514	0					
ANR	3607572	Identifier	is_rela		3607514	1					
ANR	3607573	Identifier	DT_REL		3607514	1					
ANR	3607574	SizeofExpression	sizeof ( Elf_ ( Rel ) )		3607514	1					
ANR	3607575	Sizeof	sizeof		3607514	0					
ANR	3607576	CallExpression	Elf_ ( Rel )		3607514	1					
ANR	3607577	Callee	Elf_		3607514	0					
ANR	3607578	Identifier	Elf_		3607514	0					
ANR	3607579	ArgumentList	Rel		3607514	1					
ANR	3607580	Argument	Rel		3607514	0					
ANR	3607581	Identifier	Rel		3607514	0					
ANR	3607582	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607514	2					
ANR	3607583	Sizeof	sizeof		3607514	0					
ANR	3607584	CallExpression	Elf_ ( Rela )		3607514	1					
ANR	3607585	Callee	Elf_		3607514	0					
ANR	3607586	Identifier	Elf_		3607514	0					
ANR	3607587	ArgumentList	Rela		3607514	1					
ANR	3607588	Argument	Rela		3607514	0					
ANR	3607589	Identifier	Rela		3607514	0					
ANR	3607590	ForStatement	for ( i = 0 ; ! bin -> g_sections [ i ] . last ; i ++ )		3607514	27					
ANR	3607591	ForInit	i = 0 ;	2602:6:80450:80455	3607514	0	True				
ANR	3607592	AssignmentExpression	i = 0		3607514	0		=			
ANR	3607593	Identifier	i		3607514	0					
ANR	3607594	PrimaryExpression	0		3607514	1					
ANR	3607595	Condition	! bin -> g_sections [ i ] . last	2602:13:80457:80480	3607514	1	True				
ANR	3607596	UnaryOperationExpression	! bin -> g_sections [ i ] . last		3607514	0					
ANR	3607597	UnaryOperator	!		3607514	0					
ANR	3607598	MemberAccess	bin -> g_sections [ i ] . last		3607514	1					
ANR	3607599	ArrayIndexing	bin -> g_sections [ i ]		3607514	0					
ANR	3607600	PtrMemberAccess	bin -> g_sections		3607514	0					
ANR	3607601	Identifier	bin		3607514	0					
ANR	3607602	Identifier	g_sections		3607514	1					
ANR	3607603	Identifier	i		3607514	1					
ANR	3607604	Identifier	last		3607514	1					
ANR	3607605	PostIncDecOperationExpression	i ++	2602:39:80483:80485	3607514	2	True				
ANR	3607606	Identifier	i		3607514	0					
ANR	3607607	IncDec	++		3607514	1					
ANR	3607608	CompoundStatement		12:44:444:444	3607514	3					
ANR	3607609	IfStatement	"if ( sectionIsInvalid ( bin , & bin -> g_sections [ i ] ) )"		3607514	0					
ANR	3607610	Condition	"sectionIsInvalid ( bin , & bin -> g_sections [ i ] )"	2603:6:80496:80538	3607514	0	True				
ANR	3607611	CallExpression	"sectionIsInvalid ( bin , & bin -> g_sections [ i ] )"		3607514	0					
ANR	3607612	Callee	sectionIsInvalid		3607514	0					
ANR	3607613	Identifier	sectionIsInvalid		3607514	0					
ANR	3607614	ArgumentList	bin		3607514	1					
ANR	3607615	Argument	bin		3607514	0					
ANR	3607616	Identifier	bin		3607514	0					
ANR	3607617	Argument	& bin -> g_sections [ i ]		3607514	1					
ANR	3607618	UnaryOperationExpression	& bin -> g_sections [ i ]		3607514	0					
ANR	3607619	UnaryOperator	&		3607514	0					
ANR	3607620	ArrayIndexing	bin -> g_sections [ i ]		3607514	1					
ANR	3607621	PtrMemberAccess	bin -> g_sections		3607514	0					
ANR	3607622	Identifier	bin		3607514	0					
ANR	3607623	Identifier	g_sections		3607514	1					
ANR	3607624	Identifier	i		3607514	1					
ANR	3607625	CompoundStatement		13:51:497:497	3607514	1					
ANR	3607626	ContinueStatement	continue ;	2604:3:80546:80554	3607514	0	True				
ANR	3607627	IfStatement	"if ( ! strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) ) )"		3607514	1					
ANR	3607628	Condition	"! strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"	2606:6:80566:80628	3607514	0	True				
ANR	3607629	UnaryOperationExpression	"! strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		3607514	0					
ANR	3607630	UnaryOperator	!		3607514	0					
ANR	3607631	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		3607514	1					
ANR	3607632	Callee	strncmp		3607514	0					
ANR	3607633	Identifier	strncmp		3607514	0					
ANR	3607634	ArgumentList	bin -> g_sections [ i ] . name		3607514	1					
ANR	3607635	Argument	bin -> g_sections [ i ] . name		3607514	0					
ANR	3607636	MemberAccess	bin -> g_sections [ i ] . name		3607514	0					
ANR	3607637	ArrayIndexing	bin -> g_sections [ i ]		3607514	0					
ANR	3607638	PtrMemberAccess	bin -> g_sections		3607514	0					
ANR	3607639	Identifier	bin		3607514	0					
ANR	3607640	Identifier	g_sections		3607514	1					
ANR	3607641	Identifier	i		3607514	1					
ANR	3607642	Identifier	name		3607514	1					
ANR	3607643	Argument	""".rela."""		3607514	1					
ANR	3607644	PrimaryExpression	""".rela."""		3607514	0					
ANR	3607645	Argument	"strlen ( "".rela."" )"		3607514	2					
ANR	3607646	CallExpression	"strlen ( "".rela."" )"		3607514	0					
ANR	3607647	Callee	strlen		3607514	0					
ANR	3607648	Identifier	strlen		3607514	0					
ANR	3607649	ArgumentList	""".rela."""		3607514	1					
ANR	3607650	Argument	""".rela."""		3607514	0					
ANR	3607651	PrimaryExpression	""".rela."""		3607514	0					
ANR	3607652	CompoundStatement		16:71:587:587	3607514	1					
ANR	3607653	IfStatement	if ( ! bin -> is_rela )		3607514	0					
ANR	3607654	Condition	! bin -> is_rela	2607:7:80640:80652	3607514	0	True				
ANR	3607655	UnaryOperationExpression	! bin -> is_rela		3607514	0					
ANR	3607656	UnaryOperator	!		3607514	0					
ANR	3607657	PtrMemberAccess	bin -> is_rela		3607514	1					
ANR	3607658	Identifier	bin		3607514	0					
ANR	3607659	Identifier	is_rela		3607514	1					
ANR	3607660	CompoundStatement		17:22:611:611	3607514	1					
ANR	3607661	ExpressionStatement	size = sizeof ( Elf_ ( Rela ) )	2608:4:80661:80687	3607514	0	True				
ANR	3607662	AssignmentExpression	size = sizeof ( Elf_ ( Rela ) )		3607514	0		=			
ANR	3607663	Identifier	size		3607514	0					
ANR	3607664	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607514	1					
ANR	3607665	Sizeof	sizeof		3607514	0					
ANR	3607666	CallExpression	Elf_ ( Rela )		3607514	1					
ANR	3607667	Callee	Elf_		3607514	0					
ANR	3607668	Identifier	Elf_		3607514	0					
ANR	3607669	ArgumentList	Rela		3607514	1					
ANR	3607670	Argument	Rela		3607514	0					
ANR	3607671	Identifier	Rela		3607514	0					
ANR	3607672	ExpressionStatement	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"	2610:3:80697:80754	3607514	1	True				
ANR	3607673	AssignmentExpression	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		3607514	0		+=			
ANR	3607674	Identifier	ret		3607514	0					
ANR	3607675	CallExpression	"NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		3607514	1					
ANR	3607676	Callee	NUMENTRIES_ROUNDUP		3607514	0					
ANR	3607677	Identifier	NUMENTRIES_ROUNDUP		3607514	0					
ANR	3607678	ArgumentList	bin -> g_sections [ i ] . size		3607514	1					
ANR	3607679	Argument	bin -> g_sections [ i ] . size		3607514	0					
ANR	3607680	MemberAccess	bin -> g_sections [ i ] . size		3607514	0					
ANR	3607681	ArrayIndexing	bin -> g_sections [ i ]		3607514	0					
ANR	3607682	PtrMemberAccess	bin -> g_sections		3607514	0					
ANR	3607683	Identifier	bin		3607514	0					
ANR	3607684	Identifier	g_sections		3607514	1					
ANR	3607685	Identifier	i		3607514	1					
ANR	3607686	Identifier	size		3607514	1					
ANR	3607687	Argument	size		3607514	1					
ANR	3607688	Identifier	size		3607514	0					
ANR	3607689	ElseStatement	else		3607514	0					
ANR	3607690	IfStatement	"if ( ! strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) ) )"		3607514	0					
ANR	3607691	Condition	"! strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"	2611:13:80769:80829	3607514	0	True				
ANR	3607692	UnaryOperationExpression	"! strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		3607514	0					
ANR	3607693	UnaryOperator	!		3607514	0					
ANR	3607694	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		3607514	1					
ANR	3607695	Callee	strncmp		3607514	0					
ANR	3607696	Identifier	strncmp		3607514	0					
ANR	3607697	ArgumentList	bin -> g_sections [ i ] . name		3607514	1					
ANR	3607698	Argument	bin -> g_sections [ i ] . name		3607514	0					
ANR	3607699	MemberAccess	bin -> g_sections [ i ] . name		3607514	0					
ANR	3607700	ArrayIndexing	bin -> g_sections [ i ]		3607514	0					
ANR	3607701	PtrMemberAccess	bin -> g_sections		3607514	0					
ANR	3607702	Identifier	bin		3607514	0					
ANR	3607703	Identifier	g_sections		3607514	1					
ANR	3607704	Identifier	i		3607514	1					
ANR	3607705	Identifier	name		3607514	1					
ANR	3607706	Argument	""".rel."""		3607514	1					
ANR	3607707	PrimaryExpression	""".rel."""		3607514	0					
ANR	3607708	Argument	"strlen ( "".rel."" )"		3607514	2					
ANR	3607709	CallExpression	"strlen ( "".rel."" )"		3607514	0					
ANR	3607710	Callee	strlen		3607514	0					
ANR	3607711	Identifier	strlen		3607514	0					
ANR	3607712	ArgumentList	""".rel."""		3607514	1					
ANR	3607713	Argument	""".rel."""		3607514	0					
ANR	3607714	PrimaryExpression	""".rel."""		3607514	0					
ANR	3607715	CompoundStatement		21:75:787:787	3607514	1					
ANR	3607716	IfStatement	if ( ! bin -> is_rela )		3607514	0					
ANR	3607717	Condition	! bin -> is_rela	2612:7:80840:80852	3607514	0	True				
ANR	3607718	UnaryOperationExpression	! bin -> is_rela		3607514	0					
ANR	3607719	UnaryOperator	!		3607514	0					
ANR	3607720	PtrMemberAccess	bin -> is_rela		3607514	1					
ANR	3607721	Identifier	bin		3607514	0					
ANR	3607722	Identifier	is_rela		3607514	1					
ANR	3607723	CompoundStatement		22:22:811:811	3607514	1					
ANR	3607724	ExpressionStatement	size = sizeof ( Elf_ ( Rel ) )	2613:4:80861:80886	3607514	0	True				
ANR	3607725	AssignmentExpression	size = sizeof ( Elf_ ( Rel ) )		3607514	0		=			
ANR	3607726	Identifier	size		3607514	0					
ANR	3607727	SizeofExpression	sizeof ( Elf_ ( Rel ) )		3607514	1					
ANR	3607728	Sizeof	sizeof		3607514	0					
ANR	3607729	CallExpression	Elf_ ( Rel )		3607514	1					
ANR	3607730	Callee	Elf_		3607514	0					
ANR	3607731	Identifier	Elf_		3607514	0					
ANR	3607732	ArgumentList	Rel		3607514	1					
ANR	3607733	Argument	Rel		3607514	0					
ANR	3607734	Identifier	Rel		3607514	0					
ANR	3607735	ExpressionStatement	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"	2615:3:80896:80953	3607514	1	True				
ANR	3607736	AssignmentExpression	"ret += NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		3607514	0		+=			
ANR	3607737	Identifier	ret		3607514	0					
ANR	3607738	CallExpression	"NUMENTRIES_ROUNDUP ( bin -> g_sections [ i ] . size , size )"		3607514	1					
ANR	3607739	Callee	NUMENTRIES_ROUNDUP		3607514	0					
ANR	3607740	Identifier	NUMENTRIES_ROUNDUP		3607514	0					
ANR	3607741	ArgumentList	bin -> g_sections [ i ] . size		3607514	1					
ANR	3607742	Argument	bin -> g_sections [ i ] . size		3607514	0					
ANR	3607743	MemberAccess	bin -> g_sections [ i ] . size		3607514	0					
ANR	3607744	ArrayIndexing	bin -> g_sections [ i ]		3607514	0					
ANR	3607745	PtrMemberAccess	bin -> g_sections		3607514	0					
ANR	3607746	Identifier	bin		3607514	0					
ANR	3607747	Identifier	g_sections		3607514	1					
ANR	3607748	Identifier	i		3607514	1					
ANR	3607749	Identifier	size		3607514	1					
ANR	3607750	Argument	size		3607514	1					
ANR	3607751	Identifier	size		3607514	0					
ANR	3607752	ReturnStatement	return ret ;	2618:1:80963:80973	3607514	28	True				
ANR	3607753	Identifier	ret		3607514	0					
ANR	3607754	Statement	undef	2619:1:80976:80980	3607514	29	True				
ANR	3607755	Statement	NUMENTRIES_ROUNDUP	2619:7:80982:80999	3607514	30	True				
ANR	3607756	ReturnType	static size_t		3607514	1					
ANR	3607757	Identifier	get_relocs_num		3607514	2					
ANR	3607758	ParameterList	ELFOBJ * bin		3607514	3					
ANR	3607759	Parameter	ELFOBJ * bin	2591:29:80030:80040	3607514	0	True				
ANR	3607760	ParameterType	ELFOBJ *		3607514	0					
ANR	3607761	Identifier	bin		3607514	1					
ANR	3607762	CFGEntryNode	ENTRY		3607514		True				
ANR	3607763	CFGExitNode	EXIT		3607514		True				
ANR	3607764	Symbol	ret		3607514						
ANR	3607765	Symbol	Elf_		3607514						
ANR	3607766	Symbol	bin -> g_sections [ i ] . size		3607514						
ANR	3607767	Symbol	NUMENTRIES_ROUNDUP		3607514						
ANR	3607768	Symbol	* bin -> g_sections		3607514						
ANR	3607769	Symbol	bin		3607514						
ANR	3607770	Symbol	i		3607514						
ANR	3607771	Symbol	bin -> is_rela		3607514						
ANR	3607772	Symbol	sectionIsInvalid		3607514						
ANR	3607773	Symbol	* bin		3607514						
ANR	3607774	Symbol	bin -> g_sections		3607514						
ANR	3607775	Symbol	Rela		3607514						
ANR	3607776	Symbol	strlen		3607514						
ANR	3607777	Symbol	strncmp		3607514						
ANR	3607778	Symbol	* i		3607514						
ANR	3607779	Symbol	size		3607514						
ANR	3607780	Symbol	bin -> g_sections [ i ] . name		3607514						
ANR	3607781	Symbol	Rel		3607514						
ANR	3607782	Symbol	* * bin		3607514						
ANR	3607783	Symbol	DT_REL		3607514						
ANR	3607784	Symbol	bin -> g_sections [ i ] . last		3607514						
ANR	3607785	Function	read_reloc	2622:0:81004:82257							
ANR	3607786	FunctionDef	"read_reloc (ELFOBJ * bin , RBinElfReloc * r , int is_rela , ut64 offset)"		3607785	0					
ANR	3607787	CompoundStatement		2622:78:81082:82257	3607785	0					
ANR	3607788	IfStatement	if ( offset + sizeof ( Elf_ ( Rela ) ) > bin -> size || offset + sizeof ( Elf_ ( Rela ) ) < offset )		3607785	0					
ANR	3607789	Condition	offset + sizeof ( Elf_ ( Rela ) ) > bin -> size || offset + sizeof ( Elf_ ( Rela ) ) < offset	2623:5:81089:81170	3607785	0	True				
ANR	3607790	OrExpression	offset + sizeof ( Elf_ ( Rela ) ) > bin -> size || offset + sizeof ( Elf_ ( Rela ) ) < offset		3607785	0		||			
ANR	3607791	RelationalExpression	offset + sizeof ( Elf_ ( Rela ) ) > bin -> size		3607785	0		>			
ANR	3607792	AdditiveExpression	offset + sizeof ( Elf_ ( Rela ) )		3607785	0		+			
ANR	3607793	Identifier	offset		3607785	0					
ANR	3607794	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607785	1					
ANR	3607795	Sizeof	sizeof		3607785	0					
ANR	3607796	CallExpression	Elf_ ( Rela )		3607785	1					
ANR	3607797	Callee	Elf_		3607785	0					
ANR	3607798	Identifier	Elf_		3607785	0					
ANR	3607799	ArgumentList	Rela		3607785	1					
ANR	3607800	Argument	Rela		3607785	0					
ANR	3607801	Identifier	Rela		3607785	0					
ANR	3607802	PtrMemberAccess	bin -> size		3607785	1					
ANR	3607803	Identifier	bin		3607785	0					
ANR	3607804	Identifier	size		3607785	1					
ANR	3607805	RelationalExpression	offset + sizeof ( Elf_ ( Rela ) ) < offset		3607785	1		<			
ANR	3607806	AdditiveExpression	offset + sizeof ( Elf_ ( Rela ) )		3607785	0		+			
ANR	3607807	Identifier	offset		3607785	0					
ANR	3607808	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607785	1					
ANR	3607809	Sizeof	sizeof		3607785	0					
ANR	3607810	CallExpression	Elf_ ( Rela )		3607785	1					
ANR	3607811	Callee	Elf_		3607785	0					
ANR	3607812	Identifier	Elf_		3607785	0					
ANR	3607813	ArgumentList	Rela		3607785	1					
ANR	3607814	Argument	Rela		3607785	0					
ANR	3607815	Identifier	Rela		3607785	0					
ANR	3607816	Identifier	offset		3607785	1					
ANR	3607817	CompoundStatement		2:89:90:90	3607785	1					
ANR	3607818	ReturnStatement	return - 1 ;	2624:2:81177:81186	3607785	0	True				
ANR	3607819	UnaryOperationExpression	- 1		3607785	0					
ANR	3607820	UnaryOperator	-		3607785	0					
ANR	3607821	PrimaryExpression	1		3607785	1					
ANR	3607822	IdentifierDeclStatement	ut8 buf [ sizeof ( Elf_ ( Rela ) ) ] = { 0 } ;	2626:1:81192:81226	3607785	1	True				
ANR	3607823	IdentifierDecl	buf [ sizeof ( Elf_ ( Rela ) ) ] = { 0 }		3607785	0					
ANR	3607824	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Rela ) ) ]		3607785	0					
ANR	3607825	Identifier	buf		3607785	1					
ANR	3607826	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607785	2					
ANR	3607827	Sizeof	sizeof		3607785	0					
ANR	3607828	CallExpression	Elf_ ( Rela )		3607785	1					
ANR	3607829	Callee	Elf_		3607785	0					
ANR	3607830	Identifier	Elf_		3607785	0					
ANR	3607831	ArgumentList	Rela		3607785	1					
ANR	3607832	Argument	Rela		3607785	0					
ANR	3607833	Identifier	Rela		3607785	0					
ANR	3607834	AssignmentExpression	buf [ sizeof ( Elf_ ( Rela ) ) ] = { 0 }		3607785	3		=			
ANR	3607835	Identifier	buf		3607785	0					
ANR	3607836	InitializerList	0		3607785	1					
ANR	3607837	PrimaryExpression	0		3607785	0					
ANR	3607838	IdentifierDeclStatement	"int res = r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) ) ;"	2627:1:81229:81295	3607785	2	True				
ANR	3607839	IdentifierDecl	"res = r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) )"		3607785	0					
ANR	3607840	IdentifierDeclType	int		3607785	0					
ANR	3607841	Identifier	res		3607785	1					
ANR	3607842	AssignmentExpression	"res = r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) )"		3607785	2		=			
ANR	3607843	Identifier	res		3607785	0					
ANR	3607844	CallExpression	"r_buf_read_at ( bin -> b , offset , buf , sizeof ( Elf_ ( Rela ) ) )"		3607785	1					
ANR	3607845	Callee	r_buf_read_at		3607785	0					
ANR	3607846	Identifier	r_buf_read_at		3607785	0					
ANR	3607847	ArgumentList	bin -> b		3607785	1					
ANR	3607848	Argument	bin -> b		3607785	0					
ANR	3607849	PtrMemberAccess	bin -> b		3607785	0					
ANR	3607850	Identifier	bin		3607785	0					
ANR	3607851	Identifier	b		3607785	1					
ANR	3607852	Argument	offset		3607785	1					
ANR	3607853	Identifier	offset		3607785	0					
ANR	3607854	Argument	buf		3607785	2					
ANR	3607855	Identifier	buf		3607785	0					
ANR	3607856	Argument	sizeof ( Elf_ ( Rela ) )		3607785	3					
ANR	3607857	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607785	0					
ANR	3607858	Sizeof	sizeof		3607785	0					
ANR	3607859	CallExpression	Elf_ ( Rela )		3607785	1					
ANR	3607860	Callee	Elf_		3607785	0					
ANR	3607861	Identifier	Elf_		3607785	0					
ANR	3607862	ArgumentList	Rela		3607785	1					
ANR	3607863	Argument	Rela		3607785	0					
ANR	3607864	Identifier	Rela		3607785	0					
ANR	3607865	IfStatement	if ( res != sizeof ( Elf_ ( Rela ) ) )		3607785	3					
ANR	3607866	Condition	res != sizeof ( Elf_ ( Rela ) )	2628:5:81302:81327	3607785	0	True				
ANR	3607867	EqualityExpression	res != sizeof ( Elf_ ( Rela ) )		3607785	0		!=			
ANR	3607868	Identifier	res		3607785	0					
ANR	3607869	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607785	1					
ANR	3607870	Sizeof	sizeof		3607785	0					
ANR	3607871	CallExpression	Elf_ ( Rela )		3607785	1					
ANR	3607872	Callee	Elf_		3607785	0					
ANR	3607873	Identifier	Elf_		3607785	0					
ANR	3607874	ArgumentList	Rela		3607785	1					
ANR	3607875	Argument	Rela		3607785	0					
ANR	3607876	Identifier	Rela		3607785	0					
ANR	3607877	CompoundStatement		7:33:247:247	3607785	1					
ANR	3607878	ReturnStatement	return - 1 ;	2629:2:81334:81343	3607785	0	True				
ANR	3607879	UnaryOperationExpression	- 1		3607785	0					
ANR	3607880	UnaryOperator	-		3607785	0					
ANR	3607881	PrimaryExpression	1		3607785	1					
ANR	3607882	IdentifierDeclStatement	size_t i = 0 ;	2632:1:81402:81414	3607785	4	True				
ANR	3607883	IdentifierDecl	i = 0		3607785	0					
ANR	3607884	IdentifierDeclType	size_t		3607785	0					
ANR	3607885	Identifier	i		3607785	1					
ANR	3607886	AssignmentExpression	i = 0		3607785	2		=			
ANR	3607887	Identifier	i		3607785	0					
ANR	3607888	PrimaryExpression	0		3607785	1					
ANR	3607889	IfStatement	if ( is_rela == DT_RELA )		3607785	5					
ANR	3607890	Condition	is_rela == DT_RELA	2633:5:81421:81438	3607785	0	True				
ANR	3607891	EqualityExpression	is_rela == DT_RELA		3607785	0		==			
ANR	3607892	Identifier	is_rela		3607785	0					
ANR	3607893	Identifier	DT_RELA		3607785	1					
ANR	3607894	CompoundStatement		12:25:358:358	3607785	1					
ANR	3607895	Statement	Elf_	2634:2:81445:81448	3607785	0	True				
ANR	3607896	ExpressionStatement	( Rela ) rela	2634:6:81449:81460	3607785	1	True				
ANR	3607897	CastExpression	( Rela ) rela		3607785	0					
ANR	3607898	CastTarget	Rela		3607785	0					
ANR	3607899	Identifier	rela		3607785	1					
ANR	3607900	ExpressionStatement	"rela . r_offset = READ64 ( buf , i )"	2636:2:81480:81511	3607785	2	True				
ANR	3607901	AssignmentExpression	"rela . r_offset = READ64 ( buf , i )"		3607785	0		=			
ANR	3607902	MemberAccess	rela . r_offset		3607785	0					
ANR	3607903	Identifier	rela		3607785	0					
ANR	3607904	Identifier	r_offset		3607785	1					
ANR	3607905	CallExpression	"READ64 ( buf , i )"		3607785	1					
ANR	3607906	Callee	READ64		3607785	0					
ANR	3607907	Identifier	READ64		3607785	0					
ANR	3607908	ArgumentList	buf		3607785	1					
ANR	3607909	Argument	buf		3607785	0					
ANR	3607910	Identifier	buf		3607785	0					
ANR	3607911	Argument	i		3607785	1					
ANR	3607912	Identifier	i		3607785	0					
ANR	3607913	ExpressionStatement	"rela . r_info = READ64 ( buf , i )"	2637:2:81515:81544	3607785	3	True				
ANR	3607914	AssignmentExpression	"rela . r_info = READ64 ( buf , i )"		3607785	0		=			
ANR	3607915	MemberAccess	rela . r_info		3607785	0					
ANR	3607916	Identifier	rela		3607785	0					
ANR	3607917	Identifier	r_info		3607785	1					
ANR	3607918	CallExpression	"READ64 ( buf , i )"		3607785	1					
ANR	3607919	Callee	READ64		3607785	0					
ANR	3607920	Identifier	READ64		3607785	0					
ANR	3607921	ArgumentList	buf		3607785	1					
ANR	3607922	Argument	buf		3607785	0					
ANR	3607923	Identifier	buf		3607785	0					
ANR	3607924	Argument	i		3607785	1					
ANR	3607925	Identifier	i		3607785	0					
ANR	3607926	ExpressionStatement	"rela . r_addend = READ64 ( buf , i )"	2638:2:81548:81579	3607785	4	True				
ANR	3607927	AssignmentExpression	"rela . r_addend = READ64 ( buf , i )"		3607785	0		=			
ANR	3607928	MemberAccess	rela . r_addend		3607785	0					
ANR	3607929	Identifier	rela		3607785	0					
ANR	3607930	Identifier	r_addend		3607785	1					
ANR	3607931	CallExpression	"READ64 ( buf , i )"		3607785	1					
ANR	3607932	Callee	READ64		3607785	0					
ANR	3607933	Identifier	READ64		3607785	0					
ANR	3607934	ArgumentList	buf		3607785	1					
ANR	3607935	Argument	buf		3607785	0					
ANR	3607936	Identifier	buf		3607785	0					
ANR	3607937	Argument	i		3607785	1					
ANR	3607938	Identifier	i		3607785	0					
ANR	3607939	ExpressionStatement	r -> is_rela = is_rela	2644:2:81699:81719	3607785	5	True				
ANR	3607940	AssignmentExpression	r -> is_rela = is_rela		3607785	0		=			
ANR	3607941	PtrMemberAccess	r -> is_rela		3607785	0					
ANR	3607942	Identifier	r		3607785	0					
ANR	3607943	Identifier	is_rela		3607785	1					
ANR	3607944	Identifier	is_rela		3607785	1					
ANR	3607945	ExpressionStatement	r -> offset = rela . r_offset	2645:2:81723:81748	3607785	6	True				
ANR	3607946	AssignmentExpression	r -> offset = rela . r_offset		3607785	0		=			
ANR	3607947	PtrMemberAccess	r -> offset		3607785	0					
ANR	3607948	Identifier	r		3607785	0					
ANR	3607949	Identifier	offset		3607785	1					
ANR	3607950	MemberAccess	rela . r_offset		3607785	1					
ANR	3607951	Identifier	rela		3607785	0					
ANR	3607952	Identifier	r_offset		3607785	1					
ANR	3607953	ExpressionStatement	r -> type = ELF_R_TYPE ( rela . r_info )	2646:2:81752:81786	3607785	7	True				
ANR	3607954	AssignmentExpression	r -> type = ELF_R_TYPE ( rela . r_info )		3607785	0		=			
ANR	3607955	PtrMemberAccess	r -> type		3607785	0					
ANR	3607956	Identifier	r		3607785	0					
ANR	3607957	Identifier	type		3607785	1					
ANR	3607958	CallExpression	ELF_R_TYPE ( rela . r_info )		3607785	1					
ANR	3607959	Callee	ELF_R_TYPE		3607785	0					
ANR	3607960	Identifier	ELF_R_TYPE		3607785	0					
ANR	3607961	ArgumentList	rela . r_info		3607785	1					
ANR	3607962	Argument	rela . r_info		3607785	0					
ANR	3607963	MemberAccess	rela . r_info		3607785	0					
ANR	3607964	Identifier	rela		3607785	0					
ANR	3607965	Identifier	r_info		3607785	1					
ANR	3607966	ExpressionStatement	r -> sym = ELF_R_SYM ( rela . r_info )	2647:2:81790:81822	3607785	8	True				
ANR	3607967	AssignmentExpression	r -> sym = ELF_R_SYM ( rela . r_info )		3607785	0		=			
ANR	3607968	PtrMemberAccess	r -> sym		3607785	0					
ANR	3607969	Identifier	r		3607785	0					
ANR	3607970	Identifier	sym		3607785	1					
ANR	3607971	CallExpression	ELF_R_SYM ( rela . r_info )		3607785	1					
ANR	3607972	Callee	ELF_R_SYM		3607785	0					
ANR	3607973	Identifier	ELF_R_SYM		3607785	0					
ANR	3607974	ArgumentList	rela . r_info		3607785	1					
ANR	3607975	Argument	rela . r_info		3607785	0					
ANR	3607976	MemberAccess	rela . r_info		3607785	0					
ANR	3607977	Identifier	rela		3607785	0					
ANR	3607978	Identifier	r_info		3607785	1					
ANR	3607979	ExpressionStatement	r -> last = 0	2648:2:81826:81837	3607785	9	True				
ANR	3607980	AssignmentExpression	r -> last = 0		3607785	0		=			
ANR	3607981	PtrMemberAccess	r -> last		3607785	0					
ANR	3607982	Identifier	r		3607785	0					
ANR	3607983	Identifier	last		3607785	1					
ANR	3607984	PrimaryExpression	0		3607785	1					
ANR	3607985	ExpressionStatement	r -> addend = rela . r_addend	2649:2:81841:81866	3607785	10	True				
ANR	3607986	AssignmentExpression	r -> addend = rela . r_addend		3607785	0		=			
ANR	3607987	PtrMemberAccess	r -> addend		3607785	0					
ANR	3607988	Identifier	r		3607785	0					
ANR	3607989	Identifier	addend		3607785	1					
ANR	3607990	MemberAccess	rela . r_addend		3607785	1					
ANR	3607991	Identifier	rela		3607785	0					
ANR	3607992	Identifier	r_addend		3607785	1					
ANR	3607993	ReturnStatement	return sizeof ( Elf_ ( Rela ) ) ;	2650:2:81870:81896	3607785	11	True				
ANR	3607994	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3607785	0					
ANR	3607995	Sizeof	sizeof		3607785	0					
ANR	3607996	CallExpression	Elf_ ( Rela )		3607785	1					
ANR	3607997	Callee	Elf_		3607785	0					
ANR	3607998	Identifier	Elf_		3607785	0					
ANR	3607999	ArgumentList	Rela		3607785	1					
ANR	3608000	Argument	Rela		3607785	0					
ANR	3608001	Identifier	Rela		3607785	0					
ANR	3608002	ElseStatement	else		3607785	0					
ANR	3608003	CompoundStatement		30:8:823:823	3607785	0					
ANR	3608004	Statement	Elf_	2652:2:81910:81913	3607785	0	True				
ANR	3608005	ExpressionStatement	( Rel ) rel	2652:6:81914:81923	3607785	1	True				
ANR	3608006	CastExpression	( Rel ) rel		3607785	0					
ANR	3608007	CastTarget	Rel		3607785	0					
ANR	3608008	Identifier	rel		3607785	1					
ANR	3608009	ExpressionStatement	"rel . r_offset = READ64 ( buf , i )"	2654:2:81943:81973	3607785	2	True				
ANR	3608010	AssignmentExpression	"rel . r_offset = READ64 ( buf , i )"		3607785	0		=			
ANR	3608011	MemberAccess	rel . r_offset		3607785	0					
ANR	3608012	Identifier	rel		3607785	0					
ANR	3608013	Identifier	r_offset		3607785	1					
ANR	3608014	CallExpression	"READ64 ( buf , i )"		3607785	1					
ANR	3608015	Callee	READ64		3607785	0					
ANR	3608016	Identifier	READ64		3607785	0					
ANR	3608017	ArgumentList	buf		3607785	1					
ANR	3608018	Argument	buf		3607785	0					
ANR	3608019	Identifier	buf		3607785	0					
ANR	3608020	Argument	i		3607785	1					
ANR	3608021	Identifier	i		3607785	0					
ANR	3608022	ExpressionStatement	"rel . r_info = READ64 ( buf , i )"	2655:2:81977:82005	3607785	3	True				
ANR	3608023	AssignmentExpression	"rel . r_info = READ64 ( buf , i )"		3607785	0		=			
ANR	3608024	MemberAccess	rel . r_info		3607785	0					
ANR	3608025	Identifier	rel		3607785	0					
ANR	3608026	Identifier	r_info		3607785	1					
ANR	3608027	CallExpression	"READ64 ( buf , i )"		3607785	1					
ANR	3608028	Callee	READ64		3607785	0					
ANR	3608029	Identifier	READ64		3607785	0					
ANR	3608030	ArgumentList	buf		3607785	1					
ANR	3608031	Argument	buf		3607785	0					
ANR	3608032	Identifier	buf		3607785	0					
ANR	3608033	Argument	i		3607785	1					
ANR	3608034	Identifier	i		3607785	0					
ANR	3608035	ExpressionStatement	r -> is_rela = is_rela	2660:2:82088:82108	3607785	4	True				
ANR	3608036	AssignmentExpression	r -> is_rela = is_rela		3607785	0		=			
ANR	3608037	PtrMemberAccess	r -> is_rela		3607785	0					
ANR	3608038	Identifier	r		3607785	0					
ANR	3608039	Identifier	is_rela		3607785	1					
ANR	3608040	Identifier	is_rela		3607785	1					
ANR	3608041	ExpressionStatement	r -> offset = rel . r_offset	2661:2:82112:82136	3607785	5	True				
ANR	3608042	AssignmentExpression	r -> offset = rel . r_offset		3607785	0		=			
ANR	3608043	PtrMemberAccess	r -> offset		3607785	0					
ANR	3608044	Identifier	r		3607785	0					
ANR	3608045	Identifier	offset		3607785	1					
ANR	3608046	MemberAccess	rel . r_offset		3607785	1					
ANR	3608047	Identifier	rel		3607785	0					
ANR	3608048	Identifier	r_offset		3607785	1					
ANR	3608049	ExpressionStatement	r -> type = ELF_R_TYPE ( rel . r_info )	2662:2:82140:82173	3607785	6	True				
ANR	3608050	AssignmentExpression	r -> type = ELF_R_TYPE ( rel . r_info )		3607785	0		=			
ANR	3608051	PtrMemberAccess	r -> type		3607785	0					
ANR	3608052	Identifier	r		3607785	0					
ANR	3608053	Identifier	type		3607785	1					
ANR	3608054	CallExpression	ELF_R_TYPE ( rel . r_info )		3607785	1					
ANR	3608055	Callee	ELF_R_TYPE		3607785	0					
ANR	3608056	Identifier	ELF_R_TYPE		3607785	0					
ANR	3608057	ArgumentList	rel . r_info		3607785	1					
ANR	3608058	Argument	rel . r_info		3607785	0					
ANR	3608059	MemberAccess	rel . r_info		3607785	0					
ANR	3608060	Identifier	rel		3607785	0					
ANR	3608061	Identifier	r_info		3607785	1					
ANR	3608062	ExpressionStatement	r -> sym = ELF_R_SYM ( rel . r_info )	2663:2:82177:82208	3607785	7	True				
ANR	3608063	AssignmentExpression	r -> sym = ELF_R_SYM ( rel . r_info )		3607785	0		=			
ANR	3608064	PtrMemberAccess	r -> sym		3607785	0					
ANR	3608065	Identifier	r		3607785	0					
ANR	3608066	Identifier	sym		3607785	1					
ANR	3608067	CallExpression	ELF_R_SYM ( rel . r_info )		3607785	1					
ANR	3608068	Callee	ELF_R_SYM		3607785	0					
ANR	3608069	Identifier	ELF_R_SYM		3607785	0					
ANR	3608070	ArgumentList	rel . r_info		3607785	1					
ANR	3608071	Argument	rel . r_info		3607785	0					
ANR	3608072	MemberAccess	rel . r_info		3607785	0					
ANR	3608073	Identifier	rel		3607785	0					
ANR	3608074	Identifier	r_info		3607785	1					
ANR	3608075	ExpressionStatement	r -> last = 0	2664:2:82212:82223	3607785	8	True				
ANR	3608076	AssignmentExpression	r -> last = 0		3607785	0		=			
ANR	3608077	PtrMemberAccess	r -> last		3607785	0					
ANR	3608078	Identifier	r		3607785	0					
ANR	3608079	Identifier	last		3607785	1					
ANR	3608080	PrimaryExpression	0		3607785	1					
ANR	3608081	ReturnStatement	return sizeof ( Elf_ ( Rel ) ) ;	2665:2:82227:82252	3607785	9	True				
ANR	3608082	SizeofExpression	sizeof ( Elf_ ( Rel ) )		3607785	0					
ANR	3608083	Sizeof	sizeof		3607785	0					
ANR	3608084	CallExpression	Elf_ ( Rel )		3607785	1					
ANR	3608085	Callee	Elf_		3607785	0					
ANR	3608086	Identifier	Elf_		3607785	0					
ANR	3608087	ArgumentList	Rel		3607785	1					
ANR	3608088	Argument	Rel		3607785	0					
ANR	3608089	Identifier	Rel		3607785	0					
ANR	3608090	ReturnType	static int		3607785	1					
ANR	3608091	Identifier	read_reloc		3607785	2					
ANR	3608092	ParameterList	"ELFOBJ * bin , RBinElfReloc * r , int is_rela , ut64 offset"		3607785	3					
ANR	3608093	Parameter	ELFOBJ * bin	2622:22:81026:81036	3607785	0	True				
ANR	3608094	ParameterType	ELFOBJ *		3607785	0					
ANR	3608095	Identifier	bin		3607785	1					
ANR	3608096	Parameter	RBinElfReloc * r	2622:35:81039:81053	3607785	1	True				
ANR	3608097	ParameterType	RBinElfReloc *		3607785	0					
ANR	3608098	Identifier	r		3607785	1					
ANR	3608099	Parameter	int is_rela	2622:52:81056:81066	3607785	2	True				
ANR	3608100	ParameterType	int		3607785	0					
ANR	3608101	Identifier	is_rela		3607785	1					
ANR	3608102	Parameter	ut64 offset	2622:65:81069:81079	3607785	3	True				
ANR	3608103	ParameterType	ut64		3607785	0					
ANR	3608104	Identifier	offset		3607785	1					
ANR	3608105	CFGEntryNode	ENTRY		3607785		True				
ANR	3608106	CFGExitNode	EXIT		3607785		True				
ANR	3608107	Symbol	bin -> size		3607785						
ANR	3608108	Symbol	bin -> b		3607785						
ANR	3608109	Symbol	bin		3607785						
ANR	3608110	Symbol	is_rela		3607785						
ANR	3608111	Symbol	r -> type		3607785						
ANR	3608112	Symbol	READ64		3607785						
ANR	3608113	Symbol	* bin		3607785						
ANR	3608114	Symbol	r -> sym		3607785						
ANR	3608115	Symbol	rel		3607785						
ANR	3608116	Symbol	rela		3607785						
ANR	3608117	Symbol	Elf_		3607785						
ANR	3608118	Symbol	r -> offset		3607785						
ANR	3608119	Symbol	res		3607785						
ANR	3608120	Symbol	offset		3607785						
ANR	3608121	Symbol	rel . r_info		3607785						
ANR	3608122	Symbol	DT_RELA		3607785						
ANR	3608123	Symbol	r -> addend		3607785						
ANR	3608124	Symbol	i		3607785						
ANR	3608125	Symbol	ELF_R_TYPE		3607785						
ANR	3608126	Symbol	Rela		3607785						
ANR	3608127	Symbol	r -> last		3607785						
ANR	3608128	Symbol	ELF_R_SYM		3607785						
ANR	3608129	Symbol	r		3607785						
ANR	3608130	Symbol	buf		3607785						
ANR	3608131	Symbol	rel . r_offset		3607785						
ANR	3608132	Symbol	r -> is_rela		3607785						
ANR	3608133	Symbol	r_buf_read_at		3607785						
ANR	3608134	Symbol	Rel		3607785						
ANR	3608135	Symbol	rela . r_offset		3607785						
ANR	3608136	Symbol	rela . r_info		3607785						
ANR	3608137	Symbol	* r		3607785						
ANR	3608138	Symbol	rela . r_addend		3607785						
ANR	3608139	Function	r_bin_elf_get_relocs	2669:14:82274:84125							
ANR	3608140	FunctionDef	r_bin_elf_get_relocs (ELFOBJ * bin)		3608139	0					
ANR	3608141	CompoundStatement		2669:54:82314:84125	3608139	0					
ANR	3608142	IdentifierDeclStatement	"int res , rel , rela , i , j ;"	2670:1:82317:82341	3608139	0	True				
ANR	3608143	IdentifierDecl	res		3608139	0					
ANR	3608144	IdentifierDeclType	int		3608139	0					
ANR	3608145	Identifier	res		3608139	1					
ANR	3608146	IdentifierDecl	rel		3608139	1					
ANR	3608147	IdentifierDeclType	int		3608139	0					
ANR	3608148	Identifier	rel		3608139	1					
ANR	3608149	IdentifierDecl	rela		3608139	2					
ANR	3608150	IdentifierDeclType	int		3608139	0					
ANR	3608151	Identifier	rela		3608139	1					
ANR	3608152	IdentifierDecl	i		3608139	3					
ANR	3608153	IdentifierDeclType	int		3608139	0					
ANR	3608154	Identifier	i		3608139	1					
ANR	3608155	IdentifierDecl	j		3608139	4					
ANR	3608156	IdentifierDeclType	int		3608139	0					
ANR	3608157	Identifier	j		3608139	1					
ANR	3608158	IdentifierDeclStatement	RBinElfReloc * ret = NULL ;	2671:1:82344:82368	3608139	1	True				
ANR	3608159	IdentifierDecl	* ret = NULL		3608139	0					
ANR	3608160	IdentifierDeclType	RBinElfReloc *		3608139	0					
ANR	3608161	Identifier	ret		3608139	1					
ANR	3608162	AssignmentExpression	* ret = NULL		3608139	2		=			
ANR	3608163	Identifier	NULL		3608139	0					
ANR	3608164	Identifier	NULL		3608139	1					
ANR	3608165	IfStatement	if ( ! bin || ! bin -> g_sections )		3608139	2					
ANR	3608166	Condition	! bin || ! bin -> g_sections	2673:5:82376:82399	3608139	0	True				
ANR	3608167	OrExpression	! bin || ! bin -> g_sections		3608139	0		||			
ANR	3608168	UnaryOperationExpression	! bin		3608139	0					
ANR	3608169	UnaryOperator	!		3608139	0					
ANR	3608170	Identifier	bin		3608139	1					
ANR	3608171	UnaryOperationExpression	! bin -> g_sections		3608139	1					
ANR	3608172	UnaryOperator	!		3608139	0					
ANR	3608173	PtrMemberAccess	bin -> g_sections		3608139	1					
ANR	3608174	Identifier	bin		3608139	0					
ANR	3608175	Identifier	g_sections		3608139	1					
ANR	3608176	CompoundStatement		5:31:87:87	3608139	1					
ANR	3608177	ReturnStatement	return NULL ;	2674:2:82406:82417	3608139	0	True				
ANR	3608178	Identifier	NULL		3608139	0					
ANR	3608179	IdentifierDeclStatement	size_t reloc_num = get_relocs_num ( bin ) ;	2676:1:82423:82462	3608139	3	True				
ANR	3608180	IdentifierDecl	reloc_num = get_relocs_num ( bin )		3608139	0					
ANR	3608181	IdentifierDeclType	size_t		3608139	0					
ANR	3608182	Identifier	reloc_num		3608139	1					
ANR	3608183	AssignmentExpression	reloc_num = get_relocs_num ( bin )		3608139	2		=			
ANR	3608184	Identifier	reloc_num		3608139	0					
ANR	3608185	CallExpression	get_relocs_num ( bin )		3608139	1					
ANR	3608186	Callee	get_relocs_num		3608139	0					
ANR	3608187	Identifier	get_relocs_num		3608139	0					
ANR	3608188	ArgumentList	bin		3608139	1					
ANR	3608189	Argument	bin		3608139	0					
ANR	3608190	Identifier	bin		3608139	0					
ANR	3608191	IfStatement	if ( ! reloc_num )		3608139	4					
ANR	3608192	Condition	! reloc_num	2677:5:82469:82478	3608139	0	True				
ANR	3608193	UnaryOperationExpression	! reloc_num		3608139	0					
ANR	3608194	UnaryOperator	!		3608139	0					
ANR	3608195	Identifier	reloc_num		3608139	1					
ANR	3608196	CompoundStatement		9:17:166:166	3608139	1					
ANR	3608197	ReturnStatement	return NULL ;	2678:2:82485:82496	3608139	0	True				
ANR	3608198	Identifier	NULL		3608139	0					
ANR	3608199	ExpressionStatement	bin -> reloc_num = reloc_num	2680:1:82502:82528	3608139	5	True				
ANR	3608200	AssignmentExpression	bin -> reloc_num = reloc_num		3608139	0		=			
ANR	3608201	PtrMemberAccess	bin -> reloc_num		3608139	0					
ANR	3608202	Identifier	bin		3608139	0					
ANR	3608203	Identifier	reloc_num		3608139	1					
ANR	3608204	Identifier	reloc_num		3608139	1					
ANR	3608205	ExpressionStatement	"ret = ( RBinElfReloc * ) calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"	2681:1:82531:82605	3608139	6	True				
ANR	3608206	AssignmentExpression	"ret = ( RBinElfReloc * ) calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"		3608139	0		=			
ANR	3608207	Identifier	ret		3608139	0					
ANR	3608208	CastExpression	"( RBinElfReloc * ) calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"		3608139	1					
ANR	3608209	CastTarget	RBinElfReloc *		3608139	0					
ANR	3608210	CallExpression	"calloc ( ( size_t ) reloc_num + 1 , sizeof ( RBinElfReloc ) )"		3608139	1					
ANR	3608211	Callee	calloc		3608139	0					
ANR	3608212	Identifier	calloc		3608139	0					
ANR	3608213	ArgumentList	( size_t ) reloc_num + 1		3608139	1					
ANR	3608214	Argument	( size_t ) reloc_num + 1		3608139	0					
ANR	3608215	AdditiveExpression	( size_t ) reloc_num + 1		3608139	0		+			
ANR	3608216	CastExpression	( size_t ) reloc_num		3608139	0					
ANR	3608217	CastTarget	size_t		3608139	0					
ANR	3608218	Identifier	reloc_num		3608139	1					
ANR	3608219	PrimaryExpression	1		3608139	1					
ANR	3608220	Argument	sizeof ( RBinElfReloc )		3608139	1					
ANR	3608221	SizeofExpression	sizeof ( RBinElfReloc )		3608139	0					
ANR	3608222	Sizeof	sizeof		3608139	0					
ANR	3608223	SizeofOperand	RBinElfReloc		3608139	1					
ANR	3608224	IfStatement	if ( ! ret )		3608139	7					
ANR	3608225	Condition	! ret	2682:5:82612:82615	3608139	0	True				
ANR	3608226	UnaryOperationExpression	! ret		3608139	0					
ANR	3608227	UnaryOperator	!		3608139	0					
ANR	3608228	Identifier	ret		3608139	1					
ANR	3608229	CompoundStatement		14:11:303:303	3608139	1					
ANR	3608230	ReturnStatement	return NULL ;	2683:2:82622:82633	3608139	0	True				
ANR	3608231	Identifier	NULL		3608139	0					
ANR	3608232	ForStatement	"for ( i = 0 , rel = 0 ; ! bin -> g_sections [ i ] . last && rel < reloc_num ; i ++ )"		3608139	8					
ANR	3608233	ForInit	"i = 0 , rel = 0 ;"	2685:6:82644:82658	3608139	0	True				
ANR	3608234	Expression	"i = 0 , rel = 0"		3608139	0					
ANR	3608235	AssignmentExpression	i = 0		3608139	0		=			
ANR	3608236	Identifier	i		3608139	0					
ANR	3608237	PrimaryExpression	0		3608139	1					
ANR	3608238	AssignmentExpression	rel = 0		3608139	1		=			
ANR	3608239	Identifier	rel		3608139	0					
ANR	3608240	PrimaryExpression	0		3608139	1					
ANR	3608241	Condition	! bin -> g_sections [ i ] . last && rel < reloc_num	2685:22:82660:82702	3608139	1	True				
ANR	3608242	AndExpression	! bin -> g_sections [ i ] . last && rel < reloc_num		3608139	0		&&			
ANR	3608243	UnaryOperationExpression	! bin -> g_sections [ i ] . last		3608139	0					
ANR	3608244	UnaryOperator	!		3608139	0					
ANR	3608245	MemberAccess	bin -> g_sections [ i ] . last		3608139	1					
ANR	3608246	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608247	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608248	Identifier	bin		3608139	0					
ANR	3608249	Identifier	g_sections		3608139	1					
ANR	3608250	Identifier	i		3608139	1					
ANR	3608251	Identifier	last		3608139	1					
ANR	3608252	RelationalExpression	rel < reloc_num		3608139	1		<			
ANR	3608253	Identifier	rel		3608139	0					
ANR	3608254	Identifier	reloc_num		3608139	1					
ANR	3608255	PostIncDecOperationExpression	i ++	2685:68:82706:82708	3608139	2	True				
ANR	3608256	Identifier	i		3608139	0					
ANR	3608257	IncDec	++		3608139	1					
ANR	3608258	CompoundStatement		19:2:486:567	3608139	3					
ANR	3608259	IdentifierDeclStatement	"bool is_rela = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) ) ;"	2686:2:82715:82797	3608139	0	True				
ANR	3608260	IdentifierDecl	"is_rela = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		3608139	0					
ANR	3608261	IdentifierDeclType	bool		3608139	0					
ANR	3608262	Identifier	is_rela		3608139	1					
ANR	3608263	AssignmentExpression	"is_rela = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		3608139	2		=			
ANR	3608264	Identifier	is_rela		3608139	0					
ANR	3608265	EqualityExpression	"0 == strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		3608139	1		==			
ANR	3608266	PrimaryExpression	0		3608139	0					
ANR	3608267	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rela."" , strlen ( "".rela."" ) )"		3608139	1					
ANR	3608268	Callee	strncmp		3608139	0					
ANR	3608269	Identifier	strncmp		3608139	0					
ANR	3608270	ArgumentList	bin -> g_sections [ i ] . name		3608139	1					
ANR	3608271	Argument	bin -> g_sections [ i ] . name		3608139	0					
ANR	3608272	MemberAccess	bin -> g_sections [ i ] . name		3608139	0					
ANR	3608273	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608274	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608275	Identifier	bin		3608139	0					
ANR	3608276	Identifier	g_sections		3608139	1					
ANR	3608277	Identifier	i		3608139	1					
ANR	3608278	Identifier	name		3608139	1					
ANR	3608279	Argument	""".rela."""		3608139	1					
ANR	3608280	PrimaryExpression	""".rela."""		3608139	0					
ANR	3608281	Argument	"strlen ( "".rela."" )"		3608139	2					
ANR	3608282	CallExpression	"strlen ( "".rela."" )"		3608139	0					
ANR	3608283	Callee	strlen		3608139	0					
ANR	3608284	Identifier	strlen		3608139	0					
ANR	3608285	ArgumentList	""".rela."""		3608139	1					
ANR	3608286	Argument	""".rela."""		3608139	0					
ANR	3608287	PrimaryExpression	""".rela."""		3608139	0					
ANR	3608288	IdentifierDeclStatement	"bool is_rel = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) ) ;"	2687:2:82801:82882	3608139	1	True				
ANR	3608289	IdentifierDecl	"is_rel = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		3608139	0					
ANR	3608290	IdentifierDeclType	bool		3608139	0					
ANR	3608291	Identifier	is_rel		3608139	1					
ANR	3608292	AssignmentExpression	"is_rel = 0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		3608139	2		=			
ANR	3608293	Identifier	is_rel		3608139	0					
ANR	3608294	EqualityExpression	"0 == strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		3608139	1		==			
ANR	3608295	PrimaryExpression	0		3608139	0					
ANR	3608296	CallExpression	"strncmp ( bin -> g_sections [ i ] . name , "".rel."" , strlen ( "".rel."" ) )"		3608139	1					
ANR	3608297	Callee	strncmp		3608139	0					
ANR	3608298	Identifier	strncmp		3608139	0					
ANR	3608299	ArgumentList	bin -> g_sections [ i ] . name		3608139	1					
ANR	3608300	Argument	bin -> g_sections [ i ] . name		3608139	0					
ANR	3608301	MemberAccess	bin -> g_sections [ i ] . name		3608139	0					
ANR	3608302	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608303	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608304	Identifier	bin		3608139	0					
ANR	3608305	Identifier	g_sections		3608139	1					
ANR	3608306	Identifier	i		3608139	1					
ANR	3608307	Identifier	name		3608139	1					
ANR	3608308	Argument	""".rel."""		3608139	1					
ANR	3608309	PrimaryExpression	""".rel."""		3608139	0					
ANR	3608310	Argument	"strlen ( "".rel."" )"		3608139	2					
ANR	3608311	CallExpression	"strlen ( "".rel."" )"		3608139	0					
ANR	3608312	Callee	strlen		3608139	0					
ANR	3608313	Identifier	strlen		3608139	0					
ANR	3608314	ArgumentList	""".rel."""		3608139	1					
ANR	3608315	Argument	""".rel."""		3608139	0					
ANR	3608316	PrimaryExpression	""".rel."""		3608139	0					
ANR	3608317	IfStatement	if ( ! is_rela && ! is_rel )		3608139	2					
ANR	3608318	Condition	! is_rela && ! is_rel	2688:6:82890:82908	3608139	0	True				
ANR	3608319	AndExpression	! is_rela && ! is_rel		3608139	0		&&			
ANR	3608320	UnaryOperationExpression	! is_rela		3608139	0					
ANR	3608321	UnaryOperator	!		3608139	0					
ANR	3608322	Identifier	is_rela		3608139	1					
ANR	3608323	UnaryOperationExpression	! is_rel		3608139	1					
ANR	3608324	UnaryOperator	!		3608139	0					
ANR	3608325	Identifier	is_rel		3608139	1					
ANR	3608326	CompoundStatement		20:27:596:596	3608139	1					
ANR	3608327	ContinueStatement	continue ;	2689:3:82916:82924	3608139	0	True				
ANR	3608328	ForStatement	for ( j = 0 ; j < bin -> g_sections [ i ] . size ; j += res )		3608139	3					
ANR	3608329	ForInit	j = 0 ;	2691:7:82937:82942	3608139	0	True				
ANR	3608330	AssignmentExpression	j = 0		3608139	0		=			
ANR	3608331	Identifier	j		3608139	0					
ANR	3608332	PrimaryExpression	0		3608139	1					
ANR	3608333	Condition	j < bin -> g_sections [ i ] . size	2691:14:82944:82970	3608139	1	True				
ANR	3608334	RelationalExpression	j < bin -> g_sections [ i ] . size		3608139	0		<			
ANR	3608335	Identifier	j		3608139	0					
ANR	3608336	MemberAccess	bin -> g_sections [ i ] . size		3608139	1					
ANR	3608337	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608338	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608339	Identifier	bin		3608139	0					
ANR	3608340	Identifier	g_sections		3608139	1					
ANR	3608341	Identifier	i		3608139	1					
ANR	3608342	Identifier	size		3608139	1					
ANR	3608343	AssignmentExpression	j += res	2691:43:82973:82980	3608139	2	True	+=			
ANR	3608344	Identifier	j		3608139	0					
ANR	3608345	Identifier	res		3608139	1					
ANR	3608346	CompoundStatement		23:53:668:668	3608139	3					
ANR	3608347	IfStatement	if ( bin -> g_sections [ i ] . size > bin -> size )		3608139	0					
ANR	3608348	Condition	bin -> g_sections [ i ] . size > bin -> size	2692:7:82992:83026	3608139	0	True				
ANR	3608349	RelationalExpression	bin -> g_sections [ i ] . size > bin -> size		3608139	0		>			
ANR	3608350	MemberAccess	bin -> g_sections [ i ] . size		3608139	0					
ANR	3608351	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608352	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608353	Identifier	bin		3608139	0					
ANR	3608354	Identifier	g_sections		3608139	1					
ANR	3608355	Identifier	i		3608139	1					
ANR	3608356	Identifier	size		3608139	1					
ANR	3608357	PtrMemberAccess	bin -> size		3608139	1					
ANR	3608358	Identifier	bin		3608139	0					
ANR	3608359	Identifier	size		3608139	1					
ANR	3608360	CompoundStatement		24:44:714:714	3608139	1					
ANR	3608361	BreakStatement	break ;	2693:4:83035:83040	3608139	0	True				
ANR	3608362	IfStatement	if ( bin -> g_sections [ i ] . offset > bin -> size )		3608139	1					
ANR	3608363	Condition	bin -> g_sections [ i ] . offset > bin -> size	2695:7:83054:83090	3608139	0	True				
ANR	3608364	RelationalExpression	bin -> g_sections [ i ] . offset > bin -> size		3608139	0		>			
ANR	3608365	MemberAccess	bin -> g_sections [ i ] . offset		3608139	0					
ANR	3608366	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608367	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608368	Identifier	bin		3608139	0					
ANR	3608369	Identifier	g_sections		3608139	1					
ANR	3608370	Identifier	i		3608139	1					
ANR	3608371	Identifier	offset		3608139	1					
ANR	3608372	PtrMemberAccess	bin -> size		3608139	1					
ANR	3608373	Identifier	bin		3608139	0					
ANR	3608374	Identifier	size		3608139	1					
ANR	3608375	CompoundStatement		27:46:778:778	3608139	1					
ANR	3608376	BreakStatement	break ;	2696:4:83099:83104	3608139	0	True				
ANR	3608377	IfStatement	if ( rel >= reloc_num )		3608139	2					
ANR	3608378	Condition	rel >= reloc_num	2698:7:83118:83133	3608139	0	True				
ANR	3608379	RelationalExpression	rel >= reloc_num		3608139	0		>=			
ANR	3608380	Identifier	rel		3608139	0					
ANR	3608381	Identifier	reloc_num		3608139	1					
ANR	3608382	CompoundStatement		30:25:821:821	3608139	1					
ANR	3608383	Statement	bprintf	2699:4:83142:83148	3608139	0	True				
ANR	3608384	Statement	(	2699:12:83150:83150	3608139	1	True				
ANR	3608385	Statement	"""Internal error: ELF relocation buffer too small,"""	2699:13:83151:83200	3608139	2	True				
ANR	3608386	Statement	"""please file a bug report."""	2700:13:83215:83241	3608139	3	True				
ANR	3608387	Statement	)	2700:40:83242:83242	3608139	4	True				
ANR	3608388	ExpressionStatement		2700:41:83243:83243	3608139	5	True				
ANR	3608389	BreakStatement	break ;	2701:4:83249:83254	3608139	6	True				
ANR	3608390	IfStatement	if ( ! bin -> is_rela )		3608139	3					
ANR	3608391	Condition	! bin -> is_rela	2703:7:83268:83280	3608139	0	True				
ANR	3608392	UnaryOperationExpression	! bin -> is_rela		3608139	0					
ANR	3608393	UnaryOperator	!		3608139	0					
ANR	3608394	PtrMemberAccess	bin -> is_rela		3608139	1					
ANR	3608395	Identifier	bin		3608139	0					
ANR	3608396	Identifier	is_rela		3608139	1					
ANR	3608397	CompoundStatement		35:22:968:968	3608139	1					
ANR	3608398	ExpressionStatement	rela = is_rela ? DT_RELA : DT_REL	2704:4:83289:83321	3608139	0	True				
ANR	3608399	AssignmentExpression	rela = is_rela ? DT_RELA : DT_REL		3608139	0		=			
ANR	3608400	Identifier	rela		3608139	0					
ANR	3608401	ConditionalExpression	is_rela ? DT_RELA : DT_REL		3608139	1					
ANR	3608402	Condition	is_rela		3608139	0					
ANR	3608403	Identifier	is_rela		3608139	0					
ANR	3608404	Identifier	DT_RELA		3608139	1					
ANR	3608405	Identifier	DT_REL		3608139	2					
ANR	3608406	ElseStatement	else		3608139	0					
ANR	3608407	CompoundStatement		37:10:1018:1018	3608139	0					
ANR	3608408	ExpressionStatement	rela = bin -> is_rela	2706:4:83339:83358	3608139	0	True				
ANR	3608409	AssignmentExpression	rela = bin -> is_rela		3608139	0		=			
ANR	3608410	Identifier	rela		3608139	0					
ANR	3608411	PtrMemberAccess	bin -> is_rela		3608139	1					
ANR	3608412	Identifier	bin		3608139	0					
ANR	3608413	Identifier	is_rela		3608139	1					
ANR	3608414	ExpressionStatement	"res = read_reloc ( bin , & ret [ rel ] , rela , bin -> g_sections [ i ] . offset + j )"	2708:3:83368:83438	3608139	4	True				
ANR	3608415	AssignmentExpression	"res = read_reloc ( bin , & ret [ rel ] , rela , bin -> g_sections [ i ] . offset + j )"		3608139	0		=			
ANR	3608416	Identifier	res		3608139	0					
ANR	3608417	CallExpression	"read_reloc ( bin , & ret [ rel ] , rela , bin -> g_sections [ i ] . offset + j )"		3608139	1					
ANR	3608418	Callee	read_reloc		3608139	0					
ANR	3608419	Identifier	read_reloc		3608139	0					
ANR	3608420	ArgumentList	bin		3608139	1					
ANR	3608421	Argument	bin		3608139	0					
ANR	3608422	Identifier	bin		3608139	0					
ANR	3608423	Argument	& ret [ rel ]		3608139	1					
ANR	3608424	UnaryOperationExpression	& ret [ rel ]		3608139	0					
ANR	3608425	UnaryOperator	&		3608139	0					
ANR	3608426	ArrayIndexing	ret [ rel ]		3608139	1					
ANR	3608427	Identifier	ret		3608139	0					
ANR	3608428	Identifier	rel		3608139	1					
ANR	3608429	Argument	rela		3608139	2					
ANR	3608430	Identifier	rela		3608139	0					
ANR	3608431	Argument	bin -> g_sections [ i ] . offset + j		3608139	3					
ANR	3608432	AdditiveExpression	bin -> g_sections [ i ] . offset + j		3608139	0		+			
ANR	3608433	MemberAccess	bin -> g_sections [ i ] . offset		3608139	0					
ANR	3608434	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608435	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608436	Identifier	bin		3608139	0					
ANR	3608437	Identifier	g_sections		3608139	1					
ANR	3608438	Identifier	i		3608139	1					
ANR	3608439	Identifier	offset		3608139	1					
ANR	3608440	Identifier	j		3608139	1					
ANR	3608441	IfStatement	if ( j + res > bin -> g_sections [ i ] . size )		3608139	5					
ANR	3608442	Condition	j + res > bin -> g_sections [ i ] . size	2709:7:83447:83479	3608139	0	True				
ANR	3608443	RelationalExpression	j + res > bin -> g_sections [ i ] . size		3608139	0		>			
ANR	3608444	AdditiveExpression	j + res		3608139	0		+			
ANR	3608445	Identifier	j		3608139	0					
ANR	3608446	Identifier	res		3608139	1					
ANR	3608447	MemberAccess	bin -> g_sections [ i ] . size		3608139	1					
ANR	3608448	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608449	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608450	Identifier	bin		3608139	0					
ANR	3608451	Identifier	g_sections		3608139	1					
ANR	3608452	Identifier	i		3608139	1					
ANR	3608453	Identifier	size		3608139	1					
ANR	3608454	CompoundStatement		41:42:1167:1167	3608139	1					
ANR	3608455	ExpressionStatement	"bprintf ( ""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"" , rel , i )"	2710:4:83488:83589	3608139	0	True				
ANR	3608456	CallExpression	"bprintf ( ""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"" , rel , i )"		3608139	0					
ANR	3608457	Callee	bprintf		3608139	0					
ANR	3608458	Identifier	bprintf		3608139	0					
ANR	3608459	ArgumentList	"""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"""		3608139	1					
ANR	3608460	Argument	"""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"""		3608139	0					
ANR	3608461	PrimaryExpression	"""malformed file, relocation entry #%u is partially beyond the end of section %u.\\n"""		3608139	0					
ANR	3608462	Argument	rel		3608139	1					
ANR	3608463	Identifier	rel		3608139	0					
ANR	3608464	Argument	i		3608139	2					
ANR	3608465	Identifier	i		3608139	0					
ANR	3608466	IfStatement	if ( is_bin_etrel ( bin ) )		3608139	6					
ANR	3608467	Condition	is_bin_etrel ( bin )	2712:7:83603:83620	3608139	0	True				
ANR	3608468	CallExpression	is_bin_etrel ( bin )		3608139	0					
ANR	3608469	Callee	is_bin_etrel		3608139	0					
ANR	3608470	Identifier	is_bin_etrel		3608139	0					
ANR	3608471	ArgumentList	bin		3608139	1					
ANR	3608472	Argument	bin		3608139	0					
ANR	3608473	Identifier	bin		3608139	0					
ANR	3608474	CompoundStatement		44:27:1308:1308	3608139	1					
ANR	3608475	IfStatement	if ( bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum && bin -> shdr )		3608139	0					
ANR	3608476	Condition	bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum && bin -> shdr	2713:8:83633:83688	3608139	0	True				
ANR	3608477	AndExpression	bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum && bin -> shdr		3608139	0		&&			
ANR	3608478	RelationalExpression	bin -> g_sections [ i ] . info < bin -> ehdr . e_shnum		3608139	0		<			
ANR	3608479	MemberAccess	bin -> g_sections [ i ] . info		3608139	0					
ANR	3608480	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608481	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608482	Identifier	bin		3608139	0					
ANR	3608483	Identifier	g_sections		3608139	1					
ANR	3608484	Identifier	i		3608139	1					
ANR	3608485	Identifier	info		3608139	1					
ANR	3608486	MemberAccess	bin -> ehdr . e_shnum		3608139	1					
ANR	3608487	PtrMemberAccess	bin -> ehdr		3608139	0					
ANR	3608488	Identifier	bin		3608139	0					
ANR	3608489	Identifier	ehdr		3608139	1					
ANR	3608490	Identifier	e_shnum		3608139	1					
ANR	3608491	PtrMemberAccess	bin -> shdr		3608139	1					
ANR	3608492	Identifier	bin		3608139	0					
ANR	3608493	Identifier	shdr		3608139	1					
ANR	3608494	CompoundStatement		45:66:1376:1376	3608139	1					
ANR	3608495	ExpressionStatement	ret [ rel ] . rva = bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset + ret [ rel ] . offset	2714:5:83698:83775	3608139	0	True				
ANR	3608496	AssignmentExpression	ret [ rel ] . rva = bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset + ret [ rel ] . offset		3608139	0		=			
ANR	3608497	MemberAccess	ret [ rel ] . rva		3608139	0					
ANR	3608498	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608499	Identifier	ret		3608139	0					
ANR	3608500	Identifier	rel		3608139	1					
ANR	3608501	Identifier	rva		3608139	1					
ANR	3608502	AdditiveExpression	bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset + ret [ rel ] . offset		3608139	1		+			
ANR	3608503	MemberAccess	bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset		3608139	0					
ANR	3608504	ArrayIndexing	bin -> shdr [ bin -> g_sections [ i ] . info ]		3608139	0					
ANR	3608505	PtrMemberAccess	bin -> shdr		3608139	0					
ANR	3608506	Identifier	bin		3608139	0					
ANR	3608507	Identifier	shdr		3608139	1					
ANR	3608508	MemberAccess	bin -> g_sections [ i ] . info		3608139	1					
ANR	3608509	ArrayIndexing	bin -> g_sections [ i ]		3608139	0					
ANR	3608510	PtrMemberAccess	bin -> g_sections		3608139	0					
ANR	3608511	Identifier	bin		3608139	0					
ANR	3608512	Identifier	g_sections		3608139	1					
ANR	3608513	Identifier	i		3608139	1					
ANR	3608514	Identifier	info		3608139	1					
ANR	3608515	Identifier	sh_offset		3608139	1					
ANR	3608516	MemberAccess	ret [ rel ] . offset		3608139	1					
ANR	3608517	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608518	Identifier	ret		3608139	0					
ANR	3608519	Identifier	rel		3608139	1					
ANR	3608520	Identifier	offset		3608139	1					
ANR	3608521	ExpressionStatement	"ret [ rel ] . rva = Elf_ ( r_bin_elf_p2v ) ( bin , ret [ rel ] . rva )"	2715:5:83782:83836	3608139	1	True				
ANR	3608522	AssignmentExpression	"ret [ rel ] . rva = Elf_ ( r_bin_elf_p2v ) ( bin , ret [ rel ] . rva )"		3608139	0		=			
ANR	3608523	MemberAccess	ret [ rel ] . rva		3608139	0					
ANR	3608524	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608525	Identifier	ret		3608139	0					
ANR	3608526	Identifier	rel		3608139	1					
ANR	3608527	Identifier	rva		3608139	1					
ANR	3608528	CallExpression	"Elf_ ( r_bin_elf_p2v ) ( bin , ret [ rel ] . rva )"		3608139	1					
ANR	3608529	Callee	Elf_ ( r_bin_elf_p2v )		3608139	0					
ANR	3608530	CallExpression	Elf_ ( r_bin_elf_p2v )		3608139	0					
ANR	3608531	Callee	Elf_		3608139	0					
ANR	3608532	Identifier	Elf_		3608139	0					
ANR	3608533	ArgumentList	r_bin_elf_p2v		3608139	1					
ANR	3608534	Argument	r_bin_elf_p2v		3608139	0					
ANR	3608535	Identifier	r_bin_elf_p2v		3608139	0					
ANR	3608536	ArgumentList	bin		3608139	1					
ANR	3608537	Argument	bin		3608139	0					
ANR	3608538	Identifier	bin		3608139	0					
ANR	3608539	Argument	ret [ rel ] . rva		3608139	1					
ANR	3608540	MemberAccess	ret [ rel ] . rva		3608139	0					
ANR	3608541	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608542	Identifier	ret		3608139	0					
ANR	3608543	Identifier	rel		3608139	1					
ANR	3608544	Identifier	rva		3608139	1					
ANR	3608545	ElseStatement	else		3608139	0					
ANR	3608546	CompoundStatement		48:11:1534:1534	3608139	0					
ANR	3608547	ExpressionStatement	ret [ rel ] . rva = ret [ rel ] . offset	2717:5:83856:83886	3608139	0	True				
ANR	3608548	AssignmentExpression	ret [ rel ] . rva = ret [ rel ] . offset		3608139	0		=			
ANR	3608549	MemberAccess	ret [ rel ] . rva		3608139	0					
ANR	3608550	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608551	Identifier	ret		3608139	0					
ANR	3608552	Identifier	rel		3608139	1					
ANR	3608553	Identifier	rva		3608139	1					
ANR	3608554	MemberAccess	ret [ rel ] . offset		3608139	1					
ANR	3608555	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608556	Identifier	ret		3608139	0					
ANR	3608557	Identifier	rel		3608139	1					
ANR	3608558	Identifier	offset		3608139	1					
ANR	3608559	ElseStatement	else		3608139	0					
ANR	3608560	CompoundStatement		51:10:1589:1589	3608139	0					
ANR	3608561	ExpressionStatement	ret [ rel ] . rva = ret [ rel ] . offset	2720:4:83910:83940	3608139	0	True				
ANR	3608562	AssignmentExpression	ret [ rel ] . rva = ret [ rel ] . offset		3608139	0		=			
ANR	3608563	MemberAccess	ret [ rel ] . rva		3608139	0					
ANR	3608564	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608565	Identifier	ret		3608139	0					
ANR	3608566	Identifier	rel		3608139	1					
ANR	3608567	Identifier	rva		3608139	1					
ANR	3608568	MemberAccess	ret [ rel ] . offset		3608139	1					
ANR	3608569	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608570	Identifier	ret		3608139	0					
ANR	3608571	Identifier	rel		3608139	1					
ANR	3608572	Identifier	offset		3608139	1					
ANR	3608573	ExpressionStatement	"ret [ rel ] . offset = Elf_ ( r_bin_elf_v2p ) ( bin , ret [ rel ] . offset )"	2721:4:83946:84006	3608139	1	True				
ANR	3608574	AssignmentExpression	"ret [ rel ] . offset = Elf_ ( r_bin_elf_v2p ) ( bin , ret [ rel ] . offset )"		3608139	0		=			
ANR	3608575	MemberAccess	ret [ rel ] . offset		3608139	0					
ANR	3608576	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608577	Identifier	ret		3608139	0					
ANR	3608578	Identifier	rel		3608139	1					
ANR	3608579	Identifier	offset		3608139	1					
ANR	3608580	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , ret [ rel ] . offset )"		3608139	1					
ANR	3608581	Callee	Elf_ ( r_bin_elf_v2p )		3608139	0					
ANR	3608582	CallExpression	Elf_ ( r_bin_elf_v2p )		3608139	0					
ANR	3608583	Callee	Elf_		3608139	0					
ANR	3608584	Identifier	Elf_		3608139	0					
ANR	3608585	ArgumentList	r_bin_elf_v2p		3608139	1					
ANR	3608586	Argument	r_bin_elf_v2p		3608139	0					
ANR	3608587	Identifier	r_bin_elf_v2p		3608139	0					
ANR	3608588	ArgumentList	bin		3608139	1					
ANR	3608589	Argument	bin		3608139	0					
ANR	3608590	Identifier	bin		3608139	0					
ANR	3608591	Argument	ret [ rel ] . offset		3608139	1					
ANR	3608592	MemberAccess	ret [ rel ] . offset		3608139	0					
ANR	3608593	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608594	Identifier	ret		3608139	0					
ANR	3608595	Identifier	rel		3608139	1					
ANR	3608596	Identifier	offset		3608139	1					
ANR	3608597	ExpressionStatement	ret [ rel ] . last = 0	2723:3:84016:84033	3608139	7	True				
ANR	3608598	AssignmentExpression	ret [ rel ] . last = 0		3608139	0		=			
ANR	3608599	MemberAccess	ret [ rel ] . last		3608139	0					
ANR	3608600	ArrayIndexing	ret [ rel ]		3608139	0					
ANR	3608601	Identifier	ret		3608139	0					
ANR	3608602	Identifier	rel		3608139	1					
ANR	3608603	Identifier	last		3608139	1					
ANR	3608604	PrimaryExpression	0		3608139	1					
ANR	3608605	IfStatement	if ( res < 0 )		3608139	8					
ANR	3608606	Condition	res < 0	2724:7:84042:84048	3608139	0	True				
ANR	3608607	RelationalExpression	res < 0		3608139	0		<			
ANR	3608608	Identifier	res		3608139	0					
ANR	3608609	PrimaryExpression	0		3608139	1					
ANR	3608610	CompoundStatement		56:16:1736:1736	3608139	1					
ANR	3608611	BreakStatement	break ;	2725:4:84057:84062	3608139	0	True				
ANR	3608612	ExpressionStatement	rel ++	2727:3:84072:84077	3608139	9	True				
ANR	3608613	PostIncDecOperationExpression	rel ++		3608139	0					
ANR	3608614	Identifier	rel		3608139	0					
ANR	3608615	IncDec	++		3608139	1					
ANR	3608616	ExpressionStatement	ret [ reloc_num ] . last = 1	2730:1:84087:84110	3608139	9	True				
ANR	3608617	AssignmentExpression	ret [ reloc_num ] . last = 1		3608139	0		=			
ANR	3608618	MemberAccess	ret [ reloc_num ] . last		3608139	0					
ANR	3608619	ArrayIndexing	ret [ reloc_num ]		3608139	0					
ANR	3608620	Identifier	ret		3608139	0					
ANR	3608621	Identifier	reloc_num		3608139	1					
ANR	3608622	Identifier	last		3608139	1					
ANR	3608623	PrimaryExpression	1		3608139	1					
ANR	3608624	ReturnStatement	return ret ;	2731:1:84113:84123	3608139	10	True				
ANR	3608625	Identifier	ret		3608139	0					
ANR	3608626	ReturnType	Elf_		3608139	1					
ANR	3608627	Identifier	( r_bin_elf_get_relocs )		3608139	2					
ANR	3608628	Identifier	r_bin_elf_get_relocs		3608139	3					
ANR	3608629	ParameterList	ELFOBJ * bin		3608139	4					
ANR	3608630	Parameter	ELFOBJ * bin	2669:41:82301:82311	3608139	0	True				
ANR	3608631	ParameterType	ELFOBJ *		3608139	0					
ANR	3608632	Identifier	bin		3608139	1					
ANR	3608633	CFGEntryNode	ENTRY		3608139		True				
ANR	3608634	CFGExitNode	EXIT		3608139		True				
ANR	3608635	Symbol	bin -> g_sections [ i ] . size		3608139						
ANR	3608636	Symbol	bin -> size		3608139						
ANR	3608637	Symbol	* * * bin		3608139						
ANR	3608638	Symbol	bin		3608139						
ANR	3608639	Symbol	ret [ rel ] . offset		3608139						
ANR	3608640	Symbol	* bin -> shdr		3608139						
ANR	3608641	Symbol	ret [ reloc_num ] . last		3608139						
ANR	3608642	Symbol	bin -> g_sections		3608139						
ANR	3608643	Symbol	reloc_num		3608139						
ANR	3608644	Symbol	strncmp		3608139						
ANR	3608645	Symbol	strlen		3608139						
ANR	3608646	Symbol	bin -> ehdr		3608139						
ANR	3608647	Symbol	rel		3608139						
ANR	3608648	Symbol	r_bin_elf_p2v		3608139						
ANR	3608649	Symbol	r_bin_elf_v2p		3608139						
ANR	3608650	Symbol	DT_REL		3608139						
ANR	3608651	Symbol	ret		3608139						
ANR	3608652	Symbol	res		3608139						
ANR	3608653	Symbol	* * i		3608139						
ANR	3608654	Symbol	NULL		3608139						
ANR	3608655	Symbol	* bin -> g_sections		3608139						
ANR	3608656	Symbol	is_rel		3608139						
ANR	3608657	Symbol	bin -> g_sections [ i ] . offset		3608139						
ANR	3608658	Symbol	* bin -> g_sections [ i ] . info		3608139						
ANR	3608659	Symbol	ret [ rel ] . last		3608139						
ANR	3608660	Symbol	bin -> ehdr . e_shnum		3608139						
ANR	3608661	Symbol	read_reloc		3608139						
ANR	3608662	Symbol	* rel		3608139						
ANR	3608663	Symbol	is_rela		3608139						
ANR	3608664	Symbol	is_bin_etrel		3608139						
ANR	3608665	Symbol	calloc		3608139						
ANR	3608666	Symbol	* ret		3608139						
ANR	3608667	Symbol	* bin		3608139						
ANR	3608668	Symbol	bin -> g_sections [ i ] . info		3608139						
ANR	3608669	Symbol	* reloc_num		3608139						
ANR	3608670	Symbol	bin -> shdr [ bin -> g_sections [ i ] . info ] . sh_offset		3608139						
ANR	3608671	Symbol	ret [ rel ] . rva		3608139						
ANR	3608672	Symbol	* * bin		3608139						
ANR	3608673	Symbol	rela		3608139						
ANR	3608674	Symbol	Elf_		3608139						
ANR	3608675	Symbol	* * bin -> g_sections		3608139						
ANR	3608676	Symbol	DT_RELA		3608139						
ANR	3608677	Symbol	i		3608139						
ANR	3608678	Symbol	j		3608139						
ANR	3608679	Symbol	bin -> is_rela		3608139						
ANR	3608680	Symbol	bin -> shdr		3608139						
ANR	3608681	Symbol	* i		3608139						
ANR	3608682	Symbol	get_relocs_num		3608139						
ANR	3608683	Symbol	bin -> g_sections [ i ] . name		3608139						
ANR	3608684	Symbol	bin -> reloc_num		3608139						
ANR	3608685	Symbol	bin -> g_sections [ i ] . last		3608139						
ANR	3608686	Function	r_bin_elf_get_libs	2734:12:84140:85046							
ANR	3608687	FunctionDef	r_bin_elf_get_libs (ELFOBJ * bin)		3608686	0					
ANR	3608688	CompoundStatement		2734:50:84178:85046	3608686	0					
ANR	3608689	IdentifierDeclStatement	RBinElfLib * ret = NULL ;	2735:1:84181:84203	3608686	0	True				
ANR	3608690	IdentifierDecl	* ret = NULL		3608686	0					
ANR	3608691	IdentifierDeclType	RBinElfLib *		3608686	0					
ANR	3608692	Identifier	ret		3608686	1					
ANR	3608693	AssignmentExpression	* ret = NULL		3608686	2		=			
ANR	3608694	Identifier	NULL		3608686	0					
ANR	3608695	Identifier	NULL		3608686	1					
ANR	3608696	IdentifierDeclStatement	"int j , k ;"	2736:1:84206:84214	3608686	1	True				
ANR	3608697	IdentifierDecl	j		3608686	0					
ANR	3608698	IdentifierDeclType	int		3608686	0					
ANR	3608699	Identifier	j		3608686	1					
ANR	3608700	IdentifierDecl	k		3608686	1					
ANR	3608701	IdentifierDeclType	int		3608686	0					
ANR	3608702	Identifier	k		3608686	1					
ANR	3608703	IfStatement	if ( ! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0' )		3608686	2					
ANR	3608704	Condition	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'	2738:5:84222:84299	3608686	0	True				
ANR	3608705	OrExpression	! bin || ! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		3608686	0		||			
ANR	3608706	UnaryOperationExpression	! bin		3608686	0					
ANR	3608707	UnaryOperator	!		3608686	0					
ANR	3608708	Identifier	bin		3608686	1					
ANR	3608709	OrExpression	! bin -> phdr || ! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		3608686	1		||			
ANR	3608710	UnaryOperationExpression	! bin -> phdr		3608686	0					
ANR	3608711	UnaryOperator	!		3608686	0					
ANR	3608712	PtrMemberAccess	bin -> phdr		3608686	1					
ANR	3608713	Identifier	bin		3608686	0					
ANR	3608714	Identifier	phdr		3608686	1					
ANR	3608715	OrExpression	! bin -> dyn_buf || ! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		3608686	1		||			
ANR	3608716	UnaryOperationExpression	! bin -> dyn_buf		3608686	0					
ANR	3608717	UnaryOperator	!		3608686	0					
ANR	3608718	PtrMemberAccess	bin -> dyn_buf		3608686	1					
ANR	3608719	Identifier	bin		3608686	0					
ANR	3608720	Identifier	dyn_buf		3608686	1					
ANR	3608721	OrExpression	! bin -> strtab || * ( bin -> strtab + 1 ) == '0'		3608686	1		||			
ANR	3608722	UnaryOperationExpression	! bin -> strtab		3608686	0					
ANR	3608723	UnaryOperator	!		3608686	0					
ANR	3608724	PtrMemberAccess	bin -> strtab		3608686	1					
ANR	3608725	Identifier	bin		3608686	0					
ANR	3608726	Identifier	strtab		3608686	1					
ANR	3608727	EqualityExpression	* ( bin -> strtab + 1 ) == '0'		3608686	1		==			
ANR	3608728	UnaryOperationExpression	* ( bin -> strtab + 1 )		3608686	0					
ANR	3608729	UnaryOperator	*		3608686	0					
ANR	3608730	AdditiveExpression	bin -> strtab + 1		3608686	1		+			
ANR	3608731	PtrMemberAccess	bin -> strtab		3608686	0					
ANR	3608732	Identifier	bin		3608686	0					
ANR	3608733	Identifier	strtab		3608686	1					
ANR	3608734	PrimaryExpression	1		3608686	1					
ANR	3608735	PrimaryExpression	'0'		3608686	1					
ANR	3608736	CompoundStatement		5:85:123:123	3608686	1					
ANR	3608737	ReturnStatement	return NULL ;	2739:2:84306:84317	3608686	0	True				
ANR	3608738	Identifier	NULL		3608686	0					
ANR	3608739	ForStatement	"for ( j = 0 , k = 0 ; j < bin -> dyn_entries ; j ++ )"		3608686	3					
ANR	3608740	ForInit	"j = 0 , k = 0 ;"	2741:6:84328:84340	3608686	0	True				
ANR	3608741	Expression	"j = 0 , k = 0"		3608686	0					
ANR	3608742	AssignmentExpression	j = 0		3608686	0		=			
ANR	3608743	Identifier	j		3608686	0					
ANR	3608744	PrimaryExpression	0		3608686	1					
ANR	3608745	AssignmentExpression	k = 0		3608686	1		=			
ANR	3608746	Identifier	k		3608686	0					
ANR	3608747	PrimaryExpression	0		3608686	1					
ANR	3608748	Condition	j < bin -> dyn_entries	2741:20:84342:84361	3608686	1	True				
ANR	3608749	RelationalExpression	j < bin -> dyn_entries		3608686	0		<			
ANR	3608750	Identifier	j		3608686	0					
ANR	3608751	PtrMemberAccess	bin -> dyn_entries		3608686	1					
ANR	3608752	Identifier	bin		3608686	0					
ANR	3608753	Identifier	dyn_entries		3608686	1					
ANR	3608754	PostIncDecOperationExpression	j ++	2741:42:84364:84366	3608686	2	True				
ANR	3608755	Identifier	j		3608686	0					
ANR	3608756	IncDec	++		3608686	1					
ANR	3608757	CompoundStatement		8:47:190:190	3608686	3					
ANR	3608758	IfStatement	if ( bin -> dyn_buf [ j ] . d_tag == DT_NEEDED )		3608686	0					
ANR	3608759	Condition	bin -> dyn_buf [ j ] . d_tag == DT_NEEDED	2742:6:84377:84410	3608686	0	True				
ANR	3608760	EqualityExpression	bin -> dyn_buf [ j ] . d_tag == DT_NEEDED		3608686	0		==			
ANR	3608761	MemberAccess	bin -> dyn_buf [ j ] . d_tag		3608686	0					
ANR	3608762	ArrayIndexing	bin -> dyn_buf [ j ]		3608686	0					
ANR	3608763	PtrMemberAccess	bin -> dyn_buf		3608686	0					
ANR	3608764	Identifier	bin		3608686	0					
ANR	3608765	Identifier	dyn_buf		3608686	1					
ANR	3608766	Identifier	j		3608686	1					
ANR	3608767	Identifier	d_tag		3608686	1					
ANR	3608768	Identifier	DT_NEEDED		3608686	1					
ANR	3608769	CompoundStatement		10:3:239:299	3608686	1					
ANR	3608770	IdentifierDeclStatement	"RBinElfLib * r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) ) ;"	2743:3:84418:84478	3608686	0	True				
ANR	3608771	IdentifierDecl	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		3608686	0					
ANR	3608772	IdentifierDeclType	RBinElfLib *		3608686	0					
ANR	3608773	Identifier	r		3608686	1					
ANR	3608774	AssignmentExpression	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		3608686	2		=			
ANR	3608775	Identifier	r		3608686	0					
ANR	3608776	CallExpression	"realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		3608686	1					
ANR	3608777	Callee	realloc		3608686	0					
ANR	3608778	Identifier	realloc		3608686	0					
ANR	3608779	ArgumentList	ret		3608686	1					
ANR	3608780	Argument	ret		3608686	0					
ANR	3608781	Identifier	ret		3608686	0					
ANR	3608782	Argument	( k + 1 ) * sizeof ( RBinElfLib )		3608686	1					
ANR	3608783	MultiplicativeExpression	( k + 1 ) * sizeof ( RBinElfLib )		3608686	0		*			
ANR	3608784	AdditiveExpression	k + 1		3608686	0		+			
ANR	3608785	Identifier	k		3608686	0					
ANR	3608786	PrimaryExpression	1		3608686	1					
ANR	3608787	SizeofExpression	sizeof ( RBinElfLib )		3608686	1					
ANR	3608788	Sizeof	sizeof		3608686	0					
ANR	3608789	SizeofOperand	RBinElfLib		3608686	1					
ANR	3608790	IfStatement	if ( ! r )		3608686	1					
ANR	3608791	Condition	! r	2744:7:84487:84488	3608686	0	True				
ANR	3608792	UnaryOperationExpression	! r		3608686	0					
ANR	3608793	UnaryOperator	!		3608686	0					
ANR	3608794	Identifier	r		3608686	1					
ANR	3608795	CompoundStatement		11:11:312:312	3608686	1					
ANR	3608796	ExpressionStatement	"perror ( ""realloc (libs)"" )"	2745:4:84497:84522	3608686	0	True				
ANR	3608797	CallExpression	"perror ( ""realloc (libs)"" )"		3608686	0					
ANR	3608798	Callee	perror		3608686	0					
ANR	3608799	Identifier	perror		3608686	0					
ANR	3608800	ArgumentList	"""realloc (libs)"""		3608686	1					
ANR	3608801	Argument	"""realloc (libs)"""		3608686	0					
ANR	3608802	PrimaryExpression	"""realloc (libs)"""		3608686	0					
ANR	3608803	ExpressionStatement	free ( ret )	2746:4:84528:84538	3608686	1	True				
ANR	3608804	CallExpression	free ( ret )		3608686	0					
ANR	3608805	Callee	free		3608686	0					
ANR	3608806	Identifier	free		3608686	0					
ANR	3608807	ArgumentList	ret		3608686	1					
ANR	3608808	Argument	ret		3608686	0					
ANR	3608809	Identifier	ret		3608686	0					
ANR	3608810	ReturnStatement	return NULL ;	2747:4:84544:84555	3608686	2	True				
ANR	3608811	Identifier	NULL		3608686	0					
ANR	3608812	ExpressionStatement	ret = r	2749:3:84565:84572	3608686	2	True				
ANR	3608813	AssignmentExpression	ret = r		3608686	0		=			
ANR	3608814	Identifier	ret		3608686	0					
ANR	3608815	Identifier	r		3608686	1					
ANR	3608816	IfStatement	if ( bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size )		3608686	3					
ANR	3608817	Condition	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size	2750:7:84581:84625	3608686	0	True				
ANR	3608818	RelationalExpression	bin -> dyn_buf [ j ] . d_un . d_val > bin -> strtab_size		3608686	0		>			
ANR	3608819	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		3608686	0					
ANR	3608820	MemberAccess	bin -> dyn_buf [ j ] . d_un		3608686	0					
ANR	3608821	ArrayIndexing	bin -> dyn_buf [ j ]		3608686	0					
ANR	3608822	PtrMemberAccess	bin -> dyn_buf		3608686	0					
ANR	3608823	Identifier	bin		3608686	0					
ANR	3608824	Identifier	dyn_buf		3608686	1					
ANR	3608825	Identifier	j		3608686	1					
ANR	3608826	Identifier	d_un		3608686	1					
ANR	3608827	Identifier	d_val		3608686	1					
ANR	3608828	PtrMemberAccess	bin -> strtab_size		3608686	1					
ANR	3608829	Identifier	bin		3608686	0					
ANR	3608830	Identifier	strtab_size		3608686	1					
ANR	3608831	CompoundStatement		17:54:449:449	3608686	1					
ANR	3608832	ExpressionStatement	free ( ret )	2751:4:84634:84644	3608686	0	True				
ANR	3608833	CallExpression	free ( ret )		3608686	0					
ANR	3608834	Callee	free		3608686	0					
ANR	3608835	Identifier	free		3608686	0					
ANR	3608836	ArgumentList	ret		3608686	1					
ANR	3608837	Argument	ret		3608686	0					
ANR	3608838	Identifier	ret		3608686	0					
ANR	3608839	ReturnStatement	return NULL ;	2752:4:84650:84661	3608686	1	True				
ANR	3608840	Identifier	NULL		3608686	0					
ANR	3608841	ExpressionStatement	"strncpy ( ret [ k ] . name , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"	2754:3:84671:84753	3608686	4	True				
ANR	3608842	CallExpression	"strncpy ( ret [ k ] . name , bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val , ELF_STRING_LENGTH )"		3608686	0					
ANR	3608843	Callee	strncpy		3608686	0					
ANR	3608844	Identifier	strncpy		3608686	0					
ANR	3608845	ArgumentList	ret [ k ] . name		3608686	1					
ANR	3608846	Argument	ret [ k ] . name		3608686	0					
ANR	3608847	MemberAccess	ret [ k ] . name		3608686	0					
ANR	3608848	ArrayIndexing	ret [ k ]		3608686	0					
ANR	3608849	Identifier	ret		3608686	0					
ANR	3608850	Identifier	k		3608686	1					
ANR	3608851	Identifier	name		3608686	1					
ANR	3608852	Argument	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		3608686	1					
ANR	3608853	AdditiveExpression	bin -> strtab + bin -> dyn_buf [ j ] . d_un . d_val		3608686	0		+			
ANR	3608854	PtrMemberAccess	bin -> strtab		3608686	0					
ANR	3608855	Identifier	bin		3608686	0					
ANR	3608856	Identifier	strtab		3608686	1					
ANR	3608857	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		3608686	1					
ANR	3608858	MemberAccess	bin -> dyn_buf [ j ] . d_un		3608686	0					
ANR	3608859	ArrayIndexing	bin -> dyn_buf [ j ]		3608686	0					
ANR	3608860	PtrMemberAccess	bin -> dyn_buf		3608686	0					
ANR	3608861	Identifier	bin		3608686	0					
ANR	3608862	Identifier	dyn_buf		3608686	1					
ANR	3608863	Identifier	j		3608686	1					
ANR	3608864	Identifier	d_un		3608686	1					
ANR	3608865	Identifier	d_val		3608686	1					
ANR	3608866	Argument	ELF_STRING_LENGTH		3608686	2					
ANR	3608867	Identifier	ELF_STRING_LENGTH		3608686	0					
ANR	3608868	ExpressionStatement	ret [ k ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'	2755:3:84758:84799	3608686	5	True				
ANR	3608869	AssignmentExpression	ret [ k ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'		3608686	0		=			
ANR	3608870	ArrayIndexing	ret [ k ] . name [ ELF_STRING_LENGTH - 1 ]		3608686	0					
ANR	3608871	MemberAccess	ret [ k ] . name		3608686	0					
ANR	3608872	ArrayIndexing	ret [ k ]		3608686	0					
ANR	3608873	Identifier	ret		3608686	0					
ANR	3608874	Identifier	k		3608686	1					
ANR	3608875	Identifier	name		3608686	1					
ANR	3608876	AdditiveExpression	ELF_STRING_LENGTH - 1		3608686	1		-			
ANR	3608877	Identifier	ELF_STRING_LENGTH		3608686	0					
ANR	3608878	PrimaryExpression	1		3608686	1					
ANR	3608879	PrimaryExpression	'\\0'		3608686	1					
ANR	3608880	ExpressionStatement	ret [ k ] . last = 0	2756:6:84807:84822	3608686	6	True				
ANR	3608881	AssignmentExpression	ret [ k ] . last = 0		3608686	0		=			
ANR	3608882	MemberAccess	ret [ k ] . last		3608686	0					
ANR	3608883	ArrayIndexing	ret [ k ]		3608686	0					
ANR	3608884	Identifier	ret		3608686	0					
ANR	3608885	Identifier	k		3608686	1					
ANR	3608886	Identifier	last		3608686	1					
ANR	3608887	PrimaryExpression	0		3608686	1					
ANR	3608888	IfStatement	if ( ret [ k ] . name [ 0 ] )		3608686	7					
ANR	3608889	Condition	ret [ k ] . name [ 0 ]	2757:7:84831:84844	3608686	0	True				
ANR	3608890	ArrayIndexing	ret [ k ] . name [ 0 ]		3608686	0					
ANR	3608891	MemberAccess	ret [ k ] . name		3608686	0					
ANR	3608892	ArrayIndexing	ret [ k ]		3608686	0					
ANR	3608893	Identifier	ret		3608686	0					
ANR	3608894	Identifier	k		3608686	1					
ANR	3608895	Identifier	name		3608686	1					
ANR	3608896	PrimaryExpression	0		3608686	1					
ANR	3608897	CompoundStatement		24:23:668:668	3608686	1					
ANR	3608898	ExpressionStatement	k ++	2758:4:84853:84856	3608686	0	True				
ANR	3608899	PostIncDecOperationExpression	k ++		3608686	0					
ANR	3608900	Identifier	k		3608686	0					
ANR	3608901	IncDec	++		3608686	1					
ANR	3608902	IdentifierDeclStatement	"RBinElfLib * r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) ) ;"	2762:1:84871:84931	3608686	4	True				
ANR	3608903	IdentifierDecl	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		3608686	0					
ANR	3608904	IdentifierDeclType	RBinElfLib *		3608686	0					
ANR	3608905	Identifier	r		3608686	1					
ANR	3608906	AssignmentExpression	"* r = realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		3608686	2		=			
ANR	3608907	Identifier	r		3608686	0					
ANR	3608908	CallExpression	"realloc ( ret , ( k + 1 ) * sizeof ( RBinElfLib ) )"		3608686	1					
ANR	3608909	Callee	realloc		3608686	0					
ANR	3608910	Identifier	realloc		3608686	0					
ANR	3608911	ArgumentList	ret		3608686	1					
ANR	3608912	Argument	ret		3608686	0					
ANR	3608913	Identifier	ret		3608686	0					
ANR	3608914	Argument	( k + 1 ) * sizeof ( RBinElfLib )		3608686	1					
ANR	3608915	MultiplicativeExpression	( k + 1 ) * sizeof ( RBinElfLib )		3608686	0		*			
ANR	3608916	AdditiveExpression	k + 1		3608686	0		+			
ANR	3608917	Identifier	k		3608686	0					
ANR	3608918	PrimaryExpression	1		3608686	1					
ANR	3608919	SizeofExpression	sizeof ( RBinElfLib )		3608686	1					
ANR	3608920	Sizeof	sizeof		3608686	0					
ANR	3608921	SizeofOperand	RBinElfLib		3608686	1					
ANR	3608922	IfStatement	if ( ! r )		3608686	5					
ANR	3608923	Condition	! r	2763:5:84938:84939	3608686	0	True				
ANR	3608924	UnaryOperationExpression	! r		3608686	0					
ANR	3608925	UnaryOperator	!		3608686	0					
ANR	3608926	Identifier	r		3608686	1					
ANR	3608927	CompoundStatement		30:9:763:763	3608686	1					
ANR	3608928	ExpressionStatement	"perror ( ""realloc (libs)"" )"	2764:2:84946:84971	3608686	0	True				
ANR	3608929	CallExpression	"perror ( ""realloc (libs)"" )"		3608686	0					
ANR	3608930	Callee	perror		3608686	0					
ANR	3608931	Identifier	perror		3608686	0					
ANR	3608932	ArgumentList	"""realloc (libs)"""		3608686	1					
ANR	3608933	Argument	"""realloc (libs)"""		3608686	0					
ANR	3608934	PrimaryExpression	"""realloc (libs)"""		3608686	0					
ANR	3608935	ExpressionStatement	free ( ret )	2765:2:84975:84985	3608686	1	True				
ANR	3608936	CallExpression	free ( ret )		3608686	0					
ANR	3608937	Callee	free		3608686	0					
ANR	3608938	Identifier	free		3608686	0					
ANR	3608939	ArgumentList	ret		3608686	1					
ANR	3608940	Argument	ret		3608686	0					
ANR	3608941	Identifier	ret		3608686	0					
ANR	3608942	ReturnStatement	return NULL ;	2766:2:84989:85000	3608686	2	True				
ANR	3608943	Identifier	NULL		3608686	0					
ANR	3608944	ExpressionStatement	ret = r	2768:1:85006:85013	3608686	6	True				
ANR	3608945	AssignmentExpression	ret = r		3608686	0		=			
ANR	3608946	Identifier	ret		3608686	0					
ANR	3608947	Identifier	r		3608686	1					
ANR	3608948	ExpressionStatement	ret [ k ] . last = 1	2769:1:85016:85031	3608686	7	True				
ANR	3608949	AssignmentExpression	ret [ k ] . last = 1		3608686	0		=			
ANR	3608950	MemberAccess	ret [ k ] . last		3608686	0					
ANR	3608951	ArrayIndexing	ret [ k ]		3608686	0					
ANR	3608952	Identifier	ret		3608686	0					
ANR	3608953	Identifier	k		3608686	1					
ANR	3608954	Identifier	last		3608686	1					
ANR	3608955	PrimaryExpression	1		3608686	1					
ANR	3608956	ReturnStatement	return ret ;	2770:1:85034:85044	3608686	8	True				
ANR	3608957	Identifier	ret		3608686	0					
ANR	3608958	ReturnType	Elf_		3608686	1					
ANR	3608959	Identifier	( r_bin_elf_get_libs )		3608686	2					
ANR	3608960	Identifier	r_bin_elf_get_libs		3608686	3					
ANR	3608961	ParameterList	ELFOBJ * bin		3608686	4					
ANR	3608962	Parameter	ELFOBJ * bin	2734:37:84165:84175	3608686	0	True				
ANR	3608963	ParameterType	ELFOBJ *		3608686	0					
ANR	3608964	Identifier	bin		3608686	1					
ANR	3608965	CFGEntryNode	ENTRY		3608686		True				
ANR	3608966	CFGExitNode	EXIT		3608686		True				
ANR	3608967	Symbol	DT_NEEDED		3608686						
ANR	3608968	Symbol	bin		3608686						
ANR	3608969	Symbol	bin -> phdr		3608686						
ANR	3608970	Symbol	bin -> dyn_buf [ j ] . d_un . d_val		3608686						
ANR	3608971	Symbol	realloc		3608686						
ANR	3608972	Symbol	* ret		3608686						
ANR	3608973	Symbol	* bin		3608686						
ANR	3608974	Symbol	ret [ k ] . name		3608686						
ANR	3608975	Symbol	bin -> dyn_buf [ j ] . d_tag		3608686						
ANR	3608976	Symbol	* bin -> strtab		3608686						
ANR	3608977	Symbol	* * bin		3608686						
ANR	3608978	Symbol	* bin -> dyn_buf		3608686						
ANR	3608979	Symbol	bin -> strtab		3608686						
ANR	3608980	Symbol	bin -> strtab_size		3608686						
ANR	3608981	Symbol	ret		3608686						
ANR	3608982	Symbol	* * k		3608686						
ANR	3608983	Symbol	bin -> dyn_buf		3608686						
ANR	3608984	Symbol	NULL		3608686						
ANR	3608985	Symbol	bin -> dyn_entries		3608686						
ANR	3608986	Symbol	j		3608686						
ANR	3608987	Symbol	k		3608686						
ANR	3608988	Symbol	bin -> dyn_buf [ j ] . d_un		3608686						
ANR	3608989	Symbol	ELF_STRING_LENGTH		3608686						
ANR	3608990	Symbol	ret [ k ] . last		3608686						
ANR	3608991	Symbol	r		3608686						
ANR	3608992	Symbol	* j		3608686						
ANR	3608993	Symbol	* ELF_STRING_LENGTH		3608686						
ANR	3608994	Symbol	* k		3608686						
ANR	3608995	Symbol	* * ret		3608686						
ANR	3608996	Symbol	* ret [ k ] . name		3608686						
ANR	3608997	Symbol	* ( bin -> strtab + 1 )		3608686						
ANR	3608998	Function	create_section_from_phdr	2773:0:85049:85444							
ANR	3608999	FunctionDef	"create_section_from_phdr (ELFOBJ * bin , RBinElfSection * ret , int * i , const char * name , ut64 addr , ut64 sz)"		3608998	0					
ANR	3609000	CompoundStatement		2773:117:85166:85444	3608998	0					
ANR	3609001	IfStatement	if ( ! addr )		3608998	0					
ANR	3609002	Condition	! addr	2774:5:85173:85177	3608998	0	True				
ANR	3609003	UnaryOperationExpression	! addr		3608998	0					
ANR	3609004	UnaryOperator	!		3608998	0					
ANR	3609005	Identifier	addr		3608998	1					
ANR	3609006	CompoundStatement		2:12:13:13	3608998	1					
ANR	3609007	ReturnStatement	return ;	2775:2:85184:85190	3608998	0	True				
ANR	3609008	ExpressionStatement	"ret [ * i ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , addr )"	2778:1:85197:85249	3608998	1	True				
ANR	3609009	AssignmentExpression	"ret [ * i ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , addr )"		3608998	0		=			
ANR	3609010	MemberAccess	ret [ * i ] . offset		3608998	0					
ANR	3609011	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609012	Identifier	ret		3608998	0					
ANR	3609013	UnaryOperationExpression	* i		3608998	1					
ANR	3609014	UnaryOperator	*		3608998	0					
ANR	3609015	Identifier	i		3608998	1					
ANR	3609016	Identifier	offset		3608998	1					
ANR	3609017	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , addr )"		3608998	1					
ANR	3609018	Callee	Elf_ ( r_bin_elf_v2p_new )		3608998	0					
ANR	3609019	CallExpression	Elf_ ( r_bin_elf_v2p_new )		3608998	0					
ANR	3609020	Callee	Elf_		3608998	0					
ANR	3609021	Identifier	Elf_		3608998	0					
ANR	3609022	ArgumentList	r_bin_elf_v2p_new		3608998	1					
ANR	3609023	Argument	r_bin_elf_v2p_new		3608998	0					
ANR	3609024	Identifier	r_bin_elf_v2p_new		3608998	0					
ANR	3609025	ArgumentList	bin		3608998	1					
ANR	3609026	Argument	bin		3608998	0					
ANR	3609027	Identifier	bin		3608998	0					
ANR	3609028	Argument	addr		3608998	1					
ANR	3609029	Identifier	addr		3608998	0					
ANR	3609030	ExpressionStatement	ret [ * i ] . rva = addr	2779:1:85252:85270	3608998	2	True				
ANR	3609031	AssignmentExpression	ret [ * i ] . rva = addr		3608998	0		=			
ANR	3609032	MemberAccess	ret [ * i ] . rva		3608998	0					
ANR	3609033	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609034	Identifier	ret		3608998	0					
ANR	3609035	UnaryOperationExpression	* i		3608998	1					
ANR	3609036	UnaryOperator	*		3608998	0					
ANR	3609037	Identifier	i		3608998	1					
ANR	3609038	Identifier	rva		3608998	1					
ANR	3609039	Identifier	addr		3608998	1					
ANR	3609040	ExpressionStatement	ret [ * i ] . size = sz	2780:1:85273:85290	3608998	3	True				
ANR	3609041	AssignmentExpression	ret [ * i ] . size = sz		3608998	0		=			
ANR	3609042	MemberAccess	ret [ * i ] . size		3608998	0					
ANR	3609043	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609044	Identifier	ret		3608998	0					
ANR	3609045	UnaryOperationExpression	* i		3608998	1					
ANR	3609046	UnaryOperator	*		3608998	0					
ANR	3609047	Identifier	i		3608998	1					
ANR	3609048	Identifier	size		3608998	1					
ANR	3609049	Identifier	sz		3608998	1					
ANR	3609050	ExpressionStatement	"strncpy ( ret [ * i ] . name , name , R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 )"	2781:1:85293:85354	3608998	4	True				
ANR	3609051	CallExpression	"strncpy ( ret [ * i ] . name , name , R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 )"		3608998	0					
ANR	3609052	Callee	strncpy		3608998	0					
ANR	3609053	Identifier	strncpy		3608998	0					
ANR	3609054	ArgumentList	ret [ * i ] . name		3608998	1					
ANR	3609055	Argument	ret [ * i ] . name		3608998	0					
ANR	3609056	MemberAccess	ret [ * i ] . name		3608998	0					
ANR	3609057	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609058	Identifier	ret		3608998	0					
ANR	3609059	UnaryOperationExpression	* i		3608998	1					
ANR	3609060	UnaryOperator	*		3608998	0					
ANR	3609061	Identifier	i		3608998	1					
ANR	3609062	Identifier	name		3608998	1					
ANR	3609063	Argument	name		3608998	1					
ANR	3609064	Identifier	name		3608998	0					
ANR	3609065	Argument	R_ARRAY_SIZE ( ret [ * i ] . name ) - 1		3608998	2					
ANR	3609066	AdditiveExpression	R_ARRAY_SIZE ( ret [ * i ] . name ) - 1		3608998	0		-			
ANR	3609067	CallExpression	R_ARRAY_SIZE ( ret [ * i ] . name )		3608998	0					
ANR	3609068	Callee	R_ARRAY_SIZE		3608998	0					
ANR	3609069	Identifier	R_ARRAY_SIZE		3608998	0					
ANR	3609070	ArgumentList	ret [ * i ] . name		3608998	1					
ANR	3609071	Argument	ret [ * i ] . name		3608998	0					
ANR	3609072	MemberAccess	ret [ * i ] . name		3608998	0					
ANR	3609073	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609074	Identifier	ret		3608998	0					
ANR	3609075	UnaryOperationExpression	* i		3608998	1					
ANR	3609076	UnaryOperator	*		3608998	0					
ANR	3609077	Identifier	i		3608998	1					
ANR	3609078	Identifier	name		3608998	1					
ANR	3609079	PrimaryExpression	1		3608998	1					
ANR	3609080	ExpressionStatement	ret [ * i ] . name [ R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 ] = '\\0'	2782:1:85357:85409	3608998	5	True				
ANR	3609081	AssignmentExpression	ret [ * i ] . name [ R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 ] = '\\0'		3608998	0		=			
ANR	3609082	ArrayIndexing	ret [ * i ] . name [ R_ARRAY_SIZE ( ret [ * i ] . name ) - 1 ]		3608998	0					
ANR	3609083	MemberAccess	ret [ * i ] . name		3608998	0					
ANR	3609084	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609085	Identifier	ret		3608998	0					
ANR	3609086	UnaryOperationExpression	* i		3608998	1					
ANR	3609087	UnaryOperator	*		3608998	0					
ANR	3609088	Identifier	i		3608998	1					
ANR	3609089	Identifier	name		3608998	1					
ANR	3609090	AdditiveExpression	R_ARRAY_SIZE ( ret [ * i ] . name ) - 1		3608998	1		-			
ANR	3609091	CallExpression	R_ARRAY_SIZE ( ret [ * i ] . name )		3608998	0					
ANR	3609092	Callee	R_ARRAY_SIZE		3608998	0					
ANR	3609093	Identifier	R_ARRAY_SIZE		3608998	0					
ANR	3609094	ArgumentList	ret [ * i ] . name		3608998	1					
ANR	3609095	Argument	ret [ * i ] . name		3608998	0					
ANR	3609096	MemberAccess	ret [ * i ] . name		3608998	0					
ANR	3609097	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609098	Identifier	ret		3608998	0					
ANR	3609099	UnaryOperationExpression	* i		3608998	1					
ANR	3609100	UnaryOperator	*		3608998	0					
ANR	3609101	Identifier	i		3608998	1					
ANR	3609102	Identifier	name		3608998	1					
ANR	3609103	PrimaryExpression	1		3608998	1					
ANR	3609104	PrimaryExpression	'\\0'		3608998	1					
ANR	3609105	ExpressionStatement	ret [ * i ] . last = 0	2783:1:85412:85428	3608998	6	True				
ANR	3609106	AssignmentExpression	ret [ * i ] . last = 0		3608998	0		=			
ANR	3609107	MemberAccess	ret [ * i ] . last		3608998	0					
ANR	3609108	ArrayIndexing	ret [ * i ]		3608998	0					
ANR	3609109	Identifier	ret		3608998	0					
ANR	3609110	UnaryOperationExpression	* i		3608998	1					
ANR	3609111	UnaryOperator	*		3608998	0					
ANR	3609112	Identifier	i		3608998	1					
ANR	3609113	Identifier	last		3608998	1					
ANR	3609114	PrimaryExpression	0		3608998	1					
ANR	3609115	ExpressionStatement	* i = * i + 1	2784:1:85431:85442	3608998	7	True				
ANR	3609116	AssignmentExpression	* i = * i + 1		3608998	0		=			
ANR	3609117	UnaryOperationExpression	* i		3608998	0					
ANR	3609118	UnaryOperator	*		3608998	0					
ANR	3609119	Identifier	i		3608998	1					
ANR	3609120	AdditiveExpression	* i + 1		3608998	1		+			
ANR	3609121	UnaryOperationExpression	* i		3608998	0					
ANR	3609122	UnaryOperator	*		3608998	0					
ANR	3609123	Identifier	i		3608998	1					
ANR	3609124	PrimaryExpression	1		3608998	1					
ANR	3609125	ReturnType	static void		3608998	1					
ANR	3609126	Identifier	create_section_from_phdr		3608998	2					
ANR	3609127	ParameterList	"ELFOBJ * bin , RBinElfSection * ret , int * i , const char * name , ut64 addr , ut64 sz"		3608998	3					
ANR	3609128	Parameter	ELFOBJ * bin	2773:37:85086:85096	3608998	0	True				
ANR	3609129	ParameterType	ELFOBJ *		3608998	0					
ANR	3609130	Identifier	bin		3608998	1					
ANR	3609131	Parameter	RBinElfSection * ret	2773:50:85099:85117	3608998	1	True				
ANR	3609132	ParameterType	RBinElfSection *		3608998	0					
ANR	3609133	Identifier	ret		3608998	1					
ANR	3609134	Parameter	int * i	2773:71:85120:85125	3608998	2	True				
ANR	3609135	ParameterType	int *		3608998	0					
ANR	3609136	Identifier	i		3608998	1					
ANR	3609137	Parameter	const char * name	2773:79:85128:85143	3608998	3	True				
ANR	3609138	ParameterType	const char *		3608998	0					
ANR	3609139	Identifier	name		3608998	1					
ANR	3609140	Parameter	ut64 addr	2773:97:85146:85154	3608998	4	True				
ANR	3609141	ParameterType	ut64		3608998	0					
ANR	3609142	Identifier	addr		3608998	1					
ANR	3609143	Parameter	ut64 sz	2773:108:85157:85163	3608998	5	True				
ANR	3609144	ParameterType	ut64		3608998	0					
ANR	3609145	Identifier	sz		3608998	1					
ANR	3609146	CFGEntryNode	ENTRY		3608998		True				
ANR	3609147	CFGExitNode	EXIT		3608998		True				
ANR	3609148	Symbol	ret		3608998						
ANR	3609149	Symbol	Elf_		3608998						
ANR	3609150	Symbol	* * i		3608998						
ANR	3609151	Symbol	* ret [ * i ] . name		3608998						
ANR	3609152	Symbol	bin		3608998						
ANR	3609153	Symbol	sz		3608998						
ANR	3609154	Symbol	i		3608998						
ANR	3609155	Symbol	ret [ * i ] . size		3608998						
ANR	3609156	Symbol	* ret		3608998						
ANR	3609157	Symbol	* i		3608998						
ANR	3609158	Symbol	* * ret		3608998						
ANR	3609159	Symbol	ret [ * i ] . offset		3608998						
ANR	3609160	Symbol	ret [ * i ] . last		3608998						
ANR	3609161	Symbol	ret [ * i ] . rva		3608998						
ANR	3609162	Symbol	name		3608998						
ANR	3609163	Symbol	r_bin_elf_v2p_new		3608998						
ANR	3609164	Symbol	R_ARRAY_SIZE		3608998						
ANR	3609165	Symbol	* * * i		3608998						
ANR	3609166	Symbol	ret [ * i ] . name		3608998						
ANR	3609167	Symbol	* R_ARRAY_SIZE		3608998						
ANR	3609168	Symbol	addr		3608998						
ANR	3609169	Function	get_sections_from_phdr	2787:0:85447:86839							
ANR	3609170	FunctionDef	get_sections_from_phdr (ELFOBJ * bin)		3609169	0					
ANR	3609171	CompoundStatement		2787:59:85506:86839	3609169	0					
ANR	3609172	IdentifierDeclStatement	RBinElfSection * ret ;	2788:1:85509:85528	3609169	0	True				
ANR	3609173	IdentifierDecl	* ret		3609169	0					
ANR	3609174	IdentifierDeclType	RBinElfSection *		3609169	0					
ANR	3609175	Identifier	ret		3609169	1					
ANR	3609176	IdentifierDeclStatement	"int i , num_sections = 0 ;"	2789:1:85531:85554	3609169	1	True				
ANR	3609177	IdentifierDecl	i		3609169	0					
ANR	3609178	IdentifierDeclType	int		3609169	0					
ANR	3609179	Identifier	i		3609169	1					
ANR	3609180	IdentifierDecl	num_sections = 0		3609169	1					
ANR	3609181	IdentifierDeclType	int		3609169	0					
ANR	3609182	Identifier	num_sections		3609169	1					
ANR	3609183	AssignmentExpression	num_sections = 0		3609169	2		=			
ANR	3609184	Identifier	num_sections		3609169	0					
ANR	3609185	PrimaryExpression	0		3609169	1					
ANR	3609186	IdentifierDeclStatement	"ut64 reldyn = 0 , relava = 0 , pltgotva = 0 , relva = 0 ;"	2790:1:85557:85609	3609169	2	True				
ANR	3609187	IdentifierDecl	reldyn = 0		3609169	0					
ANR	3609188	IdentifierDeclType	ut64		3609169	0					
ANR	3609189	Identifier	reldyn		3609169	1					
ANR	3609190	AssignmentExpression	reldyn = 0		3609169	2		=			
ANR	3609191	Identifier	reldyn		3609169	0					
ANR	3609192	PrimaryExpression	0		3609169	1					
ANR	3609193	IdentifierDecl	relava = 0		3609169	1					
ANR	3609194	IdentifierDeclType	ut64		3609169	0					
ANR	3609195	Identifier	relava		3609169	1					
ANR	3609196	AssignmentExpression	relava = 0		3609169	2		=			
ANR	3609197	Identifier	relava		3609169	0					
ANR	3609198	PrimaryExpression	0		3609169	1					
ANR	3609199	IdentifierDecl	pltgotva = 0		3609169	2					
ANR	3609200	IdentifierDeclType	ut64		3609169	0					
ANR	3609201	Identifier	pltgotva		3609169	1					
ANR	3609202	AssignmentExpression	pltgotva = 0		3609169	2		=			
ANR	3609203	Identifier	pltgotva		3609169	0					
ANR	3609204	PrimaryExpression	0		3609169	1					
ANR	3609205	IdentifierDecl	relva = 0		3609169	3					
ANR	3609206	IdentifierDeclType	ut64		3609169	0					
ANR	3609207	Identifier	relva		3609169	1					
ANR	3609208	AssignmentExpression	relva = 0		3609169	2		=			
ANR	3609209	Identifier	relva		3609169	0					
ANR	3609210	PrimaryExpression	0		3609169	1					
ANR	3609211	IdentifierDeclStatement	"ut64 reldynsz = 0 , relasz = 0 , pltgotsz = 0 ;"	2791:1:85612:85655	3609169	3	True				
ANR	3609212	IdentifierDecl	reldynsz = 0		3609169	0					
ANR	3609213	IdentifierDeclType	ut64		3609169	0					
ANR	3609214	Identifier	reldynsz		3609169	1					
ANR	3609215	AssignmentExpression	reldynsz = 0		3609169	2		=			
ANR	3609216	Identifier	reldynsz		3609169	0					
ANR	3609217	PrimaryExpression	0		3609169	1					
ANR	3609218	IdentifierDecl	relasz = 0		3609169	1					
ANR	3609219	IdentifierDeclType	ut64		3609169	0					
ANR	3609220	Identifier	relasz		3609169	1					
ANR	3609221	AssignmentExpression	relasz = 0		3609169	2		=			
ANR	3609222	Identifier	relasz		3609169	0					
ANR	3609223	PrimaryExpression	0		3609169	1					
ANR	3609224	IdentifierDecl	pltgotsz = 0		3609169	2					
ANR	3609225	IdentifierDeclType	ut64		3609169	0					
ANR	3609226	Identifier	pltgotsz		3609169	1					
ANR	3609227	AssignmentExpression	pltgotsz = 0		3609169	2		=			
ANR	3609228	Identifier	pltgotsz		3609169	0					
ANR	3609229	PrimaryExpression	0		3609169	1					
ANR	3609230	ExpressionStatement	"r_return_val_if_fail ( bin && bin -> phdr , NULL )"	2792:1:85658:85703	3609169	4	True				
ANR	3609231	CallExpression	"r_return_val_if_fail ( bin && bin -> phdr , NULL )"		3609169	0					
ANR	3609232	Callee	r_return_val_if_fail		3609169	0					
ANR	3609233	Identifier	r_return_val_if_fail		3609169	0					
ANR	3609234	ArgumentList	bin && bin -> phdr		3609169	1					
ANR	3609235	Argument	bin && bin -> phdr		3609169	0					
ANR	3609236	AndExpression	bin && bin -> phdr		3609169	0		&&			
ANR	3609237	Identifier	bin		3609169	0					
ANR	3609238	PtrMemberAccess	bin -> phdr		3609169	1					
ANR	3609239	Identifier	bin		3609169	0					
ANR	3609240	Identifier	phdr		3609169	1					
ANR	3609241	Argument	NULL		3609169	1					
ANR	3609242	Identifier	NULL		3609169	0					
ANR	3609243	IfStatement	if ( ! bin -> ehdr . e_phnum || ! bin -> dyn_buf )		3609169	5					
ANR	3609244	Condition	! bin -> ehdr . e_phnum || ! bin -> dyn_buf	2793:5:85710:85744	3609169	0	True				
ANR	3609245	OrExpression	! bin -> ehdr . e_phnum || ! bin -> dyn_buf		3609169	0		||			
ANR	3609246	UnaryOperationExpression	! bin -> ehdr . e_phnum		3609169	0					
ANR	3609247	UnaryOperator	!		3609169	0					
ANR	3609248	MemberAccess	bin -> ehdr . e_phnum		3609169	1					
ANR	3609249	PtrMemberAccess	bin -> ehdr		3609169	0					
ANR	3609250	Identifier	bin		3609169	0					
ANR	3609251	Identifier	ehdr		3609169	1					
ANR	3609252	Identifier	e_phnum		3609169	1					
ANR	3609253	UnaryOperationExpression	! bin -> dyn_buf		3609169	1					
ANR	3609254	UnaryOperator	!		3609169	0					
ANR	3609255	PtrMemberAccess	bin -> dyn_buf		3609169	1					
ANR	3609256	Identifier	bin		3609169	0					
ANR	3609257	Identifier	dyn_buf		3609169	1					
ANR	3609258	CompoundStatement		7:42:240:240	3609169	1					
ANR	3609259	ReturnStatement	return NULL ;	2794:2:85751:85762	3609169	0	True				
ANR	3609260	Identifier	NULL		3609169	0					
ANR	3609261	ForStatement	for ( i = 0 ; i < bin -> dyn_entries ; i ++ )		3609169	6					
ANR	3609262	ForInit	i = 0 ;	2797:6:85774:85779	3609169	0	True				
ANR	3609263	AssignmentExpression	i = 0		3609169	0		=			
ANR	3609264	Identifier	i		3609169	0					
ANR	3609265	PrimaryExpression	0		3609169	1					
ANR	3609266	Condition	i < bin -> dyn_entries	2797:13:85781:85800	3609169	1	True				
ANR	3609267	RelationalExpression	i < bin -> dyn_entries		3609169	0		<			
ANR	3609268	Identifier	i		3609169	0					
ANR	3609269	PtrMemberAccess	bin -> dyn_entries		3609169	1					
ANR	3609270	Identifier	bin		3609169	0					
ANR	3609271	Identifier	dyn_entries		3609169	1					
ANR	3609272	PostIncDecOperationExpression	i ++	2797:35:85803:85805	3609169	2	True				
ANR	3609273	Identifier	i		3609169	0					
ANR	3609274	IncDec	++		3609169	1					
ANR	3609275	CompoundStatement		11:40:301:301	3609169	3					
ANR	3609276	SwitchStatement	switch ( bin -> dyn_buf [ i ] . d_tag )		3609169	0					
ANR	3609277	Condition	bin -> dyn_buf [ i ] . d_tag	2798:10:85820:85840	3609169	0	True				
ANR	3609278	MemberAccess	bin -> dyn_buf [ i ] . d_tag		3609169	0					
ANR	3609279	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609280	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609281	Identifier	bin		3609169	0					
ANR	3609282	Identifier	dyn_buf		3609169	1					
ANR	3609283	Identifier	i		3609169	1					
ANR	3609284	Identifier	d_tag		3609169	1					
ANR	3609285	CompoundStatement		12:33:336:336	3609169	1					
ANR	3609286	Label	case DT_REL :	2799:2:85847:85858	3609169	0	True				
ANR	3609287	Identifier	DT_REL		3609169	0					
ANR	3609288	ExpressionStatement	reldyn = bin -> dyn_buf [ i ] . d_un . d_ptr	2800:3:85863:85898	3609169	1	True				
ANR	3609289	AssignmentExpression	reldyn = bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	0		=			
ANR	3609290	Identifier	reldyn		3609169	0					
ANR	3609291	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	1					
ANR	3609292	MemberAccess	bin -> dyn_buf [ i ] . d_un		3609169	0					
ANR	3609293	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609294	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609295	Identifier	bin		3609169	0					
ANR	3609296	Identifier	dyn_buf		3609169	1					
ANR	3609297	Identifier	i		3609169	1					
ANR	3609298	Identifier	d_un		3609169	1					
ANR	3609299	Identifier	d_ptr		3609169	1					
ANR	3609300	ExpressionStatement	num_sections ++	2801:3:85903:85917	3609169	2	True				
ANR	3609301	PostIncDecOperationExpression	num_sections ++		3609169	0					
ANR	3609302	Identifier	num_sections		3609169	0					
ANR	3609303	IncDec	++		3609169	1					
ANR	3609304	BreakStatement	break ;	2802:3:85922:85927	3609169	3	True				
ANR	3609305	Label	case DT_RELA :	2803:2:85931:85943	3609169	4	True				
ANR	3609306	Identifier	DT_RELA		3609169	0					
ANR	3609307	ExpressionStatement	relva = bin -> dyn_buf [ i ] . d_un . d_ptr	2804:3:85948:85982	3609169	5	True				
ANR	3609308	AssignmentExpression	relva = bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	0		=			
ANR	3609309	Identifier	relva		3609169	0					
ANR	3609310	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	1					
ANR	3609311	MemberAccess	bin -> dyn_buf [ i ] . d_un		3609169	0					
ANR	3609312	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609313	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609314	Identifier	bin		3609169	0					
ANR	3609315	Identifier	dyn_buf		3609169	1					
ANR	3609316	Identifier	i		3609169	1					
ANR	3609317	Identifier	d_un		3609169	1					
ANR	3609318	Identifier	d_ptr		3609169	1					
ANR	3609319	ExpressionStatement	num_sections ++	2805:3:85987:86001	3609169	6	True				
ANR	3609320	PostIncDecOperationExpression	num_sections ++		3609169	0					
ANR	3609321	Identifier	num_sections		3609169	0					
ANR	3609322	IncDec	++		3609169	1					
ANR	3609323	BreakStatement	break ;	2806:3:86006:86011	3609169	7	True				
ANR	3609324	Label	case DT_RELSZ :	2807:2:86015:86028	3609169	8	True				
ANR	3609325	Identifier	DT_RELSZ		3609169	0					
ANR	3609326	ExpressionStatement	reldynsz = bin -> dyn_buf [ i ] . d_un . d_val	2808:3:86033:86070	3609169	9	True				
ANR	3609327	AssignmentExpression	reldynsz = bin -> dyn_buf [ i ] . d_un . d_val		3609169	0		=			
ANR	3609328	Identifier	reldynsz		3609169	0					
ANR	3609329	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		3609169	1					
ANR	3609330	MemberAccess	bin -> dyn_buf [ i ] . d_un		3609169	0					
ANR	3609331	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609332	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609333	Identifier	bin		3609169	0					
ANR	3609334	Identifier	dyn_buf		3609169	1					
ANR	3609335	Identifier	i		3609169	1					
ANR	3609336	Identifier	d_un		3609169	1					
ANR	3609337	Identifier	d_val		3609169	1					
ANR	3609338	BreakStatement	break ;	2809:3:86075:86080	3609169	10	True				
ANR	3609339	Label	case DT_RELASZ :	2810:2:86084:86098	3609169	11	True				
ANR	3609340	Identifier	DT_RELASZ		3609169	0					
ANR	3609341	ExpressionStatement	relasz = bin -> dyn_buf [ i ] . d_un . d_val	2811:3:86103:86138	3609169	12	True				
ANR	3609342	AssignmentExpression	relasz = bin -> dyn_buf [ i ] . d_un . d_val		3609169	0		=			
ANR	3609343	Identifier	relasz		3609169	0					
ANR	3609344	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		3609169	1					
ANR	3609345	MemberAccess	bin -> dyn_buf [ i ] . d_un		3609169	0					
ANR	3609346	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609347	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609348	Identifier	bin		3609169	0					
ANR	3609349	Identifier	dyn_buf		3609169	1					
ANR	3609350	Identifier	i		3609169	1					
ANR	3609351	Identifier	d_un		3609169	1					
ANR	3609352	Identifier	d_val		3609169	1					
ANR	3609353	BreakStatement	break ;	2812:3:86143:86148	3609169	13	True				
ANR	3609354	Label	case DT_PLTGOT :	2813:2:86152:86166	3609169	14	True				
ANR	3609355	Identifier	DT_PLTGOT		3609169	0					
ANR	3609356	ExpressionStatement	pltgotva = bin -> dyn_buf [ i ] . d_un . d_ptr	2814:3:86171:86208	3609169	15	True				
ANR	3609357	AssignmentExpression	pltgotva = bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	0		=			
ANR	3609358	Identifier	pltgotva		3609169	0					
ANR	3609359	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	1					
ANR	3609360	MemberAccess	bin -> dyn_buf [ i ] . d_un		3609169	0					
ANR	3609361	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609362	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609363	Identifier	bin		3609169	0					
ANR	3609364	Identifier	dyn_buf		3609169	1					
ANR	3609365	Identifier	i		3609169	1					
ANR	3609366	Identifier	d_un		3609169	1					
ANR	3609367	Identifier	d_ptr		3609169	1					
ANR	3609368	ExpressionStatement	num_sections ++	2815:3:86213:86227	3609169	16	True				
ANR	3609369	PostIncDecOperationExpression	num_sections ++		3609169	0					
ANR	3609370	Identifier	num_sections		3609169	0					
ANR	3609371	IncDec	++		3609169	1					
ANR	3609372	BreakStatement	break ;	2816:3:86232:86237	3609169	17	True				
ANR	3609373	Label	case DT_PLTRELSZ :	2817:2:86241:86257	3609169	18	True				
ANR	3609374	Identifier	DT_PLTRELSZ		3609169	0					
ANR	3609375	ExpressionStatement	pltgotsz = bin -> dyn_buf [ i ] . d_un . d_val	2818:3:86262:86299	3609169	19	True				
ANR	3609376	AssignmentExpression	pltgotsz = bin -> dyn_buf [ i ] . d_un . d_val		3609169	0		=			
ANR	3609377	Identifier	pltgotsz		3609169	0					
ANR	3609378	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_val		3609169	1					
ANR	3609379	MemberAccess	bin -> dyn_buf [ i ] . d_un		3609169	0					
ANR	3609380	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609381	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609382	Identifier	bin		3609169	0					
ANR	3609383	Identifier	dyn_buf		3609169	1					
ANR	3609384	Identifier	i		3609169	1					
ANR	3609385	Identifier	d_un		3609169	1					
ANR	3609386	Identifier	d_val		3609169	1					
ANR	3609387	BreakStatement	break ;	2819:3:86304:86309	3609169	20	True				
ANR	3609388	Label	case DT_JMPREL :	2820:2:86313:86327	3609169	21	True				
ANR	3609389	Identifier	DT_JMPREL		3609169	0					
ANR	3609390	ExpressionStatement	relava = bin -> dyn_buf [ i ] . d_un . d_ptr	2821:3:86332:86367	3609169	22	True				
ANR	3609391	AssignmentExpression	relava = bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	0		=			
ANR	3609392	Identifier	relava		3609169	0					
ANR	3609393	MemberAccess	bin -> dyn_buf [ i ] . d_un . d_ptr		3609169	1					
ANR	3609394	MemberAccess	bin -> dyn_buf [ i ] . d_un		3609169	0					
ANR	3609395	ArrayIndexing	bin -> dyn_buf [ i ]		3609169	0					
ANR	3609396	PtrMemberAccess	bin -> dyn_buf		3609169	0					
ANR	3609397	Identifier	bin		3609169	0					
ANR	3609398	Identifier	dyn_buf		3609169	1					
ANR	3609399	Identifier	i		3609169	1					
ANR	3609400	Identifier	d_un		3609169	1					
ANR	3609401	Identifier	d_ptr		3609169	1					
ANR	3609402	ExpressionStatement	num_sections ++	2822:3:86372:86386	3609169	23	True				
ANR	3609403	PostIncDecOperationExpression	num_sections ++		3609169	0					
ANR	3609404	Identifier	num_sections		3609169	0					
ANR	3609405	IncDec	++		3609169	1					
ANR	3609406	BreakStatement	break ;	2823:3:86391:86396	3609169	24	True				
ANR	3609407	Label	default :	2824:2:86400:86407	3609169	25	True				
ANR	3609408	Identifier	default		3609169	0					
ANR	3609409	BreakStatement	break ;	2824:11:86409:86414	3609169	26	True				
ANR	3609410	ExpressionStatement	"ret = calloc ( num_sections + 1 , sizeof ( RBinElfSection ) )"	2827:1:86424:86479	3609169	7	True				
ANR	3609411	AssignmentExpression	"ret = calloc ( num_sections + 1 , sizeof ( RBinElfSection ) )"		3609169	0		=			
ANR	3609412	Identifier	ret		3609169	0					
ANR	3609413	CallExpression	"calloc ( num_sections + 1 , sizeof ( RBinElfSection ) )"		3609169	1					
ANR	3609414	Callee	calloc		3609169	0					
ANR	3609415	Identifier	calloc		3609169	0					
ANR	3609416	ArgumentList	num_sections + 1		3609169	1					
ANR	3609417	Argument	num_sections + 1		3609169	0					
ANR	3609418	AdditiveExpression	num_sections + 1		3609169	0		+			
ANR	3609419	Identifier	num_sections		3609169	0					
ANR	3609420	PrimaryExpression	1		3609169	1					
ANR	3609421	Argument	sizeof ( RBinElfSection )		3609169	1					
ANR	3609422	SizeofExpression	sizeof ( RBinElfSection )		3609169	0					
ANR	3609423	Sizeof	sizeof		3609169	0					
ANR	3609424	SizeofOperand	RBinElfSection		3609169	1					
ANR	3609425	IfStatement	if ( ! ret )		3609169	8					
ANR	3609426	Condition	! ret	2828:5:86486:86489	3609169	0	True				
ANR	3609427	UnaryOperationExpression	! ret		3609169	0					
ANR	3609428	UnaryOperator	!		3609169	0					
ANR	3609429	Identifier	ret		3609169	1					
ANR	3609430	CompoundStatement		42:11:985:985	3609169	1					
ANR	3609431	ReturnStatement	return NULL ;	2829:2:86496:86507	3609169	0	True				
ANR	3609432	Identifier	NULL		3609169	0					
ANR	3609433	ExpressionStatement	i = 0	2831:1:86513:86518	3609169	9	True				
ANR	3609434	AssignmentExpression	i = 0		3609169	0		=			
ANR	3609435	Identifier	i		3609169	0					
ANR	3609436	PrimaryExpression	0		3609169	1					
ANR	3609437	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".rel.dyn"" , reldyn , reldynsz )"	2832:1:86521:86590	3609169	10	True				
ANR	3609438	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".rel.dyn"" , reldyn , reldynsz )"		3609169	0					
ANR	3609439	Callee	create_section_from_phdr		3609169	0					
ANR	3609440	Identifier	create_section_from_phdr		3609169	0					
ANR	3609441	ArgumentList	bin		3609169	1					
ANR	3609442	Argument	bin		3609169	0					
ANR	3609443	Identifier	bin		3609169	0					
ANR	3609444	Argument	ret		3609169	1					
ANR	3609445	Identifier	ret		3609169	0					
ANR	3609446	Argument	& i		3609169	2					
ANR	3609447	UnaryOperationExpression	& i		3609169	0					
ANR	3609448	UnaryOperator	&		3609169	0					
ANR	3609449	Identifier	i		3609169	1					
ANR	3609450	Argument	""".rel.dyn"""		3609169	3					
ANR	3609451	PrimaryExpression	""".rel.dyn"""		3609169	0					
ANR	3609452	Argument	reldyn		3609169	4					
ANR	3609453	Identifier	reldyn		3609169	0					
ANR	3609454	Argument	reldynsz		3609169	5					
ANR	3609455	Identifier	reldynsz		3609169	0					
ANR	3609456	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".rela.plt"" , relava , pltgotsz )"	2833:1:86593:86663	3609169	11	True				
ANR	3609457	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".rela.plt"" , relava , pltgotsz )"		3609169	0					
ANR	3609458	Callee	create_section_from_phdr		3609169	0					
ANR	3609459	Identifier	create_section_from_phdr		3609169	0					
ANR	3609460	ArgumentList	bin		3609169	1					
ANR	3609461	Argument	bin		3609169	0					
ANR	3609462	Identifier	bin		3609169	0					
ANR	3609463	Argument	ret		3609169	1					
ANR	3609464	Identifier	ret		3609169	0					
ANR	3609465	Argument	& i		3609169	2					
ANR	3609466	UnaryOperationExpression	& i		3609169	0					
ANR	3609467	UnaryOperator	&		3609169	0					
ANR	3609468	Identifier	i		3609169	1					
ANR	3609469	Argument	""".rela.plt"""		3609169	3					
ANR	3609470	PrimaryExpression	""".rela.plt"""		3609169	0					
ANR	3609471	Argument	relava		3609169	4					
ANR	3609472	Identifier	relava		3609169	0					
ANR	3609473	Argument	pltgotsz		3609169	5					
ANR	3609474	Identifier	pltgotsz		3609169	0					
ANR	3609475	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".rel.plt"" , relva , relasz )"	2834:1:86666:86732	3609169	12	True				
ANR	3609476	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".rel.plt"" , relva , relasz )"		3609169	0					
ANR	3609477	Callee	create_section_from_phdr		3609169	0					
ANR	3609478	Identifier	create_section_from_phdr		3609169	0					
ANR	3609479	ArgumentList	bin		3609169	1					
ANR	3609480	Argument	bin		3609169	0					
ANR	3609481	Identifier	bin		3609169	0					
ANR	3609482	Argument	ret		3609169	1					
ANR	3609483	Identifier	ret		3609169	0					
ANR	3609484	Argument	& i		3609169	2					
ANR	3609485	UnaryOperationExpression	& i		3609169	0					
ANR	3609486	UnaryOperator	&		3609169	0					
ANR	3609487	Identifier	i		3609169	1					
ANR	3609488	Argument	""".rel.plt"""		3609169	3					
ANR	3609489	PrimaryExpression	""".rel.plt"""		3609169	0					
ANR	3609490	Argument	relva		3609169	4					
ANR	3609491	Identifier	relva		3609169	0					
ANR	3609492	Argument	relasz		3609169	5					
ANR	3609493	Identifier	relasz		3609169	0					
ANR	3609494	ExpressionStatement	"create_section_from_phdr ( bin , ret , & i , "".got.plt"" , pltgotva , pltgotsz )"	2835:1:86735:86806	3609169	13	True				
ANR	3609495	CallExpression	"create_section_from_phdr ( bin , ret , & i , "".got.plt"" , pltgotva , pltgotsz )"		3609169	0					
ANR	3609496	Callee	create_section_from_phdr		3609169	0					
ANR	3609497	Identifier	create_section_from_phdr		3609169	0					
ANR	3609498	ArgumentList	bin		3609169	1					
ANR	3609499	Argument	bin		3609169	0					
ANR	3609500	Identifier	bin		3609169	0					
ANR	3609501	Argument	ret		3609169	1					
ANR	3609502	Identifier	ret		3609169	0					
ANR	3609503	Argument	& i		3609169	2					
ANR	3609504	UnaryOperationExpression	& i		3609169	0					
ANR	3609505	UnaryOperator	&		3609169	0					
ANR	3609506	Identifier	i		3609169	1					
ANR	3609507	Argument	""".got.plt"""		3609169	3					
ANR	3609508	PrimaryExpression	""".got.plt"""		3609169	0					
ANR	3609509	Argument	pltgotva		3609169	4					
ANR	3609510	Identifier	pltgotva		3609169	0					
ANR	3609511	Argument	pltgotsz		3609169	5					
ANR	3609512	Identifier	pltgotsz		3609169	0					
ANR	3609513	ExpressionStatement	ret [ i ] . last = 1	2836:1:86809:86824	3609169	14	True				
ANR	3609514	AssignmentExpression	ret [ i ] . last = 1		3609169	0		=			
ANR	3609515	MemberAccess	ret [ i ] . last		3609169	0					
ANR	3609516	ArrayIndexing	ret [ i ]		3609169	0					
ANR	3609517	Identifier	ret		3609169	0					
ANR	3609518	Identifier	i		3609169	1					
ANR	3609519	Identifier	last		3609169	1					
ANR	3609520	PrimaryExpression	1		3609169	1					
ANR	3609521	ReturnStatement	return ret ;	2837:1:86827:86837	3609169	15	True				
ANR	3609522	Identifier	ret		3609169	0					
ANR	3609523	ReturnType	static RBinElfSection *		3609169	1					
ANR	3609524	Identifier	get_sections_from_phdr		3609169	2					
ANR	3609525	ParameterList	ELFOBJ * bin		3609169	3					
ANR	3609526	Parameter	ELFOBJ * bin	2787:46:85493:85503	3609169	0	True				
ANR	3609527	ParameterType	ELFOBJ *		3609169	0					
ANR	3609528	Identifier	bin		3609169	1					
ANR	3609529	CFGEntryNode	ENTRY		3609169		True				
ANR	3609530	CFGExitNode	EXIT		3609169		True				
ANR	3609531	Symbol	num_sections		3609169						
ANR	3609532	Symbol	relasz		3609169						
ANR	3609533	Symbol	bin		3609169						
ANR	3609534	Symbol	reldynsz		3609169						
ANR	3609535	Symbol	pltgotva		3609169						
ANR	3609536	Symbol	bin -> phdr		3609169						
ANR	3609537	Symbol	reldyn		3609169						
ANR	3609538	Symbol	calloc		3609169						
ANR	3609539	Symbol	* ret		3609169						
ANR	3609540	Symbol	pltgotsz		3609169						
ANR	3609541	Symbol	* bin		3609169						
ANR	3609542	Symbol	bin -> dyn_buf [ i ] . d_un . d_ptr		3609169						
ANR	3609543	Symbol	bin -> ehdr		3609169						
ANR	3609544	Symbol	relava		3609169						
ANR	3609545	Symbol	* * bin		3609169						
ANR	3609546	Symbol	bin -> dyn_buf [ i ] . d_un . d_val		3609169						
ANR	3609547	Symbol	* bin -> dyn_buf		3609169						
ANR	3609548	Symbol	ret [ i ] . last		3609169						
ANR	3609549	Symbol	ret		3609169						
ANR	3609550	Symbol	bin -> dyn_buf		3609169						
ANR	3609551	Symbol	NULL		3609169						
ANR	3609552	Symbol	bin -> dyn_entries		3609169						
ANR	3609553	Symbol	i		3609169						
ANR	3609554	Symbol	bin -> ehdr . e_phnum		3609169						
ANR	3609555	Symbol	bin -> dyn_buf [ i ] . d_tag		3609169						
ANR	3609556	Symbol	& i		3609169						
ANR	3609557	Symbol	relva		3609169						
ANR	3609558	Symbol	* i		3609169						
ANR	3609559	Symbol	bin -> dyn_buf [ i ] . d_un		3609169						
ANR	3609560	Function	r_bin_elf_get_sections	2840:16:86858:88629							
ANR	3609561	FunctionDef	r_bin_elf_get_sections (ELFOBJ * bin)		3609560	0					
ANR	3609562	CompoundStatement		2840:58:86900:88629	3609560	0					
ANR	3609563	IdentifierDeclStatement	RBinElfSection * ret = NULL ;	2841:1:86903:86929	3609560	0	True				
ANR	3609564	IdentifierDecl	* ret = NULL		3609560	0					
ANR	3609565	IdentifierDeclType	RBinElfSection *		3609560	0					
ANR	3609566	Identifier	ret		3609560	1					
ANR	3609567	AssignmentExpression	* ret = NULL		3609560	2		=			
ANR	3609568	Identifier	NULL		3609560	0					
ANR	3609569	Identifier	NULL		3609560	1					
ANR	3609570	IdentifierDeclStatement	"char unknown_s [ 32 ] , invalid_s [ 32 ] ;"	2842:1:86932:86965	3609560	1	True				
ANR	3609571	IdentifierDecl	unknown_s [ 32 ]		3609560	0					
ANR	3609572	IdentifierDeclType	char [ 32 ]		3609560	0					
ANR	3609573	Identifier	unknown_s		3609560	1					
ANR	3609574	PrimaryExpression	32		3609560	2					
ANR	3609575	IdentifierDecl	invalid_s [ 32 ]		3609560	1					
ANR	3609576	IdentifierDeclType	char [ 32 ]		3609560	0					
ANR	3609577	Identifier	invalid_s		3609560	1					
ANR	3609578	PrimaryExpression	32		3609560	2					
ANR	3609579	IdentifierDeclStatement	"int i , nidx , unknown_c = 0 , invalid_c = 0 ;"	2843:1:86968:87005	3609560	2	True				
ANR	3609580	IdentifierDecl	i		3609560	0					
ANR	3609581	IdentifierDeclType	int		3609560	0					
ANR	3609582	Identifier	i		3609560	1					
ANR	3609583	IdentifierDecl	nidx		3609560	1					
ANR	3609584	IdentifierDeclType	int		3609560	0					
ANR	3609585	Identifier	nidx		3609560	1					
ANR	3609586	IdentifierDecl	unknown_c = 0		3609560	2					
ANR	3609587	IdentifierDeclType	int		3609560	0					
ANR	3609588	Identifier	unknown_c		3609560	1					
ANR	3609589	AssignmentExpression	unknown_c = 0		3609560	2		=			
ANR	3609590	Identifier	unknown_c		3609560	0					
ANR	3609591	PrimaryExpression	0		3609560	1					
ANR	3609592	IdentifierDecl	invalid_c = 0		3609560	3					
ANR	3609593	IdentifierDeclType	int		3609560	0					
ANR	3609594	Identifier	invalid_c		3609560	1					
ANR	3609595	AssignmentExpression	invalid_c = 0		3609560	2		=			
ANR	3609596	Identifier	invalid_c		3609560	0					
ANR	3609597	PrimaryExpression	0		3609560	1					
ANR	3609598	ExpressionStatement	"r_return_val_if_fail ( bin , NULL )"	2845:1:87009:87041	3609560	3	True				
ANR	3609599	CallExpression	"r_return_val_if_fail ( bin , NULL )"		3609560	0					
ANR	3609600	Callee	r_return_val_if_fail		3609560	0					
ANR	3609601	Identifier	r_return_val_if_fail		3609560	0					
ANR	3609602	ArgumentList	bin		3609560	1					
ANR	3609603	Argument	bin		3609560	0					
ANR	3609604	Identifier	bin		3609560	0					
ANR	3609605	Argument	NULL		3609560	1					
ANR	3609606	Identifier	NULL		3609560	0					
ANR	3609607	IfStatement	if ( bin -> g_sections )		3609560	4					
ANR	3609608	Condition	bin -> g_sections	2846:5:87048:87062	3609560	0	True				
ANR	3609609	PtrMemberAccess	bin -> g_sections		3609560	0					
ANR	3609610	Identifier	bin		3609560	0					
ANR	3609611	Identifier	g_sections		3609560	1					
ANR	3609612	CompoundStatement		7:22:164:164	3609560	1					
ANR	3609613	ReturnStatement	return bin -> g_sections ;	2847:2:87069:87091	3609560	0	True				
ANR	3609614	PtrMemberAccess	bin -> g_sections		3609560	0					
ANR	3609615	Identifier	bin		3609560	0					
ANR	3609616	Identifier	g_sections		3609560	1					
ANR	3609617	IfStatement	if ( ! bin -> shdr )		3609560	5					
ANR	3609618	Condition	! bin -> shdr	2849:5:87101:87110	3609560	0	True				
ANR	3609619	UnaryOperationExpression	! bin -> shdr		3609560	0					
ANR	3609620	UnaryOperator	!		3609560	0					
ANR	3609621	PtrMemberAccess	bin -> shdr		3609560	1					
ANR	3609622	Identifier	bin		3609560	0					
ANR	3609623	Identifier	shdr		3609560	1					
ANR	3609624	CompoundStatement		10:17:212:212	3609560	1					
ANR	3609625	ReturnStatement	return get_sections_from_phdr ( bin ) ;	2851:2:87161:87196	3609560	0	True				
ANR	3609626	CallExpression	get_sections_from_phdr ( bin )		3609560	0					
ANR	3609627	Callee	get_sections_from_phdr		3609560	0					
ANR	3609628	Identifier	get_sections_from_phdr		3609560	0					
ANR	3609629	ArgumentList	bin		3609560	1					
ANR	3609630	Argument	bin		3609560	0					
ANR	3609631	Identifier	bin		3609560	0					
ANR	3609632	IfStatement	"if ( ! ( ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) ) ) )"		3609560	6					
ANR	3609633	Condition	"! ( ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) ) )"	2853:5:87206:87271	3609560	0	True				
ANR	3609634	UnaryOperationExpression	"! ( ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) ) )"		3609560	0					
ANR	3609635	UnaryOperator	!		3609560	0					
ANR	3609636	AssignmentExpression	"ret = calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) )"		3609560	1		=			
ANR	3609637	Identifier	ret		3609560	0					
ANR	3609638	CallExpression	"calloc ( ( bin -> ehdr . e_shnum + 1 ) , sizeof ( RBinElfSection ) )"		3609560	1					
ANR	3609639	Callee	calloc		3609560	0					
ANR	3609640	Identifier	calloc		3609560	0					
ANR	3609641	ArgumentList	bin -> ehdr . e_shnum + 1		3609560	1					
ANR	3609642	Argument	bin -> ehdr . e_shnum + 1		3609560	0					
ANR	3609643	AdditiveExpression	bin -> ehdr . e_shnum + 1		3609560	0		+			
ANR	3609644	MemberAccess	bin -> ehdr . e_shnum		3609560	0					
ANR	3609645	PtrMemberAccess	bin -> ehdr		3609560	0					
ANR	3609646	Identifier	bin		3609560	0					
ANR	3609647	Identifier	ehdr		3609560	1					
ANR	3609648	Identifier	e_shnum		3609560	1					
ANR	3609649	PrimaryExpression	1		3609560	1					
ANR	3609650	Argument	sizeof ( RBinElfSection )		3609560	1					
ANR	3609651	SizeofExpression	sizeof ( RBinElfSection )		3609560	0					
ANR	3609652	Sizeof	sizeof		3609560	0					
ANR	3609653	SizeofOperand	RBinElfSection		3609560	1					
ANR	3609654	CompoundStatement		14:73:373:373	3609560	1					
ANR	3609655	ReturnStatement	return NULL ;	2854:2:87278:87289	3609560	0	True				
ANR	3609656	Identifier	NULL		3609560	0					
ANR	3609657	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		3609560	7					
ANR	3609658	ForInit	i = 0 ;	2856:6:87300:87305	3609560	0	True				
ANR	3609659	AssignmentExpression	i = 0		3609560	0		=			
ANR	3609660	Identifier	i		3609560	0					
ANR	3609661	PrimaryExpression	0		3609560	1					
ANR	3609662	Condition	i < bin -> ehdr . e_shnum	2856:13:87307:87327	3609560	1	True				
ANR	3609663	RelationalExpression	i < bin -> ehdr . e_shnum		3609560	0		<			
ANR	3609664	Identifier	i		3609560	0					
ANR	3609665	MemberAccess	bin -> ehdr . e_shnum		3609560	1					
ANR	3609666	PtrMemberAccess	bin -> ehdr		3609560	0					
ANR	3609667	Identifier	bin		3609560	0					
ANR	3609668	Identifier	ehdr		3609560	1					
ANR	3609669	Identifier	e_shnum		3609560	1					
ANR	3609670	PostIncDecOperationExpression	i ++	2856:36:87330:87332	3609560	2	True				
ANR	3609671	Identifier	i		3609560	0					
ANR	3609672	IncDec	++		3609560	1					
ANR	3609673	CompoundStatement		32:2:899:941	3609560	3					
ANR	3609674	ExpressionStatement	ret [ i ] . offset = bin -> shdr [ i ] . sh_offset	2857:2:87339:87377	3609560	0	True				
ANR	3609675	AssignmentExpression	ret [ i ] . offset = bin -> shdr [ i ] . sh_offset		3609560	0		=			
ANR	3609676	MemberAccess	ret [ i ] . offset		3609560	0					
ANR	3609677	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609678	Identifier	ret		3609560	0					
ANR	3609679	Identifier	i		3609560	1					
ANR	3609680	Identifier	offset		3609560	1					
ANR	3609681	MemberAccess	bin -> shdr [ i ] . sh_offset		3609560	1					
ANR	3609682	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609683	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609684	Identifier	bin		3609560	0					
ANR	3609685	Identifier	shdr		3609560	1					
ANR	3609686	Identifier	i		3609560	1					
ANR	3609687	Identifier	sh_offset		3609560	1					
ANR	3609688	ExpressionStatement	ret [ i ] . size = bin -> shdr [ i ] . sh_size	2858:2:87381:87415	3609560	1	True				
ANR	3609689	AssignmentExpression	ret [ i ] . size = bin -> shdr [ i ] . sh_size		3609560	0		=			
ANR	3609690	MemberAccess	ret [ i ] . size		3609560	0					
ANR	3609691	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609692	Identifier	ret		3609560	0					
ANR	3609693	Identifier	i		3609560	1					
ANR	3609694	Identifier	size		3609560	1					
ANR	3609695	MemberAccess	bin -> shdr [ i ] . sh_size		3609560	1					
ANR	3609696	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609697	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609698	Identifier	bin		3609560	0					
ANR	3609699	Identifier	shdr		3609560	1					
ANR	3609700	Identifier	i		3609560	1					
ANR	3609701	Identifier	sh_size		3609560	1					
ANR	3609702	ExpressionStatement	ret [ i ] . align = bin -> shdr [ i ] . sh_addralign	2859:2:87419:87459	3609560	2	True				
ANR	3609703	AssignmentExpression	ret [ i ] . align = bin -> shdr [ i ] . sh_addralign		3609560	0		=			
ANR	3609704	MemberAccess	ret [ i ] . align		3609560	0					
ANR	3609705	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609706	Identifier	ret		3609560	0					
ANR	3609707	Identifier	i		3609560	1					
ANR	3609708	Identifier	align		3609560	1					
ANR	3609709	MemberAccess	bin -> shdr [ i ] . sh_addralign		3609560	1					
ANR	3609710	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609711	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609712	Identifier	bin		3609560	0					
ANR	3609713	Identifier	shdr		3609560	1					
ANR	3609714	Identifier	i		3609560	1					
ANR	3609715	Identifier	sh_addralign		3609560	1					
ANR	3609716	ExpressionStatement	ret [ i ] . flags = bin -> shdr [ i ] . sh_flags	2860:2:87463:87499	3609560	3	True				
ANR	3609717	AssignmentExpression	ret [ i ] . flags = bin -> shdr [ i ] . sh_flags		3609560	0		=			
ANR	3609718	MemberAccess	ret [ i ] . flags		3609560	0					
ANR	3609719	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609720	Identifier	ret		3609560	0					
ANR	3609721	Identifier	i		3609560	1					
ANR	3609722	Identifier	flags		3609560	1					
ANR	3609723	MemberAccess	bin -> shdr [ i ] . sh_flags		3609560	1					
ANR	3609724	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609725	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609726	Identifier	bin		3609560	0					
ANR	3609727	Identifier	shdr		3609560	1					
ANR	3609728	Identifier	i		3609560	1					
ANR	3609729	Identifier	sh_flags		3609560	1					
ANR	3609730	ExpressionStatement	ret [ i ] . link = bin -> shdr [ i ] . sh_link	2861:2:87503:87537	3609560	4	True				
ANR	3609731	AssignmentExpression	ret [ i ] . link = bin -> shdr [ i ] . sh_link		3609560	0		=			
ANR	3609732	MemberAccess	ret [ i ] . link		3609560	0					
ANR	3609733	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609734	Identifier	ret		3609560	0					
ANR	3609735	Identifier	i		3609560	1					
ANR	3609736	Identifier	link		3609560	1					
ANR	3609737	MemberAccess	bin -> shdr [ i ] . sh_link		3609560	1					
ANR	3609738	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609739	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609740	Identifier	bin		3609560	0					
ANR	3609741	Identifier	shdr		3609560	1					
ANR	3609742	Identifier	i		3609560	1					
ANR	3609743	Identifier	sh_link		3609560	1					
ANR	3609744	ExpressionStatement	ret [ i ] . info = bin -> shdr [ i ] . sh_info	2862:2:87541:87575	3609560	5	True				
ANR	3609745	AssignmentExpression	ret [ i ] . info = bin -> shdr [ i ] . sh_info		3609560	0		=			
ANR	3609746	MemberAccess	ret [ i ] . info		3609560	0					
ANR	3609747	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609748	Identifier	ret		3609560	0					
ANR	3609749	Identifier	i		3609560	1					
ANR	3609750	Identifier	info		3609560	1					
ANR	3609751	MemberAccess	bin -> shdr [ i ] . sh_info		3609560	1					
ANR	3609752	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609753	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609754	Identifier	bin		3609560	0					
ANR	3609755	Identifier	shdr		3609560	1					
ANR	3609756	Identifier	i		3609560	1					
ANR	3609757	Identifier	sh_info		3609560	1					
ANR	3609758	ExpressionStatement	ret [ i ] . type = bin -> shdr [ i ] . sh_type	2863:2:87579:87613	3609560	6	True				
ANR	3609759	AssignmentExpression	ret [ i ] . type = bin -> shdr [ i ] . sh_type		3609560	0		=			
ANR	3609760	MemberAccess	ret [ i ] . type		3609560	0					
ANR	3609761	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609762	Identifier	ret		3609560	0					
ANR	3609763	Identifier	i		3609560	1					
ANR	3609764	Identifier	type		3609560	1					
ANR	3609765	MemberAccess	bin -> shdr [ i ] . sh_type		3609560	1					
ANR	3609766	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609767	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609768	Identifier	bin		3609560	0					
ANR	3609769	Identifier	shdr		3609560	1					
ANR	3609770	Identifier	i		3609560	1					
ANR	3609771	Identifier	sh_type		3609560	1					
ANR	3609772	IfStatement	if ( is_bin_etrel ( bin ) )		3609560	7					
ANR	3609773	Condition	is_bin_etrel ( bin )	2864:6:87621:87638	3609560	0	True				
ANR	3609774	CallExpression	is_bin_etrel ( bin )		3609560	0					
ANR	3609775	Callee	is_bin_etrel		3609560	0					
ANR	3609776	Identifier	is_bin_etrel		3609560	0					
ANR	3609777	ArgumentList	bin		3609560	1					
ANR	3609778	Argument	bin		3609560	0					
ANR	3609779	Identifier	bin		3609560	0					
ANR	3609780	CompoundStatement		25:26:740:740	3609560	1					
ANR	3609781	ExpressionStatement	ret [ i ] . rva = bin -> baddr + bin -> shdr [ i ] . sh_offset	2865:3:87646:87694	3609560	0	True				
ANR	3609782	AssignmentExpression	ret [ i ] . rva = bin -> baddr + bin -> shdr [ i ] . sh_offset		3609560	0		=			
ANR	3609783	MemberAccess	ret [ i ] . rva		3609560	0					
ANR	3609784	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609785	Identifier	ret		3609560	0					
ANR	3609786	Identifier	i		3609560	1					
ANR	3609787	Identifier	rva		3609560	1					
ANR	3609788	AdditiveExpression	bin -> baddr + bin -> shdr [ i ] . sh_offset		3609560	1		+			
ANR	3609789	PtrMemberAccess	bin -> baddr		3609560	0					
ANR	3609790	Identifier	bin		3609560	0					
ANR	3609791	Identifier	baddr		3609560	1					
ANR	3609792	MemberAccess	bin -> shdr [ i ] . sh_offset		3609560	1					
ANR	3609793	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609794	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609795	Identifier	bin		3609560	0					
ANR	3609796	Identifier	shdr		3609560	1					
ANR	3609797	Identifier	i		3609560	1					
ANR	3609798	Identifier	sh_offset		3609560	1					
ANR	3609799	ElseStatement	else		3609560	0					
ANR	3609800	CompoundStatement		27:9:804:804	3609560	0					
ANR	3609801	ExpressionStatement	ret [ i ] . rva = bin -> shdr [ i ] . sh_addr	2867:3:87710:87743	3609560	0	True				
ANR	3609802	AssignmentExpression	ret [ i ] . rva = bin -> shdr [ i ] . sh_addr		3609560	0		=			
ANR	3609803	MemberAccess	ret [ i ] . rva		3609560	0					
ANR	3609804	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609805	Identifier	ret		3609560	0					
ANR	3609806	Identifier	i		3609560	1					
ANR	3609807	Identifier	rva		3609560	1					
ANR	3609808	MemberAccess	bin -> shdr [ i ] . sh_addr		3609560	1					
ANR	3609809	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609810	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609811	Identifier	bin		3609560	0					
ANR	3609812	Identifier	shdr		3609560	1					
ANR	3609813	Identifier	i		3609560	1					
ANR	3609814	Identifier	sh_addr		3609560	1					
ANR	3609815	IdentifierDeclStatement	const int SHNAME = ( int ) bin -> shdr [ i ] . sh_name ;	2870:2:87752:87796	3609560	8	True				
ANR	3609816	IdentifierDecl	SHNAME = ( int ) bin -> shdr [ i ] . sh_name		3609560	0					
ANR	3609817	IdentifierDeclType	const int		3609560	0					
ANR	3609818	Identifier	SHNAME		3609560	1					
ANR	3609819	AssignmentExpression	SHNAME = ( int ) bin -> shdr [ i ] . sh_name		3609560	2		=			
ANR	3609820	Identifier	SHNAME		3609560	0					
ANR	3609821	CastExpression	( int ) bin -> shdr [ i ] . sh_name		3609560	1					
ANR	3609822	CastTarget	int		3609560	0					
ANR	3609823	MemberAccess	bin -> shdr [ i ] . sh_name		3609560	1					
ANR	3609824	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609825	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609826	Identifier	bin		3609560	0					
ANR	3609827	Identifier	shdr		3609560	1					
ANR	3609828	Identifier	i		3609560	1					
ANR	3609829	Identifier	sh_name		3609560	1					
ANR	3609830	IdentifierDeclStatement	const int SHSIZE = ( int ) bin -> shstrtab_size ;	2871:2:87800:87842	3609560	9	True				
ANR	3609831	IdentifierDecl	SHSIZE = ( int ) bin -> shstrtab_size		3609560	0					
ANR	3609832	IdentifierDeclType	const int		3609560	0					
ANR	3609833	Identifier	SHSIZE		3609560	1					
ANR	3609834	AssignmentExpression	SHSIZE = ( int ) bin -> shstrtab_size		3609560	2		=			
ANR	3609835	Identifier	SHSIZE		3609560	0					
ANR	3609836	CastExpression	( int ) bin -> shstrtab_size		3609560	1					
ANR	3609837	CastTarget	int		3609560	0					
ANR	3609838	PtrMemberAccess	bin -> shstrtab_size		3609560	1					
ANR	3609839	Identifier	bin		3609560	0					
ANR	3609840	Identifier	shstrtab_size		3609560	1					
ANR	3609841	ExpressionStatement	nidx = SHNAME	2872:2:87846:87859	3609560	10	True				
ANR	3609842	AssignmentExpression	nidx = SHNAME		3609560	0		=			
ANR	3609843	Identifier	nidx		3609560	0					
ANR	3609844	Identifier	SHNAME		3609560	1					
ANR	3609845	IfStatement	if ( nidx < 0 || ! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size )		3609560	11					
ANR	3609846	Condition	nidx < 0 || ! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size	2873:6:87867:87952	3609560	0	True				
ANR	3609847	OrExpression	nidx < 0 || ! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size		3609560	0		||			
ANR	3609848	RelationalExpression	nidx < 0		3609560	0		<			
ANR	3609849	Identifier	nidx		3609560	0					
ANR	3609850	PrimaryExpression	0		3609560	1					
ANR	3609851	OrExpression	! bin -> shstrtab_section || ! bin -> shstrtab_size || nidx > bin -> shstrtab_size		3609560	1		||			
ANR	3609852	UnaryOperationExpression	! bin -> shstrtab_section		3609560	0					
ANR	3609853	UnaryOperator	!		3609560	0					
ANR	3609854	PtrMemberAccess	bin -> shstrtab_section		3609560	1					
ANR	3609855	Identifier	bin		3609560	0					
ANR	3609856	Identifier	shstrtab_section		3609560	1					
ANR	3609857	OrExpression	! bin -> shstrtab_size || nidx > bin -> shstrtab_size		3609560	1		||			
ANR	3609858	UnaryOperationExpression	! bin -> shstrtab_size		3609560	0					
ANR	3609859	UnaryOperator	!		3609560	0					
ANR	3609860	PtrMemberAccess	bin -> shstrtab_size		3609560	1					
ANR	3609861	Identifier	bin		3609560	0					
ANR	3609862	Identifier	shstrtab_size		3609560	1					
ANR	3609863	RelationalExpression	nidx > bin -> shstrtab_size		3609560	1		>			
ANR	3609864	Identifier	nidx		3609560	0					
ANR	3609865	PtrMemberAccess	bin -> shstrtab_size		3609560	1					
ANR	3609866	Identifier	bin		3609560	0					
ANR	3609867	Identifier	shstrtab_size		3609560	1					
ANR	3609868	CompoundStatement		34:94:1054:1054	3609560	1					
ANR	3609869	ExpressionStatement	"snprintf ( invalid_s , sizeof ( invalid_s ) , ""invalid%d"" , invalid_c )"	2874:3:87960:88024	3609560	0	True				
ANR	3609870	CallExpression	"snprintf ( invalid_s , sizeof ( invalid_s ) , ""invalid%d"" , invalid_c )"		3609560	0					
ANR	3609871	Callee	snprintf		3609560	0					
ANR	3609872	Identifier	snprintf		3609560	0					
ANR	3609873	ArgumentList	invalid_s		3609560	1					
ANR	3609874	Argument	invalid_s		3609560	0					
ANR	3609875	Identifier	invalid_s		3609560	0					
ANR	3609876	Argument	sizeof ( invalid_s )		3609560	1					
ANR	3609877	SizeofExpression	sizeof ( invalid_s )		3609560	0					
ANR	3609878	Sizeof	sizeof		3609560	0					
ANR	3609879	SizeofOperand	invalid_s		3609560	1					
ANR	3609880	Argument	"""invalid%d"""		3609560	2					
ANR	3609881	PrimaryExpression	"""invalid%d"""		3609560	0					
ANR	3609882	Argument	invalid_c		3609560	3					
ANR	3609883	Identifier	invalid_c		3609560	0					
ANR	3609884	ExpressionStatement	"strncpy ( ret [ i ] . name , invalid_s , sizeof ( ret [ i ] . name ) - 1 )"	2875:3:88029:88087	3609560	1	True				
ANR	3609885	CallExpression	"strncpy ( ret [ i ] . name , invalid_s , sizeof ( ret [ i ] . name ) - 1 )"		3609560	0					
ANR	3609886	Callee	strncpy		3609560	0					
ANR	3609887	Identifier	strncpy		3609560	0					
ANR	3609888	ArgumentList	ret [ i ] . name		3609560	1					
ANR	3609889	Argument	ret [ i ] . name		3609560	0					
ANR	3609890	MemberAccess	ret [ i ] . name		3609560	0					
ANR	3609891	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609892	Identifier	ret		3609560	0					
ANR	3609893	Identifier	i		3609560	1					
ANR	3609894	Identifier	name		3609560	1					
ANR	3609895	Argument	invalid_s		3609560	1					
ANR	3609896	Identifier	invalid_s		3609560	0					
ANR	3609897	Argument	sizeof ( ret [ i ] . name ) - 1		3609560	2					
ANR	3609898	AdditiveExpression	sizeof ( ret [ i ] . name ) - 1		3609560	0		-			
ANR	3609899	SizeofExpression	sizeof ( ret [ i ] . name )		3609560	0					
ANR	3609900	Sizeof	sizeof		3609560	0					
ANR	3609901	MemberAccess	ret [ i ] . name		3609560	1					
ANR	3609902	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609903	Identifier	ret		3609560	0					
ANR	3609904	Identifier	i		3609560	1					
ANR	3609905	Identifier	name		3609560	1					
ANR	3609906	PrimaryExpression	1		3609560	1					
ANR	3609907	ExpressionStatement	invalid_c ++	2876:3:88092:88103	3609560	2	True				
ANR	3609908	PostIncDecOperationExpression	invalid_c ++		3609560	0					
ANR	3609909	Identifier	invalid_c		3609560	0					
ANR	3609910	IncDec	++		3609560	1					
ANR	3609911	ElseStatement	else		3609560	0					
ANR	3609912	IfStatement	if ( bin -> shstrtab && ( SHNAME > 0 ) && ( SHNAME < SHSIZE ) )		3609560	0					
ANR	3609913	Condition	bin -> shstrtab && ( SHNAME > 0 ) && ( SHNAME < SHSIZE )	2877:13:88118:88167	3609560	0	True				
ANR	3609914	AndExpression	bin -> shstrtab && ( SHNAME > 0 ) && ( SHNAME < SHSIZE )		3609560	0		&&			
ANR	3609915	PtrMemberAccess	bin -> shstrtab		3609560	0					
ANR	3609916	Identifier	bin		3609560	0					
ANR	3609917	Identifier	shstrtab		3609560	1					
ANR	3609918	AndExpression	( SHNAME > 0 ) && ( SHNAME < SHSIZE )		3609560	1		&&			
ANR	3609919	RelationalExpression	SHNAME > 0		3609560	0		>			
ANR	3609920	Identifier	SHNAME		3609560	0					
ANR	3609921	PrimaryExpression	0		3609560	1					
ANR	3609922	RelationalExpression	SHNAME < SHSIZE		3609560	1		<			
ANR	3609923	Identifier	SHNAME		3609560	0					
ANR	3609924	Identifier	SHSIZE		3609560	1					
ANR	3609925	CompoundStatement		38:65:1269:1269	3609560	1					
ANR	3609926	ExpressionStatement	"strncpy ( ret [ i ] . name , & bin -> shstrtab [ SHNAME ] , sizeof ( ret [ i ] . name ) - 1 )"	2878:3:88175:88246	3609560	0	True				
ANR	3609927	CallExpression	"strncpy ( ret [ i ] . name , & bin -> shstrtab [ SHNAME ] , sizeof ( ret [ i ] . name ) - 1 )"		3609560	0					
ANR	3609928	Callee	strncpy		3609560	0					
ANR	3609929	Identifier	strncpy		3609560	0					
ANR	3609930	ArgumentList	ret [ i ] . name		3609560	1					
ANR	3609931	Argument	ret [ i ] . name		3609560	0					
ANR	3609932	MemberAccess	ret [ i ] . name		3609560	0					
ANR	3609933	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609934	Identifier	ret		3609560	0					
ANR	3609935	Identifier	i		3609560	1					
ANR	3609936	Identifier	name		3609560	1					
ANR	3609937	Argument	& bin -> shstrtab [ SHNAME ]		3609560	1					
ANR	3609938	UnaryOperationExpression	& bin -> shstrtab [ SHNAME ]		3609560	0					
ANR	3609939	UnaryOperator	&		3609560	0					
ANR	3609940	ArrayIndexing	bin -> shstrtab [ SHNAME ]		3609560	1					
ANR	3609941	PtrMemberAccess	bin -> shstrtab		3609560	0					
ANR	3609942	Identifier	bin		3609560	0					
ANR	3609943	Identifier	shstrtab		3609560	1					
ANR	3609944	Identifier	SHNAME		3609560	1					
ANR	3609945	Argument	sizeof ( ret [ i ] . name ) - 1		3609560	2					
ANR	3609946	AdditiveExpression	sizeof ( ret [ i ] . name ) - 1		3609560	0		-			
ANR	3609947	SizeofExpression	sizeof ( ret [ i ] . name )		3609560	0					
ANR	3609948	Sizeof	sizeof		3609560	0					
ANR	3609949	MemberAccess	ret [ i ] . name		3609560	1					
ANR	3609950	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609951	Identifier	ret		3609560	0					
ANR	3609952	Identifier	i		3609560	1					
ANR	3609953	Identifier	name		3609560	1					
ANR	3609954	PrimaryExpression	1		3609560	1					
ANR	3609955	ElseStatement	else		3609560	0					
ANR	3609956	IfStatement	if ( bin -> shdr [ i ] . sh_type == SHT_NULL )		3609560	0					
ANR	3609957	Condition	bin -> shdr [ i ] . sh_type == SHT_NULL	2879:13:88261:88292	3609560	0	True				
ANR	3609958	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_NULL		3609560	0		==			
ANR	3609959	MemberAccess	bin -> shdr [ i ] . sh_type		3609560	0					
ANR	3609960	ArrayIndexing	bin -> shdr [ i ]		3609560	0					
ANR	3609961	PtrMemberAccess	bin -> shdr		3609560	0					
ANR	3609962	Identifier	bin		3609560	0					
ANR	3609963	Identifier	shdr		3609560	1					
ANR	3609964	Identifier	i		3609560	1					
ANR	3609965	Identifier	sh_type		3609560	1					
ANR	3609966	Identifier	SHT_NULL		3609560	1					
ANR	3609967	CompoundStatement		40:47:1394:1394	3609560	1					
ANR	3609968	ExpressionStatement	ret [ i ] . name [ 0 ] = '\\0'	2881:3:88345:88366	3609560	0	True				
ANR	3609969	AssignmentExpression	ret [ i ] . name [ 0 ] = '\\0'		3609560	0		=			
ANR	3609970	ArrayIndexing	ret [ i ] . name [ 0 ]		3609560	0					
ANR	3609971	MemberAccess	ret [ i ] . name		3609560	0					
ANR	3609972	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3609973	Identifier	ret		3609560	0					
ANR	3609974	Identifier	i		3609560	1					
ANR	3609975	Identifier	name		3609560	1					
ANR	3609976	PrimaryExpression	0		3609560	1					
ANR	3609977	PrimaryExpression	'\\0'		3609560	1					
ANR	3609978	ElseStatement	else		3609560	0					
ANR	3609979	CompoundStatement		43:9:1476:1476	3609560	0					
ANR	3609980	ExpressionStatement	"snprintf ( unknown_s , sizeof ( unknown_s ) , ""unknown%d"" , unknown_c )"	2883:3:88382:88446	3609560	0	True				
ANR	3609981	CallExpression	"snprintf ( unknown_s , sizeof ( unknown_s ) , ""unknown%d"" , unknown_c )"		3609560	0					
ANR	3609982	Callee	snprintf		3609560	0					
ANR	3609983	Identifier	snprintf		3609560	0					
ANR	3609984	ArgumentList	unknown_s		3609560	1					
ANR	3609985	Argument	unknown_s		3609560	0					
ANR	3609986	Identifier	unknown_s		3609560	0					
ANR	3609987	Argument	sizeof ( unknown_s )		3609560	1					
ANR	3609988	SizeofExpression	sizeof ( unknown_s )		3609560	0					
ANR	3609989	Sizeof	sizeof		3609560	0					
ANR	3609990	SizeofOperand	unknown_s		3609560	1					
ANR	3609991	Argument	"""unknown%d"""		3609560	2					
ANR	3609992	PrimaryExpression	"""unknown%d"""		3609560	0					
ANR	3609993	Argument	unknown_c		3609560	3					
ANR	3609994	Identifier	unknown_c		3609560	0					
ANR	3609995	ExpressionStatement	"strncpy ( ret [ i ] . name , unknown_s , sizeof ( ret [ i ] . name ) - 1 )"	2884:3:88451:88509	3609560	1	True				
ANR	3609996	CallExpression	"strncpy ( ret [ i ] . name , unknown_s , sizeof ( ret [ i ] . name ) - 1 )"		3609560	0					
ANR	3609997	Callee	strncpy		3609560	0					
ANR	3609998	Identifier	strncpy		3609560	0					
ANR	3609999	ArgumentList	ret [ i ] . name		3609560	1					
ANR	3610000	Argument	ret [ i ] . name		3609560	0					
ANR	3610001	MemberAccess	ret [ i ] . name		3609560	0					
ANR	3610002	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3610003	Identifier	ret		3609560	0					
ANR	3610004	Identifier	i		3609560	1					
ANR	3610005	Identifier	name		3609560	1					
ANR	3610006	Argument	unknown_s		3609560	1					
ANR	3610007	Identifier	unknown_s		3609560	0					
ANR	3610008	Argument	sizeof ( ret [ i ] . name ) - 1		3609560	2					
ANR	3610009	AdditiveExpression	sizeof ( ret [ i ] . name ) - 1		3609560	0		-			
ANR	3610010	SizeofExpression	sizeof ( ret [ i ] . name )		3609560	0					
ANR	3610011	Sizeof	sizeof		3609560	0					
ANR	3610012	MemberAccess	ret [ i ] . name		3609560	1					
ANR	3610013	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3610014	Identifier	ret		3609560	0					
ANR	3610015	Identifier	i		3609560	1					
ANR	3610016	Identifier	name		3609560	1					
ANR	3610017	PrimaryExpression	1		3609560	1					
ANR	3610018	ExpressionStatement	unknown_c ++	2885:3:88514:88525	3609560	2	True				
ANR	3610019	PostIncDecOperationExpression	unknown_c ++		3609560	0					
ANR	3610020	Identifier	unknown_c		3609560	0					
ANR	3610021	IncDec	++		3609560	1					
ANR	3610022	ExpressionStatement	ret [ i ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'	2887:2:88533:88574	3609560	12	True				
ANR	3610023	AssignmentExpression	ret [ i ] . name [ ELF_STRING_LENGTH - 1 ] = '\\0'		3609560	0		=			
ANR	3610024	ArrayIndexing	ret [ i ] . name [ ELF_STRING_LENGTH - 1 ]		3609560	0					
ANR	3610025	MemberAccess	ret [ i ] . name		3609560	0					
ANR	3610026	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3610027	Identifier	ret		3609560	0					
ANR	3610028	Identifier	i		3609560	1					
ANR	3610029	Identifier	name		3609560	1					
ANR	3610030	AdditiveExpression	ELF_STRING_LENGTH - 1		3609560	1		-			
ANR	3610031	Identifier	ELF_STRING_LENGTH		3609560	0					
ANR	3610032	PrimaryExpression	1		3609560	1					
ANR	3610033	PrimaryExpression	'\\0'		3609560	1					
ANR	3610034	ExpressionStatement	ret [ i ] . last = 0	2888:2:88578:88593	3609560	13	True				
ANR	3610035	AssignmentExpression	ret [ i ] . last = 0		3609560	0		=			
ANR	3610036	MemberAccess	ret [ i ] . last		3609560	0					
ANR	3610037	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3610038	Identifier	ret		3609560	0					
ANR	3610039	Identifier	i		3609560	1					
ANR	3610040	Identifier	last		3609560	1					
ANR	3610041	PrimaryExpression	0		3609560	1					
ANR	3610042	ExpressionStatement	ret [ i ] . last = 1	2890:1:88599:88614	3609560	8	True				
ANR	3610043	AssignmentExpression	ret [ i ] . last = 1		3609560	0		=			
ANR	3610044	MemberAccess	ret [ i ] . last		3609560	0					
ANR	3610045	ArrayIndexing	ret [ i ]		3609560	0					
ANR	3610046	Identifier	ret		3609560	0					
ANR	3610047	Identifier	i		3609560	1					
ANR	3610048	Identifier	last		3609560	1					
ANR	3610049	PrimaryExpression	1		3609560	1					
ANR	3610050	ReturnStatement	return ret ;	2891:1:88617:88627	3609560	9	True				
ANR	3610051	Identifier	ret		3609560	0					
ANR	3610052	ReturnType	Elf_		3609560	1					
ANR	3610053	Identifier	( r_bin_elf_get_sections )		3609560	2					
ANR	3610054	Identifier	r_bin_elf_get_sections		3609560	3					
ANR	3610055	ParameterList	ELFOBJ * bin		3609560	4					
ANR	3610056	Parameter	ELFOBJ * bin	2840:45:86887:86897	3609560	0	True				
ANR	3610057	ParameterType	ELFOBJ *		3609560	0					
ANR	3610058	Identifier	bin		3609560	1					
ANR	3610059	CFGEntryNode	ENTRY		3609560		True				
ANR	3610060	CFGExitNode	EXIT		3609560		True				
ANR	3610061	Symbol	invalid_c		3609560						
ANR	3610062	Symbol	bin		3609560						
ANR	3610063	Symbol	* bin -> shdr		3609560						
ANR	3610064	Symbol	ret [ i ] . info		3609560						
ANR	3610065	Symbol	bin -> g_sections		3609560						
ANR	3610066	Symbol	bin -> ehdr		3609560						
ANR	3610067	Symbol	ret [ i ] . last		3609560						
ANR	3610068	Symbol	ret [ i ] . offset		3609560						
ANR	3610069	Symbol	ret		3609560						
ANR	3610070	Symbol	* * i		3609560						
ANR	3610071	Symbol	NULL		3609560						
ANR	3610072	Symbol	bin -> shdr [ i ] . sh_size		3609560						
ANR	3610073	Symbol	bin -> shdr [ i ] . sh_name		3609560						
ANR	3610074	Symbol	ELF_STRING_LENGTH		3609560						
ANR	3610075	Symbol	bin -> shdr [ i ] . sh_addr		3609560						
ANR	3610076	Symbol	invalid_s		3609560						
ANR	3610077	Symbol	bin -> shdr [ i ] . sh_offset		3609560						
ANR	3610078	Symbol	ret [ i ] . flags		3609560						
ANR	3610079	Symbol	ret [ i ] . type		3609560						
ANR	3610080	Symbol	nidx		3609560						
ANR	3610081	Symbol	ret [ i ] . rva		3609560						
ANR	3610082	Symbol	bin -> shdr [ i ] . sh_link		3609560						
ANR	3610083	Symbol	bin -> ehdr . e_shnum		3609560						
ANR	3610084	Symbol	bin -> shstrtab_size		3609560						
ANR	3610085	Symbol	bin -> shstrtab		3609560						
ANR	3610086	Symbol	ret [ i ] . align		3609560						
ANR	3610087	Symbol	is_bin_etrel		3609560						
ANR	3610088	Symbol	calloc		3609560						
ANR	3610089	Symbol	* ret		3609560						
ANR	3610090	Symbol	get_sections_from_phdr		3609560						
ANR	3610091	Symbol	* bin		3609560						
ANR	3610092	Symbol	bin -> shstrtab_section		3609560						
ANR	3610093	Symbol	bin -> shdr [ i ] . sh_flags		3609560						
ANR	3610094	Symbol	* * bin		3609560						
ANR	3610095	Symbol	SHNAME		3609560						
ANR	3610096	Symbol	SHT_NULL		3609560						
ANR	3610097	Symbol	ret [ i ] . name		3609560						
ANR	3610098	Symbol	unknown_c		3609560						
ANR	3610099	Symbol	i		3609560						
ANR	3610100	Symbol	SHSIZE		3609560						
ANR	3610101	Symbol	ret [ i ] . size		3609560						
ANR	3610102	Symbol	bin -> baddr		3609560						
ANR	3610103	Symbol	bin -> shdr		3609560						
ANR	3610104	Symbol	bin -> shdr [ i ] . sh_info		3609560						
ANR	3610105	Symbol	bin -> shdr [ i ] . sh_addralign		3609560						
ANR	3610106	Symbol	ret [ i ] . link		3609560						
ANR	3610107	Symbol	* i		3609560						
ANR	3610108	Symbol	* ELF_STRING_LENGTH		3609560						
ANR	3610109	Symbol	unknown_s		3609560						
ANR	3610110	Symbol	* * ret		3609560						
ANR	3610111	Symbol	* ret [ i ] . name		3609560						
ANR	3610112	Symbol	bin -> shdr [ i ] . sh_type		3609560						
ANR	3610113	Function	get_symbols_from_phdr	2960:0:90756:96253							
ANR	3610114	FunctionDef	"get_symbols_from_phdr (ELFOBJ * bin , int type)"		3610113	0					
ANR	3610115	CompoundStatement		2960:67:90823:96253	3610113	0					
ANR	3610116	ExpressionStatement	Elf_ ( Sym ) * sym = NULL	2961:1:90826:90847	3610113	0	True				
ANR	3610117	AssignmentExpression	Elf_ ( Sym ) * sym = NULL		3610113	0		=			
ANR	3610118	MultiplicativeExpression	Elf_ ( Sym ) * sym		3610113	0		*			
ANR	3610119	CallExpression	Elf_ ( Sym )		3610113	0					
ANR	3610120	Callee	Elf_		3610113	0					
ANR	3610121	Identifier	Elf_		3610113	0					
ANR	3610122	ArgumentList	Sym		3610113	1					
ANR	3610123	Argument	Sym		3610113	0					
ANR	3610124	Identifier	Sym		3610113	0					
ANR	3610125	Identifier	sym		3610113	1					
ANR	3610126	Identifier	NULL		3610113	1					
ANR	3610127	Statement	Elf_	2962:1:90850:90853	3610113	1	True				
ANR	3610128	ExpressionStatement	( Addr ) addr_sym_table = 0	2962:5:90854:90879	3610113	2	True				
ANR	3610129	AssignmentExpression	( Addr ) addr_sym_table = 0		3610113	0		=			
ANR	3610130	CastExpression	( Addr ) addr_sym_table		3610113	0					
ANR	3610131	CastTarget	Addr		3610113	0					
ANR	3610132	Identifier	addr_sym_table		3610113	1					
ANR	3610133	PrimaryExpression	0		3610113	1					
ANR	3610134	IdentifierDeclStatement	ut8 s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 } ;	2963:1:90882:90913	3610113	3	True				
ANR	3610135	IdentifierDecl	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		3610113	0					
ANR	3610136	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Sym ) ) ]		3610113	0					
ANR	3610137	Identifier	s		3610113	1					
ANR	3610138	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3610113	2					
ANR	3610139	Sizeof	sizeof		3610113	0					
ANR	3610140	CallExpression	Elf_ ( Sym )		3610113	1					
ANR	3610141	Callee	Elf_		3610113	0					
ANR	3610142	Identifier	Elf_		3610113	0					
ANR	3610143	ArgumentList	Sym		3610113	1					
ANR	3610144	Argument	Sym		3610113	0					
ANR	3610145	Identifier	Sym		3610113	0					
ANR	3610146	AssignmentExpression	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		3610113	3		=			
ANR	3610147	Identifier	s		3610113	0					
ANR	3610148	InitializerList	0		3610113	1					
ANR	3610149	PrimaryExpression	0		3610113	0					
ANR	3610150	IdentifierDeclStatement	RBinElfSymbol * ret = NULL ;	2964:1:90916:90941	3610113	4	True				
ANR	3610151	IdentifierDecl	* ret = NULL		3610113	0					
ANR	3610152	IdentifierDeclType	RBinElfSymbol *		3610113	0					
ANR	3610153	Identifier	ret		3610113	1					
ANR	3610154	AssignmentExpression	* ret = NULL		3610113	2		=			
ANR	3610155	Identifier	NULL		3610113	0					
ANR	3610156	Identifier	NULL		3610113	1					
ANR	3610157	IdentifierDeclStatement	"int i , j , r , tsize , nsym , ret_ctr ;"	2965:1:90944:90977	3610113	5	True				
ANR	3610158	IdentifierDecl	i		3610113	0					
ANR	3610159	IdentifierDeclType	int		3610113	0					
ANR	3610160	Identifier	i		3610113	1					
ANR	3610161	IdentifierDecl	j		3610113	1					
ANR	3610162	IdentifierDeclType	int		3610113	0					
ANR	3610163	Identifier	j		3610113	1					
ANR	3610164	IdentifierDecl	r		3610113	2					
ANR	3610165	IdentifierDeclType	int		3610113	0					
ANR	3610166	Identifier	r		3610113	1					
ANR	3610167	IdentifierDecl	tsize		3610113	3					
ANR	3610168	IdentifierDeclType	int		3610113	0					
ANR	3610169	Identifier	tsize		3610113	1					
ANR	3610170	IdentifierDecl	nsym		3610113	4					
ANR	3610171	IdentifierDeclType	int		3610113	0					
ANR	3610172	Identifier	nsym		3610113	1					
ANR	3610173	IdentifierDecl	ret_ctr		3610113	5					
ANR	3610174	IdentifierDeclType	int		3610113	0					
ANR	3610175	Identifier	ret_ctr		3610113	1					
ANR	3610176	IdentifierDeclStatement	"ut64 toffset = 0 , tmp_offset ;"	2966:1:90980:91008	3610113	6	True				
ANR	3610177	IdentifierDecl	toffset = 0		3610113	0					
ANR	3610178	IdentifierDeclType	ut64		3610113	0					
ANR	3610179	Identifier	toffset		3610113	1					
ANR	3610180	AssignmentExpression	toffset = 0		3610113	2		=			
ANR	3610181	Identifier	toffset		3610113	0					
ANR	3610182	PrimaryExpression	0		3610113	1					
ANR	3610183	IdentifierDecl	tmp_offset		3610113	1					
ANR	3610184	IdentifierDeclType	ut64		3610113	0					
ANR	3610185	Identifier	tmp_offset		3610113	1					
ANR	3610186	IdentifierDeclStatement	"ut32 size , sym_size = 0 ;"	2967:1:91011:91034	3610113	7	True				
ANR	3610187	IdentifierDecl	size		3610113	0					
ANR	3610188	IdentifierDeclType	ut32		3610113	0					
ANR	3610189	Identifier	size		3610113	1					
ANR	3610190	IdentifierDecl	sym_size = 0		3610113	1					
ANR	3610191	IdentifierDeclType	ut32		3610113	0					
ANR	3610192	Identifier	sym_size		3610113	1					
ANR	3610193	AssignmentExpression	sym_size = 0		3610113	2		=			
ANR	3610194	Identifier	sym_size		3610113	0					
ANR	3610195	PrimaryExpression	0		3610113	1					
ANR	3610196	IfStatement	if ( ! bin || ! bin -> phdr || ! bin -> ehdr . e_phnum )		3610113	8					
ANR	3610197	Condition	! bin || ! bin -> phdr || ! bin -> ehdr . e_phnum	2969:5:91042:91081	3610113	0	True				
ANR	3610198	OrExpression	! bin || ! bin -> phdr || ! bin -> ehdr . e_phnum		3610113	0		||			
ANR	3610199	UnaryOperationExpression	! bin		3610113	0					
ANR	3610200	UnaryOperator	!		3610113	0					
ANR	3610201	Identifier	bin		3610113	1					
ANR	3610202	OrExpression	! bin -> phdr || ! bin -> ehdr . e_phnum		3610113	1		||			
ANR	3610203	UnaryOperationExpression	! bin -> phdr		3610113	0					
ANR	3610204	UnaryOperator	!		3610113	0					
ANR	3610205	PtrMemberAccess	bin -> phdr		3610113	1					
ANR	3610206	Identifier	bin		3610113	0					
ANR	3610207	Identifier	phdr		3610113	1					
ANR	3610208	UnaryOperationExpression	! bin -> ehdr . e_phnum		3610113	1					
ANR	3610209	UnaryOperator	!		3610113	0					
ANR	3610210	MemberAccess	bin -> ehdr . e_phnum		3610113	1					
ANR	3610211	PtrMemberAccess	bin -> ehdr		3610113	0					
ANR	3610212	Identifier	bin		3610113	0					
ANR	3610213	Identifier	ehdr		3610113	1					
ANR	3610214	Identifier	e_phnum		3610113	1					
ANR	3610215	CompoundStatement		10:47:260:260	3610113	1					
ANR	3610216	ReturnStatement	return NULL ;	2970:2:91088:91099	3610113	0	True				
ANR	3610217	Identifier	NULL		3610113	0					
ANR	3610218	ForStatement	for ( j = 0 ; j < bin -> dyn_entries ; j ++ )		3610113	9					
ANR	3610219	ForInit	j = 0 ;	2972:6:91110:91115	3610113	0	True				
ANR	3610220	AssignmentExpression	j = 0		3610113	0		=			
ANR	3610221	Identifier	j		3610113	0					
ANR	3610222	PrimaryExpression	0		3610113	1					
ANR	3610223	Condition	j < bin -> dyn_entries	2972:13:91117:91136	3610113	1	True				
ANR	3610224	RelationalExpression	j < bin -> dyn_entries		3610113	0		<			
ANR	3610225	Identifier	j		3610113	0					
ANR	3610226	PtrMemberAccess	bin -> dyn_entries		3610113	1					
ANR	3610227	Identifier	bin		3610113	0					
ANR	3610228	Identifier	dyn_entries		3610113	1					
ANR	3610229	PostIncDecOperationExpression	j ++	2972:35:91139:91141	3610113	2	True				
ANR	3610230	Identifier	j		3610113	0					
ANR	3610231	IncDec	++		3610113	1					
ANR	3610232	CompoundStatement		13:40:320:320	3610113	3					
ANR	3610233	SwitchStatement	switch ( bin -> dyn_buf [ j ] . d_tag )		3610113	0					
ANR	3610234	Condition	bin -> dyn_buf [ j ] . d_tag	2973:10:91156:91176	3610113	0	True				
ANR	3610235	MemberAccess	bin -> dyn_buf [ j ] . d_tag		3610113	0					
ANR	3610236	ArrayIndexing	bin -> dyn_buf [ j ]		3610113	0					
ANR	3610237	PtrMemberAccess	bin -> dyn_buf		3610113	0					
ANR	3610238	Identifier	bin		3610113	0					
ANR	3610239	Identifier	dyn_buf		3610113	1					
ANR	3610240	Identifier	j		3610113	1					
ANR	3610241	Identifier	d_tag		3610113	1					
ANR	3610242	CompoundStatement		14:33:355:355	3610113	1					
ANR	3610243	Statement	case	2974:2:91183:91186	3610113	0	True				
ANR	3610244	Statement	(	2974:7:91188:91188	3610113	1	True				
ANR	3610245	Statement	DT_SYMTAB	2974:8:91189:91197	3610113	2	True				
ANR	3610246	Statement	)	2974:17:91198:91198	3610113	3	True				
ANR	3610247	Statement	:	2974:18:91199:91199	3610113	4	True				
ANR	3610248	ExpressionStatement	"addr_sym_table = Elf_ ( r_bin_elf_v2p ) ( bin , bin -> dyn_buf [ j ] . d_un . d_ptr )"	2975:3:91204:91274	3610113	5	True				
ANR	3610249	AssignmentExpression	"addr_sym_table = Elf_ ( r_bin_elf_v2p ) ( bin , bin -> dyn_buf [ j ] . d_un . d_ptr )"		3610113	0		=			
ANR	3610250	Identifier	addr_sym_table		3610113	0					
ANR	3610251	CallExpression	"Elf_ ( r_bin_elf_v2p ) ( bin , bin -> dyn_buf [ j ] . d_un . d_ptr )"		3610113	1					
ANR	3610252	Callee	Elf_ ( r_bin_elf_v2p )		3610113	0					
ANR	3610253	CallExpression	Elf_ ( r_bin_elf_v2p )		3610113	0					
ANR	3610254	Callee	Elf_		3610113	0					
ANR	3610255	Identifier	Elf_		3610113	0					
ANR	3610256	ArgumentList	r_bin_elf_v2p		3610113	1					
ANR	3610257	Argument	r_bin_elf_v2p		3610113	0					
ANR	3610258	Identifier	r_bin_elf_v2p		3610113	0					
ANR	3610259	ArgumentList	bin		3610113	1					
ANR	3610260	Argument	bin		3610113	0					
ANR	3610261	Identifier	bin		3610113	0					
ANR	3610262	Argument	bin -> dyn_buf [ j ] . d_un . d_ptr		3610113	1					
ANR	3610263	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_ptr		3610113	0					
ANR	3610264	MemberAccess	bin -> dyn_buf [ j ] . d_un		3610113	0					
ANR	3610265	ArrayIndexing	bin -> dyn_buf [ j ]		3610113	0					
ANR	3610266	PtrMemberAccess	bin -> dyn_buf		3610113	0					
ANR	3610267	Identifier	bin		3610113	0					
ANR	3610268	Identifier	dyn_buf		3610113	1					
ANR	3610269	Identifier	j		3610113	1					
ANR	3610270	Identifier	d_un		3610113	1					
ANR	3610271	Identifier	d_ptr		3610113	1					
ANR	3610272	BreakStatement	break ;	2976:3:91279:91284	3610113	6	True				
ANR	3610273	Statement	case	2977:2:91288:91291	3610113	7	True				
ANR	3610274	Statement	(	2977:7:91293:91293	3610113	8	True				
ANR	3610275	Statement	DT_SYMENT	2977:8:91294:91302	3610113	9	True				
ANR	3610276	Statement	)	2977:17:91303:91303	3610113	10	True				
ANR	3610277	Statement	:	2977:18:91304:91304	3610113	11	True				
ANR	3610278	ExpressionStatement	sym_size = bin -> dyn_buf [ j ] . d_un . d_val	2978:3:91309:91346	3610113	12	True				
ANR	3610279	AssignmentExpression	sym_size = bin -> dyn_buf [ j ] . d_un . d_val		3610113	0		=			
ANR	3610280	Identifier	sym_size		3610113	0					
ANR	3610281	MemberAccess	bin -> dyn_buf [ j ] . d_un . d_val		3610113	1					
ANR	3610282	MemberAccess	bin -> dyn_buf [ j ] . d_un		3610113	0					
ANR	3610283	ArrayIndexing	bin -> dyn_buf [ j ]		3610113	0					
ANR	3610284	PtrMemberAccess	bin -> dyn_buf		3610113	0					
ANR	3610285	Identifier	bin		3610113	0					
ANR	3610286	Identifier	dyn_buf		3610113	1					
ANR	3610287	Identifier	j		3610113	1					
ANR	3610288	Identifier	d_un		3610113	1					
ANR	3610289	Identifier	d_val		3610113	1					
ANR	3610290	BreakStatement	break ;	2979:3:91351:91356	3610113	13	True				
ANR	3610291	Label	default :	2980:2:91360:91367	3610113	14	True				
ANR	3610292	Identifier	default		3610113	0					
ANR	3610293	BreakStatement	break ;	2981:3:91372:91377	3610113	15	True				
ANR	3610294	IfStatement	if ( ! addr_sym_table )		3610113	10					
ANR	3610295	Condition	! addr_sym_table	2984:5:91391:91405	3610113	0	True				
ANR	3610296	UnaryOperationExpression	! addr_sym_table		3610113	0					
ANR	3610297	UnaryOperator	!		3610113	0					
ANR	3610298	Identifier	addr_sym_table		3610113	1					
ANR	3610299	CompoundStatement		25:22:584:584	3610113	1					
ANR	3610300	ReturnStatement	return NULL ;	2985:2:91412:91423	3610113	0	True				
ANR	3610301	Identifier	NULL		3610113	0					
ANR	3610302	IfStatement	if ( ! sym_size )		3610113	11					
ANR	3610303	Condition	! sym_size	2987:5:91433:91441	3610113	0	True				
ANR	3610304	UnaryOperationExpression	! sym_size		3610113	0					
ANR	3610305	UnaryOperator	!		3610113	0					
ANR	3610306	Identifier	sym_size		3610113	1					
ANR	3610307	CompoundStatement		28:16:620:620	3610113	1					
ANR	3610308	ReturnStatement	return NULL ;	2988:2:91448:91459	3610113	0	True				
ANR	3610309	Identifier	NULL		3610113	0					
ANR	3610310	ExpressionStatement	nsym = ( bin -> size - addr_sym_table ) / sym_size	2991:1:91556:91602	3610113	12	True				
ANR	3610311	AssignmentExpression	nsym = ( bin -> size - addr_sym_table ) / sym_size		3610113	0		=			
ANR	3610312	Identifier	nsym		3610113	0					
ANR	3610313	MultiplicativeExpression	( bin -> size - addr_sym_table ) / sym_size		3610113	1		/			
ANR	3610314	AdditiveExpression	bin -> size - addr_sym_table		3610113	0		-			
ANR	3610315	PtrMemberAccess	bin -> size		3610113	0					
ANR	3610316	Identifier	bin		3610113	0					
ANR	3610317	Identifier	size		3610113	1					
ANR	3610318	Identifier	addr_sym_table		3610113	1					
ANR	3610319	Identifier	sym_size		3610113	1					
ANR	3610320	IfStatement	"if ( ! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) ) )"		3610113	13					
ANR	3610321	Condition	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"	2992:5:91609:91652	3610113	0	True				
ANR	3610322	UnaryOperationExpression	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		3610113	0					
ANR	3610323	UnaryOperator	!		3610113	0					
ANR	3610324	CallExpression	"UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		3610113	1					
ANR	3610325	Callee	UT32_MUL		3610113	0					
ANR	3610326	Identifier	UT32_MUL		3610113	0					
ANR	3610327	ArgumentList	& size		3610113	1					
ANR	3610328	Argument	& size		3610113	0					
ANR	3610329	UnaryOperationExpression	& size		3610113	0					
ANR	3610330	UnaryOperator	&		3610113	0					
ANR	3610331	Identifier	size		3610113	1					
ANR	3610332	Argument	nsym		3610113	1					
ANR	3610333	Identifier	nsym		3610113	0					
ANR	3610334	Argument	sizeof ( Elf_ ( Sym ) )		3610113	2					
ANR	3610335	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3610113	0					
ANR	3610336	Sizeof	sizeof		3610113	0					
ANR	3610337	CallExpression	Elf_ ( Sym )		3610113	1					
ANR	3610338	Callee	Elf_		3610113	0					
ANR	3610339	Identifier	Elf_		3610113	0					
ANR	3610340	ArgumentList	Sym		3610113	1					
ANR	3610341	Argument	Sym		3610113	0					
ANR	3610342	Identifier	Sym		3610113	0					
ANR	3610343	CompoundStatement		33:51:831:831	3610113	1					
ANR	3610344	GotoStatement	goto beach ;	2993:2:91659:91669	3610113	0	True				
ANR	3610345	Identifier	beach		3610113	0					
ANR	3610346	IfStatement	if ( size < 1 )		3610113	14					
ANR	3610347	Condition	size < 1	2995:5:91679:91686	3610113	0	True				
ANR	3610348	RelationalExpression	size < 1		3610113	0		<			
ANR	3610349	Identifier	size		3610113	0					
ANR	3610350	PrimaryExpression	1		3610113	1					
ANR	3610351	CompoundStatement		36:15:865:865	3610113	1					
ANR	3610352	GotoStatement	goto beach ;	2996:2:91693:91703	3610113	0	True				
ANR	3610353	Identifier	beach		3610113	0					
ANR	3610354	IfStatement	if ( addr_sym_table > bin -> size || addr_sym_table + size > bin -> size )		3610113	15					
ANR	3610355	Condition	addr_sym_table > bin -> size || addr_sym_table + size > bin -> size	2998:5:91713:91775	3610113	0	True				
ANR	3610356	OrExpression	addr_sym_table > bin -> size || addr_sym_table + size > bin -> size		3610113	0		||			
ANR	3610357	RelationalExpression	addr_sym_table > bin -> size		3610113	0		>			
ANR	3610358	Identifier	addr_sym_table		3610113	0					
ANR	3610359	PtrMemberAccess	bin -> size		3610113	1					
ANR	3610360	Identifier	bin		3610113	0					
ANR	3610361	Identifier	size		3610113	1					
ANR	3610362	RelationalExpression	addr_sym_table + size > bin -> size		3610113	1		>			
ANR	3610363	AdditiveExpression	addr_sym_table + size		3610113	0		+			
ANR	3610364	Identifier	addr_sym_table		3610113	0					
ANR	3610365	Identifier	size		3610113	1					
ANR	3610366	PtrMemberAccess	bin -> size		3610113	1					
ANR	3610367	Identifier	bin		3610113	0					
ANR	3610368	Identifier	size		3610113	1					
ANR	3610369	CompoundStatement		39:70:954:954	3610113	1					
ANR	3610370	GotoStatement	goto beach ;	2999:2:91782:91792	3610113	0	True				
ANR	3610371	Identifier	beach		3610113	0					
ANR	3610372	IfStatement	if ( nsym < 1 )		3610113	16					
ANR	3610373	Condition	nsym < 1	3001:5:91802:91809	3610113	0	True				
ANR	3610374	RelationalExpression	nsym < 1		3610113	0		<			
ANR	3610375	Identifier	nsym		3610113	0					
ANR	3610376	PrimaryExpression	1		3610113	1					
ANR	3610377	CompoundStatement		42:15:988:988	3610113	1					
ANR	3610378	ReturnStatement	return NULL ;	3002:2:91816:91827	3610113	0	True				
ANR	3610379	Identifier	NULL		3610113	0					
ANR	3610380	IdentifierDeclStatement	size_t capacity1 = 4096 ;	3005:1:91882:91905	3610113	17	True				
ANR	3610381	IdentifierDecl	capacity1 = 4096		3610113	0					
ANR	3610382	IdentifierDeclType	size_t		3610113	0					
ANR	3610383	Identifier	capacity1		3610113	1					
ANR	3610384	AssignmentExpression	capacity1 = 4096		3610113	2		=			
ANR	3610385	Identifier	capacity1		3610113	0					
ANR	3610386	PrimaryExpression	4096		3610113	1					
ANR	3610387	IdentifierDeclStatement	size_t capacity2 = 4096 ;	3006:1:91908:91931	3610113	18	True				
ANR	3610388	IdentifierDecl	capacity2 = 4096		3610113	0					
ANR	3610389	IdentifierDeclType	size_t		3610113	0					
ANR	3610390	Identifier	capacity2		3610113	1					
ANR	3610391	AssignmentExpression	capacity2 = 4096		3610113	2		=			
ANR	3610392	Identifier	capacity2		3610113	0					
ANR	3610393	PrimaryExpression	4096		3610113	1					
ANR	3610394	Statement	sym	3007:1:91934:91936	3610113	19	True				
ANR	3610395	Statement	=	3007:5:91938:91938	3610113	20	True				
ANR	3610396	Statement	(	3007:7:91940:91940	3610113	21	True				
ANR	3610397	Statement	Elf_	3007:8:91941:91944	3610113	22	True				
ANR	3610398	Statement	(	3007:12:91945:91945	3610113	23	True				
ANR	3610399	Statement	Sym	3007:13:91946:91948	3610113	24	True				
ANR	3610400	Statement	)	3007:16:91949:91949	3610113	25	True				
ANR	3610401	Statement	*	3007:17:91950:91950	3610113	26	True				
ANR	3610402	Statement	)	3007:18:91951:91951	3610113	27	True				
ANR	3610403	ExpressionStatement	"calloc ( capacity1 , sym_size )"	3007:20:91953:91981	3610113	28	True				
ANR	3610404	CallExpression	"calloc ( capacity1 , sym_size )"		3610113	0					
ANR	3610405	Callee	calloc		3610113	0					
ANR	3610406	Identifier	calloc		3610113	0					
ANR	3610407	ArgumentList	capacity1		3610113	1					
ANR	3610408	Argument	capacity1		3610113	0					
ANR	3610409	Identifier	capacity1		3610113	0					
ANR	3610410	Argument	sym_size		3610113	1					
ANR	3610411	Identifier	sym_size		3610113	0					
ANR	3610412	ExpressionStatement	"ret = ( RBinElfSymbol * ) calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"	3008:1:91984:92062	3610113	29	True				
ANR	3610413	AssignmentExpression	"ret = ( RBinElfSymbol * ) calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"		3610113	0		=			
ANR	3610414	Identifier	ret		3610113	0					
ANR	3610415	CastExpression	"( RBinElfSymbol * ) calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"		3610113	1					
ANR	3610416	CastTarget	RBinElfSymbol *		3610113	0					
ANR	3610417	CallExpression	"calloc ( capacity2 , sizeof ( struct r_bin_elf_symbol_t ) )"		3610113	1					
ANR	3610418	Callee	calloc		3610113	0					
ANR	3610419	Identifier	calloc		3610113	0					
ANR	3610420	ArgumentList	capacity2		3610113	1					
ANR	3610421	Argument	capacity2		3610113	0					
ANR	3610422	Identifier	capacity2		3610113	0					
ANR	3610423	Argument	sizeof ( struct r_bin_elf_symbol_t )		3610113	1					
ANR	3610424	SizeofExpression	sizeof ( struct r_bin_elf_symbol_t )		3610113	0					
ANR	3610425	Sizeof	sizeof		3610113	0					
ANR	3610426	SizeofOperand	struct r_bin_elf_symbol_t		3610113	1					
ANR	3610427	IfStatement	if ( ! sym || ! ret )		3610113	30					
ANR	3610428	Condition	! sym || ! ret	3009:5:92069:92080	3610113	0	True				
ANR	3610429	OrExpression	! sym || ! ret		3610113	0		||			
ANR	3610430	UnaryOperationExpression	! sym		3610113	0					
ANR	3610431	UnaryOperator	!		3610113	0					
ANR	3610432	Identifier	sym		3610113	1					
ANR	3610433	UnaryOperationExpression	! ret		3610113	1					
ANR	3610434	UnaryOperator	!		3610113	0					
ANR	3610435	Identifier	ret		3610113	1					
ANR	3610436	CompoundStatement		50:19:1259:1259	3610113	1					
ANR	3610437	GotoStatement	goto beach ;	3010:2:92087:92097	3610113	0	True				
ANR	3610438	Identifier	beach		3610113	0					
ANR	3610439	ForStatement	"for ( i = 1 , ret_ctr = 0 ; i < nsym ; i ++ )"		3610113	31					
ANR	3610440	ForInit	"i = 1 , ret_ctr = 0 ;"	3012:6:92108:92126	3610113	0	True				
ANR	3610441	Expression	"i = 1 , ret_ctr = 0"		3610113	0					
ANR	3610442	AssignmentExpression	i = 1		3610113	0		=			
ANR	3610443	Identifier	i		3610113	0					
ANR	3610444	PrimaryExpression	1		3610113	1					
ANR	3610445	AssignmentExpression	ret_ctr = 0		3610113	1		=			
ANR	3610446	Identifier	ret_ctr		3610113	0					
ANR	3610447	PrimaryExpression	0		3610113	1					
ANR	3610448	Condition	i < nsym	3012:26:92128:92135	3610113	1	True				
ANR	3610449	RelationalExpression	i < nsym		3610113	0		<			
ANR	3610450	Identifier	i		3610113	0					
ANR	3610451	Identifier	nsym		3610113	1					
ANR	3610452	PostIncDecOperationExpression	i ++	3012:36:92138:92140	3610113	2	True				
ANR	3610453	Identifier	i		3610113	0					
ANR	3610454	IncDec	++		3610113	1					
ANR	3610455	CompoundStatement		93:2:2486:2507	3610113	3					
ANR	3610456	IfStatement	if ( i >= capacity1 )		3610113	0					
ANR	3610457	Condition	i >= capacity1	3013:6:92151:92164	3610113	0	True				
ANR	3610458	RelationalExpression	i >= capacity1		3610113	0		>=			
ANR	3610459	Identifier	i		3610113	0					
ANR	3610460	Identifier	capacity1		3610113	1					
ANR	3610461	CompoundStatement		54:22:1343:1343	3610113	1					
ANR	3610462	Statement	Elf_	3015:3:92243:92246	3610113	0	True				
ANR	3610463	Statement	(	3015:7:92247:92247	3610113	1	True				
ANR	3610464	Statement	Sym	3015:8:92248:92250	3610113	2	True				
ANR	3610465	Statement	)	3015:11:92251:92251	3610113	3	True				
ANR	3610466	Statement	*	3015:12:92252:92252	3610113	4	True				
ANR	3610467	Statement	temp_sym	3015:14:92254:92261	3610113	5	True				
ANR	3610468	Statement	=	3015:23:92263:92263	3610113	6	True				
ANR	3610469	Statement	(	3015:25:92265:92265	3610113	7	True				
ANR	3610470	Statement	Elf_	3015:26:92266:92269	3610113	8	True				
ANR	3610471	Statement	(	3015:30:92270:92270	3610113	9	True				
ANR	3610472	Statement	Sym	3015:31:92271:92273	3610113	10	True				
ANR	3610473	Statement	)	3015:34:92274:92274	3610113	11	True				
ANR	3610474	Statement	*	3015:35:92275:92275	3610113	12	True				
ANR	3610475	Statement	)	3015:36:92276:92276	3610113	13	True				
ANR	3610476	ExpressionStatement	"realloc ( sym , ( capacity1 * GROWTH_FACTOR ) * sym_size )"	3015:38:92278:92331	3610113	14	True				
ANR	3610477	CallExpression	"realloc ( sym , ( capacity1 * GROWTH_FACTOR ) * sym_size )"		3610113	0					
ANR	3610478	Callee	realloc		3610113	0					
ANR	3610479	Identifier	realloc		3610113	0					
ANR	3610480	ArgumentList	sym		3610113	1					
ANR	3610481	Argument	sym		3610113	0					
ANR	3610482	Identifier	sym		3610113	0					
ANR	3610483	Argument	( capacity1 * GROWTH_FACTOR ) * sym_size		3610113	1					
ANR	3610484	MultiplicativeExpression	( capacity1 * GROWTH_FACTOR ) * sym_size		3610113	0		*			
ANR	3610485	MultiplicativeExpression	capacity1 * GROWTH_FACTOR		3610113	0		*			
ANR	3610486	Identifier	capacity1		3610113	0					
ANR	3610487	Identifier	GROWTH_FACTOR		3610113	1					
ANR	3610488	Identifier	sym_size		3610113	1					
ANR	3610489	IfStatement	if ( ! temp_sym )		3610113	15					
ANR	3610490	Condition	! temp_sym	3016:7:92340:92348	3610113	0	True				
ANR	3610491	UnaryOperationExpression	! temp_sym		3610113	0					
ANR	3610492	UnaryOperator	!		3610113	0					
ANR	3610493	Identifier	temp_sym		3610113	1					
ANR	3610494	CompoundStatement		57:18:1527:1527	3610113	1					
ANR	3610495	GotoStatement	goto beach ;	3017:4:92357:92367	3610113	0	True				
ANR	3610496	Identifier	beach		3610113	0					
ANR	3610497	ExpressionStatement	sym = temp_sym	3019:3:92377:92391	3610113	16	True				
ANR	3610498	AssignmentExpression	sym = temp_sym		3610113	0		=			
ANR	3610499	Identifier	sym		3610113	0					
ANR	3610500	Identifier	temp_sym		3610113	1					
ANR	3610501	ExpressionStatement	capacity1 *= GROWTH_FACTOR	3020:3:92396:92422	3610113	17	True				
ANR	3610502	AssignmentExpression	capacity1 *= GROWTH_FACTOR		3610113	0		*=			
ANR	3610503	Identifier	capacity1		3610113	0					
ANR	3610504	Identifier	GROWTH_FACTOR		3610113	1					
ANR	3610505	IfStatement	if ( ret_ctr >= capacity2 )		3610113	1					
ANR	3610506	Condition	ret_ctr >= capacity2	3022:6:92434:92453	3610113	0	True				
ANR	3610507	RelationalExpression	ret_ctr >= capacity2		3610113	0		>=			
ANR	3610508	Identifier	ret_ctr		3610113	0					
ANR	3610509	Identifier	capacity2		3610113	1					
ANR	3610510	CompoundStatement		64:3:1651:1754	3610113	1					
ANR	3610511	IdentifierDeclStatement	"RBinElfSymbol * temp_ret = realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) ) ;"	3023:3:92475:92578	3610113	0	True				
ANR	3610512	IdentifierDecl	"* temp_ret = realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) )"		3610113	0					
ANR	3610513	IdentifierDeclType	RBinElfSymbol *		3610113	0					
ANR	3610514	Identifier	temp_ret		3610113	1					
ANR	3610515	AssignmentExpression	"* temp_ret = realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) )"		3610113	2		=			
ANR	3610516	Identifier	temp_ret		3610113	0					
ANR	3610517	CallExpression	"realloc ( ret , capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t ) )"		3610113	1					
ANR	3610518	Callee	realloc		3610113	0					
ANR	3610519	Identifier	realloc		3610113	0					
ANR	3610520	ArgumentList	ret		3610113	1					
ANR	3610521	Argument	ret		3610113	0					
ANR	3610522	Identifier	ret		3610113	0					
ANR	3610523	Argument	capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t )		3610113	1					
ANR	3610524	MultiplicativeExpression	capacity2 * GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t )		3610113	0		*			
ANR	3610525	Identifier	capacity2		3610113	0					
ANR	3610526	MultiplicativeExpression	GROWTH_FACTOR * sizeof ( struct r_bin_elf_symbol_t )		3610113	1		*			
ANR	3610527	Identifier	GROWTH_FACTOR		3610113	0					
ANR	3610528	SizeofExpression	sizeof ( struct r_bin_elf_symbol_t )		3610113	1					
ANR	3610529	Sizeof	sizeof		3610113	0					
ANR	3610530	SizeofOperand	struct r_bin_elf_symbol_t		3610113	1					
ANR	3610531	IfStatement	if ( ! temp_ret )		3610113	1					
ANR	3610532	Condition	! temp_ret	3024:7:92587:92595	3610113	0	True				
ANR	3610533	UnaryOperationExpression	! temp_ret		3610113	0					
ANR	3610534	UnaryOperator	!		3610113	0					
ANR	3610535	Identifier	temp_ret		3610113	1					
ANR	3610536	CompoundStatement		65:18:1774:1774	3610113	1					
ANR	3610537	GotoStatement	goto beach ;	3025:4:92604:92614	3610113	0	True				
ANR	3610538	Identifier	beach		3610113	0					
ANR	3610539	ExpressionStatement	ret = temp_ret	3027:3:92624:92638	3610113	2	True				
ANR	3610540	AssignmentExpression	ret = temp_ret		3610113	0		=			
ANR	3610541	Identifier	ret		3610113	0					
ANR	3610542	Identifier	temp_ret		3610113	1					
ANR	3610543	ExpressionStatement	capacity2 *= GROWTH_FACTOR	3028:3:92643:92669	3610113	3	True				
ANR	3610544	AssignmentExpression	capacity2 *= GROWTH_FACTOR		3610113	0		*=			
ANR	3610545	Identifier	capacity2		3610113	0					
ANR	3610546	Identifier	GROWTH_FACTOR		3610113	1					
ANR	3610547	ExpressionStatement	"r = r_buf_read_at ( bin -> b , addr_sym_table + i * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"	3031:2:92700:92792	3610113	2	True				
ANR	3610548	AssignmentExpression	"r = r_buf_read_at ( bin -> b , addr_sym_table + i * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		3610113	0		=			
ANR	3610549	Identifier	r		3610113	0					
ANR	3610550	CallExpression	"r_buf_read_at ( bin -> b , addr_sym_table + i * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		3610113	1					
ANR	3610551	Callee	r_buf_read_at		3610113	0					
ANR	3610552	Identifier	r_buf_read_at		3610113	0					
ANR	3610553	ArgumentList	bin -> b		3610113	1					
ANR	3610554	Argument	bin -> b		3610113	0					
ANR	3610555	PtrMemberAccess	bin -> b		3610113	0					
ANR	3610556	Identifier	bin		3610113	0					
ANR	3610557	Identifier	b		3610113	1					
ANR	3610558	Argument	addr_sym_table + i * sizeof ( Elf_ ( Sym ) )		3610113	1					
ANR	3610559	AdditiveExpression	addr_sym_table + i * sizeof ( Elf_ ( Sym ) )		3610113	0		+			
ANR	3610560	Identifier	addr_sym_table		3610113	0					
ANR	3610561	MultiplicativeExpression	i * sizeof ( Elf_ ( Sym ) )		3610113	1		*			
ANR	3610562	Identifier	i		3610113	0					
ANR	3610563	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3610113	1					
ANR	3610564	Sizeof	sizeof		3610113	0					
ANR	3610565	CallExpression	Elf_ ( Sym )		3610113	1					
ANR	3610566	Callee	Elf_		3610113	0					
ANR	3610567	Identifier	Elf_		3610113	0					
ANR	3610568	ArgumentList	Sym		3610113	1					
ANR	3610569	Argument	Sym		3610113	0					
ANR	3610570	Identifier	Sym		3610113	0					
ANR	3610571	Argument	s		3610113	2					
ANR	3610572	Identifier	s		3610113	0					
ANR	3610573	Argument	sizeof ( Elf_ ( Sym ) )		3610113	3					
ANR	3610574	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3610113	0					
ANR	3610575	Sizeof	sizeof		3610113	0					
ANR	3610576	CallExpression	Elf_ ( Sym )		3610113	1					
ANR	3610577	Callee	Elf_		3610113	0					
ANR	3610578	Identifier	Elf_		3610113	0					
ANR	3610579	ArgumentList	Sym		3610113	1					
ANR	3610580	Argument	Sym		3610113	0					
ANR	3610581	Identifier	Sym		3610113	0					
ANR	3610582	IfStatement	if ( r < 1 )		3610113	3					
ANR	3610583	Condition	r < 1	3032:6:92800:92804	3610113	0	True				
ANR	3610584	RelationalExpression	r < 1		3610113	0		<			
ANR	3610585	Identifier	r		3610113	0					
ANR	3610586	PrimaryExpression	1		3610113	1					
ANR	3610587	CompoundStatement		73:13:1983:1983	3610113	1					
ANR	3610588	GotoStatement	goto beach ;	3033:3:92812:92822	3610113	0	True				
ANR	3610589	Identifier	beach		3610113	0					
ANR	3610590	IdentifierDeclStatement	int j = 0 ;	3035:2:92830:92839	3610113	4	True				
ANR	3610591	IdentifierDecl	j = 0		3610113	0					
ANR	3610592	IdentifierDeclType	int		3610113	0					
ANR	3610593	Identifier	j		3610113	1					
ANR	3610594	AssignmentExpression	j = 0		3610113	2		=			
ANR	3610595	Identifier	j		3610113	0					
ANR	3610596	PrimaryExpression	0		3610113	1					
ANR	3610597	ExpressionStatement	"sym [ i ] . st_name = READ32 ( s , j )"	3037:2:92859:92889	3610113	5	True				
ANR	3610598	AssignmentExpression	"sym [ i ] . st_name = READ32 ( s , j )"		3610113	0		=			
ANR	3610599	MemberAccess	sym [ i ] . st_name		3610113	0					
ANR	3610600	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610601	Identifier	sym		3610113	0					
ANR	3610602	Identifier	i		3610113	1					
ANR	3610603	Identifier	st_name		3610113	1					
ANR	3610604	CallExpression	"READ32 ( s , j )"		3610113	1					
ANR	3610605	Callee	READ32		3610113	0					
ANR	3610606	Identifier	READ32		3610113	0					
ANR	3610607	ArgumentList	s		3610113	1					
ANR	3610608	Argument	s		3610113	0					
ANR	3610609	Identifier	s		3610113	0					
ANR	3610610	Argument	j		3610113	1					
ANR	3610611	Identifier	j		3610113	0					
ANR	3610612	ExpressionStatement	"sym [ i ] . st_info = READ8 ( s , j )"	3038:2:92893:92922	3610113	6	True				
ANR	3610613	AssignmentExpression	"sym [ i ] . st_info = READ8 ( s , j )"		3610113	0		=			
ANR	3610614	MemberAccess	sym [ i ] . st_info		3610113	0					
ANR	3610615	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610616	Identifier	sym		3610113	0					
ANR	3610617	Identifier	i		3610113	1					
ANR	3610618	Identifier	st_info		3610113	1					
ANR	3610619	CallExpression	"READ8 ( s , j )"		3610113	1					
ANR	3610620	Callee	READ8		3610113	0					
ANR	3610621	Identifier	READ8		3610113	0					
ANR	3610622	ArgumentList	s		3610113	1					
ANR	3610623	Argument	s		3610113	0					
ANR	3610624	Identifier	s		3610113	0					
ANR	3610625	Argument	j		3610113	1					
ANR	3610626	Identifier	j		3610113	0					
ANR	3610627	ExpressionStatement	"sym [ i ] . st_other = READ8 ( s , j )"	3039:2:92926:92956	3610113	7	True				
ANR	3610628	AssignmentExpression	"sym [ i ] . st_other = READ8 ( s , j )"		3610113	0		=			
ANR	3610629	MemberAccess	sym [ i ] . st_other		3610113	0					
ANR	3610630	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610631	Identifier	sym		3610113	0					
ANR	3610632	Identifier	i		3610113	1					
ANR	3610633	Identifier	st_other		3610113	1					
ANR	3610634	CallExpression	"READ8 ( s , j )"		3610113	1					
ANR	3610635	Callee	READ8		3610113	0					
ANR	3610636	Identifier	READ8		3610113	0					
ANR	3610637	ArgumentList	s		3610113	1					
ANR	3610638	Argument	s		3610113	0					
ANR	3610639	Identifier	s		3610113	0					
ANR	3610640	Argument	j		3610113	1					
ANR	3610641	Identifier	j		3610113	0					
ANR	3610642	ExpressionStatement	"sym [ i ] . st_shndx = READ16 ( s , j )"	3040:2:92960:92991	3610113	8	True				
ANR	3610643	AssignmentExpression	"sym [ i ] . st_shndx = READ16 ( s , j )"		3610113	0		=			
ANR	3610644	MemberAccess	sym [ i ] . st_shndx		3610113	0					
ANR	3610645	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610646	Identifier	sym		3610113	0					
ANR	3610647	Identifier	i		3610113	1					
ANR	3610648	Identifier	st_shndx		3610113	1					
ANR	3610649	CallExpression	"READ16 ( s , j )"		3610113	1					
ANR	3610650	Callee	READ16		3610113	0					
ANR	3610651	Identifier	READ16		3610113	0					
ANR	3610652	ArgumentList	s		3610113	1					
ANR	3610653	Argument	s		3610113	0					
ANR	3610654	Identifier	s		3610113	0					
ANR	3610655	Argument	j		3610113	1					
ANR	3610656	Identifier	j		3610113	0					
ANR	3610657	ExpressionStatement	"sym [ i ] . st_value = READ64 ( s , j )"	3041:2:92995:93026	3610113	9	True				
ANR	3610658	AssignmentExpression	"sym [ i ] . st_value = READ64 ( s , j )"		3610113	0		=			
ANR	3610659	MemberAccess	sym [ i ] . st_value		3610113	0					
ANR	3610660	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610661	Identifier	sym		3610113	0					
ANR	3610662	Identifier	i		3610113	1					
ANR	3610663	Identifier	st_value		3610113	1					
ANR	3610664	CallExpression	"READ64 ( s , j )"		3610113	1					
ANR	3610665	Callee	READ64		3610113	0					
ANR	3610666	Identifier	READ64		3610113	0					
ANR	3610667	ArgumentList	s		3610113	1					
ANR	3610668	Argument	s		3610113	0					
ANR	3610669	Identifier	s		3610113	0					
ANR	3610670	Argument	j		3610113	1					
ANR	3610671	Identifier	j		3610113	0					
ANR	3610672	ExpressionStatement	"sym [ i ] . st_size = READ64 ( s , j )"	3042:2:93030:93060	3610113	10	True				
ANR	3610673	AssignmentExpression	"sym [ i ] . st_size = READ64 ( s , j )"		3610113	0		=			
ANR	3610674	MemberAccess	sym [ i ] . st_size		3610113	0					
ANR	3610675	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610676	Identifier	sym		3610113	0					
ANR	3610677	Identifier	i		3610113	1					
ANR	3610678	Identifier	st_size		3610113	1					
ANR	3610679	CallExpression	"READ64 ( s , j )"		3610113	1					
ANR	3610680	Callee	READ64		3610113	0					
ANR	3610681	Identifier	READ64		3610113	0					
ANR	3610682	ArgumentList	s		3610113	1					
ANR	3610683	Argument	s		3610113	0					
ANR	3610684	Identifier	s		3610113	0					
ANR	3610685	Argument	j		3610113	1					
ANR	3610686	Identifier	j		3610113	0					
ANR	3610687	IdentifierDeclStatement	bool is_sht_null = false ;	3051:2:93282:93306	3610113	11	True				
ANR	3610688	IdentifierDecl	is_sht_null = false		3610113	0					
ANR	3610689	IdentifierDeclType	bool		3610113	0					
ANR	3610690	Identifier	is_sht_null		3610113	1					
ANR	3610691	AssignmentExpression	is_sht_null = false		3610113	2		=			
ANR	3610692	Identifier	false		3610113	0					
ANR	3610693	Identifier	false		3610113	1					
ANR	3610694	IdentifierDeclStatement	bool is_vaddr = false ;	3052:2:93310:93331	3610113	12	True				
ANR	3610695	IdentifierDecl	is_vaddr = false		3610113	0					
ANR	3610696	IdentifierDeclType	bool		3610113	0					
ANR	3610697	Identifier	is_vaddr		3610113	1					
ANR	3610698	AssignmentExpression	is_vaddr = false		3610113	2		=			
ANR	3610699	Identifier	false		3610113	0					
ANR	3610700	Identifier	false		3610113	1					
ANR	3610701	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS && sym [ i ] . st_shndx == SHT_NULL )		3610113	13					
ANR	3610702	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS && sym [ i ] . st_shndx == SHT_NULL	3055:6:93407:93469	3610113	0	True				
ANR	3610703	AndExpression	type == R_BIN_ELF_IMPORT_SYMBOLS && sym [ i ] . st_shndx == SHT_NULL		3610113	0		&&			
ANR	3610704	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		3610113	0		==			
ANR	3610705	Identifier	type		3610113	0					
ANR	3610706	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3610113	1					
ANR	3610707	EqualityExpression	sym [ i ] . st_shndx == SHT_NULL		3610113	1		==			
ANR	3610708	MemberAccess	sym [ i ] . st_shndx		3610113	0					
ANR	3610709	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610710	Identifier	sym		3610113	0					
ANR	3610711	Identifier	i		3610113	1					
ANR	3610712	Identifier	st_shndx		3610113	1					
ANR	3610713	Identifier	SHT_NULL		3610113	1					
ANR	3610714	CompoundStatement		96:71:2648:2648	3610113	1					
ANR	3610715	IfStatement	if ( sym [ i ] . st_value )		3610113	0					
ANR	3610716	Condition	sym [ i ] . st_value	3056:7:93481:93495	3610113	0	True				
ANR	3610717	MemberAccess	sym [ i ] . st_value		3610113	0					
ANR	3610718	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610719	Identifier	sym		3610113	0					
ANR	3610720	Identifier	i		3610113	1					
ANR	3610721	Identifier	st_value		3610113	1					
ANR	3610722	CompoundStatement		97:24:2674:2674	3610113	1					
ANR	3610723	ExpressionStatement	toffset = sym [ i ] . st_value	3057:4:93504:93529	3610113	0	True				
ANR	3610724	AssignmentExpression	toffset = sym [ i ] . st_value		3610113	0		=			
ANR	3610725	Identifier	toffset		3610113	0					
ANR	3610726	MemberAccess	sym [ i ] . st_value		3610113	1					
ANR	3610727	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610728	Identifier	sym		3610113	0					
ANR	3610729	Identifier	i		3610113	1					
ANR	3610730	Identifier	st_value		3610113	1					
ANR	3610731	ElseStatement	else		3610113	0					
ANR	3610732	IfStatement	"if ( ( toffset = get_import_addr ( bin , i ) ) == - 1 )"		3610113	0					
ANR	3610733	Condition	"( toffset = get_import_addr ( bin , i ) ) == - 1"	3058:14:93545:93586	3610113	0	True				
ANR	3610734	EqualityExpression	"( toffset = get_import_addr ( bin , i ) ) == - 1"		3610113	0		==			
ANR	3610735	AssignmentExpression	"toffset = get_import_addr ( bin , i )"		3610113	0		=			
ANR	3610736	Identifier	toffset		3610113	0					
ANR	3610737	CallExpression	"get_import_addr ( bin , i )"		3610113	1					
ANR	3610738	Callee	get_import_addr		3610113	0					
ANR	3610739	Identifier	get_import_addr		3610113	0					
ANR	3610740	ArgumentList	bin		3610113	1					
ANR	3610741	Argument	bin		3610113	0					
ANR	3610742	Identifier	bin		3610113	0					
ANR	3610743	Argument	i		3610113	1					
ANR	3610744	Identifier	i		3610113	0					
ANR	3610745	UnaryOperationExpression	- 1		3610113	1					
ANR	3610746	UnaryOperator	-		3610113	0					
ANR	3610747	PrimaryExpression	1		3610113	1					
ANR	3610748	CompoundStatement		99:57:2764:2764	3610113	1					
ANR	3610749	ExpressionStatement	toffset = 0	3059:4:93594:93605	3610113	0	True				
ANR	3610750	AssignmentExpression	toffset = 0		3610113	0		=			
ANR	3610751	Identifier	toffset		3610113	0					
ANR	3610752	PrimaryExpression	0		3610113	1					
ANR	3610753	ExpressionStatement	tsize = 16	3061:3:93615:93625	3610113	1	True				
ANR	3610754	AssignmentExpression	tsize = 16		3610113	0		=			
ANR	3610755	Identifier	tsize		3610113	0					
ANR	3610756	PrimaryExpression	16		3610113	1					
ANR	3610757	ElseStatement	else		3610113	0					
ANR	3610758	IfStatement	if ( type == R_BIN_ELF_ALL_SYMBOLS )		3610113	0					
ANR	3610759	Condition	type == R_BIN_ELF_ALL_SYMBOLS	3062:13:93640:93668	3610113	0	True				
ANR	3610760	EqualityExpression	type == R_BIN_ELF_ALL_SYMBOLS		3610113	0		==			
ANR	3610761	Identifier	type		3610113	0					
ANR	3610762	Identifier	R_BIN_ELF_ALL_SYMBOLS		3610113	1					
ANR	3610763	CompoundStatement		103:44:2847:2847	3610113	1					
ANR	3610764	ExpressionStatement	tsize = sym [ i ] . st_size	3063:3:93676:93698	3610113	0	True				
ANR	3610765	AssignmentExpression	tsize = sym [ i ] . st_size		3610113	0		=			
ANR	3610766	Identifier	tsize		3610113	0					
ANR	3610767	MemberAccess	sym [ i ] . st_size		3610113	1					
ANR	3610768	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610769	Identifier	sym		3610113	0					
ANR	3610770	Identifier	i		3610113	1					
ANR	3610771	Identifier	st_size		3610113	1					
ANR	3610772	ExpressionStatement	toffset = ( ut64 ) sym [ i ] . st_value	3064:3:93703:93735	3610113	1	True				
ANR	3610773	AssignmentExpression	toffset = ( ut64 ) sym [ i ] . st_value		3610113	0		=			
ANR	3610774	Identifier	toffset		3610113	0					
ANR	3610775	CastExpression	( ut64 ) sym [ i ] . st_value		3610113	1					
ANR	3610776	CastTarget	ut64		3610113	0					
ANR	3610777	MemberAccess	sym [ i ] . st_value		3610113	1					
ANR	3610778	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610779	Identifier	sym		3610113	0					
ANR	3610780	Identifier	i		3610113	1					
ANR	3610781	Identifier	st_value		3610113	1					
ANR	3610782	ExpressionStatement	is_sht_null = sym [ i ] . st_shndx == SHT_NULL	3065:3:93740:93781	3610113	2	True				
ANR	3610783	AssignmentExpression	is_sht_null = sym [ i ] . st_shndx == SHT_NULL		3610113	0		=			
ANR	3610784	Identifier	is_sht_null		3610113	0					
ANR	3610785	EqualityExpression	sym [ i ] . st_shndx == SHT_NULL		3610113	1		==			
ANR	3610786	MemberAccess	sym [ i ] . st_shndx		3610113	0					
ANR	3610787	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610788	Identifier	sym		3610113	0					
ANR	3610789	Identifier	i		3610113	1					
ANR	3610790	Identifier	st_shndx		3610113	1					
ANR	3610791	Identifier	SHT_NULL		3610113	1					
ANR	3610792	ElseStatement	else		3610113	0					
ANR	3610793	CompoundStatement		107:9:2968:2968	3610113	0					
ANR	3610794	ContinueStatement	continue ;	3067:3:93797:93805	3610113	0	True				
ANR	3610795	IfStatement	"if ( ! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR ) || ! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR ) )"		3610113	14					
ANR	3610796	Condition	"! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR ) || ! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"	3071:6:93925:94050	3610113	0	True				
ANR	3610797	OrExpression	"! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR ) || ! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"		3610113	0		||			
ANR	3610798	UnaryOperationExpression	"! strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR )"		3610113	0					
ANR	3610799	UnaryOperator	!		3610113	0					
ANR	3610800	CallExpression	"strcmp ( bind2str ( & sym [ i ] ) , R_BIN_BIND_UNKNOWN_STR )"		3610113	1					
ANR	3610801	Callee	strcmp		3610113	0					
ANR	3610802	Identifier	strcmp		3610113	0					
ANR	3610803	ArgumentList	bind2str ( & sym [ i ] )		3610113	1					
ANR	3610804	Argument	bind2str ( & sym [ i ] )		3610113	0					
ANR	3610805	CallExpression	bind2str ( & sym [ i ] )		3610113	0					
ANR	3610806	Callee	bind2str		3610113	0					
ANR	3610807	Identifier	bind2str		3610113	0					
ANR	3610808	ArgumentList	& sym [ i ]		3610113	1					
ANR	3610809	Argument	& sym [ i ]		3610113	0					
ANR	3610810	UnaryOperationExpression	& sym [ i ]		3610113	0					
ANR	3610811	UnaryOperator	&		3610113	0					
ANR	3610812	ArrayIndexing	sym [ i ]		3610113	1					
ANR	3610813	Identifier	sym		3610113	0					
ANR	3610814	Identifier	i		3610113	1					
ANR	3610815	Argument	R_BIN_BIND_UNKNOWN_STR		3610113	1					
ANR	3610816	Identifier	R_BIN_BIND_UNKNOWN_STR		3610113	0					
ANR	3610817	UnaryOperationExpression	"! strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"		3610113	1					
ANR	3610818	UnaryOperator	!		3610113	0					
ANR	3610819	CallExpression	"strcmp ( type2str ( NULL , NULL , & sym [ i ] ) , R_BIN_TYPE_UNKNOWN_STR )"		3610113	1					
ANR	3610820	Callee	strcmp		3610113	0					
ANR	3610821	Identifier	strcmp		3610113	0					
ANR	3610822	ArgumentList	"type2str ( NULL , NULL , & sym [ i ] )"		3610113	1					
ANR	3610823	Argument	"type2str ( NULL , NULL , & sym [ i ] )"		3610113	0					
ANR	3610824	CallExpression	"type2str ( NULL , NULL , & sym [ i ] )"		3610113	0					
ANR	3610825	Callee	type2str		3610113	0					
ANR	3610826	Identifier	type2str		3610113	0					
ANR	3610827	ArgumentList	NULL		3610113	1					
ANR	3610828	Argument	NULL		3610113	0					
ANR	3610829	Identifier	NULL		3610113	0					
ANR	3610830	Argument	NULL		3610113	1					
ANR	3610831	Identifier	NULL		3610113	0					
ANR	3610832	Argument	& sym [ i ]		3610113	2					
ANR	3610833	UnaryOperationExpression	& sym [ i ]		3610113	0					
ANR	3610834	UnaryOperator	&		3610113	0					
ANR	3610835	ArrayIndexing	sym [ i ]		3610113	1					
ANR	3610836	Identifier	sym		3610113	0					
ANR	3610837	Identifier	i		3610113	1					
ANR	3610838	Argument	R_BIN_TYPE_UNKNOWN_STR		3610113	1					
ANR	3610839	Identifier	R_BIN_TYPE_UNKNOWN_STR		3610113	0					
ANR	3610840	CompoundStatement		113:72:3229:3229	3610113	1					
ANR	3610841	GotoStatement	goto done ;	3073:3:94058:94067	3610113	0	True				
ANR	3610842	Identifier	done		3610113	0					
ANR	3610843	ExpressionStatement	"tmp_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"	3075:2:94075:94126	3610113	15	True				
ANR	3610844	AssignmentExpression	"tmp_offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		3610113	0		=			
ANR	3610845	Identifier	tmp_offset		3610113	0					
ANR	3610846	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		3610113	1					
ANR	3610847	Callee	Elf_ ( r_bin_elf_v2p_new )		3610113	0					
ANR	3610848	CallExpression	Elf_ ( r_bin_elf_v2p_new )		3610113	0					
ANR	3610849	Callee	Elf_		3610113	0					
ANR	3610850	Identifier	Elf_		3610113	0					
ANR	3610851	ArgumentList	r_bin_elf_v2p_new		3610113	1					
ANR	3610852	Argument	r_bin_elf_v2p_new		3610113	0					
ANR	3610853	Identifier	r_bin_elf_v2p_new		3610113	0					
ANR	3610854	ArgumentList	bin		3610113	1					
ANR	3610855	Argument	bin		3610113	0					
ANR	3610856	Identifier	bin		3610113	0					
ANR	3610857	Argument	toffset		3610113	1					
ANR	3610858	Identifier	toffset		3610113	0					
ANR	3610859	IfStatement	if ( tmp_offset == UT64_MAX )		3610113	16					
ANR	3610860	Condition	tmp_offset == UT64_MAX	3076:6:94134:94155	3610113	0	True				
ANR	3610861	EqualityExpression	tmp_offset == UT64_MAX		3610113	0		==			
ANR	3610862	Identifier	tmp_offset		3610113	0					
ANR	3610863	Identifier	UT64_MAX		3610113	1					
ANR	3610864	CompoundStatement		117:30:3334:3334	3610113	1					
ANR	3610865	ExpressionStatement	tmp_offset = toffset	3077:3:94163:94183	3610113	0	True				
ANR	3610866	AssignmentExpression	tmp_offset = toffset		3610113	0		=			
ANR	3610867	Identifier	tmp_offset		3610113	0					
ANR	3610868	Identifier	toffset		3610113	1					
ANR	3610869	ExpressionStatement	is_vaddr = true	3078:3:94188:94203	3610113	1	True				
ANR	3610870	AssignmentExpression	is_vaddr = true		3610113	0		=			
ANR	3610871	Identifier	is_vaddr		3610113	0					
ANR	3610872	Identifier	true		3610113	1					
ANR	3610873	IfStatement	if ( tmp_offset > bin -> size )		3610113	17					
ANR	3610874	Condition	tmp_offset > bin -> size	3080:6:94215:94236	3610113	0	True				
ANR	3610875	RelationalExpression	tmp_offset > bin -> size		3610113	0		>			
ANR	3610876	Identifier	tmp_offset		3610113	0					
ANR	3610877	PtrMemberAccess	bin -> size		3610113	1					
ANR	3610878	Identifier	bin		3610113	0					
ANR	3610879	Identifier	size		3610113	1					
ANR	3610880	CompoundStatement		121:30:3415:3415	3610113	1					
ANR	3610881	GotoStatement	goto done ;	3081:3:94244:94253	3610113	0	True				
ANR	3610882	Identifier	done		3610113	0					
ANR	3610883	IfStatement	if ( sym [ i ] . st_name + 2 > bin -> strtab_size )		3610113	18					
ANR	3610884	Condition	sym [ i ] . st_name + 2 > bin -> strtab_size	3083:6:94265:94301	3610113	0	True				
ANR	3610885	RelationalExpression	sym [ i ] . st_name + 2 > bin -> strtab_size		3610113	0		>			
ANR	3610886	AdditiveExpression	sym [ i ] . st_name + 2		3610113	0		+			
ANR	3610887	MemberAccess	sym [ i ] . st_name		3610113	0					
ANR	3610888	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610889	Identifier	sym		3610113	0					
ANR	3610890	Identifier	i		3610113	1					
ANR	3610891	Identifier	st_name		3610113	1					
ANR	3610892	PrimaryExpression	2		3610113	1					
ANR	3610893	PtrMemberAccess	bin -> strtab_size		3610113	1					
ANR	3610894	Identifier	bin		3610113	0					
ANR	3610895	Identifier	strtab_size		3610113	1					
ANR	3610896	CompoundStatement		124:45:3480:3480	3610113	1					
ANR	3610897	GotoStatement	goto done ;	3087:3:94494:94503	3610113	0	True				
ANR	3610898	Identifier	done		3610113	0					
ANR	3610899	ExpressionStatement	ret [ ret_ctr ] . offset = tmp_offset	3089:2:94511:94543	3610113	19	True				
ANR	3610900	AssignmentExpression	ret [ ret_ctr ] . offset = tmp_offset		3610113	0		=			
ANR	3610901	MemberAccess	ret [ ret_ctr ] . offset		3610113	0					
ANR	3610902	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3610903	Identifier	ret		3610113	0					
ANR	3610904	Identifier	ret_ctr		3610113	1					
ANR	3610905	Identifier	offset		3610113	1					
ANR	3610906	Identifier	tmp_offset		3610113	1					
ANR	3610907	ExpressionStatement	ret [ ret_ctr ] . size = tsize	3090:2:94547:94572	3610113	20	True				
ANR	3610908	AssignmentExpression	ret [ ret_ctr ] . size = tsize		3610113	0		=			
ANR	3610909	MemberAccess	ret [ ret_ctr ] . size		3610113	0					
ANR	3610910	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3610911	Identifier	ret		3610113	0					
ANR	3610912	Identifier	ret_ctr		3610113	1					
ANR	3610913	Identifier	size		3610113	1					
ANR	3610914	Identifier	tsize		3610113	1					
ANR	3610915	CompoundStatement		135:3:3827:3876	3610113	21					
ANR	3610916	IdentifierDeclStatement	int rest = ELF_STRING_LENGTH - 1 ;	3092:3:94581:94613	3610113	0	True				
ANR	3610917	IdentifierDecl	rest = ELF_STRING_LENGTH - 1		3610113	0					
ANR	3610918	IdentifierDeclType	int		3610113	0					
ANR	3610919	Identifier	rest		3610113	1					
ANR	3610920	AssignmentExpression	rest = ELF_STRING_LENGTH - 1		3610113	2		=			
ANR	3610921	Identifier	rest		3610113	0					
ANR	3610922	AdditiveExpression	ELF_STRING_LENGTH - 1		3610113	1		-			
ANR	3610923	Identifier	ELF_STRING_LENGTH		3610113	0					
ANR	3610924	PrimaryExpression	1		3610113	1					
ANR	3610925	IdentifierDeclStatement	int st_name = sym [ i ] . st_name ;	3093:3:94618:94646	3610113	1	True				
ANR	3610926	IdentifierDecl	st_name = sym [ i ] . st_name		3610113	0					
ANR	3610927	IdentifierDeclType	int		3610113	0					
ANR	3610928	Identifier	st_name		3610113	1					
ANR	3610929	AssignmentExpression	st_name = sym [ i ] . st_name		3610113	2		=			
ANR	3610930	Identifier	st_name		3610113	0					
ANR	3610931	MemberAccess	sym [ i ] . st_name		3610113	1					
ANR	3610932	ArrayIndexing	sym [ i ]		3610113	0					
ANR	3610933	Identifier	sym		3610113	0					
ANR	3610934	Identifier	i		3610113	1					
ANR	3610935	Identifier	st_name		3610113	1					
ANR	3610936	IdentifierDeclStatement	"int maxsize = R_MIN ( bin -> size , bin -> strtab_size ) ;"	3094:3:94651:94700	3610113	2	True				
ANR	3610937	IdentifierDecl	"maxsize = R_MIN ( bin -> size , bin -> strtab_size )"		3610113	0					
ANR	3610938	IdentifierDeclType	int		3610113	0					
ANR	3610939	Identifier	maxsize		3610113	1					
ANR	3610940	AssignmentExpression	"maxsize = R_MIN ( bin -> size , bin -> strtab_size )"		3610113	2		=			
ANR	3610941	Identifier	maxsize		3610113	0					
ANR	3610942	CallExpression	"R_MIN ( bin -> size , bin -> strtab_size )"		3610113	1					
ANR	3610943	Callee	R_MIN		3610113	0					
ANR	3610944	Identifier	R_MIN		3610113	0					
ANR	3610945	ArgumentList	bin -> size		3610113	1					
ANR	3610946	Argument	bin -> size		3610113	0					
ANR	3610947	PtrMemberAccess	bin -> size		3610113	0					
ANR	3610948	Identifier	bin		3610113	0					
ANR	3610949	Identifier	size		3610113	1					
ANR	3610950	Argument	bin -> strtab_size		3610113	1					
ANR	3610951	PtrMemberAccess	bin -> strtab_size		3610113	0					
ANR	3610952	Identifier	bin		3610113	0					
ANR	3610953	Identifier	strtab_size		3610113	1					
ANR	3610954	IfStatement	if ( st_name < 0 || st_name >= maxsize )		3610113	3					
ANR	3610955	Condition	st_name < 0 || st_name >= maxsize	3095:7:94709:94741	3610113	0	True				
ANR	3610956	OrExpression	st_name < 0 || st_name >= maxsize		3610113	0		||			
ANR	3610957	RelationalExpression	st_name < 0		3610113	0		<			
ANR	3610958	Identifier	st_name		3610113	0					
ANR	3610959	PrimaryExpression	0		3610113	1					
ANR	3610960	RelationalExpression	st_name >= maxsize		3610113	1		>=			
ANR	3610961	Identifier	st_name		3610113	0					
ANR	3610962	Identifier	maxsize		3610113	1					
ANR	3610963	CompoundStatement		136:42:3920:3920	3610113	1					
ANR	3610964	ExpressionStatement	ret [ ret_ctr ] . name [ 0 ] = 0	3096:4:94750:94774	3610113	0	True				
ANR	3610965	AssignmentExpression	ret [ ret_ctr ] . name [ 0 ] = 0		3610113	0		=			
ANR	3610966	ArrayIndexing	ret [ ret_ctr ] . name [ 0 ]		3610113	0					
ANR	3610967	MemberAccess	ret [ ret_ctr ] . name		3610113	0					
ANR	3610968	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3610969	Identifier	ret		3610113	0					
ANR	3610970	Identifier	ret_ctr		3610113	1					
ANR	3610971	Identifier	name		3610113	1					
ANR	3610972	PrimaryExpression	0		3610113	1					
ANR	3610973	PrimaryExpression	0		3610113	1					
ANR	3610974	ElseStatement	else		3610113	0					
ANR	3610975	CompoundStatement		139:4:3968:4023	3610113	0					
ANR	3610976	IdentifierDeclStatement	"const int len = __strnlen ( bin -> strtab + st_name , rest ) ;"	3098:4:94792:94847	3610113	0	True				
ANR	3610977	IdentifierDecl	"len = __strnlen ( bin -> strtab + st_name , rest )"		3610113	0					
ANR	3610978	IdentifierDeclType	const int		3610113	0					
ANR	3610979	Identifier	len		3610113	1					
ANR	3610980	AssignmentExpression	"len = __strnlen ( bin -> strtab + st_name , rest )"		3610113	2		=			
ANR	3610981	Identifier	len		3610113	0					
ANR	3610982	CallExpression	"__strnlen ( bin -> strtab + st_name , rest )"		3610113	1					
ANR	3610983	Callee	__strnlen		3610113	0					
ANR	3610984	Identifier	__strnlen		3610113	0					
ANR	3610985	ArgumentList	bin -> strtab + st_name		3610113	1					
ANR	3610986	Argument	bin -> strtab + st_name		3610113	0					
ANR	3610987	AdditiveExpression	bin -> strtab + st_name		3610113	0		+			
ANR	3610988	PtrMemberAccess	bin -> strtab		3610113	0					
ANR	3610989	Identifier	bin		3610113	0					
ANR	3610990	Identifier	strtab		3610113	1					
ANR	3610991	Identifier	st_name		3610113	1					
ANR	3610992	Argument	rest		3610113	1					
ANR	3610993	Identifier	rest		3610113	0					
ANR	3610994	ExpressionStatement	"memcpy ( ret [ ret_ctr ] . name , & bin -> strtab [ st_name ] , len )"	3099:4:94853:94907	3610113	1	True				
ANR	3610995	CallExpression	"memcpy ( ret [ ret_ctr ] . name , & bin -> strtab [ st_name ] , len )"		3610113	0					
ANR	3610996	Callee	memcpy		3610113	0					
ANR	3610997	Identifier	memcpy		3610113	0					
ANR	3610998	ArgumentList	ret [ ret_ctr ] . name		3610113	1					
ANR	3610999	Argument	ret [ ret_ctr ] . name		3610113	0					
ANR	3611000	MemberAccess	ret [ ret_ctr ] . name		3610113	0					
ANR	3611001	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611002	Identifier	ret		3610113	0					
ANR	3611003	Identifier	ret_ctr		3610113	1					
ANR	3611004	Identifier	name		3610113	1					
ANR	3611005	Argument	& bin -> strtab [ st_name ]		3610113	1					
ANR	3611006	UnaryOperationExpression	& bin -> strtab [ st_name ]		3610113	0					
ANR	3611007	UnaryOperator	&		3610113	0					
ANR	3611008	ArrayIndexing	bin -> strtab [ st_name ]		3610113	1					
ANR	3611009	PtrMemberAccess	bin -> strtab		3610113	0					
ANR	3611010	Identifier	bin		3610113	0					
ANR	3611011	Identifier	strtab		3610113	1					
ANR	3611012	Identifier	st_name		3610113	1					
ANR	3611013	Argument	len		3610113	2					
ANR	3611014	Identifier	len		3610113	0					
ANR	3611015	ExpressionStatement	ret [ ret_ctr ] . ordinal = i	3102:2:94920:94944	3610113	22	True				
ANR	3611016	AssignmentExpression	ret [ ret_ctr ] . ordinal = i		3610113	0		=			
ANR	3611017	MemberAccess	ret [ ret_ctr ] . ordinal		3610113	0					
ANR	3611018	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611019	Identifier	ret		3610113	0					
ANR	3611020	Identifier	ret_ctr		3610113	1					
ANR	3611021	Identifier	ordinal		3610113	1					
ANR	3611022	Identifier	i		3610113	1					
ANR	3611023	ExpressionStatement	ret [ ret_ctr ] . in_shdr = false	3103:2:94948:94976	3610113	23	True				
ANR	3611024	AssignmentExpression	ret [ ret_ctr ] . in_shdr = false		3610113	0		=			
ANR	3611025	MemberAccess	ret [ ret_ctr ] . in_shdr		3610113	0					
ANR	3611026	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611027	Identifier	ret		3610113	0					
ANR	3611028	Identifier	ret_ctr		3610113	1					
ANR	3611029	Identifier	in_shdr		3610113	1					
ANR	3611030	Identifier	false		3610113	1					
ANR	3611031	ExpressionStatement	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'	3104:2:94980:95027	3610113	24	True				
ANR	3611032	AssignmentExpression	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'		3610113	0		=			
ANR	3611033	ArrayIndexing	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ]		3610113	0					
ANR	3611034	MemberAccess	ret [ ret_ctr ] . name		3610113	0					
ANR	3611035	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611036	Identifier	ret		3610113	0					
ANR	3611037	Identifier	ret_ctr		3610113	1					
ANR	3611038	Identifier	name		3610113	1					
ANR	3611039	AdditiveExpression	ELF_STRING_LENGTH - 2		3610113	1		-			
ANR	3611040	Identifier	ELF_STRING_LENGTH		3610113	0					
ANR	3611041	PrimaryExpression	2		3610113	1					
ANR	3611042	PrimaryExpression	'\\0'		3610113	1					
ANR	3611043	ExpressionStatement	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ i ] )"	3105:2:95031:95086	3610113	25	True				
ANR	3611044	CallExpression	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ i ] )"		3610113	0					
ANR	3611045	Callee	fill_symbol_bind_and_type		3610113	0					
ANR	3611046	Identifier	fill_symbol_bind_and_type		3610113	0					
ANR	3611047	ArgumentList	bin		3610113	1					
ANR	3611048	Argument	bin		3610113	0					
ANR	3611049	Identifier	bin		3610113	0					
ANR	3611050	Argument	& ret [ ret_ctr ]		3610113	1					
ANR	3611051	UnaryOperationExpression	& ret [ ret_ctr ]		3610113	0					
ANR	3611052	UnaryOperator	&		3610113	0					
ANR	3611053	ArrayIndexing	ret [ ret_ctr ]		3610113	1					
ANR	3611054	Identifier	ret		3610113	0					
ANR	3611055	Identifier	ret_ctr		3610113	1					
ANR	3611056	Argument	& sym [ i ]		3610113	2					
ANR	3611057	UnaryOperationExpression	& sym [ i ]		3610113	0					
ANR	3611058	UnaryOperator	&		3610113	0					
ANR	3611059	ArrayIndexing	sym [ i ]		3610113	1					
ANR	3611060	Identifier	sym		3610113	0					
ANR	3611061	Identifier	i		3610113	1					
ANR	3611062	ExpressionStatement	ret [ ret_ctr ] . is_sht_null = is_sht_null	3106:2:95090:95128	3610113	26	True				
ANR	3611063	AssignmentExpression	ret [ ret_ctr ] . is_sht_null = is_sht_null		3610113	0		=			
ANR	3611064	MemberAccess	ret [ ret_ctr ] . is_sht_null		3610113	0					
ANR	3611065	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611066	Identifier	ret		3610113	0					
ANR	3611067	Identifier	ret_ctr		3610113	1					
ANR	3611068	Identifier	is_sht_null		3610113	1					
ANR	3611069	Identifier	is_sht_null		3610113	1					
ANR	3611070	ExpressionStatement	ret [ ret_ctr ] . is_vaddr = is_vaddr	3107:2:95132:95164	3610113	27	True				
ANR	3611071	AssignmentExpression	ret [ ret_ctr ] . is_vaddr = is_vaddr		3610113	0		=			
ANR	3611072	MemberAccess	ret [ ret_ctr ] . is_vaddr		3610113	0					
ANR	3611073	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611074	Identifier	ret		3610113	0					
ANR	3611075	Identifier	ret_ctr		3610113	1					
ANR	3611076	Identifier	is_vaddr		3610113	1					
ANR	3611077	Identifier	is_vaddr		3610113	1					
ANR	3611078	ExpressionStatement	ret [ ret_ctr ] . last = 0	3108:2:95168:95189	3610113	28	True				
ANR	3611079	AssignmentExpression	ret [ ret_ctr ] . last = 0		3610113	0		=			
ANR	3611080	MemberAccess	ret [ ret_ctr ] . last		3610113	0					
ANR	3611081	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611082	Identifier	ret		3610113	0					
ANR	3611083	Identifier	ret_ctr		3610113	1					
ANR	3611084	Identifier	last		3610113	1					
ANR	3611085	PrimaryExpression	0		3610113	1					
ANR	3611086	ExpressionStatement	ret_ctr ++	3109:2:95193:95202	3610113	29	True				
ANR	3611087	PostIncDecOperationExpression	ret_ctr ++		3610113	0					
ANR	3611088	Identifier	ret_ctr		3610113	0					
ANR	3611089	IncDec	++		3610113	1					
ANR	3611090	Label	done :	3111:0:95207:95211	3610113	32	True				
ANR	3611091	Identifier	done		3610113	0					
ANR	3611092	CompoundStatement		154:1:4436:4436	3610113	33					
ANR	3611093	ExpressionStatement	nsym = i > 0 ? i : 1	3114:2:95264:95282	3610113	0	True				
ANR	3611094	AssignmentExpression	nsym = i > 0 ? i : 1		3610113	0		=			
ANR	3611095	Identifier	nsym		3610113	0					
ANR	3611096	ConditionalExpression	i > 0 ? i : 1		3610113	1					
ANR	3611097	Condition	i > 0		3610113	0					
ANR	3611098	RelationalExpression	i > 0		3610113	0		>			
ANR	3611099	Identifier	i		3610113	0					
ANR	3611100	PrimaryExpression	0		3610113	1					
ANR	3611101	Identifier	i		3610113	1					
ANR	3611102	PrimaryExpression	1		3610113	2					
ANR	3611103	Statement	Elf_	3115:2:95286:95289	3610113	1	True				
ANR	3611104	Statement	(	3115:6:95290:95290	3610113	2	True				
ANR	3611105	Statement	Sym	3115:7:95291:95293	3610113	3	True				
ANR	3611106	Statement	)	3115:10:95294:95294	3610113	4	True				
ANR	3611107	Statement	*	3115:12:95296:95296	3610113	5	True				
ANR	3611108	Statement	temp_sym	3115:13:95297:95304	3610113	6	True				
ANR	3611109	Statement	=	3115:22:95306:95306	3610113	7	True				
ANR	3611110	Statement	(	3115:24:95308:95308	3610113	8	True				
ANR	3611111	Statement	Elf_	3115:25:95309:95312	3610113	9	True				
ANR	3611112	Statement	(	3115:29:95313:95313	3610113	10	True				
ANR	3611113	Statement	Sym	3115:30:95314:95316	3610113	11	True				
ANR	3611114	Statement	)	3115:33:95317:95317	3610113	12	True				
ANR	3611115	Statement	*	3115:35:95319:95319	3610113	13	True				
ANR	3611116	Statement	)	3115:36:95320:95320	3610113	14	True				
ANR	3611117	ExpressionStatement	"realloc ( sym , ( nsym * GROWTH_FACTOR ) * sym_size )"	3115:37:95321:95369	3610113	15	True				
ANR	3611118	CallExpression	"realloc ( sym , ( nsym * GROWTH_FACTOR ) * sym_size )"		3610113	0					
ANR	3611119	Callee	realloc		3610113	0					
ANR	3611120	Identifier	realloc		3610113	0					
ANR	3611121	ArgumentList	sym		3610113	1					
ANR	3611122	Argument	sym		3610113	0					
ANR	3611123	Identifier	sym		3610113	0					
ANR	3611124	Argument	( nsym * GROWTH_FACTOR ) * sym_size		3610113	1					
ANR	3611125	MultiplicativeExpression	( nsym * GROWTH_FACTOR ) * sym_size		3610113	0		*			
ANR	3611126	MultiplicativeExpression	nsym * GROWTH_FACTOR		3610113	0		*			
ANR	3611127	Identifier	nsym		3610113	0					
ANR	3611128	Identifier	GROWTH_FACTOR		3610113	1					
ANR	3611129	Identifier	sym_size		3610113	1					
ANR	3611130	IfStatement	if ( ! temp_sym )		3610113	16					
ANR	3611131	Condition	! temp_sym	3116:6:95377:95385	3610113	0	True				
ANR	3611132	UnaryOperationExpression	! temp_sym		3610113	0					
ANR	3611133	UnaryOperator	!		3610113	0					
ANR	3611134	Identifier	temp_sym		3610113	1					
ANR	3611135	CompoundStatement		157:17:4564:4564	3610113	1					
ANR	3611136	GotoStatement	goto beach ;	3117:3:95393:95403	3610113	0	True				
ANR	3611137	Identifier	beach		3610113	0					
ANR	3611138	ExpressionStatement	sym = temp_sym	3119:2:95411:95425	3610113	17	True				
ANR	3611139	AssignmentExpression	sym = temp_sym		3610113	0		=			
ANR	3611140	Identifier	sym		3610113	0					
ANR	3611141	Identifier	temp_sym		3610113	1					
ANR	3611142	CompoundStatement		164:2:4648:4737	3610113	34					
ANR	3611143	ExpressionStatement	ret_ctr = ret_ctr > 0 ? ret_ctr : 1	3122:2:95435:95468	3610113	0	True				
ANR	3611144	AssignmentExpression	ret_ctr = ret_ctr > 0 ? ret_ctr : 1		3610113	0		=			
ANR	3611145	Identifier	ret_ctr		3610113	0					
ANR	3611146	ConditionalExpression	ret_ctr > 0 ? ret_ctr : 1		3610113	1					
ANR	3611147	Condition	ret_ctr > 0		3610113	0					
ANR	3611148	RelationalExpression	ret_ctr > 0		3610113	0		>			
ANR	3611149	Identifier	ret_ctr		3610113	0					
ANR	3611150	PrimaryExpression	0		3610113	1					
ANR	3611151	Identifier	ret_ctr		3610113	1					
ANR	3611152	PrimaryExpression	1		3610113	2					
ANR	3611153	IdentifierDeclStatement	"RBinElfSymbol * p = ( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) ) ;"	3123:2:95472:95561	3610113	1	True				
ANR	3611154	IdentifierDecl	"* p = ( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		3610113	0					
ANR	3611155	IdentifierDeclType	RBinElfSymbol *		3610113	0					
ANR	3611156	Identifier	p		3610113	1					
ANR	3611157	AssignmentExpression	"* p = ( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		3610113	2		=			
ANR	3611158	Identifier	p		3610113	0					
ANR	3611159	CastExpression	"( RBinElfSymbol * ) realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		3610113	1					
ANR	3611160	CastTarget	RBinElfSymbol *		3610113	0					
ANR	3611161	CallExpression	"realloc ( ret , ( ret_ctr + 1 ) * sizeof ( RBinElfSymbol ) )"		3610113	1					
ANR	3611162	Callee	realloc		3610113	0					
ANR	3611163	Identifier	realloc		3610113	0					
ANR	3611164	ArgumentList	ret		3610113	1					
ANR	3611165	Argument	ret		3610113	0					
ANR	3611166	Identifier	ret		3610113	0					
ANR	3611167	Argument	( ret_ctr + 1 ) * sizeof ( RBinElfSymbol )		3610113	1					
ANR	3611168	MultiplicativeExpression	( ret_ctr + 1 ) * sizeof ( RBinElfSymbol )		3610113	0		*			
ANR	3611169	AdditiveExpression	ret_ctr + 1		3610113	0		+			
ANR	3611170	Identifier	ret_ctr		3610113	0					
ANR	3611171	PrimaryExpression	1		3610113	1					
ANR	3611172	SizeofExpression	sizeof ( RBinElfSymbol )		3610113	1					
ANR	3611173	Sizeof	sizeof		3610113	0					
ANR	3611174	SizeofOperand	RBinElfSymbol		3610113	1					
ANR	3611175	IfStatement	if ( ! p )		3610113	2					
ANR	3611176	Condition	! p	3124:6:95569:95570	3610113	0	True				
ANR	3611177	UnaryOperationExpression	! p		3610113	0					
ANR	3611178	UnaryOperator	!		3610113	0					
ANR	3611179	Identifier	p		3610113	1					
ANR	3611180	CompoundStatement		165:10:4749:4749	3610113	1					
ANR	3611181	GotoStatement	goto beach ;	3125:3:95578:95588	3610113	0	True				
ANR	3611182	Identifier	beach		3610113	0					
ANR	3611183	ExpressionStatement	ret = p	3127:2:95596:95603	3610113	3	True				
ANR	3611184	AssignmentExpression	ret = p		3610113	0		=			
ANR	3611185	Identifier	ret		3610113	0					
ANR	3611186	Identifier	p		3610113	1					
ANR	3611187	ExpressionStatement	ret [ ret_ctr ] . last = 1	3129:1:95609:95630	3610113	35	True				
ANR	3611188	AssignmentExpression	ret [ ret_ctr ] . last = 1		3610113	0		=			
ANR	3611189	MemberAccess	ret [ ret_ctr ] . last		3610113	0					
ANR	3611190	ArrayIndexing	ret [ ret_ctr ]		3610113	0					
ANR	3611191	Identifier	ret		3610113	0					
ANR	3611192	Identifier	ret_ctr		3610113	1					
ANR	3611193	Identifier	last		3610113	1					
ANR	3611194	PrimaryExpression	1		3610113	1					
ANR	3611195	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS && ! bin -> imports_by_ord_size )		3610113	36					
ANR	3611196	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS && ! bin -> imports_by_ord_size	3130:5:95637:95697	3610113	0	True				
ANR	3611197	AndExpression	type == R_BIN_ELF_IMPORT_SYMBOLS && ! bin -> imports_by_ord_size		3610113	0		&&			
ANR	3611198	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		3610113	0		==			
ANR	3611199	Identifier	type		3610113	0					
ANR	3611200	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3610113	1					
ANR	3611201	UnaryOperationExpression	! bin -> imports_by_ord_size		3610113	1					
ANR	3611202	UnaryOperator	!		3610113	0					
ANR	3611203	PtrMemberAccess	bin -> imports_by_ord_size		3610113	1					
ANR	3611204	Identifier	bin		3610113	0					
ANR	3611205	Identifier	imports_by_ord_size		3610113	1					
ANR	3611206	CompoundStatement		171:68:4876:4876	3610113	1					
ANR	3611207	ExpressionStatement	bin -> imports_by_ord_size = ret_ctr + 1	3131:2:95704:95742	3610113	0	True				
ANR	3611208	AssignmentExpression	bin -> imports_by_ord_size = ret_ctr + 1		3610113	0		=			
ANR	3611209	PtrMemberAccess	bin -> imports_by_ord_size		3610113	0					
ANR	3611210	Identifier	bin		3610113	0					
ANR	3611211	Identifier	imports_by_ord_size		3610113	1					
ANR	3611212	AdditiveExpression	ret_ctr + 1		3610113	1		+			
ANR	3611213	Identifier	ret_ctr		3610113	0					
ANR	3611214	PrimaryExpression	1		3610113	1					
ANR	3611215	IfStatement	if ( ret_ctr > 0 )		3610113	1					
ANR	3611216	Condition	ret_ctr > 0	3132:6:95750:95760	3610113	0	True				
ANR	3611217	RelationalExpression	ret_ctr > 0		3610113	0		>			
ANR	3611218	Identifier	ret_ctr		3610113	0					
ANR	3611219	PrimaryExpression	0		3610113	1					
ANR	3611220	CompoundStatement		173:19:4939:4939	3610113	1					
ANR	3611221	ExpressionStatement	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"	3133:3:95768:95849	3610113	0	True				
ANR	3611222	AssignmentExpression	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"		3610113	0		=			
ANR	3611223	PtrMemberAccess	bin -> imports_by_ord		3610113	0					
ANR	3611224	Identifier	bin		3610113	0					
ANR	3611225	Identifier	imports_by_ord		3610113	1					
ANR	3611226	CastExpression	"( RBinImport * * ) calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"		3610113	1					
ANR	3611227	CastTarget	RBinImport * *		3610113	0					
ANR	3611228	CallExpression	"calloc ( ret_ctr + 1 , sizeof ( RBinImport * ) )"		3610113	1					
ANR	3611229	Callee	calloc		3610113	0					
ANR	3611230	Identifier	calloc		3610113	0					
ANR	3611231	ArgumentList	ret_ctr + 1		3610113	1					
ANR	3611232	Argument	ret_ctr + 1		3610113	0					
ANR	3611233	AdditiveExpression	ret_ctr + 1		3610113	0		+			
ANR	3611234	Identifier	ret_ctr		3610113	0					
ANR	3611235	PrimaryExpression	1		3610113	1					
ANR	3611236	Argument	sizeof ( RBinImport * )		3610113	1					
ANR	3611237	SizeofExpression	sizeof ( RBinImport * )		3610113	0					
ANR	3611238	Sizeof	sizeof		3610113	0					
ANR	3611239	SizeofOperand	RBinImport *		3610113	1					
ANR	3611240	ElseStatement	else		3610113	0					
ANR	3611241	CompoundStatement		175:9:5036:5036	3610113	0					
ANR	3611242	ExpressionStatement	bin -> imports_by_ord = NULL	3135:3:95865:95891	3610113	0	True				
ANR	3611243	AssignmentExpression	bin -> imports_by_ord = NULL		3610113	0		=			
ANR	3611244	PtrMemberAccess	bin -> imports_by_ord		3610113	0					
ANR	3611245	Identifier	bin		3610113	0					
ANR	3611246	Identifier	imports_by_ord		3610113	1					
ANR	3611247	Identifier	NULL		3610113	1					
ANR	3611248	ElseStatement	else		3610113	0					
ANR	3611249	IfStatement	if ( type == R_BIN_ELF_ALL_SYMBOLS && ! bin -> symbols_by_ord_size && ret_ctr )		3610113	0					
ANR	3611250	Condition	type == R_BIN_ELF_ALL_SYMBOLS && ! bin -> symbols_by_ord_size && ret_ctr	3137:12:95909:95977	3610113	0	True				
ANR	3611251	AndExpression	type == R_BIN_ELF_ALL_SYMBOLS && ! bin -> symbols_by_ord_size && ret_ctr		3610113	0		&&			
ANR	3611252	EqualityExpression	type == R_BIN_ELF_ALL_SYMBOLS		3610113	0		==			
ANR	3611253	Identifier	type		3610113	0					
ANR	3611254	Identifier	R_BIN_ELF_ALL_SYMBOLS		3610113	1					
ANR	3611255	AndExpression	! bin -> symbols_by_ord_size && ret_ctr		3610113	1		&&			
ANR	3611256	UnaryOperationExpression	! bin -> symbols_by_ord_size		3610113	0					
ANR	3611257	UnaryOperator	!		3610113	0					
ANR	3611258	PtrMemberAccess	bin -> symbols_by_ord_size		3610113	1					
ANR	3611259	Identifier	bin		3610113	0					
ANR	3611260	Identifier	symbols_by_ord_size		3610113	1					
ANR	3611261	Identifier	ret_ctr		3610113	1					
ANR	3611262	CompoundStatement		178:83:5156:5156	3610113	1					
ANR	3611263	ExpressionStatement	bin -> symbols_by_ord_size = ret_ctr + 1	3138:2:95984:96022	3610113	0	True				
ANR	3611264	AssignmentExpression	bin -> symbols_by_ord_size = ret_ctr + 1		3610113	0		=			
ANR	3611265	PtrMemberAccess	bin -> symbols_by_ord_size		3610113	0					
ANR	3611266	Identifier	bin		3610113	0					
ANR	3611267	Identifier	symbols_by_ord_size		3610113	1					
ANR	3611268	AdditiveExpression	ret_ctr + 1		3610113	1		+			
ANR	3611269	Identifier	ret_ctr		3610113	0					
ANR	3611270	PrimaryExpression	1		3610113	1					
ANR	3611271	IfStatement	if ( ret_ctr > 0 )		3610113	1					
ANR	3611272	Condition	ret_ctr > 0	3139:6:96030:96040	3610113	0	True				
ANR	3611273	RelationalExpression	ret_ctr > 0		3610113	0		>			
ANR	3611274	Identifier	ret_ctr		3610113	0					
ANR	3611275	PrimaryExpression	0		3610113	1					
ANR	3611276	CompoundStatement		180:19:5219:5219	3610113	1					
ANR	3611277	ExpressionStatement	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"	3140:3:96048:96129	3610113	0	True				
ANR	3611278	AssignmentExpression	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"		3610113	0		=			
ANR	3611279	PtrMemberAccess	bin -> symbols_by_ord		3610113	0					
ANR	3611280	Identifier	bin		3610113	0					
ANR	3611281	Identifier	symbols_by_ord		3610113	1					
ANR	3611282	CastExpression	"( RBinSymbol * * ) calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"		3610113	1					
ANR	3611283	CastTarget	RBinSymbol * *		3610113	0					
ANR	3611284	CallExpression	"calloc ( ret_ctr + 1 , sizeof ( RBinSymbol * ) )"		3610113	1					
ANR	3611285	Callee	calloc		3610113	0					
ANR	3611286	Identifier	calloc		3610113	0					
ANR	3611287	ArgumentList	ret_ctr + 1		3610113	1					
ANR	3611288	Argument	ret_ctr + 1		3610113	0					
ANR	3611289	AdditiveExpression	ret_ctr + 1		3610113	0		+			
ANR	3611290	Identifier	ret_ctr		3610113	0					
ANR	3611291	PrimaryExpression	1		3610113	1					
ANR	3611292	Argument	sizeof ( RBinSymbol * )		3610113	1					
ANR	3611293	SizeofExpression	sizeof ( RBinSymbol * )		3610113	0					
ANR	3611294	Sizeof	sizeof		3610113	0					
ANR	3611295	SizeofOperand	RBinSymbol *		3610113	1					
ANR	3611296	ElseStatement	else		3610113	0					
ANR	3611297	CompoundStatement		182:9:5316:5316	3610113	0					
ANR	3611298	ExpressionStatement	bin -> symbols_by_ord = NULL	3142:3:96145:96171	3610113	0	True				
ANR	3611299	AssignmentExpression	bin -> symbols_by_ord = NULL		3610113	0		=			
ANR	3611300	PtrMemberAccess	bin -> symbols_by_ord		3610113	0					
ANR	3611301	Identifier	bin		3610113	0					
ANR	3611302	Identifier	symbols_by_ord		3610113	1					
ANR	3611303	Identifier	NULL		3610113	1					
ANR	3611304	ExpressionStatement	free ( sym )	3145:1:96181:96191	3610113	37	True				
ANR	3611305	CallExpression	free ( sym )		3610113	0					
ANR	3611306	Callee	free		3610113	0					
ANR	3611307	Identifier	free		3610113	0					
ANR	3611308	ArgumentList	sym		3610113	1					
ANR	3611309	Argument	sym		3610113	0					
ANR	3611310	Identifier	sym		3610113	0					
ANR	3611311	ReturnStatement	return ret ;	3146:1:96194:96204	3610113	38	True				
ANR	3611312	Identifier	ret		3610113	0					
ANR	3611313	Label	beach :	3147:0:96206:96211	3610113	39	True				
ANR	3611314	Identifier	beach		3610113	0					
ANR	3611315	ExpressionStatement	free ( sym )	3148:1:96214:96224	3610113	40	True				
ANR	3611316	CallExpression	free ( sym )		3610113	0					
ANR	3611317	Callee	free		3610113	0					
ANR	3611318	Identifier	free		3610113	0					
ANR	3611319	ArgumentList	sym		3610113	1					
ANR	3611320	Argument	sym		3610113	0					
ANR	3611321	Identifier	sym		3610113	0					
ANR	3611322	ExpressionStatement	free ( ret )	3149:1:96227:96237	3610113	41	True				
ANR	3611323	CallExpression	free ( ret )		3610113	0					
ANR	3611324	Callee	free		3610113	0					
ANR	3611325	Identifier	free		3610113	0					
ANR	3611326	ArgumentList	ret		3610113	1					
ANR	3611327	Argument	ret		3610113	0					
ANR	3611328	Identifier	ret		3610113	0					
ANR	3611329	ReturnStatement	return NULL ;	3150:1:96240:96251	3610113	42	True				
ANR	3611330	Identifier	NULL		3610113	0					
ANR	3611331	ReturnType	static RBinElfSymbol *		3610113	1					
ANR	3611332	Identifier	get_symbols_from_phdr		3610113	2					
ANR	3611333	ParameterList	"ELFOBJ * bin , int type"		3610113	3					
ANR	3611334	Parameter	ELFOBJ * bin	2960:44:90800:90810	3610113	0	True				
ANR	3611335	ParameterType	ELFOBJ *		3610113	0					
ANR	3611336	Identifier	bin		3610113	1					
ANR	3611337	Parameter	int type	2960:57:90813:90820	3610113	1	True				
ANR	3611338	ParameterType	int		3610113	0					
ANR	3611339	Identifier	type		3610113	1					
ANR	3611340	CFGEntryNode	ENTRY		3610113		True				
ANR	3611341	CFGExitNode	EXIT		3610113		True				
ANR	3611342	Symbol	sym [ i ] . st_other		3610113						
ANR	3611343	Symbol	bin -> b		3610113						
ANR	3611344	Symbol	bin -> dyn_buf [ j ] . d_un . d_ptr		3610113						
ANR	3611345	Symbol	bin		3610113						
ANR	3611346	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		3610113						
ANR	3611347	Symbol	bin -> phdr		3610113						
ANR	3611348	Symbol	sym [ i ] . st_value		3610113						
ANR	3611349	Symbol	type		3610113						
ANR	3611350	Symbol	READ64		3610113						
ANR	3611351	Symbol	sym_size		3610113						
ANR	3611352	Symbol	len		3610113						
ANR	3611353	Symbol	capacity2		3610113						
ANR	3611354	Symbol	bin -> ehdr		3610113						
ANR	3611355	Symbol	capacity1		3610113						
ANR	3611356	Symbol	R_BIN_TYPE_UNKNOWN_STR		3610113						
ANR	3611357	Symbol	addr_sym_table		3610113						
ANR	3611358	Symbol	bin -> strtab_size		3610113						
ANR	3611359	Symbol	bin -> dyn_buf		3610113						
ANR	3611360	Symbol	sym [ i ] . st_name		3610113						
ANR	3611361	Symbol	bin -> ehdr . e_phnum		3610113						
ANR	3611362	Symbol	tmp_offset		3610113						
ANR	3611363	Symbol	ret [ ret_ctr ] . size		3610113						
ANR	3611364	Symbol	size		3610113						
ANR	3611365	Symbol	ret [ ret_ctr ] . is_sht_null		3610113						
ANR	3611366	Symbol	maxsize		3610113						
ANR	3611367	Symbol	is_sht_null		3610113						
ANR	3611368	Symbol	ret [ ret_ctr ] . offset		3610113						
ANR	3611369	Symbol	* ret [ ret_ctr ] . name		3610113						
ANR	3611370	Symbol	* ret_ctr		3610113						
ANR	3611371	Symbol	ret [ ret_ctr ] . in_shdr		3610113						
ANR	3611372	Symbol	bin -> dyn_buf [ j ] . d_un . d_val		3610113						
ANR	3611373	Symbol	* bin		3610113						
ANR	3611374	Symbol	bin -> symbols_by_ord		3610113						
ANR	3611375	Symbol	R_BIN_BIND_UNKNOWN_STR		3610113						
ANR	3611376	Symbol	bin -> dyn_buf [ j ] . d_tag		3610113						
ANR	3611377	Symbol	type2str		3610113						
ANR	3611378	Symbol	* * bin		3610113						
ANR	3611379	Symbol	SHT_NULL		3610113						
ANR	3611380	Symbol	UT32_MUL		3610113						
ANR	3611381	Symbol	bin -> imports_by_ord		3610113						
ANR	3611382	Symbol	st_name		3610113						
ANR	3611383	Symbol	i		3610113						
ANR	3611384	Symbol	j		3610113						
ANR	3611385	Symbol	R_MIN		3610113						
ANR	3611386	Symbol	& size		3610113						
ANR	3611387	Symbol	p		3610113						
ANR	3611388	Symbol	r		3610113						
ANR	3611389	Symbol	s		3610113						
ANR	3611390	Symbol	sym [ i ] . st_info		3610113						
ANR	3611391	Symbol	* ELF_STRING_LENGTH		3610113						
ANR	3611392	Symbol	__strnlen		3610113						
ANR	3611393	Symbol	r_bin_elf_v2p_new		3610113						
ANR	3611394	Symbol	get_import_addr		3610113						
ANR	3611395	Symbol	bin -> size		3610113						
ANR	3611396	Symbol	is_vaddr		3610113						
ANR	3611397	Symbol	ret [ ret_ctr ] . name		3610113						
ANR	3611398	Symbol	temp_ret		3610113						
ANR	3611399	Symbol	realloc		3610113						
ANR	3611400	Symbol	bind2str		3610113						
ANR	3611401	Symbol	toffset		3610113						
ANR	3611402	Symbol	ret [ ret_ctr ] . last		3610113						
ANR	3611403	Symbol	* * ret_ctr		3610113						
ANR	3611404	Symbol	bin -> imports_by_ord_size		3610113						
ANR	3611405	Symbol	* bin -> dyn_buf		3610113						
ANR	3611406	Symbol	r_bin_elf_v2p		3610113						
ANR	3611407	Symbol	bin -> strtab		3610113						
ANR	3611408	Symbol	ret		3610113						
ANR	3611409	Symbol	strcmp		3610113						
ANR	3611410	Symbol	NULL		3610113						
ANR	3611411	Symbol	Sym		3610113						
ANR	3611412	Symbol	bin -> dyn_entries		3610113						
ANR	3611413	Symbol	nsym		3610113						
ANR	3611414	Symbol	R_BIN_ELF_ALL_SYMBOLS		3610113						
ANR	3611415	Symbol	READ32		3610113						
ANR	3611416	Symbol	ELF_STRING_LENGTH		3610113						
ANR	3611417	Symbol	sym [ i ] . st_size		3610113						
ANR	3611418	Symbol	* sym		3610113						
ANR	3611419	Symbol	true		3610113						
ANR	3611420	Symbol	READ8		3610113						
ANR	3611421	Symbol	sym		3610113						
ANR	3611422	Symbol	ret [ ret_ctr ] . ordinal		3610113						
ANR	3611423	Symbol	calloc		3610113						
ANR	3611424	Symbol	* ret		3610113						
ANR	3611425	Symbol	ret [ ret_ctr ] . is_vaddr		3610113						
ANR	3611426	Symbol	sym [ i ] . st_shndx		3610113						
ANR	3611427	Symbol	UT64_MAX		3610113						
ANR	3611428	Symbol	bin -> symbols_by_ord_size		3610113						
ANR	3611429	Symbol	Elf_		3610113						
ANR	3611430	Symbol	GROWTH_FACTOR		3610113						
ANR	3611431	Symbol	rest		3610113						
ANR	3611432	Symbol	READ16		3610113						
ANR	3611433	Symbol	false		3610113						
ANR	3611434	Symbol	temp_sym		3610113						
ANR	3611435	Symbol	bin -> dyn_buf [ j ] . d_un		3610113						
ANR	3611436	Symbol	ret_ctr		3610113						
ANR	3611437	Symbol	tsize		3610113						
ANR	3611438	Symbol	* i		3610113						
ANR	3611439	Symbol	* j		3610113						
ANR	3611440	Symbol	* * ret		3610113						
ANR	3611441	Symbol	r_buf_read_at		3610113						
ANR	3611442	Function	r_bin_elf_get_phdr_symbols	3153:22:96278:96514							
ANR	3611443	FunctionDef	r_bin_elf_get_phdr_symbols (ELFOBJ * bin)		3611442	0					
ANR	3611444	CompoundStatement		3153:68:96324:96514	3611442	0					
ANR	3611445	IfStatement	if ( ! bin )		3611442	0					
ANR	3611446	Condition	! bin	3154:5:96331:96334	3611442	0	True				
ANR	3611447	UnaryOperationExpression	! bin		3611442	0					
ANR	3611448	UnaryOperator	!		3611442	0					
ANR	3611449	Identifier	bin		3611442	1					
ANR	3611450	CompoundStatement		2:11:12:12	3611442	1					
ANR	3611451	ReturnStatement	return NULL ;	3155:2:96341:96352	3611442	0	True				
ANR	3611452	Identifier	NULL		3611442	0					
ANR	3611453	IfStatement	if ( bin -> phdr_symbols )		3611442	1					
ANR	3611454	Condition	bin -> phdr_symbols	3157:5:96362:96378	3611442	0	True				
ANR	3611455	PtrMemberAccess	bin -> phdr_symbols		3611442	0					
ANR	3611456	Identifier	bin		3611442	0					
ANR	3611457	Identifier	phdr_symbols		3611442	1					
ANR	3611458	CompoundStatement		5:24:56:56	3611442	1					
ANR	3611459	ReturnStatement	return bin -> phdr_symbols ;	3158:2:96385:96409	3611442	0	True				
ANR	3611460	PtrMemberAccess	bin -> phdr_symbols		3611442	0					
ANR	3611461	Identifier	bin		3611442	0					
ANR	3611462	Identifier	phdr_symbols		3611442	1					
ANR	3611463	ExpressionStatement	"bin -> phdr_symbols = get_symbols_from_phdr ( bin , R_BIN_ELF_ALL_SYMBOLS )"	3160:1:96415:96485	3611442	2	True				
ANR	3611464	AssignmentExpression	"bin -> phdr_symbols = get_symbols_from_phdr ( bin , R_BIN_ELF_ALL_SYMBOLS )"		3611442	0		=			
ANR	3611465	PtrMemberAccess	bin -> phdr_symbols		3611442	0					
ANR	3611466	Identifier	bin		3611442	0					
ANR	3611467	Identifier	phdr_symbols		3611442	1					
ANR	3611468	CallExpression	"get_symbols_from_phdr ( bin , R_BIN_ELF_ALL_SYMBOLS )"		3611442	1					
ANR	3611469	Callee	get_symbols_from_phdr		3611442	0					
ANR	3611470	Identifier	get_symbols_from_phdr		3611442	0					
ANR	3611471	ArgumentList	bin		3611442	1					
ANR	3611472	Argument	bin		3611442	0					
ANR	3611473	Identifier	bin		3611442	0					
ANR	3611474	Argument	R_BIN_ELF_ALL_SYMBOLS		3611442	1					
ANR	3611475	Identifier	R_BIN_ELF_ALL_SYMBOLS		3611442	0					
ANR	3611476	ReturnStatement	return bin -> phdr_symbols ;	3161:1:96488:96512	3611442	3	True				
ANR	3611477	PtrMemberAccess	bin -> phdr_symbols		3611442	0					
ANR	3611478	Identifier	bin		3611442	0					
ANR	3611479	Identifier	phdr_symbols		3611442	1					
ANR	3611480	ReturnType	Elf_		3611442	1					
ANR	3611481	Identifier	( r_bin_elf_get_phdr_symbols )		3611442	2					
ANR	3611482	Identifier	r_bin_elf_get_phdr_symbols		3611442	3					
ANR	3611483	ParameterList	ELFOBJ * bin		3611442	4					
ANR	3611484	Parameter	ELFOBJ * bin	3153:55:96311:96321	3611442	0	True				
ANR	3611485	ParameterType	ELFOBJ *		3611442	0					
ANR	3611486	Identifier	bin		3611442	1					
ANR	3611487	CFGEntryNode	ENTRY		3611442		True				
ANR	3611488	CFGExitNode	EXIT		3611442		True				
ANR	3611489	Symbol	NULL		3611442						
ANR	3611490	Symbol	get_symbols_from_phdr		3611442						
ANR	3611491	Symbol	bin		3611442						
ANR	3611492	Symbol	bin -> phdr_symbols		3611442						
ANR	3611493	Symbol	R_BIN_ELF_ALL_SYMBOLS		3611442						
ANR	3611494	Symbol	* bin		3611442						
ANR	3611495	Function	r_bin_elf_get_phdr_imports	3164:22:96539:96778							
ANR	3611496	FunctionDef	r_bin_elf_get_phdr_imports (ELFOBJ * bin)		3611495	0					
ANR	3611497	CompoundStatement		3164:68:96585:96778	3611495	0					
ANR	3611498	IfStatement	if ( ! bin )		3611495	0					
ANR	3611499	Condition	! bin	3165:5:96592:96595	3611495	0	True				
ANR	3611500	UnaryOperationExpression	! bin		3611495	0					
ANR	3611501	UnaryOperator	!		3611495	0					
ANR	3611502	Identifier	bin		3611495	1					
ANR	3611503	CompoundStatement		2:11:12:12	3611495	1					
ANR	3611504	ReturnStatement	return NULL ;	3166:2:96602:96613	3611495	0	True				
ANR	3611505	Identifier	NULL		3611495	0					
ANR	3611506	IfStatement	if ( bin -> phdr_imports )		3611495	1					
ANR	3611507	Condition	bin -> phdr_imports	3168:5:96623:96639	3611495	0	True				
ANR	3611508	PtrMemberAccess	bin -> phdr_imports		3611495	0					
ANR	3611509	Identifier	bin		3611495	0					
ANR	3611510	Identifier	phdr_imports		3611495	1					
ANR	3611511	CompoundStatement		5:24:56:56	3611495	1					
ANR	3611512	ReturnStatement	return bin -> phdr_imports ;	3169:2:96646:96670	3611495	0	True				
ANR	3611513	PtrMemberAccess	bin -> phdr_imports		3611495	0					
ANR	3611514	Identifier	bin		3611495	0					
ANR	3611515	Identifier	phdr_imports		3611495	1					
ANR	3611516	ExpressionStatement	"bin -> phdr_imports = get_symbols_from_phdr ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"	3171:1:96676:96749	3611495	2	True				
ANR	3611517	AssignmentExpression	"bin -> phdr_imports = get_symbols_from_phdr ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		3611495	0		=			
ANR	3611518	PtrMemberAccess	bin -> phdr_imports		3611495	0					
ANR	3611519	Identifier	bin		3611495	0					
ANR	3611520	Identifier	phdr_imports		3611495	1					
ANR	3611521	CallExpression	"get_symbols_from_phdr ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		3611495	1					
ANR	3611522	Callee	get_symbols_from_phdr		3611495	0					
ANR	3611523	Identifier	get_symbols_from_phdr		3611495	0					
ANR	3611524	ArgumentList	bin		3611495	1					
ANR	3611525	Argument	bin		3611495	0					
ANR	3611526	Identifier	bin		3611495	0					
ANR	3611527	Argument	R_BIN_ELF_IMPORT_SYMBOLS		3611495	1					
ANR	3611528	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3611495	0					
ANR	3611529	ReturnStatement	return bin -> phdr_imports ;	3172:1:96752:96776	3611495	3	True				
ANR	3611530	PtrMemberAccess	bin -> phdr_imports		3611495	0					
ANR	3611531	Identifier	bin		3611495	0					
ANR	3611532	Identifier	phdr_imports		3611495	1					
ANR	3611533	ReturnType	Elf_		3611495	1					
ANR	3611534	Identifier	( r_bin_elf_get_phdr_imports )		3611495	2					
ANR	3611535	Identifier	r_bin_elf_get_phdr_imports		3611495	3					
ANR	3611536	ParameterList	ELFOBJ * bin		3611495	4					
ANR	3611537	Parameter	ELFOBJ * bin	3164:55:96572:96582	3611495	0	True				
ANR	3611538	ParameterType	ELFOBJ *		3611495	0					
ANR	3611539	Identifier	bin		3611495	1					
ANR	3611540	CFGEntryNode	ENTRY		3611495		True				
ANR	3611541	CFGExitNode	EXIT		3611495		True				
ANR	3611542	Symbol	NULL		3611495						
ANR	3611543	Symbol	bin -> phdr_imports		3611495						
ANR	3611544	Symbol	get_symbols_from_phdr		3611495						
ANR	3611545	Symbol	bin		3611495						
ANR	3611546	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		3611495						
ANR	3611547	Symbol	* bin		3611495						
ANR	3611548	Function	get_phdr_symbols	3175:22:96803:96981							
ANR	3611549	FunctionDef	"get_phdr_symbols (ELFOBJ * bin , int type)"		3611548	0					
ANR	3611550	CompoundStatement		3175:68:96849:96981	3611548	0					
ANR	3611551	ReturnStatement	return ( type != R_BIN_ELF_IMPORT_SYMBOLS ) ? Elf_ ( r_bin_elf_get_phdr_symbols ) ( bin ) : Elf_ ( r_bin_elf_get_phdr_imports ) ( bin ) ;	3176:1:96852:96979	3611548	0	True				
ANR	3611552	ConditionalExpression	( type != R_BIN_ELF_IMPORT_SYMBOLS ) ? Elf_ ( r_bin_elf_get_phdr_symbols ) ( bin ) : Elf_ ( r_bin_elf_get_phdr_imports ) ( bin )		3611548	0					
ANR	3611553	Condition	type != R_BIN_ELF_IMPORT_SYMBOLS		3611548	0					
ANR	3611554	EqualityExpression	type != R_BIN_ELF_IMPORT_SYMBOLS		3611548	0		!=			
ANR	3611555	Identifier	type		3611548	0					
ANR	3611556	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3611548	1					
ANR	3611557	CallExpression	Elf_ ( r_bin_elf_get_phdr_symbols ) ( bin )		3611548	1					
ANR	3611558	Callee	Elf_ ( r_bin_elf_get_phdr_symbols )		3611548	0					
ANR	3611559	CallExpression	Elf_ ( r_bin_elf_get_phdr_symbols )		3611548	0					
ANR	3611560	Callee	Elf_		3611548	0					
ANR	3611561	Identifier	Elf_		3611548	0					
ANR	3611562	ArgumentList	r_bin_elf_get_phdr_symbols		3611548	1					
ANR	3611563	Argument	r_bin_elf_get_phdr_symbols		3611548	0					
ANR	3611564	Identifier	r_bin_elf_get_phdr_symbols		3611548	0					
ANR	3611565	ArgumentList	bin		3611548	1					
ANR	3611566	Argument	bin		3611548	0					
ANR	3611567	Identifier	bin		3611548	0					
ANR	3611568	CallExpression	Elf_ ( r_bin_elf_get_phdr_imports ) ( bin )		3611548	2					
ANR	3611569	Callee	Elf_ ( r_bin_elf_get_phdr_imports )		3611548	0					
ANR	3611570	CallExpression	Elf_ ( r_bin_elf_get_phdr_imports )		3611548	0					
ANR	3611571	Callee	Elf_		3611548	0					
ANR	3611572	Identifier	Elf_		3611548	0					
ANR	3611573	ArgumentList	r_bin_elf_get_phdr_imports		3611548	1					
ANR	3611574	Argument	r_bin_elf_get_phdr_imports		3611548	0					
ANR	3611575	Identifier	r_bin_elf_get_phdr_imports		3611548	0					
ANR	3611576	ArgumentList	bin		3611548	1					
ANR	3611577	Argument	bin		3611548	0					
ANR	3611578	Identifier	bin		3611548	0					
ANR	3611579	ReturnType	Elf_		3611548	1					
ANR	3611580	Identifier	( get_phdr_symbols )		3611548	2					
ANR	3611581	Identifier	get_phdr_symbols		3611548	3					
ANR	3611582	ParameterList	"ELFOBJ * bin , int type"		3611548	4					
ANR	3611583	Parameter	ELFOBJ * bin	3175:45:96826:96836	3611548	0	True				
ANR	3611584	ParameterType	ELFOBJ *		3611548	0					
ANR	3611585	Identifier	bin		3611548	1					
ANR	3611586	Parameter	int type	3175:58:96839:96846	3611548	1	True				
ANR	3611587	ParameterType	int		3611548	0					
ANR	3611588	Identifier	type		3611548	1					
ANR	3611589	CFGEntryNode	ENTRY		3611548		True				
ANR	3611590	CFGExitNode	EXIT		3611548		True				
ANR	3611591	Symbol	Elf_		3611548						
ANR	3611592	Symbol	r_bin_elf_get_phdr_symbols		3611548						
ANR	3611593	Symbol	bin		3611548						
ANR	3611594	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		3611548						
ANR	3611595	Symbol	r_bin_elf_get_phdr_imports		3611548						
ANR	3611596	Symbol	type		3611548						
ANR	3611597	Function	fix_symbols	3181:0:96984:98289							
ANR	3611598	FunctionDef	"fix_symbols (ELFOBJ * bin , int nsym , int type , RBinElfSymbol * * sym)"		3611597	0					
ANR	3611599	CompoundStatement		3181:83:97067:98289	3611597	0					
ANR	3611600	IdentifierDeclStatement	int count = 0 ;	3182:1:97070:97083	3611597	0	True				
ANR	3611601	IdentifierDecl	count = 0		3611597	0					
ANR	3611602	IdentifierDeclType	int		3611597	0					
ANR	3611603	Identifier	count		3611597	1					
ANR	3611604	AssignmentExpression	count = 0		3611597	2		=			
ANR	3611605	Identifier	count		3611597	0					
ANR	3611606	PrimaryExpression	0		3611597	1					
ANR	3611607	IdentifierDeclStatement	RBinElfSymbol * ret = * sym ;	3183:1:97086:97111	3611597	1	True				
ANR	3611608	IdentifierDecl	* ret = * sym		3611597	0					
ANR	3611609	IdentifierDeclType	RBinElfSymbol *		3611597	0					
ANR	3611610	Identifier	ret		3611597	1					
ANR	3611611	AssignmentExpression	* ret = * sym		3611597	2		=			
ANR	3611612	Identifier	ret		3611597	0					
ANR	3611613	UnaryOperationExpression	* sym		3611597	1					
ANR	3611614	UnaryOperator	*		3611597	0					
ANR	3611615	Identifier	sym		3611597	1					
ANR	3611616	IdentifierDeclStatement	"RBinElfSymbol * phdr_symbols = Elf_ ( get_phdr_symbols ) ( bin , type ) ;"	3184:1:97114:97178	3611597	2	True				
ANR	3611617	IdentifierDecl	"* phdr_symbols = Elf_ ( get_phdr_symbols ) ( bin , type )"		3611597	0					
ANR	3611618	IdentifierDeclType	RBinElfSymbol *		3611597	0					
ANR	3611619	Identifier	phdr_symbols		3611597	1					
ANR	3611620	AssignmentExpression	"* phdr_symbols = Elf_ ( get_phdr_symbols ) ( bin , type )"		3611597	2		=			
ANR	3611621	Identifier	phdr_symbols		3611597	0					
ANR	3611622	CallExpression	"Elf_ ( get_phdr_symbols ) ( bin , type )"		3611597	1					
ANR	3611623	Callee	Elf_ ( get_phdr_symbols )		3611597	0					
ANR	3611624	CallExpression	Elf_ ( get_phdr_symbols )		3611597	0					
ANR	3611625	Callee	Elf_		3611597	0					
ANR	3611626	Identifier	Elf_		3611597	0					
ANR	3611627	ArgumentList	get_phdr_symbols		3611597	1					
ANR	3611628	Argument	get_phdr_symbols		3611597	0					
ANR	3611629	Identifier	get_phdr_symbols		3611597	0					
ANR	3611630	ArgumentList	bin		3611597	1					
ANR	3611631	Argument	bin		3611597	0					
ANR	3611632	Identifier	bin		3611597	0					
ANR	3611633	Argument	type		3611597	1					
ANR	3611634	Identifier	type		3611597	0					
ANR	3611635	IdentifierDeclStatement	"RBinElfSymbol * tmp , * p ;"	3185:1:97181:97203	3611597	3	True				
ANR	3611636	IdentifierDecl	* tmp		3611597	0					
ANR	3611637	IdentifierDeclType	RBinElfSymbol *		3611597	0					
ANR	3611638	Identifier	tmp		3611597	1					
ANR	3611639	IdentifierDecl	* p		3611597	1					
ANR	3611640	IdentifierDeclType	RBinElfSymbol *		3611597	0					
ANR	3611641	Identifier	p		3611597	1					
ANR	3611642	IfStatement	if ( phdr_symbols )		3611597	4					
ANR	3611643	Condition	phdr_symbols	3186:5:97210:97221	3611597	0	True				
ANR	3611644	Identifier	phdr_symbols		3611597	0					
ANR	3611645	CompoundStatement		7:2:160:182	3611597	1					
ANR	3611646	IdentifierDeclStatement	RBinElfSymbol * d = ret ;	3187:2:97228:97250	3611597	0	True				
ANR	3611647	IdentifierDecl	* d = ret		3611597	0					
ANR	3611648	IdentifierDeclType	RBinElfSymbol *		3611597	0					
ANR	3611649	Identifier	d		3611597	1					
ANR	3611650	AssignmentExpression	* d = ret		3611597	2		=			
ANR	3611651	Identifier	ret		3611597	0					
ANR	3611652	Identifier	ret		3611597	1					
ANR	3611653	WhileStatement	while ( ! d -> last )		3611597	1					
ANR	3611654	Condition	! d -> last	3188:9:97261:97268	3611597	0	True				
ANR	3611655	UnaryOperationExpression	! d -> last		3611597	0					
ANR	3611656	UnaryOperator	!		3611597	0					
ANR	3611657	PtrMemberAccess	d -> last		3611597	1					
ANR	3611658	Identifier	d		3611597	0					
ANR	3611659	Identifier	last		3611597	1					
ANR	3611660	CompoundStatement		8:19:203:203	3611597	1					
ANR	3611661	ExpressionStatement	p = phdr_symbols	3190:3:97304:97320	3611597	0	True				
ANR	3611662	AssignmentExpression	p = phdr_symbols		3611597	0		=			
ANR	3611663	Identifier	p		3611597	0					
ANR	3611664	Identifier	phdr_symbols		3611597	1					
ANR	3611665	WhileStatement	while ( ! p -> last )		3611597	1					
ANR	3611666	Condition	! p -> last	3191:10:97332:97339	3611597	0	True				
ANR	3611667	UnaryOperationExpression	! p -> last		3611597	0					
ANR	3611668	UnaryOperator	!		3611597	0					
ANR	3611669	PtrMemberAccess	p -> last		3611597	1					
ANR	3611670	Identifier	p		3611597	0					
ANR	3611671	Identifier	last		3611597	1					
ANR	3611672	CompoundStatement		11:20:274:274	3611597	1					
ANR	3611673	IfStatement	if ( d -> offset == p -> offset || p -> ordinal == d -> ordinal )		3611597	0					
ANR	3611674	Condition	d -> offset == p -> offset || p -> ordinal == d -> ordinal	3192:8:97352:97401	3611597	0	True				
ANR	3611675	OrExpression	d -> offset == p -> offset || p -> ordinal == d -> ordinal		3611597	0		||			
ANR	3611676	EqualityExpression	d -> offset == p -> offset		3611597	0		==			
ANR	3611677	PtrMemberAccess	d -> offset		3611597	0					
ANR	3611678	Identifier	d		3611597	0					
ANR	3611679	Identifier	offset		3611597	1					
ANR	3611680	PtrMemberAccess	p -> offset		3611597	1					
ANR	3611681	Identifier	p		3611597	0					
ANR	3611682	Identifier	offset		3611597	1					
ANR	3611683	EqualityExpression	p -> ordinal == d -> ordinal		3611597	1		==			
ANR	3611684	PtrMemberAccess	p -> ordinal		3611597	0					
ANR	3611685	Identifier	p		3611597	0					
ANR	3611686	Identifier	ordinal		3611597	1					
ANR	3611687	PtrMemberAccess	d -> ordinal		3611597	1					
ANR	3611688	Identifier	d		3611597	0					
ANR	3611689	Identifier	ordinal		3611597	1					
ANR	3611690	CompoundStatement		12:60:336:336	3611597	1					
ANR	3611691	ExpressionStatement	p -> in_shdr = true	3193:5:97411:97428	3611597	0	True				
ANR	3611692	AssignmentExpression	p -> in_shdr = true		3611597	0		=			
ANR	3611693	PtrMemberAccess	p -> in_shdr		3611597	0					
ANR	3611694	Identifier	p		3611597	0					
ANR	3611695	Identifier	in_shdr		3611597	1					
ANR	3611696	Identifier	true		3611597	1					
ANR	3611697	IfStatement	"if ( * p -> name && * d -> name && r_str_startswith ( d -> name , ""$"" ) )"		3611597	1					
ANR	3611698	Condition	"* p -> name && * d -> name && r_str_startswith ( d -> name , ""$"" )"	3194:9:97439:97493	3611597	0	True				
ANR	3611699	AndExpression	"* p -> name && * d -> name && r_str_startswith ( d -> name , ""$"" )"		3611597	0		&&			
ANR	3611700	UnaryOperationExpression	* p -> name		3611597	0					
ANR	3611701	UnaryOperator	*		3611597	0					
ANR	3611702	PtrMemberAccess	p -> name		3611597	1					
ANR	3611703	Identifier	p		3611597	0					
ANR	3611704	Identifier	name		3611597	1					
ANR	3611705	AndExpression	"* d -> name && r_str_startswith ( d -> name , ""$"" )"		3611597	1		&&			
ANR	3611706	UnaryOperationExpression	* d -> name		3611597	0					
ANR	3611707	UnaryOperator	*		3611597	0					
ANR	3611708	PtrMemberAccess	d -> name		3611597	1					
ANR	3611709	Identifier	d		3611597	0					
ANR	3611710	Identifier	name		3611597	1					
ANR	3611711	CallExpression	"r_str_startswith ( d -> name , ""$"" )"		3611597	1					
ANR	3611712	Callee	r_str_startswith		3611597	0					
ANR	3611713	Identifier	r_str_startswith		3611597	0					
ANR	3611714	ArgumentList	d -> name		3611597	1					
ANR	3611715	Argument	d -> name		3611597	0					
ANR	3611716	PtrMemberAccess	d -> name		3611597	0					
ANR	3611717	Identifier	d		3611597	0					
ANR	3611718	Identifier	name		3611597	1					
ANR	3611719	Argument	"""$"""		3611597	1					
ANR	3611720	PrimaryExpression	"""$"""		3611597	0					
ANR	3611721	CompoundStatement		14:66:428:428	3611597	1					
ANR	3611722	ExpressionStatement	"strcpy ( d -> name , p -> name )"	3195:6:97504:97529	3611597	0	True				
ANR	3611723	CallExpression	"strcpy ( d -> name , p -> name )"		3611597	0					
ANR	3611724	Callee	strcpy		3611597	0					
ANR	3611725	Identifier	strcpy		3611597	0					
ANR	3611726	ArgumentList	d -> name		3611597	1					
ANR	3611727	Argument	d -> name		3611597	0					
ANR	3611728	PtrMemberAccess	d -> name		3611597	0					
ANR	3611729	Identifier	d		3611597	0					
ANR	3611730	Identifier	name		3611597	1					
ANR	3611731	Argument	p -> name		3611597	1					
ANR	3611732	PtrMemberAccess	p -> name		3611597	0					
ANR	3611733	Identifier	p		3611597	0					
ANR	3611734	Identifier	name		3611597	1					
ANR	3611735	ExpressionStatement	p ++	3198:4:97548:97551	3611597	1	True				
ANR	3611736	PostIncDecOperationExpression	p ++		3611597	0					
ANR	3611737	Identifier	p		3611597	0					
ANR	3611738	IncDec	++		3611597	1					
ANR	3611739	ExpressionStatement	d ++	3200:3:97561:97564	3611597	2	True				
ANR	3611740	PostIncDecOperationExpression	d ++		3611597	0					
ANR	3611741	Identifier	d		3611597	0					
ANR	3611742	IncDec	++		3611597	1					
ANR	3611743	ExpressionStatement	p = phdr_symbols	3202:2:97572:97588	3611597	2	True				
ANR	3611744	AssignmentExpression	p = phdr_symbols		3611597	0		=			
ANR	3611745	Identifier	p		3611597	0					
ANR	3611746	Identifier	phdr_symbols		3611597	1					
ANR	3611747	WhileStatement	while ( ! p -> last )		3611597	3					
ANR	3611748	Condition	! p -> last	3203:9:97599:97606	3611597	0	True				
ANR	3611749	UnaryOperationExpression	! p -> last		3611597	0					
ANR	3611750	UnaryOperator	!		3611597	0					
ANR	3611751	PtrMemberAccess	p -> last		3611597	1					
ANR	3611752	Identifier	p		3611597	0					
ANR	3611753	Identifier	last		3611597	1					
ANR	3611754	CompoundStatement		23:19:541:541	3611597	1					
ANR	3611755	IfStatement	if ( ! p -> in_shdr )		3611597	0					
ANR	3611756	Condition	! p -> in_shdr	3204:7:97618:97628	3611597	0	True				
ANR	3611757	UnaryOperationExpression	! p -> in_shdr		3611597	0					
ANR	3611758	UnaryOperator	!		3611597	0					
ANR	3611759	PtrMemberAccess	p -> in_shdr		3611597	1					
ANR	3611760	Identifier	p		3611597	0					
ANR	3611761	Identifier	in_shdr		3611597	1					
ANR	3611762	CompoundStatement		24:20:563:563	3611597	1					
ANR	3611763	ExpressionStatement	count ++	3205:4:97637:97644	3611597	0	True				
ANR	3611764	PostIncDecOperationExpression	count ++		3611597	0					
ANR	3611765	Identifier	count		3611597	0					
ANR	3611766	IncDec	++		3611597	1					
ANR	3611767	ExpressionStatement	p ++	3207:3:97654:97657	3611597	1	True				
ANR	3611768	PostIncDecOperationExpression	p ++		3611597	0					
ANR	3611769	Identifier	p		3611597	0					
ANR	3611770	IncDec	++		3611597	1					
ANR	3611771	IfStatement	if ( count > 0 )		3611597	4					
ANR	3611772	Condition	count > 0	3211:6:97804:97812	3611597	0	True				
ANR	3611773	RelationalExpression	count > 0		3611597	0		>			
ANR	3611774	Identifier	count		3611597	0					
ANR	3611775	PrimaryExpression	0		3611597	1					
ANR	3611776	CompoundStatement		31:17:747:747	3611597	1					
ANR	3611777	ExpressionStatement	"tmp = ( RBinElfSymbol * ) realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"	3213:3:97911:97991	3611597	0	True				
ANR	3611778	AssignmentExpression	"tmp = ( RBinElfSymbol * ) realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"		3611597	0		=			
ANR	3611779	Identifier	tmp		3611597	0					
ANR	3611780	CastExpression	"( RBinElfSymbol * ) realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"		3611597	1					
ANR	3611781	CastTarget	RBinElfSymbol *		3611597	0					
ANR	3611782	CallExpression	"realloc ( ret , ( nsym + count + 1 ) * sizeof ( RBinElfSymbol ) )"		3611597	1					
ANR	3611783	Callee	realloc		3611597	0					
ANR	3611784	Identifier	realloc		3611597	0					
ANR	3611785	ArgumentList	ret		3611597	1					
ANR	3611786	Argument	ret		3611597	0					
ANR	3611787	Identifier	ret		3611597	0					
ANR	3611788	Argument	( nsym + count + 1 ) * sizeof ( RBinElfSymbol )		3611597	1					
ANR	3611789	MultiplicativeExpression	( nsym + count + 1 ) * sizeof ( RBinElfSymbol )		3611597	0		*			
ANR	3611790	AdditiveExpression	nsym + count + 1		3611597	0		+			
ANR	3611791	Identifier	nsym		3611597	0					
ANR	3611792	AdditiveExpression	count + 1		3611597	1		+			
ANR	3611793	Identifier	count		3611597	0					
ANR	3611794	PrimaryExpression	1		3611597	1					
ANR	3611795	SizeofExpression	sizeof ( RBinElfSymbol )		3611597	1					
ANR	3611796	Sizeof	sizeof		3611597	0					
ANR	3611797	SizeofOperand	RBinElfSymbol		3611597	1					
ANR	3611798	IfStatement	if ( ! tmp )		3611597	1					
ANR	3611799	Condition	! tmp	3214:7:98000:98003	3611597	0	True				
ANR	3611800	UnaryOperationExpression	! tmp		3611597	0					
ANR	3611801	UnaryOperator	!		3611597	0					
ANR	3611802	Identifier	tmp		3611597	1					
ANR	3611803	CompoundStatement		34:13:938:938	3611597	1					
ANR	3611804	ReturnStatement	return - 1 ;	3215:4:98012:98021	3611597	0	True				
ANR	3611805	UnaryOperationExpression	- 1		3611597	0					
ANR	3611806	UnaryOperator	-		3611597	0					
ANR	3611807	PrimaryExpression	1		3611597	1					
ANR	3611808	ExpressionStatement	ret = tmp	3217:3:98031:98040	3611597	2	True				
ANR	3611809	AssignmentExpression	ret = tmp		3611597	0		=			
ANR	3611810	Identifier	ret		3611597	0					
ANR	3611811	Identifier	tmp		3611597	1					
ANR	3611812	ExpressionStatement	ret [ nsym -- ] . last = 0	3218:3:98045:98065	3611597	3	True				
ANR	3611813	AssignmentExpression	ret [ nsym -- ] . last = 0		3611597	0		=			
ANR	3611814	MemberAccess	ret [ nsym -- ] . last		3611597	0					
ANR	3611815	ArrayIndexing	ret [ nsym -- ]		3611597	0					
ANR	3611816	Identifier	ret		3611597	0					
ANR	3611817	PostIncDecOperationExpression	nsym --		3611597	1					
ANR	3611818	Identifier	nsym		3611597	0					
ANR	3611819	IncDec	--		3611597	1					
ANR	3611820	Identifier	last		3611597	1					
ANR	3611821	PrimaryExpression	0		3611597	1					
ANR	3611822	ExpressionStatement	p = phdr_symbols	3219:3:98070:98086	3611597	4	True				
ANR	3611823	AssignmentExpression	p = phdr_symbols		3611597	0		=			
ANR	3611824	Identifier	p		3611597	0					
ANR	3611825	Identifier	phdr_symbols		3611597	1					
ANR	3611826	WhileStatement	while ( ! p -> last )		3611597	5					
ANR	3611827	Condition	! p -> last	3220:10:98098:98105	3611597	0	True				
ANR	3611828	UnaryOperationExpression	! p -> last		3611597	0					
ANR	3611829	UnaryOperator	!		3611597	0					
ANR	3611830	PtrMemberAccess	p -> last		3611597	1					
ANR	3611831	Identifier	p		3611597	0					
ANR	3611832	Identifier	last		3611597	1					
ANR	3611833	CompoundStatement		40:20:1040:1040	3611597	1					
ANR	3611834	IfStatement	if ( ! p -> in_shdr )		3611597	0					
ANR	3611835	Condition	! p -> in_shdr	3221:8:98118:98128	3611597	0	True				
ANR	3611836	UnaryOperationExpression	! p -> in_shdr		3611597	0					
ANR	3611837	UnaryOperator	!		3611597	0					
ANR	3611838	PtrMemberAccess	p -> in_shdr		3611597	1					
ANR	3611839	Identifier	p		3611597	0					
ANR	3611840	Identifier	in_shdr		3611597	1					
ANR	3611841	CompoundStatement		41:21:1063:1063	3611597	1					
ANR	3611842	ExpressionStatement	"memcpy ( & ret [ ++ nsym ] , p , sizeof ( RBinElfSymbol ) )"	3222:5:98138:98186	3611597	0	True				
ANR	3611843	CallExpression	"memcpy ( & ret [ ++ nsym ] , p , sizeof ( RBinElfSymbol ) )"		3611597	0					
ANR	3611844	Callee	memcpy		3611597	0					
ANR	3611845	Identifier	memcpy		3611597	0					
ANR	3611846	ArgumentList	& ret [ ++ nsym ]		3611597	1					
ANR	3611847	Argument	& ret [ ++ nsym ]		3611597	0					
ANR	3611848	UnaryOperationExpression	& ret [ ++ nsym ]		3611597	0					
ANR	3611849	UnaryOperator	&		3611597	0					
ANR	3611850	ArrayIndexing	ret [ ++ nsym ]		3611597	1					
ANR	3611851	Identifier	ret		3611597	0					
ANR	3611852	UnaryExpression	++ nsym		3611597	1					
ANR	3611853	IncDec	++		3611597	0					
ANR	3611854	Identifier	nsym		3611597	1					
ANR	3611855	Argument	p		3611597	1					
ANR	3611856	Identifier	p		3611597	0					
ANR	3611857	Argument	sizeof ( RBinElfSymbol )		3611597	2					
ANR	3611858	SizeofExpression	sizeof ( RBinElfSymbol )		3611597	0					
ANR	3611859	Sizeof	sizeof		3611597	0					
ANR	3611860	SizeofOperand	RBinElfSymbol		3611597	1					
ANR	3611861	ExpressionStatement	p ++	3224:4:98198:98201	3611597	1	True				
ANR	3611862	PostIncDecOperationExpression	p ++		3611597	0					
ANR	3611863	Identifier	p		3611597	0					
ANR	3611864	IncDec	++		3611597	1					
ANR	3611865	ExpressionStatement	ret [ nsym + 1 ] . last = 1	3226:3:98211:98233	3611597	6	True				
ANR	3611866	AssignmentExpression	ret [ nsym + 1 ] . last = 1		3611597	0		=			
ANR	3611867	MemberAccess	ret [ nsym + 1 ] . last		3611597	0					
ANR	3611868	ArrayIndexing	ret [ nsym + 1 ]		3611597	0					
ANR	3611869	Identifier	ret		3611597	0					
ANR	3611870	AdditiveExpression	nsym + 1		3611597	1		+			
ANR	3611871	Identifier	nsym		3611597	0					
ANR	3611872	PrimaryExpression	1		3611597	1					
ANR	3611873	Identifier	last		3611597	1					
ANR	3611874	PrimaryExpression	1		3611597	1					
ANR	3611875	ExpressionStatement	* sym = ret	3228:2:98241:98251	3611597	5	True				
ANR	3611876	AssignmentExpression	* sym = ret		3611597	0		=			
ANR	3611877	UnaryOperationExpression	* sym		3611597	0					
ANR	3611878	UnaryOperator	*		3611597	0					
ANR	3611879	Identifier	sym		3611597	1					
ANR	3611880	Identifier	ret		3611597	1					
ANR	3611881	ReturnStatement	return nsym + 1 ;	3229:2:98255:98270	3611597	6	True				
ANR	3611882	AdditiveExpression	nsym + 1		3611597	0		+			
ANR	3611883	Identifier	nsym		3611597	0					
ANR	3611884	PrimaryExpression	1		3611597	1					
ANR	3611885	ReturnStatement	return nsym ;	3231:1:98276:98287	3611597	5	True				
ANR	3611886	Identifier	nsym		3611597	0					
ANR	3611887	ReturnType	static int Elf_		3611597	1					
ANR	3611888	Identifier	( fix_symbols )		3611597	2					
ANR	3611889	Identifier	fix_symbols		3611597	3					
ANR	3611890	ParameterList	"ELFOBJ * bin , int nsym , int type , RBinElfSymbol * * sym"		3611597	4					
ANR	3611891	Parameter	ELFOBJ * bin	3181:29:97013:97023	3611597	0	True				
ANR	3611892	ParameterType	ELFOBJ *		3611597	0					
ANR	3611893	Identifier	bin		3611597	1					
ANR	3611894	Parameter	int nsym	3181:42:97026:97033	3611597	1	True				
ANR	3611895	ParameterType	int		3611597	0					
ANR	3611896	Identifier	nsym		3611597	1					
ANR	3611897	Parameter	int type	3181:52:97036:97043	3611597	2	True				
ANR	3611898	ParameterType	int		3611597	0					
ANR	3611899	Identifier	type		3611597	1					
ANR	3611900	Parameter	RBinElfSymbol * * sym	3181:62:97046:97064	3611597	3	True				
ANR	3611901	ParameterType	RBinElfSymbol * *		3611597	0					
ANR	3611902	Identifier	sym		3611597	1					
ANR	3611903	CFGEntryNode	ENTRY		3611597		True				
ANR	3611904	CFGExitNode	EXIT		3611597		True				
ANR	3611905	Symbol	d -> name		3611597						
ANR	3611906	Symbol	bin		3611597						
ANR	3611907	Symbol	sym		3611597						
ANR	3611908	Symbol	ret [ nsym -- ] . last		3611597						
ANR	3611909	Symbol	realloc		3611597						
ANR	3611910	Symbol	* ret		3611597						
ANR	3611911	Symbol	type		3611597						
ANR	3611912	Symbol	p -> ordinal		3611597						
ANR	3611913	Symbol	phdr_symbols		3611597						
ANR	3611914	Symbol	d -> ordinal		3611597						
ANR	3611915	Symbol	tmp		3611597						
ANR	3611916	Symbol	* * p		3611597						
ANR	3611917	Symbol	ret		3611597						
ANR	3611918	Symbol	Elf_		3611597						
ANR	3611919	Symbol	r_str_startswith		3611597						
ANR	3611920	Symbol	get_phdr_symbols		3611597						
ANR	3611921	Symbol	d		3611597						
ANR	3611922	Symbol	p -> last		3611597						
ANR	3611923	Symbol	* d -> name		3611597						
ANR	3611924	Symbol	* * d		3611597						
ANR	3611925	Symbol	count		3611597						
ANR	3611926	Symbol	nsym		3611597						
ANR	3611927	Symbol	* nsym		3611597						
ANR	3611928	Symbol	* d		3611597						
ANR	3611929	Symbol	p		3611597						
ANR	3611930	Symbol	* p -> name		3611597						
ANR	3611931	Symbol	* sym		3611597						
ANR	3611932	Symbol	d -> last		3611597						
ANR	3611933	Symbol	d -> offset		3611597						
ANR	3611934	Symbol	true		3611597						
ANR	3611935	Symbol	p -> offset		3611597						
ANR	3611936	Symbol	ret [ nsym + 1 ] . last		3611597						
ANR	3611937	Symbol	* p		3611597						
ANR	3611938	Symbol	p -> in_shdr		3611597						
ANR	3611939	Symbol	p -> name		3611597						
ANR	3611940	Function	setsymord	3252:0:98732:98958							
ANR	3611941	FunctionDef	"setsymord (ELFOBJ * eobj , ut32 ord , RBinSymbol * ptr)"		3611940	0					
ANR	3611942	CompoundStatement		3252:63:98795:98958	3611940	0					
ANR	3611943	IfStatement	if ( ! eobj -> symbols_by_ord || ord >= eobj -> symbols_by_ord_size )		3611940	0					
ANR	3611944	Condition	! eobj -> symbols_by_ord || ord >= eobj -> symbols_by_ord_size	3253:5:98802:98858	3611940	0	True				
ANR	3611945	OrExpression	! eobj -> symbols_by_ord || ord >= eobj -> symbols_by_ord_size		3611940	0		||			
ANR	3611946	UnaryOperationExpression	! eobj -> symbols_by_ord		3611940	0					
ANR	3611947	UnaryOperator	!		3611940	0					
ANR	3611948	PtrMemberAccess	eobj -> symbols_by_ord		3611940	1					
ANR	3611949	Identifier	eobj		3611940	0					
ANR	3611950	Identifier	symbols_by_ord		3611940	1					
ANR	3611951	RelationalExpression	ord >= eobj -> symbols_by_ord_size		3611940	1		>=			
ANR	3611952	Identifier	ord		3611940	0					
ANR	3611953	PtrMemberAccess	eobj -> symbols_by_ord_size		3611940	1					
ANR	3611954	Identifier	eobj		3611940	0					
ANR	3611955	Identifier	symbols_by_ord_size		3611940	1					
ANR	3611956	CompoundStatement		2:64:65:65	3611940	1					
ANR	3611957	ReturnStatement	return ;	3254:2:98865:98871	3611940	0	True				
ANR	3611958	ExpressionStatement	r_bin_symbol_free ( eobj -> symbols_by_ord [ ord ] )	3256:1:98877:98922	3611940	1	True				
ANR	3611959	CallExpression	r_bin_symbol_free ( eobj -> symbols_by_ord [ ord ] )		3611940	0					
ANR	3611960	Callee	r_bin_symbol_free		3611940	0					
ANR	3611961	Identifier	r_bin_symbol_free		3611940	0					
ANR	3611962	ArgumentList	eobj -> symbols_by_ord [ ord ]		3611940	1					
ANR	3611963	Argument	eobj -> symbols_by_ord [ ord ]		3611940	0					
ANR	3611964	ArrayIndexing	eobj -> symbols_by_ord [ ord ]		3611940	0					
ANR	3611965	PtrMemberAccess	eobj -> symbols_by_ord		3611940	0					
ANR	3611966	Identifier	eobj		3611940	0					
ANR	3611967	Identifier	symbols_by_ord		3611940	1					
ANR	3611968	Identifier	ord		3611940	1					
ANR	3611969	ExpressionStatement	eobj -> symbols_by_ord [ ord ] = ptr	3257:1:98925:98956	3611940	2	True				
ANR	3611970	AssignmentExpression	eobj -> symbols_by_ord [ ord ] = ptr		3611940	0		=			
ANR	3611971	ArrayIndexing	eobj -> symbols_by_ord [ ord ]		3611940	0					
ANR	3611972	PtrMemberAccess	eobj -> symbols_by_ord		3611940	0					
ANR	3611973	Identifier	eobj		3611940	0					
ANR	3611974	Identifier	symbols_by_ord		3611940	1					
ANR	3611975	Identifier	ord		3611940	1					
ANR	3611976	Identifier	ptr		3611940	1					
ANR	3611977	ReturnType	static void		3611940	1					
ANR	3611978	Identifier	setsymord		3611940	2					
ANR	3611979	ParameterList	"ELFOBJ * eobj , ut32 ord , RBinSymbol * ptr"		3611940	3					
ANR	3611980	Parameter	ELFOBJ * eobj	3252:22:98754:98765	3611940	0	True				
ANR	3611981	ParameterType	ELFOBJ *		3611940	0					
ANR	3611982	Identifier	eobj		3611940	1					
ANR	3611983	Parameter	ut32 ord	3252:36:98768:98775	3611940	1	True				
ANR	3611984	ParameterType	ut32		3611940	0					
ANR	3611985	Identifier	ord		3611940	1					
ANR	3611986	Parameter	RBinSymbol * ptr	3252:46:98778:98792	3611940	2	True				
ANR	3611987	ParameterType	RBinSymbol *		3611940	0					
ANR	3611988	Identifier	ptr		3611940	1					
ANR	3611989	CFGEntryNode	ENTRY		3611940		True				
ANR	3611990	CFGExitNode	EXIT		3611940		True				
ANR	3611991	Symbol	ord		3611940						
ANR	3611992	Symbol	eobj -> symbols_by_ord		3611940						
ANR	3611993	Symbol	* eobj -> symbols_by_ord		3611940						
ANR	3611994	Symbol	* eobj		3611940						
ANR	3611995	Symbol	* * eobj		3611940						
ANR	3611996	Symbol	* ord		3611940						
ANR	3611997	Symbol	eobj		3611940						
ANR	3611998	Symbol	eobj -> symbols_by_ord_size		3611940						
ANR	3611999	Symbol	ptr		3611940						
ANR	3612000	DeclStmt									
ANR	3612001	Decl							int	int	bin_bits
ANR	3612002	DeclStmt									
ANR	3612003	Decl							RBinSymbol	RBinSymbol *	ptr
ANR	3612004	DeclStmt									
ANR	3612005	Decl							int	int	len
ANR	3612006	DeclStmt									
ANR	3612007	Decl							ut64	ut64	paddr
ANR	3612008	Decl							ut64	ut64	vaddr
ANR	3612009	DeclStmt									
ANR	3612010	Decl							RBinSymbol	RBinSymbol *	ptr
ANR	3612011	Function	_r_bin_elf_get_symbols_imports	3335:22:100758:108497							
ANR	3612012	FunctionDef	"_r_bin_elf_get_symbols_imports (ELFOBJ * bin , int type)"		3612011	0					
ANR	3612013	CompoundStatement		3335:82:100818:108497	3612011	0					
ANR	3612014	IdentifierDeclStatement	ut32 shdr_size ;	3336:1:100821:100835	3612011	0	True				
ANR	3612015	IdentifierDecl	shdr_size		3612011	0					
ANR	3612016	IdentifierDeclType	ut32		3612011	0					
ANR	3612017	Identifier	shdr_size		3612011	1					
ANR	3612018	IdentifierDeclStatement	"int tsize , nsym , ret_ctr = 0 , i , j , r , k , newsize ;"	3337:1:100838:100887	3612011	1	True				
ANR	3612019	IdentifierDecl	tsize		3612011	0					
ANR	3612020	IdentifierDeclType	int		3612011	0					
ANR	3612021	Identifier	tsize		3612011	1					
ANR	3612022	IdentifierDecl	nsym		3612011	1					
ANR	3612023	IdentifierDeclType	int		3612011	0					
ANR	3612024	Identifier	nsym		3612011	1					
ANR	3612025	IdentifierDecl	ret_ctr = 0		3612011	2					
ANR	3612026	IdentifierDeclType	int		3612011	0					
ANR	3612027	Identifier	ret_ctr		3612011	1					
ANR	3612028	AssignmentExpression	ret_ctr = 0		3612011	2		=			
ANR	3612029	Identifier	ret_ctr		3612011	0					
ANR	3612030	PrimaryExpression	0		3612011	1					
ANR	3612031	IdentifierDecl	i		3612011	3					
ANR	3612032	IdentifierDeclType	int		3612011	0					
ANR	3612033	Identifier	i		3612011	1					
ANR	3612034	IdentifierDecl	j		3612011	4					
ANR	3612035	IdentifierDeclType	int		3612011	0					
ANR	3612036	Identifier	j		3612011	1					
ANR	3612037	IdentifierDecl	r		3612011	5					
ANR	3612038	IdentifierDeclType	int		3612011	0					
ANR	3612039	Identifier	r		3612011	1					
ANR	3612040	IdentifierDecl	k		3612011	6					
ANR	3612041	IdentifierDeclType	int		3612011	0					
ANR	3612042	Identifier	k		3612011	1					
ANR	3612043	IdentifierDecl	newsize		3612011	7					
ANR	3612044	IdentifierDeclType	int		3612011	0					
ANR	3612045	Identifier	newsize		3612011	1					
ANR	3612046	IdentifierDeclStatement	ut64 toffset ;	3338:1:100890:100902	3612011	2	True				
ANR	3612047	IdentifierDecl	toffset		3612011	0					
ANR	3612048	IdentifierDeclType	ut64		3612011	0					
ANR	3612049	Identifier	toffset		3612011	1					
ANR	3612050	IdentifierDeclStatement	ut32 size = 0 ;	3339:1:100905:100918	3612011	3	True				
ANR	3612051	IdentifierDecl	size = 0		3612011	0					
ANR	3612052	IdentifierDeclType	ut32		3612011	0					
ANR	3612053	Identifier	size		3612011	1					
ANR	3612054	AssignmentExpression	size = 0		3612011	2		=			
ANR	3612055	Identifier	size		3612011	0					
ANR	3612056	PrimaryExpression	0		3612011	1					
ANR	3612057	IdentifierDeclStatement	"RBinElfSymbol * ret = NULL , * import_ret = NULL ;"	3340:1:100921:100966	3612011	4	True				
ANR	3612058	IdentifierDecl	* ret = NULL		3612011	0					
ANR	3612059	IdentifierDeclType	RBinElfSymbol *		3612011	0					
ANR	3612060	Identifier	ret		3612011	1					
ANR	3612061	AssignmentExpression	* ret = NULL		3612011	2		=			
ANR	3612062	Identifier	NULL		3612011	0					
ANR	3612063	Identifier	NULL		3612011	1					
ANR	3612064	IdentifierDecl	* import_ret = NULL		3612011	1					
ANR	3612065	IdentifierDeclType	RBinElfSymbol *		3612011	0					
ANR	3612066	Identifier	import_ret		3612011	1					
ANR	3612067	AssignmentExpression	* import_ret = NULL		3612011	2		=			
ANR	3612068	Identifier	NULL		3612011	0					
ANR	3612069	Identifier	NULL		3612011	1					
ANR	3612070	IdentifierDeclStatement	RBinSymbol * import_sym_ptr = NULL ;	3341:1:100969:101002	3612011	5	True				
ANR	3612071	IdentifierDecl	* import_sym_ptr = NULL		3612011	0					
ANR	3612072	IdentifierDeclType	RBinSymbol *		3612011	0					
ANR	3612073	Identifier	import_sym_ptr		3612011	1					
ANR	3612074	AssignmentExpression	* import_sym_ptr = NULL		3612011	2		=			
ANR	3612075	Identifier	NULL		3612011	0					
ANR	3612076	Identifier	NULL		3612011	1					
ANR	3612077	IdentifierDeclStatement	"size_t ret_size = 0 , prev_ret_size = 0 , import_ret_ctr = 0 ;"	3342:1:101005:101063	3612011	6	True				
ANR	3612078	IdentifierDecl	ret_size = 0		3612011	0					
ANR	3612079	IdentifierDeclType	size_t		3612011	0					
ANR	3612080	Identifier	ret_size		3612011	1					
ANR	3612081	AssignmentExpression	ret_size = 0		3612011	2		=			
ANR	3612082	Identifier	ret_size		3612011	0					
ANR	3612083	PrimaryExpression	0		3612011	1					
ANR	3612084	IdentifierDecl	prev_ret_size = 0		3612011	1					
ANR	3612085	IdentifierDeclType	size_t		3612011	0					
ANR	3612086	Identifier	prev_ret_size		3612011	1					
ANR	3612087	AssignmentExpression	prev_ret_size = 0		3612011	2		=			
ANR	3612088	Identifier	prev_ret_size		3612011	0					
ANR	3612089	PrimaryExpression	0		3612011	1					
ANR	3612090	IdentifierDecl	import_ret_ctr = 0		3612011	2					
ANR	3612091	IdentifierDeclType	size_t		3612011	0					
ANR	3612092	Identifier	import_ret_ctr		3612011	1					
ANR	3612093	AssignmentExpression	import_ret_ctr = 0		3612011	2		=			
ANR	3612094	Identifier	import_ret_ctr		3612011	0					
ANR	3612095	PrimaryExpression	0		3612011	1					
ANR	3612096	ExpressionStatement	Elf_ ( Shdr ) * strtab_section = NULL	3343:1:101066:101099	3612011	7	True				
ANR	3612097	AssignmentExpression	Elf_ ( Shdr ) * strtab_section = NULL		3612011	0		=			
ANR	3612098	MultiplicativeExpression	Elf_ ( Shdr ) * strtab_section		3612011	0		*			
ANR	3612099	CallExpression	Elf_ ( Shdr )		3612011	0					
ANR	3612100	Callee	Elf_		3612011	0					
ANR	3612101	Identifier	Elf_		3612011	0					
ANR	3612102	ArgumentList	Shdr		3612011	1					
ANR	3612103	Argument	Shdr		3612011	0					
ANR	3612104	Identifier	Shdr		3612011	0					
ANR	3612105	Identifier	strtab_section		3612011	1					
ANR	3612106	Identifier	NULL		3612011	1					
ANR	3612107	ExpressionStatement	Elf_ ( Sym ) * sym = NULL	3344:1:101102:101123	3612011	8	True				
ANR	3612108	AssignmentExpression	Elf_ ( Sym ) * sym = NULL		3612011	0		=			
ANR	3612109	MultiplicativeExpression	Elf_ ( Sym ) * sym		3612011	0		*			
ANR	3612110	CallExpression	Elf_ ( Sym )		3612011	0					
ANR	3612111	Callee	Elf_		3612011	0					
ANR	3612112	Identifier	Elf_		3612011	0					
ANR	3612113	ArgumentList	Sym		3612011	1					
ANR	3612114	Argument	Sym		3612011	0					
ANR	3612115	Identifier	Sym		3612011	0					
ANR	3612116	Identifier	sym		3612011	1					
ANR	3612117	Identifier	NULL		3612011	1					
ANR	3612118	IdentifierDeclStatement	ut8 s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 } ;	3345:1:101126:101159	3612011	9	True				
ANR	3612119	IdentifierDecl	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		3612011	0					
ANR	3612120	IdentifierDeclType	ut8 [ sizeof ( Elf_ ( Sym ) ) ]		3612011	0					
ANR	3612121	Identifier	s		3612011	1					
ANR	3612122	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3612011	2					
ANR	3612123	Sizeof	sizeof		3612011	0					
ANR	3612124	CallExpression	Elf_ ( Sym )		3612011	1					
ANR	3612125	Callee	Elf_		3612011	0					
ANR	3612126	Identifier	Elf_		3612011	0					
ANR	3612127	ArgumentList	Sym		3612011	1					
ANR	3612128	Argument	Sym		3612011	0					
ANR	3612129	Identifier	Sym		3612011	0					
ANR	3612130	AssignmentExpression	s [ sizeof ( Elf_ ( Sym ) ) ] = { 0 }		3612011	3		=			
ANR	3612131	Identifier	s		3612011	0					
ANR	3612132	InitializerList	0		3612011	1					
ANR	3612133	PrimaryExpression	0		3612011	0					
ANR	3612134	IdentifierDeclStatement	char * strtab = NULL ;	3346:1:101162:101181	3612011	10	True				
ANR	3612135	IdentifierDecl	* strtab = NULL		3612011	0					
ANR	3612136	IdentifierDeclType	char *		3612011	0					
ANR	3612137	Identifier	strtab		3612011	1					
ANR	3612138	AssignmentExpression	* strtab = NULL		3612011	2		=			
ANR	3612139	Identifier	NULL		3612011	0					
ANR	3612140	Identifier	NULL		3612011	1					
ANR	3612141	IfStatement	if ( ! bin || ! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff )		3612011	11					
ANR	3612142	Condition	! bin || ! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff	3348:5:101189:101259	3612011	0	True				
ANR	3612143	OrExpression	! bin || ! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff		3612011	0		||			
ANR	3612144	UnaryOperationExpression	! bin		3612011	0					
ANR	3612145	UnaryOperator	!		3612011	0					
ANR	3612146	Identifier	bin		3612011	1					
ANR	3612147	OrExpression	! bin -> shdr || ! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff		3612011	1		||			
ANR	3612148	UnaryOperationExpression	! bin -> shdr		3612011	0					
ANR	3612149	UnaryOperator	!		3612011	0					
ANR	3612150	PtrMemberAccess	bin -> shdr		3612011	1					
ANR	3612151	Identifier	bin		3612011	0					
ANR	3612152	Identifier	shdr		3612011	1					
ANR	3612153	OrExpression	! bin -> ehdr . e_shnum || bin -> ehdr . e_shnum == 0xffff		3612011	1		||			
ANR	3612154	UnaryOperationExpression	! bin -> ehdr . e_shnum		3612011	0					
ANR	3612155	UnaryOperator	!		3612011	0					
ANR	3612156	MemberAccess	bin -> ehdr . e_shnum		3612011	1					
ANR	3612157	PtrMemberAccess	bin -> ehdr		3612011	0					
ANR	3612158	Identifier	bin		3612011	0					
ANR	3612159	Identifier	ehdr		3612011	1					
ANR	3612160	Identifier	e_shnum		3612011	1					
ANR	3612161	EqualityExpression	bin -> ehdr . e_shnum == 0xffff		3612011	1		==			
ANR	3612162	MemberAccess	bin -> ehdr . e_shnum		3612011	0					
ANR	3612163	PtrMemberAccess	bin -> ehdr		3612011	0					
ANR	3612164	Identifier	bin		3612011	0					
ANR	3612165	Identifier	ehdr		3612011	1					
ANR	3612166	Identifier	e_shnum		3612011	1					
ANR	3612167	PrimaryExpression	0xffff		3612011	1					
ANR	3612168	CompoundStatement		14:78:443:443	3612011	1					
ANR	3612169	ReturnStatement	"return Elf_ ( get_phdr_symbols ) ( bin , type ) ;"	3349:2:101266:101307	3612011	0	True				
ANR	3612170	CallExpression	"Elf_ ( get_phdr_symbols ) ( bin , type )"		3612011	0					
ANR	3612171	Callee	Elf_ ( get_phdr_symbols )		3612011	0					
ANR	3612172	CallExpression	Elf_ ( get_phdr_symbols )		3612011	0					
ANR	3612173	Callee	Elf_		3612011	0					
ANR	3612174	Identifier	Elf_		3612011	0					
ANR	3612175	ArgumentList	get_phdr_symbols		3612011	1					
ANR	3612176	Argument	get_phdr_symbols		3612011	0					
ANR	3612177	Identifier	get_phdr_symbols		3612011	0					
ANR	3612178	ArgumentList	bin		3612011	1					
ANR	3612179	Argument	bin		3612011	0					
ANR	3612180	Identifier	bin		3612011	0					
ANR	3612181	Argument	type		3612011	1					
ANR	3612182	Identifier	type		3612011	0					
ANR	3612183	IfStatement	"if ( ! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) ) )"		3612011	12					
ANR	3612184	Condition	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"	3351:5:101317:101378	3612011	0	True				
ANR	3612185	UnaryOperationExpression	"! UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		3612011	0					
ANR	3612186	UnaryOperator	!		3612011	0					
ANR	3612187	CallExpression	"UT32_MUL ( & shdr_size , bin -> ehdr . e_shnum , sizeof ( Elf_ ( Shdr ) ) )"		3612011	1					
ANR	3612188	Callee	UT32_MUL		3612011	0					
ANR	3612189	Identifier	UT32_MUL		3612011	0					
ANR	3612190	ArgumentList	& shdr_size		3612011	1					
ANR	3612191	Argument	& shdr_size		3612011	0					
ANR	3612192	UnaryOperationExpression	& shdr_size		3612011	0					
ANR	3612193	UnaryOperator	&		3612011	0					
ANR	3612194	Identifier	shdr_size		3612011	1					
ANR	3612195	Argument	bin -> ehdr . e_shnum		3612011	1					
ANR	3612196	MemberAccess	bin -> ehdr . e_shnum		3612011	0					
ANR	3612197	PtrMemberAccess	bin -> ehdr		3612011	0					
ANR	3612198	Identifier	bin		3612011	0					
ANR	3612199	Identifier	ehdr		3612011	1					
ANR	3612200	Identifier	e_shnum		3612011	1					
ANR	3612201	Argument	sizeof ( Elf_ ( Shdr ) )		3612011	2					
ANR	3612202	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3612011	0					
ANR	3612203	Sizeof	sizeof		3612011	0					
ANR	3612204	CallExpression	Elf_ ( Shdr )		3612011	1					
ANR	3612205	Callee	Elf_		3612011	0					
ANR	3612206	Identifier	Elf_		3612011	0					
ANR	3612207	ArgumentList	Shdr		3612011	1					
ANR	3612208	Argument	Shdr		3612011	0					
ANR	3612209	Identifier	Shdr		3612011	0					
ANR	3612210	CompoundStatement		17:69:562:562	3612011	1					
ANR	3612211	ReturnStatement	return false ;	3352:2:101385:101397	3612011	0	True				
ANR	3612212	Identifier	false		3612011	0					
ANR	3612213	IfStatement	if ( shdr_size + 8 > bin -> size )		3612011	13					
ANR	3612214	Condition	shdr_size + 8 > bin -> size	3354:5:101407:101431	3612011	0	True				
ANR	3612215	RelationalExpression	shdr_size + 8 > bin -> size		3612011	0		>			
ANR	3612216	AdditiveExpression	shdr_size + 8		3612011	0		+			
ANR	3612217	Identifier	shdr_size		3612011	0					
ANR	3612218	PrimaryExpression	8		3612011	1					
ANR	3612219	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612220	Identifier	bin		3612011	0					
ANR	3612221	Identifier	size		3612011	1					
ANR	3612222	CompoundStatement		20:32:615:615	3612011	1					
ANR	3612223	ReturnStatement	return false ;	3355:2:101438:101450	3612011	0	True				
ANR	3612224	Identifier	false		3612011	0					
ANR	3612225	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_shnum ; i ++ )		3612011	14					
ANR	3612226	ForInit	i = 0 ;	3357:6:101461:101466	3612011	0	True				
ANR	3612227	AssignmentExpression	i = 0		3612011	0		=			
ANR	3612228	Identifier	i		3612011	0					
ANR	3612229	PrimaryExpression	0		3612011	1					
ANR	3612230	Condition	i < bin -> ehdr . e_shnum	3357:13:101468:101488	3612011	1	True				
ANR	3612231	RelationalExpression	i < bin -> ehdr . e_shnum		3612011	0		<			
ANR	3612232	Identifier	i		3612011	0					
ANR	3612233	MemberAccess	bin -> ehdr . e_shnum		3612011	1					
ANR	3612234	PtrMemberAccess	bin -> ehdr		3612011	0					
ANR	3612235	Identifier	bin		3612011	0					
ANR	3612236	Identifier	ehdr		3612011	1					
ANR	3612237	Identifier	e_shnum		3612011	1					
ANR	3612238	PostIncDecOperationExpression	i ++	3357:36:101491:101493	3612011	2	True				
ANR	3612239	Identifier	i		3612011	0					
ANR	3612240	IncDec	++		3612011	1					
ANR	3612241	CompoundStatement		23:41:677:677	3612011	3					
ANR	3612242	IfStatement	if ( ( ( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB ) || ( ( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM ) )		3612011	0					
ANR	3612243	Condition	( ( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB ) || ( ( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM )	3358:6:101504:101657	3612011	0	True				
ANR	3612244	OrExpression	( ( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB ) || ( ( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM )		3612011	0		||			
ANR	3612245	AndExpression	( type & R_BIN_ELF_SYMTAB_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_SYMTAB		3612011	0		&&			
ANR	3612246	BitAndExpression	type & R_BIN_ELF_SYMTAB_SYMBOLS		3612011	0		&			
ANR	3612247	Identifier	type		3612011	0					
ANR	3612248	Identifier	R_BIN_ELF_SYMTAB_SYMBOLS		3612011	1					
ANR	3612249	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_SYMTAB		3612011	1		==			
ANR	3612250	MemberAccess	bin -> shdr [ i ] . sh_type		3612011	0					
ANR	3612251	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612252	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612253	Identifier	bin		3612011	0					
ANR	3612254	Identifier	shdr		3612011	1					
ANR	3612255	Identifier	i		3612011	1					
ANR	3612256	Identifier	sh_type		3612011	1					
ANR	3612257	Identifier	SHT_SYMTAB		3612011	1					
ANR	3612258	AndExpression	( type & R_BIN_ELF_DYNSYM_SYMBOLS ) && bin -> shdr [ i ] . sh_type == SHT_DYNSYM		3612011	1		&&			
ANR	3612259	BitAndExpression	type & R_BIN_ELF_DYNSYM_SYMBOLS		3612011	0		&			
ANR	3612260	Identifier	type		3612011	0					
ANR	3612261	Identifier	R_BIN_ELF_DYNSYM_SYMBOLS		3612011	1					
ANR	3612262	EqualityExpression	bin -> shdr [ i ] . sh_type == SHT_DYNSYM		3612011	1		==			
ANR	3612263	MemberAccess	bin -> shdr [ i ] . sh_type		3612011	0					
ANR	3612264	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612265	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612266	Identifier	bin		3612011	0					
ANR	3612267	Identifier	shdr		3612011	1					
ANR	3612268	Identifier	i		3612011	1					
ANR	3612269	Identifier	sh_type		3612011	1					
ANR	3612270	Identifier	SHT_DYNSYM		3612011	1					
ANR	3612271	CompoundStatement		25:79:841:841	3612011	1					
ANR	3612272	IfStatement	if ( bin -> shdr [ i ] . sh_link < 1 )		3612011	0					
ANR	3612273	Condition	bin -> shdr [ i ] . sh_link < 1	3360:7:101669:101692	3612011	0	True				
ANR	3612274	RelationalExpression	bin -> shdr [ i ] . sh_link < 1		3612011	0		<			
ANR	3612275	MemberAccess	bin -> shdr [ i ] . sh_link		3612011	0					
ANR	3612276	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612277	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612278	Identifier	bin		3612011	0					
ANR	3612279	Identifier	shdr		3612011	1					
ANR	3612280	Identifier	i		3612011	1					
ANR	3612281	Identifier	sh_link		3612011	1					
ANR	3612282	PrimaryExpression	1		3612011	1					
ANR	3612283	CompoundStatement		26:33:876:876	3612011	1					
ANR	3612284	ContinueStatement	continue ;	3362:4:101743:101751	3612011	0	True				
ANR	3612285	IfStatement	if ( ( bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) ) ) >= shdr_size )		3612011	1					
ANR	3612286	Condition	( bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) ) ) >= shdr_size	3365:7:101794:101849	3612011	0	True				
ANR	3612287	RelationalExpression	( bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) ) ) >= shdr_size		3612011	0		>=			
ANR	3612288	MultiplicativeExpression	bin -> shdr [ i ] . sh_link * sizeof ( Elf_ ( Shdr ) )		3612011	0		*			
ANR	3612289	MemberAccess	bin -> shdr [ i ] . sh_link		3612011	0					
ANR	3612290	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612291	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612292	Identifier	bin		3612011	0					
ANR	3612293	Identifier	shdr		3612011	1					
ANR	3612294	Identifier	i		3612011	1					
ANR	3612295	Identifier	sh_link		3612011	1					
ANR	3612296	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3612011	1					
ANR	3612297	Sizeof	sizeof		3612011	0					
ANR	3612298	CallExpression	Elf_ ( Shdr )		3612011	1					
ANR	3612299	Callee	Elf_		3612011	0					
ANR	3612300	Identifier	Elf_		3612011	0					
ANR	3612301	ArgumentList	Shdr		3612011	1					
ANR	3612302	Argument	Shdr		3612011	0					
ANR	3612303	Identifier	Shdr		3612011	0					
ANR	3612304	Identifier	shdr_size		3612011	1					
ANR	3612305	CompoundStatement		31:65:1033:1033	3612011	1					
ANR	3612306	ContinueStatement	continue ;	3367:4:101900:101908	3612011	0	True				
ANR	3612307	ExpressionStatement	strtab_section = & bin -> shdr [ bin -> shdr [ i ] . sh_link ]	3369:3:101918:101967	3612011	2	True				
ANR	3612308	AssignmentExpression	strtab_section = & bin -> shdr [ bin -> shdr [ i ] . sh_link ]		3612011	0		=			
ANR	3612309	Identifier	strtab_section		3612011	0					
ANR	3612310	UnaryOperationExpression	& bin -> shdr [ bin -> shdr [ i ] . sh_link ]		3612011	1					
ANR	3612311	UnaryOperator	&		3612011	0					
ANR	3612312	ArrayIndexing	bin -> shdr [ bin -> shdr [ i ] . sh_link ]		3612011	1					
ANR	3612313	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612314	Identifier	bin		3612011	0					
ANR	3612315	Identifier	shdr		3612011	1					
ANR	3612316	MemberAccess	bin -> shdr [ i ] . sh_link		3612011	1					
ANR	3612317	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612318	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612319	Identifier	bin		3612011	0					
ANR	3612320	Identifier	shdr		3612011	1					
ANR	3612321	Identifier	i		3612011	1					
ANR	3612322	Identifier	sh_link		3612011	1					
ANR	3612323	IfStatement	if ( strtab_section -> sh_size > ST32_MAX || strtab_section -> sh_size + 8 > bin -> size )		3612011	3					
ANR	3612324	Condition	strtab_section -> sh_size > ST32_MAX || strtab_section -> sh_size + 8 > bin -> size	3370:7:101976:102050	3612011	0	True				
ANR	3612325	OrExpression	strtab_section -> sh_size > ST32_MAX || strtab_section -> sh_size + 8 > bin -> size		3612011	0		||			
ANR	3612326	RelationalExpression	strtab_section -> sh_size > ST32_MAX		3612011	0		>			
ANR	3612327	PtrMemberAccess	strtab_section -> sh_size		3612011	0					
ANR	3612328	Identifier	strtab_section		3612011	0					
ANR	3612329	Identifier	sh_size		3612011	1					
ANR	3612330	Identifier	ST32_MAX		3612011	1					
ANR	3612331	RelationalExpression	strtab_section -> sh_size + 8 > bin -> size		3612011	1		>			
ANR	3612332	AdditiveExpression	strtab_section -> sh_size + 8		3612011	0		+			
ANR	3612333	PtrMemberAccess	strtab_section -> sh_size		3612011	0					
ANR	3612334	Identifier	strtab_section		3612011	0					
ANR	3612335	Identifier	sh_size		3612011	1					
ANR	3612336	PrimaryExpression	8		3612011	1					
ANR	3612337	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612338	Identifier	bin		3612011	0					
ANR	3612339	Identifier	size		3612011	1					
ANR	3612340	CompoundStatement		36:84:1234:1234	3612011	1					
ANR	3612341	ExpressionStatement	"bprintf ( ""size (syms strtab)"" )"	3371:4:102059:102089	3612011	0	True				
ANR	3612342	CallExpression	"bprintf ( ""size (syms strtab)"" )"		3612011	0					
ANR	3612343	Callee	bprintf		3612011	0					
ANR	3612344	Identifier	bprintf		3612011	0					
ANR	3612345	ArgumentList	"""size (syms strtab)"""		3612011	1					
ANR	3612346	Argument	"""size (syms strtab)"""		3612011	0					
ANR	3612347	PrimaryExpression	"""size (syms strtab)"""		3612011	0					
ANR	3612348	ExpressionStatement	free ( ret )	3372:4:102095:102105	3612011	1	True				
ANR	3612349	CallExpression	free ( ret )		3612011	0					
ANR	3612350	Callee	free		3612011	0					
ANR	3612351	Identifier	free		3612011	0					
ANR	3612352	ArgumentList	ret		3612011	1					
ANR	3612353	Argument	ret		3612011	0					
ANR	3612354	Identifier	ret		3612011	0					
ANR	3612355	ExpressionStatement	free ( strtab )	3373:4:102111:102124	3612011	2	True				
ANR	3612356	CallExpression	free ( strtab )		3612011	0					
ANR	3612357	Callee	free		3612011	0					
ANR	3612358	Identifier	free		3612011	0					
ANR	3612359	ArgumentList	strtab		3612011	1					
ANR	3612360	Argument	strtab		3612011	0					
ANR	3612361	Identifier	strtab		3612011	0					
ANR	3612362	ReturnStatement	return NULL ;	3374:4:102130:102141	3612011	3	True				
ANR	3612363	Identifier	NULL		3612011	0					
ANR	3612364	IfStatement	if ( ! strtab )		3612011	4					
ANR	3612365	Condition	! strtab	3376:7:102155:102161	3612011	0	True				
ANR	3612366	UnaryOperationExpression	! strtab		3612011	0					
ANR	3612367	UnaryOperator	!		3612011	0					
ANR	3612368	Identifier	strtab		3612011	1					
ANR	3612369	CompoundStatement		42:16:1345:1345	3612011	1					
ANR	3612370	IfStatement	"if ( ! ( strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size ) ) )"		3612011	0					
ANR	3612371	Condition	"! ( strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size ) )"	3377:8:102174:102232	3612011	0	True				
ANR	3612372	UnaryOperationExpression	"! ( strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size ) )"		3612011	0					
ANR	3612373	UnaryOperator	!		3612011	0					
ANR	3612374	AssignmentExpression	"strtab = ( char * ) calloc ( 1 , 8 + strtab_section -> sh_size )"		3612011	1		=			
ANR	3612375	Identifier	strtab		3612011	0					
ANR	3612376	CastExpression	"( char * ) calloc ( 1 , 8 + strtab_section -> sh_size )"		3612011	1					
ANR	3612377	CastTarget	char *		3612011	0					
ANR	3612378	CallExpression	"calloc ( 1 , 8 + strtab_section -> sh_size )"		3612011	1					
ANR	3612379	Callee	calloc		3612011	0					
ANR	3612380	Identifier	calloc		3612011	0					
ANR	3612381	ArgumentList	1		3612011	1					
ANR	3612382	Argument	1		3612011	0					
ANR	3612383	PrimaryExpression	1		3612011	0					
ANR	3612384	Argument	8 + strtab_section -> sh_size		3612011	1					
ANR	3612385	AdditiveExpression	8 + strtab_section -> sh_size		3612011	0		+			
ANR	3612386	PrimaryExpression	8		3612011	0					
ANR	3612387	PtrMemberAccess	strtab_section -> sh_size		3612011	1					
ANR	3612388	Identifier	strtab_section		3612011	0					
ANR	3612389	Identifier	sh_size		3612011	1					
ANR	3612390	CompoundStatement		43:69:1416:1416	3612011	1					
ANR	3612391	ExpressionStatement	"bprintf ( ""malloc (syms strtab)"" )"	3378:5:102242:102274	3612011	0	True				
ANR	3612392	CallExpression	"bprintf ( ""malloc (syms strtab)"" )"		3612011	0					
ANR	3612393	Callee	bprintf		3612011	0					
ANR	3612394	Identifier	bprintf		3612011	0					
ANR	3612395	ArgumentList	"""malloc (syms strtab)"""		3612011	1					
ANR	3612396	Argument	"""malloc (syms strtab)"""		3612011	0					
ANR	3612397	PrimaryExpression	"""malloc (syms strtab)"""		3612011	0					
ANR	3612398	GotoStatement	goto beach ;	3379:5:102281:102291	3612011	1	True				
ANR	3612399	Identifier	beach		3612011	0					
ANR	3612400	IfStatement	if ( strtab_section -> sh_offset > bin -> size || strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size )		3612011	1					
ANR	3612401	Condition	strtab_section -> sh_offset > bin -> size || strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size	3381:8:102307:102416	3612011	0	True				
ANR	3612402	OrExpression	strtab_section -> sh_offset > bin -> size || strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size		3612011	0		||			
ANR	3612403	RelationalExpression	strtab_section -> sh_offset > bin -> size		3612011	0		>			
ANR	3612404	PtrMemberAccess	strtab_section -> sh_offset		3612011	0					
ANR	3612405	Identifier	strtab_section		3612011	0					
ANR	3612406	Identifier	sh_offset		3612011	1					
ANR	3612407	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612408	Identifier	bin		3612011	0					
ANR	3612409	Identifier	size		3612011	1					
ANR	3612410	RelationalExpression	strtab_section -> sh_offset + strtab_section -> sh_size > bin -> size		3612011	1		>			
ANR	3612411	AdditiveExpression	strtab_section -> sh_offset + strtab_section -> sh_size		3612011	0		+			
ANR	3612412	PtrMemberAccess	strtab_section -> sh_offset		3612011	0					
ANR	3612413	Identifier	strtab_section		3612011	0					
ANR	3612414	Identifier	sh_offset		3612011	1					
ANR	3612415	PtrMemberAccess	strtab_section -> sh_size		3612011	1					
ANR	3612416	Identifier	strtab_section		3612011	0					
ANR	3612417	Identifier	sh_size		3612011	1					
ANR	3612418	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612419	Identifier	bin		3612011	0					
ANR	3612420	Identifier	size		3612011	1					
ANR	3612421	CompoundStatement		48:71:1600:1600	3612011	1					
ANR	3612422	GotoStatement	goto beach ;	3383:5:102426:102436	3612011	0	True				
ANR	3612423	Identifier	beach		3612011	0					
ANR	3612424	IfStatement	"if ( r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size ) == - 1 )"		3612011	2					
ANR	3612425	Condition	"r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size ) == - 1"	3385:8:102452:102552	3612011	0	True				
ANR	3612426	EqualityExpression	"r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size ) == - 1"		3612011	0		==			
ANR	3612427	CallExpression	"r_buf_read_at ( bin -> b , strtab_section -> sh_offset , ( ut8 * ) strtab , strtab_section -> sh_size )"		3612011	0					
ANR	3612428	Callee	r_buf_read_at		3612011	0					
ANR	3612429	Identifier	r_buf_read_at		3612011	0					
ANR	3612430	ArgumentList	bin -> b		3612011	1					
ANR	3612431	Argument	bin -> b		3612011	0					
ANR	3612432	PtrMemberAccess	bin -> b		3612011	0					
ANR	3612433	Identifier	bin		3612011	0					
ANR	3612434	Identifier	b		3612011	1					
ANR	3612435	Argument	strtab_section -> sh_offset		3612011	1					
ANR	3612436	PtrMemberAccess	strtab_section -> sh_offset		3612011	0					
ANR	3612437	Identifier	strtab_section		3612011	0					
ANR	3612438	Identifier	sh_offset		3612011	1					
ANR	3612439	Argument	( ut8 * ) strtab		3612011	2					
ANR	3612440	CastExpression	( ut8 * ) strtab		3612011	0					
ANR	3612441	CastTarget	ut8 *		3612011	0					
ANR	3612442	Identifier	strtab		3612011	1					
ANR	3612443	Argument	strtab_section -> sh_size		3612011	3					
ANR	3612444	PtrMemberAccess	strtab_section -> sh_size		3612011	0					
ANR	3612445	Identifier	strtab_section		3612011	0					
ANR	3612446	Identifier	sh_size		3612011	1					
ANR	3612447	UnaryOperationExpression	- 1		3612011	1					
ANR	3612448	UnaryOperator	-		3612011	0					
ANR	3612449	PrimaryExpression	1		3612011	1					
ANR	3612450	CompoundStatement		52:53:1736:1736	3612011	1					
ANR	3612451	ExpressionStatement	"bprintf ( ""read (syms strtab)\\n"" )"	3387:5:102562:102594	3612011	0	True				
ANR	3612452	CallExpression	"bprintf ( ""read (syms strtab)\\n"" )"		3612011	0					
ANR	3612453	Callee	bprintf		3612011	0					
ANR	3612454	Identifier	bprintf		3612011	0					
ANR	3612455	ArgumentList	"""read (syms strtab)\\n"""		3612011	1					
ANR	3612456	Argument	"""read (syms strtab)\\n"""		3612011	0					
ANR	3612457	PrimaryExpression	"""read (syms strtab)\\n"""		3612011	0					
ANR	3612458	GotoStatement	goto beach ;	3388:5:102601:102611	3612011	1	True				
ANR	3612459	Identifier	beach		3612011	0					
ANR	3612460	ExpressionStatement	newsize = 1 + bin -> shdr [ i ] . sh_size	3392:3:102628:102662	3612011	5	True				
ANR	3612461	AssignmentExpression	newsize = 1 + bin -> shdr [ i ] . sh_size		3612011	0		=			
ANR	3612462	Identifier	newsize		3612011	0					
ANR	3612463	AdditiveExpression	1 + bin -> shdr [ i ] . sh_size		3612011	1		+			
ANR	3612464	PrimaryExpression	1		3612011	0					
ANR	3612465	MemberAccess	bin -> shdr [ i ] . sh_size		3612011	1					
ANR	3612466	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612467	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612468	Identifier	bin		3612011	0					
ANR	3612469	Identifier	shdr		3612011	1					
ANR	3612470	Identifier	i		3612011	1					
ANR	3612471	Identifier	sh_size		3612011	1					
ANR	3612472	IfStatement	if ( newsize < 0 || newsize > bin -> size )		3612011	6					
ANR	3612473	Condition	newsize < 0 || newsize > bin -> size	3393:7:102671:102704	3612011	0	True				
ANR	3612474	OrExpression	newsize < 0 || newsize > bin -> size		3612011	0		||			
ANR	3612475	RelationalExpression	newsize < 0		3612011	0		<			
ANR	3612476	Identifier	newsize		3612011	0					
ANR	3612477	PrimaryExpression	0		3612011	1					
ANR	3612478	RelationalExpression	newsize > bin -> size		3612011	1		>			
ANR	3612479	Identifier	newsize		3612011	0					
ANR	3612480	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612481	Identifier	bin		3612011	0					
ANR	3612482	Identifier	size		3612011	1					
ANR	3612483	CompoundStatement		59:43:1888:1888	3612011	1					
ANR	3612484	ExpressionStatement	"bprintf ( ""invalid shdr %d size\\n"" , i )"	3394:4:102713:102750	3612011	0	True				
ANR	3612485	CallExpression	"bprintf ( ""invalid shdr %d size\\n"" , i )"		3612011	0					
ANR	3612486	Callee	bprintf		3612011	0					
ANR	3612487	Identifier	bprintf		3612011	0					
ANR	3612488	ArgumentList	"""invalid shdr %d size\\n"""		3612011	1					
ANR	3612489	Argument	"""invalid shdr %d size\\n"""		3612011	0					
ANR	3612490	PrimaryExpression	"""invalid shdr %d size\\n"""		3612011	0					
ANR	3612491	Argument	i		3612011	1					
ANR	3612492	Identifier	i		3612011	0					
ANR	3612493	GotoStatement	goto beach ;	3395:4:102756:102766	3612011	1	True				
ANR	3612494	Identifier	beach		3612011	0					
ANR	3612495	ExpressionStatement	nsym = ( int ) ( bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) ) )	3397:3:102776:102831	3612011	7	True				
ANR	3612496	AssignmentExpression	nsym = ( int ) ( bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) ) )		3612011	0		=			
ANR	3612497	Identifier	nsym		3612011	0					
ANR	3612498	CastExpression	( int ) ( bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) ) )		3612011	1					
ANR	3612499	CastTarget	int		3612011	0					
ANR	3612500	MultiplicativeExpression	bin -> shdr [ i ] . sh_size / sizeof ( Elf_ ( Sym ) )		3612011	1		/			
ANR	3612501	MemberAccess	bin -> shdr [ i ] . sh_size		3612011	0					
ANR	3612502	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612503	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612504	Identifier	bin		3612011	0					
ANR	3612505	Identifier	shdr		3612011	1					
ANR	3612506	Identifier	i		3612011	1					
ANR	3612507	Identifier	sh_size		3612011	1					
ANR	3612508	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3612011	1					
ANR	3612509	Sizeof	sizeof		3612011	0					
ANR	3612510	CallExpression	Elf_ ( Sym )		3612011	1					
ANR	3612511	Callee	Elf_		3612011	0					
ANR	3612512	Identifier	Elf_		3612011	0					
ANR	3612513	ArgumentList	Sym		3612011	1					
ANR	3612514	Argument	Sym		3612011	0					
ANR	3612515	Identifier	Sym		3612011	0					
ANR	3612516	IfStatement	if ( nsym < 0 )		3612011	8					
ANR	3612517	Condition	nsym < 0	3398:7:102840:102847	3612011	0	True				
ANR	3612518	RelationalExpression	nsym < 0		3612011	0		<			
ANR	3612519	Identifier	nsym		3612011	0					
ANR	3612520	PrimaryExpression	0		3612011	1					
ANR	3612521	CompoundStatement		64:17:2031:2031	3612011	1					
ANR	3612522	GotoStatement	goto beach ;	3399:4:102856:102866	3612011	0	True				
ANR	3612523	Identifier	beach		3612011	0					
ANR	3612524	CompoundStatement		69:4:2107:2152	3612011	9					
ANR	3612525	IdentifierDeclStatement	ut64 sh_begin = bin -> shdr [ i ] . sh_offset ;	3402:4:102882:102920	3612011	0	True				
ANR	3612526	IdentifierDecl	sh_begin = bin -> shdr [ i ] . sh_offset		3612011	0					
ANR	3612527	IdentifierDeclType	ut64		3612011	0					
ANR	3612528	Identifier	sh_begin		3612011	1					
ANR	3612529	AssignmentExpression	sh_begin = bin -> shdr [ i ] . sh_offset		3612011	2		=			
ANR	3612530	Identifier	sh_begin		3612011	0					
ANR	3612531	MemberAccess	bin -> shdr [ i ] . sh_offset		3612011	1					
ANR	3612532	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612533	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612534	Identifier	bin		3612011	0					
ANR	3612535	Identifier	shdr		3612011	1					
ANR	3612536	Identifier	i		3612011	1					
ANR	3612537	Identifier	sh_offset		3612011	1					
ANR	3612538	IdentifierDeclStatement	ut64 sh_end = sh_begin + bin -> shdr [ i ] . sh_size ;	3403:4:102926:102971	3612011	1	True				
ANR	3612539	IdentifierDecl	sh_end = sh_begin + bin -> shdr [ i ] . sh_size		3612011	0					
ANR	3612540	IdentifierDeclType	ut64		3612011	0					
ANR	3612541	Identifier	sh_end		3612011	1					
ANR	3612542	AssignmentExpression	sh_end = sh_begin + bin -> shdr [ i ] . sh_size		3612011	2		=			
ANR	3612543	Identifier	sh_end		3612011	0					
ANR	3612544	AdditiveExpression	sh_begin + bin -> shdr [ i ] . sh_size		3612011	1		+			
ANR	3612545	Identifier	sh_begin		3612011	0					
ANR	3612546	MemberAccess	bin -> shdr [ i ] . sh_size		3612011	1					
ANR	3612547	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612548	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612549	Identifier	bin		3612011	0					
ANR	3612550	Identifier	shdr		3612011	1					
ANR	3612551	Identifier	i		3612011	1					
ANR	3612552	Identifier	sh_size		3612011	1					
ANR	3612553	IfStatement	if ( sh_begin > bin -> size )		3612011	2					
ANR	3612554	Condition	sh_begin > bin -> size	3404:8:102981:103000	3612011	0	True				
ANR	3612555	RelationalExpression	sh_begin > bin -> size		3612011	0		>			
ANR	3612556	Identifier	sh_begin		3612011	0					
ANR	3612557	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612558	Identifier	bin		3612011	0					
ANR	3612559	Identifier	size		3612011	1					
ANR	3612560	CompoundStatement		70:30:2184:2184	3612011	1					
ANR	3612561	GotoStatement	goto beach ;	3405:5:103010:103020	3612011	0	True				
ANR	3612562	Identifier	beach		3612011	0					
ANR	3612563	IfStatement	if ( sh_end > bin -> size )		3612011	3					
ANR	3612564	Condition	sh_end > bin -> size	3407:8:103036:103053	3612011	0	True				
ANR	3612565	RelationalExpression	sh_end > bin -> size		3612011	0		>			
ANR	3612566	Identifier	sh_end		3612011	0					
ANR	3612567	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612568	Identifier	bin		3612011	0					
ANR	3612569	Identifier	size		3612011	1					
ANR	3612570	CompoundStatement		74:5:2244:2281	3612011	1					
ANR	3612571	IdentifierDeclStatement	st64 newshsize = bin -> size - sh_begin ;	3408:5:103063:103100	3612011	0	True				
ANR	3612572	IdentifierDecl	newshsize = bin -> size - sh_begin		3612011	0					
ANR	3612573	IdentifierDeclType	st64		3612011	0					
ANR	3612574	Identifier	newshsize		3612011	1					
ANR	3612575	AssignmentExpression	newshsize = bin -> size - sh_begin		3612011	2		=			
ANR	3612576	Identifier	newshsize		3612011	0					
ANR	3612577	AdditiveExpression	bin -> size - sh_begin		3612011	1		-			
ANR	3612578	PtrMemberAccess	bin -> size		3612011	0					
ANR	3612579	Identifier	bin		3612011	0					
ANR	3612580	Identifier	size		3612011	1					
ANR	3612581	Identifier	sh_begin		3612011	1					
ANR	3612582	ExpressionStatement	nsym = ( int ) ( newshsize / sizeof ( Elf_ ( Sym ) ) )	3409:5:103107:103151	3612011	1	True				
ANR	3612583	AssignmentExpression	nsym = ( int ) ( newshsize / sizeof ( Elf_ ( Sym ) ) )		3612011	0		=			
ANR	3612584	Identifier	nsym		3612011	0					
ANR	3612585	CastExpression	( int ) ( newshsize / sizeof ( Elf_ ( Sym ) ) )		3612011	1					
ANR	3612586	CastTarget	int		3612011	0					
ANR	3612587	MultiplicativeExpression	newshsize / sizeof ( Elf_ ( Sym ) )		3612011	1		/			
ANR	3612588	Identifier	newshsize		3612011	0					
ANR	3612589	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3612011	1					
ANR	3612590	Sizeof	sizeof		3612011	0					
ANR	3612591	CallExpression	Elf_ ( Sym )		3612011	1					
ANR	3612592	Callee	Elf_		3612011	0					
ANR	3612593	Identifier	Elf_		3612011	0					
ANR	3612594	ArgumentList	Sym		3612011	1					
ANR	3612595	Argument	Sym		3612011	0					
ANR	3612596	Identifier	Sym		3612011	0					
ANR	3612597	Statement	if	3412:3:103167:103168	3612011	10	True				
ANR	3612598	Statement	(	3412:6:103170:103170	3612011	11	True				
ANR	3612599	Statement	!	3412:7:103171:103171	3612011	12	True				
ANR	3612600	Statement	(	3412:8:103172:103172	3612011	13	True				
ANR	3612601	Statement	sym	3412:9:103173:103175	3612011	14	True				
ANR	3612602	Statement	=	3412:13:103177:103177	3612011	15	True				
ANR	3612603	Statement	(	3412:15:103179:103179	3612011	16	True				
ANR	3612604	Statement	Elf_	3412:16:103180:103183	3612011	17	True				
ANR	3612605	Statement	(	3412:20:103184:103184	3612011	18	True				
ANR	3612606	Statement	Sym	3412:21:103185:103187	3612011	19	True				
ANR	3612607	Statement	)	3412:24:103188:103188	3612011	20	True				
ANR	3612608	Statement	*	3412:26:103190:103190	3612011	21	True				
ANR	3612609	Statement	)	3412:27:103191:103191	3612011	22	True				
ANR	3612610	Statement	calloc	3412:28:103192:103197	3612011	23	True				
ANR	3612611	Statement	(	3412:35:103199:103199	3612011	24	True				
ANR	3612612	Statement	nsym	3412:36:103200:103203	3612011	25	True				
ANR	3612613	Statement	","	3412:40:103204:103204	3612011	26	True				
ANR	3612614	Statement	sizeof	3412:42:103206:103211	3612011	27	True				
ANR	3612615	Statement	(	3412:49:103213:103213	3612011	28	True				
ANR	3612616	Statement	Elf_	3412:50:103214:103217	3612011	29	True				
ANR	3612617	Statement	(	3412:54:103218:103218	3612011	30	True				
ANR	3612618	Statement	Sym	3412:55:103219:103221	3612011	31	True				
ANR	3612619	Statement	)	3412:58:103222:103222	3612011	32	True				
ANR	3612620	Statement	)	3412:59:103223:103223	3612011	33	True				
ANR	3612621	Statement	)	3412:60:103224:103224	3612011	34	True				
ANR	3612622	Statement	)	3412:61:103225:103225	3612011	35	True				
ANR	3612623	Statement	)	3412:62:103226:103226	3612011	36	True				
ANR	3612624	CompoundStatement		78:64:2409:2409	3612011	37					
ANR	3612625	ExpressionStatement	"bprintf ( ""calloc (syms)"" )"	3413:4:103234:103259	3612011	0	True				
ANR	3612626	CallExpression	"bprintf ( ""calloc (syms)"" )"		3612011	0					
ANR	3612627	Callee	bprintf		3612011	0					
ANR	3612628	Identifier	bprintf		3612011	0					
ANR	3612629	ArgumentList	"""calloc (syms)"""		3612011	1					
ANR	3612630	Argument	"""calloc (syms)"""		3612011	0					
ANR	3612631	PrimaryExpression	"""calloc (syms)"""		3612011	0					
ANR	3612632	GotoStatement	goto beach ;	3414:4:103265:103275	3612011	1	True				
ANR	3612633	Identifier	beach		3612011	0					
ANR	3612634	IfStatement	"if ( ! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) ) )"		3612011	38					
ANR	3612635	Condition	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"	3416:7:103289:103331	3612011	0	True				
ANR	3612636	UnaryOperationExpression	"! UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		3612011	0					
ANR	3612637	UnaryOperator	!		3612011	0					
ANR	3612638	CallExpression	"UT32_MUL ( & size , nsym , sizeof ( Elf_ ( Sym ) ) )"		3612011	1					
ANR	3612639	Callee	UT32_MUL		3612011	0					
ANR	3612640	Identifier	UT32_MUL		3612011	0					
ANR	3612641	ArgumentList	& size		3612011	1					
ANR	3612642	Argument	& size		3612011	0					
ANR	3612643	UnaryOperationExpression	& size		3612011	0					
ANR	3612644	UnaryOperator	&		3612011	0					
ANR	3612645	Identifier	size		3612011	1					
ANR	3612646	Argument	nsym		3612011	1					
ANR	3612647	Identifier	nsym		3612011	0					
ANR	3612648	Argument	sizeof ( Elf_ ( Sym ) )		3612011	2					
ANR	3612649	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3612011	0					
ANR	3612650	Sizeof	sizeof		3612011	0					
ANR	3612651	CallExpression	Elf_ ( Sym )		3612011	1					
ANR	3612652	Callee	Elf_		3612011	0					
ANR	3612653	Identifier	Elf_		3612011	0					
ANR	3612654	ArgumentList	Sym		3612011	1					
ANR	3612655	Argument	Sym		3612011	0					
ANR	3612656	Identifier	Sym		3612011	0					
ANR	3612657	CompoundStatement		82:52:2515:2515	3612011	1					
ANR	3612658	GotoStatement	goto beach ;	3417:4:103340:103350	3612011	0	True				
ANR	3612659	Identifier	beach		3612011	0					
ANR	3612660	IfStatement	if ( size < 1 || size > bin -> size )		3612011	39					
ANR	3612661	Condition	size < 1 || size > bin -> size	3419:7:103364:103391	3612011	0	True				
ANR	3612662	OrExpression	size < 1 || size > bin -> size		3612011	0		||			
ANR	3612663	RelationalExpression	size < 1		3612011	0		<			
ANR	3612664	Identifier	size		3612011	0					
ANR	3612665	PrimaryExpression	1		3612011	1					
ANR	3612666	RelationalExpression	size > bin -> size		3612011	1		>			
ANR	3612667	Identifier	size		3612011	0					
ANR	3612668	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612669	Identifier	bin		3612011	0					
ANR	3612670	Identifier	size		3612011	1					
ANR	3612671	CompoundStatement		85:37:2575:2575	3612011	1					
ANR	3612672	GotoStatement	goto beach ;	3420:4:103400:103410	3612011	0	True				
ANR	3612673	Identifier	beach		3612011	0					
ANR	3612674	IfStatement	if ( bin -> shdr [ i ] . sh_offset > bin -> size )		3612011	40					
ANR	3612675	Condition	bin -> shdr [ i ] . sh_offset > bin -> size	3422:7:103424:103457	3612011	0	True				
ANR	3612676	RelationalExpression	bin -> shdr [ i ] . sh_offset > bin -> size		3612011	0		>			
ANR	3612677	MemberAccess	bin -> shdr [ i ] . sh_offset		3612011	0					
ANR	3612678	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612679	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612680	Identifier	bin		3612011	0					
ANR	3612681	Identifier	shdr		3612011	1					
ANR	3612682	Identifier	i		3612011	1					
ANR	3612683	Identifier	sh_offset		3612011	1					
ANR	3612684	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612685	Identifier	bin		3612011	0					
ANR	3612686	Identifier	size		3612011	1					
ANR	3612687	CompoundStatement		88:43:2641:2641	3612011	1					
ANR	3612688	GotoStatement	goto beach ;	3423:4:103466:103476	3612011	0	True				
ANR	3612689	Identifier	beach		3612011	0					
ANR	3612690	IfStatement	if ( bin -> shdr [ i ] . sh_offset + size > bin -> size )		3612011	41					
ANR	3612691	Condition	bin -> shdr [ i ] . sh_offset + size > bin -> size	3425:7:103490:103530	3612011	0	True				
ANR	3612692	RelationalExpression	bin -> shdr [ i ] . sh_offset + size > bin -> size		3612011	0		>			
ANR	3612693	AdditiveExpression	bin -> shdr [ i ] . sh_offset + size		3612011	0		+			
ANR	3612694	MemberAccess	bin -> shdr [ i ] . sh_offset		3612011	0					
ANR	3612695	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612696	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612697	Identifier	bin		3612011	0					
ANR	3612698	Identifier	shdr		3612011	1					
ANR	3612699	Identifier	i		3612011	1					
ANR	3612700	Identifier	sh_offset		3612011	1					
ANR	3612701	Identifier	size		3612011	1					
ANR	3612702	PtrMemberAccess	bin -> size		3612011	1					
ANR	3612703	Identifier	bin		3612011	0					
ANR	3612704	Identifier	size		3612011	1					
ANR	3612705	CompoundStatement		91:50:2714:2714	3612011	1					
ANR	3612706	GotoStatement	goto beach ;	3426:4:103539:103549	3612011	0	True				
ANR	3612707	Identifier	beach		3612011	0					
ANR	3612708	ForStatement	for ( j = 0 ; j < nsym ; j ++ )		3612011	42					
ANR	3612709	ForInit	j = 0 ;	3428:8:103564:103569	3612011	0	True				
ANR	3612710	AssignmentExpression	j = 0		3612011	0		=			
ANR	3612711	Identifier	j		3612011	0					
ANR	3612712	PrimaryExpression	0		3612011	1					
ANR	3612713	Condition	j < nsym	3428:15:103571:103578	3612011	1	True				
ANR	3612714	RelationalExpression	j < nsym		3612011	0		<			
ANR	3612715	Identifier	j		3612011	0					
ANR	3612716	Identifier	nsym		3612011	1					
ANR	3612717	PostIncDecOperationExpression	j ++	3428:25:103581:103583	3612011	2	True				
ANR	3612718	Identifier	j		3612011	0					
ANR	3612719	IncDec	++		3612011	1					
ANR	3612720	CompoundStatement		95:4:2773:2782	3612011	3					
ANR	3612721	IdentifierDeclStatement	int k = 0 ;	3429:4:103592:103601	3612011	0	True				
ANR	3612722	IdentifierDecl	k = 0		3612011	0					
ANR	3612723	IdentifierDeclType	int		3612011	0					
ANR	3612724	Identifier	k		3612011	1					
ANR	3612725	AssignmentExpression	k = 0		3612011	2		=			
ANR	3612726	Identifier	k		3612011	0					
ANR	3612727	PrimaryExpression	0		3612011	1					
ANR	3612728	ExpressionStatement	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"	3430:4:103607:103705	3612011	1	True				
ANR	3612729	AssignmentExpression	"r = r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		3612011	0		=			
ANR	3612730	Identifier	r		3612011	0					
ANR	3612731	CallExpression	"r_buf_read_at ( bin -> b , bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) ) , s , sizeof ( Elf_ ( Sym ) ) )"		3612011	1					
ANR	3612732	Callee	r_buf_read_at		3612011	0					
ANR	3612733	Identifier	r_buf_read_at		3612011	0					
ANR	3612734	ArgumentList	bin -> b		3612011	1					
ANR	3612735	Argument	bin -> b		3612011	0					
ANR	3612736	PtrMemberAccess	bin -> b		3612011	0					
ANR	3612737	Identifier	bin		3612011	0					
ANR	3612738	Identifier	b		3612011	1					
ANR	3612739	Argument	bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) )		3612011	1					
ANR	3612740	AdditiveExpression	bin -> shdr [ i ] . sh_offset + j * sizeof ( Elf_ ( Sym ) )		3612011	0		+			
ANR	3612741	MemberAccess	bin -> shdr [ i ] . sh_offset		3612011	0					
ANR	3612742	ArrayIndexing	bin -> shdr [ i ]		3612011	0					
ANR	3612743	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3612744	Identifier	bin		3612011	0					
ANR	3612745	Identifier	shdr		3612011	1					
ANR	3612746	Identifier	i		3612011	1					
ANR	3612747	Identifier	sh_offset		3612011	1					
ANR	3612748	MultiplicativeExpression	j * sizeof ( Elf_ ( Sym ) )		3612011	1		*			
ANR	3612749	Identifier	j		3612011	0					
ANR	3612750	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3612011	1					
ANR	3612751	Sizeof	sizeof		3612011	0					
ANR	3612752	CallExpression	Elf_ ( Sym )		3612011	1					
ANR	3612753	Callee	Elf_		3612011	0					
ANR	3612754	Identifier	Elf_		3612011	0					
ANR	3612755	ArgumentList	Sym		3612011	1					
ANR	3612756	Argument	Sym		3612011	0					
ANR	3612757	Identifier	Sym		3612011	0					
ANR	3612758	Argument	s		3612011	2					
ANR	3612759	Identifier	s		3612011	0					
ANR	3612760	Argument	sizeof ( Elf_ ( Sym ) )		3612011	3					
ANR	3612761	SizeofExpression	sizeof ( Elf_ ( Sym ) )		3612011	0					
ANR	3612762	Sizeof	sizeof		3612011	0					
ANR	3612763	CallExpression	Elf_ ( Sym )		3612011	1					
ANR	3612764	Callee	Elf_		3612011	0					
ANR	3612765	Identifier	Elf_		3612011	0					
ANR	3612766	ArgumentList	Sym		3612011	1					
ANR	3612767	Argument	Sym		3612011	0					
ANR	3612768	Identifier	Sym		3612011	0					
ANR	3612769	IfStatement	if ( r < 1 )		3612011	2					
ANR	3612770	Condition	r < 1	3431:8:103715:103719	3612011	0	True				
ANR	3612771	RelationalExpression	r < 1		3612011	0		<			
ANR	3612772	Identifier	r		3612011	0					
ANR	3612773	PrimaryExpression	1		3612011	1					
ANR	3612774	CompoundStatement		97:15:2903:2903	3612011	1					
ANR	3612775	ExpressionStatement	"bprintf ( ""read (sym)\\n"" )"	3432:5:103729:103753	3612011	0	True				
ANR	3612776	CallExpression	"bprintf ( ""read (sym)\\n"" )"		3612011	0					
ANR	3612777	Callee	bprintf		3612011	0					
ANR	3612778	Identifier	bprintf		3612011	0					
ANR	3612779	ArgumentList	"""read (sym)\\n"""		3612011	1					
ANR	3612780	Argument	"""read (sym)\\n"""		3612011	0					
ANR	3612781	PrimaryExpression	"""read (sym)\\n"""		3612011	0					
ANR	3612782	GotoStatement	goto beach ;	3433:5:103760:103770	3612011	1	True				
ANR	3612783	Identifier	beach		3612011	0					
ANR	3612784	ExpressionStatement	"sym [ j ] . st_name = READ32 ( s , k )"	3436:4:103798:103828	3612011	3	True				
ANR	3612785	AssignmentExpression	"sym [ j ] . st_name = READ32 ( s , k )"		3612011	0		=			
ANR	3612786	MemberAccess	sym [ j ] . st_name		3612011	0					
ANR	3612787	ArrayIndexing	sym [ j ]		3612011	0					
ANR	3612788	Identifier	sym		3612011	0					
ANR	3612789	Identifier	j		3612011	1					
ANR	3612790	Identifier	st_name		3612011	1					
ANR	3612791	CallExpression	"READ32 ( s , k )"		3612011	1					
ANR	3612792	Callee	READ32		3612011	0					
ANR	3612793	Identifier	READ32		3612011	0					
ANR	3612794	ArgumentList	s		3612011	1					
ANR	3612795	Argument	s		3612011	0					
ANR	3612796	Identifier	s		3612011	0					
ANR	3612797	Argument	k		3612011	1					
ANR	3612798	Identifier	k		3612011	0					
ANR	3612799	ExpressionStatement	"sym [ j ] . st_info = READ8 ( s , k )"	3437:4:103834:103863	3612011	4	True				
ANR	3612800	AssignmentExpression	"sym [ j ] . st_info = READ8 ( s , k )"		3612011	0		=			
ANR	3612801	MemberAccess	sym [ j ] . st_info		3612011	0					
ANR	3612802	ArrayIndexing	sym [ j ]		3612011	0					
ANR	3612803	Identifier	sym		3612011	0					
ANR	3612804	Identifier	j		3612011	1					
ANR	3612805	Identifier	st_info		3612011	1					
ANR	3612806	CallExpression	"READ8 ( s , k )"		3612011	1					
ANR	3612807	Callee	READ8		3612011	0					
ANR	3612808	Identifier	READ8		3612011	0					
ANR	3612809	ArgumentList	s		3612011	1					
ANR	3612810	Argument	s		3612011	0					
ANR	3612811	Identifier	s		3612011	0					
ANR	3612812	Argument	k		3612011	1					
ANR	3612813	Identifier	k		3612011	0					
ANR	3612814	ExpressionStatement	"sym [ j ] . st_other = READ8 ( s , k )"	3438:4:103869:103899	3612011	5	True				
ANR	3612815	AssignmentExpression	"sym [ j ] . st_other = READ8 ( s , k )"		3612011	0		=			
ANR	3612816	MemberAccess	sym [ j ] . st_other		3612011	0					
ANR	3612817	ArrayIndexing	sym [ j ]		3612011	0					
ANR	3612818	Identifier	sym		3612011	0					
ANR	3612819	Identifier	j		3612011	1					
ANR	3612820	Identifier	st_other		3612011	1					
ANR	3612821	CallExpression	"READ8 ( s , k )"		3612011	1					
ANR	3612822	Callee	READ8		3612011	0					
ANR	3612823	Identifier	READ8		3612011	0					
ANR	3612824	ArgumentList	s		3612011	1					
ANR	3612825	Argument	s		3612011	0					
ANR	3612826	Identifier	s		3612011	0					
ANR	3612827	Argument	k		3612011	1					
ANR	3612828	Identifier	k		3612011	0					
ANR	3612829	ExpressionStatement	"sym [ j ] . st_shndx = READ16 ( s , k )"	3439:4:103905:103936	3612011	6	True				
ANR	3612830	AssignmentExpression	"sym [ j ] . st_shndx = READ16 ( s , k )"		3612011	0		=			
ANR	3612831	MemberAccess	sym [ j ] . st_shndx		3612011	0					
ANR	3612832	ArrayIndexing	sym [ j ]		3612011	0					
ANR	3612833	Identifier	sym		3612011	0					
ANR	3612834	Identifier	j		3612011	1					
ANR	3612835	Identifier	st_shndx		3612011	1					
ANR	3612836	CallExpression	"READ16 ( s , k )"		3612011	1					
ANR	3612837	Callee	READ16		3612011	0					
ANR	3612838	Identifier	READ16		3612011	0					
ANR	3612839	ArgumentList	s		3612011	1					
ANR	3612840	Argument	s		3612011	0					
ANR	3612841	Identifier	s		3612011	0					
ANR	3612842	Argument	k		3612011	1					
ANR	3612843	Identifier	k		3612011	0					
ANR	3612844	ExpressionStatement	"sym [ j ] . st_value = READ64 ( s , k )"	3440:4:103942:103973	3612011	7	True				
ANR	3612845	AssignmentExpression	"sym [ j ] . st_value = READ64 ( s , k )"		3612011	0		=			
ANR	3612846	MemberAccess	sym [ j ] . st_value		3612011	0					
ANR	3612847	ArrayIndexing	sym [ j ]		3612011	0					
ANR	3612848	Identifier	sym		3612011	0					
ANR	3612849	Identifier	j		3612011	1					
ANR	3612850	Identifier	st_value		3612011	1					
ANR	3612851	CallExpression	"READ64 ( s , k )"		3612011	1					
ANR	3612852	Callee	READ64		3612011	0					
ANR	3612853	Identifier	READ64		3612011	0					
ANR	3612854	ArgumentList	s		3612011	1					
ANR	3612855	Argument	s		3612011	0					
ANR	3612856	Identifier	s		3612011	0					
ANR	3612857	Argument	k		3612011	1					
ANR	3612858	Identifier	k		3612011	0					
ANR	3612859	ExpressionStatement	"sym [ j ] . st_size = READ64 ( s , k )"	3441:4:103979:104009	3612011	8	True				
ANR	3612860	AssignmentExpression	"sym [ j ] . st_size = READ64 ( s , k )"		3612011	0		=			
ANR	3612861	MemberAccess	sym [ j ] . st_size		3612011	0					
ANR	3612862	ArrayIndexing	sym [ j ]		3612011	0					
ANR	3612863	Identifier	sym		3612011	0					
ANR	3612864	Identifier	j		3612011	1					
ANR	3612865	Identifier	st_size		3612011	1					
ANR	3612866	CallExpression	"READ64 ( s , k )"		3612011	1					
ANR	3612867	Callee	READ64		3612011	0					
ANR	3612868	Identifier	READ64		3612011	0					
ANR	3612869	ArgumentList	s		3612011	1					
ANR	3612870	Argument	s		3612011	0					
ANR	3612871	Identifier	s		3612011	0					
ANR	3612872	Argument	k		3612011	1					
ANR	3612873	Identifier	k		3612011	0					
ANR	3612874	ExpressionStatement	"ret = realloc ( ret , ( ret_size + nsym ) * sizeof ( RBinElfSymbol ) )"	3451:3:104249:104312	3612011	43	True				
ANR	3612875	AssignmentExpression	"ret = realloc ( ret , ( ret_size + nsym ) * sizeof ( RBinElfSymbol ) )"		3612011	0		=			
ANR	3612876	Identifier	ret		3612011	0					
ANR	3612877	CallExpression	"realloc ( ret , ( ret_size + nsym ) * sizeof ( RBinElfSymbol ) )"		3612011	1					
ANR	3612878	Callee	realloc		3612011	0					
ANR	3612879	Identifier	realloc		3612011	0					
ANR	3612880	ArgumentList	ret		3612011	1					
ANR	3612881	Argument	ret		3612011	0					
ANR	3612882	Identifier	ret		3612011	0					
ANR	3612883	Argument	( ret_size + nsym ) * sizeof ( RBinElfSymbol )		3612011	1					
ANR	3612884	MultiplicativeExpression	( ret_size + nsym ) * sizeof ( RBinElfSymbol )		3612011	0		*			
ANR	3612885	AdditiveExpression	ret_size + nsym		3612011	0		+			
ANR	3612886	Identifier	ret_size		3612011	0					
ANR	3612887	Identifier	nsym		3612011	1					
ANR	3612888	SizeofExpression	sizeof ( RBinElfSymbol )		3612011	1					
ANR	3612889	Sizeof	sizeof		3612011	0					
ANR	3612890	SizeofOperand	RBinElfSymbol		3612011	1					
ANR	3612891	IfStatement	if ( ! ret )		3612011	44					
ANR	3612892	Condition	! ret	3452:7:104321:104324	3612011	0	True				
ANR	3612893	UnaryOperationExpression	! ret		3612011	0					
ANR	3612894	UnaryOperator	!		3612011	0					
ANR	3612895	Identifier	ret		3612011	1					
ANR	3612896	CompoundStatement		118:13:3508:3508	3612011	1					
ANR	3612897	ExpressionStatement	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"	3453:4:104333:104379	3612011	0	True				
ANR	3612898	CallExpression	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"		3612011	0					
ANR	3612899	Callee	bprintf		3612011	0					
ANR	3612900	Identifier	bprintf		3612011	0					
ANR	3612901	ArgumentList	"""Cannot allocate %d symbols\\n"""		3612011	1					
ANR	3612902	Argument	"""Cannot allocate %d symbols\\n"""		3612011	0					
ANR	3612903	PrimaryExpression	"""Cannot allocate %d symbols\\n"""		3612011	0					
ANR	3612904	Argument	nsym		3612011	1					
ANR	3612905	Identifier	nsym		3612011	0					
ANR	3612906	GotoStatement	goto beach ;	3454:4:104385:104395	3612011	1	True				
ANR	3612907	Identifier	beach		3612011	0					
ANR	3612908	ExpressionStatement	"memset ( ret + ret_size , 0 , nsym * sizeof ( RBinElfSymbol ) )"	3456:3:104405:104462	3612011	45	True				
ANR	3612909	CallExpression	"memset ( ret + ret_size , 0 , nsym * sizeof ( RBinElfSymbol ) )"		3612011	0					
ANR	3612910	Callee	memset		3612011	0					
ANR	3612911	Identifier	memset		3612011	0					
ANR	3612912	ArgumentList	ret + ret_size		3612011	1					
ANR	3612913	Argument	ret + ret_size		3612011	0					
ANR	3612914	AdditiveExpression	ret + ret_size		3612011	0		+			
ANR	3612915	Identifier	ret		3612011	0					
ANR	3612916	Identifier	ret_size		3612011	1					
ANR	3612917	Argument	0		3612011	1					
ANR	3612918	PrimaryExpression	0		3612011	0					
ANR	3612919	Argument	nsym * sizeof ( RBinElfSymbol )		3612011	2					
ANR	3612920	MultiplicativeExpression	nsym * sizeof ( RBinElfSymbol )		3612011	0		*			
ANR	3612921	Identifier	nsym		3612011	0					
ANR	3612922	SizeofExpression	sizeof ( RBinElfSymbol )		3612011	1					
ANR	3612923	Sizeof	sizeof		3612011	0					
ANR	3612924	SizeofOperand	RBinElfSymbol		3612011	1					
ANR	3612925	ExpressionStatement	prev_ret_size = ret_size	3457:3:104467:104491	3612011	46	True				
ANR	3612926	AssignmentExpression	prev_ret_size = ret_size		3612011	0		=			
ANR	3612927	Identifier	prev_ret_size		3612011	0					
ANR	3612928	Identifier	ret_size		3612011	1					
ANR	3612929	ExpressionStatement	ret_size += nsym	3458:3:104496:104512	3612011	47	True				
ANR	3612930	AssignmentExpression	ret_size += nsym		3612011	0		+=			
ANR	3612931	Identifier	ret_size		3612011	0					
ANR	3612932	Identifier	nsym		3612011	1					
ANR	3612933	ForStatement	for ( k = 1 ; k < nsym ; k ++ )		3612011	48					
ANR	3612934	ForInit	k = 1 ;	3459:8:104522:104527	3612011	0	True				
ANR	3612935	AssignmentExpression	k = 1		3612011	0		=			
ANR	3612936	Identifier	k		3612011	0					
ANR	3612937	PrimaryExpression	1		3612011	1					
ANR	3612938	Condition	k < nsym	3459:15:104529:104536	3612011	1	True				
ANR	3612939	RelationalExpression	k < nsym		3612011	0		<			
ANR	3612940	Identifier	k		3612011	0					
ANR	3612941	Identifier	nsym		3612011	1					
ANR	3612942	PostIncDecOperationExpression	k ++	3459:25:104539:104541	3612011	2	True				
ANR	3612943	Identifier	k		3612011	0					
ANR	3612944	IncDec	++		3612011	1					
ANR	3612945	CompoundStatement		128:4:3788:3812	3612011	3					
ANR	3612946	IdentifierDeclStatement	bool is_sht_null = false ;	3460:4:104550:104574	3612011	0	True				
ANR	3612947	IdentifierDecl	is_sht_null = false		3612011	0					
ANR	3612948	IdentifierDeclType	bool		3612011	0					
ANR	3612949	Identifier	is_sht_null		3612011	1					
ANR	3612950	AssignmentExpression	is_sht_null = false		3612011	2		=			
ANR	3612951	Identifier	false		3612011	0					
ANR	3612952	Identifier	false		3612011	1					
ANR	3612953	IdentifierDeclStatement	bool is_vaddr = false ;	3461:4:104580:104601	3612011	1	True				
ANR	3612954	IdentifierDecl	is_vaddr = false		3612011	0					
ANR	3612955	IdentifierDeclType	bool		3612011	0					
ANR	3612956	Identifier	is_vaddr		3612011	1					
ANR	3612957	AssignmentExpression	is_vaddr = false		3612011	2		=			
ANR	3612958	Identifier	false		3612011	0					
ANR	3612959	Identifier	false		3612011	1					
ANR	3612960	IdentifierDeclStatement	bool is_imported = false ;	3462:4:104607:104631	3612011	2	True				
ANR	3612961	IdentifierDecl	is_imported = false		3612011	0					
ANR	3612962	IdentifierDeclType	bool		3612011	0					
ANR	3612963	Identifier	is_imported		3612011	1					
ANR	3612964	AssignmentExpression	is_imported = false		3612011	2		=			
ANR	3612965	Identifier	false		3612011	0					
ANR	3612966	Identifier	false		3612011	1					
ANR	3612967	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS )		3612011	3					
ANR	3612968	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS	3463:8:104641:104672	3612011	0	True				
ANR	3612969	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		3612011	0		==			
ANR	3612970	Identifier	type		3612011	0					
ANR	3612971	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3612011	1					
ANR	3612972	CompoundStatement		129:43:3857:3857	3612011	1					
ANR	3612973	IfStatement	if ( sym [ k ] . st_value )		3612011	0					
ANR	3612974	Condition	sym [ k ] . st_value	3464:9:104687:104701	3612011	0	True				
ANR	3612975	MemberAccess	sym [ k ] . st_value		3612011	0					
ANR	3612976	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3612977	Identifier	sym		3612011	0					
ANR	3612978	Identifier	k		3612011	1					
ANR	3612979	Identifier	st_value		3612011	1					
ANR	3612980	CompoundStatement		130:26:3885:3885	3612011	1					
ANR	3612981	ExpressionStatement	toffset = sym [ k ] . st_value	3465:6:104712:104737	3612011	0	True				
ANR	3612982	AssignmentExpression	toffset = sym [ k ] . st_value		3612011	0		=			
ANR	3612983	Identifier	toffset		3612011	0					
ANR	3612984	MemberAccess	sym [ k ] . st_value		3612011	1					
ANR	3612985	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3612986	Identifier	sym		3612011	0					
ANR	3612987	Identifier	k		3612011	1					
ANR	3612988	Identifier	st_value		3612011	1					
ANR	3612989	ElseStatement	else		3612011	0					
ANR	3612990	IfStatement	"if ( ( toffset = get_import_addr ( bin , k ) ) == - 1 )"		3612011	0					
ANR	3612991	Condition	"( toffset = get_import_addr ( bin , k ) ) == - 1"	3466:16:104755:104796	3612011	0	True				
ANR	3612992	EqualityExpression	"( toffset = get_import_addr ( bin , k ) ) == - 1"		3612011	0		==			
ANR	3612993	AssignmentExpression	"toffset = get_import_addr ( bin , k )"		3612011	0		=			
ANR	3612994	Identifier	toffset		3612011	0					
ANR	3612995	CallExpression	"get_import_addr ( bin , k )"		3612011	1					
ANR	3612996	Callee	get_import_addr		3612011	0					
ANR	3612997	Identifier	get_import_addr		3612011	0					
ANR	3612998	ArgumentList	bin		3612011	1					
ANR	3612999	Argument	bin		3612011	0					
ANR	3613000	Identifier	bin		3612011	0					
ANR	3613001	Argument	k		3612011	1					
ANR	3613002	Identifier	k		3612011	0					
ANR	3613003	UnaryOperationExpression	- 1		3612011	1					
ANR	3613004	UnaryOperator	-		3612011	0					
ANR	3613005	PrimaryExpression	1		3612011	1					
ANR	3613006	CompoundStatement		132:59:3979:3979	3612011	1					
ANR	3613007	ExpressionStatement	toffset = 0	3467:6:104806:104817	3612011	0	True				
ANR	3613008	AssignmentExpression	toffset = 0		3612011	0		=			
ANR	3613009	Identifier	toffset		3612011	0					
ANR	3613010	PrimaryExpression	0		3612011	1					
ANR	3613011	ExpressionStatement	tsize = 16	3469:5:104831:104841	3612011	1	True				
ANR	3613012	AssignmentExpression	tsize = 16		3612011	0		=			
ANR	3613013	Identifier	tsize		3612011	0					
ANR	3613014	PrimaryExpression	16		3612011	1					
ANR	3613015	ExpressionStatement	is_imported = sym [ k ] . st_shndx == STN_UNDEF	3470:5:104848:104890	3612011	2	True				
ANR	3613016	AssignmentExpression	is_imported = sym [ k ] . st_shndx == STN_UNDEF		3612011	0		=			
ANR	3613017	Identifier	is_imported		3612011	0					
ANR	3613018	EqualityExpression	sym [ k ] . st_shndx == STN_UNDEF		3612011	1		==			
ANR	3613019	MemberAccess	sym [ k ] . st_shndx		3612011	0					
ANR	3613020	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613021	Identifier	sym		3612011	0					
ANR	3613022	Identifier	k		3612011	1					
ANR	3613023	Identifier	st_shndx		3612011	1					
ANR	3613024	Identifier	STN_UNDEF		3612011	1					
ANR	3613025	ElseStatement	else		3612011	0					
ANR	3613026	CompoundStatement		137:11:4084:4084	3612011	0					
ANR	3613027	ExpressionStatement	tsize = sym [ k ] . st_size	3472:5:104910:104932	3612011	0	True				
ANR	3613028	AssignmentExpression	tsize = sym [ k ] . st_size		3612011	0		=			
ANR	3613029	Identifier	tsize		3612011	0					
ANR	3613030	MemberAccess	sym [ k ] . st_size		3612011	1					
ANR	3613031	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613032	Identifier	sym		3612011	0					
ANR	3613033	Identifier	k		3612011	1					
ANR	3613034	Identifier	st_size		3612011	1					
ANR	3613035	ExpressionStatement	toffset = ( ut64 ) sym [ k ] . st_value	3473:5:104939:104970	3612011	1	True				
ANR	3613036	AssignmentExpression	toffset = ( ut64 ) sym [ k ] . st_value		3612011	0		=			
ANR	3613037	Identifier	toffset		3612011	0					
ANR	3613038	CastExpression	( ut64 ) sym [ k ] . st_value		3612011	1					
ANR	3613039	CastTarget	ut64		3612011	0					
ANR	3613040	MemberAccess	sym [ k ] . st_value		3612011	1					
ANR	3613041	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613042	Identifier	sym		3612011	0					
ANR	3613043	Identifier	k		3612011	1					
ANR	3613044	Identifier	st_value		3612011	1					
ANR	3613045	ExpressionStatement	is_sht_null = sym [ k ] . st_shndx == SHT_NULL	3474:5:104977:105018	3612011	2	True				
ANR	3613046	AssignmentExpression	is_sht_null = sym [ k ] . st_shndx == SHT_NULL		3612011	0		=			
ANR	3613047	Identifier	is_sht_null		3612011	0					
ANR	3613048	EqualityExpression	sym [ k ] . st_shndx == SHT_NULL		3612011	1		==			
ANR	3613049	MemberAccess	sym [ k ] . st_shndx		3612011	0					
ANR	3613050	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613051	Identifier	sym		3612011	0					
ANR	3613052	Identifier	k		3612011	1					
ANR	3613053	Identifier	st_shndx		3612011	1					
ANR	3613054	Identifier	SHT_NULL		3612011	1					
ANR	3613055	IfStatement	if ( is_bin_etrel ( bin ) )		3612011	4					
ANR	3613056	Condition	is_bin_etrel ( bin )	3476:8:105034:105051	3612011	0	True				
ANR	3613057	CallExpression	is_bin_etrel ( bin )		3612011	0					
ANR	3613058	Callee	is_bin_etrel		3612011	0					
ANR	3613059	Identifier	is_bin_etrel		3612011	0					
ANR	3613060	ArgumentList	bin		3612011	1					
ANR	3613061	Argument	bin		3612011	0					
ANR	3613062	Identifier	bin		3612011	0					
ANR	3613063	CompoundStatement		142:28:4235:4235	3612011	1					
ANR	3613064	IfStatement	if ( sym [ k ] . st_shndx < bin -> ehdr . e_shnum )		3612011	0					
ANR	3613065	Condition	sym [ k ] . st_shndx < bin -> ehdr . e_shnum	3477:9:105065:105099	3612011	0	True				
ANR	3613066	RelationalExpression	sym [ k ] . st_shndx < bin -> ehdr . e_shnum		3612011	0		<			
ANR	3613067	MemberAccess	sym [ k ] . st_shndx		3612011	0					
ANR	3613068	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613069	Identifier	sym		3612011	0					
ANR	3613070	Identifier	k		3612011	1					
ANR	3613071	Identifier	st_shndx		3612011	1					
ANR	3613072	MemberAccess	bin -> ehdr . e_shnum		3612011	1					
ANR	3613073	PtrMemberAccess	bin -> ehdr		3612011	0					
ANR	3613074	Identifier	bin		3612011	0					
ANR	3613075	Identifier	ehdr		3612011	1					
ANR	3613076	Identifier	e_shnum		3612011	1					
ANR	3613077	CompoundStatement		143:46:4283:4283	3612011	1					
ANR	3613078	ExpressionStatement	ret [ ret_ctr ] . offset = sym [ k ] . st_value + bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset	3478:6:105110:105186	3612011	0	True				
ANR	3613079	AssignmentExpression	ret [ ret_ctr ] . offset = sym [ k ] . st_value + bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		3612011	0		=			
ANR	3613080	MemberAccess	ret [ ret_ctr ] . offset		3612011	0					
ANR	3613081	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613082	Identifier	ret		3612011	0					
ANR	3613083	Identifier	ret_ctr		3612011	1					
ANR	3613084	Identifier	offset		3612011	1					
ANR	3613085	AdditiveExpression	sym [ k ] . st_value + bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		3612011	1		+			
ANR	3613086	MemberAccess	sym [ k ] . st_value		3612011	0					
ANR	3613087	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613088	Identifier	sym		3612011	0					
ANR	3613089	Identifier	k		3612011	1					
ANR	3613090	Identifier	st_value		3612011	1					
ANR	3613091	MemberAccess	bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		3612011	1					
ANR	3613092	ArrayIndexing	bin -> shdr [ sym [ k ] . st_shndx ]		3612011	0					
ANR	3613093	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3613094	Identifier	bin		3612011	0					
ANR	3613095	Identifier	shdr		3612011	1					
ANR	3613096	MemberAccess	sym [ k ] . st_shndx		3612011	1					
ANR	3613097	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613098	Identifier	sym		3612011	0					
ANR	3613099	Identifier	k		3612011	1					
ANR	3613100	Identifier	st_shndx		3612011	1					
ANR	3613101	Identifier	sh_offset		3612011	1					
ANR	3613102	ElseStatement	else		3612011	0					
ANR	3613103	CompoundStatement		146:11:4387:4387	3612011	0					
ANR	3613104	ExpressionStatement	"ret [ ret_ctr ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"	3481:5:105213:105273	3612011	0	True				
ANR	3613105	AssignmentExpression	"ret [ ret_ctr ] . offset = Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		3612011	0		=			
ANR	3613106	MemberAccess	ret [ ret_ctr ] . offset		3612011	0					
ANR	3613107	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613108	Identifier	ret		3612011	0					
ANR	3613109	Identifier	ret_ctr		3612011	1					
ANR	3613110	Identifier	offset		3612011	1					
ANR	3613111	CallExpression	"Elf_ ( r_bin_elf_v2p_new ) ( bin , toffset )"		3612011	1					
ANR	3613112	Callee	Elf_ ( r_bin_elf_v2p_new )		3612011	0					
ANR	3613113	CallExpression	Elf_ ( r_bin_elf_v2p_new )		3612011	0					
ANR	3613114	Callee	Elf_		3612011	0					
ANR	3613115	Identifier	Elf_		3612011	0					
ANR	3613116	ArgumentList	r_bin_elf_v2p_new		3612011	1					
ANR	3613117	Argument	r_bin_elf_v2p_new		3612011	0					
ANR	3613118	Identifier	r_bin_elf_v2p_new		3612011	0					
ANR	3613119	ArgumentList	bin		3612011	1					
ANR	3613120	Argument	bin		3612011	0					
ANR	3613121	Identifier	bin		3612011	0					
ANR	3613122	Argument	toffset		3612011	1					
ANR	3613123	Identifier	toffset		3612011	0					
ANR	3613124	IfStatement	if ( ret [ ret_ctr ] . offset == UT64_MAX )		3612011	1					
ANR	3613125	Condition	ret [ ret_ctr ] . offset == UT64_MAX	3482:9:105284:105314	3612011	0	True				
ANR	3613126	EqualityExpression	ret [ ret_ctr ] . offset == UT64_MAX		3612011	0		==			
ANR	3613127	MemberAccess	ret [ ret_ctr ] . offset		3612011	0					
ANR	3613128	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613129	Identifier	ret		3612011	0					
ANR	3613130	Identifier	ret_ctr		3612011	1					
ANR	3613131	Identifier	offset		3612011	1					
ANR	3613132	Identifier	UT64_MAX		3612011	1					
ANR	3613133	CompoundStatement		148:42:4498:4498	3612011	1					
ANR	3613134	ExpressionStatement	ret [ ret_ctr ] . offset = toffset	3483:6:105325:105354	3612011	0	True				
ANR	3613135	AssignmentExpression	ret [ ret_ctr ] . offset = toffset		3612011	0		=			
ANR	3613136	MemberAccess	ret [ ret_ctr ] . offset		3612011	0					
ANR	3613137	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613138	Identifier	ret		3612011	0					
ANR	3613139	Identifier	ret_ctr		3612011	1					
ANR	3613140	Identifier	offset		3612011	1					
ANR	3613141	Identifier	toffset		3612011	1					
ANR	3613142	ExpressionStatement	is_vaddr = true	3484:6:105362:105377	3612011	1	True				
ANR	3613143	AssignmentExpression	is_vaddr = true		3612011	0		=			
ANR	3613144	Identifier	is_vaddr		3612011	0					
ANR	3613145	Identifier	true		3612011	1					
ANR	3613146	ExpressionStatement	ret [ ret_ctr ] . size = tsize	3487:4:105396:105421	3612011	5	True				
ANR	3613147	AssignmentExpression	ret [ ret_ctr ] . size = tsize		3612011	0		=			
ANR	3613148	MemberAccess	ret [ ret_ctr ] . size		3612011	0					
ANR	3613149	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613150	Identifier	ret		3612011	0					
ANR	3613151	Identifier	ret_ctr		3612011	1					
ANR	3613152	Identifier	size		3612011	1					
ANR	3613153	Identifier	tsize		3612011	1					
ANR	3613154	IfStatement	if ( sym [ k ] . st_name + 2 > strtab_section -> sh_size )		3612011	6					
ANR	3613155	Condition	sym [ k ] . st_name + 2 > strtab_section -> sh_size	3488:8:105431:105474	3612011	0	True				
ANR	3613156	RelationalExpression	sym [ k ] . st_name + 2 > strtab_section -> sh_size		3612011	0		>			
ANR	3613157	AdditiveExpression	sym [ k ] . st_name + 2		3612011	0		+			
ANR	3613158	MemberAccess	sym [ k ] . st_name		3612011	0					
ANR	3613159	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613160	Identifier	sym		3612011	0					
ANR	3613161	Identifier	k		3612011	1					
ANR	3613162	Identifier	st_name		3612011	1					
ANR	3613163	PrimaryExpression	2		3612011	1					
ANR	3613164	PtrMemberAccess	strtab_section -> sh_size		3612011	1					
ANR	3613165	Identifier	strtab_section		3612011	0					
ANR	3613166	Identifier	sh_size		3612011	1					
ANR	3613167	CompoundStatement		154:54:4658:4658	3612011	1					
ANR	3613168	ExpressionStatement	"bprintf ( ""index out of strtab range\\n"" )"	3489:5:105484:105523	3612011	0	True				
ANR	3613169	CallExpression	"bprintf ( ""index out of strtab range\\n"" )"		3612011	0					
ANR	3613170	Callee	bprintf		3612011	0					
ANR	3613171	Identifier	bprintf		3612011	0					
ANR	3613172	ArgumentList	"""index out of strtab range\\n"""		3612011	1					
ANR	3613173	Argument	"""index out of strtab range\\n"""		3612011	0					
ANR	3613174	PrimaryExpression	"""index out of strtab range\\n"""		3612011	0					
ANR	3613175	GotoStatement	goto beach ;	3490:5:105530:105540	3612011	1	True				
ANR	3613176	Identifier	beach		3612011	0					
ANR	3613177	CompoundStatement		161:5:4814:4880	3612011	7					
ANR	3613178	IdentifierDeclStatement	int rest = ELF_STRING_LENGTH - 1 ;	3493:5:105559:105591	3612011	0	True				
ANR	3613179	IdentifierDecl	rest = ELF_STRING_LENGTH - 1		3612011	0					
ANR	3613180	IdentifierDeclType	int		3612011	0					
ANR	3613181	Identifier	rest		3612011	1					
ANR	3613182	AssignmentExpression	rest = ELF_STRING_LENGTH - 1		3612011	2		=			
ANR	3613183	Identifier	rest		3612011	0					
ANR	3613184	AdditiveExpression	ELF_STRING_LENGTH - 1		3612011	1		-			
ANR	3613185	Identifier	ELF_STRING_LENGTH		3612011	0					
ANR	3613186	PrimaryExpression	1		3612011	1					
ANR	3613187	IdentifierDeclStatement	int st_name = sym [ k ] . st_name ;	3494:5:105598:105626	3612011	1	True				
ANR	3613188	IdentifierDecl	st_name = sym [ k ] . st_name		3612011	0					
ANR	3613189	IdentifierDeclType	int		3612011	0					
ANR	3613190	Identifier	st_name		3612011	1					
ANR	3613191	AssignmentExpression	st_name = sym [ k ] . st_name		3612011	2		=			
ANR	3613192	Identifier	st_name		3612011	0					
ANR	3613193	MemberAccess	sym [ k ] . st_name		3612011	1					
ANR	3613194	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613195	Identifier	sym		3612011	0					
ANR	3613196	Identifier	k		3612011	1					
ANR	3613197	Identifier	st_name		3612011	1					
ANR	3613198	IdentifierDeclStatement	"int maxsize = R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size ) ;"	3495:5:105633:105699	3612011	2	True				
ANR	3613199	IdentifierDecl	"maxsize = R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size )"		3612011	0					
ANR	3613200	IdentifierDeclType	int		3612011	0					
ANR	3613201	Identifier	maxsize		3612011	1					
ANR	3613202	AssignmentExpression	"maxsize = R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size )"		3612011	2		=			
ANR	3613203	Identifier	maxsize		3612011	0					
ANR	3613204	CallExpression	"R_MIN ( r_buf_size ( bin -> b ) , strtab_section -> sh_size )"		3612011	1					
ANR	3613205	Callee	R_MIN		3612011	0					
ANR	3613206	Identifier	R_MIN		3612011	0					
ANR	3613207	ArgumentList	r_buf_size ( bin -> b )		3612011	1					
ANR	3613208	Argument	r_buf_size ( bin -> b )		3612011	0					
ANR	3613209	CallExpression	r_buf_size ( bin -> b )		3612011	0					
ANR	3613210	Callee	r_buf_size		3612011	0					
ANR	3613211	Identifier	r_buf_size		3612011	0					
ANR	3613212	ArgumentList	bin -> b		3612011	1					
ANR	3613213	Argument	bin -> b		3612011	0					
ANR	3613214	PtrMemberAccess	bin -> b		3612011	0					
ANR	3613215	Identifier	bin		3612011	0					
ANR	3613216	Identifier	b		3612011	1					
ANR	3613217	Argument	strtab_section -> sh_size		3612011	1					
ANR	3613218	PtrMemberAccess	strtab_section -> sh_size		3612011	0					
ANR	3613219	Identifier	strtab_section		3612011	0					
ANR	3613220	Identifier	sh_size		3612011	1					
ANR	3613221	IfStatement	"if ( is_section_local_sym ( bin , & sym [ k ] ) )"		3612011	3					
ANR	3613222	Condition	"is_section_local_sym ( bin , & sym [ k ] )"	3496:9:105710:105744	3612011	0	True				
ANR	3613223	CallExpression	"is_section_local_sym ( bin , & sym [ k ] )"		3612011	0					
ANR	3613224	Callee	is_section_local_sym		3612011	0					
ANR	3613225	Identifier	is_section_local_sym		3612011	0					
ANR	3613226	ArgumentList	bin		3612011	1					
ANR	3613227	Argument	bin		3612011	0					
ANR	3613228	Identifier	bin		3612011	0					
ANR	3613229	Argument	& sym [ k ]		3612011	1					
ANR	3613230	UnaryOperationExpression	& sym [ k ]		3612011	0					
ANR	3613231	UnaryOperator	&		3612011	0					
ANR	3613232	ArrayIndexing	sym [ k ]		3612011	1					
ANR	3613233	Identifier	sym		3612011	0					
ANR	3613234	Identifier	k		3612011	1					
ANR	3613235	CompoundStatement		163:6:4936:5007	3612011	1					
ANR	3613236	IdentifierDeclStatement	const char * shname = & bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ] ;	3497:6:105755:105826	3612011	0	True				
ANR	3613237	IdentifierDecl	* shname = & bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		3612011	0					
ANR	3613238	IdentifierDeclType	const char *		3612011	0					
ANR	3613239	Identifier	shname		3612011	1					
ANR	3613240	AssignmentExpression	* shname = & bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		3612011	2		=			
ANR	3613241	Identifier	shname		3612011	0					
ANR	3613242	UnaryOperationExpression	& bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		3612011	1					
ANR	3613243	UnaryOperator	&		3612011	0					
ANR	3613244	ArrayIndexing	bin -> shstrtab [ bin -> shdr [ sym [ k ] . st_shndx ] . sh_name ]		3612011	1					
ANR	3613245	PtrMemberAccess	bin -> shstrtab		3612011	0					
ANR	3613246	Identifier	bin		3612011	0					
ANR	3613247	Identifier	shstrtab		3612011	1					
ANR	3613248	MemberAccess	bin -> shdr [ sym [ k ] . st_shndx ] . sh_name		3612011	1					
ANR	3613249	ArrayIndexing	bin -> shdr [ sym [ k ] . st_shndx ]		3612011	0					
ANR	3613250	PtrMemberAccess	bin -> shdr		3612011	0					
ANR	3613251	Identifier	bin		3612011	0					
ANR	3613252	Identifier	shdr		3612011	1					
ANR	3613253	MemberAccess	sym [ k ] . st_shndx		3612011	1					
ANR	3613254	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613255	Identifier	sym		3612011	0					
ANR	3613256	Identifier	k		3612011	1					
ANR	3613257	Identifier	st_shndx		3612011	1					
ANR	3613258	Identifier	sh_name		3612011	1					
ANR	3613259	ExpressionStatement	"r_str_ncpy ( ret [ ret_ctr ] . name , shname , ELF_STRING_LENGTH )"	3498:6:105834:105891	3612011	1	True				
ANR	3613260	CallExpression	"r_str_ncpy ( ret [ ret_ctr ] . name , shname , ELF_STRING_LENGTH )"		3612011	0					
ANR	3613261	Callee	r_str_ncpy		3612011	0					
ANR	3613262	Identifier	r_str_ncpy		3612011	0					
ANR	3613263	ArgumentList	ret [ ret_ctr ] . name		3612011	1					
ANR	3613264	Argument	ret [ ret_ctr ] . name		3612011	0					
ANR	3613265	MemberAccess	ret [ ret_ctr ] . name		3612011	0					
ANR	3613266	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613267	Identifier	ret		3612011	0					
ANR	3613268	Identifier	ret_ctr		3612011	1					
ANR	3613269	Identifier	name		3612011	1					
ANR	3613270	Argument	shname		3612011	1					
ANR	3613271	Identifier	shname		3612011	0					
ANR	3613272	Argument	ELF_STRING_LENGTH		3612011	2					
ANR	3613273	Identifier	ELF_STRING_LENGTH		3612011	0					
ANR	3613274	ElseStatement	else		3612011	0					
ANR	3613275	IfStatement	if ( st_name <= 0 || st_name >= maxsize )		3612011	0					
ANR	3613276	Condition	st_name <= 0 || st_name >= maxsize	3499:16:105909:105942	3612011	0	True				
ANR	3613277	OrExpression	st_name <= 0 || st_name >= maxsize		3612011	0		||			
ANR	3613278	RelationalExpression	st_name <= 0		3612011	0		<=			
ANR	3613279	Identifier	st_name		3612011	0					
ANR	3613280	PrimaryExpression	0		3612011	1					
ANR	3613281	RelationalExpression	st_name >= maxsize		3612011	1		>=			
ANR	3613282	Identifier	st_name		3612011	0					
ANR	3613283	Identifier	maxsize		3612011	1					
ANR	3613284	CompoundStatement		165:52:5126:5126	3612011	1					
ANR	3613285	ExpressionStatement	ret [ ret_ctr ] . name [ 0 ] = 0	3500:6:105953:105977	3612011	0	True				
ANR	3613286	AssignmentExpression	ret [ ret_ctr ] . name [ 0 ] = 0		3612011	0		=			
ANR	3613287	ArrayIndexing	ret [ ret_ctr ] . name [ 0 ]		3612011	0					
ANR	3613288	MemberAccess	ret [ ret_ctr ] . name		3612011	0					
ANR	3613289	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613290	Identifier	ret		3612011	0					
ANR	3613291	Identifier	ret_ctr		3612011	1					
ANR	3613292	Identifier	name		3612011	1					
ANR	3613293	PrimaryExpression	0		3612011	1					
ANR	3613294	PrimaryExpression	0		3612011	1					
ANR	3613295	ElseStatement	else		3612011	0					
ANR	3613296	CompoundStatement		182:6:5638:5698	3612011	0					
ANR	3613297	IdentifierDeclStatement	bool found = false ;	3502:6:105999:106017	3612011	0	True				
ANR	3613298	IdentifierDecl	found = false		3612011	0					
ANR	3613299	IdentifierDeclType	bool		3612011	0					
ANR	3613300	Identifier	found		3612011	1					
ANR	3613301	AssignmentExpression	found = false		3612011	2		=			
ANR	3613302	Identifier	false		3612011	0					
ANR	3613303	Identifier	false		3612011	1					
ANR	3613304	ExpressionStatement	j = - 1	3503:6:106025:106031	3612011	1	True				
ANR	3613305	AssignmentExpression	j = - 1		3612011	0		=			
ANR	3613306	Identifier	j		3612011	0					
ANR	3613307	UnaryOperationExpression	- 1		3612011	1					
ANR	3613308	UnaryOperator	-		3612011	0					
ANR	3613309	PrimaryExpression	1		3612011	1					
ANR	3613310	WhileStatement	while ( ! ret [ ++ j ] . last && j < prev_ret_size )		3612011	2					
ANR	3613311	Condition	! ret [ ++ j ] . last && j < prev_ret_size	3504:13:106046:106080	3612011	0	True				
ANR	3613312	AndExpression	! ret [ ++ j ] . last && j < prev_ret_size		3612011	0		&&			
ANR	3613313	UnaryOperationExpression	! ret [ ++ j ] . last		3612011	0					
ANR	3613314	UnaryOperator	!		3612011	0					
ANR	3613315	MemberAccess	ret [ ++ j ] . last		3612011	1					
ANR	3613316	ArrayIndexing	ret [ ++ j ]		3612011	0					
ANR	3613317	Identifier	ret		3612011	0					
ANR	3613318	UnaryExpression	++ j		3612011	1					
ANR	3613319	IncDec	++		3612011	0					
ANR	3613320	Identifier	j		3612011	1					
ANR	3613321	Identifier	last		3612011	1					
ANR	3613322	RelationalExpression	j < prev_ret_size		3612011	1		<			
ANR	3613323	Identifier	j		3612011	0					
ANR	3613324	Identifier	prev_ret_size		3612011	1					
ANR	3613325	CompoundStatement		170:50:5264:5264	3612011	1					
ANR	3613326	IfStatement	"if ( ret [ j ] . offset == ret [ ret_ctr ] . offset && strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0 )"		3612011	0					
ANR	3613327	Condition	"ret [ j ] . offset == ret [ ret_ctr ] . offset && strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"	3505:11:106096:106290	3612011	0	True				
ANR	3613328	AndExpression	"ret [ j ] . offset == ret [ ret_ctr ] . offset && strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		3612011	0		&&			
ANR	3613329	EqualityExpression	ret [ j ] . offset == ret [ ret_ctr ] . offset		3612011	0		==			
ANR	3613330	MemberAccess	ret [ j ] . offset		3612011	0					
ANR	3613331	ArrayIndexing	ret [ j ]		3612011	0					
ANR	3613332	Identifier	ret		3612011	0					
ANR	3613333	Identifier	j		3612011	1					
ANR	3613334	Identifier	offset		3612011	1					
ANR	3613335	MemberAccess	ret [ ret_ctr ] . offset		3612011	1					
ANR	3613336	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613337	Identifier	ret		3612011	0					
ANR	3613338	Identifier	ret_ctr		3612011	1					
ANR	3613339	Identifier	offset		3612011	1					
ANR	3613340	AndExpression	"strcmp ( ret [ j ] . name , """" ) != 0 && strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		3612011	1		&&			
ANR	3613341	EqualityExpression	"strcmp ( ret [ j ] . name , """" ) != 0"		3612011	0		!=			
ANR	3613342	CallExpression	"strcmp ( ret [ j ] . name , """" )"		3612011	0					
ANR	3613343	Callee	strcmp		3612011	0					
ANR	3613344	Identifier	strcmp		3612011	0					
ANR	3613345	ArgumentList	ret [ j ] . name		3612011	1					
ANR	3613346	Argument	ret [ j ] . name		3612011	0					
ANR	3613347	MemberAccess	ret [ j ] . name		3612011	0					
ANR	3613348	ArrayIndexing	ret [ j ]		3612011	0					
ANR	3613349	Identifier	ret		3612011	0					
ANR	3613350	Identifier	j		3612011	1					
ANR	3613351	Identifier	name		3612011	1					
ANR	3613352	Argument	""""""		3612011	1					
ANR	3613353	PrimaryExpression	""""""		3612011	0					
ANR	3613354	PrimaryExpression	0		3612011	1					
ANR	3613355	AndExpression	"strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0 && strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		3612011	1		&&			
ANR	3613356	EqualityExpression	"strcmp ( ret [ j ] . name , & strtab [ st_name ] ) == 0"		3612011	0		==			
ANR	3613357	CallExpression	"strcmp ( ret [ j ] . name , & strtab [ st_name ] )"		3612011	0					
ANR	3613358	Callee	strcmp		3612011	0					
ANR	3613359	Identifier	strcmp		3612011	0					
ANR	3613360	ArgumentList	ret [ j ] . name		3612011	1					
ANR	3613361	Argument	ret [ j ] . name		3612011	0					
ANR	3613362	MemberAccess	ret [ j ] . name		3612011	0					
ANR	3613363	ArrayIndexing	ret [ j ]		3612011	0					
ANR	3613364	Identifier	ret		3612011	0					
ANR	3613365	Identifier	j		3612011	1					
ANR	3613366	Identifier	name		3612011	1					
ANR	3613367	Argument	& strtab [ st_name ]		3612011	1					
ANR	3613368	UnaryOperationExpression	& strtab [ st_name ]		3612011	0					
ANR	3613369	UnaryOperator	&		3612011	0					
ANR	3613370	ArrayIndexing	strtab [ st_name ]		3612011	1					
ANR	3613371	Identifier	strtab		3612011	0					
ANR	3613372	Identifier	st_name		3612011	1					
ANR	3613373	PrimaryExpression	0		3612011	1					
ANR	3613374	EqualityExpression	"strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) ) == 0"		3612011	1		==			
ANR	3613375	CallExpression	"strcmp ( ret [ j ] . type , type2str ( NULL , NULL , & sym [ k ] ) )"		3612011	0					
ANR	3613376	Callee	strcmp		3612011	0					
ANR	3613377	Identifier	strcmp		3612011	0					
ANR	3613378	ArgumentList	ret [ j ] . type		3612011	1					
ANR	3613379	Argument	ret [ j ] . type		3612011	0					
ANR	3613380	MemberAccess	ret [ j ] . type		3612011	0					
ANR	3613381	ArrayIndexing	ret [ j ]		3612011	0					
ANR	3613382	Identifier	ret		3612011	0					
ANR	3613383	Identifier	j		3612011	1					
ANR	3613384	Identifier	type		3612011	1					
ANR	3613385	Argument	"type2str ( NULL , NULL , & sym [ k ] )"		3612011	1					
ANR	3613386	CallExpression	"type2str ( NULL , NULL , & sym [ k ] )"		3612011	0					
ANR	3613387	Callee	type2str		3612011	0					
ANR	3613388	Identifier	type2str		3612011	0					
ANR	3613389	ArgumentList	NULL		3612011	1					
ANR	3613390	Argument	NULL		3612011	0					
ANR	3613391	Identifier	NULL		3612011	0					
ANR	3613392	Argument	NULL		3612011	1					
ANR	3613393	Identifier	NULL		3612011	0					
ANR	3613394	Argument	& sym [ k ]		3612011	2					
ANR	3613395	UnaryOperationExpression	& sym [ k ]		3612011	0					
ANR	3613396	UnaryOperator	&		3612011	0					
ANR	3613397	ArrayIndexing	sym [ k ]		3612011	1					
ANR	3613398	Identifier	sym		3612011	0					
ANR	3613399	Identifier	k		3612011	1					
ANR	3613400	PrimaryExpression	0		3612011	1					
ANR	3613401	CompoundStatement		173:71:5474:5474	3612011	1					
ANR	3613402	ExpressionStatement	found = true	3508:8:106303:106315	3612011	0	True				
ANR	3613403	AssignmentExpression	found = true		3612011	0		=			
ANR	3613404	Identifier	found		3612011	0					
ANR	3613405	Identifier	true		3612011	1					
ANR	3613406	BreakStatement	break ;	3509:8:106325:106330	3612011	1	True				
ANR	3613407	IfStatement	if ( found )		3612011	3					
ANR	3613408	Condition	found	3512:10:106359:106363	3612011	0	True				
ANR	3613409	Identifier	found		3612011	0					
ANR	3613410	CompoundStatement		178:17:5547:5547	3612011	1					
ANR	3613411	ExpressionStatement	"memset ( ret + ret_ctr , 0 , sizeof ( RBinElfSymbol ) )"	3513:7:106375:106424	3612011	0	True				
ANR	3613412	CallExpression	"memset ( ret + ret_ctr , 0 , sizeof ( RBinElfSymbol ) )"		3612011	0					
ANR	3613413	Callee	memset		3612011	0					
ANR	3613414	Identifier	memset		3612011	0					
ANR	3613415	ArgumentList	ret + ret_ctr		3612011	1					
ANR	3613416	Argument	ret + ret_ctr		3612011	0					
ANR	3613417	AdditiveExpression	ret + ret_ctr		3612011	0		+			
ANR	3613418	Identifier	ret		3612011	0					
ANR	3613419	Identifier	ret_ctr		3612011	1					
ANR	3613420	Argument	0		3612011	1					
ANR	3613421	PrimaryExpression	0		3612011	0					
ANR	3613422	Argument	sizeof ( RBinElfSymbol )		3612011	2					
ANR	3613423	SizeofExpression	sizeof ( RBinElfSymbol )		3612011	0					
ANR	3613424	Sizeof	sizeof		3612011	0					
ANR	3613425	SizeofOperand	RBinElfSymbol		3612011	1					
ANR	3613426	ContinueStatement	continue ;	3514:7:106433:106441	3612011	1	True				
ANR	3613427	IdentifierDeclStatement	"const size_t len = __strnlen ( strtab + sym [ k ] . st_name , rest ) ;"	3516:6:106457:106517	3612011	4	True				
ANR	3613428	IdentifierDecl	"len = __strnlen ( strtab + sym [ k ] . st_name , rest )"		3612011	0					
ANR	3613429	IdentifierDeclType	const size_t		3612011	0					
ANR	3613430	Identifier	len		3612011	1					
ANR	3613431	AssignmentExpression	"len = __strnlen ( strtab + sym [ k ] . st_name , rest )"		3612011	2		=			
ANR	3613432	Identifier	len		3612011	0					
ANR	3613433	CallExpression	"__strnlen ( strtab + sym [ k ] . st_name , rest )"		3612011	1					
ANR	3613434	Callee	__strnlen		3612011	0					
ANR	3613435	Identifier	__strnlen		3612011	0					
ANR	3613436	ArgumentList	strtab + sym [ k ] . st_name		3612011	1					
ANR	3613437	Argument	strtab + sym [ k ] . st_name		3612011	0					
ANR	3613438	AdditiveExpression	strtab + sym [ k ] . st_name		3612011	0		+			
ANR	3613439	Identifier	strtab		3612011	0					
ANR	3613440	MemberAccess	sym [ k ] . st_name		3612011	1					
ANR	3613441	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613442	Identifier	sym		3612011	0					
ANR	3613443	Identifier	k		3612011	1					
ANR	3613444	Identifier	st_name		3612011	1					
ANR	3613445	Argument	rest		3612011	1					
ANR	3613446	Identifier	rest		3612011	0					
ANR	3613447	ExpressionStatement	"memcpy ( ret [ ret_ctr ] . name , & strtab [ sym [ k ] . st_name ] , len )"	3517:6:106525:106581	3612011	5	True				
ANR	3613448	CallExpression	"memcpy ( ret [ ret_ctr ] . name , & strtab [ sym [ k ] . st_name ] , len )"		3612011	0					
ANR	3613449	Callee	memcpy		3612011	0					
ANR	3613450	Identifier	memcpy		3612011	0					
ANR	3613451	ArgumentList	ret [ ret_ctr ] . name		3612011	1					
ANR	3613452	Argument	ret [ ret_ctr ] . name		3612011	0					
ANR	3613453	MemberAccess	ret [ ret_ctr ] . name		3612011	0					
ANR	3613454	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613455	Identifier	ret		3612011	0					
ANR	3613456	Identifier	ret_ctr		3612011	1					
ANR	3613457	Identifier	name		3612011	1					
ANR	3613458	Argument	& strtab [ sym [ k ] . st_name ]		3612011	1					
ANR	3613459	UnaryOperationExpression	& strtab [ sym [ k ] . st_name ]		3612011	0					
ANR	3613460	UnaryOperator	&		3612011	0					
ANR	3613461	ArrayIndexing	strtab [ sym [ k ] . st_name ]		3612011	1					
ANR	3613462	Identifier	strtab		3612011	0					
ANR	3613463	MemberAccess	sym [ k ] . st_name		3612011	1					
ANR	3613464	ArrayIndexing	sym [ k ]		3612011	0					
ANR	3613465	Identifier	sym		3612011	0					
ANR	3613466	Identifier	k		3612011	1					
ANR	3613467	Identifier	st_name		3612011	1					
ANR	3613468	Argument	len		3612011	2					
ANR	3613469	Identifier	len		3612011	0					
ANR	3613470	ExpressionStatement	ret [ ret_ctr ] . ordinal = k	3520:4:106600:106624	3612011	8	True				
ANR	3613471	AssignmentExpression	ret [ ret_ctr ] . ordinal = k		3612011	0		=			
ANR	3613472	MemberAccess	ret [ ret_ctr ] . ordinal		3612011	0					
ANR	3613473	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613474	Identifier	ret		3612011	0					
ANR	3613475	Identifier	ret_ctr		3612011	1					
ANR	3613476	Identifier	ordinal		3612011	1					
ANR	3613477	Identifier	k		3612011	1					
ANR	3613478	ExpressionStatement	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'	3521:4:106630:106677	3612011	9	True				
ANR	3613479	AssignmentExpression	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ] = '\\0'		3612011	0		=			
ANR	3613480	ArrayIndexing	ret [ ret_ctr ] . name [ ELF_STRING_LENGTH - 2 ]		3612011	0					
ANR	3613481	MemberAccess	ret [ ret_ctr ] . name		3612011	0					
ANR	3613482	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613483	Identifier	ret		3612011	0					
ANR	3613484	Identifier	ret_ctr		3612011	1					
ANR	3613485	Identifier	name		3612011	1					
ANR	3613486	AdditiveExpression	ELF_STRING_LENGTH - 2		3612011	1		-			
ANR	3613487	Identifier	ELF_STRING_LENGTH		3612011	0					
ANR	3613488	PrimaryExpression	2		3612011	1					
ANR	3613489	PrimaryExpression	'\\0'		3612011	1					
ANR	3613490	ExpressionStatement	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ k ] )"	3522:4:106683:106738	3612011	10	True				
ANR	3613491	CallExpression	"fill_symbol_bind_and_type ( bin , & ret [ ret_ctr ] , & sym [ k ] )"		3612011	0					
ANR	3613492	Callee	fill_symbol_bind_and_type		3612011	0					
ANR	3613493	Identifier	fill_symbol_bind_and_type		3612011	0					
ANR	3613494	ArgumentList	bin		3612011	1					
ANR	3613495	Argument	bin		3612011	0					
ANR	3613496	Identifier	bin		3612011	0					
ANR	3613497	Argument	& ret [ ret_ctr ]		3612011	1					
ANR	3613498	UnaryOperationExpression	& ret [ ret_ctr ]		3612011	0					
ANR	3613499	UnaryOperator	&		3612011	0					
ANR	3613500	ArrayIndexing	ret [ ret_ctr ]		3612011	1					
ANR	3613501	Identifier	ret		3612011	0					
ANR	3613502	Identifier	ret_ctr		3612011	1					
ANR	3613503	Argument	& sym [ k ]		3612011	2					
ANR	3613504	UnaryOperationExpression	& sym [ k ]		3612011	0					
ANR	3613505	UnaryOperator	&		3612011	0					
ANR	3613506	ArrayIndexing	sym [ k ]		3612011	1					
ANR	3613507	Identifier	sym		3612011	0					
ANR	3613508	Identifier	k		3612011	1					
ANR	3613509	ExpressionStatement	ret [ ret_ctr ] . is_sht_null = is_sht_null	3523:4:106744:106782	3612011	11	True				
ANR	3613510	AssignmentExpression	ret [ ret_ctr ] . is_sht_null = is_sht_null		3612011	0		=			
ANR	3613511	MemberAccess	ret [ ret_ctr ] . is_sht_null		3612011	0					
ANR	3613512	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613513	Identifier	ret		3612011	0					
ANR	3613514	Identifier	ret_ctr		3612011	1					
ANR	3613515	Identifier	is_sht_null		3612011	1					
ANR	3613516	Identifier	is_sht_null		3612011	1					
ANR	3613517	ExpressionStatement	ret [ ret_ctr ] . is_vaddr = is_vaddr	3524:4:106788:106820	3612011	12	True				
ANR	3613518	AssignmentExpression	ret [ ret_ctr ] . is_vaddr = is_vaddr		3612011	0		=			
ANR	3613519	MemberAccess	ret [ ret_ctr ] . is_vaddr		3612011	0					
ANR	3613520	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613521	Identifier	ret		3612011	0					
ANR	3613522	Identifier	ret_ctr		3612011	1					
ANR	3613523	Identifier	is_vaddr		3612011	1					
ANR	3613524	Identifier	is_vaddr		3612011	1					
ANR	3613525	ExpressionStatement	ret [ ret_ctr ] . last = 0	3525:4:106826:106847	3612011	13	True				
ANR	3613526	AssignmentExpression	ret [ ret_ctr ] . last = 0		3612011	0		=			
ANR	3613527	MemberAccess	ret [ ret_ctr ] . last		3612011	0					
ANR	3613528	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613529	Identifier	ret		3612011	0					
ANR	3613530	Identifier	ret_ctr		3612011	1					
ANR	3613531	Identifier	last		3612011	1					
ANR	3613532	PrimaryExpression	0		3612011	1					
ANR	3613533	ExpressionStatement	ret [ ret_ctr ] . is_imported = is_imported	3526:4:106853:106891	3612011	14	True				
ANR	3613534	AssignmentExpression	ret [ ret_ctr ] . is_imported = is_imported		3612011	0		=			
ANR	3613535	MemberAccess	ret [ ret_ctr ] . is_imported		3612011	0					
ANR	3613536	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613537	Identifier	ret		3612011	0					
ANR	3613538	Identifier	ret_ctr		3612011	1					
ANR	3613539	Identifier	is_imported		3612011	1					
ANR	3613540	Identifier	is_imported		3612011	1					
ANR	3613541	ExpressionStatement	ret_ctr ++	3527:4:106897:106906	3612011	15	True				
ANR	3613542	PostIncDecOperationExpression	ret_ctr ++		3612011	0					
ANR	3613543	Identifier	ret_ctr		3612011	0					
ANR	3613544	IncDec	++		3612011	1					
ANR	3613545	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS && is_imported )		3612011	16					
ANR	3613546	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS && is_imported	3528:8:106916:106962	3612011	0	True				
ANR	3613547	AndExpression	type == R_BIN_ELF_IMPORT_SYMBOLS && is_imported		3612011	0		&&			
ANR	3613548	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		3612011	0		==			
ANR	3613549	Identifier	type		3612011	0					
ANR	3613550	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3612011	1					
ANR	3613551	Identifier	is_imported		3612011	1					
ANR	3613552	CompoundStatement		194:57:6146:6146	3612011	1					
ANR	3613553	ExpressionStatement	import_ret_ctr ++	3529:5:106972:106988	3612011	0	True				
ANR	3613554	PostIncDecOperationExpression	import_ret_ctr ++		3612011	0					
ANR	3613555	Identifier	import_ret_ctr		3612011	0					
ANR	3613556	IncDec	++		3612011	1					
ANR	3613557	ExpressionStatement	R_FREE ( strtab )	3532:3:107004:107019	3612011	49	True				
ANR	3613558	CallExpression	R_FREE ( strtab )		3612011	0					
ANR	3613559	Callee	R_FREE		3612011	0					
ANR	3613560	Identifier	R_FREE		3612011	0					
ANR	3613561	ArgumentList	strtab		3612011	1					
ANR	3613562	Argument	strtab		3612011	0					
ANR	3613563	Identifier	strtab		3612011	0					
ANR	3613564	ExpressionStatement	R_FREE ( sym )	3533:3:107024:107036	3612011	50	True				
ANR	3613565	CallExpression	R_FREE ( sym )		3612011	0					
ANR	3613566	Callee	R_FREE		3612011	0					
ANR	3613567	Identifier	R_FREE		3612011	0					
ANR	3613568	ArgumentList	sym		3612011	1					
ANR	3613569	Argument	sym		3612011	0					
ANR	3613570	Identifier	sym		3612011	0					
ANR	3613571	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS )		3612011	51					
ANR	3613572	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS	3534:7:107045:107076	3612011	0	True				
ANR	3613573	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		3612011	0		==			
ANR	3613574	Identifier	type		3612011	0					
ANR	3613575	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3612011	1					
ANR	3613576	CompoundStatement		200:41:6260:6260	3612011	1					
ANR	3613577	BreakStatement	break ;	3535:4:107085:107090	3612011	0	True				
ANR	3613578	IfStatement	if ( ! ret )		3612011	15					
ANR	3613579	Condition	! ret	3539:5:107109:107112	3612011	0	True				
ANR	3613580	UnaryOperationExpression	! ret		3612011	0					
ANR	3613581	UnaryOperator	!		3612011	0					
ANR	3613582	Identifier	ret		3612011	1					
ANR	3613583	CompoundStatement		205:11:6296:6296	3612011	1					
ANR	3613584	ReturnStatement	"return Elf_ ( get_phdr_symbols ) ( bin , type ) ;"	3540:2:107119:107160	3612011	0	True				
ANR	3613585	CallExpression	"Elf_ ( get_phdr_symbols ) ( bin , type )"		3612011	0					
ANR	3613586	Callee	Elf_ ( get_phdr_symbols )		3612011	0					
ANR	3613587	CallExpression	Elf_ ( get_phdr_symbols )		3612011	0					
ANR	3613588	Callee	Elf_		3612011	0					
ANR	3613589	Identifier	Elf_		3612011	0					
ANR	3613590	ArgumentList	get_phdr_symbols		3612011	1					
ANR	3613591	Argument	get_phdr_symbols		3612011	0					
ANR	3613592	Identifier	get_phdr_symbols		3612011	0					
ANR	3613593	ArgumentList	bin		3612011	1					
ANR	3613594	Argument	bin		3612011	0					
ANR	3613595	Identifier	bin		3612011	0					
ANR	3613596	Argument	type		3612011	1					
ANR	3613597	Identifier	type		3612011	0					
ANR	3613598	ExpressionStatement	ret [ ret_ctr ] . last = 1	3542:1:107166:107187	3612011	16	True				
ANR	3613599	AssignmentExpression	ret [ ret_ctr ] . last = 1		3612011	0		=			
ANR	3613600	MemberAccess	ret [ ret_ctr ] . last		3612011	0					
ANR	3613601	ArrayIndexing	ret [ ret_ctr ]		3612011	0					
ANR	3613602	Identifier	ret		3612011	0					
ANR	3613603	Identifier	ret_ctr		3612011	1					
ANR	3613604	Identifier	last		3612011	1					
ANR	3613605	PrimaryExpression	1		3612011	1					
ANR	3613606	IdentifierDeclStatement	int max = - 1 ;	3543:1:107212:107224	3612011	17	True				
ANR	3613607	IdentifierDecl	max = - 1		3612011	0					
ANR	3613608	IdentifierDeclType	int		3612011	0					
ANR	3613609	Identifier	max		3612011	1					
ANR	3613610	AssignmentExpression	max = - 1		3612011	2		=			
ANR	3613611	Identifier	max		3612011	0					
ANR	3613612	UnaryOperationExpression	- 1		3612011	1					
ANR	3613613	UnaryOperator	-		3612011	0					
ANR	3613614	PrimaryExpression	1		3612011	1					
ANR	3613615	IdentifierDeclStatement	RBinElfSymbol * aux = NULL ;	3544:1:107227:107252	3612011	18	True				
ANR	3613616	IdentifierDecl	* aux = NULL		3612011	0					
ANR	3613617	IdentifierDeclType	RBinElfSymbol *		3612011	0					
ANR	3613618	Identifier	aux		3612011	1					
ANR	3613619	AssignmentExpression	* aux = NULL		3612011	2		=			
ANR	3613620	Identifier	NULL		3612011	0					
ANR	3613621	Identifier	NULL		3612011	1					
ANR	3613622	ExpressionStatement	"nsym = Elf_ ( fix_symbols ) ( bin , ret_ctr , type , & ret )"	3545:1:107255:107306	3612011	19	True				
ANR	3613623	AssignmentExpression	"nsym = Elf_ ( fix_symbols ) ( bin , ret_ctr , type , & ret )"		3612011	0		=			
ANR	3613624	Identifier	nsym		3612011	0					
ANR	3613625	CallExpression	"Elf_ ( fix_symbols ) ( bin , ret_ctr , type , & ret )"		3612011	1					
ANR	3613626	Callee	Elf_ ( fix_symbols )		3612011	0					
ANR	3613627	CallExpression	Elf_ ( fix_symbols )		3612011	0					
ANR	3613628	Callee	Elf_		3612011	0					
ANR	3613629	Identifier	Elf_		3612011	0					
ANR	3613630	ArgumentList	fix_symbols		3612011	1					
ANR	3613631	Argument	fix_symbols		3612011	0					
ANR	3613632	Identifier	fix_symbols		3612011	0					
ANR	3613633	ArgumentList	bin		3612011	1					
ANR	3613634	Argument	bin		3612011	0					
ANR	3613635	Identifier	bin		3612011	0					
ANR	3613636	Argument	ret_ctr		3612011	1					
ANR	3613637	Identifier	ret_ctr		3612011	0					
ANR	3613638	Argument	type		3612011	2					
ANR	3613639	Identifier	type		3612011	0					
ANR	3613640	Argument	& ret		3612011	3					
ANR	3613641	UnaryOperationExpression	& ret		3612011	0					
ANR	3613642	UnaryOperator	&		3612011	0					
ANR	3613643	Identifier	ret		3612011	1					
ANR	3613644	IfStatement	if ( nsym == - 1 )		3612011	20					
ANR	3613645	Condition	nsym == - 1	3546:5:107313:107322	3612011	0	True				
ANR	3613646	EqualityExpression	nsym == - 1		3612011	0		==			
ANR	3613647	Identifier	nsym		3612011	0					
ANR	3613648	UnaryOperationExpression	- 1		3612011	1					
ANR	3613649	UnaryOperator	-		3612011	0					
ANR	3613650	PrimaryExpression	1		3612011	1					
ANR	3613651	CompoundStatement		212:17:6506:6506	3612011	1					
ANR	3613652	GotoStatement	goto beach ;	3547:2:107329:107339	3612011	0	True				
ANR	3613653	Identifier	beach		3612011	0					
ANR	3613654	ExpressionStatement	aux = ret	3549:1:107345:107354	3612011	21	True				
ANR	3613655	AssignmentExpression	aux = ret		3612011	0		=			
ANR	3613656	Identifier	aux		3612011	0					
ANR	3613657	Identifier	ret		3612011	1					
ANR	3613658	WhileStatement	while ( ! aux -> last )		3612011	22					
ANR	3613659	Condition	! aux -> last	3550:8:107364:107373	3612011	0	True				
ANR	3613660	UnaryOperationExpression	! aux -> last		3612011	0					
ANR	3613661	UnaryOperator	!		3612011	0					
ANR	3613662	PtrMemberAccess	aux -> last		3612011	1					
ANR	3613663	Identifier	aux		3612011	0					
ANR	3613664	Identifier	last		3612011	1					
ANR	3613665	CompoundStatement		216:20:6557:6557	3612011	1					
ANR	3613666	IfStatement	if ( ( int ) aux -> ordinal > max )		3612011	0					
ANR	3613667	Condition	( int ) aux -> ordinal > max	3551:6:107384:107406	3612011	0	True				
ANR	3613668	RelationalExpression	( int ) aux -> ordinal > max		3612011	0		>			
ANR	3613669	CastExpression	( int ) aux -> ordinal		3612011	0					
ANR	3613670	CastTarget	int		3612011	0					
ANR	3613671	PtrMemberAccess	aux -> ordinal		3612011	1					
ANR	3613672	Identifier	aux		3612011	0					
ANR	3613673	Identifier	ordinal		3612011	1					
ANR	3613674	Identifier	max		3612011	1					
ANR	3613675	CompoundStatement		217:31:6590:6590	3612011	1					
ANR	3613676	ExpressionStatement	max = aux -> ordinal	3552:3:107414:107432	3612011	0	True				
ANR	3613677	AssignmentExpression	max = aux -> ordinal		3612011	0		=			
ANR	3613678	Identifier	max		3612011	0					
ANR	3613679	PtrMemberAccess	aux -> ordinal		3612011	1					
ANR	3613680	Identifier	aux		3612011	0					
ANR	3613681	Identifier	ordinal		3612011	1					
ANR	3613682	ExpressionStatement	aux ++	3554:2:107440:107445	3612011	1	True				
ANR	3613683	PostIncDecOperationExpression	aux ++		3612011	0					
ANR	3613684	Identifier	aux		3612011	0					
ANR	3613685	IncDec	++		3612011	1					
ANR	3613686	ExpressionStatement	nsym = max	3556:1:107451:107461	3612011	23	True				
ANR	3613687	AssignmentExpression	nsym = max		3612011	0		=			
ANR	3613688	Identifier	nsym		3612011	0					
ANR	3613689	Identifier	max		3612011	1					
ANR	3613690	IfStatement	if ( type == R_BIN_ELF_IMPORT_SYMBOLS )		3612011	24					
ANR	3613691	Condition	type == R_BIN_ELF_IMPORT_SYMBOLS	3557:5:107468:107499	3612011	0	True				
ANR	3613692	EqualityExpression	type == R_BIN_ELF_IMPORT_SYMBOLS		3612011	0		==			
ANR	3613693	Identifier	type		3612011	0					
ANR	3613694	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3612011	1					
ANR	3613695	CompoundStatement		223:39:6683:6683	3612011	1					
ANR	3613696	ExpressionStatement	R_FREE ( bin -> imports_by_ord )	3558:2:107506:107534	3612011	0	True				
ANR	3613697	CallExpression	R_FREE ( bin -> imports_by_ord )		3612011	0					
ANR	3613698	Callee	R_FREE		3612011	0					
ANR	3613699	Identifier	R_FREE		3612011	0					
ANR	3613700	ArgumentList	bin -> imports_by_ord		3612011	1					
ANR	3613701	Argument	bin -> imports_by_ord		3612011	0					
ANR	3613702	PtrMemberAccess	bin -> imports_by_ord		3612011	0					
ANR	3613703	Identifier	bin		3612011	0					
ANR	3613704	Identifier	imports_by_ord		3612011	1					
ANR	3613705	ExpressionStatement	bin -> imports_by_ord_size = nsym + 1	3559:2:107538:107573	3612011	1	True				
ANR	3613706	AssignmentExpression	bin -> imports_by_ord_size = nsym + 1		3612011	0		=			
ANR	3613707	PtrMemberAccess	bin -> imports_by_ord_size		3612011	0					
ANR	3613708	Identifier	bin		3612011	0					
ANR	3613709	Identifier	imports_by_ord_size		3612011	1					
ANR	3613710	AdditiveExpression	nsym + 1		3612011	1		+			
ANR	3613711	Identifier	nsym		3612011	0					
ANR	3613712	PrimaryExpression	1		3612011	1					
ANR	3613713	ExpressionStatement	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"	3560:2:107577:107663	3612011	2	True				
ANR	3613714	AssignmentExpression	"bin -> imports_by_ord = ( RBinImport * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"		3612011	0		=			
ANR	3613715	PtrMemberAccess	bin -> imports_by_ord		3612011	0					
ANR	3613716	Identifier	bin		3612011	0					
ANR	3613717	Identifier	imports_by_ord		3612011	1					
ANR	3613718	CastExpression	"( RBinImport * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"		3612011	1					
ANR	3613719	CastTarget	RBinImport * *		3612011	0					
ANR	3613720	CallExpression	"calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinImport * ) )"		3612011	1					
ANR	3613721	Callee	calloc		3612011	0					
ANR	3613722	Identifier	calloc		3612011	0					
ANR	3613723	ArgumentList	"R_MAX ( 1 , nsym + 1 )"		3612011	1					
ANR	3613724	Argument	"R_MAX ( 1 , nsym + 1 )"		3612011	0					
ANR	3613725	CallExpression	"R_MAX ( 1 , nsym + 1 )"		3612011	0					
ANR	3613726	Callee	R_MAX		3612011	0					
ANR	3613727	Identifier	R_MAX		3612011	0					
ANR	3613728	ArgumentList	1		3612011	1					
ANR	3613729	Argument	1		3612011	0					
ANR	3613730	PrimaryExpression	1		3612011	0					
ANR	3613731	Argument	nsym + 1		3612011	1					
ANR	3613732	AdditiveExpression	nsym + 1		3612011	0		+			
ANR	3613733	Identifier	nsym		3612011	0					
ANR	3613734	PrimaryExpression	1		3612011	1					
ANR	3613735	Argument	sizeof ( RBinImport * )		3612011	1					
ANR	3613736	SizeofExpression	sizeof ( RBinImport * )		3612011	0					
ANR	3613737	Sizeof	sizeof		3612011	0					
ANR	3613738	SizeofOperand	RBinImport *		3612011	1					
ANR	3613739	ExpressionStatement	R_FREE ( bin -> symbols_by_ord )	3561:2:107667:107695	3612011	3	True				
ANR	3613740	CallExpression	R_FREE ( bin -> symbols_by_ord )		3612011	0					
ANR	3613741	Callee	R_FREE		3612011	0					
ANR	3613742	Identifier	R_FREE		3612011	0					
ANR	3613743	ArgumentList	bin -> symbols_by_ord		3612011	1					
ANR	3613744	Argument	bin -> symbols_by_ord		3612011	0					
ANR	3613745	PtrMemberAccess	bin -> symbols_by_ord		3612011	0					
ANR	3613746	Identifier	bin		3612011	0					
ANR	3613747	Identifier	symbols_by_ord		3612011	1					
ANR	3613748	ExpressionStatement	bin -> symbols_by_ord_size = nsym + 1	3562:2:107699:107734	3612011	4	True				
ANR	3613749	AssignmentExpression	bin -> symbols_by_ord_size = nsym + 1		3612011	0		=			
ANR	3613750	PtrMemberAccess	bin -> symbols_by_ord_size		3612011	0					
ANR	3613751	Identifier	bin		3612011	0					
ANR	3613752	Identifier	symbols_by_ord_size		3612011	1					
ANR	3613753	AdditiveExpression	nsym + 1		3612011	1		+			
ANR	3613754	Identifier	nsym		3612011	0					
ANR	3613755	PrimaryExpression	1		3612011	1					
ANR	3613756	ExpressionStatement	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"	3563:2:107738:107824	3612011	5	True				
ANR	3613757	AssignmentExpression	"bin -> symbols_by_ord = ( RBinSymbol * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"		3612011	0		=			
ANR	3613758	PtrMemberAccess	bin -> symbols_by_ord		3612011	0					
ANR	3613759	Identifier	bin		3612011	0					
ANR	3613760	Identifier	symbols_by_ord		3612011	1					
ANR	3613761	CastExpression	"( RBinSymbol * * ) calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"		3612011	1					
ANR	3613762	CastTarget	RBinSymbol * *		3612011	0					
ANR	3613763	CallExpression	"calloc ( R_MAX ( 1 , nsym + 1 ) , sizeof ( RBinSymbol * ) )"		3612011	1					
ANR	3613764	Callee	calloc		3612011	0					
ANR	3613765	Identifier	calloc		3612011	0					
ANR	3613766	ArgumentList	"R_MAX ( 1 , nsym + 1 )"		3612011	1					
ANR	3613767	Argument	"R_MAX ( 1 , nsym + 1 )"		3612011	0					
ANR	3613768	CallExpression	"R_MAX ( 1 , nsym + 1 )"		3612011	0					
ANR	3613769	Callee	R_MAX		3612011	0					
ANR	3613770	Identifier	R_MAX		3612011	0					
ANR	3613771	ArgumentList	1		3612011	1					
ANR	3613772	Argument	1		3612011	0					
ANR	3613773	PrimaryExpression	1		3612011	0					
ANR	3613774	Argument	nsym + 1		3612011	1					
ANR	3613775	AdditiveExpression	nsym + 1		3612011	0		+			
ANR	3613776	Identifier	nsym		3612011	0					
ANR	3613777	PrimaryExpression	1		3612011	1					
ANR	3613778	Argument	sizeof ( RBinSymbol * )		3612011	1					
ANR	3613779	SizeofExpression	sizeof ( RBinSymbol * )		3612011	0					
ANR	3613780	Sizeof	sizeof		3612011	0					
ANR	3613781	SizeofOperand	RBinSymbol *		3612011	1					
ANR	3613782	ExpressionStatement	"import_ret = calloc ( import_ret_ctr + 1 , sizeof ( RBinElfSymbol ) )"	3564:2:107828:107892	3612011	6	True				
ANR	3613783	AssignmentExpression	"import_ret = calloc ( import_ret_ctr + 1 , sizeof ( RBinElfSymbol ) )"		3612011	0		=			
ANR	3613784	Identifier	import_ret		3612011	0					
ANR	3613785	CallExpression	"calloc ( import_ret_ctr + 1 , sizeof ( RBinElfSymbol ) )"		3612011	1					
ANR	3613786	Callee	calloc		3612011	0					
ANR	3613787	Identifier	calloc		3612011	0					
ANR	3613788	ArgumentList	import_ret_ctr + 1		3612011	1					
ANR	3613789	Argument	import_ret_ctr + 1		3612011	0					
ANR	3613790	AdditiveExpression	import_ret_ctr + 1		3612011	0		+			
ANR	3613791	Identifier	import_ret_ctr		3612011	0					
ANR	3613792	PrimaryExpression	1		3612011	1					
ANR	3613793	Argument	sizeof ( RBinElfSymbol )		3612011	1					
ANR	3613794	SizeofExpression	sizeof ( RBinElfSymbol )		3612011	0					
ANR	3613795	Sizeof	sizeof		3612011	0					
ANR	3613796	SizeofOperand	RBinElfSymbol		3612011	1					
ANR	3613797	IfStatement	if ( ! import_ret )		3612011	7					
ANR	3613798	Condition	! import_ret	3565:6:107900:107910	3612011	0	True				
ANR	3613799	UnaryOperationExpression	! import_ret		3612011	0					
ANR	3613800	UnaryOperator	!		3612011	0					
ANR	3613801	Identifier	import_ret		3612011	1					
ANR	3613802	CompoundStatement		231:19:7094:7094	3612011	1					
ANR	3613803	ExpressionStatement	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"	3566:3:107918:107964	3612011	0	True				
ANR	3613804	CallExpression	"bprintf ( ""Cannot allocate %d symbols\\n"" , nsym )"		3612011	0					
ANR	3613805	Callee	bprintf		3612011	0					
ANR	3613806	Identifier	bprintf		3612011	0					
ANR	3613807	ArgumentList	"""Cannot allocate %d symbols\\n"""		3612011	1					
ANR	3613808	Argument	"""Cannot allocate %d symbols\\n"""		3612011	0					
ANR	3613809	PrimaryExpression	"""Cannot allocate %d symbols\\n"""		3612011	0					
ANR	3613810	Argument	nsym		3612011	1					
ANR	3613811	Identifier	nsym		3612011	0					
ANR	3613812	GotoStatement	goto beach ;	3567:3:107969:107979	3612011	1	True				
ANR	3613813	Identifier	beach		3612011	0					
ANR	3613814	ExpressionStatement	import_ret_ctr = 0	3569:2:107987:108005	3612011	8	True				
ANR	3613815	AssignmentExpression	import_ret_ctr = 0		3612011	0		=			
ANR	3613816	Identifier	import_ret_ctr		3612011	0					
ANR	3613817	PrimaryExpression	0		3612011	1					
ANR	3613818	ExpressionStatement	i = - 1	3570:2:108009:108015	3612011	9	True				
ANR	3613819	AssignmentExpression	i = - 1		3612011	0		=			
ANR	3613820	Identifier	i		3612011	0					
ANR	3613821	UnaryOperationExpression	- 1		3612011	1					
ANR	3613822	UnaryOperator	-		3612011	0					
ANR	3613823	PrimaryExpression	1		3612011	1					
ANR	3613824	WhileStatement	while ( ! ret [ ++ i ] . last )		3612011	10					
ANR	3613825	Condition	! ret [ ++ i ] . last	3571:9:108026:108039	3612011	0	True				
ANR	3613826	UnaryOperationExpression	! ret [ ++ i ] . last		3612011	0					
ANR	3613827	UnaryOperator	!		3612011	0					
ANR	3613828	MemberAccess	ret [ ++ i ] . last		3612011	1					
ANR	3613829	ArrayIndexing	ret [ ++ i ]		3612011	0					
ANR	3613830	Identifier	ret		3612011	0					
ANR	3613831	UnaryExpression	++ i		3612011	1					
ANR	3613832	IncDec	++		3612011	0					
ANR	3613833	Identifier	i		3612011	1					
ANR	3613834	Identifier	last		3612011	1					
ANR	3613835	CompoundStatement		237:25:7223:7223	3612011	1					
ANR	3613836	IfStatement	"if ( ! ( import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" ) ) )"		3612011	0					
ANR	3613837	Condition	"! ( import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" ) )"	3572:7:108051:108122	3612011	0	True				
ANR	3613838	UnaryOperationExpression	"! ( import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" ) )"		3612011	0					
ANR	3613839	UnaryOperator	!		3612011	0					
ANR	3613840	AssignmentExpression	"import_sym_ptr = Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" )"		3612011	1		=			
ANR	3613841	Identifier	import_sym_ptr		3612011	0					
ANR	3613842	CallExpression	"Elf_ ( _r_bin_elf_convert_symbol ) ( bin , & ret [ i ] , ""%s"" )"		3612011	1					
ANR	3613843	Callee	Elf_ ( _r_bin_elf_convert_symbol )		3612011	0					
ANR	3613844	CallExpression	Elf_ ( _r_bin_elf_convert_symbol )		3612011	0					
ANR	3613845	Callee	Elf_		3612011	0					
ANR	3613846	Identifier	Elf_		3612011	0					
ANR	3613847	ArgumentList	_r_bin_elf_convert_symbol		3612011	1					
ANR	3613848	Argument	_r_bin_elf_convert_symbol		3612011	0					
ANR	3613849	Identifier	_r_bin_elf_convert_symbol		3612011	0					
ANR	3613850	ArgumentList	bin		3612011	1					
ANR	3613851	Argument	bin		3612011	0					
ANR	3613852	Identifier	bin		3612011	0					
ANR	3613853	Argument	& ret [ i ]		3612011	1					
ANR	3613854	UnaryOperationExpression	& ret [ i ]		3612011	0					
ANR	3613855	UnaryOperator	&		3612011	0					
ANR	3613856	ArrayIndexing	ret [ i ]		3612011	1					
ANR	3613857	Identifier	ret		3612011	0					
ANR	3613858	Identifier	i		3612011	1					
ANR	3613859	Argument	"""%s"""		3612011	2					
ANR	3613860	PrimaryExpression	"""%s"""		3612011	0					
ANR	3613861	CompoundStatement		238:81:7306:7306	3612011	1					
ANR	3613862	ContinueStatement	continue ;	3573:4:108131:108139	3612011	0	True				
ANR	3613863	ExpressionStatement	"setsymord ( bin , import_sym_ptr -> ordinal , import_sym_ptr )"	3575:3:108149:108205	3612011	1	True				
ANR	3613864	CallExpression	"setsymord ( bin , import_sym_ptr -> ordinal , import_sym_ptr )"		3612011	0					
ANR	3613865	Callee	setsymord		3612011	0					
ANR	3613866	Identifier	setsymord		3612011	0					
ANR	3613867	ArgumentList	bin		3612011	1					
ANR	3613868	Argument	bin		3612011	0					
ANR	3613869	Identifier	bin		3612011	0					
ANR	3613870	Argument	import_sym_ptr -> ordinal		3612011	1					
ANR	3613871	PtrMemberAccess	import_sym_ptr -> ordinal		3612011	0					
ANR	3613872	Identifier	import_sym_ptr		3612011	0					
ANR	3613873	Identifier	ordinal		3612011	1					
ANR	3613874	Argument	import_sym_ptr		3612011	2					
ANR	3613875	Identifier	import_sym_ptr		3612011	0					
ANR	3613876	IfStatement	if ( ret [ i ] . is_imported )		3612011	2					
ANR	3613877	Condition	ret [ i ] . is_imported	3576:7:108214:108231	3612011	0	True				
ANR	3613878	MemberAccess	ret [ i ] . is_imported		3612011	0					
ANR	3613879	ArrayIndexing	ret [ i ]		3612011	0					
ANR	3613880	Identifier	ret		3612011	0					
ANR	3613881	Identifier	i		3612011	1					
ANR	3613882	Identifier	is_imported		3612011	1					
ANR	3613883	CompoundStatement		242:27:7415:7415	3612011	1					
ANR	3613884	ExpressionStatement	"memcpy ( & import_ret [ import_ret_ctr ] , & ret [ i ] , sizeof ( RBinElfSymbol ) )"	3577:4:108240:108309	3612011	0	True				
ANR	3613885	CallExpression	"memcpy ( & import_ret [ import_ret_ctr ] , & ret [ i ] , sizeof ( RBinElfSymbol ) )"		3612011	0					
ANR	3613886	Callee	memcpy		3612011	0					
ANR	3613887	Identifier	memcpy		3612011	0					
ANR	3613888	ArgumentList	& import_ret [ import_ret_ctr ]		3612011	1					
ANR	3613889	Argument	& import_ret [ import_ret_ctr ]		3612011	0					
ANR	3613890	UnaryOperationExpression	& import_ret [ import_ret_ctr ]		3612011	0					
ANR	3613891	UnaryOperator	&		3612011	0					
ANR	3613892	ArrayIndexing	import_ret [ import_ret_ctr ]		3612011	1					
ANR	3613893	Identifier	import_ret		3612011	0					
ANR	3613894	Identifier	import_ret_ctr		3612011	1					
ANR	3613895	Argument	& ret [ i ]		3612011	1					
ANR	3613896	UnaryOperationExpression	& ret [ i ]		3612011	0					
ANR	3613897	UnaryOperator	&		3612011	0					
ANR	3613898	ArrayIndexing	ret [ i ]		3612011	1					
ANR	3613899	Identifier	ret		3612011	0					
ANR	3613900	Identifier	i		3612011	1					
ANR	3613901	Argument	sizeof ( RBinElfSymbol )		3612011	2					
ANR	3613902	SizeofExpression	sizeof ( RBinElfSymbol )		3612011	0					
ANR	3613903	Sizeof	sizeof		3612011	0					
ANR	3613904	SizeofOperand	RBinElfSymbol		3612011	1					
ANR	3613905	ExpressionStatement	++ import_ret_ctr	3578:4:108315:108331	3612011	1	True				
ANR	3613906	UnaryExpression	++ import_ret_ctr		3612011	0					
ANR	3613907	IncDec	++		3612011	0					
ANR	3613908	Identifier	import_ret_ctr		3612011	1					
ANR	3613909	ExpressionStatement	import_ret [ import_ret_ctr ] . last = 1	3581:2:108344:108379	3612011	11	True				
ANR	3613910	AssignmentExpression	import_ret [ import_ret_ctr ] . last = 1		3612011	0		=			
ANR	3613911	MemberAccess	import_ret [ import_ret_ctr ] . last		3612011	0					
ANR	3613912	ArrayIndexing	import_ret [ import_ret_ctr ]		3612011	0					
ANR	3613913	Identifier	import_ret		3612011	0					
ANR	3613914	Identifier	import_ret_ctr		3612011	1					
ANR	3613915	Identifier	last		3612011	1					
ANR	3613916	PrimaryExpression	1		3612011	1					
ANR	3613917	ExpressionStatement	R_FREE ( ret )	3582:2:108383:108395	3612011	12	True				
ANR	3613918	CallExpression	R_FREE ( ret )		3612011	0					
ANR	3613919	Callee	R_FREE		3612011	0					
ANR	3613920	Identifier	R_FREE		3612011	0					
ANR	3613921	ArgumentList	ret		3612011	1					
ANR	3613922	Argument	ret		3612011	0					
ANR	3613923	Identifier	ret		3612011	0					
ANR	3613924	ReturnStatement	return import_ret ;	3583:2:108399:108416	3612011	13	True				
ANR	3613925	Identifier	import_ret		3612011	0					
ANR	3613926	ReturnStatement	return ret ;	3585:1:108422:108432	3612011	25	True				
ANR	3613927	Identifier	ret		3612011	0					
ANR	3613928	Label	beach :	3586:0:108434:108439	3612011	26	True				
ANR	3613929	Identifier	beach		3612011	0					
ANR	3613930	ExpressionStatement	free ( ret )	3587:1:108442:108452	3612011	27	True				
ANR	3613931	CallExpression	free ( ret )		3612011	0					
ANR	3613932	Callee	free		3612011	0					
ANR	3613933	Identifier	free		3612011	0					
ANR	3613934	ArgumentList	ret		3612011	1					
ANR	3613935	Argument	ret		3612011	0					
ANR	3613936	Identifier	ret		3612011	0					
ANR	3613937	ExpressionStatement	free ( sym )	3588:1:108455:108465	3612011	28	True				
ANR	3613938	CallExpression	free ( sym )		3612011	0					
ANR	3613939	Callee	free		3612011	0					
ANR	3613940	Identifier	free		3612011	0					
ANR	3613941	ArgumentList	sym		3612011	1					
ANR	3613942	Argument	sym		3612011	0					
ANR	3613943	Identifier	sym		3612011	0					
ANR	3613944	ExpressionStatement	free ( strtab )	3589:1:108468:108481	3612011	29	True				
ANR	3613945	CallExpression	free ( strtab )		3612011	0					
ANR	3613946	Callee	free		3612011	0					
ANR	3613947	Identifier	free		3612011	0					
ANR	3613948	ArgumentList	strtab		3612011	1					
ANR	3613949	Argument	strtab		3612011	0					
ANR	3613950	Identifier	strtab		3612011	0					
ANR	3613951	ReturnStatement	return NULL ;	3590:1:108484:108495	3612011	30	True				
ANR	3613952	Identifier	NULL		3612011	0					
ANR	3613953	ReturnType	Elf_		3612011	1					
ANR	3613954	Identifier	( _r_bin_elf_get_symbols_imports )		3612011	2					
ANR	3613955	Identifier	_r_bin_elf_get_symbols_imports		3612011	3					
ANR	3613956	ParameterList	"ELFOBJ * bin , int type"		3612011	4					
ANR	3613957	Parameter	ELFOBJ * bin	3335:59:100795:100805	3612011	0	True				
ANR	3613958	ParameterType	ELFOBJ *		3612011	0					
ANR	3613959	Identifier	bin		3612011	1					
ANR	3613960	Parameter	int type	3335:72:100808:100815	3612011	1	True				
ANR	3613961	ParameterType	int		3612011	0					
ANR	3613962	Identifier	type		3612011	1					
ANR	3613963	CFGEntryNode	ENTRY		3612011		True				
ANR	3613964	CFGExitNode	EXIT		3612011		True				
ANR	3613965	Symbol	SHT_SYMTAB		3612011						
ANR	3613966	Symbol	ret [ ++ i ] . last		3612011						
ANR	3613967	Symbol	bin -> b		3612011						
ANR	3613968	Symbol	bin		3612011						
ANR	3613969	Symbol	newshsize		3612011						
ANR	3613970	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		3612011						
ANR	3613971	Symbol	type		3612011						
ANR	3613972	Symbol	READ64		3612011						
ANR	3613973	Symbol	prev_ret_size		3612011						
ANR	3613974	Symbol	strtab		3612011						
ANR	3613975	Symbol	len		3612011						
ANR	3613976	Symbol	bin -> ehdr		3612011						
ANR	3613977	Symbol	sym [ j ] . st_name		3612011						
ANR	3613978	Symbol	bin -> shdr [ sym [ k ] . st_shndx ] . sh_offset		3612011						
ANR	3613979	Symbol	sym [ k ] . st_name		3612011						
ANR	3613980	Symbol	import_sym_ptr		3612011						
ANR	3613981	Symbol	bin -> shdr [ i ] . sh_size		3612011						
ANR	3613982	Symbol	* import_ret_ctr		3612011						
ANR	3613983	Symbol	R_BIN_ELF_DYNSYM_SYMBOLS		3612011						
ANR	3613984	Symbol	ret [ j ] . type		3612011						
ANR	3613985	Symbol	ret [ j ] . offset		3612011						
ANR	3613986	Symbol	bin -> shdr [ i ] . sh_offset		3612011						
ANR	3613987	Symbol	ret [ ret_ctr ] . size		3612011						
ANR	3613988	Symbol	size		3612011						
ANR	3613989	Symbol	ret [ ret_ctr ] . is_sht_null		3612011						
ANR	3613990	Symbol	SHT_DYNSYM		3612011						
ANR	3613991	Symbol	maxsize		3612011						
ANR	3613992	Symbol	is_sht_null		3612011						
ANR	3613993	Symbol	shdr_size		3612011						
ANR	3613994	Symbol	bin -> shdr [ i ] . sh_link		3612011						
ANR	3613995	Symbol	ret [ ret_ctr ] . offset		3612011						
ANR	3613996	Symbol	* strtab_section		3612011						
ANR	3613997	Symbol	import_sym_ptr -> ordinal		3612011						
ANR	3613998	Symbol	bin -> ehdr . e_shnum		3612011						
ANR	3613999	Symbol	* ret [ ret_ctr ] . name		3612011						
ANR	3614000	Symbol	sym [ j ] . st_other		3612011						
ANR	3614001	Symbol	* ret_ctr		3612011						
ANR	3614002	Symbol	fix_symbols		3612011						
ANR	3614003	Symbol	is_bin_etrel		3612011						
ANR	3614004	Symbol	shname		3612011						
ANR	3614005	Symbol	* bin		3612011						
ANR	3614006	Symbol	bin -> symbols_by_ord		3612011						
ANR	3614007	Symbol	found		3612011						
ANR	3614008	Symbol	ret [ ++ j ] . last		3612011						
ANR	3614009	Symbol	type2str		3612011						
ANR	3614010	Symbol	* * bin		3612011						
ANR	3614011	Symbol	sh_begin		3612011						
ANR	3614012	Symbol	SHT_NULL		3612011						
ANR	3614013	Symbol	UT32_MUL		3612011						
ANR	3614014	Symbol	bin -> imports_by_ord		3612011						
ANR	3614015	Symbol	st_name		3612011						
ANR	3614016	Symbol	max		3612011						
ANR	3614017	Symbol	i		3612011						
ANR	3614018	Symbol	j		3612011						
ANR	3614019	Symbol	R_MIN		3612011						
ANR	3614020	Symbol	k		3612011						
ANR	3614021	Symbol	& size		3612011						
ANR	3614022	Symbol	r		3612011						
ANR	3614023	Symbol	s		3612011						
ANR	3614024	Symbol	* ELF_STRING_LENGTH		3612011						
ANR	3614025	Symbol	__strnlen		3612011						
ANR	3614026	Symbol	ret [ ret_ctr ] . is_imported		3612011						
ANR	3614027	Symbol	r_bin_elf_v2p_new		3612011						
ANR	3614028	Symbol	ret [ j ] . name		3612011						
ANR	3614029	Symbol	R_MAX		3612011						
ANR	3614030	Symbol	sym [ j ] . st_info		3612011						
ANR	3614031	Symbol	is_imported		3612011						
ANR	3614032	Symbol	get_import_addr		3612011						
ANR	3614033	Symbol	strtab_section -> sh_offset		3612011						
ANR	3614034	Symbol	r_buf_size		3612011						
ANR	3614035	Symbol	& ret		3612011						
ANR	3614036	Symbol	ret [ i ] . is_imported		3612011						
ANR	3614037	Symbol	bin -> size		3612011						
ANR	3614038	Symbol	is_vaddr		3612011						
ANR	3614039	Symbol	ret [ ret_ctr ] . name		3612011						
ANR	3614040	Symbol	ST32_MAX		3612011						
ANR	3614041	Symbol	* bin -> shdr		3612011						
ANR	3614042	Symbol	sym [ k ] . st_value		3612011						
ANR	3614043	Symbol	realloc		3612011						
ANR	3614044	Symbol	import_ret [ import_ret_ctr ] . last		3612011						
ANR	3614045	Symbol	toffset		3612011						
ANR	3614046	Symbol	ret [ ret_ctr ] . last		3612011						
ANR	3614047	Symbol	bin -> shdr [ sym [ k ] . st_shndx ] . sh_name		3612011						
ANR	3614048	Symbol	* aux		3612011						
ANR	3614049	Symbol	sym [ j ] . st_shndx		3612011						
ANR	3614050	Symbol	* * ret_ctr		3612011						
ANR	3614051	Symbol	* sym [ k ] . st_shndx		3612011						
ANR	3614052	Symbol	bin -> imports_by_ord_size		3612011						
ANR	3614053	Symbol	* * sym		3612011						
ANR	3614054	Symbol	_r_bin_elf_convert_symbol		3612011						
ANR	3614055	Symbol	ret		3612011						
ANR	3614056	Symbol	* * k		3612011						
ANR	3614057	Symbol	strcmp		3612011						
ANR	3614058	Symbol	ret_size		3612011						
ANR	3614059	Symbol	NULL		3612011						
ANR	3614060	Symbol	get_phdr_symbols		3612011						
ANR	3614061	Symbol	Sym		3612011						
ANR	3614062	Symbol	newsize		3612011						
ANR	3614063	Symbol	strtab_section		3612011						
ANR	3614064	Symbol	sym [ j ] . st_size		3612011						
ANR	3614065	Symbol	aux -> ordinal		3612011						
ANR	3614066	Symbol	nsym		3612011						
ANR	3614067	Symbol	READ32		3612011						
ANR	3614068	Symbol	ELF_STRING_LENGTH		3612011						
ANR	3614069	Symbol	import_ret_ctr		3612011						
ANR	3614070	Symbol	* sym		3612011						
ANR	3614071	Symbol	import_ret		3612011						
ANR	3614072	Symbol	true		3612011						
ANR	3614073	Symbol	READ8		3612011						
ANR	3614074	Symbol	aux		3612011						
ANR	3614075	Symbol	sym		3612011						
ANR	3614076	Symbol	ret [ ret_ctr ] . ordinal		3612011						
ANR	3614077	Symbol	sym [ j ] . st_value		3612011						
ANR	3614078	Symbol	bin -> shstrtab		3612011						
ANR	3614079	Symbol	calloc		3612011						
ANR	3614080	Symbol	* ret		3612011						
ANR	3614081	Symbol	* import_sym_ptr		3612011						
ANR	3614082	Symbol	R_BIN_ELF_SYMTAB_SYMBOLS		3612011						
ANR	3614083	Symbol	* import_ret		3612011						
ANR	3614084	Symbol	sh_end		3612011						
ANR	3614085	Symbol	ret [ ret_ctr ] . is_vaddr		3612011						
ANR	3614086	Symbol	sym [ k ] . st_size		3612011						
ANR	3614087	Symbol	sym [ k ] . st_shndx		3612011						
ANR	3614088	Symbol	UT64_MAX		3612011						
ANR	3614089	Symbol	STN_UNDEF		3612011						
ANR	3614090	Symbol	bin -> symbols_by_ord_size		3612011						
ANR	3614091	Symbol	Elf_		3612011						
ANR	3614092	Symbol	rest		3612011						
ANR	3614093	Symbol	& shdr_size		3612011						
ANR	3614094	Symbol	READ16		3612011						
ANR	3614095	Symbol	Shdr		3612011						
ANR	3614096	Symbol	aux -> last		3612011						
ANR	3614097	Symbol	false		3612011						
ANR	3614098	Symbol	ret_ctr		3612011						
ANR	3614099	Symbol	tsize		3612011						
ANR	3614100	Symbol	bin -> shdr		3612011						
ANR	3614101	Symbol	* i		3612011						
ANR	3614102	Symbol	* j		3612011						
ANR	3614103	Symbol	* k		3612011						
ANR	3614104	Symbol	* * ret		3612011						
ANR	3614105	Symbol	strtab_section -> sh_size		3612011						
ANR	3614106	Symbol	r_buf_read_at		3612011						
ANR	3614107	Symbol	bin -> shdr [ i ] . sh_type		3612011						
ANR	3614108	Symbol	is_section_local_sym		3612011						
ANR	3614109	Function	r_bin_elf_get_symbols	3593:15:108515:108695							
ANR	3614110	FunctionDef	r_bin_elf_get_symbols (ELFOBJ * bin)		3614109	0					
ANR	3614111	CompoundStatement		3593:56:108556:108695	3614109	0					
ANR	3614112	IfStatement	if ( ! bin -> g_symbols )		3614109	0					
ANR	3614113	Condition	! bin -> g_symbols	3594:5:108563:108577	3614109	0	True				
ANR	3614114	UnaryOperationExpression	! bin -> g_symbols		3614109	0					
ANR	3614115	UnaryOperator	!		3614109	0					
ANR	3614116	PtrMemberAccess	bin -> g_symbols		3614109	1					
ANR	3614117	Identifier	bin		3614109	0					
ANR	3614118	Identifier	g_symbols		3614109	1					
ANR	3614119	CompoundStatement		2:22:23:23	3614109	1					
ANR	3614120	ExpressionStatement	"bin -> g_symbols = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_ALL_SYMBOLS )"	3595:2:108584:108666	3614109	0	True				
ANR	3614121	AssignmentExpression	"bin -> g_symbols = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_ALL_SYMBOLS )"		3614109	0		=			
ANR	3614122	PtrMemberAccess	bin -> g_symbols		3614109	0					
ANR	3614123	Identifier	bin		3614109	0					
ANR	3614124	Identifier	g_symbols		3614109	1					
ANR	3614125	CallExpression	"Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_ALL_SYMBOLS )"		3614109	1					
ANR	3614126	Callee	Elf_ ( _r_bin_elf_get_symbols_imports )		3614109	0					
ANR	3614127	CallExpression	Elf_ ( _r_bin_elf_get_symbols_imports )		3614109	0					
ANR	3614128	Callee	Elf_		3614109	0					
ANR	3614129	Identifier	Elf_		3614109	0					
ANR	3614130	ArgumentList	_r_bin_elf_get_symbols_imports		3614109	1					
ANR	3614131	Argument	_r_bin_elf_get_symbols_imports		3614109	0					
ANR	3614132	Identifier	_r_bin_elf_get_symbols_imports		3614109	0					
ANR	3614133	ArgumentList	bin		3614109	1					
ANR	3614134	Argument	bin		3614109	0					
ANR	3614135	Identifier	bin		3614109	0					
ANR	3614136	Argument	R_BIN_ELF_ALL_SYMBOLS		3614109	1					
ANR	3614137	Identifier	R_BIN_ELF_ALL_SYMBOLS		3614109	0					
ANR	3614138	ReturnStatement	return bin -> g_symbols ;	3597:1:108672:108693	3614109	1	True				
ANR	3614139	PtrMemberAccess	bin -> g_symbols		3614109	0					
ANR	3614140	Identifier	bin		3614109	0					
ANR	3614141	Identifier	g_symbols		3614109	1					
ANR	3614142	ReturnType	Elf_		3614109	1					
ANR	3614143	Identifier	( r_bin_elf_get_symbols )		3614109	2					
ANR	3614144	Identifier	r_bin_elf_get_symbols		3614109	3					
ANR	3614145	ParameterList	ELFOBJ * bin		3614109	4					
ANR	3614146	Parameter	ELFOBJ * bin	3593:43:108543:108553	3614109	0	True				
ANR	3614147	ParameterType	ELFOBJ *		3614109	0					
ANR	3614148	Identifier	bin		3614109	1					
ANR	3614149	CFGEntryNode	ENTRY		3614109		True				
ANR	3614150	CFGExitNode	EXIT		3614109		True				
ANR	3614151	Symbol	Elf_		3614109						
ANR	3614152	Symbol	bin -> g_symbols		3614109						
ANR	3614153	Symbol	bin		3614109						
ANR	3614154	Symbol	_r_bin_elf_get_symbols_imports		3614109						
ANR	3614155	Symbol	R_BIN_ELF_ALL_SYMBOLS		3614109						
ANR	3614156	Symbol	* bin		3614109						
ANR	3614157	Function	r_bin_elf_get_imports	3600:15:108713:108896							
ANR	3614158	FunctionDef	r_bin_elf_get_imports (ELFOBJ * bin)		3614157	0					
ANR	3614159	CompoundStatement		3600:56:108754:108896	3614157	0					
ANR	3614160	IfStatement	if ( ! bin -> g_imports )		3614157	0					
ANR	3614161	Condition	! bin -> g_imports	3601:5:108761:108775	3614157	0	True				
ANR	3614162	UnaryOperationExpression	! bin -> g_imports		3614157	0					
ANR	3614163	UnaryOperator	!		3614157	0					
ANR	3614164	PtrMemberAccess	bin -> g_imports		3614157	1					
ANR	3614165	Identifier	bin		3614157	0					
ANR	3614166	Identifier	g_imports		3614157	1					
ANR	3614167	CompoundStatement		2:22:23:23	3614157	1					
ANR	3614168	ExpressionStatement	"bin -> g_imports = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"	3602:2:108782:108867	3614157	0	True				
ANR	3614169	AssignmentExpression	"bin -> g_imports = Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		3614157	0		=			
ANR	3614170	PtrMemberAccess	bin -> g_imports		3614157	0					
ANR	3614171	Identifier	bin		3614157	0					
ANR	3614172	Identifier	g_imports		3614157	1					
ANR	3614173	CallExpression	"Elf_ ( _r_bin_elf_get_symbols_imports ) ( bin , R_BIN_ELF_IMPORT_SYMBOLS )"		3614157	1					
ANR	3614174	Callee	Elf_ ( _r_bin_elf_get_symbols_imports )		3614157	0					
ANR	3614175	CallExpression	Elf_ ( _r_bin_elf_get_symbols_imports )		3614157	0					
ANR	3614176	Callee	Elf_		3614157	0					
ANR	3614177	Identifier	Elf_		3614157	0					
ANR	3614178	ArgumentList	_r_bin_elf_get_symbols_imports		3614157	1					
ANR	3614179	Argument	_r_bin_elf_get_symbols_imports		3614157	0					
ANR	3614180	Identifier	_r_bin_elf_get_symbols_imports		3614157	0					
ANR	3614181	ArgumentList	bin		3614157	1					
ANR	3614182	Argument	bin		3614157	0					
ANR	3614183	Identifier	bin		3614157	0					
ANR	3614184	Argument	R_BIN_ELF_IMPORT_SYMBOLS		3614157	1					
ANR	3614185	Identifier	R_BIN_ELF_IMPORT_SYMBOLS		3614157	0					
ANR	3614186	ReturnStatement	return bin -> g_imports ;	3604:1:108873:108894	3614157	1	True				
ANR	3614187	PtrMemberAccess	bin -> g_imports		3614157	0					
ANR	3614188	Identifier	bin		3614157	0					
ANR	3614189	Identifier	g_imports		3614157	1					
ANR	3614190	ReturnType	Elf_		3614157	1					
ANR	3614191	Identifier	( r_bin_elf_get_imports )		3614157	2					
ANR	3614192	Identifier	r_bin_elf_get_imports		3614157	3					
ANR	3614193	ParameterList	ELFOBJ * bin		3614157	4					
ANR	3614194	Parameter	ELFOBJ * bin	3600:43:108741:108751	3614157	0	True				
ANR	3614195	ParameterType	ELFOBJ *		3614157	0					
ANR	3614196	Identifier	bin		3614157	1					
ANR	3614197	CFGEntryNode	ENTRY		3614157		True				
ANR	3614198	CFGExitNode	EXIT		3614157		True				
ANR	3614199	Symbol	Elf_		3614157						
ANR	3614200	Symbol	bin -> g_imports		3614157						
ANR	3614201	Symbol	bin		3614157						
ANR	3614202	Symbol	_r_bin_elf_get_symbols_imports		3614157						
ANR	3614203	Symbol	R_BIN_ELF_IMPORT_SYMBOLS		3614157						
ANR	3614204	Symbol	* bin		3614157						
ANR	3614205	Function	r_bin_elf_get_fields	3607:14:108913:109621							
ANR	3614206	FunctionDef	r_bin_elf_get_fields (ELFOBJ * bin)		3614205	0					
ANR	3614207	CompoundStatement		3607:54:108953:109621	3614205	0					
ANR	3614208	IdentifierDeclStatement	RBinElfField * ret = NULL ;	3608:1:108956:108980	3614205	0	True				
ANR	3614209	IdentifierDecl	* ret = NULL		3614205	0					
ANR	3614210	IdentifierDeclType	RBinElfField *		3614205	0					
ANR	3614211	Identifier	ret		3614205	1					
ANR	3614212	AssignmentExpression	* ret = NULL		3614205	2		=			
ANR	3614213	Identifier	NULL		3614205	0					
ANR	3614214	Identifier	NULL		3614205	1					
ANR	3614215	IdentifierDeclStatement	"int i = 0 , j ;"	3609:1:108983:108995	3614205	1	True				
ANR	3614216	IdentifierDecl	i = 0		3614205	0					
ANR	3614217	IdentifierDeclType	int		3614205	0					
ANR	3614218	Identifier	i		3614205	1					
ANR	3614219	AssignmentExpression	i = 0		3614205	2		=			
ANR	3614220	Identifier	i		3614205	0					
ANR	3614221	PrimaryExpression	0		3614205	1					
ANR	3614222	IdentifierDecl	j		3614205	1					
ANR	3614223	IdentifierDeclType	int		3614205	0					
ANR	3614224	Identifier	j		3614205	1					
ANR	3614225	IfStatement	"if ( ! bin || ! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) ) )"		3614205	2					
ANR	3614226	Condition	"! bin || ! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) )"	3610:5:109002:109077	3614205	0	True				
ANR	3614227	OrExpression	"! bin || ! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) )"		3614205	0		||			
ANR	3614228	UnaryOperationExpression	! bin		3614205	0					
ANR	3614229	UnaryOperator	!		3614205	0					
ANR	3614230	Identifier	bin		3614205	1					
ANR	3614231	UnaryOperationExpression	"! ( ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) ) )"		3614205	1					
ANR	3614232	UnaryOperator	!		3614205	0					
ANR	3614233	AssignmentExpression	"ret = calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) )"		3614205	1		=			
ANR	3614234	Identifier	ret		3614205	0					
ANR	3614235	CallExpression	"calloc ( ( bin -> ehdr . e_phnum + 3 + 1 ) , sizeof ( RBinElfField ) )"		3614205	1					
ANR	3614236	Callee	calloc		3614205	0					
ANR	3614237	Identifier	calloc		3614205	0					
ANR	3614238	ArgumentList	bin -> ehdr . e_phnum + 3 + 1		3614205	1					
ANR	3614239	Argument	bin -> ehdr . e_phnum + 3 + 1		3614205	0					
ANR	3614240	AdditiveExpression	bin -> ehdr . e_phnum + 3 + 1		3614205	0		+			
ANR	3614241	MemberAccess	bin -> ehdr . e_phnum		3614205	0					
ANR	3614242	PtrMemberAccess	bin -> ehdr		3614205	0					
ANR	3614243	Identifier	bin		3614205	0					
ANR	3614244	Identifier	ehdr		3614205	1					
ANR	3614245	Identifier	e_phnum		3614205	1					
ANR	3614246	AdditiveExpression	3 + 1		3614205	1		+			
ANR	3614247	PrimaryExpression	3		3614205	0					
ANR	3614248	PrimaryExpression	1		3614205	1					
ANR	3614249	Argument	sizeof ( RBinElfField )		3614205	1					
ANR	3614250	SizeofExpression	sizeof ( RBinElfField )		3614205	0					
ANR	3614251	Sizeof	sizeof		3614205	0					
ANR	3614252	SizeofOperand	RBinElfField		3614205	1					
ANR	3614253	CompoundStatement		4:83:126:126	3614205	1					
ANR	3614254	ReturnStatement	return NULL ;	3611:2:109084:109095	3614205	0	True				
ANR	3614255	Identifier	NULL		3614205	0					
ANR	3614256	ExpressionStatement	"strncpy ( ret [ i ] . name , ""ehdr"" , ELF_STRING_LENGTH )"	3613:1:109101:109149	3614205	3	True				
ANR	3614257	CallExpression	"strncpy ( ret [ i ] . name , ""ehdr"" , ELF_STRING_LENGTH )"		3614205	0					
ANR	3614258	Callee	strncpy		3614205	0					
ANR	3614259	Identifier	strncpy		3614205	0					
ANR	3614260	ArgumentList	ret [ i ] . name		3614205	1					
ANR	3614261	Argument	ret [ i ] . name		3614205	0					
ANR	3614262	MemberAccess	ret [ i ] . name		3614205	0					
ANR	3614263	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614264	Identifier	ret		3614205	0					
ANR	3614265	Identifier	i		3614205	1					
ANR	3614266	Identifier	name		3614205	1					
ANR	3614267	Argument	"""ehdr"""		3614205	1					
ANR	3614268	PrimaryExpression	"""ehdr"""		3614205	0					
ANR	3614269	Argument	ELF_STRING_LENGTH		3614205	2					
ANR	3614270	Identifier	ELF_STRING_LENGTH		3614205	0					
ANR	3614271	ExpressionStatement	ret [ i ] . offset = 0	3614:1:109152:109169	3614205	4	True				
ANR	3614272	AssignmentExpression	ret [ i ] . offset = 0		3614205	0		=			
ANR	3614273	MemberAccess	ret [ i ] . offset		3614205	0					
ANR	3614274	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614275	Identifier	ret		3614205	0					
ANR	3614276	Identifier	i		3614205	1					
ANR	3614277	Identifier	offset		3614205	1					
ANR	3614278	PrimaryExpression	0		3614205	1					
ANR	3614279	ExpressionStatement	ret [ i ++ ] . last = 0	3615:1:109172:109189	3614205	5	True				
ANR	3614280	AssignmentExpression	ret [ i ++ ] . last = 0		3614205	0		=			
ANR	3614281	MemberAccess	ret [ i ++ ] . last		3614205	0					
ANR	3614282	ArrayIndexing	ret [ i ++ ]		3614205	0					
ANR	3614283	Identifier	ret		3614205	0					
ANR	3614284	PostIncDecOperationExpression	i ++		3614205	1					
ANR	3614285	Identifier	i		3614205	0					
ANR	3614286	IncDec	++		3614205	1					
ANR	3614287	Identifier	last		3614205	1					
ANR	3614288	PrimaryExpression	0		3614205	1					
ANR	3614289	ExpressionStatement	"strncpy ( ret [ i ] . name , ""shoff"" , ELF_STRING_LENGTH )"	3616:1:109192:109241	3614205	6	True				
ANR	3614290	CallExpression	"strncpy ( ret [ i ] . name , ""shoff"" , ELF_STRING_LENGTH )"		3614205	0					
ANR	3614291	Callee	strncpy		3614205	0					
ANR	3614292	Identifier	strncpy		3614205	0					
ANR	3614293	ArgumentList	ret [ i ] . name		3614205	1					
ANR	3614294	Argument	ret [ i ] . name		3614205	0					
ANR	3614295	MemberAccess	ret [ i ] . name		3614205	0					
ANR	3614296	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614297	Identifier	ret		3614205	0					
ANR	3614298	Identifier	i		3614205	1					
ANR	3614299	Identifier	name		3614205	1					
ANR	3614300	Argument	"""shoff"""		3614205	1					
ANR	3614301	PrimaryExpression	"""shoff"""		3614205	0					
ANR	3614302	Argument	ELF_STRING_LENGTH		3614205	2					
ANR	3614303	Identifier	ELF_STRING_LENGTH		3614205	0					
ANR	3614304	ExpressionStatement	ret [ i ] . offset = bin -> ehdr . e_shoff	3617:1:109244:109277	3614205	7	True				
ANR	3614305	AssignmentExpression	ret [ i ] . offset = bin -> ehdr . e_shoff		3614205	0		=			
ANR	3614306	MemberAccess	ret [ i ] . offset		3614205	0					
ANR	3614307	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614308	Identifier	ret		3614205	0					
ANR	3614309	Identifier	i		3614205	1					
ANR	3614310	Identifier	offset		3614205	1					
ANR	3614311	MemberAccess	bin -> ehdr . e_shoff		3614205	1					
ANR	3614312	PtrMemberAccess	bin -> ehdr		3614205	0					
ANR	3614313	Identifier	bin		3614205	0					
ANR	3614314	Identifier	ehdr		3614205	1					
ANR	3614315	Identifier	e_shoff		3614205	1					
ANR	3614316	ExpressionStatement	ret [ i ++ ] . last = 0	3618:1:109280:109297	3614205	8	True				
ANR	3614317	AssignmentExpression	ret [ i ++ ] . last = 0		3614205	0		=			
ANR	3614318	MemberAccess	ret [ i ++ ] . last		3614205	0					
ANR	3614319	ArrayIndexing	ret [ i ++ ]		3614205	0					
ANR	3614320	Identifier	ret		3614205	0					
ANR	3614321	PostIncDecOperationExpression	i ++		3614205	1					
ANR	3614322	Identifier	i		3614205	0					
ANR	3614323	IncDec	++		3614205	1					
ANR	3614324	Identifier	last		3614205	1					
ANR	3614325	PrimaryExpression	0		3614205	1					
ANR	3614326	ExpressionStatement	"strncpy ( ret [ i ] . name , ""phoff"" , ELF_STRING_LENGTH )"	3619:1:109300:109349	3614205	9	True				
ANR	3614327	CallExpression	"strncpy ( ret [ i ] . name , ""phoff"" , ELF_STRING_LENGTH )"		3614205	0					
ANR	3614328	Callee	strncpy		3614205	0					
ANR	3614329	Identifier	strncpy		3614205	0					
ANR	3614330	ArgumentList	ret [ i ] . name		3614205	1					
ANR	3614331	Argument	ret [ i ] . name		3614205	0					
ANR	3614332	MemberAccess	ret [ i ] . name		3614205	0					
ANR	3614333	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614334	Identifier	ret		3614205	0					
ANR	3614335	Identifier	i		3614205	1					
ANR	3614336	Identifier	name		3614205	1					
ANR	3614337	Argument	"""phoff"""		3614205	1					
ANR	3614338	PrimaryExpression	"""phoff"""		3614205	0					
ANR	3614339	Argument	ELF_STRING_LENGTH		3614205	2					
ANR	3614340	Identifier	ELF_STRING_LENGTH		3614205	0					
ANR	3614341	ExpressionStatement	ret [ i ] . offset = bin -> ehdr . e_phoff	3620:1:109352:109385	3614205	10	True				
ANR	3614342	AssignmentExpression	ret [ i ] . offset = bin -> ehdr . e_phoff		3614205	0		=			
ANR	3614343	MemberAccess	ret [ i ] . offset		3614205	0					
ANR	3614344	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614345	Identifier	ret		3614205	0					
ANR	3614346	Identifier	i		3614205	1					
ANR	3614347	Identifier	offset		3614205	1					
ANR	3614348	MemberAccess	bin -> ehdr . e_phoff		3614205	1					
ANR	3614349	PtrMemberAccess	bin -> ehdr		3614205	0					
ANR	3614350	Identifier	bin		3614205	0					
ANR	3614351	Identifier	ehdr		3614205	1					
ANR	3614352	Identifier	e_phoff		3614205	1					
ANR	3614353	ExpressionStatement	ret [ i ++ ] . last = 0	3621:1:109388:109405	3614205	11	True				
ANR	3614354	AssignmentExpression	ret [ i ++ ] . last = 0		3614205	0		=			
ANR	3614355	MemberAccess	ret [ i ++ ] . last		3614205	0					
ANR	3614356	ArrayIndexing	ret [ i ++ ]		3614205	0					
ANR	3614357	Identifier	ret		3614205	0					
ANR	3614358	PostIncDecOperationExpression	i ++		3614205	1					
ANR	3614359	Identifier	i		3614205	0					
ANR	3614360	IncDec	++		3614205	1					
ANR	3614361	Identifier	last		3614205	1					
ANR	3614362	PrimaryExpression	0		3614205	1					
ANR	3614363	ForStatement	"for ( j = 0 ; bin -> phdr && j < bin -> ehdr . e_phnum ; i ++ , j ++ )"		3614205	12					
ANR	3614364	ForInit	j = 0 ;	3622:6:109413:109418	3614205	0	True				
ANR	3614365	AssignmentExpression	j = 0		3614205	0		=			
ANR	3614366	Identifier	j		3614205	0					
ANR	3614367	PrimaryExpression	0		3614205	1					
ANR	3614368	Condition	bin -> phdr && j < bin -> ehdr . e_phnum	3622:13:109420:109453	3614205	1	True				
ANR	3614369	AndExpression	bin -> phdr && j < bin -> ehdr . e_phnum		3614205	0		&&			
ANR	3614370	PtrMemberAccess	bin -> phdr		3614205	0					
ANR	3614371	Identifier	bin		3614205	0					
ANR	3614372	Identifier	phdr		3614205	1					
ANR	3614373	RelationalExpression	j < bin -> ehdr . e_phnum		3614205	1		<			
ANR	3614374	Identifier	j		3614205	0					
ANR	3614375	MemberAccess	bin -> ehdr . e_phnum		3614205	1					
ANR	3614376	PtrMemberAccess	bin -> ehdr		3614205	0					
ANR	3614377	Identifier	bin		3614205	0					
ANR	3614378	Identifier	ehdr		3614205	1					
ANR	3614379	Identifier	e_phnum		3614205	1					
ANR	3614380	Expression	"i ++ , j ++"	3622:49:109456:109463	3614205	2	True				
ANR	3614381	PostIncDecOperationExpression	i ++		3614205	0					
ANR	3614382	Identifier	i		3614205	0					
ANR	3614383	IncDec	++		3614205	1					
ANR	3614384	PostIncDecOperationExpression	j ++		3614205	1					
ANR	3614385	Identifier	j		3614205	0					
ANR	3614386	IncDec	++		3614205	1					
ANR	3614387	CompoundStatement		16:59:512:512	3614205	3					
ANR	3614388	ExpressionStatement	"snprintf ( ret [ i ] . name , ELF_STRING_LENGTH , ""phdr_%i"" , j )"	3623:2:109470:109525	3614205	0	True				
ANR	3614389	CallExpression	"snprintf ( ret [ i ] . name , ELF_STRING_LENGTH , ""phdr_%i"" , j )"		3614205	0					
ANR	3614390	Callee	snprintf		3614205	0					
ANR	3614391	Identifier	snprintf		3614205	0					
ANR	3614392	ArgumentList	ret [ i ] . name		3614205	1					
ANR	3614393	Argument	ret [ i ] . name		3614205	0					
ANR	3614394	MemberAccess	ret [ i ] . name		3614205	0					
ANR	3614395	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614396	Identifier	ret		3614205	0					
ANR	3614397	Identifier	i		3614205	1					
ANR	3614398	Identifier	name		3614205	1					
ANR	3614399	Argument	ELF_STRING_LENGTH		3614205	1					
ANR	3614400	Identifier	ELF_STRING_LENGTH		3614205	0					
ANR	3614401	Argument	"""phdr_%i"""		3614205	2					
ANR	3614402	PrimaryExpression	"""phdr_%i"""		3614205	0					
ANR	3614403	Argument	j		3614205	3					
ANR	3614404	Identifier	j		3614205	0					
ANR	3614405	ExpressionStatement	ret [ i ] . offset = bin -> phdr [ j ] . p_offset	3624:2:109529:109566	3614205	1	True				
ANR	3614406	AssignmentExpression	ret [ i ] . offset = bin -> phdr [ j ] . p_offset		3614205	0		=			
ANR	3614407	MemberAccess	ret [ i ] . offset		3614205	0					
ANR	3614408	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614409	Identifier	ret		3614205	0					
ANR	3614410	Identifier	i		3614205	1					
ANR	3614411	Identifier	offset		3614205	1					
ANR	3614412	MemberAccess	bin -> phdr [ j ] . p_offset		3614205	1					
ANR	3614413	ArrayIndexing	bin -> phdr [ j ]		3614205	0					
ANR	3614414	PtrMemberAccess	bin -> phdr		3614205	0					
ANR	3614415	Identifier	bin		3614205	0					
ANR	3614416	Identifier	phdr		3614205	1					
ANR	3614417	Identifier	j		3614205	1					
ANR	3614418	Identifier	p_offset		3614205	1					
ANR	3614419	ExpressionStatement	ret [ i ] . last = 0	3625:2:109570:109585	3614205	2	True				
ANR	3614420	AssignmentExpression	ret [ i ] . last = 0		3614205	0		=			
ANR	3614421	MemberAccess	ret [ i ] . last		3614205	0					
ANR	3614422	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614423	Identifier	ret		3614205	0					
ANR	3614424	Identifier	i		3614205	1					
ANR	3614425	Identifier	last		3614205	1					
ANR	3614426	PrimaryExpression	0		3614205	1					
ANR	3614427	ExpressionStatement	ret [ i ] . last = 1	3627:1:109591:109606	3614205	13	True				
ANR	3614428	AssignmentExpression	ret [ i ] . last = 1		3614205	0		=			
ANR	3614429	MemberAccess	ret [ i ] . last		3614205	0					
ANR	3614430	ArrayIndexing	ret [ i ]		3614205	0					
ANR	3614431	Identifier	ret		3614205	0					
ANR	3614432	Identifier	i		3614205	1					
ANR	3614433	Identifier	last		3614205	1					
ANR	3614434	PrimaryExpression	1		3614205	1					
ANR	3614435	ReturnStatement	return ret ;	3628:1:109609:109619	3614205	14	True				
ANR	3614436	Identifier	ret		3614205	0					
ANR	3614437	ReturnType	Elf_		3614205	1					
ANR	3614438	Identifier	( r_bin_elf_get_fields )		3614205	2					
ANR	3614439	Identifier	r_bin_elf_get_fields		3614205	3					
ANR	3614440	ParameterList	ELFOBJ * bin		3614205	4					
ANR	3614441	Parameter	ELFOBJ * bin	3607:41:108940:108950	3614205	0	True				
ANR	3614442	ParameterType	ELFOBJ *		3614205	0					
ANR	3614443	Identifier	bin		3614205	1					
ANR	3614444	CFGEntryNode	ENTRY		3614205		True				
ANR	3614445	CFGExitNode	EXIT		3614205		True				
ANR	3614446	Symbol	ret		3614205						
ANR	3614447	Symbol	ret [ i ] . name		3614205						
ANR	3614448	Symbol	NULL		3614205						
ANR	3614449	Symbol	bin		3614205						
ANR	3614450	Symbol	i		3614205						
ANR	3614451	Symbol	bin -> phdr		3614205						
ANR	3614452	Symbol	j		3614205						
ANR	3614453	Symbol	bin -> ehdr . e_phnum		3614205						
ANR	3614454	Symbol	calloc		3614205						
ANR	3614455	Symbol	* ret		3614205						
ANR	3614456	Symbol	ELF_STRING_LENGTH		3614205						
ANR	3614457	Symbol	* bin		3614205						
ANR	3614458	Symbol	* bin -> phdr		3614205						
ANR	3614459	Symbol	bin -> ehdr . e_phoff		3614205						
ANR	3614460	Symbol	* i		3614205						
ANR	3614461	Symbol	ret [ i ++ ] . last		3614205						
ANR	3614462	Symbol	* j		3614205						
ANR	3614463	Symbol	bin -> phdr [ j ] . p_offset		3614205						
ANR	3614464	Symbol	bin -> ehdr		3614205						
ANR	3614465	Symbol	bin -> ehdr . e_shoff		3614205						
ANR	3614466	Symbol	* * bin		3614205						
ANR	3614467	Symbol	ret [ i ] . last		3614205						
ANR	3614468	Symbol	ret [ i ] . offset		3614205						
ANR	3614469	Function	r_bin_elf_free	3631:0:109624:110486							
ANR	3614470	FunctionDef	r_bin_elf_free (ELFOBJ * bin)		3614469	0					
ANR	3614471	CompoundStatement		3631:39:109663:110486	3614469	0					
ANR	3614472	IdentifierDeclStatement	int i ;	3632:1:109666:109671	3614469	0	True				
ANR	3614473	IdentifierDecl	i		3614469	0					
ANR	3614474	IdentifierDeclType	int		3614469	0					
ANR	3614475	Identifier	i		3614469	1					
ANR	3614476	IfStatement	if ( ! bin )		3614469	1					
ANR	3614477	Condition	! bin	3633:5:109678:109681	3614469	0	True				
ANR	3614478	UnaryOperationExpression	! bin		3614469	0					
ANR	3614479	UnaryOperator	!		3614469	0					
ANR	3614480	Identifier	bin		3614469	1					
ANR	3614481	CompoundStatement		3:11:20:20	3614469	1					
ANR	3614482	ReturnStatement	return ;	3634:2:109688:109694	3614469	0	True				
ANR	3614483	ExpressionStatement	free ( bin -> phdr )	3636:1:109700:109716	3614469	2	True				
ANR	3614484	CallExpression	free ( bin -> phdr )		3614469	0					
ANR	3614485	Callee	free		3614469	0					
ANR	3614486	Identifier	free		3614469	0					
ANR	3614487	ArgumentList	bin -> phdr		3614469	1					
ANR	3614488	Argument	bin -> phdr		3614469	0					
ANR	3614489	PtrMemberAccess	bin -> phdr		3614469	0					
ANR	3614490	Identifier	bin		3614469	0					
ANR	3614491	Identifier	phdr		3614469	1					
ANR	3614492	ExpressionStatement	free ( bin -> shdr )	3637:1:109719:109735	3614469	3	True				
ANR	3614493	CallExpression	free ( bin -> shdr )		3614469	0					
ANR	3614494	Callee	free		3614469	0					
ANR	3614495	Identifier	free		3614469	0					
ANR	3614496	ArgumentList	bin -> shdr		3614469	1					
ANR	3614497	Argument	bin -> shdr		3614469	0					
ANR	3614498	PtrMemberAccess	bin -> shdr		3614469	0					
ANR	3614499	Identifier	bin		3614469	0					
ANR	3614500	Identifier	shdr		3614469	1					
ANR	3614501	ExpressionStatement	free ( bin -> strtab )	3638:1:109738:109756	3614469	4	True				
ANR	3614502	CallExpression	free ( bin -> strtab )		3614469	0					
ANR	3614503	Callee	free		3614469	0					
ANR	3614504	Identifier	free		3614469	0					
ANR	3614505	ArgumentList	bin -> strtab		3614469	1					
ANR	3614506	Argument	bin -> strtab		3614469	0					
ANR	3614507	PtrMemberAccess	bin -> strtab		3614469	0					
ANR	3614508	Identifier	bin		3614469	0					
ANR	3614509	Identifier	strtab		3614469	1					
ANR	3614510	ExpressionStatement	free ( bin -> dyn_buf )	3639:1:109759:109778	3614469	5	True				
ANR	3614511	CallExpression	free ( bin -> dyn_buf )		3614469	0					
ANR	3614512	Callee	free		3614469	0					
ANR	3614513	Identifier	free		3614469	0					
ANR	3614514	ArgumentList	bin -> dyn_buf		3614469	1					
ANR	3614515	Argument	bin -> dyn_buf		3614469	0					
ANR	3614516	PtrMemberAccess	bin -> dyn_buf		3614469	0					
ANR	3614517	Identifier	bin		3614469	0					
ANR	3614518	Identifier	dyn_buf		3614469	1					
ANR	3614519	ExpressionStatement	free ( bin -> shstrtab )	3640:1:109781:109801	3614469	6	True				
ANR	3614520	CallExpression	free ( bin -> shstrtab )		3614469	0					
ANR	3614521	Callee	free		3614469	0					
ANR	3614522	Identifier	free		3614469	0					
ANR	3614523	ArgumentList	bin -> shstrtab		3614469	1					
ANR	3614524	Argument	bin -> shstrtab		3614469	0					
ANR	3614525	PtrMemberAccess	bin -> shstrtab		3614469	0					
ANR	3614526	Identifier	bin		3614469	0					
ANR	3614527	Identifier	shstrtab		3614469	1					
ANR	3614528	ExpressionStatement	free ( bin -> dynstr )	3641:1:109804:109822	3614469	7	True				
ANR	3614529	CallExpression	free ( bin -> dynstr )		3614469	0					
ANR	3614530	Callee	free		3614469	0					
ANR	3614531	Identifier	free		3614469	0					
ANR	3614532	ArgumentList	bin -> dynstr		3614469	1					
ANR	3614533	Argument	bin -> dynstr		3614469	0					
ANR	3614534	PtrMemberAccess	bin -> dynstr		3614469	0					
ANR	3614535	Identifier	bin		3614469	0					
ANR	3614536	Identifier	dynstr		3614469	1					
ANR	3614537	IfStatement	if ( bin -> imports_by_ord )		3614469	8					
ANR	3614538	Condition	bin -> imports_by_ord	3643:5:109860:109878	3614469	0	True				
ANR	3614539	PtrMemberAccess	bin -> imports_by_ord		3614469	0					
ANR	3614540	Identifier	bin		3614469	0					
ANR	3614541	Identifier	imports_by_ord		3614469	1					
ANR	3614542	CompoundStatement		13:26:217:217	3614469	1					
ANR	3614543	ForStatement	for ( i = 0 ; i < bin -> imports_by_ord_size ; i ++ )		3614469	0					
ANR	3614544	ForInit	i = 0 ;	3644:7:109890:109895	3614469	0	True				
ANR	3614545	AssignmentExpression	i = 0		3614469	0		=			
ANR	3614546	Identifier	i		3614469	0					
ANR	3614547	PrimaryExpression	0		3614469	1					
ANR	3614548	Condition	i < bin -> imports_by_ord_size	3644:14:109897:109922	3614469	1	True				
ANR	3614549	RelationalExpression	i < bin -> imports_by_ord_size		3614469	0		<			
ANR	3614550	Identifier	i		3614469	0					
ANR	3614551	PtrMemberAccess	bin -> imports_by_ord_size		3614469	1					
ANR	3614552	Identifier	bin		3614469	0					
ANR	3614553	Identifier	imports_by_ord_size		3614469	1					
ANR	3614554	PostIncDecOperationExpression	i ++	3644:42:109925:109927	3614469	2	True				
ANR	3614555	Identifier	i		3614469	0					
ANR	3614556	IncDec	++		3614469	1					
ANR	3614557	CompoundStatement		14:47:266:266	3614469	3					
ANR	3614558	ExpressionStatement	free ( bin -> imports_by_ord [ i ] )	3645:3:109935:109964	3614469	0	True				
ANR	3614559	CallExpression	free ( bin -> imports_by_ord [ i ] )		3614469	0					
ANR	3614560	Callee	free		3614469	0					
ANR	3614561	Identifier	free		3614469	0					
ANR	3614562	ArgumentList	bin -> imports_by_ord [ i ]		3614469	1					
ANR	3614563	Argument	bin -> imports_by_ord [ i ]		3614469	0					
ANR	3614564	ArrayIndexing	bin -> imports_by_ord [ i ]		3614469	0					
ANR	3614565	PtrMemberAccess	bin -> imports_by_ord		3614469	0					
ANR	3614566	Identifier	bin		3614469	0					
ANR	3614567	Identifier	imports_by_ord		3614469	1					
ANR	3614568	Identifier	i		3614469	1					
ANR	3614569	ExpressionStatement	free ( bin -> imports_by_ord )	3647:2:109972:109998	3614469	1	True				
ANR	3614570	CallExpression	free ( bin -> imports_by_ord )		3614469	0					
ANR	3614571	Callee	free		3614469	0					
ANR	3614572	Identifier	free		3614469	0					
ANR	3614573	ArgumentList	bin -> imports_by_ord		3614469	1					
ANR	3614574	Argument	bin -> imports_by_ord		3614469	0					
ANR	3614575	PtrMemberAccess	bin -> imports_by_ord		3614469	0					
ANR	3614576	Identifier	bin		3614469	0					
ANR	3614577	Identifier	imports_by_ord		3614469	1					
ANR	3614578	IfStatement	if ( bin -> symbols_by_ord )		3614469	9					
ANR	3614579	Condition	bin -> symbols_by_ord	3649:5:110008:110026	3614469	0	True				
ANR	3614580	PtrMemberAccess	bin -> symbols_by_ord		3614469	0					
ANR	3614581	Identifier	bin		3614469	0					
ANR	3614582	Identifier	symbols_by_ord		3614469	1					
ANR	3614583	CompoundStatement		19:26:365:365	3614469	1					
ANR	3614584	ForStatement	for ( i = 0 ; i < bin -> symbols_by_ord_size ; i ++ )		3614469	0					
ANR	3614585	ForInit	i = 0 ;	3650:7:110038:110043	3614469	0	True				
ANR	3614586	AssignmentExpression	i = 0		3614469	0		=			
ANR	3614587	Identifier	i		3614469	0					
ANR	3614588	PrimaryExpression	0		3614469	1					
ANR	3614589	Condition	i < bin -> symbols_by_ord_size	3650:14:110045:110070	3614469	1	True				
ANR	3614590	RelationalExpression	i < bin -> symbols_by_ord_size		3614469	0		<			
ANR	3614591	Identifier	i		3614469	0					
ANR	3614592	PtrMemberAccess	bin -> symbols_by_ord_size		3614469	1					
ANR	3614593	Identifier	bin		3614469	0					
ANR	3614594	Identifier	symbols_by_ord_size		3614469	1					
ANR	3614595	PostIncDecOperationExpression	i ++	3650:42:110073:110075	3614469	2	True				
ANR	3614596	Identifier	i		3614469	0					
ANR	3614597	IncDec	++		3614469	1					
ANR	3614598	CompoundStatement		20:47:414:414	3614469	3					
ANR	3614599	ExpressionStatement	r_bin_symbol_free ( bin -> symbols_by_ord [ i ] )	3651:3:110083:110125	3614469	0	True				
ANR	3614600	CallExpression	r_bin_symbol_free ( bin -> symbols_by_ord [ i ] )		3614469	0					
ANR	3614601	Callee	r_bin_symbol_free		3614469	0					
ANR	3614602	Identifier	r_bin_symbol_free		3614469	0					
ANR	3614603	ArgumentList	bin -> symbols_by_ord [ i ]		3614469	1					
ANR	3614604	Argument	bin -> symbols_by_ord [ i ]		3614469	0					
ANR	3614605	ArrayIndexing	bin -> symbols_by_ord [ i ]		3614469	0					
ANR	3614606	PtrMemberAccess	bin -> symbols_by_ord		3614469	0					
ANR	3614607	Identifier	bin		3614469	0					
ANR	3614608	Identifier	symbols_by_ord		3614469	1					
ANR	3614609	Identifier	i		3614469	1					
ANR	3614610	ExpressionStatement	free ( bin -> symbols_by_ord )	3653:2:110133:110159	3614469	1	True				
ANR	3614611	CallExpression	free ( bin -> symbols_by_ord )		3614469	0					
ANR	3614612	Callee	free		3614469	0					
ANR	3614613	Identifier	free		3614469	0					
ANR	3614614	ArgumentList	bin -> symbols_by_ord		3614469	1					
ANR	3614615	Argument	bin -> symbols_by_ord		3614469	0					
ANR	3614616	PtrMemberAccess	bin -> symbols_by_ord		3614469	0					
ANR	3614617	Identifier	bin		3614469	0					
ANR	3614618	Identifier	symbols_by_ord		3614469	1					
ANR	3614619	ExpressionStatement	r_buf_free ( bin -> b )	3655:1:110165:110184	3614469	10	True				
ANR	3614620	CallExpression	r_buf_free ( bin -> b )		3614469	0					
ANR	3614621	Callee	r_buf_free		3614469	0					
ANR	3614622	Identifier	r_buf_free		3614469	0					
ANR	3614623	ArgumentList	bin -> b		3614469	1					
ANR	3614624	Argument	bin -> b		3614469	0					
ANR	3614625	PtrMemberAccess	bin -> b		3614469	0					
ANR	3614626	Identifier	bin		3614469	0					
ANR	3614627	Identifier	b		3614469	1					
ANR	3614628	IfStatement	if ( bin -> g_symbols != bin -> phdr_symbols )		3614469	11					
ANR	3614629	Condition	bin -> g_symbols != bin -> phdr_symbols	3656:5:110191:110225	3614469	0	True				
ANR	3614630	EqualityExpression	bin -> g_symbols != bin -> phdr_symbols		3614469	0		!=			
ANR	3614631	PtrMemberAccess	bin -> g_symbols		3614469	0					
ANR	3614632	Identifier	bin		3614469	0					
ANR	3614633	Identifier	g_symbols		3614469	1					
ANR	3614634	PtrMemberAccess	bin -> phdr_symbols		3614469	1					
ANR	3614635	Identifier	bin		3614469	0					
ANR	3614636	Identifier	phdr_symbols		3614469	1					
ANR	3614637	CompoundStatement		26:42:564:564	3614469	1					
ANR	3614638	ExpressionStatement	R_FREE ( bin -> phdr_symbols )	3657:2:110232:110258	3614469	0	True				
ANR	3614639	CallExpression	R_FREE ( bin -> phdr_symbols )		3614469	0					
ANR	3614640	Callee	R_FREE		3614469	0					
ANR	3614641	Identifier	R_FREE		3614469	0					
ANR	3614642	ArgumentList	bin -> phdr_symbols		3614469	1					
ANR	3614643	Argument	bin -> phdr_symbols		3614469	0					
ANR	3614644	PtrMemberAccess	bin -> phdr_symbols		3614469	0					
ANR	3614645	Identifier	bin		3614469	0					
ANR	3614646	Identifier	phdr_symbols		3614469	1					
ANR	3614647	IfStatement	if ( bin -> g_imports != bin -> phdr_imports )		3614469	12					
ANR	3614648	Condition	bin -> g_imports != bin -> phdr_imports	3659:5:110268:110302	3614469	0	True				
ANR	3614649	EqualityExpression	bin -> g_imports != bin -> phdr_imports		3614469	0		!=			
ANR	3614650	PtrMemberAccess	bin -> g_imports		3614469	0					
ANR	3614651	Identifier	bin		3614469	0					
ANR	3614652	Identifier	g_imports		3614469	1					
ANR	3614653	PtrMemberAccess	bin -> phdr_imports		3614469	1					
ANR	3614654	Identifier	bin		3614469	0					
ANR	3614655	Identifier	phdr_imports		3614469	1					
ANR	3614656	CompoundStatement		29:42:641:641	3614469	1					
ANR	3614657	ExpressionStatement	R_FREE ( bin -> phdr_imports )	3660:2:110309:110335	3614469	0	True				
ANR	3614658	CallExpression	R_FREE ( bin -> phdr_imports )		3614469	0					
ANR	3614659	Callee	R_FREE		3614469	0					
ANR	3614660	Identifier	R_FREE		3614469	0					
ANR	3614661	ArgumentList	bin -> phdr_imports		3614469	1					
ANR	3614662	Argument	bin -> phdr_imports		3614469	0					
ANR	3614663	PtrMemberAccess	bin -> phdr_imports		3614469	0					
ANR	3614664	Identifier	bin		3614469	0					
ANR	3614665	Identifier	phdr_imports		3614469	1					
ANR	3614666	ExpressionStatement	R_FREE ( bin -> g_sections )	3662:1:110341:110365	3614469	13	True				
ANR	3614667	CallExpression	R_FREE ( bin -> g_sections )		3614469	0					
ANR	3614668	Callee	R_FREE		3614469	0					
ANR	3614669	Identifier	R_FREE		3614469	0					
ANR	3614670	ArgumentList	bin -> g_sections		3614469	1					
ANR	3614671	Argument	bin -> g_sections		3614469	0					
ANR	3614672	PtrMemberAccess	bin -> g_sections		3614469	0					
ANR	3614673	Identifier	bin		3614469	0					
ANR	3614674	Identifier	g_sections		3614469	1					
ANR	3614675	ExpressionStatement	R_FREE ( bin -> g_symbols )	3663:1:110368:110391	3614469	14	True				
ANR	3614676	CallExpression	R_FREE ( bin -> g_symbols )		3614469	0					
ANR	3614677	Callee	R_FREE		3614469	0					
ANR	3614678	Identifier	R_FREE		3614469	0					
ANR	3614679	ArgumentList	bin -> g_symbols		3614469	1					
ANR	3614680	Argument	bin -> g_symbols		3614469	0					
ANR	3614681	PtrMemberAccess	bin -> g_symbols		3614469	0					
ANR	3614682	Identifier	bin		3614469	0					
ANR	3614683	Identifier	g_symbols		3614469	1					
ANR	3614684	ExpressionStatement	R_FREE ( bin -> g_imports )	3664:1:110394:110417	3614469	15	True				
ANR	3614685	CallExpression	R_FREE ( bin -> g_imports )		3614469	0					
ANR	3614686	Callee	R_FREE		3614469	0					
ANR	3614687	Identifier	R_FREE		3614469	0					
ANR	3614688	ArgumentList	bin -> g_imports		3614469	1					
ANR	3614689	Argument	bin -> g_imports		3614469	0					
ANR	3614690	PtrMemberAccess	bin -> g_imports		3614469	0					
ANR	3614691	Identifier	bin		3614469	0					
ANR	3614692	Identifier	g_imports		3614469	1					
ANR	3614693	ExpressionStatement	ht_up_free ( bin -> rel_cache )	3665:1:110420:110447	3614469	16	True				
ANR	3614694	CallExpression	ht_up_free ( bin -> rel_cache )		3614469	0					
ANR	3614695	Callee	ht_up_free		3614469	0					
ANR	3614696	Identifier	ht_up_free		3614469	0					
ANR	3614697	ArgumentList	bin -> rel_cache		3614469	1					
ANR	3614698	Argument	bin -> rel_cache		3614469	0					
ANR	3614699	PtrMemberAccess	bin -> rel_cache		3614469	0					
ANR	3614700	Identifier	bin		3614469	0					
ANR	3614701	Identifier	rel_cache		3614469	1					
ANR	3614702	ExpressionStatement	bin -> rel_cache = NULL	3666:1:110450:110471	3614469	17	True				
ANR	3614703	AssignmentExpression	bin -> rel_cache = NULL		3614469	0		=			
ANR	3614704	PtrMemberAccess	bin -> rel_cache		3614469	0					
ANR	3614705	Identifier	bin		3614469	0					
ANR	3614706	Identifier	rel_cache		3614469	1					
ANR	3614707	Identifier	NULL		3614469	1					
ANR	3614708	ExpressionStatement	free ( bin )	3667:1:110474:110484	3614469	18	True				
ANR	3614709	CallExpression	free ( bin )		3614469	0					
ANR	3614710	Callee	free		3614469	0					
ANR	3614711	Identifier	free		3614469	0					
ANR	3614712	ArgumentList	bin		3614469	1					
ANR	3614713	Argument	bin		3614469	0					
ANR	3614714	Identifier	bin		3614469	0					
ANR	3614715	ReturnType	void Elf_		3614469	1					
ANR	3614716	Identifier	( r_bin_elf_free )		3614469	2					
ANR	3614717	Identifier	r_bin_elf_free		3614469	3					
ANR	3614718	ParameterList	ELFOBJ * bin		3614469	4					
ANR	3614719	Parameter	ELFOBJ * bin	3631:26:109650:109660	3614469	0	True				
ANR	3614720	ParameterType	ELFOBJ *		3614469	0					
ANR	3614721	Identifier	bin		3614469	1					
ANR	3614722	CFGEntryNode	ENTRY		3614469		True				
ANR	3614723	CFGExitNode	EXIT		3614469		True				
ANR	3614724	Symbol	bin -> b		3614469						
ANR	3614725	Symbol	bin		3614469						
ANR	3614726	Symbol	bin -> shstrtab		3614469						
ANR	3614727	Symbol	bin -> phdr		3614469						
ANR	3614728	Symbol	* bin		3614469						
ANR	3614729	Symbol	bin -> g_sections		3614469						
ANR	3614730	Symbol	bin -> symbols_by_ord		3614469						
ANR	3614731	Symbol	bin -> g_imports		3614469						
ANR	3614732	Symbol	bin -> imports_by_ord_size		3614469						
ANR	3614733	Symbol	bin -> rel_cache		3614469						
ANR	3614734	Symbol	* * bin		3614469						
ANR	3614735	Symbol	bin -> strtab		3614469						
ANR	3614736	Symbol	bin -> dynstr		3614469						
ANR	3614737	Symbol	bin -> symbols_by_ord_size		3614469						
ANR	3614738	Symbol	bin -> imports_by_ord		3614469						
ANR	3614739	Symbol	bin -> dyn_buf		3614469						
ANR	3614740	Symbol	NULL		3614469						
ANR	3614741	Symbol	i		3614469						
ANR	3614742	Symbol	* bin -> symbols_by_ord		3614469						
ANR	3614743	Symbol	bin -> shdr		3614469						
ANR	3614744	Symbol	* bin -> imports_by_ord		3614469						
ANR	3614745	Symbol	bin -> g_symbols		3614469						
ANR	3614746	Symbol	* i		3614469						
ANR	3614747	Symbol	bin -> phdr_imports		3614469						
ANR	3614748	Symbol	bin -> phdr_symbols		3614469						
ANR	3614749	Function	r_bin_elf_new_buf	3670:8:110497:110804							
ANR	3614750	FunctionDef	"r_bin_elf_new_buf (RBuffer * buf , bool verbose)"		3614749	0					
ANR	3614751	CompoundStatement		3670:60:110549:110804	3614749	0					
ANR	3614752	IdentifierDeclStatement	ELFOBJ * bin = R_NEW0 ( ELFOBJ ) ;	3671:1:110552:110581	3614749	0	True				
ANR	3614753	IdentifierDecl	* bin = R_NEW0 ( ELFOBJ )		3614749	0					
ANR	3614754	IdentifierDeclType	ELFOBJ *		3614749	0					
ANR	3614755	Identifier	bin		3614749	1					
ANR	3614756	AssignmentExpression	* bin = R_NEW0 ( ELFOBJ )		3614749	2		=			
ANR	3614757	Identifier	bin		3614749	0					
ANR	3614758	CallExpression	R_NEW0 ( ELFOBJ )		3614749	1					
ANR	3614759	Callee	R_NEW0		3614749	0					
ANR	3614760	Identifier	R_NEW0		3614749	0					
ANR	3614761	ArgumentList	ELFOBJ		3614749	1					
ANR	3614762	Argument	ELFOBJ		3614749	0					
ANR	3614763	Identifier	ELFOBJ		3614749	0					
ANR	3614764	IfStatement	if ( bin )		3614749	1					
ANR	3614765	Condition	bin	3672:5:110588:110590	3614749	0	True				
ANR	3614766	Identifier	bin		3614749	0					
ANR	3614767	CompoundStatement		3:10:43:43	3614749	1					
ANR	3614768	ExpressionStatement	bin -> kv = sdb_new0 ( )	3673:2:110597:110618	3614749	0	True				
ANR	3614769	AssignmentExpression	bin -> kv = sdb_new0 ( )		3614749	0		=			
ANR	3614770	PtrMemberAccess	bin -> kv		3614749	0					
ANR	3614771	Identifier	bin		3614749	0					
ANR	3614772	Identifier	kv		3614749	1					
ANR	3614773	CallExpression	sdb_new0 ( )		3614749	1					
ANR	3614774	Callee	sdb_new0		3614749	0					
ANR	3614775	Identifier	sdb_new0		3614749	0					
ANR	3614776	ArgumentList			3614749	1					
ANR	3614777	ExpressionStatement	bin -> size = ( ut32 ) r_buf_size ( buf )	3674:2:110622:110656	3614749	1	True				
ANR	3614778	AssignmentExpression	bin -> size = ( ut32 ) r_buf_size ( buf )		3614749	0		=			
ANR	3614779	PtrMemberAccess	bin -> size		3614749	0					
ANR	3614780	Identifier	bin		3614749	0					
ANR	3614781	Identifier	size		3614749	1					
ANR	3614782	CastExpression	( ut32 ) r_buf_size ( buf )		3614749	1					
ANR	3614783	CastTarget	ut32		3614749	0					
ANR	3614784	CallExpression	r_buf_size ( buf )		3614749	1					
ANR	3614785	Callee	r_buf_size		3614749	0					
ANR	3614786	Identifier	r_buf_size		3614749	0					
ANR	3614787	ArgumentList	buf		3614749	1					
ANR	3614788	Argument	buf		3614749	0					
ANR	3614789	Identifier	buf		3614749	0					
ANR	3614790	ExpressionStatement	bin -> verbose = verbose	3675:2:110660:110682	3614749	2	True				
ANR	3614791	AssignmentExpression	bin -> verbose = verbose		3614749	0		=			
ANR	3614792	PtrMemberAccess	bin -> verbose		3614749	0					
ANR	3614793	Identifier	bin		3614749	0					
ANR	3614794	Identifier	verbose		3614749	1					
ANR	3614795	Identifier	verbose		3614749	1					
ANR	3614796	ExpressionStatement	bin -> b = r_buf_ref ( buf )	3676:2:110686:110710	3614749	3	True				
ANR	3614797	AssignmentExpression	bin -> b = r_buf_ref ( buf )		3614749	0		=			
ANR	3614798	PtrMemberAccess	bin -> b		3614749	0					
ANR	3614799	Identifier	bin		3614749	0					
ANR	3614800	Identifier	b		3614749	1					
ANR	3614801	CallExpression	r_buf_ref ( buf )		3614749	1					
ANR	3614802	Callee	r_buf_ref		3614749	0					
ANR	3614803	Identifier	r_buf_ref		3614749	0					
ANR	3614804	ArgumentList	buf		3614749	1					
ANR	3614805	Argument	buf		3614749	0					
ANR	3614806	Identifier	buf		3614749	0					
ANR	3614807	IfStatement	if ( ! elf_init ( bin ) )		3614749	4					
ANR	3614808	Condition	! elf_init ( bin )	3677:6:110718:110732	3614749	0	True				
ANR	3614809	UnaryOperationExpression	! elf_init ( bin )		3614749	0					
ANR	3614810	UnaryOperator	!		3614749	0					
ANR	3614811	CallExpression	elf_init ( bin )		3614749	1					
ANR	3614812	Callee	elf_init		3614749	0					
ANR	3614813	Identifier	elf_init		3614749	0					
ANR	3614814	ArgumentList	bin		3614749	1					
ANR	3614815	Argument	bin		3614749	0					
ANR	3614816	Identifier	bin		3614749	0					
ANR	3614817	CompoundStatement		8:23:185:185	3614749	1					
ANR	3614818	ExpressionStatement	Elf_ ( r_bin_elf_free ) ( bin )	3678:3:110740:110766	3614749	0	True				
ANR	3614819	CallExpression	Elf_ ( r_bin_elf_free ) ( bin )		3614749	0					
ANR	3614820	Callee	Elf_ ( r_bin_elf_free )		3614749	0					
ANR	3614821	CallExpression	Elf_ ( r_bin_elf_free )		3614749	0					
ANR	3614822	Callee	Elf_		3614749	0					
ANR	3614823	Identifier	Elf_		3614749	0					
ANR	3614824	ArgumentList	r_bin_elf_free		3614749	1					
ANR	3614825	Argument	r_bin_elf_free		3614749	0					
ANR	3614826	Identifier	r_bin_elf_free		3614749	0					
ANR	3614827	ArgumentList	bin		3614749	1					
ANR	3614828	Argument	bin		3614749	0					
ANR	3614829	Identifier	bin		3614749	0					
ANR	3614830	ReturnStatement	return NULL ;	3679:3:110771:110782	3614749	1	True				
ANR	3614831	Identifier	NULL		3614749	0					
ANR	3614832	ReturnStatement	return bin ;	3682:1:110792:110802	3614749	2	True				
ANR	3614833	Identifier	bin		3614749	0					
ANR	3614834	ReturnType	Elf_		3614749	1					
ANR	3614835	Identifier	( r_bin_elf_new_buf )		3614749	2					
ANR	3614836	Identifier	r_bin_elf_new_buf		3614749	3					
ANR	3614837	ParameterList	"RBuffer * buf , bool verbose"		3614749	4					
ANR	3614838	Parameter	RBuffer * buf	3670:32:110521:110532	3614749	0	True				
ANR	3614839	ParameterType	RBuffer *		3614749	0					
ANR	3614840	Identifier	buf		3614749	1					
ANR	3614841	Parameter	bool verbose	3670:46:110535:110546	3614749	1	True				
ANR	3614842	ParameterType	bool		3614749	0					
ANR	3614843	Identifier	verbose		3614749	1					
ANR	3614844	CFGEntryNode	ENTRY		3614749		True				
ANR	3614845	CFGExitNode	EXIT		3614749		True				
ANR	3614846	Symbol	sdb_new0		3614749						
ANR	3614847	Symbol	bin -> size		3614749						
ANR	3614848	Symbol	bin -> b		3614749						
ANR	3614849	Symbol	elf_init		3614749						
ANR	3614850	Symbol	NULL		3614749						
ANR	3614851	Symbol	bin		3614749						
ANR	3614852	Symbol	r_buf_ref		3614749						
ANR	3614853	Symbol	r_bin_elf_free		3614749						
ANR	3614854	Symbol	bin -> kv		3614749						
ANR	3614855	Symbol	* bin		3614749						
ANR	3614856	Symbol	verbose		3614749						
ANR	3614857	Symbol	R_NEW0		3614749						
ANR	3614858	Symbol	buf		3614749						
ANR	3614859	Symbol	bin -> verbose		3614749						
ANR	3614860	Symbol	ELFOBJ		3614749						
ANR	3614861	Symbol	r_buf_size		3614749						
ANR	3614862	Function	r_bin_elf_p2v	3694:0:111118:111568							
ANR	3614863	FunctionDef	"r_bin_elf_p2v (ELFOBJ * bin , ut64 paddr)"		3614862	0					
ANR	3614864	CompoundStatement		3694:51:111169:111568	3614862	0					
ANR	3614865	IdentifierDeclStatement	int i ;	3695:1:111172:111177	3614862	0	True				
ANR	3614866	IdentifierDecl	i		3614862	0					
ANR	3614867	IdentifierDeclType	int		3614862	0					
ANR	3614868	Identifier	i		3614862	1					
ANR	3614869	ExpressionStatement	"r_return_val_if_fail ( bin , 0 )"	3697:1:111181:111210	3614862	1	True				
ANR	3614870	CallExpression	"r_return_val_if_fail ( bin , 0 )"		3614862	0					
ANR	3614871	Callee	r_return_val_if_fail		3614862	0					
ANR	3614872	Identifier	r_return_val_if_fail		3614862	0					
ANR	3614873	ArgumentList	bin		3614862	1					
ANR	3614874	Argument	bin		3614862	0					
ANR	3614875	Identifier	bin		3614862	0					
ANR	3614876	Argument	0		3614862	1					
ANR	3614877	PrimaryExpression	0		3614862	0					
ANR	3614878	IfStatement	if ( ! bin -> phdr )		3614862	2					
ANR	3614879	Condition	! bin -> phdr	3698:5:111217:111226	3614862	0	True				
ANR	3614880	UnaryOperationExpression	! bin -> phdr		3614862	0					
ANR	3614881	UnaryOperator	!		3614862	0					
ANR	3614882	PtrMemberAccess	bin -> phdr		3614862	1					
ANR	3614883	Identifier	bin		3614862	0					
ANR	3614884	Identifier	phdr		3614862	1					
ANR	3614885	CompoundStatement		5:17:59:59	3614862	1					
ANR	3614886	IfStatement	if ( is_bin_etrel ( bin ) )		3614862	0					
ANR	3614887	Condition	is_bin_etrel ( bin )	3699:6:111237:111254	3614862	0	True				
ANR	3614888	CallExpression	is_bin_etrel ( bin )		3614862	0					
ANR	3614889	Callee	is_bin_etrel		3614862	0					
ANR	3614890	Identifier	is_bin_etrel		3614862	0					
ANR	3614891	ArgumentList	bin		3614862	1					
ANR	3614892	Argument	bin		3614862	0					
ANR	3614893	Identifier	bin		3614862	0					
ANR	3614894	CompoundStatement		6:26:87:87	3614862	1					
ANR	3614895	ReturnStatement	return bin -> baddr + paddr ;	3700:3:111262:111287	3614862	0	True				
ANR	3614896	AdditiveExpression	bin -> baddr + paddr		3614862	0		+			
ANR	3614897	PtrMemberAccess	bin -> baddr		3614862	0					
ANR	3614898	Identifier	bin		3614862	0					
ANR	3614899	Identifier	baddr		3614862	1					
ANR	3614900	Identifier	paddr		3614862	1					
ANR	3614901	ReturnStatement	return paddr ;	3702:2:111295:111307	3614862	1	True				
ANR	3614902	Identifier	paddr		3614862	0					
ANR	3614903	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		3614862	3					
ANR	3614904	ForInit	i = 0 ;	3704:6:111318:111323	3614862	0	True				
ANR	3614905	AssignmentExpression	i = 0		3614862	0		=			
ANR	3614906	Identifier	i		3614862	0					
ANR	3614907	PrimaryExpression	0		3614862	1					
ANR	3614908	Condition	i < bin -> ehdr . e_phnum	3704:13:111325:111345	3614862	1	True				
ANR	3614909	RelationalExpression	i < bin -> ehdr . e_phnum		3614862	0		<			
ANR	3614910	Identifier	i		3614862	0					
ANR	3614911	MemberAccess	bin -> ehdr . e_phnum		3614862	1					
ANR	3614912	PtrMemberAccess	bin -> ehdr		3614862	0					
ANR	3614913	Identifier	bin		3614862	0					
ANR	3614914	Identifier	ehdr		3614862	1					
ANR	3614915	Identifier	e_phnum		3614862	1					
ANR	3614916	UnaryExpression	++ i	3704:36:111348:111350	3614862	2	True				
ANR	3614917	IncDec	++		3614862	0					
ANR	3614918	Identifier	i		3614862	1					
ANR	3614919	CompoundStatement		11:41:183:183	3614862	3					
ANR	3614920	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3705:2:111357:111386	3614862	0	True				
ANR	3614921	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		3614862	0		=			
ANR	3614922	MultiplicativeExpression	Elf_ ( Phdr ) * p		3614862	0		*			
ANR	3614923	CallExpression	Elf_ ( Phdr )		3614862	0					
ANR	3614924	Callee	Elf_		3614862	0					
ANR	3614925	Identifier	Elf_		3614862	0					
ANR	3614926	ArgumentList	Phdr		3614862	1					
ANR	3614927	Argument	Phdr		3614862	0					
ANR	3614928	Identifier	Phdr		3614862	0					
ANR	3614929	Identifier	p		3614862	1					
ANR	3614930	UnaryOperationExpression	& bin -> phdr [ i ]		3614862	1					
ANR	3614931	UnaryOperator	&		3614862	0					
ANR	3614932	ArrayIndexing	bin -> phdr [ i ]		3614862	1					
ANR	3614933	PtrMemberAccess	bin -> phdr		3614862	0					
ANR	3614934	Identifier	bin		3614862	0					
ANR	3614935	Identifier	phdr		3614862	1					
ANR	3614936	Identifier	i		3614862	1					
ANR	3614937	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr ) )"		3614862	1					
ANR	3614938	Condition	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"	3706:6:111394:111439	3614862	0	True				
ANR	3614939	AndExpression	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"		3614862	0		&&			
ANR	3614940	EqualityExpression	p -> p_type == PT_LOAD		3614862	0		==			
ANR	3614941	PtrMemberAccess	p -> p_type		3614862	0					
ANR	3614942	Identifier	p		3614862	0					
ANR	3614943	Identifier	p_type		3614862	1					
ANR	3614944	Identifier	PT_LOAD		3614862	1					
ANR	3614945	CallExpression	"is_in_pphdr ( p , paddr )"		3614862	1					
ANR	3614946	Callee	is_in_pphdr		3614862	0					
ANR	3614947	Identifier	is_in_pphdr		3614862	0					
ANR	3614948	ArgumentList	p		3614862	1					
ANR	3614949	Argument	p		3614862	0					
ANR	3614950	Identifier	p		3614862	0					
ANR	3614951	Argument	paddr		3614862	1					
ANR	3614952	Identifier	paddr		3614862	0					
ANR	3614953	CompoundStatement		13:54:272:272	3614862	1					
ANR	3614954	IfStatement	if ( ! p -> p_vaddr && ! p -> p_offset )		3614862	0					
ANR	3614955	Condition	! p -> p_vaddr && ! p -> p_offset	3707:7:111451:111477	3614862	0	True				
ANR	3614956	AndExpression	! p -> p_vaddr && ! p -> p_offset		3614862	0		&&			
ANR	3614957	UnaryOperationExpression	! p -> p_vaddr		3614862	0					
ANR	3614958	UnaryOperator	!		3614862	0					
ANR	3614959	PtrMemberAccess	p -> p_vaddr		3614862	1					
ANR	3614960	Identifier	p		3614862	0					
ANR	3614961	Identifier	p_vaddr		3614862	1					
ANR	3614962	UnaryOperationExpression	! p -> p_offset		3614862	1					
ANR	3614963	UnaryOperator	!		3614862	0					
ANR	3614964	PtrMemberAccess	p -> p_offset		3614862	1					
ANR	3614965	Identifier	p		3614862	0					
ANR	3614966	Identifier	p_offset		3614862	1					
ANR	3614967	CompoundStatement		14:36:310:310	3614862	1					
ANR	3614968	ContinueStatement	continue ;	3708:4:111486:111494	3614862	0	True				
ANR	3614969	ReturnStatement	return p -> p_vaddr + paddr - p -> p_offset ;	3710:3:111504:111543	3614862	1	True				
ANR	3614970	AdditiveExpression	p -> p_vaddr + paddr - p -> p_offset		3614862	0		+			
ANR	3614971	PtrMemberAccess	p -> p_vaddr		3614862	0					
ANR	3614972	Identifier	p		3614862	0					
ANR	3614973	Identifier	p_vaddr		3614862	1					
ANR	3614974	AdditiveExpression	paddr - p -> p_offset		3614862	1		-			
ANR	3614975	Identifier	paddr		3614862	0					
ANR	3614976	PtrMemberAccess	p -> p_offset		3614862	1					
ANR	3614977	Identifier	p		3614862	0					
ANR	3614978	Identifier	p_offset		3614862	1					
ANR	3614979	ReturnStatement	return paddr ;	3714:1:111554:111566	3614862	4	True				
ANR	3614980	Identifier	paddr		3614862	0					
ANR	3614981	ReturnType	ut64 Elf_		3614862	1					
ANR	3614982	Identifier	( r_bin_elf_p2v )		3614862	2					
ANR	3614983	Identifier	r_bin_elf_p2v		3614862	3					
ANR	3614984	ParameterList	"ELFOBJ * bin , ut64 paddr"		3614862	4					
ANR	3614985	Parameter	ELFOBJ * bin	3694:26:111144:111154	3614862	0	True				
ANR	3614986	ParameterType	ELFOBJ *		3614862	0					
ANR	3614987	Identifier	bin		3614862	1					
ANR	3614988	Parameter	ut64 paddr	3694:39:111157:111166	3614862	1	True				
ANR	3614989	ParameterType	ut64		3614862	0					
ANR	3614990	Identifier	paddr		3614862	1					
ANR	3614991	CFGEntryNode	ENTRY		3614862		True				
ANR	3614992	CFGExitNode	EXIT		3614862		True				
ANR	3614993	Symbol	Elf_		3614862						
ANR	3614994	Symbol	Phdr		3614862						
ANR	3614995	Symbol	is_in_pphdr		3614862						
ANR	3614996	Symbol	bin		3614862						
ANR	3614997	Symbol	i		3614862						
ANR	3614998	Symbol	bin -> phdr		3614862						
ANR	3614999	Symbol	PT_LOAD		3614862						
ANR	3615000	Symbol	is_bin_etrel		3614862						
ANR	3615001	Symbol	bin -> ehdr . e_phnum		3614862						
ANR	3615002	Symbol	p -> p_vaddr		3614862						
ANR	3615003	Symbol	p -> p_type		3614862						
ANR	3615004	Symbol	bin -> baddr		3614862						
ANR	3615005	Symbol	* bin		3614862						
ANR	3615006	Symbol	p		3614862						
ANR	3615007	Symbol	paddr		3614862						
ANR	3615008	Symbol	bin -> ehdr		3614862						
ANR	3615009	Symbol	* p		3614862						
ANR	3615010	Symbol	p -> p_offset		3614862						
ANR	3615011	Function	r_bin_elf_v2p	3718:0:111644:112093							
ANR	3615012	FunctionDef	"r_bin_elf_v2p (ELFOBJ * bin , ut64 vaddr)"		3615011	0					
ANR	3615013	CompoundStatement		3718:51:111695:112093	3615011	0					
ANR	3615014	IdentifierDeclStatement	int i ;	3719:1:111698:111703	3615011	0	True				
ANR	3615015	IdentifierDecl	i		3615011	0					
ANR	3615016	IdentifierDeclType	int		3615011	0					
ANR	3615017	Identifier	i		3615011	1					
ANR	3615018	ExpressionStatement	"r_return_val_if_fail ( bin , 0 )"	3721:1:111707:111736	3615011	1	True				
ANR	3615019	CallExpression	"r_return_val_if_fail ( bin , 0 )"		3615011	0					
ANR	3615020	Callee	r_return_val_if_fail		3615011	0					
ANR	3615021	Identifier	r_return_val_if_fail		3615011	0					
ANR	3615022	ArgumentList	bin		3615011	1					
ANR	3615023	Argument	bin		3615011	0					
ANR	3615024	Identifier	bin		3615011	0					
ANR	3615025	Argument	0		3615011	1					
ANR	3615026	PrimaryExpression	0		3615011	0					
ANR	3615027	IfStatement	if ( ! bin -> phdr )		3615011	2					
ANR	3615028	Condition	! bin -> phdr	3722:5:111743:111752	3615011	0	True				
ANR	3615029	UnaryOperationExpression	! bin -> phdr		3615011	0					
ANR	3615030	UnaryOperator	!		3615011	0					
ANR	3615031	PtrMemberAccess	bin -> phdr		3615011	1					
ANR	3615032	Identifier	bin		3615011	0					
ANR	3615033	Identifier	phdr		3615011	1					
ANR	3615034	CompoundStatement		5:17:59:59	3615011	1					
ANR	3615035	IfStatement	if ( is_bin_etrel ( bin ) )		3615011	0					
ANR	3615036	Condition	is_bin_etrel ( bin )	3723:6:111763:111780	3615011	0	True				
ANR	3615037	CallExpression	is_bin_etrel ( bin )		3615011	0					
ANR	3615038	Callee	is_bin_etrel		3615011	0					
ANR	3615039	Identifier	is_bin_etrel		3615011	0					
ANR	3615040	ArgumentList	bin		3615011	1					
ANR	3615041	Argument	bin		3615011	0					
ANR	3615042	Identifier	bin		3615011	0					
ANR	3615043	CompoundStatement		6:26:87:87	3615011	1					
ANR	3615044	ReturnStatement	return vaddr - bin -> baddr ;	3724:3:111788:111813	3615011	0	True				
ANR	3615045	AdditiveExpression	vaddr - bin -> baddr		3615011	0		-			
ANR	3615046	Identifier	vaddr		3615011	0					
ANR	3615047	PtrMemberAccess	bin -> baddr		3615011	1					
ANR	3615048	Identifier	bin		3615011	0					
ANR	3615049	Identifier	baddr		3615011	1					
ANR	3615050	ReturnStatement	return vaddr ;	3726:2:111821:111833	3615011	1	True				
ANR	3615051	Identifier	vaddr		3615011	0					
ANR	3615052	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		3615011	3					
ANR	3615053	ForInit	i = 0 ;	3728:6:111844:111849	3615011	0	True				
ANR	3615054	AssignmentExpression	i = 0		3615011	0		=			
ANR	3615055	Identifier	i		3615011	0					
ANR	3615056	PrimaryExpression	0		3615011	1					
ANR	3615057	Condition	i < bin -> ehdr . e_phnum	3728:13:111851:111871	3615011	1	True				
ANR	3615058	RelationalExpression	i < bin -> ehdr . e_phnum		3615011	0		<			
ANR	3615059	Identifier	i		3615011	0					
ANR	3615060	MemberAccess	bin -> ehdr . e_phnum		3615011	1					
ANR	3615061	PtrMemberAccess	bin -> ehdr		3615011	0					
ANR	3615062	Identifier	bin		3615011	0					
ANR	3615063	Identifier	ehdr		3615011	1					
ANR	3615064	Identifier	e_phnum		3615011	1					
ANR	3615065	UnaryExpression	++ i	3728:36:111874:111876	3615011	2	True				
ANR	3615066	IncDec	++		3615011	0					
ANR	3615067	Identifier	i		3615011	1					
ANR	3615068	CompoundStatement		11:41:183:183	3615011	3					
ANR	3615069	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3729:2:111883:111912	3615011	0	True				
ANR	3615070	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		3615011	0		=			
ANR	3615071	MultiplicativeExpression	Elf_ ( Phdr ) * p		3615011	0		*			
ANR	3615072	CallExpression	Elf_ ( Phdr )		3615011	0					
ANR	3615073	Callee	Elf_		3615011	0					
ANR	3615074	Identifier	Elf_		3615011	0					
ANR	3615075	ArgumentList	Phdr		3615011	1					
ANR	3615076	Argument	Phdr		3615011	0					
ANR	3615077	Identifier	Phdr		3615011	0					
ANR	3615078	Identifier	p		3615011	1					
ANR	3615079	UnaryOperationExpression	& bin -> phdr [ i ]		3615011	1					
ANR	3615080	UnaryOperator	&		3615011	0					
ANR	3615081	ArrayIndexing	bin -> phdr [ i ]		3615011	1					
ANR	3615082	PtrMemberAccess	bin -> phdr		3615011	0					
ANR	3615083	Identifier	bin		3615011	0					
ANR	3615084	Identifier	phdr		3615011	1					
ANR	3615085	Identifier	i		3615011	1					
ANR	3615086	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr ) )"		3615011	1					
ANR	3615087	Condition	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"	3730:6:111920:111965	3615011	0	True				
ANR	3615088	AndExpression	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"		3615011	0		&&			
ANR	3615089	EqualityExpression	p -> p_type == PT_LOAD		3615011	0		==			
ANR	3615090	PtrMemberAccess	p -> p_type		3615011	0					
ANR	3615091	Identifier	p		3615011	0					
ANR	3615092	Identifier	p_type		3615011	1					
ANR	3615093	Identifier	PT_LOAD		3615011	1					
ANR	3615094	CallExpression	"is_in_vphdr ( p , vaddr )"		3615011	1					
ANR	3615095	Callee	is_in_vphdr		3615011	0					
ANR	3615096	Identifier	is_in_vphdr		3615011	0					
ANR	3615097	ArgumentList	p		3615011	1					
ANR	3615098	Argument	p		3615011	0					
ANR	3615099	Identifier	p		3615011	0					
ANR	3615100	Argument	vaddr		3615011	1					
ANR	3615101	Identifier	vaddr		3615011	0					
ANR	3615102	CompoundStatement		13:54:272:272	3615011	1					
ANR	3615103	IfStatement	if ( ! p -> p_offset && ! p -> p_vaddr )		3615011	0					
ANR	3615104	Condition	! p -> p_offset && ! p -> p_vaddr	3731:7:111977:112003	3615011	0	True				
ANR	3615105	AndExpression	! p -> p_offset && ! p -> p_vaddr		3615011	0		&&			
ANR	3615106	UnaryOperationExpression	! p -> p_offset		3615011	0					
ANR	3615107	UnaryOperator	!		3615011	0					
ANR	3615108	PtrMemberAccess	p -> p_offset		3615011	1					
ANR	3615109	Identifier	p		3615011	0					
ANR	3615110	Identifier	p_offset		3615011	1					
ANR	3615111	UnaryOperationExpression	! p -> p_vaddr		3615011	1					
ANR	3615112	UnaryOperator	!		3615011	0					
ANR	3615113	PtrMemberAccess	p -> p_vaddr		3615011	1					
ANR	3615114	Identifier	p		3615011	0					
ANR	3615115	Identifier	p_vaddr		3615011	1					
ANR	3615116	CompoundStatement		14:36:310:310	3615011	1					
ANR	3615117	ContinueStatement	continue ;	3732:4:112012:112020	3615011	0	True				
ANR	3615118	ReturnStatement	return p -> p_offset + vaddr - p -> p_vaddr ;	3734:3:112030:112069	3615011	1	True				
ANR	3615119	AdditiveExpression	p -> p_offset + vaddr - p -> p_vaddr		3615011	0		+			
ANR	3615120	PtrMemberAccess	p -> p_offset		3615011	0					
ANR	3615121	Identifier	p		3615011	0					
ANR	3615122	Identifier	p_offset		3615011	1					
ANR	3615123	AdditiveExpression	vaddr - p -> p_vaddr		3615011	1		-			
ANR	3615124	Identifier	vaddr		3615011	0					
ANR	3615125	PtrMemberAccess	p -> p_vaddr		3615011	1					
ANR	3615126	Identifier	p		3615011	0					
ANR	3615127	Identifier	p_vaddr		3615011	1					
ANR	3615128	ReturnStatement	return vaddr ;	3737:1:112079:112091	3615011	4	True				
ANR	3615129	Identifier	vaddr		3615011	0					
ANR	3615130	ReturnType	ut64 Elf_		3615011	1					
ANR	3615131	Identifier	( r_bin_elf_v2p )		3615011	2					
ANR	3615132	Identifier	r_bin_elf_v2p		3615011	3					
ANR	3615133	ParameterList	"ELFOBJ * bin , ut64 vaddr"		3615011	4					
ANR	3615134	Parameter	ELFOBJ * bin	3718:26:111670:111680	3615011	0	True				
ANR	3615135	ParameterType	ELFOBJ *		3615011	0					
ANR	3615136	Identifier	bin		3615011	1					
ANR	3615137	Parameter	ut64 vaddr	3718:39:111683:111692	3615011	1	True				
ANR	3615138	ParameterType	ut64		3615011	0					
ANR	3615139	Identifier	vaddr		3615011	1					
ANR	3615140	CFGEntryNode	ENTRY		3615011		True				
ANR	3615141	CFGExitNode	EXIT		3615011		True				
ANR	3615142	Symbol	Elf_		3615011						
ANR	3615143	Symbol	Phdr		3615011						
ANR	3615144	Symbol	bin		3615011						
ANR	3615145	Symbol	i		3615011						
ANR	3615146	Symbol	bin -> phdr		3615011						
ANR	3615147	Symbol	PT_LOAD		3615011						
ANR	3615148	Symbol	is_bin_etrel		3615011						
ANR	3615149	Symbol	vaddr		3615011						
ANR	3615150	Symbol	bin -> ehdr . e_phnum		3615011						
ANR	3615151	Symbol	p -> p_vaddr		3615011						
ANR	3615152	Symbol	p -> p_type		3615011						
ANR	3615153	Symbol	bin -> baddr		3615011						
ANR	3615154	Symbol	* bin		3615011						
ANR	3615155	Symbol	p		3615011						
ANR	3615156	Symbol	bin -> ehdr		3615011						
ANR	3615157	Symbol	* p		3615011						
ANR	3615158	Symbol	p -> p_offset		3615011						
ANR	3615159	Symbol	is_in_vphdr		3615011						
ANR	3615160	Function	r_bin_elf_p2v_new	3742:0:112206:112616							
ANR	3615161	FunctionDef	"r_bin_elf_p2v_new (ELFOBJ * bin , ut64 paddr)"		3615160	0					
ANR	3615162	CompoundStatement		3742:55:112261:112616	3615160	0					
ANR	3615163	IdentifierDeclStatement	int i ;	3743:1:112264:112269	3615160	0	True				
ANR	3615164	IdentifierDecl	i		3615160	0					
ANR	3615165	IdentifierDeclType	int		3615160	0					
ANR	3615166	Identifier	i		3615160	1					
ANR	3615167	ExpressionStatement	"r_return_val_if_fail ( bin , UT64_MAX )"	3745:1:112273:112309	3615160	1	True				
ANR	3615168	CallExpression	"r_return_val_if_fail ( bin , UT64_MAX )"		3615160	0					
ANR	3615169	Callee	r_return_val_if_fail		3615160	0					
ANR	3615170	Identifier	r_return_val_if_fail		3615160	0					
ANR	3615171	ArgumentList	bin		3615160	1					
ANR	3615172	Argument	bin		3615160	0					
ANR	3615173	Identifier	bin		3615160	0					
ANR	3615174	Argument	UT64_MAX		3615160	1					
ANR	3615175	Identifier	UT64_MAX		3615160	0					
ANR	3615176	IfStatement	if ( ! bin -> phdr )		3615160	2					
ANR	3615177	Condition	! bin -> phdr	3746:5:112316:112325	3615160	0	True				
ANR	3615178	UnaryOperationExpression	! bin -> phdr		3615160	0					
ANR	3615179	UnaryOperator	!		3615160	0					
ANR	3615180	PtrMemberAccess	bin -> phdr		3615160	1					
ANR	3615181	Identifier	bin		3615160	0					
ANR	3615182	Identifier	phdr		3615160	1					
ANR	3615183	CompoundStatement		5:17:66:66	3615160	1					
ANR	3615184	IfStatement	if ( is_bin_etrel ( bin ) )		3615160	0					
ANR	3615185	Condition	is_bin_etrel ( bin )	3747:6:112336:112353	3615160	0	True				
ANR	3615186	CallExpression	is_bin_etrel ( bin )		3615160	0					
ANR	3615187	Callee	is_bin_etrel		3615160	0					
ANR	3615188	Identifier	is_bin_etrel		3615160	0					
ANR	3615189	ArgumentList	bin		3615160	1					
ANR	3615190	Argument	bin		3615160	0					
ANR	3615191	Identifier	bin		3615160	0					
ANR	3615192	CompoundStatement		6:26:94:94	3615160	1					
ANR	3615193	ReturnStatement	return bin -> baddr + paddr ;	3748:3:112361:112386	3615160	0	True				
ANR	3615194	AdditiveExpression	bin -> baddr + paddr		3615160	0		+			
ANR	3615195	PtrMemberAccess	bin -> baddr		3615160	0					
ANR	3615196	Identifier	bin		3615160	0					
ANR	3615197	Identifier	baddr		3615160	1					
ANR	3615198	Identifier	paddr		3615160	1					
ANR	3615199	ReturnStatement	return UT64_MAX ;	3750:2:112394:112409	3615160	1	True				
ANR	3615200	Identifier	UT64_MAX		3615160	0					
ANR	3615201	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		3615160	3					
ANR	3615202	ForInit	i = 0 ;	3752:6:112420:112425	3615160	0	True				
ANR	3615203	AssignmentExpression	i = 0		3615160	0		=			
ANR	3615204	Identifier	i		3615160	0					
ANR	3615205	PrimaryExpression	0		3615160	1					
ANR	3615206	Condition	i < bin -> ehdr . e_phnum	3752:13:112427:112447	3615160	1	True				
ANR	3615207	RelationalExpression	i < bin -> ehdr . e_phnum		3615160	0		<			
ANR	3615208	Identifier	i		3615160	0					
ANR	3615209	MemberAccess	bin -> ehdr . e_phnum		3615160	1					
ANR	3615210	PtrMemberAccess	bin -> ehdr		3615160	0					
ANR	3615211	Identifier	bin		3615160	0					
ANR	3615212	Identifier	ehdr		3615160	1					
ANR	3615213	Identifier	e_phnum		3615160	1					
ANR	3615214	UnaryExpression	++ i	3752:36:112450:112452	3615160	2	True				
ANR	3615215	IncDec	++		3615160	0					
ANR	3615216	Identifier	i		3615160	1					
ANR	3615217	CompoundStatement		11:41:193:193	3615160	3					
ANR	3615218	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3753:2:112459:112488	3615160	0	True				
ANR	3615219	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		3615160	0		=			
ANR	3615220	MultiplicativeExpression	Elf_ ( Phdr ) * p		3615160	0		*			
ANR	3615221	CallExpression	Elf_ ( Phdr )		3615160	0					
ANR	3615222	Callee	Elf_		3615160	0					
ANR	3615223	Identifier	Elf_		3615160	0					
ANR	3615224	ArgumentList	Phdr		3615160	1					
ANR	3615225	Argument	Phdr		3615160	0					
ANR	3615226	Identifier	Phdr		3615160	0					
ANR	3615227	Identifier	p		3615160	1					
ANR	3615228	UnaryOperationExpression	& bin -> phdr [ i ]		3615160	1					
ANR	3615229	UnaryOperator	&		3615160	0					
ANR	3615230	ArrayIndexing	bin -> phdr [ i ]		3615160	1					
ANR	3615231	PtrMemberAccess	bin -> phdr		3615160	0					
ANR	3615232	Identifier	bin		3615160	0					
ANR	3615233	Identifier	phdr		3615160	1					
ANR	3615234	Identifier	i		3615160	1					
ANR	3615235	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr ) )"		3615160	1					
ANR	3615236	Condition	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"	3754:6:112496:112541	3615160	0	True				
ANR	3615237	AndExpression	"p -> p_type == PT_LOAD && is_in_pphdr ( p , paddr )"		3615160	0		&&			
ANR	3615238	EqualityExpression	p -> p_type == PT_LOAD		3615160	0		==			
ANR	3615239	PtrMemberAccess	p -> p_type		3615160	0					
ANR	3615240	Identifier	p		3615160	0					
ANR	3615241	Identifier	p_type		3615160	1					
ANR	3615242	Identifier	PT_LOAD		3615160	1					
ANR	3615243	CallExpression	"is_in_pphdr ( p , paddr )"		3615160	1					
ANR	3615244	Callee	is_in_pphdr		3615160	0					
ANR	3615245	Identifier	is_in_pphdr		3615160	0					
ANR	3615246	ArgumentList	p		3615160	1					
ANR	3615247	Argument	p		3615160	0					
ANR	3615248	Identifier	p		3615160	0					
ANR	3615249	Argument	paddr		3615160	1					
ANR	3615250	Identifier	paddr		3615160	0					
ANR	3615251	CompoundStatement		13:54:282:282	3615160	1					
ANR	3615252	ReturnStatement	return p -> p_vaddr + paddr - p -> p_offset ;	3755:3:112549:112588	3615160	0	True				
ANR	3615253	AdditiveExpression	p -> p_vaddr + paddr - p -> p_offset		3615160	0		+			
ANR	3615254	PtrMemberAccess	p -> p_vaddr		3615160	0					
ANR	3615255	Identifier	p		3615160	0					
ANR	3615256	Identifier	p_vaddr		3615160	1					
ANR	3615257	AdditiveExpression	paddr - p -> p_offset		3615160	1		-			
ANR	3615258	Identifier	paddr		3615160	0					
ANR	3615259	PtrMemberAccess	p -> p_offset		3615160	1					
ANR	3615260	Identifier	p		3615160	0					
ANR	3615261	Identifier	p_offset		3615160	1					
ANR	3615262	ReturnStatement	return UT64_MAX ;	3759:1:112599:112614	3615160	4	True				
ANR	3615263	Identifier	UT64_MAX		3615160	0					
ANR	3615264	ReturnType	ut64 Elf_		3615160	1					
ANR	3615265	Identifier	( r_bin_elf_p2v_new )		3615160	2					
ANR	3615266	Identifier	r_bin_elf_p2v_new		3615160	3					
ANR	3615267	ParameterList	"ELFOBJ * bin , ut64 paddr"		3615160	4					
ANR	3615268	Parameter	ELFOBJ * bin	3742:30:112236:112246	3615160	0	True				
ANR	3615269	ParameterType	ELFOBJ *		3615160	0					
ANR	3615270	Identifier	bin		3615160	1					
ANR	3615271	Parameter	ut64 paddr	3742:43:112249:112258	3615160	1	True				
ANR	3615272	ParameterType	ut64		3615160	0					
ANR	3615273	Identifier	paddr		3615160	1					
ANR	3615274	CFGEntryNode	ENTRY		3615160		True				
ANR	3615275	CFGExitNode	EXIT		3615160		True				
ANR	3615276	Symbol	Elf_		3615160						
ANR	3615277	Symbol	Phdr		3615160						
ANR	3615278	Symbol	is_in_pphdr		3615160						
ANR	3615279	Symbol	bin		3615160						
ANR	3615280	Symbol	i		3615160						
ANR	3615281	Symbol	bin -> phdr		3615160						
ANR	3615282	Symbol	PT_LOAD		3615160						
ANR	3615283	Symbol	is_bin_etrel		3615160						
ANR	3615284	Symbol	bin -> ehdr . e_phnum		3615160						
ANR	3615285	Symbol	p -> p_vaddr		3615160						
ANR	3615286	Symbol	p -> p_type		3615160						
ANR	3615287	Symbol	bin -> baddr		3615160						
ANR	3615288	Symbol	* bin		3615160						
ANR	3615289	Symbol	p		3615160						
ANR	3615290	Symbol	paddr		3615160						
ANR	3615291	Symbol	bin -> ehdr		3615160						
ANR	3615292	Symbol	* p		3615160						
ANR	3615293	Symbol	UT64_MAX		3615160						
ANR	3615294	Symbol	p -> p_offset		3615160						
ANR	3615295	Function	r_bin_elf_v2p_new	3764:0:112738:113147							
ANR	3615296	FunctionDef	"r_bin_elf_v2p_new (ELFOBJ * bin , ut64 vaddr)"		3615295	0					
ANR	3615297	CompoundStatement		3764:55:112793:113147	3615295	0					
ANR	3615298	IdentifierDeclStatement	int i ;	3765:1:112796:112801	3615295	0	True				
ANR	3615299	IdentifierDecl	i		3615295	0					
ANR	3615300	IdentifierDeclType	int		3615295	0					
ANR	3615301	Identifier	i		3615295	1					
ANR	3615302	ExpressionStatement	"r_return_val_if_fail ( bin , UT64_MAX )"	3767:1:112805:112841	3615295	1	True				
ANR	3615303	CallExpression	"r_return_val_if_fail ( bin , UT64_MAX )"		3615295	0					
ANR	3615304	Callee	r_return_val_if_fail		3615295	0					
ANR	3615305	Identifier	r_return_val_if_fail		3615295	0					
ANR	3615306	ArgumentList	bin		3615295	1					
ANR	3615307	Argument	bin		3615295	0					
ANR	3615308	Identifier	bin		3615295	0					
ANR	3615309	Argument	UT64_MAX		3615295	1					
ANR	3615310	Identifier	UT64_MAX		3615295	0					
ANR	3615311	IfStatement	if ( ! bin -> phdr )		3615295	2					
ANR	3615312	Condition	! bin -> phdr	3768:5:112848:112857	3615295	0	True				
ANR	3615313	UnaryOperationExpression	! bin -> phdr		3615295	0					
ANR	3615314	UnaryOperator	!		3615295	0					
ANR	3615315	PtrMemberAccess	bin -> phdr		3615295	1					
ANR	3615316	Identifier	bin		3615295	0					
ANR	3615317	Identifier	phdr		3615295	1					
ANR	3615318	CompoundStatement		5:17:66:66	3615295	1					
ANR	3615319	IfStatement	if ( is_bin_etrel ( bin ) )		3615295	0					
ANR	3615320	Condition	is_bin_etrel ( bin )	3769:6:112868:112885	3615295	0	True				
ANR	3615321	CallExpression	is_bin_etrel ( bin )		3615295	0					
ANR	3615322	Callee	is_bin_etrel		3615295	0					
ANR	3615323	Identifier	is_bin_etrel		3615295	0					
ANR	3615324	ArgumentList	bin		3615295	1					
ANR	3615325	Argument	bin		3615295	0					
ANR	3615326	Identifier	bin		3615295	0					
ANR	3615327	CompoundStatement		6:26:94:94	3615295	1					
ANR	3615328	ReturnStatement	return vaddr - bin -> baddr ;	3770:3:112893:112918	3615295	0	True				
ANR	3615329	AdditiveExpression	vaddr - bin -> baddr		3615295	0		-			
ANR	3615330	Identifier	vaddr		3615295	0					
ANR	3615331	PtrMemberAccess	bin -> baddr		3615295	1					
ANR	3615332	Identifier	bin		3615295	0					
ANR	3615333	Identifier	baddr		3615295	1					
ANR	3615334	ReturnStatement	return UT64_MAX ;	3772:2:112926:112941	3615295	1	True				
ANR	3615335	Identifier	UT64_MAX		3615295	0					
ANR	3615336	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; ++ i )		3615295	3					
ANR	3615337	ForInit	i = 0 ;	3774:6:112952:112957	3615295	0	True				
ANR	3615338	AssignmentExpression	i = 0		3615295	0		=			
ANR	3615339	Identifier	i		3615295	0					
ANR	3615340	PrimaryExpression	0		3615295	1					
ANR	3615341	Condition	i < bin -> ehdr . e_phnum	3774:13:112959:112979	3615295	1	True				
ANR	3615342	RelationalExpression	i < bin -> ehdr . e_phnum		3615295	0		<			
ANR	3615343	Identifier	i		3615295	0					
ANR	3615344	MemberAccess	bin -> ehdr . e_phnum		3615295	1					
ANR	3615345	PtrMemberAccess	bin -> ehdr		3615295	0					
ANR	3615346	Identifier	bin		3615295	0					
ANR	3615347	Identifier	ehdr		3615295	1					
ANR	3615348	Identifier	e_phnum		3615295	1					
ANR	3615349	UnaryExpression	++ i	3774:36:112982:112984	3615295	2	True				
ANR	3615350	IncDec	++		3615295	0					
ANR	3615351	Identifier	i		3615295	1					
ANR	3615352	CompoundStatement		11:41:193:193	3615295	3					
ANR	3615353	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]	3775:2:112991:113020	3615295	0	True				
ANR	3615354	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ i ]		3615295	0		=			
ANR	3615355	MultiplicativeExpression	Elf_ ( Phdr ) * p		3615295	0		*			
ANR	3615356	CallExpression	Elf_ ( Phdr )		3615295	0					
ANR	3615357	Callee	Elf_		3615295	0					
ANR	3615358	Identifier	Elf_		3615295	0					
ANR	3615359	ArgumentList	Phdr		3615295	1					
ANR	3615360	Argument	Phdr		3615295	0					
ANR	3615361	Identifier	Phdr		3615295	0					
ANR	3615362	Identifier	p		3615295	1					
ANR	3615363	UnaryOperationExpression	& bin -> phdr [ i ]		3615295	1					
ANR	3615364	UnaryOperator	&		3615295	0					
ANR	3615365	ArrayIndexing	bin -> phdr [ i ]		3615295	1					
ANR	3615366	PtrMemberAccess	bin -> phdr		3615295	0					
ANR	3615367	Identifier	bin		3615295	0					
ANR	3615368	Identifier	phdr		3615295	1					
ANR	3615369	Identifier	i		3615295	1					
ANR	3615370	IfStatement	"if ( p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr ) )"		3615295	1					
ANR	3615371	Condition	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"	3776:6:113028:113073	3615295	0	True				
ANR	3615372	AndExpression	"p -> p_type == PT_LOAD && is_in_vphdr ( p , vaddr )"		3615295	0		&&			
ANR	3615373	EqualityExpression	p -> p_type == PT_LOAD		3615295	0		==			
ANR	3615374	PtrMemberAccess	p -> p_type		3615295	0					
ANR	3615375	Identifier	p		3615295	0					
ANR	3615376	Identifier	p_type		3615295	1					
ANR	3615377	Identifier	PT_LOAD		3615295	1					
ANR	3615378	CallExpression	"is_in_vphdr ( p , vaddr )"		3615295	1					
ANR	3615379	Callee	is_in_vphdr		3615295	0					
ANR	3615380	Identifier	is_in_vphdr		3615295	0					
ANR	3615381	ArgumentList	p		3615295	1					
ANR	3615382	Argument	p		3615295	0					
ANR	3615383	Identifier	p		3615295	0					
ANR	3615384	Argument	vaddr		3615295	1					
ANR	3615385	Identifier	vaddr		3615295	0					
ANR	3615386	CompoundStatement		13:54:282:282	3615295	1					
ANR	3615387	ReturnStatement	return p -> p_offset + vaddr - p -> p_vaddr ;	3777:3:113081:113120	3615295	0	True				
ANR	3615388	AdditiveExpression	p -> p_offset + vaddr - p -> p_vaddr		3615295	0		+			
ANR	3615389	PtrMemberAccess	p -> p_offset		3615295	0					
ANR	3615390	Identifier	p		3615295	0					
ANR	3615391	Identifier	p_offset		3615295	1					
ANR	3615392	AdditiveExpression	vaddr - p -> p_vaddr		3615295	1		-			
ANR	3615393	Identifier	vaddr		3615295	0					
ANR	3615394	PtrMemberAccess	p -> p_vaddr		3615295	1					
ANR	3615395	Identifier	p		3615295	0					
ANR	3615396	Identifier	p_vaddr		3615295	1					
ANR	3615397	ReturnStatement	return UT64_MAX ;	3780:1:113130:113145	3615295	4	True				
ANR	3615398	Identifier	UT64_MAX		3615295	0					
ANR	3615399	ReturnType	ut64 Elf_		3615295	1					
ANR	3615400	Identifier	( r_bin_elf_v2p_new )		3615295	2					
ANR	3615401	Identifier	r_bin_elf_v2p_new		3615295	3					
ANR	3615402	ParameterList	"ELFOBJ * bin , ut64 vaddr"		3615295	4					
ANR	3615403	Parameter	ELFOBJ * bin	3764:30:112768:112778	3615295	0	True				
ANR	3615404	ParameterType	ELFOBJ *		3615295	0					
ANR	3615405	Identifier	bin		3615295	1					
ANR	3615406	Parameter	ut64 vaddr	3764:43:112781:112790	3615295	1	True				
ANR	3615407	ParameterType	ut64		3615295	0					
ANR	3615408	Identifier	vaddr		3615295	1					
ANR	3615409	CFGEntryNode	ENTRY		3615295		True				
ANR	3615410	CFGExitNode	EXIT		3615295		True				
ANR	3615411	Symbol	Elf_		3615295						
ANR	3615412	Symbol	Phdr		3615295						
ANR	3615413	Symbol	bin		3615295						
ANR	3615414	Symbol	i		3615295						
ANR	3615415	Symbol	bin -> phdr		3615295						
ANR	3615416	Symbol	PT_LOAD		3615295						
ANR	3615417	Symbol	is_bin_etrel		3615295						
ANR	3615418	Symbol	vaddr		3615295						
ANR	3615419	Symbol	bin -> ehdr . e_phnum		3615295						
ANR	3615420	Symbol	p -> p_vaddr		3615295						
ANR	3615421	Symbol	p -> p_type		3615295						
ANR	3615422	Symbol	bin -> baddr		3615295						
ANR	3615423	Symbol	* bin		3615295						
ANR	3615424	Symbol	p		3615295						
ANR	3615425	Symbol	bin -> ehdr		3615295						
ANR	3615426	Symbol	* p		3615295						
ANR	3615427	Symbol	UT64_MAX		3615295						
ANR	3615428	Symbol	p -> p_offset		3615295						
ANR	3615429	Symbol	is_in_vphdr		3615295						
ANR	3615430	Function	get_nt_file_maps	3783:0:113150:115464							
ANR	3615431	FunctionDef	"get_nt_file_maps (ELFOBJ * bin , RList * core_maps)"		3615430	0					
ANR	3615432	CompoundStatement		3783:61:113211:115464	3615430	0					
ANR	3615433	IdentifierDeclStatement	ut16 ph_num = bin -> ehdr . e_phnum ;	3784:1:113214:113245	3615430	0	True				
ANR	3615434	IdentifierDecl	ph_num = bin -> ehdr . e_phnum		3615430	0					
ANR	3615435	IdentifierDeclType	ut16		3615430	0					
ANR	3615436	Identifier	ph_num		3615430	1					
ANR	3615437	AssignmentExpression	ph_num = bin -> ehdr . e_phnum		3615430	2		=			
ANR	3615438	Identifier	ph_num		3615430	0					
ANR	3615439	MemberAccess	bin -> ehdr . e_phnum		3615430	1					
ANR	3615440	PtrMemberAccess	bin -> ehdr		3615430	0					
ANR	3615441	Identifier	bin		3615430	0					
ANR	3615442	Identifier	ehdr		3615430	1					
ANR	3615443	Identifier	e_phnum		3615430	1					
ANR	3615444	IdentifierDeclStatement	ut16 ph ;	3785:1:113248:113255	3615430	1	True				
ANR	3615445	IdentifierDecl	ph		3615430	0					
ANR	3615446	IdentifierDeclType	ut16		3615430	0					
ANR	3615447	Identifier	ph		3615430	1					
ANR	3615448	ForStatement	for ( ph = 0 ; ph < ph_num ; ph ++ )		3615430	2					
ANR	3615449	ForInit	ph = 0 ;	3787:6:113264:113270	3615430	0	True				
ANR	3615450	AssignmentExpression	ph = 0		3615430	0		=			
ANR	3615451	Identifier	ph		3615430	0					
ANR	3615452	PrimaryExpression	0		3615430	1					
ANR	3615453	Condition	ph < ph_num	3787:14:113272:113282	3615430	1	True				
ANR	3615454	RelationalExpression	ph < ph_num		3615430	0		<			
ANR	3615455	Identifier	ph		3615430	0					
ANR	3615456	Identifier	ph_num		3615430	1					
ANR	3615457	PostIncDecOperationExpression	ph ++	3787:27:113285:113288	3615430	2	True				
ANR	3615458	Identifier	ph		3615430	0					
ANR	3615459	IncDec	++		3615430	1					
ANR	3615460	CompoundStatement		5:33:79:79	3615430	3					
ANR	3615461	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]	3788:2:113295:113325	3615430	0	True				
ANR	3615462	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]		3615430	0		=			
ANR	3615463	MultiplicativeExpression	Elf_ ( Phdr ) * p		3615430	0		*			
ANR	3615464	CallExpression	Elf_ ( Phdr )		3615430	0					
ANR	3615465	Callee	Elf_		3615430	0					
ANR	3615466	Identifier	Elf_		3615430	0					
ANR	3615467	ArgumentList	Phdr		3615430	1					
ANR	3615468	Argument	Phdr		3615430	0					
ANR	3615469	Identifier	Phdr		3615430	0					
ANR	3615470	Identifier	p		3615430	1					
ANR	3615471	UnaryOperationExpression	& bin -> phdr [ ph ]		3615430	1					
ANR	3615472	UnaryOperator	&		3615430	0					
ANR	3615473	ArrayIndexing	bin -> phdr [ ph ]		3615430	1					
ANR	3615474	PtrMemberAccess	bin -> phdr		3615430	0					
ANR	3615475	Identifier	bin		3615430	0					
ANR	3615476	Identifier	phdr		3615430	1					
ANR	3615477	Identifier	ph		3615430	1					
ANR	3615478	IfStatement	if ( p -> p_type == PT_NOTE )		3615430	1					
ANR	3615479	Condition	p -> p_type == PT_NOTE	3789:6:113333:113352	3615430	0	True				
ANR	3615480	EqualityExpression	p -> p_type == PT_NOTE		3615430	0		==			
ANR	3615481	PtrMemberAccess	p -> p_type		3615430	0					
ANR	3615482	Identifier	p		3615430	0					
ANR	3615483	Identifier	p_type		3615430	1					
ANR	3615484	Identifier	PT_NOTE		3615430	1					
ANR	3615485	CompoundStatement		54:3:1589:1604	3615430	1					
ANR	3615486	IdentifierDeclStatement	int bits = Elf_ ( r_bin_elf_get_bits ) ( bin ) ;	3790:3:113360:113400	3615430	0	True				
ANR	3615487	IdentifierDecl	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		3615430	0					
ANR	3615488	IdentifierDeclType	int		3615430	0					
ANR	3615489	Identifier	bits		3615430	1					
ANR	3615490	AssignmentExpression	bits = Elf_ ( r_bin_elf_get_bits ) ( bin )		3615430	2		=			
ANR	3615491	Identifier	bits		3615430	0					
ANR	3615492	CallExpression	Elf_ ( r_bin_elf_get_bits ) ( bin )		3615430	1					
ANR	3615493	Callee	Elf_ ( r_bin_elf_get_bits )		3615430	0					
ANR	3615494	CallExpression	Elf_ ( r_bin_elf_get_bits )		3615430	0					
ANR	3615495	Callee	Elf_		3615430	0					
ANR	3615496	Identifier	Elf_		3615430	0					
ANR	3615497	ArgumentList	r_bin_elf_get_bits		3615430	1					
ANR	3615498	Argument	r_bin_elf_get_bits		3615430	0					
ANR	3615499	Identifier	r_bin_elf_get_bits		3615430	0					
ANR	3615500	ArgumentList	bin		3615430	1					
ANR	3615501	Argument	bin		3615430	0					
ANR	3615502	Identifier	bin		3615430	0					
ANR	3615503	IdentifierDeclStatement	int elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr ) ;	3791:3:113405:113481	3615430	1	True				
ANR	3615504	IdentifierDecl	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		3615430	0					
ANR	3615505	IdentifierDeclType	int		3615430	0					
ANR	3615506	Identifier	elf_nhdr_size		3615430	1					
ANR	3615507	AssignmentExpression	elf_nhdr_size = ( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		3615430	2		=			
ANR	3615508	Identifier	elf_nhdr_size		3615430	0					
ANR	3615509	ConditionalExpression	( bits == 64 ) ? sizeof ( Elf64_Nhdr ) : sizeof ( Elf32_Nhdr )		3615430	1					
ANR	3615510	Condition	bits == 64		3615430	0					
ANR	3615511	EqualityExpression	bits == 64		3615430	0		==			
ANR	3615512	Identifier	bits		3615430	0					
ANR	3615513	PrimaryExpression	64		3615430	1					
ANR	3615514	SizeofExpression	sizeof ( Elf64_Nhdr )		3615430	1					
ANR	3615515	Sizeof	sizeof		3615430	0					
ANR	3615516	SizeofOperand	Elf64_Nhdr		3615430	1					
ANR	3615517	SizeofExpression	sizeof ( Elf32_Nhdr )		3615430	2					
ANR	3615518	Sizeof	sizeof		3615430	0					
ANR	3615519	SizeofOperand	Elf32_Nhdr		3615430	1					
ANR	3615520	IdentifierDeclStatement	int size_of = ( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 ) ;	3792:3:113486:113544	3615430	2	True				
ANR	3615521	IdentifierDecl	size_of = ( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 )		3615430	0					
ANR	3615522	IdentifierDeclType	int		3615430	0					
ANR	3615523	Identifier	size_of		3615430	1					
ANR	3615524	AssignmentExpression	size_of = ( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 )		3615430	2		=			
ANR	3615525	Identifier	size_of		3615430	0					
ANR	3615526	ConditionalExpression	( bits == 64 ) ? sizeof ( ut64 ) : sizeof ( ut32 )		3615430	1					
ANR	3615527	Condition	bits == 64		3615430	0					
ANR	3615528	EqualityExpression	bits == 64		3615430	0		==			
ANR	3615529	Identifier	bits		3615430	0					
ANR	3615530	PrimaryExpression	64		3615430	1					
ANR	3615531	SizeofExpression	sizeof ( ut64 )		3615430	1					
ANR	3615532	Sizeof	sizeof		3615430	0					
ANR	3615533	SizeofOperand	ut64		3615430	1					
ANR	3615534	SizeofExpression	sizeof ( ut32 )		3615430	2					
ANR	3615535	Sizeof	sizeof		3615430	0					
ANR	3615536	SizeofOperand	ut32		3615430	1					
ANR	3615537	IdentifierDeclStatement	"void * elf_nhdr = calloc ( elf_nhdr_size , 1 ) ;"	3793:3:113549:113591	3615430	3	True				
ANR	3615538	IdentifierDecl	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		3615430	0					
ANR	3615539	IdentifierDeclType	void *		3615430	0					
ANR	3615540	Identifier	elf_nhdr		3615430	1					
ANR	3615541	AssignmentExpression	"* elf_nhdr = calloc ( elf_nhdr_size , 1 )"		3615430	2		=			
ANR	3615542	Identifier	elf_nhdr		3615430	0					
ANR	3615543	CallExpression	"calloc ( elf_nhdr_size , 1 )"		3615430	1					
ANR	3615544	Callee	calloc		3615430	0					
ANR	3615545	Identifier	calloc		3615430	0					
ANR	3615546	ArgumentList	elf_nhdr_size		3615430	1					
ANR	3615547	Argument	elf_nhdr_size		3615430	0					
ANR	3615548	Identifier	elf_nhdr_size		3615430	0					
ANR	3615549	Argument	1		3615430	1					
ANR	3615550	PrimaryExpression	1		3615430	0					
ANR	3615551	IdentifierDeclStatement	ut64 offset = 0 ;	3794:3:113596:113611	3615430	4	True				
ANR	3615552	IdentifierDecl	offset = 0		3615430	0					
ANR	3615553	IdentifierDeclType	ut64		3615430	0					
ANR	3615554	Identifier	offset		3615430	1					
ANR	3615555	AssignmentExpression	offset = 0		3615430	2		=			
ANR	3615556	Identifier	offset		3615430	0					
ANR	3615557	PrimaryExpression	0		3615430	1					
ANR	3615558	IdentifierDeclStatement	bool found = false ;	3795:3:113616:113634	3615430	5	True				
ANR	3615559	IdentifierDecl	found = false		3615430	0					
ANR	3615560	IdentifierDeclType	bool		3615430	0					
ANR	3615561	Identifier	found		3615430	1					
ANR	3615562	AssignmentExpression	found = false		3615430	2		=			
ANR	3615563	Identifier	false		3615430	0					
ANR	3615564	Identifier	false		3615430	1					
ANR	3615565	WhileStatement	while ( ! found )		3615430	6					
ANR	3615566	Condition	! found	3797:10:113647:113652	3615430	0	True				
ANR	3615567	UnaryOperationExpression	! found		3615430	0					
ANR	3615568	UnaryOperator	!		3615430	0					
ANR	3615569	Identifier	found		3615430	1					
ANR	3615570	CompoundStatement		17:4:462:493	3615430	1					
ANR	3615571	IdentifierDeclStatement	int ret ;	3798:4:113661:113668	3615430	0	True				
ANR	3615572	IdentifierDecl	ret		3615430	0					
ANR	3615573	IdentifierDeclType	int		3615430	0					
ANR	3615574	Identifier	ret		3615430	1					
ANR	3615575	IdentifierDeclStatement	"ut32 n_descsz , n_namesz , n_type ;"	3799:4:113674:113705	3615430	1	True				
ANR	3615576	IdentifierDecl	n_descsz		3615430	0					
ANR	3615577	IdentifierDeclType	ut32		3615430	0					
ANR	3615578	Identifier	n_descsz		3615430	1					
ANR	3615579	IdentifierDecl	n_namesz		3615430	1					
ANR	3615580	IdentifierDeclType	ut32		3615430	0					
ANR	3615581	Identifier	n_namesz		3615430	1					
ANR	3615582	IdentifierDecl	n_type		3615430	2					
ANR	3615583	IdentifierDeclType	ut32		3615430	0					
ANR	3615584	Identifier	n_type		3615430	1					
ANR	3615585	ExpressionStatement	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ ph ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"	3800:4:113711:113809	3615430	2	True				
ANR	3615586	AssignmentExpression	"ret = r_buf_read_at ( bin -> b , bin -> phdr [ ph ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		3615430	0		=			
ANR	3615587	Identifier	ret		3615430	0					
ANR	3615588	CallExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ ph ] . p_offset + offset , elf_nhdr , elf_nhdr_size )"		3615430	1					
ANR	3615589	Callee	r_buf_read_at		3615430	0					
ANR	3615590	Identifier	r_buf_read_at		3615430	0					
ANR	3615591	ArgumentList	bin -> b		3615430	1					
ANR	3615592	Argument	bin -> b		3615430	0					
ANR	3615593	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615594	Identifier	bin		3615430	0					
ANR	3615595	Identifier	b		3615430	1					
ANR	3615596	Argument	bin -> phdr [ ph ] . p_offset + offset		3615430	1					
ANR	3615597	AdditiveExpression	bin -> phdr [ ph ] . p_offset + offset		3615430	0		+			
ANR	3615598	MemberAccess	bin -> phdr [ ph ] . p_offset		3615430	0					
ANR	3615599	ArrayIndexing	bin -> phdr [ ph ]		3615430	0					
ANR	3615600	PtrMemberAccess	bin -> phdr		3615430	0					
ANR	3615601	Identifier	bin		3615430	0					
ANR	3615602	Identifier	phdr		3615430	1					
ANR	3615603	Identifier	ph		3615430	1					
ANR	3615604	Identifier	p_offset		3615430	1					
ANR	3615605	Identifier	offset		3615430	1					
ANR	3615606	Argument	elf_nhdr		3615430	2					
ANR	3615607	Identifier	elf_nhdr		3615430	0					
ANR	3615608	Argument	elf_nhdr_size		3615430	3					
ANR	3615609	Identifier	elf_nhdr_size		3615430	0					
ANR	3615610	IfStatement	if ( ret != elf_nhdr_size )		3615430	3					
ANR	3615611	Condition	ret != elf_nhdr_size	3803:8:113819:113838	3615430	0	True				
ANR	3615612	EqualityExpression	ret != elf_nhdr_size		3615430	0		!=			
ANR	3615613	Identifier	ret		3615430	0					
ANR	3615614	Identifier	elf_nhdr_size		3615430	1					
ANR	3615615	CompoundStatement		21:30:629:629	3615430	1					
ANR	3615616	ExpressionStatement	"eprintf ( ""Cannot read more NOTES header from CORE\\n"" )"	3804:5:113848:113901	3615430	0	True				
ANR	3615617	CallExpression	"eprintf ( ""Cannot read more NOTES header from CORE\\n"" )"		3615430	0					
ANR	3615618	Callee	eprintf		3615430	0					
ANR	3615619	Identifier	eprintf		3615430	0					
ANR	3615620	ArgumentList	"""Cannot read more NOTES header from CORE\\n"""		3615430	1					
ANR	3615621	Argument	"""Cannot read more NOTES header from CORE\\n"""		3615430	0					
ANR	3615622	PrimaryExpression	"""Cannot read more NOTES header from CORE\\n"""		3615430	0					
ANR	3615623	ExpressionStatement	free ( elf_nhdr )	3805:5:113908:113923	3615430	1	True				
ANR	3615624	CallExpression	free ( elf_nhdr )		3615430	0					
ANR	3615625	Callee	free		3615430	0					
ANR	3615626	Identifier	free		3615430	0					
ANR	3615627	ArgumentList	elf_nhdr		3615430	1					
ANR	3615628	Argument	elf_nhdr		3615430	0					
ANR	3615629	Identifier	elf_nhdr		3615430	0					
ANR	3615630	GotoStatement	goto fail ;	3806:5:113930:113939	3615430	2	True				
ANR	3615631	Identifier	fail		3615430	0					
ANR	3615632	IfStatement	if ( bits == 64 )		3615430	4					
ANR	3615633	Condition	bits == 64	3808:8:113955:113964	3615430	0	True				
ANR	3615634	EqualityExpression	bits == 64		3615430	0		==			
ANR	3615635	Identifier	bits		3615430	0					
ANR	3615636	PrimaryExpression	64		3615430	1					
ANR	3615637	CompoundStatement		26:20:755:755	3615430	1					
ANR	3615638	ExpressionStatement	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )	3809:5:113974:114030	3615430	0	True				
ANR	3615639	AssignmentExpression	n_descsz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		3615430	0		=			
ANR	3615640	Identifier	n_descsz		3615430	0					
ANR	3615641	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz )		3615430	1					
ANR	3615642	Callee	round_up		3615430	0					
ANR	3615643	Identifier	round_up		3615430	0					
ANR	3615644	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3615430	1					
ANR	3615645	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3615430	0					
ANR	3615646	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3615430	0					
ANR	3615647	CastExpression	( Elf64_Nhdr * ) elf_nhdr		3615430	0					
ANR	3615648	CastTarget	Elf64_Nhdr *		3615430	0					
ANR	3615649	Identifier	elf_nhdr		3615430	1					
ANR	3615650	Identifier	n_descsz		3615430	1					
ANR	3615651	ExpressionStatement	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )	3810:5:114037:114093	3615430	1	True				
ANR	3615652	AssignmentExpression	n_namesz = round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		3615430	0		=			
ANR	3615653	Identifier	n_namesz		3615430	0					
ANR	3615654	CallExpression	round_up ( ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz )		3615430	1					
ANR	3615655	Callee	round_up		3615430	0					
ANR	3615656	Identifier	round_up		3615430	0					
ANR	3615657	ArgumentList	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3615430	1					
ANR	3615658	Argument	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3615430	0					
ANR	3615659	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3615430	0					
ANR	3615660	CastExpression	( Elf64_Nhdr * ) elf_nhdr		3615430	0					
ANR	3615661	CastTarget	Elf64_Nhdr *		3615430	0					
ANR	3615662	Identifier	elf_nhdr		3615430	1					
ANR	3615663	Identifier	n_namesz		3615430	1					
ANR	3615664	ExpressionStatement	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type	3811:5:114100:114141	3615430	2	True				
ANR	3615665	AssignmentExpression	n_type = ( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		3615430	0		=			
ANR	3615666	Identifier	n_type		3615430	0					
ANR	3615667	PtrMemberAccess	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		3615430	1					
ANR	3615668	CastExpression	( Elf64_Nhdr * ) elf_nhdr		3615430	0					
ANR	3615669	CastTarget	Elf64_Nhdr *		3615430	0					
ANR	3615670	Identifier	elf_nhdr		3615430	1					
ANR	3615671	Identifier	n_type		3615430	1					
ANR	3615672	ElseStatement	else		3615430	0					
ANR	3615673	CompoundStatement		30:11:942:942	3615430	0					
ANR	3615674	ExpressionStatement	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )	3813:5:114161:114217	3615430	0	True				
ANR	3615675	AssignmentExpression	n_descsz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		3615430	0		=			
ANR	3615676	Identifier	n_descsz		3615430	0					
ANR	3615677	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz )		3615430	1					
ANR	3615678	Callee	round_up		3615430	0					
ANR	3615679	Identifier	round_up		3615430	0					
ANR	3615680	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3615430	1					
ANR	3615681	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3615430	0					
ANR	3615682	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3615430	0					
ANR	3615683	CastExpression	( Elf32_Nhdr * ) elf_nhdr		3615430	0					
ANR	3615684	CastTarget	Elf32_Nhdr *		3615430	0					
ANR	3615685	Identifier	elf_nhdr		3615430	1					
ANR	3615686	Identifier	n_descsz		3615430	1					
ANR	3615687	ExpressionStatement	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )	3814:5:114224:114280	3615430	1	True				
ANR	3615688	AssignmentExpression	n_namesz = round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		3615430	0		=			
ANR	3615689	Identifier	n_namesz		3615430	0					
ANR	3615690	CallExpression	round_up ( ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz )		3615430	1					
ANR	3615691	Callee	round_up		3615430	0					
ANR	3615692	Identifier	round_up		3615430	0					
ANR	3615693	ArgumentList	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3615430	1					
ANR	3615694	Argument	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3615430	0					
ANR	3615695	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3615430	0					
ANR	3615696	CastExpression	( Elf32_Nhdr * ) elf_nhdr		3615430	0					
ANR	3615697	CastTarget	Elf32_Nhdr *		3615430	0					
ANR	3615698	Identifier	elf_nhdr		3615430	1					
ANR	3615699	Identifier	n_namesz		3615430	1					
ANR	3615700	ExpressionStatement	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type	3815:5:114287:114328	3615430	2	True				
ANR	3615701	AssignmentExpression	n_type = ( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		3615430	0		=			
ANR	3615702	Identifier	n_type		3615430	0					
ANR	3615703	PtrMemberAccess	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		3615430	1					
ANR	3615704	CastExpression	( Elf32_Nhdr * ) elf_nhdr		3615430	0					
ANR	3615705	CastTarget	Elf32_Nhdr *		3615430	0					
ANR	3615706	Identifier	elf_nhdr		3615430	1					
ANR	3615707	Identifier	n_type		3615430	1					
ANR	3615708	IfStatement	if ( n_type == NT_FILE )		3615430	5					
ANR	3615709	Condition	n_type == NT_FILE	3818:8:114345:114361	3615430	0	True				
ANR	3615710	EqualityExpression	n_type == NT_FILE		3615430	0		==			
ANR	3615711	Identifier	n_type		3615430	0					
ANR	3615712	Identifier	NT_FILE		3615430	1					
ANR	3615713	CompoundStatement		36:27:1152:1152	3615430	1					
ANR	3615714	ExpressionStatement	found = true	3819:5:114371:114383	3615430	0	True				
ANR	3615715	AssignmentExpression	found = true		3615430	0		=			
ANR	3615716	Identifier	found		3615430	0					
ANR	3615717	Identifier	true		3615430	1					
ANR	3615718	ExpressionStatement	offset += elf_nhdr_size + n_namesz	3820:5:114390:114424	3615430	1	True				
ANR	3615719	AssignmentExpression	offset += elf_nhdr_size + n_namesz		3615430	0		+=			
ANR	3615720	Identifier	offset		3615430	0					
ANR	3615721	AdditiveExpression	elf_nhdr_size + n_namesz		3615430	1		+			
ANR	3615722	Identifier	elf_nhdr_size		3615430	0					
ANR	3615723	Identifier	n_namesz		3615430	1					
ANR	3615724	ExpressionStatement	free ( elf_nhdr )	3821:5:114431:114446	3615430	2	True				
ANR	3615725	CallExpression	free ( elf_nhdr )		3615430	0					
ANR	3615726	Callee	free		3615430	0					
ANR	3615727	Identifier	free		3615430	0					
ANR	3615728	ArgumentList	elf_nhdr		3615430	1					
ANR	3615729	Argument	elf_nhdr		3615430	0					
ANR	3615730	Identifier	elf_nhdr		3615430	0					
ANR	3615731	ElseStatement	else		3615430	0					
ANR	3615732	CompoundStatement		40:11:1247:1247	3615430	0					
ANR	3615733	ExpressionStatement	offset += elf_nhdr_size + n_descsz + n_namesz	3823:5:114466:114511	3615430	0	True				
ANR	3615734	AssignmentExpression	offset += elf_nhdr_size + n_descsz + n_namesz		3615430	0		+=			
ANR	3615735	Identifier	offset		3615430	0					
ANR	3615736	AdditiveExpression	elf_nhdr_size + n_descsz + n_namesz		3615430	1		+			
ANR	3615737	Identifier	elf_nhdr_size		3615430	0					
ANR	3615738	AdditiveExpression	n_descsz + n_namesz		3615430	1		+			
ANR	3615739	Identifier	n_descsz		3615430	0					
ANR	3615740	Identifier	n_namesz		3615430	1					
ANR	3615741	IdentifierDeclStatement	ut64 i = bin -> phdr [ ph ] . p_offset + offset ;	3826:3:114527:114567	3615430	7	True				
ANR	3615742	IdentifierDecl	i = bin -> phdr [ ph ] . p_offset + offset		3615430	0					
ANR	3615743	IdentifierDeclType	ut64		3615430	0					
ANR	3615744	Identifier	i		3615430	1					
ANR	3615745	AssignmentExpression	i = bin -> phdr [ ph ] . p_offset + offset		3615430	2		=			
ANR	3615746	Identifier	i		3615430	0					
ANR	3615747	AdditiveExpression	bin -> phdr [ ph ] . p_offset + offset		3615430	1		+			
ANR	3615748	MemberAccess	bin -> phdr [ ph ] . p_offset		3615430	0					
ANR	3615749	ArrayIndexing	bin -> phdr [ ph ]		3615430	0					
ANR	3615750	PtrMemberAccess	bin -> phdr		3615430	0					
ANR	3615751	Identifier	bin		3615430	0					
ANR	3615752	Identifier	phdr		3615430	1					
ANR	3615753	Identifier	ph		3615430	1					
ANR	3615754	Identifier	p_offset		3615430	1					
ANR	3615755	Identifier	offset		3615430	1					
ANR	3615756	IdentifierDeclStatement	ut64 n_maps ;	3827:3:114572:114583	3615430	8	True				
ANR	3615757	IdentifierDecl	n_maps		3615430	0					
ANR	3615758	IdentifierDeclType	ut64		3615430	0					
ANR	3615759	Identifier	n_maps		3615430	1					
ANR	3615760	IfStatement	if ( bits == 64 )		3615430	9					
ANR	3615761	Condition	bits == 64	3828:7:114592:114601	3615430	0	True				
ANR	3615762	EqualityExpression	bits == 64		3615430	0		==			
ANR	3615763	Identifier	bits		3615430	0					
ANR	3615764	PrimaryExpression	64		3615430	1					
ANR	3615765	CompoundStatement		46:19:1392:1392	3615430	1					
ANR	3615766	ExpressionStatement	"n_maps = BREAD64 ( bin -> b , i )"	3829:4:114610:114638	3615430	0	True				
ANR	3615767	AssignmentExpression	"n_maps = BREAD64 ( bin -> b , i )"		3615430	0		=			
ANR	3615768	Identifier	n_maps		3615430	0					
ANR	3615769	CallExpression	"BREAD64 ( bin -> b , i )"		3615430	1					
ANR	3615770	Callee	BREAD64		3615430	0					
ANR	3615771	Identifier	BREAD64		3615430	0					
ANR	3615772	ArgumentList	bin -> b		3615430	1					
ANR	3615773	Argument	bin -> b		3615430	0					
ANR	3615774	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615775	Identifier	bin		3615430	0					
ANR	3615776	Identifier	b		3615430	1					
ANR	3615777	Argument	i		3615430	1					
ANR	3615778	Identifier	i		3615430	0					
ANR	3615779	ExpressionStatement	"( void ) BREAD64 ( bin -> b , i )"	3830:4:114644:114669	3615430	1	True				
ANR	3615780	CastExpression	"( void ) BREAD64 ( bin -> b , i )"		3615430	0					
ANR	3615781	CastTarget	void		3615430	0					
ANR	3615782	CallExpression	"BREAD64 ( bin -> b , i )"		3615430	1					
ANR	3615783	Callee	BREAD64		3615430	0					
ANR	3615784	Identifier	BREAD64		3615430	0					
ANR	3615785	ArgumentList	bin -> b		3615430	1					
ANR	3615786	Argument	bin -> b		3615430	0					
ANR	3615787	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615788	Identifier	bin		3615430	0					
ANR	3615789	Identifier	b		3615430	1					
ANR	3615790	Argument	i		3615430	1					
ANR	3615791	Identifier	i		3615430	0					
ANR	3615792	ElseStatement	else		3615430	0					
ANR	3615793	CompoundStatement		49:10:1469:1469	3615430	0					
ANR	3615794	ExpressionStatement	"n_maps = BREAD32 ( bin -> b , i )"	3832:4:114687:114715	3615430	0	True				
ANR	3615795	AssignmentExpression	"n_maps = BREAD32 ( bin -> b , i )"		3615430	0		=			
ANR	3615796	Identifier	n_maps		3615430	0					
ANR	3615797	CallExpression	"BREAD32 ( bin -> b , i )"		3615430	1					
ANR	3615798	Callee	BREAD32		3615430	0					
ANR	3615799	Identifier	BREAD32		3615430	0					
ANR	3615800	ArgumentList	bin -> b		3615430	1					
ANR	3615801	Argument	bin -> b		3615430	0					
ANR	3615802	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615803	Identifier	bin		3615430	0					
ANR	3615804	Identifier	b		3615430	1					
ANR	3615805	Argument	i		3615430	1					
ANR	3615806	Identifier	i		3615430	0					
ANR	3615807	ExpressionStatement	"( void ) BREAD32 ( bin -> b , i )"	3833:4:114721:114746	3615430	1	True				
ANR	3615808	CastExpression	"( void ) BREAD32 ( bin -> b , i )"		3615430	0					
ANR	3615809	CastTarget	void		3615430	0					
ANR	3615810	CallExpression	"BREAD32 ( bin -> b , i )"		3615430	1					
ANR	3615811	Callee	BREAD32		3615430	0					
ANR	3615812	Identifier	BREAD32		3615430	0					
ANR	3615813	ArgumentList	bin -> b		3615430	1					
ANR	3615814	Argument	bin -> b		3615430	0					
ANR	3615815	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615816	Identifier	bin		3615430	0					
ANR	3615817	Identifier	b		3615430	1					
ANR	3615818	Argument	i		3615430	1					
ANR	3615819	Identifier	i		3615430	0					
ANR	3615820	IdentifierDeclStatement	ut64 jump = ( ( size_of * 3 ) * n_maps ) + i ;	3835:3:114756:114796	3615430	10	True				
ANR	3615821	IdentifierDecl	jump = ( ( size_of * 3 ) * n_maps ) + i		3615430	0					
ANR	3615822	IdentifierDeclType	ut64		3615430	0					
ANR	3615823	Identifier	jump		3615430	1					
ANR	3615824	AssignmentExpression	jump = ( ( size_of * 3 ) * n_maps ) + i		3615430	2		=			
ANR	3615825	Identifier	jump		3615430	0					
ANR	3615826	AdditiveExpression	( ( size_of * 3 ) * n_maps ) + i		3615430	1		+			
ANR	3615827	MultiplicativeExpression	( size_of * 3 ) * n_maps		3615430	0		*			
ANR	3615828	MultiplicativeExpression	size_of * 3		3615430	0		*			
ANR	3615829	Identifier	size_of		3615430	0					
ANR	3615830	PrimaryExpression	3		3615430	1					
ANR	3615831	Identifier	n_maps		3615430	1					
ANR	3615832	Identifier	i		3615430	1					
ANR	3615833	IdentifierDeclStatement	int len_str = 0 ;	3836:3:114801:114816	3615430	11	True				
ANR	3615834	IdentifierDecl	len_str = 0		3615430	0					
ANR	3615835	IdentifierDeclType	int		3615430	0					
ANR	3615836	Identifier	len_str		3615430	1					
ANR	3615837	AssignmentExpression	len_str = 0		3615430	2		=			
ANR	3615838	Identifier	len_str		3615430	0					
ANR	3615839	PrimaryExpression	0		3615430	1					
ANR	3615840	WhileStatement	while ( n_maps > 0 )		3615430	12					
ANR	3615841	Condition	n_maps > 0	3837:10:114828:114837	3615430	0	True				
ANR	3615842	RelationalExpression	n_maps > 0		3615430	0		>			
ANR	3615843	Identifier	n_maps		3615430	0					
ANR	3615844	PrimaryExpression	0		3615430	1					
ANR	3615845	CompoundStatement		71:4:2007:2017	3615430	1					
ANR	3615846	IdentifierDeclStatement	ut64 addr ;	3838:4:114846:114855	3615430	0	True				
ANR	3615847	IdentifierDecl	addr		3615430	0					
ANR	3615848	IdentifierDeclType	ut64		3615430	0					
ANR	3615849	Identifier	addr		3615430	1					
ANR	3615850	IdentifierDeclStatement	char str [ 512 ] = { 0 } ;	3839:4:114861:114880	3615430	1	True				
ANR	3615851	IdentifierDecl	str [ 512 ] = { 0 }		3615430	0					
ANR	3615852	IdentifierDeclType	char [ 512 ]		3615430	0					
ANR	3615853	Identifier	str		3615430	1					
ANR	3615854	PrimaryExpression	512		3615430	2					
ANR	3615855	AssignmentExpression	str [ 512 ] = { 0 }		3615430	3		=			
ANR	3615856	Identifier	str		3615430	0					
ANR	3615857	InitializerList	0		3615430	1					
ANR	3615858	PrimaryExpression	0		3615430	0					
ANR	3615859	IfStatement	if ( bits == 64 )		3615430	2					
ANR	3615860	Condition	bits == 64	3840:8:114890:114899	3615430	0	True				
ANR	3615861	EqualityExpression	bits == 64		3615430	0		==			
ANR	3615862	Identifier	bits		3615430	0					
ANR	3615863	PrimaryExpression	64		3615430	1					
ANR	3615864	CompoundStatement		58:20:1690:1690	3615430	1					
ANR	3615865	ExpressionStatement	"addr = BREAD64 ( bin -> b , i )"	3841:5:114909:114935	3615430	0	True				
ANR	3615866	AssignmentExpression	"addr = BREAD64 ( bin -> b , i )"		3615430	0		=			
ANR	3615867	Identifier	addr		3615430	0					
ANR	3615868	CallExpression	"BREAD64 ( bin -> b , i )"		3615430	1					
ANR	3615869	Callee	BREAD64		3615430	0					
ANR	3615870	Identifier	BREAD64		3615430	0					
ANR	3615871	ArgumentList	bin -> b		3615430	1					
ANR	3615872	Argument	bin -> b		3615430	0					
ANR	3615873	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615874	Identifier	bin		3615430	0					
ANR	3615875	Identifier	b		3615430	1					
ANR	3615876	Argument	i		3615430	1					
ANR	3615877	Identifier	i		3615430	0					
ANR	3615878	ElseStatement	else		3615430	0					
ANR	3615879	CompoundStatement		60:11:1736:1736	3615430	0					
ANR	3615880	ExpressionStatement	"addr = BREAD32 ( bin -> b , i )"	3843:5:114955:114981	3615430	0	True				
ANR	3615881	AssignmentExpression	"addr = BREAD32 ( bin -> b , i )"		3615430	0		=			
ANR	3615882	Identifier	addr		3615430	0					
ANR	3615883	CallExpression	"BREAD32 ( bin -> b , i )"		3615430	1					
ANR	3615884	Callee	BREAD32		3615430	0					
ANR	3615885	Identifier	BREAD32		3615430	0					
ANR	3615886	ArgumentList	bin -> b		3615430	1					
ANR	3615887	Argument	bin -> b		3615430	0					
ANR	3615888	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615889	Identifier	bin		3615430	0					
ANR	3615890	Identifier	b		3615430	1					
ANR	3615891	Argument	i		3615430	1					
ANR	3615892	Identifier	i		3615430	0					
ANR	3615893	IfStatement	if ( addr == UT64_MAX )		3615430	3					
ANR	3615894	Condition	addr == UT64_MAX	3845:8:114997:115012	3615430	0	True				
ANR	3615895	EqualityExpression	addr == UT64_MAX		3615430	0		==			
ANR	3615896	Identifier	addr		3615430	0					
ANR	3615897	Identifier	UT64_MAX		3615430	1					
ANR	3615898	CompoundStatement		63:26:1803:1803	3615430	1					
ANR	3615899	ExpressionStatement	"eprintf ( ""ffbreak\\n"" )"	3846:5:115022:115043	3615430	0	True				
ANR	3615900	CallExpression	"eprintf ( ""ffbreak\\n"" )"		3615430	0					
ANR	3615901	Callee	eprintf		3615430	0					
ANR	3615902	Identifier	eprintf		3615430	0					
ANR	3615903	ArgumentList	"""ffbreak\\n"""		3615430	1					
ANR	3615904	Argument	"""ffbreak\\n"""		3615430	0					
ANR	3615905	PrimaryExpression	"""ffbreak\\n"""		3615430	0					
ANR	3615906	BreakStatement	break ;	3847:5:115050:115055	3615430	1	True				
ANR	3615907	ExpressionStatement	"r_buf_read_at ( bin -> b , jump + len_str , ( ut8 * ) str , sizeof ( str ) - 1 )"	3849:4:115067:115138	3615430	4	True				
ANR	3615908	CallExpression	"r_buf_read_at ( bin -> b , jump + len_str , ( ut8 * ) str , sizeof ( str ) - 1 )"		3615430	0					
ANR	3615909	Callee	r_buf_read_at		3615430	0					
ANR	3615910	Identifier	r_buf_read_at		3615430	0					
ANR	3615911	ArgumentList	bin -> b		3615430	1					
ANR	3615912	Argument	bin -> b		3615430	0					
ANR	3615913	PtrMemberAccess	bin -> b		3615430	0					
ANR	3615914	Identifier	bin		3615430	0					
ANR	3615915	Identifier	b		3615430	1					
ANR	3615916	Argument	jump + len_str		3615430	1					
ANR	3615917	AdditiveExpression	jump + len_str		3615430	0		+			
ANR	3615918	Identifier	jump		3615430	0					
ANR	3615919	Identifier	len_str		3615430	1					
ANR	3615920	Argument	( ut8 * ) str		3615430	2					
ANR	3615921	CastExpression	( ut8 * ) str		3615430	0					
ANR	3615922	CastTarget	ut8 *		3615430	0					
ANR	3615923	Identifier	str		3615430	1					
ANR	3615924	Argument	sizeof ( str ) - 1		3615430	3					
ANR	3615925	AdditiveExpression	sizeof ( str ) - 1		3615430	0		-			
ANR	3615926	SizeofExpression	sizeof ( str )		3615430	0					
ANR	3615927	Sizeof	sizeof		3615430	0					
ANR	3615928	SizeofOperand	str		3615430	1					
ANR	3615929	PrimaryExpression	1		3615430	1					
ANR	3615930	ExpressionStatement	str [ sizeof ( str ) - 1 ] = 0	3851:4:115144:115167	3615430	5	True				
ANR	3615931	AssignmentExpression	str [ sizeof ( str ) - 1 ] = 0		3615430	0		=			
ANR	3615932	ArrayIndexing	str [ sizeof ( str ) - 1 ]		3615430	0					
ANR	3615933	Identifier	str		3615430	0					
ANR	3615934	AdditiveExpression	sizeof ( str ) - 1		3615430	1		-			
ANR	3615935	SizeofExpression	sizeof ( str )		3615430	0					
ANR	3615936	Sizeof	sizeof		3615430	0					
ANR	3615937	SizeofOperand	str		3615430	1					
ANR	3615938	PrimaryExpression	1		3615430	1					
ANR	3615939	PrimaryExpression	0		3615430	1					
ANR	3615940	IdentifierDeclStatement	RListIter * iter ;	3852:4:115198:115213	3615430	6	True				
ANR	3615941	IdentifierDecl	* iter		3615430	0					
ANR	3615942	IdentifierDeclType	RListIter *		3615430	0					
ANR	3615943	Identifier	iter		3615430	1					
ANR	3615944	IdentifierDeclStatement	RBinMap * p ;	3853:4:115219:115229	3615430	7	True				
ANR	3615945	IdentifierDecl	* p		3615430	0					
ANR	3615946	IdentifierDeclType	RBinMap *		3615430	0					
ANR	3615947	Identifier	p		3615430	1					
ANR	3615948	Statement	r_list_foreach	3854:4:115235:115248	3615430	8	True				
ANR	3615949	Statement	(	3854:19:115250:115250	3615430	9	True				
ANR	3615950	Statement	core_maps	3854:20:115251:115259	3615430	10	True				
ANR	3615951	Statement	","	3854:29:115260:115260	3615430	11	True				
ANR	3615952	Statement	iter	3854:31:115262:115265	3615430	12	True				
ANR	3615953	Statement	","	3854:35:115266:115266	3615430	13	True				
ANR	3615954	Statement	p	3854:37:115268:115268	3615430	14	True				
ANR	3615955	Statement	)	3854:38:115269:115269	3615430	15	True				
ANR	3615956	CompoundStatement		72:40:2059:2059	3615430	16					
ANR	3615957	IfStatement	if ( p -> addr == addr )		3615430	0					
ANR	3615958	Condition	p -> addr == addr	3855:9:115282:115296	3615430	0	True				
ANR	3615959	EqualityExpression	p -> addr == addr		3615430	0		==			
ANR	3615960	PtrMemberAccess	p -> addr		3615430	0					
ANR	3615961	Identifier	p		3615430	0					
ANR	3615962	Identifier	addr		3615430	1					
ANR	3615963	Identifier	addr		3615430	1					
ANR	3615964	CompoundStatement		73:26:2087:2087	3615430	1					
ANR	3615965	ExpressionStatement	p -> file = strdup ( str )	3856:6:115307:115329	3615430	0	True				
ANR	3615966	AssignmentExpression	p -> file = strdup ( str )		3615430	0		=			
ANR	3615967	PtrMemberAccess	p -> file		3615430	0					
ANR	3615968	Identifier	p		3615430	0					
ANR	3615969	Identifier	file		3615430	1					
ANR	3615970	CallExpression	strdup ( str )		3615430	1					
ANR	3615971	Callee	strdup		3615430	0					
ANR	3615972	Identifier	strdup		3615430	0					
ANR	3615973	ArgumentList	str		3615430	1					
ANR	3615974	Argument	str		3615430	0					
ANR	3615975	Identifier	str		3615430	0					
ANR	3615976	ExpressionStatement	len_str += strlen ( str ) + 1	3859:4:115349:115376	3615430	17	True				
ANR	3615977	AssignmentExpression	len_str += strlen ( str ) + 1		3615430	0		+=			
ANR	3615978	Identifier	len_str		3615430	0					
ANR	3615979	AdditiveExpression	strlen ( str ) + 1		3615430	1		+			
ANR	3615980	CallExpression	strlen ( str )		3615430	0					
ANR	3615981	Callee	strlen		3615430	0					
ANR	3615982	Identifier	strlen		3615430	0					
ANR	3615983	ArgumentList	str		3615430	1					
ANR	3615984	Argument	str		3615430	0					
ANR	3615985	Identifier	str		3615430	0					
ANR	3615986	PrimaryExpression	1		3615430	1					
ANR	3615987	ExpressionStatement	n_maps --	3860:4:115382:115390	3615430	18	True				
ANR	3615988	PostIncDecOperationExpression	n_maps --		3615430	0					
ANR	3615989	Identifier	n_maps		3615430	0					
ANR	3615990	IncDec	--		3615430	1					
ANR	3615991	ExpressionStatement	i += ( size_of * 2 )	3861:4:115396:115414	3615430	19	True				
ANR	3615992	AssignmentExpression	i += ( size_of * 2 )		3615430	0		+=			
ANR	3615993	Identifier	i		3615430	0					
ANR	3615994	MultiplicativeExpression	size_of * 2		3615430	1		*			
ANR	3615995	Identifier	size_of		3615430	0					
ANR	3615996	PrimaryExpression	2		3615430	1					
ANR	3615997	ReturnStatement	return true ;	3866:1:115430:115441	3615430	3	True				
ANR	3615998	Identifier	true		3615430	0					
ANR	3615999	Label	fail :	3867:0:115443:115447	3615430	4	True				
ANR	3616000	Identifier	fail		3615430	0					
ANR	3616001	ReturnStatement	return false ;	3868:1:115450:115462	3615430	5	True				
ANR	3616002	Identifier	false		3615430	0					
ANR	3616003	ReturnType	static bool		3615430	1					
ANR	3616004	Identifier	get_nt_file_maps		3615430	2					
ANR	3616005	ParameterList	"ELFOBJ * bin , RList * core_maps"		3615430	3					
ANR	3616006	Parameter	ELFOBJ * bin	3783:30:113180:113190	3615430	0	True				
ANR	3616007	ParameterType	ELFOBJ *		3615430	0					
ANR	3616008	Identifier	bin		3615430	1					
ANR	3616009	Parameter	RList * core_maps	3783:43:113193:113208	3615430	1	True				
ANR	3616010	ParameterType	RList *		3615430	0					
ANR	3616011	Identifier	core_maps		3615430	1					
ANR	3616012	CFGEntryNode	ENTRY		3615430		True				
ANR	3616013	CFGExitNode	EXIT		3615430		True				
ANR	3616014	Symbol	bin -> b		3615430						
ANR	3616015	Symbol	Phdr		3615430						
ANR	3616016	Symbol	BREAD32		3615430						
ANR	3616017	Symbol	bin		3615430						
ANR	3616018	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_type		3615430						
ANR	3616019	Symbol	bin -> phdr		3615430						
ANR	3616020	Symbol	NT_FILE		3615430						
ANR	3616021	Symbol	* elf_nhdr		3615430						
ANR	3616022	Symbol	r_bin_elf_get_bits		3615430						
ANR	3616023	Symbol	round_up		3615430						
ANR	3616024	Symbol	strlen		3615430						
ANR	3616025	Symbol	p -> file		3615430						
ANR	3616026	Symbol	bin -> ehdr		3615430						
ANR	3616027	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_descsz		3615430						
ANR	3616028	Symbol	p -> addr		3615430						
ANR	3616029	Symbol	elf_nhdr		3615430						
ANR	3616030	Symbol	jump		3615430						
ANR	3616031	Symbol	ret		3615430						
ANR	3616032	Symbol	offset		3615430						
ANR	3616033	Symbol	BREAD64		3615430						
ANR	3616034	Symbol	bits		3615430						
ANR	3616035	Symbol	iter		3615430						
ANR	3616036	Symbol	bin -> phdr [ ph ] . p_offset		3615430						
ANR	3616037	Symbol	bin -> ehdr . e_phnum		3615430						
ANR	3616038	Symbol	* bin -> phdr		3615430						
ANR	3616039	Symbol	str		3615430						
ANR	3616040	Symbol	len_str		3615430						
ANR	3616041	Symbol	n_descsz		3615430						
ANR	3616042	Symbol	elf_nhdr_size		3615430						
ANR	3616043	Symbol	true		3615430						
ANR	3616044	Symbol	ph_num		3615430						
ANR	3616045	Symbol	* ph		3615430						
ANR	3616046	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_type		3615430						
ANR	3616047	Symbol	calloc		3615430						
ANR	3616048	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_descsz		3615430						
ANR	3616049	Symbol	( ( Elf64_Nhdr * ) elf_nhdr ) -> n_namesz		3615430						
ANR	3616050	Symbol	n_type		3615430						
ANR	3616051	Symbol	* bin		3615430						
ANR	3616052	Symbol	core_maps		3615430						
ANR	3616053	Symbol	found		3615430						
ANR	3616054	Symbol	n_namesz		3615430						
ANR	3616055	Symbol	size_of		3615430						
ANR	3616056	Symbol	* * bin		3615430						
ANR	3616057	Symbol	* str		3615430						
ANR	3616058	Symbol	addr		3615430						
ANR	3616059	Symbol	UT64_MAX		3615430						
ANR	3616060	Symbol	Elf_		3615430						
ANR	3616061	Symbol	PT_NOTE		3615430						
ANR	3616062	Symbol	false		3615430						
ANR	3616063	Symbol	i		3615430						
ANR	3616064	Symbol	n_maps		3615430						
ANR	3616065	Symbol	p -> p_type		3615430						
ANR	3616066	Symbol	p		3615430						
ANR	3616067	Symbol	ph		3615430						
ANR	3616068	Symbol	r_buf_read_at		3615430						
ANR	3616069	Symbol	* p		3615430						
ANR	3616070	Symbol	strdup		3615430						
ANR	3616071	Symbol	( ( Elf32_Nhdr * ) elf_nhdr ) -> n_namesz		3615430						
ANR	3616072	Function	r_bin_elf_map_free	3871:0:115467:115564							
ANR	3616073	FunctionDef	r_bin_elf_map_free (RBinMap * map)		3616072	0					
ANR	3616074	CompoundStatement		3871:46:115513:115564	3616072	0					
ANR	3616075	IfStatement	if ( map )		3616072	0					
ANR	3616076	Condition	map	3872:5:115520:115522	3616072	0	True				
ANR	3616077	Identifier	map		3616072	0					
ANR	3616078	CompoundStatement		2:10:11:11	3616072	1					
ANR	3616079	ExpressionStatement	free ( map -> file )	3873:2:115529:115545	3616072	0	True				
ANR	3616080	CallExpression	free ( map -> file )		3616072	0					
ANR	3616081	Callee	free		3616072	0					
ANR	3616082	Identifier	free		3616072	0					
ANR	3616083	ArgumentList	map -> file		3616072	1					
ANR	3616084	Argument	map -> file		3616072	0					
ANR	3616085	PtrMemberAccess	map -> file		3616072	0					
ANR	3616086	Identifier	map		3616072	0					
ANR	3616087	Identifier	file		3616072	1					
ANR	3616088	ExpressionStatement	free ( map )	3874:2:115549:115559	3616072	1	True				
ANR	3616089	CallExpression	free ( map )		3616072	0					
ANR	3616090	Callee	free		3616072	0					
ANR	3616091	Identifier	free		3616072	0					
ANR	3616092	ArgumentList	map		3616072	1					
ANR	3616093	Argument	map		3616072	0					
ANR	3616094	Identifier	map		3616072	0					
ANR	3616095	ReturnType	static void		3616072	1					
ANR	3616096	Identifier	r_bin_elf_map_free		3616072	2					
ANR	3616097	ParameterList	RBinMap * map		3616072	3					
ANR	3616098	Parameter	RBinMap * map	3871:32:115499:115510	3616072	0	True				
ANR	3616099	ParameterType	RBinMap *		3616072	0					
ANR	3616100	Identifier	map		3616072	1					
ANR	3616101	CFGEntryNode	ENTRY		3616072		True				
ANR	3616102	CFGExitNode	EXIT		3616072		True				
ANR	3616103	Symbol	map -> file		3616072						
ANR	3616104	Symbol	* map		3616072						
ANR	3616105	Symbol	map		3616072						
ANR	3616106	Function	r_bin_elf_get_maps	3878:7:115574:116257							
ANR	3616107	FunctionDef	r_bin_elf_get_maps (ELFOBJ * bin)		3616106	0					
ANR	3616108	CompoundStatement		3878:45:115612:116257	3616106	0					
ANR	3616109	IdentifierDeclStatement	"ut16 ph , ph_num = bin -> ehdr . e_phnum ;"	3879:1:115615:115650	3616106	0	True				
ANR	3616110	IdentifierDecl	ph		3616106	0					
ANR	3616111	IdentifierDeclType	ut16		3616106	0					
ANR	3616112	Identifier	ph		3616106	1					
ANR	3616113	IdentifierDecl	ph_num = bin -> ehdr . e_phnum		3616106	1					
ANR	3616114	IdentifierDeclType	ut16		3616106	0					
ANR	3616115	Identifier	ph_num		3616106	1					
ANR	3616116	AssignmentExpression	ph_num = bin -> ehdr . e_phnum		3616106	2		=			
ANR	3616117	Identifier	ph_num		3616106	0					
ANR	3616118	MemberAccess	bin -> ehdr . e_phnum		3616106	1					
ANR	3616119	PtrMemberAccess	bin -> ehdr		3616106	0					
ANR	3616120	Identifier	bin		3616106	0					
ANR	3616121	Identifier	ehdr		3616106	1					
ANR	3616122	Identifier	e_phnum		3616106	1					
ANR	3616123	IfStatement	if ( ! bin -> phdr )		3616106	1					
ANR	3616124	Condition	! bin -> phdr	3880:5:115672:115681	3616106	0	True				
ANR	3616125	UnaryOperationExpression	! bin -> phdr		3616106	0					
ANR	3616126	UnaryOperator	!		3616106	0					
ANR	3616127	PtrMemberAccess	bin -> phdr		3616106	1					
ANR	3616128	Identifier	bin		3616106	0					
ANR	3616129	Identifier	phdr		3616106	1					
ANR	3616130	CompoundStatement		3:17:71:71	3616106	1					
ANR	3616131	ReturnStatement	return NULL ;	3881:2:115688:115699	3616106	0	True				
ANR	3616132	Identifier	NULL		3616106	0					
ANR	3616133	IdentifierDeclStatement	RList * maps = r_list_newf ( ( RListFree ) r_bin_elf_map_free ) ;	3883:1:115705:115762	3616106	2	True				
ANR	3616134	IdentifierDecl	* maps = r_list_newf ( ( RListFree ) r_bin_elf_map_free )		3616106	0					
ANR	3616135	IdentifierDeclType	RList *		3616106	0					
ANR	3616136	Identifier	maps		3616106	1					
ANR	3616137	AssignmentExpression	* maps = r_list_newf ( ( RListFree ) r_bin_elf_map_free )		3616106	2		=			
ANR	3616138	Identifier	maps		3616106	0					
ANR	3616139	CallExpression	r_list_newf ( ( RListFree ) r_bin_elf_map_free )		3616106	1					
ANR	3616140	Callee	r_list_newf		3616106	0					
ANR	3616141	Identifier	r_list_newf		3616106	0					
ANR	3616142	ArgumentList	( RListFree ) r_bin_elf_map_free		3616106	1					
ANR	3616143	Argument	( RListFree ) r_bin_elf_map_free		3616106	0					
ANR	3616144	CastExpression	( RListFree ) r_bin_elf_map_free		3616106	0					
ANR	3616145	CastTarget	RListFree		3616106	0					
ANR	3616146	Identifier	r_bin_elf_map_free		3616106	1					
ANR	3616147	ForStatement	for ( ph = 0 ; ph < ph_num ; ph ++ )		3616106	3					
ANR	3616148	ForInit	ph = 0 ;	3884:6:115770:115776	3616106	0	True				
ANR	3616149	AssignmentExpression	ph = 0		3616106	0		=			
ANR	3616150	Identifier	ph		3616106	0					
ANR	3616151	PrimaryExpression	0		3616106	1					
ANR	3616152	Condition	ph < ph_num	3884:14:115778:115788	3616106	1	True				
ANR	3616153	RelationalExpression	ph < ph_num		3616106	0		<			
ANR	3616154	Identifier	ph		3616106	0					
ANR	3616155	Identifier	ph_num		3616106	1					
ANR	3616156	PostIncDecOperationExpression	ph ++	3884:27:115791:115794	3616106	2	True				
ANR	3616157	Identifier	ph		3616106	0					
ANR	3616158	IncDec	++		3616106	1					
ANR	3616159	CompoundStatement		7:33:184:184	3616106	3					
ANR	3616160	ExpressionStatement	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]	3885:2:115801:115831	3616106	0	True				
ANR	3616161	AssignmentExpression	Elf_ ( Phdr ) * p = & bin -> phdr [ ph ]		3616106	0		=			
ANR	3616162	MultiplicativeExpression	Elf_ ( Phdr ) * p		3616106	0		*			
ANR	3616163	CallExpression	Elf_ ( Phdr )		3616106	0					
ANR	3616164	Callee	Elf_		3616106	0					
ANR	3616165	Identifier	Elf_		3616106	0					
ANR	3616166	ArgumentList	Phdr		3616106	1					
ANR	3616167	Argument	Phdr		3616106	0					
ANR	3616168	Identifier	Phdr		3616106	0					
ANR	3616169	Identifier	p		3616106	1					
ANR	3616170	UnaryOperationExpression	& bin -> phdr [ ph ]		3616106	1					
ANR	3616171	UnaryOperator	&		3616106	0					
ANR	3616172	ArrayIndexing	bin -> phdr [ ph ]		3616106	1					
ANR	3616173	PtrMemberAccess	bin -> phdr		3616106	0					
ANR	3616174	Identifier	bin		3616106	0					
ANR	3616175	Identifier	phdr		3616106	1					
ANR	3616176	Identifier	ph		3616106	1					
ANR	3616177	IfStatement	if ( p -> p_type == PT_LOAD )		3616106	1					
ANR	3616178	Condition	p -> p_type == PT_LOAD	3886:6:115839:115858	3616106	0	True				
ANR	3616179	EqualityExpression	p -> p_type == PT_LOAD		3616106	0		==			
ANR	3616180	PtrMemberAccess	p -> p_type		3616106	0					
ANR	3616181	Identifier	p		3616106	0					
ANR	3616182	Identifier	p_type		3616106	1					
ANR	3616183	Identifier	PT_LOAD		3616106	1					
ANR	3616184	CompoundStatement		10:3:253:284	3616106	1					
ANR	3616185	IdentifierDeclStatement	RBinMap * map = R_NEW0 ( RBinMap ) ;	3887:3:115866:115897	3616106	0	True				
ANR	3616186	IdentifierDecl	* map = R_NEW0 ( RBinMap )		3616106	0					
ANR	3616187	IdentifierDeclType	RBinMap *		3616106	0					
ANR	3616188	Identifier	map		3616106	1					
ANR	3616189	AssignmentExpression	* map = R_NEW0 ( RBinMap )		3616106	2		=			
ANR	3616190	Identifier	map		3616106	0					
ANR	3616191	CallExpression	R_NEW0 ( RBinMap )		3616106	1					
ANR	3616192	Callee	R_NEW0		3616106	0					
ANR	3616193	Identifier	R_NEW0		3616106	0					
ANR	3616194	ArgumentList	RBinMap		3616106	1					
ANR	3616195	Argument	RBinMap		3616106	0					
ANR	3616196	Identifier	RBinMap		3616106	0					
ANR	3616197	IfStatement	if ( map )		3616106	1					
ANR	3616198	Condition	map	3888:7:115906:115908	3616106	0	True				
ANR	3616199	Identifier	map		3616106	0					
ANR	3616200	CompoundStatement		11:12:298:298	3616106	1					
ANR	3616201	ExpressionStatement	map -> addr = p -> p_vaddr	3889:4:115917:115939	3616106	0	True				
ANR	3616202	AssignmentExpression	map -> addr = p -> p_vaddr		3616106	0		=			
ANR	3616203	PtrMemberAccess	map -> addr		3616106	0					
ANR	3616204	Identifier	map		3616106	0					
ANR	3616205	Identifier	addr		3616106	1					
ANR	3616206	PtrMemberAccess	p -> p_vaddr		3616106	1					
ANR	3616207	Identifier	p		3616106	0					
ANR	3616208	Identifier	p_vaddr		3616106	1					
ANR	3616209	ExpressionStatement	map -> size = p -> p_memsz	3890:4:115945:115967	3616106	1	True				
ANR	3616210	AssignmentExpression	map -> size = p -> p_memsz		3616106	0		=			
ANR	3616211	PtrMemberAccess	map -> size		3616106	0					
ANR	3616212	Identifier	map		3616106	0					
ANR	3616213	Identifier	size		3616106	1					
ANR	3616214	PtrMemberAccess	p -> p_memsz		3616106	1					
ANR	3616215	Identifier	p		3616106	0					
ANR	3616216	Identifier	p_memsz		3616106	1					
ANR	3616217	ExpressionStatement	map -> perms = p -> p_flags	3891:4:115973:115996	3616106	2	True				
ANR	3616218	AssignmentExpression	map -> perms = p -> p_flags		3616106	0		=			
ANR	3616219	PtrMemberAccess	map -> perms		3616106	0					
ANR	3616220	Identifier	map		3616106	0					
ANR	3616221	Identifier	perms		3616106	1					
ANR	3616222	PtrMemberAccess	p -> p_flags		3616106	1					
ANR	3616223	Identifier	p		3616106	0					
ANR	3616224	Identifier	p_flags		3616106	1					
ANR	3616225	ExpressionStatement	map -> offset = p -> p_offset	3892:4:116002:116027	3616106	3	True				
ANR	3616226	AssignmentExpression	map -> offset = p -> p_offset		3616106	0		=			
ANR	3616227	PtrMemberAccess	map -> offset		3616106	0					
ANR	3616228	Identifier	map		3616106	0					
ANR	3616229	Identifier	offset		3616106	1					
ANR	3616230	PtrMemberAccess	p -> p_offset		3616106	1					
ANR	3616231	Identifier	p		3616106	0					
ANR	3616232	Identifier	p_offset		3616106	1					
ANR	3616233	ExpressionStatement	map -> file = NULL	3893:4:116033:116049	3616106	4	True				
ANR	3616234	AssignmentExpression	map -> file = NULL		3616106	0		=			
ANR	3616235	PtrMemberAccess	map -> file		3616106	0					
ANR	3616236	Identifier	map		3616106	0					
ANR	3616237	Identifier	file		3616106	1					
ANR	3616238	Identifier	NULL		3616106	1					
ANR	3616239	ExpressionStatement	"r_list_append ( maps , map )"	3894:4:116055:116080	3616106	5	True				
ANR	3616240	CallExpression	"r_list_append ( maps , map )"		3616106	0					
ANR	3616241	Callee	r_list_append		3616106	0					
ANR	3616242	Identifier	r_list_append		3616106	0					
ANR	3616243	ArgumentList	maps		3616106	1					
ANR	3616244	Argument	maps		3616106	0					
ANR	3616245	Identifier	maps		3616106	0					
ANR	3616246	Argument	map		3616106	1					
ANR	3616247	Identifier	map		3616106	0					
ANR	3616248	IfStatement	if ( ! r_list_empty ( maps ) )		3616106	4					
ANR	3616249	Condition	! r_list_empty ( maps )	3899:5:116100:116119	3616106	0	True				
ANR	3616250	UnaryOperationExpression	! r_list_empty ( maps )		3616106	0					
ANR	3616251	UnaryOperator	!		3616106	0					
ANR	3616252	CallExpression	r_list_empty ( maps )		3616106	1					
ANR	3616253	Callee	r_list_empty		3616106	0					
ANR	3616254	Identifier	r_list_empty		3616106	0					
ANR	3616255	ArgumentList	maps		3616106	1					
ANR	3616256	Argument	maps		3616106	0					
ANR	3616257	Identifier	maps		3616106	0					
ANR	3616258	CompoundStatement		22:27:509:509	3616106	1					
ANR	3616259	IfStatement	"if ( ! get_nt_file_maps ( bin , maps ) )"		3616106	0					
ANR	3616260	Condition	"! get_nt_file_maps ( bin , maps )"	3900:6:116130:116158	3616106	0	True				
ANR	3616261	UnaryOperationExpression	"! get_nt_file_maps ( bin , maps )"		3616106	0					
ANR	3616262	UnaryOperator	!		3616106	0					
ANR	3616263	CallExpression	"get_nt_file_maps ( bin , maps )"		3616106	1					
ANR	3616264	Callee	get_nt_file_maps		3616106	0					
ANR	3616265	Identifier	get_nt_file_maps		3616106	0					
ANR	3616266	ArgumentList	bin		3616106	1					
ANR	3616267	Argument	bin		3616106	0					
ANR	3616268	Identifier	bin		3616106	0					
ANR	3616269	Argument	maps		3616106	1					
ANR	3616270	Identifier	maps		3616106	0					
ANR	3616271	CompoundStatement		23:37:548:548	3616106	1					
ANR	3616272	ExpressionStatement	"eprintf ( ""Could not retrieve the names of all maps from NT_FILE\\n"" )"	3901:3:116166:116233	3616106	0	True				
ANR	3616273	CallExpression	"eprintf ( ""Could not retrieve the names of all maps from NT_FILE\\n"" )"		3616106	0					
ANR	3616274	Callee	eprintf		3616106	0					
ANR	3616275	Identifier	eprintf		3616106	0					
ANR	3616276	ArgumentList	"""Could not retrieve the names of all maps from NT_FILE\\n"""		3616106	1					
ANR	3616277	Argument	"""Could not retrieve the names of all maps from NT_FILE\\n"""		3616106	0					
ANR	3616278	PrimaryExpression	"""Could not retrieve the names of all maps from NT_FILE\\n"""		3616106	0					
ANR	3616279	ReturnStatement	return maps ;	3905:1:116244:116255	3616106	5	True				
ANR	3616280	Identifier	maps		3616106	0					
ANR	3616281	ReturnType	Elf_		3616106	1					
ANR	3616282	Identifier	( r_bin_elf_get_maps )		3616106	2					
ANR	3616283	Identifier	r_bin_elf_get_maps		3616106	3					
ANR	3616284	ParameterList	ELFOBJ * bin		3616106	4					
ANR	3616285	Parameter	ELFOBJ * bin	3878:32:115599:115609	3616106	0	True				
ANR	3616286	ParameterType	ELFOBJ *		3616106	0					
ANR	3616287	Identifier	bin		3616106	1					
ANR	3616288	CFGEntryNode	ENTRY		3616106		True				
ANR	3616289	CFGExitNode	EXIT		3616106		True				
ANR	3616290	Symbol	Phdr		3616106						
ANR	3616291	Symbol	map -> addr		3616106						
ANR	3616292	Symbol	bin		3616106						
ANR	3616293	Symbol	* map		3616106						
ANR	3616294	Symbol	map -> file		3616106						
ANR	3616295	Symbol	bin -> phdr		3616106						
ANR	3616296	Symbol	map -> size		3616106						
ANR	3616297	Symbol	* bin		3616106						
ANR	3616298	Symbol	get_nt_file_maps		3616106						
ANR	3616299	Symbol	r_bin_elf_map_free		3616106						
ANR	3616300	Symbol	bin -> ehdr		3616106						
ANR	3616301	Symbol	p -> p_memsz		3616106						
ANR	3616302	Symbol	p -> p_offset		3616106						
ANR	3616303	Symbol	map		3616106						
ANR	3616304	Symbol	RBinMap		3616106						
ANR	3616305	Symbol	map -> perms		3616106						
ANR	3616306	Symbol	Elf_		3616106						
ANR	3616307	Symbol	NULL		3616106						
ANR	3616308	Symbol	maps		3616106						
ANR	3616309	Symbol	r_list_newf		3616106						
ANR	3616310	Symbol	PT_LOAD		3616106						
ANR	3616311	Symbol	bin -> ehdr . e_phnum		3616106						
ANR	3616312	Symbol	p -> p_vaddr		3616106						
ANR	3616313	Symbol	p -> p_type		3616106						
ANR	3616314	Symbol	p -> p_flags		3616106						
ANR	3616315	Symbol	p		3616106						
ANR	3616316	Symbol	R_NEW0		3616106						
ANR	3616317	Symbol	ph		3616106						
ANR	3616318	Symbol	r_list_empty		3616106						
ANR	3616319	Symbol	ph_num		3616106						
ANR	3616320	Symbol	* p		3616106						
ANR	3616321	Symbol	map -> offset		3616106						
ANR	3616322	Function	r_bin_elf_compiler	3908:6:116266:116847							
ANR	3616323	FunctionDef	r_bin_elf_compiler (ELFOBJ * bin)		3616322	0					
ANR	3616324	CompoundStatement		3908:44:116304:116847	3616322	0					
ANR	3616325	IdentifierDeclStatement	"RBinElfSection * section = get_section_by_name ( bin , "".comment"" ) ;"	3909:1:116307:116370	3616322	0	True				
ANR	3616326	IdentifierDecl	"* section = get_section_by_name ( bin , "".comment"" )"		3616322	0					
ANR	3616327	IdentifierDeclType	RBinElfSection *		3616322	0					
ANR	3616328	Identifier	section		3616322	1					
ANR	3616329	AssignmentExpression	"* section = get_section_by_name ( bin , "".comment"" )"		3616322	2		=			
ANR	3616330	Identifier	section		3616322	0					
ANR	3616331	CallExpression	"get_section_by_name ( bin , "".comment"" )"		3616322	1					
ANR	3616332	Callee	get_section_by_name		3616322	0					
ANR	3616333	Identifier	get_section_by_name		3616322	0					
ANR	3616334	ArgumentList	bin		3616322	1					
ANR	3616335	Argument	bin		3616322	0					
ANR	3616336	Identifier	bin		3616322	0					
ANR	3616337	Argument	""".comment"""		3616322	1					
ANR	3616338	PrimaryExpression	""".comment"""		3616322	0					
ANR	3616339	IfStatement	if ( ! section )		3616322	1					
ANR	3616340	Condition	! section	3910:5:116377:116384	3616322	0	True				
ANR	3616341	UnaryOperationExpression	! section		3616322	0					
ANR	3616342	UnaryOperator	!		3616322	0					
ANR	3616343	Identifier	section		3616322	1					
ANR	3616344	CompoundStatement		3:15:82:82	3616322	1					
ANR	3616345	ReturnStatement	return NULL ;	3911:2:116391:116402	3616322	0	True				
ANR	3616346	Identifier	NULL		3616322	0					
ANR	3616347	IdentifierDeclStatement	ut64 off = section -> offset ;	3914:1:116409:116435	3616322	2	True				
ANR	3616348	IdentifierDecl	off = section -> offset		3616322	0					
ANR	3616349	IdentifierDeclType	ut64		3616322	0					
ANR	3616350	Identifier	off		3616322	1					
ANR	3616351	AssignmentExpression	off = section -> offset		3616322	2		=			
ANR	3616352	Identifier	off		3616322	0					
ANR	3616353	PtrMemberAccess	section -> offset		3616322	1					
ANR	3616354	Identifier	section		3616322	0					
ANR	3616355	Identifier	offset		3616322	1					
ANR	3616356	IdentifierDeclStatement	int sz = section -> size ;	3915:1:116438:116460	3616322	3	True				
ANR	3616357	IdentifierDecl	sz = section -> size		3616322	0					
ANR	3616358	IdentifierDeclType	int		3616322	0					
ANR	3616359	Identifier	sz		3616322	1					
ANR	3616360	AssignmentExpression	sz = section -> size		3616322	2		=			
ANR	3616361	Identifier	sz		3616322	0					
ANR	3616362	PtrMemberAccess	section -> size		3616322	1					
ANR	3616363	Identifier	section		3616322	0					
ANR	3616364	Identifier	size		3616322	1					
ANR	3616365	IfStatement	if ( sz < 1 )		3616322	4					
ANR	3616366	Condition	sz < 1	3916:5:116467:116472	3616322	0	True				
ANR	3616367	RelationalExpression	sz < 1		3616322	0		<			
ANR	3616368	Identifier	sz		3616322	0					
ANR	3616369	PrimaryExpression	1		3616322	1					
ANR	3616370	CompoundStatement		9:13:170:170	3616322	1					
ANR	3616371	ReturnStatement	return NULL ;	3917:2:116479:116490	3616322	0	True				
ANR	3616372	Identifier	NULL		3616322	0					
ANR	3616373	IdentifierDeclStatement	char * buf = malloc ( sz + 1 ) ;	3919:1:116496:116523	3616322	5	True				
ANR	3616374	IdentifierDecl	* buf = malloc ( sz + 1 )		3616322	0					
ANR	3616375	IdentifierDeclType	char *		3616322	0					
ANR	3616376	Identifier	buf		3616322	1					
ANR	3616377	AssignmentExpression	* buf = malloc ( sz + 1 )		3616322	2		=			
ANR	3616378	Identifier	buf		3616322	0					
ANR	3616379	CallExpression	malloc ( sz + 1 )		3616322	1					
ANR	3616380	Callee	malloc		3616322	0					
ANR	3616381	Identifier	malloc		3616322	0					
ANR	3616382	ArgumentList	sz + 1		3616322	1					
ANR	3616383	Argument	sz + 1		3616322	0					
ANR	3616384	AdditiveExpression	sz + 1		3616322	0		+			
ANR	3616385	Identifier	sz		3616322	0					
ANR	3616386	PrimaryExpression	1		3616322	1					
ANR	3616387	IfStatement	if ( ! buf )		3616322	6					
ANR	3616388	Condition	! buf	3920:5:116530:116533	3616322	0	True				
ANR	3616389	UnaryOperationExpression	! buf		3616322	0					
ANR	3616390	UnaryOperator	!		3616322	0					
ANR	3616391	Identifier	buf		3616322	1					
ANR	3616392	CompoundStatement		13:11:231:231	3616322	1					
ANR	3616393	ReturnStatement	return NULL ;	3921:2:116540:116551	3616322	0	True				
ANR	3616394	Identifier	NULL		3616322	0					
ANR	3616395	IfStatement	"if ( r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz ) < 1 )"		3616322	7					
ANR	3616396	Condition	"r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz ) < 1"	3923:5:116561:116606	3616322	0	True				
ANR	3616397	RelationalExpression	"r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz ) < 1"		3616322	0		<			
ANR	3616398	CallExpression	"r_buf_read_at ( bin -> b , off , ( ut8 * ) buf , sz )"		3616322	0					
ANR	3616399	Callee	r_buf_read_at		3616322	0					
ANR	3616400	Identifier	r_buf_read_at		3616322	0					
ANR	3616401	ArgumentList	bin -> b		3616322	1					
ANR	3616402	Argument	bin -> b		3616322	0					
ANR	3616403	PtrMemberAccess	bin -> b		3616322	0					
ANR	3616404	Identifier	bin		3616322	0					
ANR	3616405	Identifier	b		3616322	1					
ANR	3616406	Argument	off		3616322	1					
ANR	3616407	Identifier	off		3616322	0					
ANR	3616408	Argument	( ut8 * ) buf		3616322	2					
ANR	3616409	CastExpression	( ut8 * ) buf		3616322	0					
ANR	3616410	CastTarget	ut8 *		3616322	0					
ANR	3616411	Identifier	buf		3616322	1					
ANR	3616412	Argument	sz		3616322	3					
ANR	3616413	Identifier	sz		3616322	0					
ANR	3616414	PrimaryExpression	1		3616322	1					
ANR	3616415	CompoundStatement		16:53:304:304	3616322	1					
ANR	3616416	ExpressionStatement	free ( buf )	3924:2:116613:116623	3616322	0	True				
ANR	3616417	CallExpression	free ( buf )		3616322	0					
ANR	3616418	Callee	free		3616322	0					
ANR	3616419	Identifier	free		3616322	0					
ANR	3616420	ArgumentList	buf		3616322	1					
ANR	3616421	Argument	buf		3616322	0					
ANR	3616422	Identifier	buf		3616322	0					
ANR	3616423	ReturnStatement	return NULL ;	3925:2:116627:116638	3616322	1	True				
ANR	3616424	Identifier	NULL		3616322	0					
ANR	3616425	ExpressionStatement	buf [ sz ] = 0	3928:1:116645:116656	3616322	8	True				
ANR	3616426	AssignmentExpression	buf [ sz ] = 0		3616322	0		=			
ANR	3616427	ArrayIndexing	buf [ sz ]		3616322	0					
ANR	3616428	Identifier	buf		3616322	0					
ANR	3616429	Identifier	sz		3616322	1					
ANR	3616430	PrimaryExpression	0		3616322	1					
ANR	3616431	IdentifierDeclStatement	char * ptr = buf ;	3929:1:116659:116674	3616322	9	True				
ANR	3616432	IdentifierDecl	* ptr = buf		3616322	0					
ANR	3616433	IdentifierDeclType	char *		3616322	0					
ANR	3616434	Identifier	ptr		3616322	1					
ANR	3616435	AssignmentExpression	* ptr = buf		3616322	2		=			
ANR	3616436	Identifier	buf		3616322	0					
ANR	3616437	Identifier	buf		3616322	1					
ANR	3616438	DoStatement	do		3616322	10					
ANR	3616439	CompoundStatement		26:2:412:434	3616322	0					
ANR	3616440	IdentifierDeclStatement	"char * p = strchr ( ptr , '\\0' ) ;"	3932:2:116685:116713	3616322	0	True				
ANR	3616441	IdentifierDecl	"* p = strchr ( ptr , '\\0' )"		3616322	0					
ANR	3616442	IdentifierDeclType	char *		3616322	0					
ANR	3616443	Identifier	p		3616322	1					
ANR	3616444	AssignmentExpression	"* p = strchr ( ptr , '\\0' )"		3616322	2		=			
ANR	3616445	Identifier	p		3616322	0					
ANR	3616446	CallExpression	"strchr ( ptr , '\\0' )"		3616322	1					
ANR	3616447	Callee	strchr		3616322	0					
ANR	3616448	Identifier	strchr		3616322	0					
ANR	3616449	ArgumentList	ptr		3616322	1					
ANR	3616450	Argument	ptr		3616322	0					
ANR	3616451	Identifier	ptr		3616322	0					
ANR	3616452	Argument	'\\0'		3616322	1					
ANR	3616453	PrimaryExpression	'\\0'		3616322	0					
ANR	3616454	IdentifierDeclStatement	size_t psz = ( p - ptr ) ;	3933:2:116717:116739	3616322	1	True				
ANR	3616455	IdentifierDecl	psz = ( p - ptr )		3616322	0					
ANR	3616456	IdentifierDeclType	size_t		3616322	0					
ANR	3616457	Identifier	psz		3616322	1					
ANR	3616458	AssignmentExpression	psz = ( p - ptr )		3616322	2		=			
ANR	3616459	Identifier	psz		3616322	0					
ANR	3616460	AdditiveExpression	p - ptr		3616322	1		-			
ANR	3616461	Identifier	p		3616322	0					
ANR	3616462	Identifier	ptr		3616322	1					
ANR	3616463	ExpressionStatement	ptr = p	3934:2:116743:116750	3616322	2	True				
ANR	3616464	AssignmentExpression	ptr = p		3616322	0		=			
ANR	3616465	Identifier	ptr		3616322	0					
ANR	3616466	Identifier	p		3616322	1					
ANR	3616467	ExpressionStatement	sz -= psz + 1	3935:2:116754:116767	3616322	3	True				
ANR	3616468	AssignmentExpression	sz -= psz + 1		3616322	0		-=			
ANR	3616469	Identifier	sz		3616322	0					
ANR	3616470	AdditiveExpression	psz + 1		3616322	1		+			
ANR	3616471	Identifier	psz		3616322	0					
ANR	3616472	PrimaryExpression	1		3616322	1					
ANR	3616473	IfStatement	if ( sz > 1 )		3616322	4					
ANR	3616474	Condition	sz > 1	3936:6:116775:116780	3616322	0	True				
ANR	3616475	RelationalExpression	sz > 1		3616322	0		>			
ANR	3616476	Identifier	sz		3616322	0					
ANR	3616477	PrimaryExpression	1		3616322	1					
ANR	3616478	CompoundStatement		29:14:478:478	3616322	1					
ANR	3616479	ExpressionStatement	* ptr = '/'	3937:3:116788:116798	3616322	0	True				
ANR	3616480	AssignmentExpression	* ptr = '/'		3616322	0		=			
ANR	3616481	UnaryOperationExpression	* ptr		3616322	0					
ANR	3616482	UnaryOperator	*		3616322	0					
ANR	3616483	Identifier	ptr		3616322	1					
ANR	3616484	PrimaryExpression	'/'		3616322	1					
ANR	3616485	ExpressionStatement	ptr ++	3938:3:116803:116808	3616322	1	True				
ANR	3616486	PostIncDecOperationExpression	ptr ++		3616322	0					
ANR	3616487	Identifier	ptr		3616322	0					
ANR	3616488	IncDec	++		3616322	1					
ANR	3616489	Condition	sz > 0	3940:10:116824:116829	3616322	1	True				
ANR	3616490	RelationalExpression	sz > 0		3616322	0		>			
ANR	3616491	Identifier	sz		3616322	0					
ANR	3616492	PrimaryExpression	0		3616322	1					
ANR	3616493	ReturnStatement	return buf ;	3942:1:116835:116845	3616322	11	True				
ANR	3616494	Identifier	buf		3616322	0					
ANR	3616495	ReturnType	Elf_		3616322	1					
ANR	3616496	Identifier	( r_bin_elf_compiler )		3616322	2					
ANR	3616497	Identifier	r_bin_elf_compiler		3616322	3					
ANR	3616498	ParameterList	ELFOBJ * bin		3616322	4					
ANR	3616499	Parameter	ELFOBJ * bin	3908:31:116291:116301	3616322	0	True				
ANR	3616500	ParameterType	ELFOBJ *		3616322	0					
ANR	3616501	Identifier	bin		3616322	1					
ANR	3616502	CFGEntryNode	ENTRY		3616322		True				
ANR	3616503	CFGExitNode	EXIT		3616322		True				
ANR	3616504	Symbol	* section		3616322						
ANR	3616505	Symbol	malloc		3616322						
ANR	3616506	Symbol	bin -> b		3616322						
ANR	3616507	Symbol	* buf		3616322						
ANR	3616508	Symbol	NULL		3616322						
ANR	3616509	Symbol	bin		3616322						
ANR	3616510	Symbol	sz		3616322						
ANR	3616511	Symbol	get_section_by_name		3616322						
ANR	3616512	Symbol	strchr		3616322						
ANR	3616513	Symbol	section		3616322						
ANR	3616514	Symbol	off		3616322						
ANR	3616515	Symbol	* bin		3616322						
ANR	3616516	Symbol	* sz		3616322						
ANR	3616517	Symbol	ptr		3616322						
ANR	3616518	Symbol	p		3616322						
ANR	3616519	Symbol	buf		3616322						
ANR	3616520	Symbol	psz		3616322						
ANR	3616521	Symbol	r_buf_read_at		3616322						
ANR	3616522	Symbol	* ptr		3616322						
ANR	3616523	Symbol	section -> size		3616322						
ANR	3616524	Symbol	section -> offset		3616322						
