command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1391562	File	data/converged/CVE-2019-16718~_radare2/emit_x86.c								
ANR	1391563	DeclStmt									
ANR	1391564	Decl							char	char * [ ]	regs
ANR	1391565	DeclStmt									
ANR	1391566	Decl							char	char * [ ]	regs
ANR	1391567	Function	emit_init	35:0:801:997							
ANR	1391568	FunctionDef	emit_init (REgg * egg)		1391567	0					
ANR	1391569	CompoundStatement		35:34:835:997	1391567	0					
ANR	1391570	IfStatement	if ( attsyntax )		1391567	0					
ANR	1391571	Condition	attsyntax	37:4:871:879	1391567	0	True				
ANR	1391572	Identifier	attsyntax		1391567	0					
ANR	1391573	CompoundStatement		3:15:46:46	1391567	1					
ANR	1391574	Statement	r_egg_printf	38:1:885:896	1391567	0	True				
ANR	1391575	Statement	(	38:14:898:898	1391567	1	True				
ANR	1391576	Statement	egg	38:15:899:901	1391567	2	True				
ANR	1391577	Statement	","	38:18:902:902	1391567	3	True				
ANR	1391578	Statement	"""mov %%"""	38:20:904:911	1391567	4	True				
ANR	1391579	Statement	R_SP	38:29:913:916	1391567	5	True				
ANR	1391580	Statement	""", %%"""	38:34:918:923	1391567	6	True				
ANR	1391581	Statement	R_BP	38:41:925:928	1391567	7	True				
ANR	1391582	Statement	"""\\n"""	38:46:930:933	1391567	8	True				
ANR	1391583	Statement	)	38:50:934:934	1391567	9	True				
ANR	1391584	ExpressionStatement		38:51:935:935	1391567	10	True				
ANR	1391585	ElseStatement	else		1391567	0					
ANR	1391586	CompoundStatement		5:7:108:108	1391567	0					
ANR	1391587	Statement	r_egg_printf	40:1:947:958	1391567	0	True				
ANR	1391588	Statement	(	40:14:960:960	1391567	1	True				
ANR	1391589	Statement	egg	40:15:961:963	1391567	2	True				
ANR	1391590	Statement	","	40:18:964:964	1391567	3	True				
ANR	1391591	Statement	"""mov """	40:20:966:971	1391567	4	True				
ANR	1391592	Statement	R_BP	40:27:973:976	1391567	5	True				
ANR	1391593	Statement	""", """	40:32:978:981	1391567	6	True				
ANR	1391594	Statement	R_SP	40:37:983:986	1391567	7	True				
ANR	1391595	Statement	"""\\n"""	40:42:988:991	1391567	8	True				
ANR	1391596	Statement	)	40:46:992:992	1391567	9	True				
ANR	1391597	ExpressionStatement		40:47:993:993	1391567	10	True				
ANR	1391598	ReturnType	static void		1391567	1					
ANR	1391599	Identifier	emit_init		1391567	2					
ANR	1391600	ParameterList	REgg * egg		1391567	3					
ANR	1391601	Parameter	REgg * egg	35:23:824:832	1391567	0	True				
ANR	1391602	ParameterType	REgg *		1391567	0					
ANR	1391603	Identifier	egg		1391567	1					
ANR	1391604	CFGEntryNode	ENTRY		1391567		True				
ANR	1391605	CFGExitNode	EXIT		1391567		True				
ANR	1391606	Symbol	egg		1391567						
ANR	1391607	Symbol	attsyntax		1391567						
ANR	1391608	Function	emit_syscall	44:0:1000:1657							
ANR	1391609	FunctionDef	"emit_syscall (REgg * egg , int nargs)"		1391608	0					
ANR	1391610	CompoundStatement		44:49:1049:1657	1391608	0					
ANR	1391611	IdentifierDeclStatement	char p [ 512 ] ;	45:1:1052:1063	1391608	0	True				
ANR	1391612	IdentifierDecl	p [ 512 ]		1391608	0					
ANR	1391613	IdentifierDeclType	char [ 512 ]		1391608	0					
ANR	1391614	Identifier	p		1391608	1					
ANR	1391615	PrimaryExpression	512		1391608	2					
ANR	1391616	IfStatement	if ( attsyntax )		1391608	1					
ANR	1391617	Condition	attsyntax	46:5:1070:1078	1391608	0	True				
ANR	1391618	Identifier	attsyntax		1391608	0					
ANR	1391619	CompoundStatement		3:16:31:31	1391608	1					
ANR	1391620	Statement	return	47:2:1085:1090	1391608	0	True				
ANR	1391621	Statement	strdup	47:9:1092:1097	1391608	1	True				
ANR	1391622	Statement	(	47:16:1099:1099	1391608	2	True				
ANR	1391623	Statement	""": mov $`.arg`, %"""	47:17:1100:1117	1391608	3	True				
ANR	1391624	Statement	R_AX	47:36:1119:1122	1391608	4	True				
ANR	1391625	Statement	"""\\n: """	47:41:1124:1129	1391608	5	True				
ANR	1391626	Statement	SYSCALL_ATT	47:48:1131:1141	1391608	6	True				
ANR	1391627	Statement	"""\\n"""	47:60:1143:1146	1391608	7	True				
ANR	1391628	Statement	)	47:64:1147:1147	1391608	8	True				
ANR	1391629	ExpressionStatement		47:65:1148:1148	1391608	9	True				
ANR	1391630	SwitchStatement	switch ( egg -> os )		1391608	2					
ANR	1391631	Condition	egg -> os	49:9:1162:1168	1391608	0	True				
ANR	1391632	PtrMemberAccess	egg -> os		1391608	0					
ANR	1391633	Identifier	egg		1391608	0					
ANR	1391634	Identifier	os		1391608	1					
ANR	1391635	CompoundStatement		6:18:121:121	1391608	1					
ANR	1391636	Label	case R_EGG_OS_LINUX :	50:1:1174:1193	1391608	0	True				
ANR	1391637	Identifier	R_EGG_OS_LINUX		1391608	0					
ANR	1391638	Statement	strcpy	51:2:1197:1202	1391608	1	True				
ANR	1391639	Statement	(	51:9:1204:1204	1391608	2	True				
ANR	1391640	Statement	p	51:10:1205:1205	1391608	3	True				
ANR	1391641	Statement	","	51:11:1206:1206	1391608	4	True				
ANR	1391642	Statement	"""\\n : mov """	51:13:1208:1218	1391608	5	True				
ANR	1391643	Statement	R_AX	51:24:1219:1222	1391608	6	True				
ANR	1391644	Statement	""", `.arg`\\n : """	51:28:1223:1237	1391608	7	True				
ANR	1391645	Statement	SYSCALL_INTEL	51:43:1238:1250	1391608	8	True				
ANR	1391646	Statement	"""\\n"""	51:57:1252:1255	1391608	9	True				
ANR	1391647	Statement	)	51:61:1256:1256	1391608	10	True				
ANR	1391648	ExpressionStatement		51:62:1257:1257	1391608	11	True				
ANR	1391649	BreakStatement	break ;	52:2:1261:1266	1391608	12	True				
ANR	1391650	Label	case R_EGG_OS_OSX :	53:1:1269:1286	1391608	13	True				
ANR	1391651	Identifier	R_EGG_OS_OSX		1391608	0					
ANR	1391652	Label	case R_EGG_OS_MACOS :	54:1:1289:1308	1391608	14	True				
ANR	1391653	Identifier	R_EGG_OS_MACOS		1391608	0					
ANR	1391654	Label	case R_EGG_OS_DARWIN :	55:1:1311:1331	1391608	15	True				
ANR	1391655	Identifier	R_EGG_OS_DARWIN		1391608	0					
ANR	1391656	Statement	snprintf	57:2:1351:1358	1391608	16	True				
ANR	1391657	Statement	(	57:11:1360:1360	1391608	17	True				
ANR	1391658	Statement	p	57:12:1361:1361	1391608	18	True				
ANR	1391659	Statement	","	57:13:1362:1362	1391608	19	True				
ANR	1391660	Statement	sizeof	57:15:1364:1369	1391608	20	True				
ANR	1391661	Statement	(	57:22:1371:1371	1391608	21	True				
ANR	1391662	Statement	p	57:23:1372:1372	1391608	22	True				
ANR	1391663	Statement	)	57:24:1373:1373	1391608	23	True				
ANR	1391664	Statement	","	57:25:1374:1374	1391608	24	True				
ANR	1391665	Statement	"""\\n"""	57:27:1376:1379	1391608	25	True				
ANR	1391666	Statement	"""  : mov rax, `.arg`\\n"""	58:3:1384:1406	1391608	26	True				
ANR	1391667	Statement	"""  : syscall\\n"""	59:3:1411:1425	1391608	27	True				
ANR	1391668	Statement	)	59:18:1426:1426	1391608	28	True				
ANR	1391669	ExpressionStatement		59:19:1427:1427	1391608	29	True				
ANR	1391670	BreakStatement	break ;	68:2:1602:1607	1391608	30	True				
ANR	1391671	Label	default :	69:1:1610:1617	1391608	31	True				
ANR	1391672	Identifier	default		1391608	0					
ANR	1391673	ReturnStatement	return NULL ;	70:2:1621:1632	1391608	32	True				
ANR	1391674	Identifier	NULL		1391608	0					
ANR	1391675	ReturnStatement	return strdup ( p ) ;	72:1:1638:1655	1391608	3	True				
ANR	1391676	CallExpression	strdup ( p )		1391608	0					
ANR	1391677	Callee	strdup		1391608	0					
ANR	1391678	Identifier	strdup		1391608	0					
ANR	1391679	ArgumentList	p		1391608	1					
ANR	1391680	Argument	p		1391608	0					
ANR	1391681	Identifier	p		1391608	0					
ANR	1391682	ReturnType	static char *		1391608	1					
ANR	1391683	Identifier	emit_syscall		1391608	2					
ANR	1391684	ParameterList	"REgg * egg , int nargs"		1391608	3					
ANR	1391685	Parameter	REgg * egg	44:27:1027:1035	1391608	0	True				
ANR	1391686	ParameterType	REgg *		1391608	0					
ANR	1391687	Identifier	egg		1391608	1					
ANR	1391688	Parameter	int nargs	44:38:1038:1046	1391608	1	True				
ANR	1391689	ParameterType	int		1391608	0					
ANR	1391690	Identifier	nargs		1391608	1					
ANR	1391691	CFGEntryNode	ENTRY		1391608		True				
ANR	1391692	CFGExitNode	EXIT		1391608		True				
ANR	1391693	Symbol	nargs		1391608						
ANR	1391694	Symbol	p		1391608						
ANR	1391695	Symbol	* egg		1391608						
ANR	1391696	Symbol	NULL		1391608						
ANR	1391697	Symbol	egg		1391608						
ANR	1391698	Symbol	egg -> os		1391608						
ANR	1391699	Symbol	attsyntax		1391608						
ANR	1391700	Symbol	strdup		1391608						
ANR	1391701	Function	emit_frame	75:0:1660:1981							
ANR	1391702	FunctionDef	"emit_frame (REgg * egg , int sz)"		1391701	0					
ANR	1391703	CompoundStatement		75:43:1703:1981	1391701	0					
ANR	1391704	IfStatement	if ( sz < 1 )		1391701	0					
ANR	1391705	Condition	sz < 1	76:5:1710:1715	1391701	0	True				
ANR	1391706	RelationalExpression	sz < 1		1391701	0		<			
ANR	1391707	Identifier	sz		1391701	0					
ANR	1391708	PrimaryExpression	1		1391701	1					
ANR	1391709	CompoundStatement		2:13:14:14	1391701	1					
ANR	1391710	ReturnStatement	return ;	77:2:1722:1728	1391701	0	True				
ANR	1391711	IfStatement	if ( attsyntax )		1391701	1					
ANR	1391712	Condition	attsyntax	79:5:1738:1746	1391701	0	True				
ANR	1391713	Identifier	attsyntax		1391701	0					
ANR	1391714	CompoundStatement		5:16:45:45	1391701	1					
ANR	1391715	Statement	r_egg_printf	80:2:1753:1764	1391701	0	True				
ANR	1391716	Statement	(	80:15:1766:1766	1391701	1	True				
ANR	1391717	Statement	egg	80:16:1767:1769	1391701	2	True				
ANR	1391718	Statement	","	80:19:1770:1770	1391701	3	True				
ANR	1391719	Statement	"""  push %%"""	81:2:1774:1784	1391701	4	True				
ANR	1391720	Statement	R_BP	81:13:1785:1788	1391701	5	True				
ANR	1391721	Statement	"""\\n"""	81:17:1789:1792	1391701	6	True				
ANR	1391722	Statement	"""  mov %%"""	82:2:1796:1805	1391701	7	True				
ANR	1391723	Statement	R_SP	82:12:1806:1809	1391701	8	True				
ANR	1391724	Statement	""", %%"""	82:16:1810:1815	1391701	9	True				
ANR	1391725	Statement	R_BP	82:22:1816:1819	1391701	10	True				
ANR	1391726	Statement	"""\\n"""	82:26:1820:1823	1391701	11	True				
ANR	1391727	Statement	"""  sub $%d, %%"""	83:2:1827:1841	1391701	12	True				
ANR	1391728	Statement	R_SP	83:17:1842:1845	1391701	13	True				
ANR	1391729	Statement	"""\\n"""	83:21:1846:1849	1391701	14	True				
ANR	1391730	Statement	","	83:25:1850:1850	1391701	15	True				
ANR	1391731	Statement	sz	83:27:1852:1853	1391701	16	True				
ANR	1391732	Statement	)	83:29:1854:1854	1391701	17	True				
ANR	1391733	ExpressionStatement		83:30:1855:1855	1391701	18	True				
ANR	1391734	ElseStatement	else		1391701	0					
ANR	1391735	CompoundStatement		10:8:161:161	1391701	0					
ANR	1391736	Statement	r_egg_printf	85:2:1869:1880	1391701	0	True				
ANR	1391737	Statement	(	85:15:1882:1882	1391701	1	True				
ANR	1391738	Statement	egg	85:16:1883:1885	1391701	2	True				
ANR	1391739	Statement	","	85:19:1886:1886	1391701	3	True				
ANR	1391740	Statement	"""  push """	86:3:1891:1899	1391701	4	True				
ANR	1391741	Statement	R_BP	86:13:1901:1904	1391701	5	True				
ANR	1391742	Statement	"""\\n"""	86:18:1906:1909	1391701	6	True				
ANR	1391743	Statement	"""  mov """	87:3:1914:1921	1391701	7	True				
ANR	1391744	Statement	R_BP	87:12:1923:1926	1391701	8	True				
ANR	1391745	Statement	""", """	87:17:1928:1931	1391701	9	True				
ANR	1391746	Statement	R_SP	87:22:1933:1936	1391701	10	True				
ANR	1391747	Statement	"""\\n"""	87:27:1938:1941	1391701	11	True				
ANR	1391748	Statement	"""  sub """	88:3:1946:1953	1391701	12	True				
ANR	1391749	Statement	R_SP	88:12:1955:1958	1391701	13	True				
ANR	1391750	Statement	""", %d\\n"""	88:17:1960:1967	1391701	14	True				
ANR	1391751	Statement	","	88:25:1968:1968	1391701	15	True				
ANR	1391752	Statement	sz	89:3:1973:1974	1391701	16	True				
ANR	1391753	Statement	)	89:5:1975:1975	1391701	17	True				
ANR	1391754	ExpressionStatement		89:6:1976:1976	1391701	18	True				
ANR	1391755	ReturnType	static void		1391701	1					
ANR	1391756	Identifier	emit_frame		1391701	2					
ANR	1391757	ParameterList	"REgg * egg , int sz"		1391701	3					
ANR	1391758	Parameter	REgg * egg	75:24:1684:1692	1391701	0	True				
ANR	1391759	ParameterType	REgg *		1391701	0					
ANR	1391760	Identifier	egg		1391701	1					
ANR	1391761	Parameter	int sz	75:35:1695:1700	1391701	1	True				
ANR	1391762	ParameterType	int		1391701	0					
ANR	1391763	Identifier	sz		1391701	1					
ANR	1391764	CFGEntryNode	ENTRY		1391701		True				
ANR	1391765	CFGExitNode	EXIT		1391701		True				
ANR	1391766	Symbol	egg		1391701						
ANR	1391767	Symbol	sz		1391701						
ANR	1391768	Symbol	attsyntax		1391701						
ANR	1391769	Function	emit_frame_end	93:0:1984:2329							
ANR	1391770	FunctionDef	"emit_frame_end (REgg * egg , int sz , int ctx)"		1391769	0					
ANR	1391771	CompoundStatement		93:56:2040:2329	1391769	0					
ANR	1391772	IfStatement	if ( sz > 0 )		1391769	0					
ANR	1391773	Condition	sz > 0	94:5:2047:2050	1391769	0	True				
ANR	1391774	RelationalExpression	sz > 0		1391769	0		>			
ANR	1391775	Identifier	sz		1391769	0					
ANR	1391776	PrimaryExpression	0		1391769	1					
ANR	1391777	CompoundStatement		2:11:12:12	1391769	1					
ANR	1391778	IfStatement	if ( attsyntax )		1391769	0					
ANR	1391779	Condition	attsyntax	95:6:2061:2069	1391769	0	True				
ANR	1391780	Identifier	attsyntax		1391769	0					
ANR	1391781	CompoundStatement		3:17:31:31	1391769	1					
ANR	1391782	Statement	r_egg_printf	96:3:2077:2088	1391769	0	True				
ANR	1391783	Statement	(	96:16:2090:2090	1391769	1	True				
ANR	1391784	Statement	egg	96:17:2091:2093	1391769	2	True				
ANR	1391785	Statement	","	96:20:2094:2094	1391769	3	True				
ANR	1391786	Statement	"""  add $%d, %%"""	96:22:2096:2110	1391769	4	True				
ANR	1391787	Statement	R_SP	96:37:2111:2114	1391769	5	True				
ANR	1391788	Statement	"""\\n"""	96:41:2115:2118	1391769	6	True				
ANR	1391789	Statement	","	96:45:2119:2119	1391769	7	True				
ANR	1391790	Statement	sz	96:47:2121:2122	1391769	8	True				
ANR	1391791	Statement	)	96:49:2123:2123	1391769	9	True				
ANR	1391792	ExpressionStatement		96:50:2124:2124	1391769	10	True				
ANR	1391793	Statement	r_egg_printf	97:3:2129:2140	1391769	11	True				
ANR	1391794	Statement	(	97:16:2142:2142	1391769	12	True				
ANR	1391795	Statement	egg	97:17:2143:2145	1391769	13	True				
ANR	1391796	Statement	","	97:20:2146:2146	1391769	14	True				
ANR	1391797	Statement	"""  pop %%"""	97:22:2148:2157	1391769	15	True				
ANR	1391798	Statement	R_BP	97:32:2158:2161	1391769	16	True				
ANR	1391799	Statement	"""\\n"""	97:36:2162:2165	1391769	17	True				
ANR	1391800	Statement	)	97:40:2166:2166	1391769	18	True				
ANR	1391801	ExpressionStatement		97:41:2167:2167	1391769	19	True				
ANR	1391802	ElseStatement	else		1391769	0					
ANR	1391803	CompoundStatement		6:9:137:137	1391769	0					
ANR	1391804	Statement	r_egg_printf	99:3:2183:2194	1391769	0	True				
ANR	1391805	Statement	(	99:16:2196:2196	1391769	1	True				
ANR	1391806	Statement	egg	99:17:2197:2199	1391769	2	True				
ANR	1391807	Statement	","	99:20:2200:2200	1391769	3	True				
ANR	1391808	Statement	"""  add """	99:22:2202:2209	1391769	4	True				
ANR	1391809	Statement	R_SP	99:30:2210:2213	1391769	5	True				
ANR	1391810	Statement	""", %d\\n"""	99:34:2214:2221	1391769	6	True				
ANR	1391811	Statement	","	99:42:2222:2222	1391769	7	True				
ANR	1391812	Statement	sz	99:44:2224:2225	1391769	8	True				
ANR	1391813	Statement	)	99:46:2226:2226	1391769	9	True				
ANR	1391814	ExpressionStatement		99:47:2227:2227	1391769	10	True				
ANR	1391815	Statement	r_egg_printf	100:3:2232:2243	1391769	11	True				
ANR	1391816	Statement	(	100:16:2245:2245	1391769	12	True				
ANR	1391817	Statement	egg	100:17:2246:2248	1391769	13	True				
ANR	1391818	Statement	","	100:20:2249:2249	1391769	14	True				
ANR	1391819	Statement	"""  pop """	100:22:2251:2258	1391769	15	True				
ANR	1391820	Statement	R_BP	100:30:2259:2262	1391769	16	True				
ANR	1391821	Statement	"""\\n"""	100:34:2263:2266	1391769	17	True				
ANR	1391822	Statement	)	100:38:2267:2267	1391769	18	True				
ANR	1391823	ExpressionStatement		100:39:2268:2268	1391769	19	True				
ANR	1391824	IfStatement	if ( ctx > 0 )		1391769	1					
ANR	1391825	Condition	ctx > 0	103:5:2282:2288	1391769	0	True				
ANR	1391826	RelationalExpression	ctx > 0		1391769	0		>			
ANR	1391827	Identifier	ctx		1391769	0					
ANR	1391828	PrimaryExpression	0		1391769	1					
ANR	1391829	CompoundStatement		11:14:250:250	1391769	1					
ANR	1391830	ExpressionStatement	"r_egg_printf ( egg , ""  ret\\n"" )"	104:2:2295:2324	1391769	0	True				
ANR	1391831	CallExpression	"r_egg_printf ( egg , ""  ret\\n"" )"		1391769	0					
ANR	1391832	Callee	r_egg_printf		1391769	0					
ANR	1391833	Identifier	r_egg_printf		1391769	0					
ANR	1391834	ArgumentList	egg		1391769	1					
ANR	1391835	Argument	egg		1391769	0					
ANR	1391836	Identifier	egg		1391769	0					
ANR	1391837	Argument	"""  ret\\n"""		1391769	1					
ANR	1391838	PrimaryExpression	"""  ret\\n"""		1391769	0					
ANR	1391839	ReturnType	static void		1391769	1					
ANR	1391840	Identifier	emit_frame_end		1391769	2					
ANR	1391841	ParameterList	"REgg * egg , int sz , int ctx"		1391769	3					
ANR	1391842	Parameter	REgg * egg	93:28:2012:2020	1391769	0	True				
ANR	1391843	ParameterType	REgg *		1391769	0					
ANR	1391844	Identifier	egg		1391769	1					
ANR	1391845	Parameter	int sz	93:39:2023:2028	1391769	1	True				
ANR	1391846	ParameterType	int		1391769	0					
ANR	1391847	Identifier	sz		1391769	1					
ANR	1391848	Parameter	int ctx	93:47:2031:2037	1391769	2	True				
ANR	1391849	ParameterType	int		1391769	0					
ANR	1391850	Identifier	ctx		1391769	1					
ANR	1391851	CFGEntryNode	ENTRY		1391769		True				
ANR	1391852	CFGExitNode	EXIT		1391769		True				
ANR	1391853	Symbol	egg		1391769						
ANR	1391854	Symbol	ctx		1391769						
ANR	1391855	Symbol	sz		1391769						
ANR	1391856	Symbol	attsyntax		1391769						
ANR	1391857	Function	emit_comment	108:0:2332:2609							
ANR	1391858	FunctionDef	"emit_comment (REgg * egg , const char * fmt)"		1391857	0					
ANR	1391859	CompoundStatement		108:58:2390:2609	1391857	0					
ANR	1391860	IdentifierDeclStatement	va_list ap ;	109:1:2393:2403	1391857	0	True				
ANR	1391861	IdentifierDecl	ap		1391857	0					
ANR	1391862	IdentifierDeclType	va_list		1391857	0					
ANR	1391863	Identifier	ap		1391857	1					
ANR	1391864	IdentifierDeclStatement	char buf [ 1024 ] ;	110:1:2406:2420	1391857	1	True				
ANR	1391865	IdentifierDecl	buf [ 1024 ]		1391857	0					
ANR	1391866	IdentifierDeclType	char [ 1024 ]		1391857	0					
ANR	1391867	Identifier	buf		1391857	1					
ANR	1391868	PrimaryExpression	1024		1391857	2					
ANR	1391869	ExpressionStatement	"va_start ( ap , fmt )"	111:1:2423:2441	1391857	2	True				
ANR	1391870	CallExpression	"va_start ( ap , fmt )"		1391857	0					
ANR	1391871	Callee	va_start		1391857	0					
ANR	1391872	Identifier	va_start		1391857	0					
ANR	1391873	ArgumentList	ap		1391857	1					
ANR	1391874	Argument	ap		1391857	0					
ANR	1391875	Identifier	ap		1391857	0					
ANR	1391876	Argument	fmt		1391857	1					
ANR	1391877	Identifier	fmt		1391857	0					
ANR	1391878	ExpressionStatement	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"	112:1:2444:2482	1391857	3	True				
ANR	1391879	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		1391857	0					
ANR	1391880	Callee	vsnprintf		1391857	0					
ANR	1391881	Identifier	vsnprintf		1391857	0					
ANR	1391882	ArgumentList	buf		1391857	1					
ANR	1391883	Argument	buf		1391857	0					
ANR	1391884	Identifier	buf		1391857	0					
ANR	1391885	Argument	sizeof ( buf )		1391857	1					
ANR	1391886	SizeofExpression	sizeof ( buf )		1391857	0					
ANR	1391887	Sizeof	sizeof		1391857	0					
ANR	1391888	SizeofOperand	buf		1391857	1					
ANR	1391889	Argument	fmt		1391857	2					
ANR	1391890	Identifier	fmt		1391857	0					
ANR	1391891	Argument	ap		1391857	3					
ANR	1391892	Identifier	ap		1391857	0					
ANR	1391893	IfStatement	if ( attsyntax )		1391857	4					
ANR	1391894	Condition	attsyntax	113:5:2489:2497	1391857	0	True				
ANR	1391895	Identifier	attsyntax		1391857	0					
ANR	1391896	CompoundStatement		6:16:109:109	1391857	1					
ANR	1391897	ExpressionStatement	"r_egg_printf ( egg , ""  /* %s */\\n"" , buf )"	114:2:2504:2543	1391857	0	True				
ANR	1391898	CallExpression	"r_egg_printf ( egg , ""  /* %s */\\n"" , buf )"		1391857	0					
ANR	1391899	Callee	r_egg_printf		1391857	0					
ANR	1391900	Identifier	r_egg_printf		1391857	0					
ANR	1391901	ArgumentList	egg		1391857	1					
ANR	1391902	Argument	egg		1391857	0					
ANR	1391903	Identifier	egg		1391857	0					
ANR	1391904	Argument	"""  /* %s */\\n"""		1391857	1					
ANR	1391905	PrimaryExpression	"""  /* %s */\\n"""		1391857	0					
ANR	1391906	Argument	buf		1391857	2					
ANR	1391907	Identifier	buf		1391857	0					
ANR	1391908	ElseStatement	else		1391857	0					
ANR	1391909	CompoundStatement		8:8:162:162	1391857	0					
ANR	1391910	ExpressionStatement	"r_egg_printf ( egg , ""# %s\\n"" , buf )"	116:2:2557:2590	1391857	0	True				
ANR	1391911	CallExpression	"r_egg_printf ( egg , ""# %s\\n"" , buf )"		1391857	0					
ANR	1391912	Callee	r_egg_printf		1391857	0					
ANR	1391913	Identifier	r_egg_printf		1391857	0					
ANR	1391914	ArgumentList	egg		1391857	1					
ANR	1391915	Argument	egg		1391857	0					
ANR	1391916	Identifier	egg		1391857	0					
ANR	1391917	Argument	"""# %s\\n"""		1391857	1					
ANR	1391918	PrimaryExpression	"""# %s\\n"""		1391857	0					
ANR	1391919	Argument	buf		1391857	2					
ANR	1391920	Identifier	buf		1391857	0					
ANR	1391921	ExpressionStatement	va_end ( ap )	118:1:2596:2607	1391857	5	True				
ANR	1391922	CallExpression	va_end ( ap )		1391857	0					
ANR	1391923	Callee	va_end		1391857	0					
ANR	1391924	Identifier	va_end		1391857	0					
ANR	1391925	ArgumentList	ap		1391857	1					
ANR	1391926	Argument	ap		1391857	0					
ANR	1391927	Identifier	ap		1391857	0					
ANR	1391928	ReturnType	static void		1391857	1					
ANR	1391929	Identifier	emit_comment		1391857	2					
ANR	1391930	ParameterList	"REgg * egg , const char * fmt"		1391857	3					
ANR	1391931	Parameter	REgg * egg	108:25:2357:2365	1391857	0	True				
ANR	1391932	ParameterType	REgg *		1391857	0					
ANR	1391933	Identifier	egg		1391857	1					
ANR	1391934	Parameter	const char * fmt	108:36:2368:2382	1391857	1	True				
ANR	1391935	ParameterType	const char *		1391857	0					
ANR	1391936	Identifier	fmt		1391857	1					
ANR	1391937	CFGEntryNode	ENTRY		1391857		True				
ANR	1391938	CFGExitNode	EXIT		1391857		True				
ANR	1391939	Symbol	buf		1391857						
ANR	1391940	Symbol	egg		1391857						
ANR	1391941	Symbol	attsyntax		1391857						
ANR	1391942	Symbol	fmt		1391857						
ANR	1391943	Symbol	ap		1391857						
ANR	1391944	Function	emit_equ	121:0:2612:2732							
ANR	1391945	FunctionDef	"emit_equ (REgg * egg , const char * key , const char * value)"		1391944	0					
ANR	1391946	CompoundStatement		121:69:2681:2732	1391944	0					
ANR	1391947	ExpressionStatement	"r_egg_printf ( egg , "".equ %s,%s\\n"" , key , value )"	122:1:2684:2730	1391944	0	True				
ANR	1391948	CallExpression	"r_egg_printf ( egg , "".equ %s,%s\\n"" , key , value )"		1391944	0					
ANR	1391949	Callee	r_egg_printf		1391944	0					
ANR	1391950	Identifier	r_egg_printf		1391944	0					
ANR	1391951	ArgumentList	egg		1391944	1					
ANR	1391952	Argument	egg		1391944	0					
ANR	1391953	Identifier	egg		1391944	0					
ANR	1391954	Argument	""".equ %s,%s\\n"""		1391944	1					
ANR	1391955	PrimaryExpression	""".equ %s,%s\\n"""		1391944	0					
ANR	1391956	Argument	key		1391944	2					
ANR	1391957	Identifier	key		1391944	0					
ANR	1391958	Argument	value		1391944	3					
ANR	1391959	Identifier	value		1391944	0					
ANR	1391960	ReturnType	static void		1391944	1					
ANR	1391961	Identifier	emit_equ		1391944	2					
ANR	1391962	ParameterList	"REgg * egg , const char * key , const char * value"		1391944	3					
ANR	1391963	Parameter	REgg * egg	121:22:2634:2642	1391944	0	True				
ANR	1391964	ParameterType	REgg *		1391944	0					
ANR	1391965	Identifier	egg		1391944	1					
ANR	1391966	Parameter	const char * key	121:33:2645:2659	1391944	1	True				
ANR	1391967	ParameterType	const char *		1391944	0					
ANR	1391968	Identifier	key		1391944	1					
ANR	1391969	Parameter	const char * value	121:50:2662:2678	1391944	2	True				
ANR	1391970	ParameterType	const char *		1391944	0					
ANR	1391971	Identifier	value		1391944	1					
ANR	1391972	CFGEntryNode	ENTRY		1391944		True				
ANR	1391973	CFGExitNode	EXIT		1391944		True				
ANR	1391974	Symbol	egg		1391944						
ANR	1391975	Symbol	value		1391944						
ANR	1391976	Symbol	key		1391944						
ANR	1391977	Function	getreg	125:0:2735:2833							
ANR	1391978	FunctionDef	getreg (int i)		1391977	0					
ANR	1391979	CompoundStatement		125:33:2768:2833	1391977	0					
ANR	1391980	IfStatement	if ( i < 0 || i >= R_NGP )		1391977	0					
ANR	1391981	Condition	i < 0 || i >= R_NGP	126:5:2775:2793	1391977	0	True				
ANR	1391982	OrExpression	i < 0 || i >= R_NGP		1391977	0		||			
ANR	1391983	RelationalExpression	i < 0		1391977	0		<			
ANR	1391984	Identifier	i		1391977	0					
ANR	1391985	PrimaryExpression	0		1391977	1					
ANR	1391986	RelationalExpression	i >= R_NGP		1391977	1		>=			
ANR	1391987	Identifier	i		1391977	0					
ANR	1391988	Identifier	R_NGP		1391977	1					
ANR	1391989	CompoundStatement		2:26:27:27	1391977	1					
ANR	1391990	ReturnStatement	return NULL ;	127:2:2800:2811	1391977	0	True				
ANR	1391991	Identifier	NULL		1391977	0					
ANR	1391992	ReturnStatement	return regs [ i ] ;	129:1:2817:2831	1391977	1	True				
ANR	1391993	ArrayIndexing	regs [ i ]		1391977	0					
ANR	1391994	Identifier	regs		1391977	0					
ANR	1391995	Identifier	i		1391977	1					
ANR	1391996	ReturnType	static const char *		1391977	1					
ANR	1391997	Identifier	getreg		1391977	2					
ANR	1391998	ParameterList	int i		1391977	3					
ANR	1391999	Parameter	int i	125:26:2761:2765	1391977	0	True				
ANR	1392000	ParameterType	int		1391977	0					
ANR	1392001	Identifier	i		1391977	1					
ANR	1392002	CFGEntryNode	ENTRY		1391977		True				
ANR	1392003	CFGExitNode	EXIT		1391977		True				
ANR	1392004	Symbol	NULL		1391977						
ANR	1392005	Symbol	* i		1391977						
ANR	1392006	Symbol	R_NGP		1391977						
ANR	1392007	Symbol	* regs		1391977						
ANR	1392008	Symbol	i		1391977						
ANR	1392009	Symbol	regs		1391977						
ANR	1392010	Function	emit_syscall_args	132:0:2836:3383							
ANR	1392011	FunctionDef	"emit_syscall_args (REgg * egg , int nargs)"		1392010	0					
ANR	1392012	CompoundStatement		132:52:2888:3383	1392010	0					
ANR	1392013	IdentifierDeclStatement	"int j , k ;"	133:1:2891:2899	1392010	0	True				
ANR	1392014	IdentifierDecl	j		1392010	0					
ANR	1392015	IdentifierDeclType	int		1392010	0					
ANR	1392016	Identifier	j		1392010	1					
ANR	1392017	IdentifierDecl	k		1392010	1					
ANR	1392018	IdentifierDeclType	int		1392010	0					
ANR	1392019	Identifier	k		1392010	1					
ANR	1392020	ForStatement	for ( j = 0 ; j < nargs ; j ++ )		1392010	1					
ANR	1392021	ForInit	j = 0 ;	134:6:2907:2912	1392010	0	True				
ANR	1392022	AssignmentExpression	j = 0		1392010	0		=			
ANR	1392023	Identifier	j		1392010	0					
ANR	1392024	PrimaryExpression	0		1392010	1					
ANR	1392025	Condition	j < nargs	134:13:2914:2922	1392010	1	True				
ANR	1392026	RelationalExpression	j < nargs		1392010	0		<			
ANR	1392027	Identifier	j		1392010	0					
ANR	1392028	Identifier	nargs		1392010	1					
ANR	1392029	PostIncDecOperationExpression	j ++	134:24:2925:2927	1392010	2	True				
ANR	1392030	Identifier	j		1392010	0					
ANR	1392031	IncDec	++		1392010	1					
ANR	1392032	CompoundStatement		5:2:61:93	1392010	3					
ANR	1392033	ExpressionStatement	k = j * R_SZ	135:2:2934:2946	1392010	0	True				
ANR	1392034	AssignmentExpression	k = j * R_SZ		1392010	0		=			
ANR	1392035	Identifier	k		1392010	0					
ANR	1392036	MultiplicativeExpression	j * R_SZ		1392010	1		*			
ANR	1392037	Identifier	j		1392010	0					
ANR	1392038	Identifier	R_SZ		1392010	1					
ANR	1392039	IdentifierDeclStatement	const char * reg = getreg ( j + 1 ) ;	136:2:2950:2982	1392010	1	True				
ANR	1392040	IdentifierDecl	* reg = getreg ( j + 1 )		1392010	0					
ANR	1392041	IdentifierDeclType	const char *		1392010	0					
ANR	1392042	Identifier	reg		1392010	1					
ANR	1392043	AssignmentExpression	* reg = getreg ( j + 1 )		1392010	2		=			
ANR	1392044	Identifier	reg		1392010	0					
ANR	1392045	CallExpression	getreg ( j + 1 )		1392010	1					
ANR	1392046	Callee	getreg		1392010	0					
ANR	1392047	Identifier	getreg		1392010	0					
ANR	1392048	ArgumentList	j + 1		1392010	1					
ANR	1392049	Argument	j + 1		1392010	0					
ANR	1392050	AdditiveExpression	j + 1		1392010	0		+			
ANR	1392051	Identifier	j		1392010	0					
ANR	1392052	PrimaryExpression	1		1392010	1					
ANR	1392053	IfStatement	if ( ! reg )		1392010	2					
ANR	1392054	Condition	! reg	137:6:2990:2993	1392010	0	True				
ANR	1392055	UnaryOperationExpression	! reg		1392010	0					
ANR	1392056	UnaryOperator	!		1392010	0					
ANR	1392057	Identifier	reg		1392010	1					
ANR	1392058	CompoundStatement		6:12:107:107	1392010	1					
ANR	1392059	ExpressionStatement	"eprintf ( ""Cannot find gpr %d\\n"" , j + 1 )"	138:3:3001:3040	1392010	0	True				
ANR	1392060	CallExpression	"eprintf ( ""Cannot find gpr %d\\n"" , j + 1 )"		1392010	0					
ANR	1392061	Callee	eprintf		1392010	0					
ANR	1392062	Identifier	eprintf		1392010	0					
ANR	1392063	ArgumentList	"""Cannot find gpr %d\\n"""		1392010	1					
ANR	1392064	Argument	"""Cannot find gpr %d\\n"""		1392010	0					
ANR	1392065	PrimaryExpression	"""Cannot find gpr %d\\n"""		1392010	0					
ANR	1392066	Argument	j + 1		1392010	1					
ANR	1392067	AdditiveExpression	j + 1		1392010	0		+			
ANR	1392068	Identifier	j		1392010	0					
ANR	1392069	PrimaryExpression	1		1392010	1					
ANR	1392070	BreakStatement	break ;	139:3:3045:3050	1392010	1	True				
ANR	1392071	IfStatement	if ( attsyntax )		1392010	3					
ANR	1392072	Condition	attsyntax	141:6:3062:3070	1392010	0	True				
ANR	1392073	Identifier	attsyntax		1392010	0					
ANR	1392074	CompoundStatement		10:17:184:184	1392010	1					
ANR	1392075	Statement	r_egg_printf	142:3:3078:3089	1392010	0	True				
ANR	1392076	Statement	(	142:16:3091:3091	1392010	1	True				
ANR	1392077	Statement	egg	142:17:3092:3094	1392010	2	True				
ANR	1392078	Statement	","	142:20:3095:3095	1392010	3	True				
ANR	1392079	Statement	"""  mov %d(%%"""	142:22:3097:3109	1392010	4	True				
ANR	1392080	Statement	R_SP	142:35:3110:3113	1392010	5	True				
ANR	1392081	Statement	"""), %%%s\\n"""	142:39:3114:3124	1392010	6	True				
ANR	1392082	Statement	","	142:50:3125:3125	1392010	7	True				
ANR	1392083	Statement	k	142:52:3127:3127	1392010	8	True				
ANR	1392084	Statement	","	142:53:3128:3128	1392010	9	True				
ANR	1392085	Statement	reg	142:55:3130:3132	1392010	10	True				
ANR	1392086	Statement	)	142:58:3133:3133	1392010	11	True				
ANR	1392087	ExpressionStatement		142:59:3134:3134	1392010	12	True				
ANR	1392088	ElseStatement	else		1392010	0					
ANR	1392089	CompoundStatement		12:9:256:256	1392010	0					
ANR	1392090	IfStatement	if ( k > 0 )		1392010	0					
ANR	1392091	Condition	k > 0	144:7:3154:3158	1392010	0	True				
ANR	1392092	RelationalExpression	k > 0		1392010	0		>			
ANR	1392093	Identifier	k		1392010	0					
ANR	1392094	PrimaryExpression	0		1392010	1					
ANR	1392095	CompoundStatement		13:14:272:272	1392010	1					
ANR	1392096	Statement	r_egg_printf	145:4:3167:3178	1392010	0	True				
ANR	1392097	Statement	(	145:17:3180:3180	1392010	1	True				
ANR	1392098	Statement	egg	145:18:3181:3183	1392010	2	True				
ANR	1392099	Statement	","	145:21:3184:3184	1392010	3	True				
ANR	1392100	Statement	"""  mov %s, ["""	145:23:3186:3198	1392010	4	True				
ANR	1392101	Statement	R_SP	145:36:3199:3202	1392010	5	True				
ANR	1392102	Statement	"""+%d]\\n"""	145:40:3203:3210	1392010	6	True				
ANR	1392103	Statement	","	145:48:3211:3211	1392010	7	True				
ANR	1392104	Statement	reg	145:50:3213:3215	1392010	8	True				
ANR	1392105	Statement	","	145:53:3216:3216	1392010	9	True				
ANR	1392106	Statement	k	145:55:3218:3218	1392010	10	True				
ANR	1392107	Statement	)	145:56:3219:3219	1392010	11	True				
ANR	1392108	ExpressionStatement		145:57:3220:3220	1392010	12	True				
ANR	1392109	ElseStatement	else		1392010	0					
ANR	1392110	IfStatement	if ( k < 0 )		1392010	0					
ANR	1392111	Condition	k < 0	146:14:3236:3240	1392010	0	True				
ANR	1392112	RelationalExpression	k < 0		1392010	0		<			
ANR	1392113	Identifier	k		1392010	0					
ANR	1392114	PrimaryExpression	0		1392010	1					
ANR	1392115	CompoundStatement		15:21:354:354	1392010	1					
ANR	1392116	Statement	r_egg_printf	147:4:3249:3260	1392010	0	True				
ANR	1392117	Statement	(	147:17:3262:3262	1392010	1	True				
ANR	1392118	Statement	egg	147:18:3263:3265	1392010	2	True				
ANR	1392119	Statement	","	147:21:3266:3266	1392010	3	True				
ANR	1392120	Statement	"""  mov %s, ["""	147:23:3268:3280	1392010	4	True				
ANR	1392121	Statement	R_SP	147:36:3281:3284	1392010	5	True				
ANR	1392122	Statement	"""%d]\\n"""	147:40:3285:3291	1392010	6	True				
ANR	1392123	Statement	","	147:47:3292:3292	1392010	7	True				
ANR	1392124	Statement	reg	147:49:3294:3296	1392010	8	True				
ANR	1392125	Statement	","	147:52:3297:3297	1392010	9	True				
ANR	1392126	Statement	k	147:54:3299:3299	1392010	10	True				
ANR	1392127	Statement	)	147:55:3300:3300	1392010	11	True				
ANR	1392128	ExpressionStatement		147:56:3301:3301	1392010	12	True				
ANR	1392129	ElseStatement	else		1392010	0					
ANR	1392130	CompoundStatement		17:10:424:424	1392010	0					
ANR	1392131	Statement	r_egg_printf	149:4:3319:3330	1392010	0	True				
ANR	1392132	Statement	(	149:17:3332:3332	1392010	1	True				
ANR	1392133	Statement	egg	149:18:3333:3335	1392010	2	True				
ANR	1392134	Statement	","	149:21:3336:3336	1392010	3	True				
ANR	1392135	Statement	"""  mov %s, ["""	149:23:3338:3350	1392010	4	True				
ANR	1392136	Statement	R_SP	149:36:3351:3354	1392010	5	True				
ANR	1392137	Statement	"""]\\n"""	149:40:3355:3359	1392010	6	True				
ANR	1392138	Statement	","	149:45:3360:3360	1392010	7	True				
ANR	1392139	Statement	reg	149:47:3362:3364	1392010	8	True				
ANR	1392140	Statement	","	149:50:3365:3365	1392010	9	True				
ANR	1392141	Statement	k	149:52:3367:3367	1392010	10	True				
ANR	1392142	Statement	)	149:53:3368:3368	1392010	11	True				
ANR	1392143	ExpressionStatement		149:54:3369:3369	1392010	12	True				
ANR	1392144	ReturnType	static void		1392010	1					
ANR	1392145	Identifier	emit_syscall_args		1392010	2					
ANR	1392146	ParameterList	"REgg * egg , int nargs"		1392010	3					
ANR	1392147	Parameter	REgg * egg	132:30:2866:2874	1392010	0	True				
ANR	1392148	ParameterType	REgg *		1392010	0					
ANR	1392149	Identifier	egg		1392010	1					
ANR	1392150	Parameter	int nargs	132:41:2877:2885	1392010	1	True				
ANR	1392151	ParameterType	int		1392010	0					
ANR	1392152	Identifier	nargs		1392010	1					
ANR	1392153	CFGEntryNode	ENTRY		1392010		True				
ANR	1392154	CFGExitNode	EXIT		1392010		True				
ANR	1392155	Symbol	nargs		1392010						
ANR	1392156	Symbol	R_SZ		1392010						
ANR	1392157	Symbol	egg		1392010						
ANR	1392158	Symbol	reg		1392010						
ANR	1392159	Symbol	getreg		1392010						
ANR	1392160	Symbol	attsyntax		1392010						
ANR	1392161	Symbol	j		1392010						
ANR	1392162	Symbol	k		1392010						
ANR	1392163	Function	emit_string	155:0:3386:5391							
ANR	1392164	FunctionDef	"emit_string (REgg * egg , const char * dstvar , const char * str , int j)"		1392163	0					
ANR	1392165	CompoundStatement		155:79:3465:5391	1392163	0					
ANR	1392166	IdentifierDeclStatement	"char * p , str2 [ 64 ] ;"	156:1:3468:3485	1392163	0	True				
ANR	1392167	IdentifierDecl	* p		1392163	0					
ANR	1392168	IdentifierDeclType	char *		1392163	0					
ANR	1392169	Identifier	p		1392163	1					
ANR	1392170	IdentifierDecl	str2 [ 64 ]		1392163	1					
ANR	1392171	IdentifierDeclType	char [ 64 ]		1392163	0					
ANR	1392172	Identifier	str2		1392163	1					
ANR	1392173	PrimaryExpression	64		1392163	2					
ANR	1392174	IdentifierDeclStatement	"int i , oj = j ;"	157:1:3488:3501	1392163	1	True				
ANR	1392175	IdentifierDecl	i		1392163	0					
ANR	1392176	IdentifierDeclType	int		1392163	0					
ANR	1392177	Identifier	i		1392163	1					
ANR	1392178	IdentifierDecl	oj = j		1392163	1					
ANR	1392179	IdentifierDeclType	int		1392163	0					
ANR	1392180	Identifier	oj		1392163	1					
ANR	1392181	AssignmentExpression	oj = j		1392163	2		=			
ANR	1392182	Identifier	j		1392163	0					
ANR	1392183	Identifier	j		1392163	1					
ANR	1392184	IdentifierDeclStatement	int len = strlen ( str ) ;	159:1:3505:3527	1392163	2	True				
ANR	1392185	IdentifierDecl	len = strlen ( str )		1392163	0					
ANR	1392186	IdentifierDeclType	int		1392163	0					
ANR	1392187	Identifier	len		1392163	1					
ANR	1392188	AssignmentExpression	len = strlen ( str )		1392163	2		=			
ANR	1392189	Identifier	len		1392163	0					
ANR	1392190	CallExpression	strlen ( str )		1392163	1					
ANR	1392191	Callee	strlen		1392163	0					
ANR	1392192	Identifier	strlen		1392163	0					
ANR	1392193	ArgumentList	str		1392163	1					
ANR	1392194	Argument	str		1392163	0					
ANR	1392195	Identifier	str		1392163	0					
ANR	1392196	IdentifierDeclStatement	"char * s = calloc ( 1 , len + 8 ) ;"	160:1:3530:3559	1392163	3	True				
ANR	1392197	IdentifierDecl	"* s = calloc ( 1 , len + 8 )"		1392163	0					
ANR	1392198	IdentifierDeclType	char *		1392163	0					
ANR	1392199	Identifier	s		1392163	1					
ANR	1392200	AssignmentExpression	"* s = calloc ( 1 , len + 8 )"		1392163	2		=			
ANR	1392201	Identifier	s		1392163	0					
ANR	1392202	CallExpression	"calloc ( 1 , len + 8 )"		1392163	1					
ANR	1392203	Callee	calloc		1392163	0					
ANR	1392204	Identifier	calloc		1392163	0					
ANR	1392205	ArgumentList	1		1392163	1					
ANR	1392206	Argument	1		1392163	0					
ANR	1392207	PrimaryExpression	1		1392163	0					
ANR	1392208	Argument	len + 8		1392163	1					
ANR	1392209	AdditiveExpression	len + 8		1392163	0		+			
ANR	1392210	Identifier	len		1392163	0					
ANR	1392211	PrimaryExpression	8		1392163	1					
ANR	1392212	IfStatement	if ( ! s )		1392163	4					
ANR	1392213	Condition	! s	161:5:3566:3567	1392163	0	True				
ANR	1392214	UnaryOperationExpression	! s		1392163	0					
ANR	1392215	UnaryOperator	!		1392163	0					
ANR	1392216	Identifier	s		1392163	1					
ANR	1392217	CompoundStatement		7:9:104:104	1392163	1					
ANR	1392218	ReturnStatement	return ;	162:2:3574:3580	1392163	0	True				
ANR	1392219	ExpressionStatement	"memcpy ( s , str , len )"	164:1:3586:3606	1392163	5	True				
ANR	1392220	CallExpression	"memcpy ( s , str , len )"		1392163	0					
ANR	1392221	Callee	memcpy		1392163	0					
ANR	1392222	Identifier	memcpy		1392163	0					
ANR	1392223	ArgumentList	s		1392163	1					
ANR	1392224	Argument	s		1392163	0					
ANR	1392225	Identifier	s		1392163	0					
ANR	1392226	Argument	str		1392163	1					
ANR	1392227	Identifier	str		1392163	0					
ANR	1392228	Argument	len		1392163	2					
ANR	1392229	Identifier	len		1392163	0					
ANR	1392230	ExpressionStatement	"memset ( s + len , 0 , 4 )"	165:1:3609:3631	1392163	6	True				
ANR	1392231	CallExpression	"memset ( s + len , 0 , 4 )"		1392163	0					
ANR	1392232	Callee	memset		1392163	0					
ANR	1392233	Identifier	memset		1392163	0					
ANR	1392234	ArgumentList	s + len		1392163	1					
ANR	1392235	Argument	s + len		1392163	0					
ANR	1392236	AdditiveExpression	s + len		1392163	0		+			
ANR	1392237	Identifier	s		1392163	0					
ANR	1392238	Identifier	len		1392163	1					
ANR	1392239	Argument	0		1392163	1					
ANR	1392240	PrimaryExpression	0		1392163	0					
ANR	1392241	Argument	4		1392163	2					
ANR	1392242	PrimaryExpression	4		1392163	0					
ANR	1392243	Statement	define	168:1:3703:3708	1392163	7	True				
ANR	1392244	Statement	BPOFF	168:8:3710:3714	1392163	8	True				
ANR	1392245	Statement	(	168:14:3716:3716	1392163	9	True				
ANR	1392246	Statement	R_SZ	168:15:3717:3720	1392163	10	True				
ANR	1392247	Statement	-	168:19:3721:3721	1392163	11	True				
ANR	1392248	Statement	4	168:20:3722:3722	1392163	12	True				
ANR	1392249	Statement	)	168:21:3723:3723	1392163	13	True				
ANR	1392250	Statement	define	169:1:3726:3731	1392163	14	True				
ANR	1392251	Statement	M32	169:8:3733:3735	1392163	15	True				
ANR	1392252	Statement	(	169:11:3736:3736	1392163	16	True				
ANR	1392253	Statement	x	169:12:3737:3737	1392163	17	True				
ANR	1392254	Statement	)	169:13:3738:3738	1392163	18	True				
ANR	1392255	Statement	(	169:15:3740:3740	1392163	19	True				
ANR	1392256	Statement	unsigned	169:16:3741:3748	1392163	20	True				
ANR	1392257	Statement	int	169:25:3750:3752	1392163	21	True				
ANR	1392258	Statement	)	169:28:3753:3753	1392163	22	True				
ANR	1392259	Statement	(	169:29:3754:3754	1392163	23	True				
ANR	1392260	Statement	(	169:30:3755:3755	1392163	24	True				
ANR	1392261	Statement	x	169:31:3756:3756	1392163	25	True				
ANR	1392262	Statement	)	169:32:3757:3757	1392163	26	True				
ANR	1392263	Statement	&	169:34:3759:3759	1392163	27	True				
ANR	1392264	Statement	0xffffffff	169:36:3761:3770	1392163	28	True				
ANR	1392265	Statement	)	169:46:3771:3771	1392163	29	True				
ANR	1392266	ForStatement	for ( i = 4 ; i <= oj ; i += 4 )		1392163	30					
ANR	1392267	ForInit	i = 4 ;	171:6:3817:3820	1392163	0	True				
ANR	1392268	AssignmentExpression	i = 4		1392163	0		=			
ANR	1392269	Identifier	i		1392163	0					
ANR	1392270	PrimaryExpression	4		1392163	1					
ANR	1392271	Condition	i <= oj	171:11:3822:3826	1392163	1	True				
ANR	1392272	RelationalExpression	i <= oj		1392163	0		<=			
ANR	1392273	Identifier	i		1392163	0					
ANR	1392274	Identifier	oj		1392163	1					
ANR	1392275	AssignmentExpression	i += 4	171:18:3829:3832	1392163	2	True	+=			
ANR	1392276	Identifier	i		1392163	0					
ANR	1392277	PrimaryExpression	4		1392163	1					
ANR	1392278	CompoundStatement		19:2:418:443	1392163	3					
ANR	1392279	IdentifierDeclStatement	ut32 * n = ( ut32 * ) ( s + i - 4 ) ;	173:2:3884:3909	1392163	0	True				
ANR	1392280	IdentifierDecl	* n = ( ut32 * ) ( s + i - 4 )		1392163	0					
ANR	1392281	IdentifierDeclType	ut32 *		1392163	0					
ANR	1392282	Identifier	n		1392163	1					
ANR	1392283	AssignmentExpression	* n = ( ut32 * ) ( s + i - 4 )		1392163	2		=			
ANR	1392284	Identifier	n		1392163	0					
ANR	1392285	CastExpression	( ut32 * ) ( s + i - 4 )		1392163	1					
ANR	1392286	CastTarget	ut32 *		1392163	0					
ANR	1392287	AdditiveExpression	s + i - 4		1392163	1		+			
ANR	1392288	Identifier	s		1392163	0					
ANR	1392289	AdditiveExpression	i - 4		1392163	1		-			
ANR	1392290	Identifier	i		1392163	0					
ANR	1392291	PrimaryExpression	4		1392163	1					
ANR	1392292	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"	174:2:3913:3957	1392163	1	True				
ANR	1392293	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		1392163	0		=			
ANR	1392294	Identifier	p		1392163	0					
ANR	1392295	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		1392163	1					
ANR	1392296	Callee	r_egg_mkvar		1392163	0					
ANR	1392297	Identifier	r_egg_mkvar		1392163	0					
ANR	1392298	ArgumentList	egg		1392163	1					
ANR	1392299	Argument	egg		1392163	0					
ANR	1392300	Identifier	egg		1392163	0					
ANR	1392301	Argument	str2		1392163	1					
ANR	1392302	Identifier	str2		1392163	0					
ANR	1392303	Argument	dstvar		1392163	2					
ANR	1392304	Identifier	dstvar		1392163	0					
ANR	1392305	Argument	i + BPOFF		1392163	3					
ANR	1392306	AdditiveExpression	i + BPOFF		1392163	0		+			
ANR	1392307	Identifier	i		1392163	0					
ANR	1392308	Identifier	BPOFF		1392163	1					
ANR	1392309	IfStatement	if ( attsyntax )		1392163	2					
ANR	1392310	Condition	attsyntax	175:6:3965:3973	1392163	0	True				
ANR	1392311	Identifier	attsyntax		1392163	0					
ANR	1392312	CompoundStatement		21:17:510:510	1392163	1					
ANR	1392313	ExpressionStatement	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , M32 ( * n ) , p )"	176:3:3981:4034	1392163	0	True				
ANR	1392314	CallExpression	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , M32 ( * n ) , p )"		1392163	0					
ANR	1392315	Callee	r_egg_printf		1392163	0					
ANR	1392316	Identifier	r_egg_printf		1392163	0					
ANR	1392317	ArgumentList	egg		1392163	1					
ANR	1392318	Argument	egg		1392163	0					
ANR	1392319	Identifier	egg		1392163	0					
ANR	1392320	Argument	"""  movl $0x%x, %s\\n"""		1392163	1					
ANR	1392321	PrimaryExpression	"""  movl $0x%x, %s\\n"""		1392163	0					
ANR	1392322	Argument	M32 ( * n )		1392163	2					
ANR	1392323	CallExpression	M32 ( * n )		1392163	0					
ANR	1392324	Callee	M32		1392163	0					
ANR	1392325	Identifier	M32		1392163	0					
ANR	1392326	ArgumentList	* n		1392163	1					
ANR	1392327	Argument	* n		1392163	0					
ANR	1392328	UnaryOperationExpression	* n		1392163	0					
ANR	1392329	UnaryOperator	*		1392163	0					
ANR	1392330	Identifier	n		1392163	1					
ANR	1392331	Argument	p		1392163	3					
ANR	1392332	Identifier	p		1392163	0					
ANR	1392333	ElseStatement	else		1392163	0					
ANR	1392334	CompoundStatement		23:9:579:579	1392163	0					
ANR	1392335	ExpressionStatement	"r_egg_printf ( egg , ""  mov dword %s, 0x%x\\n"" , p , M32 ( * n ) )"	178:3:4050:4107	1392163	0	True				
ANR	1392336	CallExpression	"r_egg_printf ( egg , ""  mov dword %s, 0x%x\\n"" , p , M32 ( * n ) )"		1392163	0					
ANR	1392337	Callee	r_egg_printf		1392163	0					
ANR	1392338	Identifier	r_egg_printf		1392163	0					
ANR	1392339	ArgumentList	egg		1392163	1					
ANR	1392340	Argument	egg		1392163	0					
ANR	1392341	Identifier	egg		1392163	0					
ANR	1392342	Argument	"""  mov dword %s, 0x%x\\n"""		1392163	1					
ANR	1392343	PrimaryExpression	"""  mov dword %s, 0x%x\\n"""		1392163	0					
ANR	1392344	Argument	p		1392163	2					
ANR	1392345	Identifier	p		1392163	0					
ANR	1392346	Argument	M32 ( * n )		1392163	3					
ANR	1392347	CallExpression	M32 ( * n )		1392163	0					
ANR	1392348	Callee	M32		1392163	0					
ANR	1392349	Identifier	M32		1392163	0					
ANR	1392350	ArgumentList	* n		1392163	1					
ANR	1392351	Argument	* n		1392163	0					
ANR	1392352	UnaryOperationExpression	* n		1392163	0					
ANR	1392353	UnaryOperator	*		1392163	0					
ANR	1392354	Identifier	n		1392163	1					
ANR	1392355	ExpressionStatement	free ( p )	180:2:4115:4123	1392163	3	True				
ANR	1392356	CallExpression	free ( p )		1392163	0					
ANR	1392357	Callee	free		1392163	0					
ANR	1392358	Identifier	free		1392163	0					
ANR	1392359	ArgumentList	p		1392163	1					
ANR	1392360	Argument	p		1392163	0					
ANR	1392361	Identifier	p		1392163	0					
ANR	1392362	ExpressionStatement	j -= 4	181:2:4127:4133	1392163	4	True				
ANR	1392363	AssignmentExpression	j -= 4		1392163	0		-=			
ANR	1392364	Identifier	j		1392163	0					
ANR	1392365	PrimaryExpression	4		1392163	1					
ANR	1392366	IdentifierDeclStatement	"undef M32 p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF ) ;"	183:1:4139:4207	1392163	31	True				
ANR	1392367	IdentifierDecl	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		1392163	0					
ANR	1392368	IdentifierDeclType	undef M32		1392163	0					
ANR	1392369	Identifier	p		1392163	1					
ANR	1392370	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		1392163	2		=			
ANR	1392371	Identifier	p		1392163	0					
ANR	1392372	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , i + BPOFF )"		1392163	1					
ANR	1392373	Callee	r_egg_mkvar		1392163	0					
ANR	1392374	Identifier	r_egg_mkvar		1392163	0					
ANR	1392375	ArgumentList	egg		1392163	1					
ANR	1392376	Argument	egg		1392163	0					
ANR	1392377	Identifier	egg		1392163	0					
ANR	1392378	Argument	str2		1392163	1					
ANR	1392379	Identifier	str2		1392163	0					
ANR	1392380	Argument	dstvar		1392163	2					
ANR	1392381	Identifier	dstvar		1392163	0					
ANR	1392382	Argument	i + BPOFF		1392163	3					
ANR	1392383	AdditiveExpression	i + BPOFF		1392163	0		+			
ANR	1392384	Identifier	i		1392163	0					
ANR	1392385	Identifier	BPOFF		1392163	1					
ANR	1392386	IfStatement	if ( attsyntax )		1392163	32					
ANR	1392387	Condition	attsyntax	187:5:4214:4222	1392163	0	True				
ANR	1392388	Identifier	attsyntax		1392163	0					
ANR	1392389	CompoundStatement		33:16:759:759	1392163	1					
ANR	1392390	ExpressionStatement	"r_egg_printf ( egg , ""  movl $0, %s\\n"" , p )"	188:2:4229:4269	1392163	0	True				
ANR	1392391	CallExpression	"r_egg_printf ( egg , ""  movl $0, %s\\n"" , p )"		1392163	0					
ANR	1392392	Callee	r_egg_printf		1392163	0					
ANR	1392393	Identifier	r_egg_printf		1392163	0					
ANR	1392394	ArgumentList	egg		1392163	1					
ANR	1392395	Argument	egg		1392163	0					
ANR	1392396	Identifier	egg		1392163	0					
ANR	1392397	Argument	"""  movl $0, %s\\n"""		1392163	1					
ANR	1392398	PrimaryExpression	"""  movl $0, %s\\n"""		1392163	0					
ANR	1392399	Argument	p		1392163	2					
ANR	1392400	Identifier	p		1392163	0					
ANR	1392401	ElseStatement	else		1392163	0					
ANR	1392402	CompoundStatement		35:8:813:813	1392163	0					
ANR	1392403	ExpressionStatement	"r_egg_printf ( egg , ""  mov dword %s, 0\\n"" , p )"	190:2:4283:4327	1392163	0	True				
ANR	1392404	CallExpression	"r_egg_printf ( egg , ""  mov dword %s, 0\\n"" , p )"		1392163	0					
ANR	1392405	Callee	r_egg_printf		1392163	0					
ANR	1392406	Identifier	r_egg_printf		1392163	0					
ANR	1392407	ArgumentList	egg		1392163	1					
ANR	1392408	Argument	egg		1392163	0					
ANR	1392409	Identifier	egg		1392163	0					
ANR	1392410	Argument	"""  mov dword %s, 0\\n"""		1392163	1					
ANR	1392411	PrimaryExpression	"""  mov dword %s, 0\\n"""		1392163	0					
ANR	1392412	Argument	p		1392163	2					
ANR	1392413	Identifier	p		1392163	0					
ANR	1392414	ExpressionStatement	free ( p )	192:1:4333:4341	1392163	33	True				
ANR	1392415	CallExpression	free ( p )		1392163	0					
ANR	1392416	Callee	free		1392163	0					
ANR	1392417	Identifier	free		1392163	0					
ANR	1392418	ArgumentList	p		1392163	1					
ANR	1392419	Argument	p		1392163	0					
ANR	1392420	Identifier	p		1392163	0					
ANR	1392421	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , j + 4 + BPOFF )"	195:1:4366:4412	1392163	34	True				
ANR	1392422	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , j + 4 + BPOFF )"		1392163	0		=			
ANR	1392423	Identifier	p		1392163	0					
ANR	1392424	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , j + 4 + BPOFF )"		1392163	1					
ANR	1392425	Callee	r_egg_mkvar		1392163	0					
ANR	1392426	Identifier	r_egg_mkvar		1392163	0					
ANR	1392427	ArgumentList	egg		1392163	1					
ANR	1392428	Argument	egg		1392163	0					
ANR	1392429	Identifier	egg		1392163	0					
ANR	1392430	Argument	str2		1392163	1					
ANR	1392431	Identifier	str2		1392163	0					
ANR	1392432	Argument	dstvar		1392163	2					
ANR	1392433	Identifier	dstvar		1392163	0					
ANR	1392434	Argument	j + 4 + BPOFF		1392163	3					
ANR	1392435	AdditiveExpression	j + 4 + BPOFF		1392163	0		+			
ANR	1392436	Identifier	j		1392163	0					
ANR	1392437	AdditiveExpression	4 + BPOFF		1392163	1		+			
ANR	1392438	PrimaryExpression	4		1392163	0					
ANR	1392439	Identifier	BPOFF		1392163	1					
ANR	1392440	IfStatement	if ( attsyntax )		1392163	35					
ANR	1392441	Condition	attsyntax	196:5:4419:4427	1392163	0	True				
ANR	1392442	Identifier	attsyntax		1392163	0					
ANR	1392443	CompoundStatement		42:16:964:964	1392163	1					
ANR	1392444	Statement	r_egg_printf	197:2:4434:4445	1392163	0	True				
ANR	1392445	Statement	(	197:15:4447:4447	1392163	1	True				
ANR	1392446	Statement	egg	197:16:4448:4450	1392163	2	True				
ANR	1392447	Statement	","	197:19:4451:4451	1392163	3	True				
ANR	1392448	Statement	"""  lea %s, %%"""	197:21:4453:4466	1392163	4	True				
ANR	1392449	Statement	R_AX	197:36:4468:4471	1392163	5	True				
ANR	1392450	Statement	"""\\n"""	197:41:4473:4476	1392163	6	True				
ANR	1392451	Statement	","	197:45:4477:4477	1392163	7	True				
ANR	1392452	Statement	p	197:47:4479:4479	1392163	8	True				
ANR	1392453	Statement	)	197:48:4480:4480	1392163	9	True				
ANR	1392454	ExpressionStatement		197:49:4481:4481	1392163	10	True				
ANR	1392455	ElseStatement	else		1392163	0					
ANR	1392456	CompoundStatement		44:8:1025:1025	1392163	0					
ANR	1392457	Statement	r_egg_printf	199:2:4495:4506	1392163	0	True				
ANR	1392458	Statement	(	199:15:4508:4508	1392163	1	True				
ANR	1392459	Statement	egg	199:16:4509:4511	1392163	2	True				
ANR	1392460	Statement	","	199:19:4512:4512	1392163	3	True				
ANR	1392461	Statement	"""  lea """	199:21:4514:4521	1392163	4	True				
ANR	1392462	Statement	R_AX	199:30:4523:4526	1392163	5	True				
ANR	1392463	Statement	""", %s\\n"""	199:35:4528:4535	1392163	6	True				
ANR	1392464	Statement	","	199:43:4536:4536	1392163	7	True				
ANR	1392465	Statement	p	199:45:4538:4538	1392163	8	True				
ANR	1392466	Statement	)	199:46:4539:4539	1392163	9	True				
ANR	1392467	ExpressionStatement		199:47:4540:4540	1392163	10	True				
ANR	1392468	ExpressionStatement	free ( p )	201:1:4546:4554	1392163	36	True				
ANR	1392469	CallExpression	free ( p )		1392163	0					
ANR	1392470	Callee	free		1392163	0					
ANR	1392471	Identifier	free		1392163	0					
ANR	1392472	ArgumentList	p		1392163	1					
ANR	1392473	Argument	p		1392163	0					
ANR	1392474	Identifier	p		1392163	0					
ANR	1392475	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"	203:1:4558:4596	1392163	37	True				
ANR	1392476	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"		1392163	0		=			
ANR	1392477	Identifier	p		1392163	0					
ANR	1392478	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , 0 )"		1392163	1					
ANR	1392479	Callee	r_egg_mkvar		1392163	0					
ANR	1392480	Identifier	r_egg_mkvar		1392163	0					
ANR	1392481	ArgumentList	egg		1392163	1					
ANR	1392482	Argument	egg		1392163	0					
ANR	1392483	Identifier	egg		1392163	0					
ANR	1392484	Argument	str2		1392163	1					
ANR	1392485	Identifier	str2		1392163	0					
ANR	1392486	Argument	dstvar		1392163	2					
ANR	1392487	Identifier	dstvar		1392163	0					
ANR	1392488	Argument	0		1392163	3					
ANR	1392489	PrimaryExpression	0		1392163	0					
ANR	1392490	IfStatement	if ( attsyntax )		1392163	38					
ANR	1392491	Condition	attsyntax	204:5:4603:4611	1392163	0	True				
ANR	1392492	Identifier	attsyntax		1392163	0					
ANR	1392493	CompoundStatement		50:16:1148:1148	1392163	1					
ANR	1392494	Statement	r_egg_printf	205:2:4618:4629	1392163	0	True				
ANR	1392495	Statement	(	205:15:4631:4631	1392163	1	True				
ANR	1392496	Statement	egg	205:16:4632:4634	1392163	2	True				
ANR	1392497	Statement	","	205:19:4635:4635	1392163	3	True				
ANR	1392498	Statement	"""  mov %%"""	205:21:4637:4646	1392163	4	True				
ANR	1392499	Statement	R_AX	205:32:4648:4651	1392163	5	True				
ANR	1392500	Statement	""", %s\\n"""	205:37:4653:4660	1392163	6	True				
ANR	1392501	Statement	","	205:45:4661:4661	1392163	7	True				
ANR	1392502	Statement	p	205:47:4663:4663	1392163	8	True				
ANR	1392503	Statement	)	205:48:4664:4664	1392163	9	True				
ANR	1392504	ExpressionStatement		205:49:4665:4665	1392163	10	True				
ANR	1392505	ElseStatement	else		1392163	0					
ANR	1392506	CompoundStatement		52:8:1209:1209	1392163	0					
ANR	1392507	Statement	r_egg_printf	207:2:4679:4690	1392163	0	True				
ANR	1392508	Statement	(	207:15:4692:4692	1392163	1	True				
ANR	1392509	Statement	egg	207:16:4693:4695	1392163	2	True				
ANR	1392510	Statement	","	207:19:4696:4696	1392163	3	True				
ANR	1392511	Statement	"""  mov %s, """	207:21:4698:4709	1392163	4	True				
ANR	1392512	Statement	R_AX	207:34:4711:4714	1392163	5	True				
ANR	1392513	Statement	"""\\n"""	207:39:4716:4719	1392163	6	True				
ANR	1392514	Statement	","	207:43:4720:4720	1392163	7	True				
ANR	1392515	Statement	p	207:45:4722:4722	1392163	8	True				
ANR	1392516	Statement	)	207:46:4723:4723	1392163	9	True				
ANR	1392517	ExpressionStatement		207:47:4724:4724	1392163	10	True				
ANR	1392518	ExpressionStatement	free ( p )	209:1:4730:4738	1392163	39	True				
ANR	1392519	CallExpression	free ( p )		1392163	0					
ANR	1392520	Callee	free		1392163	0					
ANR	1392521	Identifier	free		1392163	0					
ANR	1392522	ArgumentList	p		1392163	1					
ANR	1392523	Argument	p		1392163	0					
ANR	1392524	Identifier	p		1392163	0					
ANR	1392525	Statement	undef	211:1:4742:4746	1392163	40	True				
ANR	1392526	Statement	BPOFF	211:7:4748:4752	1392163	41	True				
ANR	1392527	IdentifierDeclStatement	"char * p , str2 [ 64 ] ;"	213:1:4761:4778	1392163	42	True				
ANR	1392528	IdentifierDecl	* p		1392163	0					
ANR	1392529	IdentifierDeclType	char *		1392163	0					
ANR	1392530	Identifier	p		1392163	1					
ANR	1392531	IdentifierDecl	str2 [ 64 ]		1392163	1					
ANR	1392532	IdentifierDeclType	char [ 64 ]		1392163	0					
ANR	1392533	Identifier	str2		1392163	1					
ANR	1392534	PrimaryExpression	64		1392163	2					
ANR	1392535	IdentifierDeclStatement	"int i , oj = j ;"	214:1:4781:4794	1392163	43	True				
ANR	1392536	IdentifierDecl	i		1392163	0					
ANR	1392537	IdentifierDeclType	int		1392163	0					
ANR	1392538	Identifier	i		1392163	1					
ANR	1392539	IdentifierDecl	oj = j		1392163	1					
ANR	1392540	IdentifierDeclType	int		1392163	0					
ANR	1392541	Identifier	oj		1392163	1					
ANR	1392542	AssignmentExpression	oj = j		1392163	2		=			
ANR	1392543	Identifier	j		1392163	0					
ANR	1392544	Identifier	j		1392163	1					
ANR	1392545	ForStatement	for ( i = 0 ; i < oj ; i += 4 )		1392163	44					
ANR	1392546	ForInit	i = 0 ;	215:6:4802:4805	1392163	0	True				
ANR	1392547	AssignmentExpression	i = 0		1392163	0		=			
ANR	1392548	Identifier	i		1392163	0					
ANR	1392549	PrimaryExpression	0		1392163	1					
ANR	1392550	Condition	i < oj	215:11:4807:4810	1392163	1	True				
ANR	1392551	RelationalExpression	i < oj		1392163	0		<			
ANR	1392552	Identifier	i		1392163	0					
ANR	1392553	Identifier	oj		1392163	1					
ANR	1392554	AssignmentExpression	i += 4	215:17:4813:4816	1392163	2	True	+=			
ANR	1392555	Identifier	i		1392163	0					
ANR	1392556	PrimaryExpression	4		1392163	1					
ANR	1392557	CompoundStatement		63:2:1396:1419	1392163	3					
ANR	1392558	IdentifierDeclStatement	int * n = ( int * ) ( str + i ) ;	217:2:4862:4885	1392163	0	True				
ANR	1392559	IdentifierDecl	* n = ( int * ) ( str + i )		1392163	0					
ANR	1392560	IdentifierDeclType	int *		1392163	0					
ANR	1392561	Identifier	n		1392163	1					
ANR	1392562	AssignmentExpression	* n = ( int * ) ( str + i )		1392163	2		=			
ANR	1392563	Identifier	n		1392163	0					
ANR	1392564	CastExpression	( int * ) ( str + i )		1392163	1					
ANR	1392565	CastTarget	int *		1392163	0					
ANR	1392566	AdditiveExpression	str + i		1392163	1		+			
ANR	1392567	Identifier	str		1392163	0					
ANR	1392568	Identifier	i		1392163	1					
ANR	1392569	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , j )"	218:2:4889:4927	1392163	1	True				
ANR	1392570	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , j )"		1392163	0		=			
ANR	1392571	Identifier	p		1392163	0					
ANR	1392572	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , j )"		1392163	1					
ANR	1392573	Callee	r_egg_mkvar		1392163	0					
ANR	1392574	Identifier	r_egg_mkvar		1392163	0					
ANR	1392575	ArgumentList	egg		1392163	1					
ANR	1392576	Argument	egg		1392163	0					
ANR	1392577	Identifier	egg		1392163	0					
ANR	1392578	Argument	str2		1392163	1					
ANR	1392579	Identifier	str2		1392163	0					
ANR	1392580	Argument	dstvar		1392163	2					
ANR	1392581	Identifier	dstvar		1392163	0					
ANR	1392582	Argument	j		1392163	3					
ANR	1392583	Identifier	j		1392163	0					
ANR	1392584	IfStatement	if ( attsyntax )		1392163	2					
ANR	1392585	Condition	attsyntax	219:6:4935:4943	1392163	0	True				
ANR	1392586	Identifier	attsyntax		1392163	0					
ANR	1392587	ExpressionStatement	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , * n , p )"	219:17:4946:4993	1392163	1	True				
ANR	1392588	CallExpression	"r_egg_printf ( egg , ""  movl $0x%x, %s\\n"" , * n , p )"		1392163	0					
ANR	1392589	Callee	r_egg_printf		1392163	0					
ANR	1392590	Identifier	r_egg_printf		1392163	0					
ANR	1392591	ArgumentList	egg		1392163	1					
ANR	1392592	Argument	egg		1392163	0					
ANR	1392593	Identifier	egg		1392163	0					
ANR	1392594	Argument	"""  movl $0x%x, %s\\n"""		1392163	1					
ANR	1392595	PrimaryExpression	"""  movl $0x%x, %s\\n"""		1392163	0					
ANR	1392596	Argument	* n		1392163	2					
ANR	1392597	UnaryOperationExpression	* n		1392163	0					
ANR	1392598	UnaryOperator	*		1392163	0					
ANR	1392599	Identifier	n		1392163	1					
ANR	1392600	Argument	p		1392163	3					
ANR	1392601	Identifier	p		1392163	0					
ANR	1392602	ElseStatement	else		1392163	0					
ANR	1392603	ExpressionStatement	"r_egg_printf ( egg , ""  mov %s, 0x%x\\n"" , p , * n )"	220:7:5002:5047	1392163	0	True				
ANR	1392604	CallExpression	"r_egg_printf ( egg , ""  mov %s, 0x%x\\n"" , p , * n )"		1392163	0					
ANR	1392605	Callee	r_egg_printf		1392163	0					
ANR	1392606	Identifier	r_egg_printf		1392163	0					
ANR	1392607	ArgumentList	egg		1392163	1					
ANR	1392608	Argument	egg		1392163	0					
ANR	1392609	Identifier	egg		1392163	0					
ANR	1392610	Argument	"""  mov %s, 0x%x\\n"""		1392163	1					
ANR	1392611	PrimaryExpression	"""  mov %s, 0x%x\\n"""		1392163	0					
ANR	1392612	Argument	p		1392163	2					
ANR	1392613	Identifier	p		1392163	0					
ANR	1392614	Argument	* n		1392163	3					
ANR	1392615	UnaryOperationExpression	* n		1392163	0					
ANR	1392616	UnaryOperator	*		1392163	0					
ANR	1392617	Identifier	n		1392163	1					
ANR	1392618	ExpressionStatement	j -= 4	221:2:5051:5057	1392163	3	True				
ANR	1392619	AssignmentExpression	j -= 4		1392163	0		-=			
ANR	1392620	Identifier	j		1392163	0					
ANR	1392621	PrimaryExpression	4		1392163	1					
ANR	1392622	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , oj )"	223:1:5063:5102	1392163	45	True				
ANR	1392623	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , oj )"		1392163	0		=			
ANR	1392624	Identifier	p		1392163	0					
ANR	1392625	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , oj )"		1392163	1					
ANR	1392626	Callee	r_egg_mkvar		1392163	0					
ANR	1392627	Identifier	r_egg_mkvar		1392163	0					
ANR	1392628	ArgumentList	egg		1392163	1					
ANR	1392629	Argument	egg		1392163	0					
ANR	1392630	Identifier	egg		1392163	0					
ANR	1392631	Argument	str2		1392163	1					
ANR	1392632	Identifier	str2		1392163	0					
ANR	1392633	Argument	dstvar		1392163	2					
ANR	1392634	Identifier	dstvar		1392163	0					
ANR	1392635	Argument	oj		1392163	3					
ANR	1392636	Identifier	oj		1392163	0					
ANR	1392637	IfStatement	if ( attsyntax )		1392163	46					
ANR	1392638	Condition	attsyntax	224:5:5109:5117	1392163	0	True				
ANR	1392639	Identifier	attsyntax		1392163	0					
ANR	1392640	Statement	r_egg_printf	224:16:5120:5131	1392163	1	True				
ANR	1392641	ElseStatement	else		1392163	0					
ANR	1392642	Statement	r_egg_printf	225:6:5173:5184	1392163	0	True				
ANR	1392643	Statement	(	224:29:5133:5133	1392163	47	True				
ANR	1392644	Statement	egg	224:30:5134:5136	1392163	48	True				
ANR	1392645	Statement	","	224:33:5137:5137	1392163	49	True				
ANR	1392646	Statement	"""  lea %s, %%"""	224:35:5139:5152	1392163	50	True				
ANR	1392647	Statement	R_AX	224:49:5153:5156	1392163	51	True				
ANR	1392648	Statement	"""\\n"""	224:53:5157:5160	1392163	52	True				
ANR	1392649	Statement	","	224:57:5161:5161	1392163	53	True				
ANR	1392650	Statement	p	224:59:5163:5163	1392163	54	True				
ANR	1392651	Statement	)	224:60:5164:5164	1392163	55	True				
ANR	1392652	ExpressionStatement		224:61:5165:5165	1392163	56	True				
ANR	1392653	Statement	(	225:19:5186:5186	1392163	57	True				
ANR	1392654	Statement	egg	225:20:5187:5189	1392163	58	True				
ANR	1392655	Statement	","	225:23:5190:5190	1392163	59	True				
ANR	1392656	Statement	"""  lea """	225:25:5192:5199	1392163	60	True				
ANR	1392657	Statement	R_AX	225:33:5200:5203	1392163	61	True				
ANR	1392658	Statement	""", %s\\n"""	225:37:5204:5211	1392163	62	True				
ANR	1392659	Statement	","	225:45:5212:5212	1392163	63	True				
ANR	1392660	Statement	p	225:47:5214:5214	1392163	64	True				
ANR	1392661	Statement	)	225:48:5215:5215	1392163	65	True				
ANR	1392662	ExpressionStatement		225:49:5216:5216	1392163	66	True				
ANR	1392663	ExpressionStatement	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"	226:1:5219:5257	1392163	67	True				
ANR	1392664	AssignmentExpression	"p = r_egg_mkvar ( egg , str2 , dstvar , 0 )"		1392163	0		=			
ANR	1392665	Identifier	p		1392163	0					
ANR	1392666	CallExpression	"r_egg_mkvar ( egg , str2 , dstvar , 0 )"		1392163	1					
ANR	1392667	Callee	r_egg_mkvar		1392163	0					
ANR	1392668	Identifier	r_egg_mkvar		1392163	0					
ANR	1392669	ArgumentList	egg		1392163	1					
ANR	1392670	Argument	egg		1392163	0					
ANR	1392671	Identifier	egg		1392163	0					
ANR	1392672	Argument	str2		1392163	1					
ANR	1392673	Identifier	str2		1392163	0					
ANR	1392674	Argument	dstvar		1392163	2					
ANR	1392675	Identifier	dstvar		1392163	0					
ANR	1392676	Argument	0		1392163	3					
ANR	1392677	PrimaryExpression	0		1392163	0					
ANR	1392678	IfStatement	if ( attsyntax )		1392163	68					
ANR	1392679	Condition	attsyntax	227:5:5264:5272	1392163	0	True				
ANR	1392680	Identifier	attsyntax		1392163	0					
ANR	1392681	Statement	r_egg_printf	227:16:5275:5286	1392163	1	True				
ANR	1392682	ElseStatement	else		1392163	0					
ANR	1392683	Statement	r_egg_printf	228:6:5328:5339	1392163	0	True				
ANR	1392684	Statement	(	227:29:5288:5288	1392163	69	True				
ANR	1392685	Statement	egg	227:30:5289:5291	1392163	70	True				
ANR	1392686	Statement	","	227:33:5292:5292	1392163	71	True				
ANR	1392687	Statement	"""  mov %%"""	227:35:5294:5303	1392163	72	True				
ANR	1392688	Statement	R_AX	227:45:5304:5307	1392163	73	True				
ANR	1392689	Statement	""", %s\\n"""	227:49:5308:5315	1392163	74	True				
ANR	1392690	Statement	","	227:57:5316:5316	1392163	75	True				
ANR	1392691	Statement	p	227:59:5318:5318	1392163	76	True				
ANR	1392692	Statement	)	227:60:5319:5319	1392163	77	True				
ANR	1392693	ExpressionStatement		227:61:5320:5320	1392163	78	True				
ANR	1392694	Statement	(	228:19:5341:5341	1392163	79	True				
ANR	1392695	Statement	egg	228:20:5342:5344	1392163	80	True				
ANR	1392696	Statement	","	228:23:5345:5345	1392163	81	True				
ANR	1392697	Statement	"""  mov %s, """	228:25:5347:5358	1392163	82	True				
ANR	1392698	Statement	R_AX	228:37:5359:5362	1392163	83	True				
ANR	1392699	Statement	"""\\n"""	228:41:5363:5366	1392163	84	True				
ANR	1392700	Statement	","	228:45:5367:5367	1392163	85	True				
ANR	1392701	Statement	p	228:47:5369:5369	1392163	86	True				
ANR	1392702	Statement	)	228:48:5370:5370	1392163	87	True				
ANR	1392703	ExpressionStatement		228:49:5371:5371	1392163	88	True				
ANR	1392704	ExpressionStatement	free ( s )	230:1:5381:5389	1392163	89	True				
ANR	1392705	CallExpression	free ( s )		1392163	0					
ANR	1392706	Callee	free		1392163	0					
ANR	1392707	Identifier	free		1392163	0					
ANR	1392708	ArgumentList	s		1392163	1					
ANR	1392709	Argument	s		1392163	0					
ANR	1392710	Identifier	s		1392163	0					
ANR	1392711	ReturnType	static void		1392163	1					
ANR	1392712	Identifier	emit_string		1392163	2					
ANR	1392713	ParameterList	"REgg * egg , const char * dstvar , const char * str , int j"		1392163	3					
ANR	1392714	Parameter	REgg * egg	155:24:3410:3418	1392163	0	True				
ANR	1392715	ParameterType	REgg *		1392163	0					
ANR	1392716	Identifier	egg		1392163	1					
ANR	1392717	Parameter	const char * dstvar	155:35:3421:3438	1392163	1	True				
ANR	1392718	ParameterType	const char *		1392163	0					
ANR	1392719	Identifier	dstvar		1392163	1					
ANR	1392720	Parameter	const char * str	155:55:3441:3455	1392163	2	True				
ANR	1392721	ParameterType	const char *		1392163	0					
ANR	1392722	Identifier	str		1392163	1					
ANR	1392723	Parameter	int j	155:72:3458:3462	1392163	3	True				
ANR	1392724	ParameterType	int		1392163	0					
ANR	1392725	Identifier	j		1392163	1					
ANR	1392726	CFGEntryNode	ENTRY		1392163		True				
ANR	1392727	CFGExitNode	EXIT		1392163		True				
ANR	1392728	Symbol	r_egg_mkvar		1392163						
ANR	1392729	Symbol	egg		1392163						
ANR	1392730	Symbol	BPOFF		1392163						
ANR	1392731	Symbol	attsyntax		1392163						
ANR	1392732	Symbol	i		1392163						
ANR	1392733	Symbol	j		1392163						
ANR	1392734	Symbol	calloc		1392163						
ANR	1392735	Symbol	dstvar		1392163						
ANR	1392736	Symbol	M32		1392163						
ANR	1392737	Symbol	n		1392163						
ANR	1392738	Symbol	str		1392163						
ANR	1392739	Symbol	p		1392163						
ANR	1392740	Symbol	strlen		1392163						
ANR	1392741	Symbol	s		1392163						
ANR	1392742	Symbol	len		1392163						
ANR	1392743	Symbol	str2		1392163						
ANR	1392744	Symbol	* n		1392163						
ANR	1392745	Symbol	oj		1392163						
ANR	1392746	Function	emit_call	233:0:5394:5645							
ANR	1392747	FunctionDef	"emit_call (REgg * egg , const char * str , int atr)"		1392746	0					
ANR	1392748	CompoundStatement		233:59:5453:5645	1392746	0					
ANR	1392749	IfStatement	if ( atr )		1392746	0					
ANR	1392750	Condition	atr	234:5:5460:5462	1392746	0	True				
ANR	1392751	Identifier	atr		1392746	0					
ANR	1392752	CompoundStatement		2:10:11:11	1392746	1					
ANR	1392753	IfStatement	if ( attsyntax )		1392746	0					
ANR	1392754	Condition	attsyntax	235:6:5473:5481	1392746	0	True				
ANR	1392755	Identifier	attsyntax		1392746	0					
ANR	1392756	CompoundStatement		3:17:30:30	1392746	1					
ANR	1392757	ExpressionStatement	"r_egg_printf ( egg , ""  call *%s\\n"" , str )"	236:3:5489:5528	1392746	0	True				
ANR	1392758	CallExpression	"r_egg_printf ( egg , ""  call *%s\\n"" , str )"		1392746	0					
ANR	1392759	Callee	r_egg_printf		1392746	0					
ANR	1392760	Identifier	r_egg_printf		1392746	0					
ANR	1392761	ArgumentList	egg		1392746	1					
ANR	1392762	Argument	egg		1392746	0					
ANR	1392763	Identifier	egg		1392746	0					
ANR	1392764	Argument	"""  call *%s\\n"""		1392746	1					
ANR	1392765	PrimaryExpression	"""  call *%s\\n"""		1392746	0					
ANR	1392766	Argument	str		1392746	2					
ANR	1392767	Identifier	str		1392746	0					
ANR	1392768	ElseStatement	else		1392746	0					
ANR	1392769	CompoundStatement		5:9:85:85	1392746	0					
ANR	1392770	ExpressionStatement	"r_egg_printf ( egg , ""  call [%s]\\n"" , str )"	238:3:5544:5584	1392746	0	True				
ANR	1392771	CallExpression	"r_egg_printf ( egg , ""  call [%s]\\n"" , str )"		1392746	0					
ANR	1392772	Callee	r_egg_printf		1392746	0					
ANR	1392773	Identifier	r_egg_printf		1392746	0					
ANR	1392774	ArgumentList	egg		1392746	1					
ANR	1392775	Argument	egg		1392746	0					
ANR	1392776	Identifier	egg		1392746	0					
ANR	1392777	Argument	"""  call [%s]\\n"""		1392746	1					
ANR	1392778	PrimaryExpression	"""  call [%s]\\n"""		1392746	0					
ANR	1392779	Argument	str		1392746	2					
ANR	1392780	Identifier	str		1392746	0					
ANR	1392781	ElseStatement	else		1392746	0					
ANR	1392782	CompoundStatement		8:8:144:144	1392746	0					
ANR	1392783	ExpressionStatement	"r_egg_printf ( egg , ""  call %s\\n"" , str )"	241:2:5602:5640	1392746	0	True				
ANR	1392784	CallExpression	"r_egg_printf ( egg , ""  call %s\\n"" , str )"		1392746	0					
ANR	1392785	Callee	r_egg_printf		1392746	0					
ANR	1392786	Identifier	r_egg_printf		1392746	0					
ANR	1392787	ArgumentList	egg		1392746	1					
ANR	1392788	Argument	egg		1392746	0					
ANR	1392789	Identifier	egg		1392746	0					
ANR	1392790	Argument	"""  call %s\\n"""		1392746	1					
ANR	1392791	PrimaryExpression	"""  call %s\\n"""		1392746	0					
ANR	1392792	Argument	str		1392746	2					
ANR	1392793	Identifier	str		1392746	0					
ANR	1392794	ReturnType	static void		1392746	1					
ANR	1392795	Identifier	emit_call		1392746	2					
ANR	1392796	ParameterList	"REgg * egg , const char * str , int atr"		1392746	3					
ANR	1392797	Parameter	REgg * egg	233:22:5416:5424	1392746	0	True				
ANR	1392798	ParameterType	REgg *		1392746	0					
ANR	1392799	Identifier	egg		1392746	1					
ANR	1392800	Parameter	const char * str	233:33:5427:5441	1392746	1	True				
ANR	1392801	ParameterType	const char *		1392746	0					
ANR	1392802	Identifier	str		1392746	1					
ANR	1392803	Parameter	int atr	233:50:5444:5450	1392746	2	True				
ANR	1392804	ParameterType	int		1392746	0					
ANR	1392805	Identifier	atr		1392746	1					
ANR	1392806	CFGEntryNode	ENTRY		1392746		True				
ANR	1392807	CFGExitNode	EXIT		1392746		True				
ANR	1392808	Symbol	str		1392746						
ANR	1392809	Symbol	egg		1392746						
ANR	1392810	Symbol	attsyntax		1392746						
ANR	1392811	Symbol	atr		1392746						
ANR	1392812	Function	emit_jmp	245:0:5648:5971							
ANR	1392813	FunctionDef	"emit_jmp (REgg * egg , const char * str , int atr)"		1392812	0					
ANR	1392814	CompoundStatement		245:58:5706:5971	1392812	0					
ANR	1392815	IfStatement	if ( str )		1392812	0					
ANR	1392816	Condition	str	246:5:5713:5715	1392812	0	True				
ANR	1392817	Identifier	str		1392812	0					
ANR	1392818	CompoundStatement		2:10:11:11	1392812	1					
ANR	1392819	IfStatement	if ( atr )		1392812	0					
ANR	1392820	Condition	atr	247:6:5726:5728	1392812	0	True				
ANR	1392821	Identifier	atr		1392812	0					
ANR	1392822	CompoundStatement		3:11:24:24	1392812	1					
ANR	1392823	IfStatement	if ( attsyntax )		1392812	0					
ANR	1392824	Condition	attsyntax	248:7:5740:5748	1392812	0	True				
ANR	1392825	Identifier	attsyntax		1392812	0					
ANR	1392826	CompoundStatement		4:18:44:44	1392812	1					
ANR	1392827	ExpressionStatement	"r_egg_printf ( egg , ""  jmp *%s\\n"" , str )"	249:4:5757:5795	1392812	0	True				
ANR	1392828	CallExpression	"r_egg_printf ( egg , ""  jmp *%s\\n"" , str )"		1392812	0					
ANR	1392829	Callee	r_egg_printf		1392812	0					
ANR	1392830	Identifier	r_egg_printf		1392812	0					
ANR	1392831	ArgumentList	egg		1392812	1					
ANR	1392832	Argument	egg		1392812	0					
ANR	1392833	Identifier	egg		1392812	0					
ANR	1392834	Argument	"""  jmp *%s\\n"""		1392812	1					
ANR	1392835	PrimaryExpression	"""  jmp *%s\\n"""		1392812	0					
ANR	1392836	Argument	str		1392812	2					
ANR	1392837	Identifier	str		1392812	0					
ANR	1392838	ElseStatement	else		1392812	0					
ANR	1392839	CompoundStatement		6:10:100:100	1392812	0					
ANR	1392840	ExpressionStatement	"r_egg_printf ( egg , ""  jmp [%s]\\n"" , str )"	251:4:5813:5852	1392812	0	True				
ANR	1392841	CallExpression	"r_egg_printf ( egg , ""  jmp [%s]\\n"" , str )"		1392812	0					
ANR	1392842	Callee	r_egg_printf		1392812	0					
ANR	1392843	Identifier	r_egg_printf		1392812	0					
ANR	1392844	ArgumentList	egg		1392812	1					
ANR	1392845	Argument	egg		1392812	0					
ANR	1392846	Identifier	egg		1392812	0					
ANR	1392847	Argument	"""  jmp [%s]\\n"""		1392812	1					
ANR	1392848	PrimaryExpression	"""  jmp [%s]\\n"""		1392812	0					
ANR	1392849	Argument	str		1392812	2					
ANR	1392850	Identifier	str		1392812	0					
ANR	1392851	ElseStatement	else		1392812	0					
ANR	1392852	CompoundStatement		9:9:161:161	1392812	0					
ANR	1392853	ExpressionStatement	"r_egg_printf ( egg , ""  jmp %s\\n"" , str )"	254:3:5873:5910	1392812	0	True				
ANR	1392854	CallExpression	"r_egg_printf ( egg , ""  jmp %s\\n"" , str )"		1392812	0					
ANR	1392855	Callee	r_egg_printf		1392812	0					
ANR	1392856	Identifier	r_egg_printf		1392812	0					
ANR	1392857	ArgumentList	egg		1392812	1					
ANR	1392858	Argument	egg		1392812	0					
ANR	1392859	Identifier	egg		1392812	0					
ANR	1392860	Argument	"""  jmp %s\\n"""		1392812	1					
ANR	1392861	PrimaryExpression	"""  jmp %s\\n"""		1392812	0					
ANR	1392862	Argument	str		1392812	2					
ANR	1392863	Identifier	str		1392812	0					
ANR	1392864	ElseStatement	else		1392812	0					
ANR	1392865	CompoundStatement		12:8:217:217	1392812	0					
ANR	1392866	ExpressionStatement	"eprintf ( ""Jump without destination\\n"" )"	257:2:5928:5966	1392812	0	True				
ANR	1392867	CallExpression	"eprintf ( ""Jump without destination\\n"" )"		1392812	0					
ANR	1392868	Callee	eprintf		1392812	0					
ANR	1392869	Identifier	eprintf		1392812	0					
ANR	1392870	ArgumentList	"""Jump without destination\\n"""		1392812	1					
ANR	1392871	Argument	"""Jump without destination\\n"""		1392812	0					
ANR	1392872	PrimaryExpression	"""Jump without destination\\n"""		1392812	0					
ANR	1392873	ReturnType	static void		1392812	1					
ANR	1392874	Identifier	emit_jmp		1392812	2					
ANR	1392875	ParameterList	"REgg * egg , const char * str , int atr"		1392812	3					
ANR	1392876	Parameter	REgg * egg	245:21:5669:5677	1392812	0	True				
ANR	1392877	ParameterType	REgg *		1392812	0					
ANR	1392878	Identifier	egg		1392812	1					
ANR	1392879	Parameter	const char * str	245:32:5680:5694	1392812	1	True				
ANR	1392880	ParameterType	const char *		1392812	0					
ANR	1392881	Identifier	str		1392812	1					
ANR	1392882	Parameter	int atr	245:49:5697:5703	1392812	2	True				
ANR	1392883	ParameterType	int		1392812	0					
ANR	1392884	Identifier	atr		1392812	1					
ANR	1392885	CFGEntryNode	ENTRY		1392812		True				
ANR	1392886	CFGExitNode	EXIT		1392812		True				
ANR	1392887	Symbol	str		1392812						
ANR	1392888	Symbol	egg		1392812						
ANR	1392889	Symbol	attsyntax		1392812						
ANR	1392890	Symbol	atr		1392812						
ANR	1392891	Function	emit_arg	261:0:5974:7149							
ANR	1392892	FunctionDef	"emit_arg (REgg * egg , int xs , int num , const char * str)"		1392891	0					
ANR	1392893	CompoundStatement		261:67:6041:7149	1392891	0					
ANR	1392894	IdentifierDeclStatement	int d = atoi ( str ) ;	262:1:6044:6062	1392891	0	True				
ANR	1392895	IdentifierDecl	d = atoi ( str )		1392891	0					
ANR	1392896	IdentifierDeclType	int		1392891	0					
ANR	1392897	Identifier	d		1392891	1					
ANR	1392898	AssignmentExpression	d = atoi ( str )		1392891	2		=			
ANR	1392899	Identifier	d		1392891	0					
ANR	1392900	CallExpression	atoi ( str )		1392891	1					
ANR	1392901	Callee	atoi		1392891	0					
ANR	1392902	Identifier	atoi		1392891	0					
ANR	1392903	ArgumentList	str		1392891	1					
ANR	1392904	Argument	str		1392891	0					
ANR	1392905	Identifier	str		1392891	0					
ANR	1392906	IfStatement	if ( ! attsyntax && ( * str == '$' ) )		1392891	1					
ANR	1392907	Condition	! attsyntax && ( * str == '$' )	263:5:6069:6095	1392891	0	True				
ANR	1392908	AndExpression	! attsyntax && ( * str == '$' )		1392891	0		&&			
ANR	1392909	UnaryOperationExpression	! attsyntax		1392891	0					
ANR	1392910	UnaryOperator	!		1392891	0					
ANR	1392911	Identifier	attsyntax		1392891	1					
ANR	1392912	EqualityExpression	* str == '$'		1392891	1		==			
ANR	1392913	UnaryOperationExpression	* str		1392891	0					
ANR	1392914	UnaryOperator	*		1392891	0					
ANR	1392915	Identifier	str		1392891	1					
ANR	1392916	PrimaryExpression	'$'		1392891	1					
ANR	1392917	CompoundStatement		3:34:56:56	1392891	1					
ANR	1392918	ExpressionStatement	str = str + 1	264:2:6102:6115	1392891	0	True				
ANR	1392919	AssignmentExpression	str = str + 1		1392891	0		=			
ANR	1392920	Identifier	str		1392891	0					
ANR	1392921	AdditiveExpression	str + 1		1392891	1		+			
ANR	1392922	Identifier	str		1392891	0					
ANR	1392923	PrimaryExpression	1		1392891	1					
ANR	1392924	SwitchStatement	switch ( xs )		1392891	2					
ANR	1392925	Condition	xs	266:9:6129:6130	1392891	0	True				
ANR	1392926	Identifier	xs		1392891	0					
ANR	1392927	CompoundStatement		6:13:91:91	1392891	1					
ANR	1392928	Label	case 0 :	267:1:6136:6142	1392891	0	True				
ANR	1392929	IfStatement	if ( attsyntax )		1392891	1					
ANR	1392930	Condition	attsyntax	273:6:6277:6285	1392891	0	True				
ANR	1392931	Identifier	attsyntax		1392891	0					
ANR	1392932	CompoundStatement		13:17:246:246	1392891	1					
ANR	1392933	Statement	r_egg_printf	274:3:6293:6304	1392891	0	True				
ANR	1392934	Statement	(	274:16:6306:6306	1392891	1	True				
ANR	1392935	Statement	egg	274:17:6307:6309	1392891	2	True				
ANR	1392936	Statement	","	274:20:6310:6310	1392891	3	True				
ANR	1392937	Statement	"""  mov %s, %%"""	274:22:6312:6325	1392891	4	True				
ANR	1392938	Statement	R_AX	274:36:6326:6329	1392891	5	True				
ANR	1392939	Statement	"""\\n"""	274:41:6331:6334	1392891	6	True				
ANR	1392940	Statement	","	274:45:6335:6335	1392891	7	True				
ANR	1392941	Statement	str	274:47:6337:6339	1392891	8	True				
ANR	1392942	Statement	)	274:50:6340:6340	1392891	9	True				
ANR	1392943	ExpressionStatement		274:51:6341:6341	1392891	10	True				
ANR	1392944	Statement	r_egg_printf	275:3:6346:6357	1392891	11	True				
ANR	1392945	Statement	(	275:16:6359:6359	1392891	12	True				
ANR	1392946	Statement	egg	275:17:6360:6362	1392891	13	True				
ANR	1392947	Statement	","	275:20:6363:6363	1392891	14	True				
ANR	1392948	Statement	"""  push %%"""	275:22:6365:6375	1392891	15	True				
ANR	1392949	Statement	R_AX	275:33:6376:6379	1392891	16	True				
ANR	1392950	Statement	"""\\n"""	275:38:6381:6384	1392891	17	True				
ANR	1392951	Statement	)	275:42:6385:6385	1392891	18	True				
ANR	1392952	ExpressionStatement		275:43:6386:6386	1392891	19	True				
ANR	1392953	ElseStatement	else		1392891	0					
ANR	1392954	CompoundStatement		16:9:355:355	1392891	0					
ANR	1392955	Statement	r_egg_printf	277:3:6402:6413	1392891	0	True				
ANR	1392956	Statement	(	277:16:6415:6415	1392891	1	True				
ANR	1392957	Statement	egg	277:17:6416:6418	1392891	2	True				
ANR	1392958	Statement	","	277:20:6419:6419	1392891	3	True				
ANR	1392959	Statement	"""  mov """	277:22:6421:6428	1392891	4	True				
ANR	1392960	Statement	R_AX	277:30:6429:6432	1392891	5	True				
ANR	1392961	Statement	""", %s\\n"""	277:35:6434:6441	1392891	6	True				
ANR	1392962	Statement	","	277:43:6442:6442	1392891	7	True				
ANR	1392963	Statement	str	277:45:6444:6446	1392891	8	True				
ANR	1392964	Statement	)	277:48:6447:6447	1392891	9	True				
ANR	1392965	ExpressionStatement		277:49:6448:6448	1392891	10	True				
ANR	1392966	Statement	r_egg_printf	278:3:6453:6464	1392891	11	True				
ANR	1392967	Statement	(	278:16:6466:6466	1392891	12	True				
ANR	1392968	Statement	egg	278:17:6467:6469	1392891	13	True				
ANR	1392969	Statement	","	278:20:6470:6470	1392891	14	True				
ANR	1392970	Statement	"""  push """	278:22:6472:6480	1392891	15	True				
ANR	1392971	Statement	R_AX	278:31:6481:6484	1392891	16	True				
ANR	1392972	Statement	"""\\n"""	278:36:6486:6489	1392891	17	True				
ANR	1392973	Statement	)	278:40:6490:6490	1392891	18	True				
ANR	1392974	ExpressionStatement		278:41:6491:6491	1392891	19	True				
ANR	1392975	BreakStatement	break ;	283:2:6554:6559	1392891	2	True				
ANR	1392976	Label	case '*' :	284:1:6562:6570	1392891	3	True				
ANR	1392977	IfStatement	if ( attsyntax )		1392891	4					
ANR	1392978	Condition	attsyntax	285:6:6578:6586	1392891	0	True				
ANR	1392979	Identifier	attsyntax		1392891	0					
ANR	1392980	CompoundStatement		25:17:547:547	1392891	1					
ANR	1392981	ExpressionStatement	"r_egg_printf ( egg , ""  push (%s)\\n"" , str )"	286:3:6594:6634	1392891	0	True				
ANR	1392982	CallExpression	"r_egg_printf ( egg , ""  push (%s)\\n"" , str )"		1392891	0					
ANR	1392983	Callee	r_egg_printf		1392891	0					
ANR	1392984	Identifier	r_egg_printf		1392891	0					
ANR	1392985	ArgumentList	egg		1392891	1					
ANR	1392986	Argument	egg		1392891	0					
ANR	1392987	Identifier	egg		1392891	0					
ANR	1392988	Argument	"""  push (%s)\\n"""		1392891	1					
ANR	1392989	PrimaryExpression	"""  push (%s)\\n"""		1392891	0					
ANR	1392990	Argument	str		1392891	2					
ANR	1392991	Identifier	str		1392891	0					
ANR	1392992	ElseStatement	else		1392891	0					
ANR	1392993	CompoundStatement		27:9:603:603	1392891	0					
ANR	1392994	ExpressionStatement	"r_egg_printf ( egg , ""  push [%s]\\n"" , str )"	288:3:6650:6690	1392891	0	True				
ANR	1392995	CallExpression	"r_egg_printf ( egg , ""  push [%s]\\n"" , str )"		1392891	0					
ANR	1392996	Callee	r_egg_printf		1392891	0					
ANR	1392997	Identifier	r_egg_printf		1392891	0					
ANR	1392998	ArgumentList	egg		1392891	1					
ANR	1392999	Argument	egg		1392891	0					
ANR	1393000	Identifier	egg		1392891	0					
ANR	1393001	Argument	"""  push [%s]\\n"""		1392891	1					
ANR	1393002	PrimaryExpression	"""  push [%s]\\n"""		1392891	0					
ANR	1393003	Argument	str		1392891	2					
ANR	1393004	Identifier	str		1392891	0					
ANR	1393005	BreakStatement	break ;	290:2:6698:6703	1392891	5	True				
ANR	1393006	Label	case '&' :	291:1:6706:6714	1392891	6	True				
ANR	1393007	IfStatement	if ( attsyntax )		1392891	7					
ANR	1393008	Condition	attsyntax	292:6:6722:6730	1392891	0	True				
ANR	1393009	Identifier	attsyntax		1392891	0					
ANR	1393010	CompoundStatement		32:17:691:691	1392891	1					
ANR	1393011	IfStatement	if ( d != 0 )		1392891	0					
ANR	1393012	Condition	d != 0	293:7:6742:6747	1392891	0	True				
ANR	1393013	EqualityExpression	d != 0		1392891	0		!=			
ANR	1393014	Identifier	d		1392891	0					
ANR	1393015	PrimaryExpression	0		1392891	1					
ANR	1393016	CompoundStatement		33:15:708:708	1392891	1					
ANR	1393017	Statement	r_egg_printf	294:4:6756:6767	1392891	0	True				
ANR	1393018	Statement	(	294:17:6769:6769	1392891	1	True				
ANR	1393019	Statement	egg	294:18:6770:6772	1392891	2	True				
ANR	1393020	Statement	","	294:21:6773:6773	1392891	3	True				
ANR	1393021	Statement	"""  addl $%d, %%"""	294:23:6775:6790	1392891	4	True				
ANR	1393022	Statement	R_BP	294:40:6792:6795	1392891	5	True				
ANR	1393023	Statement	"""\\n"""	294:45:6797:6800	1392891	6	True				
ANR	1393024	Statement	","	294:49:6801:6801	1392891	7	True				
ANR	1393025	Statement	d	294:51:6803:6803	1392891	8	True				
ANR	1393026	Statement	)	294:52:6804:6804	1392891	9	True				
ANR	1393027	ExpressionStatement		294:53:6805:6805	1392891	10	True				
ANR	1393028	Statement	r_egg_printf	296:3:6815:6826	1392891	1	True				
ANR	1393029	Statement	(	296:16:6828:6828	1392891	2	True				
ANR	1393030	Statement	egg	296:17:6829:6831	1392891	3	True				
ANR	1393031	Statement	","	296:20:6832:6832	1392891	4	True				
ANR	1393032	Statement	"""  pushl %%"""	296:22:6834:6845	1392891	5	True				
ANR	1393033	Statement	R_BP	296:34:6846:6849	1392891	6	True				
ANR	1393034	Statement	"""\\n"""	296:38:6850:6853	1392891	7	True				
ANR	1393035	Statement	)	296:42:6854:6854	1392891	8	True				
ANR	1393036	ExpressionStatement		296:43:6855:6855	1392891	9	True				
ANR	1393037	IfStatement	if ( d != 0 )		1392891	10					
ANR	1393038	Condition	d != 0	297:7:6864:6869	1392891	0	True				
ANR	1393039	EqualityExpression	d != 0		1392891	0		!=			
ANR	1393040	Identifier	d		1392891	0					
ANR	1393041	PrimaryExpression	0		1392891	1					
ANR	1393042	CompoundStatement		37:15:830:830	1392891	1					
ANR	1393043	Statement	r_egg_printf	298:4:6878:6889	1392891	0	True				
ANR	1393044	Statement	(	298:17:6891:6891	1392891	1	True				
ANR	1393045	Statement	egg	298:18:6892:6894	1392891	2	True				
ANR	1393046	Statement	","	298:21:6895:6895	1392891	3	True				
ANR	1393047	Statement	"""  subl $%d, %%"""	298:23:6897:6912	1392891	4	True				
ANR	1393048	Statement	R_BP	298:40:6914:6917	1392891	5	True				
ANR	1393049	Statement	"""\\n"""	298:45:6919:6922	1392891	6	True				
ANR	1393050	Statement	","	298:49:6923:6923	1392891	7	True				
ANR	1393051	Statement	d	298:51:6925:6925	1392891	8	True				
ANR	1393052	Statement	)	298:52:6926:6926	1392891	9	True				
ANR	1393053	ExpressionStatement		298:53:6927:6927	1392891	10	True				
ANR	1393054	ElseStatement	else		1392891	0					
ANR	1393055	CompoundStatement		40:9:901:901	1392891	0					
ANR	1393056	IfStatement	if ( d != 0 )		1392891	0					
ANR	1393057	Condition	d != 0	301:7:6952:6957	1392891	0	True				
ANR	1393058	EqualityExpression	d != 0		1392891	0		!=			
ANR	1393059	Identifier	d		1392891	0					
ANR	1393060	PrimaryExpression	0		1392891	1					
ANR	1393061	CompoundStatement		41:15:918:918	1392891	1					
ANR	1393062	Statement	r_egg_printf	302:4:6966:6977	1392891	0	True				
ANR	1393063	Statement	(	302:17:6979:6979	1392891	1	True				
ANR	1393064	Statement	egg	302:18:6980:6982	1392891	2	True				
ANR	1393065	Statement	","	302:21:6983:6983	1392891	3	True				
ANR	1393066	Statement	"""  add """	302:23:6985:6992	1392891	4	True				
ANR	1393067	Statement	R_BP	302:32:6994:6997	1392891	5	True				
ANR	1393068	Statement	""", %d\\n"""	302:37:6999:7006	1392891	6	True				
ANR	1393069	Statement	","	302:45:7007:7007	1392891	7	True				
ANR	1393070	Statement	d	302:47:7009:7009	1392891	8	True				
ANR	1393071	Statement	)	302:48:7010:7010	1392891	9	True				
ANR	1393072	ExpressionStatement		302:49:7011:7011	1392891	10	True				
ANR	1393073	Statement	r_egg_printf	304:3:7021:7032	1392891	1	True				
ANR	1393074	Statement	(	304:16:7034:7034	1392891	2	True				
ANR	1393075	Statement	egg	304:17:7035:7037	1392891	3	True				
ANR	1393076	Statement	","	304:20:7038:7038	1392891	4	True				
ANR	1393077	Statement	"""  push """	304:22:7040:7048	1392891	5	True				
ANR	1393078	Statement	R_BP	304:31:7049:7052	1392891	6	True				
ANR	1393079	Statement	"""\\n"""	304:35:7053:7056	1392891	7	True				
ANR	1393080	Statement	)	304:39:7057:7057	1392891	8	True				
ANR	1393081	ExpressionStatement		304:40:7058:7058	1392891	9	True				
ANR	1393082	IfStatement	if ( d != 0 )		1392891	10					
ANR	1393083	Condition	d != 0	305:7:7067:7072	1392891	0	True				
ANR	1393084	EqualityExpression	d != 0		1392891	0		!=			
ANR	1393085	Identifier	d		1392891	0					
ANR	1393086	PrimaryExpression	0		1392891	1					
ANR	1393087	CompoundStatement		45:15:1033:1033	1392891	1					
ANR	1393088	Statement	r_egg_printf	306:4:7081:7092	1392891	0	True				
ANR	1393089	Statement	(	306:17:7094:7094	1392891	1	True				
ANR	1393090	Statement	egg	306:18:7095:7097	1392891	2	True				
ANR	1393091	Statement	","	306:21:7098:7098	1392891	3	True				
ANR	1393092	Statement	"""  sub """	306:23:7100:7107	1392891	4	True				
ANR	1393093	Statement	R_BP	306:32:7109:7112	1392891	5	True				
ANR	1393094	Statement	""", %d\\n"""	306:37:7114:7121	1392891	6	True				
ANR	1393095	Statement	","	306:45:7122:7122	1392891	7	True				
ANR	1393096	Statement	d	306:47:7124:7124	1392891	8	True				
ANR	1393097	Statement	)	306:48:7125:7125	1392891	9	True				
ANR	1393098	ExpressionStatement		306:49:7126:7126	1392891	10	True				
ANR	1393099	BreakStatement	break ;	309:2:7139:7144	1392891	8	True				
ANR	1393100	ReturnType	static void		1392891	1					
ANR	1393101	Identifier	emit_arg		1392891	2					
ANR	1393102	ParameterList	"REgg * egg , int xs , int num , const char * str"		1392891	3					
ANR	1393103	Parameter	REgg * egg	261:22:5996:6004	1392891	0	True				
ANR	1393104	ParameterType	REgg *		1392891	0					
ANR	1393105	Identifier	egg		1392891	1					
ANR	1393106	Parameter	int xs	261:33:6007:6012	1392891	1	True				
ANR	1393107	ParameterType	int		1392891	0					
ANR	1393108	Identifier	xs		1392891	1					
ANR	1393109	Parameter	int num	261:41:6015:6021	1392891	2	True				
ANR	1393110	ParameterType	int		1392891	0					
ANR	1393111	Identifier	num		1392891	1					
ANR	1393112	Parameter	const char * str	261:50:6024:6038	1392891	3	True				
ANR	1393113	ParameterType	const char *		1392891	0					
ANR	1393114	Identifier	str		1392891	1					
ANR	1393115	CFGEntryNode	ENTRY		1392891		True				
ANR	1393116	CFGExitNode	EXIT		1392891		True				
ANR	1393117	Symbol	str		1392891						
ANR	1393118	Symbol	atoi		1392891						
ANR	1393119	Symbol	egg		1392891						
ANR	1393120	Symbol	d		1392891						
ANR	1393121	Symbol	num		1392891						
ANR	1393122	Symbol	attsyntax		1392891						
ANR	1393123	Symbol	xs		1392891						
ANR	1393124	Symbol	* str		1392891						
ANR	1393125	Function	emit_get_result	313:0:7152:7345							
ANR	1393126	FunctionDef	"emit_get_result (REgg * egg , const char * ocn)"		1393125	0					
ANR	1393127	CompoundStatement		313:56:7208:7345	1393125	0					
ANR	1393128	IfStatement	if ( attsyntax )		1393125	0					
ANR	1393129	Condition	attsyntax	314:5:7215:7223	1393125	0	True				
ANR	1393130	Identifier	attsyntax		1393125	0					
ANR	1393131	CompoundStatement		2:16:17:17	1393125	1					
ANR	1393132	Statement	r_egg_printf	315:2:7230:7241	1393125	0	True				
ANR	1393133	Statement	(	315:15:7243:7243	1393125	1	True				
ANR	1393134	Statement	egg	315:16:7244:7246	1393125	2	True				
ANR	1393135	Statement	","	315:19:7247:7247	1393125	3	True				
ANR	1393136	Statement	"""  mov %%"""	315:21:7249:7258	1393125	4	True				
ANR	1393137	Statement	R_AX	315:32:7260:7263	1393125	5	True				
ANR	1393138	Statement	""", %s\\n"""	315:37:7265:7272	1393125	6	True				
ANR	1393139	Statement	","	315:45:7273:7273	1393125	7	True				
ANR	1393140	Statement	ocn	315:47:7275:7277	1393125	8	True				
ANR	1393141	Statement	)	315:50:7278:7278	1393125	9	True				
ANR	1393142	ExpressionStatement		315:51:7279:7279	1393125	10	True				
ANR	1393143	ElseStatement	else		1393125	0					
ANR	1393144	CompoundStatement		4:8:80:80	1393125	0					
ANR	1393145	Statement	r_egg_printf	317:2:7293:7304	1393125	0	True				
ANR	1393146	Statement	(	317:15:7306:7306	1393125	1	True				
ANR	1393147	Statement	egg	317:16:7307:7309	1393125	2	True				
ANR	1393148	Statement	","	317:19:7310:7310	1393125	3	True				
ANR	1393149	Statement	"""  mov %s, """	317:21:7312:7323	1393125	4	True				
ANR	1393150	Statement	R_AX	317:34:7325:7328	1393125	5	True				
ANR	1393151	Statement	"""\\n"""	317:39:7330:7333	1393125	6	True				
ANR	1393152	Statement	","	317:43:7334:7334	1393125	7	True				
ANR	1393153	Statement	ocn	317:45:7336:7338	1393125	8	True				
ANR	1393154	Statement	)	317:48:7339:7339	1393125	9	True				
ANR	1393155	ExpressionStatement		317:49:7340:7340	1393125	10	True				
ANR	1393156	ReturnType	static void		1393125	1					
ANR	1393157	Identifier	emit_get_result		1393125	2					
ANR	1393158	ParameterList	"REgg * egg , const char * ocn"		1393125	3					
ANR	1393159	Parameter	REgg * egg	313:28:7180:7188	1393125	0	True				
ANR	1393160	ParameterType	REgg *		1393125	0					
ANR	1393161	Identifier	egg		1393125	1					
ANR	1393162	Parameter	const char * ocn	313:39:7191:7205	1393125	1	True				
ANR	1393163	ParameterType	const char *		1393125	0					
ANR	1393164	Identifier	ocn		1393125	1					
ANR	1393165	CFGEntryNode	ENTRY		1393125		True				
ANR	1393166	CFGExitNode	EXIT		1393125		True				
ANR	1393167	Symbol	egg		1393125						
ANR	1393168	Symbol	attsyntax		1393125						
ANR	1393169	Symbol	ocn		1393125						
ANR	1393170	Function	emit_restore_stack	321:0:7348:7552							
ANR	1393171	FunctionDef	"emit_restore_stack (REgg * egg , int size)"		1393170	0					
ANR	1393172	CompoundStatement		321:53:7401:7552	1393170	0					
ANR	1393173	IfStatement	if ( attsyntax )		1393170	0					
ANR	1393174	Condition	attsyntax	322:5:7408:7416	1393170	0	True				
ANR	1393175	Identifier	attsyntax		1393170	0					
ANR	1393176	CompoundStatement		2:16:17:17	1393170	1					
ANR	1393177	Statement	r_egg_printf	323:2:7423:7434	1393170	0	True				
ANR	1393178	Statement	(	323:15:7436:7436	1393170	1	True				
ANR	1393179	Statement	egg	323:16:7437:7439	1393170	2	True				
ANR	1393180	Statement	","	323:19:7440:7440	1393170	3	True				
ANR	1393181	Statement	"""  add $%d, %%"""	323:21:7442:7456	1393170	4	True				
ANR	1393182	Statement	R_SP	323:37:7458:7461	1393170	5	True				
ANR	1393183	Statement	""" /* args */\\n"""	323:42:7463:7477	1393170	6	True				
ANR	1393184	Statement	","	323:57:7478:7478	1393170	7	True				
ANR	1393185	Statement	size	323:59:7480:7483	1393170	8	True				
ANR	1393186	Statement	)	323:63:7484:7484	1393170	9	True				
ANR	1393187	ExpressionStatement		323:64:7485:7485	1393170	10	True				
ANR	1393188	ElseStatement	else		1393170	0					
ANR	1393189	CompoundStatement		4:8:93:93	1393170	0					
ANR	1393190	Statement	r_egg_printf	325:2:7499:7510	1393170	0	True				
ANR	1393191	Statement	(	325:15:7512:7512	1393170	1	True				
ANR	1393192	Statement	egg	325:16:7513:7515	1393170	2	True				
ANR	1393193	Statement	","	325:19:7516:7516	1393170	3	True				
ANR	1393194	Statement	"""  add """	325:21:7518:7525	1393170	4	True				
ANR	1393195	Statement	R_SP	325:30:7527:7530	1393170	5	True				
ANR	1393196	Statement	""", %d\\n"""	325:35:7532:7539	1393170	6	True				
ANR	1393197	Statement	","	325:43:7540:7540	1393170	7	True				
ANR	1393198	Statement	size	325:45:7542:7545	1393170	8	True				
ANR	1393199	Statement	)	325:49:7546:7546	1393170	9	True				
ANR	1393200	ExpressionStatement		325:50:7547:7547	1393170	10	True				
ANR	1393201	ReturnType	static void		1393170	1					
ANR	1393202	Identifier	emit_restore_stack		1393170	2					
ANR	1393203	ParameterList	"REgg * egg , int size"		1393170	3					
ANR	1393204	Parameter	REgg * egg	321:32:7380:7388	1393170	0	True				
ANR	1393205	ParameterType	REgg *		1393170	0					
ANR	1393206	Identifier	egg		1393170	1					
ANR	1393207	Parameter	int size	321:43:7391:7398	1393170	1	True				
ANR	1393208	ParameterType	int		1393170	0					
ANR	1393209	Identifier	size		1393170	1					
ANR	1393210	CFGEntryNode	ENTRY		1393170		True				
ANR	1393211	CFGExitNode	EXIT		1393170		True				
ANR	1393212	Symbol	egg		1393170						
ANR	1393213	Symbol	size		1393170						
ANR	1393214	Symbol	attsyntax		1393170						
ANR	1393215	Function	emit_get_while_end	329:0:7555:7708							
ANR	1393216	FunctionDef	"emit_get_while_end (REgg * egg , char * str , const char * ctxpush , const char * label)"		1393215	0					
ANR	1393217	CompoundStatement		329:94:7649:7708	1393215	0					
ANR	1393218	ExpressionStatement	"sprintf ( str , ""  push %s\\n  jmp %s\\n"" , ctxpush , label )"	330:1:7652:7706	1393215	0	True				
ANR	1393219	CallExpression	"sprintf ( str , ""  push %s\\n  jmp %s\\n"" , ctxpush , label )"		1393215	0					
ANR	1393220	Callee	sprintf		1393215	0					
ANR	1393221	Identifier	sprintf		1393215	0					
ANR	1393222	ArgumentList	str		1393215	1					
ANR	1393223	Argument	str		1393215	0					
ANR	1393224	Identifier	str		1393215	0					
ANR	1393225	Argument	"""  push %s\\n  jmp %s\\n"""		1393215	1					
ANR	1393226	PrimaryExpression	"""  push %s\\n  jmp %s\\n"""		1393215	0					
ANR	1393227	Argument	ctxpush		1393215	2					
ANR	1393228	Identifier	ctxpush		1393215	0					
ANR	1393229	Argument	label		1393215	3					
ANR	1393230	Identifier	label		1393215	0					
ANR	1393231	ReturnType	static void		1393215	1					
ANR	1393232	Identifier	emit_get_while_end		1393215	2					
ANR	1393233	ParameterList	"REgg * egg , char * str , const char * ctxpush , const char * label"		1393215	3					
ANR	1393234	Parameter	REgg * egg	329:32:7587:7595	1393215	0	True				
ANR	1393235	ParameterType	REgg *		1393215	0					
ANR	1393236	Identifier	egg		1393215	1					
ANR	1393237	Parameter	char * str	329:43:7598:7606	1393215	1	True				
ANR	1393238	ParameterType	char *		1393215	0					
ANR	1393239	Identifier	str		1393215	1					
ANR	1393240	Parameter	const char * ctxpush	329:54:7609:7627	1393215	2	True				
ANR	1393241	ParameterType	const char *		1393215	0					
ANR	1393242	Identifier	ctxpush		1393215	1					
ANR	1393243	Parameter	const char * label	329:75:7630:7646	1393215	3	True				
ANR	1393244	ParameterType	const char *		1393215	0					
ANR	1393245	Identifier	label		1393215	1					
ANR	1393246	CFGEntryNode	ENTRY		1393215		True				
ANR	1393247	CFGExitNode	EXIT		1393215		True				
ANR	1393248	Symbol	str		1393215						
ANR	1393249	Symbol	egg		1393215						
ANR	1393250	Symbol	ctxpush		1393215						
ANR	1393251	Symbol	label		1393215						
ANR	1393252	Function	emit_while_end	333:0:7711:13602							
ANR	1393253	FunctionDef	"emit_while_end (REgg * egg , const char * labelback)"		1393252	0					
ANR	1393254	CompoundStatement		333:62:7773:13602	1393252	0					
ANR	1393255	IfStatement	if ( attsyntax )		1393252	0					
ANR	1393256	Condition	attsyntax	335:5:7786:7794	1393252	0	True				
ANR	1393257	Identifier	attsyntax		1393252	0					
ANR	1393258	CompoundStatement		3:16:23:23	1393252	1					
ANR	1393259	Statement	r_egg_printf	336:2:7801:7812	1393252	0	True				
ANR	1393260	Statement	(	336:15:7814:7814	1393252	1	True				
ANR	1393261	Statement	egg	336:16:7815:7817	1393252	2	True				
ANR	1393262	Statement	","	336:19:7818:7818	1393252	3	True				
ANR	1393263	Statement	"""  pop %%"""	336:21:7820:7829	1393252	4	True				
ANR	1393264	Statement	R_AX	336:31:7830:7833	1393252	5	True				
ANR	1393265	Statement	"""\\n"""	336:35:7834:7837	1393252	6	True				
ANR	1393266	Statement	)	336:39:7838:7838	1393252	7	True				
ANR	1393267	ExpressionStatement		336:40:7839:7839	1393252	8	True				
ANR	1393268	Statement	r_egg_printf	337:2:7843:7854	1393252	9	True				
ANR	1393269	Statement	(	337:15:7856:7856	1393252	10	True				
ANR	1393270	Statement	egg	337:16:7857:7859	1393252	11	True				
ANR	1393271	Statement	","	337:19:7860:7860	1393252	12	True				
ANR	1393272	Statement	"""  cmp $0, %%"""	337:21:7862:7875	1393252	13	True				
ANR	1393273	Statement	R_AX	337:35:7876:7879	1393252	14	True				
ANR	1393274	Statement	"""\\n"""	337:39:7880:7883	1393252	15	True				
ANR	1393275	Statement	)	337:43:7884:7884	1393252	16	True				
ANR	1393276	ExpressionStatement		337:44:7885:7885	1393252	17	True				
ANR	1393277	ExpressionStatement	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"	338:2:7927:7970	1393252	18	True				
ANR	1393278	CallExpression	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"		1393252	0					
ANR	1393279	Callee	r_egg_printf		1393252	0					
ANR	1393280	Identifier	r_egg_printf		1393252	0					
ANR	1393281	ArgumentList	egg		1393252	1					
ANR	1393282	Argument	egg		1393252	0					
ANR	1393283	Identifier	egg		1393252	0					
ANR	1393284	Argument	"""  jnz %s\\n"""		1393252	1					
ANR	1393285	PrimaryExpression	"""  jnz %s\\n"""		1393252	0					
ANR	1393286	Argument	labelback		1393252	2					
ANR	1393287	Identifier	labelback		1393252	0					
ANR	1393288	ElseStatement	else		1393252	0					
ANR	1393289	CompoundStatement		7:8:206:206	1393252	0					
ANR	1393290	Statement	r_egg_printf	341:2:7991:8002	1393252	0	True				
ANR	1393291	Statement	(	341:15:8004:8004	1393252	1	True				
ANR	1393292	Statement	egg	341:16:8005:8007	1393252	2	True				
ANR	1393293	Statement	","	341:19:8008:8008	1393252	3	True				
ANR	1393294	Statement	"""  pop """	341:21:8010:8017	1393252	4	True				
ANR	1393295	Statement	R_AX	341:29:8018:8021	1393252	5	True				
ANR	1393296	Statement	"""\\n"""	341:33:8022:8025	1393252	6	True				
ANR	1393297	Statement	)	341:37:8026:8026	1393252	7	True				
ANR	1393298	ExpressionStatement		341:38:8027:8027	1393252	8	True				
ANR	1393299	Statement	r_egg_printf	342:2:8031:8042	1393252	9	True				
ANR	1393300	Statement	(	342:15:8044:8044	1393252	10	True				
ANR	1393301	Statement	egg	342:16:8045:8047	1393252	11	True				
ANR	1393302	Statement	","	342:19:8048:8048	1393252	12	True				
ANR	1393303	Statement	"""  test """	342:21:8050:8058	1393252	13	True				
ANR	1393304	Statement	R_AX	342:30:8059:8062	1393252	14	True				
ANR	1393305	Statement	""", """	342:34:8063:8066	1393252	15	True				
ANR	1393306	Statement	R_AX	342:38:8067:8070	1393252	16	True				
ANR	1393307	Statement	"""\\n"""	342:42:8071:8074	1393252	17	True				
ANR	1393308	Statement	)	342:46:8075:8075	1393252	18	True				
ANR	1393309	ExpressionStatement		342:47:8076:8076	1393252	19	True				
ANR	1393310	ExpressionStatement	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"	343:2:8118:8161	1393252	20	True				
ANR	1393311	CallExpression	"r_egg_printf ( egg , ""  jnz %s\\n"" , labelback )"		1393252	0					
ANR	1393312	Callee	r_egg_printf		1393252	0					
ANR	1393313	Identifier	r_egg_printf		1393252	0					
ANR	1393314	ArgumentList	egg		1393252	1					
ANR	1393315	Argument	egg		1393252	0					
ANR	1393316	Identifier	egg		1393252	0					
ANR	1393317	Argument	"""  jnz %s\\n"""		1393252	1					
ANR	1393318	PrimaryExpression	"""  jnz %s\\n"""		1393252	0					
ANR	1393319	Argument	labelback		1393252	2					
ANR	1393320	Identifier	labelback		1393252	0					
ANR	1393321	Statement	static	348:0:8193:8198	1393252	1	True				
ANR	1393322	Statement	void	348:7:8200:8203	1393252	2	True				
ANR	1393323	Statement	emit_get_var	348:12:8205:8216	1393252	3	True				
ANR	1393324	Statement	(	348:25:8218:8218	1393252	4	True				
ANR	1393325	Statement	REgg	348:26:8219:8222	1393252	5	True				
ANR	1393326	Statement	*	348:31:8224:8224	1393252	6	True				
ANR	1393327	Statement	egg	348:32:8225:8227	1393252	7	True				
ANR	1393328	Statement	","	348:35:8228:8228	1393252	8	True				
ANR	1393329	Statement	int	348:37:8230:8232	1393252	9	True				
ANR	1393330	Statement	type	348:41:8234:8237	1393252	10	True				
ANR	1393331	Statement	","	348:45:8238:8238	1393252	11	True				
ANR	1393332	Statement	char	348:47:8240:8243	1393252	12	True				
ANR	1393333	Statement	*	348:52:8245:8245	1393252	13	True				
ANR	1393334	Statement	out	348:53:8246:8248	1393252	14	True				
ANR	1393335	Statement	","	348:56:8249:8249	1393252	15	True				
ANR	1393336	Statement	int	348:58:8251:8253	1393252	16	True				
ANR	1393337	Statement	idx	348:62:8255:8257	1393252	17	True				
ANR	1393338	Statement	)	348:65:8258:8258	1393252	18	True				
ANR	1393339	CompoundStatement		16:67:486:486	1393252	19					
ANR	1393340	SwitchStatement	switch ( type )		1393252	0					
ANR	1393341	Condition	type	349:9:8271:8274	1393252	0	True				
ANR	1393342	Identifier	type		1393252	0					
ANR	1393343	CompoundStatement		17:15:503:503	1393252	1					
ANR	1393344	Label	case 0 :	350:1:8280:8286	1393252	0	True				
ANR	1393345	IfStatement	if ( idx > 0 )		1393252	1					
ANR	1393346	Condition	idx > 0	351:6:8310:8316	1393252	0	True				
ANR	1393347	RelationalExpression	idx > 0		1393252	0		>			
ANR	1393348	Identifier	idx		1393252	0					
ANR	1393349	PrimaryExpression	0		1393252	1					
ANR	1393350	CompoundStatement		19:15:545:545	1393252	1					
ANR	1393351	Statement	sprintf	352:3:8324:8330	1393252	0	True				
ANR	1393352	Statement	(	352:11:8332:8332	1393252	1	True				
ANR	1393353	Statement	out	352:12:8333:8335	1393252	2	True				
ANR	1393354	Statement	","	352:15:8336:8336	1393252	3	True				
ANR	1393355	Statement	"""["""	352:17:8338:8340	1393252	4	True				
ANR	1393356	Statement	R_BP	352:21:8342:8345	1393252	5	True				
ANR	1393357	Statement	"""+%d]"""	352:26:8347:8352	1393252	6	True				
ANR	1393358	Statement	","	352:32:8353:8353	1393252	7	True				
ANR	1393359	Statement	idx	352:34:8355:8357	1393252	8	True				
ANR	1393360	Statement	)	352:37:8358:8358	1393252	9	True				
ANR	1393361	ExpressionStatement		352:38:8359:8359	1393252	10	True				
ANR	1393362	ElseStatement	else		1393252	0					
ANR	1393363	IfStatement	if ( idx < 0 )		1393252	0					
ANR	1393364	Condition	idx < 0	353:13:8374:8380	1393252	0	True				
ANR	1393365	RelationalExpression	idx < 0		1393252	0		<			
ANR	1393366	Identifier	idx		1393252	0					
ANR	1393367	PrimaryExpression	0		1393252	1					
ANR	1393368	CompoundStatement		21:22:609:609	1393252	1					
ANR	1393369	Statement	sprintf	354:3:8388:8394	1393252	0	True				
ANR	1393370	Statement	(	354:11:8396:8396	1393252	1	True				
ANR	1393371	Statement	out	354:12:8397:8399	1393252	2	True				
ANR	1393372	Statement	","	354:15:8400:8400	1393252	3	True				
ANR	1393373	Statement	"""["""	354:17:8402:8404	1393252	4	True				
ANR	1393374	Statement	R_BP	354:21:8406:8409	1393252	5	True				
ANR	1393375	Statement	"""%d]"""	354:26:8411:8415	1393252	6	True				
ANR	1393376	Statement	","	354:31:8416:8416	1393252	7	True				
ANR	1393377	Statement	idx	354:33:8418:8420	1393252	8	True				
ANR	1393378	Statement	)	354:36:8421:8421	1393252	9	True				
ANR	1393379	ExpressionStatement		354:37:8422:8422	1393252	10	True				
ANR	1393380	ElseStatement	else		1393252	0					
ANR	1393381	CompoundStatement		23:9:659:659	1393252	0					
ANR	1393382	Statement	strcpy	356:3:8438:8443	1393252	0	True				
ANR	1393383	Statement	(	356:10:8445:8445	1393252	1	True				
ANR	1393384	Statement	out	356:11:8446:8448	1393252	2	True				
ANR	1393385	Statement	","	356:14:8449:8449	1393252	3	True				
ANR	1393386	Statement	"""["""	356:16:8451:8453	1393252	4	True				
ANR	1393387	Statement	R_BP	356:20:8455:8458	1393252	5	True				
ANR	1393388	Statement	"""]"""	356:25:8460:8462	1393252	6	True				
ANR	1393389	Statement	)	356:28:8463:8463	1393252	7	True				
ANR	1393390	ExpressionStatement		356:29:8464:8464	1393252	8	True				
ANR	1393391	BreakStatement	break ;	358:2:8472:8477	1393252	2	True				
ANR	1393392	Label	case 1 :	359:1:8480:8486	1393252	3	True				
ANR	1393393	ExpressionStatement	"eprintf ( ""WARNING: Using stack vars in naked functions\\n"" )"	361:2:8575:8633	1393252	4	True				
ANR	1393394	CallExpression	"eprintf ( ""WARNING: Using stack vars in naked functions\\n"" )"		1393252	0					
ANR	1393395	Callee	eprintf		1393252	0					
ANR	1393396	Identifier	eprintf		1393252	0					
ANR	1393397	ArgumentList	"""WARNING: Using stack vars in naked functions\\n"""		1393252	1					
ANR	1393398	Argument	"""WARNING: Using stack vars in naked functions\\n"""		1393252	0					
ANR	1393399	PrimaryExpression	"""WARNING: Using stack vars in naked functions\\n"""		1393252	0					
ANR	1393400	ExpressionStatement	idx = 8	362:2:8637:8644	1393252	5	True				
ANR	1393401	AssignmentExpression	idx = 8		1393252	0		=			
ANR	1393402	Identifier	idx		1393252	0					
ANR	1393403	PrimaryExpression	8		1393252	1					
ANR	1393404	IfStatement	if ( idx > 0 )		1393252	6					
ANR	1393405	Condition	idx > 0	363:6:8689:8695	1393252	0	True				
ANR	1393406	RelationalExpression	idx > 0		1393252	0		>			
ANR	1393407	Identifier	idx		1393252	0					
ANR	1393408	PrimaryExpression	0		1393252	1					
ANR	1393409	CompoundStatement		31:15:924:924	1393252	1					
ANR	1393410	Statement	sprintf	364:3:8703:8709	1393252	0	True				
ANR	1393411	Statement	(	364:11:8711:8711	1393252	1	True				
ANR	1393412	Statement	out	364:12:8712:8714	1393252	2	True				
ANR	1393413	Statement	","	364:15:8715:8715	1393252	3	True				
ANR	1393414	Statement	"""["""	364:17:8717:8719	1393252	4	True				
ANR	1393415	Statement	R_SP	364:21:8721:8724	1393252	5	True				
ANR	1393416	Statement	"""+%d]"""	364:26:8726:8731	1393252	6	True				
ANR	1393417	Statement	","	364:32:8732:8732	1393252	7	True				
ANR	1393418	Statement	idx	364:34:8734:8736	1393252	8	True				
ANR	1393419	Statement	)	364:37:8737:8737	1393252	9	True				
ANR	1393420	ExpressionStatement		364:38:8738:8738	1393252	10	True				
ANR	1393421	ElseStatement	else		1393252	0					
ANR	1393422	IfStatement	if ( idx < 0 )		1393252	0					
ANR	1393423	Condition	idx < 0	365:13:8753:8759	1393252	0	True				
ANR	1393424	RelationalExpression	idx < 0		1393252	0		<			
ANR	1393425	Identifier	idx		1393252	0					
ANR	1393426	PrimaryExpression	0		1393252	1					
ANR	1393427	CompoundStatement		33:22:988:988	1393252	1					
ANR	1393428	Statement	sprintf	366:3:8767:8773	1393252	0	True				
ANR	1393429	Statement	(	366:11:8775:8775	1393252	1	True				
ANR	1393430	Statement	out	366:12:8776:8778	1393252	2	True				
ANR	1393431	Statement	","	366:15:8779:8779	1393252	3	True				
ANR	1393432	Statement	"""["""	366:17:8781:8783	1393252	4	True				
ANR	1393433	Statement	R_SP	366:21:8785:8788	1393252	5	True				
ANR	1393434	Statement	"""%d]"""	366:26:8790:8794	1393252	6	True				
ANR	1393435	Statement	","	366:31:8795:8795	1393252	7	True				
ANR	1393436	Statement	idx	366:33:8797:8799	1393252	8	True				
ANR	1393437	Statement	)	366:36:8800:8800	1393252	9	True				
ANR	1393438	ExpressionStatement		366:37:8801:8801	1393252	10	True				
ANR	1393439	ElseStatement	else		1393252	0					
ANR	1393440	CompoundStatement		35:9:1038:1038	1393252	0					
ANR	1393441	Statement	strcpy	368:3:8817:8822	1393252	0	True				
ANR	1393442	Statement	(	368:10:8824:8824	1393252	1	True				
ANR	1393443	Statement	out	368:11:8825:8827	1393252	2	True				
ANR	1393444	Statement	","	368:14:8828:8828	1393252	3	True				
ANR	1393445	Statement	"""["""	368:16:8830:8832	1393252	4	True				
ANR	1393446	Statement	R_SP	368:20:8834:8837	1393252	5	True				
ANR	1393447	Statement	"""]"""	368:25:8839:8841	1393252	6	True				
ANR	1393448	Statement	)	368:28:8842:8842	1393252	7	True				
ANR	1393449	ExpressionStatement		368:29:8843:8843	1393252	8	True				
ANR	1393450	BreakStatement	break ;	370:2:8851:8856	1393252	7	True				
ANR	1393451	Label	case 2 :	371:1:8859:8865	1393252	8	True				
ANR	1393452	IfStatement	if ( idx > 0 )		1393252	9					
ANR	1393453	Condition	idx > 0	372:6:8873:8879	1393252	0	True				
ANR	1393454	RelationalExpression	idx > 0		1393252	0		>			
ANR	1393455	Identifier	idx		1393252	0					
ANR	1393456	PrimaryExpression	0		1393252	1					
ANR	1393457	CompoundStatement		40:15:1108:1108	1393252	1					
ANR	1393458	Statement	sprintf	373:3:8887:8893	1393252	0	True				
ANR	1393459	Statement	(	373:11:8895:8895	1393252	1	True				
ANR	1393460	Statement	out	373:12:8896:8898	1393252	2	True				
ANR	1393461	Statement	","	373:15:8899:8899	1393252	3	True				
ANR	1393462	Statement	"""["""	373:17:8901:8903	1393252	4	True				
ANR	1393463	Statement	R_BP	373:21:8905:8908	1393252	5	True				
ANR	1393464	Statement	"""+%d]"""	373:26:8910:8915	1393252	6	True				
ANR	1393465	Statement	","	373:32:8916:8916	1393252	7	True				
ANR	1393466	Statement	idx	373:34:8918:8920	1393252	8	True				
ANR	1393467	Statement	)	373:37:8921:8921	1393252	9	True				
ANR	1393468	ExpressionStatement		373:38:8922:8922	1393252	10	True				
ANR	1393469	ElseStatement	else		1393252	0					
ANR	1393470	IfStatement	if ( idx < 0 )		1393252	0					
ANR	1393471	Condition	idx < 0	374:13:8937:8943	1393252	0	True				
ANR	1393472	RelationalExpression	idx < 0		1393252	0		<			
ANR	1393473	Identifier	idx		1393252	0					
ANR	1393474	PrimaryExpression	0		1393252	1					
ANR	1393475	CompoundStatement		42:22:1172:1172	1393252	1					
ANR	1393476	Statement	sprintf	375:3:8951:8957	1393252	0	True				
ANR	1393477	Statement	(	375:11:8959:8959	1393252	1	True				
ANR	1393478	Statement	out	375:12:8960:8962	1393252	2	True				
ANR	1393479	Statement	","	375:15:8963:8963	1393252	3	True				
ANR	1393480	Statement	"""["""	375:17:8965:8967	1393252	4	True				
ANR	1393481	Statement	R_BP	375:21:8969:8972	1393252	5	True				
ANR	1393482	Statement	"""%d]"""	375:26:8974:8978	1393252	6	True				
ANR	1393483	Statement	","	375:31:8979:8979	1393252	7	True				
ANR	1393484	Statement	idx	375:33:8981:8983	1393252	8	True				
ANR	1393485	Statement	)	375:36:8984:8984	1393252	9	True				
ANR	1393486	ExpressionStatement		375:37:8985:8985	1393252	10	True				
ANR	1393487	ElseStatement	else		1393252	0					
ANR	1393488	CompoundStatement		44:9:1222:1222	1393252	0					
ANR	1393489	Statement	strcpy	377:3:9001:9006	1393252	0	True				
ANR	1393490	Statement	(	377:10:9008:9008	1393252	1	True				
ANR	1393491	Statement	out	377:11:9009:9011	1393252	2	True				
ANR	1393492	Statement	","	377:14:9012:9012	1393252	3	True				
ANR	1393493	Statement	"""["""	377:16:9014:9016	1393252	4	True				
ANR	1393494	Statement	R_BP	377:20:9018:9021	1393252	5	True				
ANR	1393495	Statement	"""]"""	377:25:9023:9025	1393252	6	True				
ANR	1393496	Statement	)	377:28:9026:9026	1393252	7	True				
ANR	1393497	ExpressionStatement		377:29:9027:9027	1393252	8	True				
ANR	1393498	BreakStatement	break ;	379:2:9035:9040	1393252	10	True				
ANR	1393499	Statement	static	383:0:9048:9053	1393252	20	True				
ANR	1393500	Statement	void	383:7:9055:9058	1393252	21	True				
ANR	1393501	Statement	emit_trap	383:12:9060:9068	1393252	22	True				
ANR	1393502	Statement	(	383:22:9070:9070	1393252	23	True				
ANR	1393503	Statement	REgg	383:23:9071:9074	1393252	24	True				
ANR	1393504	Statement	*	383:28:9076:9076	1393252	25	True				
ANR	1393505	Statement	egg	383:29:9077:9079	1393252	26	True				
ANR	1393506	Statement	)	383:32:9080:9080	1393252	27	True				
ANR	1393507	CompoundStatement		51:34:1308:1308	1393252	28					
ANR	1393508	ExpressionStatement	"r_egg_printf ( egg , ""  int3\\n"" )"	384:1:9085:9115	1393252	0	True				
ANR	1393509	CallExpression	"r_egg_printf ( egg , ""  int3\\n"" )"		1393252	0					
ANR	1393510	Callee	r_egg_printf		1393252	0					
ANR	1393511	Identifier	r_egg_printf		1393252	0					
ANR	1393512	ArgumentList	egg		1393252	1					
ANR	1393513	Argument	egg		1393252	0					
ANR	1393514	Identifier	egg		1393252	0					
ANR	1393515	Argument	"""  int3\\n"""		1393252	1					
ANR	1393516	PrimaryExpression	"""  int3\\n"""		1393252	0					
ANR	1393517	Statement	static	387:0:9120:9125	1393252	29	True				
ANR	1393518	Statement	void	387:7:9127:9130	1393252	30	True				
ANR	1393519	Statement	emit_load_ptr	387:12:9132:9144	1393252	31	True				
ANR	1393520	Statement	(	387:25:9145:9145	1393252	32	True				
ANR	1393521	Statement	REgg	387:26:9146:9149	1393252	33	True				
ANR	1393522	Statement	*	387:31:9151:9151	1393252	34	True				
ANR	1393523	Statement	egg	387:32:9152:9154	1393252	35	True				
ANR	1393524	Statement	","	387:35:9155:9155	1393252	36	True				
ANR	1393525	Statement	const	387:37:9157:9161	1393252	37	True				
ANR	1393526	Statement	char	387:43:9163:9166	1393252	38	True				
ANR	1393527	Statement	*	387:48:9168:9168	1393252	39	True				
ANR	1393528	Statement	dst	387:49:9169:9171	1393252	40	True				
ANR	1393529	Statement	)	387:52:9172:9172	1393252	41	True				
ANR	1393530	CompoundStatement		56:1:1403:1421	1393252	42					
ANR	1393531	IdentifierDeclStatement	int d = atoi ( dst ) ;	388:1:9177:9195	1393252	0	True				
ANR	1393532	IdentifierDecl	d = atoi ( dst )		1393252	0					
ANR	1393533	IdentifierDeclType	int		1393252	0					
ANR	1393534	Identifier	d		1393252	1					
ANR	1393535	AssignmentExpression	d = atoi ( dst )		1393252	2		=			
ANR	1393536	Identifier	d		1393252	0					
ANR	1393537	CallExpression	atoi ( dst )		1393252	1					
ANR	1393538	Callee	atoi		1393252	0					
ANR	1393539	Identifier	atoi		1393252	0					
ANR	1393540	ArgumentList	dst		1393252	1					
ANR	1393541	Argument	dst		1393252	0					
ANR	1393542	Identifier	dst		1393252	0					
ANR	1393543	IfStatement	if ( d == 0 )		1393252	1					
ANR	1393544	Condition	d == 0	389:5:9202:9207	1393252	0	True				
ANR	1393545	EqualityExpression	d == 0		1393252	0		==			
ANR	1393546	Identifier	d		1393252	0					
ANR	1393547	PrimaryExpression	0		1393252	1					
ANR	1393548	CompoundStatement		58:2:1471:1498	1393252	1					
ANR	1393549	IdentifierDeclStatement	"char * p = strchr ( dst , '+' ) ;"	390:2:9245:9272	1393252	0	True				
ANR	1393550	IdentifierDecl	"* p = strchr ( dst , '+' )"		1393252	0					
ANR	1393551	IdentifierDeclType	char *		1393252	0					
ANR	1393552	Identifier	p		1393252	1					
ANR	1393553	AssignmentExpression	"* p = strchr ( dst , '+' )"		1393252	2		=			
ANR	1393554	Identifier	p		1393252	0					
ANR	1393555	CallExpression	"strchr ( dst , '+' )"		1393252	1					
ANR	1393556	Callee	strchr		1393252	0					
ANR	1393557	Identifier	strchr		1393252	0					
ANR	1393558	ArgumentList	dst		1393252	1					
ANR	1393559	Argument	dst		1393252	0					
ANR	1393560	Identifier	dst		1393252	0					
ANR	1393561	Argument	'+'		1393252	1					
ANR	1393562	PrimaryExpression	'+'		1393252	0					
ANR	1393563	IfStatement	if ( p )		1393252	1					
ANR	1393564	Condition	p	391:6:9280:9280	1393252	0	True				
ANR	1393565	Identifier	p		1393252	0					
ANR	1393566	CompoundStatement		59:9:1509:1509	1393252	1					
ANR	1393567	ExpressionStatement	d = atoi ( p + 1 )	392:3:9288:9304	1393252	0	True				
ANR	1393568	AssignmentExpression	d = atoi ( p + 1 )		1393252	0		=			
ANR	1393569	Identifier	d		1393252	0					
ANR	1393570	CallExpression	atoi ( p + 1 )		1393252	1					
ANR	1393571	Callee	atoi		1393252	0					
ANR	1393572	Identifier	atoi		1393252	0					
ANR	1393573	ArgumentList	p + 1		1393252	1					
ANR	1393574	Argument	p + 1		1393252	0					
ANR	1393575	AdditiveExpression	p + 1		1393252	0		+			
ANR	1393576	Identifier	p		1393252	0					
ANR	1393577	PrimaryExpression	1		1393252	1					
ANR	1393578	IfStatement	if ( attsyntax )		1393252	2					
ANR	1393579	Condition	attsyntax	398:5:9428:9436	1393252	0	True				
ANR	1393580	Identifier	attsyntax		1393252	0					
ANR	1393581	CompoundStatement		66:16:1665:1665	1393252	1					
ANR	1393582	Statement	r_egg_printf	399:2:9443:9454	1393252	0	True				
ANR	1393583	Statement	(	399:15:9456:9456	1393252	1	True				
ANR	1393584	Statement	egg	399:16:9457:9459	1393252	2	True				
ANR	1393585	Statement	","	399:19:9460:9460	1393252	3	True				
ANR	1393586	Statement	"""  leal %d(%%"""	399:21:9462:9475	1393252	4	True				
ANR	1393587	Statement	R_BP	399:35:9476:9479	1393252	5	True				
ANR	1393588	Statement	"""), %%"""	399:39:9480:9486	1393252	6	True				
ANR	1393589	Statement	R_AX	399:46:9487:9490	1393252	7	True				
ANR	1393590	Statement	"""\\n"""	399:50:9491:9494	1393252	8	True				
ANR	1393591	Statement	","	399:54:9495:9495	1393252	9	True				
ANR	1393592	Statement	d	399:56:9497:9497	1393252	10	True				
ANR	1393593	Statement	)	399:57:9498:9498	1393252	11	True				
ANR	1393594	ExpressionStatement		399:58:9499:9499	1393252	12	True				
ANR	1393595	ElseStatement	else		1393252	0					
ANR	1393596	CompoundStatement		68:8:1735:1735	1393252	0					
ANR	1393597	Statement	r_egg_printf	401:2:9513:9524	1393252	0	True				
ANR	1393598	Statement	(	401:15:9526:9526	1393252	1	True				
ANR	1393599	Statement	egg	401:16:9527:9529	1393252	2	True				
ANR	1393600	Statement	","	401:19:9530:9530	1393252	3	True				
ANR	1393601	Statement	"""  lea """	401:21:9532:9539	1393252	4	True				
ANR	1393602	Statement	R_AX	401:29:9540:9543	1393252	5	True				
ANR	1393603	Statement	""", ["""	401:33:9544:9548	1393252	6	True				
ANR	1393604	Statement	R_BP	401:38:9549:9552	1393252	7	True				
ANR	1393605	Statement	"""+%d]\\n"""	401:42:9553:9560	1393252	8	True				
ANR	1393606	Statement	","	401:50:9561:9561	1393252	9	True				
ANR	1393607	Statement	d	401:52:9563:9563	1393252	10	True				
ANR	1393608	Statement	)	401:53:9564:9564	1393252	11	True				
ANR	1393609	ExpressionStatement		401:54:9565:9565	1393252	12	True				
ANR	1393610	Statement	static	407:0:9679:9684	1393252	43	True				
ANR	1393611	Statement	void	407:7:9686:9689	1393252	44	True				
ANR	1393612	Statement	emit_branch	407:12:9691:9701	1393252	45	True				
ANR	1393613	Statement	(	407:23:9702:9702	1393252	46	True				
ANR	1393614	Statement	REgg	407:24:9703:9706	1393252	47	True				
ANR	1393615	Statement	*	407:29:9708:9708	1393252	48	True				
ANR	1393616	Statement	egg	407:30:9709:9711	1393252	49	True				
ANR	1393617	Statement	","	407:33:9712:9712	1393252	50	True				
ANR	1393618	Statement	char	407:35:9714:9717	1393252	51	True				
ANR	1393619	Statement	*	407:40:9719:9719	1393252	52	True				
ANR	1393620	Statement	b	407:41:9720:9720	1393252	53	True				
ANR	1393621	Statement	","	407:42:9721:9721	1393252	54	True				
ANR	1393622	Statement	char	407:44:9723:9726	1393252	55	True				
ANR	1393623	Statement	*	407:49:9728:9728	1393252	56	True				
ANR	1393624	Statement	g	407:50:9729:9729	1393252	57	True				
ANR	1393625	Statement	","	407:51:9730:9730	1393252	58	True				
ANR	1393626	Statement	char	407:53:9732:9735	1393252	59	True				
ANR	1393627	Statement	*	407:58:9737:9737	1393252	60	True				
ANR	1393628	Statement	e	407:59:9738:9738	1393252	61	True				
ANR	1393629	Statement	","	407:60:9739:9739	1393252	62	True				
ANR	1393630	Statement	char	407:62:9741:9744	1393252	63	True				
ANR	1393631	Statement	*	407:67:9746:9746	1393252	64	True				
ANR	1393632	Statement	n	407:68:9747:9747	1393252	65	True				
ANR	1393633	Statement	","	407:69:9748:9748	1393252	66	True				
ANR	1393634	Statement	int	407:71:9750:9752	1393252	67	True				
ANR	1393635	Statement	sz	407:75:9754:9755	1393252	68	True				
ANR	1393636	Statement	","	407:77:9756:9756	1393252	69	True				
ANR	1393637	Statement	const	407:79:9758:9762	1393252	70	True				
ANR	1393638	Statement	char	407:85:9764:9767	1393252	71	True				
ANR	1393639	Statement	*	407:90:9769:9769	1393252	72	True				
ANR	1393640	Statement	dst	407:91:9770:9772	1393252	73	True				
ANR	1393641	Statement	)	407:94:9773:9773	1393252	74	True				
ANR	1393642	CompoundStatement		79:1:2060:2080	1393252	75					
ANR	1393643	IdentifierDeclStatement	"char * p , str [ 64 ] ;"	408:1:9778:9794	1393252	0	True				
ANR	1393644	IdentifierDecl	* p		1393252	0					
ANR	1393645	IdentifierDeclType	char *		1393252	0					
ANR	1393646	Identifier	p		1393252	1					
ANR	1393647	IdentifierDecl	str [ 64 ]		1393252	1					
ANR	1393648	IdentifierDeclType	char [ 64 ]		1393252	0					
ANR	1393649	Identifier	str		1393252	1					
ANR	1393650	PrimaryExpression	64		1393252	2					
ANR	1393651	IdentifierDeclStatement	char * arg = NULL ;	409:1:9797:9813	1393252	1	True				
ANR	1393652	IdentifierDecl	* arg = NULL		1393252	0					
ANR	1393653	IdentifierDeclType	char *		1393252	0					
ANR	1393654	Identifier	arg		1393252	1					
ANR	1393655	AssignmentExpression	* arg = NULL		1393252	2		=			
ANR	1393656	Identifier	NULL		1393252	0					
ANR	1393657	Identifier	NULL		1393252	1					
ANR	1393658	IdentifierDeclStatement	"char * op = ""jz"" ;"	410:1:9816:9831	1393252	2	True				
ANR	1393659	IdentifierDecl	"* op = ""jz"""		1393252	0					
ANR	1393660	IdentifierDeclType	char *		1393252	0					
ANR	1393661	Identifier	op		1393252	1					
ANR	1393662	AssignmentExpression	"* op = ""jz"""		1393252	2		=			
ANR	1393663	Identifier	op		1393252	0					
ANR	1393664	PrimaryExpression	"""jz"""		1393252	1					
ANR	1393665	IdentifierDeclStatement	int signed_value = 1 ;	411:1:9834:9854	1393252	3	True				
ANR	1393666	IdentifierDecl	signed_value = 1		1393252	0					
ANR	1393667	IdentifierDeclType	int		1393252	0					
ANR	1393668	Identifier	signed_value		1393252	1					
ANR	1393669	AssignmentExpression	signed_value = 1		1393252	2		=			
ANR	1393670	Identifier	signed_value		1393252	0					
ANR	1393671	PrimaryExpression	1		1393252	1					
ANR	1393672	IfStatement	if ( b )		1393252	4					
ANR	1393673	Condition	b	413:5:9965:9965	1393252	0	True				
ANR	1393674	Identifier	b		1393252	0					
ANR	1393675	CompoundStatement		81:8:2194:2194	1393252	1					
ANR	1393676	ExpressionStatement	* b = '\\0'	414:2:9972:9981	1393252	0	True				
ANR	1393677	AssignmentExpression	* b = '\\0'		1393252	0		=			
ANR	1393678	UnaryOperationExpression	* b		1393252	0					
ANR	1393679	UnaryOperator	*		1393252	0					
ANR	1393680	Identifier	b		1393252	1					
ANR	1393681	PrimaryExpression	'\\0'		1393252	1					
ANR	1393682	IfStatement	if ( signed_value )		1393252	1					
ANR	1393683	Condition	signed_value	415:6:9989:10000	1393252	0	True				
ANR	1393684	Identifier	signed_value		1393252	0					
ANR	1393685	CompoundStatement		83:20:2229:2229	1393252	1					
ANR	1393686	ExpressionStatement	"op = e ? ""jge"" : ""jg"""	416:3:10008:10027	1393252	0	True				
ANR	1393687	AssignmentExpression	"op = e ? ""jge"" : ""jg"""		1393252	0		=			
ANR	1393688	Identifier	op		1393252	0					
ANR	1393689	ConditionalExpression	"e ? ""jge"" : ""jg"""		1393252	1					
ANR	1393690	Condition	e		1393252	0					
ANR	1393691	Identifier	e		1393252	0					
ANR	1393692	PrimaryExpression	"""jge"""		1393252	1					
ANR	1393693	PrimaryExpression	"""jg"""		1393252	2					
ANR	1393694	ElseStatement	else		1393252	0					
ANR	1393695	CompoundStatement		85:9:2264:2264	1393252	0					
ANR	1393696	ExpressionStatement	"op = e ? ""jae"" : ""ja"""	418:3:10043:10062	1393252	0	True				
ANR	1393697	AssignmentExpression	"op = e ? ""jae"" : ""ja"""		1393252	0		=			
ANR	1393698	Identifier	op		1393252	0					
ANR	1393699	ConditionalExpression	"e ? ""jae"" : ""ja"""		1393252	1					
ANR	1393700	Condition	e		1393252	0					
ANR	1393701	Identifier	e		1393252	0					
ANR	1393702	PrimaryExpression	"""jae"""		1393252	1					
ANR	1393703	PrimaryExpression	"""ja"""		1393252	2					
ANR	1393704	ExpressionStatement	arg = b + 1	420:2:10070:10079	1393252	2	True				
ANR	1393705	AssignmentExpression	arg = b + 1		1393252	0		=			
ANR	1393706	Identifier	arg		1393252	0					
ANR	1393707	AdditiveExpression	b + 1		1393252	1		+			
ANR	1393708	Identifier	b		1393252	0					
ANR	1393709	PrimaryExpression	1		1393252	1					
ANR	1393710	ElseStatement	else		1393252	0					
ANR	1393711	IfStatement	if ( g )		1393252	0					
ANR	1393712	Condition	g	422:5:10094:10094	1393252	0	True				
ANR	1393713	Identifier	g		1393252	0					
ANR	1393714	CompoundStatement		90:8:2323:2323	1393252	1					
ANR	1393715	ExpressionStatement	* g = '\\0'	423:2:10101:10110	1393252	0	True				
ANR	1393716	AssignmentExpression	* g = '\\0'		1393252	0		=			
ANR	1393717	UnaryOperationExpression	* g		1393252	0					
ANR	1393718	UnaryOperator	*		1393252	0					
ANR	1393719	Identifier	g		1393252	1					
ANR	1393720	PrimaryExpression	'\\0'		1393252	1					
ANR	1393721	IfStatement	if ( signed_value )		1393252	1					
ANR	1393722	Condition	signed_value	424:6:10118:10129	1393252	0	True				
ANR	1393723	Identifier	signed_value		1393252	0					
ANR	1393724	CompoundStatement		92:20:2358:2358	1393252	1					
ANR	1393725	ExpressionStatement	"op = e ? ""jle"" : ""jl"""	425:3:10137:10156	1393252	0	True				
ANR	1393726	AssignmentExpression	"op = e ? ""jle"" : ""jl"""		1393252	0		=			
ANR	1393727	Identifier	op		1393252	0					
ANR	1393728	ConditionalExpression	"e ? ""jle"" : ""jl"""		1393252	1					
ANR	1393729	Condition	e		1393252	0					
ANR	1393730	Identifier	e		1393252	0					
ANR	1393731	PrimaryExpression	"""jle"""		1393252	1					
ANR	1393732	PrimaryExpression	"""jl"""		1393252	2					
ANR	1393733	ElseStatement	else		1393252	0					
ANR	1393734	CompoundStatement		94:9:2393:2393	1393252	0					
ANR	1393735	ExpressionStatement	"op = e ? ""jbe"" : ""jb"""	427:3:10172:10191	1393252	0	True				
ANR	1393736	AssignmentExpression	"op = e ? ""jbe"" : ""jb"""		1393252	0		=			
ANR	1393737	Identifier	op		1393252	0					
ANR	1393738	ConditionalExpression	"e ? ""jbe"" : ""jb"""		1393252	1					
ANR	1393739	Condition	e		1393252	0					
ANR	1393740	Identifier	e		1393252	0					
ANR	1393741	PrimaryExpression	"""jbe"""		1393252	1					
ANR	1393742	PrimaryExpression	"""jb"""		1393252	2					
ANR	1393743	ExpressionStatement	arg = g + 1	429:2:10199:10210	1393252	2	True				
ANR	1393744	AssignmentExpression	arg = g + 1		1393252	0		=			
ANR	1393745	Identifier	arg		1393252	0					
ANR	1393746	AdditiveExpression	g + 1		1393252	1		+			
ANR	1393747	Identifier	g		1393252	0					
ANR	1393748	PrimaryExpression	1		1393252	1					
ANR	1393749	IfStatement	if ( ! arg )		1393252	5					
ANR	1393750	Condition	! arg	431:5:10220:10223	1393252	0	True				
ANR	1393751	UnaryOperationExpression	! arg		1393252	0					
ANR	1393752	UnaryOperator	!		1393252	0					
ANR	1393753	Identifier	arg		1393252	1					
ANR	1393754	CompoundStatement		99:11:2452:2452	1393252	1					
ANR	1393755	IfStatement	if ( e )		1393252	0					
ANR	1393756	Condition	e	432:6:10234:10234	1393252	0	True				
ANR	1393757	Identifier	e		1393252	0					
ANR	1393758	CompoundStatement		100:9:2463:2463	1393252	1					
ANR	1393759	ExpressionStatement	arg = e + 1	433:3:10242:10251	1393252	0	True				
ANR	1393760	AssignmentExpression	arg = e + 1		1393252	0		=			
ANR	1393761	Identifier	arg		1393252	0					
ANR	1393762	AdditiveExpression	e + 1		1393252	1		+			
ANR	1393763	Identifier	e		1393252	0					
ANR	1393764	PrimaryExpression	1		1393252	1					
ANR	1393765	ExpressionStatement	"op = ""jne"""	434:3:10256:10266	1393252	1	True				
ANR	1393766	AssignmentExpression	"op = ""jne"""		1393252	0		=			
ANR	1393767	Identifier	op		1393252	0					
ANR	1393768	PrimaryExpression	"""jne"""		1393252	1					
ANR	1393769	ElseStatement	else		1393252	0					
ANR	1393770	CompoundStatement		103:9:2503:2503	1393252	0					
ANR	1393771	ExpressionStatement	"arg = attsyntax ? ""$0"" : ""0"""	436:3:10282:10308	1393252	0	True				
ANR	1393772	AssignmentExpression	"arg = attsyntax ? ""$0"" : ""0"""		1393252	0		=			
ANR	1393773	Identifier	arg		1393252	0					
ANR	1393774	ConditionalExpression	"attsyntax ? ""$0"" : ""0"""		1393252	1					
ANR	1393775	Condition	attsyntax		1393252	0					
ANR	1393776	Identifier	attsyntax		1393252	0					
ANR	1393777	PrimaryExpression	"""$0"""		1393252	1					
ANR	1393778	PrimaryExpression	"""0"""		1393252	2					
ANR	1393779	IfStatement	if ( n )		1393252	1					
ANR	1393780	Condition	n	437:7:10317:10317	1393252	0	True				
ANR	1393781	Identifier	n		1393252	0					
ANR	1393782	CompoundStatement		105:10:2546:2546	1393252	1					
ANR	1393783	ExpressionStatement	"op = ""jnz"""	438:4:10326:10336	1393252	0	True				
ANR	1393784	AssignmentExpression	"op = ""jnz"""		1393252	0		=			
ANR	1393785	Identifier	op		1393252	0					
ANR	1393786	PrimaryExpression	"""jnz"""		1393252	1					
ANR	1393787	ElseStatement	else		1393252	0					
ANR	1393788	CompoundStatement		107:10:2574:2574	1393252	0					
ANR	1393789	ExpressionStatement	"op = ""jz"""	440:4:10354:10363	1393252	0	True				
ANR	1393790	AssignmentExpression	"op = ""jz"""		1393252	0		=			
ANR	1393791	Identifier	op		1393252	0					
ANR	1393792	PrimaryExpression	"""jz"""		1393252	1					
ANR	1393793	IfStatement	if ( * arg == '=' )		1393252	6					
ANR	1393794	Condition	* arg == '='	445:5:10383:10393	1393252	0	True				
ANR	1393795	EqualityExpression	* arg == '='		1393252	0		==			
ANR	1393796	UnaryOperationExpression	* arg		1393252	0					
ANR	1393797	UnaryOperator	*		1393252	0					
ANR	1393798	Identifier	arg		1393252	1					
ANR	1393799	PrimaryExpression	'='		1393252	1					
ANR	1393800	CompoundStatement		113:18:2622:2622	1393252	1					
ANR	1393801	ExpressionStatement	arg ++	446:2:10400:10405	1393252	0	True				
ANR	1393802	PostIncDecOperationExpression	arg ++		1393252	0					
ANR	1393803	Identifier	arg		1393252	0					
ANR	1393804	IncDec	++		1393252	1					
ANR	1393805	ExpressionStatement	"p = r_egg_mkvar ( egg , str , arg , 0 )"	448:1:10433:10467	1393252	7	True				
ANR	1393806	AssignmentExpression	"p = r_egg_mkvar ( egg , str , arg , 0 )"		1393252	0		=			
ANR	1393807	Identifier	p		1393252	0					
ANR	1393808	CallExpression	"r_egg_mkvar ( egg , str , arg , 0 )"		1393252	1					
ANR	1393809	Callee	r_egg_mkvar		1393252	0					
ANR	1393810	Identifier	r_egg_mkvar		1393252	0					
ANR	1393811	ArgumentList	egg		1393252	1					
ANR	1393812	Argument	egg		1393252	0					
ANR	1393813	Identifier	egg		1393252	0					
ANR	1393814	Argument	str		1393252	1					
ANR	1393815	Identifier	str		1393252	0					
ANR	1393816	Argument	arg		1393252	2					
ANR	1393817	Identifier	arg		1393252	0					
ANR	1393818	Argument	0		1393252	3					
ANR	1393819	PrimaryExpression	0		1393252	0					
ANR	1393820	IfStatement	if ( attsyntax )		1393252	8					
ANR	1393821	Condition	attsyntax	449:5:10474:10482	1393252	0	True				
ANR	1393822	Identifier	attsyntax		1393252	0					
ANR	1393823	CompoundStatement		117:16:2711:2711	1393252	1					
ANR	1393824	Statement	r_egg_printf	450:2:10489:10500	1393252	0	True				
ANR	1393825	Statement	(	450:15:10502:10502	1393252	1	True				
ANR	1393826	Statement	egg	450:16:10503:10505	1393252	2	True				
ANR	1393827	Statement	","	450:19:10506:10506	1393252	3	True				
ANR	1393828	Statement	"""  pop %%"""	450:21:10508:10517	1393252	4	True				
ANR	1393829	Statement	R_AX	450:31:10518:10521	1393252	5	True				
ANR	1393830	Statement	"""\\n"""	450:35:10522:10525	1393252	6	True				
ANR	1393831	Statement	)	450:39:10526:10526	1393252	7	True				
ANR	1393832	ExpressionStatement		450:40:10527:10527	1393252	8	True				
ANR	1393833	Statement	r_egg_printf	451:2:10586:10597	1393252	9	True				
ANR	1393834	Statement	(	451:15:10599:10599	1393252	10	True				
ANR	1393835	Statement	egg	451:16:10600:10602	1393252	11	True				
ANR	1393836	Statement	","	451:19:10603:10603	1393252	12	True				
ANR	1393837	Statement	"""  cmp%c %s, %%"""	451:21:10605:10620	1393252	13	True				
ANR	1393838	Statement	R_AX	451:37:10621:10624	1393252	14	True				
ANR	1393839	Statement	"""\\n"""	451:41:10625:10628	1393252	15	True				
ANR	1393840	Statement	","	451:45:10629:10629	1393252	16	True				
ANR	1393841	Statement	sz	451:47:10631:10632	1393252	17	True				
ANR	1393842	Statement	","	451:49:10633:10633	1393252	18	True				
ANR	1393843	Statement	p	451:51:10635:10635	1393252	19	True				
ANR	1393844	Statement	)	451:52:10636:10636	1393252	20	True				
ANR	1393845	ExpressionStatement		451:53:10637:10637	1393252	21	True				
ANR	1393846	ElseStatement	else		1393252	0					
ANR	1393847	CompoundStatement		120:8:2873:2873	1393252	0					
ANR	1393848	Statement	r_egg_printf	453:2:10651:10662	1393252	0	True				
ANR	1393849	Statement	(	453:15:10664:10664	1393252	1	True				
ANR	1393850	Statement	egg	453:16:10665:10667	1393252	2	True				
ANR	1393851	Statement	","	453:19:10668:10668	1393252	3	True				
ANR	1393852	Statement	"""  pop """	453:21:10670:10677	1393252	4	True				
ANR	1393853	Statement	R_AX	453:29:10678:10681	1393252	5	True				
ANR	1393854	Statement	"""\\n"""	453:33:10682:10685	1393252	6	True				
ANR	1393855	Statement	)	453:37:10686:10686	1393252	7	True				
ANR	1393856	ExpressionStatement		453:38:10687:10687	1393252	8	True				
ANR	1393857	Statement	r_egg_printf	454:2:10746:10757	1393252	9	True				
ANR	1393858	Statement	(	454:15:10759:10759	1393252	10	True				
ANR	1393859	Statement	egg	454:16:10760:10762	1393252	11	True				
ANR	1393860	Statement	","	454:19:10763:10763	1393252	12	True				
ANR	1393861	Statement	"""  cmp """	454:21:10765:10772	1393252	13	True				
ANR	1393862	Statement	R_AX	454:29:10773:10776	1393252	14	True				
ANR	1393863	Statement	""", %s\\n"""	454:33:10777:10784	1393252	15	True				
ANR	1393864	Statement	","	454:41:10785:10785	1393252	16	True				
ANR	1393865	Statement	p	454:43:10787:10787	1393252	17	True				
ANR	1393866	Statement	)	454:44:10788:10788	1393252	18	True				
ANR	1393867	ExpressionStatement		454:45:10789:10789	1393252	19	True				
ANR	1393868	ExpressionStatement	free ( p )	457:1:10814:10822	1393252	9	True				
ANR	1393869	CallExpression	free ( p )		1393252	0					
ANR	1393870	Callee	free		1393252	0					
ANR	1393871	Identifier	free		1393252	0					
ANR	1393872	ArgumentList	p		1393252	1					
ANR	1393873	Argument	p		1393252	0					
ANR	1393874	Identifier	p		1393252	0					
ANR	1393875	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"	458:1:10825:10865	1393252	10	True				
ANR	1393876	CallExpression	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"		1393252	0					
ANR	1393877	Callee	r_egg_printf		1393252	0					
ANR	1393878	Identifier	r_egg_printf		1393252	0					
ANR	1393879	ArgumentList	egg		1393252	1					
ANR	1393880	Argument	egg		1393252	0					
ANR	1393881	Identifier	egg		1393252	0					
ANR	1393882	Argument	"""  %s %s\\n"""		1393252	1					
ANR	1393883	PrimaryExpression	"""  %s %s\\n"""		1393252	0					
ANR	1393884	Argument	op		1393252	2					
ANR	1393885	Identifier	op		1393252	0					
ANR	1393886	Argument	dst		1393252	3					
ANR	1393887	Identifier	dst		1393252	0					
ANR	1393888	Statement	static	461:0:10870:10875	1393252	76	True				
ANR	1393889	Statement	void	461:7:10877:10880	1393252	77	True				
ANR	1393890	Statement	emit_load	461:12:10882:10890	1393252	78	True				
ANR	1393891	Statement	(	461:21:10891:10891	1393252	79	True				
ANR	1393892	Statement	REgg	461:22:10892:10895	1393252	80	True				
ANR	1393893	Statement	*	461:27:10897:10897	1393252	81	True				
ANR	1393894	Statement	egg	461:28:10898:10900	1393252	82	True				
ANR	1393895	Statement	","	461:31:10901:10901	1393252	83	True				
ANR	1393896	Statement	const	461:33:10903:10907	1393252	84	True				
ANR	1393897	Statement	char	461:39:10909:10912	1393252	85	True				
ANR	1393898	Statement	*	461:44:10914:10914	1393252	86	True				
ANR	1393899	Statement	dst	461:45:10915:10917	1393252	87	True				
ANR	1393900	Statement	","	461:48:10918:10918	1393252	88	True				
ANR	1393901	Statement	int	461:50:10920:10922	1393252	89	True				
ANR	1393902	Statement	sz	461:54:10924:10925	1393252	90	True				
ANR	1393903	Statement	)	461:56:10926:10926	1393252	91	True				
ANR	1393904	CompoundStatement		129:58:3154:3154	1393252	92					
ANR	1393905	IfStatement	if ( attsyntax )		1393252	0					
ANR	1393906	Condition	attsyntax	462:5:10935:10943	1393252	0	True				
ANR	1393907	Identifier	attsyntax		1393252	0					
ANR	1393908	CompoundStatement		130:16:3172:3172	1393252	1					
ANR	1393909	SwitchStatement	switch ( sz )		1393252	0					
ANR	1393910	Condition	sz	463:10:10958:10959	1393252	0	True				
ANR	1393911	Identifier	sz		1393252	0					
ANR	1393912	CompoundStatement		131:14:3188:3188	1393252	1					
ANR	1393913	Label	case 'l' :	464:2:10966:10974	1393252	0	True				
ANR	1393914	Statement	r_egg_printf	465:3:10979:10990	1393252	1	True				
ANR	1393915	Statement	(	465:16:10992:10992	1393252	2	True				
ANR	1393916	Statement	egg	465:17:10993:10995	1393252	3	True				
ANR	1393917	Statement	","	465:20:10996:10996	1393252	4	True				
ANR	1393918	Statement	"""  movl %s, %%"""	465:22:10998:11012	1393252	5	True				
ANR	1393919	Statement	R_AX	465:37:11013:11016	1393252	6	True				
ANR	1393920	Statement	"""\\n"""	465:41:11017:11020	1393252	7	True				
ANR	1393921	Statement	","	465:45:11021:11021	1393252	8	True				
ANR	1393922	Statement	dst	465:47:11023:11025	1393252	9	True				
ANR	1393923	Statement	)	465:50:11026:11026	1393252	10	True				
ANR	1393924	ExpressionStatement		465:51:11027:11027	1393252	11	True				
ANR	1393925	Statement	r_egg_printf	466:3:11032:11043	1393252	12	True				
ANR	1393926	Statement	(	466:16:11045:11045	1393252	13	True				
ANR	1393927	Statement	egg	466:17:11046:11048	1393252	14	True				
ANR	1393928	Statement	","	466:20:11049:11049	1393252	15	True				
ANR	1393929	Statement	"""  movl (%%"""	466:22:11051:11062	1393252	16	True				
ANR	1393930	Statement	R_AX	466:34:11063:11066	1393252	17	True				
ANR	1393931	Statement	"""), %%"""	466:38:11067:11073	1393252	18	True				
ANR	1393932	Statement	R_AX	466:45:11074:11077	1393252	19	True				
ANR	1393933	Statement	"""\\n"""	466:49:11078:11081	1393252	20	True				
ANR	1393934	Statement	)	466:53:11082:11082	1393252	21	True				
ANR	1393935	ExpressionStatement		466:54:11083:11083	1393252	22	True				
ANR	1393936	BreakStatement	break ;	467:3:11088:11093	1393252	23	True				
ANR	1393937	Label	case 'b' :	468:2:11097:11105	1393252	24	True				
ANR	1393938	Statement	r_egg_printf	469:3:11110:11121	1393252	25	True				
ANR	1393939	Statement	(	469:16:11123:11123	1393252	26	True				
ANR	1393940	Statement	egg	469:17:11124:11126	1393252	27	True				
ANR	1393941	Statement	","	469:20:11127:11127	1393252	28	True				
ANR	1393942	Statement	"""  movl %s, %%"""	469:22:11129:11143	1393252	29	True				
ANR	1393943	Statement	R_AX	469:37:11144:11147	1393252	30	True				
ANR	1393944	Statement	"""\\n"""	469:41:11148:11151	1393252	31	True				
ANR	1393945	Statement	","	469:45:11152:11152	1393252	32	True				
ANR	1393946	Statement	dst	469:47:11154:11156	1393252	33	True				
ANR	1393947	Statement	)	469:50:11157:11157	1393252	34	True				
ANR	1393948	ExpressionStatement		469:51:11158:11158	1393252	35	True				
ANR	1393949	Statement	r_egg_printf	470:3:11163:11174	1393252	36	True				
ANR	1393950	Statement	(	470:16:11176:11176	1393252	37	True				
ANR	1393951	Statement	egg	470:17:11177:11179	1393252	38	True				
ANR	1393952	Statement	","	470:20:11180:11180	1393252	39	True				
ANR	1393953	Statement	"""  movzb (%%"""	470:22:11182:11194	1393252	40	True				
ANR	1393954	Statement	R_AX	470:35:11195:11198	1393252	41	True				
ANR	1393955	Statement	"""), %%"""	470:39:11199:11205	1393252	42	True				
ANR	1393956	Statement	R_AX	470:46:11206:11209	1393252	43	True				
ANR	1393957	Statement	"""\\n"""	470:50:11210:11213	1393252	44	True				
ANR	1393958	Statement	)	470:54:11214:11214	1393252	45	True				
ANR	1393959	ExpressionStatement		470:55:11215:11215	1393252	46	True				
ANR	1393960	BreakStatement	break ;	471:3:11220:11225	1393252	47	True				
ANR	1393961	Label	default :	472:2:11229:11236	1393252	48	True				
ANR	1393962	Identifier	default		1393252	0					
ANR	1393963	Statement	r_egg_printf	474:3:11266:11277	1393252	49	True				
ANR	1393964	Statement	(	474:16:11279:11279	1393252	50	True				
ANR	1393965	Statement	egg	474:17:11280:11282	1393252	51	True				
ANR	1393966	Statement	","	474:20:11283:11283	1393252	52	True				
ANR	1393967	Statement	"""  mov%c %s, %%"""	474:22:11285:11300	1393252	53	True				
ANR	1393968	Statement	R_AX	474:38:11301:11304	1393252	54	True				
ANR	1393969	Statement	"""\\n"""	474:42:11305:11308	1393252	55	True				
ANR	1393970	Statement	","	474:46:11309:11309	1393252	56	True				
ANR	1393971	Statement	sz	474:48:11311:11312	1393252	57	True				
ANR	1393972	Statement	","	474:50:11313:11313	1393252	58	True				
ANR	1393973	Statement	dst	474:52:11315:11317	1393252	59	True				
ANR	1393974	Statement	)	474:55:11318:11318	1393252	60	True				
ANR	1393975	ExpressionStatement		474:56:11319:11319	1393252	61	True				
ANR	1393976	Statement	r_egg_printf	475:3:11324:11335	1393252	62	True				
ANR	1393977	Statement	(	475:16:11337:11337	1393252	63	True				
ANR	1393978	Statement	egg	475:17:11338:11340	1393252	64	True				
ANR	1393979	Statement	","	475:20:11341:11341	1393252	65	True				
ANR	1393980	Statement	"""  mov%c (%%"""	475:22:11343:11355	1393252	66	True				
ANR	1393981	Statement	R_AX	475:35:11356:11359	1393252	67	True				
ANR	1393982	Statement	"""), %%"""	475:39:11360:11366	1393252	68	True				
ANR	1393983	Statement	R_AX	475:46:11367:11370	1393252	69	True				
ANR	1393984	Statement	"""\\n"""	475:50:11371:11374	1393252	70	True				
ANR	1393985	Statement	","	475:54:11375:11375	1393252	71	True				
ANR	1393986	Statement	sz	475:56:11377:11378	1393252	72	True				
ANR	1393987	Statement	)	475:58:11379:11379	1393252	73	True				
ANR	1393988	ExpressionStatement		475:59:11380:11380	1393252	74	True				
ANR	1393989	ElseStatement	else		1393252	0					
ANR	1393990	CompoundStatement		145:8:3620:3620	1393252	0					
ANR	1393991	SwitchStatement	switch ( sz )		1393252	0					
ANR	1393992	Condition	sz	478:10:11406:11407	1393252	0	True				
ANR	1393993	Identifier	sz		1393252	0					
ANR	1393994	CompoundStatement		146:14:3636:3636	1393252	1					
ANR	1393995	Label	case 'l' :	479:2:11414:11422	1393252	0	True				
ANR	1393996	Statement	r_egg_printf	480:3:11427:11438	1393252	1	True				
ANR	1393997	Statement	(	480:16:11440:11440	1393252	2	True				
ANR	1393998	Statement	egg	480:17:11441:11443	1393252	3	True				
ANR	1393999	Statement	","	480:20:11444:11444	1393252	4	True				
ANR	1394000	Statement	"""  mov """	480:22:11446:11453	1393252	5	True				
ANR	1394001	Statement	R_AX	480:30:11454:11457	1393252	6	True				
ANR	1394002	Statement	""", %s\\n"""	480:34:11458:11465	1393252	7	True				
ANR	1394003	Statement	","	480:42:11466:11466	1393252	8	True				
ANR	1394004	Statement	dst	480:44:11468:11470	1393252	9	True				
ANR	1394005	Statement	)	480:47:11471:11471	1393252	10	True				
ANR	1394006	ExpressionStatement		480:48:11472:11472	1393252	11	True				
ANR	1394007	Statement	r_egg_printf	481:3:11477:11488	1393252	12	True				
ANR	1394008	Statement	(	481:16:11490:11490	1393252	13	True				
ANR	1394009	Statement	egg	481:17:11491:11493	1393252	14	True				
ANR	1394010	Statement	","	481:20:11494:11494	1393252	15	True				
ANR	1394011	Statement	"""  mov """	481:22:11496:11503	1393252	16	True				
ANR	1394012	Statement	R_AX	481:30:11504:11507	1393252	17	True				
ANR	1394013	Statement	""", ["""	481:34:11508:11512	1393252	18	True				
ANR	1394014	Statement	R_AX	481:39:11513:11516	1393252	19	True				
ANR	1394015	Statement	"""]\\n"""	481:43:11517:11521	1393252	20	True				
ANR	1394016	Statement	)	481:48:11522:11522	1393252	21	True				
ANR	1394017	ExpressionStatement		481:49:11523:11523	1393252	22	True				
ANR	1394018	BreakStatement	break ;	482:3:11528:11533	1393252	23	True				
ANR	1394019	Label	case 'b' :	483:2:11537:11545	1393252	24	True				
ANR	1394020	Statement	r_egg_printf	484:3:11550:11561	1393252	25	True				
ANR	1394021	Statement	(	484:16:11563:11563	1393252	26	True				
ANR	1394022	Statement	egg	484:17:11564:11566	1393252	27	True				
ANR	1394023	Statement	","	484:20:11567:11567	1393252	28	True				
ANR	1394024	Statement	"""  mov """	484:22:11569:11576	1393252	29	True				
ANR	1394025	Statement	R_AX	484:30:11577:11580	1393252	30	True				
ANR	1394026	Statement	""", %s\\n"""	484:34:11581:11588	1393252	31	True				
ANR	1394027	Statement	","	484:42:11589:11589	1393252	32	True				
ANR	1394028	Statement	dst	484:44:11591:11593	1393252	33	True				
ANR	1394029	Statement	)	484:47:11594:11594	1393252	34	True				
ANR	1394030	ExpressionStatement		484:48:11595:11595	1393252	35	True				
ANR	1394031	Statement	r_egg_printf	485:3:11600:11611	1393252	36	True				
ANR	1394032	Statement	(	485:16:11613:11613	1393252	37	True				
ANR	1394033	Statement	egg	485:17:11614:11616	1393252	38	True				
ANR	1394034	Statement	","	485:20:11617:11617	1393252	39	True				
ANR	1394035	Statement	"""  movz """	485:22:11619:11627	1393252	40	True				
ANR	1394036	Statement	R_AX	485:31:11628:11631	1393252	41	True				
ANR	1394037	Statement	""", ["""	485:35:11632:11636	1393252	42	True				
ANR	1394038	Statement	R_AX	485:40:11637:11640	1393252	43	True				
ANR	1394039	Statement	"""]\\n"""	485:44:11641:11645	1393252	44	True				
ANR	1394040	Statement	)	485:49:11646:11646	1393252	45	True				
ANR	1394041	ExpressionStatement		485:50:11647:11647	1393252	46	True				
ANR	1394042	BreakStatement	break ;	486:3:11652:11657	1393252	47	True				
ANR	1394043	Label	default :	487:2:11661:11668	1393252	48	True				
ANR	1394044	Identifier	default		1393252	0					
ANR	1394045	Statement	r_egg_printf	489:3:11698:11709	1393252	49	True				
ANR	1394046	Statement	(	489:16:11711:11711	1393252	50	True				
ANR	1394047	Statement	egg	489:17:11712:11714	1393252	51	True				
ANR	1394048	Statement	","	489:20:11715:11715	1393252	52	True				
ANR	1394049	Statement	"""  mov """	489:22:11717:11724	1393252	53	True				
ANR	1394050	Statement	R_AX	489:30:11725:11728	1393252	54	True				
ANR	1394051	Statement	""", %s\\n"""	489:34:11729:11736	1393252	55	True				
ANR	1394052	Statement	","	489:42:11737:11737	1393252	56	True				
ANR	1394053	Statement	dst	489:44:11739:11741	1393252	57	True				
ANR	1394054	Statement	)	489:47:11742:11742	1393252	58	True				
ANR	1394055	ExpressionStatement		489:48:11743:11743	1393252	59	True				
ANR	1394056	Statement	r_egg_printf	490:3:11748:11759	1393252	60	True				
ANR	1394057	Statement	(	490:16:11761:11761	1393252	61	True				
ANR	1394058	Statement	egg	490:17:11762:11764	1393252	62	True				
ANR	1394059	Statement	","	490:20:11765:11765	1393252	63	True				
ANR	1394060	Statement	"""  mov """	490:22:11767:11774	1393252	64	True				
ANR	1394061	Statement	R_AX	490:30:11775:11778	1393252	65	True				
ANR	1394062	Statement	""", ["""	490:34:11779:11783	1393252	66	True				
ANR	1394063	Statement	R_AX	490:39:11784:11787	1393252	67	True				
ANR	1394064	Statement	"""]\\n"""	490:43:11788:11792	1393252	68	True				
ANR	1394065	Statement	)	490:48:11793:11793	1393252	69	True				
ANR	1394066	ExpressionStatement		490:49:11794:11794	1393252	70	True				
ANR	1394067	Statement	static	495:0:11806:11811	1393252	93	True				
ANR	1394068	Statement	void	495:7:11813:11816	1393252	94	True				
ANR	1394069	Statement	emit_mathop	495:12:11818:11828	1393252	95	True				
ANR	1394070	Statement	(	495:23:11829:11829	1393252	96	True				
ANR	1394071	Statement	REgg	495:24:11830:11833	1393252	97	True				
ANR	1394072	Statement	*	495:29:11835:11835	1393252	98	True				
ANR	1394073	Statement	egg	495:30:11836:11838	1393252	99	True				
ANR	1394074	Statement	","	495:33:11839:11839	1393252	100	True				
ANR	1394075	Statement	int	495:35:11841:11843	1393252	101	True				
ANR	1394076	Statement	ch	495:39:11845:11846	1393252	102	True				
ANR	1394077	Statement	","	495:41:11847:11847	1393252	103	True				
ANR	1394078	Statement	int	495:43:11849:11851	1393252	104	True				
ANR	1394079	Statement	vs	495:47:11853:11854	1393252	105	True				
ANR	1394080	Statement	","	495:49:11855:11855	1393252	106	True				
ANR	1394081	Statement	int	495:51:11857:11859	1393252	107	True				
ANR	1394082	Statement	type	495:55:11861:11864	1393252	108	True				
ANR	1394083	Statement	","	495:59:11865:11865	1393252	109	True				
ANR	1394084	Statement	const	495:61:11867:11871	1393252	110	True				
ANR	1394085	Statement	char	495:67:11873:11876	1393252	111	True				
ANR	1394086	Statement	*	495:72:11878:11878	1393252	112	True				
ANR	1394087	Statement	eq	495:73:11879:11880	1393252	113	True				
ANR	1394088	Statement	","	495:75:11881:11881	1393252	114	True				
ANR	1394089	Statement	const	495:77:11883:11887	1393252	115	True				
ANR	1394090	Statement	char	495:83:11889:11892	1393252	116	True				
ANR	1394091	Statement	*	495:88:11894:11894	1393252	117	True				
ANR	1394092	Statement	p	495:89:11895:11895	1393252	118	True				
ANR	1394093	Statement	)	495:90:11896:11896	1393252	119	True				
ANR	1394094	CompoundStatement		164:1:4127:4135	1393252	120					
ANR	1394095	IdentifierDeclStatement	char * op ;	496:1:11901:11909	1393252	0	True				
ANR	1394096	IdentifierDecl	* op		1393252	0					
ANR	1394097	IdentifierDeclType	char *		1393252	0					
ANR	1394098	Identifier	op		1393252	1					
ANR	1394099	SwitchStatement	switch ( ch )		1393252	1					
ANR	1394100	Condition	ch	497:8:11919:11920	1393252	0	True				
ANR	1394101	Identifier	ch		1393252	0					
ANR	1394102	CompoundStatement		165:12:4149:4149	1393252	1					
ANR	1394103	Label	case '^' :	498:1:11926:11934	1393252	0	True				
ANR	1394104	ExpressionStatement	"op = ""xor"""	498:11:11936:11946	1393252	1	True				
ANR	1394105	AssignmentExpression	"op = ""xor"""		1393252	0		=			
ANR	1394106	Identifier	op		1393252	0					
ANR	1394107	PrimaryExpression	"""xor"""		1393252	1					
ANR	1394108	BreakStatement	break ;	498:23:11948:11953	1393252	2	True				
ANR	1394109	Label	case '&' :	499:1:11956:11964	1393252	3	True				
ANR	1394110	ExpressionStatement	"op = ""and"""	499:11:11966:11976	1393252	4	True				
ANR	1394111	AssignmentExpression	"op = ""and"""		1393252	0		=			
ANR	1394112	Identifier	op		1393252	0					
ANR	1394113	PrimaryExpression	"""and"""		1393252	1					
ANR	1394114	BreakStatement	break ;	499:23:11978:11983	1393252	5	True				
ANR	1394115	Label	case '|' :	500:1:11986:11994	1393252	6	True				
ANR	1394116	ExpressionStatement	"op = ""or"""	500:11:11996:12005	1393252	7	True				
ANR	1394117	AssignmentExpression	"op = ""or"""		1393252	0		=			
ANR	1394118	Identifier	op		1393252	0					
ANR	1394119	PrimaryExpression	"""or"""		1393252	1					
ANR	1394120	BreakStatement	break ;	500:23:12008:12013	1393252	8	True				
ANR	1394121	Label	case '-' :	501:1:12016:12024	1393252	9	True				
ANR	1394122	ExpressionStatement	"op = ""sub"""	501:11:12026:12036	1393252	10	True				
ANR	1394123	AssignmentExpression	"op = ""sub"""		1393252	0		=			
ANR	1394124	Identifier	op		1393252	0					
ANR	1394125	PrimaryExpression	"""sub"""		1393252	1					
ANR	1394126	BreakStatement	break ;	501:23:12038:12043	1393252	11	True				
ANR	1394127	Label	case '+' :	502:1:12046:12054	1393252	12	True				
ANR	1394128	ExpressionStatement	"op = ""add"""	502:11:12056:12066	1393252	13	True				
ANR	1394129	AssignmentExpression	"op = ""add"""		1393252	0		=			
ANR	1394130	Identifier	op		1393252	0					
ANR	1394131	PrimaryExpression	"""add"""		1393252	1					
ANR	1394132	BreakStatement	break ;	502:23:12068:12073	1393252	14	True				
ANR	1394133	Label	case '*' :	503:1:12076:12084	1393252	15	True				
ANR	1394134	ExpressionStatement	"op = ""mul"""	503:11:12086:12096	1393252	16	True				
ANR	1394135	AssignmentExpression	"op = ""mul"""		1393252	0		=			
ANR	1394136	Identifier	op		1393252	0					
ANR	1394137	PrimaryExpression	"""mul"""		1393252	1					
ANR	1394138	BreakStatement	break ;	503:23:12098:12103	1393252	17	True				
ANR	1394139	Label	case '/' :	504:1:12106:12114	1393252	18	True				
ANR	1394140	ExpressionStatement	"op = ""div"""	504:11:12116:12126	1393252	19	True				
ANR	1394141	AssignmentExpression	"op = ""div"""		1393252	0		=			
ANR	1394142	Identifier	op		1393252	0					
ANR	1394143	PrimaryExpression	"""div"""		1393252	1					
ANR	1394144	BreakStatement	break ;	504:23:12128:12133	1393252	20	True				
ANR	1394145	Label	default :	505:1:12136:12143	1393252	21	True				
ANR	1394146	Identifier	default		1393252	0					
ANR	1394147	ExpressionStatement	"op = ""mov"""	505:11:12146:12156	1393252	22	True				
ANR	1394148	AssignmentExpression	"op = ""mov"""		1393252	0		=			
ANR	1394149	Identifier	op		1393252	0					
ANR	1394150	PrimaryExpression	"""mov"""		1393252	1					
ANR	1394151	BreakStatement	break ;	505:23:12158:12163	1393252	23	True				
ANR	1394152	IfStatement	if ( attsyntax )		1393252	2					
ANR	1394153	Condition	attsyntax	507:5:12173:12181	1393252	0	True				
ANR	1394154	Identifier	attsyntax		1393252	0					
ANR	1394155	CompoundStatement		175:16:4410:4410	1393252	1					
ANR	1394156	IfStatement	if ( ! eq )		1393252	0					
ANR	1394157	Condition	! eq	508:6:12192:12194	1393252	0	True				
ANR	1394158	UnaryOperationExpression	! eq		1393252	0					
ANR	1394159	UnaryOperator	!		1393252	0					
ANR	1394160	Identifier	eq		1393252	1					
ANR	1394161	CompoundStatement		176:11:4423:4423	1393252	1					
ANR	1394162	Statement	eq	509:3:12202:12203	1393252	0	True				
ANR	1394163	Statement	=	509:6:12205:12205	1393252	1	True				
ANR	1394164	Statement	"""%"""	509:8:12207:12209	1393252	2	True				
ANR	1394165	ExpressionStatement	R_AX	509:12:12211:12215	1393252	3	True				
ANR	1394166	Identifier	R_AX		1393252	0					
ANR	1394167	IfStatement	if ( ! p )		1393252	1					
ANR	1394168	Condition	! p	511:6:12227:12228	1393252	0	True				
ANR	1394169	UnaryOperationExpression	! p		1393252	0					
ANR	1394170	UnaryOperator	!		1393252	0					
ANR	1394171	Identifier	p		1393252	1					
ANR	1394172	CompoundStatement		179:10:4457:4457	1393252	1					
ANR	1394173	Statement	p	512:3:12236:12236	1393252	0	True				
ANR	1394174	Statement	=	512:5:12238:12238	1393252	1	True				
ANR	1394175	Statement	"""%"""	512:7:12240:12242	1393252	2	True				
ANR	1394176	ExpressionStatement	R_AX	512:11:12244:12248	1393252	3	True				
ANR	1394177	Identifier	R_AX		1393252	0					
ANR	1394178	ExpressionStatement	"r_egg_printf ( egg , ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	514:2:12256:12316	1393252	2	True				
ANR	1394179	CallExpression	"r_egg_printf ( egg , ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		1393252	0					
ANR	1394180	Callee	r_egg_printf		1393252	0					
ANR	1394181	Identifier	r_egg_printf		1393252	0					
ANR	1394182	ArgumentList	egg		1393252	1					
ANR	1394183	Argument	egg		1393252	0					
ANR	1394184	Identifier	egg		1393252	0					
ANR	1394185	Argument	"""  %s%c %c%s, %s\\n"""		1393252	1					
ANR	1394186	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		1393252	0					
ANR	1394187	Argument	op		1393252	2					
ANR	1394188	Identifier	op		1393252	0					
ANR	1394189	Argument	vs		1393252	3					
ANR	1394190	Identifier	vs		1393252	0					
ANR	1394191	Argument	type		1393252	4					
ANR	1394192	Identifier	type		1393252	0					
ANR	1394193	Argument	eq		1393252	5					
ANR	1394194	Identifier	eq		1393252	0					
ANR	1394195	Argument	p		1393252	6					
ANR	1394196	Identifier	p		1393252	0					
ANR	1394197	ElseStatement	else		1393252	0					
ANR	1394198	CompoundStatement		183:8:4552:4552	1393252	0					
ANR	1394199	IfStatement	if ( ! eq )		1393252	0					
ANR	1394200	Condition	! eq	516:6:12334:12336	1393252	0	True				
ANR	1394201	UnaryOperationExpression	! eq		1393252	0					
ANR	1394202	UnaryOperator	!		1393252	0					
ANR	1394203	Identifier	eq		1393252	1					
ANR	1394204	CompoundStatement		184:11:4565:4565	1393252	1					
ANR	1394205	ExpressionStatement	eq = R_AX	517:3:12344:12353	1393252	0	True				
ANR	1394206	AssignmentExpression	eq = R_AX		1393252	0		=			
ANR	1394207	Identifier	eq		1393252	0					
ANR	1394208	Identifier	R_AX		1393252	1					
ANR	1394209	IfStatement	if ( ! p )		1393252	1					
ANR	1394210	Condition	! p	519:6:12365:12366	1393252	0	True				
ANR	1394211	UnaryOperationExpression	! p		1393252	0					
ANR	1394212	UnaryOperator	!		1393252	0					
ANR	1394213	Identifier	p		1393252	1					
ANR	1394214	CompoundStatement		187:10:4595:4595	1393252	1					
ANR	1394215	ExpressionStatement	p = R_AX	520:3:12374:12382	1393252	0	True				
ANR	1394216	AssignmentExpression	p = R_AX		1393252	0		=			
ANR	1394217	Identifier	p		1393252	0					
ANR	1394218	Identifier	R_AX		1393252	1					
ANR	1394219	ExpressionStatement	"eprintf ( ""TYPE = %c\\n"" , type )"	524:2:12407:12436	1393252	2	True				
ANR	1394220	CallExpression	"eprintf ( ""TYPE = %c\\n"" , type )"		1393252	0					
ANR	1394221	Callee	eprintf		1393252	0					
ANR	1394222	Identifier	eprintf		1393252	0					
ANR	1394223	ArgumentList	"""TYPE = %c\\n"""		1393252	1					
ANR	1394224	Argument	"""TYPE = %c\\n"""		1393252	0					
ANR	1394225	PrimaryExpression	"""TYPE = %c\\n"""		1393252	0					
ANR	1394226	Argument	type		1393252	1					
ANR	1394227	Identifier	type		1393252	0					
ANR	1394228	ExpressionStatement	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	525:2:12440:12490	1393252	3	True				
ANR	1394229	CallExpression	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		1393252	0					
ANR	1394230	Callee	eprintf		1393252	0					
ANR	1394231	Identifier	eprintf		1393252	0					
ANR	1394232	ArgumentList	"""  %s%c %c%s, %s\\n"""		1393252	1					
ANR	1394233	Argument	"""  %s%c %c%s, %s\\n"""		1393252	0					
ANR	1394234	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		1393252	0					
ANR	1394235	Argument	op		1393252	1					
ANR	1394236	Identifier	op		1393252	0					
ANR	1394237	Argument	vs		1393252	2					
ANR	1394238	Identifier	vs		1393252	0					
ANR	1394239	Argument	type		1393252	3					
ANR	1394240	Identifier	type		1393252	0					
ANR	1394241	Argument	eq		1393252	4					
ANR	1394242	Identifier	eq		1393252	0					
ANR	1394243	Argument	p		1393252	5					
ANR	1394244	Identifier	p		1393252	0					
ANR	1394245	ExpressionStatement	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"	526:2:12494:12532	1393252	4	True				
ANR	1394246	CallExpression	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"		1393252	0					
ANR	1394247	Callee	eprintf		1393252	0					
ANR	1394248	Identifier	eprintf		1393252	0					
ANR	1394249	ArgumentList	"""  %s %s, [%s]\\n"""		1393252	1					
ANR	1394250	Argument	"""  %s %s, [%s]\\n"""		1393252	0					
ANR	1394251	PrimaryExpression	"""  %s %s, [%s]\\n"""		1393252	0					
ANR	1394252	Argument	op		1393252	1					
ANR	1394253	Identifier	op		1393252	0					
ANR	1394254	Argument	p		1393252	2					
ANR	1394255	Identifier	p		1393252	0					
ANR	1394256	Argument	eq		1393252	3					
ANR	1394257	Identifier	eq		1393252	0					
ANR	1394258	IfStatement	if ( type == '*' )		1393252	5					
ANR	1394259	Condition	type == '*'	528:6:12547:12557	1393252	0	True				
ANR	1394260	EqualityExpression	type == '*'		1393252	0		==			
ANR	1394261	Identifier	type		1393252	0					
ANR	1394262	PrimaryExpression	'*'		1393252	1					
ANR	1394263	CompoundStatement		196:19:4786:4786	1393252	1					
ANR	1394264	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"	529:3:12565:12613	1393252	0	True				
ANR	1394265	CallExpression	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"		1393252	0					
ANR	1394266	Callee	r_egg_printf		1393252	0					
ANR	1394267	Identifier	r_egg_printf		1393252	0					
ANR	1394268	ArgumentList	egg		1393252	1					
ANR	1394269	Argument	egg		1393252	0					
ANR	1394270	Identifier	egg		1393252	0					
ANR	1394271	Argument	"""  %s %s, [%s]\\n"""		1393252	1					
ANR	1394272	PrimaryExpression	"""  %s %s, [%s]\\n"""		1393252	0					
ANR	1394273	Argument	op		1393252	2					
ANR	1394274	Identifier	op		1393252	0					
ANR	1394275	Argument	p		1393252	3					
ANR	1394276	Identifier	p		1393252	0					
ANR	1394277	Argument	eq		1393252	4					
ANR	1394278	Identifier	eq		1393252	0					
ANR	1394279	ElseStatement	else		1393252	0					
ANR	1394280	CompoundStatement		198:9:4850:4850	1393252	0					
ANR	1394281	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"	531:3:12629:12675	1393252	0	True				
ANR	1394282	CallExpression	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"		1393252	0					
ANR	1394283	Callee	r_egg_printf		1393252	0					
ANR	1394284	Identifier	r_egg_printf		1393252	0					
ANR	1394285	ArgumentList	egg		1393252	1					
ANR	1394286	Argument	egg		1393252	0					
ANR	1394287	Identifier	egg		1393252	0					
ANR	1394288	Argument	"""  %s %s, %s\\n"""		1393252	1					
ANR	1394289	PrimaryExpression	"""  %s %s, %s\\n"""		1393252	0					
ANR	1394290	Argument	op		1393252	2					
ANR	1394291	Identifier	op		1393252	0					
ANR	1394292	Argument	p		1393252	3					
ANR	1394293	Identifier	p		1393252	0					
ANR	1394294	Argument	eq		1393252	4					
ANR	1394295	Identifier	eq		1393252	0					
ANR	1394296	Statement	static	536:0:12687:12692	1393252	121	True				
ANR	1394297	Statement	const	536:7:12694:12698	1393252	122	True				
ANR	1394298	Statement	char	536:13:12700:12703	1393252	123	True				
ANR	1394299	Statement	*	536:17:12704:12704	1393252	124	True				
ANR	1394300	Statement	emit_regs	536:19:12706:12714	1393252	125	True				
ANR	1394301	Statement	(	536:28:12715:12715	1393252	126	True				
ANR	1394302	Statement	REgg	536:29:12716:12719	1393252	127	True				
ANR	1394303	Statement	*	536:34:12721:12721	1393252	128	True				
ANR	1394304	Statement	egg	536:35:12722:12724	1393252	129	True				
ANR	1394305	Statement	","	536:38:12725:12725	1393252	130	True				
ANR	1394306	Statement	int	536:40:12727:12729	1393252	131	True				
ANR	1394307	Statement	idx	536:44:12731:12733	1393252	132	True				
ANR	1394308	Statement	)	536:47:12734:12734	1393252	133	True				
ANR	1394309	CompoundStatement		204:49:4962:4962	1393252	134					
ANR	1394310	ReturnStatement	return regs [ idx % R_NGP ] ;	537:1:12739:12761	1393252	0	True				
ANR	1394311	ArrayIndexing	regs [ idx % R_NGP ]		1393252	0					
ANR	1394312	Identifier	regs		1393252	0					
ANR	1394313	MultiplicativeExpression	idx % R_NGP		1393252	1		%			
ANR	1394314	Identifier	idx		1393252	0					
ANR	1394315	Identifier	R_NGP		1393252	1					
ANR	1394316	Statement	static	540:0:12766:12771	1393252	135	True				
ANR	1394317	Statement	void	540:7:12773:12776	1393252	136	True				
ANR	1394318	Statement	emit_get_ar	540:12:12778:12788	1393252	137	True				
ANR	1394319	Statement	(	540:24:12790:12790	1393252	138	True				
ANR	1394320	Statement	REgg	540:25:12791:12794	1393252	139	True				
ANR	1394321	Statement	*	540:30:12796:12796	1393252	140	True				
ANR	1394322	Statement	egg	540:31:12797:12799	1393252	141	True				
ANR	1394323	Statement	","	540:34:12800:12800	1393252	142	True				
ANR	1394324	Statement	char	540:36:12802:12805	1393252	143	True				
ANR	1394325	Statement	*	540:41:12807:12807	1393252	144	True				
ANR	1394326	Statement	out	540:42:12808:12810	1393252	145	True				
ANR	1394327	Statement	","	540:45:12811:12811	1393252	146	True				
ANR	1394328	Statement	int	540:47:12813:12815	1393252	147	True				
ANR	1394329	Statement	idx	540:51:12817:12819	1393252	148	True				
ANR	1394330	Statement	)	540:54:12820:12820	1393252	149	True				
ANR	1394331	CompoundStatement		209:1:5051:5104	1393252	150					
ANR	1394332	IdentifierDeclStatement	"const char * reg = emit_regs ( egg , R_REG_AR_OFF + idx ) ;"	541:1:12825:12878	1393252	0	True				
ANR	1394333	IdentifierDecl	"* reg = emit_regs ( egg , R_REG_AR_OFF + idx )"		1393252	0					
ANR	1394334	IdentifierDeclType	const char *		1393252	0					
ANR	1394335	Identifier	reg		1393252	1					
ANR	1394336	AssignmentExpression	"* reg = emit_regs ( egg , R_REG_AR_OFF + idx )"		1393252	2		=			
ANR	1394337	Identifier	reg		1393252	0					
ANR	1394338	CallExpression	"emit_regs ( egg , R_REG_AR_OFF + idx )"		1393252	1					
ANR	1394339	Callee	emit_regs		1393252	0					
ANR	1394340	Identifier	emit_regs		1393252	0					
ANR	1394341	ArgumentList	egg		1393252	1					
ANR	1394342	Argument	egg		1393252	0					
ANR	1394343	Identifier	egg		1393252	0					
ANR	1394344	Argument	R_REG_AR_OFF + idx		1393252	1					
ANR	1394345	AdditiveExpression	R_REG_AR_OFF + idx		1393252	0		+			
ANR	1394346	Identifier	R_REG_AR_OFF		1393252	0					
ANR	1394347	Identifier	idx		1393252	1					
ANR	1394348	IfStatement	if ( reg )		1393252	1					
ANR	1394349	Condition	reg	543:5:12886:12888	1393252	0	True				
ANR	1394350	Identifier	reg		1393252	0					
ANR	1394351	CompoundStatement		211:10:5117:5117	1393252	1					
ANR	1394352	ExpressionStatement	"strcpy ( out , reg )"	544:2:12895:12912	1393252	0	True				
ANR	1394353	CallExpression	"strcpy ( out , reg )"		1393252	0					
ANR	1394354	Callee	strcpy		1393252	0					
ANR	1394355	Identifier	strcpy		1393252	0					
ANR	1394356	ArgumentList	out		1393252	1					
ANR	1394357	Argument	out		1393252	0					
ANR	1394358	Identifier	out		1393252	0					
ANR	1394359	Argument	reg		1393252	1					
ANR	1394360	Identifier	reg		1393252	0					
ANR	1394361	Statement	REggEmit	548:0:12920:12927	1393252	151	True				
ANR	1394362	Statement	EMIT_NAME	548:9:12929:12937	1393252	152	True				
ANR	1394363	Statement	=	548:19:12939:12939	1393252	153	True				
ANR	1394364	CompoundStatement		216:21:5167:5167	1393252	154					
ANR	1394365	Statement	.	549:1:12944:12944	1393252	0	True				
ANR	1394366	Statement	retvar	549:2:12945:12950	1393252	1	True				
ANR	1394367	Statement	=	549:9:12952:12952	1393252	2	True				
ANR	1394368	Statement	R_AX	549:11:12954:12957	1393252	3	True				
ANR	1394369	Statement	","	549:15:12958:12958	1393252	4	True				
ANR	1394370	Statement	.	550:1:12961:12961	1393252	5	True				
ANR	1394371	Statement	arch	550:2:12962:12965	1393252	6	True				
ANR	1394372	Statement	=	550:7:12967:12967	1393252	7	True				
ANR	1394373	Statement	R_ARCH	550:9:12969:12974	1393252	8	True				
ANR	1394374	Statement	","	550:15:12975:12975	1393252	9	True				
ANR	1394375	Statement	.	551:1:12978:12978	1393252	10	True				
ANR	1394376	Statement	size	551:2:12979:12982	1393252	11	True				
ANR	1394377	Statement	=	551:7:12984:12984	1393252	12	True				
ANR	1394378	Statement	R_SZ	551:9:12986:12989	1393252	13	True				
ANR	1394379	Statement	","	551:13:12990:12990	1393252	14	True				
ANR	1394380	Statement	.	552:1:12993:12993	1393252	15	True				
ANR	1394381	Statement	init	552:2:12994:12997	1393252	16	True				
ANR	1394382	Statement	=	552:7:12999:12999	1393252	17	True				
ANR	1394383	Statement	emit_init	552:9:13001:13009	1393252	18	True				
ANR	1394384	Statement	","	552:18:13010:13010	1393252	19	True				
ANR	1394385	Statement	.	553:1:13013:13013	1393252	20	True				
ANR	1394386	Statement	jmp	553:2:13014:13016	1393252	21	True				
ANR	1394387	Statement	=	553:6:13018:13018	1393252	22	True				
ANR	1394388	Statement	emit_jmp	553:8:13020:13027	1393252	23	True				
ANR	1394389	Statement	","	553:16:13028:13028	1393252	24	True				
ANR	1394390	Statement	.	554:1:13031:13031	1393252	25	True				
ANR	1394391	Statement	call	554:2:13032:13035	1393252	26	True				
ANR	1394392	Statement	=	554:7:13037:13037	1393252	27	True				
ANR	1394393	Statement	emit_call	554:9:13039:13047	1393252	28	True				
ANR	1394394	Statement	","	554:18:13048:13048	1393252	29	True				
ANR	1394395	Statement	.	555:1:13051:13051	1393252	30	True				
ANR	1394396	Statement	equ	555:2:13052:13054	1393252	31	True				
ANR	1394397	Statement	=	555:6:13056:13056	1393252	32	True				
ANR	1394398	Statement	emit_equ	555:8:13058:13065	1393252	33	True				
ANR	1394399	Statement	","	555:16:13066:13066	1393252	34	True				
ANR	1394400	Statement	.	556:1:13069:13069	1393252	35	True				
ANR	1394401	Statement	regs	556:2:13070:13073	1393252	36	True				
ANR	1394402	Statement	=	556:7:13075:13075	1393252	37	True				
ANR	1394403	Statement	emit_regs	556:9:13077:13085	1393252	38	True				
ANR	1394404	Statement	","	556:18:13086:13086	1393252	39	True				
ANR	1394405	Statement	.	558:1:13107:13107	1393252	40	True				
ANR	1394406	Statement	trap	558:2:13108:13111	1393252	41	True				
ANR	1394407	Statement	=	558:7:13113:13113	1393252	42	True				
ANR	1394408	Statement	emit_trap	558:9:13115:13123	1393252	43	True				
ANR	1394409	Statement	","	558:18:13124:13124	1393252	44	True				
ANR	1394410	Statement	.	559:1:13127:13127	1393252	45	True				
ANR	1394411	Statement	frame	559:2:13128:13132	1393252	46	True				
ANR	1394412	Statement	=	559:8:13134:13134	1393252	47	True				
ANR	1394413	Statement	emit_frame	559:10:13136:13145	1393252	48	True				
ANR	1394414	Statement	","	559:20:13146:13146	1393252	49	True				
ANR	1394415	Statement	.	560:1:13149:13149	1393252	50	True				
ANR	1394416	Statement	frame_end	560:2:13150:13158	1393252	51	True				
ANR	1394417	Statement	=	560:12:13160:13160	1393252	52	True				
ANR	1394418	Statement	emit_frame_end	560:14:13162:13175	1393252	53	True				
ANR	1394419	Statement	","	560:28:13176:13176	1393252	54	True				
ANR	1394420	Statement	.	561:1:13179:13179	1393252	55	True				
ANR	1394421	Statement	comment	561:2:13180:13186	1393252	56	True				
ANR	1394422	Statement	=	561:10:13188:13188	1393252	57	True				
ANR	1394423	Statement	emit_comment	561:12:13190:13201	1393252	58	True				
ANR	1394424	Statement	","	561:24:13202:13202	1393252	59	True				
ANR	1394425	Statement	.	562:1:13205:13205	1393252	60	True				
ANR	1394426	Statement	push_arg	562:2:13206:13213	1393252	61	True				
ANR	1394427	Statement	=	562:11:13215:13215	1393252	62	True				
ANR	1394428	Statement	emit_arg	562:13:13217:13224	1393252	63	True				
ANR	1394429	Statement	","	562:21:13225:13225	1393252	64	True				
ANR	1394430	Statement	.	563:1:13228:13228	1393252	65	True				
ANR	1394431	Statement	restore_stack	563:2:13229:13241	1393252	66	True				
ANR	1394432	Statement	=	563:16:13243:13243	1393252	67	True				
ANR	1394433	Statement	emit_restore_stack	563:18:13245:13262	1393252	68	True				
ANR	1394434	Statement	","	563:36:13263:13263	1393252	69	True				
ANR	1394435	Statement	.	564:1:13266:13266	1393252	70	True				
ANR	1394436	Statement	get_result	564:2:13267:13276	1393252	71	True				
ANR	1394437	Statement	=	564:13:13278:13278	1393252	72	True				
ANR	1394438	Statement	emit_get_result	564:15:13280:13294	1393252	73	True				
ANR	1394439	Statement	","	564:30:13295:13295	1393252	74	True				
ANR	1394440	Statement	.	565:1:13298:13298	1393252	75	True				
ANR	1394441	Statement	syscall_args	565:2:13299:13310	1393252	76	True				
ANR	1394442	Statement	=	565:15:13312:13312	1393252	77	True				
ANR	1394443	Statement	emit_syscall_args	565:17:13314:13330	1393252	78	True				
ANR	1394444	Statement	","	565:34:13331:13331	1393252	79	True				
ANR	1394445	Statement	.	566:1:13334:13334	1393252	80	True				
ANR	1394446	Statement	set_string	566:2:13335:13344	1393252	81	True				
ANR	1394447	Statement	=	566:13:13346:13346	1393252	82	True				
ANR	1394448	Statement	emit_string	566:15:13348:13358	1393252	83	True				
ANR	1394449	Statement	","	566:26:13359:13359	1393252	84	True				
ANR	1394450	Statement	.	567:1:13362:13362	1393252	85	True				
ANR	1394451	Statement	get_ar	567:2:13363:13368	1393252	86	True				
ANR	1394452	Statement	=	567:9:13370:13370	1393252	87	True				
ANR	1394453	Statement	emit_get_ar	567:11:13372:13382	1393252	88	True				
ANR	1394454	Statement	","	567:22:13383:13383	1393252	89	True				
ANR	1394455	Statement	.	568:1:13386:13386	1393252	90	True				
ANR	1394456	Statement	get_var	568:2:13387:13393	1393252	91	True				
ANR	1394457	Statement	=	568:10:13395:13395	1393252	92	True				
ANR	1394458	Statement	emit_get_var	568:12:13397:13408	1393252	93	True				
ANR	1394459	Statement	","	568:24:13409:13409	1393252	94	True				
ANR	1394460	Statement	.	569:1:13412:13412	1393252	95	True				
ANR	1394461	Statement	while_end	569:2:13413:13421	1393252	96	True				
ANR	1394462	Statement	=	569:12:13423:13423	1393252	97	True				
ANR	1394463	Statement	emit_while_end	569:14:13425:13438	1393252	98	True				
ANR	1394464	Statement	","	569:28:13439:13439	1393252	99	True				
ANR	1394465	Statement	.	570:1:13442:13442	1393252	100	True				
ANR	1394466	Statement	get_while_end	570:2:13443:13455	1393252	101	True				
ANR	1394467	Statement	=	570:16:13457:13457	1393252	102	True				
ANR	1394468	Statement	emit_get_while_end	570:18:13459:13476	1393252	103	True				
ANR	1394469	Statement	","	570:36:13477:13477	1393252	104	True				
ANR	1394470	Statement	.	571:1:13480:13480	1393252	105	True				
ANR	1394471	Statement	branch	571:2:13481:13486	1393252	106	True				
ANR	1394472	Statement	=	571:9:13488:13488	1393252	107	True				
ANR	1394473	Statement	emit_branch	571:11:13490:13500	1393252	108	True				
ANR	1394474	Statement	","	571:22:13501:13501	1393252	109	True				
ANR	1394475	Statement	.	572:1:13504:13504	1393252	110	True				
ANR	1394476	Statement	load	572:2:13505:13508	1393252	111	True				
ANR	1394477	Statement	=	572:7:13510:13510	1393252	112	True				
ANR	1394478	Statement	emit_load	572:9:13512:13520	1393252	113	True				
ANR	1394479	Statement	","	572:18:13521:13521	1393252	114	True				
ANR	1394480	Statement	.	573:1:13524:13524	1393252	115	True				
ANR	1394481	Statement	load_ptr	573:2:13525:13532	1393252	116	True				
ANR	1394482	Statement	=	573:11:13534:13534	1393252	117	True				
ANR	1394483	Statement	emit_load_ptr	573:13:13536:13548	1393252	118	True				
ANR	1394484	Statement	","	573:26:13549:13549	1393252	119	True				
ANR	1394485	Statement	.	574:1:13552:13552	1393252	120	True				
ANR	1394486	Statement	mathop	574:2:13553:13558	1393252	121	True				
ANR	1394487	Statement	=	574:9:13560:13560	1393252	122	True				
ANR	1394488	Statement	emit_mathop	574:11:13562:13572	1393252	123	True				
ANR	1394489	Statement	","	574:22:13573:13573	1393252	124	True				
ANR	1394490	Statement	.	575:1:13576:13576	1393252	125	True				
ANR	1394491	Statement	syscall	575:2:13577:13583	1393252	126	True				
ANR	1394492	Statement	=	575:10:13585:13585	1393252	127	True				
ANR	1394493	Statement	emit_syscall	575:12:13587:13598	1393252	128	True				
ANR	1394494	Statement	","	575:24:13599:13599	1393252	129	True				
ANR	1394495	ReturnType	static void		1393252	1					
ANR	1394496	Identifier	emit_while_end		1393252	2					
ANR	1394497	ParameterList	"REgg * egg , const char * labelback"		1393252	3					
ANR	1394498	Parameter	REgg * egg	333:28:7739:7747	1393252	0	True				
ANR	1394499	ParameterType	REgg *		1393252	0					
ANR	1394500	Identifier	egg		1393252	1					
ANR	1394501	Parameter	const char * labelback	333:39:7750:7770	1393252	1	True				
ANR	1394502	ParameterType	const char *		1393252	0					
ANR	1394503	Identifier	labelback		1393252	1					
ANR	1394504	CFGEntryNode	ENTRY		1393252		True				
ANR	1394505	CFGExitNode	EXIT		1393252		True				
ANR	1394506	Symbol	R_REG_AR_OFF		1393252						
ANR	1394507	Symbol	egg		1393252						
ANR	1394508	Symbol	dst		1393252						
ANR	1394509	Symbol	* R_NGP		1393252						
ANR	1394510	Symbol	strchr		1393252						
ANR	1394511	Symbol	type		1393252						
ANR	1394512	Symbol	out		1393252						
ANR	1394513	Symbol	signed_value		1393252						
ANR	1394514	Symbol	reg		1393252						
ANR	1394515	Symbol	labelback		1393252						
ANR	1394516	Symbol	arg		1393252						
ANR	1394517	Symbol	* idx		1393252						
ANR	1394518	Symbol	atoi		1393252						
ANR	1394519	Symbol	r_egg_mkvar		1393252						
ANR	1394520	Symbol	op		1393252						
ANR	1394521	Symbol	b		1393252						
ANR	1394522	Symbol	R_AX		1393252						
ANR	1394523	Symbol	NULL		1393252						
ANR	1394524	Symbol	d		1393252						
ANR	1394525	Symbol	e		1393252						
ANR	1394526	Symbol	ch		1393252						
ANR	1394527	Symbol	R_NGP		1393252						
ANR	1394528	Symbol	attsyntax		1393252						
ANR	1394529	Symbol	g		1393252						
ANR	1394530	Symbol	sz		1393252						
ANR	1394531	Symbol	regs		1393252						
ANR	1394532	Symbol	* b		1393252						
ANR	1394533	Symbol	eq		1393252						
ANR	1394534	Symbol	n		1393252						
ANR	1394535	Symbol	p		1393252						
ANR	1394536	Symbol	str		1393252						
ANR	1394537	Symbol	* g		1393252						
ANR	1394538	Symbol	* regs		1393252						
ANR	1394539	Symbol	emit_regs		1393252						
ANR	1394540	Symbol	idx		1393252						
ANR	1394541	Symbol	vs		1393252						
ANR	1394542	Symbol	* arg		1393252						
