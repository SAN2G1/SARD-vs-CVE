command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6621710	File	data/converged/CVE-2019-16718~_radare2/zip_dirent.c								
ANR	6621711	DeclStmt									
ANR	6621712	Decl							time_t	"time_t ( zip_uint16_t , zip_uint16_t )"	_zip_d2u_time
ANR	6621713	DeclStmt									
ANR	6621714	Decl							struct zip_string	"struct zip_string * ( const unsigned char * * , FILE * , zip_uint16_t , int , struct zip_error * )"	_zip_read_string
ANR	6621715	DeclStmt									
ANR	6621716	Decl							struct zip_string	"struct zip_string * ( const struct zip_dirent * , zip_uint16_t , struct zip_string * )"	_zip_dirent_process_ef_utf_8
ANR	6621717	DeclStmt									
ANR	6621718	Decl							struct zip_extra_field	"struct zip_extra_field * ( zip_uint16_t , struct zip_string * , struct zip_error * )"	_zip_ef_utf8
ANR	6621719	Function	_zip_cdir_free	53:0:2216:2441							
ANR	6621720	FunctionDef	_zip_cdir_free (struct zip_cdir * cd)		6621719	0					
ANR	6621721	CompoundStatement		55:0:2257:2441	6621719	0					
ANR	6621722	IdentifierDeclStatement	zip_uint64_t i ;	56:4:2263:2277	6621719	0	True				
ANR	6621723	IdentifierDecl	i		6621719	0					
ANR	6621724	IdentifierDeclType	zip_uint64_t		6621719	0					
ANR	6621725	Identifier	i		6621719	1					
ANR	6621726	IfStatement	if ( ! cd )		6621719	1					
ANR	6621727	Condition	! cd	58:8:2288:2290	6621719	0	True				
ANR	6621728	UnaryOperationExpression	! cd		6621719	0					
ANR	6621729	UnaryOperator	!		6621719	0					
ANR	6621730	Identifier	cd		6621719	1					
ANR	6621731	ReturnStatement	return ;	59:1:2294:2300	6621719	1	True				
ANR	6621732	ForStatement	for ( i = 0 ; i < cd -> nentry ; i ++ )		6621719	2					
ANR	6621733	ForInit	i = 0 ;	61:9:2312:2315	6621719	0	True				
ANR	6621734	AssignmentExpression	i = 0		6621719	0		=			
ANR	6621735	Identifier	i		6621719	0					
ANR	6621736	PrimaryExpression	0		6621719	1					
ANR	6621737	Condition	i < cd -> nentry	61:14:2317:2328	6621719	1	True				
ANR	6621738	RelationalExpression	i < cd -> nentry		6621719	0		<			
ANR	6621739	Identifier	i		6621719	0					
ANR	6621740	PtrMemberAccess	cd -> nentry		6621719	1					
ANR	6621741	Identifier	cd		6621719	0					
ANR	6621742	Identifier	nentry		6621719	1					
ANR	6621743	PostIncDecOperationExpression	i ++	61:28:2331:2333	6621719	2	True				
ANR	6621744	Identifier	i		6621719	0					
ANR	6621745	IncDec	++		6621719	1					
ANR	6621746	ExpressionStatement	_zip_entry_finalize ( cd -> entry + i )	62:1:2337:2369	6621719	3	True				
ANR	6621747	CallExpression	_zip_entry_finalize ( cd -> entry + i )		6621719	0					
ANR	6621748	Callee	_zip_entry_finalize		6621719	0					
ANR	6621749	Identifier	_zip_entry_finalize		6621719	0					
ANR	6621750	ArgumentList	cd -> entry + i		6621719	1					
ANR	6621751	Argument	cd -> entry + i		6621719	0					
ANR	6621752	AdditiveExpression	cd -> entry + i		6621719	0		+			
ANR	6621753	PtrMemberAccess	cd -> entry		6621719	0					
ANR	6621754	Identifier	cd		6621719	0					
ANR	6621755	Identifier	entry		6621719	1					
ANR	6621756	Identifier	i		6621719	1					
ANR	6621757	ExpressionStatement	free ( cd -> entry )	63:4:2375:2390	6621719	3	True				
ANR	6621758	CallExpression	free ( cd -> entry )		6621719	0					
ANR	6621759	Callee	free		6621719	0					
ANR	6621760	Identifier	free		6621719	0					
ANR	6621761	ArgumentList	cd -> entry		6621719	1					
ANR	6621762	Argument	cd -> entry		6621719	0					
ANR	6621763	PtrMemberAccess	cd -> entry		6621719	0					
ANR	6621764	Identifier	cd		6621719	0					
ANR	6621765	Identifier	entry		6621719	1					
ANR	6621766	ExpressionStatement	_zip_string_free ( cd -> comment )	64:4:2396:2425	6621719	4	True				
ANR	6621767	CallExpression	_zip_string_free ( cd -> comment )		6621719	0					
ANR	6621768	Callee	_zip_string_free		6621719	0					
ANR	6621769	Identifier	_zip_string_free		6621719	0					
ANR	6621770	ArgumentList	cd -> comment		6621719	1					
ANR	6621771	Argument	cd -> comment		6621719	0					
ANR	6621772	PtrMemberAccess	cd -> comment		6621719	0					
ANR	6621773	Identifier	cd		6621719	0					
ANR	6621774	Identifier	comment		6621719	1					
ANR	6621775	ExpressionStatement	free ( cd )	65:4:2431:2439	6621719	5	True				
ANR	6621776	CallExpression	free ( cd )		6621719	0					
ANR	6621777	Callee	free		6621719	0					
ANR	6621778	Identifier	free		6621719	0					
ANR	6621779	ArgumentList	cd		6621719	1					
ANR	6621780	Argument	cd		6621719	0					
ANR	6621781	Identifier	cd		6621719	0					
ANR	6621782	ReturnType	void		6621719	1					
ANR	6621783	Identifier	_zip_cdir_free		6621719	2					
ANR	6621784	ParameterList	struct zip_cdir * cd		6621719	3					
ANR	6621785	Parameter	struct zip_cdir * cd	54:15:2236:2254	6621719	0	True				
ANR	6621786	ParameterType	struct zip_cdir *		6621719	0					
ANR	6621787	Identifier	cd		6621719	1					
ANR	6621788	CFGEntryNode	ENTRY		6621719		True				
ANR	6621789	CFGExitNode	EXIT		6621719		True				
ANR	6621790	Symbol	cd		6621719						
ANR	6621791	Symbol	cd -> nentry		6621719						
ANR	6621792	Symbol	cd -> comment		6621719						
ANR	6621793	Symbol	* cd		6621719						
ANR	6621794	Symbol	cd -> entry		6621719						
ANR	6621795	Symbol	i		6621719						
ANR	6621796	Function	_zip_cdir_grow	70:0:2447:3039							
ANR	6621797	FunctionDef	"_zip_cdir_grow (struct zip_cdir * cd , zip_uint64_t nentry , struct zip_error * error)"		6621796	0					
ANR	6621798	CompoundStatement		72:0:2533:3039	6621796	0					
ANR	6621799	IdentifierDeclStatement	struct zip_entry * entry ;	73:4:2539:2562	6621796	0	True				
ANR	6621800	IdentifierDecl	* entry		6621796	0					
ANR	6621801	IdentifierDeclType	struct zip_entry *		6621796	0					
ANR	6621802	Identifier	entry		6621796	1					
ANR	6621803	IdentifierDeclStatement	zip_uint64_t i ;	74:4:2568:2582	6621796	1	True				
ANR	6621804	IdentifierDecl	i		6621796	0					
ANR	6621805	IdentifierDeclType	zip_uint64_t		6621796	0					
ANR	6621806	Identifier	i		6621796	1					
ANR	6621807	IfStatement	if ( nentry < cd -> nentry_alloc )		6621796	2					
ANR	6621808	Condition	nentry < cd -> nentry_alloc	76:8:2593:2617	6621796	0	True				
ANR	6621809	RelationalExpression	nentry < cd -> nentry_alloc		6621796	0		<			
ANR	6621810	Identifier	nentry		6621796	0					
ANR	6621811	PtrMemberAccess	cd -> nentry_alloc		6621796	1					
ANR	6621812	Identifier	cd		6621796	0					
ANR	6621813	Identifier	nentry_alloc		6621796	1					
ANR	6621814	CompoundStatement		5:35:86:86	6621796	1					
ANR	6621815	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INTERNAL , 0 )"	77:1:2623:2664	6621796	0	True				
ANR	6621816	CallExpression	"_zip_error_set ( error , ZIP_ER_INTERNAL , 0 )"		6621796	0					
ANR	6621817	Callee	_zip_error_set		6621796	0					
ANR	6621818	Identifier	_zip_error_set		6621796	0					
ANR	6621819	ArgumentList	error		6621796	1					
ANR	6621820	Argument	error		6621796	0					
ANR	6621821	Identifier	error		6621796	0					
ANR	6621822	Argument	ZIP_ER_INTERNAL		6621796	1					
ANR	6621823	Identifier	ZIP_ER_INTERNAL		6621796	0					
ANR	6621824	Argument	0		6621796	2					
ANR	6621825	PrimaryExpression	0		6621796	0					
ANR	6621826	ReturnStatement	return - 1 ;	78:1:2667:2676	6621796	1	True				
ANR	6621827	UnaryOperationExpression	- 1		6621796	0					
ANR	6621828	UnaryOperator	-		6621796	0					
ANR	6621829	PrimaryExpression	1		6621796	1					
ANR	6621830	IfStatement	if ( nentry == cd -> nentry_alloc )		6621796	3					
ANR	6621831	Condition	nentry == cd -> nentry_alloc	81:8:2693:2718	6621796	0	True				
ANR	6621832	EqualityExpression	nentry == cd -> nentry_alloc		6621796	0		==			
ANR	6621833	Identifier	nentry		6621796	0					
ANR	6621834	PtrMemberAccess	cd -> nentry_alloc		6621796	1					
ANR	6621835	Identifier	cd		6621796	0					
ANR	6621836	Identifier	nentry_alloc		6621796	1					
ANR	6621837	ReturnStatement	return 0 ;	82:1:2722:2730	6621796	1	True				
ANR	6621838	PrimaryExpression	0		6621796	0					
ANR	6621839	IfStatement	"if ( ( entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) ) ) == NULL )"		6621796	4					
ANR	6621840	Condition	"( entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) ) ) == NULL"	84:8:2741:2828	6621796	0	True				
ANR	6621841	EqualityExpression	"( entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) ) ) == NULL"		6621796	0		==			
ANR	6621842	AssignmentExpression	"entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) )"		6621796	0		=			
ANR	6621843	Identifier	entry		6621796	0					
ANR	6621844	CastExpression	"( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry )"		6621796	1					
ANR	6621845	CastTarget	struct zip_entry *		6621796	0					
ANR	6621846	CallExpression	"realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry )"		6621796	1					
ANR	6621847	Callee	realloc		6621796	0					
ANR	6621848	Identifier	realloc		6621796	0					
ANR	6621849	ArgumentList	cd -> entry		6621796	1					
ANR	6621850	Argument	cd -> entry		6621796	0					
ANR	6621851	PtrMemberAccess	cd -> entry		6621796	0					
ANR	6621852	Identifier	cd		6621796	0					
ANR	6621853	Identifier	entry		6621796	1					
ANR	6621854	Argument	sizeof ( * ( cd -> entry ) ) * nentry		6621796	1					
ANR	6621855	MultiplicativeExpression	sizeof ( * ( cd -> entry ) ) * nentry		6621796	0		*			
ANR	6621856	SizeofExpression	sizeof ( * ( cd -> entry ) )		6621796	0					
ANR	6621857	Sizeof	sizeof		6621796	0					
ANR	6621858	UnaryOperationExpression	* ( cd -> entry )		6621796	1					
ANR	6621859	UnaryOperator	*		6621796	0					
ANR	6621860	PtrMemberAccess	cd -> entry		6621796	1					
ANR	6621861	Identifier	cd		6621796	0					
ANR	6621862	Identifier	entry		6621796	1					
ANR	6621863	Identifier	nentry		6621796	1					
ANR	6621864	Identifier	NULL		6621796	1					
ANR	6621865	CompoundStatement		14:61:297:297	6621796	1					
ANR	6621866	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	86:1:2834:2873	6621796	0	True				
ANR	6621867	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6621796	0					
ANR	6621868	Callee	_zip_error_set		6621796	0					
ANR	6621869	Identifier	_zip_error_set		6621796	0					
ANR	6621870	ArgumentList	error		6621796	1					
ANR	6621871	Argument	error		6621796	0					
ANR	6621872	Identifier	error		6621796	0					
ANR	6621873	Argument	ZIP_ER_MEMORY		6621796	1					
ANR	6621874	Identifier	ZIP_ER_MEMORY		6621796	0					
ANR	6621875	Argument	0		6621796	2					
ANR	6621876	PrimaryExpression	0		6621796	0					
ANR	6621877	ReturnStatement	return - 1 ;	87:1:2876:2885	6621796	1	True				
ANR	6621878	UnaryOperationExpression	- 1		6621796	0					
ANR	6621879	UnaryOperator	-		6621796	0					
ANR	6621880	PrimaryExpression	1		6621796	1					
ANR	6621881	ForStatement	for ( i = cd -> nentry_alloc ; i < nentry ; i ++ )		6621796	5					
ANR	6621882	ForInit	i = cd -> nentry_alloc ;	90:9:2907:2925	6621796	0	True				
ANR	6621883	AssignmentExpression	i = cd -> nentry_alloc		6621796	0		=			
ANR	6621884	Identifier	i		6621796	0					
ANR	6621885	PtrMemberAccess	cd -> nentry_alloc		6621796	1					
ANR	6621886	Identifier	cd		6621796	0					
ANR	6621887	Identifier	nentry_alloc		6621796	1					
ANR	6621888	Condition	i < nentry	90:29:2927:2934	6621796	1	True				
ANR	6621889	RelationalExpression	i < nentry		6621796	0		<			
ANR	6621890	Identifier	i		6621796	0					
ANR	6621891	Identifier	nentry		6621796	1					
ANR	6621892	PostIncDecOperationExpression	i ++	90:39:2937:2939	6621796	2	True				
ANR	6621893	Identifier	i		6621796	0					
ANR	6621894	IncDec	++		6621796	1					
ANR	6621895	ExpressionStatement	_zip_entry_init ( entry + i )	91:1:2943:2967	6621796	3	True				
ANR	6621896	CallExpression	_zip_entry_init ( entry + i )		6621796	0					
ANR	6621897	Callee	_zip_entry_init		6621796	0					
ANR	6621898	Identifier	_zip_entry_init		6621796	0					
ANR	6621899	ArgumentList	entry + i		6621796	1					
ANR	6621900	Argument	entry + i		6621796	0					
ANR	6621901	AdditiveExpression	entry + i		6621796	0		+			
ANR	6621902	Identifier	entry		6621796	0					
ANR	6621903	Identifier	i		6621796	1					
ANR	6621904	ExpressionStatement	cd -> nentry_alloc = nentry	93:4:2974:2999	6621796	6	True				
ANR	6621905	AssignmentExpression	cd -> nentry_alloc = nentry		6621796	0		=			
ANR	6621906	PtrMemberAccess	cd -> nentry_alloc		6621796	0					
ANR	6621907	Identifier	cd		6621796	0					
ANR	6621908	Identifier	nentry_alloc		6621796	1					
ANR	6621909	Identifier	nentry		6621796	1					
ANR	6621910	ExpressionStatement	cd -> entry = entry	94:4:3005:3022	6621796	7	True				
ANR	6621911	AssignmentExpression	cd -> entry = entry		6621796	0		=			
ANR	6621912	PtrMemberAccess	cd -> entry		6621796	0					
ANR	6621913	Identifier	cd		6621796	0					
ANR	6621914	Identifier	entry		6621796	1					
ANR	6621915	Identifier	entry		6621796	1					
ANR	6621916	ReturnStatement	return 0 ;	96:4:3029:3037	6621796	8	True				
ANR	6621917	PrimaryExpression	0		6621796	0					
ANR	6621918	ReturnType	int		6621796	1					
ANR	6621919	Identifier	_zip_cdir_grow		6621796	2					
ANR	6621920	ParameterList	"struct zip_cdir * cd , zip_uint64_t nentry , struct zip_error * error"		6621796	3					
ANR	6621921	Parameter	struct zip_cdir * cd	71:15:2466:2484	6621796	0	True				
ANR	6621922	ParameterType	struct zip_cdir *		6621796	0					
ANR	6621923	Identifier	cd		6621796	1					
ANR	6621924	Parameter	zip_uint64_t nentry	71:36:2487:2505	6621796	1	True				
ANR	6621925	ParameterType	zip_uint64_t		6621796	0					
ANR	6621926	Identifier	nentry		6621796	1					
ANR	6621927	Parameter	struct zip_error * error	71:57:2508:2530	6621796	2	True				
ANR	6621928	ParameterType	struct zip_error *		6621796	0					
ANR	6621929	Identifier	error		6621796	1					
ANR	6621930	CFGEntryNode	ENTRY		6621796		True				
ANR	6621931	CFGExitNode	EXIT		6621796		True				
ANR	6621932	Symbol	cd		6621796						
ANR	6621933	Symbol	cd -> nentry_alloc		6621796						
ANR	6621934	Symbol	NULL		6621796						
ANR	6621935	Symbol	* cd		6621796						
ANR	6621936	Symbol	ZIP_ER_INTERNAL		6621796						
ANR	6621937	Symbol	cd -> entry		6621796						
ANR	6621938	Symbol	i		6621796						
ANR	6621939	Symbol	realloc		6621796						
ANR	6621940	Symbol	error		6621796						
ANR	6621941	Symbol	* * cd		6621796						
ANR	6621942	Symbol	entry		6621796						
ANR	6621943	Symbol	* cd -> entry		6621796						
ANR	6621944	Symbol	* ( cd -> entry )		6621796						
ANR	6621945	Symbol	nentry		6621796						
ANR	6621946	Symbol	ZIP_ER_MEMORY		6621796						
ANR	6621947	Function	_zip_cdir_new	101:0:3045:3739							
ANR	6621948	FunctionDef	"_zip_cdir_new (zip_uint64_t nentry , struct zip_error * error)"		6621947	0					
ANR	6621949	CompoundStatement		103:0:3123:3739	6621947	0					
ANR	6621950	IdentifierDeclStatement	struct zip_cdir * cd ;	104:4:3129:3148	6621947	0	True				
ANR	6621951	IdentifierDecl	* cd		6621947	0					
ANR	6621952	IdentifierDeclType	struct zip_cdir *		6621947	0					
ANR	6621953	Identifier	cd		6621947	1					
ANR	6621954	IdentifierDeclStatement	zip_uint64_t i ;	105:4:3154:3168	6621947	1	True				
ANR	6621955	IdentifierDecl	i		6621947	0					
ANR	6621956	IdentifierDeclType	zip_uint64_t		6621947	0					
ANR	6621957	Identifier	i		6621947	1					
ANR	6621958	IfStatement	if ( ( cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) ) ) == NULL )		6621947	2					
ANR	6621959	Condition	( cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) ) ) == NULL	107:8:3183:3233	6621947	0	True				
ANR	6621960	EqualityExpression	( cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) ) ) == NULL		6621947	0		==			
ANR	6621961	AssignmentExpression	cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) )		6621947	0		=			
ANR	6621962	Identifier	cd		6621947	0					
ANR	6621963	CastExpression	( struct zip_cdir * ) malloc ( sizeof ( * cd ) )		6621947	1					
ANR	6621964	CastTarget	struct zip_cdir *		6621947	0					
ANR	6621965	CallExpression	malloc ( sizeof ( * cd ) )		6621947	1					
ANR	6621966	Callee	malloc		6621947	0					
ANR	6621967	Identifier	malloc		6621947	0					
ANR	6621968	ArgumentList	sizeof ( * cd )		6621947	1					
ANR	6621969	Argument	sizeof ( * cd )		6621947	0					
ANR	6621970	SizeofExpression	sizeof ( * cd )		6621947	0					
ANR	6621971	Sizeof	sizeof		6621947	0					
ANR	6621972	UnaryOperationExpression	* cd		6621947	1					
ANR	6621973	UnaryOperator	*		6621947	0					
ANR	6621974	Identifier	cd		6621947	1					
ANR	6621975	Identifier	NULL		6621947	1					
ANR	6621976	CompoundStatement		5:61:112:112	6621947	1					
ANR	6621977	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	108:1:3239:3278	6621947	0	True				
ANR	6621978	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6621947	0					
ANR	6621979	Callee	_zip_error_set		6621947	0					
ANR	6621980	Identifier	_zip_error_set		6621947	0					
ANR	6621981	ArgumentList	error		6621947	1					
ANR	6621982	Argument	error		6621947	0					
ANR	6621983	Identifier	error		6621947	0					
ANR	6621984	Argument	ZIP_ER_MEMORY		6621947	1					
ANR	6621985	Identifier	ZIP_ER_MEMORY		6621947	0					
ANR	6621986	Argument	0		6621947	2					
ANR	6621987	PrimaryExpression	0		6621947	0					
ANR	6621988	ReturnStatement	return NULL ;	109:1:3281:3292	6621947	1	True				
ANR	6621989	Identifier	NULL		6621947	0					
ANR	6621990	IfStatement	if ( nentry == 0 )		6621947	3					
ANR	6621991	Condition	nentry == 0	112:8:3309:3319	6621947	0	True				
ANR	6621992	EqualityExpression	nentry == 0		6621947	0		==			
ANR	6621993	Identifier	nentry		6621947	0					
ANR	6621994	PrimaryExpression	0		6621947	1					
ANR	6621995	CompoundStatement		10:21:198:198	6621947	1					
ANR	6621996	ExpressionStatement	cd -> entry = NULL	113:1:3325:3341	6621947	0	True				
ANR	6621997	AssignmentExpression	cd -> entry = NULL		6621947	0		=			
ANR	6621998	PtrMemberAccess	cd -> entry		6621947	0					
ANR	6621999	Identifier	cd		6621947	0					
ANR	6622000	Identifier	entry		6621947	1					
ANR	6622001	Identifier	NULL		6621947	1					
ANR	6622002	ElseStatement	else		6621947	0					
ANR	6622003	IfStatement	if ( ( nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) ) ) || ( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL )		6621947	0					
ANR	6622004	Condition	( nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) ) ) || ( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL	114:15:3358:3484	6621947	0	True				
ANR	6622005	OrExpression	( nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) ) ) || ( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL		6621947	0		||			
ANR	6622006	RelationalExpression	nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) )		6621947	0		>			
ANR	6622007	Identifier	nentry		6621947	0					
ANR	6622008	MultiplicativeExpression	SIZE_MAX / sizeof ( * ( cd -> entry ) )		6621947	1		/			
ANR	6622009	Identifier	SIZE_MAX		6621947	0					
ANR	6622010	SizeofExpression	sizeof ( * ( cd -> entry ) )		6621947	1					
ANR	6622011	Sizeof	sizeof		6621947	0					
ANR	6622012	UnaryOperationExpression	* ( cd -> entry )		6621947	1					
ANR	6622013	UnaryOperator	*		6621947	0					
ANR	6622014	PtrMemberAccess	cd -> entry		6621947	1					
ANR	6622015	Identifier	cd		6621947	0					
ANR	6622016	Identifier	entry		6621947	1					
ANR	6622017	EqualityExpression	( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL		6621947	1		==			
ANR	6622018	AssignmentExpression	cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry )		6621947	0		=			
ANR	6622019	PtrMemberAccess	cd -> entry		6621947	0					
ANR	6622020	Identifier	cd		6621947	0					
ANR	6622021	Identifier	entry		6621947	1					
ANR	6622022	CastExpression	( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry )		6621947	1					
ANR	6622023	CastTarget	struct zip_entry *		6621947	0					
ANR	6622024	CallExpression	malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry )		6621947	1					
ANR	6622025	Callee	malloc		6621947	0					
ANR	6622026	Identifier	malloc		6621947	0					
ANR	6622027	ArgumentList	sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry		6621947	1					
ANR	6622028	Argument	sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry		6621947	0					
ANR	6622029	MultiplicativeExpression	sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry		6621947	0		*			
ANR	6622030	SizeofExpression	sizeof ( * ( cd -> entry ) )		6621947	0					
ANR	6622031	Sizeof	sizeof		6621947	0					
ANR	6622032	UnaryOperationExpression	* ( cd -> entry )		6621947	1					
ANR	6622033	UnaryOperator	*		6621947	0					
ANR	6622034	PtrMemberAccess	cd -> entry		6621947	1					
ANR	6622035	Identifier	cd		6621947	0					
ANR	6622036	Identifier	entry		6621947	1					
ANR	6622037	CastExpression	( size_t ) nentry		6621947	1					
ANR	6622038	CastTarget	size_t		6621947	0					
ANR	6622039	Identifier	nentry		6621947	1					
ANR	6622040	Identifier	NULL		6621947	1					
ANR	6622041	CompoundStatement		12:144:363:363	6621947	1					
ANR	6622042	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	115:1:3490:3529	6621947	0	True				
ANR	6622043	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6621947	0					
ANR	6622044	Callee	_zip_error_set		6621947	0					
ANR	6622045	Identifier	_zip_error_set		6621947	0					
ANR	6622046	ArgumentList	error		6621947	1					
ANR	6622047	Argument	error		6621947	0					
ANR	6622048	Identifier	error		6621947	0					
ANR	6622049	Argument	ZIP_ER_MEMORY		6621947	1					
ANR	6622050	Identifier	ZIP_ER_MEMORY		6621947	0					
ANR	6622051	Argument	0		6621947	2					
ANR	6622052	PrimaryExpression	0		6621947	0					
ANR	6622053	ExpressionStatement	free ( cd )	116:1:3532:3540	6621947	1	True				
ANR	6622054	CallExpression	free ( cd )		6621947	0					
ANR	6622055	Callee	free		6621947	0					
ANR	6622056	Identifier	free		6621947	0					
ANR	6622057	ArgumentList	cd		6621947	1					
ANR	6622058	Argument	cd		6621947	0					
ANR	6622059	Identifier	cd		6621947	0					
ANR	6622060	ReturnStatement	return NULL ;	117:1:3543:3554	6621947	2	True				
ANR	6622061	Identifier	NULL		6621947	0					
ANR	6622062	ForStatement	for ( i = 0 ; i < nentry ; i ++ )		6621947	4					
ANR	6622063	ForInit	i = 0 ;	120:9:3572:3575	6621947	0	True				
ANR	6622064	AssignmentExpression	i = 0		6621947	0		=			
ANR	6622065	Identifier	i		6621947	0					
ANR	6622066	PrimaryExpression	0		6621947	1					
ANR	6622067	Condition	i < nentry	120:14:3577:3584	6621947	1	True				
ANR	6622068	RelationalExpression	i < nentry		6621947	0		<			
ANR	6622069	Identifier	i		6621947	0					
ANR	6622070	Identifier	nentry		6621947	1					
ANR	6622071	PostIncDecOperationExpression	i ++	120:24:3587:3589	6621947	2	True				
ANR	6622072	Identifier	i		6621947	0					
ANR	6622073	IncDec	++		6621947	1					
ANR	6622074	ExpressionStatement	_zip_entry_init ( cd -> entry + i )	121:1:3593:3621	6621947	3	True				
ANR	6622075	CallExpression	_zip_entry_init ( cd -> entry + i )		6621947	0					
ANR	6622076	Callee	_zip_entry_init		6621947	0					
ANR	6622077	Identifier	_zip_entry_init		6621947	0					
ANR	6622078	ArgumentList	cd -> entry + i		6621947	1					
ANR	6622079	Argument	cd -> entry + i		6621947	0					
ANR	6622080	AdditiveExpression	cd -> entry + i		6621947	0		+			
ANR	6622081	PtrMemberAccess	cd -> entry		6621947	0					
ANR	6622082	Identifier	cd		6621947	0					
ANR	6622083	Identifier	entry		6621947	1					
ANR	6622084	Identifier	i		6621947	1					
ANR	6622085	ExpressionStatement	cd -> nentry = cd -> nentry_alloc = nentry	123:4:3628:3666	6621947	5	True				
ANR	6622086	AssignmentExpression	cd -> nentry = cd -> nentry_alloc = nentry		6621947	0		=			
ANR	6622087	PtrMemberAccess	cd -> nentry		6621947	0					
ANR	6622088	Identifier	cd		6621947	0					
ANR	6622089	Identifier	nentry		6621947	1					
ANR	6622090	AssignmentExpression	cd -> nentry_alloc = nentry		6621947	1		=			
ANR	6622091	PtrMemberAccess	cd -> nentry_alloc		6621947	0					
ANR	6622092	Identifier	cd		6621947	0					
ANR	6622093	Identifier	nentry_alloc		6621947	1					
ANR	6622094	Identifier	nentry		6621947	1					
ANR	6622095	ExpressionStatement	cd -> size = cd -> offset = 0	124:4:3672:3697	6621947	6	True				
ANR	6622096	AssignmentExpression	cd -> size = cd -> offset = 0		6621947	0		=			
ANR	6622097	PtrMemberAccess	cd -> size		6621947	0					
ANR	6622098	Identifier	cd		6621947	0					
ANR	6622099	Identifier	size		6621947	1					
ANR	6622100	AssignmentExpression	cd -> offset = 0		6621947	1		=			
ANR	6622101	PtrMemberAccess	cd -> offset		6621947	0					
ANR	6622102	Identifier	cd		6621947	0					
ANR	6622103	Identifier	offset		6621947	1					
ANR	6622104	PrimaryExpression	0		6621947	1					
ANR	6622105	ExpressionStatement	cd -> comment = NULL	125:4:3703:3721	6621947	7	True				
ANR	6622106	AssignmentExpression	cd -> comment = NULL		6621947	0		=			
ANR	6622107	PtrMemberAccess	cd -> comment		6621947	0					
ANR	6622108	Identifier	cd		6621947	0					
ANR	6622109	Identifier	comment		6621947	1					
ANR	6622110	Identifier	NULL		6621947	1					
ANR	6622111	ReturnStatement	return cd ;	127:4:3728:3737	6621947	8	True				
ANR	6622112	Identifier	cd		6621947	0					
ANR	6622113	ReturnType	struct zip_cdir *		6621947	1					
ANR	6622114	Identifier	_zip_cdir_new		6621947	2					
ANR	6622115	ParameterList	"zip_uint64_t nentry , struct zip_error * error"		6621947	3					
ANR	6622116	Parameter	zip_uint64_t nentry	102:14:3077:3095	6621947	0	True				
ANR	6622117	ParameterType	zip_uint64_t		6621947	0					
ANR	6622118	Identifier	nentry		6621947	1					
ANR	6622119	Parameter	struct zip_error * error	102:35:3098:3120	6621947	1	True				
ANR	6622120	ParameterType	struct zip_error *		6621947	0					
ANR	6622121	Identifier	error		6621947	1					
ANR	6622122	CFGEntryNode	ENTRY		6621947		True				
ANR	6622123	CFGExitNode	EXIT		6621947		True				
ANR	6622124	Symbol	cd		6621947						
ANR	6622125	Symbol	malloc		6621947						
ANR	6622126	Symbol	cd -> nentry_alloc		6621947						
ANR	6622127	Symbol	cd -> comment		6621947						
ANR	6622128	Symbol	NULL		6621947						
ANR	6622129	Symbol	* cd		6621947						
ANR	6622130	Symbol	cd -> offset		6621947						
ANR	6622131	Symbol	cd -> entry		6621947						
ANR	6622132	Symbol	i		6621947						
ANR	6622133	Symbol	error		6621947						
ANR	6622134	Symbol	* * cd		6621947						
ANR	6622135	Symbol	cd -> nentry		6621947						
ANR	6622136	Symbol	SIZE_MAX		6621947						
ANR	6622137	Symbol	* cd -> entry		6621947						
ANR	6622138	Symbol	cd -> size		6621947						
ANR	6622139	Symbol	* ( cd -> entry )		6621947						
ANR	6622140	Symbol	nentry		6621947						
ANR	6622141	Symbol	ZIP_ER_MEMORY		6621947						
ANR	6622142	Function	_zip_cdir_write	132:0:3745:5800							
ANR	6622143	FunctionDef	"_zip_cdir_write (struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * fp)"		6622142	0					
ANR	6622144	CompoundStatement		134:0:3860:5800	6622142	0					
ANR	6622145	IdentifierDeclStatement	off_t off ;	135:4:3866:3875	6622142	0	True				
ANR	6622146	IdentifierDecl	off		6622142	0					
ANR	6622147	IdentifierDeclType	off_t		6622142	0					
ANR	6622148	Identifier	off		6622142	1					
ANR	6622149	IdentifierDeclStatement	"zip_uint64_t offset , size ;"	136:4:3881:3906	6622142	1	True				
ANR	6622150	IdentifierDecl	offset		6622142	0					
ANR	6622151	IdentifierDeclType	zip_uint64_t		6622142	0					
ANR	6622152	Identifier	offset		6622142	1					
ANR	6622153	IdentifierDecl	size		6622142	1					
ANR	6622154	IdentifierDeclType	zip_uint64_t		6622142	0					
ANR	6622155	Identifier	size		6622142	1					
ANR	6622156	IdentifierDeclStatement	struct zip_string * comment ;	137:4:3912:3938	6622142	2	True				
ANR	6622157	IdentifierDecl	* comment		6622142	0					
ANR	6622158	IdentifierDeclType	struct zip_string *		6622142	0					
ANR	6622159	Identifier	comment		6622142	1					
ANR	6622160	IdentifierDeclStatement	zip_uint64_t i ;	138:4:3944:3958	6622142	3	True				
ANR	6622161	IdentifierDecl	i		6622142	0					
ANR	6622162	IdentifierDeclType	zip_uint64_t		6622142	0					
ANR	6622163	Identifier	i		6622142	1					
ANR	6622164	IdentifierDeclStatement	int is_zip64 ;	139:4:3964:3976	6622142	4	True				
ANR	6622165	IdentifierDecl	is_zip64		6622142	0					
ANR	6622166	IdentifierDeclType	int		6622142	0					
ANR	6622167	Identifier	is_zip64		6622142	1					
ANR	6622168	IdentifierDeclStatement	int ret ;	140:4:3982:3989	6622142	5	True				
ANR	6622169	IdentifierDecl	ret		6622142	0					
ANR	6622170	IdentifierDeclType	int		6622142	0					
ANR	6622171	Identifier	ret		6622142	1					
ANR	6622172	IfStatement	if ( ( off = ftello ( fp ) ) < 0 )		6622142	6					
ANR	6622173	Condition	( off = ftello ( fp ) ) < 0	142:8:4000:4019	6622142	0	True				
ANR	6622174	RelationalExpression	( off = ftello ( fp ) ) < 0		6622142	0		<			
ANR	6622175	AssignmentExpression	off = ftello ( fp )		6622142	0		=			
ANR	6622176	Identifier	off		6622142	0					
ANR	6622177	CallExpression	ftello ( fp )		6622142	1					
ANR	6622178	Callee	ftello		6622142	0					
ANR	6622179	Identifier	ftello		6622142	0					
ANR	6622180	ArgumentList	fp		6622142	1					
ANR	6622181	Argument	fp		6622142	0					
ANR	6622182	Identifier	fp		6622142	0					
ANR	6622183	PrimaryExpression	0		6622142	1					
ANR	6622184	CompoundStatement		9:30:161:161	6622142	1					
ANR	6622185	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"	143:8:4032:4078	6622142	0	True				
ANR	6622186	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"		6622142	0					
ANR	6622187	Callee	_zip_error_set		6622142	0					
ANR	6622188	Identifier	_zip_error_set		6622142	0					
ANR	6622189	ArgumentList	& za -> error		6622142	1					
ANR	6622190	Argument	& za -> error		6622142	0					
ANR	6622191	UnaryOperationExpression	& za -> error		6622142	0					
ANR	6622192	UnaryOperator	&		6622142	0					
ANR	6622193	PtrMemberAccess	za -> error		6622142	1					
ANR	6622194	Identifier	za		6622142	0					
ANR	6622195	Identifier	error		6622142	1					
ANR	6622196	Argument	ZIP_ER_READ		6622142	1					
ANR	6622197	Identifier	ZIP_ER_READ		6622142	0					
ANR	6622198	Argument	errno		6622142	2					
ANR	6622199	Identifier	errno		6622142	0					
ANR	6622200	ReturnStatement	return - 1 ;	144:8:4088:4097	6622142	1	True				
ANR	6622201	UnaryOperationExpression	- 1		6622142	0					
ANR	6622202	UnaryOperator	-		6622142	0					
ANR	6622203	PrimaryExpression	1		6622142	1					
ANR	6622204	ExpressionStatement	offset = ( zip_uint64_t ) off	146:4:4109:4135	6622142	7	True				
ANR	6622205	AssignmentExpression	offset = ( zip_uint64_t ) off		6622142	0		=			
ANR	6622206	Identifier	offset		6622142	0					
ANR	6622207	CastExpression	( zip_uint64_t ) off		6622142	1					
ANR	6622208	CastTarget	zip_uint64_t		6622142	0					
ANR	6622209	Identifier	off		6622142	1					
ANR	6622210	ExpressionStatement	is_zip64 = 0	148:4:4142:4154	6622142	8	True				
ANR	6622211	AssignmentExpression	is_zip64 = 0		6622142	0		=			
ANR	6622212	Identifier	is_zip64		6622142	0					
ANR	6622213	PrimaryExpression	0		6622142	1					
ANR	6622214	ForStatement	for ( i = 0 ; i < survivors ; i ++ )		6622142	9					
ANR	6622215	ForInit	i = 0 ;	150:9:4166:4169	6622142	0	True				
ANR	6622216	AssignmentExpression	i = 0		6622142	0		=			
ANR	6622217	Identifier	i		6622142	0					
ANR	6622218	PrimaryExpression	0		6622142	1					
ANR	6622219	Condition	i < survivors	150:14:4171:4181	6622142	1	True				
ANR	6622220	RelationalExpression	i < survivors		6622142	0		<			
ANR	6622221	Identifier	i		6622142	0					
ANR	6622222	Identifier	survivors		6622142	1					
ANR	6622223	PostIncDecOperationExpression	i ++	150:27:4184:4186	6622142	2	True				
ANR	6622224	Identifier	i		6622142	0					
ANR	6622225	IncDec	++		6622142	1					
ANR	6622226	CompoundStatement		18:1:331:382	6622142	3					
ANR	6622227	IdentifierDeclStatement	struct zip_entry * entry = za -> entry + filelist [ i ] . idx ;	151:1:4192:4243	6622142	0	True				
ANR	6622228	IdentifierDecl	* entry = za -> entry + filelist [ i ] . idx		6622142	0					
ANR	6622229	IdentifierDeclType	struct zip_entry *		6622142	0					
ANR	6622230	Identifier	entry		6622142	1					
ANR	6622231	AssignmentExpression	* entry = za -> entry + filelist [ i ] . idx		6622142	2		=			
ANR	6622232	Identifier	entry		6622142	0					
ANR	6622233	AdditiveExpression	za -> entry + filelist [ i ] . idx		6622142	1		+			
ANR	6622234	PtrMemberAccess	za -> entry		6622142	0					
ANR	6622235	Identifier	za		6622142	0					
ANR	6622236	Identifier	entry		6622142	1					
ANR	6622237	MemberAccess	filelist [ i ] . idx		6622142	1					
ANR	6622238	ArrayIndexing	filelist [ i ]		6622142	0					
ANR	6622239	Identifier	filelist		6622142	0					
ANR	6622240	Identifier	i		6622142	1					
ANR	6622241	Identifier	idx		6622142	1					
ANR	6622242	IfStatement	"if ( ( ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error ) ) < 0 )"		6622142	1					
ANR	6622243	Condition	"( ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error ) ) < 0"	153:5:4251:4356	6622142	0	True				
ANR	6622244	RelationalExpression	"( ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error ) ) < 0"		6622142	0		<			
ANR	6622245	AssignmentExpression	"ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error )"		6622142	0		=			
ANR	6622246	Identifier	ret		6622142	0					
ANR	6622247	CallExpression	"_zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error )"		6622142	1					
ANR	6622248	Callee	_zip_dirent_write		6622142	0					
ANR	6622249	Identifier	_zip_dirent_write		6622142	0					
ANR	6622250	ArgumentList	entry -> changes ? entry -> changes : entry -> orig		6622142	1					
ANR	6622251	Argument	entry -> changes ? entry -> changes : entry -> orig		6622142	0					
ANR	6622252	ConditionalExpression	entry -> changes ? entry -> changes : entry -> orig		6622142	0					
ANR	6622253	Condition	entry -> changes		6622142	0					
ANR	6622254	PtrMemberAccess	entry -> changes		6622142	0					
ANR	6622255	Identifier	entry		6622142	0					
ANR	6622256	Identifier	changes		6622142	1					
ANR	6622257	PtrMemberAccess	entry -> changes		6622142	1					
ANR	6622258	Identifier	entry		6622142	0					
ANR	6622259	Identifier	changes		6622142	1					
ANR	6622260	PtrMemberAccess	entry -> orig		6622142	2					
ANR	6622261	Identifier	entry		6622142	0					
ANR	6622262	Identifier	orig		6622142	1					
ANR	6622263	Argument	fp		6622142	1					
ANR	6622264	Identifier	fp		6622142	0					
ANR	6622265	Argument	ZIP_FL_CENTRAL		6622142	2					
ANR	6622266	Identifier	ZIP_FL_CENTRAL		6622142	0					
ANR	6622267	Argument	& za -> error		6622142	3					
ANR	6622268	UnaryOperationExpression	& za -> error		6622142	0					
ANR	6622269	UnaryOperator	&		6622142	0					
ANR	6622270	PtrMemberAccess	za -> error		6622142	1					
ANR	6622271	Identifier	za		6622142	0					
ANR	6622272	Identifier	error		6622142	1					
ANR	6622273	PrimaryExpression	0		6622142	1					
ANR	6622274	ReturnStatement	return - 1 ;	154:5:4364:4373	6622142	1	True				
ANR	6622275	UnaryOperationExpression	- 1		6622142	0					
ANR	6622276	UnaryOperator	-		6622142	0					
ANR	6622277	PrimaryExpression	1		6622142	1					
ANR	6622278	IfStatement	if ( ret )		6622142	2					
ANR	6622279	Condition	ret	155:5:4380:4382	6622142	0	True				
ANR	6622280	Identifier	ret		6622142	0					
ANR	6622281	ExpressionStatement	is_zip64 = 1	156:5:4390:4402	6622142	1	True				
ANR	6622282	AssignmentExpression	is_zip64 = 1		6622142	0		=			
ANR	6622283	Identifier	is_zip64		6622142	0					
ANR	6622284	PrimaryExpression	1		6622142	1					
ANR	6622285	IfStatement	if ( ( off = ftello ( fp ) ) < 0 )		6622142	10					
ANR	6622286	Condition	( off = ftello ( fp ) ) < 0	159:8:4419:4438	6622142	0	True				
ANR	6622287	RelationalExpression	( off = ftello ( fp ) ) < 0		6622142	0		<			
ANR	6622288	AssignmentExpression	off = ftello ( fp )		6622142	0		=			
ANR	6622289	Identifier	off		6622142	0					
ANR	6622290	CallExpression	ftello ( fp )		6622142	1					
ANR	6622291	Callee	ftello		6622142	0					
ANR	6622292	Identifier	ftello		6622142	0					
ANR	6622293	ArgumentList	fp		6622142	1					
ANR	6622294	Argument	fp		6622142	0					
ANR	6622295	Identifier	fp		6622142	0					
ANR	6622296	PrimaryExpression	0		6622142	1					
ANR	6622297	CompoundStatement		26:30:580:580	6622142	1					
ANR	6622298	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"	160:8:4451:4497	6622142	0	True				
ANR	6622299	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"		6622142	0					
ANR	6622300	Callee	_zip_error_set		6622142	0					
ANR	6622301	Identifier	_zip_error_set		6622142	0					
ANR	6622302	ArgumentList	& za -> error		6622142	1					
ANR	6622303	Argument	& za -> error		6622142	0					
ANR	6622304	UnaryOperationExpression	& za -> error		6622142	0					
ANR	6622305	UnaryOperator	&		6622142	0					
ANR	6622306	PtrMemberAccess	za -> error		6622142	1					
ANR	6622307	Identifier	za		6622142	0					
ANR	6622308	Identifier	error		6622142	1					
ANR	6622309	Argument	ZIP_ER_READ		6622142	1					
ANR	6622310	Identifier	ZIP_ER_READ		6622142	0					
ANR	6622311	Argument	errno		6622142	2					
ANR	6622312	Identifier	errno		6622142	0					
ANR	6622313	ReturnStatement	return - 1 ;	161:8:4507:4516	6622142	1	True				
ANR	6622314	UnaryOperationExpression	- 1		6622142	0					
ANR	6622315	UnaryOperator	-		6622142	0					
ANR	6622316	PrimaryExpression	1		6622142	1					
ANR	6622317	ExpressionStatement	size = ( zip_uint64_t ) off - offset	163:4:4528:4561	6622142	11	True				
ANR	6622318	AssignmentExpression	size = ( zip_uint64_t ) off - offset		6622142	0		=			
ANR	6622319	Identifier	size		6622142	0					
ANR	6622320	AdditiveExpression	( zip_uint64_t ) off - offset		6622142	1		-			
ANR	6622321	CastExpression	( zip_uint64_t ) off		6622142	0					
ANR	6622322	CastTarget	zip_uint64_t		6622142	0					
ANR	6622323	Identifier	off		6622142	1					
ANR	6622324	Identifier	offset		6622142	1					
ANR	6622325	IfStatement	if ( offset > ZIP_UINT32_MAX || survivors > ZIP_UINT16_MAX )		6622142	12					
ANR	6622326	Condition	offset > ZIP_UINT32_MAX || survivors > ZIP_UINT16_MAX	165:8:4572:4624	6622142	0	True				
ANR	6622327	OrExpression	offset > ZIP_UINT32_MAX || survivors > ZIP_UINT16_MAX		6622142	0		||			
ANR	6622328	RelationalExpression	offset > ZIP_UINT32_MAX		6622142	0		>			
ANR	6622329	Identifier	offset		6622142	0					
ANR	6622330	Identifier	ZIP_UINT32_MAX		6622142	1					
ANR	6622331	RelationalExpression	survivors > ZIP_UINT16_MAX		6622142	1		>			
ANR	6622332	Identifier	survivors		6622142	0					
ANR	6622333	Identifier	ZIP_UINT16_MAX		6622142	1					
ANR	6622334	ExpressionStatement	is_zip64 = 1	166:1:4628:4640	6622142	1	True				
ANR	6622335	AssignmentExpression	is_zip64 = 1		6622142	0		=			
ANR	6622336	Identifier	is_zip64		6622142	0					
ANR	6622337	PrimaryExpression	1		6622142	1					
ANR	6622338	IfStatement	if ( is_zip64 )		6622142	13					
ANR	6622339	Condition	is_zip64	168:8:4651:4658	6622142	0	True				
ANR	6622340	Identifier	is_zip64		6622142	0					
ANR	6622341	CompoundStatement		35:18:800:800	6622142	1					
ANR	6622342	ExpressionStatement	"fwrite ( EOCD64_MAGIC , 1 , 4 , fp )"	169:1:4664:4694	6622142	0	True				
ANR	6622343	CallExpression	"fwrite ( EOCD64_MAGIC , 1 , 4 , fp )"		6622142	0					
ANR	6622344	Callee	fwrite		6622142	0					
ANR	6622345	Identifier	fwrite		6622142	0					
ANR	6622346	ArgumentList	EOCD64_MAGIC		6622142	1					
ANR	6622347	Argument	EOCD64_MAGIC		6622142	0					
ANR	6622348	Identifier	EOCD64_MAGIC		6622142	0					
ANR	6622349	Argument	1		6622142	1					
ANR	6622350	PrimaryExpression	1		6622142	0					
ANR	6622351	Argument	4		6622142	2					
ANR	6622352	PrimaryExpression	4		6622142	0					
ANR	6622353	Argument	fp		6622142	3					
ANR	6622354	Identifier	fp		6622142	0					
ANR	6622355	ExpressionStatement	"_zip_write8 ( EOCD64LEN - 12 , fp )"	170:1:4697:4726	6622142	1	True				
ANR	6622356	CallExpression	"_zip_write8 ( EOCD64LEN - 12 , fp )"		6622142	0					
ANR	6622357	Callee	_zip_write8		6622142	0					
ANR	6622358	Identifier	_zip_write8		6622142	0					
ANR	6622359	ArgumentList	EOCD64LEN - 12		6622142	1					
ANR	6622360	Argument	EOCD64LEN - 12		6622142	0					
ANR	6622361	AdditiveExpression	EOCD64LEN - 12		6622142	0		-			
ANR	6622362	Identifier	EOCD64LEN		6622142	0					
ANR	6622363	PrimaryExpression	12		6622142	1					
ANR	6622364	Argument	fp		6622142	1					
ANR	6622365	Identifier	fp		6622142	0					
ANR	6622366	ExpressionStatement	"_zip_write2 ( 45 , fp )"	171:1:4729:4748	6622142	2	True				
ANR	6622367	CallExpression	"_zip_write2 ( 45 , fp )"		6622142	0					
ANR	6622368	Callee	_zip_write2		6622142	0					
ANR	6622369	Identifier	_zip_write2		6622142	0					
ANR	6622370	ArgumentList	45		6622142	1					
ANR	6622371	Argument	45		6622142	0					
ANR	6622372	PrimaryExpression	45		6622142	0					
ANR	6622373	Argument	fp		6622142	1					
ANR	6622374	Identifier	fp		6622142	0					
ANR	6622375	ExpressionStatement	"_zip_write2 ( 45 , fp )"	172:1:4751:4770	6622142	3	True				
ANR	6622376	CallExpression	"_zip_write2 ( 45 , fp )"		6622142	0					
ANR	6622377	Callee	_zip_write2		6622142	0					
ANR	6622378	Identifier	_zip_write2		6622142	0					
ANR	6622379	ArgumentList	45		6622142	1					
ANR	6622380	Argument	45		6622142	0					
ANR	6622381	PrimaryExpression	45		6622142	0					
ANR	6622382	Argument	fp		6622142	1					
ANR	6622383	Identifier	fp		6622142	0					
ANR	6622384	ExpressionStatement	"_zip_write4 ( 0 , fp )"	173:1:4773:4791	6622142	4	True				
ANR	6622385	CallExpression	"_zip_write4 ( 0 , fp )"		6622142	0					
ANR	6622386	Callee	_zip_write4		6622142	0					
ANR	6622387	Identifier	_zip_write4		6622142	0					
ANR	6622388	ArgumentList	0		6622142	1					
ANR	6622389	Argument	0		6622142	0					
ANR	6622390	PrimaryExpression	0		6622142	0					
ANR	6622391	Argument	fp		6622142	1					
ANR	6622392	Identifier	fp		6622142	0					
ANR	6622393	ExpressionStatement	"_zip_write4 ( 0 , fp )"	174:1:4794:4812	6622142	5	True				
ANR	6622394	CallExpression	"_zip_write4 ( 0 , fp )"		6622142	0					
ANR	6622395	Callee	_zip_write4		6622142	0					
ANR	6622396	Identifier	_zip_write4		6622142	0					
ANR	6622397	ArgumentList	0		6622142	1					
ANR	6622398	Argument	0		6622142	0					
ANR	6622399	PrimaryExpression	0		6622142	0					
ANR	6622400	Argument	fp		6622142	1					
ANR	6622401	Identifier	fp		6622142	0					
ANR	6622402	ExpressionStatement	"_zip_write8 ( survivors , fp )"	175:1:4815:4841	6622142	6	True				
ANR	6622403	CallExpression	"_zip_write8 ( survivors , fp )"		6622142	0					
ANR	6622404	Callee	_zip_write8		6622142	0					
ANR	6622405	Identifier	_zip_write8		6622142	0					
ANR	6622406	ArgumentList	survivors		6622142	1					
ANR	6622407	Argument	survivors		6622142	0					
ANR	6622408	Identifier	survivors		6622142	0					
ANR	6622409	Argument	fp		6622142	1					
ANR	6622410	Identifier	fp		6622142	0					
ANR	6622411	ExpressionStatement	"_zip_write8 ( survivors , fp )"	176:1:4844:4870	6622142	7	True				
ANR	6622412	CallExpression	"_zip_write8 ( survivors , fp )"		6622142	0					
ANR	6622413	Callee	_zip_write8		6622142	0					
ANR	6622414	Identifier	_zip_write8		6622142	0					
ANR	6622415	ArgumentList	survivors		6622142	1					
ANR	6622416	Argument	survivors		6622142	0					
ANR	6622417	Identifier	survivors		6622142	0					
ANR	6622418	Argument	fp		6622142	1					
ANR	6622419	Identifier	fp		6622142	0					
ANR	6622420	ExpressionStatement	"_zip_write8 ( size , fp )"	177:1:4873:4894	6622142	8	True				
ANR	6622421	CallExpression	"_zip_write8 ( size , fp )"		6622142	0					
ANR	6622422	Callee	_zip_write8		6622142	0					
ANR	6622423	Identifier	_zip_write8		6622142	0					
ANR	6622424	ArgumentList	size		6622142	1					
ANR	6622425	Argument	size		6622142	0					
ANR	6622426	Identifier	size		6622142	0					
ANR	6622427	Argument	fp		6622142	1					
ANR	6622428	Identifier	fp		6622142	0					
ANR	6622429	ExpressionStatement	"_zip_write8 ( offset , fp )"	178:1:4897:4920	6622142	9	True				
ANR	6622430	CallExpression	"_zip_write8 ( offset , fp )"		6622142	0					
ANR	6622431	Callee	_zip_write8		6622142	0					
ANR	6622432	Identifier	_zip_write8		6622142	0					
ANR	6622433	ArgumentList	offset		6622142	1					
ANR	6622434	Argument	offset		6622142	0					
ANR	6622435	Identifier	offset		6622142	0					
ANR	6622436	Argument	fp		6622142	1					
ANR	6622437	Identifier	fp		6622142	0					
ANR	6622438	ExpressionStatement	"fwrite ( EOCD64LOC_MAGIC , 1 , 4 , fp )"	180:1:4924:4957	6622142	10	True				
ANR	6622439	CallExpression	"fwrite ( EOCD64LOC_MAGIC , 1 , 4 , fp )"		6622142	0					
ANR	6622440	Callee	fwrite		6622142	0					
ANR	6622441	Identifier	fwrite		6622142	0					
ANR	6622442	ArgumentList	EOCD64LOC_MAGIC		6622142	1					
ANR	6622443	Argument	EOCD64LOC_MAGIC		6622142	0					
ANR	6622444	Identifier	EOCD64LOC_MAGIC		6622142	0					
ANR	6622445	Argument	1		6622142	1					
ANR	6622446	PrimaryExpression	1		6622142	0					
ANR	6622447	Argument	4		6622142	2					
ANR	6622448	PrimaryExpression	4		6622142	0					
ANR	6622449	Argument	fp		6622142	3					
ANR	6622450	Identifier	fp		6622142	0					
ANR	6622451	ExpressionStatement	"_zip_write4 ( 0 , fp )"	181:1:4960:4978	6622142	11	True				
ANR	6622452	CallExpression	"_zip_write4 ( 0 , fp )"		6622142	0					
ANR	6622453	Callee	_zip_write4		6622142	0					
ANR	6622454	Identifier	_zip_write4		6622142	0					
ANR	6622455	ArgumentList	0		6622142	1					
ANR	6622456	Argument	0		6622142	0					
ANR	6622457	PrimaryExpression	0		6622142	0					
ANR	6622458	Argument	fp		6622142	1					
ANR	6622459	Identifier	fp		6622142	0					
ANR	6622460	ExpressionStatement	"_zip_write8 ( offset + size , fp )"	182:1:4981:5009	6622142	12	True				
ANR	6622461	CallExpression	"_zip_write8 ( offset + size , fp )"		6622142	0					
ANR	6622462	Callee	_zip_write8		6622142	0					
ANR	6622463	Identifier	_zip_write8		6622142	0					
ANR	6622464	ArgumentList	offset + size		6622142	1					
ANR	6622465	Argument	offset + size		6622142	0					
ANR	6622466	AdditiveExpression	offset + size		6622142	0		+			
ANR	6622467	Identifier	offset		6622142	0					
ANR	6622468	Identifier	size		6622142	1					
ANR	6622469	Argument	fp		6622142	1					
ANR	6622470	Identifier	fp		6622142	0					
ANR	6622471	ExpressionStatement	"_zip_write4 ( 1 , fp )"	183:1:5012:5030	6622142	13	True				
ANR	6622472	CallExpression	"_zip_write4 ( 1 , fp )"		6622142	0					
ANR	6622473	Callee	_zip_write4		6622142	0					
ANR	6622474	Identifier	_zip_write4		6622142	0					
ANR	6622475	ArgumentList	1		6622142	1					
ANR	6622476	Argument	1		6622142	0					
ANR	6622477	PrimaryExpression	1		6622142	0					
ANR	6622478	Argument	fp		6622142	1					
ANR	6622479	Identifier	fp		6622142	0					
ANR	6622480	ExpressionStatement	"fwrite ( EOCD_MAGIC , 1 , 4 , fp )"	188:4:5074:5102	6622142	14	True				
ANR	6622481	CallExpression	"fwrite ( EOCD_MAGIC , 1 , 4 , fp )"		6622142	0					
ANR	6622482	Callee	fwrite		6622142	0					
ANR	6622483	Identifier	fwrite		6622142	0					
ANR	6622484	ArgumentList	EOCD_MAGIC		6622142	1					
ANR	6622485	Argument	EOCD_MAGIC		6622142	0					
ANR	6622486	Identifier	EOCD_MAGIC		6622142	0					
ANR	6622487	Argument	1		6622142	1					
ANR	6622488	PrimaryExpression	1		6622142	0					
ANR	6622489	Argument	4		6622142	2					
ANR	6622490	PrimaryExpression	4		6622142	0					
ANR	6622491	Argument	fp		6622142	3					
ANR	6622492	Identifier	fp		6622142	0					
ANR	6622493	ExpressionStatement	"_zip_write4 ( 0 , fp )"	189:4:5108:5126	6622142	15	True				
ANR	6622494	CallExpression	"_zip_write4 ( 0 , fp )"		6622142	0					
ANR	6622495	Callee	_zip_write4		6622142	0					
ANR	6622496	Identifier	_zip_write4		6622142	0					
ANR	6622497	ArgumentList	0		6622142	1					
ANR	6622498	Argument	0		6622142	0					
ANR	6622499	PrimaryExpression	0		6622142	0					
ANR	6622500	Argument	fp		6622142	1					
ANR	6622501	Identifier	fp		6622142	0					
ANR	6622502	ExpressionStatement	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"	190:4:5132:5219	6622142	16	True				
ANR	6622503	CallExpression	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"		6622142	0					
ANR	6622504	Callee	_zip_write2		6622142	0					
ANR	6622505	Identifier	_zip_write2		6622142	0					
ANR	6622506	ArgumentList	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6622142	1					
ANR	6622507	Argument	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6622142	0					
ANR	6622508	ConditionalExpression	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6622142	0					
ANR	6622509	Condition	survivors >= ZIP_UINT16_MAX		6622142	0					
ANR	6622510	RelationalExpression	survivors >= ZIP_UINT16_MAX		6622142	0		>=			
ANR	6622511	Identifier	survivors		6622142	0					
ANR	6622512	Identifier	ZIP_UINT16_MAX		6622142	1					
ANR	6622513	Identifier	ZIP_UINT16_MAX		6622142	1					
ANR	6622514	CastExpression	( zip_uint16_t ) survivors		6622142	2					
ANR	6622515	CastTarget	zip_uint16_t		6622142	0					
ANR	6622516	Identifier	survivors		6622142	1					
ANR	6622517	Argument	fp		6622142	1					
ANR	6622518	Identifier	fp		6622142	0					
ANR	6622519	ExpressionStatement	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"	191:4:5225:5312	6622142	17	True				
ANR	6622520	CallExpression	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"		6622142	0					
ANR	6622521	Callee	_zip_write2		6622142	0					
ANR	6622522	Identifier	_zip_write2		6622142	0					
ANR	6622523	ArgumentList	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6622142	1					
ANR	6622524	Argument	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6622142	0					
ANR	6622525	ConditionalExpression	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6622142	0					
ANR	6622526	Condition	survivors >= ZIP_UINT16_MAX		6622142	0					
ANR	6622527	RelationalExpression	survivors >= ZIP_UINT16_MAX		6622142	0		>=			
ANR	6622528	Identifier	survivors		6622142	0					
ANR	6622529	Identifier	ZIP_UINT16_MAX		6622142	1					
ANR	6622530	Identifier	ZIP_UINT16_MAX		6622142	1					
ANR	6622531	CastExpression	( zip_uint16_t ) survivors		6622142	2					
ANR	6622532	CastTarget	zip_uint16_t		6622142	0					
ANR	6622533	Identifier	survivors		6622142	1					
ANR	6622534	Argument	fp		6622142	1					
ANR	6622535	Identifier	fp		6622142	0					
ANR	6622536	ExpressionStatement	"_zip_write4 ( size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size , fp )"	192:4:5318:5395	6622142	18	True				
ANR	6622537	CallExpression	"_zip_write4 ( size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size , fp )"		6622142	0					
ANR	6622538	Callee	_zip_write4		6622142	0					
ANR	6622539	Identifier	_zip_write4		6622142	0					
ANR	6622540	ArgumentList	size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size		6622142	1					
ANR	6622541	Argument	size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size		6622142	0					
ANR	6622542	ConditionalExpression	size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size		6622142	0					
ANR	6622543	Condition	size >= ZIP_UINT32_MAX		6622142	0					
ANR	6622544	RelationalExpression	size >= ZIP_UINT32_MAX		6622142	0		>=			
ANR	6622545	Identifier	size		6622142	0					
ANR	6622546	Identifier	ZIP_UINT32_MAX		6622142	1					
ANR	6622547	Identifier	ZIP_UINT32_MAX		6622142	1					
ANR	6622548	CastExpression	( zip_uint32_t ) size		6622142	2					
ANR	6622549	CastTarget	zip_uint32_t		6622142	0					
ANR	6622550	Identifier	size		6622142	1					
ANR	6622551	Argument	fp		6622142	1					
ANR	6622552	Identifier	fp		6622142	0					
ANR	6622553	ExpressionStatement	"_zip_write4 ( offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset , fp )"	193:4:5401:5482	6622142	19	True				
ANR	6622554	CallExpression	"_zip_write4 ( offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset , fp )"		6622142	0					
ANR	6622555	Callee	_zip_write4		6622142	0					
ANR	6622556	Identifier	_zip_write4		6622142	0					
ANR	6622557	ArgumentList	offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset		6622142	1					
ANR	6622558	Argument	offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset		6622142	0					
ANR	6622559	ConditionalExpression	offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset		6622142	0					
ANR	6622560	Condition	offset >= ZIP_UINT32_MAX		6622142	0					
ANR	6622561	RelationalExpression	offset >= ZIP_UINT32_MAX		6622142	0		>=			
ANR	6622562	Identifier	offset		6622142	0					
ANR	6622563	Identifier	ZIP_UINT32_MAX		6622142	1					
ANR	6622564	Identifier	ZIP_UINT32_MAX		6622142	1					
ANR	6622565	CastExpression	( zip_uint32_t ) offset		6622142	2					
ANR	6622566	CastTarget	zip_uint32_t		6622142	0					
ANR	6622567	Identifier	offset		6622142	1					
ANR	6622568	Argument	fp		6622142	1					
ANR	6622569	Identifier	fp		6622142	0					
ANR	6622570	ExpressionStatement	comment = za -> comment_changed ? za -> comment_changes : za -> comment_orig	195:4:5489:5559	6622142	20	True				
ANR	6622571	AssignmentExpression	comment = za -> comment_changed ? za -> comment_changes : za -> comment_orig		6622142	0		=			
ANR	6622572	Identifier	comment		6622142	0					
ANR	6622573	ConditionalExpression	za -> comment_changed ? za -> comment_changes : za -> comment_orig		6622142	1					
ANR	6622574	Condition	za -> comment_changed		6622142	0					
ANR	6622575	PtrMemberAccess	za -> comment_changed		6622142	0					
ANR	6622576	Identifier	za		6622142	0					
ANR	6622577	Identifier	comment_changed		6622142	1					
ANR	6622578	PtrMemberAccess	za -> comment_changes		6622142	1					
ANR	6622579	Identifier	za		6622142	0					
ANR	6622580	Identifier	comment_changes		6622142	1					
ANR	6622581	PtrMemberAccess	za -> comment_orig		6622142	2					
ANR	6622582	Identifier	za		6622142	0					
ANR	6622583	Identifier	comment_orig		6622142	1					
ANR	6622584	ExpressionStatement	"_zip_write2 ( comment ? comment -> length : 0 , fp )"	197:4:5566:5612	6622142	21	True				
ANR	6622585	CallExpression	"_zip_write2 ( comment ? comment -> length : 0 , fp )"		6622142	0					
ANR	6622586	Callee	_zip_write2		6622142	0					
ANR	6622587	Identifier	_zip_write2		6622142	0					
ANR	6622588	ArgumentList	comment ? comment -> length : 0		6622142	1					
ANR	6622589	Argument	comment ? comment -> length : 0		6622142	0					
ANR	6622590	ConditionalExpression	comment ? comment -> length : 0		6622142	0					
ANR	6622591	Condition	comment		6622142	0					
ANR	6622592	Identifier	comment		6622142	0					
ANR	6622593	PtrMemberAccess	comment -> length		6622142	1					
ANR	6622594	Identifier	comment		6622142	0					
ANR	6622595	Identifier	length		6622142	1					
ANR	6622596	PrimaryExpression	0		6622142	2					
ANR	6622597	Argument	fp		6622142	1					
ANR	6622598	Identifier	fp		6622142	0					
ANR	6622599	IfStatement	if ( comment )		6622142	22					
ANR	6622600	Condition	comment	198:8:5622:5628	6622142	0	True				
ANR	6622601	Identifier	comment		6622142	0					
ANR	6622602	ExpressionStatement	"fwrite ( comment -> raw , 1 , comment -> length , fp )"	199:1:5632:5676	6622142	1	True				
ANR	6622603	CallExpression	"fwrite ( comment -> raw , 1 , comment -> length , fp )"		6622142	0					
ANR	6622604	Callee	fwrite		6622142	0					
ANR	6622605	Identifier	fwrite		6622142	0					
ANR	6622606	ArgumentList	comment -> raw		6622142	1					
ANR	6622607	Argument	comment -> raw		6622142	0					
ANR	6622608	PtrMemberAccess	comment -> raw		6622142	0					
ANR	6622609	Identifier	comment		6622142	0					
ANR	6622610	Identifier	raw		6622142	1					
ANR	6622611	Argument	1		6622142	1					
ANR	6622612	PrimaryExpression	1		6622142	0					
ANR	6622613	Argument	comment -> length		6622142	2					
ANR	6622614	PtrMemberAccess	comment -> length		6622142	0					
ANR	6622615	Identifier	comment		6622142	0					
ANR	6622616	Identifier	length		6622142	1					
ANR	6622617	Argument	fp		6622142	3					
ANR	6622618	Identifier	fp		6622142	0					
ANR	6622619	IfStatement	if ( ferror ( fp ) )		6622142	23					
ANR	6622620	Condition	ferror ( fp )	201:8:5687:5696	6622142	0	True				
ANR	6622621	CallExpression	ferror ( fp )		6622142	0					
ANR	6622622	Callee	ferror		6622142	0					
ANR	6622623	Identifier	ferror		6622142	0					
ANR	6622624	ArgumentList	fp		6622142	1					
ANR	6622625	Argument	fp		6622142	0					
ANR	6622626	Identifier	fp		6622142	0					
ANR	6622627	CompoundStatement		68:20:1838:1838	6622142	1					
ANR	6622628	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"	202:1:5702:5749	6622142	0	True				
ANR	6622629	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"		6622142	0					
ANR	6622630	Callee	_zip_error_set		6622142	0					
ANR	6622631	Identifier	_zip_error_set		6622142	0					
ANR	6622632	ArgumentList	& za -> error		6622142	1					
ANR	6622633	Argument	& za -> error		6622142	0					
ANR	6622634	UnaryOperationExpression	& za -> error		6622142	0					
ANR	6622635	UnaryOperator	&		6622142	0					
ANR	6622636	PtrMemberAccess	za -> error		6622142	1					
ANR	6622637	Identifier	za		6622142	0					
ANR	6622638	Identifier	error		6622142	1					
ANR	6622639	Argument	ZIP_ER_WRITE		6622142	1					
ANR	6622640	Identifier	ZIP_ER_WRITE		6622142	0					
ANR	6622641	Argument	errno		6622142	2					
ANR	6622642	Identifier	errno		6622142	0					
ANR	6622643	ReturnStatement	return - 1 ;	203:1:5752:5761	6622142	1	True				
ANR	6622644	UnaryOperationExpression	- 1		6622142	0					
ANR	6622645	UnaryOperator	-		6622142	0					
ANR	6622646	PrimaryExpression	1		6622142	1					
ANR	6622647	ReturnStatement	return ( zip_int64_t ) size ;	206:4:5774:5798	6622142	24	True				
ANR	6622648	CastExpression	( zip_int64_t ) size		6622142	0					
ANR	6622649	CastTarget	zip_int64_t		6622142	0					
ANR	6622650	Identifier	size		6622142	1					
ANR	6622651	ReturnType	zip_int64_t		6622142	1					
ANR	6622652	Identifier	_zip_cdir_write		6622142	2					
ANR	6622653	ParameterList	"struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * fp"		6622142	3					
ANR	6622654	Parameter	struct zip * za	133:16:3773:3786	6622142	0	True				
ANR	6622655	ParameterType	struct zip *		6622142	0					
ANR	6622656	Identifier	za		6622142	1					
ANR	6622657	Parameter	const struct zip_filelist * filelist	133:32:3789:3823	6622142	1	True				
ANR	6622658	ParameterType	const struct zip_filelist *		6622142	0					
ANR	6622659	Identifier	filelist		6622142	1					
ANR	6622660	Parameter	zip_uint64_t survivors	133:69:3826:3847	6622142	2	True				
ANR	6622661	ParameterType	zip_uint64_t		6622142	0					
ANR	6622662	Identifier	survivors		6622142	1					
ANR	6622663	Parameter	FILE * fp	133:93:3850:3857	6622142	3	True				
ANR	6622664	ParameterType	FILE *		6622142	0					
ANR	6622665	Identifier	fp		6622142	1					
ANR	6622666	CFGEntryNode	ENTRY		6622142		True				
ANR	6622667	CFGExitNode	EXIT		6622142		True				
ANR	6622668	Symbol	EOCD64_MAGIC		6622142						
ANR	6622669	Symbol	& za -> error		6622142						
ANR	6622670	Symbol	ZIP_FL_CENTRAL		6622142						
ANR	6622671	Symbol	ZIP_UINT32_MAX		6622142						
ANR	6622672	Symbol	ZIP_UINT16_MAX		6622142						
ANR	6622673	Symbol	za -> comment_orig		6622142						
ANR	6622674	Symbol	is_zip64		6622142						
ANR	6622675	Symbol	EOCD64LEN		6622142						
ANR	6622676	Symbol	za -> entry		6622142						
ANR	6622677	Symbol	fp		6622142						
ANR	6622678	Symbol	ZIP_ER_READ		6622142						
ANR	6622679	Symbol	* za		6622142						
ANR	6622680	Symbol	za -> comment_changes		6622142						
ANR	6622681	Symbol	_zip_dirent_write		6622142						
ANR	6622682	Symbol	comment -> raw		6622142						
ANR	6622683	Symbol	ftello		6622142						
ANR	6622684	Symbol	* filelist		6622142						
ANR	6622685	Symbol	* entry		6622142						
ANR	6622686	Symbol	ret		6622142						
ANR	6622687	Symbol	EOCD_MAGIC		6622142						
ANR	6622688	Symbol	za -> comment_changed		6622142						
ANR	6622689	Symbol	errno		6622142						
ANR	6622690	Symbol	offset		6622142						
ANR	6622691	Symbol	entry -> changes		6622142						
ANR	6622692	Symbol	za		6622142						
ANR	6622693	Symbol	filelist		6622142						
ANR	6622694	Symbol	i		6622142						
ANR	6622695	Symbol	ZIP_ER_WRITE		6622142						
ANR	6622696	Symbol	* comment		6622142						
ANR	6622697	Symbol	off		6622142						
ANR	6622698	Symbol	entry		6622142						
ANR	6622699	Symbol	ferror		6622142						
ANR	6622700	Symbol	comment -> length		6622142						
ANR	6622701	Symbol	* i		6622142						
ANR	6622702	Symbol	size		6622142						
ANR	6622703	Symbol	filelist [ i ] . idx		6622142						
ANR	6622704	Symbol	entry -> orig		6622142						
ANR	6622705	Symbol	survivors		6622142						
ANR	6622706	Symbol	comment		6622142						
ANR	6622707	Symbol	EOCD64LOC_MAGIC		6622142						
ANR	6622708	Function	_zip_dirent_clone	211:0:5806:6129							
ANR	6622709	FunctionDef	_zip_dirent_clone (const struct zip_dirent * sde)		6622708	0					
ANR	6622710	CompoundStatement		213:0:5874:6129	6622708	0					
ANR	6622711	IdentifierDeclStatement	struct zip_dirent * tde ;	214:4:5880:5902	6622708	0	True				
ANR	6622712	IdentifierDecl	* tde		6622708	0					
ANR	6622713	IdentifierDeclType	struct zip_dirent *		6622708	0					
ANR	6622714	Identifier	tde		6622708	1					
ANR	6622715	IfStatement	if ( ( tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) ) ) == NULL )		6622708	1					
ANR	6622716	Condition	( tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) ) ) == NULL	216:8:5913:5967	6622708	0	True				
ANR	6622717	EqualityExpression	( tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) ) ) == NULL		6622708	0		==			
ANR	6622718	AssignmentExpression	tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) )		6622708	0		=			
ANR	6622719	Identifier	tde		6622708	0					
ANR	6622720	CastExpression	( struct zip_dirent * ) malloc ( sizeof ( * tde ) )		6622708	1					
ANR	6622721	CastTarget	struct zip_dirent *		6622708	0					
ANR	6622722	CallExpression	malloc ( sizeof ( * tde ) )		6622708	1					
ANR	6622723	Callee	malloc		6622708	0					
ANR	6622724	Identifier	malloc		6622708	0					
ANR	6622725	ArgumentList	sizeof ( * tde )		6622708	1					
ANR	6622726	Argument	sizeof ( * tde )		6622708	0					
ANR	6622727	SizeofExpression	sizeof ( * tde )		6622708	0					
ANR	6622728	Sizeof	sizeof		6622708	0					
ANR	6622729	UnaryOperationExpression	* tde		6622708	1					
ANR	6622730	UnaryOperator	*		6622708	0					
ANR	6622731	Identifier	tde		6622708	1					
ANR	6622732	Identifier	NULL		6622708	1					
ANR	6622733	ReturnStatement	return NULL ;	217:1:5971:5982	6622708	1	True				
ANR	6622734	Identifier	NULL		6622708	0					
ANR	6622735	IfStatement	if ( sde )		6622708	2					
ANR	6622736	Condition	sde	219:8:5993:5995	6622708	0	True				
ANR	6622737	Identifier	sde		6622708	0					
ANR	6622738	ExpressionStatement	"memcpy ( tde , sde , sizeof ( * sde ) )"	220:1:5999:6029	6622708	1	True				
ANR	6622739	CallExpression	"memcpy ( tde , sde , sizeof ( * sde ) )"		6622708	0					
ANR	6622740	Callee	memcpy		6622708	0					
ANR	6622741	Identifier	memcpy		6622708	0					
ANR	6622742	ArgumentList	tde		6622708	1					
ANR	6622743	Argument	tde		6622708	0					
ANR	6622744	Identifier	tde		6622708	0					
ANR	6622745	Argument	sde		6622708	1					
ANR	6622746	Identifier	sde		6622708	0					
ANR	6622747	Argument	sizeof ( * sde )		6622708	2					
ANR	6622748	SizeofExpression	sizeof ( * sde )		6622708	0					
ANR	6622749	Sizeof	sizeof		6622708	0					
ANR	6622750	UnaryOperationExpression	* sde		6622708	1					
ANR	6622751	UnaryOperator	*		6622708	0					
ANR	6622752	Identifier	sde		6622708	1					
ANR	6622753	ElseStatement	else		6622708	0					
ANR	6622754	ExpressionStatement	_zip_dirent_init ( tde )	222:1:6041:6062	6622708	0	True				
ANR	6622755	CallExpression	_zip_dirent_init ( tde )		6622708	0					
ANR	6622756	Callee	_zip_dirent_init		6622708	0					
ANR	6622757	Identifier	_zip_dirent_init		6622708	0					
ANR	6622758	ArgumentList	tde		6622708	1					
ANR	6622759	Argument	tde		6622708	0					
ANR	6622760	Identifier	tde		6622708	0					
ANR	6622761	ExpressionStatement	tde -> changed = 0	224:4:6073:6089	6622708	3	True				
ANR	6622762	AssignmentExpression	tde -> changed = 0		6622708	0		=			
ANR	6622763	PtrMemberAccess	tde -> changed		6622708	0					
ANR	6622764	Identifier	tde		6622708	0					
ANR	6622765	Identifier	changed		6622708	1					
ANR	6622766	PrimaryExpression	0		6622708	1					
ANR	6622767	ExpressionStatement	tde -> cloned = 1	225:4:6095:6110	6622708	4	True				
ANR	6622768	AssignmentExpression	tde -> cloned = 1		6622708	0		=			
ANR	6622769	PtrMemberAccess	tde -> cloned		6622708	0					
ANR	6622770	Identifier	tde		6622708	0					
ANR	6622771	Identifier	cloned		6622708	1					
ANR	6622772	PrimaryExpression	1		6622708	1					
ANR	6622773	ReturnStatement	return tde ;	227:4:6117:6127	6622708	5	True				
ANR	6622774	Identifier	tde		6622708	0					
ANR	6622775	ReturnType	struct zip_dirent *		6622708	1					
ANR	6622776	Identifier	_zip_dirent_clone		6622708	2					
ANR	6622777	ParameterList	const struct zip_dirent * sde		6622708	3					
ANR	6622778	Parameter	const struct zip_dirent * sde	212:18:5844:5871	6622708	0	True				
ANR	6622779	ParameterType	const struct zip_dirent *		6622708	0					
ANR	6622780	Identifier	sde		6622708	1					
ANR	6622781	CFGEntryNode	ENTRY		6622708		True				
ANR	6622782	CFGExitNode	EXIT		6622708		True				
ANR	6622783	Symbol	malloc		6622708						
ANR	6622784	Symbol	tde -> cloned		6622708						
ANR	6622785	Symbol	NULL		6622708						
ANR	6622786	Symbol	tde		6622708						
ANR	6622787	Symbol	sde		6622708						
ANR	6622788	Symbol	tde -> changed		6622708						
ANR	6622789	Symbol	* sde		6622708						
ANR	6622790	Symbol	* tde		6622708						
ANR	6622791	Function	_zip_dirent_finalize	232:0:6135:6470							
ANR	6622792	FunctionDef	_zip_dirent_finalize (struct zip_dirent * zde)		6622791	0					
ANR	6622793	CompoundStatement		234:0:6185:6470	6622791	0					
ANR	6622794	IfStatement	if ( ! zde -> cloned || zde -> changed & ZIP_DIRENT_FILENAME )		6622791	0					
ANR	6622795	Condition	! zde -> cloned || zde -> changed & ZIP_DIRENT_FILENAME	235:8:6195:6244	6622791	0	True				
ANR	6622796	OrExpression	! zde -> cloned || zde -> changed & ZIP_DIRENT_FILENAME		6622791	0		||			
ANR	6622797	UnaryOperationExpression	! zde -> cloned		6622791	0					
ANR	6622798	UnaryOperator	!		6622791	0					
ANR	6622799	PtrMemberAccess	zde -> cloned		6622791	1					
ANR	6622800	Identifier	zde		6622791	0					
ANR	6622801	Identifier	cloned		6622791	1					
ANR	6622802	BitAndExpression	zde -> changed & ZIP_DIRENT_FILENAME		6622791	1		&			
ANR	6622803	PtrMemberAccess	zde -> changed		6622791	0					
ANR	6622804	Identifier	zde		6622791	0					
ANR	6622805	Identifier	changed		6622791	1					
ANR	6622806	Identifier	ZIP_DIRENT_FILENAME		6622791	1					
ANR	6622807	ExpressionStatement	_zip_string_free ( zde -> filename )	236:1:6248:6279	6622791	1	True				
ANR	6622808	CallExpression	_zip_string_free ( zde -> filename )		6622791	0					
ANR	6622809	Callee	_zip_string_free		6622791	0					
ANR	6622810	Identifier	_zip_string_free		6622791	0					
ANR	6622811	ArgumentList	zde -> filename		6622791	1					
ANR	6622812	Argument	zde -> filename		6622791	0					
ANR	6622813	PtrMemberAccess	zde -> filename		6622791	0					
ANR	6622814	Identifier	zde		6622791	0					
ANR	6622815	Identifier	filename		6622791	1					
ANR	6622816	IfStatement	if ( ! zde -> cloned || zde -> changed & ZIP_DIRENT_EXTRA_FIELD )		6622791	1					
ANR	6622817	Condition	! zde -> cloned || zde -> changed & ZIP_DIRENT_EXTRA_FIELD	237:8:6289:6341	6622791	0	True				
ANR	6622818	OrExpression	! zde -> cloned || zde -> changed & ZIP_DIRENT_EXTRA_FIELD		6622791	0		||			
ANR	6622819	UnaryOperationExpression	! zde -> cloned		6622791	0					
ANR	6622820	UnaryOperator	!		6622791	0					
ANR	6622821	PtrMemberAccess	zde -> cloned		6622791	1					
ANR	6622822	Identifier	zde		6622791	0					
ANR	6622823	Identifier	cloned		6622791	1					
ANR	6622824	BitAndExpression	zde -> changed & ZIP_DIRENT_EXTRA_FIELD		6622791	1		&			
ANR	6622825	PtrMemberAccess	zde -> changed		6622791	0					
ANR	6622826	Identifier	zde		6622791	0					
ANR	6622827	Identifier	changed		6622791	1					
ANR	6622828	Identifier	ZIP_DIRENT_EXTRA_FIELD		6622791	1					
ANR	6622829	ExpressionStatement	_zip_ef_free ( zde -> extra_fields )	238:1:6345:6376	6622791	1	True				
ANR	6622830	CallExpression	_zip_ef_free ( zde -> extra_fields )		6622791	0					
ANR	6622831	Callee	_zip_ef_free		6622791	0					
ANR	6622832	Identifier	_zip_ef_free		6622791	0					
ANR	6622833	ArgumentList	zde -> extra_fields		6622791	1					
ANR	6622834	Argument	zde -> extra_fields		6622791	0					
ANR	6622835	PtrMemberAccess	zde -> extra_fields		6622791	0					
ANR	6622836	Identifier	zde		6622791	0					
ANR	6622837	Identifier	extra_fields		6622791	1					
ANR	6622838	IfStatement	if ( ! zde -> cloned || zde -> changed & ZIP_DIRENT_COMMENT )		6622791	2					
ANR	6622839	Condition	! zde -> cloned || zde -> changed & ZIP_DIRENT_COMMENT	239:8:6386:6434	6622791	0	True				
ANR	6622840	OrExpression	! zde -> cloned || zde -> changed & ZIP_DIRENT_COMMENT		6622791	0		||			
ANR	6622841	UnaryOperationExpression	! zde -> cloned		6622791	0					
ANR	6622842	UnaryOperator	!		6622791	0					
ANR	6622843	PtrMemberAccess	zde -> cloned		6622791	1					
ANR	6622844	Identifier	zde		6622791	0					
ANR	6622845	Identifier	cloned		6622791	1					
ANR	6622846	BitAndExpression	zde -> changed & ZIP_DIRENT_COMMENT		6622791	1		&			
ANR	6622847	PtrMemberAccess	zde -> changed		6622791	0					
ANR	6622848	Identifier	zde		6622791	0					
ANR	6622849	Identifier	changed		6622791	1					
ANR	6622850	Identifier	ZIP_DIRENT_COMMENT		6622791	1					
ANR	6622851	ExpressionStatement	_zip_string_free ( zde -> comment )	240:1:6438:6468	6622791	1	True				
ANR	6622852	CallExpression	_zip_string_free ( zde -> comment )		6622791	0					
ANR	6622853	Callee	_zip_string_free		6622791	0					
ANR	6622854	Identifier	_zip_string_free		6622791	0					
ANR	6622855	ArgumentList	zde -> comment		6622791	1					
ANR	6622856	Argument	zde -> comment		6622791	0					
ANR	6622857	PtrMemberAccess	zde -> comment		6622791	0					
ANR	6622858	Identifier	zde		6622791	0					
ANR	6622859	Identifier	comment		6622791	1					
ANR	6622860	ReturnType	void		6622791	1					
ANR	6622861	Identifier	_zip_dirent_finalize		6622791	2					
ANR	6622862	ParameterList	struct zip_dirent * zde		6622791	3					
ANR	6622863	Parameter	struct zip_dirent * zde	233:21:6161:6182	6622791	0	True				
ANR	6622864	ParameterType	struct zip_dirent *		6622791	0					
ANR	6622865	Identifier	zde		6622791	1					
ANR	6622866	CFGEntryNode	ENTRY		6622791		True				
ANR	6622867	CFGExitNode	EXIT		6622791		True				
ANR	6622868	Symbol	zde -> comment		6622791						
ANR	6622869	Symbol	zde -> changed		6622791						
ANR	6622870	Symbol	* zde		6622791						
ANR	6622871	Symbol	ZIP_DIRENT_FILENAME		6622791						
ANR	6622872	Symbol	ZIP_DIRENT_EXTRA_FIELD		6622791						
ANR	6622873	Symbol	zde -> extra_fields		6622791						
ANR	6622874	Symbol	zde -> filename		6622791						
ANR	6622875	Symbol	zde		6622791						
ANR	6622876	Symbol	zde -> cloned		6622791						
ANR	6622877	Symbol	ZIP_DIRENT_COMMENT		6622791						
ANR	6622878	Function	_zip_dirent_free	245:0:6476:6601							
ANR	6622879	FunctionDef	_zip_dirent_free (struct zip_dirent * zde)		6622878	0					
ANR	6622880	CompoundStatement		247:0:6522:6601	6622878	0					
ANR	6622881	IfStatement	if ( zde == NULL )		6622878	0					
ANR	6622882	Condition	zde == NULL	248:8:6532:6542	6622878	0	True				
ANR	6622883	EqualityExpression	zde == NULL		6622878	0		==			
ANR	6622884	Identifier	zde		6622878	0					
ANR	6622885	Identifier	NULL		6622878	1					
ANR	6622886	ReturnStatement	return ;	249:1:6546:6552	6622878	1	True				
ANR	6622887	ExpressionStatement	_zip_dirent_finalize ( zde )	251:4:6559:6584	6622878	1	True				
ANR	6622888	CallExpression	_zip_dirent_finalize ( zde )		6622878	0					
ANR	6622889	Callee	_zip_dirent_finalize		6622878	0					
ANR	6622890	Identifier	_zip_dirent_finalize		6622878	0					
ANR	6622891	ArgumentList	zde		6622878	1					
ANR	6622892	Argument	zde		6622878	0					
ANR	6622893	Identifier	zde		6622878	0					
ANR	6622894	ExpressionStatement	free ( zde )	252:4:6590:6599	6622878	2	True				
ANR	6622895	CallExpression	free ( zde )		6622878	0					
ANR	6622896	Callee	free		6622878	0					
ANR	6622897	Identifier	free		6622878	0					
ANR	6622898	ArgumentList	zde		6622878	1					
ANR	6622899	Argument	zde		6622878	0					
ANR	6622900	Identifier	zde		6622878	0					
ANR	6622901	ReturnType	void		6622878	1					
ANR	6622902	Identifier	_zip_dirent_free		6622878	2					
ANR	6622903	ParameterList	struct zip_dirent * zde		6622878	3					
ANR	6622904	Parameter	struct zip_dirent * zde	246:17:6498:6519	6622878	0	True				
ANR	6622905	ParameterType	struct zip_dirent *		6622878	0					
ANR	6622906	Identifier	zde		6622878	1					
ANR	6622907	CFGEntryNode	ENTRY		6622878		True				
ANR	6622908	CFGExitNode	EXIT		6622878		True				
ANR	6622909	Symbol	NULL		6622878						
ANR	6622910	Symbol	zde		6622878						
ANR	6622911	Function	_zip_dirent_init	257:0:6607:7119							
ANR	6622912	FunctionDef	_zip_dirent_init (struct zip_dirent * de)		6622911	0					
ANR	6622913	CompoundStatement		259:0:6652:7119	6622911	0					
ANR	6622914	ExpressionStatement	de -> changed = 0	260:4:6658:6673	6622911	0	True				
ANR	6622915	AssignmentExpression	de -> changed = 0		6622911	0		=			
ANR	6622916	PtrMemberAccess	de -> changed		6622911	0					
ANR	6622917	Identifier	de		6622911	0					
ANR	6622918	Identifier	changed		6622911	1					
ANR	6622919	PrimaryExpression	0		6622911	1					
ANR	6622920	ExpressionStatement	de -> local_extra_fields_read = 0	261:4:6679:6710	6622911	1	True				
ANR	6622921	AssignmentExpression	de -> local_extra_fields_read = 0		6622911	0		=			
ANR	6622922	PtrMemberAccess	de -> local_extra_fields_read		6622911	0					
ANR	6622923	Identifier	de		6622911	0					
ANR	6622924	Identifier	local_extra_fields_read		6622911	1					
ANR	6622925	PrimaryExpression	0		6622911	1					
ANR	6622926	ExpressionStatement	de -> cloned = 0	262:4:6716:6730	6622911	2	True				
ANR	6622927	AssignmentExpression	de -> cloned = 0		6622911	0		=			
ANR	6622928	PtrMemberAccess	de -> cloned		6622911	0					
ANR	6622929	Identifier	de		6622911	0					
ANR	6622930	Identifier	cloned		6622911	1					
ANR	6622931	PrimaryExpression	0		6622911	1					
ANR	6622932	ExpressionStatement	de -> version_madeby = 20	264:4:6737:6760	6622911	3	True				
ANR	6622933	AssignmentExpression	de -> version_madeby = 20		6622911	0		=			
ANR	6622934	PtrMemberAccess	de -> version_madeby		6622911	0					
ANR	6622935	Identifier	de		6622911	0					
ANR	6622936	Identifier	version_madeby		6622911	1					
ANR	6622937	PrimaryExpression	20		6622911	1					
ANR	6622938	ExpressionStatement	de -> version_needed = 20	265:4:6766:6789	6622911	4	True				
ANR	6622939	AssignmentExpression	de -> version_needed = 20		6622911	0		=			
ANR	6622940	PtrMemberAccess	de -> version_needed		6622911	0					
ANR	6622941	Identifier	de		6622911	0					
ANR	6622942	Identifier	version_needed		6622911	1					
ANR	6622943	PrimaryExpression	20		6622911	1					
ANR	6622944	ExpressionStatement	de -> bitflags = 0	266:4:6805:6821	6622911	5	True				
ANR	6622945	AssignmentExpression	de -> bitflags = 0		6622911	0		=			
ANR	6622946	PtrMemberAccess	de -> bitflags		6622911	0					
ANR	6622947	Identifier	de		6622911	0					
ANR	6622948	Identifier	bitflags		6622911	1					
ANR	6622949	PrimaryExpression	0		6622911	1					
ANR	6622950	ExpressionStatement	de -> comp_method = ZIP_CM_DEFAULT	267:4:6827:6859	6622911	6	True				
ANR	6622951	AssignmentExpression	de -> comp_method = ZIP_CM_DEFAULT		6622911	0		=			
ANR	6622952	PtrMemberAccess	de -> comp_method		6622911	0					
ANR	6622953	Identifier	de		6622911	0					
ANR	6622954	Identifier	comp_method		6622911	1					
ANR	6622955	Identifier	ZIP_CM_DEFAULT		6622911	1					
ANR	6622956	ExpressionStatement	de -> last_mod = 0	268:4:6865:6881	6622911	7	True				
ANR	6622957	AssignmentExpression	de -> last_mod = 0		6622911	0		=			
ANR	6622958	PtrMemberAccess	de -> last_mod		6622911	0					
ANR	6622959	Identifier	de		6622911	0					
ANR	6622960	Identifier	last_mod		6622911	1					
ANR	6622961	PrimaryExpression	0		6622911	1					
ANR	6622962	ExpressionStatement	de -> crc = 0	269:4:6887:6898	6622911	8	True				
ANR	6622963	AssignmentExpression	de -> crc = 0		6622911	0		=			
ANR	6622964	PtrMemberAccess	de -> crc		6622911	0					
ANR	6622965	Identifier	de		6622911	0					
ANR	6622966	Identifier	crc		6622911	1					
ANR	6622967	PrimaryExpression	0		6622911	1					
ANR	6622968	ExpressionStatement	de -> comp_size = 0	270:4:6904:6921	6622911	9	True				
ANR	6622969	AssignmentExpression	de -> comp_size = 0		6622911	0		=			
ANR	6622970	PtrMemberAccess	de -> comp_size		6622911	0					
ANR	6622971	Identifier	de		6622911	0					
ANR	6622972	Identifier	comp_size		6622911	1					
ANR	6622973	PrimaryExpression	0		6622911	1					
ANR	6622974	ExpressionStatement	de -> uncomp_size = 0	271:4:6927:6946	6622911	10	True				
ANR	6622975	AssignmentExpression	de -> uncomp_size = 0		6622911	0		=			
ANR	6622976	PtrMemberAccess	de -> uncomp_size		6622911	0					
ANR	6622977	Identifier	de		6622911	0					
ANR	6622978	Identifier	uncomp_size		6622911	1					
ANR	6622979	PrimaryExpression	0		6622911	1					
ANR	6622980	ExpressionStatement	de -> filename = NULL	272:4:6952:6971	6622911	11	True				
ANR	6622981	AssignmentExpression	de -> filename = NULL		6622911	0		=			
ANR	6622982	PtrMemberAccess	de -> filename		6622911	0					
ANR	6622983	Identifier	de		6622911	0					
ANR	6622984	Identifier	filename		6622911	1					
ANR	6622985	Identifier	NULL		6622911	1					
ANR	6622986	ExpressionStatement	de -> extra_fields = NULL	273:4:6977:7000	6622911	12	True				
ANR	6622987	AssignmentExpression	de -> extra_fields = NULL		6622911	0		=			
ANR	6622988	PtrMemberAccess	de -> extra_fields		6622911	0					
ANR	6622989	Identifier	de		6622911	0					
ANR	6622990	Identifier	extra_fields		6622911	1					
ANR	6622991	Identifier	NULL		6622911	1					
ANR	6622992	ExpressionStatement	de -> comment = NULL	274:4:7006:7024	6622911	13	True				
ANR	6622993	AssignmentExpression	de -> comment = NULL		6622911	0		=			
ANR	6622994	PtrMemberAccess	de -> comment		6622911	0					
ANR	6622995	Identifier	de		6622911	0					
ANR	6622996	Identifier	comment		6622911	1					
ANR	6622997	Identifier	NULL		6622911	1					
ANR	6622998	ExpressionStatement	de -> disk_number = 0	275:4:7030:7049	6622911	14	True				
ANR	6622999	AssignmentExpression	de -> disk_number = 0		6622911	0		=			
ANR	6623000	PtrMemberAccess	de -> disk_number		6622911	0					
ANR	6623001	Identifier	de		6622911	0					
ANR	6623002	Identifier	disk_number		6622911	1					
ANR	6623003	PrimaryExpression	0		6622911	1					
ANR	6623004	ExpressionStatement	de -> int_attrib = 0	276:4:7055:7073	6622911	15	True				
ANR	6623005	AssignmentExpression	de -> int_attrib = 0		6622911	0		=			
ANR	6623006	PtrMemberAccess	de -> int_attrib		6622911	0					
ANR	6623007	Identifier	de		6622911	0					
ANR	6623008	Identifier	int_attrib		6622911	1					
ANR	6623009	PrimaryExpression	0		6622911	1					
ANR	6623010	ExpressionStatement	de -> ext_attrib = 0	277:4:7079:7097	6622911	16	True				
ANR	6623011	AssignmentExpression	de -> ext_attrib = 0		6622911	0		=			
ANR	6623012	PtrMemberAccess	de -> ext_attrib		6622911	0					
ANR	6623013	Identifier	de		6622911	0					
ANR	6623014	Identifier	ext_attrib		6622911	1					
ANR	6623015	PrimaryExpression	0		6622911	1					
ANR	6623016	ExpressionStatement	de -> offset = 0	278:4:7103:7117	6622911	17	True				
ANR	6623017	AssignmentExpression	de -> offset = 0		6622911	0		=			
ANR	6623018	PtrMemberAccess	de -> offset		6622911	0					
ANR	6623019	Identifier	de		6622911	0					
ANR	6623020	Identifier	offset		6622911	1					
ANR	6623021	PrimaryExpression	0		6622911	1					
ANR	6623022	ReturnType	void		6622911	1					
ANR	6623023	Identifier	_zip_dirent_init		6622911	2					
ANR	6623024	ParameterList	struct zip_dirent * de		6622911	3					
ANR	6623025	Parameter	struct zip_dirent * de	258:17:6629:6649	6622911	0	True				
ANR	6623026	ParameterType	struct zip_dirent *		6622911	0					
ANR	6623027	Identifier	de		6622911	1					
ANR	6623028	CFGEntryNode	ENTRY		6622911		True				
ANR	6623029	CFGExitNode	EXIT		6622911		True				
ANR	6623030	Symbol	de -> extra_fields		6622911						
ANR	6623031	Symbol	de		6622911						
ANR	6623032	Symbol	de -> disk_number		6622911						
ANR	6623033	Symbol	de -> changed		6622911						
ANR	6623034	Symbol	NULL		6622911						
ANR	6623035	Symbol	* de		6622911						
ANR	6623036	Symbol	de -> local_extra_fields_read		6622911						
ANR	6623037	Symbol	de -> comp_method		6622911						
ANR	6623038	Symbol	de -> cloned		6622911						
ANR	6623039	Symbol	de -> uncomp_size		6622911						
ANR	6623040	Symbol	de -> comment		6622911						
ANR	6623041	Symbol	de -> int_attrib		6622911						
ANR	6623042	Symbol	de -> version_needed		6622911						
ANR	6623043	Symbol	de -> last_mod		6622911						
ANR	6623044	Symbol	de -> version_madeby		6622911						
ANR	6623045	Symbol	de -> comp_size		6622911						
ANR	6623046	Symbol	de -> ext_attrib		6622911						
ANR	6623047	Symbol	de -> crc		6622911						
ANR	6623048	Symbol	de -> bitflags		6622911						
ANR	6623049	Symbol	ZIP_CM_DEFAULT		6622911						
ANR	6623050	Symbol	de -> filename		6622911						
ANR	6623051	Symbol	de -> offset		6622911						
ANR	6623052	Function	_zip_dirent_needs_zip64	283:0:7125:7370							
ANR	6623053	FunctionDef	"_zip_dirent_needs_zip64 (const struct zip_dirent * de , zip_flags_t flags)"		6623052	0					
ANR	6623054	CompoundStatement		285:0:7201:7370	6623052	0					
ANR	6623055	IfStatement	if ( de -> uncomp_size >= ZIP_UINT32_MAX || de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX ) )		6623052	0					
ANR	6623056	Condition	de -> uncomp_size >= ZIP_UINT32_MAX || de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX )	286:8:7211:7341	6623052	0	True				
ANR	6623057	OrExpression	de -> uncomp_size >= ZIP_UINT32_MAX || de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX )		6623052	0		||			
ANR	6623058	RelationalExpression	de -> uncomp_size >= ZIP_UINT32_MAX		6623052	0		>=			
ANR	6623059	PtrMemberAccess	de -> uncomp_size		6623052	0					
ANR	6623060	Identifier	de		6623052	0					
ANR	6623061	Identifier	uncomp_size		6623052	1					
ANR	6623062	Identifier	ZIP_UINT32_MAX		6623052	1					
ANR	6623063	OrExpression	de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX )		6623052	1		||			
ANR	6623064	RelationalExpression	de -> comp_size >= ZIP_UINT32_MAX		6623052	0		>=			
ANR	6623065	PtrMemberAccess	de -> comp_size		6623052	0					
ANR	6623066	Identifier	de		6623052	0					
ANR	6623067	Identifier	comp_size		6623052	1					
ANR	6623068	Identifier	ZIP_UINT32_MAX		6623052	1					
ANR	6623069	AndExpression	( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX		6623052	1		&&			
ANR	6623070	BitAndExpression	flags & ZIP_FL_CENTRAL		6623052	0		&			
ANR	6623071	Identifier	flags		6623052	0					
ANR	6623072	Identifier	ZIP_FL_CENTRAL		6623052	1					
ANR	6623073	RelationalExpression	de -> offset >= ZIP_UINT32_MAX		6623052	1		>=			
ANR	6623074	PtrMemberAccess	de -> offset		6623052	0					
ANR	6623075	Identifier	de		6623052	0					
ANR	6623076	Identifier	offset		6623052	1					
ANR	6623077	Identifier	ZIP_UINT32_MAX		6623052	1					
ANR	6623078	ReturnStatement	return 1 ;	288:1:7345:7353	6623052	1	True				
ANR	6623079	PrimaryExpression	1		6623052	0					
ANR	6623080	ReturnStatement	return 0 ;	290:4:7360:7368	6623052	1	True				
ANR	6623081	PrimaryExpression	0		6623052	0					
ANR	6623082	ReturnType	int		6623052	1					
ANR	6623083	Identifier	_zip_dirent_needs_zip64		6623052	2					
ANR	6623084	ParameterList	"const struct zip_dirent * de , zip_flags_t flags"		6623052	3					
ANR	6623085	Parameter	const struct zip_dirent * de	284:24:7153:7179	6623052	0	True				
ANR	6623086	ParameterType	const struct zip_dirent *		6623052	0					
ANR	6623087	Identifier	de		6623052	1					
ANR	6623088	Parameter	zip_flags_t flags	284:53:7182:7198	6623052	1	True				
ANR	6623089	ParameterType	zip_flags_t		6623052	0					
ANR	6623090	Identifier	flags		6623052	1					
ANR	6623091	CFGEntryNode	ENTRY		6623052		True				
ANR	6623092	CFGExitNode	EXIT		6623052		True				
ANR	6623093	Symbol	de		6623052						
ANR	6623094	Symbol	de -> comp_size		6623052						
ANR	6623095	Symbol	* de		6623052						
ANR	6623096	Symbol	ZIP_FL_CENTRAL		6623052						
ANR	6623097	Symbol	ZIP_UINT32_MAX		6623052						
ANR	6623098	Symbol	flags		6623052						
ANR	6623099	Symbol	de -> uncomp_size		6623052						
ANR	6623100	Symbol	de -> offset		6623052						
ANR	6623101	Function	_zip_dirent_new	295:0:7376:7567							
ANR	6623102	FunctionDef	_zip_dirent_new ()		6623101	0					
ANR	6623103	CompoundStatement		297:0:7418:7567	6623101	0					
ANR	6623104	IdentifierDeclStatement	struct zip_dirent * de ;	298:4:7424:7445	6623101	0	True				
ANR	6623105	IdentifierDecl	* de		6623101	0					
ANR	6623106	IdentifierDeclType	struct zip_dirent *		6623101	0					
ANR	6623107	Identifier	de		6623101	1					
ANR	6623108	IfStatement	if ( ( de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) ) ) == NULL )		6623101	1					
ANR	6623109	Condition	( de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) ) ) == NULL	300:8:7456:7508	6623101	0	True				
ANR	6623110	EqualityExpression	( de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) ) ) == NULL		6623101	0		==			
ANR	6623111	AssignmentExpression	de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) )		6623101	0		=			
ANR	6623112	Identifier	de		6623101	0					
ANR	6623113	CastExpression	( struct zip_dirent * ) malloc ( sizeof ( * de ) )		6623101	1					
ANR	6623114	CastTarget	struct zip_dirent *		6623101	0					
ANR	6623115	CallExpression	malloc ( sizeof ( * de ) )		6623101	1					
ANR	6623116	Callee	malloc		6623101	0					
ANR	6623117	Identifier	malloc		6623101	0					
ANR	6623118	ArgumentList	sizeof ( * de )		6623101	1					
ANR	6623119	Argument	sizeof ( * de )		6623101	0					
ANR	6623120	SizeofExpression	sizeof ( * de )		6623101	0					
ANR	6623121	Sizeof	sizeof		6623101	0					
ANR	6623122	UnaryOperationExpression	* de		6623101	1					
ANR	6623123	UnaryOperator	*		6623101	0					
ANR	6623124	Identifier	de		6623101	1					
ANR	6623125	Identifier	NULL		6623101	1					
ANR	6623126	ReturnStatement	return NULL ;	301:1:7512:7523	6623101	1	True				
ANR	6623127	Identifier	NULL		6623101	0					
ANR	6623128	ExpressionStatement	_zip_dirent_init ( de )	303:4:7530:7550	6623101	2	True				
ANR	6623129	CallExpression	_zip_dirent_init ( de )		6623101	0					
ANR	6623130	Callee	_zip_dirent_init		6623101	0					
ANR	6623131	Identifier	_zip_dirent_init		6623101	0					
ANR	6623132	ArgumentList	de		6623101	1					
ANR	6623133	Argument	de		6623101	0					
ANR	6623134	Identifier	de		6623101	0					
ANR	6623135	ReturnStatement	return de ;	304:4:7556:7565	6623101	3	True				
ANR	6623136	Identifier	de		6623101	0					
ANR	6623137	ReturnType	struct zip_dirent *		6623101	1					
ANR	6623138	Identifier	_zip_dirent_new		6623101	2					
ANR	6623139	ParameterList			6623101	3					
ANR	6623140	CFGEntryNode	ENTRY		6623101		True				
ANR	6623141	CFGExitNode	EXIT		6623101		True				
ANR	6623142	Symbol	de		6623101						
ANR	6623143	Symbol	malloc		6623101						
ANR	6623144	Symbol	NULL		6623101						
ANR	6623145	Symbol	* de		6623101						
ANR	6623146	Function	_zip_dirent_read	327:0:8162:12853							
ANR	6623147	FunctionDef	"_zip_dirent_read (struct zip_dirent * zde , FILE * fp , const unsigned char * * bufp , zip_uint64_t * leftp , int local , struct zip_error * error)"		6623146	0					
ANR	6623148	CompoundStatement		331:0:8308:12853	6623146	0					
ANR	6623149	IdentifierDeclStatement	unsigned char buf [ CDENTRYSIZE ] ;	332:4:8314:8344	6623146	0	True				
ANR	6623150	IdentifierDecl	buf [ CDENTRYSIZE ]		6623146	0					
ANR	6623151	IdentifierDeclType	unsigned char [ CDENTRYSIZE ]		6623146	0					
ANR	6623152	Identifier	buf		6623146	1					
ANR	6623153	Identifier	CDENTRYSIZE		6623146	2					
ANR	6623154	IdentifierDeclStatement	const unsigned char * cur ;	333:4:8350:8374	6623146	1	True				
ANR	6623155	IdentifierDecl	* cur		6623146	0					
ANR	6623156	IdentifierDeclType	const unsigned char *		6623146	0					
ANR	6623157	Identifier	cur		6623146	1					
ANR	6623158	IdentifierDeclStatement	"zip_uint16_t dostime , dosdate ;"	334:4:8380:8409	6623146	2	True				
ANR	6623159	IdentifierDecl	dostime		6623146	0					
ANR	6623160	IdentifierDeclType	zip_uint16_t		6623146	0					
ANR	6623161	Identifier	dostime		6623146	1					
ANR	6623162	IdentifierDecl	dosdate		6623146	1					
ANR	6623163	IdentifierDeclType	zip_uint16_t		6623146	0					
ANR	6623164	Identifier	dosdate		6623146	1					
ANR	6623165	IdentifierDeclStatement	zip_uint32_t size ;	335:4:8415:8432	6623146	3	True				
ANR	6623166	IdentifierDecl	size		6623146	0					
ANR	6623167	IdentifierDeclType	zip_uint32_t		6623146	0					
ANR	6623168	Identifier	size		6623146	1					
ANR	6623169	IdentifierDeclStatement	"zip_uint16_t filename_len , comment_len , ef_len ;"	336:4:8438:8484	6623146	4	True				
ANR	6623170	IdentifierDecl	filename_len		6623146	0					
ANR	6623171	IdentifierDeclType	zip_uint16_t		6623146	0					
ANR	6623172	Identifier	filename_len		6623146	1					
ANR	6623173	IdentifierDecl	comment_len		6623146	1					
ANR	6623174	IdentifierDeclType	zip_uint16_t		6623146	0					
ANR	6623175	Identifier	comment_len		6623146	1					
ANR	6623176	IdentifierDecl	ef_len		6623146	2					
ANR	6623177	IdentifierDeclType	zip_uint16_t		6623146	0					
ANR	6623178	Identifier	ef_len		6623146	1					
ANR	6623179	IfStatement	if ( local )		6623146	5					
ANR	6623180	Condition	local	338:8:8495:8499	6623146	0	True				
ANR	6623181	Identifier	local		6623146	0					
ANR	6623182	ExpressionStatement	size = LENTRYSIZE	339:1:8503:8520	6623146	1	True				
ANR	6623183	AssignmentExpression	size = LENTRYSIZE		6623146	0		=			
ANR	6623184	Identifier	size		6623146	0					
ANR	6623185	Identifier	LENTRYSIZE		6623146	1					
ANR	6623186	ElseStatement	else		6623146	0					
ANR	6623187	ExpressionStatement	size = CDENTRYSIZE	341:1:8532:8550	6623146	0	True				
ANR	6623188	AssignmentExpression	size = CDENTRYSIZE		6623146	0		=			
ANR	6623189	Identifier	size		6623146	0					
ANR	6623190	Identifier	CDENTRYSIZE		6623146	1					
ANR	6623191	IfStatement	if ( leftp && ( * leftp < size ) )		6623146	6					
ANR	6623192	Condition	leftp && ( * leftp < size )	343:8:8561:8584	6623146	0	True				
ANR	6623193	AndExpression	leftp && ( * leftp < size )		6623146	0		&&			
ANR	6623194	Identifier	leftp		6623146	0					
ANR	6623195	RelationalExpression	* leftp < size		6623146	1		<			
ANR	6623196	UnaryOperationExpression	* leftp		6623146	0					
ANR	6623197	UnaryOperator	*		6623146	0					
ANR	6623198	Identifier	leftp		6623146	1					
ANR	6623199	Identifier	size		6623146	1					
ANR	6623200	CompoundStatement		13:34:278:278	6623146	1					
ANR	6623201	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"	344:1:8590:8628	6623146	0	True				
ANR	6623202	CallExpression	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"		6623146	0					
ANR	6623203	Callee	_zip_error_set		6623146	0					
ANR	6623204	Identifier	_zip_error_set		6623146	0					
ANR	6623205	ArgumentList	error		6623146	1					
ANR	6623206	Argument	error		6623146	0					
ANR	6623207	Identifier	error		6623146	0					
ANR	6623208	Argument	ZIP_ER_NOZIP		6623146	1					
ANR	6623209	Identifier	ZIP_ER_NOZIP		6623146	0					
ANR	6623210	Argument	0		6623146	2					
ANR	6623211	PrimaryExpression	0		6623146	0					
ANR	6623212	ReturnStatement	return - 1 ;	345:1:8631:8640	6623146	1	True				
ANR	6623213	UnaryOperationExpression	- 1		6623146	0					
ANR	6623214	UnaryOperator	-		6623146	0					
ANR	6623215	PrimaryExpression	1		6623146	1					
ANR	6623216	IfStatement	if ( bufp )		6623146	7					
ANR	6623217	Condition	bufp	348:8:8657:8660	6623146	0	True				
ANR	6623218	Identifier	bufp		6623146	0					
ANR	6623219	CompoundStatement		18:14:354:354	6623146	1					
ANR	6623220	ExpressionStatement	cur = * bufp	350:1:8694:8705	6623146	0	True				
ANR	6623221	AssignmentExpression	cur = * bufp		6623146	0		=			
ANR	6623222	Identifier	cur		6623146	0					
ANR	6623223	UnaryOperationExpression	* bufp		6623146	1					
ANR	6623224	UnaryOperator	*		6623146	0					
ANR	6623225	Identifier	bufp		6623146	1					
ANR	6623226	ElseStatement	else		6623146	0					
ANR	6623227	CompoundStatement		22:9:413:413	6623146	0					
ANR	6623228	IfStatement	"if ( ( fread ( buf , 1 , size , fp ) < size ) )"		6623146	0					
ANR	6623229	Condition	"fread ( buf , 1 , size , fp ) < size"	354:5:8757:8786	6623146	0	True				
ANR	6623230	RelationalExpression	"fread ( buf , 1 , size , fp ) < size"		6623146	0		<			
ANR	6623231	CallExpression	"fread ( buf , 1 , size , fp )"		6623146	0					
ANR	6623232	Callee	fread		6623146	0					
ANR	6623233	Identifier	fread		6623146	0					
ANR	6623234	ArgumentList	buf		6623146	1					
ANR	6623235	Argument	buf		6623146	0					
ANR	6623236	Identifier	buf		6623146	0					
ANR	6623237	Argument	1		6623146	1					
ANR	6623238	PrimaryExpression	1		6623146	0					
ANR	6623239	Argument	size		6623146	2					
ANR	6623240	Identifier	size		6623146	0					
ANR	6623241	Argument	fp		6623146	3					
ANR	6623242	Identifier	fp		6623146	0					
ANR	6623243	Identifier	size		6623146	1					
ANR	6623244	CompoundStatement		24:37:480:480	6623146	1					
ANR	6623245	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	355:5:8796:8837	6623146	0	True				
ANR	6623246	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6623146	0					
ANR	6623247	Callee	_zip_error_set		6623146	0					
ANR	6623248	Identifier	_zip_error_set		6623146	0					
ANR	6623249	ArgumentList	error		6623146	1					
ANR	6623250	Argument	error		6623146	0					
ANR	6623251	Identifier	error		6623146	0					
ANR	6623252	Argument	ZIP_ER_READ		6623146	1					
ANR	6623253	Identifier	ZIP_ER_READ		6623146	0					
ANR	6623254	Argument	errno		6623146	2					
ANR	6623255	Identifier	errno		6623146	0					
ANR	6623256	ReturnStatement	return - 1 ;	356:5:8844:8853	6623146	1	True				
ANR	6623257	UnaryOperationExpression	- 1		6623146	0					
ANR	6623258	UnaryOperator	-		6623146	0					
ANR	6623259	PrimaryExpression	1		6623146	1					
ANR	6623260	ExpressionStatement	cur = buf	358:1:8859:8868	6623146	1	True				
ANR	6623261	AssignmentExpression	cur = buf		6623146	0		=			
ANR	6623262	Identifier	cur		6623146	0					
ANR	6623263	Identifier	buf		6623146	1					
ANR	6623264	IfStatement	"if ( memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 ) != 0 )"		6623146	8					
ANR	6623265	Condition	"memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 ) != 0"	361:8:8885:8942	6623146	0	True				
ANR	6623266	EqualityExpression	"memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 ) != 0"		6623146	0		!=			
ANR	6623267	CallExpression	"memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 )"		6623146	0					
ANR	6623268	Callee	memcmp		6623146	0					
ANR	6623269	Identifier	memcmp		6623146	0					
ANR	6623270	ArgumentList	cur		6623146	1					
ANR	6623271	Argument	cur		6623146	0					
ANR	6623272	Identifier	cur		6623146	0					
ANR	6623273	Argument	local ? LOCAL_MAGIC : CENTRAL_MAGIC		6623146	1					
ANR	6623274	ConditionalExpression	local ? LOCAL_MAGIC : CENTRAL_MAGIC		6623146	0					
ANR	6623275	Condition	local		6623146	0					
ANR	6623276	Identifier	local		6623146	0					
ANR	6623277	Identifier	LOCAL_MAGIC		6623146	1					
ANR	6623278	Identifier	CENTRAL_MAGIC		6623146	2					
ANR	6623279	Argument	4		6623146	2					
ANR	6623280	PrimaryExpression	4		6623146	0					
ANR	6623281	PrimaryExpression	0		6623146	1					
ANR	6623282	CompoundStatement		31:68:636:636	6623146	1					
ANR	6623283	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"	362:1:8948:8986	6623146	0	True				
ANR	6623284	CallExpression	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"		6623146	0					
ANR	6623285	Callee	_zip_error_set		6623146	0					
ANR	6623286	Identifier	_zip_error_set		6623146	0					
ANR	6623287	ArgumentList	error		6623146	1					
ANR	6623288	Argument	error		6623146	0					
ANR	6623289	Identifier	error		6623146	0					
ANR	6623290	Argument	ZIP_ER_NOZIP		6623146	1					
ANR	6623291	Identifier	ZIP_ER_NOZIP		6623146	0					
ANR	6623292	Argument	0		6623146	2					
ANR	6623293	PrimaryExpression	0		6623146	0					
ANR	6623294	ReturnStatement	return - 1 ;	363:1:8989:8998	6623146	1	True				
ANR	6623295	UnaryOperationExpression	- 1		6623146	0					
ANR	6623296	UnaryOperator	-		6623146	0					
ANR	6623297	PrimaryExpression	1		6623146	1					
ANR	6623298	ExpressionStatement	cur += 4	365:4:9010:9018	6623146	9	True				
ANR	6623299	AssignmentExpression	cur += 4		6623146	0		+=			
ANR	6623300	Identifier	cur		6623146	0					
ANR	6623301	PrimaryExpression	4		6623146	1					
ANR	6623302	ExpressionStatement	_zip_dirent_init ( zde )	370:4:9074:9095	6623146	10	True				
ANR	6623303	CallExpression	_zip_dirent_init ( zde )		6623146	0					
ANR	6623304	Callee	_zip_dirent_init		6623146	0					
ANR	6623305	Identifier	_zip_dirent_init		6623146	0					
ANR	6623306	ArgumentList	zde		6623146	1					
ANR	6623307	Argument	zde		6623146	0					
ANR	6623308	Identifier	zde		6623146	0					
ANR	6623309	IfStatement	if ( ! local )		6623146	11					
ANR	6623310	Condition	! local	371:8:9105:9110	6623146	0	True				
ANR	6623311	UnaryOperationExpression	! local		6623146	0					
ANR	6623312	UnaryOperator	!		6623146	0					
ANR	6623313	Identifier	local		6623146	1					
ANR	6623314	ExpressionStatement	zde -> version_madeby = _zip_read2 ( & cur )	372:1:9114:9152	6623146	1	True				
ANR	6623315	AssignmentExpression	zde -> version_madeby = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623316	PtrMemberAccess	zde -> version_madeby		6623146	0					
ANR	6623317	Identifier	zde		6623146	0					
ANR	6623318	Identifier	version_madeby		6623146	1					
ANR	6623319	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623320	Callee	_zip_read2		6623146	0					
ANR	6623321	Identifier	_zip_read2		6623146	0					
ANR	6623322	ArgumentList	& cur		6623146	1					
ANR	6623323	Argument	& cur		6623146	0					
ANR	6623324	UnaryOperationExpression	& cur		6623146	0					
ANR	6623325	UnaryOperator	&		6623146	0					
ANR	6623326	Identifier	cur		6623146	1					
ANR	6623327	ElseStatement	else		6623146	0					
ANR	6623328	ExpressionStatement	zde -> version_madeby = 0	374:1:9164:9187	6623146	0	True				
ANR	6623329	AssignmentExpression	zde -> version_madeby = 0		6623146	0		=			
ANR	6623330	PtrMemberAccess	zde -> version_madeby		6623146	0					
ANR	6623331	Identifier	zde		6623146	0					
ANR	6623332	Identifier	version_madeby		6623146	1					
ANR	6623333	PrimaryExpression	0		6623146	1					
ANR	6623334	ExpressionStatement	zde -> version_needed = _zip_read2 ( & cur )	375:4:9193:9231	6623146	12	True				
ANR	6623335	AssignmentExpression	zde -> version_needed = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623336	PtrMemberAccess	zde -> version_needed		6623146	0					
ANR	6623337	Identifier	zde		6623146	0					
ANR	6623338	Identifier	version_needed		6623146	1					
ANR	6623339	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623340	Callee	_zip_read2		6623146	0					
ANR	6623341	Identifier	_zip_read2		6623146	0					
ANR	6623342	ArgumentList	& cur		6623146	1					
ANR	6623343	Argument	& cur		6623146	0					
ANR	6623344	UnaryOperationExpression	& cur		6623146	0					
ANR	6623345	UnaryOperator	&		6623146	0					
ANR	6623346	Identifier	cur		6623146	1					
ANR	6623347	ExpressionStatement	zde -> bitflags = _zip_read2 ( & cur )	376:4:9237:9269	6623146	13	True				
ANR	6623348	AssignmentExpression	zde -> bitflags = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623349	PtrMemberAccess	zde -> bitflags		6623146	0					
ANR	6623350	Identifier	zde		6623146	0					
ANR	6623351	Identifier	bitflags		6623146	1					
ANR	6623352	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623353	Callee	_zip_read2		6623146	0					
ANR	6623354	Identifier	_zip_read2		6623146	0					
ANR	6623355	ArgumentList	& cur		6623146	1					
ANR	6623356	Argument	& cur		6623146	0					
ANR	6623357	UnaryOperationExpression	& cur		6623146	0					
ANR	6623358	UnaryOperator	&		6623146	0					
ANR	6623359	Identifier	cur		6623146	1					
ANR	6623360	ExpressionStatement	zde -> comp_method = _zip_read2 ( & cur )	377:4:9275:9310	6623146	14	True				
ANR	6623361	AssignmentExpression	zde -> comp_method = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623362	PtrMemberAccess	zde -> comp_method		6623146	0					
ANR	6623363	Identifier	zde		6623146	0					
ANR	6623364	Identifier	comp_method		6623146	1					
ANR	6623365	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623366	Callee	_zip_read2		6623146	0					
ANR	6623367	Identifier	_zip_read2		6623146	0					
ANR	6623368	ArgumentList	& cur		6623146	1					
ANR	6623369	Argument	& cur		6623146	0					
ANR	6623370	UnaryOperationExpression	& cur		6623146	0					
ANR	6623371	UnaryOperator	&		6623146	0					
ANR	6623372	Identifier	cur		6623146	1					
ANR	6623373	ExpressionStatement	dostime = _zip_read2 ( & cur )	380:4:9349:9375	6623146	15	True				
ANR	6623374	AssignmentExpression	dostime = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623375	Identifier	dostime		6623146	0					
ANR	6623376	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623377	Callee	_zip_read2		6623146	0					
ANR	6623378	Identifier	_zip_read2		6623146	0					
ANR	6623379	ArgumentList	& cur		6623146	1					
ANR	6623380	Argument	& cur		6623146	0					
ANR	6623381	UnaryOperationExpression	& cur		6623146	0					
ANR	6623382	UnaryOperator	&		6623146	0					
ANR	6623383	Identifier	cur		6623146	1					
ANR	6623384	ExpressionStatement	dosdate = _zip_read2 ( & cur )	381:4:9381:9407	6623146	16	True				
ANR	6623385	AssignmentExpression	dosdate = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623386	Identifier	dosdate		6623146	0					
ANR	6623387	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623388	Callee	_zip_read2		6623146	0					
ANR	6623389	Identifier	_zip_read2		6623146	0					
ANR	6623390	ArgumentList	& cur		6623146	1					
ANR	6623391	Argument	& cur		6623146	0					
ANR	6623392	UnaryOperationExpression	& cur		6623146	0					
ANR	6623393	UnaryOperator	&		6623146	0					
ANR	6623394	Identifier	cur		6623146	1					
ANR	6623395	ExpressionStatement	"zde -> last_mod = _zip_d2u_time ( dostime , dosdate )"	382:4:9413:9460	6623146	17	True				
ANR	6623396	AssignmentExpression	"zde -> last_mod = _zip_d2u_time ( dostime , dosdate )"		6623146	0		=			
ANR	6623397	PtrMemberAccess	zde -> last_mod		6623146	0					
ANR	6623398	Identifier	zde		6623146	0					
ANR	6623399	Identifier	last_mod		6623146	1					
ANR	6623400	CallExpression	"_zip_d2u_time ( dostime , dosdate )"		6623146	1					
ANR	6623401	Callee	_zip_d2u_time		6623146	0					
ANR	6623402	Identifier	_zip_d2u_time		6623146	0					
ANR	6623403	ArgumentList	dostime		6623146	1					
ANR	6623404	Argument	dostime		6623146	0					
ANR	6623405	Identifier	dostime		6623146	0					
ANR	6623406	Argument	dosdate		6623146	1					
ANR	6623407	Identifier	dosdate		6623146	0					
ANR	6623408	ExpressionStatement	zde -> crc = _zip_read4 ( & cur )	384:4:9471:9498	6623146	18	True				
ANR	6623409	AssignmentExpression	zde -> crc = _zip_read4 ( & cur )		6623146	0		=			
ANR	6623410	PtrMemberAccess	zde -> crc		6623146	0					
ANR	6623411	Identifier	zde		6623146	0					
ANR	6623412	Identifier	crc		6623146	1					
ANR	6623413	CallExpression	_zip_read4 ( & cur )		6623146	1					
ANR	6623414	Callee	_zip_read4		6623146	0					
ANR	6623415	Identifier	_zip_read4		6623146	0					
ANR	6623416	ArgumentList	& cur		6623146	1					
ANR	6623417	Argument	& cur		6623146	0					
ANR	6623418	UnaryOperationExpression	& cur		6623146	0					
ANR	6623419	UnaryOperator	&		6623146	0					
ANR	6623420	Identifier	cur		6623146	1					
ANR	6623421	ExpressionStatement	zde -> comp_size = _zip_read4 ( & cur )	385:4:9504:9537	6623146	19	True				
ANR	6623422	AssignmentExpression	zde -> comp_size = _zip_read4 ( & cur )		6623146	0		=			
ANR	6623423	PtrMemberAccess	zde -> comp_size		6623146	0					
ANR	6623424	Identifier	zde		6623146	0					
ANR	6623425	Identifier	comp_size		6623146	1					
ANR	6623426	CallExpression	_zip_read4 ( & cur )		6623146	1					
ANR	6623427	Callee	_zip_read4		6623146	0					
ANR	6623428	Identifier	_zip_read4		6623146	0					
ANR	6623429	ArgumentList	& cur		6623146	1					
ANR	6623430	Argument	& cur		6623146	0					
ANR	6623431	UnaryOperationExpression	& cur		6623146	0					
ANR	6623432	UnaryOperator	&		6623146	0					
ANR	6623433	Identifier	cur		6623146	1					
ANR	6623434	ExpressionStatement	zde -> uncomp_size = _zip_read4 ( & cur )	386:4:9543:9578	6623146	20	True				
ANR	6623435	AssignmentExpression	zde -> uncomp_size = _zip_read4 ( & cur )		6623146	0		=			
ANR	6623436	PtrMemberAccess	zde -> uncomp_size		6623146	0					
ANR	6623437	Identifier	zde		6623146	0					
ANR	6623438	Identifier	uncomp_size		6623146	1					
ANR	6623439	CallExpression	_zip_read4 ( & cur )		6623146	1					
ANR	6623440	Callee	_zip_read4		6623146	0					
ANR	6623441	Identifier	_zip_read4		6623146	0					
ANR	6623442	ArgumentList	& cur		6623146	1					
ANR	6623443	Argument	& cur		6623146	0					
ANR	6623444	UnaryOperationExpression	& cur		6623146	0					
ANR	6623445	UnaryOperator	&		6623146	0					
ANR	6623446	Identifier	cur		6623146	1					
ANR	6623447	ExpressionStatement	filename_len = _zip_read2 ( & cur )	388:4:9589:9620	6623146	21	True				
ANR	6623448	AssignmentExpression	filename_len = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623449	Identifier	filename_len		6623146	0					
ANR	6623450	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623451	Callee	_zip_read2		6623146	0					
ANR	6623452	Identifier	_zip_read2		6623146	0					
ANR	6623453	ArgumentList	& cur		6623146	1					
ANR	6623454	Argument	& cur		6623146	0					
ANR	6623455	UnaryOperationExpression	& cur		6623146	0					
ANR	6623456	UnaryOperator	&		6623146	0					
ANR	6623457	Identifier	cur		6623146	1					
ANR	6623458	ExpressionStatement	ef_len = _zip_read2 ( & cur )	389:4:9626:9651	6623146	22	True				
ANR	6623459	AssignmentExpression	ef_len = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623460	Identifier	ef_len		6623146	0					
ANR	6623461	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623462	Callee	_zip_read2		6623146	0					
ANR	6623463	Identifier	_zip_read2		6623146	0					
ANR	6623464	ArgumentList	& cur		6623146	1					
ANR	6623465	Argument	& cur		6623146	0					
ANR	6623466	UnaryOperationExpression	& cur		6623146	0					
ANR	6623467	UnaryOperator	&		6623146	0					
ANR	6623468	Identifier	cur		6623146	1					
ANR	6623469	IfStatement	if ( local )		6623146	23					
ANR	6623470	Condition	local	391:8:9666:9670	6623146	0	True				
ANR	6623471	Identifier	local		6623146	0					
ANR	6623472	CompoundStatement		61:15:1364:1364	6623146	1					
ANR	6623473	ExpressionStatement	comment_len = 0	392:1:9676:9691	6623146	0	True				
ANR	6623474	AssignmentExpression	comment_len = 0		6623146	0		=			
ANR	6623475	Identifier	comment_len		6623146	0					
ANR	6623476	PrimaryExpression	0		6623146	1					
ANR	6623477	ExpressionStatement	zde -> disk_number = 0	393:1:9694:9714	6623146	1	True				
ANR	6623478	AssignmentExpression	zde -> disk_number = 0		6623146	0		=			
ANR	6623479	PtrMemberAccess	zde -> disk_number		6623146	0					
ANR	6623480	Identifier	zde		6623146	0					
ANR	6623481	Identifier	disk_number		6623146	1					
ANR	6623482	PrimaryExpression	0		6623146	1					
ANR	6623483	ExpressionStatement	zde -> int_attrib = 0	394:1:9717:9736	6623146	2	True				
ANR	6623484	AssignmentExpression	zde -> int_attrib = 0		6623146	0		=			
ANR	6623485	PtrMemberAccess	zde -> int_attrib		6623146	0					
ANR	6623486	Identifier	zde		6623146	0					
ANR	6623487	Identifier	int_attrib		6623146	1					
ANR	6623488	PrimaryExpression	0		6623146	1					
ANR	6623489	ExpressionStatement	zde -> ext_attrib = 0	395:1:9739:9758	6623146	3	True				
ANR	6623490	AssignmentExpression	zde -> ext_attrib = 0		6623146	0		=			
ANR	6623491	PtrMemberAccess	zde -> ext_attrib		6623146	0					
ANR	6623492	Identifier	zde		6623146	0					
ANR	6623493	Identifier	ext_attrib		6623146	1					
ANR	6623494	PrimaryExpression	0		6623146	1					
ANR	6623495	ExpressionStatement	zde -> offset = 0	396:1:9761:9776	6623146	4	True				
ANR	6623496	AssignmentExpression	zde -> offset = 0		6623146	0		=			
ANR	6623497	PtrMemberAccess	zde -> offset		6623146	0					
ANR	6623498	Identifier	zde		6623146	0					
ANR	6623499	Identifier	offset		6623146	1					
ANR	6623500	PrimaryExpression	0		6623146	1					
ANR	6623501	ElseStatement	else		6623146	0					
ANR	6623502	CompoundStatement		67:11:1480:1480	6623146	0					
ANR	6623503	ExpressionStatement	comment_len = _zip_read2 ( & cur )	398:1:9792:9822	6623146	0	True				
ANR	6623504	AssignmentExpression	comment_len = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623505	Identifier	comment_len		6623146	0					
ANR	6623506	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623507	Callee	_zip_read2		6623146	0					
ANR	6623508	Identifier	_zip_read2		6623146	0					
ANR	6623509	ArgumentList	& cur		6623146	1					
ANR	6623510	Argument	& cur		6623146	0					
ANR	6623511	UnaryOperationExpression	& cur		6623146	0					
ANR	6623512	UnaryOperator	&		6623146	0					
ANR	6623513	Identifier	cur		6623146	1					
ANR	6623514	ExpressionStatement	zde -> disk_number = _zip_read2 ( & cur )	399:1:9825:9860	6623146	1	True				
ANR	6623515	AssignmentExpression	zde -> disk_number = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623516	PtrMemberAccess	zde -> disk_number		6623146	0					
ANR	6623517	Identifier	zde		6623146	0					
ANR	6623518	Identifier	disk_number		6623146	1					
ANR	6623519	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623520	Callee	_zip_read2		6623146	0					
ANR	6623521	Identifier	_zip_read2		6623146	0					
ANR	6623522	ArgumentList	& cur		6623146	1					
ANR	6623523	Argument	& cur		6623146	0					
ANR	6623524	UnaryOperationExpression	& cur		6623146	0					
ANR	6623525	UnaryOperator	&		6623146	0					
ANR	6623526	Identifier	cur		6623146	1					
ANR	6623527	ExpressionStatement	zde -> int_attrib = _zip_read2 ( & cur )	400:1:9863:9897	6623146	2	True				
ANR	6623528	AssignmentExpression	zde -> int_attrib = _zip_read2 ( & cur )		6623146	0		=			
ANR	6623529	PtrMemberAccess	zde -> int_attrib		6623146	0					
ANR	6623530	Identifier	zde		6623146	0					
ANR	6623531	Identifier	int_attrib		6623146	1					
ANR	6623532	CallExpression	_zip_read2 ( & cur )		6623146	1					
ANR	6623533	Callee	_zip_read2		6623146	0					
ANR	6623534	Identifier	_zip_read2		6623146	0					
ANR	6623535	ArgumentList	& cur		6623146	1					
ANR	6623536	Argument	& cur		6623146	0					
ANR	6623537	UnaryOperationExpression	& cur		6623146	0					
ANR	6623538	UnaryOperator	&		6623146	0					
ANR	6623539	Identifier	cur		6623146	1					
ANR	6623540	ExpressionStatement	zde -> ext_attrib = _zip_read4 ( & cur )	401:1:9900:9934	6623146	3	True				
ANR	6623541	AssignmentExpression	zde -> ext_attrib = _zip_read4 ( & cur )		6623146	0		=			
ANR	6623542	PtrMemberAccess	zde -> ext_attrib		6623146	0					
ANR	6623543	Identifier	zde		6623146	0					
ANR	6623544	Identifier	ext_attrib		6623146	1					
ANR	6623545	CallExpression	_zip_read4 ( & cur )		6623146	1					
ANR	6623546	Callee	_zip_read4		6623146	0					
ANR	6623547	Identifier	_zip_read4		6623146	0					
ANR	6623548	ArgumentList	& cur		6623146	1					
ANR	6623549	Argument	& cur		6623146	0					
ANR	6623550	UnaryOperationExpression	& cur		6623146	0					
ANR	6623551	UnaryOperator	&		6623146	0					
ANR	6623552	Identifier	cur		6623146	1					
ANR	6623553	ExpressionStatement	zde -> offset = _zip_read4 ( & cur )	402:1:9937:9967	6623146	4	True				
ANR	6623554	AssignmentExpression	zde -> offset = _zip_read4 ( & cur )		6623146	0		=			
ANR	6623555	PtrMemberAccess	zde -> offset		6623146	0					
ANR	6623556	Identifier	zde		6623146	0					
ANR	6623557	Identifier	offset		6623146	1					
ANR	6623558	CallExpression	_zip_read4 ( & cur )		6623146	1					
ANR	6623559	Callee	_zip_read4		6623146	0					
ANR	6623560	Identifier	_zip_read4		6623146	0					
ANR	6623561	ArgumentList	& cur		6623146	1					
ANR	6623562	Argument	& cur		6623146	0					
ANR	6623563	UnaryOperationExpression	& cur		6623146	0					
ANR	6623564	UnaryOperator	&		6623146	0					
ANR	6623565	Identifier	cur		6623146	1					
ANR	6623566	ExpressionStatement	zde -> filename = NULL	405:4:9980:10000	6623146	24	True				
ANR	6623567	AssignmentExpression	zde -> filename = NULL		6623146	0		=			
ANR	6623568	PtrMemberAccess	zde -> filename		6623146	0					
ANR	6623569	Identifier	zde		6623146	0					
ANR	6623570	Identifier	filename		6623146	1					
ANR	6623571	Identifier	NULL		6623146	1					
ANR	6623572	ExpressionStatement	zde -> extra_fields = NULL	406:4:10006:10030	6623146	25	True				
ANR	6623573	AssignmentExpression	zde -> extra_fields = NULL		6623146	0		=			
ANR	6623574	PtrMemberAccess	zde -> extra_fields		6623146	0					
ANR	6623575	Identifier	zde		6623146	0					
ANR	6623576	Identifier	extra_fields		6623146	1					
ANR	6623577	Identifier	NULL		6623146	1					
ANR	6623578	ExpressionStatement	zde -> comment = NULL	407:4:10036:10055	6623146	26	True				
ANR	6623579	AssignmentExpression	zde -> comment = NULL		6623146	0		=			
ANR	6623580	PtrMemberAccess	zde -> comment		6623146	0					
ANR	6623581	Identifier	zde		6623146	0					
ANR	6623582	Identifier	comment		6623146	1					
ANR	6623583	Identifier	NULL		6623146	1					
ANR	6623584	ExpressionStatement	size += filename_len + ef_len + comment_len	409:4:10062:10101	6623146	27	True				
ANR	6623585	AssignmentExpression	size += filename_len + ef_len + comment_len		6623146	0		+=			
ANR	6623586	Identifier	size		6623146	0					
ANR	6623587	AdditiveExpression	filename_len + ef_len + comment_len		6623146	1		+			
ANR	6623588	Identifier	filename_len		6623146	0					
ANR	6623589	AdditiveExpression	ef_len + comment_len		6623146	1		+			
ANR	6623590	Identifier	ef_len		6623146	0					
ANR	6623591	Identifier	comment_len		6623146	1					
ANR	6623592	IfStatement	if ( leftp && ( * leftp < size ) )		6623146	28					
ANR	6623593	Condition	leftp && ( * leftp < size )	411:8:10112:10135	6623146	0	True				
ANR	6623594	AndExpression	leftp && ( * leftp < size )		6623146	0		&&			
ANR	6623595	Identifier	leftp		6623146	0					
ANR	6623596	RelationalExpression	* leftp < size		6623146	1		<			
ANR	6623597	UnaryOperationExpression	* leftp		6623146	0					
ANR	6623598	UnaryOperator	*		6623146	0					
ANR	6623599	Identifier	leftp		6623146	1					
ANR	6623600	Identifier	size		6623146	1					
ANR	6623601	CompoundStatement		81:34:1829:1829	6623146	1					
ANR	6623602	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	412:1:10141:10180	6623146	0	True				
ANR	6623603	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6623146	0					
ANR	6623604	Callee	_zip_error_set		6623146	0					
ANR	6623605	Identifier	_zip_error_set		6623146	0					
ANR	6623606	ArgumentList	error		6623146	1					
ANR	6623607	Argument	error		6623146	0					
ANR	6623608	Identifier	error		6623146	0					
ANR	6623609	Argument	ZIP_ER_INCONS		6623146	1					
ANR	6623610	Identifier	ZIP_ER_INCONS		6623146	0					
ANR	6623611	Argument	0		6623146	2					
ANR	6623612	PrimaryExpression	0		6623146	0					
ANR	6623613	ReturnStatement	return - 1 ;	413:1:10183:10192	6623146	1	True				
ANR	6623614	UnaryOperationExpression	- 1		6623146	0					
ANR	6623615	UnaryOperator	-		6623146	0					
ANR	6623616	PrimaryExpression	1		6623146	1					
ANR	6623617	IfStatement	if ( filename_len )		6623146	29					
ANR	6623618	Condition	filename_len	416:8:10209:10220	6623146	0	True				
ANR	6623619	Identifier	filename_len		6623146	0					
ANR	6623620	CompoundStatement		86:22:1914:1914	6623146	1					
ANR	6623621	ExpressionStatement	"zde -> filename = _zip_read_string ( bufp ? & cur : NULL , fp , filename_len , 1 , error )"	417:1:10226:10306	6623146	0	True				
ANR	6623622	AssignmentExpression	"zde -> filename = _zip_read_string ( bufp ? & cur : NULL , fp , filename_len , 1 , error )"		6623146	0		=			
ANR	6623623	PtrMemberAccess	zde -> filename		6623146	0					
ANR	6623624	Identifier	zde		6623146	0					
ANR	6623625	Identifier	filename		6623146	1					
ANR	6623626	CallExpression	"_zip_read_string ( bufp ? & cur : NULL , fp , filename_len , 1 , error )"		6623146	1					
ANR	6623627	Callee	_zip_read_string		6623146	0					
ANR	6623628	Identifier	_zip_read_string		6623146	0					
ANR	6623629	ArgumentList	bufp ? & cur : NULL		6623146	1					
ANR	6623630	Argument	bufp ? & cur : NULL		6623146	0					
ANR	6623631	ConditionalExpression	bufp ? & cur : NULL		6623146	0					
ANR	6623632	Condition	bufp		6623146	0					
ANR	6623633	Identifier	bufp		6623146	0					
ANR	6623634	UnaryOperationExpression	& cur		6623146	1					
ANR	6623635	UnaryOperator	&		6623146	0					
ANR	6623636	Identifier	cur		6623146	1					
ANR	6623637	Identifier	NULL		6623146	2					
ANR	6623638	Argument	fp		6623146	1					
ANR	6623639	Identifier	fp		6623146	0					
ANR	6623640	Argument	filename_len		6623146	2					
ANR	6623641	Identifier	filename_len		6623146	0					
ANR	6623642	Argument	1		6623146	3					
ANR	6623643	PrimaryExpression	1		6623146	0					
ANR	6623644	Argument	error		6623146	4					
ANR	6623645	Identifier	error		6623146	0					
ANR	6623646	IfStatement	if ( ! zde -> filename )		6623146	1					
ANR	6623647	Condition	! zde -> filename	418:5:10313:10326	6623146	0	True				
ANR	6623648	UnaryOperationExpression	! zde -> filename		6623146	0					
ANR	6623649	UnaryOperator	!		6623146	0					
ANR	6623650	PtrMemberAccess	zde -> filename		6623146	1					
ANR	6623651	Identifier	zde		6623146	0					
ANR	6623652	Identifier	filename		6623146	1					
ANR	6623653	ReturnStatement	return - 1 ;	419:5:10334:10343	6623146	1	True				
ANR	6623654	UnaryOperationExpression	- 1		6623146	0					
ANR	6623655	UnaryOperator	-		6623146	0					
ANR	6623656	PrimaryExpression	1		6623146	1					
ANR	6623657	IfStatement	if ( zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8 )		6623146	2					
ANR	6623658	Condition	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8	421:5:10351:10389	6623146	0	True				
ANR	6623659	BitAndExpression	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8		6623146	0		&			
ANR	6623660	PtrMemberAccess	zde -> bitflags		6623146	0					
ANR	6623661	Identifier	zde		6623146	0					
ANR	6623662	Identifier	bitflags		6623146	1					
ANR	6623663	Identifier	ZIP_GPBF_ENCODING_UTF_8		6623146	1					
ANR	6623664	CompoundStatement		91:46:2083:2083	6623146	1					
ANR	6623665	IfStatement	"if ( _zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR )"		6623146	0					
ANR	6623666	Condition	"_zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"	422:9:10403:10483	6623146	0	True				
ANR	6623667	EqualityExpression	"_zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"		6623146	0		==			
ANR	6623668	CallExpression	"_zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN )"		6623146	0					
ANR	6623669	Callee	_zip_guess_encoding		6623146	0					
ANR	6623670	Identifier	_zip_guess_encoding		6623146	0					
ANR	6623671	ArgumentList	zde -> filename		6623146	1					
ANR	6623672	Argument	zde -> filename		6623146	0					
ANR	6623673	PtrMemberAccess	zde -> filename		6623146	0					
ANR	6623674	Identifier	zde		6623146	0					
ANR	6623675	Identifier	filename		6623146	1					
ANR	6623676	Argument	ZIP_ENCODING_UTF8_KNOWN		6623146	1					
ANR	6623677	Identifier	ZIP_ENCODING_UTF8_KNOWN		6623146	0					
ANR	6623678	Identifier	ZIP_ENCODING_ERROR		6623146	1					
ANR	6623679	CompoundStatement		92:92:2177:2177	6623146	1					
ANR	6623680	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	423:2:10490:10529	6623146	0	True				
ANR	6623681	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6623146	0					
ANR	6623682	Callee	_zip_error_set		6623146	0					
ANR	6623683	Identifier	_zip_error_set		6623146	0					
ANR	6623684	ArgumentList	error		6623146	1					
ANR	6623685	Argument	error		6623146	0					
ANR	6623686	Identifier	error		6623146	0					
ANR	6623687	Argument	ZIP_ER_INCONS		6623146	1					
ANR	6623688	Identifier	ZIP_ER_INCONS		6623146	0					
ANR	6623689	Argument	0		6623146	2					
ANR	6623690	PrimaryExpression	0		6623146	0					
ANR	6623691	ReturnStatement	return - 1 ;	424:2:10533:10542	6623146	1	True				
ANR	6623692	UnaryOperationExpression	- 1		6623146	0					
ANR	6623693	UnaryOperator	-		6623146	0					
ANR	6623694	PrimaryExpression	1		6623146	1					
ANR	6623695	IfStatement	if ( ef_len )		6623146	30					
ANR	6623696	Condition	ef_len	429:8:10569:10574	6623146	0	True				
ANR	6623697	Identifier	ef_len		6623146	0					
ANR	6623698	CompoundStatement		100:1:2271:2345	6623146	1					
ANR	6623699	IdentifierDeclStatement	"zip_uint8_t * ef = _zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error ) ;"	430:1:10580:10654	6623146	0	True				
ANR	6623700	IdentifierDecl	"* ef = _zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error )"		6623146	0					
ANR	6623701	IdentifierDeclType	zip_uint8_t *		6623146	0					
ANR	6623702	Identifier	ef		6623146	1					
ANR	6623703	AssignmentExpression	"* ef = _zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error )"		6623146	2		=			
ANR	6623704	Identifier	ef		6623146	0					
ANR	6623705	CallExpression	"_zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error )"		6623146	1					
ANR	6623706	Callee	_zip_read_data		6623146	0					
ANR	6623707	Identifier	_zip_read_data		6623146	0					
ANR	6623708	ArgumentList	bufp ? & cur : NULL		6623146	1					
ANR	6623709	Argument	bufp ? & cur : NULL		6623146	0					
ANR	6623710	ConditionalExpression	bufp ? & cur : NULL		6623146	0					
ANR	6623711	Condition	bufp		6623146	0					
ANR	6623712	Identifier	bufp		6623146	0					
ANR	6623713	UnaryOperationExpression	& cur		6623146	1					
ANR	6623714	UnaryOperator	&		6623146	0					
ANR	6623715	Identifier	cur		6623146	1					
ANR	6623716	Identifier	NULL		6623146	2					
ANR	6623717	Argument	fp		6623146	1					
ANR	6623718	Identifier	fp		6623146	0					
ANR	6623719	Argument	ef_len		6623146	2					
ANR	6623720	Identifier	ef_len		6623146	0					
ANR	6623721	Argument	0		6623146	3					
ANR	6623722	PrimaryExpression	0		6623146	0					
ANR	6623723	Argument	error		6623146	4					
ANR	6623724	Identifier	error		6623146	0					
ANR	6623725	IfStatement	if ( ef == NULL )		6623146	1					
ANR	6623726	Condition	ef == NULL	432:5:10662:10671	6623146	0	True				
ANR	6623727	EqualityExpression	ef == NULL		6623146	0		==			
ANR	6623728	Identifier	ef		6623146	0					
ANR	6623729	Identifier	NULL		6623146	1					
ANR	6623730	ReturnStatement	return - 1 ;	433:5:10679:10688	6623146	1	True				
ANR	6623731	UnaryOperationExpression	- 1		6623146	0					
ANR	6623732	UnaryOperator	-		6623146	0					
ANR	6623733	PrimaryExpression	1		6623146	1					
ANR	6623734	IfStatement	"if ( ( zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ) == NULL )"		6623146	2					
ANR	6623735	Condition	"( zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ) == NULL"	434:5:10695:10793	6623146	0	True				
ANR	6623736	EqualityExpression	"( zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ) == NULL"		6623146	0		==			
ANR	6623737	AssignmentExpression	"zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6623146	0		=			
ANR	6623738	PtrMemberAccess	zde -> extra_fields		6623146	0					
ANR	6623739	Identifier	zde		6623146	0					
ANR	6623740	Identifier	extra_fields		6623146	1					
ANR	6623741	CallExpression	"_zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6623146	1					
ANR	6623742	Callee	_zip_ef_parse		6623146	0					
ANR	6623743	Identifier	_zip_ef_parse		6623146	0					
ANR	6623744	ArgumentList	ef		6623146	1					
ANR	6623745	Argument	ef		6623146	0					
ANR	6623746	Identifier	ef		6623146	0					
ANR	6623747	Argument	ef_len		6623146	1					
ANR	6623748	Identifier	ef_len		6623146	0					
ANR	6623749	Argument	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6623146	2					
ANR	6623750	ConditionalExpression	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6623146	0					
ANR	6623751	Condition	local		6623146	0					
ANR	6623752	Identifier	local		6623146	0					
ANR	6623753	Identifier	ZIP_EF_LOCAL		6623146	1					
ANR	6623754	Identifier	ZIP_EF_CENTRAL		6623146	2					
ANR	6623755	Argument	error		6623146	3					
ANR	6623756	Identifier	error		6623146	0					
ANR	6623757	Identifier	NULL		6623146	1					
ANR	6623758	CompoundStatement		104:106:2487:2487	6623146	1					
ANR	6623759	ExpressionStatement	free ( ef )	435:5:10803:10811	6623146	0	True				
ANR	6623760	CallExpression	free ( ef )		6623146	0					
ANR	6623761	Callee	free		6623146	0					
ANR	6623762	Identifier	free		6623146	0					
ANR	6623763	ArgumentList	ef		6623146	1					
ANR	6623764	Argument	ef		6623146	0					
ANR	6623765	Identifier	ef		6623146	0					
ANR	6623766	ReturnStatement	return - 1 ;	436:5:10818:10827	6623146	1	True				
ANR	6623767	UnaryOperationExpression	- 1		6623146	0					
ANR	6623768	UnaryOperator	-		6623146	0					
ANR	6623769	PrimaryExpression	1		6623146	1					
ANR	6623770	ExpressionStatement	free ( ef )	438:1:10833:10841	6623146	3	True				
ANR	6623771	CallExpression	free ( ef )		6623146	0					
ANR	6623772	Callee	free		6623146	0					
ANR	6623773	Identifier	free		6623146	0					
ANR	6623774	ArgumentList	ef		6623146	1					
ANR	6623775	Argument	ef		6623146	0					
ANR	6623776	Identifier	ef		6623146	0					
ANR	6623777	IfStatement	if ( local )		6623146	4					
ANR	6623778	Condition	local	439:5:10848:10852	6623146	0	True				
ANR	6623779	Identifier	local		6623146	0					
ANR	6623780	ExpressionStatement	zde -> local_extra_fields_read = 1	440:5:10860:10892	6623146	1	True				
ANR	6623781	AssignmentExpression	zde -> local_extra_fields_read = 1		6623146	0		=			
ANR	6623782	PtrMemberAccess	zde -> local_extra_fields_read		6623146	0					
ANR	6623783	Identifier	zde		6623146	0					
ANR	6623784	Identifier	local_extra_fields_read		6623146	1					
ANR	6623785	PrimaryExpression	1		6623146	1					
ANR	6623786	IfStatement	if ( comment_len )		6623146	31					
ANR	6623787	Condition	comment_len	443:8:10909:10919	6623146	0	True				
ANR	6623788	Identifier	comment_len		6623146	0					
ANR	6623789	CompoundStatement		113:21:2613:2613	6623146	1					
ANR	6623790	ExpressionStatement	"zde -> comment = _zip_read_string ( bufp ? & cur : NULL , fp , comment_len , 0 , error )"	444:1:10925:11003	6623146	0	True				
ANR	6623791	AssignmentExpression	"zde -> comment = _zip_read_string ( bufp ? & cur : NULL , fp , comment_len , 0 , error )"		6623146	0		=			
ANR	6623792	PtrMemberAccess	zde -> comment		6623146	0					
ANR	6623793	Identifier	zde		6623146	0					
ANR	6623794	Identifier	comment		6623146	1					
ANR	6623795	CallExpression	"_zip_read_string ( bufp ? & cur : NULL , fp , comment_len , 0 , error )"		6623146	1					
ANR	6623796	Callee	_zip_read_string		6623146	0					
ANR	6623797	Identifier	_zip_read_string		6623146	0					
ANR	6623798	ArgumentList	bufp ? & cur : NULL		6623146	1					
ANR	6623799	Argument	bufp ? & cur : NULL		6623146	0					
ANR	6623800	ConditionalExpression	bufp ? & cur : NULL		6623146	0					
ANR	6623801	Condition	bufp		6623146	0					
ANR	6623802	Identifier	bufp		6623146	0					
ANR	6623803	UnaryOperationExpression	& cur		6623146	1					
ANR	6623804	UnaryOperator	&		6623146	0					
ANR	6623805	Identifier	cur		6623146	1					
ANR	6623806	Identifier	NULL		6623146	2					
ANR	6623807	Argument	fp		6623146	1					
ANR	6623808	Identifier	fp		6623146	0					
ANR	6623809	Argument	comment_len		6623146	2					
ANR	6623810	Identifier	comment_len		6623146	0					
ANR	6623811	Argument	0		6623146	3					
ANR	6623812	PrimaryExpression	0		6623146	0					
ANR	6623813	Argument	error		6623146	4					
ANR	6623814	Identifier	error		6623146	0					
ANR	6623815	IfStatement	if ( ! zde -> comment )		6623146	1					
ANR	6623816	Condition	! zde -> comment	445:5:11010:11022	6623146	0	True				
ANR	6623817	UnaryOperationExpression	! zde -> comment		6623146	0					
ANR	6623818	UnaryOperator	!		6623146	0					
ANR	6623819	PtrMemberAccess	zde -> comment		6623146	1					
ANR	6623820	Identifier	zde		6623146	0					
ANR	6623821	Identifier	comment		6623146	1					
ANR	6623822	ReturnStatement	return - 1 ;	446:5:11030:11039	6623146	1	True				
ANR	6623823	UnaryOperationExpression	- 1		6623146	0					
ANR	6623824	UnaryOperator	-		6623146	0					
ANR	6623825	PrimaryExpression	1		6623146	1					
ANR	6623826	IfStatement	if ( zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8 )		6623146	2					
ANR	6623827	Condition	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8	448:5:11047:11085	6623146	0	True				
ANR	6623828	BitAndExpression	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8		6623146	0		&			
ANR	6623829	PtrMemberAccess	zde -> bitflags		6623146	0					
ANR	6623830	Identifier	zde		6623146	0					
ANR	6623831	Identifier	bitflags		6623146	1					
ANR	6623832	Identifier	ZIP_GPBF_ENCODING_UTF_8		6623146	1					
ANR	6623833	CompoundStatement		118:46:2779:2779	6623146	1					
ANR	6623834	IfStatement	"if ( _zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR )"		6623146	0					
ANR	6623835	Condition	"_zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"	449:9:11099:11178	6623146	0	True				
ANR	6623836	EqualityExpression	"_zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"		6623146	0		==			
ANR	6623837	CallExpression	"_zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN )"		6623146	0					
ANR	6623838	Callee	_zip_guess_encoding		6623146	0					
ANR	6623839	Identifier	_zip_guess_encoding		6623146	0					
ANR	6623840	ArgumentList	zde -> comment		6623146	1					
ANR	6623841	Argument	zde -> comment		6623146	0					
ANR	6623842	PtrMemberAccess	zde -> comment		6623146	0					
ANR	6623843	Identifier	zde		6623146	0					
ANR	6623844	Identifier	comment		6623146	1					
ANR	6623845	Argument	ZIP_ENCODING_UTF8_KNOWN		6623146	1					
ANR	6623846	Identifier	ZIP_ENCODING_UTF8_KNOWN		6623146	0					
ANR	6623847	Identifier	ZIP_ENCODING_ERROR		6623146	1					
ANR	6623848	CompoundStatement		119:91:2872:2872	6623146	1					
ANR	6623849	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	450:2:11185:11224	6623146	0	True				
ANR	6623850	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6623146	0					
ANR	6623851	Callee	_zip_error_set		6623146	0					
ANR	6623852	Identifier	_zip_error_set		6623146	0					
ANR	6623853	ArgumentList	error		6623146	1					
ANR	6623854	Argument	error		6623146	0					
ANR	6623855	Identifier	error		6623146	0					
ANR	6623856	Argument	ZIP_ER_INCONS		6623146	1					
ANR	6623857	Identifier	ZIP_ER_INCONS		6623146	0					
ANR	6623858	Argument	0		6623146	2					
ANR	6623859	PrimaryExpression	0		6623146	0					
ANR	6623860	ReturnStatement	return - 1 ;	451:2:11228:11237	6623146	1	True				
ANR	6623861	UnaryOperationExpression	- 1		6623146	0					
ANR	6623862	UnaryOperator	-		6623146	0					
ANR	6623863	PrimaryExpression	1		6623146	1					
ANR	6623864	ExpressionStatement	"zde -> filename = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_NAME , zde -> filename )"	456:4:11260:11343	6623146	32	True				
ANR	6623865	AssignmentExpression	"zde -> filename = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_NAME , zde -> filename )"		6623146	0		=			
ANR	6623866	PtrMemberAccess	zde -> filename		6623146	0					
ANR	6623867	Identifier	zde		6623146	0					
ANR	6623868	Identifier	filename		6623146	1					
ANR	6623869	CallExpression	"_zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_NAME , zde -> filename )"		6623146	1					
ANR	6623870	Callee	_zip_dirent_process_ef_utf_8		6623146	0					
ANR	6623871	Identifier	_zip_dirent_process_ef_utf_8		6623146	0					
ANR	6623872	ArgumentList	zde		6623146	1					
ANR	6623873	Argument	zde		6623146	0					
ANR	6623874	Identifier	zde		6623146	0					
ANR	6623875	Argument	ZIP_EF_UTF_8_NAME		6623146	1					
ANR	6623876	Identifier	ZIP_EF_UTF_8_NAME		6623146	0					
ANR	6623877	Argument	zde -> filename		6623146	2					
ANR	6623878	PtrMemberAccess	zde -> filename		6623146	0					
ANR	6623879	Identifier	zde		6623146	0					
ANR	6623880	Identifier	filename		6623146	1					
ANR	6623881	ExpressionStatement	"zde -> comment = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_COMMENT , zde -> comment )"	457:4:11349:11433	6623146	33	True				
ANR	6623882	AssignmentExpression	"zde -> comment = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_COMMENT , zde -> comment )"		6623146	0		=			
ANR	6623883	PtrMemberAccess	zde -> comment		6623146	0					
ANR	6623884	Identifier	zde		6623146	0					
ANR	6623885	Identifier	comment		6623146	1					
ANR	6623886	CallExpression	"_zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_COMMENT , zde -> comment )"		6623146	1					
ANR	6623887	Callee	_zip_dirent_process_ef_utf_8		6623146	0					
ANR	6623888	Identifier	_zip_dirent_process_ef_utf_8		6623146	0					
ANR	6623889	ArgumentList	zde		6623146	1					
ANR	6623890	Argument	zde		6623146	0					
ANR	6623891	Identifier	zde		6623146	0					
ANR	6623892	Argument	ZIP_EF_UTF_8_COMMENT		6623146	1					
ANR	6623893	Identifier	ZIP_EF_UTF_8_COMMENT		6623146	0					
ANR	6623894	Argument	zde -> comment		6623146	2					
ANR	6623895	PtrMemberAccess	zde -> comment		6623146	0					
ANR	6623896	Identifier	zde		6623146	0					
ANR	6623897	Identifier	comment		6623146	1					
ANR	6623898	IfStatement	if ( zde -> uncomp_size == ZIP_UINT32_MAX || zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX )		6623146	34					
ANR	6623899	Condition	zde -> uncomp_size == ZIP_UINT32_MAX || zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX	461:8:11461:11563	6623146	0	True				
ANR	6623900	OrExpression	zde -> uncomp_size == ZIP_UINT32_MAX || zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX		6623146	0		||			
ANR	6623901	EqualityExpression	zde -> uncomp_size == ZIP_UINT32_MAX		6623146	0		==			
ANR	6623902	PtrMemberAccess	zde -> uncomp_size		6623146	0					
ANR	6623903	Identifier	zde		6623146	0					
ANR	6623904	Identifier	uncomp_size		6623146	1					
ANR	6623905	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6623906	OrExpression	zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX		6623146	1		||			
ANR	6623907	EqualityExpression	zde -> comp_size == ZIP_UINT32_MAX		6623146	0		==			
ANR	6623908	PtrMemberAccess	zde -> comp_size		6623146	0					
ANR	6623909	Identifier	zde		6623146	0					
ANR	6623910	Identifier	comp_size		6623146	1					
ANR	6623911	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6623912	EqualityExpression	zde -> offset == ZIP_UINT32_MAX		6623146	1		==			
ANR	6623913	PtrMemberAccess	zde -> offset		6623146	0					
ANR	6623914	Identifier	zde		6623146	0					
ANR	6623915	Identifier	offset		6623146	1					
ANR	6623916	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6623917	CompoundStatement		133:1:3295:3428	6623146	1					
ANR	6623918	IdentifierDeclStatement	"zip_uint16_t got_len , needed_len ;"	462:1:11569:11601	6623146	0	True				
ANR	6623919	IdentifierDecl	got_len		6623146	0					
ANR	6623920	IdentifierDeclType	zip_uint16_t		6623146	0					
ANR	6623921	Identifier	got_len		6623146	1					
ANR	6623922	IdentifierDecl	needed_len		6623146	1					
ANR	6623923	IdentifierDeclType	zip_uint16_t		6623146	0					
ANR	6623924	Identifier	needed_len		6623146	1					
ANR	6623925	IdentifierDeclStatement	"const zip_uint8_t * ef = _zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ;"	463:1:11604:11737	6623146	1	True				
ANR	6623926	IdentifierDecl	"* ef = _zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6623146	0					
ANR	6623927	IdentifierDeclType	const zip_uint8_t *		6623146	0					
ANR	6623928	Identifier	ef		6623146	1					
ANR	6623929	AssignmentExpression	"* ef = _zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6623146	2		=			
ANR	6623930	Identifier	ef		6623146	0					
ANR	6623931	CallExpression	"_zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6623146	1					
ANR	6623932	Callee	_zip_ef_get_by_id		6623146	0					
ANR	6623933	Identifier	_zip_ef_get_by_id		6623146	0					
ANR	6623934	ArgumentList	zde -> extra_fields		6623146	1					
ANR	6623935	Argument	zde -> extra_fields		6623146	0					
ANR	6623936	PtrMemberAccess	zde -> extra_fields		6623146	0					
ANR	6623937	Identifier	zde		6623146	0					
ANR	6623938	Identifier	extra_fields		6623146	1					
ANR	6623939	Argument	& got_len		6623146	1					
ANR	6623940	UnaryOperationExpression	& got_len		6623146	0					
ANR	6623941	UnaryOperator	&		6623146	0					
ANR	6623942	Identifier	got_len		6623146	1					
ANR	6623943	Argument	ZIP_EF_ZIP64		6623146	2					
ANR	6623944	Identifier	ZIP_EF_ZIP64		6623146	0					
ANR	6623945	Argument	0		6623146	3					
ANR	6623946	PrimaryExpression	0		6623146	0					
ANR	6623947	Argument	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6623146	4					
ANR	6623948	ConditionalExpression	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6623146	0					
ANR	6623949	Condition	local		6623146	0					
ANR	6623950	Identifier	local		6623146	0					
ANR	6623951	Identifier	ZIP_EF_LOCAL		6623146	1					
ANR	6623952	Identifier	ZIP_EF_CENTRAL		6623146	2					
ANR	6623953	Argument	error		6623146	5					
ANR	6623954	Identifier	error		6623146	0					
ANR	6623955	IfStatement	if ( ef == NULL )		6623146	2					
ANR	6623956	Condition	ef == NULL	465:5:11824:11833	6623146	0	True				
ANR	6623957	EqualityExpression	ef == NULL		6623146	0		==			
ANR	6623958	Identifier	ef		6623146	0					
ANR	6623959	Identifier	NULL		6623146	1					
ANR	6623960	ReturnStatement	return - 1 ;	466:5:11841:11850	6623146	1	True				
ANR	6623961	UnaryOperationExpression	- 1		6623146	0					
ANR	6623962	UnaryOperator	-		6623146	0					
ANR	6623963	PrimaryExpression	1		6623146	1					
ANR	6623964	IfStatement	if ( local )		6623146	3					
ANR	6623965	Condition	local	469:5:11859:11863	6623146	0	True				
ANR	6623966	Identifier	local		6623146	0					
ANR	6623967	ExpressionStatement	needed_len = 16	470:5:11871:11886	6623146	1	True				
ANR	6623968	AssignmentExpression	needed_len = 16		6623146	0		=			
ANR	6623969	Identifier	needed_len		6623146	0					
ANR	6623970	PrimaryExpression	16		6623146	1					
ANR	6623971	ElseStatement	else		6623146	0					
ANR	6623972	ExpressionStatement	needed_len = ( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8 + ( zde -> disk_number == ZIP_UINT16_MAX ) * 4	472:5:11899:12070	6623146	0	True				
ANR	6623973	AssignmentExpression	needed_len = ( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8 + ( zde -> disk_number == ZIP_UINT16_MAX ) * 4		6623146	0		=			
ANR	6623974	Identifier	needed_len		6623146	0					
ANR	6623975	AdditiveExpression	( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8 + ( zde -> disk_number == ZIP_UINT16_MAX ) * 4		6623146	1		+			
ANR	6623976	MultiplicativeExpression	( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8		6623146	0		*			
ANR	6623977	AdditiveExpression	( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX )		6623146	0		+			
ANR	6623978	EqualityExpression	zde -> uncomp_size == ZIP_UINT32_MAX		6623146	0		==			
ANR	6623979	PtrMemberAccess	zde -> uncomp_size		6623146	0					
ANR	6623980	Identifier	zde		6623146	0					
ANR	6623981	Identifier	uncomp_size		6623146	1					
ANR	6623982	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6623983	AdditiveExpression	( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX )		6623146	1		+			
ANR	6623984	EqualityExpression	zde -> comp_size == ZIP_UINT32_MAX		6623146	0		==			
ANR	6623985	PtrMemberAccess	zde -> comp_size		6623146	0					
ANR	6623986	Identifier	zde		6623146	0					
ANR	6623987	Identifier	comp_size		6623146	1					
ANR	6623988	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6623989	EqualityExpression	zde -> offset == ZIP_UINT32_MAX		6623146	1		==			
ANR	6623990	PtrMemberAccess	zde -> offset		6623146	0					
ANR	6623991	Identifier	zde		6623146	0					
ANR	6623992	Identifier	offset		6623146	1					
ANR	6623993	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6623994	PrimaryExpression	8		6623146	1					
ANR	6623995	MultiplicativeExpression	( zde -> disk_number == ZIP_UINT16_MAX ) * 4		6623146	1		*			
ANR	6623996	EqualityExpression	zde -> disk_number == ZIP_UINT16_MAX		6623146	0		==			
ANR	6623997	PtrMemberAccess	zde -> disk_number		6623146	0					
ANR	6623998	Identifier	zde		6623146	0					
ANR	6623999	Identifier	disk_number		6623146	1					
ANR	6624000	Identifier	ZIP_UINT16_MAX		6623146	1					
ANR	6624001	PrimaryExpression	4		6623146	1					
ANR	6624002	IfStatement	if ( got_len != needed_len )		6623146	4					
ANR	6624003	Condition	got_len != needed_len	475:5:12078:12098	6623146	0	True				
ANR	6624004	EqualityExpression	got_len != needed_len		6623146	0		!=			
ANR	6624005	Identifier	got_len		6623146	0					
ANR	6624006	Identifier	needed_len		6623146	1					
ANR	6624007	CompoundStatement		145:28:3792:3792	6623146	1					
ANR	6624008	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	476:5:12108:12147	6623146	0	True				
ANR	6624009	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6623146	0					
ANR	6624010	Callee	_zip_error_set		6623146	0					
ANR	6624011	Identifier	_zip_error_set		6623146	0					
ANR	6624012	ArgumentList	error		6623146	1					
ANR	6624013	Argument	error		6623146	0					
ANR	6624014	Identifier	error		6623146	0					
ANR	6624015	Argument	ZIP_ER_INCONS		6623146	1					
ANR	6624016	Identifier	ZIP_ER_INCONS		6623146	0					
ANR	6624017	Argument	0		6623146	2					
ANR	6624018	PrimaryExpression	0		6623146	0					
ANR	6624019	ReturnStatement	return - 1 ;	477:5:12154:12163	6623146	1	True				
ANR	6624020	UnaryOperationExpression	- 1		6623146	0					
ANR	6624021	UnaryOperator	-		6623146	0					
ANR	6624022	PrimaryExpression	1		6623146	1					
ANR	6624023	IfStatement	if ( zde -> uncomp_size == ZIP_UINT32_MAX )		6623146	5					
ANR	6624024	Condition	zde -> uncomp_size == ZIP_UINT32_MAX	480:5:12175:12208	6623146	0	True				
ANR	6624025	EqualityExpression	zde -> uncomp_size == ZIP_UINT32_MAX		6623146	0		==			
ANR	6624026	PtrMemberAccess	zde -> uncomp_size		6623146	0					
ANR	6624027	Identifier	zde		6623146	0					
ANR	6624028	Identifier	uncomp_size		6623146	1					
ANR	6624029	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6624030	ExpressionStatement	zde -> uncomp_size = _zip_read8 ( & ef )	481:5:12216:12250	6623146	1	True				
ANR	6624031	AssignmentExpression	zde -> uncomp_size = _zip_read8 ( & ef )		6623146	0		=			
ANR	6624032	PtrMemberAccess	zde -> uncomp_size		6623146	0					
ANR	6624033	Identifier	zde		6623146	0					
ANR	6624034	Identifier	uncomp_size		6623146	1					
ANR	6624035	CallExpression	_zip_read8 ( & ef )		6623146	1					
ANR	6624036	Callee	_zip_read8		6623146	0					
ANR	6624037	Identifier	_zip_read8		6623146	0					
ANR	6624038	ArgumentList	& ef		6623146	1					
ANR	6624039	Argument	& ef		6623146	0					
ANR	6624040	UnaryOperationExpression	& ef		6623146	0					
ANR	6624041	UnaryOperator	&		6623146	0					
ANR	6624042	Identifier	ef		6623146	1					
ANR	6624043	ElseStatement	else		6623146	0					
ANR	6624044	IfStatement	if ( local )		6623146	0					
ANR	6624045	Condition	local	482:10:12262:12266	6623146	0	True				
ANR	6624046	Identifier	local		6623146	0					
ANR	6624047	ExpressionStatement	ef += 8	483:5:12274:12281	6623146	1	True				
ANR	6624048	AssignmentExpression	ef += 8		6623146	0		+=			
ANR	6624049	Identifier	ef		6623146	0					
ANR	6624050	PrimaryExpression	8		6623146	1					
ANR	6624051	IfStatement	if ( zde -> comp_size == ZIP_UINT32_MAX )		6623146	6					
ANR	6624052	Condition	zde -> comp_size == ZIP_UINT32_MAX	484:5:12288:12319	6623146	0	True				
ANR	6624053	EqualityExpression	zde -> comp_size == ZIP_UINT32_MAX		6623146	0		==			
ANR	6624054	PtrMemberAccess	zde -> comp_size		6623146	0					
ANR	6624055	Identifier	zde		6623146	0					
ANR	6624056	Identifier	comp_size		6623146	1					
ANR	6624057	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6624058	ExpressionStatement	zde -> comp_size = _zip_read8 ( & ef )	485:5:12327:12359	6623146	1	True				
ANR	6624059	AssignmentExpression	zde -> comp_size = _zip_read8 ( & ef )		6623146	0		=			
ANR	6624060	PtrMemberAccess	zde -> comp_size		6623146	0					
ANR	6624061	Identifier	zde		6623146	0					
ANR	6624062	Identifier	comp_size		6623146	1					
ANR	6624063	CallExpression	_zip_read8 ( & ef )		6623146	1					
ANR	6624064	Callee	_zip_read8		6623146	0					
ANR	6624065	Identifier	_zip_read8		6623146	0					
ANR	6624066	ArgumentList	& ef		6623146	1					
ANR	6624067	Argument	& ef		6623146	0					
ANR	6624068	UnaryOperationExpression	& ef		6623146	0					
ANR	6624069	UnaryOperator	&		6623146	0					
ANR	6624070	Identifier	ef		6623146	1					
ANR	6624071	IfStatement	if ( ! local )		6623146	7					
ANR	6624072	Condition	! local	486:5:12366:12371	6623146	0	True				
ANR	6624073	UnaryOperationExpression	! local		6623146	0					
ANR	6624074	UnaryOperator	!		6623146	0					
ANR	6624075	Identifier	local		6623146	1					
ANR	6624076	CompoundStatement		156:13:4065:4065	6623146	1					
ANR	6624077	IfStatement	if ( zde -> offset == ZIP_UINT32_MAX )		6623146	0					
ANR	6624078	Condition	zde -> offset == ZIP_UINT32_MAX	487:9:12385:12413	6623146	0	True				
ANR	6624079	EqualityExpression	zde -> offset == ZIP_UINT32_MAX		6623146	0		==			
ANR	6624080	PtrMemberAccess	zde -> offset		6623146	0					
ANR	6624081	Identifier	zde		6623146	0					
ANR	6624082	Identifier	offset		6623146	1					
ANR	6624083	Identifier	ZIP_UINT32_MAX		6623146	1					
ANR	6624084	ExpressionStatement	zde -> offset = _zip_read8 ( & ef )	488:2:12418:12447	6623146	1	True				
ANR	6624085	AssignmentExpression	zde -> offset = _zip_read8 ( & ef )		6623146	0		=			
ANR	6624086	PtrMemberAccess	zde -> offset		6623146	0					
ANR	6624087	Identifier	zde		6623146	0					
ANR	6624088	Identifier	offset		6623146	1					
ANR	6624089	CallExpression	_zip_read8 ( & ef )		6623146	1					
ANR	6624090	Callee	_zip_read8		6623146	0					
ANR	6624091	Identifier	_zip_read8		6623146	0					
ANR	6624092	ArgumentList	& ef		6623146	1					
ANR	6624093	Argument	& ef		6623146	0					
ANR	6624094	UnaryOperationExpression	& ef		6623146	0					
ANR	6624095	UnaryOperator	&		6623146	0					
ANR	6624096	Identifier	ef		6623146	1					
ANR	6624097	IfStatement	if ( zde -> disk_number == ZIP_UINT16_MAX )		6623146	1					
ANR	6624098	Condition	zde -> disk_number == ZIP_UINT16_MAX	489:9:12458:12491	6623146	0	True				
ANR	6624099	EqualityExpression	zde -> disk_number == ZIP_UINT16_MAX		6623146	0		==			
ANR	6624100	PtrMemberAccess	zde -> disk_number		6623146	0					
ANR	6624101	Identifier	zde		6623146	0					
ANR	6624102	Identifier	disk_number		6623146	1					
ANR	6624103	Identifier	ZIP_UINT16_MAX		6623146	1					
ANR	6624104	ExpressionStatement	zde -> disk_number = _zip_read4 ( & ef )	490:2:12496:12530	6623146	1	True				
ANR	6624105	AssignmentExpression	zde -> disk_number = _zip_read4 ( & ef )		6623146	0		=			
ANR	6624106	PtrMemberAccess	zde -> disk_number		6623146	0					
ANR	6624107	Identifier	zde		6623146	0					
ANR	6624108	Identifier	disk_number		6623146	1					
ANR	6624109	CallExpression	_zip_read4 ( & ef )		6623146	1					
ANR	6624110	Callee	_zip_read4		6623146	0					
ANR	6624111	Identifier	_zip_read4		6623146	0					
ANR	6624112	ArgumentList	& ef		6623146	1					
ANR	6624113	Argument	& ef		6623146	0					
ANR	6624114	UnaryOperationExpression	& ef		6623146	0					
ANR	6624115	UnaryOperator	&		6623146	0					
ANR	6624116	Identifier	ef		6623146	1					
ANR	6624117	IfStatement	if ( ! local )		6623146	35					
ANR	6624118	Condition	! local	494:8:12554:12559	6623146	0	True				
ANR	6624119	UnaryOperationExpression	! local		6623146	0					
ANR	6624120	UnaryOperator	!		6623146	0					
ANR	6624121	Identifier	local		6623146	1					
ANR	6624122	CompoundStatement		164:16:4253:4253	6623146	1					
ANR	6624123	IfStatement	if ( zde -> offset > ZIP_OFF_MAX )		6623146	0					
ANR	6624124	Condition	zde -> offset > ZIP_OFF_MAX	495:12:12576:12600	6623146	0	True				
ANR	6624125	RelationalExpression	zde -> offset > ZIP_OFF_MAX		6623146	0		>			
ANR	6624126	PtrMemberAccess	zde -> offset		6623146	0					
ANR	6624127	Identifier	zde		6623146	0					
ANR	6624128	Identifier	offset		6623146	1					
ANR	6624129	Identifier	ZIP_OFF_MAX		6623146	1					
ANR	6624130	CompoundStatement		165:39:4294:4294	6623146	1					
ANR	6624131	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_SEEK , EFBIG )"	496:12:12617:12658	6623146	0	True				
ANR	6624132	CallExpression	"_zip_error_set ( error , ZIP_ER_SEEK , EFBIG )"		6623146	0					
ANR	6624133	Callee	_zip_error_set		6623146	0					
ANR	6624134	Identifier	_zip_error_set		6623146	0					
ANR	6624135	ArgumentList	error		6623146	1					
ANR	6624136	Argument	error		6623146	0					
ANR	6624137	Identifier	error		6623146	0					
ANR	6624138	Argument	ZIP_ER_SEEK		6623146	1					
ANR	6624139	Identifier	ZIP_ER_SEEK		6623146	0					
ANR	6624140	Argument	EFBIG		6623146	2					
ANR	6624141	Identifier	EFBIG		6623146	0					
ANR	6624142	ReturnStatement	return - 1 ;	497:12:12672:12681	6623146	1	True				
ANR	6624143	UnaryOperationExpression	- 1		6623146	0					
ANR	6624144	UnaryOperator	-		6623146	0					
ANR	6624145	PrimaryExpression	1		6623146	1					
ANR	6624146	ExpressionStatement	zde -> extra_fields = _zip_ef_remove_internal ( zde -> extra_fields )	501:4:12708:12770	6623146	36	True				
ANR	6624147	AssignmentExpression	zde -> extra_fields = _zip_ef_remove_internal ( zde -> extra_fields )		6623146	0		=			
ANR	6624148	PtrMemberAccess	zde -> extra_fields		6623146	0					
ANR	6624149	Identifier	zde		6623146	0					
ANR	6624150	Identifier	extra_fields		6623146	1					
ANR	6624151	CallExpression	_zip_ef_remove_internal ( zde -> extra_fields )		6623146	1					
ANR	6624152	Callee	_zip_ef_remove_internal		6623146	0					
ANR	6624153	Identifier	_zip_ef_remove_internal		6623146	0					
ANR	6624154	ArgumentList	zde -> extra_fields		6623146	1					
ANR	6624155	Argument	zde -> extra_fields		6623146	0					
ANR	6624156	PtrMemberAccess	zde -> extra_fields		6623146	0					
ANR	6624157	Identifier	zde		6623146	0					
ANR	6624158	Identifier	extra_fields		6623146	1					
ANR	6624159	IfStatement	if ( bufp )		6623146	37					
ANR	6624160	Condition	bufp	503:8:12781:12784	6623146	0	True				
ANR	6624161	Identifier	bufp		6623146	0					
ANR	6624162	ExpressionStatement	* bufp = cur	504:6:12793:12804	6623146	1	True				
ANR	6624163	AssignmentExpression	* bufp = cur		6623146	0		=			
ANR	6624164	UnaryOperationExpression	* bufp		6623146	0					
ANR	6624165	UnaryOperator	*		6623146	0					
ANR	6624166	Identifier	bufp		6623146	1					
ANR	6624167	Identifier	cur		6623146	1					
ANR	6624168	IfStatement	if ( leftp )		6623146	38					
ANR	6624169	Condition	leftp	505:8:12814:12818	6623146	0	True				
ANR	6624170	Identifier	leftp		6623146	0					
ANR	6624171	ExpressionStatement	* leftp -= size	506:1:12822:12836	6623146	1	True				
ANR	6624172	AssignmentExpression	* leftp -= size		6623146	0		-=			
ANR	6624173	UnaryOperationExpression	* leftp		6623146	0					
ANR	6624174	UnaryOperator	*		6623146	0					
ANR	6624175	Identifier	leftp		6623146	1					
ANR	6624176	Identifier	size		6623146	1					
ANR	6624177	ReturnStatement	return 0 ;	508:4:12843:12851	6623146	39	True				
ANR	6624178	PrimaryExpression	0		6623146	0					
ANR	6624179	ReturnType	int		6623146	1					
ANR	6624180	Identifier	_zip_dirent_read		6623146	2					
ANR	6624181	ParameterList	"struct zip_dirent * zde , FILE * fp , const unsigned char * * bufp , zip_uint64_t * leftp , int local , struct zip_error * error"		6623146	3					
ANR	6624182	Parameter	struct zip_dirent * zde	328:17:8183:8204	6623146	0	True				
ANR	6624183	ParameterType	struct zip_dirent *		6623146	0					
ANR	6624184	Identifier	zde		6623146	1					
ANR	6624185	Parameter	FILE * fp	328:41:8207:8214	6623146	1	True				
ANR	6624186	ParameterType	FILE *		6623146	0					
ANR	6624187	Identifier	fp		6623146	1					
ANR	6624188	Parameter	const unsigned char * * bufp	329:3:8220:8245	6623146	2	True				
ANR	6624189	ParameterType	const unsigned char * *		6623146	0					
ANR	6624190	Identifier	bufp		6623146	1					
ANR	6624191	Parameter	zip_uint64_t * leftp	329:31:8248:8266	6623146	3	True				
ANR	6624192	ParameterType	zip_uint64_t *		6623146	0					
ANR	6624193	Identifier	leftp		6623146	1					
ANR	6624194	Parameter	int local	329:52:8269:8277	6623146	4	True				
ANR	6624195	ParameterType	int		6623146	0					
ANR	6624196	Identifier	local		6623146	1					
ANR	6624197	Parameter	struct zip_error * error	330:3:8283:8305	6623146	5	True				
ANR	6624198	ParameterType	struct zip_error *		6623146	0					
ANR	6624199	Identifier	error		6623146	1					
ANR	6624200	CFGEntryNode	ENTRY		6623146		True				
ANR	6624201	CFGExitNode	EXIT		6623146		True				
ANR	6624202	Symbol	& got_len		6623146						
ANR	6624203	Symbol	zde -> bitflags		6623146						
ANR	6624204	Symbol	ZIP_EF_ZIP64		6623146						
ANR	6624205	Symbol	zde -> version_needed		6623146						
ANR	6624206	Symbol	zde -> uncomp_size		6623146						
ANR	6624207	Symbol	ZIP_UINT32_MAX		6623146						
ANR	6624208	Symbol	ZIP_UINT16_MAX		6623146						
ANR	6624209	Symbol	zde -> comp_method		6623146						
ANR	6624210	Symbol	ZIP_ER_NOZIP		6623146						
ANR	6624211	Symbol	ZIP_ER_READ		6623146						
ANR	6624212	Symbol	ZIP_EF_CENTRAL		6623146						
ANR	6624213	Symbol	* bufp		6623146						
ANR	6624214	Symbol	zde -> ext_attrib		6623146						
ANR	6624215	Symbol	zde -> comp_size		6623146						
ANR	6624216	Symbol	memcmp		6623146						
ANR	6624217	Symbol	_zip_read_data		6623146						
ANR	6624218	Symbol	filename_len		6623146						
ANR	6624219	Symbol	ZIP_ER_INCONS		6623146						
ANR	6624220	Symbol	_zip_read_string		6623146						
ANR	6624221	Symbol	ZIP_ENCODING_UTF8_KNOWN		6623146						
ANR	6624222	Symbol	ef		6623146						
ANR	6624223	Symbol	errno		6623146						
ANR	6624224	Symbol	NULL		6623146						
ANR	6624225	Symbol	ZIP_EF_UTF_8_COMMENT		6623146						
ANR	6624226	Symbol	zde -> version_madeby		6623146						
ANR	6624227	Symbol	_zip_dirent_process_ef_utf_8		6623146						
ANR	6624228	Symbol	zde -> filename		6623146						
ANR	6624229	Symbol	dosdate		6623146						
ANR	6624230	Symbol	ZIP_ER_SEEK		6623146						
ANR	6624231	Symbol	fread		6623146						
ANR	6624232	Symbol	zde -> offset		6623146						
ANR	6624233	Symbol	ZIP_EF_LOCAL		6623146						
ANR	6624234	Symbol	ZIP_EF_UTF_8_NAME		6623146						
ANR	6624235	Symbol	size		6623146						
ANR	6624236	Symbol	zde -> crc		6623146						
ANR	6624237	Symbol	zde -> local_extra_fields_read		6623146						
ANR	6624238	Symbol	_zip_read2		6623146						
ANR	6624239	Symbol	_zip_read8		6623146						
ANR	6624240	Symbol	cur		6623146						
ANR	6624241	Symbol	_zip_d2u_time		6623146						
ANR	6624242	Symbol	_zip_read4		6623146						
ANR	6624243	Symbol	_zip_guess_encoding		6623146						
ANR	6624244	Symbol	ZIP_OFF_MAX		6623146						
ANR	6624245	Symbol	fp		6623146						
ANR	6624246	Symbol	& ef		6623146						
ANR	6624247	Symbol	error		6623146						
ANR	6624248	Symbol	local		6623146						
ANR	6624249	Symbol	needed_len		6623146						
ANR	6624250	Symbol	* leftp		6623146						
ANR	6624251	Symbol	comment_len		6623146						
ANR	6624252	Symbol	ef_len		6623146						
ANR	6624253	Symbol	zde -> extra_fields		6623146						
ANR	6624254	Symbol	& cur		6623146						
ANR	6624255	Symbol	zde -> disk_number		6623146						
ANR	6624256	Symbol	zde -> comment		6623146						
ANR	6624257	Symbol	CDENTRYSIZE		6623146						
ANR	6624258	Symbol	_zip_ef_remove_internal		6623146						
ANR	6624259	Symbol	* zde		6623146						
ANR	6624260	Symbol	LENTRYSIZE		6623146						
ANR	6624261	Symbol	leftp		6623146						
ANR	6624262	Symbol	_zip_ef_get_by_id		6623146						
ANR	6624263	Symbol	LOCAL_MAGIC		6623146						
ANR	6624264	Symbol	zde -> last_mod		6623146						
ANR	6624265	Symbol	ZIP_ENCODING_ERROR		6623146						
ANR	6624266	Symbol	_zip_ef_parse		6623146						
ANR	6624267	Symbol	buf		6623146						
ANR	6624268	Symbol	EFBIG		6623146						
ANR	6624269	Symbol	bufp		6623146						
ANR	6624270	Symbol	dostime		6623146						
ANR	6624271	Symbol	ZIP_GPBF_ENCODING_UTF_8		6623146						
ANR	6624272	Symbol	got_len		6623146						
ANR	6624273	Symbol	zde		6623146						
ANR	6624274	Symbol	CENTRAL_MAGIC		6623146						
ANR	6624275	Symbol	zde -> int_attrib		6623146						
ANR	6624276	Function	_zip_dirent_process_ef_utf_8	513:0:12859:13478							
ANR	6624277	FunctionDef	"_zip_dirent_process_ef_utf_8 (const struct zip_dirent * de , zip_uint16_t id , struct zip_string * str)"		6624276	0					
ANR	6624278	CompoundStatement		515:0:12985:13478	6624276	0					
ANR	6624279	IdentifierDeclStatement	zip_uint16_t ef_len ;	516:4:12991:13010	6624276	0	True				
ANR	6624280	IdentifierDecl	ef_len		6624276	0					
ANR	6624281	IdentifierDeclType	zip_uint16_t		6624276	0					
ANR	6624282	Identifier	ef_len		6624276	1					
ANR	6624283	IdentifierDeclStatement	zip_uint32_t ef_crc ;	517:4:13016:13035	6624276	1	True				
ANR	6624284	IdentifierDecl	ef_crc		6624276	0					
ANR	6624285	IdentifierDeclType	zip_uint32_t		6624276	0					
ANR	6624286	Identifier	ef_crc		6624276	1					
ANR	6624287	IdentifierDeclStatement	"const zip_uint8_t * ef = _zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL ) ;"	519:4:13042:13136	6624276	2	True				
ANR	6624288	IdentifierDecl	"* ef = _zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL )"		6624276	0					
ANR	6624289	IdentifierDeclType	const zip_uint8_t *		6624276	0					
ANR	6624290	Identifier	ef		6624276	1					
ANR	6624291	AssignmentExpression	"* ef = _zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL )"		6624276	2		=			
ANR	6624292	Identifier	ef		6624276	0					
ANR	6624293	CallExpression	"_zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL )"		6624276	1					
ANR	6624294	Callee	_zip_ef_get_by_id		6624276	0					
ANR	6624295	Identifier	_zip_ef_get_by_id		6624276	0					
ANR	6624296	ArgumentList	de -> extra_fields		6624276	1					
ANR	6624297	Argument	de -> extra_fields		6624276	0					
ANR	6624298	PtrMemberAccess	de -> extra_fields		6624276	0					
ANR	6624299	Identifier	de		6624276	0					
ANR	6624300	Identifier	extra_fields		6624276	1					
ANR	6624301	Argument	& ef_len		6624276	1					
ANR	6624302	UnaryOperationExpression	& ef_len		6624276	0					
ANR	6624303	UnaryOperator	&		6624276	0					
ANR	6624304	Identifier	ef_len		6624276	1					
ANR	6624305	Argument	id		6624276	2					
ANR	6624306	Identifier	id		6624276	0					
ANR	6624307	Argument	0		6624276	3					
ANR	6624308	PrimaryExpression	0		6624276	0					
ANR	6624309	Argument	ZIP_EF_BOTH		6624276	4					
ANR	6624310	Identifier	ZIP_EF_BOTH		6624276	0					
ANR	6624311	Argument	NULL		6624276	5					
ANR	6624312	Identifier	NULL		6624276	0					
ANR	6624313	IfStatement	if ( ef == NULL || ef_len < 5 || ef [ 0 ] != 1 )		6624276	3					
ANR	6624314	Condition	ef == NULL || ef_len < 5 || ef [ 0 ] != 1	521:8:13147:13184	6624276	0	True				
ANR	6624315	OrExpression	ef == NULL || ef_len < 5 || ef [ 0 ] != 1		6624276	0		||			
ANR	6624316	EqualityExpression	ef == NULL		6624276	0		==			
ANR	6624317	Identifier	ef		6624276	0					
ANR	6624318	Identifier	NULL		6624276	1					
ANR	6624319	OrExpression	ef_len < 5 || ef [ 0 ] != 1		6624276	1		||			
ANR	6624320	RelationalExpression	ef_len < 5		6624276	0		<			
ANR	6624321	Identifier	ef_len		6624276	0					
ANR	6624322	PrimaryExpression	5		6624276	1					
ANR	6624323	EqualityExpression	ef [ 0 ] != 1		6624276	1		!=			
ANR	6624324	ArrayIndexing	ef [ 0 ]		6624276	0					
ANR	6624325	Identifier	ef		6624276	0					
ANR	6624326	PrimaryExpression	0		6624276	1					
ANR	6624327	PrimaryExpression	1		6624276	1					
ANR	6624328	ReturnStatement	return str ;	522:1:13188:13198	6624276	1	True				
ANR	6624329	Identifier	str		6624276	0					
ANR	6624330	ExpressionStatement	ef ++	524:4:13205:13209	6624276	4	True				
ANR	6624331	PostIncDecOperationExpression	ef ++		6624276	0					
ANR	6624332	Identifier	ef		6624276	0					
ANR	6624333	IncDec	++		6624276	1					
ANR	6624334	ExpressionStatement	ef_crc = _zip_read4 ( & ef )	525:4:13215:13239	6624276	5	True				
ANR	6624335	AssignmentExpression	ef_crc = _zip_read4 ( & ef )		6624276	0		=			
ANR	6624336	Identifier	ef_crc		6624276	0					
ANR	6624337	CallExpression	_zip_read4 ( & ef )		6624276	1					
ANR	6624338	Callee	_zip_read4		6624276	0					
ANR	6624339	Identifier	_zip_read4		6624276	0					
ANR	6624340	ArgumentList	& ef		6624276	1					
ANR	6624341	Argument	& ef		6624276	0					
ANR	6624342	UnaryOperationExpression	& ef		6624276	0					
ANR	6624343	UnaryOperator	&		6624276	0					
ANR	6624344	Identifier	ef		6624276	1					
ANR	6624345	IfStatement	if ( _zip_string_crc32 ( str ) == ef_crc )		6624276	6					
ANR	6624346	Condition	_zip_string_crc32 ( str ) == ef_crc	527:8:13250:13281	6624276	0	True				
ANR	6624347	EqualityExpression	_zip_string_crc32 ( str ) == ef_crc		6624276	0		==			
ANR	6624348	CallExpression	_zip_string_crc32 ( str )		6624276	0					
ANR	6624349	Callee	_zip_string_crc32		6624276	0					
ANR	6624350	Identifier	_zip_string_crc32		6624276	0					
ANR	6624351	ArgumentList	str		6624276	1					
ANR	6624352	Argument	str		6624276	0					
ANR	6624353	Identifier	str		6624276	0					
ANR	6624354	Identifier	ef_crc		6624276	1					
ANR	6624355	CompoundStatement		14:1:301:389	6624276	1					
ANR	6624356	IdentifierDeclStatement	"struct zip_string * ef_str = _zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL ) ;"	528:1:13287:13375	6624276	0	True				
ANR	6624357	IdentifierDecl	"* ef_str = _zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL )"		6624276	0					
ANR	6624358	IdentifierDeclType	struct zip_string *		6624276	0					
ANR	6624359	Identifier	ef_str		6624276	1					
ANR	6624360	AssignmentExpression	"* ef_str = _zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL )"		6624276	2		=			
ANR	6624361	Identifier	ef_str		6624276	0					
ANR	6624362	CallExpression	"_zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL )"		6624276	1					
ANR	6624363	Callee	_zip_string_new		6624276	0					
ANR	6624364	Identifier	_zip_string_new		6624276	0					
ANR	6624365	ArgumentList	ef		6624276	1					
ANR	6624366	Argument	ef		6624276	0					
ANR	6624367	Identifier	ef		6624276	0					
ANR	6624368	Argument	ef_len - 5		6624276	1					
ANR	6624369	AdditiveExpression	ef_len - 5		6624276	0		-			
ANR	6624370	Identifier	ef_len		6624276	0					
ANR	6624371	PrimaryExpression	5		6624276	1					
ANR	6624372	Argument	ZIP_ENCODING_UTF8_KNOWN		6624276	2					
ANR	6624373	Identifier	ZIP_ENCODING_UTF8_KNOWN		6624276	0					
ANR	6624374	Argument	NULL		6624276	3					
ANR	6624375	Identifier	NULL		6624276	0					
ANR	6624376	IfStatement	if ( ef_str != NULL )		6624276	1					
ANR	6624377	Condition	ef_str != NULL	530:5:13383:13396	6624276	0	True				
ANR	6624378	EqualityExpression	ef_str != NULL		6624276	0		!=			
ANR	6624379	Identifier	ef_str		6624276	0					
ANR	6624380	Identifier	NULL		6624276	1					
ANR	6624381	CompoundStatement		16:21:413:413	6624276	1					
ANR	6624382	ExpressionStatement	_zip_string_free ( str )	531:5:13406:13427	6624276	0	True				
ANR	6624383	CallExpression	_zip_string_free ( str )		6624276	0					
ANR	6624384	Callee	_zip_string_free		6624276	0					
ANR	6624385	Identifier	_zip_string_free		6624276	0					
ANR	6624386	ArgumentList	str		6624276	1					
ANR	6624387	Argument	str		6624276	0					
ANR	6624388	Identifier	str		6624276	0					
ANR	6624389	ExpressionStatement	str = ef_str	532:5:13434:13446	6624276	1	True				
ANR	6624390	AssignmentExpression	str = ef_str		6624276	0		=			
ANR	6624391	Identifier	str		6624276	0					
ANR	6624392	Identifier	ef_str		6624276	1					
ANR	6624393	ReturnStatement	return str ;	536:4:13466:13476	6624276	7	True				
ANR	6624394	Identifier	str		6624276	0					
ANR	6624395	ReturnType	static struct zip_string *		6624276	1					
ANR	6624396	Identifier	_zip_dirent_process_ef_utf_8		6624276	2					
ANR	6624397	ParameterList	"const struct zip_dirent * de , zip_uint16_t id , struct zip_string * str"		6624276	3					
ANR	6624398	Parameter	const struct zip_dirent * de	514:29:12915:12941	6624276	0	True				
ANR	6624399	ParameterType	const struct zip_dirent *		6624276	0					
ANR	6624400	Identifier	de		6624276	1					
ANR	6624401	Parameter	zip_uint16_t id	514:58:12944:12958	6624276	1	True				
ANR	6624402	ParameterType	zip_uint16_t		6624276	0					
ANR	6624403	Identifier	id		6624276	1					
ANR	6624404	Parameter	struct zip_string * str	514:75:12961:12982	6624276	2	True				
ANR	6624405	ParameterType	struct zip_string *		6624276	0					
ANR	6624406	Identifier	str		6624276	1					
ANR	6624407	CFGEntryNode	ENTRY		6624276		True				
ANR	6624408	CFGExitNode	EXIT		6624276		True				
ANR	6624409	Symbol	de -> extra_fields		6624276						
ANR	6624410	Symbol	ZIP_ENCODING_UTF8_KNOWN		6624276						
ANR	6624411	Symbol	de		6624276						
ANR	6624412	Symbol	ef		6624276						
ANR	6624413	Symbol	NULL		6624276						
ANR	6624414	Symbol	ZIP_EF_BOTH		6624276						
ANR	6624415	Symbol	* de		6624276						
ANR	6624416	Symbol	* ef		6624276						
ANR	6624417	Symbol	_zip_read4		6624276						
ANR	6624418	Symbol	& ef_len		6624276						
ANR	6624419	Symbol	& ef		6624276						
ANR	6624420	Symbol	_zip_ef_get_by_id		6624276						
ANR	6624421	Symbol	_zip_string_crc32		6624276						
ANR	6624422	Symbol	str		6624276						
ANR	6624423	Symbol	ef_str		6624276						
ANR	6624424	Symbol	ef_len		6624276						
ANR	6624425	Symbol	ef_crc		6624276						
ANR	6624426	Symbol	id		6624276						
ANR	6624427	Symbol	_zip_string_new		6624276						
ANR	6624428	Function	_zip_dirent_size	541:0:13484:14066							
ANR	6624429	FunctionDef	"_zip_dirent_size (FILE * f , zip_uint16_t flags , struct zip_error * error)"		6624428	0					
ANR	6624430	CompoundStatement		543:0:13567:14066	6624428	0					
ANR	6624431	IdentifierDeclStatement	zip_int32_t size ;	544:4:13573:13589	6624428	0	True				
ANR	6624432	IdentifierDecl	size		6624428	0					
ANR	6624433	IdentifierDeclType	zip_int32_t		6624428	0					
ANR	6624434	Identifier	size		6624428	1					
ANR	6624435	IdentifierDeclStatement	int local = ( flags & ZIP_EF_LOCAL ) ;	545:4:13595:13629	6624428	1	True				
ANR	6624436	IdentifierDecl	local = ( flags & ZIP_EF_LOCAL )		6624428	0					
ANR	6624437	IdentifierDeclType	int		6624428	0					
ANR	6624438	Identifier	local		6624428	1					
ANR	6624439	AssignmentExpression	local = ( flags & ZIP_EF_LOCAL )		6624428	2		=			
ANR	6624440	Identifier	local		6624428	0					
ANR	6624441	BitAndExpression	flags & ZIP_EF_LOCAL		6624428	1		&			
ANR	6624442	Identifier	flags		6624428	0					
ANR	6624443	Identifier	ZIP_EF_LOCAL		6624428	1					
ANR	6624444	IdentifierDeclStatement	int i ;	546:4:13635:13640	6624428	2	True				
ANR	6624445	IdentifierDecl	i		6624428	0					
ANR	6624446	IdentifierDeclType	int		6624428	0					
ANR	6624447	Identifier	i		6624428	1					
ANR	6624448	IdentifierDeclStatement	unsigned char b [ 6 ] ;	547:4:13646:13664	6624428	3	True				
ANR	6624449	IdentifierDecl	b [ 6 ]		6624428	0					
ANR	6624450	IdentifierDeclType	unsigned char [ 6 ]		6624428	0					
ANR	6624451	Identifier	b		6624428	1					
ANR	6624452	PrimaryExpression	6		6624428	2					
ANR	6624453	IdentifierDeclStatement	const unsigned char * p ;	548:4:13670:13692	6624428	4	True				
ANR	6624454	IdentifierDecl	* p		6624428	0					
ANR	6624455	IdentifierDeclType	const unsigned char *		6624428	0					
ANR	6624456	Identifier	p		6624428	1					
ANR	6624457	ExpressionStatement	size = local ? LENTRYSIZE : CDENTRYSIZE	550:4:13699:13738	6624428	5	True				
ANR	6624458	AssignmentExpression	size = local ? LENTRYSIZE : CDENTRYSIZE		6624428	0		=			
ANR	6624459	Identifier	size		6624428	0					
ANR	6624460	ConditionalExpression	local ? LENTRYSIZE : CDENTRYSIZE		6624428	1					
ANR	6624461	Condition	local		6624428	0					
ANR	6624462	Identifier	local		6624428	0					
ANR	6624463	Identifier	LENTRYSIZE		6624428	1					
ANR	6624464	Identifier	CDENTRYSIZE		6624428	2					
ANR	6624465	IfStatement	"if ( fseek ( f , local ? 26 : 28 , SEEK_CUR ) < 0 )"		6624428	6					
ANR	6624466	Condition	"fseek ( f , local ? 26 : 28 , SEEK_CUR ) < 0"	552:8:13749:13787	6624428	0	True				
ANR	6624467	RelationalExpression	"fseek ( f , local ? 26 : 28 , SEEK_CUR ) < 0"		6624428	0		<			
ANR	6624468	CallExpression	"fseek ( f , local ? 26 : 28 , SEEK_CUR )"		6624428	0					
ANR	6624469	Callee	fseek		6624428	0					
ANR	6624470	Identifier	fseek		6624428	0					
ANR	6624471	ArgumentList	f		6624428	1					
ANR	6624472	Argument	f		6624428	0					
ANR	6624473	Identifier	f		6624428	0					
ANR	6624474	Argument	local ? 26 : 28		6624428	1					
ANR	6624475	ConditionalExpression	local ? 26 : 28		6624428	0					
ANR	6624476	Condition	local		6624428	0					
ANR	6624477	Identifier	local		6624428	0					
ANR	6624478	PrimaryExpression	26		6624428	1					
ANR	6624479	PrimaryExpression	28		6624428	2					
ANR	6624480	Argument	SEEK_CUR		6624428	2					
ANR	6624481	Identifier	SEEK_CUR		6624428	0					
ANR	6624482	PrimaryExpression	0		6624428	1					
ANR	6624483	CompoundStatement		10:49:222:222	6624428	1					
ANR	6624484	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_SEEK , errno )"	553:1:13793:13834	6624428	0	True				
ANR	6624485	CallExpression	"_zip_error_set ( error , ZIP_ER_SEEK , errno )"		6624428	0					
ANR	6624486	Callee	_zip_error_set		6624428	0					
ANR	6624487	Identifier	_zip_error_set		6624428	0					
ANR	6624488	ArgumentList	error		6624428	1					
ANR	6624489	Argument	error		6624428	0					
ANR	6624490	Identifier	error		6624428	0					
ANR	6624491	Argument	ZIP_ER_SEEK		6624428	1					
ANR	6624492	Identifier	ZIP_ER_SEEK		6624428	0					
ANR	6624493	Argument	errno		6624428	2					
ANR	6624494	Identifier	errno		6624428	0					
ANR	6624495	ReturnStatement	return - 1 ;	554:1:13837:13846	6624428	1	True				
ANR	6624496	UnaryOperationExpression	- 1		6624428	0					
ANR	6624497	UnaryOperator	-		6624428	0					
ANR	6624498	PrimaryExpression	1		6624428	1					
ANR	6624499	IfStatement	"if ( fread ( b , ( local ? 4 : 6 ) , 1 , f ) != 1 )"		6624428	7					
ANR	6624500	Condition	"fread ( b , ( local ? 4 : 6 ) , 1 , f ) != 1"	557:8:13863:13898	6624428	0	True				
ANR	6624501	EqualityExpression	"fread ( b , ( local ? 4 : 6 ) , 1 , f ) != 1"		6624428	0		!=			
ANR	6624502	CallExpression	"fread ( b , ( local ? 4 : 6 ) , 1 , f )"		6624428	0					
ANR	6624503	Callee	fread		6624428	0					
ANR	6624504	Identifier	fread		6624428	0					
ANR	6624505	ArgumentList	b		6624428	1					
ANR	6624506	Argument	b		6624428	0					
ANR	6624507	Identifier	b		6624428	0					
ANR	6624508	Argument	local ? 4 : 6		6624428	1					
ANR	6624509	ConditionalExpression	local ? 4 : 6		6624428	0					
ANR	6624510	Condition	local		6624428	0					
ANR	6624511	Identifier	local		6624428	0					
ANR	6624512	PrimaryExpression	4		6624428	1					
ANR	6624513	PrimaryExpression	6		6624428	2					
ANR	6624514	Argument	1		6624428	2					
ANR	6624515	PrimaryExpression	1		6624428	0					
ANR	6624516	Argument	f		6624428	3					
ANR	6624517	Identifier	f		6624428	0					
ANR	6624518	PrimaryExpression	1		6624428	1					
ANR	6624519	CompoundStatement		15:46:333:333	6624428	1					
ANR	6624520	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	558:1:13904:13945	6624428	0	True				
ANR	6624521	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6624428	0					
ANR	6624522	Callee	_zip_error_set		6624428	0					
ANR	6624523	Identifier	_zip_error_set		6624428	0					
ANR	6624524	ArgumentList	error		6624428	1					
ANR	6624525	Argument	error		6624428	0					
ANR	6624526	Identifier	error		6624428	0					
ANR	6624527	Argument	ZIP_ER_READ		6624428	1					
ANR	6624528	Identifier	ZIP_ER_READ		6624428	0					
ANR	6624529	Argument	errno		6624428	2					
ANR	6624530	Identifier	errno		6624428	0					
ANR	6624531	ReturnStatement	return - 1 ;	559:1:13948:13957	6624428	1	True				
ANR	6624532	UnaryOperationExpression	- 1		6624428	0					
ANR	6624533	UnaryOperator	-		6624428	0					
ANR	6624534	PrimaryExpression	1		6624428	1					
ANR	6624535	ExpressionStatement	p = b	562:4:13970:13975	6624428	8	True				
ANR	6624536	AssignmentExpression	p = b		6624428	0		=			
ANR	6624537	Identifier	p		6624428	0					
ANR	6624538	Identifier	b		6624428	1					
ANR	6624539	ForStatement	for ( i = 0 ; i < ( local ? 2 : 3 ) ; i ++ )		6624428	9					
ANR	6624540	ForInit	i = 0 ;	563:9:13986:13989	6624428	0	True				
ANR	6624541	AssignmentExpression	i = 0		6624428	0		=			
ANR	6624542	Identifier	i		6624428	0					
ANR	6624543	PrimaryExpression	0		6624428	1					
ANR	6624544	Condition	i < ( local ? 2 : 3 )	563:14:13991:14007	6624428	1	True				
ANR	6624545	RelationalExpression	i < ( local ? 2 : 3 )		6624428	0		<			
ANR	6624546	Identifier	i		6624428	0					
ANR	6624547	ConditionalExpression	local ? 2 : 3		6624428	1					
ANR	6624548	Condition	local		6624428	0					
ANR	6624549	Identifier	local		6624428	0					
ANR	6624550	PrimaryExpression	2		6624428	1					
ANR	6624551	PrimaryExpression	3		6624428	2					
ANR	6624552	PostIncDecOperationExpression	i ++	563:33:14010:14012	6624428	2	True				
ANR	6624553	Identifier	i		6624428	0					
ANR	6624554	IncDec	++		6624428	1					
ANR	6624555	CompoundStatement		21:38:447:447	6624428	3					
ANR	6624556	ExpressionStatement	size += _zip_read2 ( & p )	564:1:14018:14040	6624428	0	True				
ANR	6624557	AssignmentExpression	size += _zip_read2 ( & p )		6624428	0		+=			
ANR	6624558	Identifier	size		6624428	0					
ANR	6624559	CallExpression	_zip_read2 ( & p )		6624428	1					
ANR	6624560	Callee	_zip_read2		6624428	0					
ANR	6624561	Identifier	_zip_read2		6624428	0					
ANR	6624562	ArgumentList	& p		6624428	1					
ANR	6624563	Argument	& p		6624428	0					
ANR	6624564	UnaryOperationExpression	& p		6624428	0					
ANR	6624565	UnaryOperator	&		6624428	0					
ANR	6624566	Identifier	p		6624428	1					
ANR	6624567	ReturnStatement	return size ;	567:4:14053:14064	6624428	10	True				
ANR	6624568	Identifier	size		6624428	0					
ANR	6624569	ReturnType	zip_int32_t		6624428	1					
ANR	6624570	Identifier	_zip_dirent_size		6624428	2					
ANR	6624571	ParameterList	"FILE * f , zip_uint16_t flags , struct zip_error * error"		6624428	3					
ANR	6624572	Parameter	FILE * f	542:17:13513:13519	6624428	0	True				
ANR	6624573	ParameterType	FILE *		6624428	0					
ANR	6624574	Identifier	f		6624428	1					
ANR	6624575	Parameter	zip_uint16_t flags	542:26:13522:13539	6624428	1	True				
ANR	6624576	ParameterType	zip_uint16_t		6624428	0					
ANR	6624577	Identifier	flags		6624428	1					
ANR	6624578	Parameter	struct zip_error * error	542:46:13542:13564	6624428	2	True				
ANR	6624579	ParameterType	struct zip_error *		6624428	0					
ANR	6624580	Identifier	error		6624428	1					
ANR	6624581	CFGEntryNode	ENTRY		6624428		True				
ANR	6624582	CFGExitNode	EXIT		6624428		True				
ANR	6624583	Symbol	b		6624428						
ANR	6624584	Symbol	CDENTRYSIZE		6624428						
ANR	6624585	Symbol	errno		6624428						
ANR	6624586	Symbol	SEEK_CUR		6624428						
ANR	6624587	Symbol	f		6624428						
ANR	6624588	Symbol	LENTRYSIZE		6624428						
ANR	6624589	Symbol	flags		6624428						
ANR	6624590	Symbol	i		6624428						
ANR	6624591	Symbol	ZIP_ER_SEEK		6624428						
ANR	6624592	Symbol	error		6624428						
ANR	6624593	Symbol	ZIP_ER_READ		6624428						
ANR	6624594	Symbol	fseek		6624428						
ANR	6624595	Symbol	local		6624428						
ANR	6624596	Symbol	fread		6624428						
ANR	6624597	Symbol	p		6624428						
ANR	6624598	Symbol	ZIP_EF_LOCAL		6624428						
ANR	6624599	Symbol	size		6624428						
ANR	6624600	Symbol	& p		6624428						
ANR	6624601	Symbol	_zip_read2		6624428						
ANR	6624602	Function	_zip_dirent_torrent_normalize	576:0:14153:15212							
ANR	6624603	FunctionDef	_zip_dirent_torrent_normalize (struct zip_dirent * de)		6624602	0					
ANR	6624604	CompoundStatement		578:0:14211:15212	6624602	0					
ANR	6624605	Statement	static	579:4:14217:14222	6624602	0	True				
ANR	6624606	IdentifierDeclStatement	struct tm torrenttime ;	579:11:14224:14245	6624602	1	True				
ANR	6624607	IdentifierDecl	torrenttime		6624602	0					
ANR	6624608	IdentifierDeclType	struct tm		6624602	0					
ANR	6624609	Identifier	torrenttime		6624602	1					
ANR	6624610	Statement	static	580:4:14251:14256	6624602	2	True				
ANR	6624611	IdentifierDeclStatement	time_t last_mod = 0 ;	580:11:14258:14277	6624602	3	True				
ANR	6624612	IdentifierDecl	last_mod = 0		6624602	0					
ANR	6624613	IdentifierDeclType	time_t		6624602	0					
ANR	6624614	Identifier	last_mod		6624602	1					
ANR	6624615	AssignmentExpression	last_mod = 0		6624602	2		=			
ANR	6624616	Identifier	last_mod		6624602	0					
ANR	6624617	PrimaryExpression	0		6624602	1					
ANR	6624618	Statement	undef	582:1:14281:14285	6624602	4	True				
ANR	6624619	Statement	HAVE_STRUCT_TM_TM_ZONE	582:7:14287:14308	6624602	5	True				
ANR	6624620	IfStatement	if ( last_mod == 0 )		6624602	6					
ANR	6624621	Condition	last_mod == 0	583:8:14318:14330	6624602	0	True				
ANR	6624622	EqualityExpression	last_mod == 0		6624602	0		==			
ANR	6624623	Identifier	last_mod		6624602	0					
ANR	6624624	PrimaryExpression	0		6624602	1					
ANR	6624625	CompoundStatement		9:1:167:179	6624602	1					
ANR	6624626	IdentifierDeclStatement	time_t now ;	585:1:14366:14376	6624602	0	True				
ANR	6624627	IdentifierDecl	now		6624602	0					
ANR	6624628	IdentifierDeclType	time_t		6624602	0					
ANR	6624629	Identifier	now		6624602	1					
ANR	6624630	IdentifierDeclStatement	struct tm * l ;	586:1:14379:14391	6624602	1	True				
ANR	6624631	IdentifierDecl	* l		6624602	0					
ANR	6624632	IdentifierDeclType	struct tm *		6624602	0					
ANR	6624633	Identifier	l		6624602	1					
ANR	6624634	ExpressionStatement	torrenttime . tm_sec = 0	589:1:14402:14424	6624602	2	True				
ANR	6624635	AssignmentExpression	torrenttime . tm_sec = 0		6624602	0		=			
ANR	6624636	MemberAccess	torrenttime . tm_sec		6624602	0					
ANR	6624637	Identifier	torrenttime		6624602	0					
ANR	6624638	Identifier	tm_sec		6624602	1					
ANR	6624639	PrimaryExpression	0		6624602	1					
ANR	6624640	ExpressionStatement	torrenttime . tm_min = 32	590:1:14427:14450	6624602	3	True				
ANR	6624641	AssignmentExpression	torrenttime . tm_min = 32		6624602	0		=			
ANR	6624642	MemberAccess	torrenttime . tm_min		6624602	0					
ANR	6624643	Identifier	torrenttime		6624602	0					
ANR	6624644	Identifier	tm_min		6624602	1					
ANR	6624645	PrimaryExpression	32		6624602	1					
ANR	6624646	ExpressionStatement	torrenttime . tm_hour = 23	591:1:14453:14477	6624602	4	True				
ANR	6624647	AssignmentExpression	torrenttime . tm_hour = 23		6624602	0		=			
ANR	6624648	MemberAccess	torrenttime . tm_hour		6624602	0					
ANR	6624649	Identifier	torrenttime		6624602	0					
ANR	6624650	Identifier	tm_hour		6624602	1					
ANR	6624651	PrimaryExpression	23		6624602	1					
ANR	6624652	ExpressionStatement	torrenttime . tm_mday = 24	592:1:14480:14504	6624602	5	True				
ANR	6624653	AssignmentExpression	torrenttime . tm_mday = 24		6624602	0		=			
ANR	6624654	MemberAccess	torrenttime . tm_mday		6624602	0					
ANR	6624655	Identifier	torrenttime		6624602	0					
ANR	6624656	Identifier	tm_mday		6624602	1					
ANR	6624657	PrimaryExpression	24		6624602	1					
ANR	6624658	ExpressionStatement	torrenttime . tm_mon = 11	593:1:14507:14530	6624602	6	True				
ANR	6624659	AssignmentExpression	torrenttime . tm_mon = 11		6624602	0		=			
ANR	6624660	MemberAccess	torrenttime . tm_mon		6624602	0					
ANR	6624661	Identifier	torrenttime		6624602	0					
ANR	6624662	Identifier	tm_mon		6624602	1					
ANR	6624663	PrimaryExpression	11		6624602	1					
ANR	6624664	ExpressionStatement	torrenttime . tm_year = 96	594:1:14533:14557	6624602	7	True				
ANR	6624665	AssignmentExpression	torrenttime . tm_year = 96		6624602	0		=			
ANR	6624666	MemberAccess	torrenttime . tm_year		6624602	0					
ANR	6624667	Identifier	torrenttime		6624602	0					
ANR	6624668	Identifier	tm_year		6624602	1					
ANR	6624669	PrimaryExpression	96		6624602	1					
ANR	6624670	ExpressionStatement	torrenttime . tm_wday = 0	595:1:14560:14583	6624602	8	True				
ANR	6624671	AssignmentExpression	torrenttime . tm_wday = 0		6624602	0		=			
ANR	6624672	MemberAccess	torrenttime . tm_wday		6624602	0					
ANR	6624673	Identifier	torrenttime		6624602	0					
ANR	6624674	Identifier	tm_wday		6624602	1					
ANR	6624675	PrimaryExpression	0		6624602	1					
ANR	6624676	ExpressionStatement	torrenttime . tm_yday = 0	596:1:14586:14609	6624602	9	True				
ANR	6624677	AssignmentExpression	torrenttime . tm_yday = 0		6624602	0		=			
ANR	6624678	MemberAccess	torrenttime . tm_yday		6624602	0					
ANR	6624679	Identifier	torrenttime		6624602	0					
ANR	6624680	Identifier	tm_yday		6624602	1					
ANR	6624681	PrimaryExpression	0		6624602	1					
ANR	6624682	ExpressionStatement	torrenttime . tm_isdst = 0	597:1:14612:14636	6624602	10	True				
ANR	6624683	AssignmentExpression	torrenttime . tm_isdst = 0		6624602	0		=			
ANR	6624684	MemberAccess	torrenttime . tm_isdst		6624602	0					
ANR	6624685	Identifier	torrenttime		6624602	0					
ANR	6624686	Identifier	tm_isdst		6624602	1					
ANR	6624687	PrimaryExpression	0		6624602	1					
ANR	6624688	ExpressionStatement	time ( & now )	600:1:14670:14680	6624602	11	True				
ANR	6624689	CallExpression	time ( & now )		6624602	0					
ANR	6624690	Callee	time		6624602	0					
ANR	6624691	Identifier	time		6624602	0					
ANR	6624692	ArgumentList	& now		6624602	1					
ANR	6624693	Argument	& now		6624602	0					
ANR	6624694	UnaryOperationExpression	& now		6624602	0					
ANR	6624695	UnaryOperator	&		6624602	0					
ANR	6624696	Identifier	now		6624602	1					
ANR	6624697	ExpressionStatement	l = localtime ( & now )	601:1:14683:14702	6624602	12	True				
ANR	6624698	AssignmentExpression	l = localtime ( & now )		6624602	0		=			
ANR	6624699	Identifier	l		6624602	0					
ANR	6624700	CallExpression	localtime ( & now )		6624602	1					
ANR	6624701	Callee	localtime		6624602	0					
ANR	6624702	Identifier	localtime		6624602	0					
ANR	6624703	ArgumentList	& now		6624602	1					
ANR	6624704	Argument	& now		6624602	0					
ANR	6624705	UnaryOperationExpression	& now		6624602	0					
ANR	6624706	UnaryOperator	&		6624602	0					
ANR	6624707	Identifier	now		6624602	1					
ANR	6624708	ExpressionStatement	torrenttime . tm_gmtoff = l -> tm_gmtoff	602:1:14705:14741	6624602	13	True				
ANR	6624709	AssignmentExpression	torrenttime . tm_gmtoff = l -> tm_gmtoff		6624602	0		=			
ANR	6624710	MemberAccess	torrenttime . tm_gmtoff		6624602	0					
ANR	6624711	Identifier	torrenttime		6624602	0					
ANR	6624712	Identifier	tm_gmtoff		6624602	1					
ANR	6624713	PtrMemberAccess	l -> tm_gmtoff		6624602	1					
ANR	6624714	Identifier	l		6624602	0					
ANR	6624715	Identifier	tm_gmtoff		6624602	1					
ANR	6624716	ExpressionStatement	torrenttime . tm_zone = l -> tm_zone	603:1:14744:14776	6624602	14	True				
ANR	6624717	AssignmentExpression	torrenttime . tm_zone = l -> tm_zone		6624602	0		=			
ANR	6624718	MemberAccess	torrenttime . tm_zone		6624602	0					
ANR	6624719	Identifier	torrenttime		6624602	0					
ANR	6624720	Identifier	tm_zone		6624602	1					
ANR	6624721	PtrMemberAccess	l -> tm_zone		6624602	1					
ANR	6624722	Identifier	l		6624602	0					
ANR	6624723	Identifier	tm_zone		6624602	1					
ANR	6624724	ExpressionStatement	last_mod = mktime ( & torrenttime )	606:1:14787:14818	6624602	15	True				
ANR	6624725	AssignmentExpression	last_mod = mktime ( & torrenttime )		6624602	0		=			
ANR	6624726	Identifier	last_mod		6624602	0					
ANR	6624727	CallExpression	mktime ( & torrenttime )		6624602	1					
ANR	6624728	Callee	mktime		6624602	0					
ANR	6624729	Identifier	mktime		6624602	0					
ANR	6624730	ArgumentList	& torrenttime		6624602	1					
ANR	6624731	Argument	& torrenttime		6624602	0					
ANR	6624732	UnaryOperationExpression	& torrenttime		6624602	0					
ANR	6624733	UnaryOperator	&		6624602	0					
ANR	6624734	Identifier	torrenttime		6624602	1					
ANR	6624735	ExpressionStatement	de -> version_madeby = 0	609:4:14835:14857	6624602	7	True				
ANR	6624736	AssignmentExpression	de -> version_madeby = 0		6624602	0		=			
ANR	6624737	PtrMemberAccess	de -> version_madeby		6624602	0					
ANR	6624738	Identifier	de		6624602	0					
ANR	6624739	Identifier	version_madeby		6624602	1					
ANR	6624740	PrimaryExpression	0		6624602	1					
ANR	6624741	ExpressionStatement	de -> version_needed = 20	610:4:14863:14886	6624602	8	True				
ANR	6624742	AssignmentExpression	de -> version_needed = 20		6624602	0		=			
ANR	6624743	PtrMemberAccess	de -> version_needed		6624602	0					
ANR	6624744	Identifier	de		6624602	0					
ANR	6624745	Identifier	version_needed		6624602	1					
ANR	6624746	PrimaryExpression	20		6624602	1					
ANR	6624747	ExpressionStatement	de -> bitflags = 2	611:4:14902:14918	6624602	9	True				
ANR	6624748	AssignmentExpression	de -> bitflags = 2		6624602	0		=			
ANR	6624749	PtrMemberAccess	de -> bitflags		6624602	0					
ANR	6624750	Identifier	de		6624602	0					
ANR	6624751	Identifier	bitflags		6624602	1					
ANR	6624752	PrimaryExpression	2		6624602	1					
ANR	6624753	ExpressionStatement	de -> comp_method = ZIP_CM_DEFLATE	612:4:14950:14982	6624602	10	True				
ANR	6624754	AssignmentExpression	de -> comp_method = ZIP_CM_DEFLATE		6624602	0		=			
ANR	6624755	PtrMemberAccess	de -> comp_method		6624602	0					
ANR	6624756	Identifier	de		6624602	0					
ANR	6624757	Identifier	comp_method		6624602	1					
ANR	6624758	Identifier	ZIP_CM_DEFLATE		6624602	1					
ANR	6624759	ExpressionStatement	de -> last_mod = last_mod	613:4:14988:15011	6624602	11	True				
ANR	6624760	AssignmentExpression	de -> last_mod = last_mod		6624602	0		=			
ANR	6624761	PtrMemberAccess	de -> last_mod		6624602	0					
ANR	6624762	Identifier	de		6624602	0					
ANR	6624763	Identifier	last_mod		6624602	1					
ANR	6624764	Identifier	last_mod		6624602	1					
ANR	6624765	ExpressionStatement	de -> disk_number = 0	615:4:15018:15037	6624602	12	True				
ANR	6624766	AssignmentExpression	de -> disk_number = 0		6624602	0		=			
ANR	6624767	PtrMemberAccess	de -> disk_number		6624602	0					
ANR	6624768	Identifier	de		6624602	0					
ANR	6624769	Identifier	disk_number		6624602	1					
ANR	6624770	PrimaryExpression	0		6624602	1					
ANR	6624771	ExpressionStatement	de -> int_attrib = 0	616:4:15043:15061	6624602	13	True				
ANR	6624772	AssignmentExpression	de -> int_attrib = 0		6624602	0		=			
ANR	6624773	PtrMemberAccess	de -> int_attrib		6624602	0					
ANR	6624774	Identifier	de		6624602	0					
ANR	6624775	Identifier	int_attrib		6624602	1					
ANR	6624776	PrimaryExpression	0		6624602	1					
ANR	6624777	ExpressionStatement	de -> ext_attrib = 0	617:4:15067:15085	6624602	14	True				
ANR	6624778	AssignmentExpression	de -> ext_attrib = 0		6624602	0		=			
ANR	6624779	PtrMemberAccess	de -> ext_attrib		6624602	0					
ANR	6624780	Identifier	de		6624602	0					
ANR	6624781	Identifier	ext_attrib		6624602	1					
ANR	6624782	PrimaryExpression	0		6624602	1					
ANR	6624783	ExpressionStatement	_zip_ef_free ( de -> extra_fields )	619:4:15092:15122	6624602	15	True				
ANR	6624784	CallExpression	_zip_ef_free ( de -> extra_fields )		6624602	0					
ANR	6624785	Callee	_zip_ef_free		6624602	0					
ANR	6624786	Identifier	_zip_ef_free		6624602	0					
ANR	6624787	ArgumentList	de -> extra_fields		6624602	1					
ANR	6624788	Argument	de -> extra_fields		6624602	0					
ANR	6624789	PtrMemberAccess	de -> extra_fields		6624602	0					
ANR	6624790	Identifier	de		6624602	0					
ANR	6624791	Identifier	extra_fields		6624602	1					
ANR	6624792	ExpressionStatement	de -> extra_fields = NULL	620:4:15128:15151	6624602	16	True				
ANR	6624793	AssignmentExpression	de -> extra_fields = NULL		6624602	0		=			
ANR	6624794	PtrMemberAccess	de -> extra_fields		6624602	0					
ANR	6624795	Identifier	de		6624602	0					
ANR	6624796	Identifier	extra_fields		6624602	1					
ANR	6624797	Identifier	NULL		6624602	1					
ANR	6624798	ExpressionStatement	_zip_string_free ( de -> comment )	621:4:15157:15186	6624602	17	True				
ANR	6624799	CallExpression	_zip_string_free ( de -> comment )		6624602	0					
ANR	6624800	Callee	_zip_string_free		6624602	0					
ANR	6624801	Identifier	_zip_string_free		6624602	0					
ANR	6624802	ArgumentList	de -> comment		6624602	1					
ANR	6624803	Argument	de -> comment		6624602	0					
ANR	6624804	PtrMemberAccess	de -> comment		6624602	0					
ANR	6624805	Identifier	de		6624602	0					
ANR	6624806	Identifier	comment		6624602	1					
ANR	6624807	ExpressionStatement	de -> comment = NULL	622:4:15192:15210	6624602	18	True				
ANR	6624808	AssignmentExpression	de -> comment = NULL		6624602	0		=			
ANR	6624809	PtrMemberAccess	de -> comment		6624602	0					
ANR	6624810	Identifier	de		6624602	0					
ANR	6624811	Identifier	comment		6624602	1					
ANR	6624812	Identifier	NULL		6624602	1					
ANR	6624813	ReturnType	void		6624602	1					
ANR	6624814	Identifier	_zip_dirent_torrent_normalize		6624602	2					
ANR	6624815	ParameterList	struct zip_dirent * de		6624602	3					
ANR	6624816	Parameter	struct zip_dirent * de	577:30:14188:14208	6624602	0	True				
ANR	6624817	ParameterType	struct zip_dirent *		6624602	0					
ANR	6624818	Identifier	de		6624602	1					
ANR	6624819	CFGEntryNode	ENTRY		6624602		True				
ANR	6624820	CFGExitNode	EXIT		6624602		True				
ANR	6624821	Symbol	localtime		6624602						
ANR	6624822	Symbol	de -> extra_fields		6624602						
ANR	6624823	Symbol	de		6624602						
ANR	6624824	Symbol	torrenttime . tm_sec		6624602						
ANR	6624825	Symbol	torrenttime . tm_min		6624602						
ANR	6624826	Symbol	torrenttime		6624602						
ANR	6624827	Symbol	de -> comp_method		6624602						
ANR	6624828	Symbol	l -> tm_zone		6624602						
ANR	6624829	Symbol	torrenttime . tm_mday		6624602						
ANR	6624830	Symbol	torrenttime . tm_zone		6624602						
ANR	6624831	Symbol	ZIP_CM_DEFLATE		6624602						
ANR	6624832	Symbol	de -> int_attrib		6624602						
ANR	6624833	Symbol	de -> comment		6624602						
ANR	6624834	Symbol	last_mod		6624602						
ANR	6624835	Symbol	de -> version_needed		6624602						
ANR	6624836	Symbol	de -> last_mod		6624602						
ANR	6624837	Symbol	de -> ext_attrib		6624602						
ANR	6624838	Symbol	now		6624602						
ANR	6624839	Symbol	torrenttime . tm_hour		6624602						
ANR	6624840	Symbol	& torrenttime		6624602						
ANR	6624841	Symbol	de -> disk_number		6624602						
ANR	6624842	Symbol	NULL		6624602						
ANR	6624843	Symbol	torrenttime . tm_yday		6624602						
ANR	6624844	Symbol	* de		6624602						
ANR	6624845	Symbol	l -> tm_gmtoff		6624602						
ANR	6624846	Symbol	torrenttime . tm_isdst		6624602						
ANR	6624847	Symbol	l		6624602						
ANR	6624848	Symbol	torrenttime . tm_gmtoff		6624602						
ANR	6624849	Symbol	mktime		6624602						
ANR	6624850	Symbol	de -> version_madeby		6624602						
ANR	6624851	Symbol	* l		6624602						
ANR	6624852	Symbol	torrenttime . tm_wday		6624602						
ANR	6624853	Symbol	& now		6624602						
ANR	6624854	Symbol	de -> bitflags		6624602						
ANR	6624855	Symbol	torrenttime . tm_year		6624602						
ANR	6624856	Symbol	torrenttime . tm_mon		6624602						
ANR	6624857	Function	_zip_dirent_write	637:0:15618:19655							
ANR	6624858	FunctionDef	"_zip_dirent_write (struct zip_dirent * de , FILE * fp , zip_flags_t flags , struct zip_error * error)"		6624857	0					
ANR	6624859	CompoundStatement		639:0:15717:19655	6624857	0					
ANR	6624860	IdentifierDeclStatement	"unsigned short dostime , dosdate ;"	640:4:15723:15754	6624857	0	True				
ANR	6624861	IdentifierDecl	dostime		6624857	0					
ANR	6624862	IdentifierDeclType	unsigned short		6624857	0					
ANR	6624863	Identifier	dostime		6624857	1					
ANR	6624864	IdentifierDecl	dosdate		6624857	1					
ANR	6624865	IdentifierDeclType	unsigned short		6624857	0					
ANR	6624866	Identifier	dosdate		6624857	1					
ANR	6624867	IdentifierDeclStatement	"enum zip_encoding_type com_enc , name_enc ;"	641:4:15760:15800	6624857	1	True				
ANR	6624868	IdentifierDecl	com_enc		6624857	0					
ANR	6624869	IdentifierDeclType	enum zip_encoding_type		6624857	0					
ANR	6624870	Identifier	com_enc		6624857	1					
ANR	6624871	IdentifierDecl	name_enc		6624857	1					
ANR	6624872	IdentifierDeclType	enum zip_encoding_type		6624857	0					
ANR	6624873	Identifier	name_enc		6624857	1					
ANR	6624874	IdentifierDeclStatement	struct zip_extra_field * ef ;	642:4:15806:15832	6624857	2	True				
ANR	6624875	IdentifierDecl	* ef		6624857	0					
ANR	6624876	IdentifierDeclType	struct zip_extra_field *		6624857	0					
ANR	6624877	Identifier	ef		6624857	1					
ANR	6624878	IdentifierDeclStatement	"zip_uint8_t ef_zip64 [ 24 ] , * ef_zip64_p ;"	643:4:15838:15875	6624857	3	True				
ANR	6624879	IdentifierDecl	ef_zip64 [ 24 ]		6624857	0					
ANR	6624880	IdentifierDeclType	zip_uint8_t [ 24 ]		6624857	0					
ANR	6624881	Identifier	ef_zip64		6624857	1					
ANR	6624882	PrimaryExpression	24		6624857	2					
ANR	6624883	IdentifierDecl	* ef_zip64_p		6624857	1					
ANR	6624884	IdentifierDeclType	zip_uint8_t *		6624857	0					
ANR	6624885	Identifier	ef_zip64_p		6624857	1					
ANR	6624886	IdentifierDeclStatement	int is_zip64 ;	644:4:15881:15893	6624857	4	True				
ANR	6624887	IdentifierDecl	is_zip64		6624857	0					
ANR	6624888	IdentifierDeclType	int		6624857	0					
ANR	6624889	Identifier	is_zip64		6624857	1					
ANR	6624890	IdentifierDeclStatement	int is_really_zip64 ;	645:4:15899:15918	6624857	5	True				
ANR	6624891	IdentifierDecl	is_really_zip64		6624857	0					
ANR	6624892	IdentifierDeclType	int		6624857	0					
ANR	6624893	Identifier	is_really_zip64		6624857	1					
ANR	6624894	ExpressionStatement	ef = NULL	647:4:15925:15934	6624857	6	True				
ANR	6624895	AssignmentExpression	ef = NULL		6624857	0		=			
ANR	6624896	Identifier	ef		6624857	0					
ANR	6624897	Identifier	NULL		6624857	1					
ANR	6624898	ExpressionStatement	is_zip64 = 0	649:4:15941:15953	6624857	7	True				
ANR	6624899	AssignmentExpression	is_zip64 = 0		6624857	0		=			
ANR	6624900	Identifier	is_zip64		6624857	0					
ANR	6624901	PrimaryExpression	0		6624857	1					
ANR	6624902	ExpressionStatement	"fwrite ( ( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC , 1 , 4 , fp )"	651:4:15960:16030	6624857	8	True				
ANR	6624903	CallExpression	"fwrite ( ( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC , 1 , 4 , fp )"		6624857	0					
ANR	6624904	Callee	fwrite		6624857	0					
ANR	6624905	Identifier	fwrite		6624857	0					
ANR	6624906	ArgumentList	( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC		6624857	1					
ANR	6624907	Argument	( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC		6624857	0					
ANR	6624908	ConditionalExpression	( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC		6624857	0					
ANR	6624909	Condition	flags & ZIP_FL_LOCAL		6624857	0					
ANR	6624910	BitAndExpression	flags & ZIP_FL_LOCAL		6624857	0		&			
ANR	6624911	Identifier	flags		6624857	0					
ANR	6624912	Identifier	ZIP_FL_LOCAL		6624857	1					
ANR	6624913	Identifier	LOCAL_MAGIC		6624857	1					
ANR	6624914	Identifier	CENTRAL_MAGIC		6624857	2					
ANR	6624915	Argument	1		6624857	1					
ANR	6624916	PrimaryExpression	1		6624857	0					
ANR	6624917	Argument	4		6624857	2					
ANR	6624918	PrimaryExpression	4		6624857	0					
ANR	6624919	Argument	fp		6624857	3					
ANR	6624920	Identifier	fp		6624857	0					
ANR	6624921	ExpressionStatement	"name_enc = _zip_guess_encoding ( de -> filename , ZIP_ENCODING_UNKNOWN )"	653:4:16037:16103	6624857	9	True				
ANR	6624922	AssignmentExpression	"name_enc = _zip_guess_encoding ( de -> filename , ZIP_ENCODING_UNKNOWN )"		6624857	0		=			
ANR	6624923	Identifier	name_enc		6624857	0					
ANR	6624924	CallExpression	"_zip_guess_encoding ( de -> filename , ZIP_ENCODING_UNKNOWN )"		6624857	1					
ANR	6624925	Callee	_zip_guess_encoding		6624857	0					
ANR	6624926	Identifier	_zip_guess_encoding		6624857	0					
ANR	6624927	ArgumentList	de -> filename		6624857	1					
ANR	6624928	Argument	de -> filename		6624857	0					
ANR	6624929	PtrMemberAccess	de -> filename		6624857	0					
ANR	6624930	Identifier	de		6624857	0					
ANR	6624931	Identifier	filename		6624857	1					
ANR	6624932	Argument	ZIP_ENCODING_UNKNOWN		6624857	1					
ANR	6624933	Identifier	ZIP_ENCODING_UNKNOWN		6624857	0					
ANR	6624934	ExpressionStatement	"com_enc = _zip_guess_encoding ( de -> comment , ZIP_ENCODING_UNKNOWN )"	654:4:16109:16173	6624857	10	True				
ANR	6624935	AssignmentExpression	"com_enc = _zip_guess_encoding ( de -> comment , ZIP_ENCODING_UNKNOWN )"		6624857	0		=			
ANR	6624936	Identifier	com_enc		6624857	0					
ANR	6624937	CallExpression	"_zip_guess_encoding ( de -> comment , ZIP_ENCODING_UNKNOWN )"		6624857	1					
ANR	6624938	Callee	_zip_guess_encoding		6624857	0					
ANR	6624939	Identifier	_zip_guess_encoding		6624857	0					
ANR	6624940	ArgumentList	de -> comment		6624857	1					
ANR	6624941	Argument	de -> comment		6624857	0					
ANR	6624942	PtrMemberAccess	de -> comment		6624857	0					
ANR	6624943	Identifier	de		6624857	0					
ANR	6624944	Identifier	comment		6624857	1					
ANR	6624945	Argument	ZIP_ENCODING_UNKNOWN		6624857	1					
ANR	6624946	Identifier	ZIP_ENCODING_UNKNOWN		6624857	0					
ANR	6624947	IfStatement	if ( ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII ) || ( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN ) )		6624857	11					
ANR	6624948	Condition	( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII ) || ( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN )	656:8:16184:16410	6624857	0	True				
ANR	6624949	OrExpression	( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII ) || ( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN )		6624857	0		||			
ANR	6624950	AndExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII		6624857	0		&&			
ANR	6624951	EqualityExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	0		==			
ANR	6624952	Identifier	name_enc		6624857	0					
ANR	6624953	Identifier	ZIP_ENCODING_UTF8_KNOWN		6624857	1					
ANR	6624954	EqualityExpression	com_enc == ZIP_ENCODING_ASCII		6624857	1		==			
ANR	6624955	Identifier	com_enc		6624857	0					
ANR	6624956	Identifier	ZIP_ENCODING_ASCII		6624857	1					
ANR	6624957	OrExpression	( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN )		6624857	1		||			
ANR	6624958	AndExpression	name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	0		&&			
ANR	6624959	EqualityExpression	name_enc == ZIP_ENCODING_ASCII		6624857	0		==			
ANR	6624960	Identifier	name_enc		6624857	0					
ANR	6624961	Identifier	ZIP_ENCODING_ASCII		6624857	1					
ANR	6624962	EqualityExpression	com_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	1		==			
ANR	6624963	Identifier	com_enc		6624857	0					
ANR	6624964	Identifier	ZIP_ENCODING_UTF8_KNOWN		6624857	1					
ANR	6624965	AndExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	1		&&			
ANR	6624966	EqualityExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	0		==			
ANR	6624967	Identifier	name_enc		6624857	0					
ANR	6624968	Identifier	ZIP_ENCODING_UTF8_KNOWN		6624857	1					
ANR	6624969	EqualityExpression	com_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	1		==			
ANR	6624970	Identifier	com_enc		6624857	0					
ANR	6624971	Identifier	ZIP_ENCODING_UTF8_KNOWN		6624857	1					
ANR	6624972	ExpressionStatement	de -> bitflags |= ZIP_GPBF_ENCODING_UTF_8	659:1:16414:16453	6624857	1	True				
ANR	6624973	AssignmentExpression	de -> bitflags |= ZIP_GPBF_ENCODING_UTF_8		6624857	0		|=			
ANR	6624974	PtrMemberAccess	de -> bitflags		6624857	0					
ANR	6624975	Identifier	de		6624857	0					
ANR	6624976	Identifier	bitflags		6624857	1					
ANR	6624977	Identifier	ZIP_GPBF_ENCODING_UTF_8		6624857	1					
ANR	6624978	ElseStatement	else		6624857	0					
ANR	6624979	CompoundStatement		22:9:746:746	6624857	0					
ANR	6624980	ExpressionStatement	de -> bitflags &= ~ZIP_GPBF_ENCODING_UTF_8	661:1:16467:16507	6624857	0	True				
ANR	6624981	AssignmentExpression	de -> bitflags &= ~ZIP_GPBF_ENCODING_UTF_8		6624857	0		&=			
ANR	6624982	PtrMemberAccess	de -> bitflags		6624857	0					
ANR	6624983	Identifier	de		6624857	0					
ANR	6624984	Identifier	bitflags		6624857	1					
ANR	6624985	Identifier	~ZIP_GPBF_ENCODING_UTF_8		6624857	1					
ANR	6624986	IfStatement	if ( name_enc == ZIP_ENCODING_UTF8_KNOWN )		6624857	1					
ANR	6624987	Condition	name_enc == ZIP_ENCODING_UTF8_KNOWN	662:5:16514:16548	6624857	0	True				
ANR	6624988	EqualityExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	0		==			
ANR	6624989	Identifier	name_enc		6624857	0					
ANR	6624990	Identifier	ZIP_ENCODING_UTF8_KNOWN		6624857	1					
ANR	6624991	CompoundStatement		24:42:833:833	6624857	1					
ANR	6624992	ExpressionStatement	"ef = _zip_ef_utf8 ( ZIP_EF_UTF_8_NAME , de -> filename , error )"	663:5:16558:16615	6624857	0	True				
ANR	6624993	AssignmentExpression	"ef = _zip_ef_utf8 ( ZIP_EF_UTF_8_NAME , de -> filename , error )"		6624857	0		=			
ANR	6624994	Identifier	ef		6624857	0					
ANR	6624995	CallExpression	"_zip_ef_utf8 ( ZIP_EF_UTF_8_NAME , de -> filename , error )"		6624857	1					
ANR	6624996	Callee	_zip_ef_utf8		6624857	0					
ANR	6624997	Identifier	_zip_ef_utf8		6624857	0					
ANR	6624998	ArgumentList	ZIP_EF_UTF_8_NAME		6624857	1					
ANR	6624999	Argument	ZIP_EF_UTF_8_NAME		6624857	0					
ANR	6625000	Identifier	ZIP_EF_UTF_8_NAME		6624857	0					
ANR	6625001	Argument	de -> filename		6624857	1					
ANR	6625002	PtrMemberAccess	de -> filename		6624857	0					
ANR	6625003	Identifier	de		6624857	0					
ANR	6625004	Identifier	filename		6624857	1					
ANR	6625005	Argument	error		6624857	2					
ANR	6625006	Identifier	error		6624857	0					
ANR	6625007	IfStatement	if ( ef == NULL )		6624857	1					
ANR	6625008	Condition	ef == NULL	664:9:16626:16635	6624857	0	True				
ANR	6625009	EqualityExpression	ef == NULL		6624857	0		==			
ANR	6625010	Identifier	ef		6624857	0					
ANR	6625011	Identifier	NULL		6624857	1					
ANR	6625012	ReturnStatement	return - 1 ;	665:2:16640:16649	6624857	1	True				
ANR	6625013	UnaryOperationExpression	- 1		6624857	0					
ANR	6625014	UnaryOperator	-		6624857	0					
ANR	6625015	PrimaryExpression	1		6624857	1					
ANR	6625016	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 && com_enc == ZIP_ENCODING_UTF8_KNOWN )		6624857	2					
ANR	6625017	Condition	( flags & ZIP_FL_LOCAL ) == 0 && com_enc == ZIP_ENCODING_UTF8_KNOWN	667:5:16659:16723	6624857	0	True				
ANR	6625018	AndExpression	( flags & ZIP_FL_LOCAL ) == 0 && com_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	0		&&			
ANR	6625019	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6624857	0		==			
ANR	6625020	BitAndExpression	flags & ZIP_FL_LOCAL		6624857	0		&			
ANR	6625021	Identifier	flags		6624857	0					
ANR	6625022	Identifier	ZIP_FL_LOCAL		6624857	1					
ANR	6625023	PrimaryExpression	0		6624857	1					
ANR	6625024	EqualityExpression	com_enc == ZIP_ENCODING_UTF8_KNOWN		6624857	1		==			
ANR	6625025	Identifier	com_enc		6624857	0					
ANR	6625026	Identifier	ZIP_ENCODING_UTF8_KNOWN		6624857	1					
ANR	6625027	CompoundStatement		30:5:1014:1098	6624857	1					
ANR	6625028	IdentifierDeclStatement	"struct zip_extra_field * ef2 = _zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error ) ;"	668:5:16732:16816	6624857	0	True				
ANR	6625029	IdentifierDecl	"* ef2 = _zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error )"		6624857	0					
ANR	6625030	IdentifierDeclType	struct zip_extra_field *		6624857	0					
ANR	6625031	Identifier	ef2		6624857	1					
ANR	6625032	AssignmentExpression	"* ef2 = _zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error )"		6624857	2		=			
ANR	6625033	Identifier	ef2		6624857	0					
ANR	6625034	CallExpression	"_zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error )"		6624857	1					
ANR	6625035	Callee	_zip_ef_utf8		6624857	0					
ANR	6625036	Identifier	_zip_ef_utf8		6624857	0					
ANR	6625037	ArgumentList	ZIP_EF_UTF_8_COMMENT		6624857	1					
ANR	6625038	Argument	ZIP_EF_UTF_8_COMMENT		6624857	0					
ANR	6625039	Identifier	ZIP_EF_UTF_8_COMMENT		6624857	0					
ANR	6625040	Argument	de -> comment		6624857	1					
ANR	6625041	PtrMemberAccess	de -> comment		6624857	0					
ANR	6625042	Identifier	de		6624857	0					
ANR	6625043	Identifier	comment		6624857	1					
ANR	6625044	Argument	error		6624857	2					
ANR	6625045	Identifier	error		6624857	0					
ANR	6625046	IfStatement	if ( ef2 == NULL )		6624857	1					
ANR	6625047	Condition	ef2 == NULL	669:9:16827:16837	6624857	0	True				
ANR	6625048	EqualityExpression	ef2 == NULL		6624857	0		==			
ANR	6625049	Identifier	ef2		6624857	0					
ANR	6625050	Identifier	NULL		6624857	1					
ANR	6625051	CompoundStatement		31:22:1122:1122	6624857	1					
ANR	6625052	ExpressionStatement	_zip_ef_free ( ef )	670:2:16844:16860	6624857	0	True				
ANR	6625053	CallExpression	_zip_ef_free ( ef )		6624857	0					
ANR	6625054	Callee	_zip_ef_free		6624857	0					
ANR	6625055	Identifier	_zip_ef_free		6624857	0					
ANR	6625056	ArgumentList	ef		6624857	1					
ANR	6625057	Argument	ef		6624857	0					
ANR	6625058	Identifier	ef		6624857	0					
ANR	6625059	ReturnStatement	return - 1 ;	671:2:16864:16873	6624857	1	True				
ANR	6625060	UnaryOperationExpression	- 1		6624857	0					
ANR	6625061	UnaryOperator	-		6624857	0					
ANR	6625062	PrimaryExpression	1		6624857	1					
ANR	6625063	ExpressionStatement	ef2 -> next = ef	673:5:16887:16901	6624857	2	True				
ANR	6625064	AssignmentExpression	ef2 -> next = ef		6624857	0		=			
ANR	6625065	PtrMemberAccess	ef2 -> next		6624857	0					
ANR	6625066	Identifier	ef2		6624857	0					
ANR	6625067	Identifier	next		6624857	1					
ANR	6625068	Identifier	ef		6624857	1					
ANR	6625069	ExpressionStatement	ef = ef2	674:5:16908:16916	6624857	3	True				
ANR	6625070	AssignmentExpression	ef = ef2		6624857	0		=			
ANR	6625071	Identifier	ef		6624857	0					
ANR	6625072	Identifier	ef2		6624857	1					
ANR	6625073	ExpressionStatement	ef_zip64_p = ef_zip64	678:4:16932:16953	6624857	12	True				
ANR	6625074	AssignmentExpression	ef_zip64_p = ef_zip64		6624857	0		=			
ANR	6625075	Identifier	ef_zip64_p		6624857	0					
ANR	6625076	Identifier	ef_zip64		6624857	1					
ANR	6625077	IfStatement	if ( flags & ZIP_FL_LOCAL )		6624857	13					
ANR	6625078	Condition	flags & ZIP_FL_LOCAL	679:8:16963:16982	6624857	0	True				
ANR	6625079	BitAndExpression	flags & ZIP_FL_LOCAL		6624857	0		&			
ANR	6625080	Identifier	flags		6624857	0					
ANR	6625081	Identifier	ZIP_FL_LOCAL		6624857	1					
ANR	6625082	CompoundStatement		41:30:1267:1267	6624857	1					
ANR	6625083	IfStatement	if ( ( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX )		6624857	0					
ANR	6625084	Condition	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX	680:5:16992:17089	6624857	0	True				
ANR	6625085	OrExpression	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX		6624857	0		||			
ANR	6625086	BitAndExpression	flags & ZIP_FL_FORCE_ZIP64		6624857	0		&			
ANR	6625087	Identifier	flags		6624857	0					
ANR	6625088	Identifier	ZIP_FL_FORCE_ZIP64		6624857	1					
ANR	6625089	OrExpression	de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX		6624857	1		||			
ANR	6625090	RelationalExpression	de -> comp_size > ZIP_UINT32_MAX		6624857	0		>			
ANR	6625091	PtrMemberAccess	de -> comp_size		6624857	0					
ANR	6625092	Identifier	de		6624857	0					
ANR	6625093	Identifier	comp_size		6624857	1					
ANR	6625094	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625095	RelationalExpression	de -> uncomp_size > ZIP_UINT32_MAX		6624857	1		>			
ANR	6625096	PtrMemberAccess	de -> uncomp_size		6624857	0					
ANR	6625097	Identifier	de		6624857	0					
ANR	6625098	Identifier	uncomp_size		6624857	1					
ANR	6625099	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625100	CompoundStatement		42:105:1374:1374	6624857	1					
ANR	6625101	ExpressionStatement	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"	681:5:17099:17137	6624857	0	True				
ANR	6625102	CallExpression	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"		6624857	0					
ANR	6625103	Callee	_zip_poke8		6624857	0					
ANR	6625104	Identifier	_zip_poke8		6624857	0					
ANR	6625105	ArgumentList	de -> comp_size		6624857	1					
ANR	6625106	Argument	de -> comp_size		6624857	0					
ANR	6625107	PtrMemberAccess	de -> comp_size		6624857	0					
ANR	6625108	Identifier	de		6624857	0					
ANR	6625109	Identifier	comp_size		6624857	1					
ANR	6625110	Argument	& ef_zip64_p		6624857	1					
ANR	6625111	UnaryOperationExpression	& ef_zip64_p		6624857	0					
ANR	6625112	UnaryOperator	&		6624857	0					
ANR	6625113	Identifier	ef_zip64_p		6624857	1					
ANR	6625114	ExpressionStatement	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"	682:5:17144:17184	6624857	1	True				
ANR	6625115	CallExpression	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"		6624857	0					
ANR	6625116	Callee	_zip_poke8		6624857	0					
ANR	6625117	Identifier	_zip_poke8		6624857	0					
ANR	6625118	ArgumentList	de -> uncomp_size		6624857	1					
ANR	6625119	Argument	de -> uncomp_size		6624857	0					
ANR	6625120	PtrMemberAccess	de -> uncomp_size		6624857	0					
ANR	6625121	Identifier	de		6624857	0					
ANR	6625122	Identifier	uncomp_size		6624857	1					
ANR	6625123	Argument	& ef_zip64_p		6624857	1					
ANR	6625124	UnaryOperationExpression	& ef_zip64_p		6624857	0					
ANR	6625125	UnaryOperator	&		6624857	0					
ANR	6625126	Identifier	ef_zip64_p		6624857	1					
ANR	6625127	ElseStatement	else		6624857	0					
ANR	6625128	CompoundStatement		47:9:1486:1486	6624857	0					
ANR	6625129	IfStatement	if ( ( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX )		6624857	0					
ANR	6625130	Condition	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX	686:5:17211:17339	6624857	0	True				
ANR	6625131	OrExpression	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX		6624857	0		||			
ANR	6625132	BitAndExpression	flags & ZIP_FL_FORCE_ZIP64		6624857	0		&			
ANR	6625133	Identifier	flags		6624857	0					
ANR	6625134	Identifier	ZIP_FL_FORCE_ZIP64		6624857	1					
ANR	6625135	OrExpression	de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX		6624857	1		||			
ANR	6625136	RelationalExpression	de -> comp_size > ZIP_UINT32_MAX		6624857	0		>			
ANR	6625137	PtrMemberAccess	de -> comp_size		6624857	0					
ANR	6625138	Identifier	de		6624857	0					
ANR	6625139	Identifier	comp_size		6624857	1					
ANR	6625140	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625141	OrExpression	de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX		6624857	1		||			
ANR	6625142	RelationalExpression	de -> uncomp_size > ZIP_UINT32_MAX		6624857	0		>			
ANR	6625143	PtrMemberAccess	de -> uncomp_size		6624857	0					
ANR	6625144	Identifier	de		6624857	0					
ANR	6625145	Identifier	uncomp_size		6624857	1					
ANR	6625146	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625147	RelationalExpression	de -> offset > ZIP_UINT32_MAX		6624857	1		>			
ANR	6625148	PtrMemberAccess	de -> offset		6624857	0					
ANR	6625149	Identifier	de		6624857	0					
ANR	6625150	Identifier	offset		6624857	1					
ANR	6625151	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625152	CompoundStatement		48:136:1624:1624	6624857	1					
ANR	6625153	IfStatement	if ( de -> comp_size >= ZIP_UINT32_MAX )		6624857	0					
ANR	6625154	Condition	de -> comp_size >= ZIP_UINT32_MAX	687:9:17353:17383	6624857	0	True				
ANR	6625155	RelationalExpression	de -> comp_size >= ZIP_UINT32_MAX		6624857	0		>=			
ANR	6625156	PtrMemberAccess	de -> comp_size		6624857	0					
ANR	6625157	Identifier	de		6624857	0					
ANR	6625158	Identifier	comp_size		6624857	1					
ANR	6625159	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625160	ExpressionStatement	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"	688:2:17388:17426	6624857	1	True				
ANR	6625161	CallExpression	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"		6624857	0					
ANR	6625162	Callee	_zip_poke8		6624857	0					
ANR	6625163	Identifier	_zip_poke8		6624857	0					
ANR	6625164	ArgumentList	de -> comp_size		6624857	1					
ANR	6625165	Argument	de -> comp_size		6624857	0					
ANR	6625166	PtrMemberAccess	de -> comp_size		6624857	0					
ANR	6625167	Identifier	de		6624857	0					
ANR	6625168	Identifier	comp_size		6624857	1					
ANR	6625169	Argument	& ef_zip64_p		6624857	1					
ANR	6625170	UnaryOperationExpression	& ef_zip64_p		6624857	0					
ANR	6625171	UnaryOperator	&		6624857	0					
ANR	6625172	Identifier	ef_zip64_p		6624857	1					
ANR	6625173	IfStatement	if ( de -> uncomp_size >= ZIP_UINT32_MAX )		6624857	1					
ANR	6625174	Condition	de -> uncomp_size >= ZIP_UINT32_MAX	689:9:17437:17469	6624857	0	True				
ANR	6625175	RelationalExpression	de -> uncomp_size >= ZIP_UINT32_MAX		6624857	0		>=			
ANR	6625176	PtrMemberAccess	de -> uncomp_size		6624857	0					
ANR	6625177	Identifier	de		6624857	0					
ANR	6625178	Identifier	uncomp_size		6624857	1					
ANR	6625179	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625180	ExpressionStatement	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"	690:2:17474:17514	6624857	1	True				
ANR	6625181	CallExpression	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"		6624857	0					
ANR	6625182	Callee	_zip_poke8		6624857	0					
ANR	6625183	Identifier	_zip_poke8		6624857	0					
ANR	6625184	ArgumentList	de -> uncomp_size		6624857	1					
ANR	6625185	Argument	de -> uncomp_size		6624857	0					
ANR	6625186	PtrMemberAccess	de -> uncomp_size		6624857	0					
ANR	6625187	Identifier	de		6624857	0					
ANR	6625188	Identifier	uncomp_size		6624857	1					
ANR	6625189	Argument	& ef_zip64_p		6624857	1					
ANR	6625190	UnaryOperationExpression	& ef_zip64_p		6624857	0					
ANR	6625191	UnaryOperator	&		6624857	0					
ANR	6625192	Identifier	ef_zip64_p		6624857	1					
ANR	6625193	IfStatement	if ( de -> offset >= ZIP_UINT32_MAX )		6624857	2					
ANR	6625194	Condition	de -> offset >= ZIP_UINT32_MAX	691:9:17525:17552	6624857	0	True				
ANR	6625195	RelationalExpression	de -> offset >= ZIP_UINT32_MAX		6624857	0		>=			
ANR	6625196	PtrMemberAccess	de -> offset		6624857	0					
ANR	6625197	Identifier	de		6624857	0					
ANR	6625198	Identifier	offset		6624857	1					
ANR	6625199	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625200	ExpressionStatement	"_zip_poke8 ( de -> offset , & ef_zip64_p )"	692:2:17557:17592	6624857	1	True				
ANR	6625201	CallExpression	"_zip_poke8 ( de -> offset , & ef_zip64_p )"		6624857	0					
ANR	6625202	Callee	_zip_poke8		6624857	0					
ANR	6625203	Identifier	_zip_poke8		6624857	0					
ANR	6625204	ArgumentList	de -> offset		6624857	1					
ANR	6625205	Argument	de -> offset		6624857	0					
ANR	6625206	PtrMemberAccess	de -> offset		6624857	0					
ANR	6625207	Identifier	de		6624857	0					
ANR	6625208	Identifier	offset		6624857	1					
ANR	6625209	Argument	& ef_zip64_p		6624857	1					
ANR	6625210	UnaryOperationExpression	& ef_zip64_p		6624857	0					
ANR	6625211	UnaryOperator	&		6624857	0					
ANR	6625212	Identifier	ef_zip64_p		6624857	1					
ANR	6625213	IfStatement	if ( ef_zip64_p != ef_zip64 )		6624857	14					
ANR	6625214	Condition	ef_zip64_p != ef_zip64	696:8:17612:17633	6624857	0	True				
ANR	6625215	EqualityExpression	ef_zip64_p != ef_zip64		6624857	0		!=			
ANR	6625216	Identifier	ef_zip64_p		6624857	0					
ANR	6625217	Identifier	ef_zip64		6624857	1					
ANR	6625218	CompoundStatement		59:1:1921:2037	6624857	1					
ANR	6625219	IdentifierDeclStatement	"struct zip_extra_field * ef64 = _zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH ) ;"	697:1:17639:17755	6624857	0	True				
ANR	6625220	IdentifierDecl	"* ef64 = _zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH )"		6624857	0					
ANR	6625221	IdentifierDeclType	struct zip_extra_field *		6624857	0					
ANR	6625222	Identifier	ef64		6624857	1					
ANR	6625223	AssignmentExpression	"* ef64 = _zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH )"		6624857	2		=			
ANR	6625224	Identifier	ef64		6624857	0					
ANR	6625225	CallExpression	"_zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH )"		6624857	1					
ANR	6625226	Callee	_zip_ef_new		6624857	0					
ANR	6625227	Identifier	_zip_ef_new		6624857	0					
ANR	6625228	ArgumentList	ZIP_EF_ZIP64		6624857	1					
ANR	6625229	Argument	ZIP_EF_ZIP64		6624857	0					
ANR	6625230	Identifier	ZIP_EF_ZIP64		6624857	0					
ANR	6625231	Argument	( zip_uint16_t ) ( ef_zip64_p - ef_zip64 )		6624857	1					
ANR	6625232	CastExpression	( zip_uint16_t ) ( ef_zip64_p - ef_zip64 )		6624857	0					
ANR	6625233	CastTarget	zip_uint16_t		6624857	0					
ANR	6625234	AdditiveExpression	ef_zip64_p - ef_zip64		6624857	1		-			
ANR	6625235	Identifier	ef_zip64_p		6624857	0					
ANR	6625236	Identifier	ef_zip64		6624857	1					
ANR	6625237	Argument	ef_zip64		6624857	2					
ANR	6625238	Identifier	ef_zip64		6624857	0					
ANR	6625239	Argument	ZIP_EF_BOTH		6624857	3					
ANR	6625240	Identifier	ZIP_EF_BOTH		6624857	0					
ANR	6625241	ExpressionStatement	ef64 -> next = ef	698:1:17758:17773	6624857	1	True				
ANR	6625242	AssignmentExpression	ef64 -> next = ef		6624857	0		=			
ANR	6625243	PtrMemberAccess	ef64 -> next		6624857	0					
ANR	6625244	Identifier	ef64		6624857	0					
ANR	6625245	Identifier	next		6624857	1					
ANR	6625246	Identifier	ef		6624857	1					
ANR	6625247	ExpressionStatement	ef = ef64	699:1:17776:17785	6624857	2	True				
ANR	6625248	AssignmentExpression	ef = ef64		6624857	0		=			
ANR	6625249	Identifier	ef		6624857	0					
ANR	6625250	Identifier	ef64		6624857	1					
ANR	6625251	ExpressionStatement	is_zip64 = 1	700:1:17788:17800	6624857	3	True				
ANR	6625252	AssignmentExpression	is_zip64 = 1		6624857	0		=			
ANR	6625253	Identifier	is_zip64		6624857	0					
ANR	6625254	PrimaryExpression	1		6624857	1					
ANR	6625255	IfStatement	if ( ( flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) ) == ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) )		6624857	15					
ANR	6625256	Condition	( flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) ) == ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 )	703:8:17817:17896	6624857	0	True				
ANR	6625257	EqualityExpression	( flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) ) == ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 )		6624857	0		==			
ANR	6625258	BitAndExpression	flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 )		6624857	0		&			
ANR	6625259	Identifier	flags		6624857	0					
ANR	6625260	InclusiveOrExpression	ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64		6624857	1		|			
ANR	6625261	Identifier	ZIP_FL_LOCAL		6624857	0					
ANR	6625262	Identifier	ZIP_FL_FORCE_ZIP64		6624857	1					
ANR	6625263	InclusiveOrExpression	ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64		6624857	1		|			
ANR	6625264	Identifier	ZIP_FL_LOCAL		6624857	0					
ANR	6625265	Identifier	ZIP_FL_FORCE_ZIP64		6624857	1					
ANR	6625266	ExpressionStatement	"is_really_zip64 = _zip_dirent_needs_zip64 ( de , flags )"	704:1:17900:17952	6624857	1	True				
ANR	6625267	AssignmentExpression	"is_really_zip64 = _zip_dirent_needs_zip64 ( de , flags )"		6624857	0		=			
ANR	6625268	Identifier	is_really_zip64		6624857	0					
ANR	6625269	CallExpression	"_zip_dirent_needs_zip64 ( de , flags )"		6624857	1					
ANR	6625270	Callee	_zip_dirent_needs_zip64		6624857	0					
ANR	6625271	Identifier	_zip_dirent_needs_zip64		6624857	0					
ANR	6625272	ArgumentList	de		6624857	1					
ANR	6625273	Argument	de		6624857	0					
ANR	6625274	Identifier	de		6624857	0					
ANR	6625275	Argument	flags		6624857	1					
ANR	6625276	Identifier	flags		6624857	0					
ANR	6625277	ElseStatement	else		6624857	0					
ANR	6625278	ExpressionStatement	is_really_zip64 = is_zip64	706:1:17964:17990	6624857	0	True				
ANR	6625279	AssignmentExpression	is_really_zip64 = is_zip64		6624857	0		=			
ANR	6625280	Identifier	is_really_zip64		6624857	0					
ANR	6625281	Identifier	is_zip64		6624857	1					
ANR	6625282	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 )		6624857	16					
ANR	6625283	Condition	( flags & ZIP_FL_LOCAL ) == 0	708:8:18005:18031	6624857	0	True				
ANR	6625284	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6624857	0		==			
ANR	6625285	BitAndExpression	flags & ZIP_FL_LOCAL		6624857	0		&			
ANR	6625286	Identifier	flags		6624857	0					
ANR	6625287	Identifier	ZIP_FL_LOCAL		6624857	1					
ANR	6625288	PrimaryExpression	0		6624857	1					
ANR	6625289	ExpressionStatement	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_madeby , fp )"	709:1:18035:18093	6624857	1	True				
ANR	6625290	CallExpression	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_madeby , fp )"		6624857	0					
ANR	6625291	Callee	_zip_write2		6624857	0					
ANR	6625292	Identifier	_zip_write2		6624857	0					
ANR	6625293	ArgumentList	is_really_zip64 ? 45 : de -> version_madeby		6624857	1					
ANR	6625294	Argument	is_really_zip64 ? 45 : de -> version_madeby		6624857	0					
ANR	6625295	ConditionalExpression	is_really_zip64 ? 45 : de -> version_madeby		6624857	0					
ANR	6625296	Condition	is_really_zip64		6624857	0					
ANR	6625297	Identifier	is_really_zip64		6624857	0					
ANR	6625298	PrimaryExpression	45		6624857	1					
ANR	6625299	PtrMemberAccess	de -> version_madeby		6624857	2					
ANR	6625300	Identifier	de		6624857	0					
ANR	6625301	Identifier	version_madeby		6624857	1					
ANR	6625302	Argument	fp		6624857	1					
ANR	6625303	Identifier	fp		6624857	0					
ANR	6625304	ExpressionStatement	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_needed , fp )"	710:4:18099:18157	6624857	17	True				
ANR	6625305	CallExpression	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_needed , fp )"		6624857	0					
ANR	6625306	Callee	_zip_write2		6624857	0					
ANR	6625307	Identifier	_zip_write2		6624857	0					
ANR	6625308	ArgumentList	is_really_zip64 ? 45 : de -> version_needed		6624857	1					
ANR	6625309	Argument	is_really_zip64 ? 45 : de -> version_needed		6624857	0					
ANR	6625310	ConditionalExpression	is_really_zip64 ? 45 : de -> version_needed		6624857	0					
ANR	6625311	Condition	is_really_zip64		6624857	0					
ANR	6625312	Identifier	is_really_zip64		6624857	0					
ANR	6625313	PrimaryExpression	45		6624857	1					
ANR	6625314	PtrMemberAccess	de -> version_needed		6624857	2					
ANR	6625315	Identifier	de		6624857	0					
ANR	6625316	Identifier	version_needed		6624857	1					
ANR	6625317	Argument	fp		6624857	1					
ANR	6625318	Identifier	fp		6624857	0					
ANR	6625319	ExpressionStatement	"_zip_write2 ( de -> bitflags & 0xfff9 , fp )"	711:4:18163:18199	6624857	18	True				
ANR	6625320	CallExpression	"_zip_write2 ( de -> bitflags & 0xfff9 , fp )"		6624857	0					
ANR	6625321	Callee	_zip_write2		6624857	0					
ANR	6625322	Identifier	_zip_write2		6624857	0					
ANR	6625323	ArgumentList	de -> bitflags & 0xfff9		6624857	1					
ANR	6625324	Argument	de -> bitflags & 0xfff9		6624857	0					
ANR	6625325	BitAndExpression	de -> bitflags & 0xfff9		6624857	0		&			
ANR	6625326	PtrMemberAccess	de -> bitflags		6624857	0					
ANR	6625327	Identifier	de		6624857	0					
ANR	6625328	Identifier	bitflags		6624857	1					
ANR	6625329	PrimaryExpression	0xfff9		6624857	1					
ANR	6625330	Argument	fp		6624857	1					
ANR	6625331	Identifier	fp		6624857	0					
ANR	6625332	ExpressionStatement	"_zip_write2 ( ( zip_uint16_t ) de -> comp_method , fp )"	712:4:18251:18297	6624857	19	True				
ANR	6625333	CallExpression	"_zip_write2 ( ( zip_uint16_t ) de -> comp_method , fp )"		6624857	0					
ANR	6625334	Callee	_zip_write2		6624857	0					
ANR	6625335	Identifier	_zip_write2		6624857	0					
ANR	6625336	ArgumentList	( zip_uint16_t ) de -> comp_method		6624857	1					
ANR	6625337	Argument	( zip_uint16_t ) de -> comp_method		6624857	0					
ANR	6625338	CastExpression	( zip_uint16_t ) de -> comp_method		6624857	0					
ANR	6625339	CastTarget	zip_uint16_t		6624857	0					
ANR	6625340	PtrMemberAccess	de -> comp_method		6624857	1					
ANR	6625341	Identifier	de		6624857	0					
ANR	6625342	Identifier	comp_method		6624857	1					
ANR	6625343	Argument	fp		6624857	1					
ANR	6625344	Identifier	fp		6624857	0					
ANR	6625345	ExpressionStatement	"_zip_u2d_time ( de -> last_mod , & dostime , & dosdate )"	714:4:18341:18388	6624857	20	True				
ANR	6625346	CallExpression	"_zip_u2d_time ( de -> last_mod , & dostime , & dosdate )"		6624857	0					
ANR	6625347	Callee	_zip_u2d_time		6624857	0					
ANR	6625348	Identifier	_zip_u2d_time		6624857	0					
ANR	6625349	ArgumentList	de -> last_mod		6624857	1					
ANR	6625350	Argument	de -> last_mod		6624857	0					
ANR	6625351	PtrMemberAccess	de -> last_mod		6624857	0					
ANR	6625352	Identifier	de		6624857	0					
ANR	6625353	Identifier	last_mod		6624857	1					
ANR	6625354	Argument	& dostime		6624857	1					
ANR	6625355	UnaryOperationExpression	& dostime		6624857	0					
ANR	6625356	UnaryOperator	&		6624857	0					
ANR	6625357	Identifier	dostime		6624857	1					
ANR	6625358	Argument	& dosdate		6624857	2					
ANR	6625359	UnaryOperationExpression	& dosdate		6624857	0					
ANR	6625360	UnaryOperator	&		6624857	0					
ANR	6625361	Identifier	dosdate		6624857	1					
ANR	6625362	ExpressionStatement	"_zip_write2 ( dostime , fp )"	715:4:18394:18418	6624857	21	True				
ANR	6625363	CallExpression	"_zip_write2 ( dostime , fp )"		6624857	0					
ANR	6625364	Callee	_zip_write2		6624857	0					
ANR	6625365	Identifier	_zip_write2		6624857	0					
ANR	6625366	ArgumentList	dostime		6624857	1					
ANR	6625367	Argument	dostime		6624857	0					
ANR	6625368	Identifier	dostime		6624857	0					
ANR	6625369	Argument	fp		6624857	1					
ANR	6625370	Identifier	fp		6624857	0					
ANR	6625371	ExpressionStatement	"_zip_write2 ( dosdate , fp )"	716:4:18424:18448	6624857	22	True				
ANR	6625372	CallExpression	"_zip_write2 ( dosdate , fp )"		6624857	0					
ANR	6625373	Callee	_zip_write2		6624857	0					
ANR	6625374	Identifier	_zip_write2		6624857	0					
ANR	6625375	ArgumentList	dosdate		6624857	1					
ANR	6625376	Argument	dosdate		6624857	0					
ANR	6625377	Identifier	dosdate		6624857	0					
ANR	6625378	Argument	fp		6624857	1					
ANR	6625379	Identifier	fp		6624857	0					
ANR	6625380	ExpressionStatement	"_zip_write4 ( de -> crc , fp )"	718:4:18455:18479	6624857	23	True				
ANR	6625381	CallExpression	"_zip_write4 ( de -> crc , fp )"		6624857	0					
ANR	6625382	Callee	_zip_write4		6624857	0					
ANR	6625383	Identifier	_zip_write4		6624857	0					
ANR	6625384	ArgumentList	de -> crc		6624857	1					
ANR	6625385	Argument	de -> crc		6624857	0					
ANR	6625386	PtrMemberAccess	de -> crc		6624857	0					
ANR	6625387	Identifier	de		6624857	0					
ANR	6625388	Identifier	crc		6624857	1					
ANR	6625389	Argument	fp		6624857	1					
ANR	6625390	Identifier	fp		6624857	0					
ANR	6625391	IfStatement	if ( de -> comp_size < ZIP_UINT32_MAX )		6624857	24					
ANR	6625392	Condition	de -> comp_size < ZIP_UINT32_MAX	719:8:18489:18518	6624857	0	True				
ANR	6625393	RelationalExpression	de -> comp_size < ZIP_UINT32_MAX		6624857	0		<			
ANR	6625394	PtrMemberAccess	de -> comp_size		6624857	0					
ANR	6625395	Identifier	de		6624857	0					
ANR	6625396	Identifier	comp_size		6624857	1					
ANR	6625397	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625398	ExpressionStatement	"_zip_write4 ( ( zip_uint32_t ) de -> comp_size , fp )"	720:1:18522:18566	6624857	1	True				
ANR	6625399	CallExpression	"_zip_write4 ( ( zip_uint32_t ) de -> comp_size , fp )"		6624857	0					
ANR	6625400	Callee	_zip_write4		6624857	0					
ANR	6625401	Identifier	_zip_write4		6624857	0					
ANR	6625402	ArgumentList	( zip_uint32_t ) de -> comp_size		6624857	1					
ANR	6625403	Argument	( zip_uint32_t ) de -> comp_size		6624857	0					
ANR	6625404	CastExpression	( zip_uint32_t ) de -> comp_size		6624857	0					
ANR	6625405	CastTarget	zip_uint32_t		6624857	0					
ANR	6625406	PtrMemberAccess	de -> comp_size		6624857	1					
ANR	6625407	Identifier	de		6624857	0					
ANR	6625408	Identifier	comp_size		6624857	1					
ANR	6625409	Argument	fp		6624857	1					
ANR	6625410	Identifier	fp		6624857	0					
ANR	6625411	ElseStatement	else		6624857	0					
ANR	6625412	ExpressionStatement	"_zip_write4 ( ZIP_UINT32_MAX , fp )"	722:1:18578:18609	6624857	0	True				
ANR	6625413	CallExpression	"_zip_write4 ( ZIP_UINT32_MAX , fp )"		6624857	0					
ANR	6625414	Callee	_zip_write4		6624857	0					
ANR	6625415	Identifier	_zip_write4		6624857	0					
ANR	6625416	ArgumentList	ZIP_UINT32_MAX		6624857	1					
ANR	6625417	Argument	ZIP_UINT32_MAX		6624857	0					
ANR	6625418	Identifier	ZIP_UINT32_MAX		6624857	0					
ANR	6625419	Argument	fp		6624857	1					
ANR	6625420	Identifier	fp		6624857	0					
ANR	6625421	IfStatement	if ( de -> uncomp_size < ZIP_UINT32_MAX )		6624857	25					
ANR	6625422	Condition	de -> uncomp_size < ZIP_UINT32_MAX	723:8:18619:18650	6624857	0	True				
ANR	6625423	RelationalExpression	de -> uncomp_size < ZIP_UINT32_MAX		6624857	0		<			
ANR	6625424	PtrMemberAccess	de -> uncomp_size		6624857	0					
ANR	6625425	Identifier	de		6624857	0					
ANR	6625426	Identifier	uncomp_size		6624857	1					
ANR	6625427	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625428	ExpressionStatement	"_zip_write4 ( ( zip_uint32_t ) de -> uncomp_size , fp )"	724:1:18654:18700	6624857	1	True				
ANR	6625429	CallExpression	"_zip_write4 ( ( zip_uint32_t ) de -> uncomp_size , fp )"		6624857	0					
ANR	6625430	Callee	_zip_write4		6624857	0					
ANR	6625431	Identifier	_zip_write4		6624857	0					
ANR	6625432	ArgumentList	( zip_uint32_t ) de -> uncomp_size		6624857	1					
ANR	6625433	Argument	( zip_uint32_t ) de -> uncomp_size		6624857	0					
ANR	6625434	CastExpression	( zip_uint32_t ) de -> uncomp_size		6624857	0					
ANR	6625435	CastTarget	zip_uint32_t		6624857	0					
ANR	6625436	PtrMemberAccess	de -> uncomp_size		6624857	1					
ANR	6625437	Identifier	de		6624857	0					
ANR	6625438	Identifier	uncomp_size		6624857	1					
ANR	6625439	Argument	fp		6624857	1					
ANR	6625440	Identifier	fp		6624857	0					
ANR	6625441	ElseStatement	else		6624857	0					
ANR	6625442	ExpressionStatement	"_zip_write4 ( ZIP_UINT32_MAX , fp )"	726:1:18712:18743	6624857	0	True				
ANR	6625443	CallExpression	"_zip_write4 ( ZIP_UINT32_MAX , fp )"		6624857	0					
ANR	6625444	Callee	_zip_write4		6624857	0					
ANR	6625445	Identifier	_zip_write4		6624857	0					
ANR	6625446	ArgumentList	ZIP_UINT32_MAX		6624857	1					
ANR	6625447	Argument	ZIP_UINT32_MAX		6624857	0					
ANR	6625448	Identifier	ZIP_UINT32_MAX		6624857	0					
ANR	6625449	Argument	fp		6624857	1					
ANR	6625450	Identifier	fp		6624857	0					
ANR	6625451	ExpressionStatement	"_zip_write2 ( _zip_string_length ( de -> filename ) , fp )"	728:4:18750:18799	6624857	26	True				
ANR	6625452	CallExpression	"_zip_write2 ( _zip_string_length ( de -> filename ) , fp )"		6624857	0					
ANR	6625453	Callee	_zip_write2		6624857	0					
ANR	6625454	Identifier	_zip_write2		6624857	0					
ANR	6625455	ArgumentList	_zip_string_length ( de -> filename )		6624857	1					
ANR	6625456	Argument	_zip_string_length ( de -> filename )		6624857	0					
ANR	6625457	CallExpression	_zip_string_length ( de -> filename )		6624857	0					
ANR	6625458	Callee	_zip_string_length		6624857	0					
ANR	6625459	Identifier	_zip_string_length		6624857	0					
ANR	6625460	ArgumentList	de -> filename		6624857	1					
ANR	6625461	Argument	de -> filename		6624857	0					
ANR	6625462	PtrMemberAccess	de -> filename		6624857	0					
ANR	6625463	Identifier	de		6624857	0					
ANR	6625464	Identifier	filename		6624857	1					
ANR	6625465	Argument	fp		6624857	1					
ANR	6625466	Identifier	fp		6624857	0					
ANR	6625467	ExpressionStatement	"_zip_write2 ( _zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH ) , fp )"	729:4:18805:18891	6624857	27	True				
ANR	6625468	CallExpression	"_zip_write2 ( _zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH ) , fp )"		6624857	0					
ANR	6625469	Callee	_zip_write2		6624857	0					
ANR	6625470	Identifier	_zip_write2		6624857	0					
ANR	6625471	ArgumentList	"_zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH )"		6624857	1					
ANR	6625472	Argument	"_zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH )"		6624857	0					
ANR	6625473	AdditiveExpression	"_zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH )"		6624857	0		+			
ANR	6625474	CallExpression	"_zip_ef_size ( de -> extra_fields , flags )"		6624857	0					
ANR	6625475	Callee	_zip_ef_size		6624857	0					
ANR	6625476	Identifier	_zip_ef_size		6624857	0					
ANR	6625477	ArgumentList	de -> extra_fields		6624857	1					
ANR	6625478	Argument	de -> extra_fields		6624857	0					
ANR	6625479	PtrMemberAccess	de -> extra_fields		6624857	0					
ANR	6625480	Identifier	de		6624857	0					
ANR	6625481	Identifier	extra_fields		6624857	1					
ANR	6625482	Argument	flags		6624857	1					
ANR	6625483	Identifier	flags		6624857	0					
ANR	6625484	CallExpression	"_zip_ef_size ( ef , ZIP_EF_BOTH )"		6624857	1					
ANR	6625485	Callee	_zip_ef_size		6624857	0					
ANR	6625486	Identifier	_zip_ef_size		6624857	0					
ANR	6625487	ArgumentList	ef		6624857	1					
ANR	6625488	Argument	ef		6624857	0					
ANR	6625489	Identifier	ef		6624857	0					
ANR	6625490	Argument	ZIP_EF_BOTH		6624857	1					
ANR	6625491	Identifier	ZIP_EF_BOTH		6624857	0					
ANR	6625492	Argument	fp		6624857	1					
ANR	6625493	Identifier	fp		6624857	0					
ANR	6625494	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 )		6624857	28					
ANR	6625495	Condition	( flags & ZIP_FL_LOCAL ) == 0	731:8:18906:18932	6624857	0	True				
ANR	6625496	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6624857	0		==			
ANR	6625497	BitAndExpression	flags & ZIP_FL_LOCAL		6624857	0		&			
ANR	6625498	Identifier	flags		6624857	0					
ANR	6625499	Identifier	ZIP_FL_LOCAL		6624857	1					
ANR	6625500	PrimaryExpression	0		6624857	1					
ANR	6625501	CompoundStatement		93:37:3217:3217	6624857	1					
ANR	6625502	ExpressionStatement	"_zip_write2 ( _zip_string_length ( de -> comment ) , fp )"	732:1:18938:18986	6624857	0	True				
ANR	6625503	CallExpression	"_zip_write2 ( _zip_string_length ( de -> comment ) , fp )"		6624857	0					
ANR	6625504	Callee	_zip_write2		6624857	0					
ANR	6625505	Identifier	_zip_write2		6624857	0					
ANR	6625506	ArgumentList	_zip_string_length ( de -> comment )		6624857	1					
ANR	6625507	Argument	_zip_string_length ( de -> comment )		6624857	0					
ANR	6625508	CallExpression	_zip_string_length ( de -> comment )		6624857	0					
ANR	6625509	Callee	_zip_string_length		6624857	0					
ANR	6625510	Identifier	_zip_string_length		6624857	0					
ANR	6625511	ArgumentList	de -> comment		6624857	1					
ANR	6625512	Argument	de -> comment		6624857	0					
ANR	6625513	PtrMemberAccess	de -> comment		6624857	0					
ANR	6625514	Identifier	de		6624857	0					
ANR	6625515	Identifier	comment		6624857	1					
ANR	6625516	Argument	fp		6624857	1					
ANR	6625517	Identifier	fp		6624857	0					
ANR	6625518	ExpressionStatement	"_zip_write2 ( ( zip_uint16_t ) de -> disk_number , fp )"	733:1:18989:19035	6624857	1	True				
ANR	6625519	CallExpression	"_zip_write2 ( ( zip_uint16_t ) de -> disk_number , fp )"		6624857	0					
ANR	6625520	Callee	_zip_write2		6624857	0					
ANR	6625521	Identifier	_zip_write2		6624857	0					
ANR	6625522	ArgumentList	( zip_uint16_t ) de -> disk_number		6624857	1					
ANR	6625523	Argument	( zip_uint16_t ) de -> disk_number		6624857	0					
ANR	6625524	CastExpression	( zip_uint16_t ) de -> disk_number		6624857	0					
ANR	6625525	CastTarget	zip_uint16_t		6624857	0					
ANR	6625526	PtrMemberAccess	de -> disk_number		6624857	1					
ANR	6625527	Identifier	de		6624857	0					
ANR	6625528	Identifier	disk_number		6624857	1					
ANR	6625529	Argument	fp		6624857	1					
ANR	6625530	Identifier	fp		6624857	0					
ANR	6625531	ExpressionStatement	"_zip_write2 ( de -> int_attrib , fp )"	734:1:19038:19069	6624857	2	True				
ANR	6625532	CallExpression	"_zip_write2 ( de -> int_attrib , fp )"		6624857	0					
ANR	6625533	Callee	_zip_write2		6624857	0					
ANR	6625534	Identifier	_zip_write2		6624857	0					
ANR	6625535	ArgumentList	de -> int_attrib		6624857	1					
ANR	6625536	Argument	de -> int_attrib		6624857	0					
ANR	6625537	PtrMemberAccess	de -> int_attrib		6624857	0					
ANR	6625538	Identifier	de		6624857	0					
ANR	6625539	Identifier	int_attrib		6624857	1					
ANR	6625540	Argument	fp		6624857	1					
ANR	6625541	Identifier	fp		6624857	0					
ANR	6625542	ExpressionStatement	"_zip_write4 ( de -> ext_attrib , fp )"	735:1:19072:19103	6624857	3	True				
ANR	6625543	CallExpression	"_zip_write4 ( de -> ext_attrib , fp )"		6624857	0					
ANR	6625544	Callee	_zip_write4		6624857	0					
ANR	6625545	Identifier	_zip_write4		6624857	0					
ANR	6625546	ArgumentList	de -> ext_attrib		6624857	1					
ANR	6625547	Argument	de -> ext_attrib		6624857	0					
ANR	6625548	PtrMemberAccess	de -> ext_attrib		6624857	0					
ANR	6625549	Identifier	de		6624857	0					
ANR	6625550	Identifier	ext_attrib		6624857	1					
ANR	6625551	Argument	fp		6624857	1					
ANR	6625552	Identifier	fp		6624857	0					
ANR	6625553	IfStatement	if ( de -> offset < ZIP_UINT32_MAX )		6624857	4					
ANR	6625554	Condition	de -> offset < ZIP_UINT32_MAX	736:5:19110:19136	6624857	0	True				
ANR	6625555	RelationalExpression	de -> offset < ZIP_UINT32_MAX		6624857	0		<			
ANR	6625556	PtrMemberAccess	de -> offset		6624857	0					
ANR	6625557	Identifier	de		6624857	0					
ANR	6625558	Identifier	offset		6624857	1					
ANR	6625559	Identifier	ZIP_UINT32_MAX		6624857	1					
ANR	6625560	ExpressionStatement	"_zip_write4 ( ( zip_uint32_t ) de -> offset , fp )"	737:5:19144:19185	6624857	1	True				
ANR	6625561	CallExpression	"_zip_write4 ( ( zip_uint32_t ) de -> offset , fp )"		6624857	0					
ANR	6625562	Callee	_zip_write4		6624857	0					
ANR	6625563	Identifier	_zip_write4		6624857	0					
ANR	6625564	ArgumentList	( zip_uint32_t ) de -> offset		6624857	1					
ANR	6625565	Argument	( zip_uint32_t ) de -> offset		6624857	0					
ANR	6625566	CastExpression	( zip_uint32_t ) de -> offset		6624857	0					
ANR	6625567	CastTarget	zip_uint32_t		6624857	0					
ANR	6625568	PtrMemberAccess	de -> offset		6624857	1					
ANR	6625569	Identifier	de		6624857	0					
ANR	6625570	Identifier	offset		6624857	1					
ANR	6625571	Argument	fp		6624857	1					
ANR	6625572	Identifier	fp		6624857	0					
ANR	6625573	ElseStatement	else		6624857	0					
ANR	6625574	ExpressionStatement	"_zip_write4 ( ZIP_UINT32_MAX , fp )"	739:5:19198:19229	6624857	0	True				
ANR	6625575	CallExpression	"_zip_write4 ( ZIP_UINT32_MAX , fp )"		6624857	0					
ANR	6625576	Callee	_zip_write4		6624857	0					
ANR	6625577	Identifier	_zip_write4		6624857	0					
ANR	6625578	ArgumentList	ZIP_UINT32_MAX		6624857	1					
ANR	6625579	Argument	ZIP_UINT32_MAX		6624857	0					
ANR	6625580	Identifier	ZIP_UINT32_MAX		6624857	0					
ANR	6625581	Argument	fp		6624857	1					
ANR	6625582	Identifier	fp		6624857	0					
ANR	6625583	IfStatement	if ( de -> filename )		6624857	29					
ANR	6625584	Condition	de -> filename	742:8:19246:19257	6624857	0	True				
ANR	6625585	PtrMemberAccess	de -> filename		6624857	0					
ANR	6625586	Identifier	de		6624857	0					
ANR	6625587	Identifier	filename		6624857	1					
ANR	6625588	ExpressionStatement	"_zip_string_write ( de -> filename , fp )"	743:1:19261:19296	6624857	1	True				
ANR	6625589	CallExpression	"_zip_string_write ( de -> filename , fp )"		6624857	0					
ANR	6625590	Callee	_zip_string_write		6624857	0					
ANR	6625591	Identifier	_zip_string_write		6624857	0					
ANR	6625592	ArgumentList	de -> filename		6624857	1					
ANR	6625593	Argument	de -> filename		6624857	0					
ANR	6625594	PtrMemberAccess	de -> filename		6624857	0					
ANR	6625595	Identifier	de		6624857	0					
ANR	6625596	Identifier	filename		6624857	1					
ANR	6625597	Argument	fp		6624857	1					
ANR	6625598	Identifier	fp		6624857	0					
ANR	6625599	IfStatement	if ( ef )		6624857	30					
ANR	6625600	Condition	ef	745:8:19307:19308	6624857	0	True				
ANR	6625601	Identifier	ef		6624857	0					
ANR	6625602	ExpressionStatement	"_zip_ef_write ( ef , ZIP_EF_BOTH , fp )"	746:1:19312:19346	6624857	1	True				
ANR	6625603	CallExpression	"_zip_ef_write ( ef , ZIP_EF_BOTH , fp )"		6624857	0					
ANR	6625604	Callee	_zip_ef_write		6624857	0					
ANR	6625605	Identifier	_zip_ef_write		6624857	0					
ANR	6625606	ArgumentList	ef		6624857	1					
ANR	6625607	Argument	ef		6624857	0					
ANR	6625608	Identifier	ef		6624857	0					
ANR	6625609	Argument	ZIP_EF_BOTH		6624857	1					
ANR	6625610	Identifier	ZIP_EF_BOTH		6624857	0					
ANR	6625611	Argument	fp		6624857	2					
ANR	6625612	Identifier	fp		6624857	0					
ANR	6625613	IfStatement	if ( de -> extra_fields )		6624857	31					
ANR	6625614	Condition	de -> extra_fields	747:8:19356:19371	6624857	0	True				
ANR	6625615	PtrMemberAccess	de -> extra_fields		6624857	0					
ANR	6625616	Identifier	de		6624857	0					
ANR	6625617	Identifier	extra_fields		6624857	1					
ANR	6625618	ExpressionStatement	"_zip_ef_write ( de -> extra_fields , flags , fp )"	748:1:19375:19417	6624857	1	True				
ANR	6625619	CallExpression	"_zip_ef_write ( de -> extra_fields , flags , fp )"		6624857	0					
ANR	6625620	Callee	_zip_ef_write		6624857	0					
ANR	6625621	Identifier	_zip_ef_write		6624857	0					
ANR	6625622	ArgumentList	de -> extra_fields		6624857	1					
ANR	6625623	Argument	de -> extra_fields		6624857	0					
ANR	6625624	PtrMemberAccess	de -> extra_fields		6624857	0					
ANR	6625625	Identifier	de		6624857	0					
ANR	6625626	Identifier	extra_fields		6624857	1					
ANR	6625627	Argument	flags		6624857	1					
ANR	6625628	Identifier	flags		6624857	0					
ANR	6625629	Argument	fp		6624857	2					
ANR	6625630	Identifier	fp		6624857	0					
ANR	6625631	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 )		6624857	32					
ANR	6625632	Condition	( flags & ZIP_FL_LOCAL ) == 0	750:8:19428:19454	6624857	0	True				
ANR	6625633	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6624857	0		==			
ANR	6625634	BitAndExpression	flags & ZIP_FL_LOCAL		6624857	0		&			
ANR	6625635	Identifier	flags		6624857	0					
ANR	6625636	Identifier	ZIP_FL_LOCAL		6624857	1					
ANR	6625637	PrimaryExpression	0		6624857	1					
ANR	6625638	CompoundStatement		112:37:3739:3739	6624857	1					
ANR	6625639	IfStatement	if ( de -> comment )		6624857	0					
ANR	6625640	Condition	de -> comment	751:5:19464:19474	6624857	0	True				
ANR	6625641	PtrMemberAccess	de -> comment		6624857	0					
ANR	6625642	Identifier	de		6624857	0					
ANR	6625643	Identifier	comment		6624857	1					
ANR	6625644	ExpressionStatement	"_zip_string_write ( de -> comment , fp )"	752:5:19482:19516	6624857	1	True				
ANR	6625645	CallExpression	"_zip_string_write ( de -> comment , fp )"		6624857	0					
ANR	6625646	Callee	_zip_string_write		6624857	0					
ANR	6625647	Identifier	_zip_string_write		6624857	0					
ANR	6625648	ArgumentList	de -> comment		6624857	1					
ANR	6625649	Argument	de -> comment		6624857	0					
ANR	6625650	PtrMemberAccess	de -> comment		6624857	0					
ANR	6625651	Identifier	de		6624857	0					
ANR	6625652	Identifier	comment		6624857	1					
ANR	6625653	Argument	fp		6624857	1					
ANR	6625654	Identifier	fp		6624857	0					
ANR	6625655	ExpressionStatement	_zip_ef_free ( ef )	755:4:19529:19545	6624857	33	True				
ANR	6625656	CallExpression	_zip_ef_free ( ef )		6624857	0					
ANR	6625657	Callee	_zip_ef_free		6624857	0					
ANR	6625658	Identifier	_zip_ef_free		6624857	0					
ANR	6625659	ArgumentList	ef		6624857	1					
ANR	6625660	Argument	ef		6624857	0					
ANR	6625661	Identifier	ef		6624857	0					
ANR	6625662	IfStatement	if ( ferror ( fp ) )		6624857	34					
ANR	6625663	Condition	ferror ( fp )	757:8:19556:19565	6624857	0	True				
ANR	6625664	CallExpression	ferror ( fp )		6624857	0					
ANR	6625665	Callee	ferror		6624857	0					
ANR	6625666	Identifier	ferror		6624857	0					
ANR	6625667	ArgumentList	fp		6624857	1					
ANR	6625668	Argument	fp		6624857	0					
ANR	6625669	Identifier	fp		6624857	0					
ANR	6625670	CompoundStatement		119:20:3850:3850	6624857	1					
ANR	6625671	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"	758:1:19571:19613	6624857	0	True				
ANR	6625672	CallExpression	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"		6624857	0					
ANR	6625673	Callee	_zip_error_set		6624857	0					
ANR	6625674	Identifier	_zip_error_set		6624857	0					
ANR	6625675	ArgumentList	error		6624857	1					
ANR	6625676	Argument	error		6624857	0					
ANR	6625677	Identifier	error		6624857	0					
ANR	6625678	Argument	ZIP_ER_WRITE		6624857	1					
ANR	6625679	Identifier	ZIP_ER_WRITE		6624857	0					
ANR	6625680	Argument	errno		6624857	2					
ANR	6625681	Identifier	errno		6624857	0					
ANR	6625682	ReturnStatement	return - 1 ;	759:1:19616:19625	6624857	1	True				
ANR	6625683	UnaryOperationExpression	- 1		6624857	0					
ANR	6625684	UnaryOperator	-		6624857	0					
ANR	6625685	PrimaryExpression	1		6624857	1					
ANR	6625686	ReturnStatement	return is_zip64 ;	762:4:19638:19653	6624857	35	True				
ANR	6625687	Identifier	is_zip64		6624857	0					
ANR	6625688	ReturnType	int		6624857	1					
ANR	6625689	Identifier	_zip_dirent_write		6624857	2					
ANR	6625690	ParameterList	"struct zip_dirent * de , FILE * fp , zip_flags_t flags , struct zip_error * error"		6624857	3					
ANR	6625691	Parameter	struct zip_dirent * de	638:18:15640:15660	6624857	0	True				
ANR	6625692	ParameterType	struct zip_dirent *		6624857	0					
ANR	6625693	Identifier	de		6624857	1					
ANR	6625694	Parameter	FILE * fp	638:41:15663:15670	6624857	1	True				
ANR	6625695	ParameterType	FILE *		6624857	0					
ANR	6625696	Identifier	fp		6624857	1					
ANR	6625697	Parameter	zip_flags_t flags	638:51:15673:15689	6624857	2	True				
ANR	6625698	ParameterType	zip_flags_t		6624857	0					
ANR	6625699	Identifier	flags		6624857	1					
ANR	6625700	Parameter	struct zip_error * error	638:70:15692:15714	6624857	3	True				
ANR	6625701	ParameterType	struct zip_error *		6624857	0					
ANR	6625702	Identifier	error		6624857	1					
ANR	6625703	CFGEntryNode	ENTRY		6624857		True				
ANR	6625704	CFGExitNode	EXIT		6624857		True				
ANR	6625705	Symbol	de -> extra_fields		6624857						
ANR	6625706	Symbol	de		6624857						
ANR	6625707	Symbol	com_enc		6624857						
ANR	6625708	Symbol	ZIP_EF_BOTH		6624857						
ANR	6625709	Symbol	ZIP_EF_ZIP64		6624857						
ANR	6625710	Symbol	ZIP_UINT32_MAX		6624857						
ANR	6625711	Symbol	is_zip64		6624857						
ANR	6625712	Symbol	& ef_zip64_p		6624857						
ANR	6625713	Symbol	de -> int_attrib		6624857						
ANR	6625714	Symbol	ZIP_ENCODING_ASCII		6624857						
ANR	6625715	Symbol	ZIP_FL_FORCE_ZIP64		6624857						
ANR	6625716	Symbol	de -> version_needed		6624857						
ANR	6625717	Symbol	ef_zip64		6624857						
ANR	6625718	Symbol	de -> ext_attrib		6624857						
ANR	6625719	Symbol	is_really_zip64		6624857						
ANR	6625720	Symbol	name_enc		6624857						
ANR	6625721	Symbol	ZIP_ENCODING_UTF8_KNOWN		6624857						
ANR	6625722	Symbol	ef		6624857						
ANR	6625723	Symbol	errno		6624857						
ANR	6625724	Symbol	NULL		6624857						
ANR	6625725	Symbol	* de		6624857						
ANR	6625726	Symbol	ZIP_EF_UTF_8_COMMENT		6624857						
ANR	6625727	Symbol	& dostime		6624857						
ANR	6625728	Symbol	dosdate		6624857						
ANR	6625729	Symbol	_zip_dirent_needs_zip64		6624857						
ANR	6625730	Symbol	ZIP_ER_WRITE		6624857						
ANR	6625731	Symbol	_zip_ef_utf8		6624857						
ANR	6625732	Symbol	ef2 -> next		6624857						
ANR	6625733	Symbol	ef2		6624857						
ANR	6625734	Symbol	ef64		6624857						
ANR	6625735	Symbol	_zip_string_length		6624857						
ANR	6625736	Symbol	ferror		6624857						
ANR	6625737	Symbol	ZIP_EF_UTF_8_NAME		6624857						
ANR	6625738	Symbol	de -> filename		6624857						
ANR	6625739	Symbol	ef_zip64_p		6624857						
ANR	6625740	Symbol	_zip_guess_encoding		6624857						
ANR	6625741	Symbol	de -> comp_method		6624857						
ANR	6625742	Symbol	flags		6624857						
ANR	6625743	Symbol	* ef64		6624857						
ANR	6625744	Symbol	fp		6624857						
ANR	6625745	Symbol	error		6624857						
ANR	6625746	Symbol	de -> comment		6624857						
ANR	6625747	Symbol	de -> uncomp_size		6624857						
ANR	6625748	Symbol	ZIP_FL_LOCAL		6624857						
ANR	6625749	Symbol	de -> last_mod		6624857						
ANR	6625750	Symbol	de -> comp_size		6624857						
ANR	6625751	Symbol	& dosdate		6624857						
ANR	6625752	Symbol	ZIP_ENCODING_UNKNOWN		6624857						
ANR	6625753	Symbol	de -> offset		6624857						
ANR	6625754	Symbol	_zip_ef_size		6624857						
ANR	6625755	Symbol	de -> disk_number		6624857						
ANR	6625756	Symbol	* ef2		6624857						
ANR	6625757	Symbol	LOCAL_MAGIC		6624857						
ANR	6625758	Symbol	de -> version_madeby		6624857						
ANR	6625759	Symbol	dostime		6624857						
ANR	6625760	Symbol	_zip_ef_new		6624857						
ANR	6625761	Symbol	ZIP_GPBF_ENCODING_UTF_8		6624857						
ANR	6625762	Symbol	de -> crc		6624857						
ANR	6625763	Symbol	ef64 -> next		6624857						
ANR	6625764	Symbol	de -> bitflags		6624857						
ANR	6625765	Symbol	CENTRAL_MAGIC		6624857						
ANR	6625766	Symbol	~ZIP_GPBF_ENCODING_UTF_8		6624857						
ANR	6625767	Function	_zip_d2u_time	767:0:19661:20096							
ANR	6625768	FunctionDef	"_zip_d2u_time (zip_uint16_t dtime , zip_uint16_t ddate)"		6625767	0					
ANR	6625769	CompoundStatement		769:0:19729:20096	6625767	0					
ANR	6625770	IdentifierDeclStatement	struct tm tm ;	770:4:19735:19747	6625767	0	True				
ANR	6625771	IdentifierDecl	tm		6625767	0					
ANR	6625772	IdentifierDeclType	struct tm		6625767	0					
ANR	6625773	Identifier	tm		6625767	1					
ANR	6625774	ExpressionStatement	"memset ( & tm , 0 , sizeof ( tm ) )"	772:4:19754:19780	6625767	1	True				
ANR	6625775	CallExpression	"memset ( & tm , 0 , sizeof ( tm ) )"		6625767	0					
ANR	6625776	Callee	memset		6625767	0					
ANR	6625777	Identifier	memset		6625767	0					
ANR	6625778	ArgumentList	& tm		6625767	1					
ANR	6625779	Argument	& tm		6625767	0					
ANR	6625780	UnaryOperationExpression	& tm		6625767	0					
ANR	6625781	UnaryOperator	&		6625767	0					
ANR	6625782	Identifier	tm		6625767	1					
ANR	6625783	Argument	0		6625767	1					
ANR	6625784	PrimaryExpression	0		6625767	0					
ANR	6625785	Argument	sizeof ( tm )		6625767	2					
ANR	6625786	SizeofExpression	sizeof ( tm )		6625767	0					
ANR	6625787	Sizeof	sizeof		6625767	0					
ANR	6625788	SizeofOperand	tm		6625767	1					
ANR	6625789	ExpressionStatement	tm . tm_isdst = - 1	775:4:19839:19855	6625767	2	True				
ANR	6625790	AssignmentExpression	tm . tm_isdst = - 1		6625767	0		=			
ANR	6625791	MemberAccess	tm . tm_isdst		6625767	0					
ANR	6625792	Identifier	tm		6625767	0					
ANR	6625793	Identifier	tm_isdst		6625767	1					
ANR	6625794	UnaryOperationExpression	- 1		6625767	1					
ANR	6625795	UnaryOperator	-		6625767	0					
ANR	6625796	PrimaryExpression	1		6625767	1					
ANR	6625797	ExpressionStatement	tm . tm_year = ( ( ddate >> 9 ) & 127 ) + 1980 - 1900	777:4:19866:19909	6625767	3	True				
ANR	6625798	AssignmentExpression	tm . tm_year = ( ( ddate >> 9 ) & 127 ) + 1980 - 1900		6625767	0		=			
ANR	6625799	MemberAccess	tm . tm_year		6625767	0					
ANR	6625800	Identifier	tm		6625767	0					
ANR	6625801	Identifier	tm_year		6625767	1					
ANR	6625802	AdditiveExpression	( ( ddate >> 9 ) & 127 ) + 1980 - 1900		6625767	1		+			
ANR	6625803	BitAndExpression	( ddate >> 9 ) & 127		6625767	0		&			
ANR	6625804	ShiftExpression	ddate >> 9		6625767	0		>>			
ANR	6625805	Identifier	ddate		6625767	0					
ANR	6625806	PrimaryExpression	9		6625767	1					
ANR	6625807	PrimaryExpression	127		6625767	1					
ANR	6625808	AdditiveExpression	1980 - 1900		6625767	1		-			
ANR	6625809	PrimaryExpression	1980		6625767	0					
ANR	6625810	PrimaryExpression	1900		6625767	1					
ANR	6625811	ExpressionStatement	tm . tm_mon = ( ( ddate >> 5 ) & 15 ) - 1	778:4:19915:19946	6625767	4	True				
ANR	6625812	AssignmentExpression	tm . tm_mon = ( ( ddate >> 5 ) & 15 ) - 1		6625767	0		=			
ANR	6625813	MemberAccess	tm . tm_mon		6625767	0					
ANR	6625814	Identifier	tm		6625767	0					
ANR	6625815	Identifier	tm_mon		6625767	1					
ANR	6625816	AdditiveExpression	( ( ddate >> 5 ) & 15 ) - 1		6625767	1		-			
ANR	6625817	BitAndExpression	( ddate >> 5 ) & 15		6625767	0		&			
ANR	6625818	ShiftExpression	ddate >> 5		6625767	0		>>			
ANR	6625819	Identifier	ddate		6625767	0					
ANR	6625820	PrimaryExpression	5		6625767	1					
ANR	6625821	PrimaryExpression	15		6625767	1					
ANR	6625822	PrimaryExpression	1		6625767	1					
ANR	6625823	ExpressionStatement	tm . tm_mday = ddate & 31	779:4:19952:19973	6625767	5	True				
ANR	6625824	AssignmentExpression	tm . tm_mday = ddate & 31		6625767	0		=			
ANR	6625825	MemberAccess	tm . tm_mday		6625767	0					
ANR	6625826	Identifier	tm		6625767	0					
ANR	6625827	Identifier	tm_mday		6625767	1					
ANR	6625828	BitAndExpression	ddate & 31		6625767	1		&			
ANR	6625829	Identifier	ddate		6625767	0					
ANR	6625830	PrimaryExpression	31		6625767	1					
ANR	6625831	ExpressionStatement	tm . tm_hour = ( dtime >> 11 ) & 31	781:4:19980:20007	6625767	6	True				
ANR	6625832	AssignmentExpression	tm . tm_hour = ( dtime >> 11 ) & 31		6625767	0		=			
ANR	6625833	MemberAccess	tm . tm_hour		6625767	0					
ANR	6625834	Identifier	tm		6625767	0					
ANR	6625835	Identifier	tm_hour		6625767	1					
ANR	6625836	BitAndExpression	( dtime >> 11 ) & 31		6625767	1		&			
ANR	6625837	ShiftExpression	dtime >> 11		6625767	0		>>			
ANR	6625838	Identifier	dtime		6625767	0					
ANR	6625839	PrimaryExpression	11		6625767	1					
ANR	6625840	PrimaryExpression	31		6625767	1					
ANR	6625841	ExpressionStatement	tm . tm_min = ( dtime >> 5 ) & 63	782:4:20013:20038	6625767	7	True				
ANR	6625842	AssignmentExpression	tm . tm_min = ( dtime >> 5 ) & 63		6625767	0		=			
ANR	6625843	MemberAccess	tm . tm_min		6625767	0					
ANR	6625844	Identifier	tm		6625767	0					
ANR	6625845	Identifier	tm_min		6625767	1					
ANR	6625846	BitAndExpression	( dtime >> 5 ) & 63		6625767	1		&			
ANR	6625847	ShiftExpression	dtime >> 5		6625767	0		>>			
ANR	6625848	Identifier	dtime		6625767	0					
ANR	6625849	PrimaryExpression	5		6625767	1					
ANR	6625850	PrimaryExpression	63		6625767	1					
ANR	6625851	ExpressionStatement	tm . tm_sec = ( dtime << 1 ) & 62	783:4:20044:20069	6625767	8	True				
ANR	6625852	AssignmentExpression	tm . tm_sec = ( dtime << 1 ) & 62		6625767	0		=			
ANR	6625853	MemberAccess	tm . tm_sec		6625767	0					
ANR	6625854	Identifier	tm		6625767	0					
ANR	6625855	Identifier	tm_sec		6625767	1					
ANR	6625856	BitAndExpression	( dtime << 1 ) & 62		6625767	1		&			
ANR	6625857	ShiftExpression	dtime << 1		6625767	0		<<			
ANR	6625858	Identifier	dtime		6625767	0					
ANR	6625859	PrimaryExpression	1		6625767	1					
ANR	6625860	PrimaryExpression	62		6625767	1					
ANR	6625861	ReturnStatement	return mktime ( & tm ) ;	785:4:20076:20094	6625767	9	True				
ANR	6625862	CallExpression	mktime ( & tm )		6625767	0					
ANR	6625863	Callee	mktime		6625767	0					
ANR	6625864	Identifier	mktime		6625767	0					
ANR	6625865	ArgumentList	& tm		6625767	1					
ANR	6625866	Argument	& tm		6625767	0					
ANR	6625867	UnaryOperationExpression	& tm		6625767	0					
ANR	6625868	UnaryOperator	&		6625767	0					
ANR	6625869	Identifier	tm		6625767	1					
ANR	6625870	ReturnType	static time_t		6625767	1					
ANR	6625871	Identifier	_zip_d2u_time		6625767	2					
ANR	6625872	ParameterList	"zip_uint16_t dtime , zip_uint16_t ddate"		6625767	3					
ANR	6625873	Parameter	zip_uint16_t dtime	768:14:19689:19706	6625767	0	True				
ANR	6625874	ParameterType	zip_uint16_t		6625767	0					
ANR	6625875	Identifier	dtime		6625767	1					
ANR	6625876	Parameter	zip_uint16_t ddate	768:34:19709:19726	6625767	1	True				
ANR	6625877	ParameterType	zip_uint16_t		6625767	0					
ANR	6625878	Identifier	ddate		6625767	1					
ANR	6625879	CFGEntryNode	ENTRY		6625767		True				
ANR	6625880	CFGExitNode	EXIT		6625767		True				
ANR	6625881	Symbol	mktime		6625767						
ANR	6625882	Symbol	ddate		6625767						
ANR	6625883	Symbol	& tm		6625767						
ANR	6625884	Symbol	tm . tm_mday		6625767						
ANR	6625885	Symbol	tm . tm_sec		6625767						
ANR	6625886	Symbol	tm . tm_min		6625767						
ANR	6625887	Symbol	dtime		6625767						
ANR	6625888	Symbol	tm		6625767						
ANR	6625889	Symbol	tm . tm_isdst		6625767						
ANR	6625890	Symbol	tm . tm_hour		6625767						
ANR	6625891	Symbol	tm . tm_year		6625767						
ANR	6625892	Symbol	tm . tm_mon		6625767						
ANR	6625893	Function	_zip_ef_utf8	790:0:20102:20788							
ANR	6625894	FunctionDef	"_zip_ef_utf8 (zip_uint16_t id , struct zip_string * str , struct zip_error * error)"		6625893	0					
ANR	6625895	CompoundStatement		792:0:20213:20788	6625893	0					
ANR	6625896	IdentifierDeclStatement	const zip_uint8_t * raw ;	793:4:20219:20241	6625893	0	True				
ANR	6625897	IdentifierDecl	* raw		6625893	0					
ANR	6625898	IdentifierDeclType	const zip_uint8_t *		6625893	0					
ANR	6625899	Identifier	raw		6625893	1					
ANR	6625900	IdentifierDeclStatement	"zip_uint8_t * data , * p ;"	794:4:20247:20268	6625893	1	True				
ANR	6625901	IdentifierDecl	* data		6625893	0					
ANR	6625902	IdentifierDeclType	zip_uint8_t *		6625893	0					
ANR	6625903	Identifier	data		6625893	1					
ANR	6625904	IdentifierDecl	* p		6625893	1					
ANR	6625905	IdentifierDeclType	zip_uint8_t *		6625893	0					
ANR	6625906	Identifier	p		6625893	1					
ANR	6625907	IdentifierDeclStatement	zip_uint32_t len ;	795:4:20274:20290	6625893	2	True				
ANR	6625908	IdentifierDecl	len		6625893	0					
ANR	6625909	IdentifierDeclType	zip_uint32_t		6625893	0					
ANR	6625910	Identifier	len		6625893	1					
ANR	6625911	IdentifierDeclStatement	struct zip_extra_field * ef ;	796:4:20296:20322	6625893	3	True				
ANR	6625912	IdentifierDecl	* ef		6625893	0					
ANR	6625913	IdentifierDeclType	struct zip_extra_field *		6625893	0					
ANR	6625914	Identifier	ef		6625893	1					
ANR	6625915	ExpressionStatement	"raw = _zip_string_get ( str , & len , ZIP_FL_ENC_RAW , NULL )"	798:4:20329:20383	6625893	4	True				
ANR	6625916	AssignmentExpression	"raw = _zip_string_get ( str , & len , ZIP_FL_ENC_RAW , NULL )"		6625893	0		=			
ANR	6625917	Identifier	raw		6625893	0					
ANR	6625918	CallExpression	"_zip_string_get ( str , & len , ZIP_FL_ENC_RAW , NULL )"		6625893	1					
ANR	6625919	Callee	_zip_string_get		6625893	0					
ANR	6625920	Identifier	_zip_string_get		6625893	0					
ANR	6625921	ArgumentList	str		6625893	1					
ANR	6625922	Argument	str		6625893	0					
ANR	6625923	Identifier	str		6625893	0					
ANR	6625924	Argument	& len		6625893	1					
ANR	6625925	UnaryOperationExpression	& len		6625893	0					
ANR	6625926	UnaryOperator	&		6625893	0					
ANR	6625927	Identifier	len		6625893	1					
ANR	6625928	Argument	ZIP_FL_ENC_RAW		6625893	2					
ANR	6625929	Identifier	ZIP_FL_ENC_RAW		6625893	0					
ANR	6625930	Argument	NULL		6625893	3					
ANR	6625931	Identifier	NULL		6625893	0					
ANR	6625932	IfStatement	if ( len + 5 > ZIP_UINT16_MAX )		6625893	5					
ANR	6625933	Condition	len + 5 > ZIP_UINT16_MAX	800:8:20394:20415	6625893	0	True				
ANR	6625934	RelationalExpression	len + 5 > ZIP_UINT16_MAX		6625893	0		>			
ANR	6625935	AdditiveExpression	len + 5		6625893	0		+			
ANR	6625936	Identifier	len		6625893	0					
ANR	6625937	PrimaryExpression	5		6625893	1					
ANR	6625938	Identifier	ZIP_UINT16_MAX		6625893	1					
ANR	6625939	CompoundStatement		9:32:204:204	6625893	1					
ANR	6625940	IfStatement	if ( ( data = ( zip_uint8_t * ) malloc ( len + 5 ) ) == NULL )		6625893	6					
ANR	6625941	Condition	( data = ( zip_uint8_t * ) malloc ( len + 5 ) ) == NULL	804:8:20464:20506	6625893	0	True				
ANR	6625942	EqualityExpression	( data = ( zip_uint8_t * ) malloc ( len + 5 ) ) == NULL		6625893	0		==			
ANR	6625943	AssignmentExpression	data = ( zip_uint8_t * ) malloc ( len + 5 )		6625893	0		=			
ANR	6625944	Identifier	data		6625893	0					
ANR	6625945	CastExpression	( zip_uint8_t * ) malloc ( len + 5 )		6625893	1					
ANR	6625946	CastTarget	zip_uint8_t *		6625893	0					
ANR	6625947	CallExpression	malloc ( len + 5 )		6625893	1					
ANR	6625948	Callee	malloc		6625893	0					
ANR	6625949	Identifier	malloc		6625893	0					
ANR	6625950	ArgumentList	len + 5		6625893	1					
ANR	6625951	Argument	len + 5		6625893	0					
ANR	6625952	AdditiveExpression	len + 5		6625893	0		+			
ANR	6625953	Identifier	len		6625893	0					
ANR	6625954	PrimaryExpression	5		6625893	1					
ANR	6625955	Identifier	NULL		6625893	1					
ANR	6625956	CompoundStatement		13:53:295:295	6625893	1					
ANR	6625957	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	805:1:20512:20551	6625893	0	True				
ANR	6625958	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6625893	0					
ANR	6625959	Callee	_zip_error_set		6625893	0					
ANR	6625960	Identifier	_zip_error_set		6625893	0					
ANR	6625961	ArgumentList	error		6625893	1					
ANR	6625962	Argument	error		6625893	0					
ANR	6625963	Identifier	error		6625893	0					
ANR	6625964	Argument	ZIP_ER_MEMORY		6625893	1					
ANR	6625965	Identifier	ZIP_ER_MEMORY		6625893	0					
ANR	6625966	Argument	0		6625893	2					
ANR	6625967	PrimaryExpression	0		6625893	0					
ANR	6625968	ReturnStatement	return NULL ;	806:1:20554:20565	6625893	1	True				
ANR	6625969	Identifier	NULL		6625893	0					
ANR	6625970	ExpressionStatement	p = data	809:4:20578:20586	6625893	7	True				
ANR	6625971	AssignmentExpression	p = data		6625893	0		=			
ANR	6625972	Identifier	p		6625893	0					
ANR	6625973	Identifier	data		6625893	1					
ANR	6625974	ExpressionStatement	* ( p ++ ) = 1	810:4:20592:20602	6625893	8	True				
ANR	6625975	AssignmentExpression	* ( p ++ ) = 1		6625893	0		=			
ANR	6625976	UnaryOperationExpression	* ( p ++ )		6625893	0					
ANR	6625977	UnaryOperator	*		6625893	0					
ANR	6625978	PostIncDecOperationExpression	p ++		6625893	1					
ANR	6625979	Identifier	p		6625893	0					
ANR	6625980	IncDec	++		6625893	1					
ANR	6625981	PrimaryExpression	1		6625893	1					
ANR	6625982	ExpressionStatement	"_zip_poke4 ( _zip_string_crc32 ( str ) , & p )"	811:4:20608:20646	6625893	9	True				
ANR	6625983	CallExpression	"_zip_poke4 ( _zip_string_crc32 ( str ) , & p )"		6625893	0					
ANR	6625984	Callee	_zip_poke4		6625893	0					
ANR	6625985	Identifier	_zip_poke4		6625893	0					
ANR	6625986	ArgumentList	_zip_string_crc32 ( str )		6625893	1					
ANR	6625987	Argument	_zip_string_crc32 ( str )		6625893	0					
ANR	6625988	CallExpression	_zip_string_crc32 ( str )		6625893	0					
ANR	6625989	Callee	_zip_string_crc32		6625893	0					
ANR	6625990	Identifier	_zip_string_crc32		6625893	0					
ANR	6625991	ArgumentList	str		6625893	1					
ANR	6625992	Argument	str		6625893	0					
ANR	6625993	Identifier	str		6625893	0					
ANR	6625994	Argument	& p		6625893	1					
ANR	6625995	UnaryOperationExpression	& p		6625893	0					
ANR	6625996	UnaryOperator	&		6625893	0					
ANR	6625997	Identifier	p		6625893	1					
ANR	6625998	ExpressionStatement	"memcpy ( p , raw , len )"	812:4:20652:20671	6625893	10	True				
ANR	6625999	CallExpression	"memcpy ( p , raw , len )"		6625893	0					
ANR	6626000	Callee	memcpy		6625893	0					
ANR	6626001	Identifier	memcpy		6625893	0					
ANR	6626002	ArgumentList	p		6625893	1					
ANR	6626003	Argument	p		6625893	0					
ANR	6626004	Identifier	p		6625893	0					
ANR	6626005	Argument	raw		6625893	1					
ANR	6626006	Identifier	raw		6625893	0					
ANR	6626007	Argument	len		6625893	2					
ANR	6626008	Identifier	len		6625893	0					
ANR	6626009	ExpressionStatement	p += len	813:4:20677:20685	6625893	11	True				
ANR	6626010	AssignmentExpression	p += len		6625893	0		+=			
ANR	6626011	Identifier	p		6625893	0					
ANR	6626012	Identifier	len		6625893	1					
ANR	6626013	ExpressionStatement	"ef = _zip_ef_new ( id , ( zip_uint16_t ) ( p - data ) , data , ZIP_EF_BOTH )"	815:4:20692:20755	6625893	12	True				
ANR	6626014	AssignmentExpression	"ef = _zip_ef_new ( id , ( zip_uint16_t ) ( p - data ) , data , ZIP_EF_BOTH )"		6625893	0		=			
ANR	6626015	Identifier	ef		6625893	0					
ANR	6626016	CallExpression	"_zip_ef_new ( id , ( zip_uint16_t ) ( p - data ) , data , ZIP_EF_BOTH )"		6625893	1					
ANR	6626017	Callee	_zip_ef_new		6625893	0					
ANR	6626018	Identifier	_zip_ef_new		6625893	0					
ANR	6626019	ArgumentList	id		6625893	1					
ANR	6626020	Argument	id		6625893	0					
ANR	6626021	Identifier	id		6625893	0					
ANR	6626022	Argument	( zip_uint16_t ) ( p - data )		6625893	1					
ANR	6626023	CastExpression	( zip_uint16_t ) ( p - data )		6625893	0					
ANR	6626024	CastTarget	zip_uint16_t		6625893	0					
ANR	6626025	AdditiveExpression	p - data		6625893	1		-			
ANR	6626026	Identifier	p		6625893	0					
ANR	6626027	Identifier	data		6625893	1					
ANR	6626028	Argument	data		6625893	2					
ANR	6626029	Identifier	data		6625893	0					
ANR	6626030	Argument	ZIP_EF_BOTH		6625893	3					
ANR	6626031	Identifier	ZIP_EF_BOTH		6625893	0					
ANR	6626032	ExpressionStatement	free ( data )	816:4:20761:20771	6625893	13	True				
ANR	6626033	CallExpression	free ( data )		6625893	0					
ANR	6626034	Callee	free		6625893	0					
ANR	6626035	Identifier	free		6625893	0					
ANR	6626036	ArgumentList	data		6625893	1					
ANR	6626037	Argument	data		6625893	0					
ANR	6626038	Identifier	data		6625893	0					
ANR	6626039	ReturnStatement	return ef ;	817:4:20777:20786	6625893	14	True				
ANR	6626040	Identifier	ef		6625893	0					
ANR	6626041	ReturnType	static struct zip_extra_field *		6625893	1					
ANR	6626042	Identifier	_zip_ef_utf8		6625893	2					
ANR	6626043	ParameterList	"zip_uint16_t id , struct zip_string * str , struct zip_error * error"		6625893	3					
ANR	6626044	Parameter	zip_uint16_t id	791:13:20147:20161	6625893	0	True				
ANR	6626045	ParameterType	zip_uint16_t		6625893	0					
ANR	6626046	Identifier	id		6625893	1					
ANR	6626047	Parameter	struct zip_string * str	791:30:20164:20185	6625893	1	True				
ANR	6626048	ParameterType	struct zip_string *		6625893	0					
ANR	6626049	Identifier	str		6625893	1					
ANR	6626050	Parameter	struct zip_error * error	791:54:20188:20210	6625893	2	True				
ANR	6626051	ParameterType	struct zip_error *		6625893	0					
ANR	6626052	Identifier	error		6625893	1					
ANR	6626053	CFGEntryNode	ENTRY		6625893		True				
ANR	6626054	CFGExitNode	EXIT		6625893		True				
ANR	6626055	Symbol	ef		6625893						
ANR	6626056	Symbol	malloc		6625893						
ANR	6626057	Symbol	* ( p ++ )		6625893						
ANR	6626058	Symbol	NULL		6625893						
ANR	6626059	Symbol	data		6625893						
ANR	6626060	Symbol	ZIP_EF_BOTH		6625893						
ANR	6626061	Symbol	ZIP_UINT16_MAX		6625893						
ANR	6626062	Symbol	raw		6625893						
ANR	6626063	Symbol	error		6625893						
ANR	6626064	Symbol	_zip_string_crc32		6625893						
ANR	6626065	Symbol	str		6625893						
ANR	6626066	Symbol	p		6625893						
ANR	6626067	Symbol	_zip_string_get		6625893						
ANR	6626068	Symbol	len		6625893						
ANR	6626069	Symbol	& p		6625893						
ANR	6626070	Symbol	_zip_ef_new		6625893						
ANR	6626071	Symbol	ZIP_FL_ENC_RAW		6625893						
ANR	6626072	Symbol	id		6625893						
ANR	6626073	Symbol	& len		6625893						
ANR	6626074	Symbol	ZIP_ER_MEMORY		6625893						
ANR	6626075	Function	_zip_get_dirent	822:0:20794:21430							
ANR	6626076	FunctionDef	"_zip_get_dirent (struct zip * za , zip_uint64_t idx , zip_flags_t flags , struct zip_error * error)"		6626075	0					
ANR	6626077	CompoundStatement		824:0:20908:21430	6626075	0					
ANR	6626078	IfStatement	if ( error == NULL )		6626075	0					
ANR	6626079	Condition	error == NULL	825:8:20918:20930	6626075	0	True				
ANR	6626080	EqualityExpression	error == NULL		6626075	0		==			
ANR	6626081	Identifier	error		6626075	0					
ANR	6626082	Identifier	NULL		6626075	1					
ANR	6626083	ExpressionStatement	error = & za -> error	826:1:20934:20952	6626075	1	True				
ANR	6626084	AssignmentExpression	error = & za -> error		6626075	0		=			
ANR	6626085	Identifier	error		6626075	0					
ANR	6626086	UnaryOperationExpression	& za -> error		6626075	1					
ANR	6626087	UnaryOperator	&		6626075	0					
ANR	6626088	PtrMemberAccess	za -> error		6626075	1					
ANR	6626089	Identifier	za		6626075	0					
ANR	6626090	Identifier	error		6626075	1					
ANR	6626091	IfStatement	if ( idx >= za -> nentry )		6626075	1					
ANR	6626092	Condition	idx >= za -> nentry	828:8:20963:20979	6626075	0	True				
ANR	6626093	RelationalExpression	idx >= za -> nentry		6626075	0		>=			
ANR	6626094	Identifier	idx		6626075	0					
ANR	6626095	PtrMemberAccess	za -> nentry		6626075	1					
ANR	6626096	Identifier	za		6626075	0					
ANR	6626097	Identifier	nentry		6626075	1					
ANR	6626098	CompoundStatement		5:27:73:73	6626075	1					
ANR	6626099	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"	829:1:20985:21023	6626075	0	True				
ANR	6626100	CallExpression	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"		6626075	0					
ANR	6626101	Callee	_zip_error_set		6626075	0					
ANR	6626102	Identifier	_zip_error_set		6626075	0					
ANR	6626103	ArgumentList	error		6626075	1					
ANR	6626104	Argument	error		6626075	0					
ANR	6626105	Identifier	error		6626075	0					
ANR	6626106	Argument	ZIP_ER_INVAL		6626075	1					
ANR	6626107	Identifier	ZIP_ER_INVAL		6626075	0					
ANR	6626108	Argument	0		6626075	2					
ANR	6626109	PrimaryExpression	0		6626075	0					
ANR	6626110	ReturnStatement	return NULL ;	830:1:21026:21037	6626075	1	True				
ANR	6626111	Identifier	NULL		6626075	0					
ANR	6626112	IfStatement	if ( ( flags & ZIP_FL_UNCHANGED ) || za -> entry [ idx ] . changes == NULL )		6626075	2					
ANR	6626113	Condition	( flags & ZIP_FL_UNCHANGED ) || za -> entry [ idx ] . changes == NULL	833:8:21054:21113	6626075	0	True				
ANR	6626114	OrExpression	( flags & ZIP_FL_UNCHANGED ) || za -> entry [ idx ] . changes == NULL		6626075	0		||			
ANR	6626115	BitAndExpression	flags & ZIP_FL_UNCHANGED		6626075	0		&			
ANR	6626116	Identifier	flags		6626075	0					
ANR	6626117	Identifier	ZIP_FL_UNCHANGED		6626075	1					
ANR	6626118	EqualityExpression	za -> entry [ idx ] . changes == NULL		6626075	1		==			
ANR	6626119	MemberAccess	za -> entry [ idx ] . changes		6626075	0					
ANR	6626120	ArrayIndexing	za -> entry [ idx ]		6626075	0					
ANR	6626121	PtrMemberAccess	za -> entry		6626075	0					
ANR	6626122	Identifier	za		6626075	0					
ANR	6626123	Identifier	entry		6626075	1					
ANR	6626124	Identifier	idx		6626075	1					
ANR	6626125	Identifier	changes		6626075	1					
ANR	6626126	Identifier	NULL		6626075	1					
ANR	6626127	CompoundStatement		10:70:207:207	6626075	1					
ANR	6626128	IfStatement	if ( za -> entry [ idx ] . orig == NULL )		6626075	0					
ANR	6626129	Condition	za -> entry [ idx ] . orig == NULL	834:5:21123:21149	6626075	0	True				
ANR	6626130	EqualityExpression	za -> entry [ idx ] . orig == NULL		6626075	0		==			
ANR	6626131	MemberAccess	za -> entry [ idx ] . orig		6626075	0					
ANR	6626132	ArrayIndexing	za -> entry [ idx ]		6626075	0					
ANR	6626133	PtrMemberAccess	za -> entry		6626075	0					
ANR	6626134	Identifier	za		6626075	0					
ANR	6626135	Identifier	entry		6626075	1					
ANR	6626136	Identifier	idx		6626075	1					
ANR	6626137	Identifier	orig		6626075	1					
ANR	6626138	Identifier	NULL		6626075	1					
ANR	6626139	CompoundStatement		11:34:243:243	6626075	1					
ANR	6626140	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"	835:5:21159:21197	6626075	0	True				
ANR	6626141	CallExpression	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"		6626075	0					
ANR	6626142	Callee	_zip_error_set		6626075	0					
ANR	6626143	Identifier	_zip_error_set		6626075	0					
ANR	6626144	ArgumentList	error		6626075	1					
ANR	6626145	Argument	error		6626075	0					
ANR	6626146	Identifier	error		6626075	0					
ANR	6626147	Argument	ZIP_ER_INVAL		6626075	1					
ANR	6626148	Identifier	ZIP_ER_INVAL		6626075	0					
ANR	6626149	Argument	0		6626075	2					
ANR	6626150	PrimaryExpression	0		6626075	0					
ANR	6626151	ReturnStatement	return NULL ;	836:5:21204:21215	6626075	1	True				
ANR	6626152	Identifier	NULL		6626075	0					
ANR	6626153	IfStatement	if ( za -> entry [ idx ] . deleted && ( flags & ZIP_FL_UNCHANGED ) == 0 )		6626075	1					
ANR	6626154	Condition	za -> entry [ idx ] . deleted && ( flags & ZIP_FL_UNCHANGED ) == 0	838:5:21225:21281	6626075	0	True				
ANR	6626155	AndExpression	za -> entry [ idx ] . deleted && ( flags & ZIP_FL_UNCHANGED ) == 0		6626075	0		&&			
ANR	6626156	MemberAccess	za -> entry [ idx ] . deleted		6626075	0					
ANR	6626157	ArrayIndexing	za -> entry [ idx ]		6626075	0					
ANR	6626158	PtrMemberAccess	za -> entry		6626075	0					
ANR	6626159	Identifier	za		6626075	0					
ANR	6626160	Identifier	entry		6626075	1					
ANR	6626161	Identifier	idx		6626075	1					
ANR	6626162	Identifier	deleted		6626075	1					
ANR	6626163	EqualityExpression	( flags & ZIP_FL_UNCHANGED ) == 0		6626075	1		==			
ANR	6626164	BitAndExpression	flags & ZIP_FL_UNCHANGED		6626075	0		&			
ANR	6626165	Identifier	flags		6626075	0					
ANR	6626166	Identifier	ZIP_FL_UNCHANGED		6626075	1					
ANR	6626167	PrimaryExpression	0		6626075	1					
ANR	6626168	CompoundStatement		15:64:375:375	6626075	1					
ANR	6626169	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_DELETED , 0 )"	839:5:21291:21331	6626075	0	True				
ANR	6626170	CallExpression	"_zip_error_set ( error , ZIP_ER_DELETED , 0 )"		6626075	0					
ANR	6626171	Callee	_zip_error_set		6626075	0					
ANR	6626172	Identifier	_zip_error_set		6626075	0					
ANR	6626173	ArgumentList	error		6626075	1					
ANR	6626174	Argument	error		6626075	0					
ANR	6626175	Identifier	error		6626075	0					
ANR	6626176	Argument	ZIP_ER_DELETED		6626075	1					
ANR	6626177	Identifier	ZIP_ER_DELETED		6626075	0					
ANR	6626178	Argument	0		6626075	2					
ANR	6626179	PrimaryExpression	0		6626075	0					
ANR	6626180	ReturnStatement	return NULL ;	840:5:21338:21349	6626075	1	True				
ANR	6626181	Identifier	NULL		6626075	0					
ANR	6626182	ReturnStatement	return za -> entry [ idx ] . orig ;	842:1:21355:21381	6626075	2	True				
ANR	6626183	MemberAccess	za -> entry [ idx ] . orig		6626075	0					
ANR	6626184	ArrayIndexing	za -> entry [ idx ]		6626075	0					
ANR	6626185	PtrMemberAccess	za -> entry		6626075	0					
ANR	6626186	Identifier	za		6626075	0					
ANR	6626187	Identifier	entry		6626075	1					
ANR	6626188	Identifier	idx		6626075	1					
ANR	6626189	Identifier	orig		6626075	1					
ANR	6626190	ElseStatement	else		6626075	0					
ANR	6626191	ReturnStatement	return za -> entry [ idx ] . changes ;	845:1:21399:21428	6626075	0	True				
ANR	6626192	MemberAccess	za -> entry [ idx ] . changes		6626075	0					
ANR	6626193	ArrayIndexing	za -> entry [ idx ]		6626075	0					
ANR	6626194	PtrMemberAccess	za -> entry		6626075	0					
ANR	6626195	Identifier	za		6626075	0					
ANR	6626196	Identifier	entry		6626075	1					
ANR	6626197	Identifier	idx		6626075	1					
ANR	6626198	Identifier	changes		6626075	1					
ANR	6626199	ReturnType	struct zip_dirent *		6626075	1					
ANR	6626200	Identifier	_zip_get_dirent		6626075	2					
ANR	6626201	ParameterList	"struct zip * za , zip_uint64_t idx , zip_flags_t flags , struct zip_error * error"		6626075	3					
ANR	6626202	Parameter	struct zip * za	823:16:20830:20843	6626075	0	True				
ANR	6626203	ParameterType	struct zip *		6626075	0					
ANR	6626204	Identifier	za		6626075	1					
ANR	6626205	Parameter	zip_uint64_t idx	823:32:20846:20861	6626075	1	True				
ANR	6626206	ParameterType	zip_uint64_t		6626075	0					
ANR	6626207	Identifier	idx		6626075	1					
ANR	6626208	Parameter	zip_flags_t flags	823:50:20864:20880	6626075	2	True				
ANR	6626209	ParameterType	zip_flags_t		6626075	0					
ANR	6626210	Identifier	flags		6626075	1					
ANR	6626211	Parameter	struct zip_error * error	823:69:20883:20905	6626075	3	True				
ANR	6626212	ParameterType	struct zip_error *		6626075	0					
ANR	6626213	Identifier	error		6626075	1					
ANR	6626214	CFGEntryNode	ENTRY		6626075		True				
ANR	6626215	CFGExitNode	EXIT		6626075		True				
ANR	6626216	Symbol	NULL		6626075						
ANR	6626217	Symbol	& za -> error		6626075						
ANR	6626218	Symbol	za		6626075						
ANR	6626219	Symbol	flags		6626075						
ANR	6626220	Symbol	za -> entry		6626075						
ANR	6626221	Symbol	za -> entry [ idx ] . orig		6626075						
ANR	6626222	Symbol	error		6626075						
ANR	6626223	Symbol	ZIP_FL_UNCHANGED		6626075						
ANR	6626224	Symbol	* za		6626075						
ANR	6626225	Symbol	* za -> entry		6626075						
ANR	6626226	Symbol	za -> entry [ idx ] . changes		6626075						
ANR	6626227	Symbol	ZIP_ER_INVAL		6626075						
ANR	6626228	Symbol	* * za		6626075						
ANR	6626229	Symbol	ZIP_ER_DELETED		6626075						
ANR	6626230	Symbol	za -> entry [ idx ] . deleted		6626075						
ANR	6626231	Symbol	za -> nentry		6626075						
ANR	6626232	Symbol	* idx		6626075						
ANR	6626233	Symbol	idx		6626075						
ANR	6626234	Function	_zip_read2	850:0:21436:21586							
ANR	6626235	FunctionDef	_zip_read2 (const zip_uint8_t * * a)		6626234	0					
ANR	6626236	CompoundStatement		852:0:21483:21586	6626234	0					
ANR	6626237	IdentifierDeclStatement	zip_uint16_t ret ;	853:4:21489:21505	6626234	0	True				
ANR	6626238	IdentifierDecl	ret		6626234	0					
ANR	6626239	IdentifierDeclType	zip_uint16_t		6626234	0					
ANR	6626240	Identifier	ret		6626234	1					
ANR	6626241	ExpressionStatement	ret = ( zip_uint16_t ) ( ( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 ) )	855:4:21512:21554	6626234	1	True				
ANR	6626242	AssignmentExpression	ret = ( zip_uint16_t ) ( ( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 ) )		6626234	0		=			
ANR	6626243	Identifier	ret		6626234	0					
ANR	6626244	CastExpression	( zip_uint16_t ) ( ( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 ) )		6626234	1					
ANR	6626245	CastTarget	zip_uint16_t		6626234	0					
ANR	6626246	AdditiveExpression	( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 )		6626234	1		+			
ANR	6626247	ArrayIndexing	( * a ) [ 0 ]		6626234	0					
ANR	6626248	UnaryOperationExpression	* a		6626234	0					
ANR	6626249	UnaryOperator	*		6626234	0					
ANR	6626250	Identifier	a		6626234	1					
ANR	6626251	PrimaryExpression	0		6626234	1					
ANR	6626252	ShiftExpression	( * a ) [ 1 ] << 8		6626234	1		<<			
ANR	6626253	ArrayIndexing	( * a ) [ 1 ]		6626234	0					
ANR	6626254	UnaryOperationExpression	* a		6626234	0					
ANR	6626255	UnaryOperator	*		6626234	0					
ANR	6626256	Identifier	a		6626234	1					
ANR	6626257	PrimaryExpression	1		6626234	1					
ANR	6626258	PrimaryExpression	8		6626234	1					
ANR	6626259	ExpressionStatement	* a += 2	856:4:21560:21567	6626234	2	True				
ANR	6626260	AssignmentExpression	* a += 2		6626234	0		+=			
ANR	6626261	UnaryOperationExpression	* a		6626234	0					
ANR	6626262	UnaryOperator	*		6626234	0					
ANR	6626263	Identifier	a		6626234	1					
ANR	6626264	PrimaryExpression	2		6626234	1					
ANR	6626265	ReturnStatement	return ret ;	858:4:21574:21584	6626234	3	True				
ANR	6626266	Identifier	ret		6626234	0					
ANR	6626267	ReturnType	zip_uint16_t		6626234	1					
ANR	6626268	Identifier	_zip_read2		6626234	2					
ANR	6626269	ParameterList	const zip_uint8_t * * a		6626234	3					
ANR	6626270	Parameter	const zip_uint8_t * * a	851:11:21460:21480	6626234	0	True				
ANR	6626271	ParameterType	const zip_uint8_t * *		6626234	0					
ANR	6626272	Identifier	a		6626234	1					
ANR	6626273	CFGEntryNode	ENTRY		6626234		True				
ANR	6626274	CFGExitNode	EXIT		6626234		True				
ANR	6626275	Symbol	ret		6626234						
ANR	6626276	Symbol	a		6626234						
ANR	6626277	Symbol	* * a		6626234						
ANR	6626278	Symbol	* a		6626234						
ANR	6626279	Function	_zip_read4	863:0:21592:21770							
ANR	6626280	FunctionDef	_zip_read4 (const zip_uint8_t * * a)		6626279	0					
ANR	6626281	CompoundStatement		865:0:21639:21770	6626279	0					
ANR	6626282	IdentifierDeclStatement	zip_uint32_t ret ;	866:4:21645:21661	6626279	0	True				
ANR	6626283	IdentifierDecl	ret		6626279	0					
ANR	6626284	IdentifierDeclType	zip_uint32_t		6626279	0					
ANR	6626285	Identifier	ret		6626279	1					
ANR	6626286	ExpressionStatement	ret = ( ( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]	868:4:21668:21738	6626279	1	True				
ANR	6626287	AssignmentExpression	ret = ( ( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6626279	0		=			
ANR	6626288	Identifier	ret		6626279	0					
ANR	6626289	AdditiveExpression	( ( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6626279	1		+			
ANR	6626290	ShiftExpression	( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8		6626279	0		<<			
ANR	6626291	AdditiveExpression	( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ]		6626279	0		+			
ANR	6626292	ShiftExpression	( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8		6626279	0		<<			
ANR	6626293	AdditiveExpression	( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ]		6626279	0		+			
ANR	6626294	ShiftExpression	( zip_uint32_t ) ( * a ) [ 3 ] << 8		6626279	0		<<			
ANR	6626295	CastExpression	( zip_uint32_t ) ( * a ) [ 3 ]		6626279	0					
ANR	6626296	CastTarget	zip_uint32_t		6626279	0					
ANR	6626297	ArrayIndexing	( * a ) [ 3 ]		6626279	1					
ANR	6626298	UnaryOperationExpression	* a		6626279	0					
ANR	6626299	UnaryOperator	*		6626279	0					
ANR	6626300	Identifier	a		6626279	1					
ANR	6626301	PrimaryExpression	3		6626279	1					
ANR	6626302	PrimaryExpression	8		6626279	1					
ANR	6626303	ArrayIndexing	( * a ) [ 2 ]		6626279	1					
ANR	6626304	UnaryOperationExpression	* a		6626279	0					
ANR	6626305	UnaryOperator	*		6626279	0					
ANR	6626306	Identifier	a		6626279	1					
ANR	6626307	PrimaryExpression	2		6626279	1					
ANR	6626308	PrimaryExpression	8		6626279	1					
ANR	6626309	ArrayIndexing	( * a ) [ 1 ]		6626279	1					
ANR	6626310	UnaryOperationExpression	* a		6626279	0					
ANR	6626311	UnaryOperator	*		6626279	0					
ANR	6626312	Identifier	a		6626279	1					
ANR	6626313	PrimaryExpression	1		6626279	1					
ANR	6626314	PrimaryExpression	8		6626279	1					
ANR	6626315	ArrayIndexing	( * a ) [ 0 ]		6626279	1					
ANR	6626316	UnaryOperationExpression	* a		6626279	0					
ANR	6626317	UnaryOperator	*		6626279	0					
ANR	6626318	Identifier	a		6626279	1					
ANR	6626319	PrimaryExpression	0		6626279	1					
ANR	6626320	ExpressionStatement	* a += 4	869:4:21744:21751	6626279	2	True				
ANR	6626321	AssignmentExpression	* a += 4		6626279	0		+=			
ANR	6626322	UnaryOperationExpression	* a		6626279	0					
ANR	6626323	UnaryOperator	*		6626279	0					
ANR	6626324	Identifier	a		6626279	1					
ANR	6626325	PrimaryExpression	4		6626279	1					
ANR	6626326	ReturnStatement	return ret ;	871:4:21758:21768	6626279	3	True				
ANR	6626327	Identifier	ret		6626279	0					
ANR	6626328	ReturnType	zip_uint32_t		6626279	1					
ANR	6626329	Identifier	_zip_read4		6626279	2					
ANR	6626330	ParameterList	const zip_uint8_t * * a		6626279	3					
ANR	6626331	Parameter	const zip_uint8_t * * a	864:11:21616:21636	6626279	0	True				
ANR	6626332	ParameterType	const zip_uint8_t * *		6626279	0					
ANR	6626333	Identifier	a		6626279	1					
ANR	6626334	CFGEntryNode	ENTRY		6626279		True				
ANR	6626335	CFGExitNode	EXIT		6626279		True				
ANR	6626336	Symbol	ret		6626279						
ANR	6626337	Symbol	a		6626279						
ANR	6626338	Symbol	* * a		6626279						
ANR	6626339	Symbol	* a		6626279						
ANR	6626340	Function	_zip_read8	876:0:21776:22046							
ANR	6626341	FunctionDef	_zip_read8 (const zip_uint8_t * * a)		6626340	0					
ANR	6626342	CompoundStatement		878:0:21823:22046	6626340	0					
ANR	6626343	IdentifierDeclStatement	"zip_uint64_t x , y ;"	879:4:21829:21846	6626340	0	True				
ANR	6626344	IdentifierDecl	x		6626340	0					
ANR	6626345	IdentifierDeclType	zip_uint64_t		6626340	0					
ANR	6626346	Identifier	x		6626340	1					
ANR	6626347	IdentifierDecl	y		6626340	1					
ANR	6626348	IdentifierDeclType	zip_uint64_t		6626340	0					
ANR	6626349	Identifier	y		6626340	1					
ANR	6626350	ExpressionStatement	x = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]	881:4:21853:21921	6626340	1	True				
ANR	6626351	AssignmentExpression	x = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6626340	0		=			
ANR	6626352	Identifier	x		6626340	0					
ANR	6626353	AdditiveExpression	( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6626340	1		+			
ANR	6626354	ShiftExpression	( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8		6626340	0		<<			
ANR	6626355	AdditiveExpression	( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ]		6626340	0		+			
ANR	6626356	ShiftExpression	( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8		6626340	0		<<			
ANR	6626357	AdditiveExpression	( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ]		6626340	0		+			
ANR	6626358	ShiftExpression	( zip_uint64_t ) ( * a ) [ 3 ] << 8		6626340	0		<<			
ANR	6626359	CastExpression	( zip_uint64_t ) ( * a ) [ 3 ]		6626340	0					
ANR	6626360	CastTarget	zip_uint64_t		6626340	0					
ANR	6626361	ArrayIndexing	( * a ) [ 3 ]		6626340	1					
ANR	6626362	UnaryOperationExpression	* a		6626340	0					
ANR	6626363	UnaryOperator	*		6626340	0					
ANR	6626364	Identifier	a		6626340	1					
ANR	6626365	PrimaryExpression	3		6626340	1					
ANR	6626366	PrimaryExpression	8		6626340	1					
ANR	6626367	ArrayIndexing	( * a ) [ 2 ]		6626340	1					
ANR	6626368	UnaryOperationExpression	* a		6626340	0					
ANR	6626369	UnaryOperator	*		6626340	0					
ANR	6626370	Identifier	a		6626340	1					
ANR	6626371	PrimaryExpression	2		6626340	1					
ANR	6626372	PrimaryExpression	8		6626340	1					
ANR	6626373	ArrayIndexing	( * a ) [ 1 ]		6626340	1					
ANR	6626374	UnaryOperationExpression	* a		6626340	0					
ANR	6626375	UnaryOperator	*		6626340	0					
ANR	6626376	Identifier	a		6626340	1					
ANR	6626377	PrimaryExpression	1		6626340	1					
ANR	6626378	PrimaryExpression	8		6626340	1					
ANR	6626379	ArrayIndexing	( * a ) [ 0 ]		6626340	1					
ANR	6626380	UnaryOperationExpression	* a		6626340	0					
ANR	6626381	UnaryOperator	*		6626340	0					
ANR	6626382	Identifier	a		6626340	1					
ANR	6626383	PrimaryExpression	0		6626340	1					
ANR	6626384	ExpressionStatement	* a += 4	882:4:21927:21934	6626340	2	True				
ANR	6626385	AssignmentExpression	* a += 4		6626340	0		+=			
ANR	6626386	UnaryOperationExpression	* a		6626340	0					
ANR	6626387	UnaryOperator	*		6626340	0					
ANR	6626388	Identifier	a		6626340	1					
ANR	6626389	PrimaryExpression	4		6626340	1					
ANR	6626390	ExpressionStatement	y = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]	883:4:21940:22008	6626340	3	True				
ANR	6626391	AssignmentExpression	y = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6626340	0		=			
ANR	6626392	Identifier	y		6626340	0					
ANR	6626393	AdditiveExpression	( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6626340	1		+			
ANR	6626394	ShiftExpression	( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8		6626340	0		<<			
ANR	6626395	AdditiveExpression	( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ]		6626340	0		+			
ANR	6626396	ShiftExpression	( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8		6626340	0		<<			
ANR	6626397	AdditiveExpression	( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ]		6626340	0		+			
ANR	6626398	ShiftExpression	( zip_uint64_t ) ( * a ) [ 3 ] << 8		6626340	0		<<			
ANR	6626399	CastExpression	( zip_uint64_t ) ( * a ) [ 3 ]		6626340	0					
ANR	6626400	CastTarget	zip_uint64_t		6626340	0					
ANR	6626401	ArrayIndexing	( * a ) [ 3 ]		6626340	1					
ANR	6626402	UnaryOperationExpression	* a		6626340	0					
ANR	6626403	UnaryOperator	*		6626340	0					
ANR	6626404	Identifier	a		6626340	1					
ANR	6626405	PrimaryExpression	3		6626340	1					
ANR	6626406	PrimaryExpression	8		6626340	1					
ANR	6626407	ArrayIndexing	( * a ) [ 2 ]		6626340	1					
ANR	6626408	UnaryOperationExpression	* a		6626340	0					
ANR	6626409	UnaryOperator	*		6626340	0					
ANR	6626410	Identifier	a		6626340	1					
ANR	6626411	PrimaryExpression	2		6626340	1					
ANR	6626412	PrimaryExpression	8		6626340	1					
ANR	6626413	ArrayIndexing	( * a ) [ 1 ]		6626340	1					
ANR	6626414	UnaryOperationExpression	* a		6626340	0					
ANR	6626415	UnaryOperator	*		6626340	0					
ANR	6626416	Identifier	a		6626340	1					
ANR	6626417	PrimaryExpression	1		6626340	1					
ANR	6626418	PrimaryExpression	8		6626340	1					
ANR	6626419	ArrayIndexing	( * a ) [ 0 ]		6626340	1					
ANR	6626420	UnaryOperationExpression	* a		6626340	0					
ANR	6626421	UnaryOperator	*		6626340	0					
ANR	6626422	Identifier	a		6626340	1					
ANR	6626423	PrimaryExpression	0		6626340	1					
ANR	6626424	ExpressionStatement	* a += 4	884:4:22014:22021	6626340	4	True				
ANR	6626425	AssignmentExpression	* a += 4		6626340	0		+=			
ANR	6626426	UnaryOperationExpression	* a		6626340	0					
ANR	6626427	UnaryOperator	*		6626340	0					
ANR	6626428	Identifier	a		6626340	1					
ANR	6626429	PrimaryExpression	4		6626340	1					
ANR	6626430	ReturnStatement	return x + ( y << 32 ) ;	886:4:22028:22044	6626340	5	True				
ANR	6626431	AdditiveExpression	x + ( y << 32 )		6626340	0		+			
ANR	6626432	Identifier	x		6626340	0					
ANR	6626433	ShiftExpression	y << 32		6626340	1		<<			
ANR	6626434	Identifier	y		6626340	0					
ANR	6626435	PrimaryExpression	32		6626340	1					
ANR	6626436	ReturnType	zip_uint64_t		6626340	1					
ANR	6626437	Identifier	_zip_read8		6626340	2					
ANR	6626438	ParameterList	const zip_uint8_t * * a		6626340	3					
ANR	6626439	Parameter	const zip_uint8_t * * a	877:11:21800:21820	6626340	0	True				
ANR	6626440	ParameterType	const zip_uint8_t * *		6626340	0					
ANR	6626441	Identifier	a		6626340	1					
ANR	6626442	CFGEntryNode	ENTRY		6626340		True				
ANR	6626443	CFGExitNode	EXIT		6626340		True				
ANR	6626444	Symbol	a		6626340						
ANR	6626445	Symbol	x		6626340						
ANR	6626446	Symbol	y		6626340						
ANR	6626447	Symbol	* * a		6626340						
ANR	6626448	Symbol	* a		6626340						
ANR	6626449	Function	_zip_read_data	891:0:22052:22846							
ANR	6626450	FunctionDef	"_zip_read_data (const zip_uint8_t * * buf , FILE * fp , size_t len , int nulp , struct zip_error * error)"		6626449	0					
ANR	6626451	CompoundStatement		893:0:22163:22846	6626449	0					
ANR	6626452	IdentifierDeclStatement	zip_uint8_t * r ;	894:4:22169:22183	6626449	0	True				
ANR	6626453	IdentifierDecl	* r		6626449	0					
ANR	6626454	IdentifierDeclType	zip_uint8_t *		6626449	0					
ANR	6626455	Identifier	r		6626449	1					
ANR	6626456	IfStatement	if ( len == 0 && nulp == 0 )		6626449	1					
ANR	6626457	Condition	len == 0 && nulp == 0	896:8:22194:22214	6626449	0	True				
ANR	6626458	AndExpression	len == 0 && nulp == 0		6626449	0		&&			
ANR	6626459	EqualityExpression	len == 0		6626449	0		==			
ANR	6626460	Identifier	len		6626449	0					
ANR	6626461	PrimaryExpression	0		6626449	1					
ANR	6626462	EqualityExpression	nulp == 0		6626449	1		==			
ANR	6626463	Identifier	nulp		6626449	0					
ANR	6626464	PrimaryExpression	0		6626449	1					
ANR	6626465	ReturnStatement	return NULL ;	897:1:22218:22229	6626449	1	True				
ANR	6626466	Identifier	NULL		6626449	0					
ANR	6626467	ExpressionStatement	r = ( zip_uint8_t * ) malloc ( nulp ? len + 1 : len )	899:4:22236:22281	6626449	2	True				
ANR	6626468	AssignmentExpression	r = ( zip_uint8_t * ) malloc ( nulp ? len + 1 : len )		6626449	0		=			
ANR	6626469	Identifier	r		6626449	0					
ANR	6626470	CastExpression	( zip_uint8_t * ) malloc ( nulp ? len + 1 : len )		6626449	1					
ANR	6626471	CastTarget	zip_uint8_t *		6626449	0					
ANR	6626472	CallExpression	malloc ( nulp ? len + 1 : len )		6626449	1					
ANR	6626473	Callee	malloc		6626449	0					
ANR	6626474	Identifier	malloc		6626449	0					
ANR	6626475	ArgumentList	nulp ? len + 1 : len		6626449	1					
ANR	6626476	Argument	nulp ? len + 1 : len		6626449	0					
ANR	6626477	ConditionalExpression	nulp ? len + 1 : len		6626449	0					
ANR	6626478	Condition	nulp		6626449	0					
ANR	6626479	Identifier	nulp		6626449	0					
ANR	6626480	AdditiveExpression	len + 1		6626449	1		+			
ANR	6626481	Identifier	len		6626449	0					
ANR	6626482	PrimaryExpression	1		6626449	1					
ANR	6626483	Identifier	len		6626449	2					
ANR	6626484	IfStatement	if ( ! r )		6626449	3					
ANR	6626485	Condition	! r	900:8:22291:22292	6626449	0	True				
ANR	6626486	UnaryOperationExpression	! r		6626449	0					
ANR	6626487	UnaryOperator	!		6626449	0					
ANR	6626488	Identifier	r		6626449	1					
ANR	6626489	CompoundStatement		8:12:131:131	6626449	1					
ANR	6626490	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	901:1:22298:22337	6626449	0	True				
ANR	6626491	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6626449	0					
ANR	6626492	Callee	_zip_error_set		6626449	0					
ANR	6626493	Identifier	_zip_error_set		6626449	0					
ANR	6626494	ArgumentList	error		6626449	1					
ANR	6626495	Argument	error		6626449	0					
ANR	6626496	Identifier	error		6626449	0					
ANR	6626497	Argument	ZIP_ER_MEMORY		6626449	1					
ANR	6626498	Identifier	ZIP_ER_MEMORY		6626449	0					
ANR	6626499	Argument	0		6626449	2					
ANR	6626500	PrimaryExpression	0		6626449	0					
ANR	6626501	ReturnStatement	return NULL ;	902:1:22340:22351	6626449	1	True				
ANR	6626502	Identifier	NULL		6626449	0					
ANR	6626503	IfStatement	if ( buf )		6626449	4					
ANR	6626504	Condition	buf	905:8:22368:22370	6626449	0	True				
ANR	6626505	Identifier	buf		6626449	0					
ANR	6626506	CompoundStatement		13:13:209:209	6626449	1					
ANR	6626507	ExpressionStatement	"memcpy ( r , * buf , len )"	906:1:22376:22396	6626449	0	True				
ANR	6626508	CallExpression	"memcpy ( r , * buf , len )"		6626449	0					
ANR	6626509	Callee	memcpy		6626449	0					
ANR	6626510	Identifier	memcpy		6626449	0					
ANR	6626511	ArgumentList	r		6626449	1					
ANR	6626512	Argument	r		6626449	0					
ANR	6626513	Identifier	r		6626449	0					
ANR	6626514	Argument	* buf		6626449	1					
ANR	6626515	UnaryOperationExpression	* buf		6626449	0					
ANR	6626516	UnaryOperator	*		6626449	0					
ANR	6626517	Identifier	buf		6626449	1					
ANR	6626518	Argument	len		6626449	2					
ANR	6626519	Identifier	len		6626449	0					
ANR	6626520	ExpressionStatement	* buf += len	907:1:22399:22410	6626449	1	True				
ANR	6626521	AssignmentExpression	* buf += len		6626449	0		+=			
ANR	6626522	UnaryOperationExpression	* buf		6626449	0					
ANR	6626523	UnaryOperator	*		6626449	0					
ANR	6626524	Identifier	buf		6626449	1					
ANR	6626525	Identifier	len		6626449	1					
ANR	6626526	ElseStatement	else		6626449	0					
ANR	6626527	CompoundStatement		17:9:263:263	6626449	0					
ANR	6626528	IfStatement	"if ( fread ( r , 1 , len , fp ) < len )"		6626449	0					
ANR	6626529	Condition	"fread ( r , 1 , len , fp ) < len"	910:5:22434:22457	6626449	0	True				
ANR	6626530	RelationalExpression	"fread ( r , 1 , len , fp ) < len"		6626449	0		<			
ANR	6626531	CallExpression	"fread ( r , 1 , len , fp )"		6626449	0					
ANR	6626532	Callee	fread		6626449	0					
ANR	6626533	Identifier	fread		6626449	0					
ANR	6626534	ArgumentList	r		6626449	1					
ANR	6626535	Argument	r		6626449	0					
ANR	6626536	Identifier	r		6626449	0					
ANR	6626537	Argument	1		6626449	1					
ANR	6626538	PrimaryExpression	1		6626449	0					
ANR	6626539	Argument	len		6626449	2					
ANR	6626540	Identifier	len		6626449	0					
ANR	6626541	Argument	fp		6626449	3					
ANR	6626542	Identifier	fp		6626449	0					
ANR	6626543	Identifier	len		6626449	1					
ANR	6626544	CompoundStatement		18:31:296:296	6626449	1					
ANR	6626545	ExpressionStatement	free ( r )	911:5:22467:22474	6626449	0	True				
ANR	6626546	CallExpression	free ( r )		6626449	0					
ANR	6626547	Callee	free		6626449	0					
ANR	6626548	Identifier	free		6626449	0					
ANR	6626549	ArgumentList	r		6626449	1					
ANR	6626550	Argument	r		6626449	0					
ANR	6626551	Identifier	r		6626449	0					
ANR	6626552	IfStatement	if ( ferror ( fp ) )		6626449	1					
ANR	6626553	Condition	ferror ( fp )	912:16:22492:22501	6626449	0	True				
ANR	6626554	CallExpression	ferror ( fp )		6626449	0					
ANR	6626555	Callee	ferror		6626449	0					
ANR	6626556	Identifier	ferror		6626449	0					
ANR	6626557	ArgumentList	fp		6626449	1					
ANR	6626558	Argument	fp		6626449	0					
ANR	6626559	Identifier	fp		6626449	0					
ANR	6626560	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	913:16:22520:22561	6626449	1	True				
ANR	6626561	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6626449	0					
ANR	6626562	Callee	_zip_error_set		6626449	0					
ANR	6626563	Identifier	_zip_error_set		6626449	0					
ANR	6626564	ArgumentList	error		6626449	1					
ANR	6626565	Argument	error		6626449	0					
ANR	6626566	Identifier	error		6626449	0					
ANR	6626567	Argument	ZIP_ER_READ		6626449	1					
ANR	6626568	Identifier	ZIP_ER_READ		6626449	0					
ANR	6626569	Argument	errno		6626449	2					
ANR	6626570	Identifier	errno		6626449	0					
ANR	6626571	ElseStatement	else		6626449	0					
ANR	6626572	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	915:16:22596:22635	6626449	0	True				
ANR	6626573	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6626449	0					
ANR	6626574	Callee	_zip_error_set		6626449	0					
ANR	6626575	Identifier	_zip_error_set		6626449	0					
ANR	6626576	ArgumentList	error		6626449	1					
ANR	6626577	Argument	error		6626449	0					
ANR	6626578	Identifier	error		6626449	0					
ANR	6626579	Argument	ZIP_ER_INCONS		6626449	1					
ANR	6626580	Identifier	ZIP_ER_INCONS		6626449	0					
ANR	6626581	Argument	0		6626449	2					
ANR	6626582	PrimaryExpression	0		6626449	0					
ANR	6626583	ReturnStatement	return NULL ;	916:5:22642:22653	6626449	2	True				
ANR	6626584	Identifier	NULL		6626449	0					
ANR	6626585	IfStatement	if ( nulp )		6626449	5					
ANR	6626586	Condition	nulp	920:8:22673:22676	6626449	0	True				
ANR	6626587	Identifier	nulp		6626449	0					
ANR	6626588	CompoundStatement		29:1:518:532	6626449	1					
ANR	6626589	IdentifierDeclStatement	zip_uint8_t * o ;	921:1:22682:22696	6626449	0	True				
ANR	6626590	IdentifierDecl	* o		6626449	0					
ANR	6626591	IdentifierDeclType	zip_uint8_t *		6626449	0					
ANR	6626592	Identifier	o		6626449	1					
ANR	6626593	ExpressionStatement	r [ len ] = 0	923:1:22755:22765	6626449	1	True				
ANR	6626594	AssignmentExpression	r [ len ] = 0		6626449	0		=			
ANR	6626595	ArrayIndexing	r [ len ]		6626449	0					
ANR	6626596	Identifier	r		6626449	0					
ANR	6626597	Identifier	len		6626449	1					
ANR	6626598	PrimaryExpression	0		6626449	1					
ANR	6626599	ForStatement	for ( o = r ; o < r + len ; o ++ )		6626449	2					
ANR	6626600	ForInit	o = r ;	924:6:22773:22776	6626449	0	True				
ANR	6626601	AssignmentExpression	o = r		6626449	0		=			
ANR	6626602	Identifier	o		6626449	0					
ANR	6626603	Identifier	r		6626449	1					
ANR	6626604	Condition	o < r + len	924:11:22778:22784	6626449	1	True				
ANR	6626605	RelationalExpression	o < r + len		6626449	0		<			
ANR	6626606	Identifier	o		6626449	0					
ANR	6626607	AdditiveExpression	r + len		6626449	1		+			
ANR	6626608	Identifier	r		6626449	0					
ANR	6626609	Identifier	len		6626449	1					
ANR	6626610	PostIncDecOperationExpression	o ++	924:20:22787:22789	6626449	2	True				
ANR	6626611	Identifier	o		6626449	0					
ANR	6626612	IncDec	++		6626449	1					
ANR	6626613	IfStatement	if ( * o == '\\0' )		6626449	3					
ANR	6626614	Condition	* o == '\\0'	925:9:22801:22810	6626449	0	True				
ANR	6626615	EqualityExpression	* o == '\\0'		6626449	0		==			
ANR	6626616	UnaryOperationExpression	* o		6626449	0					
ANR	6626617	UnaryOperator	*		6626449	0					
ANR	6626618	Identifier	o		6626449	1					
ANR	6626619	PrimaryExpression	'\\0'		6626449	1					
ANR	6626620	ExpressionStatement	* o = ' '	926:2:22815:22823	6626449	1	True				
ANR	6626621	AssignmentExpression	* o = ' '		6626449	0		=			
ANR	6626622	UnaryOperationExpression	* o		6626449	0					
ANR	6626623	UnaryOperator	*		6626449	0					
ANR	6626624	Identifier	o		6626449	1					
ANR	6626625	PrimaryExpression	' '		6626449	1					
ANR	6626626	ReturnStatement	return r ;	929:4:22836:22844	6626449	6	True				
ANR	6626627	Identifier	r		6626449	0					
ANR	6626628	ReturnType	zip_uint8_t *		6626449	1					
ANR	6626629	Identifier	_zip_read_data		6626449	2					
ANR	6626630	ParameterList	"const zip_uint8_t * * buf , FILE * fp , size_t len , int nulp , struct zip_error * error"		6626449	3					
ANR	6626631	Parameter	const zip_uint8_t * * buf	892:15:22081:22103	6626449	0	True				
ANR	6626632	ParameterType	const zip_uint8_t * *		6626449	0					
ANR	6626633	Identifier	buf		6626449	1					
ANR	6626634	Parameter	FILE * fp	892:40:22106:22113	6626449	1	True				
ANR	6626635	ParameterType	FILE *		6626449	0					
ANR	6626636	Identifier	fp		6626449	1					
ANR	6626637	Parameter	size_t len	892:50:22116:22125	6626449	2	True				
ANR	6626638	ParameterType	size_t		6626449	0					
ANR	6626639	Identifier	len		6626449	1					
ANR	6626640	Parameter	int nulp	892:62:22128:22135	6626449	3	True				
ANR	6626641	ParameterType	int		6626449	0					
ANR	6626642	Identifier	nulp		6626449	1					
ANR	6626643	Parameter	struct zip_error * error	892:72:22138:22160	6626449	4	True				
ANR	6626644	ParameterType	struct zip_error *		6626449	0					
ANR	6626645	Identifier	error		6626449	1					
ANR	6626646	CFGEntryNode	ENTRY		6626449		True				
ANR	6626647	CFGExitNode	EXIT		6626449		True				
ANR	6626648	Symbol	malloc		6626449						
ANR	6626649	Symbol	* buf		6626449						
ANR	6626650	Symbol	errno		6626449						
ANR	6626651	Symbol	NULL		6626449						
ANR	6626652	Symbol	fp		6626449						
ANR	6626653	Symbol	error		6626449						
ANR	6626654	Symbol	ZIP_ER_READ		6626449						
ANR	6626655	Symbol	fread		6626449						
ANR	6626656	Symbol	o		6626449						
ANR	6626657	Symbol	ferror		6626449						
ANR	6626658	Symbol	buf		6626449						
ANR	6626659	Symbol	r		6626449						
ANR	6626660	Symbol	len		6626449						
ANR	6626661	Symbol	nulp		6626449						
ANR	6626662	Symbol	* o		6626449						
ANR	6626663	Symbol	ZIP_ER_INCONS		6626449						
ANR	6626664	Symbol	ZIP_ER_MEMORY		6626449						
ANR	6626665	Symbol	* r		6626449						
ANR	6626666	Symbol	* len		6626449						
ANR	6626667	Function	_zip_read_string	934:0:22852:23204							
ANR	6626668	FunctionDef	"_zip_read_string (const zip_uint8_t * * buf , FILE * fp , zip_uint16_t len , int nulp , struct zip_error * error)"		6626667	0					
ANR	6626669	CompoundStatement		936:0:22984:23204	6626667	0					
ANR	6626670	IdentifierDeclStatement	zip_uint8_t * raw ;	937:4:22990:23006	6626667	0	True				
ANR	6626671	IdentifierDecl	* raw		6626667	0					
ANR	6626672	IdentifierDeclType	zip_uint8_t *		6626667	0					
ANR	6626673	Identifier	raw		6626667	1					
ANR	6626674	IdentifierDeclStatement	struct zip_string * s ;	938:4:23012:23032	6626667	1	True				
ANR	6626675	IdentifierDecl	* s		6626667	0					
ANR	6626676	IdentifierDeclType	struct zip_string *		6626667	0					
ANR	6626677	Identifier	s		6626667	1					
ANR	6626678	IfStatement	"if ( ( raw = _zip_read_data ( buf , fp , len , nulp , error ) ) == NULL )"		6626667	2					
ANR	6626679	Condition	"( raw = _zip_read_data ( buf , fp , len , nulp , error ) ) == NULL"	940:8:23043:23097	6626667	0	True				
ANR	6626680	EqualityExpression	"( raw = _zip_read_data ( buf , fp , len , nulp , error ) ) == NULL"		6626667	0		==			
ANR	6626681	AssignmentExpression	"raw = _zip_read_data ( buf , fp , len , nulp , error )"		6626667	0		=			
ANR	6626682	Identifier	raw		6626667	0					
ANR	6626683	CallExpression	"_zip_read_data ( buf , fp , len , nulp , error )"		6626667	1					
ANR	6626684	Callee	_zip_read_data		6626667	0					
ANR	6626685	Identifier	_zip_read_data		6626667	0					
ANR	6626686	ArgumentList	buf		6626667	1					
ANR	6626687	Argument	buf		6626667	0					
ANR	6626688	Identifier	buf		6626667	0					
ANR	6626689	Argument	fp		6626667	1					
ANR	6626690	Identifier	fp		6626667	0					
ANR	6626691	Argument	len		6626667	2					
ANR	6626692	Identifier	len		6626667	0					
ANR	6626693	Argument	nulp		6626667	3					
ANR	6626694	Identifier	nulp		6626667	0					
ANR	6626695	Argument	error		6626667	4					
ANR	6626696	Identifier	error		6626667	0					
ANR	6626697	Identifier	NULL		6626667	1					
ANR	6626698	ReturnStatement	return NULL ;	941:1:23101:23112	6626667	1	True				
ANR	6626699	Identifier	NULL		6626667	0					
ANR	6626700	ExpressionStatement	"s = _zip_string_new ( raw , len , ZIP_FL_ENC_GUESS , error )"	943:4:23119:23173	6626667	3	True				
ANR	6626701	AssignmentExpression	"s = _zip_string_new ( raw , len , ZIP_FL_ENC_GUESS , error )"		6626667	0		=			
ANR	6626702	Identifier	s		6626667	0					
ANR	6626703	CallExpression	"_zip_string_new ( raw , len , ZIP_FL_ENC_GUESS , error )"		6626667	1					
ANR	6626704	Callee	_zip_string_new		6626667	0					
ANR	6626705	Identifier	_zip_string_new		6626667	0					
ANR	6626706	ArgumentList	raw		6626667	1					
ANR	6626707	Argument	raw		6626667	0					
ANR	6626708	Identifier	raw		6626667	0					
ANR	6626709	Argument	len		6626667	1					
ANR	6626710	Identifier	len		6626667	0					
ANR	6626711	Argument	ZIP_FL_ENC_GUESS		6626667	2					
ANR	6626712	Identifier	ZIP_FL_ENC_GUESS		6626667	0					
ANR	6626713	Argument	error		6626667	3					
ANR	6626714	Identifier	error		6626667	0					
ANR	6626715	ExpressionStatement	free ( raw )	944:4:23179:23188	6626667	4	True				
ANR	6626716	CallExpression	free ( raw )		6626667	0					
ANR	6626717	Callee	free		6626667	0					
ANR	6626718	Identifier	free		6626667	0					
ANR	6626719	ArgumentList	raw		6626667	1					
ANR	6626720	Argument	raw		6626667	0					
ANR	6626721	Identifier	raw		6626667	0					
ANR	6626722	ReturnStatement	return s ;	945:4:23194:23202	6626667	5	True				
ANR	6626723	Identifier	s		6626667	0					
ANR	6626724	ReturnType	static struct zip_string *		6626667	1					
ANR	6626725	Identifier	_zip_read_string		6626667	2					
ANR	6626726	ParameterList	"const zip_uint8_t * * buf , FILE * fp , zip_uint16_t len , int nulp , struct zip_error * error"		6626667	3					
ANR	6626727	Parameter	const zip_uint8_t * * buf	935:17:22896:22918	6626667	0	True				
ANR	6626728	ParameterType	const zip_uint8_t * *		6626667	0					
ANR	6626729	Identifier	buf		6626667	1					
ANR	6626730	Parameter	FILE * fp	935:42:22921:22928	6626667	1	True				
ANR	6626731	ParameterType	FILE *		6626667	0					
ANR	6626732	Identifier	fp		6626667	1					
ANR	6626733	Parameter	zip_uint16_t len	935:52:22931:22946	6626667	2	True				
ANR	6626734	ParameterType	zip_uint16_t		6626667	0					
ANR	6626735	Identifier	len		6626667	1					
ANR	6626736	Parameter	int nulp	935:70:22949:22956	6626667	3	True				
ANR	6626737	ParameterType	int		6626667	0					
ANR	6626738	Identifier	nulp		6626667	1					
ANR	6626739	Parameter	struct zip_error * error	935:80:22959:22981	6626667	4	True				
ANR	6626740	ParameterType	struct zip_error *		6626667	0					
ANR	6626741	Identifier	error		6626667	1					
ANR	6626742	CFGEntryNode	ENTRY		6626667		True				
ANR	6626743	CFGExitNode	EXIT		6626667		True				
ANR	6626744	Symbol	buf		6626667						
ANR	6626745	Symbol	s		6626667						
ANR	6626746	Symbol	_zip_read_data		6626667						
ANR	6626747	Symbol	NULL		6626667						
ANR	6626748	Symbol	len		6626667						
ANR	6626749	Symbol	nulp		6626667						
ANR	6626750	Symbol	raw		6626667						
ANR	6626751	Symbol	fp		6626667						
ANR	6626752	Symbol	ZIP_FL_ENC_GUESS		6626667						
ANR	6626753	Symbol	_zip_string_new		6626667						
ANR	6626754	Symbol	error		6626667						
ANR	6626755	Function	_zip_poke4	950:0:23210:23374							
ANR	6626756	FunctionDef	"_zip_poke4 (zip_uint32_t i , zip_uint8_t * * p)"		6626755	0					
ANR	6626757	CompoundStatement		952:0:23259:23374	6626755	0					
ANR	6626758	ExpressionStatement	* ( ( * p ) ++ ) = i & 0xff	953:4:23265:23283	6626755	0	True				
ANR	6626759	AssignmentExpression	* ( ( * p ) ++ ) = i & 0xff		6626755	0		=			
ANR	6626760	UnaryOperationExpression	* ( ( * p ) ++ )		6626755	0					
ANR	6626761	UnaryOperator	*		6626755	0					
ANR	6626762	PostIncDecOperationExpression	( * p ) ++		6626755	1					
ANR	6626763	UnaryOperationExpression	* p		6626755	0					
ANR	6626764	UnaryOperator	*		6626755	0					
ANR	6626765	Identifier	p		6626755	1					
ANR	6626766	IncDec	++		6626755	1					
ANR	6626767	BitAndExpression	i & 0xff		6626755	1		&			
ANR	6626768	Identifier	i		6626755	0					
ANR	6626769	PrimaryExpression	0xff		6626755	1					
ANR	6626770	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff	954:4:23289:23312	6626755	1	True				
ANR	6626771	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff		6626755	0		=			
ANR	6626772	UnaryOperationExpression	* ( ( * p ) ++ )		6626755	0					
ANR	6626773	UnaryOperator	*		6626755	0					
ANR	6626774	PostIncDecOperationExpression	( * p ) ++		6626755	1					
ANR	6626775	UnaryOperationExpression	* p		6626755	0					
ANR	6626776	UnaryOperator	*		6626755	0					
ANR	6626777	Identifier	p		6626755	1					
ANR	6626778	IncDec	++		6626755	1					
ANR	6626779	BitAndExpression	( i >> 8 ) & 0xff		6626755	1		&			
ANR	6626780	ShiftExpression	i >> 8		6626755	0		>>			
ANR	6626781	Identifier	i		6626755	0					
ANR	6626782	PrimaryExpression	8		6626755	1					
ANR	6626783	PrimaryExpression	0xff		6626755	1					
ANR	6626784	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff	955:4:23318:23342	6626755	2	True				
ANR	6626785	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff		6626755	0		=			
ANR	6626786	UnaryOperationExpression	* ( ( * p ) ++ )		6626755	0					
ANR	6626787	UnaryOperator	*		6626755	0					
ANR	6626788	PostIncDecOperationExpression	( * p ) ++		6626755	1					
ANR	6626789	UnaryOperationExpression	* p		6626755	0					
ANR	6626790	UnaryOperator	*		6626755	0					
ANR	6626791	Identifier	p		6626755	1					
ANR	6626792	IncDec	++		6626755	1					
ANR	6626793	BitAndExpression	( i >> 16 ) & 0xff		6626755	1		&			
ANR	6626794	ShiftExpression	i >> 16		6626755	0		>>			
ANR	6626795	Identifier	i		6626755	0					
ANR	6626796	PrimaryExpression	16		6626755	1					
ANR	6626797	PrimaryExpression	0xff		6626755	1					
ANR	6626798	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff	956:4:23348:23372	6626755	3	True				
ANR	6626799	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff		6626755	0		=			
ANR	6626800	UnaryOperationExpression	* ( ( * p ) ++ )		6626755	0					
ANR	6626801	UnaryOperator	*		6626755	0					
ANR	6626802	PostIncDecOperationExpression	( * p ) ++		6626755	1					
ANR	6626803	UnaryOperationExpression	* p		6626755	0					
ANR	6626804	UnaryOperator	*		6626755	0					
ANR	6626805	Identifier	p		6626755	1					
ANR	6626806	IncDec	++		6626755	1					
ANR	6626807	BitAndExpression	( i >> 24 ) & 0xff		6626755	1		&			
ANR	6626808	ShiftExpression	i >> 24		6626755	0		>>			
ANR	6626809	Identifier	i		6626755	0					
ANR	6626810	PrimaryExpression	24		6626755	1					
ANR	6626811	PrimaryExpression	0xff		6626755	1					
ANR	6626812	ReturnType	void		6626755	1					
ANR	6626813	Identifier	_zip_poke4		6626755	2					
ANR	6626814	ParameterList	"zip_uint32_t i , zip_uint8_t * * p"		6626755	3					
ANR	6626815	Parameter	zip_uint32_t i	951:11:23226:23239	6626755	0	True				
ANR	6626816	ParameterType	zip_uint32_t		6626755	0					
ANR	6626817	Identifier	i		6626755	1					
ANR	6626818	Parameter	zip_uint8_t * * p	951:27:23242:23256	6626755	1	True				
ANR	6626819	ParameterType	zip_uint8_t * *		6626755	0					
ANR	6626820	Identifier	p		6626755	1					
ANR	6626821	CFGEntryNode	ENTRY		6626755		True				
ANR	6626822	CFGExitNode	EXIT		6626755		True				
ANR	6626823	Symbol	p		6626755						
ANR	6626824	Symbol	* ( ( * p ) ++ )		6626755						
ANR	6626825	Symbol	i		6626755						
ANR	6626826	Symbol	* p		6626755						
ANR	6626827	Function	_zip_poke8	961:0:23380:23664							
ANR	6626828	FunctionDef	"_zip_poke8 (zip_uint64_t i , zip_uint8_t * * p)"		6626827	0					
ANR	6626829	CompoundStatement		963:0:23429:23664	6626827	0					
ANR	6626830	ExpressionStatement	* ( ( * p ) ++ ) = i & 0xff	964:4:23435:23453	6626827	0	True				
ANR	6626831	AssignmentExpression	* ( ( * p ) ++ ) = i & 0xff		6626827	0		=			
ANR	6626832	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626833	UnaryOperator	*		6626827	0					
ANR	6626834	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626835	UnaryOperationExpression	* p		6626827	0					
ANR	6626836	UnaryOperator	*		6626827	0					
ANR	6626837	Identifier	p		6626827	1					
ANR	6626838	IncDec	++		6626827	1					
ANR	6626839	BitAndExpression	i & 0xff		6626827	1		&			
ANR	6626840	Identifier	i		6626827	0					
ANR	6626841	PrimaryExpression	0xff		6626827	1					
ANR	6626842	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff	965:4:23459:23482	6626827	1	True				
ANR	6626843	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff		6626827	0		=			
ANR	6626844	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626845	UnaryOperator	*		6626827	0					
ANR	6626846	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626847	UnaryOperationExpression	* p		6626827	0					
ANR	6626848	UnaryOperator	*		6626827	0					
ANR	6626849	Identifier	p		6626827	1					
ANR	6626850	IncDec	++		6626827	1					
ANR	6626851	BitAndExpression	( i >> 8 ) & 0xff		6626827	1		&			
ANR	6626852	ShiftExpression	i >> 8		6626827	0		>>			
ANR	6626853	Identifier	i		6626827	0					
ANR	6626854	PrimaryExpression	8		6626827	1					
ANR	6626855	PrimaryExpression	0xff		6626827	1					
ANR	6626856	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff	966:4:23488:23512	6626827	2	True				
ANR	6626857	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff		6626827	0		=			
ANR	6626858	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626859	UnaryOperator	*		6626827	0					
ANR	6626860	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626861	UnaryOperationExpression	* p		6626827	0					
ANR	6626862	UnaryOperator	*		6626827	0					
ANR	6626863	Identifier	p		6626827	1					
ANR	6626864	IncDec	++		6626827	1					
ANR	6626865	BitAndExpression	( i >> 16 ) & 0xff		6626827	1		&			
ANR	6626866	ShiftExpression	i >> 16		6626827	0		>>			
ANR	6626867	Identifier	i		6626827	0					
ANR	6626868	PrimaryExpression	16		6626827	1					
ANR	6626869	PrimaryExpression	0xff		6626827	1					
ANR	6626870	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff	967:4:23518:23542	6626827	3	True				
ANR	6626871	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff		6626827	0		=			
ANR	6626872	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626873	UnaryOperator	*		6626827	0					
ANR	6626874	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626875	UnaryOperationExpression	* p		6626827	0					
ANR	6626876	UnaryOperator	*		6626827	0					
ANR	6626877	Identifier	p		6626827	1					
ANR	6626878	IncDec	++		6626827	1					
ANR	6626879	BitAndExpression	( i >> 24 ) & 0xff		6626827	1		&			
ANR	6626880	ShiftExpression	i >> 24		6626827	0		>>			
ANR	6626881	Identifier	i		6626827	0					
ANR	6626882	PrimaryExpression	24		6626827	1					
ANR	6626883	PrimaryExpression	0xff		6626827	1					
ANR	6626884	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 32 ) & 0xff	968:4:23548:23572	6626827	4	True				
ANR	6626885	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 32 ) & 0xff		6626827	0		=			
ANR	6626886	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626887	UnaryOperator	*		6626827	0					
ANR	6626888	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626889	UnaryOperationExpression	* p		6626827	0					
ANR	6626890	UnaryOperator	*		6626827	0					
ANR	6626891	Identifier	p		6626827	1					
ANR	6626892	IncDec	++		6626827	1					
ANR	6626893	BitAndExpression	( i >> 32 ) & 0xff		6626827	1		&			
ANR	6626894	ShiftExpression	i >> 32		6626827	0		>>			
ANR	6626895	Identifier	i		6626827	0					
ANR	6626896	PrimaryExpression	32		6626827	1					
ANR	6626897	PrimaryExpression	0xff		6626827	1					
ANR	6626898	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 40 ) & 0xff	969:4:23578:23602	6626827	5	True				
ANR	6626899	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 40 ) & 0xff		6626827	0		=			
ANR	6626900	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626901	UnaryOperator	*		6626827	0					
ANR	6626902	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626903	UnaryOperationExpression	* p		6626827	0					
ANR	6626904	UnaryOperator	*		6626827	0					
ANR	6626905	Identifier	p		6626827	1					
ANR	6626906	IncDec	++		6626827	1					
ANR	6626907	BitAndExpression	( i >> 40 ) & 0xff		6626827	1		&			
ANR	6626908	ShiftExpression	i >> 40		6626827	0		>>			
ANR	6626909	Identifier	i		6626827	0					
ANR	6626910	PrimaryExpression	40		6626827	1					
ANR	6626911	PrimaryExpression	0xff		6626827	1					
ANR	6626912	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 48 ) & 0xff	970:4:23608:23632	6626827	6	True				
ANR	6626913	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 48 ) & 0xff		6626827	0		=			
ANR	6626914	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626915	UnaryOperator	*		6626827	0					
ANR	6626916	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626917	UnaryOperationExpression	* p		6626827	0					
ANR	6626918	UnaryOperator	*		6626827	0					
ANR	6626919	Identifier	p		6626827	1					
ANR	6626920	IncDec	++		6626827	1					
ANR	6626921	BitAndExpression	( i >> 48 ) & 0xff		6626827	1		&			
ANR	6626922	ShiftExpression	i >> 48		6626827	0		>>			
ANR	6626923	Identifier	i		6626827	0					
ANR	6626924	PrimaryExpression	48		6626827	1					
ANR	6626925	PrimaryExpression	0xff		6626827	1					
ANR	6626926	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 56 ) & 0xff	971:4:23638:23662	6626827	7	True				
ANR	6626927	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 56 ) & 0xff		6626827	0		=			
ANR	6626928	UnaryOperationExpression	* ( ( * p ) ++ )		6626827	0					
ANR	6626929	UnaryOperator	*		6626827	0					
ANR	6626930	PostIncDecOperationExpression	( * p ) ++		6626827	1					
ANR	6626931	UnaryOperationExpression	* p		6626827	0					
ANR	6626932	UnaryOperator	*		6626827	0					
ANR	6626933	Identifier	p		6626827	1					
ANR	6626934	IncDec	++		6626827	1					
ANR	6626935	BitAndExpression	( i >> 56 ) & 0xff		6626827	1		&			
ANR	6626936	ShiftExpression	i >> 56		6626827	0		>>			
ANR	6626937	Identifier	i		6626827	0					
ANR	6626938	PrimaryExpression	56		6626827	1					
ANR	6626939	PrimaryExpression	0xff		6626827	1					
ANR	6626940	ReturnType	void		6626827	1					
ANR	6626941	Identifier	_zip_poke8		6626827	2					
ANR	6626942	ParameterList	"zip_uint64_t i , zip_uint8_t * * p"		6626827	3					
ANR	6626943	Parameter	zip_uint64_t i	962:11:23396:23409	6626827	0	True				
ANR	6626944	ParameterType	zip_uint64_t		6626827	0					
ANR	6626945	Identifier	i		6626827	1					
ANR	6626946	Parameter	zip_uint8_t * * p	962:27:23412:23426	6626827	1	True				
ANR	6626947	ParameterType	zip_uint8_t * *		6626827	0					
ANR	6626948	Identifier	p		6626827	1					
ANR	6626949	CFGEntryNode	ENTRY		6626827		True				
ANR	6626950	CFGExitNode	EXIT		6626827		True				
ANR	6626951	Symbol	p		6626827						
ANR	6626952	Symbol	* ( ( * p ) ++ )		6626827						
ANR	6626953	Symbol	i		6626827						
ANR	6626954	Symbol	* p		6626827						
ANR	6626955	Function	_zip_write2	976:0:23670:23777							
ANR	6626956	FunctionDef	"_zip_write2 (zip_uint16_t i , FILE * fp)"		6626955	0					
ANR	6626957	CompoundStatement		978:0:23713:23777	6626955	0					
ANR	6626958	ExpressionStatement	"putc ( i & 0xff , fp )"	979:4:23719:23735	6626955	0	True				
ANR	6626959	CallExpression	"putc ( i & 0xff , fp )"		6626955	0					
ANR	6626960	Callee	putc		6626955	0					
ANR	6626961	Identifier	putc		6626955	0					
ANR	6626962	ArgumentList	i & 0xff		6626955	1					
ANR	6626963	Argument	i & 0xff		6626955	0					
ANR	6626964	BitAndExpression	i & 0xff		6626955	0		&			
ANR	6626965	Identifier	i		6626955	0					
ANR	6626966	PrimaryExpression	0xff		6626955	1					
ANR	6626967	Argument	fp		6626955	1					
ANR	6626968	Identifier	fp		6626955	0					
ANR	6626969	ExpressionStatement	"putc ( ( i >> 8 ) & 0xff , fp )"	980:4:23741:23762	6626955	1	True				
ANR	6626970	CallExpression	"putc ( ( i >> 8 ) & 0xff , fp )"		6626955	0					
ANR	6626971	Callee	putc		6626955	0					
ANR	6626972	Identifier	putc		6626955	0					
ANR	6626973	ArgumentList	( i >> 8 ) & 0xff		6626955	1					
ANR	6626974	Argument	( i >> 8 ) & 0xff		6626955	0					
ANR	6626975	BitAndExpression	( i >> 8 ) & 0xff		6626955	0		&			
ANR	6626976	ShiftExpression	i >> 8		6626955	0		>>			
ANR	6626977	Identifier	i		6626955	0					
ANR	6626978	PrimaryExpression	8		6626955	1					
ANR	6626979	PrimaryExpression	0xff		6626955	1					
ANR	6626980	Argument	fp		6626955	1					
ANR	6626981	Identifier	fp		6626955	0					
ANR	6626982	ReturnStatement	return ;	982:4:23769:23775	6626955	2	True				
ANR	6626983	ReturnType	void		6626955	1					
ANR	6626984	Identifier	_zip_write2		6626955	2					
ANR	6626985	ParameterList	"zip_uint16_t i , FILE * fp"		6626955	3					
ANR	6626986	Parameter	zip_uint16_t i	977:12:23687:23700	6626955	0	True				
ANR	6626987	ParameterType	zip_uint16_t		6626955	0					
ANR	6626988	Identifier	i		6626955	1					
ANR	6626989	Parameter	FILE * fp	977:28:23703:23710	6626955	1	True				
ANR	6626990	ParameterType	FILE *		6626955	0					
ANR	6626991	Identifier	fp		6626955	1					
ANR	6626992	CFGEntryNode	ENTRY		6626955		True				
ANR	6626993	CFGExitNode	EXIT		6626955		True				
ANR	6626994	Symbol	i		6626955						
ANR	6626995	Symbol	fp		6626955						
ANR	6626996	Function	_zip_write4	987:0:23783:23950							
ANR	6626997	FunctionDef	"_zip_write4 (zip_uint32_t i , FILE * fp)"		6626996	0					
ANR	6626998	CompoundStatement		989:0:23826:23950	6626996	0					
ANR	6626999	ExpressionStatement	"putc ( i & 0xff , fp )"	990:4:23832:23848	6626996	0	True				
ANR	6627000	CallExpression	"putc ( i & 0xff , fp )"		6626996	0					
ANR	6627001	Callee	putc		6626996	0					
ANR	6627002	Identifier	putc		6626996	0					
ANR	6627003	ArgumentList	i & 0xff		6626996	1					
ANR	6627004	Argument	i & 0xff		6626996	0					
ANR	6627005	BitAndExpression	i & 0xff		6626996	0		&			
ANR	6627006	Identifier	i		6626996	0					
ANR	6627007	PrimaryExpression	0xff		6626996	1					
ANR	6627008	Argument	fp		6626996	1					
ANR	6627009	Identifier	fp		6626996	0					
ANR	6627010	ExpressionStatement	"putc ( ( i >> 8 ) & 0xff , fp )"	991:4:23854:23875	6626996	1	True				
ANR	6627011	CallExpression	"putc ( ( i >> 8 ) & 0xff , fp )"		6626996	0					
ANR	6627012	Callee	putc		6626996	0					
ANR	6627013	Identifier	putc		6626996	0					
ANR	6627014	ArgumentList	( i >> 8 ) & 0xff		6626996	1					
ANR	6627015	Argument	( i >> 8 ) & 0xff		6626996	0					
ANR	6627016	BitAndExpression	( i >> 8 ) & 0xff		6626996	0		&			
ANR	6627017	ShiftExpression	i >> 8		6626996	0		>>			
ANR	6627018	Identifier	i		6626996	0					
ANR	6627019	PrimaryExpression	8		6626996	1					
ANR	6627020	PrimaryExpression	0xff		6626996	1					
ANR	6627021	Argument	fp		6626996	1					
ANR	6627022	Identifier	fp		6626996	0					
ANR	6627023	ExpressionStatement	"putc ( ( i >> 16 ) & 0xff , fp )"	992:4:23881:23903	6626996	2	True				
ANR	6627024	CallExpression	"putc ( ( i >> 16 ) & 0xff , fp )"		6626996	0					
ANR	6627025	Callee	putc		6626996	0					
ANR	6627026	Identifier	putc		6626996	0					
ANR	6627027	ArgumentList	( i >> 16 ) & 0xff		6626996	1					
ANR	6627028	Argument	( i >> 16 ) & 0xff		6626996	0					
ANR	6627029	BitAndExpression	( i >> 16 ) & 0xff		6626996	0		&			
ANR	6627030	ShiftExpression	i >> 16		6626996	0		>>			
ANR	6627031	Identifier	i		6626996	0					
ANR	6627032	PrimaryExpression	16		6626996	1					
ANR	6627033	PrimaryExpression	0xff		6626996	1					
ANR	6627034	Argument	fp		6626996	1					
ANR	6627035	Identifier	fp		6626996	0					
ANR	6627036	ExpressionStatement	"putc ( ( i >> 24 ) & 0xff , fp )"	993:4:23909:23931	6626996	3	True				
ANR	6627037	CallExpression	"putc ( ( i >> 24 ) & 0xff , fp )"		6626996	0					
ANR	6627038	Callee	putc		6626996	0					
ANR	6627039	Identifier	putc		6626996	0					
ANR	6627040	ArgumentList	( i >> 24 ) & 0xff		6626996	1					
ANR	6627041	Argument	( i >> 24 ) & 0xff		6626996	0					
ANR	6627042	BitAndExpression	( i >> 24 ) & 0xff		6626996	0		&			
ANR	6627043	ShiftExpression	i >> 24		6626996	0		>>			
ANR	6627044	Identifier	i		6626996	0					
ANR	6627045	PrimaryExpression	24		6626996	1					
ANR	6627046	PrimaryExpression	0xff		6626996	1					
ANR	6627047	Argument	fp		6626996	1					
ANR	6627048	Identifier	fp		6626996	0					
ANR	6627049	ReturnStatement	return ;	995:4:23942:23948	6626996	4	True				
ANR	6627050	ReturnType	void		6626996	1					
ANR	6627051	Identifier	_zip_write4		6626996	2					
ANR	6627052	ParameterList	"zip_uint32_t i , FILE * fp"		6626996	3					
ANR	6627053	Parameter	zip_uint32_t i	988:12:23800:23813	6626996	0	True				
ANR	6627054	ParameterType	zip_uint32_t		6626996	0					
ANR	6627055	Identifier	i		6626996	1					
ANR	6627056	Parameter	FILE * fp	988:28:23816:23823	6626996	1	True				
ANR	6627057	ParameterType	FILE *		6626996	0					
ANR	6627058	Identifier	fp		6626996	1					
ANR	6627059	CFGEntryNode	ENTRY		6626996		True				
ANR	6627060	CFGExitNode	EXIT		6626996		True				
ANR	6627061	Symbol	i		6626996						
ANR	6627062	Symbol	fp		6626996						
ANR	6627063	Function	_zip_write8	1000:0:23956:24235							
ANR	6627064	FunctionDef	"_zip_write8 (zip_uint64_t i , FILE * fp)"		6627063	0					
ANR	6627065	CompoundStatement		1002:0:23999:24235	6627063	0					
ANR	6627066	ExpressionStatement	"putc ( i & 0xff , fp )"	1003:4:24005:24021	6627063	0	True				
ANR	6627067	CallExpression	"putc ( i & 0xff , fp )"		6627063	0					
ANR	6627068	Callee	putc		6627063	0					
ANR	6627069	Identifier	putc		6627063	0					
ANR	6627070	ArgumentList	i & 0xff		6627063	1					
ANR	6627071	Argument	i & 0xff		6627063	0					
ANR	6627072	BitAndExpression	i & 0xff		6627063	0		&			
ANR	6627073	Identifier	i		6627063	0					
ANR	6627074	PrimaryExpression	0xff		6627063	1					
ANR	6627075	Argument	fp		6627063	1					
ANR	6627076	Identifier	fp		6627063	0					
ANR	6627077	ExpressionStatement	"putc ( ( i >> 8 ) & 0xff , fp )"	1004:4:24027:24048	6627063	1	True				
ANR	6627078	CallExpression	"putc ( ( i >> 8 ) & 0xff , fp )"		6627063	0					
ANR	6627079	Callee	putc		6627063	0					
ANR	6627080	Identifier	putc		6627063	0					
ANR	6627081	ArgumentList	( i >> 8 ) & 0xff		6627063	1					
ANR	6627082	Argument	( i >> 8 ) & 0xff		6627063	0					
ANR	6627083	BitAndExpression	( i >> 8 ) & 0xff		6627063	0		&			
ANR	6627084	ShiftExpression	i >> 8		6627063	0		>>			
ANR	6627085	Identifier	i		6627063	0					
ANR	6627086	PrimaryExpression	8		6627063	1					
ANR	6627087	PrimaryExpression	0xff		6627063	1					
ANR	6627088	Argument	fp		6627063	1					
ANR	6627089	Identifier	fp		6627063	0					
ANR	6627090	ExpressionStatement	"putc ( ( i >> 16 ) & 0xff , fp )"	1005:4:24054:24076	6627063	2	True				
ANR	6627091	CallExpression	"putc ( ( i >> 16 ) & 0xff , fp )"		6627063	0					
ANR	6627092	Callee	putc		6627063	0					
ANR	6627093	Identifier	putc		6627063	0					
ANR	6627094	ArgumentList	( i >> 16 ) & 0xff		6627063	1					
ANR	6627095	Argument	( i >> 16 ) & 0xff		6627063	0					
ANR	6627096	BitAndExpression	( i >> 16 ) & 0xff		6627063	0		&			
ANR	6627097	ShiftExpression	i >> 16		6627063	0		>>			
ANR	6627098	Identifier	i		6627063	0					
ANR	6627099	PrimaryExpression	16		6627063	1					
ANR	6627100	PrimaryExpression	0xff		6627063	1					
ANR	6627101	Argument	fp		6627063	1					
ANR	6627102	Identifier	fp		6627063	0					
ANR	6627103	ExpressionStatement	"putc ( ( i >> 24 ) & 0xff , fp )"	1006:4:24082:24104	6627063	3	True				
ANR	6627104	CallExpression	"putc ( ( i >> 24 ) & 0xff , fp )"		6627063	0					
ANR	6627105	Callee	putc		6627063	0					
ANR	6627106	Identifier	putc		6627063	0					
ANR	6627107	ArgumentList	( i >> 24 ) & 0xff		6627063	1					
ANR	6627108	Argument	( i >> 24 ) & 0xff		6627063	0					
ANR	6627109	BitAndExpression	( i >> 24 ) & 0xff		6627063	0		&			
ANR	6627110	ShiftExpression	i >> 24		6627063	0		>>			
ANR	6627111	Identifier	i		6627063	0					
ANR	6627112	PrimaryExpression	24		6627063	1					
ANR	6627113	PrimaryExpression	0xff		6627063	1					
ANR	6627114	Argument	fp		6627063	1					
ANR	6627115	Identifier	fp		6627063	0					
ANR	6627116	ExpressionStatement	"putc ( ( i >> 32 ) & 0xff , fp )"	1007:4:24110:24132	6627063	4	True				
ANR	6627117	CallExpression	"putc ( ( i >> 32 ) & 0xff , fp )"		6627063	0					
ANR	6627118	Callee	putc		6627063	0					
ANR	6627119	Identifier	putc		6627063	0					
ANR	6627120	ArgumentList	( i >> 32 ) & 0xff		6627063	1					
ANR	6627121	Argument	( i >> 32 ) & 0xff		6627063	0					
ANR	6627122	BitAndExpression	( i >> 32 ) & 0xff		6627063	0		&			
ANR	6627123	ShiftExpression	i >> 32		6627063	0		>>			
ANR	6627124	Identifier	i		6627063	0					
ANR	6627125	PrimaryExpression	32		6627063	1					
ANR	6627126	PrimaryExpression	0xff		6627063	1					
ANR	6627127	Argument	fp		6627063	1					
ANR	6627128	Identifier	fp		6627063	0					
ANR	6627129	ExpressionStatement	"putc ( ( i >> 40 ) & 0xff , fp )"	1008:4:24138:24160	6627063	5	True				
ANR	6627130	CallExpression	"putc ( ( i >> 40 ) & 0xff , fp )"		6627063	0					
ANR	6627131	Callee	putc		6627063	0					
ANR	6627132	Identifier	putc		6627063	0					
ANR	6627133	ArgumentList	( i >> 40 ) & 0xff		6627063	1					
ANR	6627134	Argument	( i >> 40 ) & 0xff		6627063	0					
ANR	6627135	BitAndExpression	( i >> 40 ) & 0xff		6627063	0		&			
ANR	6627136	ShiftExpression	i >> 40		6627063	0		>>			
ANR	6627137	Identifier	i		6627063	0					
ANR	6627138	PrimaryExpression	40		6627063	1					
ANR	6627139	PrimaryExpression	0xff		6627063	1					
ANR	6627140	Argument	fp		6627063	1					
ANR	6627141	Identifier	fp		6627063	0					
ANR	6627142	ExpressionStatement	"putc ( ( i >> 48 ) & 0xff , fp )"	1009:4:24166:24188	6627063	6	True				
ANR	6627143	CallExpression	"putc ( ( i >> 48 ) & 0xff , fp )"		6627063	0					
ANR	6627144	Callee	putc		6627063	0					
ANR	6627145	Identifier	putc		6627063	0					
ANR	6627146	ArgumentList	( i >> 48 ) & 0xff		6627063	1					
ANR	6627147	Argument	( i >> 48 ) & 0xff		6627063	0					
ANR	6627148	BitAndExpression	( i >> 48 ) & 0xff		6627063	0		&			
ANR	6627149	ShiftExpression	i >> 48		6627063	0		>>			
ANR	6627150	Identifier	i		6627063	0					
ANR	6627151	PrimaryExpression	48		6627063	1					
ANR	6627152	PrimaryExpression	0xff		6627063	1					
ANR	6627153	Argument	fp		6627063	1					
ANR	6627154	Identifier	fp		6627063	0					
ANR	6627155	ExpressionStatement	"putc ( ( i >> 56 ) & 0xff , fp )"	1010:4:24194:24216	6627063	7	True				
ANR	6627156	CallExpression	"putc ( ( i >> 56 ) & 0xff , fp )"		6627063	0					
ANR	6627157	Callee	putc		6627063	0					
ANR	6627158	Identifier	putc		6627063	0					
ANR	6627159	ArgumentList	( i >> 56 ) & 0xff		6627063	1					
ANR	6627160	Argument	( i >> 56 ) & 0xff		6627063	0					
ANR	6627161	BitAndExpression	( i >> 56 ) & 0xff		6627063	0		&			
ANR	6627162	ShiftExpression	i >> 56		6627063	0		>>			
ANR	6627163	Identifier	i		6627063	0					
ANR	6627164	PrimaryExpression	56		6627063	1					
ANR	6627165	PrimaryExpression	0xff		6627063	1					
ANR	6627166	Argument	fp		6627063	1					
ANR	6627167	Identifier	fp		6627063	0					
ANR	6627168	ReturnStatement	return ;	1012:4:24227:24233	6627063	8	True				
ANR	6627169	ReturnType	void		6627063	1					
ANR	6627170	Identifier	_zip_write8		6627063	2					
ANR	6627171	ParameterList	"zip_uint64_t i , FILE * fp"		6627063	3					
ANR	6627172	Parameter	zip_uint64_t i	1001:12:23973:23986	6627063	0	True				
ANR	6627173	ParameterType	zip_uint64_t		6627063	0					
ANR	6627174	Identifier	i		6627063	1					
ANR	6627175	Parameter	FILE * fp	1001:28:23989:23996	6627063	1	True				
ANR	6627176	ParameterType	FILE *		6627063	0					
ANR	6627177	Identifier	fp		6627063	1					
ANR	6627178	CFGEntryNode	ENTRY		6627063		True				
ANR	6627179	CFGExitNode	EXIT		6627063		True				
ANR	6627180	Symbol	i		6627063						
ANR	6627181	Symbol	fp		6627063						
ANR	6627182	Function	_zip_u2d_time	1017:0:24241:24562							
ANR	6627183	FunctionDef	"_zip_u2d_time (time_t time , zip_uint16_t * dtime , zip_uint16_t * ddate)"		6627182	0					
ANR	6627184	CompoundStatement		1019:0:24315:24562	6627182	0					
ANR	6627185	IdentifierDeclStatement	struct tm * tm ;	1020:4:24321:24334	6627182	0	True				
ANR	6627186	IdentifierDecl	* tm		6627182	0					
ANR	6627187	IdentifierDeclType	struct tm *		6627182	0					
ANR	6627188	Identifier	tm		6627182	1					
ANR	6627189	ExpressionStatement	tm = localtime ( & time )	1022:4:24341:24362	6627182	1	True				
ANR	6627190	AssignmentExpression	tm = localtime ( & time )		6627182	0		=			
ANR	6627191	Identifier	tm		6627182	0					
ANR	6627192	CallExpression	localtime ( & time )		6627182	1					
ANR	6627193	Callee	localtime		6627182	0					
ANR	6627194	Identifier	localtime		6627182	0					
ANR	6627195	ArgumentList	& time		6627182	1					
ANR	6627196	Argument	& time		6627182	0					
ANR	6627197	UnaryOperationExpression	& time		6627182	0					
ANR	6627198	UnaryOperator	&		6627182	0					
ANR	6627199	Identifier	time		6627182	1					
ANR	6627200	ExpressionStatement	* ddate = ( zip_uint16_t ) ( ( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday )	1023:4:24368:24457	6627182	2	True				
ANR	6627201	AssignmentExpression	* ddate = ( zip_uint16_t ) ( ( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday )		6627182	0		=			
ANR	6627202	UnaryOperationExpression	* ddate		6627182	0					
ANR	6627203	UnaryOperator	*		6627182	0					
ANR	6627204	Identifier	ddate		6627182	1					
ANR	6627205	CastExpression	( zip_uint16_t ) ( ( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday )		6627182	1					
ANR	6627206	CastTarget	zip_uint16_t		6627182	0					
ANR	6627207	AdditiveExpression	( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday		6627182	1		+			
ANR	6627208	ShiftExpression	( tm -> tm_year + 1900 - 1980 ) << 9		6627182	0		<<			
ANR	6627209	AdditiveExpression	tm -> tm_year + 1900 - 1980		6627182	0		+			
ANR	6627210	PtrMemberAccess	tm -> tm_year		6627182	0					
ANR	6627211	Identifier	tm		6627182	0					
ANR	6627212	Identifier	tm_year		6627182	1					
ANR	6627213	AdditiveExpression	1900 - 1980		6627182	1		-			
ANR	6627214	PrimaryExpression	1900		6627182	0					
ANR	6627215	PrimaryExpression	1980		6627182	1					
ANR	6627216	PrimaryExpression	9		6627182	1					
ANR	6627217	AdditiveExpression	( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday		6627182	1		+			
ANR	6627218	ShiftExpression	( tm -> tm_mon + 1 ) << 5		6627182	0		<<			
ANR	6627219	AdditiveExpression	tm -> tm_mon + 1		6627182	0		+			
ANR	6627220	PtrMemberAccess	tm -> tm_mon		6627182	0					
ANR	6627221	Identifier	tm		6627182	0					
ANR	6627222	Identifier	tm_mon		6627182	1					
ANR	6627223	PrimaryExpression	1		6627182	1					
ANR	6627224	PrimaryExpression	5		6627182	1					
ANR	6627225	PtrMemberAccess	tm -> tm_mday		6627182	1					
ANR	6627226	Identifier	tm		6627182	0					
ANR	6627227	Identifier	tm_mday		6627182	1					
ANR	6627228	ExpressionStatement	* dtime = ( zip_uint16_t ) ( ( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 ) )	1024:4:24463:24547	6627182	3	True				
ANR	6627229	AssignmentExpression	* dtime = ( zip_uint16_t ) ( ( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 ) )		6627182	0		=			
ANR	6627230	UnaryOperationExpression	* dtime		6627182	0					
ANR	6627231	UnaryOperator	*		6627182	0					
ANR	6627232	Identifier	dtime		6627182	1					
ANR	6627233	CastExpression	( zip_uint16_t ) ( ( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 ) )		6627182	1					
ANR	6627234	CastTarget	zip_uint16_t		6627182	0					
ANR	6627235	AdditiveExpression	( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 )		6627182	1		+			
ANR	6627236	ShiftExpression	( tm -> tm_hour ) << 11		6627182	0		<<			
ANR	6627237	PtrMemberAccess	tm -> tm_hour		6627182	0					
ANR	6627238	Identifier	tm		6627182	0					
ANR	6627239	Identifier	tm_hour		6627182	1					
ANR	6627240	PrimaryExpression	11		6627182	1					
ANR	6627241	AdditiveExpression	( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 )		6627182	1		+			
ANR	6627242	ShiftExpression	( tm -> tm_min ) << 5		6627182	0		<<			
ANR	6627243	PtrMemberAccess	tm -> tm_min		6627182	0					
ANR	6627244	Identifier	tm		6627182	0					
ANR	6627245	Identifier	tm_min		6627182	1					
ANR	6627246	PrimaryExpression	5		6627182	1					
ANR	6627247	ShiftExpression	( tm -> tm_sec ) >> 1		6627182	1		>>			
ANR	6627248	PtrMemberAccess	tm -> tm_sec		6627182	0					
ANR	6627249	Identifier	tm		6627182	0					
ANR	6627250	Identifier	tm_sec		6627182	1					
ANR	6627251	PrimaryExpression	1		6627182	1					
ANR	6627252	ReturnStatement	return ;	1026:4:24554:24560	6627182	4	True				
ANR	6627253	ReturnType	void		6627182	1					
ANR	6627254	Identifier	_zip_u2d_time		6627182	2					
ANR	6627255	ParameterList	"time_t time , zip_uint16_t * dtime , zip_uint16_t * ddate"		6627182	3					
ANR	6627256	Parameter	time_t time	1018:14:24260:24270	6627182	0	True				
ANR	6627257	ParameterType	time_t		6627182	0					
ANR	6627258	Identifier	time		6627182	1					
ANR	6627259	Parameter	zip_uint16_t * dtime	1018:27:24273:24291	6627182	1	True				
ANR	6627260	ParameterType	zip_uint16_t *		6627182	0					
ANR	6627261	Identifier	dtime		6627182	1					
ANR	6627262	Parameter	zip_uint16_t * ddate	1018:48:24294:24312	6627182	2	True				
ANR	6627263	ParameterType	zip_uint16_t *		6627182	0					
ANR	6627264	Identifier	ddate		6627182	1					
ANR	6627265	CFGEntryNode	ENTRY		6627182		True				
ANR	6627266	CFGExitNode	EXIT		6627182		True				
ANR	6627267	Symbol	localtime		6627182						
ANR	6627268	Symbol	ddate		6627182						
ANR	6627269	Symbol	* dtime		6627182						
ANR	6627270	Symbol	dtime		6627182						
ANR	6627271	Symbol	* ddate		6627182						
ANR	6627272	Symbol	tm -> tm_mon		6627182						
ANR	6627273	Symbol	& time		6627182						
ANR	6627274	Symbol	tm -> tm_mday		6627182						
ANR	6627275	Symbol	tm -> tm_sec		6627182						
ANR	6627276	Symbol	tm -> tm_min		6627182						
ANR	6627277	Symbol	tm		6627182						
ANR	6627278	Symbol	tm -> tm_hour		6627182						
ANR	6627279	Symbol	time		6627182						
ANR	6627280	Symbol	tm -> tm_year		6627182						
ANR	6627281	Symbol	* tm		6627182						
