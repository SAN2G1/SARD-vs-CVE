command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1225400	File	data/converged/CVE-2019-16718~_radare2/debug_windbg.c								
ANR	1225401	DeclStmt									
ANR	1225402	Decl							WindCtx	WindCtx *	wctx
ANR	1225403	DeclStmt									
ANR	1225404	Decl							bool	bool	dbreak
ANR	1225405	Function	r_debug_windbg_step	24:0:828:888							
ANR	1225406	FunctionDef	r_debug_windbg_step (RDebug * dbg)		1225405	0					
ANR	1225407	CompoundStatement		24:44:872:888	1225405	0					
ANR	1225408	ReturnStatement	return true ;	25:1:875:886	1225405	0	True				
ANR	1225409	Identifier	true		1225405	0					
ANR	1225410	ReturnType	static int		1225405	1					
ANR	1225411	Identifier	r_debug_windbg_step		1225405	2					
ANR	1225412	ParameterList	RDebug * dbg		1225405	3					
ANR	1225413	Parameter	RDebug * dbg	24:31:859:869	1225405	0	True				
ANR	1225414	ParameterType	RDebug *		1225405	0					
ANR	1225415	Identifier	dbg		1225405	1					
ANR	1225416	CFGEntryNode	ENTRY		1225405		True				
ANR	1225417	CFGExitNode	EXIT		1225405		True				
ANR	1225418	Symbol	dbg		1225405						
ANR	1225419	Symbol	true		1225405						
ANR	1225420	Function	r_debug_windbg_reg_read	28:0:891:1196							
ANR	1225421	FunctionDef	"r_debug_windbg_reg_read (RDebug * dbg , int type , ut8 * buf , int size)"		1225420	0					
ANR	1225422	CompoundStatement		28:78:969:1196	1225420	0					
ANR	1225423	IdentifierDeclStatement	"int ret = windbg_read_reg ( wctx , buf , size ) ;"	29:1:972:1014	1225420	0	True				
ANR	1225424	IdentifierDecl	"ret = windbg_read_reg ( wctx , buf , size )"		1225420	0					
ANR	1225425	IdentifierDeclType	int		1225420	0					
ANR	1225426	Identifier	ret		1225420	1					
ANR	1225427	AssignmentExpression	"ret = windbg_read_reg ( wctx , buf , size )"		1225420	2		=			
ANR	1225428	Identifier	ret		1225420	0					
ANR	1225429	CallExpression	"windbg_read_reg ( wctx , buf , size )"		1225420	1					
ANR	1225430	Callee	windbg_read_reg		1225420	0					
ANR	1225431	Identifier	windbg_read_reg		1225420	0					
ANR	1225432	ArgumentList	wctx		1225420	1					
ANR	1225433	Argument	wctx		1225420	0					
ANR	1225434	Identifier	wctx		1225420	0					
ANR	1225435	Argument	buf		1225420	1					
ANR	1225436	Identifier	buf		1225420	0					
ANR	1225437	Argument	size		1225420	2					
ANR	1225438	Identifier	size		1225420	0					
ANR	1225439	IfStatement	if ( ! ret || size != ret )		1225420	1					
ANR	1225440	Condition	! ret || size != ret	30:5:1021:1039	1225420	0	True				
ANR	1225441	OrExpression	! ret || size != ret		1225420	0		||			
ANR	1225442	UnaryOperationExpression	! ret		1225420	0					
ANR	1225443	UnaryOperator	!		1225420	0					
ANR	1225444	Identifier	ret		1225420	1					
ANR	1225445	EqualityExpression	size != ret		1225420	1		!=			
ANR	1225446	Identifier	size		1225420	0					
ANR	1225447	Identifier	ret		1225420	1					
ANR	1225448	CompoundStatement		3:26:72:72	1225420	1					
ANR	1225449	ReturnStatement	return - 1 ;	31:2:1046:1055	1225420	0	True				
ANR	1225450	UnaryOperationExpression	- 1		1225420	0					
ANR	1225451	UnaryOperator	-		1225420	0					
ANR	1225452	PrimaryExpression	1		1225420	1					
ANR	1225453	ExpressionStatement	"r_reg_read_regs ( dbg -> reg , buf , ret )"	33:1:1061:1097	1225420	2	True				
ANR	1225454	CallExpression	"r_reg_read_regs ( dbg -> reg , buf , ret )"		1225420	0					
ANR	1225455	Callee	r_reg_read_regs		1225420	0					
ANR	1225456	Identifier	r_reg_read_regs		1225420	0					
ANR	1225457	ArgumentList	dbg -> reg		1225420	1					
ANR	1225458	Argument	dbg -> reg		1225420	0					
ANR	1225459	PtrMemberAccess	dbg -> reg		1225420	0					
ANR	1225460	Identifier	dbg		1225420	0					
ANR	1225461	Identifier	reg		1225420	1					
ANR	1225462	Argument	buf		1225420	1					
ANR	1225463	Identifier	buf		1225420	0					
ANR	1225464	Argument	ret		1225420	2					
ANR	1225465	Identifier	ret		1225420	0					
ANR	1225466	ReturnStatement	return 0 ;	35:1:1186:1194	1225420	3	True				
ANR	1225467	PrimaryExpression	0		1225420	0					
ANR	1225468	ReturnType	static int		1225420	1					
ANR	1225469	Identifier	r_debug_windbg_reg_read		1225420	2					
ANR	1225470	ParameterList	"RDebug * dbg , int type , ut8 * buf , int size"		1225420	3					
ANR	1225471	Parameter	RDebug * dbg	28:35:926:936	1225420	0	True				
ANR	1225472	ParameterType	RDebug *		1225420	0					
ANR	1225473	Identifier	dbg		1225420	1					
ANR	1225474	Parameter	int type	28:48:939:946	1225420	1	True				
ANR	1225475	ParameterType	int		1225420	0					
ANR	1225476	Identifier	type		1225420	1					
ANR	1225477	Parameter	ut8 * buf	28:58:949:956	1225420	2	True				
ANR	1225478	ParameterType	ut8 *		1225420	0					
ANR	1225479	Identifier	buf		1225420	1					
ANR	1225480	Parameter	int size	28:68:959:966	1225420	3	True				
ANR	1225481	ParameterType	int		1225420	0					
ANR	1225482	Identifier	size		1225420	1					
ANR	1225483	CFGEntryNode	ENTRY		1225420		True				
ANR	1225484	CFGExitNode	EXIT		1225420		True				
ANR	1225485	Symbol	ret		1225420						
ANR	1225486	Symbol	buf		1225420						
ANR	1225487	Symbol	size		1225420						
ANR	1225488	Symbol	wctx		1225420						
ANR	1225489	Symbol	dbg		1225420						
ANR	1225490	Symbol	windbg_read_reg		1225420						
ANR	1225491	Symbol	dbg -> reg		1225420						
ANR	1225492	Symbol	type		1225420						
ANR	1225493	Symbol	* dbg		1225420						
ANR	1225494	Function	r_debug_windbg_reg_write	38:0:1199:1584							
ANR	1225495	FunctionDef	"r_debug_windbg_reg_write (RDebug * dbg , int type , const ut8 * buf , int size)"		1225494	0					
ANR	1225496	CompoundStatement		38:85:1284:1584	1225494	0					
ANR	1225497	IfStatement	if ( ! dbg -> reg )		1225494	0					
ANR	1225498	Condition	! dbg -> reg	39:5:1291:1299	1225494	0	True				
ANR	1225499	UnaryOperationExpression	! dbg -> reg		1225494	0					
ANR	1225500	UnaryOperator	!		1225494	0					
ANR	1225501	PtrMemberAccess	dbg -> reg		1225494	1					
ANR	1225502	Identifier	dbg		1225494	0					
ANR	1225503	Identifier	reg		1225494	1					
ANR	1225504	CompoundStatement		2:16:17:17	1225494	1					
ANR	1225505	ReturnStatement	return false ;	40:2:1306:1318	1225494	0	True				
ANR	1225506	Identifier	false		1225494	0					
ANR	1225507	IdentifierDeclStatement	int arena_size ;	42:1:1324:1338	1225494	1	True				
ANR	1225508	IdentifierDecl	arena_size		1225494	0					
ANR	1225509	IdentifierDeclType	int		1225494	0					
ANR	1225510	Identifier	arena_size		1225494	1					
ANR	1225511	IdentifierDeclStatement	"ut8 * arena = r_reg_get_bytes ( dbg -> reg , R_REG_TYPE_ALL , & arena_size ) ;"	43:1:1341:1409	1225494	2	True				
ANR	1225512	IdentifierDecl	"* arena = r_reg_get_bytes ( dbg -> reg , R_REG_TYPE_ALL , & arena_size )"		1225494	0					
ANR	1225513	IdentifierDeclType	ut8 *		1225494	0					
ANR	1225514	Identifier	arena		1225494	1					
ANR	1225515	AssignmentExpression	"* arena = r_reg_get_bytes ( dbg -> reg , R_REG_TYPE_ALL , & arena_size )"		1225494	2		=			
ANR	1225516	Identifier	arena		1225494	0					
ANR	1225517	CallExpression	"r_reg_get_bytes ( dbg -> reg , R_REG_TYPE_ALL , & arena_size )"		1225494	1					
ANR	1225518	Callee	r_reg_get_bytes		1225494	0					
ANR	1225519	Identifier	r_reg_get_bytes		1225494	0					
ANR	1225520	ArgumentList	dbg -> reg		1225494	1					
ANR	1225521	Argument	dbg -> reg		1225494	0					
ANR	1225522	PtrMemberAccess	dbg -> reg		1225494	0					
ANR	1225523	Identifier	dbg		1225494	0					
ANR	1225524	Identifier	reg		1225494	1					
ANR	1225525	Argument	R_REG_TYPE_ALL		1225494	1					
ANR	1225526	Identifier	R_REG_TYPE_ALL		1225494	0					
ANR	1225527	Argument	& arena_size		1225494	2					
ANR	1225528	UnaryOperationExpression	& arena_size		1225494	0					
ANR	1225529	UnaryOperator	&		1225494	0					
ANR	1225530	Identifier	arena_size		1225494	1					
ANR	1225531	IfStatement	if ( ! arena )		1225494	3					
ANR	1225532	Condition	! arena	44:5:1416:1421	1225494	0	True				
ANR	1225533	UnaryOperationExpression	! arena		1225494	0					
ANR	1225534	UnaryOperator	!		1225494	0					
ANR	1225535	Identifier	arena		1225494	1					
ANR	1225536	CompoundStatement		7:13:139:139	1225494	1					
ANR	1225537	ExpressionStatement	"eprintf ( ""Could not retrieve the register arena!\\n"" )"	45:2:1428:1480	1225494	0	True				
ANR	1225538	CallExpression	"eprintf ( ""Could not retrieve the register arena!\\n"" )"		1225494	0					
ANR	1225539	Callee	eprintf		1225494	0					
ANR	1225540	Identifier	eprintf		1225494	0					
ANR	1225541	ArgumentList	"""Could not retrieve the register arena!\\n"""		1225494	1					
ANR	1225542	Argument	"""Could not retrieve the register arena!\\n"""		1225494	0					
ANR	1225543	PrimaryExpression	"""Could not retrieve the register arena!\\n"""		1225494	0					
ANR	1225544	ReturnStatement	return false ;	46:2:1484:1496	1225494	1	True				
ANR	1225545	Identifier	false		1225494	0					
ANR	1225546	IdentifierDeclStatement	"int ret = windbg_write_reg ( wctx , arena , arena_size ) ;"	48:1:1502:1554	1225494	4	True				
ANR	1225547	IdentifierDecl	"ret = windbg_write_reg ( wctx , arena , arena_size )"		1225494	0					
ANR	1225548	IdentifierDeclType	int		1225494	0					
ANR	1225549	Identifier	ret		1225494	1					
ANR	1225550	AssignmentExpression	"ret = windbg_write_reg ( wctx , arena , arena_size )"		1225494	2		=			
ANR	1225551	Identifier	ret		1225494	0					
ANR	1225552	CallExpression	"windbg_write_reg ( wctx , arena , arena_size )"		1225494	1					
ANR	1225553	Callee	windbg_write_reg		1225494	0					
ANR	1225554	Identifier	windbg_write_reg		1225494	0					
ANR	1225555	ArgumentList	wctx		1225494	1					
ANR	1225556	Argument	wctx		1225494	0					
ANR	1225557	Identifier	wctx		1225494	0					
ANR	1225558	Argument	arena		1225494	1					
ANR	1225559	Identifier	arena		1225494	0					
ANR	1225560	Argument	arena_size		1225494	2					
ANR	1225561	Identifier	arena_size		1225494	0					
ANR	1225562	ExpressionStatement	free ( arena )	49:1:1557:1569	1225494	5	True				
ANR	1225563	CallExpression	free ( arena )		1225494	0					
ANR	1225564	Callee	free		1225494	0					
ANR	1225565	Identifier	free		1225494	0					
ANR	1225566	ArgumentList	arena		1225494	1					
ANR	1225567	Argument	arena		1225494	0					
ANR	1225568	Identifier	arena		1225494	0					
ANR	1225569	ReturnStatement	return ret ;	50:1:1572:1582	1225494	6	True				
ANR	1225570	Identifier	ret		1225494	0					
ANR	1225571	ReturnType	static int		1225494	1					
ANR	1225572	Identifier	r_debug_windbg_reg_write		1225494	2					
ANR	1225573	ParameterList	"RDebug * dbg , int type , const ut8 * buf , int size"		1225494	3					
ANR	1225574	Parameter	RDebug * dbg	38:36:1235:1245	1225494	0	True				
ANR	1225575	ParameterType	RDebug *		1225494	0					
ANR	1225576	Identifier	dbg		1225494	1					
ANR	1225577	Parameter	int type	38:49:1248:1255	1225494	1	True				
ANR	1225578	ParameterType	int		1225494	0					
ANR	1225579	Identifier	type		1225494	1					
ANR	1225580	Parameter	const ut8 * buf	38:59:1258:1271	1225494	2	True				
ANR	1225581	ParameterType	const ut8 *		1225494	0					
ANR	1225582	Identifier	buf		1225494	1					
ANR	1225583	Parameter	int size	38:75:1274:1281	1225494	3	True				
ANR	1225584	ParameterType	int		1225494	0					
ANR	1225585	Identifier	size		1225494	1					
ANR	1225586	CFGEntryNode	ENTRY		1225494		True				
ANR	1225587	CFGExitNode	EXIT		1225494		True				
ANR	1225588	Symbol	ret		1225494						
ANR	1225589	Symbol	windbg_write_reg		1225494						
ANR	1225590	Symbol	wctx		1225494						
ANR	1225591	Symbol	dbg		1225494						
ANR	1225592	Symbol	false		1225494						
ANR	1225593	Symbol	r_reg_get_bytes		1225494						
ANR	1225594	Symbol	arena		1225494						
ANR	1225595	Symbol	type		1225494						
ANR	1225596	Symbol	* dbg		1225494						
ANR	1225597	Symbol	& arena_size		1225494						
ANR	1225598	Symbol	arena_size		1225494						
ANR	1225599	Symbol	buf		1225494						
ANR	1225600	Symbol	size		1225494						
ANR	1225601	Symbol	R_REG_TYPE_ALL		1225494						
ANR	1225602	Symbol	dbg -> reg		1225494						
ANR	1225603	Function	r_debug_windbg_continue	53:0:1587:1695							
ANR	1225604	FunctionDef	"r_debug_windbg_continue (RDebug * dbg , int pid , int tid , int sig)"		1225603	0					
ANR	1225605	CompoundStatement		53:75:1662:1695	1225603	0					
ANR	1225606	ReturnStatement	return windbg_continue ( wctx ) ;	54:1:1665:1693	1225603	0	True				
ANR	1225607	CallExpression	windbg_continue ( wctx )		1225603	0					
ANR	1225608	Callee	windbg_continue		1225603	0					
ANR	1225609	Identifier	windbg_continue		1225603	0					
ANR	1225610	ArgumentList	wctx		1225603	1					
ANR	1225611	Argument	wctx		1225603	0					
ANR	1225612	Identifier	wctx		1225603	0					
ANR	1225613	ReturnType	static int		1225603	1					
ANR	1225614	Identifier	r_debug_windbg_continue		1225603	2					
ANR	1225615	ParameterList	"RDebug * dbg , int pid , int tid , int sig"		1225603	3					
ANR	1225616	Parameter	RDebug * dbg	53:35:1622:1632	1225603	0	True				
ANR	1225617	ParameterType	RDebug *		1225603	0					
ANR	1225618	Identifier	dbg		1225603	1					
ANR	1225619	Parameter	int pid	53:48:1635:1641	1225603	1	True				
ANR	1225620	ParameterType	int		1225603	0					
ANR	1225621	Identifier	pid		1225603	1					
ANR	1225622	Parameter	int tid	53:57:1644:1650	1225603	2	True				
ANR	1225623	ParameterType	int		1225603	0					
ANR	1225624	Identifier	tid		1225603	1					
ANR	1225625	Parameter	int sig	53:66:1653:1659	1225603	3	True				
ANR	1225626	ParameterType	int		1225603	0					
ANR	1225627	Identifier	sig		1225603	1					
ANR	1225628	CFGEntryNode	ENTRY		1225603		True				
ANR	1225629	CFGExitNode	EXIT		1225603		True				
ANR	1225630	Symbol	sig		1225603						
ANR	1225631	Symbol	wctx		1225603						
ANR	1225632	Symbol	dbg		1225603						
ANR	1225633	Symbol	pid		1225603						
ANR	1225634	Symbol	tid		1225603						
ANR	1225635	Symbol	windbg_continue		1225603						
ANR	1225636	Function	wstatic_debug_break	58:0:1704:1790							
ANR	1225637	FunctionDef	wstatic_debug_break (void * u)		1225636	0					
ANR	1225638	CompoundStatement		58:41:1745:1790	1225636	0					
ANR	1225639	ExpressionStatement	dbreak = true	59:1:1748:1761	1225636	0	True				
ANR	1225640	AssignmentExpression	dbreak = true		1225636	0		=			
ANR	1225641	Identifier	dbreak		1225636	0					
ANR	1225642	Identifier	true		1225636	1					
ANR	1225643	ExpressionStatement	windbg_break_read ( wctx )	60:1:1764:1788	1225636	1	True				
ANR	1225644	CallExpression	windbg_break_read ( wctx )		1225636	0					
ANR	1225645	Callee	windbg_break_read		1225636	0					
ANR	1225646	Identifier	windbg_break_read		1225636	0					
ANR	1225647	ArgumentList	wctx		1225636	1					
ANR	1225648	Argument	wctx		1225636	0					
ANR	1225649	Identifier	wctx		1225636	0					
ANR	1225650	ReturnType	static void		1225636	1					
ANR	1225651	Identifier	wstatic_debug_break		1225636	2					
ANR	1225652	ParameterList	void * u		1225636	3					
ANR	1225653	Parameter	void * u	58:32:1736:1742	1225636	0	True				
ANR	1225654	ParameterType	void *		1225636	0					
ANR	1225655	Identifier	u		1225636	1					
ANR	1225656	CFGEntryNode	ENTRY		1225636		True				
ANR	1225657	CFGExitNode	EXIT		1225636		True				
ANR	1225658	Symbol	u		1225636						
ANR	1225659	Symbol	dbreak		1225636						
ANR	1225660	Symbol	wctx		1225636						
ANR	1225661	Symbol	true		1225636						
ANR	1225662	Function	r_debug_windbg_wait	64:0:1800:2743							
ANR	1225663	FunctionDef	"r_debug_windbg_wait (RDebug * dbg , int pid)"		1225662	0					
ANR	1225664	CompoundStatement		64:66:1866:2743	1225662	0					
ANR	1225665	IdentifierDeclStatement	RDebugReasonType reason = R_DEBUG_REASON_UNKNOWN ;	65:1:1869:1917	1225662	0	True				
ANR	1225666	IdentifierDecl	reason = R_DEBUG_REASON_UNKNOWN		1225662	0					
ANR	1225667	IdentifierDeclType	RDebugReasonType		1225662	0					
ANR	1225668	Identifier	reason		1225662	1					
ANR	1225669	AssignmentExpression	reason = R_DEBUG_REASON_UNKNOWN		1225662	2		=			
ANR	1225670	Identifier	R_DEBUG_REASON_UNKNOWN		1225662	0					
ANR	1225671	Identifier	R_DEBUG_REASON_UNKNOWN		1225662	1					
ANR	1225672	IdentifierDeclStatement	kd_packet_t * pkt = NULL ;	66:1:1920:1943	1225662	1	True				
ANR	1225673	IdentifierDecl	* pkt = NULL		1225662	0					
ANR	1225674	IdentifierDeclType	kd_packet_t *		1225662	0					
ANR	1225675	Identifier	pkt		1225662	1					
ANR	1225676	AssignmentExpression	* pkt = NULL		1225662	2		=			
ANR	1225677	Identifier	NULL		1225662	0					
ANR	1225678	Identifier	NULL		1225662	1					
ANR	1225679	IdentifierDeclStatement	kd_stc_64 * stc ;	67:1:1946:1960	1225662	2	True				
ANR	1225680	IdentifierDecl	* stc		1225662	0					
ANR	1225681	IdentifierDeclType	kd_stc_64 *		1225662	0					
ANR	1225682	Identifier	stc		1225662	1					
ANR	1225683	ExpressionStatement	dbreak = false	68:1:1963:1977	1225662	3	True				
ANR	1225684	AssignmentExpression	dbreak = false		1225662	0		=			
ANR	1225685	Identifier	dbreak		1225662	0					
ANR	1225686	Identifier	false		1225662	1					
ANR	1225687	ForStatement	for ( ; ; )		1225662	4					
ANR	1225688	CompoundStatement		8:2:127:199	1225662	0					
ANR	1225689	IdentifierDeclStatement	"int ret = windbg_wait_packet ( wctx , KD_PACKET_TYPE_STATE_CHANGE64 , & pkt ) ;"	71:2:1994:2066	1225662	0	True				
ANR	1225690	IdentifierDecl	"ret = windbg_wait_packet ( wctx , KD_PACKET_TYPE_STATE_CHANGE64 , & pkt )"		1225662	0					
ANR	1225691	IdentifierDeclType	int		1225662	0					
ANR	1225692	Identifier	ret		1225662	1					
ANR	1225693	AssignmentExpression	"ret = windbg_wait_packet ( wctx , KD_PACKET_TYPE_STATE_CHANGE64 , & pkt )"		1225662	2		=			
ANR	1225694	Identifier	ret		1225662	0					
ANR	1225695	CallExpression	"windbg_wait_packet ( wctx , KD_PACKET_TYPE_STATE_CHANGE64 , & pkt )"		1225662	1					
ANR	1225696	Callee	windbg_wait_packet		1225662	0					
ANR	1225697	Identifier	windbg_wait_packet		1225662	0					
ANR	1225698	ArgumentList	wctx		1225662	1					
ANR	1225699	Argument	wctx		1225662	0					
ANR	1225700	Identifier	wctx		1225662	0					
ANR	1225701	Argument	KD_PACKET_TYPE_STATE_CHANGE64		1225662	1					
ANR	1225702	Identifier	KD_PACKET_TYPE_STATE_CHANGE64		1225662	0					
ANR	1225703	Argument	& pkt		1225662	2					
ANR	1225704	UnaryOperationExpression	& pkt		1225662	0					
ANR	1225705	UnaryOperator	&		1225662	0					
ANR	1225706	Identifier	pkt		1225662	1					
ANR	1225707	IfStatement	if ( dbreak )		1225662	1					
ANR	1225708	Condition	dbreak	72:6:2074:2079	1225662	0	True				
ANR	1225709	Identifier	dbreak		1225662	0					
ANR	1225710	CompoundStatement		9:14:215:215	1225662	1					
ANR	1225711	ExpressionStatement	dbreak = false	73:3:2087:2101	1225662	0	True				
ANR	1225712	AssignmentExpression	dbreak = false		1225662	0		=			
ANR	1225713	Identifier	dbreak		1225662	0					
ANR	1225714	Identifier	false		1225662	1					
ANR	1225715	ExpressionStatement	windbg_break ( wctx )	74:3:2106:2125	1225662	1	True				
ANR	1225716	CallExpression	windbg_break ( wctx )		1225662	0					
ANR	1225717	Callee	windbg_break		1225662	0					
ANR	1225718	Identifier	windbg_break		1225662	0					
ANR	1225719	ArgumentList	wctx		1225662	1					
ANR	1225720	Argument	wctx		1225662	0					
ANR	1225721	Identifier	wctx		1225662	0					
ANR	1225722	ExpressionStatement	R_FREE ( pkt )	75:3:2130:2142	1225662	2	True				
ANR	1225723	CallExpression	R_FREE ( pkt )		1225662	0					
ANR	1225724	Callee	R_FREE		1225662	0					
ANR	1225725	Identifier	R_FREE		1225662	0					
ANR	1225726	ArgumentList	pkt		1225662	1					
ANR	1225727	Argument	pkt		1225662	0					
ANR	1225728	Identifier	pkt		1225662	0					
ANR	1225729	ContinueStatement	continue ;	76:3:2147:2155	1225662	3	True				
ANR	1225730	IfStatement	if ( ret != KD_E_OK || ! pkt )		1225662	2					
ANR	1225731	Condition	ret != KD_E_OK || ! pkt	78:6:2167:2188	1225662	0	True				
ANR	1225732	OrExpression	ret != KD_E_OK || ! pkt		1225662	0		||			
ANR	1225733	EqualityExpression	ret != KD_E_OK		1225662	0		!=			
ANR	1225734	Identifier	ret		1225662	0					
ANR	1225735	Identifier	KD_E_OK		1225662	1					
ANR	1225736	UnaryOperationExpression	! pkt		1225662	1					
ANR	1225737	UnaryOperator	!		1225662	0					
ANR	1225738	Identifier	pkt		1225662	1					
ANR	1225739	CompoundStatement		15:30:324:324	1225662	1					
ANR	1225740	ExpressionStatement	reason = R_DEBUG_REASON_ERROR	79:3:2196:2225	1225662	0	True				
ANR	1225741	AssignmentExpression	reason = R_DEBUG_REASON_ERROR		1225662	0		=			
ANR	1225742	Identifier	reason		1225662	0					
ANR	1225743	Identifier	R_DEBUG_REASON_ERROR		1225662	1					
ANR	1225744	BreakStatement	break ;	80:3:2230:2235	1225662	1	True				
ANR	1225745	ExpressionStatement	stc = ( kd_stc_64 * ) pkt -> data	82:2:2243:2272	1225662	3	True				
ANR	1225746	AssignmentExpression	stc = ( kd_stc_64 * ) pkt -> data		1225662	0		=			
ANR	1225747	Identifier	stc		1225662	0					
ANR	1225748	CastExpression	( kd_stc_64 * ) pkt -> data		1225662	1					
ANR	1225749	CastTarget	kd_stc_64 *		1225662	0					
ANR	1225750	PtrMemberAccess	pkt -> data		1225662	1					
ANR	1225751	Identifier	pkt		1225662	0					
ANR	1225752	Identifier	data		1225662	1					
ANR	1225753	ExpressionStatement	dbg -> reason . addr = stc -> pc	83:2:2276:2302	1225662	4	True				
ANR	1225754	AssignmentExpression	dbg -> reason . addr = stc -> pc		1225662	0		=			
ANR	1225755	MemberAccess	dbg -> reason . addr		1225662	0					
ANR	1225756	PtrMemberAccess	dbg -> reason		1225662	0					
ANR	1225757	Identifier	dbg		1225662	0					
ANR	1225758	Identifier	reason		1225662	1					
ANR	1225759	Identifier	addr		1225662	1					
ANR	1225760	PtrMemberAccess	stc -> pc		1225662	1					
ANR	1225761	Identifier	stc		1225662	0					
ANR	1225762	Identifier	pc		1225662	1					
ANR	1225763	ExpressionStatement	dbg -> reason . tid = stc -> kthread	84:2:2306:2336	1225662	5	True				
ANR	1225764	AssignmentExpression	dbg -> reason . tid = stc -> kthread		1225662	0		=			
ANR	1225765	MemberAccess	dbg -> reason . tid		1225662	0					
ANR	1225766	PtrMemberAccess	dbg -> reason		1225662	0					
ANR	1225767	Identifier	dbg		1225662	0					
ANR	1225768	Identifier	reason		1225662	1					
ANR	1225769	Identifier	tid		1225662	1					
ANR	1225770	PtrMemberAccess	stc -> kthread		1225662	1					
ANR	1225771	Identifier	stc		1225662	0					
ANR	1225772	Identifier	kthread		1225662	1					
ANR	1225773	ExpressionStatement	dbg -> reason . signum = stc -> state	85:2:2340:2371	1225662	6	True				
ANR	1225774	AssignmentExpression	dbg -> reason . signum = stc -> state		1225662	0		=			
ANR	1225775	MemberAccess	dbg -> reason . signum		1225662	0					
ANR	1225776	PtrMemberAccess	dbg -> reason		1225662	0					
ANR	1225777	Identifier	dbg		1225662	0					
ANR	1225778	Identifier	reason		1225662	1					
ANR	1225779	Identifier	signum		1225662	1					
ANR	1225780	PtrMemberAccess	stc -> state		1225662	1					
ANR	1225781	Identifier	stc		1225662	0					
ANR	1225782	Identifier	state		1225662	1					
ANR	1225783	ExpressionStatement	"windbg_set_cpu ( wctx , stc -> cpu )"	86:2:2375:2406	1225662	7	True				
ANR	1225784	CallExpression	"windbg_set_cpu ( wctx , stc -> cpu )"		1225662	0					
ANR	1225785	Callee	windbg_set_cpu		1225662	0					
ANR	1225786	Identifier	windbg_set_cpu		1225662	0					
ANR	1225787	ArgumentList	wctx		1225662	1					
ANR	1225788	Argument	wctx		1225662	0					
ANR	1225789	Identifier	wctx		1225662	0					
ANR	1225790	Argument	stc -> cpu		1225662	1					
ANR	1225791	PtrMemberAccess	stc -> cpu		1225662	0					
ANR	1225792	Identifier	stc		1225662	0					
ANR	1225793	Identifier	cpu		1225662	1					
ANR	1225794	IfStatement	if ( stc -> state == DbgKdExceptionStateChange )		1225662	8					
ANR	1225795	Condition	stc -> state == DbgKdExceptionStateChange	87:6:2414:2452	1225662	0	True				
ANR	1225796	EqualityExpression	stc -> state == DbgKdExceptionStateChange		1225662	0		==			
ANR	1225797	PtrMemberAccess	stc -> state		1225662	0					
ANR	1225798	Identifier	stc		1225662	0					
ANR	1225799	Identifier	state		1225662	1					
ANR	1225800	Identifier	DbgKdExceptionStateChange		1225662	1					
ANR	1225801	CompoundStatement		24:47:588:588	1225662	1					
ANR	1225802	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_INT	88:3:2460:2497	1225662	0	True				
ANR	1225803	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_INT		1225662	0		=			
ANR	1225804	MemberAccess	dbg -> reason . type		1225662	0					
ANR	1225805	PtrMemberAccess	dbg -> reason		1225662	0					
ANR	1225806	Identifier	dbg		1225662	0					
ANR	1225807	Identifier	reason		1225662	1					
ANR	1225808	Identifier	type		1225662	1					
ANR	1225809	Identifier	R_DEBUG_REASON_INT		1225662	1					
ANR	1225810	ExpressionStatement	reason = R_DEBUG_REASON_INT	89:3:2502:2529	1225662	1	True				
ANR	1225811	AssignmentExpression	reason = R_DEBUG_REASON_INT		1225662	0		=			
ANR	1225812	Identifier	reason		1225662	0					
ANR	1225813	Identifier	R_DEBUG_REASON_INT		1225662	1					
ANR	1225814	BreakStatement	break ;	90:3:2534:2539	1225662	2	True				
ANR	1225815	ElseStatement	else		1225662	0					
ANR	1225816	IfStatement	if ( stc -> state == DbgKdLoadSymbolsStateChange )		1225662	0					
ANR	1225817	Condition	stc -> state == DbgKdLoadSymbolsStateChange	91:13:2554:2594	1225662	0	True				
ANR	1225818	EqualityExpression	stc -> state == DbgKdLoadSymbolsStateChange		1225662	0		==			
ANR	1225819	PtrMemberAccess	stc -> state		1225662	0					
ANR	1225820	Identifier	stc		1225662	0					
ANR	1225821	Identifier	state		1225662	1					
ANR	1225822	Identifier	DbgKdLoadSymbolsStateChange		1225662	1					
ANR	1225823	CompoundStatement		28:56:730:730	1225662	1					
ANR	1225824	ExpressionStatement	dbg -> reason . type = R_DEBUG_REASON_NEW_LIB	92:3:2602:2643	1225662	0	True				
ANR	1225825	AssignmentExpression	dbg -> reason . type = R_DEBUG_REASON_NEW_LIB		1225662	0		=			
ANR	1225826	MemberAccess	dbg -> reason . type		1225662	0					
ANR	1225827	PtrMemberAccess	dbg -> reason		1225662	0					
ANR	1225828	Identifier	dbg		1225662	0					
ANR	1225829	Identifier	reason		1225662	1					
ANR	1225830	Identifier	type		1225662	1					
ANR	1225831	Identifier	R_DEBUG_REASON_NEW_LIB		1225662	1					
ANR	1225832	ExpressionStatement	reason = R_DEBUG_REASON_NEW_LIB	93:3:2648:2679	1225662	1	True				
ANR	1225833	AssignmentExpression	reason = R_DEBUG_REASON_NEW_LIB		1225662	0		=			
ANR	1225834	Identifier	reason		1225662	0					
ANR	1225835	Identifier	R_DEBUG_REASON_NEW_LIB		1225662	1					
ANR	1225836	BreakStatement	break ;	94:3:2684:2689	1225662	2	True				
ANR	1225837	ExpressionStatement	R_FREE ( pkt )	96:2:2697:2709	1225662	9	True				
ANR	1225838	CallExpression	R_FREE ( pkt )		1225662	0					
ANR	1225839	Callee	R_FREE		1225662	0					
ANR	1225840	Identifier	R_FREE		1225662	0					
ANR	1225841	ArgumentList	pkt		1225662	1					
ANR	1225842	Argument	pkt		1225662	0					
ANR	1225843	Identifier	pkt		1225662	0					
ANR	1225844	ExpressionStatement	free ( pkt )	98:1:2715:2725	1225662	5	True				
ANR	1225845	CallExpression	free ( pkt )		1225662	0					
ANR	1225846	Callee	free		1225662	0					
ANR	1225847	Identifier	free		1225662	0					
ANR	1225848	ArgumentList	pkt		1225662	1					
ANR	1225849	Argument	pkt		1225662	0					
ANR	1225850	Identifier	pkt		1225662	0					
ANR	1225851	ReturnStatement	return reason ;	99:1:2728:2741	1225662	6	True				
ANR	1225852	Identifier	reason		1225662	0					
ANR	1225853	ReturnType	static RDebugReasonType		1225662	1					
ANR	1225854	Identifier	r_debug_windbg_wait		1225662	2					
ANR	1225855	ParameterList	"RDebug * dbg , int pid"		1225662	3					
ANR	1225856	Parameter	RDebug * dbg	64:44:1844:1854	1225662	0	True				
ANR	1225857	ParameterType	RDebug *		1225662	0					
ANR	1225858	Identifier	dbg		1225662	1					
ANR	1225859	Parameter	int pid	64:57:1857:1863	1225662	1	True				
ANR	1225860	ParameterType	int		1225662	0					
ANR	1225861	Identifier	pid		1225662	1					
ANR	1225862	CFGEntryNode	ENTRY		1225662		True				
ANR	1225863	CFGExitNode	EXIT		1225662		True				
ANR	1225864	InfiniteForNode	true		1225662		True				
ANR	1225865	Symbol	reason		1225662						
ANR	1225866	Symbol	R_DEBUG_REASON_ERROR		1225662						
ANR	1225867	Symbol	* pkt		1225662						
ANR	1225868	Symbol	stc -> kthread		1225662						
ANR	1225869	Symbol	stc -> pc		1225662						
ANR	1225870	Symbol	pid		1225662						
ANR	1225871	Symbol	* stc		1225662						
ANR	1225872	Symbol	dbg -> reason . signum		1225662						
ANR	1225873	Symbol	dbg -> reason . type		1225662						
ANR	1225874	Symbol	dbg -> reason . tid		1225662						
ANR	1225875	Symbol	pkt		1225662						
ANR	1225876	Symbol	windbg_wait_packet		1225662						
ANR	1225877	Symbol	ret		1225662						
ANR	1225878	Symbol	NULL		1225662						
ANR	1225879	Symbol	stc		1225662						
ANR	1225880	Symbol	dbg -> reason		1225662						
ANR	1225881	Symbol	KD_E_OK		1225662						
ANR	1225882	Symbol	dbreak		1225662						
ANR	1225883	Symbol	R_DEBUG_REASON_INT		1225662						
ANR	1225884	Symbol	DbgKdLoadSymbolsStateChange		1225662						
ANR	1225885	Symbol	wctx		1225662						
ANR	1225886	Symbol	dbg		1225662						
ANR	1225887	Symbol	false		1225662						
ANR	1225888	Symbol	stc -> cpu		1225662						
ANR	1225889	Symbol	* dbg		1225662						
ANR	1225890	Symbol	pkt -> data		1225662						
ANR	1225891	Symbol	R_DEBUG_REASON_UNKNOWN		1225662						
ANR	1225892	Symbol	KD_PACKET_TYPE_STATE_CHANGE64		1225662						
ANR	1225893	Symbol	R_DEBUG_REASON_NEW_LIB		1225662						
ANR	1225894	Symbol	& pkt		1225662						
ANR	1225895	Symbol	DbgKdExceptionStateChange		1225662						
ANR	1225896	Symbol	dbg -> reason . addr		1225662						
ANR	1225897	Symbol	stc -> state		1225662						
ANR	1225898	Function	r_debug_windbg_attach	102:0:2746:3439							
ANR	1225899	FunctionDef	"r_debug_windbg_attach (RDebug * dbg , int pid)"		1225898	0					
ANR	1225900	CompoundStatement		102:55:2801:3439	1225898	0					
ANR	1225901	IdentifierDeclStatement	RIODesc * desc = dbg -> iob . io -> desc ;	103:1:2804:2837	1225898	0	True				
ANR	1225902	IdentifierDecl	* desc = dbg -> iob . io -> desc		1225898	0					
ANR	1225903	IdentifierDeclType	RIODesc *		1225898	0					
ANR	1225904	Identifier	desc		1225898	1					
ANR	1225905	AssignmentExpression	* desc = dbg -> iob . io -> desc		1225898	2		=			
ANR	1225906	Identifier	desc		1225898	0					
ANR	1225907	PtrMemberAccess	dbg -> iob . io -> desc		1225898	1					
ANR	1225908	MemberAccess	dbg -> iob . io		1225898	0					
ANR	1225909	PtrMemberAccess	dbg -> iob		1225898	0					
ANR	1225910	Identifier	dbg		1225898	0					
ANR	1225911	Identifier	iob		1225898	1					
ANR	1225912	Identifier	io		1225898	1					
ANR	1225913	Identifier	desc		1225898	1					
ANR	1225914	IfStatement	if ( ! desc || ! desc -> plugin || ! desc -> plugin -> name || ! desc -> data )		1225898	1					
ANR	1225915	Condition	! desc || ! desc -> plugin || ! desc -> plugin -> name || ! desc -> data	105:5:2845:2904	1225898	0	True				
ANR	1225916	OrExpression	! desc || ! desc -> plugin || ! desc -> plugin -> name || ! desc -> data		1225898	0		||			
ANR	1225917	UnaryOperationExpression	! desc		1225898	0					
ANR	1225918	UnaryOperator	!		1225898	0					
ANR	1225919	Identifier	desc		1225898	1					
ANR	1225920	OrExpression	! desc -> plugin || ! desc -> plugin -> name || ! desc -> data		1225898	1		||			
ANR	1225921	UnaryOperationExpression	! desc -> plugin		1225898	0					
ANR	1225922	UnaryOperator	!		1225898	0					
ANR	1225923	PtrMemberAccess	desc -> plugin		1225898	1					
ANR	1225924	Identifier	desc		1225898	0					
ANR	1225925	Identifier	plugin		1225898	1					
ANR	1225926	OrExpression	! desc -> plugin -> name || ! desc -> data		1225898	1		||			
ANR	1225927	UnaryOperationExpression	! desc -> plugin -> name		1225898	0					
ANR	1225928	UnaryOperator	!		1225898	0					
ANR	1225929	PtrMemberAccess	desc -> plugin -> name		1225898	1					
ANR	1225930	PtrMemberAccess	desc -> plugin		1225898	0					
ANR	1225931	Identifier	desc		1225898	0					
ANR	1225932	Identifier	plugin		1225898	1					
ANR	1225933	Identifier	name		1225898	1					
ANR	1225934	UnaryOperationExpression	! desc -> data		1225898	1					
ANR	1225935	UnaryOperator	!		1225898	0					
ANR	1225936	PtrMemberAccess	desc -> data		1225898	1					
ANR	1225937	Identifier	desc		1225898	0					
ANR	1225938	Identifier	data		1225898	1					
ANR	1225939	CompoundStatement		4:67:105:105	1225898	1					
ANR	1225940	ReturnStatement	return false ;	106:2:2911:2923	1225898	0	True				
ANR	1225941	Identifier	false		1225898	0					
ANR	1225942	IfStatement	"if ( strncmp ( desc -> plugin -> name , ""windbg"" , 6 ) )"		1225898	2					
ANR	1225943	Condition	"strncmp ( desc -> plugin -> name , ""windbg"" , 6 )"	108:5:2933:2973	1225898	0	True				
ANR	1225944	CallExpression	"strncmp ( desc -> plugin -> name , ""windbg"" , 6 )"		1225898	0					
ANR	1225945	Callee	strncmp		1225898	0					
ANR	1225946	Identifier	strncmp		1225898	0					
ANR	1225947	ArgumentList	desc -> plugin -> name		1225898	1					
ANR	1225948	Argument	desc -> plugin -> name		1225898	0					
ANR	1225949	PtrMemberAccess	desc -> plugin -> name		1225898	0					
ANR	1225950	PtrMemberAccess	desc -> plugin		1225898	0					
ANR	1225951	Identifier	desc		1225898	0					
ANR	1225952	Identifier	plugin		1225898	1					
ANR	1225953	Identifier	name		1225898	1					
ANR	1225954	Argument	"""windbg"""		1225898	1					
ANR	1225955	PrimaryExpression	"""windbg"""		1225898	0					
ANR	1225956	Argument	6		1225898	2					
ANR	1225957	PrimaryExpression	6		1225898	0					
ANR	1225958	CompoundStatement		7:48:174:174	1225898	1					
ANR	1225959	ReturnStatement	return false ;	109:2:2980:2992	1225898	0	True				
ANR	1225960	Identifier	false		1225898	0					
ANR	1225961	IfStatement	"if ( dbg -> arch && strcmp ( dbg -> arch , ""x86"" ) )"		1225898	3					
ANR	1225962	Condition	"dbg -> arch && strcmp ( dbg -> arch , ""x86"" )"	111:5:3002:3039	1225898	0	True				
ANR	1225963	AndExpression	"dbg -> arch && strcmp ( dbg -> arch , ""x86"" )"		1225898	0		&&			
ANR	1225964	PtrMemberAccess	dbg -> arch		1225898	0					
ANR	1225965	Identifier	dbg		1225898	0					
ANR	1225966	Identifier	arch		1225898	1					
ANR	1225967	CallExpression	"strcmp ( dbg -> arch , ""x86"" )"		1225898	1					
ANR	1225968	Callee	strcmp		1225898	0					
ANR	1225969	Identifier	strcmp		1225898	0					
ANR	1225970	ArgumentList	dbg -> arch		1225898	1					
ANR	1225971	Argument	dbg -> arch		1225898	0					
ANR	1225972	PtrMemberAccess	dbg -> arch		1225898	0					
ANR	1225973	Identifier	dbg		1225898	0					
ANR	1225974	Identifier	arch		1225898	1					
ANR	1225975	Argument	"""x86"""		1225898	1					
ANR	1225976	PrimaryExpression	"""x86"""		1225898	0					
ANR	1225977	CompoundStatement		10:45:240:240	1225898	1					
ANR	1225978	ReturnStatement	return false ;	112:2:3046:3058	1225898	0	True				
ANR	1225979	Identifier	false		1225898	0					
ANR	1225980	ExpressionStatement	wctx = ( WindCtx * ) desc -> data	114:1:3064:3092	1225898	4	True				
ANR	1225981	AssignmentExpression	wctx = ( WindCtx * ) desc -> data		1225898	0		=			
ANR	1225982	Identifier	wctx		1225898	0					
ANR	1225983	CastExpression	( WindCtx * ) desc -> data		1225898	1					
ANR	1225984	CastTarget	WindCtx *		1225898	0					
ANR	1225985	PtrMemberAccess	desc -> data		1225898	1					
ANR	1225986	Identifier	desc		1225898	0					
ANR	1225987	Identifier	data		1225898	1					
ANR	1225988	IfStatement	if ( ! windbg_sync ( wctx ) )		1225898	5					
ANR	1225989	Condition	! windbg_sync ( wctx )	117:5:3114:3132	1225898	0	True				
ANR	1225990	UnaryOperationExpression	! windbg_sync ( wctx )		1225898	0					
ANR	1225991	UnaryOperator	!		1225898	0					
ANR	1225992	CallExpression	windbg_sync ( wctx )		1225898	1					
ANR	1225993	Callee	windbg_sync		1225898	0					
ANR	1225994	Identifier	windbg_sync		1225898	0					
ANR	1225995	ArgumentList	wctx		1225898	1					
ANR	1225996	Argument	wctx		1225898	0					
ANR	1225997	Identifier	wctx		1225898	0					
ANR	1225998	CompoundStatement		16:26:333:333	1225898	1					
ANR	1225999	ExpressionStatement	"eprintf ( ""Could not connect to windbg\\n"" )"	118:2:3139:3180	1225898	0	True				
ANR	1226000	CallExpression	"eprintf ( ""Could not connect to windbg\\n"" )"		1225898	0					
ANR	1226001	Callee	eprintf		1225898	0					
ANR	1226002	Identifier	eprintf		1225898	0					
ANR	1226003	ArgumentList	"""Could not connect to windbg\\n"""		1225898	1					
ANR	1226004	Argument	"""Could not connect to windbg\\n"""		1225898	0					
ANR	1226005	PrimaryExpression	"""Could not connect to windbg\\n"""		1225898	0					
ANR	1226006	ExpressionStatement	windbg_ctx_free ( ( WindCtx * * ) & desc -> data )	119:2:3184:3225	1225898	1	True				
ANR	1226007	CallExpression	windbg_ctx_free ( ( WindCtx * * ) & desc -> data )		1225898	0					
ANR	1226008	Callee	windbg_ctx_free		1225898	0					
ANR	1226009	Identifier	windbg_ctx_free		1225898	0					
ANR	1226010	ArgumentList	( WindCtx * * ) & desc -> data		1225898	1					
ANR	1226011	Argument	( WindCtx * * ) & desc -> data		1225898	0					
ANR	1226012	CastExpression	( WindCtx * * ) & desc -> data		1225898	0					
ANR	1226013	CastTarget	WindCtx * *		1225898	0					
ANR	1226014	UnaryOperationExpression	& desc -> data		1225898	1					
ANR	1226015	UnaryOperator	&		1225898	0					
ANR	1226016	PtrMemberAccess	desc -> data		1225898	1					
ANR	1226017	Identifier	desc		1225898	0					
ANR	1226018	Identifier	data		1225898	1					
ANR	1226019	ReturnStatement	return false ;	120:2:3229:3241	1225898	2	True				
ANR	1226020	Identifier	false		1225898	0					
ANR	1226021	IfStatement	if ( ! windbg_read_ver ( wctx ) )		1225898	6					
ANR	1226022	Condition	! windbg_read_ver ( wctx )	122:5:3251:3273	1225898	0	True				
ANR	1226023	UnaryOperationExpression	! windbg_read_ver ( wctx )		1225898	0					
ANR	1226024	UnaryOperator	!		1225898	0					
ANR	1226025	CallExpression	windbg_read_ver ( wctx )		1225898	1					
ANR	1226026	Callee	windbg_read_ver		1225898	0					
ANR	1226027	Identifier	windbg_read_ver		1225898	0					
ANR	1226028	ArgumentList	wctx		1225898	1					
ANR	1226029	Argument	wctx		1225898	0					
ANR	1226030	Identifier	wctx		1225898	0					
ANR	1226031	CompoundStatement		21:30:474:474	1225898	1					
ANR	1226032	ExpressionStatement	windbg_ctx_free ( ( WindCtx * * ) & desc -> data )	123:2:3280:3321	1225898	0	True				
ANR	1226033	CallExpression	windbg_ctx_free ( ( WindCtx * * ) & desc -> data )		1225898	0					
ANR	1226034	Callee	windbg_ctx_free		1225898	0					
ANR	1226035	Identifier	windbg_ctx_free		1225898	0					
ANR	1226036	ArgumentList	( WindCtx * * ) & desc -> data		1225898	1					
ANR	1226037	Argument	( WindCtx * * ) & desc -> data		1225898	0					
ANR	1226038	CastExpression	( WindCtx * * ) & desc -> data		1225898	0					
ANR	1226039	CastTarget	WindCtx * *		1225898	0					
ANR	1226040	UnaryOperationExpression	& desc -> data		1225898	1					
ANR	1226041	UnaryOperator	&		1225898	0					
ANR	1226042	PtrMemberAccess	desc -> data		1225898	1					
ANR	1226043	Identifier	desc		1225898	0					
ANR	1226044	Identifier	data		1225898	1					
ANR	1226045	ReturnStatement	return false ;	124:2:3325:3337	1225898	1	True				
ANR	1226046	Identifier	false		1225898	0					
ANR	1226047	ExpressionStatement	dbg -> bits = windbg_get_bits ( wctx )	126:1:3343:3377	1225898	7	True				
ANR	1226048	AssignmentExpression	dbg -> bits = windbg_get_bits ( wctx )		1225898	0		=			
ANR	1226049	PtrMemberAccess	dbg -> bits		1225898	0					
ANR	1226050	Identifier	dbg		1225898	0					
ANR	1226051	Identifier	bits		1225898	1					
ANR	1226052	CallExpression	windbg_get_bits ( wctx )		1225898	1					
ANR	1226053	Callee	windbg_get_bits		1225898	0					
ANR	1226054	Identifier	windbg_get_bits		1225898	0					
ANR	1226055	ArgumentList	wctx		1225898	1					
ANR	1226056	Argument	wctx		1225898	0					
ANR	1226057	Identifier	wctx		1225898	0					
ANR	1226058	ExpressionStatement	dbg -> pid = 0	128:1:3411:3423	1225898	8	True				
ANR	1226059	AssignmentExpression	dbg -> pid = 0		1225898	0		=			
ANR	1226060	PtrMemberAccess	dbg -> pid		1225898	0					
ANR	1226061	Identifier	dbg		1225898	0					
ANR	1226062	Identifier	pid		1225898	1					
ANR	1226063	PrimaryExpression	0		1225898	1					
ANR	1226064	ReturnStatement	return true ;	129:1:3426:3437	1225898	9	True				
ANR	1226065	Identifier	true		1225898	0					
ANR	1226066	ReturnType	static int		1225898	1					
ANR	1226067	Identifier	r_debug_windbg_attach		1225898	2					
ANR	1226068	ParameterList	"RDebug * dbg , int pid"		1225898	3					
ANR	1226069	Parameter	RDebug * dbg	102:33:2779:2789	1225898	0	True				
ANR	1226070	ParameterType	RDebug *		1225898	0					
ANR	1226071	Identifier	dbg		1225898	1					
ANR	1226072	Parameter	int pid	102:46:2792:2798	1225898	1	True				
ANR	1226073	ParameterType	int		1225898	0					
ANR	1226074	Identifier	pid		1225898	1					
ANR	1226075	CFGEntryNode	ENTRY		1225898		True				
ANR	1226076	CFGExitNode	EXIT		1225898		True				
ANR	1226077	Symbol	dbg -> iob . io		1225898						
ANR	1226078	Symbol	dbg -> bits		1225898						
ANR	1226079	Symbol	pid		1225898						
ANR	1226080	Symbol	strncmp		1225898						
ANR	1226081	Symbol	* desc -> plugin		1225898						
ANR	1226082	Symbol	desc -> plugin		1225898						
ANR	1226083	Symbol	dbg -> iob . io -> desc		1225898						
ANR	1226084	Symbol	* dbg -> iob		1225898						
ANR	1226085	Symbol	& desc -> data		1225898						
ANR	1226086	Symbol	windbg_read_ver		1225898						
ANR	1226087	Symbol	* desc		1225898						
ANR	1226088	Symbol	desc -> data		1225898						
ANR	1226089	Symbol	desc -> plugin -> name		1225898						
ANR	1226090	Symbol	strcmp		1225898						
ANR	1226091	Symbol	dbg -> iob		1225898						
ANR	1226092	Symbol	wctx		1225898						
ANR	1226093	Symbol	dbg		1225898						
ANR	1226094	Symbol	false		1225898						
ANR	1226095	Symbol	* * desc		1225898						
ANR	1226096	Symbol	* dbg		1225898						
ANR	1226097	Symbol	* dbg -> iob . io		1225898						
ANR	1226098	Symbol	windbg_get_bits		1225898						
ANR	1226099	Symbol	windbg_sync		1225898						
ANR	1226100	Symbol	dbg -> pid		1225898						
ANR	1226101	Symbol	true		1225898						
ANR	1226102	Symbol	dbg -> arch		1225898						
ANR	1226103	Symbol	* * dbg		1225898						
ANR	1226104	Symbol	desc		1225898						
ANR	1226105	Function	r_debug_windbg_detach	132:0:3442:3542							
ANR	1226106	FunctionDef	"r_debug_windbg_detach (RDebug * dbg , int pid)"		1226105	0					
ANR	1226107	CompoundStatement		132:55:3497:3542	1226105	0					
ANR	1226108	ExpressionStatement	"eprintf ( ""Detaching...\\n"" )"	133:1:3500:3526	1226105	0	True				
ANR	1226109	CallExpression	"eprintf ( ""Detaching...\\n"" )"		1226105	0					
ANR	1226110	Callee	eprintf		1226105	0					
ANR	1226111	Identifier	eprintf		1226105	0					
ANR	1226112	ArgumentList	"""Detaching...\\n"""		1226105	1					
ANR	1226113	Argument	"""Detaching...\\n"""		1226105	0					
ANR	1226114	PrimaryExpression	"""Detaching...\\n"""		1226105	0					
ANR	1226115	ReturnStatement	return true ;	134:1:3529:3540	1226105	1	True				
ANR	1226116	Identifier	true		1226105	0					
ANR	1226117	ReturnType	static int		1226105	1					
ANR	1226118	Identifier	r_debug_windbg_detach		1226105	2					
ANR	1226119	ParameterList	"RDebug * dbg , int pid"		1226105	3					
ANR	1226120	Parameter	RDebug * dbg	132:33:3475:3485	1226105	0	True				
ANR	1226121	ParameterType	RDebug *		1226105	0					
ANR	1226122	Identifier	dbg		1226105	1					
ANR	1226123	Parameter	int pid	132:46:3488:3494	1226105	1	True				
ANR	1226124	ParameterType	int		1226105	0					
ANR	1226125	Identifier	pid		1226105	1					
ANR	1226126	CFGEntryNode	ENTRY		1226105		True				
ANR	1226127	CFGExitNode	EXIT		1226105		True				
ANR	1226128	Symbol	dbg		1226105						
ANR	1226129	Symbol	true		1226105						
ANR	1226130	Symbol	pid		1226105						
ANR	1226131	Function	r_debug_windbg_reg_profile	137:0:3545:3895							
ANR	1226132	FunctionDef	r_debug_windbg_reg_profile (RDebug * dbg)		1226131	0					
ANR	1226133	CompoundStatement		137:53:3598:3895	1226131	0					
ANR	1226134	IfStatement	if ( ! dbg )		1226131	0					
ANR	1226135	Condition	! dbg	138:5:3605:3608	1226131	0	True				
ANR	1226136	UnaryOperationExpression	! dbg		1226131	0					
ANR	1226137	UnaryOperator	!		1226131	0					
ANR	1226138	Identifier	dbg		1226131	1					
ANR	1226139	CompoundStatement		2:11:12:12	1226131	1					
ANR	1226140	ReturnStatement	return NULL ;	139:2:3615:3626	1226131	0	True				
ANR	1226141	Identifier	NULL		1226131	0					
ANR	1226142	IfStatement	"if ( dbg -> arch && strcmp ( dbg -> arch , ""x86"" ) )"		1226131	1					
ANR	1226143	Condition	"dbg -> arch && strcmp ( dbg -> arch , ""x86"" )"	141:5:3636:3673	1226131	0	True				
ANR	1226144	AndExpression	"dbg -> arch && strcmp ( dbg -> arch , ""x86"" )"		1226131	0		&&			
ANR	1226145	PtrMemberAccess	dbg -> arch		1226131	0					
ANR	1226146	Identifier	dbg		1226131	0					
ANR	1226147	Identifier	arch		1226131	1					
ANR	1226148	CallExpression	"strcmp ( dbg -> arch , ""x86"" )"		1226131	1					
ANR	1226149	Callee	strcmp		1226131	0					
ANR	1226150	Identifier	strcmp		1226131	0					
ANR	1226151	ArgumentList	dbg -> arch		1226131	1					
ANR	1226152	Argument	dbg -> arch		1226131	0					
ANR	1226153	PtrMemberAccess	dbg -> arch		1226131	0					
ANR	1226154	Identifier	dbg		1226131	0					
ANR	1226155	Identifier	arch		1226131	1					
ANR	1226156	Argument	"""x86"""		1226131	1					
ANR	1226157	PrimaryExpression	"""x86"""		1226131	0					
ANR	1226158	CompoundStatement		5:45:77:77	1226131	1					
ANR	1226159	ReturnStatement	return NULL ;	142:2:3680:3691	1226131	0	True				
ANR	1226160	Identifier	NULL		1226131	0					
ANR	1226161	ExpressionStatement	"r_debug_windbg_attach ( dbg , 0 )"	144:1:3697:3727	1226131	2	True				
ANR	1226162	CallExpression	"r_debug_windbg_attach ( dbg , 0 )"		1226131	0					
ANR	1226163	Callee	r_debug_windbg_attach		1226131	0					
ANR	1226164	Identifier	r_debug_windbg_attach		1226131	0					
ANR	1226165	ArgumentList	dbg		1226131	1					
ANR	1226166	Argument	dbg		1226131	0					
ANR	1226167	Identifier	dbg		1226131	0					
ANR	1226168	Argument	0		1226131	1					
ANR	1226169	PrimaryExpression	0		1226131	0					
ANR	1226170	IfStatement	if ( dbg -> bits == R_SYS_BITS_32 )		1226131	3					
ANR	1226171	Condition	dbg -> bits == R_SYS_BITS_32	145:5:3734:3759	1226131	0	True				
ANR	1226172	EqualityExpression	dbg -> bits == R_SYS_BITS_32		1226131	0		==			
ANR	1226173	PtrMemberAccess	dbg -> bits		1226131	0					
ANR	1226174	Identifier	dbg		1226131	0					
ANR	1226175	Identifier	bits		1226131	1					
ANR	1226176	Identifier	R_SYS_BITS_32		1226131	1					
ANR	1226177	CompoundStatement		9:33:163:163	1226131	1					
ANR	1226178	Statement	include	146:1:3765:3771	1226131	0	True				
ANR	1226179	Statement	"""native/reg/windows-x86.h"""	146:9:3773:3798	1226131	1	True				
ANR	1226180	ElseStatement	else		1226131	0					
ANR	1226181	IfStatement	if ( dbg -> bits == R_SYS_BITS_64 )		1226131	0					
ANR	1226182	Condition	dbg -> bits == R_SYS_BITS_64	147:12:3812:3837	1226131	0	True				
ANR	1226183	EqualityExpression	dbg -> bits == R_SYS_BITS_64		1226131	0		==			
ANR	1226184	PtrMemberAccess	dbg -> bits		1226131	0					
ANR	1226185	Identifier	dbg		1226131	0					
ANR	1226186	Identifier	bits		1226131	1					
ANR	1226187	Identifier	R_SYS_BITS_64		1226131	1					
ANR	1226188	CompoundStatement		11:40:241:241	1226131	1					
ANR	1226189	Statement	include	148:1:3843:3849	1226131	0	True				
ANR	1226190	Statement	"""native/reg/windows-x64.h"""	148:9:3851:3876	1226131	1	True				
ANR	1226191	ReturnStatement	return NULL ;	150:1:3882:3893	1226131	4	True				
ANR	1226192	Identifier	NULL		1226131	0					
ANR	1226193	ReturnType	static char *		1226131	1					
ANR	1226194	Identifier	r_debug_windbg_reg_profile		1226131	2					
ANR	1226195	ParameterList	RDebug * dbg		1226131	3					
ANR	1226196	Parameter	RDebug * dbg	137:40:3585:3595	1226131	0	True				
ANR	1226197	ParameterType	RDebug *		1226131	0					
ANR	1226198	Identifier	dbg		1226131	1					
ANR	1226199	CFGEntryNode	ENTRY		1226131		True				
ANR	1226200	CFGExitNode	EXIT		1226131		True				
ANR	1226201	Symbol	strcmp		1226131						
ANR	1226202	Symbol	NULL		1226131						
ANR	1226203	Symbol	dbg		1226131						
ANR	1226204	Symbol	dbg -> arch		1226131						
ANR	1226205	Symbol	dbg -> bits		1226131						
ANR	1226206	Symbol	* dbg		1226131						
ANR	1226207	Symbol	R_SYS_BITS_64		1226131						
ANR	1226208	Symbol	R_SYS_BITS_32		1226131						
ANR	1226209	Function	r_debug_windbg_breakpoint	153:0:3898:4260							
ANR	1226210	FunctionDef	"r_debug_windbg_breakpoint (RBreakpoint * bp , RBreakpointItem * b , bool set)"		1226209	0					
ANR	1226211	CompoundStatement		153:84:3982:4260	1226209	0					
ANR	1226212	IdentifierDeclStatement	int * tag ;	154:1:3985:3993	1226209	0	True				
ANR	1226213	IdentifierDecl	* tag		1226209	0					
ANR	1226214	IdentifierDeclType	int *		1226209	0					
ANR	1226215	Identifier	tag		1226209	1					
ANR	1226216	IfStatement	if ( ! b )		1226209	1					
ANR	1226217	Condition	! b	155:5:4000:4001	1226209	0	True				
ANR	1226218	UnaryOperationExpression	! b		1226209	0					
ANR	1226219	UnaryOperator	!		1226209	0					
ANR	1226220	Identifier	b		1226209	1					
ANR	1226221	CompoundStatement		3:9:21:21	1226209	1					
ANR	1226222	ReturnStatement	return false ;	156:2:4008:4020	1226209	0	True				
ANR	1226223	Identifier	false		1226209	0					
ANR	1226224	IfStatement	if ( ! b -> data )		1226209	2					
ANR	1226225	Condition	! b -> data	159:5:4099:4106	1226209	0	True				
ANR	1226226	UnaryOperationExpression	! b -> data		1226209	0					
ANR	1226227	UnaryOperator	!		1226209	0					
ANR	1226228	PtrMemberAccess	b -> data		1226209	1					
ANR	1226229	Identifier	b		1226209	0					
ANR	1226230	Identifier	data		1226209	1					
ANR	1226231	CompoundStatement		7:15:126:126	1226209	1					
ANR	1226232	ExpressionStatement	b -> data = ( char * ) R_NEW0 ( int )	160:2:4113:4143	1226209	0	True				
ANR	1226233	AssignmentExpression	b -> data = ( char * ) R_NEW0 ( int )		1226209	0		=			
ANR	1226234	PtrMemberAccess	b -> data		1226209	0					
ANR	1226235	Identifier	b		1226209	0					
ANR	1226236	Identifier	data		1226209	1					
ANR	1226237	CastExpression	( char * ) R_NEW0 ( int )		1226209	1					
ANR	1226238	CastTarget	char *		1226209	0					
ANR	1226239	CallExpression	R_NEW0 ( int )		1226209	1					
ANR	1226240	Callee	R_NEW0		1226209	0					
ANR	1226241	Identifier	R_NEW0		1226209	0					
ANR	1226242	ArgumentList	int		1226209	1					
ANR	1226243	Argument	int		1226209	0					
ANR	1226244	Identifier	int		1226209	0					
ANR	1226245	IfStatement	if ( ! b -> data )		1226209	1					
ANR	1226246	Condition	! b -> data	161:6:4151:4158	1226209	0	True				
ANR	1226247	UnaryOperationExpression	! b -> data		1226209	0					
ANR	1226248	UnaryOperator	!		1226209	0					
ANR	1226249	PtrMemberAccess	b -> data		1226209	1					
ANR	1226250	Identifier	b		1226209	0					
ANR	1226251	Identifier	data		1226209	1					
ANR	1226252	CompoundStatement		9:16:178:178	1226209	1					
ANR	1226253	ReturnStatement	return 0 ;	162:3:4166:4174	1226209	0	True				
ANR	1226254	PrimaryExpression	0		1226209	0					
ANR	1226255	ExpressionStatement	tag = ( int * ) b -> data	165:1:4184:4204	1226209	3	True				
ANR	1226256	AssignmentExpression	tag = ( int * ) b -> data		1226209	0		=			
ANR	1226257	Identifier	tag		1226209	0					
ANR	1226258	CastExpression	( int * ) b -> data		1226209	1					
ANR	1226259	CastTarget	int *		1226209	0					
ANR	1226260	PtrMemberAccess	b -> data		1226209	1					
ANR	1226261	Identifier	b		1226209	0					
ANR	1226262	Identifier	data		1226209	1					
ANR	1226263	ReturnStatement	"return windbg_bkpt ( wctx , b -> addr , set , b -> hw , tag ) ;"	166:1:4207:4258	1226209	4	True				
ANR	1226264	CallExpression	"windbg_bkpt ( wctx , b -> addr , set , b -> hw , tag )"		1226209	0					
ANR	1226265	Callee	windbg_bkpt		1226209	0					
ANR	1226266	Identifier	windbg_bkpt		1226209	0					
ANR	1226267	ArgumentList	wctx		1226209	1					
ANR	1226268	Argument	wctx		1226209	0					
ANR	1226269	Identifier	wctx		1226209	0					
ANR	1226270	Argument	b -> addr		1226209	1					
ANR	1226271	PtrMemberAccess	b -> addr		1226209	0					
ANR	1226272	Identifier	b		1226209	0					
ANR	1226273	Identifier	addr		1226209	1					
ANR	1226274	Argument	set		1226209	2					
ANR	1226275	Identifier	set		1226209	0					
ANR	1226276	Argument	b -> hw		1226209	3					
ANR	1226277	PtrMemberAccess	b -> hw		1226209	0					
ANR	1226278	Identifier	b		1226209	0					
ANR	1226279	Identifier	hw		1226209	1					
ANR	1226280	Argument	tag		1226209	4					
ANR	1226281	Identifier	tag		1226209	0					
ANR	1226282	ReturnType	static int		1226209	1					
ANR	1226283	Identifier	r_debug_windbg_breakpoint		1226209	2					
ANR	1226284	ParameterList	"RBreakpoint * bp , RBreakpointItem * b , bool set"		1226209	3					
ANR	1226285	Parameter	RBreakpoint * bp	153:37:3935:3949	1226209	0	True				
ANR	1226286	ParameterType	RBreakpoint *		1226209	0					
ANR	1226287	Identifier	bp		1226209	1					
ANR	1226288	Parameter	RBreakpointItem * b	153:54:3952:3969	1226209	1	True				
ANR	1226289	ParameterType	RBreakpointItem *		1226209	0					
ANR	1226290	Identifier	b		1226209	1					
ANR	1226291	Parameter	bool set	153:74:3972:3979	1226209	2	True				
ANR	1226292	ParameterType	bool		1226209	0					
ANR	1226293	Identifier	set		1226209	1					
ANR	1226294	CFGEntryNode	ENTRY		1226209		True				
ANR	1226295	CFGExitNode	EXIT		1226209		True				
ANR	1226296	Symbol	b		1226209						
ANR	1226297	Symbol	set		1226209						
ANR	1226298	Symbol	windbg_bkpt		1226209						
ANR	1226299	Symbol	wctx		1226209						
ANR	1226300	Symbol	false		1226209						
ANR	1226301	Symbol	* b		1226209						
ANR	1226302	Symbol	bp		1226209						
ANR	1226303	Symbol	int		1226209						
ANR	1226304	Symbol	b -> addr		1226209						
ANR	1226305	Symbol	R_NEW0		1226209						
ANR	1226306	Symbol	b -> hw		1226209						
ANR	1226307	Symbol	b -> data		1226209						
ANR	1226308	Symbol	tag		1226209						
ANR	1226309	Function	r_debug_windbg_init	169:0:4263:4323							
ANR	1226310	FunctionDef	r_debug_windbg_init (RDebug * dbg)		1226309	0					
ANR	1226311	CompoundStatement		169:44:4307:4323	1226309	0					
ANR	1226312	ReturnStatement	return true ;	170:1:4310:4321	1226309	0	True				
ANR	1226313	Identifier	true		1226309	0					
ANR	1226314	ReturnType	static int		1226309	1					
ANR	1226315	Identifier	r_debug_windbg_init		1226309	2					
ANR	1226316	ParameterList	RDebug * dbg		1226309	3					
ANR	1226317	Parameter	RDebug * dbg	169:31:4294:4304	1226309	0	True				
ANR	1226318	ParameterType	RDebug *		1226309	0					
ANR	1226319	Identifier	dbg		1226309	1					
ANR	1226320	CFGEntryNode	ENTRY		1226309		True				
ANR	1226321	CFGExitNode	EXIT		1226309		True				
ANR	1226322	Symbol	dbg		1226309						
ANR	1226323	Symbol	true		1226309						
ANR	1226324	Function	r_debug_windbg_pids	173:0:4326:4873							
ANR	1226325	FunctionDef	"r_debug_windbg_pids (RDebug * dbg , int pid)"		1226324	0					
ANR	1226326	CompoundStatement		173:56:4382:4873	1226324	0					
ANR	1226327	IdentifierDeclStatement	RListIter * it ;	174:1:4385:4398	1226324	0	True				
ANR	1226328	IdentifierDecl	* it		1226324	0					
ANR	1226329	IdentifierDeclType	RListIter *		1226324	0					
ANR	1226330	Identifier	it		1226324	1					
ANR	1226331	IdentifierDeclStatement	WindProc * p ;	175:1:4401:4412	1226324	1	True				
ANR	1226332	IdentifierDecl	* p		1226324	0					
ANR	1226333	IdentifierDeclType	WindProc *		1226324	0					
ANR	1226334	Identifier	p		1226324	1					
ANR	1226335	IdentifierDeclStatement	RList * ret = r_list_newf ( free ) ;	177:1:4416:4447	1226324	2	True				
ANR	1226336	IdentifierDecl	* ret = r_list_newf ( free )		1226324	0					
ANR	1226337	IdentifierDeclType	RList *		1226324	0					
ANR	1226338	Identifier	ret		1226324	1					
ANR	1226339	AssignmentExpression	* ret = r_list_newf ( free )		1226324	2		=			
ANR	1226340	Identifier	ret		1226324	0					
ANR	1226341	CallExpression	r_list_newf ( free )		1226324	1					
ANR	1226342	Callee	r_list_newf		1226324	0					
ANR	1226343	Identifier	r_list_newf		1226324	0					
ANR	1226344	ArgumentList	free		1226324	1					
ANR	1226345	Argument	free		1226324	0					
ANR	1226346	Identifier	free		1226324	0					
ANR	1226347	IfStatement	if ( ! ret )		1226324	3					
ANR	1226348	Condition	! ret	178:5:4454:4457	1226324	0	True				
ANR	1226349	UnaryOperationExpression	! ret		1226324	0					
ANR	1226350	UnaryOperator	!		1226324	0					
ANR	1226351	Identifier	ret		1226324	1					
ANR	1226352	CompoundStatement		6:11:77:77	1226324	1					
ANR	1226353	ReturnStatement	return NULL ;	179:2:4464:4475	1226324	0	True				
ANR	1226354	Identifier	NULL		1226324	0					
ANR	1226355	IdentifierDeclStatement	RList * pids = windbg_list_process ( wctx ) ;	182:1:4482:4521	1226324	4	True				
ANR	1226356	IdentifierDecl	* pids = windbg_list_process ( wctx )		1226324	0					
ANR	1226357	IdentifierDeclType	RList *		1226324	0					
ANR	1226358	Identifier	pids		1226324	1					
ANR	1226359	AssignmentExpression	* pids = windbg_list_process ( wctx )		1226324	2		=			
ANR	1226360	Identifier	pids		1226324	0					
ANR	1226361	CallExpression	windbg_list_process ( wctx )		1226324	1					
ANR	1226362	Callee	windbg_list_process		1226324	0					
ANR	1226363	Identifier	windbg_list_process		1226324	0					
ANR	1226364	ArgumentList	wctx		1226324	1					
ANR	1226365	Argument	wctx		1226324	0					
ANR	1226366	Identifier	wctx		1226324	0					
ANR	1226367	IfStatement	if ( ! pids )		1226324	5					
ANR	1226368	Condition	! pids	183:5:4528:4532	1226324	0	True				
ANR	1226369	UnaryOperationExpression	! pids		1226324	0					
ANR	1226370	UnaryOperator	!		1226324	0					
ANR	1226371	Identifier	pids		1226324	1					
ANR	1226372	CompoundStatement		11:12:152:152	1226324	1					
ANR	1226373	ReturnStatement	return ret ;	184:2:4539:4549	1226324	0	True				
ANR	1226374	Identifier	ret		1226324	0					
ANR	1226375	Statement	r_list_foreach	186:1:4555:4568	1226324	6	True				
ANR	1226376	Statement	(	186:16:4570:4570	1226324	7	True				
ANR	1226377	Statement	pids	186:17:4571:4574	1226324	8	True				
ANR	1226378	Statement	","	186:21:4575:4575	1226324	9	True				
ANR	1226379	Statement	it	186:23:4577:4578	1226324	10	True				
ANR	1226380	Statement	","	186:25:4579:4579	1226324	11	True				
ANR	1226381	Statement	p	186:27:4581:4581	1226324	12	True				
ANR	1226382	Statement	)	186:28:4582:4582	1226324	13	True				
ANR	1226383	CompoundStatement		15:2:205:243	1226324	14					
ANR	1226384	IdentifierDeclStatement	RDebugPid * newpid = R_NEW0 ( RDebugPid ) ;	187:2:4588:4626	1226324	0	True				
ANR	1226385	IdentifierDecl	* newpid = R_NEW0 ( RDebugPid )		1226324	0					
ANR	1226386	IdentifierDeclType	RDebugPid *		1226324	0					
ANR	1226387	Identifier	newpid		1226324	1					
ANR	1226388	AssignmentExpression	* newpid = R_NEW0 ( RDebugPid )		1226324	2		=			
ANR	1226389	Identifier	newpid		1226324	0					
ANR	1226390	CallExpression	R_NEW0 ( RDebugPid )		1226324	1					
ANR	1226391	Callee	R_NEW0		1226324	0					
ANR	1226392	Identifier	R_NEW0		1226324	0					
ANR	1226393	ArgumentList	RDebugPid		1226324	1					
ANR	1226394	Argument	RDebugPid		1226324	0					
ANR	1226395	Identifier	RDebugPid		1226324	0					
ANR	1226396	IfStatement	if ( ! newpid )		1226324	1					
ANR	1226397	Condition	! newpid	188:6:4634:4640	1226324	0	True				
ANR	1226398	UnaryOperationExpression	! newpid		1226324	0					
ANR	1226399	UnaryOperator	!		1226324	0					
ANR	1226400	Identifier	newpid		1226324	1					
ANR	1226401	CompoundStatement		16:15:260:260	1226324	1					
ANR	1226402	ExpressionStatement	r_list_free ( ret )	189:3:4648:4665	1226324	0	True				
ANR	1226403	CallExpression	r_list_free ( ret )		1226324	0					
ANR	1226404	Callee	r_list_free		1226324	0					
ANR	1226405	Identifier	r_list_free		1226324	0					
ANR	1226406	ArgumentList	ret		1226324	1					
ANR	1226407	Argument	ret		1226324	0					
ANR	1226408	Identifier	ret		1226324	0					
ANR	1226409	ReturnStatement	return NULL ;	190:3:4670:4681	1226324	1	True				
ANR	1226410	Identifier	NULL		1226324	0					
ANR	1226411	ExpressionStatement	newpid -> path = strdup ( p -> name )	192:2:4689:4720	1226324	2	True				
ANR	1226412	AssignmentExpression	newpid -> path = strdup ( p -> name )		1226324	0		=			
ANR	1226413	PtrMemberAccess	newpid -> path		1226324	0					
ANR	1226414	Identifier	newpid		1226324	0					
ANR	1226415	Identifier	path		1226324	1					
ANR	1226416	CallExpression	strdup ( p -> name )		1226324	1					
ANR	1226417	Callee	strdup		1226324	0					
ANR	1226418	Identifier	strdup		1226324	0					
ANR	1226419	ArgumentList	p -> name		1226324	1					
ANR	1226420	Argument	p -> name		1226324	0					
ANR	1226421	PtrMemberAccess	p -> name		1226324	0					
ANR	1226422	Identifier	p		1226324	0					
ANR	1226423	Identifier	name		1226324	1					
ANR	1226424	ExpressionStatement	newpid -> pid = p -> uniqueid	193:2:4724:4749	1226324	3	True				
ANR	1226425	AssignmentExpression	newpid -> pid = p -> uniqueid		1226324	0		=			
ANR	1226426	PtrMemberAccess	newpid -> pid		1226324	0					
ANR	1226427	Identifier	newpid		1226324	0					
ANR	1226428	Identifier	pid		1226324	1					
ANR	1226429	PtrMemberAccess	p -> uniqueid		1226324	1					
ANR	1226430	Identifier	p		1226324	0					
ANR	1226431	Identifier	uniqueid		1226324	1					
ANR	1226432	ExpressionStatement	newpid -> status = 's'	194:2:4753:4773	1226324	4	True				
ANR	1226433	AssignmentExpression	newpid -> status = 's'		1226324	0		=			
ANR	1226434	PtrMemberAccess	newpid -> status		1226324	0					
ANR	1226435	Identifier	newpid		1226324	0					
ANR	1226436	Identifier	status		1226324	1					
ANR	1226437	PrimaryExpression	's'		1226324	1					
ANR	1226438	ExpressionStatement	newpid -> runnable = true	195:2:4777:4800	1226324	5	True				
ANR	1226439	AssignmentExpression	newpid -> runnable = true		1226324	0		=			
ANR	1226440	PtrMemberAccess	newpid -> runnable		1226324	0					
ANR	1226441	Identifier	newpid		1226324	0					
ANR	1226442	Identifier	runnable		1226324	1					
ANR	1226443	Identifier	true		1226324	1					
ANR	1226444	ExpressionStatement	"r_list_append ( ret , newpid )"	196:2:4804:4831	1226324	6	True				
ANR	1226445	CallExpression	"r_list_append ( ret , newpid )"		1226324	0					
ANR	1226446	Callee	r_list_append		1226324	0					
ANR	1226447	Identifier	r_list_append		1226324	0					
ANR	1226448	ArgumentList	ret		1226324	1					
ANR	1226449	Argument	ret		1226324	0					
ANR	1226450	Identifier	ret		1226324	0					
ANR	1226451	Argument	newpid		1226324	1					
ANR	1226452	Identifier	newpid		1226324	0					
ANR	1226453	ReturnStatement	return ret ;	199:1:4861:4871	1226324	15	True				
ANR	1226454	Identifier	ret		1226324	0					
ANR	1226455	ReturnType	static RList *		1226324	1					
ANR	1226456	Identifier	r_debug_windbg_pids		1226324	2					
ANR	1226457	ParameterList	"RDebug * dbg , int pid"		1226324	3					
ANR	1226458	Parameter	RDebug * dbg	173:34:4360:4370	1226324	0	True				
ANR	1226459	ParameterType	RDebug *		1226324	0					
ANR	1226460	Identifier	dbg		1226324	1					
ANR	1226461	Parameter	int pid	173:47:4373:4379	1226324	1	True				
ANR	1226462	ParameterType	int		1226324	0					
ANR	1226463	Identifier	pid		1226324	1					
ANR	1226464	CFGEntryNode	ENTRY		1226324		True				
ANR	1226465	CFGExitNode	EXIT		1226324		True				
ANR	1226466	Symbol	ret		1226324						
ANR	1226467	Symbol	newpid -> runnable		1226324						
ANR	1226468	Symbol	NULL		1226324						
ANR	1226469	Symbol	newpid -> path		1226324						
ANR	1226470	Symbol	r_list_newf		1226324						
ANR	1226471	Symbol	RDebugPid		1226324						
ANR	1226472	Symbol	wctx		1226324						
ANR	1226473	Symbol	dbg		1226324						
ANR	1226474	Symbol	pid		1226324						
ANR	1226475	Symbol	it		1226324						
ANR	1226476	Symbol	p -> uniqueid		1226324						
ANR	1226477	Symbol	p		1226324						
ANR	1226478	Symbol	R_NEW0		1226324						
ANR	1226479	Symbol	* newpid		1226324						
ANR	1226480	Symbol	windbg_list_process		1226324						
ANR	1226481	Symbol	newpid		1226324						
ANR	1226482	Symbol	newpid -> pid		1226324						
ANR	1226483	Symbol	true		1226324						
ANR	1226484	Symbol	* p		1226324						
ANR	1226485	Symbol	strdup		1226324						
ANR	1226486	Symbol	p -> name		1226324						
ANR	1226487	Symbol	free		1226324						
ANR	1226488	Symbol	pids		1226324						
ANR	1226489	Symbol	newpid -> status		1226324						
ANR	1226490	Function	r_debug_windbg_select	202:0:4876:5229							
ANR	1226491	FunctionDef	"r_debug_windbg_select (RDebug * dbg , int pid , int tid)"		1226490	0					
ANR	1226492	CompoundStatement		202:64:4940:5229	1226490	0					
ANR	1226493	IdentifierDeclStatement	ut32 old = windbg_get_target ( wctx ) ;	203:1:4943:4978	1226490	0	True				
ANR	1226494	IdentifierDecl	old = windbg_get_target ( wctx )		1226490	0					
ANR	1226495	IdentifierDeclType	ut32		1226490	0					
ANR	1226496	Identifier	old		1226490	1					
ANR	1226497	AssignmentExpression	old = windbg_get_target ( wctx )		1226490	2		=			
ANR	1226498	Identifier	old		1226490	0					
ANR	1226499	CallExpression	windbg_get_target ( wctx )		1226490	1					
ANR	1226500	Callee	windbg_get_target		1226490	0					
ANR	1226501	Identifier	windbg_get_target		1226490	0					
ANR	1226502	ArgumentList	wctx		1226490	1					
ANR	1226503	Argument	wctx		1226490	0					
ANR	1226504	Identifier	wctx		1226490	0					
ANR	1226505	IdentifierDeclStatement	"int ret = windbg_set_target ( wctx , pid ) ;"	204:1:4981:5020	1226490	1	True				
ANR	1226506	IdentifierDecl	"ret = windbg_set_target ( wctx , pid )"		1226490	0					
ANR	1226507	IdentifierDeclType	int		1226490	0					
ANR	1226508	Identifier	ret		1226490	1					
ANR	1226509	AssignmentExpression	"ret = windbg_set_target ( wctx , pid )"		1226490	2		=			
ANR	1226510	Identifier	ret		1226490	0					
ANR	1226511	CallExpression	"windbg_set_target ( wctx , pid )"		1226490	1					
ANR	1226512	Callee	windbg_set_target		1226490	0					
ANR	1226513	Identifier	windbg_set_target		1226490	0					
ANR	1226514	ArgumentList	wctx		1226490	1					
ANR	1226515	Argument	wctx		1226490	0					
ANR	1226516	Identifier	wctx		1226490	0					
ANR	1226517	Argument	pid		1226490	1					
ANR	1226518	Identifier	pid		1226490	0					
ANR	1226519	IfStatement	if ( ! ret )		1226490	2					
ANR	1226520	Condition	! ret	205:5:5027:5030	1226490	0	True				
ANR	1226521	UnaryOperationExpression	! ret		1226490	0					
ANR	1226522	UnaryOperator	!		1226490	0					
ANR	1226523	Identifier	ret		1226490	1					
ANR	1226524	CompoundStatement		4:11:92:92	1226490	1					
ANR	1226525	ReturnStatement	return false ;	206:2:5037:5049	1226490	0	True				
ANR	1226526	Identifier	false		1226490	0					
ANR	1226527	IdentifierDeclStatement	ut64 base = windbg_get_target_base ( wctx ) ;	208:1:5055:5096	1226490	3	True				
ANR	1226528	IdentifierDecl	base = windbg_get_target_base ( wctx )		1226490	0					
ANR	1226529	IdentifierDeclType	ut64		1226490	0					
ANR	1226530	Identifier	base		1226490	1					
ANR	1226531	AssignmentExpression	base = windbg_get_target_base ( wctx )		1226490	2		=			
ANR	1226532	Identifier	base		1226490	0					
ANR	1226533	CallExpression	windbg_get_target_base ( wctx )		1226490	1					
ANR	1226534	Callee	windbg_get_target_base		1226490	0					
ANR	1226535	Identifier	windbg_get_target_base		1226490	0					
ANR	1226536	ArgumentList	wctx		1226490	1					
ANR	1226537	Argument	wctx		1226490	0					
ANR	1226538	Identifier	wctx		1226490	0					
ANR	1226539	IfStatement	if ( ! base )		1226490	4					
ANR	1226540	Condition	! base	209:5:5103:5107	1226490	0	True				
ANR	1226541	UnaryOperationExpression	! base		1226490	0					
ANR	1226542	UnaryOperator	!		1226490	0					
ANR	1226543	Identifier	base		1226490	1					
ANR	1226544	CompoundStatement		8:12:169:169	1226490	1					
ANR	1226545	ExpressionStatement	"windbg_set_target ( wctx , old )"	210:2:5114:5143	1226490	0	True				
ANR	1226546	CallExpression	"windbg_set_target ( wctx , old )"		1226490	0					
ANR	1226547	Callee	windbg_set_target		1226490	0					
ANR	1226548	Identifier	windbg_set_target		1226490	0					
ANR	1226549	ArgumentList	wctx		1226490	1					
ANR	1226550	Argument	wctx		1226490	0					
ANR	1226551	Identifier	wctx		1226490	0					
ANR	1226552	Argument	old		1226490	1					
ANR	1226553	Identifier	old		1226490	0					
ANR	1226554	ReturnStatement	return false ;	211:2:5147:5159	1226490	1	True				
ANR	1226555	Identifier	false		1226490	0					
ANR	1226556	Statement	eprintf	213:1:5165:5171	1226490	5	True				
ANR	1226557	Statement	(	213:9:5173:5173	1226490	6	True				
ANR	1226558	Statement	"""Process base is 0x%"""	213:10:5174:5194	1226490	7	True				
ANR	1226559	Statement	PFMT64x	213:31:5195:5201	1226490	8	True				
ANR	1226560	Statement	"""\\n"""	213:38:5202:5205	1226490	9	True				
ANR	1226561	Statement	","	213:42:5206:5206	1226490	10	True				
ANR	1226562	Statement	base	213:44:5208:5211	1226490	11	True				
ANR	1226563	Statement	)	213:48:5212:5212	1226490	12	True				
ANR	1226564	ExpressionStatement		213:49:5213:5213	1226490	13	True				
ANR	1226565	ReturnStatement	return true ;	214:1:5216:5227	1226490	14	True				
ANR	1226566	Identifier	true		1226490	0					
ANR	1226567	ReturnType	static int		1226490	1					
ANR	1226568	Identifier	r_debug_windbg_select		1226490	2					
ANR	1226569	ParameterList	"RDebug * dbg , int pid , int tid"		1226490	3					
ANR	1226570	Parameter	RDebug * dbg	202:33:4909:4919	1226490	0	True				
ANR	1226571	ParameterType	RDebug *		1226490	0					
ANR	1226572	Identifier	dbg		1226490	1					
ANR	1226573	Parameter	int pid	202:46:4922:4928	1226490	1	True				
ANR	1226574	ParameterType	int		1226490	0					
ANR	1226575	Identifier	pid		1226490	1					
ANR	1226576	Parameter	int tid	202:55:4931:4937	1226490	2	True				
ANR	1226577	ParameterType	int		1226490	0					
ANR	1226578	Identifier	tid		1226490	1					
ANR	1226579	CFGEntryNode	ENTRY		1226490		True				
ANR	1226580	CFGExitNode	EXIT		1226490		True				
ANR	1226581	Symbol	ret		1226490						
ANR	1226582	Symbol	windbg_get_target		1226490						
ANR	1226583	Symbol	old		1226490						
ANR	1226584	Symbol	wctx		1226490						
ANR	1226585	Symbol	dbg		1226490						
ANR	1226586	Symbol	false		1226490						
ANR	1226587	Symbol	windbg_get_target_base		1226490						
ANR	1226588	Symbol	true		1226490						
ANR	1226589	Symbol	windbg_set_target		1226490						
ANR	1226590	Symbol	pid		1226490						
ANR	1226591	Symbol	tid		1226490						
ANR	1226592	Symbol	base		1226490						
ANR	1226593	Function	r_debug_windbg_threads	217:0:5232:5772							
ANR	1226594	FunctionDef	"r_debug_windbg_threads (RDebug * dbg , int pid)"		1226593	0					
ANR	1226595	CompoundStatement		217:59:5291:5772	1226593	0					
ANR	1226596	IdentifierDeclStatement	RListIter * it ;	218:1:5294:5307	1226593	0	True				
ANR	1226597	IdentifierDecl	* it		1226593	0					
ANR	1226598	IdentifierDeclType	RListIter *		1226593	0					
ANR	1226599	Identifier	it		1226593	1					
ANR	1226600	IdentifierDeclStatement	WindThread * t ;	219:1:5310:5323	1226593	1	True				
ANR	1226601	IdentifierDecl	* t		1226593	0					
ANR	1226602	IdentifierDeclType	WindThread *		1226593	0					
ANR	1226603	Identifier	t		1226593	1					
ANR	1226604	IdentifierDeclStatement	RList * ret = r_list_newf ( free ) ;	221:1:5327:5358	1226593	2	True				
ANR	1226605	IdentifierDecl	* ret = r_list_newf ( free )		1226593	0					
ANR	1226606	IdentifierDeclType	RList *		1226593	0					
ANR	1226607	Identifier	ret		1226593	1					
ANR	1226608	AssignmentExpression	* ret = r_list_newf ( free )		1226593	2		=			
ANR	1226609	Identifier	ret		1226593	0					
ANR	1226610	CallExpression	r_list_newf ( free )		1226593	1					
ANR	1226611	Callee	r_list_newf		1226593	0					
ANR	1226612	Identifier	r_list_newf		1226593	0					
ANR	1226613	ArgumentList	free		1226593	1					
ANR	1226614	Argument	free		1226593	0					
ANR	1226615	Identifier	free		1226593	0					
ANR	1226616	IfStatement	if ( ! ret )		1226593	3					
ANR	1226617	Condition	! ret	222:5:5365:5368	1226593	0	True				
ANR	1226618	UnaryOperationExpression	! ret		1226593	0					
ANR	1226619	UnaryOperator	!		1226593	0					
ANR	1226620	Identifier	ret		1226593	1					
ANR	1226621	CompoundStatement		6:11:79:79	1226593	1					
ANR	1226622	ReturnStatement	return NULL ;	223:2:5375:5386	1226593	0	True				
ANR	1226623	Identifier	NULL		1226593	0					
ANR	1226624	IdentifierDeclStatement	RList * threads = windbg_list_threads ( wctx ) ;	226:1:5393:5436	1226593	4	True				
ANR	1226625	IdentifierDecl	* threads = windbg_list_threads ( wctx )		1226593	0					
ANR	1226626	IdentifierDeclType	RList *		1226593	0					
ANR	1226627	Identifier	threads		1226593	1					
ANR	1226628	AssignmentExpression	* threads = windbg_list_threads ( wctx )		1226593	2		=			
ANR	1226629	Identifier	threads		1226593	0					
ANR	1226630	CallExpression	windbg_list_threads ( wctx )		1226593	1					
ANR	1226631	Callee	windbg_list_threads		1226593	0					
ANR	1226632	Identifier	windbg_list_threads		1226593	0					
ANR	1226633	ArgumentList	wctx		1226593	1					
ANR	1226634	Argument	wctx		1226593	0					
ANR	1226635	Identifier	wctx		1226593	0					
ANR	1226636	IfStatement	if ( ! threads )		1226593	5					
ANR	1226637	Condition	! threads	227:5:5443:5450	1226593	0	True				
ANR	1226638	UnaryOperationExpression	! threads		1226593	0					
ANR	1226639	UnaryOperator	!		1226593	0					
ANR	1226640	Identifier	threads		1226593	1					
ANR	1226641	CompoundStatement		11:15:161:161	1226593	1					
ANR	1226642	ExpressionStatement	r_list_free ( ret )	228:2:5457:5474	1226593	0	True				
ANR	1226643	CallExpression	r_list_free ( ret )		1226593	0					
ANR	1226644	Callee	r_list_free		1226593	0					
ANR	1226645	Identifier	r_list_free		1226593	0					
ANR	1226646	ArgumentList	ret		1226593	1					
ANR	1226647	Argument	ret		1226593	0					
ANR	1226648	Identifier	ret		1226593	0					
ANR	1226649	ReturnStatement	return NULL ;	229:2:5478:5489	1226593	1	True				
ANR	1226650	Identifier	NULL		1226593	0					
ANR	1226651	Statement	r_list_foreach	232:1:5496:5509	1226593	6	True				
ANR	1226652	Statement	(	232:16:5511:5511	1226593	7	True				
ANR	1226653	Statement	threads	232:17:5512:5518	1226593	8	True				
ANR	1226654	Statement	","	232:24:5519:5519	1226593	9	True				
ANR	1226655	Statement	it	232:26:5521:5522	1226593	10	True				
ANR	1226656	Statement	","	232:28:5523:5523	1226593	11	True				
ANR	1226657	Statement	t	232:30:5525:5525	1226593	12	True				
ANR	1226658	Statement	)	232:31:5526:5526	1226593	13	True				
ANR	1226659	CompoundStatement		17:2:240:278	1226593	14					
ANR	1226660	IdentifierDeclStatement	RDebugPid * newpid = R_NEW0 ( RDebugPid ) ;	233:2:5532:5570	1226593	0	True				
ANR	1226661	IdentifierDecl	* newpid = R_NEW0 ( RDebugPid )		1226593	0					
ANR	1226662	IdentifierDeclType	RDebugPid *		1226593	0					
ANR	1226663	Identifier	newpid		1226593	1					
ANR	1226664	AssignmentExpression	* newpid = R_NEW0 ( RDebugPid )		1226593	2		=			
ANR	1226665	Identifier	newpid		1226593	0					
ANR	1226666	CallExpression	R_NEW0 ( RDebugPid )		1226593	1					
ANR	1226667	Callee	R_NEW0		1226593	0					
ANR	1226668	Identifier	R_NEW0		1226593	0					
ANR	1226669	ArgumentList	RDebugPid		1226593	1					
ANR	1226670	Argument	RDebugPid		1226593	0					
ANR	1226671	Identifier	RDebugPid		1226593	0					
ANR	1226672	IfStatement	if ( ! newpid )		1226593	1					
ANR	1226673	Condition	! newpid	234:6:5578:5584	1226593	0	True				
ANR	1226674	UnaryOperationExpression	! newpid		1226593	0					
ANR	1226675	UnaryOperator	!		1226593	0					
ANR	1226676	Identifier	newpid		1226593	1					
ANR	1226677	CompoundStatement		18:15:295:295	1226593	1					
ANR	1226678	ExpressionStatement	r_list_free ( ret )	235:3:5592:5609	1226593	0	True				
ANR	1226679	CallExpression	r_list_free ( ret )		1226593	0					
ANR	1226680	Callee	r_list_free		1226593	0					
ANR	1226681	Identifier	r_list_free		1226593	0					
ANR	1226682	ArgumentList	ret		1226593	1					
ANR	1226683	Argument	ret		1226593	0					
ANR	1226684	Identifier	ret		1226593	0					
ANR	1226685	ReturnStatement	return NULL ;	236:3:5614:5625	1226593	1	True				
ANR	1226686	Identifier	NULL		1226593	0					
ANR	1226687	ExpressionStatement	newpid -> pid = t -> uniqueid	238:2:5633:5658	1226593	2	True				
ANR	1226688	AssignmentExpression	newpid -> pid = t -> uniqueid		1226593	0		=			
ANR	1226689	PtrMemberAccess	newpid -> pid		1226593	0					
ANR	1226690	Identifier	newpid		1226593	0					
ANR	1226691	Identifier	pid		1226593	1					
ANR	1226692	PtrMemberAccess	t -> uniqueid		1226593	1					
ANR	1226693	Identifier	t		1226593	0					
ANR	1226694	Identifier	uniqueid		1226593	1					
ANR	1226695	ExpressionStatement	newpid -> status = t -> status	239:2:5662:5688	1226593	3	True				
ANR	1226696	AssignmentExpression	newpid -> status = t -> status		1226593	0		=			
ANR	1226697	PtrMemberAccess	newpid -> status		1226593	0					
ANR	1226698	Identifier	newpid		1226593	0					
ANR	1226699	Identifier	status		1226593	1					
ANR	1226700	PtrMemberAccess	t -> status		1226593	1					
ANR	1226701	Identifier	t		1226593	0					
ANR	1226702	Identifier	status		1226593	1					
ANR	1226703	ExpressionStatement	newpid -> runnable = t -> runnable	240:2:5692:5722	1226593	4	True				
ANR	1226704	AssignmentExpression	newpid -> runnable = t -> runnable		1226593	0		=			
ANR	1226705	PtrMemberAccess	newpid -> runnable		1226593	0					
ANR	1226706	Identifier	newpid		1226593	0					
ANR	1226707	Identifier	runnable		1226593	1					
ANR	1226708	PtrMemberAccess	t -> runnable		1226593	1					
ANR	1226709	Identifier	t		1226593	0					
ANR	1226710	Identifier	runnable		1226593	1					
ANR	1226711	ExpressionStatement	"r_list_append ( ret , newpid )"	241:2:5726:5753	1226593	5	True				
ANR	1226712	CallExpression	"r_list_append ( ret , newpid )"		1226593	0					
ANR	1226713	Callee	r_list_append		1226593	0					
ANR	1226714	Identifier	r_list_append		1226593	0					
ANR	1226715	ArgumentList	ret		1226593	1					
ANR	1226716	Argument	ret		1226593	0					
ANR	1226717	Identifier	ret		1226593	0					
ANR	1226718	Argument	newpid		1226593	1					
ANR	1226719	Identifier	newpid		1226593	0					
ANR	1226720	ReturnStatement	return ret ;	244:1:5760:5770	1226593	15	True				
ANR	1226721	Identifier	ret		1226593	0					
ANR	1226722	ReturnType	static RList *		1226593	1					
ANR	1226723	Identifier	r_debug_windbg_threads		1226593	2					
ANR	1226724	ParameterList	"RDebug * dbg , int pid"		1226593	3					
ANR	1226725	Parameter	RDebug * dbg	217:37:5269:5279	1226593	0	True				
ANR	1226726	ParameterType	RDebug *		1226593	0					
ANR	1226727	Identifier	dbg		1226593	1					
ANR	1226728	Parameter	int pid	217:50:5282:5288	1226593	1	True				
ANR	1226729	ParameterType	int		1226593	0					
ANR	1226730	Identifier	pid		1226593	1					
ANR	1226731	CFGEntryNode	ENTRY		1226593		True				
ANR	1226732	CFGExitNode	EXIT		1226593		True				
ANR	1226733	Symbol	ret		1226593						
ANR	1226734	Symbol	t -> status		1226593						
ANR	1226735	Symbol	newpid -> runnable		1226593						
ANR	1226736	Symbol	NULL		1226593						
ANR	1226737	Symbol	r_list_newf		1226593						
ANR	1226738	Symbol	RDebugPid		1226593						
ANR	1226739	Symbol	wctx		1226593						
ANR	1226740	Symbol	dbg		1226593						
ANR	1226741	Symbol	threads		1226593						
ANR	1226742	Symbol	pid		1226593						
ANR	1226743	Symbol	it		1226593						
ANR	1226744	Symbol	t -> runnable		1226593						
ANR	1226745	Symbol	windbg_list_threads		1226593						
ANR	1226746	Symbol	R_NEW0		1226593						
ANR	1226747	Symbol	t		1226593						
ANR	1226748	Symbol	* newpid		1226593						
ANR	1226749	Symbol	newpid		1226593						
ANR	1226750	Symbol	newpid -> pid		1226593						
ANR	1226751	Symbol	free		1226593						
ANR	1226752	Symbol	newpid -> status		1226593						
ANR	1226753	Symbol	t -> uniqueid		1226593						
ANR	1226754	Symbol	* t		1226593						
ANR	1226755	DeclStmt									
ANR	1226756	Decl							RDebugPlugin	RDebugPlugin	r_debug_plugin_windbg
ANR	1226757	DeclStmt									
ANR	1226758	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
