command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6182521	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zip_zip_source_deflate.c								
ANR	6182522	ClassDef	deflate	41:0:1701:1833							
ANR	6182523	DeclStmt									
ANR	6182524	Decl							int	int [ 2 ]	e
ANR	6182525	DeclStmt									
ANR	6182526	Decl							int	int	eof
ANR	6182527	DeclStmt									
ANR	6182528	Decl							int	int	mem_level
ANR	6182529	DeclStmt									
ANR	6182530	Decl							zip_uint64_t	zip_uint64_t	size
ANR	6182531	DeclStmt									
ANR	6182532	Decl							char	char [ BUFSIZE ]	buffer
ANR	6182533	DeclStmt									
ANR	6182534	Decl							z_stream	z_stream	zstr
ANR	6182535	DeclStmt									
ANR	6182536	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , struct deflate * , void * , zip_uint64_t )"	compress_read
ANR	6182537	DeclStmt									
ANR	6182538	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , struct deflate * , void * , zip_uint64_t )"	decompress_read
ANR	6182539	DeclStmt									
ANR	6182540	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , void * , void * , zip_uint64_t , enum zip_source_cmd )"	deflate_compress
ANR	6182541	DeclStmt									
ANR	6182542	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , void * , void * , zip_uint64_t , enum zip_source_cmd )"	deflate_decompress
ANR	6182543	DeclStmt									
ANR	6182544	Decl							void	void ( struct deflate * )	deflate_free
ANR	6182545	Function	zip_source_deflate	63:0:2327:3201							
ANR	6182546	FunctionDef	"zip_source_deflate (struct zip * za , struct zip_source * src , zip_int32_t cm , int flags)"		6182545	0					
ANR	6182547	CompoundStatement		66:0:2438:3201	6182545	0					
ANR	6182548	IdentifierDeclStatement	struct deflate * ctx ;	67:4:2444:2463	6182545	0	True				
ANR	6182549	IdentifierDecl	* ctx		6182545	0					
ANR	6182550	IdentifierDeclType	struct deflate *		6182545	0					
ANR	6182551	Identifier	ctx		6182545	1					
ANR	6182552	IdentifierDeclStatement	struct zip_source * s2 ;	68:4:2469:2490	6182545	1	True				
ANR	6182553	IdentifierDecl	* s2		6182545	0					
ANR	6182554	IdentifierDeclType	struct zip_source *		6182545	0					
ANR	6182555	Identifier	s2		6182545	1					
ANR	6182556	IfStatement	if ( src == NULL || ( cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm ) ) )		6182545	2					
ANR	6182557	Condition	src == NULL || ( cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm ) )	70:8:2501:2563	6182545	0	True				
ANR	6182558	OrExpression	src == NULL || ( cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm ) )		6182545	0		||			
ANR	6182559	EqualityExpression	src == NULL		6182545	0		==			
ANR	6182560	Identifier	src		6182545	0					
ANR	6182561	Identifier	NULL		6182545	1					
ANR	6182562	AndExpression	cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm )		6182545	1		&&			
ANR	6182563	EqualityExpression	cm != ZIP_CM_DEFLATE		6182545	0		!=			
ANR	6182564	Identifier	cm		6182545	0					
ANR	6182565	Identifier	ZIP_CM_DEFLATE		6182545	1					
ANR	6182566	UnaryOperationExpression	! ZIP_CM_IS_DEFAULT ( cm )		6182545	1					
ANR	6182567	UnaryOperator	!		6182545	0					
ANR	6182568	CallExpression	ZIP_CM_IS_DEFAULT ( cm )		6182545	1					
ANR	6182569	Callee	ZIP_CM_IS_DEFAULT		6182545	0					
ANR	6182570	Identifier	ZIP_CM_IS_DEFAULT		6182545	0					
ANR	6182571	ArgumentList	cm		6182545	1					
ANR	6182572	Argument	cm		6182545	0					
ANR	6182573	Identifier	cm		6182545	0					
ANR	6182574	CompoundStatement		5:73:127:127	6182545	1					
ANR	6182575	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	71:1:2569:2612	6182545	0	True				
ANR	6182576	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		6182545	0					
ANR	6182577	Callee	_zip_error_set		6182545	0					
ANR	6182578	Identifier	_zip_error_set		6182545	0					
ANR	6182579	ArgumentList	& za -> error		6182545	1					
ANR	6182580	Argument	& za -> error		6182545	0					
ANR	6182581	UnaryOperationExpression	& za -> error		6182545	0					
ANR	6182582	UnaryOperator	&		6182545	0					
ANR	6182583	PtrMemberAccess	za -> error		6182545	1					
ANR	6182584	Identifier	za		6182545	0					
ANR	6182585	Identifier	error		6182545	1					
ANR	6182586	Argument	ZIP_ER_INVAL		6182545	1					
ANR	6182587	Identifier	ZIP_ER_INVAL		6182545	0					
ANR	6182588	Argument	0		6182545	2					
ANR	6182589	PrimaryExpression	0		6182545	0					
ANR	6182590	ReturnStatement	return NULL ;	72:1:2615:2626	6182545	1	True				
ANR	6182591	Identifier	NULL		6182545	0					
ANR	6182592	IfStatement	if ( ( ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) ) ) == NULL )		6182545	3					
ANR	6182593	Condition	( ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) ) ) == NULL	75:8:2643:2694	6182545	0	True				
ANR	6182594	EqualityExpression	( ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) ) ) == NULL		6182545	0		==			
ANR	6182595	AssignmentExpression	ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) )		6182545	0		=			
ANR	6182596	Identifier	ctx		6182545	0					
ANR	6182597	CastExpression	( struct deflate * ) malloc ( sizeof ( * ctx ) )		6182545	1					
ANR	6182598	CastTarget	struct deflate *		6182545	0					
ANR	6182599	CallExpression	malloc ( sizeof ( * ctx ) )		6182545	1					
ANR	6182600	Callee	malloc		6182545	0					
ANR	6182601	Identifier	malloc		6182545	0					
ANR	6182602	ArgumentList	sizeof ( * ctx )		6182545	1					
ANR	6182603	Argument	sizeof ( * ctx )		6182545	0					
ANR	6182604	SizeofExpression	sizeof ( * ctx )		6182545	0					
ANR	6182605	Sizeof	sizeof		6182545	0					
ANR	6182606	UnaryOperationExpression	* ctx		6182545	1					
ANR	6182607	UnaryOperator	*		6182545	0					
ANR	6182608	Identifier	ctx		6182545	1					
ANR	6182609	Identifier	NULL		6182545	1					
ANR	6182610	CompoundStatement		10:62:258:258	6182545	1					
ANR	6182611	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	76:1:2700:2744	6182545	0	True				
ANR	6182612	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6182545	0					
ANR	6182613	Callee	_zip_error_set		6182545	0					
ANR	6182614	Identifier	_zip_error_set		6182545	0					
ANR	6182615	ArgumentList	& za -> error		6182545	1					
ANR	6182616	Argument	& za -> error		6182545	0					
ANR	6182617	UnaryOperationExpression	& za -> error		6182545	0					
ANR	6182618	UnaryOperator	&		6182545	0					
ANR	6182619	PtrMemberAccess	za -> error		6182545	1					
ANR	6182620	Identifier	za		6182545	0					
ANR	6182621	Identifier	error		6182545	1					
ANR	6182622	Argument	ZIP_ER_MEMORY		6182545	1					
ANR	6182623	Identifier	ZIP_ER_MEMORY		6182545	0					
ANR	6182624	Argument	0		6182545	2					
ANR	6182625	PrimaryExpression	0		6182545	0					
ANR	6182626	ReturnStatement	return NULL ;	77:1:2747:2758	6182545	1	True				
ANR	6182627	Identifier	NULL		6182545	0					
ANR	6182628	ExpressionStatement	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0	80:4:2771:2796	6182545	4	True				
ANR	6182629	AssignmentExpression	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0		6182545	0		=			
ANR	6182630	ArrayIndexing	ctx -> e [ 0 ]		6182545	0					
ANR	6182631	PtrMemberAccess	ctx -> e		6182545	0					
ANR	6182632	Identifier	ctx		6182545	0					
ANR	6182633	Identifier	e		6182545	1					
ANR	6182634	PrimaryExpression	0		6182545	1					
ANR	6182635	AssignmentExpression	ctx -> e [ 1 ] = 0		6182545	1		=			
ANR	6182636	ArrayIndexing	ctx -> e [ 1 ]		6182545	0					
ANR	6182637	PtrMemberAccess	ctx -> e		6182545	0					
ANR	6182638	Identifier	ctx		6182545	0					
ANR	6182639	Identifier	e		6182545	1					
ANR	6182640	PrimaryExpression	1		6182545	1					
ANR	6182641	PrimaryExpression	0		6182545	1					
ANR	6182642	ExpressionStatement	ctx -> eof = 0	81:4:2802:2814	6182545	5	True				
ANR	6182643	AssignmentExpression	ctx -> eof = 0		6182545	0		=			
ANR	6182644	PtrMemberAccess	ctx -> eof		6182545	0					
ANR	6182645	Identifier	ctx		6182545	0					
ANR	6182646	Identifier	eof		6182545	1					
ANR	6182647	PrimaryExpression	0		6182545	1					
ANR	6182648	IfStatement	if ( flags & ZIP_CODEC_ENCODE )		6182545	6					
ANR	6182649	Condition	flags & ZIP_CODEC_ENCODE	82:8:2824:2847	6182545	0	True				
ANR	6182650	BitAndExpression	flags & ZIP_CODEC_ENCODE		6182545	0		&			
ANR	6182651	Identifier	flags		6182545	0					
ANR	6182652	Identifier	ZIP_CODEC_ENCODE		6182545	1					
ANR	6182653	CompoundStatement		17:34:411:411	6182545	1					
ANR	6182654	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6182545	0					
ANR	6182655	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	83:5:2857:2900	6182545	0	True				
ANR	6182656	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6182545	0					
ANR	6182657	Callee	zip_get_archive_flag		6182545	0					
ANR	6182658	Identifier	zip_get_archive_flag		6182545	0					
ANR	6182659	ArgumentList	za		6182545	1					
ANR	6182660	Argument	za		6182545	0					
ANR	6182661	Identifier	za		6182545	0					
ANR	6182662	Argument	ZIP_AFL_TORRENT		6182545	1					
ANR	6182663	Identifier	ZIP_AFL_TORRENT		6182545	0					
ANR	6182664	Argument	0		6182545	2					
ANR	6182665	PrimaryExpression	0		6182545	0					
ANR	6182666	ExpressionStatement	ctx -> mem_level = TORRENT_MEM_LEVEL	84:5:2908:2942	6182545	1	True				
ANR	6182667	AssignmentExpression	ctx -> mem_level = TORRENT_MEM_LEVEL		6182545	0		=			
ANR	6182668	PtrMemberAccess	ctx -> mem_level		6182545	0					
ANR	6182669	Identifier	ctx		6182545	0					
ANR	6182670	Identifier	mem_level		6182545	1					
ANR	6182671	Identifier	TORRENT_MEM_LEVEL		6182545	1					
ANR	6182672	ElseStatement	else		6182545	0					
ANR	6182673	ExpressionStatement	ctx -> mem_level = MAX_MEM_LEVEL	86:5:2955:2985	6182545	0	True				
ANR	6182674	AssignmentExpression	ctx -> mem_level = MAX_MEM_LEVEL		6182545	0		=			
ANR	6182675	PtrMemberAccess	ctx -> mem_level		6182545	0					
ANR	6182676	Identifier	ctx		6182545	0					
ANR	6182677	Identifier	mem_level		6182545	1					
ANR	6182678	Identifier	MAX_MEM_LEVEL		6182545	1					
ANR	6182679	IfStatement	"if ( ( s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx ) ) == NULL )"		6182545	7					
ANR	6182680	Condition	"( s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx ) ) == NULL"	89:8:3002:3140	6182545	0	True				
ANR	6182681	EqualityExpression	"( s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx ) ) == NULL"		6182545	0		==			
ANR	6182682	AssignmentExpression	"s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx )"		6182545	0		=			
ANR	6182683	Identifier	s2		6182545	0					
ANR	6182684	CallExpression	"zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx )"		6182545	1					
ANR	6182685	Callee	zip_source_layered		6182545	0					
ANR	6182686	Identifier	zip_source_layered		6182545	0					
ANR	6182687	ArgumentList	za		6182545	1					
ANR	6182688	Argument	za		6182545	0					
ANR	6182689	Identifier	za		6182545	0					
ANR	6182690	Argument	src		6182545	1					
ANR	6182691	Identifier	src		6182545	0					
ANR	6182692	Argument	( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress		6182545	2					
ANR	6182693	ConditionalExpression	( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress		6182545	0					
ANR	6182694	Condition	flags & ZIP_CODEC_ENCODE		6182545	0					
ANR	6182695	BitAndExpression	flags & ZIP_CODEC_ENCODE		6182545	0		&			
ANR	6182696	Identifier	flags		6182545	0					
ANR	6182697	Identifier	ZIP_CODEC_ENCODE		6182545	1					
ANR	6182698	Identifier	deflate_compress		6182545	1					
ANR	6182699	Identifier	deflate_decompress		6182545	2					
ANR	6182700	Argument	ctx		6182545	3					
ANR	6182701	Identifier	ctx		6182545	0					
ANR	6182702	Identifier	NULL		6182545	1					
ANR	6182703	CompoundStatement		27:25:704:704	6182545	1					
ANR	6182704	ExpressionStatement	deflate_free ( ctx )	93:1:3146:3163	6182545	0	True				
ANR	6182705	CallExpression	deflate_free ( ctx )		6182545	0					
ANR	6182706	Callee	deflate_free		6182545	0					
ANR	6182707	Identifier	deflate_free		6182545	0					
ANR	6182708	ArgumentList	ctx		6182545	1					
ANR	6182709	Argument	ctx		6182545	0					
ANR	6182710	Identifier	ctx		6182545	0					
ANR	6182711	ReturnStatement	return NULL ;	94:1:3166:3177	6182545	1	True				
ANR	6182712	Identifier	NULL		6182545	0					
ANR	6182713	ReturnStatement	return s2 ;	97:4:3190:3199	6182545	8	True				
ANR	6182714	Identifier	s2		6182545	0					
ANR	6182715	ReturnType	struct zip_source *		6182545	1					
ANR	6182716	Identifier	zip_source_deflate		6182545	2					
ANR	6182717	ParameterList	"struct zip * za , struct zip_source * src , zip_int32_t cm , int flags"		6182545	3					
ANR	6182718	Parameter	struct zip * za	64:19:2366:2379	6182545	0	True				
ANR	6182719	ParameterType	struct zip *		6182545	0					
ANR	6182720	Identifier	za		6182545	1					
ANR	6182721	Parameter	struct zip_source * src	64:35:2382:2403	6182545	1	True				
ANR	6182722	ParameterType	struct zip_source *		6182545	0					
ANR	6182723	Identifier	src		6182545	1					
ANR	6182724	Parameter	zip_int32_t cm	65:5:2411:2424	6182545	2	True				
ANR	6182725	ParameterType	zip_int32_t		6182545	0					
ANR	6182726	Identifier	cm		6182545	1					
ANR	6182727	Parameter	int flags	65:21:2427:2435	6182545	3	True				
ANR	6182728	ParameterType	int		6182545	0					
ANR	6182729	Identifier	flags		6182545	1					
ANR	6182730	CFGEntryNode	ENTRY		6182545		True				
ANR	6182731	CFGExitNode	EXIT		6182545		True				
ANR	6182732	Symbol	& za -> error		6182545						
ANR	6182733	Symbol	flags		6182545						
ANR	6182734	Symbol	TORRENT_MEM_LEVEL		6182545						
ANR	6182735	Symbol	ctx -> e		6182545						
ANR	6182736	Symbol	MAX_MEM_LEVEL		6182545						
ANR	6182737	Symbol	ZIP_CM_DEFLATE		6182545						
ANR	6182738	Symbol	ZIP_ER_INVAL		6182545						
ANR	6182739	Symbol	ZIP_CM_IS_DEFAULT		6182545						
ANR	6182740	Symbol	* ctx -> e		6182545						
ANR	6182741	Symbol	ZIP_ER_MEMORY		6182545						
ANR	6182742	Symbol	s2		6182545						
ANR	6182743	Symbol	malloc		6182545						
ANR	6182744	Symbol	NULL		6182545						
ANR	6182745	Symbol	src		6182545						
ANR	6182746	Symbol	ctx		6182545						
ANR	6182747	Symbol	za		6182545						
ANR	6182748	Symbol	ctx -> eof		6182545						
ANR	6182749	Symbol	ZIP_CODEC_ENCODE		6182545						
ANR	6182750	Symbol	zip_get_archive_flag		6182545						
ANR	6182751	Symbol	cm		6182545						
ANR	6182752	Symbol	* ctx		6182545						
ANR	6182753	Symbol	ZIP_AFL_TORRENT		6182545						
ANR	6182754	Symbol	ctx -> mem_level		6182545						
ANR	6182755	Symbol	deflate_decompress		6182545						
ANR	6182756	Symbol	zip_source_layered		6182545						
ANR	6182757	Symbol	* * ctx		6182545						
ANR	6182758	Symbol	deflate_compress		6182545						
ANR	6182759	Function	compress_read	102:0:3207:4613							
ANR	6182760	FunctionDef	"compress_read (struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len)"		6182759	0					
ANR	6182761	CompoundStatement		105:0:3322:4613	6182759	0					
ANR	6182762	IdentifierDeclStatement	"int end , ret ;"	106:4:3328:3340	6182759	0	True				
ANR	6182763	IdentifierDecl	end		6182759	0					
ANR	6182764	IdentifierDeclType	int		6182759	0					
ANR	6182765	Identifier	end		6182759	1					
ANR	6182766	IdentifierDecl	ret		6182759	1					
ANR	6182767	IdentifierDeclType	int		6182759	0					
ANR	6182768	Identifier	ret		6182759	1					
ANR	6182769	IdentifierDeclStatement	zip_int64_t n ;	107:4:3346:3359	6182759	1	True				
ANR	6182770	IdentifierDecl	n		6182759	0					
ANR	6182771	IdentifierDeclType	zip_int64_t		6182759	0					
ANR	6182772	Identifier	n		6182759	1					
ANR	6182773	IfStatement	if ( ctx -> e [ 0 ] != 0 )		6182759	2					
ANR	6182774	Condition	ctx -> e [ 0 ] != 0	109:8:3370:3383	6182759	0	True				
ANR	6182775	EqualityExpression	ctx -> e [ 0 ] != 0		6182759	0		!=			
ANR	6182776	ArrayIndexing	ctx -> e [ 0 ]		6182759	0					
ANR	6182777	PtrMemberAccess	ctx -> e		6182759	0					
ANR	6182778	Identifier	ctx		6182759	0					
ANR	6182779	Identifier	e		6182759	1					
ANR	6182780	PrimaryExpression	0		6182759	1					
ANR	6182781	PrimaryExpression	0		6182759	1					
ANR	6182782	ReturnStatement	return - 1 ;	110:1:3387:3396	6182759	1	True				
ANR	6182783	UnaryOperationExpression	- 1		6182759	0					
ANR	6182784	UnaryOperator	-		6182759	0					
ANR	6182785	PrimaryExpression	1		6182759	1					
ANR	6182786	IfStatement	if ( len == 0 )		6182759	3					
ANR	6182787	Condition	len == 0	112:8:3411:3418	6182759	0	True				
ANR	6182788	EqualityExpression	len == 0		6182759	0		==			
ANR	6182789	Identifier	len		6182759	0					
ANR	6182790	PrimaryExpression	0		6182759	1					
ANR	6182791	ReturnStatement	return 0 ;	113:1:3422:3430	6182759	1	True				
ANR	6182792	PrimaryExpression	0		6182759	0					
ANR	6182793	ExpressionStatement	ctx -> zstr . next_out = ( Bytef * ) data	115:4:3438:3472	6182759	4	True				
ANR	6182794	AssignmentExpression	ctx -> zstr . next_out = ( Bytef * ) data		6182759	0		=			
ANR	6182795	MemberAccess	ctx -> zstr . next_out		6182759	0					
ANR	6182796	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182797	Identifier	ctx		6182759	0					
ANR	6182798	Identifier	zstr		6182759	1					
ANR	6182799	Identifier	next_out		6182759	1					
ANR	6182800	CastExpression	( Bytef * ) data		6182759	1					
ANR	6182801	CastTarget	Bytef *		6182759	0					
ANR	6182802	Identifier	data		6182759	1					
ANR	6182803	ExpressionStatement	ctx -> zstr . avail_out = ( uInt ) len	116:4:3478:3509	6182759	5	True				
ANR	6182804	AssignmentExpression	ctx -> zstr . avail_out = ( uInt ) len		6182759	0		=			
ANR	6182805	MemberAccess	ctx -> zstr . avail_out		6182759	0					
ANR	6182806	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182807	Identifier	ctx		6182759	0					
ANR	6182808	Identifier	zstr		6182759	1					
ANR	6182809	Identifier	avail_out		6182759	1					
ANR	6182810	CastExpression	( uInt ) len		6182759	1					
ANR	6182811	CastTarget	uInt		6182759	0					
ANR	6182812	Identifier	len		6182759	1					
ANR	6182813	ExpressionStatement	end = 0	118:4:3546:3553	6182759	6	True				
ANR	6182814	AssignmentExpression	end = 0		6182759	0		=			
ANR	6182815	Identifier	end		6182759	0					
ANR	6182816	PrimaryExpression	0		6182759	1					
ANR	6182817	WhileStatement	while ( ! end )		6182759	7					
ANR	6182818	Condition	! end	119:11:3566:3569	6182759	0	True				
ANR	6182819	UnaryOperationExpression	! end		6182759	0					
ANR	6182820	UnaryOperator	!		6182759	0					
ANR	6182821	Identifier	end		6182759	1					
ANR	6182822	CompoundStatement		15:17:249:249	6182759	1					
ANR	6182823	ExpressionStatement	"ret = deflate ( & ctx -> zstr , ctx -> eof ? Z_FINISH : 0 )"	120:1:3575:3625	6182759	0	True				
ANR	6182824	AssignmentExpression	"ret = deflate ( & ctx -> zstr , ctx -> eof ? Z_FINISH : 0 )"		6182759	0		=			
ANR	6182825	Identifier	ret		6182759	0					
ANR	6182826	CallExpression	"deflate ( & ctx -> zstr , ctx -> eof ? Z_FINISH : 0 )"		6182759	1					
ANR	6182827	Callee	deflate		6182759	0					
ANR	6182828	Identifier	deflate		6182759	0					
ANR	6182829	ArgumentList	& ctx -> zstr		6182759	1					
ANR	6182830	Argument	& ctx -> zstr		6182759	0					
ANR	6182831	UnaryOperationExpression	& ctx -> zstr		6182759	0					
ANR	6182832	UnaryOperator	&		6182759	0					
ANR	6182833	PtrMemberAccess	ctx -> zstr		6182759	1					
ANR	6182834	Identifier	ctx		6182759	0					
ANR	6182835	Identifier	zstr		6182759	1					
ANR	6182836	Argument	ctx -> eof ? Z_FINISH : 0		6182759	1					
ANR	6182837	ConditionalExpression	ctx -> eof ? Z_FINISH : 0		6182759	0					
ANR	6182838	Condition	ctx -> eof		6182759	0					
ANR	6182839	PtrMemberAccess	ctx -> eof		6182759	0					
ANR	6182840	Identifier	ctx		6182759	0					
ANR	6182841	Identifier	eof		6182759	1					
ANR	6182842	Identifier	Z_FINISH		6182759	1					
ANR	6182843	PrimaryExpression	0		6182759	2					
ANR	6182844	SwitchStatement	switch ( ret )		6182759	1					
ANR	6182845	Condition	ret	122:9:3637:3639	6182759	0	True				
ANR	6182846	Identifier	ret		6182759	0					
ANR	6182847	CompoundStatement		18:14:319:319	6182759	1					
ANR	6182848	Label	case Z_OK :	123:1:3645:3654	6182759	0	True				
ANR	6182849	Identifier	Z_OK		6182759	0					
ANR	6182850	Label	case Z_STREAM_END :	124:1:3657:3674	6182759	1	True				
ANR	6182851	Identifier	Z_STREAM_END		6182759	0					
ANR	6182852	IfStatement	if ( ctx -> zstr . avail_out == 0 || ( ctx -> eof && ctx -> zstr . avail_in == 0 ) )		6182759	2					
ANR	6182853	Condition	ctx -> zstr . avail_out == 0 || ( ctx -> eof && ctx -> zstr . avail_in == 0 )	127:9:3704:3770	6182759	0	True				
ANR	6182854	OrExpression	ctx -> zstr . avail_out == 0 || ( ctx -> eof && ctx -> zstr . avail_in == 0 )		6182759	0		||			
ANR	6182855	EqualityExpression	ctx -> zstr . avail_out == 0		6182759	0		==			
ANR	6182856	MemberAccess	ctx -> zstr . avail_out		6182759	0					
ANR	6182857	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182858	Identifier	ctx		6182759	0					
ANR	6182859	Identifier	zstr		6182759	1					
ANR	6182860	Identifier	avail_out		6182759	1					
ANR	6182861	PrimaryExpression	0		6182759	1					
ANR	6182862	AndExpression	ctx -> eof && ctx -> zstr . avail_in == 0		6182759	1		&&			
ANR	6182863	PtrMemberAccess	ctx -> eof		6182759	0					
ANR	6182864	Identifier	ctx		6182759	0					
ANR	6182865	Identifier	eof		6182759	1					
ANR	6182866	EqualityExpression	ctx -> zstr . avail_in == 0		6182759	1		==			
ANR	6182867	MemberAccess	ctx -> zstr . avail_in		6182759	0					
ANR	6182868	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182869	Identifier	ctx		6182759	0					
ANR	6182870	Identifier	zstr		6182759	1					
ANR	6182871	Identifier	avail_in		6182759	1					
ANR	6182872	PrimaryExpression	0		6182759	1					
ANR	6182873	ExpressionStatement	end = 1	129:2:3775:3782	6182759	1	True				
ANR	6182874	AssignmentExpression	end = 1		6182759	0		=			
ANR	6182875	Identifier	end		6182759	0					
ANR	6182876	PrimaryExpression	1		6182759	1					
ANR	6182877	BreakStatement	break ;	130:5:3789:3794	6182759	3	True				
ANR	6182878	Label	case Z_BUF_ERROR :	132:1:3798:3814	6182759	4	True				
ANR	6182879	Identifier	Z_BUF_ERROR		6182759	0					
ANR	6182880	IfStatement	if ( ctx -> zstr . avail_in == 0 )		6182759	5					
ANR	6182881	Condition	ctx -> zstr . avail_in == 0	133:9:3825:3847	6182759	0	True				
ANR	6182882	EqualityExpression	ctx -> zstr . avail_in == 0		6182759	0		==			
ANR	6182883	MemberAccess	ctx -> zstr . avail_in		6182759	0					
ANR	6182884	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182885	Identifier	ctx		6182759	0					
ANR	6182886	Identifier	zstr		6182759	1					
ANR	6182887	Identifier	avail_in		6182759	1					
ANR	6182888	PrimaryExpression	0		6182759	1					
ANR	6182889	CompoundStatement		29:34:527:527	6182759	1					
ANR	6182890	IfStatement	if ( ctx -> eof )		6182759	0					
ANR	6182891	Condition	ctx -> eof	134:6:3858:3865	6182759	0	True				
ANR	6182892	PtrMemberAccess	ctx -> eof		6182759	0					
ANR	6182893	Identifier	ctx		6182759	0					
ANR	6182894	Identifier	eof		6182759	1					
ANR	6182895	CompoundStatement		30:16:545:545	6182759	1					
ANR	6182896	ExpressionStatement	end = 1	135:6:3876:3883	6182759	0	True				
ANR	6182897	AssignmentExpression	end = 1		6182759	0		=			
ANR	6182898	Identifier	end		6182759	0					
ANR	6182899	PrimaryExpression	1		6182759	1					
ANR	6182900	BreakStatement	break ;	136:6:3891:3896	6182759	1	True				
ANR	6182901	IfStatement	"if ( ( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0 )"		6182759	1					
ANR	6182902	Condition	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"	139:6:3909:3970	6182759	0	True				
ANR	6182903	RelationalExpression	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"		6182759	0		<			
ANR	6182904	AssignmentExpression	"n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6182759	0		=			
ANR	6182905	Identifier	n		6182759	0					
ANR	6182906	CallExpression	"zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6182759	1					
ANR	6182907	Callee	zip_source_read		6182759	0					
ANR	6182908	Identifier	zip_source_read		6182759	0					
ANR	6182909	ArgumentList	src		6182759	1					
ANR	6182910	Argument	src		6182759	0					
ANR	6182911	Identifier	src		6182759	0					
ANR	6182912	Argument	ctx -> buffer		6182759	1					
ANR	6182913	PtrMemberAccess	ctx -> buffer		6182759	0					
ANR	6182914	Identifier	ctx		6182759	0					
ANR	6182915	Identifier	buffer		6182759	1					
ANR	6182916	Argument	sizeof ( ctx -> buffer )		6182759	2					
ANR	6182917	SizeofExpression	sizeof ( ctx -> buffer )		6182759	0					
ANR	6182918	Sizeof	sizeof		6182759	0					
ANR	6182919	PtrMemberAccess	ctx -> buffer		6182759	1					
ANR	6182920	Identifier	ctx		6182759	0					
ANR	6182921	Identifier	buffer		6182759	1					
ANR	6182922	PrimaryExpression	0		6182759	1					
ANR	6182923	CompoundStatement		35:70:650:650	6182759	1					
ANR	6182924	ExpressionStatement	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"	140:6:3981:4020	6182759	0	True				
ANR	6182925	CallExpression	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"		6182759	0					
ANR	6182926	Callee	zip_source_error		6182759	0					
ANR	6182927	Identifier	zip_source_error		6182759	0					
ANR	6182928	ArgumentList	src		6182759	1					
ANR	6182929	Argument	src		6182759	0					
ANR	6182930	Identifier	src		6182759	0					
ANR	6182931	Argument	ctx -> e		6182759	1					
ANR	6182932	PtrMemberAccess	ctx -> e		6182759	0					
ANR	6182933	Identifier	ctx		6182759	0					
ANR	6182934	Identifier	e		6182759	1					
ANR	6182935	Argument	ctx -> e + 1		6182759	2					
ANR	6182936	AdditiveExpression	ctx -> e + 1		6182759	0		+			
ANR	6182937	PtrMemberAccess	ctx -> e		6182759	0					
ANR	6182938	Identifier	ctx		6182759	0					
ANR	6182939	Identifier	e		6182759	1					
ANR	6182940	PrimaryExpression	1		6182759	1					
ANR	6182941	ExpressionStatement	end = 1	141:6:4028:4035	6182759	1	True				
ANR	6182942	AssignmentExpression	end = 1		6182759	0		=			
ANR	6182943	Identifier	end		6182759	0					
ANR	6182944	PrimaryExpression	1		6182759	1					
ANR	6182945	BreakStatement	break ;	142:6:4043:4048	6182759	2	True				
ANR	6182946	ElseStatement	else		6182759	0					
ANR	6182947	IfStatement	if ( n == 0 )		6182759	0					
ANR	6182948	Condition	n == 0	144:11:4065:4070	6182759	0	True				
ANR	6182949	EqualityExpression	n == 0		6182759	0		==			
ANR	6182950	Identifier	n		6182759	0					
ANR	6182951	PrimaryExpression	0		6182759	1					
ANR	6182952	CompoundStatement		40:19:750:750	6182759	1					
ANR	6182953	ExpressionStatement	ctx -> eof = 1	145:6:4081:4093	6182759	0	True				
ANR	6182954	AssignmentExpression	ctx -> eof = 1		6182759	0		=			
ANR	6182955	PtrMemberAccess	ctx -> eof		6182759	0					
ANR	6182956	Identifier	ctx		6182759	0					
ANR	6182957	Identifier	eof		6182759	1					
ANR	6182958	PrimaryExpression	1		6182759	1					
ANR	6182959	ExpressionStatement	ctx -> size = ctx -> zstr . total_in	146:6:4101:4131	6182759	1	True				
ANR	6182960	AssignmentExpression	ctx -> size = ctx -> zstr . total_in		6182759	0		=			
ANR	6182961	PtrMemberAccess	ctx -> size		6182759	0					
ANR	6182962	Identifier	ctx		6182759	0					
ANR	6182963	Identifier	size		6182759	1					
ANR	6182964	MemberAccess	ctx -> zstr . total_in		6182759	1					
ANR	6182965	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182966	Identifier	ctx		6182759	0					
ANR	6182967	Identifier	zstr		6182759	1					
ANR	6182968	Identifier	total_in		6182759	1					
ANR	6182969	ElseStatement	else		6182759	0					
ANR	6182970	CompoundStatement		45:7:865:865	6182759	0					
ANR	6182971	ExpressionStatement	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer	150:6:4196:4236	6182759	0	True				
ANR	6182972	AssignmentExpression	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer		6182759	0		=			
ANR	6182973	MemberAccess	ctx -> zstr . next_in		6182759	0					
ANR	6182974	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182975	Identifier	ctx		6182759	0					
ANR	6182976	Identifier	zstr		6182759	1					
ANR	6182977	Identifier	next_in		6182759	1					
ANR	6182978	CastExpression	( Bytef * ) ctx -> buffer		6182759	1					
ANR	6182979	CastTarget	Bytef *		6182759	0					
ANR	6182980	PtrMemberAccess	ctx -> buffer		6182759	1					
ANR	6182981	Identifier	ctx		6182759	0					
ANR	6182982	Identifier	buffer		6182759	1					
ANR	6182983	ExpressionStatement	ctx -> zstr . avail_in = ( uInt ) n	151:6:4244:4272	6182759	1	True				
ANR	6182984	AssignmentExpression	ctx -> zstr . avail_in = ( uInt ) n		6182759	0		=			
ANR	6182985	MemberAccess	ctx -> zstr . avail_in		6182759	0					
ANR	6182986	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6182987	Identifier	ctx		6182759	0					
ANR	6182988	Identifier	zstr		6182759	1					
ANR	6182989	Identifier	avail_in		6182759	1					
ANR	6182990	CastExpression	( uInt ) n		6182759	1					
ANR	6182991	CastTarget	uInt		6182759	0					
ANR	6182992	Identifier	n		6182759	1					
ANR	6182993	ContinueStatement	continue ;	153:2:4280:4288	6182759	2	True				
ANR	6182994	Label	case Z_NEED_DICT :	156:1:4321:4337	6182759	6	True				
ANR	6182995	Identifier	Z_NEED_DICT		6182759	0					
ANR	6182996	Label	case Z_DATA_ERROR :	157:1:4340:4357	6182759	7	True				
ANR	6182997	Identifier	Z_DATA_ERROR		6182759	0					
ANR	6182998	Label	case Z_STREAM_ERROR :	158:1:4360:4379	6182759	8	True				
ANR	6182999	Identifier	Z_STREAM_ERROR		6182759	0					
ANR	6183000	Label	case Z_MEM_ERROR :	159:1:4382:4398	6182759	9	True				
ANR	6183001	Identifier	Z_MEM_ERROR		6182759	0					
ANR	6183002	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	160:5:4405:4428	6182759	10	True				
ANR	6183003	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6182759	0		=			
ANR	6183004	ArrayIndexing	ctx -> e [ 0 ]		6182759	0					
ANR	6183005	PtrMemberAccess	ctx -> e		6182759	0					
ANR	6183006	Identifier	ctx		6182759	0					
ANR	6183007	Identifier	e		6182759	1					
ANR	6183008	PrimaryExpression	0		6182759	1					
ANR	6183009	Identifier	ZIP_ER_ZLIB		6182759	1					
ANR	6183010	ExpressionStatement	ctx -> e [ 1 ] = ret	161:5:4435:4450	6182759	11	True				
ANR	6183011	AssignmentExpression	ctx -> e [ 1 ] = ret		6182759	0		=			
ANR	6183012	ArrayIndexing	ctx -> e [ 1 ]		6182759	0					
ANR	6183013	PtrMemberAccess	ctx -> e		6182759	0					
ANR	6183014	Identifier	ctx		6182759	0					
ANR	6183015	Identifier	e		6182759	1					
ANR	6183016	PrimaryExpression	1		6182759	1					
ANR	6183017	Identifier	ret		6182759	1					
ANR	6183018	ExpressionStatement	end = 1	163:5:4458:4465	6182759	12	True				
ANR	6183019	AssignmentExpression	end = 1		6182759	0		=			
ANR	6183020	Identifier	end		6182759	0					
ANR	6183021	PrimaryExpression	1		6182759	1					
ANR	6183022	BreakStatement	break ;	164:5:4472:4477	6182759	13	True				
ANR	6183023	IfStatement	if ( ctx -> zstr . avail_out < len )		6182759	8					
ANR	6183024	Condition	ctx -> zstr . avail_out < len	168:8:4497:4521	6182759	0	True				
ANR	6183025	RelationalExpression	ctx -> zstr . avail_out < len		6182759	0		<			
ANR	6183026	MemberAccess	ctx -> zstr . avail_out		6182759	0					
ANR	6183027	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6183028	Identifier	ctx		6182759	0					
ANR	6183029	Identifier	zstr		6182759	1					
ANR	6183030	Identifier	avail_out		6182759	1					
ANR	6183031	Identifier	len		6182759	1					
ANR	6183032	ReturnStatement	return ( zip_int64_t ) ( len - ctx -> zstr . avail_out ) ;	169:1:4525:4572	6182759	1	True				
ANR	6183033	CastExpression	( zip_int64_t ) ( len - ctx -> zstr . avail_out )		6182759	0					
ANR	6183034	CastTarget	zip_int64_t		6182759	0					
ANR	6183035	AdditiveExpression	len - ctx -> zstr . avail_out		6182759	1		-			
ANR	6183036	Identifier	len		6182759	0					
ANR	6183037	MemberAccess	ctx -> zstr . avail_out		6182759	1					
ANR	6183038	PtrMemberAccess	ctx -> zstr		6182759	0					
ANR	6183039	Identifier	ctx		6182759	0					
ANR	6183040	Identifier	zstr		6182759	1					
ANR	6183041	Identifier	avail_out		6182759	1					
ANR	6183042	ReturnStatement	return ( ctx -> e [ 0 ] == 0 ) ? 0 : - 1 ;	171:4:4579:4611	6182759	9	True				
ANR	6183043	ConditionalExpression	( ctx -> e [ 0 ] == 0 ) ? 0 : - 1		6182759	0					
ANR	6183044	Condition	ctx -> e [ 0 ] == 0		6182759	0					
ANR	6183045	EqualityExpression	ctx -> e [ 0 ] == 0		6182759	0		==			
ANR	6183046	ArrayIndexing	ctx -> e [ 0 ]		6182759	0					
ANR	6183047	PtrMemberAccess	ctx -> e		6182759	0					
ANR	6183048	Identifier	ctx		6182759	0					
ANR	6183049	Identifier	e		6182759	1					
ANR	6183050	PrimaryExpression	0		6182759	1					
ANR	6183051	PrimaryExpression	0		6182759	1					
ANR	6183052	PrimaryExpression	0		6182759	1					
ANR	6183053	UnaryOperationExpression	- 1		6182759	2					
ANR	6183054	UnaryOperator	-		6182759	0					
ANR	6183055	PrimaryExpression	1		6182759	1					
ANR	6183056	ReturnType	static zip_int64_t		6182759	1					
ANR	6183057	Identifier	compress_read		6182759	2					
ANR	6183058	ParameterList	"struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len"		6182759	3					
ANR	6183059	Parameter	struct zip_source * src	103:14:3240:3261	6182759	0	True				
ANR	6183060	ParameterType	struct zip_source *		6182759	0					
ANR	6183061	Identifier	src		6182759	1					
ANR	6183062	Parameter	struct deflate * ctx	103:38:3264:3282	6182759	1	True				
ANR	6183063	ParameterType	struct deflate *		6182759	0					
ANR	6183064	Identifier	ctx		6182759	1					
ANR	6183065	Parameter	void * data	104:7:3292:3301	6182759	2	True				
ANR	6183066	ParameterType	void *		6182759	0					
ANR	6183067	Identifier	data		6182759	1					
ANR	6183068	Parameter	zip_uint64_t len	104:19:3304:3319	6182759	3	True				
ANR	6183069	ParameterType	zip_uint64_t		6182759	0					
ANR	6183070	Identifier	len		6182759	1					
ANR	6183071	CFGEntryNode	ENTRY		6182759		True				
ANR	6183072	CFGExitNode	EXIT		6182759		True				
ANR	6183073	Symbol	data		6182759						
ANR	6183074	Symbol	ctx -> zstr . next_out		6182759						
ANR	6183075	Symbol	& ctx -> zstr		6182759						
ANR	6183076	Symbol	ctx -> e		6182759						
ANR	6183077	Symbol	len		6182759						
ANR	6183078	Symbol	ctx -> zstr . avail_out		6182759						
ANR	6183079	Symbol	end		6182759						
ANR	6183080	Symbol	* ctx -> e		6182759						
ANR	6183081	Symbol	ret		6182759						
ANR	6183082	Symbol	ctx -> zstr . next_in		6182759						
ANR	6183083	Symbol	src		6182759						
ANR	6183084	Symbol	ctx		6182759						
ANR	6183085	Symbol	ctx -> eof		6182759						
ANR	6183086	Symbol	zip_source_read		6182759						
ANR	6183087	Symbol	ctx -> buffer		6182759						
ANR	6183088	Symbol	ctx -> zstr . total_in		6182759						
ANR	6183089	Symbol	n		6182759						
ANR	6183090	Symbol	* ctx		6182759						
ANR	6183091	Symbol	Z_FINISH		6182759						
ANR	6183092	Symbol	ctx -> zstr . avail_in		6182759						
ANR	6183093	Symbol	deflate		6182759						
ANR	6183094	Symbol	ZIP_ER_ZLIB		6182759						
ANR	6183095	Symbol	ctx -> size		6182759						
ANR	6183096	Symbol	* * ctx		6182759						
ANR	6183097	Symbol	ctx -> zstr		6182759						
ANR	6183098	Function	decompress_read	176:0:4619:5888							
ANR	6183099	FunctionDef	"decompress_read (struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len)"		6183098	0					
ANR	6183100	CompoundStatement		179:0:4731:5888	6183098	0					
ANR	6183101	IdentifierDeclStatement	"int end , ret ;"	180:4:4737:4749	6183098	0	True				
ANR	6183102	IdentifierDecl	end		6183098	0					
ANR	6183103	IdentifierDeclType	int		6183098	0					
ANR	6183104	Identifier	end		6183098	1					
ANR	6183105	IdentifierDecl	ret		6183098	1					
ANR	6183106	IdentifierDeclType	int		6183098	0					
ANR	6183107	Identifier	ret		6183098	1					
ANR	6183108	IdentifierDeclStatement	zip_int64_t n ;	181:4:4755:4768	6183098	1	True				
ANR	6183109	IdentifierDecl	n		6183098	0					
ANR	6183110	IdentifierDeclType	zip_int64_t		6183098	0					
ANR	6183111	Identifier	n		6183098	1					
ANR	6183112	IfStatement	if ( ctx -> e [ 0 ] != 0 )		6183098	2					
ANR	6183113	Condition	ctx -> e [ 0 ] != 0	183:8:4779:4792	6183098	0	True				
ANR	6183114	EqualityExpression	ctx -> e [ 0 ] != 0		6183098	0		!=			
ANR	6183115	ArrayIndexing	ctx -> e [ 0 ]		6183098	0					
ANR	6183116	PtrMemberAccess	ctx -> e		6183098	0					
ANR	6183117	Identifier	ctx		6183098	0					
ANR	6183118	Identifier	e		6183098	1					
ANR	6183119	PrimaryExpression	0		6183098	1					
ANR	6183120	PrimaryExpression	0		6183098	1					
ANR	6183121	ReturnStatement	return - 1 ;	184:1:4796:4805	6183098	1	True				
ANR	6183122	UnaryOperationExpression	- 1		6183098	0					
ANR	6183123	UnaryOperator	-		6183098	0					
ANR	6183124	PrimaryExpression	1		6183098	1					
ANR	6183125	IfStatement	if ( len == 0 )		6183098	3					
ANR	6183126	Condition	len == 0	186:8:4820:4827	6183098	0	True				
ANR	6183127	EqualityExpression	len == 0		6183098	0		==			
ANR	6183128	Identifier	len		6183098	0					
ANR	6183129	PrimaryExpression	0		6183098	1					
ANR	6183130	ReturnStatement	return 0 ;	187:1:4831:4839	6183098	1	True				
ANR	6183131	PrimaryExpression	0		6183098	0					
ANR	6183132	ExpressionStatement	ctx -> zstr . next_out = ( Bytef * ) data	189:4:4847:4881	6183098	4	True				
ANR	6183133	AssignmentExpression	ctx -> zstr . next_out = ( Bytef * ) data		6183098	0		=			
ANR	6183134	MemberAccess	ctx -> zstr . next_out		6183098	0					
ANR	6183135	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183136	Identifier	ctx		6183098	0					
ANR	6183137	Identifier	zstr		6183098	1					
ANR	6183138	Identifier	next_out		6183098	1					
ANR	6183139	CastExpression	( Bytef * ) data		6183098	1					
ANR	6183140	CastTarget	Bytef *		6183098	0					
ANR	6183141	Identifier	data		6183098	1					
ANR	6183142	ExpressionStatement	ctx -> zstr . avail_out = ( uInt ) len	190:4:4887:4918	6183098	5	True				
ANR	6183143	AssignmentExpression	ctx -> zstr . avail_out = ( uInt ) len		6183098	0		=			
ANR	6183144	MemberAccess	ctx -> zstr . avail_out		6183098	0					
ANR	6183145	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183146	Identifier	ctx		6183098	0					
ANR	6183147	Identifier	zstr		6183098	1					
ANR	6183148	Identifier	avail_out		6183098	1					
ANR	6183149	CastExpression	( uInt ) len		6183098	1					
ANR	6183150	CastTarget	uInt		6183098	0					
ANR	6183151	Identifier	len		6183098	1					
ANR	6183152	ExpressionStatement	end = 0	192:4:4955:4962	6183098	6	True				
ANR	6183153	AssignmentExpression	end = 0		6183098	0		=			
ANR	6183154	Identifier	end		6183098	0					
ANR	6183155	PrimaryExpression	0		6183098	1					
ANR	6183156	WhileStatement	while ( ! end && ctx -> zstr . avail_out )		6183098	7					
ANR	6183157	Condition	! end && ctx -> zstr . avail_out	193:11:4975:5001	6183098	0	True				
ANR	6183158	AndExpression	! end && ctx -> zstr . avail_out		6183098	0		&&			
ANR	6183159	UnaryOperationExpression	! end		6183098	0					
ANR	6183160	UnaryOperator	!		6183098	0					
ANR	6183161	Identifier	end		6183098	1					
ANR	6183162	MemberAccess	ctx -> zstr . avail_out		6183098	1					
ANR	6183163	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183164	Identifier	ctx		6183098	0					
ANR	6183165	Identifier	zstr		6183098	1					
ANR	6183166	Identifier	avail_out		6183098	1					
ANR	6183167	CompoundStatement		15:40:272:272	6183098	1					
ANR	6183168	ExpressionStatement	"ret = inflate ( & ctx -> zstr , Z_SYNC_FLUSH )"	194:1:5007:5046	6183098	0	True				
ANR	6183169	AssignmentExpression	"ret = inflate ( & ctx -> zstr , Z_SYNC_FLUSH )"		6183098	0		=			
ANR	6183170	Identifier	ret		6183098	0					
ANR	6183171	CallExpression	"inflate ( & ctx -> zstr , Z_SYNC_FLUSH )"		6183098	1					
ANR	6183172	Callee	inflate		6183098	0					
ANR	6183173	Identifier	inflate		6183098	0					
ANR	6183174	ArgumentList	& ctx -> zstr		6183098	1					
ANR	6183175	Argument	& ctx -> zstr		6183098	0					
ANR	6183176	UnaryOperationExpression	& ctx -> zstr		6183098	0					
ANR	6183177	UnaryOperator	&		6183098	0					
ANR	6183178	PtrMemberAccess	ctx -> zstr		6183098	1					
ANR	6183179	Identifier	ctx		6183098	0					
ANR	6183180	Identifier	zstr		6183098	1					
ANR	6183181	Argument	Z_SYNC_FLUSH		6183098	1					
ANR	6183182	Identifier	Z_SYNC_FLUSH		6183098	0					
ANR	6183183	SwitchStatement	switch ( ret )		6183098	1					
ANR	6183184	Condition	ret	196:9:5058:5060	6183098	0	True				
ANR	6183185	Identifier	ret		6183098	0					
ANR	6183186	CompoundStatement		18:14:331:331	6183098	1					
ANR	6183187	Label	case Z_OK :	197:1:5066:5075	6183098	0	True				
ANR	6183188	Identifier	Z_OK		6183098	0					
ANR	6183189	BreakStatement	break ;	198:5:5082:5087	6183098	1	True				
ANR	6183190	Label	case Z_STREAM_END :	200:1:5096:5113	6183098	2	True				
ANR	6183191	Identifier	Z_STREAM_END		6183098	0					
ANR	6183192	ExpressionStatement	ctx -> eof = 1	201:5:5120:5132	6183098	3	True				
ANR	6183193	AssignmentExpression	ctx -> eof = 1		6183098	0		=			
ANR	6183194	PtrMemberAccess	ctx -> eof		6183098	0					
ANR	6183195	Identifier	ctx		6183098	0					
ANR	6183196	Identifier	eof		6183098	1					
ANR	6183197	PrimaryExpression	1		6183098	1					
ANR	6183198	ExpressionStatement	end = 1	202:5:5139:5146	6183098	4	True				
ANR	6183199	AssignmentExpression	end = 1		6183098	0		=			
ANR	6183200	Identifier	end		6183098	0					
ANR	6183201	PrimaryExpression	1		6183098	1					
ANR	6183202	BreakStatement	break ;	203:5:5153:5158	6183098	5	True				
ANR	6183203	Label	case Z_BUF_ERROR :	205:1:5162:5178	6183098	6	True				
ANR	6183204	Identifier	Z_BUF_ERROR		6183098	0					
ANR	6183205	IfStatement	if ( ctx -> zstr . avail_in == 0 )		6183098	7					
ANR	6183206	Condition	ctx -> zstr . avail_in == 0	206:9:5189:5211	6183098	0	True				
ANR	6183207	EqualityExpression	ctx -> zstr . avail_in == 0		6183098	0		==			
ANR	6183208	MemberAccess	ctx -> zstr . avail_in		6183098	0					
ANR	6183209	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183210	Identifier	ctx		6183098	0					
ANR	6183211	Identifier	zstr		6183098	1					
ANR	6183212	Identifier	avail_in		6183098	1					
ANR	6183213	PrimaryExpression	0		6183098	1					
ANR	6183214	CompoundStatement		28:34:482:482	6183098	1					
ANR	6183215	IfStatement	if ( ctx -> eof )		6183098	0					
ANR	6183216	Condition	ctx -> eof	207:6:5222:5229	6183098	0	True				
ANR	6183217	PtrMemberAccess	ctx -> eof		6183098	0					
ANR	6183218	Identifier	ctx		6183098	0					
ANR	6183219	Identifier	eof		6183098	1					
ANR	6183220	CompoundStatement		29:16:500:500	6183098	1					
ANR	6183221	ExpressionStatement	end = 1	208:6:5240:5247	6183098	0	True				
ANR	6183222	AssignmentExpression	end = 1		6183098	0		=			
ANR	6183223	Identifier	end		6183098	0					
ANR	6183224	PrimaryExpression	1		6183098	1					
ANR	6183225	BreakStatement	break ;	209:6:5255:5260	6183098	1	True				
ANR	6183226	IfStatement	"if ( ( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0 )"		6183098	1					
ANR	6183227	Condition	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"	212:6:5273:5334	6183098	0	True				
ANR	6183228	RelationalExpression	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"		6183098	0		<			
ANR	6183229	AssignmentExpression	"n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6183098	0		=			
ANR	6183230	Identifier	n		6183098	0					
ANR	6183231	CallExpression	"zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6183098	1					
ANR	6183232	Callee	zip_source_read		6183098	0					
ANR	6183233	Identifier	zip_source_read		6183098	0					
ANR	6183234	ArgumentList	src		6183098	1					
ANR	6183235	Argument	src		6183098	0					
ANR	6183236	Identifier	src		6183098	0					
ANR	6183237	Argument	ctx -> buffer		6183098	1					
ANR	6183238	PtrMemberAccess	ctx -> buffer		6183098	0					
ANR	6183239	Identifier	ctx		6183098	0					
ANR	6183240	Identifier	buffer		6183098	1					
ANR	6183241	Argument	sizeof ( ctx -> buffer )		6183098	2					
ANR	6183242	SizeofExpression	sizeof ( ctx -> buffer )		6183098	0					
ANR	6183243	Sizeof	sizeof		6183098	0					
ANR	6183244	PtrMemberAccess	ctx -> buffer		6183098	1					
ANR	6183245	Identifier	ctx		6183098	0					
ANR	6183246	Identifier	buffer		6183098	1					
ANR	6183247	PrimaryExpression	0		6183098	1					
ANR	6183248	CompoundStatement		34:70:605:605	6183098	1					
ANR	6183249	ExpressionStatement	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"	213:6:5345:5384	6183098	0	True				
ANR	6183250	CallExpression	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"		6183098	0					
ANR	6183251	Callee	zip_source_error		6183098	0					
ANR	6183252	Identifier	zip_source_error		6183098	0					
ANR	6183253	ArgumentList	src		6183098	1					
ANR	6183254	Argument	src		6183098	0					
ANR	6183255	Identifier	src		6183098	0					
ANR	6183256	Argument	ctx -> e		6183098	1					
ANR	6183257	PtrMemberAccess	ctx -> e		6183098	0					
ANR	6183258	Identifier	ctx		6183098	0					
ANR	6183259	Identifier	e		6183098	1					
ANR	6183260	Argument	ctx -> e + 1		6183098	2					
ANR	6183261	AdditiveExpression	ctx -> e + 1		6183098	0		+			
ANR	6183262	PtrMemberAccess	ctx -> e		6183098	0					
ANR	6183263	Identifier	ctx		6183098	0					
ANR	6183264	Identifier	e		6183098	1					
ANR	6183265	PrimaryExpression	1		6183098	1					
ANR	6183266	ExpressionStatement	end = 1	214:6:5392:5399	6183098	1	True				
ANR	6183267	AssignmentExpression	end = 1		6183098	0		=			
ANR	6183268	Identifier	end		6183098	0					
ANR	6183269	PrimaryExpression	1		6183098	1					
ANR	6183270	BreakStatement	break ;	215:6:5407:5412	6183098	2	True				
ANR	6183271	ElseStatement	else		6183098	0					
ANR	6183272	IfStatement	if ( n == 0 )		6183098	0					
ANR	6183273	Condition	n == 0	217:11:5429:5434	6183098	0	True				
ANR	6183274	EqualityExpression	n == 0		6183098	0		==			
ANR	6183275	Identifier	n		6183098	0					
ANR	6183276	PrimaryExpression	0		6183098	1					
ANR	6183277	ExpressionStatement	ctx -> eof = 1	218:6:5443:5455	6183098	1	True				
ANR	6183278	AssignmentExpression	ctx -> eof = 1		6183098	0		=			
ANR	6183279	PtrMemberAccess	ctx -> eof		6183098	0					
ANR	6183280	Identifier	ctx		6183098	0					
ANR	6183281	Identifier	eof		6183098	1					
ANR	6183282	PrimaryExpression	1		6183098	1					
ANR	6183283	ElseStatement	else		6183098	0					
ANR	6183284	CompoundStatement		41:7:732:732	6183098	0					
ANR	6183285	ExpressionStatement	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer	220:6:5472:5512	6183098	0	True				
ANR	6183286	AssignmentExpression	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer		6183098	0		=			
ANR	6183287	MemberAccess	ctx -> zstr . next_in		6183098	0					
ANR	6183288	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183289	Identifier	ctx		6183098	0					
ANR	6183290	Identifier	zstr		6183098	1					
ANR	6183291	Identifier	next_in		6183098	1					
ANR	6183292	CastExpression	( Bytef * ) ctx -> buffer		6183098	1					
ANR	6183293	CastTarget	Bytef *		6183098	0					
ANR	6183294	PtrMemberAccess	ctx -> buffer		6183098	1					
ANR	6183295	Identifier	ctx		6183098	0					
ANR	6183296	Identifier	buffer		6183098	1					
ANR	6183297	ExpressionStatement	ctx -> zstr . avail_in = ( uInt ) n	221:6:5520:5548	6183098	1	True				
ANR	6183298	AssignmentExpression	ctx -> zstr . avail_in = ( uInt ) n		6183098	0		=			
ANR	6183299	MemberAccess	ctx -> zstr . avail_in		6183098	0					
ANR	6183300	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183301	Identifier	ctx		6183098	0					
ANR	6183302	Identifier	zstr		6183098	1					
ANR	6183303	Identifier	avail_in		6183098	1					
ANR	6183304	CastExpression	( uInt ) n		6183098	1					
ANR	6183305	CastTarget	uInt		6183098	0					
ANR	6183306	Identifier	n		6183098	1					
ANR	6183307	ContinueStatement	continue ;	223:2:5556:5564	6183098	2	True				
ANR	6183308	Label	case Z_NEED_DICT :	226:1:5597:5613	6183098	8	True				
ANR	6183309	Identifier	Z_NEED_DICT		6183098	0					
ANR	6183310	Label	case Z_DATA_ERROR :	227:1:5616:5633	6183098	9	True				
ANR	6183311	Identifier	Z_DATA_ERROR		6183098	0					
ANR	6183312	Label	case Z_STREAM_ERROR :	228:1:5636:5655	6183098	10	True				
ANR	6183313	Identifier	Z_STREAM_ERROR		6183098	0					
ANR	6183314	Label	case Z_MEM_ERROR :	229:1:5658:5674	6183098	11	True				
ANR	6183315	Identifier	Z_MEM_ERROR		6183098	0					
ANR	6183316	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	230:5:5681:5704	6183098	12	True				
ANR	6183317	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6183098	0		=			
ANR	6183318	ArrayIndexing	ctx -> e [ 0 ]		6183098	0					
ANR	6183319	PtrMemberAccess	ctx -> e		6183098	0					
ANR	6183320	Identifier	ctx		6183098	0					
ANR	6183321	Identifier	e		6183098	1					
ANR	6183322	PrimaryExpression	0		6183098	1					
ANR	6183323	Identifier	ZIP_ER_ZLIB		6183098	1					
ANR	6183324	ExpressionStatement	ctx -> e [ 1 ] = ret	231:5:5711:5726	6183098	13	True				
ANR	6183325	AssignmentExpression	ctx -> e [ 1 ] = ret		6183098	0		=			
ANR	6183326	ArrayIndexing	ctx -> e [ 1 ]		6183098	0					
ANR	6183327	PtrMemberAccess	ctx -> e		6183098	0					
ANR	6183328	Identifier	ctx		6183098	0					
ANR	6183329	Identifier	e		6183098	1					
ANR	6183330	PrimaryExpression	1		6183098	1					
ANR	6183331	Identifier	ret		6183098	1					
ANR	6183332	ExpressionStatement	end = 1	232:5:5733:5740	6183098	14	True				
ANR	6183333	AssignmentExpression	end = 1		6183098	0		=			
ANR	6183334	Identifier	end		6183098	0					
ANR	6183335	PrimaryExpression	1		6183098	1					
ANR	6183336	BreakStatement	break ;	233:5:5747:5752	6183098	15	True				
ANR	6183337	IfStatement	if ( ctx -> zstr . avail_out < len )		6183098	8					
ANR	6183338	Condition	ctx -> zstr . avail_out < len	237:8:5772:5796	6183098	0	True				
ANR	6183339	RelationalExpression	ctx -> zstr . avail_out < len		6183098	0		<			
ANR	6183340	MemberAccess	ctx -> zstr . avail_out		6183098	0					
ANR	6183341	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183342	Identifier	ctx		6183098	0					
ANR	6183343	Identifier	zstr		6183098	1					
ANR	6183344	Identifier	avail_out		6183098	1					
ANR	6183345	Identifier	len		6183098	1					
ANR	6183346	ReturnStatement	return ( zip_int64_t ) ( len - ctx -> zstr . avail_out ) ;	238:1:5800:5847	6183098	1	True				
ANR	6183347	CastExpression	( zip_int64_t ) ( len - ctx -> zstr . avail_out )		6183098	0					
ANR	6183348	CastTarget	zip_int64_t		6183098	0					
ANR	6183349	AdditiveExpression	len - ctx -> zstr . avail_out		6183098	1		-			
ANR	6183350	Identifier	len		6183098	0					
ANR	6183351	MemberAccess	ctx -> zstr . avail_out		6183098	1					
ANR	6183352	PtrMemberAccess	ctx -> zstr		6183098	0					
ANR	6183353	Identifier	ctx		6183098	0					
ANR	6183354	Identifier	zstr		6183098	1					
ANR	6183355	Identifier	avail_out		6183098	1					
ANR	6183356	ReturnStatement	return ( ctx -> e [ 0 ] == 0 ) ? 0 : - 1 ;	240:4:5854:5886	6183098	9	True				
ANR	6183357	ConditionalExpression	( ctx -> e [ 0 ] == 0 ) ? 0 : - 1		6183098	0					
ANR	6183358	Condition	ctx -> e [ 0 ] == 0		6183098	0					
ANR	6183359	EqualityExpression	ctx -> e [ 0 ] == 0		6183098	0		==			
ANR	6183360	ArrayIndexing	ctx -> e [ 0 ]		6183098	0					
ANR	6183361	PtrMemberAccess	ctx -> e		6183098	0					
ANR	6183362	Identifier	ctx		6183098	0					
ANR	6183363	Identifier	e		6183098	1					
ANR	6183364	PrimaryExpression	0		6183098	1					
ANR	6183365	PrimaryExpression	0		6183098	1					
ANR	6183366	PrimaryExpression	0		6183098	1					
ANR	6183367	UnaryOperationExpression	- 1		6183098	2					
ANR	6183368	UnaryOperator	-		6183098	0					
ANR	6183369	PrimaryExpression	1		6183098	1					
ANR	6183370	ReturnType	static zip_int64_t		6183098	1					
ANR	6183371	Identifier	decompress_read		6183098	2					
ANR	6183372	ParameterList	"struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len"		6183098	3					
ANR	6183373	Parameter	struct zip_source * src	177:16:4654:4675	6183098	0	True				
ANR	6183374	ParameterType	struct zip_source *		6183098	0					
ANR	6183375	Identifier	src		6183098	1					
ANR	6183376	Parameter	struct deflate * ctx	177:40:4678:4696	6183098	1	True				
ANR	6183377	ParameterType	struct deflate *		6183098	0					
ANR	6183378	Identifier	ctx		6183098	1					
ANR	6183379	Parameter	void * data	178:2:4701:4710	6183098	2	True				
ANR	6183380	ParameterType	void *		6183098	0					
ANR	6183381	Identifier	data		6183098	1					
ANR	6183382	Parameter	zip_uint64_t len	178:14:4713:4728	6183098	3	True				
ANR	6183383	ParameterType	zip_uint64_t		6183098	0					
ANR	6183384	Identifier	len		6183098	1					
ANR	6183385	CFGEntryNode	ENTRY		6183098		True				
ANR	6183386	CFGExitNode	EXIT		6183098		True				
ANR	6183387	Symbol	ret		6183098						
ANR	6183388	Symbol	Z_SYNC_FLUSH		6183098						
ANR	6183389	Symbol	ctx -> zstr . next_in		6183098						
ANR	6183390	Symbol	data		6183098						
ANR	6183391	Symbol	src		6183098						
ANR	6183392	Symbol	ctx -> zstr . next_out		6183098						
ANR	6183393	Symbol	ctx		6183098						
ANR	6183394	Symbol	ctx -> eof		6183098						
ANR	6183395	Symbol	zip_source_read		6183098						
ANR	6183396	Symbol	& ctx -> zstr		6183098						
ANR	6183397	Symbol	ctx -> buffer		6183098						
ANR	6183398	Symbol	ctx -> e		6183098						
ANR	6183399	Symbol	n		6183098						
ANR	6183400	Symbol	* ctx		6183098						
ANR	6183401	Symbol	ctx -> zstr . avail_in		6183098						
ANR	6183402	Symbol	len		6183098						
ANR	6183403	Symbol	inflate		6183098						
ANR	6183404	Symbol	ZIP_ER_ZLIB		6183098						
ANR	6183405	Symbol	ctx -> zstr . avail_out		6183098						
ANR	6183406	Symbol	end		6183098						
ANR	6183407	Symbol	* ctx -> e		6183098						
ANR	6183408	Symbol	* * ctx		6183098						
ANR	6183409	Symbol	ctx -> zstr		6183098						
ANR	6183410	Function	deflate_compress	245:0:5894:7299							
ANR	6183411	FunctionDef	"deflate_compress (struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd)"		6183410	0					
ANR	6183412	CompoundStatement		248:0:6022:7299	6183410	0					
ANR	6183413	IdentifierDeclStatement	struct deflate * ctx ;	249:4:6028:6047	6183410	0	True				
ANR	6183414	IdentifierDecl	* ctx		6183410	0					
ANR	6183415	IdentifierDeclType	struct deflate *		6183410	0					
ANR	6183416	Identifier	ctx		6183410	1					
ANR	6183417	IdentifierDeclStatement	int ret ;	250:4:6053:6060	6183410	1	True				
ANR	6183418	IdentifierDecl	ret		6183410	0					
ANR	6183419	IdentifierDeclType	int		6183410	0					
ANR	6183420	Identifier	ret		6183410	1					
ANR	6183421	ExpressionStatement	ctx = ( struct deflate * ) ud	252:4:6067:6093	6183410	2	True				
ANR	6183422	AssignmentExpression	ctx = ( struct deflate * ) ud		6183410	0		=			
ANR	6183423	Identifier	ctx		6183410	0					
ANR	6183424	CastExpression	( struct deflate * ) ud		6183410	1					
ANR	6183425	CastTarget	struct deflate *		6183410	0					
ANR	6183426	Identifier	ud		6183410	1					
ANR	6183427	SwitchStatement	switch ( cmd )		6183410	3					
ANR	6183428	Condition	cmd	254:12:6108:6110	6183410	0	True				
ANR	6183429	Identifier	cmd		6183410	0					
ANR	6183430	CompoundStatement		7:17:90:90	6183410	1					
ANR	6183431	Label	case ZIP_SOURCE_OPEN :	255:4:6119:6139	6183410	0	True				
ANR	6183432	Identifier	ZIP_SOURCE_OPEN		6183410	0					
ANR	6183433	ExpressionStatement	ctx -> zstr . zalloc = Z_NULL	256:1:6142:6167	6183410	1	True				
ANR	6183434	AssignmentExpression	ctx -> zstr . zalloc = Z_NULL		6183410	0		=			
ANR	6183435	MemberAccess	ctx -> zstr . zalloc		6183410	0					
ANR	6183436	PtrMemberAccess	ctx -> zstr		6183410	0					
ANR	6183437	Identifier	ctx		6183410	0					
ANR	6183438	Identifier	zstr		6183410	1					
ANR	6183439	Identifier	zalloc		6183410	1					
ANR	6183440	Identifier	Z_NULL		6183410	1					
ANR	6183441	ExpressionStatement	ctx -> zstr . zfree = Z_NULL	257:1:6170:6194	6183410	2	True				
ANR	6183442	AssignmentExpression	ctx -> zstr . zfree = Z_NULL		6183410	0		=			
ANR	6183443	MemberAccess	ctx -> zstr . zfree		6183410	0					
ANR	6183444	PtrMemberAccess	ctx -> zstr		6183410	0					
ANR	6183445	Identifier	ctx		6183410	0					
ANR	6183446	Identifier	zstr		6183410	1					
ANR	6183447	Identifier	zfree		6183410	1					
ANR	6183448	Identifier	Z_NULL		6183410	1					
ANR	6183449	ExpressionStatement	ctx -> zstr . opaque = NULL	258:1:6197:6220	6183410	3	True				
ANR	6183450	AssignmentExpression	ctx -> zstr . opaque = NULL		6183410	0		=			
ANR	6183451	MemberAccess	ctx -> zstr . opaque		6183410	0					
ANR	6183452	PtrMemberAccess	ctx -> zstr		6183410	0					
ANR	6183453	Identifier	ctx		6183410	0					
ANR	6183454	Identifier	zstr		6183410	1					
ANR	6183455	Identifier	opaque		6183410	1					
ANR	6183456	Identifier	NULL		6183410	1					
ANR	6183457	ExpressionStatement	ctx -> zstr . avail_in = 0	259:1:6223:6245	6183410	4	True				
ANR	6183458	AssignmentExpression	ctx -> zstr . avail_in = 0		6183410	0		=			
ANR	6183459	MemberAccess	ctx -> zstr . avail_in		6183410	0					
ANR	6183460	PtrMemberAccess	ctx -> zstr		6183410	0					
ANR	6183461	Identifier	ctx		6183410	0					
ANR	6183462	Identifier	zstr		6183410	1					
ANR	6183463	Identifier	avail_in		6183410	1					
ANR	6183464	PrimaryExpression	0		6183410	1					
ANR	6183465	ExpressionStatement	ctx -> zstr . next_in = NULL	260:1:6248:6272	6183410	5	True				
ANR	6183466	AssignmentExpression	ctx -> zstr . next_in = NULL		6183410	0		=			
ANR	6183467	MemberAccess	ctx -> zstr . next_in		6183410	0					
ANR	6183468	PtrMemberAccess	ctx -> zstr		6183410	0					
ANR	6183469	Identifier	ctx		6183410	0					
ANR	6183470	Identifier	zstr		6183410	1					
ANR	6183471	Identifier	next_in		6183410	1					
ANR	6183472	Identifier	NULL		6183410	1					
ANR	6183473	ExpressionStatement	ctx -> zstr . avail_out = 0	261:1:6275:6298	6183410	6	True				
ANR	6183474	AssignmentExpression	ctx -> zstr . avail_out = 0		6183410	0		=			
ANR	6183475	MemberAccess	ctx -> zstr . avail_out		6183410	0					
ANR	6183476	PtrMemberAccess	ctx -> zstr		6183410	0					
ANR	6183477	Identifier	ctx		6183410	0					
ANR	6183478	Identifier	zstr		6183410	1					
ANR	6183479	Identifier	avail_out		6183410	1					
ANR	6183480	PrimaryExpression	0		6183410	1					
ANR	6183481	ExpressionStatement	ctx -> zstr . next_out = NULL	262:1:6301:6326	6183410	7	True				
ANR	6183482	AssignmentExpression	ctx -> zstr . next_out = NULL		6183410	0		=			
ANR	6183483	MemberAccess	ctx -> zstr . next_out		6183410	0					
ANR	6183484	PtrMemberAccess	ctx -> zstr		6183410	0					
ANR	6183485	Identifier	ctx		6183410	0					
ANR	6183486	Identifier	zstr		6183410	1					
ANR	6183487	Identifier	next_out		6183410	1					
ANR	6183488	Identifier	NULL		6183410	1					
ANR	6183489	IfStatement	"if ( ( ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY ) ) != Z_OK )"		6183410	8					
ANR	6183490	Condition	"( ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY ) ) != Z_OK"	265:5:6391:6526	6183410	0	True				
ANR	6183491	EqualityExpression	"( ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY ) ) != Z_OK"		6183410	0		!=			
ANR	6183492	AssignmentExpression	"ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY )"		6183410	0		=			
ANR	6183493	Identifier	ret		6183410	0					
ANR	6183494	CallExpression	"deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY )"		6183410	1					
ANR	6183495	Callee	deflateInit2		6183410	0					
ANR	6183496	Identifier	deflateInit2		6183410	0					
ANR	6183497	ArgumentList	& ctx -> zstr		6183410	1					
ANR	6183498	Argument	& ctx -> zstr		6183410	0					
ANR	6183499	UnaryOperationExpression	& ctx -> zstr		6183410	0					
ANR	6183500	UnaryOperator	&		6183410	0					
ANR	6183501	PtrMemberAccess	ctx -> zstr		6183410	1					
ANR	6183502	Identifier	ctx		6183410	0					
ANR	6183503	Identifier	zstr		6183410	1					
ANR	6183504	Argument	Z_BEST_COMPRESSION		6183410	1					
ANR	6183505	Identifier	Z_BEST_COMPRESSION		6183410	0					
ANR	6183506	Argument	Z_DEFLATED		6183410	2					
ANR	6183507	Identifier	Z_DEFLATED		6183410	0					
ANR	6183508	Argument	- MAX_WBITS		6183410	3					
ANR	6183509	UnaryOperationExpression	- MAX_WBITS		6183410	0					
ANR	6183510	UnaryOperator	-		6183410	0					
ANR	6183511	Identifier	MAX_WBITS		6183410	1					
ANR	6183512	Argument	ctx -> mem_level		6183410	4					
ANR	6183513	PtrMemberAccess	ctx -> mem_level		6183410	0					
ANR	6183514	Identifier	ctx		6183410	0					
ANR	6183515	Identifier	mem_level		6183410	1					
ANR	6183516	Argument	Z_DEFAULT_STRATEGY		6183410	5					
ANR	6183517	Identifier	Z_DEFAULT_STRATEGY		6183410	0					
ANR	6183518	Identifier	Z_OK		6183410	1					
ANR	6183519	CompoundStatement		20:39:506:506	6183410	1					
ANR	6183520	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	268:5:6536:6559	6183410	0	True				
ANR	6183521	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6183410	0		=			
ANR	6183522	ArrayIndexing	ctx -> e [ 0 ]		6183410	0					
ANR	6183523	PtrMemberAccess	ctx -> e		6183410	0					
ANR	6183524	Identifier	ctx		6183410	0					
ANR	6183525	Identifier	e		6183410	1					
ANR	6183526	PrimaryExpression	0		6183410	1					
ANR	6183527	Identifier	ZIP_ER_ZLIB		6183410	1					
ANR	6183528	ExpressionStatement	ctx -> e [ 1 ] = ret	269:5:6566:6581	6183410	1	True				
ANR	6183529	AssignmentExpression	ctx -> e [ 1 ] = ret		6183410	0		=			
ANR	6183530	ArrayIndexing	ctx -> e [ 1 ]		6183410	0					
ANR	6183531	PtrMemberAccess	ctx -> e		6183410	0					
ANR	6183532	Identifier	ctx		6183410	0					
ANR	6183533	Identifier	e		6183410	1					
ANR	6183534	PrimaryExpression	1		6183410	1					
ANR	6183535	Identifier	ret		6183410	1					
ANR	6183536	ReturnStatement	return - 1 ;	270:5:6588:6597	6183410	2	True				
ANR	6183537	UnaryOperationExpression	- 1		6183410	0					
ANR	6183538	UnaryOperator	-		6183410	0					
ANR	6183539	PrimaryExpression	1		6183410	1					
ANR	6183540	ReturnStatement	return 0 ;	273:1:6604:6612	6183410	9	True				
ANR	6183541	PrimaryExpression	0		6183410	0					
ANR	6183542	Label	case ZIP_SOURCE_READ :	275:4:6619:6639	6183410	10	True				
ANR	6183543	Identifier	ZIP_SOURCE_READ		6183410	0					
ANR	6183544	ReturnStatement	"return compress_read ( src , ctx , data , len ) ;"	276:1:6642:6683	6183410	11	True				
ANR	6183545	CallExpression	"compress_read ( src , ctx , data , len )"		6183410	0					
ANR	6183546	Callee	compress_read		6183410	0					
ANR	6183547	Identifier	compress_read		6183410	0					
ANR	6183548	ArgumentList	src		6183410	1					
ANR	6183549	Argument	src		6183410	0					
ANR	6183550	Identifier	src		6183410	0					
ANR	6183551	Argument	ctx		6183410	1					
ANR	6183552	Identifier	ctx		6183410	0					
ANR	6183553	Argument	data		6183410	2					
ANR	6183554	Identifier	data		6183410	0					
ANR	6183555	Argument	len		6183410	3					
ANR	6183556	Identifier	len		6183410	0					
ANR	6183557	Label	case ZIP_SOURCE_CLOSE :	278:4:6690:6711	6183410	12	True				
ANR	6183558	Identifier	ZIP_SOURCE_CLOSE		6183410	0					
ANR	6183559	ExpressionStatement	deflateEnd ( & ctx -> zstr )	279:1:6714:6736	6183410	13	True				
ANR	6183560	CallExpression	deflateEnd ( & ctx -> zstr )		6183410	0					
ANR	6183561	Callee	deflateEnd		6183410	0					
ANR	6183562	Identifier	deflateEnd		6183410	0					
ANR	6183563	ArgumentList	& ctx -> zstr		6183410	1					
ANR	6183564	Argument	& ctx -> zstr		6183410	0					
ANR	6183565	UnaryOperationExpression	& ctx -> zstr		6183410	0					
ANR	6183566	UnaryOperator	&		6183410	0					
ANR	6183567	PtrMemberAccess	ctx -> zstr		6183410	1					
ANR	6183568	Identifier	ctx		6183410	0					
ANR	6183569	Identifier	zstr		6183410	1					
ANR	6183570	ReturnStatement	return 0 ;	280:1:6739:6747	6183410	14	True				
ANR	6183571	PrimaryExpression	0		6183410	0					
ANR	6183572	Label	case ZIP_SOURCE_STAT :	282:4:6754:6774	6183410	15	True				
ANR	6183573	Identifier	ZIP_SOURCE_STAT		6183410	0					
ANR	6183574	CompoundStatement		37:5:765:784	6183410	16					
ANR	6183575	IdentifierDeclStatement	struct zip_stat * st ;	284:5:6788:6807	6183410	0	True				
ANR	6183576	IdentifierDecl	* st		6183410	0					
ANR	6183577	IdentifierDeclType	struct zip_stat *		6183410	0					
ANR	6183578	Identifier	st		6183410	1					
ANR	6183579	ExpressionStatement	st = ( struct zip_stat * ) data	286:5:6815:6843	6183410	1	True				
ANR	6183580	AssignmentExpression	st = ( struct zip_stat * ) data		6183410	0		=			
ANR	6183581	Identifier	st		6183410	0					
ANR	6183582	CastExpression	( struct zip_stat * ) data		6183410	1					
ANR	6183583	CastTarget	struct zip_stat *		6183410	0					
ANR	6183584	Identifier	data		6183410	1					
ANR	6183585	ExpressionStatement	st -> comp_method = ZIP_CM_DEFLATE	288:5:6851:6883	6183410	2	True				
ANR	6183586	AssignmentExpression	st -> comp_method = ZIP_CM_DEFLATE		6183410	0		=			
ANR	6183587	PtrMemberAccess	st -> comp_method		6183410	0					
ANR	6183588	Identifier	st		6183410	0					
ANR	6183589	Identifier	comp_method		6183410	1					
ANR	6183590	Identifier	ZIP_CM_DEFLATE		6183410	1					
ANR	6183591	ExpressionStatement	st -> valid |= ZIP_STAT_COMP_METHOD	289:5:6890:6923	6183410	3	True				
ANR	6183592	AssignmentExpression	st -> valid |= ZIP_STAT_COMP_METHOD		6183410	0		|=			
ANR	6183593	PtrMemberAccess	st -> valid		6183410	0					
ANR	6183594	Identifier	st		6183410	0					
ANR	6183595	Identifier	valid		6183410	1					
ANR	6183596	Identifier	ZIP_STAT_COMP_METHOD		6183410	1					
ANR	6183597	IfStatement	if ( ctx -> eof )		6183410	4					
ANR	6183598	Condition	ctx -> eof	290:9:6934:6941	6183410	0	True				
ANR	6183599	PtrMemberAccess	ctx -> eof		6183410	0					
ANR	6183600	Identifier	ctx		6183410	0					
ANR	6183601	Identifier	eof		6183410	1					
ANR	6183602	CompoundStatement		43:19:921:921	6183410	1					
ANR	6183603	ExpressionStatement	st -> comp_size = ctx -> size	291:2:6948:6973	6183410	0	True				
ANR	6183604	AssignmentExpression	st -> comp_size = ctx -> size		6183410	0		=			
ANR	6183605	PtrMemberAccess	st -> comp_size		6183410	0					
ANR	6183606	Identifier	st		6183410	0					
ANR	6183607	Identifier	comp_size		6183410	1					
ANR	6183608	PtrMemberAccess	ctx -> size		6183410	1					
ANR	6183609	Identifier	ctx		6183410	0					
ANR	6183610	Identifier	size		6183410	1					
ANR	6183611	ExpressionStatement	st -> valid |= ZIP_STAT_COMP_SIZE	292:2:6977:7008	6183410	1	True				
ANR	6183612	AssignmentExpression	st -> valid |= ZIP_STAT_COMP_SIZE		6183410	0		|=			
ANR	6183613	PtrMemberAccess	st -> valid		6183410	0					
ANR	6183614	Identifier	st		6183410	0					
ANR	6183615	Identifier	valid		6183410	1					
ANR	6183616	Identifier	ZIP_STAT_COMP_SIZE		6183410	1					
ANR	6183617	ElseStatement	else		6183410	0					
ANR	6183618	ExpressionStatement	st -> valid &= ~ZIP_STAT_COMP_SIZE	295:2:7029:7061	6183410	0	True				
ANR	6183619	AssignmentExpression	st -> valid &= ~ZIP_STAT_COMP_SIZE		6183410	0		&=			
ANR	6183620	PtrMemberAccess	st -> valid		6183410	0					
ANR	6183621	Identifier	st		6183410	0					
ANR	6183622	Identifier	valid		6183410	1					
ANR	6183623	Identifier	~ZIP_STAT_COMP_SIZE		6183410	1					
ANR	6183624	ReturnStatement	return 0 ;	297:1:7067:7075	6183410	17	True				
ANR	6183625	PrimaryExpression	0		6183410	0					
ANR	6183626	Label	case ZIP_SOURCE_ERROR :	299:4:7082:7103	6183410	18	True				
ANR	6183627	Identifier	ZIP_SOURCE_ERROR		6183410	0					
ANR	6183628	ExpressionStatement	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"	300:1:7106:7141	6183410	19	True				
ANR	6183629	CallExpression	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"		6183410	0					
ANR	6183630	Callee	memcpy		6183410	0					
ANR	6183631	Identifier	memcpy		6183410	0					
ANR	6183632	ArgumentList	data		6183410	1					
ANR	6183633	Argument	data		6183410	0					
ANR	6183634	Identifier	data		6183410	0					
ANR	6183635	Argument	ctx -> e		6183410	1					
ANR	6183636	PtrMemberAccess	ctx -> e		6183410	0					
ANR	6183637	Identifier	ctx		6183410	0					
ANR	6183638	Identifier	e		6183410	1					
ANR	6183639	Argument	sizeof ( int ) * 2		6183410	2					
ANR	6183640	MultiplicativeExpression	sizeof ( int ) * 2		6183410	0		*			
ANR	6183641	SizeofExpression	sizeof ( int )		6183410	0					
ANR	6183642	Sizeof	sizeof		6183410	0					
ANR	6183643	SizeofOperand	int		6183410	1					
ANR	6183644	PrimaryExpression	2		6183410	1					
ANR	6183645	ReturnStatement	return sizeof ( int ) * 2 ;	301:1:7144:7164	6183410	20	True				
ANR	6183646	MultiplicativeExpression	sizeof ( int ) * 2		6183410	0		*			
ANR	6183647	SizeofExpression	sizeof ( int )		6183410	0					
ANR	6183648	Sizeof	sizeof		6183410	0					
ANR	6183649	SizeofOperand	int		6183410	1					
ANR	6183650	PrimaryExpression	2		6183410	1					
ANR	6183651	Label	case ZIP_SOURCE_FREE :	303:4:7171:7191	6183410	21	True				
ANR	6183652	Identifier	ZIP_SOURCE_FREE		6183410	0					
ANR	6183653	ExpressionStatement	deflate_free ( ctx )	304:1:7194:7211	6183410	22	True				
ANR	6183654	CallExpression	deflate_free ( ctx )		6183410	0					
ANR	6183655	Callee	deflate_free		6183410	0					
ANR	6183656	Identifier	deflate_free		6183410	0					
ANR	6183657	ArgumentList	ctx		6183410	1					
ANR	6183658	Argument	ctx		6183410	0					
ANR	6183659	Identifier	ctx		6183410	0					
ANR	6183660	ReturnStatement	return 0 ;	305:1:7214:7222	6183410	23	True				
ANR	6183661	PrimaryExpression	0		6183410	0					
ANR	6183662	Label	default :	307:4:7229:7236	6183410	24	True				
ANR	6183663	Identifier	default		6183410	0					
ANR	6183664	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_INVAL	308:1:7239:7263	6183410	25	True				
ANR	6183665	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_INVAL		6183410	0		=			
ANR	6183666	ArrayIndexing	ctx -> e [ 0 ]		6183410	0					
ANR	6183667	PtrMemberAccess	ctx -> e		6183410	0					
ANR	6183668	Identifier	ctx		6183410	0					
ANR	6183669	Identifier	e		6183410	1					
ANR	6183670	PrimaryExpression	0		6183410	1					
ANR	6183671	Identifier	ZIP_ER_INVAL		6183410	1					
ANR	6183672	ExpressionStatement	ctx -> e [ 1 ] = 0	309:1:7266:7279	6183410	26	True				
ANR	6183673	AssignmentExpression	ctx -> e [ 1 ] = 0		6183410	0		=			
ANR	6183674	ArrayIndexing	ctx -> e [ 1 ]		6183410	0					
ANR	6183675	PtrMemberAccess	ctx -> e		6183410	0					
ANR	6183676	Identifier	ctx		6183410	0					
ANR	6183677	Identifier	e		6183410	1					
ANR	6183678	PrimaryExpression	1		6183410	1					
ANR	6183679	PrimaryExpression	0		6183410	1					
ANR	6183680	ReturnStatement	return - 1 ;	310:1:7282:7291	6183410	27	True				
ANR	6183681	UnaryOperationExpression	- 1		6183410	0					
ANR	6183682	UnaryOperator	-		6183410	0					
ANR	6183683	PrimaryExpression	1		6183410	1					
ANR	6183684	ReturnType	static zip_int64_t		6183410	1					
ANR	6183685	Identifier	deflate_compress		6183410	2					
ANR	6183686	ParameterList	"struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd"		6183410	3					
ANR	6183687	Parameter	struct zip_source * src	246:17:5930:5951	6183410	0	True				
ANR	6183688	ParameterType	struct zip_source *		6183410	0					
ANR	6183689	Identifier	src		6183410	1					
ANR	6183690	Parameter	void * ud	246:41:5954:5961	6183410	1	True				
ANR	6183691	ParameterType	void *		6183410	0					
ANR	6183692	Identifier	ud		6183410	1					
ANR	6183693	Parameter	void * data	246:51:5964:5973	6183410	2	True				
ANR	6183694	ParameterType	void *		6183410	0					
ANR	6183695	Identifier	data		6183410	1					
ANR	6183696	Parameter	zip_uint64_t len	247:3:5979:5994	6183410	3	True				
ANR	6183697	ParameterType	zip_uint64_t		6183410	0					
ANR	6183698	Identifier	len		6183410	1					
ANR	6183699	Parameter	enum zip_source_cmd cmd	247:21:5997:6019	6183410	4	True				
ANR	6183700	ParameterType	enum zip_source_cmd		6183410	0					
ANR	6183701	Identifier	cmd		6183410	1					
ANR	6183702	CFGEntryNode	ENTRY		6183410		True				
ANR	6183703	CFGExitNode	EXIT		6183410		True				
ANR	6183704	Symbol	deflateInit2		6183410						
ANR	6183705	Symbol	data		6183410						
ANR	6183706	Symbol	* st		6183410						
ANR	6183707	Symbol	ZIP_STAT_COMP_METHOD		6183410						
ANR	6183708	Symbol	ctx -> zstr . next_out		6183410						
ANR	6183709	Symbol	& ctx -> zstr		6183410						
ANR	6183710	Symbol	MAX_WBITS		6183410						
ANR	6183711	Symbol	ctx -> e		6183410						
ANR	6183712	Symbol	Z_DEFLATED		6183410						
ANR	6183713	Symbol	Z_OK		6183410						
ANR	6183714	Symbol	ZIP_CM_DEFLATE		6183410						
ANR	6183715	Symbol	st -> comp_size		6183410						
ANR	6183716	Symbol	ctx -> zstr . zfree		6183410						
ANR	6183717	Symbol	compress_read		6183410						
ANR	6183718	Symbol	ud		6183410						
ANR	6183719	Symbol	ctx -> zstr . opaque		6183410						
ANR	6183720	Symbol	ZIP_ER_INVAL		6183410						
ANR	6183721	Symbol	len		6183410						
ANR	6183722	Symbol	ZIP_STAT_COMP_SIZE		6183410						
ANR	6183723	Symbol	ctx -> zstr . avail_out		6183410						
ANR	6183724	Symbol	* ctx -> e		6183410						
ANR	6183725	Symbol	st -> valid		6183410						
ANR	6183726	Symbol	ret		6183410						
ANR	6183727	Symbol	ctx -> zstr . zalloc		6183410						
ANR	6183728	Symbol	st		6183410						
ANR	6183729	Symbol	Z_DEFAULT_STRATEGY		6183410						
ANR	6183730	Symbol	Z_BEST_COMPRESSION		6183410						
ANR	6183731	Symbol	NULL		6183410						
ANR	6183732	Symbol	ctx -> zstr . next_in		6183410						
ANR	6183733	Symbol	src		6183410						
ANR	6183734	Symbol	ctx		6183410						
ANR	6183735	Symbol	st -> comp_method		6183410						
ANR	6183736	Symbol	ctx -> eof		6183410						
ANR	6183737	Symbol	~ZIP_STAT_COMP_SIZE		6183410						
ANR	6183738	Symbol	* ctx		6183410						
ANR	6183739	Symbol	ctx -> zstr . avail_in		6183410						
ANR	6183740	Symbol	ctx -> mem_level		6183410						
ANR	6183741	Symbol	ZIP_ER_ZLIB		6183410						
ANR	6183742	Symbol	ctx -> size		6183410						
ANR	6183743	Symbol	cmd		6183410						
ANR	6183744	Symbol	* * ctx		6183410						
ANR	6183745	Symbol	ctx -> zstr		6183410						
ANR	6183746	Symbol	Z_NULL		6183410						
ANR	6183747	Function	deflate_decompress	316:0:7305:8728							
ANR	6183748	FunctionDef	"deflate_decompress (struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd)"		6183747	0					
ANR	6183749	CompoundStatement		319:0:7437:8728	6183747	0					
ANR	6183750	IdentifierDeclStatement	struct deflate * ctx ;	320:4:7443:7462	6183747	0	True				
ANR	6183751	IdentifierDecl	* ctx		6183747	0					
ANR	6183752	IdentifierDeclType	struct deflate *		6183747	0					
ANR	6183753	Identifier	ctx		6183747	1					
ANR	6183754	IdentifierDeclStatement	zip_int64_t n ;	321:4:7468:7481	6183747	1	True				
ANR	6183755	IdentifierDecl	n		6183747	0					
ANR	6183756	IdentifierDeclType	zip_int64_t		6183747	0					
ANR	6183757	Identifier	n		6183747	1					
ANR	6183758	IdentifierDeclStatement	int ret ;	322:4:7487:7494	6183747	2	True				
ANR	6183759	IdentifierDecl	ret		6183747	0					
ANR	6183760	IdentifierDeclType	int		6183747	0					
ANR	6183761	Identifier	ret		6183747	1					
ANR	6183762	ExpressionStatement	ctx = ( struct deflate * ) ud	324:4:7501:7527	6183747	3	True				
ANR	6183763	AssignmentExpression	ctx = ( struct deflate * ) ud		6183747	0		=			
ANR	6183764	Identifier	ctx		6183747	0					
ANR	6183765	CastExpression	( struct deflate * ) ud		6183747	1					
ANR	6183766	CastTarget	struct deflate *		6183747	0					
ANR	6183767	Identifier	ud		6183747	1					
ANR	6183768	SwitchStatement	switch ( cmd )		6183747	4					
ANR	6183769	Condition	cmd	326:12:7542:7544	6183747	0	True				
ANR	6183770	Identifier	cmd		6183747	0					
ANR	6183771	CompoundStatement		8:17:109:109	6183747	1					
ANR	6183772	Label	case ZIP_SOURCE_OPEN :	327:4:7553:7573	6183747	0	True				
ANR	6183773	Identifier	ZIP_SOURCE_OPEN		6183747	0					
ANR	6183774	IfStatement	"if ( ( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0 )"		6183747	1					
ANR	6183775	Condition	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"	328:5:7580:7641	6183747	0	True				
ANR	6183776	RelationalExpression	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"		6183747	0		<			
ANR	6183777	AssignmentExpression	"n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6183747	0		=			
ANR	6183778	Identifier	n		6183747	0					
ANR	6183779	CallExpression	"zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6183747	1					
ANR	6183780	Callee	zip_source_read		6183747	0					
ANR	6183781	Identifier	zip_source_read		6183747	0					
ANR	6183782	ArgumentList	src		6183747	1					
ANR	6183783	Argument	src		6183747	0					
ANR	6183784	Identifier	src		6183747	0					
ANR	6183785	Argument	ctx -> buffer		6183747	1					
ANR	6183786	PtrMemberAccess	ctx -> buffer		6183747	0					
ANR	6183787	Identifier	ctx		6183747	0					
ANR	6183788	Identifier	buffer		6183747	1					
ANR	6183789	Argument	sizeof ( ctx -> buffer )		6183747	2					
ANR	6183790	SizeofExpression	sizeof ( ctx -> buffer )		6183747	0					
ANR	6183791	Sizeof	sizeof		6183747	0					
ANR	6183792	PtrMemberAccess	ctx -> buffer		6183747	1					
ANR	6183793	Identifier	ctx		6183747	0					
ANR	6183794	Identifier	buffer		6183747	1					
ANR	6183795	PrimaryExpression	0		6183747	1					
ANR	6183796	ReturnStatement	return ZIP_SOURCE_ERR_LOWER ;	329:5:7649:7676	6183747	1	True				
ANR	6183797	Identifier	ZIP_SOURCE_ERR_LOWER		6183747	0					
ANR	6183798	ExpressionStatement	ctx -> zstr . zalloc = Z_NULL	331:1:7680:7705	6183747	2	True				
ANR	6183799	AssignmentExpression	ctx -> zstr . zalloc = Z_NULL		6183747	0		=			
ANR	6183800	MemberAccess	ctx -> zstr . zalloc		6183747	0					
ANR	6183801	PtrMemberAccess	ctx -> zstr		6183747	0					
ANR	6183802	Identifier	ctx		6183747	0					
ANR	6183803	Identifier	zstr		6183747	1					
ANR	6183804	Identifier	zalloc		6183747	1					
ANR	6183805	Identifier	Z_NULL		6183747	1					
ANR	6183806	ExpressionStatement	ctx -> zstr . zfree = Z_NULL	332:1:7708:7732	6183747	3	True				
ANR	6183807	AssignmentExpression	ctx -> zstr . zfree = Z_NULL		6183747	0		=			
ANR	6183808	MemberAccess	ctx -> zstr . zfree		6183747	0					
ANR	6183809	PtrMemberAccess	ctx -> zstr		6183747	0					
ANR	6183810	Identifier	ctx		6183747	0					
ANR	6183811	Identifier	zstr		6183747	1					
ANR	6183812	Identifier	zfree		6183747	1					
ANR	6183813	Identifier	Z_NULL		6183747	1					
ANR	6183814	ExpressionStatement	ctx -> zstr . opaque = NULL	333:1:7735:7758	6183747	4	True				
ANR	6183815	AssignmentExpression	ctx -> zstr . opaque = NULL		6183747	0		=			
ANR	6183816	MemberAccess	ctx -> zstr . opaque		6183747	0					
ANR	6183817	PtrMemberAccess	ctx -> zstr		6183747	0					
ANR	6183818	Identifier	ctx		6183747	0					
ANR	6183819	Identifier	zstr		6183747	1					
ANR	6183820	Identifier	opaque		6183747	1					
ANR	6183821	Identifier	NULL		6183747	1					
ANR	6183822	ExpressionStatement	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer	334:1:7761:7801	6183747	5	True				
ANR	6183823	AssignmentExpression	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer		6183747	0		=			
ANR	6183824	MemberAccess	ctx -> zstr . next_in		6183747	0					
ANR	6183825	PtrMemberAccess	ctx -> zstr		6183747	0					
ANR	6183826	Identifier	ctx		6183747	0					
ANR	6183827	Identifier	zstr		6183747	1					
ANR	6183828	Identifier	next_in		6183747	1					
ANR	6183829	CastExpression	( Bytef * ) ctx -> buffer		6183747	1					
ANR	6183830	CastTarget	Bytef *		6183747	0					
ANR	6183831	PtrMemberAccess	ctx -> buffer		6183747	1					
ANR	6183832	Identifier	ctx		6183747	0					
ANR	6183833	Identifier	buffer		6183747	1					
ANR	6183834	ExpressionStatement	ctx -> zstr . avail_in = ( uInt ) n	335:1:7804:7862	6183747	6	True				
ANR	6183835	AssignmentExpression	ctx -> zstr . avail_in = ( uInt ) n		6183747	0		=			
ANR	6183836	MemberAccess	ctx -> zstr . avail_in		6183747	0					
ANR	6183837	PtrMemberAccess	ctx -> zstr		6183747	0					
ANR	6183838	Identifier	ctx		6183747	0					
ANR	6183839	Identifier	zstr		6183747	1					
ANR	6183840	Identifier	avail_in		6183747	1					
ANR	6183841	CastExpression	( uInt ) n		6183747	1					
ANR	6183842	CastTarget	uInt		6183747	0					
ANR	6183843	Identifier	n		6183747	1					
ANR	6183844	IfStatement	"if ( ( ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS ) ) != Z_OK )"		6183747	7					
ANR	6183845	Condition	"( ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS ) ) != Z_OK"	338:5:7929:7978	6183747	0	True				
ANR	6183846	EqualityExpression	"( ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS ) ) != Z_OK"		6183747	0		!=			
ANR	6183847	AssignmentExpression	"ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS )"		6183747	0		=			
ANR	6183848	Identifier	ret		6183747	0					
ANR	6183849	CallExpression	"inflateInit2 ( & ctx -> zstr , - MAX_WBITS )"		6183747	1					
ANR	6183850	Callee	inflateInit2		6183747	0					
ANR	6183851	Identifier	inflateInit2		6183747	0					
ANR	6183852	ArgumentList	& ctx -> zstr		6183747	1					
ANR	6183853	Argument	& ctx -> zstr		6183747	0					
ANR	6183854	UnaryOperationExpression	& ctx -> zstr		6183747	0					
ANR	6183855	UnaryOperator	&		6183747	0					
ANR	6183856	PtrMemberAccess	ctx -> zstr		6183747	1					
ANR	6183857	Identifier	ctx		6183747	0					
ANR	6183858	Identifier	zstr		6183747	1					
ANR	6183859	Argument	- MAX_WBITS		6183747	1					
ANR	6183860	UnaryOperationExpression	- MAX_WBITS		6183747	0					
ANR	6183861	UnaryOperator	-		6183747	0					
ANR	6183862	Identifier	MAX_WBITS		6183747	1					
ANR	6183863	Identifier	Z_OK		6183747	1					
ANR	6183864	CompoundStatement		20:57:543:543	6183747	1					
ANR	6183865	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	339:5:7988:8011	6183747	0	True				
ANR	6183866	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6183747	0		=			
ANR	6183867	ArrayIndexing	ctx -> e [ 0 ]		6183747	0					
ANR	6183868	PtrMemberAccess	ctx -> e		6183747	0					
ANR	6183869	Identifier	ctx		6183747	0					
ANR	6183870	Identifier	e		6183747	1					
ANR	6183871	PrimaryExpression	0		6183747	1					
ANR	6183872	Identifier	ZIP_ER_ZLIB		6183747	1					
ANR	6183873	ExpressionStatement	ctx -> e [ 1 ] = ret	340:5:8018:8033	6183747	1	True				
ANR	6183874	AssignmentExpression	ctx -> e [ 1 ] = ret		6183747	0		=			
ANR	6183875	ArrayIndexing	ctx -> e [ 1 ]		6183747	0					
ANR	6183876	PtrMemberAccess	ctx -> e		6183747	0					
ANR	6183877	Identifier	ctx		6183747	0					
ANR	6183878	Identifier	e		6183747	1					
ANR	6183879	PrimaryExpression	1		6183747	1					
ANR	6183880	Identifier	ret		6183747	1					
ANR	6183881	ReturnStatement	return - 1 ;	342:5:8041:8050	6183747	2	True				
ANR	6183882	UnaryOperationExpression	- 1		6183747	0					
ANR	6183883	UnaryOperator	-		6183747	0					
ANR	6183884	PrimaryExpression	1		6183747	1					
ANR	6183885	ReturnStatement	return 0 ;	344:1:8056:8064	6183747	8	True				
ANR	6183886	PrimaryExpression	0		6183747	0					
ANR	6183887	Label	case ZIP_SOURCE_READ :	346:4:8071:8091	6183747	9	True				
ANR	6183888	Identifier	ZIP_SOURCE_READ		6183747	0					
ANR	6183889	ReturnStatement	"return decompress_read ( src , ctx , data , len ) ;"	347:1:8094:8137	6183747	10	True				
ANR	6183890	CallExpression	"decompress_read ( src , ctx , data , len )"		6183747	0					
ANR	6183891	Callee	decompress_read		6183747	0					
ANR	6183892	Identifier	decompress_read		6183747	0					
ANR	6183893	ArgumentList	src		6183747	1					
ANR	6183894	Argument	src		6183747	0					
ANR	6183895	Identifier	src		6183747	0					
ANR	6183896	Argument	ctx		6183747	1					
ANR	6183897	Identifier	ctx		6183747	0					
ANR	6183898	Argument	data		6183747	2					
ANR	6183899	Identifier	data		6183747	0					
ANR	6183900	Argument	len		6183747	3					
ANR	6183901	Identifier	len		6183747	0					
ANR	6183902	Label	case ZIP_SOURCE_CLOSE :	349:4:8144:8165	6183747	11	True				
ANR	6183903	Identifier	ZIP_SOURCE_CLOSE		6183747	0					
ANR	6183904	ExpressionStatement	inflateEnd ( & ctx -> zstr )	350:1:8168:8190	6183747	12	True				
ANR	6183905	CallExpression	inflateEnd ( & ctx -> zstr )		6183747	0					
ANR	6183906	Callee	inflateEnd		6183747	0					
ANR	6183907	Identifier	inflateEnd		6183747	0					
ANR	6183908	ArgumentList	& ctx -> zstr		6183747	1					
ANR	6183909	Argument	& ctx -> zstr		6183747	0					
ANR	6183910	UnaryOperationExpression	& ctx -> zstr		6183747	0					
ANR	6183911	UnaryOperator	&		6183747	0					
ANR	6183912	PtrMemberAccess	ctx -> zstr		6183747	1					
ANR	6183913	Identifier	ctx		6183747	0					
ANR	6183914	Identifier	zstr		6183747	1					
ANR	6183915	ReturnStatement	return 0 ;	351:1:8193:8201	6183747	13	True				
ANR	6183916	PrimaryExpression	0		6183747	0					
ANR	6183917	Label	case ZIP_SOURCE_STAT :	353:4:8208:8228	6183747	14	True				
ANR	6183918	Identifier	ZIP_SOURCE_STAT		6183747	0					
ANR	6183919	CompoundStatement		37:5:800:819	6183747	15					
ANR	6183920	IdentifierDeclStatement	struct zip_stat * st ;	355:5:8238:8257	6183747	0	True				
ANR	6183921	IdentifierDecl	* st		6183747	0					
ANR	6183922	IdentifierDeclType	struct zip_stat *		6183747	0					
ANR	6183923	Identifier	st		6183747	1					
ANR	6183924	ExpressionStatement	st = ( struct zip_stat * ) data	357:5:8265:8293	6183747	1	True				
ANR	6183925	AssignmentExpression	st = ( struct zip_stat * ) data		6183747	0		=			
ANR	6183926	Identifier	st		6183747	0					
ANR	6183927	CastExpression	( struct zip_stat * ) data		6183747	1					
ANR	6183928	CastTarget	struct zip_stat *		6183747	0					
ANR	6183929	Identifier	data		6183747	1					
ANR	6183930	ExpressionStatement	st -> comp_method = ZIP_CM_STORE	359:5:8301:8331	6183747	2	True				
ANR	6183931	AssignmentExpression	st -> comp_method = ZIP_CM_STORE		6183747	0		=			
ANR	6183932	PtrMemberAccess	st -> comp_method		6183747	0					
ANR	6183933	Identifier	st		6183747	0					
ANR	6183934	Identifier	comp_method		6183747	1					
ANR	6183935	Identifier	ZIP_CM_STORE		6183747	1					
ANR	6183936	IfStatement	if ( st -> comp_size > 0 && st -> size > 0 )		6183747	3					
ANR	6183937	Condition	st -> comp_size > 0 && st -> size > 0	360:9:8342:8374	6183747	0	True				
ANR	6183938	AndExpression	st -> comp_size > 0 && st -> size > 0		6183747	0		&&			
ANR	6183939	RelationalExpression	st -> comp_size > 0		6183747	0		>			
ANR	6183940	PtrMemberAccess	st -> comp_size		6183747	0					
ANR	6183941	Identifier	st		6183747	0					
ANR	6183942	Identifier	comp_size		6183747	1					
ANR	6183943	PrimaryExpression	0		6183747	1					
ANR	6183944	RelationalExpression	st -> size > 0		6183747	1		>			
ANR	6183945	PtrMemberAccess	st -> size		6183747	0					
ANR	6183946	Identifier	st		6183747	0					
ANR	6183947	Identifier	size		6183747	1					
ANR	6183948	PrimaryExpression	0		6183747	1					
ANR	6183949	ExpressionStatement	st -> comp_size = st -> size	361:2:8379:8403	6183747	1	True				
ANR	6183950	AssignmentExpression	st -> comp_size = st -> size		6183747	0		=			
ANR	6183951	PtrMemberAccess	st -> comp_size		6183747	0					
ANR	6183952	Identifier	st		6183747	0					
ANR	6183953	Identifier	comp_size		6183747	1					
ANR	6183954	PtrMemberAccess	st -> size		6183747	1					
ANR	6183955	Identifier	st		6183747	0					
ANR	6183956	Identifier	size		6183747	1					
ANR	6183957	ReturnStatement	return 0 ;	363:1:8409:8417	6183747	16	True				
ANR	6183958	PrimaryExpression	0		6183747	0					
ANR	6183959	Label	case ZIP_SOURCE_ERROR :	365:4:8424:8445	6183747	17	True				
ANR	6183960	Identifier	ZIP_SOURCE_ERROR		6183747	0					
ANR	6183961	IfStatement	if ( len < sizeof ( int ) * 2 )		6183747	18					
ANR	6183962	Condition	len < sizeof ( int ) * 2	366:5:8452:8470	6183747	0	True				
ANR	6183963	RelationalExpression	len < sizeof ( int ) * 2		6183747	0		<			
ANR	6183964	Identifier	len		6183747	0					
ANR	6183965	MultiplicativeExpression	sizeof ( int ) * 2		6183747	1		*			
ANR	6183966	SizeofExpression	sizeof ( int )		6183747	0					
ANR	6183967	Sizeof	sizeof		6183747	0					
ANR	6183968	SizeofOperand	int		6183747	1					
ANR	6183969	PrimaryExpression	2		6183747	1					
ANR	6183970	ReturnStatement	return - 1 ;	367:5:8478:8487	6183747	1	True				
ANR	6183971	UnaryOperationExpression	- 1		6183747	0					
ANR	6183972	UnaryOperator	-		6183747	0					
ANR	6183973	PrimaryExpression	1		6183747	1					
ANR	6183974	ExpressionStatement	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"	369:1:8491:8526	6183747	19	True				
ANR	6183975	CallExpression	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"		6183747	0					
ANR	6183976	Callee	memcpy		6183747	0					
ANR	6183977	Identifier	memcpy		6183747	0					
ANR	6183978	ArgumentList	data		6183747	1					
ANR	6183979	Argument	data		6183747	0					
ANR	6183980	Identifier	data		6183747	0					
ANR	6183981	Argument	ctx -> e		6183747	1					
ANR	6183982	PtrMemberAccess	ctx -> e		6183747	0					
ANR	6183983	Identifier	ctx		6183747	0					
ANR	6183984	Identifier	e		6183747	1					
ANR	6183985	Argument	sizeof ( int ) * 2		6183747	2					
ANR	6183986	MultiplicativeExpression	sizeof ( int ) * 2		6183747	0		*			
ANR	6183987	SizeofExpression	sizeof ( int )		6183747	0					
ANR	6183988	Sizeof	sizeof		6183747	0					
ANR	6183989	SizeofOperand	int		6183747	1					
ANR	6183990	PrimaryExpression	2		6183747	1					
ANR	6183991	ReturnStatement	return sizeof ( int ) * 2 ;	370:1:8529:8549	6183747	20	True				
ANR	6183992	MultiplicativeExpression	sizeof ( int ) * 2		6183747	0		*			
ANR	6183993	SizeofExpression	sizeof ( int )		6183747	0					
ANR	6183994	Sizeof	sizeof		6183747	0					
ANR	6183995	SizeofOperand	int		6183747	1					
ANR	6183996	PrimaryExpression	2		6183747	1					
ANR	6183997	Label	case ZIP_SOURCE_FREE :	372:4:8556:8576	6183747	21	True				
ANR	6183998	Identifier	ZIP_SOURCE_FREE		6183747	0					
ANR	6183999	ExpressionStatement	free ( ctx )	374:1:8626:8635	6183747	22	True				
ANR	6184000	CallExpression	free ( ctx )		6183747	0					
ANR	6184001	Callee	free		6183747	0					
ANR	6184002	Identifier	free		6183747	0					
ANR	6184003	ArgumentList	ctx		6183747	1					
ANR	6184004	Argument	ctx		6183747	0					
ANR	6184005	Identifier	ctx		6183747	0					
ANR	6184006	ReturnStatement	return 0 ;	375:1:8638:8646	6183747	23	True				
ANR	6184007	PrimaryExpression	0		6183747	0					
ANR	6184008	Label	default :	377:4:8653:8660	6183747	24	True				
ANR	6184009	Identifier	default		6183747	0					
ANR	6184010	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_INVAL	378:1:8663:8687	6183747	25	True				
ANR	6184011	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_INVAL		6183747	0		=			
ANR	6184012	ArrayIndexing	ctx -> e [ 0 ]		6183747	0					
ANR	6184013	PtrMemberAccess	ctx -> e		6183747	0					
ANR	6184014	Identifier	ctx		6183747	0					
ANR	6184015	Identifier	e		6183747	1					
ANR	6184016	PrimaryExpression	0		6183747	1					
ANR	6184017	Identifier	ZIP_ER_INVAL		6183747	1					
ANR	6184018	ExpressionStatement	ctx -> e [ 1 ] = 0	379:1:8690:8703	6183747	26	True				
ANR	6184019	AssignmentExpression	ctx -> e [ 1 ] = 0		6183747	0		=			
ANR	6184020	ArrayIndexing	ctx -> e [ 1 ]		6183747	0					
ANR	6184021	PtrMemberAccess	ctx -> e		6183747	0					
ANR	6184022	Identifier	ctx		6183747	0					
ANR	6184023	Identifier	e		6183747	1					
ANR	6184024	PrimaryExpression	1		6183747	1					
ANR	6184025	PrimaryExpression	0		6183747	1					
ANR	6184026	ReturnStatement	return - 1 ;	380:1:8706:8715	6183747	27	True				
ANR	6184027	UnaryOperationExpression	- 1		6183747	0					
ANR	6184028	UnaryOperator	-		6183747	0					
ANR	6184029	PrimaryExpression	1		6183747	1					
ANR	6184030	ReturnType	static zip_int64_t		6183747	1					
ANR	6184031	Identifier	deflate_decompress		6183747	2					
ANR	6184032	ParameterList	"struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd"		6183747	3					
ANR	6184033	Parameter	struct zip_source * src	317:19:7343:7364	6183747	0	True				
ANR	6184034	ParameterType	struct zip_source *		6183747	0					
ANR	6184035	Identifier	src		6183747	1					
ANR	6184036	Parameter	void * ud	317:43:7367:7374	6183747	1	True				
ANR	6184037	ParameterType	void *		6183747	0					
ANR	6184038	Identifier	ud		6183747	1					
ANR	6184039	Parameter	void * data	317:53:7377:7386	6183747	2	True				
ANR	6184040	ParameterType	void *		6183747	0					
ANR	6184041	Identifier	data		6183747	1					
ANR	6184042	Parameter	zip_uint64_t len	318:5:7394:7409	6183747	3	True				
ANR	6184043	ParameterType	zip_uint64_t		6183747	0					
ANR	6184044	Identifier	len		6183747	1					
ANR	6184045	Parameter	enum zip_source_cmd cmd	318:23:7412:7434	6183747	4	True				
ANR	6184046	ParameterType	enum zip_source_cmd		6183747	0					
ANR	6184047	Identifier	cmd		6183747	1					
ANR	6184048	CFGEntryNode	ENTRY		6183747		True				
ANR	6184049	CFGExitNode	EXIT		6183747		True				
ANR	6184050	Symbol	data		6183747						
ANR	6184051	Symbol	* st		6183747						
ANR	6184052	Symbol	MAX_WBITS		6183747						
ANR	6184053	Symbol	& ctx -> zstr		6183747						
ANR	6184054	Symbol	ctx -> e		6183747						
ANR	6184055	Symbol	Z_OK		6183747						
ANR	6184056	Symbol	st -> comp_size		6183747						
ANR	6184057	Symbol	ctx -> zstr . zfree		6183747						
ANR	6184058	Symbol	ud		6183747						
ANR	6184059	Symbol	ctx -> zstr . opaque		6183747						
ANR	6184060	Symbol	ZIP_ER_INVAL		6183747						
ANR	6184061	Symbol	len		6183747						
ANR	6184062	Symbol	* ctx -> e		6183747						
ANR	6184063	Symbol	ZIP_SOURCE_ERR_LOWER		6183747						
ANR	6184064	Symbol	ret		6183747						
ANR	6184065	Symbol	ctx -> zstr . zalloc		6183747						
ANR	6184066	Symbol	inflateInit2		6183747						
ANR	6184067	Symbol	st		6183747						
ANR	6184068	Symbol	NULL		6183747						
ANR	6184069	Symbol	ctx -> zstr . next_in		6183747						
ANR	6184070	Symbol	src		6183747						
ANR	6184071	Symbol	ctx		6183747						
ANR	6184072	Symbol	decompress_read		6183747						
ANR	6184073	Symbol	st -> comp_method		6183747						
ANR	6184074	Symbol	zip_source_read		6183747						
ANR	6184075	Symbol	ctx -> buffer		6183747						
ANR	6184076	Symbol	ZIP_CM_STORE		6183747						
ANR	6184077	Symbol	n		6183747						
ANR	6184078	Symbol	* ctx		6183747						
ANR	6184079	Symbol	ctx -> zstr . avail_in		6183747						
ANR	6184080	Symbol	st -> size		6183747						
ANR	6184081	Symbol	ZIP_ER_ZLIB		6183747						
ANR	6184082	Symbol	cmd		6183747						
ANR	6184083	Symbol	* * ctx		6183747						
ANR	6184084	Symbol	ctx -> zstr		6183747						
ANR	6184085	Symbol	Z_NULL		6183747						
ANR	6184086	Function	deflate_free	387:0:8734:8847							
ANR	6184087	FunctionDef	deflate_free (struct deflate * ctx)		6184086	0					
ANR	6184088	CompoundStatement		389:0:8780:8847	6184086	0					
ANR	6184089	ExpressionStatement	free ( ctx )	391:4:8836:8845	6184086	0	True				
ANR	6184090	CallExpression	free ( ctx )		6184086	0					
ANR	6184091	Callee	free		6184086	0					
ANR	6184092	Identifier	free		6184086	0					
ANR	6184093	ArgumentList	ctx		6184086	1					
ANR	6184094	Argument	ctx		6184086	0					
ANR	6184095	Identifier	ctx		6184086	0					
ANR	6184096	ReturnType	static void		6184086	1					
ANR	6184097	Identifier	deflate_free		6184086	2					
ANR	6184098	ParameterList	struct deflate * ctx		6184086	3					
ANR	6184099	Parameter	struct deflate * ctx	388:13:8759:8777	6184086	0	True				
ANR	6184100	ParameterType	struct deflate *		6184086	0					
ANR	6184101	Identifier	ctx		6184086	1					
ANR	6184102	CFGEntryNode	ENTRY		6184086		True				
ANR	6184103	CFGExitNode	EXIT		6184086		True				
ANR	6184104	Symbol	ctx		6184086						
