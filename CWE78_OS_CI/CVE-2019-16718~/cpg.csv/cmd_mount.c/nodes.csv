command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	948083	File	data/converged/CVE-2019-16718~_radare2/cmd_mount.c								
ANR	948084	DeclStmt									
ANR	948085	Decl							const char	const char * [ ]	help_msg_m
ANR	948086	Function	cmd_mount_init	27:0:1248:1324							
ANR	948087	FunctionDef	cmd_mount_init (RCore * core)		948086	0					
ANR	948088	CompoundStatement		27:40:1288:1324	948086	0					
ANR	948089	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , m )"	28:1:1291:1322	948086	0	True				
ANR	948090	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , m )"		948086	0					
ANR	948091	Callee	DEFINE_CMD_DESCRIPTOR		948086	0					
ANR	948092	Identifier	DEFINE_CMD_DESCRIPTOR		948086	0					
ANR	948093	ArgumentList	core		948086	1					
ANR	948094	Argument	core		948086	0					
ANR	948095	Identifier	core		948086	0					
ANR	948096	Argument	m		948086	1					
ANR	948097	Identifier	m		948086	0					
ANR	948098	ReturnType	static void		948086	1					
ANR	948099	Identifier	cmd_mount_init		948086	2					
ANR	948100	ParameterList	RCore * core		948086	3					
ANR	948101	Parameter	RCore * core	27:27:1275:1285	948086	0	True				
ANR	948102	ParameterType	RCore *		948086	0					
ANR	948103	Identifier	core		948086	1					
ANR	948104	CFGEntryNode	ENTRY		948086		True				
ANR	948105	CFGExitNode	EXIT		948086		True				
ANR	948106	Symbol	core		948086						
ANR	948107	Symbol	m		948086						
ANR	948108	Function	cmd_mkdir	31:0:1327:1480							
ANR	948109	FunctionDef	"cmd_mkdir (void * data , const char * input)"		948108	0					
ANR	948110	CompoundStatement		31:52:1379:1480	948108	0					
ANR	948111	IdentifierDeclStatement	char * res = r_syscmd_mkdir ( input ) ;	32:1:1382:1416	948108	0	True				
ANR	948112	IdentifierDecl	* res = r_syscmd_mkdir ( input )		948108	0					
ANR	948113	IdentifierDeclType	char *		948108	0					
ANR	948114	Identifier	res		948108	1					
ANR	948115	AssignmentExpression	* res = r_syscmd_mkdir ( input )		948108	2		=			
ANR	948116	Identifier	res		948108	0					
ANR	948117	CallExpression	r_syscmd_mkdir ( input )		948108	1					
ANR	948118	Callee	r_syscmd_mkdir		948108	0					
ANR	948119	Identifier	r_syscmd_mkdir		948108	0					
ANR	948120	ArgumentList	input		948108	1					
ANR	948121	Argument	input		948108	0					
ANR	948122	Identifier	input		948108	0					
ANR	948123	IfStatement	if ( res )		948108	1					
ANR	948124	Condition	res	33:5:1423:1425	948108	0	True				
ANR	948125	Identifier	res		948108	0					
ANR	948126	CompoundStatement		3:10:48:48	948108	1					
ANR	948127	ExpressionStatement	r_cons_print ( res )	34:2:1432:1450	948108	0	True				
ANR	948128	CallExpression	r_cons_print ( res )		948108	0					
ANR	948129	Callee	r_cons_print		948108	0					
ANR	948130	Identifier	r_cons_print		948108	0					
ANR	948131	ArgumentList	res		948108	1					
ANR	948132	Argument	res		948108	0					
ANR	948133	Identifier	res		948108	0					
ANR	948134	ExpressionStatement	free ( res )	35:2:1454:1464	948108	1	True				
ANR	948135	CallExpression	free ( res )		948108	0					
ANR	948136	Callee	free		948108	0					
ANR	948137	Identifier	free		948108	0					
ANR	948138	ArgumentList	res		948108	1					
ANR	948139	Argument	res		948108	0					
ANR	948140	Identifier	res		948108	0					
ANR	948141	ReturnStatement	return 0 ;	37:1:1470:1478	948108	2	True				
ANR	948142	PrimaryExpression	0		948108	0					
ANR	948143	ReturnType	static int		948108	1					
ANR	948144	Identifier	cmd_mkdir		948108	2					
ANR	948145	ParameterList	"void * data , const char * input"		948108	3					
ANR	948146	Parameter	void * data	31:21:1348:1357	948108	0	True				
ANR	948147	ParameterType	void *		948108	0					
ANR	948148	Identifier	data		948108	1					
ANR	948149	Parameter	const char * input	31:33:1360:1376	948108	1	True				
ANR	948150	ParameterType	const char *		948108	0					
ANR	948151	Identifier	input		948108	1					
ANR	948152	CFGEntryNode	ENTRY		948108		True				
ANR	948153	CFGExitNode	EXIT		948108		True				
ANR	948154	Symbol	input		948108						
ANR	948155	Symbol	res		948108						
ANR	948156	Symbol	r_syscmd_mkdir		948108						
ANR	948157	Symbol	data		948108						
ANR	948158	Function	cmd_mv	40:0:1483:1569							
ANR	948159	FunctionDef	"cmd_mv (void * data , const char * input)"		948158	0					
ANR	948160	CompoundStatement		40:49:1532:1569	948158	0					
ANR	948161	ReturnStatement	return r_syscmd_mv ( input ) ? 1 : 0 ;	41:1:1535:1567	948158	0	True				
ANR	948162	ConditionalExpression	r_syscmd_mv ( input ) ? 1 : 0		948158	0					
ANR	948163	Condition	r_syscmd_mv ( input )		948158	0					
ANR	948164	CallExpression	r_syscmd_mv ( input )		948158	0					
ANR	948165	Callee	r_syscmd_mv		948158	0					
ANR	948166	Identifier	r_syscmd_mv		948158	0					
ANR	948167	ArgumentList	input		948158	1					
ANR	948168	Argument	input		948158	0					
ANR	948169	Identifier	input		948158	0					
ANR	948170	PrimaryExpression	1		948158	1					
ANR	948171	PrimaryExpression	0		948158	2					
ANR	948172	ReturnType	static int		948158	1					
ANR	948173	Identifier	cmd_mv		948158	2					
ANR	948174	ParameterList	"void * data , const char * input"		948158	3					
ANR	948175	Parameter	void * data	40:18:1501:1510	948158	0	True				
ANR	948176	ParameterType	void *		948158	0					
ANR	948177	Identifier	data		948158	1					
ANR	948178	Parameter	const char * input	40:30:1513:1529	948158	1	True				
ANR	948179	ParameterType	const char *		948158	0					
ANR	948180	Identifier	input		948158	1					
ANR	948181	CFGEntryNode	ENTRY		948158		True				
ANR	948182	CFGExitNode	EXIT		948158		True				
ANR	948183	Symbol	input		948158						
ANR	948184	Symbol	r_syscmd_mv		948158						
ANR	948185	Symbol	data		948158						
ANR	948186	DeclStmt									
ANR	948187	Decl							char	char *	cwd
ANR	948188	Function	t2s	47:0:1618:1784							
ANR	948189	FunctionDef	t2s (const char ch)		948188	0					
ANR	948190	CompoundStatement		47:38:1656:1784	948188	0					
ANR	948191	SwitchStatement	switch ( ch )		948188	0					
ANR	948192	Condition	ch	48:9:1667:1668	948188	0	True				
ANR	948193	Identifier	ch		948188	0					
ANR	948194	CompoundStatement		2:13:14:14	948188	1					
ANR	948195	Label	case 'f' :	49:1:1674:1682	948188	0	True				
ANR	948196	ReturnStatement	"return ""file"" ;"	49:11:1684:1697	948188	1	True				
ANR	948197	PrimaryExpression	"""file"""		948188	0					
ANR	948198	Label	case 'd' :	50:1:1700:1708	948188	2	True				
ANR	948199	ReturnStatement	"return ""directory"" ;"	50:11:1710:1728	948188	3	True				
ANR	948200	PrimaryExpression	"""directory"""		948188	0					
ANR	948201	Label	case 'm' :	51:1:1731:1739	948188	4	True				
ANR	948202	ReturnStatement	"return ""mountpoint"" ;"	51:11:1741:1760	948188	5	True				
ANR	948203	PrimaryExpression	"""mountpoint"""		948188	0					
ANR	948204	ReturnStatement	"return ""unknown"" ;"	53:1:1766:1782	948188	1	True				
ANR	948205	PrimaryExpression	"""unknown"""		948188	0					
ANR	948206	ReturnType	static const char *		948188	1					
ANR	948207	Identifier	t2s		948188	2					
ANR	948208	ParameterList	const char ch		948188	3					
ANR	948209	Parameter	const char ch	47:23:1641:1653	948188	0	True				
ANR	948210	ParameterType	const char		948188	0					
ANR	948211	Identifier	ch		948188	1					
ANR	948212	CFGEntryNode	ENTRY		948188		True				
ANR	948213	CFGExitNode	EXIT		948188		True				
ANR	948214	Symbol	ch		948188						
ANR	948215	Function	cmd_mount_ls	56:0:1787:3092							
ANR	948216	FunctionDef	"cmd_mount_ls (RCore * core , const char * input)"		948215	0					
ANR	948217	CompoundStatement		56:58:1845:3092	948215	0					
ANR	948218	IdentifierDeclStatement	bool isJSON = * input == 'j' ;	57:1:1848:1875	948215	0	True				
ANR	948219	IdentifierDecl	isJSON = * input == 'j'		948215	0					
ANR	948220	IdentifierDeclType	bool		948215	0					
ANR	948221	Identifier	isJSON		948215	1					
ANR	948222	AssignmentExpression	isJSON = * input == 'j'		948215	2		=			
ANR	948223	Identifier	isJSON		948215	0					
ANR	948224	EqualityExpression	* input == 'j'		948215	1		==			
ANR	948225	UnaryOperationExpression	* input		948215	0					
ANR	948226	UnaryOperator	*		948215	0					
ANR	948227	Identifier	input		948215	1					
ANR	948228	PrimaryExpression	'j'		948215	1					
ANR	948229	IdentifierDeclStatement	RListIter * iter ;	58:1:1878:1893	948215	1	True				
ANR	948230	IdentifierDecl	* iter		948215	0					
ANR	948231	IdentifierDeclType	RListIter *		948215	0					
ANR	948232	Identifier	iter		948215	1					
ANR	948233	IdentifierDeclStatement	RFSFile * file ;	59:1:1896:1909	948215	2	True				
ANR	948234	IdentifierDecl	* file		948215	0					
ANR	948235	IdentifierDeclType	RFSFile *		948215	0					
ANR	948236	Identifier	file		948215	1					
ANR	948237	IdentifierDeclStatement	RFSRoot * root ;	60:1:1912:1925	948215	3	True				
ANR	948238	IdentifierDecl	* root		948215	0					
ANR	948239	IdentifierDeclType	RFSRoot *		948215	0					
ANR	948240	Identifier	root		948215	1					
ANR	948241	ExpressionStatement	input = r_str_trim_ro ( input + isJSON )	61:1:1928:1966	948215	4	True				
ANR	948242	AssignmentExpression	input = r_str_trim_ro ( input + isJSON )		948215	0		=			
ANR	948243	Identifier	input		948215	0					
ANR	948244	CallExpression	r_str_trim_ro ( input + isJSON )		948215	1					
ANR	948245	Callee	r_str_trim_ro		948215	0					
ANR	948246	Identifier	r_str_trim_ro		948215	0					
ANR	948247	ArgumentList	input + isJSON		948215	1					
ANR	948248	Argument	input + isJSON		948215	0					
ANR	948249	AdditiveExpression	input + isJSON		948215	0		+			
ANR	948250	Identifier	input		948215	0					
ANR	948251	Identifier	isJSON		948215	1					
ANR	948252	IdentifierDeclStatement	"RList * list = r_fs_dir ( core -> fs , input ) ;"	62:1:1969:2009	948215	5	True				
ANR	948253	IdentifierDecl	"* list = r_fs_dir ( core -> fs , input )"		948215	0					
ANR	948254	IdentifierDeclType	RList *		948215	0					
ANR	948255	Identifier	list		948215	1					
ANR	948256	AssignmentExpression	"* list = r_fs_dir ( core -> fs , input )"		948215	2		=			
ANR	948257	Identifier	list		948215	0					
ANR	948258	CallExpression	"r_fs_dir ( core -> fs , input )"		948215	1					
ANR	948259	Callee	r_fs_dir		948215	0					
ANR	948260	Identifier	r_fs_dir		948215	0					
ANR	948261	ArgumentList	core -> fs		948215	1					
ANR	948262	Argument	core -> fs		948215	0					
ANR	948263	PtrMemberAccess	core -> fs		948215	0					
ANR	948264	Identifier	core		948215	0					
ANR	948265	Identifier	fs		948215	1					
ANR	948266	Argument	input		948215	1					
ANR	948267	Identifier	input		948215	0					
ANR	948268	IdentifierDeclStatement	PJ * pj = NULL ;	63:1:2012:2025	948215	6	True				
ANR	948269	IdentifierDecl	* pj = NULL		948215	0					
ANR	948270	IdentifierDeclType	PJ *		948215	0					
ANR	948271	Identifier	pj		948215	1					
ANR	948272	AssignmentExpression	* pj = NULL		948215	2		=			
ANR	948273	Identifier	NULL		948215	0					
ANR	948274	Identifier	NULL		948215	1					
ANR	948275	IfStatement	if ( isJSON )		948215	7					
ANR	948276	Condition	isJSON	64:5:2032:2037	948215	0	True				
ANR	948277	Identifier	isJSON		948215	0					
ANR	948278	CompoundStatement		9:13:194:194	948215	1					
ANR	948279	ExpressionStatement	pj = pj_new ( )	65:2:2044:2058	948215	0	True				
ANR	948280	AssignmentExpression	pj = pj_new ( )		948215	0		=			
ANR	948281	Identifier	pj		948215	0					
ANR	948282	CallExpression	pj_new ( )		948215	1					
ANR	948283	Callee	pj_new		948215	0					
ANR	948284	Identifier	pj_new		948215	0					
ANR	948285	ArgumentList			948215	1					
ANR	948286	ExpressionStatement	pj_a ( pj )	66:2:2062:2071	948215	1	True				
ANR	948287	CallExpression	pj_a ( pj )		948215	0					
ANR	948288	Callee	pj_a		948215	0					
ANR	948289	Identifier	pj_a		948215	0					
ANR	948290	ArgumentList	pj		948215	1					
ANR	948291	Argument	pj		948215	0					
ANR	948292	Identifier	pj		948215	0					
ANR	948293	IfStatement	if ( list )		948215	8					
ANR	948294	Condition	list	68:5:2081:2084	948215	0	True				
ANR	948295	Identifier	list		948215	0					
ANR	948296	CompoundStatement		13:11:241:241	948215	1					
ANR	948297	Statement	r_list_foreach	69:2:2091:2104	948215	0	True				
ANR	948298	Statement	(	69:17:2106:2106	948215	1	True				
ANR	948299	Statement	list	69:18:2107:2110	948215	2	True				
ANR	948300	Statement	","	69:22:2111:2111	948215	3	True				
ANR	948301	Statement	iter	69:24:2113:2116	948215	4	True				
ANR	948302	Statement	","	69:28:2117:2117	948215	5	True				
ANR	948303	Statement	file	69:30:2119:2122	948215	6	True				
ANR	948304	Statement	)	69:34:2123:2123	948215	7	True				
ANR	948305	CompoundStatement		14:36:279:279	948215	8					
ANR	948306	IfStatement	if ( isJSON )		948215	0					
ANR	948307	Condition	isJSON	70:7:2134:2139	948215	0	True				
ANR	948308	Identifier	isJSON		948215	0					
ANR	948309	CompoundStatement		15:15:296:296	948215	1					
ANR	948310	ExpressionStatement	pj_o ( pj )	71:4:2148:2157	948215	0	True				
ANR	948311	CallExpression	pj_o ( pj )		948215	0					
ANR	948312	Callee	pj_o		948215	0					
ANR	948313	Identifier	pj_o		948215	0					
ANR	948314	ArgumentList	pj		948215	1					
ANR	948315	Argument	pj		948215	0					
ANR	948316	Identifier	pj		948215	0					
ANR	948317	ExpressionStatement	"pj_ks ( pj , ""type"" , t2s ( file -> type ) )"	72:4:2163:2198	948215	1	True				
ANR	948318	CallExpression	"pj_ks ( pj , ""type"" , t2s ( file -> type ) )"		948215	0					
ANR	948319	Callee	pj_ks		948215	0					
ANR	948320	Identifier	pj_ks		948215	0					
ANR	948321	ArgumentList	pj		948215	1					
ANR	948322	Argument	pj		948215	0					
ANR	948323	Identifier	pj		948215	0					
ANR	948324	Argument	"""type"""		948215	1					
ANR	948325	PrimaryExpression	"""type"""		948215	0					
ANR	948326	Argument	t2s ( file -> type )		948215	2					
ANR	948327	CallExpression	t2s ( file -> type )		948215	0					
ANR	948328	Callee	t2s		948215	0					
ANR	948329	Identifier	t2s		948215	0					
ANR	948330	ArgumentList	file -> type		948215	1					
ANR	948331	Argument	file -> type		948215	0					
ANR	948332	PtrMemberAccess	file -> type		948215	0					
ANR	948333	Identifier	file		948215	0					
ANR	948334	Identifier	type		948215	1					
ANR	948335	ExpressionStatement	"pj_ks ( pj , ""name"" , file -> name )"	73:4:2204:2234	948215	2	True				
ANR	948336	CallExpression	"pj_ks ( pj , ""name"" , file -> name )"		948215	0					
ANR	948337	Callee	pj_ks		948215	0					
ANR	948338	Identifier	pj_ks		948215	0					
ANR	948339	ArgumentList	pj		948215	1					
ANR	948340	Argument	pj		948215	0					
ANR	948341	Identifier	pj		948215	0					
ANR	948342	Argument	"""name"""		948215	1					
ANR	948343	PrimaryExpression	"""name"""		948215	0					
ANR	948344	Argument	file -> name		948215	2					
ANR	948345	PtrMemberAccess	file -> name		948215	0					
ANR	948346	Identifier	file		948215	0					
ANR	948347	Identifier	name		948215	1					
ANR	948348	ExpressionStatement	pj_end ( pj )	74:4:2240:2251	948215	3	True				
ANR	948349	CallExpression	pj_end ( pj )		948215	0					
ANR	948350	Callee	pj_end		948215	0					
ANR	948351	Identifier	pj_end		948215	0					
ANR	948352	ArgumentList	pj		948215	1					
ANR	948353	Argument	pj		948215	0					
ANR	948354	Identifier	pj		948215	0					
ANR	948355	ElseStatement	else		948215	0					
ANR	948356	CompoundStatement		20:10:417:417	948215	0					
ANR	948357	ExpressionStatement	"r_cons_printf ( ""%c %s\\n"" , file -> type , file -> name )"	76:4:2269:2318	948215	0	True				
ANR	948358	CallExpression	"r_cons_printf ( ""%c %s\\n"" , file -> type , file -> name )"		948215	0					
ANR	948359	Callee	r_cons_printf		948215	0					
ANR	948360	Identifier	r_cons_printf		948215	0					
ANR	948361	ArgumentList	"""%c %s\\n"""		948215	1					
ANR	948362	Argument	"""%c %s\\n"""		948215	0					
ANR	948363	PrimaryExpression	"""%c %s\\n"""		948215	0					
ANR	948364	Argument	file -> type		948215	1					
ANR	948365	PtrMemberAccess	file -> type		948215	0					
ANR	948366	Identifier	file		948215	0					
ANR	948367	Identifier	type		948215	1					
ANR	948368	Argument	file -> name		948215	2					
ANR	948369	PtrMemberAccess	file -> name		948215	0					
ANR	948370	Identifier	file		948215	0					
ANR	948371	Identifier	name		948215	1					
ANR	948372	ExpressionStatement	r_list_free ( list )	79:2:2331:2349	948215	9	True				
ANR	948373	CallExpression	r_list_free ( list )		948215	0					
ANR	948374	Callee	r_list_free		948215	0					
ANR	948375	Identifier	r_list_free		948215	0					
ANR	948376	ArgumentList	list		948215	1					
ANR	948377	Argument	list		948215	0					
ANR	948378	Identifier	list		948215	0					
ANR	948379	IdentifierDeclStatement	"const char * path = * input ? input : ""/"" ;"	81:1:2355:2392	948215	9	True				
ANR	948380	IdentifierDecl	"* path = * input ? input : ""/"""		948215	0					
ANR	948381	IdentifierDeclType	const char *		948215	0					
ANR	948382	Identifier	path		948215	1					
ANR	948383	AssignmentExpression	"* path = * input ? input : ""/"""		948215	2		=			
ANR	948384	Identifier	path		948215	0					
ANR	948385	ConditionalExpression	"* input ? input : ""/"""		948215	1					
ANR	948386	Condition	* input		948215	0					
ANR	948387	UnaryOperationExpression	* input		948215	0					
ANR	948388	UnaryOperator	*		948215	0					
ANR	948389	Identifier	input		948215	1					
ANR	948390	Identifier	input		948215	1					
ANR	948391	PrimaryExpression	"""/"""		948215	2					
ANR	948392	Statement	r_list_foreach	82:1:2395:2408	948215	10	True				
ANR	948393	Statement	(	82:16:2410:2410	948215	11	True				
ANR	948394	Statement	core	82:17:2411:2414	948215	12	True				
ANR	948395	Statement	->	82:21:2415:2416	948215	13	True				
ANR	948396	Statement	fs	82:23:2417:2418	948215	14	True				
ANR	948397	Statement	->	82:25:2419:2420	948215	15	True				
ANR	948398	Statement	roots	82:27:2421:2425	948215	16	True				
ANR	948399	Statement	","	82:32:2426:2426	948215	17	True				
ANR	948400	Statement	iter	82:34:2428:2431	948215	18	True				
ANR	948401	Statement	","	82:38:2432:2432	948215	19	True				
ANR	948402	Statement	root	82:40:2434:2437	948215	20	True				
ANR	948403	Statement	)	82:44:2438:2438	948215	21	True				
ANR	948404	CompoundStatement		27:46:594:594	948215	22					
ANR	948405	IfStatement	"if ( ! strncmp ( path , root -> path , strlen ( path ) ) )"		948215	0					
ANR	948406	Condition	"! strncmp ( path , root -> path , strlen ( path ) )"	84:6:2486:2527	948215	0	True				
ANR	948407	UnaryOperationExpression	"! strncmp ( path , root -> path , strlen ( path ) )"		948215	0					
ANR	948408	UnaryOperator	!		948215	0					
ANR	948409	CallExpression	"strncmp ( path , root -> path , strlen ( path ) )"		948215	1					
ANR	948410	Callee	strncmp		948215	0					
ANR	948411	Identifier	strncmp		948215	0					
ANR	948412	ArgumentList	path		948215	1					
ANR	948413	Argument	path		948215	0					
ANR	948414	Identifier	path		948215	0					
ANR	948415	Argument	root -> path		948215	1					
ANR	948416	PtrMemberAccess	root -> path		948215	0					
ANR	948417	Identifier	root		948215	0					
ANR	948418	Identifier	path		948215	1					
ANR	948419	Argument	strlen ( path )		948215	2					
ANR	948420	CallExpression	strlen ( path )		948215	0					
ANR	948421	Callee	strlen		948215	0					
ANR	948422	Identifier	strlen		948215	0					
ANR	948423	ArgumentList	path		948215	1					
ANR	948424	Argument	path		948215	0					
ANR	948425	Identifier	path		948215	0					
ANR	948426	CompoundStatement		31:3:726:767	948215	1					
ANR	948427	IdentifierDeclStatement	char * base = strdup ( root -> path ) ;	85:3:2535:2567	948215	0	True				
ANR	948428	IdentifierDecl	* base = strdup ( root -> path )		948215	0					
ANR	948429	IdentifierDeclType	char *		948215	0					
ANR	948430	Identifier	base		948215	1					
ANR	948431	AssignmentExpression	* base = strdup ( root -> path )		948215	2		=			
ANR	948432	Identifier	base		948215	0					
ANR	948433	CallExpression	strdup ( root -> path )		948215	1					
ANR	948434	Callee	strdup		948215	0					
ANR	948435	Identifier	strdup		948215	0					
ANR	948436	ArgumentList	root -> path		948215	1					
ANR	948437	Argument	root -> path		948215	0					
ANR	948438	PtrMemberAccess	root -> path		948215	0					
ANR	948439	Identifier	root		948215	0					
ANR	948440	Identifier	path		948215	1					
ANR	948441	IdentifierDeclStatement	"char * ls = ( char * ) r_str_lchr ( base , '/' ) ;"	86:3:2572:2613	948215	1	True				
ANR	948442	IdentifierDecl	"* ls = ( char * ) r_str_lchr ( base , '/' )"		948215	0					
ANR	948443	IdentifierDeclType	char *		948215	0					
ANR	948444	Identifier	ls		948215	1					
ANR	948445	AssignmentExpression	"* ls = ( char * ) r_str_lchr ( base , '/' )"		948215	2		=			
ANR	948446	Identifier	ls		948215	0					
ANR	948447	CastExpression	"( char * ) r_str_lchr ( base , '/' )"		948215	1					
ANR	948448	CastTarget	char *		948215	0					
ANR	948449	CallExpression	"r_str_lchr ( base , '/' )"		948215	1					
ANR	948450	Callee	r_str_lchr		948215	0					
ANR	948451	Identifier	r_str_lchr		948215	0					
ANR	948452	ArgumentList	base		948215	1					
ANR	948453	Argument	base		948215	0					
ANR	948454	Identifier	base		948215	0					
ANR	948455	Argument	'/'		948215	1					
ANR	948456	PrimaryExpression	'/'		948215	0					
ANR	948457	IfStatement	if ( ls )		948215	2					
ANR	948458	Condition	ls	87:7:2622:2623	948215	0	True				
ANR	948459	Identifier	ls		948215	0					
ANR	948460	CompoundStatement		32:11:780:780	948215	1					
ANR	948461	ExpressionStatement	ls ++	88:4:2632:2636	948215	0	True				
ANR	948462	PostIncDecOperationExpression	ls ++		948215	0					
ANR	948463	Identifier	ls		948215	0					
ANR	948464	IncDec	++		948215	1					
ANR	948465	ExpressionStatement	* ls = 0	89:4:2642:2649	948215	1	True				
ANR	948466	AssignmentExpression	* ls = 0		948215	0		=			
ANR	948467	UnaryOperationExpression	* ls		948215	0					
ANR	948468	UnaryOperator	*		948215	0					
ANR	948469	Identifier	ls		948215	1					
ANR	948470	PrimaryExpression	0		948215	1					
ANR	948471	IfStatement	"if ( ! strcmp ( path , base ) )"		948215	3					
ANR	948472	Condition	"! strcmp ( path , base )"	92:7:2702:2721	948215	0	True				
ANR	948473	UnaryOperationExpression	"! strcmp ( path , base )"		948215	0					
ANR	948474	UnaryOperator	!		948215	0					
ANR	948475	CallExpression	"strcmp ( path , base )"		948215	1					
ANR	948476	Callee	strcmp		948215	0					
ANR	948477	Identifier	strcmp		948215	0					
ANR	948478	ArgumentList	path		948215	1					
ANR	948479	Argument	path		948215	0					
ANR	948480	Identifier	path		948215	0					
ANR	948481	Argument	base		948215	1					
ANR	948482	Identifier	base		948215	0					
ANR	948483	CompoundStatement		37:29:878:878	948215	1					
ANR	948484	IfStatement	if ( isJSON )		948215	0					
ANR	948485	Condition	isJSON	93:8:2734:2739	948215	0	True				
ANR	948486	Identifier	isJSON		948215	0					
ANR	948487	CompoundStatement		38:16:896:896	948215	1					
ANR	948488	ExpressionStatement	pj_o ( pj )	94:5:2749:2758	948215	0	True				
ANR	948489	CallExpression	pj_o ( pj )		948215	0					
ANR	948490	Callee	pj_o		948215	0					
ANR	948491	Identifier	pj_o		948215	0					
ANR	948492	ArgumentList	pj		948215	1					
ANR	948493	Argument	pj		948215	0					
ANR	948494	Identifier	pj		948215	0					
ANR	948495	ExpressionStatement	"pj_ks ( pj , ""path"" , root -> path )"	95:5:2765:2795	948215	1	True				
ANR	948496	CallExpression	"pj_ks ( pj , ""path"" , root -> path )"		948215	0					
ANR	948497	Callee	pj_ks		948215	0					
ANR	948498	Identifier	pj_ks		948215	0					
ANR	948499	ArgumentList	pj		948215	1					
ANR	948500	Argument	pj		948215	0					
ANR	948501	Identifier	pj		948215	0					
ANR	948502	Argument	"""path"""		948215	1					
ANR	948503	PrimaryExpression	"""path"""		948215	0					
ANR	948504	Argument	root -> path		948215	2					
ANR	948505	PtrMemberAccess	root -> path		948215	0					
ANR	948506	Identifier	root		948215	0					
ANR	948507	Identifier	path		948215	1					
ANR	948508	ExpressionStatement	"pj_ks ( pj , ""type"" , ""mountpoint"" )"	96:5:2802:2834	948215	2	True				
ANR	948509	CallExpression	"pj_ks ( pj , ""type"" , ""mountpoint"" )"		948215	0					
ANR	948510	Callee	pj_ks		948215	0					
ANR	948511	Identifier	pj_ks		948215	0					
ANR	948512	ArgumentList	pj		948215	1					
ANR	948513	Argument	pj		948215	0					
ANR	948514	Identifier	pj		948215	0					
ANR	948515	Argument	"""type"""		948215	1					
ANR	948516	PrimaryExpression	"""type"""		948215	0					
ANR	948517	Argument	"""mountpoint"""		948215	2					
ANR	948518	PrimaryExpression	"""mountpoint"""		948215	0					
ANR	948519	ExpressionStatement	pj_end ( pj )	97:5:2841:2852	948215	3	True				
ANR	948520	CallExpression	pj_end ( pj )		948215	0					
ANR	948521	Callee	pj_end		948215	0					
ANR	948522	Identifier	pj_end		948215	0					
ANR	948523	ArgumentList	pj		948215	1					
ANR	948524	Argument	pj		948215	0					
ANR	948525	Identifier	pj		948215	0					
ANR	948526	ElseStatement	else		948215	0					
ANR	948527	CompoundStatement		43:11:1019:1019	948215	0					
ANR	948528	ExpressionStatement	"r_cons_printf ( ""m %s\\n"" , root -> path )"	99:5:2872:2908	948215	0	True				
ANR	948529	CallExpression	"r_cons_printf ( ""m %s\\n"" , root -> path )"		948215	0					
ANR	948530	Callee	r_cons_printf		948215	0					
ANR	948531	Identifier	r_cons_printf		948215	0					
ANR	948532	ArgumentList	"""m %s\\n"""		948215	1					
ANR	948533	Argument	"""m %s\\n"""		948215	0					
ANR	948534	PrimaryExpression	"""m %s\\n"""		948215	0					
ANR	948535	Argument	root -> path		948215	1					
ANR	948536	PtrMemberAccess	root -> path		948215	0					
ANR	948537	Identifier	root		948215	0					
ANR	948538	Identifier	path		948215	1					
ANR	948539	ExpressionStatement	free ( base )	102:3:2981:2992	948215	4	True				
ANR	948540	CallExpression	free ( base )		948215	0					
ANR	948541	Callee	free		948215	0					
ANR	948542	Identifier	free		948215	0					
ANR	948543	ArgumentList	base		948215	1					
ANR	948544	Argument	base		948215	0					
ANR	948545	Identifier	base		948215	0					
ANR	948546	IfStatement	if ( isJSON )		948215	23					
ANR	948547	Condition	isJSON	105:5:3006:3011	948215	0	True				
ANR	948548	Identifier	isJSON		948215	0					
ANR	948549	CompoundStatement		50:13:1168:1168	948215	1					
ANR	948550	ExpressionStatement	pj_end ( pj )	106:2:3018:3029	948215	0	True				
ANR	948551	CallExpression	pj_end ( pj )		948215	0					
ANR	948552	Callee	pj_end		948215	0					
ANR	948553	Identifier	pj_end		948215	0					
ANR	948554	ArgumentList	pj		948215	1					
ANR	948555	Argument	pj		948215	0					
ANR	948556	Identifier	pj		948215	0					
ANR	948557	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	107:2:3033:3071	948215	1	True				
ANR	948558	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		948215	0					
ANR	948559	Callee	r_cons_printf		948215	0					
ANR	948560	Identifier	r_cons_printf		948215	0					
ANR	948561	ArgumentList	"""%s\\n"""		948215	1					
ANR	948562	Argument	"""%s\\n"""		948215	0					
ANR	948563	PrimaryExpression	"""%s\\n"""		948215	0					
ANR	948564	Argument	pj_string ( pj )		948215	1					
ANR	948565	CallExpression	pj_string ( pj )		948215	0					
ANR	948566	Callee	pj_string		948215	0					
ANR	948567	Identifier	pj_string		948215	0					
ANR	948568	ArgumentList	pj		948215	1					
ANR	948569	Argument	pj		948215	0					
ANR	948570	Identifier	pj		948215	0					
ANR	948571	ExpressionStatement	pj_free ( pj )	108:2:3075:3087	948215	2	True				
ANR	948572	CallExpression	pj_free ( pj )		948215	0					
ANR	948573	Callee	pj_free		948215	0					
ANR	948574	Identifier	pj_free		948215	0					
ANR	948575	ArgumentList	pj		948215	1					
ANR	948576	Argument	pj		948215	0					
ANR	948577	Identifier	pj		948215	0					
ANR	948578	ReturnType	static void		948215	1					
ANR	948579	Identifier	cmd_mount_ls		948215	2					
ANR	948580	ParameterList	"RCore * core , const char * input"		948215	3					
ANR	948581	Parameter	RCore * core	56:26:1813:1823	948215	0	True				
ANR	948582	ParameterType	RCore *		948215	0					
ANR	948583	Identifier	core		948215	1					
ANR	948584	Parameter	const char * input	56:39:1826:1842	948215	1	True				
ANR	948585	ParameterType	const char *		948215	0					
ANR	948586	Identifier	input		948215	1					
ANR	948587	CFGEntryNode	ENTRY		948215		True				
ANR	948588	CFGExitNode	EXIT		948215		True				
ANR	948589	Symbol	pj_string		948215						
ANR	948590	Symbol	file -> name		948215						
ANR	948591	Symbol	ls		948215						
ANR	948592	Symbol	* input		948215						
ANR	948593	Symbol	* core		948215						
ANR	948594	Symbol	r_fs_dir		948215						
ANR	948595	Symbol	file -> type		948215						
ANR	948596	Symbol	path		948215						
ANR	948597	Symbol	strlen		948215						
ANR	948598	Symbol	strncmp		948215						
ANR	948599	Symbol	file		948215						
ANR	948600	Symbol	root		948215						
ANR	948601	Symbol	strcmp		948215						
ANR	948602	Symbol	NULL		948215						
ANR	948603	Symbol	iter		948215						
ANR	948604	Symbol	list		948215						
ANR	948605	Symbol	* file		948215						
ANR	948606	Symbol	* ls		948215						
ANR	948607	Symbol	core		948215						
ANR	948608	Symbol	input		948215						
ANR	948609	Symbol	t2s		948215						
ANR	948610	Symbol	r_str_lchr		948215						
ANR	948611	Symbol	isJSON		948215						
ANR	948612	Symbol	root -> path		948215						
ANR	948613	Symbol	r_str_trim_ro		948215						
ANR	948614	Symbol	pj		948215						
ANR	948615	Symbol	pj_new		948215						
ANR	948616	Symbol	core -> fs		948215						
ANR	948617	Symbol	* root		948215						
ANR	948618	Symbol	strdup		948215						
ANR	948619	Symbol	base		948215						
ANR	948620	Function	cmd_mount	112:0:3095:10333							
ANR	948621	FunctionDef	"cmd_mount (void * data , const char * _input)"		948620	0					
ANR	948622	CompoundStatement		112:53:3148:10333	948620	0					
ANR	948623	IdentifierDeclStatement	ut64 off = 0 ;	113:1:3151:3163	948620	0	True				
ANR	948624	IdentifierDecl	off = 0		948620	0					
ANR	948625	IdentifierDeclType	ut64		948620	0					
ANR	948626	Identifier	off		948620	1					
ANR	948627	AssignmentExpression	off = 0		948620	2		=			
ANR	948628	Identifier	off		948620	0					
ANR	948629	PrimaryExpression	0		948620	1					
ANR	948630	IdentifierDeclStatement	"char * input , * oinput , * ptr , * ptr2 ;"	114:1:3166:3199	948620	1	True				
ANR	948631	IdentifierDecl	* input		948620	0					
ANR	948632	IdentifierDeclType	char *		948620	0					
ANR	948633	Identifier	input		948620	1					
ANR	948634	IdentifierDecl	* oinput		948620	1					
ANR	948635	IdentifierDeclType	char *		948620	0					
ANR	948636	Identifier	oinput		948620	1					
ANR	948637	IdentifierDecl	* ptr		948620	2					
ANR	948638	IdentifierDeclType	char *		948620	0					
ANR	948639	Identifier	ptr		948620	1					
ANR	948640	IdentifierDecl	* ptr2		948620	3					
ANR	948641	IdentifierDeclType	char *		948620	0					
ANR	948642	Identifier	ptr2		948620	1					
ANR	948643	IdentifierDeclStatement	RList * list ;	115:1:3202:3213	948620	2	True				
ANR	948644	IdentifierDecl	* list		948620	0					
ANR	948645	IdentifierDeclType	RList *		948620	0					
ANR	948646	Identifier	list		948620	1					
ANR	948647	IdentifierDeclStatement	RListIter * iter ;	116:1:3216:3231	948620	3	True				
ANR	948648	IdentifierDecl	* iter		948620	0					
ANR	948649	IdentifierDeclType	RListIter *		948620	0					
ANR	948650	Identifier	iter		948620	1					
ANR	948651	IdentifierDeclStatement	RFSFile * file ;	117:1:3234:3247	948620	4	True				
ANR	948652	IdentifierDecl	* file		948620	0					
ANR	948653	IdentifierDeclType	RFSFile *		948620	0					
ANR	948654	Identifier	file		948620	1					
ANR	948655	IdentifierDeclStatement	RFSRoot * root ;	118:1:3250:3263	948620	5	True				
ANR	948656	IdentifierDecl	* root		948620	0					
ANR	948657	IdentifierDeclType	RFSRoot *		948620	0					
ANR	948658	Identifier	root		948620	1					
ANR	948659	IdentifierDeclStatement	RFSPlugin * plug ;	119:1:3266:3281	948620	6	True				
ANR	948660	IdentifierDecl	* plug		948620	0					
ANR	948661	IdentifierDeclType	RFSPlugin *		948620	0					
ANR	948662	Identifier	plug		948620	1					
ANR	948663	IdentifierDeclStatement	RFSPartition * part ;	120:1:3284:3302	948620	7	True				
ANR	948664	IdentifierDecl	* part		948620	0					
ANR	948665	IdentifierDeclType	RFSPartition *		948620	0					
ANR	948666	Identifier	part		948620	1					
ANR	948667	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	121:1:3305:3332	948620	8	True				
ANR	948668	IdentifierDecl	* core = ( RCore * ) data		948620	0					
ANR	948669	IdentifierDeclType	RCore *		948620	0					
ANR	948670	Identifier	core		948620	1					
ANR	948671	AssignmentExpression	* core = ( RCore * ) data		948620	2		=			
ANR	948672	Identifier	core		948620	0					
ANR	948673	CastExpression	( RCore * ) data		948620	1					
ANR	948674	CastTarget	RCore *		948620	0					
ANR	948675	Identifier	data		948620	1					
ANR	948676	IfStatement	"if ( ! strncmp ( ""kdir"" , _input , 4 ) )"		948620	9					
ANR	948677	Condition	"! strncmp ( ""kdir"" , _input , 4 )"	123:5:3340:3367	948620	0	True				
ANR	948678	UnaryOperationExpression	"! strncmp ( ""kdir"" , _input , 4 )"		948620	0					
ANR	948679	UnaryOperator	!		948620	0					
ANR	948680	CallExpression	"strncmp ( ""kdir"" , _input , 4 )"		948620	1					
ANR	948681	Callee	strncmp		948620	0					
ANR	948682	Identifier	strncmp		948620	0					
ANR	948683	ArgumentList	"""kdir"""		948620	1					
ANR	948684	Argument	"""kdir"""		948620	0					
ANR	948685	PrimaryExpression	"""kdir"""		948620	0					
ANR	948686	Argument	_input		948620	1					
ANR	948687	Identifier	_input		948620	0					
ANR	948688	Argument	4		948620	2					
ANR	948689	PrimaryExpression	4		948620	0					
ANR	948690	CompoundStatement		12:35:221:221	948620	1					
ANR	948691	ReturnStatement	"return cmd_mkdir ( data , _input ) ;"	124:2:3374:3405	948620	0	True				
ANR	948692	CallExpression	"cmd_mkdir ( data , _input )"		948620	0					
ANR	948693	Callee	cmd_mkdir		948620	0					
ANR	948694	Identifier	cmd_mkdir		948620	0					
ANR	948695	ArgumentList	data		948620	1					
ANR	948696	Argument	data		948620	0					
ANR	948697	Identifier	data		948620	0					
ANR	948698	Argument	_input		948620	1					
ANR	948699	Identifier	_input		948620	0					
ANR	948700	IfStatement	"if ( ! strncmp ( ""v"" , _input , 1 ) )"		948620	10					
ANR	948701	Condition	"! strncmp ( ""v"" , _input , 1 )"	126:5:3415:3439	948620	0	True				
ANR	948702	UnaryOperationExpression	"! strncmp ( ""v"" , _input , 1 )"		948620	0					
ANR	948703	UnaryOperator	!		948620	0					
ANR	948704	CallExpression	"strncmp ( ""v"" , _input , 1 )"		948620	1					
ANR	948705	Callee	strncmp		948620	0					
ANR	948706	Identifier	strncmp		948620	0					
ANR	948707	ArgumentList	"""v"""		948620	1					
ANR	948708	Argument	"""v"""		948620	0					
ANR	948709	PrimaryExpression	"""v"""		948620	0					
ANR	948710	Argument	_input		948620	1					
ANR	948711	Identifier	_input		948620	0					
ANR	948712	Argument	1		948620	2					
ANR	948713	PrimaryExpression	1		948620	0					
ANR	948714	CompoundStatement		15:32:293:293	948620	1					
ANR	948715	ReturnStatement	"return cmd_mv ( data , _input ) ;"	127:2:3446:3474	948620	0	True				
ANR	948716	CallExpression	"cmd_mv ( data , _input )"		948620	0					
ANR	948717	Callee	cmd_mv		948620	0					
ANR	948718	Identifier	cmd_mv		948620	0					
ANR	948719	ArgumentList	data		948620	1					
ANR	948720	Argument	data		948620	0					
ANR	948721	Identifier	data		948620	0					
ANR	948722	Argument	_input		948620	1					
ANR	948723	Identifier	_input		948620	0					
ANR	948724	ExpressionStatement	input = oinput = strdup ( _input )	129:1:3480:3512	948620	11	True				
ANR	948725	AssignmentExpression	input = oinput = strdup ( _input )		948620	0		=			
ANR	948726	Identifier	input		948620	0					
ANR	948727	AssignmentExpression	oinput = strdup ( _input )		948620	1		=			
ANR	948728	Identifier	oinput		948620	0					
ANR	948729	CallExpression	strdup ( _input )		948620	1					
ANR	948730	Callee	strdup		948620	0					
ANR	948731	Identifier	strdup		948620	0					
ANR	948732	ArgumentList	_input		948620	1					
ANR	948733	Argument	_input		948620	0					
ANR	948734	Identifier	_input		948620	0					
ANR	948735	SwitchStatement	switch ( * input )		948620	12					
ANR	948736	Condition	* input	131:9:3524:3529	948620	0	True				
ANR	948737	UnaryOperationExpression	* input		948620	0					
ANR	948738	UnaryOperator	*		948620	0					
ANR	948739	Identifier	input		948620	1					
ANR	948740	CompoundStatement		20:17:383:383	948620	1					
ANR	948741	Label	case ' ' :	132:1:3535:3543	948620	0	True				
ANR	948742	ExpressionStatement	input = ( char * ) r_str_trim_ro ( input + 1 )	133:2:3547:3588	948620	1	True				
ANR	948743	AssignmentExpression	input = ( char * ) r_str_trim_ro ( input + 1 )		948620	0		=			
ANR	948744	Identifier	input		948620	0					
ANR	948745	CastExpression	( char * ) r_str_trim_ro ( input + 1 )		948620	1					
ANR	948746	CastTarget	char *		948620	0					
ANR	948747	CallExpression	r_str_trim_ro ( input + 1 )		948620	1					
ANR	948748	Callee	r_str_trim_ro		948620	0					
ANR	948749	Identifier	r_str_trim_ro		948620	0					
ANR	948750	ArgumentList	input + 1		948620	1					
ANR	948751	Argument	input + 1		948620	0					
ANR	948752	AdditiveExpression	input + 1		948620	0		+			
ANR	948753	Identifier	input		948620	0					
ANR	948754	PrimaryExpression	1		948620	1					
ANR	948755	ExpressionStatement	"ptr = strchr ( input , ' ' )"	134:2:3592:3617	948620	2	True				
ANR	948756	AssignmentExpression	"ptr = strchr ( input , ' ' )"		948620	0		=			
ANR	948757	Identifier	ptr		948620	0					
ANR	948758	CallExpression	"strchr ( input , ' ' )"		948620	1					
ANR	948759	Callee	strchr		948620	0					
ANR	948760	Identifier	strchr		948620	0					
ANR	948761	ArgumentList	input		948620	1					
ANR	948762	Argument	input		948620	0					
ANR	948763	Identifier	input		948620	0					
ANR	948764	Argument	' '		948620	1					
ANR	948765	PrimaryExpression	' '		948620	0					
ANR	948766	IfStatement	if ( ptr )		948620	3					
ANR	948767	Condition	ptr	135:6:3625:3627	948620	0	True				
ANR	948768	Identifier	ptr		948620	0					
ANR	948769	CompoundStatement		36:3:758:782	948620	1					
ANR	948770	ExpressionStatement	* ptr = 0	136:3:3635:3643	948620	0	True				
ANR	948771	AssignmentExpression	* ptr = 0		948620	0		=			
ANR	948772	UnaryOperationExpression	* ptr		948620	0					
ANR	948773	UnaryOperator	*		948620	0					
ANR	948774	Identifier	ptr		948620	1					
ANR	948775	PrimaryExpression	0		948620	1					
ANR	948776	ExpressionStatement	ptr = ( char * ) r_str_trim_ro ( ptr + 1 )	137:3:3648:3685	948620	1	True				
ANR	948777	AssignmentExpression	ptr = ( char * ) r_str_trim_ro ( ptr + 1 )		948620	0		=			
ANR	948778	Identifier	ptr		948620	0					
ANR	948779	CastExpression	( char * ) r_str_trim_ro ( ptr + 1 )		948620	1					
ANR	948780	CastTarget	char *		948620	0					
ANR	948781	CallExpression	r_str_trim_ro ( ptr + 1 )		948620	1					
ANR	948782	Callee	r_str_trim_ro		948620	0					
ANR	948783	Identifier	r_str_trim_ro		948620	0					
ANR	948784	ArgumentList	ptr + 1		948620	1					
ANR	948785	Argument	ptr + 1		948620	0					
ANR	948786	AdditiveExpression	ptr + 1		948620	0		+			
ANR	948787	Identifier	ptr		948620	0					
ANR	948788	PrimaryExpression	1		948620	1					
ANR	948789	ExpressionStatement	"ptr2 = strchr ( ptr , ' ' )"	138:3:3690:3714	948620	2	True				
ANR	948790	AssignmentExpression	"ptr2 = strchr ( ptr , ' ' )"		948620	0		=			
ANR	948791	Identifier	ptr2		948620	0					
ANR	948792	CallExpression	"strchr ( ptr , ' ' )"		948620	1					
ANR	948793	Callee	strchr		948620	0					
ANR	948794	Identifier	strchr		948620	0					
ANR	948795	ArgumentList	ptr		948620	1					
ANR	948796	Argument	ptr		948620	0					
ANR	948797	Identifier	ptr		948620	0					
ANR	948798	Argument	' '		948620	1					
ANR	948799	PrimaryExpression	' '		948620	0					
ANR	948800	IfStatement	if ( ptr2 )		948620	3					
ANR	948801	Condition	ptr2	139:7:3723:3726	948620	0	True				
ANR	948802	Identifier	ptr2		948620	0					
ANR	948803	CompoundStatement		28:13:580:580	948620	1					
ANR	948804	ExpressionStatement	* ptr2 = 0	140:4:3735:3744	948620	0	True				
ANR	948805	AssignmentExpression	* ptr2 = 0		948620	0		=			
ANR	948806	UnaryOperationExpression	* ptr2		948620	0					
ANR	948807	UnaryOperator	*		948620	0					
ANR	948808	Identifier	ptr2		948620	1					
ANR	948809	PrimaryExpression	0		948620	1					
ANR	948810	ExpressionStatement	"off = r_num_math ( core -> num , ptr2 + 1 )"	141:4:3750:3786	948620	1	True				
ANR	948811	AssignmentExpression	"off = r_num_math ( core -> num , ptr2 + 1 )"		948620	0		=			
ANR	948812	Identifier	off		948620	0					
ANR	948813	CallExpression	"r_num_math ( core -> num , ptr2 + 1 )"		948620	1					
ANR	948814	Callee	r_num_math		948620	0					
ANR	948815	Identifier	r_num_math		948620	0					
ANR	948816	ArgumentList	core -> num		948620	1					
ANR	948817	Argument	core -> num		948620	0					
ANR	948818	PtrMemberAccess	core -> num		948620	0					
ANR	948819	Identifier	core		948620	0					
ANR	948820	Identifier	num		948620	1					
ANR	948821	Argument	ptr2 + 1		948620	1					
ANR	948822	AdditiveExpression	ptr2 + 1		948620	0		+			
ANR	948823	Identifier	ptr2		948620	0					
ANR	948824	PrimaryExpression	1		948620	1					
ANR	948825	ExpressionStatement	input = ( char * ) r_str_trim_ro ( input )	143:3:3796:3833	948620	4	True				
ANR	948826	AssignmentExpression	input = ( char * ) r_str_trim_ro ( input )		948620	0		=			
ANR	948827	Identifier	input		948620	0					
ANR	948828	CastExpression	( char * ) r_str_trim_ro ( input )		948620	1					
ANR	948829	CastTarget	char *		948620	0					
ANR	948830	CallExpression	r_str_trim_ro ( input )		948620	1					
ANR	948831	Callee	r_str_trim_ro		948620	0					
ANR	948832	Identifier	r_str_trim_ro		948620	0					
ANR	948833	ArgumentList	input		948620	1					
ANR	948834	Argument	input		948620	0					
ANR	948835	Identifier	input		948620	0					
ANR	948836	ExpressionStatement	ptr = ( char * ) r_str_trim_ro ( ptr )	144:3:3838:3870	948620	5	True				
ANR	948837	AssignmentExpression	ptr = ( char * ) r_str_trim_ro ( ptr )		948620	0		=			
ANR	948838	Identifier	ptr		948620	0					
ANR	948839	CastExpression	( char * ) r_str_trim_ro ( ptr )		948620	1					
ANR	948840	CastTarget	char *		948620	0					
ANR	948841	CallExpression	r_str_trim_ro ( ptr )		948620	1					
ANR	948842	Callee	r_str_trim_ro		948620	0					
ANR	948843	Identifier	r_str_trim_ro		948620	0					
ANR	948844	ArgumentList	ptr		948620	1					
ANR	948845	Argument	ptr		948620	0					
ANR	948846	Identifier	ptr		948620	0					
ANR	948847	IdentifierDeclStatement	const char * mountp = input ;	146:3:3876:3902	948620	6	True				
ANR	948848	IdentifierDecl	* mountp = input		948620	0					
ANR	948849	IdentifierDeclType	const char *		948620	0					
ANR	948850	Identifier	mountp		948620	1					
ANR	948851	AssignmentExpression	* mountp = input		948620	2		=			
ANR	948852	Identifier	input		948620	0					
ANR	948853	Identifier	input		948620	1					
ANR	948854	IdentifierDeclStatement	const char * fstype = ptr ;	147:3:3907:3931	948620	7	True				
ANR	948855	IdentifierDecl	* fstype = ptr		948620	0					
ANR	948856	IdentifierDeclType	const char *		948620	0					
ANR	948857	Identifier	fstype		948620	1					
ANR	948858	AssignmentExpression	* fstype = ptr		948620	2		=			
ANR	948859	Identifier	ptr		948620	0					
ANR	948860	Identifier	ptr		948620	1					
ANR	948861	IfStatement	if ( * mountp != '/' )		948620	8					
ANR	948862	Condition	* mountp != '/'	148:7:3940:3953	948620	0	True				
ANR	948863	EqualityExpression	* mountp != '/'		948620	0		!=			
ANR	948864	UnaryOperationExpression	* mountp		948620	0					
ANR	948865	UnaryOperator	*		948620	0					
ANR	948866	Identifier	mountp		948620	1					
ANR	948867	PrimaryExpression	'/'		948620	1					
ANR	948868	CompoundStatement		37:23:807:807	948620	1					
ANR	948869	IfStatement	if ( * fstype != '/' )		948620	0					
ANR	948870	Condition	* fstype != '/'	149:8:3966:3979	948620	0	True				
ANR	948871	EqualityExpression	* fstype != '/'		948620	0		!=			
ANR	948872	UnaryOperationExpression	* fstype		948620	0					
ANR	948873	UnaryOperator	*		948620	0					
ANR	948874	Identifier	fstype		948620	1					
ANR	948875	PrimaryExpression	'/'		948620	1					
ANR	948876	CompoundStatement		38:24:833:833	948620	1					
ANR	948877	ExpressionStatement	"eprintf ( ""Invalid mountpoint\\n"" )"	150:5:3989:4021	948620	0	True				
ANR	948878	CallExpression	"eprintf ( ""Invalid mountpoint\\n"" )"		948620	0					
ANR	948879	Callee	eprintf		948620	0					
ANR	948880	Identifier	eprintf		948620	0					
ANR	948881	ArgumentList	"""Invalid mountpoint\\n"""		948620	1					
ANR	948882	Argument	"""Invalid mountpoint\\n"""		948620	0					
ANR	948883	PrimaryExpression	"""Invalid mountpoint\\n"""		948620	0					
ANR	948884	ReturnStatement	return 0 ;	151:5:4028:4036	948620	1	True				
ANR	948885	PrimaryExpression	0		948620	0					
ANR	948886	ExpressionStatement	mountp = ptr	153:4:4048:4060	948620	1	True				
ANR	948887	AssignmentExpression	mountp = ptr		948620	0		=			
ANR	948888	Identifier	mountp		948620	0					
ANR	948889	Identifier	ptr		948620	1					
ANR	948890	ExpressionStatement	fstype = input	154:4:4066:4080	948620	2	True				
ANR	948891	AssignmentExpression	fstype = input		948620	0		=			
ANR	948892	Identifier	fstype		948620	0					
ANR	948893	Identifier	input		948620	1					
ANR	948894	IfStatement	"if ( ! r_fs_mount ( core -> fs , fstype , mountp , off ) )"		948620	9					
ANR	948895	Condition	"! r_fs_mount ( core -> fs , fstype , mountp , off )"	157:7:4095:4137	948620	0	True				
ANR	948896	UnaryOperationExpression	"! r_fs_mount ( core -> fs , fstype , mountp , off )"		948620	0					
ANR	948897	UnaryOperator	!		948620	0					
ANR	948898	CallExpression	"r_fs_mount ( core -> fs , fstype , mountp , off )"		948620	1					
ANR	948899	Callee	r_fs_mount		948620	0					
ANR	948900	Identifier	r_fs_mount		948620	0					
ANR	948901	ArgumentList	core -> fs		948620	1					
ANR	948902	Argument	core -> fs		948620	0					
ANR	948903	PtrMemberAccess	core -> fs		948620	0					
ANR	948904	Identifier	core		948620	0					
ANR	948905	Identifier	fs		948620	1					
ANR	948906	Argument	fstype		948620	1					
ANR	948907	Identifier	fstype		948620	0					
ANR	948908	Argument	mountp		948620	2					
ANR	948909	Identifier	mountp		948620	0					
ANR	948910	Argument	off		948620	3					
ANR	948911	Identifier	off		948620	0					
ANR	948912	CompoundStatement		46:52:991:991	948620	1					
ANR	948913	ExpressionStatement	"eprintf ( ""Cannot mount %s\\n"" , input )"	158:4:4146:4182	948620	0	True				
ANR	948914	CallExpression	"eprintf ( ""Cannot mount %s\\n"" , input )"		948620	0					
ANR	948915	Callee	eprintf		948620	0					
ANR	948916	Identifier	eprintf		948620	0					
ANR	948917	ArgumentList	"""Cannot mount %s\\n"""		948620	1					
ANR	948918	Argument	"""Cannot mount %s\\n"""		948620	0					
ANR	948919	PrimaryExpression	"""Cannot mount %s\\n"""		948620	0					
ANR	948920	Argument	input		948620	1					
ANR	948921	Identifier	input		948620	0					
ANR	948922	ElseStatement	else		948620	0					
ANR	948923	CompoundStatement		49:9:1049:1049	948620	0					
ANR	948924	IfStatement	"if ( ! ( ptr = r_fs_name ( core -> fs , core -> offset ) ) )"		948620	0					
ANR	948925	Condition	"! ( ptr = r_fs_name ( core -> fs , core -> offset ) )"	161:7:4207:4249	948620	0	True				
ANR	948926	UnaryOperationExpression	"! ( ptr = r_fs_name ( core -> fs , core -> offset ) )"		948620	0					
ANR	948927	UnaryOperator	!		948620	0					
ANR	948928	AssignmentExpression	"ptr = r_fs_name ( core -> fs , core -> offset )"		948620	1		=			
ANR	948929	Identifier	ptr		948620	0					
ANR	948930	CallExpression	"r_fs_name ( core -> fs , core -> offset )"		948620	1					
ANR	948931	Callee	r_fs_name		948620	0					
ANR	948932	Identifier	r_fs_name		948620	0					
ANR	948933	ArgumentList	core -> fs		948620	1					
ANR	948934	Argument	core -> fs		948620	0					
ANR	948935	PtrMemberAccess	core -> fs		948620	0					
ANR	948936	Identifier	core		948620	0					
ANR	948937	Identifier	fs		948620	1					
ANR	948938	Argument	core -> offset		948620	1					
ANR	948939	PtrMemberAccess	core -> offset		948620	0					
ANR	948940	Identifier	core		948620	0					
ANR	948941	Identifier	offset		948620	1					
ANR	948942	CompoundStatement		50:52:1103:1103	948620	1					
ANR	948943	ExpressionStatement	"eprintf ( ""Unknown filesystem type\\n"" )"	162:4:4258:4295	948620	0	True				
ANR	948944	CallExpression	"eprintf ( ""Unknown filesystem type\\n"" )"		948620	0					
ANR	948945	Callee	eprintf		948620	0					
ANR	948946	Identifier	eprintf		948620	0					
ANR	948947	ArgumentList	"""Unknown filesystem type\\n"""		948620	1					
ANR	948948	Argument	"""Unknown filesystem type\\n"""		948620	0					
ANR	948949	PrimaryExpression	"""Unknown filesystem type\\n"""		948620	0					
ANR	948950	IfStatement	"if ( ! r_fs_mount ( core -> fs , ptr , input , core -> offset ) )"		948620	1					
ANR	948951	Condition	"! r_fs_mount ( core -> fs , ptr , input , core -> offset )"	164:7:4309:4356	948620	0	True				
ANR	948952	UnaryOperationExpression	"! r_fs_mount ( core -> fs , ptr , input , core -> offset )"		948620	0					
ANR	948953	UnaryOperator	!		948620	0					
ANR	948954	CallExpression	"r_fs_mount ( core -> fs , ptr , input , core -> offset )"		948620	1					
ANR	948955	Callee	r_fs_mount		948620	0					
ANR	948956	Identifier	r_fs_mount		948620	0					
ANR	948957	ArgumentList	core -> fs		948620	1					
ANR	948958	Argument	core -> fs		948620	0					
ANR	948959	PtrMemberAccess	core -> fs		948620	0					
ANR	948960	Identifier	core		948620	0					
ANR	948961	Identifier	fs		948620	1					
ANR	948962	Argument	ptr		948620	1					
ANR	948963	Identifier	ptr		948620	0					
ANR	948964	Argument	input		948620	2					
ANR	948965	Identifier	input		948620	0					
ANR	948966	Argument	core -> offset		948620	3					
ANR	948967	PtrMemberAccess	core -> offset		948620	0					
ANR	948968	Identifier	core		948620	0					
ANR	948969	Identifier	offset		948620	1					
ANR	948970	CompoundStatement		53:57:1210:1210	948620	1					
ANR	948971	ExpressionStatement	"eprintf ( ""Cannot mount %s\\n"" , input )"	165:4:4365:4401	948620	0	True				
ANR	948972	CallExpression	"eprintf ( ""Cannot mount %s\\n"" , input )"		948620	0					
ANR	948973	Callee	eprintf		948620	0					
ANR	948974	Identifier	eprintf		948620	0					
ANR	948975	ArgumentList	"""Cannot mount %s\\n"""		948620	1					
ANR	948976	Argument	"""Cannot mount %s\\n"""		948620	0					
ANR	948977	PrimaryExpression	"""Cannot mount %s\\n"""		948620	0					
ANR	948978	Argument	input		948620	1					
ANR	948979	Identifier	input		948620	0					
ANR	948980	ExpressionStatement	free ( ptr )	167:3:4411:4421	948620	2	True				
ANR	948981	CallExpression	free ( ptr )		948620	0					
ANR	948982	Callee	free		948620	0					
ANR	948983	Identifier	free		948620	0					
ANR	948984	ArgumentList	ptr		948620	1					
ANR	948985	Argument	ptr		948620	0					
ANR	948986	Identifier	ptr		948620	0					
ANR	948987	BreakStatement	break ;	169:2:4429:4434	948620	4	True				
ANR	948988	Label	case '-' :	170:1:4437:4445	948620	5	True				
ANR	948989	ExpressionStatement	"r_fs_umount ( core -> fs , input + 1 )"	171:2:4449:4480	948620	6	True				
ANR	948990	CallExpression	"r_fs_umount ( core -> fs , input + 1 )"		948620	0					
ANR	948991	Callee	r_fs_umount		948620	0					
ANR	948992	Identifier	r_fs_umount		948620	0					
ANR	948993	ArgumentList	core -> fs		948620	1					
ANR	948994	Argument	core -> fs		948620	0					
ANR	948995	PtrMemberAccess	core -> fs		948620	0					
ANR	948996	Identifier	core		948620	0					
ANR	948997	Identifier	fs		948620	1					
ANR	948998	Argument	input + 1		948620	1					
ANR	948999	AdditiveExpression	input + 1		948620	0		+			
ANR	949000	Identifier	input		948620	0					
ANR	949001	PrimaryExpression	1		948620	1					
ANR	949002	BreakStatement	break ;	172:2:4484:4489	948620	7	True				
ANR	949003	Label	case 'j' :	173:1:4492:4500	948620	8	True				
ANR	949004	CompoundStatement		64:3:1360:1378	948620	9					
ANR	949005	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	175:3:4509:4527	948620	0	True				
ANR	949006	IdentifierDecl	* pj = pj_new ( )		948620	0					
ANR	949007	IdentifierDeclType	PJ *		948620	0					
ANR	949008	Identifier	pj		948620	1					
ANR	949009	AssignmentExpression	* pj = pj_new ( )		948620	2		=			
ANR	949010	Identifier	pj		948620	0					
ANR	949011	CallExpression	pj_new ( )		948620	1					
ANR	949012	Callee	pj_new		948620	0					
ANR	949013	Identifier	pj_new		948620	0					
ANR	949014	ArgumentList			948620	1					
ANR	949015	ExpressionStatement	pj_o ( pj )	176:3:4532:4541	948620	1	True				
ANR	949016	CallExpression	pj_o ( pj )		948620	0					
ANR	949017	Callee	pj_o		948620	0					
ANR	949018	Identifier	pj_o		948620	0					
ANR	949019	ArgumentList	pj		948620	1					
ANR	949020	Argument	pj		948620	0					
ANR	949021	Identifier	pj		948620	0					
ANR	949022	ExpressionStatement	"pj_k ( pj , ""mountpoints"" )"	177:3:4546:4570	948620	2	True				
ANR	949023	CallExpression	"pj_k ( pj , ""mountpoints"" )"		948620	0					
ANR	949024	Callee	pj_k		948620	0					
ANR	949025	Identifier	pj_k		948620	0					
ANR	949026	ArgumentList	pj		948620	1					
ANR	949027	Argument	pj		948620	0					
ANR	949028	Identifier	pj		948620	0					
ANR	949029	Argument	"""mountpoints"""		948620	1					
ANR	949030	PrimaryExpression	"""mountpoints"""		948620	0					
ANR	949031	ExpressionStatement	pj_a ( pj )	178:3:4575:4584	948620	3	True				
ANR	949032	CallExpression	pj_a ( pj )		948620	0					
ANR	949033	Callee	pj_a		948620	0					
ANR	949034	Identifier	pj_a		948620	0					
ANR	949035	ArgumentList	pj		948620	1					
ANR	949036	Argument	pj		948620	0					
ANR	949037	Identifier	pj		948620	0					
ANR	949038	Statement	r_list_foreach	179:3:4589:4602	948620	4	True				
ANR	949039	Statement	(	179:18:4604:4604	948620	5	True				
ANR	949040	Statement	core	179:19:4605:4608	948620	6	True				
ANR	949041	Statement	->	179:23:4609:4610	948620	7	True				
ANR	949042	Statement	fs	179:25:4611:4612	948620	8	True				
ANR	949043	Statement	->	179:27:4613:4614	948620	9	True				
ANR	949044	Statement	roots	179:29:4615:4619	948620	10	True				
ANR	949045	Statement	","	179:34:4620:4620	948620	11	True				
ANR	949046	Statement	iter	179:36:4622:4625	948620	12	True				
ANR	949047	Statement	","	179:40:4626:4626	948620	13	True				
ANR	949048	Statement	root	179:42:4628:4631	948620	14	True				
ANR	949049	Statement	)	179:46:4632:4632	948620	15	True				
ANR	949050	CompoundStatement		68:48:1485:1485	948620	16					
ANR	949051	ExpressionStatement	pj_o ( pj )	180:4:4640:4649	948620	0	True				
ANR	949052	CallExpression	pj_o ( pj )		948620	0					
ANR	949053	Callee	pj_o		948620	0					
ANR	949054	Identifier	pj_o		948620	0					
ANR	949055	ArgumentList	pj		948620	1					
ANR	949056	Argument	pj		948620	0					
ANR	949057	Identifier	pj		948620	0					
ANR	949058	ExpressionStatement	"pj_ks ( pj , ""path"" , root -> path )"	181:4:4655:4685	948620	1	True				
ANR	949059	CallExpression	"pj_ks ( pj , ""path"" , root -> path )"		948620	0					
ANR	949060	Callee	pj_ks		948620	0					
ANR	949061	Identifier	pj_ks		948620	0					
ANR	949062	ArgumentList	pj		948620	1					
ANR	949063	Argument	pj		948620	0					
ANR	949064	Identifier	pj		948620	0					
ANR	949065	Argument	"""path"""		948620	1					
ANR	949066	PrimaryExpression	"""path"""		948620	0					
ANR	949067	Argument	root -> path		948620	2					
ANR	949068	PtrMemberAccess	root -> path		948620	0					
ANR	949069	Identifier	root		948620	0					
ANR	949070	Identifier	path		948620	1					
ANR	949071	ExpressionStatement	"pj_ks ( pj , ""plugin"" , root -> p -> name )"	182:4:4691:4726	948620	2	True				
ANR	949072	CallExpression	"pj_ks ( pj , ""plugin"" , root -> p -> name )"		948620	0					
ANR	949073	Callee	pj_ks		948620	0					
ANR	949074	Identifier	pj_ks		948620	0					
ANR	949075	ArgumentList	pj		948620	1					
ANR	949076	Argument	pj		948620	0					
ANR	949077	Identifier	pj		948620	0					
ANR	949078	Argument	"""plugin"""		948620	1					
ANR	949079	PrimaryExpression	"""plugin"""		948620	0					
ANR	949080	Argument	root -> p -> name		948620	2					
ANR	949081	PtrMemberAccess	root -> p -> name		948620	0					
ANR	949082	PtrMemberAccess	root -> p		948620	0					
ANR	949083	Identifier	root		948620	0					
ANR	949084	Identifier	p		948620	1					
ANR	949085	Identifier	name		948620	1					
ANR	949086	ExpressionStatement	"pj_kn ( pj , ""offset"" , root -> delta )"	183:4:4732:4765	948620	3	True				
ANR	949087	CallExpression	"pj_kn ( pj , ""offset"" , root -> delta )"		948620	0					
ANR	949088	Callee	pj_kn		948620	0					
ANR	949089	Identifier	pj_kn		948620	0					
ANR	949090	ArgumentList	pj		948620	1					
ANR	949091	Argument	pj		948620	0					
ANR	949092	Identifier	pj		948620	0					
ANR	949093	Argument	"""offset"""		948620	1					
ANR	949094	PrimaryExpression	"""offset"""		948620	0					
ANR	949095	Argument	root -> delta		948620	2					
ANR	949096	PtrMemberAccess	root -> delta		948620	0					
ANR	949097	Identifier	root		948620	0					
ANR	949098	Identifier	delta		948620	1					
ANR	949099	ExpressionStatement	pj_end ( pj )	184:4:4771:4782	948620	4	True				
ANR	949100	CallExpression	pj_end ( pj )		948620	0					
ANR	949101	Callee	pj_end		948620	0					
ANR	949102	Identifier	pj_end		948620	0					
ANR	949103	ArgumentList	pj		948620	1					
ANR	949104	Argument	pj		948620	0					
ANR	949105	Identifier	pj		948620	0					
ANR	949106	ExpressionStatement	pj_end ( pj )	186:3:4792:4803	948620	17	True				
ANR	949107	CallExpression	pj_end ( pj )		948620	0					
ANR	949108	Callee	pj_end		948620	0					
ANR	949109	Identifier	pj_end		948620	0					
ANR	949110	ArgumentList	pj		948620	1					
ANR	949111	Argument	pj		948620	0					
ANR	949112	Identifier	pj		948620	0					
ANR	949113	ExpressionStatement	"pj_k ( pj , ""plugins"" )"	187:3:4808:4828	948620	18	True				
ANR	949114	CallExpression	"pj_k ( pj , ""plugins"" )"		948620	0					
ANR	949115	Callee	pj_k		948620	0					
ANR	949116	Identifier	pj_k		948620	0					
ANR	949117	ArgumentList	pj		948620	1					
ANR	949118	Argument	pj		948620	0					
ANR	949119	Identifier	pj		948620	0					
ANR	949120	Argument	"""plugins"""		948620	1					
ANR	949121	PrimaryExpression	"""plugins"""		948620	0					
ANR	949122	ExpressionStatement	pj_a ( pj )	188:3:4833:4842	948620	19	True				
ANR	949123	CallExpression	pj_a ( pj )		948620	0					
ANR	949124	Callee	pj_a		948620	0					
ANR	949125	Identifier	pj_a		948620	0					
ANR	949126	ArgumentList	pj		948620	1					
ANR	949127	Argument	pj		948620	0					
ANR	949128	Identifier	pj		948620	0					
ANR	949129	Statement	r_list_foreach	189:3:4847:4860	948620	20	True				
ANR	949130	Statement	(	189:18:4862:4862	948620	21	True				
ANR	949131	Statement	core	189:19:4863:4866	948620	22	True				
ANR	949132	Statement	->	189:23:4867:4868	948620	23	True				
ANR	949133	Statement	fs	189:25:4869:4870	948620	24	True				
ANR	949134	Statement	->	189:27:4871:4872	948620	25	True				
ANR	949135	Statement	plugins	189:29:4873:4879	948620	26	True				
ANR	949136	Statement	","	189:36:4880:4880	948620	27	True				
ANR	949137	Statement	iter	189:38:4882:4885	948620	28	True				
ANR	949138	Statement	","	189:42:4886:4886	948620	29	True				
ANR	949139	Statement	plug	189:44:4888:4891	948620	30	True				
ANR	949140	Statement	)	189:48:4892:4892	948620	31	True				
ANR	949141	CompoundStatement		78:50:1745:1745	948620	32					
ANR	949142	ExpressionStatement	pj_o ( pj )	190:4:4900:4909	948620	0	True				
ANR	949143	CallExpression	pj_o ( pj )		948620	0					
ANR	949144	Callee	pj_o		948620	0					
ANR	949145	Identifier	pj_o		948620	0					
ANR	949146	ArgumentList	pj		948620	1					
ANR	949147	Argument	pj		948620	0					
ANR	949148	Identifier	pj		948620	0					
ANR	949149	ExpressionStatement	"pj_ks ( pj , ""name"" , plug -> name )"	191:4:4915:4945	948620	1	True				
ANR	949150	CallExpression	"pj_ks ( pj , ""name"" , plug -> name )"		948620	0					
ANR	949151	Callee	pj_ks		948620	0					
ANR	949152	Identifier	pj_ks		948620	0					
ANR	949153	ArgumentList	pj		948620	1					
ANR	949154	Argument	pj		948620	0					
ANR	949155	Identifier	pj		948620	0					
ANR	949156	Argument	"""name"""		948620	1					
ANR	949157	PrimaryExpression	"""name"""		948620	0					
ANR	949158	Argument	plug -> name		948620	2					
ANR	949159	PtrMemberAccess	plug -> name		948620	0					
ANR	949160	Identifier	plug		948620	0					
ANR	949161	Identifier	name		948620	1					
ANR	949162	ExpressionStatement	"pj_ks ( pj , ""description"" , plug -> desc )"	192:4:4951:4988	948620	2	True				
ANR	949163	CallExpression	"pj_ks ( pj , ""description"" , plug -> desc )"		948620	0					
ANR	949164	Callee	pj_ks		948620	0					
ANR	949165	Identifier	pj_ks		948620	0					
ANR	949166	ArgumentList	pj		948620	1					
ANR	949167	Argument	pj		948620	0					
ANR	949168	Identifier	pj		948620	0					
ANR	949169	Argument	"""description"""		948620	1					
ANR	949170	PrimaryExpression	"""description"""		948620	0					
ANR	949171	Argument	plug -> desc		948620	2					
ANR	949172	PtrMemberAccess	plug -> desc		948620	0					
ANR	949173	Identifier	plug		948620	0					
ANR	949174	Identifier	desc		948620	1					
ANR	949175	ExpressionStatement	pj_end ( pj )	193:4:4994:5005	948620	3	True				
ANR	949176	CallExpression	pj_end ( pj )		948620	0					
ANR	949177	Callee	pj_end		948620	0					
ANR	949178	Identifier	pj_end		948620	0					
ANR	949179	ArgumentList	pj		948620	1					
ANR	949180	Argument	pj		948620	0					
ANR	949181	Identifier	pj		948620	0					
ANR	949182	ExpressionStatement	pj_end ( pj )	196:3:5016:5027	948620	33	True				
ANR	949183	CallExpression	pj_end ( pj )		948620	0					
ANR	949184	Callee	pj_end		948620	0					
ANR	949185	Identifier	pj_end		948620	0					
ANR	949186	ArgumentList	pj		948620	1					
ANR	949187	Argument	pj		948620	0					
ANR	949188	Identifier	pj		948620	0					
ANR	949189	ExpressionStatement	pj_end ( pj )	197:3:5032:5043	948620	34	True				
ANR	949190	CallExpression	pj_end ( pj )		948620	0					
ANR	949191	Callee	pj_end		948620	0					
ANR	949192	Identifier	pj_end		948620	0					
ANR	949193	ArgumentList	pj		948620	1					
ANR	949194	Argument	pj		948620	0					
ANR	949195	Identifier	pj		948620	0					
ANR	949196	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	198:3:5048:5086	948620	35	True				
ANR	949197	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		948620	0					
ANR	949198	Callee	r_cons_printf		948620	0					
ANR	949199	Identifier	r_cons_printf		948620	0					
ANR	949200	ArgumentList	"""%s\\n"""		948620	1					
ANR	949201	Argument	"""%s\\n"""		948620	0					
ANR	949202	PrimaryExpression	"""%s\\n"""		948620	0					
ANR	949203	Argument	pj_string ( pj )		948620	1					
ANR	949204	CallExpression	pj_string ( pj )		948620	0					
ANR	949205	Callee	pj_string		948620	0					
ANR	949206	Identifier	pj_string		948620	0					
ANR	949207	ArgumentList	pj		948620	1					
ANR	949208	Argument	pj		948620	0					
ANR	949209	Identifier	pj		948620	0					
ANR	949210	ExpressionStatement	pj_free ( pj )	199:3:5091:5103	948620	36	True				
ANR	949211	CallExpression	pj_free ( pj )		948620	0					
ANR	949212	Callee	pj_free		948620	0					
ANR	949213	Identifier	pj_free		948620	0					
ANR	949214	ArgumentList	pj		948620	1					
ANR	949215	Argument	pj		948620	0					
ANR	949216	Identifier	pj		948620	0					
ANR	949217	BreakStatement	break ;	201:2:5111:5116	948620	10	True				
ANR	949218	Label	case '*' :	202:1:5119:5127	948620	11	True				
ANR	949219	Statement	r_list_foreach	203:2:5131:5144	948620	12	True				
ANR	949220	Statement	(	203:17:5146:5146	948620	13	True				
ANR	949221	Statement	core	203:18:5147:5150	948620	14	True				
ANR	949222	Statement	->	203:22:5151:5152	948620	15	True				
ANR	949223	Statement	fs	203:24:5153:5154	948620	16	True				
ANR	949224	Statement	->	203:26:5155:5156	948620	17	True				
ANR	949225	Statement	roots	203:28:5157:5161	948620	18	True				
ANR	949226	Statement	","	203:33:5162:5162	948620	19	True				
ANR	949227	Statement	iter	203:35:5164:5167	948620	20	True				
ANR	949228	Statement	","	203:39:5168:5168	948620	21	True				
ANR	949229	Statement	root	203:41:5170:5173	948620	22	True				
ANR	949230	Statement	)	203:45:5174:5174	948620	23	True				
ANR	949231	CompoundStatement		92:47:2027:2027	948620	24					
ANR	949232	Statement	r_cons_printf	204:3:5181:5193	948620	0	True				
ANR	949233	Statement	(	204:17:5195:5195	948620	1	True				
ANR	949234	Statement	"""m %s %s 0x%"""	204:18:5196:5208	948620	2	True				
ANR	949235	Statement	PFMT64x	204:31:5209:5215	948620	3	True				
ANR	949236	Statement	"""\\n"""	204:38:5216:5219	948620	4	True				
ANR	949237	Statement	","	204:42:5220:5220	948620	5	True				
ANR	949238	Statement	root	205:4:5226:5229	948620	6	True				
ANR	949239	Statement	->	205:8:5230:5231	948620	7	True				
ANR	949240	Statement	path	205:11:5233:5236	948620	8	True				
ANR	949241	Statement	","	205:15:5237:5237	948620	9	True				
ANR	949242	Statement	root	205:17:5239:5242	948620	10	True				
ANR	949243	Statement	->	205:21:5243:5244	948620	11	True				
ANR	949244	Statement	p	205:23:5245:5245	948620	12	True				
ANR	949245	Statement	->	205:24:5246:5247	948620	13	True				
ANR	949246	Statement	name	205:26:5248:5251	948620	14	True				
ANR	949247	Statement	","	205:30:5252:5252	948620	15	True				
ANR	949248	Statement	root	205:32:5254:5257	948620	16	True				
ANR	949249	Statement	->	205:36:5258:5259	948620	17	True				
ANR	949250	Statement	delta	205:38:5260:5264	948620	18	True				
ANR	949251	Statement	)	205:43:5265:5265	948620	19	True				
ANR	949252	ExpressionStatement		205:44:5266:5266	948620	20	True				
ANR	949253	BreakStatement	break ;	207:2:5274:5279	948620	25	True				
ANR	949254	Label	case '\\0' :	208:1:5282:5291	948620	26	True				
ANR	949255	Statement	r_list_foreach	209:2:5295:5308	948620	27	True				
ANR	949256	Statement	(	209:17:5310:5310	948620	28	True				
ANR	949257	Statement	core	209:18:5311:5314	948620	29	True				
ANR	949258	Statement	->	209:22:5315:5316	948620	30	True				
ANR	949259	Statement	fs	209:24:5317:5318	948620	31	True				
ANR	949260	Statement	->	209:26:5319:5320	948620	32	True				
ANR	949261	Statement	roots	209:28:5321:5325	948620	33	True				
ANR	949262	Statement	","	209:33:5326:5326	948620	34	True				
ANR	949263	Statement	iter	209:35:5328:5331	948620	35	True				
ANR	949264	Statement	","	209:39:5332:5332	948620	36	True				
ANR	949265	Statement	root	209:41:5334:5337	948620	37	True				
ANR	949266	Statement	)	209:45:5338:5338	948620	38	True				
ANR	949267	CompoundStatement		98:47:2191:2191	948620	39					
ANR	949268	Statement	r_cons_printf	210:3:5345:5357	948620	0	True				
ANR	949269	Statement	(	210:17:5359:5359	948620	1	True				
ANR	949270	Statement	"""%s\\t0x%"""	210:18:5360:5368	948620	2	True				
ANR	949271	Statement	PFMT64x	210:27:5369:5375	948620	3	True				
ANR	949272	Statement	"""\\t%s\\n"""	210:34:5376:5383	948620	4	True				
ANR	949273	Statement	","	210:42:5384:5384	948620	5	True				
ANR	949274	Statement	root	211:4:5390:5393	948620	6	True				
ANR	949275	Statement	->	211:8:5394:5395	948620	7	True				
ANR	949276	Statement	p	211:10:5396:5396	948620	8	True				
ANR	949277	Statement	->	211:11:5397:5398	948620	9	True				
ANR	949278	Statement	name	211:13:5399:5402	948620	10	True				
ANR	949279	Statement	","	211:17:5403:5403	948620	11	True				
ANR	949280	Statement	root	211:19:5405:5408	948620	12	True				
ANR	949281	Statement	->	211:23:5409:5410	948620	13	True				
ANR	949282	Statement	delta	211:25:5411:5415	948620	14	True				
ANR	949283	Statement	","	211:30:5416:5416	948620	15	True				
ANR	949284	Statement	root	211:32:5418:5421	948620	16	True				
ANR	949285	Statement	->	211:36:5422:5423	948620	17	True				
ANR	949286	Statement	path	211:38:5424:5427	948620	18	True				
ANR	949287	Statement	)	211:42:5428:5428	948620	19	True				
ANR	949288	ExpressionStatement		211:43:5429:5429	948620	20	True				
ANR	949289	BreakStatement	break ;	213:2:5437:5442	948620	40	True				
ANR	949290	Label	case 'L' :	214:1:5445:5453	948620	41	True				
ANR	949291	Statement	r_list_foreach	215:2:5481:5494	948620	42	True				
ANR	949292	Statement	(	215:17:5496:5496	948620	43	True				
ANR	949293	Statement	core	215:18:5497:5500	948620	44	True				
ANR	949294	Statement	->	215:22:5501:5502	948620	45	True				
ANR	949295	Statement	fs	215:24:5503:5504	948620	46	True				
ANR	949296	Statement	->	215:26:5505:5506	948620	47	True				
ANR	949297	Statement	plugins	215:28:5507:5513	948620	48	True				
ANR	949298	Statement	","	215:35:5514:5514	948620	49	True				
ANR	949299	Statement	iter	215:37:5516:5519	948620	50	True				
ANR	949300	Statement	","	215:41:5520:5520	948620	51	True				
ANR	949301	Statement	plug	215:43:5522:5525	948620	52	True				
ANR	949302	Statement	)	215:47:5526:5526	948620	53	True				
ANR	949303	CompoundStatement		104:49:2379:2379	948620	54					
ANR	949304	ExpressionStatement	"r_cons_printf ( ""%10s  %s\\n"" , plug -> name , plug -> desc )"	216:3:5533:5585	948620	0	True				
ANR	949305	CallExpression	"r_cons_printf ( ""%10s  %s\\n"" , plug -> name , plug -> desc )"		948620	0					
ANR	949306	Callee	r_cons_printf		948620	0					
ANR	949307	Identifier	r_cons_printf		948620	0					
ANR	949308	ArgumentList	"""%10s  %s\\n"""		948620	1					
ANR	949309	Argument	"""%10s  %s\\n"""		948620	0					
ANR	949310	PrimaryExpression	"""%10s  %s\\n"""		948620	0					
ANR	949311	Argument	plug -> name		948620	1					
ANR	949312	PtrMemberAccess	plug -> name		948620	0					
ANR	949313	Identifier	plug		948620	0					
ANR	949314	Identifier	name		948620	1					
ANR	949315	Argument	plug -> desc		948620	2					
ANR	949316	PtrMemberAccess	plug -> desc		948620	0					
ANR	949317	Identifier	plug		948620	0					
ANR	949318	Identifier	desc		948620	1					
ANR	949319	BreakStatement	break ;	218:2:5593:5598	948620	55	True				
ANR	949320	Label	case 'l' :	219:1:5601:5609	948620	56	True				
ANR	949321	Label	case 'd' :	220:1:5620:5628	948620	57	True				
ANR	949322	ExpressionStatement	"cmd_mount_ls ( core , input + 1 )"	221:2:5641:5671	948620	58	True				
ANR	949323	CallExpression	"cmd_mount_ls ( core , input + 1 )"		948620	0					
ANR	949324	Callee	cmd_mount_ls		948620	0					
ANR	949325	Identifier	cmd_mount_ls		948620	0					
ANR	949326	ArgumentList	core		948620	1					
ANR	949327	Argument	core		948620	0					
ANR	949328	Identifier	core		948620	0					
ANR	949329	Argument	input + 1		948620	1					
ANR	949330	AdditiveExpression	input + 1		948620	0		+			
ANR	949331	Identifier	input		948620	0					
ANR	949332	PrimaryExpression	1		948620	1					
ANR	949333	BreakStatement	break ;	222:2:5675:5680	948620	59	True				
ANR	949334	Label	case 'p' :	223:1:5683:5691	948620	60	True				
ANR	949335	ExpressionStatement	input ++	224:2:5695:5702	948620	61	True				
ANR	949336	PostIncDecOperationExpression	input ++		948620	0					
ANR	949337	Identifier	input		948620	0					
ANR	949338	IncDec	++		948620	1					
ANR	949339	IfStatement	if ( * input == ' ' )		948620	62					
ANR	949340	Condition	* input == ' '	225:6:5710:5722	948620	0	True				
ANR	949341	EqualityExpression	* input == ' '		948620	0		==			
ANR	949342	UnaryOperationExpression	* input		948620	0					
ANR	949343	UnaryOperator	*		948620	0					
ANR	949344	Identifier	input		948620	1					
ANR	949345	PrimaryExpression	' '		948620	1					
ANR	949346	CompoundStatement		114:21:2576:2576	948620	1					
ANR	949347	ExpressionStatement	input ++	226:3:5730:5737	948620	0	True				
ANR	949348	PostIncDecOperationExpression	input ++		948620	0					
ANR	949349	Identifier	input		948620	0					
ANR	949350	IncDec	++		948620	1					
ANR	949351	ExpressionStatement	"ptr = strchr ( input , ' ' )"	228:2:5745:5770	948620	63	True				
ANR	949352	AssignmentExpression	"ptr = strchr ( input , ' ' )"		948620	0		=			
ANR	949353	Identifier	ptr		948620	0					
ANR	949354	CallExpression	"strchr ( input , ' ' )"		948620	1					
ANR	949355	Callee	strchr		948620	0					
ANR	949356	Identifier	strchr		948620	0					
ANR	949357	ArgumentList	input		948620	1					
ANR	949358	Argument	input		948620	0					
ANR	949359	Identifier	input		948620	0					
ANR	949360	Argument	' '		948620	1					
ANR	949361	PrimaryExpression	' '		948620	0					
ANR	949362	IfStatement	if ( ptr )		948620	64					
ANR	949363	Condition	ptr	229:6:5778:5780	948620	0	True				
ANR	949364	Identifier	ptr		948620	0					
ANR	949365	CompoundStatement		118:11:2634:2634	948620	1					
ANR	949366	ExpressionStatement	* ptr = 0	230:3:5788:5796	948620	0	True				
ANR	949367	AssignmentExpression	* ptr = 0		948620	0		=			
ANR	949368	UnaryOperationExpression	* ptr		948620	0					
ANR	949369	UnaryOperator	*		948620	0					
ANR	949370	Identifier	ptr		948620	1					
ANR	949371	PrimaryExpression	0		948620	1					
ANR	949372	ExpressionStatement	"off = r_num_math ( core -> num , ptr + 1 )"	231:3:5801:5836	948620	1	True				
ANR	949373	AssignmentExpression	"off = r_num_math ( core -> num , ptr + 1 )"		948620	0		=			
ANR	949374	Identifier	off		948620	0					
ANR	949375	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		948620	1					
ANR	949376	Callee	r_num_math		948620	0					
ANR	949377	Identifier	r_num_math		948620	0					
ANR	949378	ArgumentList	core -> num		948620	1					
ANR	949379	Argument	core -> num		948620	0					
ANR	949380	PtrMemberAccess	core -> num		948620	0					
ANR	949381	Identifier	core		948620	0					
ANR	949382	Identifier	num		948620	1					
ANR	949383	Argument	ptr + 1		948620	1					
ANR	949384	AdditiveExpression	ptr + 1		948620	0		+			
ANR	949385	Identifier	ptr		948620	0					
ANR	949386	PrimaryExpression	1		948620	1					
ANR	949387	ExpressionStatement	"list = r_fs_partitions ( core -> fs , input , off )"	233:2:5844:5889	948620	65	True				
ANR	949388	AssignmentExpression	"list = r_fs_partitions ( core -> fs , input , off )"		948620	0		=			
ANR	949389	Identifier	list		948620	0					
ANR	949390	CallExpression	"r_fs_partitions ( core -> fs , input , off )"		948620	1					
ANR	949391	Callee	r_fs_partitions		948620	0					
ANR	949392	Identifier	r_fs_partitions		948620	0					
ANR	949393	ArgumentList	core -> fs		948620	1					
ANR	949394	Argument	core -> fs		948620	0					
ANR	949395	PtrMemberAccess	core -> fs		948620	0					
ANR	949396	Identifier	core		948620	0					
ANR	949397	Identifier	fs		948620	1					
ANR	949398	Argument	input		948620	1					
ANR	949399	Identifier	input		948620	0					
ANR	949400	Argument	off		948620	2					
ANR	949401	Identifier	off		948620	0					
ANR	949402	IfStatement	if ( list )		948620	66					
ANR	949403	Condition	list	234:6:5897:5900	948620	0	True				
ANR	949404	Identifier	list		948620	0					
ANR	949405	CompoundStatement		123:12:2754:2754	948620	1					
ANR	949406	Statement	r_list_foreach	235:3:5908:5921	948620	0	True				
ANR	949407	Statement	(	235:18:5923:5923	948620	1	True				
ANR	949408	Statement	list	235:19:5924:5927	948620	2	True				
ANR	949409	Statement	","	235:23:5928:5928	948620	3	True				
ANR	949410	Statement	iter	235:25:5930:5933	948620	4	True				
ANR	949411	Statement	","	235:29:5934:5934	948620	5	True				
ANR	949412	Statement	part	235:31:5936:5939	948620	6	True				
ANR	949413	Statement	)	235:35:5940:5940	948620	7	True				
ANR	949414	CompoundStatement		124:37:2793:2793	948620	8					
ANR	949415	Statement	r_cons_printf	236:4:5948:5960	948620	0	True				
ANR	949416	Statement	(	236:18:5962:5962	948620	1	True				
ANR	949417	Statement	"""%d %02x 0x%010"""	236:19:5963:5978	948620	2	True				
ANR	949418	Statement	PFMT64x	236:35:5979:5985	948620	3	True				
ANR	949419	Statement	""" 0x%010"""	236:42:5986:5994	948620	4	True				
ANR	949420	Statement	PFMT64x	236:51:5995:6001	948620	5	True				
ANR	949421	Statement	"""\\n"""	236:58:6002:6005	948620	6	True				
ANR	949422	Statement	","	236:62:6006:6006	948620	7	True				
ANR	949423	Statement	part	237:5:6013:6016	948620	8	True				
ANR	949424	Statement	->	237:9:6017:6018	948620	9	True				
ANR	949425	Statement	number	237:11:6019:6024	948620	10	True				
ANR	949426	Statement	","	237:17:6025:6025	948620	11	True				
ANR	949427	Statement	part	237:19:6027:6030	948620	12	True				
ANR	949428	Statement	->	237:23:6031:6032	948620	13	True				
ANR	949429	Statement	type	237:25:6033:6036	948620	14	True				
ANR	949430	Statement	","	237:29:6037:6037	948620	15	True				
ANR	949431	Statement	part	238:5:6044:6047	948620	16	True				
ANR	949432	Statement	->	238:9:6048:6049	948620	17	True				
ANR	949433	Statement	start	238:11:6050:6054	948620	18	True				
ANR	949434	Statement	","	238:16:6055:6055	948620	19	True				
ANR	949435	Statement	part	238:18:6057:6060	948620	20	True				
ANR	949436	Statement	->	238:22:6061:6062	948620	21	True				
ANR	949437	Statement	start	238:24:6063:6067	948620	22	True				
ANR	949438	Statement	+	238:29:6068:6068	948620	23	True				
ANR	949439	Statement	part	238:30:6069:6072	948620	24	True				
ANR	949440	Statement	->	238:34:6073:6074	948620	25	True				
ANR	949441	Statement	length	238:36:6075:6080	948620	26	True				
ANR	949442	Statement	)	238:42:6081:6081	948620	27	True				
ANR	949443	ExpressionStatement		238:43:6082:6082	948620	28	True				
ANR	949444	ExpressionStatement	r_list_free ( list )	240:3:6092:6110	948620	9	True				
ANR	949445	CallExpression	r_list_free ( list )		948620	0					
ANR	949446	Callee	r_list_free		948620	0					
ANR	949447	Identifier	r_list_free		948620	0					
ANR	949448	ArgumentList	list		948620	1					
ANR	949449	Argument	list		948620	0					
ANR	949450	Identifier	list		948620	0					
ANR	949451	ElseStatement	else		948620	0					
ANR	949452	CompoundStatement		130:9:2972:2972	948620	0					
ANR	949453	ExpressionStatement	"eprintf ( ""Cannot read partition\\n"" )"	242:3:6126:6161	948620	0	True				
ANR	949454	CallExpression	"eprintf ( ""Cannot read partition\\n"" )"		948620	0					
ANR	949455	Callee	eprintf		948620	0					
ANR	949456	Identifier	eprintf		948620	0					
ANR	949457	ArgumentList	"""Cannot read partition\\n"""		948620	1					
ANR	949458	Argument	"""Cannot read partition\\n"""		948620	0					
ANR	949459	PrimaryExpression	"""Cannot read partition\\n"""		948620	0					
ANR	949460	BreakStatement	break ;	244:2:6169:6174	948620	67	True				
ANR	949461	Label	case 'o' :	245:1:6177:6185	948620	68	True				
ANR	949462	ExpressionStatement	input ++	246:2:6196:6203	948620	69	True				
ANR	949463	PostIncDecOperationExpression	input ++		948620	0					
ANR	949464	Identifier	input		948620	0					
ANR	949465	IncDec	++		948620	1					
ANR	949466	IfStatement	if ( input [ 0 ] == ' ' )		948620	70					
ANR	949467	Condition	input [ 0 ] == ' '	247:6:6211:6223	948620	0	True				
ANR	949468	EqualityExpression	input [ 0 ] == ' '		948620	0		==			
ANR	949469	ArrayIndexing	input [ 0 ]		948620	0					
ANR	949470	Identifier	input		948620	0					
ANR	949471	PrimaryExpression	0		948620	1					
ANR	949472	PrimaryExpression	' '		948620	1					
ANR	949473	CompoundStatement		136:21:3077:3077	948620	1					
ANR	949474	ExpressionStatement	input ++	248:3:6231:6238	948620	0	True				
ANR	949475	PostIncDecOperationExpression	input ++		948620	0					
ANR	949476	Identifier	input		948620	0					
ANR	949477	IncDec	++		948620	1					
ANR	949478	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	250:2:6246:6287	948620	71	True				
ANR	949479	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		948620	0		=			
ANR	949480	Identifier	file		948620	0					
ANR	949481	CallExpression	"r_fs_open ( core -> fs , input , false )"		948620	1					
ANR	949482	Callee	r_fs_open		948620	0					
ANR	949483	Identifier	r_fs_open		948620	0					
ANR	949484	ArgumentList	core -> fs		948620	1					
ANR	949485	Argument	core -> fs		948620	0					
ANR	949486	PtrMemberAccess	core -> fs		948620	0					
ANR	949487	Identifier	core		948620	0					
ANR	949488	Identifier	fs		948620	1					
ANR	949489	Argument	input		948620	1					
ANR	949490	Identifier	input		948620	0					
ANR	949491	Argument	false		948620	2					
ANR	949492	Identifier	false		948620	0					
ANR	949493	IfStatement	if ( file )		948620	72					
ANR	949494	Condition	file	251:6:6295:6298	948620	0	True				
ANR	949495	Identifier	file		948620	0					
ANR	949496	CompoundStatement		143:3:3258:3311	948620	1					
ANR	949497	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	252:3:6306:6347	948620	0	True				
ANR	949498	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		948620	0					
ANR	949499	Callee	r_fs_read		948620	0					
ANR	949500	Identifier	r_fs_read		948620	0					
ANR	949501	ArgumentList	core -> fs		948620	1					
ANR	949502	Argument	core -> fs		948620	0					
ANR	949503	PtrMemberAccess	core -> fs		948620	0					
ANR	949504	Identifier	core		948620	0					
ANR	949505	Identifier	fs		948620	1					
ANR	949506	Argument	file		948620	1					
ANR	949507	Identifier	file		948620	0					
ANR	949508	Argument	0		948620	2					
ANR	949509	PrimaryExpression	0		948620	0					
ANR	949510	Argument	file -> size		948620	3					
ANR	949511	PtrMemberAccess	file -> size		948620	0					
ANR	949512	Identifier	file		948620	0					
ANR	949513	Identifier	size		948620	1					
ANR	949514	IdentifierDeclStatement	"char * uri = r_str_newf ( ""malloc://%d"" , file -> size ) ;"	253:3:6352:6402	948620	1	True				
ANR	949515	IdentifierDecl	"* uri = r_str_newf ( ""malloc://%d"" , file -> size )"		948620	0					
ANR	949516	IdentifierDeclType	char *		948620	0					
ANR	949517	Identifier	uri		948620	1					
ANR	949518	AssignmentExpression	"* uri = r_str_newf ( ""malloc://%d"" , file -> size )"		948620	2		=			
ANR	949519	Identifier	uri		948620	0					
ANR	949520	CallExpression	"r_str_newf ( ""malloc://%d"" , file -> size )"		948620	1					
ANR	949521	Callee	r_str_newf		948620	0					
ANR	949522	Identifier	r_str_newf		948620	0					
ANR	949523	ArgumentList	"""malloc://%d"""		948620	1					
ANR	949524	Argument	"""malloc://%d"""		948620	0					
ANR	949525	PrimaryExpression	"""malloc://%d"""		948620	0					
ANR	949526	Argument	file -> size		948620	1					
ANR	949527	PtrMemberAccess	file -> size		948620	0					
ANR	949528	Identifier	file		948620	0					
ANR	949529	Identifier	size		948620	1					
ANR	949530	IdentifierDeclStatement	"RIODesc * fd = r_io_open ( core -> io , uri , R_PERM_RW , 0 ) ;"	254:3:6407:6460	948620	2	True				
ANR	949531	IdentifierDecl	"* fd = r_io_open ( core -> io , uri , R_PERM_RW , 0 )"		948620	0					
ANR	949532	IdentifierDeclType	RIODesc *		948620	0					
ANR	949533	Identifier	fd		948620	1					
ANR	949534	AssignmentExpression	"* fd = r_io_open ( core -> io , uri , R_PERM_RW , 0 )"		948620	2		=			
ANR	949535	Identifier	fd		948620	0					
ANR	949536	CallExpression	"r_io_open ( core -> io , uri , R_PERM_RW , 0 )"		948620	1					
ANR	949537	Callee	r_io_open		948620	0					
ANR	949538	Identifier	r_io_open		948620	0					
ANR	949539	ArgumentList	core -> io		948620	1					
ANR	949540	Argument	core -> io		948620	0					
ANR	949541	PtrMemberAccess	core -> io		948620	0					
ANR	949542	Identifier	core		948620	0					
ANR	949543	Identifier	io		948620	1					
ANR	949544	Argument	uri		948620	1					
ANR	949545	Identifier	uri		948620	0					
ANR	949546	Argument	R_PERM_RW		948620	2					
ANR	949547	Identifier	R_PERM_RW		948620	0					
ANR	949548	Argument	0		948620	3					
ANR	949549	PrimaryExpression	0		948620	0					
ANR	949550	IfStatement	if ( fd )		948620	3					
ANR	949551	Condition	fd	255:7:6469:6470	948620	0	True				
ANR	949552	Identifier	fd		948620	0					
ANR	949553	CompoundStatement		144:11:3324:3324	948620	1					
ANR	949554	ExpressionStatement	"r_io_desc_write ( fd , file -> data , file -> size )"	256:4:6479:6523	948620	0	True				
ANR	949555	CallExpression	"r_io_desc_write ( fd , file -> data , file -> size )"		948620	0					
ANR	949556	Callee	r_io_desc_write		948620	0					
ANR	949557	Identifier	r_io_desc_write		948620	0					
ANR	949558	ArgumentList	fd		948620	1					
ANR	949559	Argument	fd		948620	0					
ANR	949560	Identifier	fd		948620	0					
ANR	949561	Argument	file -> data		948620	1					
ANR	949562	PtrMemberAccess	file -> data		948620	0					
ANR	949563	Identifier	file		948620	0					
ANR	949564	Identifier	data		948620	1					
ANR	949565	Argument	file -> size		948620	2					
ANR	949566	PtrMemberAccess	file -> size		948620	0					
ANR	949567	Identifier	file		948620	0					
ANR	949568	Identifier	size		948620	1					
ANR	949569	ElseStatement	else		948620	0					
ANR	949570	CompoundStatement		147:9:3390:3390	948620	0					
ANR	949571	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	259:3:6544:6574	948620	0	True				
ANR	949572	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		948620	0					
ANR	949573	Callee	eprintf		948620	0					
ANR	949574	Identifier	eprintf		948620	0					
ANR	949575	ArgumentList	"""Cannot open file\\n"""		948620	1					
ANR	949576	Argument	"""Cannot open file\\n"""		948620	0					
ANR	949577	PrimaryExpression	"""Cannot open file\\n"""		948620	0					
ANR	949578	BreakStatement	break ;	261:2:6582:6587	948620	73	True				
ANR	949579	Label	case 'i' :	262:1:6590:6598	948620	74	True				
ANR	949580	ExpressionStatement	input ++	263:2:6602:6609	948620	75	True				
ANR	949581	PostIncDecOperationExpression	input ++		948620	0					
ANR	949582	Identifier	input		948620	0					
ANR	949583	IncDec	++		948620	1					
ANR	949584	IfStatement	if ( input [ 0 ] == ' ' )		948620	76					
ANR	949585	Condition	input [ 0 ] == ' '	264:6:6617:6629	948620	0	True				
ANR	949586	EqualityExpression	input [ 0 ] == ' '		948620	0		==			
ANR	949587	ArrayIndexing	input [ 0 ]		948620	0					
ANR	949588	Identifier	input		948620	0					
ANR	949589	PrimaryExpression	0		948620	1					
ANR	949590	PrimaryExpression	' '		948620	1					
ANR	949591	CompoundStatement		153:21:3483:3483	948620	1					
ANR	949592	ExpressionStatement	input ++	265:3:6637:6644	948620	0	True				
ANR	949593	PostIncDecOperationExpression	input ++		948620	0					
ANR	949594	Identifier	input		948620	0					
ANR	949595	IncDec	++		948620	1					
ANR	949596	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	267:2:6652:6693	948620	77	True				
ANR	949597	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		948620	0		=			
ANR	949598	Identifier	file		948620	0					
ANR	949599	CallExpression	"r_fs_open ( core -> fs , input , false )"		948620	1					
ANR	949600	Callee	r_fs_open		948620	0					
ANR	949601	Identifier	r_fs_open		948620	0					
ANR	949602	ArgumentList	core -> fs		948620	1					
ANR	949603	Argument	core -> fs		948620	0					
ANR	949604	PtrMemberAccess	core -> fs		948620	0					
ANR	949605	Identifier	core		948620	0					
ANR	949606	Identifier	fs		948620	1					
ANR	949607	Argument	input		948620	1					
ANR	949608	Identifier	input		948620	0					
ANR	949609	Argument	false		948620	2					
ANR	949610	Identifier	false		948620	0					
ANR	949611	IfStatement	if ( file )		948620	78					
ANR	949612	Condition	file	268:6:6701:6704	948620	0	True				
ANR	949613	Identifier	file		948620	0					
ANR	949614	CompoundStatement		157:12:3558:3558	948620	1					
ANR	949615	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	270:3:6750:6791	948620	0	True				
ANR	949616	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		948620	0					
ANR	949617	Callee	r_fs_read		948620	0					
ANR	949618	Identifier	r_fs_read		948620	0					
ANR	949619	ArgumentList	core -> fs		948620	1					
ANR	949620	Argument	core -> fs		948620	0					
ANR	949621	PtrMemberAccess	core -> fs		948620	0					
ANR	949622	Identifier	core		948620	0					
ANR	949623	Identifier	fs		948620	1					
ANR	949624	Argument	file		948620	1					
ANR	949625	Identifier	file		948620	0					
ANR	949626	Argument	0		948620	2					
ANR	949627	PrimaryExpression	0		948620	0					
ANR	949628	Argument	file -> size		948620	3					
ANR	949629	PtrMemberAccess	file -> size		948620	0					
ANR	949630	Identifier	file		948620	0					
ANR	949631	Identifier	size		948620	1					
ANR	949632	Statement	r_cons_printf	271:3:6796:6808	948620	1	True				
ANR	949633	Statement	(	271:17:6810:6810	948620	2	True				
ANR	949634	Statement	"""f file %d 0x%08"""	271:18:6811:6827	948620	3	True				
ANR	949635	Statement	PFMT64x	271:35:6828:6834	948620	4	True				
ANR	949636	Statement	"""\\n"""	271:42:6835:6838	948620	5	True				
ANR	949637	Statement	","	271:46:6839:6839	948620	6	True				
ANR	949638	Statement	file	271:48:6841:6844	948620	7	True				
ANR	949639	Statement	->	271:52:6845:6846	948620	8	True				
ANR	949640	Statement	size	271:54:6847:6850	948620	9	True				
ANR	949641	Statement	","	271:58:6851:6851	948620	10	True				
ANR	949642	Statement	file	271:60:6853:6856	948620	11	True				
ANR	949643	Statement	->	271:64:6857:6858	948620	12	True				
ANR	949644	Statement	off	271:66:6859:6861	948620	13	True				
ANR	949645	Statement	)	271:69:6862:6862	948620	14	True				
ANR	949646	ExpressionStatement		271:70:6863:6863	948620	15	True				
ANR	949647	ExpressionStatement	"r_fs_close ( core -> fs , file )"	272:3:6868:6895	948620	16	True				
ANR	949648	CallExpression	"r_fs_close ( core -> fs , file )"		948620	0					
ANR	949649	Callee	r_fs_close		948620	0					
ANR	949650	Identifier	r_fs_close		948620	0					
ANR	949651	ArgumentList	core -> fs		948620	1					
ANR	949652	Argument	core -> fs		948620	0					
ANR	949653	PtrMemberAccess	core -> fs		948620	0					
ANR	949654	Identifier	core		948620	0					
ANR	949655	Identifier	fs		948620	1					
ANR	949656	Argument	file		948620	1					
ANR	949657	Identifier	file		948620	0					
ANR	949658	ElseStatement	else		948620	0					
ANR	949659	CompoundStatement		162:9:3757:3757	948620	0					
ANR	949660	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	274:3:6911:6941	948620	0	True				
ANR	949661	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		948620	0					
ANR	949662	Callee	eprintf		948620	0					
ANR	949663	Identifier	eprintf		948620	0					
ANR	949664	ArgumentList	"""Cannot open file\\n"""		948620	1					
ANR	949665	Argument	"""Cannot open file\\n"""		948620	0					
ANR	949666	PrimaryExpression	"""Cannot open file\\n"""		948620	0					
ANR	949667	BreakStatement	break ;	276:2:6949:6954	948620	79	True				
ANR	949668	Label	case 'c' :	277:1:6957:6965	948620	80	True				
ANR	949669	ExpressionStatement	input ++	278:2:6977:6984	948620	81	True				
ANR	949670	PostIncDecOperationExpression	input ++		948620	0					
ANR	949671	Identifier	input		948620	0					
ANR	949672	IncDec	++		948620	1					
ANR	949673	IfStatement	if ( * input == ' ' )		948620	82					
ANR	949674	Condition	* input == ' '	279:6:6992:7004	948620	0	True				
ANR	949675	EqualityExpression	* input == ' '		948620	0		==			
ANR	949676	UnaryOperationExpression	* input		948620	0					
ANR	949677	UnaryOperator	*		948620	0					
ANR	949678	Identifier	input		948620	1					
ANR	949679	PrimaryExpression	' '		948620	1					
ANR	949680	CompoundStatement		168:21:3858:3858	948620	1					
ANR	949681	ExpressionStatement	input ++	280:3:7012:7019	948620	0	True				
ANR	949682	PostIncDecOperationExpression	input ++		948620	0					
ANR	949683	Identifier	input		948620	0					
ANR	949684	IncDec	++		948620	1					
ANR	949685	ExpressionStatement	"ptr = strchr ( input , ' ' )"	282:2:7027:7052	948620	83	True				
ANR	949686	AssignmentExpression	"ptr = strchr ( input , ' ' )"		948620	0		=			
ANR	949687	Identifier	ptr		948620	0					
ANR	949688	CallExpression	"strchr ( input , ' ' )"		948620	1					
ANR	949689	Callee	strchr		948620	0					
ANR	949690	Identifier	strchr		948620	0					
ANR	949691	ArgumentList	input		948620	1					
ANR	949692	Argument	input		948620	0					
ANR	949693	Identifier	input		948620	0					
ANR	949694	Argument	' '		948620	1					
ANR	949695	PrimaryExpression	' '		948620	0					
ANR	949696	IfStatement	if ( ptr )		948620	84					
ANR	949697	Condition	ptr	283:6:7060:7062	948620	0	True				
ANR	949698	Identifier	ptr		948620	0					
ANR	949699	CompoundStatement		172:11:3916:3916	948620	1					
ANR	949700	ExpressionStatement	* ptr ++ = 0	284:3:7070:7080	948620	0	True				
ANR	949701	AssignmentExpression	* ptr ++ = 0		948620	0		=			
ANR	949702	UnaryOperationExpression	* ptr ++		948620	0					
ANR	949703	UnaryOperator	*		948620	0					
ANR	949704	PostIncDecOperationExpression	ptr ++		948620	1					
ANR	949705	Identifier	ptr		948620	0					
ANR	949706	IncDec	++		948620	1					
ANR	949707	PrimaryExpression	0		948620	1					
ANR	949708	ElseStatement	else		948620	0					
ANR	949709	CompoundStatement		174:9:3942:3942	948620	0					
ANR	949710	ExpressionStatement	"ptr = ""./"""	286:3:7096:7106	948620	0	True				
ANR	949711	AssignmentExpression	"ptr = ""./"""		948620	0		=			
ANR	949712	Identifier	ptr		948620	0					
ANR	949713	PrimaryExpression	"""./"""		948620	1					
ANR	949714	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	288:2:7114:7155	948620	85	True				
ANR	949715	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		948620	0		=			
ANR	949716	Identifier	file		948620	0					
ANR	949717	CallExpression	"r_fs_open ( core -> fs , input , false )"		948620	1					
ANR	949718	Callee	r_fs_open		948620	0					
ANR	949719	Identifier	r_fs_open		948620	0					
ANR	949720	ArgumentList	core -> fs		948620	1					
ANR	949721	Argument	core -> fs		948620	0					
ANR	949722	PtrMemberAccess	core -> fs		948620	0					
ANR	949723	Identifier	core		948620	0					
ANR	949724	Identifier	fs		948620	1					
ANR	949725	Argument	input		948620	1					
ANR	949726	Identifier	input		948620	0					
ANR	949727	Argument	false		948620	2					
ANR	949728	Identifier	false		948620	0					
ANR	949729	IfStatement	if ( file )		948620	86					
ANR	949730	Condition	file	289:6:7163:7166	948620	0	True				
ANR	949731	Identifier	file		948620	0					
ANR	949732	CompoundStatement		178:12:4020:4020	948620	1					
ANR	949733	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	290:3:7174:7215	948620	0	True				
ANR	949734	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		948620	0					
ANR	949735	Callee	r_fs_read		948620	0					
ANR	949736	Identifier	r_fs_read		948620	0					
ANR	949737	ArgumentList	core -> fs		948620	1					
ANR	949738	Argument	core -> fs		948620	0					
ANR	949739	PtrMemberAccess	core -> fs		948620	0					
ANR	949740	Identifier	core		948620	0					
ANR	949741	Identifier	fs		948620	1					
ANR	949742	Argument	file		948620	1					
ANR	949743	Identifier	file		948620	0					
ANR	949744	Argument	0		948620	2					
ANR	949745	PrimaryExpression	0		948620	0					
ANR	949746	Argument	file -> size		948620	3					
ANR	949747	PtrMemberAccess	file -> size		948620	0					
ANR	949748	Identifier	file		948620	0					
ANR	949749	Identifier	size		948620	1					
ANR	949750	ExpressionStatement	"r_cons_memcat ( ( const char * ) file -> data , file -> size )"	291:3:7220:7272	948620	1	True				
ANR	949751	CallExpression	"r_cons_memcat ( ( const char * ) file -> data , file -> size )"		948620	0					
ANR	949752	Callee	r_cons_memcat		948620	0					
ANR	949753	Identifier	r_cons_memcat		948620	0					
ANR	949754	ArgumentList	( const char * ) file -> data		948620	1					
ANR	949755	Argument	( const char * ) file -> data		948620	0					
ANR	949756	CastExpression	( const char * ) file -> data		948620	0					
ANR	949757	CastTarget	const char *		948620	0					
ANR	949758	PtrMemberAccess	file -> data		948620	1					
ANR	949759	Identifier	file		948620	0					
ANR	949760	Identifier	data		948620	1					
ANR	949761	Argument	file -> size		948620	1					
ANR	949762	PtrMemberAccess	file -> size		948620	0					
ANR	949763	Identifier	file		948620	0					
ANR	949764	Identifier	size		948620	1					
ANR	949765	ExpressionStatement	"r_fs_close ( core -> fs , file )"	292:3:7277:7304	948620	2	True				
ANR	949766	CallExpression	"r_fs_close ( core -> fs , file )"		948620	0					
ANR	949767	Callee	r_fs_close		948620	0					
ANR	949768	Identifier	r_fs_close		948620	0					
ANR	949769	ArgumentList	core -> fs		948620	1					
ANR	949770	Argument	core -> fs		948620	0					
ANR	949771	PtrMemberAccess	core -> fs		948620	0					
ANR	949772	Identifier	core		948620	0					
ANR	949773	Identifier	fs		948620	1					
ANR	949774	Argument	file		948620	1					
ANR	949775	Identifier	file		948620	0					
ANR	949776	ExpressionStatement	"r_cons_memcat ( ""\\n"" , 1 )"	293:3:7309:7332	948620	3	True				
ANR	949777	CallExpression	"r_cons_memcat ( ""\\n"" , 1 )"		948620	0					
ANR	949778	Callee	r_cons_memcat		948620	0					
ANR	949779	Identifier	r_cons_memcat		948620	0					
ANR	949780	ArgumentList	"""\\n"""		948620	1					
ANR	949781	Argument	"""\\n"""		948620	0					
ANR	949782	PrimaryExpression	"""\\n"""		948620	0					
ANR	949783	Argument	1		948620	1					
ANR	949784	PrimaryExpression	1		948620	0					
ANR	949785	ElseStatement	else		948620	0					
ANR	949786	IfStatement	"if ( ! r_fs_dir_dump ( core -> fs , input , ptr ) )"		948620	0					
ANR	949787	Condition	"! r_fs_dir_dump ( core -> fs , input , ptr )"	294:13:7347:7383	948620	0	True				
ANR	949788	UnaryOperationExpression	"! r_fs_dir_dump ( core -> fs , input , ptr )"		948620	0					
ANR	949789	UnaryOperator	!		948620	0					
ANR	949790	CallExpression	"r_fs_dir_dump ( core -> fs , input , ptr )"		948620	1					
ANR	949791	Callee	r_fs_dir_dump		948620	0					
ANR	949792	Identifier	r_fs_dir_dump		948620	0					
ANR	949793	ArgumentList	core -> fs		948620	1					
ANR	949794	Argument	core -> fs		948620	0					
ANR	949795	PtrMemberAccess	core -> fs		948620	0					
ANR	949796	Identifier	core		948620	0					
ANR	949797	Identifier	fs		948620	1					
ANR	949798	Argument	input		948620	1					
ANR	949799	Identifier	input		948620	0					
ANR	949800	Argument	ptr		948620	2					
ANR	949801	Identifier	ptr		948620	0					
ANR	949802	CompoundStatement		183:52:4237:4237	948620	1					
ANR	949803	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	295:3:7391:7421	948620	0	True				
ANR	949804	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		948620	0					
ANR	949805	Callee	eprintf		948620	0					
ANR	949806	Identifier	eprintf		948620	0					
ANR	949807	ArgumentList	"""Cannot open file\\n"""		948620	1					
ANR	949808	Argument	"""Cannot open file\\n"""		948620	0					
ANR	949809	PrimaryExpression	"""Cannot open file\\n"""		948620	0					
ANR	949810	BreakStatement	break ;	297:2:7429:7434	948620	87	True				
ANR	949811	Label	case 'g' :	298:1:7437:7445	948620	88	True				
ANR	949812	ExpressionStatement	input ++	299:2:7457:7464	948620	89	True				
ANR	949813	PostIncDecOperationExpression	input ++		948620	0					
ANR	949814	Identifier	input		948620	0					
ANR	949815	IncDec	++		948620	1					
ANR	949816	IfStatement	if ( * input == ' ' )		948620	90					
ANR	949817	Condition	* input == ' '	300:6:7472:7484	948620	0	True				
ANR	949818	EqualityExpression	* input == ' '		948620	0		==			
ANR	949819	UnaryOperationExpression	* input		948620	0					
ANR	949820	UnaryOperator	*		948620	0					
ANR	949821	Identifier	input		948620	1					
ANR	949822	PrimaryExpression	' '		948620	1					
ANR	949823	CompoundStatement		189:21:4338:4338	948620	1					
ANR	949824	ExpressionStatement	input ++	301:3:7492:7499	948620	0	True				
ANR	949825	PostIncDecOperationExpression	input ++		948620	0					
ANR	949826	Identifier	input		948620	0					
ANR	949827	IncDec	++		948620	1					
ANR	949828	ExpressionStatement	"ptr = strchr ( input , ' ' )"	303:2:7507:7532	948620	91	True				
ANR	949829	AssignmentExpression	"ptr = strchr ( input , ' ' )"		948620	0		=			
ANR	949830	Identifier	ptr		948620	0					
ANR	949831	CallExpression	"strchr ( input , ' ' )"		948620	1					
ANR	949832	Callee	strchr		948620	0					
ANR	949833	Identifier	strchr		948620	0					
ANR	949834	ArgumentList	input		948620	1					
ANR	949835	Argument	input		948620	0					
ANR	949836	Identifier	input		948620	0					
ANR	949837	Argument	' '		948620	1					
ANR	949838	PrimaryExpression	' '		948620	0					
ANR	949839	IfStatement	if ( ptr )		948620	92					
ANR	949840	Condition	ptr	304:6:7540:7542	948620	0	True				
ANR	949841	Identifier	ptr		948620	0					
ANR	949842	CompoundStatement		193:11:4396:4396	948620	1					
ANR	949843	ExpressionStatement	* ptr ++ = 0	305:3:7550:7560	948620	0	True				
ANR	949844	AssignmentExpression	* ptr ++ = 0		948620	0		=			
ANR	949845	UnaryOperationExpression	* ptr ++		948620	0					
ANR	949846	UnaryOperator	*		948620	0					
ANR	949847	PostIncDecOperationExpression	ptr ++		948620	1					
ANR	949848	Identifier	ptr		948620	0					
ANR	949849	IncDec	++		948620	1					
ANR	949850	PrimaryExpression	0		948620	1					
ANR	949851	ElseStatement	else		948620	0					
ANR	949852	CompoundStatement		195:9:4422:4422	948620	0					
ANR	949853	ExpressionStatement	"ptr = ""./"""	307:3:7576:7586	948620	0	True				
ANR	949854	AssignmentExpression	"ptr = ""./"""		948620	0		=			
ANR	949855	Identifier	ptr		948620	0					
ANR	949856	PrimaryExpression	"""./"""		948620	1					
ANR	949857	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	309:2:7594:7635	948620	93	True				
ANR	949858	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		948620	0		=			
ANR	949859	Identifier	file		948620	0					
ANR	949860	CallExpression	"r_fs_open ( core -> fs , input , false )"		948620	1					
ANR	949861	Callee	r_fs_open		948620	0					
ANR	949862	Identifier	r_fs_open		948620	0					
ANR	949863	ArgumentList	core -> fs		948620	1					
ANR	949864	Argument	core -> fs		948620	0					
ANR	949865	PtrMemberAccess	core -> fs		948620	0					
ANR	949866	Identifier	core		948620	0					
ANR	949867	Identifier	fs		948620	1					
ANR	949868	Argument	input		948620	1					
ANR	949869	Identifier	input		948620	0					
ANR	949870	Argument	false		948620	2					
ANR	949871	Identifier	false		948620	0					
ANR	949872	IfStatement	if ( file )		948620	94					
ANR	949873	Condition	file	310:6:7643:7646	948620	0	True				
ANR	949874	Identifier	file		948620	0					
ANR	949875	CompoundStatement		201:3:4542:4597	948620	1					
ANR	949876	IdentifierDeclStatement	char * localFile = strdup ( input ) ;	311:3:7654:7686	948620	0	True				
ANR	949877	IdentifierDecl	* localFile = strdup ( input )		948620	0					
ANR	949878	IdentifierDeclType	char *		948620	0					
ANR	949879	Identifier	localFile		948620	1					
ANR	949880	AssignmentExpression	* localFile = strdup ( input )		948620	2		=			
ANR	949881	Identifier	localFile		948620	0					
ANR	949882	CallExpression	strdup ( input )		948620	1					
ANR	949883	Callee	strdup		948620	0					
ANR	949884	Identifier	strdup		948620	0					
ANR	949885	ArgumentList	input		948620	1					
ANR	949886	Argument	input		948620	0					
ANR	949887	Identifier	input		948620	0					
ANR	949888	IdentifierDeclStatement	"char * slash = ( char * ) r_str_rchr ( localFile , NULL , '/' ) ;"	312:3:7691:7746	948620	1	True				
ANR	949889	IdentifierDecl	"* slash = ( char * ) r_str_rchr ( localFile , NULL , '/' )"		948620	0					
ANR	949890	IdentifierDeclType	char *		948620	0					
ANR	949891	Identifier	slash		948620	1					
ANR	949892	AssignmentExpression	"* slash = ( char * ) r_str_rchr ( localFile , NULL , '/' )"		948620	2		=			
ANR	949893	Identifier	slash		948620	0					
ANR	949894	CastExpression	"( char * ) r_str_rchr ( localFile , NULL , '/' )"		948620	1					
ANR	949895	CastTarget	char *		948620	0					
ANR	949896	CallExpression	"r_str_rchr ( localFile , NULL , '/' )"		948620	1					
ANR	949897	Callee	r_str_rchr		948620	0					
ANR	949898	Identifier	r_str_rchr		948620	0					
ANR	949899	ArgumentList	localFile		948620	1					
ANR	949900	Argument	localFile		948620	0					
ANR	949901	Identifier	localFile		948620	0					
ANR	949902	Argument	NULL		948620	1					
ANR	949903	Identifier	NULL		948620	0					
ANR	949904	Argument	'/'		948620	2					
ANR	949905	PrimaryExpression	'/'		948620	0					
ANR	949906	IfStatement	if ( slash )		948620	2					
ANR	949907	Condition	slash	313:7:7755:7759	948620	0	True				
ANR	949908	Identifier	slash		948620	0					
ANR	949909	CompoundStatement		202:14:4613:4613	948620	1					
ANR	949910	ExpressionStatement	"memmove ( localFile , slash + 1 , strlen ( slash ) )"	314:4:7768:7814	948620	0	True				
ANR	949911	CallExpression	"memmove ( localFile , slash + 1 , strlen ( slash ) )"		948620	0					
ANR	949912	Callee	memmove		948620	0					
ANR	949913	Identifier	memmove		948620	0					
ANR	949914	ArgumentList	localFile		948620	1					
ANR	949915	Argument	localFile		948620	0					
ANR	949916	Identifier	localFile		948620	0					
ANR	949917	Argument	slash + 1		948620	1					
ANR	949918	AdditiveExpression	slash + 1		948620	0		+			
ANR	949919	Identifier	slash		948620	0					
ANR	949920	PrimaryExpression	1		948620	1					
ANR	949921	Argument	strlen ( slash )		948620	2					
ANR	949922	CallExpression	strlen ( slash )		948620	0					
ANR	949923	Callee	strlen		948620	0					
ANR	949924	Identifier	strlen		948620	0					
ANR	949925	ArgumentList	slash		948620	1					
ANR	949926	Argument	slash		948620	0					
ANR	949927	Identifier	slash		948620	0					
ANR	949928	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	316:3:7824:7865	948620	3	True				
ANR	949929	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		948620	0					
ANR	949930	Callee	r_fs_read		948620	0					
ANR	949931	Identifier	r_fs_read		948620	0					
ANR	949932	ArgumentList	core -> fs		948620	1					
ANR	949933	Argument	core -> fs		948620	0					
ANR	949934	PtrMemberAccess	core -> fs		948620	0					
ANR	949935	Identifier	core		948620	0					
ANR	949936	Identifier	fs		948620	1					
ANR	949937	Argument	file		948620	1					
ANR	949938	Identifier	file		948620	0					
ANR	949939	Argument	0		948620	2					
ANR	949940	PrimaryExpression	0		948620	0					
ANR	949941	Argument	file -> size		948620	3					
ANR	949942	PtrMemberAccess	file -> size		948620	0					
ANR	949943	Identifier	file		948620	0					
ANR	949944	Identifier	size		948620	1					
ANR	949945	ExpressionStatement	"r_file_dump ( localFile , file -> data , file -> size , false )"	317:3:7870:7924	948620	4	True				
ANR	949946	CallExpression	"r_file_dump ( localFile , file -> data , file -> size , false )"		948620	0					
ANR	949947	Callee	r_file_dump		948620	0					
ANR	949948	Identifier	r_file_dump		948620	0					
ANR	949949	ArgumentList	localFile		948620	1					
ANR	949950	Argument	localFile		948620	0					
ANR	949951	Identifier	localFile		948620	0					
ANR	949952	Argument	file -> data		948620	1					
ANR	949953	PtrMemberAccess	file -> data		948620	0					
ANR	949954	Identifier	file		948620	0					
ANR	949955	Identifier	data		948620	1					
ANR	949956	Argument	file -> size		948620	2					
ANR	949957	PtrMemberAccess	file -> size		948620	0					
ANR	949958	Identifier	file		948620	0					
ANR	949959	Identifier	size		948620	1					
ANR	949960	Argument	false		948620	3					
ANR	949961	Identifier	false		948620	0					
ANR	949962	ExpressionStatement	"r_fs_close ( core -> fs , file )"	318:3:7929:7956	948620	5	True				
ANR	949963	CallExpression	"r_fs_close ( core -> fs , file )"		948620	0					
ANR	949964	Callee	r_fs_close		948620	0					
ANR	949965	Identifier	r_fs_close		948620	0					
ANR	949966	ArgumentList	core -> fs		948620	1					
ANR	949967	Argument	core -> fs		948620	0					
ANR	949968	PtrMemberAccess	core -> fs		948620	0					
ANR	949969	Identifier	core		948620	0					
ANR	949970	Identifier	fs		948620	1					
ANR	949971	Argument	file		948620	1					
ANR	949972	Identifier	file		948620	0					
ANR	949973	ExpressionStatement	"eprintf ( ""File '%s' created.\\n"" , localFile )"	319:3:7961:8004	948620	6	True				
ANR	949974	CallExpression	"eprintf ( ""File '%s' created.\\n"" , localFile )"		948620	0					
ANR	949975	Callee	eprintf		948620	0					
ANR	949976	Identifier	eprintf		948620	0					
ANR	949977	ArgumentList	"""File '%s' created.\\n"""		948620	1					
ANR	949978	Argument	"""File '%s' created.\\n"""		948620	0					
ANR	949979	PrimaryExpression	"""File '%s' created.\\n"""		948620	0					
ANR	949980	Argument	localFile		948620	1					
ANR	949981	Identifier	localFile		948620	0					
ANR	949982	ExpressionStatement	free ( localFile )	320:3:8009:8025	948620	7	True				
ANR	949983	CallExpression	free ( localFile )		948620	0					
ANR	949984	Callee	free		948620	0					
ANR	949985	Identifier	free		948620	0					
ANR	949986	ArgumentList	localFile		948620	1					
ANR	949987	Argument	localFile		948620	0					
ANR	949988	Identifier	localFile		948620	0					
ANR	949989	ElseStatement	else		948620	0					
ANR	949990	IfStatement	"if ( ! r_fs_dir_dump ( core -> fs , input , ptr ) )"		948620	0					
ANR	949991	Condition	"! r_fs_dir_dump ( core -> fs , input , ptr )"	321:13:8040:8076	948620	0	True				
ANR	949992	UnaryOperationExpression	"! r_fs_dir_dump ( core -> fs , input , ptr )"		948620	0					
ANR	949993	UnaryOperator	!		948620	0					
ANR	949994	CallExpression	"r_fs_dir_dump ( core -> fs , input , ptr )"		948620	1					
ANR	949995	Callee	r_fs_dir_dump		948620	0					
ANR	949996	Identifier	r_fs_dir_dump		948620	0					
ANR	949997	ArgumentList	core -> fs		948620	1					
ANR	949998	Argument	core -> fs		948620	0					
ANR	949999	PtrMemberAccess	core -> fs		948620	0					
ANR	950000	Identifier	core		948620	0					
ANR	950001	Identifier	fs		948620	1					
ANR	950002	Argument	input		948620	1					
ANR	950003	Identifier	input		948620	0					
ANR	950004	Argument	ptr		948620	2					
ANR	950005	Identifier	ptr		948620	0					
ANR	950006	CompoundStatement		210:52:4930:4930	948620	1					
ANR	950007	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	322:3:8084:8114	948620	0	True				
ANR	950008	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		948620	0					
ANR	950009	Callee	eprintf		948620	0					
ANR	950010	Identifier	eprintf		948620	0					
ANR	950011	ArgumentList	"""Cannot open file\\n"""		948620	1					
ANR	950012	Argument	"""Cannot open file\\n"""		948620	0					
ANR	950013	PrimaryExpression	"""Cannot open file\\n"""		948620	0					
ANR	950014	BreakStatement	break ;	324:2:8122:8127	948620	95	True				
ANR	950015	Label	case 'f' :	325:1:8130:8138	948620	96	True				
ANR	950016	ExpressionStatement	input ++	326:2:8142:8149	948620	97	True				
ANR	950017	PostIncDecOperationExpression	input ++		948620	0					
ANR	950018	Identifier	input		948620	0					
ANR	950019	IncDec	++		948620	1					
ANR	950020	SwitchStatement	switch ( * input )		948620	98					
ANR	950021	Condition	* input	327:10:8161:8166	948620	0	True				
ANR	950022	UnaryOperationExpression	* input		948620	0					
ANR	950023	UnaryOperator	*		948620	0					
ANR	950024	Identifier	input		948620	1					
ANR	950025	CompoundStatement		216:18:5020:5020	948620	1					
ANR	950026	Label	case '?' :	328:2:8173:8181	948620	0	True				
ANR	950027	Statement	r_cons_printf	329:3:8186:8198	948620	1	True				
ANR	950028	Statement	(	329:17:8200:8200	948620	2	True				
ANR	950029	Statement	"""Usage: mf[no] [...]\\n"""	330:3:8205:8227	948620	3	True				
ANR	950030	Statement	""" mfn /foo *.c       ; search files by name in /foo path\\n"""	331:3:8232:8290	948620	4	True				
ANR	950031	Statement	""" mfo /foo 0x5e91    ; search files by offset in /foo path\\n"""	332:3:8295:8355	948620	5	True				
ANR	950032	Statement	)	333:3:8360:8360	948620	6	True				
ANR	950033	ExpressionStatement		333:4:8361:8361	948620	7	True				
ANR	950034	BreakStatement	break ;	334:3:8366:8371	948620	8	True				
ANR	950035	Label	case 'n' :	335:2:8375:8383	948620	9	True				
ANR	950036	ExpressionStatement	input ++	336:3:8388:8395	948620	10	True				
ANR	950037	PostIncDecOperationExpression	input ++		948620	0					
ANR	950038	Identifier	input		948620	0					
ANR	950039	IncDec	++		948620	1					
ANR	950040	IfStatement	if ( * input == ' ' )		948620	11					
ANR	950041	Condition	* input == ' '	337:7:8404:8416	948620	0	True				
ANR	950042	EqualityExpression	* input == ' '		948620	0		==			
ANR	950043	UnaryOperationExpression	* input		948620	0					
ANR	950044	UnaryOperator	*		948620	0					
ANR	950045	Identifier	input		948620	1					
ANR	950046	PrimaryExpression	' '		948620	1					
ANR	950047	ExpressionStatement	input ++	338:4:8423:8430	948620	1	True				
ANR	950048	PostIncDecOperationExpression	input ++		948620	0					
ANR	950049	Identifier	input		948620	0					
ANR	950050	IncDec	++		948620	1					
ANR	950051	ExpressionStatement	"ptr = strchr ( input , ' ' )"	339:3:8435:8460	948620	12	True				
ANR	950052	AssignmentExpression	"ptr = strchr ( input , ' ' )"		948620	0		=			
ANR	950053	Identifier	ptr		948620	0					
ANR	950054	CallExpression	"strchr ( input , ' ' )"		948620	1					
ANR	950055	Callee	strchr		948620	0					
ANR	950056	Identifier	strchr		948620	0					
ANR	950057	ArgumentList	input		948620	1					
ANR	950058	Argument	input		948620	0					
ANR	950059	Identifier	input		948620	0					
ANR	950060	Argument	' '		948620	1					
ANR	950061	PrimaryExpression	' '		948620	0					
ANR	950062	IfStatement	if ( ptr )		948620	13					
ANR	950063	Condition	ptr	340:7:8469:8471	948620	0	True				
ANR	950064	Identifier	ptr		948620	0					
ANR	950065	CompoundStatement		229:12:5325:5325	948620	1					
ANR	950066	ExpressionStatement	* ptr ++ = 0	341:4:8480:8490	948620	0	True				
ANR	950067	AssignmentExpression	* ptr ++ = 0		948620	0		=			
ANR	950068	UnaryOperationExpression	* ptr ++		948620	0					
ANR	950069	UnaryOperator	*		948620	0					
ANR	950070	PostIncDecOperationExpression	ptr ++		948620	1					
ANR	950071	Identifier	ptr		948620	0					
ANR	950072	IncDec	++		948620	1					
ANR	950073	PrimaryExpression	0		948620	1					
ANR	950074	ExpressionStatement	"list = r_fs_find_name ( core -> fs , input , ptr )"	342:4:8496:8540	948620	1	True				
ANR	950075	AssignmentExpression	"list = r_fs_find_name ( core -> fs , input , ptr )"		948620	0		=			
ANR	950076	Identifier	list		948620	0					
ANR	950077	CallExpression	"r_fs_find_name ( core -> fs , input , ptr )"		948620	1					
ANR	950078	Callee	r_fs_find_name		948620	0					
ANR	950079	Identifier	r_fs_find_name		948620	0					
ANR	950080	ArgumentList	core -> fs		948620	1					
ANR	950081	Argument	core -> fs		948620	0					
ANR	950082	PtrMemberAccess	core -> fs		948620	0					
ANR	950083	Identifier	core		948620	0					
ANR	950084	Identifier	fs		948620	1					
ANR	950085	Argument	input		948620	1					
ANR	950086	Identifier	input		948620	0					
ANR	950087	Argument	ptr		948620	2					
ANR	950088	Identifier	ptr		948620	0					
ANR	950089	Statement	r_list_foreach	343:4:8546:8559	948620	2	True				
ANR	950090	Statement	(	343:19:8561:8561	948620	3	True				
ANR	950091	Statement	list	343:20:8562:8565	948620	4	True				
ANR	950092	Statement	","	343:24:8566:8566	948620	5	True				
ANR	950093	Statement	iter	343:26:8568:8571	948620	6	True				
ANR	950094	Statement	","	343:30:8572:8572	948620	7	True				
ANR	950095	Statement	ptr	343:32:8574:8576	948620	8	True				
ANR	950096	Statement	)	343:35:8577:8577	948620	9	True				
ANR	950097	CompoundStatement		232:37:5430:5430	948620	10					
ANR	950098	ExpressionStatement	r_str_trim_path ( ptr )	344:5:8586:8607	948620	0	True				
ANR	950099	CallExpression	r_str_trim_path ( ptr )		948620	0					
ANR	950100	Callee	r_str_trim_path		948620	0					
ANR	950101	Identifier	r_str_trim_path		948620	0					
ANR	950102	ArgumentList	ptr		948620	1					
ANR	950103	Argument	ptr		948620	0					
ANR	950104	Identifier	ptr		948620	0					
ANR	950105	ExpressionStatement	"printf ( ""%s\\n"" , ptr )"	345:5:8614:8634	948620	1	True				
ANR	950106	CallExpression	"printf ( ""%s\\n"" , ptr )"		948620	0					
ANR	950107	Callee	printf		948620	0					
ANR	950108	Identifier	printf		948620	0					
ANR	950109	ArgumentList	"""%s\\n"""		948620	1					
ANR	950110	Argument	"""%s\\n"""		948620	0					
ANR	950111	PrimaryExpression	"""%s\\n"""		948620	0					
ANR	950112	Argument	ptr		948620	1					
ANR	950113	Identifier	ptr		948620	0					
ANR	950114	ElseStatement	else		948620	0					
ANR	950115	ExpressionStatement	"eprintf ( ""Unknown store path\\n"" )"	348:10:8684:8716	948620	0	True				
ANR	950116	CallExpression	"eprintf ( ""Unknown store path\\n"" )"		948620	0					
ANR	950117	Callee	eprintf		948620	0					
ANR	950118	Identifier	eprintf		948620	0					
ANR	950119	ArgumentList	"""Unknown store path\\n"""		948620	1					
ANR	950120	Argument	"""Unknown store path\\n"""		948620	0					
ANR	950121	PrimaryExpression	"""Unknown store path\\n"""		948620	0					
ANR	950122	BreakStatement	break ;	349:3:8721:8726	948620	14	True				
ANR	950123	Label	case 'o' :	350:2:8730:8738	948620	15	True				
ANR	950124	ExpressionStatement	input ++	351:3:8743:8750	948620	16	True				
ANR	950125	PostIncDecOperationExpression	input ++		948620	0					
ANR	950126	Identifier	input		948620	0					
ANR	950127	IncDec	++		948620	1					
ANR	950128	IfStatement	if ( * input == ' ' )		948620	17					
ANR	950129	Condition	* input == ' '	352:7:8759:8771	948620	0	True				
ANR	950130	EqualityExpression	* input == ' '		948620	0		==			
ANR	950131	UnaryOperationExpression	* input		948620	0					
ANR	950132	UnaryOperator	*		948620	0					
ANR	950133	Identifier	input		948620	1					
ANR	950134	PrimaryExpression	' '		948620	1					
ANR	950135	ExpressionStatement	input ++	353:4:8778:8785	948620	1	True				
ANR	950136	PostIncDecOperationExpression	input ++		948620	0					
ANR	950137	Identifier	input		948620	0					
ANR	950138	IncDec	++		948620	1					
ANR	950139	ExpressionStatement	"ptr = strchr ( input , ' ' )"	354:3:8790:8815	948620	18	True				
ANR	950140	AssignmentExpression	"ptr = strchr ( input , ' ' )"		948620	0		=			
ANR	950141	Identifier	ptr		948620	0					
ANR	950142	CallExpression	"strchr ( input , ' ' )"		948620	1					
ANR	950143	Callee	strchr		948620	0					
ANR	950144	Identifier	strchr		948620	0					
ANR	950145	ArgumentList	input		948620	1					
ANR	950146	Argument	input		948620	0					
ANR	950147	Identifier	input		948620	0					
ANR	950148	Argument	' '		948620	1					
ANR	950149	PrimaryExpression	' '		948620	0					
ANR	950150	IfStatement	if ( ptr )		948620	19					
ANR	950151	Condition	ptr	355:7:8824:8826	948620	0	True				
ANR	950152	Identifier	ptr		948620	0					
ANR	950153	CompoundStatement		246:4:5702:5740	948620	1					
ANR	950154	ExpressionStatement	* ptr ++ = 0	356:4:8835:8845	948620	0	True				
ANR	950155	AssignmentExpression	* ptr ++ = 0		948620	0		=			
ANR	950156	UnaryOperationExpression	* ptr ++		948620	0					
ANR	950157	UnaryOperator	*		948620	0					
ANR	950158	PostIncDecOperationExpression	ptr ++		948620	1					
ANR	950159	Identifier	ptr		948620	0					
ANR	950160	IncDec	++		948620	1					
ANR	950161	PrimaryExpression	0		948620	1					
ANR	950162	IdentifierDeclStatement	"ut64 off = r_num_math ( core -> num , ptr ) ;"	357:4:8851:8889	948620	1	True				
ANR	950163	IdentifierDecl	"off = r_num_math ( core -> num , ptr )"		948620	0					
ANR	950164	IdentifierDeclType	ut64		948620	0					
ANR	950165	Identifier	off		948620	1					
ANR	950166	AssignmentExpression	"off = r_num_math ( core -> num , ptr )"		948620	2		=			
ANR	950167	Identifier	off		948620	0					
ANR	950168	CallExpression	"r_num_math ( core -> num , ptr )"		948620	1					
ANR	950169	Callee	r_num_math		948620	0					
ANR	950170	Identifier	r_num_math		948620	0					
ANR	950171	ArgumentList	core -> num		948620	1					
ANR	950172	Argument	core -> num		948620	0					
ANR	950173	PtrMemberAccess	core -> num		948620	0					
ANR	950174	Identifier	core		948620	0					
ANR	950175	Identifier	num		948620	1					
ANR	950176	Argument	ptr		948620	1					
ANR	950177	Identifier	ptr		948620	0					
ANR	950178	ExpressionStatement	"list = r_fs_find_off ( core -> fs , input , off )"	358:4:8895:8938	948620	2	True				
ANR	950179	AssignmentExpression	"list = r_fs_find_off ( core -> fs , input , off )"		948620	0		=			
ANR	950180	Identifier	list		948620	0					
ANR	950181	CallExpression	"r_fs_find_off ( core -> fs , input , off )"		948620	1					
ANR	950182	Callee	r_fs_find_off		948620	0					
ANR	950183	Identifier	r_fs_find_off		948620	0					
ANR	950184	ArgumentList	core -> fs		948620	1					
ANR	950185	Argument	core -> fs		948620	0					
ANR	950186	PtrMemberAccess	core -> fs		948620	0					
ANR	950187	Identifier	core		948620	0					
ANR	950188	Identifier	fs		948620	1					
ANR	950189	Argument	input		948620	1					
ANR	950190	Identifier	input		948620	0					
ANR	950191	Argument	off		948620	2					
ANR	950192	Identifier	off		948620	0					
ANR	950193	Statement	r_list_foreach	359:4:8944:8957	948620	3	True				
ANR	950194	Statement	(	359:19:8959:8959	948620	4	True				
ANR	950195	Statement	list	359:20:8960:8963	948620	5	True				
ANR	950196	Statement	","	359:24:8964:8964	948620	6	True				
ANR	950197	Statement	iter	359:26:8966:8969	948620	7	True				
ANR	950198	Statement	","	359:30:8970:8970	948620	8	True				
ANR	950199	Statement	ptr	359:32:8972:8974	948620	9	True				
ANR	950200	Statement	)	359:35:8975:8975	948620	10	True				
ANR	950201	CompoundStatement		248:37:5828:5828	948620	11					
ANR	950202	ExpressionStatement	r_str_trim_path ( ptr )	360:5:8984:9005	948620	0	True				
ANR	950203	CallExpression	r_str_trim_path ( ptr )		948620	0					
ANR	950204	Callee	r_str_trim_path		948620	0					
ANR	950205	Identifier	r_str_trim_path		948620	0					
ANR	950206	ArgumentList	ptr		948620	1					
ANR	950207	Argument	ptr		948620	0					
ANR	950208	Identifier	ptr		948620	0					
ANR	950209	ExpressionStatement	"printf ( ""%s\\n"" , ptr )"	361:5:9012:9032	948620	1	True				
ANR	950210	CallExpression	"printf ( ""%s\\n"" , ptr )"		948620	0					
ANR	950211	Callee	printf		948620	0					
ANR	950212	Identifier	printf		948620	0					
ANR	950213	ArgumentList	"""%s\\n"""		948620	1					
ANR	950214	Argument	"""%s\\n"""		948620	0					
ANR	950215	PrimaryExpression	"""%s\\n"""		948620	0					
ANR	950216	Argument	ptr		948620	1					
ANR	950217	Identifier	ptr		948620	0					
ANR	950218	ElseStatement	else		948620	0					
ANR	950219	ExpressionStatement	"eprintf ( ""Unknown store path\\n"" )"	364:10:9082:9114	948620	0	True				
ANR	950220	CallExpression	"eprintf ( ""Unknown store path\\n"" )"		948620	0					
ANR	950221	Callee	eprintf		948620	0					
ANR	950222	Identifier	eprintf		948620	0					
ANR	950223	ArgumentList	"""Unknown store path\\n"""		948620	1					
ANR	950224	Argument	"""Unknown store path\\n"""		948620	0					
ANR	950225	PrimaryExpression	"""Unknown store path\\n"""		948620	0					
ANR	950226	BreakStatement	break ;	365:3:9119:9124	948620	20	True				
ANR	950227	BreakStatement	break ;	367:2:9132:9137	948620	99	True				
ANR	950228	Label	case 's' :	368:1:9140:9148	948620	100	True				
ANR	950229	IfStatement	if ( core -> http_up )		948620	101					
ANR	950230	Condition	core -> http_up	369:6:9164:9176	948620	0	True				
ANR	950231	PtrMemberAccess	core -> http_up		948620	0					
ANR	950232	Identifier	core		948620	0					
ANR	950233	Identifier	http_up		948620	1					
ANR	950234	CompoundStatement		258:21:6030:6030	948620	1					
ANR	950235	ExpressionStatement	free ( oinput )	370:3:9184:9197	948620	0	True				
ANR	950236	CallExpression	free ( oinput )		948620	0					
ANR	950237	Callee	free		948620	0					
ANR	950238	Identifier	free		948620	0					
ANR	950239	ArgumentList	oinput		948620	1					
ANR	950240	Argument	oinput		948620	0					
ANR	950241	Identifier	oinput		948620	0					
ANR	950242	ReturnStatement	return false ;	371:3:9202:9214	948620	1	True				
ANR	950243	Identifier	false		948620	0					
ANR	950244	ExpressionStatement	input ++	373:2:9222:9229	948620	102	True				
ANR	950245	PostIncDecOperationExpression	input ++		948620	0					
ANR	950246	Identifier	input		948620	0					
ANR	950247	IncDec	++		948620	1					
ANR	950248	IfStatement	if ( input [ 0 ] == ' ' )		948620	103					
ANR	950249	Condition	input [ 0 ] == ' '	374:6:9237:9251	948620	0	True				
ANR	950250	EqualityExpression	input [ 0 ] == ' '		948620	0		==			
ANR	950251	ArrayIndexing	input [ 0 ]		948620	0					
ANR	950252	Identifier	input		948620	0					
ANR	950253	PrimaryExpression	0		948620	1					
ANR	950254	PrimaryExpression	' '		948620	1					
ANR	950255	CompoundStatement		263:23:6105:6105	948620	1					
ANR	950256	ExpressionStatement	input ++	375:3:9259:9266	948620	0	True				
ANR	950257	PostIncDecOperationExpression	input ++		948620	0					
ANR	950258	Identifier	input		948620	0					
ANR	950259	IncDec	++		948620	1					
ANR	950260	ExpressionStatement	r_cons_set_raw ( false )	377:2:9274:9296	948620	104	True				
ANR	950261	CallExpression	r_cons_set_raw ( false )		948620	0					
ANR	950262	Callee	r_cons_set_raw		948620	0					
ANR	950263	Identifier	r_cons_set_raw		948620	0					
ANR	950264	ArgumentList	false		948620	1					
ANR	950265	Argument	false		948620	0					
ANR	950266	Identifier	false		948620	0					
ANR	950267	CompoundStatement		267:2:6151:6151	948620	105					
ANR	950268	Statement	RFSShell	379:3:9305:9312	948620	0	True				
ANR	950269	Statement	shell	379:12:9314:9318	948620	1	True				
ANR	950270	Statement	=	379:18:9320:9320	948620	2	True				
ANR	950271	CompoundStatement		268:20:6173:6173	948620	3					
ANR	950272	Statement	.	380:4:9328:9328	948620	0	True				
ANR	950273	Statement	cwd	380:5:9329:9331	948620	1	True				
ANR	950274	Statement	=	380:9:9333:9333	948620	2	True				
ANR	950275	Statement	&	380:11:9335:9335	948620	3	True				
ANR	950276	Statement	cwd	380:12:9336:9338	948620	4	True				
ANR	950277	Statement	","	380:15:9339:9339	948620	5	True				
ANR	950278	Statement	.	381:4:9345:9345	948620	6	True				
ANR	950279	Statement	set_prompt	381:5:9346:9355	948620	7	True				
ANR	950280	Statement	=	381:16:9357:9357	948620	8	True				
ANR	950281	Statement	r_line_set_prompt	381:18:9359:9375	948620	9	True				
ANR	950282	Statement	","	381:35:9376:9376	948620	10	True				
ANR	950283	Statement	.	382:4:9382:9382	948620	11	True				
ANR	950284	Statement	readline	382:5:9383:9390	948620	12	True				
ANR	950285	Statement	=	382:14:9392:9392	948620	13	True				
ANR	950286	Statement	r_line_readline	382:16:9394:9408	948620	14	True				
ANR	950287	Statement	","	382:31:9409:9409	948620	15	True				
ANR	950288	Statement	.	383:4:9415:9415	948620	16	True				
ANR	950289	Statement	hist_add	383:5:9416:9423	948620	17	True				
ANR	950290	Statement	=	383:14:9425:9425	948620	18	True				
ANR	950291	Statement	r_line_hist_add	383:16:9427:9441	948620	19	True				
ANR	950292	ExpressionStatement		384:4:9447:9447	948620	4	True				
ANR	950293	ExpressionStatement	core -> rfs = & shell	385:3:9452:9470	948620	5	True				
ANR	950294	AssignmentExpression	core -> rfs = & shell		948620	0		=			
ANR	950295	PtrMemberAccess	core -> rfs		948620	0					
ANR	950296	Identifier	core		948620	0					
ANR	950297	Identifier	rfs		948620	1					
ANR	950298	UnaryOperationExpression	& shell		948620	1					
ANR	950299	UnaryOperator	&		948620	0					
ANR	950300	Identifier	shell		948620	1					
ANR	950301	ExpressionStatement	core -> autocomplete_type = AUTOCOMPLETE_MS	386:3:9475:9516	948620	6	True				
ANR	950302	AssignmentExpression	core -> autocomplete_type = AUTOCOMPLETE_MS		948620	0		=			
ANR	950303	PtrMemberAccess	core -> autocomplete_type		948620	0					
ANR	950304	Identifier	core		948620	0					
ANR	950305	Identifier	autocomplete_type		948620	1					
ANR	950306	Identifier	AUTOCOMPLETE_MS		948620	1					
ANR	950307	ExpressionStatement	r_core_autocomplete_reload ( core )	387:3:9521:9554	948620	7	True				
ANR	950308	CallExpression	r_core_autocomplete_reload ( core )		948620	0					
ANR	950309	Callee	r_core_autocomplete_reload		948620	0					
ANR	950310	Identifier	r_core_autocomplete_reload		948620	0					
ANR	950311	ArgumentList	core		948620	1					
ANR	950312	Argument	core		948620	0					
ANR	950313	Identifier	core		948620	0					
ANR	950314	ExpressionStatement	"r_fs_shell_prompt ( & shell , core -> fs , input )"	388:3:9559:9602	948620	8	True				
ANR	950315	CallExpression	"r_fs_shell_prompt ( & shell , core -> fs , input )"		948620	0					
ANR	950316	Callee	r_fs_shell_prompt		948620	0					
ANR	950317	Identifier	r_fs_shell_prompt		948620	0					
ANR	950318	ArgumentList	& shell		948620	1					
ANR	950319	Argument	& shell		948620	0					
ANR	950320	UnaryOperationExpression	& shell		948620	0					
ANR	950321	UnaryOperator	&		948620	0					
ANR	950322	Identifier	shell		948620	1					
ANR	950323	Argument	core -> fs		948620	1					
ANR	950324	PtrMemberAccess	core -> fs		948620	0					
ANR	950325	Identifier	core		948620	0					
ANR	950326	Identifier	fs		948620	1					
ANR	950327	Argument	input		948620	2					
ANR	950328	Identifier	input		948620	0					
ANR	950329	ExpressionStatement	core -> autocomplete_type = AUTOCOMPLETE_DEFAULT	389:3:9607:9653	948620	9	True				
ANR	950330	AssignmentExpression	core -> autocomplete_type = AUTOCOMPLETE_DEFAULT		948620	0		=			
ANR	950331	PtrMemberAccess	core -> autocomplete_type		948620	0					
ANR	950332	Identifier	core		948620	0					
ANR	950333	Identifier	autocomplete_type		948620	1					
ANR	950334	Identifier	AUTOCOMPLETE_DEFAULT		948620	1					
ANR	950335	ExpressionStatement	r_core_autocomplete_reload ( core )	390:3:9658:9691	948620	10	True				
ANR	950336	CallExpression	r_core_autocomplete_reload ( core )		948620	0					
ANR	950337	Callee	r_core_autocomplete_reload		948620	0					
ANR	950338	Identifier	r_core_autocomplete_reload		948620	0					
ANR	950339	ArgumentList	core		948620	1					
ANR	950340	Argument	core		948620	0					
ANR	950341	Identifier	core		948620	0					
ANR	950342	ExpressionStatement	R_FREE ( cwd )	391:3:9696:9708	948620	11	True				
ANR	950343	CallExpression	R_FREE ( cwd )		948620	0					
ANR	950344	Callee	R_FREE		948620	0					
ANR	950345	Identifier	R_FREE		948620	0					
ANR	950346	ArgumentList	cwd		948620	1					
ANR	950347	Argument	cwd		948620	0					
ANR	950348	Identifier	cwd		948620	0					
ANR	950349	BreakStatement	break ;	393:2:9716:9721	948620	106	True				
ANR	950350	Label	case 'w' :	394:1:9724:9732	948620	107	True				
ANR	950351	IfStatement	if ( input [ 1 ] == ' ' )		948620	108					
ANR	950352	Condition	input [ 1 ] == ' '	395:6:9740:9754	948620	0	True				
ANR	950353	EqualityExpression	input [ 1 ] == ' '		948620	0		==			
ANR	950354	ArrayIndexing	input [ 1 ]		948620	0					
ANR	950355	Identifier	input		948620	0					
ANR	950356	PrimaryExpression	1		948620	1					
ANR	950357	PrimaryExpression	' '		948620	1					
ANR	950358	CompoundStatement		293:3:6784:6829	948620	1					
ANR	950359	IdentifierDeclStatement	char * args = r_str_trim_dup ( input + 1 ) ;	396:3:9762:9801	948620	0	True				
ANR	950360	IdentifierDecl	* args = r_str_trim_dup ( input + 1 )		948620	0					
ANR	950361	IdentifierDeclType	char *		948620	0					
ANR	950362	Identifier	args		948620	1					
ANR	950363	AssignmentExpression	* args = r_str_trim_dup ( input + 1 )		948620	2		=			
ANR	950364	Identifier	args		948620	0					
ANR	950365	CallExpression	r_str_trim_dup ( input + 1 )		948620	1					
ANR	950366	Callee	r_str_trim_dup		948620	0					
ANR	950367	Identifier	r_str_trim_dup		948620	0					
ANR	950368	ArgumentList	input + 1		948620	1					
ANR	950369	Argument	input + 1		948620	0					
ANR	950370	AdditiveExpression	input + 1		948620	0		+			
ANR	950371	Identifier	input		948620	0					
ANR	950372	PrimaryExpression	1		948620	1					
ANR	950373	IdentifierDeclStatement	"char * arg = strchr ( args , ' ' ) ;"	397:3:9806:9836	948620	1	True				
ANR	950374	IdentifierDecl	"* arg = strchr ( args , ' ' )"		948620	0					
ANR	950375	IdentifierDeclType	char *		948620	0					
ANR	950376	Identifier	arg		948620	1					
ANR	950377	AssignmentExpression	"* arg = strchr ( args , ' ' )"		948620	2		=			
ANR	950378	Identifier	arg		948620	0					
ANR	950379	CallExpression	"strchr ( args , ' ' )"		948620	1					
ANR	950380	Callee	strchr		948620	0					
ANR	950381	Identifier	strchr		948620	0					
ANR	950382	ArgumentList	args		948620	1					
ANR	950383	Argument	args		948620	0					
ANR	950384	Identifier	args		948620	0					
ANR	950385	Argument	' '		948620	1					
ANR	950386	PrimaryExpression	' '		948620	0					
ANR	950387	IfStatement	if ( arg )		948620	2					
ANR	950388	Condition	arg	398:7:9845:9847	948620	0	True				
ANR	950389	Identifier	arg		948620	0					
ANR	950390	CompoundStatement		287:12:6701:6701	948620	1					
ANR	950391	ExpressionStatement	data = arg + 1	399:4:9856:9870	948620	0	True				
ANR	950392	AssignmentExpression	data = arg + 1		948620	0		=			
ANR	950393	Identifier	data		948620	0					
ANR	950394	AdditiveExpression	arg + 1		948620	1		+			
ANR	950395	Identifier	arg		948620	0					
ANR	950396	PrimaryExpression	1		948620	1					
ANR	950397	ElseStatement	else		948620	0					
ANR	950398	CompoundStatement		289:10:6733:6733	948620	0					
ANR	950399	ExpressionStatement	"data = """""	401:4:9888:9897	948620	0	True				
ANR	950400	AssignmentExpression	"data = """""		948620	0		=			
ANR	950401	Identifier	data		948620	0					
ANR	950402	PrimaryExpression	""""""		948620	1					
ANR	950403	IdentifierDeclStatement	"RFSFile * f = r_fs_open ( core -> fs , args , true ) ;"	404:3:9933:9978	948620	3	True				
ANR	950404	IdentifierDecl	"* f = r_fs_open ( core -> fs , args , true )"		948620	0					
ANR	950405	IdentifierDeclType	RFSFile *		948620	0					
ANR	950406	Identifier	f		948620	1					
ANR	950407	AssignmentExpression	"* f = r_fs_open ( core -> fs , args , true )"		948620	2		=			
ANR	950408	Identifier	f		948620	0					
ANR	950409	CallExpression	"r_fs_open ( core -> fs , args , true )"		948620	1					
ANR	950410	Callee	r_fs_open		948620	0					
ANR	950411	Identifier	r_fs_open		948620	0					
ANR	950412	ArgumentList	core -> fs		948620	1					
ANR	950413	Argument	core -> fs		948620	0					
ANR	950414	PtrMemberAccess	core -> fs		948620	0					
ANR	950415	Identifier	core		948620	0					
ANR	950416	Identifier	fs		948620	1					
ANR	950417	Argument	args		948620	1					
ANR	950418	Identifier	args		948620	0					
ANR	950419	Argument	true		948620	2					
ANR	950420	Identifier	true		948620	0					
ANR	950421	IfStatement	if ( f )		948620	4					
ANR	950422	Condition	f	405:7:9987:9987	948620	0	True				
ANR	950423	Identifier	f		948620	0					
ANR	950424	CompoundStatement		294:10:6841:6841	948620	1					
ANR	950425	ExpressionStatement	"r_fs_write ( core -> fs , f , 0 , ( const ut8 * ) data , strlen ( data ) )"	406:4:9996:10057	948620	0	True				
ANR	950426	CallExpression	"r_fs_write ( core -> fs , f , 0 , ( const ut8 * ) data , strlen ( data ) )"		948620	0					
ANR	950427	Callee	r_fs_write		948620	0					
ANR	950428	Identifier	r_fs_write		948620	0					
ANR	950429	ArgumentList	core -> fs		948620	1					
ANR	950430	Argument	core -> fs		948620	0					
ANR	950431	PtrMemberAccess	core -> fs		948620	0					
ANR	950432	Identifier	core		948620	0					
ANR	950433	Identifier	fs		948620	1					
ANR	950434	Argument	f		948620	1					
ANR	950435	Identifier	f		948620	0					
ANR	950436	Argument	0		948620	2					
ANR	950437	PrimaryExpression	0		948620	0					
ANR	950438	Argument	( const ut8 * ) data		948620	3					
ANR	950439	CastExpression	( const ut8 * ) data		948620	0					
ANR	950440	CastTarget	const ut8 *		948620	0					
ANR	950441	Identifier	data		948620	1					
ANR	950442	Argument	strlen ( data )		948620	4					
ANR	950443	CallExpression	strlen ( data )		948620	0					
ANR	950444	Callee	strlen		948620	0					
ANR	950445	Identifier	strlen		948620	0					
ANR	950446	ArgumentList	data		948620	1					
ANR	950447	Argument	data		948620	0					
ANR	950448	Identifier	data		948620	0					
ANR	950449	ExpressionStatement	"r_fs_close ( core -> fs , f )"	407:4:10063:10087	948620	1	True				
ANR	950450	CallExpression	"r_fs_close ( core -> fs , f )"		948620	0					
ANR	950451	Callee	r_fs_close		948620	0					
ANR	950452	Identifier	r_fs_close		948620	0					
ANR	950453	ArgumentList	core -> fs		948620	1					
ANR	950454	Argument	core -> fs		948620	0					
ANR	950455	PtrMemberAccess	core -> fs		948620	0					
ANR	950456	Identifier	core		948620	0					
ANR	950457	Identifier	fs		948620	1					
ANR	950458	Argument	f		948620	1					
ANR	950459	Identifier	f		948620	0					
ANR	950460	ExpressionStatement	r_fs_file_free ( f )	408:4:10093:10111	948620	2	True				
ANR	950461	CallExpression	r_fs_file_free ( f )		948620	0					
ANR	950462	Callee	r_fs_file_free		948620	0					
ANR	950463	Identifier	r_fs_file_free		948620	0					
ANR	950464	ArgumentList	f		948620	1					
ANR	950465	Argument	f		948620	0					
ANR	950466	Identifier	f		948620	0					
ANR	950467	ExpressionStatement	free ( args )	409:4:10117:10128	948620	3	True				
ANR	950468	CallExpression	free ( args )		948620	0					
ANR	950469	Callee	free		948620	0					
ANR	950470	Identifier	free		948620	0					
ANR	950471	ArgumentList	args		948620	1					
ANR	950472	Argument	args		948620	0					
ANR	950473	Identifier	args		948620	0					
ANR	950474	ElseStatement	else		948620	0					
ANR	950475	CompoundStatement		300:9:6995:6995	948620	0					
ANR	950476	ExpressionStatement	"eprintf ( ""Usage: mw [file] ([data])\\n"" )"	412:3:10149:10188	948620	0	True				
ANR	950477	CallExpression	"eprintf ( ""Usage: mw [file] ([data])\\n"" )"		948620	0					
ANR	950478	Callee	eprintf		948620	0					
ANR	950479	Identifier	eprintf		948620	0					
ANR	950480	ArgumentList	"""Usage: mw [file] ([data])\\n"""		948620	1					
ANR	950481	Argument	"""Usage: mw [file] ([data])\\n"""		948620	0					
ANR	950482	PrimaryExpression	"""Usage: mw [file] ([data])\\n"""		948620	0					
ANR	950483	BreakStatement	break ;	414:2:10196:10201	948620	109	True				
ANR	950484	Label	case 'y' :	415:1:10204:10212	948620	110	True				
ANR	950485	ExpressionStatement	"eprintf ( ""TODO\\n"" )"	416:2:10216:10234	948620	111	True				
ANR	950486	CallExpression	"eprintf ( ""TODO\\n"" )"		948620	0					
ANR	950487	Callee	eprintf		948620	0					
ANR	950488	Identifier	eprintf		948620	0					
ANR	950489	ArgumentList	"""TODO\\n"""		948620	1					
ANR	950490	Argument	"""TODO\\n"""		948620	0					
ANR	950491	PrimaryExpression	"""TODO\\n"""		948620	0					
ANR	950492	BreakStatement	break ;	417:2:10238:10243	948620	112	True				
ANR	950493	Label	case '?' :	418:1:10246:10254	948620	113	True				
ANR	950494	ExpressionStatement	"r_core_cmd_help ( core , help_msg_m )"	419:2:10258:10292	948620	114	True				
ANR	950495	CallExpression	"r_core_cmd_help ( core , help_msg_m )"		948620	0					
ANR	950496	Callee	r_core_cmd_help		948620	0					
ANR	950497	Identifier	r_core_cmd_help		948620	0					
ANR	950498	ArgumentList	core		948620	1					
ANR	950499	Argument	core		948620	0					
ANR	950500	Identifier	core		948620	0					
ANR	950501	Argument	help_msg_m		948620	1					
ANR	950502	Identifier	help_msg_m		948620	0					
ANR	950503	BreakStatement	break ;	420:2:10296:10301	948620	115	True				
ANR	950504	ExpressionStatement	free ( oinput )	422:1:10307:10320	948620	13	True				
ANR	950505	CallExpression	free ( oinput )		948620	0					
ANR	950506	Callee	free		948620	0					
ANR	950507	Identifier	free		948620	0					
ANR	950508	ArgumentList	oinput		948620	1					
ANR	950509	Argument	oinput		948620	0					
ANR	950510	Identifier	oinput		948620	0					
ANR	950511	ReturnStatement	return 0 ;	423:1:10323:10331	948620	14	True				
ANR	950512	PrimaryExpression	0		948620	0					
ANR	950513	ReturnType	static int		948620	1					
ANR	950514	Identifier	cmd_mount		948620	2					
ANR	950515	ParameterList	"void * data , const char * _input"		948620	3					
ANR	950516	Parameter	void * data	112:21:3116:3125	948620	0	True				
ANR	950517	ParameterType	void *		948620	0					
ANR	950518	Identifier	data		948620	1					
ANR	950519	Parameter	const char * _input	112:33:3128:3145	948620	1	True				
ANR	950520	ParameterType	const char *		948620	0					
ANR	950521	Identifier	_input		948620	1					
ANR	950522	CFGEntryNode	ENTRY		948620		True				
ANR	950523	CFGExitNode	EXIT		948620		True				
ANR	950524	Symbol	r_fs_name		948620						
ANR	950525	Symbol	data		948620						
ANR	950526	Symbol	pj_string		948620						
ANR	950527	Symbol	root -> p		948620						
ANR	950528	Symbol	root -> delta		948620						
ANR	950529	Symbol	* input		948620						
ANR	950530	Symbol	strchr		948620						
ANR	950531	Symbol	core -> offset		948620						
ANR	950532	Symbol	core -> autocomplete_type		948620						
ANR	950533	Symbol	r_str_trim_dup		948620						
ANR	950534	Symbol	strncmp		948620						
ANR	950535	Symbol	strlen		948620						
ANR	950536	Symbol	* * root		948620						
ANR	950537	Symbol	AUTOCOMPLETE_DEFAULT		948620						
ANR	950538	Symbol	* ptr		948620						
ANR	950539	Symbol	file -> size		948620						
ANR	950540	Symbol	* ptr2		948620						
ANR	950541	Symbol	core -> num		948620						
ANR	950542	Symbol	fstype		948620						
ANR	950543	Symbol	r_fs_find_off		948620						
ANR	950544	Symbol	* mountp		948620						
ANR	950545	Symbol	r_fs_partitions		948620						
ANR	950546	Symbol	NULL		948620						
ANR	950547	Symbol	mountp		948620						
ANR	950548	Symbol	* root -> p		948620						
ANR	950549	Symbol	localFile		948620						
ANR	950550	Symbol	plug -> name		948620						
ANR	950551	Symbol	r_io_open		948620						
ANR	950552	Symbol	plug -> desc		948620						
ANR	950553	Symbol	AUTOCOMPLETE_MS		948620						
ANR	950554	Symbol	iter		948620						
ANR	950555	Symbol	list		948620						
ANR	950556	Symbol	* file		948620						
ANR	950557	Symbol	ptr2		948620						
ANR	950558	Symbol	input		948620						
ANR	950559	Symbol	core		948620						
ANR	950560	Symbol	r_str_trim_ro		948620						
ANR	950561	Symbol	true		948620						
ANR	950562	Symbol	plug		948620						
ANR	950563	Symbol	core -> fs		948620						
ANR	950564	Symbol	* root		948620						
ANR	950565	Symbol	root -> p -> name		948620						
ANR	950566	Symbol	fd		948620						
ANR	950567	Symbol	r_fs_find_name		948620						
ANR	950568	Symbol	part		948620						
ANR	950569	Symbol	* core		948620						
ANR	950570	Symbol	r_str_newf		948620						
ANR	950571	Symbol	r_num_math		948620						
ANR	950572	Symbol	cmd_mv		948620						
ANR	950573	Symbol	help_msg_m		948620						
ANR	950574	Symbol	file		948620						
ANR	950575	Symbol	R_PERM_RW		948620						
ANR	950576	Symbol	core -> io		948620						
ANR	950577	Symbol	core -> rfs		948620						
ANR	950578	Symbol	r_fs_dir_dump		948620						
ANR	950579	Symbol	root		948620						
ANR	950580	Symbol	arg		948620						
ANR	950581	Symbol	core -> http_up		948620						
ANR	950582	Symbol	r_fs_mount		948620						
ANR	950583	Symbol	_input		948620						
ANR	950584	Symbol	oinput		948620						
ANR	950585	Symbol	r_fs_open		948620						
ANR	950586	Symbol	* ptr ++		948620						
ANR	950587	Symbol	f		948620						
ANR	950588	Symbol	* plug		948620						
ANR	950589	Symbol	false		948620						
ANR	950590	Symbol	uri		948620						
ANR	950591	Symbol	off		948620						
ANR	950592	Symbol	ptr		948620						
ANR	950593	Symbol	* fstype		948620						
ANR	950594	Symbol	args		948620						
ANR	950595	Symbol	cwd		948620						
ANR	950596	Symbol	root -> path		948620						
ANR	950597	Symbol	file -> data		948620						
ANR	950598	Symbol	pj		948620						
ANR	950599	Symbol	pj_new		948620						
ANR	950600	Symbol	slash		948620						
ANR	950601	Symbol	r_str_rchr		948620						
ANR	950602	Symbol	strdup		948620						
ANR	950603	Symbol	& shell		948620						
ANR	950604	Symbol	cmd_mkdir		948620						
