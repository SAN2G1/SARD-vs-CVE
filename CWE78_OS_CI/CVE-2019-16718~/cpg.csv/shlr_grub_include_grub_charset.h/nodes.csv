command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5897135	File	data/converged/CVE-2019-16718~_radare2/shlr_grub_include_grub_charset.h								
ANR	5897136	DeclStmt									
ANR	5897137	Decl							grub_ssize_t	"grub_ssize_t ( grub_uint16_t * dest , grub_size_t destsize , const grub_uint8_t * src , grub_size_t srcsize , const grub_uint8_t * * srcend )"	grub_utf8_to_utf16
ANR	5897138	Function	grub_utf16_to_utf8	51:0:1795:2994							
ANR	5897139	FunctionDef	"grub_utf16_to_utf8 (grub_uint8_t * dest , grub_uint16_t * src , grub_size_t size)"		5897138	0					
ANR	5897140	CompoundStatement		54:0:1908:2994	5897138	0					
ANR	5897141	IdentifierDeclStatement	grub_uint32_t code_high = 0 ;	55:2:1912:1939	5897138	0	True				
ANR	5897142	IdentifierDecl	code_high = 0		5897138	0					
ANR	5897143	IdentifierDeclType	grub_uint32_t		5897138	0					
ANR	5897144	Identifier	code_high		5897138	1					
ANR	5897145	AssignmentExpression	code_high = 0		5897138	2		=			
ANR	5897146	Identifier	code_high		5897138	0					
ANR	5897147	PrimaryExpression	0		5897138	1					
ANR	5897148	WhileStatement	while ( size -- )		5897138	1					
ANR	5897149	Condition	size --	57:9:1951:1956	5897138	0	True				
ANR	5897150	PostIncDecOperationExpression	size --		5897138	0					
ANR	5897151	Identifier	size		5897138	0					
ANR	5897152	IncDec	--		5897138	1					
ANR	5897153	CompoundStatement		6:6:62:89	5897138	1					
ANR	5897154	IdentifierDeclStatement	grub_uint32_t code = * src ++ ;	59:6:1971:1998	5897138	0	True				
ANR	5897155	IdentifierDecl	code = * src ++		5897138	0					
ANR	5897156	IdentifierDeclType	grub_uint32_t		5897138	0					
ANR	5897157	Identifier	code		5897138	1					
ANR	5897158	AssignmentExpression	code = * src ++		5897138	2		=			
ANR	5897159	Identifier	code		5897138	0					
ANR	5897160	UnaryOperationExpression	* src ++		5897138	1					
ANR	5897161	UnaryOperator	*		5897138	0					
ANR	5897162	PostIncDecOperationExpression	src ++		5897138	1					
ANR	5897163	Identifier	src		5897138	0					
ANR	5897164	IncDec	++		5897138	1					
ANR	5897165	IfStatement	if ( code_high )		5897138	1					
ANR	5897166	Condition	code_high	61:10:2011:2019	5897138	0	True				
ANR	5897167	Identifier	code_high		5897138	0					
ANR	5897168	CompoundStatement		9:1:114:114	5897138	1					
ANR	5897169	IfStatement	if ( code >= 0xDC00 && code <= 0xDFFF )		5897138	0					
ANR	5897170	Condition	code >= 0xDC00 && code <= 0xDFFF	63:7:2032:2063	5897138	0	True				
ANR	5897171	AndExpression	code >= 0xDC00 && code <= 0xDFFF		5897138	0		&&			
ANR	5897172	RelationalExpression	code >= 0xDC00		5897138	0		>=			
ANR	5897173	Identifier	code		5897138	0					
ANR	5897174	PrimaryExpression	0xDC00		5897138	1					
ANR	5897175	RelationalExpression	code <= 0xDFFF		5897138	1		<=			
ANR	5897176	Identifier	code		5897138	0					
ANR	5897177	PrimaryExpression	0xDFFF		5897138	1					
ANR	5897178	CompoundStatement		11:5:162:162	5897138	1					
ANR	5897179	ExpressionStatement	code = ( ( code_high - 0xD800 ) << 12 ) + ( code - 0xDC00 ) + 0x10000	66:7:2110:2173	5897138	0	True				
ANR	5897180	AssignmentExpression	code = ( ( code_high - 0xD800 ) << 12 ) + ( code - 0xDC00 ) + 0x10000		5897138	0		=			
ANR	5897181	Identifier	code		5897138	0					
ANR	5897182	AdditiveExpression	( ( code_high - 0xD800 ) << 12 ) + ( code - 0xDC00 ) + 0x10000		5897138	1		+			
ANR	5897183	ShiftExpression	( code_high - 0xD800 ) << 12		5897138	0		<<			
ANR	5897184	AdditiveExpression	code_high - 0xD800		5897138	0		-			
ANR	5897185	Identifier	code_high		5897138	0					
ANR	5897186	PrimaryExpression	0xD800		5897138	1					
ANR	5897187	PrimaryExpression	12		5897138	1					
ANR	5897188	AdditiveExpression	( code - 0xDC00 ) + 0x10000		5897138	1		+			
ANR	5897189	AdditiveExpression	code - 0xDC00		5897138	0		-			
ANR	5897190	Identifier	code		5897138	0					
ANR	5897191	PrimaryExpression	0xDC00		5897138	1					
ANR	5897192	PrimaryExpression	0x10000		5897138	1					
ANR	5897193	ExpressionStatement	* dest ++ = ( code >> 18 ) | 0xF0	68:7:2183:2212	5897138	1	True				
ANR	5897194	AssignmentExpression	* dest ++ = ( code >> 18 ) | 0xF0		5897138	0		=			
ANR	5897195	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897196	UnaryOperator	*		5897138	0					
ANR	5897197	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897198	Identifier	dest		5897138	0					
ANR	5897199	IncDec	++		5897138	1					
ANR	5897200	InclusiveOrExpression	( code >> 18 ) | 0xF0		5897138	1		|			
ANR	5897201	ShiftExpression	code >> 18		5897138	0		>>			
ANR	5897202	Identifier	code		5897138	0					
ANR	5897203	PrimaryExpression	18		5897138	1					
ANR	5897204	PrimaryExpression	0xF0		5897138	1					
ANR	5897205	ExpressionStatement	* dest ++ = ( ( code >> 12 ) & 0x3F ) | 0x80	69:7:2221:2259	5897138	2	True				
ANR	5897206	AssignmentExpression	* dest ++ = ( ( code >> 12 ) & 0x3F ) | 0x80		5897138	0		=			
ANR	5897207	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897208	UnaryOperator	*		5897138	0					
ANR	5897209	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897210	Identifier	dest		5897138	0					
ANR	5897211	IncDec	++		5897138	1					
ANR	5897212	InclusiveOrExpression	( ( code >> 12 ) & 0x3F ) | 0x80		5897138	1		|			
ANR	5897213	BitAndExpression	( code >> 12 ) & 0x3F		5897138	0		&			
ANR	5897214	ShiftExpression	code >> 12		5897138	0		>>			
ANR	5897215	Identifier	code		5897138	0					
ANR	5897216	PrimaryExpression	12		5897138	1					
ANR	5897217	PrimaryExpression	0x3F		5897138	1					
ANR	5897218	PrimaryExpression	0x80		5897138	1					
ANR	5897219	ExpressionStatement	* dest ++ = ( ( code >> 6 ) & 0x3F ) | 0x80	70:7:2268:2305	5897138	3	True				
ANR	5897220	AssignmentExpression	* dest ++ = ( ( code >> 6 ) & 0x3F ) | 0x80		5897138	0		=			
ANR	5897221	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897222	UnaryOperator	*		5897138	0					
ANR	5897223	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897224	Identifier	dest		5897138	0					
ANR	5897225	IncDec	++		5897138	1					
ANR	5897226	InclusiveOrExpression	( ( code >> 6 ) & 0x3F ) | 0x80		5897138	1		|			
ANR	5897227	BitAndExpression	( code >> 6 ) & 0x3F		5897138	0		&			
ANR	5897228	ShiftExpression	code >> 6		5897138	0		>>			
ANR	5897229	Identifier	code		5897138	0					
ANR	5897230	PrimaryExpression	6		5897138	1					
ANR	5897231	PrimaryExpression	0x3F		5897138	1					
ANR	5897232	PrimaryExpression	0x80		5897138	1					
ANR	5897233	ExpressionStatement	* dest ++ = ( code & 0x3F ) | 0x80	71:7:2314:2344	5897138	4	True				
ANR	5897234	AssignmentExpression	* dest ++ = ( code & 0x3F ) | 0x80		5897138	0		=			
ANR	5897235	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897236	UnaryOperator	*		5897138	0					
ANR	5897237	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897238	Identifier	dest		5897138	0					
ANR	5897239	IncDec	++		5897138	1					
ANR	5897240	InclusiveOrExpression	( code & 0x3F ) | 0x80		5897138	1		|			
ANR	5897241	BitAndExpression	code & 0x3F		5897138	0		&			
ANR	5897242	Identifier	code		5897138	0					
ANR	5897243	PrimaryExpression	0x3F		5897138	1					
ANR	5897244	PrimaryExpression	0x80		5897138	1					
ANR	5897245	ElseStatement	else		5897138	0					
ANR	5897246	CompoundStatement		21:5:457:457	5897138	0					
ANR	5897247	ExpressionStatement	* dest ++ = '?'	76:7:2398:2411	5897138	0	True				
ANR	5897248	AssignmentExpression	* dest ++ = '?'		5897138	0		=			
ANR	5897249	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897250	UnaryOperator	*		5897138	0					
ANR	5897251	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897252	Identifier	dest		5897138	0					
ANR	5897253	IncDec	++		5897138	1					
ANR	5897254	PrimaryExpression	'?'		5897138	1					
ANR	5897255	ExpressionStatement	code_high = 0	79:3:2424:2437	5897138	1	True				
ANR	5897256	AssignmentExpression	code_high = 0		5897138	0		=			
ANR	5897257	Identifier	code_high		5897138	0					
ANR	5897258	PrimaryExpression	0		5897138	1					
ANR	5897259	ElseStatement	else		5897138	0					
ANR	5897260	CompoundStatement		29:1:545:545	5897138	0					
ANR	5897261	IfStatement	if ( code <= 0x007F )		5897138	0					
ANR	5897262	Condition	code <= 0x007F	83:7:2463:2476	5897138	0	True				
ANR	5897263	RelationalExpression	code <= 0x007F		5897138	0		<=			
ANR	5897264	Identifier	code		5897138	0					
ANR	5897265	PrimaryExpression	0x007F		5897138	1					
ANR	5897266	ExpressionStatement	* dest ++ = code	84:5:2484:2498	5897138	1	True				
ANR	5897267	AssignmentExpression	* dest ++ = code		5897138	0		=			
ANR	5897268	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897269	UnaryOperator	*		5897138	0					
ANR	5897270	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897271	Identifier	dest		5897138	0					
ANR	5897272	IncDec	++		5897138	1					
ANR	5897273	Identifier	code		5897138	1					
ANR	5897274	ElseStatement	else		5897138	0					
ANR	5897275	IfStatement	if ( code <= 0x07FF )		5897138	0					
ANR	5897276	Condition	code <= 0x07FF	85:12:2512:2525	5897138	0	True				
ANR	5897277	RelationalExpression	code <= 0x07FF		5897138	0		<=			
ANR	5897278	Identifier	code		5897138	0					
ANR	5897279	PrimaryExpression	0x07FF		5897138	1					
ANR	5897280	CompoundStatement		33:5:624:624	5897138	1					
ANR	5897281	ExpressionStatement	* dest ++ = ( code >> 6 ) | 0xC0	87:7:2542:2570	5897138	0	True				
ANR	5897282	AssignmentExpression	* dest ++ = ( code >> 6 ) | 0xC0		5897138	0		=			
ANR	5897283	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897284	UnaryOperator	*		5897138	0					
ANR	5897285	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897286	Identifier	dest		5897138	0					
ANR	5897287	IncDec	++		5897138	1					
ANR	5897288	InclusiveOrExpression	( code >> 6 ) | 0xC0		5897138	1		|			
ANR	5897289	ShiftExpression	code >> 6		5897138	0		>>			
ANR	5897290	Identifier	code		5897138	0					
ANR	5897291	PrimaryExpression	6		5897138	1					
ANR	5897292	PrimaryExpression	0xC0		5897138	1					
ANR	5897293	ExpressionStatement	* dest ++ = ( code & 0x3F ) | 0x80	88:7:2579:2609	5897138	1	True				
ANR	5897294	AssignmentExpression	* dest ++ = ( code & 0x3F ) | 0x80		5897138	0		=			
ANR	5897295	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897296	UnaryOperator	*		5897138	0					
ANR	5897297	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897298	Identifier	dest		5897138	0					
ANR	5897299	IncDec	++		5897138	1					
ANR	5897300	InclusiveOrExpression	( code & 0x3F ) | 0x80		5897138	1		|			
ANR	5897301	BitAndExpression	code & 0x3F		5897138	0		&			
ANR	5897302	Identifier	code		5897138	0					
ANR	5897303	PrimaryExpression	0x3F		5897138	1					
ANR	5897304	PrimaryExpression	0x80		5897138	1					
ANR	5897305	ElseStatement	else		5897138	0					
ANR	5897306	IfStatement	if ( code >= 0xD800 && code <= 0xDBFF )		5897138	0					
ANR	5897307	Condition	code >= 0xD800 && code <= 0xDBFF	90:12:2630:2661	5897138	0	True				
ANR	5897308	AndExpression	code >= 0xD800 && code <= 0xDBFF		5897138	0		&&			
ANR	5897309	RelationalExpression	code >= 0xD800		5897138	0		>=			
ANR	5897310	Identifier	code		5897138	0					
ANR	5897311	PrimaryExpression	0xD800		5897138	1					
ANR	5897312	RelationalExpression	code <= 0xDBFF		5897138	1		<=			
ANR	5897313	Identifier	code		5897138	0					
ANR	5897314	PrimaryExpression	0xDBFF		5897138	1					
ANR	5897315	CompoundStatement		38:5:760:760	5897138	1					
ANR	5897316	ExpressionStatement	code_high = code	92:7:2678:2694	5897138	0	True				
ANR	5897317	AssignmentExpression	code_high = code		5897138	0		=			
ANR	5897318	Identifier	code_high		5897138	0					
ANR	5897319	Identifier	code		5897138	1					
ANR	5897320	ContinueStatement	continue ;	93:7:2703:2711	5897138	1	True				
ANR	5897321	ElseStatement	else		5897138	0					
ANR	5897322	IfStatement	if ( code >= 0xDC00 && code <= 0xDFFF )		5897138	0					
ANR	5897323	Condition	code >= 0xDC00 && code <= 0xDFFF	95:12:2732:2763	5897138	0	True				
ANR	5897324	AndExpression	code >= 0xDC00 && code <= 0xDFFF		5897138	0		&&			
ANR	5897325	RelationalExpression	code >= 0xDC00		5897138	0		>=			
ANR	5897326	Identifier	code		5897138	0					
ANR	5897327	PrimaryExpression	0xDC00		5897138	1					
ANR	5897328	RelationalExpression	code <= 0xDFFF		5897138	1		<=			
ANR	5897329	Identifier	code		5897138	0					
ANR	5897330	PrimaryExpression	0xDFFF		5897138	1					
ANR	5897331	CompoundStatement		43:5:862:862	5897138	1					
ANR	5897332	ExpressionStatement	* dest ++ = '?'	98:7:2802:2815	5897138	0	True				
ANR	5897333	AssignmentExpression	* dest ++ = '?'		5897138	0		=			
ANR	5897334	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897335	UnaryOperator	*		5897138	0					
ANR	5897336	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897337	Identifier	dest		5897138	0					
ANR	5897338	IncDec	++		5897138	1					
ANR	5897339	PrimaryExpression	'?'		5897138	1					
ANR	5897340	ElseStatement	else		5897138	0					
ANR	5897341	CompoundStatement		48:5:928:928	5897138	0					
ANR	5897342	ExpressionStatement	* dest ++ = ( code >> 12 ) | 0xE0	102:7:2846:2875	5897138	0	True				
ANR	5897343	AssignmentExpression	* dest ++ = ( code >> 12 ) | 0xE0		5897138	0		=			
ANR	5897344	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897345	UnaryOperator	*		5897138	0					
ANR	5897346	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897347	Identifier	dest		5897138	0					
ANR	5897348	IncDec	++		5897138	1					
ANR	5897349	InclusiveOrExpression	( code >> 12 ) | 0xE0		5897138	1		|			
ANR	5897350	ShiftExpression	code >> 12		5897138	0		>>			
ANR	5897351	Identifier	code		5897138	0					
ANR	5897352	PrimaryExpression	12		5897138	1					
ANR	5897353	PrimaryExpression	0xE0		5897138	1					
ANR	5897354	ExpressionStatement	* dest ++ = ( ( code >> 6 ) & 0x3F ) | 0x80	103:7:2884:2921	5897138	1	True				
ANR	5897355	AssignmentExpression	* dest ++ = ( ( code >> 6 ) & 0x3F ) | 0x80		5897138	0		=			
ANR	5897356	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897357	UnaryOperator	*		5897138	0					
ANR	5897358	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897359	Identifier	dest		5897138	0					
ANR	5897360	IncDec	++		5897138	1					
ANR	5897361	InclusiveOrExpression	( ( code >> 6 ) & 0x3F ) | 0x80		5897138	1		|			
ANR	5897362	BitAndExpression	( code >> 6 ) & 0x3F		5897138	0		&			
ANR	5897363	ShiftExpression	code >> 6		5897138	0		>>			
ANR	5897364	Identifier	code		5897138	0					
ANR	5897365	PrimaryExpression	6		5897138	1					
ANR	5897366	PrimaryExpression	0x3F		5897138	1					
ANR	5897367	PrimaryExpression	0x80		5897138	1					
ANR	5897368	ExpressionStatement	* dest ++ = ( code & 0x3F ) | 0x80	104:7:2930:2960	5897138	2	True				
ANR	5897369	AssignmentExpression	* dest ++ = ( code & 0x3F ) | 0x80		5897138	0		=			
ANR	5897370	UnaryOperationExpression	* dest ++		5897138	0					
ANR	5897371	UnaryOperator	*		5897138	0					
ANR	5897372	PostIncDecOperationExpression	dest ++		5897138	1					
ANR	5897373	Identifier	dest		5897138	0					
ANR	5897374	IncDec	++		5897138	1					
ANR	5897375	InclusiveOrExpression	( code & 0x3F ) | 0x80		5897138	1		|			
ANR	5897376	BitAndExpression	code & 0x3F		5897138	0		&			
ANR	5897377	Identifier	code		5897138	0					
ANR	5897378	PrimaryExpression	0x3F		5897138	1					
ANR	5897379	PrimaryExpression	0x80		5897138	1					
ANR	5897380	ReturnStatement	return dest ;	109:2:2981:2992	5897138	2	True				
ANR	5897381	Identifier	dest		5897138	0					
ANR	5897382	ReturnType	static inline grub_uint8_t *		5897138	1					
ANR	5897383	Identifier	grub_utf16_to_utf8		5897138	2					
ANR	5897384	ParameterList	"grub_uint8_t * dest , grub_uint16_t * src , grub_size_t size"		5897138	3					
ANR	5897385	Parameter	grub_uint8_t * dest	52:20:1844:1861	5897138	0	True				
ANR	5897386	ParameterType	grub_uint8_t *		5897138	0					
ANR	5897387	Identifier	dest		5897138	1					
ANR	5897388	Parameter	grub_uint16_t * src	52:40:1864:1881	5897138	1	True				
ANR	5897389	ParameterType	grub_uint16_t *		5897138	0					
ANR	5897390	Identifier	src		5897138	1					
ANR	5897391	Parameter	grub_size_t size	53:6:1890:1905	5897138	2	True				
ANR	5897392	ParameterType	grub_size_t		5897138	0					
ANR	5897393	Identifier	size		5897138	1					
ANR	5897394	CFGEntryNode	ENTRY		5897138		True				
ANR	5897395	CFGExitNode	EXIT		5897138		True				
ANR	5897396	Symbol	code		5897138						
ANR	5897397	Symbol	size		5897138						
ANR	5897398	Symbol	src		5897138						
ANR	5897399	Symbol	* src ++		5897138						
ANR	5897400	Symbol	code_high		5897138						
ANR	5897401	Symbol	* dest ++		5897138						
ANR	5897402	Symbol	dest		5897138						
ANR	5897403	DeclStmt									
ANR	5897404	Decl							char	"char * ( grub_uint32_t * src , grub_size_t size )"	grub_ucs4_to_utf8_alloc
ANR	5897405	DeclStmt									
ANR	5897406	Decl							int	"int ( const grub_uint8_t * src , grub_size_t srcsize )"	grub_is_valid_utf8
ANR	5897407	DeclStmt									
ANR	5897408	Decl							int	"int ( const char * msg , grub_uint32_t * * unicode_msg , grub_uint32_t * * last_position )"	grub_utf8_to_ucs4_alloc
