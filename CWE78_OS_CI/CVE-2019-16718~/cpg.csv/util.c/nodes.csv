command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6385490	File	data/converged/CVE-2019-16718~_radare2/util.c								
ANR	6385491	ClassDef	timezone	16:0:262:382							
ANR	6385492	DeclStmt									
ANR	6385493	Decl							int	int	tz_minuteswest
ANR	6385494	DeclStmt									
ANR	6385495	Decl							int	int	tz_dsttime
ANR	6385496	Function	gettimeofday	21:0:386:1466							
ANR	6385497	FunctionDef	"gettimeofday (struct timeval * p , struct timezone * tz)"		6385496	0					
ANR	6385498	CompoundStatement		21:59:445:1466	6385496	0					
ANR	6385499	IdentifierDeclStatement	ut64 ul = 0 ;	23:1:495:506	6385496	0	True				
ANR	6385500	IdentifierDecl	ul = 0		6385496	0					
ANR	6385501	IdentifierDeclType	ut64		6385496	0					
ANR	6385502	Identifier	ul		6385496	1					
ANR	6385503	AssignmentExpression	ul = 0		6385496	2		=			
ANR	6385504	Identifier	ul		6385496	0					
ANR	6385505	PrimaryExpression	0		6385496	1					
ANR	6385506	Statement	static	24:1:509:514	6385496	1	True				
ANR	6385507	IdentifierDeclStatement	int tzflag = 0 ;	24:8:516:530	6385496	2	True				
ANR	6385508	IdentifierDecl	tzflag = 0		6385496	0					
ANR	6385509	IdentifierDeclType	int		6385496	0					
ANR	6385510	Identifier	tzflag		6385496	1					
ANR	6385511	AssignmentExpression	tzflag = 0		6385496	2		=			
ANR	6385512	Identifier	tzflag		6385496	0					
ANR	6385513	PrimaryExpression	0		6385496	1					
ANR	6385514	IdentifierDeclStatement	FILETIME ft ;	25:1:533:544	6385496	3	True				
ANR	6385515	IdentifierDecl	ft		6385496	0					
ANR	6385516	IdentifierDeclType	FILETIME		6385496	0					
ANR	6385517	Identifier	ft		6385496	1					
ANR	6385518	IfStatement	if ( p )		6385496	4					
ANR	6385519	Condition	p	26:5:551:551	6385496	0	True				
ANR	6385520	Identifier	p		6385496	0					
ANR	6385521	CompoundStatement		6:8:108:108	6385496	1					
ANR	6385522	ExpressionStatement	GetSystemTimeAsFileTime ( & ft )	29:2:672:701	6385496	0	True				
ANR	6385523	CallExpression	GetSystemTimeAsFileTime ( & ft )		6385496	0					
ANR	6385524	Callee	GetSystemTimeAsFileTime		6385496	0					
ANR	6385525	Identifier	GetSystemTimeAsFileTime		6385496	0					
ANR	6385526	ArgumentList	& ft		6385496	1					
ANR	6385527	Argument	& ft		6385496	0					
ANR	6385528	UnaryOperationExpression	& ft		6385496	0					
ANR	6385529	UnaryOperator	&		6385496	0					
ANR	6385530	Identifier	ft		6385496	1					
ANR	6385531	ExpressionStatement	ul |= ft . dwHighDateTime	33:2:822:845	6385496	1	True				
ANR	6385532	AssignmentExpression	ul |= ft . dwHighDateTime		6385496	0		|=			
ANR	6385533	Identifier	ul		6385496	0					
ANR	6385534	MemberAccess	ft . dwHighDateTime		6385496	1					
ANR	6385535	Identifier	ft		6385496	0					
ANR	6385536	Identifier	dwHighDateTime		6385496	1					
ANR	6385537	ExpressionStatement	ul <<= 32	34:2:849:858	6385496	2	True				
ANR	6385538	AssignmentExpression	ul <<= 32		6385496	0		<<=			
ANR	6385539	Identifier	ul		6385496	0					
ANR	6385540	PrimaryExpression	32		6385496	1					
ANR	6385541	ExpressionStatement	ul |= ft . dwLowDateTime	35:2:862:884	6385496	3	True				
ANR	6385542	AssignmentExpression	ul |= ft . dwLowDateTime		6385496	0		|=			
ANR	6385543	Identifier	ul		6385496	0					
ANR	6385544	MemberAccess	ft . dwLowDateTime		6385496	1					
ANR	6385545	Identifier	ft		6385496	0					
ANR	6385546	Identifier	dwLowDateTime		6385496	1					
ANR	6385547	ExpressionStatement	ul /= 10	38:2:944:952	6385496	4	True				
ANR	6385548	AssignmentExpression	ul /= 10		6385496	0		/=			
ANR	6385549	Identifier	ul		6385496	0					
ANR	6385550	PrimaryExpression	10		6385496	1					
ANR	6385551	Statement	ul	41:2:1038:1039	6385496	5	True				
ANR	6385552	Statement	-=	41:5:1041:1042	6385496	6	True				
ANR	6385553	Statement	11644473600000000UL	41:8:1044:1062	6385496	7	True				
ANR	6385554	ExpressionStatement	L	41:27:1063:1064	6385496	8	True				
ANR	6385555	Identifier	L		6385496	0					
ANR	6385556	Statement	p	46:2:1246:1246	6385496	9	True				
ANR	6385557	Statement	->	46:3:1247:1248	6385496	10	True				
ANR	6385558	Statement	tv_sec	46:5:1249:1254	6385496	11	True				
ANR	6385559	Statement	=	46:12:1256:1256	6385496	12	True				
ANR	6385560	Statement	(	46:14:1258:1258	6385496	13	True				
ANR	6385561	Statement	long	46:15:1259:1262	6385496	14	True				
ANR	6385562	Statement	)	46:19:1263:1263	6385496	15	True				
ANR	6385563	Statement	(	46:20:1264:1264	6385496	16	True				
ANR	6385564	Statement	ul	46:21:1265:1266	6385496	17	True				
ANR	6385565	Statement	/	46:24:1268:1268	6385496	18	True				
ANR	6385566	Statement	1000000L	46:26:1270:1277	6385496	19	True				
ANR	6385567	Statement	L	46:34:1278:1278	6385496	20	True				
ANR	6385568	Statement	)	46:35:1279:1279	6385496	21	True				
ANR	6385569	ExpressionStatement		46:36:1280:1280	6385496	22	True				
ANR	6385570	Statement	p	47:2:1284:1284	6385496	23	True				
ANR	6385571	Statement	->	47:3:1285:1286	6385496	24	True				
ANR	6385572	Statement	tv_usec	47:5:1287:1293	6385496	25	True				
ANR	6385573	Statement	=	47:13:1295:1295	6385496	26	True				
ANR	6385574	Statement	(	47:15:1297:1297	6385496	27	True				
ANR	6385575	Statement	long	47:16:1298:1301	6385496	28	True				
ANR	6385576	Statement	)	47:20:1302:1302	6385496	29	True				
ANR	6385577	Statement	(	47:21:1303:1303	6385496	30	True				
ANR	6385578	Statement	ul	47:22:1304:1305	6385496	31	True				
ANR	6385579	Statement	%	47:25:1307:1307	6385496	32	True				
ANR	6385580	Statement	1000000L	47:27:1309:1316	6385496	33	True				
ANR	6385581	Statement	L	47:35:1317:1317	6385496	34	True				
ANR	6385582	Statement	)	47:36:1318:1318	6385496	35	True				
ANR	6385583	ExpressionStatement		47:37:1319:1319	6385496	36	True				
ANR	6385584	IfStatement	if ( tz )		6385496	5					
ANR	6385585	Condition	tz	49:5:1329:1330	6385496	0	True				
ANR	6385586	Identifier	tz		6385496	0					
ANR	6385587	CompoundStatement		29:9:887:887	6385496	1					
ANR	6385588	IfStatement	if ( ! tzflag )		6385496	0					
ANR	6385589	Condition	! tzflag	50:6:1341:1347	6385496	0	True				
ANR	6385590	UnaryOperationExpression	! tzflag		6385496	0					
ANR	6385591	UnaryOperator	!		6385496	0					
ANR	6385592	Identifier	tzflag		6385496	1					
ANR	6385593	CompoundStatement		30:15:904:904	6385496	1					
ANR	6385594	ExpressionStatement	_tzset ( )	51:3:1355:1364	6385496	0	True				
ANR	6385595	CallExpression	_tzset ( )		6385496	0					
ANR	6385596	Callee	_tzset		6385496	0					
ANR	6385597	Identifier	_tzset		6385496	0					
ANR	6385598	ArgumentList			6385496	1					
ANR	6385599	ExpressionStatement	tzflag ++	52:3:1369:1377	6385496	1	True				
ANR	6385600	PostIncDecOperationExpression	tzflag ++		6385496	0					
ANR	6385601	Identifier	tzflag		6385496	0					
ANR	6385602	IncDec	++		6385496	1					
ANR	6385603	ExpressionStatement	tz -> tz_minuteswest = _timezone / 60	54:2:1385:1420	6385496	1	True				
ANR	6385604	AssignmentExpression	tz -> tz_minuteswest = _timezone / 60		6385496	0		=			
ANR	6385605	PtrMemberAccess	tz -> tz_minuteswest		6385496	0					
ANR	6385606	Identifier	tz		6385496	0					
ANR	6385607	Identifier	tz_minuteswest		6385496	1					
ANR	6385608	MultiplicativeExpression	_timezone / 60		6385496	1		/			
ANR	6385609	Identifier	_timezone		6385496	0					
ANR	6385610	PrimaryExpression	60		6385496	1					
ANR	6385611	ExpressionStatement	tz -> tz_dsttime = _daylight	55:2:1424:1450	6385496	2	True				
ANR	6385612	AssignmentExpression	tz -> tz_dsttime = _daylight		6385496	0		=			
ANR	6385613	PtrMemberAccess	tz -> tz_dsttime		6385496	0					
ANR	6385614	Identifier	tz		6385496	0					
ANR	6385615	Identifier	tz_dsttime		6385496	1					
ANR	6385616	Identifier	_daylight		6385496	1					
ANR	6385617	ReturnStatement	return 0 ;	57:1:1456:1464	6385496	6	True				
ANR	6385618	PrimaryExpression	0		6385496	0					
ANR	6385619	ReturnType	int		6385496	1					
ANR	6385620	Identifier	gettimeofday		6385496	2					
ANR	6385621	ParameterList	"struct timeval * p , struct timezone * tz"		6385496	3					
ANR	6385622	Parameter	struct timeval * p	21:18:404:420	6385496	0	True				
ANR	6385623	ParameterType	struct timeval *		6385496	0					
ANR	6385624	Identifier	p		6385496	1					
ANR	6385625	Parameter	struct timezone * tz	21:37:423:442	6385496	1	True				
ANR	6385626	ParameterType	struct timezone *		6385496	0					
ANR	6385627	Identifier	tz		6385496	1					
ANR	6385628	CFGEntryNode	ENTRY		6385496		True				
ANR	6385629	CFGExitNode	EXIT		6385496		True				
ANR	6385630	Symbol	tz		6385496						
ANR	6385631	Symbol	ft . dwLowDateTime		6385496						
ANR	6385632	Symbol	tzflag		6385496						
ANR	6385633	Symbol	tz -> tz_minuteswest		6385496						
ANR	6385634	Symbol	_daylight		6385496						
ANR	6385635	Symbol	ft		6385496						
ANR	6385636	Symbol	ft . dwHighDateTime		6385496						
ANR	6385637	Symbol	tz -> tz_dsttime		6385496						
ANR	6385638	Symbol	* tz		6385496						
ANR	6385639	Symbol	p		6385496						
ANR	6385640	Symbol	ul		6385496						
ANR	6385641	Symbol	& ft		6385496						
ANR	6385642	Symbol	_timezone		6385496						
ANR	6385643	Function	sdb_hash_len	65:0:1512:1800							
ANR	6385644	FunctionDef	"sdb_hash_len (const char * s , ut32 * len)"		6385643	0					
ANR	6385645	CompoundStatement		65:52:1564:1800	6385643	0					
ANR	6385646	IdentifierDeclStatement	ut32 h = CDB_HASHSTART ;	66:1:1567:1589	6385643	0	True				
ANR	6385647	IdentifierDecl	h = CDB_HASHSTART		6385643	0					
ANR	6385648	IdentifierDeclType	ut32		6385643	0					
ANR	6385649	Identifier	h		6385643	1					
ANR	6385650	AssignmentExpression	h = CDB_HASHSTART		6385643	2		=			
ANR	6385651	Identifier	CDB_HASHSTART		6385643	0					
ANR	6385652	Identifier	CDB_HASHSTART		6385643	1					
ANR	6385653	ExpressionStatement	h = 0	68:1:1612:1617	6385643	1	True				
ANR	6385654	AssignmentExpression	h = 0		6385643	0		=			
ANR	6385655	Identifier	h		6385643	0					
ANR	6385656	PrimaryExpression	0		6385643	1					
ANR	6385657	WhileStatement	while ( * s )		6385643	2					
ANR	6385658	Condition	* s	69:8:1627:1628	6385643	0	True				
ANR	6385659	UnaryOperationExpression	* s		6385643	0					
ANR	6385660	UnaryOperator	*		6385643	0					
ANR	6385661	Identifier	s		6385643	1					
ANR	6385662	CompoundStatement		5:12:66:66	6385643	1					
ANR	6385663	ExpressionStatement	h += * s	70:2:1635:1642	6385643	0	True				
ANR	6385664	AssignmentExpression	h += * s		6385643	0		+=			
ANR	6385665	Identifier	h		6385643	0					
ANR	6385666	UnaryOperationExpression	* s		6385643	1					
ANR	6385667	UnaryOperator	*		6385643	0					
ANR	6385668	Identifier	s		6385643	1					
ANR	6385669	ExpressionStatement	s ++	71:2:1646:1649	6385643	1	True				
ANR	6385670	PostIncDecOperationExpression	s ++		6385643	0					
ANR	6385671	Identifier	s		6385643	0					
ANR	6385672	IncDec	++		6385643	1					
ANR	6385673	ReturnStatement	return h ;	85:1:1790:1798	6385643	3	True				
ANR	6385674	Identifier	h		6385643	0					
ANR	6385675	ReturnType	SDB_API ut32		6385643	1					
ANR	6385676	Identifier	sdb_hash_len		6385643	2					
ANR	6385677	ParameterList	"const char * s , ut32 * len"		6385643	3					
ANR	6385678	Parameter	const char * s	65:26:1538:1550	6385643	0	True				
ANR	6385679	ParameterType	const char *		6385643	0					
ANR	6385680	Identifier	s		6385643	1					
ANR	6385681	Parameter	ut32 * len	65:41:1553:1561	6385643	1	True				
ANR	6385682	ParameterType	ut32 *		6385643	0					
ANR	6385683	Identifier	len		6385643	1					
ANR	6385684	CFGEntryNode	ENTRY		6385643		True				
ANR	6385685	CFGExitNode	EXIT		6385643		True				
ANR	6385686	Symbol	s		6385643						
ANR	6385687	Symbol	len		6385643						
ANR	6385688	Symbol	h		6385643						
ANR	6385689	Symbol	* s		6385643						
ANR	6385690	Symbol	CDB_HASHSTART		6385643						
ANR	6385691	Function	sdb_hash	88:0:1803:1874							
ANR	6385692	FunctionDef	sdb_hash (const char * s)		6385691	0					
ANR	6385693	CompoundStatement		88:37:1840:1874	6385691	0					
ANR	6385694	ReturnStatement	"return sdb_hash_len ( s , NULL ) ;"	89:1:1843:1872	6385691	0	True				
ANR	6385695	CallExpression	"sdb_hash_len ( s , NULL )"		6385691	0					
ANR	6385696	Callee	sdb_hash_len		6385691	0					
ANR	6385697	Identifier	sdb_hash_len		6385691	0					
ANR	6385698	ArgumentList	s		6385691	1					
ANR	6385699	Argument	s		6385691	0					
ANR	6385700	Identifier	s		6385691	0					
ANR	6385701	Argument	NULL		6385691	1					
ANR	6385702	Identifier	NULL		6385691	0					
ANR	6385703	ReturnType	SDB_API ut32		6385691	1					
ANR	6385704	Identifier	sdb_hash		6385691	2					
ANR	6385705	ParameterList	const char * s		6385691	3					
ANR	6385706	Parameter	const char * s	88:22:1825:1837	6385691	0	True				
ANR	6385707	ParameterType	const char *		6385691	0					
ANR	6385708	Identifier	s		6385691	1					
ANR	6385709	CFGEntryNode	ENTRY		6385691		True				
ANR	6385710	CFGExitNode	EXIT		6385691		True				
ANR	6385711	Symbol	s		6385691						
ANR	6385712	Symbol	NULL		6385691						
ANR	6385713	Symbol	sdb_hash_len		6385691						
ANR	6385714	Function	sdb_hash_byte	92:0:1877:2033							
ANR	6385715	FunctionDef	sdb_hash_byte (const char * s)		6385714	0					
ANR	6385716	CompoundStatement		92:41:1918:2033	6385714	0					
ANR	6385717	IdentifierDeclStatement	"const ut32 hash = sdb_hash_len ( s , NULL ) ;"	93:1:1921:1961	6385714	0	True				
ANR	6385718	IdentifierDecl	"hash = sdb_hash_len ( s , NULL )"		6385714	0					
ANR	6385719	IdentifierDeclType	const ut32		6385714	0					
ANR	6385720	Identifier	hash		6385714	1					
ANR	6385721	AssignmentExpression	"hash = sdb_hash_len ( s , NULL )"		6385714	2		=			
ANR	6385722	Identifier	hash		6385714	0					
ANR	6385723	CallExpression	"sdb_hash_len ( s , NULL )"		6385714	1					
ANR	6385724	Callee	sdb_hash_len		6385714	0					
ANR	6385725	Identifier	sdb_hash_len		6385714	0					
ANR	6385726	ArgumentList	s		6385714	1					
ANR	6385727	Argument	s		6385714	0					
ANR	6385728	Identifier	s		6385714	0					
ANR	6385729	Argument	NULL		6385714	1					
ANR	6385730	Identifier	NULL		6385714	0					
ANR	6385731	IdentifierDeclStatement	const ut8 * h = ( const ut8 * ) & hash ;	94:1:1964:1996	6385714	1	True				
ANR	6385732	IdentifierDecl	* h = ( const ut8 * ) & hash		6385714	0					
ANR	6385733	IdentifierDeclType	const ut8 *		6385714	0					
ANR	6385734	Identifier	h		6385714	1					
ANR	6385735	AssignmentExpression	* h = ( const ut8 * ) & hash		6385714	2		=			
ANR	6385736	Identifier	h		6385714	0					
ANR	6385737	CastExpression	( const ut8 * ) & hash		6385714	1					
ANR	6385738	CastTarget	const ut8 *		6385714	0					
ANR	6385739	UnaryOperationExpression	& hash		6385714	1					
ANR	6385740	UnaryOperator	&		6385714	0					
ANR	6385741	Identifier	hash		6385714	1					
ANR	6385742	ReturnStatement	return h [ 0 ] ^ h [ 1 ] ^ h [ 2 ] ^ h [ 3 ] ;	95:1:1999:2031	6385714	2	True				
ANR	6385743	ExclusiveOrExpression	h [ 0 ] ^ h [ 1 ] ^ h [ 2 ] ^ h [ 3 ]		6385714	0		^			
ANR	6385744	ArrayIndexing	h [ 0 ]		6385714	0					
ANR	6385745	Identifier	h		6385714	0					
ANR	6385746	PrimaryExpression	0		6385714	1					
ANR	6385747	ExclusiveOrExpression	h [ 1 ] ^ h [ 2 ] ^ h [ 3 ]		6385714	1		^			
ANR	6385748	ArrayIndexing	h [ 1 ]		6385714	0					
ANR	6385749	Identifier	h		6385714	0					
ANR	6385750	PrimaryExpression	1		6385714	1					
ANR	6385751	ExclusiveOrExpression	h [ 2 ] ^ h [ 3 ]		6385714	1		^			
ANR	6385752	ArrayIndexing	h [ 2 ]		6385714	0					
ANR	6385753	Identifier	h		6385714	0					
ANR	6385754	PrimaryExpression	2		6385714	1					
ANR	6385755	ArrayIndexing	h [ 3 ]		6385714	1					
ANR	6385756	Identifier	h		6385714	0					
ANR	6385757	PrimaryExpression	3		6385714	1					
ANR	6385758	ReturnType	SDB_API ut8		6385714	1					
ANR	6385759	Identifier	sdb_hash_byte		6385714	2					
ANR	6385760	ParameterList	const char * s		6385714	3					
ANR	6385761	Parameter	const char * s	92:26:1903:1915	6385714	0	True				
ANR	6385762	ParameterType	const char *		6385714	0					
ANR	6385763	Identifier	s		6385714	1					
ANR	6385764	CFGEntryNode	ENTRY		6385714		True				
ANR	6385765	CFGExitNode	EXIT		6385714		True				
ANR	6385766	Symbol	* h		6385714						
ANR	6385767	Symbol	s		6385714						
ANR	6385768	Symbol	NULL		6385714						
ANR	6385769	Symbol	& hash		6385714						
ANR	6385770	Symbol	h		6385714						
ANR	6385771	Symbol	sdb_hash_len		6385714						
ANR	6385772	Symbol	hash		6385714						
ANR	6385773	Function	sdb_itoca	98:8:2044:2118							
ANR	6385774	FunctionDef	sdb_itoca (ut64 n)		6385773	0					
ANR	6385775	CompoundStatement		98:38:2074:2118	6385773	0					
ANR	6385776	ReturnStatement	"return sdb_itoa ( n , sdb_fmt ( NULL ) , 16 ) ;"	99:1:2077:2116	6385773	0	True				
ANR	6385777	CallExpression	"sdb_itoa ( n , sdb_fmt ( NULL ) , 16 )"		6385773	0					
ANR	6385778	Callee	sdb_itoa		6385773	0					
ANR	6385779	Identifier	sdb_itoa		6385773	0					
ANR	6385780	ArgumentList	n		6385773	1					
ANR	6385781	Argument	n		6385773	0					
ANR	6385782	Identifier	n		6385773	0					
ANR	6385783	Argument	sdb_fmt ( NULL )		6385773	1					
ANR	6385784	CallExpression	sdb_fmt ( NULL )		6385773	0					
ANR	6385785	Callee	sdb_fmt		6385773	0					
ANR	6385786	Identifier	sdb_fmt		6385773	0					
ANR	6385787	ArgumentList	NULL		6385773	1					
ANR	6385788	Argument	NULL		6385773	0					
ANR	6385789	Identifier	NULL		6385773	0					
ANR	6385790	Argument	16		6385773	2					
ANR	6385791	PrimaryExpression	16		6385773	0					
ANR	6385792	ReturnType	const char *		6385773	1					
ANR	6385793	Identifier	sdb_itoca		6385773	2					
ANR	6385794	ParameterList	ut64 n		6385773	3					
ANR	6385795	Parameter	ut64 n	98:30:2066:2071	6385773	0	True				
ANR	6385796	ParameterType	ut64		6385773	0					
ANR	6385797	Identifier	n		6385773	1					
ANR	6385798	CFGEntryNode	ENTRY		6385773		True				
ANR	6385799	CFGExitNode	EXIT		6385773		True				
ANR	6385800	Symbol	NULL		6385773						
ANR	6385801	Symbol	sdb_itoa		6385773						
ANR	6385802	Symbol	sdb_fmt		6385773						
ANR	6385803	Symbol	n		6385773						
ANR	6385804	Function	sdb_itoa	104:0:2201:3117							
ANR	6385805	FunctionDef	"sdb_itoa (ut64 n , char * s , int base)"		6385804	0					
ANR	6385806	CompoundStatement		104:50:2251:3117	6385804	0					
ANR	6385807	Statement	static	105:1:2254:2259	6385804	0	True				
ANR	6385808	IdentifierDeclStatement	"const char * lookup = ""0123456789abcdef"" ;"	105:8:2261:2300	6385804	1	True				
ANR	6385809	IdentifierDecl	"* lookup = ""0123456789abcdef"""		6385804	0					
ANR	6385810	IdentifierDeclType	const char *		6385804	0					
ANR	6385811	Identifier	lookup		6385804	1					
ANR	6385812	AssignmentExpression	"* lookup = ""0123456789abcdef"""		6385804	2		=			
ANR	6385813	Identifier	lookup		6385804	0					
ANR	6385814	PrimaryExpression	"""0123456789abcdef"""		6385804	1					
ANR	6385815	IdentifierDeclStatement	"char tmpbuf [ 64 ] , * os = NULL ;"	106:1:2303:2330	6385804	2	True				
ANR	6385816	IdentifierDecl	tmpbuf [ 64 ]		6385804	0					
ANR	6385817	IdentifierDeclType	char [ 64 ]		6385804	0					
ANR	6385818	Identifier	tmpbuf		6385804	1					
ANR	6385819	PrimaryExpression	64		6385804	2					
ANR	6385820	IdentifierDecl	* os = NULL		6385804	1					
ANR	6385821	IdentifierDeclType	char *		6385804	0					
ANR	6385822	Identifier	os		6385804	1					
ANR	6385823	AssignmentExpression	* os = NULL		6385804	2		=			
ANR	6385824	Identifier	NULL		6385804	0					
ANR	6385825	Identifier	NULL		6385804	1					
ANR	6385826	IdentifierDeclStatement	const int imax = 62 ;	107:1:2333:2352	6385804	3	True				
ANR	6385827	IdentifierDecl	imax = 62		6385804	0					
ANR	6385828	IdentifierDeclType	const int		6385804	0					
ANR	6385829	Identifier	imax		6385804	1					
ANR	6385830	AssignmentExpression	imax = 62		6385804	2		=			
ANR	6385831	Identifier	imax		6385804	0					
ANR	6385832	PrimaryExpression	62		6385804	1					
ANR	6385833	IdentifierDeclStatement	"int i = imax , copy_string = 1 ;"	108:1:2355:2384	6385804	4	True				
ANR	6385834	IdentifierDecl	i = imax		6385804	0					
ANR	6385835	IdentifierDeclType	int		6385804	0					
ANR	6385836	Identifier	i		6385804	1					
ANR	6385837	AssignmentExpression	i = imax		6385804	2		=			
ANR	6385838	Identifier	imax		6385804	0					
ANR	6385839	Identifier	imax		6385804	1					
ANR	6385840	IdentifierDecl	copy_string = 1		6385804	1					
ANR	6385841	IdentifierDeclType	int		6385804	0					
ANR	6385842	Identifier	copy_string		6385804	1					
ANR	6385843	AssignmentExpression	copy_string = 1		6385804	2		=			
ANR	6385844	Identifier	copy_string		6385804	0					
ANR	6385845	PrimaryExpression	1		6385804	1					
ANR	6385846	IfStatement	if ( s )		6385804	5					
ANR	6385847	Condition	s	109:5:2391:2391	6385804	0	True				
ANR	6385848	Identifier	s		6385804	0					
ANR	6385849	CompoundStatement		6:8:142:142	6385804	1					
ANR	6385850	ExpressionStatement	* s = 0	110:2:2398:2404	6385804	0	True				
ANR	6385851	AssignmentExpression	* s = 0		6385804	0		=			
ANR	6385852	UnaryOperationExpression	* s		6385804	0					
ANR	6385853	UnaryOperator	*		6385804	0					
ANR	6385854	Identifier	s		6385804	1					
ANR	6385855	PrimaryExpression	0		6385804	1					
ANR	6385856	ExpressionStatement	os = NULL	111:2:2408:2417	6385804	1	True				
ANR	6385857	AssignmentExpression	os = NULL		6385804	0		=			
ANR	6385858	Identifier	os		6385804	0					
ANR	6385859	Identifier	NULL		6385804	1					
ANR	6385860	ElseStatement	else		6385804	0					
ANR	6385861	CompoundStatement		9:8:175:175	6385804	0					
ANR	6385862	ExpressionStatement	os = s = tmpbuf	113:2:2431:2446	6385804	0	True				
ANR	6385863	AssignmentExpression	os = s = tmpbuf		6385804	0		=			
ANR	6385864	Identifier	os		6385804	0					
ANR	6385865	AssignmentExpression	s = tmpbuf		6385804	1		=			
ANR	6385866	Identifier	s		6385804	0					
ANR	6385867	Identifier	tmpbuf		6385804	1					
ANR	6385868	IfStatement	if ( base < 0 )		6385804	6					
ANR	6385869	Condition	base < 0	115:5:2456:2463	6385804	0	True				
ANR	6385870	RelationalExpression	base < 0		6385804	0		<			
ANR	6385871	Identifier	base		6385804	0					
ANR	6385872	PrimaryExpression	0		6385804	1					
ANR	6385873	CompoundStatement		12:15:214:214	6385804	1					
ANR	6385874	ExpressionStatement	copy_string = 0	116:2:2470:2485	6385804	0	True				
ANR	6385875	AssignmentExpression	copy_string = 0		6385804	0		=			
ANR	6385876	Identifier	copy_string		6385804	0					
ANR	6385877	PrimaryExpression	0		6385804	1					
ANR	6385878	ExpressionStatement	base = - base	117:2:2489:2501	6385804	1	True				
ANR	6385879	AssignmentExpression	base = - base		6385804	0		=			
ANR	6385880	Identifier	base		6385804	0					
ANR	6385881	UnaryOperationExpression	- base		6385804	1					
ANR	6385882	UnaryOperator	-		6385804	0					
ANR	6385883	Identifier	base		6385804	1					
ANR	6385884	IfStatement	if ( ( base > 16 ) || ( base < 1 ) )		6385804	7					
ANR	6385885	Condition	( base > 16 ) || ( base < 1 )	119:5:2511:2535	6385804	0	True				
ANR	6385886	OrExpression	( base > 16 ) || ( base < 1 )		6385804	0		||			
ANR	6385887	RelationalExpression	base > 16		6385804	0		>			
ANR	6385888	Identifier	base		6385804	0					
ANR	6385889	PrimaryExpression	16		6385804	1					
ANR	6385890	RelationalExpression	base < 1		6385804	1		<			
ANR	6385891	Identifier	base		6385804	0					
ANR	6385892	PrimaryExpression	1		6385804	1					
ANR	6385893	CompoundStatement		16:32:286:286	6385804	1					
ANR	6385894	ReturnStatement	return NULL ;	120:2:2542:2553	6385804	0	True				
ANR	6385895	Identifier	NULL		6385804	0					
ANR	6385896	IfStatement	if ( ! n )		6385804	8					
ANR	6385897	Condition	! n	122:5:2563:2564	6385804	0	True				
ANR	6385898	UnaryOperationExpression	! n		6385804	0					
ANR	6385899	UnaryOperator	!		6385804	0					
ANR	6385900	Identifier	n		6385804	1					
ANR	6385901	CompoundStatement		19:9:315:315	6385804	1					
ANR	6385902	IfStatement	if ( os )		6385804	0					
ANR	6385903	Condition	os	123:6:2575:2576	6385804	0	True				
ANR	6385904	Identifier	os		6385804	0					
ANR	6385905	CompoundStatement		20:10:327:327	6385804	1					
ANR	6385906	ReturnStatement	"return strdup ( ""0"" ) ;"	124:3:2584:2603	6385804	0	True				
ANR	6385907	CallExpression	"strdup ( ""0"" )"		6385804	0					
ANR	6385908	Callee	strdup		6385804	0					
ANR	6385909	Identifier	strdup		6385804	0					
ANR	6385910	ArgumentList	"""0"""		6385804	1					
ANR	6385911	Argument	"""0"""		6385804	0					
ANR	6385912	PrimaryExpression	"""0"""		6385804	0					
ANR	6385913	ExpressionStatement	"strcpy ( s , ""0"" )"	126:2:2611:2626	6385804	1	True				
ANR	6385914	CallExpression	"strcpy ( s , ""0"" )"		6385804	0					
ANR	6385915	Callee	strcpy		6385804	0					
ANR	6385916	Identifier	strcpy		6385804	0					
ANR	6385917	ArgumentList	s		6385804	1					
ANR	6385918	Argument	s		6385804	0					
ANR	6385919	Identifier	s		6385804	0					
ANR	6385920	Argument	"""0"""		6385804	1					
ANR	6385921	PrimaryExpression	"""0"""		6385804	0					
ANR	6385922	ReturnStatement	return s ;	127:2:2630:2638	6385804	2	True				
ANR	6385923	Identifier	s		6385804	0					
ANR	6385924	ExpressionStatement	s [ imax + 1 ] = '\\0'	129:1:2644:2662	6385804	9	True				
ANR	6385925	AssignmentExpression	s [ imax + 1 ] = '\\0'		6385804	0		=			
ANR	6385926	ArrayIndexing	s [ imax + 1 ]		6385804	0					
ANR	6385927	Identifier	s		6385804	0					
ANR	6385928	AdditiveExpression	imax + 1		6385804	1		+			
ANR	6385929	Identifier	imax		6385804	0					
ANR	6385930	PrimaryExpression	1		6385804	1					
ANR	6385931	PrimaryExpression	'\\0'		6385804	1					
ANR	6385932	IfStatement	if ( base <= 10 )		6385804	10					
ANR	6385933	Condition	base <= 10	130:5:2669:2678	6385804	0	True				
ANR	6385934	RelationalExpression	base <= 10		6385804	0		<=			
ANR	6385935	Identifier	base		6385804	0					
ANR	6385936	PrimaryExpression	10		6385804	1					
ANR	6385937	CompoundStatement		27:17:429:429	6385804	1					
ANR	6385938	ForStatement	for ( ; n && i > 0 ; n /= base )		6385804	0					
ANR	6385939	Condition	n && i > 0	131:9:2692:2701	6385804	0	True				
ANR	6385940	AndExpression	n && i > 0		6385804	0		&&			
ANR	6385941	Identifier	n		6385804	0					
ANR	6385942	RelationalExpression	i > 0		6385804	1		>			
ANR	6385943	Identifier	i		6385804	0					
ANR	6385944	PrimaryExpression	0		6385804	1					
ANR	6385945	AssignmentExpression	n /= base	131:21:2704:2712	6385804	1	True	/=			
ANR	6385946	Identifier	n		6385804	0					
ANR	6385947	Identifier	base		6385804	1					
ANR	6385948	CompoundStatement		28:32:463:463	6385804	2					
ANR	6385949	ExpressionStatement	s [ i -- ] = ( n % base ) + '0'	132:3:2720:2745	6385804	0	True				
ANR	6385950	AssignmentExpression	s [ i -- ] = ( n % base ) + '0'		6385804	0		=			
ANR	6385951	ArrayIndexing	s [ i -- ]		6385804	0					
ANR	6385952	Identifier	s		6385804	0					
ANR	6385953	PostIncDecOperationExpression	i --		6385804	1					
ANR	6385954	Identifier	i		6385804	0					
ANR	6385955	IncDec	--		6385804	1					
ANR	6385956	AdditiveExpression	( n % base ) + '0'		6385804	1		+			
ANR	6385957	MultiplicativeExpression	n % base		6385804	0		%			
ANR	6385958	Identifier	n		6385804	0					
ANR	6385959	Identifier	base		6385804	1					
ANR	6385960	PrimaryExpression	'0'		6385804	1					
ANR	6385961	ElseStatement	else		6385804	0					
ANR	6385962	CompoundStatement		31:8:507:507	6385804	0					
ANR	6385963	ForStatement	for ( ; n && i > 0 ; n /= base )		6385804	0					
ANR	6385964	Condition	n && i > 0	135:9:2770:2779	6385804	0	True				
ANR	6385965	AndExpression	n && i > 0		6385804	0		&&			
ANR	6385966	Identifier	n		6385804	0					
ANR	6385967	RelationalExpression	i > 0		6385804	1		>			
ANR	6385968	Identifier	i		6385804	0					
ANR	6385969	PrimaryExpression	0		6385804	1					
ANR	6385970	AssignmentExpression	n /= base	135:21:2782:2790	6385804	1	True	/=			
ANR	6385971	Identifier	n		6385804	0					
ANR	6385972	Identifier	base		6385804	1					
ANR	6385973	CompoundStatement		32:32:541:541	6385804	2					
ANR	6385974	ExpressionStatement	s [ i -- ] = lookup [ ( n % base ) ]	136:3:2798:2825	6385804	0	True				
ANR	6385975	AssignmentExpression	s [ i -- ] = lookup [ ( n % base ) ]		6385804	0		=			
ANR	6385976	ArrayIndexing	s [ i -- ]		6385804	0					
ANR	6385977	Identifier	s		6385804	0					
ANR	6385978	PostIncDecOperationExpression	i --		6385804	1					
ANR	6385979	Identifier	i		6385804	0					
ANR	6385980	IncDec	--		6385804	1					
ANR	6385981	ArrayIndexing	lookup [ ( n % base ) ]		6385804	1					
ANR	6385982	Identifier	lookup		6385804	0					
ANR	6385983	MultiplicativeExpression	n % base		6385804	1		%			
ANR	6385984	Identifier	n		6385804	0					
ANR	6385985	Identifier	base		6385804	1					
ANR	6385986	IfStatement	if ( i != imax )		6385804	1					
ANR	6385987	Condition	i != imax	138:6:2837:2845	6385804	0	True				
ANR	6385988	EqualityExpression	i != imax		6385804	0		!=			
ANR	6385989	Identifier	i		6385804	0					
ANR	6385990	Identifier	imax		6385804	1					
ANR	6385991	CompoundStatement		35:17:596:596	6385804	1					
ANR	6385992	ExpressionStatement	s [ i -- ] = 'x'	139:3:2853:2865	6385804	0	True				
ANR	6385993	AssignmentExpression	s [ i -- ] = 'x'		6385804	0		=			
ANR	6385994	ArrayIndexing	s [ i -- ]		6385804	0					
ANR	6385995	Identifier	s		6385804	0					
ANR	6385996	PostIncDecOperationExpression	i --		6385804	1					
ANR	6385997	Identifier	i		6385804	0					
ANR	6385998	IncDec	--		6385804	1					
ANR	6385999	PrimaryExpression	'x'		6385804	1					
ANR	6386000	ExpressionStatement	s [ i -- ] = '0'	141:2:2873:2885	6385804	2	True				
ANR	6386001	AssignmentExpression	s [ i -- ] = '0'		6385804	0		=			
ANR	6386002	ArrayIndexing	s [ i -- ]		6385804	0					
ANR	6386003	Identifier	s		6385804	0					
ANR	6386004	PostIncDecOperationExpression	i --		6385804	1					
ANR	6386005	Identifier	i		6385804	0					
ANR	6386006	IncDec	--		6385804	1					
ANR	6386007	PrimaryExpression	'0'		6385804	1					
ANR	6386008	IfStatement	if ( os )		6385804	11					
ANR	6386009	Condition	os	143:5:2895:2896	6385804	0	True				
ANR	6386010	Identifier	os		6385804	0					
ANR	6386011	CompoundStatement		40:9:647:647	6385804	1					
ANR	6386012	ReturnStatement	return strdup ( s + i + 1 ) ;	144:2:2903:2928	6385804	0	True				
ANR	6386013	CallExpression	strdup ( s + i + 1 )		6385804	0					
ANR	6386014	Callee	strdup		6385804	0					
ANR	6386015	Identifier	strdup		6385804	0					
ANR	6386016	ArgumentList	s + i + 1		6385804	1					
ANR	6386017	Argument	s + i + 1		6385804	0					
ANR	6386018	AdditiveExpression	s + i + 1		6385804	0		+			
ANR	6386019	Identifier	s		6385804	0					
ANR	6386020	AdditiveExpression	i + 1		6385804	1		+			
ANR	6386021	Identifier	i		6385804	0					
ANR	6386022	PrimaryExpression	1		6385804	1					
ANR	6386023	IfStatement	if ( copy_string )		6385804	12					
ANR	6386024	Condition	copy_string	146:5:2938:2948	6385804	0	True				
ANR	6386025	Identifier	copy_string		6385804	0					
ANR	6386026	CompoundStatement		43:18:699:699	6385804	1					
ANR	6386027	ExpressionStatement	"memmove ( s , s + i + 1 , strlen ( s + i + 1 ) + 1 )"	149:2:3035:3081	6385804	0	True				
ANR	6386028	CallExpression	"memmove ( s , s + i + 1 , strlen ( s + i + 1 ) + 1 )"		6385804	0					
ANR	6386029	Callee	memmove		6385804	0					
ANR	6386030	Identifier	memmove		6385804	0					
ANR	6386031	ArgumentList	s		6385804	1					
ANR	6386032	Argument	s		6385804	0					
ANR	6386033	Identifier	s		6385804	0					
ANR	6386034	Argument	s + i + 1		6385804	1					
ANR	6386035	AdditiveExpression	s + i + 1		6385804	0		+			
ANR	6386036	Identifier	s		6385804	0					
ANR	6386037	AdditiveExpression	i + 1		6385804	1		+			
ANR	6386038	Identifier	i		6385804	0					
ANR	6386039	PrimaryExpression	1		6385804	1					
ANR	6386040	Argument	strlen ( s + i + 1 ) + 1		6385804	2					
ANR	6386041	AdditiveExpression	strlen ( s + i + 1 ) + 1		6385804	0		+			
ANR	6386042	CallExpression	strlen ( s + i + 1 )		6385804	0					
ANR	6386043	Callee	strlen		6385804	0					
ANR	6386044	Identifier	strlen		6385804	0					
ANR	6386045	ArgumentList	s + i + 1		6385804	1					
ANR	6386046	Argument	s + i + 1		6385804	0					
ANR	6386047	AdditiveExpression	s + i + 1		6385804	0		+			
ANR	6386048	Identifier	s		6385804	0					
ANR	6386049	AdditiveExpression	i + 1		6385804	1		+			
ANR	6386050	Identifier	i		6385804	0					
ANR	6386051	PrimaryExpression	1		6385804	1					
ANR	6386052	PrimaryExpression	1		6385804	1					
ANR	6386053	ReturnStatement	return s ;	150:2:3085:3093	6385804	1	True				
ANR	6386054	Identifier	s		6385804	0					
ANR	6386055	ReturnStatement	return s + i + 1 ;	152:1:3099:3115	6385804	13	True				
ANR	6386056	AdditiveExpression	s + i + 1		6385804	0		+			
ANR	6386057	Identifier	s		6385804	0					
ANR	6386058	AdditiveExpression	i + 1		6385804	1		+			
ANR	6386059	Identifier	i		6385804	0					
ANR	6386060	PrimaryExpression	1		6385804	1					
ANR	6386061	ReturnType	SDB_API char *		6385804	1					
ANR	6386062	Identifier	sdb_itoa		6385804	2					
ANR	6386063	ParameterList	"ut64 n , char * s , int base"		6385804	3					
ANR	6386064	Parameter	ut64 n	104:23:2224:2229	6385804	0	True				
ANR	6386065	ParameterType	ut64		6385804	0					
ANR	6386066	Identifier	n		6385804	1					
ANR	6386067	Parameter	char * s	104:31:2232:2238	6385804	1	True				
ANR	6386068	ParameterType	char *		6385804	0					
ANR	6386069	Identifier	s		6385804	1					
ANR	6386070	Parameter	int base	104:40:2241:2248	6385804	2	True				
ANR	6386071	ParameterType	int		6385804	0					
ANR	6386072	Identifier	base		6385804	1					
ANR	6386073	CFGEntryNode	ENTRY		6385804		True				
ANR	6386074	CFGExitNode	EXIT		6385804		True				
ANR	6386075	Symbol	lookup		6385804						
ANR	6386076	Symbol	NULL		6385804						
ANR	6386077	Symbol	os		6385804						
ANR	6386078	Symbol	* lookup		6385804						
ANR	6386079	Symbol	i		6385804						
ANR	6386080	Symbol	imax		6385804						
ANR	6386081	Symbol	n		6385804						
ANR	6386082	Symbol	* imax		6385804						
ANR	6386083	Symbol	strlen		6385804						
ANR	6386084	Symbol	s		6385804						
ANR	6386085	Symbol	copy_string		6385804						
ANR	6386086	Symbol	* n		6385804						
ANR	6386087	Symbol	tmpbuf		6385804						
ANR	6386088	Symbol	strdup		6385804						
ANR	6386089	Symbol	* base		6385804						
ANR	6386090	Symbol	* s		6385804						
ANR	6386091	Symbol	base		6385804						
ANR	6386092	Function	sdb_atoi	155:0:3120:3271							
ANR	6386093	FunctionDef	sdb_atoi (const char * s)		6386092	0					
ANR	6386094	CompoundStatement		155:37:3157:3271	6386092	0					
ANR	6386095	IdentifierDeclStatement	char * p ;	156:1:3160:3167	6386092	0	True				
ANR	6386096	IdentifierDecl	* p		6386092	0					
ANR	6386097	IdentifierDeclType	char *		6386092	0					
ANR	6386098	Identifier	p		6386092	1					
ANR	6386099	IdentifierDeclStatement	ut64 ret ;	157:1:3170:3178	6386092	1	True				
ANR	6386100	IdentifierDecl	ret		6386092	0					
ANR	6386101	IdentifierDeclType	ut64		6386092	0					
ANR	6386102	Identifier	ret		6386092	1					
ANR	6386103	IfStatement	if ( ! s || * s == '-' )		6386092	2					
ANR	6386104	Condition	! s || * s == '-'	158:5:3185:3199	6386092	0	True				
ANR	6386105	OrExpression	! s || * s == '-'		6386092	0		||			
ANR	6386106	UnaryOperationExpression	! s		6386092	0					
ANR	6386107	UnaryOperator	!		6386092	0					
ANR	6386108	Identifier	s		6386092	1					
ANR	6386109	EqualityExpression	* s == '-'		6386092	1		==			
ANR	6386110	UnaryOperationExpression	* s		6386092	0					
ANR	6386111	UnaryOperator	*		6386092	0					
ANR	6386112	Identifier	s		6386092	1					
ANR	6386113	PrimaryExpression	'-'		6386092	1					
ANR	6386114	CompoundStatement		4:22:44:44	6386092	1					
ANR	6386115	Statement	return	159:2:3206:3211	6386092	0	True				
ANR	6386116	Statement	0L	159:9:3213:3214	6386092	1	True				
ANR	6386117	ExpressionStatement	L	159:11:3215:3216	6386092	2	True				
ANR	6386118	Identifier	L		6386092	0					
ANR	6386119	ExpressionStatement	"ret = strtoull ( s , & p , 0 )"	161:1:3222:3247	6386092	3	True				
ANR	6386120	AssignmentExpression	"ret = strtoull ( s , & p , 0 )"		6386092	0		=			
ANR	6386121	Identifier	ret		6386092	0					
ANR	6386122	CallExpression	"strtoull ( s , & p , 0 )"		6386092	1					
ANR	6386123	Callee	strtoull		6386092	0					
ANR	6386124	Identifier	strtoull		6386092	0					
ANR	6386125	ArgumentList	s		6386092	1					
ANR	6386126	Argument	s		6386092	0					
ANR	6386127	Identifier	s		6386092	0					
ANR	6386128	Argument	& p		6386092	1					
ANR	6386129	UnaryOperationExpression	& p		6386092	0					
ANR	6386130	UnaryOperator	&		6386092	0					
ANR	6386131	Identifier	p		6386092	1					
ANR	6386132	Argument	0		6386092	2					
ANR	6386133	PrimaryExpression	0		6386092	0					
ANR	6386134	Statement	return	162:1:3250:3255	6386092	4	True				
ANR	6386135	Statement	p	162:8:3257:3257	6386092	5	True				
ANR	6386136	Statement	?	162:10:3259:3259	6386092	6	True				
ANR	6386137	Label	ret :	162:12:3261:3264	6386092	7	True				
ANR	6386138	Identifier	ret		6386092	0					
ANR	6386139	Statement	0L	162:17:3266:3267	6386092	8	True				
ANR	6386140	ExpressionStatement	L	162:19:3268:3269	6386092	9	True				
ANR	6386141	Identifier	L		6386092	0					
ANR	6386142	ReturnType	SDB_API ut64		6386092	1					
ANR	6386143	Identifier	sdb_atoi		6386092	2					
ANR	6386144	ParameterList	const char * s		6386092	3					
ANR	6386145	Parameter	const char * s	155:22:3142:3154	6386092	0	True				
ANR	6386146	ParameterType	const char *		6386092	0					
ANR	6386147	Identifier	s		6386092	1					
ANR	6386148	CFGEntryNode	ENTRY		6386092		True				
ANR	6386149	CFGExitNode	EXIT		6386092		True				
ANR	6386150	Symbol	p		6386092						
ANR	6386151	Symbol	ret		6386092						
ANR	6386152	Symbol	strtoull		6386092						
ANR	6386153	Symbol	s		6386092						
ANR	6386154	Symbol	& p		6386092						
ANR	6386155	Symbol	* s		6386092						
ANR	6386156	Function	sdb_array_compact	166:0:3331:3574							
ANR	6386157	FunctionDef	sdb_array_compact (char * p)		6386156	0					
ANR	6386158	CompoundStatement		166:41:3372:3574	6386156	0					
ANR	6386159	IdentifierDeclStatement	char * e ;	167:1:3375:3382	6386156	0	True				
ANR	6386160	IdentifierDecl	* e		6386156	0					
ANR	6386161	IdentifierDeclType	char *		6386156	0					
ANR	6386162	Identifier	e		6386156	1					
ANR	6386163	WhileStatement	while ( * p )		6386156	1					
ANR	6386164	Condition	* p	169:8:3418:3419	6386156	0	True				
ANR	6386165	UnaryOperationExpression	* p		6386156	0					
ANR	6386166	UnaryOperator	*		6386156	0					
ANR	6386167	Identifier	p		6386156	1					
ANR	6386168	CompoundStatement		4:12:49:49	6386156	1					
ANR	6386169	IfStatement	"if ( ! strncmp ( p , "",,"" , 2 ) )"		6386156	0					
ANR	6386170	Condition	"! strncmp ( p , "",,"" , 2 )"	170:6:3430:3450	6386156	0	True				
ANR	6386171	UnaryOperationExpression	"! strncmp ( p , "",,"" , 2 )"		6386156	0					
ANR	6386172	UnaryOperator	!		6386156	0					
ANR	6386173	CallExpression	"strncmp ( p , "",,"" , 2 )"		6386156	1					
ANR	6386174	Callee	strncmp		6386156	0					
ANR	6386175	Identifier	strncmp		6386156	0					
ANR	6386176	ArgumentList	p		6386156	1					
ANR	6386177	Argument	p		6386156	0					
ANR	6386178	Identifier	p		6386156	0					
ANR	6386179	Argument	""",,"""		6386156	1					
ANR	6386180	PrimaryExpression	""",,"""		6386156	0					
ANR	6386181	Argument	2		6386156	2					
ANR	6386182	PrimaryExpression	2		6386156	0					
ANR	6386183	CompoundStatement		5:29:80:80	6386156	1					
ANR	6386184	ExpressionStatement	p ++	171:3:3458:3461	6386156	0	True				
ANR	6386185	PostIncDecOperationExpression	p ++		6386156	0					
ANR	6386186	Identifier	p		6386156	0					
ANR	6386187	IncDec	++		6386156	1					
ANR	6386188	ForStatement	"for ( e = p + 1 ; * e == ',' ; e ++ )"		6386156	1					
ANR	6386189	ForInit	e = p + 1 ;	172:8:3471:3480	6386156	0	True				
ANR	6386190	AssignmentExpression	e = p + 1		6386156	0		=			
ANR	6386191	Identifier	e		6386156	0					
ANR	6386192	AdditiveExpression	p + 1		6386156	1		+			
ANR	6386193	Identifier	p		6386156	0					
ANR	6386194	PrimaryExpression	1		6386156	1					
ANR	6386195	Condition	"* e == ','"	172:19:3482:3490	6386156	1	True				
ANR	6386196	EqualityExpression	"* e == ','"		6386156	0		==			
ANR	6386197	UnaryOperationExpression	* e		6386156	0					
ANR	6386198	UnaryOperator	*		6386156	0					
ANR	6386199	Identifier	e		6386156	1					
ANR	6386200	PrimaryExpression	"','"		6386156	1					
ANR	6386201	PostIncDecOperationExpression	e ++	172:30:3493:3495	6386156	2	True				
ANR	6386202	Identifier	e		6386156	0					
ANR	6386203	IncDec	++		6386156	1					
ANR	6386204	CompoundStatement		7:35:125:125	6386156	3					
ANR	6386205	ExpressionStatement		172:37:3500:3500	6386156	2	True				
ANR	6386206	ExpressionStatement	"memmove ( p , e , strlen ( e ) + 1 )"	173:3:3505:3535	6386156	3	True				
ANR	6386207	CallExpression	"memmove ( p , e , strlen ( e ) + 1 )"		6386156	0					
ANR	6386208	Callee	memmove		6386156	0					
ANR	6386209	Identifier	memmove		6386156	0					
ANR	6386210	ArgumentList	p		6386156	1					
ANR	6386211	Argument	p		6386156	0					
ANR	6386212	Identifier	p		6386156	0					
ANR	6386213	Argument	e		6386156	1					
ANR	6386214	Identifier	e		6386156	0					
ANR	6386215	Argument	strlen ( e ) + 1		6386156	2					
ANR	6386216	AdditiveExpression	strlen ( e ) + 1		6386156	0		+			
ANR	6386217	CallExpression	strlen ( e )		6386156	0					
ANR	6386218	Callee	strlen		6386156	0					
ANR	6386219	Identifier	strlen		6386156	0					
ANR	6386220	ArgumentList	e		6386156	1					
ANR	6386221	Argument	e		6386156	0					
ANR	6386222	Identifier	e		6386156	0					
ANR	6386223	PrimaryExpression	1		6386156	1					
ANR	6386224	ElseStatement	else		6386156	0					
ANR	6386225	CompoundStatement		9:9:173:173	6386156	0					
ANR	6386226	ExpressionStatement	p ++	175:3:3551:3554	6386156	0	True				
ANR	6386227	PostIncDecOperationExpression	p ++		6386156	0					
ANR	6386228	Identifier	p		6386156	0					
ANR	6386229	IncDec	++		6386156	1					
ANR	6386230	ReturnStatement	return p ;	178:1:3564:3572	6386156	2	True				
ANR	6386231	Identifier	p		6386156	0					
ANR	6386232	ReturnType	SDB_API char *		6386156	1					
ANR	6386233	Identifier	sdb_array_compact		6386156	2					
ANR	6386234	ParameterList	char * p		6386156	3					
ANR	6386235	Parameter	char * p	166:32:3363:3369	6386156	0	True				
ANR	6386236	ParameterType	char *		6386156	0					
ANR	6386237	Identifier	p		6386156	1					
ANR	6386238	CFGEntryNode	ENTRY		6386156		True				
ANR	6386239	CFGExitNode	EXIT		6386156		True				
ANR	6386240	Symbol	p		6386156						
ANR	6386241	Symbol	strncmp		6386156						
ANR	6386242	Symbol	strlen		6386156						
ANR	6386243	Symbol	e		6386156						
ANR	6386244	Symbol	* p		6386156						
ANR	6386245	Symbol	* e		6386156						
ANR	6386246	Function	sdb_aslice	182:0:3634:4109							
ANR	6386247	FunctionDef	"sdb_aslice (char * out , int from , int to)"		6386246	0					
ANR	6386248	CompoundStatement		182:54:3688:4109	6386246	0					
ANR	6386249	IdentifierDeclStatement	"int len , idx = 0 ;"	183:1:3691:3707	6386246	0	True				
ANR	6386250	IdentifierDecl	len		6386246	0					
ANR	6386251	IdentifierDeclType	int		6386246	0					
ANR	6386252	Identifier	len		6386246	1					
ANR	6386253	IdentifierDecl	idx = 0		6386246	1					
ANR	6386254	IdentifierDeclType	int		6386246	0					
ANR	6386255	Identifier	idx		6386246	1					
ANR	6386256	AssignmentExpression	idx = 0		6386246	2		=			
ANR	6386257	Identifier	idx		6386246	0					
ANR	6386258	PrimaryExpression	0		6386246	1					
ANR	6386259	IdentifierDeclStatement	char * str = NULL ;	184:1:3710:3726	6386246	1	True				
ANR	6386260	IdentifierDecl	* str = NULL		6386246	0					
ANR	6386261	IdentifierDeclType	char *		6386246	0					
ANR	6386262	Identifier	str		6386246	1					
ANR	6386263	AssignmentExpression	* str = NULL		6386246	2		=			
ANR	6386264	Identifier	NULL		6386246	0					
ANR	6386265	Identifier	NULL		6386246	1					
ANR	6386266	IdentifierDeclStatement	char * end = NULL ;	185:1:3729:3745	6386246	2	True				
ANR	6386267	IdentifierDecl	* end = NULL		6386246	0					
ANR	6386268	IdentifierDeclType	char *		6386246	0					
ANR	6386269	Identifier	end		6386246	1					
ANR	6386270	AssignmentExpression	* end = NULL		6386246	2		=			
ANR	6386271	Identifier	NULL		6386246	0					
ANR	6386272	Identifier	NULL		6386246	1					
ANR	6386273	IdentifierDeclStatement	char * p = out ;	186:1:3748:3761	6386246	3	True				
ANR	6386274	IdentifierDecl	* p = out		6386246	0					
ANR	6386275	IdentifierDeclType	char *		6386246	0					
ANR	6386276	Identifier	p		6386246	1					
ANR	6386277	AssignmentExpression	* p = out		6386246	2		=			
ANR	6386278	Identifier	out		6386246	0					
ANR	6386279	Identifier	out		6386246	1					
ANR	6386280	IfStatement	if ( from >= to )		6386246	4					
ANR	6386281	Condition	from >= to	187:5:3768:3777	6386246	0	True				
ANR	6386282	RelationalExpression	from >= to		6386246	0		>=			
ANR	6386283	Identifier	from		6386246	0					
ANR	6386284	Identifier	to		6386246	1					
ANR	6386285	CompoundStatement		6:17:91:91	6386246	1					
ANR	6386286	ReturnStatement	return NULL ;	188:2:3784:3795	6386246	0	True				
ANR	6386287	Identifier	NULL		6386246	0					
ANR	6386288	WhileStatement	while ( * p )		6386246	5					
ANR	6386289	Condition	* p	190:8:3808:3809	6386246	0	True				
ANR	6386290	UnaryOperationExpression	* p		6386246	0					
ANR	6386291	UnaryOperator	*		6386246	0					
ANR	6386292	Identifier	p		6386246	1					
ANR	6386293	CompoundStatement		9:12:123:123	6386246	1					
ANR	6386294	IfStatement	if ( ! str && idx == from )		6386246	0					
ANR	6386295	Condition	! str && idx == from	191:6:3820:3838	6386246	0	True				
ANR	6386296	AndExpression	! str && idx == from		6386246	0		&&			
ANR	6386297	UnaryOperationExpression	! str		6386246	0					
ANR	6386298	UnaryOperator	!		6386246	0					
ANR	6386299	Identifier	str		6386246	1					
ANR	6386300	EqualityExpression	idx == from		6386246	1		==			
ANR	6386301	Identifier	idx		6386246	0					
ANR	6386302	Identifier	from		6386246	1					
ANR	6386303	CompoundStatement		10:27:152:152	6386246	1					
ANR	6386304	ExpressionStatement	str = p	192:3:3846:3853	6386246	0	True				
ANR	6386305	AssignmentExpression	str = p		6386246	0		=			
ANR	6386306	Identifier	str		6386246	0					
ANR	6386307	Identifier	p		6386246	1					
ANR	6386308	IfStatement	if ( idx == to )		6386246	1					
ANR	6386309	Condition	idx == to	194:6:3865:3873	6386246	0	True				
ANR	6386310	EqualityExpression	idx == to		6386246	0		==			
ANR	6386311	Identifier	idx		6386246	0					
ANR	6386312	Identifier	to		6386246	1					
ANR	6386313	CompoundStatement		13:17:187:187	6386246	1					
ANR	6386314	ExpressionStatement	end = p	195:3:3881:3888	6386246	0	True				
ANR	6386315	AssignmentExpression	end = p		6386246	0		=			
ANR	6386316	Identifier	end		6386246	0					
ANR	6386317	Identifier	p		6386246	1					
ANR	6386318	BreakStatement	break ;	196:3:3893:3898	6386246	1	True				
ANR	6386319	IfStatement	"if ( * p == ',' )"		6386246	2					
ANR	6386320	Condition	"* p == ','"	198:6:3910:3918	6386246	0	True				
ANR	6386321	EqualityExpression	"* p == ','"		6386246	0		==			
ANR	6386322	UnaryOperationExpression	* p		6386246	0					
ANR	6386323	UnaryOperator	*		6386246	0					
ANR	6386324	Identifier	p		6386246	1					
ANR	6386325	PrimaryExpression	"','"		6386246	1					
ANR	6386326	CompoundStatement		17:17:232:232	6386246	1					
ANR	6386327	ExpressionStatement	idx ++	199:3:3926:3931	6386246	0	True				
ANR	6386328	PostIncDecOperationExpression	idx ++		6386246	0					
ANR	6386329	Identifier	idx		6386246	0					
ANR	6386330	IncDec	++		6386246	1					
ANR	6386331	ExpressionStatement	p ++	201:2:3939:3942	6386246	3	True				
ANR	6386332	PostIncDecOperationExpression	p ++		6386246	0					
ANR	6386333	Identifier	p		6386246	0					
ANR	6386334	IncDec	++		6386246	1					
ANR	6386335	IfStatement	if ( str )		6386246	6					
ANR	6386336	Condition	str	203:5:3952:3954	6386246	0	True				
ANR	6386337	Identifier	str		6386246	0					
ANR	6386338	CompoundStatement		22:10:268:268	6386246	1					
ANR	6386339	IfStatement	if ( ! end )		6386246	0					
ANR	6386340	Condition	! end	204:6:3965:3968	6386246	0	True				
ANR	6386341	UnaryOperationExpression	! end		6386246	0					
ANR	6386342	UnaryOperator	!		6386246	0					
ANR	6386343	Identifier	end		6386246	1					
ANR	6386344	CompoundStatement		23:12:282:282	6386246	1					
ANR	6386345	ExpressionStatement	end = str + strlen ( str )	205:3:3976:4000	6386246	0	True				
ANR	6386346	AssignmentExpression	end = str + strlen ( str )		6386246	0		=			
ANR	6386347	Identifier	end		6386246	0					
ANR	6386348	AdditiveExpression	str + strlen ( str )		6386246	1		+			
ANR	6386349	Identifier	str		6386246	0					
ANR	6386350	CallExpression	strlen ( str )		6386246	1					
ANR	6386351	Callee	strlen		6386246	0					
ANR	6386352	Identifier	strlen		6386246	0					
ANR	6386353	ArgumentList	str		6386246	1					
ANR	6386354	Argument	str		6386246	0					
ANR	6386355	Identifier	str		6386246	0					
ANR	6386356	ExpressionStatement	len = ( size_t ) ( end - str )	207:2:4008:4033	6386246	1	True				
ANR	6386357	AssignmentExpression	len = ( size_t ) ( end - str )		6386246	0		=			
ANR	6386358	Identifier	len		6386246	0					
ANR	6386359	CastExpression	( size_t ) ( end - str )		6386246	1					
ANR	6386360	CastTarget	size_t		6386246	0					
ANR	6386361	AdditiveExpression	end - str		6386246	1		-			
ANR	6386362	Identifier	end		6386246	0					
ANR	6386363	Identifier	str		6386246	1					
ANR	6386364	ExpressionStatement	"memmove ( out , str , len )"	208:2:4037:4060	6386246	2	True				
ANR	6386365	CallExpression	"memmove ( out , str , len )"		6386246	0					
ANR	6386366	Callee	memmove		6386246	0					
ANR	6386367	Identifier	memmove		6386246	0					
ANR	6386368	ArgumentList	out		6386246	1					
ANR	6386369	Argument	out		6386246	0					
ANR	6386370	Identifier	out		6386246	0					
ANR	6386371	Argument	str		6386246	1					
ANR	6386372	Identifier	str		6386246	0					
ANR	6386373	Argument	len		6386246	2					
ANR	6386374	Identifier	len		6386246	0					
ANR	6386375	ExpressionStatement	out [ len ] = 0	209:2:4064:4076	6386246	3	True				
ANR	6386376	AssignmentExpression	out [ len ] = 0		6386246	0		=			
ANR	6386377	ArrayIndexing	out [ len ]		6386246	0					
ANR	6386378	Identifier	out		6386246	0					
ANR	6386379	Identifier	len		6386246	1					
ANR	6386380	PrimaryExpression	0		6386246	1					
ANR	6386381	ReturnStatement	return out ;	210:2:4080:4090	6386246	4	True				
ANR	6386382	Identifier	out		6386246	0					
ANR	6386383	ReturnStatement	return NULL ;	212:1:4096:4107	6386246	7	True				
ANR	6386384	Identifier	NULL		6386246	0					
ANR	6386385	ReturnType	SDB_API char *		6386246	1					
ANR	6386386	Identifier	sdb_aslice		6386246	2					
ANR	6386387	ParameterList	"char * out , int from , int to"		6386246	3					
ANR	6386388	Parameter	char * out	182:25:3659:3667	6386246	0	True				
ANR	6386389	ParameterType	char *		6386246	0					
ANR	6386390	Identifier	out		6386246	1					
ANR	6386391	Parameter	int from	182:36:3670:3677	6386246	1	True				
ANR	6386392	ParameterType	int		6386246	0					
ANR	6386393	Identifier	from		6386246	1					
ANR	6386394	Parameter	int to	182:46:3680:3685	6386246	2	True				
ANR	6386395	ParameterType	int		6386246	0					
ANR	6386396	Identifier	to		6386246	1					
ANR	6386397	CFGEntryNode	ENTRY		6386246		True				
ANR	6386398	CFGExitNode	EXIT		6386246		True				
ANR	6386399	Symbol	NULL		6386246						
ANR	6386400	Symbol	out		6386246						
ANR	6386401	Symbol	str		6386246						
ANR	6386402	Symbol	p		6386246						
ANR	6386403	Symbol	strlen		6386246						
ANR	6386404	Symbol	len		6386246						
ANR	6386405	Symbol	* out		6386246						
ANR	6386406	Symbol	from		6386246						
ANR	6386407	Symbol	end		6386246						
ANR	6386408	Symbol	* p		6386246						
ANR	6386409	Symbol	to		6386246						
ANR	6386410	Symbol	idx		6386246						
ANR	6386411	Symbol	* len		6386246						
ANR	6386412	Function	sdb_alen	217:0:4220:4441							
ANR	6386413	FunctionDef	sdb_alen (const char * str)		6386412	0					
ANR	6386414	CompoundStatement		217:38:4258:4441	6386412	0					
ANR	6386415	IdentifierDeclStatement	int len = 1 ;	218:1:4261:4272	6386412	0	True				
ANR	6386416	IdentifierDecl	len = 1		6386412	0					
ANR	6386417	IdentifierDeclType	int		6386412	0					
ANR	6386418	Identifier	len		6386412	1					
ANR	6386419	AssignmentExpression	len = 1		6386412	2		=			
ANR	6386420	Identifier	len		6386412	0					
ANR	6386421	PrimaryExpression	1		6386412	1					
ANR	6386422	IdentifierDeclStatement	"const char * n , * p = str ;"	219:1:4275:4298	6386412	1	True				
ANR	6386423	IdentifierDecl	* n		6386412	0					
ANR	6386424	IdentifierDeclType	const char *		6386412	0					
ANR	6386425	Identifier	n		6386412	1					
ANR	6386426	IdentifierDecl	* p = str		6386412	1					
ANR	6386427	IdentifierDeclType	const char *		6386412	0					
ANR	6386428	Identifier	p		6386412	1					
ANR	6386429	AssignmentExpression	* p = str		6386412	2		=			
ANR	6386430	Identifier	str		6386412	0					
ANR	6386431	Identifier	str		6386412	1					
ANR	6386432	IfStatement	if ( ! p || ! * p )		6386412	2					
ANR	6386433	Condition	! p || ! * p	220:5:4305:4312	6386412	0	True				
ANR	6386434	OrExpression	! p || ! * p		6386412	0		||			
ANR	6386435	UnaryOperationExpression	! p		6386412	0					
ANR	6386436	UnaryOperator	!		6386412	0					
ANR	6386437	Identifier	p		6386412	1					
ANR	6386438	UnaryOperationExpression	! * p		6386412	1					
ANR	6386439	UnaryOperator	!		6386412	0					
ANR	6386440	UnaryOperationExpression	* p		6386412	1					
ANR	6386441	UnaryOperator	*		6386412	0					
ANR	6386442	Identifier	p		6386412	1					
ANR	6386443	CompoundStatement		4:15:56:56	6386412	1					
ANR	6386444	ReturnStatement	return 0 ;	221:2:4319:4327	6386412	0	True				
ANR	6386445	PrimaryExpression	0		6386412	0					
ANR	6386446	ForStatement	for ( len = 0 ; ; len ++ )		6386412	3					
ANR	6386447	ForInit	len = 0 ;	223:6:4338:4345	6386412	0	True				
ANR	6386448	AssignmentExpression	len = 0		6386412	0		=			
ANR	6386449	Identifier	len		6386412	0					
ANR	6386450	PrimaryExpression	0		6386412	1					
ANR	6386451	PostIncDecOperationExpression	len ++	223:17:4349:4353	6386412	1	True				
ANR	6386452	Identifier	len		6386412	0					
ANR	6386453	IncDec	++		6386412	1					
ANR	6386454	CompoundStatement		7:24:97:97	6386412	2					
ANR	6386455	ExpressionStatement	"n = strchr ( p , SDB_RS )"	224:2:4360:4382	6386412	0	True				
ANR	6386456	AssignmentExpression	"n = strchr ( p , SDB_RS )"		6386412	0		=			
ANR	6386457	Identifier	n		6386412	0					
ANR	6386458	CallExpression	"strchr ( p , SDB_RS )"		6386412	1					
ANR	6386459	Callee	strchr		6386412	0					
ANR	6386460	Identifier	strchr		6386412	0					
ANR	6386461	ArgumentList	p		6386412	1					
ANR	6386462	Argument	p		6386412	0					
ANR	6386463	Identifier	p		6386412	0					
ANR	6386464	Argument	SDB_RS		6386412	1					
ANR	6386465	Identifier	SDB_RS		6386412	0					
ANR	6386466	IfStatement	if ( ! n )		6386412	1					
ANR	6386467	Condition	! n	225:6:4390:4391	6386412	0	True				
ANR	6386468	UnaryOperationExpression	! n		6386412	0					
ANR	6386469	UnaryOperator	!		6386412	0					
ANR	6386470	Identifier	n		6386412	1					
ANR	6386471	CompoundStatement		9:10:135:135	6386412	1					
ANR	6386472	BreakStatement	break ;	226:3:4399:4404	6386412	0	True				
ANR	6386473	ExpressionStatement	p = n + 1	228:2:4412:4421	6386412	2	True				
ANR	6386474	AssignmentExpression	p = n + 1		6386412	0		=			
ANR	6386475	Identifier	p		6386412	0					
ANR	6386476	AdditiveExpression	n + 1		6386412	1		+			
ANR	6386477	Identifier	n		6386412	0					
ANR	6386478	PrimaryExpression	1		6386412	1					
ANR	6386479	ReturnStatement	return ++ len ;	230:1:4427:4439	6386412	4	True				
ANR	6386480	UnaryExpression	++ len		6386412	0					
ANR	6386481	IncDec	++		6386412	0					
ANR	6386482	Identifier	len		6386412	1					
ANR	6386483	ReturnType	SDB_API int		6386412	1					
ANR	6386484	Identifier	sdb_alen		6386412	2					
ANR	6386485	ParameterList	const char * str		6386412	3					
ANR	6386486	Parameter	const char * str	217:21:4241:4255	6386412	0	True				
ANR	6386487	ParameterType	const char *		6386412	0					
ANR	6386488	Identifier	str		6386412	1					
ANR	6386489	CFGEntryNode	ENTRY		6386412		True				
ANR	6386490	CFGExitNode	EXIT		6386412		True				
ANR	6386491	InfiniteForNode	true		6386412		True				
ANR	6386492	Symbol	str		6386412						
ANR	6386493	Symbol	p		6386412						
ANR	6386494	Symbol	SDB_RS		6386412						
ANR	6386495	Symbol	len		6386412						
ANR	6386496	Symbol	strchr		6386412						
ANR	6386497	Symbol	* p		6386412						
ANR	6386498	Symbol	n		6386412						
ANR	6386499	Function	sdb_alen_ignore_empty	233:0:4444:4772							
ANR	6386500	FunctionDef	sdb_alen_ignore_empty (const char * str)		6386499	0					
ANR	6386501	CompoundStatement		233:51:4495:4772	6386499	0					
ANR	6386502	IdentifierDeclStatement	int len = 1 ;	234:1:4498:4509	6386499	0	True				
ANR	6386503	IdentifierDecl	len = 1		6386499	0					
ANR	6386504	IdentifierDeclType	int		6386499	0					
ANR	6386505	Identifier	len		6386499	1					
ANR	6386506	AssignmentExpression	len = 1		6386499	2		=			
ANR	6386507	Identifier	len		6386499	0					
ANR	6386508	PrimaryExpression	1		6386499	1					
ANR	6386509	IdentifierDeclStatement	"const char * n , * p = str ;"	235:1:4512:4535	6386499	1	True				
ANR	6386510	IdentifierDecl	* n		6386499	0					
ANR	6386511	IdentifierDeclType	const char *		6386499	0					
ANR	6386512	Identifier	n		6386499	1					
ANR	6386513	IdentifierDecl	* p = str		6386499	1					
ANR	6386514	IdentifierDeclType	const char *		6386499	0					
ANR	6386515	Identifier	p		6386499	1					
ANR	6386516	AssignmentExpression	* p = str		6386499	2		=			
ANR	6386517	Identifier	str		6386499	0					
ANR	6386518	Identifier	str		6386499	1					
ANR	6386519	IfStatement	if ( ! p || ! * p )		6386499	2					
ANR	6386520	Condition	! p || ! * p	236:5:4542:4550	6386499	0	True				
ANR	6386521	OrExpression	! p || ! * p		6386499	0		||			
ANR	6386522	UnaryOperationExpression	! p		6386499	0					
ANR	6386523	UnaryOperator	!		6386499	0					
ANR	6386524	Identifier	p		6386499	1					
ANR	6386525	UnaryOperationExpression	! * p		6386499	1					
ANR	6386526	UnaryOperator	!		6386499	0					
ANR	6386527	UnaryOperationExpression	* p		6386499	1					
ANR	6386528	UnaryOperator	*		6386499	0					
ANR	6386529	Identifier	p		6386499	1					
ANR	6386530	CompoundStatement		4:16:57:57	6386499	1					
ANR	6386531	ReturnStatement	return 0 ;	237:2:4557:4565	6386499	0	True				
ANR	6386532	PrimaryExpression	0		6386499	0					
ANR	6386533	WhileStatement	while ( * p == SDB_RS )		6386499	3					
ANR	6386534	Condition	* p == SDB_RS	239:8:4578:4589	6386499	0	True				
ANR	6386535	EqualityExpression	* p == SDB_RS		6386499	0		==			
ANR	6386536	UnaryOperationExpression	* p		6386499	0					
ANR	6386537	UnaryOperator	*		6386499	0					
ANR	6386538	Identifier	p		6386499	1					
ANR	6386539	Identifier	SDB_RS		6386499	1					
ANR	6386540	CompoundStatement		7:22:96:96	6386499	1					
ANR	6386541	ExpressionStatement	p ++	240:2:4596:4599	6386499	0	True				
ANR	6386542	PostIncDecOperationExpression	p ++		6386499	0					
ANR	6386543	Identifier	p		6386499	0					
ANR	6386544	IncDec	++		6386499	1					
ANR	6386545	ForStatement	for ( len = 0 ; ; )		6386499	4					
ANR	6386546	ForInit	len = 0 ;	242:6:4610:4617	6386499	0	True				
ANR	6386547	AssignmentExpression	len = 0		6386499	0		=			
ANR	6386548	Identifier	len		6386499	0					
ANR	6386549	PrimaryExpression	0		6386499	1					
ANR	6386550	CompoundStatement		10:19:127:127	6386499	1					
ANR	6386551	ExpressionStatement	"n = strchr ( p , SDB_RS )"	243:2:4627:4649	6386499	0	True				
ANR	6386552	AssignmentExpression	"n = strchr ( p , SDB_RS )"		6386499	0		=			
ANR	6386553	Identifier	n		6386499	0					
ANR	6386554	CallExpression	"strchr ( p , SDB_RS )"		6386499	1					
ANR	6386555	Callee	strchr		6386499	0					
ANR	6386556	Identifier	strchr		6386499	0					
ANR	6386557	ArgumentList	p		6386499	1					
ANR	6386558	Argument	p		6386499	0					
ANR	6386559	Identifier	p		6386499	0					
ANR	6386560	Argument	SDB_RS		6386499	1					
ANR	6386561	Identifier	SDB_RS		6386499	0					
ANR	6386562	IfStatement	if ( ! n )		6386499	1					
ANR	6386563	Condition	! n	244:6:4657:4658	6386499	0	True				
ANR	6386564	UnaryOperationExpression	! n		6386499	0					
ANR	6386565	UnaryOperator	!		6386499	0					
ANR	6386566	Identifier	n		6386499	1					
ANR	6386567	CompoundStatement		12:10:165:165	6386499	1					
ANR	6386568	BreakStatement	break ;	245:3:4666:4671	6386499	0	True				
ANR	6386569	ExpressionStatement	p = n + 1	247:2:4679:4688	6386499	2	True				
ANR	6386570	AssignmentExpression	p = n + 1		6386499	0		=			
ANR	6386571	Identifier	p		6386499	0					
ANR	6386572	AdditiveExpression	n + 1		6386499	1		+			
ANR	6386573	Identifier	n		6386499	0					
ANR	6386574	PrimaryExpression	1		6386499	1					
ANR	6386575	IfStatement	if ( * ( p ) == SDB_RS )		6386499	3					
ANR	6386576	Condition	* ( p ) == SDB_RS	248:6:4696:4709	6386499	0	True				
ANR	6386577	EqualityExpression	* ( p ) == SDB_RS		6386499	0		==			
ANR	6386578	UnaryOperationExpression	* ( p )		6386499	0					
ANR	6386579	UnaryOperator	*		6386499	0					
ANR	6386580	Identifier	p		6386499	1					
ANR	6386581	Identifier	SDB_RS		6386499	1					
ANR	6386582	CompoundStatement		16:22:216:216	6386499	1					
ANR	6386583	ContinueStatement	continue ;	249:3:4717:4725	6386499	0	True				
ANR	6386584	ExpressionStatement	len ++	251:2:4733:4738	6386499	4	True				
ANR	6386585	PostIncDecOperationExpression	len ++		6386499	0					
ANR	6386586	Identifier	len		6386499	0					
ANR	6386587	IncDec	++		6386499	1					
ANR	6386588	IfStatement	if ( * p )		6386499	5					
ANR	6386589	Condition	* p	253:5:4748:4749	6386499	0	True				
ANR	6386590	UnaryOperationExpression	* p		6386499	0					
ANR	6386591	UnaryOperator	*		6386499	0					
ANR	6386592	Identifier	p		6386499	1					
ANR	6386593	ExpressionStatement	len ++	253:9:4752:4757	6386499	1	True				
ANR	6386594	PostIncDecOperationExpression	len ++		6386499	0					
ANR	6386595	Identifier	len		6386499	0					
ANR	6386596	IncDec	++		6386499	1					
ANR	6386597	ReturnStatement	return len ;	254:1:4760:4770	6386499	6	True				
ANR	6386598	Identifier	len		6386499	0					
ANR	6386599	ReturnType	SDB_API int		6386499	1					
ANR	6386600	Identifier	sdb_alen_ignore_empty		6386499	2					
ANR	6386601	ParameterList	const char * str		6386499	3					
ANR	6386602	Parameter	const char * str	233:34:4478:4492	6386499	0	True				
ANR	6386603	ParameterType	const char *		6386499	0					
ANR	6386604	Identifier	str		6386499	1					
ANR	6386605	CFGEntryNode	ENTRY		6386499		True				
ANR	6386606	CFGExitNode	EXIT		6386499		True				
ANR	6386607	InfiniteForNode	true		6386499		True				
ANR	6386608	Symbol	str		6386499						
ANR	6386609	Symbol	p		6386499						
ANR	6386610	Symbol	SDB_RS		6386499						
ANR	6386611	Symbol	len		6386499						
ANR	6386612	Symbol	strchr		6386499						
ANR	6386613	Symbol	* p		6386499						
ANR	6386614	Symbol	n		6386499						
ANR	6386615	Symbol	* ( p )		6386499						
ANR	6386616	Function	sdb_anext	257:0:4775:4970							
ANR	6386617	FunctionDef	"sdb_anext (char * str , char * * next)"		6386616	0					
ANR	6386618	CompoundStatement		257:48:4823:4970	6386616	0					
ANR	6386619	IdentifierDeclStatement	"char * nxt , * p = strchr ( str , SDB_RS ) ;"	258:1:4826:4862	6386616	0	True				
ANR	6386620	IdentifierDecl	* nxt		6386616	0					
ANR	6386621	IdentifierDeclType	char *		6386616	0					
ANR	6386622	Identifier	nxt		6386616	1					
ANR	6386623	IdentifierDecl	"* p = strchr ( str , SDB_RS )"		6386616	1					
ANR	6386624	IdentifierDeclType	char *		6386616	0					
ANR	6386625	Identifier	p		6386616	1					
ANR	6386626	AssignmentExpression	"* p = strchr ( str , SDB_RS )"		6386616	2		=			
ANR	6386627	Identifier	p		6386616	0					
ANR	6386628	CallExpression	"strchr ( str , SDB_RS )"		6386616	1					
ANR	6386629	Callee	strchr		6386616	0					
ANR	6386630	Identifier	strchr		6386616	0					
ANR	6386631	ArgumentList	str		6386616	1					
ANR	6386632	Argument	str		6386616	0					
ANR	6386633	Identifier	str		6386616	0					
ANR	6386634	Argument	SDB_RS		6386616	1					
ANR	6386635	Identifier	SDB_RS		6386616	0					
ANR	6386636	IfStatement	if ( p )		6386616	1					
ANR	6386637	Condition	p	259:5:4869:4869	6386616	0	True				
ANR	6386638	Identifier	p		6386616	0					
ANR	6386639	CompoundStatement		3:8:48:48	6386616	1					
ANR	6386640	ExpressionStatement	* p = 0	260:2:4876:4882	6386616	0	True				
ANR	6386641	AssignmentExpression	* p = 0		6386616	0		=			
ANR	6386642	UnaryOperationExpression	* p		6386616	0					
ANR	6386643	UnaryOperator	*		6386616	0					
ANR	6386644	Identifier	p		6386616	1					
ANR	6386645	PrimaryExpression	0		6386616	1					
ANR	6386646	ExpressionStatement	nxt = p + 1	261:2:4886:4897	6386616	1	True				
ANR	6386647	AssignmentExpression	nxt = p + 1		6386616	0		=			
ANR	6386648	Identifier	nxt		6386616	0					
ANR	6386649	AdditiveExpression	p + 1		6386616	1		+			
ANR	6386650	Identifier	p		6386616	0					
ANR	6386651	PrimaryExpression	1		6386616	1					
ANR	6386652	ElseStatement	else		6386616	0					
ANR	6386653	CompoundStatement		6:8:83:83	6386616	0					
ANR	6386654	ExpressionStatement	nxt = NULL	263:2:4911:4921	6386616	0	True				
ANR	6386655	AssignmentExpression	nxt = NULL		6386616	0		=			
ANR	6386656	Identifier	nxt		6386616	0					
ANR	6386657	Identifier	NULL		6386616	1					
ANR	6386658	IfStatement	if ( next )		6386616	2					
ANR	6386659	Condition	next	265:5:4931:4934	6386616	0	True				
ANR	6386660	Identifier	next		6386616	0					
ANR	6386661	CompoundStatement		9:11:113:113	6386616	1					
ANR	6386662	ExpressionStatement	* next = nxt	266:2:4941:4952	6386616	0	True				
ANR	6386663	AssignmentExpression	* next = nxt		6386616	0		=			
ANR	6386664	UnaryOperationExpression	* next		6386616	0					
ANR	6386665	UnaryOperator	*		6386616	0					
ANR	6386666	Identifier	next		6386616	1					
ANR	6386667	Identifier	nxt		6386616	1					
ANR	6386668	ReturnStatement	return str ;	268:1:4958:4968	6386616	3	True				
ANR	6386669	Identifier	str		6386616	0					
ANR	6386670	ReturnType	SDB_API char *		6386616	1					
ANR	6386671	Identifier	sdb_anext		6386616	2					
ANR	6386672	ParameterList	"char * str , char * * next"		6386616	3					
ANR	6386673	Parameter	char * str	257:24:4799:4807	6386616	0	True				
ANR	6386674	ParameterType	char *		6386616	0					
ANR	6386675	Identifier	str		6386616	1					
ANR	6386676	Parameter	char * * next	257:35:4810:4820	6386616	1	True				
ANR	6386677	ParameterType	char * *		6386616	0					
ANR	6386678	Identifier	next		6386616	1					
ANR	6386679	CFGEntryNode	ENTRY		6386616		True				
ANR	6386680	CFGExitNode	EXIT		6386616		True				
ANR	6386681	Symbol	str		6386616						
ANR	6386682	Symbol	next		6386616						
ANR	6386683	Symbol	p		6386616						
ANR	6386684	Symbol	SDB_RS		6386616						
ANR	6386685	Symbol	NULL		6386616						
ANR	6386686	Symbol	strchr		6386616						
ANR	6386687	Symbol	* p		6386616						
ANR	6386688	Symbol	nxt		6386616						
ANR	6386689	Symbol	* next		6386616						
ANR	6386690	Function	sdb_const_anext	271:8:4981:5093							
ANR	6386691	FunctionDef	sdb_const_anext (const char * str)		6386690	0					
ANR	6386692	CompoundStatement		271:53:5026:5093	6386690	0					
ANR	6386693	IdentifierDeclStatement	"const char * p = strchr ( str , SDB_RS ) ;"	272:1:5029:5065	6386690	0	True				
ANR	6386694	IdentifierDecl	"* p = strchr ( str , SDB_RS )"		6386690	0					
ANR	6386695	IdentifierDeclType	const char *		6386690	0					
ANR	6386696	Identifier	p		6386690	1					
ANR	6386697	AssignmentExpression	"* p = strchr ( str , SDB_RS )"		6386690	2		=			
ANR	6386698	Identifier	p		6386690	0					
ANR	6386699	CallExpression	"strchr ( str , SDB_RS )"		6386690	1					
ANR	6386700	Callee	strchr		6386690	0					
ANR	6386701	Identifier	strchr		6386690	0					
ANR	6386702	ArgumentList	str		6386690	1					
ANR	6386703	Argument	str		6386690	0					
ANR	6386704	Identifier	str		6386690	0					
ANR	6386705	Argument	SDB_RS		6386690	1					
ANR	6386706	Identifier	SDB_RS		6386690	0					
ANR	6386707	ReturnStatement	return p ? p + 1 : NULL ;	273:1:5068:5091	6386690	1	True				
ANR	6386708	ConditionalExpression	p ? p + 1 : NULL		6386690	0					
ANR	6386709	Condition	p		6386690	0					
ANR	6386710	Identifier	p		6386690	0					
ANR	6386711	AdditiveExpression	p + 1		6386690	1		+			
ANR	6386712	Identifier	p		6386690	0					
ANR	6386713	PrimaryExpression	1		6386690	1					
ANR	6386714	Identifier	NULL		6386690	2					
ANR	6386715	ReturnType	const char *		6386690	1					
ANR	6386716	Identifier	sdb_const_anext		6386690	2					
ANR	6386717	ParameterList	const char * str		6386690	3					
ANR	6386718	Parameter	const char * str	271:36:5009:5023	6386690	0	True				
ANR	6386719	ParameterType	const char *		6386690	0					
ANR	6386720	Identifier	str		6386690	1					
ANR	6386721	CFGEntryNode	ENTRY		6386690		True				
ANR	6386722	CFGExitNode	EXIT		6386690		True				
ANR	6386723	Symbol	str		6386690						
ANR	6386724	Symbol	p		6386690						
ANR	6386725	Symbol	SDB_RS		6386690						
ANR	6386726	Symbol	NULL		6386690						
ANR	6386727	Symbol	strchr		6386690						
ANR	6386728	Function	sdb_now	276:0:5096:5342							
ANR	6386729	FunctionDef	sdb_now ()		6386728	0					
ANR	6386730	CompoundStatement		276:24:5120:5342	6386728	0					
ANR	6386731	IdentifierDeclStatement	struct timespec ts ;	278:1:5147:5165	6386728	0	True				
ANR	6386732	IdentifierDecl	ts		6386728	0					
ANR	6386733	IdentifierDeclType	struct timespec		6386728	0					
ANR	6386734	Identifier	ts		6386728	1					
ANR	6386735	IfStatement	"if ( ! clock_gettime ( CLOCK_MONOTONIC , & ts ) )"		6386728	1					
ANR	6386736	Condition	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"	279:5:5172:5208	6386728	0	True				
ANR	6386737	UnaryOperationExpression	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"		6386728	0					
ANR	6386738	UnaryOperator	!		6386728	0					
ANR	6386739	CallExpression	"clock_gettime ( CLOCK_MONOTONIC , & ts )"		6386728	1					
ANR	6386740	Callee	clock_gettime		6386728	0					
ANR	6386741	Identifier	clock_gettime		6386728	0					
ANR	6386742	ArgumentList	CLOCK_MONOTONIC		6386728	1					
ANR	6386743	Argument	CLOCK_MONOTONIC		6386728	0					
ANR	6386744	Identifier	CLOCK_MONOTONIC		6386728	0					
ANR	6386745	Argument	& ts		6386728	1					
ANR	6386746	UnaryOperationExpression	& ts		6386728	0					
ANR	6386747	UnaryOperator	&		6386728	0					
ANR	6386748	Identifier	ts		6386728	1					
ANR	6386749	CompoundStatement		4:44:90:90	6386728	1					
ANR	6386750	ReturnStatement	return ts . tv_sec ;	280:2:5215:5231	6386728	0	True				
ANR	6386751	MemberAccess	ts . tv_sec		6386728	0					
ANR	6386752	Identifier	ts		6386728	0					
ANR	6386753	Identifier	tv_sec		6386728	1					
ANR	6386754	Statement	return	288:1:5330:5335	6386728	2	True				
ANR	6386755	Statement	0L	288:8:5337:5338	6386728	3	True				
ANR	6386756	ExpressionStatement	L	288:10:5339:5340	6386728	4	True				
ANR	6386757	Identifier	L		6386728	0					
ANR	6386758	ReturnType	SDB_API ut64		6386728	1					
ANR	6386759	Identifier	sdb_now		6386728	2					
ANR	6386760	ParameterList			6386728	3					
ANR	6386761	CFGEntryNode	ENTRY		6386728		True				
ANR	6386762	CFGExitNode	EXIT		6386728		True				
ANR	6386763	Symbol	CLOCK_MONOTONIC		6386728						
ANR	6386764	Symbol	& ts		6386728						
ANR	6386765	Symbol	clock_gettime		6386728						
ANR	6386766	Symbol	ts		6386728						
ANR	6386767	Symbol	ts . tv_sec		6386728						
ANR	6386768	Function	sdb_unow	291:0:5345:5683							
ANR	6386769	FunctionDef	sdb_unow ()		6386768	0					
ANR	6386770	CompoundStatement		291:25:5370:5683	6386768	0					
ANR	6386771	Statement	ut64	292:1:5373:5376	6386768	0	True				
ANR	6386772	Statement	x	292:6:5378:5378	6386768	1	True				
ANR	6386773	Statement	=	292:8:5380:5380	6386768	2	True				
ANR	6386774	Statement	0L	292:10:5382:5383	6386768	3	True				
ANR	6386775	ExpressionStatement	L	292:12:5384:5385	6386768	4	True				
ANR	6386776	Identifier	L		6386768	0					
ANR	6386777	IdentifierDeclStatement	struct timespec ts ;	294:1:5412:5430	6386768	5	True				
ANR	6386778	IdentifierDecl	ts		6386768	0					
ANR	6386779	IdentifierDeclType	struct timespec		6386768	0					
ANR	6386780	Identifier	ts		6386768	1					
ANR	6386781	IfStatement	"if ( ! clock_gettime ( CLOCK_MONOTONIC , & ts ) )"		6386768	6					
ANR	6386782	Condition	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"	295:5:5437:5473	6386768	0	True				
ANR	6386783	UnaryOperationExpression	"! clock_gettime ( CLOCK_MONOTONIC , & ts )"		6386768	0					
ANR	6386784	UnaryOperator	!		6386768	0					
ANR	6386785	CallExpression	"clock_gettime ( CLOCK_MONOTONIC , & ts )"		6386768	1					
ANR	6386786	Callee	clock_gettime		6386768	0					
ANR	6386787	Identifier	clock_gettime		6386768	0					
ANR	6386788	ArgumentList	CLOCK_MONOTONIC		6386768	1					
ANR	6386789	Argument	CLOCK_MONOTONIC		6386768	0					
ANR	6386790	Identifier	CLOCK_MONOTONIC		6386768	0					
ANR	6386791	Argument	& ts		6386768	1					
ANR	6386792	UnaryOperationExpression	& ts		6386768	0					
ANR	6386793	UnaryOperator	&		6386768	0					
ANR	6386794	Identifier	ts		6386768	1					
ANR	6386795	CompoundStatement		5:44:105:105	6386768	1					
ANR	6386796	ExpressionStatement	x = ts . tv_sec	296:2:5480:5493	6386768	0	True				
ANR	6386797	AssignmentExpression	x = ts . tv_sec		6386768	0		=			
ANR	6386798	Identifier	x		6386768	0					
ANR	6386799	MemberAccess	ts . tv_sec		6386768	1					
ANR	6386800	Identifier	ts		6386768	0					
ANR	6386801	Identifier	tv_sec		6386768	1					
ANR	6386802	ExpressionStatement	x <<= 32	297:2:5497:5505	6386768	1	True				
ANR	6386803	AssignmentExpression	x <<= 32		6386768	0		<<=			
ANR	6386804	Identifier	x		6386768	0					
ANR	6386805	PrimaryExpression	32		6386768	1					
ANR	6386806	ExpressionStatement	x += ts . tv_nsec / 1000	298:2:5509:5531	6386768	2	True				
ANR	6386807	AssignmentExpression	x += ts . tv_nsec / 1000		6386768	0		+=			
ANR	6386808	Identifier	x		6386768	0					
ANR	6386809	MultiplicativeExpression	ts . tv_nsec / 1000		6386768	1		/			
ANR	6386810	MemberAccess	ts . tv_nsec		6386768	0					
ANR	6386811	Identifier	ts		6386768	0					
ANR	6386812	Identifier	tv_nsec		6386768	1					
ANR	6386813	PrimaryExpression	1000		6386768	1					
ANR	6386814	ReturnStatement	return x ;	308:1:5673:5681	6386768	7	True				
ANR	6386815	Identifier	x		6386768	0					
ANR	6386816	ReturnType	SDB_API ut64		6386768	1					
ANR	6386817	Identifier	sdb_unow		6386768	2					
ANR	6386818	ParameterList			6386768	3					
ANR	6386819	CFGEntryNode	ENTRY		6386768		True				
ANR	6386820	CFGExitNode	EXIT		6386768		True				
ANR	6386821	Symbol	ts . tv_nsec		6386768						
ANR	6386822	Symbol	CLOCK_MONOTONIC		6386768						
ANR	6386823	Symbol	& ts		6386768						
ANR	6386824	Symbol	x		6386768						
ANR	6386825	Symbol	clock_gettime		6386768						
ANR	6386826	Symbol	ts		6386768						
ANR	6386827	Symbol	ts . tv_sec		6386768						
ANR	6386828	Function	sdb_isnum	311:0:5686:5810							
ANR	6386829	FunctionDef	sdb_isnum (const char * s)		6386828	0					
ANR	6386830	CompoundStatement		311:37:5723:5810	6386828	0					
ANR	6386831	IdentifierDeclStatement	const char vs = * s ;	312:1:5726:5744	6386828	0	True				
ANR	6386832	IdentifierDecl	vs = * s		6386828	0					
ANR	6386833	IdentifierDeclType	const char		6386828	0					
ANR	6386834	Identifier	vs		6386828	1					
ANR	6386835	AssignmentExpression	vs = * s		6386828	2		=			
ANR	6386836	Identifier	vs		6386828	0					
ANR	6386837	UnaryOperationExpression	* s		6386828	1					
ANR	6386838	UnaryOperator	*		6386828	0					
ANR	6386839	Identifier	s		6386828	1					
ANR	6386840	ReturnStatement	return ( ( vs == '-' || vs == '+' ) || ( vs >= '0' && vs <= '9' ) ) ;	313:1:5747:5808	6386828	1	True				
ANR	6386841	OrExpression	( vs == '-' || vs == '+' ) || ( vs >= '0' && vs <= '9' )		6386828	0		||			
ANR	6386842	OrExpression	vs == '-' || vs == '+'		6386828	0		||			
ANR	6386843	EqualityExpression	vs == '-'		6386828	0		==			
ANR	6386844	Identifier	vs		6386828	0					
ANR	6386845	PrimaryExpression	'-'		6386828	1					
ANR	6386846	EqualityExpression	vs == '+'		6386828	1		==			
ANR	6386847	Identifier	vs		6386828	0					
ANR	6386848	PrimaryExpression	'+'		6386828	1					
ANR	6386849	AndExpression	vs >= '0' && vs <= '9'		6386828	1		&&			
ANR	6386850	RelationalExpression	vs >= '0'		6386828	0		>=			
ANR	6386851	Identifier	vs		6386828	0					
ANR	6386852	PrimaryExpression	'0'		6386828	1					
ANR	6386853	RelationalExpression	vs <= '9'		6386828	1		<=			
ANR	6386854	Identifier	vs		6386828	0					
ANR	6386855	PrimaryExpression	'9'		6386828	1					
ANR	6386856	ReturnType	SDB_API int		6386828	1					
ANR	6386857	Identifier	sdb_isnum		6386828	2					
ANR	6386858	ParameterList	const char * s		6386828	3					
ANR	6386859	Parameter	const char * s	311:22:5708:5720	6386828	0	True				
ANR	6386860	ParameterType	const char *		6386828	0					
ANR	6386861	Identifier	s		6386828	1					
ANR	6386862	CFGEntryNode	ENTRY		6386828		True				
ANR	6386863	CFGExitNode	EXIT		6386828		True				
ANR	6386864	Symbol	s		6386828						
ANR	6386865	Symbol	* s		6386828						
ANR	6386866	Symbol	vs		6386828						
ANR	6386867	Function	sdb_num_base	316:0:5813:5973							
ANR	6386868	FunctionDef	sdb_num_base (const char * s)		6386867	0					
ANR	6386869	CompoundStatement		316:40:5853:5973	6386867	0					
ANR	6386870	IfStatement	if ( ! s )		6386867	0					
ANR	6386871	Condition	! s	317:5:5860:5861	6386867	0	True				
ANR	6386872	UnaryOperationExpression	! s		6386867	0					
ANR	6386873	UnaryOperator	!		6386867	0					
ANR	6386874	Identifier	s		6386867	1					
ANR	6386875	CompoundStatement		2:9:10:10	6386867	1					
ANR	6386876	ReturnStatement	return SDB_NUM_BASE ;	318:2:5868:5887	6386867	0	True				
ANR	6386877	Identifier	SDB_NUM_BASE		6386867	0					
ANR	6386878	IfStatement	"if ( ! strncmp ( s , ""0x"" , 2 ) )"		6386867	1					
ANR	6386879	Condition	"! strncmp ( s , ""0x"" , 2 )"	320:5:5897:5917	6386867	0	True				
ANR	6386880	UnaryOperationExpression	"! strncmp ( s , ""0x"" , 2 )"		6386867	0					
ANR	6386881	UnaryOperator	!		6386867	0					
ANR	6386882	CallExpression	"strncmp ( s , ""0x"" , 2 )"		6386867	1					
ANR	6386883	Callee	strncmp		6386867	0					
ANR	6386884	Identifier	strncmp		6386867	0					
ANR	6386885	ArgumentList	s		6386867	1					
ANR	6386886	Argument	s		6386867	0					
ANR	6386887	Identifier	s		6386867	0					
ANR	6386888	Argument	"""0x"""		6386867	1					
ANR	6386889	PrimaryExpression	"""0x"""		6386867	0					
ANR	6386890	Argument	2		6386867	2					
ANR	6386891	PrimaryExpression	2		6386867	0					
ANR	6386892	CompoundStatement		5:28:66:66	6386867	1					
ANR	6386893	ReturnStatement	return 16 ;	321:2:5924:5933	6386867	0	True				
ANR	6386894	PrimaryExpression	16		6386867	0					
ANR	6386895	ReturnStatement	return ( * s == '0' && s [ 1 ] ) ? 8 : 10 ;	323:1:5939:5971	6386867	2	True				
ANR	6386896	ConditionalExpression	( * s == '0' && s [ 1 ] ) ? 8 : 10		6386867	0					
ANR	6386897	Condition	* s == '0' && s [ 1 ]		6386867	0					
ANR	6386898	AndExpression	* s == '0' && s [ 1 ]		6386867	0		&&			
ANR	6386899	EqualityExpression	* s == '0'		6386867	0		==			
ANR	6386900	UnaryOperationExpression	* s		6386867	0					
ANR	6386901	UnaryOperator	*		6386867	0					
ANR	6386902	Identifier	s		6386867	1					
ANR	6386903	PrimaryExpression	'0'		6386867	1					
ANR	6386904	ArrayIndexing	s [ 1 ]		6386867	1					
ANR	6386905	Identifier	s		6386867	0					
ANR	6386906	PrimaryExpression	1		6386867	1					
ANR	6386907	PrimaryExpression	8		6386867	1					
ANR	6386908	PrimaryExpression	10		6386867	2					
ANR	6386909	ReturnType	SDB_API int		6386867	1					
ANR	6386910	Identifier	sdb_num_base		6386867	2					
ANR	6386911	ParameterList	const char * s		6386867	3					
ANR	6386912	Parameter	const char * s	316:25:5838:5850	6386867	0	True				
ANR	6386913	ParameterType	const char *		6386867	0					
ANR	6386914	Identifier	s		6386867	1					
ANR	6386915	CFGEntryNode	ENTRY		6386867		True				
ANR	6386916	CFGExitNode	EXIT		6386867		True				
ANR	6386917	Symbol	SDB_NUM_BASE		6386867						
ANR	6386918	Symbol	strncmp		6386867						
ANR	6386919	Symbol	s		6386867						
ANR	6386920	Symbol	* s		6386867						
ANR	6386921	Function	sdb_type	326:8:5984:6290							
ANR	6386922	FunctionDef	sdb_type (const char * k)		6386921	0					
ANR	6386923	CompoundStatement		326:44:6020:6290	6386921	0					
ANR	6386924	IfStatement	if ( ! k || ! * k )		6386921	0					
ANR	6386925	Condition	! k || ! * k	327:5:6027:6035	6386921	0	True				
ANR	6386926	OrExpression	! k || ! * k		6386921	0		||			
ANR	6386927	UnaryOperationExpression	! k		6386921	0					
ANR	6386928	UnaryOperator	!		6386921	0					
ANR	6386929	Identifier	k		6386921	1					
ANR	6386930	UnaryOperationExpression	! * k		6386921	1					
ANR	6386931	UnaryOperator	!		6386921	0					
ANR	6386932	UnaryOperationExpression	* k		6386921	1					
ANR	6386933	UnaryOperator	*		6386921	0					
ANR	6386934	Identifier	k		6386921	1					
ANR	6386935	CompoundStatement		2:16:17:17	6386921	1					
ANR	6386936	ReturnStatement	"return ""undefined"" ;"	328:2:6042:6060	6386921	0	True				
ANR	6386937	PrimaryExpression	"""undefined"""		6386921	0					
ANR	6386938	IfStatement	if ( sdb_isnum ( k ) )		6386921	1					
ANR	6386939	Condition	sdb_isnum ( k )	330:5:6070:6082	6386921	0	True				
ANR	6386940	CallExpression	sdb_isnum ( k )		6386921	0					
ANR	6386941	Callee	sdb_isnum		6386921	0					
ANR	6386942	Identifier	sdb_isnum		6386921	0					
ANR	6386943	ArgumentList	k		6386921	1					
ANR	6386944	Argument	k		6386921	0					
ANR	6386945	Identifier	k		6386921	0					
ANR	6386946	CompoundStatement		5:20:64:64	6386921	1					
ANR	6386947	ReturnStatement	"return ""number"" ;"	331:2:6089:6104	6386921	0	True				
ANR	6386948	PrimaryExpression	"""number"""		6386921	0					
ANR	6386949	IfStatement	if ( sdb_isjson ( k ) )		6386921	2					
ANR	6386950	Condition	sdb_isjson ( k )	333:5:6114:6127	6386921	0	True				
ANR	6386951	CallExpression	sdb_isjson ( k )		6386921	0					
ANR	6386952	Callee	sdb_isjson		6386921	0					
ANR	6386953	Identifier	sdb_isjson		6386921	0					
ANR	6386954	ArgumentList	k		6386921	1					
ANR	6386955	Argument	k		6386921	0					
ANR	6386956	Identifier	k		6386921	0					
ANR	6386957	CompoundStatement		8:21:109:109	6386921	1					
ANR	6386958	ReturnStatement	"return ""json"" ;"	334:2:6134:6147	6386921	0	True				
ANR	6386959	PrimaryExpression	"""json"""		6386921	0					
ANR	6386960	IfStatement	"if ( strchr ( k , ',' ) )"		6386921	3					
ANR	6386961	Condition	"strchr ( k , ',' )"	336:5:6157:6171	6386921	0	True				
ANR	6386962	CallExpression	"strchr ( k , ',' )"		6386921	0					
ANR	6386963	Callee	strchr		6386921	0					
ANR	6386964	Identifier	strchr		6386921	0					
ANR	6386965	ArgumentList	k		6386921	1					
ANR	6386966	Argument	k		6386921	0					
ANR	6386967	Identifier	k		6386921	0					
ANR	6386968	Argument	"','"		6386921	1					
ANR	6386969	PrimaryExpression	"','"		6386921	0					
ANR	6386970	CompoundStatement		11:22:153:153	6386921	1					
ANR	6386971	ReturnStatement	"return ""array"" ;"	337:2:6178:6192	6386921	0	True				
ANR	6386972	PrimaryExpression	"""array"""		6386921	0					
ANR	6386973	IfStatement	"if ( ! strcmp ( k , ""true"" ) || ! strcmp ( k , ""false"" ) )"		6386921	4					
ANR	6386974	Condition	"! strcmp ( k , ""true"" ) || ! strcmp ( k , ""false"" )"	339:5:6202:6244	6386921	0	True				
ANR	6386975	OrExpression	"! strcmp ( k , ""true"" ) || ! strcmp ( k , ""false"" )"		6386921	0		||			
ANR	6386976	UnaryOperationExpression	"! strcmp ( k , ""true"" )"		6386921	0					
ANR	6386977	UnaryOperator	!		6386921	0					
ANR	6386978	CallExpression	"strcmp ( k , ""true"" )"		6386921	1					
ANR	6386979	Callee	strcmp		6386921	0					
ANR	6386980	Identifier	strcmp		6386921	0					
ANR	6386981	ArgumentList	k		6386921	1					
ANR	6386982	Argument	k		6386921	0					
ANR	6386983	Identifier	k		6386921	0					
ANR	6386984	Argument	"""true"""		6386921	1					
ANR	6386985	PrimaryExpression	"""true"""		6386921	0					
ANR	6386986	UnaryOperationExpression	"! strcmp ( k , ""false"" )"		6386921	1					
ANR	6386987	UnaryOperator	!		6386921	0					
ANR	6386988	CallExpression	"strcmp ( k , ""false"" )"		6386921	1					
ANR	6386989	Callee	strcmp		6386921	0					
ANR	6386990	Identifier	strcmp		6386921	0					
ANR	6386991	ArgumentList	k		6386921	1					
ANR	6386992	Argument	k		6386921	0					
ANR	6386993	Identifier	k		6386921	0					
ANR	6386994	Argument	"""false"""		6386921	1					
ANR	6386995	PrimaryExpression	"""false"""		6386921	0					
ANR	6386996	CompoundStatement		14:50:226:226	6386921	1					
ANR	6386997	ReturnStatement	"return ""boolean"" ;"	340:2:6251:6267	6386921	0	True				
ANR	6386998	PrimaryExpression	"""boolean"""		6386921	0					
ANR	6386999	ReturnStatement	"return ""string"" ;"	342:1:6273:6288	6386921	5	True				
ANR	6387000	PrimaryExpression	"""string"""		6386921	0					
ANR	6387001	ReturnType	const char *		6386921	1					
ANR	6387002	Identifier	sdb_type		6386921	2					
ANR	6387003	ParameterList	const char * k		6386921	3					
ANR	6387004	Parameter	const char * k	326:29:6005:6017	6386921	0	True				
ANR	6387005	ParameterType	const char *		6386921	0					
ANR	6387006	Identifier	k		6386921	1					
ANR	6387007	CFGEntryNode	ENTRY		6386921		True				
ANR	6387008	CFGExitNode	EXIT		6386921		True				
ANR	6387009	Symbol	strcmp		6386921						
ANR	6387010	Symbol	* k		6386921						
ANR	6387011	Symbol	strchr		6386921						
ANR	6387012	Symbol	k		6386921						
ANR	6387013	Symbol	sdb_isnum		6386921						
ANR	6387014	Symbol	sdb_isjson		6386921						
ANR	6387015	Function	sdb_isjson	346:0:6323:6808							
ANR	6387016	FunctionDef	sdb_isjson (const char * k)		6387015	0					
ANR	6387017	CompoundStatement		346:40:6363:6808	6387015	0					
ANR	6387018	IdentifierDeclStatement	int level = 0 ;	347:1:6366:6379	6387015	0	True				
ANR	6387019	IdentifierDecl	level = 0		6387015	0					
ANR	6387020	IdentifierDeclType	int		6387015	0					
ANR	6387021	Identifier	level		6387015	1					
ANR	6387022	AssignmentExpression	level = 0		6387015	2		=			
ANR	6387023	Identifier	level		6387015	0					
ANR	6387024	PrimaryExpression	0		6387015	1					
ANR	6387025	IdentifierDeclStatement	bool quotes = false ;	348:1:6382:6401	6387015	1	True				
ANR	6387026	IdentifierDecl	quotes = false		6387015	0					
ANR	6387027	IdentifierDeclType	bool		6387015	0					
ANR	6387028	Identifier	quotes		6387015	1					
ANR	6387029	AssignmentExpression	quotes = false		6387015	2		=			
ANR	6387030	Identifier	false		6387015	0					
ANR	6387031	Identifier	false		6387015	1					
ANR	6387032	IfStatement	if ( ! k || ( * k != '{' && * k != '[' ) )		6387015	2					
ANR	6387033	Condition	! k || ( * k != '{' && * k != '[' )	349:5:6408:6437	6387015	0	True				
ANR	6387034	OrExpression	! k || ( * k != '{' && * k != '[' )		6387015	0		||			
ANR	6387035	UnaryOperationExpression	! k		6387015	0					
ANR	6387036	UnaryOperator	!		6387015	0					
ANR	6387037	Identifier	k		6387015	1					
ANR	6387038	AndExpression	* k != '{' && * k != '['		6387015	1		&&			
ANR	6387039	EqualityExpression	* k != '{'		6387015	0		!=			
ANR	6387040	UnaryOperationExpression	* k		6387015	0					
ANR	6387041	UnaryOperator	*		6387015	0					
ANR	6387042	Identifier	k		6387015	1					
ANR	6387043	PrimaryExpression	'{'		6387015	1					
ANR	6387044	EqualityExpression	* k != '['		6387015	1		!=			
ANR	6387045	UnaryOperationExpression	* k		6387015	0					
ANR	6387046	UnaryOperator	*		6387015	0					
ANR	6387047	Identifier	k		6387015	1					
ANR	6387048	PrimaryExpression	'['		6387015	1					
ANR	6387049	CompoundStatement		4:37:76:76	6387015	1					
ANR	6387050	ReturnStatement	return false ;	350:2:6444:6456	6387015	0	True				
ANR	6387051	Identifier	false		6387015	0					
ANR	6387052	ForStatement	for ( ; * k ; k ++ )		6387015	3					
ANR	6387053	Condition	* k	352:8:6469:6470	6387015	0	True				
ANR	6387054	UnaryOperationExpression	* k		6387015	0					
ANR	6387055	UnaryOperator	*		6387015	0					
ANR	6387056	Identifier	k		6387015	1					
ANR	6387057	PostIncDecOperationExpression	k ++	352:12:6473:6475	6387015	1	True				
ANR	6387058	Identifier	k		6387015	0					
ANR	6387059	IncDec	++		6387015	1					
ANR	6387060	CompoundStatement		7:17:114:114	6387015	2					
ANR	6387061	IfStatement	if ( quotes )		6387015	0					
ANR	6387062	Condition	quotes	353:6:6486:6491	6387015	0	True				
ANR	6387063	Identifier	quotes		6387015	0					
ANR	6387064	CompoundStatement		8:14:130:130	6387015	1					
ANR	6387065	IfStatement	"if ( * k == '""' )"		6387015	0					
ANR	6387066	Condition	"* k == '""'"	354:7:6503:6511	6387015	0	True				
ANR	6387067	EqualityExpression	"* k == '""'"		6387015	0		==			
ANR	6387068	UnaryOperationExpression	* k		6387015	0					
ANR	6387069	UnaryOperator	*		6387015	0					
ANR	6387070	Identifier	k		6387015	1					
ANR	6387071	PrimaryExpression	"'""'"		6387015	1					
ANR	6387072	CompoundStatement		9:18:150:150	6387015	1					
ANR	6387073	ExpressionStatement	quotes = false	355:4:6520:6534	6387015	0	True				
ANR	6387074	AssignmentExpression	quotes = false		6387015	0		=			
ANR	6387075	Identifier	quotes		6387015	0					
ANR	6387076	Identifier	false		6387015	1					
ANR	6387077	ContinueStatement	continue ;	357:3:6544:6552	6387015	1	True				
ANR	6387078	SwitchStatement	switch ( * k )		6387015	1					
ANR	6387079	Condition	* k	359:10:6568:6569	6387015	0	True				
ANR	6387080	UnaryOperationExpression	* k		6387015	0					
ANR	6387081	UnaryOperator	*		6387015	0					
ANR	6387082	Identifier	k		6387015	1					
ANR	6387083	CompoundStatement		14:14:208:208	6387015	1					
ANR	6387084	Label	"case '""' :"	360:2:6576:6584	6387015	0	True				
ANR	6387085	ExpressionStatement	quotes = true	361:3:6589:6602	6387015	1	True				
ANR	6387086	AssignmentExpression	quotes = true		6387015	0		=			
ANR	6387087	Identifier	quotes		6387015	0					
ANR	6387088	Identifier	true		6387015	1					
ANR	6387089	BreakStatement	break ;	362:3:6607:6612	6387015	2	True				
ANR	6387090	Label	case '[' :	363:2:6616:6624	6387015	3	True				
ANR	6387091	Label	case '{' :	364:2:6628:6636	6387015	4	True				
ANR	6387092	ExpressionStatement	level ++	365:3:6641:6648	6387015	5	True				
ANR	6387093	PostIncDecOperationExpression	level ++		6387015	0					
ANR	6387094	Identifier	level		6387015	0					
ANR	6387095	IncDec	++		6387015	1					
ANR	6387096	BreakStatement	break ;	366:3:6653:6658	6387015	6	True				
ANR	6387097	Label	case ']' :	367:2:6662:6670	6387015	7	True				
ANR	6387098	Label	case '}' :	368:2:6674:6682	6387015	8	True				
ANR	6387099	ExpressionStatement	level --	369:3:6687:6694	6387015	9	True				
ANR	6387100	PostIncDecOperationExpression	level --		6387015	0					
ANR	6387101	Identifier	level		6387015	0					
ANR	6387102	IncDec	--		6387015	1					
ANR	6387103	IfStatement	if ( level < 0 )		6387015	10					
ANR	6387104	Condition	level < 0	370:7:6703:6711	6387015	0	True				
ANR	6387105	RelationalExpression	level < 0		6387015	0		<			
ANR	6387106	Identifier	level		6387015	0					
ANR	6387107	PrimaryExpression	0		6387015	1					
ANR	6387108	CompoundStatement		25:18:350:350	6387015	1					
ANR	6387109	ReturnStatement	return false ;	372:4:6743:6755	6387015	0	True				
ANR	6387110	Identifier	false		6387015	0					
ANR	6387111	BreakStatement	break ;	374:3:6765:6770	6387015	11	True				
ANR	6387112	ReturnStatement	return ( ! quotes && ! level ) ;	377:1:6780:6806	6387015	4	True				
ANR	6387113	AndExpression	! quotes && ! level		6387015	0		&&			
ANR	6387114	UnaryOperationExpression	! quotes		6387015	0					
ANR	6387115	UnaryOperator	!		6387015	0					
ANR	6387116	Identifier	quotes		6387015	1					
ANR	6387117	UnaryOperationExpression	! level		6387015	1					
ANR	6387118	UnaryOperator	!		6387015	0					
ANR	6387119	Identifier	level		6387015	1					
ANR	6387120	ReturnType	SDB_API bool		6387015	1					
ANR	6387121	Identifier	sdb_isjson		6387015	2					
ANR	6387122	ParameterList	const char * k		6387015	3					
ANR	6387123	Parameter	const char * k	346:25:6348:6360	6387015	0	True				
ANR	6387124	ParameterType	const char *		6387015	0					
ANR	6387125	Identifier	k		6387015	1					
ANR	6387126	CFGEntryNode	ENTRY		6387015		True				
ANR	6387127	CFGExitNode	EXIT		6387015		True				
ANR	6387128	Symbol	level		6387015						
ANR	6387129	Symbol	* k		6387015						
ANR	6387130	Symbol	false		6387015						
ANR	6387131	Symbol	true		6387015						
ANR	6387132	Symbol	k		6387015						
ANR	6387133	Symbol	quotes		6387015						
