command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5459197	File	data/converged/CVE-2019-16718~_radare2/old_xrefs.c								
ANR	5459198	DeclStmt									
ANR	5459199	Decl							ut32	ut32	base
ANR	5459200	DeclStmt									
ANR	5459201	Decl							ut32	ut32	delta
ANR	5459202	DeclStmt									
ANR	5459203	Decl							ut32	ut32	range
ANR	5459204	DeclStmt									
ANR	5459205	Decl							ut32	ut32	xylum
ANR	5459206	DeclStmt									
ANR	5459207	Decl							ut32	ut32	gamme
ANR	5459208	DeclStmt									
ANR	5459209	Decl							ut32	ut32	size
ANR	5459210	DeclStmt									
ANR	5459211	Decl							int	int	sysendian
ANR	5459212	DeclStmt									
ANR	5459213	Decl							int	int	endian
ANR	5459214	DeclStmt									
ANR	5459215	Decl							int	int	verbose
ANR	5459216	DeclStmt									
ANR	5459217	Decl							int	int	found
ANR	5459218	DeclStmt									
ANR	5459219	Decl							int	int	quite
ANR	5459220	DeclStmt									
ANR	5459221	Decl							int	int	arch
ANR	5459222	DeclStmt									
ANR	5459223	Decl							unsigned char	unsigned char *	ma
ANR	5459224	Function	show_usage	115:0:2750:3586							
ANR	5459225	FunctionDef	show_usage ()		5459224	0					
ANR	5459226	CompoundStatement		116:0:2774:3586	5459224	0					
ANR	5459227	Statement	printf	117:1:2777:2782	5459224	0	True				
ANR	5459228	Statement	(	117:7:2783:2783	5459224	1	True				
ANR	5459229	Statement	"""Usage: xrefs [-options] [file] [offset]\\n"""	118:1:2786:2828	5459224	2	True				
ANR	5459230	Statement	""" -v             Verbose mode\\n"""	119:1:2831:2862	5459224	3	True				
ANR	5459231	Statement	""" -V             Show version\\n"""	120:1:2865:2896	5459224	4	True				
ANR	5459232	Statement	""" -q             quite mode\\n"""	121:1:2899:2928	5459224	5	True				
ANR	5459233	Statement	""" -h             Show this helpy message\\n"""	122:1:2931:2973	5459224	6	True				
ANR	5459234	Statement	""" -e             Use big endian for offsets to search\\n"""	123:1:2976:3031	5459224	7	True				
ANR	5459235	Statement	""" -a [arch]      Architecture profile (fmi: help) (autodetects ELF and PE hdrs)\\n"""	124:1:3034:3115	5459224	8	True				
ANR	5459236	Statement	""" -b [address]   base address (0x8048000 f.ex)\\n"""	125:1:3118:3166	5459224	9	True				
ANR	5459237	Statement	""" -f [from]      start scanning from this offset (default 0)\\n"""	126:1:3169:3231	5459224	10	True				
ANR	5459238	Statement	""" -t [to]        limit address (default 99999999)\\n"""	127:1:3234:3285	5459224	11	True				
ANR	5459239	Statement	""" -r [range]     Range in bytes of allowed relative offsets\\n"""	128:1:3288:3349	5459224	12	True				
ANR	5459240	Statement	""" -s [size]      Size of offset (4 for intel, 3 for ppc, ...)\\n"""	129:1:3352:3415	5459224	13	True				
ANR	5459241	Statement	""" -d [offset]    Sets a negative delta offset as padding (default 1)\\n"""	130:1:3418:3488	5459224	14	True				
ANR	5459242	Statement	""" -X [offset]    Print out debugging information of a certain relative offset\\n"""	131:1:3491:3570	5459224	15	True				
ANR	5459243	Statement	)	131:81:3571:3571	5459224	16	True				
ANR	5459244	ExpressionStatement		131:82:3572:3572	5459224	17	True				
ANR	5459245	ReturnStatement	return 1 ;	133:1:3576:3584	5459224	18	True				
ANR	5459246	PrimaryExpression	1		5459224	0					
ANR	5459247	ReturnType	static int		5459224	1					
ANR	5459248	Identifier	show_usage		5459224	2					
ANR	5459249	ParameterList			5459224	3					
ANR	5459250	CFGEntryNode	ENTRY		5459224		True				
ANR	5459251	CFGExitNode	EXIT		5459224		True				
ANR	5459252	Function	file_size_fd	136:0:3589:3776							
ANR	5459253	FunctionDef	file_size_fd (int fd)		5459252	0					
ANR	5459254	CompoundStatement		137:0:3622:3776	5459252	0					
ANR	5459255	IdentifierDeclStatement	"ut32 curr = lseek ( fd , 0 , SEEK_CUR ) ;"	138:1:3625:3659	5459252	0	True				
ANR	5459256	IdentifierDecl	"curr = lseek ( fd , 0 , SEEK_CUR )"		5459252	0					
ANR	5459257	IdentifierDeclType	ut32		5459252	0					
ANR	5459258	Identifier	curr		5459252	1					
ANR	5459259	AssignmentExpression	"curr = lseek ( fd , 0 , SEEK_CUR )"		5459252	2		=			
ANR	5459260	Identifier	curr		5459252	0					
ANR	5459261	CallExpression	"lseek ( fd , 0 , SEEK_CUR )"		5459252	1					
ANR	5459262	Callee	lseek		5459252	0					
ANR	5459263	Identifier	lseek		5459252	0					
ANR	5459264	ArgumentList	fd		5459252	1					
ANR	5459265	Argument	fd		5459252	0					
ANR	5459266	Identifier	fd		5459252	0					
ANR	5459267	Argument	0		5459252	1					
ANR	5459268	PrimaryExpression	0		5459252	0					
ANR	5459269	Argument	SEEK_CUR		5459252	2					
ANR	5459270	Identifier	SEEK_CUR		5459252	0					
ANR	5459271	IdentifierDeclStatement	"ut32 size = lseek ( fd , 0 , SEEK_END ) ;"	139:1:3662:3696	5459252	1	True				
ANR	5459272	IdentifierDecl	"size = lseek ( fd , 0 , SEEK_END )"		5459252	0					
ANR	5459273	IdentifierDeclType	ut32		5459252	0					
ANR	5459274	Identifier	size		5459252	1					
ANR	5459275	AssignmentExpression	"size = lseek ( fd , 0 , SEEK_END )"		5459252	2		=			
ANR	5459276	Identifier	size		5459252	0					
ANR	5459277	CallExpression	"lseek ( fd , 0 , SEEK_END )"		5459252	1					
ANR	5459278	Callee	lseek		5459252	0					
ANR	5459279	Identifier	lseek		5459252	0					
ANR	5459280	ArgumentList	fd		5459252	1					
ANR	5459281	Argument	fd		5459252	0					
ANR	5459282	Identifier	fd		5459252	0					
ANR	5459283	Argument	0		5459252	1					
ANR	5459284	PrimaryExpression	0		5459252	0					
ANR	5459285	Argument	SEEK_END		5459252	2					
ANR	5459286	Identifier	SEEK_END		5459252	0					
ANR	5459287	ExpressionStatement	"lseek ( fd , curr , SEEK_SET )"	140:1:3734:3759	5459252	2	True				
ANR	5459288	CallExpression	"lseek ( fd , curr , SEEK_SET )"		5459252	0					
ANR	5459289	Callee	lseek		5459252	0					
ANR	5459290	Identifier	lseek		5459252	0					
ANR	5459291	ArgumentList	fd		5459252	1					
ANR	5459292	Argument	fd		5459252	0					
ANR	5459293	Identifier	fd		5459252	0					
ANR	5459294	Argument	curr		5459252	1					
ANR	5459295	Identifier	curr		5459252	0					
ANR	5459296	Argument	SEEK_SET		5459252	2					
ANR	5459297	Identifier	SEEK_SET		5459252	0					
ANR	5459298	ReturnStatement	return size ;	142:1:3763:3774	5459252	3	True				
ANR	5459299	Identifier	size		5459252	0					
ANR	5459300	ReturnType	static ut32		5459252	1					
ANR	5459301	Identifier	file_size_fd		5459252	2					
ANR	5459302	ParameterList	int fd		5459252	3					
ANR	5459303	Parameter	int fd	136:25:3614:3619	5459252	0	True				
ANR	5459304	ParameterType	int		5459252	0					
ANR	5459305	Identifier	fd		5459252	1					
ANR	5459306	CFGEntryNode	ENTRY		5459252		True				
ANR	5459307	CFGExitNode	EXIT		5459252		True				
ANR	5459308	Symbol	SEEK_SET		5459252						
ANR	5459309	Symbol	lseek		5459252						
ANR	5459310	Symbol	SEEK_CUR		5459252						
ANR	5459311	Symbol	size		5459252						
ANR	5459312	Symbol	curr		5459252						
ANR	5459313	Symbol	fd		5459252						
ANR	5459314	Symbol	SEEK_END		5459252						
ANR	5459315	Function	get_value32	146:0:3816:4130							
ANR	5459316	FunctionDef	get_value32 (const char * arg)		5459315	0					
ANR	5459317	CompoundStatement		147:0:3857:4130	5459315	0					
ANR	5459318	IdentifierDeclStatement	int i ;	148:8:3867:3872	5459315	0	True				
ANR	5459319	IdentifierDecl	i		5459315	0					
ANR	5459320	IdentifierDeclType	int		5459315	0					
ANR	5459321	Identifier	i		5459315	1					
ANR	5459322	IdentifierDeclStatement	ut32 ret ;	149:8:3882:3890	5459315	1	True				
ANR	5459323	IdentifierDecl	ret		5459315	0					
ANR	5459324	IdentifierDeclType	ut32		5459315	0					
ANR	5459325	Identifier	ret		5459315	1					
ANR	5459326	ForStatement	for ( i = 0 ; arg [ i ] == ' ' ; i ++ )		5459315	2					
ANR	5459327	ForInit	i = 0 ;	151:5:3898:3901	5459315	0	True				
ANR	5459328	AssignmentExpression	i = 0		5459315	0		=			
ANR	5459329	Identifier	i		5459315	0					
ANR	5459330	PrimaryExpression	0		5459315	1					
ANR	5459331	Condition	arg [ i ] == ' '	151:9:3902:3912	5459315	1	True				
ANR	5459332	EqualityExpression	arg [ i ] == ' '		5459315	0		==			
ANR	5459333	ArrayIndexing	arg [ i ]		5459315	0					
ANR	5459334	Identifier	arg		5459315	0					
ANR	5459335	Identifier	i		5459315	1					
ANR	5459336	PrimaryExpression	' '		5459315	1					
ANR	5459337	PostIncDecOperationExpression	i ++	151:21:3914:3916	5459315	2	True				
ANR	5459338	Identifier	i		5459315	0					
ANR	5459339	IncDec	++		5459315	1					
ANR	5459340	ExpressionStatement		151:25:3918:3918	5459315	3	True				
ANR	5459341	ForStatement	for ( ; arg [ i ] == '\\\\' ; i ++ )		5459315	3					
ANR	5459342	Condition	arg [ i ] == '\\\\'	152:6:3926:3937	5459315	0	True				
ANR	5459343	EqualityExpression	arg [ i ] == '\\\\'		5459315	0		==			
ANR	5459344	ArrayIndexing	arg [ i ]		5459315	0					
ANR	5459345	Identifier	arg		5459315	0					
ANR	5459346	Identifier	i		5459315	1					
ANR	5459347	PrimaryExpression	'\\\\'		5459315	1					
ANR	5459348	PostIncDecOperationExpression	i ++	152:19:3939:3941	5459315	1	True				
ANR	5459349	Identifier	i		5459315	0					
ANR	5459350	IncDec	++		5459315	1					
ANR	5459351	ExpressionStatement		152:23:3943:3943	5459315	2	True				
ANR	5459352	ExpressionStatement	i ++	152:25:3945:3948	5459315	4	True				
ANR	5459353	PostIncDecOperationExpression	i ++		5459315	0					
ANR	5459354	Identifier	i		5459315	0					
ANR	5459355	IncDec	++		5459315	1					
ANR	5459356	IfStatement	if ( arg [ i ] == 'x' )		5459315	5					
ANR	5459357	Condition	arg [ i ] == 'x'	154:12:3963:3975	5459315	0	True				
ANR	5459358	EqualityExpression	arg [ i ] == 'x'		5459315	0		==			
ANR	5459359	ArrayIndexing	arg [ i ]		5459315	0					
ANR	5459360	Identifier	arg		5459315	0					
ANR	5459361	Identifier	i		5459315	1					
ANR	5459362	PrimaryExpression	'x'		5459315	1					
ANR	5459363	Statement	sscanf	155:16:3994:3999	5459315	1	True				
ANR	5459364	ElseStatement	else		5459315	0					
ANR	5459365	Statement	sscanf	157:16:4068:4073	5459315	0	True				
ANR	5459366	Statement	(	155:22:4000:4000	5459315	6	True				
ANR	5459367	Statement	arg	155:23:4001:4003	5459315	7	True				
ANR	5459368	Statement	","	155:26:4004:4004	5459315	8	True				
ANR	5459369	Statement	"""0x%08"""	155:28:4006:4012	5459315	9	True				
ANR	5459370	Statement	PFMT64x	155:35:4013:4019	5459315	10	True				
ANR	5459371	Statement	""""""	155:42:4020:4021	5459315	11	True				
ANR	5459372	Statement	","	155:44:4022:4022	5459315	12	True				
ANR	5459373	Statement	(	155:46:4024:4024	5459315	13	True				
ANR	5459374	Statement	ut64	155:47:4025:4028	5459315	14	True				
ANR	5459375	Statement	*	155:52:4030:4030	5459315	15	True				
ANR	5459376	Statement	)	155:53:4031:4031	5459315	16	True				
ANR	5459377	Statement	&	155:54:4032:4032	5459315	17	True				
ANR	5459378	Statement	ret	155:55:4033:4035	5459315	18	True				
ANR	5459379	Statement	)	155:58:4036:4036	5459315	19	True				
ANR	5459380	ExpressionStatement		155:59:4037:4037	5459315	20	True				
ANR	5459381	Statement	(	157:22:4074:4074	5459315	21	True				
ANR	5459382	Statement	arg	157:23:4075:4077	5459315	22	True				
ANR	5459383	Statement	","	157:26:4078:4078	5459315	23	True				
ANR	5459384	Statement	"""%"""	157:28:4080:4082	5459315	24	True				
ANR	5459385	Statement	PFMT64d	157:31:4083:4089	5459315	25	True				
ANR	5459386	Statement	""""""	157:38:4090:4091	5459315	26	True				
ANR	5459387	Statement	","	157:40:4092:4092	5459315	27	True				
ANR	5459388	Statement	(	157:42:4094:4094	5459315	28	True				
ANR	5459389	Statement	ut64	157:43:4095:4098	5459315	29	True				
ANR	5459390	Statement	*	157:48:4100:4100	5459315	30	True				
ANR	5459391	Statement	)	157:49:4101:4101	5459315	31	True				
ANR	5459392	Statement	&	157:50:4102:4102	5459315	32	True				
ANR	5459393	Statement	ret	157:51:4103:4105	5459315	33	True				
ANR	5459394	Statement	)	157:54:4106:4106	5459315	34	True				
ANR	5459395	ExpressionStatement		157:55:4107:4107	5459315	35	True				
ANR	5459396	ReturnStatement	return ret ;	159:8:4118:4128	5459315	36	True				
ANR	5459397	Identifier	ret		5459315	0					
ANR	5459398	ReturnType	static ut32		5459315	1					
ANR	5459399	Identifier	get_value32		5459315	2					
ANR	5459400	ParameterList	const char * arg		5459315	3					
ANR	5459401	Parameter	const char * arg	146:24:3840:3854	5459315	0	True				
ANR	5459402	ParameterType	const char *		5459315	0					
ANR	5459403	Identifier	arg		5459315	1					
ANR	5459404	CFGEntryNode	ENTRY		5459315		True				
ANR	5459405	CFGExitNode	EXIT		5459315		True				
ANR	5459406	Symbol	ret		5459315						
ANR	5459407	Symbol	* i		5459315						
ANR	5459408	Symbol	arg		5459315						
ANR	5459409	Symbol	i		5459315						
ANR	5459410	Symbol	* arg		5459315						
ANR	5459411	Function	get_system_endian	162:0:4133:4216							
ANR	5459412	FunctionDef	get_system_endian ()		5459411	0					
ANR	5459413	CompoundStatement		163:0:4157:4216	5459411	0					
ANR	5459414	IdentifierDeclStatement	int a = 1 ;	164:1:4160:4171	5459411	0	True				
ANR	5459415	IdentifierDecl	a = 1		5459411	0					
ANR	5459416	IdentifierDeclType	int		5459411	0					
ANR	5459417	Identifier	a		5459411	1					
ANR	5459418	AssignmentExpression	a = 1		5459411	2		=			
ANR	5459419	Identifier	a		5459411	0					
ANR	5459420	PrimaryExpression	1		5459411	1					
ANR	5459421	IdentifierDeclStatement	char * b = ( char * ) & a ;	165:1:4174:4193	5459411	1	True				
ANR	5459422	IdentifierDecl	* b = ( char * ) & a		5459411	0					
ANR	5459423	IdentifierDeclType	char *		5459411	0					
ANR	5459424	Identifier	b		5459411	1					
ANR	5459425	AssignmentExpression	* b = ( char * ) & a		5459411	2		=			
ANR	5459426	Identifier	b		5459411	0					
ANR	5459427	CastExpression	( char * ) & a		5459411	1					
ANR	5459428	CastTarget	char *		5459411	0					
ANR	5459429	UnaryOperationExpression	& a		5459411	1					
ANR	5459430	UnaryOperator	&		5459411	0					
ANR	5459431	Identifier	a		5459411	1					
ANR	5459432	ReturnStatement	return ( int ) ( b [ 0 ] ) ;	166:1:4196:4214	5459411	2	True				
ANR	5459433	CastExpression	( int ) ( b [ 0 ] )		5459411	0					
ANR	5459434	CastTarget	int		5459411	0					
ANR	5459435	ArrayIndexing	b [ 0 ]		5459411	1					
ANR	5459436	Identifier	b		5459411	0					
ANR	5459437	PrimaryExpression	0		5459411	1					
ANR	5459438	ReturnType	int		5459411	1					
ANR	5459439	Identifier	get_system_endian		5459411	2					
ANR	5459440	ParameterList			5459411	3					
ANR	5459441	CFGEntryNode	ENTRY		5459411		True				
ANR	5459442	CFGExitNode	EXIT		5459411		True				
ANR	5459443	Symbol	a		5459411						
ANR	5459444	Symbol	b		5459411						
ANR	5459445	Symbol	& a		5459411						
ANR	5459446	Symbol	* b		5459411						
ANR	5459447	Function	set_arch_settings	169:0:4219:5800							
ANR	5459448	FunctionDef	set_arch_settings ()		5459447	0					
ANR	5459449	CompoundStatement		170:0:4243:5800	5459447	0					
ANR	5459450	SwitchStatement	switch ( arch )		5459447	0					
ANR	5459451	Condition	arch	171:8:4253:4256	5459447	0	True				
ANR	5459452	Identifier	arch		5459447	0					
ANR	5459453	CompoundStatement		2:14:15:15	5459447	1					
ANR	5459454	Label	case ARCH_PPC :	172:1:4262:4275	5459447	0	True				
ANR	5459455	Identifier	ARCH_PPC		5459447	0					
ANR	5459456	ExpressionStatement	gamme = 1	173:2:4279:4289	5459447	1	True				
ANR	5459457	AssignmentExpression	gamme = 1		5459447	0		=			
ANR	5459458	Identifier	gamme		5459447	0					
ANR	5459459	PrimaryExpression	1		5459447	1					
ANR	5459460	ExpressionStatement	delta = 1	174:2:4293:4303	5459447	2	True				
ANR	5459461	AssignmentExpression	delta = 1		5459447	0		=			
ANR	5459462	Identifier	delta		5459447	0					
ANR	5459463	PrimaryExpression	1		5459447	1					
ANR	5459464	ExpressionStatement	size = 3	175:2:4307:4317	5459447	3	True				
ANR	5459465	AssignmentExpression	size = 3		5459447	0		=			
ANR	5459466	Identifier	size		5459447	0					
ANR	5459467	PrimaryExpression	3		5459447	1					
ANR	5459468	BreakStatement	break ;	176:2:4321:4326	5459447	4	True				
ANR	5459469	Label	case ARCH_ARM :	177:1:4329:4342	5459447	5	True				
ANR	5459470	Identifier	ARCH_ARM		5459447	0					
ANR	5459471	ExpressionStatement	gamme = - 1	178:2:4346:4357	5459447	6	True				
ANR	5459472	AssignmentExpression	gamme = - 1		5459447	0		=			
ANR	5459473	Identifier	gamme		5459447	0					
ANR	5459474	UnaryOperationExpression	- 1		5459447	1					
ANR	5459475	UnaryOperator	-		5459447	0					
ANR	5459476	PrimaryExpression	1		5459447	1					
ANR	5459477	ExpressionStatement	delta = 1	179:2:4361:4371	5459447	7	True				
ANR	5459478	AssignmentExpression	delta = 1		5459447	0		=			
ANR	5459479	Identifier	delta		5459447	0					
ANR	5459480	PrimaryExpression	1		5459447	1					
ANR	5459481	ExpressionStatement	size = 3	180:2:4375:4385	5459447	8	True				
ANR	5459482	AssignmentExpression	size = 3		5459447	0		=			
ANR	5459483	Identifier	size		5459447	0					
ANR	5459484	PrimaryExpression	3		5459447	1					
ANR	5459485	BreakStatement	break ;	181:2:4389:4394	5459447	9	True				
ANR	5459486	Label	case ARCH_X86 :	182:1:4397:4410	5459447	10	True				
ANR	5459487	Identifier	ARCH_X86		5459447	0					
ANR	5459488	ExpressionStatement	gamme = 1	183:2:4414:4424	5459447	11	True				
ANR	5459489	AssignmentExpression	gamme = 1		5459447	0		=			
ANR	5459490	Identifier	gamme		5459447	0					
ANR	5459491	PrimaryExpression	1		5459447	1					
ANR	5459492	ExpressionStatement	delta = 0	184:2:4428:4438	5459447	12	True				
ANR	5459493	AssignmentExpression	delta = 0		5459447	0		=			
ANR	5459494	Identifier	delta		5459447	0					
ANR	5459495	PrimaryExpression	0		5459447	1					
ANR	5459496	ExpressionStatement	size = 4	185:2:4448:4458	5459447	13	True				
ANR	5459497	AssignmentExpression	size = 4		5459447	0		=			
ANR	5459498	Identifier	size		5459447	0					
ANR	5459499	PrimaryExpression	4		5459447	1					
ANR	5459500	BreakStatement	break ;	186:2:4462:4467	5459447	14	True				
ANR	5459501	Label	case ARCH_NULL :	187:1:4470:4484	5459447	15	True				
ANR	5459502	Identifier	ARCH_NULL		5459447	0					
ANR	5459503	IfStatement	"if ( ! memcmp ( ma , ""\\x7f\\x45\\x4c\\x46"" , 4 ) )"		5459447	16					
ANR	5459504	Condition	"! memcmp ( ma , ""\\x7f\\x45\\x4c\\x46"" , 4 )"	190:6:4533:4566	5459447	0	True				
ANR	5459505	UnaryOperationExpression	"! memcmp ( ma , ""\\x7f\\x45\\x4c\\x46"" , 4 )"		5459447	0					
ANR	5459506	UnaryOperator	!		5459447	0					
ANR	5459507	CallExpression	"memcmp ( ma , ""\\x7f\\x45\\x4c\\x46"" , 4 )"		5459447	1					
ANR	5459508	Callee	memcmp		5459447	0					
ANR	5459509	Identifier	memcmp		5459447	0					
ANR	5459510	ArgumentList	ma		5459447	1					
ANR	5459511	Argument	ma		5459447	0					
ANR	5459512	Identifier	ma		5459447	0					
ANR	5459513	Argument	"""\\x7f\\x45\\x4c\\x46"""		5459447	1					
ANR	5459514	PrimaryExpression	"""\\x7f\\x45\\x4c\\x46"""		5459447	0					
ANR	5459515	Argument	4		5459447	2					
ANR	5459516	PrimaryExpression	4		5459447	0					
ANR	5459517	CompoundStatement		22:3:330:365	5459447	1					
ANR	5459518	IdentifierDeclStatement	short ar = ( ma [ 0x12 ] << 8 ) + ma [ 0x13 ] ;	191:3:4574:4609	5459447	0	True				
ANR	5459519	IdentifierDecl	ar = ( ma [ 0x12 ] << 8 ) + ma [ 0x13 ]		5459447	0					
ANR	5459520	IdentifierDeclType	short		5459447	0					
ANR	5459521	Identifier	ar		5459447	1					
ANR	5459522	AssignmentExpression	ar = ( ma [ 0x12 ] << 8 ) + ma [ 0x13 ]		5459447	2		=			
ANR	5459523	Identifier	ar		5459447	0					
ANR	5459524	AdditiveExpression	( ma [ 0x12 ] << 8 ) + ma [ 0x13 ]		5459447	1		+			
ANR	5459525	ShiftExpression	ma [ 0x12 ] << 8		5459447	0		<<			
ANR	5459526	ArrayIndexing	ma [ 0x12 ]		5459447	0					
ANR	5459527	Identifier	ma		5459447	0					
ANR	5459528	PrimaryExpression	0x12		5459447	1					
ANR	5459529	PrimaryExpression	8		5459447	1					
ANR	5459530	ArrayIndexing	ma [ 0x13 ]		5459447	1					
ANR	5459531	Identifier	ma		5459447	0					
ANR	5459532	PrimaryExpression	0x13		5459447	1					
ANR	5459533	SwitchStatement	switch ( ar )		5459447	1					
ANR	5459534	Condition	ar	192:10:4621:4622	5459447	0	True				
ANR	5459535	Identifier	ar		5459447	0					
ANR	5459536	CompoundStatement		23:14:381:381	5459447	1					
ANR	5459537	Label	case 0x0300 :	193:3:4630:4641	5459447	0	True				
ANR	5459538	IfStatement	if ( endian == - 1 )		5459447	1					
ANR	5459539	Condition	endian == - 1	194:8:4651:4660	5459447	0	True				
ANR	5459540	EqualityExpression	endian == - 1		5459447	0		==			
ANR	5459541	Identifier	endian		5459447	0					
ANR	5459542	UnaryOperationExpression	- 1		5459447	1					
ANR	5459543	UnaryOperator	-		5459447	0					
ANR	5459544	PrimaryExpression	1		5459447	1					
ANR	5459545	ExpressionStatement	endian = 1	195:5:4668:4678	5459447	1	True				
ANR	5459546	AssignmentExpression	endian = 1		5459447	0		=			
ANR	5459547	Identifier	endian		5459447	0					
ANR	5459548	PrimaryExpression	1		5459447	1					
ANR	5459549	IfStatement	if ( ! quite )		5459447	2					
ANR	5459550	Condition	! quite	196:8:4688:4693	5459447	0	True				
ANR	5459551	UnaryOperationExpression	! quite		5459447	0					
ANR	5459552	UnaryOperator	!		5459447	0					
ANR	5459553	Identifier	quite		5459447	1					
ANR	5459554	ExpressionStatement	"printf ( ""# -a x86\\n"" )"	197:5:4701:4721	5459447	1	True				
ANR	5459555	CallExpression	"printf ( ""# -a x86\\n"" )"		5459447	0					
ANR	5459556	Callee	printf		5459447	0					
ANR	5459557	Identifier	printf		5459447	0					
ANR	5459558	ArgumentList	"""# -a x86\\n"""		5459447	1					
ANR	5459559	Argument	"""# -a x86\\n"""		5459447	0					
ANR	5459560	PrimaryExpression	"""# -a x86\\n"""		5459447	0					
ANR	5459561	ExpressionStatement	arch = ARCH_X86	198:4:4727:4742	5459447	3	True				
ANR	5459562	AssignmentExpression	arch = ARCH_X86		5459447	0		=			
ANR	5459563	Identifier	arch		5459447	0					
ANR	5459564	Identifier	ARCH_X86		5459447	1					
ANR	5459565	ExpressionStatement	endian = 1	199:4:4748:4758	5459447	4	True				
ANR	5459566	AssignmentExpression	endian = 1		5459447	0		=			
ANR	5459567	Identifier	endian		5459447	0					
ANR	5459568	PrimaryExpression	1		5459447	1					
ANR	5459569	ReturnStatement	return 1 ;	200:4:4764:4772	5459447	5	True				
ANR	5459570	PrimaryExpression	1		5459447	0					
ANR	5459571	Label	case 0x0014 :	201:3:4777:4788	5459447	6	True				
ANR	5459572	IfStatement	if ( endian == - 1 )		5459447	7					
ANR	5459573	Condition	endian == - 1	202:8:4798:4807	5459447	0	True				
ANR	5459574	EqualityExpression	endian == - 1		5459447	0		==			
ANR	5459575	Identifier	endian		5459447	0					
ANR	5459576	UnaryOperationExpression	- 1		5459447	1					
ANR	5459577	UnaryOperator	-		5459447	0					
ANR	5459578	PrimaryExpression	1		5459447	1					
ANR	5459579	ExpressionStatement	endian = 0	203:5:4815:4825	5459447	1	True				
ANR	5459580	AssignmentExpression	endian = 0		5459447	0		=			
ANR	5459581	Identifier	endian		5459447	0					
ANR	5459582	PrimaryExpression	0		5459447	1					
ANR	5459583	IfStatement	if ( ! quite )		5459447	8					
ANR	5459584	Condition	! quite	204:8:4835:4840	5459447	0	True				
ANR	5459585	UnaryOperationExpression	! quite		5459447	0					
ANR	5459586	UnaryOperator	!		5459447	0					
ANR	5459587	Identifier	quite		5459447	1					
ANR	5459588	ExpressionStatement	"printf ( ""# -a ppc\\n"" )"	205:4:4847:4867	5459447	1	True				
ANR	5459589	CallExpression	"printf ( ""# -a ppc\\n"" )"		5459447	0					
ANR	5459590	Callee	printf		5459447	0					
ANR	5459591	Identifier	printf		5459447	0					
ANR	5459592	ArgumentList	"""# -a ppc\\n"""		5459447	1					
ANR	5459593	Argument	"""# -a ppc\\n"""		5459447	0					
ANR	5459594	PrimaryExpression	"""# -a ppc\\n"""		5459447	0					
ANR	5459595	ExpressionStatement	arch = ARCH_PPC	206:4:4873:4888	5459447	9	True				
ANR	5459596	AssignmentExpression	arch = ARCH_PPC		5459447	0		=			
ANR	5459597	Identifier	arch		5459447	0					
ANR	5459598	Identifier	ARCH_PPC		5459447	1					
ANR	5459599	ReturnStatement	return 1 ;	207:4:4894:4902	5459447	10	True				
ANR	5459600	PrimaryExpression	1		5459447	0					
ANR	5459601	Label	case 0x2800 :	208:3:4907:4918	5459447	11	True				
ANR	5459602	IfStatement	if ( endian == - 1 )		5459447	12					
ANR	5459603	Condition	endian == - 1	209:8:4928:4937	5459447	0	True				
ANR	5459604	EqualityExpression	endian == - 1		5459447	0		==			
ANR	5459605	Identifier	endian		5459447	0					
ANR	5459606	UnaryOperationExpression	- 1		5459447	1					
ANR	5459607	UnaryOperator	-		5459447	0					
ANR	5459608	PrimaryExpression	1		5459447	1					
ANR	5459609	ExpressionStatement	endian = 1	210:5:4945:4955	5459447	1	True				
ANR	5459610	AssignmentExpression	endian = 1		5459447	0		=			
ANR	5459611	Identifier	endian		5459447	0					
ANR	5459612	PrimaryExpression	1		5459447	1					
ANR	5459613	IfStatement	if ( ! quite )		5459447	13					
ANR	5459614	Condition	! quite	211:8:4965:4970	5459447	0	True				
ANR	5459615	UnaryOperationExpression	! quite		5459447	0					
ANR	5459616	UnaryOperator	!		5459447	0					
ANR	5459617	Identifier	quite		5459447	1					
ANR	5459618	ExpressionStatement	"printf ( ""# -a arm\\n"" )"	212:4:4977:4997	5459447	1	True				
ANR	5459619	CallExpression	"printf ( ""# -a arm\\n"" )"		5459447	0					
ANR	5459620	Callee	printf		5459447	0					
ANR	5459621	Identifier	printf		5459447	0					
ANR	5459622	ArgumentList	"""# -a arm\\n"""		5459447	1					
ANR	5459623	Argument	"""# -a arm\\n"""		5459447	0					
ANR	5459624	PrimaryExpression	"""# -a arm\\n"""		5459447	0					
ANR	5459625	ExpressionStatement	arch = ARCH_ARM	213:4:5003:5018	5459447	14	True				
ANR	5459626	AssignmentExpression	arch = ARCH_ARM		5459447	0		=			
ANR	5459627	Identifier	arch		5459447	0					
ANR	5459628	Identifier	ARCH_ARM		5459447	1					
ANR	5459629	ReturnStatement	return 1 ;	214:4:5024:5032	5459447	15	True				
ANR	5459630	PrimaryExpression	1		5459447	0					
ANR	5459631	Label	default :	215:3:5037:5044	5459447	16	True				
ANR	5459632	Identifier	default		5459447	0					
ANR	5459633	ExpressionStatement	"printf ( ""Unsupported architecture '%04x'.\\n"" , ar )"	216:4:5050:5098	5459447	17	True				
ANR	5459634	CallExpression	"printf ( ""Unsupported architecture '%04x'.\\n"" , ar )"		5459447	0					
ANR	5459635	Callee	printf		5459447	0					
ANR	5459636	Identifier	printf		5459447	0					
ANR	5459637	ArgumentList	"""Unsupported architecture '%04x'.\\n"""		5459447	1					
ANR	5459638	Argument	"""Unsupported architecture '%04x'.\\n"""		5459447	0					
ANR	5459639	PrimaryExpression	"""Unsupported architecture '%04x'.\\n"""		5459447	0					
ANR	5459640	Argument	ar		5459447	1					
ANR	5459641	Identifier	ar		5459447	0					
ANR	5459642	ExpressionStatement	exit ( 1 )	217:4:5104:5111	5459447	18	True				
ANR	5459643	CallExpression	exit ( 1 )		5459447	0					
ANR	5459644	Callee	exit		5459447	0					
ANR	5459645	Identifier	exit		5459447	0					
ANR	5459646	ArgumentList	1		5459447	1					
ANR	5459647	Argument	1		5459447	0					
ANR	5459648	PrimaryExpression	1		5459447	0					
ANR	5459649	ElseStatement	else		5459447	0					
ANR	5459650	IfStatement	"if ( ! memcmp ( ma , ""\\x4d\\x5a"" , 2 ) )"		5459447	0					
ANR	5459651	Condition	"! memcmp ( ma , ""\\x4d\\x5a"" , 2 )"	221:6:5141:5165	5459447	0	True				
ANR	5459652	UnaryOperationExpression	"! memcmp ( ma , ""\\x4d\\x5a"" , 2 )"		5459447	0					
ANR	5459653	UnaryOperator	!		5459447	0					
ANR	5459654	CallExpression	"memcmp ( ma , ""\\x4d\\x5a"" , 2 )"		5459447	1					
ANR	5459655	Callee	memcmp		5459447	0					
ANR	5459656	Identifier	memcmp		5459447	0					
ANR	5459657	ArgumentList	ma		5459447	1					
ANR	5459658	Argument	ma		5459447	0					
ANR	5459659	Identifier	ma		5459447	0					
ANR	5459660	Argument	"""\\x4d\\x5a"""		5459447	1					
ANR	5459661	PrimaryExpression	"""\\x4d\\x5a"""		5459447	0					
ANR	5459662	Argument	2		5459447	2					
ANR	5459663	PrimaryExpression	2		5459447	0					
ANR	5459664	CompoundStatement		53:3:929:958	5459447	1					
ANR	5459665	IdentifierDeclStatement	unsigned short off = ma [ 0x3c ] ;	222:3:5173:5202	5459447	0	True				
ANR	5459666	IdentifierDecl	off = ma [ 0x3c ]		5459447	0					
ANR	5459667	IdentifierDeclType	unsigned short		5459447	0					
ANR	5459668	Identifier	off		5459447	1					
ANR	5459669	AssignmentExpression	off = ma [ 0x3c ]		5459447	2		=			
ANR	5459670	Identifier	off		5459447	0					
ANR	5459671	ArrayIndexing	ma [ 0x3c ]		5459447	1					
ANR	5459672	Identifier	ma		5459447	0					
ANR	5459673	PrimaryExpression	0x3c		5459447	1					
ANR	5459674	IfStatement	"if ( ! memcmp ( ma + off , ""PE\\x00\\x00"" , 4 ) )"		5459447	1					
ANR	5459675	Condition	"! memcmp ( ma + off , ""PE\\x00\\x00"" , 4 )"	223:7:5211:5241	5459447	0	True				
ANR	5459676	UnaryOperationExpression	"! memcmp ( ma + off , ""PE\\x00\\x00"" , 4 )"		5459447	0					
ANR	5459677	UnaryOperator	!		5459447	0					
ANR	5459678	CallExpression	"memcmp ( ma + off , ""PE\\x00\\x00"" , 4 )"		5459447	1					
ANR	5459679	Callee	memcmp		5459447	0					
ANR	5459680	Identifier	memcmp		5459447	0					
ANR	5459681	ArgumentList	ma + off		5459447	1					
ANR	5459682	Argument	ma + off		5459447	0					
ANR	5459683	AdditiveExpression	ma + off		5459447	0		+			
ANR	5459684	Identifier	ma		5459447	0					
ANR	5459685	Identifier	off		5459447	1					
ANR	5459686	Argument	"""PE\\x00\\x00"""		5459447	1					
ANR	5459687	PrimaryExpression	"""PE\\x00\\x00"""		5459447	0					
ANR	5459688	Argument	4		5459447	2					
ANR	5459689	PrimaryExpression	4		5459447	0					
ANR	5459690	CompoundStatement		55:4:1006:1050	5459447	1					
ANR	5459691	IdentifierDeclStatement	unsigned short ar = ( ma [ off + 4 ] << 8 ) + ma [ off + 5 ] ;	224:4:5250:5294	5459447	0	True				
ANR	5459692	IdentifierDecl	ar = ( ma [ off + 4 ] << 8 ) + ma [ off + 5 ]		5459447	0					
ANR	5459693	IdentifierDeclType	unsigned short		5459447	0					
ANR	5459694	Identifier	ar		5459447	1					
ANR	5459695	AssignmentExpression	ar = ( ma [ off + 4 ] << 8 ) + ma [ off + 5 ]		5459447	2		=			
ANR	5459696	Identifier	ar		5459447	0					
ANR	5459697	AdditiveExpression	( ma [ off + 4 ] << 8 ) + ma [ off + 5 ]		5459447	1		+			
ANR	5459698	ShiftExpression	ma [ off + 4 ] << 8		5459447	0		<<			
ANR	5459699	ArrayIndexing	ma [ off + 4 ]		5459447	0					
ANR	5459700	Identifier	ma		5459447	0					
ANR	5459701	AdditiveExpression	off + 4		5459447	1		+			
ANR	5459702	Identifier	off		5459447	0					
ANR	5459703	PrimaryExpression	4		5459447	1					
ANR	5459704	PrimaryExpression	8		5459447	1					
ANR	5459705	ArrayIndexing	ma [ off + 5 ]		5459447	1					
ANR	5459706	Identifier	ma		5459447	0					
ANR	5459707	AdditiveExpression	off + 5		5459447	1		+			
ANR	5459708	Identifier	off		5459447	0					
ANR	5459709	PrimaryExpression	5		5459447	1					
ANR	5459710	SwitchStatement	switch ( ar )		5459447	1					
ANR	5459711	Condition	ar	225:11:5307:5308	5459447	0	True				
ANR	5459712	Identifier	ar		5459447	0					
ANR	5459713	CompoundStatement		56:15:1067:1067	5459447	1					
ANR	5459714	Label	case 0x4c01 :	226:4:5317:5328	5459447	0	True				
ANR	5459715	IfStatement	if ( endian == - 1 )		5459447	1					
ANR	5459716	Condition	endian == - 1	227:9:5346:5355	5459447	0	True				
ANR	5459717	EqualityExpression	endian == - 1		5459447	0		==			
ANR	5459718	Identifier	endian		5459447	0					
ANR	5459719	UnaryOperationExpression	- 1		5459447	1					
ANR	5459720	UnaryOperator	-		5459447	0					
ANR	5459721	PrimaryExpression	1		5459447	1					
ANR	5459722	ExpressionStatement	endian = 1	228:6:5364:5374	5459447	1	True				
ANR	5459723	AssignmentExpression	endian = 1		5459447	0		=			
ANR	5459724	Identifier	endian		5459447	0					
ANR	5459725	PrimaryExpression	1		5459447	1					
ANR	5459726	ExpressionStatement	"printf ( ""# -a x86\\n"" )"	229:5:5381:5401	5459447	2	True				
ANR	5459727	CallExpression	"printf ( ""# -a x86\\n"" )"		5459447	0					
ANR	5459728	Callee	printf		5459447	0					
ANR	5459729	Identifier	printf		5459447	0					
ANR	5459730	ArgumentList	"""# -a x86\\n"""		5459447	1					
ANR	5459731	Argument	"""# -a x86\\n"""		5459447	0					
ANR	5459732	PrimaryExpression	"""# -a x86\\n"""		5459447	0					
ANR	5459733	ExpressionStatement	arch = ARCH_X86	230:5:5408:5423	5459447	3	True				
ANR	5459734	AssignmentExpression	arch = ARCH_X86		5459447	0		=			
ANR	5459735	Identifier	arch		5459447	0					
ANR	5459736	Identifier	ARCH_X86		5459447	1					
ANR	5459737	ExpressionStatement	endian = 1	231:5:5430:5440	5459447	4	True				
ANR	5459738	AssignmentExpression	endian = 1		5459447	0		=			
ANR	5459739	Identifier	endian		5459447	0					
ANR	5459740	PrimaryExpression	1		5459447	1					
ANR	5459741	ReturnStatement	return 1 ;	232:5:5447:5455	5459447	5	True				
ANR	5459742	PrimaryExpression	1		5459447	0					
ANR	5459743	Label	case 0xc001 :	233:4:5461:5472	5459447	6	True				
ANR	5459744	IfStatement	if ( endian == - 1 )		5459447	7					
ANR	5459745	Condition	endian == - 1	234:9:5490:5499	5459447	0	True				
ANR	5459746	EqualityExpression	endian == - 1		5459447	0		==			
ANR	5459747	Identifier	endian		5459447	0					
ANR	5459748	UnaryOperationExpression	- 1		5459447	1					
ANR	5459749	UnaryOperator	-		5459447	0					
ANR	5459750	PrimaryExpression	1		5459447	1					
ANR	5459751	ExpressionStatement	endian = 1	235:6:5508:5518	5459447	1	True				
ANR	5459752	AssignmentExpression	endian = 1		5459447	0		=			
ANR	5459753	Identifier	endian		5459447	0					
ANR	5459754	PrimaryExpression	1		5459447	1					
ANR	5459755	ExpressionStatement	"printf ( ""# -a arm\\n"" )"	236:5:5525:5545	5459447	8	True				
ANR	5459756	CallExpression	"printf ( ""# -a arm\\n"" )"		5459447	0					
ANR	5459757	Callee	printf		5459447	0					
ANR	5459758	Identifier	printf		5459447	0					
ANR	5459759	ArgumentList	"""# -a arm\\n"""		5459447	1					
ANR	5459760	Argument	"""# -a arm\\n"""		5459447	0					
ANR	5459761	PrimaryExpression	"""# -a arm\\n"""		5459447	0					
ANR	5459762	ExpressionStatement	arch = ARCH_ARM	237:5:5552:5567	5459447	9	True				
ANR	5459763	AssignmentExpression	arch = ARCH_ARM		5459447	0		=			
ANR	5459764	Identifier	arch		5459447	0					
ANR	5459765	Identifier	ARCH_ARM		5459447	1					
ANR	5459766	ExpressionStatement	endian = 1	238:5:5574:5584	5459447	10	True				
ANR	5459767	AssignmentExpression	endian = 1		5459447	0		=			
ANR	5459768	Identifier	endian		5459447	0					
ANR	5459769	PrimaryExpression	1		5459447	1					
ANR	5459770	ReturnStatement	return 1 ;	239:5:5591:5599	5459447	11	True				
ANR	5459771	PrimaryExpression	1		5459447	0					
ANR	5459772	Label	default :	240:4:5605:5612	5459447	12	True				
ANR	5459773	Identifier	default		5459447	0					
ANR	5459774	ExpressionStatement	"fprintf ( stderr , ""Unknown architecture.\\n"" )"	241:5:5619:5661	5459447	13	True				
ANR	5459775	CallExpression	"fprintf ( stderr , ""Unknown architecture.\\n"" )"		5459447	0					
ANR	5459776	Callee	fprintf		5459447	0					
ANR	5459777	Identifier	fprintf		5459447	0					
ANR	5459778	ArgumentList	stderr		5459447	1					
ANR	5459779	Argument	stderr		5459447	0					
ANR	5459780	Identifier	stderr		5459447	0					
ANR	5459781	Argument	"""Unknown architecture.\\n"""		5459447	1					
ANR	5459782	PrimaryExpression	"""Unknown architecture.\\n"""		5459447	0					
ANR	5459783	BreakStatement	break ;	242:5:5668:5673	5459447	14	True				
ANR	5459784	ElseStatement	else		5459447	0					
ANR	5459785	CompoundStatement		76:9:1451:1451	5459447	0					
ANR	5459786	ExpressionStatement	"fprintf ( stderr , ""Plz. gimmie an architecture. (xrefs -a [arch])\\n"" )"	246:3:5700:5767	5459447	0	True				
ANR	5459787	CallExpression	"fprintf ( stderr , ""Plz. gimmie an architecture. (xrefs -a [arch])\\n"" )"		5459447	0					
ANR	5459788	Callee	fprintf		5459447	0					
ANR	5459789	Identifier	fprintf		5459447	0					
ANR	5459790	ArgumentList	stderr		5459447	1					
ANR	5459791	Argument	stderr		5459447	0					
ANR	5459792	Identifier	stderr		5459447	0					
ANR	5459793	Argument	"""Plz. gimmie an architecture. (xrefs -a [arch])\\n"""		5459447	1					
ANR	5459794	PrimaryExpression	"""Plz. gimmie an architecture. (xrefs -a [arch])\\n"""		5459447	0					
ANR	5459795	ExpressionStatement	exit ( 1 )	247:3:5772:5779	5459447	1	True				
ANR	5459796	CallExpression	exit ( 1 )		5459447	0					
ANR	5459797	Callee	exit		5459447	0					
ANR	5459798	Identifier	exit		5459447	0					
ANR	5459799	ArgumentList	1		5459447	1					
ANR	5459800	Argument	1		5459447	0					
ANR	5459801	PrimaryExpression	1		5459447	0					
ANR	5459802	ReturnStatement	return 0 ;	251:1:5790:5798	5459447	1	True				
ANR	5459803	PrimaryExpression	0		5459447	0					
ANR	5459804	ReturnType	int		5459447	1					
ANR	5459805	Identifier	set_arch_settings		5459447	2					
ANR	5459806	ParameterList			5459447	3					
ANR	5459807	CFGEntryNode	ENTRY		5459447		True				
ANR	5459808	CFGExitNode	EXIT		5459447		True				
ANR	5459809	Symbol	delta		5459447						
ANR	5459810	Symbol	stderr		5459447						
ANR	5459811	Symbol	endian		5459447						
ANR	5459812	Symbol	ARCH_X86		5459447						
ANR	5459813	Symbol	off		5459447						
ANR	5459814	Symbol	ar		5459447						
ANR	5459815	Symbol	ARCH_ARM		5459447						
ANR	5459816	Symbol	gamme		5459447						
ANR	5459817	Symbol	memcmp		5459447						
ANR	5459818	Symbol	size		5459447						
ANR	5459819	Symbol	ma		5459447						
ANR	5459820	Symbol	* ma		5459447						
ANR	5459821	Symbol	quite		5459447						
ANR	5459822	Symbol	ARCH_PPC		5459447						
ANR	5459823	Symbol	* off		5459447						
ANR	5459824	Symbol	arch		5459447						
ANR	5459825	Function	main	255:0:5810:10464							
ANR	5459826	FunctionDef	"main (int argc , char * * argv)"		5459825	0					
ANR	5459827	CompoundStatement		256:0:5842:10464	5459825	0					
ANR	5459828	IdentifierDeclStatement	"ut64 i , c , src ;"	257:1:5845:5859	5459825	0	True				
ANR	5459829	IdentifierDecl	i		5459825	0					
ANR	5459830	IdentifierDeclType	ut64		5459825	0					
ANR	5459831	Identifier	i		5459825	1					
ANR	5459832	IdentifierDecl	c		5459825	1					
ANR	5459833	IdentifierDeclType	ut64		5459825	0					
ANR	5459834	Identifier	c		5459825	1					
ANR	5459835	IdentifierDecl	src		5459825	2					
ANR	5459836	IdentifierDeclType	ut64		5459825	0					
ANR	5459837	Identifier	src		5459825	1					
ANR	5459838	IdentifierDeclStatement	ut64 offset = 0 ;	258:1:5862:5877	5459825	1	True				
ANR	5459839	IdentifierDecl	offset = 0		5459825	0					
ANR	5459840	IdentifierDeclType	ut64		5459825	0					
ANR	5459841	Identifier	offset		5459825	1					
ANR	5459842	AssignmentExpression	offset = 0		5459825	2		=			
ANR	5459843	Identifier	offset		5459825	0					
ANR	5459844	PrimaryExpression	0		5459825	1					
ANR	5459845	IdentifierDeclStatement	"ut64 from = 1 , to = INT_MAX ;"	259:1:5880:5918	5459825	2	True				
ANR	5459846	IdentifierDecl	from = 1		5459825	0					
ANR	5459847	IdentifierDeclType	ut64		5459825	0					
ANR	5459848	Identifier	from		5459825	1					
ANR	5459849	AssignmentExpression	from = 1		5459825	2		=			
ANR	5459850	Identifier	from		5459825	0					
ANR	5459851	PrimaryExpression	1		5459825	1					
ANR	5459852	IdentifierDecl	to = INT_MAX		5459825	1					
ANR	5459853	IdentifierDeclType	ut64		5459825	0					
ANR	5459854	Identifier	to		5459825	1					
ANR	5459855	AssignmentExpression	to = INT_MAX		5459825	2		=			
ANR	5459856	Identifier	INT_MAX		5459825	0					
ANR	5459857	Identifier	INT_MAX		5459825	1					
ANR	5459858	IdentifierDeclStatement	ut64 sa ;	261:1:5921:5928	5459825	3	True				
ANR	5459859	IdentifierDecl	sa		5459825	0					
ANR	5459860	IdentifierDeclType	ut64		5459825	0					
ANR	5459861	Identifier	sa		5459825	1					
ANR	5459862	IfStatement	if ( argc == 2 )		5459825	4					
ANR	5459863	Condition	argc == 2	263:5:5936:5942	5459825	0	True				
ANR	5459864	EqualityExpression	argc == 2		5459825	0		==			
ANR	5459865	Identifier	argc		5459825	0					
ANR	5459866	PrimaryExpression	2		5459825	1					
ANR	5459867	IfStatement	"if ( ! strcmp ( argv [ 1 ] , ""-V"" ) )"		5459825	1					
ANR	5459868	Condition	"! strcmp ( argv [ 1 ] , ""-V"" )"	264:5:5950:5970	5459825	0	True				
ANR	5459869	UnaryOperationExpression	"! strcmp ( argv [ 1 ] , ""-V"" )"		5459825	0					
ANR	5459870	UnaryOperator	!		5459825	0					
ANR	5459871	CallExpression	"strcmp ( argv [ 1 ] , ""-V"" )"		5459825	1					
ANR	5459872	Callee	strcmp		5459825	0					
ANR	5459873	Identifier	strcmp		5459825	0					
ANR	5459874	ArgumentList	argv [ 1 ]		5459825	1					
ANR	5459875	Argument	argv [ 1 ]		5459825	0					
ANR	5459876	ArrayIndexing	argv [ 1 ]		5459825	0					
ANR	5459877	Identifier	argv		5459825	0					
ANR	5459878	PrimaryExpression	1		5459825	1					
ANR	5459879	Argument	"""-V"""		5459825	1					
ANR	5459880	PrimaryExpression	"""-V"""		5459825	0					
ANR	5459881	CompoundStatement		9:28:130:130	5459825	1					
ANR	5459882	ExpressionStatement	"printf ( ""%s\\n"" , VERSION )"	265:2:5977:6000	5459825	0	True				
ANR	5459883	CallExpression	"printf ( ""%s\\n"" , VERSION )"		5459825	0					
ANR	5459884	Callee	printf		5459825	0					
ANR	5459885	Identifier	printf		5459825	0					
ANR	5459886	ArgumentList	"""%s\\n"""		5459825	1					
ANR	5459887	Argument	"""%s\\n"""		5459825	0					
ANR	5459888	PrimaryExpression	"""%s\\n"""		5459825	0					
ANR	5459889	Argument	VERSION		5459825	1					
ANR	5459890	Identifier	VERSION		5459825	0					
ANR	5459891	ReturnStatement	return 0 ;	266:2:6004:6012	5459825	1	True				
ANR	5459892	PrimaryExpression	0		5459825	0					
ANR	5459893	IfStatement	if ( argc < 3 )		5459825	5					
ANR	5459894	Condition	argc < 3	269:5:6023:6028	5459825	0	True				
ANR	5459895	RelationalExpression	argc < 3		5459825	0		<			
ANR	5459896	Identifier	argc		5459825	0					
ANR	5459897	PrimaryExpression	3		5459825	1					
ANR	5459898	ReturnStatement	return show_usage ( ) ;	270:2:6033:6052	5459825	1	True				
ANR	5459899	CallExpression	show_usage ( )		5459825	0					
ANR	5459900	Callee	show_usage		5459825	0					
ANR	5459901	Identifier	show_usage		5459825	0					
ANR	5459902	ArgumentList			5459825	1					
ANR	5459903	WhileStatement	"while ( ( c = getopt ( argc , argv , ""qa:d:hves:f:t:r:X:b:"" ) ) != - 1 )"		5459825	6					
ANR	5459904	Condition	"( c = getopt ( argc , argv , ""qa:d:hves:f:t:r:X:b:"" ) ) != - 1"	273:8:6086:6139	5459825	0	True				
ANR	5459905	EqualityExpression	"( c = getopt ( argc , argv , ""qa:d:hves:f:t:r:X:b:"" ) ) != - 1"		5459825	0		!=			
ANR	5459906	AssignmentExpression	"c = getopt ( argc , argv , ""qa:d:hves:f:t:r:X:b:"" )"		5459825	0		=			
ANR	5459907	Identifier	c		5459825	0					
ANR	5459908	CallExpression	"getopt ( argc , argv , ""qa:d:hves:f:t:r:X:b:"" )"		5459825	1					
ANR	5459909	Callee	getopt		5459825	0					
ANR	5459910	Identifier	getopt		5459825	0					
ANR	5459911	ArgumentList	argc		5459825	1					
ANR	5459912	Argument	argc		5459825	0					
ANR	5459913	Identifier	argc		5459825	0					
ANR	5459914	Argument	argv		5459825	1					
ANR	5459915	Identifier	argv		5459825	0					
ANR	5459916	Argument	"""qa:d:hves:f:t:r:X:b:"""		5459825	2					
ANR	5459917	PrimaryExpression	"""qa:d:hves:f:t:r:X:b:"""		5459825	0					
ANR	5459918	UnaryOperationExpression	- 1		5459825	1					
ANR	5459919	UnaryOperator	-		5459825	0					
ANR	5459920	PrimaryExpression	1		5459825	1					
ANR	5459921	CompoundStatement		18:64:299:299	5459825	1					
ANR	5459922	SwitchStatement	switch ( c )		5459825	0					
ANR	5459923	Condition	c	274:10:6154:6154	5459825	0	True				
ANR	5459924	Identifier	c		5459825	0					
ANR	5459925	CompoundStatement		19:14:315:315	5459825	1					
ANR	5459926	Label	case 'q' :	275:2:6162:6170	5459825	0	True				
ANR	5459927	ExpressionStatement	quite = 1	276:3:6175:6184	5459825	1	True				
ANR	5459928	AssignmentExpression	quite = 1		5459825	0		=			
ANR	5459929	Identifier	quite		5459825	0					
ANR	5459930	PrimaryExpression	1		5459825	1					
ANR	5459931	BreakStatement	break ;	277:3:6189:6194	5459825	2	True				
ANR	5459932	Label	case 'a' :	278:2:6198:6206	5459825	3	True				
ANR	5459933	IfStatement	"if ( ! strcmp ( optarg , ""intel"" ) )"		5459825	4					
ANR	5459934	Condition	"! strcmp ( optarg , ""intel"" )"	279:7:6215:6238	5459825	0	True				
ANR	5459935	UnaryOperationExpression	"! strcmp ( optarg , ""intel"" )"		5459825	0					
ANR	5459936	UnaryOperator	!		5459825	0					
ANR	5459937	CallExpression	"strcmp ( optarg , ""intel"" )"		5459825	1					
ANR	5459938	Callee	strcmp		5459825	0					
ANR	5459939	Identifier	strcmp		5459825	0					
ANR	5459940	ArgumentList	optarg		5459825	1					
ANR	5459941	Argument	optarg		5459825	0					
ANR	5459942	Identifier	optarg		5459825	0					
ANR	5459943	Argument	"""intel"""		5459825	1					
ANR	5459944	PrimaryExpression	"""intel"""		5459825	0					
ANR	5459945	ExpressionStatement	arch = ARCH_X86	280:4:6245:6260	5459825	1	True				
ANR	5459946	AssignmentExpression	arch = ARCH_X86		5459825	0		=			
ANR	5459947	Identifier	arch		5459825	0					
ANR	5459948	Identifier	ARCH_X86		5459825	1					
ANR	5459949	ElseStatement	else		5459825	0					
ANR	5459950	IfStatement	"if ( ! strcmp ( optarg , ""x86"" ) )"		5459825	0					
ANR	5459951	Condition	"! strcmp ( optarg , ""x86"" )"	282:7:6277:6298	5459825	0	True				
ANR	5459952	UnaryOperationExpression	"! strcmp ( optarg , ""x86"" )"		5459825	0					
ANR	5459953	UnaryOperator	!		5459825	0					
ANR	5459954	CallExpression	"strcmp ( optarg , ""x86"" )"		5459825	1					
ANR	5459955	Callee	strcmp		5459825	0					
ANR	5459956	Identifier	strcmp		5459825	0					
ANR	5459957	ArgumentList	optarg		5459825	1					
ANR	5459958	Argument	optarg		5459825	0					
ANR	5459959	Identifier	optarg		5459825	0					
ANR	5459960	Argument	"""x86"""		5459825	1					
ANR	5459961	PrimaryExpression	"""x86"""		5459825	0					
ANR	5459962	ExpressionStatement	arch = ARCH_X86	283:4:6305:6320	5459825	1	True				
ANR	5459963	AssignmentExpression	arch = ARCH_X86		5459825	0		=			
ANR	5459964	Identifier	arch		5459825	0					
ANR	5459965	Identifier	ARCH_X86		5459825	1					
ANR	5459966	ElseStatement	else		5459825	0					
ANR	5459967	IfStatement	"if ( ! strcmp ( optarg , ""arm"" ) )"		5459825	0					
ANR	5459968	Condition	"! strcmp ( optarg , ""arm"" )"	285:7:6337:6358	5459825	0	True				
ANR	5459969	UnaryOperationExpression	"! strcmp ( optarg , ""arm"" )"		5459825	0					
ANR	5459970	UnaryOperator	!		5459825	0					
ANR	5459971	CallExpression	"strcmp ( optarg , ""arm"" )"		5459825	1					
ANR	5459972	Callee	strcmp		5459825	0					
ANR	5459973	Identifier	strcmp		5459825	0					
ANR	5459974	ArgumentList	optarg		5459825	1					
ANR	5459975	Argument	optarg		5459825	0					
ANR	5459976	Identifier	optarg		5459825	0					
ANR	5459977	Argument	"""arm"""		5459825	1					
ANR	5459978	PrimaryExpression	"""arm"""		5459825	0					
ANR	5459979	ExpressionStatement	arch = ARCH_ARM	286:4:6365:6380	5459825	1	True				
ANR	5459980	AssignmentExpression	arch = ARCH_ARM		5459825	0		=			
ANR	5459981	Identifier	arch		5459825	0					
ANR	5459982	Identifier	ARCH_ARM		5459825	1					
ANR	5459983	ElseStatement	else		5459825	0					
ANR	5459984	IfStatement	"if ( ! strcmp ( optarg , ""ppc"" ) )"		5459825	0					
ANR	5459985	Condition	"! strcmp ( optarg , ""ppc"" )"	288:7:6397:6418	5459825	0	True				
ANR	5459986	UnaryOperationExpression	"! strcmp ( optarg , ""ppc"" )"		5459825	0					
ANR	5459987	UnaryOperator	!		5459825	0					
ANR	5459988	CallExpression	"strcmp ( optarg , ""ppc"" )"		5459825	1					
ANR	5459989	Callee	strcmp		5459825	0					
ANR	5459990	Identifier	strcmp		5459825	0					
ANR	5459991	ArgumentList	optarg		5459825	1					
ANR	5459992	Argument	optarg		5459825	0					
ANR	5459993	Identifier	optarg		5459825	0					
ANR	5459994	Argument	"""ppc"""		5459825	1					
ANR	5459995	PrimaryExpression	"""ppc"""		5459825	0					
ANR	5459996	CompoundStatement		33:31:578:578	5459825	1					
ANR	5459997	ExpressionStatement	arch = ARCH_PPC	289:4:6427:6442	5459825	0	True				
ANR	5459998	AssignmentExpression	arch = ARCH_PPC		5459825	0		=			
ANR	5459999	Identifier	arch		5459825	0					
ANR	5460000	Identifier	ARCH_PPC		5459825	1					
ANR	5460001	ElseStatement	else		5459825	0					
ANR	5460002	CompoundStatement		35:10:611:611	5459825	0					
ANR	5460003	ExpressionStatement	"printf ( ""arm ppc x86\\n"" )"	291:4:6460:6483	5459825	0	True				
ANR	5460004	CallExpression	"printf ( ""arm ppc x86\\n"" )"		5459825	0					
ANR	5460005	Callee	printf		5459825	0					
ANR	5460006	Identifier	printf		5459825	0					
ANR	5460007	ArgumentList	"""arm ppc x86\\n"""		5459825	1					
ANR	5460008	Argument	"""arm ppc x86\\n"""		5459825	0					
ANR	5460009	PrimaryExpression	"""arm ppc x86\\n"""		5459825	0					
ANR	5460010	ReturnStatement	return 1 ;	292:4:6489:6497	5459825	1	True				
ANR	5460011	PrimaryExpression	1		5459825	0					
ANR	5460012	BreakStatement	break ;	294:3:6507:6512	5459825	5	True				
ANR	5460013	Label	case 'b' :	295:2:6516:6524	5459825	6	True				
ANR	5460014	ExpressionStatement	base = get_value32 ( optarg )	296:3:6529:6555	5459825	7	True				
ANR	5460015	AssignmentExpression	base = get_value32 ( optarg )		5459825	0		=			
ANR	5460016	Identifier	base		5459825	0					
ANR	5460017	CallExpression	get_value32 ( optarg )		5459825	1					
ANR	5460018	Callee	get_value32		5459825	0					
ANR	5460019	Identifier	get_value32		5459825	0					
ANR	5460020	ArgumentList	optarg		5459825	1					
ANR	5460021	Argument	optarg		5459825	0					
ANR	5460022	Identifier	optarg		5459825	0					
ANR	5460023	BreakStatement	break ;	297:3:6560:6565	5459825	8	True				
ANR	5460024	Label	case 'd' :	298:2:6569:6577	5459825	9	True				
ANR	5460025	ExpressionStatement	delta = get_value32 ( optarg )	299:3:6582:6609	5459825	10	True				
ANR	5460026	AssignmentExpression	delta = get_value32 ( optarg )		5459825	0		=			
ANR	5460027	Identifier	delta		5459825	0					
ANR	5460028	CallExpression	get_value32 ( optarg )		5459825	1					
ANR	5460029	Callee	get_value32		5459825	0					
ANR	5460030	Identifier	get_value32		5459825	0					
ANR	5460031	ArgumentList	optarg		5459825	1					
ANR	5460032	Argument	optarg		5459825	0					
ANR	5460033	Identifier	optarg		5459825	0					
ANR	5460034	BreakStatement	break ;	300:3:6614:6619	5459825	11	True				
ANR	5460035	Label	case 'X' :	301:2:6623:6631	5459825	12	True				
ANR	5460036	ExpressionStatement	xylum = get_value32 ( optarg )	302:3:6636:6663	5459825	13	True				
ANR	5460037	AssignmentExpression	xylum = get_value32 ( optarg )		5459825	0		=			
ANR	5460038	Identifier	xylum		5459825	0					
ANR	5460039	CallExpression	get_value32 ( optarg )		5459825	1					
ANR	5460040	Callee	get_value32		5459825	0					
ANR	5460041	Identifier	get_value32		5459825	0					
ANR	5460042	ArgumentList	optarg		5459825	1					
ANR	5460043	Argument	optarg		5459825	0					
ANR	5460044	Identifier	optarg		5459825	0					
ANR	5460045	BreakStatement	break ;	303:3:6668:6673	5459825	14	True				
ANR	5460046	Label	case 'e' :	304:2:6677:6685	5459825	15	True				
ANR	5460047	ExpressionStatement	endian = 1	305:3:6690:6700	5459825	16	True				
ANR	5460048	AssignmentExpression	endian = 1		5459825	0		=			
ANR	5460049	Identifier	endian		5459825	0					
ANR	5460050	PrimaryExpression	1		5459825	1					
ANR	5460051	BreakStatement	break ;	306:3:6705:6710	5459825	17	True				
ANR	5460052	Label	case 'r' :	307:2:6714:6722	5459825	18	True				
ANR	5460053	ExpressionStatement	range = get_value32 ( optarg )	308:3:6727:6754	5459825	19	True				
ANR	5460054	AssignmentExpression	range = get_value32 ( optarg )		5459825	0		=			
ANR	5460055	Identifier	range		5459825	0					
ANR	5460056	CallExpression	get_value32 ( optarg )		5459825	1					
ANR	5460057	Callee	get_value32		5459825	0					
ANR	5460058	Identifier	get_value32		5459825	0					
ANR	5460059	ArgumentList	optarg		5459825	1					
ANR	5460060	Argument	optarg		5459825	0					
ANR	5460061	Identifier	optarg		5459825	0					
ANR	5460062	IfStatement	if ( range < 0 )		5459825	20					
ANR	5460063	Condition	range < 0	309:7:6763:6769	5459825	0	True				
ANR	5460064	RelationalExpression	range < 0		5459825	0		<			
ANR	5460065	Identifier	range		5459825	0					
ANR	5460066	PrimaryExpression	0		5459825	1					
ANR	5460067	ExpressionStatement	range = - range	309:16:6772:6786	5459825	1	True				
ANR	5460068	AssignmentExpression	range = - range		5459825	0		=			
ANR	5460069	Identifier	range		5459825	0					
ANR	5460070	UnaryOperationExpression	- range		5459825	1					
ANR	5460071	UnaryOperator	-		5459825	0					
ANR	5460072	Identifier	range		5459825	1					
ANR	5460073	BreakStatement	break ;	310:3:6791:6796	5459825	21	True				
ANR	5460074	Label	case 'v' :	311:2:6800:6808	5459825	22	True				
ANR	5460075	ExpressionStatement	verbose = 1	312:3:6813:6824	5459825	23	True				
ANR	5460076	AssignmentExpression	verbose = 1		5459825	0		=			
ANR	5460077	Identifier	verbose		5459825	0					
ANR	5460078	PrimaryExpression	1		5459825	1					
ANR	5460079	BreakStatement	break ;	313:3:6829:6834	5459825	24	True				
ANR	5460080	Label	case 'f' :	314:2:6838:6846	5459825	25	True				
ANR	5460081	ExpressionStatement	from = get_value32 ( optarg )	315:3:6851:6877	5459825	26	True				
ANR	5460082	AssignmentExpression	from = get_value32 ( optarg )		5459825	0		=			
ANR	5460083	Identifier	from		5459825	0					
ANR	5460084	CallExpression	get_value32 ( optarg )		5459825	1					
ANR	5460085	Callee	get_value32		5459825	0					
ANR	5460086	Identifier	get_value32		5459825	0					
ANR	5460087	ArgumentList	optarg		5459825	1					
ANR	5460088	Argument	optarg		5459825	0					
ANR	5460089	Identifier	optarg		5459825	0					
ANR	5460090	BreakStatement	break ;	316:3:6882:6887	5459825	27	True				
ANR	5460091	Label	case 't' :	317:2:6891:6899	5459825	28	True				
ANR	5460092	ExpressionStatement	to = get_value32 ( optarg )	318:3:6904:6928	5459825	29	True				
ANR	5460093	AssignmentExpression	to = get_value32 ( optarg )		5459825	0		=			
ANR	5460094	Identifier	to		5459825	0					
ANR	5460095	CallExpression	get_value32 ( optarg )		5459825	1					
ANR	5460096	Callee	get_value32		5459825	0					
ANR	5460097	Identifier	get_value32		5459825	0					
ANR	5460098	ArgumentList	optarg		5459825	1					
ANR	5460099	Argument	optarg		5459825	0					
ANR	5460100	Identifier	optarg		5459825	0					
ANR	5460101	BreakStatement	break ;	319:3:6933:6938	5459825	30	True				
ANR	5460102	Label	case 's' :	320:2:6942:6950	5459825	31	True				
ANR	5460103	ExpressionStatement	size = get_value32 ( optarg )	321:3:6955:6981	5459825	32	True				
ANR	5460104	AssignmentExpression	size = get_value32 ( optarg )		5459825	0		=			
ANR	5460105	Identifier	size		5459825	0					
ANR	5460106	CallExpression	get_value32 ( optarg )		5459825	1					
ANR	5460107	Callee	get_value32		5459825	0					
ANR	5460108	Identifier	get_value32		5459825	0					
ANR	5460109	ArgumentList	optarg		5459825	1					
ANR	5460110	Argument	optarg		5459825	0					
ANR	5460111	Identifier	optarg		5459825	0					
ANR	5460112	BreakStatement	break ;	322:3:6986:6991	5459825	33	True				
ANR	5460113	Label	case 'h' :	323:2:6995:7003	5459825	34	True				
ANR	5460114	ReturnStatement	return show_usage ( ) ;	324:3:7008:7027	5459825	35	True				
ANR	5460115	CallExpression	show_usage ( )		5459825	0					
ANR	5460116	Callee	show_usage		5459825	0					
ANR	5460117	Identifier	show_usage		5459825	0					
ANR	5460118	ArgumentList			5459825	1					
ANR	5460119	IfStatement	if ( optind + 2 != argc )		5459825	7					
ANR	5460120	Condition	optind + 2 != argc	328:5:7042:7057	5459825	0	True				
ANR	5460121	EqualityExpression	optind + 2 != argc		5459825	0		!=			
ANR	5460122	AdditiveExpression	optind + 2		5459825	0		+			
ANR	5460123	Identifier	optind		5459825	0					
ANR	5460124	PrimaryExpression	2		5459825	1					
ANR	5460125	Identifier	argc		5459825	1					
ANR	5460126	CompoundStatement		73:23:1217:1217	5459825	1					
ANR	5460127	ExpressionStatement	"fprintf ( stderr , ""Plz. gimmie a file and offset.\\n"" )"	329:2:7064:7115	5459825	0	True				
ANR	5460128	CallExpression	"fprintf ( stderr , ""Plz. gimmie a file and offset.\\n"" )"		5459825	0					
ANR	5460129	Callee	fprintf		5459825	0					
ANR	5460130	Identifier	fprintf		5459825	0					
ANR	5460131	ArgumentList	stderr		5459825	1					
ANR	5460132	Argument	stderr		5459825	0					
ANR	5460133	Identifier	stderr		5459825	0					
ANR	5460134	Argument	"""Plz. gimmie a file and offset.\\n"""		5459825	1					
ANR	5460135	PrimaryExpression	"""Plz. gimmie a file and offset.\\n"""		5459825	0					
ANR	5460136	ReturnStatement	return 1 ;	330:2:7119:7127	5459825	1	True				
ANR	5460137	PrimaryExpression	1		5459825	0					
ANR	5460138	ExpressionStatement	"src = open ( argv [ optind ] , O_RDONLY )"	334:1:7155:7192	5459825	8	True				
ANR	5460139	AssignmentExpression	"src = open ( argv [ optind ] , O_RDONLY )"		5459825	0		=			
ANR	5460140	Identifier	src		5459825	0					
ANR	5460141	CallExpression	"open ( argv [ optind ] , O_RDONLY )"		5459825	1					
ANR	5460142	Callee	open		5459825	0					
ANR	5460143	Identifier	open		5459825	0					
ANR	5460144	ArgumentList	argv [ optind ]		5459825	1					
ANR	5460145	Argument	argv [ optind ]		5459825	0					
ANR	5460146	ArrayIndexing	argv [ optind ]		5459825	0					
ANR	5460147	Identifier	argv		5459825	0					
ANR	5460148	Identifier	optind		5459825	1					
ANR	5460149	Argument	O_RDONLY		5459825	1					
ANR	5460150	Identifier	O_RDONLY		5459825	0					
ANR	5460151	IfStatement	if ( src == - 1 )		5459825	9					
ANR	5460152	Condition	src == - 1	335:5:7199:7207	5459825	0	True				
ANR	5460153	EqualityExpression	src == - 1		5459825	0		==			
ANR	5460154	Identifier	src		5459825	0					
ANR	5460155	UnaryOperationExpression	- 1		5459825	1					
ANR	5460156	UnaryOperator	-		5459825	0					
ANR	5460157	PrimaryExpression	1		5459825	1					
ANR	5460158	CompoundStatement		80:16:1367:1367	5459825	1					
ANR	5460159	ExpressionStatement	"fprintf ( stderr , ""Cannot open file source %s\\n"" , argv [ optind ] )"	336:2:7214:7275	5459825	0	True				
ANR	5460160	CallExpression	"fprintf ( stderr , ""Cannot open file source %s\\n"" , argv [ optind ] )"		5459825	0					
ANR	5460161	Callee	fprintf		5459825	0					
ANR	5460162	Identifier	fprintf		5459825	0					
ANR	5460163	ArgumentList	stderr		5459825	1					
ANR	5460164	Argument	stderr		5459825	0					
ANR	5460165	Identifier	stderr		5459825	0					
ANR	5460166	Argument	"""Cannot open file source %s\\n"""		5459825	1					
ANR	5460167	PrimaryExpression	"""Cannot open file source %s\\n"""		5459825	0					
ANR	5460168	Argument	argv [ optind ]		5459825	2					
ANR	5460169	ArrayIndexing	argv [ optind ]		5459825	0					
ANR	5460170	Identifier	argv		5459825	0					
ANR	5460171	Identifier	optind		5459825	1					
ANR	5460172	ReturnStatement	return - 1 ;	337:2:7279:7288	5459825	1	True				
ANR	5460173	UnaryOperationExpression	- 1		5459825	0					
ANR	5460174	UnaryOperator	-		5459825	0					
ANR	5460175	PrimaryExpression	1		5459825	1					
ANR	5460176	ExpressionStatement	offset = get_value32 ( argv [ optind + 1 ] )	340:1:7295:7331	5459825	10	True				
ANR	5460177	AssignmentExpression	offset = get_value32 ( argv [ optind + 1 ] )		5459825	0		=			
ANR	5460178	Identifier	offset		5459825	0					
ANR	5460179	CallExpression	get_value32 ( argv [ optind + 1 ] )		5459825	1					
ANR	5460180	Callee	get_value32		5459825	0					
ANR	5460181	Identifier	get_value32		5459825	0					
ANR	5460182	ArgumentList	argv [ optind + 1 ]		5459825	1					
ANR	5460183	Argument	argv [ optind + 1 ]		5459825	0					
ANR	5460184	ArrayIndexing	argv [ optind + 1 ]		5459825	0					
ANR	5460185	Identifier	argv		5459825	0					
ANR	5460186	AdditiveExpression	optind + 1		5459825	1		+			
ANR	5460187	Identifier	optind		5459825	0					
ANR	5460188	PrimaryExpression	1		5459825	1					
ANR	5460189	IfStatement	if ( offset >= base )		5459825	11					
ANR	5460190	Condition	offset >= base	341:5:7338:7351	5459825	0	True				
ANR	5460191	RelationalExpression	offset >= base		5459825	0		>=			
ANR	5460192	Identifier	offset		5459825	0					
ANR	5460193	Identifier	base		5459825	1					
ANR	5460194	ExpressionStatement	offset -= base	342:2:7356:7370	5459825	1	True				
ANR	5460195	AssignmentExpression	offset -= base		5459825	0		-=			
ANR	5460196	Identifier	offset		5459825	0					
ANR	5460197	Identifier	base		5459825	1					
ANR	5460198	ExpressionStatement	sa = file_size_fd ( src ) - size	344:1:7374:7403	5459825	12	True				
ANR	5460199	AssignmentExpression	sa = file_size_fd ( src ) - size		5459825	0		=			
ANR	5460200	Identifier	sa		5459825	0					
ANR	5460201	AdditiveExpression	file_size_fd ( src ) - size		5459825	1		-			
ANR	5460202	CallExpression	file_size_fd ( src )		5459825	0					
ANR	5460203	Callee	file_size_fd		5459825	0					
ANR	5460204	Identifier	file_size_fd		5459825	0					
ANR	5460205	ArgumentList	src		5459825	1					
ANR	5460206	Argument	src		5459825	0					
ANR	5460207	Identifier	src		5459825	0					
ANR	5460208	Identifier	size		5459825	1					
ANR	5460209	ExpressionStatement	"ma = mmap ( NULL , sa , PROT_READ , MAP_SHARED , src , 0 )"	346:1:7419:7469	5459825	13	True				
ANR	5460210	AssignmentExpression	"ma = mmap ( NULL , sa , PROT_READ , MAP_SHARED , src , 0 )"		5459825	0		=			
ANR	5460211	Identifier	ma		5459825	0					
ANR	5460212	CallExpression	"mmap ( NULL , sa , PROT_READ , MAP_SHARED , src , 0 )"		5459825	1					
ANR	5460213	Callee	mmap		5459825	0					
ANR	5460214	Identifier	mmap		5459825	0					
ANR	5460215	ArgumentList	NULL		5459825	1					
ANR	5460216	Argument	NULL		5459825	0					
ANR	5460217	Identifier	NULL		5459825	0					
ANR	5460218	Argument	sa		5459825	1					
ANR	5460219	Identifier	sa		5459825	0					
ANR	5460220	Argument	PROT_READ		5459825	2					
ANR	5460221	Identifier	PROT_READ		5459825	0					
ANR	5460222	Argument	MAP_SHARED		5459825	3					
ANR	5460223	Identifier	MAP_SHARED		5459825	0					
ANR	5460224	Argument	src		5459825	4					
ANR	5460225	Identifier	src		5459825	0					
ANR	5460226	Argument	0		5459825	5					
ANR	5460227	PrimaryExpression	0		5459825	0					
ANR	5460228	IfStatement	if ( sa < 0x50 )		5459825	14					
ANR	5460229	Condition	sa < 0x50	347:5:7476:7484	5459825	0	True				
ANR	5460230	RelationalExpression	sa < 0x50		5459825	0		<			
ANR	5460231	Identifier	sa		5459825	0					
ANR	5460232	PrimaryExpression	0x50		5459825	1					
ANR	5460233	CompoundStatement		92:16:1644:1644	5459825	1					
ANR	5460234	ExpressionStatement	"fprintf ( stderr , ""Minimum length is 0x50 bytes.\\n"" )"	348:2:7491:7541	5459825	0	True				
ANR	5460235	CallExpression	"fprintf ( stderr , ""Minimum length is 0x50 bytes.\\n"" )"		5459825	0					
ANR	5460236	Callee	fprintf		5459825	0					
ANR	5460237	Identifier	fprintf		5459825	0					
ANR	5460238	ArgumentList	stderr		5459825	1					
ANR	5460239	Argument	stderr		5459825	0					
ANR	5460240	Identifier	stderr		5459825	0					
ANR	5460241	Argument	"""Minimum length is 0x50 bytes.\\n"""		5459825	1					
ANR	5460242	PrimaryExpression	"""Minimum length is 0x50 bytes.\\n"""		5459825	0					
ANR	5460243	ReturnStatement	return 1 ;	349:2:7545:7553	5459825	1	True				
ANR	5460244	PrimaryExpression	1		5459825	0					
ANR	5460245	IfStatement	if ( ! ma )		5459825	15					
ANR	5460246	Condition	! ma	356:5:7698:7700	5459825	0	True				
ANR	5460247	UnaryOperationExpression	! ma		5459825	0					
ANR	5460248	UnaryOperator	!		5459825	0					
ANR	5460249	Identifier	ma		5459825	1					
ANR	5460250	CompoundStatement		101:10:1860:1860	5459825	1					
ANR	5460251	ExpressionStatement	"perror ( ""Error mmaping"" )"	357:2:7707:7730	5459825	0	True				
ANR	5460252	CallExpression	"perror ( ""Error mmaping"" )"		5459825	0					
ANR	5460253	Callee	perror		5459825	0					
ANR	5460254	Identifier	perror		5459825	0					
ANR	5460255	ArgumentList	"""Error mmaping"""		5459825	1					
ANR	5460256	Argument	"""Error mmaping"""		5459825	0					
ANR	5460257	PrimaryExpression	"""Error mmaping"""		5459825	0					
ANR	5460258	ExpressionStatement	"fprintf ( stderr , ""cannot open %s\\n"" , argv [ optind ] )"	358:2:7734:7783	5459825	1	True				
ANR	5460259	CallExpression	"fprintf ( stderr , ""cannot open %s\\n"" , argv [ optind ] )"		5459825	0					
ANR	5460260	Callee	fprintf		5459825	0					
ANR	5460261	Identifier	fprintf		5459825	0					
ANR	5460262	ArgumentList	stderr		5459825	1					
ANR	5460263	Argument	stderr		5459825	0					
ANR	5460264	Identifier	stderr		5459825	0					
ANR	5460265	Argument	"""cannot open %s\\n"""		5459825	1					
ANR	5460266	PrimaryExpression	"""cannot open %s\\n"""		5459825	0					
ANR	5460267	Argument	argv [ optind ]		5459825	2					
ANR	5460268	ArrayIndexing	argv [ optind ]		5459825	0					
ANR	5460269	Identifier	argv		5459825	0					
ANR	5460270	Identifier	optind		5459825	1					
ANR	5460271	ReturnStatement	return 1 ;	359:2:7787:7795	5459825	2	True				
ANR	5460272	PrimaryExpression	1		5459825	0					
ANR	5460273	ExpressionStatement	sysendian = get_system_endian ( )	363:1:7831:7862	5459825	16	True				
ANR	5460274	AssignmentExpression	sysendian = get_system_endian ( )		5459825	0		=			
ANR	5460275	Identifier	sysendian		5459825	0					
ANR	5460276	CallExpression	get_system_endian ( )		5459825	1					
ANR	5460277	Callee	get_system_endian		5459825	0					
ANR	5460278	Identifier	get_system_endian		5459825	0					
ANR	5460279	ArgumentList			5459825	1					
ANR	5460280	WhileStatement	while ( set_arch_settings ( ) )		5459825	17					
ANR	5460281	Condition	set_arch_settings ( )	365:8:7873:7891	5459825	0	True				
ANR	5460282	CallExpression	set_arch_settings ( )		5459825	0					
ANR	5460283	Callee	set_arch_settings		5459825	0					
ANR	5460284	Identifier	set_arch_settings		5459825	0					
ANR	5460285	ArgumentList			5459825	1					
ANR	5460286	ExpressionStatement		365:29:7894:7894	5459825	1	True				
ANR	5460287	IfStatement	if ( endian == - 1 )		5459825	18					
ANR	5460288	Condition	endian == - 1	367:5:7902:7913	5459825	0	True				
ANR	5460289	EqualityExpression	endian == - 1		5459825	0		==			
ANR	5460290	Identifier	endian		5459825	0					
ANR	5460291	UnaryOperationExpression	- 1		5459825	1					
ANR	5460292	UnaryOperator	-		5459825	0					
ANR	5460293	PrimaryExpression	1		5459825	1					
ANR	5460294	ExpressionStatement	endian = 0	368:2:7918:7928	5459825	1	True				
ANR	5460295	AssignmentExpression	endian = 0		5459825	0		=			
ANR	5460296	Identifier	endian		5459825	0					
ANR	5460297	PrimaryExpression	0		5459825	1					
ANR	5460298	ForStatement	for ( i = from ; i < sa && i < to ; i ++ )		5459825	19					
ANR	5460299	ForInit	i = from ;	371:5:7969:7975	5459825	0	True				
ANR	5460300	AssignmentExpression	i = from		5459825	0		=			
ANR	5460301	Identifier	i		5459825	0					
ANR	5460302	Identifier	from		5459825	1					
ANR	5460303	Condition	i < sa && i < to	371:13:7977:7988	5459825	1	True				
ANR	5460304	AndExpression	i < sa && i < to		5459825	0		&&			
ANR	5460305	RelationalExpression	i < sa		5459825	0		<			
ANR	5460306	Identifier	i		5459825	0					
ANR	5460307	Identifier	sa		5459825	1					
ANR	5460308	RelationalExpression	i < to		5459825	1		<			
ANR	5460309	Identifier	i		5459825	0					
ANR	5460310	Identifier	to		5459825	1					
ANR	5460311	PostIncDecOperationExpression	i ++	371:27:7991:7993	5459825	2	True				
ANR	5460312	Identifier	i		5459825	0					
ANR	5460313	IncDec	++		5459825	1					
ANR	5460314	CompoundStatement		120:2:2236:2280	5459825	3					
ANR	5460315	IdentifierDeclStatement	ut32 value = offset - i + delta ;	372:2:8000:8031	5459825	0	True				
ANR	5460316	IdentifierDecl	value = offset - i + delta		5459825	0					
ANR	5460317	IdentifierDeclType	ut32		5459825	0					
ANR	5460318	Identifier	value		5459825	1					
ANR	5460319	AssignmentExpression	value = offset - i + delta		5459825	2		=			
ANR	5460320	Identifier	value		5459825	0					
ANR	5460321	AdditiveExpression	offset - i + delta		5459825	1		-			
ANR	5460322	Identifier	offset		5459825	0					
ANR	5460323	AdditiveExpression	i + delta		5459825	1		+			
ANR	5460324	Identifier	i		5459825	0					
ANR	5460325	Identifier	delta		5459825	1					
ANR	5460326	IdentifierDeclStatement	ut32 ovalue = value ;	373:2:8035:8054	5459825	1	True				
ANR	5460327	IdentifierDecl	ovalue = value		5459825	0					
ANR	5460328	IdentifierDeclType	ut32		5459825	0					
ANR	5460329	Identifier	ovalue		5459825	1					
ANR	5460330	AssignmentExpression	ovalue = value		5459825	2		=			
ANR	5460331	Identifier	value		5459825	0					
ANR	5460332	Identifier	value		5459825	1					
ANR	5460333	IdentifierDeclStatement	ut32 tmpvalue = 0 ;	374:2:8058:8075	5459825	2	True				
ANR	5460334	IdentifierDecl	tmpvalue = 0		5459825	0					
ANR	5460335	IdentifierDeclType	ut32		5459825	0					
ANR	5460336	Identifier	tmpvalue		5459825	1					
ANR	5460337	AssignmentExpression	tmpvalue = 0		5459825	2		=			
ANR	5460338	Identifier	tmpvalue		5459825	0					
ANR	5460339	PrimaryExpression	0		5459825	1					
ANR	5460340	IdentifierDeclStatement	unsigned char * buf = ( unsigned char * ) & value ;	375:2:8079:8123	5459825	3	True				
ANR	5460341	IdentifierDecl	* buf = ( unsigned char * ) & value		5459825	0					
ANR	5460342	IdentifierDeclType	unsigned char *		5459825	0					
ANR	5460343	Identifier	buf		5459825	1					
ANR	5460344	AssignmentExpression	* buf = ( unsigned char * ) & value		5459825	2		=			
ANR	5460345	Identifier	buf		5459825	0					
ANR	5460346	CastExpression	( unsigned char * ) & value		5459825	1					
ANR	5460347	CastTarget	unsigned char *		5459825	0					
ANR	5460348	UnaryOperationExpression	& value		5459825	1					
ANR	5460349	UnaryOperator	&		5459825	0					
ANR	5460350	Identifier	value		5459825	1					
ANR	5460351	IfStatement	if ( range != 0 )		5459825	4					
ANR	5460352	Condition	range != 0	377:6:8132:8139	5459825	0	True				
ANR	5460353	EqualityExpression	range != 0		5459825	0		!=			
ANR	5460354	Identifier	range		5459825	0					
ANR	5460355	PrimaryExpression	0		5459825	1					
ANR	5460356	CompoundStatement		122:16:2299:2299	5459825	1					
ANR	5460357	IfStatement	if ( value < 0 && - value > range )		5459825	0					
ANR	5460358	Condition	value < 0 && - value > range	378:7:8151:8173	5459825	0	True				
ANR	5460359	AndExpression	value < 0 && - value > range		5459825	0		&&			
ANR	5460360	RelationalExpression	value < 0		5459825	0		<			
ANR	5460361	Identifier	value		5459825	0					
ANR	5460362	PrimaryExpression	0		5459825	1					
ANR	5460363	RelationalExpression	- value > range		5459825	1		>			
ANR	5460364	UnaryOperationExpression	- value		5459825	0					
ANR	5460365	UnaryOperator	-		5459825	0					
ANR	5460366	Identifier	value		5459825	1					
ANR	5460367	Identifier	range		5459825	1					
ANR	5460368	ContinueStatement	continue ;	379:5:8181:8189	5459825	1	True				
ANR	5460369	ElseStatement	else		5459825	0					
ANR	5460370	IfStatement	if ( value > 0 && value > range )		5459825	0					
ANR	5460371	Condition	value > 0 && value > range	381:7:8206:8227	5459825	0	True				
ANR	5460372	AndExpression	value > 0 && value > range		5459825	0		&&			
ANR	5460373	RelationalExpression	value > 0		5459825	0		>			
ANR	5460374	Identifier	value		5459825	0					
ANR	5460375	PrimaryExpression	0		5459825	1					
ANR	5460376	RelationalExpression	value > range		5459825	1		>			
ANR	5460377	Identifier	value		5459825	0					
ANR	5460378	Identifier	range		5459825	1					
ANR	5460379	ContinueStatement	continue ;	382:5:8235:8243	5459825	1	True				
ANR	5460380	IfStatement	if ( verbose )		5459825	5					
ANR	5460381	Condition	verbose	385:6:8256:8262	5459825	0	True				
ANR	5460382	Identifier	verbose		5459825	0					
ANR	5460383	Statement	printf	386:3:8268:8273	5459825	1	True				
ANR	5460384	Statement	(	386:9:8274:8274	5459825	6	True				
ANR	5460385	Statement	"""0x%08"""	386:10:8275:8281	5459825	7	True				
ANR	5460386	Statement	PFMT64x	386:17:8282:8288	5459825	8	True				
ANR	5460387	Statement	"""  try %02x %02x %02x %02x (0x%08"""	386:24:8289:8322	5459825	9	True				
ANR	5460388	Statement	PFMT64x	386:58:8323:8329	5459825	10	True				
ANR	5460389	Statement	""") - %"""	386:65:8330:8336	5459825	11	True				
ANR	5460390	Statement	PFMT64d	386:72:8337:8343	5459825	12	True				
ANR	5460391	Statement	"""\\n"""	386:79:8344:8347	5459825	13	True				
ANR	5460392	Statement	","	386:83:8348:8348	5459825	14	True				
ANR	5460393	Statement	(	387:4:8354:8354	5459825	15	True				
ANR	5460394	Statement	ut64	387:5:8355:8358	5459825	16	True				
ANR	5460395	Statement	)	387:9:8359:8359	5459825	17	True				
ANR	5460396	Statement	i	387:10:8360:8360	5459825	18	True				
ANR	5460397	Statement	","	387:11:8361:8361	5459825	19	True				
ANR	5460398	Statement	buf	387:13:8363:8365	5459825	20	True				
ANR	5460399	Statement	[	387:16:8366:8366	5459825	21	True				
ANR	5460400	Statement	0	387:17:8367:8367	5459825	22	True				
ANR	5460401	Statement	]	387:18:8368:8368	5459825	23	True				
ANR	5460402	Statement	","	387:19:8369:8369	5459825	24	True				
ANR	5460403	Statement	buf	387:21:8371:8373	5459825	25	True				
ANR	5460404	Statement	[	387:24:8374:8374	5459825	26	True				
ANR	5460405	Statement	1	387:25:8375:8375	5459825	27	True				
ANR	5460406	Statement	]	387:26:8376:8376	5459825	28	True				
ANR	5460407	Statement	","	387:27:8377:8377	5459825	29	True				
ANR	5460408	Statement	buf	387:29:8379:8381	5459825	30	True				
ANR	5460409	Statement	[	387:32:8382:8382	5459825	31	True				
ANR	5460410	Statement	2	387:33:8383:8383	5459825	32	True				
ANR	5460411	Statement	]	387:34:8384:8384	5459825	33	True				
ANR	5460412	Statement	","	387:35:8385:8385	5459825	34	True				
ANR	5460413	Statement	buf	387:37:8387:8389	5459825	35	True				
ANR	5460414	Statement	[	387:40:8390:8390	5459825	36	True				
ANR	5460415	Statement	3	387:41:8391:8391	5459825	37	True				
ANR	5460416	Statement	]	387:42:8392:8392	5459825	38	True				
ANR	5460417	Statement	","	387:43:8393:8393	5459825	39	True				
ANR	5460418	Statement	(	387:45:8395:8395	5459825	40	True				
ANR	5460419	Statement	ut64	387:46:8396:8399	5459825	41	True				
ANR	5460420	Statement	)	387:50:8400:8400	5459825	42	True				
ANR	5460421	Statement	base	387:52:8402:8405	5459825	43	True				
ANR	5460422	Statement	+	387:56:8406:8406	5459825	44	True				
ANR	5460423	Statement	value	387:57:8407:8411	5459825	45	True				
ANR	5460424	Statement	","	387:62:8412:8412	5459825	46	True				
ANR	5460425	Statement	(	387:64:8414:8414	5459825	47	True				
ANR	5460426	Statement	ut64	387:65:8415:8418	5459825	48	True				
ANR	5460427	Statement	)	387:69:8419:8419	5459825	49	True				
ANR	5460428	Statement	(	387:71:8421:8421	5459825	50	True				
ANR	5460429	Statement	base	387:72:8422:8425	5459825	51	True				
ANR	5460430	Statement	+	387:76:8426:8426	5459825	52	True				
ANR	5460431	Statement	value	387:77:8427:8431	5459825	53	True				
ANR	5460432	Statement	)	387:82:8432:8432	5459825	54	True				
ANR	5460433	Statement	)	387:83:8433:8433	5459825	55	True				
ANR	5460434	ExpressionStatement		387:84:8434:8434	5459825	56	True				
ANR	5460435	IfStatement	if ( xylum && i == xylum )		5459825	57					
ANR	5460436	Condition	xylum && i == xylum	389:6:8443:8461	5459825	0	True				
ANR	5460437	AndExpression	xylum && i == xylum		5459825	0		&&			
ANR	5460438	Identifier	xylum		5459825	0					
ANR	5460439	EqualityExpression	i == xylum		5459825	1		==			
ANR	5460440	Identifier	i		5459825	0					
ANR	5460441	Identifier	xylum		5459825	1					
ANR	5460442	CompoundStatement		134:27:2621:2621	5459825	1					
ANR	5460443	Statement	printf	390:3:8469:8474	5459825	0	True				
ANR	5460444	Statement	(	390:9:8475:8475	5459825	1	True				
ANR	5460445	Statement	"""# offset: 0x%08"""	390:10:8476:8492	5459825	2	True				
ANR	5460446	Statement	PFMT64x	390:27:8493:8499	5459825	3	True				
ANR	5460447	Statement	"""\\n"""	390:34:8500:8503	5459825	4	True				
ANR	5460448	Statement	","	390:38:8504:8504	5459825	5	True				
ANR	5460449	Statement	(	390:40:8506:8506	5459825	6	True				
ANR	5460450	Statement	ut64	390:41:8507:8510	5459825	7	True				
ANR	5460451	Statement	)	390:45:8511:8511	5459825	8	True				
ANR	5460452	Statement	i	390:46:8512:8512	5459825	9	True				
ANR	5460453	Statement	)	390:47:8513:8513	5459825	10	True				
ANR	5460454	ExpressionStatement		390:48:8514:8514	5459825	11	True				
ANR	5460455	Statement	printf	391:3:8519:8524	5459825	12	True				
ANR	5460456	Statement	(	391:9:8525:8525	5459825	13	True				
ANR	5460457	Statement	"""# delta:  %"""	391:10:8526:8538	5459825	14	True				
ANR	5460458	Statement	PFMT64d	391:23:8539:8545	5459825	15	True				
ANR	5460459	Statement	"""\\n"""	391:30:8546:8549	5459825	16	True				
ANR	5460460	Statement	","	391:34:8550:8550	5459825	17	True				
ANR	5460461	Statement	(	391:36:8552:8552	5459825	18	True				
ANR	5460462	Statement	ut64	391:37:8553:8556	5459825	19	True				
ANR	5460463	Statement	)	391:41:8557:8557	5459825	20	True				
ANR	5460464	Statement	delta	391:42:8558:8562	5459825	21	True				
ANR	5460465	Statement	)	391:47:8563:8563	5459825	22	True				
ANR	5460466	ExpressionStatement		391:48:8564:8564	5459825	23	True				
ANR	5460467	Statement	printf	392:3:8569:8574	5459825	24	True				
ANR	5460468	Statement	(	392:9:8575:8575	5459825	25	True				
ANR	5460469	Statement	"""# size:   %"""	392:10:8576:8588	5459825	26	True				
ANR	5460470	Statement	PFMT64d	392:23:8589:8595	5459825	27	True				
ANR	5460471	Statement	"""\\n"""	392:30:8596:8599	5459825	28	True				
ANR	5460472	Statement	","	392:34:8600:8600	5459825	29	True				
ANR	5460473	Statement	(	392:36:8602:8602	5459825	30	True				
ANR	5460474	Statement	ut64	392:37:8603:8606	5459825	31	True				
ANR	5460475	Statement	)	392:41:8607:8607	5459825	32	True				
ANR	5460476	Statement	size	392:42:8608:8611	5459825	33	True				
ANR	5460477	Statement	)	392:46:8612:8612	5459825	34	True				
ANR	5460478	ExpressionStatement		392:47:8613:8613	5459825	35	True				
ANR	5460479	Statement	printf	393:3:8618:8623	5459825	36	True				
ANR	5460480	Statement	(	393:9:8624:8624	5459825	37	True				
ANR	5460481	Statement	"""# value:  %"""	393:10:8625:8637	5459825	38	True				
ANR	5460482	Statement	PFMT64d	393:23:8638:8644	5459825	39	True				
ANR	5460483	Statement	"""\\n"""	393:30:8645:8648	5459825	40	True				
ANR	5460484	Statement	","	393:34:8649:8649	5459825	41	True				
ANR	5460485	Statement	(	393:36:8651:8651	5459825	42	True				
ANR	5460486	Statement	ut64	393:37:8652:8655	5459825	43	True				
ANR	5460487	Statement	)	393:41:8656:8656	5459825	44	True				
ANR	5460488	Statement	value	393:42:8657:8661	5459825	45	True				
ANR	5460489	Statement	)	393:47:8662:8662	5459825	46	True				
ANR	5460490	ExpressionStatement		393:48:8663:8663	5459825	47	True				
ANR	5460491	Statement	printf	394:3:8668:8673	5459825	48	True				
ANR	5460492	Statement	(	394:9:8674:8674	5459825	49	True				
ANR	5460493	Statement	"""# bytes:  %02x %02x %02x %02x (0x%08"""	394:10:8675:8712	5459825	50	True				
ANR	5460494	Statement	PFMT64x	394:48:8713:8719	5459825	51	True				
ANR	5460495	Statement	""") - %"""	394:55:8720:8726	5459825	52	True				
ANR	5460496	Statement	PFMT64d	394:62:8727:8733	5459825	53	True				
ANR	5460497	Statement	"""\\n"""	394:69:8734:8737	5459825	54	True				
ANR	5460498	Statement	","	394:73:8738:8738	5459825	55	True				
ANR	5460499	Statement	buf	395:4:8744:8746	5459825	56	True				
ANR	5460500	Statement	[	395:7:8747:8747	5459825	57	True				
ANR	5460501	Statement	0	395:8:8748:8748	5459825	58	True				
ANR	5460502	Statement	]	395:9:8749:8749	5459825	59	True				
ANR	5460503	Statement	","	395:10:8750:8750	5459825	60	True				
ANR	5460504	Statement	buf	395:12:8752:8754	5459825	61	True				
ANR	5460505	Statement	[	395:15:8755:8755	5459825	62	True				
ANR	5460506	Statement	1	395:16:8756:8756	5459825	63	True				
ANR	5460507	Statement	]	395:17:8757:8757	5459825	64	True				
ANR	5460508	Statement	","	395:18:8758:8758	5459825	65	True				
ANR	5460509	Statement	buf	395:20:8760:8762	5459825	66	True				
ANR	5460510	Statement	[	395:23:8763:8763	5459825	67	True				
ANR	5460511	Statement	2	395:24:8764:8764	5459825	68	True				
ANR	5460512	Statement	]	395:25:8765:8765	5459825	69	True				
ANR	5460513	Statement	","	395:26:8766:8766	5459825	70	True				
ANR	5460514	Statement	buf	395:28:8768:8770	5459825	71	True				
ANR	5460515	Statement	[	395:31:8771:8771	5459825	72	True				
ANR	5460516	Statement	3	395:32:8772:8772	5459825	73	True				
ANR	5460517	Statement	]	395:33:8773:8773	5459825	74	True				
ANR	5460518	Statement	","	395:34:8774:8774	5459825	75	True				
ANR	5460519	Statement	(	395:36:8776:8776	5459825	76	True				
ANR	5460520	Statement	ut64	395:37:8777:8780	5459825	77	True				
ANR	5460521	Statement	)	395:41:8781:8781	5459825	78	True				
ANR	5460522	Statement	value	395:42:8782:8786	5459825	79	True				
ANR	5460523	Statement	","	395:47:8787:8787	5459825	80	True				
ANR	5460524	Statement	(	395:49:8789:8789	5459825	81	True				
ANR	5460525	Statement	ut64	395:50:8790:8793	5459825	82	True				
ANR	5460526	Statement	)	395:54:8794:8794	5459825	83	True				
ANR	5460527	Statement	value	395:55:8795:8799	5459825	84	True				
ANR	5460528	Statement	)	395:60:8800:8800	5459825	85	True				
ANR	5460529	ExpressionStatement		395:61:8801:8801	5459825	86	True				
ANR	5460530	ExpressionStatement	tmpvalue = ma [ i + gamme ]	396:3:8806:8828	5459825	87	True				
ANR	5460531	AssignmentExpression	tmpvalue = ma [ i + gamme ]		5459825	0		=			
ANR	5460532	Identifier	tmpvalue		5459825	0					
ANR	5460533	ArrayIndexing	ma [ i + gamme ]		5459825	1					
ANR	5460534	Identifier	ma		5459825	0					
ANR	5460535	AdditiveExpression	i + gamme		5459825	1		+			
ANR	5460536	Identifier	i		5459825	0					
ANR	5460537	Identifier	gamme		5459825	1					
ANR	5460538	ExpressionStatement	"printf ( ""# found:  %02x %02x %02x %02x\\n"" , ma [ i + gamme + 0 ] , ma [ i + gamme + 1 ] , ma [ i + gamme + 2 ] , ma [ i + gamme + 3 ] )"	397:3:8833:8942	5459825	88	True				
ANR	5460539	CallExpression	"printf ( ""# found:  %02x %02x %02x %02x\\n"" , ma [ i + gamme + 0 ] , ma [ i + gamme + 1 ] , ma [ i + gamme + 2 ] , ma [ i + gamme + 3 ] )"		5459825	0					
ANR	5460540	Callee	printf		5459825	0					
ANR	5460541	Identifier	printf		5459825	0					
ANR	5460542	ArgumentList	"""# found:  %02x %02x %02x %02x\\n"""		5459825	1					
ANR	5460543	Argument	"""# found:  %02x %02x %02x %02x\\n"""		5459825	0					
ANR	5460544	PrimaryExpression	"""# found:  %02x %02x %02x %02x\\n"""		5459825	0					
ANR	5460545	Argument	ma [ i + gamme + 0 ]		5459825	1					
ANR	5460546	ArrayIndexing	ma [ i + gamme + 0 ]		5459825	0					
ANR	5460547	Identifier	ma		5459825	0					
ANR	5460548	AdditiveExpression	i + gamme + 0		5459825	1		+			
ANR	5460549	Identifier	i		5459825	0					
ANR	5460550	AdditiveExpression	gamme + 0		5459825	1		+			
ANR	5460551	Identifier	gamme		5459825	0					
ANR	5460552	PrimaryExpression	0		5459825	1					
ANR	5460553	Argument	ma [ i + gamme + 1 ]		5459825	2					
ANR	5460554	ArrayIndexing	ma [ i + gamme + 1 ]		5459825	0					
ANR	5460555	Identifier	ma		5459825	0					
ANR	5460556	AdditiveExpression	i + gamme + 1		5459825	1		+			
ANR	5460557	Identifier	i		5459825	0					
ANR	5460558	AdditiveExpression	gamme + 1		5459825	1		+			
ANR	5460559	Identifier	gamme		5459825	0					
ANR	5460560	PrimaryExpression	1		5459825	1					
ANR	5460561	Argument	ma [ i + gamme + 2 ]		5459825	3					
ANR	5460562	ArrayIndexing	ma [ i + gamme + 2 ]		5459825	0					
ANR	5460563	Identifier	ma		5459825	0					
ANR	5460564	AdditiveExpression	i + gamme + 2		5459825	1		+			
ANR	5460565	Identifier	i		5459825	0					
ANR	5460566	AdditiveExpression	gamme + 2		5459825	1		+			
ANR	5460567	Identifier	gamme		5459825	0					
ANR	5460568	PrimaryExpression	2		5459825	1					
ANR	5460569	Argument	ma [ i + gamme + 3 ]		5459825	4					
ANR	5460570	ArrayIndexing	ma [ i + gamme + 3 ]		5459825	0					
ANR	5460571	Identifier	ma		5459825	0					
ANR	5460572	AdditiveExpression	i + gamme + 3		5459825	1		+			
ANR	5460573	Identifier	i		5459825	0					
ANR	5460574	AdditiveExpression	gamme + 3		5459825	1		+			
ANR	5460575	Identifier	gamme		5459825	0					
ANR	5460576	PrimaryExpression	3		5459825	1					
ANR	5460577	SwitchStatement	switch ( arch )		5459825	58					
ANR	5460578	Condition	arch	402:9:8958:8961	5459825	0	True				
ANR	5460579	Identifier	arch		5459825	0					
ANR	5460580	CompoundStatement		147:15:3121:3121	5459825	1					
ANR	5460581	Label	case ARCH_ARM :	403:2:8968:8981	5459825	0	True				
ANR	5460582	Identifier	ARCH_ARM		5459825	0					
ANR	5460583	ExpressionStatement	value = ( value - 8 ) / 4	404:3:8986:9005	5459825	1	True				
ANR	5460584	AssignmentExpression	value = ( value - 8 ) / 4		5459825	0		=			
ANR	5460585	Identifier	value		5459825	0					
ANR	5460586	MultiplicativeExpression	( value - 8 ) / 4		5459825	1		/			
ANR	5460587	AdditiveExpression	value - 8		5459825	0		-			
ANR	5460588	Identifier	value		5459825	0					
ANR	5460589	PrimaryExpression	8		5459825	1					
ANR	5460590	PrimaryExpression	4		5459825	1					
ANR	5460591	BreakStatement	break ;	405:3:9010:9015	5459825	2	True				
ANR	5460592	Label	case ARCH_X86 :	406:2:9019:9032	5459825	3	True				
ANR	5460593	Identifier	ARCH_X86		5459825	0					
ANR	5460594	ExpressionStatement	value -= 5	407:3:9037:9045	5459825	4	True				
ANR	5460595	AssignmentExpression	value -= 5		5459825	0		-=			
ANR	5460596	Identifier	value		5459825	0					
ANR	5460597	PrimaryExpression	5		5459825	1					
ANR	5460598	BreakStatement	break ;	408:3:9050:9055	5459825	5	True				
ANR	5460599	Label	default :	409:2:9059:9066	5459825	6	True				
ANR	5460600	Identifier	default		5459825	0					
ANR	5460601	BreakStatement	break ;	410:3:9071:9076	5459825	7	True				
ANR	5460602	IfStatement	if ( sysendian )		5459825	59					
ANR	5460603	Condition	sysendian	414:6:9117:9125	5459825	0	True				
ANR	5460604	Identifier	sysendian		5459825	0					
ANR	5460605	CompoundStatement		160:3:3290:3307	5459825	1					
ANR	5460606	IdentifierDeclStatement	unsigned char tmp ;	415:3:9133:9150	5459825	0	True				
ANR	5460607	IdentifierDecl	tmp		5459825	0					
ANR	5460608	IdentifierDeclType	unsigned char		5459825	0					
ANR	5460609	Identifier	tmp		5459825	1					
ANR	5460610	ExpressionStatement	tmp = buf [ 0 ]	416:3:9155:9167	5459825	1	True				
ANR	5460611	AssignmentExpression	tmp = buf [ 0 ]		5459825	0		=			
ANR	5460612	Identifier	tmp		5459825	0					
ANR	5460613	ArrayIndexing	buf [ 0 ]		5459825	1					
ANR	5460614	Identifier	buf		5459825	0					
ANR	5460615	PrimaryExpression	0		5459825	1					
ANR	5460616	ExpressionStatement	buf [ 0 ] = buf [ 3 ]	416:17:9169:9183	5459825	2	True				
ANR	5460617	AssignmentExpression	buf [ 0 ] = buf [ 3 ]		5459825	0		=			
ANR	5460618	ArrayIndexing	buf [ 0 ]		5459825	0					
ANR	5460619	Identifier	buf		5459825	0					
ANR	5460620	PrimaryExpression	0		5459825	1					
ANR	5460621	ArrayIndexing	buf [ 3 ]		5459825	1					
ANR	5460622	Identifier	buf		5459825	0					
ANR	5460623	PrimaryExpression	3		5459825	1					
ANR	5460624	ExpressionStatement	buf [ 3 ] = tmp	416:33:9185:9197	5459825	3	True				
ANR	5460625	AssignmentExpression	buf [ 3 ] = tmp		5459825	0		=			
ANR	5460626	ArrayIndexing	buf [ 3 ]		5459825	0					
ANR	5460627	Identifier	buf		5459825	0					
ANR	5460628	PrimaryExpression	3		5459825	1					
ANR	5460629	Identifier	tmp		5459825	1					
ANR	5460630	ExpressionStatement	tmp = buf [ 1 ]	417:3:9202:9214	5459825	4	True				
ANR	5460631	AssignmentExpression	tmp = buf [ 1 ]		5459825	0		=			
ANR	5460632	Identifier	tmp		5459825	0					
ANR	5460633	ArrayIndexing	buf [ 1 ]		5459825	1					
ANR	5460634	Identifier	buf		5459825	0					
ANR	5460635	PrimaryExpression	1		5459825	1					
ANR	5460636	ExpressionStatement	buf [ 1 ] = buf [ 2 ]	417:17:9216:9230	5459825	5	True				
ANR	5460637	AssignmentExpression	buf [ 1 ] = buf [ 2 ]		5459825	0		=			
ANR	5460638	ArrayIndexing	buf [ 1 ]		5459825	0					
ANR	5460639	Identifier	buf		5459825	0					
ANR	5460640	PrimaryExpression	1		5459825	1					
ANR	5460641	ArrayIndexing	buf [ 2 ]		5459825	1					
ANR	5460642	Identifier	buf		5459825	0					
ANR	5460643	PrimaryExpression	2		5459825	1					
ANR	5460644	ExpressionStatement	buf [ 2 ] = tmp	417:33:9232:9244	5459825	6	True				
ANR	5460645	AssignmentExpression	buf [ 2 ] = tmp		5459825	0		=			
ANR	5460646	ArrayIndexing	buf [ 2 ]		5459825	0					
ANR	5460647	Identifier	buf		5459825	0					
ANR	5460648	PrimaryExpression	2		5459825	1					
ANR	5460649	Identifier	tmp		5459825	1					
ANR	5460650	IfStatement	if ( endian )		5459825	60					
ANR	5460651	Condition	endian	420:6:9291:9296	5459825	0	True				
ANR	5460652	Identifier	endian		5459825	0					
ANR	5460653	CompoundStatement		166:3:3461:3478	5459825	1					
ANR	5460654	IdentifierDeclStatement	unsigned char tmp ;	421:3:9304:9321	5459825	0	True				
ANR	5460655	IdentifierDecl	tmp		5459825	0					
ANR	5460656	IdentifierDeclType	unsigned char		5459825	0					
ANR	5460657	Identifier	tmp		5459825	1					
ANR	5460658	ExpressionStatement	tmp = buf [ 0 ]	422:3:9326:9338	5459825	1	True				
ANR	5460659	AssignmentExpression	tmp = buf [ 0 ]		5459825	0		=			
ANR	5460660	Identifier	tmp		5459825	0					
ANR	5460661	ArrayIndexing	buf [ 0 ]		5459825	1					
ANR	5460662	Identifier	buf		5459825	0					
ANR	5460663	PrimaryExpression	0		5459825	1					
ANR	5460664	ExpressionStatement	buf [ 0 ] = buf [ 3 ]	422:17:9340:9355	5459825	2	True				
ANR	5460665	AssignmentExpression	buf [ 0 ] = buf [ 3 ]		5459825	0		=			
ANR	5460666	ArrayIndexing	buf [ 0 ]		5459825	0					
ANR	5460667	Identifier	buf		5459825	0					
ANR	5460668	PrimaryExpression	0		5459825	1					
ANR	5460669	ArrayIndexing	buf [ 3 ]		5459825	1					
ANR	5460670	Identifier	buf		5459825	0					
ANR	5460671	PrimaryExpression	3		5459825	1					
ANR	5460672	ExpressionStatement	buf [ 3 ] = tmp	422:34:9357:9369	5459825	3	True				
ANR	5460673	AssignmentExpression	buf [ 3 ] = tmp		5459825	0		=			
ANR	5460674	ArrayIndexing	buf [ 3 ]		5459825	0					
ANR	5460675	Identifier	buf		5459825	0					
ANR	5460676	PrimaryExpression	3		5459825	1					
ANR	5460677	Identifier	tmp		5459825	1					
ANR	5460678	ExpressionStatement	tmp = buf [ 1 ]	423:3:9374:9386	5459825	4	True				
ANR	5460679	AssignmentExpression	tmp = buf [ 1 ]		5459825	0		=			
ANR	5460680	Identifier	tmp		5459825	0					
ANR	5460681	ArrayIndexing	buf [ 1 ]		5459825	1					
ANR	5460682	Identifier	buf		5459825	0					
ANR	5460683	PrimaryExpression	1		5459825	1					
ANR	5460684	ExpressionStatement	buf [ 1 ] = buf [ 2 ]	423:17:9388:9403	5459825	5	True				
ANR	5460685	AssignmentExpression	buf [ 1 ] = buf [ 2 ]		5459825	0		=			
ANR	5460686	ArrayIndexing	buf [ 1 ]		5459825	0					
ANR	5460687	Identifier	buf		5459825	0					
ANR	5460688	PrimaryExpression	1		5459825	1					
ANR	5460689	ArrayIndexing	buf [ 2 ]		5459825	1					
ANR	5460690	Identifier	buf		5459825	0					
ANR	5460691	PrimaryExpression	2		5459825	1					
ANR	5460692	ExpressionStatement	buf [ 2 ] = tmp	423:34:9405:9417	5459825	6	True				
ANR	5460693	AssignmentExpression	buf [ 2 ] = tmp		5459825	0		=			
ANR	5460694	ArrayIndexing	buf [ 2 ]		5459825	0					
ANR	5460695	Identifier	buf		5459825	0					
ANR	5460696	PrimaryExpression	2		5459825	1					
ANR	5460697	Identifier	tmp		5459825	1					
ANR	5460698	IfStatement	if ( arch == ARCH_ARM )		5459825	61					
ANR	5460699	Condition	arch == ARCH_ARM	425:6:9429:9442	5459825	0	True				
ANR	5460700	EqualityExpression	arch == ARCH_ARM		5459825	0		==			
ANR	5460701	Identifier	arch		5459825	0					
ANR	5460702	Identifier	ARCH_ARM		5459825	1					
ANR	5460703	CompoundStatement		170:22:3602:3602	5459825	1					
ANR	5460704	ExpressionStatement	buf [ 3 ] = buf [ 2 ]	426:3:9450:9465	5459825	0	True				
ANR	5460705	AssignmentExpression	buf [ 3 ] = buf [ 2 ]		5459825	0		=			
ANR	5460706	ArrayIndexing	buf [ 3 ]		5459825	0					
ANR	5460707	Identifier	buf		5459825	0					
ANR	5460708	PrimaryExpression	3		5459825	1					
ANR	5460709	ArrayIndexing	buf [ 2 ]		5459825	1					
ANR	5460710	Identifier	buf		5459825	0					
ANR	5460711	PrimaryExpression	2		5459825	1					
ANR	5460712	ExpressionStatement	buf [ 2 ] = buf [ 1 ]	426:20:9467:9482	5459825	1	True				
ANR	5460713	AssignmentExpression	buf [ 2 ] = buf [ 1 ]		5459825	0		=			
ANR	5460714	ArrayIndexing	buf [ 2 ]		5459825	0					
ANR	5460715	Identifier	buf		5459825	0					
ANR	5460716	PrimaryExpression	2		5459825	1					
ANR	5460717	ArrayIndexing	buf [ 1 ]		5459825	1					
ANR	5460718	Identifier	buf		5459825	0					
ANR	5460719	PrimaryExpression	1		5459825	1					
ANR	5460720	ExpressionStatement	buf [ 1 ] = buf [ 0 ]	426:37:9484:9499	5459825	2	True				
ANR	5460721	AssignmentExpression	buf [ 1 ] = buf [ 0 ]		5459825	0		=			
ANR	5460722	ArrayIndexing	buf [ 1 ]		5459825	0					
ANR	5460723	Identifier	buf		5459825	0					
ANR	5460724	PrimaryExpression	1		5459825	1					
ANR	5460725	ArrayIndexing	buf [ 0 ]		5459825	1					
ANR	5460726	Identifier	buf		5459825	0					
ANR	5460727	PrimaryExpression	0		5459825	1					
ANR	5460728	IfStatement	if ( xylum && ovalue == xylum )		5459825	62					
ANR	5460729	Condition	xylum && ovalue == xylum	429:6:9512:9535	5459825	0	True				
ANR	5460730	AndExpression	xylum && ovalue == xylum		5459825	0		&&			
ANR	5460731	Identifier	xylum		5459825	0					
ANR	5460732	EqualityExpression	ovalue == xylum		5459825	1		==			
ANR	5460733	Identifier	ovalue		5459825	0					
ANR	5460734	Identifier	xylum		5459825	1					
ANR	5460735	CompoundStatement		174:32:3695:3695	5459825	1					
ANR	5460736	Statement	printf	430:3:9543:9548	5459825	0	True				
ANR	5460737	Statement	(	430:9:9549:9549	5459825	1	True				
ANR	5460738	Statement	"""# buf:  %02x %02x %02x %02x (+%"""	430:10:9550:9582	5459825	2	True				
ANR	5460739	Statement	PFMT64d	430:43:9583:9589	5459825	3	True				
ANR	5460740	Statement	""")\\n"""	430:50:9590:9594	5459825	4	True				
ANR	5460741	Statement	","	430:55:9595:9595	5459825	5	True				
ANR	5460742	Statement	buf	431:4:9601:9603	5459825	6	True				
ANR	5460743	Statement	[	431:7:9604:9604	5459825	7	True				
ANR	5460744	Statement	0	431:8:9605:9605	5459825	8	True				
ANR	5460745	Statement	]	431:9:9606:9606	5459825	9	True				
ANR	5460746	Statement	","	431:10:9607:9607	5459825	10	True				
ANR	5460747	Statement	buf	431:12:9609:9611	5459825	11	True				
ANR	5460748	Statement	[	431:15:9612:9612	5459825	12	True				
ANR	5460749	Statement	1	431:16:9613:9613	5459825	13	True				
ANR	5460750	Statement	]	431:17:9614:9614	5459825	14	True				
ANR	5460751	Statement	","	431:18:9615:9615	5459825	15	True				
ANR	5460752	Statement	buf	431:20:9617:9619	5459825	16	True				
ANR	5460753	Statement	[	431:23:9620:9620	5459825	17	True				
ANR	5460754	Statement	2	431:24:9621:9621	5459825	18	True				
ANR	5460755	Statement	]	431:25:9622:9622	5459825	19	True				
ANR	5460756	Statement	","	431:26:9623:9623	5459825	20	True				
ANR	5460757	Statement	buf	431:28:9625:9627	5459825	21	True				
ANR	5460758	Statement	[	431:31:9628:9628	5459825	22	True				
ANR	5460759	Statement	3	431:32:9629:9629	5459825	23	True				
ANR	5460760	Statement	]	431:33:9630:9630	5459825	24	True				
ANR	5460761	Statement	","	431:34:9631:9631	5459825	25	True				
ANR	5460762	Statement	(	431:36:9633:9633	5459825	26	True				
ANR	5460763	Statement	ut64	431:37:9634:9637	5459825	27	True				
ANR	5460764	Statement	)	431:41:9638:9638	5459825	28	True				
ANR	5460765	Statement	(	431:42:9639:9639	5459825	29	True				
ANR	5460766	Statement	4	431:43:9640:9640	5459825	30	True				
ANR	5460767	Statement	-	431:44:9641:9641	5459825	31	True				
ANR	5460768	Statement	size	431:45:9642:9645	5459825	32	True				
ANR	5460769	Statement	)	431:49:9646:9646	5459825	33	True				
ANR	5460770	Statement	)	431:50:9647:9647	5459825	34	True				
ANR	5460771	ExpressionStatement		431:51:9648:9648	5459825	35	True				
ANR	5460772	ExpressionStatement	"printf ( ""# map:  %02x %02x %02x \\n"" , ma [ i + gamme ] , ma [ i + 1 + gamme ] , ma [ i + 2 + gamme ] )"	432:3:9653:9735	5459825	36	True				
ANR	5460773	CallExpression	"printf ( ""# map:  %02x %02x %02x \\n"" , ma [ i + gamme ] , ma [ i + 1 + gamme ] , ma [ i + 2 + gamme ] )"		5459825	0					
ANR	5460774	Callee	printf		5459825	0					
ANR	5460775	Identifier	printf		5459825	0					
ANR	5460776	ArgumentList	"""# map:  %02x %02x %02x \\n"""		5459825	1					
ANR	5460777	Argument	"""# map:  %02x %02x %02x \\n"""		5459825	0					
ANR	5460778	PrimaryExpression	"""# map:  %02x %02x %02x \\n"""		5459825	0					
ANR	5460779	Argument	ma [ i + gamme ]		5459825	1					
ANR	5460780	ArrayIndexing	ma [ i + gamme ]		5459825	0					
ANR	5460781	Identifier	ma		5459825	0					
ANR	5460782	AdditiveExpression	i + gamme		5459825	1		+			
ANR	5460783	Identifier	i		5459825	0					
ANR	5460784	Identifier	gamme		5459825	1					
ANR	5460785	Argument	ma [ i + 1 + gamme ]		5459825	2					
ANR	5460786	ArrayIndexing	ma [ i + 1 + gamme ]		5459825	0					
ANR	5460787	Identifier	ma		5459825	0					
ANR	5460788	AdditiveExpression	i + 1 + gamme		5459825	1		+			
ANR	5460789	Identifier	i		5459825	0					
ANR	5460790	AdditiveExpression	1 + gamme		5459825	1		+			
ANR	5460791	PrimaryExpression	1		5459825	0					
ANR	5460792	Identifier	gamme		5459825	1					
ANR	5460793	Argument	ma [ i + 2 + gamme ]		5459825	3					
ANR	5460794	ArrayIndexing	ma [ i + 2 + gamme ]		5459825	0					
ANR	5460795	Identifier	ma		5459825	0					
ANR	5460796	AdditiveExpression	i + 2 + gamme		5459825	1		+			
ANR	5460797	Identifier	i		5459825	0					
ANR	5460798	AdditiveExpression	2 + gamme		5459825	1		+			
ANR	5460799	PrimaryExpression	2		5459825	0					
ANR	5460800	Identifier	gamme		5459825	1					
ANR	5460801	ExpressionStatement	"printf ( ""# cmp:  %02x %02x %02x\\n"" , ma [ i ] , ma [ i + 1 ] , ma [ i + 2 ] )"	434:3:9740:9799	5459825	37	True				
ANR	5460802	CallExpression	"printf ( ""# cmp:  %02x %02x %02x\\n"" , ma [ i ] , ma [ i + 1 ] , ma [ i + 2 ] )"		5459825	0					
ANR	5460803	Callee	printf		5459825	0					
ANR	5460804	Identifier	printf		5459825	0					
ANR	5460805	ArgumentList	"""# cmp:  %02x %02x %02x\\n"""		5459825	1					
ANR	5460806	Argument	"""# cmp:  %02x %02x %02x\\n"""		5459825	0					
ANR	5460807	PrimaryExpression	"""# cmp:  %02x %02x %02x\\n"""		5459825	0					
ANR	5460808	Argument	ma [ i ]		5459825	1					
ANR	5460809	ArrayIndexing	ma [ i ]		5459825	0					
ANR	5460810	Identifier	ma		5459825	0					
ANR	5460811	Identifier	i		5459825	1					
ANR	5460812	Argument	ma [ i + 1 ]		5459825	2					
ANR	5460813	ArrayIndexing	ma [ i + 1 ]		5459825	0					
ANR	5460814	Identifier	ma		5459825	0					
ANR	5460815	AdditiveExpression	i + 1		5459825	1		+			
ANR	5460816	Identifier	i		5459825	0					
ANR	5460817	PrimaryExpression	1		5459825	1					
ANR	5460818	Argument	ma [ i + 2 ]		5459825	3					
ANR	5460819	ArrayIndexing	ma [ i + 2 ]		5459825	0					
ANR	5460820	Identifier	ma		5459825	0					
ANR	5460821	AdditiveExpression	i + 2		5459825	1		+			
ANR	5460822	Identifier	i		5459825	0					
ANR	5460823	PrimaryExpression	2		5459825	1					
ANR	5460824	IfStatement	if ( xylum && i == xylum )		5459825	63					
ANR	5460825	Condition	xylum && i == xylum	437:6:9812:9830	5459825	0	True				
ANR	5460826	AndExpression	xylum && i == xylum		5459825	0		&&			
ANR	5460827	Identifier	xylum		5459825	0					
ANR	5460828	EqualityExpression	i == xylum		5459825	1		==			
ANR	5460829	Identifier	i		5459825	0					
ANR	5460830	Identifier	xylum		5459825	1					
ANR	5460831	CompoundStatement		182:27:3990:3990	5459825	1					
ANR	5460832	ExpressionStatement	"printf ( ""# a:  %02x %02x %02x %02x\\n"" , ma [ i + gamme + 0 ] , ma [ i + gamme + 1 ] , ma [ i + gamme + 2 ] , ma [ i + gamme + 3 ] )"	438:3:9838:9943	5459825	0	True				
ANR	5460833	CallExpression	"printf ( ""# a:  %02x %02x %02x %02x\\n"" , ma [ i + gamme + 0 ] , ma [ i + gamme + 1 ] , ma [ i + gamme + 2 ] , ma [ i + gamme + 3 ] )"		5459825	0					
ANR	5460834	Callee	printf		5459825	0					
ANR	5460835	Identifier	printf		5459825	0					
ANR	5460836	ArgumentList	"""# a:  %02x %02x %02x %02x\\n"""		5459825	1					
ANR	5460837	Argument	"""# a:  %02x %02x %02x %02x\\n"""		5459825	0					
ANR	5460838	PrimaryExpression	"""# a:  %02x %02x %02x %02x\\n"""		5459825	0					
ANR	5460839	Argument	ma [ i + gamme + 0 ]		5459825	1					
ANR	5460840	ArrayIndexing	ma [ i + gamme + 0 ]		5459825	0					
ANR	5460841	Identifier	ma		5459825	0					
ANR	5460842	AdditiveExpression	i + gamme + 0		5459825	1		+			
ANR	5460843	Identifier	i		5459825	0					
ANR	5460844	AdditiveExpression	gamme + 0		5459825	1		+			
ANR	5460845	Identifier	gamme		5459825	0					
ANR	5460846	PrimaryExpression	0		5459825	1					
ANR	5460847	Argument	ma [ i + gamme + 1 ]		5459825	2					
ANR	5460848	ArrayIndexing	ma [ i + gamme + 1 ]		5459825	0					
ANR	5460849	Identifier	ma		5459825	0					
ANR	5460850	AdditiveExpression	i + gamme + 1		5459825	1		+			
ANR	5460851	Identifier	i		5459825	0					
ANR	5460852	AdditiveExpression	gamme + 1		5459825	1		+			
ANR	5460853	Identifier	gamme		5459825	0					
ANR	5460854	PrimaryExpression	1		5459825	1					
ANR	5460855	Argument	ma [ i + gamme + 2 ]		5459825	3					
ANR	5460856	ArrayIndexing	ma [ i + gamme + 2 ]		5459825	0					
ANR	5460857	Identifier	ma		5459825	0					
ANR	5460858	AdditiveExpression	i + gamme + 2		5459825	1		+			
ANR	5460859	Identifier	i		5459825	0					
ANR	5460860	AdditiveExpression	gamme + 2		5459825	1		+			
ANR	5460861	Identifier	gamme		5459825	0					
ANR	5460862	PrimaryExpression	2		5459825	1					
ANR	5460863	Argument	ma [ i + gamme + 3 ]		5459825	4					
ANR	5460864	ArrayIndexing	ma [ i + gamme + 3 ]		5459825	0					
ANR	5460865	Identifier	ma		5459825	0					
ANR	5460866	AdditiveExpression	i + gamme + 3		5459825	1		+			
ANR	5460867	Identifier	i		5459825	0					
ANR	5460868	AdditiveExpression	gamme + 3		5459825	1		+			
ANR	5460869	Identifier	gamme		5459825	0					
ANR	5460870	PrimaryExpression	3		5459825	1					
ANR	5460871	ExpressionStatement	"printf ( ""# b:  %02x %02x %02x %02x\\n"" , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] , buf [ 3 ] )"	441:3:9948:10021	5459825	1	True				
ANR	5460872	CallExpression	"printf ( ""# b:  %02x %02x %02x %02x\\n"" , buf [ 0 ] , buf [ 1 ] , buf [ 2 ] , buf [ 3 ] )"		5459825	0					
ANR	5460873	Callee	printf		5459825	0					
ANR	5460874	Identifier	printf		5459825	0					
ANR	5460875	ArgumentList	"""# b:  %02x %02x %02x %02x\\n"""		5459825	1					
ANR	5460876	Argument	"""# b:  %02x %02x %02x %02x\\n"""		5459825	0					
ANR	5460877	PrimaryExpression	"""# b:  %02x %02x %02x %02x\\n"""		5459825	0					
ANR	5460878	Argument	buf [ 0 ]		5459825	1					
ANR	5460879	ArrayIndexing	buf [ 0 ]		5459825	0					
ANR	5460880	Identifier	buf		5459825	0					
ANR	5460881	PrimaryExpression	0		5459825	1					
ANR	5460882	Argument	buf [ 1 ]		5459825	2					
ANR	5460883	ArrayIndexing	buf [ 1 ]		5459825	0					
ANR	5460884	Identifier	buf		5459825	0					
ANR	5460885	PrimaryExpression	1		5459825	1					
ANR	5460886	Argument	buf [ 2 ]		5459825	3					
ANR	5460887	ArrayIndexing	buf [ 2 ]		5459825	0					
ANR	5460888	Identifier	buf		5459825	0					
ANR	5460889	PrimaryExpression	2		5459825	1					
ANR	5460890	Argument	buf [ 3 ]		5459825	4					
ANR	5460891	ArrayIndexing	buf [ 3 ]		5459825	0					
ANR	5460892	Identifier	buf		5459825	0					
ANR	5460893	PrimaryExpression	3		5459825	1					
ANR	5460894	IfStatement	"if ( memcmp ( ( unsigned char * ) ma + i + gamme , ( unsigned char * ) buf + ( 4 - size ) , size ) == 0 )"		5459825	64					
ANR	5460895	Condition	"memcmp ( ( unsigned char * ) ma + i + gamme , ( unsigned char * ) buf + ( 4 - size ) , size ) == 0"	445:6:10034:10110	5459825	0	True				
ANR	5460896	EqualityExpression	"memcmp ( ( unsigned char * ) ma + i + gamme , ( unsigned char * ) buf + ( 4 - size ) , size ) == 0"		5459825	0		==			
ANR	5460897	CallExpression	"memcmp ( ( unsigned char * ) ma + i + gamme , ( unsigned char * ) buf + ( 4 - size ) , size )"		5459825	0					
ANR	5460898	Callee	memcmp		5459825	0					
ANR	5460899	Identifier	memcmp		5459825	0					
ANR	5460900	ArgumentList	( unsigned char * ) ma + i + gamme		5459825	1					
ANR	5460901	Argument	( unsigned char * ) ma + i + gamme		5459825	0					
ANR	5460902	AdditiveExpression	( unsigned char * ) ma + i + gamme		5459825	0		+			
ANR	5460903	CastExpression	( unsigned char * ) ma		5459825	0					
ANR	5460904	CastTarget	unsigned char *		5459825	0					
ANR	5460905	Identifier	ma		5459825	1					
ANR	5460906	AdditiveExpression	i + gamme		5459825	1		+			
ANR	5460907	Identifier	i		5459825	0					
ANR	5460908	Identifier	gamme		5459825	1					
ANR	5460909	Argument	( unsigned char * ) buf + ( 4 - size )		5459825	1					
ANR	5460910	AdditiveExpression	( unsigned char * ) buf + ( 4 - size )		5459825	0		+			
ANR	5460911	CastExpression	( unsigned char * ) buf		5459825	0					
ANR	5460912	CastTarget	unsigned char *		5459825	0					
ANR	5460913	Identifier	buf		5459825	1					
ANR	5460914	AdditiveExpression	4 - size		5459825	1		-			
ANR	5460915	PrimaryExpression	4		5459825	0					
ANR	5460916	Identifier	size		5459825	1					
ANR	5460917	Argument	size		5459825	2					
ANR	5460918	Identifier	size		5459825	0					
ANR	5460919	PrimaryExpression	0		5459825	1					
ANR	5460920	CompoundStatement		190:85:4270:4270	5459825	1					
ANR	5460921	IfStatement	if ( quite )		5459825	0					
ANR	5460922	Condition	quite	446:7:10122:10126	5459825	0	True				
ANR	5460923	Identifier	quite		5459825	0					
ANR	5460924	Statement	printf	447:4:10133:10138	5459825	1	True				
ANR	5460925	ElseStatement	else		5459825	0					
ANR	5460926	Statement	printf	449:4:10182:10187	5459825	0	True				
ANR	5460927	Statement	(	447:10:10139:10139	5459825	1	True				
ANR	5460928	Statement	"""0x%08"""	447:11:10140:10146	5459825	2	True				
ANR	5460929	Statement	PFMT64x	447:18:10147:10153	5459825	3	True				
ANR	5460930	Statement	"""\\n"""	447:25:10154:10157	5459825	4	True				
ANR	5460931	Statement	","	447:29:10158:10158	5459825	5	True				
ANR	5460932	Statement	(	447:31:10160:10160	5459825	6	True				
ANR	5460933	Statement	ut64	447:32:10161:10164	5459825	7	True				
ANR	5460934	Statement	)	447:36:10165:10165	5459825	8	True				
ANR	5460935	Statement	i	447:37:10166:10166	5459825	9	True				
ANR	5460936	Statement	)	447:38:10167:10167	5459825	10	True				
ANR	5460937	ExpressionStatement		447:39:10168:10168	5459825	11	True				
ANR	5460938	Statement	(	449:10:10188:10188	5459825	12	True				
ANR	5460939	Statement	"""match value 0x%08"""	449:11:10189:10207	5459825	13	True				
ANR	5460940	Statement	PFMT64x	449:30:10208:10214	5459825	14	True				
ANR	5460941	Statement	""" (%02x%02x%02x) at offset 0x%08"""	449:37:10215:10247	5459825	15	True				
ANR	5460942	Statement	PFMT64x	449:70:10248:10254	5459825	16	True				
ANR	5460943	Statement	"""\\n"""	449:77:10255:10258	5459825	17	True				
ANR	5460944	Statement	","	449:81:10259:10259	5459825	18	True				
ANR	5460945	Statement	(	450:5:10266:10266	5459825	19	True				
ANR	5460946	Statement	ut64	450:6:10267:10270	5459825	20	True				
ANR	5460947	Statement	)	450:10:10271:10271	5459825	21	True				
ANR	5460948	Statement	ovalue	450:11:10272:10277	5459825	22	True				
ANR	5460949	Statement	","	450:17:10278:10278	5459825	23	True				
ANR	5460950	Statement	buf	451:5:10285:10287	5459825	24	True				
ANR	5460951	Statement	[	451:8:10288:10288	5459825	25	True				
ANR	5460952	Statement	0	451:9:10289:10289	5459825	26	True				
ANR	5460953	Statement	+	451:10:10290:10290	5459825	27	True				
ANR	5460954	Statement	(	451:11:10291:10291	5459825	28	True				
ANR	5460955	Statement	4	451:12:10292:10292	5459825	29	True				
ANR	5460956	Statement	-	451:13:10293:10293	5459825	30	True				
ANR	5460957	Statement	size	451:14:10294:10297	5459825	31	True				
ANR	5460958	Statement	)	451:18:10298:10298	5459825	32	True				
ANR	5460959	Statement	]	451:19:10299:10299	5459825	33	True				
ANR	5460960	Statement	","	451:20:10300:10300	5459825	34	True				
ANR	5460961	Statement	buf	451:22:10302:10304	5459825	35	True				
ANR	5460962	Statement	[	451:25:10305:10305	5459825	36	True				
ANR	5460963	Statement	1	451:26:10306:10306	5459825	37	True				
ANR	5460964	Statement	+	451:27:10307:10307	5459825	38	True				
ANR	5460965	Statement	(	451:28:10308:10308	5459825	39	True				
ANR	5460966	Statement	4	451:29:10309:10309	5459825	40	True				
ANR	5460967	Statement	-	451:30:10310:10310	5459825	41	True				
ANR	5460968	Statement	size	451:31:10311:10314	5459825	42	True				
ANR	5460969	Statement	)	451:35:10315:10315	5459825	43	True				
ANR	5460970	Statement	]	451:36:10316:10316	5459825	44	True				
ANR	5460971	Statement	","	451:37:10317:10317	5459825	45	True				
ANR	5460972	Statement	buf	451:39:10319:10321	5459825	46	True				
ANR	5460973	Statement	[	451:42:10322:10322	5459825	47	True				
ANR	5460974	Statement	2	451:43:10323:10323	5459825	48	True				
ANR	5460975	Statement	+	451:44:10324:10324	5459825	49	True				
ANR	5460976	Statement	(	451:45:10325:10325	5459825	50	True				
ANR	5460977	Statement	4	451:46:10326:10326	5459825	51	True				
ANR	5460978	Statement	-	451:47:10327:10327	5459825	52	True				
ANR	5460979	Statement	size	451:48:10328:10331	5459825	53	True				
ANR	5460980	Statement	)	451:52:10332:10332	5459825	54	True				
ANR	5460981	Statement	]	451:53:10333:10333	5459825	55	True				
ANR	5460982	Statement	","	451:54:10334:10334	5459825	56	True				
ANR	5460983	Statement	(	452:5:10341:10341	5459825	57	True				
ANR	5460984	Statement	ut64	452:6:10342:10345	5459825	58	True				
ANR	5460985	Statement	)	452:10:10346:10346	5459825	59	True				
ANR	5460986	Statement	(	452:11:10347:10347	5459825	60	True				
ANR	5460987	Statement	(	452:12:10348:10348	5459825	61	True				
ANR	5460988	Statement	ut32	452:13:10349:10352	5459825	62	True				
ANR	5460989	Statement	)	452:17:10353:10353	5459825	63	True				
ANR	5460990	Statement	i	452:18:10354:10354	5459825	64	True				
ANR	5460991	Statement	)	452:19:10355:10355	5459825	65	True				
ANR	5460992	Statement	+	452:20:10356:10356	5459825	66	True				
ANR	5460993	Statement	(	452:21:10357:10357	5459825	67	True				
ANR	5460994	Statement	(	452:22:10358:10358	5459825	68	True				
ANR	5460995	Statement	gamme	452:23:10359:10363	5459825	69	True				
ANR	5460996	Statement	<	452:28:10364:10364	5459825	70	True				
ANR	5460997	Statement	0	452:29:10365:10365	5459825	71	True				
ANR	5460998	Statement	)	452:30:10366:10366	5459825	72	True				
ANR	5460999	Statement	?	452:31:10367:10367	5459825	73	True				
ANR	5461000	Statement	-	452:32:10368:10368	5459825	74	True				
ANR	5461001	Label	1 :	452:33:10369:10370	5459825	75	True				
ANR	5461002	Statement	0	452:35:10371:10371	5459825	76	True				
ANR	5461003	Statement	)	452:36:10372:10372	5459825	77	True				
ANR	5461004	Statement	)	452:37:10373:10373	5459825	78	True				
ANR	5461005	ExpressionStatement		452:38:10374:10374	5459825	79	True				
ANR	5461006	ExpressionStatement	found ++	453:3:10379:10386	5459825	80	True				
ANR	5461007	PostIncDecOperationExpression	found ++		5459825	0					
ANR	5461008	Identifier	found		5459825	0					
ANR	5461009	IncDec	++		5459825	1					
ANR	5461010	IfStatement	if ( found == 0 && ! quite )		5459825	20					
ANR	5461011	Condition	found == 0 && ! quite	457:5:10401:10420	5459825	0	True				
ANR	5461012	AndExpression	found == 0 && ! quite		5459825	0		&&			
ANR	5461013	EqualityExpression	found == 0		5459825	0		==			
ANR	5461014	Identifier	found		5459825	0					
ANR	5461015	PrimaryExpression	0		5459825	1					
ANR	5461016	UnaryOperationExpression	! quite		5459825	1					
ANR	5461017	UnaryOperator	!		5459825	0					
ANR	5461018	Identifier	quite		5459825	1					
ANR	5461019	ExpressionStatement	"puts ( ""no matches found."" )"	458:2:10425:10450	5459825	1	True				
ANR	5461020	CallExpression	"puts ( ""no matches found."" )"		5459825	0					
ANR	5461021	Callee	puts		5459825	0					
ANR	5461022	Identifier	puts		5459825	0					
ANR	5461023	ArgumentList	"""no matches found."""		5459825	1					
ANR	5461024	Argument	"""no matches found."""		5459825	0					
ANR	5461025	PrimaryExpression	"""no matches found."""		5459825	0					
ANR	5461026	ReturnStatement	return 0 ;	460:1:10454:10462	5459825	21	True				
ANR	5461027	PrimaryExpression	0		5459825	0					
ANR	5461028	ReturnType	int		5459825	1					
ANR	5461029	Identifier	main		5459825	2					
ANR	5461030	ParameterList	"int argc , char * * argv"		5459825	3					
ANR	5461031	Parameter	int argc	255:9:5819:5826	5459825	0	True				
ANR	5461032	ParameterType	int		5459825	0					
ANR	5461033	Identifier	argc		5459825	1					
ANR	5461034	Parameter	char * * argv	255:19:5829:5839	5459825	1	True				
ANR	5461035	ParameterType	char * *		5459825	0					
ANR	5461036	Identifier	argv		5459825	1					
ANR	5461037	CFGEntryNode	ENTRY		5459825		True				
ANR	5461038	CFGExitNode	EXIT		5459825		True				
ANR	5461039	Symbol	* optind		5459825						
ANR	5461040	Symbol	& value		5459825						
ANR	5461041	Symbol	optind		5459825						
ANR	5461042	Symbol	sysendian		5459825						
ANR	5461043	Symbol	delta		5459825						
ANR	5461044	Symbol	optarg		5459825						
ANR	5461045	Symbol	* argv		5459825						
ANR	5461046	Symbol	endian		5459825						
ANR	5461047	Symbol	ARCH_X86		5459825						
ANR	5461048	Symbol	* gamme		5459825						
ANR	5461049	Symbol	memcmp		5459825						
ANR	5461050	Symbol	ma		5459825						
ANR	5461051	Symbol	getopt		5459825						
ANR	5461052	Symbol	tmp		5459825						
ANR	5461053	Symbol	quite		5459825						
ANR	5461054	Symbol	from		5459825						
ANR	5461055	Symbol	strcmp		5459825						
ANR	5461056	Symbol	* buf		5459825						
ANR	5461057	Symbol	NULL		5459825						
ANR	5461058	Symbol	offset		5459825						
ANR	5461059	Symbol	PROT_READ		5459825						
ANR	5461060	Symbol	stderr		5459825						
ANR	5461061	Symbol	xylum		5459825						
ANR	5461062	Symbol	ARCH_ARM		5459825						
ANR	5461063	Symbol	size		5459825						
ANR	5461064	Symbol	MAP_SHARED		5459825						
ANR	5461065	Symbol	ARCH_PPC		5459825						
ANR	5461066	Symbol	range		5459825						
ANR	5461067	Symbol	set_arch_settings		5459825						
ANR	5461068	Symbol	argv		5459825						
ANR	5461069	Symbol	sa		5459825						
ANR	5461070	Symbol	found		5459825						
ANR	5461071	Symbol	INT_MAX		5459825						
ANR	5461072	Symbol	file_size_fd		5459825						
ANR	5461073	Symbol	get_system_endian		5459825						
ANR	5461074	Symbol	* ma		5459825						
ANR	5461075	Symbol	value		5459825						
ANR	5461076	Symbol	argc		5459825						
ANR	5461077	Symbol	tmpvalue		5459825						
ANR	5461078	Symbol	c		5459825						
ANR	5461079	Symbol	src		5459825						
ANR	5461080	Symbol	i		5459825						
ANR	5461081	Symbol	show_usage		5459825						
ANR	5461082	Symbol	verbose		5459825						
ANR	5461083	Symbol	buf		5459825						
ANR	5461084	Symbol	gamme		5459825						
ANR	5461085	Symbol	O_RDONLY		5459825						
ANR	5461086	Symbol	* i		5459825						
ANR	5461087	Symbol	ovalue		5459825						
ANR	5461088	Symbol	VERSION		5459825						
ANR	5461089	Symbol	get_value32		5459825						
ANR	5461090	Symbol	to		5459825						
ANR	5461091	Symbol	arch		5459825						
ANR	5461092	Symbol	mmap		5459825						
ANR	5461093	Symbol	open		5459825						
ANR	5461094	Symbol	base		5459825						
