command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2528639	File	data/converged/CVE-2019-16718~_radare2/libr_anal_value.c								
ANR	2528640	Function	r_anal_value_new	5:0:87:176							
ANR	2528641	FunctionDef	r_anal_value_new ()		2528640	0					
ANR	2528642	CompoundStatement		5:37:124:176	2528640	0					
ANR	2528643	ReturnStatement	return R_NEW0 ( RAnalValue ) ;	6:1:148:174	2528640	0	True				
ANR	2528644	CallExpression	R_NEW0 ( RAnalValue )		2528640	0					
ANR	2528645	Callee	R_NEW0		2528640	0					
ANR	2528646	Identifier	R_NEW0		2528640	0					
ANR	2528647	ArgumentList	RAnalValue		2528640	1					
ANR	2528648	Argument	RAnalValue		2528640	0					
ANR	2528649	Identifier	RAnalValue		2528640	0					
ANR	2528650	ReturnType	R_API RAnalValue *		2528640	1					
ANR	2528651	Identifier	r_anal_value_new		2528640	2					
ANR	2528652	ParameterList			2528640	3					
ANR	2528653	CFGEntryNode	ENTRY		2528640		True				
ANR	2528654	CFGExitNode	EXIT		2528640		True				
ANR	2528655	Symbol	R_NEW0		2528640						
ANR	2528656	Symbol	RAnalValue		2528640						
ANR	2528657	Function	r_anal_value_new_from_string	9:0:179:271							
ANR	2528658	FunctionDef	r_anal_value_new_from_string (const char * str)		2528657	0					
ANR	2528659	CompoundStatement		9:64:243:271	2528657	0					
ANR	2528660	ReturnStatement	return NULL ;	11:1:258:269	2528657	0	True				
ANR	2528661	Identifier	NULL		2528657	0					
ANR	2528662	ReturnType	R_API RAnalValue *		2528657	1					
ANR	2528663	Identifier	r_anal_value_new_from_string		2528657	2					
ANR	2528664	ParameterList	const char * str		2528657	3					
ANR	2528665	Parameter	const char * str	9:47:226:240	2528657	0	True				
ANR	2528666	ParameterType	const char *		2528657	0					
ANR	2528667	Identifier	str		2528657	1					
ANR	2528668	CFGEntryNode	ENTRY		2528657		True				
ANR	2528669	CFGExitNode	EXIT		2528657		True				
ANR	2528670	Symbol	str		2528657						
ANR	2528671	Symbol	NULL		2528657						
ANR	2528672	Function	r_anal_value_copy	14:0:274:493							
ANR	2528673	FunctionDef	r_anal_value_copy (RAnalValue * ov)		2528672	0					
ANR	2528674	CompoundStatement		14:52:326:493	2528672	0					
ANR	2528675	IdentifierDeclStatement	RAnalValue * v = R_NEW0 ( RAnalValue ) ;	15:1:329:364	2528672	0	True				
ANR	2528676	IdentifierDecl	* v = R_NEW0 ( RAnalValue )		2528672	0					
ANR	2528677	IdentifierDeclType	RAnalValue *		2528672	0					
ANR	2528678	Identifier	v		2528672	1					
ANR	2528679	AssignmentExpression	* v = R_NEW0 ( RAnalValue )		2528672	2		=			
ANR	2528680	Identifier	v		2528672	0					
ANR	2528681	CallExpression	R_NEW0 ( RAnalValue )		2528672	1					
ANR	2528682	Callee	R_NEW0		2528672	0					
ANR	2528683	Identifier	R_NEW0		2528672	0					
ANR	2528684	ArgumentList	RAnalValue		2528672	1					
ANR	2528685	Argument	RAnalValue		2528672	0					
ANR	2528686	Identifier	RAnalValue		2528672	0					
ANR	2528687	IfStatement	if ( ! v )		2528672	1					
ANR	2528688	Condition	! v	16:5:371:372	2528672	0	True				
ANR	2528689	UnaryOperationExpression	! v		2528672	0					
ANR	2528690	UnaryOperator	!		2528672	0					
ANR	2528691	Identifier	v		2528672	1					
ANR	2528692	CompoundStatement		3:9:48:48	2528672	1					
ANR	2528693	ReturnStatement	return NULL ;	17:2:379:390	2528672	0	True				
ANR	2528694	Identifier	NULL		2528672	0					
ANR	2528695	ExpressionStatement	"memcpy ( v , ov , sizeof ( RAnalValue ) )"	19:1:396:431	2528672	2	True				
ANR	2528696	CallExpression	"memcpy ( v , ov , sizeof ( RAnalValue ) )"		2528672	0					
ANR	2528697	Callee	memcpy		2528672	0					
ANR	2528698	Identifier	memcpy		2528672	0					
ANR	2528699	ArgumentList	v		2528672	1					
ANR	2528700	Argument	v		2528672	0					
ANR	2528701	Identifier	v		2528672	0					
ANR	2528702	Argument	ov		2528672	1					
ANR	2528703	Identifier	ov		2528672	0					
ANR	2528704	Argument	sizeof ( RAnalValue )		2528672	2					
ANR	2528705	SizeofExpression	sizeof ( RAnalValue )		2528672	0					
ANR	2528706	Sizeof	sizeof		2528672	0					
ANR	2528707	SizeofOperand	RAnalValue		2528672	1					
ANR	2528708	ReturnStatement	return v ;	21:1:483:491	2528672	3	True				
ANR	2528709	Identifier	v		2528672	0					
ANR	2528710	ReturnType	R_API RAnalValue *		2528672	1					
ANR	2528711	Identifier	r_anal_value_copy		2528672	2					
ANR	2528712	ParameterList	RAnalValue * ov		2528672	3					
ANR	2528713	Parameter	RAnalValue * ov	14:36:310:323	2528672	0	True				
ANR	2528714	ParameterType	RAnalValue *		2528672	0					
ANR	2528715	Identifier	ov		2528672	1					
ANR	2528716	CFGEntryNode	ENTRY		2528672		True				
ANR	2528717	CFGExitNode	EXIT		2528672		True				
ANR	2528718	Symbol	R_NEW0		2528672						
ANR	2528719	Symbol	NULL		2528672						
ANR	2528720	Symbol	v		2528672						
ANR	2528721	Symbol	ov		2528672						
ANR	2528722	Symbol	RAnalValue		2528672						
ANR	2528723	Function	r_anal_value_free	25:0:534:735							
ANR	2528724	FunctionDef	r_anal_value_free (RAnalValue * value)		2528723	0					
ANR	2528725	CompoundStatement		25:48:582:735	2528723	0					
ANR	2528726	ExpressionStatement	free ( value )	26:1:585:597	2528723	0	True				
ANR	2528727	CallExpression	free ( value )		2528723	0					
ANR	2528728	Callee	free		2528723	0					
ANR	2528729	Identifier	free		2528723	0					
ANR	2528730	ArgumentList	value		2528723	1					
ANR	2528731	Argument	value		2528723	0					
ANR	2528732	Identifier	value		2528723	0					
ANR	2528733	IdentifierDeclStatement	ut64 pval = ( ut64 ) ( size_t ) value ;	28:1:606:637	2528723	1	True				
ANR	2528734	IdentifierDecl	pval = ( ut64 ) ( size_t ) value		2528723	0					
ANR	2528735	IdentifierDeclType	ut64		2528723	0					
ANR	2528736	Identifier	pval		2528723	1					
ANR	2528737	AssignmentExpression	pval = ( ut64 ) ( size_t ) value		2528723	2		=			
ANR	2528738	Identifier	pval		2528723	0					
ANR	2528739	CastExpression	( ut64 ) ( size_t ) value		2528723	1					
ANR	2528740	CastTarget	ut64		2528723	0					
ANR	2528741	CastExpression	( size_t ) value		2528723	1					
ANR	2528742	CastTarget	size_t		2528723	0					
ANR	2528743	Identifier	value		2528723	1					
ANR	2528744	IfStatement	if ( pval && pval != UT64_MAX )		2528723	2					
ANR	2528745	Condition	pval && pval != UT64_MAX	29:5:644:667	2528723	0	True				
ANR	2528746	AndExpression	pval && pval != UT64_MAX		2528723	0		&&			
ANR	2528747	Identifier	pval		2528723	0					
ANR	2528748	EqualityExpression	pval != UT64_MAX		2528723	1		!=			
ANR	2528749	Identifier	pval		2528723	0					
ANR	2528750	Identifier	UT64_MAX		2528723	1					
ANR	2528751	CompoundStatement		5:31:87:87	2528723	1					
ANR	2528752	ExpressionStatement	free ( value )	31:2:711:723	2528723	0	True				
ANR	2528753	CallExpression	free ( value )		2528723	0					
ANR	2528754	Callee	free		2528723	0					
ANR	2528755	Identifier	free		2528723	0					
ANR	2528756	ArgumentList	value		2528723	1					
ANR	2528757	Argument	value		2528723	0					
ANR	2528758	Identifier	value		2528723	0					
ANR	2528759	ReturnType	R_API void		2528723	1					
ANR	2528760	Identifier	r_anal_value_free		2528723	2					
ANR	2528761	ParameterList	RAnalValue * value		2528723	3					
ANR	2528762	Parameter	RAnalValue * value	25:29:563:579	2528723	0	True				
ANR	2528763	ParameterType	RAnalValue *		2528723	0					
ANR	2528764	Identifier	value		2528723	1					
ANR	2528765	CFGEntryNode	ENTRY		2528723		True				
ANR	2528766	CFGExitNode	EXIT		2528723		True				
ANR	2528767	Symbol	pval		2528723						
ANR	2528768	Symbol	UT64_MAX		2528723						
ANR	2528769	Symbol	value		2528723						
ANR	2528770	Function	r_anal_value_to_ut64	37:0:772:1237							
ANR	2528771	FunctionDef	"r_anal_value_to_ut64 (RAnal * anal , RAnalValue * val)"		2528770	0					
ANR	2528772	CompoundStatement		37:62:834:1237	2528770	0					
ANR	2528773	IdentifierDeclStatement	ut64 num ;	38:1:837:845	2528770	0	True				
ANR	2528774	IdentifierDecl	num		2528770	0					
ANR	2528775	IdentifierDeclType	ut64		2528770	0					
ANR	2528776	Identifier	num		2528770	1					
ANR	2528777	IfStatement	if ( ! val )		2528770	1					
ANR	2528778	Condition	! val	39:5:852:855	2528770	0	True				
ANR	2528779	UnaryOperationExpression	! val		2528770	0					
ANR	2528780	UnaryOperator	!		2528770	0					
ANR	2528781	Identifier	val		2528770	1					
ANR	2528782	CompoundStatement		3:11:23:23	2528770	1					
ANR	2528783	Statement	return	40:2:862:867	2528770	0	True				
ANR	2528784	Statement	0L	40:9:869:870	2528770	1	True				
ANR	2528785	ExpressionStatement	L	40:11:871:872	2528770	2	True				
ANR	2528786	Identifier	L		2528770	0					
ANR	2528787	ExpressionStatement	num = val -> base + ( val -> delta * ( val -> mul ? val -> mul : 1 ) )	42:1:878:930	2528770	2	True				
ANR	2528788	AssignmentExpression	num = val -> base + ( val -> delta * ( val -> mul ? val -> mul : 1 ) )		2528770	0		=			
ANR	2528789	Identifier	num		2528770	0					
ANR	2528790	AdditiveExpression	val -> base + ( val -> delta * ( val -> mul ? val -> mul : 1 ) )		2528770	1		+			
ANR	2528791	PtrMemberAccess	val -> base		2528770	0					
ANR	2528792	Identifier	val		2528770	0					
ANR	2528793	Identifier	base		2528770	1					
ANR	2528794	MultiplicativeExpression	val -> delta * ( val -> mul ? val -> mul : 1 )		2528770	1		*			
ANR	2528795	PtrMemberAccess	val -> delta		2528770	0					
ANR	2528796	Identifier	val		2528770	0					
ANR	2528797	Identifier	delta		2528770	1					
ANR	2528798	ConditionalExpression	val -> mul ? val -> mul : 1		2528770	1					
ANR	2528799	Condition	val -> mul		2528770	0					
ANR	2528800	PtrMemberAccess	val -> mul		2528770	0					
ANR	2528801	Identifier	val		2528770	0					
ANR	2528802	Identifier	mul		2528770	1					
ANR	2528803	PtrMemberAccess	val -> mul		2528770	1					
ANR	2528804	Identifier	val		2528770	0					
ANR	2528805	Identifier	mul		2528770	1					
ANR	2528806	PrimaryExpression	1		2528770	2					
ANR	2528807	IfStatement	if ( val -> reg )		2528770	3					
ANR	2528808	Condition	val -> reg	43:5:937:944	2528770	0	True				
ANR	2528809	PtrMemberAccess	val -> reg		2528770	0					
ANR	2528810	Identifier	val		2528770	0					
ANR	2528811	Identifier	reg		2528770	1					
ANR	2528812	CompoundStatement		7:15:112:112	2528770	1					
ANR	2528813	ExpressionStatement	"num += r_reg_get_value ( anal -> reg , val -> reg )"	44:2:951:995	2528770	0	True				
ANR	2528814	AssignmentExpression	"num += r_reg_get_value ( anal -> reg , val -> reg )"		2528770	0		+=			
ANR	2528815	Identifier	num		2528770	0					
ANR	2528816	CallExpression	"r_reg_get_value ( anal -> reg , val -> reg )"		2528770	1					
ANR	2528817	Callee	r_reg_get_value		2528770	0					
ANR	2528818	Identifier	r_reg_get_value		2528770	0					
ANR	2528819	ArgumentList	anal -> reg		2528770	1					
ANR	2528820	Argument	anal -> reg		2528770	0					
ANR	2528821	PtrMemberAccess	anal -> reg		2528770	0					
ANR	2528822	Identifier	anal		2528770	0					
ANR	2528823	Identifier	reg		2528770	1					
ANR	2528824	Argument	val -> reg		2528770	1					
ANR	2528825	PtrMemberAccess	val -> reg		2528770	0					
ANR	2528826	Identifier	val		2528770	0					
ANR	2528827	Identifier	reg		2528770	1					
ANR	2528828	IfStatement	if ( val -> regdelta )		2528770	4					
ANR	2528829	Condition	val -> regdelta	46:5:1005:1017	2528770	0	True				
ANR	2528830	PtrMemberAccess	val -> regdelta		2528770	0					
ANR	2528831	Identifier	val		2528770	0					
ANR	2528832	Identifier	regdelta		2528770	1					
ANR	2528833	CompoundStatement		10:20:185:185	2528770	1					
ANR	2528834	ExpressionStatement	"num += r_reg_get_value ( anal -> reg , val -> regdelta )"	47:2:1024:1073	2528770	0	True				
ANR	2528835	AssignmentExpression	"num += r_reg_get_value ( anal -> reg , val -> regdelta )"		2528770	0		+=			
ANR	2528836	Identifier	num		2528770	0					
ANR	2528837	CallExpression	"r_reg_get_value ( anal -> reg , val -> regdelta )"		2528770	1					
ANR	2528838	Callee	r_reg_get_value		2528770	0					
ANR	2528839	Identifier	r_reg_get_value		2528770	0					
ANR	2528840	ArgumentList	anal -> reg		2528770	1					
ANR	2528841	Argument	anal -> reg		2528770	0					
ANR	2528842	PtrMemberAccess	anal -> reg		2528770	0					
ANR	2528843	Identifier	anal		2528770	0					
ANR	2528844	Identifier	reg		2528770	1					
ANR	2528845	Argument	val -> regdelta		2528770	1					
ANR	2528846	PtrMemberAccess	val -> regdelta		2528770	0					
ANR	2528847	Identifier	val		2528770	0					
ANR	2528848	Identifier	regdelta		2528770	1					
ANR	2528849	SwitchStatement	switch ( val -> memref )		2528770	5					
ANR	2528850	Condition	val -> memref	49:9:1087:1097	2528770	0	True				
ANR	2528851	PtrMemberAccess	val -> memref		2528770	0					
ANR	2528852	Identifier	val		2528770	0					
ANR	2528853	Identifier	memref		2528770	1					
ANR	2528854	CompoundStatement		13:22:265:265	2528770	1					
ANR	2528855	Label	case 1 :	50:1:1103:1109	2528770	0	True				
ANR	2528856	Label	case 2 :	51:1:1112:1118	2528770	1	True				
ANR	2528857	Label	case 4 :	52:1:1121:1127	2528770	2	True				
ANR	2528858	Label	case 8 :	53:1:1130:1136	2528770	3	True				
ANR	2528859	ExpressionStatement	"eprintf ( ""TODO: memref for to_ut64 not supported\\n"" )"	55:2:1158:1210	2528770	4	True				
ANR	2528860	CallExpression	"eprintf ( ""TODO: memref for to_ut64 not supported\\n"" )"		2528770	0					
ANR	2528861	Callee	eprintf		2528770	0					
ANR	2528862	Identifier	eprintf		2528770	0					
ANR	2528863	ArgumentList	"""TODO: memref for to_ut64 not supported\\n"""		2528770	1					
ANR	2528864	Argument	"""TODO: memref for to_ut64 not supported\\n"""		2528770	0					
ANR	2528865	PrimaryExpression	"""TODO: memref for to_ut64 not supported\\n"""		2528770	0					
ANR	2528866	BreakStatement	break ;	56:2:1214:1219	2528770	5	True				
ANR	2528867	ReturnStatement	return num ;	58:1:1225:1235	2528770	6	True				
ANR	2528868	Identifier	num		2528770	0					
ANR	2528869	ReturnType	R_API ut64		2528770	1					
ANR	2528870	Identifier	r_anal_value_to_ut64		2528770	2					
ANR	2528871	ParameterList	"RAnal * anal , RAnalValue * val"		2528770	3					
ANR	2528872	Parameter	RAnal * anal	37:32:804:814	2528770	0	True				
ANR	2528873	ParameterType	RAnal *		2528770	0					
ANR	2528874	Identifier	anal		2528770	1					
ANR	2528875	Parameter	RAnalValue * val	37:45:817:831	2528770	1	True				
ANR	2528876	ParameterType	RAnalValue *		2528770	0					
ANR	2528877	Identifier	val		2528770	1					
ANR	2528878	CFGEntryNode	ENTRY		2528770		True				
ANR	2528879	CFGExitNode	EXIT		2528770		True				
ANR	2528880	Symbol	val		2528770						
ANR	2528881	Symbol	r_reg_get_value		2528770						
ANR	2528882	Symbol	anal -> reg		2528770						
ANR	2528883	Symbol	val -> mul		2528770						
ANR	2528884	Symbol	num		2528770						
ANR	2528885	Symbol	* val		2528770						
ANR	2528886	Symbol	* anal		2528770						
ANR	2528887	Symbol	anal		2528770						
ANR	2528888	Symbol	val -> regdelta		2528770						
ANR	2528889	Symbol	val -> reg		2528770						
ANR	2528890	Symbol	val -> memref		2528770						
ANR	2528891	Symbol	val -> base		2528770						
ANR	2528892	Symbol	val -> delta		2528770						
ANR	2528893	Function	r_anal_value_set_ut64	61:0:1240:1706							
ANR	2528894	FunctionDef	"r_anal_value_set_ut64 (RAnal * anal , RAnalValue * val , ut64 num)"		2528893	0					
ANR	2528895	CompoundStatement		61:72:1312:1706	2528893	0					
ANR	2528896	IfStatement	if ( val -> memref )		2528893	0					
ANR	2528897	Condition	val -> memref	62:5:1319:1329	2528893	0	True				
ANR	2528898	PtrMemberAccess	val -> memref		2528893	0					
ANR	2528899	Identifier	val		2528893	0					
ANR	2528900	Identifier	memref		2528893	1					
ANR	2528901	CompoundStatement		2:18:19:19	2528893	1					
ANR	2528902	IfStatement	if ( anal -> iob . io )		2528893	0					
ANR	2528903	Condition	anal -> iob . io	63:6:1340:1351	2528893	0	True				
ANR	2528904	MemberAccess	anal -> iob . io		2528893	0					
ANR	2528905	PtrMemberAccess	anal -> iob		2528893	0					
ANR	2528906	Identifier	anal		2528893	0					
ANR	2528907	Identifier	iob		2528893	1					
ANR	2528908	Identifier	io		2528893	1					
ANR	2528909	CompoundStatement		5:3:62:106	2528893	1					
ANR	2528910	IdentifierDeclStatement	ut8 data [ 8 ] ;	64:3:1359:1370	2528893	0	True				
ANR	2528911	IdentifierDecl	data [ 8 ]		2528893	0					
ANR	2528912	IdentifierDeclType	ut8 [ 8 ]		2528893	0					
ANR	2528913	Identifier	data		2528893	1					
ANR	2528914	PrimaryExpression	8		2528893	2					
ANR	2528915	IdentifierDeclStatement	"ut64 addr = r_anal_value_to_ut64 ( anal , val ) ;"	65:3:1375:1419	2528893	1	True				
ANR	2528916	IdentifierDecl	"addr = r_anal_value_to_ut64 ( anal , val )"		2528893	0					
ANR	2528917	IdentifierDeclType	ut64		2528893	0					
ANR	2528918	Identifier	addr		2528893	1					
ANR	2528919	AssignmentExpression	"addr = r_anal_value_to_ut64 ( anal , val )"		2528893	2		=			
ANR	2528920	Identifier	addr		2528893	0					
ANR	2528921	CallExpression	"r_anal_value_to_ut64 ( anal , val )"		2528893	1					
ANR	2528922	Callee	r_anal_value_to_ut64		2528893	0					
ANR	2528923	Identifier	r_anal_value_to_ut64		2528893	0					
ANR	2528924	ArgumentList	anal		2528893	1					
ANR	2528925	Argument	anal		2528893	0					
ANR	2528926	Identifier	anal		2528893	0					
ANR	2528927	Argument	val		2528893	1					
ANR	2528928	Identifier	val		2528893	0					
ANR	2528929	ExpressionStatement	"r_mem_set_num ( data , val -> memref , num )"	66:3:1424:1462	2528893	2	True				
ANR	2528930	CallExpression	"r_mem_set_num ( data , val -> memref , num )"		2528893	0					
ANR	2528931	Callee	r_mem_set_num		2528893	0					
ANR	2528932	Identifier	r_mem_set_num		2528893	0					
ANR	2528933	ArgumentList	data		2528893	1					
ANR	2528934	Argument	data		2528893	0					
ANR	2528935	Identifier	data		2528893	0					
ANR	2528936	Argument	val -> memref		2528893	1					
ANR	2528937	PtrMemberAccess	val -> memref		2528893	0					
ANR	2528938	Identifier	val		2528893	0					
ANR	2528939	Identifier	memref		2528893	1					
ANR	2528940	Argument	num		2528893	2					
ANR	2528941	Identifier	num		2528893	0					
ANR	2528942	ExpressionStatement	"anal -> iob . write_at ( anal -> iob . io , addr , data , val -> memref )"	67:3:1467:1525	2528893	3	True				
ANR	2528943	CallExpression	"anal -> iob . write_at ( anal -> iob . io , addr , data , val -> memref )"		2528893	0					
ANR	2528944	Callee	anal -> iob . write_at		2528893	0					
ANR	2528945	MemberAccess	anal -> iob . write_at		2528893	0					
ANR	2528946	PtrMemberAccess	anal -> iob		2528893	0					
ANR	2528947	Identifier	anal		2528893	0					
ANR	2528948	Identifier	iob		2528893	1					
ANR	2528949	Identifier	write_at		2528893	1					
ANR	2528950	ArgumentList	anal -> iob . io		2528893	1					
ANR	2528951	Argument	anal -> iob . io		2528893	0					
ANR	2528952	MemberAccess	anal -> iob . io		2528893	0					
ANR	2528953	PtrMemberAccess	anal -> iob		2528893	0					
ANR	2528954	Identifier	anal		2528893	0					
ANR	2528955	Identifier	iob		2528893	1					
ANR	2528956	Identifier	io		2528893	1					
ANR	2528957	Argument	addr		2528893	1					
ANR	2528958	Identifier	addr		2528893	0					
ANR	2528959	Argument	data		2528893	2					
ANR	2528960	Identifier	data		2528893	0					
ANR	2528961	Argument	val -> memref		2528893	3					
ANR	2528962	PtrMemberAccess	val -> memref		2528893	0					
ANR	2528963	Identifier	val		2528893	0					
ANR	2528964	Identifier	memref		2528893	1					
ANR	2528965	ElseStatement	else		2528893	0					
ANR	2528966	CompoundStatement		8:9:223:223	2528893	0					
ANR	2528967	ExpressionStatement	"eprintf ( ""No IO binded to r_anal\\n"" )"	69:3:1541:1577	2528893	0	True				
ANR	2528968	CallExpression	"eprintf ( ""No IO binded to r_anal\\n"" )"		2528893	0					
ANR	2528969	Callee	eprintf		2528893	0					
ANR	2528970	Identifier	eprintf		2528893	0					
ANR	2528971	ArgumentList	"""No IO binded to r_anal\\n"""		2528893	1					
ANR	2528972	Argument	"""No IO binded to r_anal\\n"""		2528893	0					
ANR	2528973	PrimaryExpression	"""No IO binded to r_anal\\n"""		2528893	0					
ANR	2528974	ElseStatement	else		2528893	0					
ANR	2528975	CompoundStatement		11:8:278:278	2528893	0					
ANR	2528976	IfStatement	if ( val -> reg )		2528893	0					
ANR	2528977	Condition	val -> reg	72:6:1599:1606	2528893	0	True				
ANR	2528978	PtrMemberAccess	val -> reg		2528893	0					
ANR	2528979	Identifier	val		2528893	0					
ANR	2528980	Identifier	reg		2528893	1					
ANR	2528981	CompoundStatement		12:16:296:296	2528893	1					
ANR	2528982	ExpressionStatement	"r_reg_set_value ( anal -> reg , val -> reg , num )"	73:3:1614:1656	2528893	0	True				
ANR	2528983	CallExpression	"r_reg_set_value ( anal -> reg , val -> reg , num )"		2528893	0					
ANR	2528984	Callee	r_reg_set_value		2528893	0					
ANR	2528985	Identifier	r_reg_set_value		2528893	0					
ANR	2528986	ArgumentList	anal -> reg		2528893	1					
ANR	2528987	Argument	anal -> reg		2528893	0					
ANR	2528988	PtrMemberAccess	anal -> reg		2528893	0					
ANR	2528989	Identifier	anal		2528893	0					
ANR	2528990	Identifier	reg		2528893	1					
ANR	2528991	Argument	val -> reg		2528893	1					
ANR	2528992	PtrMemberAccess	val -> reg		2528893	0					
ANR	2528993	Identifier	val		2528893	0					
ANR	2528994	Identifier	reg		2528893	1					
ANR	2528995	Argument	num		2528893	2					
ANR	2528996	Identifier	num		2528893	0					
ANR	2528997	ReturnStatement	return false ;	76:1:1666:1678	2528893	1	True				
ANR	2528998	Identifier	false		2528893	0					
ANR	2528999	ReturnType	R_API int		2528893	1					
ANR	2529000	Identifier	r_anal_value_set_ut64		2528893	2					
ANR	2529001	ParameterList	"RAnal * anal , RAnalValue * val , ut64 num"		2528893	3					
ANR	2529002	Parameter	RAnal * anal	61:32:1272:1282	2528893	0	True				
ANR	2529003	ParameterType	RAnal *		2528893	0					
ANR	2529004	Identifier	anal		2528893	1					
ANR	2529005	Parameter	RAnalValue * val	61:45:1285:1299	2528893	1	True				
ANR	2529006	ParameterType	RAnalValue *		2528893	0					
ANR	2529007	Identifier	val		2528893	1					
ANR	2529008	Parameter	ut64 num	61:62:1302:1309	2528893	2	True				
ANR	2529009	ParameterType	ut64		2528893	0					
ANR	2529010	Identifier	num		2528893	1					
ANR	2529011	CFGEntryNode	ENTRY		2528893		True				
ANR	2529012	CFGExitNode	EXIT		2528893		True				
ANR	2529013	Symbol	val		2528893						
ANR	2529014	Symbol	anal -> reg		2528893						
ANR	2529015	Symbol	data		2528893						
ANR	2529016	Symbol	num		2528893						
ANR	2529017	Symbol	false		2528893						
ANR	2529018	Symbol	* val		2528893						
ANR	2529019	Symbol	r_anal_value_to_ut64		2528893						
ANR	2529020	Symbol	* anal		2528893						
ANR	2529021	Symbol	anal		2528893						
ANR	2529022	Symbol	val -> memref		2528893						
ANR	2529023	Symbol	val -> reg		2528893						
ANR	2529024	Symbol	anal -> iob		2528893						
ANR	2529025	Symbol	addr		2528893						
ANR	2529026	Symbol	anal -> iob . io		2528893						
ANR	2529027	Function	r_anal_value_to_string	79:0:1709:2944							
ANR	2529028	FunctionDef	r_anal_value_to_string (RAnalValue * value)		2529027	0					
ANR	2529029	CompoundStatement		79:55:1764:2944	2529027	0					
ANR	2529030	IdentifierDeclStatement	char * out = NULL ;	80:1:1767:1783	2529027	0	True				
ANR	2529031	IdentifierDecl	* out = NULL		2529027	0					
ANR	2529032	IdentifierDeclType	char *		2529027	0					
ANR	2529033	Identifier	out		2529027	1					
ANR	2529034	AssignmentExpression	* out = NULL		2529027	2		=			
ANR	2529035	Identifier	NULL		2529027	0					
ANR	2529036	Identifier	NULL		2529027	1					
ANR	2529037	IfStatement	if ( value )		2529027	1					
ANR	2529038	Condition	value	81:5:1790:1794	2529027	0	True				
ANR	2529039	Identifier	value		2529027	0					
ANR	2529040	CompoundStatement		3:12:32:32	2529027	1					
ANR	2529041	ExpressionStatement	"out = r_str_new ( """" )"	82:2:1801:1821	2529027	0	True				
ANR	2529042	AssignmentExpression	"out = r_str_new ( """" )"		2529027	0		=			
ANR	2529043	Identifier	out		2529027	0					
ANR	2529044	CallExpression	"r_str_new ( """" )"		2529027	1					
ANR	2529045	Callee	r_str_new		2529027	0					
ANR	2529046	Identifier	r_str_new		2529027	0					
ANR	2529047	ArgumentList	""""""		2529027	1					
ANR	2529048	Argument	""""""		2529027	0					
ANR	2529049	PrimaryExpression	""""""		2529027	0					
ANR	2529050	IfStatement	if ( ! value -> base && ! value -> reg )		2529027	1					
ANR	2529051	Condition	! value -> base && ! value -> reg	83:6:1829:1855	2529027	0	True				
ANR	2529052	AndExpression	! value -> base && ! value -> reg		2529027	0		&&			
ANR	2529053	UnaryOperationExpression	! value -> base		2529027	0					
ANR	2529054	UnaryOperator	!		2529027	0					
ANR	2529055	PtrMemberAccess	value -> base		2529027	1					
ANR	2529056	Identifier	value		2529027	0					
ANR	2529057	Identifier	base		2529027	1					
ANR	2529058	UnaryOperationExpression	! value -> reg		2529027	1					
ANR	2529059	UnaryOperator	!		2529027	0					
ANR	2529060	PtrMemberAccess	value -> reg		2529027	1					
ANR	2529061	Identifier	value		2529027	0					
ANR	2529062	Identifier	reg		2529027	1					
ANR	2529063	CompoundStatement		5:35:93:93	2529027	1					
ANR	2529064	Statement	if	84:3:1863:1864	2529027	0	True				
ANR	2529065	Statement	(	84:6:1866:1866	2529027	1	True				
ANR	2529066	Statement	value	84:7:1867:1871	2529027	2	True				
ANR	2529067	Statement	->	84:12:1872:1873	2529027	3	True				
ANR	2529068	Statement	imm	84:14:1874:1876	2529027	4	True				
ANR	2529069	Statement	!=	84:18:1878:1879	2529027	5	True				
ANR	2529070	Statement	-	84:21:1881:1881	2529027	6	True				
ANR	2529071	Statement	1L	84:22:1882:1883	2529027	7	True				
ANR	2529072	Statement	L	84:24:1884:1884	2529027	8	True				
ANR	2529073	Statement	)	84:25:1885:1885	2529027	9	True				
ANR	2529074	CompoundStatement		6:27:122:122	2529027	10					
ANR	2529075	Statement	out	85:4:1893:1895	2529027	0	True				
ANR	2529076	Statement	=	85:8:1897:1897	2529027	1	True				
ANR	2529077	Statement	r_str_appendf	85:10:1899:1911	2529027	2	True				
ANR	2529078	Statement	(	85:24:1913:1913	2529027	3	True				
ANR	2529079	Statement	out	85:25:1914:1916	2529027	4	True				
ANR	2529080	Statement	","	85:28:1917:1917	2529027	5	True				
ANR	2529081	Statement	"""0x%"""	85:30:1919:1923	2529027	6	True				
ANR	2529082	Statement	PFMT64x	85:35:1924:1930	2529027	7	True				
ANR	2529083	Statement	","	85:42:1931:1931	2529027	8	True				
ANR	2529084	Statement	value	85:44:1933:1937	2529027	9	True				
ANR	2529085	Statement	->	85:49:1938:1939	2529027	10	True				
ANR	2529086	Statement	imm	85:51:1940:1942	2529027	11	True				
ANR	2529087	Statement	)	85:54:1943:1943	2529027	12	True				
ANR	2529088	ExpressionStatement		85:55:1944:1944	2529027	13	True				
ANR	2529089	ElseStatement	else		2529027	0					
ANR	2529090	CompoundStatement		8:10:191:191	2529027	0					
ANR	2529091	ExpressionStatement	"out = r_str_append ( out , ""-1"" )"	87:4:1962:1992	2529027	0	True				
ANR	2529092	AssignmentExpression	"out = r_str_append ( out , ""-1"" )"		2529027	0		=			
ANR	2529093	Identifier	out		2529027	0					
ANR	2529094	CallExpression	"r_str_append ( out , ""-1"" )"		2529027	1					
ANR	2529095	Callee	r_str_append		2529027	0					
ANR	2529096	Identifier	r_str_append		2529027	0					
ANR	2529097	ArgumentList	out		2529027	1					
ANR	2529098	Argument	out		2529027	0					
ANR	2529099	Identifier	out		2529027	0					
ANR	2529100	Argument	"""-1"""		2529027	1					
ANR	2529101	PrimaryExpression	"""-1"""		2529027	0					
ANR	2529102	ElseStatement	else		2529027	0					
ANR	2529103	CompoundStatement		11:9:243:243	2529027	0					
ANR	2529104	IfStatement	if ( value -> memref )		2529027	0					
ANR	2529105	Condition	value -> memref	90:7:2017:2029	2529027	0	True				
ANR	2529106	PtrMemberAccess	value -> memref		2529027	0					
ANR	2529107	Identifier	value		2529027	0					
ANR	2529108	Identifier	memref		2529027	1					
ANR	2529109	CompoundStatement		12:22:267:267	2529027	1					
ANR	2529110	SwitchStatement	switch ( value -> memref )		2529027	0					
ANR	2529111	Condition	value -> memref	91:12:2046:2058	2529027	0	True				
ANR	2529112	PtrMemberAccess	value -> memref		2529027	0					
ANR	2529113	Identifier	value		2529027	0					
ANR	2529114	Identifier	memref		2529027	1					
ANR	2529115	CompoundStatement		13:27:296:296	2529027	1					
ANR	2529116	Label	case 1 :	92:4:2067:2073	2529027	0	True				
ANR	2529117	ExpressionStatement	"out = r_str_append ( out , ""(char)"" )"	92:12:2075:2109	2529027	1	True				
ANR	2529118	AssignmentExpression	"out = r_str_append ( out , ""(char)"" )"		2529027	0		=			
ANR	2529119	Identifier	out		2529027	0					
ANR	2529120	CallExpression	"r_str_append ( out , ""(char)"" )"		2529027	1					
ANR	2529121	Callee	r_str_append		2529027	0					
ANR	2529122	Identifier	r_str_append		2529027	0					
ANR	2529123	ArgumentList	out		2529027	1					
ANR	2529124	Argument	out		2529027	0					
ANR	2529125	Identifier	out		2529027	0					
ANR	2529126	Argument	"""(char)"""		2529027	1					
ANR	2529127	PrimaryExpression	"""(char)"""		2529027	0					
ANR	2529128	BreakStatement	break ;	92:48:2111:2116	2529027	2	True				
ANR	2529129	Label	case 2 :	93:4:2122:2128	2529027	3	True				
ANR	2529130	ExpressionStatement	"out = r_str_append ( out , ""(short)"" )"	93:12:2130:2165	2529027	4	True				
ANR	2529131	AssignmentExpression	"out = r_str_append ( out , ""(short)"" )"		2529027	0		=			
ANR	2529132	Identifier	out		2529027	0					
ANR	2529133	CallExpression	"r_str_append ( out , ""(short)"" )"		2529027	1					
ANR	2529134	Callee	r_str_append		2529027	0					
ANR	2529135	Identifier	r_str_append		2529027	0					
ANR	2529136	ArgumentList	out		2529027	1					
ANR	2529137	Argument	out		2529027	0					
ANR	2529138	Identifier	out		2529027	0					
ANR	2529139	Argument	"""(short)"""		2529027	1					
ANR	2529140	PrimaryExpression	"""(short)"""		2529027	0					
ANR	2529141	BreakStatement	break ;	93:49:2167:2172	2529027	5	True				
ANR	2529142	Label	case 4 :	94:4:2178:2184	2529027	6	True				
ANR	2529143	ExpressionStatement	"out = r_str_append ( out , ""(word)"" )"	94:12:2186:2220	2529027	7	True				
ANR	2529144	AssignmentExpression	"out = r_str_append ( out , ""(word)"" )"		2529027	0		=			
ANR	2529145	Identifier	out		2529027	0					
ANR	2529146	CallExpression	"r_str_append ( out , ""(word)"" )"		2529027	1					
ANR	2529147	Callee	r_str_append		2529027	0					
ANR	2529148	Identifier	r_str_append		2529027	0					
ANR	2529149	ArgumentList	out		2529027	1					
ANR	2529150	Argument	out		2529027	0					
ANR	2529151	Identifier	out		2529027	0					
ANR	2529152	Argument	"""(word)"""		2529027	1					
ANR	2529153	PrimaryExpression	"""(word)"""		2529027	0					
ANR	2529154	BreakStatement	break ;	94:48:2222:2227	2529027	8	True				
ANR	2529155	Label	case 8 :	95:4:2233:2239	2529027	9	True				
ANR	2529156	ExpressionStatement	"out = r_str_append ( out , ""(dword)"" )"	95:12:2241:2276	2529027	10	True				
ANR	2529157	AssignmentExpression	"out = r_str_append ( out , ""(dword)"" )"		2529027	0		=			
ANR	2529158	Identifier	out		2529027	0					
ANR	2529159	CallExpression	"r_str_append ( out , ""(dword)"" )"		2529027	1					
ANR	2529160	Callee	r_str_append		2529027	0					
ANR	2529161	Identifier	r_str_append		2529027	0					
ANR	2529162	ArgumentList	out		2529027	1					
ANR	2529163	Argument	out		2529027	0					
ANR	2529164	Identifier	out		2529027	0					
ANR	2529165	Argument	"""(dword)"""		2529027	1					
ANR	2529166	PrimaryExpression	"""(dword)"""		2529027	0					
ANR	2529167	BreakStatement	break ;	95:49:2278:2283	2529027	11	True				
ANR	2529168	ExpressionStatement	"out = r_str_append ( out , ""["" )"	97:4:2295:2324	2529027	1	True				
ANR	2529169	AssignmentExpression	"out = r_str_append ( out , ""["" )"		2529027	0		=			
ANR	2529170	Identifier	out		2529027	0					
ANR	2529171	CallExpression	"r_str_append ( out , ""["" )"		2529027	1					
ANR	2529172	Callee	r_str_append		2529027	0					
ANR	2529173	Identifier	r_str_append		2529027	0					
ANR	2529174	ArgumentList	out		2529027	1					
ANR	2529175	Argument	out		2529027	0					
ANR	2529176	Identifier	out		2529027	0					
ANR	2529177	Argument	"""["""		2529027	1					
ANR	2529178	PrimaryExpression	"""["""		2529027	0					
ANR	2529179	IfStatement	if ( value -> mul )		2529027	1					
ANR	2529180	Condition	value -> mul	99:7:2338:2347	2529027	0	True				
ANR	2529181	PtrMemberAccess	value -> mul		2529027	0					
ANR	2529182	Identifier	value		2529027	0					
ANR	2529183	Identifier	mul		2529027	1					
ANR	2529184	CompoundStatement		21:19:585:585	2529027	1					
ANR	2529185	ExpressionStatement	"out = r_str_appendf ( out , ""%d*"" , value -> mul )"	100:4:2356:2400	2529027	0	True				
ANR	2529186	AssignmentExpression	"out = r_str_appendf ( out , ""%d*"" , value -> mul )"		2529027	0		=			
ANR	2529187	Identifier	out		2529027	0					
ANR	2529188	CallExpression	"r_str_appendf ( out , ""%d*"" , value -> mul )"		2529027	1					
ANR	2529189	Callee	r_str_appendf		2529027	0					
ANR	2529190	Identifier	r_str_appendf		2529027	0					
ANR	2529191	ArgumentList	out		2529027	1					
ANR	2529192	Argument	out		2529027	0					
ANR	2529193	Identifier	out		2529027	0					
ANR	2529194	Argument	"""%d*"""		2529027	1					
ANR	2529195	PrimaryExpression	"""%d*"""		2529027	0					
ANR	2529196	Argument	value -> mul		2529027	2					
ANR	2529197	PtrMemberAccess	value -> mul		2529027	0					
ANR	2529198	Identifier	value		2529027	0					
ANR	2529199	Identifier	mul		2529027	1					
ANR	2529200	IfStatement	if ( value -> reg )		2529027	2					
ANR	2529201	Condition	value -> reg	102:7:2414:2423	2529027	0	True				
ANR	2529202	PtrMemberAccess	value -> reg		2529027	0					
ANR	2529203	Identifier	value		2529027	0					
ANR	2529204	Identifier	reg		2529027	1					
ANR	2529205	CompoundStatement		24:19:661:661	2529027	1					
ANR	2529206	ExpressionStatement	"out = r_str_appendf ( out , ""%s"" , value -> reg -> name )"	103:4:2432:2481	2529027	0	True				
ANR	2529207	AssignmentExpression	"out = r_str_appendf ( out , ""%s"" , value -> reg -> name )"		2529027	0		=			
ANR	2529208	Identifier	out		2529027	0					
ANR	2529209	CallExpression	"r_str_appendf ( out , ""%s"" , value -> reg -> name )"		2529027	1					
ANR	2529210	Callee	r_str_appendf		2529027	0					
ANR	2529211	Identifier	r_str_appendf		2529027	0					
ANR	2529212	ArgumentList	out		2529027	1					
ANR	2529213	Argument	out		2529027	0					
ANR	2529214	Identifier	out		2529027	0					
ANR	2529215	Argument	"""%s"""		2529027	1					
ANR	2529216	PrimaryExpression	"""%s"""		2529027	0					
ANR	2529217	Argument	value -> reg -> name		2529027	2					
ANR	2529218	PtrMemberAccess	value -> reg -> name		2529027	0					
ANR	2529219	PtrMemberAccess	value -> reg		2529027	0					
ANR	2529220	Identifier	value		2529027	0					
ANR	2529221	Identifier	reg		2529027	1					
ANR	2529222	Identifier	name		2529027	1					
ANR	2529223	IfStatement	if ( value -> regdelta )		2529027	3					
ANR	2529224	Condition	value -> regdelta	105:7:2495:2509	2529027	0	True				
ANR	2529225	PtrMemberAccess	value -> regdelta		2529027	0					
ANR	2529226	Identifier	value		2529027	0					
ANR	2529227	Identifier	regdelta		2529027	1					
ANR	2529228	CompoundStatement		27:24:747:747	2529027	1					
ANR	2529229	ExpressionStatement	"out = r_str_appendf ( out , ""+%s"" , value -> regdelta -> name )"	106:4:2518:2573	2529027	0	True				
ANR	2529230	AssignmentExpression	"out = r_str_appendf ( out , ""+%s"" , value -> regdelta -> name )"		2529027	0		=			
ANR	2529231	Identifier	out		2529027	0					
ANR	2529232	CallExpression	"r_str_appendf ( out , ""+%s"" , value -> regdelta -> name )"		2529027	1					
ANR	2529233	Callee	r_str_appendf		2529027	0					
ANR	2529234	Identifier	r_str_appendf		2529027	0					
ANR	2529235	ArgumentList	out		2529027	1					
ANR	2529236	Argument	out		2529027	0					
ANR	2529237	Identifier	out		2529027	0					
ANR	2529238	Argument	"""+%s"""		2529027	1					
ANR	2529239	PrimaryExpression	"""+%s"""		2529027	0					
ANR	2529240	Argument	value -> regdelta -> name		2529027	2					
ANR	2529241	PtrMemberAccess	value -> regdelta -> name		2529027	0					
ANR	2529242	PtrMemberAccess	value -> regdelta		2529027	0					
ANR	2529243	Identifier	value		2529027	0					
ANR	2529244	Identifier	regdelta		2529027	1					
ANR	2529245	Identifier	name		2529027	1					
ANR	2529246	IfStatement	if ( value -> base != 0 )		2529027	4					
ANR	2529247	Condition	value -> base != 0	108:7:2587:2602	2529027	0	True				
ANR	2529248	EqualityExpression	value -> base != 0		2529027	0		!=			
ANR	2529249	PtrMemberAccess	value -> base		2529027	0					
ANR	2529250	Identifier	value		2529027	0					
ANR	2529251	Identifier	base		2529027	1					
ANR	2529252	PrimaryExpression	0		2529027	1					
ANR	2529253	CompoundStatement		30:25:840:840	2529027	1					
ANR	2529254	Statement	out	109:4:2611:2613	2529027	0	True				
ANR	2529255	Statement	=	109:8:2615:2615	2529027	1	True				
ANR	2529256	Statement	r_str_appendf	109:10:2617:2629	2529027	2	True				
ANR	2529257	Statement	(	109:24:2631:2631	2529027	3	True				
ANR	2529258	Statement	out	109:25:2632:2634	2529027	4	True				
ANR	2529259	Statement	","	109:28:2635:2635	2529027	5	True				
ANR	2529260	Statement	"""0x%"""	109:30:2637:2641	2529027	6	True				
ANR	2529261	Statement	PFMT64x	109:36:2643:2649	2529027	7	True				
ANR	2529262	Statement	","	109:43:2650:2650	2529027	8	True				
ANR	2529263	Statement	value	109:45:2652:2656	2529027	9	True				
ANR	2529264	Statement	->	109:50:2657:2658	2529027	10	True				
ANR	2529265	Statement	base	109:52:2659:2662	2529027	11	True				
ANR	2529266	Statement	)	109:56:2663:2663	2529027	12	True				
ANR	2529267	ExpressionStatement		109:57:2664:2664	2529027	13	True				
ANR	2529268	IfStatement	if ( value -> delta > 0 )		2529027	5					
ANR	2529269	Condition	value -> delta > 0	111:7:2678:2693	2529027	0	True				
ANR	2529270	RelationalExpression	value -> delta > 0		2529027	0		>			
ANR	2529271	PtrMemberAccess	value -> delta		2529027	0					
ANR	2529272	Identifier	value		2529027	0					
ANR	2529273	Identifier	delta		2529027	1					
ANR	2529274	PrimaryExpression	0		2529027	1					
ANR	2529275	CompoundStatement		33:25:931:931	2529027	1					
ANR	2529276	Statement	out	112:4:2702:2704	2529027	0	True				
ANR	2529277	Statement	=	112:8:2706:2706	2529027	1	True				
ANR	2529278	Statement	r_str_appendf	112:10:2708:2720	2529027	2	True				
ANR	2529279	Statement	(	112:24:2722:2722	2529027	3	True				
ANR	2529280	Statement	out	112:25:2723:2725	2529027	4	True				
ANR	2529281	Statement	","	112:28:2726:2726	2529027	5	True				
ANR	2529282	Statement	"""+0x%"""	112:30:2728:2733	2529027	6	True				
ANR	2529283	Statement	PFMT64x	112:37:2735:2741	2529027	7	True				
ANR	2529284	Statement	","	112:44:2742:2742	2529027	8	True				
ANR	2529285	Statement	value	112:46:2744:2748	2529027	9	True				
ANR	2529286	Statement	->	112:51:2749:2750	2529027	10	True				
ANR	2529287	Statement	delta	112:53:2751:2755	2529027	11	True				
ANR	2529288	Statement	)	112:58:2756:2756	2529027	12	True				
ANR	2529289	ExpressionStatement		112:59:2757:2757	2529027	13	True				
ANR	2529290	ElseStatement	else		2529027	0					
ANR	2529291	IfStatement	if ( value -> delta < 0 )		2529027	0					
ANR	2529292	Condition	value -> delta < 0	113:14:2773:2788	2529027	0	True				
ANR	2529293	RelationalExpression	value -> delta < 0		2529027	0		<			
ANR	2529294	PtrMemberAccess	value -> delta		2529027	0					
ANR	2529295	Identifier	value		2529027	0					
ANR	2529296	Identifier	delta		2529027	1					
ANR	2529297	PrimaryExpression	0		2529027	1					
ANR	2529298	CompoundStatement		35:32:1026:1026	2529027	1					
ANR	2529299	Statement	out	114:4:2797:2799	2529027	0	True				
ANR	2529300	Statement	=	114:8:2801:2801	2529027	1	True				
ANR	2529301	Statement	r_str_appendf	114:10:2803:2815	2529027	2	True				
ANR	2529302	Statement	(	114:24:2817:2817	2529027	3	True				
ANR	2529303	Statement	out	114:25:2818:2820	2529027	4	True				
ANR	2529304	Statement	","	114:28:2821:2821	2529027	5	True				
ANR	2529305	Statement	"""-0x%"""	114:30:2823:2828	2529027	6	True				
ANR	2529306	Statement	PFMT64x	114:37:2830:2836	2529027	7	True				
ANR	2529307	Statement	","	114:44:2837:2837	2529027	8	True				
ANR	2529308	Statement	-	114:46:2839:2839	2529027	9	True				
ANR	2529309	Statement	value	114:47:2840:2844	2529027	10	True				
ANR	2529310	Statement	->	114:52:2845:2846	2529027	11	True				
ANR	2529311	Statement	delta	114:54:2847:2851	2529027	12	True				
ANR	2529312	Statement	)	114:59:2852:2852	2529027	13	True				
ANR	2529313	ExpressionStatement		114:60:2853:2853	2529027	14	True				
ANR	2529314	IfStatement	if ( value -> memref )		2529027	6					
ANR	2529315	Condition	value -> memref	116:7:2867:2879	2529027	0	True				
ANR	2529316	PtrMemberAccess	value -> memref		2529027	0					
ANR	2529317	Identifier	value		2529027	0					
ANR	2529318	Identifier	memref		2529027	1					
ANR	2529319	CompoundStatement		38:22:1117:1117	2529027	1					
ANR	2529320	ExpressionStatement	"out = r_str_append ( out , ""]"" )"	117:4:2888:2917	2529027	0	True				
ANR	2529321	AssignmentExpression	"out = r_str_append ( out , ""]"" )"		2529027	0		=			
ANR	2529322	Identifier	out		2529027	0					
ANR	2529323	CallExpression	"r_str_append ( out , ""]"" )"		2529027	1					
ANR	2529324	Callee	r_str_append		2529027	0					
ANR	2529325	Identifier	r_str_append		2529027	0					
ANR	2529326	ArgumentList	out		2529027	1					
ANR	2529327	Argument	out		2529027	0					
ANR	2529328	Identifier	out		2529027	0					
ANR	2529329	Argument	"""]"""		2529027	1					
ANR	2529330	PrimaryExpression	"""]"""		2529027	0					
ANR	2529331	ReturnStatement	return out ;	121:1:2932:2942	2529027	2	True				
ANR	2529332	Identifier	out		2529027	0					
ANR	2529333	ReturnType	R_API char *		2529027	1					
ANR	2529334	Identifier	r_anal_value_to_string		2529027	2					
ANR	2529335	ParameterList	RAnalValue * value		2529027	3					
ANR	2529336	Parameter	RAnalValue * value	79:36:1745:1761	2529027	0	True				
ANR	2529337	ParameterType	RAnalValue *		2529027	0					
ANR	2529338	Identifier	value		2529027	1					
ANR	2529339	CFGEntryNode	ENTRY		2529027		True				
ANR	2529340	CFGExitNode	EXIT		2529027		True				
ANR	2529341	Symbol	r_str_append		2529027						
ANR	2529342	Symbol	* value -> regdelta		2529027						
ANR	2529343	Symbol	NULL		2529027						
ANR	2529344	Symbol	* * value		2529027						
ANR	2529345	Symbol	value -> mul		2529027						
ANR	2529346	Symbol	value -> regdelta -> name		2529027						
ANR	2529347	Symbol	value -> base		2529027						
ANR	2529348	Symbol	out		2529027						
ANR	2529349	Symbol	* value		2529027						
ANR	2529350	Symbol	r_str_appendf		2529027						
ANR	2529351	Symbol	value -> memref		2529027						
ANR	2529352	Symbol	* value -> reg		2529027						
ANR	2529353	Symbol	value -> reg -> name		2529027						
ANR	2529354	Symbol	value -> reg		2529027						
ANR	2529355	Symbol	value -> delta		2529027						
ANR	2529356	Symbol	value -> regdelta		2529027						
ANR	2529357	Symbol	value		2529027						
ANR	2529358	Symbol	r_str_new		2529027						
