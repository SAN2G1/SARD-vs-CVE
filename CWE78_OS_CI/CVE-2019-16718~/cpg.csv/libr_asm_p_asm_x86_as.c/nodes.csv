command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3510443	File	data/converged/CVE-2019-16718~_radare2/libr_asm_p_asm_x86_as.c								
ANR	3510444	Function	assemble	12:0:175:1751							
ANR	3510445	FunctionDef	"assemble (RAsm * a , RAsmOp * op , const char * buf)"		3510444	0					
ANR	3510446	CompoundStatement		12:58:233:1751	3510444	0					
ANR	3510447	IdentifierDeclStatement	"char * ipath , * opath ;"	13:1:236:255	3510444	0	True				
ANR	3510448	IdentifierDecl	* ipath		3510444	0					
ANR	3510449	IdentifierDeclType	char *		3510444	0					
ANR	3510450	Identifier	ipath		3510444	1					
ANR	3510451	IdentifierDecl	* opath		3510444	1					
ANR	3510452	IdentifierDeclType	char *		3510444	0					
ANR	3510453	Identifier	opath		3510444	1					
ANR	3510454	IdentifierDeclStatement	"const char * syntaxstr = """" ;"	14:1:258:284	3510444	1	True				
ANR	3510455	IdentifierDecl	"* syntaxstr = """""		3510444	0					
ANR	3510456	IdentifierDeclType	const char *		3510444	0					
ANR	3510457	Identifier	syntaxstr		3510444	1					
ANR	3510458	AssignmentExpression	"* syntaxstr = """""		3510444	2		=			
ANR	3510459	Identifier	syntaxstr		3510444	0					
ANR	3510460	PrimaryExpression	""""""		3510444	1					
ANR	3510461	IdentifierDeclStatement	int len = 0 ;	15:1:287:298	3510444	2	True				
ANR	3510462	IdentifierDecl	len = 0		3510444	0					
ANR	3510463	IdentifierDeclType	int		3510444	0					
ANR	3510464	Identifier	len		3510444	1					
ANR	3510465	AssignmentExpression	len = 0		3510444	2		=			
ANR	3510466	Identifier	len		3510444	0					
ANR	3510467	PrimaryExpression	0		3510444	1					
ANR	3510468	IdentifierDeclStatement	"int ifd = r_file_mkstemp ( ""r_as"" , & ipath ) ;"	17:1:302:343	3510444	3	True				
ANR	3510469	IdentifierDecl	"ifd = r_file_mkstemp ( ""r_as"" , & ipath )"		3510444	0					
ANR	3510470	IdentifierDeclType	int		3510444	0					
ANR	3510471	Identifier	ifd		3510444	1					
ANR	3510472	AssignmentExpression	"ifd = r_file_mkstemp ( ""r_as"" , & ipath )"		3510444	2		=			
ANR	3510473	Identifier	ifd		3510444	0					
ANR	3510474	CallExpression	"r_file_mkstemp ( ""r_as"" , & ipath )"		3510444	1					
ANR	3510475	Callee	r_file_mkstemp		3510444	0					
ANR	3510476	Identifier	r_file_mkstemp		3510444	0					
ANR	3510477	ArgumentList	"""r_as"""		3510444	1					
ANR	3510478	Argument	"""r_as"""		3510444	0					
ANR	3510479	PrimaryExpression	"""r_as"""		3510444	0					
ANR	3510480	Argument	& ipath		3510444	1					
ANR	3510481	UnaryOperationExpression	& ipath		3510444	0					
ANR	3510482	UnaryOperator	&		3510444	0					
ANR	3510483	Identifier	ipath		3510444	1					
ANR	3510484	IfStatement	if ( ifd == - 1 )		3510444	4					
ANR	3510485	Condition	ifd == - 1	18:5:350:358	3510444	0	True				
ANR	3510486	EqualityExpression	ifd == - 1		3510444	0		==			
ANR	3510487	Identifier	ifd		3510444	0					
ANR	3510488	UnaryOperationExpression	- 1		3510444	1					
ANR	3510489	UnaryOperator	-		3510444	0					
ANR	3510490	PrimaryExpression	1		3510444	1					
ANR	3510491	CompoundStatement		7:16:127:127	3510444	1					
ANR	3510492	ReturnStatement	return - 1 ;	19:2:365:374	3510444	0	True				
ANR	3510493	UnaryOperationExpression	- 1		3510444	0					
ANR	3510494	UnaryOperator	-		3510444	0					
ANR	3510495	PrimaryExpression	1		3510444	1					
ANR	3510496	IdentifierDeclStatement	"int ofd = r_file_mkstemp ( ""r_as"" , & opath ) ;"	22:1:381:422	3510444	5	True				
ANR	3510497	IdentifierDecl	"ofd = r_file_mkstemp ( ""r_as"" , & opath )"		3510444	0					
ANR	3510498	IdentifierDeclType	int		3510444	0					
ANR	3510499	Identifier	ofd		3510444	1					
ANR	3510500	AssignmentExpression	"ofd = r_file_mkstemp ( ""r_as"" , & opath )"		3510444	2		=			
ANR	3510501	Identifier	ofd		3510444	0					
ANR	3510502	CallExpression	"r_file_mkstemp ( ""r_as"" , & opath )"		3510444	1					
ANR	3510503	Callee	r_file_mkstemp		3510444	0					
ANR	3510504	Identifier	r_file_mkstemp		3510444	0					
ANR	3510505	ArgumentList	"""r_as"""		3510444	1					
ANR	3510506	Argument	"""r_as"""		3510444	0					
ANR	3510507	PrimaryExpression	"""r_as"""		3510444	0					
ANR	3510508	Argument	& opath		3510444	1					
ANR	3510509	UnaryOperationExpression	& opath		3510444	0					
ANR	3510510	UnaryOperator	&		3510444	0					
ANR	3510511	Identifier	opath		3510444	1					
ANR	3510512	IfStatement	if ( ofd == - 1 )		3510444	6					
ANR	3510513	Condition	ofd == - 1	23:5:429:437	3510444	0	True				
ANR	3510514	EqualityExpression	ofd == - 1		3510444	0		==			
ANR	3510515	Identifier	ofd		3510444	0					
ANR	3510516	UnaryOperationExpression	- 1		3510444	1					
ANR	3510517	UnaryOperator	-		3510444	0					
ANR	3510518	PrimaryExpression	1		3510444	1					
ANR	3510519	CompoundStatement		12:16:206:206	3510444	1					
ANR	3510520	ExpressionStatement	free ( ipath )	24:2:444:456	3510444	0	True				
ANR	3510521	CallExpression	free ( ipath )		3510444	0					
ANR	3510522	Callee	free		3510444	0					
ANR	3510523	Identifier	free		3510444	0					
ANR	3510524	ArgumentList	ipath		3510444	1					
ANR	3510525	Argument	ipath		3510444	0					
ANR	3510526	Identifier	ipath		3510444	0					
ANR	3510527	ExpressionStatement	close ( ifd )	25:2:460:471	3510444	1	True				
ANR	3510528	CallExpression	close ( ifd )		3510444	0					
ANR	3510529	Callee	close		3510444	0					
ANR	3510530	Identifier	close		3510444	0					
ANR	3510531	ArgumentList	ifd		3510444	1					
ANR	3510532	Argument	ifd		3510444	0					
ANR	3510533	Identifier	ifd		3510444	0					
ANR	3510534	ReturnStatement	return - 1 ;	26:2:475:484	3510444	2	True				
ANR	3510535	UnaryOperationExpression	- 1		3510444	0					
ANR	3510536	UnaryOperator	-		3510444	0					
ANR	3510537	PrimaryExpression	1		3510444	1					
ANR	3510538	IfStatement	if ( a -> syntax == R_ASM_SYNTAX_INTEL )		3510444	7					
ANR	3510539	Condition	a -> syntax == R_ASM_SYNTAX_INTEL	29:5:495:525	3510444	0	True				
ANR	3510540	EqualityExpression	a -> syntax == R_ASM_SYNTAX_INTEL		3510444	0		==			
ANR	3510541	PtrMemberAccess	a -> syntax		3510444	0					
ANR	3510542	Identifier	a		3510444	0					
ANR	3510543	Identifier	syntax		3510444	1					
ANR	3510544	Identifier	R_ASM_SYNTAX_INTEL		3510444	1					
ANR	3510545	CompoundStatement		18:38:294:294	3510444	1					
ANR	3510546	ExpressionStatement	"syntaxstr = "".intel_syntax noprefix\\n"""	30:2:532:570	3510444	0	True				
ANR	3510547	AssignmentExpression	"syntaxstr = "".intel_syntax noprefix\\n"""		3510444	0		=			
ANR	3510548	Identifier	syntaxstr		3510444	0					
ANR	3510549	PrimaryExpression	""".intel_syntax noprefix\\n"""		3510444	1					
ANR	3510550	IfStatement	if ( a -> syntax == R_ASM_SYNTAX_ATT )		3510444	8					
ANR	3510551	Condition	a -> syntax == R_ASM_SYNTAX_ATT	33:5:581:609	3510444	0	True				
ANR	3510552	EqualityExpression	a -> syntax == R_ASM_SYNTAX_ATT		3510444	0		==			
ANR	3510553	PtrMemberAccess	a -> syntax		3510444	0					
ANR	3510554	Identifier	a		3510444	0					
ANR	3510555	Identifier	syntax		3510444	1					
ANR	3510556	Identifier	R_ASM_SYNTAX_ATT		3510444	1					
ANR	3510557	CompoundStatement		22:36:378:378	3510444	1					
ANR	3510558	ExpressionStatement	"syntaxstr = "".att_syntax\\n"""	34:2:616:643	3510444	0	True				
ANR	3510559	AssignmentExpression	"syntaxstr = "".att_syntax\\n"""		3510444	0		=			
ANR	3510560	Identifier	syntaxstr		3510444	0					
ANR	3510561	PrimaryExpression	""".att_syntax\\n"""		3510444	1					
ANR	3510562	Statement	char	37:1:650:653	3510444	9	True				
ANR	3510563	Statement	*	37:6:655:655	3510444	10	True				
ANR	3510564	Statement	asm_buf	37:7:656:662	3510444	11	True				
ANR	3510565	Statement	=	37:15:664:664	3510444	12	True				
ANR	3510566	Statement	r_str_newf	37:17:666:675	3510444	13	True				
ANR	3510567	Statement	(	37:28:677:677	3510444	14	True				
ANR	3510568	Statement	"""%s.code%i\\n"""	38:3:682:694	3510444	15	True				
ANR	3510569	Statement	""".ascii \\""BEGINMARK\\""\\n"""	39:3:722:745	3510444	16	True				
ANR	3510570	Statement	"""%s\\n"""	40:3:750:755	3510444	17	True				
ANR	3510571	Statement	""".ascii \\""ENDMARK\\""\\n"""	41:3:760:781	3510444	18	True				
ANR	3510572	Statement	","	41:25:782:782	3510444	19	True				
ANR	3510573	Statement	syntaxstr	42:3:787:795	3510444	20	True				
ANR	3510574	Statement	","	42:12:796:796	3510444	21	True				
ANR	3510575	Statement	a	42:14:798:798	3510444	22	True				
ANR	3510576	Statement	->	42:15:799:800	3510444	23	True				
ANR	3510577	Statement	bits	42:17:801:804	3510444	24	True				
ANR	3510578	Statement	","	42:21:805:805	3510444	25	True				
ANR	3510579	Statement	buf	42:23:807:809	3510444	26	True				
ANR	3510580	Statement	)	42:26:810:810	3510444	27	True				
ANR	3510581	ExpressionStatement		42:27:811:811	3510444	28	True				
ANR	3510582	ExpressionStatement	"write ( ifd , asm_buf , strlen ( asm_buf ) )"	43:1:826:864	3510444	29	True				
ANR	3510583	CallExpression	"write ( ifd , asm_buf , strlen ( asm_buf ) )"		3510444	0					
ANR	3510584	Callee	write		3510444	0					
ANR	3510585	Identifier	write		3510444	0					
ANR	3510586	ArgumentList	ifd		3510444	1					
ANR	3510587	Argument	ifd		3510444	0					
ANR	3510588	Identifier	ifd		3510444	0					
ANR	3510589	Argument	asm_buf		3510444	1					
ANR	3510590	Identifier	asm_buf		3510444	0					
ANR	3510591	Argument	strlen ( asm_buf )		3510444	2					
ANR	3510592	CallExpression	strlen ( asm_buf )		3510444	0					
ANR	3510593	Callee	strlen		3510444	0					
ANR	3510594	Identifier	strlen		3510444	0					
ANR	3510595	ArgumentList	asm_buf		3510444	1					
ANR	3510596	Argument	asm_buf		3510444	0					
ANR	3510597	Identifier	asm_buf		3510444	0					
ANR	3510598	ExpressionStatement	close ( ifd )	44:1:867:878	3510444	30	True				
ANR	3510599	CallExpression	close ( ifd )		3510444	0					
ANR	3510600	Callee	close		3510444	0					
ANR	3510601	Identifier	close		3510444	0					
ANR	3510602	ArgumentList	ifd		3510444	1					
ANR	3510603	Argument	ifd		3510444	0					
ANR	3510604	Identifier	ifd		3510444	0					
ANR	3510605	ExpressionStatement	free ( asm_buf )	45:1:881:895	3510444	31	True				
ANR	3510606	CallExpression	free ( asm_buf )		3510444	0					
ANR	3510607	Callee	free		3510444	0					
ANR	3510608	Identifier	free		3510444	0					
ANR	3510609	ArgumentList	asm_buf		3510444	1					
ANR	3510610	Argument	asm_buf		3510444	0					
ANR	3510611	Identifier	asm_buf		3510444	0					
ANR	3510612	IfStatement	"if ( ! r_sys_cmdf ( ""as %s -o %s"" , ipath , opath ) )"		3510444	32					
ANR	3510613	Condition	"! r_sys_cmdf ( ""as %s -o %s"" , ipath , opath )"	47:5:903:943	3510444	0	True				
ANR	3510614	UnaryOperationExpression	"! r_sys_cmdf ( ""as %s -o %s"" , ipath , opath )"		3510444	0					
ANR	3510615	UnaryOperator	!		3510444	0					
ANR	3510616	CallExpression	"r_sys_cmdf ( ""as %s -o %s"" , ipath , opath )"		3510444	1					
ANR	3510617	Callee	r_sys_cmdf		3510444	0					
ANR	3510618	Identifier	r_sys_cmdf		3510444	0					
ANR	3510619	ArgumentList	"""as %s -o %s"""		3510444	1					
ANR	3510620	Argument	"""as %s -o %s"""		3510444	0					
ANR	3510621	PrimaryExpression	"""as %s -o %s"""		3510444	0					
ANR	3510622	Argument	ipath		3510444	1					
ANR	3510623	Identifier	ipath		3510444	0					
ANR	3510624	Argument	opath		3510444	2					
ANR	3510625	Identifier	opath		3510444	0					
ANR	3510626	CompoundStatement		46:2:916:936	3510444	1					
ANR	3510627	IdentifierDeclStatement	"const ut8 * begin , * end ;"	48:2:950:972	3510444	0	True				
ANR	3510628	IdentifierDecl	* begin		3510444	0					
ANR	3510629	IdentifierDeclType	const ut8 *		3510444	0					
ANR	3510630	Identifier	begin		3510444	1					
ANR	3510631	IdentifierDecl	* end		3510444	1					
ANR	3510632	IdentifierDeclType	const ut8 *		3510444	0					
ANR	3510633	Identifier	end		3510444	1					
ANR	3510634	ExpressionStatement	close ( ofd )	49:2:976:987	3510444	1	True				
ANR	3510635	CallExpression	close ( ofd )		3510444	0					
ANR	3510636	Callee	close		3510444	0					
ANR	3510637	Identifier	close		3510444	0					
ANR	3510638	ArgumentList	ofd		3510444	1					
ANR	3510639	Argument	ofd		3510444	0					
ANR	3510640	Identifier	ofd		3510444	0					
ANR	3510641	ExpressionStatement	"ofd = r_sandbox_open ( opath , O_BINARY | O_RDONLY , 0644 )"	51:2:1024:1077	3510444	2	True				
ANR	3510642	AssignmentExpression	"ofd = r_sandbox_open ( opath , O_BINARY | O_RDONLY , 0644 )"		3510444	0		=			
ANR	3510643	Identifier	ofd		3510444	0					
ANR	3510644	CallExpression	"r_sandbox_open ( opath , O_BINARY | O_RDONLY , 0644 )"		3510444	1					
ANR	3510645	Callee	r_sandbox_open		3510444	0					
ANR	3510646	Identifier	r_sandbox_open		3510444	0					
ANR	3510647	ArgumentList	opath		3510444	1					
ANR	3510648	Argument	opath		3510444	0					
ANR	3510649	Identifier	opath		3510444	0					
ANR	3510650	Argument	O_BINARY | O_RDONLY		3510444	1					
ANR	3510651	InclusiveOrExpression	O_BINARY | O_RDONLY		3510444	0		|			
ANR	3510652	Identifier	O_BINARY		3510444	0					
ANR	3510653	Identifier	O_RDONLY		3510444	1					
ANR	3510654	Argument	0644		3510444	2					
ANR	3510655	PrimaryExpression	0644		3510444	0					
ANR	3510656	IfStatement	if ( ofd < 0 )		3510444	3					
ANR	3510657	Condition	ofd < 0	52:6:1085:1091	3510444	0	True				
ANR	3510658	RelationalExpression	ofd < 0		3510444	0		<			
ANR	3510659	Identifier	ofd		3510444	0					
ANR	3510660	PrimaryExpression	0		3510444	1					
ANR	3510661	CompoundStatement		41:15:860:860	3510444	1					
ANR	3510662	ExpressionStatement	free ( ipath )	53:3:1099:1111	3510444	0	True				
ANR	3510663	CallExpression	free ( ipath )		3510444	0					
ANR	3510664	Callee	free		3510444	0					
ANR	3510665	Identifier	free		3510444	0					
ANR	3510666	ArgumentList	ipath		3510444	1					
ANR	3510667	Argument	ipath		3510444	0					
ANR	3510668	Identifier	ipath		3510444	0					
ANR	3510669	ExpressionStatement	free ( opath )	54:3:1116:1128	3510444	1	True				
ANR	3510670	CallExpression	free ( opath )		3510444	0					
ANR	3510671	Callee	free		3510444	0					
ANR	3510672	Identifier	free		3510444	0					
ANR	3510673	ArgumentList	opath		3510444	1					
ANR	3510674	Argument	opath		3510444	0					
ANR	3510675	Identifier	opath		3510444	0					
ANR	3510676	ReturnStatement	return - 1 ;	55:3:1133:1142	3510444	2	True				
ANR	3510677	UnaryOperationExpression	- 1		3510444	0					
ANR	3510678	UnaryOperator	-		3510444	0					
ANR	3510679	PrimaryExpression	1		3510444	1					
ANR	3510680	IdentifierDeclStatement	ut8 opbuf [ 512 ] = { 0 } ;	57:2:1150:1170	3510444	4	True				
ANR	3510681	IdentifierDecl	opbuf [ 512 ] = { 0 }		3510444	0					
ANR	3510682	IdentifierDeclType	ut8 [ 512 ]		3510444	0					
ANR	3510683	Identifier	opbuf		3510444	1					
ANR	3510684	PrimaryExpression	512		3510444	2					
ANR	3510685	AssignmentExpression	opbuf [ 512 ] = { 0 }		3510444	3		=			
ANR	3510686	Identifier	opbuf		3510444	0					
ANR	3510687	InitializerList	0		3510444	1					
ANR	3510688	PrimaryExpression	0		3510444	0					
ANR	3510689	ExpressionStatement	"len = read ( ofd , opbuf , sizeof ( opbuf ) )"	58:2:1174:1213	3510444	5	True				
ANR	3510690	AssignmentExpression	"len = read ( ofd , opbuf , sizeof ( opbuf ) )"		3510444	0		=			
ANR	3510691	Identifier	len		3510444	0					
ANR	3510692	CallExpression	"read ( ofd , opbuf , sizeof ( opbuf ) )"		3510444	1					
ANR	3510693	Callee	read		3510444	0					
ANR	3510694	Identifier	read		3510444	0					
ANR	3510695	ArgumentList	ofd		3510444	1					
ANR	3510696	Argument	ofd		3510444	0					
ANR	3510697	Identifier	ofd		3510444	0					
ANR	3510698	Argument	opbuf		3510444	1					
ANR	3510699	Identifier	opbuf		3510444	0					
ANR	3510700	Argument	sizeof ( opbuf )		3510444	2					
ANR	3510701	SizeofExpression	sizeof ( opbuf )		3510444	0					
ANR	3510702	Sizeof	sizeof		3510444	0					
ANR	3510703	SizeofOperand	opbuf		3510444	1					
ANR	3510704	ExpressionStatement	"begin = r_mem_mem ( opbuf , len , ( const ut8 * ) ""BEGINMARK"" , 9 )"	59:2:1217:1275	3510444	6	True				
ANR	3510705	AssignmentExpression	"begin = r_mem_mem ( opbuf , len , ( const ut8 * ) ""BEGINMARK"" , 9 )"		3510444	0		=			
ANR	3510706	Identifier	begin		3510444	0					
ANR	3510707	CallExpression	"r_mem_mem ( opbuf , len , ( const ut8 * ) ""BEGINMARK"" , 9 )"		3510444	1					
ANR	3510708	Callee	r_mem_mem		3510444	0					
ANR	3510709	Identifier	r_mem_mem		3510444	0					
ANR	3510710	ArgumentList	opbuf		3510444	1					
ANR	3510711	Argument	opbuf		3510444	0					
ANR	3510712	Identifier	opbuf		3510444	0					
ANR	3510713	Argument	len		3510444	1					
ANR	3510714	Identifier	len		3510444	0					
ANR	3510715	Argument	"( const ut8 * ) ""BEGINMARK"""		3510444	2					
ANR	3510716	CastExpression	"( const ut8 * ) ""BEGINMARK"""		3510444	0					
ANR	3510717	CastTarget	const ut8 *		3510444	0					
ANR	3510718	PrimaryExpression	"""BEGINMARK"""		3510444	1					
ANR	3510719	Argument	9		3510444	3					
ANR	3510720	PrimaryExpression	9		3510444	0					
ANR	3510721	ExpressionStatement	"end = r_mem_mem ( opbuf , len , ( const ut8 * ) ""ENDMARK"" , 7 )"	60:2:1279:1333	3510444	7	True				
ANR	3510722	AssignmentExpression	"end = r_mem_mem ( opbuf , len , ( const ut8 * ) ""ENDMARK"" , 7 )"		3510444	0		=			
ANR	3510723	Identifier	end		3510444	0					
ANR	3510724	CallExpression	"r_mem_mem ( opbuf , len , ( const ut8 * ) ""ENDMARK"" , 7 )"		3510444	1					
ANR	3510725	Callee	r_mem_mem		3510444	0					
ANR	3510726	Identifier	r_mem_mem		3510444	0					
ANR	3510727	ArgumentList	opbuf		3510444	1					
ANR	3510728	Argument	opbuf		3510444	0					
ANR	3510729	Identifier	opbuf		3510444	0					
ANR	3510730	Argument	len		3510444	1					
ANR	3510731	Identifier	len		3510444	0					
ANR	3510732	Argument	"( const ut8 * ) ""ENDMARK"""		3510444	2					
ANR	3510733	CastExpression	"( const ut8 * ) ""ENDMARK"""		3510444	0					
ANR	3510734	CastTarget	const ut8 *		3510444	0					
ANR	3510735	PrimaryExpression	"""ENDMARK"""		3510444	1					
ANR	3510736	Argument	7		3510444	3					
ANR	3510737	PrimaryExpression	7		3510444	0					
ANR	3510738	IfStatement	if ( ! begin || ! end )		3510444	8					
ANR	3510739	Condition	! begin || ! end	61:6:1341:1354	3510444	0	True				
ANR	3510740	OrExpression	! begin || ! end		3510444	0		||			
ANR	3510741	UnaryOperationExpression	! begin		3510444	0					
ANR	3510742	UnaryOperator	!		3510444	0					
ANR	3510743	Identifier	begin		3510444	1					
ANR	3510744	UnaryOperationExpression	! end		3510444	1					
ANR	3510745	UnaryOperator	!		3510444	0					
ANR	3510746	Identifier	end		3510444	1					
ANR	3510747	CompoundStatement		50:22:1123:1123	3510444	1					
ANR	3510748	ExpressionStatement	"eprintf ( ""Cannot find water marks\\n"" )"	62:3:1362:1399	3510444	0	True				
ANR	3510749	CallExpression	"eprintf ( ""Cannot find water marks\\n"" )"		3510444	0					
ANR	3510750	Callee	eprintf		3510444	0					
ANR	3510751	Identifier	eprintf		3510444	0					
ANR	3510752	ArgumentList	"""Cannot find water marks\\n"""		3510444	1					
ANR	3510753	Argument	"""Cannot find water marks\\n"""		3510444	0					
ANR	3510754	PrimaryExpression	"""Cannot find water marks\\n"""		3510444	0					
ANR	3510755	ExpressionStatement	len = 0	63:3:1404:1411	3510444	1	True				
ANR	3510756	AssignmentExpression	len = 0		3510444	0		=			
ANR	3510757	Identifier	len		3510444	0					
ANR	3510758	PrimaryExpression	0		3510444	1					
ANR	3510759	ElseStatement	else		3510444	0					
ANR	3510760	CompoundStatement		53:9:1188:1188	3510444	0					
ANR	3510761	ExpressionStatement	len = ( int ) ( size_t ) ( end - begin - 9 )	65:3:1427:1463	3510444	0	True				
ANR	3510762	AssignmentExpression	len = ( int ) ( size_t ) ( end - begin - 9 )		3510444	0		=			
ANR	3510763	Identifier	len		3510444	0					
ANR	3510764	CastExpression	( int ) ( size_t ) ( end - begin - 9 )		3510444	1					
ANR	3510765	CastTarget	int		3510444	0					
ANR	3510766	CastExpression	( size_t ) ( end - begin - 9 )		3510444	1					
ANR	3510767	CastTarget	size_t		3510444	0					
ANR	3510768	AdditiveExpression	end - begin - 9		3510444	1		-			
ANR	3510769	Identifier	end		3510444	0					
ANR	3510770	AdditiveExpression	begin - 9		3510444	1		-			
ANR	3510771	Identifier	begin		3510444	0					
ANR	3510772	PrimaryExpression	9		3510444	1					
ANR	3510773	IfStatement	if ( len > 0 )		3510444	1					
ANR	3510774	Condition	len > 0	66:7:1472:1478	3510444	0	True				
ANR	3510775	RelationalExpression	len > 0		3510444	0		>			
ANR	3510776	Identifier	len		3510444	0					
ANR	3510777	PrimaryExpression	0		3510444	1					
ANR	3510778	CompoundStatement		55:16:1247:1247	3510444	1					
ANR	3510779	ExpressionStatement	"r_asm_op_set_buf ( op , begin + 9 , len )"	67:4:1487:1524	3510444	0	True				
ANR	3510780	CallExpression	"r_asm_op_set_buf ( op , begin + 9 , len )"		3510444	0					
ANR	3510781	Callee	r_asm_op_set_buf		3510444	0					
ANR	3510782	Identifier	r_asm_op_set_buf		3510444	0					
ANR	3510783	ArgumentList	op		3510444	1					
ANR	3510784	Argument	op		3510444	0					
ANR	3510785	Identifier	op		3510444	0					
ANR	3510786	Argument	begin + 9		3510444	1					
ANR	3510787	AdditiveExpression	begin + 9		3510444	0		+			
ANR	3510788	Identifier	begin		3510444	0					
ANR	3510789	PrimaryExpression	9		3510444	1					
ANR	3510790	Argument	len		3510444	2					
ANR	3510791	Identifier	len		3510444	0					
ANR	3510792	ElseStatement	else		3510444	0					
ANR	3510793	CompoundStatement		57:10:1302:1302	3510444	0					
ANR	3510794	ExpressionStatement	len = 0	69:4:1542:1549	3510444	0	True				
ANR	3510795	AssignmentExpression	len = 0		3510444	0		=			
ANR	3510796	Identifier	len		3510444	0					
ANR	3510797	PrimaryExpression	0		3510444	1					
ANR	3510798	ElseStatement	else		3510444	0					
ANR	3510799	CompoundStatement		61:8:1334:1334	3510444	0					
ANR	3510800	ExpressionStatement	"eprintf ( ""Error running: as %s -o %s"" , ipath , opath )"	73:2:1572:1624	3510444	0	True				
ANR	3510801	CallExpression	"eprintf ( ""Error running: as %s -o %s"" , ipath , opath )"		3510444	0					
ANR	3510802	Callee	eprintf		3510444	0					
ANR	3510803	Identifier	eprintf		3510444	0					
ANR	3510804	ArgumentList	"""Error running: as %s -o %s"""		3510444	1					
ANR	3510805	Argument	"""Error running: as %s -o %s"""		3510444	0					
ANR	3510806	PrimaryExpression	"""Error running: as %s -o %s"""		3510444	0					
ANR	3510807	Argument	ipath		3510444	1					
ANR	3510808	Identifier	ipath		3510444	0					
ANR	3510809	Argument	opath		3510444	2					
ANR	3510810	Identifier	opath		3510444	0					
ANR	3510811	ExpressionStatement	len = 0	74:2:1628:1635	3510444	1	True				
ANR	3510812	AssignmentExpression	len = 0		3510444	0		=			
ANR	3510813	Identifier	len		3510444	0					
ANR	3510814	PrimaryExpression	0		3510444	1					
ANR	3510815	ExpressionStatement	close ( ofd )	77:1:1642:1653	3510444	33	True				
ANR	3510816	CallExpression	close ( ofd )		3510444	0					
ANR	3510817	Callee	close		3510444	0					
ANR	3510818	Identifier	close		3510444	0					
ANR	3510819	ArgumentList	ofd		3510444	1					
ANR	3510820	Argument	ofd		3510444	0					
ANR	3510821	Identifier	ofd		3510444	0					
ANR	3510822	ExpressionStatement	unlink ( ipath )	79:1:1657:1671	3510444	34	True				
ANR	3510823	CallExpression	unlink ( ipath )		3510444	0					
ANR	3510824	Callee	unlink		3510444	0					
ANR	3510825	Identifier	unlink		3510444	0					
ANR	3510826	ArgumentList	ipath		3510444	1					
ANR	3510827	Argument	ipath		3510444	0					
ANR	3510828	Identifier	ipath		3510444	0					
ANR	3510829	ExpressionStatement	unlink ( opath )	80:1:1674:1688	3510444	35	True				
ANR	3510830	CallExpression	unlink ( opath )		3510444	0					
ANR	3510831	Callee	unlink		3510444	0					
ANR	3510832	Identifier	unlink		3510444	0					
ANR	3510833	ArgumentList	opath		3510444	1					
ANR	3510834	Argument	opath		3510444	0					
ANR	3510835	Identifier	opath		3510444	0					
ANR	3510836	ExpressionStatement	free ( ipath )	81:1:1691:1703	3510444	36	True				
ANR	3510837	CallExpression	free ( ipath )		3510444	0					
ANR	3510838	Callee	free		3510444	0					
ANR	3510839	Identifier	free		3510444	0					
ANR	3510840	ArgumentList	ipath		3510444	1					
ANR	3510841	Argument	ipath		3510444	0					
ANR	3510842	Identifier	ipath		3510444	0					
ANR	3510843	ExpressionStatement	free ( opath )	82:1:1706:1718	3510444	37	True				
ANR	3510844	CallExpression	free ( opath )		3510444	0					
ANR	3510845	Callee	free		3510444	0					
ANR	3510846	Identifier	free		3510444	0					
ANR	3510847	ArgumentList	opath		3510444	1					
ANR	3510848	Argument	opath		3510444	0					
ANR	3510849	Identifier	opath		3510444	0					
ANR	3510850	ExpressionStatement	op -> size = len	84:1:1722:1736	3510444	38	True				
ANR	3510851	AssignmentExpression	op -> size = len		3510444	0		=			
ANR	3510852	PtrMemberAccess	op -> size		3510444	0					
ANR	3510853	Identifier	op		3510444	0					
ANR	3510854	Identifier	size		3510444	1					
ANR	3510855	Identifier	len		3510444	1					
ANR	3510856	ReturnStatement	return len ;	85:1:1739:1749	3510444	39	True				
ANR	3510857	Identifier	len		3510444	0					
ANR	3510858	ReturnType	static int		3510444	1					
ANR	3510859	Identifier	assemble		3510444	2					
ANR	3510860	ParameterList	"RAsm * a , RAsmOp * op , const char * buf"		3510444	3					
ANR	3510861	Parameter	RAsm * a	12:20:195:201	3510444	0	True				
ANR	3510862	ParameterType	RAsm *		3510444	0					
ANR	3510863	Identifier	a		3510444	1					
ANR	3510864	Parameter	RAsmOp * op	12:29:204:213	3510444	1	True				
ANR	3510865	ParameterType	RAsmOp *		3510444	0					
ANR	3510866	Identifier	op		3510444	1					
ANR	3510867	Parameter	const char * buf	12:41:216:230	3510444	2	True				
ANR	3510868	ParameterType	const char *		3510444	0					
ANR	3510869	Identifier	buf		3510444	1					
ANR	3510870	CFGEntryNode	ENTRY		3510444		True				
ANR	3510871	CFGExitNode	EXIT		3510444		True				
ANR	3510872	Symbol	R_ASM_SYNTAX_INTEL		3510444						
ANR	3510873	Symbol	& opath		3510444						
ANR	3510874	Symbol	opath		3510444						
ANR	3510875	Symbol	O_BINARY		3510444						
ANR	3510876	Symbol	* op		3510444						
ANR	3510877	Symbol	r_mem_mem		3510444						
ANR	3510878	Symbol	asm_buf		3510444						
ANR	3510879	Symbol	strlen		3510444						
ANR	3510880	Symbol	len		3510444						
ANR	3510881	Symbol	& ipath		3510444						
ANR	3510882	Symbol	end		3510444						
ANR	3510883	Symbol	a		3510444						
ANR	3510884	Symbol	op		3510444						
ANR	3510885	Symbol	opbuf		3510444						
ANR	3510886	Symbol	read		3510444						
ANR	3510887	Symbol	ifd		3510444						
ANR	3510888	Symbol	* a		3510444						
ANR	3510889	Symbol	ofd		3510444						
ANR	3510890	Symbol	buf		3510444						
ANR	3510891	Symbol	ipath		3510444						
ANR	3510892	Symbol	r_sys_cmdf		3510444						
ANR	3510893	Symbol	r_sandbox_open		3510444						
ANR	3510894	Symbol	O_RDONLY		3510444						
ANR	3510895	Symbol	syntaxstr		3510444						
ANR	3510896	Symbol	a -> syntax		3510444						
ANR	3510897	Symbol	R_ASM_SYNTAX_ATT		3510444						
ANR	3510898	Symbol	op -> size		3510444						
ANR	3510899	Symbol	begin		3510444						
ANR	3510900	Symbol	r_file_mkstemp		3510444						
ANR	3510901	DeclStmt									
ANR	3510902	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_x86_as
ANR	3510903	DeclStmt									
ANR	3510904	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
