command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2129170	File	data/converged/CVE-2019-16718~_radare2/indent.c								
ANR	2129171	Function	doIndent	5:0:70:236							
ANR	2129172	FunctionDef	"doIndent (int idt , char * * o , const char * tab)"		2129171	0					
ANR	2129173	CompoundStatement		5:57:127:236	2129171	0					
ANR	2129174	IdentifierDeclStatement	int i ;	6:1:130:135	2129171	0	True				
ANR	2129175	IdentifierDecl	i		2129171	0					
ANR	2129176	IdentifierDeclType	int		2129171	0					
ANR	2129177	Identifier	i		2129171	1					
ANR	2129178	IdentifierDeclStatement	char * x ;	7:1:138:145	2129171	1	True				
ANR	2129179	IdentifierDecl	* x		2129171	0					
ANR	2129180	IdentifierDeclType	char *		2129171	0					
ANR	2129181	Identifier	x		2129171	1					
ANR	2129182	ForStatement	for ( i = 0 ; i < idt ; i ++ )		2129171	2					
ANR	2129183	ForInit	i = 0 ;	8:6:153:158	2129171	0	True				
ANR	2129184	AssignmentExpression	i = 0		2129171	0		=			
ANR	2129185	Identifier	i		2129171	0					
ANR	2129186	PrimaryExpression	0		2129171	1					
ANR	2129187	Condition	i < idt	8:13:160:166	2129171	1	True				
ANR	2129188	RelationalExpression	i < idt		2129171	0		<			
ANR	2129189	Identifier	i		2129171	0					
ANR	2129190	Identifier	idt		2129171	1					
ANR	2129191	PostIncDecOperationExpression	i ++	8:22:169:171	2129171	2	True				
ANR	2129192	Identifier	i		2129171	0					
ANR	2129193	IncDec	++		2129171	1					
ANR	2129194	CompoundStatement		4:27:46:46	2129171	3					
ANR	2129195	ForStatement	for ( x = ( char * ) tab ; * x ; x ++ )		2129171	0					
ANR	2129196	ForInit	x = ( char * ) tab ;	9:7:183:199	2129171	0	True				
ANR	2129197	AssignmentExpression	x = ( char * ) tab		2129171	0		=			
ANR	2129198	Identifier	x		2129171	0					
ANR	2129199	CastExpression	( char * ) tab		2129171	1					
ANR	2129200	CastTarget	char *		2129171	0					
ANR	2129201	Identifier	tab		2129171	1					
ANR	2129202	Condition	* x	9:25:201:202	2129171	1	True				
ANR	2129203	UnaryOperationExpression	* x		2129171	0					
ANR	2129204	UnaryOperator	*		2129171	0					
ANR	2129205	Identifier	x		2129171	1					
ANR	2129206	PostIncDecOperationExpression	x ++	9:29:205:207	2129171	2	True				
ANR	2129207	Identifier	x		2129171	0					
ANR	2129208	IncDec	++		2129171	1					
ANR	2129209	CompoundStatement		5:34:82:82	2129171	3					
ANR	2129210	ExpressionStatement	* ( * o ) ++ = * x	10:3:215:227	2129171	0	True				
ANR	2129211	AssignmentExpression	* ( * o ) ++ = * x		2129171	0		=			
ANR	2129212	UnaryOperationExpression	* ( * o ) ++		2129171	0					
ANR	2129213	UnaryOperator	*		2129171	0					
ANR	2129214	PostIncDecOperationExpression	( * o ) ++		2129171	1					
ANR	2129215	UnaryOperationExpression	* o		2129171	0					
ANR	2129216	UnaryOperator	*		2129171	0					
ANR	2129217	Identifier	o		2129171	1					
ANR	2129218	IncDec	++		2129171	1					
ANR	2129219	UnaryOperationExpression	* x		2129171	1					
ANR	2129220	UnaryOperator	*		2129171	0					
ANR	2129221	Identifier	x		2129171	1					
ANR	2129222	ReturnType	static void		2129171	1					
ANR	2129223	Identifier	doIndent		2129171	2					
ANR	2129224	ParameterList	"int idt , char * * o , const char * tab"		2129171	3					
ANR	2129225	Parameter	int idt	5:21:91:97	2129171	0	True				
ANR	2129226	ParameterType	int		2129171	0					
ANR	2129227	Identifier	idt		2129171	1					
ANR	2129228	Parameter	char * * o	5:30:100:107	2129171	1	True				
ANR	2129229	ParameterType	char * *		2129171	0					
ANR	2129230	Identifier	o		2129171	1					
ANR	2129231	Parameter	const char * tab	5:40:110:124	2129171	2	True				
ANR	2129232	ParameterType	const char *		2129171	0					
ANR	2129233	Identifier	tab		2129171	1					
ANR	2129234	CFGEntryNode	ENTRY		2129171		True				
ANR	2129235	CFGExitNode	EXIT		2129171		True				
ANR	2129236	Symbol	* x		2129171						
ANR	2129237	Symbol	tab		2129171						
ANR	2129238	Symbol	* ( * o ) ++		2129171						
ANR	2129239	Symbol	idt		2129171						
ANR	2129240	Symbol	x		2129171						
ANR	2129241	Symbol	i		2129171						
ANR	2129242	Symbol	* o		2129171						
ANR	2129243	Symbol	o		2129171						
ANR	2129244	Function	sdb_json_indent	15:0:239:1914							
ANR	2129245	FunctionDef	"sdb_json_indent (const char * s , const char * tab)"		2129244	0					
ANR	2129246	CompoundStatement		15:62:301:1914	2129244	0					
ANR	2129247	IdentifierDeclStatement	"int idx , indent = 0 ;"	16:1:304:323	2129244	0	True				
ANR	2129248	IdentifierDecl	idx		2129244	0					
ANR	2129249	IdentifierDeclType	int		2129244	0					
ANR	2129250	Identifier	idx		2129244	1					
ANR	2129251	IdentifierDecl	indent = 0		2129244	1					
ANR	2129252	IdentifierDeclType	int		2129244	0					
ANR	2129253	Identifier	indent		2129244	1					
ANR	2129254	AssignmentExpression	indent = 0		2129244	2		=			
ANR	2129255	Identifier	indent		2129244	0					
ANR	2129256	PrimaryExpression	0		2129244	1					
ANR	2129257	IdentifierDeclStatement	int instr = 0 ;	17:1:326:339	2129244	1	True				
ANR	2129258	IdentifierDecl	instr = 0		2129244	0					
ANR	2129259	IdentifierDeclType	int		2129244	0					
ANR	2129260	Identifier	instr		2129244	1					
ANR	2129261	AssignmentExpression	instr = 0		2129244	2		=			
ANR	2129262	Identifier	instr		2129244	0					
ANR	2129263	PrimaryExpression	0		2129244	1					
ANR	2129264	IdentifierDeclStatement	size_t o_size = 0 ;	18:1:342:359	2129244	2	True				
ANR	2129265	IdentifierDecl	o_size = 0		2129244	0					
ANR	2129266	IdentifierDeclType	size_t		2129244	0					
ANR	2129267	Identifier	o_size		2129244	1					
ANR	2129268	AssignmentExpression	o_size = 0		2129244	2		=			
ANR	2129269	Identifier	o_size		2129244	0					
ANR	2129270	PrimaryExpression	0		2129244	1					
ANR	2129271	IdentifierDeclStatement	"char * o , * O ;"	19:1:362:373	2129244	3	True				
ANR	2129272	IdentifierDecl	* o		2129244	0					
ANR	2129273	IdentifierDeclType	char *		2129244	0					
ANR	2129274	Identifier	o		2129244	1					
ANR	2129275	IdentifierDecl	* O		2129244	1					
ANR	2129276	IdentifierDeclType	char *		2129244	0					
ANR	2129277	Identifier	O		2129244	1					
ANR	2129278	IfStatement	if ( ! s )		2129244	4					
ANR	2129279	Condition	! s	20:5:380:381	2129244	0	True				
ANR	2129280	UnaryOperationExpression	! s		2129244	0					
ANR	2129281	UnaryOperator	!		2129244	0					
ANR	2129282	Identifier	s		2129244	1					
ANR	2129283	CompoundStatement		6:9:82:82	2129244	1					
ANR	2129284	ReturnStatement	return NULL ;	21:2:388:399	2129244	0	True				
ANR	2129285	Identifier	NULL		2129244	0					
ANR	2129286	IdentifierDeclStatement	size_t tab_len = strlen ( tab ) ;	24:1:406:435	2129244	5	True				
ANR	2129287	IdentifierDecl	tab_len = strlen ( tab )		2129244	0					
ANR	2129288	IdentifierDeclType	size_t		2129244	0					
ANR	2129289	Identifier	tab_len		2129244	1					
ANR	2129290	AssignmentExpression	tab_len = strlen ( tab )		2129244	2		=			
ANR	2129291	Identifier	tab_len		2129244	0					
ANR	2129292	CallExpression	strlen ( tab )		2129244	1					
ANR	2129293	Callee	strlen		2129244	0					
ANR	2129294	Identifier	strlen		2129244	0					
ANR	2129295	ArgumentList	tab		2129244	1					
ANR	2129296	Argument	tab		2129244	0					
ANR	2129297	Identifier	tab		2129244	0					
ANR	2129298	ForStatement	for ( idx = 0 ; s [ idx ] ; idx ++ )		2129244	6					
ANR	2129299	ForInit	idx = 0 ;	25:6:443:450	2129244	0	True				
ANR	2129300	AssignmentExpression	idx = 0		2129244	0		=			
ANR	2129301	Identifier	idx		2129244	0					
ANR	2129302	PrimaryExpression	0		2129244	1					
ANR	2129303	Condition	s [ idx ]	25:15:452:457	2129244	1	True				
ANR	2129304	ArrayIndexing	s [ idx ]		2129244	0					
ANR	2129305	Identifier	s		2129244	0					
ANR	2129306	Identifier	idx		2129244	1					
ANR	2129307	PostIncDecOperationExpression	idx ++	25:23:460:464	2129244	2	True				
ANR	2129308	Identifier	idx		2129244	0					
ANR	2129309	IncDec	++		2129244	1					
ANR	2129310	CompoundStatement		11:30:165:165	2129244	3					
ANR	2129311	IfStatement	if ( o_size > INT_MAX - ( indent * tab_len + 2 ) )		2129244	0					
ANR	2129312	Condition	o_size > INT_MAX - ( indent * tab_len + 2 )	26:6:475:515	2129244	0	True				
ANR	2129313	RelationalExpression	o_size > INT_MAX - ( indent * tab_len + 2 )		2129244	0		>			
ANR	2129314	Identifier	o_size		2129244	0					
ANR	2129315	AdditiveExpression	INT_MAX - ( indent * tab_len + 2 )		2129244	1		-			
ANR	2129316	Identifier	INT_MAX		2129244	0					
ANR	2129317	AdditiveExpression	indent * tab_len + 2		2129244	1		+			
ANR	2129318	MultiplicativeExpression	indent * tab_len		2129244	0		*			
ANR	2129319	Identifier	indent		2129244	0					
ANR	2129320	Identifier	tab_len		2129244	1					
ANR	2129321	PrimaryExpression	2		2129244	1					
ANR	2129322	CompoundStatement		12:49:216:216	2129244	1					
ANR	2129323	ReturnStatement	return NULL ;	27:3:523:534	2129244	0	True				
ANR	2129324	Identifier	NULL		2129244	0					
ANR	2129325	IfStatement	if ( s [ idx ] == '{' || s [ idx ] == '[' )		2129244	1					
ANR	2129326	Condition	s [ idx ] == '{' || s [ idx ] == '['	30:6:547:576	2129244	0	True				
ANR	2129327	OrExpression	s [ idx ] == '{' || s [ idx ] == '['		2129244	0		||			
ANR	2129328	EqualityExpression	s [ idx ] == '{'		2129244	0		==			
ANR	2129329	ArrayIndexing	s [ idx ]		2129244	0					
ANR	2129330	Identifier	s		2129244	0					
ANR	2129331	Identifier	idx		2129244	1					
ANR	2129332	PrimaryExpression	'{'		2129244	1					
ANR	2129333	EqualityExpression	s [ idx ] == '['		2129244	1		==			
ANR	2129334	ArrayIndexing	s [ idx ]		2129244	0					
ANR	2129335	Identifier	s		2129244	0					
ANR	2129336	Identifier	idx		2129244	1					
ANR	2129337	PrimaryExpression	'['		2129244	1					
ANR	2129338	CompoundStatement		16:38:277:277	2129244	1					
ANR	2129339	ExpressionStatement	indent ++	31:3:584:592	2129244	0	True				
ANR	2129340	PostIncDecOperationExpression	indent ++		2129244	0					
ANR	2129341	Identifier	indent		2129244	0					
ANR	2129342	IncDec	++		2129244	1					
ANR	2129343	ExpressionStatement	o_size += indent * tab_len + 2	33:3:647:677	2129244	1	True				
ANR	2129344	AssignmentExpression	o_size += indent * tab_len + 2		2129244	0		+=			
ANR	2129345	Identifier	o_size		2129244	0					
ANR	2129346	AdditiveExpression	indent * tab_len + 2		2129244	1		+			
ANR	2129347	MultiplicativeExpression	indent * tab_len		2129244	0		*			
ANR	2129348	Identifier	indent		2129244	0					
ANR	2129349	Identifier	tab_len		2129244	1					
ANR	2129350	PrimaryExpression	2		2129244	1					
ANR	2129351	ElseStatement	else		2129244	0					
ANR	2129352	IfStatement	if ( s [ idx ] == '}' || s [ idx ] == ']' )		2129244	0					
ANR	2129353	Condition	s [ idx ] == '}' || s [ idx ] == ']'	34:13:692:721	2129244	0	True				
ANR	2129354	OrExpression	s [ idx ] == '}' || s [ idx ] == ']'		2129244	0		||			
ANR	2129355	EqualityExpression	s [ idx ] == '}'		2129244	0		==			
ANR	2129356	ArrayIndexing	s [ idx ]		2129244	0					
ANR	2129357	Identifier	s		2129244	0					
ANR	2129358	Identifier	idx		2129244	1					
ANR	2129359	PrimaryExpression	'}'		2129244	1					
ANR	2129360	EqualityExpression	s [ idx ] == ']'		2129244	1		==			
ANR	2129361	ArrayIndexing	s [ idx ]		2129244	0					
ANR	2129362	Identifier	s		2129244	0					
ANR	2129363	Identifier	idx		2129244	1					
ANR	2129364	PrimaryExpression	']'		2129244	1					
ANR	2129365	CompoundStatement		20:45:422:422	2129244	1					
ANR	2129366	IfStatement	if ( indent > 0 )		2129244	0					
ANR	2129367	Condition	indent > 0	35:7:733:742	2129244	0	True				
ANR	2129368	RelationalExpression	indent > 0		2129244	0		>			
ANR	2129369	Identifier	indent		2129244	0					
ANR	2129370	PrimaryExpression	0		2129244	1					
ANR	2129371	CompoundStatement		21:19:443:443	2129244	1					
ANR	2129372	ExpressionStatement	indent --	36:4:751:759	2129244	0	True				
ANR	2129373	PostIncDecOperationExpression	indent --		2129244	0					
ANR	2129374	Identifier	indent		2129244	0					
ANR	2129375	IncDec	--		2129244	1					
ANR	2129376	ExpressionStatement	o_size += indent * tab_len + 2	39:3:819:849	2129244	1	True				
ANR	2129377	AssignmentExpression	o_size += indent * tab_len + 2		2129244	0		+=			
ANR	2129378	Identifier	o_size		2129244	0					
ANR	2129379	AdditiveExpression	indent * tab_len + 2		2129244	1		+			
ANR	2129380	MultiplicativeExpression	indent * tab_len		2129244	0		*			
ANR	2129381	Identifier	indent		2129244	0					
ANR	2129382	Identifier	tab_len		2129244	1					
ANR	2129383	PrimaryExpression	2		2129244	1					
ANR	2129384	ElseStatement	else		2129244	0					
ANR	2129385	IfStatement	"if ( s [ idx ] == ',' )"		2129244	0					
ANR	2129386	Condition	"s [ idx ] == ','"	40:13:864:876	2129244	0	True				
ANR	2129387	EqualityExpression	"s [ idx ] == ','"		2129244	0		==			
ANR	2129388	ArrayIndexing	s [ idx ]		2129244	0					
ANR	2129389	Identifier	s		2129244	0					
ANR	2129390	Identifier	idx		2129244	1					
ANR	2129391	PrimaryExpression	"','"		2129244	1					
ANR	2129392	CompoundStatement		26:28:577:577	2129244	1					
ANR	2129393	ExpressionStatement	o_size += indent * tab_len + 2	42:3:924:954	2129244	0	True				
ANR	2129394	AssignmentExpression	o_size += indent * tab_len + 2		2129244	0		+=			
ANR	2129395	Identifier	o_size		2129244	0					
ANR	2129396	AdditiveExpression	indent * tab_len + 2		2129244	1		+			
ANR	2129397	MultiplicativeExpression	indent * tab_len		2129244	0		*			
ANR	2129398	Identifier	indent		2129244	0					
ANR	2129399	Identifier	tab_len		2129244	1					
ANR	2129400	PrimaryExpression	2		2129244	1					
ANR	2129401	ElseStatement	else		2129244	0					
ANR	2129402	IfStatement	if ( s [ idx ] == ':' )		2129244	0					
ANR	2129403	Condition	s [ idx ] == ':'	43:13:969:981	2129244	0	True				
ANR	2129404	EqualityExpression	s [ idx ] == ':'		2129244	0		==			
ANR	2129405	ArrayIndexing	s [ idx ]		2129244	0					
ANR	2129406	Identifier	s		2129244	0					
ANR	2129407	Identifier	idx		2129244	1					
ANR	2129408	PrimaryExpression	':'		2129244	1					
ANR	2129409	CompoundStatement		29:28:682:682	2129244	1					
ANR	2129410	ExpressionStatement	o_size += 2	44:3:989:1000	2129244	0	True				
ANR	2129411	AssignmentExpression	o_size += 2		2129244	0		+=			
ANR	2129412	Identifier	o_size		2129244	0					
ANR	2129413	PrimaryExpression	2		2129244	1					
ANR	2129414	ElseStatement	else		2129244	0					
ANR	2129415	CompoundStatement		31:9:709:709	2129244	0					
ANR	2129416	ExpressionStatement	o_size ++	46:3:1016:1024	2129244	0	True				
ANR	2129417	PostIncDecOperationExpression	o_size ++		2129244	0					
ANR	2129418	Identifier	o_size		2129244	0					
ANR	2129419	IncDec	++		2129244	1					
ANR	2129420	ExpressionStatement	o_size += 2	50:1:1074:1085	2129244	7	True				
ANR	2129421	AssignmentExpression	o_size += 2		2129244	0		+=			
ANR	2129422	Identifier	o_size		2129244	0					
ANR	2129423	PrimaryExpression	2		2129244	1					
ANR	2129424	ExpressionStatement	indent = 0	51:1:1088:1098	2129244	8	True				
ANR	2129425	AssignmentExpression	indent = 0		2129244	0		=			
ANR	2129426	Identifier	indent		2129244	0					
ANR	2129427	PrimaryExpression	0		2129244	1					
ANR	2129428	ExpressionStatement	O = malloc ( o_size + 1 )	53:1:1102:1125	2129244	9	True				
ANR	2129429	AssignmentExpression	O = malloc ( o_size + 1 )		2129244	0		=			
ANR	2129430	Identifier	O		2129244	0					
ANR	2129431	CallExpression	malloc ( o_size + 1 )		2129244	1					
ANR	2129432	Callee	malloc		2129244	0					
ANR	2129433	Identifier	malloc		2129244	0					
ANR	2129434	ArgumentList	o_size + 1		2129244	1					
ANR	2129435	Argument	o_size + 1		2129244	0					
ANR	2129436	AdditiveExpression	o_size + 1		2129244	0		+			
ANR	2129437	Identifier	o_size		2129244	0					
ANR	2129438	PrimaryExpression	1		2129244	1					
ANR	2129439	IfStatement	if ( ! O )		2129244	10					
ANR	2129440	Condition	! O	54:5:1132:1133	2129244	0	True				
ANR	2129441	UnaryOperationExpression	! O		2129244	0					
ANR	2129442	UnaryOperator	!		2129244	0					
ANR	2129443	Identifier	O		2129244	1					
ANR	2129444	CompoundStatement		40:9:834:834	2129244	1					
ANR	2129445	ReturnStatement	return NULL ;	55:2:1140:1151	2129244	0	True				
ANR	2129446	Identifier	NULL		2129244	0					
ANR	2129447	ForStatement	for ( o = O ; * s ; s ++ )		2129244	11					
ANR	2129448	ForInit	o = O ;	58:6:1163:1168	2129244	0	True				
ANR	2129449	AssignmentExpression	o = O		2129244	0		=			
ANR	2129450	Identifier	o		2129244	0					
ANR	2129451	Identifier	O		2129244	1					
ANR	2129452	Condition	* s	58:13:1170:1171	2129244	1	True				
ANR	2129453	UnaryOperationExpression	* s		2129244	0					
ANR	2129454	UnaryOperator	*		2129244	0					
ANR	2129455	Identifier	s		2129244	1					
ANR	2129456	PostIncDecOperationExpression	s ++	58:17:1174:1176	2129244	2	True				
ANR	2129457	Identifier	s		2129244	0					
ANR	2129458	IncDec	++		2129244	1					
ANR	2129459	CompoundStatement		44:22:877:877	2129244	3					
ANR	2129460	IfStatement	if ( instr )		2129244	0					
ANR	2129461	Condition	instr	59:6:1187:1191	2129244	0	True				
ANR	2129462	Identifier	instr		2129244	0					
ANR	2129463	CompoundStatement		45:13:892:892	2129244	1					
ANR	2129464	IfStatement	"if ( s [ 0 ] == '""' )"		2129244	0					
ANR	2129465	Condition	"s [ 0 ] == '""'"	60:7:1203:1213	2129244	0	True				
ANR	2129466	EqualityExpression	"s [ 0 ] == '""'"		2129244	0		==			
ANR	2129467	ArrayIndexing	s [ 0 ]		2129244	0					
ANR	2129468	Identifier	s		2129244	0					
ANR	2129469	PrimaryExpression	0		2129244	1					
ANR	2129470	PrimaryExpression	"'""'"		2129244	1					
ANR	2129471	CompoundStatement		46:20:914:914	2129244	1					
ANR	2129472	ExpressionStatement	instr = 0	61:4:1222:1231	2129244	0	True				
ANR	2129473	AssignmentExpression	instr = 0		2129244	0		=			
ANR	2129474	Identifier	instr		2129244	0					
ANR	2129475	PrimaryExpression	0		2129244	1					
ANR	2129476	ElseStatement	else		2129244	0					
ANR	2129477	IfStatement	"if ( s [ 0 ] == '\\\\' && s [ 1 ] == '""' )"		2129244	0					
ANR	2129478	Condition	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"	62:14:1247:1273	2129244	0	True				
ANR	2129479	AndExpression	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"		2129244	0		&&			
ANR	2129480	EqualityExpression	s [ 0 ] == '\\\\'		2129244	0		==			
ANR	2129481	ArrayIndexing	s [ 0 ]		2129244	0					
ANR	2129482	Identifier	s		2129244	0					
ANR	2129483	PrimaryExpression	0		2129244	1					
ANR	2129484	PrimaryExpression	'\\\\'		2129244	1					
ANR	2129485	EqualityExpression	"s [ 1 ] == '""'"		2129244	1		==			
ANR	2129486	ArrayIndexing	s [ 1 ]		2129244	0					
ANR	2129487	Identifier	s		2129244	0					
ANR	2129488	PrimaryExpression	1		2129244	1					
ANR	2129489	PrimaryExpression	"'""'"		2129244	1					
ANR	2129490	CompoundStatement		48:43:974:974	2129244	1					
ANR	2129491	ExpressionStatement	* o ++ = * s	63:4:1282:1291	2129244	0	True				
ANR	2129492	AssignmentExpression	* o ++ = * s		2129244	0		=			
ANR	2129493	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129494	UnaryOperator	*		2129244	0					
ANR	2129495	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129496	Identifier	o		2129244	0					
ANR	2129497	IncDec	++		2129244	1					
ANR	2129498	UnaryOperationExpression	* s		2129244	1					
ANR	2129499	UnaryOperator	*		2129244	0					
ANR	2129500	Identifier	s		2129244	1					
ANR	2129501	ExpressionStatement	* o ++ = * s	65:3:1301:1310	2129244	1	True				
ANR	2129502	AssignmentExpression	* o ++ = * s		2129244	0		=			
ANR	2129503	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129504	UnaryOperator	*		2129244	0					
ANR	2129505	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129506	Identifier	o		2129244	0					
ANR	2129507	IncDec	++		2129244	1					
ANR	2129508	UnaryOperationExpression	* s		2129244	1					
ANR	2129509	UnaryOperator	*		2129244	0					
ANR	2129510	Identifier	s		2129244	1					
ANR	2129511	ContinueStatement	continue ;	66:3:1315:1323	2129244	2	True				
ANR	2129512	ElseStatement	else		2129244	0					
ANR	2129513	CompoundStatement		53:9:1032:1032	2129244	0					
ANR	2129514	IfStatement	"if ( s [ 0 ] == '""' )"		2129244	0					
ANR	2129515	Condition	"s [ 0 ] == '""'"	68:7:1343:1353	2129244	0	True				
ANR	2129516	EqualityExpression	"s [ 0 ] == '""'"		2129244	0		==			
ANR	2129517	ArrayIndexing	s [ 0 ]		2129244	0					
ANR	2129518	Identifier	s		2129244	0					
ANR	2129519	PrimaryExpression	0		2129244	1					
ANR	2129520	PrimaryExpression	"'""'"		2129244	1					
ANR	2129521	CompoundStatement		54:20:1054:1054	2129244	1					
ANR	2129522	ExpressionStatement	instr = 1	69:4:1362:1371	2129244	0	True				
ANR	2129523	AssignmentExpression	instr = 1		2129244	0		=			
ANR	2129524	Identifier	instr		2129244	0					
ANR	2129525	PrimaryExpression	1		2129244	1					
ANR	2129526	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' )		2129244	1					
ANR	2129527	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '	72:6:1388:1438	2129244	0	True				
ANR	2129528	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '		2129244	0		||			
ANR	2129529	EqualityExpression	* s == '\\n'		2129244	0		==			
ANR	2129530	UnaryOperationExpression	* s		2129244	0					
ANR	2129531	UnaryOperator	*		2129244	0					
ANR	2129532	Identifier	s		2129244	1					
ANR	2129533	PrimaryExpression	'\\n'		2129244	1					
ANR	2129534	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' '		2129244	1		||			
ANR	2129535	EqualityExpression	* s == '\\r'		2129244	0		==			
ANR	2129536	UnaryOperationExpression	* s		2129244	0					
ANR	2129537	UnaryOperator	*		2129244	0					
ANR	2129538	Identifier	s		2129244	1					
ANR	2129539	PrimaryExpression	'\\r'		2129244	1					
ANR	2129540	OrExpression	* s == '\\t' || * s == ' '		2129244	1		||			
ANR	2129541	EqualityExpression	* s == '\\t'		2129244	0		==			
ANR	2129542	UnaryOperationExpression	* s		2129244	0					
ANR	2129543	UnaryOperator	*		2129244	0					
ANR	2129544	Identifier	s		2129244	1					
ANR	2129545	PrimaryExpression	'\\t'		2129244	1					
ANR	2129546	EqualityExpression	* s == ' '		2129244	1		==			
ANR	2129547	UnaryOperationExpression	* s		2129244	0					
ANR	2129548	UnaryOperator	*		2129244	0					
ANR	2129549	Identifier	s		2129244	1					
ANR	2129550	PrimaryExpression	' '		2129244	1					
ANR	2129551	CompoundStatement		58:59:1139:1139	2129244	1					
ANR	2129552	ContinueStatement	continue ;	73:3:1446:1454	2129244	0	True				
ANR	2129553	SwitchStatement	switch ( * s )		2129244	2					
ANR	2129554	Condition	* s	75:10:1470:1471	2129244	0	True				
ANR	2129555	UnaryOperationExpression	* s		2129244	0					
ANR	2129556	UnaryOperator	*		2129244	0					
ANR	2129557	Identifier	s		2129244	1					
ANR	2129558	CompoundStatement		61:14:1172:1172	2129244	1					
ANR	2129559	Label	case ':' :	76:2:1478:1486	2129244	0	True				
ANR	2129560	ExpressionStatement	* o ++ = * s	77:3:1491:1500	2129244	1	True				
ANR	2129561	AssignmentExpression	* o ++ = * s		2129244	0		=			
ANR	2129562	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129563	UnaryOperator	*		2129244	0					
ANR	2129564	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129565	Identifier	o		2129244	0					
ANR	2129566	IncDec	++		2129244	1					
ANR	2129567	UnaryOperationExpression	* s		2129244	1					
ANR	2129568	UnaryOperator	*		2129244	0					
ANR	2129569	Identifier	s		2129244	1					
ANR	2129570	ExpressionStatement	* o ++ = ' '	78:3:1505:1515	2129244	2	True				
ANR	2129571	AssignmentExpression	* o ++ = ' '		2129244	0		=			
ANR	2129572	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129573	UnaryOperator	*		2129244	0					
ANR	2129574	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129575	Identifier	o		2129244	0					
ANR	2129576	IncDec	++		2129244	1					
ANR	2129577	PrimaryExpression	' '		2129244	1					
ANR	2129578	BreakStatement	break ;	79:3:1520:1525	2129244	3	True				
ANR	2129579	Label	"case ',' :"	80:2:1529:1537	2129244	4	True				
ANR	2129580	ExpressionStatement	* o ++ = * s	81:3:1542:1551	2129244	5	True				
ANR	2129581	AssignmentExpression	* o ++ = * s		2129244	0		=			
ANR	2129582	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129583	UnaryOperator	*		2129244	0					
ANR	2129584	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129585	Identifier	o		2129244	0					
ANR	2129586	IncDec	++		2129244	1					
ANR	2129587	UnaryOperationExpression	* s		2129244	1					
ANR	2129588	UnaryOperator	*		2129244	0					
ANR	2129589	Identifier	s		2129244	1					
ANR	2129590	ExpressionStatement	* o ++ = '\\n'	82:3:1556:1567	2129244	6	True				
ANR	2129591	AssignmentExpression	* o ++ = '\\n'		2129244	0		=			
ANR	2129592	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129593	UnaryOperator	*		2129244	0					
ANR	2129594	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129595	Identifier	o		2129244	0					
ANR	2129596	IncDec	++		2129244	1					
ANR	2129597	PrimaryExpression	'\\n'		2129244	1					
ANR	2129598	ExpressionStatement	"doIndent ( indent , & o , tab )"	83:3:1572:1598	2129244	7	True				
ANR	2129599	CallExpression	"doIndent ( indent , & o , tab )"		2129244	0					
ANR	2129600	Callee	doIndent		2129244	0					
ANR	2129601	Identifier	doIndent		2129244	0					
ANR	2129602	ArgumentList	indent		2129244	1					
ANR	2129603	Argument	indent		2129244	0					
ANR	2129604	Identifier	indent		2129244	0					
ANR	2129605	Argument	& o		2129244	1					
ANR	2129606	UnaryOperationExpression	& o		2129244	0					
ANR	2129607	UnaryOperator	&		2129244	0					
ANR	2129608	Identifier	o		2129244	1					
ANR	2129609	Argument	tab		2129244	2					
ANR	2129610	Identifier	tab		2129244	0					
ANR	2129611	BreakStatement	break ;	84:3:1603:1608	2129244	8	True				
ANR	2129612	Label	case '{' :	85:2:1612:1620	2129244	9	True				
ANR	2129613	Label	case '[' :	86:2:1624:1632	2129244	10	True				
ANR	2129614	ExpressionStatement	* o ++ = * s	87:3:1637:1646	2129244	11	True				
ANR	2129615	AssignmentExpression	* o ++ = * s		2129244	0		=			
ANR	2129616	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129617	UnaryOperator	*		2129244	0					
ANR	2129618	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129619	Identifier	o		2129244	0					
ANR	2129620	IncDec	++		2129244	1					
ANR	2129621	UnaryOperationExpression	* s		2129244	1					
ANR	2129622	UnaryOperator	*		2129244	0					
ANR	2129623	Identifier	s		2129244	1					
ANR	2129624	ExpressionStatement	* o ++ = ( indent != - 1 ) ? '\\n' : ' '	88:3:1651:1683	2129244	12	True				
ANR	2129625	AssignmentExpression	* o ++ = ( indent != - 1 ) ? '\\n' : ' '		2129244	0		=			
ANR	2129626	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129627	UnaryOperator	*		2129244	0					
ANR	2129628	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129629	Identifier	o		2129244	0					
ANR	2129630	IncDec	++		2129244	1					
ANR	2129631	ConditionalExpression	( indent != - 1 ) ? '\\n' : ' '		2129244	1					
ANR	2129632	Condition	indent != - 1		2129244	0					
ANR	2129633	EqualityExpression	indent != - 1		2129244	0		!=			
ANR	2129634	Identifier	indent		2129244	0					
ANR	2129635	UnaryOperationExpression	- 1		2129244	1					
ANR	2129636	UnaryOperator	-		2129244	0					
ANR	2129637	PrimaryExpression	1		2129244	1					
ANR	2129638	PrimaryExpression	'\\n'		2129244	1					
ANR	2129639	PrimaryExpression	' '		2129244	2					
ANR	2129640	ExpressionStatement	indent ++	89:3:1688:1696	2129244	13	True				
ANR	2129641	PostIncDecOperationExpression	indent ++		2129244	0					
ANR	2129642	Identifier	indent		2129244	0					
ANR	2129643	IncDec	++		2129244	1					
ANR	2129644	ExpressionStatement	"doIndent ( indent , & o , tab )"	90:3:1701:1727	2129244	14	True				
ANR	2129645	CallExpression	"doIndent ( indent , & o , tab )"		2129244	0					
ANR	2129646	Callee	doIndent		2129244	0					
ANR	2129647	Identifier	doIndent		2129244	0					
ANR	2129648	ArgumentList	indent		2129244	1					
ANR	2129649	Argument	indent		2129244	0					
ANR	2129650	Identifier	indent		2129244	0					
ANR	2129651	Argument	& o		2129244	1					
ANR	2129652	UnaryOperationExpression	& o		2129244	0					
ANR	2129653	UnaryOperator	&		2129244	0					
ANR	2129654	Identifier	o		2129244	1					
ANR	2129655	Argument	tab		2129244	2					
ANR	2129656	Identifier	tab		2129244	0					
ANR	2129657	BreakStatement	break ;	91:3:1732:1737	2129244	15	True				
ANR	2129658	Label	case '}' :	92:2:1741:1749	2129244	16	True				
ANR	2129659	Label	case ']' :	93:2:1753:1761	2129244	17	True				
ANR	2129660	ExpressionStatement	* o ++ = '\\n'	94:3:1766:1777	2129244	18	True				
ANR	2129661	AssignmentExpression	* o ++ = '\\n'		2129244	0		=			
ANR	2129662	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129663	UnaryOperator	*		2129244	0					
ANR	2129664	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129665	Identifier	o		2129244	0					
ANR	2129666	IncDec	++		2129244	1					
ANR	2129667	PrimaryExpression	'\\n'		2129244	1					
ANR	2129668	ExpressionStatement	indent --	95:3:1782:1790	2129244	19	True				
ANR	2129669	PostIncDecOperationExpression	indent --		2129244	0					
ANR	2129670	Identifier	indent		2129244	0					
ANR	2129671	IncDec	--		2129244	1					
ANR	2129672	ExpressionStatement	"doIndent ( indent , & o , tab )"	96:3:1795:1821	2129244	20	True				
ANR	2129673	CallExpression	"doIndent ( indent , & o , tab )"		2129244	0					
ANR	2129674	Callee	doIndent		2129244	0					
ANR	2129675	Identifier	doIndent		2129244	0					
ANR	2129676	ArgumentList	indent		2129244	1					
ANR	2129677	Argument	indent		2129244	0					
ANR	2129678	Identifier	indent		2129244	0					
ANR	2129679	Argument	& o		2129244	1					
ANR	2129680	UnaryOperationExpression	& o		2129244	0					
ANR	2129681	UnaryOperator	&		2129244	0					
ANR	2129682	Identifier	o		2129244	1					
ANR	2129683	Argument	tab		2129244	2					
ANR	2129684	Identifier	tab		2129244	0					
ANR	2129685	ExpressionStatement	* o ++ = * s	97:3:1826:1835	2129244	21	True				
ANR	2129686	AssignmentExpression	* o ++ = * s		2129244	0		=			
ANR	2129687	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129688	UnaryOperator	*		2129244	0					
ANR	2129689	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129690	Identifier	o		2129244	0					
ANR	2129691	IncDec	++		2129244	1					
ANR	2129692	UnaryOperationExpression	* s		2129244	1					
ANR	2129693	UnaryOperator	*		2129244	0					
ANR	2129694	Identifier	s		2129244	1					
ANR	2129695	BreakStatement	break ;	98:3:1840:1845	2129244	22	True				
ANR	2129696	Label	default :	99:2:1849:1856	2129244	23	True				
ANR	2129697	Identifier	default		2129244	0					
ANR	2129698	ExpressionStatement	* o ++ = * s	100:3:1861:1870	2129244	24	True				
ANR	2129699	AssignmentExpression	* o ++ = * s		2129244	0		=			
ANR	2129700	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129701	UnaryOperator	*		2129244	0					
ANR	2129702	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129703	Identifier	o		2129244	0					
ANR	2129704	IncDec	++		2129244	1					
ANR	2129705	UnaryOperationExpression	* s		2129244	1					
ANR	2129706	UnaryOperator	*		2129244	0					
ANR	2129707	Identifier	s		2129244	1					
ANR	2129708	ExpressionStatement	* o ++ = '\\n'	103:1:1880:1891	2129244	12	True				
ANR	2129709	AssignmentExpression	* o ++ = '\\n'		2129244	0		=			
ANR	2129710	UnaryOperationExpression	* o ++		2129244	0					
ANR	2129711	UnaryOperator	*		2129244	0					
ANR	2129712	PostIncDecOperationExpression	o ++		2129244	1					
ANR	2129713	Identifier	o		2129244	0					
ANR	2129714	IncDec	++		2129244	1					
ANR	2129715	PrimaryExpression	'\\n'		2129244	1					
ANR	2129716	ExpressionStatement	* o = 0	104:1:1894:1900	2129244	13	True				
ANR	2129717	AssignmentExpression	* o = 0		2129244	0		=			
ANR	2129718	UnaryOperationExpression	* o		2129244	0					
ANR	2129719	UnaryOperator	*		2129244	0					
ANR	2129720	Identifier	o		2129244	1					
ANR	2129721	PrimaryExpression	0		2129244	1					
ANR	2129722	ReturnStatement	return O ;	106:1:1904:1912	2129244	14	True				
ANR	2129723	Identifier	O		2129244	0					
ANR	2129724	ReturnType	SDB_API char *		2129244	1					
ANR	2129725	Identifier	sdb_json_indent		2129244	2					
ANR	2129726	ParameterList	"const char * s , const char * tab"		2129244	3					
ANR	2129727	Parameter	const char * s	15:30:269:281	2129244	0	True				
ANR	2129728	ParameterType	const char *		2129244	0					
ANR	2129729	Identifier	s		2129244	1					
ANR	2129730	Parameter	const char * tab	15:45:284:298	2129244	1	True				
ANR	2129731	ParameterType	const char *		2129244	0					
ANR	2129732	Identifier	tab		2129244	1					
ANR	2129733	CFGEntryNode	ENTRY		2129244		True				
ANR	2129734	CFGExitNode	EXIT		2129244		True				
ANR	2129735	Symbol	tab_len		2129244						
ANR	2129736	Symbol	malloc		2129244						
ANR	2129737	Symbol	NULL		2129244						
ANR	2129738	Symbol	indent		2129244						
ANR	2129739	Symbol	* o ++		2129244						
ANR	2129740	Symbol	o_size		2129244						
ANR	2129741	Symbol	o		2129244						
ANR	2129742	Symbol	O		2129244						
ANR	2129743	Symbol	strlen		2129244						
ANR	2129744	Symbol	s		2129244						
ANR	2129745	Symbol	tab		2129244						
ANR	2129746	Symbol	& o		2129244						
ANR	2129747	Symbol	instr		2129244						
ANR	2129748	Symbol	* idx		2129244						
ANR	2129749	Symbol	INT_MAX		2129244						
ANR	2129750	Symbol	* o		2129244						
ANR	2129751	Symbol	idx		2129244						
ANR	2129752	Symbol	* s		2129244						
ANR	2129753	Function	sdb_json_unindent	110:0:1941:2453							
ANR	2129754	FunctionDef	sdb_json_unindent (const char * s)		2129753	0					
ANR	2129755	CompoundStatement		110:47:1988:2453	2129753	0					
ANR	2129756	IdentifierDeclStatement	int instr = 0 ;	111:1:1991:2004	2129753	0	True				
ANR	2129757	IdentifierDecl	instr = 0		2129753	0					
ANR	2129758	IdentifierDeclType	int		2129753	0					
ANR	2129759	Identifier	instr		2129753	1					
ANR	2129760	AssignmentExpression	instr = 0		2129753	2		=			
ANR	2129761	Identifier	instr		2129753	0					
ANR	2129762	PrimaryExpression	0		2129753	1					
ANR	2129763	IdentifierDeclStatement	int len = strlen ( s ) ;	112:1:2007:2027	2129753	1	True				
ANR	2129764	IdentifierDecl	len = strlen ( s )		2129753	0					
ANR	2129765	IdentifierDeclType	int		2129753	0					
ANR	2129766	Identifier	len		2129753	1					
ANR	2129767	AssignmentExpression	len = strlen ( s )		2129753	2		=			
ANR	2129768	Identifier	len		2129753	0					
ANR	2129769	CallExpression	strlen ( s )		2129753	1					
ANR	2129770	Callee	strlen		2129753	0					
ANR	2129771	Identifier	strlen		2129753	0					
ANR	2129772	ArgumentList	s		2129753	1					
ANR	2129773	Argument	s		2129753	0					
ANR	2129774	Identifier	s		2129753	0					
ANR	2129775	IdentifierDeclStatement	"char * o , * O = malloc ( len + 1 ) ;"	113:1:2030:2060	2129753	2	True				
ANR	2129776	IdentifierDecl	* o		2129753	0					
ANR	2129777	IdentifierDeclType	char *		2129753	0					
ANR	2129778	Identifier	o		2129753	1					
ANR	2129779	IdentifierDecl	* O = malloc ( len + 1 )		2129753	1					
ANR	2129780	IdentifierDeclType	char *		2129753	0					
ANR	2129781	Identifier	O		2129753	1					
ANR	2129782	AssignmentExpression	* O = malloc ( len + 1 )		2129753	2		=			
ANR	2129783	Identifier	O		2129753	0					
ANR	2129784	CallExpression	malloc ( len + 1 )		2129753	1					
ANR	2129785	Callee	malloc		2129753	0					
ANR	2129786	Identifier	malloc		2129753	0					
ANR	2129787	ArgumentList	len + 1		2129753	1					
ANR	2129788	Argument	len + 1		2129753	0					
ANR	2129789	AdditiveExpression	len + 1		2129753	0		+			
ANR	2129790	Identifier	len		2129753	0					
ANR	2129791	PrimaryExpression	1		2129753	1					
ANR	2129792	IfStatement	if ( ! O )		2129753	3					
ANR	2129793	Condition	! O	114:5:2067:2068	2129753	0	True				
ANR	2129794	UnaryOperationExpression	! O		2129753	0					
ANR	2129795	UnaryOperator	!		2129753	0					
ANR	2129796	Identifier	O		2129753	1					
ANR	2129797	CompoundStatement		5:9:82:82	2129753	1					
ANR	2129798	ReturnStatement	return NULL ;	115:2:2075:2086	2129753	0	True				
ANR	2129799	Identifier	NULL		2129753	0					
ANR	2129800	ExpressionStatement	"memset ( O , 0 , len )"	117:1:2092:2110	2129753	4	True				
ANR	2129801	CallExpression	"memset ( O , 0 , len )"		2129753	0					
ANR	2129802	Callee	memset		2129753	0					
ANR	2129803	Identifier	memset		2129753	0					
ANR	2129804	ArgumentList	O		2129753	1					
ANR	2129805	Argument	O		2129753	0					
ANR	2129806	Identifier	O		2129753	0					
ANR	2129807	Argument	0		2129753	1					
ANR	2129808	PrimaryExpression	0		2129753	0					
ANR	2129809	Argument	len		2129753	2					
ANR	2129810	Identifier	len		2129753	0					
ANR	2129811	ForStatement	for ( o = O ; * s ; s ++ )		2129753	5					
ANR	2129812	ForInit	o = O ;	118:6:2118:2123	2129753	0	True				
ANR	2129813	AssignmentExpression	o = O		2129753	0		=			
ANR	2129814	Identifier	o		2129753	0					
ANR	2129815	Identifier	O		2129753	1					
ANR	2129816	Condition	* s	118:13:2125:2126	2129753	1	True				
ANR	2129817	UnaryOperationExpression	* s		2129753	0					
ANR	2129818	UnaryOperator	*		2129753	0					
ANR	2129819	Identifier	s		2129753	1					
ANR	2129820	PostIncDecOperationExpression	s ++	118:17:2129:2131	2129753	2	True				
ANR	2129821	Identifier	s		2129753	0					
ANR	2129822	IncDec	++		2129753	1					
ANR	2129823	CompoundStatement		9:22:145:145	2129753	3					
ANR	2129824	IfStatement	if ( instr )		2129753	0					
ANR	2129825	Condition	instr	119:6:2142:2146	2129753	0	True				
ANR	2129826	Identifier	instr		2129753	0					
ANR	2129827	CompoundStatement		10:13:160:160	2129753	1					
ANR	2129828	IfStatement	"if ( s [ 0 ] != '""' )"		2129753	0					
ANR	2129829	Condition	"s [ 0 ] != '""'"	120:7:2158:2168	2129753	0	True				
ANR	2129830	EqualityExpression	"s [ 0 ] != '""'"		2129753	0		!=			
ANR	2129831	ArrayIndexing	s [ 0 ]		2129753	0					
ANR	2129832	Identifier	s		2129753	0					
ANR	2129833	PrimaryExpression	0		2129753	1					
ANR	2129834	PrimaryExpression	"'""'"		2129753	1					
ANR	2129835	CompoundStatement		11:20:182:182	2129753	1					
ANR	2129836	IfStatement	"if ( s [ 0 ] == '\\\\' && s [ 1 ] == '""' )"		2129753	0					
ANR	2129837	Condition	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"	121:8:2181:2207	2129753	0	True				
ANR	2129838	AndExpression	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"		2129753	0		&&			
ANR	2129839	EqualityExpression	s [ 0 ] == '\\\\'		2129753	0		==			
ANR	2129840	ArrayIndexing	s [ 0 ]		2129753	0					
ANR	2129841	Identifier	s		2129753	0					
ANR	2129842	PrimaryExpression	0		2129753	1					
ANR	2129843	PrimaryExpression	'\\\\'		2129753	1					
ANR	2129844	EqualityExpression	"s [ 1 ] == '""'"		2129753	1		==			
ANR	2129845	ArrayIndexing	s [ 1 ]		2129753	0					
ANR	2129846	Identifier	s		2129753	0					
ANR	2129847	PrimaryExpression	1		2129753	1					
ANR	2129848	PrimaryExpression	"'""'"		2129753	1					
ANR	2129849	CompoundStatement		12:37:221:221	2129753	1					
ANR	2129850	ExpressionStatement	* o ++ = * s	122:5:2217:2226	2129753	0	True				
ANR	2129851	AssignmentExpression	* o ++ = * s		2129753	0		=			
ANR	2129852	UnaryOperationExpression	* o ++		2129753	0					
ANR	2129853	UnaryOperator	*		2129753	0					
ANR	2129854	PostIncDecOperationExpression	o ++		2129753	1					
ANR	2129855	Identifier	o		2129753	0					
ANR	2129856	IncDec	++		2129753	1					
ANR	2129857	UnaryOperationExpression	* s		2129753	1					
ANR	2129858	UnaryOperator	*		2129753	0					
ANR	2129859	Identifier	s		2129753	1					
ANR	2129860	ElseStatement	else		2129753	0					
ANR	2129861	CompoundStatement		15:10:255:255	2129753	0					
ANR	2129862	ExpressionStatement	instr = 0	125:4:2250:2259	2129753	0	True				
ANR	2129863	AssignmentExpression	instr = 0		2129753	0		=			
ANR	2129864	Identifier	instr		2129753	0					
ANR	2129865	PrimaryExpression	0		2129753	1					
ANR	2129866	ExpressionStatement	* o ++ = * s	127:3:2269:2278	2129753	1	True				
ANR	2129867	AssignmentExpression	* o ++ = * s		2129753	0		=			
ANR	2129868	UnaryOperationExpression	* o ++		2129753	0					
ANR	2129869	UnaryOperator	*		2129753	0					
ANR	2129870	PostIncDecOperationExpression	o ++		2129753	1					
ANR	2129871	Identifier	o		2129753	0					
ANR	2129872	IncDec	++		2129753	1					
ANR	2129873	UnaryOperationExpression	* s		2129753	1					
ANR	2129874	UnaryOperator	*		2129753	0					
ANR	2129875	Identifier	s		2129753	1					
ANR	2129876	ContinueStatement	continue ;	128:3:2283:2291	2129753	2	True				
ANR	2129877	ElseStatement	else		2129753	0					
ANR	2129878	IfStatement	"if ( s [ 0 ] == '""' )"		2129753	0					
ANR	2129879	Condition	"s [ 0 ] == '""'"	129:13:2306:2316	2129753	0	True				
ANR	2129880	EqualityExpression	"s [ 0 ] == '""'"		2129753	0		==			
ANR	2129881	ArrayIndexing	s [ 0 ]		2129753	0					
ANR	2129882	Identifier	s		2129753	0					
ANR	2129883	PrimaryExpression	0		2129753	1					
ANR	2129884	PrimaryExpression	"'""'"		2129753	1					
ANR	2129885	CompoundStatement		20:26:330:330	2129753	1					
ANR	2129886	ExpressionStatement	instr = 1	130:3:2324:2333	2129753	0	True				
ANR	2129887	AssignmentExpression	instr = 1		2129753	0		=			
ANR	2129888	Identifier	instr		2129753	0					
ANR	2129889	PrimaryExpression	1		2129753	1					
ANR	2129890	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' )		2129753	1					
ANR	2129891	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '	132:6:2345:2395	2129753	0	True				
ANR	2129892	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '		2129753	0		||			
ANR	2129893	EqualityExpression	* s == '\\n'		2129753	0		==			
ANR	2129894	UnaryOperationExpression	* s		2129753	0					
ANR	2129895	UnaryOperator	*		2129753	0					
ANR	2129896	Identifier	s		2129753	1					
ANR	2129897	PrimaryExpression	'\\n'		2129753	1					
ANR	2129898	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' '		2129753	1		||			
ANR	2129899	EqualityExpression	* s == '\\r'		2129753	0		==			
ANR	2129900	UnaryOperationExpression	* s		2129753	0					
ANR	2129901	UnaryOperator	*		2129753	0					
ANR	2129902	Identifier	s		2129753	1					
ANR	2129903	PrimaryExpression	'\\r'		2129753	1					
ANR	2129904	OrExpression	* s == '\\t' || * s == ' '		2129753	1		||			
ANR	2129905	EqualityExpression	* s == '\\t'		2129753	0		==			
ANR	2129906	UnaryOperationExpression	* s		2129753	0					
ANR	2129907	UnaryOperator	*		2129753	0					
ANR	2129908	Identifier	s		2129753	1					
ANR	2129909	PrimaryExpression	'\\t'		2129753	1					
ANR	2129910	EqualityExpression	* s == ' '		2129753	1		==			
ANR	2129911	UnaryOperationExpression	* s		2129753	0					
ANR	2129912	UnaryOperator	*		2129753	0					
ANR	2129913	Identifier	s		2129753	1					
ANR	2129914	PrimaryExpression	' '		2129753	1					
ANR	2129915	CompoundStatement		23:59:409:409	2129753	1					
ANR	2129916	ContinueStatement	continue ;	133:3:2403:2411	2129753	0	True				
ANR	2129917	ExpressionStatement	* o ++ = * s	135:2:2419:2428	2129753	2	True				
ANR	2129918	AssignmentExpression	* o ++ = * s		2129753	0		=			
ANR	2129919	UnaryOperationExpression	* o ++		2129753	0					
ANR	2129920	UnaryOperator	*		2129753	0					
ANR	2129921	PostIncDecOperationExpression	o ++		2129753	1					
ANR	2129922	Identifier	o		2129753	0					
ANR	2129923	IncDec	++		2129753	1					
ANR	2129924	UnaryOperationExpression	* s		2129753	1					
ANR	2129925	UnaryOperator	*		2129753	0					
ANR	2129926	Identifier	s		2129753	1					
ANR	2129927	ExpressionStatement	* o = 0	137:1:2434:2440	2129753	6	True				
ANR	2129928	AssignmentExpression	* o = 0		2129753	0		=			
ANR	2129929	UnaryOperationExpression	* o		2129753	0					
ANR	2129930	UnaryOperator	*		2129753	0					
ANR	2129931	Identifier	o		2129753	1					
ANR	2129932	PrimaryExpression	0		2129753	1					
ANR	2129933	ReturnStatement	return O ;	138:1:2443:2451	2129753	7	True				
ANR	2129934	Identifier	O		2129753	0					
ANR	2129935	ReturnType	SDB_API char *		2129753	1					
ANR	2129936	Identifier	sdb_json_unindent		2129753	2					
ANR	2129937	ParameterList	const char * s		2129753	3					
ANR	2129938	Parameter	const char * s	110:32:1973:1985	2129753	0	True				
ANR	2129939	ParameterType	const char *		2129753	0					
ANR	2129940	Identifier	s		2129753	1					
ANR	2129941	CFGEntryNode	ENTRY		2129753		True				
ANR	2129942	CFGExitNode	EXIT		2129753		True				
ANR	2129943	Symbol	strlen		2129753						
ANR	2129944	Symbol	malloc		2129753						
ANR	2129945	Symbol	s		2129753						
ANR	2129946	Symbol	NULL		2129753						
ANR	2129947	Symbol	len		2129753						
ANR	2129948	Symbol	* o ++		2129753						
ANR	2129949	Symbol	instr		2129753						
ANR	2129950	Symbol	* o		2129753						
ANR	2129951	Symbol	* s		2129753						
ANR	2129952	Symbol	o		2129753						
ANR	2129953	Symbol	O		2129753						
