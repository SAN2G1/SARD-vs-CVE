command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3616692	File	data/converged/CVE-2019-16718~_radare2/libr_bin_format_elf_elf_write.c								
ANR	3616693	Function	r_bin_elf_resize_section	15:0:408:5816							
ANR	3616694	FunctionDef	"r_bin_elf_resize_section (RBinFile * bf , const char * name , ut64 size)"		3616693	0					
ANR	3616695	CompoundStatement		15:79:487:5816	3616693	0					
ANR	3616696	Statement	struct	16:1:490:495	3616693	0	True				
ANR	3616697	ExpressionStatement	Elf_ ( r_bin_elf_obj_t ) * bin = bf -> o -> bin_obj	16:8:497:540	3616693	1	True				
ANR	3616698	AssignmentExpression	Elf_ ( r_bin_elf_obj_t ) * bin = bf -> o -> bin_obj		3616693	0		=			
ANR	3616699	MultiplicativeExpression	Elf_ ( r_bin_elf_obj_t ) * bin		3616693	0		*			
ANR	3616700	CallExpression	Elf_ ( r_bin_elf_obj_t )		3616693	0					
ANR	3616701	Callee	Elf_		3616693	0					
ANR	3616702	Identifier	Elf_		3616693	0					
ANR	3616703	ArgumentList	r_bin_elf_obj_t		3616693	1					
ANR	3616704	Argument	r_bin_elf_obj_t		3616693	0					
ANR	3616705	Identifier	r_bin_elf_obj_t		3616693	0					
ANR	3616706	Identifier	bin		3616693	1					
ANR	3616707	PtrMemberAccess	bf -> o -> bin_obj		3616693	1					
ANR	3616708	PtrMemberAccess	bf -> o		3616693	0					
ANR	3616709	Identifier	bf		3616693	0					
ANR	3616710	Identifier	o		3616693	1					
ANR	3616711	Identifier	bin_obj		3616693	1					
ANR	3616712	ExpressionStatement	Elf_ ( Ehdr ) * ehdr = & bin -> ehdr	17:1:579:608	3616693	2	True				
ANR	3616713	AssignmentExpression	Elf_ ( Ehdr ) * ehdr = & bin -> ehdr		3616693	0		=			
ANR	3616714	MultiplicativeExpression	Elf_ ( Ehdr ) * ehdr		3616693	0		*			
ANR	3616715	CallExpression	Elf_ ( Ehdr )		3616693	0					
ANR	3616716	Callee	Elf_		3616693	0					
ANR	3616717	Identifier	Elf_		3616693	0					
ANR	3616718	ArgumentList	Ehdr		3616693	1					
ANR	3616719	Argument	Ehdr		3616693	0					
ANR	3616720	Identifier	Ehdr		3616693	0					
ANR	3616721	Identifier	ehdr		3616693	1					
ANR	3616722	UnaryOperationExpression	& bin -> ehdr		3616693	1					
ANR	3616723	UnaryOperator	&		3616693	0					
ANR	3616724	PtrMemberAccess	bin -> ehdr		3616693	1					
ANR	3616725	Identifier	bin		3616693	0					
ANR	3616726	Identifier	ehdr		3616693	1					
ANR	3616727	ExpressionStatement	"Elf_ ( Phdr ) * phdr = bin -> phdr , * phdrp"	18:1:611:647	3616693	3	True				
ANR	3616728	Expression	"Elf_ ( Phdr ) * phdr = bin -> phdr , * phdrp"		3616693	0					
ANR	3616729	AssignmentExpression	Elf_ ( Phdr ) * phdr = bin -> phdr		3616693	0		=			
ANR	3616730	MultiplicativeExpression	Elf_ ( Phdr ) * phdr		3616693	0		*			
ANR	3616731	CallExpression	Elf_ ( Phdr )		3616693	0					
ANR	3616732	Callee	Elf_		3616693	0					
ANR	3616733	Identifier	Elf_		3616693	0					
ANR	3616734	ArgumentList	Phdr		3616693	1					
ANR	3616735	Argument	Phdr		3616693	0					
ANR	3616736	Identifier	Phdr		3616693	0					
ANR	3616737	Identifier	phdr		3616693	1					
ANR	3616738	PtrMemberAccess	bin -> phdr		3616693	1					
ANR	3616739	Identifier	bin		3616693	0					
ANR	3616740	Identifier	phdr		3616693	1					
ANR	3616741	UnaryOperationExpression	* phdrp		3616693	1					
ANR	3616742	UnaryOperator	*		3616693	0					
ANR	3616743	Identifier	phdrp		3616693	1					
ANR	3616744	ExpressionStatement	"Elf_ ( Shdr ) * shdr = bin -> shdr , * shdrp"	19:1:650:686	3616693	4	True				
ANR	3616745	Expression	"Elf_ ( Shdr ) * shdr = bin -> shdr , * shdrp"		3616693	0					
ANR	3616746	AssignmentExpression	Elf_ ( Shdr ) * shdr = bin -> shdr		3616693	0		=			
ANR	3616747	MultiplicativeExpression	Elf_ ( Shdr ) * shdr		3616693	0		*			
ANR	3616748	CallExpression	Elf_ ( Shdr )		3616693	0					
ANR	3616749	Callee	Elf_		3616693	0					
ANR	3616750	Identifier	Elf_		3616693	0					
ANR	3616751	ArgumentList	Shdr		3616693	1					
ANR	3616752	Argument	Shdr		3616693	0					
ANR	3616753	Identifier	Shdr		3616693	0					
ANR	3616754	Identifier	shdr		3616693	1					
ANR	3616755	PtrMemberAccess	bin -> shdr		3616693	1					
ANR	3616756	Identifier	bin		3616693	0					
ANR	3616757	Identifier	shdr		3616693	1					
ANR	3616758	UnaryOperationExpression	* shdrp		3616693	1					
ANR	3616759	UnaryOperator	*		3616693	0					
ANR	3616760	Identifier	shdrp		3616693	1					
ANR	3616761	IdentifierDeclStatement	const char * strtab = bin -> shstrtab ;	20:1:689:723	3616693	5	True				
ANR	3616762	IdentifierDecl	* strtab = bin -> shstrtab		3616693	0					
ANR	3616763	IdentifierDeclType	const char *		3616693	0					
ANR	3616764	Identifier	strtab		3616693	1					
ANR	3616765	AssignmentExpression	* strtab = bin -> shstrtab		3616693	2		=			
ANR	3616766	Identifier	strtab		3616693	0					
ANR	3616767	PtrMemberAccess	bin -> shstrtab		3616693	1					
ANR	3616768	Identifier	bin		3616693	0					
ANR	3616769	Identifier	shstrtab		3616693	1					
ANR	3616770	IdentifierDeclStatement	ut8 * buf ;	21:1:726:734	3616693	6	True				
ANR	3616771	IdentifierDecl	* buf		3616693	0					
ANR	3616772	IdentifierDeclType	ut8 *		3616693	0					
ANR	3616773	Identifier	buf		3616693	1					
ANR	3616774	IdentifierDeclStatement	"ut64 off , got_offset = 0 , got_addr = 0 , rsz_offset = 0 , delta = 0 ;"	22:1:737:802	3616693	7	True				
ANR	3616775	IdentifierDecl	off		3616693	0					
ANR	3616776	IdentifierDeclType	ut64		3616693	0					
ANR	3616777	Identifier	off		3616693	1					
ANR	3616778	IdentifierDecl	got_offset = 0		3616693	1					
ANR	3616779	IdentifierDeclType	ut64		3616693	0					
ANR	3616780	Identifier	got_offset		3616693	1					
ANR	3616781	AssignmentExpression	got_offset = 0		3616693	2		=			
ANR	3616782	Identifier	got_offset		3616693	0					
ANR	3616783	PrimaryExpression	0		3616693	1					
ANR	3616784	IdentifierDecl	got_addr = 0		3616693	2					
ANR	3616785	IdentifierDeclType	ut64		3616693	0					
ANR	3616786	Identifier	got_addr		3616693	1					
ANR	3616787	AssignmentExpression	got_addr = 0		3616693	2		=			
ANR	3616788	Identifier	got_addr		3616693	0					
ANR	3616789	PrimaryExpression	0		3616693	1					
ANR	3616790	IdentifierDecl	rsz_offset = 0		3616693	3					
ANR	3616791	IdentifierDeclType	ut64		3616693	0					
ANR	3616792	Identifier	rsz_offset		3616693	1					
ANR	3616793	AssignmentExpression	rsz_offset = 0		3616693	2		=			
ANR	3616794	Identifier	rsz_offset		3616693	0					
ANR	3616795	PrimaryExpression	0		3616693	1					
ANR	3616796	IdentifierDecl	delta = 0		3616693	4					
ANR	3616797	IdentifierDeclType	ut64		3616693	0					
ANR	3616798	Identifier	delta		3616693	1					
ANR	3616799	AssignmentExpression	delta = 0		3616693	2		=			
ANR	3616800	Identifier	delta		3616693	0					
ANR	3616801	PrimaryExpression	0		3616693	1					
ANR	3616802	IdentifierDeclStatement	"ut64 rsz_osize = 0 , rsz_size = size , rest_size = 0 ;"	23:1:805:855	3616693	8	True				
ANR	3616803	IdentifierDecl	rsz_osize = 0		3616693	0					
ANR	3616804	IdentifierDeclType	ut64		3616693	0					
ANR	3616805	Identifier	rsz_osize		3616693	1					
ANR	3616806	AssignmentExpression	rsz_osize = 0		3616693	2		=			
ANR	3616807	Identifier	rsz_osize		3616693	0					
ANR	3616808	PrimaryExpression	0		3616693	1					
ANR	3616809	IdentifierDecl	rsz_size = size		3616693	1					
ANR	3616810	IdentifierDeclType	ut64		3616693	0					
ANR	3616811	Identifier	rsz_size		3616693	1					
ANR	3616812	AssignmentExpression	rsz_size = size		3616693	2		=			
ANR	3616813	Identifier	size		3616693	0					
ANR	3616814	Identifier	size		3616693	1					
ANR	3616815	IdentifierDecl	rest_size = 0		3616693	2					
ANR	3616816	IdentifierDeclType	ut64		3616693	0					
ANR	3616817	Identifier	rest_size		3616693	1					
ANR	3616818	AssignmentExpression	rest_size = 0		3616693	2		=			
ANR	3616819	Identifier	rest_size		3616693	0					
ANR	3616820	PrimaryExpression	0		3616693	1					
ANR	3616821	IdentifierDeclStatement	"int i , j , done = 0 ;"	24:1:858:876	3616693	9	True				
ANR	3616822	IdentifierDecl	i		3616693	0					
ANR	3616823	IdentifierDeclType	int		3616693	0					
ANR	3616824	Identifier	i		3616693	1					
ANR	3616825	IdentifierDecl	j		3616693	1					
ANR	3616826	IdentifierDeclType	int		3616693	0					
ANR	3616827	Identifier	j		3616693	1					
ANR	3616828	IdentifierDecl	done = 0		3616693	2					
ANR	3616829	IdentifierDeclType	int		3616693	0					
ANR	3616830	Identifier	done		3616693	1					
ANR	3616831	AssignmentExpression	done = 0		3616693	2		=			
ANR	3616832	Identifier	done		3616693	0					
ANR	3616833	PrimaryExpression	0		3616693	1					
ANR	3616834	IfStatement	if ( size == 0 )		3616693	10					
ANR	3616835	Condition	size == 0	26:5:884:892	3616693	0	True				
ANR	3616836	EqualityExpression	size == 0		3616693	0		==			
ANR	3616837	Identifier	size		3616693	0					
ANR	3616838	PrimaryExpression	0		3616693	1					
ANR	3616839	CompoundStatement		12:16:407:407	3616693	1					
ANR	3616840	ExpressionStatement	"eprintf ( ""0 size section?\\n"" )"	27:2:899:928	3616693	0	True				
ANR	3616841	CallExpression	"eprintf ( ""0 size section?\\n"" )"		3616693	0					
ANR	3616842	Callee	eprintf		3616693	0					
ANR	3616843	Identifier	eprintf		3616693	0					
ANR	3616844	ArgumentList	"""0 size section?\\n"""		3616693	1					
ANR	3616845	Argument	"""0 size section?\\n"""		3616693	0					
ANR	3616846	PrimaryExpression	"""0 size section?\\n"""		3616693	0					
ANR	3616847	ReturnStatement	return 0 ;	28:2:932:940	3616693	1	True				
ANR	3616848	PrimaryExpression	0		3616693	0					
ANR	3616849	ForStatement	"for ( i = 0 , shdrp = shdr ; i < ehdr -> e_shnum ; i ++ , shdrp ++ )"		3616693	11					
ANR	3616850	ForInit	"i = 0 , shdrp = shdr ;"	32:6:975:994	3616693	0	True				
ANR	3616851	Expression	"i = 0 , shdrp = shdr"		3616693	0					
ANR	3616852	AssignmentExpression	i = 0		3616693	0		=			
ANR	3616853	Identifier	i		3616693	0					
ANR	3616854	PrimaryExpression	0		3616693	1					
ANR	3616855	AssignmentExpression	shdrp = shdr		3616693	1		=			
ANR	3616856	Identifier	shdrp		3616693	0					
ANR	3616857	Identifier	shdr		3616693	1					
ANR	3616858	Condition	i < ehdr -> e_shnum	32:27:996:1012	3616693	1	True				
ANR	3616859	RelationalExpression	i < ehdr -> e_shnum		3616693	0		<			
ANR	3616860	Identifier	i		3616693	0					
ANR	3616861	PtrMemberAccess	ehdr -> e_shnum		3616693	1					
ANR	3616862	Identifier	ehdr		3616693	0					
ANR	3616863	Identifier	e_shnum		3616693	1					
ANR	3616864	Expression	"i ++ , shdrp ++"	32:46:1015:1026	3616693	2	True				
ANR	3616865	PostIncDecOperationExpression	i ++		3616693	0					
ANR	3616866	Identifier	i		3616693	0					
ANR	3616867	IncDec	++		3616693	1					
ANR	3616868	PostIncDecOperationExpression	shdrp ++		3616693	1					
ANR	3616869	Identifier	shdrp		3616693	0					
ANR	3616870	IncDec	++		3616693	1					
ANR	3616871	CompoundStatement		23:2:636:681	3616693	3					
ANR	3616872	IdentifierDeclStatement	int idx = shdrp -> sh_name ;	33:2:1033:1057	3616693	0	True				
ANR	3616873	IdentifierDecl	idx = shdrp -> sh_name		3616693	0					
ANR	3616874	IdentifierDeclType	int		3616693	0					
ANR	3616875	Identifier	idx		3616693	1					
ANR	3616876	AssignmentExpression	idx = shdrp -> sh_name		3616693	2		=			
ANR	3616877	Identifier	idx		3616693	0					
ANR	3616878	PtrMemberAccess	shdrp -> sh_name		3616693	1					
ANR	3616879	Identifier	shdrp		3616693	0					
ANR	3616880	Identifier	sh_name		3616693	1					
ANR	3616881	IfStatement	if ( idx < 0 || idx >= bin -> shstrtab_size )		3616693	1					
ANR	3616882	Condition	idx < 0 || idx >= bin -> shstrtab_size	34:6:1065:1100	3616693	0	True				
ANR	3616883	OrExpression	idx < 0 || idx >= bin -> shstrtab_size		3616693	0		||			
ANR	3616884	RelationalExpression	idx < 0		3616693	0		<			
ANR	3616885	Identifier	idx		3616693	0					
ANR	3616886	PrimaryExpression	0		3616693	1					
ANR	3616887	RelationalExpression	idx >= bin -> shstrtab_size		3616693	1		>=			
ANR	3616888	Identifier	idx		3616693	0					
ANR	3616889	PtrMemberAccess	bin -> shstrtab_size		3616693	1					
ANR	3616890	Identifier	bin		3616693	0					
ANR	3616891	Identifier	shstrtab_size		3616693	1					
ANR	3616892	CompoundStatement		20:44:615:615	3616693	1					
ANR	3616893	ContinueStatement	continue ;	35:3:1108:1116	3616693	0	True				
ANR	3616894	IdentifierDeclStatement	const char * sh_name = & strtab [ shdrp -> sh_name ] ;	37:2:1124:1169	3616693	2	True				
ANR	3616895	IdentifierDecl	* sh_name = & strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3616896	IdentifierDeclType	const char *		3616693	0					
ANR	3616897	Identifier	sh_name		3616693	1					
ANR	3616898	AssignmentExpression	* sh_name = & strtab [ shdrp -> sh_name ]		3616693	2		=			
ANR	3616899	Identifier	sh_name		3616693	0					
ANR	3616900	UnaryOperationExpression	& strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3616901	UnaryOperator	&		3616693	0					
ANR	3616902	ArrayIndexing	strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3616903	Identifier	strtab		3616693	0					
ANR	3616904	PtrMemberAccess	shdrp -> sh_name		3616693	1					
ANR	3616905	Identifier	shdrp		3616693	0					
ANR	3616906	Identifier	sh_name		3616693	1					
ANR	3616907	IfStatement	"if ( sh_name && ! strncmp ( name , sh_name , ELF_STRING_LENGTH ) )"		3616693	3					
ANR	3616908	Condition	"sh_name && ! strncmp ( name , sh_name , ELF_STRING_LENGTH )"	38:6:1177:1230	3616693	0	True				
ANR	3616909	AndExpression	"sh_name && ! strncmp ( name , sh_name , ELF_STRING_LENGTH )"		3616693	0		&&			
ANR	3616910	Identifier	sh_name		3616693	0					
ANR	3616911	UnaryOperationExpression	"! strncmp ( name , sh_name , ELF_STRING_LENGTH )"		3616693	1					
ANR	3616912	UnaryOperator	!		3616693	0					
ANR	3616913	CallExpression	"strncmp ( name , sh_name , ELF_STRING_LENGTH )"		3616693	1					
ANR	3616914	Callee	strncmp		3616693	0					
ANR	3616915	Identifier	strncmp		3616693	0					
ANR	3616916	ArgumentList	name		3616693	1					
ANR	3616917	Argument	name		3616693	0					
ANR	3616918	Identifier	name		3616693	0					
ANR	3616919	Argument	sh_name		3616693	1					
ANR	3616920	Identifier	sh_name		3616693	0					
ANR	3616921	Argument	ELF_STRING_LENGTH		3616693	2					
ANR	3616922	Identifier	ELF_STRING_LENGTH		3616693	0					
ANR	3616923	CompoundStatement		24:62:745:745	3616693	1					
ANR	3616924	ExpressionStatement	delta = rsz_size - shdrp -> sh_size	39:3:1238:1272	3616693	0	True				
ANR	3616925	AssignmentExpression	delta = rsz_size - shdrp -> sh_size		3616693	0		=			
ANR	3616926	Identifier	delta		3616693	0					
ANR	3616927	AdditiveExpression	rsz_size - shdrp -> sh_size		3616693	1		-			
ANR	3616928	Identifier	rsz_size		3616693	0					
ANR	3616929	PtrMemberAccess	shdrp -> sh_size		3616693	1					
ANR	3616930	Identifier	shdrp		3616693	0					
ANR	3616931	Identifier	sh_size		3616693	1					
ANR	3616932	ExpressionStatement	rsz_offset = ( ut64 ) shdrp -> sh_offset	40:3:1277:1312	3616693	1	True				
ANR	3616933	AssignmentExpression	rsz_offset = ( ut64 ) shdrp -> sh_offset		3616693	0		=			
ANR	3616934	Identifier	rsz_offset		3616693	0					
ANR	3616935	CastExpression	( ut64 ) shdrp -> sh_offset		3616693	1					
ANR	3616936	CastTarget	ut64		3616693	0					
ANR	3616937	PtrMemberAccess	shdrp -> sh_offset		3616693	1					
ANR	3616938	Identifier	shdrp		3616693	0					
ANR	3616939	Identifier	sh_offset		3616693	1					
ANR	3616940	ExpressionStatement	rsz_osize = ( ut64 ) shdrp -> sh_size	41:3:1317:1349	3616693	2	True				
ANR	3616941	AssignmentExpression	rsz_osize = ( ut64 ) shdrp -> sh_size		3616693	0		=			
ANR	3616942	Identifier	rsz_osize		3616693	0					
ANR	3616943	CastExpression	( ut64 ) shdrp -> sh_size		3616693	1					
ANR	3616944	CastTarget	ut64		3616693	0					
ANR	3616945	PtrMemberAccess	shdrp -> sh_size		3616693	1					
ANR	3616946	Identifier	shdrp		3616693	0					
ANR	3616947	Identifier	sh_size		3616693	1					
ANR	3616948	IfStatement	if ( delta == 0 )		3616693	12					
ANR	3616949	Condition	delta == 0	45:5:1364:1373	3616693	0	True				
ANR	3616950	EqualityExpression	delta == 0		3616693	0		==			
ANR	3616951	Identifier	delta		3616693	0					
ANR	3616952	PrimaryExpression	0		3616693	1					
ANR	3616953	CompoundStatement		31:17:888:888	3616693	1					
ANR	3616954	ExpressionStatement	"eprintf ( ""Cannot find section\\n"" )"	46:2:1380:1413	3616693	0	True				
ANR	3616955	CallExpression	"eprintf ( ""Cannot find section\\n"" )"		3616693	0					
ANR	3616956	Callee	eprintf		3616693	0					
ANR	3616957	Identifier	eprintf		3616693	0					
ANR	3616958	ArgumentList	"""Cannot find section\\n"""		3616693	1					
ANR	3616959	Argument	"""Cannot find section\\n"""		3616693	0					
ANR	3616960	PrimaryExpression	"""Cannot find section\\n"""		3616693	0					
ANR	3616961	ReturnStatement	return 0 ;	47:2:1417:1425	3616693	1	True				
ANR	3616962	PrimaryExpression	0		3616693	0					
ANR	3616963	Statement	eprintf	50:1:1433:1439	3616693	13	True				
ANR	3616964	Statement	(	50:9:1441:1441	3616693	14	True				
ANR	3616965	Statement	"""delta: %"""	50:10:1442:1451	3616693	15	True				
ANR	3616966	Statement	PFMT64d	50:20:1452:1458	3616693	16	True				
ANR	3616967	Statement	"""\\n"""	50:27:1459:1462	3616693	17	True				
ANR	3616968	Statement	","	50:31:1463:1463	3616693	18	True				
ANR	3616969	Statement	delta	50:33:1465:1469	3616693	19	True				
ANR	3616970	Statement	)	50:38:1470:1470	3616693	20	True				
ANR	3616971	ExpressionStatement		50:39:1471:1471	3616693	21	True				
ANR	3616972	ForStatement	"for ( i = 0 , shdrp = shdr ; i < ehdr -> e_shnum ; i ++ , shdrp ++ )"		3616693	22					
ANR	3616973	ForInit	"i = 0 , shdrp = shdr ;"	53:6:1512:1531	3616693	0	True				
ANR	3616974	Expression	"i = 0 , shdrp = shdr"		3616693	0					
ANR	3616975	AssignmentExpression	i = 0		3616693	0		=			
ANR	3616976	Identifier	i		3616693	0					
ANR	3616977	PrimaryExpression	0		3616693	1					
ANR	3616978	AssignmentExpression	shdrp = shdr		3616693	1		=			
ANR	3616979	Identifier	shdrp		3616693	0					
ANR	3616980	Identifier	shdr		3616693	1					
ANR	3616981	Condition	i < ehdr -> e_shnum	53:27:1533:1549	3616693	1	True				
ANR	3616982	RelationalExpression	i < ehdr -> e_shnum		3616693	0		<			
ANR	3616983	Identifier	i		3616693	0					
ANR	3616984	PtrMemberAccess	ehdr -> e_shnum		3616693	1					
ANR	3616985	Identifier	ehdr		3616693	0					
ANR	3616986	Identifier	e_shnum		3616693	1					
ANR	3616987	Expression	"i ++ , shdrp ++"	53:46:1552:1563	3616693	2	True				
ANR	3616988	PostIncDecOperationExpression	i ++		3616693	0					
ANR	3616989	Identifier	i		3616693	0					
ANR	3616990	IncDec	++		3616693	1					
ANR	3616991	PostIncDecOperationExpression	shdrp ++		3616693	1					
ANR	3616992	Identifier	shdrp		3616693	0					
ANR	3616993	IncDec	++		3616693	1					
ANR	3616994	CompoundStatement		39:60:1078:1078	3616693	3					
ANR	3616995	IfStatement	"if ( ! strcmp ( & strtab [ shdrp -> sh_name ] , "".got"" ) )"		3616693	0					
ANR	3616996	Condition	"! strcmp ( & strtab [ shdrp -> sh_name ] , "".got"" )"	54:6:1574:1613	3616693	0	True				
ANR	3616997	UnaryOperationExpression	"! strcmp ( & strtab [ shdrp -> sh_name ] , "".got"" )"		3616693	0					
ANR	3616998	UnaryOperator	!		3616693	0					
ANR	3616999	CallExpression	"strcmp ( & strtab [ shdrp -> sh_name ] , "".got"" )"		3616693	1					
ANR	3617000	Callee	strcmp		3616693	0					
ANR	3617001	Identifier	strcmp		3616693	0					
ANR	3617002	ArgumentList	& strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617003	Argument	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617004	UnaryOperationExpression	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617005	UnaryOperator	&		3616693	0					
ANR	3617006	ArrayIndexing	strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617007	Identifier	strtab		3616693	0					
ANR	3617008	PtrMemberAccess	shdrp -> sh_name		3616693	1					
ANR	3617009	Identifier	shdrp		3616693	0					
ANR	3617010	Identifier	sh_name		3616693	1					
ANR	3617011	Argument	""".got"""		3616693	1					
ANR	3617012	PrimaryExpression	""".got"""		3616693	0					
ANR	3617013	CompoundStatement		40:48:1128:1128	3616693	1					
ANR	3617014	ExpressionStatement	got_addr = ( ut64 ) shdrp -> sh_addr	55:3:1621:1652	3616693	0	True				
ANR	3617015	AssignmentExpression	got_addr = ( ut64 ) shdrp -> sh_addr		3616693	0		=			
ANR	3617016	Identifier	got_addr		3616693	0					
ANR	3617017	CastExpression	( ut64 ) shdrp -> sh_addr		3616693	1					
ANR	3617018	CastTarget	ut64		3616693	0					
ANR	3617019	PtrMemberAccess	shdrp -> sh_addr		3616693	1					
ANR	3617020	Identifier	shdrp		3616693	0					
ANR	3617021	Identifier	sh_addr		3616693	1					
ANR	3617022	ExpressionStatement	got_offset = ( ut64 ) shdrp -> sh_offset	56:3:1657:1692	3616693	1	True				
ANR	3617023	AssignmentExpression	got_offset = ( ut64 ) shdrp -> sh_offset		3616693	0		=			
ANR	3617024	Identifier	got_offset		3616693	0					
ANR	3617025	CastExpression	( ut64 ) shdrp -> sh_offset		3616693	1					
ANR	3617026	CastTarget	ut64		3616693	0					
ANR	3617027	PtrMemberAccess	shdrp -> sh_offset		3616693	1					
ANR	3617028	Identifier	shdrp		3616693	0					
ANR	3617029	Identifier	sh_offset		3616693	1					
ANR	3617030	IfStatement	if ( got_addr == 0 || got_offset == 0 )		3616693	23					
ANR	3617031	Condition	got_addr == 0 || got_offset == 0	59:5:1706:1737	3616693	0	True				
ANR	3617032	OrExpression	got_addr == 0 || got_offset == 0		3616693	0		||			
ANR	3617033	EqualityExpression	got_addr == 0		3616693	0		==			
ANR	3617034	Identifier	got_addr		3616693	0					
ANR	3617035	PrimaryExpression	0		3616693	1					
ANR	3617036	EqualityExpression	got_offset == 0		3616693	1		==			
ANR	3617037	Identifier	got_offset		3616693	0					
ANR	3617038	PrimaryExpression	0		3616693	1					
ANR	3617039	CompoundStatement		45:39:1252:1252	3616693	1					
ANR	3617040	ForStatement	"for ( i = 0 , shdrp = shdr ; i < ehdr -> e_shnum ; i ++ , shdrp ++ )"		3616693	24					
ANR	3617041	ForInit	"i = 0 , shdrp = shdr ;"	63:6:1786:1805	3616693	0	True				
ANR	3617042	Expression	"i = 0 , shdrp = shdr"		3616693	0					
ANR	3617043	AssignmentExpression	i = 0		3616693	0		=			
ANR	3617044	Identifier	i		3616693	0					
ANR	3617045	PrimaryExpression	0		3616693	1					
ANR	3617046	AssignmentExpression	shdrp = shdr		3616693	1		=			
ANR	3617047	Identifier	shdrp		3616693	0					
ANR	3617048	Identifier	shdr		3616693	1					
ANR	3617049	Condition	i < ehdr -> e_shnum	63:27:1807:1823	3616693	1	True				
ANR	3617050	RelationalExpression	i < ehdr -> e_shnum		3616693	0		<			
ANR	3617051	Identifier	i		3616693	0					
ANR	3617052	PtrMemberAccess	ehdr -> e_shnum		3616693	1					
ANR	3617053	Identifier	ehdr		3616693	0					
ANR	3617054	Identifier	e_shnum		3616693	1					
ANR	3617055	Expression	"i ++ , shdrp ++"	63:46:1826:1837	3616693	2	True				
ANR	3617056	PostIncDecOperationExpression	i ++		3616693	0					
ANR	3617057	Identifier	i		3616693	0					
ANR	3617058	IncDec	++		3616693	1					
ANR	3617059	PostIncDecOperationExpression	shdrp ++		3616693	1					
ANR	3617060	Identifier	shdrp		3616693	0					
ANR	3617061	IncDec	++		3616693	1					
ANR	3617062	CompoundStatement		49:60:1352:1352	3616693	3					
ANR	3617063	IfStatement	"if ( ! strcmp ( & strtab [ shdrp -> sh_name ] , "".rel.plt"" ) )"		3616693	0					
ANR	3617064	Condition	"! strcmp ( & strtab [ shdrp -> sh_name ] , "".rel.plt"" )"	64:6:1848:1892	3616693	0	True				
ANR	3617065	UnaryOperationExpression	"! strcmp ( & strtab [ shdrp -> sh_name ] , "".rel.plt"" )"		3616693	0					
ANR	3617066	UnaryOperator	!		3616693	0					
ANR	3617067	CallExpression	"strcmp ( & strtab [ shdrp -> sh_name ] , "".rel.plt"" )"		3616693	1					
ANR	3617068	Callee	strcmp		3616693	0					
ANR	3617069	Identifier	strcmp		3616693	0					
ANR	3617070	ArgumentList	& strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617071	Argument	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617072	UnaryOperationExpression	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617073	UnaryOperator	&		3616693	0					
ANR	3617074	ArrayIndexing	strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617075	Identifier	strtab		3616693	0					
ANR	3617076	PtrMemberAccess	shdrp -> sh_name		3616693	1					
ANR	3617077	Identifier	shdrp		3616693	0					
ANR	3617078	Identifier	sh_name		3616693	1					
ANR	3617079	Argument	""".rel.plt"""		3616693	1					
ANR	3617080	PrimaryExpression	""".rel.plt"""		3616693	0					
ANR	3617081	CompoundStatement		50:53:1407:1407	3616693	1					
ANR	3617082	ExpressionStatement	"Elf_ ( Rel ) * rel , * relp"	65:3:1900:1921	3616693	0	True				
ANR	3617083	Expression	"Elf_ ( Rel ) * rel , * relp"		3616693	0					
ANR	3617084	MultiplicativeExpression	Elf_ ( Rel ) * rel		3616693	0		*			
ANR	3617085	CallExpression	Elf_ ( Rel )		3616693	0					
ANR	3617086	Callee	Elf_		3616693	0					
ANR	3617087	Identifier	Elf_		3616693	0					
ANR	3617088	ArgumentList	Rel		3616693	1					
ANR	3617089	Argument	Rel		3616693	0					
ANR	3617090	Identifier	Rel		3616693	0					
ANR	3617091	Identifier	rel		3616693	1					
ANR	3617092	UnaryOperationExpression	* relp		3616693	1					
ANR	3617093	UnaryOperator	*		3616693	0					
ANR	3617094	Identifier	relp		3616693	1					
ANR	3617095	Statement	rel	66:3:1926:1928	3616693	1	True				
ANR	3617096	Statement	=	66:7:1930:1930	3616693	2	True				
ANR	3617097	Statement	(	66:9:1932:1932	3616693	3	True				
ANR	3617098	Statement	Elf_	66:10:1933:1936	3616693	4	True				
ANR	3617099	Statement	(	66:14:1937:1937	3616693	5	True				
ANR	3617100	Statement	Rel	66:15:1938:1940	3616693	6	True				
ANR	3617101	Statement	)	66:18:1941:1941	3616693	7	True				
ANR	3617102	Statement	*	66:20:1943:1943	3616693	8	True				
ANR	3617103	Statement	)	66:21:1944:1944	3616693	9	True				
ANR	3617104	ExpressionStatement	malloc ( 1 + shdrp -> sh_size )	66:22:1945:1970	3616693	10	True				
ANR	3617105	CallExpression	malloc ( 1 + shdrp -> sh_size )		3616693	0					
ANR	3617106	Callee	malloc		3616693	0					
ANR	3617107	Identifier	malloc		3616693	0					
ANR	3617108	ArgumentList	1 + shdrp -> sh_size		3616693	1					
ANR	3617109	Argument	1 + shdrp -> sh_size		3616693	0					
ANR	3617110	AdditiveExpression	1 + shdrp -> sh_size		3616693	0		+			
ANR	3617111	PrimaryExpression	1		3616693	0					
ANR	3617112	PtrMemberAccess	shdrp -> sh_size		3616693	1					
ANR	3617113	Identifier	shdrp		3616693	0					
ANR	3617114	Identifier	sh_size		3616693	1					
ANR	3617115	IfStatement	if ( ! rel )		3616693	11					
ANR	3617116	Condition	! rel	67:7:1979:1982	3616693	0	True				
ANR	3617117	UnaryOperationExpression	! rel		3616693	0					
ANR	3617118	UnaryOperator	!		3616693	0					
ANR	3617119	Identifier	rel		3616693	1					
ANR	3617120	CompoundStatement		53:13:1497:1497	3616693	1					
ANR	3617121	ExpressionStatement	"perror ( ""malloc"" )"	68:4:1991:2008	3616693	0	True				
ANR	3617122	CallExpression	"perror ( ""malloc"" )"		3616693	0					
ANR	3617123	Callee	perror		3616693	0					
ANR	3617124	Identifier	perror		3616693	0					
ANR	3617125	ArgumentList	"""malloc"""		3616693	1					
ANR	3617126	Argument	"""malloc"""		3616693	0					
ANR	3617127	PrimaryExpression	"""malloc"""		3616693	0					
ANR	3617128	ReturnStatement	return 0 ;	69:4:2014:2022	3616693	1	True				
ANR	3617129	PrimaryExpression	0		3616693	0					
ANR	3617130	IfStatement	"if ( r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size ) == - 1 )"		3616693	12					
ANR	3617131	Condition	"r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size ) == - 1"	71:7:2036:2108	3616693	0	True				
ANR	3617132	EqualityExpression	"r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size ) == - 1"		3616693	0		==			
ANR	3617133	CallExpression	"r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size )"		3616693	0					
ANR	3617134	Callee	r_buf_read_at		3616693	0					
ANR	3617135	Identifier	r_buf_read_at		3616693	0					
ANR	3617136	ArgumentList	bin -> b		3616693	1					
ANR	3617137	Argument	bin -> b		3616693	0					
ANR	3617138	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617139	Identifier	bin		3616693	0					
ANR	3617140	Identifier	b		3616693	1					
ANR	3617141	Argument	shdrp -> sh_offset		3616693	1					
ANR	3617142	PtrMemberAccess	shdrp -> sh_offset		3616693	0					
ANR	3617143	Identifier	shdrp		3616693	0					
ANR	3617144	Identifier	sh_offset		3616693	1					
ANR	3617145	Argument	( ut8 * ) rel		3616693	2					
ANR	3617146	CastExpression	( ut8 * ) rel		3616693	0					
ANR	3617147	CastTarget	ut8 *		3616693	0					
ANR	3617148	Identifier	rel		3616693	1					
ANR	3617149	Argument	shdrp -> sh_size		3616693	3					
ANR	3617150	PtrMemberAccess	shdrp -> sh_size		3616693	0					
ANR	3617151	Identifier	shdrp		3616693	0					
ANR	3617152	Identifier	sh_size		3616693	1					
ANR	3617153	UnaryOperationExpression	- 1		3616693	1					
ANR	3617154	UnaryOperator	-		3616693	0					
ANR	3617155	PrimaryExpression	1		3616693	1					
ANR	3617156	CompoundStatement		57:82:1623:1623	3616693	1					
ANR	3617157	ExpressionStatement	"perror ( ""read (rel)"" )"	72:4:2117:2137	3616693	0	True				
ANR	3617158	CallExpression	"perror ( ""read (rel)"" )"		3616693	0					
ANR	3617159	Callee	perror		3616693	0					
ANR	3617160	Identifier	perror		3616693	0					
ANR	3617161	ArgumentList	"""read (rel)"""		3616693	1					
ANR	3617162	Argument	"""read (rel)"""		3616693	0					
ANR	3617163	PrimaryExpression	"""read (rel)"""		3616693	0					
ANR	3617164	ForStatement	"for ( j = 0 , relp = rel ; j < shdrp -> sh_size ; j += sizeof ( Elf_ ( Rel ) ) , relp ++ )"		3616693	13					
ANR	3617165	ForInit	"j = 0 , relp = rel ;"	74:8:2152:2169	3616693	0	True				
ANR	3617166	Expression	"j = 0 , relp = rel"		3616693	0					
ANR	3617167	AssignmentExpression	j = 0		3616693	0		=			
ANR	3617168	Identifier	j		3616693	0					
ANR	3617169	PrimaryExpression	0		3616693	1					
ANR	3617170	AssignmentExpression	relp = rel		3616693	1		=			
ANR	3617171	Identifier	relp		3616693	0					
ANR	3617172	Identifier	rel		3616693	1					
ANR	3617173	Condition	j < shdrp -> sh_size	74:27:2171:2188	3616693	1	True				
ANR	3617174	RelationalExpression	j < shdrp -> sh_size		3616693	0		<			
ANR	3617175	Identifier	j		3616693	0					
ANR	3617176	PtrMemberAccess	shdrp -> sh_size		3616693	1					
ANR	3617177	Identifier	shdrp		3616693	0					
ANR	3617178	Identifier	sh_size		3616693	1					
ANR	3617179	Expression	"j += sizeof ( Elf_ ( Rel ) ) , relp ++"	74:47:2191:2220	3616693	2	True				
ANR	3617180	AssignmentExpression	j += sizeof ( Elf_ ( Rel ) )		3616693	0		+=			
ANR	3617181	Identifier	j		3616693	0					
ANR	3617182	SizeofExpression	sizeof ( Elf_ ( Rel ) )		3616693	1					
ANR	3617183	Sizeof	sizeof		3616693	0					
ANR	3617184	CallExpression	Elf_ ( Rel )		3616693	1					
ANR	3617185	Callee	Elf_		3616693	0					
ANR	3617186	Identifier	Elf_		3616693	0					
ANR	3617187	ArgumentList	Rel		3616693	1					
ANR	3617188	Argument	Rel		3616693	0					
ANR	3617189	Identifier	Rel		3616693	0					
ANR	3617190	PostIncDecOperationExpression	relp ++		3616693	1					
ANR	3617191	Identifier	relp		3616693	0					
ANR	3617192	IncDec	++		3616693	1					
ANR	3617193	CompoundStatement		60:79:1735:1735	3616693	3					
ANR	3617194	IfStatement	if ( relp -> r_offset - got_addr + got_offset >= rsz_offset + rsz_osize )		3616693	0					
ANR	3617195	Condition	relp -> r_offset - got_addr + got_offset >= rsz_offset + rsz_osize	76:8:2266:2329	3616693	0	True				
ANR	3617196	RelationalExpression	relp -> r_offset - got_addr + got_offset >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617197	AdditiveExpression	relp -> r_offset - got_addr + got_offset		3616693	0		-			
ANR	3617198	PtrMemberAccess	relp -> r_offset		3616693	0					
ANR	3617199	Identifier	relp		3616693	0					
ANR	3617200	Identifier	r_offset		3616693	1					
ANR	3617201	AdditiveExpression	got_addr + got_offset		3616693	1		+			
ANR	3617202	Identifier	got_addr		3616693	0					
ANR	3617203	Identifier	got_offset		3616693	1					
ANR	3617204	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617205	Identifier	rsz_offset		3616693	0					
ANR	3617206	Identifier	rsz_osize		3616693	1					
ANR	3617207	CompoundStatement		62:74:1844:1844	3616693	1					
ANR	3617208	ExpressionStatement	relp -> r_offset += delta	77:5:2339:2360	3616693	0	True				
ANR	3617209	AssignmentExpression	relp -> r_offset += delta		3616693	0		+=			
ANR	3617210	PtrMemberAccess	relp -> r_offset		3616693	0					
ANR	3617211	Identifier	relp		3616693	0					
ANR	3617212	Identifier	r_offset		3616693	1					
ANR	3617213	Identifier	delta		3616693	1					
ANR	3617214	ExpressionStatement	off = shdrp -> sh_offset + j	78:5:2367:2393	3616693	1	True				
ANR	3617215	AssignmentExpression	off = shdrp -> sh_offset + j		3616693	0		=			
ANR	3617216	Identifier	off		3616693	0					
ANR	3617217	AdditiveExpression	shdrp -> sh_offset + j		3616693	1		+			
ANR	3617218	PtrMemberAccess	shdrp -> sh_offset		3616693	0					
ANR	3617219	Identifier	shdrp		3616693	0					
ANR	3617220	Identifier	sh_offset		3616693	1					
ANR	3617221	Identifier	j		3616693	1					
ANR	3617222	IfStatement	"if ( r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rel ) ) ) == - 1 )"		3616693	2					
ANR	3617223	Condition	"r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rel ) ) ) == - 1"	79:9:2404:2469	3616693	0	True				
ANR	3617224	EqualityExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rel ) ) ) == - 1"		3616693	0		==			
ANR	3617225	CallExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rel ) ) )"		3616693	0					
ANR	3617226	Callee	r_buf_write_at		3616693	0					
ANR	3617227	Identifier	r_buf_write_at		3616693	0					
ANR	3617228	ArgumentList	bin -> b		3616693	1					
ANR	3617229	Argument	bin -> b		3616693	0					
ANR	3617230	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617231	Identifier	bin		3616693	0					
ANR	3617232	Identifier	b		3616693	1					
ANR	3617233	Argument	off		3616693	1					
ANR	3617234	Identifier	off		3616693	0					
ANR	3617235	Argument	( ut8 * ) relp		3616693	2					
ANR	3617236	CastExpression	( ut8 * ) relp		3616693	0					
ANR	3617237	CastTarget	ut8 *		3616693	0					
ANR	3617238	Identifier	relp		3616693	1					
ANR	3617239	Argument	sizeof ( Elf_ ( Rel ) )		3616693	3					
ANR	3617240	SizeofExpression	sizeof ( Elf_ ( Rel ) )		3616693	0					
ANR	3617241	Sizeof	sizeof		3616693	0					
ANR	3617242	CallExpression	Elf_ ( Rel )		3616693	1					
ANR	3617243	Callee	Elf_		3616693	0					
ANR	3617244	Identifier	Elf_		3616693	0					
ANR	3617245	ArgumentList	Rel		3616693	1					
ANR	3617246	Argument	Rel		3616693	0					
ANR	3617247	Identifier	Rel		3616693	0					
ANR	3617248	UnaryOperationExpression	- 1		3616693	1					
ANR	3617249	UnaryOperator	-		3616693	0					
ANR	3617250	PrimaryExpression	1		3616693	1					
ANR	3617251	CompoundStatement		65:77:1984:1984	3616693	1					
ANR	3617252	ExpressionStatement	"perror ( ""write (imports)"" )"	80:6:2480:2505	3616693	0	True				
ANR	3617253	CallExpression	"perror ( ""write (imports)"" )"		3616693	0					
ANR	3617254	Callee	perror		3616693	0					
ANR	3617255	Identifier	perror		3616693	0					
ANR	3617256	ArgumentList	"""write (imports)"""		3616693	1					
ANR	3617257	Argument	"""write (imports)"""		3616693	0					
ANR	3617258	PrimaryExpression	"""write (imports)"""		3616693	0					
ANR	3617259	ExpressionStatement	free ( rel )	84:3:2528:2537	3616693	14	True				
ANR	3617260	CallExpression	free ( rel )		3616693	0					
ANR	3617261	Callee	free		3616693	0					
ANR	3617262	Identifier	free		3616693	0					
ANR	3617263	ArgumentList	rel		3616693	1					
ANR	3617264	Argument	rel		3616693	0					
ANR	3617265	Identifier	rel		3616693	0					
ANR	3617266	BreakStatement	break ;	85:3:2542:2547	3616693	15	True				
ANR	3617267	ElseStatement	else		3616693	0					
ANR	3617268	IfStatement	"if ( ! strcmp ( & strtab [ shdrp -> sh_name ] , "".rela.plt"" ) )"		3616693	0					
ANR	3617269	Condition	"! strcmp ( & strtab [ shdrp -> sh_name ] , "".rela.plt"" )"	86:13:2562:2607	3616693	0	True				
ANR	3617270	UnaryOperationExpression	"! strcmp ( & strtab [ shdrp -> sh_name ] , "".rela.plt"" )"		3616693	0					
ANR	3617271	UnaryOperator	!		3616693	0					
ANR	3617272	CallExpression	"strcmp ( & strtab [ shdrp -> sh_name ] , "".rela.plt"" )"		3616693	1					
ANR	3617273	Callee	strcmp		3616693	0					
ANR	3617274	Identifier	strcmp		3616693	0					
ANR	3617275	ArgumentList	& strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617276	Argument	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617277	UnaryOperationExpression	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617278	UnaryOperator	&		3616693	0					
ANR	3617279	ArrayIndexing	strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617280	Identifier	strtab		3616693	0					
ANR	3617281	PtrMemberAccess	shdrp -> sh_name		3616693	1					
ANR	3617282	Identifier	shdrp		3616693	0					
ANR	3617283	Identifier	sh_name		3616693	1					
ANR	3617284	Argument	""".rela.plt"""		3616693	1					
ANR	3617285	PrimaryExpression	""".rela.plt"""		3616693	0					
ANR	3617286	CompoundStatement		72:61:2122:2122	3616693	1					
ANR	3617287	ExpressionStatement	"Elf_ ( Rela ) * rel , * relp"	87:3:2615:2637	3616693	0	True				
ANR	3617288	Expression	"Elf_ ( Rela ) * rel , * relp"		3616693	0					
ANR	3617289	MultiplicativeExpression	Elf_ ( Rela ) * rel		3616693	0		*			
ANR	3617290	CallExpression	Elf_ ( Rela )		3616693	0					
ANR	3617291	Callee	Elf_		3616693	0					
ANR	3617292	Identifier	Elf_		3616693	0					
ANR	3617293	ArgumentList	Rela		3616693	1					
ANR	3617294	Argument	Rela		3616693	0					
ANR	3617295	Identifier	Rela		3616693	0					
ANR	3617296	Identifier	rel		3616693	1					
ANR	3617297	UnaryOperationExpression	* relp		3616693	1					
ANR	3617298	UnaryOperator	*		3616693	0					
ANR	3617299	Identifier	relp		3616693	1					
ANR	3617300	Statement	rel	88:3:2642:2644	3616693	1	True				
ANR	3617301	Statement	=	88:7:2646:2646	3616693	2	True				
ANR	3617302	Statement	(	88:9:2648:2648	3616693	3	True				
ANR	3617303	Statement	Elf_	88:10:2649:2652	3616693	4	True				
ANR	3617304	Statement	(	88:14:2653:2653	3616693	5	True				
ANR	3617305	Statement	Rela	88:15:2654:2657	3616693	6	True				
ANR	3617306	Statement	)	88:19:2658:2658	3616693	7	True				
ANR	3617307	Statement	*	88:21:2660:2660	3616693	8	True				
ANR	3617308	Statement	)	88:22:2661:2661	3616693	9	True				
ANR	3617309	ExpressionStatement	malloc ( shdrp -> sh_size + 1 )	88:23:2662:2689	3616693	10	True				
ANR	3617310	CallExpression	malloc ( shdrp -> sh_size + 1 )		3616693	0					
ANR	3617311	Callee	malloc		3616693	0					
ANR	3617312	Identifier	malloc		3616693	0					
ANR	3617313	ArgumentList	shdrp -> sh_size + 1		3616693	1					
ANR	3617314	Argument	shdrp -> sh_size + 1		3616693	0					
ANR	3617315	AdditiveExpression	shdrp -> sh_size + 1		3616693	0		+			
ANR	3617316	PtrMemberAccess	shdrp -> sh_size		3616693	0					
ANR	3617317	Identifier	shdrp		3616693	0					
ANR	3617318	Identifier	sh_size		3616693	1					
ANR	3617319	PrimaryExpression	1		3616693	1					
ANR	3617320	IfStatement	if ( ! rel )		3616693	11					
ANR	3617321	Condition	! rel	89:7:2698:2701	3616693	0	True				
ANR	3617322	UnaryOperationExpression	! rel		3616693	0					
ANR	3617323	UnaryOperator	!		3616693	0					
ANR	3617324	Identifier	rel		3616693	1					
ANR	3617325	CompoundStatement		75:13:2216:2216	3616693	1					
ANR	3617326	ExpressionStatement	"perror ( ""malloc"" )"	90:4:2710:2726	3616693	0	True				
ANR	3617327	CallExpression	"perror ( ""malloc"" )"		3616693	0					
ANR	3617328	Callee	perror		3616693	0					
ANR	3617329	Identifier	perror		3616693	0					
ANR	3617330	ArgumentList	"""malloc"""		3616693	1					
ANR	3617331	Argument	"""malloc"""		3616693	0					
ANR	3617332	PrimaryExpression	"""malloc"""		3616693	0					
ANR	3617333	ReturnStatement	return 0 ;	91:4:2732:2740	3616693	1	True				
ANR	3617334	PrimaryExpression	0		3616693	0					
ANR	3617335	IfStatement	"if ( r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size ) == - 1 )"		3616693	12					
ANR	3617336	Condition	"r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size ) == - 1"	93:7:2754:2826	3616693	0	True				
ANR	3617337	EqualityExpression	"r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size ) == - 1"		3616693	0		==			
ANR	3617338	CallExpression	"r_buf_read_at ( bin -> b , shdrp -> sh_offset , ( ut8 * ) rel , shdrp -> sh_size )"		3616693	0					
ANR	3617339	Callee	r_buf_read_at		3616693	0					
ANR	3617340	Identifier	r_buf_read_at		3616693	0					
ANR	3617341	ArgumentList	bin -> b		3616693	1					
ANR	3617342	Argument	bin -> b		3616693	0					
ANR	3617343	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617344	Identifier	bin		3616693	0					
ANR	3617345	Identifier	b		3616693	1					
ANR	3617346	Argument	shdrp -> sh_offset		3616693	1					
ANR	3617347	PtrMemberAccess	shdrp -> sh_offset		3616693	0					
ANR	3617348	Identifier	shdrp		3616693	0					
ANR	3617349	Identifier	sh_offset		3616693	1					
ANR	3617350	Argument	( ut8 * ) rel		3616693	2					
ANR	3617351	CastExpression	( ut8 * ) rel		3616693	0					
ANR	3617352	CastTarget	ut8 *		3616693	0					
ANR	3617353	Identifier	rel		3616693	1					
ANR	3617354	Argument	shdrp -> sh_size		3616693	3					
ANR	3617355	PtrMemberAccess	shdrp -> sh_size		3616693	0					
ANR	3617356	Identifier	shdrp		3616693	0					
ANR	3617357	Identifier	sh_size		3616693	1					
ANR	3617358	UnaryOperationExpression	- 1		3616693	1					
ANR	3617359	UnaryOperator	-		3616693	0					
ANR	3617360	PrimaryExpression	1		3616693	1					
ANR	3617361	CompoundStatement		79:82:2341:2341	3616693	1					
ANR	3617362	ExpressionStatement	"perror ( ""read (rel)"" )"	94:4:2835:2855	3616693	0	True				
ANR	3617363	CallExpression	"perror ( ""read (rel)"" )"		3616693	0					
ANR	3617364	Callee	perror		3616693	0					
ANR	3617365	Identifier	perror		3616693	0					
ANR	3617366	ArgumentList	"""read (rel)"""		3616693	1					
ANR	3617367	Argument	"""read (rel)"""		3616693	0					
ANR	3617368	PrimaryExpression	"""read (rel)"""		3616693	0					
ANR	3617369	ForStatement	"for ( j = 0 , relp = rel ; j < shdrp -> sh_size ; j += sizeof ( Elf_ ( Rela ) ) , relp ++ )"		3616693	13					
ANR	3617370	ForInit	"j = 0 , relp = rel ;"	96:8:2870:2887	3616693	0	True				
ANR	3617371	Expression	"j = 0 , relp = rel"		3616693	0					
ANR	3617372	AssignmentExpression	j = 0		3616693	0		=			
ANR	3617373	Identifier	j		3616693	0					
ANR	3617374	PrimaryExpression	0		3616693	1					
ANR	3617375	AssignmentExpression	relp = rel		3616693	1		=			
ANR	3617376	Identifier	relp		3616693	0					
ANR	3617377	Identifier	rel		3616693	1					
ANR	3617378	Condition	j < shdrp -> sh_size	96:27:2889:2906	3616693	1	True				
ANR	3617379	RelationalExpression	j < shdrp -> sh_size		3616693	0		<			
ANR	3617380	Identifier	j		3616693	0					
ANR	3617381	PtrMemberAccess	shdrp -> sh_size		3616693	1					
ANR	3617382	Identifier	shdrp		3616693	0					
ANR	3617383	Identifier	sh_size		3616693	1					
ANR	3617384	Expression	"j += sizeof ( Elf_ ( Rela ) ) , relp ++"	96:47:2909:2939	3616693	2	True				
ANR	3617385	AssignmentExpression	j += sizeof ( Elf_ ( Rela ) )		3616693	0		+=			
ANR	3617386	Identifier	j		3616693	0					
ANR	3617387	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3616693	1					
ANR	3617388	Sizeof	sizeof		3616693	0					
ANR	3617389	CallExpression	Elf_ ( Rela )		3616693	1					
ANR	3617390	Callee	Elf_		3616693	0					
ANR	3617391	Identifier	Elf_		3616693	0					
ANR	3617392	ArgumentList	Rela		3616693	1					
ANR	3617393	Argument	Rela		3616693	0					
ANR	3617394	Identifier	Rela		3616693	0					
ANR	3617395	PostIncDecOperationExpression	relp ++		3616693	1					
ANR	3617396	Identifier	relp		3616693	0					
ANR	3617397	IncDec	++		3616693	1					
ANR	3617398	CompoundStatement		82:80:2454:2454	3616693	3					
ANR	3617399	IfStatement	if ( relp -> r_offset - got_addr + got_offset >= rsz_offset + rsz_osize )		3616693	0					
ANR	3617400	Condition	relp -> r_offset - got_addr + got_offset >= rsz_offset + rsz_osize	98:8:2985:3048	3616693	0	True				
ANR	3617401	RelationalExpression	relp -> r_offset - got_addr + got_offset >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617402	AdditiveExpression	relp -> r_offset - got_addr + got_offset		3616693	0		-			
ANR	3617403	PtrMemberAccess	relp -> r_offset		3616693	0					
ANR	3617404	Identifier	relp		3616693	0					
ANR	3617405	Identifier	r_offset		3616693	1					
ANR	3617406	AdditiveExpression	got_addr + got_offset		3616693	1		+			
ANR	3617407	Identifier	got_addr		3616693	0					
ANR	3617408	Identifier	got_offset		3616693	1					
ANR	3617409	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617410	Identifier	rsz_offset		3616693	0					
ANR	3617411	Identifier	rsz_osize		3616693	1					
ANR	3617412	CompoundStatement		84:74:2563:2563	3616693	1					
ANR	3617413	ExpressionStatement	relp -> r_offset += delta	99:5:3058:3079	3616693	0	True				
ANR	3617414	AssignmentExpression	relp -> r_offset += delta		3616693	0		+=			
ANR	3617415	PtrMemberAccess	relp -> r_offset		3616693	0					
ANR	3617416	Identifier	relp		3616693	0					
ANR	3617417	Identifier	r_offset		3616693	1					
ANR	3617418	Identifier	delta		3616693	1					
ANR	3617419	ExpressionStatement	off = shdrp -> sh_offset + j	100:5:3086:3112	3616693	1	True				
ANR	3617420	AssignmentExpression	off = shdrp -> sh_offset + j		3616693	0		=			
ANR	3617421	Identifier	off		3616693	0					
ANR	3617422	AdditiveExpression	shdrp -> sh_offset + j		3616693	1		+			
ANR	3617423	PtrMemberAccess	shdrp -> sh_offset		3616693	0					
ANR	3617424	Identifier	shdrp		3616693	0					
ANR	3617425	Identifier	sh_offset		3616693	1					
ANR	3617426	Identifier	j		3616693	1					
ANR	3617427	IfStatement	"if ( r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rela ) ) ) == - 1 )"		3616693	2					
ANR	3617428	Condition	"r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rela ) ) ) == - 1"	101:9:3123:3189	3616693	0	True				
ANR	3617429	EqualityExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rela ) ) ) == - 1"		3616693	0		==			
ANR	3617430	CallExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) relp , sizeof ( Elf_ ( Rela ) ) )"		3616693	0					
ANR	3617431	Callee	r_buf_write_at		3616693	0					
ANR	3617432	Identifier	r_buf_write_at		3616693	0					
ANR	3617433	ArgumentList	bin -> b		3616693	1					
ANR	3617434	Argument	bin -> b		3616693	0					
ANR	3617435	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617436	Identifier	bin		3616693	0					
ANR	3617437	Identifier	b		3616693	1					
ANR	3617438	Argument	off		3616693	1					
ANR	3617439	Identifier	off		3616693	0					
ANR	3617440	Argument	( ut8 * ) relp		3616693	2					
ANR	3617441	CastExpression	( ut8 * ) relp		3616693	0					
ANR	3617442	CastTarget	ut8 *		3616693	0					
ANR	3617443	Identifier	relp		3616693	1					
ANR	3617444	Argument	sizeof ( Elf_ ( Rela ) )		3616693	3					
ANR	3617445	SizeofExpression	sizeof ( Elf_ ( Rela ) )		3616693	0					
ANR	3617446	Sizeof	sizeof		3616693	0					
ANR	3617447	CallExpression	Elf_ ( Rela )		3616693	1					
ANR	3617448	Callee	Elf_		3616693	0					
ANR	3617449	Identifier	Elf_		3616693	0					
ANR	3617450	ArgumentList	Rela		3616693	1					
ANR	3617451	Argument	Rela		3616693	0					
ANR	3617452	Identifier	Rela		3616693	0					
ANR	3617453	UnaryOperationExpression	- 1		3616693	1					
ANR	3617454	UnaryOperator	-		3616693	0					
ANR	3617455	PrimaryExpression	1		3616693	1					
ANR	3617456	CompoundStatement		87:78:2704:2704	3616693	1					
ANR	3617457	ExpressionStatement	"perror ( ""write (imports)"" )"	102:6:3200:3225	3616693	0	True				
ANR	3617458	CallExpression	"perror ( ""write (imports)"" )"		3616693	0					
ANR	3617459	Callee	perror		3616693	0					
ANR	3617460	Identifier	perror		3616693	0					
ANR	3617461	ArgumentList	"""write (imports)"""		3616693	1					
ANR	3617462	Argument	"""write (imports)"""		3616693	0					
ANR	3617463	PrimaryExpression	"""write (imports)"""		3616693	0					
ANR	3617464	ExpressionStatement	free ( rel )	106:3:3248:3257	3616693	14	True				
ANR	3617465	CallExpression	free ( rel )		3616693	0					
ANR	3617466	Callee	free		3616693	0					
ANR	3617467	Identifier	free		3616693	0					
ANR	3617468	ArgumentList	rel		3616693	1					
ANR	3617469	Argument	rel		3616693	0					
ANR	3617470	Identifier	rel		3616693	0					
ANR	3617471	BreakStatement	break ;	107:3:3262:3267	3616693	15	True				
ANR	3617472	ForStatement	"for ( i = 0 , shdrp = shdr ; i < ehdr -> e_shnum ; i ++ , shdrp ++ )"		3616693	25					
ANR	3617473	ForInit	"i = 0 , shdrp = shdr ;"	112:6:3314:3333	3616693	0	True				
ANR	3617474	Expression	"i = 0 , shdrp = shdr"		3616693	0					
ANR	3617475	AssignmentExpression	i = 0		3616693	0		=			
ANR	3617476	Identifier	i		3616693	0					
ANR	3617477	PrimaryExpression	0		3616693	1					
ANR	3617478	AssignmentExpression	shdrp = shdr		3616693	1		=			
ANR	3617479	Identifier	shdrp		3616693	0					
ANR	3617480	Identifier	shdr		3616693	1					
ANR	3617481	Condition	i < ehdr -> e_shnum	112:27:3335:3351	3616693	1	True				
ANR	3617482	RelationalExpression	i < ehdr -> e_shnum		3616693	0		<			
ANR	3617483	Identifier	i		3616693	0					
ANR	3617484	PtrMemberAccess	ehdr -> e_shnum		3616693	1					
ANR	3617485	Identifier	ehdr		3616693	0					
ANR	3617486	Identifier	e_shnum		3616693	1					
ANR	3617487	Expression	"i ++ , shdrp ++"	112:46:3354:3365	3616693	2	True				
ANR	3617488	PostIncDecOperationExpression	i ++		3616693	0					
ANR	3617489	Identifier	i		3616693	0					
ANR	3617490	IncDec	++		3616693	1					
ANR	3617491	PostIncDecOperationExpression	shdrp ++		3616693	1					
ANR	3617492	Identifier	shdrp		3616693	0					
ANR	3617493	IncDec	++		3616693	1					
ANR	3617494	CompoundStatement		98:60:2880:2880	3616693	3					
ANR	3617495	IfStatement	"if ( ! done && ! strncmp ( name , & strtab [ shdrp -> sh_name ] , ELF_STRING_LENGTH ) )"		3616693	0					
ANR	3617496	Condition	"! done && ! strncmp ( name , & strtab [ shdrp -> sh_name ] , ELF_STRING_LENGTH )"	113:6:3376:3443	3616693	0	True				
ANR	3617497	AndExpression	"! done && ! strncmp ( name , & strtab [ shdrp -> sh_name ] , ELF_STRING_LENGTH )"		3616693	0		&&			
ANR	3617498	UnaryOperationExpression	! done		3616693	0					
ANR	3617499	UnaryOperator	!		3616693	0					
ANR	3617500	Identifier	done		3616693	1					
ANR	3617501	UnaryOperationExpression	"! strncmp ( name , & strtab [ shdrp -> sh_name ] , ELF_STRING_LENGTH )"		3616693	1					
ANR	3617502	UnaryOperator	!		3616693	0					
ANR	3617503	CallExpression	"strncmp ( name , & strtab [ shdrp -> sh_name ] , ELF_STRING_LENGTH )"		3616693	1					
ANR	3617504	Callee	strncmp		3616693	0					
ANR	3617505	Identifier	strncmp		3616693	0					
ANR	3617506	ArgumentList	name		3616693	1					
ANR	3617507	Argument	name		3616693	0					
ANR	3617508	Identifier	name		3616693	0					
ANR	3617509	Argument	& strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617510	UnaryOperationExpression	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617511	UnaryOperator	&		3616693	0					
ANR	3617512	ArrayIndexing	strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617513	Identifier	strtab		3616693	0					
ANR	3617514	PtrMemberAccess	shdrp -> sh_name		3616693	1					
ANR	3617515	Identifier	shdrp		3616693	0					
ANR	3617516	Identifier	sh_name		3616693	1					
ANR	3617517	Argument	ELF_STRING_LENGTH		3616693	2					
ANR	3617518	Identifier	ELF_STRING_LENGTH		3616693	0					
ANR	3617519	CompoundStatement		99:76:2958:2958	3616693	1					
ANR	3617520	ExpressionStatement	shdrp -> sh_size = rsz_size	114:3:3451:3476	3616693	0	True				
ANR	3617521	AssignmentExpression	shdrp -> sh_size = rsz_size		3616693	0		=			
ANR	3617522	PtrMemberAccess	shdrp -> sh_size		3616693	0					
ANR	3617523	Identifier	shdrp		3616693	0					
ANR	3617524	Identifier	sh_size		3616693	1					
ANR	3617525	Identifier	rsz_size		3616693	1					
ANR	3617526	ExpressionStatement	done = 1	115:3:3481:3489	3616693	1	True				
ANR	3617527	AssignmentExpression	done = 1		3616693	0		=			
ANR	3617528	Identifier	done		3616693	0					
ANR	3617529	PrimaryExpression	1		3616693	1					
ANR	3617530	ElseStatement	else		3616693	0					
ANR	3617531	IfStatement	if ( shdrp -> sh_offset >= rsz_offset + rsz_osize )		3616693	0					
ANR	3617532	Condition	shdrp -> sh_offset >= rsz_offset + rsz_osize	116:13:3504:3545	3616693	0	True				
ANR	3617533	RelationalExpression	shdrp -> sh_offset >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617534	PtrMemberAccess	shdrp -> sh_offset		3616693	0					
ANR	3617535	Identifier	shdrp		3616693	0					
ANR	3617536	Identifier	sh_offset		3616693	1					
ANR	3617537	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617538	Identifier	rsz_offset		3616693	0					
ANR	3617539	Identifier	rsz_osize		3616693	1					
ANR	3617540	CompoundStatement		102:57:3060:3060	3616693	1					
ANR	3617541	ExpressionStatement	shdrp -> sh_offset += delta	117:3:3553:3578	3616693	0	True				
ANR	3617542	AssignmentExpression	shdrp -> sh_offset += delta		3616693	0		+=			
ANR	3617543	PtrMemberAccess	shdrp -> sh_offset		3616693	0					
ANR	3617544	Identifier	shdrp		3616693	0					
ANR	3617545	Identifier	sh_offset		3616693	1					
ANR	3617546	Identifier	delta		3616693	1					
ANR	3617547	IfStatement	if ( shdrp -> sh_addr )		3616693	1					
ANR	3617548	Condition	shdrp -> sh_addr	118:7:3587:3600	3616693	0	True				
ANR	3617549	PtrMemberAccess	shdrp -> sh_addr		3616693	0					
ANR	3617550	Identifier	shdrp		3616693	0					
ANR	3617551	Identifier	sh_addr		3616693	1					
ANR	3617552	CompoundStatement		104:23:3115:3115	3616693	1					
ANR	3617553	ExpressionStatement	shdrp -> sh_addr += delta	119:4:3609:3632	3616693	0	True				
ANR	3617554	AssignmentExpression	shdrp -> sh_addr += delta		3616693	0		+=			
ANR	3617555	PtrMemberAccess	shdrp -> sh_addr		3616693	0					
ANR	3617556	Identifier	shdrp		3616693	0					
ANR	3617557	Identifier	sh_addr		3616693	1					
ANR	3617558	Identifier	delta		3616693	1					
ANR	3617559	ExpressionStatement	off = ehdr -> e_shoff + i * sizeof ( Elf_ ( Shdr ) )	122:2:3645:3690	3616693	1	True				
ANR	3617560	AssignmentExpression	off = ehdr -> e_shoff + i * sizeof ( Elf_ ( Shdr ) )		3616693	0		=			
ANR	3617561	Identifier	off		3616693	0					
ANR	3617562	AdditiveExpression	ehdr -> e_shoff + i * sizeof ( Elf_ ( Shdr ) )		3616693	1		+			
ANR	3617563	PtrMemberAccess	ehdr -> e_shoff		3616693	0					
ANR	3617564	Identifier	ehdr		3616693	0					
ANR	3617565	Identifier	e_shoff		3616693	1					
ANR	3617566	MultiplicativeExpression	i * sizeof ( Elf_ ( Shdr ) )		3616693	1		*			
ANR	3617567	Identifier	i		3616693	0					
ANR	3617568	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3616693	1					
ANR	3617569	Sizeof	sizeof		3616693	0					
ANR	3617570	CallExpression	Elf_ ( Shdr )		3616693	1					
ANR	3617571	Callee	Elf_		3616693	0					
ANR	3617572	Identifier	Elf_		3616693	0					
ANR	3617573	ArgumentList	Shdr		3616693	1					
ANR	3617574	Argument	Shdr		3616693	0					
ANR	3617575	Identifier	Shdr		3616693	0					
ANR	3617576	IfStatement	"if ( r_buf_write_at ( bin -> b , off , ( ut8 * ) shdrp , sizeof ( Elf_ ( Shdr ) ) ) == - 1 )"		3616693	2					
ANR	3617577	Condition	"r_buf_write_at ( bin -> b , off , ( ut8 * ) shdrp , sizeof ( Elf_ ( Shdr ) ) ) == - 1"	123:6:3698:3765	3616693	0	True				
ANR	3617578	EqualityExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) shdrp , sizeof ( Elf_ ( Shdr ) ) ) == - 1"		3616693	0		==			
ANR	3617579	CallExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) shdrp , sizeof ( Elf_ ( Shdr ) ) )"		3616693	0					
ANR	3617580	Callee	r_buf_write_at		3616693	0					
ANR	3617581	Identifier	r_buf_write_at		3616693	0					
ANR	3617582	ArgumentList	bin -> b		3616693	1					
ANR	3617583	Argument	bin -> b		3616693	0					
ANR	3617584	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617585	Identifier	bin		3616693	0					
ANR	3617586	Identifier	b		3616693	1					
ANR	3617587	Argument	off		3616693	1					
ANR	3617588	Identifier	off		3616693	0					
ANR	3617589	Argument	( ut8 * ) shdrp		3616693	2					
ANR	3617590	CastExpression	( ut8 * ) shdrp		3616693	0					
ANR	3617591	CastTarget	ut8 *		3616693	0					
ANR	3617592	Identifier	shdrp		3616693	1					
ANR	3617593	Argument	sizeof ( Elf_ ( Shdr ) )		3616693	3					
ANR	3617594	SizeofExpression	sizeof ( Elf_ ( Shdr ) )		3616693	0					
ANR	3617595	Sizeof	sizeof		3616693	0					
ANR	3617596	CallExpression	Elf_ ( Shdr )		3616693	1					
ANR	3617597	Callee	Elf_		3616693	0					
ANR	3617598	Identifier	Elf_		3616693	0					
ANR	3617599	ArgumentList	Shdr		3616693	1					
ANR	3617600	Argument	Shdr		3616693	0					
ANR	3617601	Identifier	Shdr		3616693	0					
ANR	3617602	UnaryOperationExpression	- 1		3616693	1					
ANR	3617603	UnaryOperator	-		3616693	0					
ANR	3617604	PrimaryExpression	1		3616693	1					
ANR	3617605	CompoundStatement		109:76:3280:3280	3616693	1					
ANR	3617606	ExpressionStatement	"perror ( ""write (shdr)"" )"	124:3:3773:3796	3616693	0	True				
ANR	3617607	CallExpression	"perror ( ""write (shdr)"" )"		3616693	0					
ANR	3617608	Callee	perror		3616693	0					
ANR	3617609	Identifier	perror		3616693	0					
ANR	3617610	ArgumentList	"""write (shdr)"""		3616693	1					
ANR	3617611	Argument	"""write (shdr)"""		3616693	0					
ANR	3617612	PrimaryExpression	"""write (shdr)"""		3616693	0					
ANR	3617613	ExpressionStatement	"printf ( ""-> elf section (%s)\\n"" , & strtab [ shdrp -> sh_name ] )"	126:2:3804:3861	3616693	3	True				
ANR	3617614	CallExpression	"printf ( ""-> elf section (%s)\\n"" , & strtab [ shdrp -> sh_name ] )"		3616693	0					
ANR	3617615	Callee	printf		3616693	0					
ANR	3617616	Identifier	printf		3616693	0					
ANR	3617617	ArgumentList	"""-> elf section (%s)\\n"""		3616693	1					
ANR	3617618	Argument	"""-> elf section (%s)\\n"""		3616693	0					
ANR	3617619	PrimaryExpression	"""-> elf section (%s)\\n"""		3616693	0					
ANR	3617620	Argument	& strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617621	UnaryOperationExpression	& strtab [ shdrp -> sh_name ]		3616693	0					
ANR	3617622	UnaryOperator	&		3616693	0					
ANR	3617623	ArrayIndexing	strtab [ shdrp -> sh_name ]		3616693	1					
ANR	3617624	Identifier	strtab		3616693	0					
ANR	3617625	PtrMemberAccess	shdrp -> sh_name		3616693	1					
ANR	3617626	Identifier	shdrp		3616693	0					
ANR	3617627	Identifier	sh_name		3616693	1					
ANR	3617628	ForStatement	"for ( i = 0 , phdrp = phdr ; i < ehdr -> e_phnum ; i ++ , phdrp ++ )"		3616693	26					
ANR	3617629	ForInit	"i = 0 , phdrp = phdr ;"	130:6:3904:3923	3616693	0	True				
ANR	3617630	Expression	"i = 0 , phdrp = phdr"		3616693	0					
ANR	3617631	AssignmentExpression	i = 0		3616693	0		=			
ANR	3617632	Identifier	i		3616693	0					
ANR	3617633	PrimaryExpression	0		3616693	1					
ANR	3617634	AssignmentExpression	phdrp = phdr		3616693	1		=			
ANR	3617635	Identifier	phdrp		3616693	0					
ANR	3617636	Identifier	phdr		3616693	1					
ANR	3617637	Condition	i < ehdr -> e_phnum	130:27:3925:3941	3616693	1	True				
ANR	3617638	RelationalExpression	i < ehdr -> e_phnum		3616693	0		<			
ANR	3617639	Identifier	i		3616693	0					
ANR	3617640	PtrMemberAccess	ehdr -> e_phnum		3616693	1					
ANR	3617641	Identifier	ehdr		3616693	0					
ANR	3617642	Identifier	e_phnum		3616693	1					
ANR	3617643	Expression	"i ++ , phdrp ++"	130:46:3944:3955	3616693	2	True				
ANR	3617644	PostIncDecOperationExpression	i ++		3616693	0					
ANR	3617645	Identifier	i		3616693	0					
ANR	3617646	IncDec	++		3616693	1					
ANR	3617647	PostIncDecOperationExpression	phdrp ++		3616693	1					
ANR	3617648	Identifier	phdrp		3616693	0					
ANR	3617649	IncDec	++		3616693	1					
ANR	3617650	CompoundStatement		116:60:3470:3470	3616693	3					
ANR	3617651	IfStatement	if ( phdrp -> p_offset < rsz_offset && phdrp -> p_offset + phdrp -> p_filesz > rsz_offset )		3616693	0					
ANR	3617652	Condition	phdrp -> p_offset < rsz_offset && phdrp -> p_offset + phdrp -> p_filesz > rsz_offset	132:6:3973:4050	3616693	0	True				
ANR	3617653	AndExpression	phdrp -> p_offset < rsz_offset && phdrp -> p_offset + phdrp -> p_filesz > rsz_offset		3616693	0		&&			
ANR	3617654	RelationalExpression	phdrp -> p_offset < rsz_offset		3616693	0		<			
ANR	3617655	PtrMemberAccess	phdrp -> p_offset		3616693	0					
ANR	3617656	Identifier	phdrp		3616693	0					
ANR	3617657	Identifier	p_offset		3616693	1					
ANR	3617658	Identifier	rsz_offset		3616693	1					
ANR	3617659	RelationalExpression	phdrp -> p_offset + phdrp -> p_filesz > rsz_offset		3616693	1		>			
ANR	3617660	AdditiveExpression	phdrp -> p_offset + phdrp -> p_filesz		3616693	0		+			
ANR	3617661	PtrMemberAccess	phdrp -> p_offset		3616693	0					
ANR	3617662	Identifier	phdrp		3616693	0					
ANR	3617663	Identifier	p_offset		3616693	1					
ANR	3617664	PtrMemberAccess	phdrp -> p_filesz		3616693	1					
ANR	3617665	Identifier	phdrp		3616693	0					
ANR	3617666	Identifier	p_filesz		3616693	1					
ANR	3617667	Identifier	rsz_offset		3616693	1					
ANR	3617668	CompoundStatement		118:86:3565:3565	3616693	1					
ANR	3617669	ExpressionStatement	phdrp -> p_filesz += delta	133:3:4058:4082	3616693	0	True				
ANR	3617670	AssignmentExpression	phdrp -> p_filesz += delta		3616693	0		+=			
ANR	3617671	PtrMemberAccess	phdrp -> p_filesz		3616693	0					
ANR	3617672	Identifier	phdrp		3616693	0					
ANR	3617673	Identifier	p_filesz		3616693	1					
ANR	3617674	Identifier	delta		3616693	1					
ANR	3617675	ExpressionStatement	phdrp -> p_memsz += delta	134:3:4087:4110	3616693	1	True				
ANR	3617676	AssignmentExpression	phdrp -> p_memsz += delta		3616693	0		+=			
ANR	3617677	PtrMemberAccess	phdrp -> p_memsz		3616693	0					
ANR	3617678	Identifier	phdrp		3616693	0					
ANR	3617679	Identifier	p_memsz		3616693	1					
ANR	3617680	Identifier	delta		3616693	1					
ANR	3617681	IfStatement	if ( phdrp -> p_offset >= rsz_offset + rsz_osize )		3616693	1					
ANR	3617682	Condition	phdrp -> p_offset >= rsz_offset + rsz_osize	137:6:4130:4170	3616693	0	True				
ANR	3617683	RelationalExpression	phdrp -> p_offset >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617684	PtrMemberAccess	phdrp -> p_offset		3616693	0					
ANR	3617685	Identifier	phdrp		3616693	0					
ANR	3617686	Identifier	p_offset		3616693	1					
ANR	3617687	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617688	Identifier	rsz_offset		3616693	0					
ANR	3617689	Identifier	rsz_osize		3616693	1					
ANR	3617690	CompoundStatement		123:49:3685:3685	3616693	1					
ANR	3617691	ExpressionStatement	phdrp -> p_offset += delta	138:3:4178:4202	3616693	0	True				
ANR	3617692	AssignmentExpression	phdrp -> p_offset += delta		3616693	0		+=			
ANR	3617693	PtrMemberAccess	phdrp -> p_offset		3616693	0					
ANR	3617694	Identifier	phdrp		3616693	0					
ANR	3617695	Identifier	p_offset		3616693	1					
ANR	3617696	Identifier	delta		3616693	1					
ANR	3617697	IfStatement	if ( phdrp -> p_vaddr )		3616693	1					
ANR	3617698	Condition	phdrp -> p_vaddr	139:7:4211:4224	3616693	0	True				
ANR	3617699	PtrMemberAccess	phdrp -> p_vaddr		3616693	0					
ANR	3617700	Identifier	phdrp		3616693	0					
ANR	3617701	Identifier	p_vaddr		3616693	1					
ANR	3617702	CompoundStatement		125:23:3739:3739	3616693	1					
ANR	3617703	ExpressionStatement	phdrp -> p_vaddr += delta	140:4:4233:4256	3616693	0	True				
ANR	3617704	AssignmentExpression	phdrp -> p_vaddr += delta		3616693	0		+=			
ANR	3617705	PtrMemberAccess	phdrp -> p_vaddr		3616693	0					
ANR	3617706	Identifier	phdrp		3616693	0					
ANR	3617707	Identifier	p_vaddr		3616693	1					
ANR	3617708	Identifier	delta		3616693	1					
ANR	3617709	IfStatement	if ( phdrp -> p_paddr )		3616693	2					
ANR	3617710	Condition	phdrp -> p_paddr	142:7:4270:4283	3616693	0	True				
ANR	3617711	PtrMemberAccess	phdrp -> p_paddr		3616693	0					
ANR	3617712	Identifier	phdrp		3616693	0					
ANR	3617713	Identifier	p_paddr		3616693	1					
ANR	3617714	CompoundStatement		128:23:3798:3798	3616693	1					
ANR	3617715	ExpressionStatement	phdrp -> p_paddr += delta	143:4:4292:4315	3616693	0	True				
ANR	3617716	AssignmentExpression	phdrp -> p_paddr += delta		3616693	0		+=			
ANR	3617717	PtrMemberAccess	phdrp -> p_paddr		3616693	0					
ANR	3617718	Identifier	phdrp		3616693	0					
ANR	3617719	Identifier	p_paddr		3616693	1					
ANR	3617720	Identifier	delta		3616693	1					
ANR	3617721	ElseStatement	else		3616693	0					
ANR	3617722	IfStatement	if ( phdrp -> p_offset + phdrp -> p_filesz >= rsz_offset + rsz_osize )		3616693	0					
ANR	3617723	Condition	phdrp -> p_offset + phdrp -> p_filesz >= rsz_offset + rsz_osize	145:13:4335:4393	3616693	0	True				
ANR	3617724	RelationalExpression	phdrp -> p_offset + phdrp -> p_filesz >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617725	AdditiveExpression	phdrp -> p_offset + phdrp -> p_filesz		3616693	0		+			
ANR	3617726	PtrMemberAccess	phdrp -> p_offset		3616693	0					
ANR	3617727	Identifier	phdrp		3616693	0					
ANR	3617728	Identifier	p_offset		3616693	1					
ANR	3617729	PtrMemberAccess	phdrp -> p_filesz		3616693	1					
ANR	3617730	Identifier	phdrp		3616693	0					
ANR	3617731	Identifier	p_filesz		3616693	1					
ANR	3617732	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617733	Identifier	rsz_offset		3616693	0					
ANR	3617734	Identifier	rsz_osize		3616693	1					
ANR	3617735	CompoundStatement		131:74:3908:3908	3616693	1					
ANR	3617736	ExpressionStatement	phdrp -> p_filesz += delta	146:3:4401:4425	3616693	0	True				
ANR	3617737	AssignmentExpression	phdrp -> p_filesz += delta		3616693	0		+=			
ANR	3617738	PtrMemberAccess	phdrp -> p_filesz		3616693	0					
ANR	3617739	Identifier	phdrp		3616693	0					
ANR	3617740	Identifier	p_filesz		3616693	1					
ANR	3617741	Identifier	delta		3616693	1					
ANR	3617742	ExpressionStatement	phdrp -> p_memsz += delta	147:3:4430:4453	3616693	1	True				
ANR	3617743	AssignmentExpression	phdrp -> p_memsz += delta		3616693	0		+=			
ANR	3617744	PtrMemberAccess	phdrp -> p_memsz		3616693	0					
ANR	3617745	Identifier	phdrp		3616693	0					
ANR	3617746	Identifier	p_memsz		3616693	1					
ANR	3617747	Identifier	delta		3616693	1					
ANR	3617748	ExpressionStatement	off = ehdr -> e_phoff + i * sizeof ( Elf_ ( Phdr ) )	149:2:4462:4507	3616693	2	True				
ANR	3617749	AssignmentExpression	off = ehdr -> e_phoff + i * sizeof ( Elf_ ( Phdr ) )		3616693	0		=			
ANR	3617750	Identifier	off		3616693	0					
ANR	3617751	AdditiveExpression	ehdr -> e_phoff + i * sizeof ( Elf_ ( Phdr ) )		3616693	1		+			
ANR	3617752	PtrMemberAccess	ehdr -> e_phoff		3616693	0					
ANR	3617753	Identifier	ehdr		3616693	0					
ANR	3617754	Identifier	e_phoff		3616693	1					
ANR	3617755	MultiplicativeExpression	i * sizeof ( Elf_ ( Phdr ) )		3616693	1		*			
ANR	3617756	Identifier	i		3616693	0					
ANR	3617757	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		3616693	1					
ANR	3617758	Sizeof	sizeof		3616693	0					
ANR	3617759	CallExpression	Elf_ ( Phdr )		3616693	1					
ANR	3617760	Callee	Elf_		3616693	0					
ANR	3617761	Identifier	Elf_		3616693	0					
ANR	3617762	ArgumentList	Phdr		3616693	1					
ANR	3617763	Argument	Phdr		3616693	0					
ANR	3617764	Identifier	Phdr		3616693	0					
ANR	3617765	IfStatement	"if ( r_buf_write_at ( bin -> b , off , ( ut8 * ) phdrp , sizeof ( Elf_ ( Phdr ) ) ) == - 1 )"		3616693	3					
ANR	3617766	Condition	"r_buf_write_at ( bin -> b , off , ( ut8 * ) phdrp , sizeof ( Elf_ ( Phdr ) ) ) == - 1"	150:6:4515:4584	3616693	0	True				
ANR	3617767	EqualityExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) phdrp , sizeof ( Elf_ ( Phdr ) ) ) == - 1"		3616693	0		==			
ANR	3617768	CallExpression	"r_buf_write_at ( bin -> b , off , ( ut8 * ) phdrp , sizeof ( Elf_ ( Phdr ) ) )"		3616693	0					
ANR	3617769	Callee	r_buf_write_at		3616693	0					
ANR	3617770	Identifier	r_buf_write_at		3616693	0					
ANR	3617771	ArgumentList	bin -> b		3616693	1					
ANR	3617772	Argument	bin -> b		3616693	0					
ANR	3617773	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617774	Identifier	bin		3616693	0					
ANR	3617775	Identifier	b		3616693	1					
ANR	3617776	Argument	off		3616693	1					
ANR	3617777	Identifier	off		3616693	0					
ANR	3617778	Argument	( ut8 * ) phdrp		3616693	2					
ANR	3617779	CastExpression	( ut8 * ) phdrp		3616693	0					
ANR	3617780	CastTarget	ut8 *		3616693	0					
ANR	3617781	Identifier	phdrp		3616693	1					
ANR	3617782	Argument	sizeof ( Elf_ ( Phdr ) )		3616693	3					
ANR	3617783	SizeofExpression	sizeof ( Elf_ ( Phdr ) )		3616693	0					
ANR	3617784	Sizeof	sizeof		3616693	0					
ANR	3617785	CallExpression	Elf_ ( Phdr )		3616693	1					
ANR	3617786	Callee	Elf_		3616693	0					
ANR	3617787	Identifier	Elf_		3616693	0					
ANR	3617788	ArgumentList	Phdr		3616693	1					
ANR	3617789	Argument	Phdr		3616693	0					
ANR	3617790	Identifier	Phdr		3616693	0					
ANR	3617791	UnaryOperationExpression	- 1		3616693	1					
ANR	3617792	UnaryOperator	-		3616693	0					
ANR	3617793	PrimaryExpression	1		3616693	1					
ANR	3617794	CompoundStatement		136:78:4099:4099	3616693	1					
ANR	3617795	ExpressionStatement	"perror ( ""write (phdr)"" )"	151:3:4592:4615	3616693	0	True				
ANR	3617796	CallExpression	"perror ( ""write (phdr)"" )"		3616693	0					
ANR	3617797	Callee	perror		3616693	0					
ANR	3617798	Identifier	perror		3616693	0					
ANR	3617799	ArgumentList	"""write (phdr)"""		3616693	1					
ANR	3617800	Argument	"""write (phdr)"""		3616693	0					
ANR	3617801	PrimaryExpression	"""write (phdr)"""		3616693	0					
ANR	3617802	Statement	printf	153:2:4623:4628	3616693	4	True				
ANR	3617803	Statement	(	153:9:4630:4630	3616693	5	True				
ANR	3617804	Statement	"""-> program header (0x%08"""	153:10:4631:4656	3616693	6	True				
ANR	3617805	Statement	PFMT64x	153:36:4657:4663	3616693	7	True				
ANR	3617806	Statement	""")\\n"""	153:43:4664:4668	3616693	8	True				
ANR	3617807	Statement	","	153:48:4669:4669	3616693	9	True				
ANR	3617808	Statement	(	153:50:4671:4671	3616693	10	True				
ANR	3617809	Statement	ut64	153:51:4672:4675	3616693	11	True				
ANR	3617810	Statement	)	153:55:4676:4676	3616693	12	True				
ANR	3617811	Statement	phdrp	153:57:4678:4682	3616693	13	True				
ANR	3617812	Statement	->	153:62:4683:4684	3616693	14	True				
ANR	3617813	Statement	p_offset	153:64:4685:4692	3616693	15	True				
ANR	3617814	Statement	)	153:72:4693:4693	3616693	16	True				
ANR	3617815	ExpressionStatement		153:73:4694:4694	3616693	17	True				
ANR	3617816	IfStatement	if ( ehdr -> e_entry - bin -> baddr >= rsz_offset + rsz_osize )		3616693	27					
ANR	3617817	Condition	ehdr -> e_entry - bin -> baddr >= rsz_offset + rsz_osize	157:5:4766:4817	3616693	0	True				
ANR	3617818	RelationalExpression	ehdr -> e_entry - bin -> baddr >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617819	AdditiveExpression	ehdr -> e_entry - bin -> baddr		3616693	0		-			
ANR	3617820	PtrMemberAccess	ehdr -> e_entry		3616693	0					
ANR	3617821	Identifier	ehdr		3616693	0					
ANR	3617822	Identifier	e_entry		3616693	1					
ANR	3617823	PtrMemberAccess	bin -> baddr		3616693	1					
ANR	3617824	Identifier	bin		3616693	0					
ANR	3617825	Identifier	baddr		3616693	1					
ANR	3617826	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617827	Identifier	rsz_offset		3616693	0					
ANR	3617828	Identifier	rsz_osize		3616693	1					
ANR	3617829	CompoundStatement		143:59:4332:4332	3616693	1					
ANR	3617830	ExpressionStatement	ehdr -> e_entry += delta	158:2:4824:4846	3616693	0	True				
ANR	3617831	AssignmentExpression	ehdr -> e_entry += delta		3616693	0		+=			
ANR	3617832	PtrMemberAccess	ehdr -> e_entry		3616693	0					
ANR	3617833	Identifier	ehdr		3616693	0					
ANR	3617834	Identifier	e_entry		3616693	1					
ANR	3617835	Identifier	delta		3616693	1					
ANR	3617836	IfStatement	if ( ehdr -> e_phoff >= rsz_offset + rsz_osize )		3616693	28					
ANR	3617837	Condition	ehdr -> e_phoff >= rsz_offset + rsz_osize	160:5:4856:4894	3616693	0	True				
ANR	3617838	RelationalExpression	ehdr -> e_phoff >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617839	PtrMemberAccess	ehdr -> e_phoff		3616693	0					
ANR	3617840	Identifier	ehdr		3616693	0					
ANR	3617841	Identifier	e_phoff		3616693	1					
ANR	3617842	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617843	Identifier	rsz_offset		3616693	0					
ANR	3617844	Identifier	rsz_osize		3616693	1					
ANR	3617845	CompoundStatement		146:46:4409:4409	3616693	1					
ANR	3617846	ExpressionStatement	ehdr -> e_phoff += delta	161:2:4901:4923	3616693	0	True				
ANR	3617847	AssignmentExpression	ehdr -> e_phoff += delta		3616693	0		+=			
ANR	3617848	PtrMemberAccess	ehdr -> e_phoff		3616693	0					
ANR	3617849	Identifier	ehdr		3616693	0					
ANR	3617850	Identifier	e_phoff		3616693	1					
ANR	3617851	Identifier	delta		3616693	1					
ANR	3617852	IfStatement	if ( ehdr -> e_shoff >= rsz_offset + rsz_osize )		3616693	29					
ANR	3617853	Condition	ehdr -> e_shoff >= rsz_offset + rsz_osize	163:5:4933:4971	3616693	0	True				
ANR	3617854	RelationalExpression	ehdr -> e_shoff >= rsz_offset + rsz_osize		3616693	0		>=			
ANR	3617855	PtrMemberAccess	ehdr -> e_shoff		3616693	0					
ANR	3617856	Identifier	ehdr		3616693	0					
ANR	3617857	Identifier	e_shoff		3616693	1					
ANR	3617858	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617859	Identifier	rsz_offset		3616693	0					
ANR	3617860	Identifier	rsz_osize		3616693	1					
ANR	3617861	CompoundStatement		149:46:4486:4486	3616693	1					
ANR	3617862	ExpressionStatement	ehdr -> e_shoff += delta	164:2:4978:5000	3616693	0	True				
ANR	3617863	AssignmentExpression	ehdr -> e_shoff += delta		3616693	0		+=			
ANR	3617864	PtrMemberAccess	ehdr -> e_shoff		3616693	0					
ANR	3617865	Identifier	ehdr		3616693	0					
ANR	3617866	Identifier	e_shoff		3616693	1					
ANR	3617867	Identifier	delta		3616693	1					
ANR	3617868	IfStatement	"if ( r_buf_write_at ( bin -> b , 0 , ( ut8 * ) ehdr , sizeof ( Elf_ ( Ehdr ) ) ) == - 1 )"		3616693	30					
ANR	3617869	Condition	"r_buf_write_at ( bin -> b , 0 , ( ut8 * ) ehdr , sizeof ( Elf_ ( Ehdr ) ) ) == - 1"	166:5:5010:5074	3616693	0	True				
ANR	3617870	EqualityExpression	"r_buf_write_at ( bin -> b , 0 , ( ut8 * ) ehdr , sizeof ( Elf_ ( Ehdr ) ) ) == - 1"		3616693	0		==			
ANR	3617871	CallExpression	"r_buf_write_at ( bin -> b , 0 , ( ut8 * ) ehdr , sizeof ( Elf_ ( Ehdr ) ) )"		3616693	0					
ANR	3617872	Callee	r_buf_write_at		3616693	0					
ANR	3617873	Identifier	r_buf_write_at		3616693	0					
ANR	3617874	ArgumentList	bin -> b		3616693	1					
ANR	3617875	Argument	bin -> b		3616693	0					
ANR	3617876	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617877	Identifier	bin		3616693	0					
ANR	3617878	Identifier	b		3616693	1					
ANR	3617879	Argument	0		3616693	1					
ANR	3617880	PrimaryExpression	0		3616693	0					
ANR	3617881	Argument	( ut8 * ) ehdr		3616693	2					
ANR	3617882	CastExpression	( ut8 * ) ehdr		3616693	0					
ANR	3617883	CastTarget	ut8 *		3616693	0					
ANR	3617884	Identifier	ehdr		3616693	1					
ANR	3617885	Argument	sizeof ( Elf_ ( Ehdr ) )		3616693	3					
ANR	3617886	SizeofExpression	sizeof ( Elf_ ( Ehdr ) )		3616693	0					
ANR	3617887	Sizeof	sizeof		3616693	0					
ANR	3617888	CallExpression	Elf_ ( Ehdr )		3616693	1					
ANR	3617889	Callee	Elf_		3616693	0					
ANR	3617890	Identifier	Elf_		3616693	0					
ANR	3617891	ArgumentList	Ehdr		3616693	1					
ANR	3617892	Argument	Ehdr		3616693	0					
ANR	3617893	Identifier	Ehdr		3616693	0					
ANR	3617894	UnaryOperationExpression	- 1		3616693	1					
ANR	3617895	UnaryOperator	-		3616693	0					
ANR	3617896	PrimaryExpression	1		3616693	1					
ANR	3617897	CompoundStatement		152:72:4589:4589	3616693	1					
ANR	3617898	ExpressionStatement	"perror ( ""write (ehdr)"" )"	167:2:5081:5104	3616693	0	True				
ANR	3617899	CallExpression	"perror ( ""write (ehdr)"" )"		3616693	0					
ANR	3617900	Callee	perror		3616693	0					
ANR	3617901	Identifier	perror		3616693	0					
ANR	3617902	ArgumentList	"""write (ehdr)"""		3616693	1					
ANR	3617903	Argument	"""write (ehdr)"""		3616693	0					
ANR	3617904	PrimaryExpression	"""write (ehdr)"""		3616693	0					
ANR	3617905	ExpressionStatement	rest_size = bin -> size - ( rsz_offset + rsz_osize )	172:1:5214:5262	3616693	31	True				
ANR	3617906	AssignmentExpression	rest_size = bin -> size - ( rsz_offset + rsz_osize )		3616693	0		=			
ANR	3617907	Identifier	rest_size		3616693	0					
ANR	3617908	AdditiveExpression	bin -> size - ( rsz_offset + rsz_osize )		3616693	1		-			
ANR	3617909	PtrMemberAccess	bin -> size		3616693	0					
ANR	3617910	Identifier	bin		3616693	0					
ANR	3617911	Identifier	size		3616693	1					
ANR	3617912	AdditiveExpression	rsz_offset + rsz_osize		3616693	1		+			
ANR	3617913	Identifier	rsz_offset		3616693	0					
ANR	3617914	Identifier	rsz_osize		3616693	1					
ANR	3617915	ExpressionStatement	buf = ( ut8 * ) malloc ( 1 + bin -> size )	174:1:5266:5299	3616693	32	True				
ANR	3617916	AssignmentExpression	buf = ( ut8 * ) malloc ( 1 + bin -> size )		3616693	0		=			
ANR	3617917	Identifier	buf		3616693	0					
ANR	3617918	CastExpression	( ut8 * ) malloc ( 1 + bin -> size )		3616693	1					
ANR	3617919	CastTarget	ut8 *		3616693	0					
ANR	3617920	CallExpression	malloc ( 1 + bin -> size )		3616693	1					
ANR	3617921	Callee	malloc		3616693	0					
ANR	3617922	Identifier	malloc		3616693	0					
ANR	3617923	ArgumentList	1 + bin -> size		3616693	1					
ANR	3617924	Argument	1 + bin -> size		3616693	0					
ANR	3617925	AdditiveExpression	1 + bin -> size		3616693	0		+			
ANR	3617926	PrimaryExpression	1		3616693	0					
ANR	3617927	PtrMemberAccess	bin -> size		3616693	1					
ANR	3617928	Identifier	bin		3616693	0					
ANR	3617929	Identifier	size		3616693	1					
ANR	3617930	ExpressionStatement	"r_buf_read_at ( bin -> b , 0 , ( ut8 * ) buf , bin -> size )"	175:1:5302:5349	3616693	33	True				
ANR	3617931	CallExpression	"r_buf_read_at ( bin -> b , 0 , ( ut8 * ) buf , bin -> size )"		3616693	0					
ANR	3617932	Callee	r_buf_read_at		3616693	0					
ANR	3617933	Identifier	r_buf_read_at		3616693	0					
ANR	3617934	ArgumentList	bin -> b		3616693	1					
ANR	3617935	Argument	bin -> b		3616693	0					
ANR	3617936	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617937	Identifier	bin		3616693	0					
ANR	3617938	Identifier	b		3616693	1					
ANR	3617939	Argument	0		3616693	1					
ANR	3617940	PrimaryExpression	0		3616693	0					
ANR	3617941	Argument	( ut8 * ) buf		3616693	2					
ANR	3617942	CastExpression	( ut8 * ) buf		3616693	0					
ANR	3617943	CastTarget	ut8 *		3616693	0					
ANR	3617944	Identifier	buf		3616693	1					
ANR	3617945	Argument	bin -> size		3616693	3					
ANR	3617946	PtrMemberAccess	bin -> size		3616693	0					
ANR	3617947	Identifier	bin		3616693	0					
ANR	3617948	Identifier	size		3616693	1					
ANR	3617949	ExpressionStatement	"r_buf_set_bytes ( bin -> b , ( ut8 * ) buf , ( int ) ( rsz_offset + rsz_size + rest_size ) )"	176:1:5352:5425	3616693	34	True				
ANR	3617950	CallExpression	"r_buf_set_bytes ( bin -> b , ( ut8 * ) buf , ( int ) ( rsz_offset + rsz_size + rest_size ) )"		3616693	0					
ANR	3617951	Callee	r_buf_set_bytes		3616693	0					
ANR	3617952	Identifier	r_buf_set_bytes		3616693	0					
ANR	3617953	ArgumentList	bin -> b		3616693	1					
ANR	3617954	Argument	bin -> b		3616693	0					
ANR	3617955	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617956	Identifier	bin		3616693	0					
ANR	3617957	Identifier	b		3616693	1					
ANR	3617958	Argument	( ut8 * ) buf		3616693	1					
ANR	3617959	CastExpression	( ut8 * ) buf		3616693	0					
ANR	3617960	CastTarget	ut8 *		3616693	0					
ANR	3617961	Identifier	buf		3616693	1					
ANR	3617962	Argument	( int ) ( rsz_offset + rsz_size + rest_size )		3616693	2					
ANR	3617963	CastExpression	( int ) ( rsz_offset + rsz_size + rest_size )		3616693	0					
ANR	3617964	CastTarget	int		3616693	0					
ANR	3617965	AdditiveExpression	rsz_offset + rsz_size + rest_size		3616693	1		+			
ANR	3617966	Identifier	rsz_offset		3616693	0					
ANR	3617967	AdditiveExpression	rsz_size + rest_size		3616693	1		+			
ANR	3617968	Identifier	rsz_size		3616693	0					
ANR	3617969	Identifier	rest_size		3616693	1					
ANR	3617970	Statement	printf	178:1:5429:5434	3616693	35	True				
ANR	3617971	Statement	(	178:8:5436:5436	3616693	36	True				
ANR	3617972	Statement	"""COPY FROM 0x%08"""	178:9:5437:5453	3616693	37	True				
ANR	3617973	Statement	PFMT64x	178:26:5454:5460	3616693	38	True				
ANR	3617974	Statement	"""\\n"""	178:33:5461:5464	3616693	39	True				
ANR	3617975	Statement	","	178:37:5465:5465	3616693	40	True				
ANR	3617976	Statement	(	178:39:5467:5467	3616693	41	True				
ANR	3617977	Statement	ut64	178:40:5468:5471	3616693	42	True				
ANR	3617978	Statement	)	178:44:5472:5472	3616693	43	True				
ANR	3617979	Statement	(	178:45:5473:5473	3616693	44	True				
ANR	3617980	Statement	rsz_offset	178:46:5474:5483	3616693	45	True				
ANR	3617981	Statement	+	178:56:5484:5484	3616693	46	True				
ANR	3617982	Statement	rsz_osize	178:57:5485:5493	3616693	47	True				
ANR	3617983	Statement	)	178:66:5494:5494	3616693	48	True				
ANR	3617984	Statement	)	178:67:5495:5495	3616693	49	True				
ANR	3617985	ExpressionStatement		178:68:5496:5496	3616693	50	True				
ANR	3617986	ExpressionStatement	"r_buf_read_at ( bin -> b , rsz_offset + rsz_osize , ( ut8 * ) buf , rest_size )"	179:1:5499:5567	3616693	51	True				
ANR	3617987	CallExpression	"r_buf_read_at ( bin -> b , rsz_offset + rsz_osize , ( ut8 * ) buf , rest_size )"		3616693	0					
ANR	3617988	Callee	r_buf_read_at		3616693	0					
ANR	3617989	Identifier	r_buf_read_at		3616693	0					
ANR	3617990	ArgumentList	bin -> b		3616693	1					
ANR	3617991	Argument	bin -> b		3616693	0					
ANR	3617992	PtrMemberAccess	bin -> b		3616693	0					
ANR	3617993	Identifier	bin		3616693	0					
ANR	3617994	Identifier	b		3616693	1					
ANR	3617995	Argument	rsz_offset + rsz_osize		3616693	1					
ANR	3617996	AdditiveExpression	rsz_offset + rsz_osize		3616693	0		+			
ANR	3617997	Identifier	rsz_offset		3616693	0					
ANR	3617998	Identifier	rsz_osize		3616693	1					
ANR	3617999	Argument	( ut8 * ) buf		3616693	2					
ANR	3618000	CastExpression	( ut8 * ) buf		3616693	0					
ANR	3618001	CastTarget	ut8 *		3616693	0					
ANR	3618002	Identifier	buf		3616693	1					
ANR	3618003	Argument	rest_size		3616693	3					
ANR	3618004	Identifier	rest_size		3616693	0					
ANR	3618005	Statement	printf	180:1:5570:5575	3616693	52	True				
ANR	3618006	Statement	(	180:8:5577:5577	3616693	53	True				
ANR	3618007	Statement	"""COPY TO 0x%08"""	180:9:5578:5592	3616693	54	True				
ANR	3618008	Statement	PFMT64x	180:24:5593:5599	3616693	55	True				
ANR	3618009	Statement	"""\\n"""	180:31:5600:5603	3616693	56	True				
ANR	3618010	Statement	","	180:35:5604:5604	3616693	57	True				
ANR	3618011	Statement	(	180:37:5606:5606	3616693	58	True				
ANR	3618012	Statement	ut64	180:38:5607:5610	3616693	59	True				
ANR	3618013	Statement	)	180:42:5611:5611	3616693	60	True				
ANR	3618014	Statement	(	180:43:5612:5612	3616693	61	True				
ANR	3618015	Statement	rsz_offset	180:44:5613:5622	3616693	62	True				
ANR	3618016	Statement	+	180:54:5623:5623	3616693	63	True				
ANR	3618017	Statement	rsz_size	180:55:5624:5631	3616693	64	True				
ANR	3618018	Statement	)	180:63:5632:5632	3616693	65	True				
ANR	3618019	Statement	)	180:64:5633:5633	3616693	66	True				
ANR	3618020	ExpressionStatement		180:65:5634:5634	3616693	67	True				
ANR	3618021	ExpressionStatement	"r_buf_write_at ( bin -> b , rsz_offset + rsz_size , ( ut8 * ) buf , rest_size )"	181:1:5637:5705	3616693	68	True				
ANR	3618022	CallExpression	"r_buf_write_at ( bin -> b , rsz_offset + rsz_size , ( ut8 * ) buf , rest_size )"		3616693	0					
ANR	3618023	Callee	r_buf_write_at		3616693	0					
ANR	3618024	Identifier	r_buf_write_at		3616693	0					
ANR	3618025	ArgumentList	bin -> b		3616693	1					
ANR	3618026	Argument	bin -> b		3616693	0					
ANR	3618027	PtrMemberAccess	bin -> b		3616693	0					
ANR	3618028	Identifier	bin		3616693	0					
ANR	3618029	Identifier	b		3616693	1					
ANR	3618030	Argument	rsz_offset + rsz_size		3616693	1					
ANR	3618031	AdditiveExpression	rsz_offset + rsz_size		3616693	0		+			
ANR	3618032	Identifier	rsz_offset		3616693	0					
ANR	3618033	Identifier	rsz_size		3616693	1					
ANR	3618034	Argument	( ut8 * ) buf		3616693	2					
ANR	3618035	CastExpression	( ut8 * ) buf		3616693	0					
ANR	3618036	CastTarget	ut8 *		3616693	0					
ANR	3618037	Identifier	buf		3616693	1					
ANR	3618038	Argument	rest_size		3616693	3					
ANR	3618039	Identifier	rest_size		3616693	0					
ANR	3618040	ExpressionStatement	"printf ( ""Shifted %d byte(s)\\n"" , ( int ) delta )"	182:1:5708:5751	3616693	69	True				
ANR	3618041	CallExpression	"printf ( ""Shifted %d byte(s)\\n"" , ( int ) delta )"		3616693	0					
ANR	3618042	Callee	printf		3616693	0					
ANR	3618043	Identifier	printf		3616693	0					
ANR	3618044	ArgumentList	"""Shifted %d byte(s)\\n"""		3616693	1					
ANR	3618045	Argument	"""Shifted %d byte(s)\\n"""		3616693	0					
ANR	3618046	PrimaryExpression	"""Shifted %d byte(s)\\n"""		3616693	0					
ANR	3618047	Argument	( int ) delta		3616693	1					
ANR	3618048	CastExpression	( int ) delta		3616693	0					
ANR	3618049	CastTarget	int		3616693	0					
ANR	3618050	Identifier	delta		3616693	1					
ANR	3618051	ExpressionStatement	free ( buf )	183:1:5754:5764	3616693	70	True				
ANR	3618052	CallExpression	free ( buf )		3616693	0					
ANR	3618053	Callee	free		3616693	0					
ANR	3618054	Identifier	free		3616693	0					
ANR	3618055	ArgumentList	buf		3616693	1					
ANR	3618056	Argument	buf		3616693	0					
ANR	3618057	Identifier	buf		3616693	0					
ANR	3618058	ExpressionStatement	bin -> size = r_buf_size ( bin -> b )	184:1:5767:5798	3616693	71	True				
ANR	3618059	AssignmentExpression	bin -> size = r_buf_size ( bin -> b )		3616693	0		=			
ANR	3618060	PtrMemberAccess	bin -> size		3616693	0					
ANR	3618061	Identifier	bin		3616693	0					
ANR	3618062	Identifier	size		3616693	1					
ANR	3618063	CallExpression	r_buf_size ( bin -> b )		3616693	1					
ANR	3618064	Callee	r_buf_size		3616693	0					
ANR	3618065	Identifier	r_buf_size		3616693	0					
ANR	3618066	ArgumentList	bin -> b		3616693	1					
ANR	3618067	Argument	bin -> b		3616693	0					
ANR	3618068	PtrMemberAccess	bin -> b		3616693	0					
ANR	3618069	Identifier	bin		3616693	0					
ANR	3618070	Identifier	b		3616693	1					
ANR	3618071	ReturnStatement	return delta ;	186:1:5802:5814	3616693	72	True				
ANR	3618072	Identifier	delta		3616693	0					
ANR	3618073	ReturnType	ut64 Elf_		3616693	1					
ANR	3618074	Identifier	( r_bin_elf_resize_section )		3616693	2					
ANR	3618075	Identifier	r_bin_elf_resize_section		3616693	3					
ANR	3618076	ParameterList	"RBinFile * bf , const char * name , ut64 size"		3616693	4					
ANR	3618077	Parameter	RBinFile * bf	15:36:444:455	3616693	0	True				
ANR	3618078	ParameterType	RBinFile *		3616693	0					
ANR	3618079	Identifier	bf		3616693	1					
ANR	3618080	Parameter	const char * name	15:50:458:473	3616693	1	True				
ANR	3618081	ParameterType	const char *		3616693	0					
ANR	3618082	Identifier	name		3616693	1					
ANR	3618083	Parameter	ut64 size	15:68:476:484	3616693	2	True				
ANR	3618084	ParameterType	ut64		3616693	0					
ANR	3618085	Identifier	size		3616693	1					
ANR	3618086	CFGEntryNode	ENTRY		3616693		True				
ANR	3618087	CFGExitNode	EXIT		3616693		True				
ANR	3618088	Symbol	bin -> size		3616693						
ANR	3618089	Symbol	bin -> b		3616693						
ANR	3618090	Symbol	Phdr		3616693						
ANR	3618091	Symbol	got_addr		3616693						
ANR	3618092	Symbol	bin		3616693						
ANR	3618093	Symbol	delta		3616693						
ANR	3618094	Symbol	bin -> phdr		3616693						
ANR	3618095	Symbol	* relp		3616693						
ANR	3618096	Symbol	r_buf_write_at		3616693						
ANR	3618097	Symbol	* phdrp		3616693						
ANR	3618098	Symbol	strtab		3616693						
ANR	3618099	Symbol	strncmp		3616693						
ANR	3618100	Symbol	phdrp -> p_offset		3616693						
ANR	3618101	Symbol	rest_size		3616693						
ANR	3618102	Symbol	bf -> o		3616693						
ANR	3618103	Symbol	shdr		3616693						
ANR	3618104	Symbol	phdrp -> p_paddr		3616693						
ANR	3618105	Symbol	rel		3616693						
ANR	3618106	Symbol	shdrp -> sh_addr		3616693						
ANR	3618107	Symbol	strcmp		3616693						
ANR	3618108	Symbol	shdrp		3616693						
ANR	3618109	Symbol	done		3616693						
ANR	3618110	Symbol	ELF_STRING_LENGTH		3616693						
ANR	3618111	Symbol	ehdr -> e_phnum		3616693						
ANR	3618112	Symbol	Rela		3616693						
ANR	3618113	Symbol	Ehdr		3616693						
ANR	3618114	Symbol	phdrp -> p_filesz		3616693						
ANR	3618115	Symbol	* * bf		3616693						
ANR	3618116	Symbol	phdr		3616693						
ANR	3618117	Symbol	size		3616693						
ANR	3618118	Symbol	name		3616693						
ANR	3618119	Symbol	* ehdr		3616693						
ANR	3618120	Symbol	idx		3616693						
ANR	3618121	Symbol	relp		3616693						
ANR	3618122	Symbol	bf		3616693						
ANR	3618123	Symbol	ehdr -> e_phoff		3616693						
ANR	3618124	Symbol	bin -> shstrtab_size		3616693						
ANR	3618125	Symbol	bin -> shstrtab		3616693						
ANR	3618126	Symbol	rsz_osize		3616693						
ANR	3618127	Symbol	* bin		3616693						
ANR	3618128	Symbol	got_offset		3616693						
ANR	3618129	Symbol	* bf -> o		3616693						
ANR	3618130	Symbol	rsz_offset		3616693						
ANR	3618131	Symbol	* shdrp		3616693						
ANR	3618132	Symbol	phdrp -> p_memsz		3616693						
ANR	3618133	Symbol	ehdr -> e_entry		3616693						
ANR	3618134	Symbol	ehdr		3616693						
ANR	3618135	Symbol	bf -> o -> bin_obj		3616693						
ANR	3618136	Symbol	Elf_		3616693						
ANR	3618137	Symbol	malloc		3616693						
ANR	3618138	Symbol	Shdr		3616693						
ANR	3618139	Symbol	ehdr -> e_shoff		3616693						
ANR	3618140	Symbol	shdrp -> sh_size		3616693						
ANR	3618141	Symbol	sh_name		3616693						
ANR	3618142	Symbol	r_bin_elf_obj_t		3616693						
ANR	3618143	Symbol	* bf		3616693						
ANR	3618144	Symbol	i		3616693						
ANR	3618145	Symbol	j		3616693						
ANR	3618146	Symbol	bin -> baddr		3616693						
ANR	3618147	Symbol	off		3616693						
ANR	3618148	Symbol	bin -> shdr		3616693						
ANR	3618149	Symbol	shdrp -> sh_offset		3616693						
ANR	3618150	Symbol	relp -> r_offset		3616693						
ANR	3618151	Symbol	phdrp		3616693						
ANR	3618152	Symbol	shdrp -> sh_name		3616693						
ANR	3618153	Symbol	buf		3616693						
ANR	3618154	Symbol	ehdr -> e_shnum		3616693						
ANR	3618155	Symbol	& bin -> ehdr		3616693						
ANR	3618156	Symbol	rsz_size		3616693						
ANR	3618157	Symbol	Rel		3616693						
ANR	3618158	Symbol	r_buf_read_at		3616693						
ANR	3618159	Symbol	phdrp -> p_vaddr		3616693						
ANR	3618160	Symbol	r_buf_size		3616693						
ANR	3618161	Function	r_bin_elf_del_rpath	190:0:5841:6962							
ANR	3618162	FunctionDef	r_bin_elf_del_rpath (RBinFile * bf)		3618161	0					
ANR	3618163	CompoundStatement		190:45:5886:6962	3618161	0					
ANR	3618164	Statement	struct	191:1:5889:5894	3618161	0	True				
ANR	3618165	ExpressionStatement	Elf_ ( r_bin_elf_obj_t ) * bin = bf -> o -> bin_obj	191:8:5896:5939	3618161	1	True				
ANR	3618166	AssignmentExpression	Elf_ ( r_bin_elf_obj_t ) * bin = bf -> o -> bin_obj		3618161	0		=			
ANR	3618167	MultiplicativeExpression	Elf_ ( r_bin_elf_obj_t ) * bin		3618161	0		*			
ANR	3618168	CallExpression	Elf_ ( r_bin_elf_obj_t )		3618161	0					
ANR	3618169	Callee	Elf_		3618161	0					
ANR	3618170	Identifier	Elf_		3618161	0					
ANR	3618171	ArgumentList	r_bin_elf_obj_t		3618161	1					
ANR	3618172	Argument	r_bin_elf_obj_t		3618161	0					
ANR	3618173	Identifier	r_bin_elf_obj_t		3618161	0					
ANR	3618174	Identifier	bin		3618161	1					
ANR	3618175	PtrMemberAccess	bf -> o -> bin_obj		3618161	1					
ANR	3618176	PtrMemberAccess	bf -> o		3618161	0					
ANR	3618177	Identifier	bf		3618161	0					
ANR	3618178	Identifier	o		3618161	1					
ANR	3618179	Identifier	bin_obj		3618161	1					
ANR	3618180	ExpressionStatement	Elf_ ( Dyn ) * dyn = NULL	192:1:5942:5963	3618161	2	True				
ANR	3618181	AssignmentExpression	Elf_ ( Dyn ) * dyn = NULL		3618161	0		=			
ANR	3618182	MultiplicativeExpression	Elf_ ( Dyn ) * dyn		3618161	0		*			
ANR	3618183	CallExpression	Elf_ ( Dyn )		3618161	0					
ANR	3618184	Callee	Elf_		3618161	0					
ANR	3618185	Identifier	Elf_		3618161	0					
ANR	3618186	ArgumentList	Dyn		3618161	1					
ANR	3618187	Argument	Dyn		3618161	0					
ANR	3618188	Identifier	Dyn		3618161	0					
ANR	3618189	Identifier	dyn		3618161	1					
ANR	3618190	Identifier	NULL		3618161	1					
ANR	3618191	Statement	ut64	193:1:5966:5969	3618161	3	True				
ANR	3618192	Statement	stroff	193:6:5971:5976	3618161	4	True				
ANR	3618193	Statement	=	193:13:5978:5978	3618161	5	True				
ANR	3618194	Statement	0L	193:15:5980:5981	3618161	6	True				
ANR	3618195	ExpressionStatement	L	193:17:5982:5983	3618161	7	True				
ANR	3618196	Identifier	L		3618161	0					
ANR	3618197	IdentifierDeclStatement	"int ndyn , i , j ;"	194:1:5986:6000	3618161	8	True				
ANR	3618198	IdentifierDecl	ndyn		3618161	0					
ANR	3618199	IdentifierDeclType	int		3618161	0					
ANR	3618200	Identifier	ndyn		3618161	1					
ANR	3618201	IdentifierDecl	i		3618161	1					
ANR	3618202	IdentifierDeclType	int		3618161	0					
ANR	3618203	Identifier	i		3618161	1					
ANR	3618204	IdentifierDecl	j		3618161	2					
ANR	3618205	IdentifierDeclType	int		3618161	0					
ANR	3618206	Identifier	j		3618161	1					
ANR	3618207	IfStatement	if ( ! bin -> phdr )		3618161	9					
ANR	3618208	Condition	! bin -> phdr	196:5:6008:6017	3618161	0	True				
ANR	3618209	UnaryOperationExpression	! bin -> phdr		3618161	0					
ANR	3618210	UnaryOperator	!		3618161	0					
ANR	3618211	PtrMemberAccess	bin -> phdr		3618161	1					
ANR	3618212	Identifier	bin		3618161	0					
ANR	3618213	Identifier	phdr		3618161	1					
ANR	3618214	CompoundStatement		7:17:133:133	3618161	1					
ANR	3618215	ReturnStatement	return false ;	197:2:6024:6036	3618161	0	True				
ANR	3618216	Identifier	false		3618161	0					
ANR	3618217	ForStatement	for ( i = 0 ; i < bin -> ehdr . e_phnum ; i ++ )		3618161	10					
ANR	3618218	ForInit	i = 0 ;	199:6:6047:6052	3618161	0	True				
ANR	3618219	AssignmentExpression	i = 0		3618161	0		=			
ANR	3618220	Identifier	i		3618161	0					
ANR	3618221	PrimaryExpression	0		3618161	1					
ANR	3618222	Condition	i < bin -> ehdr . e_phnum	199:13:6054:6074	3618161	1	True				
ANR	3618223	RelationalExpression	i < bin -> ehdr . e_phnum		3618161	0		<			
ANR	3618224	Identifier	i		3618161	0					
ANR	3618225	MemberAccess	bin -> ehdr . e_phnum		3618161	1					
ANR	3618226	PtrMemberAccess	bin -> ehdr		3618161	0					
ANR	3618227	Identifier	bin		3618161	0					
ANR	3618228	Identifier	ehdr		3618161	1					
ANR	3618229	Identifier	e_phnum		3618161	1					
ANR	3618230	PostIncDecOperationExpression	i ++	199:36:6077:6079	3618161	2	True				
ANR	3618231	Identifier	i		3618161	0					
ANR	3618232	IncDec	++		3618161	1					
ANR	3618233	CompoundStatement		10:41:195:195	3618161	3					
ANR	3618234	IfStatement	if ( bin -> phdr [ i ] . p_type != PT_DYNAMIC )		3618161	0					
ANR	3618235	Condition	bin -> phdr [ i ] . p_type != PT_DYNAMIC	200:6:6090:6122	3618161	0	True				
ANR	3618236	EqualityExpression	bin -> phdr [ i ] . p_type != PT_DYNAMIC		3618161	0		!=			
ANR	3618237	MemberAccess	bin -> phdr [ i ] . p_type		3618161	0					
ANR	3618238	ArrayIndexing	bin -> phdr [ i ]		3618161	0					
ANR	3618239	PtrMemberAccess	bin -> phdr		3618161	0					
ANR	3618240	Identifier	bin		3618161	0					
ANR	3618241	Identifier	phdr		3618161	1					
ANR	3618242	Identifier	i		3618161	1					
ANR	3618243	Identifier	p_type		3618161	1					
ANR	3618244	Identifier	PT_DYNAMIC		3618161	1					
ANR	3618245	CompoundStatement		11:41:238:238	3618161	1					
ANR	3618246	ContinueStatement	continue ;	201:3:6130:6138	3618161	0	True				
ANR	3618247	IfStatement	if ( ! ( dyn = malloc ( bin -> phdr [ i ] . p_filesz + 1 ) ) )		3618161	1					
ANR	3618248	Condition	! ( dyn = malloc ( bin -> phdr [ i ] . p_filesz + 1 ) )	203:6:6150:6192	3618161	0	True				
ANR	3618249	UnaryOperationExpression	! ( dyn = malloc ( bin -> phdr [ i ] . p_filesz + 1 ) )		3618161	0					
ANR	3618250	UnaryOperator	!		3618161	0					
ANR	3618251	AssignmentExpression	dyn = malloc ( bin -> phdr [ i ] . p_filesz + 1 )		3618161	1		=			
ANR	3618252	Identifier	dyn		3618161	0					
ANR	3618253	CallExpression	malloc ( bin -> phdr [ i ] . p_filesz + 1 )		3618161	1					
ANR	3618254	Callee	malloc		3618161	0					
ANR	3618255	Identifier	malloc		3618161	0					
ANR	3618256	ArgumentList	bin -> phdr [ i ] . p_filesz + 1		3618161	1					
ANR	3618257	Argument	bin -> phdr [ i ] . p_filesz + 1		3618161	0					
ANR	3618258	AdditiveExpression	bin -> phdr [ i ] . p_filesz + 1		3618161	0		+			
ANR	3618259	MemberAccess	bin -> phdr [ i ] . p_filesz		3618161	0					
ANR	3618260	ArrayIndexing	bin -> phdr [ i ]		3618161	0					
ANR	3618261	PtrMemberAccess	bin -> phdr		3618161	0					
ANR	3618262	Identifier	bin		3618161	0					
ANR	3618263	Identifier	phdr		3618161	1					
ANR	3618264	Identifier	i		3618161	1					
ANR	3618265	Identifier	p_filesz		3618161	1					
ANR	3618266	PrimaryExpression	1		3618161	1					
ANR	3618267	CompoundStatement		14:51:308:308	3618161	1					
ANR	3618268	ExpressionStatement	"perror ( ""malloc (dyn)"" )"	204:3:6200:6223	3618161	0	True				
ANR	3618269	CallExpression	"perror ( ""malloc (dyn)"" )"		3618161	0					
ANR	3618270	Callee	perror		3618161	0					
ANR	3618271	Identifier	perror		3618161	0					
ANR	3618272	ArgumentList	"""malloc (dyn)"""		3618161	1					
ANR	3618273	Argument	"""malloc (dyn)"""		3618161	0					
ANR	3618274	PrimaryExpression	"""malloc (dyn)"""		3618161	0					
ANR	3618275	ReturnStatement	return false ;	205:3:6228:6240	3618161	1	True				
ANR	3618276	Identifier	false		3618161	0					
ANR	3618277	IfStatement	"if ( r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset , ( ut8 * ) dyn , bin -> phdr [ i ] . p_filesz ) == - 1 )"		3618161	2					
ANR	3618278	Condition	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset , ( ut8 * ) dyn , bin -> phdr [ i ] . p_filesz ) == - 1"	207:6:6252:6336	3618161	0	True				
ANR	3618279	EqualityExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset , ( ut8 * ) dyn , bin -> phdr [ i ] . p_filesz ) == - 1"		3618161	0		==			
ANR	3618280	CallExpression	"r_buf_read_at ( bin -> b , bin -> phdr [ i ] . p_offset , ( ut8 * ) dyn , bin -> phdr [ i ] . p_filesz )"		3618161	0					
ANR	3618281	Callee	r_buf_read_at		3618161	0					
ANR	3618282	Identifier	r_buf_read_at		3618161	0					
ANR	3618283	ArgumentList	bin -> b		3618161	1					
ANR	3618284	Argument	bin -> b		3618161	0					
ANR	3618285	PtrMemberAccess	bin -> b		3618161	0					
ANR	3618286	Identifier	bin		3618161	0					
ANR	3618287	Identifier	b		3618161	1					
ANR	3618288	Argument	bin -> phdr [ i ] . p_offset		3618161	1					
ANR	3618289	MemberAccess	bin -> phdr [ i ] . p_offset		3618161	0					
ANR	3618290	ArrayIndexing	bin -> phdr [ i ]		3618161	0					
ANR	3618291	PtrMemberAccess	bin -> phdr		3618161	0					
ANR	3618292	Identifier	bin		3618161	0					
ANR	3618293	Identifier	phdr		3618161	1					
ANR	3618294	Identifier	i		3618161	1					
ANR	3618295	Identifier	p_offset		3618161	1					
ANR	3618296	Argument	( ut8 * ) dyn		3618161	2					
ANR	3618297	CastExpression	( ut8 * ) dyn		3618161	0					
ANR	3618298	CastTarget	ut8 *		3618161	0					
ANR	3618299	Identifier	dyn		3618161	1					
ANR	3618300	Argument	bin -> phdr [ i ] . p_filesz		3618161	3					
ANR	3618301	MemberAccess	bin -> phdr [ i ] . p_filesz		3618161	0					
ANR	3618302	ArrayIndexing	bin -> phdr [ i ]		3618161	0					
ANR	3618303	PtrMemberAccess	bin -> phdr		3618161	0					
ANR	3618304	Identifier	bin		3618161	0					
ANR	3618305	Identifier	phdr		3618161	1					
ANR	3618306	Identifier	i		3618161	1					
ANR	3618307	Identifier	p_filesz		3618161	1					
ANR	3618308	UnaryOperationExpression	- 1		3618161	1					
ANR	3618309	UnaryOperator	-		3618161	0					
ANR	3618310	PrimaryExpression	1		3618161	1					
ANR	3618311	CompoundStatement		18:93:452:452	3618161	1					
ANR	3618312	ExpressionStatement	"eprintf ( ""Error: read (dyn)\\n"" )"	208:3:6344:6375	3618161	0	True				
ANR	3618313	CallExpression	"eprintf ( ""Error: read (dyn)\\n"" )"		3618161	0					
ANR	3618314	Callee	eprintf		3618161	0					
ANR	3618315	Identifier	eprintf		3618161	0					
ANR	3618316	ArgumentList	"""Error: read (dyn)\\n"""		3618161	1					
ANR	3618317	Argument	"""Error: read (dyn)\\n"""		3618161	0					
ANR	3618318	PrimaryExpression	"""Error: read (dyn)\\n"""		3618161	0					
ANR	3618319	ExpressionStatement	free ( dyn )	209:3:6380:6390	3618161	1	True				
ANR	3618320	CallExpression	free ( dyn )		3618161	0					
ANR	3618321	Callee	free		3618161	0					
ANR	3618322	Identifier	free		3618161	0					
ANR	3618323	ArgumentList	dyn		3618161	1					
ANR	3618324	Argument	dyn		3618161	0					
ANR	3618325	Identifier	dyn		3618161	0					
ANR	3618326	ReturnStatement	return false ;	210:3:6395:6407	3618161	2	True				
ANR	3618327	Identifier	false		3618161	0					
ANR	3618328	IfStatement	if ( ( ndyn = ( int ) ( bin -> phdr [ i ] . p_filesz / sizeof ( Elf_ ( Dyn ) ) ) ) > 0 )		3618161	3					
ANR	3618329	Condition	( ndyn = ( int ) ( bin -> phdr [ i ] . p_filesz / sizeof ( Elf_ ( Dyn ) ) ) ) > 0	212:6:6419:6480	3618161	0	True				
ANR	3618330	RelationalExpression	( ndyn = ( int ) ( bin -> phdr [ i ] . p_filesz / sizeof ( Elf_ ( Dyn ) ) ) ) > 0		3618161	0		>			
ANR	3618331	AssignmentExpression	ndyn = ( int ) ( bin -> phdr [ i ] . p_filesz / sizeof ( Elf_ ( Dyn ) ) )		3618161	0		=			
ANR	3618332	Identifier	ndyn		3618161	0					
ANR	3618333	CastExpression	( int ) ( bin -> phdr [ i ] . p_filesz / sizeof ( Elf_ ( Dyn ) ) )		3618161	1					
ANR	3618334	CastTarget	int		3618161	0					
ANR	3618335	MultiplicativeExpression	bin -> phdr [ i ] . p_filesz / sizeof ( Elf_ ( Dyn ) )		3618161	1		/			
ANR	3618336	MemberAccess	bin -> phdr [ i ] . p_filesz		3618161	0					
ANR	3618337	ArrayIndexing	bin -> phdr [ i ]		3618161	0					
ANR	3618338	PtrMemberAccess	bin -> phdr		3618161	0					
ANR	3618339	Identifier	bin		3618161	0					
ANR	3618340	Identifier	phdr		3618161	1					
ANR	3618341	Identifier	i		3618161	1					
ANR	3618342	Identifier	p_filesz		3618161	1					
ANR	3618343	SizeofExpression	sizeof ( Elf_ ( Dyn ) )		3618161	1					
ANR	3618344	Sizeof	sizeof		3618161	0					
ANR	3618345	CallExpression	Elf_ ( Dyn )		3618161	1					
ANR	3618346	Callee	Elf_		3618161	0					
ANR	3618347	Identifier	Elf_		3618161	0					
ANR	3618348	ArgumentList	Dyn		3618161	1					
ANR	3618349	Argument	Dyn		3618161	0					
ANR	3618350	Identifier	Dyn		3618161	0					
ANR	3618351	PrimaryExpression	0		3618161	1					
ANR	3618352	CompoundStatement		23:70:596:596	3618161	1					
ANR	3618353	ForStatement	for ( j = 0 ; j < ndyn ; j ++ )		3618161	0					
ANR	3618354	ForInit	j = 0 ;	213:8:6493:6498	3618161	0	True				
ANR	3618355	AssignmentExpression	j = 0		3618161	0		=			
ANR	3618356	Identifier	j		3618161	0					
ANR	3618357	PrimaryExpression	0		3618161	1					
ANR	3618358	Condition	j < ndyn	213:15:6500:6507	3618161	1	True				
ANR	3618359	RelationalExpression	j < ndyn		3618161	0		<			
ANR	3618360	Identifier	j		3618161	0					
ANR	3618361	Identifier	ndyn		3618161	1					
ANR	3618362	PostIncDecOperationExpression	j ++	213:25:6510:6512	3618161	2	True				
ANR	3618363	Identifier	j		3618161	0					
ANR	3618364	IncDec	++		3618161	1					
ANR	3618365	CompoundStatement		24:30:628:628	3618161	3					
ANR	3618366	IfStatement	if ( dyn [ j ] . d_tag == DT_STRTAB )		3618161	0					
ANR	3618367	Condition	dyn [ j ] . d_tag == DT_STRTAB	214:8:6525:6549	3618161	0	True				
ANR	3618368	EqualityExpression	dyn [ j ] . d_tag == DT_STRTAB		3618161	0		==			
ANR	3618369	MemberAccess	dyn [ j ] . d_tag		3618161	0					
ANR	3618370	ArrayIndexing	dyn [ j ]		3618161	0					
ANR	3618371	Identifier	dyn		3618161	0					
ANR	3618372	Identifier	j		3618161	1					
ANR	3618373	Identifier	d_tag		3618161	1					
ANR	3618374	Identifier	DT_STRTAB		3618161	1					
ANR	3618375	CompoundStatement		25:35:665:665	3618161	1					
ANR	3618376	ExpressionStatement	stroff = ( ut64 ) ( dyn [ j ] . d_un . d_ptr - bin -> baddr )	215:5:6559:6606	3618161	0	True				
ANR	3618377	AssignmentExpression	stroff = ( ut64 ) ( dyn [ j ] . d_un . d_ptr - bin -> baddr )		3618161	0		=			
ANR	3618378	Identifier	stroff		3618161	0					
ANR	3618379	CastExpression	( ut64 ) ( dyn [ j ] . d_un . d_ptr - bin -> baddr )		3618161	1					
ANR	3618380	CastTarget	ut64		3618161	0					
ANR	3618381	AdditiveExpression	dyn [ j ] . d_un . d_ptr - bin -> baddr		3618161	1		-			
ANR	3618382	MemberAccess	dyn [ j ] . d_un . d_ptr		3618161	0					
ANR	3618383	MemberAccess	dyn [ j ] . d_un		3618161	0					
ANR	3618384	ArrayIndexing	dyn [ j ]		3618161	0					
ANR	3618385	Identifier	dyn		3618161	0					
ANR	3618386	Identifier	j		3618161	1					
ANR	3618387	Identifier	d_un		3618161	1					
ANR	3618388	Identifier	d_ptr		3618161	1					
ANR	3618389	PtrMemberAccess	bin -> baddr		3618161	1					
ANR	3618390	Identifier	bin		3618161	0					
ANR	3618391	Identifier	baddr		3618161	1					
ANR	3618392	BreakStatement	break ;	216:5:6613:6618	3618161	1	True				
ANR	3618393	ForStatement	for ( j = 0 ; j < ndyn ; j ++ )		3618161	1					
ANR	3618394	ForInit	j = 0 ;	219:8:6639:6644	3618161	0	True				
ANR	3618395	AssignmentExpression	j = 0		3618161	0		=			
ANR	3618396	Identifier	j		3618161	0					
ANR	3618397	PrimaryExpression	0		3618161	1					
ANR	3618398	Condition	j < ndyn	219:15:6646:6653	3618161	1	True				
ANR	3618399	RelationalExpression	j < ndyn		3618161	0		<			
ANR	3618400	Identifier	j		3618161	0					
ANR	3618401	Identifier	ndyn		3618161	1					
ANR	3618402	PostIncDecOperationExpression	j ++	219:25:6656:6658	3618161	2	True				
ANR	3618403	Identifier	j		3618161	0					
ANR	3618404	IncDec	++		3618161	1					
ANR	3618405	CompoundStatement		30:30:774:774	3618161	3					
ANR	3618406	IfStatement	if ( dyn [ j ] . d_tag == DT_RPATH || dyn [ j ] . d_tag == DT_RUNPATH )		3618161	0					
ANR	3618407	Condition	dyn [ j ] . d_tag == DT_RPATH || dyn [ j ] . d_tag == DT_RUNPATH	220:8:6671:6724	3618161	0	True				
ANR	3618408	OrExpression	dyn [ j ] . d_tag == DT_RPATH || dyn [ j ] . d_tag == DT_RUNPATH		3618161	0		||			
ANR	3618409	EqualityExpression	dyn [ j ] . d_tag == DT_RPATH		3618161	0		==			
ANR	3618410	MemberAccess	dyn [ j ] . d_tag		3618161	0					
ANR	3618411	ArrayIndexing	dyn [ j ]		3618161	0					
ANR	3618412	Identifier	dyn		3618161	0					
ANR	3618413	Identifier	j		3618161	1					
ANR	3618414	Identifier	d_tag		3618161	1					
ANR	3618415	Identifier	DT_RPATH		3618161	1					
ANR	3618416	EqualityExpression	dyn [ j ] . d_tag == DT_RUNPATH		3618161	1		==			
ANR	3618417	MemberAccess	dyn [ j ] . d_tag		3618161	0					
ANR	3618418	ArrayIndexing	dyn [ j ]		3618161	0					
ANR	3618419	Identifier	dyn		3618161	0					
ANR	3618420	Identifier	j		3618161	1					
ANR	3618421	Identifier	d_tag		3618161	1					
ANR	3618422	Identifier	DT_RUNPATH		3618161	1					
ANR	3618423	CompoundStatement		31:64:840:840	3618161	1					
ANR	3618424	IfStatement	"if ( r_buf_write_at ( bin -> b , stroff + dyn [ j ] . d_un . d_val , ( ut8 * ) """" , 1 ) == - 1 )"		3618161	0					
ANR	3618425	Condition	"r_buf_write_at ( bin -> b , stroff + dyn [ j ] . d_un . d_val , ( ut8 * ) """" , 1 ) == - 1"	221:9:6738:6815	3618161	0	True				
ANR	3618426	EqualityExpression	"r_buf_write_at ( bin -> b , stroff + dyn [ j ] . d_un . d_val , ( ut8 * ) """" , 1 ) == - 1"		3618161	0		==			
ANR	3618427	CallExpression	"r_buf_write_at ( bin -> b , stroff + dyn [ j ] . d_un . d_val , ( ut8 * ) """" , 1 )"		3618161	0					
ANR	3618428	Callee	r_buf_write_at		3618161	0					
ANR	3618429	Identifier	r_buf_write_at		3618161	0					
ANR	3618430	ArgumentList	bin -> b		3618161	1					
ANR	3618431	Argument	bin -> b		3618161	0					
ANR	3618432	PtrMemberAccess	bin -> b		3618161	0					
ANR	3618433	Identifier	bin		3618161	0					
ANR	3618434	Identifier	b		3618161	1					
ANR	3618435	Argument	stroff + dyn [ j ] . d_un . d_val		3618161	1					
ANR	3618436	AdditiveExpression	stroff + dyn [ j ] . d_un . d_val		3618161	0		+			
ANR	3618437	Identifier	stroff		3618161	0					
ANR	3618438	MemberAccess	dyn [ j ] . d_un . d_val		3618161	1					
ANR	3618439	MemberAccess	dyn [ j ] . d_un		3618161	0					
ANR	3618440	ArrayIndexing	dyn [ j ]		3618161	0					
ANR	3618441	Identifier	dyn		3618161	0					
ANR	3618442	Identifier	j		3618161	1					
ANR	3618443	Identifier	d_un		3618161	1					
ANR	3618444	Identifier	d_val		3618161	1					
ANR	3618445	Argument	"( ut8 * ) """""		3618161	2					
ANR	3618446	CastExpression	"( ut8 * ) """""		3618161	0					
ANR	3618447	CastTarget	ut8 *		3618161	0					
ANR	3618448	PrimaryExpression	""""""		3618161	1					
ANR	3618449	Argument	1		3618161	3					
ANR	3618450	PrimaryExpression	1		3618161	0					
ANR	3618451	UnaryOperationExpression	- 1		3618161	1					
ANR	3618452	UnaryOperator	-		3618161	0					
ANR	3618453	PrimaryExpression	1		3618161	1					
ANR	3618454	CompoundStatement		33:28:931:931	3618161	1					
ANR	3618455	ExpressionStatement	"eprintf ( ""Error: write (rpath)\\n"" )"	223:6:6826:6860	3618161	0	True				
ANR	3618456	CallExpression	"eprintf ( ""Error: write (rpath)\\n"" )"		3618161	0					
ANR	3618457	Callee	eprintf		3618161	0					
ANR	3618458	Identifier	eprintf		3618161	0					
ANR	3618459	ArgumentList	"""Error: write (rpath)\\n"""		3618161	1					
ANR	3618460	Argument	"""Error: write (rpath)\\n"""		3618161	0					
ANR	3618461	PrimaryExpression	"""Error: write (rpath)\\n"""		3618161	0					
ANR	3618462	ExpressionStatement	free ( dyn )	224:6:6868:6878	3618161	1	True				
ANR	3618463	CallExpression	free ( dyn )		3618161	0					
ANR	3618464	Callee	free		3618161	0					
ANR	3618465	Identifier	free		3618161	0					
ANR	3618466	ArgumentList	dyn		3618161	1					
ANR	3618467	Argument	dyn		3618161	0					
ANR	3618468	Identifier	dyn		3618161	0					
ANR	3618469	ReturnStatement	return false ;	225:6:6886:6898	3618161	2	True				
ANR	3618470	Identifier	false		3618161	0					
ANR	3618471	ExpressionStatement	free ( dyn )	230:2:6924:6934	3618161	4	True				
ANR	3618472	CallExpression	free ( dyn )		3618161	0					
ANR	3618473	Callee	free		3618161	0					
ANR	3618474	Identifier	free		3618161	0					
ANR	3618475	ArgumentList	dyn		3618161	1					
ANR	3618476	Argument	dyn		3618161	0					
ANR	3618477	Identifier	dyn		3618161	0					
ANR	3618478	BreakStatement	break ;	231:2:6938:6943	3618161	5	True				
ANR	3618479	ReturnStatement	return true ;	233:1:6949:6960	3618161	11	True				
ANR	3618480	Identifier	true		3618161	0					
ANR	3618481	ReturnType	bool Elf_		3618161	1					
ANR	3618482	Identifier	( r_bin_elf_del_rpath )		3618161	2					
ANR	3618483	Identifier	r_bin_elf_del_rpath		3618161	3					
ANR	3618484	ParameterList	RBinFile * bf		3618161	4					
ANR	3618485	Parameter	RBinFile * bf	190:31:5872:5883	3618161	0	True				
ANR	3618486	ParameterType	RBinFile *		3618161	0					
ANR	3618487	Identifier	bf		3618161	1					
ANR	3618488	CFGEntryNode	ENTRY		3618161		True				
ANR	3618489	CFGExitNode	EXIT		3618161		True				
ANR	3618490	Symbol	bin -> b		3618161						
ANR	3618491	Symbol	bf		3618161						
ANR	3618492	Symbol	bin		3618161						
ANR	3618493	Symbol	bin -> phdr		3618161						
ANR	3618494	Symbol	stroff		3618161						
ANR	3618495	Symbol	dyn [ j ] . d_un . d_ptr		3618161						
ANR	3618496	Symbol	PT_DYNAMIC		3618161						
ANR	3618497	Symbol	* bin		3618161						
ANR	3618498	Symbol	* bf -> o		3618161						
ANR	3618499	Symbol	r_buf_write_at		3618161						
ANR	3618500	Symbol	bin -> phdr [ i ] . p_filesz		3618161						
ANR	3618501	Symbol	bf -> o		3618161						
ANR	3618502	Symbol	bin -> ehdr		3618161						
ANR	3618503	Symbol	Dyn		3618161						
ANR	3618504	Symbol	* * bin		3618161						
ANR	3618505	Symbol	* dyn		3618161						
ANR	3618506	Symbol	dyn [ j ] . d_un		3618161						
ANR	3618507	Symbol	Elf_		3618161						
ANR	3618508	Symbol	bf -> o -> bin_obj		3618161						
ANR	3618509	Symbol	DT_RUNPATH		3618161						
ANR	3618510	Symbol	malloc		3618161						
ANR	3618511	Symbol	NULL		3618161						
ANR	3618512	Symbol	r_bin_elf_obj_t		3618161						
ANR	3618513	Symbol	false		3618161						
ANR	3618514	Symbol	DT_RPATH		3618161						
ANR	3618515	Symbol	* bf		3618161						
ANR	3618516	Symbol	i		3618161						
ANR	3618517	Symbol	j		3618161						
ANR	3618518	Symbol	bin -> ehdr . e_phnum		3618161						
ANR	3618519	Symbol	bin -> baddr		3618161						
ANR	3618520	Symbol	* bin -> phdr		3618161						
ANR	3618521	Symbol	bin -> phdr [ i ] . p_offset		3618161						
ANR	3618522	Symbol	* * bf		3618161						
ANR	3618523	Symbol	* i		3618161						
ANR	3618524	Symbol	* j		3618161						
ANR	3618525	Symbol	dyn [ j ] . d_tag		3618161						
ANR	3618526	Symbol	dyn		3618161						
ANR	3618527	Symbol	ndyn		3618161						
ANR	3618528	Symbol	r_buf_read_at		3618161						
ANR	3618529	Symbol	dyn [ j ] . d_un . d_val		3618161						
ANR	3618530	Symbol	true		3618161						
ANR	3618531	Symbol	bin -> phdr [ i ] . p_type		3618161						
ANR	3618532	Symbol	DT_STRTAB		3618161						
ANR	3618533	Function	r_bin_elf_section_perms	236:0:6965:7999							
ANR	3618534	FunctionDef	"r_bin_elf_section_perms (RBinFile * bf , const char * name , int perms)"		3618533	0					
ANR	3618535	CompoundStatement		236:78:7043:7999	3618533	0					
ANR	3618536	Statement	struct	237:1:7046:7051	3618533	0	True				
ANR	3618537	ExpressionStatement	Elf_ ( r_bin_elf_obj_t ) * bin = bf -> o -> bin_obj	237:8:7053:7096	3618533	1	True				
ANR	3618538	AssignmentExpression	Elf_ ( r_bin_elf_obj_t ) * bin = bf -> o -> bin_obj		3618533	0		=			
ANR	3618539	MultiplicativeExpression	Elf_ ( r_bin_elf_obj_t ) * bin		3618533	0		*			
ANR	3618540	CallExpression	Elf_ ( r_bin_elf_obj_t )		3618533	0					
ANR	3618541	Callee	Elf_		3618533	0					
ANR	3618542	Identifier	Elf_		3618533	0					
ANR	3618543	ArgumentList	r_bin_elf_obj_t		3618533	1					
ANR	3618544	Argument	r_bin_elf_obj_t		3618533	0					
ANR	3618545	Identifier	r_bin_elf_obj_t		3618533	0					
ANR	3618546	Identifier	bin		3618533	1					
ANR	3618547	PtrMemberAccess	bf -> o -> bin_obj		3618533	1					
ANR	3618548	PtrMemberAccess	bf -> o		3618533	0					
ANR	3618549	Identifier	bf		3618533	0					
ANR	3618550	Identifier	o		3618533	1					
ANR	3618551	Identifier	bin_obj		3618533	1					
ANR	3618552	ExpressionStatement	Elf_ ( Ehdr ) * ehdr = & bin -> ehdr	238:1:7099:7128	3618533	2	True				
ANR	3618553	AssignmentExpression	Elf_ ( Ehdr ) * ehdr = & bin -> ehdr		3618533	0		=			
ANR	3618554	MultiplicativeExpression	Elf_ ( Ehdr ) * ehdr		3618533	0		*			
ANR	3618555	CallExpression	Elf_ ( Ehdr )		3618533	0					
ANR	3618556	Callee	Elf_		3618533	0					
ANR	3618557	Identifier	Elf_		3618533	0					
ANR	3618558	ArgumentList	Ehdr		3618533	1					
ANR	3618559	Argument	Ehdr		3618533	0					
ANR	3618560	Identifier	Ehdr		3618533	0					
ANR	3618561	Identifier	ehdr		3618533	1					
ANR	3618562	UnaryOperationExpression	& bin -> ehdr		3618533	1					
ANR	3618563	UnaryOperator	&		3618533	0					
ANR	3618564	PtrMemberAccess	bin -> ehdr		3618533	1					
ANR	3618565	Identifier	bin		3618533	0					
ANR	3618566	Identifier	ehdr		3618533	1					
ANR	3618567	ExpressionStatement	"Elf_ ( Shdr ) * shdr = bin -> shdr , * shdrp"	239:1:7131:7167	3618533	3	True				
ANR	3618568	Expression	"Elf_ ( Shdr ) * shdr = bin -> shdr , * shdrp"		3618533	0					
ANR	3618569	AssignmentExpression	Elf_ ( Shdr ) * shdr = bin -> shdr		3618533	0		=			
ANR	3618570	MultiplicativeExpression	Elf_ ( Shdr ) * shdr		3618533	0		*			
ANR	3618571	CallExpression	Elf_ ( Shdr )		3618533	0					
ANR	3618572	Callee	Elf_		3618533	0					
ANR	3618573	Identifier	Elf_		3618533	0					
ANR	3618574	ArgumentList	Shdr		3618533	1					
ANR	3618575	Argument	Shdr		3618533	0					
ANR	3618576	Identifier	Shdr		3618533	0					
ANR	3618577	Identifier	shdr		3618533	1					
ANR	3618578	PtrMemberAccess	bin -> shdr		3618533	1					
ANR	3618579	Identifier	bin		3618533	0					
ANR	3618580	Identifier	shdr		3618533	1					
ANR	3618581	UnaryOperationExpression	* shdrp		3618533	1					
ANR	3618582	UnaryOperator	*		3618533	0					
ANR	3618583	Identifier	shdrp		3618533	1					
ANR	3618584	IdentifierDeclStatement	const char * strtab = bin -> shstrtab ;	240:1:7170:7204	3618533	4	True				
ANR	3618585	IdentifierDecl	* strtab = bin -> shstrtab		3618533	0					
ANR	3618586	IdentifierDeclType	const char *		3618533	0					
ANR	3618587	Identifier	strtab		3618533	1					
ANR	3618588	AssignmentExpression	* strtab = bin -> shstrtab		3618533	2		=			
ANR	3618589	Identifier	strtab		3618533	0					
ANR	3618590	PtrMemberAccess	bin -> shstrtab		3618533	1					
ANR	3618591	Identifier	bin		3618533	0					
ANR	3618592	Identifier	shstrtab		3618533	1					
ANR	3618593	IdentifierDeclStatement	"int i , patchoff ;"	241:1:7207:7222	3618533	5	True				
ANR	3618594	IdentifierDecl	i		3618533	0					
ANR	3618595	IdentifierDeclType	int		3618533	0					
ANR	3618596	Identifier	i		3618533	1					
ANR	3618597	IdentifierDecl	patchoff		3618533	1					
ANR	3618598	IdentifierDeclType	int		3618533	0					
ANR	3618599	Identifier	patchoff		3618533	1					
ANR	3618600	ForStatement	"for ( i = 0 , shdrp = shdr ; i < ehdr -> e_shnum ; i ++ , shdrp ++ )"		3618533	6					
ANR	3618601	ForInit	"i = 0 , shdrp = shdr ;"	244:6:7254:7273	3618533	0	True				
ANR	3618602	Expression	"i = 0 , shdrp = shdr"		3618533	0					
ANR	3618603	AssignmentExpression	i = 0		3618533	0		=			
ANR	3618604	Identifier	i		3618533	0					
ANR	3618605	PrimaryExpression	0		3618533	1					
ANR	3618606	AssignmentExpression	shdrp = shdr		3618533	1		=			
ANR	3618607	Identifier	shdrp		3618533	0					
ANR	3618608	Identifier	shdr		3618533	1					
ANR	3618609	Condition	i < ehdr -> e_shnum	244:27:7275:7291	3618533	1	True				
ANR	3618610	RelationalExpression	i < ehdr -> e_shnum		3618533	0		<			
ANR	3618611	Identifier	i		3618533	0					
ANR	3618612	PtrMemberAccess	ehdr -> e_shnum		3618533	1					
ANR	3618613	Identifier	ehdr		3618533	0					
ANR	3618614	Identifier	e_shnum		3618533	1					
ANR	3618615	Expression	"i ++ , shdrp ++"	244:46:7294:7305	3618533	2	True				
ANR	3618616	PostIncDecOperationExpression	i ++		3618533	0					
ANR	3618617	Identifier	i		3618533	0					
ANR	3618618	IncDec	++		3618533	1					
ANR	3618619	PostIncDecOperationExpression	shdrp ++		3618533	1					
ANR	3618620	Identifier	shdrp		3618533	0					
ANR	3618621	IncDec	++		3618533	1					
ANR	3618622	CompoundStatement		11:2:316:344	3618533	3					
ANR	3618623	IdentifierDeclStatement	const char * shname = & strtab [ shdrp -> sh_name ] ;	245:2:7312:7356	3618533	0	True				
ANR	3618624	IdentifierDecl	* shname = & strtab [ shdrp -> sh_name ]		3618533	0					
ANR	3618625	IdentifierDeclType	const char *		3618533	0					
ANR	3618626	Identifier	shname		3618533	1					
ANR	3618627	AssignmentExpression	* shname = & strtab [ shdrp -> sh_name ]		3618533	2		=			
ANR	3618628	Identifier	shname		3618533	0					
ANR	3618629	UnaryOperationExpression	& strtab [ shdrp -> sh_name ]		3618533	1					
ANR	3618630	UnaryOperator	&		3618533	0					
ANR	3618631	ArrayIndexing	strtab [ shdrp -> sh_name ]		3618533	1					
ANR	3618632	Identifier	strtab		3618533	0					
ANR	3618633	PtrMemberAccess	shdrp -> sh_name		3618533	1					
ANR	3618634	Identifier	shdrp		3618533	0					
ANR	3618635	Identifier	sh_name		3618533	1					
ANR	3618636	IdentifierDeclStatement	int operms = shdrp -> sh_flags ;	246:2:7360:7388	3618533	1	True				
ANR	3618637	IdentifierDecl	operms = shdrp -> sh_flags		3618533	0					
ANR	3618638	IdentifierDeclType	int		3618533	0					
ANR	3618639	Identifier	operms		3618533	1					
ANR	3618640	AssignmentExpression	operms = shdrp -> sh_flags		3618533	2		=			
ANR	3618641	Identifier	operms		3618533	0					
ANR	3618642	PtrMemberAccess	shdrp -> sh_flags		3618533	1					
ANR	3618643	Identifier	shdrp		3618533	0					
ANR	3618644	Identifier	sh_flags		3618533	1					
ANR	3618645	IfStatement	"if ( ! strncmp ( name , shname , ELF_STRING_LENGTH ) )"		3618533	2					
ANR	3618646	Condition	"! strncmp ( name , shname , ELF_STRING_LENGTH )"	247:6:7396:7437	3618533	0	True				
ANR	3618647	UnaryOperationExpression	"! strncmp ( name , shname , ELF_STRING_LENGTH )"		3618533	0					
ANR	3618648	UnaryOperator	!		3618533	0					
ANR	3618649	CallExpression	"strncmp ( name , shname , ELF_STRING_LENGTH )"		3618533	1					
ANR	3618650	Callee	strncmp		3618533	0					
ANR	3618651	Identifier	strncmp		3618533	0					
ANR	3618652	ArgumentList	name		3618533	1					
ANR	3618653	Argument	name		3618533	0					
ANR	3618654	Identifier	name		3618533	0					
ANR	3618655	Argument	shname		3618533	1					
ANR	3618656	Identifier	shname		3618533	0					
ANR	3618657	Argument	ELF_STRING_LENGTH		3618533	2					
ANR	3618658	Identifier	ELF_STRING_LENGTH		3618533	0					
ANR	3618659	CompoundStatement		13:3:401:427	3618533	1					
ANR	3618660	IdentifierDeclStatement	ut8 newperms = ( ut8 ) operms ;	248:3:7445:7471	3618533	0	True				
ANR	3618661	IdentifierDecl	newperms = ( ut8 ) operms		3618533	0					
ANR	3618662	IdentifierDeclType	ut8		3618533	0					
ANR	3618663	Identifier	newperms		3618533	1					
ANR	3618664	AssignmentExpression	newperms = ( ut8 ) operms		3618533	2		=			
ANR	3618665	Identifier	newperms		3618533	0					
ANR	3618666	CastExpression	( ut8 ) operms		3618533	1					
ANR	3618667	CastTarget	ut8		3618533	0					
ANR	3618668	Identifier	operms		3618533	1					
ANR	3618669	IfStatement	if ( perms & 1 )		3618533	1					
ANR	3618670	Condition	perms & 1	250:7:7500:7508	3618533	0	True				
ANR	3618671	BitAndExpression	perms & 1		3618533	0		&			
ANR	3618672	Identifier	perms		3618533	0					
ANR	3618673	PrimaryExpression	1		3618533	1					
ANR	3618674	CompoundStatement		15:18:467:467	3618533	1					
ANR	3618675	ExpressionStatement	"R_BIT_SET ( & newperms , 2 )"	251:4:7517:7541	3618533	0	True				
ANR	3618676	CallExpression	"R_BIT_SET ( & newperms , 2 )"		3618533	0					
ANR	3618677	Callee	R_BIT_SET		3618533	0					
ANR	3618678	Identifier	R_BIT_SET		3618533	0					
ANR	3618679	ArgumentList	& newperms		3618533	1					
ANR	3618680	Argument	& newperms		3618533	0					
ANR	3618681	UnaryOperationExpression	& newperms		3618533	0					
ANR	3618682	UnaryOperator	&		3618533	0					
ANR	3618683	Identifier	newperms		3618533	1					
ANR	3618684	Argument	2		3618533	1					
ANR	3618685	PrimaryExpression	2		3618533	0					
ANR	3618686	ElseStatement	else		3618533	0					
ANR	3618687	CompoundStatement		17:10:509:509	3618533	0					
ANR	3618688	ExpressionStatement	"R_BIT_UNSET ( & newperms , 2 )"	253:4:7559:7585	3618533	0	True				
ANR	3618689	CallExpression	"R_BIT_UNSET ( & newperms , 2 )"		3618533	0					
ANR	3618690	Callee	R_BIT_UNSET		3618533	0					
ANR	3618691	Identifier	R_BIT_UNSET		3618533	0					
ANR	3618692	ArgumentList	& newperms		3618533	1					
ANR	3618693	Argument	& newperms		3618533	0					
ANR	3618694	UnaryOperationExpression	& newperms		3618533	0					
ANR	3618695	UnaryOperator	&		3618533	0					
ANR	3618696	Identifier	newperms		3618533	1					
ANR	3618697	Argument	2		3618533	1					
ANR	3618698	PrimaryExpression	2		3618533	0					
ANR	3618699	IfStatement	if ( perms & 2 )		3618533	2					
ANR	3618700	Condition	perms & 2	256:7:7615:7623	3618533	0	True				
ANR	3618701	BitAndExpression	perms & 2		3618533	0		&			
ANR	3618702	Identifier	perms		3618533	0					
ANR	3618703	PrimaryExpression	2		3618533	1					
ANR	3618704	CompoundStatement		21:18:582:582	3618533	1					
ANR	3618705	ExpressionStatement	"R_BIT_SET ( & newperms , 0 )"	257:4:7632:7656	3618533	0	True				
ANR	3618706	CallExpression	"R_BIT_SET ( & newperms , 0 )"		3618533	0					
ANR	3618707	Callee	R_BIT_SET		3618533	0					
ANR	3618708	Identifier	R_BIT_SET		3618533	0					
ANR	3618709	ArgumentList	& newperms		3618533	1					
ANR	3618710	Argument	& newperms		3618533	0					
ANR	3618711	UnaryOperationExpression	& newperms		3618533	0					
ANR	3618712	UnaryOperator	&		3618533	0					
ANR	3618713	Identifier	newperms		3618533	1					
ANR	3618714	Argument	0		3618533	1					
ANR	3618715	PrimaryExpression	0		3618533	0					
ANR	3618716	ElseStatement	else		3618533	0					
ANR	3618717	CompoundStatement		23:10:624:624	3618533	0					
ANR	3618718	ExpressionStatement	"R_BIT_UNSET ( & newperms , 0 )"	259:4:7674:7700	3618533	0	True				
ANR	3618719	CallExpression	"R_BIT_UNSET ( & newperms , 0 )"		3618533	0					
ANR	3618720	Callee	R_BIT_UNSET		3618533	0					
ANR	3618721	Identifier	R_BIT_UNSET		3618533	0					
ANR	3618722	ArgumentList	& newperms		3618533	1					
ANR	3618723	Argument	& newperms		3618533	0					
ANR	3618724	UnaryOperationExpression	& newperms		3618533	0					
ANR	3618725	UnaryOperator	&		3618533	0					
ANR	3618726	Identifier	newperms		3618533	1					
ANR	3618727	Argument	0		3618533	1					
ANR	3618728	PrimaryExpression	0		3618533	0					
ANR	3618729	ExpressionStatement	patchoff = bin -> ehdr . e_shoff	261:3:7710:7738	3618533	3	True				
ANR	3618730	AssignmentExpression	patchoff = bin -> ehdr . e_shoff		3618533	0		=			
ANR	3618731	Identifier	patchoff		3618533	0					
ANR	3618732	MemberAccess	bin -> ehdr . e_shoff		3618533	1					
ANR	3618733	PtrMemberAccess	bin -> ehdr		3618533	0					
ANR	3618734	Identifier	bin		3618533	0					
ANR	3618735	Identifier	ehdr		3618533	1					
ANR	3618736	Identifier	e_shoff		3618533	1					
ANR	3618737	ExpressionStatement	patchoff += ( ( const ut8 * ) shdrp - ( const ut8 * ) bin -> shdr )	262:3:7743:7798	3618533	4	True				
ANR	3618738	AssignmentExpression	patchoff += ( ( const ut8 * ) shdrp - ( const ut8 * ) bin -> shdr )		3618533	0		+=			
ANR	3618739	Identifier	patchoff		3618533	0					
ANR	3618740	AdditiveExpression	( const ut8 * ) shdrp - ( const ut8 * ) bin -> shdr		3618533	1		-			
ANR	3618741	CastExpression	( const ut8 * ) shdrp		3618533	0					
ANR	3618742	CastTarget	const ut8 *		3618533	0					
ANR	3618743	Identifier	shdrp		3618533	1					
ANR	3618744	CastExpression	( const ut8 * ) bin -> shdr		3618533	1					
ANR	3618745	CastTarget	const ut8 *		3618533	0					
ANR	3618746	PtrMemberAccess	bin -> shdr		3618533	1					
ANR	3618747	Identifier	bin		3618533	0					
ANR	3618748	Identifier	shdr		3618533	1					
ANR	3618749	ExpressionStatement	"patchoff += r_offsetof ( Elf_ ( Shdr ) , sh_flags )"	263:3:7803:7848	3618533	5	True				
ANR	3618750	AssignmentExpression	"patchoff += r_offsetof ( Elf_ ( Shdr ) , sh_flags )"		3618533	0		+=			
ANR	3618751	Identifier	patchoff		3618533	0					
ANR	3618752	CallExpression	"r_offsetof ( Elf_ ( Shdr ) , sh_flags )"		3618533	1					
ANR	3618753	Callee	r_offsetof		3618533	0					
ANR	3618754	Identifier	r_offsetof		3618533	0					
ANR	3618755	ArgumentList	Elf_ ( Shdr )		3618533	1					
ANR	3618756	Argument	Elf_ ( Shdr )		3618533	0					
ANR	3618757	CallExpression	Elf_ ( Shdr )		3618533	0					
ANR	3618758	Callee	Elf_		3618533	0					
ANR	3618759	Identifier	Elf_		3618533	0					
ANR	3618760	ArgumentList	Shdr		3618533	1					
ANR	3618761	Argument	Shdr		3618533	0					
ANR	3618762	Identifier	Shdr		3618533	0					
ANR	3618763	Argument	sh_flags		3618533	1					
ANR	3618764	Identifier	sh_flags		3618533	0					
ANR	3618765	ExpressionStatement	"printf ( ""wx %02x @ 0x%x\\n"" , newperms , patchoff )"	264:3:7853:7900	3618533	6	True				
ANR	3618766	CallExpression	"printf ( ""wx %02x @ 0x%x\\n"" , newperms , patchoff )"		3618533	0					
ANR	3618767	Callee	printf		3618533	0					
ANR	3618768	Identifier	printf		3618533	0					
ANR	3618769	ArgumentList	"""wx %02x @ 0x%x\\n"""		3618533	1					
ANR	3618770	Argument	"""wx %02x @ 0x%x\\n"""		3618533	0					
ANR	3618771	PrimaryExpression	"""wx %02x @ 0x%x\\n"""		3618533	0					
ANR	3618772	Argument	newperms		3618533	1					
ANR	3618773	Identifier	newperms		3618533	0					
ANR	3618774	Argument	patchoff		3618533	2					
ANR	3618775	Identifier	patchoff		3618533	0					
ANR	3618776	ExpressionStatement	"r_buf_write_at ( bf -> buf , patchoff , ( ut8 * ) & newperms , 1 )"	265:3:7905:7959	3618533	7	True				
ANR	3618777	CallExpression	"r_buf_write_at ( bf -> buf , patchoff , ( ut8 * ) & newperms , 1 )"		3618533	0					
ANR	3618778	Callee	r_buf_write_at		3618533	0					
ANR	3618779	Identifier	r_buf_write_at		3618533	0					
ANR	3618780	ArgumentList	bf -> buf		3618533	1					
ANR	3618781	Argument	bf -> buf		3618533	0					
ANR	3618782	PtrMemberAccess	bf -> buf		3618533	0					
ANR	3618783	Identifier	bf		3618533	0					
ANR	3618784	Identifier	buf		3618533	1					
ANR	3618785	Argument	patchoff		3618533	1					
ANR	3618786	Identifier	patchoff		3618533	0					
ANR	3618787	Argument	( ut8 * ) & newperms		3618533	2					
ANR	3618788	CastExpression	( ut8 * ) & newperms		3618533	0					
ANR	3618789	CastTarget	ut8 *		3618533	0					
ANR	3618790	UnaryOperationExpression	& newperms		3618533	1					
ANR	3618791	UnaryOperator	&		3618533	0					
ANR	3618792	Identifier	newperms		3618533	1					
ANR	3618793	Argument	1		3618533	3					
ANR	3618794	PrimaryExpression	1		3618533	0					
ANR	3618795	ReturnStatement	return true ;	266:3:7964:7975	3618533	8	True				
ANR	3618796	Identifier	true		3618533	0					
ANR	3618797	ReturnStatement	return false ;	269:1:7985:7997	3618533	7	True				
ANR	3618798	Identifier	false		3618533	0					
ANR	3618799	ReturnType	bool Elf_		3618533	1					
ANR	3618800	Identifier	( r_bin_elf_section_perms )		3618533	2					
ANR	3618801	Identifier	r_bin_elf_section_perms		3618533	3					
ANR	3618802	ParameterList	"RBinFile * bf , const char * name , int perms"		3618533	4					
ANR	3618803	Parameter	RBinFile * bf	236:35:7000:7011	3618533	0	True				
ANR	3618804	ParameterType	RBinFile *		3618533	0					
ANR	3618805	Identifier	bf		3618533	1					
ANR	3618806	Parameter	const char * name	236:49:7014:7029	3618533	1	True				
ANR	3618807	ParameterType	const char *		3618533	0					
ANR	3618808	Identifier	name		3618533	1					
ANR	3618809	Parameter	int perms	236:67:7032:7040	3618533	2	True				
ANR	3618810	ParameterType	int		3618533	0					
ANR	3618811	Identifier	perms		3618533	1					
ANR	3618812	CFGEntryNode	ENTRY		3618533		True				
ANR	3618813	CFGExitNode	EXIT		3618533		True				
ANR	3618814	Symbol	bf		3618533						
ANR	3618815	Symbol	bin		3618533						
ANR	3618816	Symbol	sh_flags		3618533						
ANR	3618817	Symbol	bin -> shstrtab		3618533						
ANR	3618818	Symbol	shname		3618533						
ANR	3618819	Symbol	* bin		3618533						
ANR	3618820	Symbol	shdrp -> sh_flags		3618533						
ANR	3618821	Symbol	* bf -> o		3618533						
ANR	3618822	Symbol	strtab		3618533						
ANR	3618823	Symbol	* shdrp		3618533						
ANR	3618824	Symbol	strncmp		3618533						
ANR	3618825	Symbol	bf -> o		3618533						
ANR	3618826	Symbol	bf -> buf		3618533						
ANR	3618827	Symbol	shdr		3618533						
ANR	3618828	Symbol	bin -> ehdr		3618533						
ANR	3618829	Symbol	perms		3618533						
ANR	3618830	Symbol	r_offsetof		3618533						
ANR	3618831	Symbol	ehdr		3618533						
ANR	3618832	Symbol	bf -> o -> bin_obj		3618533						
ANR	3618833	Symbol	Elf_		3618533						
ANR	3618834	Symbol	newperms		3618533						
ANR	3618835	Symbol	Shdr		3618533						
ANR	3618836	Symbol	r_bin_elf_obj_t		3618533						
ANR	3618837	Symbol	shdrp		3618533						
ANR	3618838	Symbol	& newperms		3618533						
ANR	3618839	Symbol	false		3618533						
ANR	3618840	Symbol	* bf		3618533						
ANR	3618841	Symbol	i		3618533						
ANR	3618842	Symbol	ELF_STRING_LENGTH		3618533						
ANR	3618843	Symbol	bin -> shdr		3618533						
ANR	3618844	Symbol	Ehdr		3618533						
ANR	3618845	Symbol	patchoff		3618533						
ANR	3618846	Symbol	shdrp -> sh_name		3618533						
ANR	3618847	Symbol	* * bf		3618533						
ANR	3618848	Symbol	ehdr -> e_shnum		3618533						
ANR	3618849	Symbol	& bin -> ehdr		3618533						
ANR	3618850	Symbol	operms		3618533						
ANR	3618851	Symbol	name		3618533						
ANR	3618852	Symbol	true		3618533						
ANR	3618853	Symbol	bin -> ehdr . e_shoff		3618533						
ANR	3618854	Symbol	* ehdr		3618533						
ANR	3618855	Function	r_bin_elf_entry_write	272:0:8002:8398							
ANR	3618856	FunctionDef	"r_bin_elf_entry_write (RBinFile * bf , ut64 addr)"		3618855	0					
ANR	3618857	CompoundStatement		272:58:8060:8398	3618855	0					
ANR	3618858	IdentifierDeclStatement	const int patchoff = 0x18 ;	273:1:8063:8088	3618855	0	True				
ANR	3618859	IdentifierDecl	patchoff = 0x18		3618855	0					
ANR	3618860	IdentifierDeclType	const int		3618855	0					
ANR	3618861	Identifier	patchoff		3618855	1					
ANR	3618862	AssignmentExpression	patchoff = 0x18		3618855	2		=			
ANR	3618863	Identifier	patchoff		3618855	0					
ANR	3618864	PrimaryExpression	0x18		3618855	1					
ANR	3618865	Statement	printf	275:1:8107:8112	3618855	1	True				
ANR	3618866	Statement	(	275:8:8114:8114	3618855	2	True				
ANR	3618867	Statement	"""wv8 0x%"""	275:9:8115:8123	3618855	3	True				
ANR	3618868	Statement	PFMT64x	275:18:8124:8130	3618855	4	True				
ANR	3618869	Statement	""" @ 0x%x\\n"""	275:25:8131:8141	3618855	5	True				
ANR	3618870	Statement	","	275:36:8142:8142	3618855	6	True				
ANR	3618871	Statement	addr	275:38:8144:8147	3618855	7	True				
ANR	3618872	Statement	","	275:42:8148:8148	3618855	8	True				
ANR	3618873	Statement	patchoff	275:44:8150:8157	3618855	9	True				
ANR	3618874	Statement	)	275:52:8158:8158	3618855	10	True				
ANR	3618875	ExpressionStatement		275:53:8159:8159	3618855	11	True				
ANR	3618876	ExpressionStatement	"r_buf_write_at ( bf -> buf , patchoff , ( ut8 * ) & addr , sizeof ( addr ) )"	276:1:8162:8224	3618855	12	True				
ANR	3618877	CallExpression	"r_buf_write_at ( bf -> buf , patchoff , ( ut8 * ) & addr , sizeof ( addr ) )"		3618855	0					
ANR	3618878	Callee	r_buf_write_at		3618855	0					
ANR	3618879	Identifier	r_buf_write_at		3618855	0					
ANR	3618880	ArgumentList	bf -> buf		3618855	1					
ANR	3618881	Argument	bf -> buf		3618855	0					
ANR	3618882	PtrMemberAccess	bf -> buf		3618855	0					
ANR	3618883	Identifier	bf		3618855	0					
ANR	3618884	Identifier	buf		3618855	1					
ANR	3618885	Argument	patchoff		3618855	1					
ANR	3618886	Identifier	patchoff		3618855	0					
ANR	3618887	Argument	( ut8 * ) & addr		3618855	2					
ANR	3618888	CastExpression	( ut8 * ) & addr		3618855	0					
ANR	3618889	CastTarget	ut8 *		3618855	0					
ANR	3618890	UnaryOperationExpression	& addr		3618855	1					
ANR	3618891	UnaryOperator	&		3618855	0					
ANR	3618892	Identifier	addr		3618855	1					
ANR	3618893	Argument	sizeof ( addr )		3618855	3					
ANR	3618894	SizeofExpression	sizeof ( addr )		3618855	0					
ANR	3618895	Sizeof	sizeof		3618855	0					
ANR	3618896	SizeofOperand	addr		3618855	1					
ANR	3618897	ReturnStatement	return true ;	282:1:8385:8396	3618855	13	True				
ANR	3618898	Identifier	true		3618855	0					
ANR	3618899	ReturnType	bool Elf_		3618855	1					
ANR	3618900	Identifier	( r_bin_elf_entry_write )		3618855	2					
ANR	3618901	Identifier	r_bin_elf_entry_write		3618855	3					
ANR	3618902	ParameterList	"RBinFile * bf , ut64 addr"		3618855	4					
ANR	3618903	Parameter	RBinFile * bf	272:33:8035:8046	3618855	0	True				
ANR	3618904	ParameterType	RBinFile *		3618855	0					
ANR	3618905	Identifier	bf		3618855	1					
ANR	3618906	Parameter	ut64 addr	272:47:8049:8057	3618855	1	True				
ANR	3618907	ParameterType	ut64		3618855	0					
ANR	3618908	Identifier	addr		3618855	1					
ANR	3618909	CFGEntryNode	ENTRY		3618855		True				
ANR	3618910	CFGExitNode	EXIT		3618855		True				
ANR	3618911	Symbol	patchoff		3618855						
ANR	3618912	Symbol	& addr		3618855						
ANR	3618913	Symbol	bf		3618855						
ANR	3618914	Symbol	bf -> buf		3618855						
ANR	3618915	Symbol	true		3618855						
ANR	3618916	Symbol	* bf		3618855						
ANR	3618917	Symbol	addr		3618855						
