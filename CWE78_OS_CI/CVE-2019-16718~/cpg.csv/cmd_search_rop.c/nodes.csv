command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1031004	File	data/converged/CVE-2019-16718~_radare2/cmd_search_rop.c								
ANR	1031005	Function	parse_list	10:0:172:626							
ANR	1031006	FunctionDef	parse_list (const char * str)		1031005	0					
ANR	1031007	CompoundStatement		10:43:215:626	1031005	0					
ANR	1031008	IdentifierDeclStatement	RList * list ;	11:1:218:229	1031005	0	True				
ANR	1031009	IdentifierDecl	* list		1031005	0					
ANR	1031010	IdentifierDeclType	RList *		1031005	0					
ANR	1031011	Identifier	list		1031005	1					
ANR	1031012	IdentifierDeclStatement	"char * line , * data , * p , * str_n ;"	12:1:232:261	1031005	1	True				
ANR	1031013	IdentifierDecl	* line		1031005	0					
ANR	1031014	IdentifierDeclType	char *		1031005	0					
ANR	1031015	Identifier	line		1031005	1					
ANR	1031016	IdentifierDecl	* data		1031005	1					
ANR	1031017	IdentifierDeclType	char *		1031005	0					
ANR	1031018	Identifier	data		1031005	1					
ANR	1031019	IdentifierDecl	* p		1031005	2					
ANR	1031020	IdentifierDeclType	char *		1031005	0					
ANR	1031021	Identifier	p		1031005	1					
ANR	1031022	IdentifierDecl	* str_n		1031005	3					
ANR	1031023	IdentifierDeclType	char *		1031005	0					
ANR	1031024	Identifier	str_n		1031005	1					
ANR	1031025	IfStatement	if ( ! str )		1031005	2					
ANR	1031026	Condition	! str	14:5:269:272	1031005	0	True				
ANR	1031027	UnaryOperationExpression	! str		1031005	0					
ANR	1031028	UnaryOperator	!		1031005	0					
ANR	1031029	Identifier	str		1031005	1					
ANR	1031030	CompoundStatement		5:11:59:59	1031005	1					
ANR	1031031	ReturnStatement	return NULL ;	15:2:279:290	1031005	0	True				
ANR	1031032	Identifier	NULL		1031005	0					
ANR	1031033	ExpressionStatement	str_n = strdup ( str )	18:1:297:317	1031005	3	True				
ANR	1031034	AssignmentExpression	str_n = strdup ( str )		1031005	0		=			
ANR	1031035	Identifier	str_n		1031005	0					
ANR	1031036	CallExpression	strdup ( str )		1031005	1					
ANR	1031037	Callee	strdup		1031005	0					
ANR	1031038	Identifier	strdup		1031005	0					
ANR	1031039	ArgumentList	str		1031005	1					
ANR	1031040	Argument	str		1031005	0					
ANR	1031041	Identifier	str		1031005	0					
ANR	1031042	ExpressionStatement	list = r_list_newf ( free )	19:1:320:345	1031005	4	True				
ANR	1031043	AssignmentExpression	list = r_list_newf ( free )		1031005	0		=			
ANR	1031044	Identifier	list		1031005	0					
ANR	1031045	CallExpression	r_list_newf ( free )		1031005	1					
ANR	1031046	Callee	r_list_newf		1031005	0					
ANR	1031047	Identifier	r_list_newf		1031005	0					
ANR	1031048	ArgumentList	free		1031005	1					
ANR	1031049	Argument	free		1031005	0					
ANR	1031050	Identifier	free		1031005	0					
ANR	1031051	IfStatement	if ( ! list )		1031005	5					
ANR	1031052	Condition	! list	20:5:352:356	1031005	0	True				
ANR	1031053	UnaryOperationExpression	! list		1031005	0					
ANR	1031054	UnaryOperator	!		1031005	0					
ANR	1031055	Identifier	list		1031005	1					
ANR	1031056	CompoundStatement		11:12:143:143	1031005	1					
ANR	1031057	ExpressionStatement	free ( str_n )	21:2:363:375	1031005	0	True				
ANR	1031058	CallExpression	free ( str_n )		1031005	0					
ANR	1031059	Callee	free		1031005	0					
ANR	1031060	Identifier	free		1031005	0					
ANR	1031061	ArgumentList	str_n		1031005	1					
ANR	1031062	Argument	str_n		1031005	0					
ANR	1031063	Identifier	str_n		1031005	0					
ANR	1031064	ReturnStatement	return NULL ;	22:2:379:390	1031005	1	True				
ANR	1031065	Identifier	NULL		1031005	0					
ANR	1031066	ExpressionStatement	"line = strtok ( str_n , ""\\n"" )"	24:1:396:423	1031005	6	True				
ANR	1031067	AssignmentExpression	"line = strtok ( str_n , ""\\n"" )"		1031005	0		=			
ANR	1031068	Identifier	line		1031005	0					
ANR	1031069	CallExpression	"strtok ( str_n , ""\\n"" )"		1031005	1					
ANR	1031070	Callee	strtok		1031005	0					
ANR	1031071	Identifier	strtok		1031005	0					
ANR	1031072	ArgumentList	str_n		1031005	1					
ANR	1031073	Argument	str_n		1031005	0					
ANR	1031074	Identifier	str_n		1031005	0					
ANR	1031075	Argument	"""\\n"""		1031005	1					
ANR	1031076	PrimaryExpression	"""\\n"""		1031005	0					
ANR	1031077	ExpressionStatement	"data = strchr ( line , '=' )"	25:1:426:451	1031005	7	True				
ANR	1031078	AssignmentExpression	"data = strchr ( line , '=' )"		1031005	0		=			
ANR	1031079	Identifier	data		1031005	0					
ANR	1031080	CallExpression	"strchr ( line , '=' )"		1031005	1					
ANR	1031081	Callee	strchr		1031005	0					
ANR	1031082	Identifier	strchr		1031005	0					
ANR	1031083	ArgumentList	line		1031005	1					
ANR	1031084	Argument	line		1031005	0					
ANR	1031085	Identifier	line		1031005	0					
ANR	1031086	Argument	'='		1031005	1					
ANR	1031087	PrimaryExpression	'='		1031005	0					
ANR	1031088	ExpressionStatement	"p = strtok ( data + 1 , "","" )"	27:1:482:508	1031005	8	True				
ANR	1031089	AssignmentExpression	"p = strtok ( data + 1 , "","" )"		1031005	0		=			
ANR	1031090	Identifier	p		1031005	0					
ANR	1031091	CallExpression	"strtok ( data + 1 , "","" )"		1031005	1					
ANR	1031092	Callee	strtok		1031005	0					
ANR	1031093	Identifier	strtok		1031005	0					
ANR	1031094	ArgumentList	data + 1		1031005	1					
ANR	1031095	Argument	data + 1		1031005	0					
ANR	1031096	AdditiveExpression	data + 1		1031005	0		+			
ANR	1031097	Identifier	data		1031005	0					
ANR	1031098	PrimaryExpression	1		1031005	1					
ANR	1031099	Argument	""","""		1031005	1					
ANR	1031100	PrimaryExpression	""","""		1031005	0					
ANR	1031101	WhileStatement	while ( p )		1031005	9					
ANR	1031102	Condition	p	29:8:519:519	1031005	0	True				
ANR	1031103	Identifier	p		1031005	0					
ANR	1031104	CompoundStatement		20:11:306:306	1031005	1					
ANR	1031105	ExpressionStatement	"r_list_append ( list , ( void * ) strdup ( p ) )"	30:2:526:565	1031005	0	True				
ANR	1031106	CallExpression	"r_list_append ( list , ( void * ) strdup ( p ) )"		1031005	0					
ANR	1031107	Callee	r_list_append		1031005	0					
ANR	1031108	Identifier	r_list_append		1031005	0					
ANR	1031109	ArgumentList	list		1031005	1					
ANR	1031110	Argument	list		1031005	0					
ANR	1031111	Identifier	list		1031005	0					
ANR	1031112	Argument	( void * ) strdup ( p )		1031005	1					
ANR	1031113	CastExpression	( void * ) strdup ( p )		1031005	0					
ANR	1031114	CastTarget	void *		1031005	0					
ANR	1031115	CallExpression	strdup ( p )		1031005	1					
ANR	1031116	Callee	strdup		1031005	0					
ANR	1031117	Identifier	strdup		1031005	0					
ANR	1031118	ArgumentList	p		1031005	1					
ANR	1031119	Argument	p		1031005	0					
ANR	1031120	Identifier	p		1031005	0					
ANR	1031121	ExpressionStatement	"p = strtok ( NULL , "","" )"	31:2:569:591	1031005	1	True				
ANR	1031122	AssignmentExpression	"p = strtok ( NULL , "","" )"		1031005	0		=			
ANR	1031123	Identifier	p		1031005	0					
ANR	1031124	CallExpression	"strtok ( NULL , "","" )"		1031005	1					
ANR	1031125	Callee	strtok		1031005	0					
ANR	1031126	Identifier	strtok		1031005	0					
ANR	1031127	ArgumentList	NULL		1031005	1					
ANR	1031128	Argument	NULL		1031005	0					
ANR	1031129	Identifier	NULL		1031005	0					
ANR	1031130	Argument	""","""		1031005	1					
ANR	1031131	PrimaryExpression	""","""		1031005	0					
ANR	1031132	ExpressionStatement	free ( str_n )	34:1:598:610	1031005	10	True				
ANR	1031133	CallExpression	free ( str_n )		1031005	0					
ANR	1031134	Callee	free		1031005	0					
ANR	1031135	Identifier	free		1031005	0					
ANR	1031136	ArgumentList	str_n		1031005	1					
ANR	1031137	Argument	str_n		1031005	0					
ANR	1031138	Identifier	str_n		1031005	0					
ANR	1031139	ReturnStatement	return list ;	35:1:613:624	1031005	11	True				
ANR	1031140	Identifier	list		1031005	0					
ANR	1031141	ReturnType	static RList *		1031005	1					
ANR	1031142	Identifier	parse_list		1031005	2					
ANR	1031143	ParameterList	const char * str		1031005	3					
ANR	1031144	Parameter	const char * str	10:26:198:212	1031005	0	True				
ANR	1031145	ParameterType	const char *		1031005	0					
ANR	1031146	Identifier	str		1031005	1					
ANR	1031147	CFGEntryNode	ENTRY		1031005		True				
ANR	1031148	CFGExitNode	EXIT		1031005		True				
ANR	1031149	Symbol	str		1031005						
ANR	1031150	Symbol	p		1031005						
ANR	1031151	Symbol	NULL		1031005						
ANR	1031152	Symbol	data		1031005						
ANR	1031153	Symbol	r_list_newf		1031005						
ANR	1031154	Symbol	line		1031005						
ANR	1031155	Symbol	strchr		1031005						
ANR	1031156	Symbol	strtok		1031005						
ANR	1031157	Symbol	str_n		1031005						
ANR	1031158	Symbol	strdup		1031005						
ANR	1031159	Symbol	list		1031005						
ANR	1031160	Symbol	free		1031005						
ANR	1031161	Function	get_constants	38:0:629:961							
ANR	1031162	FunctionDef	get_constants (const char * str)		1031161	0					
ANR	1031163	CompoundStatement		38:45:674:961	1031161	0					
ANR	1031164	IdentifierDeclStatement	RList * list ;	39:1:677:688	1031161	0	True				
ANR	1031165	IdentifierDecl	* list		1031161	0					
ANR	1031166	IdentifierDeclType	RList *		1031161	0					
ANR	1031167	Identifier	list		1031161	1					
ANR	1031168	IdentifierDeclStatement	"char * p , * data ;"	40:1:691:705	1031161	1	True				
ANR	1031169	IdentifierDecl	* p		1031161	0					
ANR	1031170	IdentifierDeclType	char *		1031161	0					
ANR	1031171	Identifier	p		1031161	1					
ANR	1031172	IdentifierDecl	* data		1031161	1					
ANR	1031173	IdentifierDeclType	char *		1031161	0					
ANR	1031174	Identifier	data		1031161	1					
ANR	1031175	IfStatement	if ( ! str )		1031161	2					
ANR	1031176	Condition	! str	41:5:712:715	1031161	0	True				
ANR	1031177	UnaryOperationExpression	! str		1031161	0					
ANR	1031178	UnaryOperator	!		1031161	0					
ANR	1031179	Identifier	str		1031161	1					
ANR	1031180	CompoundStatement		4:11:43:43	1031161	1					
ANR	1031181	ReturnStatement	return NULL ;	42:2:722:733	1031161	0	True				
ANR	1031182	Identifier	NULL		1031161	0					
ANR	1031183	ExpressionStatement	data = strdup ( str )	45:1:740:759	1031161	3	True				
ANR	1031184	AssignmentExpression	data = strdup ( str )		1031161	0		=			
ANR	1031185	Identifier	data		1031161	0					
ANR	1031186	CallExpression	strdup ( str )		1031161	1					
ANR	1031187	Callee	strdup		1031161	0					
ANR	1031188	Identifier	strdup		1031161	0					
ANR	1031189	ArgumentList	str		1031161	1					
ANR	1031190	Argument	str		1031161	0					
ANR	1031191	Identifier	str		1031161	0					
ANR	1031192	ExpressionStatement	list = r_list_newf ( free )	46:1:762:787	1031161	4	True				
ANR	1031193	AssignmentExpression	list = r_list_newf ( free )		1031161	0		=			
ANR	1031194	Identifier	list		1031161	0					
ANR	1031195	CallExpression	r_list_newf ( free )		1031161	1					
ANR	1031196	Callee	r_list_newf		1031161	0					
ANR	1031197	Identifier	r_list_newf		1031161	0					
ANR	1031198	ArgumentList	free		1031161	1					
ANR	1031199	Argument	free		1031161	0					
ANR	1031200	Identifier	free		1031161	0					
ANR	1031201	ExpressionStatement	"p = strtok ( data , "","" )"	47:1:790:812	1031161	5	True				
ANR	1031202	AssignmentExpression	"p = strtok ( data , "","" )"		1031161	0		=			
ANR	1031203	Identifier	p		1031161	0					
ANR	1031204	CallExpression	"strtok ( data , "","" )"		1031161	1					
ANR	1031205	Callee	strtok		1031161	0					
ANR	1031206	Identifier	strtok		1031161	0					
ANR	1031207	ArgumentList	data		1031161	1					
ANR	1031208	Argument	data		1031161	0					
ANR	1031209	Identifier	data		1031161	0					
ANR	1031210	Argument	""","""		1031161	1					
ANR	1031211	PrimaryExpression	""","""		1031161	0					
ANR	1031212	WhileStatement	while ( p )		1031161	6					
ANR	1031213	Condition	p	48:8:822:822	1031161	0	True				
ANR	1031214	Identifier	p		1031161	0					
ANR	1031215	CompoundStatement		11:11:150:150	1031161	1					
ANR	1031216	IfStatement	"if ( strtol ( p , NULL , 0 ) )"		1031161	0					
ANR	1031217	Condition	"strtol ( p , NULL , 0 )"	49:6:833:851	1031161	0	True				
ANR	1031218	CallExpression	"strtol ( p , NULL , 0 )"		1031161	0					
ANR	1031219	Callee	strtol		1031161	0					
ANR	1031220	Identifier	strtol		1031161	0					
ANR	1031221	ArgumentList	p		1031161	1					
ANR	1031222	Argument	p		1031161	0					
ANR	1031223	Identifier	p		1031161	0					
ANR	1031224	Argument	NULL		1031161	1					
ANR	1031225	Identifier	NULL		1031161	0					
ANR	1031226	Argument	0		1031161	2					
ANR	1031227	PrimaryExpression	0		1031161	0					
ANR	1031228	CompoundStatement		12:27:179:179	1031161	1					
ANR	1031229	ExpressionStatement	"r_list_append ( list , ( void * ) strdup ( p ) )"	50:3:859:898	1031161	0	True				
ANR	1031230	CallExpression	"r_list_append ( list , ( void * ) strdup ( p ) )"		1031161	0					
ANR	1031231	Callee	r_list_append		1031161	0					
ANR	1031232	Identifier	r_list_append		1031161	0					
ANR	1031233	ArgumentList	list		1031161	1					
ANR	1031234	Argument	list		1031161	0					
ANR	1031235	Identifier	list		1031161	0					
ANR	1031236	Argument	( void * ) strdup ( p )		1031161	1					
ANR	1031237	CastExpression	( void * ) strdup ( p )		1031161	0					
ANR	1031238	CastTarget	void *		1031161	0					
ANR	1031239	CallExpression	strdup ( p )		1031161	1					
ANR	1031240	Callee	strdup		1031161	0					
ANR	1031241	Identifier	strdup		1031161	0					
ANR	1031242	ArgumentList	p		1031161	1					
ANR	1031243	Argument	p		1031161	0					
ANR	1031244	Identifier	p		1031161	0					
ANR	1031245	ExpressionStatement	"p = strtok ( NULL , "","" )"	52:2:906:928	1031161	1	True				
ANR	1031246	AssignmentExpression	"p = strtok ( NULL , "","" )"		1031161	0		=			
ANR	1031247	Identifier	p		1031161	0					
ANR	1031248	CallExpression	"strtok ( NULL , "","" )"		1031161	1					
ANR	1031249	Callee	strtok		1031161	0					
ANR	1031250	Identifier	strtok		1031161	0					
ANR	1031251	ArgumentList	NULL		1031161	1					
ANR	1031252	Argument	NULL		1031161	0					
ANR	1031253	Identifier	NULL		1031161	0					
ANR	1031254	Argument	""","""		1031161	1					
ANR	1031255	PrimaryExpression	""","""		1031161	0					
ANR	1031256	ExpressionStatement	free ( data )	54:1:934:945	1031161	7	True				
ANR	1031257	CallExpression	free ( data )		1031161	0					
ANR	1031258	Callee	free		1031161	0					
ANR	1031259	Identifier	free		1031161	0					
ANR	1031260	ArgumentList	data		1031161	1					
ANR	1031261	Argument	data		1031161	0					
ANR	1031262	Identifier	data		1031161	0					
ANR	1031263	ReturnStatement	return list ;	55:1:948:959	1031161	8	True				
ANR	1031264	Identifier	list		1031161	0					
ANR	1031265	ReturnType	static RList *		1031161	1					
ANR	1031266	Identifier	get_constants		1031161	2					
ANR	1031267	ParameterList	const char * str		1031161	3					
ANR	1031268	Parameter	const char * str	38:28:657:671	1031161	0	True				
ANR	1031269	ParameterType	const char *		1031161	0					
ANR	1031270	Identifier	str		1031161	1					
ANR	1031271	CFGEntryNode	ENTRY		1031161		True				
ANR	1031272	CFGExitNode	EXIT		1031161		True				
ANR	1031273	Symbol	str		1031161						
ANR	1031274	Symbol	p		1031161						
ANR	1031275	Symbol	NULL		1031161						
ANR	1031276	Symbol	data		1031161						
ANR	1031277	Symbol	r_list_newf		1031161						
ANR	1031278	Symbol	strtol		1031161						
ANR	1031279	Symbol	strtok		1031161						
ANR	1031280	Symbol	strdup		1031161						
ANR	1031281	Symbol	list		1031161						
ANR	1031282	Symbol	free		1031161						
ANR	1031283	Function	isFlag	58:0:964:1108							
ANR	1031284	FunctionDef	isFlag (RRegItem * reg)		1031283	0					
ANR	1031285	CompoundStatement		58:35:999:1108	1031283	0					
ANR	1031286	IdentifierDeclStatement	const char * type = r_reg_get_type ( reg -> type ) ;	59:1:1002:1047	1031283	0	True				
ANR	1031287	IdentifierDecl	* type = r_reg_get_type ( reg -> type )		1031283	0					
ANR	1031288	IdentifierDeclType	const char *		1031283	0					
ANR	1031289	Identifier	type		1031283	1					
ANR	1031290	AssignmentExpression	* type = r_reg_get_type ( reg -> type )		1031283	2		=			
ANR	1031291	Identifier	type		1031283	0					
ANR	1031292	CallExpression	r_reg_get_type ( reg -> type )		1031283	1					
ANR	1031293	Callee	r_reg_get_type		1031283	0					
ANR	1031294	Identifier	r_reg_get_type		1031283	0					
ANR	1031295	ArgumentList	reg -> type		1031283	1					
ANR	1031296	Argument	reg -> type		1031283	0					
ANR	1031297	PtrMemberAccess	reg -> type		1031283	0					
ANR	1031298	Identifier	reg		1031283	0					
ANR	1031299	Identifier	type		1031283	1					
ANR	1031300	IfStatement	"if ( ! strcmp ( type , ""flg"" ) )"		1031283	1					
ANR	1031301	Condition	"! strcmp ( type , ""flg"" )"	61:5:1055:1075	1031283	0	True				
ANR	1031302	UnaryOperationExpression	"! strcmp ( type , ""flg"" )"		1031283	0					
ANR	1031303	UnaryOperator	!		1031283	0					
ANR	1031304	CallExpression	"strcmp ( type , ""flg"" )"		1031283	1					
ANR	1031305	Callee	strcmp		1031283	0					
ANR	1031306	Identifier	strcmp		1031283	0					
ANR	1031307	ArgumentList	type		1031283	1					
ANR	1031308	Argument	type		1031283	0					
ANR	1031309	Identifier	type		1031283	0					
ANR	1031310	Argument	"""flg"""		1031283	1					
ANR	1031311	PrimaryExpression	"""flg"""		1031283	0					
ANR	1031312	ReturnStatement	return true ;	62:2:1080:1091	1031283	1	True				
ANR	1031313	Identifier	true		1031283	0					
ANR	1031314	ReturnStatement	return false ;	63:1:1094:1106	1031283	2	True				
ANR	1031315	Identifier	false		1031283	0					
ANR	1031316	ReturnType	static bool		1031283	1					
ANR	1031317	Identifier	isFlag		1031283	2					
ANR	1031318	ParameterList	RRegItem * reg		1031283	3					
ANR	1031319	Parameter	RRegItem * reg	58:20:984:996	1031283	0	True				
ANR	1031320	ParameterType	RRegItem *		1031283	0					
ANR	1031321	Identifier	reg		1031283	1					
ANR	1031322	CFGEntryNode	ENTRY		1031283		True				
ANR	1031323	CFGExitNode	EXIT		1031283		True				
ANR	1031324	Symbol	reg -> type		1031283						
ANR	1031325	Symbol	strcmp		1031283						
ANR	1031326	Symbol	reg		1031283						
ANR	1031327	Symbol	r_reg_get_type		1031283						
ANR	1031328	Symbol	true		1031283						
ANR	1031329	Symbol	false		1031283						
ANR	1031330	Symbol	type		1031283						
ANR	1031331	Symbol	* reg		1031283						
ANR	1031332	Function	simulate_op	67:0:1124:2919							
ANR	1031333	FunctionDef	"simulate_op (const char * op , ut64 src1 , ut64 src2 , ut64 old_src1 , ut64 old_src2 , ut64 * result , int size)"		1031332	0					
ANR	1031334	CompoundStatement		67:117:1241:2919	1031332	0					
ANR	1031335	IdentifierDeclStatement	ut64 limit ;	68:1:1244:1254	1031332	0	True				
ANR	1031336	IdentifierDecl	limit		1031332	0					
ANR	1031337	IdentifierDeclType	ut64		1031332	0					
ANR	1031338	Identifier	limit		1031332	1					
ANR	1031339	IfStatement	if ( size == 64 )		1031332	1					
ANR	1031340	Condition	size == 64	69:5:1261:1270	1031332	0	True				
ANR	1031341	EqualityExpression	size == 64		1031332	0		==			
ANR	1031342	Identifier	size		1031332	0					
ANR	1031343	PrimaryExpression	64		1031332	1					
ANR	1031344	CompoundStatement		3:17:31:31	1031332	1					
ANR	1031345	ExpressionStatement	limit = UT64_MAX	70:2:1277:1293	1031332	0	True				
ANR	1031346	AssignmentExpression	limit = UT64_MAX		1031332	0		=			
ANR	1031347	Identifier	limit		1031332	0					
ANR	1031348	Identifier	UT64_MAX		1031332	1					
ANR	1031349	ElseStatement	else		1031332	0					
ANR	1031350	CompoundStatement		5:8:61:61	1031332	0					
ANR	1031351	Statement	limit	72:2:1307:1311	1031332	0	True				
ANR	1031352	Statement	=	72:8:1313:1313	1031332	1	True				
ANR	1031353	Statement	1UL	72:10:1315:1317	1031332	2	True				
ANR	1031354	ExpressionStatement	L << size	72:13:1318:1327	1031332	3	True				
ANR	1031355	ShiftExpression	L << size		1031332	0		<<			
ANR	1031356	Identifier	L		1031332	0					
ANR	1031357	Identifier	size		1031332	1					
ANR	1031358	IfStatement	"if ( ! strcmp ( op , ""^"" ) )"		1031332	2					
ANR	1031359	Condition	"! strcmp ( op , ""^"" )"	75:5:1338:1354	1031332	0	True				
ANR	1031360	UnaryOperationExpression	"! strcmp ( op , ""^"" )"		1031332	0					
ANR	1031361	UnaryOperator	!		1031332	0					
ANR	1031362	CallExpression	"strcmp ( op , ""^"" )"		1031332	1					
ANR	1031363	Callee	strcmp		1031332	0					
ANR	1031364	Identifier	strcmp		1031332	0					
ANR	1031365	ArgumentList	op		1031332	1					
ANR	1031366	Argument	op		1031332	0					
ANR	1031367	Identifier	op		1031332	0					
ANR	1031368	Argument	"""^"""		1031332	1					
ANR	1031369	PrimaryExpression	"""^"""		1031332	0					
ANR	1031370	CompoundStatement		9:24:115:115	1031332	1					
ANR	1031371	ExpressionStatement	* result = src1 ^ src2	76:2:1361:1383	1031332	0	True				
ANR	1031372	AssignmentExpression	* result = src1 ^ src2		1031332	0		=			
ANR	1031373	UnaryOperationExpression	* result		1031332	0					
ANR	1031374	UnaryOperator	*		1031332	0					
ANR	1031375	Identifier	result		1031332	1					
ANR	1031376	ExclusiveOrExpression	src1 ^ src2		1031332	1		^			
ANR	1031377	Identifier	src1		1031332	0					
ANR	1031378	Identifier	src2		1031332	1					
ANR	1031379	ReturnStatement	return true ;	77:2:1387:1398	1031332	1	True				
ANR	1031380	Identifier	true		1031332	0					
ANR	1031381	IfStatement	"if ( ! strcmp ( op , ""+"" ) )"		1031332	3					
ANR	1031382	Condition	"! strcmp ( op , ""+"" )"	79:5:1408:1424	1031332	0	True				
ANR	1031383	UnaryOperationExpression	"! strcmp ( op , ""+"" )"		1031332	0					
ANR	1031384	UnaryOperator	!		1031332	0					
ANR	1031385	CallExpression	"strcmp ( op , ""+"" )"		1031332	1					
ANR	1031386	Callee	strcmp		1031332	0					
ANR	1031387	Identifier	strcmp		1031332	0					
ANR	1031388	ArgumentList	op		1031332	1					
ANR	1031389	Argument	op		1031332	0					
ANR	1031390	Identifier	op		1031332	0					
ANR	1031391	Argument	"""+"""		1031332	1					
ANR	1031392	PrimaryExpression	"""+"""		1031332	0					
ANR	1031393	CompoundStatement		13:24:185:185	1031332	1					
ANR	1031394	ExpressionStatement	* result = src1 + src2	80:2:1431:1452	1031332	0	True				
ANR	1031395	AssignmentExpression	* result = src1 + src2		1031332	0		=			
ANR	1031396	UnaryOperationExpression	* result		1031332	0					
ANR	1031397	UnaryOperator	*		1031332	0					
ANR	1031398	Identifier	result		1031332	1					
ANR	1031399	AdditiveExpression	src1 + src2		1031332	1		+			
ANR	1031400	Identifier	src1		1031332	0					
ANR	1031401	Identifier	src2		1031332	1					
ANR	1031402	ReturnStatement	return true ;	81:2:1456:1467	1031332	1	True				
ANR	1031403	Identifier	true		1031332	0					
ANR	1031404	IfStatement	"if ( ! strcmp ( op , ""-"" ) )"		1031332	4					
ANR	1031405	Condition	"! strcmp ( op , ""-"" )"	83:5:1477:1493	1031332	0	True				
ANR	1031406	UnaryOperationExpression	"! strcmp ( op , ""-"" )"		1031332	0					
ANR	1031407	UnaryOperator	!		1031332	0					
ANR	1031408	CallExpression	"strcmp ( op , ""-"" )"		1031332	1					
ANR	1031409	Callee	strcmp		1031332	0					
ANR	1031410	Identifier	strcmp		1031332	0					
ANR	1031411	ArgumentList	op		1031332	1					
ANR	1031412	Argument	op		1031332	0					
ANR	1031413	Identifier	op		1031332	0					
ANR	1031414	Argument	"""-"""		1031332	1					
ANR	1031415	PrimaryExpression	"""-"""		1031332	0					
ANR	1031416	CompoundStatement		17:24:254:254	1031332	1					
ANR	1031417	IfStatement	if ( src2 > src1 )		1031332	0					
ANR	1031418	Condition	src2 > src1	84:6:1504:1514	1031332	0	True				
ANR	1031419	RelationalExpression	src2 > src1		1031332	0		>			
ANR	1031420	Identifier	src2		1031332	0					
ANR	1031421	Identifier	src1		1031332	1					
ANR	1031422	CompoundStatement		18:19:275:275	1031332	1					
ANR	1031423	ExpressionStatement	* result = limit + ( src1 - src2 )	85:3:1522:1553	1031332	0	True				
ANR	1031424	AssignmentExpression	* result = limit + ( src1 - src2 )		1031332	0		=			
ANR	1031425	UnaryOperationExpression	* result		1031332	0					
ANR	1031426	UnaryOperator	*		1031332	0					
ANR	1031427	Identifier	result		1031332	1					
ANR	1031428	AdditiveExpression	limit + ( src1 - src2 )		1031332	1		+			
ANR	1031429	Identifier	limit		1031332	0					
ANR	1031430	AdditiveExpression	src1 - src2		1031332	1		-			
ANR	1031431	Identifier	src1		1031332	0					
ANR	1031432	Identifier	src2		1031332	1					
ANR	1031433	ElseStatement	else		1031332	0					
ANR	1031434	CompoundStatement		20:9:322:322	1031332	0					
ANR	1031435	ExpressionStatement	* result = src1 - src2	87:3:1569:1590	1031332	0	True				
ANR	1031436	AssignmentExpression	* result = src1 - src2		1031332	0		=			
ANR	1031437	UnaryOperationExpression	* result		1031332	0					
ANR	1031438	UnaryOperator	*		1031332	0					
ANR	1031439	Identifier	result		1031332	1					
ANR	1031440	AdditiveExpression	src1 - src2		1031332	1		-			
ANR	1031441	Identifier	src1		1031332	0					
ANR	1031442	Identifier	src2		1031332	1					
ANR	1031443	ReturnStatement	return true ;	89:2:1598:1609	1031332	1	True				
ANR	1031444	Identifier	true		1031332	0					
ANR	1031445	IfStatement	"if ( ! strcmp ( op , ""*"" ) )"		1031332	5					
ANR	1031446	Condition	"! strcmp ( op , ""*"" )"	91:5:1619:1635	1031332	0	True				
ANR	1031447	UnaryOperationExpression	"! strcmp ( op , ""*"" )"		1031332	0					
ANR	1031448	UnaryOperator	!		1031332	0					
ANR	1031449	CallExpression	"strcmp ( op , ""*"" )"		1031332	1					
ANR	1031450	Callee	strcmp		1031332	0					
ANR	1031451	Identifier	strcmp		1031332	0					
ANR	1031452	ArgumentList	op		1031332	1					
ANR	1031453	Argument	op		1031332	0					
ANR	1031454	Identifier	op		1031332	0					
ANR	1031455	Argument	"""*"""		1031332	1					
ANR	1031456	PrimaryExpression	"""*"""		1031332	0					
ANR	1031457	CompoundStatement		25:24:396:396	1031332	1					
ANR	1031458	ExpressionStatement	* result = src1 * src2	92:2:1642:1663	1031332	0	True				
ANR	1031459	AssignmentExpression	* result = src1 * src2		1031332	0		=			
ANR	1031460	UnaryOperationExpression	* result		1031332	0					
ANR	1031461	UnaryOperator	*		1031332	0					
ANR	1031462	Identifier	result		1031332	1					
ANR	1031463	MultiplicativeExpression	src1 * src2		1031332	1		*			
ANR	1031464	Identifier	src1		1031332	0					
ANR	1031465	Identifier	src2		1031332	1					
ANR	1031466	ReturnStatement	return true ;	93:2:1667:1678	1031332	1	True				
ANR	1031467	Identifier	true		1031332	0					
ANR	1031468	IfStatement	"if ( ! strcmp ( op , ""|"" ) )"		1031332	6					
ANR	1031469	Condition	"! strcmp ( op , ""|"" )"	95:5:1688:1704	1031332	0	True				
ANR	1031470	UnaryOperationExpression	"! strcmp ( op , ""|"" )"		1031332	0					
ANR	1031471	UnaryOperator	!		1031332	0					
ANR	1031472	CallExpression	"strcmp ( op , ""|"" )"		1031332	1					
ANR	1031473	Callee	strcmp		1031332	0					
ANR	1031474	Identifier	strcmp		1031332	0					
ANR	1031475	ArgumentList	op		1031332	1					
ANR	1031476	Argument	op		1031332	0					
ANR	1031477	Identifier	op		1031332	0					
ANR	1031478	Argument	"""|"""		1031332	1					
ANR	1031479	PrimaryExpression	"""|"""		1031332	0					
ANR	1031480	CompoundStatement		29:24:465:465	1031332	1					
ANR	1031481	ExpressionStatement	* result = src1 | src2	96:2:1711:1732	1031332	0	True				
ANR	1031482	AssignmentExpression	* result = src1 | src2		1031332	0		=			
ANR	1031483	UnaryOperationExpression	* result		1031332	0					
ANR	1031484	UnaryOperator	*		1031332	0					
ANR	1031485	Identifier	result		1031332	1					
ANR	1031486	InclusiveOrExpression	src1 | src2		1031332	1		|			
ANR	1031487	Identifier	src1		1031332	0					
ANR	1031488	Identifier	src2		1031332	1					
ANR	1031489	ReturnStatement	return true ;	97:2:1736:1747	1031332	1	True				
ANR	1031490	Identifier	true		1031332	0					
ANR	1031491	IfStatement	"if ( ! strcmp ( op , ""/"" ) )"		1031332	7					
ANR	1031492	Condition	"! strcmp ( op , ""/"" )"	99:5:1757:1773	1031332	0	True				
ANR	1031493	UnaryOperationExpression	"! strcmp ( op , ""/"" )"		1031332	0					
ANR	1031494	UnaryOperator	!		1031332	0					
ANR	1031495	CallExpression	"strcmp ( op , ""/"" )"		1031332	1					
ANR	1031496	Callee	strcmp		1031332	0					
ANR	1031497	Identifier	strcmp		1031332	0					
ANR	1031498	ArgumentList	op		1031332	1					
ANR	1031499	Argument	op		1031332	0					
ANR	1031500	Identifier	op		1031332	0					
ANR	1031501	Argument	"""/"""		1031332	1					
ANR	1031502	PrimaryExpression	"""/"""		1031332	0					
ANR	1031503	CompoundStatement		33:24:534:534	1031332	1					
ANR	1031504	ExpressionStatement	* result = src1 / src2	100:2:1780:1801	1031332	0	True				
ANR	1031505	AssignmentExpression	* result = src1 / src2		1031332	0		=			
ANR	1031506	UnaryOperationExpression	* result		1031332	0					
ANR	1031507	UnaryOperator	*		1031332	0					
ANR	1031508	Identifier	result		1031332	1					
ANR	1031509	MultiplicativeExpression	src1 / src2		1031332	1		/			
ANR	1031510	Identifier	src1		1031332	0					
ANR	1031511	Identifier	src2		1031332	1					
ANR	1031512	ReturnStatement	return true ;	101:2:1805:1816	1031332	1	True				
ANR	1031513	Identifier	true		1031332	0					
ANR	1031514	IfStatement	"if ( ! strcmp ( op , ""%"" ) )"		1031332	8					
ANR	1031515	Condition	"! strcmp ( op , ""%"" )"	103:5:1826:1842	1031332	0	True				
ANR	1031516	UnaryOperationExpression	"! strcmp ( op , ""%"" )"		1031332	0					
ANR	1031517	UnaryOperator	!		1031332	0					
ANR	1031518	CallExpression	"strcmp ( op , ""%"" )"		1031332	1					
ANR	1031519	Callee	strcmp		1031332	0					
ANR	1031520	Identifier	strcmp		1031332	0					
ANR	1031521	ArgumentList	op		1031332	1					
ANR	1031522	Argument	op		1031332	0					
ANR	1031523	Identifier	op		1031332	0					
ANR	1031524	Argument	"""%"""		1031332	1					
ANR	1031525	PrimaryExpression	"""%"""		1031332	0					
ANR	1031526	CompoundStatement		37:24:603:603	1031332	1					
ANR	1031527	ExpressionStatement	* result = src1 % src2	104:2:1849:1870	1031332	0	True				
ANR	1031528	AssignmentExpression	* result = src1 % src2		1031332	0		=			
ANR	1031529	UnaryOperationExpression	* result		1031332	0					
ANR	1031530	UnaryOperator	*		1031332	0					
ANR	1031531	Identifier	result		1031332	1					
ANR	1031532	MultiplicativeExpression	src1 % src2		1031332	1		%			
ANR	1031533	Identifier	src1		1031332	0					
ANR	1031534	Identifier	src2		1031332	1					
ANR	1031535	ReturnStatement	return true ;	105:2:1874:1885	1031332	1	True				
ANR	1031536	Identifier	true		1031332	0					
ANR	1031537	IfStatement	"if ( ! strcmp ( op , ""<<"" ) )"		1031332	9					
ANR	1031538	Condition	"! strcmp ( op , ""<<"" )"	107:5:1895:1912	1031332	0	True				
ANR	1031539	UnaryOperationExpression	"! strcmp ( op , ""<<"" )"		1031332	0					
ANR	1031540	UnaryOperator	!		1031332	0					
ANR	1031541	CallExpression	"strcmp ( op , ""<<"" )"		1031332	1					
ANR	1031542	Callee	strcmp		1031332	0					
ANR	1031543	Identifier	strcmp		1031332	0					
ANR	1031544	ArgumentList	op		1031332	1					
ANR	1031545	Argument	op		1031332	0					
ANR	1031546	Identifier	op		1031332	0					
ANR	1031547	Argument	"""<<"""		1031332	1					
ANR	1031548	PrimaryExpression	"""<<"""		1031332	0					
ANR	1031549	CompoundStatement		41:25:673:673	1031332	1					
ANR	1031550	ExpressionStatement	* result = src1 << src2	108:2:1919:1941	1031332	0	True				
ANR	1031551	AssignmentExpression	* result = src1 << src2		1031332	0		=			
ANR	1031552	UnaryOperationExpression	* result		1031332	0					
ANR	1031553	UnaryOperator	*		1031332	0					
ANR	1031554	Identifier	result		1031332	1					
ANR	1031555	ShiftExpression	src1 << src2		1031332	1		<<			
ANR	1031556	Identifier	src1		1031332	0					
ANR	1031557	Identifier	src2		1031332	1					
ANR	1031558	ReturnStatement	return true ;	109:2:1945:1956	1031332	1	True				
ANR	1031559	Identifier	true		1031332	0					
ANR	1031560	IfStatement	"if ( ! strcmp ( op , "">>"" ) )"		1031332	10					
ANR	1031561	Condition	"! strcmp ( op , "">>"" )"	111:5:1966:1983	1031332	0	True				
ANR	1031562	UnaryOperationExpression	"! strcmp ( op , "">>"" )"		1031332	0					
ANR	1031563	UnaryOperator	!		1031332	0					
ANR	1031564	CallExpression	"strcmp ( op , "">>"" )"		1031332	1					
ANR	1031565	Callee	strcmp		1031332	0					
ANR	1031566	Identifier	strcmp		1031332	0					
ANR	1031567	ArgumentList	op		1031332	1					
ANR	1031568	Argument	op		1031332	0					
ANR	1031569	Identifier	op		1031332	0					
ANR	1031570	Argument	""">>"""		1031332	1					
ANR	1031571	PrimaryExpression	""">>"""		1031332	0					
ANR	1031572	CompoundStatement		45:25:744:744	1031332	1					
ANR	1031573	ExpressionStatement	* result = src1 >> src2	112:2:1990:2012	1031332	0	True				
ANR	1031574	AssignmentExpression	* result = src1 >> src2		1031332	0		=			
ANR	1031575	UnaryOperationExpression	* result		1031332	0					
ANR	1031576	UnaryOperator	*		1031332	0					
ANR	1031577	Identifier	result		1031332	1					
ANR	1031578	ShiftExpression	src1 >> src2		1031332	1		>>			
ANR	1031579	Identifier	src1		1031332	0					
ANR	1031580	Identifier	src2		1031332	1					
ANR	1031581	ReturnStatement	return true ;	113:2:2016:2027	1031332	1	True				
ANR	1031582	Identifier	true		1031332	0					
ANR	1031583	IfStatement	"if ( ! strcmp ( op , ""&"" ) )"		1031332	11					
ANR	1031584	Condition	"! strcmp ( op , ""&"" )"	115:5:2037:2053	1031332	0	True				
ANR	1031585	UnaryOperationExpression	"! strcmp ( op , ""&"" )"		1031332	0					
ANR	1031586	UnaryOperator	!		1031332	0					
ANR	1031587	CallExpression	"strcmp ( op , ""&"" )"		1031332	1					
ANR	1031588	Callee	strcmp		1031332	0					
ANR	1031589	Identifier	strcmp		1031332	0					
ANR	1031590	ArgumentList	op		1031332	1					
ANR	1031591	Argument	op		1031332	0					
ANR	1031592	Identifier	op		1031332	0					
ANR	1031593	Argument	"""&"""		1031332	1					
ANR	1031594	PrimaryExpression	"""&"""		1031332	0					
ANR	1031595	CompoundStatement		49:24:814:814	1031332	1					
ANR	1031596	ExpressionStatement	* result = src1 & src2	116:2:2060:2081	1031332	0	True				
ANR	1031597	AssignmentExpression	* result = src1 & src2		1031332	0		=			
ANR	1031598	UnaryOperationExpression	* result		1031332	0					
ANR	1031599	UnaryOperator	*		1031332	0					
ANR	1031600	Identifier	result		1031332	1					
ANR	1031601	BitAndExpression	src1 & src2		1031332	1		&			
ANR	1031602	Identifier	src1		1031332	0					
ANR	1031603	Identifier	src2		1031332	1					
ANR	1031604	ReturnStatement	return true ;	117:2:2085:2096	1031332	1	True				
ANR	1031605	Identifier	true		1031332	0					
ANR	1031606	IfStatement	"if ( ! strcmp ( op , ""+="" ) )"		1031332	12					
ANR	1031607	Condition	"! strcmp ( op , ""+="" )"	119:5:2106:2123	1031332	0	True				
ANR	1031608	UnaryOperationExpression	"! strcmp ( op , ""+="" )"		1031332	0					
ANR	1031609	UnaryOperator	!		1031332	0					
ANR	1031610	CallExpression	"strcmp ( op , ""+="" )"		1031332	1					
ANR	1031611	Callee	strcmp		1031332	0					
ANR	1031612	Identifier	strcmp		1031332	0					
ANR	1031613	ArgumentList	op		1031332	1					
ANR	1031614	Argument	op		1031332	0					
ANR	1031615	Identifier	op		1031332	0					
ANR	1031616	Argument	"""+="""		1031332	1					
ANR	1031617	PrimaryExpression	"""+="""		1031332	0					
ANR	1031618	CompoundStatement		53:25:884:884	1031332	1					
ANR	1031619	ExpressionStatement	* result = old_src1 + src2	120:2:2130:2155	1031332	0	True				
ANR	1031620	AssignmentExpression	* result = old_src1 + src2		1031332	0		=			
ANR	1031621	UnaryOperationExpression	* result		1031332	0					
ANR	1031622	UnaryOperator	*		1031332	0					
ANR	1031623	Identifier	result		1031332	1					
ANR	1031624	AdditiveExpression	old_src1 + src2		1031332	1		+			
ANR	1031625	Identifier	old_src1		1031332	0					
ANR	1031626	Identifier	src2		1031332	1					
ANR	1031627	ReturnStatement	return true ;	121:2:2159:2170	1031332	1	True				
ANR	1031628	Identifier	true		1031332	0					
ANR	1031629	IfStatement	"if ( ! strcmp ( op , ""-="" ) )"		1031332	13					
ANR	1031630	Condition	"! strcmp ( op , ""-="" )"	123:5:2180:2197	1031332	0	True				
ANR	1031631	UnaryOperationExpression	"! strcmp ( op , ""-="" )"		1031332	0					
ANR	1031632	UnaryOperator	!		1031332	0					
ANR	1031633	CallExpression	"strcmp ( op , ""-="" )"		1031332	1					
ANR	1031634	Callee	strcmp		1031332	0					
ANR	1031635	Identifier	strcmp		1031332	0					
ANR	1031636	ArgumentList	op		1031332	1					
ANR	1031637	Argument	op		1031332	0					
ANR	1031638	Identifier	op		1031332	0					
ANR	1031639	Argument	"""-="""		1031332	1					
ANR	1031640	PrimaryExpression	"""-="""		1031332	0					
ANR	1031641	CompoundStatement		57:25:958:958	1031332	1					
ANR	1031642	IfStatement	if ( src2 > old_src1 )		1031332	0					
ANR	1031643	Condition	src2 > old_src1	124:6:2208:2222	1031332	0	True				
ANR	1031644	RelationalExpression	src2 > old_src1		1031332	0		>			
ANR	1031645	Identifier	src2		1031332	0					
ANR	1031646	Identifier	old_src1		1031332	1					
ANR	1031647	CompoundStatement		58:23:983:983	1031332	1					
ANR	1031648	ExpressionStatement	* result = limit + ( old_src1 - src2 )	125:3:2230:2265	1031332	0	True				
ANR	1031649	AssignmentExpression	* result = limit + ( old_src1 - src2 )		1031332	0		=			
ANR	1031650	UnaryOperationExpression	* result		1031332	0					
ANR	1031651	UnaryOperator	*		1031332	0					
ANR	1031652	Identifier	result		1031332	1					
ANR	1031653	AdditiveExpression	limit + ( old_src1 - src2 )		1031332	1		+			
ANR	1031654	Identifier	limit		1031332	0					
ANR	1031655	AdditiveExpression	old_src1 - src2		1031332	1		-			
ANR	1031656	Identifier	old_src1		1031332	0					
ANR	1031657	Identifier	src2		1031332	1					
ANR	1031658	ElseStatement	else		1031332	0					
ANR	1031659	CompoundStatement		60:9:1034:1034	1031332	0					
ANR	1031660	ExpressionStatement	* result = old_src1 - src2	127:3:2281:2306	1031332	0	True				
ANR	1031661	AssignmentExpression	* result = old_src1 - src2		1031332	0		=			
ANR	1031662	UnaryOperationExpression	* result		1031332	0					
ANR	1031663	UnaryOperator	*		1031332	0					
ANR	1031664	Identifier	result		1031332	1					
ANR	1031665	AdditiveExpression	old_src1 - src2		1031332	1		-			
ANR	1031666	Identifier	old_src1		1031332	0					
ANR	1031667	Identifier	src2		1031332	1					
ANR	1031668	ReturnStatement	return true ;	129:2:2314:2325	1031332	1	True				
ANR	1031669	Identifier	true		1031332	0					
ANR	1031670	IfStatement	"if ( ! strcmp ( op , ""*="" ) )"		1031332	14					
ANR	1031671	Condition	"! strcmp ( op , ""*="" )"	131:5:2335:2352	1031332	0	True				
ANR	1031672	UnaryOperationExpression	"! strcmp ( op , ""*="" )"		1031332	0					
ANR	1031673	UnaryOperator	!		1031332	0					
ANR	1031674	CallExpression	"strcmp ( op , ""*="" )"		1031332	1					
ANR	1031675	Callee	strcmp		1031332	0					
ANR	1031676	Identifier	strcmp		1031332	0					
ANR	1031677	ArgumentList	op		1031332	1					
ANR	1031678	Argument	op		1031332	0					
ANR	1031679	Identifier	op		1031332	0					
ANR	1031680	Argument	"""*="""		1031332	1					
ANR	1031681	PrimaryExpression	"""*="""		1031332	0					
ANR	1031682	CompoundStatement		65:25:1113:1113	1031332	1					
ANR	1031683	ExpressionStatement	* result = old_src1 * src2	132:2:2359:2384	1031332	0	True				
ANR	1031684	AssignmentExpression	* result = old_src1 * src2		1031332	0		=			
ANR	1031685	UnaryOperationExpression	* result		1031332	0					
ANR	1031686	UnaryOperator	*		1031332	0					
ANR	1031687	Identifier	result		1031332	1					
ANR	1031688	MultiplicativeExpression	old_src1 * src2		1031332	1		*			
ANR	1031689	Identifier	old_src1		1031332	0					
ANR	1031690	Identifier	src2		1031332	1					
ANR	1031691	ReturnStatement	return true ;	133:2:2388:2399	1031332	1	True				
ANR	1031692	Identifier	true		1031332	0					
ANR	1031693	IfStatement	"if ( ! strcmp ( op , ""/="" ) )"		1031332	15					
ANR	1031694	Condition	"! strcmp ( op , ""/="" )"	135:5:2409:2426	1031332	0	True				
ANR	1031695	UnaryOperationExpression	"! strcmp ( op , ""/="" )"		1031332	0					
ANR	1031696	UnaryOperator	!		1031332	0					
ANR	1031697	CallExpression	"strcmp ( op , ""/="" )"		1031332	1					
ANR	1031698	Callee	strcmp		1031332	0					
ANR	1031699	Identifier	strcmp		1031332	0					
ANR	1031700	ArgumentList	op		1031332	1					
ANR	1031701	Argument	op		1031332	0					
ANR	1031702	Identifier	op		1031332	0					
ANR	1031703	Argument	"""/="""		1031332	1					
ANR	1031704	PrimaryExpression	"""/="""		1031332	0					
ANR	1031705	CompoundStatement		69:25:1187:1187	1031332	1					
ANR	1031706	ExpressionStatement	* result = old_src1 / src2	136:2:2433:2458	1031332	0	True				
ANR	1031707	AssignmentExpression	* result = old_src1 / src2		1031332	0		=			
ANR	1031708	UnaryOperationExpression	* result		1031332	0					
ANR	1031709	UnaryOperator	*		1031332	0					
ANR	1031710	Identifier	result		1031332	1					
ANR	1031711	MultiplicativeExpression	old_src1 / src2		1031332	1		/			
ANR	1031712	Identifier	old_src1		1031332	0					
ANR	1031713	Identifier	src2		1031332	1					
ANR	1031714	ReturnStatement	return true ;	137:2:2462:2473	1031332	1	True				
ANR	1031715	Identifier	true		1031332	0					
ANR	1031716	IfStatement	"if ( ! strcmp ( op , ""%="" ) )"		1031332	16					
ANR	1031717	Condition	"! strcmp ( op , ""%="" )"	139:5:2483:2500	1031332	0	True				
ANR	1031718	UnaryOperationExpression	"! strcmp ( op , ""%="" )"		1031332	0					
ANR	1031719	UnaryOperator	!		1031332	0					
ANR	1031720	CallExpression	"strcmp ( op , ""%="" )"		1031332	1					
ANR	1031721	Callee	strcmp		1031332	0					
ANR	1031722	Identifier	strcmp		1031332	0					
ANR	1031723	ArgumentList	op		1031332	1					
ANR	1031724	Argument	op		1031332	0					
ANR	1031725	Identifier	op		1031332	0					
ANR	1031726	Argument	"""%="""		1031332	1					
ANR	1031727	PrimaryExpression	"""%="""		1031332	0					
ANR	1031728	CompoundStatement		73:25:1261:1261	1031332	1					
ANR	1031729	ExpressionStatement	* result = old_src1 % src2	140:2:2507:2532	1031332	0	True				
ANR	1031730	AssignmentExpression	* result = old_src1 % src2		1031332	0		=			
ANR	1031731	UnaryOperationExpression	* result		1031332	0					
ANR	1031732	UnaryOperator	*		1031332	0					
ANR	1031733	Identifier	result		1031332	1					
ANR	1031734	MultiplicativeExpression	old_src1 % src2		1031332	1		%			
ANR	1031735	Identifier	old_src1		1031332	0					
ANR	1031736	Identifier	src2		1031332	1					
ANR	1031737	ReturnStatement	return true ;	141:2:2536:2547	1031332	1	True				
ANR	1031738	Identifier	true		1031332	0					
ANR	1031739	IfStatement	"if ( ! strcmp ( op , ""<<"" ) )"		1031332	17					
ANR	1031740	Condition	"! strcmp ( op , ""<<"" )"	143:5:2557:2574	1031332	0	True				
ANR	1031741	UnaryOperationExpression	"! strcmp ( op , ""<<"" )"		1031332	0					
ANR	1031742	UnaryOperator	!		1031332	0					
ANR	1031743	CallExpression	"strcmp ( op , ""<<"" )"		1031332	1					
ANR	1031744	Callee	strcmp		1031332	0					
ANR	1031745	Identifier	strcmp		1031332	0					
ANR	1031746	ArgumentList	op		1031332	1					
ANR	1031747	Argument	op		1031332	0					
ANR	1031748	Identifier	op		1031332	0					
ANR	1031749	Argument	"""<<"""		1031332	1					
ANR	1031750	PrimaryExpression	"""<<"""		1031332	0					
ANR	1031751	CompoundStatement		77:25:1335:1335	1031332	1					
ANR	1031752	ExpressionStatement	* result = src1 << src2	144:2:2581:2603	1031332	0	True				
ANR	1031753	AssignmentExpression	* result = src1 << src2		1031332	0		=			
ANR	1031754	UnaryOperationExpression	* result		1031332	0					
ANR	1031755	UnaryOperator	*		1031332	0					
ANR	1031756	Identifier	result		1031332	1					
ANR	1031757	ShiftExpression	src1 << src2		1031332	1		<<			
ANR	1031758	Identifier	src1		1031332	0					
ANR	1031759	Identifier	src2		1031332	1					
ANR	1031760	ReturnStatement	return true ;	145:2:2607:2618	1031332	1	True				
ANR	1031761	Identifier	true		1031332	0					
ANR	1031762	IfStatement	"if ( ! strcmp ( op , "">>"" ) )"		1031332	18					
ANR	1031763	Condition	"! strcmp ( op , "">>"" )"	147:5:2628:2645	1031332	0	True				
ANR	1031764	UnaryOperationExpression	"! strcmp ( op , "">>"" )"		1031332	0					
ANR	1031765	UnaryOperator	!		1031332	0					
ANR	1031766	CallExpression	"strcmp ( op , "">>"" )"		1031332	1					
ANR	1031767	Callee	strcmp		1031332	0					
ANR	1031768	Identifier	strcmp		1031332	0					
ANR	1031769	ArgumentList	op		1031332	1					
ANR	1031770	Argument	op		1031332	0					
ANR	1031771	Identifier	op		1031332	0					
ANR	1031772	Argument	""">>"""		1031332	1					
ANR	1031773	PrimaryExpression	""">>"""		1031332	0					
ANR	1031774	CompoundStatement		81:25:1406:1406	1031332	1					
ANR	1031775	ExpressionStatement	* result = src1 >> src2	148:2:2652:2674	1031332	0	True				
ANR	1031776	AssignmentExpression	* result = src1 >> src2		1031332	0		=			
ANR	1031777	UnaryOperationExpression	* result		1031332	0					
ANR	1031778	UnaryOperator	*		1031332	0					
ANR	1031779	Identifier	result		1031332	1					
ANR	1031780	ShiftExpression	src1 >> src2		1031332	1		>>			
ANR	1031781	Identifier	src1		1031332	0					
ANR	1031782	Identifier	src2		1031332	1					
ANR	1031783	ReturnStatement	return true ;	149:2:2678:2689	1031332	1	True				
ANR	1031784	Identifier	true		1031332	0					
ANR	1031785	IfStatement	"if ( ! strcmp ( op , ""&="" ) )"		1031332	19					
ANR	1031786	Condition	"! strcmp ( op , ""&="" )"	151:5:2699:2716	1031332	0	True				
ANR	1031787	UnaryOperationExpression	"! strcmp ( op , ""&="" )"		1031332	0					
ANR	1031788	UnaryOperator	!		1031332	0					
ANR	1031789	CallExpression	"strcmp ( op , ""&="" )"		1031332	1					
ANR	1031790	Callee	strcmp		1031332	0					
ANR	1031791	Identifier	strcmp		1031332	0					
ANR	1031792	ArgumentList	op		1031332	1					
ANR	1031793	Argument	op		1031332	0					
ANR	1031794	Identifier	op		1031332	0					
ANR	1031795	Argument	"""&="""		1031332	1					
ANR	1031796	PrimaryExpression	"""&="""		1031332	0					
ANR	1031797	CompoundStatement		85:25:1477:1477	1031332	1					
ANR	1031798	ExpressionStatement	* result = src1 & src2	152:2:2723:2744	1031332	0	True				
ANR	1031799	AssignmentExpression	* result = src1 & src2		1031332	0		=			
ANR	1031800	UnaryOperationExpression	* result		1031332	0					
ANR	1031801	UnaryOperator	*		1031332	0					
ANR	1031802	Identifier	result		1031332	1					
ANR	1031803	BitAndExpression	src1 & src2		1031332	1		&			
ANR	1031804	Identifier	src1		1031332	0					
ANR	1031805	Identifier	src2		1031332	1					
ANR	1031806	ReturnStatement	return true ;	153:2:2748:2759	1031332	1	True				
ANR	1031807	Identifier	true		1031332	0					
ANR	1031808	IfStatement	"if ( ! strcmp ( op , ""^="" ) )"		1031332	20					
ANR	1031809	Condition	"! strcmp ( op , ""^="" )"	155:5:2769:2786	1031332	0	True				
ANR	1031810	UnaryOperationExpression	"! strcmp ( op , ""^="" )"		1031332	0					
ANR	1031811	UnaryOperator	!		1031332	0					
ANR	1031812	CallExpression	"strcmp ( op , ""^="" )"		1031332	1					
ANR	1031813	Callee	strcmp		1031332	0					
ANR	1031814	Identifier	strcmp		1031332	0					
ANR	1031815	ArgumentList	op		1031332	1					
ANR	1031816	Argument	op		1031332	0					
ANR	1031817	Identifier	op		1031332	0					
ANR	1031818	Argument	"""^="""		1031332	1					
ANR	1031819	PrimaryExpression	"""^="""		1031332	0					
ANR	1031820	CompoundStatement		89:25:1547:1547	1031332	1					
ANR	1031821	ExpressionStatement	* result = src1 ^ src2	156:2:2793:2814	1031332	0	True				
ANR	1031822	AssignmentExpression	* result = src1 ^ src2		1031332	0		=			
ANR	1031823	UnaryOperationExpression	* result		1031332	0					
ANR	1031824	UnaryOperator	*		1031332	0					
ANR	1031825	Identifier	result		1031332	1					
ANR	1031826	ExclusiveOrExpression	src1 ^ src2		1031332	1		^			
ANR	1031827	Identifier	src1		1031332	0					
ANR	1031828	Identifier	src2		1031332	1					
ANR	1031829	ReturnStatement	return true ;	157:2:2818:2829	1031332	1	True				
ANR	1031830	Identifier	true		1031332	0					
ANR	1031831	IfStatement	"if ( ! strcmp ( op , ""|="" ) )"		1031332	21					
ANR	1031832	Condition	"! strcmp ( op , ""|="" )"	159:5:2839:2856	1031332	0	True				
ANR	1031833	UnaryOperationExpression	"! strcmp ( op , ""|="" )"		1031332	0					
ANR	1031834	UnaryOperator	!		1031332	0					
ANR	1031835	CallExpression	"strcmp ( op , ""|="" )"		1031332	1					
ANR	1031836	Callee	strcmp		1031332	0					
ANR	1031837	Identifier	strcmp		1031332	0					
ANR	1031838	ArgumentList	op		1031332	1					
ANR	1031839	Argument	op		1031332	0					
ANR	1031840	Identifier	op		1031332	0					
ANR	1031841	Argument	"""|="""		1031332	1					
ANR	1031842	PrimaryExpression	"""|="""		1031332	0					
ANR	1031843	CompoundStatement		93:25:1617:1617	1031332	1					
ANR	1031844	ExpressionStatement	* result = src1 | src2	160:2:2863:2884	1031332	0	True				
ANR	1031845	AssignmentExpression	* result = src1 | src2		1031332	0		=			
ANR	1031846	UnaryOperationExpression	* result		1031332	0					
ANR	1031847	UnaryOperator	*		1031332	0					
ANR	1031848	Identifier	result		1031332	1					
ANR	1031849	InclusiveOrExpression	src1 | src2		1031332	1		|			
ANR	1031850	Identifier	src1		1031332	0					
ANR	1031851	Identifier	src2		1031332	1					
ANR	1031852	ReturnStatement	return true ;	161:2:2888:2899	1031332	1	True				
ANR	1031853	Identifier	true		1031332	0					
ANR	1031854	ReturnStatement	return false ;	163:1:2905:2917	1031332	22	True				
ANR	1031855	Identifier	false		1031332	0					
ANR	1031856	ReturnType	static bool		1031332	1					
ANR	1031857	Identifier	simulate_op		1031332	2					
ANR	1031858	ParameterList	"const char * op , ut64 src1 , ut64 src2 , ut64 old_src1 , ut64 old_src2 , ut64 * result , int size"		1031332	3					
ANR	1031859	Parameter	const char * op	67:25:1149:1162	1031332	0	True				
ANR	1031860	ParameterType	const char *		1031332	0					
ANR	1031861	Identifier	op		1031332	1					
ANR	1031862	Parameter	ut64 src1	67:41:1165:1173	1031332	1	True				
ANR	1031863	ParameterType	ut64		1031332	0					
ANR	1031864	Identifier	src1		1031332	1					
ANR	1031865	Parameter	ut64 src2	67:52:1176:1184	1031332	2	True				
ANR	1031866	ParameterType	ut64		1031332	0					
ANR	1031867	Identifier	src2		1031332	1					
ANR	1031868	Parameter	ut64 old_src1	67:63:1187:1199	1031332	3	True				
ANR	1031869	ParameterType	ut64		1031332	0					
ANR	1031870	Identifier	old_src1		1031332	1					
ANR	1031871	Parameter	ut64 old_src2	67:78:1202:1214	1031332	4	True				
ANR	1031872	ParameterType	ut64		1031332	0					
ANR	1031873	Identifier	old_src2		1031332	1					
ANR	1031874	Parameter	ut64 * result	67:93:1217:1228	1031332	5	True				
ANR	1031875	ParameterType	ut64 *		1031332	0					
ANR	1031876	Identifier	result		1031332	1					
ANR	1031877	Parameter	int size	67:107:1231:1238	1031332	6	True				
ANR	1031878	ParameterType	int		1031332	0					
ANR	1031879	Identifier	size		1031332	1					
ANR	1031880	CFGEntryNode	ENTRY		1031332		True				
ANR	1031881	CFGExitNode	EXIT		1031332		True				
ANR	1031882	Symbol	strcmp		1031332						
ANR	1031883	Symbol	op		1031332						
ANR	1031884	Symbol	false		1031332						
ANR	1031885	Symbol	result		1031332						
ANR	1031886	Symbol	size		1031332						
ANR	1031887	Symbol	* result		1031332						
ANR	1031888	Symbol	src1		1031332						
ANR	1031889	Symbol	limit		1031332						
ANR	1031890	Symbol	true		1031332						
ANR	1031891	Symbol	src2		1031332						
ANR	1031892	Symbol	UT64_MAX		1031332						
ANR	1031893	Symbol	old_src1		1031332						
ANR	1031894	Symbol	old_src2		1031332						
ANR	1031895	Function	fillRegisterValues	167:0:2953:3325							
ANR	1031896	FunctionDef	fillRegisterValues (RCore * core)		1031895	0					
ANR	1031897	CompoundStatement		167:45:2998:3325	1031895	0					
ANR	1031898	IdentifierDeclStatement	RListIter * iter_reg ;	168:1:3001:3020	1031895	0	True				
ANR	1031899	IdentifierDecl	* iter_reg		1031895	0					
ANR	1031900	IdentifierDeclType	RListIter *		1031895	0					
ANR	1031901	Identifier	iter_reg		1031895	1					
ANR	1031902	IdentifierDeclStatement	RList * regs ;	169:1:3023:3034	1031895	1	True				
ANR	1031903	IdentifierDecl	* regs		1031895	0					
ANR	1031904	IdentifierDeclType	RList *		1031895	0					
ANR	1031905	Identifier	regs		1031895	1					
ANR	1031906	IdentifierDeclStatement	RRegItem * reg_item ;	170:1:3037:3055	1031895	2	True				
ANR	1031907	IdentifierDecl	* reg_item		1031895	0					
ANR	1031908	IdentifierDeclType	RRegItem *		1031895	0					
ANR	1031909	Identifier	reg_item		1031895	1					
ANR	1031910	IdentifierDeclStatement	int nr = 10 ;	171:1:3058:3069	1031895	3	True				
ANR	1031911	IdentifierDecl	nr = 10		1031895	0					
ANR	1031912	IdentifierDeclType	int		1031895	0					
ANR	1031913	Identifier	nr		1031895	1					
ANR	1031914	AssignmentExpression	nr = 10		1031895	2		=			
ANR	1031915	Identifier	nr		1031895	0					
ANR	1031916	PrimaryExpression	10		1031895	1					
ANR	1031917	ExpressionStatement	"regs = r_reg_get_list ( core -> dbg -> reg , 0 )"	173:1:3073:3114	1031895	4	True				
ANR	1031918	AssignmentExpression	"regs = r_reg_get_list ( core -> dbg -> reg , 0 )"		1031895	0		=			
ANR	1031919	Identifier	regs		1031895	0					
ANR	1031920	CallExpression	"r_reg_get_list ( core -> dbg -> reg , 0 )"		1031895	1					
ANR	1031921	Callee	r_reg_get_list		1031895	0					
ANR	1031922	Identifier	r_reg_get_list		1031895	0					
ANR	1031923	ArgumentList	core -> dbg -> reg		1031895	1					
ANR	1031924	Argument	core -> dbg -> reg		1031895	0					
ANR	1031925	PtrMemberAccess	core -> dbg -> reg		1031895	0					
ANR	1031926	PtrMemberAccess	core -> dbg		1031895	0					
ANR	1031927	Identifier	core		1031895	0					
ANR	1031928	Identifier	dbg		1031895	1					
ANR	1031929	Identifier	reg		1031895	1					
ANR	1031930	Argument	0		1031895	1					
ANR	1031931	PrimaryExpression	0		1031895	0					
ANR	1031932	IfStatement	if ( ! regs )		1031895	5					
ANR	1031933	Condition	! regs	174:5:3121:3125	1031895	0	True				
ANR	1031934	UnaryOperationExpression	! regs		1031895	0					
ANR	1031935	UnaryOperator	!		1031895	0					
ANR	1031936	Identifier	regs		1031895	1					
ANR	1031937	CompoundStatement		8:12:129:129	1031895	1					
ANR	1031938	ReturnStatement	return ;	175:2:3132:3138	1031895	0	True				
ANR	1031939	Statement	r_list_foreach	177:1:3144:3157	1031895	6	True				
ANR	1031940	Statement	(	177:16:3159:3159	1031895	7	True				
ANR	1031941	Statement	regs	177:17:3160:3163	1031895	8	True				
ANR	1031942	Statement	","	177:21:3164:3164	1031895	9	True				
ANR	1031943	Statement	iter_reg	177:23:3166:3173	1031895	10	True				
ANR	1031944	Statement	","	177:31:3174:3174	1031895	11	True				
ANR	1031945	Statement	reg_item	177:33:3176:3183	1031895	12	True				
ANR	1031946	Statement	)	177:41:3184:3184	1031895	13	True				
ANR	1031947	CompoundStatement		11:43:187:187	1031895	14					
ANR	1031948	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	178:2:3190:3222	1031895	0	True				
ANR	1031949	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		1031895	0					
ANR	1031950	Callee	r_reg_arena_pop		1031895	0					
ANR	1031951	Identifier	r_reg_arena_pop		1031895	0					
ANR	1031952	ArgumentList	core -> dbg -> reg		1031895	1					
ANR	1031953	Argument	core -> dbg -> reg		1031895	0					
ANR	1031954	PtrMemberAccess	core -> dbg -> reg		1031895	0					
ANR	1031955	PtrMemberAccess	core -> dbg		1031895	0					
ANR	1031956	Identifier	core		1031895	0					
ANR	1031957	Identifier	dbg		1031895	1					
ANR	1031958	Identifier	reg		1031895	1					
ANR	1031959	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , reg_item , nr )"	179:2:3226:3272	1031895	1	True				
ANR	1031960	CallExpression	"r_reg_set_value ( core -> dbg -> reg , reg_item , nr )"		1031895	0					
ANR	1031961	Callee	r_reg_set_value		1031895	0					
ANR	1031962	Identifier	r_reg_set_value		1031895	0					
ANR	1031963	ArgumentList	core -> dbg -> reg		1031895	1					
ANR	1031964	Argument	core -> dbg -> reg		1031895	0					
ANR	1031965	PtrMemberAccess	core -> dbg -> reg		1031895	0					
ANR	1031966	PtrMemberAccess	core -> dbg		1031895	0					
ANR	1031967	Identifier	core		1031895	0					
ANR	1031968	Identifier	dbg		1031895	1					
ANR	1031969	Identifier	reg		1031895	1					
ANR	1031970	Argument	reg_item		1031895	1					
ANR	1031971	Identifier	reg_item		1031895	0					
ANR	1031972	Argument	nr		1031895	2					
ANR	1031973	Identifier	nr		1031895	0					
ANR	1031974	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	180:2:3276:3309	1031895	2	True				
ANR	1031975	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		1031895	0					
ANR	1031976	Callee	r_reg_arena_push		1031895	0					
ANR	1031977	Identifier	r_reg_arena_push		1031895	0					
ANR	1031978	ArgumentList	core -> dbg -> reg		1031895	1					
ANR	1031979	Argument	core -> dbg -> reg		1031895	0					
ANR	1031980	PtrMemberAccess	core -> dbg -> reg		1031895	0					
ANR	1031981	PtrMemberAccess	core -> dbg		1031895	0					
ANR	1031982	Identifier	core		1031895	0					
ANR	1031983	Identifier	dbg		1031895	1					
ANR	1031984	Identifier	reg		1031895	1					
ANR	1031985	ExpressionStatement	nr += 3	181:2:3313:3320	1031895	3	True				
ANR	1031986	AssignmentExpression	nr += 3		1031895	0		+=			
ANR	1031987	Identifier	nr		1031895	0					
ANR	1031988	PrimaryExpression	3		1031895	1					
ANR	1031989	ReturnType	static void		1031895	1					
ANR	1031990	Identifier	fillRegisterValues		1031895	2					
ANR	1031991	ParameterList	RCore * core		1031895	3					
ANR	1031992	Parameter	RCore * core	167:32:2985:2995	1031895	0	True				
ANR	1031993	ParameterType	RCore *		1031895	0					
ANR	1031994	Identifier	core		1031895	1					
ANR	1031995	CFGEntryNode	ENTRY		1031895		True				
ANR	1031996	CFGExitNode	EXIT		1031895		True				
ANR	1031997	Symbol	core		1031895						
ANR	1031998	Symbol	reg_item		1031895						
ANR	1031999	Symbol	nr		1031895						
ANR	1032000	Symbol	iter_reg		1031895						
ANR	1032001	Symbol	core -> dbg -> reg		1031895						
ANR	1032002	Symbol	r_reg_get_list		1031895						
ANR	1032003	Symbol	* core		1031895						
ANR	1032004	Symbol	regs		1031895						
ANR	1032005	Symbol	* core -> dbg		1031895						
ANR	1032006	Symbol	* * core		1031895						
ANR	1032007	Symbol	core -> dbg		1031895						
ANR	1032008	Function	esil_split_flg	188:0:3521:3905							
ANR	1032009	FunctionDef	"esil_split_flg (char * esil_str , char * * esil_main , char * * esil_flg)"		1032008	0					
ANR	1032010	CompoundStatement		188:79:3600:3905	1032008	0					
ANR	1032011	IdentifierDeclStatement	"char * split = strstr ( esil_str , ""f,="" ) ;"	189:1:3603:3641	1032008	0	True				
ANR	1032012	IdentifierDecl	"* split = strstr ( esil_str , ""f,="" )"		1032008	0					
ANR	1032013	IdentifierDeclType	char *		1032008	0					
ANR	1032014	Identifier	split		1032008	1					
ANR	1032015	AssignmentExpression	"* split = strstr ( esil_str , ""f,="" )"		1032008	2		=			
ANR	1032016	Identifier	split		1032008	0					
ANR	1032017	CallExpression	"strstr ( esil_str , ""f,="" )"		1032008	1					
ANR	1032018	Callee	strstr		1032008	0					
ANR	1032019	Identifier	strstr		1032008	0					
ANR	1032020	ArgumentList	esil_str		1032008	1					
ANR	1032021	Argument	esil_str		1032008	0					
ANR	1032022	Identifier	esil_str		1032008	0					
ANR	1032023	Argument	"""f,="""		1032008	1					
ANR	1032024	PrimaryExpression	"""f,="""		1032008	0					
ANR	1032025	IdentifierDeclStatement	const int kCommaHits = 2 ;	190:1:3644:3668	1032008	1	True				
ANR	1032026	IdentifierDecl	kCommaHits = 2		1032008	0					
ANR	1032027	IdentifierDeclType	const int		1032008	0					
ANR	1032028	Identifier	kCommaHits		1032008	1					
ANR	1032029	AssignmentExpression	kCommaHits = 2		1032008	2		=			
ANR	1032030	Identifier	kCommaHits		1032008	0					
ANR	1032031	PrimaryExpression	2		1032008	1					
ANR	1032032	IdentifierDeclStatement	int hits = 0 ;	191:1:3671:3683	1032008	2	True				
ANR	1032033	IdentifierDecl	hits = 0		1032008	0					
ANR	1032034	IdentifierDeclType	int		1032008	0					
ANR	1032035	Identifier	hits		1032008	1					
ANR	1032036	AssignmentExpression	hits = 0		1032008	2		=			
ANR	1032037	Identifier	hits		1032008	0					
ANR	1032038	PrimaryExpression	0		1032008	1					
ANR	1032039	IfStatement	if ( split )		1032008	3					
ANR	1032040	Condition	split	193:5:3691:3695	1032008	0	True				
ANR	1032041	Identifier	split		1032008	0					
ANR	1032042	CompoundStatement		6:12:97:97	1032008	1					
ANR	1032043	WhileStatement	while ( hits != kCommaHits )		1032008	0					
ANR	1032044	Condition	hits != kCommaHits	194:9:3709:3726	1032008	0	True				
ANR	1032045	EqualityExpression	hits != kCommaHits		1032008	0		!=			
ANR	1032046	Identifier	hits		1032008	0					
ANR	1032047	Identifier	kCommaHits		1032008	1					
ANR	1032048	CompoundStatement		7:29:128:128	1032008	1					
ANR	1032049	ExpressionStatement	-- split	195:3:3734:3741	1032008	0	True				
ANR	1032050	UnaryExpression	-- split		1032008	0					
ANR	1032051	IncDec	--		1032008	0					
ANR	1032052	Identifier	split		1032008	1					
ANR	1032053	IfStatement	"if ( * split == ',' )"		1032008	1					
ANR	1032054	Condition	"* split == ','"	196:7:3750:3762	1032008	0	True				
ANR	1032055	EqualityExpression	"* split == ','"		1032008	0		==			
ANR	1032056	UnaryOperationExpression	* split		1032008	0					
ANR	1032057	UnaryOperator	*		1032008	0					
ANR	1032058	Identifier	split		1032008	1					
ANR	1032059	PrimaryExpression	"','"		1032008	1					
ANR	1032060	CompoundStatement		9:22:164:164	1032008	1					
ANR	1032061	ExpressionStatement	hits ++	197:4:3771:3777	1032008	0	True				
ANR	1032062	PostIncDecOperationExpression	hits ++		1032008	0					
ANR	1032063	Identifier	hits		1032008	0					
ANR	1032064	IncDec	++		1032008	1					
ANR	1032065	ExpressionStatement	* esil_flg = strdup ( ++ split )	200:2:3790:3818	1032008	1	True				
ANR	1032066	AssignmentExpression	* esil_flg = strdup ( ++ split )		1032008	0		=			
ANR	1032067	UnaryOperationExpression	* esil_flg		1032008	0					
ANR	1032068	UnaryOperator	*		1032008	0					
ANR	1032069	Identifier	esil_flg		1032008	1					
ANR	1032070	CallExpression	strdup ( ++ split )		1032008	1					
ANR	1032071	Callee	strdup		1032008	0					
ANR	1032072	Identifier	strdup		1032008	0					
ANR	1032073	ArgumentList	++ split		1032008	1					
ANR	1032074	Argument	++ split		1032008	0					
ANR	1032075	UnaryExpression	++ split		1032008	0					
ANR	1032076	IncDec	++		1032008	0					
ANR	1032077	Identifier	split		1032008	1					
ANR	1032078	ExpressionStatement	"* esil_main = r_str_ndup ( esil_str , strlen ( esil_str ) - strlen ( * esil_flg ) - 1 )"	201:2:3822:3900	1032008	2	True				
ANR	1032079	AssignmentExpression	"* esil_main = r_str_ndup ( esil_str , strlen ( esil_str ) - strlen ( * esil_flg ) - 1 )"		1032008	0		=			
ANR	1032080	UnaryOperationExpression	* esil_main		1032008	0					
ANR	1032081	UnaryOperator	*		1032008	0					
ANR	1032082	Identifier	esil_main		1032008	1					
ANR	1032083	CallExpression	"r_str_ndup ( esil_str , strlen ( esil_str ) - strlen ( * esil_flg ) - 1 )"		1032008	1					
ANR	1032084	Callee	r_str_ndup		1032008	0					
ANR	1032085	Identifier	r_str_ndup		1032008	0					
ANR	1032086	ArgumentList	esil_str		1032008	1					
ANR	1032087	Argument	esil_str		1032008	0					
ANR	1032088	Identifier	esil_str		1032008	0					
ANR	1032089	Argument	strlen ( esil_str ) - strlen ( * esil_flg ) - 1		1032008	1					
ANR	1032090	AdditiveExpression	strlen ( esil_str ) - strlen ( * esil_flg ) - 1		1032008	0		-			
ANR	1032091	CallExpression	strlen ( esil_str )		1032008	0					
ANR	1032092	Callee	strlen		1032008	0					
ANR	1032093	Identifier	strlen		1032008	0					
ANR	1032094	ArgumentList	esil_str		1032008	1					
ANR	1032095	Argument	esil_str		1032008	0					
ANR	1032096	Identifier	esil_str		1032008	0					
ANR	1032097	AdditiveExpression	strlen ( * esil_flg ) - 1		1032008	1		-			
ANR	1032098	CallExpression	strlen ( * esil_flg )		1032008	0					
ANR	1032099	Callee	strlen		1032008	0					
ANR	1032100	Identifier	strlen		1032008	0					
ANR	1032101	ArgumentList	* esil_flg		1032008	1					
ANR	1032102	Argument	* esil_flg		1032008	0					
ANR	1032103	UnaryOperationExpression	* esil_flg		1032008	0					
ANR	1032104	UnaryOperator	*		1032008	0					
ANR	1032105	Identifier	esil_flg		1032008	1					
ANR	1032106	PrimaryExpression	1		1032008	1					
ANR	1032107	ReturnType	static void		1032008	1					
ANR	1032108	Identifier	esil_split_flg		1032008	2					
ANR	1032109	ParameterList	"char * esil_str , char * * esil_main , char * * esil_flg"		1032008	3					
ANR	1032110	Parameter	char * esil_str	188:28:3549:3562	1032008	0	True				
ANR	1032111	ParameterType	char *		1032008	0					
ANR	1032112	Identifier	esil_str		1032008	1					
ANR	1032113	Parameter	char * * esil_main	188:44:3565:3580	1032008	1	True				
ANR	1032114	ParameterType	char * *		1032008	0					
ANR	1032115	Identifier	esil_main		1032008	1					
ANR	1032116	Parameter	char * * esil_flg	188:62:3583:3597	1032008	2	True				
ANR	1032117	ParameterType	char * *		1032008	0					
ANR	1032118	Identifier	esil_flg		1032008	1					
ANR	1032119	CFGEntryNode	ENTRY		1032008		True				
ANR	1032120	CFGExitNode	EXIT		1032008		True				
ANR	1032121	Symbol	* esil_flg		1032008						
ANR	1032122	Symbol	r_str_ndup		1032008						
ANR	1032123	Symbol	esil_main		1032008						
ANR	1032124	Symbol	esil_str		1032008						
ANR	1032125	Symbol	* split		1032008						
ANR	1032126	Symbol	hits		1032008						
ANR	1032127	Symbol	* esil_main		1032008						
ANR	1032128	Symbol	strlen		1032008						
ANR	1032129	Symbol	split		1032008						
ANR	1032130	Symbol	kCommaHits		1032008						
ANR	1032131	Symbol	strstr		1032008						
ANR	1032132	Symbol	strdup		1032008						
ANR	1032133	Symbol	esil_flg		1032008						
ANR	1032134	Function	rop_classify_constant	225:0:4345:7074							
ANR	1032135	FunctionDef	"rop_classify_constant (RCore * core , RList * ropList)"		1032134	0					
ANR	1032136	CompoundStatement		225:64:4409:7074	1032134	0					
ANR	1032137	IdentifierDeclStatement	"char * esil_str , * constant ;"	226:1:4412:4437	1032134	0	True				
ANR	1032138	IdentifierDecl	* esil_str		1032134	0					
ANR	1032139	IdentifierDeclType	char *		1032134	0					
ANR	1032140	Identifier	esil_str		1032134	1					
ANR	1032141	IdentifierDecl	* constant		1032134	1					
ANR	1032142	IdentifierDeclType	char *		1032134	0					
ANR	1032143	Identifier	constant		1032134	1					
ANR	1032144	IdentifierDeclStatement	"char * ct = NULL , * esil_main = NULL , * esil_flg = NULL , * out = NULL ;"	227:1:4440:4505	1032134	1	True				
ANR	1032145	IdentifierDecl	* ct = NULL		1032134	0					
ANR	1032146	IdentifierDeclType	char *		1032134	0					
ANR	1032147	Identifier	ct		1032134	1					
ANR	1032148	AssignmentExpression	* ct = NULL		1032134	2		=			
ANR	1032149	Identifier	NULL		1032134	0					
ANR	1032150	Identifier	NULL		1032134	1					
ANR	1032151	IdentifierDecl	* esil_main = NULL		1032134	1					
ANR	1032152	IdentifierDeclType	char *		1032134	0					
ANR	1032153	Identifier	esil_main		1032134	1					
ANR	1032154	AssignmentExpression	* esil_main = NULL		1032134	2		=			
ANR	1032155	Identifier	NULL		1032134	0					
ANR	1032156	Identifier	NULL		1032134	1					
ANR	1032157	IdentifierDecl	* esil_flg = NULL		1032134	2					
ANR	1032158	IdentifierDeclType	char *		1032134	0					
ANR	1032159	Identifier	esil_flg		1032134	1					
ANR	1032160	AssignmentExpression	* esil_flg = NULL		1032134	2		=			
ANR	1032161	Identifier	NULL		1032134	0					
ANR	1032162	Identifier	NULL		1032134	1					
ANR	1032163	IdentifierDecl	* out = NULL		1032134	3					
ANR	1032164	IdentifierDeclType	char *		1032134	0					
ANR	1032165	Identifier	out		1032134	1					
ANR	1032166	AssignmentExpression	* out = NULL		1032134	2		=			
ANR	1032167	Identifier	NULL		1032134	0					
ANR	1032168	Identifier	NULL		1032134	1					
ANR	1032169	IdentifierDeclStatement	"RListIter * iter_r , * iter_dst , * iter_const ;"	228:1:4508:4549	1032134	2	True				
ANR	1032170	IdentifierDecl	* iter_r		1032134	0					
ANR	1032171	IdentifierDeclType	RListIter *		1032134	0					
ANR	1032172	Identifier	iter_r		1032134	1					
ANR	1032173	IdentifierDecl	* iter_dst		1032134	1					
ANR	1032174	IdentifierDeclType	RListIter *		1032134	0					
ANR	1032175	Identifier	iter_dst		1032134	1					
ANR	1032176	IdentifierDecl	* iter_const		1032134	2					
ANR	1032177	IdentifierDeclType	RListIter *		1032134	0					
ANR	1032178	Identifier	iter_const		1032134	1					
ANR	1032179	IdentifierDeclStatement	RRegItem * item_dst ;	229:1:4552:4570	1032134	3	True				
ANR	1032180	IdentifierDecl	* item_dst		1032134	0					
ANR	1032181	IdentifierDeclType	RRegItem *		1032134	0					
ANR	1032182	Identifier	item_dst		1032134	1					
ANR	1032183	IdentifierDeclStatement	"RList * head , * constants ;"	230:1:4573:4596	1032134	4	True				
ANR	1032184	IdentifierDecl	* head		1032134	0					
ANR	1032185	IdentifierDeclType	RList *		1032134	0					
ANR	1032186	Identifier	head		1032134	1					
ANR	1032187	IdentifierDecl	* constants		1032134	1					
ANR	1032188	IdentifierDeclType	RList *		1032134	0					
ANR	1032189	Identifier	constants		1032134	1					
ANR	1032190	IdentifierDeclStatement	"RList * ops_list = NULL , * flg_read = NULL , * flg_write = NULL , * reg_read = NULL , * reg_write = NULL , * mem_read = NULL , * mem_write = NULL ;"	231:1:4599:4746	1032134	5	True				
ANR	1032191	IdentifierDecl	* ops_list = NULL		1032134	0					
ANR	1032192	IdentifierDeclType	RList *		1032134	0					
ANR	1032193	Identifier	ops_list		1032134	1					
ANR	1032194	AssignmentExpression	* ops_list = NULL		1032134	2		=			
ANR	1032195	Identifier	NULL		1032134	0					
ANR	1032196	Identifier	NULL		1032134	1					
ANR	1032197	IdentifierDecl	* flg_read = NULL		1032134	1					
ANR	1032198	IdentifierDeclType	RList *		1032134	0					
ANR	1032199	Identifier	flg_read		1032134	1					
ANR	1032200	AssignmentExpression	* flg_read = NULL		1032134	2		=			
ANR	1032201	Identifier	NULL		1032134	0					
ANR	1032202	Identifier	NULL		1032134	1					
ANR	1032203	IdentifierDecl	* flg_write = NULL		1032134	2					
ANR	1032204	IdentifierDeclType	RList *		1032134	0					
ANR	1032205	Identifier	flg_write		1032134	1					
ANR	1032206	AssignmentExpression	* flg_write = NULL		1032134	2		=			
ANR	1032207	Identifier	NULL		1032134	0					
ANR	1032208	Identifier	NULL		1032134	1					
ANR	1032209	IdentifierDecl	* reg_read = NULL		1032134	3					
ANR	1032210	IdentifierDeclType	RList *		1032134	0					
ANR	1032211	Identifier	reg_read		1032134	1					
ANR	1032212	AssignmentExpression	* reg_read = NULL		1032134	2		=			
ANR	1032213	Identifier	NULL		1032134	0					
ANR	1032214	Identifier	NULL		1032134	1					
ANR	1032215	IdentifierDecl	* reg_write = NULL		1032134	4					
ANR	1032216	IdentifierDeclType	RList *		1032134	0					
ANR	1032217	Identifier	reg_write		1032134	1					
ANR	1032218	AssignmentExpression	* reg_write = NULL		1032134	2		=			
ANR	1032219	Identifier	NULL		1032134	0					
ANR	1032220	Identifier	NULL		1032134	1					
ANR	1032221	IdentifierDecl	* mem_read = NULL		1032134	5					
ANR	1032222	IdentifierDeclType	RList *		1032134	0					
ANR	1032223	Identifier	mem_read		1032134	1					
ANR	1032224	AssignmentExpression	* mem_read = NULL		1032134	2		=			
ANR	1032225	Identifier	NULL		1032134	0					
ANR	1032226	Identifier	NULL		1032134	1					
ANR	1032227	IdentifierDecl	* mem_write = NULL		1032134	6					
ANR	1032228	IdentifierDeclType	RList *		1032134	0					
ANR	1032229	Identifier	mem_write		1032134	1					
ANR	1032230	AssignmentExpression	* mem_write = NULL		1032134	2		=			
ANR	1032231	Identifier	NULL		1032134	0					
ANR	1032232	Identifier	NULL		1032134	1					
ANR	1032233	IdentifierDeclStatement	"const bool romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	234:1:4749:4811	1032134	6	True				
ANR	1032234	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1032134	0					
ANR	1032235	IdentifierDeclType	const bool		1032134	0					
ANR	1032236	Identifier	romem		1032134	1					
ANR	1032237	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1032134	2		=			
ANR	1032238	Identifier	romem		1032134	0					
ANR	1032239	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		1032134	1					
ANR	1032240	Callee	r_config_get_i		1032134	0					
ANR	1032241	Identifier	r_config_get_i		1032134	0					
ANR	1032242	ArgumentList	core -> config		1032134	1					
ANR	1032243	Argument	core -> config		1032134	0					
ANR	1032244	PtrMemberAccess	core -> config		1032134	0					
ANR	1032245	Identifier	core		1032134	0					
ANR	1032246	Identifier	config		1032134	1					
ANR	1032247	Argument	"""esil.romem"""		1032134	1					
ANR	1032248	PrimaryExpression	"""esil.romem"""		1032134	0					
ANR	1032249	IdentifierDeclStatement	"const bool stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	235:1:4814:4876	1032134	7	True				
ANR	1032250	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1032134	0					
ANR	1032251	IdentifierDeclType	const bool		1032134	0					
ANR	1032252	Identifier	stats		1032134	1					
ANR	1032253	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1032134	2		=			
ANR	1032254	Identifier	stats		1032134	0					
ANR	1032255	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		1032134	1					
ANR	1032256	Callee	r_config_get_i		1032134	0					
ANR	1032257	Identifier	r_config_get_i		1032134	0					
ANR	1032258	ArgumentList	core -> config		1032134	1					
ANR	1032259	Argument	core -> config		1032134	0					
ANR	1032260	PtrMemberAccess	core -> config		1032134	0					
ANR	1032261	Identifier	core		1032134	0					
ANR	1032262	Identifier	config		1032134	1					
ANR	1032263	Argument	"""esil.stats"""		1032134	1					
ANR	1032264	PrimaryExpression	"""esil.stats"""		1032134	0					
ANR	1032265	IfStatement	if ( ! romem || ! stats )		1032134	8					
ANR	1032266	Condition	! romem || ! stats	237:5:4884:4899	1032134	0	True				
ANR	1032267	OrExpression	! romem || ! stats		1032134	0		||			
ANR	1032268	UnaryOperationExpression	! romem		1032134	0					
ANR	1032269	UnaryOperator	!		1032134	0					
ANR	1032270	Identifier	romem		1032134	1					
ANR	1032271	UnaryOperationExpression	! stats		1032134	1					
ANR	1032272	UnaryOperator	!		1032134	0					
ANR	1032273	Identifier	stats		1032134	1					
ANR	1032274	CompoundStatement		13:23:492:492	1032134	1					
ANR	1032275	ReturnStatement	return NULL ;	239:2:4974:4985	1032134	0	True				
ANR	1032276	Identifier	NULL		1032134	0					
ANR	1032277	Statement	r_list_foreach	242:1:4992:5005	1032134	9	True				
ANR	1032278	Statement	(	242:16:5007:5007	1032134	10	True				
ANR	1032279	Statement	ropList	242:17:5008:5014	1032134	11	True				
ANR	1032280	Statement	","	242:24:5015:5015	1032134	12	True				
ANR	1032281	Statement	iter_r	242:26:5017:5022	1032134	13	True				
ANR	1032282	Statement	","	242:32:5023:5023	1032134	14	True				
ANR	1032283	Statement	esil_str	242:34:5025:5032	1032134	15	True				
ANR	1032284	Statement	)	242:42:5033:5033	1032134	16	True				
ANR	1032285	CompoundStatement		18:44:625:625	1032134	17					
ANR	1032286	ExpressionStatement	constants = get_constants ( esil_str )	243:2:5039:5075	1032134	0	True				
ANR	1032287	AssignmentExpression	constants = get_constants ( esil_str )		1032134	0		=			
ANR	1032288	Identifier	constants		1032134	0					
ANR	1032289	CallExpression	get_constants ( esil_str )		1032134	1					
ANR	1032290	Callee	get_constants		1032134	0					
ANR	1032291	Identifier	get_constants		1032134	0					
ANR	1032292	ArgumentList	esil_str		1032134	1					
ANR	1032293	Argument	esil_str		1032134	0					
ANR	1032294	Identifier	esil_str		1032134	0					
ANR	1032295	IfStatement	if ( r_list_empty ( constants ) )		1032134	1					
ANR	1032296	Condition	r_list_empty ( constants )	245:6:5142:5165	1032134	0	True				
ANR	1032297	CallExpression	r_list_empty ( constants )		1032134	0					
ANR	1032298	Callee	r_list_empty		1032134	0					
ANR	1032299	Identifier	r_list_empty		1032134	0					
ANR	1032300	ArgumentList	constants		1032134	1					
ANR	1032301	Argument	constants		1032134	0					
ANR	1032302	Identifier	constants		1032134	0					
ANR	1032303	CompoundStatement		21:32:758:758	1032134	1					
ANR	1032304	ContinueStatement	continue ;	246:3:5173:5181	1032134	0	True				
ANR	1032305	ExpressionStatement	fillRegisterValues ( core )	249:2:5222:5247	1032134	2	True				
ANR	1032306	CallExpression	fillRegisterValues ( core )		1032134	0					
ANR	1032307	Callee	fillRegisterValues		1032134	0					
ANR	1032308	Identifier	fillRegisterValues		1032134	0					
ANR	1032309	ArgumentList	core		1032134	1					
ANR	1032310	Argument	core		1032134	0					
ANR	1032311	Identifier	core		1032134	0					
ANR	1032312	ExpressionStatement	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"	250:2:5251:5292	1032134	3	True				
ANR	1032313	AssignmentExpression	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"		1032134	0		=			
ANR	1032314	Identifier	head		1032134	0					
ANR	1032315	CallExpression	"r_reg_get_list ( core -> dbg -> reg , 0 )"		1032134	1					
ANR	1032316	Callee	r_reg_get_list		1032134	0					
ANR	1032317	Identifier	r_reg_get_list		1032134	0					
ANR	1032318	ArgumentList	core -> dbg -> reg		1032134	1					
ANR	1032319	Argument	core -> dbg -> reg		1032134	0					
ANR	1032320	PtrMemberAccess	core -> dbg -> reg		1032134	0					
ANR	1032321	PtrMemberAccess	core -> dbg		1032134	0					
ANR	1032322	Identifier	core		1032134	0					
ANR	1032323	Identifier	dbg		1032134	1					
ANR	1032324	Identifier	reg		1032134	1					
ANR	1032325	Argument	0		1032134	1					
ANR	1032326	PrimaryExpression	0		1032134	0					
ANR	1032327	IfStatement	if ( ! head )		1032134	4					
ANR	1032328	Condition	! head	251:6:5300:5304	1032134	0	True				
ANR	1032329	UnaryOperationExpression	! head		1032134	0					
ANR	1032330	UnaryOperator	!		1032134	0					
ANR	1032331	Identifier	head		1032134	1					
ANR	1032332	CompoundStatement		27:13:897:897	1032134	1					
ANR	1032333	ExpressionStatement	ct = NULL	252:3:5312:5321	1032134	0	True				
ANR	1032334	AssignmentExpression	ct = NULL		1032134	0		=			
ANR	1032335	Identifier	ct		1032134	0					
ANR	1032336	Identifier	NULL		1032134	1					
ANR	1032337	GotoStatement	goto continue_error ;	253:3:5326:5345	1032134	1	True				
ANR	1032338	Identifier	continue_error		1032134	0					
ANR	1032339	ExpressionStatement	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"	255:2:5353:5401	1032134	5	True				
ANR	1032340	CallExpression	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"		1032134	0					
ANR	1032341	Callee	esil_split_flg		1032134	0					
ANR	1032342	Identifier	esil_split_flg		1032134	0					
ANR	1032343	ArgumentList	esil_str		1032134	1					
ANR	1032344	Argument	esil_str		1032134	0					
ANR	1032345	Identifier	esil_str		1032134	0					
ANR	1032346	Argument	& esil_main		1032134	1					
ANR	1032347	UnaryOperationExpression	& esil_main		1032134	0					
ANR	1032348	UnaryOperator	&		1032134	0					
ANR	1032349	Identifier	esil_main		1032134	1					
ANR	1032350	Argument	& esil_flg		1032134	2					
ANR	1032351	UnaryOperationExpression	& esil_flg		1032134	0					
ANR	1032352	UnaryOperator	&		1032134	0					
ANR	1032353	Identifier	esil_flg		1032134	1					
ANR	1032354	ExpressionStatement	"cmd_anal_esil ( core , esil_main ? esil_main : esil_str )"	256:2:5405:5457	1032134	6	True				
ANR	1032355	CallExpression	"cmd_anal_esil ( core , esil_main ? esil_main : esil_str )"		1032134	0					
ANR	1032356	Callee	cmd_anal_esil		1032134	0					
ANR	1032357	Identifier	cmd_anal_esil		1032134	0					
ANR	1032358	ArgumentList	core		1032134	1					
ANR	1032359	Argument	core		1032134	0					
ANR	1032360	Identifier	core		1032134	0					
ANR	1032361	Argument	esil_main ? esil_main : esil_str		1032134	1					
ANR	1032362	ConditionalExpression	esil_main ? esil_main : esil_str		1032134	0					
ANR	1032363	Condition	esil_main		1032134	0					
ANR	1032364	Identifier	esil_main		1032134	0					
ANR	1032365	Identifier	esil_main		1032134	1					
ANR	1032366	Identifier	esil_str		1032134	2					
ANR	1032367	ExpressionStatement	"out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"	257:2:5461:5517	1032134	7	True				
ANR	1032368	AssignmentExpression	"out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1032134	0		=			
ANR	1032369	Identifier	out		1032134	0					
ANR	1032370	CallExpression	"sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1032134	1					
ANR	1032371	Callee	sdb_querys		1032134	0					
ANR	1032372	Identifier	sdb_querys		1032134	0					
ANR	1032373	ArgumentList	core -> anal -> esil -> stats		1032134	1					
ANR	1032374	Argument	core -> anal -> esil -> stats		1032134	0					
ANR	1032375	PtrMemberAccess	core -> anal -> esil -> stats		1032134	0					
ANR	1032376	PtrMemberAccess	core -> anal -> esil		1032134	0					
ANR	1032377	PtrMemberAccess	core -> anal		1032134	0					
ANR	1032378	Identifier	core		1032134	0					
ANR	1032379	Identifier	anal		1032134	1					
ANR	1032380	Identifier	esil		1032134	1					
ANR	1032381	Identifier	stats		1032134	1					
ANR	1032382	Argument	NULL		1032134	1					
ANR	1032383	Identifier	NULL		1032134	0					
ANR	1032384	Argument	0		1032134	2					
ANR	1032385	PrimaryExpression	0		1032134	0					
ANR	1032386	Argument	"""*"""		1032134	3					
ANR	1032387	PrimaryExpression	"""*"""		1032134	0					
ANR	1032388	IfStatement	if ( ! out )		1032134	8					
ANR	1032389	Condition	! out	258:6:5525:5528	1032134	0	True				
ANR	1032390	UnaryOperationExpression	! out		1032134	0					
ANR	1032391	UnaryOperator	!		1032134	0					
ANR	1032392	Identifier	out		1032134	1					
ANR	1032393	CompoundStatement		34:12:1121:1121	1032134	1					
ANR	1032394	GotoStatement	goto continue_error ;	259:3:5536:5555	1032134	0	True				
ANR	1032395	Identifier	continue_error		1032134	0					
ANR	1032396	ExpressionStatement	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"	261:2:5563:5612	1032134	9	True				
ANR	1032397	AssignmentExpression	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"		1032134	0		=			
ANR	1032398	Identifier	ops_list		1032134	0					
ANR	1032399	CallExpression	"parse_list ( strstr ( out , ""ops.list"" ) )"		1032134	1					
ANR	1032400	Callee	parse_list		1032134	0					
ANR	1032401	Identifier	parse_list		1032134	0					
ANR	1032402	ArgumentList	"strstr ( out , ""ops.list"" )"		1032134	1					
ANR	1032403	Argument	"strstr ( out , ""ops.list"" )"		1032134	0					
ANR	1032404	CallExpression	"strstr ( out , ""ops.list"" )"		1032134	0					
ANR	1032405	Callee	strstr		1032134	0					
ANR	1032406	Identifier	strstr		1032134	0					
ANR	1032407	ArgumentList	out		1032134	1					
ANR	1032408	Argument	out		1032134	0					
ANR	1032409	Identifier	out		1032134	0					
ANR	1032410	Argument	"""ops.list"""		1032134	1					
ANR	1032411	PrimaryExpression	"""ops.list"""		1032134	0					
ANR	1032412	ExpressionStatement	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"	262:2:5616:5665	1032134	10	True				
ANR	1032413	AssignmentExpression	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"		1032134	0		=			
ANR	1032414	Identifier	flg_read		1032134	0					
ANR	1032415	CallExpression	"parse_list ( strstr ( out , ""flg.read"" ) )"		1032134	1					
ANR	1032416	Callee	parse_list		1032134	0					
ANR	1032417	Identifier	parse_list		1032134	0					
ANR	1032418	ArgumentList	"strstr ( out , ""flg.read"" )"		1032134	1					
ANR	1032419	Argument	"strstr ( out , ""flg.read"" )"		1032134	0					
ANR	1032420	CallExpression	"strstr ( out , ""flg.read"" )"		1032134	0					
ANR	1032421	Callee	strstr		1032134	0					
ANR	1032422	Identifier	strstr		1032134	0					
ANR	1032423	ArgumentList	out		1032134	1					
ANR	1032424	Argument	out		1032134	0					
ANR	1032425	Identifier	out		1032134	0					
ANR	1032426	Argument	"""flg.read"""		1032134	1					
ANR	1032427	PrimaryExpression	"""flg.read"""		1032134	0					
ANR	1032428	ExpressionStatement	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"	263:2:5669:5719	1032134	11	True				
ANR	1032429	AssignmentExpression	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"		1032134	0		=			
ANR	1032430	Identifier	flg_write		1032134	0					
ANR	1032431	CallExpression	"parse_list ( strstr ( out , ""flg.write"" ) )"		1032134	1					
ANR	1032432	Callee	parse_list		1032134	0					
ANR	1032433	Identifier	parse_list		1032134	0					
ANR	1032434	ArgumentList	"strstr ( out , ""flg.write"" )"		1032134	1					
ANR	1032435	Argument	"strstr ( out , ""flg.write"" )"		1032134	0					
ANR	1032436	CallExpression	"strstr ( out , ""flg.write"" )"		1032134	0					
ANR	1032437	Callee	strstr		1032134	0					
ANR	1032438	Identifier	strstr		1032134	0					
ANR	1032439	ArgumentList	out		1032134	1					
ANR	1032440	Argument	out		1032134	0					
ANR	1032441	Identifier	out		1032134	0					
ANR	1032442	Argument	"""flg.write"""		1032134	1					
ANR	1032443	PrimaryExpression	"""flg.write"""		1032134	0					
ANR	1032444	ExpressionStatement	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"	264:2:5723:5772	1032134	12	True				
ANR	1032445	AssignmentExpression	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"		1032134	0		=			
ANR	1032446	Identifier	reg_read		1032134	0					
ANR	1032447	CallExpression	"parse_list ( strstr ( out , ""reg.read"" ) )"		1032134	1					
ANR	1032448	Callee	parse_list		1032134	0					
ANR	1032449	Identifier	parse_list		1032134	0					
ANR	1032450	ArgumentList	"strstr ( out , ""reg.read"" )"		1032134	1					
ANR	1032451	Argument	"strstr ( out , ""reg.read"" )"		1032134	0					
ANR	1032452	CallExpression	"strstr ( out , ""reg.read"" )"		1032134	0					
ANR	1032453	Callee	strstr		1032134	0					
ANR	1032454	Identifier	strstr		1032134	0					
ANR	1032455	ArgumentList	out		1032134	1					
ANR	1032456	Argument	out		1032134	0					
ANR	1032457	Identifier	out		1032134	0					
ANR	1032458	Argument	"""reg.read"""		1032134	1					
ANR	1032459	PrimaryExpression	"""reg.read"""		1032134	0					
ANR	1032460	ExpressionStatement	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"	265:2:5776:5826	1032134	13	True				
ANR	1032461	AssignmentExpression	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"		1032134	0		=			
ANR	1032462	Identifier	reg_write		1032134	0					
ANR	1032463	CallExpression	"parse_list ( strstr ( out , ""reg.write"" ) )"		1032134	1					
ANR	1032464	Callee	parse_list		1032134	0					
ANR	1032465	Identifier	parse_list		1032134	0					
ANR	1032466	ArgumentList	"strstr ( out , ""reg.write"" )"		1032134	1					
ANR	1032467	Argument	"strstr ( out , ""reg.write"" )"		1032134	0					
ANR	1032468	CallExpression	"strstr ( out , ""reg.write"" )"		1032134	0					
ANR	1032469	Callee	strstr		1032134	0					
ANR	1032470	Identifier	strstr		1032134	0					
ANR	1032471	ArgumentList	out		1032134	1					
ANR	1032472	Argument	out		1032134	0					
ANR	1032473	Identifier	out		1032134	0					
ANR	1032474	Argument	"""reg.write"""		1032134	1					
ANR	1032475	PrimaryExpression	"""reg.write"""		1032134	0					
ANR	1032476	ExpressionStatement	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"	266:2:5830:5879	1032134	14	True				
ANR	1032477	AssignmentExpression	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"		1032134	0		=			
ANR	1032478	Identifier	mem_read		1032134	0					
ANR	1032479	CallExpression	"parse_list ( strstr ( out , ""mem.read"" ) )"		1032134	1					
ANR	1032480	Callee	parse_list		1032134	0					
ANR	1032481	Identifier	parse_list		1032134	0					
ANR	1032482	ArgumentList	"strstr ( out , ""mem.read"" )"		1032134	1					
ANR	1032483	Argument	"strstr ( out , ""mem.read"" )"		1032134	0					
ANR	1032484	CallExpression	"strstr ( out , ""mem.read"" )"		1032134	0					
ANR	1032485	Callee	strstr		1032134	0					
ANR	1032486	Identifier	strstr		1032134	0					
ANR	1032487	ArgumentList	out		1032134	1					
ANR	1032488	Argument	out		1032134	0					
ANR	1032489	Identifier	out		1032134	0					
ANR	1032490	Argument	"""mem.read"""		1032134	1					
ANR	1032491	PrimaryExpression	"""mem.read"""		1032134	0					
ANR	1032492	ExpressionStatement	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"	267:2:5883:5933	1032134	15	True				
ANR	1032493	AssignmentExpression	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"		1032134	0		=			
ANR	1032494	Identifier	mem_write		1032134	0					
ANR	1032495	CallExpression	"parse_list ( strstr ( out , ""mem.write"" ) )"		1032134	1					
ANR	1032496	Callee	parse_list		1032134	0					
ANR	1032497	Identifier	parse_list		1032134	0					
ANR	1032498	ArgumentList	"strstr ( out , ""mem.write"" )"		1032134	1					
ANR	1032499	Argument	"strstr ( out , ""mem.write"" )"		1032134	0					
ANR	1032500	CallExpression	"strstr ( out , ""mem.write"" )"		1032134	0					
ANR	1032501	Callee	strstr		1032134	0					
ANR	1032502	Identifier	strstr		1032134	0					
ANR	1032503	ArgumentList	out		1032134	1					
ANR	1032504	Argument	out		1032134	0					
ANR	1032505	Identifier	out		1032134	0					
ANR	1032506	Argument	"""mem.write"""		1032134	1					
ANR	1032507	PrimaryExpression	"""mem.write"""		1032134	0					
ANR	1032508	IfStatement	"if ( ! r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp ) )"		1032134	16					
ANR	1032509	Condition	"! r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp )"	268:6:5941:5993	1032134	0	True				
ANR	1032510	UnaryOperationExpression	"! r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp )"		1032134	0					
ANR	1032511	UnaryOperator	!		1032134	0					
ANR	1032512	CallExpression	"r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp )"		1032134	1					
ANR	1032513	Callee	r_list_find		1032134	0					
ANR	1032514	Identifier	r_list_find		1032134	0					
ANR	1032515	ArgumentList	ops_list		1032134	1					
ANR	1032516	Argument	ops_list		1032134	0					
ANR	1032517	Identifier	ops_list		1032134	0					
ANR	1032518	Argument	"""="""		1032134	1					
ANR	1032519	PrimaryExpression	"""="""		1032134	0					
ANR	1032520	Argument	( RListComparator ) strcmp		1032134	2					
ANR	1032521	CastExpression	( RListComparator ) strcmp		1032134	0					
ANR	1032522	CastTarget	RListComparator		1032134	0					
ANR	1032523	Identifier	strcmp		1032134	1					
ANR	1032524	CompoundStatement		44:61:1586:1586	1032134	1					
ANR	1032525	GotoStatement	goto continue_error ;	269:3:6001:6020	1032134	0	True				
ANR	1032526	Identifier	continue_error		1032134	0					
ANR	1032527	ExpressionStatement	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"	271:2:6028:6069	1032134	17	True				
ANR	1032528	AssignmentExpression	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"		1032134	0		=			
ANR	1032529	Identifier	head		1032134	0					
ANR	1032530	CallExpression	"r_reg_get_list ( core -> dbg -> reg , 0 )"		1032134	1					
ANR	1032531	Callee	r_reg_get_list		1032134	0					
ANR	1032532	Identifier	r_reg_get_list		1032134	0					
ANR	1032533	ArgumentList	core -> dbg -> reg		1032134	1					
ANR	1032534	Argument	core -> dbg -> reg		1032134	0					
ANR	1032535	PtrMemberAccess	core -> dbg -> reg		1032134	0					
ANR	1032536	PtrMemberAccess	core -> dbg		1032134	0					
ANR	1032537	Identifier	core		1032134	0					
ANR	1032538	Identifier	dbg		1032134	1					
ANR	1032539	Identifier	reg		1032134	1					
ANR	1032540	Argument	0		1032134	1					
ANR	1032541	PrimaryExpression	0		1032134	0					
ANR	1032542	IfStatement	if ( ! head )		1032134	18					
ANR	1032543	Condition	! head	272:6:6077:6081	1032134	0	True				
ANR	1032544	UnaryOperationExpression	! head		1032134	0					
ANR	1032545	UnaryOperator	!		1032134	0					
ANR	1032546	Identifier	head		1032134	1					
ANR	1032547	CompoundStatement		48:13:1674:1674	1032134	1					
ANR	1032548	GotoStatement	goto out_error ;	273:3:6089:6103	1032134	0	True				
ANR	1032549	Identifier	out_error		1032134	0					
ANR	1032550	Statement	r_list_foreach	275:2:6111:6124	1032134	19	True				
ANR	1032551	Statement	(	275:17:6126:6126	1032134	20	True				
ANR	1032552	Statement	head	275:18:6127:6130	1032134	21	True				
ANR	1032553	Statement	","	275:22:6131:6131	1032134	22	True				
ANR	1032554	Statement	iter_dst	275:24:6133:6140	1032134	23	True				
ANR	1032555	Statement	","	275:32:6141:6141	1032134	24	True				
ANR	1032556	Statement	item_dst	275:34:6143:6150	1032134	25	True				
ANR	1032557	Statement	)	275:42:6151:6151	1032134	26	True				
ANR	1032558	CompoundStatement		52:3:1748:1772	1032134	27					
ANR	1032559	IdentifierDeclStatement	"ut64 diff_dst , value_dst ;"	276:3:6158:6182	1032134	0	True				
ANR	1032560	IdentifierDecl	diff_dst		1032134	0					
ANR	1032561	IdentifierDeclType	ut64		1032134	0					
ANR	1032562	Identifier	diff_dst		1032134	1					
ANR	1032563	IdentifierDecl	value_dst		1032134	1					
ANR	1032564	IdentifierDeclType	ut64		1032134	0					
ANR	1032565	Identifier	value_dst		1032134	1					
ANR	1032566	IfStatement	"if ( ! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp ) )"		1032134	1					
ANR	1032567	Condition	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"	277:7:6191:6262	1032134	0	True				
ANR	1032568	UnaryOperationExpression	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1032134	0					
ANR	1032569	UnaryOperator	!		1032134	0					
ANR	1032570	CallExpression	"r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1032134	1					
ANR	1032571	Callee	r_list_find		1032134	0					
ANR	1032572	Identifier	r_list_find		1032134	0					
ANR	1032573	ArgumentList	reg_write		1032134	1					
ANR	1032574	Argument	reg_write		1032134	0					
ANR	1032575	Identifier	reg_write		1032134	0					
ANR	1032576	Argument	item_dst -> name		1032134	1					
ANR	1032577	PtrMemberAccess	item_dst -> name		1032134	0					
ANR	1032578	Identifier	item_dst		1032134	0					
ANR	1032579	Identifier	name		1032134	1					
ANR	1032580	Argument	( RListComparator ) strcmp		1032134	2					
ANR	1032581	CastExpression	( RListComparator ) strcmp		1032134	0					
ANR	1032582	CastTarget	RListComparator		1032134	0					
ANR	1032583	Identifier	strcmp		1032134	1					
ANR	1032584	CompoundStatement		54:33:1855:1855	1032134	1					
ANR	1032585	ContinueStatement	continue ;	279:4:6271:6279	1032134	0	True				
ANR	1032586	ExpressionStatement	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"	282:3:6290:6344	1032134	2	True				
ANR	1032587	AssignmentExpression	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032134	0		=			
ANR	1032588	Identifier	value_dst		1032134	0					
ANR	1032589	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032134	1					
ANR	1032590	Callee	r_reg_get_value		1032134	0					
ANR	1032591	Identifier	r_reg_get_value		1032134	0					
ANR	1032592	ArgumentList	core -> dbg -> reg		1032134	1					
ANR	1032593	Argument	core -> dbg -> reg		1032134	0					
ANR	1032594	PtrMemberAccess	core -> dbg -> reg		1032134	0					
ANR	1032595	PtrMemberAccess	core -> dbg		1032134	0					
ANR	1032596	Identifier	core		1032134	0					
ANR	1032597	Identifier	dbg		1032134	1					
ANR	1032598	Identifier	reg		1032134	1					
ANR	1032599	Argument	item_dst		1032134	1					
ANR	1032600	Identifier	item_dst		1032134	0					
ANR	1032601	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	283:3:6349:6389	1032134	3	True				
ANR	1032602	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1032134	0					
ANR	1032603	Callee	r_reg_arena_swap		1032134	0					
ANR	1032604	Identifier	r_reg_arena_swap		1032134	0					
ANR	1032605	ArgumentList	core -> dbg -> reg		1032134	1					
ANR	1032606	Argument	core -> dbg -> reg		1032134	0					
ANR	1032607	PtrMemberAccess	core -> dbg -> reg		1032134	0					
ANR	1032608	PtrMemberAccess	core -> dbg		1032134	0					
ANR	1032609	Identifier	core		1032134	0					
ANR	1032610	Identifier	dbg		1032134	1					
ANR	1032611	Identifier	reg		1032134	1					
ANR	1032612	Argument	false		1032134	1					
ANR	1032613	Identifier	false		1032134	0					
ANR	1032614	ExpressionStatement	"diff_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"	284:3:6394:6447	1032134	4	True				
ANR	1032615	AssignmentExpression	"diff_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032134	0		=			
ANR	1032616	Identifier	diff_dst		1032134	0					
ANR	1032617	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032134	1					
ANR	1032618	Callee	r_reg_get_value		1032134	0					
ANR	1032619	Identifier	r_reg_get_value		1032134	0					
ANR	1032620	ArgumentList	core -> dbg -> reg		1032134	1					
ANR	1032621	Argument	core -> dbg -> reg		1032134	0					
ANR	1032622	PtrMemberAccess	core -> dbg -> reg		1032134	0					
ANR	1032623	PtrMemberAccess	core -> dbg		1032134	0					
ANR	1032624	Identifier	core		1032134	0					
ANR	1032625	Identifier	dbg		1032134	1					
ANR	1032626	Identifier	reg		1032134	1					
ANR	1032627	Argument	item_dst		1032134	1					
ANR	1032628	Identifier	item_dst		1032134	0					
ANR	1032629	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	285:3:6452:6492	1032134	5	True				
ANR	1032630	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1032134	0					
ANR	1032631	Callee	r_reg_arena_swap		1032134	0					
ANR	1032632	Identifier	r_reg_arena_swap		1032134	0					
ANR	1032633	ArgumentList	core -> dbg -> reg		1032134	1					
ANR	1032634	Argument	core -> dbg -> reg		1032134	0					
ANR	1032635	PtrMemberAccess	core -> dbg -> reg		1032134	0					
ANR	1032636	PtrMemberAccess	core -> dbg		1032134	0					
ANR	1032637	Identifier	core		1032134	0					
ANR	1032638	Identifier	dbg		1032134	1					
ANR	1032639	Identifier	reg		1032134	1					
ANR	1032640	Argument	false		1032134	1					
ANR	1032641	Identifier	false		1032134	0					
ANR	1032642	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , item_dst , diff_dst )"	287:3:6524:6576	1032134	6	True				
ANR	1032643	CallExpression	"r_reg_set_value ( core -> dbg -> reg , item_dst , diff_dst )"		1032134	0					
ANR	1032644	Callee	r_reg_set_value		1032134	0					
ANR	1032645	Identifier	r_reg_set_value		1032134	0					
ANR	1032646	ArgumentList	core -> dbg -> reg		1032134	1					
ANR	1032647	Argument	core -> dbg -> reg		1032134	0					
ANR	1032648	PtrMemberAccess	core -> dbg -> reg		1032134	0					
ANR	1032649	PtrMemberAccess	core -> dbg		1032134	0					
ANR	1032650	Identifier	core		1032134	0					
ANR	1032651	Identifier	dbg		1032134	1					
ANR	1032652	Identifier	reg		1032134	1					
ANR	1032653	Argument	item_dst		1032134	1					
ANR	1032654	Identifier	item_dst		1032134	0					
ANR	1032655	Argument	diff_dst		1032134	2					
ANR	1032656	Identifier	diff_dst		1032134	0					
ANR	1032657	IfStatement	if ( value_dst != diff_dst )		1032134	7					
ANR	1032658	Condition	value_dst != diff_dst	289:7:6586:6606	1032134	0	True				
ANR	1032659	EqualityExpression	value_dst != diff_dst		1032134	0		!=			
ANR	1032660	Identifier	value_dst		1032134	0					
ANR	1032661	Identifier	diff_dst		1032134	1					
ANR	1032662	CompoundStatement		65:30:2199:2199	1032134	1					
ANR	1032663	Statement	r_list_foreach	290:4:6615:6628	1032134	0	True				
ANR	1032664	Statement	(	290:19:6630:6630	1032134	1	True				
ANR	1032665	Statement	constants	290:20:6631:6639	1032134	2	True				
ANR	1032666	Statement	","	290:29:6640:6640	1032134	3	True				
ANR	1032667	Statement	iter_const	290:31:6642:6651	1032134	4	True				
ANR	1032668	Statement	","	290:41:6652:6652	1032134	5	True				
ANR	1032669	Statement	constant	290:43:6654:6661	1032134	6	True				
ANR	1032670	Statement	)	290:51:6662:6662	1032134	7	True				
ANR	1032671	CompoundStatement		66:53:2254:2254	1032134	8					
ANR	1032672	IfStatement	"if ( value_dst == r_num_get ( NULL , constant ) )"		1032134	0					
ANR	1032673	Condition	"value_dst == r_num_get ( NULL , constant )"	291:9:6675:6713	1032134	0	True				
ANR	1032674	EqualityExpression	"value_dst == r_num_get ( NULL , constant )"		1032134	0		==			
ANR	1032675	Identifier	value_dst		1032134	0					
ANR	1032676	CallExpression	"r_num_get ( NULL , constant )"		1032134	1					
ANR	1032677	Callee	r_num_get		1032134	0					
ANR	1032678	Identifier	r_num_get		1032134	0					
ANR	1032679	ArgumentList	NULL		1032134	1					
ANR	1032680	Argument	NULL		1032134	0					
ANR	1032681	Identifier	NULL		1032134	0					
ANR	1032682	Argument	constant		1032134	1					
ANR	1032683	Identifier	constant		1032134	0					
ANR	1032684	CompoundStatement		67:50:2306:2306	1032134	1					
ANR	1032685	Statement	ct	292:6:6724:6725	1032134	0	True				
ANR	1032686	Statement	=	292:9:6727:6727	1032134	1	True				
ANR	1032687	Statement	r_str_appendf	292:11:6729:6741	1032134	2	True				
ANR	1032688	Statement	(	292:25:6743:6743	1032134	3	True				
ANR	1032689	Statement	ct	292:26:6744:6745	1032134	4	True				
ANR	1032690	Statement	","	292:28:6746:6746	1032134	5	True				
ANR	1032691	Statement	"""%s <-- 0x%"""	292:30:6748:6759	1032134	6	True				
ANR	1032692	Statement	PFMT64x	292:42:6760:6766	1032134	7	True				
ANR	1032693	Statement	""";"""	292:49:6767:6769	1032134	8	True				
ANR	1032694	Statement	","	292:52:6770:6770	1032134	9	True				
ANR	1032695	Statement	item_dst	292:54:6772:6779	1032134	10	True				
ANR	1032696	Statement	->	292:62:6780:6781	1032134	11	True				
ANR	1032697	Statement	name	292:64:6782:6785	1032134	12	True				
ANR	1032698	Statement	","	292:68:6786:6786	1032134	13	True				
ANR	1032699	Statement	value_dst	292:70:6788:6796	1032134	14	True				
ANR	1032700	Statement	)	292:79:6797:6797	1032134	15	True				
ANR	1032701	ExpressionStatement		292:80:6798:6798	1032134	16	True				
ANR	1032702	Label	continue_error :	297:0:6822:6836	1032134	28	True				
ANR	1032703	Identifier	continue_error		1032134	0					
ANR	1032704	ExpressionStatement	FREE_ROP	300:2:6959:6967	1032134	29	True				
ANR	1032705	Identifier	FREE_ROP		1032134	0					
ANR	1032706	ExpressionStatement	r_list_free ( constants )	301:2:6971:6994	1032134	30	True				
ANR	1032707	CallExpression	r_list_free ( constants )		1032134	0					
ANR	1032708	Callee	r_list_free		1032134	0					
ANR	1032709	Identifier	r_list_free		1032134	0					
ANR	1032710	ArgumentList	constants		1032134	1					
ANR	1032711	Argument	constants		1032134	0					
ANR	1032712	Identifier	constants		1032134	0					
ANR	1032713	ReturnStatement	return ct ;	303:1:7000:7009	1032134	18	True				
ANR	1032714	Identifier	ct		1032134	0					
ANR	1032715	Label	out_error :	304:0:7011:7020	1032134	19	True				
ANR	1032716	Identifier	out_error		1032134	0					
ANR	1032717	ExpressionStatement	FREE_ROP	305:1:7023:7031	1032134	20	True				
ANR	1032718	Identifier	FREE_ROP		1032134	0					
ANR	1032719	ExpressionStatement	r_list_free ( constants )	306:1:7035:7058	1032134	21	True				
ANR	1032720	CallExpression	r_list_free ( constants )		1032134	0					
ANR	1032721	Callee	r_list_free		1032134	0					
ANR	1032722	Identifier	r_list_free		1032134	0					
ANR	1032723	ArgumentList	constants		1032134	1					
ANR	1032724	Argument	constants		1032134	0					
ANR	1032725	Identifier	constants		1032134	0					
ANR	1032726	ReturnStatement	return NULL ;	307:1:7061:7072	1032134	22	True				
ANR	1032727	Identifier	NULL		1032134	0					
ANR	1032728	ReturnType	static char *		1032134	1					
ANR	1032729	Identifier	rop_classify_constant		1032134	2					
ANR	1032730	ParameterList	"RCore * core , RList * ropList"		1032134	3					
ANR	1032731	Parameter	RCore * core	225:35:4380:4390	1032134	0	True				
ANR	1032732	ParameterType	RCore *		1032134	0					
ANR	1032733	Identifier	core		1032134	1					
ANR	1032734	Parameter	RList * ropList	225:48:4393:4406	1032134	1	True				
ANR	1032735	ParameterType	RList *		1032134	0					
ANR	1032736	Identifier	ropList		1032134	1					
ANR	1032737	CFGEntryNode	ENTRY		1032134		True				
ANR	1032738	CFGExitNode	EXIT		1032134		True				
ANR	1032739	CFGErrorNode	ERROR		1032134		True				
ANR	1032740	Symbol	* item_dst		1032134						
ANR	1032741	Symbol	romem		1032134						
ANR	1032742	Symbol	& esil_main		1032134						
ANR	1032743	Symbol	constant		1032134						
ANR	1032744	Symbol	ops_list		1032134						
ANR	1032745	Symbol	stats		1032134						
ANR	1032746	Symbol	* core -> anal -> esil		1032134						
ANR	1032747	Symbol	value_dst		1032134						
ANR	1032748	Symbol	* * core -> anal		1032134						
ANR	1032749	Symbol	r_num_get		1032134						
ANR	1032750	Symbol	constants		1032134						
ANR	1032751	Symbol	core -> anal -> esil		1032134						
ANR	1032752	Symbol	strcmp		1032134						
ANR	1032753	Symbol	get_constants		1032134						
ANR	1032754	Symbol	NULL		1032134						
ANR	1032755	Symbol	parse_list		1032134						
ANR	1032756	Symbol	reg_write		1032134						
ANR	1032757	Symbol	r_reg_get_list		1032134						
ANR	1032758	Symbol	esil_main		1032134						
ANR	1032759	Symbol	sdb_querys		1032134						
ANR	1032760	Symbol	mem_write		1032134						
ANR	1032761	Symbol	item_dst		1032134						
ANR	1032762	Symbol	& esil_flg		1032134						
ANR	1032763	Symbol	ropList		1032134						
ANR	1032764	Symbol	reg_read		1032134						
ANR	1032765	Symbol	core		1032134						
ANR	1032766	Symbol	* * * core		1032134						
ANR	1032767	Symbol	r_list_find		1032134						
ANR	1032768	Symbol	iter_r		1032134						
ANR	1032769	Symbol	strstr		1032134						
ANR	1032770	Symbol	r_config_get_i		1032134						
ANR	1032771	Symbol	diff_dst		1032134						
ANR	1032772	Symbol	flg_read		1032134						
ANR	1032773	Symbol	r_list_empty		1032134						
ANR	1032774	Symbol	* core -> dbg		1032134						
ANR	1032775	Symbol	iter_const		1032134						
ANR	1032776	Symbol	item_dst -> name		1032134						
ANR	1032777	Symbol	flg_write		1032134						
ANR	1032778	Symbol	* core		1032134						
ANR	1032779	Symbol	esil_str		1032134						
ANR	1032780	Symbol	core -> anal		1032134						
ANR	1032781	Symbol	out		1032134						
ANR	1032782	Symbol	head		1032134						
ANR	1032783	Symbol	* * core		1032134						
ANR	1032784	Symbol	core -> config		1032134						
ANR	1032785	Symbol	r_reg_get_value		1032134						
ANR	1032786	Symbol	iter_dst		1032134						
ANR	1032787	Symbol	mem_read		1032134						
ANR	1032788	Symbol	false		1032134						
ANR	1032789	Symbol	ct		1032134						
ANR	1032790	Symbol	* core -> anal		1032134						
ANR	1032791	Symbol	core -> dbg -> reg		1032134						
ANR	1032792	Symbol	core -> anal -> esil -> stats		1032134						
ANR	1032793	Symbol	esil_flg		1032134						
ANR	1032794	Symbol	core -> dbg		1032134						
ANR	1032795	Function	rop_classify_mov	310:0:7077:9960							
ANR	1032796	FunctionDef	"rop_classify_mov (RCore * core , RList * ropList)"		1032795	0					
ANR	1032797	CompoundStatement		310:59:7136:9960	1032795	0					
ANR	1032798	IdentifierDeclStatement	char * esil_str ;	311:1:7139:7153	1032795	0	True				
ANR	1032799	IdentifierDecl	* esil_str		1032795	0					
ANR	1032800	IdentifierDeclType	char *		1032795	0					
ANR	1032801	Identifier	esil_str		1032795	1					
ANR	1032802	IdentifierDeclStatement	"char * mov = NULL , * esil_main = NULL , * esil_flg = NULL , * out = NULL ;"	312:1:7156:7222	1032795	1	True				
ANR	1032803	IdentifierDecl	* mov = NULL		1032795	0					
ANR	1032804	IdentifierDeclType	char *		1032795	0					
ANR	1032805	Identifier	mov		1032795	1					
ANR	1032806	AssignmentExpression	* mov = NULL		1032795	2		=			
ANR	1032807	Identifier	NULL		1032795	0					
ANR	1032808	Identifier	NULL		1032795	1					
ANR	1032809	IdentifierDecl	* esil_main = NULL		1032795	1					
ANR	1032810	IdentifierDeclType	char *		1032795	0					
ANR	1032811	Identifier	esil_main		1032795	1					
ANR	1032812	AssignmentExpression	* esil_main = NULL		1032795	2		=			
ANR	1032813	Identifier	NULL		1032795	0					
ANR	1032814	Identifier	NULL		1032795	1					
ANR	1032815	IdentifierDecl	* esil_flg = NULL		1032795	2					
ANR	1032816	IdentifierDeclType	char *		1032795	0					
ANR	1032817	Identifier	esil_flg		1032795	1					
ANR	1032818	AssignmentExpression	* esil_flg = NULL		1032795	2		=			
ANR	1032819	Identifier	NULL		1032795	0					
ANR	1032820	Identifier	NULL		1032795	1					
ANR	1032821	IdentifierDecl	* out = NULL		1032795	3					
ANR	1032822	IdentifierDeclType	char *		1032795	0					
ANR	1032823	Identifier	out		1032795	1					
ANR	1032824	AssignmentExpression	* out = NULL		1032795	2		=			
ANR	1032825	Identifier	NULL		1032795	0					
ANR	1032826	Identifier	NULL		1032795	1					
ANR	1032827	IdentifierDeclStatement	"RListIter * iter_src , * iter_r , * iter_dst ;"	313:1:7225:7264	1032795	2	True				
ANR	1032828	IdentifierDecl	* iter_src		1032795	0					
ANR	1032829	IdentifierDeclType	RListIter *		1032795	0					
ANR	1032830	Identifier	iter_src		1032795	1					
ANR	1032831	IdentifierDecl	* iter_r		1032795	1					
ANR	1032832	IdentifierDeclType	RListIter *		1032795	0					
ANR	1032833	Identifier	iter_r		1032795	1					
ANR	1032834	IdentifierDecl	* iter_dst		1032795	2					
ANR	1032835	IdentifierDeclType	RListIter *		1032795	0					
ANR	1032836	Identifier	iter_dst		1032795	1					
ANR	1032837	IdentifierDeclStatement	"RRegItem * item_src , * item_dst ;"	314:1:7267:7296	1032795	3	True				
ANR	1032838	IdentifierDecl	* item_src		1032795	0					
ANR	1032839	IdentifierDeclType	RRegItem *		1032795	0					
ANR	1032840	Identifier	item_src		1032795	1					
ANR	1032841	IdentifierDecl	* item_dst		1032795	1					
ANR	1032842	IdentifierDeclType	RRegItem *		1032795	0					
ANR	1032843	Identifier	item_dst		1032795	1					
ANR	1032844	IdentifierDeclStatement	RList * head ;	315:1:7299:7310	1032795	4	True				
ANR	1032845	IdentifierDecl	* head		1032795	0					
ANR	1032846	IdentifierDeclType	RList *		1032795	0					
ANR	1032847	Identifier	head		1032795	1					
ANR	1032848	IdentifierDeclStatement	"RList * ops_list = NULL , * flg_read = NULL , * flg_write = NULL , * reg_read = NULL , * reg_write = NULL , * mem_read = NULL , * mem_write = NULL ;"	316:1:7313:7460	1032795	5	True				
ANR	1032849	IdentifierDecl	* ops_list = NULL		1032795	0					
ANR	1032850	IdentifierDeclType	RList *		1032795	0					
ANR	1032851	Identifier	ops_list		1032795	1					
ANR	1032852	AssignmentExpression	* ops_list = NULL		1032795	2		=			
ANR	1032853	Identifier	NULL		1032795	0					
ANR	1032854	Identifier	NULL		1032795	1					
ANR	1032855	IdentifierDecl	* flg_read = NULL		1032795	1					
ANR	1032856	IdentifierDeclType	RList *		1032795	0					
ANR	1032857	Identifier	flg_read		1032795	1					
ANR	1032858	AssignmentExpression	* flg_read = NULL		1032795	2		=			
ANR	1032859	Identifier	NULL		1032795	0					
ANR	1032860	Identifier	NULL		1032795	1					
ANR	1032861	IdentifierDecl	* flg_write = NULL		1032795	2					
ANR	1032862	IdentifierDeclType	RList *		1032795	0					
ANR	1032863	Identifier	flg_write		1032795	1					
ANR	1032864	AssignmentExpression	* flg_write = NULL		1032795	2		=			
ANR	1032865	Identifier	NULL		1032795	0					
ANR	1032866	Identifier	NULL		1032795	1					
ANR	1032867	IdentifierDecl	* reg_read = NULL		1032795	3					
ANR	1032868	IdentifierDeclType	RList *		1032795	0					
ANR	1032869	Identifier	reg_read		1032795	1					
ANR	1032870	AssignmentExpression	* reg_read = NULL		1032795	2		=			
ANR	1032871	Identifier	NULL		1032795	0					
ANR	1032872	Identifier	NULL		1032795	1					
ANR	1032873	IdentifierDecl	* reg_write = NULL		1032795	4					
ANR	1032874	IdentifierDeclType	RList *		1032795	0					
ANR	1032875	Identifier	reg_write		1032795	1					
ANR	1032876	AssignmentExpression	* reg_write = NULL		1032795	2		=			
ANR	1032877	Identifier	NULL		1032795	0					
ANR	1032878	Identifier	NULL		1032795	1					
ANR	1032879	IdentifierDecl	* mem_read = NULL		1032795	5					
ANR	1032880	IdentifierDeclType	RList *		1032795	0					
ANR	1032881	Identifier	mem_read		1032795	1					
ANR	1032882	AssignmentExpression	* mem_read = NULL		1032795	2		=			
ANR	1032883	Identifier	NULL		1032795	0					
ANR	1032884	Identifier	NULL		1032795	1					
ANR	1032885	IdentifierDecl	* mem_write = NULL		1032795	6					
ANR	1032886	IdentifierDeclType	RList *		1032795	0					
ANR	1032887	Identifier	mem_write		1032795	1					
ANR	1032888	AssignmentExpression	* mem_write = NULL		1032795	2		=			
ANR	1032889	Identifier	NULL		1032795	0					
ANR	1032890	Identifier	NULL		1032795	1					
ANR	1032891	IdentifierDeclStatement	"const bool romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	319:1:7463:7525	1032795	6	True				
ANR	1032892	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1032795	0					
ANR	1032893	IdentifierDeclType	const bool		1032795	0					
ANR	1032894	Identifier	romem		1032795	1					
ANR	1032895	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1032795	2		=			
ANR	1032896	Identifier	romem		1032795	0					
ANR	1032897	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		1032795	1					
ANR	1032898	Callee	r_config_get_i		1032795	0					
ANR	1032899	Identifier	r_config_get_i		1032795	0					
ANR	1032900	ArgumentList	core -> config		1032795	1					
ANR	1032901	Argument	core -> config		1032795	0					
ANR	1032902	PtrMemberAccess	core -> config		1032795	0					
ANR	1032903	Identifier	core		1032795	0					
ANR	1032904	Identifier	config		1032795	1					
ANR	1032905	Argument	"""esil.romem"""		1032795	1					
ANR	1032906	PrimaryExpression	"""esil.romem"""		1032795	0					
ANR	1032907	IdentifierDeclStatement	"const bool stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	320:1:7528:7590	1032795	7	True				
ANR	1032908	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1032795	0					
ANR	1032909	IdentifierDeclType	const bool		1032795	0					
ANR	1032910	Identifier	stats		1032795	1					
ANR	1032911	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1032795	2		=			
ANR	1032912	Identifier	stats		1032795	0					
ANR	1032913	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		1032795	1					
ANR	1032914	Callee	r_config_get_i		1032795	0					
ANR	1032915	Identifier	r_config_get_i		1032795	0					
ANR	1032916	ArgumentList	core -> config		1032795	1					
ANR	1032917	Argument	core -> config		1032795	0					
ANR	1032918	PtrMemberAccess	core -> config		1032795	0					
ANR	1032919	Identifier	core		1032795	0					
ANR	1032920	Identifier	config		1032795	1					
ANR	1032921	Argument	"""esil.stats"""		1032795	1					
ANR	1032922	PrimaryExpression	"""esil.stats"""		1032795	0					
ANR	1032923	IfStatement	if ( ! romem || ! stats )		1032795	8					
ANR	1032924	Condition	! romem || ! stats	322:5:7598:7613	1032795	0	True				
ANR	1032925	OrExpression	! romem || ! stats		1032795	0		||			
ANR	1032926	UnaryOperationExpression	! romem		1032795	0					
ANR	1032927	UnaryOperator	!		1032795	0					
ANR	1032928	Identifier	romem		1032795	1					
ANR	1032929	UnaryOperationExpression	! stats		1032795	1					
ANR	1032930	UnaryOperator	!		1032795	0					
ANR	1032931	Identifier	stats		1032795	1					
ANR	1032932	CompoundStatement		13:23:479:479	1032795	1					
ANR	1032933	ReturnStatement	return NULL ;	324:2:7688:7699	1032795	0	True				
ANR	1032934	Identifier	NULL		1032795	0					
ANR	1032935	Statement	r_list_foreach	327:1:7706:7719	1032795	9	True				
ANR	1032936	Statement	(	327:16:7721:7721	1032795	10	True				
ANR	1032937	Statement	ropList	327:17:7722:7728	1032795	11	True				
ANR	1032938	Statement	","	327:24:7729:7729	1032795	12	True				
ANR	1032939	Statement	iter_r	327:26:7731:7736	1032795	13	True				
ANR	1032940	Statement	","	327:32:7737:7737	1032795	14	True				
ANR	1032941	Statement	esil_str	327:34:7739:7746	1032795	15	True				
ANR	1032942	Statement	)	327:42:7747:7747	1032795	16	True				
ANR	1032943	CompoundStatement		18:44:612:612	1032795	17					
ANR	1032944	ExpressionStatement	fillRegisterValues ( core )	329:2:7786:7811	1032795	0	True				
ANR	1032945	CallExpression	fillRegisterValues ( core )		1032795	0					
ANR	1032946	Callee	fillRegisterValues		1032795	0					
ANR	1032947	Identifier	fillRegisterValues		1032795	0					
ANR	1032948	ArgumentList	core		1032795	1					
ANR	1032949	Argument	core		1032795	0					
ANR	1032950	Identifier	core		1032795	0					
ANR	1032951	ExpressionStatement	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"	330:2:7815:7856	1032795	1	True				
ANR	1032952	AssignmentExpression	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"		1032795	0		=			
ANR	1032953	Identifier	head		1032795	0					
ANR	1032954	CallExpression	"r_reg_get_list ( core -> dbg -> reg , 0 )"		1032795	1					
ANR	1032955	Callee	r_reg_get_list		1032795	0					
ANR	1032956	Identifier	r_reg_get_list		1032795	0					
ANR	1032957	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1032958	Argument	core -> dbg -> reg		1032795	0					
ANR	1032959	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1032960	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1032961	Identifier	core		1032795	0					
ANR	1032962	Identifier	dbg		1032795	1					
ANR	1032963	Identifier	reg		1032795	1					
ANR	1032964	Argument	0		1032795	1					
ANR	1032965	PrimaryExpression	0		1032795	0					
ANR	1032966	IfStatement	if ( ! head )		1032795	2					
ANR	1032967	Condition	! head	331:6:7864:7868	1032795	0	True				
ANR	1032968	UnaryOperationExpression	! head		1032795	0					
ANR	1032969	UnaryOperator	!		1032795	0					
ANR	1032970	Identifier	head		1032795	1					
ANR	1032971	CompoundStatement		22:13:734:734	1032795	1					
ANR	1032972	GotoStatement	goto out_error ;	332:3:7876:7890	1032795	0	True				
ANR	1032973	Identifier	out_error		1032795	0					
ANR	1032974	ExpressionStatement	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"	334:2:7898:7946	1032795	3	True				
ANR	1032975	CallExpression	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"		1032795	0					
ANR	1032976	Callee	esil_split_flg		1032795	0					
ANR	1032977	Identifier	esil_split_flg		1032795	0					
ANR	1032978	ArgumentList	esil_str		1032795	1					
ANR	1032979	Argument	esil_str		1032795	0					
ANR	1032980	Identifier	esil_str		1032795	0					
ANR	1032981	Argument	& esil_main		1032795	1					
ANR	1032982	UnaryOperationExpression	& esil_main		1032795	0					
ANR	1032983	UnaryOperator	&		1032795	0					
ANR	1032984	Identifier	esil_main		1032795	1					
ANR	1032985	Argument	& esil_flg		1032795	2					
ANR	1032986	UnaryOperationExpression	& esil_flg		1032795	0					
ANR	1032987	UnaryOperator	&		1032795	0					
ANR	1032988	Identifier	esil_flg		1032795	1					
ANR	1032989	ExpressionStatement	"cmd_anal_esil ( core , esil_main ? esil_main : esil_str )"	335:2:7950:8002	1032795	4	True				
ANR	1032990	CallExpression	"cmd_anal_esil ( core , esil_main ? esil_main : esil_str )"		1032795	0					
ANR	1032991	Callee	cmd_anal_esil		1032795	0					
ANR	1032992	Identifier	cmd_anal_esil		1032795	0					
ANR	1032993	ArgumentList	core		1032795	1					
ANR	1032994	Argument	core		1032795	0					
ANR	1032995	Identifier	core		1032795	0					
ANR	1032996	Argument	esil_main ? esil_main : esil_str		1032795	1					
ANR	1032997	ConditionalExpression	esil_main ? esil_main : esil_str		1032795	0					
ANR	1032998	Condition	esil_main		1032795	0					
ANR	1032999	Identifier	esil_main		1032795	0					
ANR	1033000	Identifier	esil_main		1032795	1					
ANR	1033001	Identifier	esil_str		1032795	2					
ANR	1033002	ExpressionStatement	"out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"	336:2:8006:8062	1032795	5	True				
ANR	1033003	AssignmentExpression	"out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1032795	0		=			
ANR	1033004	Identifier	out		1032795	0					
ANR	1033005	CallExpression	"sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1032795	1					
ANR	1033006	Callee	sdb_querys		1032795	0					
ANR	1033007	Identifier	sdb_querys		1032795	0					
ANR	1033008	ArgumentList	core -> anal -> esil -> stats		1032795	1					
ANR	1033009	Argument	core -> anal -> esil -> stats		1032795	0					
ANR	1033010	PtrMemberAccess	core -> anal -> esil -> stats		1032795	0					
ANR	1033011	PtrMemberAccess	core -> anal -> esil		1032795	0					
ANR	1033012	PtrMemberAccess	core -> anal		1032795	0					
ANR	1033013	Identifier	core		1032795	0					
ANR	1033014	Identifier	anal		1032795	1					
ANR	1033015	Identifier	esil		1032795	1					
ANR	1033016	Identifier	stats		1032795	1					
ANR	1033017	Argument	NULL		1032795	1					
ANR	1033018	Identifier	NULL		1032795	0					
ANR	1033019	Argument	0		1032795	2					
ANR	1033020	PrimaryExpression	0		1032795	0					
ANR	1033021	Argument	"""*"""		1032795	3					
ANR	1033022	PrimaryExpression	"""*"""		1032795	0					
ANR	1033023	IfStatement	if ( out )		1032795	6					
ANR	1033024	Condition	out	337:6:8070:8072	1032795	0	True				
ANR	1033025	Identifier	out		1032795	0					
ANR	1033026	CompoundStatement		28:11:938:938	1032795	1					
ANR	1033027	ExpressionStatement	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"	338:3:8080:8129	1032795	0	True				
ANR	1033028	AssignmentExpression	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"		1032795	0		=			
ANR	1033029	Identifier	ops_list		1032795	0					
ANR	1033030	CallExpression	"parse_list ( strstr ( out , ""ops.list"" ) )"		1032795	1					
ANR	1033031	Callee	parse_list		1032795	0					
ANR	1033032	Identifier	parse_list		1032795	0					
ANR	1033033	ArgumentList	"strstr ( out , ""ops.list"" )"		1032795	1					
ANR	1033034	Argument	"strstr ( out , ""ops.list"" )"		1032795	0					
ANR	1033035	CallExpression	"strstr ( out , ""ops.list"" )"		1032795	0					
ANR	1033036	Callee	strstr		1032795	0					
ANR	1033037	Identifier	strstr		1032795	0					
ANR	1033038	ArgumentList	out		1032795	1					
ANR	1033039	Argument	out		1032795	0					
ANR	1033040	Identifier	out		1032795	0					
ANR	1033041	Argument	"""ops.list"""		1032795	1					
ANR	1033042	PrimaryExpression	"""ops.list"""		1032795	0					
ANR	1033043	ExpressionStatement	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"	339:3:8134:8183	1032795	1	True				
ANR	1033044	AssignmentExpression	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"		1032795	0		=			
ANR	1033045	Identifier	flg_read		1032795	0					
ANR	1033046	CallExpression	"parse_list ( strstr ( out , ""flg.read"" ) )"		1032795	1					
ANR	1033047	Callee	parse_list		1032795	0					
ANR	1033048	Identifier	parse_list		1032795	0					
ANR	1033049	ArgumentList	"strstr ( out , ""flg.read"" )"		1032795	1					
ANR	1033050	Argument	"strstr ( out , ""flg.read"" )"		1032795	0					
ANR	1033051	CallExpression	"strstr ( out , ""flg.read"" )"		1032795	0					
ANR	1033052	Callee	strstr		1032795	0					
ANR	1033053	Identifier	strstr		1032795	0					
ANR	1033054	ArgumentList	out		1032795	1					
ANR	1033055	Argument	out		1032795	0					
ANR	1033056	Identifier	out		1032795	0					
ANR	1033057	Argument	"""flg.read"""		1032795	1					
ANR	1033058	PrimaryExpression	"""flg.read"""		1032795	0					
ANR	1033059	ExpressionStatement	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"	340:3:8188:8238	1032795	2	True				
ANR	1033060	AssignmentExpression	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"		1032795	0		=			
ANR	1033061	Identifier	flg_write		1032795	0					
ANR	1033062	CallExpression	"parse_list ( strstr ( out , ""flg.write"" ) )"		1032795	1					
ANR	1033063	Callee	parse_list		1032795	0					
ANR	1033064	Identifier	parse_list		1032795	0					
ANR	1033065	ArgumentList	"strstr ( out , ""flg.write"" )"		1032795	1					
ANR	1033066	Argument	"strstr ( out , ""flg.write"" )"		1032795	0					
ANR	1033067	CallExpression	"strstr ( out , ""flg.write"" )"		1032795	0					
ANR	1033068	Callee	strstr		1032795	0					
ANR	1033069	Identifier	strstr		1032795	0					
ANR	1033070	ArgumentList	out		1032795	1					
ANR	1033071	Argument	out		1032795	0					
ANR	1033072	Identifier	out		1032795	0					
ANR	1033073	Argument	"""flg.write"""		1032795	1					
ANR	1033074	PrimaryExpression	"""flg.write"""		1032795	0					
ANR	1033075	ExpressionStatement	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"	341:3:8243:8292	1032795	3	True				
ANR	1033076	AssignmentExpression	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"		1032795	0		=			
ANR	1033077	Identifier	reg_read		1032795	0					
ANR	1033078	CallExpression	"parse_list ( strstr ( out , ""reg.read"" ) )"		1032795	1					
ANR	1033079	Callee	parse_list		1032795	0					
ANR	1033080	Identifier	parse_list		1032795	0					
ANR	1033081	ArgumentList	"strstr ( out , ""reg.read"" )"		1032795	1					
ANR	1033082	Argument	"strstr ( out , ""reg.read"" )"		1032795	0					
ANR	1033083	CallExpression	"strstr ( out , ""reg.read"" )"		1032795	0					
ANR	1033084	Callee	strstr		1032795	0					
ANR	1033085	Identifier	strstr		1032795	0					
ANR	1033086	ArgumentList	out		1032795	1					
ANR	1033087	Argument	out		1032795	0					
ANR	1033088	Identifier	out		1032795	0					
ANR	1033089	Argument	"""reg.read"""		1032795	1					
ANR	1033090	PrimaryExpression	"""reg.read"""		1032795	0					
ANR	1033091	ExpressionStatement	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"	342:3:8297:8347	1032795	4	True				
ANR	1033092	AssignmentExpression	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"		1032795	0		=			
ANR	1033093	Identifier	reg_write		1032795	0					
ANR	1033094	CallExpression	"parse_list ( strstr ( out , ""reg.write"" ) )"		1032795	1					
ANR	1033095	Callee	parse_list		1032795	0					
ANR	1033096	Identifier	parse_list		1032795	0					
ANR	1033097	ArgumentList	"strstr ( out , ""reg.write"" )"		1032795	1					
ANR	1033098	Argument	"strstr ( out , ""reg.write"" )"		1032795	0					
ANR	1033099	CallExpression	"strstr ( out , ""reg.write"" )"		1032795	0					
ANR	1033100	Callee	strstr		1032795	0					
ANR	1033101	Identifier	strstr		1032795	0					
ANR	1033102	ArgumentList	out		1032795	1					
ANR	1033103	Argument	out		1032795	0					
ANR	1033104	Identifier	out		1032795	0					
ANR	1033105	Argument	"""reg.write"""		1032795	1					
ANR	1033106	PrimaryExpression	"""reg.write"""		1032795	0					
ANR	1033107	ExpressionStatement	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"	343:3:8352:8401	1032795	5	True				
ANR	1033108	AssignmentExpression	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"		1032795	0		=			
ANR	1033109	Identifier	mem_read		1032795	0					
ANR	1033110	CallExpression	"parse_list ( strstr ( out , ""mem.read"" ) )"		1032795	1					
ANR	1033111	Callee	parse_list		1032795	0					
ANR	1033112	Identifier	parse_list		1032795	0					
ANR	1033113	ArgumentList	"strstr ( out , ""mem.read"" )"		1032795	1					
ANR	1033114	Argument	"strstr ( out , ""mem.read"" )"		1032795	0					
ANR	1033115	CallExpression	"strstr ( out , ""mem.read"" )"		1032795	0					
ANR	1033116	Callee	strstr		1032795	0					
ANR	1033117	Identifier	strstr		1032795	0					
ANR	1033118	ArgumentList	out		1032795	1					
ANR	1033119	Argument	out		1032795	0					
ANR	1033120	Identifier	out		1032795	0					
ANR	1033121	Argument	"""mem.read"""		1032795	1					
ANR	1033122	PrimaryExpression	"""mem.read"""		1032795	0					
ANR	1033123	ExpressionStatement	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"	344:3:8406:8456	1032795	6	True				
ANR	1033124	AssignmentExpression	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"		1032795	0		=			
ANR	1033125	Identifier	mem_write		1032795	0					
ANR	1033126	CallExpression	"parse_list ( strstr ( out , ""mem.write"" ) )"		1032795	1					
ANR	1033127	Callee	parse_list		1032795	0					
ANR	1033128	Identifier	parse_list		1032795	0					
ANR	1033129	ArgumentList	"strstr ( out , ""mem.write"" )"		1032795	1					
ANR	1033130	Argument	"strstr ( out , ""mem.write"" )"		1032795	0					
ANR	1033131	CallExpression	"strstr ( out , ""mem.write"" )"		1032795	0					
ANR	1033132	Callee	strstr		1032795	0					
ANR	1033133	Identifier	strstr		1032795	0					
ANR	1033134	ArgumentList	out		1032795	1					
ANR	1033135	Argument	out		1032795	0					
ANR	1033136	Identifier	out		1032795	0					
ANR	1033137	Argument	"""mem.write"""		1032795	1					
ANR	1033138	PrimaryExpression	"""mem.write"""		1032795	0					
ANR	1033139	ElseStatement	else		1032795	0					
ANR	1033140	CompoundStatement		36:9:1330:1330	1032795	0					
ANR	1033141	GotoStatement	goto continue_error ;	346:3:8472:8491	1032795	0	True				
ANR	1033142	Identifier	continue_error		1032795	0					
ANR	1033143	IfStatement	"if ( ! r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp ) )"		1032795	7					
ANR	1033144	Condition	"! r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp )"	349:6:8504:8556	1032795	0	True				
ANR	1033145	UnaryOperationExpression	"! r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp )"		1032795	0					
ANR	1033146	UnaryOperator	!		1032795	0					
ANR	1033147	CallExpression	"r_list_find ( ops_list , ""="" , ( RListComparator ) strcmp )"		1032795	1					
ANR	1033148	Callee	r_list_find		1032795	0					
ANR	1033149	Identifier	r_list_find		1032795	0					
ANR	1033150	ArgumentList	ops_list		1032795	1					
ANR	1033151	Argument	ops_list		1032795	0					
ANR	1033152	Identifier	ops_list		1032795	0					
ANR	1033153	Argument	"""="""		1032795	1					
ANR	1033154	PrimaryExpression	"""="""		1032795	0					
ANR	1033155	Argument	( RListComparator ) strcmp		1032795	2					
ANR	1033156	CastExpression	( RListComparator ) strcmp		1032795	0					
ANR	1033157	CastTarget	RListComparator		1032795	0					
ANR	1033158	Identifier	strcmp		1032795	1					
ANR	1033159	CompoundStatement		40:61:1422:1422	1032795	1					
ANR	1033160	GotoStatement	goto continue_error ;	350:3:8564:8583	1032795	0	True				
ANR	1033161	Identifier	continue_error		1032795	0					
ANR	1033162	ExpressionStatement	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"	353:2:8592:8633	1032795	8	True				
ANR	1033163	AssignmentExpression	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"		1032795	0		=			
ANR	1033164	Identifier	head		1032795	0					
ANR	1033165	CallExpression	"r_reg_get_list ( core -> dbg -> reg , 0 )"		1032795	1					
ANR	1033166	Callee	r_reg_get_list		1032795	0					
ANR	1033167	Identifier	r_reg_get_list		1032795	0					
ANR	1033168	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033169	Argument	core -> dbg -> reg		1032795	0					
ANR	1033170	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033171	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033172	Identifier	core		1032795	0					
ANR	1033173	Identifier	dbg		1032795	1					
ANR	1033174	Identifier	reg		1032795	1					
ANR	1033175	Argument	0		1032795	1					
ANR	1033176	PrimaryExpression	0		1032795	0					
ANR	1033177	IfStatement	if ( ! head )		1032795	9					
ANR	1033178	Condition	! head	354:6:8641:8645	1032795	0	True				
ANR	1033179	UnaryOperationExpression	! head		1032795	0					
ANR	1033180	UnaryOperator	!		1032795	0					
ANR	1033181	Identifier	head		1032795	1					
ANR	1033182	CompoundStatement		45:13:1511:1511	1032795	1					
ANR	1033183	GotoStatement	goto out_error ;	355:3:8653:8667	1032795	0	True				
ANR	1033184	Identifier	out_error		1032795	0					
ANR	1033185	Statement	r_list_foreach	357:2:8675:8688	1032795	10	True				
ANR	1033186	Statement	(	357:17:8690:8690	1032795	11	True				
ANR	1033187	Statement	head	357:18:8691:8694	1032795	12	True				
ANR	1033188	Statement	","	357:22:8695:8695	1032795	13	True				
ANR	1033189	Statement	iter_dst	357:24:8697:8704	1032795	14	True				
ANR	1033190	Statement	","	357:32:8705:8705	1032795	15	True				
ANR	1033191	Statement	item_dst	357:34:8707:8714	1032795	16	True				
ANR	1033192	Statement	)	357:42:8715:8715	1032795	17	True				
ANR	1033193	CompoundStatement		49:3:1585:1609	1032795	18					
ANR	1033194	IdentifierDeclStatement	"ut64 diff_dst , value_dst ;"	358:3:8722:8746	1032795	0	True				
ANR	1033195	IdentifierDecl	diff_dst		1032795	0					
ANR	1033196	IdentifierDeclType	ut64		1032795	0					
ANR	1033197	Identifier	diff_dst		1032795	1					
ANR	1033198	IdentifierDecl	value_dst		1032795	1					
ANR	1033199	IdentifierDeclType	ut64		1032795	0					
ANR	1033200	Identifier	value_dst		1032795	1					
ANR	1033201	IfStatement	"if ( ! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp ) )"		1032795	1					
ANR	1033202	Condition	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"	359:7:8755:8826	1032795	0	True				
ANR	1033203	UnaryOperationExpression	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1032795	0					
ANR	1033204	UnaryOperator	!		1032795	0					
ANR	1033205	CallExpression	"r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1032795	1					
ANR	1033206	Callee	r_list_find		1032795	0					
ANR	1033207	Identifier	r_list_find		1032795	0					
ANR	1033208	ArgumentList	reg_write		1032795	1					
ANR	1033209	Argument	reg_write		1032795	0					
ANR	1033210	Identifier	reg_write		1032795	0					
ANR	1033211	Argument	item_dst -> name		1032795	1					
ANR	1033212	PtrMemberAccess	item_dst -> name		1032795	0					
ANR	1033213	Identifier	item_dst		1032795	0					
ANR	1033214	Identifier	name		1032795	1					
ANR	1033215	Argument	( RListComparator ) strcmp		1032795	2					
ANR	1033216	CastExpression	( RListComparator ) strcmp		1032795	0					
ANR	1033217	CastTarget	RListComparator		1032795	0					
ANR	1033218	Identifier	strcmp		1032795	1					
ANR	1033219	CompoundStatement		51:33:1692:1692	1032795	1					
ANR	1033220	ContinueStatement	continue ;	361:4:8835:8843	1032795	0	True				
ANR	1033221	IfStatement	if ( isFlag ( item_dst ) )		1032795	2					
ANR	1033222	Condition	isFlag ( item_dst )	365:7:8889:8905	1032795	0	True				
ANR	1033223	CallExpression	isFlag ( item_dst )		1032795	0					
ANR	1033224	Callee	isFlag		1032795	0					
ANR	1033225	Identifier	isFlag		1032795	0					
ANR	1033226	ArgumentList	item_dst		1032795	1					
ANR	1033227	Argument	item_dst		1032795	0					
ANR	1033228	Identifier	item_dst		1032795	0					
ANR	1033229	CompoundStatement		56:26:1771:1771	1032795	1					
ANR	1033230	ContinueStatement	continue ;	366:4:8914:8922	1032795	0	True				
ANR	1033231	ExpressionStatement	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"	369:3:8933:8987	1032795	3	True				
ANR	1033232	AssignmentExpression	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032795	0		=			
ANR	1033233	Identifier	value_dst		1032795	0					
ANR	1033234	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032795	1					
ANR	1033235	Callee	r_reg_get_value		1032795	0					
ANR	1033236	Identifier	r_reg_get_value		1032795	0					
ANR	1033237	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033238	Argument	core -> dbg -> reg		1032795	0					
ANR	1033239	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033240	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033241	Identifier	core		1032795	0					
ANR	1033242	Identifier	dbg		1032795	1					
ANR	1033243	Identifier	reg		1032795	1					
ANR	1033244	Argument	item_dst		1032795	1					
ANR	1033245	Identifier	item_dst		1032795	0					
ANR	1033246	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	370:3:8992:9032	1032795	4	True				
ANR	1033247	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1032795	0					
ANR	1033248	Callee	r_reg_arena_swap		1032795	0					
ANR	1033249	Identifier	r_reg_arena_swap		1032795	0					
ANR	1033250	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033251	Argument	core -> dbg -> reg		1032795	0					
ANR	1033252	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033253	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033254	Identifier	core		1032795	0					
ANR	1033255	Identifier	dbg		1032795	1					
ANR	1033256	Identifier	reg		1032795	1					
ANR	1033257	Argument	false		1032795	1					
ANR	1033258	Identifier	false		1032795	0					
ANR	1033259	ExpressionStatement	"diff_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"	371:3:9037:9090	1032795	5	True				
ANR	1033260	AssignmentExpression	"diff_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032795	0		=			
ANR	1033261	Identifier	diff_dst		1032795	0					
ANR	1033262	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_dst )"		1032795	1					
ANR	1033263	Callee	r_reg_get_value		1032795	0					
ANR	1033264	Identifier	r_reg_get_value		1032795	0					
ANR	1033265	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033266	Argument	core -> dbg -> reg		1032795	0					
ANR	1033267	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033268	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033269	Identifier	core		1032795	0					
ANR	1033270	Identifier	dbg		1032795	1					
ANR	1033271	Identifier	reg		1032795	1					
ANR	1033272	Argument	item_dst		1032795	1					
ANR	1033273	Identifier	item_dst		1032795	0					
ANR	1033274	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	372:3:9095:9135	1032795	6	True				
ANR	1033275	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1032795	0					
ANR	1033276	Callee	r_reg_arena_swap		1032795	0					
ANR	1033277	Identifier	r_reg_arena_swap		1032795	0					
ANR	1033278	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033279	Argument	core -> dbg -> reg		1032795	0					
ANR	1033280	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033281	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033282	Identifier	core		1032795	0					
ANR	1033283	Identifier	dbg		1032795	1					
ANR	1033284	Identifier	reg		1032795	1					
ANR	1033285	Argument	false		1032795	1					
ANR	1033286	Identifier	false		1032795	0					
ANR	1033287	Statement	r_list_foreach	373:3:9140:9153	1032795	7	True				
ANR	1033288	Statement	(	373:18:9155:9155	1032795	8	True				
ANR	1033289	Statement	head	373:19:9156:9159	1032795	9	True				
ANR	1033290	Statement	","	373:23:9160:9160	1032795	10	True				
ANR	1033291	Statement	iter_src	373:25:9162:9169	1032795	11	True				
ANR	1033292	Statement	","	373:33:9170:9170	1032795	12	True				
ANR	1033293	Statement	item_src	373:35:9172:9179	1032795	13	True				
ANR	1033294	Statement	)	373:43:9180:9180	1032795	14	True				
ANR	1033295	CompoundStatement		65:4:2051:2075	1032795	15					
ANR	1033296	IdentifierDeclStatement	"ut64 diff_src , value_src ;"	374:4:9188:9212	1032795	0	True				
ANR	1033297	IdentifierDecl	diff_src		1032795	0					
ANR	1033298	IdentifierDeclType	ut64		1032795	0					
ANR	1033299	Identifier	diff_src		1032795	1					
ANR	1033300	IdentifierDecl	value_src		1032795	1					
ANR	1033301	IdentifierDeclType	ut64		1032795	0					
ANR	1033302	Identifier	value_src		1032795	1					
ANR	1033303	IfStatement	"if ( ! r_list_find ( reg_read , item_src -> name , ( RListComparator ) strcmp ) )"		1032795	1					
ANR	1033304	Condition	"! r_list_find ( reg_read , item_src -> name , ( RListComparator ) strcmp )"	375:8:9222:9293	1032795	0	True				
ANR	1033305	UnaryOperationExpression	"! r_list_find ( reg_read , item_src -> name , ( RListComparator ) strcmp )"		1032795	0					
ANR	1033306	UnaryOperator	!		1032795	0					
ANR	1033307	CallExpression	"r_list_find ( reg_read , item_src -> name , ( RListComparator ) strcmp )"		1032795	1					
ANR	1033308	Callee	r_list_find		1032795	0					
ANR	1033309	Identifier	r_list_find		1032795	0					
ANR	1033310	ArgumentList	reg_read		1032795	1					
ANR	1033311	Argument	reg_read		1032795	0					
ANR	1033312	Identifier	reg_read		1032795	0					
ANR	1033313	Argument	item_src -> name		1032795	1					
ANR	1033314	PtrMemberAccess	item_src -> name		1032795	0					
ANR	1033315	Identifier	item_src		1032795	0					
ANR	1033316	Identifier	name		1032795	1					
ANR	1033317	Argument	( RListComparator ) strcmp		1032795	2					
ANR	1033318	CastExpression	( RListComparator ) strcmp		1032795	0					
ANR	1033319	CastTarget	RListComparator		1032795	0					
ANR	1033320	Identifier	strcmp		1032795	1					
ANR	1033321	CompoundStatement		67:34:2159:2159	1032795	1					
ANR	1033322	ContinueStatement	continue ;	377:5:9303:9311	1032795	0	True				
ANR	1033323	IfStatement	if ( item_src == item_dst || isFlag ( item_src ) )		1032795	2					
ANR	1033324	Condition	item_src == item_dst || isFlag ( item_src )	380:8:9359:9399	1032795	0	True				
ANR	1033325	OrExpression	item_src == item_dst || isFlag ( item_src )		1032795	0		||			
ANR	1033326	EqualityExpression	item_src == item_dst		1032795	0		==			
ANR	1033327	Identifier	item_src		1032795	0					
ANR	1033328	Identifier	item_dst		1032795	1					
ANR	1033329	CallExpression	isFlag ( item_src )		1032795	1					
ANR	1033330	Callee	isFlag		1032795	0					
ANR	1033331	Identifier	isFlag		1032795	0					
ANR	1033332	ArgumentList	item_src		1032795	1					
ANR	1033333	Argument	item_src		1032795	0					
ANR	1033334	Identifier	item_src		1032795	0					
ANR	1033335	CompoundStatement		71:51:2265:2265	1032795	1					
ANR	1033336	ContinueStatement	continue ;	381:5:9409:9417	1032795	0	True				
ANR	1033337	ExpressionStatement	"value_src = r_reg_get_value ( core -> dbg -> reg , item_src )"	383:4:9429:9483	1032795	3	True				
ANR	1033338	AssignmentExpression	"value_src = r_reg_get_value ( core -> dbg -> reg , item_src )"		1032795	0		=			
ANR	1033339	Identifier	value_src		1032795	0					
ANR	1033340	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src )"		1032795	1					
ANR	1033341	Callee	r_reg_get_value		1032795	0					
ANR	1033342	Identifier	r_reg_get_value		1032795	0					
ANR	1033343	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033344	Argument	core -> dbg -> reg		1032795	0					
ANR	1033345	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033346	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033347	Identifier	core		1032795	0					
ANR	1033348	Identifier	dbg		1032795	1					
ANR	1033349	Identifier	reg		1032795	1					
ANR	1033350	Argument	item_src		1032795	1					
ANR	1033351	Identifier	item_src		1032795	0					
ANR	1033352	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	384:4:9489:9529	1032795	4	True				
ANR	1033353	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1032795	0					
ANR	1033354	Callee	r_reg_arena_swap		1032795	0					
ANR	1033355	Identifier	r_reg_arena_swap		1032795	0					
ANR	1033356	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033357	Argument	core -> dbg -> reg		1032795	0					
ANR	1033358	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033359	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033360	Identifier	core		1032795	0					
ANR	1033361	Identifier	dbg		1032795	1					
ANR	1033362	Identifier	reg		1032795	1					
ANR	1033363	Argument	false		1032795	1					
ANR	1033364	Identifier	false		1032795	0					
ANR	1033365	ExpressionStatement	"diff_src = r_reg_get_value ( core -> dbg -> reg , item_src )"	385:4:9535:9588	1032795	5	True				
ANR	1033366	AssignmentExpression	"diff_src = r_reg_get_value ( core -> dbg -> reg , item_src )"		1032795	0		=			
ANR	1033367	Identifier	diff_src		1032795	0					
ANR	1033368	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src )"		1032795	1					
ANR	1033369	Callee	r_reg_get_value		1032795	0					
ANR	1033370	Identifier	r_reg_get_value		1032795	0					
ANR	1033371	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033372	Argument	core -> dbg -> reg		1032795	0					
ANR	1033373	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033374	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033375	Identifier	core		1032795	0					
ANR	1033376	Identifier	dbg		1032795	1					
ANR	1033377	Identifier	reg		1032795	1					
ANR	1033378	Argument	item_src		1032795	1					
ANR	1033379	Identifier	item_src		1032795	0					
ANR	1033380	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	386:4:9594:9634	1032795	6	True				
ANR	1033381	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1032795	0					
ANR	1033382	Callee	r_reg_arena_swap		1032795	0					
ANR	1033383	Identifier	r_reg_arena_swap		1032795	0					
ANR	1033384	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033385	Argument	core -> dbg -> reg		1032795	0					
ANR	1033386	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033387	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033388	Identifier	core		1032795	0					
ANR	1033389	Identifier	dbg		1032795	1					
ANR	1033390	Identifier	reg		1032795	1					
ANR	1033391	Argument	false		1032795	1					
ANR	1033392	Identifier	false		1032795	0					
ANR	1033393	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , item_src , diff_src )"	388:4:9668:9720	1032795	7	True				
ANR	1033394	CallExpression	"r_reg_set_value ( core -> dbg -> reg , item_src , diff_src )"		1032795	0					
ANR	1033395	Callee	r_reg_set_value		1032795	0					
ANR	1033396	Identifier	r_reg_set_value		1032795	0					
ANR	1033397	ArgumentList	core -> dbg -> reg		1032795	1					
ANR	1033398	Argument	core -> dbg -> reg		1032795	0					
ANR	1033399	PtrMemberAccess	core -> dbg -> reg		1032795	0					
ANR	1033400	PtrMemberAccess	core -> dbg		1032795	0					
ANR	1033401	Identifier	core		1032795	0					
ANR	1033402	Identifier	dbg		1032795	1					
ANR	1033403	Identifier	reg		1032795	1					
ANR	1033404	Argument	item_src		1032795	1					
ANR	1033405	Identifier	item_src		1032795	0					
ANR	1033406	Argument	diff_src		1032795	2					
ANR	1033407	Identifier	diff_src		1032795	0					
ANR	1033408	IfStatement	if ( value_dst == value_src && value_dst != diff_dst )		1032795	8					
ANR	1033409	Condition	value_dst == value_src && value_dst != diff_dst	389:8:9730:9776	1032795	0	True				
ANR	1033410	AndExpression	value_dst == value_src && value_dst != diff_dst		1032795	0		&&			
ANR	1033411	EqualityExpression	value_dst == value_src		1032795	0		==			
ANR	1033412	Identifier	value_dst		1032795	0					
ANR	1033413	Identifier	value_src		1032795	1					
ANR	1033414	EqualityExpression	value_dst != diff_dst		1032795	1		!=			
ANR	1033415	Identifier	value_dst		1032795	0					
ANR	1033416	Identifier	diff_dst		1032795	1					
ANR	1033417	CompoundStatement		80:57:2642:2642	1032795	1					
ANR	1033418	ExpressionStatement	"mov = r_str_appendf ( mov , ""%s <-- %s;"" , item_dst -> name , item_src -> name )"	390:5:9786:9863	1032795	0	True				
ANR	1033419	AssignmentExpression	"mov = r_str_appendf ( mov , ""%s <-- %s;"" , item_dst -> name , item_src -> name )"		1032795	0		=			
ANR	1033420	Identifier	mov		1032795	0					
ANR	1033421	CallExpression	"r_str_appendf ( mov , ""%s <-- %s;"" , item_dst -> name , item_src -> name )"		1032795	1					
ANR	1033422	Callee	r_str_appendf		1032795	0					
ANR	1033423	Identifier	r_str_appendf		1032795	0					
ANR	1033424	ArgumentList	mov		1032795	1					
ANR	1033425	Argument	mov		1032795	0					
ANR	1033426	Identifier	mov		1032795	0					
ANR	1033427	Argument	"""%s <-- %s;"""		1032795	1					
ANR	1033428	PrimaryExpression	"""%s <-- %s;"""		1032795	0					
ANR	1033429	Argument	item_dst -> name		1032795	2					
ANR	1033430	PtrMemberAccess	item_dst -> name		1032795	0					
ANR	1033431	Identifier	item_dst		1032795	0					
ANR	1033432	Identifier	name		1032795	1					
ANR	1033433	Argument	item_src -> name		1032795	3					
ANR	1033434	PtrMemberAccess	item_src -> name		1032795	0					
ANR	1033435	Identifier	item_src		1032795	0					
ANR	1033436	Identifier	name		1032795	1					
ANR	1033437	Label	continue_error :	395:0:9880:9894	1032795	19	True				
ANR	1033438	Identifier	continue_error		1032795	0					
ANR	1033439	ExpressionStatement	FREE_ROP	396:2:9898:9906	1032795	20	True				
ANR	1033440	Identifier	FREE_ROP		1032795	0					
ANR	1033441	ReturnStatement	return mov ;	398:1:9912:9922	1032795	18	True				
ANR	1033442	Identifier	mov		1032795	0					
ANR	1033443	Label	out_error :	399:0:9924:9933	1032795	19	True				
ANR	1033444	Identifier	out_error		1032795	0					
ANR	1033445	ExpressionStatement	FREE_ROP	400:1:9936:9944	1032795	20	True				
ANR	1033446	Identifier	FREE_ROP		1032795	0					
ANR	1033447	ReturnStatement	return NULL ;	401:1:9947:9958	1032795	21	True				
ANR	1033448	Identifier	NULL		1032795	0					
ANR	1033449	ReturnType	static char *		1032795	1					
ANR	1033450	Identifier	rop_classify_mov		1032795	2					
ANR	1033451	ParameterList	"RCore * core , RList * ropList"		1032795	3					
ANR	1033452	Parameter	RCore * core	310:30:7107:7117	1032795	0	True				
ANR	1033453	ParameterType	RCore *		1032795	0					
ANR	1033454	Identifier	core		1032795	1					
ANR	1033455	Parameter	RList * ropList	310:43:7120:7133	1032795	1	True				
ANR	1033456	ParameterType	RList *		1032795	0					
ANR	1033457	Identifier	ropList		1032795	1					
ANR	1033458	CFGEntryNode	ENTRY		1032795		True				
ANR	1033459	CFGExitNode	EXIT		1032795		True				
ANR	1033460	CFGErrorNode	ERROR		1032795		True				
ANR	1033461	Symbol	* item_dst		1032795						
ANR	1033462	Symbol	romem		1032795						
ANR	1033463	Symbol	& esil_main		1032795						
ANR	1033464	Symbol	item_src		1032795						
ANR	1033465	Symbol	ops_list		1032795						
ANR	1033466	Symbol	item_src -> name		1032795						
ANR	1033467	Symbol	isFlag		1032795						
ANR	1033468	Symbol	mov		1032795						
ANR	1033469	Symbol	stats		1032795						
ANR	1033470	Symbol	* core -> anal -> esil		1032795						
ANR	1033471	Symbol	value_dst		1032795						
ANR	1033472	Symbol	diff_src		1032795						
ANR	1033473	Symbol	* * core -> anal		1032795						
ANR	1033474	Symbol	core -> anal -> esil		1032795						
ANR	1033475	Symbol	strcmp		1032795						
ANR	1033476	Symbol	* item_src		1032795						
ANR	1033477	Symbol	NULL		1032795						
ANR	1033478	Symbol	parse_list		1032795						
ANR	1033479	Symbol	reg_write		1032795						
ANR	1033480	Symbol	r_reg_get_list		1032795						
ANR	1033481	Symbol	esil_main		1032795						
ANR	1033482	Symbol	sdb_querys		1032795						
ANR	1033483	Symbol	mem_write		1032795						
ANR	1033484	Symbol	item_dst		1032795						
ANR	1033485	Symbol	& esil_flg		1032795						
ANR	1033486	Symbol	ropList		1032795						
ANR	1033487	Symbol	reg_read		1032795						
ANR	1033488	Symbol	core		1032795						
ANR	1033489	Symbol	* * * core		1032795						
ANR	1033490	Symbol	r_list_find		1032795						
ANR	1033491	Symbol	iter_r		1032795						
ANR	1033492	Symbol	strstr		1032795						
ANR	1033493	Symbol	r_config_get_i		1032795						
ANR	1033494	Symbol	diff_dst		1032795						
ANR	1033495	Symbol	r_str_appendf		1032795						
ANR	1033496	Symbol	flg_read		1032795						
ANR	1033497	Symbol	* core -> dbg		1032795						
ANR	1033498	Symbol	item_dst -> name		1032795						
ANR	1033499	Symbol	flg_write		1032795						
ANR	1033500	Symbol	iter_src		1032795						
ANR	1033501	Symbol	* core		1032795						
ANR	1033502	Symbol	esil_str		1032795						
ANR	1033503	Symbol	core -> anal		1032795						
ANR	1033504	Symbol	out		1032795						
ANR	1033505	Symbol	head		1032795						
ANR	1033506	Symbol	* * core		1032795						
ANR	1033507	Symbol	core -> config		1032795						
ANR	1033508	Symbol	r_reg_get_value		1032795						
ANR	1033509	Symbol	iter_dst		1032795						
ANR	1033510	Symbol	mem_read		1032795						
ANR	1033511	Symbol	false		1032795						
ANR	1033512	Symbol	* core -> anal		1032795						
ANR	1033513	Symbol	core -> dbg -> reg		1032795						
ANR	1033514	Symbol	value_src		1032795						
ANR	1033515	Symbol	core -> anal -> esil -> stats		1032795						
ANR	1033516	Symbol	esil_flg		1032795						
ANR	1033517	Symbol	core -> dbg		1032795						
ANR	1033518	Function	rop_classify_arithmetic	404:0:9963:14380							
ANR	1033519	FunctionDef	"rop_classify_arithmetic (RCore * core , RList * ropList)"		1033518	0					
ANR	1033520	CompoundStatement		404:66:10029:14380	1033518	0					
ANR	1033521	IdentifierDeclStatement	"char * esil_str , * op ;"	405:1:10032:10051	1033518	0	True				
ANR	1033522	IdentifierDecl	* esil_str		1033518	0					
ANR	1033523	IdentifierDeclType	char *		1033518	0					
ANR	1033524	Identifier	esil_str		1033518	1					
ANR	1033525	IdentifierDecl	* op		1033518	1					
ANR	1033526	IdentifierDeclType	char *		1033518	0					
ANR	1033527	Identifier	op		1033518	1					
ANR	1033528	IdentifierDeclStatement	"char * arithmetic = NULL , * esil_flg = NULL , * esil_main = NULL , * out = NULL ;"	406:1:10054:10133	1033518	1	True				
ANR	1033529	IdentifierDecl	* arithmetic = NULL		1033518	0					
ANR	1033530	IdentifierDeclType	char *		1033518	0					
ANR	1033531	Identifier	arithmetic		1033518	1					
ANR	1033532	AssignmentExpression	* arithmetic = NULL		1033518	2		=			
ANR	1033533	Identifier	NULL		1033518	0					
ANR	1033534	Identifier	NULL		1033518	1					
ANR	1033535	IdentifierDecl	* esil_flg = NULL		1033518	1					
ANR	1033536	IdentifierDeclType	char *		1033518	0					
ANR	1033537	Identifier	esil_flg		1033518	1					
ANR	1033538	AssignmentExpression	* esil_flg = NULL		1033518	2		=			
ANR	1033539	Identifier	NULL		1033518	0					
ANR	1033540	Identifier	NULL		1033518	1					
ANR	1033541	IdentifierDecl	* esil_main = NULL		1033518	2					
ANR	1033542	IdentifierDeclType	char *		1033518	0					
ANR	1033543	Identifier	esil_main		1033518	1					
ANR	1033544	AssignmentExpression	* esil_main = NULL		1033518	2		=			
ANR	1033545	Identifier	NULL		1033518	0					
ANR	1033546	Identifier	NULL		1033518	1					
ANR	1033547	IdentifierDecl	* out = NULL		1033518	3					
ANR	1033548	IdentifierDeclType	char *		1033518	0					
ANR	1033549	Identifier	out		1033518	1					
ANR	1033550	AssignmentExpression	* out = NULL		1033518	2		=			
ANR	1033551	Identifier	NULL		1033518	0					
ANR	1033552	Identifier	NULL		1033518	1					
ANR	1033553	IdentifierDeclStatement	"RListIter * iter_src1 , * iter_src2 , * iter_r , * iter_dst , * iter_ops ;"	408:1:10136:10199	1033518	2	True				
ANR	1033554	IdentifierDecl	* iter_src1		1033518	0					
ANR	1033555	IdentifierDeclType	RListIter *		1033518	0					
ANR	1033556	Identifier	iter_src1		1033518	1					
ANR	1033557	IdentifierDecl	* iter_src2		1033518	1					
ANR	1033558	IdentifierDeclType	RListIter *		1033518	0					
ANR	1033559	Identifier	iter_src2		1033518	1					
ANR	1033560	IdentifierDecl	* iter_r		1033518	2					
ANR	1033561	IdentifierDeclType	RListIter *		1033518	0					
ANR	1033562	Identifier	iter_r		1033518	1					
ANR	1033563	IdentifierDecl	* iter_dst		1033518	3					
ANR	1033564	IdentifierDeclType	RListIter *		1033518	0					
ANR	1033565	Identifier	iter_dst		1033518	1					
ANR	1033566	IdentifierDecl	* iter_ops		1033518	4					
ANR	1033567	IdentifierDeclType	RListIter *		1033518	0					
ANR	1033568	Identifier	iter_ops		1033518	1					
ANR	1033569	IdentifierDeclStatement	"RRegItem * item_src1 , * item_src2 , * item_dst ;"	409:1:10202:10244	1033518	3	True				
ANR	1033570	IdentifierDecl	* item_src1		1033518	0					
ANR	1033571	IdentifierDeclType	RRegItem *		1033518	0					
ANR	1033572	Identifier	item_src1		1033518	1					
ANR	1033573	IdentifierDecl	* item_src2		1033518	1					
ANR	1033574	IdentifierDeclType	RRegItem *		1033518	0					
ANR	1033575	Identifier	item_src2		1033518	1					
ANR	1033576	IdentifierDecl	* item_dst		1033518	2					
ANR	1033577	IdentifierDeclType	RRegItem *		1033518	0					
ANR	1033578	Identifier	item_dst		1033518	1					
ANR	1033579	IdentifierDeclStatement	RList * head ;	410:1:10247:10258	1033518	4	True				
ANR	1033580	IdentifierDecl	* head		1033518	0					
ANR	1033581	IdentifierDeclType	RList *		1033518	0					
ANR	1033582	Identifier	head		1033518	1					
ANR	1033583	IdentifierDeclStatement	"RList * ops_list = NULL , * flg_read = NULL , * flg_write = NULL , * reg_read = NULL , * reg_write = NULL , * mem_read = NULL , * mem_write = NULL ;"	411:1:10261:10409	1033518	5	True				
ANR	1033584	IdentifierDecl	* ops_list = NULL		1033518	0					
ANR	1033585	IdentifierDeclType	RList *		1033518	0					
ANR	1033586	Identifier	ops_list		1033518	1					
ANR	1033587	AssignmentExpression	* ops_list = NULL		1033518	2		=			
ANR	1033588	Identifier	NULL		1033518	0					
ANR	1033589	Identifier	NULL		1033518	1					
ANR	1033590	IdentifierDecl	* flg_read = NULL		1033518	1					
ANR	1033591	IdentifierDeclType	RList *		1033518	0					
ANR	1033592	Identifier	flg_read		1033518	1					
ANR	1033593	AssignmentExpression	* flg_read = NULL		1033518	2		=			
ANR	1033594	Identifier	NULL		1033518	0					
ANR	1033595	Identifier	NULL		1033518	1					
ANR	1033596	IdentifierDecl	* flg_write = NULL		1033518	2					
ANR	1033597	IdentifierDeclType	RList *		1033518	0					
ANR	1033598	Identifier	flg_write		1033518	1					
ANR	1033599	AssignmentExpression	* flg_write = NULL		1033518	2		=			
ANR	1033600	Identifier	NULL		1033518	0					
ANR	1033601	Identifier	NULL		1033518	1					
ANR	1033602	IdentifierDecl	* reg_read = NULL		1033518	3					
ANR	1033603	IdentifierDeclType	RList *		1033518	0					
ANR	1033604	Identifier	reg_read		1033518	1					
ANR	1033605	AssignmentExpression	* reg_read = NULL		1033518	2		=			
ANR	1033606	Identifier	NULL		1033518	0					
ANR	1033607	Identifier	NULL		1033518	1					
ANR	1033608	IdentifierDecl	* reg_write = NULL		1033518	4					
ANR	1033609	IdentifierDeclType	RList *		1033518	0					
ANR	1033610	Identifier	reg_write		1033518	1					
ANR	1033611	AssignmentExpression	* reg_write = NULL		1033518	2		=			
ANR	1033612	Identifier	NULL		1033518	0					
ANR	1033613	Identifier	NULL		1033518	1					
ANR	1033614	IdentifierDecl	* mem_read = NULL		1033518	5					
ANR	1033615	IdentifierDeclType	RList *		1033518	0					
ANR	1033616	Identifier	mem_read		1033518	1					
ANR	1033617	AssignmentExpression	* mem_read = NULL		1033518	2		=			
ANR	1033618	Identifier	NULL		1033518	0					
ANR	1033619	Identifier	NULL		1033518	1					
ANR	1033620	IdentifierDecl	* mem_write = NULL		1033518	6					
ANR	1033621	IdentifierDeclType	RList *		1033518	0					
ANR	1033622	Identifier	mem_write		1033518	1					
ANR	1033623	AssignmentExpression	* mem_write = NULL		1033518	2		=			
ANR	1033624	Identifier	NULL		1033518	0					
ANR	1033625	Identifier	NULL		1033518	1					
ANR	1033626	IdentifierDeclStatement	"const bool romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	414:1:10412:10474	1033518	6	True				
ANR	1033627	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1033518	0					
ANR	1033628	IdentifierDeclType	const bool		1033518	0					
ANR	1033629	Identifier	romem		1033518	1					
ANR	1033630	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1033518	2		=			
ANR	1033631	Identifier	romem		1033518	0					
ANR	1033632	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		1033518	1					
ANR	1033633	Callee	r_config_get_i		1033518	0					
ANR	1033634	Identifier	r_config_get_i		1033518	0					
ANR	1033635	ArgumentList	core -> config		1033518	1					
ANR	1033636	Argument	core -> config		1033518	0					
ANR	1033637	PtrMemberAccess	core -> config		1033518	0					
ANR	1033638	Identifier	core		1033518	0					
ANR	1033639	Identifier	config		1033518	1					
ANR	1033640	Argument	"""esil.romem"""		1033518	1					
ANR	1033641	PrimaryExpression	"""esil.romem"""		1033518	0					
ANR	1033642	IdentifierDeclStatement	"const bool stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	415:1:10477:10539	1033518	7	True				
ANR	1033643	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1033518	0					
ANR	1033644	IdentifierDeclType	const bool		1033518	0					
ANR	1033645	Identifier	stats		1033518	1					
ANR	1033646	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1033518	2		=			
ANR	1033647	Identifier	stats		1033518	0					
ANR	1033648	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		1033518	1					
ANR	1033649	Callee	r_config_get_i		1033518	0					
ANR	1033650	Identifier	r_config_get_i		1033518	0					
ANR	1033651	ArgumentList	core -> config		1033518	1					
ANR	1033652	Argument	core -> config		1033518	0					
ANR	1033653	PtrMemberAccess	core -> config		1033518	0					
ANR	1033654	Identifier	core		1033518	0					
ANR	1033655	Identifier	config		1033518	1					
ANR	1033656	Argument	"""esil.stats"""		1033518	1					
ANR	1033657	PrimaryExpression	"""esil.stats"""		1033518	0					
ANR	1033658	IdentifierDeclStatement	ut64 * op_result = R_NEW0 ( ut64 ) ;	416:1:10542:10573	1033518	8	True				
ANR	1033659	IdentifierDecl	* op_result = R_NEW0 ( ut64 )		1033518	0					
ANR	1033660	IdentifierDeclType	ut64 *		1033518	0					
ANR	1033661	Identifier	op_result		1033518	1					
ANR	1033662	AssignmentExpression	* op_result = R_NEW0 ( ut64 )		1033518	2		=			
ANR	1033663	Identifier	op_result		1033518	0					
ANR	1033664	CallExpression	R_NEW0 ( ut64 )		1033518	1					
ANR	1033665	Callee	R_NEW0		1033518	0					
ANR	1033666	Identifier	R_NEW0		1033518	0					
ANR	1033667	ArgumentList	ut64		1033518	1					
ANR	1033668	Argument	ut64		1033518	0					
ANR	1033669	Identifier	ut64		1033518	0					
ANR	1033670	IdentifierDeclStatement	ut64 * op_result_r = R_NEW0 ( ut64 ) ;	417:1:10576:10609	1033518	9	True				
ANR	1033671	IdentifierDecl	* op_result_r = R_NEW0 ( ut64 )		1033518	0					
ANR	1033672	IdentifierDeclType	ut64 *		1033518	0					
ANR	1033673	Identifier	op_result_r		1033518	1					
ANR	1033674	AssignmentExpression	* op_result_r = R_NEW0 ( ut64 )		1033518	2		=			
ANR	1033675	Identifier	op_result_r		1033518	0					
ANR	1033676	CallExpression	R_NEW0 ( ut64 )		1033518	1					
ANR	1033677	Callee	R_NEW0		1033518	0					
ANR	1033678	Identifier	R_NEW0		1033518	0					
ANR	1033679	ArgumentList	ut64		1033518	1					
ANR	1033680	Argument	ut64		1033518	0					
ANR	1033681	Identifier	ut64		1033518	0					
ANR	1033682	IfStatement	if ( ! romem || ! stats )		1033518	10					
ANR	1033683	Condition	! romem || ! stats	419:5:10617:10632	1033518	0	True				
ANR	1033684	OrExpression	! romem || ! stats		1033518	0		||			
ANR	1033685	UnaryOperationExpression	! romem		1033518	0					
ANR	1033686	UnaryOperator	!		1033518	0					
ANR	1033687	Identifier	romem		1033518	1					
ANR	1033688	UnaryOperationExpression	! stats		1033518	1					
ANR	1033689	UnaryOperator	!		1033518	0					
ANR	1033690	Identifier	stats		1033518	1					
ANR	1033691	CompoundStatement		16:23:605:605	1033518	1					
ANR	1033692	ExpressionStatement	free ( op_result )	421:2:10707:10723	1033518	0	True				
ANR	1033693	CallExpression	free ( op_result )		1033518	0					
ANR	1033694	Callee	free		1033518	0					
ANR	1033695	Identifier	free		1033518	0					
ANR	1033696	ArgumentList	op_result		1033518	1					
ANR	1033697	Argument	op_result		1033518	0					
ANR	1033698	Identifier	op_result		1033518	0					
ANR	1033699	ExpressionStatement	free ( op_result_r )	422:2:10727:10745	1033518	1	True				
ANR	1033700	CallExpression	free ( op_result_r )		1033518	0					
ANR	1033701	Callee	free		1033518	0					
ANR	1033702	Identifier	free		1033518	0					
ANR	1033703	ArgumentList	op_result_r		1033518	1					
ANR	1033704	Argument	op_result_r		1033518	0					
ANR	1033705	Identifier	op_result_r		1033518	0					
ANR	1033706	ReturnStatement	return NULL ;	423:2:10749:10760	1033518	2	True				
ANR	1033707	Identifier	NULL		1033518	0					
ANR	1033708	Statement	r_list_foreach	426:1:10767:10780	1033518	11	True				
ANR	1033709	Statement	(	426:16:10782:10782	1033518	12	True				
ANR	1033710	Statement	ropList	426:17:10783:10789	1033518	13	True				
ANR	1033711	Statement	","	426:24:10790:10790	1033518	14	True				
ANR	1033712	Statement	iter_r	426:26:10792:10797	1033518	15	True				
ANR	1033713	Statement	","	426:32:10798:10798	1033518	16	True				
ANR	1033714	Statement	esil_str	426:34:10800:10807	1033518	17	True				
ANR	1033715	Statement	)	426:42:10808:10808	1033518	18	True				
ANR	1033716	CompoundStatement		23:44:780:780	1033518	19					
ANR	1033717	ExpressionStatement	fillRegisterValues ( core )	428:2:10847:10872	1033518	0	True				
ANR	1033718	CallExpression	fillRegisterValues ( core )		1033518	0					
ANR	1033719	Callee	fillRegisterValues		1033518	0					
ANR	1033720	Identifier	fillRegisterValues		1033518	0					
ANR	1033721	ArgumentList	core		1033518	1					
ANR	1033722	Argument	core		1033518	0					
ANR	1033723	Identifier	core		1033518	0					
ANR	1033724	ExpressionStatement	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"	429:2:10876:10917	1033518	1	True				
ANR	1033725	AssignmentExpression	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"		1033518	0		=			
ANR	1033726	Identifier	head		1033518	0					
ANR	1033727	CallExpression	"r_reg_get_list ( core -> dbg -> reg , 0 )"		1033518	1					
ANR	1033728	Callee	r_reg_get_list		1033518	0					
ANR	1033729	Identifier	r_reg_get_list		1033518	0					
ANR	1033730	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1033731	Argument	core -> dbg -> reg		1033518	0					
ANR	1033732	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1033733	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1033734	Identifier	core		1033518	0					
ANR	1033735	Identifier	dbg		1033518	1					
ANR	1033736	Identifier	reg		1033518	1					
ANR	1033737	Argument	0		1033518	1					
ANR	1033738	PrimaryExpression	0		1033518	0					
ANR	1033739	IfStatement	if ( ! head )		1033518	2					
ANR	1033740	Condition	! head	430:6:10925:10929	1033518	0	True				
ANR	1033741	UnaryOperationExpression	! head		1033518	0					
ANR	1033742	UnaryOperator	!		1033518	0					
ANR	1033743	Identifier	head		1033518	1					
ANR	1033744	CompoundStatement		27:13:902:902	1033518	1					
ANR	1033745	GotoStatement	goto out_error ;	431:3:10937:10951	1033518	0	True				
ANR	1033746	Identifier	out_error		1033518	0					
ANR	1033747	ExpressionStatement	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"	433:2:10959:11007	1033518	3	True				
ANR	1033748	CallExpression	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"		1033518	0					
ANR	1033749	Callee	esil_split_flg		1033518	0					
ANR	1033750	Identifier	esil_split_flg		1033518	0					
ANR	1033751	ArgumentList	esil_str		1033518	1					
ANR	1033752	Argument	esil_str		1033518	0					
ANR	1033753	Identifier	esil_str		1033518	0					
ANR	1033754	Argument	& esil_main		1033518	1					
ANR	1033755	UnaryOperationExpression	& esil_main		1033518	0					
ANR	1033756	UnaryOperator	&		1033518	0					
ANR	1033757	Identifier	esil_main		1033518	1					
ANR	1033758	Argument	& esil_flg		1033518	2					
ANR	1033759	UnaryOperationExpression	& esil_flg		1033518	0					
ANR	1033760	UnaryOperator	&		1033518	0					
ANR	1033761	Identifier	esil_flg		1033518	1					
ANR	1033762	IfStatement	if ( esil_main )		1033518	4					
ANR	1033763	Condition	esil_main	434:6:11015:11023	1033518	0	True				
ANR	1033764	Identifier	esil_main		1033518	0					
ANR	1033765	CompoundStatement		31:17:996:996	1033518	1					
ANR	1033766	ExpressionStatement	"cmd_anal_esil ( core , esil_main )"	435:3:11031:11062	1033518	0	True				
ANR	1033767	CallExpression	"cmd_anal_esil ( core , esil_main )"		1033518	0					
ANR	1033768	Callee	cmd_anal_esil		1033518	0					
ANR	1033769	Identifier	cmd_anal_esil		1033518	0					
ANR	1033770	ArgumentList	core		1033518	1					
ANR	1033771	Argument	core		1033518	0					
ANR	1033772	Identifier	core		1033518	0					
ANR	1033773	Argument	esil_main		1033518	1					
ANR	1033774	Identifier	esil_main		1033518	0					
ANR	1033775	ElseStatement	else		1033518	0					
ANR	1033776	CompoundStatement		33:9:1043:1043	1033518	0					
ANR	1033777	ExpressionStatement	"cmd_anal_esil ( core , esil_str )"	437:3:11078:11108	1033518	0	True				
ANR	1033778	CallExpression	"cmd_anal_esil ( core , esil_str )"		1033518	0					
ANR	1033779	Callee	cmd_anal_esil		1033518	0					
ANR	1033780	Identifier	cmd_anal_esil		1033518	0					
ANR	1033781	ArgumentList	core		1033518	1					
ANR	1033782	Argument	core		1033518	0					
ANR	1033783	Identifier	core		1033518	0					
ANR	1033784	Argument	esil_str		1033518	1					
ANR	1033785	Identifier	esil_str		1033518	0					
ANR	1033786	ExpressionStatement	"out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"	439:2:11116:11172	1033518	5	True				
ANR	1033787	AssignmentExpression	"out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1033518	0		=			
ANR	1033788	Identifier	out		1033518	0					
ANR	1033789	CallExpression	"sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1033518	1					
ANR	1033790	Callee	sdb_querys		1033518	0					
ANR	1033791	Identifier	sdb_querys		1033518	0					
ANR	1033792	ArgumentList	core -> anal -> esil -> stats		1033518	1					
ANR	1033793	Argument	core -> anal -> esil -> stats		1033518	0					
ANR	1033794	PtrMemberAccess	core -> anal -> esil -> stats		1033518	0					
ANR	1033795	PtrMemberAccess	core -> anal -> esil		1033518	0					
ANR	1033796	PtrMemberAccess	core -> anal		1033518	0					
ANR	1033797	Identifier	core		1033518	0					
ANR	1033798	Identifier	anal		1033518	1					
ANR	1033799	Identifier	esil		1033518	1					
ANR	1033800	Identifier	stats		1033518	1					
ANR	1033801	Argument	NULL		1033518	1					
ANR	1033802	Identifier	NULL		1033518	0					
ANR	1033803	Argument	0		1033518	2					
ANR	1033804	PrimaryExpression	0		1033518	0					
ANR	1033805	Argument	"""*"""		1033518	3					
ANR	1033806	PrimaryExpression	"""*"""		1033518	0					
ANR	1033807	IfStatement	if ( ! out )		1033518	6					
ANR	1033808	Condition	! out	441:6:11207:11210	1033518	0	True				
ANR	1033809	UnaryOperationExpression	! out		1033518	0					
ANR	1033810	UnaryOperator	!		1033518	0					
ANR	1033811	Identifier	out		1033518	1					
ANR	1033812	CompoundStatement		38:12:1183:1183	1033518	1					
ANR	1033813	GotoStatement	goto continue_error ;	442:3:11218:11237	1033518	0	True				
ANR	1033814	Identifier	continue_error		1033518	0					
ANR	1033815	ExpressionStatement	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"	444:2:11245:11294	1033518	7	True				
ANR	1033816	AssignmentExpression	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"		1033518	0		=			
ANR	1033817	Identifier	ops_list		1033518	0					
ANR	1033818	CallExpression	"parse_list ( strstr ( out , ""ops.list"" ) )"		1033518	1					
ANR	1033819	Callee	parse_list		1033518	0					
ANR	1033820	Identifier	parse_list		1033518	0					
ANR	1033821	ArgumentList	"strstr ( out , ""ops.list"" )"		1033518	1					
ANR	1033822	Argument	"strstr ( out , ""ops.list"" )"		1033518	0					
ANR	1033823	CallExpression	"strstr ( out , ""ops.list"" )"		1033518	0					
ANR	1033824	Callee	strstr		1033518	0					
ANR	1033825	Identifier	strstr		1033518	0					
ANR	1033826	ArgumentList	out		1033518	1					
ANR	1033827	Argument	out		1033518	0					
ANR	1033828	Identifier	out		1033518	0					
ANR	1033829	Argument	"""ops.list"""		1033518	1					
ANR	1033830	PrimaryExpression	"""ops.list"""		1033518	0					
ANR	1033831	ExpressionStatement	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"	445:2:11298:11347	1033518	8	True				
ANR	1033832	AssignmentExpression	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"		1033518	0		=			
ANR	1033833	Identifier	flg_read		1033518	0					
ANR	1033834	CallExpression	"parse_list ( strstr ( out , ""flg.read"" ) )"		1033518	1					
ANR	1033835	Callee	parse_list		1033518	0					
ANR	1033836	Identifier	parse_list		1033518	0					
ANR	1033837	ArgumentList	"strstr ( out , ""flg.read"" )"		1033518	1					
ANR	1033838	Argument	"strstr ( out , ""flg.read"" )"		1033518	0					
ANR	1033839	CallExpression	"strstr ( out , ""flg.read"" )"		1033518	0					
ANR	1033840	Callee	strstr		1033518	0					
ANR	1033841	Identifier	strstr		1033518	0					
ANR	1033842	ArgumentList	out		1033518	1					
ANR	1033843	Argument	out		1033518	0					
ANR	1033844	Identifier	out		1033518	0					
ANR	1033845	Argument	"""flg.read"""		1033518	1					
ANR	1033846	PrimaryExpression	"""flg.read"""		1033518	0					
ANR	1033847	ExpressionStatement	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"	446:2:11351:11401	1033518	9	True				
ANR	1033848	AssignmentExpression	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"		1033518	0		=			
ANR	1033849	Identifier	flg_write		1033518	0					
ANR	1033850	CallExpression	"parse_list ( strstr ( out , ""flg.write"" ) )"		1033518	1					
ANR	1033851	Callee	parse_list		1033518	0					
ANR	1033852	Identifier	parse_list		1033518	0					
ANR	1033853	ArgumentList	"strstr ( out , ""flg.write"" )"		1033518	1					
ANR	1033854	Argument	"strstr ( out , ""flg.write"" )"		1033518	0					
ANR	1033855	CallExpression	"strstr ( out , ""flg.write"" )"		1033518	0					
ANR	1033856	Callee	strstr		1033518	0					
ANR	1033857	Identifier	strstr		1033518	0					
ANR	1033858	ArgumentList	out		1033518	1					
ANR	1033859	Argument	out		1033518	0					
ANR	1033860	Identifier	out		1033518	0					
ANR	1033861	Argument	"""flg.write"""		1033518	1					
ANR	1033862	PrimaryExpression	"""flg.write"""		1033518	0					
ANR	1033863	ExpressionStatement	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"	447:2:11405:11454	1033518	10	True				
ANR	1033864	AssignmentExpression	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"		1033518	0		=			
ANR	1033865	Identifier	reg_read		1033518	0					
ANR	1033866	CallExpression	"parse_list ( strstr ( out , ""reg.read"" ) )"		1033518	1					
ANR	1033867	Callee	parse_list		1033518	0					
ANR	1033868	Identifier	parse_list		1033518	0					
ANR	1033869	ArgumentList	"strstr ( out , ""reg.read"" )"		1033518	1					
ANR	1033870	Argument	"strstr ( out , ""reg.read"" )"		1033518	0					
ANR	1033871	CallExpression	"strstr ( out , ""reg.read"" )"		1033518	0					
ANR	1033872	Callee	strstr		1033518	0					
ANR	1033873	Identifier	strstr		1033518	0					
ANR	1033874	ArgumentList	out		1033518	1					
ANR	1033875	Argument	out		1033518	0					
ANR	1033876	Identifier	out		1033518	0					
ANR	1033877	Argument	"""reg.read"""		1033518	1					
ANR	1033878	PrimaryExpression	"""reg.read"""		1033518	0					
ANR	1033879	ExpressionStatement	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"	448:2:11458:11508	1033518	11	True				
ANR	1033880	AssignmentExpression	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"		1033518	0		=			
ANR	1033881	Identifier	reg_write		1033518	0					
ANR	1033882	CallExpression	"parse_list ( strstr ( out , ""reg.write"" ) )"		1033518	1					
ANR	1033883	Callee	parse_list		1033518	0					
ANR	1033884	Identifier	parse_list		1033518	0					
ANR	1033885	ArgumentList	"strstr ( out , ""reg.write"" )"		1033518	1					
ANR	1033886	Argument	"strstr ( out , ""reg.write"" )"		1033518	0					
ANR	1033887	CallExpression	"strstr ( out , ""reg.write"" )"		1033518	0					
ANR	1033888	Callee	strstr		1033518	0					
ANR	1033889	Identifier	strstr		1033518	0					
ANR	1033890	ArgumentList	out		1033518	1					
ANR	1033891	Argument	out		1033518	0					
ANR	1033892	Identifier	out		1033518	0					
ANR	1033893	Argument	"""reg.write"""		1033518	1					
ANR	1033894	PrimaryExpression	"""reg.write"""		1033518	0					
ANR	1033895	ExpressionStatement	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"	449:2:11512:11561	1033518	12	True				
ANR	1033896	AssignmentExpression	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"		1033518	0		=			
ANR	1033897	Identifier	mem_read		1033518	0					
ANR	1033898	CallExpression	"parse_list ( strstr ( out , ""mem.read"" ) )"		1033518	1					
ANR	1033899	Callee	parse_list		1033518	0					
ANR	1033900	Identifier	parse_list		1033518	0					
ANR	1033901	ArgumentList	"strstr ( out , ""mem.read"" )"		1033518	1					
ANR	1033902	Argument	"strstr ( out , ""mem.read"" )"		1033518	0					
ANR	1033903	CallExpression	"strstr ( out , ""mem.read"" )"		1033518	0					
ANR	1033904	Callee	strstr		1033518	0					
ANR	1033905	Identifier	strstr		1033518	0					
ANR	1033906	ArgumentList	out		1033518	1					
ANR	1033907	Argument	out		1033518	0					
ANR	1033908	Identifier	out		1033518	0					
ANR	1033909	Argument	"""mem.read"""		1033518	1					
ANR	1033910	PrimaryExpression	"""mem.read"""		1033518	0					
ANR	1033911	ExpressionStatement	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"	450:2:11565:11615	1033518	13	True				
ANR	1033912	AssignmentExpression	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"		1033518	0		=			
ANR	1033913	Identifier	mem_write		1033518	0					
ANR	1033914	CallExpression	"parse_list ( strstr ( out , ""mem.write"" ) )"		1033518	1					
ANR	1033915	Callee	parse_list		1033518	0					
ANR	1033916	Identifier	parse_list		1033518	0					
ANR	1033917	ArgumentList	"strstr ( out , ""mem.write"" )"		1033518	1					
ANR	1033918	Argument	"strstr ( out , ""mem.write"" )"		1033518	0					
ANR	1033919	CallExpression	"strstr ( out , ""mem.write"" )"		1033518	0					
ANR	1033920	Callee	strstr		1033518	0					
ANR	1033921	Identifier	strstr		1033518	0					
ANR	1033922	ArgumentList	out		1033518	1					
ANR	1033923	Argument	out		1033518	0					
ANR	1033924	Identifier	out		1033518	0					
ANR	1033925	Argument	"""mem.write"""		1033518	1					
ANR	1033926	PrimaryExpression	"""mem.write"""		1033518	0					
ANR	1033927	Statement	r_list_foreach	452:2:11620:11633	1033518	14	True				
ANR	1033928	Statement	(	452:17:11635:11635	1033518	15	True				
ANR	1033929	Statement	ops_list	452:18:11636:11643	1033518	16	True				
ANR	1033930	Statement	","	452:26:11644:11644	1033518	17	True				
ANR	1033931	Statement	iter_ops	452:28:11646:11653	1033518	18	True				
ANR	1033932	Statement	","	452:36:11654:11654	1033518	19	True				
ANR	1033933	Statement	op	452:38:11656:11657	1033518	20	True				
ANR	1033934	Statement	)	452:40:11658:11658	1033518	21	True				
ANR	1033935	CompoundStatement		49:42:1630:1630	1033518	22					
ANR	1033936	Statement	r_list_foreach	453:3:11665:11678	1033518	0	True				
ANR	1033937	Statement	(	453:18:11680:11680	1033518	1	True				
ANR	1033938	Statement	head	453:19:11681:11684	1033518	2	True				
ANR	1033939	Statement	","	453:23:11685:11685	1033518	3	True				
ANR	1033940	Statement	iter_src1	453:25:11687:11695	1033518	4	True				
ANR	1033941	Statement	","	453:34:11696:11696	1033518	5	True				
ANR	1033942	Statement	item_src1	453:36:11698:11706	1033518	6	True				
ANR	1033943	Statement	)	453:45:11707:11707	1033518	7	True				
ANR	1033944	CompoundStatement		51:4:1685:1711	1033518	8					
ANR	1033945	IdentifierDeclStatement	"ut64 value_src1 , diff_src1 ;"	454:4:11715:11741	1033518	0	True				
ANR	1033946	IdentifierDecl	value_src1		1033518	0					
ANR	1033947	IdentifierDeclType	ut64		1033518	0					
ANR	1033948	Identifier	value_src1		1033518	1					
ANR	1033949	IdentifierDecl	diff_src1		1033518	1					
ANR	1033950	IdentifierDeclType	ut64		1033518	0					
ANR	1033951	Identifier	diff_src1		1033518	1					
ANR	1033952	ExpressionStatement	"value_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"	456:4:11748:11804	1033518	1	True				
ANR	1033953	AssignmentExpression	"value_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1033518	0		=			
ANR	1033954	Identifier	value_src1		1033518	0					
ANR	1033955	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1033518	1					
ANR	1033956	Callee	r_reg_get_value		1033518	0					
ANR	1033957	Identifier	r_reg_get_value		1033518	0					
ANR	1033958	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1033959	Argument	core -> dbg -> reg		1033518	0					
ANR	1033960	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1033961	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1033962	Identifier	core		1033518	0					
ANR	1033963	Identifier	dbg		1033518	1					
ANR	1033964	Identifier	reg		1033518	1					
ANR	1033965	Argument	item_src1		1033518	1					
ANR	1033966	Identifier	item_src1		1033518	0					
ANR	1033967	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	457:4:11810:11850	1033518	2	True				
ANR	1033968	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1033518	0					
ANR	1033969	Callee	r_reg_arena_swap		1033518	0					
ANR	1033970	Identifier	r_reg_arena_swap		1033518	0					
ANR	1033971	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1033972	Argument	core -> dbg -> reg		1033518	0					
ANR	1033973	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1033974	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1033975	Identifier	core		1033518	0					
ANR	1033976	Identifier	dbg		1033518	1					
ANR	1033977	Identifier	reg		1033518	1					
ANR	1033978	Argument	false		1033518	1					
ANR	1033979	Identifier	false		1033518	0					
ANR	1033980	ExpressionStatement	"diff_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"	458:4:11856:11911	1033518	3	True				
ANR	1033981	AssignmentExpression	"diff_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1033518	0		=			
ANR	1033982	Identifier	diff_src1		1033518	0					
ANR	1033983	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1033518	1					
ANR	1033984	Callee	r_reg_get_value		1033518	0					
ANR	1033985	Identifier	r_reg_get_value		1033518	0					
ANR	1033986	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1033987	Argument	core -> dbg -> reg		1033518	0					
ANR	1033988	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1033989	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1033990	Identifier	core		1033518	0					
ANR	1033991	Identifier	dbg		1033518	1					
ANR	1033992	Identifier	reg		1033518	1					
ANR	1033993	Argument	item_src1		1033518	1					
ANR	1033994	Identifier	item_src1		1033518	0					
ANR	1033995	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	459:4:11917:11957	1033518	4	True				
ANR	1033996	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1033518	0					
ANR	1033997	Callee	r_reg_arena_swap		1033518	0					
ANR	1033998	Identifier	r_reg_arena_swap		1033518	0					
ANR	1033999	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1034000	Argument	core -> dbg -> reg		1033518	0					
ANR	1034001	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1034002	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1034003	Identifier	core		1033518	0					
ANR	1034004	Identifier	dbg		1033518	1					
ANR	1034005	Identifier	reg		1033518	1					
ANR	1034006	Argument	false		1033518	1					
ANR	1034007	Identifier	false		1033518	0					
ANR	1034008	IfStatement	"if ( ! r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp ) )"		1033518	5					
ANR	1034009	Condition	"! r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp )"	460:8:11967:12039	1033518	0	True				
ANR	1034010	UnaryOperationExpression	"! r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp )"		1033518	0					
ANR	1034011	UnaryOperator	!		1033518	0					
ANR	1034012	CallExpression	"r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp )"		1033518	1					
ANR	1034013	Callee	r_list_find		1033518	0					
ANR	1034014	Identifier	r_list_find		1033518	0					
ANR	1034015	ArgumentList	reg_read		1033518	1					
ANR	1034016	Argument	reg_read		1033518	0					
ANR	1034017	Identifier	reg_read		1033518	0					
ANR	1034018	Argument	item_src1 -> name		1033518	1					
ANR	1034019	PtrMemberAccess	item_src1 -> name		1033518	0					
ANR	1034020	Identifier	item_src1		1033518	0					
ANR	1034021	Identifier	name		1033518	1					
ANR	1034022	Argument	( RListComparator ) strcmp		1033518	2					
ANR	1034023	CastExpression	( RListComparator ) strcmp		1033518	0					
ANR	1034024	CastTarget	RListComparator		1033518	0					
ANR	1034025	Identifier	strcmp		1033518	1					
ANR	1034026	CompoundStatement		58:34:2012:2012	1033518	1					
ANR	1034027	ContinueStatement	continue ;	462:5:12049:12057	1033518	0	True				
ANR	1034028	Statement	r_list_foreach	465:4:12070:12083	1033518	6	True				
ANR	1034029	Statement	(	465:19:12085:12085	1033518	7	True				
ANR	1034030	Statement	head	465:20:12086:12089	1033518	8	True				
ANR	1034031	Statement	","	465:24:12090:12090	1033518	9	True				
ANR	1034032	Statement	iter_src2	465:26:12092:12100	1033518	10	True				
ANR	1034033	Statement	","	465:35:12101:12101	1033518	11	True				
ANR	1034034	Statement	item_src2	465:37:12103:12111	1033518	12	True				
ANR	1034035	Statement	)	465:46:12112:12112	1033518	13	True				
ANR	1034036	CompoundStatement		63:5:2091:2117	1033518	14					
ANR	1034037	IdentifierDeclStatement	"ut64 value_src2 , diff_src2 ;"	466:5:12121:12147	1033518	0	True				
ANR	1034038	IdentifierDecl	value_src2		1033518	0					
ANR	1034039	IdentifierDeclType	ut64		1033518	0					
ANR	1034040	Identifier	value_src2		1033518	1					
ANR	1034041	IdentifierDecl	diff_src2		1033518	1					
ANR	1034042	IdentifierDeclType	ut64		1033518	0					
ANR	1034043	Identifier	diff_src2		1033518	1					
ANR	1034044	ExpressionStatement	"value_src2 = r_reg_get_value ( core -> dbg -> reg , item_src2 )"	467:5:12154:12210	1033518	1	True				
ANR	1034045	AssignmentExpression	"value_src2 = r_reg_get_value ( core -> dbg -> reg , item_src2 )"		1033518	0		=			
ANR	1034046	Identifier	value_src2		1033518	0					
ANR	1034047	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src2 )"		1033518	1					
ANR	1034048	Callee	r_reg_get_value		1033518	0					
ANR	1034049	Identifier	r_reg_get_value		1033518	0					
ANR	1034050	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1034051	Argument	core -> dbg -> reg		1033518	0					
ANR	1034052	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1034053	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1034054	Identifier	core		1033518	0					
ANR	1034055	Identifier	dbg		1033518	1					
ANR	1034056	Identifier	reg		1033518	1					
ANR	1034057	Argument	item_src2		1033518	1					
ANR	1034058	Identifier	item_src2		1033518	0					
ANR	1034059	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	468:5:12217:12257	1033518	2	True				
ANR	1034060	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1033518	0					
ANR	1034061	Callee	r_reg_arena_swap		1033518	0					
ANR	1034062	Identifier	r_reg_arena_swap		1033518	0					
ANR	1034063	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1034064	Argument	core -> dbg -> reg		1033518	0					
ANR	1034065	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1034066	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1034067	Identifier	core		1033518	0					
ANR	1034068	Identifier	dbg		1033518	1					
ANR	1034069	Identifier	reg		1033518	1					
ANR	1034070	Argument	false		1033518	1					
ANR	1034071	Identifier	false		1033518	0					
ANR	1034072	ExpressionStatement	"diff_src2 = r_reg_get_value ( core -> dbg -> reg , item_src2 )"	469:5:12264:12319	1033518	3	True				
ANR	1034073	AssignmentExpression	"diff_src2 = r_reg_get_value ( core -> dbg -> reg , item_src2 )"		1033518	0		=			
ANR	1034074	Identifier	diff_src2		1033518	0					
ANR	1034075	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src2 )"		1033518	1					
ANR	1034076	Callee	r_reg_get_value		1033518	0					
ANR	1034077	Identifier	r_reg_get_value		1033518	0					
ANR	1034078	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1034079	Argument	core -> dbg -> reg		1033518	0					
ANR	1034080	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1034081	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1034082	Identifier	core		1033518	0					
ANR	1034083	Identifier	dbg		1033518	1					
ANR	1034084	Identifier	reg		1033518	1					
ANR	1034085	Argument	item_src2		1033518	1					
ANR	1034086	Identifier	item_src2		1033518	0					
ANR	1034087	IfStatement	"if ( ! r_list_find ( reg_read , item_src2 -> name , ( RListComparator ) strcmp ) )"		1033518	4					
ANR	1034088	Condition	"! r_list_find ( reg_read , item_src2 -> name , ( RListComparator ) strcmp )"	471:9:12331:12405	1033518	0	True				
ANR	1034089	UnaryOperationExpression	"! r_list_find ( reg_read , item_src2 -> name , ( RListComparator ) strcmp )"		1033518	0					
ANR	1034090	UnaryOperator	!		1033518	0					
ANR	1034091	CallExpression	"r_list_find ( reg_read , item_src2 -> name , ( RListComparator ) strcmp )"		1033518	1					
ANR	1034092	Callee	r_list_find		1033518	0					
ANR	1034093	Identifier	r_list_find		1033518	0					
ANR	1034094	ArgumentList	reg_read		1033518	1					
ANR	1034095	Argument	reg_read		1033518	0					
ANR	1034096	Identifier	reg_read		1033518	0					
ANR	1034097	Argument	item_src2 -> name		1033518	1					
ANR	1034098	PtrMemberAccess	item_src2 -> name		1033518	0					
ANR	1034099	Identifier	item_src2		1033518	0					
ANR	1034100	Identifier	name		1033518	1					
ANR	1034101	Argument	( RListComparator ) strcmp		1033518	2					
ANR	1034102	CastExpression	( RListComparator ) strcmp		1033518	0					
ANR	1034103	CastTarget	RListComparator		1033518	0					
ANR	1034104	Identifier	strcmp		1033518	1					
ANR	1034105	CompoundStatement		69:36:2378:2378	1033518	1					
ANR	1034106	ContinueStatement	continue ;	473:6:12416:12424	1033518	0	True				
ANR	1034107	IfStatement	if ( iter_src1 == iter_src2 )		1033518	5					
ANR	1034108	Condition	iter_src1 == iter_src2	476:9:12471:12492	1033518	0	True				
ANR	1034109	EqualityExpression	iter_src1 == iter_src2		1033518	0		==			
ANR	1034110	Identifier	iter_src1		1033518	0					
ANR	1034111	Identifier	iter_src2		1033518	1					
ANR	1034112	CompoundStatement		73:33:2465:2465	1033518	1					
ANR	1034113	ContinueStatement	continue ;	477:6:12503:12511	1033518	0	True				
ANR	1034114	Statement	r_list_foreach	480:5:12526:12539	1033518	6	True				
ANR	1034115	Statement	(	480:20:12541:12541	1033518	7	True				
ANR	1034116	Statement	head	480:21:12542:12545	1033518	8	True				
ANR	1034117	Statement	","	480:25:12546:12546	1033518	9	True				
ANR	1034118	Statement	iter_dst	480:27:12548:12555	1033518	10	True				
ANR	1034119	Statement	","	480:35:12556:12556	1033518	11	True				
ANR	1034120	Statement	item_dst	480:37:12558:12565	1033518	12	True				
ANR	1034121	Statement	)	480:45:12566:12566	1033518	13	True				
ANR	1034122	CompoundStatement		79:6:2568:2612	1033518	14					
ANR	1034123	IdentifierDeclStatement	ut64 value_dst ;	481:6:12576:12590	1033518	0	True				
ANR	1034124	IdentifierDecl	value_dst		1033518	0					
ANR	1034125	IdentifierDeclType	ut64		1033518	0					
ANR	1034126	Identifier	value_dst		1033518	1					
ANR	1034127	IdentifierDeclStatement	"bool redundant = false , simulate , simulate_r ;"	482:6:12598:12642	1033518	1	True				
ANR	1034128	IdentifierDecl	redundant = false		1033518	0					
ANR	1034129	IdentifierDeclType	bool		1033518	0					
ANR	1034130	Identifier	redundant		1033518	1					
ANR	1034131	AssignmentExpression	redundant = false		1033518	2		=			
ANR	1034132	Identifier	false		1033518	0					
ANR	1034133	Identifier	false		1033518	1					
ANR	1034134	IdentifierDecl	simulate		1033518	1					
ANR	1034135	IdentifierDeclType	bool		1033518	0					
ANR	1034136	Identifier	simulate		1033518	1					
ANR	1034137	IdentifierDecl	simulate_r		1033518	2					
ANR	1034138	IdentifierDeclType	bool		1033518	0					
ANR	1034139	Identifier	simulate_r		1033518	1					
ANR	1034140	ExpressionStatement	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"	484:6:12651:12705	1033518	2	True				
ANR	1034141	AssignmentExpression	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"		1033518	0		=			
ANR	1034142	Identifier	value_dst		1033518	0					
ANR	1034143	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_dst )"		1033518	1					
ANR	1034144	Callee	r_reg_get_value		1033518	0					
ANR	1034145	Identifier	r_reg_get_value		1033518	0					
ANR	1034146	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1034147	Argument	core -> dbg -> reg		1033518	0					
ANR	1034148	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1034149	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1034150	Identifier	core		1033518	0					
ANR	1034151	Identifier	dbg		1033518	1					
ANR	1034152	Identifier	reg		1033518	1					
ANR	1034153	Argument	item_dst		1033518	1					
ANR	1034154	Identifier	item_dst		1033518	0					
ANR	1034155	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	485:6:12713:12753	1033518	3	True				
ANR	1034156	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1033518	0					
ANR	1034157	Callee	r_reg_arena_swap		1033518	0					
ANR	1034158	Identifier	r_reg_arena_swap		1033518	0					
ANR	1034159	ArgumentList	core -> dbg -> reg		1033518	1					
ANR	1034160	Argument	core -> dbg -> reg		1033518	0					
ANR	1034161	PtrMemberAccess	core -> dbg -> reg		1033518	0					
ANR	1034162	PtrMemberAccess	core -> dbg		1033518	0					
ANR	1034163	Identifier	core		1033518	0					
ANR	1034164	Identifier	dbg		1033518	1					
ANR	1034165	Identifier	reg		1033518	1					
ANR	1034166	Argument	false		1033518	1					
ANR	1034167	Identifier	false		1033518	0					
ANR	1034168	IfStatement	"if ( ! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp ) )"		1033518	4					
ANR	1034169	Condition	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"	486:10:12765:12841	1033518	0	True				
ANR	1034170	UnaryOperationExpression	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1033518	0					
ANR	1034171	UnaryOperator	!		1033518	0					
ANR	1034172	CallExpression	"r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1033518	1					
ANR	1034173	Callee	r_list_find		1033518	0					
ANR	1034174	Identifier	r_list_find		1033518	0					
ANR	1034175	ArgumentList	reg_write		1033518	1					
ANR	1034176	Argument	reg_write		1033518	0					
ANR	1034177	Identifier	reg_write		1033518	0					
ANR	1034178	Argument	item_dst -> name		1033518	1					
ANR	1034179	PtrMemberAccess	item_dst -> name		1033518	0					
ANR	1034180	Identifier	item_dst		1033518	0					
ANR	1034181	Identifier	name		1033518	1					
ANR	1034182	Argument	( RListComparator ) strcmp		1033518	2					
ANR	1034183	CastExpression	( RListComparator ) strcmp		1033518	0					
ANR	1034184	CastTarget	RListComparator		1033518	0					
ANR	1034185	Identifier	strcmp		1033518	1					
ANR	1034186	CompoundStatement		84:38:2814:2814	1033518	1					
ANR	1034187	ContinueStatement	continue ;	488:7:12853:12861	1033518	0	True				
ANR	1034188	IfStatement	if ( isFlag ( item_dst ) )		1033518	5					
ANR	1034189	Condition	isFlag ( item_dst )	491:10:12923:12939	1033518	0	True				
ANR	1034190	CallExpression	isFlag ( item_dst )		1033518	0					
ANR	1034191	Callee	isFlag		1033518	0					
ANR	1034192	Identifier	isFlag		1033518	0					
ANR	1034193	ArgumentList	item_dst		1033518	1					
ANR	1034194	Argument	item_dst		1033518	0					
ANR	1034195	Identifier	item_dst		1033518	0					
ANR	1034196	CompoundStatement		88:29:2912:2912	1033518	1					
ANR	1034197	ContinueStatement	continue ;	492:7:12951:12959	1033518	0	True				
ANR	1034198	ExpressionStatement	"simulate = simulate_op ( op , value_src1 , value_src2 , diff_src1 , diff_src2 , op_result , item_dst -> size )"	494:6:12975:13075	1033518	6	True				
ANR	1034199	AssignmentExpression	"simulate = simulate_op ( op , value_src1 , value_src2 , diff_src1 , diff_src2 , op_result , item_dst -> size )"		1033518	0		=			
ANR	1034200	Identifier	simulate		1033518	0					
ANR	1034201	CallExpression	"simulate_op ( op , value_src1 , value_src2 , diff_src1 , diff_src2 , op_result , item_dst -> size )"		1033518	1					
ANR	1034202	Callee	simulate_op		1033518	0					
ANR	1034203	Identifier	simulate_op		1033518	0					
ANR	1034204	ArgumentList	op		1033518	1					
ANR	1034205	Argument	op		1033518	0					
ANR	1034206	Identifier	op		1033518	0					
ANR	1034207	Argument	value_src1		1033518	1					
ANR	1034208	Identifier	value_src1		1033518	0					
ANR	1034209	Argument	value_src2		1033518	2					
ANR	1034210	Identifier	value_src2		1033518	0					
ANR	1034211	Argument	diff_src1		1033518	3					
ANR	1034212	Identifier	diff_src1		1033518	0					
ANR	1034213	Argument	diff_src2		1033518	4					
ANR	1034214	Identifier	diff_src2		1033518	0					
ANR	1034215	Argument	op_result		1033518	5					
ANR	1034216	Identifier	op_result		1033518	0					
ANR	1034217	Argument	item_dst -> size		1033518	6					
ANR	1034218	PtrMemberAccess	item_dst -> size		1033518	0					
ANR	1034219	Identifier	item_dst		1033518	0					
ANR	1034220	Identifier	size		1033518	1					
ANR	1034221	ExpressionStatement	"simulate_r = simulate_op ( op , value_src2 , value_src1 , diff_src2 , diff_src1 , op_result_r , item_dst -> size )"	495:6:13083:13187	1033518	7	True				
ANR	1034222	AssignmentExpression	"simulate_r = simulate_op ( op , value_src2 , value_src1 , diff_src2 , diff_src1 , op_result_r , item_dst -> size )"		1033518	0		=			
ANR	1034223	Identifier	simulate_r		1033518	0					
ANR	1034224	CallExpression	"simulate_op ( op , value_src2 , value_src1 , diff_src2 , diff_src1 , op_result_r , item_dst -> size )"		1033518	1					
ANR	1034225	Callee	simulate_op		1033518	0					
ANR	1034226	Identifier	simulate_op		1033518	0					
ANR	1034227	ArgumentList	op		1033518	1					
ANR	1034228	Argument	op		1033518	0					
ANR	1034229	Identifier	op		1033518	0					
ANR	1034230	Argument	value_src2		1033518	1					
ANR	1034231	Identifier	value_src2		1033518	0					
ANR	1034232	Argument	value_src1		1033518	2					
ANR	1034233	Identifier	value_src1		1033518	0					
ANR	1034234	Argument	diff_src2		1033518	3					
ANR	1034235	Identifier	diff_src2		1033518	0					
ANR	1034236	Argument	diff_src1		1033518	4					
ANR	1034237	Identifier	diff_src1		1033518	0					
ANR	1034238	Argument	op_result_r		1033518	5					
ANR	1034239	Identifier	op_result_r		1033518	0					
ANR	1034240	Argument	item_dst -> size		1033518	6					
ANR	1034241	PtrMemberAccess	item_dst -> size		1033518	0					
ANR	1034242	Identifier	item_dst		1033518	0					
ANR	1034243	Identifier	size		1033518	1					
ANR	1034244	IfStatement	if ( simulate && value_dst == * op_result )		1033518	8					
ANR	1034245	Condition	simulate && value_dst == * op_result	496:52:13241:13275	1033518	0	True				
ANR	1034246	AndExpression	simulate && value_dst == * op_result		1033518	0		&&			
ANR	1034247	Identifier	simulate		1033518	0					
ANR	1034248	EqualityExpression	value_dst == * op_result		1033518	1		==			
ANR	1034249	Identifier	value_dst		1033518	0					
ANR	1034250	UnaryOperationExpression	* op_result		1033518	1					
ANR	1034251	UnaryOperator	*		1033518	0					
ANR	1034252	Identifier	op_result		1033518	1					
ANR	1034253	CompoundStatement		95:7:3306:3403	1033518	1					
ANR	1034254	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , item_src2 -> name ) ;"	498:7:13336:13433	1033518	0	True				
ANR	1034255	IdentifierDecl	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , item_src2 -> name )"		1033518	0					
ANR	1034256	IdentifierDeclType	char *		1033518	0					
ANR	1034257	Identifier	tmp		1033518	1					
ANR	1034258	AssignmentExpression	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , item_src2 -> name )"		1033518	2		=			
ANR	1034259	Identifier	tmp		1033518	0					
ANR	1034260	CallExpression	"r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , item_src2 -> name )"		1033518	1					
ANR	1034261	Callee	r_str_newf		1033518	0					
ANR	1034262	Identifier	r_str_newf		1033518	0					
ANR	1034263	ArgumentList	"""%s <-- %s %s %s;"""		1033518	1					
ANR	1034264	Argument	"""%s <-- %s %s %s;"""		1033518	0					
ANR	1034265	PrimaryExpression	"""%s <-- %s %s %s;"""		1033518	0					
ANR	1034266	Argument	item_dst -> name		1033518	1					
ANR	1034267	PtrMemberAccess	item_dst -> name		1033518	0					
ANR	1034268	Identifier	item_dst		1033518	0					
ANR	1034269	Identifier	name		1033518	1					
ANR	1034270	Argument	item_src1 -> name		1033518	2					
ANR	1034271	PtrMemberAccess	item_src1 -> name		1033518	0					
ANR	1034272	Identifier	item_src1		1033518	0					
ANR	1034273	Identifier	name		1033518	1					
ANR	1034274	Argument	op		1033518	3					
ANR	1034275	Identifier	op		1033518	0					
ANR	1034276	Argument	item_src2 -> name		1033518	4					
ANR	1034277	PtrMemberAccess	item_src2 -> name		1033518	0					
ANR	1034278	Identifier	item_src2		1033518	0					
ANR	1034279	Identifier	name		1033518	1					
ANR	1034280	IfStatement	"if ( arithmetic && ! strstr ( arithmetic , tmp ) )"		1033518	1					
ANR	1034281	Condition	"arithmetic && ! strstr ( arithmetic , tmp )"	499:11:13446:13484	1033518	0	True				
ANR	1034282	AndExpression	"arithmetic && ! strstr ( arithmetic , tmp )"		1033518	0		&&			
ANR	1034283	Identifier	arithmetic		1033518	0					
ANR	1034284	UnaryOperationExpression	"! strstr ( arithmetic , tmp )"		1033518	1					
ANR	1034285	UnaryOperator	!		1033518	0					
ANR	1034286	CallExpression	"strstr ( arithmetic , tmp )"		1033518	1					
ANR	1034287	Callee	strstr		1033518	0					
ANR	1034288	Identifier	strstr		1033518	0					
ANR	1034289	ArgumentList	arithmetic		1033518	1					
ANR	1034290	Argument	arithmetic		1033518	0					
ANR	1034291	Identifier	arithmetic		1033518	0					
ANR	1034292	Argument	tmp		1033518	1					
ANR	1034293	Identifier	tmp		1033518	0					
ANR	1034294	CompoundStatement		96:52:3457:3457	1033518	1					
ANR	1034295	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	500:8:13497:13540	1033518	0	True				
ANR	1034296	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1033518	0		=			
ANR	1034297	Identifier	arithmetic		1033518	0					
ANR	1034298	CallExpression	"r_str_append ( arithmetic , tmp )"		1033518	1					
ANR	1034299	Callee	r_str_append		1033518	0					
ANR	1034300	Identifier	r_str_append		1033518	0					
ANR	1034301	ArgumentList	arithmetic		1033518	1					
ANR	1034302	Argument	arithmetic		1033518	0					
ANR	1034303	Identifier	arithmetic		1033518	0					
ANR	1034304	Argument	tmp		1033518	1					
ANR	1034305	Identifier	tmp		1033518	0					
ANR	1034306	ElseStatement	else		1033518	0					
ANR	1034307	IfStatement	if ( ! arithmetic )		1033518	0					
ANR	1034308	Condition	! arithmetic	501:18:13560:13570	1033518	0	True				
ANR	1034309	UnaryOperationExpression	! arithmetic		1033518	0					
ANR	1034310	UnaryOperator	!		1033518	0					
ANR	1034311	Identifier	arithmetic		1033518	1					
ANR	1034312	CompoundStatement		98:31:3543:3543	1033518	1					
ANR	1034313	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	502:8:13583:13626	1033518	0	True				
ANR	1034314	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1033518	0		=			
ANR	1034315	Identifier	arithmetic		1033518	0					
ANR	1034316	CallExpression	"r_str_append ( arithmetic , tmp )"		1033518	1					
ANR	1034317	Callee	r_str_append		1033518	0					
ANR	1034318	Identifier	r_str_append		1033518	0					
ANR	1034319	ArgumentList	arithmetic		1033518	1					
ANR	1034320	Argument	arithmetic		1033518	0					
ANR	1034321	Identifier	arithmetic		1033518	0					
ANR	1034322	Argument	tmp		1033518	1					
ANR	1034323	Identifier	tmp		1033518	0					
ANR	1034324	ExpressionStatement	free ( tmp )	504:7:13644:13654	1033518	2	True				
ANR	1034325	CallExpression	free ( tmp )		1033518	0					
ANR	1034326	Callee	free		1033518	0					
ANR	1034327	Identifier	free		1033518	0					
ANR	1034328	ArgumentList	tmp		1033518	1					
ANR	1034329	Argument	tmp		1033518	0					
ANR	1034330	Identifier	tmp		1033518	0					
ANR	1034331	ExpressionStatement	redundant = true	505:7:13663:13679	1033518	3	True				
ANR	1034332	AssignmentExpression	redundant = true		1033518	0		=			
ANR	1034333	Identifier	redundant		1033518	0					
ANR	1034334	Identifier	true		1033518	1					
ANR	1034335	ElseStatement	else		1033518	0					
ANR	1034336	IfStatement	if ( ! redundant && simulate_r && value_dst == * op_result_r )		1033518	0					
ANR	1034337	Condition	! redundant && simulate_r && value_dst == * op_result_r	506:17:13698:13792	1033518	0	True				
ANR	1034338	AndExpression	! redundant && simulate_r && value_dst == * op_result_r		1033518	0		&&			
ANR	1034339	UnaryOperationExpression	! redundant		1033518	0					
ANR	1034340	UnaryOperator	!		1033518	0					
ANR	1034341	Identifier	redundant		1033518	1					
ANR	1034342	AndExpression	simulate_r && value_dst == * op_result_r		1033518	1		&&			
ANR	1034343	Identifier	simulate_r		1033518	0					
ANR	1034344	EqualityExpression	value_dst == * op_result_r		1033518	1		==			
ANR	1034345	Identifier	value_dst		1033518	0					
ANR	1034346	UnaryOperationExpression	* op_result_r		1033518	1					
ANR	1034347	UnaryOperator	*		1033518	0					
ANR	1034348	Identifier	op_result_r		1033518	1					
ANR	1034349	CompoundStatement		105:7:3831:3928	1033518	1					
ANR	1034350	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src2 -> name , op , item_src1 -> name ) ;"	508:7:13861:13958	1033518	0	True				
ANR	1034351	IdentifierDecl	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src2 -> name , op , item_src1 -> name )"		1033518	0					
ANR	1034352	IdentifierDeclType	char *		1033518	0					
ANR	1034353	Identifier	tmp		1033518	1					
ANR	1034354	AssignmentExpression	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src2 -> name , op , item_src1 -> name )"		1033518	2		=			
ANR	1034355	Identifier	tmp		1033518	0					
ANR	1034356	CallExpression	"r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src2 -> name , op , item_src1 -> name )"		1033518	1					
ANR	1034357	Callee	r_str_newf		1033518	0					
ANR	1034358	Identifier	r_str_newf		1033518	0					
ANR	1034359	ArgumentList	"""%s <-- %s %s %s;"""		1033518	1					
ANR	1034360	Argument	"""%s <-- %s %s %s;"""		1033518	0					
ANR	1034361	PrimaryExpression	"""%s <-- %s %s %s;"""		1033518	0					
ANR	1034362	Argument	item_dst -> name		1033518	1					
ANR	1034363	PtrMemberAccess	item_dst -> name		1033518	0					
ANR	1034364	Identifier	item_dst		1033518	0					
ANR	1034365	Identifier	name		1033518	1					
ANR	1034366	Argument	item_src2 -> name		1033518	2					
ANR	1034367	PtrMemberAccess	item_src2 -> name		1033518	0					
ANR	1034368	Identifier	item_src2		1033518	0					
ANR	1034369	Identifier	name		1033518	1					
ANR	1034370	Argument	op		1033518	3					
ANR	1034371	Identifier	op		1033518	0					
ANR	1034372	Argument	item_src1 -> name		1033518	4					
ANR	1034373	PtrMemberAccess	item_src1 -> name		1033518	0					
ANR	1034374	Identifier	item_src1		1033518	0					
ANR	1034375	Identifier	name		1033518	1					
ANR	1034376	IfStatement	"if ( arithmetic && ! strstr ( arithmetic , tmp ) )"		1033518	1					
ANR	1034377	Condition	"arithmetic && ! strstr ( arithmetic , tmp )"	509:11:13971:14009	1033518	0	True				
ANR	1034378	AndExpression	"arithmetic && ! strstr ( arithmetic , tmp )"		1033518	0		&&			
ANR	1034379	Identifier	arithmetic		1033518	0					
ANR	1034380	UnaryOperationExpression	"! strstr ( arithmetic , tmp )"		1033518	1					
ANR	1034381	UnaryOperator	!		1033518	0					
ANR	1034382	CallExpression	"strstr ( arithmetic , tmp )"		1033518	1					
ANR	1034383	Callee	strstr		1033518	0					
ANR	1034384	Identifier	strstr		1033518	0					
ANR	1034385	ArgumentList	arithmetic		1033518	1					
ANR	1034386	Argument	arithmetic		1033518	0					
ANR	1034387	Identifier	arithmetic		1033518	0					
ANR	1034388	Argument	tmp		1033518	1					
ANR	1034389	Identifier	tmp		1033518	0					
ANR	1034390	CompoundStatement		106:52:3982:3982	1033518	1					
ANR	1034391	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	510:8:14022:14065	1033518	0	True				
ANR	1034392	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1033518	0		=			
ANR	1034393	Identifier	arithmetic		1033518	0					
ANR	1034394	CallExpression	"r_str_append ( arithmetic , tmp )"		1033518	1					
ANR	1034395	Callee	r_str_append		1033518	0					
ANR	1034396	Identifier	r_str_append		1033518	0					
ANR	1034397	ArgumentList	arithmetic		1033518	1					
ANR	1034398	Argument	arithmetic		1033518	0					
ANR	1034399	Identifier	arithmetic		1033518	0					
ANR	1034400	Argument	tmp		1033518	1					
ANR	1034401	Identifier	tmp		1033518	0					
ANR	1034402	ElseStatement	else		1033518	0					
ANR	1034403	IfStatement	if ( ! arithmetic )		1033518	0					
ANR	1034404	Condition	! arithmetic	511:18:14085:14095	1033518	0	True				
ANR	1034405	UnaryOperationExpression	! arithmetic		1033518	0					
ANR	1034406	UnaryOperator	!		1033518	0					
ANR	1034407	Identifier	arithmetic		1033518	1					
ANR	1034408	CompoundStatement		108:31:4068:4068	1033518	1					
ANR	1034409	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	512:8:14108:14151	1033518	0	True				
ANR	1034410	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1033518	0		=			
ANR	1034411	Identifier	arithmetic		1033518	0					
ANR	1034412	CallExpression	"r_str_append ( arithmetic , tmp )"		1033518	1					
ANR	1034413	Callee	r_str_append		1033518	0					
ANR	1034414	Identifier	r_str_append		1033518	0					
ANR	1034415	ArgumentList	arithmetic		1033518	1					
ANR	1034416	Argument	arithmetic		1033518	0					
ANR	1034417	Identifier	arithmetic		1033518	0					
ANR	1034418	Argument	tmp		1033518	1					
ANR	1034419	Identifier	tmp		1033518	0					
ANR	1034420	ExpressionStatement	free ( tmp )	514:7:14169:14179	1033518	2	True				
ANR	1034421	CallExpression	free ( tmp )		1033518	0					
ANR	1034422	Callee	free		1033518	0					
ANR	1034423	Identifier	free		1033518	0					
ANR	1034424	ArgumentList	tmp		1033518	1					
ANR	1034425	Argument	tmp		1033518	0					
ANR	1034426	Identifier	tmp		1033518	0					
ANR	1034427	Label	continue_error :	520:0:14211:14225	1033518	23	True				
ANR	1034428	Identifier	continue_error		1033518	0					
ANR	1034429	ExpressionStatement	FREE_ROP	521:2:14230:14238	1033518	24	True				
ANR	1034430	Identifier	FREE_ROP		1033518	0					
ANR	1034431	ExpressionStatement	free ( op_result )	523:1:14244:14260	1033518	20	True				
ANR	1034432	CallExpression	free ( op_result )		1033518	0					
ANR	1034433	Callee	free		1033518	0					
ANR	1034434	Identifier	free		1033518	0					
ANR	1034435	ArgumentList	op_result		1033518	1					
ANR	1034436	Argument	op_result		1033518	0					
ANR	1034437	Identifier	op_result		1033518	0					
ANR	1034438	ExpressionStatement	free ( op_result_r )	524:1:14263:14281	1033518	21	True				
ANR	1034439	CallExpression	free ( op_result_r )		1033518	0					
ANR	1034440	Callee	free		1033518	0					
ANR	1034441	Identifier	free		1033518	0					
ANR	1034442	ArgumentList	op_result_r		1033518	1					
ANR	1034443	Argument	op_result_r		1033518	0					
ANR	1034444	Identifier	op_result_r		1033518	0					
ANR	1034445	ReturnStatement	return arithmetic ;	525:1:14284:14301	1033518	22	True				
ANR	1034446	Identifier	arithmetic		1033518	0					
ANR	1034447	Label	out_error :	526:0:14303:14312	1033518	23	True				
ANR	1034448	Identifier	out_error		1033518	0					
ANR	1034449	ExpressionStatement	FREE_ROP	527:1:14315:14323	1033518	24	True				
ANR	1034450	Identifier	FREE_ROP		1033518	0					
ANR	1034451	ExpressionStatement	free ( op_result )	528:1:14326:14342	1033518	25	True				
ANR	1034452	CallExpression	free ( op_result )		1033518	0					
ANR	1034453	Callee	free		1033518	0					
ANR	1034454	Identifier	free		1033518	0					
ANR	1034455	ArgumentList	op_result		1033518	1					
ANR	1034456	Argument	op_result		1033518	0					
ANR	1034457	Identifier	op_result		1033518	0					
ANR	1034458	ExpressionStatement	free ( op_result_r )	529:1:14346:14364	1033518	26	True				
ANR	1034459	CallExpression	free ( op_result_r )		1033518	0					
ANR	1034460	Callee	free		1033518	0					
ANR	1034461	Identifier	free		1033518	0					
ANR	1034462	ArgumentList	op_result_r		1033518	1					
ANR	1034463	Argument	op_result_r		1033518	0					
ANR	1034464	Identifier	op_result_r		1033518	0					
ANR	1034465	ReturnStatement	return NULL ;	530:1:14367:14378	1033518	27	True				
ANR	1034466	Identifier	NULL		1033518	0					
ANR	1034467	ReturnType	static char *		1033518	1					
ANR	1034468	Identifier	rop_classify_arithmetic		1033518	2					
ANR	1034469	ParameterList	"RCore * core , RList * ropList"		1033518	3					
ANR	1034470	Parameter	RCore * core	404:37:10000:10010	1033518	0	True				
ANR	1034471	ParameterType	RCore *		1033518	0					
ANR	1034472	Identifier	core		1033518	1					
ANR	1034473	Parameter	RList * ropList	404:50:10013:10026	1033518	1	True				
ANR	1034474	ParameterType	RList *		1033518	0					
ANR	1034475	Identifier	ropList		1033518	1					
ANR	1034476	CFGEntryNode	ENTRY		1033518		True				
ANR	1034477	CFGExitNode	EXIT		1033518		True				
ANR	1034478	CFGErrorNode	ERROR		1033518		True				
ANR	1034479	Symbol	* item_dst		1033518						
ANR	1034480	Symbol	romem		1033518						
ANR	1034481	Symbol	& esil_main		1033518						
ANR	1034482	Symbol	arithmetic		1033518						
ANR	1034483	Symbol	ops_list		1033518						
ANR	1034484	Symbol	* item_src1		1033518						
ANR	1034485	Symbol	value_src1		1033518						
ANR	1034486	Symbol	isFlag		1033518						
ANR	1034487	Symbol	stats		1033518						
ANR	1034488	Symbol	* core -> anal -> esil		1033518						
ANR	1034489	Symbol	diff_src1		1033518						
ANR	1034490	Symbol	value_src2		1033518						
ANR	1034491	Symbol	value_dst		1033518						
ANR	1034492	Symbol	simulate_r		1033518						
ANR	1034493	Symbol	tmp		1033518						
ANR	1034494	Symbol	* item_src2		1033518						
ANR	1034495	Symbol	* op_result_r		1033518						
ANR	1034496	Symbol	item_src1		1033518						
ANR	1034497	Symbol	* * core -> anal		1033518						
ANR	1034498	Symbol	diff_src2		1033518						
ANR	1034499	Symbol	item_src2		1033518						
ANR	1034500	Symbol	item_src1 -> name		1033518						
ANR	1034501	Symbol	core -> anal -> esil		1033518						
ANR	1034502	Symbol	simulate		1033518						
ANR	1034503	Symbol	strcmp		1033518						
ANR	1034504	Symbol	NULL		1033518						
ANR	1034505	Symbol	parse_list		1033518						
ANR	1034506	Symbol	reg_write		1033518						
ANR	1034507	Symbol	r_reg_get_list		1033518						
ANR	1034508	Symbol	esil_main		1033518						
ANR	1034509	Symbol	sdb_querys		1033518						
ANR	1034510	Symbol	mem_write		1033518						
ANR	1034511	Symbol	ut64		1033518						
ANR	1034512	Symbol	item_dst		1033518						
ANR	1034513	Symbol	& esil_flg		1033518						
ANR	1034514	Symbol	ropList		1033518						
ANR	1034515	Symbol	reg_read		1033518						
ANR	1034516	Symbol	core		1033518						
ANR	1034517	Symbol	R_NEW0		1033518						
ANR	1034518	Symbol	* * * core		1033518						
ANR	1034519	Symbol	r_list_find		1033518						
ANR	1034520	Symbol	iter_r		1033518						
ANR	1034521	Symbol	strstr		1033518						
ANR	1034522	Symbol	r_config_get_i		1033518						
ANR	1034523	Symbol	flg_read		1033518						
ANR	1034524	Symbol	true		1033518						
ANR	1034525	Symbol	item_dst -> size		1033518						
ANR	1034526	Symbol	* core -> dbg		1033518						
ANR	1034527	Symbol	item_dst -> name		1033518						
ANR	1034528	Symbol	r_str_append		1033518						
ANR	1034529	Symbol	flg_write		1033518						
ANR	1034530	Symbol	op_result_r		1033518						
ANR	1034531	Symbol	* core		1033518						
ANR	1034532	Symbol	r_str_newf		1033518						
ANR	1034533	Symbol	esil_str		1033518						
ANR	1034534	Symbol	core -> anal		1033518						
ANR	1034535	Symbol	redundant		1033518						
ANR	1034536	Symbol	out		1033518						
ANR	1034537	Symbol	head		1033518						
ANR	1034538	Symbol	op_result		1033518						
ANR	1034539	Symbol	item_src2 -> name		1033518						
ANR	1034540	Symbol	* * core		1033518						
ANR	1034541	Symbol	core -> config		1033518						
ANR	1034542	Symbol	op		1033518						
ANR	1034543	Symbol	r_reg_get_value		1033518						
ANR	1034544	Symbol	iter_dst		1033518						
ANR	1034545	Symbol	mem_read		1033518						
ANR	1034546	Symbol	* op_result		1033518						
ANR	1034547	Symbol	false		1033518						
ANR	1034548	Symbol	iter_ops		1033518						
ANR	1034549	Symbol	* core -> anal		1033518						
ANR	1034550	Symbol	core -> dbg -> reg		1033518						
ANR	1034551	Symbol	core -> anal -> esil -> stats		1033518						
ANR	1034552	Symbol	iter_src1		1033518						
ANR	1034553	Symbol	esil_flg		1033518						
ANR	1034554	Symbol	iter_src2		1033518						
ANR	1034555	Symbol	simulate_op		1033518						
ANR	1034556	Symbol	core -> dbg		1033518						
ANR	1034557	Function	rop_classify_arithmetic_const	533:0:14383:18644							
ANR	1034558	FunctionDef	"rop_classify_arithmetic_const (RCore * core , RList * ropList)"		1034557	0					
ANR	1034559	CompoundStatement		533:72:14455:18644	1034557	0					
ANR	1034560	IdentifierDeclStatement	"char * esil_str , * op , * constant ;"	534:1:14458:14488	1034557	0	True				
ANR	1034561	IdentifierDecl	* esil_str		1034557	0					
ANR	1034562	IdentifierDeclType	char *		1034557	0					
ANR	1034563	Identifier	esil_str		1034557	1					
ANR	1034564	IdentifierDecl	* op		1034557	1					
ANR	1034565	IdentifierDeclType	char *		1034557	0					
ANR	1034566	Identifier	op		1034557	1					
ANR	1034567	IdentifierDecl	* constant		1034557	2					
ANR	1034568	IdentifierDeclType	char *		1034557	0					
ANR	1034569	Identifier	constant		1034557	1					
ANR	1034570	IdentifierDeclStatement	"char * arithmetic = NULL , * esil_flg = NULL , * esil_main = NULL ;"	535:1:14491:14551	1034557	1	True				
ANR	1034571	IdentifierDecl	* arithmetic = NULL		1034557	0					
ANR	1034572	IdentifierDeclType	char *		1034557	0					
ANR	1034573	Identifier	arithmetic		1034557	1					
ANR	1034574	AssignmentExpression	* arithmetic = NULL		1034557	2		=			
ANR	1034575	Identifier	NULL		1034557	0					
ANR	1034576	Identifier	NULL		1034557	1					
ANR	1034577	IdentifierDecl	* esil_flg = NULL		1034557	1					
ANR	1034578	IdentifierDeclType	char *		1034557	0					
ANR	1034579	Identifier	esil_flg		1034557	1					
ANR	1034580	AssignmentExpression	* esil_flg = NULL		1034557	2		=			
ANR	1034581	Identifier	NULL		1034557	0					
ANR	1034582	Identifier	NULL		1034557	1					
ANR	1034583	IdentifierDecl	* esil_main = NULL		1034557	2					
ANR	1034584	IdentifierDeclType	char *		1034557	0					
ANR	1034585	Identifier	esil_main		1034557	1					
ANR	1034586	AssignmentExpression	* esil_main = NULL		1034557	2		=			
ANR	1034587	Identifier	NULL		1034557	0					
ANR	1034588	Identifier	NULL		1034557	1					
ANR	1034589	IdentifierDeclStatement	"RListIter * iter_src1 , * iter_r , * iter_dst , * iter_ops , * iter_const ;"	536:1:14554:14618	1034557	2	True				
ANR	1034590	IdentifierDecl	* iter_src1		1034557	0					
ANR	1034591	IdentifierDeclType	RListIter *		1034557	0					
ANR	1034592	Identifier	iter_src1		1034557	1					
ANR	1034593	IdentifierDecl	* iter_r		1034557	1					
ANR	1034594	IdentifierDeclType	RListIter *		1034557	0					
ANR	1034595	Identifier	iter_r		1034557	1					
ANR	1034596	IdentifierDecl	* iter_dst		1034557	2					
ANR	1034597	IdentifierDeclType	RListIter *		1034557	0					
ANR	1034598	Identifier	iter_dst		1034557	1					
ANR	1034599	IdentifierDecl	* iter_ops		1034557	3					
ANR	1034600	IdentifierDeclType	RListIter *		1034557	0					
ANR	1034601	Identifier	iter_ops		1034557	1					
ANR	1034602	IdentifierDecl	* iter_const		1034557	4					
ANR	1034603	IdentifierDeclType	RListIter *		1034557	0					
ANR	1034604	Identifier	iter_const		1034557	1					
ANR	1034605	IdentifierDeclStatement	"RRegItem * item_src1 , * item_dst ;"	537:1:14621:14651	1034557	3	True				
ANR	1034606	IdentifierDecl	* item_src1		1034557	0					
ANR	1034607	IdentifierDeclType	RRegItem *		1034557	0					
ANR	1034608	Identifier	item_src1		1034557	1					
ANR	1034609	IdentifierDecl	* item_dst		1034557	1					
ANR	1034610	IdentifierDeclType	RRegItem *		1034557	0					
ANR	1034611	Identifier	item_dst		1034557	1					
ANR	1034612	IdentifierDeclStatement	"RList * head , * constants ;"	538:1:14654:14677	1034557	4	True				
ANR	1034613	IdentifierDecl	* head		1034557	0					
ANR	1034614	IdentifierDeclType	RList *		1034557	0					
ANR	1034615	Identifier	head		1034557	1					
ANR	1034616	IdentifierDecl	* constants		1034557	1					
ANR	1034617	IdentifierDeclType	RList *		1034557	0					
ANR	1034618	Identifier	constants		1034557	1					
ANR	1034619	IdentifierDeclStatement	"RList * ops_list = NULL , * flg_read = NULL , * flg_write = NULL , * reg_read = NULL , * reg_write = NULL , * mem_read = NULL , * mem_write = NULL ;"	539:1:14680:14815	1034557	5	True				
ANR	1034620	IdentifierDecl	* ops_list = NULL		1034557	0					
ANR	1034621	IdentifierDeclType	RList *		1034557	0					
ANR	1034622	Identifier	ops_list		1034557	1					
ANR	1034623	AssignmentExpression	* ops_list = NULL		1034557	2		=			
ANR	1034624	Identifier	NULL		1034557	0					
ANR	1034625	Identifier	NULL		1034557	1					
ANR	1034626	IdentifierDecl	* flg_read = NULL		1034557	1					
ANR	1034627	IdentifierDeclType	RList *		1034557	0					
ANR	1034628	Identifier	flg_read		1034557	1					
ANR	1034629	AssignmentExpression	* flg_read = NULL		1034557	2		=			
ANR	1034630	Identifier	NULL		1034557	0					
ANR	1034631	Identifier	NULL		1034557	1					
ANR	1034632	IdentifierDecl	* flg_write = NULL		1034557	2					
ANR	1034633	IdentifierDeclType	RList *		1034557	0					
ANR	1034634	Identifier	flg_write		1034557	1					
ANR	1034635	AssignmentExpression	* flg_write = NULL		1034557	2		=			
ANR	1034636	Identifier	NULL		1034557	0					
ANR	1034637	Identifier	NULL		1034557	1					
ANR	1034638	IdentifierDecl	* reg_read = NULL		1034557	3					
ANR	1034639	IdentifierDeclType	RList *		1034557	0					
ANR	1034640	Identifier	reg_read		1034557	1					
ANR	1034641	AssignmentExpression	* reg_read = NULL		1034557	2		=			
ANR	1034642	Identifier	NULL		1034557	0					
ANR	1034643	Identifier	NULL		1034557	1					
ANR	1034644	IdentifierDecl	* reg_write = NULL		1034557	4					
ANR	1034645	IdentifierDeclType	RList *		1034557	0					
ANR	1034646	Identifier	reg_write		1034557	1					
ANR	1034647	AssignmentExpression	* reg_write = NULL		1034557	2		=			
ANR	1034648	Identifier	NULL		1034557	0					
ANR	1034649	Identifier	NULL		1034557	1					
ANR	1034650	IdentifierDecl	* mem_read = NULL		1034557	5					
ANR	1034651	IdentifierDeclType	RList *		1034557	0					
ANR	1034652	Identifier	mem_read		1034557	1					
ANR	1034653	AssignmentExpression	* mem_read = NULL		1034557	2		=			
ANR	1034654	Identifier	NULL		1034557	0					
ANR	1034655	Identifier	NULL		1034557	1					
ANR	1034656	IdentifierDecl	* mem_write = NULL		1034557	6					
ANR	1034657	IdentifierDeclType	RList *		1034557	0					
ANR	1034658	Identifier	mem_write		1034557	1					
ANR	1034659	AssignmentExpression	* mem_write = NULL		1034557	2		=			
ANR	1034660	Identifier	NULL		1034557	0					
ANR	1034661	Identifier	NULL		1034557	1					
ANR	1034662	IdentifierDeclStatement	"const bool romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	541:1:14818:14880	1034557	6	True				
ANR	1034663	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1034557	0					
ANR	1034664	IdentifierDeclType	const bool		1034557	0					
ANR	1034665	Identifier	romem		1034557	1					
ANR	1034666	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1034557	2		=			
ANR	1034667	Identifier	romem		1034557	0					
ANR	1034668	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		1034557	1					
ANR	1034669	Callee	r_config_get_i		1034557	0					
ANR	1034670	Identifier	r_config_get_i		1034557	0					
ANR	1034671	ArgumentList	core -> config		1034557	1					
ANR	1034672	Argument	core -> config		1034557	0					
ANR	1034673	PtrMemberAccess	core -> config		1034557	0					
ANR	1034674	Identifier	core		1034557	0					
ANR	1034675	Identifier	config		1034557	1					
ANR	1034676	Argument	"""esil.romem"""		1034557	1					
ANR	1034677	PrimaryExpression	"""esil.romem"""		1034557	0					
ANR	1034678	IdentifierDeclStatement	"const bool stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	542:1:14883:14945	1034557	7	True				
ANR	1034679	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1034557	0					
ANR	1034680	IdentifierDeclType	const bool		1034557	0					
ANR	1034681	Identifier	stats		1034557	1					
ANR	1034682	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1034557	2		=			
ANR	1034683	Identifier	stats		1034557	0					
ANR	1034684	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		1034557	1					
ANR	1034685	Callee	r_config_get_i		1034557	0					
ANR	1034686	Identifier	r_config_get_i		1034557	0					
ANR	1034687	ArgumentList	core -> config		1034557	1					
ANR	1034688	Argument	core -> config		1034557	0					
ANR	1034689	PtrMemberAccess	core -> config		1034557	0					
ANR	1034690	Identifier	core		1034557	0					
ANR	1034691	Identifier	config		1034557	1					
ANR	1034692	Argument	"""esil.stats"""		1034557	1					
ANR	1034693	PrimaryExpression	"""esil.stats"""		1034557	0					
ANR	1034694	IdentifierDeclStatement	ut64 * op_result = R_NEW0 ( ut64 ) ;	543:1:14948:14979	1034557	8	True				
ANR	1034695	IdentifierDecl	* op_result = R_NEW0 ( ut64 )		1034557	0					
ANR	1034696	IdentifierDeclType	ut64 *		1034557	0					
ANR	1034697	Identifier	op_result		1034557	1					
ANR	1034698	AssignmentExpression	* op_result = R_NEW0 ( ut64 )		1034557	2		=			
ANR	1034699	Identifier	op_result		1034557	0					
ANR	1034700	CallExpression	R_NEW0 ( ut64 )		1034557	1					
ANR	1034701	Callee	R_NEW0		1034557	0					
ANR	1034702	Identifier	R_NEW0		1034557	0					
ANR	1034703	ArgumentList	ut64		1034557	1					
ANR	1034704	Argument	ut64		1034557	0					
ANR	1034705	Identifier	ut64		1034557	0					
ANR	1034706	IdentifierDeclStatement	ut64 * op_result_r = R_NEW0 ( ut64 ) ;	544:1:14982:15015	1034557	9	True				
ANR	1034707	IdentifierDecl	* op_result_r = R_NEW0 ( ut64 )		1034557	0					
ANR	1034708	IdentifierDeclType	ut64 *		1034557	0					
ANR	1034709	Identifier	op_result_r		1034557	1					
ANR	1034710	AssignmentExpression	* op_result_r = R_NEW0 ( ut64 )		1034557	2		=			
ANR	1034711	Identifier	op_result_r		1034557	0					
ANR	1034712	CallExpression	R_NEW0 ( ut64 )		1034557	1					
ANR	1034713	Callee	R_NEW0		1034557	0					
ANR	1034714	Identifier	R_NEW0		1034557	0					
ANR	1034715	ArgumentList	ut64		1034557	1					
ANR	1034716	Argument	ut64		1034557	0					
ANR	1034717	Identifier	ut64		1034557	0					
ANR	1034718	IfStatement	if ( ! romem || ! stats )		1034557	10					
ANR	1034719	Condition	! romem || ! stats	546:5:15023:15038	1034557	0	True				
ANR	1034720	OrExpression	! romem || ! stats		1034557	0		||			
ANR	1034721	UnaryOperationExpression	! romem		1034557	0					
ANR	1034722	UnaryOperator	!		1034557	0					
ANR	1034723	Identifier	romem		1034557	1					
ANR	1034724	UnaryOperationExpression	! stats		1034557	1					
ANR	1034725	UnaryOperator	!		1034557	0					
ANR	1034726	Identifier	stats		1034557	1					
ANR	1034727	CompoundStatement		14:23:585:585	1034557	1					
ANR	1034728	ExpressionStatement	R_FREE ( op_result )	548:2:15113:15131	1034557	0	True				
ANR	1034729	CallExpression	R_FREE ( op_result )		1034557	0					
ANR	1034730	Callee	R_FREE		1034557	0					
ANR	1034731	Identifier	R_FREE		1034557	0					
ANR	1034732	ArgumentList	op_result		1034557	1					
ANR	1034733	Argument	op_result		1034557	0					
ANR	1034734	Identifier	op_result		1034557	0					
ANR	1034735	ExpressionStatement	R_FREE ( op_result_r )	549:2:15135:15155	1034557	1	True				
ANR	1034736	CallExpression	R_FREE ( op_result_r )		1034557	0					
ANR	1034737	Callee	R_FREE		1034557	0					
ANR	1034738	Identifier	R_FREE		1034557	0					
ANR	1034739	ArgumentList	op_result_r		1034557	1					
ANR	1034740	Argument	op_result_r		1034557	0					
ANR	1034741	Identifier	op_result_r		1034557	0					
ANR	1034742	ReturnStatement	return NULL ;	550:2:15159:15170	1034557	2	True				
ANR	1034743	Identifier	NULL		1034557	0					
ANR	1034744	Statement	r_list_foreach	553:1:15177:15190	1034557	11	True				
ANR	1034745	Statement	(	553:16:15192:15192	1034557	12	True				
ANR	1034746	Statement	ropList	553:17:15193:15199	1034557	13	True				
ANR	1034747	Statement	","	553:24:15200:15200	1034557	14	True				
ANR	1034748	Statement	iter_r	553:26:15202:15207	1034557	15	True				
ANR	1034749	Statement	","	553:32:15208:15208	1034557	16	True				
ANR	1034750	Statement	esil_str	553:34:15210:15217	1034557	17	True				
ANR	1034751	Statement	)	553:42:15218:15218	1034557	18	True				
ANR	1034752	CompoundStatement		40:2:1236:1298	1034557	19					
ANR	1034753	ExpressionStatement	constants = get_constants ( esil_str )	554:2:15224:15260	1034557	0	True				
ANR	1034754	AssignmentExpression	constants = get_constants ( esil_str )		1034557	0		=			
ANR	1034755	Identifier	constants		1034557	0					
ANR	1034756	CallExpression	get_constants ( esil_str )		1034557	1					
ANR	1034757	Callee	get_constants		1034557	0					
ANR	1034758	Identifier	get_constants		1034557	0					
ANR	1034759	ArgumentList	esil_str		1034557	1					
ANR	1034760	Argument	esil_str		1034557	0					
ANR	1034761	Identifier	esil_str		1034557	0					
ANR	1034762	IfStatement	if ( r_list_empty ( constants ) )		1034557	1					
ANR	1034763	Condition	r_list_empty ( constants )	556:6:15327:15350	1034557	0	True				
ANR	1034764	CallExpression	r_list_empty ( constants )		1034557	0					
ANR	1034765	Callee	r_list_empty		1034557	0					
ANR	1034766	Identifier	r_list_empty		1034557	0					
ANR	1034767	ArgumentList	constants		1034557	1					
ANR	1034768	Argument	constants		1034557	0					
ANR	1034769	Identifier	constants		1034557	0					
ANR	1034770	CompoundStatement		24:32:897:897	1034557	1					
ANR	1034771	ContinueStatement	continue ;	557:3:15358:15366	1034557	0	True				
ANR	1034772	ExpressionStatement	fillRegisterValues ( core )	560:2:15407:15432	1034557	2	True				
ANR	1034773	CallExpression	fillRegisterValues ( core )		1034557	0					
ANR	1034774	Callee	fillRegisterValues		1034557	0					
ANR	1034775	Identifier	fillRegisterValues		1034557	0					
ANR	1034776	ArgumentList	core		1034557	1					
ANR	1034777	Argument	core		1034557	0					
ANR	1034778	Identifier	core		1034557	0					
ANR	1034779	ExpressionStatement	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"	561:2:15436:15477	1034557	3	True				
ANR	1034780	AssignmentExpression	"head = r_reg_get_list ( core -> dbg -> reg , 0 )"		1034557	0		=			
ANR	1034781	Identifier	head		1034557	0					
ANR	1034782	CallExpression	"r_reg_get_list ( core -> dbg -> reg , 0 )"		1034557	1					
ANR	1034783	Callee	r_reg_get_list		1034557	0					
ANR	1034784	Identifier	r_reg_get_list		1034557	0					
ANR	1034785	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1034786	Argument	core -> dbg -> reg		1034557	0					
ANR	1034787	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1034788	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1034789	Identifier	core		1034557	0					
ANR	1034790	Identifier	dbg		1034557	1					
ANR	1034791	Identifier	reg		1034557	1					
ANR	1034792	Argument	0		1034557	1					
ANR	1034793	PrimaryExpression	0		1034557	0					
ANR	1034794	IfStatement	if ( ! head )		1034557	4					
ANR	1034795	Condition	! head	562:6:15485:15489	1034557	0	True				
ANR	1034796	UnaryOperationExpression	! head		1034557	0					
ANR	1034797	UnaryOperator	!		1034557	0					
ANR	1034798	Identifier	head		1034557	1					
ANR	1034799	CompoundStatement		30:13:1036:1036	1034557	1					
ANR	1034800	ExpressionStatement	arithmetic = NULL	563:3:15497:15514	1034557	0	True				
ANR	1034801	AssignmentExpression	arithmetic = NULL		1034557	0		=			
ANR	1034802	Identifier	arithmetic		1034557	0					
ANR	1034803	Identifier	NULL		1034557	1					
ANR	1034804	ContinueStatement	continue ;	564:3:15519:15527	1034557	1	True				
ANR	1034805	ExpressionStatement	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"	566:2:15535:15583	1034557	5	True				
ANR	1034806	CallExpression	"esil_split_flg ( esil_str , & esil_main , & esil_flg )"		1034557	0					
ANR	1034807	Callee	esil_split_flg		1034557	0					
ANR	1034808	Identifier	esil_split_flg		1034557	0					
ANR	1034809	ArgumentList	esil_str		1034557	1					
ANR	1034810	Argument	esil_str		1034557	0					
ANR	1034811	Identifier	esil_str		1034557	0					
ANR	1034812	Argument	& esil_main		1034557	1					
ANR	1034813	UnaryOperationExpression	& esil_main		1034557	0					
ANR	1034814	UnaryOperator	&		1034557	0					
ANR	1034815	Identifier	esil_main		1034557	1					
ANR	1034816	Argument	& esil_flg		1034557	2					
ANR	1034817	UnaryOperationExpression	& esil_flg		1034557	0					
ANR	1034818	UnaryOperator	&		1034557	0					
ANR	1034819	Identifier	esil_flg		1034557	1					
ANR	1034820	IfStatement	if ( esil_main )		1034557	6					
ANR	1034821	Condition	esil_main	567:6:15591:15599	1034557	0	True				
ANR	1034822	Identifier	esil_main		1034557	0					
ANR	1034823	CompoundStatement		35:17:1146:1146	1034557	1					
ANR	1034824	ExpressionStatement	"cmd_anal_esil ( core , esil_main )"	568:3:15607:15638	1034557	0	True				
ANR	1034825	CallExpression	"cmd_anal_esil ( core , esil_main )"		1034557	0					
ANR	1034826	Callee	cmd_anal_esil		1034557	0					
ANR	1034827	Identifier	cmd_anal_esil		1034557	0					
ANR	1034828	ArgumentList	core		1034557	1					
ANR	1034829	Argument	core		1034557	0					
ANR	1034830	Identifier	core		1034557	0					
ANR	1034831	Argument	esil_main		1034557	1					
ANR	1034832	Identifier	esil_main		1034557	0					
ANR	1034833	ElseStatement	else		1034557	0					
ANR	1034834	CompoundStatement		37:9:1193:1193	1034557	0					
ANR	1034835	ExpressionStatement	"cmd_anal_esil ( core , esil_str )"	570:3:15654:15684	1034557	0	True				
ANR	1034836	CallExpression	"cmd_anal_esil ( core , esil_str )"		1034557	0					
ANR	1034837	Callee	cmd_anal_esil		1034557	0					
ANR	1034838	Identifier	cmd_anal_esil		1034557	0					
ANR	1034839	ArgumentList	core		1034557	1					
ANR	1034840	Argument	core		1034557	0					
ANR	1034841	Identifier	core		1034557	0					
ANR	1034842	Argument	esil_str		1034557	1					
ANR	1034843	Identifier	esil_str		1034557	0					
ANR	1034844	IdentifierDeclStatement	"char * out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" ) ;"	572:2:15692:15754	1034557	7	True				
ANR	1034845	IdentifierDecl	"* out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1034557	0					
ANR	1034846	IdentifierDeclType	char *		1034557	0					
ANR	1034847	Identifier	out		1034557	1					
ANR	1034848	AssignmentExpression	"* out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1034557	2		=			
ANR	1034849	Identifier	out		1034557	0					
ANR	1034850	CallExpression	"sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1034557	1					
ANR	1034851	Callee	sdb_querys		1034557	0					
ANR	1034852	Identifier	sdb_querys		1034557	0					
ANR	1034853	ArgumentList	core -> anal -> esil -> stats		1034557	1					
ANR	1034854	Argument	core -> anal -> esil -> stats		1034557	0					
ANR	1034855	PtrMemberAccess	core -> anal -> esil -> stats		1034557	0					
ANR	1034856	PtrMemberAccess	core -> anal -> esil		1034557	0					
ANR	1034857	PtrMemberAccess	core -> anal		1034557	0					
ANR	1034858	Identifier	core		1034557	0					
ANR	1034859	Identifier	anal		1034557	1					
ANR	1034860	Identifier	esil		1034557	1					
ANR	1034861	Identifier	stats		1034557	1					
ANR	1034862	Argument	NULL		1034557	1					
ANR	1034863	Identifier	NULL		1034557	0					
ANR	1034864	Argument	0		1034557	2					
ANR	1034865	PrimaryExpression	0		1034557	0					
ANR	1034866	Argument	"""*"""		1034557	3					
ANR	1034867	PrimaryExpression	"""*"""		1034557	0					
ANR	1034868	IfStatement	if ( out )		1034557	8					
ANR	1034869	Condition	out	574:6:15789:15791	1034557	0	True				
ANR	1034870	Identifier	out		1034557	0					
ANR	1034871	CompoundStatement		42:11:1338:1338	1034557	1					
ANR	1034872	ExpressionStatement	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"	575:3:15799:15848	1034557	0	True				
ANR	1034873	AssignmentExpression	"ops_list = parse_list ( strstr ( out , ""ops.list"" ) )"		1034557	0		=			
ANR	1034874	Identifier	ops_list		1034557	0					
ANR	1034875	CallExpression	"parse_list ( strstr ( out , ""ops.list"" ) )"		1034557	1					
ANR	1034876	Callee	parse_list		1034557	0					
ANR	1034877	Identifier	parse_list		1034557	0					
ANR	1034878	ArgumentList	"strstr ( out , ""ops.list"" )"		1034557	1					
ANR	1034879	Argument	"strstr ( out , ""ops.list"" )"		1034557	0					
ANR	1034880	CallExpression	"strstr ( out , ""ops.list"" )"		1034557	0					
ANR	1034881	Callee	strstr		1034557	0					
ANR	1034882	Identifier	strstr		1034557	0					
ANR	1034883	ArgumentList	out		1034557	1					
ANR	1034884	Argument	out		1034557	0					
ANR	1034885	Identifier	out		1034557	0					
ANR	1034886	Argument	"""ops.list"""		1034557	1					
ANR	1034887	PrimaryExpression	"""ops.list"""		1034557	0					
ANR	1034888	ExpressionStatement	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"	576:3:15853:15902	1034557	1	True				
ANR	1034889	AssignmentExpression	"flg_read = parse_list ( strstr ( out , ""flg.read"" ) )"		1034557	0		=			
ANR	1034890	Identifier	flg_read		1034557	0					
ANR	1034891	CallExpression	"parse_list ( strstr ( out , ""flg.read"" ) )"		1034557	1					
ANR	1034892	Callee	parse_list		1034557	0					
ANR	1034893	Identifier	parse_list		1034557	0					
ANR	1034894	ArgumentList	"strstr ( out , ""flg.read"" )"		1034557	1					
ANR	1034895	Argument	"strstr ( out , ""flg.read"" )"		1034557	0					
ANR	1034896	CallExpression	"strstr ( out , ""flg.read"" )"		1034557	0					
ANR	1034897	Callee	strstr		1034557	0					
ANR	1034898	Identifier	strstr		1034557	0					
ANR	1034899	ArgumentList	out		1034557	1					
ANR	1034900	Argument	out		1034557	0					
ANR	1034901	Identifier	out		1034557	0					
ANR	1034902	Argument	"""flg.read"""		1034557	1					
ANR	1034903	PrimaryExpression	"""flg.read"""		1034557	0					
ANR	1034904	ExpressionStatement	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"	577:3:15907:15957	1034557	2	True				
ANR	1034905	AssignmentExpression	"flg_write = parse_list ( strstr ( out , ""flg.write"" ) )"		1034557	0		=			
ANR	1034906	Identifier	flg_write		1034557	0					
ANR	1034907	CallExpression	"parse_list ( strstr ( out , ""flg.write"" ) )"		1034557	1					
ANR	1034908	Callee	parse_list		1034557	0					
ANR	1034909	Identifier	parse_list		1034557	0					
ANR	1034910	ArgumentList	"strstr ( out , ""flg.write"" )"		1034557	1					
ANR	1034911	Argument	"strstr ( out , ""flg.write"" )"		1034557	0					
ANR	1034912	CallExpression	"strstr ( out , ""flg.write"" )"		1034557	0					
ANR	1034913	Callee	strstr		1034557	0					
ANR	1034914	Identifier	strstr		1034557	0					
ANR	1034915	ArgumentList	out		1034557	1					
ANR	1034916	Argument	out		1034557	0					
ANR	1034917	Identifier	out		1034557	0					
ANR	1034918	Argument	"""flg.write"""		1034557	1					
ANR	1034919	PrimaryExpression	"""flg.write"""		1034557	0					
ANR	1034920	ExpressionStatement	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"	578:3:15962:16011	1034557	3	True				
ANR	1034921	AssignmentExpression	"reg_read = parse_list ( strstr ( out , ""reg.read"" ) )"		1034557	0		=			
ANR	1034922	Identifier	reg_read		1034557	0					
ANR	1034923	CallExpression	"parse_list ( strstr ( out , ""reg.read"" ) )"		1034557	1					
ANR	1034924	Callee	parse_list		1034557	0					
ANR	1034925	Identifier	parse_list		1034557	0					
ANR	1034926	ArgumentList	"strstr ( out , ""reg.read"" )"		1034557	1					
ANR	1034927	Argument	"strstr ( out , ""reg.read"" )"		1034557	0					
ANR	1034928	CallExpression	"strstr ( out , ""reg.read"" )"		1034557	0					
ANR	1034929	Callee	strstr		1034557	0					
ANR	1034930	Identifier	strstr		1034557	0					
ANR	1034931	ArgumentList	out		1034557	1					
ANR	1034932	Argument	out		1034557	0					
ANR	1034933	Identifier	out		1034557	0					
ANR	1034934	Argument	"""reg.read"""		1034557	1					
ANR	1034935	PrimaryExpression	"""reg.read"""		1034557	0					
ANR	1034936	ExpressionStatement	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"	579:3:16016:16066	1034557	4	True				
ANR	1034937	AssignmentExpression	"reg_write = parse_list ( strstr ( out , ""reg.write"" ) )"		1034557	0		=			
ANR	1034938	Identifier	reg_write		1034557	0					
ANR	1034939	CallExpression	"parse_list ( strstr ( out , ""reg.write"" ) )"		1034557	1					
ANR	1034940	Callee	parse_list		1034557	0					
ANR	1034941	Identifier	parse_list		1034557	0					
ANR	1034942	ArgumentList	"strstr ( out , ""reg.write"" )"		1034557	1					
ANR	1034943	Argument	"strstr ( out , ""reg.write"" )"		1034557	0					
ANR	1034944	CallExpression	"strstr ( out , ""reg.write"" )"		1034557	0					
ANR	1034945	Callee	strstr		1034557	0					
ANR	1034946	Identifier	strstr		1034557	0					
ANR	1034947	ArgumentList	out		1034557	1					
ANR	1034948	Argument	out		1034557	0					
ANR	1034949	Identifier	out		1034557	0					
ANR	1034950	Argument	"""reg.write"""		1034557	1					
ANR	1034951	PrimaryExpression	"""reg.write"""		1034557	0					
ANR	1034952	ExpressionStatement	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"	580:3:16071:16120	1034557	5	True				
ANR	1034953	AssignmentExpression	"mem_read = parse_list ( strstr ( out , ""mem.read"" ) )"		1034557	0		=			
ANR	1034954	Identifier	mem_read		1034557	0					
ANR	1034955	CallExpression	"parse_list ( strstr ( out , ""mem.read"" ) )"		1034557	1					
ANR	1034956	Callee	parse_list		1034557	0					
ANR	1034957	Identifier	parse_list		1034557	0					
ANR	1034958	ArgumentList	"strstr ( out , ""mem.read"" )"		1034557	1					
ANR	1034959	Argument	"strstr ( out , ""mem.read"" )"		1034557	0					
ANR	1034960	CallExpression	"strstr ( out , ""mem.read"" )"		1034557	0					
ANR	1034961	Callee	strstr		1034557	0					
ANR	1034962	Identifier	strstr		1034557	0					
ANR	1034963	ArgumentList	out		1034557	1					
ANR	1034964	Argument	out		1034557	0					
ANR	1034965	Identifier	out		1034557	0					
ANR	1034966	Argument	"""mem.read"""		1034557	1					
ANR	1034967	PrimaryExpression	"""mem.read"""		1034557	0					
ANR	1034968	ExpressionStatement	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"	581:3:16125:16175	1034557	6	True				
ANR	1034969	AssignmentExpression	"mem_write = parse_list ( strstr ( out , ""mem.write"" ) )"		1034557	0		=			
ANR	1034970	Identifier	mem_write		1034557	0					
ANR	1034971	CallExpression	"parse_list ( strstr ( out , ""mem.write"" ) )"		1034557	1					
ANR	1034972	Callee	parse_list		1034557	0					
ANR	1034973	Identifier	parse_list		1034557	0					
ANR	1034974	ArgumentList	"strstr ( out , ""mem.write"" )"		1034557	1					
ANR	1034975	Argument	"strstr ( out , ""mem.write"" )"		1034557	0					
ANR	1034976	CallExpression	"strstr ( out , ""mem.write"" )"		1034557	0					
ANR	1034977	Callee	strstr		1034557	0					
ANR	1034978	Identifier	strstr		1034557	0					
ANR	1034979	ArgumentList	out		1034557	1					
ANR	1034980	Argument	out		1034557	0					
ANR	1034981	Identifier	out		1034557	0					
ANR	1034982	Argument	"""mem.write"""		1034557	1					
ANR	1034983	PrimaryExpression	"""mem.write"""		1034557	0					
ANR	1034984	ElseStatement	else		1034557	0					
ANR	1034985	CompoundStatement		50:9:1730:1730	1034557	0					
ANR	1034986	ExpressionStatement	R_FREE ( op_result )	583:3:16191:16209	1034557	0	True				
ANR	1034987	CallExpression	R_FREE ( op_result )		1034557	0					
ANR	1034988	Callee	R_FREE		1034557	0					
ANR	1034989	Identifier	R_FREE		1034557	0					
ANR	1034990	ArgumentList	op_result		1034557	1					
ANR	1034991	Argument	op_result		1034557	0					
ANR	1034992	Identifier	op_result		1034557	0					
ANR	1034993	ExpressionStatement	R_FREE ( op_result_r )	584:3:16214:16234	1034557	1	True				
ANR	1034994	CallExpression	R_FREE ( op_result_r )		1034557	0					
ANR	1034995	Callee	R_FREE		1034557	0					
ANR	1034996	Identifier	R_FREE		1034557	0					
ANR	1034997	ArgumentList	op_result_r		1034557	1					
ANR	1034998	Argument	op_result_r		1034557	0					
ANR	1034999	Identifier	op_result_r		1034557	0					
ANR	1035000	GotoStatement	goto continue_error ;	585:3:16239:16258	1034557	2	True				
ANR	1035001	Identifier	continue_error		1034557	0					
ANR	1035002	Statement	r_list_foreach	588:2:16267:16280	1034557	9	True				
ANR	1035003	Statement	(	588:17:16282:16282	1034557	10	True				
ANR	1035004	Statement	ops_list	588:18:16283:16290	1034557	11	True				
ANR	1035005	Statement	","	588:26:16291:16291	1034557	12	True				
ANR	1035006	Statement	iter_ops	588:28:16293:16300	1034557	13	True				
ANR	1035007	Statement	","	588:36:16301:16301	1034557	14	True				
ANR	1035008	Statement	op	588:38:16303:16304	1034557	15	True				
ANR	1035009	Statement	)	588:40:16305:16305	1034557	16	True				
ANR	1035010	CompoundStatement		56:42:1851:1851	1034557	17					
ANR	1035011	Statement	r_list_foreach	589:3:16312:16325	1034557	0	True				
ANR	1035012	Statement	(	589:18:16327:16327	1034557	1	True				
ANR	1035013	Statement	head	589:19:16328:16331	1034557	2	True				
ANR	1035014	Statement	","	589:23:16332:16332	1034557	3	True				
ANR	1035015	Statement	iter_src1	589:25:16334:16342	1034557	4	True				
ANR	1035016	Statement	","	589:34:16343:16343	1034557	5	True				
ANR	1035017	Statement	item_src1	589:36:16345:16353	1034557	6	True				
ANR	1035018	Statement	)	589:45:16354:16354	1034557	7	True				
ANR	1035019	CompoundStatement		58:4:1906:1932	1034557	8					
ANR	1035020	IdentifierDeclStatement	"ut64 value_src1 , diff_src1 ;"	590:4:16362:16388	1034557	0	True				
ANR	1035021	IdentifierDecl	value_src1		1034557	0					
ANR	1035022	IdentifierDeclType	ut64		1034557	0					
ANR	1035023	Identifier	value_src1		1034557	1					
ANR	1035024	IdentifierDecl	diff_src1		1034557	1					
ANR	1035025	IdentifierDeclType	ut64		1034557	0					
ANR	1035026	Identifier	diff_src1		1034557	1					
ANR	1035027	ExpressionStatement	"value_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"	591:4:16394:16450	1034557	1	True				
ANR	1035028	AssignmentExpression	"value_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1034557	0		=			
ANR	1035029	Identifier	value_src1		1034557	0					
ANR	1035030	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1034557	1					
ANR	1035031	Callee	r_reg_get_value		1034557	0					
ANR	1035032	Identifier	r_reg_get_value		1034557	0					
ANR	1035033	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035034	Argument	core -> dbg -> reg		1034557	0					
ANR	1035035	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035036	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035037	Identifier	core		1034557	0					
ANR	1035038	Identifier	dbg		1034557	1					
ANR	1035039	Identifier	reg		1034557	1					
ANR	1035040	Argument	item_src1		1034557	1					
ANR	1035041	Identifier	item_src1		1034557	0					
ANR	1035042	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	592:4:16456:16496	1034557	2	True				
ANR	1035043	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1034557	0					
ANR	1035044	Callee	r_reg_arena_swap		1034557	0					
ANR	1035045	Identifier	r_reg_arena_swap		1034557	0					
ANR	1035046	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035047	Argument	core -> dbg -> reg		1034557	0					
ANR	1035048	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035049	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035050	Identifier	core		1034557	0					
ANR	1035051	Identifier	dbg		1034557	1					
ANR	1035052	Identifier	reg		1034557	1					
ANR	1035053	Argument	false		1034557	1					
ANR	1035054	Identifier	false		1034557	0					
ANR	1035055	ExpressionStatement	"diff_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"	593:4:16502:16557	1034557	3	True				
ANR	1035056	AssignmentExpression	"diff_src1 = r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1034557	0		=			
ANR	1035057	Identifier	diff_src1		1034557	0					
ANR	1035058	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_src1 )"		1034557	1					
ANR	1035059	Callee	r_reg_get_value		1034557	0					
ANR	1035060	Identifier	r_reg_get_value		1034557	0					
ANR	1035061	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035062	Argument	core -> dbg -> reg		1034557	0					
ANR	1035063	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035064	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035065	Identifier	core		1034557	0					
ANR	1035066	Identifier	dbg		1034557	1					
ANR	1035067	Identifier	reg		1034557	1					
ANR	1035068	Argument	item_src1		1034557	1					
ANR	1035069	Identifier	item_src1		1034557	0					
ANR	1035070	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	594:4:16563:16603	1034557	4	True				
ANR	1035071	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1034557	0					
ANR	1035072	Callee	r_reg_arena_swap		1034557	0					
ANR	1035073	Identifier	r_reg_arena_swap		1034557	0					
ANR	1035074	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035075	Argument	core -> dbg -> reg		1034557	0					
ANR	1035076	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035077	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035078	Identifier	core		1034557	0					
ANR	1035079	Identifier	dbg		1034557	1					
ANR	1035080	Identifier	reg		1034557	1					
ANR	1035081	Argument	false		1034557	1					
ANR	1035082	Identifier	false		1034557	0					
ANR	1035083	IfStatement	"if ( ! r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp ) )"		1034557	5					
ANR	1035084	Condition	"! r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp )"	596:8:16614:16686	1034557	0	True				
ANR	1035085	UnaryOperationExpression	"! r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp )"		1034557	0					
ANR	1035086	UnaryOperator	!		1034557	0					
ANR	1035087	CallExpression	"r_list_find ( reg_read , item_src1 -> name , ( RListComparator ) strcmp )"		1034557	1					
ANR	1035088	Callee	r_list_find		1034557	0					
ANR	1035089	Identifier	r_list_find		1034557	0					
ANR	1035090	ArgumentList	reg_read		1034557	1					
ANR	1035091	Argument	reg_read		1034557	0					
ANR	1035092	Identifier	reg_read		1034557	0					
ANR	1035093	Argument	item_src1 -> name		1034557	1					
ANR	1035094	PtrMemberAccess	item_src1 -> name		1034557	0					
ANR	1035095	Identifier	item_src1		1034557	0					
ANR	1035096	Identifier	name		1034557	1					
ANR	1035097	Argument	( RListComparator ) strcmp		1034557	2					
ANR	1035098	CastExpression	( RListComparator ) strcmp		1034557	0					
ANR	1035099	CastTarget	RListComparator		1034557	0					
ANR	1035100	Identifier	strcmp		1034557	1					
ANR	1035101	CompoundStatement		65:34:2233:2233	1034557	1					
ANR	1035102	ContinueStatement	continue ;	598:5:16696:16704	1034557	0	True				
ANR	1035103	Statement	r_list_foreach	600:4:16716:16729	1034557	6	True				
ANR	1035104	Statement	(	600:19:16731:16731	1034557	7	True				
ANR	1035105	Statement	head	600:20:16732:16735	1034557	8	True				
ANR	1035106	Statement	","	600:24:16736:16736	1034557	9	True				
ANR	1035107	Statement	iter_dst	600:26:16738:16745	1034557	10	True				
ANR	1035108	Statement	","	600:34:16746:16746	1034557	11	True				
ANR	1035109	Statement	item_dst	600:36:16748:16755	1034557	12	True				
ANR	1035110	Statement	)	600:44:16756:16756	1034557	13	True				
ANR	1035111	CompoundStatement		70:5:2340:2384	1034557	14					
ANR	1035112	IdentifierDeclStatement	"ut64 value_dst , diff_dst ;"	601:5:16765:16789	1034557	0	True				
ANR	1035113	IdentifierDecl	value_dst		1034557	0					
ANR	1035114	IdentifierDeclType	ut64		1034557	0					
ANR	1035115	Identifier	value_dst		1034557	1					
ANR	1035116	IdentifierDecl	diff_dst		1034557	1					
ANR	1035117	IdentifierDeclType	ut64		1034557	0					
ANR	1035118	Identifier	diff_dst		1034557	1					
ANR	1035119	IdentifierDeclStatement	"bool redundant = false , simulate , simulate_r ;"	602:5:16796:16840	1034557	1	True				
ANR	1035120	IdentifierDecl	redundant = false		1034557	0					
ANR	1035121	IdentifierDeclType	bool		1034557	0					
ANR	1035122	Identifier	redundant		1034557	1					
ANR	1035123	AssignmentExpression	redundant = false		1034557	2		=			
ANR	1035124	Identifier	false		1034557	0					
ANR	1035125	Identifier	false		1034557	1					
ANR	1035126	IdentifierDecl	simulate		1034557	1					
ANR	1035127	IdentifierDeclType	bool		1034557	0					
ANR	1035128	Identifier	simulate		1034557	1					
ANR	1035129	IdentifierDecl	simulate_r		1034557	2					
ANR	1035130	IdentifierDeclType	bool		1034557	0					
ANR	1035131	Identifier	simulate_r		1034557	1					
ANR	1035132	ExpressionStatement	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"	603:5:16847:16901	1034557	2	True				
ANR	1035133	AssignmentExpression	"value_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"		1034557	0		=			
ANR	1035134	Identifier	value_dst		1034557	0					
ANR	1035135	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_dst )"		1034557	1					
ANR	1035136	Callee	r_reg_get_value		1034557	0					
ANR	1035137	Identifier	r_reg_get_value		1034557	0					
ANR	1035138	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035139	Argument	core -> dbg -> reg		1034557	0					
ANR	1035140	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035141	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035142	Identifier	core		1034557	0					
ANR	1035143	Identifier	dbg		1034557	1					
ANR	1035144	Identifier	reg		1034557	1					
ANR	1035145	Argument	item_dst		1034557	1					
ANR	1035146	Identifier	item_dst		1034557	0					
ANR	1035147	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	604:5:16908:16948	1034557	3	True				
ANR	1035148	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1034557	0					
ANR	1035149	Callee	r_reg_arena_swap		1034557	0					
ANR	1035150	Identifier	r_reg_arena_swap		1034557	0					
ANR	1035151	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035152	Argument	core -> dbg -> reg		1034557	0					
ANR	1035153	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035154	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035155	Identifier	core		1034557	0					
ANR	1035156	Identifier	dbg		1034557	1					
ANR	1035157	Identifier	reg		1034557	1					
ANR	1035158	Argument	false		1034557	1					
ANR	1035159	Identifier	false		1034557	0					
ANR	1035160	ExpressionStatement	"diff_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"	605:5:16955:17008	1034557	4	True				
ANR	1035161	AssignmentExpression	"diff_dst = r_reg_get_value ( core -> dbg -> reg , item_dst )"		1034557	0		=			
ANR	1035162	Identifier	diff_dst		1034557	0					
ANR	1035163	CallExpression	"r_reg_get_value ( core -> dbg -> reg , item_dst )"		1034557	1					
ANR	1035164	Callee	r_reg_get_value		1034557	0					
ANR	1035165	Identifier	r_reg_get_value		1034557	0					
ANR	1035166	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035167	Argument	core -> dbg -> reg		1034557	0					
ANR	1035168	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035169	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035170	Identifier	core		1034557	0					
ANR	1035171	Identifier	dbg		1034557	1					
ANR	1035172	Identifier	reg		1034557	1					
ANR	1035173	Argument	item_dst		1034557	1					
ANR	1035174	Identifier	item_dst		1034557	0					
ANR	1035175	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	606:5:17015:17055	1034557	5	True				
ANR	1035176	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		1034557	0					
ANR	1035177	Callee	r_reg_arena_swap		1034557	0					
ANR	1035178	Identifier	r_reg_arena_swap		1034557	0					
ANR	1035179	ArgumentList	core -> dbg -> reg		1034557	1					
ANR	1035180	Argument	core -> dbg -> reg		1034557	0					
ANR	1035181	PtrMemberAccess	core -> dbg -> reg		1034557	0					
ANR	1035182	PtrMemberAccess	core -> dbg		1034557	0					
ANR	1035183	Identifier	core		1034557	0					
ANR	1035184	Identifier	dbg		1034557	1					
ANR	1035185	Identifier	reg		1034557	1					
ANR	1035186	Argument	false		1034557	1					
ANR	1035187	Identifier	false		1034557	0					
ANR	1035188	IfStatement	"if ( ! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp ) )"		1034557	6					
ANR	1035189	Condition	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"	607:9:17066:17140	1034557	0	True				
ANR	1035190	UnaryOperationExpression	"! r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1034557	0					
ANR	1035191	UnaryOperator	!		1034557	0					
ANR	1035192	CallExpression	"r_list_find ( reg_write , item_dst -> name , ( RListComparator ) strcmp )"		1034557	1					
ANR	1035193	Callee	r_list_find		1034557	0					
ANR	1035194	Identifier	r_list_find		1034557	0					
ANR	1035195	ArgumentList	reg_write		1034557	1					
ANR	1035196	Argument	reg_write		1034557	0					
ANR	1035197	Identifier	reg_write		1034557	0					
ANR	1035198	Argument	item_dst -> name		1034557	1					
ANR	1035199	PtrMemberAccess	item_dst -> name		1034557	0					
ANR	1035200	Identifier	item_dst		1034557	0					
ANR	1035201	Identifier	name		1034557	1					
ANR	1035202	Argument	( RListComparator ) strcmp		1034557	2					
ANR	1035203	CastExpression	( RListComparator ) strcmp		1034557	0					
ANR	1035204	CastTarget	RListComparator		1034557	0					
ANR	1035205	Identifier	strcmp		1034557	1					
ANR	1035206	CompoundStatement		76:36:2687:2687	1034557	1					
ANR	1035207	ContinueStatement	continue ;	609:6:17151:17159	1034557	0	True				
ANR	1035208	IfStatement	if ( isFlag ( item_dst ) )		1034557	7					
ANR	1035209	Condition	isFlag ( item_dst )	612:9:17218:17234	1034557	0	True				
ANR	1035210	CallExpression	isFlag ( item_dst )		1034557	0					
ANR	1035211	Callee	isFlag		1034557	0					
ANR	1035212	Identifier	isFlag		1034557	0					
ANR	1035213	ArgumentList	item_dst		1034557	1					
ANR	1035214	Argument	item_dst		1034557	0					
ANR	1035215	Identifier	item_dst		1034557	0					
ANR	1035216	CompoundStatement		80:28:2781:2781	1034557	1					
ANR	1035217	ContinueStatement	continue ;	613:6:17245:17253	1034557	0	True				
ANR	1035218	IfStatement	if ( value_dst != diff_dst )		1034557	8					
ANR	1035219	Condition	value_dst != diff_dst	615:9:17271:17291	1034557	0	True				
ANR	1035220	EqualityExpression	value_dst != diff_dst		1034557	0		!=			
ANR	1035221	Identifier	value_dst		1034557	0					
ANR	1035222	Identifier	diff_dst		1034557	1					
ANR	1035223	CompoundStatement		83:32:2838:2838	1034557	1					
ANR	1035224	Statement	r_list_foreach	616:6:17302:17315	1034557	0	True				
ANR	1035225	Statement	(	616:21:17317:17317	1034557	1	True				
ANR	1035226	Statement	constants	616:22:17318:17326	1034557	2	True				
ANR	1035227	Statement	","	616:31:17327:17327	1034557	3	True				
ANR	1035228	Statement	iter_const	616:33:17329:17338	1034557	4	True				
ANR	1035229	Statement	","	616:43:17339:17339	1034557	5	True				
ANR	1035230	Statement	constant	616:45:17341:17348	1034557	6	True				
ANR	1035231	Statement	)	616:53:17349:17349	1034557	7	True				
ANR	1035232	CompoundStatement		85:7:2904:2946	1034557	8					
ANR	1035233	IdentifierDeclStatement	"ut64 value_ct = r_num_get ( NULL , constant ) ;"	617:7:17360:17402	1034557	0	True				
ANR	1035234	IdentifierDecl	"value_ct = r_num_get ( NULL , constant )"		1034557	0					
ANR	1035235	IdentifierDeclType	ut64		1034557	0					
ANR	1035236	Identifier	value_ct		1034557	1					
ANR	1035237	AssignmentExpression	"value_ct = r_num_get ( NULL , constant )"		1034557	2		=			
ANR	1035238	Identifier	value_ct		1034557	0					
ANR	1035239	CallExpression	"r_num_get ( NULL , constant )"		1034557	1					
ANR	1035240	Callee	r_num_get		1034557	0					
ANR	1035241	Identifier	r_num_get		1034557	0					
ANR	1035242	ArgumentList	NULL		1034557	1					
ANR	1035243	Argument	NULL		1034557	0					
ANR	1035244	Identifier	NULL		1034557	0					
ANR	1035245	Argument	constant		1034557	1					
ANR	1035246	Identifier	constant		1034557	0					
ANR	1035247	ExpressionStatement	"simulate = simulate_op ( op , value_src1 , value_ct , diff_src1 , value_ct , op_result , item_dst -> size )"	618:7:17411:17533	1034557	1	True				
ANR	1035248	AssignmentExpression	"simulate = simulate_op ( op , value_src1 , value_ct , diff_src1 , value_ct , op_result , item_dst -> size )"		1034557	0		=			
ANR	1035249	Identifier	simulate		1034557	0					
ANR	1035250	CallExpression	"simulate_op ( op , value_src1 , value_ct , diff_src1 , value_ct , op_result , item_dst -> size )"		1034557	1					
ANR	1035251	Callee	simulate_op		1034557	0					
ANR	1035252	Identifier	simulate_op		1034557	0					
ANR	1035253	ArgumentList	op		1034557	1					
ANR	1035254	Argument	op		1034557	0					
ANR	1035255	Identifier	op		1034557	0					
ANR	1035256	Argument	value_src1		1034557	1					
ANR	1035257	Identifier	value_src1		1034557	0					
ANR	1035258	Argument	value_ct		1034557	2					
ANR	1035259	Identifier	value_ct		1034557	0					
ANR	1035260	Argument	diff_src1		1034557	3					
ANR	1035261	Identifier	diff_src1		1034557	0					
ANR	1035262	Argument	value_ct		1034557	4					
ANR	1035263	Identifier	value_ct		1034557	0					
ANR	1035264	Argument	op_result		1034557	5					
ANR	1035265	Identifier	op_result		1034557	0					
ANR	1035266	Argument	item_dst -> size		1034557	6					
ANR	1035267	PtrMemberAccess	item_dst -> size		1034557	0					
ANR	1035268	Identifier	item_dst		1034557	0					
ANR	1035269	Identifier	size		1034557	1					
ANR	1035270	ExpressionStatement	"simulate_r = simulate_op ( op , value_ct , value_src1 , value_ct , diff_src1 , op_result_r , item_dst -> size )"	621:7:17542:17667	1034557	2	True				
ANR	1035271	AssignmentExpression	"simulate_r = simulate_op ( op , value_ct , value_src1 , value_ct , diff_src1 , op_result_r , item_dst -> size )"		1034557	0		=			
ANR	1035272	Identifier	simulate_r		1034557	0					
ANR	1035273	CallExpression	"simulate_op ( op , value_ct , value_src1 , value_ct , diff_src1 , op_result_r , item_dst -> size )"		1034557	1					
ANR	1035274	Callee	simulate_op		1034557	0					
ANR	1035275	Identifier	simulate_op		1034557	0					
ANR	1035276	ArgumentList	op		1034557	1					
ANR	1035277	Argument	op		1034557	0					
ANR	1035278	Identifier	op		1034557	0					
ANR	1035279	Argument	value_ct		1034557	1					
ANR	1035280	Identifier	value_ct		1034557	0					
ANR	1035281	Argument	value_src1		1034557	2					
ANR	1035282	Identifier	value_src1		1034557	0					
ANR	1035283	Argument	value_ct		1034557	3					
ANR	1035284	Identifier	value_ct		1034557	0					
ANR	1035285	Argument	diff_src1		1034557	4					
ANR	1035286	Identifier	diff_src1		1034557	0					
ANR	1035287	Argument	op_result_r		1034557	5					
ANR	1035288	Identifier	op_result_r		1034557	0					
ANR	1035289	Argument	item_dst -> size		1034557	6					
ANR	1035290	PtrMemberAccess	item_dst -> size		1034557	0					
ANR	1035291	Identifier	item_dst		1034557	0					
ANR	1035292	Identifier	size		1034557	1					
ANR	1035293	IfStatement	if ( simulate && op_result && value_dst == * op_result )		1034557	3					
ANR	1035294	Condition	simulate && op_result && value_dst == * op_result	624:11:17680:17727	1034557	0	True				
ANR	1035295	AndExpression	simulate && op_result && value_dst == * op_result		1034557	0		&&			
ANR	1035296	Identifier	simulate		1034557	0					
ANR	1035297	AndExpression	op_result && value_dst == * op_result		1034557	1		&&			
ANR	1035298	Identifier	op_result		1034557	0					
ANR	1035299	EqualityExpression	value_dst == * op_result		1034557	1		==			
ANR	1035300	Identifier	value_dst		1034557	0					
ANR	1035301	UnaryOperationExpression	* op_result		1034557	1					
ANR	1035302	UnaryOperator	*		1034557	0					
ANR	1035303	Identifier	op_result		1034557	1					
ANR	1035304	CompoundStatement		93:8:3284:3374	1034557	1					
ANR	1035305	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , constant ) ;"	625:8:17740:17830	1034557	0	True				
ANR	1035306	IdentifierDecl	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , constant )"		1034557	0					
ANR	1035307	IdentifierDeclType	char *		1034557	0					
ANR	1035308	Identifier	tmp		1034557	1					
ANR	1035309	AssignmentExpression	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , constant )"		1034557	2		=			
ANR	1035310	Identifier	tmp		1034557	0					
ANR	1035311	CallExpression	"r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , item_src1 -> name , op , constant )"		1034557	1					
ANR	1035312	Callee	r_str_newf		1034557	0					
ANR	1035313	Identifier	r_str_newf		1034557	0					
ANR	1035314	ArgumentList	"""%s <-- %s %s %s;"""		1034557	1					
ANR	1035315	Argument	"""%s <-- %s %s %s;"""		1034557	0					
ANR	1035316	PrimaryExpression	"""%s <-- %s %s %s;"""		1034557	0					
ANR	1035317	Argument	item_dst -> name		1034557	1					
ANR	1035318	PtrMemberAccess	item_dst -> name		1034557	0					
ANR	1035319	Identifier	item_dst		1034557	0					
ANR	1035320	Identifier	name		1034557	1					
ANR	1035321	Argument	item_src1 -> name		1034557	2					
ANR	1035322	PtrMemberAccess	item_src1 -> name		1034557	0					
ANR	1035323	Identifier	item_src1		1034557	0					
ANR	1035324	Identifier	name		1034557	1					
ANR	1035325	Argument	op		1034557	3					
ANR	1035326	Identifier	op		1034557	0					
ANR	1035327	Argument	constant		1034557	4					
ANR	1035328	Identifier	constant		1034557	0					
ANR	1035329	IfStatement	"if ( arithmetic && ! strstr ( arithmetic , tmp ) )"		1034557	1					
ANR	1035330	Condition	"arithmetic && ! strstr ( arithmetic , tmp )"	626:12:17844:17882	1034557	0	True				
ANR	1035331	AndExpression	"arithmetic && ! strstr ( arithmetic , tmp )"		1034557	0		&&			
ANR	1035332	Identifier	arithmetic		1034557	0					
ANR	1035333	UnaryOperationExpression	"! strstr ( arithmetic , tmp )"		1034557	1					
ANR	1035334	UnaryOperator	!		1034557	0					
ANR	1035335	CallExpression	"strstr ( arithmetic , tmp )"		1034557	1					
ANR	1035336	Callee	strstr		1034557	0					
ANR	1035337	Identifier	strstr		1034557	0					
ANR	1035338	ArgumentList	arithmetic		1034557	1					
ANR	1035339	Argument	arithmetic		1034557	0					
ANR	1035340	Identifier	arithmetic		1034557	0					
ANR	1035341	Argument	tmp		1034557	1					
ANR	1035342	Identifier	tmp		1034557	0					
ANR	1035343	CompoundStatement		94:53:3429:3429	1034557	1					
ANR	1035344	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	627:9:17896:17939	1034557	0	True				
ANR	1035345	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1034557	0		=			
ANR	1035346	Identifier	arithmetic		1034557	0					
ANR	1035347	CallExpression	"r_str_append ( arithmetic , tmp )"		1034557	1					
ANR	1035348	Callee	r_str_append		1034557	0					
ANR	1035349	Identifier	r_str_append		1034557	0					
ANR	1035350	ArgumentList	arithmetic		1034557	1					
ANR	1035351	Argument	arithmetic		1034557	0					
ANR	1035352	Identifier	arithmetic		1034557	0					
ANR	1035353	Argument	tmp		1034557	1					
ANR	1035354	Identifier	tmp		1034557	0					
ANR	1035355	ElseStatement	else		1034557	0					
ANR	1035356	IfStatement	if ( ! arithmetic )		1034557	0					
ANR	1035357	Condition	! arithmetic	628:19:17960:17970	1034557	0	True				
ANR	1035358	UnaryOperationExpression	! arithmetic		1034557	0					
ANR	1035359	UnaryOperator	!		1034557	0					
ANR	1035360	Identifier	arithmetic		1034557	1					
ANR	1035361	CompoundStatement		96:32:3517:3517	1034557	1					
ANR	1035362	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	629:9:17984:18027	1034557	0	True				
ANR	1035363	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1034557	0		=			
ANR	1035364	Identifier	arithmetic		1034557	0					
ANR	1035365	CallExpression	"r_str_append ( arithmetic , tmp )"		1034557	1					
ANR	1035366	Callee	r_str_append		1034557	0					
ANR	1035367	Identifier	r_str_append		1034557	0					
ANR	1035368	ArgumentList	arithmetic		1034557	1					
ANR	1035369	Argument	arithmetic		1034557	0					
ANR	1035370	Identifier	arithmetic		1034557	0					
ANR	1035371	Argument	tmp		1034557	1					
ANR	1035372	Identifier	tmp		1034557	0					
ANR	1035373	ExpressionStatement	free ( tmp )	631:8:18047:18057	1034557	2	True				
ANR	1035374	CallExpression	free ( tmp )		1034557	0					
ANR	1035375	Callee	free		1034557	0					
ANR	1035376	Identifier	free		1034557	0					
ANR	1035377	ArgumentList	tmp		1034557	1					
ANR	1035378	Argument	tmp		1034557	0					
ANR	1035379	Identifier	tmp		1034557	0					
ANR	1035380	ExpressionStatement	redundant = true	632:8:18067:18083	1034557	3	True				
ANR	1035381	AssignmentExpression	redundant = true		1034557	0		=			
ANR	1035382	Identifier	redundant		1034557	0					
ANR	1035383	Identifier	true		1034557	1					
ANR	1035384	ElseStatement	else		1034557	0					
ANR	1035385	IfStatement	if ( ! redundant && simulate_r && value_dst == * op_result_r )		1034557	0					
ANR	1035386	Condition	! redundant && simulate_r && value_dst == * op_result_r	633:18:18103:18155	1034557	0	True				
ANR	1035387	AndExpression	! redundant && simulate_r && value_dst == * op_result_r		1034557	0		&&			
ANR	1035388	UnaryOperationExpression	! redundant		1034557	0					
ANR	1035389	UnaryOperator	!		1034557	0					
ANR	1035390	Identifier	redundant		1034557	1					
ANR	1035391	AndExpression	simulate_r && value_dst == * op_result_r		1034557	1		&&			
ANR	1035392	Identifier	simulate_r		1034557	0					
ANR	1035393	EqualityExpression	value_dst == * op_result_r		1034557	1		==			
ANR	1035394	Identifier	value_dst		1034557	0					
ANR	1035395	UnaryOperationExpression	* op_result_r		1034557	1					
ANR	1035396	UnaryOperator	*		1034557	0					
ANR	1035397	Identifier	op_result_r		1034557	1					
ANR	1035398	CompoundStatement		102:8:3712:3802	1034557	1					
ANR	1035399	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , constant , op , item_src1 -> name ) ;"	634:8:18168:18258	1034557	0	True				
ANR	1035400	IdentifierDecl	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , constant , op , item_src1 -> name )"		1034557	0					
ANR	1035401	IdentifierDeclType	char *		1034557	0					
ANR	1035402	Identifier	tmp		1034557	1					
ANR	1035403	AssignmentExpression	"* tmp = r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , constant , op , item_src1 -> name )"		1034557	2		=			
ANR	1035404	Identifier	tmp		1034557	0					
ANR	1035405	CallExpression	"r_str_newf ( ""%s <-- %s %s %s;"" , item_dst -> name , constant , op , item_src1 -> name )"		1034557	1					
ANR	1035406	Callee	r_str_newf		1034557	0					
ANR	1035407	Identifier	r_str_newf		1034557	0					
ANR	1035408	ArgumentList	"""%s <-- %s %s %s;"""		1034557	1					
ANR	1035409	Argument	"""%s <-- %s %s %s;"""		1034557	0					
ANR	1035410	PrimaryExpression	"""%s <-- %s %s %s;"""		1034557	0					
ANR	1035411	Argument	item_dst -> name		1034557	1					
ANR	1035412	PtrMemberAccess	item_dst -> name		1034557	0					
ANR	1035413	Identifier	item_dst		1034557	0					
ANR	1035414	Identifier	name		1034557	1					
ANR	1035415	Argument	constant		1034557	2					
ANR	1035416	Identifier	constant		1034557	0					
ANR	1035417	Argument	op		1034557	3					
ANR	1035418	Identifier	op		1034557	0					
ANR	1035419	Argument	item_src1 -> name		1034557	4					
ANR	1035420	PtrMemberAccess	item_src1 -> name		1034557	0					
ANR	1035421	Identifier	item_src1		1034557	0					
ANR	1035422	Identifier	name		1034557	1					
ANR	1035423	IfStatement	"if ( arithmetic && ! strstr ( arithmetic , tmp ) )"		1034557	1					
ANR	1035424	Condition	"arithmetic && ! strstr ( arithmetic , tmp )"	635:12:18272:18310	1034557	0	True				
ANR	1035425	AndExpression	"arithmetic && ! strstr ( arithmetic , tmp )"		1034557	0		&&			
ANR	1035426	Identifier	arithmetic		1034557	0					
ANR	1035427	UnaryOperationExpression	"! strstr ( arithmetic , tmp )"		1034557	1					
ANR	1035428	UnaryOperator	!		1034557	0					
ANR	1035429	CallExpression	"strstr ( arithmetic , tmp )"		1034557	1					
ANR	1035430	Callee	strstr		1034557	0					
ANR	1035431	Identifier	strstr		1034557	0					
ANR	1035432	ArgumentList	arithmetic		1034557	1					
ANR	1035433	Argument	arithmetic		1034557	0					
ANR	1035434	Identifier	arithmetic		1034557	0					
ANR	1035435	Argument	tmp		1034557	1					
ANR	1035436	Identifier	tmp		1034557	0					
ANR	1035437	CompoundStatement		103:53:3857:3857	1034557	1					
ANR	1035438	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	636:9:18324:18367	1034557	0	True				
ANR	1035439	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1034557	0		=			
ANR	1035440	Identifier	arithmetic		1034557	0					
ANR	1035441	CallExpression	"r_str_append ( arithmetic , tmp )"		1034557	1					
ANR	1035442	Callee	r_str_append		1034557	0					
ANR	1035443	Identifier	r_str_append		1034557	0					
ANR	1035444	ArgumentList	arithmetic		1034557	1					
ANR	1035445	Argument	arithmetic		1034557	0					
ANR	1035446	Identifier	arithmetic		1034557	0					
ANR	1035447	Argument	tmp		1034557	1					
ANR	1035448	Identifier	tmp		1034557	0					
ANR	1035449	ElseStatement	else		1034557	0					
ANR	1035450	IfStatement	if ( ! arithmetic )		1034557	0					
ANR	1035451	Condition	! arithmetic	637:19:18388:18398	1034557	0	True				
ANR	1035452	UnaryOperationExpression	! arithmetic		1034557	0					
ANR	1035453	UnaryOperator	!		1034557	0					
ANR	1035454	Identifier	arithmetic		1034557	1					
ANR	1035455	CompoundStatement		105:32:3945:3945	1034557	1					
ANR	1035456	ExpressionStatement	"arithmetic = r_str_append ( arithmetic , tmp )"	638:9:18412:18455	1034557	0	True				
ANR	1035457	AssignmentExpression	"arithmetic = r_str_append ( arithmetic , tmp )"		1034557	0		=			
ANR	1035458	Identifier	arithmetic		1034557	0					
ANR	1035459	CallExpression	"r_str_append ( arithmetic , tmp )"		1034557	1					
ANR	1035460	Callee	r_str_append		1034557	0					
ANR	1035461	Identifier	r_str_append		1034557	0					
ANR	1035462	ArgumentList	arithmetic		1034557	1					
ANR	1035463	Argument	arithmetic		1034557	0					
ANR	1035464	Identifier	arithmetic		1034557	0					
ANR	1035465	Argument	tmp		1034557	1					
ANR	1035466	Identifier	tmp		1034557	0					
ANR	1035467	ExpressionStatement	free ( tmp )	640:8:18475:18485	1034557	2	True				
ANR	1035468	CallExpression	free ( tmp )		1034557	0					
ANR	1035469	Callee	free		1034557	0					
ANR	1035470	Identifier	free		1034557	0					
ANR	1035471	ArgumentList	tmp		1034557	1					
ANR	1035472	Argument	tmp		1034557	0					
ANR	1035473	Identifier	tmp		1034557	0					
ANR	1035474	Label	continue_error :	647:0:18526:18540	1034557	18	True				
ANR	1035475	Identifier	continue_error		1034557	0					
ANR	1035476	ExpressionStatement	FREE_ROP	648:2:18544:18552	1034557	19	True				
ANR	1035477	Identifier	FREE_ROP		1034557	0					
ANR	1035478	ExpressionStatement	r_list_free ( constants )	649:2:18556:18579	1034557	20	True				
ANR	1035479	CallExpression	r_list_free ( constants )		1034557	0					
ANR	1035480	Callee	r_list_free		1034557	0					
ANR	1035481	Identifier	r_list_free		1034557	0					
ANR	1035482	ArgumentList	constants		1034557	1					
ANR	1035483	Argument	constants		1034557	0					
ANR	1035484	Identifier	constants		1034557	0					
ANR	1035485	ExpressionStatement	free ( op_result )	651:1:18585:18601	1034557	20	True				
ANR	1035486	CallExpression	free ( op_result )		1034557	0					
ANR	1035487	Callee	free		1034557	0					
ANR	1035488	Identifier	free		1034557	0					
ANR	1035489	ArgumentList	op_result		1034557	1					
ANR	1035490	Argument	op_result		1034557	0					
ANR	1035491	Identifier	op_result		1034557	0					
ANR	1035492	ExpressionStatement	free ( op_result_r )	652:1:18604:18622	1034557	21	True				
ANR	1035493	CallExpression	free ( op_result_r )		1034557	0					
ANR	1035494	Callee	free		1034557	0					
ANR	1035495	Identifier	free		1034557	0					
ANR	1035496	ArgumentList	op_result_r		1034557	1					
ANR	1035497	Argument	op_result_r		1034557	0					
ANR	1035498	Identifier	op_result_r		1034557	0					
ANR	1035499	ReturnStatement	return arithmetic ;	653:1:18625:18642	1034557	22	True				
ANR	1035500	Identifier	arithmetic		1034557	0					
ANR	1035501	ReturnType	static char *		1034557	1					
ANR	1035502	Identifier	rop_classify_arithmetic_const		1034557	2					
ANR	1035503	ParameterList	"RCore * core , RList * ropList"		1034557	3					
ANR	1035504	Parameter	RCore * core	533:43:14426:14436	1034557	0	True				
ANR	1035505	ParameterType	RCore *		1034557	0					
ANR	1035506	Identifier	core		1034557	1					
ANR	1035507	Parameter	RList * ropList	533:56:14439:14452	1034557	1	True				
ANR	1035508	ParameterType	RList *		1034557	0					
ANR	1035509	Identifier	ropList		1034557	1					
ANR	1035510	CFGEntryNode	ENTRY		1034557		True				
ANR	1035511	CFGExitNode	EXIT		1034557		True				
ANR	1035512	CFGErrorNode	ERROR		1034557		True				
ANR	1035513	Symbol	* item_dst		1034557						
ANR	1035514	Symbol	romem		1034557						
ANR	1035515	Symbol	& esil_main		1034557						
ANR	1035516	Symbol	constant		1034557						
ANR	1035517	Symbol	arithmetic		1034557						
ANR	1035518	Symbol	ops_list		1034557						
ANR	1035519	Symbol	value_ct		1034557						
ANR	1035520	Symbol	* item_src1		1034557						
ANR	1035521	Symbol	value_src1		1034557						
ANR	1035522	Symbol	isFlag		1034557						
ANR	1035523	Symbol	stats		1034557						
ANR	1035524	Symbol	* core -> anal -> esil		1034557						
ANR	1035525	Symbol	diff_src1		1034557						
ANR	1035526	Symbol	value_dst		1034557						
ANR	1035527	Symbol	simulate_r		1034557						
ANR	1035528	Symbol	tmp		1034557						
ANR	1035529	Symbol	* op_result_r		1034557						
ANR	1035530	Symbol	item_src1		1034557						
ANR	1035531	Symbol	* * core -> anal		1034557						
ANR	1035532	Symbol	item_src1 -> name		1034557						
ANR	1035533	Symbol	r_num_get		1034557						
ANR	1035534	Symbol	constants		1034557						
ANR	1035535	Symbol	core -> anal -> esil		1034557						
ANR	1035536	Symbol	simulate		1034557						
ANR	1035537	Symbol	strcmp		1034557						
ANR	1035538	Symbol	get_constants		1034557						
ANR	1035539	Symbol	NULL		1034557						
ANR	1035540	Symbol	parse_list		1034557						
ANR	1035541	Symbol	reg_write		1034557						
ANR	1035542	Symbol	r_reg_get_list		1034557						
ANR	1035543	Symbol	esil_main		1034557						
ANR	1035544	Symbol	sdb_querys		1034557						
ANR	1035545	Symbol	mem_write		1034557						
ANR	1035546	Symbol	ut64		1034557						
ANR	1035547	Symbol	item_dst		1034557						
ANR	1035548	Symbol	& esil_flg		1034557						
ANR	1035549	Symbol	ropList		1034557						
ANR	1035550	Symbol	reg_read		1034557						
ANR	1035551	Symbol	core		1034557						
ANR	1035552	Symbol	R_NEW0		1034557						
ANR	1035553	Symbol	* * * core		1034557						
ANR	1035554	Symbol	r_list_find		1034557						
ANR	1035555	Symbol	iter_r		1034557						
ANR	1035556	Symbol	strstr		1034557						
ANR	1035557	Symbol	r_config_get_i		1034557						
ANR	1035558	Symbol	diff_dst		1034557						
ANR	1035559	Symbol	flg_read		1034557						
ANR	1035560	Symbol	true		1034557						
ANR	1035561	Symbol	r_list_empty		1034557						
ANR	1035562	Symbol	item_dst -> size		1034557						
ANR	1035563	Symbol	* core -> dbg		1034557						
ANR	1035564	Symbol	iter_const		1034557						
ANR	1035565	Symbol	item_dst -> name		1034557						
ANR	1035566	Symbol	r_str_append		1034557						
ANR	1035567	Symbol	flg_write		1034557						
ANR	1035568	Symbol	op_result_r		1034557						
ANR	1035569	Symbol	* core		1034557						
ANR	1035570	Symbol	r_str_newf		1034557						
ANR	1035571	Symbol	esil_str		1034557						
ANR	1035572	Symbol	core -> anal		1034557						
ANR	1035573	Symbol	redundant		1034557						
ANR	1035574	Symbol	out		1034557						
ANR	1035575	Symbol	head		1034557						
ANR	1035576	Symbol	op_result		1034557						
ANR	1035577	Symbol	* * core		1034557						
ANR	1035578	Symbol	core -> config		1034557						
ANR	1035579	Symbol	op		1034557						
ANR	1035580	Symbol	r_reg_get_value		1034557						
ANR	1035581	Symbol	iter_dst		1034557						
ANR	1035582	Symbol	mem_read		1034557						
ANR	1035583	Symbol	* op_result		1034557						
ANR	1035584	Symbol	false		1034557						
ANR	1035585	Symbol	iter_ops		1034557						
ANR	1035586	Symbol	* core -> anal		1034557						
ANR	1035587	Symbol	core -> dbg -> reg		1034557						
ANR	1035588	Symbol	core -> anal -> esil -> stats		1034557						
ANR	1035589	Symbol	iter_src1		1034557						
ANR	1035590	Symbol	esil_flg		1034557						
ANR	1035591	Symbol	simulate_op		1034557						
ANR	1035592	Symbol	core -> dbg		1034557						
ANR	1035593	Function	rop_classify_nops	656:0:18647:19361							
ANR	1035594	FunctionDef	"rop_classify_nops (RCore * core , RList * ropList)"		1035593	0					
ANR	1035595	CompoundStatement		656:58:18705:19361	1035593	0					
ANR	1035596	IdentifierDeclStatement	char * esil_str ;	657:1:18708:18722	1035593	0	True				
ANR	1035597	IdentifierDecl	* esil_str		1035593	0					
ANR	1035598	IdentifierDeclType	char *		1035593	0					
ANR	1035599	Identifier	esil_str		1035593	1					
ANR	1035600	IdentifierDeclStatement	int changes = 1 ;	658:1:18725:18740	1035593	1	True				
ANR	1035601	IdentifierDecl	changes = 1		1035593	0					
ANR	1035602	IdentifierDeclType	int		1035593	0					
ANR	1035603	Identifier	changes		1035593	1					
ANR	1035604	AssignmentExpression	changes = 1		1035593	2		=			
ANR	1035605	Identifier	changes		1035593	0					
ANR	1035606	PrimaryExpression	1		1035593	1					
ANR	1035607	IdentifierDeclStatement	RListIter * iter_r ;	659:1:18743:18760	1035593	2	True				
ANR	1035608	IdentifierDecl	* iter_r		1035593	0					
ANR	1035609	IdentifierDeclType	RListIter *		1035593	0					
ANR	1035610	Identifier	iter_r		1035593	1					
ANR	1035611	IdentifierDeclStatement	"const bool romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	660:1:18763:18825	1035593	3	True				
ANR	1035612	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1035593	0					
ANR	1035613	IdentifierDeclType	const bool		1035593	0					
ANR	1035614	Identifier	romem		1035593	1					
ANR	1035615	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		1035593	2		=			
ANR	1035616	Identifier	romem		1035593	0					
ANR	1035617	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		1035593	1					
ANR	1035618	Callee	r_config_get_i		1035593	0					
ANR	1035619	Identifier	r_config_get_i		1035593	0					
ANR	1035620	ArgumentList	core -> config		1035593	1					
ANR	1035621	Argument	core -> config		1035593	0					
ANR	1035622	PtrMemberAccess	core -> config		1035593	0					
ANR	1035623	Identifier	core		1035593	0					
ANR	1035624	Identifier	config		1035593	1					
ANR	1035625	Argument	"""esil.romem"""		1035593	1					
ANR	1035626	PrimaryExpression	"""esil.romem"""		1035593	0					
ANR	1035627	IdentifierDeclStatement	"const bool stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	661:1:18828:18890	1035593	4	True				
ANR	1035628	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1035593	0					
ANR	1035629	IdentifierDeclType	const bool		1035593	0					
ANR	1035630	Identifier	stats		1035593	1					
ANR	1035631	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		1035593	2		=			
ANR	1035632	Identifier	stats		1035593	0					
ANR	1035633	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		1035593	1					
ANR	1035634	Callee	r_config_get_i		1035593	0					
ANR	1035635	Identifier	r_config_get_i		1035593	0					
ANR	1035636	ArgumentList	core -> config		1035593	1					
ANR	1035637	Argument	core -> config		1035593	0					
ANR	1035638	PtrMemberAccess	core -> config		1035593	0					
ANR	1035639	Identifier	core		1035593	0					
ANR	1035640	Identifier	config		1035593	1					
ANR	1035641	Argument	"""esil.stats"""		1035593	1					
ANR	1035642	PrimaryExpression	"""esil.stats"""		1035593	0					
ANR	1035643	IfStatement	if ( ! romem || ! stats )		1035593	5					
ANR	1035644	Condition	! romem || ! stats	663:5:18898:18913	1035593	0	True				
ANR	1035645	OrExpression	! romem || ! stats		1035593	0		||			
ANR	1035646	UnaryOperationExpression	! romem		1035593	0					
ANR	1035647	UnaryOperator	!		1035593	0					
ANR	1035648	Identifier	romem		1035593	1					
ANR	1035649	UnaryOperationExpression	! stats		1035593	1					
ANR	1035650	UnaryOperator	!		1035593	0					
ANR	1035651	Identifier	stats		1035593	1					
ANR	1035652	CompoundStatement		8:23:210:210	1035593	1					
ANR	1035653	ReturnStatement	return - 2 ;	665:2:18990:18999	1035593	0	True				
ANR	1035654	UnaryOperationExpression	- 2		1035593	0					
ANR	1035655	UnaryOperator	-		1035593	0					
ANR	1035656	PrimaryExpression	2		1035593	1					
ANR	1035657	Statement	r_list_foreach	668:1:19006:19019	1035593	6	True				
ANR	1035658	Statement	(	668:16:19021:19021	1035593	7	True				
ANR	1035659	Statement	ropList	668:17:19022:19028	1035593	8	True				
ANR	1035660	Statement	","	668:24:19029:19029	1035593	9	True				
ANR	1035661	Statement	iter_r	668:26:19031:19036	1035593	10	True				
ANR	1035662	Statement	","	668:32:19037:19037	1035593	11	True				
ANR	1035663	Statement	esil_str	668:34:19039:19046	1035593	12	True				
ANR	1035664	Statement	)	668:42:19047:19047	1035593	13	True				
ANR	1035665	CompoundStatement		18:2:464:526	1035593	14					
ANR	1035666	ExpressionStatement	fillRegisterValues ( core )	669:2:19053:19078	1035593	0	True				
ANR	1035667	CallExpression	fillRegisterValues ( core )		1035593	0					
ANR	1035668	Callee	fillRegisterValues		1035593	0					
ANR	1035669	Identifier	fillRegisterValues		1035593	0					
ANR	1035670	ArgumentList	core		1035593	1					
ANR	1035671	Argument	core		1035593	0					
ANR	1035672	Identifier	core		1035593	0					
ANR	1035673	ExpressionStatement	"cmd_anal_esil ( core , esil_str )"	672:2:19136:19166	1035593	1	True				
ANR	1035674	CallExpression	"cmd_anal_esil ( core , esil_str )"		1035593	0					
ANR	1035675	Callee	cmd_anal_esil		1035593	0					
ANR	1035676	Identifier	cmd_anal_esil		1035593	0					
ANR	1035677	ArgumentList	core		1035593	1					
ANR	1035678	Argument	core		1035593	0					
ANR	1035679	Identifier	core		1035593	0					
ANR	1035680	Argument	esil_str		1035593	1					
ANR	1035681	Identifier	esil_str		1035593	0					
ANR	1035682	IdentifierDeclStatement	"char * out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" ) ;"	673:2:19170:19232	1035593	2	True				
ANR	1035683	IdentifierDecl	"* out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1035593	0					
ANR	1035684	IdentifierDeclType	char *		1035593	0					
ANR	1035685	Identifier	out		1035593	1					
ANR	1035686	AssignmentExpression	"* out = sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1035593	2		=			
ANR	1035687	Identifier	out		1035593	0					
ANR	1035688	CallExpression	"sdb_querys ( core -> anal -> esil -> stats , NULL , 0 , ""*"" )"		1035593	1					
ANR	1035689	Callee	sdb_querys		1035593	0					
ANR	1035690	Identifier	sdb_querys		1035593	0					
ANR	1035691	ArgumentList	core -> anal -> esil -> stats		1035593	1					
ANR	1035692	Argument	core -> anal -> esil -> stats		1035593	0					
ANR	1035693	PtrMemberAccess	core -> anal -> esil -> stats		1035593	0					
ANR	1035694	PtrMemberAccess	core -> anal -> esil		1035593	0					
ANR	1035695	PtrMemberAccess	core -> anal		1035593	0					
ANR	1035696	Identifier	core		1035593	0					
ANR	1035697	Identifier	anal		1035593	1					
ANR	1035698	Identifier	esil		1035593	1					
ANR	1035699	Identifier	stats		1035593	1					
ANR	1035700	Argument	NULL		1035593	1					
ANR	1035701	Identifier	NULL		1035593	0					
ANR	1035702	Argument	0		1035593	2					
ANR	1035703	PrimaryExpression	0		1035593	0					
ANR	1035704	Argument	"""*"""		1035593	3					
ANR	1035705	PrimaryExpression	"""*"""		1035593	0					
ANR	1035706	IfStatement	if ( out )		1035593	3					
ANR	1035707	Condition	out	675:6:19267:19269	1035593	0	True				
ANR	1035708	Identifier	out		1035593	0					
ANR	1035709	CompoundStatement		20:11:566:566	1035593	1					
ANR	1035710	ExpressionStatement	free ( out )	676:3:19277:19287	1035593	0	True				
ANR	1035711	CallExpression	free ( out )		1035593	0					
ANR	1035712	Callee	free		1035593	0					
ANR	1035713	Identifier	free		1035593	0					
ANR	1035714	ArgumentList	out		1035593	1					
ANR	1035715	Argument	out		1035593	0					
ANR	1035716	Identifier	out		1035593	0					
ANR	1035717	ReturnStatement	return 0 ;	677:3:19292:19300	1035593	1	True				
ANR	1035718	PrimaryExpression	0		1035593	0					
ANR	1035719	ContinueStatement	continue ;	680:2:19330:19338	1035593	4	True				
ANR	1035720	ReturnStatement	return changes ;	683:1:19345:19359	1035593	15	True				
ANR	1035721	Identifier	changes		1035593	0					
ANR	1035722	ReturnType	static int		1035593	1					
ANR	1035723	Identifier	rop_classify_nops		1035593	2					
ANR	1035724	ParameterList	"RCore * core , RList * ropList"		1035593	3					
ANR	1035725	Parameter	RCore * core	656:29:18676:18686	1035593	0	True				
ANR	1035726	ParameterType	RCore *		1035593	0					
ANR	1035727	Identifier	core		1035593	1					
ANR	1035728	Parameter	RList * ropList	656:42:18689:18702	1035593	1	True				
ANR	1035729	ParameterType	RList *		1035593	0					
ANR	1035730	Identifier	ropList		1035593	1					
ANR	1035731	CFGEntryNode	ENTRY		1035593		True				
ANR	1035732	CFGExitNode	EXIT		1035593		True				
ANR	1035733	CFGErrorNode	ERROR		1035593		True				
ANR	1035734	Symbol	core -> config		1035593						
ANR	1035735	Symbol	romem		1035593						
ANR	1035736	Symbol	NULL		1035593						
ANR	1035737	Symbol	changes		1035593						
ANR	1035738	Symbol	* core		1035593						
ANR	1035739	Symbol	sdb_querys		1035593						
ANR	1035740	Symbol	esil_str		1035593						
ANR	1035741	Symbol	core -> anal		1035593						
ANR	1035742	Symbol	ropList		1035593						
ANR	1035743	Symbol	out		1035593						
ANR	1035744	Symbol	core		1035593						
ANR	1035745	Symbol	* * * core		1035593						
ANR	1035746	Symbol	* core -> anal		1035593						
ANR	1035747	Symbol	iter_r		1035593						
ANR	1035748	Symbol	stats		1035593						
ANR	1035749	Symbol	* core -> anal -> esil		1035593						
ANR	1035750	Symbol	r_config_get_i		1035593						
ANR	1035751	Symbol	core -> anal -> esil -> stats		1035593						
ANR	1035752	Symbol	* * core -> anal		1035593						
ANR	1035753	Symbol	core -> anal -> esil		1035593						
ANR	1035754	Symbol	* * core		1035593						
ANR	1035755	Function	rop_classify	686:0:19364:21026							
ANR	1035756	FunctionDef	"rop_classify (RCore * core , Sdb * db , RList * ropList , const char * key , unsigned int size)"		1035755	0					
ANR	1035757	CompoundStatement		686:100:19464:21026	1035755	0					
ANR	1035758	IdentifierDeclStatement	int nop = 0 ;	687:1:19467:19478	1035755	0	True				
ANR	1035759	IdentifierDecl	nop = 0		1035755	0					
ANR	1035760	IdentifierDeclType	int		1035755	0					
ANR	1035761	Identifier	nop		1035755	1					
ANR	1035762	AssignmentExpression	nop = 0		1035755	2		=			
ANR	1035763	Identifier	nop		1035755	0					
ANR	1035764	PrimaryExpression	0		1035755	1					
ANR	1035765	ExpressionStatement	"rop_classify_nops ( core , ropList )"	687:15:19481:19514	1035755	1	True				
ANR	1035766	CallExpression	"rop_classify_nops ( core , ropList )"		1035755	0					
ANR	1035767	Callee	rop_classify_nops		1035755	0					
ANR	1035768	Identifier	rop_classify_nops		1035755	0					
ANR	1035769	ArgumentList	core		1035755	1					
ANR	1035770	Argument	core		1035755	0					
ANR	1035771	Identifier	core		1035755	0					
ANR	1035772	Argument	ropList		1035755	1					
ANR	1035773	Identifier	ropList		1035755	0					
ANR	1035774	IdentifierDeclStatement	"char * mov , * ct , * arithm , * arithm_ct , * str ;"	688:1:19517:19558	1035755	2	True				
ANR	1035775	IdentifierDecl	* mov		1035755	0					
ANR	1035776	IdentifierDeclType	char *		1035755	0					
ANR	1035777	Identifier	mov		1035755	1					
ANR	1035778	IdentifierDecl	* ct		1035755	1					
ANR	1035779	IdentifierDeclType	char *		1035755	0					
ANR	1035780	Identifier	ct		1035755	1					
ANR	1035781	IdentifierDecl	* arithm		1035755	2					
ANR	1035782	IdentifierDeclType	char *		1035755	0					
ANR	1035783	Identifier	arithm		1035755	1					
ANR	1035784	IdentifierDecl	* arithm_ct		1035755	3					
ANR	1035785	IdentifierDeclType	char *		1035755	0					
ANR	1035786	Identifier	arithm_ct		1035755	1					
ANR	1035787	IdentifierDecl	* str		1035755	4					
ANR	1035788	IdentifierDeclType	char *		1035755	0					
ANR	1035789	Identifier	str		1035755	1					
ANR	1035790	IdentifierDeclStatement	"Sdb * db_nop = sdb_ns ( db , ""nop"" , true ) ;"	689:1:19561:19599	1035755	3	True				
ANR	1035791	IdentifierDecl	"* db_nop = sdb_ns ( db , ""nop"" , true )"		1035755	0					
ANR	1035792	IdentifierDeclType	Sdb *		1035755	0					
ANR	1035793	Identifier	db_nop		1035755	1					
ANR	1035794	AssignmentExpression	"* db_nop = sdb_ns ( db , ""nop"" , true )"		1035755	2		=			
ANR	1035795	Identifier	db_nop		1035755	0					
ANR	1035796	CallExpression	"sdb_ns ( db , ""nop"" , true )"		1035755	1					
ANR	1035797	Callee	sdb_ns		1035755	0					
ANR	1035798	Identifier	sdb_ns		1035755	0					
ANR	1035799	ArgumentList	db		1035755	1					
ANR	1035800	Argument	db		1035755	0					
ANR	1035801	Identifier	db		1035755	0					
ANR	1035802	Argument	"""nop"""		1035755	1					
ANR	1035803	PrimaryExpression	"""nop"""		1035755	0					
ANR	1035804	Argument	true		1035755	2					
ANR	1035805	Identifier	true		1035755	0					
ANR	1035806	IdentifierDeclStatement	"Sdb * db_mov = sdb_ns ( db , ""mov"" , true ) ;"	690:1:19602:19640	1035755	4	True				
ANR	1035807	IdentifierDecl	"* db_mov = sdb_ns ( db , ""mov"" , true )"		1035755	0					
ANR	1035808	IdentifierDeclType	Sdb *		1035755	0					
ANR	1035809	Identifier	db_mov		1035755	1					
ANR	1035810	AssignmentExpression	"* db_mov = sdb_ns ( db , ""mov"" , true )"		1035755	2		=			
ANR	1035811	Identifier	db_mov		1035755	0					
ANR	1035812	CallExpression	"sdb_ns ( db , ""mov"" , true )"		1035755	1					
ANR	1035813	Callee	sdb_ns		1035755	0					
ANR	1035814	Identifier	sdb_ns		1035755	0					
ANR	1035815	ArgumentList	db		1035755	1					
ANR	1035816	Argument	db		1035755	0					
ANR	1035817	Identifier	db		1035755	0					
ANR	1035818	Argument	"""mov"""		1035755	1					
ANR	1035819	PrimaryExpression	"""mov"""		1035755	0					
ANR	1035820	Argument	true		1035755	2					
ANR	1035821	Identifier	true		1035755	0					
ANR	1035822	IdentifierDeclStatement	"Sdb * db_ct = sdb_ns ( db , ""const"" , true ) ;"	691:1:19643:19682	1035755	5	True				
ANR	1035823	IdentifierDecl	"* db_ct = sdb_ns ( db , ""const"" , true )"		1035755	0					
ANR	1035824	IdentifierDeclType	Sdb *		1035755	0					
ANR	1035825	Identifier	db_ct		1035755	1					
ANR	1035826	AssignmentExpression	"* db_ct = sdb_ns ( db , ""const"" , true )"		1035755	2		=			
ANR	1035827	Identifier	db_ct		1035755	0					
ANR	1035828	CallExpression	"sdb_ns ( db , ""const"" , true )"		1035755	1					
ANR	1035829	Callee	sdb_ns		1035755	0					
ANR	1035830	Identifier	sdb_ns		1035755	0					
ANR	1035831	ArgumentList	db		1035755	1					
ANR	1035832	Argument	db		1035755	0					
ANR	1035833	Identifier	db		1035755	0					
ANR	1035834	Argument	"""const"""		1035755	1					
ANR	1035835	PrimaryExpression	"""const"""		1035755	0					
ANR	1035836	Argument	true		1035755	2					
ANR	1035837	Identifier	true		1035755	0					
ANR	1035838	IdentifierDeclStatement	"Sdb * db_aritm = sdb_ns ( db , ""arithm"" , true ) ;"	692:1:19685:19728	1035755	6	True				
ANR	1035839	IdentifierDecl	"* db_aritm = sdb_ns ( db , ""arithm"" , true )"		1035755	0					
ANR	1035840	IdentifierDeclType	Sdb *		1035755	0					
ANR	1035841	Identifier	db_aritm		1035755	1					
ANR	1035842	AssignmentExpression	"* db_aritm = sdb_ns ( db , ""arithm"" , true )"		1035755	2		=			
ANR	1035843	Identifier	db_aritm		1035755	0					
ANR	1035844	CallExpression	"sdb_ns ( db , ""arithm"" , true )"		1035755	1					
ANR	1035845	Callee	sdb_ns		1035755	0					
ANR	1035846	Identifier	sdb_ns		1035755	0					
ANR	1035847	ArgumentList	db		1035755	1					
ANR	1035848	Argument	db		1035755	0					
ANR	1035849	Identifier	db		1035755	0					
ANR	1035850	Argument	"""arithm"""		1035755	1					
ANR	1035851	PrimaryExpression	"""arithm"""		1035755	0					
ANR	1035852	Argument	true		1035755	2					
ANR	1035853	Identifier	true		1035755	0					
ANR	1035854	IdentifierDeclStatement	"Sdb * db_aritm_ct = sdb_ns ( db , ""arithm_ct"" , true ) ;"	693:1:19731:19780	1035755	7	True				
ANR	1035855	IdentifierDecl	"* db_aritm_ct = sdb_ns ( db , ""arithm_ct"" , true )"		1035755	0					
ANR	1035856	IdentifierDeclType	Sdb *		1035755	0					
ANR	1035857	Identifier	db_aritm_ct		1035755	1					
ANR	1035858	AssignmentExpression	"* db_aritm_ct = sdb_ns ( db , ""arithm_ct"" , true )"		1035755	2		=			
ANR	1035859	Identifier	db_aritm_ct		1035755	0					
ANR	1035860	CallExpression	"sdb_ns ( db , ""arithm_ct"" , true )"		1035755	1					
ANR	1035861	Callee	sdb_ns		1035755	0					
ANR	1035862	Identifier	sdb_ns		1035755	0					
ANR	1035863	ArgumentList	db		1035755	1					
ANR	1035864	Argument	db		1035755	0					
ANR	1035865	Identifier	db		1035755	0					
ANR	1035866	Argument	"""arithm_ct"""		1035755	1					
ANR	1035867	PrimaryExpression	"""arithm_ct"""		1035755	0					
ANR	1035868	Argument	true		1035755	2					
ANR	1035869	Identifier	true		1035755	0					
ANR	1035870	IfStatement	if ( ! db_nop || ! db_mov || ! db_ct || ! db_aritm || ! db_aritm_ct )		1035755	8					
ANR	1035871	Condition	! db_nop || ! db_mov || ! db_ct || ! db_aritm || ! db_aritm_ct	695:5:19788:19844	1035755	0	True				
ANR	1035872	OrExpression	! db_nop || ! db_mov || ! db_ct || ! db_aritm || ! db_aritm_ct		1035755	0		||			
ANR	1035873	UnaryOperationExpression	! db_nop		1035755	0					
ANR	1035874	UnaryOperator	!		1035755	0					
ANR	1035875	Identifier	db_nop		1035755	1					
ANR	1035876	OrExpression	! db_mov || ! db_ct || ! db_aritm || ! db_aritm_ct		1035755	1		||			
ANR	1035877	UnaryOperationExpression	! db_mov		1035755	0					
ANR	1035878	UnaryOperator	!		1035755	0					
ANR	1035879	Identifier	db_mov		1035755	1					
ANR	1035880	OrExpression	! db_ct || ! db_aritm || ! db_aritm_ct		1035755	1		||			
ANR	1035881	UnaryOperationExpression	! db_ct		1035755	0					
ANR	1035882	UnaryOperator	!		1035755	0					
ANR	1035883	Identifier	db_ct		1035755	1					
ANR	1035884	OrExpression	! db_aritm || ! db_aritm_ct		1035755	1		||			
ANR	1035885	UnaryOperationExpression	! db_aritm		1035755	0					
ANR	1035886	UnaryOperator	!		1035755	0					
ANR	1035887	Identifier	db_aritm		1035755	1					
ANR	1035888	UnaryOperationExpression	! db_aritm_ct		1035755	1					
ANR	1035889	UnaryOperator	!		1035755	0					
ANR	1035890	Identifier	db_aritm_ct		1035755	1					
ANR	1035891	CompoundStatement		10:64:382:382	1035755	1					
ANR	1035892	ExpressionStatement	"eprintf ( ""Error: Could not create SDB 'rop' sub-namespaces\\n"" )"	696:2:19851:19913	1035755	0	True				
ANR	1035893	CallExpression	"eprintf ( ""Error: Could not create SDB 'rop' sub-namespaces\\n"" )"		1035755	0					
ANR	1035894	Callee	eprintf		1035755	0					
ANR	1035895	Identifier	eprintf		1035755	0					
ANR	1035896	ArgumentList	"""Error: Could not create SDB 'rop' sub-namespaces\\n"""		1035755	1					
ANR	1035897	Argument	"""Error: Could not create SDB 'rop' sub-namespaces\\n"""		1035755	0					
ANR	1035898	PrimaryExpression	"""Error: Could not create SDB 'rop' sub-namespaces\\n"""		1035755	0					
ANR	1035899	ReturnStatement	return ;	697:2:19917:19923	1035755	1	True				
ANR	1035900	ExpressionStatement	"nop = rop_classify_nops ( core , ropList )"	699:1:19929:19968	1035755	9	True				
ANR	1035901	AssignmentExpression	"nop = rop_classify_nops ( core , ropList )"		1035755	0		=			
ANR	1035902	Identifier	nop		1035755	0					
ANR	1035903	CallExpression	"rop_classify_nops ( core , ropList )"		1035755	1					
ANR	1035904	Callee	rop_classify_nops		1035755	0					
ANR	1035905	Identifier	rop_classify_nops		1035755	0					
ANR	1035906	ArgumentList	core		1035755	1					
ANR	1035907	Argument	core		1035755	0					
ANR	1035908	Identifier	core		1035755	0					
ANR	1035909	Argument	ropList		1035755	1					
ANR	1035910	Identifier	ropList		1035755	0					
ANR	1035911	ExpressionStatement	"mov = rop_classify_mov ( core , ropList )"	700:1:19971:20009	1035755	10	True				
ANR	1035912	AssignmentExpression	"mov = rop_classify_mov ( core , ropList )"		1035755	0		=			
ANR	1035913	Identifier	mov		1035755	0					
ANR	1035914	CallExpression	"rop_classify_mov ( core , ropList )"		1035755	1					
ANR	1035915	Callee	rop_classify_mov		1035755	0					
ANR	1035916	Identifier	rop_classify_mov		1035755	0					
ANR	1035917	ArgumentList	core		1035755	1					
ANR	1035918	Argument	core		1035755	0					
ANR	1035919	Identifier	core		1035755	0					
ANR	1035920	Argument	ropList		1035755	1					
ANR	1035921	Identifier	ropList		1035755	0					
ANR	1035922	ExpressionStatement	"ct = rop_classify_constant ( core , ropList )"	701:1:20012:20054	1035755	11	True				
ANR	1035923	AssignmentExpression	"ct = rop_classify_constant ( core , ropList )"		1035755	0		=			
ANR	1035924	Identifier	ct		1035755	0					
ANR	1035925	CallExpression	"rop_classify_constant ( core , ropList )"		1035755	1					
ANR	1035926	Callee	rop_classify_constant		1035755	0					
ANR	1035927	Identifier	rop_classify_constant		1035755	0					
ANR	1035928	ArgumentList	core		1035755	1					
ANR	1035929	Argument	core		1035755	0					
ANR	1035930	Identifier	core		1035755	0					
ANR	1035931	Argument	ropList		1035755	1					
ANR	1035932	Identifier	ropList		1035755	0					
ANR	1035933	ExpressionStatement	"arithm = rop_classify_arithmetic ( core , ropList )"	702:1:20057:20105	1035755	12	True				
ANR	1035934	AssignmentExpression	"arithm = rop_classify_arithmetic ( core , ropList )"		1035755	0		=			
ANR	1035935	Identifier	arithm		1035755	0					
ANR	1035936	CallExpression	"rop_classify_arithmetic ( core , ropList )"		1035755	1					
ANR	1035937	Callee	rop_classify_arithmetic		1035755	0					
ANR	1035938	Identifier	rop_classify_arithmetic		1035755	0					
ANR	1035939	ArgumentList	core		1035755	1					
ANR	1035940	Argument	core		1035755	0					
ANR	1035941	Identifier	core		1035755	0					
ANR	1035942	Argument	ropList		1035755	1					
ANR	1035943	Identifier	ropList		1035755	0					
ANR	1035944	ExpressionStatement	"arithm_ct = rop_classify_arithmetic_const ( core , ropList )"	703:1:20108:20165	1035755	13	True				
ANR	1035945	AssignmentExpression	"arithm_ct = rop_classify_arithmetic_const ( core , ropList )"		1035755	0		=			
ANR	1035946	Identifier	arithm_ct		1035755	0					
ANR	1035947	CallExpression	"rop_classify_arithmetic_const ( core , ropList )"		1035755	1					
ANR	1035948	Callee	rop_classify_arithmetic_const		1035755	0					
ANR	1035949	Identifier	rop_classify_arithmetic_const		1035755	0					
ANR	1035950	ArgumentList	core		1035755	1					
ANR	1035951	Argument	core		1035755	0					
ANR	1035952	Identifier	core		1035755	0					
ANR	1035953	Argument	ropList		1035755	1					
ANR	1035954	Identifier	ropList		1035755	0					
ANR	1035955	Statement	str	704:1:20168:20170	1035755	14	True				
ANR	1035956	Statement	=	704:5:20172:20172	1035755	15	True				
ANR	1035957	Statement	r_str_newf	704:7:20174:20183	1035755	16	True				
ANR	1035958	Statement	(	704:18:20185:20185	1035755	17	True				
ANR	1035959	Statement	"""0x%"""	704:19:20186:20190	1035755	18	True				
ANR	1035960	Statement	PFMT64x	704:24:20191:20197	1035755	19	True				
ANR	1035961	Statement	","	704:31:20198:20198	1035755	20	True				
ANR	1035962	Statement	size	704:33:20200:20203	1035755	21	True				
ANR	1035963	Statement	)	704:37:20204:20204	1035755	22	True				
ANR	1035964	ExpressionStatement		704:38:20205:20205	1035755	23	True				
ANR	1035965	IfStatement	if ( nop == 1 )		1035755	24					
ANR	1035966	Condition	nop == 1	706:5:20213:20220	1035755	0	True				
ANR	1035967	EqualityExpression	nop == 1		1035755	0		==			
ANR	1035968	Identifier	nop		1035755	0					
ANR	1035969	PrimaryExpression	1		1035755	1					
ANR	1035970	CompoundStatement		22:2:762:804	1035755	1					
ANR	1035971	IdentifierDeclStatement	"char * str_nop = r_str_newf ( ""%s NOP"" , str ) ;"	707:2:20227:20269	1035755	0	True				
ANR	1035972	IdentifierDecl	"* str_nop = r_str_newf ( ""%s NOP"" , str )"		1035755	0					
ANR	1035973	IdentifierDeclType	char *		1035755	0					
ANR	1035974	Identifier	str_nop		1035755	1					
ANR	1035975	AssignmentExpression	"* str_nop = r_str_newf ( ""%s NOP"" , str )"		1035755	2		=			
ANR	1035976	Identifier	str_nop		1035755	0					
ANR	1035977	CallExpression	"r_str_newf ( ""%s NOP"" , str )"		1035755	1					
ANR	1035978	Callee	r_str_newf		1035755	0					
ANR	1035979	Identifier	r_str_newf		1035755	0					
ANR	1035980	ArgumentList	"""%s NOP"""		1035755	1					
ANR	1035981	Argument	"""%s NOP"""		1035755	0					
ANR	1035982	PrimaryExpression	"""%s NOP"""		1035755	0					
ANR	1035983	Argument	str		1035755	1					
ANR	1035984	Identifier	str		1035755	0					
ANR	1035985	ExpressionStatement	"sdb_set ( db_nop , key , str_nop , 0 )"	708:2:20273:20306	1035755	1	True				
ANR	1035986	CallExpression	"sdb_set ( db_nop , key , str_nop , 0 )"		1035755	0					
ANR	1035987	Callee	sdb_set		1035755	0					
ANR	1035988	Identifier	sdb_set		1035755	0					
ANR	1035989	ArgumentList	db_nop		1035755	1					
ANR	1035990	Argument	db_nop		1035755	0					
ANR	1035991	Identifier	db_nop		1035755	0					
ANR	1035992	Argument	key		1035755	1					
ANR	1035993	Identifier	key		1035755	0					
ANR	1035994	Argument	str_nop		1035755	2					
ANR	1035995	Identifier	str_nop		1035755	0					
ANR	1035996	Argument	0		1035755	3					
ANR	1035997	PrimaryExpression	0		1035755	0					
ANR	1035998	ExpressionStatement	free ( str_nop )	709:2:20310:20324	1035755	2	True				
ANR	1035999	CallExpression	free ( str_nop )		1035755	0					
ANR	1036000	Callee	free		1035755	0					
ANR	1036001	Identifier	free		1035755	0					
ANR	1036002	ArgumentList	str_nop		1035755	1					
ANR	1036003	Argument	str_nop		1035755	0					
ANR	1036004	Identifier	str_nop		1035755	0					
ANR	1036005	ElseStatement	else		1035755	0					
ANR	1036006	CompoundStatement		25:8:869:869	1035755	0					
ANR	1036007	IfStatement	if ( mov )		1035755	0					
ANR	1036008	Condition	mov	711:6:20342:20344	1035755	0	True				
ANR	1036009	Identifier	mov		1035755	0					
ANR	1036010	CompoundStatement		27:3:887:941	1035755	1					
ANR	1036011	IdentifierDeclStatement	"char * str_mov = r_str_newf ( ""%s MOV { %s }"" , str , mov ) ;"	712:3:20352:20406	1035755	0	True				
ANR	1036012	IdentifierDecl	"* str_mov = r_str_newf ( ""%s MOV { %s }"" , str , mov )"		1035755	0					
ANR	1036013	IdentifierDeclType	char *		1035755	0					
ANR	1036014	Identifier	str_mov		1035755	1					
ANR	1036015	AssignmentExpression	"* str_mov = r_str_newf ( ""%s MOV { %s }"" , str , mov )"		1035755	2		=			
ANR	1036016	Identifier	str_mov		1035755	0					
ANR	1036017	CallExpression	"r_str_newf ( ""%s MOV { %s }"" , str , mov )"		1035755	1					
ANR	1036018	Callee	r_str_newf		1035755	0					
ANR	1036019	Identifier	r_str_newf		1035755	0					
ANR	1036020	ArgumentList	"""%s MOV { %s }"""		1035755	1					
ANR	1036021	Argument	"""%s MOV { %s }"""		1035755	0					
ANR	1036022	PrimaryExpression	"""%s MOV { %s }"""		1035755	0					
ANR	1036023	Argument	str		1035755	1					
ANR	1036024	Identifier	str		1035755	0					
ANR	1036025	Argument	mov		1035755	2					
ANR	1036026	Identifier	mov		1035755	0					
ANR	1036027	ExpressionStatement	"sdb_set ( db_mov , key , str_mov , 0 )"	713:3:20411:20444	1035755	1	True				
ANR	1036028	CallExpression	"sdb_set ( db_mov , key , str_mov , 0 )"		1035755	0					
ANR	1036029	Callee	sdb_set		1035755	0					
ANR	1036030	Identifier	sdb_set		1035755	0					
ANR	1036031	ArgumentList	db_mov		1035755	1					
ANR	1036032	Argument	db_mov		1035755	0					
ANR	1036033	Identifier	db_mov		1035755	0					
ANR	1036034	Argument	key		1035755	1					
ANR	1036035	Identifier	key		1035755	0					
ANR	1036036	Argument	str_mov		1035755	2					
ANR	1036037	Identifier	str_mov		1035755	0					
ANR	1036038	Argument	0		1035755	3					
ANR	1036039	PrimaryExpression	0		1035755	0					
ANR	1036040	ExpressionStatement	free ( str_mov )	714:3:20449:20463	1035755	2	True				
ANR	1036041	CallExpression	free ( str_mov )		1035755	0					
ANR	1036042	Callee	free		1035755	0					
ANR	1036043	Identifier	free		1035755	0					
ANR	1036044	ArgumentList	str_mov		1035755	1					
ANR	1036045	Argument	str_mov		1035755	0					
ANR	1036046	Identifier	str_mov		1035755	0					
ANR	1036047	ExpressionStatement	free ( mov )	715:3:20468:20478	1035755	3	True				
ANR	1036048	CallExpression	free ( mov )		1035755	0					
ANR	1036049	Callee	free		1035755	0					
ANR	1036050	Identifier	free		1035755	0					
ANR	1036051	ArgumentList	mov		1035755	1					
ANR	1036052	Argument	mov		1035755	0					
ANR	1036053	Identifier	mov		1035755	0					
ANR	1036054	IfStatement	if ( ct )		1035755	1					
ANR	1036055	Condition	ct	717:6:20490:20491	1035755	0	True				
ANR	1036056	Identifier	ct		1035755	0					
ANR	1036057	CompoundStatement		33:3:1034:1093	1035755	1					
ANR	1036058	IdentifierDeclStatement	"char * str_ct = r_str_newf ( ""%s LOAD_CONST { %s }"" , str , ct ) ;"	718:3:20499:20558	1035755	0	True				
ANR	1036059	IdentifierDecl	"* str_ct = r_str_newf ( ""%s LOAD_CONST { %s }"" , str , ct )"		1035755	0					
ANR	1036060	IdentifierDeclType	char *		1035755	0					
ANR	1036061	Identifier	str_ct		1035755	1					
ANR	1036062	AssignmentExpression	"* str_ct = r_str_newf ( ""%s LOAD_CONST { %s }"" , str , ct )"		1035755	2		=			
ANR	1036063	Identifier	str_ct		1035755	0					
ANR	1036064	CallExpression	"r_str_newf ( ""%s LOAD_CONST { %s }"" , str , ct )"		1035755	1					
ANR	1036065	Callee	r_str_newf		1035755	0					
ANR	1036066	Identifier	r_str_newf		1035755	0					
ANR	1036067	ArgumentList	"""%s LOAD_CONST { %s }"""		1035755	1					
ANR	1036068	Argument	"""%s LOAD_CONST { %s }"""		1035755	0					
ANR	1036069	PrimaryExpression	"""%s LOAD_CONST { %s }"""		1035755	0					
ANR	1036070	Argument	str		1035755	1					
ANR	1036071	Identifier	str		1035755	0					
ANR	1036072	Argument	ct		1035755	2					
ANR	1036073	Identifier	ct		1035755	0					
ANR	1036074	ExpressionStatement	"sdb_set ( db_ct , key , str_ct , 0 )"	719:3:20563:20594	1035755	1	True				
ANR	1036075	CallExpression	"sdb_set ( db_ct , key , str_ct , 0 )"		1035755	0					
ANR	1036076	Callee	sdb_set		1035755	0					
ANR	1036077	Identifier	sdb_set		1035755	0					
ANR	1036078	ArgumentList	db_ct		1035755	1					
ANR	1036079	Argument	db_ct		1035755	0					
ANR	1036080	Identifier	db_ct		1035755	0					
ANR	1036081	Argument	key		1035755	1					
ANR	1036082	Identifier	key		1035755	0					
ANR	1036083	Argument	str_ct		1035755	2					
ANR	1036084	Identifier	str_ct		1035755	0					
ANR	1036085	Argument	0		1035755	3					
ANR	1036086	PrimaryExpression	0		1035755	0					
ANR	1036087	ExpressionStatement	free ( str_ct )	720:3:20599:20612	1035755	2	True				
ANR	1036088	CallExpression	free ( str_ct )		1035755	0					
ANR	1036089	Callee	free		1035755	0					
ANR	1036090	Identifier	free		1035755	0					
ANR	1036091	ArgumentList	str_ct		1035755	1					
ANR	1036092	Argument	str_ct		1035755	0					
ANR	1036093	Identifier	str_ct		1035755	0					
ANR	1036094	ExpressionStatement	free ( ct )	721:3:20617:20626	1035755	3	True				
ANR	1036095	CallExpression	free ( ct )		1035755	0					
ANR	1036096	Callee	free		1035755	0					
ANR	1036097	Identifier	free		1035755	0					
ANR	1036098	ArgumentList	ct		1035755	1					
ANR	1036099	Argument	ct		1035755	0					
ANR	1036100	Identifier	ct		1035755	0					
ANR	1036101	IfStatement	if ( arithm )		1035755	2					
ANR	1036102	Condition	arithm	723:6:20638:20643	1035755	0	True				
ANR	1036103	Identifier	arithm		1035755	0					
ANR	1036104	CompoundStatement		39:3:1186:1253	1035755	1					
ANR	1036105	IdentifierDeclStatement	"char * str_arithm = r_str_newf ( ""%s ARITHMETIC { %s }"" , str , arithm ) ;"	724:3:20651:20718	1035755	0	True				
ANR	1036106	IdentifierDecl	"* str_arithm = r_str_newf ( ""%s ARITHMETIC { %s }"" , str , arithm )"		1035755	0					
ANR	1036107	IdentifierDeclType	char *		1035755	0					
ANR	1036108	Identifier	str_arithm		1035755	1					
ANR	1036109	AssignmentExpression	"* str_arithm = r_str_newf ( ""%s ARITHMETIC { %s }"" , str , arithm )"		1035755	2		=			
ANR	1036110	Identifier	str_arithm		1035755	0					
ANR	1036111	CallExpression	"r_str_newf ( ""%s ARITHMETIC { %s }"" , str , arithm )"		1035755	1					
ANR	1036112	Callee	r_str_newf		1035755	0					
ANR	1036113	Identifier	r_str_newf		1035755	0					
ANR	1036114	ArgumentList	"""%s ARITHMETIC { %s }"""		1035755	1					
ANR	1036115	Argument	"""%s ARITHMETIC { %s }"""		1035755	0					
ANR	1036116	PrimaryExpression	"""%s ARITHMETIC { %s }"""		1035755	0					
ANR	1036117	Argument	str		1035755	1					
ANR	1036118	Identifier	str		1035755	0					
ANR	1036119	Argument	arithm		1035755	2					
ANR	1036120	Identifier	arithm		1035755	0					
ANR	1036121	ExpressionStatement	"sdb_set ( db_aritm , key , str_arithm , 0 )"	725:3:20723:20761	1035755	1	True				
ANR	1036122	CallExpression	"sdb_set ( db_aritm , key , str_arithm , 0 )"		1035755	0					
ANR	1036123	Callee	sdb_set		1035755	0					
ANR	1036124	Identifier	sdb_set		1035755	0					
ANR	1036125	ArgumentList	db_aritm		1035755	1					
ANR	1036126	Argument	db_aritm		1035755	0					
ANR	1036127	Identifier	db_aritm		1035755	0					
ANR	1036128	Argument	key		1035755	1					
ANR	1036129	Identifier	key		1035755	0					
ANR	1036130	Argument	str_arithm		1035755	2					
ANR	1036131	Identifier	str_arithm		1035755	0					
ANR	1036132	Argument	0		1035755	3					
ANR	1036133	PrimaryExpression	0		1035755	0					
ANR	1036134	ExpressionStatement	free ( str_arithm )	726:3:20766:20783	1035755	2	True				
ANR	1036135	CallExpression	free ( str_arithm )		1035755	0					
ANR	1036136	Callee	free		1035755	0					
ANR	1036137	Identifier	free		1035755	0					
ANR	1036138	ArgumentList	str_arithm		1035755	1					
ANR	1036139	Argument	str_arithm		1035755	0					
ANR	1036140	Identifier	str_arithm		1035755	0					
ANR	1036141	ExpressionStatement	free ( arithm )	727:3:20788:20801	1035755	3	True				
ANR	1036142	CallExpression	free ( arithm )		1035755	0					
ANR	1036143	Callee	free		1035755	0					
ANR	1036144	Identifier	free		1035755	0					
ANR	1036145	ArgumentList	arithm		1035755	1					
ANR	1036146	Argument	arithm		1035755	0					
ANR	1036147	Identifier	arithm		1035755	0					
ANR	1036148	IfStatement	if ( arithm_ct )		1035755	3					
ANR	1036149	Condition	arithm_ct	729:6:20813:20821	1035755	0	True				
ANR	1036150	Identifier	arithm_ct		1035755	0					
ANR	1036151	CompoundStatement		45:3:1364:1443	1035755	1					
ANR	1036152	IdentifierDeclStatement	"char * str_arithm_ct = r_str_newf ( ""%s ARITHMETIC_CONST { %s }"" , str , arithm_ct ) ;"	730:3:20829:20908	1035755	0	True				
ANR	1036153	IdentifierDecl	"* str_arithm_ct = r_str_newf ( ""%s ARITHMETIC_CONST { %s }"" , str , arithm_ct )"		1035755	0					
ANR	1036154	IdentifierDeclType	char *		1035755	0					
ANR	1036155	Identifier	str_arithm_ct		1035755	1					
ANR	1036156	AssignmentExpression	"* str_arithm_ct = r_str_newf ( ""%s ARITHMETIC_CONST { %s }"" , str , arithm_ct )"		1035755	2		=			
ANR	1036157	Identifier	str_arithm_ct		1035755	0					
ANR	1036158	CallExpression	"r_str_newf ( ""%s ARITHMETIC_CONST { %s }"" , str , arithm_ct )"		1035755	1					
ANR	1036159	Callee	r_str_newf		1035755	0					
ANR	1036160	Identifier	r_str_newf		1035755	0					
ANR	1036161	ArgumentList	"""%s ARITHMETIC_CONST { %s }"""		1035755	1					
ANR	1036162	Argument	"""%s ARITHMETIC_CONST { %s }"""		1035755	0					
ANR	1036163	PrimaryExpression	"""%s ARITHMETIC_CONST { %s }"""		1035755	0					
ANR	1036164	Argument	str		1035755	1					
ANR	1036165	Identifier	str		1035755	0					
ANR	1036166	Argument	arithm_ct		1035755	2					
ANR	1036167	Identifier	arithm_ct		1035755	0					
ANR	1036168	ExpressionStatement	"sdb_set ( db_aritm_ct , key , str_arithm_ct , 0 )"	731:3:20913:20957	1035755	1	True				
ANR	1036169	CallExpression	"sdb_set ( db_aritm_ct , key , str_arithm_ct , 0 )"		1035755	0					
ANR	1036170	Callee	sdb_set		1035755	0					
ANR	1036171	Identifier	sdb_set		1035755	0					
ANR	1036172	ArgumentList	db_aritm_ct		1035755	1					
ANR	1036173	Argument	db_aritm_ct		1035755	0					
ANR	1036174	Identifier	db_aritm_ct		1035755	0					
ANR	1036175	Argument	key		1035755	1					
ANR	1036176	Identifier	key		1035755	0					
ANR	1036177	Argument	str_arithm_ct		1035755	2					
ANR	1036178	Identifier	str_arithm_ct		1035755	0					
ANR	1036179	Argument	0		1035755	3					
ANR	1036180	PrimaryExpression	0		1035755	0					
ANR	1036181	ExpressionStatement	free ( str_arithm_ct )	732:3:20962:20982	1035755	2	True				
ANR	1036182	CallExpression	free ( str_arithm_ct )		1035755	0					
ANR	1036183	Callee	free		1035755	0					
ANR	1036184	Identifier	free		1035755	0					
ANR	1036185	ArgumentList	str_arithm_ct		1035755	1					
ANR	1036186	Argument	str_arithm_ct		1035755	0					
ANR	1036187	Identifier	str_arithm_ct		1035755	0					
ANR	1036188	ExpressionStatement	free ( arithm_ct )	733:3:20987:21003	1035755	3	True				
ANR	1036189	CallExpression	free ( arithm_ct )		1035755	0					
ANR	1036190	Callee	free		1035755	0					
ANR	1036191	Identifier	free		1035755	0					
ANR	1036192	ArgumentList	arithm_ct		1035755	1					
ANR	1036193	Argument	arithm_ct		1035755	0					
ANR	1036194	Identifier	arithm_ct		1035755	0					
ANR	1036195	ExpressionStatement	free ( str )	737:1:21014:21024	1035755	25	True				
ANR	1036196	CallExpression	free ( str )		1035755	0					
ANR	1036197	Callee	free		1035755	0					
ANR	1036198	Identifier	free		1035755	0					
ANR	1036199	ArgumentList	str		1035755	1					
ANR	1036200	Argument	str		1035755	0					
ANR	1036201	Identifier	str		1035755	0					
ANR	1036202	ReturnType	static void		1035755	1					
ANR	1036203	Identifier	rop_classify		1035755	2					
ANR	1036204	ParameterList	"RCore * core , Sdb * db , RList * ropList , const char * key , unsigned int size"		1035755	3					
ANR	1036205	Parameter	RCore * core	686:26:19390:19400	1035755	0	True				
ANR	1036206	ParameterType	RCore *		1035755	0					
ANR	1036207	Identifier	core		1035755	1					
ANR	1036208	Parameter	Sdb * db	686:39:19403:19409	1035755	1	True				
ANR	1036209	ParameterType	Sdb *		1035755	0					
ANR	1036210	Identifier	db		1035755	1					
ANR	1036211	Parameter	RList * ropList	686:48:19412:19425	1035755	2	True				
ANR	1036212	ParameterType	RList *		1035755	0					
ANR	1036213	Identifier	ropList		1035755	1					
ANR	1036214	Parameter	const char * key	686:64:19428:19442	1035755	3	True				
ANR	1036215	ParameterType	const char *		1035755	0					
ANR	1036216	Identifier	key		1035755	1					
ANR	1036217	Parameter	unsigned int size	686:81:19445:19461	1035755	4	True				
ANR	1036218	ParameterType	unsigned int		1035755	0					
ANR	1036219	Identifier	size		1035755	1					
ANR	1036220	CFGEntryNode	ENTRY		1035755		True				
ANR	1036221	CFGExitNode	EXIT		1035755		True				
ANR	1036222	Symbol	rop_classify_constant		1035755						
ANR	1036223	Symbol	rop_classify_nops		1035755						
ANR	1036224	Symbol	rop_classify_arithmetic_const		1035755						
ANR	1036225	Symbol	r_str_newf		1035755						
ANR	1036226	Symbol	rop_classify_arithmetic		1035755						
ANR	1036227	Symbol	nop		1035755						
ANR	1036228	Symbol	arithm_ct		1035755						
ANR	1036229	Symbol	db_aritm		1035755						
ANR	1036230	Symbol	str_nop		1035755						
ANR	1036231	Symbol	str_mov		1035755						
ANR	1036232	Symbol	mov		1035755						
ANR	1036233	Symbol	str_arithm		1035755						
ANR	1036234	Symbol	key		1035755						
ANR	1036235	Symbol	arithm		1035755						
ANR	1036236	Symbol	db_mov		1035755						
ANR	1036237	Symbol	str_ct		1035755						
ANR	1036238	Symbol	ropList		1035755						
ANR	1036239	Symbol	str		1035755						
ANR	1036240	Symbol	core		1035755						
ANR	1036241	Symbol	ct		1035755						
ANR	1036242	Symbol	db_aritm_ct		1035755						
ANR	1036243	Symbol	size		1035755						
ANR	1036244	Symbol	str_arithm_ct		1035755						
ANR	1036245	Symbol	true		1035755						
ANR	1036246	Symbol	db_nop		1035755						
ANR	1036247	Symbol	rop_classify_mov		1035755						
ANR	1036248	Symbol	db_ct		1035755						
ANR	1036249	Symbol	db		1035755						
ANR	1036250	Symbol	sdb_ns		1035755						
