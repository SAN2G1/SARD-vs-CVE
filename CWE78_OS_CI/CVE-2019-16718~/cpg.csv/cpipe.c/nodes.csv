command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1159529	File	data/converged/CVE-2019-16718~_radare2/cpipe.c								
ANR	1159530	Function	lang_cpipe_file	9:0:194:1218							
ANR	1159531	FunctionDef	"lang_cpipe_file (RLang * lang , const char * file)"		1159530	0					
ANR	1159532	CompoundStatement		9:58:252:1218	1159530	0					
ANR	1159533	IdentifierDeclStatement	"char * a , * cc , * p , name [ 512 ] ;"	10:1:255:282	1159530	0	True				
ANR	1159534	IdentifierDecl	* a		1159530	0					
ANR	1159535	IdentifierDeclType	char *		1159530	0					
ANR	1159536	Identifier	a		1159530	1					
ANR	1159537	IdentifierDecl	* cc		1159530	1					
ANR	1159538	IdentifierDeclType	char *		1159530	0					
ANR	1159539	Identifier	cc		1159530	1					
ANR	1159540	IdentifierDecl	* p		1159530	2					
ANR	1159541	IdentifierDeclType	char *		1159530	0					
ANR	1159542	Identifier	p		1159530	1					
ANR	1159543	IdentifierDecl	name [ 512 ]		1159530	3					
ANR	1159544	IdentifierDeclType	char [ 512 ]		1159530	0					
ANR	1159545	Identifier	name		1159530	1					
ANR	1159546	PrimaryExpression	512		1159530	2					
ANR	1159547	IdentifierDeclStatement	"const char * libpath , * libname ;"	11:1:285:314	1159530	1	True				
ANR	1159548	IdentifierDecl	* libpath		1159530	0					
ANR	1159549	IdentifierDeclType	const char *		1159530	0					
ANR	1159550	Identifier	libpath		1159530	1					
ANR	1159551	IdentifierDecl	* libname		1159530	1					
ANR	1159552	IdentifierDeclType	const char *		1159530	0					
ANR	1159553	Identifier	libname		1159530	1					
ANR	1159554	IfStatement	if ( strlen ( file ) > ( sizeof ( name ) - 10 ) )		1159530	2					
ANR	1159555	Condition	strlen ( file ) > ( sizeof ( name ) - 10 )	13:5:322:355	1159530	0	True				
ANR	1159556	RelationalExpression	strlen ( file ) > ( sizeof ( name ) - 10 )		1159530	0		>			
ANR	1159557	CallExpression	strlen ( file )		1159530	0					
ANR	1159558	Callee	strlen		1159530	0					
ANR	1159559	Identifier	strlen		1159530	0					
ANR	1159560	ArgumentList	file		1159530	1					
ANR	1159561	Argument	file		1159530	0					
ANR	1159562	Identifier	file		1159530	0					
ANR	1159563	AdditiveExpression	sizeof ( name ) - 10		1159530	1		-			
ANR	1159564	SizeofExpression	sizeof ( name )		1159530	0					
ANR	1159565	Sizeof	sizeof		1159530	0					
ANR	1159566	SizeofOperand	name		1159530	1					
ANR	1159567	PrimaryExpression	10		1159530	1					
ANR	1159568	ReturnStatement	return false ;	14:2:360:372	1159530	1	True				
ANR	1159569	Identifier	false		1159530	0					
ANR	1159570	IfStatement	"if ( ! strstr ( file , "".c"" ) )"		1159530	3					
ANR	1159571	Condition	"! strstr ( file , "".c"" )"	15:5:379:398	1159530	0	True				
ANR	1159572	UnaryOperationExpression	"! strstr ( file , "".c"" )"		1159530	0					
ANR	1159573	UnaryOperator	!		1159530	0					
ANR	1159574	CallExpression	"strstr ( file , "".c"" )"		1159530	1					
ANR	1159575	Callee	strstr		1159530	0					
ANR	1159576	Identifier	strstr		1159530	0					
ANR	1159577	ArgumentList	file		1159530	1					
ANR	1159578	Argument	file		1159530	0					
ANR	1159579	Identifier	file		1159530	0					
ANR	1159580	Argument	""".c"""		1159530	1					
ANR	1159581	PrimaryExpression	""".c"""		1159530	0					
ANR	1159582	ExpressionStatement	"sprintf ( name , ""%s.c"" , file )"	16:2:403:431	1159530	1	True				
ANR	1159583	CallExpression	"sprintf ( name , ""%s.c"" , file )"		1159530	0					
ANR	1159584	Callee	sprintf		1159530	0					
ANR	1159585	Identifier	sprintf		1159530	0					
ANR	1159586	ArgumentList	name		1159530	1					
ANR	1159587	Argument	name		1159530	0					
ANR	1159588	Identifier	name		1159530	0					
ANR	1159589	Argument	"""%s.c"""		1159530	1					
ANR	1159590	PrimaryExpression	"""%s.c"""		1159530	0					
ANR	1159591	Argument	file		1159530	2					
ANR	1159592	Identifier	file		1159530	0					
ANR	1159593	ElseStatement	else		1159530	0					
ANR	1159594	ExpressionStatement	"strcpy ( name , file )"	17:6:439:458	1159530	0	True				
ANR	1159595	CallExpression	"strcpy ( name , file )"		1159530	0					
ANR	1159596	Callee	strcpy		1159530	0					
ANR	1159597	Identifier	strcpy		1159530	0					
ANR	1159598	ArgumentList	name		1159530	1					
ANR	1159599	Argument	name		1159530	0					
ANR	1159600	Identifier	name		1159530	0					
ANR	1159601	Argument	file		1159530	1					
ANR	1159602	Identifier	file		1159530	0					
ANR	1159603	IfStatement	if ( ! r_file_exists ( name ) )		1159530	4					
ANR	1159604	Condition	! r_file_exists ( name )	18:5:465:485	1159530	0	True				
ANR	1159605	UnaryOperationExpression	! r_file_exists ( name )		1159530	0					
ANR	1159606	UnaryOperator	!		1159530	0					
ANR	1159607	CallExpression	r_file_exists ( name )		1159530	1					
ANR	1159608	Callee	r_file_exists		1159530	0					
ANR	1159609	Identifier	r_file_exists		1159530	0					
ANR	1159610	ArgumentList	name		1159530	1					
ANR	1159611	Argument	name		1159530	0					
ANR	1159612	Identifier	name		1159530	0					
ANR	1159613	CompoundStatement		10:28:235:235	1159530	1					
ANR	1159614	ExpressionStatement	"eprintf ( ""file not found (%s)\\n"" , name )"	19:2:492:531	1159530	0	True				
ANR	1159615	CallExpression	"eprintf ( ""file not found (%s)\\n"" , name )"		1159530	0					
ANR	1159616	Callee	eprintf		1159530	0					
ANR	1159617	Identifier	eprintf		1159530	0					
ANR	1159618	ArgumentList	"""file not found (%s)\\n"""		1159530	1					
ANR	1159619	Argument	"""file not found (%s)\\n"""		1159530	0					
ANR	1159620	PrimaryExpression	"""file not found (%s)\\n"""		1159530	0					
ANR	1159621	Argument	name		1159530	1					
ANR	1159622	Identifier	name		1159530	0					
ANR	1159623	ReturnStatement	return false ;	20:2:535:547	1159530	1	True				
ANR	1159624	Identifier	false		1159530	0					
ANR	1159625	ExpressionStatement	"a = ( char * ) r_str_lchr ( name , '/' )"	23:1:554:587	1159530	5	True				
ANR	1159626	AssignmentExpression	"a = ( char * ) r_str_lchr ( name , '/' )"		1159530	0		=			
ANR	1159627	Identifier	a		1159530	0					
ANR	1159628	CastExpression	"( char * ) r_str_lchr ( name , '/' )"		1159530	1					
ANR	1159629	CastTarget	char *		1159530	0					
ANR	1159630	CallExpression	"r_str_lchr ( name , '/' )"		1159530	1					
ANR	1159631	Callee	r_str_lchr		1159530	0					
ANR	1159632	Identifier	r_str_lchr		1159530	0					
ANR	1159633	ArgumentList	name		1159530	1					
ANR	1159634	Argument	name		1159530	0					
ANR	1159635	Identifier	name		1159530	0					
ANR	1159636	Argument	'/'		1159530	1					
ANR	1159637	PrimaryExpression	'/'		1159530	0					
ANR	1159638	IfStatement	if ( a )		1159530	6					
ANR	1159639	Condition	a	24:5:594:594	1159530	0	True				
ANR	1159640	Identifier	a		1159530	0					
ANR	1159641	CompoundStatement		16:8:344:344	1159530	1					
ANR	1159642	ExpressionStatement	* a = 0	25:2:601:607	1159530	0	True				
ANR	1159643	AssignmentExpression	* a = 0		1159530	0		=			
ANR	1159644	UnaryOperationExpression	* a		1159530	0					
ANR	1159645	UnaryOperator	*		1159530	0					
ANR	1159646	Identifier	a		1159530	1					
ANR	1159647	PrimaryExpression	0		1159530	1					
ANR	1159648	ExpressionStatement	libpath = name	26:2:611:625	1159530	1	True				
ANR	1159649	AssignmentExpression	libpath = name		1159530	0		=			
ANR	1159650	Identifier	libpath		1159530	0					
ANR	1159651	Identifier	name		1159530	1					
ANR	1159652	ExpressionStatement	libname = a + 1	27:2:629:644	1159530	2	True				
ANR	1159653	AssignmentExpression	libname = a + 1		1159530	0		=			
ANR	1159654	Identifier	libname		1159530	0					
ANR	1159655	AdditiveExpression	a + 1		1159530	1		+			
ANR	1159656	Identifier	a		1159530	0					
ANR	1159657	PrimaryExpression	1		1159530	1					
ANR	1159658	ElseStatement	else		1159530	0					
ANR	1159659	CompoundStatement		20:8:401:401	1159530	0					
ANR	1159660	ExpressionStatement	"libpath = ""."""	29:2:658:671	1159530	0	True				
ANR	1159661	AssignmentExpression	"libpath = ""."""		1159530	0		=			
ANR	1159662	Identifier	libpath		1159530	0					
ANR	1159663	PrimaryExpression	"""."""		1159530	1					
ANR	1159664	ExpressionStatement	libname = name	30:2:675:689	1159530	1	True				
ANR	1159665	AssignmentExpression	libname = name		1159530	0		=			
ANR	1159666	Identifier	libname		1159530	0					
ANR	1159667	Identifier	name		1159530	1					
ANR	1159668	Statement	r_sys_setenv	32:1:695:706	1159530	7	True				
ANR	1159669	Statement	(	32:14:708:708	1159530	8	True				
ANR	1159670	Statement	"""PKG_CONFIG_PATH"""	32:15:709:725	1159530	9	True				
ANR	1159671	Statement	","	32:32:726:726	1159530	10	True				
ANR	1159672	Statement	R2_LIBDIR	32:34:728:736	1159530	11	True				
ANR	1159673	Statement	"""/pkgconfig"""	32:43:737:748	1159530	12	True				
ANR	1159674	Statement	)	32:55:749:749	1159530	13	True				
ANR	1159675	ExpressionStatement		32:56:750:750	1159530	14	True				
ANR	1159676	ExpressionStatement	"p = strstr ( name , "".c"" )"	33:1:753:776	1159530	15	True				
ANR	1159677	AssignmentExpression	"p = strstr ( name , "".c"" )"		1159530	0		=			
ANR	1159678	Identifier	p		1159530	0					
ANR	1159679	CallExpression	"strstr ( name , "".c"" )"		1159530	1					
ANR	1159680	Callee	strstr		1159530	0					
ANR	1159681	Identifier	strstr		1159530	0					
ANR	1159682	ArgumentList	name		1159530	1					
ANR	1159683	Argument	name		1159530	0					
ANR	1159684	Identifier	name		1159530	0					
ANR	1159685	Argument	""".c"""		1159530	1					
ANR	1159686	PrimaryExpression	""".c"""		1159530	0					
ANR	1159687	IfStatement	if ( p )		1159530	16					
ANR	1159688	Condition	p	34:5:783:783	1159530	0	True				
ANR	1159689	Identifier	p		1159530	0					
ANR	1159690	ExpressionStatement	* p = 0	34:8:786:792	1159530	1	True				
ANR	1159691	AssignmentExpression	* p = 0		1159530	0		=			
ANR	1159692	UnaryOperationExpression	* p		1159530	0					
ANR	1159693	UnaryOperator	*		1159530	0					
ANR	1159694	Identifier	p		1159530	1					
ANR	1159695	PrimaryExpression	0		1159530	1					
ANR	1159696	ExpressionStatement	"cc = r_sys_getenv ( ""CC"" )"	35:1:795:819	1159530	17	True				
ANR	1159697	AssignmentExpression	"cc = r_sys_getenv ( ""CC"" )"		1159530	0		=			
ANR	1159698	Identifier	cc		1159530	0					
ANR	1159699	CallExpression	"r_sys_getenv ( ""CC"" )"		1159530	1					
ANR	1159700	Callee	r_sys_getenv		1159530	0					
ANR	1159701	Identifier	r_sys_getenv		1159530	0					
ANR	1159702	ArgumentList	"""CC"""		1159530	1					
ANR	1159703	Argument	"""CC"""		1159530	0					
ANR	1159704	PrimaryExpression	"""CC"""		1159530	0					
ANR	1159705	IfStatement	if ( ! cc || ! * cc )		1159530	18					
ANR	1159706	Condition	! cc || ! * cc	36:5:826:836	1159530	0	True				
ANR	1159707	OrExpression	! cc || ! * cc		1159530	0		||			
ANR	1159708	UnaryOperationExpression	! cc		1159530	0					
ANR	1159709	UnaryOperator	!		1159530	0					
ANR	1159710	Identifier	cc		1159530	1					
ANR	1159711	UnaryOperationExpression	! * cc		1159530	1					
ANR	1159712	UnaryOperator	!		1159530	0					
ANR	1159713	UnaryOperationExpression	* cc		1159530	1					
ANR	1159714	UnaryOperator	*		1159530	0					
ANR	1159715	Identifier	cc		1159530	1					
ANR	1159716	CompoundStatement		28:18:586:586	1159530	1					
ANR	1159717	ExpressionStatement	free ( cc )	37:2:843:852	1159530	0	True				
ANR	1159718	CallExpression	free ( cc )		1159530	0					
ANR	1159719	Callee	free		1159530	0					
ANR	1159720	Identifier	free		1159530	0					
ANR	1159721	ArgumentList	cc		1159530	1					
ANR	1159722	Argument	cc		1159530	0					
ANR	1159723	Identifier	cc		1159530	0					
ANR	1159724	ExpressionStatement	"cc = strdup ( ""gcc"" )"	38:2:856:875	1159530	1	True				
ANR	1159725	AssignmentExpression	"cc = strdup ( ""gcc"" )"		1159530	0		=			
ANR	1159726	Identifier	cc		1159530	0					
ANR	1159727	CallExpression	"strdup ( ""gcc"" )"		1159530	1					
ANR	1159728	Callee	strdup		1159530	0					
ANR	1159729	Identifier	strdup		1159530	0					
ANR	1159730	ArgumentList	"""gcc"""		1159530	1					
ANR	1159731	Argument	"""gcc"""		1159530	0					
ANR	1159732	PrimaryExpression	"""gcc"""		1159530	0					
ANR	1159733	Statement	char	40:1:881:884	1159530	19	True				
ANR	1159734	Statement	*	40:6:886:886	1159530	20	True				
ANR	1159735	Statement	buf	40:7:887:889	1159530	21	True				
ANR	1159736	Statement	=	40:11:891:891	1159530	22	True				
ANR	1159737	Statement	r_str_newf	40:13:893:902	1159530	23	True				
ANR	1159738	Statement	(	40:24:904:904	1159530	24	True				
ANR	1159739	Statement	"""%s %s -o %s/bin%s"""	40:25:905:923	1159530	25	True				
ANR	1159740	Statement	""" $(pkg-config --cflags --libs r_socket)"""	41:2:927:967	1159530	26	True				
ANR	1159741	Statement	","	41:43:968:968	1159530	27	True				
ANR	1159742	Statement	cc	42:2:972:973	1159530	28	True				
ANR	1159743	Statement	","	42:4:974:974	1159530	29	True				
ANR	1159744	Statement	file	42:6:976:979	1159530	30	True				
ANR	1159745	Statement	","	42:10:980:980	1159530	31	True				
ANR	1159746	Statement	libpath	42:12:982:988	1159530	32	True				
ANR	1159747	Statement	","	42:19:989:989	1159530	33	True				
ANR	1159748	Statement	libname	42:21:991:997	1159530	34	True				
ANR	1159749	Statement	)	42:28:998:998	1159530	35	True				
ANR	1159750	ExpressionStatement		42:29:999:999	1159530	36	True				
ANR	1159751	ExpressionStatement	free ( cc )	43:1:1002:1011	1159530	37	True				
ANR	1159752	CallExpression	free ( cc )		1159530	0					
ANR	1159753	Callee	free		1159530	0					
ANR	1159754	Identifier	free		1159530	0					
ANR	1159755	ArgumentList	cc		1159530	1					
ANR	1159756	Argument	cc		1159530	0					
ANR	1159757	Identifier	cc		1159530	0					
ANR	1159758	IfStatement	"if ( r_sandbox_system ( buf , 1 ) == 0 )"		1159530	38					
ANR	1159759	Condition	"r_sandbox_system ( buf , 1 ) == 0"	44:5:1018:1047	1159530	0	True				
ANR	1159760	EqualityExpression	"r_sandbox_system ( buf , 1 ) == 0"		1159530	0		==			
ANR	1159761	CallExpression	"r_sandbox_system ( buf , 1 )"		1159530	0					
ANR	1159762	Callee	r_sandbox_system		1159530	0					
ANR	1159763	Identifier	r_sandbox_system		1159530	0					
ANR	1159764	ArgumentList	buf		1159530	1					
ANR	1159765	Argument	buf		1159530	0					
ANR	1159766	Identifier	buf		1159530	0					
ANR	1159767	Argument	1		1159530	1					
ANR	1159768	PrimaryExpression	1		1159530	0					
ANR	1159769	PrimaryExpression	0		1159530	1					
ANR	1159770	CompoundStatement		37:2:801:858	1159530	1					
ANR	1159771	IdentifierDeclStatement	"char * binfile = r_str_newf ( ""%s/bin%s"" , libpath , libname ) ;"	45:2:1054:1111	1159530	0	True				
ANR	1159772	IdentifierDecl	"* binfile = r_str_newf ( ""%s/bin%s"" , libpath , libname )"		1159530	0					
ANR	1159773	IdentifierDeclType	char *		1159530	0					
ANR	1159774	Identifier	binfile		1159530	1					
ANR	1159775	AssignmentExpression	"* binfile = r_str_newf ( ""%s/bin%s"" , libpath , libname )"		1159530	2		=			
ANR	1159776	Identifier	binfile		1159530	0					
ANR	1159777	CallExpression	"r_str_newf ( ""%s/bin%s"" , libpath , libname )"		1159530	1					
ANR	1159778	Callee	r_str_newf		1159530	0					
ANR	1159779	Identifier	r_str_newf		1159530	0					
ANR	1159780	ArgumentList	"""%s/bin%s"""		1159530	1					
ANR	1159781	Argument	"""%s/bin%s"""		1159530	0					
ANR	1159782	PrimaryExpression	"""%s/bin%s"""		1159530	0					
ANR	1159783	Argument	libpath		1159530	1					
ANR	1159784	Identifier	libpath		1159530	0					
ANR	1159785	Argument	libname		1159530	2					
ANR	1159786	Identifier	libname		1159530	0					
ANR	1159787	ExpressionStatement	"lang_pipe_run ( lang , binfile , - 1 )"	46:2:1115:1148	1159530	1	True				
ANR	1159788	CallExpression	"lang_pipe_run ( lang , binfile , - 1 )"		1159530	0					
ANR	1159789	Callee	lang_pipe_run		1159530	0					
ANR	1159790	Identifier	lang_pipe_run		1159530	0					
ANR	1159791	ArgumentList	lang		1159530	1					
ANR	1159792	Argument	lang		1159530	0					
ANR	1159793	Identifier	lang		1159530	0					
ANR	1159794	Argument	binfile		1159530	1					
ANR	1159795	Identifier	binfile		1159530	0					
ANR	1159796	Argument	- 1		1159530	2					
ANR	1159797	UnaryOperationExpression	- 1		1159530	0					
ANR	1159798	UnaryOperator	-		1159530	0					
ANR	1159799	PrimaryExpression	1		1159530	1					
ANR	1159800	ExpressionStatement	r_file_rm ( binfile )	47:2:1152:1171	1159530	2	True				
ANR	1159801	CallExpression	r_file_rm ( binfile )		1159530	0					
ANR	1159802	Callee	r_file_rm		1159530	0					
ANR	1159803	Identifier	r_file_rm		1159530	0					
ANR	1159804	ArgumentList	binfile		1159530	1					
ANR	1159805	Argument	binfile		1159530	0					
ANR	1159806	Identifier	binfile		1159530	0					
ANR	1159807	ExpressionStatement	free ( binfile )	48:2:1175:1189	1159530	3	True				
ANR	1159808	CallExpression	free ( binfile )		1159530	0					
ANR	1159809	Callee	free		1159530	0					
ANR	1159810	Identifier	free		1159530	0					
ANR	1159811	ArgumentList	binfile		1159530	1					
ANR	1159812	Argument	binfile		1159530	0					
ANR	1159813	Identifier	binfile		1159530	0					
ANR	1159814	ExpressionStatement	free ( buf )	50:1:1195:1205	1159530	39	True				
ANR	1159815	CallExpression	free ( buf )		1159530	0					
ANR	1159816	Callee	free		1159530	0					
ANR	1159817	Identifier	free		1159530	0					
ANR	1159818	ArgumentList	buf		1159530	1					
ANR	1159819	Argument	buf		1159530	0					
ANR	1159820	Identifier	buf		1159530	0					
ANR	1159821	ReturnStatement	return 0 ;	51:1:1208:1216	1159530	40	True				
ANR	1159822	PrimaryExpression	0		1159530	0					
ANR	1159823	ReturnType	static int		1159530	1					
ANR	1159824	Identifier	lang_cpipe_file		1159530	2					
ANR	1159825	ParameterList	"RLang * lang , const char * file"		1159530	3					
ANR	1159826	Parameter	RLang * lang	9:27:221:231	1159530	0	True				
ANR	1159827	ParameterType	RLang *		1159530	0					
ANR	1159828	Identifier	lang		1159530	1					
ANR	1159829	Parameter	const char * file	9:40:234:249	1159530	1	True				
ANR	1159830	ParameterType	const char *		1159530	0					
ANR	1159831	Identifier	file		1159530	1					
ANR	1159832	CFGEntryNode	ENTRY		1159530		True				
ANR	1159833	CFGExitNode	EXIT		1159530		True				
ANR	1159834	Symbol	cc		1159530						
ANR	1159835	Symbol	a		1159530						
ANR	1159836	Symbol	r_sandbox_system		1159530						
ANR	1159837	Symbol	* cc		1159530						
ANR	1159838	Symbol	r_sys_getenv		1159530						
ANR	1159839	Symbol	false		1159530						
ANR	1159840	Symbol	* a		1159530						
ANR	1159841	Symbol	r_str_newf		1159530						
ANR	1159842	Symbol	libpath		1159530						
ANR	1159843	Symbol	binfile		1159530						
ANR	1159844	Symbol	p		1159530						
ANR	1159845	Symbol	strlen		1159530						
ANR	1159846	Symbol	buf		1159530						
ANR	1159847	Symbol	file		1159530						
ANR	1159848	Symbol	strstr		1159530						
ANR	1159849	Symbol	r_str_lchr		1159530						
ANR	1159850	Symbol	libname		1159530						
ANR	1159851	Symbol	name		1159530						
ANR	1159852	Symbol	* p		1159530						
ANR	1159853	Symbol	strdup		1159530						
ANR	1159854	Symbol	lang		1159530						
ANR	1159855	Symbol	r_file_exists		1159530						
ANR	1159856	Function	lang_cpipe_init	54:0:1221:1320							
ANR	1159857	FunctionDef	lang_cpipe_init (void * user)		1159856	0					
ANR	1159858	CompoundStatement		54:39:1260:1320	1159856	0					
ANR	1159859	ReturnStatement	return true ;	56:1:1307:1318	1159856	0	True				
ANR	1159860	Identifier	true		1159856	0					
ANR	1159861	ReturnType	static int		1159856	1					
ANR	1159862	Identifier	lang_cpipe_init		1159856	2					
ANR	1159863	ParameterList	void * user		1159856	3					
ANR	1159864	Parameter	void * user	54:27:1248:1257	1159856	0	True				
ANR	1159865	ParameterType	void *		1159856	0					
ANR	1159866	Identifier	user		1159856	1					
ANR	1159867	CFGEntryNode	ENTRY		1159856		True				
ANR	1159868	CFGExitNode	EXIT		1159856		True				
ANR	1159869	Symbol	true		1159856						
ANR	1159870	Symbol	user		1159856						
ANR	1159871	Function	lang_cpipe_run	59:0:1323:1778							
ANR	1159872	FunctionDef	"lang_cpipe_run (RLang * lang , const char * code , int len)"		1159871	0					
ANR	1159873	CompoundStatement		59:66:1389:1778	1159871	0					
ANR	1159874	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" ) ;"	60:1:1392:1434	1159871	0	True				
ANR	1159875	IdentifierDecl	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		1159871	0					
ANR	1159876	IdentifierDeclType	FILE *		1159871	0					
ANR	1159877	Identifier	fd		1159871	1					
ANR	1159878	AssignmentExpression	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		1159871	2		=			
ANR	1159879	Identifier	fd		1159871	0					
ANR	1159880	CallExpression	"r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		1159871	1					
ANR	1159881	Callee	r_sandbox_fopen		1159871	0					
ANR	1159882	Identifier	r_sandbox_fopen		1159871	0					
ANR	1159883	ArgumentList	""".tmp.c"""		1159871	1					
ANR	1159884	Argument	""".tmp.c"""		1159871	0					
ANR	1159885	PrimaryExpression	""".tmp.c"""		1159871	0					
ANR	1159886	Argument	"""w"""		1159871	1					
ANR	1159887	PrimaryExpression	"""w"""		1159871	0					
ANR	1159888	IfStatement	if ( fd )		1159871	1					
ANR	1159889	Condition	fd	61:5:1441:1442	1159871	0	True				
ANR	1159890	Identifier	fd		1159871	0					
ANR	1159891	CompoundStatement		3:9:55:55	1159871	1					
ANR	1159892	ExpressionStatement	"eprintf ( ""Cannot open .tmp.c\\n"" )"	62:2:1449:1481	1159871	0	True				
ANR	1159893	CallExpression	"eprintf ( ""Cannot open .tmp.c\\n"" )"		1159871	0					
ANR	1159894	Callee	eprintf		1159871	0					
ANR	1159895	Identifier	eprintf		1159871	0					
ANR	1159896	ArgumentList	"""Cannot open .tmp.c\\n"""		1159871	1					
ANR	1159897	Argument	"""Cannot open .tmp.c\\n"""		1159871	0					
ANR	1159898	PrimaryExpression	"""Cannot open .tmp.c\\n"""		1159871	0					
ANR	1159899	ReturnStatement	return false ;	63:2:1485:1497	1159871	1	True				
ANR	1159900	Identifier	false		1159871	0					
ANR	1159901	Statement	fputs	65:1:1503:1507	1159871	2	True				
ANR	1159902	Statement	(	65:7:1509:1509	1159871	3	True				
ANR	1159903	Statement	"""#include <r_socket.h>\\n\\n"""	65:8:1510:1536	1159871	4	True				
ANR	1159904	Statement	"""#define R2P(x,y...) r2pipe_cmdf(r2p,x,##y)\\n"""	66:2:1540:1585	1159871	5	True				
ANR	1159905	Statement	"""int main() {\\n"""	67:2:1589:1604	1159871	6	True				
ANR	1159906	Statement	"""  R2Pipe *r2p = r2pipe_open(NULL);"""	68:2:1608:1643	1159871	7	True				
ANR	1159907	Statement	","	68:38:1644:1644	1159871	8	True				
ANR	1159908	Statement	fd	68:40:1646:1647	1159871	9	True				
ANR	1159909	Statement	)	68:42:1648:1648	1159871	10	True				
ANR	1159910	ExpressionStatement		68:43:1649:1649	1159871	11	True				
ANR	1159911	ExpressionStatement	"fputs ( code , fd )"	69:1:1652:1668	1159871	12	True				
ANR	1159912	CallExpression	"fputs ( code , fd )"		1159871	0					
ANR	1159913	Callee	fputs		1159871	0					
ANR	1159914	Identifier	fputs		1159871	0					
ANR	1159915	ArgumentList	code		1159871	1					
ANR	1159916	Argument	code		1159871	0					
ANR	1159917	Identifier	code		1159871	0					
ANR	1159918	Argument	fd		1159871	1					
ANR	1159919	Identifier	fd		1159871	0					
ANR	1159920	ExpressionStatement	"fputs ( ""\\n}\\n"" , fd )"	70:1:1671:1690	1159871	13	True				
ANR	1159921	CallExpression	"fputs ( ""\\n}\\n"" , fd )"		1159871	0					
ANR	1159922	Callee	fputs		1159871	0					
ANR	1159923	Identifier	fputs		1159871	0					
ANR	1159924	ArgumentList	"""\\n}\\n"""		1159871	1					
ANR	1159925	Argument	"""\\n}\\n"""		1159871	0					
ANR	1159926	PrimaryExpression	"""\\n}\\n"""		1159871	0					
ANR	1159927	Argument	fd		1159871	1					
ANR	1159928	Identifier	fd		1159871	0					
ANR	1159929	ExpressionStatement	fclose ( fd )	71:1:1693:1704	1159871	14	True				
ANR	1159930	CallExpression	fclose ( fd )		1159871	0					
ANR	1159931	Callee	fclose		1159871	0					
ANR	1159932	Identifier	fclose		1159871	0					
ANR	1159933	ArgumentList	fd		1159871	1					
ANR	1159934	Argument	fd		1159871	0					
ANR	1159935	Identifier	fd		1159871	0					
ANR	1159936	ExpressionStatement	"lang_cpipe_file ( lang , "".tmp.c"" )"	72:1:1707:1739	1159871	15	True				
ANR	1159937	CallExpression	"lang_cpipe_file ( lang , "".tmp.c"" )"		1159871	0					
ANR	1159938	Callee	lang_cpipe_file		1159871	0					
ANR	1159939	Identifier	lang_cpipe_file		1159871	0					
ANR	1159940	ArgumentList	lang		1159871	1					
ANR	1159941	Argument	lang		1159871	0					
ANR	1159942	Identifier	lang		1159871	0					
ANR	1159943	Argument	""".tmp.c"""		1159871	1					
ANR	1159944	PrimaryExpression	""".tmp.c"""		1159871	0					
ANR	1159945	ExpressionStatement	"r_file_rm ( "".tmp.c"" )"	73:1:1742:1762	1159871	16	True				
ANR	1159946	CallExpression	"r_file_rm ( "".tmp.c"" )"		1159871	0					
ANR	1159947	Callee	r_file_rm		1159871	0					
ANR	1159948	Identifier	r_file_rm		1159871	0					
ANR	1159949	ArgumentList	""".tmp.c"""		1159871	1					
ANR	1159950	Argument	""".tmp.c"""		1159871	0					
ANR	1159951	PrimaryExpression	""".tmp.c"""		1159871	0					
ANR	1159952	ReturnStatement	return true ;	74:1:1765:1776	1159871	17	True				
ANR	1159953	Identifier	true		1159871	0					
ANR	1159954	ReturnType	static int		1159871	1					
ANR	1159955	Identifier	lang_cpipe_run		1159871	2					
ANR	1159956	ParameterList	"RLang * lang , const char * code , int len"		1159871	3					
ANR	1159957	Parameter	RLang * lang	59:26:1349:1359	1159871	0	True				
ANR	1159958	ParameterType	RLang *		1159871	0					
ANR	1159959	Identifier	lang		1159871	1					
ANR	1159960	Parameter	const char * code	59:39:1362:1377	1159871	1	True				
ANR	1159961	ParameterType	const char *		1159871	0					
ANR	1159962	Identifier	code		1159871	1					
ANR	1159963	Parameter	int len	59:57:1380:1386	1159871	2	True				
ANR	1159964	ParameterType	int		1159871	0					
ANR	1159965	Identifier	len		1159871	1					
ANR	1159966	CFGEntryNode	ENTRY		1159871		True				
ANR	1159967	CFGExitNode	EXIT		1159871		True				
ANR	1159968	Symbol	code		1159871						
ANR	1159969	Symbol	len		1159871						
ANR	1159970	Symbol	false		1159871						
ANR	1159971	Symbol	true		1159871						
ANR	1159972	Symbol	r_sandbox_fopen		1159871						
ANR	1159973	Symbol	lang		1159871						
ANR	1159974	Symbol	fd		1159871						
ANR	1159975	DeclStmt									
ANR	1159976	Decl							RLangPlugin	RLangPlugin	r_lang_plugin_cpipe
