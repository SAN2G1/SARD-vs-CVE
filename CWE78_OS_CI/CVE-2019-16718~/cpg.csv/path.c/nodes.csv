command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5562731	File	data/converged/CVE-2019-16718~_radare2/path.c								
ANR	5562732	Function	json_path_first	9:0:152:314							
ANR	5562733	FunctionDef	json_path_first (Rangstr * s)		5562732	0					
ANR	5562734	CompoundStatement		9:41:193:314	5562732	0					
ANR	5562735	IdentifierDeclStatement	char * p ;	10:1:196:203	5562732	0	True				
ANR	5562736	IdentifierDecl	* p		5562732	0					
ANR	5562737	IdentifierDeclType	char *		5562732	0					
ANR	5562738	Identifier	p		5562732	1					
ANR	5562739	IfStatement	if ( ! s -> p )		5562732	1					
ANR	5562740	Condition	! s -> p	11:5:210:214	5562732	0	True				
ANR	5562741	UnaryOperationExpression	! s -> p		5562732	0					
ANR	5562742	UnaryOperator	!		5562732	0					
ANR	5562743	PtrMemberAccess	s -> p		5562732	1					
ANR	5562744	Identifier	s		5562732	0					
ANR	5562745	Identifier	p		5562732	1					
ANR	5562746	CompoundStatement		3:12:23:23	5562732	1					
ANR	5562747	ReturnStatement	return ;	12:2:221:227	5562732	0	True				
ANR	5562748	ExpressionStatement	"p = strchr ( s -> p , '.' )"	14:1:233:255	5562732	2	True				
ANR	5562749	AssignmentExpression	"p = strchr ( s -> p , '.' )"		5562732	0		=			
ANR	5562750	Identifier	p		5562732	0					
ANR	5562751	CallExpression	"strchr ( s -> p , '.' )"		5562732	1					
ANR	5562752	Callee	strchr		5562732	0					
ANR	5562753	Identifier	strchr		5562732	0					
ANR	5562754	ArgumentList	s -> p		5562732	1					
ANR	5562755	Argument	s -> p		5562732	0					
ANR	5562756	PtrMemberAccess	s -> p		5562732	0					
ANR	5562757	Identifier	s		5562732	0					
ANR	5562758	Identifier	p		5562732	1					
ANR	5562759	Argument	'.'		5562732	1					
ANR	5562760	PrimaryExpression	'.'		5562732	0					
ANR	5562761	ExpressionStatement	s -> f = 0	15:1:258:266	5562732	3	True				
ANR	5562762	AssignmentExpression	s -> f = 0		5562732	0		=			
ANR	5562763	PtrMemberAccess	s -> f		5562732	0					
ANR	5562764	Identifier	s		5562732	0					
ANR	5562765	Identifier	f		5562732	1					
ANR	5562766	PrimaryExpression	0		5562732	1					
ANR	5562767	ExpressionStatement	s -> t = p ? ( size_t ) ( p - s -> p ) : strlen ( s -> p )	16:1:269:312	5562732	4	True				
ANR	5562768	AssignmentExpression	s -> t = p ? ( size_t ) ( p - s -> p ) : strlen ( s -> p )		5562732	0		=			
ANR	5562769	PtrMemberAccess	s -> t		5562732	0					
ANR	5562770	Identifier	s		5562732	0					
ANR	5562771	Identifier	t		5562732	1					
ANR	5562772	ConditionalExpression	p ? ( size_t ) ( p - s -> p ) : strlen ( s -> p )		5562732	1					
ANR	5562773	Condition	p		5562732	0					
ANR	5562774	Identifier	p		5562732	0					
ANR	5562775	CastExpression	( size_t ) ( p - s -> p )		5562732	1					
ANR	5562776	CastTarget	size_t		5562732	0					
ANR	5562777	AdditiveExpression	p - s -> p		5562732	1		-			
ANR	5562778	Identifier	p		5562732	0					
ANR	5562779	PtrMemberAccess	s -> p		5562732	1					
ANR	5562780	Identifier	s		5562732	0					
ANR	5562781	Identifier	p		5562732	1					
ANR	5562782	CallExpression	strlen ( s -> p )		5562732	2					
ANR	5562783	Callee	strlen		5562732	0					
ANR	5562784	Identifier	strlen		5562732	0					
ANR	5562785	ArgumentList	s -> p		5562732	1					
ANR	5562786	Argument	s -> p		5562732	0					
ANR	5562787	PtrMemberAccess	s -> p		5562732	0					
ANR	5562788	Identifier	s		5562732	0					
ANR	5562789	Identifier	p		5562732	1					
ANR	5562790	ReturnType	SDB_IPI void		5562732	1					
ANR	5562791	Identifier	json_path_first		5562732	2					
ANR	5562792	ParameterList	Rangstr * s		5562732	3					
ANR	5562793	Parameter	Rangstr * s	9:29:181:190	5562732	0	True				
ANR	5562794	ParameterType	Rangstr *		5562732	0					
ANR	5562795	Identifier	s		5562732	1					
ANR	5562796	CFGEntryNode	ENTRY		5562732		True				
ANR	5562797	CFGExitNode	EXIT		5562732		True				
ANR	5562798	Symbol	p		5562732						
ANR	5562799	Symbol	s -> f		5562732						
ANR	5562800	Symbol	strlen		5562732						
ANR	5562801	Symbol	s		5562732						
ANR	5562802	Symbol	s -> t		5562732						
ANR	5562803	Symbol	strchr		5562732						
ANR	5562804	Symbol	s -> p		5562732						
ANR	5562805	Symbol	* s		5562732						
ANR	5562806	Function	json_path_next	19:0:317:914							
ANR	5562807	FunctionDef	json_path_next (Rangstr * s)		5562806	0					
ANR	5562808	CompoundStatement		19:39:356:914	5562806	0					
ANR	5562809	IdentifierDeclStatement	int stop = '.' ;	20:1:359:373	5562806	0	True				
ANR	5562810	IdentifierDecl	stop = '.'		5562806	0					
ANR	5562811	IdentifierDeclType	int		5562806	0					
ANR	5562812	Identifier	stop		5562806	1					
ANR	5562813	AssignmentExpression	stop = '.'		5562806	2		=			
ANR	5562814	Identifier	stop		5562806	0					
ANR	5562815	PrimaryExpression	'.'		5562806	1					
ANR	5562816	IfStatement	if ( ! s || ! s -> p || ! s -> p [ s -> t ] )		5562806	1					
ANR	5562817	Condition	! s || ! s -> p || ! s -> p [ s -> t ]	21:5:380:401	5562806	0	True				
ANR	5562818	OrExpression	! s || ! s -> p || ! s -> p [ s -> t ]		5562806	0		||			
ANR	5562819	UnaryOperationExpression	! s		5562806	0					
ANR	5562820	UnaryOperator	!		5562806	0					
ANR	5562821	Identifier	s		5562806	1					
ANR	5562822	OrExpression	! s -> p || ! s -> p [ s -> t ]		5562806	1		||			
ANR	5562823	UnaryOperationExpression	! s -> p		5562806	0					
ANR	5562824	UnaryOperator	!		5562806	0					
ANR	5562825	PtrMemberAccess	s -> p		5562806	1					
ANR	5562826	Identifier	s		5562806	0					
ANR	5562827	Identifier	p		5562806	1					
ANR	5562828	UnaryOperationExpression	! s -> p [ s -> t ]		5562806	1					
ANR	5562829	UnaryOperator	!		5562806	0					
ANR	5562830	ArrayIndexing	s -> p [ s -> t ]		5562806	1					
ANR	5562831	PtrMemberAccess	s -> p		5562806	0					
ANR	5562832	Identifier	s		5562806	0					
ANR	5562833	Identifier	p		5562806	1					
ANR	5562834	PtrMemberAccess	s -> t		5562806	1					
ANR	5562835	Identifier	s		5562806	0					
ANR	5562836	Identifier	t		5562806	1					
ANR	5562837	CompoundStatement		3:29:47:47	5562806	1					
ANR	5562838	ReturnStatement	return 0 ;	22:2:408:416	5562806	0	True				
ANR	5562839	PrimaryExpression	0		5562806	0					
ANR	5562840	IfStatement	if ( ! s -> next )		5562806	2					
ANR	5562841	Condition	! s -> next	24:5:426:433	5562806	0	True				
ANR	5562842	UnaryOperationExpression	! s -> next		5562806	0					
ANR	5562843	UnaryOperator	!		5562806	0					
ANR	5562844	PtrMemberAccess	s -> next		5562806	1					
ANR	5562845	Identifier	s		5562806	0					
ANR	5562846	Identifier	next		5562806	1					
ANR	5562847	CompoundStatement		6:15:79:79	5562806	1					
ANR	5562848	ReturnStatement	return 0 ;	25:2:440:448	5562806	0	True				
ANR	5562849	PrimaryExpression	0		5562806	0					
ANR	5562850	IfStatement	"if ( s -> p [ s -> t ] == '""' )"		5562806	3					
ANR	5562851	Condition	"s -> p [ s -> t ] == '""'"	27:5:458:474	5562806	0	True				
ANR	5562852	EqualityExpression	"s -> p [ s -> t ] == '""'"		5562806	0		==			
ANR	5562853	ArrayIndexing	s -> p [ s -> t ]		5562806	0					
ANR	5562854	PtrMemberAccess	s -> p		5562806	0					
ANR	5562855	Identifier	s		5562806	0					
ANR	5562856	Identifier	p		5562806	1					
ANR	5562857	PtrMemberAccess	s -> t		5562806	1					
ANR	5562858	Identifier	s		5562806	0					
ANR	5562859	Identifier	t		5562806	1					
ANR	5562860	PrimaryExpression	"'""'"		5562806	1					
ANR	5562861	CompoundStatement		9:24:120:120	5562806	1					
ANR	5562862	ExpressionStatement	s -> t ++	28:2:481:487	5562806	0	True				
ANR	5562863	PostIncDecOperationExpression	s -> t ++		5562806	0					
ANR	5562864	PtrMemberAccess	s -> t		5562806	0					
ANR	5562865	Identifier	s		5562806	0					
ANR	5562866	Identifier	t		5562806	1					
ANR	5562867	IncDec	++		5562806	1					
ANR	5562868	Label	rep :	30:0:492:495	5562806	4	True				
ANR	5562869	Identifier	rep		5562806	0					
ANR	5562870	IfStatement	if ( s -> p [ s -> t ] == '[' )		5562806	5					
ANR	5562871	Condition	s -> p [ s -> t ] == '['	31:5:502:518	5562806	0	True				
ANR	5562872	EqualityExpression	s -> p [ s -> t ] == '['		5562806	0		==			
ANR	5562873	ArrayIndexing	s -> p [ s -> t ]		5562806	0					
ANR	5562874	PtrMemberAccess	s -> p		5562806	0					
ANR	5562875	Identifier	s		5562806	0					
ANR	5562876	Identifier	p		5562806	1					
ANR	5562877	PtrMemberAccess	s -> t		5562806	1					
ANR	5562878	Identifier	s		5562806	0					
ANR	5562879	Identifier	t		5562806	1					
ANR	5562880	PrimaryExpression	'['		5562806	1					
ANR	5562881	CompoundStatement		13:24:164:164	5562806	1					
ANR	5562882	ExpressionStatement	s -> type = '['	32:2:525:538	5562806	0	True				
ANR	5562883	AssignmentExpression	s -> type = '['		5562806	0		=			
ANR	5562884	PtrMemberAccess	s -> type		5562806	0					
ANR	5562885	Identifier	s		5562806	0					
ANR	5562886	Identifier	type		5562806	1					
ANR	5562887	PrimaryExpression	'['		5562806	1					
ANR	5562888	ExpressionStatement	stop = ']'	33:2:542:552	5562806	1	True				
ANR	5562889	AssignmentExpression	stop = ']'		5562806	0		=			
ANR	5562890	Identifier	stop		5562806	0					
ANR	5562891	PrimaryExpression	']'		5562806	1					
ANR	5562892	ElseStatement	else		5562806	0					
ANR	5562893	CompoundStatement		16:8:205:205	5562806	0					
ANR	5562894	ExpressionStatement	s -> type = 0	35:2:566:577	5562806	0	True				
ANR	5562895	AssignmentExpression	s -> type = 0		5562806	0		=			
ANR	5562896	PtrMemberAccess	s -> type		5562806	0					
ANR	5562897	Identifier	s		5562806	0					
ANR	5562898	Identifier	type		5562806	1					
ANR	5562899	PrimaryExpression	0		5562806	1					
ANR	5562900	ExpressionStatement	s -> f = ++ s -> t	37:1:583:596	5562806	6	True				
ANR	5562901	AssignmentExpression	s -> f = ++ s -> t		5562806	0		=			
ANR	5562902	PtrMemberAccess	s -> f		5562806	0					
ANR	5562903	Identifier	s		5562806	0					
ANR	5562904	Identifier	f		5562806	1					
ANR	5562905	UnaryExpression	++ s -> t		5562806	1					
ANR	5562906	IncDec	++		5562806	0					
ANR	5562907	PtrMemberAccess	s -> t		5562806	1					
ANR	5562908	Identifier	s		5562806	0					
ANR	5562909	Identifier	t		5562806	1					
ANR	5562910	IfStatement	if ( s -> p [ s -> t ] == stop )		5562806	7					
ANR	5562911	Condition	s -> p [ s -> t ] == stop	38:5:603:620	5562806	0	True				
ANR	5562912	EqualityExpression	s -> p [ s -> t ] == stop		5562806	0		==			
ANR	5562913	ArrayIndexing	s -> p [ s -> t ]		5562806	0					
ANR	5562914	PtrMemberAccess	s -> p		5562806	0					
ANR	5562915	Identifier	s		5562806	0					
ANR	5562916	Identifier	p		5562806	1					
ANR	5562917	PtrMemberAccess	s -> t		5562806	1					
ANR	5562918	Identifier	s		5562806	0					
ANR	5562919	Identifier	t		5562806	1					
ANR	5562920	Identifier	stop		5562806	1					
ANR	5562921	CompoundStatement		20:25:266:266	5562806	1					
ANR	5562922	ExpressionStatement	s -> f = ++ s -> t	39:2:627:640	5562806	0	True				
ANR	5562923	AssignmentExpression	s -> f = ++ s -> t		5562806	0		=			
ANR	5562924	PtrMemberAccess	s -> f		5562806	0					
ANR	5562925	Identifier	s		5562806	0					
ANR	5562926	Identifier	f		5562806	1					
ANR	5562927	UnaryExpression	++ s -> t		5562806	1					
ANR	5562928	IncDec	++		5562806	0					
ANR	5562929	PtrMemberAccess	s -> t		5562806	1					
ANR	5562930	Identifier	s		5562806	0					
ANR	5562931	Identifier	t		5562806	1					
ANR	5562932	IfStatement	if ( ! s -> p [ s -> t ] )		5562806	8					
ANR	5562933	Condition	! s -> p [ s -> t ]	41:5:650:660	5562806	0	True				
ANR	5562934	UnaryOperationExpression	! s -> p [ s -> t ]		5562806	0					
ANR	5562935	UnaryOperator	!		5562806	0					
ANR	5562936	ArrayIndexing	s -> p [ s -> t ]		5562806	1					
ANR	5562937	PtrMemberAccess	s -> p		5562806	0					
ANR	5562938	Identifier	s		5562806	0					
ANR	5562939	Identifier	p		5562806	1					
ANR	5562940	PtrMemberAccess	s -> t		5562806	1					
ANR	5562941	Identifier	s		5562806	0					
ANR	5562942	Identifier	t		5562806	1					
ANR	5562943	CompoundStatement		23:18:306:306	5562806	1					
ANR	5562944	ReturnStatement	return 0 ;	42:2:667:675	5562806	0	True				
ANR	5562945	PrimaryExpression	0		5562806	0					
ANR	5562946	WhileStatement	while ( s -> p [ s -> t ] != stop )		5562806	9					
ANR	5562947	Condition	s -> p [ s -> t ] != stop	44:8:688:705	5562806	0	True				
ANR	5562948	EqualityExpression	s -> p [ s -> t ] != stop		5562806	0		!=			
ANR	5562949	ArrayIndexing	s -> p [ s -> t ]		5562806	0					
ANR	5562950	PtrMemberAccess	s -> p		5562806	0					
ANR	5562951	Identifier	s		5562806	0					
ANR	5562952	Identifier	p		5562806	1					
ANR	5562953	PtrMemberAccess	s -> t		5562806	1					
ANR	5562954	Identifier	s		5562806	0					
ANR	5562955	Identifier	t		5562806	1					
ANR	5562956	Identifier	stop		5562806	1					
ANR	5562957	CompoundStatement		26:28:351:351	5562806	1					
ANR	5562958	IfStatement	if ( ! s -> p [ s -> t ] )		5562806	0					
ANR	5562959	Condition	! s -> p [ s -> t ]	45:6:716:726	5562806	0	True				
ANR	5562960	UnaryOperationExpression	! s -> p [ s -> t ]		5562806	0					
ANR	5562961	UnaryOperator	!		5562806	0					
ANR	5562962	ArrayIndexing	s -> p [ s -> t ]		5562806	1					
ANR	5562963	PtrMemberAccess	s -> p		5562806	0					
ANR	5562964	Identifier	s		5562806	0					
ANR	5562965	Identifier	p		5562806	1					
ANR	5562966	PtrMemberAccess	s -> t		5562806	1					
ANR	5562967	Identifier	s		5562806	0					
ANR	5562968	Identifier	t		5562806	1					
ANR	5562969	CompoundStatement		27:19:372:372	5562806	1					
ANR	5562970	ExpressionStatement	s -> next = 0	46:3:734:745	5562806	0	True				
ANR	5562971	AssignmentExpression	s -> next = 0		5562806	0		=			
ANR	5562972	PtrMemberAccess	s -> next		5562806	0					
ANR	5562973	Identifier	s		5562806	0					
ANR	5562974	Identifier	next		5562806	1					
ANR	5562975	PrimaryExpression	0		5562806	1					
ANR	5562976	ReturnStatement	return 1 ;	47:3:750:758	5562806	1	True				
ANR	5562977	PrimaryExpression	1		5562806	0					
ANR	5562978	IfStatement	if ( s -> p [ s -> t ] == '[' )		5562806	1					
ANR	5562979	Condition	s -> p [ s -> t ] == '['	49:6:770:786	5562806	0	True				
ANR	5562980	EqualityExpression	s -> p [ s -> t ] == '['		5562806	0		==			
ANR	5562981	ArrayIndexing	s -> p [ s -> t ]		5562806	0					
ANR	5562982	PtrMemberAccess	s -> p		5562806	0					
ANR	5562983	Identifier	s		5562806	0					
ANR	5562984	Identifier	p		5562806	1					
ANR	5562985	PtrMemberAccess	s -> t		5562806	1					
ANR	5562986	Identifier	s		5562806	0					
ANR	5562987	Identifier	t		5562806	1					
ANR	5562988	PrimaryExpression	'['		5562806	1					
ANR	5562989	CompoundStatement		31:25:432:432	5562806	1					
ANR	5562990	BreakStatement	break ;	50:3:794:799	5562806	0	True				
ANR	5562991	ExpressionStatement	s -> t ++	52:2:807:813	5562806	2	True				
ANR	5562992	PostIncDecOperationExpression	s -> t ++		5562806	0					
ANR	5562993	PtrMemberAccess	s -> t		5562806	0					
ANR	5562994	Identifier	s		5562806	0					
ANR	5562995	Identifier	t		5562806	1					
ANR	5562996	IncDec	++		5562806	1					
ANR	5562997	IfStatement	if ( s -> f == s -> t )		5562806	10					
ANR	5562998	Condition	s -> f == s -> t	54:5:823:834	5562806	0	True				
ANR	5562999	EqualityExpression	s -> f == s -> t		5562806	0		==			
ANR	5563000	PtrMemberAccess	s -> f		5562806	0					
ANR	5563001	Identifier	s		5562806	0					
ANR	5563002	Identifier	f		5562806	1					
ANR	5563003	PtrMemberAccess	s -> t		5562806	1					
ANR	5563004	Identifier	s		5562806	0					
ANR	5563005	Identifier	t		5562806	1					
ANR	5563006	CompoundStatement		36:19:480:480	5562806	1					
ANR	5563007	GotoStatement	goto rep ;	55:2:841:849	5562806	0	True				
ANR	5563008	Identifier	rep		5562806	0					
ANR	5563009	IfStatement	"if ( s -> p [ s -> f ] == '""' )"		5562806	11					
ANR	5563010	Condition	"s -> p [ s -> f ] == '""'"	57:5:859:875	5562806	0	True				
ANR	5563011	EqualityExpression	"s -> p [ s -> f ] == '""'"		5562806	0		==			
ANR	5563012	ArrayIndexing	s -> p [ s -> f ]		5562806	0					
ANR	5563013	PtrMemberAccess	s -> p		5562806	0					
ANR	5563014	Identifier	s		5562806	0					
ANR	5563015	Identifier	p		5562806	1					
ANR	5563016	PtrMemberAccess	s -> f		5562806	1					
ANR	5563017	Identifier	s		5562806	0					
ANR	5563018	Identifier	f		5562806	1					
ANR	5563019	PrimaryExpression	"'""'"		5562806	1					
ANR	5563020	CompoundStatement		39:24:521:521	5562806	1					
ANR	5563021	ExpressionStatement	s -> f ++	58:2:882:888	5562806	0	True				
ANR	5563022	PostIncDecOperationExpression	s -> f ++		5562806	0					
ANR	5563023	PtrMemberAccess	s -> f		5562806	0					
ANR	5563024	Identifier	s		5562806	0					
ANR	5563025	Identifier	f		5562806	1					
ANR	5563026	IncDec	++		5562806	1					
ANR	5563027	ExpressionStatement	s -> t --	59:2:892:898	5562806	1	True				
ANR	5563028	PostIncDecOperationExpression	s -> t --		5562806	0					
ANR	5563029	PtrMemberAccess	s -> t		5562806	0					
ANR	5563030	Identifier	s		5562806	0					
ANR	5563031	Identifier	t		5562806	1					
ANR	5563032	IncDec	--		5562806	1					
ANR	5563033	ReturnStatement	return 1 ;	61:1:904:912	5562806	12	True				
ANR	5563034	PrimaryExpression	1		5562806	0					
ANR	5563035	ReturnType	SDB_IPI int		5562806	1					
ANR	5563036	Identifier	json_path_next		5562806	2					
ANR	5563037	ParameterList	Rangstr * s		5562806	3					
ANR	5563038	Parameter	Rangstr * s	19:27:344:353	5562806	0	True				
ANR	5563039	ParameterType	Rangstr *		5562806	0					
ANR	5563040	Identifier	s		5562806	1					
ANR	5563041	CFGEntryNode	ENTRY		5562806		True				
ANR	5563042	CFGExitNode	EXIT		5562806		True				
ANR	5563043	Symbol	s -> f		5562806						
ANR	5563044	Symbol	s		5562806						
ANR	5563045	Symbol	stop		5562806						
ANR	5563046	Symbol	* s -> f		5562806						
ANR	5563047	Symbol	* s -> t		5562806						
ANR	5563048	Symbol	s -> t		5562806						
ANR	5563049	Symbol	* * s		5562806						
ANR	5563050	Symbol	* s -> p		5562806						
ANR	5563051	Symbol	s -> p		5562806						
ANR	5563052	Symbol	s -> next		5562806						
ANR	5563053	Symbol	* s		5562806						
ANR	5563054	Symbol	s -> type		5562806						
ANR	5563055	DeclStmt									
ANR	5563056	Decl							int ( * ) ( )	int ( * ) ( )	JSONCallback
ANR	5563057	Function	json_foreach	67:0:955:1414							
ANR	5563058	FunctionDef	"json_foreach (const char * s , JSONCallback cb UNUSED)"		5563057	0					
ANR	5563059	CompoundStatement		67:56:1011:1414	5563057	0					
ANR	5563060	IdentifierDeclStatement	"int i , len , ret ;"	68:1:1014:1029	5563057	0	True				
ANR	5563061	IdentifierDecl	i		5563057	0					
ANR	5563062	IdentifierDeclType	int		5563057	0					
ANR	5563063	Identifier	i		5563057	1					
ANR	5563064	IdentifierDecl	len		5563057	1					
ANR	5563065	IdentifierDeclType	int		5563057	0					
ANR	5563066	Identifier	len		5563057	1					
ANR	5563067	IdentifierDecl	ret		5563057	2					
ANR	5563068	IdentifierDeclType	int		5563057	0					
ANR	5563069	Identifier	ret		5563057	1					
ANR	5563070	IdentifierDeclStatement	unsigned short * res = NULL ;	69:1:1032:1058	5563057	1	True				
ANR	5563071	IdentifierDecl	* res = NULL		5563057	0					
ANR	5563072	IdentifierDeclType	unsigned short *		5563057	0					
ANR	5563073	Identifier	res		5563057	1					
ANR	5563074	AssignmentExpression	* res = NULL		5563057	2		=			
ANR	5563075	Identifier	NULL		5563057	0					
ANR	5563076	Identifier	NULL		5563057	1					
ANR	5563077	ExpressionStatement	len = strlen ( s )	70:1:1061:1077	5563057	2	True				
ANR	5563078	AssignmentExpression	len = strlen ( s )		5563057	0		=			
ANR	5563079	Identifier	len		5563057	0					
ANR	5563080	CallExpression	strlen ( s )		5563057	1					
ANR	5563081	Callee	strlen		5563057	0					
ANR	5563082	Identifier	strlen		5563057	0					
ANR	5563083	ArgumentList	s		5563057	1					
ANR	5563084	Argument	s		5563057	0					
ANR	5563085	Identifier	s		5563057	0					
ANR	5563086	ExpressionStatement	res = malloc ( len )	71:1:1080:1098	5563057	3	True				
ANR	5563087	AssignmentExpression	res = malloc ( len )		5563057	0		=			
ANR	5563088	Identifier	res		5563057	0					
ANR	5563089	CallExpression	malloc ( len )		5563057	1					
ANR	5563090	Callee	malloc		5563057	0					
ANR	5563091	Identifier	malloc		5563057	0					
ANR	5563092	ArgumentList	len		5563057	1					
ANR	5563093	Argument	len		5563057	0					
ANR	5563094	Identifier	len		5563057	0					
ANR	5563095	ExpressionStatement	"ret = sdb_js0n ( ( const unsigned char * ) s , len , res )"	72:1:1101:1152	5563057	4	True				
ANR	5563096	AssignmentExpression	"ret = sdb_js0n ( ( const unsigned char * ) s , len , res )"		5563057	0		=			
ANR	5563097	Identifier	ret		5563057	0					
ANR	5563098	CallExpression	"sdb_js0n ( ( const unsigned char * ) s , len , res )"		5563057	1					
ANR	5563099	Callee	sdb_js0n		5563057	0					
ANR	5563100	Identifier	sdb_js0n		5563057	0					
ANR	5563101	ArgumentList	( const unsigned char * ) s		5563057	1					
ANR	5563102	Argument	( const unsigned char * ) s		5563057	0					
ANR	5563103	CastExpression	( const unsigned char * ) s		5563057	0					
ANR	5563104	CastTarget	const unsigned char *		5563057	0					
ANR	5563105	Identifier	s		5563057	1					
ANR	5563106	Argument	len		5563057	1					
ANR	5563107	Identifier	len		5563057	0					
ANR	5563108	Argument	res		5563057	2					
ANR	5563109	Identifier	res		5563057	0					
ANR	5563110	IfStatement	if ( ! ret )		5563057	5					
ANR	5563111	Condition	! ret	73:5:1159:1162	5563057	0	True				
ANR	5563112	UnaryOperationExpression	! ret		5563057	0					
ANR	5563113	UnaryOperator	!		5563057	0					
ANR	5563114	Identifier	ret		5563057	1					
ANR	5563115	ReturnStatement	return 0 ;	73:11:1165:1173	5563057	1	True				
ANR	5563116	PrimaryExpression	0		5563057	0					
ANR	5563117	IfStatement	if ( * s == '[' )		5563057	6					
ANR	5563118	Condition	* s == '['	74:5:1180:1186	5563057	0	True				
ANR	5563119	EqualityExpression	* s == '['		5563057	0		==			
ANR	5563120	UnaryOperationExpression	* s		5563057	0					
ANR	5563121	UnaryOperator	*		5563057	0					
ANR	5563122	Identifier	s		5563057	1					
ANR	5563123	PrimaryExpression	'['		5563057	1					
ANR	5563124	CompoundStatement		8:14:177:177	5563057	1					
ANR	5563125	ForStatement	for ( i = 0 ; res [ i ] ; i += 2 )		5563057	0					
ANR	5563126	ForInit	i = 0 ;	75:7:1198:1201	5563057	0	True				
ANR	5563127	AssignmentExpression	i = 0		5563057	0		=			
ANR	5563128	Identifier	i		5563057	0					
ANR	5563129	PrimaryExpression	0		5563057	1					
ANR	5563130	Condition	res [ i ]	75:12:1203:1208	5563057	1	True				
ANR	5563131	ArrayIndexing	res [ i ]		5563057	0					
ANR	5563132	Identifier	res		5563057	0					
ANR	5563133	Identifier	i		5563057	1					
ANR	5563134	AssignmentExpression	i += 2	75:20:1211:1214	5563057	2	True	+=			
ANR	5563135	Identifier	i		5563057	0					
ANR	5563136	PrimaryExpression	2		5563057	1					
ANR	5563137	CompoundStatement		9:26:205:205	5563057	3					
ANR	5563138	ExpressionStatement	"printf ( ""%d %.*s\\n"" , i , res [ i + 1 ] , s + res [ i ] )"	76:3:1222:1265	5563057	0	True				
ANR	5563139	CallExpression	"printf ( ""%d %.*s\\n"" , i , res [ i + 1 ] , s + res [ i ] )"		5563057	0					
ANR	5563140	Callee	printf		5563057	0					
ANR	5563141	Identifier	printf		5563057	0					
ANR	5563142	ArgumentList	"""%d %.*s\\n"""		5563057	1					
ANR	5563143	Argument	"""%d %.*s\\n"""		5563057	0					
ANR	5563144	PrimaryExpression	"""%d %.*s\\n"""		5563057	0					
ANR	5563145	Argument	i		5563057	1					
ANR	5563146	Identifier	i		5563057	0					
ANR	5563147	Argument	res [ i + 1 ]		5563057	2					
ANR	5563148	ArrayIndexing	res [ i + 1 ]		5563057	0					
ANR	5563149	Identifier	res		5563057	0					
ANR	5563150	AdditiveExpression	i + 1		5563057	1		+			
ANR	5563151	Identifier	i		5563057	0					
ANR	5563152	PrimaryExpression	1		5563057	1					
ANR	5563153	Argument	s + res [ i ]		5563057	3					
ANR	5563154	AdditiveExpression	s + res [ i ]		5563057	0		+			
ANR	5563155	Identifier	s		5563057	0					
ANR	5563156	ArrayIndexing	res [ i ]		5563057	1					
ANR	5563157	Identifier	res		5563057	0					
ANR	5563158	Identifier	i		5563057	1					
ANR	5563159	ElseStatement	else		5563057	0					
ANR	5563160	CompoundStatement		12:8:267:267	5563057	0					
ANR	5563161	ForStatement	for ( i = 0 ; res [ i ] ; i += 4 )		5563057	0					
ANR	5563162	ForInit	i = 0 ;	79:7:1288:1291	5563057	0	True				
ANR	5563163	AssignmentExpression	i = 0		5563057	0		=			
ANR	5563164	Identifier	i		5563057	0					
ANR	5563165	PrimaryExpression	0		5563057	1					
ANR	5563166	Condition	res [ i ]	79:12:1293:1298	5563057	1	True				
ANR	5563167	ArrayIndexing	res [ i ]		5563057	0					
ANR	5563168	Identifier	res		5563057	0					
ANR	5563169	Identifier	i		5563057	1					
ANR	5563170	AssignmentExpression	i += 4	79:20:1301:1304	5563057	2	True	+=			
ANR	5563171	Identifier	i		5563057	0					
ANR	5563172	PrimaryExpression	4		5563057	1					
ANR	5563173	CompoundStatement		13:26:295:295	5563057	3					
ANR	5563174	ExpressionStatement	"printf ( ""%.*s = "" , res [ i + 1 ] , s + res [ i ] )"	80:3:1312:1350	5563057	0	True				
ANR	5563175	CallExpression	"printf ( ""%.*s = "" , res [ i + 1 ] , s + res [ i ] )"		5563057	0					
ANR	5563176	Callee	printf		5563057	0					
ANR	5563177	Identifier	printf		5563057	0					
ANR	5563178	ArgumentList	"""%.*s = """		5563057	1					
ANR	5563179	Argument	"""%.*s = """		5563057	0					
ANR	5563180	PrimaryExpression	"""%.*s = """		5563057	0					
ANR	5563181	Argument	res [ i + 1 ]		5563057	1					
ANR	5563182	ArrayIndexing	res [ i + 1 ]		5563057	0					
ANR	5563183	Identifier	res		5563057	0					
ANR	5563184	AdditiveExpression	i + 1		5563057	1		+			
ANR	5563185	Identifier	i		5563057	0					
ANR	5563186	PrimaryExpression	1		5563057	1					
ANR	5563187	Argument	s + res [ i ]		5563057	2					
ANR	5563188	AdditiveExpression	s + res [ i ]		5563057	0		+			
ANR	5563189	Identifier	s		5563057	0					
ANR	5563190	ArrayIndexing	res [ i ]		5563057	1					
ANR	5563191	Identifier	res		5563057	0					
ANR	5563192	Identifier	i		5563057	1					
ANR	5563193	ExpressionStatement	"printf ( ""%.*s\\n"" , res [ i + 3 ] , s + res [ i + 2 ] )"	81:3:1355:1394	5563057	1	True				
ANR	5563194	CallExpression	"printf ( ""%.*s\\n"" , res [ i + 3 ] , s + res [ i + 2 ] )"		5563057	0					
ANR	5563195	Callee	printf		5563057	0					
ANR	5563196	Identifier	printf		5563057	0					
ANR	5563197	ArgumentList	"""%.*s\\n"""		5563057	1					
ANR	5563198	Argument	"""%.*s\\n"""		5563057	0					
ANR	5563199	PrimaryExpression	"""%.*s\\n"""		5563057	0					
ANR	5563200	Argument	res [ i + 3 ]		5563057	1					
ANR	5563201	ArrayIndexing	res [ i + 3 ]		5563057	0					
ANR	5563202	Identifier	res		5563057	0					
ANR	5563203	AdditiveExpression	i + 3		5563057	1		+			
ANR	5563204	Identifier	i		5563057	0					
ANR	5563205	PrimaryExpression	3		5563057	1					
ANR	5563206	Argument	s + res [ i + 2 ]		5563057	2					
ANR	5563207	AdditiveExpression	s + res [ i + 2 ]		5563057	0		+			
ANR	5563208	Identifier	s		5563057	0					
ANR	5563209	ArrayIndexing	res [ i + 2 ]		5563057	1					
ANR	5563210	Identifier	res		5563057	0					
ANR	5563211	AdditiveExpression	i + 2		5563057	1		+			
ANR	5563212	Identifier	i		5563057	0					
ANR	5563213	PrimaryExpression	2		5563057	1					
ANR	5563214	ReturnStatement	return 1 ;	84:1:1404:1412	5563057	7	True				
ANR	5563215	PrimaryExpression	1		5563057	0					
ANR	5563216	ReturnType	int		5563057	1					
ANR	5563217	Identifier	json_foreach		5563057	2					
ANR	5563218	ParameterList	"const char * s , JSONCallback cb UNUSED"		5563057	3					
ANR	5563219	Parameter	const char * s	67:17:972:984	5563057	0	True				
ANR	5563220	ParameterType	const char *		5563057	0					
ANR	5563221	Identifier	s		5563057	1					
ANR	5563222	Parameter	JSONCallback cb UNUSED	67:32:987:1008	5563057	1	True				
ANR	5563223	ParameterType	JSONCallback cb		5563057	0					
ANR	5563224	Identifier	UNUSED		5563057	1					
ANR	5563225	CFGEntryNode	ENTRY		5563057		True				
ANR	5563226	CFGExitNode	EXIT		5563057		True				
ANR	5563227	Symbol	ret		5563057						
ANR	5563228	Symbol	res		5563057						
ANR	5563229	Symbol	malloc		5563057						
ANR	5563230	Symbol	NULL		5563057						
ANR	5563231	Symbol	UNUSED		5563057						
ANR	5563232	Symbol	sdb_js0n		5563057						
ANR	5563233	Symbol	i		5563057						
ANR	5563234	Symbol	* res		5563057						
ANR	5563235	Symbol	strlen		5563057						
ANR	5563236	Symbol	s		5563057						
ANR	5563237	Symbol	* i		5563057						
ANR	5563238	Symbol	len		5563057						
ANR	5563239	Symbol	* s		5563057						
ANR	5563240	Function	json_walk	89:0:1440:1912							
ANR	5563241	FunctionDef	json_walk (const char * s)		5563240	0					
ANR	5563242	CompoundStatement		89:38:1478:1912	5563240	0					
ANR	5563243	IdentifierDeclStatement	RangstrType * res ;	90:1:1481:1497	5563240	0	True				
ANR	5563244	IdentifierDecl	* res		5563240	0					
ANR	5563245	IdentifierDeclType	RangstrType *		5563240	0					
ANR	5563246	Identifier	res		5563240	1					
ANR	5563247	IdentifierDeclStatement	"int i , ret , len = strlen ( s ) ;"	91:1:1500:1528	5563240	1	True				
ANR	5563248	IdentifierDecl	i		5563240	0					
ANR	5563249	IdentifierDeclType	int		5563240	0					
ANR	5563250	Identifier	i		5563240	1					
ANR	5563251	IdentifierDecl	ret		5563240	1					
ANR	5563252	IdentifierDeclType	int		5563240	0					
ANR	5563253	Identifier	ret		5563240	1					
ANR	5563254	IdentifierDecl	len = strlen ( s )		5563240	2					
ANR	5563255	IdentifierDeclType	int		5563240	0					
ANR	5563256	Identifier	len		5563240	1					
ANR	5563257	AssignmentExpression	len = strlen ( s )		5563240	2		=			
ANR	5563258	Identifier	len		5563240	0					
ANR	5563259	CallExpression	strlen ( s )		5563240	1					
ANR	5563260	Callee	strlen		5563240	0					
ANR	5563261	Identifier	strlen		5563240	0					
ANR	5563262	ArgumentList	s		5563240	1					
ANR	5563263	Argument	s		5563240	0					
ANR	5563264	Identifier	s		5563240	0					
ANR	5563265	ExpressionStatement	res = malloc ( len + 1 )	92:1:1531:1551	5563240	2	True				
ANR	5563266	AssignmentExpression	res = malloc ( len + 1 )		5563240	0		=			
ANR	5563267	Identifier	res		5563240	0					
ANR	5563268	CallExpression	malloc ( len + 1 )		5563240	1					
ANR	5563269	Callee	malloc		5563240	0					
ANR	5563270	Identifier	malloc		5563240	0					
ANR	5563271	ArgumentList	len + 1		5563240	1					
ANR	5563272	Argument	len + 1		5563240	0					
ANR	5563273	AdditiveExpression	len + 1		5563240	0		+			
ANR	5563274	Identifier	len		5563240	0					
ANR	5563275	PrimaryExpression	1		5563240	1					
ANR	5563276	ExpressionStatement	"ret = sdb_js0n ( ( const unsigned char * ) s , len , res )"	93:1:1554:1605	5563240	3	True				
ANR	5563277	AssignmentExpression	"ret = sdb_js0n ( ( const unsigned char * ) s , len , res )"		5563240	0		=			
ANR	5563278	Identifier	ret		5563240	0					
ANR	5563279	CallExpression	"sdb_js0n ( ( const unsigned char * ) s , len , res )"		5563240	1					
ANR	5563280	Callee	sdb_js0n		5563240	0					
ANR	5563281	Identifier	sdb_js0n		5563240	0					
ANR	5563282	ArgumentList	( const unsigned char * ) s		5563240	1					
ANR	5563283	Argument	( const unsigned char * ) s		5563240	0					
ANR	5563284	CastExpression	( const unsigned char * ) s		5563240	0					
ANR	5563285	CastTarget	const unsigned char *		5563240	0					
ANR	5563286	Identifier	s		5563240	1					
ANR	5563287	Argument	len		5563240	1					
ANR	5563288	Identifier	len		5563240	0					
ANR	5563289	Argument	res		5563240	2					
ANR	5563290	Identifier	res		5563240	0					
ANR	5563291	IfStatement	if ( ! ret )		5563240	4					
ANR	5563292	Condition	! ret	94:5:1612:1615	5563240	0	True				
ANR	5563293	UnaryOperationExpression	! ret		5563240	0					
ANR	5563294	UnaryOperator	!		5563240	0					
ANR	5563295	Identifier	ret		5563240	1					
ANR	5563296	CompoundStatement		6:11:139:139	5563240	1					
ANR	5563297	ExpressionStatement	free ( res )	95:2:1622:1632	5563240	0	True				
ANR	5563298	CallExpression	free ( res )		5563240	0					
ANR	5563299	Callee	free		5563240	0					
ANR	5563300	Identifier	free		5563240	0					
ANR	5563301	ArgumentList	res		5563240	1					
ANR	5563302	Argument	res		5563240	0					
ANR	5563303	Identifier	res		5563240	0					
ANR	5563304	ReturnStatement	return 0 ;	96:2:1636:1644	5563240	1	True				
ANR	5563305	PrimaryExpression	0		5563240	0					
ANR	5563306	IfStatement	if ( * s == '[' || * s == '{' )		5563240	5					
ANR	5563307	Condition	* s == '[' || * s == '{'	98:5:1654:1671	5563240	0	True				
ANR	5563308	OrExpression	* s == '[' || * s == '{'		5563240	0		||			
ANR	5563309	EqualityExpression	* s == '['		5563240	0		==			
ANR	5563310	UnaryOperationExpression	* s		5563240	0					
ANR	5563311	UnaryOperator	*		5563240	0					
ANR	5563312	Identifier	s		5563240	1					
ANR	5563313	PrimaryExpression	'['		5563240	1					
ANR	5563314	EqualityExpression	* s == '{'		5563240	1		==			
ANR	5563315	UnaryOperationExpression	* s		5563240	0					
ANR	5563316	UnaryOperator	*		5563240	0					
ANR	5563317	Identifier	s		5563240	1					
ANR	5563318	PrimaryExpression	'{'		5563240	1					
ANR	5563319	CompoundStatement		10:25:195:195	5563240	1					
ANR	5563320	ForStatement	for ( i = 0 ; res [ i ] ; i += 2 )		5563240	0					
ANR	5563321	ForInit	i = 0 ;	99:7:1683:1686	5563240	0	True				
ANR	5563322	AssignmentExpression	i = 0		5563240	0		=			
ANR	5563323	Identifier	i		5563240	0					
ANR	5563324	PrimaryExpression	0		5563240	1					
ANR	5563325	Condition	res [ i ]	99:12:1688:1693	5563240	1	True				
ANR	5563326	ArrayIndexing	res [ i ]		5563240	0					
ANR	5563327	Identifier	res		5563240	0					
ANR	5563328	Identifier	i		5563240	1					
ANR	5563329	AssignmentExpression	i += 2	99:20:1696:1699	5563240	2	True	+=			
ANR	5563330	Identifier	i		5563240	0					
ANR	5563331	PrimaryExpression	2		5563240	1					
ANR	5563332	CompoundStatement		11:26:223:223	5563240	3					
ANR	5563333	ExpressionStatement	"printf ( ""%d %.*s\\n"" , i , res [ i + 1 ] , s + res [ i ] )"	100:3:1707:1750	5563240	0	True				
ANR	5563334	CallExpression	"printf ( ""%d %.*s\\n"" , i , res [ i + 1 ] , s + res [ i ] )"		5563240	0					
ANR	5563335	Callee	printf		5563240	0					
ANR	5563336	Identifier	printf		5563240	0					
ANR	5563337	ArgumentList	"""%d %.*s\\n"""		5563240	1					
ANR	5563338	Argument	"""%d %.*s\\n"""		5563240	0					
ANR	5563339	PrimaryExpression	"""%d %.*s\\n"""		5563240	0					
ANR	5563340	Argument	i		5563240	1					
ANR	5563341	Identifier	i		5563240	0					
ANR	5563342	Argument	res [ i + 1 ]		5563240	2					
ANR	5563343	ArrayIndexing	res [ i + 1 ]		5563240	0					
ANR	5563344	Identifier	res		5563240	0					
ANR	5563345	AdditiveExpression	i + 1		5563240	1		+			
ANR	5563346	Identifier	i		5563240	0					
ANR	5563347	PrimaryExpression	1		5563240	1					
ANR	5563348	Argument	s + res [ i ]		5563240	3					
ANR	5563349	AdditiveExpression	s + res [ i ]		5563240	0		+			
ANR	5563350	Identifier	s		5563240	0					
ANR	5563351	ArrayIndexing	res [ i ]		5563240	1					
ANR	5563352	Identifier	res		5563240	0					
ANR	5563353	Identifier	i		5563240	1					
ANR	5563354	ElseStatement	else		5563240	0					
ANR	5563355	CompoundStatement		14:8:285:285	5563240	0					
ANR	5563356	ForStatement	for ( i = 0 ; res [ i ] ; i += 4 )		5563240	0					
ANR	5563357	ForInit	i = 0 ;	103:7:1773:1776	5563240	0	True				
ANR	5563358	AssignmentExpression	i = 0		5563240	0		=			
ANR	5563359	Identifier	i		5563240	0					
ANR	5563360	PrimaryExpression	0		5563240	1					
ANR	5563361	Condition	res [ i ]	103:12:1778:1783	5563240	1	True				
ANR	5563362	ArrayIndexing	res [ i ]		5563240	0					
ANR	5563363	Identifier	res		5563240	0					
ANR	5563364	Identifier	i		5563240	1					
ANR	5563365	AssignmentExpression	i += 4	103:20:1786:1789	5563240	2	True	+=			
ANR	5563366	Identifier	i		5563240	0					
ANR	5563367	PrimaryExpression	4		5563240	1					
ANR	5563368	CompoundStatement		15:26:313:313	5563240	3					
ANR	5563369	ExpressionStatement	"printf ( ""%.*s = "" , res [ i + 1 ] , s + res [ i ] )"	104:3:1797:1835	5563240	0	True				
ANR	5563370	CallExpression	"printf ( ""%.*s = "" , res [ i + 1 ] , s + res [ i ] )"		5563240	0					
ANR	5563371	Callee	printf		5563240	0					
ANR	5563372	Identifier	printf		5563240	0					
ANR	5563373	ArgumentList	"""%.*s = """		5563240	1					
ANR	5563374	Argument	"""%.*s = """		5563240	0					
ANR	5563375	PrimaryExpression	"""%.*s = """		5563240	0					
ANR	5563376	Argument	res [ i + 1 ]		5563240	1					
ANR	5563377	ArrayIndexing	res [ i + 1 ]		5563240	0					
ANR	5563378	Identifier	res		5563240	0					
ANR	5563379	AdditiveExpression	i + 1		5563240	1		+			
ANR	5563380	Identifier	i		5563240	0					
ANR	5563381	PrimaryExpression	1		5563240	1					
ANR	5563382	Argument	s + res [ i ]		5563240	2					
ANR	5563383	AdditiveExpression	s + res [ i ]		5563240	0		+			
ANR	5563384	Identifier	s		5563240	0					
ANR	5563385	ArrayIndexing	res [ i ]		5563240	1					
ANR	5563386	Identifier	res		5563240	0					
ANR	5563387	Identifier	i		5563240	1					
ANR	5563388	ExpressionStatement	"printf ( ""%.*s\\n"" , res [ i + 3 ] , s + res [ i + 2 ] )"	105:3:1840:1879	5563240	1	True				
ANR	5563389	CallExpression	"printf ( ""%.*s\\n"" , res [ i + 3 ] , s + res [ i + 2 ] )"		5563240	0					
ANR	5563390	Callee	printf		5563240	0					
ANR	5563391	Identifier	printf		5563240	0					
ANR	5563392	ArgumentList	"""%.*s\\n"""		5563240	1					
ANR	5563393	Argument	"""%.*s\\n"""		5563240	0					
ANR	5563394	PrimaryExpression	"""%.*s\\n"""		5563240	0					
ANR	5563395	Argument	res [ i + 3 ]		5563240	1					
ANR	5563396	ArrayIndexing	res [ i + 3 ]		5563240	0					
ANR	5563397	Identifier	res		5563240	0					
ANR	5563398	AdditiveExpression	i + 3		5563240	1		+			
ANR	5563399	Identifier	i		5563240	0					
ANR	5563400	PrimaryExpression	3		5563240	1					
ANR	5563401	Argument	s + res [ i + 2 ]		5563240	2					
ANR	5563402	AdditiveExpression	s + res [ i + 2 ]		5563240	0		+			
ANR	5563403	Identifier	s		5563240	0					
ANR	5563404	ArrayIndexing	res [ i + 2 ]		5563240	1					
ANR	5563405	Identifier	res		5563240	0					
ANR	5563406	AdditiveExpression	i + 2		5563240	1		+			
ANR	5563407	Identifier	i		5563240	0					
ANR	5563408	PrimaryExpression	2		5563240	1					
ANR	5563409	ExpressionStatement	free ( res )	108:1:1889:1899	5563240	6	True				
ANR	5563410	CallExpression	free ( res )		5563240	0					
ANR	5563411	Callee	free		5563240	0					
ANR	5563412	Identifier	free		5563240	0					
ANR	5563413	ArgumentList	res		5563240	1					
ANR	5563414	Argument	res		5563240	0					
ANR	5563415	Identifier	res		5563240	0					
ANR	5563416	ReturnStatement	return 1 ;	109:1:1902:1910	5563240	7	True				
ANR	5563417	PrimaryExpression	1		5563240	0					
ANR	5563418	ReturnType	SDB_IPI int		5563240	1					
ANR	5563419	Identifier	json_walk		5563240	2					
ANR	5563420	ParameterList	const char * s		5563240	3					
ANR	5563421	Parameter	const char * s	89:23:1463:1475	5563240	0	True				
ANR	5563422	ParameterType	const char *		5563240	0					
ANR	5563423	Identifier	s		5563240	1					
ANR	5563424	CFGEntryNode	ENTRY		5563240		True				
ANR	5563425	CFGExitNode	EXIT		5563240		True				
ANR	5563426	Symbol	ret		5563240						
ANR	5563427	Symbol	res		5563240						
ANR	5563428	Symbol	strlen		5563240						
ANR	5563429	Symbol	malloc		5563240						
ANR	5563430	Symbol	s		5563240						
ANR	5563431	Symbol	* i		5563240						
ANR	5563432	Symbol	len		5563240						
ANR	5563433	Symbol	sdb_js0n		5563240						
ANR	5563434	Symbol	i		5563240						
ANR	5563435	Symbol	* res		5563240						
ANR	5563436	Symbol	* s		5563240						
ANR	5563437	Function	json_find	113:0:1922:2996							
ANR	5563438	FunctionDef	"json_find (const char * s , Rangstr * rs)"		5563437	0					
ANR	5563439	CompoundStatement		113:55:1977:2996	5563437	0					
ANR	5563440	Statement	define	114:1:1980:1985	5563437	0	True				
ANR	5563441	Statement	RESFIXSZ	114:8:1987:1994	5563437	1	True				
ANR	5563442	Statement	1024	114:17:1996:1999	5563437	2	True				
ANR	5563443	IdentifierDeclStatement	RangstrType resfix [ RESFIXSZ ] = { 0 } ;	115:1:2002:2036	5563437	3	True				
ANR	5563444	IdentifierDecl	resfix [ RESFIXSZ ] = { 0 }		5563437	0					
ANR	5563445	IdentifierDeclType	RangstrType [ RESFIXSZ ]		5563437	0					
ANR	5563446	Identifier	resfix		5563437	1					
ANR	5563447	Identifier	RESFIXSZ		5563437	2					
ANR	5563448	AssignmentExpression	resfix [ RESFIXSZ ] = { 0 }		5563437	3		=			
ANR	5563449	Identifier	RESFIXSZ		5563437	0					
ANR	5563450	InitializerList	0		5563437	1					
ANR	5563451	PrimaryExpression	0		5563437	0					
ANR	5563452	IdentifierDeclStatement	RangstrType * res = resfix ;	116:1:2039:2064	5563437	4	True				
ANR	5563453	IdentifierDecl	* res = resfix		5563437	0					
ANR	5563454	IdentifierDeclType	RangstrType *		5563437	0					
ANR	5563455	Identifier	res		5563437	1					
ANR	5563456	AssignmentExpression	* res = resfix		5563437	2		=			
ANR	5563457	Identifier	resfix		5563437	0					
ANR	5563458	Identifier	resfix		5563437	1					
ANR	5563459	IdentifierDeclStatement	"int i , j , n , len , ret ;"	117:1:2067:2088	5563437	5	True				
ANR	5563460	IdentifierDecl	i		5563437	0					
ANR	5563461	IdentifierDeclType	int		5563437	0					
ANR	5563462	Identifier	i		5563437	1					
ANR	5563463	IdentifierDecl	j		5563437	1					
ANR	5563464	IdentifierDeclType	int		5563437	0					
ANR	5563465	Identifier	j		5563437	1					
ANR	5563466	IdentifierDecl	n		5563437	2					
ANR	5563467	IdentifierDeclType	int		5563437	0					
ANR	5563468	Identifier	n		5563437	1					
ANR	5563469	IdentifierDecl	len		5563437	3					
ANR	5563470	IdentifierDeclType	int		5563437	0					
ANR	5563471	Identifier	len		5563437	1					
ANR	5563472	IdentifierDecl	ret		5563437	4					
ANR	5563473	IdentifierDeclType	int		5563437	0					
ANR	5563474	Identifier	ret		5563437	1					
ANR	5563475	IdentifierDeclStatement	Rangstr rsn ;	118:1:2091:2102	5563437	6	True				
ANR	5563476	IdentifierDecl	rsn		5563437	0					
ANR	5563477	IdentifierDeclType	Rangstr		5563437	0					
ANR	5563478	Identifier	rsn		5563437	1					
ANR	5563479	IfStatement	if ( ! s )		5563437	7					
ANR	5563480	Condition	! s	120:5:2110:2111	5563437	0	True				
ANR	5563481	UnaryOperationExpression	! s		5563437	0					
ANR	5563482	UnaryOperator	!		5563437	0					
ANR	5563483	Identifier	s		5563437	1					
ANR	5563484	CompoundStatement		8:9:136:136	5563437	1					
ANR	5563485	ReturnStatement	return rangstr_null ( ) ;	121:2:2118:2140	5563437	0	True				
ANR	5563486	CallExpression	rangstr_null ( )		5563437	0					
ANR	5563487	Callee	rangstr_null		5563437	0					
ANR	5563488	Identifier	rangstr_null		5563437	0					
ANR	5563489	ArgumentList			5563437	1					
ANR	5563490	ExpressionStatement	len = strlen ( s )	124:1:2147:2163	5563437	8	True				
ANR	5563491	AssignmentExpression	len = strlen ( s )		5563437	0		=			
ANR	5563492	Identifier	len		5563437	0					
ANR	5563493	CallExpression	strlen ( s )		5563437	1					
ANR	5563494	Callee	strlen		5563437	0					
ANR	5563495	Identifier	strlen		5563437	0					
ANR	5563496	ArgumentList	s		5563437	1					
ANR	5563497	Argument	s		5563437	0					
ANR	5563498	Identifier	s		5563437	0					
ANR	5563499	IfStatement	if ( len > RESFIXSZ )		5563437	9					
ANR	5563500	Condition	len > RESFIXSZ	125:5:2170:2183	5563437	0	True				
ANR	5563501	RelationalExpression	len > RESFIXSZ		5563437	0		>			
ANR	5563502	Identifier	len		5563437	0					
ANR	5563503	Identifier	RESFIXSZ		5563437	1					
ANR	5563504	CompoundStatement		13:21:208:208	5563437	1					
ANR	5563505	ExpressionStatement	"res = calloc ( len + 1 , sizeof ( RangstrType ) )"	126:2:2190:2234	5563437	0	True				
ANR	5563506	AssignmentExpression	"res = calloc ( len + 1 , sizeof ( RangstrType ) )"		5563437	0		=			
ANR	5563507	Identifier	res		5563437	0					
ANR	5563508	CallExpression	"calloc ( len + 1 , sizeof ( RangstrType ) )"		5563437	1					
ANR	5563509	Callee	calloc		5563437	0					
ANR	5563510	Identifier	calloc		5563437	0					
ANR	5563511	ArgumentList	len + 1		5563437	1					
ANR	5563512	Argument	len + 1		5563437	0					
ANR	5563513	AdditiveExpression	len + 1		5563437	0		+			
ANR	5563514	Identifier	len		5563437	0					
ANR	5563515	PrimaryExpression	1		5563437	1					
ANR	5563516	Argument	sizeof ( RangstrType )		5563437	1					
ANR	5563517	SizeofExpression	sizeof ( RangstrType )		5563437	0					
ANR	5563518	Sizeof	sizeof		5563437	0					
ANR	5563519	SizeofOperand	RangstrType		5563437	1					
ANR	5563520	IfStatement	if ( ! res )		5563437	1					
ANR	5563521	Condition	! res	127:6:2242:2245	5563437	0	True				
ANR	5563522	UnaryOperationExpression	! res		5563437	0					
ANR	5563523	UnaryOperator	!		5563437	0					
ANR	5563524	Identifier	res		5563437	1					
ANR	5563525	CompoundStatement		15:12:270:270	5563437	1					
ANR	5563526	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte%s\\n"" , len + 1 , ( len > 1 ) ? ""s"" : """" )"	128:3:2253:2325	5563437	0	True				
ANR	5563527	CallExpression	"eprintf ( ""Cannot allocate %d byte%s\\n"" , len + 1 , ( len > 1 ) ? ""s"" : """" )"		5563437	0					
ANR	5563528	Callee	eprintf		5563437	0					
ANR	5563529	Identifier	eprintf		5563437	0					
ANR	5563530	ArgumentList	"""Cannot allocate %d byte%s\\n"""		5563437	1					
ANR	5563531	Argument	"""Cannot allocate %d byte%s\\n"""		5563437	0					
ANR	5563532	PrimaryExpression	"""Cannot allocate %d byte%s\\n"""		5563437	0					
ANR	5563533	Argument	len + 1		5563437	1					
ANR	5563534	AdditiveExpression	len + 1		5563437	0		+			
ANR	5563535	Identifier	len		5563437	0					
ANR	5563536	PrimaryExpression	1		5563437	1					
ANR	5563537	Argument	"( len > 1 ) ? ""s"" : """""		5563437	2					
ANR	5563538	ConditionalExpression	"( len > 1 ) ? ""s"" : """""		5563437	0					
ANR	5563539	Condition	len > 1		5563437	0					
ANR	5563540	RelationalExpression	len > 1		5563437	0		>			
ANR	5563541	Identifier	len		5563437	0					
ANR	5563542	PrimaryExpression	1		5563437	1					
ANR	5563543	PrimaryExpression	"""s"""		5563437	1					
ANR	5563544	PrimaryExpression	""""""		5563437	2					
ANR	5563545	ReturnStatement	return rangstr_null ( ) ;	130:3:2330:2352	5563437	1	True				
ANR	5563546	CallExpression	rangstr_null ( )		5563437	0					
ANR	5563547	Callee	rangstr_null		5563437	0					
ANR	5563548	Identifier	rangstr_null		5563437	0					
ANR	5563549	ArgumentList			5563437	1					
ANR	5563550	ExpressionStatement	"ret = sdb_js0n ( ( const unsigned char * ) s , len , res )"	134:1:2363:2414	5563437	10	True				
ANR	5563551	AssignmentExpression	"ret = sdb_js0n ( ( const unsigned char * ) s , len , res )"		5563437	0		=			
ANR	5563552	Identifier	ret		5563437	0					
ANR	5563553	CallExpression	"sdb_js0n ( ( const unsigned char * ) s , len , res )"		5563437	1					
ANR	5563554	Callee	sdb_js0n		5563437	0					
ANR	5563555	Identifier	sdb_js0n		5563437	0					
ANR	5563556	ArgumentList	( const unsigned char * ) s		5563437	1					
ANR	5563557	Argument	( const unsigned char * ) s		5563437	0					
ANR	5563558	CastExpression	( const unsigned char * ) s		5563437	0					
ANR	5563559	CastTarget	const unsigned char *		5563437	0					
ANR	5563560	Identifier	s		5563437	1					
ANR	5563561	Argument	len		5563437	1					
ANR	5563562	Identifier	len		5563437	0					
ANR	5563563	Argument	res		5563437	2					
ANR	5563564	Identifier	res		5563437	0					
ANR	5563565	Statement	define	135:1:2417:2422	5563437	11	True				
ANR	5563566	Statement	PFREE	135:8:2424:2428	5563437	12	True				
ANR	5563567	Statement	(	135:13:2429:2429	5563437	13	True				
ANR	5563568	Statement	x	135:14:2430:2430	5563437	14	True				
ANR	5563569	Statement	)	135:15:2431:2431	5563437	15	True				
ANR	5563570	IfStatement	if ( x && x != resfix )		5563437	16					
ANR	5563571	Condition	x && x != resfix	135:21:2437:2452	5563437	0	True				
ANR	5563572	AndExpression	x && x != resfix		5563437	0		&&			
ANR	5563573	Identifier	x		5563437	0					
ANR	5563574	EqualityExpression	x != resfix		5563437	1		!=			
ANR	5563575	Identifier	x		5563437	0					
ANR	5563576	Identifier	resfix		5563437	1					
ANR	5563577	Statement	free	135:39:2455:2458	5563437	1	True				
ANR	5563578	Statement	(	135:44:2460:2460	5563437	17	True				
ANR	5563579	Statement	x	135:45:2461:2461	5563437	18	True				
ANR	5563580	Statement	)	135:46:2462:2462	5563437	19	True				
ANR	5563581	IfStatement	if ( ret > 0 )		5563437	20					
ANR	5563582	Condition	ret > 0	136:5:2469:2475	5563437	0	True				
ANR	5563583	RelationalExpression	ret > 0		5563437	0		>			
ANR	5563584	Identifier	ret		5563437	0					
ANR	5563585	PrimaryExpression	0		5563437	1					
ANR	5563586	CompoundStatement		24:14:500:500	5563437	1					
ANR	5563587	ExpressionStatement	PFREE ( res )	137:2:2482:2493	5563437	0	True				
ANR	5563588	CallExpression	PFREE ( res )		5563437	0					
ANR	5563589	Callee	PFREE		5563437	0					
ANR	5563590	Identifier	PFREE		5563437	0					
ANR	5563591	ArgumentList	res		5563437	1					
ANR	5563592	Argument	res		5563437	0					
ANR	5563593	Identifier	res		5563437	0					
ANR	5563594	ReturnStatement	return rangstr_null ( ) ;	138:2:2497:2519	5563437	1	True				
ANR	5563595	CallExpression	rangstr_null ( )		5563437	0					
ANR	5563596	Callee	rangstr_null		5563437	0					
ANR	5563597	Identifier	rangstr_null		5563437	0					
ANR	5563598	ArgumentList			5563437	1					
ANR	5563599	IfStatement	if ( * s == '[' )		5563437	21					
ANR	5563600	Condition	* s == '['	141:5:2530:2538	5563437	0	True				
ANR	5563601	EqualityExpression	* s == '['		5563437	0		==			
ANR	5563602	UnaryOperationExpression	* s		5563437	0					
ANR	5563603	UnaryOperator	*		5563437	0					
ANR	5563604	Identifier	s		5563437	1					
ANR	5563605	PrimaryExpression	'['		5563437	1					
ANR	5563606	CompoundStatement		29:16:563:563	5563437	1					
ANR	5563607	ExpressionStatement	n = rangstr_int ( rs )	142:2:2545:2565	5563437	0	True				
ANR	5563608	AssignmentExpression	n = rangstr_int ( rs )		5563437	0		=			
ANR	5563609	Identifier	n		5563437	0					
ANR	5563610	CallExpression	rangstr_int ( rs )		5563437	1					
ANR	5563611	Callee	rangstr_int		5563437	0					
ANR	5563612	Identifier	rangstr_int		5563437	0					
ANR	5563613	ArgumentList	rs		5563437	1					
ANR	5563614	Argument	rs		5563437	0					
ANR	5563615	Identifier	rs		5563437	0					
ANR	5563616	IfStatement	if ( n < 0 )		5563437	1					
ANR	5563617	Condition	n < 0	143:6:2573:2577	5563437	0	True				
ANR	5563618	RelationalExpression	n < 0		5563437	0		<			
ANR	5563619	Identifier	n		5563437	0					
ANR	5563620	PrimaryExpression	0		5563437	1					
ANR	5563621	CompoundStatement		31:13:602:602	5563437	1					
ANR	5563622	GotoStatement	goto beach ;	144:3:2585:2595	5563437	0	True				
ANR	5563623	Identifier	beach		5563437	0					
ANR	5563624	ForStatement	"for ( i = j = 0 ; res [ i ] && j < n ; i += 2 , j ++ )"		5563437	2					
ANR	5563625	ForInit	i = j = 0 ;	147:7:2609:2618	5563437	0	True				
ANR	5563626	AssignmentExpression	i = j = 0		5563437	0		=			
ANR	5563627	Identifier	i		5563437	0					
ANR	5563628	AssignmentExpression	j = 0		5563437	1		=			
ANR	5563629	Identifier	j		5563437	0					
ANR	5563630	PrimaryExpression	0		5563437	1					
ANR	5563631	Condition	res [ i ] && j < n	147:18:2620:2634	5563437	1	True				
ANR	5563632	AndExpression	res [ i ] && j < n		5563437	0		&&			
ANR	5563633	ArrayIndexing	res [ i ]		5563437	0					
ANR	5563634	Identifier	res		5563437	0					
ANR	5563635	Identifier	i		5563437	1					
ANR	5563636	RelationalExpression	j < n		5563437	1		<			
ANR	5563637	Identifier	j		5563437	0					
ANR	5563638	Identifier	n		5563437	1					
ANR	5563639	Expression	"i += 2 , j ++"	147:35:2637:2647	5563437	2	True				
ANR	5563640	AssignmentExpression	i += 2		5563437	0		+=			
ANR	5563641	Identifier	i		5563437	0					
ANR	5563642	PrimaryExpression	2		5563437	1					
ANR	5563643	PostIncDecOperationExpression	j ++		5563437	1					
ANR	5563644	Identifier	j		5563437	0					
ANR	5563645	IncDec	++		5563437	1					
ANR	5563646	ExpressionStatement		147:47:2649:2649	5563437	3	True				
ANR	5563647	IfStatement	if ( ! res [ i ] )		5563437	3					
ANR	5563648	Condition	! res [ i ]	148:6:2657:2663	5563437	0	True				
ANR	5563649	UnaryOperationExpression	! res [ i ]		5563437	0					
ANR	5563650	UnaryOperator	!		5563437	0					
ANR	5563651	ArrayIndexing	res [ i ]		5563437	1					
ANR	5563652	Identifier	res		5563437	0					
ANR	5563653	Identifier	i		5563437	1					
ANR	5563654	CompoundStatement		36:15:688:688	5563437	1					
ANR	5563655	GotoStatement	goto beach ;	149:3:2671:2681	5563437	0	True				
ANR	5563656	Identifier	beach		5563437	0					
ANR	5563657	ExpressionStatement	"rsn = rangstr_news ( s , res , i )"	152:2:2690:2720	5563437	4	True				
ANR	5563658	AssignmentExpression	"rsn = rangstr_news ( s , res , i )"		5563437	0		=			
ANR	5563659	Identifier	rsn		5563437	0					
ANR	5563660	CallExpression	"rangstr_news ( s , res , i )"		5563437	1					
ANR	5563661	Callee	rangstr_news		5563437	0					
ANR	5563662	Identifier	rangstr_news		5563437	0					
ANR	5563663	ArgumentList	s		5563437	1					
ANR	5563664	Argument	s		5563437	0					
ANR	5563665	Identifier	s		5563437	0					
ANR	5563666	Argument	res		5563437	1					
ANR	5563667	Identifier	res		5563437	0					
ANR	5563668	Argument	i		5563437	2					
ANR	5563669	Identifier	i		5563437	0					
ANR	5563670	ExpressionStatement	PFREE ( res )	154:2:2725:2736	5563437	5	True				
ANR	5563671	CallExpression	PFREE ( res )		5563437	0					
ANR	5563672	Callee	PFREE		5563437	0					
ANR	5563673	Identifier	PFREE		5563437	0					
ANR	5563674	ArgumentList	res		5563437	1					
ANR	5563675	Argument	res		5563437	0					
ANR	5563676	Identifier	res		5563437	0					
ANR	5563677	ReturnStatement	return rsn ;	155:2:2740:2750	5563437	6	True				
ANR	5563678	Identifier	rsn		5563437	0					
ANR	5563679	ElseStatement	else		5563437	0					
ANR	5563680	CompoundStatement		44:8:782:782	5563437	0					
ANR	5563681	ForStatement	for ( i = 0 ; res [ i ] ; i += 4 )		5563437	0					
ANR	5563682	ForInit	i = 0 ;	157:7:2769:2772	5563437	0	True				
ANR	5563683	AssignmentExpression	i = 0		5563437	0		=			
ANR	5563684	Identifier	i		5563437	0					
ANR	5563685	PrimaryExpression	0		5563437	1					
ANR	5563686	Condition	res [ i ]	157:12:2774:2779	5563437	1	True				
ANR	5563687	ArrayIndexing	res [ i ]		5563437	0					
ANR	5563688	Identifier	res		5563437	0					
ANR	5563689	Identifier	i		5563437	1					
ANR	5563690	AssignmentExpression	i += 4	157:20:2782:2785	5563437	2	True	+=			
ANR	5563691	Identifier	i		5563437	0					
ANR	5563692	PrimaryExpression	4		5563437	1					
ANR	5563693	CompoundStatement		46:3:815:853	5563437	3					
ANR	5563694	IdentifierDeclStatement	"Rangstr rsn = rangstr_news ( s , res , i ) ;"	158:3:2793:2831	5563437	0	True				
ANR	5563695	IdentifierDecl	"rsn = rangstr_news ( s , res , i )"		5563437	0					
ANR	5563696	IdentifierDeclType	Rangstr		5563437	0					
ANR	5563697	Identifier	rsn		5563437	1					
ANR	5563698	AssignmentExpression	"rsn = rangstr_news ( s , res , i )"		5563437	2		=			
ANR	5563699	Identifier	rsn		5563437	0					
ANR	5563700	CallExpression	"rangstr_news ( s , res , i )"		5563437	1					
ANR	5563701	Callee	rangstr_news		5563437	0					
ANR	5563702	Identifier	rangstr_news		5563437	0					
ANR	5563703	ArgumentList	s		5563437	1					
ANR	5563704	Argument	s		5563437	0					
ANR	5563705	Identifier	s		5563437	0					
ANR	5563706	Argument	res		5563437	1					
ANR	5563707	Identifier	res		5563437	0					
ANR	5563708	Argument	i		5563437	2					
ANR	5563709	Identifier	i		5563437	0					
ANR	5563710	IfStatement	"if ( ! rangstr_cmp ( rs , & rsn ) )"		5563437	1					
ANR	5563711	Condition	"! rangstr_cmp ( rs , & rsn )"	159:7:2840:2862	5563437	0	True				
ANR	5563712	UnaryOperationExpression	"! rangstr_cmp ( rs , & rsn )"		5563437	0					
ANR	5563713	UnaryOperator	!		5563437	0					
ANR	5563714	CallExpression	"rangstr_cmp ( rs , & rsn )"		5563437	1					
ANR	5563715	Callee	rangstr_cmp		5563437	0					
ANR	5563716	Identifier	rangstr_cmp		5563437	0					
ANR	5563717	ArgumentList	rs		5563437	1					
ANR	5563718	Argument	rs		5563437	0					
ANR	5563719	Identifier	rs		5563437	0					
ANR	5563720	Argument	& rsn		5563437	1					
ANR	5563721	UnaryOperationExpression	& rsn		5563437	0					
ANR	5563722	UnaryOperator	&		5563437	0					
ANR	5563723	Identifier	rsn		5563437	1					
ANR	5563724	CompoundStatement		47:32:887:887	5563437	1					
ANR	5563725	ExpressionStatement	"rsn = rangstr_news ( s , res , i + 2 )"	160:4:2871:2903	5563437	0	True				
ANR	5563726	AssignmentExpression	"rsn = rangstr_news ( s , res , i + 2 )"		5563437	0		=			
ANR	5563727	Identifier	rsn		5563437	0					
ANR	5563728	CallExpression	"rangstr_news ( s , res , i + 2 )"		5563437	1					
ANR	5563729	Callee	rangstr_news		5563437	0					
ANR	5563730	Identifier	rangstr_news		5563437	0					
ANR	5563731	ArgumentList	s		5563437	1					
ANR	5563732	Argument	s		5563437	0					
ANR	5563733	Identifier	s		5563437	0					
ANR	5563734	Argument	res		5563437	1					
ANR	5563735	Identifier	res		5563437	0					
ANR	5563736	Argument	i + 2		5563437	2					
ANR	5563737	AdditiveExpression	i + 2		5563437	0		+			
ANR	5563738	Identifier	i		5563437	0					
ANR	5563739	PrimaryExpression	2		5563437	1					
ANR	5563740	ExpressionStatement	PFREE ( res )	161:4:2909:2920	5563437	1	True				
ANR	5563741	CallExpression	PFREE ( res )		5563437	0					
ANR	5563742	Callee	PFREE		5563437	0					
ANR	5563743	Identifier	PFREE		5563437	0					
ANR	5563744	ArgumentList	res		5563437	1					
ANR	5563745	Argument	res		5563437	0					
ANR	5563746	Identifier	res		5563437	0					
ANR	5563747	ReturnStatement	return rsn ;	162:4:2926:2936	5563437	2	True				
ANR	5563748	Identifier	rsn		5563437	0					
ANR	5563749	Label	beach :	166:0:2950:2955	5563437	22	True				
ANR	5563750	Identifier	beach		5563437	0					
ANR	5563751	ExpressionStatement	PFREE ( res )	167:1:2958:2969	5563437	23	True				
ANR	5563752	CallExpression	PFREE ( res )		5563437	0					
ANR	5563753	Callee	PFREE		5563437	0					
ANR	5563754	Identifier	PFREE		5563437	0					
ANR	5563755	ArgumentList	res		5563437	1					
ANR	5563756	Argument	res		5563437	0					
ANR	5563757	Identifier	res		5563437	0					
ANR	5563758	ReturnStatement	return rangstr_null ( ) ;	168:1:2972:2994	5563437	24	True				
ANR	5563759	CallExpression	rangstr_null ( )		5563437	0					
ANR	5563760	Callee	rangstr_null		5563437	0					
ANR	5563761	Identifier	rangstr_null		5563437	0					
ANR	5563762	ArgumentList			5563437	1					
ANR	5563763	ReturnType	SDB_IPI Rangstr		5563437	1					
ANR	5563764	Identifier	json_find		5563437	2					
ANR	5563765	ParameterList	"const char * s , Rangstr * rs"		5563437	3					
ANR	5563766	Parameter	const char * s	113:27:1949:1961	5563437	0	True				
ANR	5563767	ParameterType	const char *		5563437	0					
ANR	5563768	Identifier	s		5563437	1					
ANR	5563769	Parameter	Rangstr * rs	113:42:1964:1974	5563437	1	True				
ANR	5563770	ParameterType	Rangstr *		5563437	0					
ANR	5563771	Identifier	rs		5563437	1					
ANR	5563772	CFGEntryNode	ENTRY		5563437		True				
ANR	5563773	CFGExitNode	EXIT		5563437		True				
ANR	5563774	Symbol	ret		5563437						
ANR	5563775	Symbol	rs		5563437						
ANR	5563776	Symbol	res		5563437						
ANR	5563777	Symbol	rangstr_news		5563437						
ANR	5563778	Symbol	rangstr_int		5563437						
ANR	5563779	Symbol	sdb_js0n		5563437						
ANR	5563780	Symbol	i		5563437						
ANR	5563781	Symbol	j		5563437						
ANR	5563782	Symbol	* res		5563437						
ANR	5563783	Symbol	calloc		5563437						
ANR	5563784	Symbol	rsn		5563437						
ANR	5563785	Symbol	n		5563437						
ANR	5563786	Symbol	rangstr_cmp		5563437						
ANR	5563787	Symbol	RESFIXSZ		5563437						
ANR	5563788	Symbol	strlen		5563437						
ANR	5563789	Symbol	s		5563437						
ANR	5563790	Symbol	* i		5563437						
ANR	5563791	Symbol	len		5563437						
ANR	5563792	Symbol	& rsn		5563437						
ANR	5563793	Symbol	rangstr_null		5563437						
ANR	5563794	Symbol	resfix		5563437						
ANR	5563795	Symbol	x		5563437						
ANR	5563796	Symbol	* s		5563437						
ANR	5563797	Function	json_get	171:0:2999:4174							
ANR	5563798	FunctionDef	"json_get (const char * js , const char * p)"		5563797	0					
ANR	5563799	CompoundStatement		171:57:3056:4174	5563797	0					
ANR	5563800	IdentifierDeclStatement	"int x , n = 0 ;"	172:1:3059:3071	5563797	0	True				
ANR	5563801	IdentifierDecl	x		5563797	0					
ANR	5563802	IdentifierDeclType	int		5563797	0					
ANR	5563803	Identifier	x		5563797	1					
ANR	5563804	IdentifierDecl	n = 0		5563797	1					
ANR	5563805	IdentifierDeclType	int		5563797	0					
ANR	5563806	Identifier	n		5563797	1					
ANR	5563807	AssignmentExpression	n = 0		5563797	2		=			
ANR	5563808	Identifier	n		5563797	0					
ANR	5563809	PrimaryExpression	0		5563797	1					
ANR	5563810	IdentifierDeclStatement	size_t rst ;	173:1:3074:3084	5563797	1	True				
ANR	5563811	IdentifierDecl	rst		5563797	0					
ANR	5563812	IdentifierDeclType	size_t		5563797	0					
ANR	5563813	Identifier	rst		5563797	1					
ANR	5563814	IdentifierDeclStatement	"Rangstr rj2 , rj = rangstr_new ( js ) ;"	174:1:3087:3121	5563797	2	True				
ANR	5563815	IdentifierDecl	rj2		5563797	0					
ANR	5563816	IdentifierDeclType	Rangstr		5563797	0					
ANR	5563817	Identifier	rj2		5563797	1					
ANR	5563818	IdentifierDecl	rj = rangstr_new ( js )		5563797	1					
ANR	5563819	IdentifierDeclType	Rangstr		5563797	0					
ANR	5563820	Identifier	rj		5563797	1					
ANR	5563821	AssignmentExpression	rj = rangstr_new ( js )		5563797	2		=			
ANR	5563822	Identifier	rj		5563797	0					
ANR	5563823	CallExpression	rangstr_new ( js )		5563797	1					
ANR	5563824	Callee	rangstr_new		5563797	0					
ANR	5563825	Identifier	rangstr_new		5563797	0					
ANR	5563826	ArgumentList	js		5563797	1					
ANR	5563827	Argument	js		5563797	0					
ANR	5563828	Identifier	js		5563797	0					
ANR	5563829	IdentifierDeclStatement	Rangstr rs = rangstr_new ( p ) ;	175:1:3124:3152	5563797	3	True				
ANR	5563830	IdentifierDecl	rs = rangstr_new ( p )		5563797	0					
ANR	5563831	IdentifierDeclType	Rangstr		5563797	0					
ANR	5563832	Identifier	rs		5563797	1					
ANR	5563833	AssignmentExpression	rs = rangstr_new ( p )		5563797	2		=			
ANR	5563834	Identifier	rs		5563797	0					
ANR	5563835	CallExpression	rangstr_new ( p )		5563797	1					
ANR	5563836	Callee	rangstr_new		5563797	0					
ANR	5563837	Identifier	rangstr_new		5563797	0					
ANR	5563838	ArgumentList	p		5563797	1					
ANR	5563839	Argument	p		5563797	0					
ANR	5563840	Identifier	p		5563797	0					
ANR	5563841	ExpressionStatement	json_path_first ( & rs )	176:1:3155:3176	5563797	4	True				
ANR	5563842	CallExpression	json_path_first ( & rs )		5563797	0					
ANR	5563843	Callee	json_path_first		5563797	0					
ANR	5563844	Identifier	json_path_first		5563797	0					
ANR	5563845	ArgumentList	& rs		5563797	1					
ANR	5563846	Argument	& rs		5563797	0					
ANR	5563847	UnaryOperationExpression	& rs		5563797	0					
ANR	5563848	UnaryOperator	&		5563797	0					
ANR	5563849	Identifier	rs		5563797	1					
ANR	5563850	DoStatement	do		5563797	5					
ANR	5563851	CompoundStatement		7:4:125:125	5563797	0					
ANR	5563852	ExpressionStatement	rst = rs . t	178:2:3186:3196	5563797	0	True				
ANR	5563853	AssignmentExpression	rst = rs . t		5563797	0		=			
ANR	5563854	Identifier	rst		5563797	0					
ANR	5563855	MemberAccess	rs . t		5563797	1					
ANR	5563856	Identifier	rs		5563797	0					
ANR	5563857	Identifier	t		5563797	1					
ANR	5563858	ExpressionStatement	rs . f ++	179:2:3200:3206	5563797	1	True				
ANR	5563859	PostIncDecOperationExpression	rs . f ++		5563797	0					
ANR	5563860	MemberAccess	rs . f		5563797	0					
ANR	5563861	Identifier	rs		5563797	0					
ANR	5563862	Identifier	f		5563797	1					
ANR	5563863	IncDec	++		5563797	1					
ANR	5563864	ExpressionStatement	"x = rangstr_find ( & rs , '[' )"	180:2:3210:3237	5563797	2	True				
ANR	5563865	AssignmentExpression	"x = rangstr_find ( & rs , '[' )"		5563797	0		=			
ANR	5563866	Identifier	x		5563797	0					
ANR	5563867	CallExpression	"rangstr_find ( & rs , '[' )"		5563797	1					
ANR	5563868	Callee	rangstr_find		5563797	0					
ANR	5563869	Identifier	rangstr_find		5563797	0					
ANR	5563870	ArgumentList	& rs		5563797	1					
ANR	5563871	Argument	& rs		5563797	0					
ANR	5563872	UnaryOperationExpression	& rs		5563797	0					
ANR	5563873	UnaryOperator	&		5563797	0					
ANR	5563874	Identifier	rs		5563797	1					
ANR	5563875	Argument	'['		5563797	1					
ANR	5563876	PrimaryExpression	'['		5563797	0					
ANR	5563877	ExpressionStatement	rs . f --	181:2:3241:3247	5563797	3	True				
ANR	5563878	PostIncDecOperationExpression	rs . f --		5563797	0					
ANR	5563879	MemberAccess	rs . f		5563797	0					
ANR	5563880	Identifier	rs		5563797	0					
ANR	5563881	Identifier	f		5563797	1					
ANR	5563882	IncDec	--		5563797	1					
ANR	5563883	IfStatement	if ( x != - 1 )		5563797	4					
ANR	5563884	Condition	x != - 1	182:6:3255:3261	5563797	0	True				
ANR	5563885	EqualityExpression	x != - 1		5563797	0		!=			
ANR	5563886	Identifier	x		5563797	0					
ANR	5563887	UnaryOperationExpression	- 1		5563797	1					
ANR	5563888	UnaryOperator	-		5563797	0					
ANR	5563889	PrimaryExpression	1		5563797	1					
ANR	5563890	ExpressionStatement	rs . t = x	183:3:3267:3275	5563797	1	True				
ANR	5563891	AssignmentExpression	rs . t = x		5563797	0		=			
ANR	5563892	MemberAccess	rs . t		5563797	0					
ANR	5563893	Identifier	rs		5563797	0					
ANR	5563894	Identifier	t		5563797	1					
ANR	5563895	Identifier	x		5563797	1					
ANR	5563896	ExpressionStatement	"printf ( ""x = %d f = %d t = %d\\n"" , x , rs . f , rs . t )"	185:0:3283:3331	5563797	5	True				
ANR	5563897	CallExpression	"printf ( ""x = %d f = %d t = %d\\n"" , x , rs . f , rs . t )"		5563797	0					
ANR	5563898	Callee	printf		5563797	0					
ANR	5563899	Identifier	printf		5563797	0					
ANR	5563900	ArgumentList	"""x = %d f = %d t = %d\\n"""		5563797	1					
ANR	5563901	Argument	"""x = %d f = %d t = %d\\n"""		5563797	0					
ANR	5563902	PrimaryExpression	"""x = %d f = %d t = %d\\n"""		5563797	0					
ANR	5563903	Argument	x		5563797	1					
ANR	5563904	Identifier	x		5563797	0					
ANR	5563905	Argument	rs . f		5563797	2					
ANR	5563906	MemberAccess	rs . f		5563797	0					
ANR	5563907	Identifier	rs		5563797	0					
ANR	5563908	Identifier	f		5563797	1					
ANR	5563909	Argument	rs . t		5563797	3					
ANR	5563910	MemberAccess	rs . t		5563797	0					
ANR	5563911	Identifier	rs		5563797	0					
ANR	5563912	Identifier	t		5563797	1					
ANR	5563913	ExpressionStatement	"fprintf ( stderr , ""source (%s)\\n"" , rangstr_dup ( & rs ) )"	186:0:3333:3385	5563797	6	True				
ANR	5563914	CallExpression	"fprintf ( stderr , ""source (%s)\\n"" , rangstr_dup ( & rs ) )"		5563797	0					
ANR	5563915	Callee	fprintf		5563797	0					
ANR	5563916	Identifier	fprintf		5563797	0					
ANR	5563917	ArgumentList	stderr		5563797	1					
ANR	5563918	Argument	stderr		5563797	0					
ANR	5563919	Identifier	stderr		5563797	0					
ANR	5563920	Argument	"""source (%s)\\n"""		5563797	1					
ANR	5563921	PrimaryExpression	"""source (%s)\\n"""		5563797	0					
ANR	5563922	Argument	rangstr_dup ( & rs )		5563797	2					
ANR	5563923	CallExpression	rangstr_dup ( & rs )		5563797	0					
ANR	5563924	Callee	rangstr_dup		5563797	0					
ANR	5563925	Identifier	rangstr_dup		5563797	0					
ANR	5563926	ArgumentList	& rs		5563797	1					
ANR	5563927	Argument	& rs		5563797	0					
ANR	5563928	UnaryOperationExpression	& rs		5563797	0					
ANR	5563929	UnaryOperator	&		5563797	0					
ANR	5563930	Identifier	rs		5563797	1					
ANR	5563931	ExpressionStatement	"fprintf ( stderr , ""onjson (%s)\\n"" , rangstr_dup ( & rj ) )"	187:0:3387:3439	5563797	7	True				
ANR	5563932	CallExpression	"fprintf ( stderr , ""onjson (%s)\\n"" , rangstr_dup ( & rj ) )"		5563797	0					
ANR	5563933	Callee	fprintf		5563797	0					
ANR	5563934	Identifier	fprintf		5563797	0					
ANR	5563935	ArgumentList	stderr		5563797	1					
ANR	5563936	Argument	stderr		5563797	0					
ANR	5563937	Identifier	stderr		5563797	0					
ANR	5563938	Argument	"""onjson (%s)\\n"""		5563797	1					
ANR	5563939	PrimaryExpression	"""onjson (%s)\\n"""		5563797	0					
ANR	5563940	Argument	rangstr_dup ( & rj )		5563797	2					
ANR	5563941	CallExpression	rangstr_dup ( & rj )		5563797	0					
ANR	5563942	Callee	rangstr_dup		5563797	0					
ANR	5563943	Identifier	rangstr_dup		5563797	0					
ANR	5563944	ArgumentList	& rj		5563797	1					
ANR	5563945	Argument	& rj		5563797	0					
ANR	5563946	UnaryOperationExpression	& rj		5563797	0					
ANR	5563947	UnaryOperator	&		5563797	0					
ANR	5563948	Identifier	rj		5563797	1					
ANR	5563949	IfStatement	if ( rst == rs . t && n && rj . p )		5563797	8					
ANR	5563950	Condition	rst == rs . t && n && rj . p	189:6:3454:3477	5563797	0	True				
ANR	5563951	AndExpression	rst == rs . t && n && rj . p		5563797	0		&&			
ANR	5563952	EqualityExpression	rst == rs . t		5563797	0		==			
ANR	5563953	Identifier	rst		5563797	0					
ANR	5563954	MemberAccess	rs . t		5563797	1					
ANR	5563955	Identifier	rs		5563797	0					
ANR	5563956	Identifier	t		5563797	1					
ANR	5563957	AndExpression	n && rj . p		5563797	1		&&			
ANR	5563958	Identifier	n		5563797	0					
ANR	5563959	MemberAccess	rj . p		5563797	1					
ANR	5563960	Identifier	rj		5563797	0					
ANR	5563961	Identifier	p		5563797	1					
ANR	5563962	BreakStatement	break ;	190:3:3496:3501	5563797	1	True				
ANR	5563963	IfStatement	if ( ! rj . p )		5563797	9					
ANR	5563964	Condition	! rj . p	191:6:3509:3513	5563797	0	True				
ANR	5563965	UnaryOperationExpression	! rj . p		5563797	0					
ANR	5563966	UnaryOperator	!		5563797	0					
ANR	5563967	MemberAccess	rj . p		5563797	1					
ANR	5563968	Identifier	rj		5563797	0					
ANR	5563969	Identifier	p		5563797	1					
ANR	5563970	BreakStatement	break ;	191:13:3516:3521	5563797	1	True				
ANR	5563971	DoStatement	do		5563797	10					
ANR	5563972	CompoundStatement		22:5:471:471	5563797	0					
ANR	5563973	ExpressionStatement	"rj2 = json_find ( rangstr_str ( & rj ) , & rs )"	193:3:3533:3573	5563797	0	True				
ANR	5563974	AssignmentExpression	"rj2 = json_find ( rangstr_str ( & rj ) , & rs )"		5563797	0		=			
ANR	5563975	Identifier	rj2		5563797	0					
ANR	5563976	CallExpression	"json_find ( rangstr_str ( & rj ) , & rs )"		5563797	1					
ANR	5563977	Callee	json_find		5563797	0					
ANR	5563978	Identifier	json_find		5563797	0					
ANR	5563979	ArgumentList	rangstr_str ( & rj )		5563797	1					
ANR	5563980	Argument	rangstr_str ( & rj )		5563797	0					
ANR	5563981	CallExpression	rangstr_str ( & rj )		5563797	0					
ANR	5563982	Callee	rangstr_str		5563797	0					
ANR	5563983	Identifier	rangstr_str		5563797	0					
ANR	5563984	ArgumentList	& rj		5563797	1					
ANR	5563985	Argument	& rj		5563797	0					
ANR	5563986	UnaryOperationExpression	& rj		5563797	0					
ANR	5563987	UnaryOperator	&		5563797	0					
ANR	5563988	Identifier	rj		5563797	1					
ANR	5563989	Argument	& rs		5563797	1					
ANR	5563990	UnaryOperationExpression	& rs		5563797	0					
ANR	5563991	UnaryOperator	&		5563797	0					
ANR	5563992	Identifier	rs		5563797	1					
ANR	5563993	IfStatement	if ( ! rj2 . p )		5563797	1					
ANR	5563994	Condition	! rj2 . p	197:7:3730:3735	5563797	0	True				
ANR	5563995	UnaryOperationExpression	! rj2 . p		5563797	0					
ANR	5563996	UnaryOperator	!		5563797	0					
ANR	5563997	MemberAccess	rj2 . p		5563797	1					
ANR	5563998	Identifier	rj2		5563797	0					
ANR	5563999	Identifier	p		5563797	1					
ANR	5564000	CompoundStatement		27:15:681:681	5563797	1					
ANR	5564001	IfStatement	if ( ! rj . p [ rj . t ] )		5563797	0					
ANR	5564002	Condition	! rj . p [ rj . t ]	198:8:3748:3758	5563797	0	True				
ANR	5564003	UnaryOperationExpression	! rj . p [ rj . t ]		5563797	0					
ANR	5564004	UnaryOperator	!		5563797	0					
ANR	5564005	ArrayIndexing	rj . p [ rj . t ]		5563797	1					
ANR	5564006	MemberAccess	rj . p		5563797	0					
ANR	5564007	Identifier	rj		5563797	0					
ANR	5564008	Identifier	p		5563797	1					
ANR	5564009	MemberAccess	rj . t		5563797	1					
ANR	5564010	Identifier	rj		5563797	0					
ANR	5564011	Identifier	t		5563797	1					
ANR	5564012	ReturnStatement	return rj2 ;	198:21:3761:3771	5563797	1	True				
ANR	5564013	Identifier	rj2		5563797	0					
ANR	5564014	BreakStatement	break ;	199:4:3777:3782	5563797	1	True				
ANR	5564015	ExpressionStatement	rj = rj2	201:3:3792:3800	5563797	2	True				
ANR	5564016	AssignmentExpression	rj = rj2		5563797	0		=			
ANR	5564017	Identifier	rj		5563797	0					
ANR	5564018	Identifier	rj2		5563797	1					
ANR	5564019	ExpressionStatement	"fprintf ( stderr , ""--  (%s)\\n"" , rangstr_dup ( & rj ) )"	203:0:3808:3857	5563797	3	True				
ANR	5564020	CallExpression	"fprintf ( stderr , ""--  (%s)\\n"" , rangstr_dup ( & rj ) )"		5563797	0					
ANR	5564021	Callee	fprintf		5563797	0					
ANR	5564022	Identifier	fprintf		5563797	0					
ANR	5564023	ArgumentList	stderr		5563797	1					
ANR	5564024	Argument	stderr		5563797	0					
ANR	5564025	Identifier	stderr		5563797	0					
ANR	5564026	Argument	"""--  (%s)\\n"""		5563797	1					
ANR	5564027	PrimaryExpression	"""--  (%s)\\n"""		5563797	0					
ANR	5564028	Argument	rangstr_dup ( & rj )		5563797	2					
ANR	5564029	CallExpression	rangstr_dup ( & rj )		5563797	0					
ANR	5564030	Callee	rangstr_dup		5563797	0					
ANR	5564031	Identifier	rangstr_dup		5563797	0					
ANR	5564032	ArgumentList	& rj		5563797	1					
ANR	5564033	Argument	& rj		5563797	0					
ANR	5564034	UnaryOperationExpression	& rj		5563797	0					
ANR	5564035	UnaryOperator	&		5563797	0					
ANR	5564036	Identifier	rj		5563797	1					
ANR	5564037	Condition	json_path_next ( & rs )	205:11:3877:3896	5563797	1	True				
ANR	5564038	CallExpression	json_path_next ( & rs )		5563797	0					
ANR	5564039	Callee	json_path_next		5563797	0					
ANR	5564040	Identifier	json_path_next		5563797	0					
ANR	5564041	ArgumentList	& rs		5563797	1					
ANR	5564042	Argument	& rs		5563797	0					
ANR	5564043	UnaryOperationExpression	& rs		5563797	0					
ANR	5564044	UnaryOperator	&		5563797	0					
ANR	5564045	Identifier	rs		5563797	1					
ANR	5564046	ExpressionStatement	"printf ( ""x = %d\\n"" , x )"	208:0:3930:3952	5563797	11	True				
ANR	5564047	CallExpression	"printf ( ""x = %d\\n"" , x )"		5563797	0					
ANR	5564048	Callee	printf		5563797	0					
ANR	5564049	Identifier	printf		5563797	0					
ANR	5564050	ArgumentList	"""x = %d\\n"""		5563797	1					
ANR	5564051	Argument	"""x = %d\\n"""		5563797	0					
ANR	5564052	PrimaryExpression	"""x = %d\\n"""		5563797	0					
ANR	5564053	Argument	x		5563797	1					
ANR	5564054	Identifier	x		5563797	0					
ANR	5564055	ExpressionStatement	"printf ( ""rsf = %d\\n"" , rs . f )"	208:24:3954:3981	5563797	12	True				
ANR	5564056	CallExpression	"printf ( ""rsf = %d\\n"" , rs . f )"		5563797	0					
ANR	5564057	Callee	printf		5563797	0					
ANR	5564058	Identifier	printf		5563797	0					
ANR	5564059	ArgumentList	"""rsf = %d\\n"""		5563797	1					
ANR	5564060	Argument	"""rsf = %d\\n"""		5563797	0					
ANR	5564061	PrimaryExpression	"""rsf = %d\\n"""		5563797	0					
ANR	5564062	Argument	rs . f		5563797	1					
ANR	5564063	MemberAccess	rs . f		5563797	0					
ANR	5564064	Identifier	rs		5563797	0					
ANR	5564065	Identifier	f		5563797	1					
ANR	5564066	ExpressionStatement	"fprintf ( stderr , ""xxx (%s)\\n"" , rangstr_dup ( & rj ) )"	209:0:3983:4032	5563797	13	True				
ANR	5564067	CallExpression	"fprintf ( stderr , ""xxx (%s)\\n"" , rangstr_dup ( & rj ) )"		5563797	0					
ANR	5564068	Callee	fprintf		5563797	0					
ANR	5564069	Identifier	fprintf		5563797	0					
ANR	5564070	ArgumentList	stderr		5563797	1					
ANR	5564071	Argument	stderr		5563797	0					
ANR	5564072	Identifier	stderr		5563797	0					
ANR	5564073	Argument	"""xxx (%s)\\n"""		5563797	1					
ANR	5564074	PrimaryExpression	"""xxx (%s)\\n"""		5563797	0					
ANR	5564075	Argument	rangstr_dup ( & rj )		5563797	2					
ANR	5564076	CallExpression	rangstr_dup ( & rj )		5563797	0					
ANR	5564077	Callee	rangstr_dup		5563797	0					
ANR	5564078	Identifier	rangstr_dup		5563797	0					
ANR	5564079	ArgumentList	& rj		5563797	1					
ANR	5564080	Argument	& rj		5563797	0					
ANR	5564081	UnaryOperationExpression	& rj		5563797	0					
ANR	5564082	UnaryOperator	&		5563797	0					
ANR	5564083	Identifier	rj		5563797	1					
ANR	5564084	ReturnStatement	return rj ;	210:0:4034:4043	5563797	14	True				
ANR	5564085	Identifier	rj		5563797	0					
ANR	5564086	IfStatement	if ( ( rst == rs . t && n && rj . p ) )		5563797	15					
ANR	5564087	Condition	rst == rs . t && n && rj . p	212:6:4058:4083	5563797	0	True				
ANR	5564088	AndExpression	rst == rs . t && n && rj . p		5563797	0		&&			
ANR	5564089	EqualityExpression	rst == rs . t		5563797	0		==			
ANR	5564090	Identifier	rst		5563797	0					
ANR	5564091	MemberAccess	rs . t		5563797	1					
ANR	5564092	Identifier	rs		5563797	0					
ANR	5564093	Identifier	t		5563797	1					
ANR	5564094	AndExpression	n && rj . p		5563797	1		&&			
ANR	5564095	Identifier	n		5563797	0					
ANR	5564096	MemberAccess	rj . p		5563797	1					
ANR	5564097	Identifier	rj		5563797	0					
ANR	5564098	Identifier	p		5563797	1					
ANR	5564099	BreakStatement	break ;	213:3:4102:4107	5563797	1	True				
ANR	5564100	ExpressionStatement	rs . t = rst	214:2:4111:4121	5563797	16	True				
ANR	5564101	AssignmentExpression	rs . t = rst		5563797	0		=			
ANR	5564102	MemberAccess	rs . t		5563797	0					
ANR	5564103	Identifier	rs		5563797	0					
ANR	5564104	Identifier	t		5563797	1					
ANR	5564105	Identifier	rst		5563797	1					
ANR	5564106	ExpressionStatement	rs . f = x	215:2:4125:4133	5563797	17	True				
ANR	5564107	AssignmentExpression	rs . f = x		5563797	0		=			
ANR	5564108	MemberAccess	rs . f		5563797	0					
ANR	5564109	Identifier	rs		5563797	0					
ANR	5564110	Identifier	f		5563797	1					
ANR	5564111	Identifier	x		5563797	1					
ANR	5564112	ExpressionStatement	n ++	216:2:4137:4140	5563797	18	True				
ANR	5564113	PostIncDecOperationExpression	n ++		5563797	0					
ANR	5564114	Identifier	n		5563797	0					
ANR	5564115	IncDec	++		5563797	1					
ANR	5564116	Condition	x != - 1	217:10:4152:4158	5563797	1	True				
ANR	5564117	EqualityExpression	x != - 1		5563797	0		!=			
ANR	5564118	Identifier	x		5563797	0					
ANR	5564119	UnaryOperationExpression	- 1		5563797	1					
ANR	5564120	UnaryOperator	-		5563797	0					
ANR	5564121	PrimaryExpression	1		5563797	1					
ANR	5564122	ReturnStatement	return rj ;	218:1:4163:4172	5563797	6	True				
ANR	5564123	Identifier	rj		5563797	0					
ANR	5564124	ReturnType	SDB_IPI Rangstr		5563797	1					
ANR	5564125	Identifier	json_get		5563797	2					
ANR	5564126	ParameterList	"const char * js , const char * p"		5563797	3					
ANR	5564127	Parameter	const char * js	171:26:3025:3038	5563797	0	True				
ANR	5564128	ParameterType	const char *		5563797	0					
ANR	5564129	Identifier	js		5563797	1					
ANR	5564130	Parameter	const char * p	171:42:3041:3053	5563797	1	True				
ANR	5564131	ParameterType	const char *		5563797	0					
ANR	5564132	Identifier	p		5563797	1					
ANR	5564133	CFGEntryNode	ENTRY		5563797		True				
ANR	5564134	CFGExitNode	EXIT		5563797		True				
ANR	5564135	Symbol	json_find		5563797						
ANR	5564136	Symbol	rs		5563797						
ANR	5564137	Symbol	rangstr_str		5563797						
ANR	5564138	Symbol	js		5563797						
ANR	5564139	Symbol	rs . t		5563797						
ANR	5564140	Symbol	json_path_next		5563797						
ANR	5564141	Symbol	rst		5563797						
ANR	5564142	Symbol	rangstr_new		5563797						
ANR	5564143	Symbol	& rj		5563797						
ANR	5564144	Symbol	rangstr_find		5563797						
ANR	5564145	Symbol	& rs		5563797						
ANR	5564146	Symbol	* rj . p		5563797						
ANR	5564147	Symbol	stderr		5563797						
ANR	5564148	Symbol	n		5563797						
ANR	5564149	Symbol	rj2 . p		5563797						
ANR	5564150	Symbol	p		5563797						
ANR	5564151	Symbol	* rj . t		5563797						
ANR	5564152	Symbol	rangstr_dup		5563797						
ANR	5564153	Symbol	rj . t		5563797						
ANR	5564154	Symbol	x		5563797						
ANR	5564155	Symbol	rj		5563797						
ANR	5564156	Symbol	rs . f		5563797						
ANR	5564157	Symbol	rj2		5563797						
ANR	5564158	Symbol	rj . p		5563797						
ANR	5564159	Symbol	* rj		5563797						
