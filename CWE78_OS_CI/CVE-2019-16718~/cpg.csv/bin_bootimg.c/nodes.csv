command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	500380	File	data/converged/CVE-2019-16718~_radare2/bin_bootimg.c								
ANR	500381	DeclStmt									
ANR	500382	Decl							struct boot_img_hdr	struct boot_img_hdr	BootImage
ANR	500383	ClassDef	boot_img_hdr	20:0:484:1256							
ANR	500384	DeclStmt									
ANR	500385	Decl							ut8	ut8 [ BOOT_MAGIC_SIZE ]	magic
ANR	500386	DeclStmt									
ANR	500387	Decl							ut32	ut32	kernel_size
ANR	500388	DeclStmt									
ANR	500389	Decl							ut32	ut32	kernel_addr
ANR	500390	DeclStmt									
ANR	500391	Decl							ut32	ut32	ramdisk_size
ANR	500392	DeclStmt									
ANR	500393	Decl							ut32	ut32	ramdisk_addr
ANR	500394	DeclStmt									
ANR	500395	Decl							ut32	ut32	second_size
ANR	500396	DeclStmt									
ANR	500397	Decl							ut32	ut32	second_addr
ANR	500398	DeclStmt									
ANR	500399	Decl							ut32	ut32	tags_addr
ANR	500400	DeclStmt									
ANR	500401	Decl							ut32	ut32	page_size
ANR	500402	DeclStmt									
ANR	500403	Decl							ut32	ut32 [ 2 ]	unused
ANR	500404	DeclStmt									
ANR	500405	Decl							ut8	ut8 [ BOOT_NAME_SIZE ]	name
ANR	500406	DeclStmt									
ANR	500407	Decl							ut8	ut8 [ BOOT_ARGS_SIZE ]	cmdline
ANR	500408	DeclStmt									
ANR	500409	Decl							ut32	ut32 [ 8 ]	id
ANR	500410	DeclStmt									
ANR	500411	Decl							ut8	ut8 [ BOOT_EXTRA_ARGS_SIZE ]	extra_cmdline
ANR	500412	ClassDef	<unnamed>	44:8:1269:1332							
ANR	500413	DeclStmt									
ANR	500414	Decl							Sdb	Sdb *	kv
ANR	500415	DeclStmt									
ANR	500416	Decl							BootImage	BootImage	bi
ANR	500417	DeclStmt									
ANR	500418	Decl							RBuffer	RBuffer *	buf
ANR	500419	DeclStmt									
ANR	500420	Decl									BootImageObj
ANR	500421	Function	bootimg_header_load	50:0:1335:2109							
ANR	500422	FunctionDef	"bootimg_header_load (BootImageObj * obj , Sdb * db)"		500421	0					
ANR	500423	CompoundStatement		50:59:1394:2109	500421	0					
ANR	500424	IdentifierDeclStatement	char * n ;	51:1:1397:1404	500421	0	True				
ANR	500425	IdentifierDecl	* n		500421	0					
ANR	500426	IdentifierDeclType	char *		500421	0					
ANR	500427	Identifier	n		500421	1					
ANR	500428	IdentifierDeclStatement	int i ;	52:1:1407:1412	500421	1	True				
ANR	500429	IdentifierDecl	i		500421	0					
ANR	500430	IdentifierDeclType	int		500421	0					
ANR	500431	Identifier	i		500421	1					
ANR	500432	IfStatement	if ( r_buf_size ( obj -> buf ) < sizeof ( BootImage ) )		500421	2					
ANR	500433	Condition	r_buf_size ( obj -> buf ) < sizeof ( BootImage )	53:5:1419:1460	500421	0	True				
ANR	500434	RelationalExpression	r_buf_size ( obj -> buf ) < sizeof ( BootImage )		500421	0		<			
ANR	500435	CallExpression	r_buf_size ( obj -> buf )		500421	0					
ANR	500436	Callee	r_buf_size		500421	0					
ANR	500437	Identifier	r_buf_size		500421	0					
ANR	500438	ArgumentList	obj -> buf		500421	1					
ANR	500439	Argument	obj -> buf		500421	0					
ANR	500440	PtrMemberAccess	obj -> buf		500421	0					
ANR	500441	Identifier	obj		500421	0					
ANR	500442	Identifier	buf		500421	1					
ANR	500443	SizeofExpression	sizeof ( BootImage )		500421	1					
ANR	500444	Sizeof	sizeof		500421	0					
ANR	500445	SizeofOperand	BootImage		500421	1					
ANR	500446	CompoundStatement		4:49:68:68	500421	1					
ANR	500447	ReturnStatement	return false ;	54:2:1467:1479	500421	0	True				
ANR	500448	Identifier	false		500421	0					
ANR	500449	IdentifierDeclStatement	BootImage * bi = & obj -> bi ;	57:1:1576:1600	500421	3	True				
ANR	500450	IdentifierDecl	* bi = & obj -> bi		500421	0					
ANR	500451	IdentifierDeclType	BootImage *		500421	0					
ANR	500452	Identifier	bi		500421	1					
ANR	500453	AssignmentExpression	* bi = & obj -> bi		500421	2		=			
ANR	500454	Identifier	bi		500421	0					
ANR	500455	UnaryOperationExpression	& obj -> bi		500421	1					
ANR	500456	UnaryOperator	&		500421	0					
ANR	500457	PtrMemberAccess	obj -> bi		500421	1					
ANR	500458	Identifier	obj		500421	0					
ANR	500459	Identifier	bi		500421	1					
ANR	500460	ExpressionStatement	"( void ) r_buf_read_at ( obj -> buf , 0 , ( ut8 * ) bi , sizeof ( BootImage ) )"	58:1:1603:1668	500421	4	True				
ANR	500461	CastExpression	"( void ) r_buf_read_at ( obj -> buf , 0 , ( ut8 * ) bi , sizeof ( BootImage ) )"		500421	0					
ANR	500462	CastTarget	void		500421	0					
ANR	500463	CallExpression	"r_buf_read_at ( obj -> buf , 0 , ( ut8 * ) bi , sizeof ( BootImage ) )"		500421	1					
ANR	500464	Callee	r_buf_read_at		500421	0					
ANR	500465	Identifier	r_buf_read_at		500421	0					
ANR	500466	ArgumentList	obj -> buf		500421	1					
ANR	500467	Argument	obj -> buf		500421	0					
ANR	500468	PtrMemberAccess	obj -> buf		500421	0					
ANR	500469	Identifier	obj		500421	0					
ANR	500470	Identifier	buf		500421	1					
ANR	500471	Argument	0		500421	1					
ANR	500472	PrimaryExpression	0		500421	0					
ANR	500473	Argument	( ut8 * ) bi		500421	2					
ANR	500474	CastExpression	( ut8 * ) bi		500421	0					
ANR	500475	CastTarget	ut8 *		500421	0					
ANR	500476	Identifier	bi		500421	1					
ANR	500477	Argument	sizeof ( BootImage )		500421	3					
ANR	500478	SizeofExpression	sizeof ( BootImage )		500421	0					
ANR	500479	Sizeof	sizeof		500421	0					
ANR	500480	SizeofOperand	BootImage		500421	1					
ANR	500481	IfStatement	"if ( ( n = r_str_ndup ( ( char * ) bi -> name , BOOT_NAME_SIZE ) ) )"		500421	5					
ANR	500482	Condition	"n = r_str_ndup ( ( char * ) bi -> name , BOOT_NAME_SIZE )"	59:5:1675:1726	500421	0	True				
ANR	500483	AssignmentExpression	"n = r_str_ndup ( ( char * ) bi -> name , BOOT_NAME_SIZE )"		500421	0		=			
ANR	500484	Identifier	n		500421	0					
ANR	500485	CallExpression	"r_str_ndup ( ( char * ) bi -> name , BOOT_NAME_SIZE )"		500421	1					
ANR	500486	Callee	r_str_ndup		500421	0					
ANR	500487	Identifier	r_str_ndup		500421	0					
ANR	500488	ArgumentList	( char * ) bi -> name		500421	1					
ANR	500489	Argument	( char * ) bi -> name		500421	0					
ANR	500490	CastExpression	( char * ) bi -> name		500421	0					
ANR	500491	CastTarget	char *		500421	0					
ANR	500492	PtrMemberAccess	bi -> name		500421	1					
ANR	500493	Identifier	bi		500421	0					
ANR	500494	Identifier	name		500421	1					
ANR	500495	Argument	BOOT_NAME_SIZE		500421	1					
ANR	500496	Identifier	BOOT_NAME_SIZE		500421	0					
ANR	500497	CompoundStatement		10:59:334:334	500421	1					
ANR	500498	ExpressionStatement	"sdb_set ( db , ""name"" , n , 0 )"	60:2:1733:1759	500421	0	True				
ANR	500499	CallExpression	"sdb_set ( db , ""name"" , n , 0 )"		500421	0					
ANR	500500	Callee	sdb_set		500421	0					
ANR	500501	Identifier	sdb_set		500421	0					
ANR	500502	ArgumentList	db		500421	1					
ANR	500503	Argument	db		500421	0					
ANR	500504	Identifier	db		500421	0					
ANR	500505	Argument	"""name"""		500421	1					
ANR	500506	PrimaryExpression	"""name"""		500421	0					
ANR	500507	Argument	n		500421	2					
ANR	500508	Identifier	n		500421	0					
ANR	500509	Argument	0		500421	3					
ANR	500510	PrimaryExpression	0		500421	0					
ANR	500511	ExpressionStatement	free ( n )	61:2:1763:1771	500421	1	True				
ANR	500512	CallExpression	free ( n )		500421	0					
ANR	500513	Callee	free		500421	0					
ANR	500514	Identifier	free		500421	0					
ANR	500515	ArgumentList	n		500421	1					
ANR	500516	Argument	n		500421	0					
ANR	500517	Identifier	n		500421	0					
ANR	500518	IfStatement	"if ( ( n = r_str_ndup ( ( char * ) bi -> cmdline , BOOT_ARGS_SIZE ) ) )"		500421	6					
ANR	500519	Condition	"n = r_str_ndup ( ( char * ) bi -> cmdline , BOOT_ARGS_SIZE )"	63:5:1781:1835	500421	0	True				
ANR	500520	AssignmentExpression	"n = r_str_ndup ( ( char * ) bi -> cmdline , BOOT_ARGS_SIZE )"		500421	0		=			
ANR	500521	Identifier	n		500421	0					
ANR	500522	CallExpression	"r_str_ndup ( ( char * ) bi -> cmdline , BOOT_ARGS_SIZE )"		500421	1					
ANR	500523	Callee	r_str_ndup		500421	0					
ANR	500524	Identifier	r_str_ndup		500421	0					
ANR	500525	ArgumentList	( char * ) bi -> cmdline		500421	1					
ANR	500526	Argument	( char * ) bi -> cmdline		500421	0					
ANR	500527	CastExpression	( char * ) bi -> cmdline		500421	0					
ANR	500528	CastTarget	char *		500421	0					
ANR	500529	PtrMemberAccess	bi -> cmdline		500421	1					
ANR	500530	Identifier	bi		500421	0					
ANR	500531	Identifier	cmdline		500421	1					
ANR	500532	Argument	BOOT_ARGS_SIZE		500421	1					
ANR	500533	Identifier	BOOT_ARGS_SIZE		500421	0					
ANR	500534	CompoundStatement		14:62:443:443	500421	1					
ANR	500535	ExpressionStatement	"sdb_set ( db , ""cmdline"" , n , 0 )"	64:2:1842:1871	500421	0	True				
ANR	500536	CallExpression	"sdb_set ( db , ""cmdline"" , n , 0 )"		500421	0					
ANR	500537	Callee	sdb_set		500421	0					
ANR	500538	Identifier	sdb_set		500421	0					
ANR	500539	ArgumentList	db		500421	1					
ANR	500540	Argument	db		500421	0					
ANR	500541	Identifier	db		500421	0					
ANR	500542	Argument	"""cmdline"""		500421	1					
ANR	500543	PrimaryExpression	"""cmdline"""		500421	0					
ANR	500544	Argument	n		500421	2					
ANR	500545	Identifier	n		500421	0					
ANR	500546	Argument	0		500421	3					
ANR	500547	PrimaryExpression	0		500421	0					
ANR	500548	ExpressionStatement	free ( n )	65:2:1875:1883	500421	1	True				
ANR	500549	CallExpression	free ( n )		500421	0					
ANR	500550	Callee	free		500421	0					
ANR	500551	Identifier	free		500421	0					
ANR	500552	ArgumentList	n		500421	1					
ANR	500553	Argument	n		500421	0					
ANR	500554	Identifier	n		500421	0					
ANR	500555	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		500421	7					
ANR	500556	ForInit	i = 0 ;	67:6:1894:1899	500421	0	True				
ANR	500557	AssignmentExpression	i = 0		500421	0		=			
ANR	500558	Identifier	i		500421	0					
ANR	500559	PrimaryExpression	0		500421	1					
ANR	500560	Condition	i < 8	67:13:1901:1905	500421	1	True				
ANR	500561	RelationalExpression	i < 8		500421	0		<			
ANR	500562	Identifier	i		500421	0					
ANR	500563	PrimaryExpression	8		500421	1					
ANR	500564	PostIncDecOperationExpression	i ++	67:20:1908:1910	500421	2	True				
ANR	500565	Identifier	i		500421	0					
ANR	500566	IncDec	++		500421	1					
ANR	500567	CompoundStatement		18:25:518:518	500421	3					
ANR	500568	ExpressionStatement	"sdb_num_set ( db , ""id"" , ( ut64 ) bi -> id [ i ] , 0 )"	68:2:1917:1960	500421	0	True				
ANR	500569	CallExpression	"sdb_num_set ( db , ""id"" , ( ut64 ) bi -> id [ i ] , 0 )"		500421	0					
ANR	500570	Callee	sdb_num_set		500421	0					
ANR	500571	Identifier	sdb_num_set		500421	0					
ANR	500572	ArgumentList	db		500421	1					
ANR	500573	Argument	db		500421	0					
ANR	500574	Identifier	db		500421	0					
ANR	500575	Argument	"""id"""		500421	1					
ANR	500576	PrimaryExpression	"""id"""		500421	0					
ANR	500577	Argument	( ut64 ) bi -> id [ i ]		500421	2					
ANR	500578	CastExpression	( ut64 ) bi -> id [ i ]		500421	0					
ANR	500579	CastTarget	ut64		500421	0					
ANR	500580	ArrayIndexing	bi -> id [ i ]		500421	1					
ANR	500581	PtrMemberAccess	bi -> id		500421	0					
ANR	500582	Identifier	bi		500421	0					
ANR	500583	Identifier	id		500421	1					
ANR	500584	Identifier	i		500421	1					
ANR	500585	Argument	0		500421	3					
ANR	500586	PrimaryExpression	0		500421	0					
ANR	500587	IfStatement	"if ( ( n = r_str_ndup ( ( char * ) bi -> extra_cmdline , BOOT_EXTRA_ARGS_SIZE ) ) )"		500421	8					
ANR	500588	Condition	"n = r_str_ndup ( ( char * ) bi -> extra_cmdline , BOOT_EXTRA_ARGS_SIZE )"	70:5:1970:2036	500421	0	True				
ANR	500589	AssignmentExpression	"n = r_str_ndup ( ( char * ) bi -> extra_cmdline , BOOT_EXTRA_ARGS_SIZE )"		500421	0		=			
ANR	500590	Identifier	n		500421	0					
ANR	500591	CallExpression	"r_str_ndup ( ( char * ) bi -> extra_cmdline , BOOT_EXTRA_ARGS_SIZE )"		500421	1					
ANR	500592	Callee	r_str_ndup		500421	0					
ANR	500593	Identifier	r_str_ndup		500421	0					
ANR	500594	ArgumentList	( char * ) bi -> extra_cmdline		500421	1					
ANR	500595	Argument	( char * ) bi -> extra_cmdline		500421	0					
ANR	500596	CastExpression	( char * ) bi -> extra_cmdline		500421	0					
ANR	500597	CastTarget	char *		500421	0					
ANR	500598	PtrMemberAccess	bi -> extra_cmdline		500421	1					
ANR	500599	Identifier	bi		500421	0					
ANR	500600	Identifier	extra_cmdline		500421	1					
ANR	500601	Argument	BOOT_EXTRA_ARGS_SIZE		500421	1					
ANR	500602	Identifier	BOOT_EXTRA_ARGS_SIZE		500421	0					
ANR	500603	CompoundStatement		21:74:644:644	500421	1					
ANR	500604	ExpressionStatement	"sdb_set ( db , ""extra_cmdline"" , n , 0 )"	71:2:2043:2078	500421	0	True				
ANR	500605	CallExpression	"sdb_set ( db , ""extra_cmdline"" , n , 0 )"		500421	0					
ANR	500606	Callee	sdb_set		500421	0					
ANR	500607	Identifier	sdb_set		500421	0					
ANR	500608	ArgumentList	db		500421	1					
ANR	500609	Argument	db		500421	0					
ANR	500610	Identifier	db		500421	0					
ANR	500611	Argument	"""extra_cmdline"""		500421	1					
ANR	500612	PrimaryExpression	"""extra_cmdline"""		500421	0					
ANR	500613	Argument	n		500421	2					
ANR	500614	Identifier	n		500421	0					
ANR	500615	Argument	0		500421	3					
ANR	500616	PrimaryExpression	0		500421	0					
ANR	500617	ExpressionStatement	free ( n )	72:2:2082:2090	500421	1	True				
ANR	500618	CallExpression	free ( n )		500421	0					
ANR	500619	Callee	free		500421	0					
ANR	500620	Identifier	free		500421	0					
ANR	500621	ArgumentList	n		500421	1					
ANR	500622	Argument	n		500421	0					
ANR	500623	Identifier	n		500421	0					
ANR	500624	ReturnStatement	return true ;	74:1:2096:2107	500421	9	True				
ANR	500625	Identifier	true		500421	0					
ANR	500626	ReturnType	static int		500421	1					
ANR	500627	Identifier	bootimg_header_load		500421	2					
ANR	500628	ParameterList	"BootImageObj * obj , Sdb * db"		500421	3					
ANR	500629	Parameter	BootImageObj * obj	50:31:1366:1382	500421	0	True				
ANR	500630	ParameterType	BootImageObj *		500421	0					
ANR	500631	Identifier	obj		500421	1					
ANR	500632	Parameter	Sdb * db	50:50:1385:1391	500421	1	True				
ANR	500633	ParameterType	Sdb *		500421	0					
ANR	500634	Identifier	db		500421	1					
ANR	500635	CFGEntryNode	ENTRY		500421		True				
ANR	500636	CFGExitNode	EXIT		500421		True				
ANR	500637	Symbol	BOOT_EXTRA_ARGS_SIZE		500421						
ANR	500638	Symbol	* obj		500421						
ANR	500639	Symbol	bi -> cmdline		500421						
ANR	500640	Symbol	bi -> id		500421						
ANR	500641	Symbol	r_str_ndup		500421						
ANR	500642	Symbol	bi		500421						
ANR	500643	Symbol	false		500421						
ANR	500644	Symbol	BOOT_NAME_SIZE		500421						
ANR	500645	Symbol	i		500421						
ANR	500646	Symbol	* bi -> id		500421						
ANR	500647	Symbol	n		500421						
ANR	500648	Symbol	* bi		500421						
ANR	500649	Symbol	bi -> name		500421						
ANR	500650	Symbol	BOOT_ARGS_SIZE		500421						
ANR	500651	Symbol	* * bi		500421						
ANR	500652	Symbol	* i		500421						
ANR	500653	Symbol	& obj -> bi		500421						
ANR	500654	Symbol	obj		500421						
ANR	500655	Symbol	true		500421						
ANR	500656	Symbol	bi -> extra_cmdline		500421						
ANR	500657	Symbol	db		500421						
ANR	500658	Symbol	r_buf_size		500421						
ANR	500659	Symbol	obj -> buf		500421						
ANR	500660	Function	get_sdb	77:0:2112:2264							
ANR	500661	FunctionDef	get_sdb (RBinFile * bf)		500660	0					
ANR	500662	CompoundStatement		77:34:2146:2264	500660	0					
ANR	500663	IdentifierDeclStatement	RBinObject * o = bf -> o ;	78:1:2149:2170	500660	0	True				
ANR	500664	IdentifierDecl	* o = bf -> o		500660	0					
ANR	500665	IdentifierDeclType	RBinObject *		500660	0					
ANR	500666	Identifier	o		500660	1					
ANR	500667	AssignmentExpression	* o = bf -> o		500660	2		=			
ANR	500668	Identifier	o		500660	0					
ANR	500669	PtrMemberAccess	bf -> o		500660	1					
ANR	500670	Identifier	bf		500660	0					
ANR	500671	Identifier	o		500660	1					
ANR	500672	IdentifierDeclStatement	BootImageObj * ao ;	79:1:2173:2189	500660	1	True				
ANR	500673	IdentifierDecl	* ao		500660	0					
ANR	500674	IdentifierDeclType	BootImageObj *		500660	0					
ANR	500675	Identifier	ao		500660	1					
ANR	500676	IfStatement	if ( ! o )		500660	2					
ANR	500677	Condition	! o	80:5:2196:2197	500660	0	True				
ANR	500678	UnaryOperationExpression	! o		500660	0					
ANR	500679	UnaryOperator	!		500660	0					
ANR	500680	Identifier	o		500660	1					
ANR	500681	CompoundStatement		4:9:53:53	500660	1					
ANR	500682	ReturnStatement	return NULL ;	81:2:2204:2215	500660	0	True				
ANR	500683	Identifier	NULL		500660	0					
ANR	500684	ExpressionStatement	ao = o -> bin_obj	83:1:2221:2236	500660	3	True				
ANR	500685	AssignmentExpression	ao = o -> bin_obj		500660	0		=			
ANR	500686	Identifier	ao		500660	0					
ANR	500687	PtrMemberAccess	o -> bin_obj		500660	1					
ANR	500688	Identifier	o		500660	0					
ANR	500689	Identifier	bin_obj		500660	1					
ANR	500690	ReturnStatement	return ao ? ao -> kv : NULL ;	84:1:2239:2262	500660	4	True				
ANR	500691	ConditionalExpression	ao ? ao -> kv : NULL		500660	0					
ANR	500692	Condition	ao		500660	0					
ANR	500693	Identifier	ao		500660	0					
ANR	500694	PtrMemberAccess	ao -> kv		500660	1					
ANR	500695	Identifier	ao		500660	0					
ANR	500696	Identifier	kv		500660	1					
ANR	500697	Identifier	NULL		500660	2					
ANR	500698	ReturnType	static Sdb *		500660	1					
ANR	500699	Identifier	get_sdb		500660	2					
ANR	500700	ParameterList	RBinFile * bf		500660	3					
ANR	500701	Parameter	RBinFile * bf	77:20:2132:2143	500660	0	True				
ANR	500702	ParameterType	RBinFile *		500660	0					
ANR	500703	Identifier	bf		500660	1					
ANR	500704	CFGEntryNode	ENTRY		500660		True				
ANR	500705	CFGExitNode	EXIT		500660		True				
ANR	500706	Symbol	NULL		500660						
ANR	500707	Symbol	bf		500660						
ANR	500708	Symbol	bf -> o		500660						
ANR	500709	Symbol	* ao		500660						
ANR	500710	Symbol	* bf		500660						
ANR	500711	Symbol	o -> bin_obj		500660						
ANR	500712	Symbol	* o		500660						
ANR	500713	Symbol	ao		500660						
ANR	500714	Symbol	o		500660						
ANR	500715	Symbol	ao -> kv		500660						
ANR	500716	Function	load_buffer	87:0:2267:2685							
ANR	500717	FunctionDef	"load_buffer (RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb)"		500716	0					
ANR	500718	CompoundStatement		87:93:2360:2685	500716	0					
ANR	500719	IdentifierDeclStatement	BootImageObj * bio = R_NEW0 ( BootImageObj ) ;	88:1:2363:2404	500716	0	True				
ANR	500720	IdentifierDecl	* bio = R_NEW0 ( BootImageObj )		500716	0					
ANR	500721	IdentifierDeclType	BootImageObj *		500716	0					
ANR	500722	Identifier	bio		500716	1					
ANR	500723	AssignmentExpression	* bio = R_NEW0 ( BootImageObj )		500716	2		=			
ANR	500724	Identifier	bio		500716	0					
ANR	500725	CallExpression	R_NEW0 ( BootImageObj )		500716	1					
ANR	500726	Callee	R_NEW0		500716	0					
ANR	500727	Identifier	R_NEW0		500716	0					
ANR	500728	ArgumentList	BootImageObj		500716	1					
ANR	500729	Argument	BootImageObj		500716	0					
ANR	500730	Identifier	BootImageObj		500716	0					
ANR	500731	IfStatement	if ( ! bio )		500716	1					
ANR	500732	Condition	! bio	89:5:2411:2414	500716	0	True				
ANR	500733	UnaryOperationExpression	! bio		500716	0					
ANR	500734	UnaryOperator	!		500716	0					
ANR	500735	Identifier	bio		500716	1					
ANR	500736	CompoundStatement		3:11:56:56	500716	1					
ANR	500737	ReturnStatement	return false ;	90:2:2421:2433	500716	0	True				
ANR	500738	Identifier	false		500716	0					
ANR	500739	ExpressionStatement	bio -> kv = sdb_new0 ( )	92:1:2439:2460	500716	2	True				
ANR	500740	AssignmentExpression	bio -> kv = sdb_new0 ( )		500716	0		=			
ANR	500741	PtrMemberAccess	bio -> kv		500716	0					
ANR	500742	Identifier	bio		500716	0					
ANR	500743	Identifier	kv		500716	1					
ANR	500744	CallExpression	sdb_new0 ( )		500716	1					
ANR	500745	Callee	sdb_new0		500716	0					
ANR	500746	Identifier	sdb_new0		500716	0					
ANR	500747	ArgumentList			500716	1					
ANR	500748	IfStatement	if ( ! bio -> kv )		500716	3					
ANR	500749	Condition	! bio -> kv	93:5:2467:2474	500716	0	True				
ANR	500750	UnaryOperationExpression	! bio -> kv		500716	0					
ANR	500751	UnaryOperator	!		500716	0					
ANR	500752	PtrMemberAccess	bio -> kv		500716	1					
ANR	500753	Identifier	bio		500716	0					
ANR	500754	Identifier	kv		500716	1					
ANR	500755	CompoundStatement		7:15:116:116	500716	1					
ANR	500756	ExpressionStatement	free ( bio )	94:2:2481:2491	500716	0	True				
ANR	500757	CallExpression	free ( bio )		500716	0					
ANR	500758	Callee	free		500716	0					
ANR	500759	Identifier	free		500716	0					
ANR	500760	ArgumentList	bio		500716	1					
ANR	500761	Argument	bio		500716	0					
ANR	500762	Identifier	bio		500716	0					
ANR	500763	ReturnStatement	return false ;	95:2:2495:2507	500716	1	True				
ANR	500764	Identifier	false		500716	0					
ANR	500765	ExpressionStatement	bio -> buf = r_buf_ref ( buf )	97:1:2513:2539	500716	4	True				
ANR	500766	AssignmentExpression	bio -> buf = r_buf_ref ( buf )		500716	0		=			
ANR	500767	PtrMemberAccess	bio -> buf		500716	0					
ANR	500768	Identifier	bio		500716	0					
ANR	500769	Identifier	buf		500716	1					
ANR	500770	CallExpression	r_buf_ref ( buf )		500716	1					
ANR	500771	Callee	r_buf_ref		500716	0					
ANR	500772	Identifier	r_buf_ref		500716	0					
ANR	500773	ArgumentList	buf		500716	1					
ANR	500774	Argument	buf		500716	0					
ANR	500775	Identifier	buf		500716	0					
ANR	500776	IfStatement	"if ( ! bootimg_header_load ( bio , bio -> kv ) )"		500716	5					
ANR	500777	Condition	"! bootimg_header_load ( bio , bio -> kv )"	98:5:2546:2580	500716	0	True				
ANR	500778	UnaryOperationExpression	"! bootimg_header_load ( bio , bio -> kv )"		500716	0					
ANR	500779	UnaryOperator	!		500716	0					
ANR	500780	CallExpression	"bootimg_header_load ( bio , bio -> kv )"		500716	1					
ANR	500781	Callee	bootimg_header_load		500716	0					
ANR	500782	Identifier	bootimg_header_load		500716	0					
ANR	500783	ArgumentList	bio		500716	1					
ANR	500784	Argument	bio		500716	0					
ANR	500785	Identifier	bio		500716	0					
ANR	500786	Argument	bio -> kv		500716	1					
ANR	500787	PtrMemberAccess	bio -> kv		500716	0					
ANR	500788	Identifier	bio		500716	0					
ANR	500789	Identifier	kv		500716	1					
ANR	500790	CompoundStatement		12:42:222:222	500716	1					
ANR	500791	ExpressionStatement	free ( bio )	99:2:2587:2597	500716	0	True				
ANR	500792	CallExpression	free ( bio )		500716	0					
ANR	500793	Callee	free		500716	0					
ANR	500794	Identifier	free		500716	0					
ANR	500795	ArgumentList	bio		500716	1					
ANR	500796	Argument	bio		500716	0					
ANR	500797	Identifier	bio		500716	0					
ANR	500798	ReturnStatement	return false ;	100:2:2601:2613	500716	1	True				
ANR	500799	Identifier	false		500716	0					
ANR	500800	ExpressionStatement	"sdb_ns_set ( sdb , ""info"" , bio -> kv )"	102:1:2619:2652	500716	6	True				
ANR	500801	CallExpression	"sdb_ns_set ( sdb , ""info"" , bio -> kv )"		500716	0					
ANR	500802	Callee	sdb_ns_set		500716	0					
ANR	500803	Identifier	sdb_ns_set		500716	0					
ANR	500804	ArgumentList	sdb		500716	1					
ANR	500805	Argument	sdb		500716	0					
ANR	500806	Identifier	sdb		500716	0					
ANR	500807	Argument	"""info"""		500716	1					
ANR	500808	PrimaryExpression	"""info"""		500716	0					
ANR	500809	Argument	bio -> kv		500716	2					
ANR	500810	PtrMemberAccess	bio -> kv		500716	0					
ANR	500811	Identifier	bio		500716	0					
ANR	500812	Identifier	kv		500716	1					
ANR	500813	ExpressionStatement	* bin_obj = bio	103:1:2655:2669	500716	7	True				
ANR	500814	AssignmentExpression	* bin_obj = bio		500716	0		=			
ANR	500815	UnaryOperationExpression	* bin_obj		500716	0					
ANR	500816	UnaryOperator	*		500716	0					
ANR	500817	Identifier	bin_obj		500716	1					
ANR	500818	Identifier	bio		500716	1					
ANR	500819	ReturnStatement	return true ;	104:1:2672:2683	500716	8	True				
ANR	500820	Identifier	true		500716	0					
ANR	500821	ReturnType	static bool		500716	1					
ANR	500822	Identifier	load_buffer		500716	2					
ANR	500823	ParameterList	"RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb"		500716	3					
ANR	500824	Parameter	RBinFile * bf	87:24:2291:2302	500716	0	True				
ANR	500825	ParameterType	RBinFile *		500716	0					
ANR	500826	Identifier	bf		500716	1					
ANR	500827	Parameter	void * * bin_obj	87:38:2305:2318	500716	1	True				
ANR	500828	ParameterType	void * *		500716	0					
ANR	500829	Identifier	bin_obj		500716	1					
ANR	500830	Parameter	RBuffer * buf	87:54:2321:2332	500716	2	True				
ANR	500831	ParameterType	RBuffer *		500716	0					
ANR	500832	Identifier	buf		500716	1					
ANR	500833	Parameter	ut64 loadaddr	87:68:2335:2347	500716	3	True				
ANR	500834	ParameterType	ut64		500716	0					
ANR	500835	Identifier	loadaddr		500716	1					
ANR	500836	Parameter	Sdb * sdb	87:83:2350:2357	500716	4	True				
ANR	500837	ParameterType	Sdb *		500716	0					
ANR	500838	Identifier	sdb		500716	1					
ANR	500839	CFGEntryNode	ENTRY		500716		True				
ANR	500840	CFGExitNode	EXIT		500716		True				
ANR	500841	Symbol	BootImageObj		500716						
ANR	500842	Symbol	bio -> buf		500716						
ANR	500843	Symbol	sdb_new0		500716						
ANR	500844	Symbol	* bin_obj		500716						
ANR	500845	Symbol	bf		500716						
ANR	500846	Symbol	r_buf_ref		500716						
ANR	500847	Symbol	false		500716						
ANR	500848	Symbol	bio		500716						
ANR	500849	Symbol	* bio		500716						
ANR	500850	Symbol	loadaddr		500716						
ANR	500851	Symbol	sdb		500716						
ANR	500852	Symbol	R_NEW0		500716						
ANR	500853	Symbol	bio -> kv		500716						
ANR	500854	Symbol	buf		500716						
ANR	500855	Symbol	bin_obj		500716						
ANR	500856	Symbol	bootimg_header_load		500716						
ANR	500857	Symbol	true		500716						
ANR	500858	Function	destroy	107:0:2688:2811							
ANR	500859	FunctionDef	destroy (RBinFile * bf)		500858	0					
ANR	500860	CompoundStatement		107:34:2722:2811	500858	0					
ANR	500861	IdentifierDeclStatement	BootImageObj * bio = bf -> o -> bin_obj ;	108:1:2725:2759	500858	0	True				
ANR	500862	IdentifierDecl	* bio = bf -> o -> bin_obj		500858	0					
ANR	500863	IdentifierDeclType	BootImageObj *		500858	0					
ANR	500864	Identifier	bio		500858	1					
ANR	500865	AssignmentExpression	* bio = bf -> o -> bin_obj		500858	2		=			
ANR	500866	Identifier	bio		500858	0					
ANR	500867	PtrMemberAccess	bf -> o -> bin_obj		500858	1					
ANR	500868	PtrMemberAccess	bf -> o		500858	0					
ANR	500869	Identifier	bf		500858	0					
ANR	500870	Identifier	o		500858	1					
ANR	500871	Identifier	bin_obj		500858	1					
ANR	500872	ExpressionStatement	r_buf_free ( bio -> buf )	109:1:2762:2783	500858	1	True				
ANR	500873	CallExpression	r_buf_free ( bio -> buf )		500858	0					
ANR	500874	Callee	r_buf_free		500858	0					
ANR	500875	Identifier	r_buf_free		500858	0					
ANR	500876	ArgumentList	bio -> buf		500858	1					
ANR	500877	Argument	bio -> buf		500858	0					
ANR	500878	PtrMemberAccess	bio -> buf		500858	0					
ANR	500879	Identifier	bio		500858	0					
ANR	500880	Identifier	buf		500858	1					
ANR	500881	ExpressionStatement	R_FREE ( bf -> o -> bin_obj )	110:1:2786:2809	500858	2	True				
ANR	500882	CallExpression	R_FREE ( bf -> o -> bin_obj )		500858	0					
ANR	500883	Callee	R_FREE		500858	0					
ANR	500884	Identifier	R_FREE		500858	0					
ANR	500885	ArgumentList	bf -> o -> bin_obj		500858	1					
ANR	500886	Argument	bf -> o -> bin_obj		500858	0					
ANR	500887	PtrMemberAccess	bf -> o -> bin_obj		500858	0					
ANR	500888	PtrMemberAccess	bf -> o		500858	0					
ANR	500889	Identifier	bf		500858	0					
ANR	500890	Identifier	o		500858	1					
ANR	500891	Identifier	bin_obj		500858	1					
ANR	500892	ReturnType	static void		500858	1					
ANR	500893	Identifier	destroy		500858	2					
ANR	500894	ParameterList	RBinFile * bf		500858	3					
ANR	500895	Parameter	RBinFile * bf	107:20:2708:2719	500858	0	True				
ANR	500896	ParameterType	RBinFile *		500858	0					
ANR	500897	Identifier	bf		500858	1					
ANR	500898	CFGEntryNode	ENTRY		500858		True				
ANR	500899	CFGExitNode	EXIT		500858		True				
ANR	500900	Symbol	bf -> o -> bin_obj		500858						
ANR	500901	Symbol	bio -> buf		500858						
ANR	500902	Symbol	* * bf		500858						
ANR	500903	Symbol	bf		500858						
ANR	500904	Symbol	bf -> o		500858						
ANR	500905	Symbol	bio		500858						
ANR	500906	Symbol	* bf		500858						
ANR	500907	Symbol	* bio		500858						
ANR	500908	Symbol	* bf -> o		500858						
ANR	500909	Function	baddr	113:0:2814:2922							
ANR	500910	FunctionDef	baddr (RBinFile * bf)		500909	0					
ANR	500911	CompoundStatement		113:32:2846:2922	500909	0					
ANR	500912	IdentifierDeclStatement	BootImageObj * bio = bf -> o -> bin_obj ;	114:1:2849:2883	500909	0	True				
ANR	500913	IdentifierDecl	* bio = bf -> o -> bin_obj		500909	0					
ANR	500914	IdentifierDeclType	BootImageObj *		500909	0					
ANR	500915	Identifier	bio		500909	1					
ANR	500916	AssignmentExpression	* bio = bf -> o -> bin_obj		500909	2		=			
ANR	500917	Identifier	bio		500909	0					
ANR	500918	PtrMemberAccess	bf -> o -> bin_obj		500909	1					
ANR	500919	PtrMemberAccess	bf -> o		500909	0					
ANR	500920	Identifier	bf		500909	0					
ANR	500921	Identifier	o		500909	1					
ANR	500922	Identifier	bin_obj		500909	1					
ANR	500923	ReturnStatement	return bio ? bio -> bi . kernel_addr : 0 ;	115:1:2886:2920	500909	1	True				
ANR	500924	ConditionalExpression	bio ? bio -> bi . kernel_addr : 0		500909	0					
ANR	500925	Condition	bio		500909	0					
ANR	500926	Identifier	bio		500909	0					
ANR	500927	MemberAccess	bio -> bi . kernel_addr		500909	1					
ANR	500928	PtrMemberAccess	bio -> bi		500909	0					
ANR	500929	Identifier	bio		500909	0					
ANR	500930	Identifier	bi		500909	1					
ANR	500931	Identifier	kernel_addr		500909	1					
ANR	500932	PrimaryExpression	0		500909	2					
ANR	500933	ReturnType	static ut64		500909	1					
ANR	500934	Identifier	baddr		500909	2					
ANR	500935	ParameterList	RBinFile * bf		500909	3					
ANR	500936	Parameter	RBinFile * bf	113:18:2832:2843	500909	0	True				
ANR	500937	ParameterType	RBinFile *		500909	0					
ANR	500938	Identifier	bf		500909	1					
ANR	500939	CFGEntryNode	ENTRY		500909		True				
ANR	500940	CFGExitNode	EXIT		500909		True				
ANR	500941	Symbol	bf -> o -> bin_obj		500909						
ANR	500942	Symbol	* * bf		500909						
ANR	500943	Symbol	bf		500909						
ANR	500944	Symbol	bf -> o		500909						
ANR	500945	Symbol	bio -> bi . kernel_addr		500909						
ANR	500946	Symbol	bio		500909						
ANR	500947	Symbol	* bf		500909						
ANR	500948	Symbol	bio -> bi		500909						
ANR	500949	Symbol	* bio		500909						
ANR	500950	Symbol	* bf -> o		500909						
ANR	500951	Function	strings	118:0:2925:2977							
ANR	500952	FunctionDef	strings (RBinFile * bf)		500951	0					
ANR	500953	CompoundStatement		118:36:2961:2977	500951	0					
ANR	500954	ReturnStatement	return NULL ;	119:1:2964:2975	500951	0	True				
ANR	500955	Identifier	NULL		500951	0					
ANR	500956	ReturnType	static RList *		500951	1					
ANR	500957	Identifier	strings		500951	2					
ANR	500958	ParameterList	RBinFile * bf		500951	3					
ANR	500959	Parameter	RBinFile * bf	118:22:2947:2958	500951	0	True				
ANR	500960	ParameterType	RBinFile *		500951	0					
ANR	500961	Identifier	bf		500951	1					
ANR	500962	CFGEntryNode	ENTRY		500951		True				
ANR	500963	CFGExitNode	EXIT		500951		True				
ANR	500964	Symbol	NULL		500951						
ANR	500965	Symbol	bf		500951						
ANR	500966	Function	info	122:0:2980:3533							
ANR	500967	FunctionDef	info (RBinFile * bf)		500966	0					
ANR	500968	CompoundStatement		122:36:3016:3533	500966	0					
ANR	500969	IdentifierDeclStatement	RBinInfo * ret ;	123:1:3019:3032	500966	0	True				
ANR	500970	IdentifierDecl	* ret		500966	0					
ANR	500971	IdentifierDeclType	RBinInfo *		500966	0					
ANR	500972	Identifier	ret		500966	1					
ANR	500973	IfStatement	if ( ! bf || ! bf -> o || ! bf -> o -> bin_obj )		500966	1					
ANR	500974	Condition	! bf || ! bf -> o || ! bf -> o -> bin_obj	124:5:3039:3070	500966	0	True				
ANR	500975	OrExpression	! bf || ! bf -> o || ! bf -> o -> bin_obj		500966	0		||			
ANR	500976	UnaryOperationExpression	! bf		500966	0					
ANR	500977	UnaryOperator	!		500966	0					
ANR	500978	Identifier	bf		500966	1					
ANR	500979	OrExpression	! bf -> o || ! bf -> o -> bin_obj		500966	1		||			
ANR	500980	UnaryOperationExpression	! bf -> o		500966	0					
ANR	500981	UnaryOperator	!		500966	0					
ANR	500982	PtrMemberAccess	bf -> o		500966	1					
ANR	500983	Identifier	bf		500966	0					
ANR	500984	Identifier	o		500966	1					
ANR	500985	UnaryOperationExpression	! bf -> o -> bin_obj		500966	1					
ANR	500986	UnaryOperator	!		500966	0					
ANR	500987	PtrMemberAccess	bf -> o -> bin_obj		500966	1					
ANR	500988	PtrMemberAccess	bf -> o		500966	0					
ANR	500989	Identifier	bf		500966	0					
ANR	500990	Identifier	o		500966	1					
ANR	500991	Identifier	bin_obj		500966	1					
ANR	500992	CompoundStatement		3:39:56:56	500966	1					
ANR	500993	ReturnStatement	return NULL ;	125:2:3077:3088	500966	0	True				
ANR	500994	Identifier	NULL		500966	0					
ANR	500995	ExpressionStatement	ret = R_NEW0 ( RBinInfo )	127:1:3094:3117	500966	2	True				
ANR	500996	AssignmentExpression	ret = R_NEW0 ( RBinInfo )		500966	0		=			
ANR	500997	Identifier	ret		500966	0					
ANR	500998	CallExpression	R_NEW0 ( RBinInfo )		500966	1					
ANR	500999	Callee	R_NEW0		500966	0					
ANR	501000	Identifier	R_NEW0		500966	0					
ANR	501001	ArgumentList	RBinInfo		500966	1					
ANR	501002	Argument	RBinInfo		500966	0					
ANR	501003	Identifier	RBinInfo		500966	0					
ANR	501004	IfStatement	if ( ! ret )		500966	3					
ANR	501005	Condition	! ret	128:5:3124:3127	500966	0	True				
ANR	501006	UnaryOperationExpression	! ret		500966	0					
ANR	501007	UnaryOperator	!		500966	0					
ANR	501008	Identifier	ret		500966	1					
ANR	501009	CompoundStatement		7:11:113:113	500966	1					
ANR	501010	ReturnStatement	return NULL ;	129:2:3134:3145	500966	0	True				
ANR	501011	Identifier	NULL		500966	0					
ANR	501012	ExpressionStatement	ret -> lang = NULL	132:1:3152:3168	500966	4	True				
ANR	501013	AssignmentExpression	ret -> lang = NULL		500966	0		=			
ANR	501014	PtrMemberAccess	ret -> lang		500966	0					
ANR	501015	Identifier	ret		500966	0					
ANR	501016	Identifier	lang		500966	1					
ANR	501017	Identifier	NULL		500966	1					
ANR	501018	ExpressionStatement	ret -> file = bf -> file ? strdup ( bf -> file ) : NULL	133:1:3171:3216	500966	5	True				
ANR	501019	AssignmentExpression	ret -> file = bf -> file ? strdup ( bf -> file ) : NULL		500966	0		=			
ANR	501020	PtrMemberAccess	ret -> file		500966	0					
ANR	501021	Identifier	ret		500966	0					
ANR	501022	Identifier	file		500966	1					
ANR	501023	ConditionalExpression	bf -> file ? strdup ( bf -> file ) : NULL		500966	1					
ANR	501024	Condition	bf -> file		500966	0					
ANR	501025	PtrMemberAccess	bf -> file		500966	0					
ANR	501026	Identifier	bf		500966	0					
ANR	501027	Identifier	file		500966	1					
ANR	501028	CallExpression	strdup ( bf -> file )		500966	1					
ANR	501029	Callee	strdup		500966	0					
ANR	501030	Identifier	strdup		500966	0					
ANR	501031	ArgumentList	bf -> file		500966	1					
ANR	501032	Argument	bf -> file		500966	0					
ANR	501033	PtrMemberAccess	bf -> file		500966	0					
ANR	501034	Identifier	bf		500966	0					
ANR	501035	Identifier	file		500966	1					
ANR	501036	Identifier	NULL		500966	2					
ANR	501037	ExpressionStatement	"ret -> type = strdup ( ""Android Boot Image"" )"	134:1:3219:3260	500966	6	True				
ANR	501038	AssignmentExpression	"ret -> type = strdup ( ""Android Boot Image"" )"		500966	0		=			
ANR	501039	PtrMemberAccess	ret -> type		500966	0					
ANR	501040	Identifier	ret		500966	0					
ANR	501041	Identifier	type		500966	1					
ANR	501042	CallExpression	"strdup ( ""Android Boot Image"" )"		500966	1					
ANR	501043	Callee	strdup		500966	0					
ANR	501044	Identifier	strdup		500966	0					
ANR	501045	ArgumentList	"""Android Boot Image"""		500966	1					
ANR	501046	Argument	"""Android Boot Image"""		500966	0					
ANR	501047	PrimaryExpression	"""Android Boot Image"""		500966	0					
ANR	501048	ExpressionStatement	"ret -> os = strdup ( ""android"" )"	135:1:3263:3291	500966	7	True				
ANR	501049	AssignmentExpression	"ret -> os = strdup ( ""android"" )"		500966	0		=			
ANR	501050	PtrMemberAccess	ret -> os		500966	0					
ANR	501051	Identifier	ret		500966	0					
ANR	501052	Identifier	os		500966	1					
ANR	501053	CallExpression	"strdup ( ""android"" )"		500966	1					
ANR	501054	Callee	strdup		500966	0					
ANR	501055	Identifier	strdup		500966	0					
ANR	501056	ArgumentList	"""android"""		500966	1					
ANR	501057	Argument	"""android"""		500966	0					
ANR	501058	PrimaryExpression	"""android"""		500966	0					
ANR	501059	ExpressionStatement	"ret -> subsystem = strdup ( ""unknown"" )"	136:1:3294:3329	500966	8	True				
ANR	501060	AssignmentExpression	"ret -> subsystem = strdup ( ""unknown"" )"		500966	0		=			
ANR	501061	PtrMemberAccess	ret -> subsystem		500966	0					
ANR	501062	Identifier	ret		500966	0					
ANR	501063	Identifier	subsystem		500966	1					
ANR	501064	CallExpression	"strdup ( ""unknown"" )"		500966	1					
ANR	501065	Callee	strdup		500966	0					
ANR	501066	Identifier	strdup		500966	0					
ANR	501067	ArgumentList	"""unknown"""		500966	1					
ANR	501068	Argument	"""unknown"""		500966	0					
ANR	501069	PrimaryExpression	"""unknown"""		500966	0					
ANR	501070	ExpressionStatement	"ret -> machine = strdup ( ""arm"" )"	137:1:3332:3361	500966	9	True				
ANR	501071	AssignmentExpression	"ret -> machine = strdup ( ""arm"" )"		500966	0		=			
ANR	501072	PtrMemberAccess	ret -> machine		500966	0					
ANR	501073	Identifier	ret		500966	0					
ANR	501074	Identifier	machine		500966	1					
ANR	501075	CallExpression	"strdup ( ""arm"" )"		500966	1					
ANR	501076	Callee	strdup		500966	0					
ANR	501077	Identifier	strdup		500966	0					
ANR	501078	ArgumentList	"""arm"""		500966	1					
ANR	501079	Argument	"""arm"""		500966	0					
ANR	501080	PrimaryExpression	"""arm"""		500966	0					
ANR	501081	ExpressionStatement	"ret -> arch = strdup ( ""arm"" )"	138:1:3364:3390	500966	10	True				
ANR	501082	AssignmentExpression	"ret -> arch = strdup ( ""arm"" )"		500966	0		=			
ANR	501083	PtrMemberAccess	ret -> arch		500966	0					
ANR	501084	Identifier	ret		500966	0					
ANR	501085	Identifier	arch		500966	1					
ANR	501086	CallExpression	"strdup ( ""arm"" )"		500966	1					
ANR	501087	Callee	strdup		500966	0					
ANR	501088	Identifier	strdup		500966	0					
ANR	501089	ArgumentList	"""arm"""		500966	1					
ANR	501090	Argument	"""arm"""		500966	0					
ANR	501091	PrimaryExpression	"""arm"""		500966	0					
ANR	501092	ExpressionStatement	ret -> has_va = 1	139:1:3393:3408	500966	11	True				
ANR	501093	AssignmentExpression	ret -> has_va = 1		500966	0		=			
ANR	501094	PtrMemberAccess	ret -> has_va		500966	0					
ANR	501095	Identifier	ret		500966	0					
ANR	501096	Identifier	has_va		500966	1					
ANR	501097	PrimaryExpression	1		500966	1					
ANR	501098	ExpressionStatement	ret -> has_pi = 0	140:1:3411:3426	500966	12	True				
ANR	501099	AssignmentExpression	ret -> has_pi = 0		500966	0		=			
ANR	501100	PtrMemberAccess	ret -> has_pi		500966	0					
ANR	501101	Identifier	ret		500966	0					
ANR	501102	Identifier	has_pi		500966	1					
ANR	501103	PrimaryExpression	0		500966	1					
ANR	501104	ExpressionStatement	ret -> bits = 16	141:1:3429:3443	500966	13	True				
ANR	501105	AssignmentExpression	ret -> bits = 16		500966	0		=			
ANR	501106	PtrMemberAccess	ret -> bits		500966	0					
ANR	501107	Identifier	ret		500966	0					
ANR	501108	Identifier	bits		500966	1					
ANR	501109	PrimaryExpression	16		500966	1					
ANR	501110	ExpressionStatement	ret -> big_endian = 0	142:1:3446:3465	500966	14	True				
ANR	501111	AssignmentExpression	ret -> big_endian = 0		500966	0		=			
ANR	501112	PtrMemberAccess	ret -> big_endian		500966	0					
ANR	501113	Identifier	ret		500966	0					
ANR	501114	Identifier	big_endian		500966	1					
ANR	501115	PrimaryExpression	0		500966	1					
ANR	501116	ExpressionStatement	ret -> dbg_info = 0	143:1:3468:3485	500966	15	True				
ANR	501117	AssignmentExpression	ret -> dbg_info = 0		500966	0		=			
ANR	501118	PtrMemberAccess	ret -> dbg_info		500966	0					
ANR	501119	Identifier	ret		500966	0					
ANR	501120	Identifier	dbg_info		500966	1					
ANR	501121	PrimaryExpression	0		500966	1					
ANR	501122	ExpressionStatement	"ret -> rclass = strdup ( ""image"" )"	144:1:3488:3518	500966	16	True				
ANR	501123	AssignmentExpression	"ret -> rclass = strdup ( ""image"" )"		500966	0		=			
ANR	501124	PtrMemberAccess	ret -> rclass		500966	0					
ANR	501125	Identifier	ret		500966	0					
ANR	501126	Identifier	rclass		500966	1					
ANR	501127	CallExpression	"strdup ( ""image"" )"		500966	1					
ANR	501128	Callee	strdup		500966	0					
ANR	501129	Identifier	strdup		500966	0					
ANR	501130	ArgumentList	"""image"""		500966	1					
ANR	501131	Argument	"""image"""		500966	0					
ANR	501132	PrimaryExpression	"""image"""		500966	0					
ANR	501133	ReturnStatement	return ret ;	145:1:3521:3531	500966	17	True				
ANR	501134	Identifier	ret		500966	0					
ANR	501135	ReturnType	static RBinInfo *		500966	1					
ANR	501136	Identifier	info		500966	2					
ANR	501137	ParameterList	RBinFile * bf		500966	3					
ANR	501138	Parameter	RBinFile * bf	122:22:3002:3013	500966	0	True				
ANR	501139	ParameterType	RBinFile *		500966	0					
ANR	501140	Identifier	bf		500966	1					
ANR	501141	CFGEntryNode	ENTRY		500966		True				
ANR	501142	CFGExitNode	EXIT		500966		True				
ANR	501143	Symbol	ret -> big_endian		500966						
ANR	501144	Symbol	bf		500966						
ANR	501145	Symbol	ret -> subsystem		500966						
ANR	501146	Symbol	ret -> arch		500966						
ANR	501147	Symbol	* ret		500966						
ANR	501148	Symbol	ret -> lang		500966						
ANR	501149	Symbol	* bf -> o		500966						
ANR	501150	Symbol	ret -> dbg_info		500966						
ANR	501151	Symbol	bf -> file		500966						
ANR	501152	Symbol	ret -> rclass		500966						
ANR	501153	Symbol	ret -> has_pi		500966						
ANR	501154	Symbol	bf -> o		500966						
ANR	501155	Symbol	ret -> has_va		500966						
ANR	501156	Symbol	ret		500966						
ANR	501157	Symbol	bf -> o -> bin_obj		500966						
ANR	501158	Symbol	ret -> os		500966						
ANR	501159	Symbol	NULL		500966						
ANR	501160	Symbol	* bf		500966						
ANR	501161	Symbol	ret -> machine		500966						
ANR	501162	Symbol	R_NEW0		500966						
ANR	501163	Symbol	* * bf		500966						
ANR	501164	Symbol	ret -> bits		500966						
ANR	501165	Symbol	RBinInfo		500966						
ANR	501166	Symbol	strdup		500966						
ANR	501167	Symbol	ret -> file		500966						
ANR	501168	Symbol	ret -> type		500966						
ANR	501169	Function	check_buffer	148:0:3536:3706							
ANR	501170	FunctionDef	check_buffer (RBuffer * buf)		501169	0					
ANR	501171	CompoundStatement		148:39:3575:3706	501169	0					
ANR	501172	IdentifierDeclStatement	ut8 tmp [ 13 ] ;	149:1:3578:3589	501169	0	True				
ANR	501173	IdentifierDecl	tmp [ 13 ]		501169	0					
ANR	501174	IdentifierDeclType	ut8 [ 13 ]		501169	0					
ANR	501175	Identifier	tmp		501169	1					
ANR	501176	PrimaryExpression	13		501169	2					
ANR	501177	IdentifierDeclStatement	"int r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) ) ;"	150:1:3592:3641	501169	1	True				
ANR	501178	IdentifierDecl	"r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		501169	0					
ANR	501179	IdentifierDeclType	int		501169	0					
ANR	501180	Identifier	r		501169	1					
ANR	501181	AssignmentExpression	"r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		501169	2		=			
ANR	501182	Identifier	r		501169	0					
ANR	501183	CallExpression	"r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		501169	1					
ANR	501184	Callee	r_buf_read_at		501169	0					
ANR	501185	Identifier	r_buf_read_at		501169	0					
ANR	501186	ArgumentList	buf		501169	1					
ANR	501187	Argument	buf		501169	0					
ANR	501188	Identifier	buf		501169	0					
ANR	501189	Argument	0		501169	1					
ANR	501190	PrimaryExpression	0		501169	0					
ANR	501191	Argument	tmp		501169	2					
ANR	501192	Identifier	tmp		501169	0					
ANR	501193	Argument	sizeof ( tmp )		501169	3					
ANR	501194	SizeofExpression	sizeof ( tmp )		501169	0					
ANR	501195	Sizeof	sizeof		501169	0					
ANR	501196	SizeofOperand	tmp		501169	1					
ANR	501197	ReturnStatement	"return r > 12 && ! strncmp ( ( const char * ) tmp , ""ANDROID!"" , 8 ) ;"	151:1:3644:3704	501169	2	True				
ANR	501198	AndExpression	"r > 12 && ! strncmp ( ( const char * ) tmp , ""ANDROID!"" , 8 )"		501169	0		&&			
ANR	501199	RelationalExpression	r > 12		501169	0		>			
ANR	501200	Identifier	r		501169	0					
ANR	501201	PrimaryExpression	12		501169	1					
ANR	501202	UnaryOperationExpression	"! strncmp ( ( const char * ) tmp , ""ANDROID!"" , 8 )"		501169	1					
ANR	501203	UnaryOperator	!		501169	0					
ANR	501204	CallExpression	"strncmp ( ( const char * ) tmp , ""ANDROID!"" , 8 )"		501169	1					
ANR	501205	Callee	strncmp		501169	0					
ANR	501206	Identifier	strncmp		501169	0					
ANR	501207	ArgumentList	( const char * ) tmp		501169	1					
ANR	501208	Argument	( const char * ) tmp		501169	0					
ANR	501209	CastExpression	( const char * ) tmp		501169	0					
ANR	501210	CastTarget	const char *		501169	0					
ANR	501211	Identifier	tmp		501169	1					
ANR	501212	Argument	"""ANDROID!"""		501169	1					
ANR	501213	PrimaryExpression	"""ANDROID!"""		501169	0					
ANR	501214	Argument	8		501169	2					
ANR	501215	PrimaryExpression	8		501169	0					
ANR	501216	ReturnType	static bool		501169	1					
ANR	501217	Identifier	check_buffer		501169	2					
ANR	501218	ParameterList	RBuffer * buf		501169	3					
ANR	501219	Parameter	RBuffer * buf	148:25:3561:3572	501169	0	True				
ANR	501220	ParameterType	RBuffer *		501169	0					
ANR	501221	Identifier	buf		501169	1					
ANR	501222	CFGEntryNode	ENTRY		501169		True				
ANR	501223	CFGExitNode	EXIT		501169		True				
ANR	501224	Symbol	strncmp		501169						
ANR	501225	Symbol	buf		501169						
ANR	501226	Symbol	r		501169						
ANR	501227	Symbol	tmp		501169						
ANR	501228	Symbol	r_buf_read_at		501169						
ANR	501229	Function	entries	154:0:3709:4085							
ANR	501230	FunctionDef	entries (RBinFile * bf)		501229	0					
ANR	501231	CompoundStatement		154:36:3745:4085	501229	0					
ANR	501232	IdentifierDeclStatement	BootImageObj * bio = bf -> o -> bin_obj ;	155:1:3748:3782	501229	0	True				
ANR	501233	IdentifierDecl	* bio = bf -> o -> bin_obj		501229	0					
ANR	501234	IdentifierDeclType	BootImageObj *		501229	0					
ANR	501235	Identifier	bio		501229	1					
ANR	501236	AssignmentExpression	* bio = bf -> o -> bin_obj		501229	2		=			
ANR	501237	Identifier	bio		501229	0					
ANR	501238	PtrMemberAccess	bf -> o -> bin_obj		501229	1					
ANR	501239	PtrMemberAccess	bf -> o		501229	0					
ANR	501240	Identifier	bf		501229	0					
ANR	501241	Identifier	o		501229	1					
ANR	501242	Identifier	bin_obj		501229	1					
ANR	501243	IdentifierDeclStatement	RBinAddr * ptr = NULL ;	156:1:3785:3805	501229	1	True				
ANR	501244	IdentifierDecl	* ptr = NULL		501229	0					
ANR	501245	IdentifierDeclType	RBinAddr *		501229	0					
ANR	501246	Identifier	ptr		501229	1					
ANR	501247	AssignmentExpression	* ptr = NULL		501229	2		=			
ANR	501248	Identifier	NULL		501229	0					
ANR	501249	Identifier	NULL		501229	1					
ANR	501250	IfStatement	if ( ! bio )		501229	2					
ANR	501251	Condition	! bio	157:5:3812:3815	501229	0	True				
ANR	501252	UnaryOperationExpression	! bio		501229	0					
ANR	501253	UnaryOperator	!		501229	0					
ANR	501254	Identifier	bio		501229	1					
ANR	501255	CompoundStatement		4:11:72:72	501229	1					
ANR	501256	ReturnStatement	return NULL ;	158:2:3822:3833	501229	0	True				
ANR	501257	Identifier	NULL		501229	0					
ANR	501258	IdentifierDeclStatement	BootImage * bi = & bio -> bi ;	160:1:3839:3863	501229	3	True				
ANR	501259	IdentifierDecl	* bi = & bio -> bi		501229	0					
ANR	501260	IdentifierDeclType	BootImage *		501229	0					
ANR	501261	Identifier	bi		501229	1					
ANR	501262	AssignmentExpression	* bi = & bio -> bi		501229	2		=			
ANR	501263	Identifier	bi		501229	0					
ANR	501264	UnaryOperationExpression	& bio -> bi		501229	1					
ANR	501265	UnaryOperator	&		501229	0					
ANR	501266	PtrMemberAccess	bio -> bi		501229	1					
ANR	501267	Identifier	bio		501229	0					
ANR	501268	Identifier	bi		501229	1					
ANR	501269	IdentifierDeclStatement	RList * ret ;	161:1:3866:3876	501229	4	True				
ANR	501270	IdentifierDecl	* ret		501229	0					
ANR	501271	IdentifierDeclType	RList *		501229	0					
ANR	501272	Identifier	ret		501229	1					
ANR	501273	IfStatement	if ( ! ( ret = r_list_newf ( free ) ) )		501229	5					
ANR	501274	Condition	! ( ret = r_list_newf ( free ) )	163:5:3884:3910	501229	0	True				
ANR	501275	UnaryOperationExpression	! ( ret = r_list_newf ( free ) )		501229	0					
ANR	501276	UnaryOperator	!		501229	0					
ANR	501277	AssignmentExpression	ret = r_list_newf ( free )		501229	1		=			
ANR	501278	Identifier	ret		501229	0					
ANR	501279	CallExpression	r_list_newf ( free )		501229	1					
ANR	501280	Callee	r_list_newf		501229	0					
ANR	501281	Identifier	r_list_newf		501229	0					
ANR	501282	ArgumentList	free		501229	1					
ANR	501283	Argument	free		501229	0					
ANR	501284	Identifier	free		501229	0					
ANR	501285	CompoundStatement		10:34:167:167	501229	1					
ANR	501286	ReturnStatement	return NULL ;	164:2:3917:3928	501229	0	True				
ANR	501287	Identifier	NULL		501229	0					
ANR	501288	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinAddr ) ) )		501229	6					
ANR	501289	Condition	! ( ptr = R_NEW0 ( RBinAddr ) )	166:5:3938:3963	501229	0	True				
ANR	501290	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinAddr ) )		501229	0					
ANR	501291	UnaryOperator	!		501229	0					
ANR	501292	AssignmentExpression	ptr = R_NEW0 ( RBinAddr )		501229	1		=			
ANR	501293	Identifier	ptr		501229	0					
ANR	501294	CallExpression	R_NEW0 ( RBinAddr )		501229	1					
ANR	501295	Callee	R_NEW0		501229	0					
ANR	501296	Identifier	R_NEW0		501229	0					
ANR	501297	ArgumentList	RBinAddr		501229	1					
ANR	501298	Argument	RBinAddr		501229	0					
ANR	501299	Identifier	RBinAddr		501229	0					
ANR	501300	CompoundStatement		13:33:220:220	501229	1					
ANR	501301	ReturnStatement	return ret ;	167:2:3970:3980	501229	0	True				
ANR	501302	Identifier	ret		501229	0					
ANR	501303	ExpressionStatement	ptr -> paddr = bi -> page_size	169:1:3986:4012	501229	7	True				
ANR	501304	AssignmentExpression	ptr -> paddr = bi -> page_size		501229	0		=			
ANR	501305	PtrMemberAccess	ptr -> paddr		501229	0					
ANR	501306	Identifier	ptr		501229	0					
ANR	501307	Identifier	paddr		501229	1					
ANR	501308	PtrMemberAccess	bi -> page_size		501229	1					
ANR	501309	Identifier	bi		501229	0					
ANR	501310	Identifier	page_size		501229	1					
ANR	501311	ExpressionStatement	ptr -> vaddr = bi -> kernel_addr	170:1:4015:4043	501229	8	True				
ANR	501312	AssignmentExpression	ptr -> vaddr = bi -> kernel_addr		501229	0		=			
ANR	501313	PtrMemberAccess	ptr -> vaddr		501229	0					
ANR	501314	Identifier	ptr		501229	0					
ANR	501315	Identifier	vaddr		501229	1					
ANR	501316	PtrMemberAccess	bi -> kernel_addr		501229	1					
ANR	501317	Identifier	bi		501229	0					
ANR	501318	Identifier	kernel_addr		501229	1					
ANR	501319	ExpressionStatement	"r_list_append ( ret , ptr )"	171:1:4046:4070	501229	9	True				
ANR	501320	CallExpression	"r_list_append ( ret , ptr )"		501229	0					
ANR	501321	Callee	r_list_append		501229	0					
ANR	501322	Identifier	r_list_append		501229	0					
ANR	501323	ArgumentList	ret		501229	1					
ANR	501324	Argument	ret		501229	0					
ANR	501325	Identifier	ret		501229	0					
ANR	501326	Argument	ptr		501229	1					
ANR	501327	Identifier	ptr		501229	0					
ANR	501328	ReturnStatement	return ret ;	172:1:4073:4083	501229	10	True				
ANR	501329	Identifier	ret		501229	0					
ANR	501330	ReturnType	static RList *		501229	1					
ANR	501331	Identifier	entries		501229	2					
ANR	501332	ParameterList	RBinFile * bf		501229	3					
ANR	501333	Parameter	RBinFile * bf	154:22:3731:3742	501229	0	True				
ANR	501334	ParameterType	RBinFile *		501229	0					
ANR	501335	Identifier	bf		501229	1					
ANR	501336	CFGEntryNode	ENTRY		501229		True				
ANR	501337	CFGExitNode	EXIT		501229		True				
ANR	501338	Symbol	bf -> o -> bin_obj		501229						
ANR	501339	Symbol	ret		501229						
ANR	501340	Symbol	ptr -> paddr		501229						
ANR	501341	Symbol	NULL		501229						
ANR	501342	Symbol	bf		501229						
ANR	501343	Symbol	r_list_newf		501229						
ANR	501344	Symbol	bi		501229						
ANR	501345	Symbol	bio		501229						
ANR	501346	Symbol	* bf		501229						
ANR	501347	Symbol	bi -> page_size		501229						
ANR	501348	Symbol	* bi		501229						
ANR	501349	Symbol	* bf -> o		501229						
ANR	501350	Symbol	ptr		501229						
ANR	501351	Symbol	& bio -> bi		501229						
ANR	501352	Symbol	ptr -> vaddr		501229						
ANR	501353	Symbol	R_NEW0		501229						
ANR	501354	Symbol	* * bf		501229						
ANR	501355	Symbol	RBinAddr		501229						
ANR	501356	Symbol	bi -> kernel_addr		501229						
ANR	501357	Symbol	bf -> o		501229						
ANR	501358	Symbol	* ptr		501229						
ANR	501359	Symbol	free		501229						
ANR	501360	Function	sections	175:0:4088:5807							
ANR	501361	FunctionDef	sections (RBinFile * bf)		501360	0					
ANR	501362	CompoundStatement		175:37:4125:5807	501360	0					
ANR	501363	IdentifierDeclStatement	BootImageObj * bio = bf -> o -> bin_obj ;	176:1:4128:4162	501360	0	True				
ANR	501364	IdentifierDecl	* bio = bf -> o -> bin_obj		501360	0					
ANR	501365	IdentifierDeclType	BootImageObj *		501360	0					
ANR	501366	Identifier	bio		501360	1					
ANR	501367	AssignmentExpression	* bio = bf -> o -> bin_obj		501360	2		=			
ANR	501368	Identifier	bio		501360	0					
ANR	501369	PtrMemberAccess	bf -> o -> bin_obj		501360	1					
ANR	501370	PtrMemberAccess	bf -> o		501360	0					
ANR	501371	Identifier	bf		501360	0					
ANR	501372	Identifier	o		501360	1					
ANR	501373	Identifier	bin_obj		501360	1					
ANR	501374	IfStatement	if ( ! bio )		501360	1					
ANR	501375	Condition	! bio	177:5:4169:4172	501360	0	True				
ANR	501376	UnaryOperationExpression	! bio		501360	0					
ANR	501377	UnaryOperator	!		501360	0					
ANR	501378	Identifier	bio		501360	1					
ANR	501379	CompoundStatement		3:11:49:49	501360	1					
ANR	501380	ReturnStatement	return NULL ;	178:2:4179:4190	501360	0	True				
ANR	501381	Identifier	NULL		501360	0					
ANR	501382	IdentifierDeclStatement	BootImage * bi = & bio -> bi ;	180:1:4196:4220	501360	2	True				
ANR	501383	IdentifierDecl	* bi = & bio -> bi		501360	0					
ANR	501384	IdentifierDeclType	BootImage *		501360	0					
ANR	501385	Identifier	bi		501360	1					
ANR	501386	AssignmentExpression	* bi = & bio -> bi		501360	2		=			
ANR	501387	Identifier	bi		501360	0					
ANR	501388	UnaryOperationExpression	& bio -> bi		501360	1					
ANR	501389	UnaryOperator	&		501360	0					
ANR	501390	PtrMemberAccess	bio -> bi		501360	1					
ANR	501391	Identifier	bio		501360	0					
ANR	501392	Identifier	bi		501360	1					
ANR	501393	IdentifierDeclStatement	RList * ret = NULL ;	181:1:4223:4240	501360	3	True				
ANR	501394	IdentifierDecl	* ret = NULL		501360	0					
ANR	501395	IdentifierDeclType	RList *		501360	0					
ANR	501396	Identifier	ret		501360	1					
ANR	501397	AssignmentExpression	* ret = NULL		501360	2		=			
ANR	501398	Identifier	NULL		501360	0					
ANR	501399	Identifier	NULL		501360	1					
ANR	501400	IdentifierDeclStatement	RBinSection * ptr = NULL ;	182:1:4243:4266	501360	4	True				
ANR	501401	IdentifierDecl	* ptr = NULL		501360	0					
ANR	501402	IdentifierDeclType	RBinSection *		501360	0					
ANR	501403	Identifier	ptr		501360	1					
ANR	501404	AssignmentExpression	* ptr = NULL		501360	2		=			
ANR	501405	Identifier	NULL		501360	0					
ANR	501406	Identifier	NULL		501360	1					
ANR	501407	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		501360	5					
ANR	501408	Condition	! ( ret = r_list_new ( ) )	184:5:4274:4295	501360	0	True				
ANR	501409	UnaryOperationExpression	! ( ret = r_list_new ( ) )		501360	0					
ANR	501410	UnaryOperator	!		501360	0					
ANR	501411	AssignmentExpression	ret = r_list_new ( )		501360	1		=			
ANR	501412	Identifier	ret		501360	0					
ANR	501413	CallExpression	r_list_new ( )		501360	1					
ANR	501414	Callee	r_list_new		501360	0					
ANR	501415	Identifier	r_list_new		501360	0					
ANR	501416	ArgumentList			501360	1					
ANR	501417	CompoundStatement		10:29:172:172	501360	1					
ANR	501418	ReturnStatement	return NULL ;	185:2:4302:4313	501360	0	True				
ANR	501419	Identifier	NULL		501360	0					
ANR	501420	ExpressionStatement	ret -> free = free	187:1:4319:4335	501360	6	True				
ANR	501421	AssignmentExpression	ret -> free = free		501360	0		=			
ANR	501422	PtrMemberAccess	ret -> free		501360	0					
ANR	501423	Identifier	ret		501360	0					
ANR	501424	Identifier	free		501360	1					
ANR	501425	Identifier	free		501360	1					
ANR	501426	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		501360	7					
ANR	501427	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	189:5:4343:4371	501360	0	True				
ANR	501428	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		501360	0					
ANR	501429	UnaryOperator	!		501360	0					
ANR	501430	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		501360	1		=			
ANR	501431	Identifier	ptr		501360	0					
ANR	501432	CallExpression	R_NEW0 ( RBinSection )		501360	1					
ANR	501433	Callee	R_NEW0		501360	0					
ANR	501434	Identifier	R_NEW0		501360	0					
ANR	501435	ArgumentList	RBinSection		501360	1					
ANR	501436	Argument	RBinSection		501360	0					
ANR	501437	Identifier	RBinSection		501360	0					
ANR	501438	CompoundStatement		15:36:248:248	501360	1					
ANR	501439	ReturnStatement	return ret ;	190:2:4378:4388	501360	0	True				
ANR	501440	Identifier	ret		501360	0					
ANR	501441	ExpressionStatement	"ptr -> name = strdup ( ""header"" )"	192:1:4394:4423	501360	8	True				
ANR	501442	AssignmentExpression	"ptr -> name = strdup ( ""header"" )"		501360	0		=			
ANR	501443	PtrMemberAccess	ptr -> name		501360	0					
ANR	501444	Identifier	ptr		501360	0					
ANR	501445	Identifier	name		501360	1					
ANR	501446	CallExpression	"strdup ( ""header"" )"		501360	1					
ANR	501447	Callee	strdup		501360	0					
ANR	501448	Identifier	strdup		501360	0					
ANR	501449	ArgumentList	"""header"""		501360	1					
ANR	501450	Argument	"""header"""		501360	0					
ANR	501451	PrimaryExpression	"""header"""		501360	0					
ANR	501452	ExpressionStatement	ptr -> size = sizeof ( BootImage )	193:1:4426:4456	501360	9	True				
ANR	501453	AssignmentExpression	ptr -> size = sizeof ( BootImage )		501360	0		=			
ANR	501454	PtrMemberAccess	ptr -> size		501360	0					
ANR	501455	Identifier	ptr		501360	0					
ANR	501456	Identifier	size		501360	1					
ANR	501457	SizeofExpression	sizeof ( BootImage )		501360	1					
ANR	501458	Sizeof	sizeof		501360	0					
ANR	501459	SizeofOperand	BootImage		501360	1					
ANR	501460	ExpressionStatement	ptr -> vsize = bi -> page_size	194:1:4459:4485	501360	10	True				
ANR	501461	AssignmentExpression	ptr -> vsize = bi -> page_size		501360	0		=			
ANR	501462	PtrMemberAccess	ptr -> vsize		501360	0					
ANR	501463	Identifier	ptr		501360	0					
ANR	501464	Identifier	vsize		501360	1					
ANR	501465	PtrMemberAccess	bi -> page_size		501360	1					
ANR	501466	Identifier	bi		501360	0					
ANR	501467	Identifier	page_size		501360	1					
ANR	501468	ExpressionStatement	ptr -> paddr = 0	195:1:4488:4502	501360	11	True				
ANR	501469	AssignmentExpression	ptr -> paddr = 0		501360	0		=			
ANR	501470	PtrMemberAccess	ptr -> paddr		501360	0					
ANR	501471	Identifier	ptr		501360	0					
ANR	501472	Identifier	paddr		501360	1					
ANR	501473	PrimaryExpression	0		501360	1					
ANR	501474	ExpressionStatement	ptr -> vaddr = 0	196:1:4505:4519	501360	12	True				
ANR	501475	AssignmentExpression	ptr -> vaddr = 0		501360	0		=			
ANR	501476	PtrMemberAccess	ptr -> vaddr		501360	0					
ANR	501477	Identifier	ptr		501360	0					
ANR	501478	Identifier	vaddr		501360	1					
ANR	501479	PrimaryExpression	0		501360	1					
ANR	501480	ExpressionStatement	ptr -> perm = R_PERM_R	197:1:4522:4542	501360	13	True				
ANR	501481	AssignmentExpression	ptr -> perm = R_PERM_R		501360	0		=			
ANR	501482	PtrMemberAccess	ptr -> perm		501360	0					
ANR	501483	Identifier	ptr		501360	0					
ANR	501484	Identifier	perm		501360	1					
ANR	501485	Identifier	R_PERM_R		501360	1					
ANR	501486	ExpressionStatement	ptr -> add = true	198:1:4552:4567	501360	14	True				
ANR	501487	AssignmentExpression	ptr -> add = true		501360	0		=			
ANR	501488	PtrMemberAccess	ptr -> add		501360	0					
ANR	501489	Identifier	ptr		501360	0					
ANR	501490	Identifier	add		501360	1					
ANR	501491	Identifier	true		501360	1					
ANR	501492	ExpressionStatement	"r_list_append ( ret , ptr )"	199:1:4570:4594	501360	15	True				
ANR	501493	CallExpression	"r_list_append ( ret , ptr )"		501360	0					
ANR	501494	Callee	r_list_append		501360	0					
ANR	501495	Identifier	r_list_append		501360	0					
ANR	501496	ArgumentList	ret		501360	1					
ANR	501497	Argument	ret		501360	0					
ANR	501498	Identifier	ret		501360	0					
ANR	501499	Argument	ptr		501360	1					
ANR	501500	Identifier	ptr		501360	0					
ANR	501501	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		501360	16					
ANR	501502	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	201:5:4602:4630	501360	0	True				
ANR	501503	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		501360	0					
ANR	501504	UnaryOperator	!		501360	0					
ANR	501505	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		501360	1		=			
ANR	501506	Identifier	ptr		501360	0					
ANR	501507	CallExpression	R_NEW0 ( RBinSection )		501360	1					
ANR	501508	Callee	R_NEW0		501360	0					
ANR	501509	Identifier	R_NEW0		501360	0					
ANR	501510	ArgumentList	RBinSection		501360	1					
ANR	501511	Argument	RBinSection		501360	0					
ANR	501512	Identifier	RBinSection		501360	0					
ANR	501513	CompoundStatement		27:36:507:507	501360	1					
ANR	501514	ReturnStatement	return ret ;	202:2:4637:4647	501360	0	True				
ANR	501515	Identifier	ret		501360	0					
ANR	501516	ExpressionStatement	"ptr -> name = strdup ( ""kernel"" )"	204:1:4653:4682	501360	17	True				
ANR	501517	AssignmentExpression	"ptr -> name = strdup ( ""kernel"" )"		501360	0		=			
ANR	501518	PtrMemberAccess	ptr -> name		501360	0					
ANR	501519	Identifier	ptr		501360	0					
ANR	501520	Identifier	name		501360	1					
ANR	501521	CallExpression	"strdup ( ""kernel"" )"		501360	1					
ANR	501522	Callee	strdup		501360	0					
ANR	501523	Identifier	strdup		501360	0					
ANR	501524	ArgumentList	"""kernel"""		501360	1					
ANR	501525	Argument	"""kernel"""		501360	0					
ANR	501526	PrimaryExpression	"""kernel"""		501360	0					
ANR	501527	ExpressionStatement	ptr -> size = bi -> kernel_size	205:1:4685:4712	501360	18	True				
ANR	501528	AssignmentExpression	ptr -> size = bi -> kernel_size		501360	0		=			
ANR	501529	PtrMemberAccess	ptr -> size		501360	0					
ANR	501530	Identifier	ptr		501360	0					
ANR	501531	Identifier	size		501360	1					
ANR	501532	PtrMemberAccess	bi -> kernel_size		501360	1					
ANR	501533	Identifier	bi		501360	0					
ANR	501534	Identifier	kernel_size		501360	1					
ANR	501535	ExpressionStatement	"ptr -> vsize = ADD_REMAINDER ( ptr -> size , bi -> page_size )"	206:1:4715:4768	501360	19	True				
ANR	501536	AssignmentExpression	"ptr -> vsize = ADD_REMAINDER ( ptr -> size , bi -> page_size )"		501360	0		=			
ANR	501537	PtrMemberAccess	ptr -> vsize		501360	0					
ANR	501538	Identifier	ptr		501360	0					
ANR	501539	Identifier	vsize		501360	1					
ANR	501540	CallExpression	"ADD_REMAINDER ( ptr -> size , bi -> page_size )"		501360	1					
ANR	501541	Callee	ADD_REMAINDER		501360	0					
ANR	501542	Identifier	ADD_REMAINDER		501360	0					
ANR	501543	ArgumentList	ptr -> size		501360	1					
ANR	501544	Argument	ptr -> size		501360	0					
ANR	501545	PtrMemberAccess	ptr -> size		501360	0					
ANR	501546	Identifier	ptr		501360	0					
ANR	501547	Identifier	size		501360	1					
ANR	501548	Argument	bi -> page_size		501360	1					
ANR	501549	PtrMemberAccess	bi -> page_size		501360	0					
ANR	501550	Identifier	bi		501360	0					
ANR	501551	Identifier	page_size		501360	1					
ANR	501552	ExpressionStatement	ptr -> paddr = bi -> page_size	207:1:4771:4797	501360	20	True				
ANR	501553	AssignmentExpression	ptr -> paddr = bi -> page_size		501360	0		=			
ANR	501554	PtrMemberAccess	ptr -> paddr		501360	0					
ANR	501555	Identifier	ptr		501360	0					
ANR	501556	Identifier	paddr		501360	1					
ANR	501557	PtrMemberAccess	bi -> page_size		501360	1					
ANR	501558	Identifier	bi		501360	0					
ANR	501559	Identifier	page_size		501360	1					
ANR	501560	ExpressionStatement	ptr -> vaddr = bi -> kernel_addr	208:1:4800:4828	501360	21	True				
ANR	501561	AssignmentExpression	ptr -> vaddr = bi -> kernel_addr		501360	0		=			
ANR	501562	PtrMemberAccess	ptr -> vaddr		501360	0					
ANR	501563	Identifier	ptr		501360	0					
ANR	501564	Identifier	vaddr		501360	1					
ANR	501565	PtrMemberAccess	bi -> kernel_addr		501360	1					
ANR	501566	Identifier	bi		501360	0					
ANR	501567	Identifier	kernel_addr		501360	1					
ANR	501568	ExpressionStatement	ptr -> perm = R_PERM_R	209:1:4831:4851	501360	22	True				
ANR	501569	AssignmentExpression	ptr -> perm = R_PERM_R		501360	0		=			
ANR	501570	PtrMemberAccess	ptr -> perm		501360	0					
ANR	501571	Identifier	ptr		501360	0					
ANR	501572	Identifier	perm		501360	1					
ANR	501573	Identifier	R_PERM_R		501360	1					
ANR	501574	ExpressionStatement	ptr -> add = true	210:1:4861:4876	501360	23	True				
ANR	501575	AssignmentExpression	ptr -> add = true		501360	0		=			
ANR	501576	PtrMemberAccess	ptr -> add		501360	0					
ANR	501577	Identifier	ptr		501360	0					
ANR	501578	Identifier	add		501360	1					
ANR	501579	Identifier	true		501360	1					
ANR	501580	ExpressionStatement	"r_list_append ( ret , ptr )"	211:1:4879:4903	501360	24	True				
ANR	501581	CallExpression	"r_list_append ( ret , ptr )"		501360	0					
ANR	501582	Callee	r_list_append		501360	0					
ANR	501583	Identifier	r_list_append		501360	0					
ANR	501584	ArgumentList	ret		501360	1					
ANR	501585	Argument	ret		501360	0					
ANR	501586	Identifier	ret		501360	0					
ANR	501587	Argument	ptr		501360	1					
ANR	501588	Identifier	ptr		501360	0					
ANR	501589	IfStatement	if ( bi -> ramdisk_size > 0 )		501360	25					
ANR	501590	Condition	bi -> ramdisk_size > 0	213:5:4911:4930	501360	0	True				
ANR	501591	RelationalExpression	bi -> ramdisk_size > 0		501360	0		>			
ANR	501592	PtrMemberAccess	bi -> ramdisk_size		501360	0					
ANR	501593	Identifier	bi		501360	0					
ANR	501594	Identifier	ramdisk_size		501360	1					
ANR	501595	PrimaryExpression	0		501360	1					
ANR	501596	CompoundStatement		40:2:811:862	501360	1					
ANR	501597	IdentifierDeclStatement	ut64 base = bi -> kernel_size + 2 * bi -> page_size - 1 ;	214:2:4937:4988	501360	0	True				
ANR	501598	IdentifierDecl	base = bi -> kernel_size + 2 * bi -> page_size - 1		501360	0					
ANR	501599	IdentifierDeclType	ut64		501360	0					
ANR	501600	Identifier	base		501360	1					
ANR	501601	AssignmentExpression	base = bi -> kernel_size + 2 * bi -> page_size - 1		501360	2		=			
ANR	501602	Identifier	base		501360	0					
ANR	501603	AdditiveExpression	bi -> kernel_size + 2 * bi -> page_size - 1		501360	1		+			
ANR	501604	PtrMemberAccess	bi -> kernel_size		501360	0					
ANR	501605	Identifier	bi		501360	0					
ANR	501606	Identifier	kernel_size		501360	1					
ANR	501607	AdditiveExpression	2 * bi -> page_size - 1		501360	1		-			
ANR	501608	MultiplicativeExpression	2 * bi -> page_size		501360	0		*			
ANR	501609	PrimaryExpression	2		501360	0					
ANR	501610	PtrMemberAccess	bi -> page_size		501360	1					
ANR	501611	Identifier	bi		501360	0					
ANR	501612	Identifier	page_size		501360	1					
ANR	501613	PrimaryExpression	1		501360	1					
ANR	501614	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		501360	1					
ANR	501615	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	215:6:4996:5024	501360	0	True				
ANR	501616	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		501360	0					
ANR	501617	UnaryOperator	!		501360	0					
ANR	501618	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		501360	1		=			
ANR	501619	Identifier	ptr		501360	0					
ANR	501620	CallExpression	R_NEW0 ( RBinSection )		501360	1					
ANR	501621	Callee	R_NEW0		501360	0					
ANR	501622	Identifier	R_NEW0		501360	0					
ANR	501623	ArgumentList	RBinSection		501360	1					
ANR	501624	Argument	RBinSection		501360	0					
ANR	501625	Identifier	RBinSection		501360	0					
ANR	501626	CompoundStatement		41:37:901:901	501360	1					
ANR	501627	ReturnStatement	return ret ;	216:3:5032:5042	501360	0	True				
ANR	501628	Identifier	ret		501360	0					
ANR	501629	ExpressionStatement	"ptr -> name = strdup ( ""ramdisk"" )"	218:2:5050:5080	501360	2	True				
ANR	501630	AssignmentExpression	"ptr -> name = strdup ( ""ramdisk"" )"		501360	0		=			
ANR	501631	PtrMemberAccess	ptr -> name		501360	0					
ANR	501632	Identifier	ptr		501360	0					
ANR	501633	Identifier	name		501360	1					
ANR	501634	CallExpression	"strdup ( ""ramdisk"" )"		501360	1					
ANR	501635	Callee	strdup		501360	0					
ANR	501636	Identifier	strdup		501360	0					
ANR	501637	ArgumentList	"""ramdisk"""		501360	1					
ANR	501638	Argument	"""ramdisk"""		501360	0					
ANR	501639	PrimaryExpression	"""ramdisk"""		501360	0					
ANR	501640	ExpressionStatement	ptr -> size = bi -> ramdisk_size	219:2:5084:5112	501360	3	True				
ANR	501641	AssignmentExpression	ptr -> size = bi -> ramdisk_size		501360	0		=			
ANR	501642	PtrMemberAccess	ptr -> size		501360	0					
ANR	501643	Identifier	ptr		501360	0					
ANR	501644	Identifier	size		501360	1					
ANR	501645	PtrMemberAccess	bi -> ramdisk_size		501360	1					
ANR	501646	Identifier	bi		501360	0					
ANR	501647	Identifier	ramdisk_size		501360	1					
ANR	501648	ExpressionStatement	"ptr -> vsize = ADD_REMAINDER ( bi -> ramdisk_size , bi -> page_size )"	220:2:5116:5176	501360	4	True				
ANR	501649	AssignmentExpression	"ptr -> vsize = ADD_REMAINDER ( bi -> ramdisk_size , bi -> page_size )"		501360	0		=			
ANR	501650	PtrMemberAccess	ptr -> vsize		501360	0					
ANR	501651	Identifier	ptr		501360	0					
ANR	501652	Identifier	vsize		501360	1					
ANR	501653	CallExpression	"ADD_REMAINDER ( bi -> ramdisk_size , bi -> page_size )"		501360	1					
ANR	501654	Callee	ADD_REMAINDER		501360	0					
ANR	501655	Identifier	ADD_REMAINDER		501360	0					
ANR	501656	ArgumentList	bi -> ramdisk_size		501360	1					
ANR	501657	Argument	bi -> ramdisk_size		501360	0					
ANR	501658	PtrMemberAccess	bi -> ramdisk_size		501360	0					
ANR	501659	Identifier	bi		501360	0					
ANR	501660	Identifier	ramdisk_size		501360	1					
ANR	501661	Argument	bi -> page_size		501360	1					
ANR	501662	PtrMemberAccess	bi -> page_size		501360	0					
ANR	501663	Identifier	bi		501360	0					
ANR	501664	Identifier	page_size		501360	1					
ANR	501665	ExpressionStatement	"ptr -> paddr = ROUND_DOWN ( base , bi -> page_size )"	221:2:5180:5225	501360	5	True				
ANR	501666	AssignmentExpression	"ptr -> paddr = ROUND_DOWN ( base , bi -> page_size )"		501360	0		=			
ANR	501667	PtrMemberAccess	ptr -> paddr		501360	0					
ANR	501668	Identifier	ptr		501360	0					
ANR	501669	Identifier	paddr		501360	1					
ANR	501670	CallExpression	"ROUND_DOWN ( base , bi -> page_size )"		501360	1					
ANR	501671	Callee	ROUND_DOWN		501360	0					
ANR	501672	Identifier	ROUND_DOWN		501360	0					
ANR	501673	ArgumentList	base		501360	1					
ANR	501674	Argument	base		501360	0					
ANR	501675	Identifier	base		501360	0					
ANR	501676	Argument	bi -> page_size		501360	1					
ANR	501677	PtrMemberAccess	bi -> page_size		501360	0					
ANR	501678	Identifier	bi		501360	0					
ANR	501679	Identifier	page_size		501360	1					
ANR	501680	ExpressionStatement	ptr -> vaddr = bi -> ramdisk_addr	222:2:5229:5258	501360	6	True				
ANR	501681	AssignmentExpression	ptr -> vaddr = bi -> ramdisk_addr		501360	0		=			
ANR	501682	PtrMemberAccess	ptr -> vaddr		501360	0					
ANR	501683	Identifier	ptr		501360	0					
ANR	501684	Identifier	vaddr		501360	1					
ANR	501685	PtrMemberAccess	bi -> ramdisk_addr		501360	1					
ANR	501686	Identifier	bi		501360	0					
ANR	501687	Identifier	ramdisk_addr		501360	1					
ANR	501688	ExpressionStatement	ptr -> perm = R_PERM_RX	223:2:5262:5283	501360	7	True				
ANR	501689	AssignmentExpression	ptr -> perm = R_PERM_RX		501360	0		=			
ANR	501690	PtrMemberAccess	ptr -> perm		501360	0					
ANR	501691	Identifier	ptr		501360	0					
ANR	501692	Identifier	perm		501360	1					
ANR	501693	Identifier	R_PERM_RX		501360	1					
ANR	501694	ExpressionStatement	ptr -> add = true	224:2:5294:5309	501360	8	True				
ANR	501695	AssignmentExpression	ptr -> add = true		501360	0		=			
ANR	501696	PtrMemberAccess	ptr -> add		501360	0					
ANR	501697	Identifier	ptr		501360	0					
ANR	501698	Identifier	add		501360	1					
ANR	501699	Identifier	true		501360	1					
ANR	501700	ExpressionStatement	"r_list_append ( ret , ptr )"	225:2:5313:5337	501360	9	True				
ANR	501701	CallExpression	"r_list_append ( ret , ptr )"		501360	0					
ANR	501702	Callee	r_list_append		501360	0					
ANR	501703	Identifier	r_list_append		501360	0					
ANR	501704	ArgumentList	ret		501360	1					
ANR	501705	Argument	ret		501360	0					
ANR	501706	Identifier	ret		501360	0					
ANR	501707	Argument	ptr		501360	1					
ANR	501708	Identifier	ptr		501360	0					
ANR	501709	IfStatement	if ( bi -> second_size > 0 )		501360	26					
ANR	501710	Condition	bi -> second_size > 0	228:5:5348:5366	501360	0	True				
ANR	501711	RelationalExpression	bi -> second_size > 0		501360	0		>			
ANR	501712	PtrMemberAccess	bi -> second_size		501360	0					
ANR	501713	Identifier	bi		501360	0					
ANR	501714	Identifier	second_size		501360	1					
ANR	501715	PrimaryExpression	0		501360	1					
ANR	501716	CompoundStatement		55:2:1247:1317	501360	1					
ANR	501717	IdentifierDeclStatement	ut64 base = bi -> kernel_size + bi -> ramdisk_size + 2 * bi -> page_size - 1 ;	229:2:5373:5443	501360	0	True				
ANR	501718	IdentifierDecl	base = bi -> kernel_size + bi -> ramdisk_size + 2 * bi -> page_size - 1		501360	0					
ANR	501719	IdentifierDeclType	ut64		501360	0					
ANR	501720	Identifier	base		501360	1					
ANR	501721	AssignmentExpression	base = bi -> kernel_size + bi -> ramdisk_size + 2 * bi -> page_size - 1		501360	2		=			
ANR	501722	Identifier	base		501360	0					
ANR	501723	AdditiveExpression	bi -> kernel_size + bi -> ramdisk_size + 2 * bi -> page_size - 1		501360	1		+			
ANR	501724	PtrMemberAccess	bi -> kernel_size		501360	0					
ANR	501725	Identifier	bi		501360	0					
ANR	501726	Identifier	kernel_size		501360	1					
ANR	501727	AdditiveExpression	bi -> ramdisk_size + 2 * bi -> page_size - 1		501360	1		+			
ANR	501728	PtrMemberAccess	bi -> ramdisk_size		501360	0					
ANR	501729	Identifier	bi		501360	0					
ANR	501730	Identifier	ramdisk_size		501360	1					
ANR	501731	AdditiveExpression	2 * bi -> page_size - 1		501360	1		-			
ANR	501732	MultiplicativeExpression	2 * bi -> page_size		501360	0		*			
ANR	501733	PrimaryExpression	2		501360	0					
ANR	501734	PtrMemberAccess	bi -> page_size		501360	1					
ANR	501735	Identifier	bi		501360	0					
ANR	501736	Identifier	page_size		501360	1					
ANR	501737	PrimaryExpression	1		501360	1					
ANR	501738	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		501360	1					
ANR	501739	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	230:6:5451:5479	501360	0	True				
ANR	501740	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		501360	0					
ANR	501741	UnaryOperator	!		501360	0					
ANR	501742	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		501360	1		=			
ANR	501743	Identifier	ptr		501360	0					
ANR	501744	CallExpression	R_NEW0 ( RBinSection )		501360	1					
ANR	501745	Callee	R_NEW0		501360	0					
ANR	501746	Identifier	R_NEW0		501360	0					
ANR	501747	ArgumentList	RBinSection		501360	1					
ANR	501748	Argument	RBinSection		501360	0					
ANR	501749	Identifier	RBinSection		501360	0					
ANR	501750	CompoundStatement		56:37:1356:1356	501360	1					
ANR	501751	ReturnStatement	return ret ;	231:3:5487:5497	501360	0	True				
ANR	501752	Identifier	ret		501360	0					
ANR	501753	ExpressionStatement	"ptr -> name = strdup ( ""second"" )"	233:2:5505:5534	501360	2	True				
ANR	501754	AssignmentExpression	"ptr -> name = strdup ( ""second"" )"		501360	0		=			
ANR	501755	PtrMemberAccess	ptr -> name		501360	0					
ANR	501756	Identifier	ptr		501360	0					
ANR	501757	Identifier	name		501360	1					
ANR	501758	CallExpression	"strdup ( ""second"" )"		501360	1					
ANR	501759	Callee	strdup		501360	0					
ANR	501760	Identifier	strdup		501360	0					
ANR	501761	ArgumentList	"""second"""		501360	1					
ANR	501762	Argument	"""second"""		501360	0					
ANR	501763	PrimaryExpression	"""second"""		501360	0					
ANR	501764	ExpressionStatement	ptr -> size = bi -> second_size	234:2:5538:5565	501360	3	True				
ANR	501765	AssignmentExpression	ptr -> size = bi -> second_size		501360	0		=			
ANR	501766	PtrMemberAccess	ptr -> size		501360	0					
ANR	501767	Identifier	ptr		501360	0					
ANR	501768	Identifier	size		501360	1					
ANR	501769	PtrMemberAccess	bi -> second_size		501360	1					
ANR	501770	Identifier	bi		501360	0					
ANR	501771	Identifier	second_size		501360	1					
ANR	501772	ExpressionStatement	"ptr -> vsize = ADD_REMAINDER ( bi -> second_size , bi -> page_size )"	235:2:5569:5628	501360	4	True				
ANR	501773	AssignmentExpression	"ptr -> vsize = ADD_REMAINDER ( bi -> second_size , bi -> page_size )"		501360	0		=			
ANR	501774	PtrMemberAccess	ptr -> vsize		501360	0					
ANR	501775	Identifier	ptr		501360	0					
ANR	501776	Identifier	vsize		501360	1					
ANR	501777	CallExpression	"ADD_REMAINDER ( bi -> second_size , bi -> page_size )"		501360	1					
ANR	501778	Callee	ADD_REMAINDER		501360	0					
ANR	501779	Identifier	ADD_REMAINDER		501360	0					
ANR	501780	ArgumentList	bi -> second_size		501360	1					
ANR	501781	Argument	bi -> second_size		501360	0					
ANR	501782	PtrMemberAccess	bi -> second_size		501360	0					
ANR	501783	Identifier	bi		501360	0					
ANR	501784	Identifier	second_size		501360	1					
ANR	501785	Argument	bi -> page_size		501360	1					
ANR	501786	PtrMemberAccess	bi -> page_size		501360	0					
ANR	501787	Identifier	bi		501360	0					
ANR	501788	Identifier	page_size		501360	1					
ANR	501789	ExpressionStatement	"ptr -> paddr = ROUND_DOWN ( base , bi -> page_size )"	236:2:5632:5677	501360	5	True				
ANR	501790	AssignmentExpression	"ptr -> paddr = ROUND_DOWN ( base , bi -> page_size )"		501360	0		=			
ANR	501791	PtrMemberAccess	ptr -> paddr		501360	0					
ANR	501792	Identifier	ptr		501360	0					
ANR	501793	Identifier	paddr		501360	1					
ANR	501794	CallExpression	"ROUND_DOWN ( base , bi -> page_size )"		501360	1					
ANR	501795	Callee	ROUND_DOWN		501360	0					
ANR	501796	Identifier	ROUND_DOWN		501360	0					
ANR	501797	ArgumentList	base		501360	1					
ANR	501798	Argument	base		501360	0					
ANR	501799	Identifier	base		501360	0					
ANR	501800	Argument	bi -> page_size		501360	1					
ANR	501801	PtrMemberAccess	bi -> page_size		501360	0					
ANR	501802	Identifier	bi		501360	0					
ANR	501803	Identifier	page_size		501360	1					
ANR	501804	ExpressionStatement	ptr -> vaddr = bi -> second_addr	237:2:5681:5709	501360	6	True				
ANR	501805	AssignmentExpression	ptr -> vaddr = bi -> second_addr		501360	0		=			
ANR	501806	PtrMemberAccess	ptr -> vaddr		501360	0					
ANR	501807	Identifier	ptr		501360	0					
ANR	501808	Identifier	vaddr		501360	1					
ANR	501809	PtrMemberAccess	bi -> second_addr		501360	1					
ANR	501810	Identifier	bi		501360	0					
ANR	501811	Identifier	second_addr		501360	1					
ANR	501812	ExpressionStatement	ptr -> perm = R_PERM_RX	238:2:5713:5734	501360	7	True				
ANR	501813	AssignmentExpression	ptr -> perm = R_PERM_RX		501360	0		=			
ANR	501814	PtrMemberAccess	ptr -> perm		501360	0					
ANR	501815	Identifier	ptr		501360	0					
ANR	501816	Identifier	perm		501360	1					
ANR	501817	Identifier	R_PERM_RX		501360	1					
ANR	501818	ExpressionStatement	ptr -> add = true	239:2:5745:5760	501360	8	True				
ANR	501819	AssignmentExpression	ptr -> add = true		501360	0		=			
ANR	501820	PtrMemberAccess	ptr -> add		501360	0					
ANR	501821	Identifier	ptr		501360	0					
ANR	501822	Identifier	add		501360	1					
ANR	501823	Identifier	true		501360	1					
ANR	501824	ExpressionStatement	"r_list_append ( ret , ptr )"	240:2:5764:5788	501360	9	True				
ANR	501825	CallExpression	"r_list_append ( ret , ptr )"		501360	0					
ANR	501826	Callee	r_list_append		501360	0					
ANR	501827	Identifier	r_list_append		501360	0					
ANR	501828	ArgumentList	ret		501360	1					
ANR	501829	Argument	ret		501360	0					
ANR	501830	Identifier	ret		501360	0					
ANR	501831	Argument	ptr		501360	1					
ANR	501832	Identifier	ptr		501360	0					
ANR	501833	ReturnStatement	return ret ;	243:1:5795:5805	501360	27	True				
ANR	501834	Identifier	ret		501360	0					
ANR	501835	ReturnType	static RList *		501360	1					
ANR	501836	Identifier	sections		501360	2					
ANR	501837	ParameterList	RBinFile * bf		501360	3					
ANR	501838	Parameter	RBinFile * bf	175:23:4111:4122	501360	0	True				
ANR	501839	ParameterType	RBinFile *		501360	0					
ANR	501840	Identifier	bf		501360	1					
ANR	501841	CFGEntryNode	ENTRY		501360		True				
ANR	501842	CFGExitNode	EXIT		501360		True				
ANR	501843	Symbol	ptr -> paddr		501360						
ANR	501844	Symbol	bf		501360						
ANR	501845	Symbol	bi		501360						
ANR	501846	Symbol	ptr -> name		501360						
ANR	501847	Symbol	bi -> ramdisk_size		501360						
ANR	501848	Symbol	bio		501360						
ANR	501849	Symbol	* ret		501360						
ANR	501850	Symbol	ret -> free		501360						
ANR	501851	Symbol	* bf -> o		501360						
ANR	501852	Symbol	ptr -> vaddr		501360						
ANR	501853	Symbol	ptr -> add		501360						
ANR	501854	Symbol	bf -> o		501360						
ANR	501855	Symbol	R_PERM_R		501360						
ANR	501856	Symbol	* ptr		501360						
ANR	501857	Symbol	bi -> second_addr		501360						
ANR	501858	Symbol	free		501360						
ANR	501859	Symbol	bi -> kernel_size		501360						
ANR	501860	Symbol	R_PERM_RX		501360						
ANR	501861	Symbol	bi -> ramdisk_addr		501360						
ANR	501862	Symbol	bf -> o -> bin_obj		501360						
ANR	501863	Symbol	ret		501360						
ANR	501864	Symbol	ROUND_DOWN		501360						
ANR	501865	Symbol	ADD_REMAINDER		501360						
ANR	501866	Symbol	NULL		501360						
ANR	501867	Symbol	* bf		501360						
ANR	501868	Symbol	bi -> page_size		501360						
ANR	501869	Symbol	ptr -> size		501360						
ANR	501870	Symbol	* bi		501360						
ANR	501871	Symbol	ptr		501360						
ANR	501872	Symbol	& bio -> bi		501360						
ANR	501873	Symbol	bi -> second_size		501360						
ANR	501874	Symbol	R_NEW0		501360						
ANR	501875	Symbol	* * bf		501360						
ANR	501876	Symbol	bi -> kernel_addr		501360						
ANR	501877	Symbol	ptr -> vsize		501360						
ANR	501878	Symbol	true		501360						
ANR	501879	Symbol	RBinSection		501360						
ANR	501880	Symbol	strdup		501360						
ANR	501881	Symbol	ptr -> perm		501360						
ANR	501882	Symbol	r_list_new		501360						
ANR	501883	Symbol	base		501360						
ANR	501884	DeclStmt									
ANR	501885	Decl							RBinPlugin	RBinPlugin	r_bin_plugin_bootimg
ANR	501886	DeclStmt									
ANR	501887	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
