command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4560652	File	data/converged/CVE-2019-16718~_radare2/libr_core_pseudo.c								
ANR	4560653	ClassDef	_find_ctx	11:8:403:615							
ANR	4560654	DeclStmt									
ANR	4560655	Decl							char	char *	comment
ANR	4560656	DeclStmt									
ANR	4560657	Decl							char	char *	left
ANR	4560658	DeclStmt									
ANR	4560659	Decl							char	char *	right
ANR	4560660	DeclStmt									
ANR	4560661	Decl							char	char *	linebegin
ANR	4560662	DeclStmt									
ANR	4560663	Decl							int	int	leftlen
ANR	4560664	DeclStmt									
ANR	4560665	Decl							int	int	rightlen
ANR	4560666	DeclStmt									
ANR	4560667	Decl							int	int	leftpos
ANR	4560668	DeclStmt									
ANR	4560669	Decl							int	int	leftcolor
ANR	4560670	DeclStmt									
ANR	4560671	Decl							int	int	commentcolor
ANR	4560672	DeclStmt									
ANR	4560673	Decl							int	int	rightcolor
ANR	4560674	DeclStmt									
ANR	4560675	Decl							int	int	linecount
ANR	4560676	DeclStmt									
ANR	4560677	Decl							int	int	type
ANR	4560678	DeclStmt									
ANR	4560679	Decl							_find_ctx	_find_ctx	RFindCTX
ANR	4560680	Function	find_and_change	26:0:618:5588							
ANR	4560681	FunctionDef	"find_and_change (char * in , int len)"		4560680	0					
ANR	4560682	CompoundStatement		26:48:666:5588	4560680	0					
ANR	4560683	IfStatement	if ( ! in || len < 1 )		4560680	0					
ANR	4560684	Condition	! in || len < 1	28:5:738:751	4560680	0	True				
ANR	4560685	OrExpression	! in || len < 1		4560680	0		||			
ANR	4560686	UnaryOperationExpression	! in		4560680	0					
ANR	4560687	UnaryOperator	!		4560680	0					
ANR	4560688	Identifier	in		4560680	1					
ANR	4560689	RelationalExpression	len < 1		4560680	1		<			
ANR	4560690	Identifier	len		4560680	0					
ANR	4560691	PrimaryExpression	1		4560680	1					
ANR	4560692	CompoundStatement		3:21:87:87	4560680	1					
ANR	4560693	ReturnStatement	return ;	29:2:758:764	4560680	0	True				
ANR	4560694	IdentifierDeclStatement	char * end ;	31:1:770:779	4560680	1	True				
ANR	4560695	IdentifierDecl	* end		4560680	0					
ANR	4560696	IdentifierDeclType	char *		4560680	0					
ANR	4560697	Identifier	end		4560680	1					
ANR	4560698	IdentifierDeclStatement	RFindCTX ctx = { 0 } ;	32:1:782:800	4560680	2	True				
ANR	4560699	IdentifierDecl	ctx = { 0 }		4560680	0					
ANR	4560700	IdentifierDeclType	RFindCTX		4560680	0					
ANR	4560701	Identifier	ctx		4560680	1					
ANR	4560702	AssignmentExpression	ctx = { 0 }		4560680	2		=			
ANR	4560703	Identifier	ctx		4560680	0					
ANR	4560704	InitializerList	0		4560680	1					
ANR	4560705	PrimaryExpression	0		4560680	0					
ANR	4560706	ExpressionStatement	end = in + len	33:1:803:817	4560680	3	True				
ANR	4560707	AssignmentExpression	end = in + len		4560680	0		=			
ANR	4560708	Identifier	end		4560680	0					
ANR	4560709	AdditiveExpression	in + len		4560680	1		+			
ANR	4560710	Identifier	in		4560680	0					
ANR	4560711	Identifier	len		4560680	1					
ANR	4560712	ForStatement	for ( ctx . linebegin = in ; in < end ; ++ in )		4560680	4					
ANR	4560713	ForInit	ctx . linebegin = in ;	35:6:846:864	4560680	0	True				
ANR	4560714	AssignmentExpression	ctx . linebegin = in		4560680	0		=			
ANR	4560715	MemberAccess	ctx . linebegin		4560680	0					
ANR	4560716	Identifier	ctx		4560680	0					
ANR	4560717	Identifier	linebegin		4560680	1					
ANR	4560718	Identifier	in		4560680	1					
ANR	4560719	Condition	in < end	35:26:866:873	4560680	1	True				
ANR	4560720	RelationalExpression	in < end		4560680	0		<			
ANR	4560721	Identifier	in		4560680	0					
ANR	4560722	Identifier	end		4560680	1					
ANR	4560723	UnaryExpression	++ in	35:36:876:879	4560680	2	True				
ANR	4560724	IncDec	++		4560680	0					
ANR	4560725	Identifier	in		4560680	1					
ANR	4560726	CompoundStatement		10:42:215:215	4560680	3					
ANR	4560727	IfStatement	if ( * in == '\\n' || ! * in )		4560680	0					
ANR	4560728	Condition	* in == '\\n' || ! * in	36:6:890:908	4560680	0	True				
ANR	4560729	OrExpression	* in == '\\n' || ! * in		4560680	0		||			
ANR	4560730	EqualityExpression	* in == '\\n'		4560680	0		==			
ANR	4560731	UnaryOperationExpression	* in		4560680	0					
ANR	4560732	UnaryOperator	*		4560680	0					
ANR	4560733	Identifier	in		4560680	1					
ANR	4560734	PrimaryExpression	'\\n'		4560680	1					
ANR	4560735	UnaryOperationExpression	! * in		4560680	1					
ANR	4560736	UnaryOperator	!		4560680	0					
ANR	4560737	UnaryOperationExpression	* in		4560680	1					
ANR	4560738	UnaryOperator	*		4560680	0					
ANR	4560739	Identifier	in		4560680	1					
ANR	4560740	CompoundStatement		11:27:244:244	4560680	1					
ANR	4560741	IfStatement	if ( ctx . type == TYPE_SYM && ctx . linecount < 1 )		4560680	0					
ANR	4560742	Condition	ctx . type == TYPE_SYM && ctx . linecount < 1	37:7:920:960	4560680	0	True				
ANR	4560743	AndExpression	ctx . type == TYPE_SYM && ctx . linecount < 1		4560680	0		&&			
ANR	4560744	EqualityExpression	ctx . type == TYPE_SYM		4560680	0		==			
ANR	4560745	MemberAccess	ctx . type		4560680	0					
ANR	4560746	Identifier	ctx		4560680	0					
ANR	4560747	Identifier	type		4560680	1					
ANR	4560748	Identifier	TYPE_SYM		4560680	1					
ANR	4560749	RelationalExpression	ctx . linecount < 1		4560680	1		<			
ANR	4560750	MemberAccess	ctx . linecount		4560680	0					
ANR	4560751	Identifier	ctx		4560680	0					
ANR	4560752	Identifier	linecount		4560680	1					
ANR	4560753	PrimaryExpression	1		4560680	1					
ANR	4560754	CompoundStatement		12:50:296:296	4560680	1					
ANR	4560755	ExpressionStatement	ctx . linecount ++	38:4:969:984	4560680	0	True				
ANR	4560756	PostIncDecOperationExpression	ctx . linecount ++		4560680	0					
ANR	4560757	MemberAccess	ctx . linecount		4560680	0					
ANR	4560758	Identifier	ctx		4560680	0					
ANR	4560759	Identifier	linecount		4560680	1					
ANR	4560760	IncDec	++		4560680	1					
ANR	4560761	ExpressionStatement	ctx . linebegin = in + 1	39:4:990:1012	4560680	1	True				
ANR	4560762	AssignmentExpression	ctx . linebegin = in + 1		4560680	0		=			
ANR	4560763	MemberAccess	ctx . linebegin		4560680	0					
ANR	4560764	Identifier	ctx		4560680	0					
ANR	4560765	Identifier	linebegin		4560680	1					
ANR	4560766	AdditiveExpression	in + 1		4560680	1		+			
ANR	4560767	Identifier	in		4560680	0					
ANR	4560768	PrimaryExpression	1		4560680	1					
ANR	4560769	ContinueStatement	continue ;	40:4:1018:1026	4560680	2	True				
ANR	4560770	IfStatement	if ( ctx . type != TYPE_NONE && ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0 )		4560680	1					
ANR	4560771	Condition	ctx . type != TYPE_NONE && ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0	42:7:1040:1124	4560680	0	True				
ANR	4560772	AndExpression	ctx . type != TYPE_NONE && ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0		4560680	0		&&			
ANR	4560773	EqualityExpression	ctx . type != TYPE_NONE		4560680	0		!=			
ANR	4560774	MemberAccess	ctx . type		4560680	0					
ANR	4560775	Identifier	ctx		4560680	0					
ANR	4560776	Identifier	type		4560680	1					
ANR	4560777	Identifier	TYPE_NONE		4560680	1					
ANR	4560778	AndExpression	ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0		4560680	1		&&			
ANR	4560779	MemberAccess	ctx . right		4560680	0					
ANR	4560780	Identifier	ctx		4560680	0					
ANR	4560781	Identifier	right		4560680	1					
ANR	4560782	AndExpression	ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0		4560680	1		&&			
ANR	4560783	MemberAccess	ctx . left		4560680	0					
ANR	4560784	Identifier	ctx		4560680	0					
ANR	4560785	Identifier	left		4560680	1					
ANR	4560786	AndExpression	ctx . rightlen > 0 && ctx . leftlen > 0		4560680	1		&&			
ANR	4560787	RelationalExpression	ctx . rightlen > 0		4560680	0		>			
ANR	4560788	MemberAccess	ctx . rightlen		4560680	0					
ANR	4560789	Identifier	ctx		4560680	0					
ANR	4560790	Identifier	rightlen		4560680	1					
ANR	4560791	PrimaryExpression	0		4560680	1					
ANR	4560792	RelationalExpression	ctx . leftlen > 0		4560680	1		>			
ANR	4560793	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560794	Identifier	ctx		4560680	0					
ANR	4560795	Identifier	leftlen		4560680	1					
ANR	4560796	PrimaryExpression	0		4560680	1					
ANR	4560797	CompoundStatement		18:4:466:483	4560680	1					
ANR	4560798	IdentifierDeclStatement	char * copy = NULL ;	43:4:1133:1150	4560680	0	True				
ANR	4560799	IdentifierDecl	* copy = NULL		4560680	0					
ANR	4560800	IdentifierDeclType	char *		4560680	0					
ANR	4560801	Identifier	copy		4560680	1					
ANR	4560802	AssignmentExpression	* copy = NULL		4560680	2		=			
ANR	4560803	Identifier	NULL		4560680	0					
ANR	4560804	Identifier	NULL		4560680	1					
ANR	4560805	IfStatement	if ( ctx . leftlen > ctx . rightlen )		4560680	1					
ANR	4560806	Condition	ctx . leftlen > ctx . rightlen	44:8:1160:1185	4560680	0	True				
ANR	4560807	RelationalExpression	ctx . leftlen > ctx . rightlen		4560680	0		>			
ANR	4560808	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560809	Identifier	ctx		4560680	0					
ANR	4560810	Identifier	leftlen		4560680	1					
ANR	4560811	MemberAccess	ctx . rightlen		4560680	1					
ANR	4560812	Identifier	ctx		4560680	0					
ANR	4560813	Identifier	rightlen		4560680	1					
ANR	4560814	CompoundStatement		19:36:521:521	4560680	1					
ANR	4560815	ExpressionStatement	copy = ( char * ) malloc ( ctx . leftlen )	46:5:1222:1257	4560680	0	True				
ANR	4560816	AssignmentExpression	copy = ( char * ) malloc ( ctx . leftlen )		4560680	0		=			
ANR	4560817	Identifier	copy		4560680	0					
ANR	4560818	CastExpression	( char * ) malloc ( ctx . leftlen )		4560680	1					
ANR	4560819	CastTarget	char *		4560680	0					
ANR	4560820	CallExpression	malloc ( ctx . leftlen )		4560680	1					
ANR	4560821	Callee	malloc		4560680	0					
ANR	4560822	Identifier	malloc		4560680	0					
ANR	4560823	ArgumentList	ctx . leftlen		4560680	1					
ANR	4560824	Argument	ctx . leftlen		4560680	0					
ANR	4560825	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560826	Identifier	ctx		4560680	0					
ANR	4560827	Identifier	leftlen		4560680	1					
ANR	4560828	IfStatement	if ( copy )		4560680	1					
ANR	4560829	Condition	copy	47:9:1268:1271	4560680	0	True				
ANR	4560830	Identifier	copy		4560680	0					
ANR	4560831	CompoundStatement		22:15:607:607	4560680	1					
ANR	4560832	ExpressionStatement	"memmove ( copy , ctx . left , ctx . leftlen )"	48:6:1282:1319	4560680	0	True				
ANR	4560833	CallExpression	"memmove ( copy , ctx . left , ctx . leftlen )"		4560680	0					
ANR	4560834	Callee	memmove		4560680	0					
ANR	4560835	Identifier	memmove		4560680	0					
ANR	4560836	ArgumentList	copy		4560680	1					
ANR	4560837	Argument	copy		4560680	0					
ANR	4560838	Identifier	copy		4560680	0					
ANR	4560839	Argument	ctx . left		4560680	1					
ANR	4560840	MemberAccess	ctx . left		4560680	0					
ANR	4560841	Identifier	ctx		4560680	0					
ANR	4560842	Identifier	left		4560680	1					
ANR	4560843	Argument	ctx . leftlen		4560680	2					
ANR	4560844	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560845	Identifier	ctx		4560680	0					
ANR	4560846	Identifier	leftlen		4560680	1					
ANR	4560847	ExpressionStatement	"memmove ( ctx . left , ctx . right , ctx . rightlen )"	49:6:1327:1370	4560680	1	True				
ANR	4560848	CallExpression	"memmove ( ctx . left , ctx . right , ctx . rightlen )"		4560680	0					
ANR	4560849	Callee	memmove		4560680	0					
ANR	4560850	Identifier	memmove		4560680	0					
ANR	4560851	ArgumentList	ctx . left		4560680	1					
ANR	4560852	Argument	ctx . left		4560680	0					
ANR	4560853	MemberAccess	ctx . left		4560680	0					
ANR	4560854	Identifier	ctx		4560680	0					
ANR	4560855	Identifier	left		4560680	1					
ANR	4560856	Argument	ctx . right		4560680	1					
ANR	4560857	MemberAccess	ctx . right		4560680	0					
ANR	4560858	Identifier	ctx		4560680	0					
ANR	4560859	Identifier	right		4560680	1					
ANR	4560860	Argument	ctx . rightlen		4560680	2					
ANR	4560861	MemberAccess	ctx . rightlen		4560680	0					
ANR	4560862	Identifier	ctx		4560680	0					
ANR	4560863	Identifier	rightlen		4560680	1					
ANR	4560864	ExpressionStatement	"memset ( ctx . left + ctx . rightlen , ' ' , ctx . leftlen - ctx . rightlen )"	50:6:1378:1443	4560680	2	True				
ANR	4560865	CallExpression	"memset ( ctx . left + ctx . rightlen , ' ' , ctx . leftlen - ctx . rightlen )"		4560680	0					
ANR	4560866	Callee	memset		4560680	0					
ANR	4560867	Identifier	memset		4560680	0					
ANR	4560868	ArgumentList	ctx . left + ctx . rightlen		4560680	1					
ANR	4560869	Argument	ctx . left + ctx . rightlen		4560680	0					
ANR	4560870	AdditiveExpression	ctx . left + ctx . rightlen		4560680	0		+			
ANR	4560871	MemberAccess	ctx . left		4560680	0					
ANR	4560872	Identifier	ctx		4560680	0					
ANR	4560873	Identifier	left		4560680	1					
ANR	4560874	MemberAccess	ctx . rightlen		4560680	1					
ANR	4560875	Identifier	ctx		4560680	0					
ANR	4560876	Identifier	rightlen		4560680	1					
ANR	4560877	Argument	' '		4560680	1					
ANR	4560878	PrimaryExpression	' '		4560680	0					
ANR	4560879	Argument	ctx . leftlen - ctx . rightlen		4560680	2					
ANR	4560880	AdditiveExpression	ctx . leftlen - ctx . rightlen		4560680	0		-			
ANR	4560881	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560882	Identifier	ctx		4560680	0					
ANR	4560883	Identifier	leftlen		4560680	1					
ANR	4560884	MemberAccess	ctx . rightlen		4560680	1					
ANR	4560885	Identifier	ctx		4560680	0					
ANR	4560886	Identifier	rightlen		4560680	1					
ANR	4560887	ExpressionStatement	"memmove ( ctx . comment - ctx . leftlen + ctx . rightlen , ctx . comment , ctx . right - ctx . comment )"	51:6:1451:1539	4560680	3	True				
ANR	4560888	CallExpression	"memmove ( ctx . comment - ctx . leftlen + ctx . rightlen , ctx . comment , ctx . right - ctx . comment )"		4560680	0					
ANR	4560889	Callee	memmove		4560680	0					
ANR	4560890	Identifier	memmove		4560680	0					
ANR	4560891	ArgumentList	ctx . comment - ctx . leftlen + ctx . rightlen		4560680	1					
ANR	4560892	Argument	ctx . comment - ctx . leftlen + ctx . rightlen		4560680	0					
ANR	4560893	AdditiveExpression	ctx . comment - ctx . leftlen + ctx . rightlen		4560680	0		-			
ANR	4560894	MemberAccess	ctx . comment		4560680	0					
ANR	4560895	Identifier	ctx		4560680	0					
ANR	4560896	Identifier	comment		4560680	1					
ANR	4560897	AdditiveExpression	ctx . leftlen + ctx . rightlen		4560680	1		+			
ANR	4560898	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560899	Identifier	ctx		4560680	0					
ANR	4560900	Identifier	leftlen		4560680	1					
ANR	4560901	MemberAccess	ctx . rightlen		4560680	1					
ANR	4560902	Identifier	ctx		4560680	0					
ANR	4560903	Identifier	rightlen		4560680	1					
ANR	4560904	Argument	ctx . comment		4560680	1					
ANR	4560905	MemberAccess	ctx . comment		4560680	0					
ANR	4560906	Identifier	ctx		4560680	0					
ANR	4560907	Identifier	comment		4560680	1					
ANR	4560908	Argument	ctx . right - ctx . comment		4560680	2					
ANR	4560909	AdditiveExpression	ctx . right - ctx . comment		4560680	0		-			
ANR	4560910	MemberAccess	ctx . right		4560680	0					
ANR	4560911	Identifier	ctx		4560680	0					
ANR	4560912	Identifier	right		4560680	1					
ANR	4560913	MemberAccess	ctx . comment		4560680	1					
ANR	4560914	Identifier	ctx		4560680	0					
ANR	4560915	Identifier	comment		4560680	1					
ANR	4560916	ExpressionStatement	"memmove ( ctx . right - ctx . leftlen + ctx . rightlen , copy , ctx . leftlen )"	52:6:1547:1614	4560680	4	True				
ANR	4560917	CallExpression	"memmove ( ctx . right - ctx . leftlen + ctx . rightlen , copy , ctx . leftlen )"		4560680	0					
ANR	4560918	Callee	memmove		4560680	0					
ANR	4560919	Identifier	memmove		4560680	0					
ANR	4560920	ArgumentList	ctx . right - ctx . leftlen + ctx . rightlen		4560680	1					
ANR	4560921	Argument	ctx . right - ctx . leftlen + ctx . rightlen		4560680	0					
ANR	4560922	AdditiveExpression	ctx . right - ctx . leftlen + ctx . rightlen		4560680	0		-			
ANR	4560923	MemberAccess	ctx . right		4560680	0					
ANR	4560924	Identifier	ctx		4560680	0					
ANR	4560925	Identifier	right		4560680	1					
ANR	4560926	AdditiveExpression	ctx . leftlen + ctx . rightlen		4560680	1		+			
ANR	4560927	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560928	Identifier	ctx		4560680	0					
ANR	4560929	Identifier	leftlen		4560680	1					
ANR	4560930	MemberAccess	ctx . rightlen		4560680	1					
ANR	4560931	Identifier	ctx		4560680	0					
ANR	4560932	Identifier	rightlen		4560680	1					
ANR	4560933	Argument	copy		4560680	1					
ANR	4560934	Identifier	copy		4560680	0					
ANR	4560935	Argument	ctx . leftlen		4560680	2					
ANR	4560936	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560937	Identifier	ctx		4560680	0					
ANR	4560938	Identifier	leftlen		4560680	1					
ANR	4560939	ElseStatement	else		4560680	0					
ANR	4560940	IfStatement	if ( ctx . leftlen < ctx . rightlen )		4560680	0					
ANR	4560941	Condition	ctx . leftlen < ctx . rightlen	54:15:1638:1663	4560680	0	True				
ANR	4560942	RelationalExpression	ctx . leftlen < ctx . rightlen		4560680	0		<			
ANR	4560943	MemberAccess	ctx . leftlen		4560680	0					
ANR	4560944	Identifier	ctx		4560680	0					
ANR	4560945	Identifier	leftlen		4560680	1					
ANR	4560946	MemberAccess	ctx . rightlen		4560680	1					
ANR	4560947	Identifier	ctx		4560680	0					
ANR	4560948	Identifier	rightlen		4560680	1					
ANR	4560949	CompoundStatement		29:43:999:999	4560680	1					
ANR	4560950	IfStatement	if ( ctx . linecount < 1 )		4560680	0					
ANR	4560951	Condition	ctx . linecount < 1	55:9:1677:1693	4560680	0	True				
ANR	4560952	RelationalExpression	ctx . linecount < 1		4560680	0		<			
ANR	4560953	MemberAccess	ctx . linecount		4560680	0					
ANR	4560954	Identifier	ctx		4560680	0					
ANR	4560955	Identifier	linecount		4560680	1					
ANR	4560956	PrimaryExpression	1		4560680	1					
ANR	4560957	CompoundStatement		30:28:1029:1029	4560680	1					
ANR	4560958	ExpressionStatement	copy = ( char * ) malloc ( ctx . rightlen )	56:6:1704:1740	4560680	0	True				
ANR	4560959	AssignmentExpression	copy = ( char * ) malloc ( ctx . rightlen )		4560680	0		=			
ANR	4560960	Identifier	copy		4560680	0					
ANR	4560961	CastExpression	( char * ) malloc ( ctx . rightlen )		4560680	1					
ANR	4560962	CastTarget	char *		4560680	0					
ANR	4560963	CallExpression	malloc ( ctx . rightlen )		4560680	1					
ANR	4560964	Callee	malloc		4560680	0					
ANR	4560965	Identifier	malloc		4560680	0					
ANR	4560966	ArgumentList	ctx . rightlen		4560680	1					
ANR	4560967	Argument	ctx . rightlen		4560680	0					
ANR	4560968	MemberAccess	ctx . rightlen		4560680	0					
ANR	4560969	Identifier	ctx		4560680	0					
ANR	4560970	Identifier	rightlen		4560680	1					
ANR	4560971	IfStatement	if ( copy )		4560680	1					
ANR	4560972	Condition	copy	57:10:1752:1755	4560680	0	True				
ANR	4560973	Identifier	copy		4560680	0					
ANR	4560974	CompoundStatement		32:16:1091:1091	4560680	1					
ANR	4560975	ExpressionStatement	"memcpy ( copy , ctx . right , ctx . rightlen )"	60:7:1842:1880	4560680	0	True				
ANR	4560976	CallExpression	"memcpy ( copy , ctx . right , ctx . rightlen )"		4560680	0					
ANR	4560977	Callee	memcpy		4560680	0					
ANR	4560978	Identifier	memcpy		4560680	0					
ANR	4560979	ArgumentList	copy		4560680	1					
ANR	4560980	Argument	copy		4560680	0					
ANR	4560981	Identifier	copy		4560680	0					
ANR	4560982	Argument	ctx . right		4560680	1					
ANR	4560983	MemberAccess	ctx . right		4560680	0					
ANR	4560984	Identifier	ctx		4560680	0					
ANR	4560985	Identifier	right		4560680	1					
ANR	4560986	Argument	ctx . rightlen		4560680	2					
ANR	4560987	MemberAccess	ctx . rightlen		4560680	0					
ANR	4560988	Identifier	ctx		4560680	0					
ANR	4560989	Identifier	rightlen		4560680	1					
ANR	4560990	ExpressionStatement	"memcpy ( ctx . right + ctx . rightlen - ctx . leftlen , ctx . left , ctx . leftlen )"	62:7:1916:1986	4560680	1	True				
ANR	4560991	CallExpression	"memcpy ( ctx . right + ctx . rightlen - ctx . leftlen , ctx . left , ctx . leftlen )"		4560680	0					
ANR	4560992	Callee	memcpy		4560680	0					
ANR	4560993	Identifier	memcpy		4560680	0					
ANR	4560994	ArgumentList	ctx . right + ctx . rightlen - ctx . leftlen		4560680	1					
ANR	4560995	Argument	ctx . right + ctx . rightlen - ctx . leftlen		4560680	0					
ANR	4560996	AdditiveExpression	ctx . right + ctx . rightlen - ctx . leftlen		4560680	0		+			
ANR	4560997	MemberAccess	ctx . right		4560680	0					
ANR	4560998	Identifier	ctx		4560680	0					
ANR	4560999	Identifier	right		4560680	1					
ANR	4561000	AdditiveExpression	ctx . rightlen - ctx . leftlen		4560680	1		-			
ANR	4561001	MemberAccess	ctx . rightlen		4560680	0					
ANR	4561002	Identifier	ctx		4560680	0					
ANR	4561003	Identifier	rightlen		4560680	1					
ANR	4561004	MemberAccess	ctx . leftlen		4560680	1					
ANR	4561005	Identifier	ctx		4560680	0					
ANR	4561006	Identifier	leftlen		4560680	1					
ANR	4561007	Argument	ctx . left		4560680	1					
ANR	4561008	MemberAccess	ctx . left		4560680	0					
ANR	4561009	Identifier	ctx		4560680	0					
ANR	4561010	Identifier	left		4560680	1					
ANR	4561011	Argument	ctx . leftlen		4560680	2					
ANR	4561012	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561013	Identifier	ctx		4560680	0					
ANR	4561014	Identifier	leftlen		4560680	1					
ANR	4561015	ExpressionStatement	"memmove ( ctx . comment + ctx . rightlen - ctx . leftlen , ctx . comment , ctx . right - ctx . comment )"	63:7:1995:2083	4560680	2	True				
ANR	4561016	CallExpression	"memmove ( ctx . comment + ctx . rightlen - ctx . leftlen , ctx . comment , ctx . right - ctx . comment )"		4560680	0					
ANR	4561017	Callee	memmove		4560680	0					
ANR	4561018	Identifier	memmove		4560680	0					
ANR	4561019	ArgumentList	ctx . comment + ctx . rightlen - ctx . leftlen		4560680	1					
ANR	4561020	Argument	ctx . comment + ctx . rightlen - ctx . leftlen		4560680	0					
ANR	4561021	AdditiveExpression	ctx . comment + ctx . rightlen - ctx . leftlen		4560680	0		+			
ANR	4561022	MemberAccess	ctx . comment		4560680	0					
ANR	4561023	Identifier	ctx		4560680	0					
ANR	4561024	Identifier	comment		4560680	1					
ANR	4561025	AdditiveExpression	ctx . rightlen - ctx . leftlen		4560680	1		-			
ANR	4561026	MemberAccess	ctx . rightlen		4560680	0					
ANR	4561027	Identifier	ctx		4560680	0					
ANR	4561028	Identifier	rightlen		4560680	1					
ANR	4561029	MemberAccess	ctx . leftlen		4560680	1					
ANR	4561030	Identifier	ctx		4560680	0					
ANR	4561031	Identifier	leftlen		4560680	1					
ANR	4561032	Argument	ctx . comment		4560680	1					
ANR	4561033	MemberAccess	ctx . comment		4560680	0					
ANR	4561034	Identifier	ctx		4560680	0					
ANR	4561035	Identifier	comment		4560680	1					
ANR	4561036	Argument	ctx . right - ctx . comment		4560680	2					
ANR	4561037	AdditiveExpression	ctx . right - ctx . comment		4560680	0		-			
ANR	4561038	MemberAccess	ctx . right		4560680	0					
ANR	4561039	Identifier	ctx		4560680	0					
ANR	4561040	Identifier	right		4560680	1					
ANR	4561041	MemberAccess	ctx . comment		4560680	1					
ANR	4561042	Identifier	ctx		4560680	0					
ANR	4561043	Identifier	comment		4560680	1					
ANR	4561044	ExpressionStatement	"memmove ( ctx . left + ctx . rightlen - ctx . leftlen , copy , ctx . rightlen )"	64:7:2092:2159	4560680	3	True				
ANR	4561045	CallExpression	"memmove ( ctx . left + ctx . rightlen - ctx . leftlen , copy , ctx . rightlen )"		4560680	0					
ANR	4561046	Callee	memmove		4560680	0					
ANR	4561047	Identifier	memmove		4560680	0					
ANR	4561048	ArgumentList	ctx . left + ctx . rightlen - ctx . leftlen		4560680	1					
ANR	4561049	Argument	ctx . left + ctx . rightlen - ctx . leftlen		4560680	0					
ANR	4561050	AdditiveExpression	ctx . left + ctx . rightlen - ctx . leftlen		4560680	0		+			
ANR	4561051	MemberAccess	ctx . left		4560680	0					
ANR	4561052	Identifier	ctx		4560680	0					
ANR	4561053	Identifier	left		4560680	1					
ANR	4561054	AdditiveExpression	ctx . rightlen - ctx . leftlen		4560680	1		-			
ANR	4561055	MemberAccess	ctx . rightlen		4560680	0					
ANR	4561056	Identifier	ctx		4560680	0					
ANR	4561057	Identifier	rightlen		4560680	1					
ANR	4561058	MemberAccess	ctx . leftlen		4560680	1					
ANR	4561059	Identifier	ctx		4560680	0					
ANR	4561060	Identifier	leftlen		4560680	1					
ANR	4561061	Argument	copy		4560680	1					
ANR	4561062	Identifier	copy		4560680	0					
ANR	4561063	Argument	ctx . rightlen		4560680	2					
ANR	4561064	MemberAccess	ctx . rightlen		4560680	0					
ANR	4561065	Identifier	ctx		4560680	0					
ANR	4561066	Identifier	rightlen		4560680	1					
ANR	4561067	ElseStatement	else		4560680	0					
ANR	4561068	CompoundStatement		41:12:1514:1514	4560680	0					
ANR	4561069	ExpressionStatement	"memset ( ctx . right - ctx . leftpos , ' ' , ctx . leftpos )"	70:6:2327:2377	4560680	0	True				
ANR	4561070	CallExpression	"memset ( ctx . right - ctx . leftpos , ' ' , ctx . leftpos )"		4560680	0					
ANR	4561071	Callee	memset		4560680	0					
ANR	4561072	Identifier	memset		4560680	0					
ANR	4561073	ArgumentList	ctx . right - ctx . leftpos		4560680	1					
ANR	4561074	Argument	ctx . right - ctx . leftpos		4560680	0					
ANR	4561075	AdditiveExpression	ctx . right - ctx . leftpos		4560680	0		-			
ANR	4561076	MemberAccess	ctx . right		4560680	0					
ANR	4561077	Identifier	ctx		4560680	0					
ANR	4561078	Identifier	right		4560680	1					
ANR	4561079	MemberAccess	ctx . leftpos		4560680	1					
ANR	4561080	Identifier	ctx		4560680	0					
ANR	4561081	Identifier	leftpos		4560680	1					
ANR	4561082	Argument	' '		4560680	1					
ANR	4561083	PrimaryExpression	' '		4560680	0					
ANR	4561084	Argument	ctx . leftpos		4560680	2					
ANR	4561085	MemberAccess	ctx . leftpos		4560680	0					
ANR	4561086	Identifier	ctx		4560680	0					
ANR	4561087	Identifier	leftpos		4560680	1					
ANR	4561088	ExpressionStatement	* ( ctx . right - ctx . leftpos - 1 ) = '\\n'	71:6:2385:2422	4560680	1	True				
ANR	4561089	AssignmentExpression	* ( ctx . right - ctx . leftpos - 1 ) = '\\n'		4560680	0		=			
ANR	4561090	UnaryOperationExpression	* ( ctx . right - ctx . leftpos - 1 )		4560680	0					
ANR	4561091	UnaryOperator	*		4560680	0					
ANR	4561092	AdditiveExpression	ctx . right - ctx . leftpos - 1		4560680	1		-			
ANR	4561093	MemberAccess	ctx . right		4560680	0					
ANR	4561094	Identifier	ctx		4560680	0					
ANR	4561095	Identifier	right		4560680	1					
ANR	4561096	AdditiveExpression	ctx . leftpos - 1		4560680	1		-			
ANR	4561097	MemberAccess	ctx . leftpos		4560680	0					
ANR	4561098	Identifier	ctx		4560680	0					
ANR	4561099	Identifier	leftpos		4560680	1					
ANR	4561100	PrimaryExpression	1		4560680	1					
ANR	4561101	PrimaryExpression	'\\n'		4560680	1					
ANR	4561102	ExpressionStatement	"memset ( ctx . left , ' ' , ctx . leftlen )"	73:6:2497:2532	4560680	2	True				
ANR	4561103	CallExpression	"memset ( ctx . left , ' ' , ctx . leftlen )"		4560680	0					
ANR	4561104	Callee	memset		4560680	0					
ANR	4561105	Identifier	memset		4560680	0					
ANR	4561106	ArgumentList	ctx . left		4560680	1					
ANR	4561107	Argument	ctx . left		4560680	0					
ANR	4561108	MemberAccess	ctx . left		4560680	0					
ANR	4561109	Identifier	ctx		4560680	0					
ANR	4561110	Identifier	left		4560680	1					
ANR	4561111	Argument	' '		4560680	1					
ANR	4561112	PrimaryExpression	' '		4560680	0					
ANR	4561113	Argument	ctx . leftlen		4560680	2					
ANR	4561114	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561115	Identifier	ctx		4560680	0					
ANR	4561116	Identifier	leftlen		4560680	1					
ANR	4561117	ExpressionStatement	"memset ( ctx . linebegin - ctx . leftlen , ' ' , ctx . leftlen )"	74:6:2540:2594	4560680	3	True				
ANR	4561118	CallExpression	"memset ( ctx . linebegin - ctx . leftlen , ' ' , ctx . leftlen )"		4560680	0					
ANR	4561119	Callee	memset		4560680	0					
ANR	4561120	Identifier	memset		4560680	0					
ANR	4561121	ArgumentList	ctx . linebegin - ctx . leftlen		4560680	1					
ANR	4561122	Argument	ctx . linebegin - ctx . leftlen		4560680	0					
ANR	4561123	AdditiveExpression	ctx . linebegin - ctx . leftlen		4560680	0		-			
ANR	4561124	MemberAccess	ctx . linebegin		4560680	0					
ANR	4561125	Identifier	ctx		4560680	0					
ANR	4561126	Identifier	linebegin		4560680	1					
ANR	4561127	MemberAccess	ctx . leftlen		4560680	1					
ANR	4561128	Identifier	ctx		4560680	0					
ANR	4561129	Identifier	leftlen		4560680	1					
ANR	4561130	Argument	' '		4560680	1					
ANR	4561131	PrimaryExpression	' '		4560680	0					
ANR	4561132	Argument	ctx . leftlen		4560680	2					
ANR	4561133	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561134	Identifier	ctx		4560680	0					
ANR	4561135	Identifier	leftlen		4560680	1					
ANR	4561136	ElseStatement	else		4560680	0					
ANR	4561137	IfStatement	if ( ctx . leftlen == ctx . rightlen )		4560680	0					
ANR	4561138	Condition	ctx . leftlen == ctx . rightlen	77:15:2628:2654	4560680	0	True				
ANR	4561139	EqualityExpression	ctx . leftlen == ctx . rightlen		4560680	0		==			
ANR	4561140	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561141	Identifier	ctx		4560680	0					
ANR	4561142	Identifier	leftlen		4560680	1					
ANR	4561143	MemberAccess	ctx . rightlen		4560680	1					
ANR	4561144	Identifier	ctx		4560680	0					
ANR	4561145	Identifier	rightlen		4560680	1					
ANR	4561146	CompoundStatement		52:44:1990:1990	4560680	1					
ANR	4561147	ExpressionStatement	copy = ( char * ) malloc ( ctx . leftlen )	78:5:2664:2699	4560680	0	True				
ANR	4561148	AssignmentExpression	copy = ( char * ) malloc ( ctx . leftlen )		4560680	0		=			
ANR	4561149	Identifier	copy		4560680	0					
ANR	4561150	CastExpression	( char * ) malloc ( ctx . leftlen )		4560680	1					
ANR	4561151	CastTarget	char *		4560680	0					
ANR	4561152	CallExpression	malloc ( ctx . leftlen )		4560680	1					
ANR	4561153	Callee	malloc		4560680	0					
ANR	4561154	Identifier	malloc		4560680	0					
ANR	4561155	ArgumentList	ctx . leftlen		4560680	1					
ANR	4561156	Argument	ctx . leftlen		4560680	0					
ANR	4561157	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561158	Identifier	ctx		4560680	0					
ANR	4561159	Identifier	leftlen		4560680	1					
ANR	4561160	IfStatement	if ( copy )		4560680	1					
ANR	4561161	Condition	copy	79:9:2710:2713	4560680	0	True				
ANR	4561162	Identifier	copy		4560680	0					
ANR	4561163	CompoundStatement		54:15:2049:2049	4560680	1					
ANR	4561164	ExpressionStatement	"memcpy ( copy , ctx . right , ctx . leftlen )"	80:6:2724:2761	4560680	0	True				
ANR	4561165	CallExpression	"memcpy ( copy , ctx . right , ctx . leftlen )"		4560680	0					
ANR	4561166	Callee	memcpy		4560680	0					
ANR	4561167	Identifier	memcpy		4560680	0					
ANR	4561168	ArgumentList	copy		4560680	1					
ANR	4561169	Argument	copy		4560680	0					
ANR	4561170	Identifier	copy		4560680	0					
ANR	4561171	Argument	ctx . right		4560680	1					
ANR	4561172	MemberAccess	ctx . right		4560680	0					
ANR	4561173	Identifier	ctx		4560680	0					
ANR	4561174	Identifier	right		4560680	1					
ANR	4561175	Argument	ctx . leftlen		4560680	2					
ANR	4561176	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561177	Identifier	ctx		4560680	0					
ANR	4561178	Identifier	leftlen		4560680	1					
ANR	4561179	ExpressionStatement	"memcpy ( ctx . right , ctx . left , ctx . leftlen )"	81:6:2769:2810	4560680	1	True				
ANR	4561180	CallExpression	"memcpy ( ctx . right , ctx . left , ctx . leftlen )"		4560680	0					
ANR	4561181	Callee	memcpy		4560680	0					
ANR	4561182	Identifier	memcpy		4560680	0					
ANR	4561183	ArgumentList	ctx . right		4560680	1					
ANR	4561184	Argument	ctx . right		4560680	0					
ANR	4561185	MemberAccess	ctx . right		4560680	0					
ANR	4561186	Identifier	ctx		4560680	0					
ANR	4561187	Identifier	right		4560680	1					
ANR	4561188	Argument	ctx . left		4560680	1					
ANR	4561189	MemberAccess	ctx . left		4560680	0					
ANR	4561190	Identifier	ctx		4560680	0					
ANR	4561191	Identifier	left		4560680	1					
ANR	4561192	Argument	ctx . leftlen		4560680	2					
ANR	4561193	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561194	Identifier	ctx		4560680	0					
ANR	4561195	Identifier	leftlen		4560680	1					
ANR	4561196	ExpressionStatement	"memcpy ( ctx . left , copy , ctx . leftlen )"	82:6:2818:2854	4560680	2	True				
ANR	4561197	CallExpression	"memcpy ( ctx . left , copy , ctx . leftlen )"		4560680	0					
ANR	4561198	Callee	memcpy		4560680	0					
ANR	4561199	Identifier	memcpy		4560680	0					
ANR	4561200	ArgumentList	ctx . left		4560680	1					
ANR	4561201	Argument	ctx . left		4560680	0					
ANR	4561202	MemberAccess	ctx . left		4560680	0					
ANR	4561203	Identifier	ctx		4560680	0					
ANR	4561204	Identifier	left		4560680	1					
ANR	4561205	Argument	copy		4560680	1					
ANR	4561206	Identifier	copy		4560680	0					
ANR	4561207	Argument	ctx . leftlen		4560680	2					
ANR	4561208	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561209	Identifier	ctx		4560680	0					
ANR	4561210	Identifier	leftlen		4560680	1					
ANR	4561211	ExpressionStatement	free ( copy )	85:4:2873:2884	4560680	2	True				
ANR	4561212	CallExpression	free ( copy )		4560680	0					
ANR	4561213	Callee	free		4560680	0					
ANR	4561214	Identifier	free		4560680	0					
ANR	4561215	ArgumentList	copy		4560680	1					
ANR	4561216	Argument	copy		4560680	0					
ANR	4561217	Identifier	copy		4560680	0					
ANR	4561218	ExpressionStatement	"memset ( & ctx , 0 , sizeof ( ctx ) )"	87:3:2894:2924	4560680	2	True				
ANR	4561219	CallExpression	"memset ( & ctx , 0 , sizeof ( ctx ) )"		4560680	0					
ANR	4561220	Callee	memset		4560680	0					
ANR	4561221	Identifier	memset		4560680	0					
ANR	4561222	ArgumentList	& ctx		4560680	1					
ANR	4561223	Argument	& ctx		4560680	0					
ANR	4561224	UnaryOperationExpression	& ctx		4560680	0					
ANR	4561225	UnaryOperator	&		4560680	0					
ANR	4561226	Identifier	ctx		4560680	1					
ANR	4561227	Argument	0		4560680	1					
ANR	4561228	PrimaryExpression	0		4560680	0					
ANR	4561229	Argument	sizeof ( ctx )		4560680	2					
ANR	4561230	SizeofExpression	sizeof ( ctx )		4560680	0					
ANR	4561231	Sizeof	sizeof		4560680	0					
ANR	4561232	SizeofOperand	ctx		4560680	1					
ANR	4561233	ExpressionStatement	ctx . linebegin = in + 1	88:3:2929:2951	4560680	3	True				
ANR	4561234	AssignmentExpression	ctx . linebegin = in + 1		4560680	0		=			
ANR	4561235	MemberAccess	ctx . linebegin		4560680	0					
ANR	4561236	Identifier	ctx		4560680	0					
ANR	4561237	Identifier	linebegin		4560680	1					
ANR	4561238	AdditiveExpression	in + 1		4560680	1		+			
ANR	4561239	Identifier	in		4560680	0					
ANR	4561240	PrimaryExpression	1		4560680	1					
ANR	4561241	ElseStatement	else		4560680	0					
ANR	4561242	IfStatement	if ( ! ctx . comment && * in == ';' && in [ 1 ] == ' ' )		4560680	0					
ANR	4561243	Condition	! ctx . comment && * in == ';' && in [ 1 ] == ' '	89:13:2966:3007	4560680	0	True				
ANR	4561244	AndExpression	! ctx . comment && * in == ';' && in [ 1 ] == ' '		4560680	0		&&			
ANR	4561245	UnaryOperationExpression	! ctx . comment		4560680	0					
ANR	4561246	UnaryOperator	!		4560680	0					
ANR	4561247	MemberAccess	ctx . comment		4560680	1					
ANR	4561248	Identifier	ctx		4560680	0					
ANR	4561249	Identifier	comment		4560680	1					
ANR	4561250	AndExpression	* in == ';' && in [ 1 ] == ' '		4560680	1		&&			
ANR	4561251	EqualityExpression	* in == ';'		4560680	0		==			
ANR	4561252	UnaryOperationExpression	* in		4560680	0					
ANR	4561253	UnaryOperator	*		4560680	0					
ANR	4561254	Identifier	in		4560680	1					
ANR	4561255	PrimaryExpression	';'		4560680	1					
ANR	4561256	EqualityExpression	in [ 1 ] == ' '		4560680	1		==			
ANR	4561257	ArrayIndexing	in [ 1 ]		4560680	0					
ANR	4561258	Identifier	in		4560680	0					
ANR	4561259	PrimaryExpression	1		4560680	1					
ANR	4561260	PrimaryExpression	' '		4560680	1					
ANR	4561261	CompoundStatement		64:57:2343:2343	4560680	1					
ANR	4561262	ExpressionStatement	ctx . comment = in - 1	90:3:3015:3035	4560680	0	True				
ANR	4561263	AssignmentExpression	ctx . comment = in - 1		4560680	0		=			
ANR	4561264	MemberAccess	ctx . comment		4560680	0					
ANR	4561265	Identifier	ctx		4560680	0					
ANR	4561266	Identifier	comment		4560680	1					
ANR	4561267	AdditiveExpression	in - 1		4560680	1		-			
ANR	4561268	Identifier	in		4560680	0					
ANR	4561269	PrimaryExpression	1		4560680	1					
ANR	4561270	ExpressionStatement	ctx . comment [ 1 ] = '/'	91:3:3040:3060	4560680	1	True				
ANR	4561271	AssignmentExpression	ctx . comment [ 1 ] = '/'		4560680	0		=			
ANR	4561272	ArrayIndexing	ctx . comment [ 1 ]		4560680	0					
ANR	4561273	MemberAccess	ctx . comment		4560680	0					
ANR	4561274	Identifier	ctx		4560680	0					
ANR	4561275	Identifier	comment		4560680	1					
ANR	4561276	PrimaryExpression	1		4560680	1					
ANR	4561277	PrimaryExpression	'/'		4560680	1					
ANR	4561278	ExpressionStatement	ctx . comment [ 2 ] = '/'	92:3:3065:3085	4560680	2	True				
ANR	4561279	AssignmentExpression	ctx . comment [ 2 ] = '/'		4560680	0		=			
ANR	4561280	ArrayIndexing	ctx . comment [ 2 ]		4560680	0					
ANR	4561281	MemberAccess	ctx . comment		4560680	0					
ANR	4561282	Identifier	ctx		4560680	0					
ANR	4561283	Identifier	comment		4560680	1					
ANR	4561284	PrimaryExpression	2		4560680	1					
ANR	4561285	PrimaryExpression	'/'		4560680	1					
ANR	4561286	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) ) )		4560680	3					
ANR	4561287	Condition	! IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) )	93:10:3097:3146	4560680	0	True				
ANR	4561288	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) )		4560680	0					
ANR	4561289	UnaryOperator	!		4560680	0					
ANR	4561290	CallExpression	IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) )		4560680	1					
ANR	4561291	Callee	IS_WHITESPACE		4560680	0					
ANR	4561292	Identifier	IS_WHITESPACE		4560680	0					
ANR	4561293	ArgumentList	* ( ctx . comment - ctx . commentcolor )		4560680	1					
ANR	4561294	Argument	* ( ctx . comment - ctx . commentcolor )		4560680	0					
ANR	4561295	UnaryOperationExpression	* ( ctx . comment - ctx . commentcolor )		4560680	0					
ANR	4561296	UnaryOperator	*		4560680	0					
ANR	4561297	AdditiveExpression	ctx . comment - ctx . commentcolor		4560680	1		-			
ANR	4561298	MemberAccess	ctx . comment		4560680	0					
ANR	4561299	Identifier	ctx		4560680	0					
ANR	4561300	Identifier	comment		4560680	1					
ANR	4561301	MemberAccess	ctx . commentcolor		4560680	1					
ANR	4561302	Identifier	ctx		4560680	0					
ANR	4561303	Identifier	commentcolor		4560680	1					
ANR	4561304	CompoundStatement		68:62:2482:2482	4560680	1					
ANR	4561305	ExpressionStatement	ctx . commentcolor ++	94:4:3155:3173	4560680	0	True				
ANR	4561306	PostIncDecOperationExpression	ctx . commentcolor ++		4560680	0					
ANR	4561307	MemberAccess	ctx . commentcolor		4560680	0					
ANR	4561308	Identifier	ctx		4560680	0					
ANR	4561309	Identifier	commentcolor		4560680	1					
ANR	4561310	IncDec	++		4560680	1					
ANR	4561311	ExpressionStatement	ctx . commentcolor --	96:3:3183:3201	4560680	4	True				
ANR	4561312	PostIncDecOperationExpression	ctx . commentcolor --		4560680	0					
ANR	4561313	MemberAccess	ctx . commentcolor		4560680	0					
ANR	4561314	Identifier	ctx		4560680	0					
ANR	4561315	Identifier	commentcolor		4560680	1					
ANR	4561316	IncDec	--		4560680	1					
ANR	4561317	ElseStatement	else		4560680	0					
ANR	4561318	IfStatement	if ( ! ctx . comment && ctx . type == TYPE_NONE )		4560680	0					
ANR	4561319	Condition	! ctx . comment && ctx . type == TYPE_NONE	97:13:3216:3252	4560680	0	True				
ANR	4561320	AndExpression	! ctx . comment && ctx . type == TYPE_NONE		4560680	0		&&			
ANR	4561321	UnaryOperationExpression	! ctx . comment		4560680	0					
ANR	4561322	UnaryOperator	!		4560680	0					
ANR	4561323	MemberAccess	ctx . comment		4560680	1					
ANR	4561324	Identifier	ctx		4560680	0					
ANR	4561325	Identifier	comment		4560680	1					
ANR	4561326	EqualityExpression	ctx . type == TYPE_NONE		4560680	1		==			
ANR	4561327	MemberAccess	ctx . type		4560680	0					
ANR	4561328	Identifier	ctx		4560680	0					
ANR	4561329	Identifier	type		4560680	1					
ANR	4561330	Identifier	TYPE_NONE		4560680	1					
ANR	4561331	CompoundStatement		72:52:2588:2588	4560680	1					
ANR	4561332	IfStatement	"if ( IS_STRING ( in , ctx ) )"		4560680	0					
ANR	4561333	Condition	"IS_STRING ( in , ctx )"	98:7:3264:3282	4560680	0	True				
ANR	4561334	CallExpression	"IS_STRING ( in , ctx )"		4560680	0					
ANR	4561335	Callee	IS_STRING		4560680	0					
ANR	4561336	Identifier	IS_STRING		4560680	0					
ANR	4561337	ArgumentList	in		4560680	1					
ANR	4561338	Argument	in		4560680	0					
ANR	4561339	Identifier	in		4560680	0					
ANR	4561340	Argument	ctx		4560680	1					
ANR	4561341	Identifier	ctx		4560680	0					
ANR	4561342	CompoundStatement		73:28:2618:2618	4560680	1					
ANR	4561343	ExpressionStatement	ctx . type = TYPE_STR	99:4:3291:3310	4560680	0	True				
ANR	4561344	AssignmentExpression	ctx . type = TYPE_STR		4560680	0		=			
ANR	4561345	MemberAccess	ctx . type		4560680	0					
ANR	4561346	Identifier	ctx		4560680	0					
ANR	4561347	Identifier	type		4560680	1					
ANR	4561348	Identifier	TYPE_STR		4560680	1					
ANR	4561349	ExpressionStatement	ctx . left = in	100:4:3316:3329	4560680	1	True				
ANR	4561350	AssignmentExpression	ctx . left = in		4560680	0		=			
ANR	4561351	MemberAccess	ctx . left		4560680	0					
ANR	4561352	Identifier	ctx		4560680	0					
ANR	4561353	Identifier	left		4560680	1					
ANR	4561354	Identifier	in		4560680	1					
ANR	4561355	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) ) )		4560680	2					
ANR	4561356	Condition	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )	101:11:3342:3385	4560680	0	True				
ANR	4561357	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		4560680	0					
ANR	4561358	UnaryOperator	!		4560680	0					
ANR	4561359	CallExpression	IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		4560680	1					
ANR	4561360	Callee	IS_WHITESPACE		4560680	0					
ANR	4561361	Identifier	IS_WHITESPACE		4560680	0					
ANR	4561362	ArgumentList	* ( ctx . left - ctx . leftcolor )		4560680	1					
ANR	4561363	Argument	* ( ctx . left - ctx . leftcolor )		4560680	0					
ANR	4561364	UnaryOperationExpression	* ( ctx . left - ctx . leftcolor )		4560680	0					
ANR	4561365	UnaryOperator	*		4560680	0					
ANR	4561366	AdditiveExpression	ctx . left - ctx . leftcolor		4560680	1		-			
ANR	4561367	MemberAccess	ctx . left		4560680	0					
ANR	4561368	Identifier	ctx		4560680	0					
ANR	4561369	Identifier	left		4560680	1					
ANR	4561370	MemberAccess	ctx . leftcolor		4560680	1					
ANR	4561371	Identifier	ctx		4560680	0					
ANR	4561372	Identifier	leftcolor		4560680	1					
ANR	4561373	CompoundStatement		76:57:2721:2721	4560680	1					
ANR	4561374	ExpressionStatement	ctx . leftcolor ++	102:5:3395:3410	4560680	0	True				
ANR	4561375	PostIncDecOperationExpression	ctx . leftcolor ++		4560680	0					
ANR	4561376	MemberAccess	ctx . leftcolor		4560680	0					
ANR	4561377	Identifier	ctx		4560680	0					
ANR	4561378	Identifier	leftcolor		4560680	1					
ANR	4561379	IncDec	++		4560680	1					
ANR	4561380	ExpressionStatement	ctx . leftcolor --	104:4:3422:3437	4560680	3	True				
ANR	4561381	PostIncDecOperationExpression	ctx . leftcolor --		4560680	0					
ANR	4561382	MemberAccess	ctx . leftcolor		4560680	0					
ANR	4561383	Identifier	ctx		4560680	0					
ANR	4561384	Identifier	leftcolor		4560680	1					
ANR	4561385	IncDec	--		4560680	1					
ANR	4561386	ExpressionStatement	ctx . leftpos = ctx . left - ctx . linebegin	105:4:3443:3481	4560680	4	True				
ANR	4561387	AssignmentExpression	ctx . leftpos = ctx . left - ctx . linebegin		4560680	0		=			
ANR	4561388	MemberAccess	ctx . leftpos		4560680	0					
ANR	4561389	Identifier	ctx		4560680	0					
ANR	4561390	Identifier	leftpos		4560680	1					
ANR	4561391	AdditiveExpression	ctx . left - ctx . linebegin		4560680	1		-			
ANR	4561392	MemberAccess	ctx . left		4560680	0					
ANR	4561393	Identifier	ctx		4560680	0					
ANR	4561394	Identifier	left		4560680	1					
ANR	4561395	MemberAccess	ctx . linebegin		4560680	1					
ANR	4561396	Identifier	ctx		4560680	0					
ANR	4561397	Identifier	linebegin		4560680	1					
ANR	4561398	ElseStatement	else		4560680	0					
ANR	4561399	IfStatement	"if ( IS_SYMBOL ( in , ctx ) )"		4560680	0					
ANR	4561400	Condition	"IS_SYMBOL ( in , ctx )"	106:14:3497:3515	4560680	0	True				
ANR	4561401	CallExpression	"IS_SYMBOL ( in , ctx )"		4560680	0					
ANR	4561402	Callee	IS_SYMBOL		4560680	0					
ANR	4561403	Identifier	IS_SYMBOL		4560680	0					
ANR	4561404	ArgumentList	in		4560680	1					
ANR	4561405	Argument	in		4560680	0					
ANR	4561406	Identifier	in		4560680	0					
ANR	4561407	Argument	ctx		4560680	1					
ANR	4561408	Identifier	ctx		4560680	0					
ANR	4561409	CompoundStatement		81:35:2851:2851	4560680	1					
ANR	4561410	ExpressionStatement	ctx . type = TYPE_SYM	107:4:3524:3543	4560680	0	True				
ANR	4561411	AssignmentExpression	ctx . type = TYPE_SYM		4560680	0		=			
ANR	4561412	MemberAccess	ctx . type		4560680	0					
ANR	4561413	Identifier	ctx		4560680	0					
ANR	4561414	Identifier	type		4560680	1					
ANR	4561415	Identifier	TYPE_SYM		4560680	1					
ANR	4561416	ExpressionStatement	ctx . left = in	108:4:3549:3562	4560680	1	True				
ANR	4561417	AssignmentExpression	ctx . left = in		4560680	0		=			
ANR	4561418	MemberAccess	ctx . left		4560680	0					
ANR	4561419	Identifier	ctx		4560680	0					
ANR	4561420	Identifier	left		4560680	1					
ANR	4561421	Identifier	in		4560680	1					
ANR	4561422	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) ) )		4560680	2					
ANR	4561423	Condition	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )	109:11:3575:3618	4560680	0	True				
ANR	4561424	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		4560680	0					
ANR	4561425	UnaryOperator	!		4560680	0					
ANR	4561426	CallExpression	IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		4560680	1					
ANR	4561427	Callee	IS_WHITESPACE		4560680	0					
ANR	4561428	Identifier	IS_WHITESPACE		4560680	0					
ANR	4561429	ArgumentList	* ( ctx . left - ctx . leftcolor )		4560680	1					
ANR	4561430	Argument	* ( ctx . left - ctx . leftcolor )		4560680	0					
ANR	4561431	UnaryOperationExpression	* ( ctx . left - ctx . leftcolor )		4560680	0					
ANR	4561432	UnaryOperator	*		4560680	0					
ANR	4561433	AdditiveExpression	ctx . left - ctx . leftcolor		4560680	1		-			
ANR	4561434	MemberAccess	ctx . left		4560680	0					
ANR	4561435	Identifier	ctx		4560680	0					
ANR	4561436	Identifier	left		4560680	1					
ANR	4561437	MemberAccess	ctx . leftcolor		4560680	1					
ANR	4561438	Identifier	ctx		4560680	0					
ANR	4561439	Identifier	leftcolor		4560680	1					
ANR	4561440	CompoundStatement		84:57:2954:2954	4560680	1					
ANR	4561441	ExpressionStatement	ctx . leftcolor ++	110:5:3628:3643	4560680	0	True				
ANR	4561442	PostIncDecOperationExpression	ctx . leftcolor ++		4560680	0					
ANR	4561443	MemberAccess	ctx . leftcolor		4560680	0					
ANR	4561444	Identifier	ctx		4560680	0					
ANR	4561445	Identifier	leftcolor		4560680	1					
ANR	4561446	IncDec	++		4560680	1					
ANR	4561447	ExpressionStatement	ctx . leftcolor --	112:4:3655:3670	4560680	3	True				
ANR	4561448	PostIncDecOperationExpression	ctx . leftcolor --		4560680	0					
ANR	4561449	MemberAccess	ctx . leftcolor		4560680	0					
ANR	4561450	Identifier	ctx		4560680	0					
ANR	4561451	Identifier	leftcolor		4560680	1					
ANR	4561452	IncDec	--		4560680	1					
ANR	4561453	ExpressionStatement	ctx . leftpos = ctx . left - ctx . linebegin	113:4:3676:3714	4560680	4	True				
ANR	4561454	AssignmentExpression	ctx . leftpos = ctx . left - ctx . linebegin		4560680	0		=			
ANR	4561455	MemberAccess	ctx . leftpos		4560680	0					
ANR	4561456	Identifier	ctx		4560680	0					
ANR	4561457	Identifier	leftpos		4560680	1					
ANR	4561458	AdditiveExpression	ctx . left - ctx . linebegin		4560680	1		-			
ANR	4561459	MemberAccess	ctx . left		4560680	0					
ANR	4561460	Identifier	ctx		4560680	0					
ANR	4561461	Identifier	left		4560680	1					
ANR	4561462	MemberAccess	ctx . linebegin		4560680	1					
ANR	4561463	Identifier	ctx		4560680	0					
ANR	4561464	Identifier	linebegin		4560680	1					
ANR	4561465	ElseStatement	else		4560680	0					
ANR	4561466	IfStatement	if ( ctx . type == TYPE_STR )		4560680	0					
ANR	4561467	Condition	ctx . type == TYPE_STR	115:13:3734:3753	4560680	0	True				
ANR	4561468	EqualityExpression	ctx . type == TYPE_STR		4560680	0		==			
ANR	4561469	MemberAccess	ctx . type		4560680	0					
ANR	4561470	Identifier	ctx		4560680	0					
ANR	4561471	Identifier	type		4560680	1					
ANR	4561472	Identifier	TYPE_STR		4560680	1					
ANR	4561473	CompoundStatement		90:35:3089:3089	4560680	1					
ANR	4561474	IfStatement	if ( ! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in ) )		4560680	0					
ANR	4561475	Condition	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )	116:7:3765:3811	4560680	0	True				
ANR	4561476	AndExpression	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )		4560680	0		&&			
ANR	4561477	UnaryOperationExpression	! ctx . leftlen		4560680	0					
ANR	4561478	UnaryOperator	!		4560680	0					
ANR	4561479	MemberAccess	ctx . leftlen		4560680	1					
ANR	4561480	Identifier	ctx		4560680	0					
ANR	4561481	Identifier	leftlen		4560680	1					
ANR	4561482	AndExpression	ctx . left && IS_WHITESPACE ( * in )		4560680	1		&&			
ANR	4561483	MemberAccess	ctx . left		4560680	0					
ANR	4561484	Identifier	ctx		4560680	0					
ANR	4561485	Identifier	left		4560680	1					
ANR	4561486	CallExpression	IS_WHITESPACE ( * in )		4560680	1					
ANR	4561487	Callee	IS_WHITESPACE		4560680	0					
ANR	4561488	Identifier	IS_WHITESPACE		4560680	0					
ANR	4561489	ArgumentList	* in		4560680	1					
ANR	4561490	Argument	* in		4560680	0					
ANR	4561491	UnaryOperationExpression	* in		4560680	0					
ANR	4561492	UnaryOperator	*		4560680	0					
ANR	4561493	Identifier	in		4560680	1					
ANR	4561494	CompoundStatement		91:56:3147:3147	4560680	1					
ANR	4561495	ExpressionStatement	ctx . leftlen = in - ctx . left	117:4:3820:3847	4560680	0	True				
ANR	4561496	AssignmentExpression	ctx . leftlen = in - ctx . left		4560680	0		=			
ANR	4561497	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561498	Identifier	ctx		4560680	0					
ANR	4561499	Identifier	leftlen		4560680	1					
ANR	4561500	AdditiveExpression	in - ctx . left		4560680	1		-			
ANR	4561501	Identifier	in		4560680	0					
ANR	4561502	MemberAccess	ctx . left		4560680	1					
ANR	4561503	Identifier	ctx		4560680	0					
ANR	4561504	Identifier	left		4560680	1					
ANR	4561505	ElseStatement	else		4560680	0					
ANR	4561506	IfStatement	"if ( ctx . comment && * in == '""' && in [ - 1 ] != '\\\\' )"		4560680	0					
ANR	4561507	Condition	"ctx . comment && * in == '""' && in [ - 1 ] != '\\\\'"	118:14:3863:3905	4560680	0	True				
ANR	4561508	AndExpression	"ctx . comment && * in == '""' && in [ - 1 ] != '\\\\'"		4560680	0		&&			
ANR	4561509	MemberAccess	ctx . comment		4560680	0					
ANR	4561510	Identifier	ctx		4560680	0					
ANR	4561511	Identifier	comment		4560680	1					
ANR	4561512	AndExpression	"* in == '""' && in [ - 1 ] != '\\\\'"		4560680	1		&&			
ANR	4561513	EqualityExpression	"* in == '""'"		4560680	0		==			
ANR	4561514	UnaryOperationExpression	* in		4560680	0					
ANR	4561515	UnaryOperator	*		4560680	0					
ANR	4561516	Identifier	in		4560680	1					
ANR	4561517	PrimaryExpression	"'""'"		4560680	1					
ANR	4561518	EqualityExpression	in [ - 1 ] != '\\\\'		4560680	1		!=			
ANR	4561519	ArrayIndexing	in [ - 1 ]		4560680	0					
ANR	4561520	Identifier	in		4560680	0					
ANR	4561521	UnaryOperationExpression	- 1		4560680	1					
ANR	4561522	UnaryOperator	-		4560680	0					
ANR	4561523	PrimaryExpression	1		4560680	1					
ANR	4561524	PrimaryExpression	'\\\\'		4560680	1					
ANR	4561525	CompoundStatement		93:59:3241:3241	4560680	1					
ANR	4561526	IfStatement	if ( ! ctx . right )		4560680	0					
ANR	4561527	Condition	! ctx . right	119:8:3918:3927	4560680	0	True				
ANR	4561528	UnaryOperationExpression	! ctx . right		4560680	0					
ANR	4561529	UnaryOperator	!		4560680	0					
ANR	4561530	MemberAccess	ctx . right		4560680	1					
ANR	4561531	Identifier	ctx		4560680	0					
ANR	4561532	Identifier	right		4560680	1					
ANR	4561533	CompoundStatement		94:20:3263:3263	4560680	1					
ANR	4561534	ExpressionStatement	ctx . right = in	120:5:3937:3951	4560680	0	True				
ANR	4561535	AssignmentExpression	ctx . right = in		4560680	0		=			
ANR	4561536	MemberAccess	ctx . right		4560680	0					
ANR	4561537	Identifier	ctx		4560680	0					
ANR	4561538	Identifier	right		4560680	1					
ANR	4561539	Identifier	in		4560680	1					
ANR	4561540	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) ) )		4560680	1					
ANR	4561541	Condition	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )	121:12:3965:4010	4560680	0	True				
ANR	4561542	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		4560680	0					
ANR	4561543	UnaryOperator	!		4560680	0					
ANR	4561544	CallExpression	IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		4560680	1					
ANR	4561545	Callee	IS_WHITESPACE		4560680	0					
ANR	4561546	Identifier	IS_WHITESPACE		4560680	0					
ANR	4561547	ArgumentList	* ( ctx . right - ctx . rightcolor )		4560680	1					
ANR	4561548	Argument	* ( ctx . right - ctx . rightcolor )		4560680	0					
ANR	4561549	UnaryOperationExpression	* ( ctx . right - ctx . rightcolor )		4560680	0					
ANR	4561550	UnaryOperator	*		4560680	0					
ANR	4561551	AdditiveExpression	ctx . right - ctx . rightcolor		4560680	1		-			
ANR	4561552	MemberAccess	ctx . right		4560680	0					
ANR	4561553	Identifier	ctx		4560680	0					
ANR	4561554	Identifier	right		4560680	1					
ANR	4561555	MemberAccess	ctx . rightcolor		4560680	1					
ANR	4561556	Identifier	ctx		4560680	0					
ANR	4561557	Identifier	rightcolor		4560680	1					
ANR	4561558	CompoundStatement		96:60:3346:3346	4560680	1					
ANR	4561559	ExpressionStatement	ctx . rightcolor ++	122:6:4021:4037	4560680	0	True				
ANR	4561560	PostIncDecOperationExpression	ctx . rightcolor ++		4560680	0					
ANR	4561561	MemberAccess	ctx . rightcolor		4560680	0					
ANR	4561562	Identifier	ctx		4560680	0					
ANR	4561563	Identifier	rightcolor		4560680	1					
ANR	4561564	IncDec	++		4560680	1					
ANR	4561565	ExpressionStatement	ctx . rightcolor --	124:5:4051:4067	4560680	2	True				
ANR	4561566	PostIncDecOperationExpression	ctx . rightcolor --		4560680	0					
ANR	4561567	MemberAccess	ctx . rightcolor		4560680	0					
ANR	4561568	Identifier	ctx		4560680	0					
ANR	4561569	Identifier	rightcolor		4560680	1					
ANR	4561570	IncDec	--		4560680	1					
ANR	4561571	ElseStatement	else		4560680	0					
ANR	4561572	CompoundStatement		100:11:3413:3413	4560680	0					
ANR	4561573	ExpressionStatement	ctx . rightlen = in - ctx . right + 1	126:5:4087:4120	4560680	0	True				
ANR	4561574	AssignmentExpression	ctx . rightlen = in - ctx . right + 1		4560680	0		=			
ANR	4561575	MemberAccess	ctx . rightlen		4560680	0					
ANR	4561576	Identifier	ctx		4560680	0					
ANR	4561577	Identifier	rightlen		4560680	1					
ANR	4561578	AdditiveExpression	in - ctx . right + 1		4560680	1		-			
ANR	4561579	Identifier	in		4560680	0					
ANR	4561580	AdditiveExpression	ctx . right + 1		4560680	1		+			
ANR	4561581	MemberAccess	ctx . right		4560680	0					
ANR	4561582	Identifier	ctx		4560680	0					
ANR	4561583	Identifier	right		4560680	1					
ANR	4561584	PrimaryExpression	1		4560680	1					
ANR	4561585	ElseStatement	else		4560680	0					
ANR	4561586	IfStatement	if ( ctx . type == TYPE_SYM )		4560680	0					
ANR	4561587	Condition	ctx . type == TYPE_SYM	129:13:4146:4165	4560680	0	True				
ANR	4561588	EqualityExpression	ctx . type == TYPE_SYM		4560680	0		==			
ANR	4561589	MemberAccess	ctx . type		4560680	0					
ANR	4561590	Identifier	ctx		4560680	0					
ANR	4561591	Identifier	type		4560680	1					
ANR	4561592	Identifier	TYPE_SYM		4560680	1					
ANR	4561593	CompoundStatement		104:35:3501:3501	4560680	1					
ANR	4561594	IfStatement	if ( ! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in ) )		4560680	0					
ANR	4561595	Condition	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )	130:7:4177:4223	4560680	0	True				
ANR	4561596	AndExpression	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )		4560680	0		&&			
ANR	4561597	UnaryOperationExpression	! ctx . leftlen		4560680	0					
ANR	4561598	UnaryOperator	!		4560680	0					
ANR	4561599	MemberAccess	ctx . leftlen		4560680	1					
ANR	4561600	Identifier	ctx		4560680	0					
ANR	4561601	Identifier	leftlen		4560680	1					
ANR	4561602	AndExpression	ctx . left && IS_WHITESPACE ( * in )		4560680	1		&&			
ANR	4561603	MemberAccess	ctx . left		4560680	0					
ANR	4561604	Identifier	ctx		4560680	0					
ANR	4561605	Identifier	left		4560680	1					
ANR	4561606	CallExpression	IS_WHITESPACE ( * in )		4560680	1					
ANR	4561607	Callee	IS_WHITESPACE		4560680	0					
ANR	4561608	Identifier	IS_WHITESPACE		4560680	0					
ANR	4561609	ArgumentList	* in		4560680	1					
ANR	4561610	Argument	* in		4560680	0					
ANR	4561611	UnaryOperationExpression	* in		4560680	0					
ANR	4561612	UnaryOperator	*		4560680	0					
ANR	4561613	Identifier	in		4560680	1					
ANR	4561614	CompoundStatement		105:56:3559:3559	4560680	1					
ANR	4561615	ExpressionStatement	ctx . leftlen = in - ctx . left + 3	131:4:4232:4263	4560680	0	True				
ANR	4561616	AssignmentExpression	ctx . leftlen = in - ctx . left + 3		4560680	0		=			
ANR	4561617	MemberAccess	ctx . leftlen		4560680	0					
ANR	4561618	Identifier	ctx		4560680	0					
ANR	4561619	Identifier	leftlen		4560680	1					
ANR	4561620	AdditiveExpression	in - ctx . left + 3		4560680	1		-			
ANR	4561621	Identifier	in		4560680	0					
ANR	4561622	AdditiveExpression	ctx . left + 3		4560680	1		+			
ANR	4561623	MemberAccess	ctx . left		4560680	0					
ANR	4561624	Identifier	ctx		4560680	0					
ANR	4561625	Identifier	left		4560680	1					
ANR	4561626	PrimaryExpression	3		4560680	1					
ANR	4561627	ElseStatement	else		4560680	0					
ANR	4561628	IfStatement	if ( ctx . comment && * in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right )		4560680	0					
ANR	4561629	Condition	ctx . comment && * in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right	132:14:4279:4338	4560680	0	True				
ANR	4561630	AndExpression	ctx . comment && * in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right		4560680	0		&&			
ANR	4561631	MemberAccess	ctx . comment		4560680	0					
ANR	4561632	Identifier	ctx		4560680	0					
ANR	4561633	Identifier	comment		4560680	1					
ANR	4561634	AndExpression	* in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right		4560680	1		&&			
ANR	4561635	EqualityExpression	* in == '('		4560680	0		==			
ANR	4561636	UnaryOperationExpression	* in		4560680	0					
ANR	4561637	UnaryOperator	*		4560680	0					
ANR	4561638	Identifier	in		4560680	1					
ANR	4561639	PrimaryExpression	'('		4560680	1					
ANR	4561640	AndExpression	IS_ALPHA ( in [ - 1 ] ) && ! ctx . right		4560680	1		&&			
ANR	4561641	CallExpression	IS_ALPHA ( in [ - 1 ] )		4560680	0					
ANR	4561642	Callee	IS_ALPHA		4560680	0					
ANR	4561643	Identifier	IS_ALPHA		4560680	0					
ANR	4561644	ArgumentList	in [ - 1 ]		4560680	1					
ANR	4561645	Argument	in [ - 1 ]		4560680	0					
ANR	4561646	ArrayIndexing	in [ - 1 ]		4560680	0					
ANR	4561647	Identifier	in		4560680	0					
ANR	4561648	UnaryOperationExpression	- 1		4560680	1					
ANR	4561649	UnaryOperator	-		4560680	0					
ANR	4561650	PrimaryExpression	1		4560680	1					
ANR	4561651	UnaryOperationExpression	! ctx . right		4560680	1					
ANR	4561652	UnaryOperator	!		4560680	0					
ANR	4561653	MemberAccess	ctx . right		4560680	1					
ANR	4561654	Identifier	ctx		4560680	0					
ANR	4561655	Identifier	right		4560680	1					
ANR	4561656	CompoundStatement		107:76:3674:3674	4560680	1					
ANR	4561657	ExpressionStatement	ctx . right = in - 1	140:4:4678:4696	4560680	0	True				
ANR	4561658	AssignmentExpression	ctx . right = in - 1		4560680	0		=			
ANR	4561659	MemberAccess	ctx . right		4560680	0					
ANR	4561660	Identifier	ctx		4560680	0					
ANR	4561661	Identifier	right		4560680	1					
ANR	4561662	AdditiveExpression	in - 1		4560680	1		-			
ANR	4561663	Identifier	in		4560680	0					
ANR	4561664	PrimaryExpression	1		4560680	1					
ANR	4561665	WhileStatement	while ( IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*' )		4560680	1					
ANR	4561666	Condition	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'	141:11:4709:4771	4560680	0	True				
ANR	4561667	OrExpression	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'		4560680	0		||			
ANR	4561668	CallExpression	IS_ALPHA ( * ctx . right )		4560680	0					
ANR	4561669	Callee	IS_ALPHA		4560680	0					
ANR	4561670	Identifier	IS_ALPHA		4560680	0					
ANR	4561671	ArgumentList	* ctx . right		4560680	1					
ANR	4561672	Argument	* ctx . right		4560680	0					
ANR	4561673	UnaryOperationExpression	* ctx . right		4560680	0					
ANR	4561674	UnaryOperator	*		4560680	0					
ANR	4561675	MemberAccess	ctx . right		4560680	1					
ANR	4561676	Identifier	ctx		4560680	0					
ANR	4561677	Identifier	right		4560680	1					
ANR	4561678	OrExpression	* ctx . right == '_' || * ctx . right == '*'		4560680	1		||			
ANR	4561679	EqualityExpression	* ctx . right == '_'		4560680	0		==			
ANR	4561680	UnaryOperationExpression	* ctx . right		4560680	0					
ANR	4561681	UnaryOperator	*		4560680	0					
ANR	4561682	MemberAccess	ctx . right		4560680	1					
ANR	4561683	Identifier	ctx		4560680	0					
ANR	4561684	Identifier	right		4560680	1					
ANR	4561685	PrimaryExpression	'_'		4560680	1					
ANR	4561686	EqualityExpression	* ctx . right == '*'		4560680	1		==			
ANR	4561687	UnaryOperationExpression	* ctx . right		4560680	0					
ANR	4561688	UnaryOperator	*		4560680	0					
ANR	4561689	MemberAccess	ctx . right		4560680	1					
ANR	4561690	Identifier	ctx		4560680	0					
ANR	4561691	Identifier	right		4560680	1					
ANR	4561692	PrimaryExpression	'*'		4560680	1					
ANR	4561693	CompoundStatement		116:76:4107:4107	4560680	1					
ANR	4561694	ExpressionStatement	ctx . right --	142:5:4781:4792	4560680	0	True				
ANR	4561695	PostIncDecOperationExpression	ctx . right --		4560680	0					
ANR	4561696	MemberAccess	ctx . right		4560680	0					
ANR	4561697	Identifier	ctx		4560680	0					
ANR	4561698	Identifier	right		4560680	1					
ANR	4561699	IncDec	--		4560680	1					
ANR	4561700	IfStatement	if ( * ctx . right == ' ' )		4560680	2					
ANR	4561701	Condition	* ctx . right == ' '	150:8:5140:5156	4560680	0	True				
ANR	4561702	EqualityExpression	* ctx . right == ' '		4560680	0		==			
ANR	4561703	UnaryOperationExpression	* ctx . right		4560680	0					
ANR	4561704	UnaryOperator	*		4560680	0					
ANR	4561705	MemberAccess	ctx . right		4560680	1					
ANR	4561706	Identifier	ctx		4560680	0					
ANR	4561707	Identifier	right		4560680	1					
ANR	4561708	PrimaryExpression	' '		4560680	1					
ANR	4561709	CompoundStatement		125:27:4492:4492	4560680	1					
ANR	4561710	ExpressionStatement	ctx . right --	151:5:5166:5177	4560680	0	True				
ANR	4561711	PostIncDecOperationExpression	ctx . right --		4560680	0					
ANR	4561712	MemberAccess	ctx . right		4560680	0					
ANR	4561713	Identifier	ctx		4560680	0					
ANR	4561714	Identifier	right		4560680	1					
ANR	4561715	IncDec	--		4560680	1					
ANR	4561716	WhileStatement	while ( IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*' )		4560680	1					
ANR	4561717	Condition	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'	152:12:5191:5253	4560680	0	True				
ANR	4561718	OrExpression	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'		4560680	0		||			
ANR	4561719	CallExpression	IS_ALPHA ( * ctx . right )		4560680	0					
ANR	4561720	Callee	IS_ALPHA		4560680	0					
ANR	4561721	Identifier	IS_ALPHA		4560680	0					
ANR	4561722	ArgumentList	* ctx . right		4560680	1					
ANR	4561723	Argument	* ctx . right		4560680	0					
ANR	4561724	UnaryOperationExpression	* ctx . right		4560680	0					
ANR	4561725	UnaryOperator	*		4560680	0					
ANR	4561726	MemberAccess	ctx . right		4560680	1					
ANR	4561727	Identifier	ctx		4560680	0					
ANR	4561728	Identifier	right		4560680	1					
ANR	4561729	OrExpression	* ctx . right == '_' || * ctx . right == '*'		4560680	1		||			
ANR	4561730	EqualityExpression	* ctx . right == '_'		4560680	0		==			
ANR	4561731	UnaryOperationExpression	* ctx . right		4560680	0					
ANR	4561732	UnaryOperator	*		4560680	0					
ANR	4561733	MemberAccess	ctx . right		4560680	1					
ANR	4561734	Identifier	ctx		4560680	0					
ANR	4561735	Identifier	right		4560680	1					
ANR	4561736	PrimaryExpression	'_'		4560680	1					
ANR	4561737	EqualityExpression	* ctx . right == '*'		4560680	1		==			
ANR	4561738	UnaryOperationExpression	* ctx . right		4560680	0					
ANR	4561739	UnaryOperator	*		4560680	0					
ANR	4561740	MemberAccess	ctx . right		4560680	1					
ANR	4561741	Identifier	ctx		4560680	0					
ANR	4561742	Identifier	right		4560680	1					
ANR	4561743	PrimaryExpression	'*'		4560680	1					
ANR	4561744	CompoundStatement		127:77:4589:4589	4560680	1					
ANR	4561745	ExpressionStatement	ctx . right --	153:6:5264:5275	4560680	0	True				
ANR	4561746	PostIncDecOperationExpression	ctx . right --		4560680	0					
ANR	4561747	MemberAccess	ctx . right		4560680	0					
ANR	4561748	Identifier	ctx		4560680	0					
ANR	4561749	Identifier	right		4560680	1					
ANR	4561750	IncDec	--		4560680	1					
ANR	4561751	ExpressionStatement	ctx . right ++	156:5:5346:5357	4560680	2	True				
ANR	4561752	PostIncDecOperationExpression	ctx . right ++		4560680	0					
ANR	4561753	MemberAccess	ctx . right		4560680	0					
ANR	4561754	Identifier	ctx		4560680	0					
ANR	4561755	Identifier	right		4560680	1					
ANR	4561756	IncDec	++		4560680	1					
ANR	4561757	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) ) )		4560680	3					
ANR	4561758	Condition	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )	158:11:5376:5421	4560680	0	True				
ANR	4561759	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		4560680	0					
ANR	4561760	UnaryOperator	!		4560680	0					
ANR	4561761	CallExpression	IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		4560680	1					
ANR	4561762	Callee	IS_WHITESPACE		4560680	0					
ANR	4561763	Identifier	IS_WHITESPACE		4560680	0					
ANR	4561764	ArgumentList	* ( ctx . right - ctx . rightcolor )		4560680	1					
ANR	4561765	Argument	* ( ctx . right - ctx . rightcolor )		4560680	0					
ANR	4561766	UnaryOperationExpression	* ( ctx . right - ctx . rightcolor )		4560680	0					
ANR	4561767	UnaryOperator	*		4560680	0					
ANR	4561768	AdditiveExpression	ctx . right - ctx . rightcolor		4560680	1		-			
ANR	4561769	MemberAccess	ctx . right		4560680	0					
ANR	4561770	Identifier	ctx		4560680	0					
ANR	4561771	Identifier	right		4560680	1					
ANR	4561772	MemberAccess	ctx . rightcolor		4560680	1					
ANR	4561773	Identifier	ctx		4560680	0					
ANR	4561774	Identifier	rightcolor		4560680	1					
ANR	4561775	CompoundStatement		133:59:4757:4757	4560680	1					
ANR	4561776	ExpressionStatement	ctx . rightcolor ++	159:5:5431:5447	4560680	0	True				
ANR	4561777	PostIncDecOperationExpression	ctx . rightcolor ++		4560680	0					
ANR	4561778	MemberAccess	ctx . rightcolor		4560680	0					
ANR	4561779	Identifier	ctx		4560680	0					
ANR	4561780	Identifier	rightcolor		4560680	1					
ANR	4561781	IncDec	++		4560680	1					
ANR	4561782	ExpressionStatement	ctx . rightcolor --	161:4:5459:5475	4560680	4	True				
ANR	4561783	PostIncDecOperationExpression	ctx . rightcolor --		4560680	0					
ANR	4561784	MemberAccess	ctx . rightcolor		4560680	0					
ANR	4561785	Identifier	ctx		4560680	0					
ANR	4561786	Identifier	rightcolor		4560680	1					
ANR	4561787	IncDec	--		4560680	1					
ANR	4561788	ElseStatement	else		4560680	0					
ANR	4561789	IfStatement	if ( ctx . comment && * in == ')' && in [ 1 ] != '\\'' )		4560680	0					
ANR	4561790	Condition	ctx . comment && * in == ')' && in [ 1 ] != '\\''	162:14:5491:5532	4560680	0	True				
ANR	4561791	AndExpression	ctx . comment && * in == ')' && in [ 1 ] != '\\''		4560680	0		&&			
ANR	4561792	MemberAccess	ctx . comment		4560680	0					
ANR	4561793	Identifier	ctx		4560680	0					
ANR	4561794	Identifier	comment		4560680	1					
ANR	4561795	AndExpression	* in == ')' && in [ 1 ] != '\\''		4560680	1		&&			
ANR	4561796	EqualityExpression	* in == ')'		4560680	0		==			
ANR	4561797	UnaryOperationExpression	* in		4560680	0					
ANR	4561798	UnaryOperator	*		4560680	0					
ANR	4561799	Identifier	in		4560680	1					
ANR	4561800	PrimaryExpression	')'		4560680	1					
ANR	4561801	EqualityExpression	in [ 1 ] != '\\''		4560680	1		!=			
ANR	4561802	ArrayIndexing	in [ 1 ]		4560680	0					
ANR	4561803	Identifier	in		4560680	0					
ANR	4561804	PrimaryExpression	1		4560680	1					
ANR	4561805	PrimaryExpression	'\\''		4560680	1					
ANR	4561806	CompoundStatement		137:58:4868:4868	4560680	1					
ANR	4561807	ExpressionStatement	ctx . rightlen = in - ctx . right + 1	163:4:5541:5574	4560680	0	True				
ANR	4561808	AssignmentExpression	ctx . rightlen = in - ctx . right + 1		4560680	0		=			
ANR	4561809	MemberAccess	ctx . rightlen		4560680	0					
ANR	4561810	Identifier	ctx		4560680	0					
ANR	4561811	Identifier	rightlen		4560680	1					
ANR	4561812	AdditiveExpression	in - ctx . right + 1		4560680	1		-			
ANR	4561813	Identifier	in		4560680	0					
ANR	4561814	AdditiveExpression	ctx . right + 1		4560680	1		+			
ANR	4561815	MemberAccess	ctx . right		4560680	0					
ANR	4561816	Identifier	ctx		4560680	0					
ANR	4561817	Identifier	right		4560680	1					
ANR	4561818	PrimaryExpression	1		4560680	1					
ANR	4561819	ReturnType	static void		4560680	1					
ANR	4561820	Identifier	find_and_change		4560680	2					
ANR	4561821	ParameterList	"char * in , int len"		4560680	3					
ANR	4561822	Parameter	char * in	26:29:647:654	4560680	0	True				
ANR	4561823	ParameterType	char *		4560680	0					
ANR	4561824	Identifier	in		4560680	1					
ANR	4561825	Parameter	int len	26:39:657:663	4560680	1	True				
ANR	4561826	ParameterType	int		4560680	0					
ANR	4561827	Identifier	len		4560680	1					
ANR	4561828	CFGEntryNode	ENTRY		4560680		True				
ANR	4561829	CFGExitNode	EXIT		4560680		True				
ANR	4561830	Symbol	* ctx . commentcolor		4560680						
ANR	4561831	Symbol	IS_ALPHA		4560680						
ANR	4561832	Symbol	* in		4560680						
ANR	4561833	Symbol	* ctx . leftpos		4560680						
ANR	4561834	Symbol	& ctx		4560680						
ANR	4561835	Symbol	TYPE_SYM		4560680						
ANR	4561836	Symbol	IS_WHITESPACE		4560680						
ANR	4561837	Symbol	ctx . leftpos		4560680						
ANR	4561838	Symbol	ctx . leftlen		4560680						
ANR	4561839	Symbol	TYPE_NONE		4560680						
ANR	4561840	Symbol	* ctx . rightcolor		4560680						
ANR	4561841	Symbol	ctx . right		4560680						
ANR	4561842	Symbol	len		4560680						
ANR	4561843	Symbol	ctx . linecount		4560680						
ANR	4561844	Symbol	ctx . comment		4560680						
ANR	4561845	Symbol	ctx . leftcolor		4560680						
ANR	4561846	Symbol	end		4560680						
ANR	4561847	Symbol	copy		4560680						
ANR	4561848	Symbol	IS_STRING		4560680						
ANR	4561849	Symbol	* ( ctx . right - ctx . leftpos - 1 )		4560680						
ANR	4561850	Symbol	ctx . linebegin		4560680						
ANR	4561851	Symbol	malloc		4560680						
ANR	4561852	Symbol	* ctx . comment		4560680						
ANR	4561853	Symbol	ctx . commentcolor		4560680						
ANR	4561854	Symbol	* ( ctx . right - ctx . rightcolor )		4560680						
ANR	4561855	Symbol	ctx . left		4560680						
ANR	4561856	Symbol	ctx . rightlen		4560680						
ANR	4561857	Symbol	NULL		4560680						
ANR	4561858	Symbol	in		4560680						
ANR	4561859	Symbol	TYPE_STR		4560680						
ANR	4561860	Symbol	* ctx . left		4560680						
ANR	4561861	Symbol	ctx		4560680						
ANR	4561862	Symbol	* ctx . right		4560680						
ANR	4561863	Symbol	IS_SYMBOL		4560680						
ANR	4561864	Symbol	* ctx		4560680						
ANR	4561865	Symbol	ctx . type		4560680						
ANR	4561866	Symbol	* ( ctx . comment - ctx . commentcolor )		4560680						
ANR	4561867	Symbol	* ( ctx . left - ctx . leftcolor )		4560680						
ANR	4561868	Symbol	ctx . rightcolor		4560680						
ANR	4561869	Symbol	* ctx . leftcolor		4560680						
ANR	4561870	Function	r_core_pseudo_code	169:0:5591:13660							
ANR	4561871	FunctionDef	"r_core_pseudo_code (RCore * core , const char * input)"		4561870	0					
ANR	4561872	CompoundStatement		169:61:5652:13660	4561870	0					
ANR	4561873	IdentifierDeclStatement	"const char * cmdPdc = r_config_get ( core -> config , ""cmd.pdc"" ) ;"	170:1:5655:5714	4561870	0	True				
ANR	4561874	IdentifierDecl	"* cmdPdc = r_config_get ( core -> config , ""cmd.pdc"" )"		4561870	0					
ANR	4561875	IdentifierDeclType	const char *		4561870	0					
ANR	4561876	Identifier	cmdPdc		4561870	1					
ANR	4561877	AssignmentExpression	"* cmdPdc = r_config_get ( core -> config , ""cmd.pdc"" )"		4561870	2		=			
ANR	4561878	Identifier	cmdPdc		4561870	0					
ANR	4561879	CallExpression	"r_config_get ( core -> config , ""cmd.pdc"" )"		4561870	1					
ANR	4561880	Callee	r_config_get		4561870	0					
ANR	4561881	Identifier	r_config_get		4561870	0					
ANR	4561882	ArgumentList	core -> config		4561870	1					
ANR	4561883	Argument	core -> config		4561870	0					
ANR	4561884	PtrMemberAccess	core -> config		4561870	0					
ANR	4561885	Identifier	core		4561870	0					
ANR	4561886	Identifier	config		4561870	1					
ANR	4561887	Argument	"""cmd.pdc"""		4561870	1					
ANR	4561888	PrimaryExpression	"""cmd.pdc"""		4561870	0					
ANR	4561889	IfStatement	"if ( cmdPdc && * cmdPdc && ! strstr ( cmdPdc , ""pdc"" ) )"		4561870	1					
ANR	4561890	Condition	"cmdPdc && * cmdPdc && ! strstr ( cmdPdc , ""pdc"" )"	171:5:5721:5764	4561870	0	True				
ANR	4561891	AndExpression	"cmdPdc && * cmdPdc && ! strstr ( cmdPdc , ""pdc"" )"		4561870	0		&&			
ANR	4561892	Identifier	cmdPdc		4561870	0					
ANR	4561893	AndExpression	"* cmdPdc && ! strstr ( cmdPdc , ""pdc"" )"		4561870	1		&&			
ANR	4561894	UnaryOperationExpression	* cmdPdc		4561870	0					
ANR	4561895	UnaryOperator	*		4561870	0					
ANR	4561896	Identifier	cmdPdc		4561870	1					
ANR	4561897	UnaryOperationExpression	"! strstr ( cmdPdc , ""pdc"" )"		4561870	1					
ANR	4561898	UnaryOperator	!		4561870	0					
ANR	4561899	CallExpression	"strstr ( cmdPdc , ""pdc"" )"		4561870	1					
ANR	4561900	Callee	strstr		4561870	0					
ANR	4561901	Identifier	strstr		4561870	0					
ANR	4561902	ArgumentList	cmdPdc		4561870	1					
ANR	4561903	Argument	cmdPdc		4561870	0					
ANR	4561904	Identifier	cmdPdc		4561870	0					
ANR	4561905	Argument	"""pdc"""		4561870	1					
ANR	4561906	PrimaryExpression	"""pdc"""		4561870	0					
ANR	4561907	CompoundStatement		3:51:114:114	4561870	1					
ANR	4561908	IfStatement	"if ( strstr ( cmdPdc , ""!*"" ) || strstr ( cmdPdc , ""#!"" ) )"		4561870	0					
ANR	4561909	Condition	"strstr ( cmdPdc , ""!*"" ) || strstr ( cmdPdc , ""#!"" )"	172:6:5775:5820	4561870	0	True				
ANR	4561910	OrExpression	"strstr ( cmdPdc , ""!*"" ) || strstr ( cmdPdc , ""#!"" )"		4561870	0		||			
ANR	4561911	CallExpression	"strstr ( cmdPdc , ""!*"" )"		4561870	0					
ANR	4561912	Callee	strstr		4561870	0					
ANR	4561913	Identifier	strstr		4561870	0					
ANR	4561914	ArgumentList	cmdPdc		4561870	1					
ANR	4561915	Argument	cmdPdc		4561870	0					
ANR	4561916	Identifier	cmdPdc		4561870	0					
ANR	4561917	Argument	"""!*"""		4561870	1					
ANR	4561918	PrimaryExpression	"""!*"""		4561870	0					
ANR	4561919	CallExpression	"strstr ( cmdPdc , ""#!"" )"		4561870	1					
ANR	4561920	Callee	strstr		4561870	0					
ANR	4561921	Identifier	strstr		4561870	0					
ANR	4561922	ArgumentList	cmdPdc		4561870	1					
ANR	4561923	Argument	cmdPdc		4561870	0					
ANR	4561924	Identifier	cmdPdc		4561870	0					
ANR	4561925	Argument	"""#!"""		4561870	1					
ANR	4561926	PrimaryExpression	"""#!"""		4561870	0					
ANR	4561927	CompoundStatement		4:54:170:170	4561870	1					
ANR	4561928	IfStatement	"if ( ! strcmp ( input , ""*"" ) )"		4561870	0					
ANR	4561929	Condition	"! strcmp ( input , ""*"" )"	173:7:5832:5851	4561870	0	True				
ANR	4561930	UnaryOperationExpression	"! strcmp ( input , ""*"" )"		4561870	0					
ANR	4561931	UnaryOperator	!		4561870	0					
ANR	4561932	CallExpression	"strcmp ( input , ""*"" )"		4561870	1					
ANR	4561933	Callee	strcmp		4561870	0					
ANR	4561934	Identifier	strcmp		4561870	0					
ANR	4561935	ArgumentList	input		4561870	1					
ANR	4561936	Argument	input		4561870	0					
ANR	4561937	Identifier	input		4561870	0					
ANR	4561938	Argument	"""*"""		4561870	1					
ANR	4561939	PrimaryExpression	"""*"""		4561870	0					
ANR	4561940	CompoundStatement		5:29:201:201	4561870	1					
ANR	4561941	ExpressionStatement	"input = "" -r2"""	174:4:5860:5874	4561870	0	True				
ANR	4561942	AssignmentExpression	"input = "" -r2"""		4561870	0		=			
ANR	4561943	Identifier	input		4561870	0					
ANR	4561944	PrimaryExpression	""" -r2"""		4561870	1					
ANR	4561945	ElseStatement	else		4561870	0					
ANR	4561946	IfStatement	"if ( ! strcmp ( input , ""="" ) )"		4561870	0					
ANR	4561947	Condition	"! strcmp ( input , ""="" )"	175:14:5890:5909	4561870	0	True				
ANR	4561948	UnaryOperationExpression	"! strcmp ( input , ""="" )"		4561870	0					
ANR	4561949	UnaryOperator	!		4561870	0					
ANR	4561950	CallExpression	"strcmp ( input , ""="" )"		4561870	1					
ANR	4561951	Callee	strcmp		4561870	0					
ANR	4561952	Identifier	strcmp		4561870	0					
ANR	4561953	ArgumentList	input		4561870	1					
ANR	4561954	Argument	input		4561870	0					
ANR	4561955	Identifier	input		4561870	0					
ANR	4561956	Argument	"""="""		4561870	1					
ANR	4561957	PrimaryExpression	"""="""		4561870	0					
ANR	4561958	CompoundStatement		7:36:259:259	4561870	1					
ANR	4561959	ExpressionStatement	"input = "" -a"""	176:4:5918:5931	4561870	0	True				
ANR	4561960	AssignmentExpression	"input = "" -a"""		4561870	0		=			
ANR	4561961	Identifier	input		4561870	0					
ANR	4561962	PrimaryExpression	""" -a"""		4561870	1					
ANR	4561963	ElseStatement	else		4561870	0					
ANR	4561964	IfStatement	"if ( ! strcmp ( input , ""?"" ) )"		4561870	0					
ANR	4561965	Condition	"! strcmp ( input , ""?"" )"	177:14:5947:5966	4561870	0	True				
ANR	4561966	UnaryOperationExpression	"! strcmp ( input , ""?"" )"		4561870	0					
ANR	4561967	UnaryOperator	!		4561870	0					
ANR	4561968	CallExpression	"strcmp ( input , ""?"" )"		4561870	1					
ANR	4561969	Callee	strcmp		4561870	0					
ANR	4561970	Identifier	strcmp		4561870	0					
ANR	4561971	ArgumentList	input		4561870	1					
ANR	4561972	Argument	input		4561870	0					
ANR	4561973	Identifier	input		4561870	0					
ANR	4561974	Argument	"""?"""		4561870	1					
ANR	4561975	PrimaryExpression	"""?"""		4561870	0					
ANR	4561976	CompoundStatement		9:36:316:316	4561870	1					
ANR	4561977	ExpressionStatement	"input = "" -h"""	178:4:5975:5988	4561870	0	True				
ANR	4561978	AssignmentExpression	"input = "" -h"""		4561870	0		=			
ANR	4561979	Identifier	input		4561870	0					
ANR	4561980	PrimaryExpression	""" -h"""		4561870	1					
ANR	4561981	ReturnStatement	"return r_core_cmdf ( core , ""%s%s"" , cmdPdc , input ) ;"	181:2:6001:6049	4561870	1	True				
ANR	4561982	CallExpression	"r_core_cmdf ( core , ""%s%s"" , cmdPdc , input )"		4561870	0					
ANR	4561983	Callee	r_core_cmdf		4561870	0					
ANR	4561984	Identifier	r_core_cmdf		4561870	0					
ANR	4561985	ArgumentList	core		4561870	1					
ANR	4561986	Argument	core		4561870	0					
ANR	4561987	Identifier	core		4561870	0					
ANR	4561988	Argument	"""%s%s"""		4561870	1					
ANR	4561989	PrimaryExpression	"""%s%s"""		4561870	0					
ANR	4561990	Argument	cmdPdc		4561870	2					
ANR	4561991	Identifier	cmdPdc		4561870	0					
ANR	4561992	Argument	input		4561870	3					
ANR	4561993	Identifier	input		4561870	0					
ANR	4561994	IdentifierDeclStatement	Sdb * db ;	184:1:6056:6063	4561870	2	True				
ANR	4561995	IdentifierDecl	* db		4561870	0					
ANR	4561996	IdentifierDeclType	Sdb *		4561870	0					
ANR	4561997	Identifier	db		4561870	1					
ANR	4561998	Statement	ut64	185:1:6066:6069	4561870	3	True				
ANR	4561999	Statement	queuegoto	185:6:6071:6079	4561870	4	True				
ANR	4562000	Statement	=	185:16:6081:6081	4561870	5	True				
ANR	4562001	Statement	0L	185:18:6083:6084	4561870	6	True				
ANR	4562002	ExpressionStatement	L	185:20:6085:6086	4561870	7	True				
ANR	4562003	Identifier	L		4561870	0					
ANR	4562004	IdentifierDeclStatement	"const char * blocktype = ""else"" ;"	186:1:6089:6119	4561870	8	True				
ANR	4562005	IdentifierDecl	"* blocktype = ""else"""		4561870	0					
ANR	4562006	IdentifierDeclType	const char *		4561870	0					
ANR	4562007	Identifier	blocktype		4561870	1					
ANR	4562008	AssignmentExpression	"* blocktype = ""else"""		4561870	2		=			
ANR	4562009	Identifier	blocktype		4561870	0					
ANR	4562010	PrimaryExpression	"""else"""		4561870	1					
ANR	4562011	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL ) ;"	187:1:6122:6209	4561870	9	True				
ANR	4562012	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		4561870	0					
ANR	4562013	IdentifierDeclType	RAnalFunction *		4561870	0					
ANR	4562014	Identifier	fcn		4561870	1					
ANR	4562015	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		4561870	2		=			
ANR	4562016	Identifier	fcn		4561870	0					
ANR	4562017	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		4561870	1					
ANR	4562018	Callee	r_anal_get_fcn_in		4561870	0					
ANR	4562019	Identifier	r_anal_get_fcn_in		4561870	0					
ANR	4562020	ArgumentList	core -> anal		4561870	1					
ANR	4562021	Argument	core -> anal		4561870	0					
ANR	4562022	PtrMemberAccess	core -> anal		4561870	0					
ANR	4562023	Identifier	core		4561870	0					
ANR	4562024	Identifier	anal		4561870	1					
ANR	4562025	Argument	core -> offset		4561870	1					
ANR	4562026	PtrMemberAccess	core -> offset		4561870	0					
ANR	4562027	Identifier	core		4561870	0					
ANR	4562028	Identifier	offset		4561870	1					
ANR	4562029	Argument	R_ANAL_FCN_TYPE_NULL		4561870	2					
ANR	4562030	Identifier	R_ANAL_FCN_TYPE_NULL		4561870	0					
ANR	4562031	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	188:1:6212:6262	4561870	10	True				
ANR	4562032	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		4561870	0					
ANR	4562033	IdentifierDeclType	RConfigHold *		4561870	0					
ANR	4562034	Identifier	hc		4561870	1					
ANR	4562035	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		4561870	2		=			
ANR	4562036	Identifier	hc		4561870	0					
ANR	4562037	CallExpression	r_config_hold_new ( core -> config )		4561870	1					
ANR	4562038	Callee	r_config_hold_new		4561870	0					
ANR	4562039	Identifier	r_config_hold_new		4561870	0					
ANR	4562040	ArgumentList	core -> config		4561870	1					
ANR	4562041	Argument	core -> config		4561870	0					
ANR	4562042	PtrMemberAccess	core -> config		4561870	0					
ANR	4562043	Identifier	core		4561870	0					
ANR	4562044	Identifier	config		4561870	1					
ANR	4562045	IfStatement	if ( ! hc )		4561870	11					
ANR	4562046	Condition	! hc	189:5:6269:6271	4561870	0	True				
ANR	4562047	UnaryOperationExpression	! hc		4561870	0					
ANR	4562048	UnaryOperator	!		4561870	0					
ANR	4562049	Identifier	hc		4561870	1					
ANR	4562050	CompoundStatement		21:10:621:621	4561870	1					
ANR	4562051	ReturnStatement	return false ;	190:2:6278:6290	4561870	0	True				
ANR	4562052	Identifier	false		4561870	0					
ANR	4562053	ExpressionStatement	"r_config_hold_i ( hc , ""asm.pseudo"" , ""asm.decode"" , ""asm.lines"" , ""asm.bytes"" , ""asm.stackptr"" , NULL )"	192:1:6296:6392	4561870	12	True				
ANR	4562054	CallExpression	"r_config_hold_i ( hc , ""asm.pseudo"" , ""asm.decode"" , ""asm.lines"" , ""asm.bytes"" , ""asm.stackptr"" , NULL )"		4561870	0					
ANR	4562055	Callee	r_config_hold_i		4561870	0					
ANR	4562056	Identifier	r_config_hold_i		4561870	0					
ANR	4562057	ArgumentList	hc		4561870	1					
ANR	4562058	Argument	hc		4561870	0					
ANR	4562059	Identifier	hc		4561870	0					
ANR	4562060	Argument	"""asm.pseudo"""		4561870	1					
ANR	4562061	PrimaryExpression	"""asm.pseudo"""		4561870	0					
ANR	4562062	Argument	"""asm.decode"""		4561870	2					
ANR	4562063	PrimaryExpression	"""asm.decode"""		4561870	0					
ANR	4562064	Argument	"""asm.lines"""		4561870	3					
ANR	4562065	PrimaryExpression	"""asm.lines"""		4561870	0					
ANR	4562066	Argument	"""asm.bytes"""		4561870	4					
ANR	4562067	PrimaryExpression	"""asm.bytes"""		4561870	0					
ANR	4562068	Argument	"""asm.stackptr"""		4561870	5					
ANR	4562069	PrimaryExpression	"""asm.stackptr"""		4561870	0					
ANR	4562070	Argument	NULL		4561870	6					
ANR	4562071	Identifier	NULL		4561870	0					
ANR	4562072	ExpressionStatement	"r_config_hold_i ( hc , ""asm.offset"" , ""asm.flags"" , ""asm.lines.fcn"" , ""asm.comments"" , NULL )"	193:1:6395:6481	4561870	13	True				
ANR	4562073	CallExpression	"r_config_hold_i ( hc , ""asm.offset"" , ""asm.flags"" , ""asm.lines.fcn"" , ""asm.comments"" , NULL )"		4561870	0					
ANR	4562074	Callee	r_config_hold_i		4561870	0					
ANR	4562075	Identifier	r_config_hold_i		4561870	0					
ANR	4562076	ArgumentList	hc		4561870	1					
ANR	4562077	Argument	hc		4561870	0					
ANR	4562078	Identifier	hc		4561870	0					
ANR	4562079	Argument	"""asm.offset"""		4561870	1					
ANR	4562080	PrimaryExpression	"""asm.offset"""		4561870	0					
ANR	4562081	Argument	"""asm.flags"""		4561870	2					
ANR	4562082	PrimaryExpression	"""asm.flags"""		4561870	0					
ANR	4562083	Argument	"""asm.lines.fcn"""		4561870	3					
ANR	4562084	PrimaryExpression	"""asm.lines.fcn"""		4561870	0					
ANR	4562085	Argument	"""asm.comments"""		4561870	4					
ANR	4562086	PrimaryExpression	"""asm.comments"""		4561870	0					
ANR	4562087	Argument	NULL		4561870	5					
ANR	4562088	Identifier	NULL		4561870	0					
ANR	4562089	ExpressionStatement	"r_config_hold_i ( hc , ""asm.functions"" , ""asm.section"" , ""asm.cmt.col"" , ""asm.filter"" , NULL )"	194:1:6484:6571	4561870	14	True				
ANR	4562090	CallExpression	"r_config_hold_i ( hc , ""asm.functions"" , ""asm.section"" , ""asm.cmt.col"" , ""asm.filter"" , NULL )"		4561870	0					
ANR	4562091	Callee	r_config_hold_i		4561870	0					
ANR	4562092	Identifier	r_config_hold_i		4561870	0					
ANR	4562093	ArgumentList	hc		4561870	1					
ANR	4562094	Argument	hc		4561870	0					
ANR	4562095	Identifier	hc		4561870	0					
ANR	4562096	Argument	"""asm.functions"""		4561870	1					
ANR	4562097	PrimaryExpression	"""asm.functions"""		4561870	0					
ANR	4562098	Argument	"""asm.section"""		4561870	2					
ANR	4562099	PrimaryExpression	"""asm.section"""		4561870	0					
ANR	4562100	Argument	"""asm.cmt.col"""		4561870	3					
ANR	4562101	PrimaryExpression	"""asm.cmt.col"""		4561870	0					
ANR	4562102	Argument	"""asm.filter"""		4561870	4					
ANR	4562103	PrimaryExpression	"""asm.filter"""		4561870	0					
ANR	4562104	Argument	NULL		4561870	5					
ANR	4562105	Identifier	NULL		4561870	0					
ANR	4562106	ExpressionStatement	"r_config_hold_i ( hc , ""scr.color"" , ""emu.str"" , ""asm.emu"" , ""emu.write"" , NULL )"	195:1:6574:6648	4561870	15	True				
ANR	4562107	CallExpression	"r_config_hold_i ( hc , ""scr.color"" , ""emu.str"" , ""asm.emu"" , ""emu.write"" , NULL )"		4561870	0					
ANR	4562108	Callee	r_config_hold_i		4561870	0					
ANR	4562109	Identifier	r_config_hold_i		4561870	0					
ANR	4562110	ArgumentList	hc		4561870	1					
ANR	4562111	Argument	hc		4561870	0					
ANR	4562112	Identifier	hc		4561870	0					
ANR	4562113	Argument	"""scr.color"""		4561870	1					
ANR	4562114	PrimaryExpression	"""scr.color"""		4561870	0					
ANR	4562115	Argument	"""emu.str"""		4561870	2					
ANR	4562116	PrimaryExpression	"""emu.str"""		4561870	0					
ANR	4562117	Argument	"""asm.emu"""		4561870	3					
ANR	4562118	PrimaryExpression	"""asm.emu"""		4561870	0					
ANR	4562119	Argument	"""emu.write"""		4561870	4					
ANR	4562120	PrimaryExpression	"""emu.write"""		4561870	0					
ANR	4562121	Argument	NULL		4561870	5					
ANR	4562122	Identifier	NULL		4561870	0					
ANR	4562123	ExpressionStatement	"r_config_hold_i ( hc , ""io.cache"" , NULL )"	196:1:6651:6689	4561870	16	True				
ANR	4562124	CallExpression	"r_config_hold_i ( hc , ""io.cache"" , NULL )"		4561870	0					
ANR	4562125	Callee	r_config_hold_i		4561870	0					
ANR	4562126	Identifier	r_config_hold_i		4561870	0					
ANR	4562127	ArgumentList	hc		4561870	1					
ANR	4562128	Argument	hc		4561870	0					
ANR	4562129	Identifier	hc		4561870	0					
ANR	4562130	Argument	"""io.cache"""		4561870	1					
ANR	4562131	PrimaryExpression	"""io.cache"""		4561870	0					
ANR	4562132	Argument	NULL		4561870	2					
ANR	4562133	Identifier	NULL		4561870	0					
ANR	4562134	IfStatement	if ( ! fcn )		4561870	17					
ANR	4562135	Condition	! fcn	197:5:6696:6699	4561870	0	True				
ANR	4562136	UnaryOperationExpression	! fcn		4561870	0					
ANR	4562137	UnaryOperator	!		4561870	0					
ANR	4562138	Identifier	fcn		4561870	1					
ANR	4562139	CompoundStatement		29:11:1049:1049	4561870	1					
ANR	4562140	Statement	eprintf	198:2:6706:6712	4561870	0	True				
ANR	4562141	Statement	(	198:10:6714:6714	4561870	1	True				
ANR	4562142	Statement	"""Cannot find function in 0x%08"""	198:11:6715:6745	4561870	2	True				
ANR	4562143	Statement	PFMT64x	198:42:6746:6752	4561870	3	True				
ANR	4562144	Statement	"""\\n"""	198:49:6753:6756	4561870	4	True				
ANR	4562145	Statement	","	198:53:6757:6757	4561870	5	True				
ANR	4562146	Statement	core	198:55:6759:6762	4561870	6	True				
ANR	4562147	Statement	->	198:59:6763:6764	4561870	7	True				
ANR	4562148	Statement	offset	198:61:6765:6770	4561870	8	True				
ANR	4562149	Statement	)	198:67:6771:6771	4561870	9	True				
ANR	4562150	ExpressionStatement		198:68:6772:6772	4561870	10	True				
ANR	4562151	ExpressionStatement	r_config_hold_free ( hc )	199:2:6776:6799	4561870	11	True				
ANR	4562152	CallExpression	r_config_hold_free ( hc )		4561870	0					
ANR	4562153	Callee	r_config_hold_free		4561870	0					
ANR	4562154	Identifier	r_config_hold_free		4561870	0					
ANR	4562155	ArgumentList	hc		4561870	1					
ANR	4562156	Argument	hc		4561870	0					
ANR	4562157	Identifier	hc		4561870	0					
ANR	4562158	ReturnStatement	return false ;	200:2:6803:6815	4561870	12	True				
ANR	4562159	Identifier	false		4561870	0					
ANR	4562160	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"	202:1:6821:6866	4561870	18	True				
ANR	4562161	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"		4561870	0					
ANR	4562162	Callee	r_config_set_i		4561870	0					
ANR	4562163	Identifier	r_config_set_i		4561870	0					
ANR	4562164	ArgumentList	core -> config		4561870	1					
ANR	4562165	Argument	core -> config		4561870	0					
ANR	4562166	PtrMemberAccess	core -> config		4561870	0					
ANR	4562167	Identifier	core		4561870	0					
ANR	4562168	Identifier	config		4561870	1					
ANR	4562169	Argument	"""scr.color"""		4561870	1					
ANR	4562170	PrimaryExpression	"""scr.color"""		4561870	0					
ANR	4562171	Argument	0		4561870	2					
ANR	4562172	PrimaryExpression	0		4561870	0					
ANR	4562173	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.stackptr"" , 0 )"	203:1:6869:6917	4561870	19	True				
ANR	4562174	CallExpression	"r_config_set_i ( core -> config , ""asm.stackptr"" , 0 )"		4561870	0					
ANR	4562175	Callee	r_config_set_i		4561870	0					
ANR	4562176	Identifier	r_config_set_i		4561870	0					
ANR	4562177	ArgumentList	core -> config		4561870	1					
ANR	4562178	Argument	core -> config		4561870	0					
ANR	4562179	PtrMemberAccess	core -> config		4561870	0					
ANR	4562180	Identifier	core		4561870	0					
ANR	4562181	Identifier	config		4561870	1					
ANR	4562182	Argument	"""asm.stackptr"""		4561870	1					
ANR	4562183	PrimaryExpression	"""asm.stackptr"""		4561870	0					
ANR	4562184	Argument	0		4561870	2					
ANR	4562185	PrimaryExpression	0		4561870	0					
ANR	4562186	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pseudo"" , 1 )"	204:1:6920:6966	4561870	20	True				
ANR	4562187	CallExpression	"r_config_set_i ( core -> config , ""asm.pseudo"" , 1 )"		4561870	0					
ANR	4562188	Callee	r_config_set_i		4561870	0					
ANR	4562189	Identifier	r_config_set_i		4561870	0					
ANR	4562190	ArgumentList	core -> config		4561870	1					
ANR	4562191	Argument	core -> config		4561870	0					
ANR	4562192	PtrMemberAccess	core -> config		4561870	0					
ANR	4562193	Identifier	core		4561870	0					
ANR	4562194	Identifier	config		4561870	1					
ANR	4562195	Argument	"""asm.pseudo"""		4561870	1					
ANR	4562196	PrimaryExpression	"""asm.pseudo"""		4561870	0					
ANR	4562197	Argument	1		4561870	2					
ANR	4562198	PrimaryExpression	1		4561870	0					
ANR	4562199	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.decode"" , 0 )"	205:1:6969:7015	4561870	21	True				
ANR	4562200	CallExpression	"r_config_set_i ( core -> config , ""asm.decode"" , 0 )"		4561870	0					
ANR	4562201	Callee	r_config_set_i		4561870	0					
ANR	4562202	Identifier	r_config_set_i		4561870	0					
ANR	4562203	ArgumentList	core -> config		4561870	1					
ANR	4562204	Argument	core -> config		4561870	0					
ANR	4562205	PtrMemberAccess	core -> config		4561870	0					
ANR	4562206	Identifier	core		4561870	0					
ANR	4562207	Identifier	config		4561870	1					
ANR	4562208	Argument	"""asm.decode"""		4561870	1					
ANR	4562209	PrimaryExpression	"""asm.decode"""		4561870	0					
ANR	4562210	Argument	0		4561870	2					
ANR	4562211	PrimaryExpression	0		4561870	0					
ANR	4562212	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.filter"" , 1 )"	206:1:7018:7064	4561870	22	True				
ANR	4562213	CallExpression	"r_config_set_i ( core -> config , ""asm.filter"" , 1 )"		4561870	0					
ANR	4562214	Callee	r_config_set_i		4561870	0					
ANR	4562215	Identifier	r_config_set_i		4561870	0					
ANR	4562216	ArgumentList	core -> config		4561870	1					
ANR	4562217	Argument	core -> config		4561870	0					
ANR	4562218	PtrMemberAccess	core -> config		4561870	0					
ANR	4562219	Identifier	core		4561870	0					
ANR	4562220	Identifier	config		4561870	1					
ANR	4562221	Argument	"""asm.filter"""		4561870	1					
ANR	4562222	PrimaryExpression	"""asm.filter"""		4561870	0					
ANR	4562223	Argument	1		4561870	2					
ANR	4562224	PrimaryExpression	1		4561870	0					
ANR	4562225	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"	207:1:7067:7112	4561870	23	True				
ANR	4562226	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"		4561870	0					
ANR	4562227	Callee	r_config_set_i		4561870	0					
ANR	4562228	Identifier	r_config_set_i		4561870	0					
ANR	4562229	ArgumentList	core -> config		4561870	1					
ANR	4562230	Argument	core -> config		4561870	0					
ANR	4562231	PtrMemberAccess	core -> config		4561870	0					
ANR	4562232	Identifier	core		4561870	0					
ANR	4562233	Identifier	config		4561870	1					
ANR	4562234	Argument	"""asm.lines"""		4561870	1					
ANR	4562235	PrimaryExpression	"""asm.lines"""		4561870	0					
ANR	4562236	Argument	0		4561870	2					
ANR	4562237	PrimaryExpression	0		4561870	0					
ANR	4562238	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"	208:1:7115:7160	4561870	24	True				
ANR	4562239	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"		4561870	0					
ANR	4562240	Callee	r_config_set_i		4561870	0					
ANR	4562241	Identifier	r_config_set_i		4561870	0					
ANR	4562242	ArgumentList	core -> config		4561870	1					
ANR	4562243	Argument	core -> config		4561870	0					
ANR	4562244	PtrMemberAccess	core -> config		4561870	0					
ANR	4562245	Identifier	core		4561870	0					
ANR	4562246	Identifier	config		4561870	1					
ANR	4562247	Argument	"""asm.bytes"""		4561870	1					
ANR	4562248	PrimaryExpression	"""asm.bytes"""		4561870	0					
ANR	4562249	Argument	0		4561870	2					
ANR	4562250	PrimaryExpression	0		4561870	0					
ANR	4562251	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"	209:1:7163:7209	4561870	25	True				
ANR	4562252	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"		4561870	0					
ANR	4562253	Callee	r_config_set_i		4561870	0					
ANR	4562254	Identifier	r_config_set_i		4561870	0					
ANR	4562255	ArgumentList	core -> config		4561870	1					
ANR	4562256	Argument	core -> config		4561870	0					
ANR	4562257	PtrMemberAccess	core -> config		4561870	0					
ANR	4562258	Identifier	core		4561870	0					
ANR	4562259	Identifier	config		4561870	1					
ANR	4562260	Argument	"""asm.offset"""		4561870	1					
ANR	4562261	PrimaryExpression	"""asm.offset"""		4561870	0					
ANR	4562262	Argument	0		4561870	2					
ANR	4562263	PrimaryExpression	0		4561870	0					
ANR	4562264	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.flags"" , 0 )"	210:1:7212:7257	4561870	26	True				
ANR	4562265	CallExpression	"r_config_set_i ( core -> config , ""asm.flags"" , 0 )"		4561870	0					
ANR	4562266	Callee	r_config_set_i		4561870	0					
ANR	4562267	Identifier	r_config_set_i		4561870	0					
ANR	4562268	ArgumentList	core -> config		4561870	1					
ANR	4562269	Argument	core -> config		4561870	0					
ANR	4562270	PtrMemberAccess	core -> config		4561870	0					
ANR	4562271	Identifier	core		4561870	0					
ANR	4562272	Identifier	config		4561870	1					
ANR	4562273	Argument	"""asm.flags"""		4561870	1					
ANR	4562274	PrimaryExpression	"""asm.flags"""		4561870	0					
ANR	4562275	Argument	0		4561870	2					
ANR	4562276	PrimaryExpression	0		4561870	0					
ANR	4562277	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.emu"" , 1 )"	211:1:7260:7303	4561870	27	True				
ANR	4562278	CallExpression	"r_config_set_i ( core -> config , ""asm.emu"" , 1 )"		4561870	0					
ANR	4562279	Callee	r_config_set_i		4561870	0					
ANR	4562280	Identifier	r_config_set_i		4561870	0					
ANR	4562281	ArgumentList	core -> config		4561870	1					
ANR	4562282	Argument	core -> config		4561870	0					
ANR	4562283	PtrMemberAccess	core -> config		4561870	0					
ANR	4562284	Identifier	core		4561870	0					
ANR	4562285	Identifier	config		4561870	1					
ANR	4562286	Argument	"""asm.emu"""		4561870	1					
ANR	4562287	PrimaryExpression	"""asm.emu"""		4561870	0					
ANR	4562288	Argument	1		4561870	2					
ANR	4562289	PrimaryExpression	1		4561870	0					
ANR	4562290	ExpressionStatement	"r_config_set_i ( core -> config , ""emu.str"" , 1 )"	212:1:7306:7349	4561870	28	True				
ANR	4562291	CallExpression	"r_config_set_i ( core -> config , ""emu.str"" , 1 )"		4561870	0					
ANR	4562292	Callee	r_config_set_i		4561870	0					
ANR	4562293	Identifier	r_config_set_i		4561870	0					
ANR	4562294	ArgumentList	core -> config		4561870	1					
ANR	4562295	Argument	core -> config		4561870	0					
ANR	4562296	PtrMemberAccess	core -> config		4561870	0					
ANR	4562297	Identifier	core		4561870	0					
ANR	4562298	Identifier	config		4561870	1					
ANR	4562299	Argument	"""emu.str"""		4561870	1					
ANR	4562300	PrimaryExpression	"""emu.str"""		4561870	0					
ANR	4562301	Argument	1		4561870	2					
ANR	4562302	PrimaryExpression	1		4561870	0					
ANR	4562303	ExpressionStatement	"r_config_set_i ( core -> config , ""emu.write"" , 1 )"	213:1:7352:7397	4561870	29	True				
ANR	4562304	CallExpression	"r_config_set_i ( core -> config , ""emu.write"" , 1 )"		4561870	0					
ANR	4562305	Callee	r_config_set_i		4561870	0					
ANR	4562306	Identifier	r_config_set_i		4561870	0					
ANR	4562307	ArgumentList	core -> config		4561870	1					
ANR	4562308	Argument	core -> config		4561870	0					
ANR	4562309	PtrMemberAccess	core -> config		4561870	0					
ANR	4562310	Identifier	core		4561870	0					
ANR	4562311	Identifier	config		4561870	1					
ANR	4562312	Argument	"""emu.write"""		4561870	1					
ANR	4562313	PrimaryExpression	"""emu.write"""		4561870	0					
ANR	4562314	Argument	1		4561870	2					
ANR	4562315	PrimaryExpression	1		4561870	0					
ANR	4562316	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"	214:1:7400:7449	4561870	30	True				
ANR	4562317	CallExpression	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"		4561870	0					
ANR	4562318	Callee	r_config_set_i		4561870	0					
ANR	4562319	Identifier	r_config_set_i		4561870	0					
ANR	4562320	ArgumentList	core -> config		4561870	1					
ANR	4562321	Argument	core -> config		4561870	0					
ANR	4562322	PtrMemberAccess	core -> config		4561870	0					
ANR	4562323	Identifier	core		4561870	0					
ANR	4562324	Identifier	config		4561870	1					
ANR	4562325	Argument	"""asm.lines.fcn"""		4561870	1					
ANR	4562326	PrimaryExpression	"""asm.lines.fcn"""		4561870	0					
ANR	4562327	Argument	0		4561870	2					
ANR	4562328	PrimaryExpression	0		4561870	0					
ANR	4562329	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.comments"" , 1 )"	215:1:7452:7500	4561870	31	True				
ANR	4562330	CallExpression	"r_config_set_i ( core -> config , ""asm.comments"" , 1 )"		4561870	0					
ANR	4562331	Callee	r_config_set_i		4561870	0					
ANR	4562332	Identifier	r_config_set_i		4561870	0					
ANR	4562333	ArgumentList	core -> config		4561870	1					
ANR	4562334	Argument	core -> config		4561870	0					
ANR	4562335	PtrMemberAccess	core -> config		4561870	0					
ANR	4562336	Identifier	core		4561870	0					
ANR	4562337	Identifier	config		4561870	1					
ANR	4562338	Argument	"""asm.comments"""		4561870	1					
ANR	4562339	PrimaryExpression	"""asm.comments"""		4561870	0					
ANR	4562340	Argument	1		4561870	2					
ANR	4562341	PrimaryExpression	1		4561870	0					
ANR	4562342	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.functions"" , 0 )"	216:1:7503:7552	4561870	32	True				
ANR	4562343	CallExpression	"r_config_set_i ( core -> config , ""asm.functions"" , 0 )"		4561870	0					
ANR	4562344	Callee	r_config_set_i		4561870	0					
ANR	4562345	Identifier	r_config_set_i		4561870	0					
ANR	4562346	ArgumentList	core -> config		4561870	1					
ANR	4562347	Argument	core -> config		4561870	0					
ANR	4562348	PtrMemberAccess	core -> config		4561870	0					
ANR	4562349	Identifier	core		4561870	0					
ANR	4562350	Identifier	config		4561870	1					
ANR	4562351	Argument	"""asm.functions"""		4561870	1					
ANR	4562352	PrimaryExpression	"""asm.functions"""		4561870	0					
ANR	4562353	Argument	0		4561870	2					
ANR	4562354	PrimaryExpression	0		4561870	0					
ANR	4562355	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"	217:1:7555:7599	4561870	33	True				
ANR	4562356	CallExpression	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"		4561870	0					
ANR	4562357	Callee	r_config_set_i		4561870	0					
ANR	4562358	Identifier	r_config_set_i		4561870	0					
ANR	4562359	ArgumentList	core -> config		4561870	1					
ANR	4562360	Argument	core -> config		4561870	0					
ANR	4562361	PtrMemberAccess	core -> config		4561870	0					
ANR	4562362	Identifier	core		4561870	0					
ANR	4562363	Identifier	config		4561870	1					
ANR	4562364	Argument	"""asm.tabs"""		4561870	1					
ANR	4562365	PrimaryExpression	"""asm.tabs"""		4561870	0					
ANR	4562366	Argument	0		4561870	2					
ANR	4562367	PrimaryExpression	0		4561870	0					
ANR	4562368	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.section"" , 0 )"	218:1:7602:7649	4561870	34	True				
ANR	4562369	CallExpression	"r_config_set_i ( core -> config , ""asm.section"" , 0 )"		4561870	0					
ANR	4562370	Callee	r_config_set_i		4561870	0					
ANR	4562371	Identifier	r_config_set_i		4561870	0					
ANR	4562372	ArgumentList	core -> config		4561870	1					
ANR	4562373	Argument	core -> config		4561870	0					
ANR	4562374	PtrMemberAccess	core -> config		4561870	0					
ANR	4562375	Identifier	core		4561870	0					
ANR	4562376	Identifier	config		4561870	1					
ANR	4562377	Argument	"""asm.section"""		4561870	1					
ANR	4562378	PrimaryExpression	"""asm.section"""		4561870	0					
ANR	4562379	Argument	0		4561870	2					
ANR	4562380	PrimaryExpression	0		4561870	0					
ANR	4562381	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 30 )"	219:1:7652:7700	4561870	35	True				
ANR	4562382	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 30 )"		4561870	0					
ANR	4562383	Callee	r_config_set_i		4561870	0					
ANR	4562384	Identifier	r_config_set_i		4561870	0					
ANR	4562385	ArgumentList	core -> config		4561870	1					
ANR	4562386	Argument	core -> config		4561870	0					
ANR	4562387	PtrMemberAccess	core -> config		4561870	0					
ANR	4562388	Identifier	core		4561870	0					
ANR	4562389	Identifier	config		4561870	1					
ANR	4562390	Argument	"""asm.cmt.col"""		4561870	1					
ANR	4562391	PrimaryExpression	"""asm.cmt.col"""		4561870	0					
ANR	4562392	Argument	30		4561870	2					
ANR	4562393	PrimaryExpression	30		4561870	0					
ANR	4562394	ExpressionStatement	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"	220:1:7703:7747	4561870	36	True				
ANR	4562395	CallExpression	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"		4561870	0					
ANR	4562396	Callee	r_config_set_i		4561870	0					
ANR	4562397	Identifier	r_config_set_i		4561870	0					
ANR	4562398	ArgumentList	core -> config		4561870	1					
ANR	4562399	Argument	core -> config		4561870	0					
ANR	4562400	PtrMemberAccess	core -> config		4561870	0					
ANR	4562401	Identifier	core		4561870	0					
ANR	4562402	Identifier	config		4561870	1					
ANR	4562403	Argument	"""io.cache"""		4561870	1					
ANR	4562404	PrimaryExpression	"""io.cache"""		4561870	0					
ANR	4562405	Argument	1		4561870	2					
ANR	4562406	PrimaryExpression	1		4561870	0					
ANR	4562407	ExpressionStatement	"r_core_cmd0 ( core , ""aeim"" )"	221:1:7750:7776	4561870	37	True				
ANR	4562408	CallExpression	"r_core_cmd0 ( core , ""aeim"" )"		4561870	0					
ANR	4562409	Callee	r_core_cmd0		4561870	0					
ANR	4562410	Identifier	r_core_cmd0		4561870	0					
ANR	4562411	ArgumentList	core		4561870	1					
ANR	4562412	Argument	core		4561870	0					
ANR	4562413	Identifier	core		4561870	0					
ANR	4562414	Argument	"""aeim"""		4561870	1					
ANR	4562415	PrimaryExpression	"""aeim"""		4561870	0					
ANR	4562416	ExpressionStatement	db = sdb_new0 ( )	223:1:7780:7796	4561870	38	True				
ANR	4562417	AssignmentExpression	db = sdb_new0 ( )		4561870	0		=			
ANR	4562418	Identifier	db		4561870	0					
ANR	4562419	CallExpression	sdb_new0 ( )		4561870	1					
ANR	4562420	Callee	sdb_new0		4561870	0					
ANR	4562421	Identifier	sdb_new0		4561870	0					
ANR	4562422	ArgumentList			4561870	1					
ANR	4562423	IdentifierDeclStatement	RAnalBlock * bb = r_list_first ( fcn -> bbs ) ;	229:1:7930:7970	4561870	39	True				
ANR	4562424	IdentifierDecl	* bb = r_list_first ( fcn -> bbs )		4561870	0					
ANR	4562425	IdentifierDeclType	RAnalBlock *		4561870	0					
ANR	4562426	Identifier	bb		4561870	1					
ANR	4562427	AssignmentExpression	* bb = r_list_first ( fcn -> bbs )		4561870	2		=			
ANR	4562428	Identifier	bb		4561870	0					
ANR	4562429	CallExpression	r_list_first ( fcn -> bbs )		4561870	1					
ANR	4562430	Callee	r_list_first		4561870	0					
ANR	4562431	Identifier	r_list_first		4561870	0					
ANR	4562432	ArgumentList	fcn -> bbs		4561870	1					
ANR	4562433	Argument	fcn -> bbs		4561870	0					
ANR	4562434	PtrMemberAccess	fcn -> bbs		4561870	0					
ANR	4562435	Identifier	fcn		4561870	0					
ANR	4562436	Identifier	bbs		4561870	1					
ANR	4562437	IdentifierDeclStatement	char indentstr [ 1024 ] = { 0 } ;	230:1:7973:7999	4561870	40	True				
ANR	4562438	IdentifierDecl	indentstr [ 1024 ] = { 0 }		4561870	0					
ANR	4562439	IdentifierDeclType	char [ 1024 ]		4561870	0					
ANR	4562440	Identifier	indentstr		4561870	1					
ANR	4562441	PrimaryExpression	1024		4561870	2					
ANR	4562442	AssignmentExpression	indentstr [ 1024 ] = { 0 }		4561870	3		=			
ANR	4562443	Identifier	indentstr		4561870	0					
ANR	4562444	InitializerList	0		4561870	1					
ANR	4562445	PrimaryExpression	0		4561870	0					
ANR	4562446	IdentifierDeclStatement	int n_bb = r_list_length ( fcn -> bbs ) ;	231:1:8002:8037	4561870	41	True				
ANR	4562447	IdentifierDecl	n_bb = r_list_length ( fcn -> bbs )		4561870	0					
ANR	4562448	IdentifierDeclType	int		4561870	0					
ANR	4562449	Identifier	n_bb		4561870	1					
ANR	4562450	AssignmentExpression	n_bb = r_list_length ( fcn -> bbs )		4561870	2		=			
ANR	4562451	Identifier	n_bb		4561870	0					
ANR	4562452	CallExpression	r_list_length ( fcn -> bbs )		4561870	1					
ANR	4562453	Callee	r_list_length		4561870	0					
ANR	4562454	Identifier	r_list_length		4561870	0					
ANR	4562455	ArgumentList	fcn -> bbs		4561870	1					
ANR	4562456	Argument	fcn -> bbs		4561870	0					
ANR	4562457	PtrMemberAccess	fcn -> bbs		4561870	0					
ANR	4562458	Identifier	fcn		4561870	0					
ANR	4562459	Identifier	bbs		4561870	1					
ANR	4562460	ExpressionStatement	"r_cons_printf ( ""function %s () {"" , fcn -> name )"	232:1:8040:8085	4561870	42	True				
ANR	4562461	CallExpression	"r_cons_printf ( ""function %s () {"" , fcn -> name )"		4561870	0					
ANR	4562462	Callee	r_cons_printf		4561870	0					
ANR	4562463	Identifier	r_cons_printf		4561870	0					
ANR	4562464	ArgumentList	"""function %s () {"""		4561870	1					
ANR	4562465	Argument	"""function %s () {"""		4561870	0					
ANR	4562466	PrimaryExpression	"""function %s () {"""		4561870	0					
ANR	4562467	Argument	fcn -> name		4561870	1					
ANR	4562468	PtrMemberAccess	fcn -> name		4561870	0					
ANR	4562469	Identifier	fcn		4561870	0					
ANR	4562470	Identifier	name		4561870	1					
ANR	4562471	IdentifierDeclStatement	int indent = 1 ;	233:1:8088:8102	4561870	43	True				
ANR	4562472	IdentifierDecl	indent = 1		4561870	0					
ANR	4562473	IdentifierDeclType	int		4561870	0					
ANR	4562474	Identifier	indent		4561870	1					
ANR	4562475	AssignmentExpression	indent = 1		4561870	2		=			
ANR	4562476	Identifier	indent		4561870	0					
ANR	4562477	PrimaryExpression	1		4561870	1					
ANR	4562478	IdentifierDeclStatement	int nindent = 1 ;	234:1:8105:8120	4561870	44	True				
ANR	4562479	IdentifierDecl	nindent = 1		4561870	0					
ANR	4562480	IdentifierDeclType	int		4561870	0					
ANR	4562481	Identifier	nindent		4561870	1					
ANR	4562482	AssignmentExpression	nindent = 1		4561870	2		=			
ANR	4562483	Identifier	nindent		4561870	0					
ANR	4562484	PrimaryExpression	1		4561870	1					
ANR	4562485	IdentifierDeclStatement	RList * visited = r_list_newf ( NULL ) ;	235:1:8123:8158	4561870	45	True				
ANR	4562486	IdentifierDecl	* visited = r_list_newf ( NULL )		4561870	0					
ANR	4562487	IdentifierDeclType	RList *		4561870	0					
ANR	4562488	Identifier	visited		4561870	1					
ANR	4562489	AssignmentExpression	* visited = r_list_newf ( NULL )		4561870	2		=			
ANR	4562490	Identifier	visited		4561870	0					
ANR	4562491	CallExpression	r_list_newf ( NULL )		4561870	1					
ANR	4562492	Callee	r_list_newf		4561870	0					
ANR	4562493	Identifier	r_list_newf		4561870	0					
ANR	4562494	ArgumentList	NULL		4561870	1					
ANR	4562495	Argument	NULL		4561870	0					
ANR	4562496	Identifier	NULL		4561870	0					
ANR	4562497	ExpressionStatement	"r_cons_printf ( ""\\n    //  %d basic blocks\\n"" , n_bb )"	236:1:8161:8212	4561870	46	True				
ANR	4562498	CallExpression	"r_cons_printf ( ""\\n    //  %d basic blocks\\n"" , n_bb )"		4561870	0					
ANR	4562499	Callee	r_cons_printf		4561870	0					
ANR	4562500	Identifier	r_cons_printf		4561870	0					
ANR	4562501	ArgumentList	"""\\n    //  %d basic blocks\\n"""		4561870	1					
ANR	4562502	Argument	"""\\n    //  %d basic blocks\\n"""		4561870	0					
ANR	4562503	PrimaryExpression	"""\\n    //  %d basic blocks\\n"""		4561870	0					
ANR	4562504	Argument	n_bb		4561870	1					
ANR	4562505	Identifier	n_bb		4561870	0					
ANR	4562506	DoStatement	do		4561870	47					
ANR	4562507	CompoundStatement		94:2:3406:3429	4561870	0					
ANR	4562508	Statement	define	238:1:8221:8226	4561870	0	True				
ANR	4562509	Statement	I_TAB	238:8:8228:8232	4561870	1	True				
ANR	4562510	Statement	4	238:14:8234:8234	4561870	2	True				
ANR	4562511	Statement	define	239:1:8237:8242	4561870	3	True				
ANR	4562512	Statement	K_MARK	239:8:8244:8249	4561870	4	True				
ANR	4562513	Statement	(	239:14:8250:8250	4561870	5	True				
ANR	4562514	Statement	x	239:15:8251:8251	4561870	6	True				
ANR	4562515	Statement	)	239:16:8252:8252	4561870	7	True				
ANR	4562516	Statement	sdb_fmt	239:18:8254:8260	4561870	8	True				
ANR	4562517	Statement	(	239:25:8261:8261	4561870	9	True				
ANR	4562518	Statement	"""mark.%"""	239:26:8262:8269	4561870	10	True				
ANR	4562519	Statement	PFMT64x	239:34:8270:8276	4561870	11	True				
ANR	4562520	Statement	","	239:41:8277:8277	4561870	12	True				
ANR	4562521	Statement	x	239:42:8278:8278	4561870	13	True				
ANR	4562522	Statement	)	239:43:8279:8279	4561870	14	True				
ANR	4562523	Statement	define	240:1:8282:8287	4561870	15	True				
ANR	4562524	Statement	K_ELSE	240:8:8289:8294	4561870	16	True				
ANR	4562525	Statement	(	240:14:8295:8295	4561870	17	True				
ANR	4562526	Statement	x	240:15:8296:8296	4561870	18	True				
ANR	4562527	Statement	)	240:16:8297:8297	4561870	19	True				
ANR	4562528	Statement	sdb_fmt	240:18:8299:8305	4561870	20	True				
ANR	4562529	Statement	(	240:25:8306:8306	4561870	21	True				
ANR	4562530	Statement	"""else.%"""	240:26:8307:8314	4561870	22	True				
ANR	4562531	Statement	PFMT64x	240:34:8315:8321	4561870	23	True				
ANR	4562532	Statement	","	240:41:8322:8322	4561870	24	True				
ANR	4562533	Statement	x	240:42:8323:8323	4561870	25	True				
ANR	4562534	Statement	)	240:43:8324:8324	4561870	26	True				
ANR	4562535	Statement	define	241:1:8327:8332	4561870	27	True				
ANR	4562536	Statement	K_INDENT	241:8:8334:8341	4561870	28	True				
ANR	4562537	Statement	(	241:16:8342:8342	4561870	29	True				
ANR	4562538	Statement	x	241:17:8343:8343	4561870	30	True				
ANR	4562539	Statement	)	241:18:8344:8344	4561870	31	True				
ANR	4562540	Statement	sdb_fmt	241:20:8346:8352	4561870	32	True				
ANR	4562541	Statement	(	241:27:8353:8353	4561870	33	True				
ANR	4562542	Statement	"""loc.%"""	241:28:8354:8360	4561870	34	True				
ANR	4562543	Statement	PFMT64x	241:35:8361:8367	4561870	35	True				
ANR	4562544	Statement	","	241:42:8368:8368	4561870	36	True				
ANR	4562545	Statement	x	241:43:8369:8369	4561870	37	True				
ANR	4562546	Statement	)	241:44:8370:8370	4561870	38	True				
ANR	4562547	Statement	define	242:1:8373:8378	4561870	39	True				
ANR	4562548	Statement	SET_INDENT	242:8:8380:8389	4561870	40	True				
ANR	4562549	Statement	(	242:18:8390:8390	4561870	41	True				
ANR	4562550	Statement	x	242:19:8391:8391	4561870	42	True				
ANR	4562551	Statement	)	242:20:8392:8392	4561870	43	True				
ANR	4562552	CompoundStatement		74:22:2741:2741	4561870	44					
ANR	4562553	ExpressionStatement	( x ) = ( x ) > 0 ? ( x ) : 1	242:24:8396:8413	4561870	0	True				
ANR	4562554	AssignmentExpression	( x ) = ( x ) > 0 ? ( x ) : 1		4561870	0		=			
ANR	4562555	Identifier	x		4561870	0					
ANR	4562556	ConditionalExpression	( x ) > 0 ? ( x ) : 1		4561870	1					
ANR	4562557	Condition	( x ) > 0		4561870	0					
ANR	4562558	RelationalExpression	( x ) > 0		4561870	0		>			
ANR	4562559	Identifier	x		4561870	0					
ANR	4562560	PrimaryExpression	0		4561870	1					
ANR	4562561	Identifier	x		4561870	1					
ANR	4562562	PrimaryExpression	1		4561870	2					
ANR	4562563	ExpressionStatement	"memset ( indentstr , ' ' , ( x ) * I_TAB )"	242:43:8415:8449	4561870	1	True				
ANR	4562564	CallExpression	"memset ( indentstr , ' ' , ( x ) * I_TAB )"		4561870	0					
ANR	4562565	Callee	memset		4561870	0					
ANR	4562566	Identifier	memset		4561870	0					
ANR	4562567	ArgumentList	indentstr		4561870	1					
ANR	4562568	Argument	indentstr		4561870	0					
ANR	4562569	Identifier	indentstr		4561870	0					
ANR	4562570	Argument	' '		4561870	1					
ANR	4562571	PrimaryExpression	' '		4561870	0					
ANR	4562572	Argument	( x ) * I_TAB		4561870	2					
ANR	4562573	CastExpression	( x ) * I_TAB		4561870	0					
ANR	4562574	CastTarget	x		4561870	0					
ANR	4562575	UnaryOperationExpression	* I_TAB		4561870	1					
ANR	4562576	UnaryOperator	*		4561870	0					
ANR	4562577	Identifier	I_TAB		4561870	1					
ANR	4562578	ExpressionStatement	indentstr [ ( ( x ) * I_TAB ) - 2 ] = 0	242:79:8451:8480	4561870	2	True				
ANR	4562579	AssignmentExpression	indentstr [ ( ( x ) * I_TAB ) - 2 ] = 0		4561870	0		=			
ANR	4562580	ArrayIndexing	indentstr [ ( ( x ) * I_TAB ) - 2 ]		4561870	0					
ANR	4562581	Identifier	indentstr		4561870	0					
ANR	4562582	AdditiveExpression	( ( x ) * I_TAB ) - 2		4561870	1		-			
ANR	4562583	CastExpression	( x ) * I_TAB		4561870	0					
ANR	4562584	CastTarget	x		4561870	0					
ANR	4562585	UnaryOperationExpression	* I_TAB		4561870	1					
ANR	4562586	UnaryOperator	*		4561870	0					
ANR	4562587	Identifier	I_TAB		4561870	1					
ANR	4562588	PrimaryExpression	2		4561870	1					
ANR	4562589	PrimaryExpression	0		4561870	1					
ANR	4562590	IfStatement	if ( ! bb )		4561870	45					
ANR	4562591	Condition	! bb	243:6:8490:8492	4561870	0	True				
ANR	4562592	UnaryOperationExpression	! bb		4561870	0					
ANR	4562593	UnaryOperator	!		4561870	0					
ANR	4562594	Identifier	bb		4561870	1					
ANR	4562595	CompoundStatement		75:11:2842:2842	4561870	1					
ANR	4562596	BreakStatement	break ;	244:3:8500:8505	4561870	0	True				
ANR	4562597	ExpressionStatement	"r_list_append ( visited , bb )"	246:2:8513:8540	4561870	46	True				
ANR	4562598	CallExpression	"r_list_append ( visited , bb )"		4561870	0					
ANR	4562599	Callee	r_list_append		4561870	0					
ANR	4562600	Identifier	r_list_append		4561870	0					
ANR	4562601	ArgumentList	visited		4561870	1					
ANR	4562602	Argument	visited		4561870	0					
ANR	4562603	Identifier	visited		4561870	0					
ANR	4562604	Argument	bb		4561870	1					
ANR	4562605	Identifier	bb		4561870	0					
ANR	4562606	ExpressionStatement	r_cons_push ( )	247:2:8544:8558	4561870	47	True				
ANR	4562607	CallExpression	r_cons_push ( )		4561870	0					
ANR	4562608	Callee	r_cons_push		4561870	0					
ANR	4562609	Identifier	r_cons_push		4561870	0					
ANR	4562610	ArgumentList			4561870	1					
ANR	4562611	IdentifierDeclStatement	"bool html = r_config_get_i ( core -> config , ""scr.html"" ) ;"	248:2:8562:8615	4561870	48	True				
ANR	4562612	IdentifierDecl	"html = r_config_get_i ( core -> config , ""scr.html"" )"		4561870	0					
ANR	4562613	IdentifierDeclType	bool		4561870	0					
ANR	4562614	Identifier	html		4561870	1					
ANR	4562615	AssignmentExpression	"html = r_config_get_i ( core -> config , ""scr.html"" )"		4561870	2		=			
ANR	4562616	Identifier	html		4561870	0					
ANR	4562617	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		4561870	1					
ANR	4562618	Callee	r_config_get_i		4561870	0					
ANR	4562619	Identifier	r_config_get_i		4561870	0					
ANR	4562620	ArgumentList	core -> config		4561870	1					
ANR	4562621	Argument	core -> config		4561870	0					
ANR	4562622	PtrMemberAccess	core -> config		4561870	0					
ANR	4562623	Identifier	core		4561870	0					
ANR	4562624	Identifier	config		4561870	1					
ANR	4562625	Argument	"""scr.html"""		4561870	1					
ANR	4562626	PrimaryExpression	"""scr.html"""		4561870	0					
ANR	4562627	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"	249:2:8619:8663	4561870	49	True				
ANR	4562628	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"		4561870	0					
ANR	4562629	Callee	r_config_set_i		4561870	0					
ANR	4562630	Identifier	r_config_set_i		4561870	0					
ANR	4562631	ArgumentList	core -> config		4561870	1					
ANR	4562632	Argument	core -> config		4561870	0					
ANR	4562633	PtrMemberAccess	core -> config		4561870	0					
ANR	4562634	Identifier	core		4561870	0					
ANR	4562635	Identifier	config		4561870	1					
ANR	4562636	Argument	"""scr.html"""		4561870	1					
ANR	4562637	PrimaryExpression	"""scr.html"""		4561870	0					
ANR	4562638	Argument	0		4561870	2					
ANR	4562639	PrimaryExpression	0		4561870	0					
ANR	4562640	Statement	char	250:2:8667:8670	4561870	50	True				
ANR	4562641	Statement	*	250:7:8672:8672	4561870	51	True				
ANR	4562642	Statement	code	250:8:8673:8676	4561870	52	True				
ANR	4562643	Statement	=	250:13:8678:8678	4561870	53	True				
ANR	4562644	Statement	r_core_cmd_str	250:15:8680:8693	4561870	54	True				
ANR	4562645	Statement	(	250:30:8695:8695	4561870	55	True				
ANR	4562646	Statement	core	250:31:8696:8699	4561870	56	True				
ANR	4562647	Statement	","	250:35:8700:8700	4561870	57	True				
ANR	4562648	Statement	sdb_fmt	250:37:8702:8708	4561870	58	True				
ANR	4562649	Statement	(	250:45:8710:8710	4561870	59	True				
ANR	4562650	Statement	"""pD %d @ 0x%08"""	250:46:8711:8725	4561870	60	True				
ANR	4562651	Statement	PFMT64x	250:61:8726:8732	4561870	61	True				
ANR	4562652	Statement	"""\\n"""	250:68:8733:8736	4561870	62	True				
ANR	4562653	Statement	","	250:72:8737:8737	4561870	63	True				
ANR	4562654	Statement	bb	250:74:8739:8740	4561870	64	True				
ANR	4562655	Statement	->	250:76:8741:8742	4561870	65	True				
ANR	4562656	Statement	size	250:78:8743:8746	4561870	66	True				
ANR	4562657	Statement	","	250:82:8747:8747	4561870	67	True				
ANR	4562658	Statement	bb	250:84:8749:8750	4561870	68	True				
ANR	4562659	Statement	->	250:86:8751:8752	4561870	69	True				
ANR	4562660	Statement	addr	250:88:8753:8756	4561870	70	True				
ANR	4562661	Statement	)	250:92:8757:8757	4561870	71	True				
ANR	4562662	Statement	)	250:93:8758:8758	4561870	72	True				
ANR	4562663	ExpressionStatement		250:94:8759:8759	4561870	73	True				
ANR	4562664	ExpressionStatement	r_cons_pop ( )	251:2:8763:8776	4561870	74	True				
ANR	4562665	CallExpression	r_cons_pop ( )		4561870	0					
ANR	4562666	Callee	r_cons_pop		4561870	0					
ANR	4562667	Identifier	r_cons_pop		4561870	0					
ANR	4562668	ArgumentList			4561870	1					
ANR	4562669	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , html )"	252:2:8780:8827	4561870	75	True				
ANR	4562670	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , html )"		4561870	0					
ANR	4562671	Callee	r_config_set_i		4561870	0					
ANR	4562672	Identifier	r_config_set_i		4561870	0					
ANR	4562673	ArgumentList	core -> config		4561870	1					
ANR	4562674	Argument	core -> config		4561870	0					
ANR	4562675	PtrMemberAccess	core -> config		4561870	0					
ANR	4562676	Identifier	core		4561870	0					
ANR	4562677	Identifier	config		4561870	1					
ANR	4562678	Argument	"""scr.html"""		4561870	1					
ANR	4562679	PrimaryExpression	"""scr.html"""		4561870	0					
ANR	4562680	Argument	html		4561870	2					
ANR	4562681	Identifier	html		4561870	0					
ANR	4562682	IfStatement	if ( indent * I_TAB + 2 >= sizeof ( indentstr ) )		4561870	76					
ANR	4562683	Condition	indent * I_TAB + 2 >= sizeof ( indentstr )	253:6:8835:8874	4561870	0	True				
ANR	4562684	RelationalExpression	indent * I_TAB + 2 >= sizeof ( indentstr )		4561870	0		>=			
ANR	4562685	AdditiveExpression	indent * I_TAB + 2		4561870	0		+			
ANR	4562686	MultiplicativeExpression	indent * I_TAB		4561870	0		*			
ANR	4562687	Identifier	indent		4561870	0					
ANR	4562688	Identifier	I_TAB		4561870	1					
ANR	4562689	PrimaryExpression	2		4561870	1					
ANR	4562690	SizeofExpression	sizeof ( indentstr )		4561870	1					
ANR	4562691	Sizeof	sizeof		4561870	0					
ANR	4562692	SizeofOperand	indentstr		4561870	1					
ANR	4562693	CompoundStatement		85:48:3224:3224	4561870	1					
ANR	4562694	ExpressionStatement	indent = ( sizeof ( indentstr ) / I_TAB ) - 4	254:3:8882:8923	4561870	0	True				
ANR	4562695	AssignmentExpression	indent = ( sizeof ( indentstr ) / I_TAB ) - 4		4561870	0		=			
ANR	4562696	Identifier	indent		4561870	0					
ANR	4562697	AdditiveExpression	( sizeof ( indentstr ) / I_TAB ) - 4		4561870	1		-			
ANR	4562698	MultiplicativeExpression	sizeof ( indentstr ) / I_TAB		4561870	0		/			
ANR	4562699	SizeofExpression	sizeof ( indentstr )		4561870	0					
ANR	4562700	Sizeof	sizeof		4561870	0					
ANR	4562701	SizeofOperand	indentstr		4561870	1					
ANR	4562702	Identifier	I_TAB		4561870	1					
ANR	4562703	PrimaryExpression	4		4561870	1					
ANR	4562704	ExpressionStatement	SET_INDENT ( indent )	256:2:8931:8950	4561870	77	True				
ANR	4562705	CallExpression	SET_INDENT ( indent )		4561870	0					
ANR	4562706	Callee	SET_INDENT		4561870	0					
ANR	4562707	Identifier	SET_INDENT		4561870	0					
ANR	4562708	ArgumentList	indent		4561870	1					
ANR	4562709	Argument	indent		4561870	0					
ANR	4562710	Identifier	indent		4561870	0					
ANR	4562711	ExpressionStatement	"code = r_str_prefix_all ( code , indentstr )"	257:2:8954:8995	4561870	78	True				
ANR	4562712	AssignmentExpression	"code = r_str_prefix_all ( code , indentstr )"		4561870	0		=			
ANR	4562713	Identifier	code		4561870	0					
ANR	4562714	CallExpression	"r_str_prefix_all ( code , indentstr )"		4561870	1					
ANR	4562715	Callee	r_str_prefix_all		4561870	0					
ANR	4562716	Identifier	r_str_prefix_all		4561870	0					
ANR	4562717	ArgumentList	code		4561870	1					
ANR	4562718	Argument	code		4561870	0					
ANR	4562719	Identifier	code		4561870	0					
ANR	4562720	Argument	indentstr		4561870	1					
ANR	4562721	Identifier	indentstr		4561870	0					
ANR	4562722	IfStatement	if ( ! code )		4561870	79					
ANR	4562723	Condition	! code	258:6:9003:9007	4561870	0	True				
ANR	4562724	UnaryOperationExpression	! code		4561870	0					
ANR	4562725	UnaryOperator	!		4561870	0					
ANR	4562726	Identifier	code		4561870	1					
ANR	4562727	CompoundStatement		90:13:3357:3357	4561870	1					
ANR	4562728	ExpressionStatement	"eprintf ( ""No code here\\n"" )"	259:3:9015:9041	4561870	0	True				
ANR	4562729	CallExpression	"eprintf ( ""No code here\\n"" )"		4561870	0					
ANR	4562730	Callee	eprintf		4561870	0					
ANR	4562731	Identifier	eprintf		4561870	0					
ANR	4562732	ArgumentList	"""No code here\\n"""		4561870	1					
ANR	4562733	Argument	"""No code here\\n"""		4561870	0					
ANR	4562734	PrimaryExpression	"""No code here\\n"""		4561870	0					
ANR	4562735	BreakStatement	break ;	260:3:9046:9051	4561870	1	True				
ANR	4562736	IdentifierDeclStatement	int len = strlen ( code ) ;	262:2:9059:9082	4561870	80	True				
ANR	4562737	IdentifierDecl	len = strlen ( code )		4561870	0					
ANR	4562738	IdentifierDeclType	int		4561870	0					
ANR	4562739	Identifier	len		4561870	1					
ANR	4562740	AssignmentExpression	len = strlen ( code )		4561870	2		=			
ANR	4562741	Identifier	len		4561870	0					
ANR	4562742	CallExpression	strlen ( code )		4561870	1					
ANR	4562743	Callee	strlen		4561870	0					
ANR	4562744	Identifier	strlen		4561870	0					
ANR	4562745	ArgumentList	code		4561870	1					
ANR	4562746	Argument	code		4561870	0					
ANR	4562747	Identifier	code		4561870	0					
ANR	4562748	ExpressionStatement	code [ len - 1 ] = 0	263:2:9086:9103	4561870	81	True				
ANR	4562749	AssignmentExpression	code [ len - 1 ] = 0		4561870	0		=			
ANR	4562750	ArrayIndexing	code [ len - 1 ]		4561870	0					
ANR	4562751	Identifier	code		4561870	0					
ANR	4562752	AdditiveExpression	len - 1		4561870	1		-			
ANR	4562753	Identifier	len		4561870	0					
ANR	4562754	PrimaryExpression	1		4561870	1					
ANR	4562755	PrimaryExpression	0		4561870	1					
ANR	4562756	ExpressionStatement	"find_and_change ( code , len )"	264:2:9128:9155	4561870	82	True				
ANR	4562757	CallExpression	"find_and_change ( code , len )"		4561870	0					
ANR	4562758	Callee	find_and_change		4561870	0					
ANR	4562759	Identifier	find_and_change		4561870	0					
ANR	4562760	ArgumentList	code		4561870	1					
ANR	4562761	Argument	code		4561870	0					
ANR	4562762	Identifier	code		4561870	0					
ANR	4562763	Argument	len		4561870	1					
ANR	4562764	Identifier	len		4561870	0					
ANR	4562765	IfStatement	"if ( ! sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 ) )"		4561870	83					
ANR	4562766	Condition	"! sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 )"	265:6:9163:9203	4561870	0	True				
ANR	4562767	UnaryOperationExpression	"! sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 )"		4561870	0					
ANR	4562768	UnaryOperator	!		4561870	0					
ANR	4562769	CallExpression	"sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 )"		4561870	1					
ANR	4562770	Callee	sdb_const_get		4561870	0					
ANR	4562771	Identifier	sdb_const_get		4561870	0					
ANR	4562772	ArgumentList	db		4561870	1					
ANR	4562773	Argument	db		4561870	0					
ANR	4562774	Identifier	db		4561870	0					
ANR	4562775	Argument	K_MARK ( bb -> addr )		4561870	1					
ANR	4562776	CallExpression	K_MARK ( bb -> addr )		4561870	0					
ANR	4562777	Callee	K_MARK		4561870	0					
ANR	4562778	Identifier	K_MARK		4561870	0					
ANR	4562779	ArgumentList	bb -> addr		4561870	1					
ANR	4562780	Argument	bb -> addr		4561870	0					
ANR	4562781	PtrMemberAccess	bb -> addr		4561870	0					
ANR	4562782	Identifier	bb		4561870	0					
ANR	4562783	Identifier	addr		4561870	1					
ANR	4562784	Argument	0		4561870	2					
ANR	4562785	PrimaryExpression	0		4561870	0					
ANR	4562786	CompoundStatement		98:3:3558:3610	4561870	1					
ANR	4562787	IdentifierDeclStatement	bool mustprint = ! queuegoto || queuegoto != bb -> addr ;	266:3:9211:9263	4561870	0	True				
ANR	4562788	IdentifierDecl	mustprint = ! queuegoto || queuegoto != bb -> addr		4561870	0					
ANR	4562789	IdentifierDeclType	bool		4561870	0					
ANR	4562790	Identifier	mustprint		4561870	1					
ANR	4562791	AssignmentExpression	mustprint = ! queuegoto || queuegoto != bb -> addr		4561870	2		=			
ANR	4562792	Identifier	mustprint		4561870	0					
ANR	4562793	OrExpression	! queuegoto || queuegoto != bb -> addr		4561870	1		||			
ANR	4562794	UnaryOperationExpression	! queuegoto		4561870	0					
ANR	4562795	UnaryOperator	!		4561870	0					
ANR	4562796	Identifier	queuegoto		4561870	1					
ANR	4562797	EqualityExpression	queuegoto != bb -> addr		4561870	1		!=			
ANR	4562798	Identifier	queuegoto		4561870	0					
ANR	4562799	PtrMemberAccess	bb -> addr		4561870	1					
ANR	4562800	Identifier	bb		4561870	0					
ANR	4562801	Identifier	addr		4561870	1					
ANR	4562802	IfStatement	if ( mustprint )		4561870	1					
ANR	4562803	Condition	mustprint	267:7:9272:9280	4561870	0	True				
ANR	4562804	Identifier	mustprint		4561870	0					
ANR	4562805	CompoundStatement		99:18:3630:3630	4561870	1					
ANR	4562806	IfStatement	if ( queuegoto )		4561870	0					
ANR	4562807	Condition	queuegoto	268:8:9293:9301	4561870	0	True				
ANR	4562808	Identifier	queuegoto		4561870	0					
ANR	4562809	CompoundStatement		100:19:3651:3651	4561870	1					
ANR	4562810	ExpressionStatement	"r_cons_printf ( ""\\n%s  goto loc_0x%llx"" , indentstr , queuegoto )"	269:5:9311:9378	4561870	0	True				
ANR	4562811	CallExpression	"r_cons_printf ( ""\\n%s  goto loc_0x%llx"" , indentstr , queuegoto )"		4561870	0					
ANR	4562812	Callee	r_cons_printf		4561870	0					
ANR	4562813	Identifier	r_cons_printf		4561870	0					
ANR	4562814	ArgumentList	"""\\n%s  goto loc_0x%llx"""		4561870	1					
ANR	4562815	Argument	"""\\n%s  goto loc_0x%llx"""		4561870	0					
ANR	4562816	PrimaryExpression	"""\\n%s  goto loc_0x%llx"""		4561870	0					
ANR	4562817	Argument	indentstr		4561870	1					
ANR	4562818	Identifier	indentstr		4561870	0					
ANR	4562819	Argument	queuegoto		4561870	2					
ANR	4562820	Identifier	queuegoto		4561870	0					
ANR	4562821	Statement	queuegoto	271:5:9385:9393	4561870	1	True				
ANR	4562822	Statement	=	271:15:9395:9395	4561870	2	True				
ANR	4562823	Statement	0L	271:17:9397:9398	4561870	3	True				
ANR	4562824	ExpressionStatement	L	271:19:9399:9400	4561870	4	True				
ANR	4562825	Identifier	L		4561870	0					
ANR	4562826	ExpressionStatement	"r_cons_printf ( ""\\n%s  loc_0x%llx:\\n"" , indentstr , bb -> addr )"	273:4:9412:9470	4561870	1	True				
ANR	4562827	CallExpression	"r_cons_printf ( ""\\n%s  loc_0x%llx:\\n"" , indentstr , bb -> addr )"		4561870	0					
ANR	4562828	Callee	r_cons_printf		4561870	0					
ANR	4562829	Identifier	r_cons_printf		4561870	0					
ANR	4562830	ArgumentList	"""\\n%s  loc_0x%llx:\\n"""		4561870	1					
ANR	4562831	Argument	"""\\n%s  loc_0x%llx:\\n"""		4561870	0					
ANR	4562832	PrimaryExpression	"""\\n%s  loc_0x%llx:\\n"""		4561870	0					
ANR	4562833	Argument	indentstr		4561870	1					
ANR	4562834	Identifier	indentstr		4561870	0					
ANR	4562835	Argument	bb -> addr		4561870	2					
ANR	4562836	PtrMemberAccess	bb -> addr		4561870	0					
ANR	4562837	Identifier	bb		4561870	0					
ANR	4562838	Identifier	addr		4561870	1					
ANR	4562839	ExpressionStatement	indentstr [ ( indent * I_TAB ) - 2 ] = 0	274:4:9476:9511	4561870	2	True				
ANR	4562840	AssignmentExpression	indentstr [ ( indent * I_TAB ) - 2 ] = 0		4561870	0		=			
ANR	4562841	ArrayIndexing	indentstr [ ( indent * I_TAB ) - 2 ]		4561870	0					
ANR	4562842	Identifier	indentstr		4561870	0					
ANR	4562843	AdditiveExpression	( indent * I_TAB ) - 2		4561870	1		-			
ANR	4562844	MultiplicativeExpression	indent * I_TAB		4561870	0		*			
ANR	4562845	Identifier	indent		4561870	0					
ANR	4562846	Identifier	I_TAB		4561870	1					
ANR	4562847	PrimaryExpression	2		4561870	1					
ANR	4562848	PrimaryExpression	0		4561870	1					
ANR	4562849	ExpressionStatement	"r_cons_printf ( ""\\n%s"" , code )"	275:4:9517:9545	4561870	3	True				
ANR	4562850	CallExpression	"r_cons_printf ( ""\\n%s"" , code )"		4561870	0					
ANR	4562851	Callee	r_cons_printf		4561870	0					
ANR	4562852	Identifier	r_cons_printf		4561870	0					
ANR	4562853	ArgumentList	"""\\n%s"""		4561870	1					
ANR	4562854	Argument	"""\\n%s"""		4561870	0					
ANR	4562855	PrimaryExpression	"""\\n%s"""		4561870	0					
ANR	4562856	Argument	code		4561870	1					
ANR	4562857	Identifier	code		4561870	0					
ANR	4562858	ExpressionStatement	free ( code )	276:4:9551:9562	4561870	4	True				
ANR	4562859	CallExpression	free ( code )		4561870	0					
ANR	4562860	Callee	free		4561870	0					
ANR	4562861	Identifier	free		4561870	0					
ANR	4562862	ArgumentList	code		4561870	1					
ANR	4562863	Argument	code		4561870	0					
ANR	4562864	Identifier	code		4561870	0					
ANR	4562865	ExpressionStatement	"sdb_num_set ( db , K_MARK ( bb -> addr ) , 1 , 0 )"	277:4:9568:9609	4561870	5	True				
ANR	4562866	CallExpression	"sdb_num_set ( db , K_MARK ( bb -> addr ) , 1 , 0 )"		4561870	0					
ANR	4562867	Callee	sdb_num_set		4561870	0					
ANR	4562868	Identifier	sdb_num_set		4561870	0					
ANR	4562869	ArgumentList	db		4561870	1					
ANR	4562870	Argument	db		4561870	0					
ANR	4562871	Identifier	db		4561870	0					
ANR	4562872	Argument	K_MARK ( bb -> addr )		4561870	1					
ANR	4562873	CallExpression	K_MARK ( bb -> addr )		4561870	0					
ANR	4562874	Callee	K_MARK		4561870	0					
ANR	4562875	Identifier	K_MARK		4561870	0					
ANR	4562876	ArgumentList	bb -> addr		4561870	1					
ANR	4562877	Argument	bb -> addr		4561870	0					
ANR	4562878	PtrMemberAccess	bb -> addr		4561870	0					
ANR	4562879	Identifier	bb		4561870	0					
ANR	4562880	Identifier	addr		4561870	1					
ANR	4562881	Argument	1		4561870	2					
ANR	4562882	PrimaryExpression	1		4561870	0					
ANR	4562883	Argument	0		4561870	3					
ANR	4562884	PrimaryExpression	0		4561870	0					
ANR	4562885	IfStatement	"if ( sdb_const_get ( db , K_INDENT ( bb -> addr ) , 0 ) )"		4561870	84					
ANR	4562886	Condition	"sdb_const_get ( db , K_INDENT ( bb -> addr ) , 0 )"	280:6:9626:9667	4561870	0	True				
ANR	4562887	CallExpression	"sdb_const_get ( db , K_INDENT ( bb -> addr ) , 0 )"		4561870	0					
ANR	4562888	Callee	sdb_const_get		4561870	0					
ANR	4562889	Identifier	sdb_const_get		4561870	0					
ANR	4562890	ArgumentList	db		4561870	1					
ANR	4562891	Argument	db		4561870	0					
ANR	4562892	Identifier	db		4561870	0					
ANR	4562893	Argument	K_INDENT ( bb -> addr )		4561870	1					
ANR	4562894	CallExpression	K_INDENT ( bb -> addr )		4561870	0					
ANR	4562895	Callee	K_INDENT		4561870	0					
ANR	4562896	Identifier	K_INDENT		4561870	0					
ANR	4562897	ArgumentList	bb -> addr		4561870	1					
ANR	4562898	Argument	bb -> addr		4561870	0					
ANR	4562899	PtrMemberAccess	bb -> addr		4561870	0					
ANR	4562900	Identifier	bb		4561870	0					
ANR	4562901	Identifier	addr		4561870	1					
ANR	4562902	Argument	0		4561870	2					
ANR	4562903	PrimaryExpression	0		4561870	0					
ANR	4562904	CompoundStatement		116:3:4167:4217	4561870	1					
ANR	4562905	IdentifierDeclStatement	"ut64 addr = sdb_array_pop_num ( db , ""indent"" , NULL ) ;"	284:3:9820:9870	4561870	0	True				
ANR	4562906	IdentifierDecl	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		4561870	0					
ANR	4562907	IdentifierDeclType	ut64		4561870	0					
ANR	4562908	Identifier	addr		4561870	1					
ANR	4562909	AssignmentExpression	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		4561870	2		=			
ANR	4562910	Identifier	addr		4561870	0					
ANR	4562911	CallExpression	"sdb_array_pop_num ( db , ""indent"" , NULL )"		4561870	1					
ANR	4562912	Callee	sdb_array_pop_num		4561870	0					
ANR	4562913	Identifier	sdb_array_pop_num		4561870	0					
ANR	4562914	ArgumentList	db		4561870	1					
ANR	4562915	Argument	db		4561870	0					
ANR	4562916	Identifier	db		4561870	0					
ANR	4562917	Argument	"""indent"""		4561870	1					
ANR	4562918	PrimaryExpression	"""indent"""		4561870	0					
ANR	4562919	Argument	NULL		4561870	2					
ANR	4562920	Identifier	NULL		4561870	0					
ANR	4562921	IfStatement	if ( addr == UT64_MAX )		4561870	1					
ANR	4562922	Condition	addr == UT64_MAX	285:7:9879:9894	4561870	0	True				
ANR	4562923	EqualityExpression	addr == UT64_MAX		4561870	0		==			
ANR	4562924	Identifier	addr		4561870	0					
ANR	4562925	Identifier	UT64_MAX		4561870	1					
ANR	4562926	CompoundStatement		125:4:4436:4498	4561870	1					
ANR	4562927	IdentifierDeclStatement	int i ;	286:4:9903:9908	4561870	0	True				
ANR	4562928	IdentifierDecl	i		4561870	0					
ANR	4562929	IdentifierDeclType	int		4561870	0					
ANR	4562930	Identifier	i		4561870	1					
ANR	4562931	ExpressionStatement	nindent = 1	287:4:9914:9925	4561870	1	True				
ANR	4562932	AssignmentExpression	nindent = 1		4561870	0		=			
ANR	4562933	Identifier	nindent		4561870	0					
ANR	4562934	PrimaryExpression	1		4561870	1					
ANR	4562935	ForStatement	for ( i = indent ; i != nindent ; i -- )		4561870	2					
ANR	4562936	ForInit	i = indent ;	288:9:9936:9946	4561870	0	True				
ANR	4562937	AssignmentExpression	i = indent		4561870	0		=			
ANR	4562938	Identifier	i		4561870	0					
ANR	4562939	Identifier	indent		4561870	1					
ANR	4562940	Condition	i != nindent	288:21:9948:9959	4561870	1	True				
ANR	4562941	EqualityExpression	i != nindent		4561870	0		!=			
ANR	4562942	Identifier	i		4561870	0					
ANR	4562943	Identifier	nindent		4561870	1					
ANR	4562944	PostIncDecOperationExpression	i --	288:35:9962:9964	4561870	2	True				
ANR	4562945	Identifier	i		4561870	0					
ANR	4562946	IncDec	--		4561870	1					
ANR	4562947	CompoundStatement		120:40:4314:4314	4561870	3					
ANR	4562948	ExpressionStatement	SET_INDENT ( i )	289:5:9974:9988	4561870	0	True				
ANR	4562949	CallExpression	SET_INDENT ( i )		4561870	0					
ANR	4562950	Callee	SET_INDENT		4561870	0					
ANR	4562951	Identifier	SET_INDENT		4561870	0					
ANR	4562952	ArgumentList	i		4561870	1					
ANR	4562953	Argument	i		4561870	0					
ANR	4562954	Identifier	i		4561870	0					
ANR	4562955	ExpressionStatement	"r_cons_printf ( ""\\n%s}"" , indentstr )"	290:5:9995:10029	4561870	1	True				
ANR	4562956	CallExpression	"r_cons_printf ( ""\\n%s}"" , indentstr )"		4561870	0					
ANR	4562957	Callee	r_cons_printf		4561870	0					
ANR	4562958	Identifier	r_cons_printf		4561870	0					
ANR	4562959	ArgumentList	"""\\n%s}"""		4561870	1					
ANR	4562960	Argument	"""\\n%s}"""		4561870	0					
ANR	4562961	PrimaryExpression	"""\\n%s}"""		4561870	0					
ANR	4562962	Argument	indentstr		4561870	1					
ANR	4562963	Identifier	indentstr		4561870	0					
ANR	4562964	ExpressionStatement	"r_cons_printf ( ""\\n%sreturn;\\n"" , indentstr )"	292:4:10041:10083	4561870	3	True				
ANR	4562965	CallExpression	"r_cons_printf ( ""\\n%sreturn;\\n"" , indentstr )"		4561870	0					
ANR	4562966	Callee	r_cons_printf		4561870	0					
ANR	4562967	Identifier	r_cons_printf		4561870	0					
ANR	4562968	ArgumentList	"""\\n%sreturn;\\n"""		4561870	1					
ANR	4562969	Argument	"""\\n%sreturn;\\n"""		4561870	0					
ANR	4562970	PrimaryExpression	"""\\n%sreturn;\\n"""		4561870	0					
ANR	4562971	Argument	indentstr		4561870	1					
ANR	4562972	Identifier	indentstr		4561870	0					
ANR	4562973	IdentifierDeclStatement	"RAnalBlock * nbb = r_anal_bb_from_offset ( core -> anal , bb -> fail ) ;"	293:4:10089:10151	4561870	4	True				
ANR	4562974	IdentifierDecl	"* nbb = r_anal_bb_from_offset ( core -> anal , bb -> fail )"		4561870	0					
ANR	4562975	IdentifierDeclType	RAnalBlock *		4561870	0					
ANR	4562976	Identifier	nbb		4561870	1					
ANR	4562977	AssignmentExpression	"* nbb = r_anal_bb_from_offset ( core -> anal , bb -> fail )"		4561870	2		=			
ANR	4562978	Identifier	nbb		4561870	0					
ANR	4562979	CallExpression	"r_anal_bb_from_offset ( core -> anal , bb -> fail )"		4561870	1					
ANR	4562980	Callee	r_anal_bb_from_offset		4561870	0					
ANR	4562981	Identifier	r_anal_bb_from_offset		4561870	0					
ANR	4562982	ArgumentList	core -> anal		4561870	1					
ANR	4562983	Argument	core -> anal		4561870	0					
ANR	4562984	PtrMemberAccess	core -> anal		4561870	0					
ANR	4562985	Identifier	core		4561870	0					
ANR	4562986	Identifier	anal		4561870	1					
ANR	4562987	Argument	bb -> fail		4561870	1					
ANR	4562988	PtrMemberAccess	bb -> fail		4561870	0					
ANR	4562989	Identifier	bb		4561870	0					
ANR	4562990	Identifier	fail		4561870	1					
ANR	4562991	IfStatement	"if ( r_list_contains ( visited , nbb ) )"		4561870	5					
ANR	4562992	Condition	"r_list_contains ( visited , nbb )"	294:8:10161:10190	4561870	0	True				
ANR	4562993	CallExpression	"r_list_contains ( visited , nbb )"		4561870	0					
ANR	4562994	Callee	r_list_contains		4561870	0					
ANR	4562995	Identifier	r_list_contains		4561870	0					
ANR	4562996	ArgumentList	visited		4561870	1					
ANR	4562997	Argument	visited		4561870	0					
ANR	4562998	Identifier	visited		4561870	0					
ANR	4562999	Argument	nbb		4561870	1					
ANR	4563000	Identifier	nbb		4561870	0					
ANR	4563001	CompoundStatement		126:40:4540:4540	4561870	1					
ANR	4563002	ExpressionStatement	"nbb = r_anal_bb_from_offset ( core -> anal , bb -> jump )"	295:5:10200:10250	4561870	0	True				
ANR	4563003	AssignmentExpression	"nbb = r_anal_bb_from_offset ( core -> anal , bb -> jump )"		4561870	0		=			
ANR	4563004	Identifier	nbb		4561870	0					
ANR	4563005	CallExpression	"r_anal_bb_from_offset ( core -> anal , bb -> jump )"		4561870	1					
ANR	4563006	Callee	r_anal_bb_from_offset		4561870	0					
ANR	4563007	Identifier	r_anal_bb_from_offset		4561870	0					
ANR	4563008	ArgumentList	core -> anal		4561870	1					
ANR	4563009	Argument	core -> anal		4561870	0					
ANR	4563010	PtrMemberAccess	core -> anal		4561870	0					
ANR	4563011	Identifier	core		4561870	0					
ANR	4563012	Identifier	anal		4561870	1					
ANR	4563013	Argument	bb -> jump		4561870	1					
ANR	4563014	PtrMemberAccess	bb -> jump		4561870	0					
ANR	4563015	Identifier	bb		4561870	0					
ANR	4563016	Identifier	jump		4561870	1					
ANR	4563017	IfStatement	"if ( r_list_contains ( visited , nbb ) )"		4561870	1					
ANR	4563018	Condition	"r_list_contains ( visited , nbb )"	296:9:10261:10290	4561870	0	True				
ANR	4563019	CallExpression	"r_list_contains ( visited , nbb )"		4561870	0					
ANR	4563020	Callee	r_list_contains		4561870	0					
ANR	4563021	Identifier	r_list_contains		4561870	0					
ANR	4563022	ArgumentList	visited		4561870	1					
ANR	4563023	Argument	visited		4561870	0					
ANR	4563024	Identifier	visited		4561870	0					
ANR	4563025	Argument	nbb		4561870	1					
ANR	4563026	Identifier	nbb		4561870	0					
ANR	4563027	CompoundStatement		128:41:4640:4640	4561870	1					
ANR	4563028	ExpressionStatement	nbb = NULL	297:6:10301:10311	4561870	0	True				
ANR	4563029	AssignmentExpression	nbb = NULL		4561870	0		=			
ANR	4563030	Identifier	nbb		4561870	0					
ANR	4563031	Identifier	NULL		4561870	1					
ANR	4563032	IfStatement	if ( ! nbb )		4561870	6					
ANR	4563033	Condition	! nbb	300:8:10334:10337	4561870	0	True				
ANR	4563034	UnaryOperationExpression	! nbb		4561870	0					
ANR	4563035	UnaryOperator	!		4561870	0					
ANR	4563036	Identifier	nbb		4561870	1					
ANR	4563037	CompoundStatement		132:14:4687:4687	4561870	1					
ANR	4563038	BreakStatement	break ;	301:5:10347:10352	4561870	0	True				
ANR	4563039	ExpressionStatement	bb = nbb	303:4:10364:10372	4561870	7	True				
ANR	4563040	AssignmentExpression	bb = nbb		4561870	0		=			
ANR	4563041	Identifier	bb		4561870	0					
ANR	4563042	Identifier	nbb		4561870	1					
ANR	4563043	ExpressionStatement	indent --	304:4:10378:10386	4561870	8	True				
ANR	4563044	PostIncDecOperationExpression	indent --		4561870	0					
ANR	4563045	Identifier	indent		4561870	0					
ANR	4563046	IncDec	--		4561870	1					
ANR	4563047	ContinueStatement	continue ;	305:4:10392:10400	4561870	9	True				
ANR	4563048	IfStatement	"if ( sdb_num_get ( db , K_ELSE ( bb -> addr ) , 0 ) )"		4561870	2					
ANR	4563049	Condition	"sdb_num_get ( db , K_ELSE ( bb -> addr ) , 0 )"	307:7:10414:10451	4561870	0	True				
ANR	4563050	CallExpression	"sdb_num_get ( db , K_ELSE ( bb -> addr ) , 0 )"		4561870	0					
ANR	4563051	Callee	sdb_num_get		4561870	0					
ANR	4563052	Identifier	sdb_num_get		4561870	0					
ANR	4563053	ArgumentList	db		4561870	1					
ANR	4563054	Argument	db		4561870	0					
ANR	4563055	Identifier	db		4561870	0					
ANR	4563056	Argument	K_ELSE ( bb -> addr )		4561870	1					
ANR	4563057	CallExpression	K_ELSE ( bb -> addr )		4561870	0					
ANR	4563058	Callee	K_ELSE		4561870	0					
ANR	4563059	Identifier	K_ELSE		4561870	0					
ANR	4563060	ArgumentList	bb -> addr		4561870	1					
ANR	4563061	Argument	bb -> addr		4561870	0					
ANR	4563062	PtrMemberAccess	bb -> addr		4561870	0					
ANR	4563063	Identifier	bb		4561870	0					
ANR	4563064	Identifier	addr		4561870	1					
ANR	4563065	Argument	0		4561870	2					
ANR	4563066	PrimaryExpression	0		4561870	0					
ANR	4563067	CompoundStatement		139:47:4801:4801	4561870	1					
ANR	4563068	IfStatement	"if ( ! strcmp ( blocktype , ""else"" ) )"		4561870	0					
ANR	4563069	Condition	"! strcmp ( blocktype , ""else"" )"	308:8:10464:10490	4561870	0	True				
ANR	4563070	UnaryOperationExpression	"! strcmp ( blocktype , ""else"" )"		4561870	0					
ANR	4563071	UnaryOperator	!		4561870	0					
ANR	4563072	CallExpression	"strcmp ( blocktype , ""else"" )"		4561870	1					
ANR	4563073	Callee	strcmp		4561870	0					
ANR	4563074	Identifier	strcmp		4561870	0					
ANR	4563075	ArgumentList	blocktype		4561870	1					
ANR	4563076	Argument	blocktype		4561870	0					
ANR	4563077	Identifier	blocktype		4561870	0					
ANR	4563078	Argument	"""else"""		4561870	1					
ANR	4563079	PrimaryExpression	"""else"""		4561870	0					
ANR	4563080	CompoundStatement		140:37:4840:4840	4561870	1					
ANR	4563081	ExpressionStatement	"r_cons_printf ( ""\\n%s } %s {"" , indentstr , blocktype )"	309:5:10500:10551	4561870	0	True				
ANR	4563082	CallExpression	"r_cons_printf ( ""\\n%s } %s {"" , indentstr , blocktype )"		4561870	0					
ANR	4563083	Callee	r_cons_printf		4561870	0					
ANR	4563084	Identifier	r_cons_printf		4561870	0					
ANR	4563085	ArgumentList	"""\\n%s } %s {"""		4561870	1					
ANR	4563086	Argument	"""\\n%s } %s {"""		4561870	0					
ANR	4563087	PrimaryExpression	"""\\n%s } %s {"""		4561870	0					
ANR	4563088	Argument	indentstr		4561870	1					
ANR	4563089	Identifier	indentstr		4561870	0					
ANR	4563090	Argument	blocktype		4561870	2					
ANR	4563091	Identifier	blocktype		4561870	0					
ANR	4563092	ElseStatement	else		4561870	0					
ANR	4563093	CompoundStatement		142:11:4911:4911	4561870	0					
ANR	4563094	ExpressionStatement	"r_cons_printf ( ""\\n%s } %s (?);"" , indentstr , blocktype )"	311:5:10571:10625	4561870	0	True				
ANR	4563095	CallExpression	"r_cons_printf ( ""\\n%s } %s (?);"" , indentstr , blocktype )"		4561870	0					
ANR	4563096	Callee	r_cons_printf		4561870	0					
ANR	4563097	Identifier	r_cons_printf		4561870	0					
ANR	4563098	ArgumentList	"""\\n%s } %s (?);"""		4561870	1					
ANR	4563099	Argument	"""\\n%s } %s (?);"""		4561870	0					
ANR	4563100	PrimaryExpression	"""\\n%s } %s (?);"""		4561870	0					
ANR	4563101	Argument	indentstr		4561870	1					
ANR	4563102	Identifier	indentstr		4561870	0					
ANR	4563103	Argument	blocktype		4561870	2					
ANR	4563104	Identifier	blocktype		4561870	0					
ANR	4563105	ElseStatement	else		4561870	0					
ANR	4563106	CompoundStatement		145:10:4990:4990	4561870	0					
ANR	4563107	ExpressionStatement	"r_cons_printf ( ""\\n%s}"" , indentstr )"	314:4:10649:10683	4561870	0	True				
ANR	4563108	CallExpression	"r_cons_printf ( ""\\n%s}"" , indentstr )"		4561870	0					
ANR	4563109	Callee	r_cons_printf		4561870	0					
ANR	4563110	Identifier	r_cons_printf		4561870	0					
ANR	4563111	ArgumentList	"""\\n%s}"""		4561870	1					
ANR	4563112	Argument	"""\\n%s}"""		4561870	0					
ANR	4563113	PrimaryExpression	"""\\n%s}"""		4561870	0					
ANR	4563114	Argument	indentstr		4561870	1					
ANR	4563115	Identifier	indentstr		4561870	0					
ANR	4563116	IfStatement	if ( addr != bb -> addr )		4561870	3					
ANR	4563117	Condition	addr != bb -> addr	316:7:10697:10712	4561870	0	True				
ANR	4563118	EqualityExpression	addr != bb -> addr		4561870	0		!=			
ANR	4563119	Identifier	addr		4561870	0					
ANR	4563120	PtrMemberAccess	bb -> addr		4561870	1					
ANR	4563121	Identifier	bb		4561870	0					
ANR	4563122	Identifier	addr		4561870	1					
ANR	4563123	CompoundStatement		148:25:5062:5062	4561870	1					
ANR	4563124	ExpressionStatement	queuegoto = addr	317:4:10721:10737	4561870	0	True				
ANR	4563125	AssignmentExpression	queuegoto = addr		4561870	0		=			
ANR	4563126	Identifier	queuegoto		4561870	0					
ANR	4563127	Identifier	addr		4561870	1					
ANR	4563128	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , addr )"	320:3:10812:10857	4561870	4	True				
ANR	4563129	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , addr )"		4561870	0		=			
ANR	4563130	Identifier	bb		4561870	0					
ANR	4563131	CallExpression	"r_anal_bb_from_offset ( core -> anal , addr )"		4561870	1					
ANR	4563132	Callee	r_anal_bb_from_offset		4561870	0					
ANR	4563133	Identifier	r_anal_bb_from_offset		4561870	0					
ANR	4563134	ArgumentList	core -> anal		4561870	1					
ANR	4563135	Argument	core -> anal		4561870	0					
ANR	4563136	PtrMemberAccess	core -> anal		4561870	0					
ANR	4563137	Identifier	core		4561870	0					
ANR	4563138	Identifier	anal		4561870	1					
ANR	4563139	Argument	addr		4561870	1					
ANR	4563140	Identifier	addr		4561870	0					
ANR	4563141	IfStatement	if ( ! bb )		4561870	5					
ANR	4563142	Condition	! bb	321:7:10866:10868	4561870	0	True				
ANR	4563143	UnaryOperationExpression	! bb		4561870	0					
ANR	4563144	UnaryOperator	!		4561870	0					
ANR	4563145	Identifier	bb		4561870	1					
ANR	4563146	CompoundStatement		153:12:5218:5218	4561870	1					
ANR	4563147	ExpressionStatement	"eprintf ( ""failed block\\n"" )"	322:4:10877:10903	4561870	0	True				
ANR	4563148	CallExpression	"eprintf ( ""failed block\\n"" )"		4561870	0					
ANR	4563149	Callee	eprintf		4561870	0					
ANR	4563150	Identifier	eprintf		4561870	0					
ANR	4563151	ArgumentList	"""failed block\\n"""		4561870	1					
ANR	4563152	Argument	"""failed block\\n"""		4561870	0					
ANR	4563153	PrimaryExpression	"""failed block\\n"""		4561870	0					
ANR	4563154	BreakStatement	break ;	323:4:10909:10914	4561870	1	True				
ANR	4563155	ExpressionStatement	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"	326:3:10963:11012	4561870	6	True				
ANR	4563156	AssignmentExpression	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		4561870	0		=			
ANR	4563157	Identifier	nindent		4561870	0					
ANR	4563158	CallExpression	"sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		4561870	1					
ANR	4563159	Callee	sdb_num_get		4561870	0					
ANR	4563160	Identifier	sdb_num_get		4561870	0					
ANR	4563161	ArgumentList	db		4561870	1					
ANR	4563162	Argument	db		4561870	0					
ANR	4563163	Identifier	db		4561870	0					
ANR	4563164	Argument	K_INDENT ( addr )		4561870	1					
ANR	4563165	CallExpression	K_INDENT ( addr )		4561870	0					
ANR	4563166	Callee	K_INDENT		4561870	0					
ANR	4563167	Identifier	K_INDENT		4561870	0					
ANR	4563168	ArgumentList	addr		4561870	1					
ANR	4563169	Argument	addr		4561870	0					
ANR	4563170	Identifier	addr		4561870	0					
ANR	4563171	Argument	NULL		4561870	2					
ANR	4563172	Identifier	NULL		4561870	0					
ANR	4563173	IfStatement	"if ( indent > nindent && ! strcmp ( blocktype , ""else"" ) )"		4561870	7					
ANR	4563174	Condition	"indent > nindent && ! strcmp ( blocktype , ""else"" )"	327:7:11021:11067	4561870	0	True				
ANR	4563175	AndExpression	"indent > nindent && ! strcmp ( blocktype , ""else"" )"		4561870	0		&&			
ANR	4563176	RelationalExpression	indent > nindent		4561870	0		>			
ANR	4563177	Identifier	indent		4561870	0					
ANR	4563178	Identifier	nindent		4561870	1					
ANR	4563179	UnaryOperationExpression	"! strcmp ( blocktype , ""else"" )"		4561870	1					
ANR	4563180	UnaryOperator	!		4561870	0					
ANR	4563181	CallExpression	"strcmp ( blocktype , ""else"" )"		4561870	1					
ANR	4563182	Callee	strcmp		4561870	0					
ANR	4563183	Identifier	strcmp		4561870	0					
ANR	4563184	ArgumentList	blocktype		4561870	1					
ANR	4563185	Argument	blocktype		4561870	0					
ANR	4563186	Identifier	blocktype		4561870	0					
ANR	4563187	Argument	"""else"""		4561870	1					
ANR	4563188	PrimaryExpression	"""else"""		4561870	0					
ANR	4563189	CompoundStatement		160:4:5423:5428	4561870	1					
ANR	4563190	IdentifierDeclStatement	int i ;	328:4:11076:11081	4561870	0	True				
ANR	4563191	IdentifierDecl	i		4561870	0					
ANR	4563192	IdentifierDeclType	int		4561870	0					
ANR	4563193	Identifier	i		4561870	1					
ANR	4563194	ForStatement	for ( i = indent ; i != nindent ; i -- )		4561870	1					
ANR	4563195	ForInit	i = indent ;	329:9:11092:11102	4561870	0	True				
ANR	4563196	AssignmentExpression	i = indent		4561870	0		=			
ANR	4563197	Identifier	i		4561870	0					
ANR	4563198	Identifier	indent		4561870	1					
ANR	4563199	Condition	i != nindent	329:21:11104:11115	4561870	1	True				
ANR	4563200	EqualityExpression	i != nindent		4561870	0		!=			
ANR	4563201	Identifier	i		4561870	0					
ANR	4563202	Identifier	nindent		4561870	1					
ANR	4563203	PostIncDecOperationExpression	i --	329:35:11118:11120	4561870	2	True				
ANR	4563204	Identifier	i		4561870	0					
ANR	4563205	IncDec	--		4561870	1					
ANR	4563206	CompoundStatement		161:40:5470:5470	4561870	3					
ANR	4563207	ExpressionStatement	SET_INDENT ( i )	330:5:11130:11144	4561870	0	True				
ANR	4563208	CallExpression	SET_INDENT ( i )		4561870	0					
ANR	4563209	Callee	SET_INDENT		4561870	0					
ANR	4563210	Identifier	SET_INDENT		4561870	0					
ANR	4563211	ArgumentList	i		4561870	1					
ANR	4563212	Argument	i		4561870	0					
ANR	4563213	Identifier	i		4561870	0					
ANR	4563214	ExpressionStatement	"r_cons_printf ( ""\\n%s }"" , indentstr )"	331:5:11151:11186	4561870	1	True				
ANR	4563215	CallExpression	"r_cons_printf ( ""\\n%s }"" , indentstr )"		4561870	0					
ANR	4563216	Callee	r_cons_printf		4561870	0					
ANR	4563217	Identifier	r_cons_printf		4561870	0					
ANR	4563218	ArgumentList	"""\\n%s }"""		4561870	1					
ANR	4563219	Argument	"""\\n%s }"""		4561870	0					
ANR	4563220	PrimaryExpression	"""\\n%s }"""		4561870	0					
ANR	4563221	Argument	indentstr		4561870	1					
ANR	4563222	Identifier	indentstr		4561870	0					
ANR	4563223	ExpressionStatement	indent = nindent	334:3:11202:11218	4561870	8	True				
ANR	4563224	AssignmentExpression	indent = nindent		4561870	0		=			
ANR	4563225	Identifier	indent		4561870	0					
ANR	4563226	Identifier	nindent		4561870	1					
ANR	4563227	ElseStatement	else		4561870	0					
ANR	4563228	CompoundStatement		167:9:5576:5576	4561870	0					
ANR	4563229	ExpressionStatement	"sdb_set ( db , K_INDENT ( bb -> addr ) , ""passed"" , 0 )"	336:3:11234:11280	4561870	0	True				
ANR	4563230	CallExpression	"sdb_set ( db , K_INDENT ( bb -> addr ) , ""passed"" , 0 )"		4561870	0					
ANR	4563231	Callee	sdb_set		4561870	0					
ANR	4563232	Identifier	sdb_set		4561870	0					
ANR	4563233	ArgumentList	db		4561870	1					
ANR	4563234	Argument	db		4561870	0					
ANR	4563235	Identifier	db		4561870	0					
ANR	4563236	Argument	K_INDENT ( bb -> addr )		4561870	1					
ANR	4563237	CallExpression	K_INDENT ( bb -> addr )		4561870	0					
ANR	4563238	Callee	K_INDENT		4561870	0					
ANR	4563239	Identifier	K_INDENT		4561870	0					
ANR	4563240	ArgumentList	bb -> addr		4561870	1					
ANR	4563241	Argument	bb -> addr		4561870	0					
ANR	4563242	PtrMemberAccess	bb -> addr		4561870	0					
ANR	4563243	Identifier	bb		4561870	0					
ANR	4563244	Identifier	addr		4561870	1					
ANR	4563245	Argument	"""passed"""		4561870	2					
ANR	4563246	PrimaryExpression	"""passed"""		4561870	0					
ANR	4563247	Argument	0		4561870	3					
ANR	4563248	PrimaryExpression	0		4561870	0					
ANR	4563249	IfStatement	if ( bb -> jump != UT64_MAX )		4561870	1					
ANR	4563250	Condition	bb -> jump != UT64_MAX	337:7:11289:11308	4561870	0	True				
ANR	4563251	EqualityExpression	bb -> jump != UT64_MAX		4561870	0		!=			
ANR	4563252	PtrMemberAccess	bb -> jump		4561870	0					
ANR	4563253	Identifier	bb		4561870	0					
ANR	4563254	Identifier	jump		4561870	1					
ANR	4563255	Identifier	UT64_MAX		4561870	1					
ANR	4563256	CompoundStatement		175:4:5862:5944	4561870	1					
ANR	4563257	IdentifierDeclStatement	int swap = 1 ;	338:4:11317:11329	4561870	0	True				
ANR	4563258	IdentifierDecl	swap = 1		4561870	0					
ANR	4563259	IdentifierDeclType	int		4561870	0					
ANR	4563260	Identifier	swap		4561870	1					
ANR	4563261	AssignmentExpression	swap = 1		4561870	2		=			
ANR	4563262	Identifier	swap		4561870	0					
ANR	4563263	PrimaryExpression	1		4561870	1					
ANR	4563264	IdentifierDeclStatement	ut64 jump = swap ? bb -> jump : bb -> fail ;	340:4:11382:11420	4561870	1	True				
ANR	4563265	IdentifierDecl	jump = swap ? bb -> jump : bb -> fail		4561870	0					
ANR	4563266	IdentifierDeclType	ut64		4561870	0					
ANR	4563267	Identifier	jump		4561870	1					
ANR	4563268	AssignmentExpression	jump = swap ? bb -> jump : bb -> fail		4561870	2		=			
ANR	4563269	Identifier	jump		4561870	0					
ANR	4563270	ConditionalExpression	swap ? bb -> jump : bb -> fail		4561870	1					
ANR	4563271	Condition	swap		4561870	0					
ANR	4563272	Identifier	swap		4561870	0					
ANR	4563273	PtrMemberAccess	bb -> jump		4561870	1					
ANR	4563274	Identifier	bb		4561870	0					
ANR	4563275	Identifier	jump		4561870	1					
ANR	4563276	PtrMemberAccess	bb -> fail		4561870	2					
ANR	4563277	Identifier	bb		4561870	0					
ANR	4563278	Identifier	fail		4561870	1					
ANR	4563279	IdentifierDeclStatement	ut64 fail = swap ? bb -> fail : bb -> jump ;	341:4:11426:11464	4561870	2	True				
ANR	4563280	IdentifierDecl	fail = swap ? bb -> fail : bb -> jump		4561870	0					
ANR	4563281	IdentifierDeclType	ut64		4561870	0					
ANR	4563282	Identifier	fail		4561870	1					
ANR	4563283	AssignmentExpression	fail = swap ? bb -> fail : bb -> jump		4561870	2		=			
ANR	4563284	Identifier	fail		4561870	0					
ANR	4563285	ConditionalExpression	swap ? bb -> fail : bb -> jump		4561870	1					
ANR	4563286	Condition	swap		4561870	0					
ANR	4563287	Identifier	swap		4561870	0					
ANR	4563288	PtrMemberAccess	bb -> fail		4561870	1					
ANR	4563289	Identifier	bb		4561870	0					
ANR	4563290	Identifier	fail		4561870	1					
ANR	4563291	PtrMemberAccess	bb -> jump		4561870	2					
ANR	4563292	Identifier	bb		4561870	0					
ANR	4563293	Identifier	jump		4561870	1					
ANR	4563294	IdentifierDeclStatement	"RAnalFunction * curfcn = r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL ) ;"	343:4:11515:11597	4561870	3	True				
ANR	4563295	IdentifierDecl	"* curfcn = r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL )"		4561870	0					
ANR	4563296	IdentifierDeclType	RAnalFunction *		4561870	0					
ANR	4563297	Identifier	curfcn		4561870	1					
ANR	4563298	AssignmentExpression	"* curfcn = r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL )"		4561870	2		=			
ANR	4563299	Identifier	curfcn		4561870	0					
ANR	4563300	CallExpression	"r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL )"		4561870	1					
ANR	4563301	Callee	r_anal_get_fcn_in		4561870	0					
ANR	4563302	Identifier	r_anal_get_fcn_in		4561870	0					
ANR	4563303	ArgumentList	core -> anal		4561870	1					
ANR	4563304	Argument	core -> anal		4561870	0					
ANR	4563305	PtrMemberAccess	core -> anal		4561870	0					
ANR	4563306	Identifier	core		4561870	0					
ANR	4563307	Identifier	anal		4561870	1					
ANR	4563308	Argument	jump		4561870	1					
ANR	4563309	Identifier	jump		4561870	0					
ANR	4563310	Argument	R_ANAL_FCN_TYPE_NULL		4561870	2					
ANR	4563311	Identifier	R_ANAL_FCN_TYPE_NULL		4561870	0					
ANR	4563312	IfStatement	if ( curfcn != fcn )		4561870	4					
ANR	4563313	Condition	curfcn != fcn	344:8:11607:11619	4561870	0	True				
ANR	4563314	EqualityExpression	curfcn != fcn		4561870	0		!=			
ANR	4563315	Identifier	curfcn		4561870	0					
ANR	4563316	Identifier	fcn		4561870	1					
ANR	4563317	CompoundStatement		176:23:5969:5969	4561870	1					
ANR	4563318	ExpressionStatement	"r_cons_printf ( ""\\n  // chop\\n"" )"	346:5:11654:11685	4561870	0	True				
ANR	4563319	CallExpression	"r_cons_printf ( ""\\n  // chop\\n"" )"		4561870	0					
ANR	4563320	Callee	r_cons_printf		4561870	0					
ANR	4563321	Identifier	r_cons_printf		4561870	0					
ANR	4563322	ArgumentList	"""\\n  // chop\\n"""		4561870	1					
ANR	4563323	Argument	"""\\n  // chop\\n"""		4561870	0					
ANR	4563324	PrimaryExpression	"""\\n  // chop\\n"""		4561870	0					
ANR	4563325	IfStatement	"if ( sdb_get ( db , K_INDENT ( jump ) , 0 ) )"		4561870	5					
ANR	4563326	Condition	"sdb_get ( db , K_INDENT ( jump ) , 0 )"	349:8:11716:11747	4561870	0	True				
ANR	4563327	CallExpression	"sdb_get ( db , K_INDENT ( jump ) , 0 )"		4561870	0					
ANR	4563328	Callee	sdb_get		4561870	0					
ANR	4563329	Identifier	sdb_get		4561870	0					
ANR	4563330	ArgumentList	db		4561870	1					
ANR	4563331	Argument	db		4561870	0					
ANR	4563332	Identifier	db		4561870	0					
ANR	4563333	Argument	K_INDENT ( jump )		4561870	1					
ANR	4563334	CallExpression	K_INDENT ( jump )		4561870	0					
ANR	4563335	Callee	K_INDENT		4561870	0					
ANR	4563336	Identifier	K_INDENT		4561870	0					
ANR	4563337	ArgumentList	jump		4561870	1					
ANR	4563338	Argument	jump		4561870	0					
ANR	4563339	Identifier	jump		4561870	0					
ANR	4563340	Argument	0		4561870	2					
ANR	4563341	PrimaryExpression	0		4561870	0					
ANR	4563342	CompoundStatement		181:42:6097:6097	4561870	1					
ANR	4563343	IfStatement	"if ( ! sdb_get ( db , K_INDENT ( fail ) , 0 ) )"		4561870	0					
ANR	4563344	Condition	"! sdb_get ( db , K_INDENT ( fail ) , 0 )"	351:9:11785:11817	4561870	0	True				
ANR	4563345	UnaryOperationExpression	"! sdb_get ( db , K_INDENT ( fail ) , 0 )"		4561870	0					
ANR	4563346	UnaryOperator	!		4561870	0					
ANR	4563347	CallExpression	"sdb_get ( db , K_INDENT ( fail ) , 0 )"		4561870	1					
ANR	4563348	Callee	sdb_get		4561870	0					
ANR	4563349	Identifier	sdb_get		4561870	0					
ANR	4563350	ArgumentList	db		4561870	1					
ANR	4563351	Argument	db		4561870	0					
ANR	4563352	Identifier	db		4561870	0					
ANR	4563353	Argument	K_INDENT ( fail )		4561870	1					
ANR	4563354	CallExpression	K_INDENT ( fail )		4561870	0					
ANR	4563355	Callee	K_INDENT		4561870	0					
ANR	4563356	Identifier	K_INDENT		4561870	0					
ANR	4563357	ArgumentList	fail		4561870	1					
ANR	4563358	Argument	fail		4561870	0					
ANR	4563359	Identifier	fail		4561870	0					
ANR	4563360	Argument	0		4561870	2					
ANR	4563361	PrimaryExpression	0		4561870	0					
ANR	4563362	CompoundStatement		183:44:6167:6167	4561870	1					
ANR	4563363	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , fail )"	352:6:11828:11873	4561870	0	True				
ANR	4563364	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , fail )"		4561870	0		=			
ANR	4563365	Identifier	bb		4561870	0					
ANR	4563366	CallExpression	"r_anal_bb_from_offset ( core -> anal , fail )"		4561870	1					
ANR	4563367	Callee	r_anal_bb_from_offset		4561870	0					
ANR	4563368	Identifier	r_anal_bb_from_offset		4561870	0					
ANR	4563369	ArgumentList	core -> anal		4561870	1					
ANR	4563370	Argument	core -> anal		4561870	0					
ANR	4563371	PtrMemberAccess	core -> anal		4561870	0					
ANR	4563372	Identifier	core		4561870	0					
ANR	4563373	Identifier	anal		4561870	1					
ANR	4563374	Argument	fail		4561870	1					
ANR	4563375	Identifier	fail		4561870	0					
ANR	4563376	ElseStatement	else		4561870	0					
ANR	4563377	CompoundStatement		186:11:6240:6240	4561870	0					
ANR	4563378	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , jump )"	355:5:11900:11945	4561870	0	True				
ANR	4563379	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , jump )"		4561870	0		=			
ANR	4563380	Identifier	bb		4561870	0					
ANR	4563381	CallExpression	"r_anal_bb_from_offset ( core -> anal , jump )"		4561870	1					
ANR	4563382	Callee	r_anal_bb_from_offset		4561870	0					
ANR	4563383	Identifier	r_anal_bb_from_offset		4561870	0					
ANR	4563384	ArgumentList	core -> anal		4561870	1					
ANR	4563385	Argument	core -> anal		4561870	0					
ANR	4563386	PtrMemberAccess	core -> anal		4561870	0					
ANR	4563387	Identifier	core		4561870	0					
ANR	4563388	Identifier	anal		4561870	1					
ANR	4563389	Argument	jump		4561870	1					
ANR	4563390	Identifier	jump		4561870	0					
ANR	4563391	IfStatement	if ( ! bb )		4561870	1					
ANR	4563392	Condition	! bb	356:9:11956:11958	4561870	0	True				
ANR	4563393	UnaryOperationExpression	! bb		4561870	0					
ANR	4563394	UnaryOperator	!		4561870	0					
ANR	4563395	Identifier	bb		4561870	1					
ANR	4563396	CompoundStatement		188:14:6308:6308	4561870	1					
ANR	4563397	Statement	eprintf	357:6:11969:11975	4561870	0	True				
ANR	4563398	Statement	(	357:14:11977:11977	4561870	1	True				
ANR	4563399	Statement	"""failed to retrieve block at 0x%"""	357:15:11978:12010	4561870	2	True				
ANR	4563400	Statement	PFMT64x	357:48:12011:12017	4561870	3	True				
ANR	4563401	Statement	"""\\n"""	357:55:12018:12021	4561870	4	True				
ANR	4563402	Statement	","	357:59:12022:12022	4561870	5	True				
ANR	4563403	Statement	jump	357:61:12024:12027	4561870	6	True				
ANR	4563404	Statement	)	357:65:12028:12028	4561870	7	True				
ANR	4563405	ExpressionStatement		357:66:12029:12029	4561870	8	True				
ANR	4563406	BreakStatement	break ;	358:6:12037:12042	4561870	9	True				
ANR	4563407	IfStatement	if ( fail != UT64_MAX )		4561870	2					
ANR	4563408	Condition	fail != UT64_MAX	360:9:12060:12075	4561870	0	True				
ANR	4563409	EqualityExpression	fail != UT64_MAX		4561870	0		!=			
ANR	4563410	Identifier	fail		4561870	0					
ANR	4563411	Identifier	UT64_MAX		4561870	1					
ANR	4563412	CompoundStatement		192:27:6425:6425	4561870	1					
ANR	4563413	ExpressionStatement	indent ++	362:6:12125:12133	4561870	0	True				
ANR	4563414	PostIncDecOperationExpression	indent ++		4561870	0					
ANR	4563415	Identifier	indent		4561870	0					
ANR	4563416	IncDec	++		4561870	1					
ANR	4563417	IfStatement	"if ( sdb_get ( db , K_INDENT ( bb -> fail ) , 0 ) )"		4561870	1					
ANR	4563418	Condition	"sdb_get ( db , K_INDENT ( bb -> fail ) , 0 )"	363:10:12145:12180	4561870	0	True				
ANR	4563419	CallExpression	"sdb_get ( db , K_INDENT ( bb -> fail ) , 0 )"		4561870	0					
ANR	4563420	Callee	sdb_get		4561870	0					
ANR	4563421	Identifier	sdb_get		4561870	0					
ANR	4563422	ArgumentList	db		4561870	1					
ANR	4563423	Argument	db		4561870	0					
ANR	4563424	Identifier	db		4561870	0					
ANR	4563425	Argument	K_INDENT ( bb -> fail )		4561870	1					
ANR	4563426	CallExpression	K_INDENT ( bb -> fail )		4561870	0					
ANR	4563427	Callee	K_INDENT		4561870	0					
ANR	4563428	Identifier	K_INDENT		4561870	0					
ANR	4563429	ArgumentList	bb -> fail		4561870	1					
ANR	4563430	Argument	bb -> fail		4561870	0					
ANR	4563431	PtrMemberAccess	bb -> fail		4561870	0					
ANR	4563432	Identifier	bb		4561870	0					
ANR	4563433	Identifier	fail		4561870	1					
ANR	4563434	Argument	0		4561870	2					
ANR	4563435	PrimaryExpression	0		4561870	0					
ANR	4563436	CompoundStatement		195:48:6530:6530	4561870	1					
ANR	4563437	Statement	eprintf	365:7:12221:12227	4561870	0	True				
ANR	4563438	Statement	(	365:15:12229:12229	4561870	1	True				
ANR	4563439	Statement	"""BlockAlready 0x%"""	365:16:12230:12247	4561870	2	True				
ANR	4563440	Statement	PFMT64x	365:34:12248:12254	4561870	3	True				
ANR	4563441	Statement	"""\\n"""	365:41:12255:12258	4561870	4	True				
ANR	4563442	Statement	","	365:45:12259:12259	4561870	5	True				
ANR	4563443	Statement	bb	365:47:12261:12262	4561870	6	True				
ANR	4563444	Statement	->	365:49:12263:12264	4561870	7	True				
ANR	4563445	Statement	addr	365:51:12265:12268	4561870	8	True				
ANR	4563446	Statement	)	365:55:12269:12269	4561870	9	True				
ANR	4563447	ExpressionStatement		365:56:12270:12270	4561870	10	True				
ANR	4563448	ElseStatement	else		4561870	0					
ANR	4563449	CompoundStatement		198:13:6632:6632	4561870	0					
ANR	4563450	ExpressionStatement	"sdb_array_push_num ( db , ""indent"" , fail , 0 )"	368:7:12351:12393	4561870	0	True				
ANR	4563451	CallExpression	"sdb_array_push_num ( db , ""indent"" , fail , 0 )"		4561870	0					
ANR	4563452	Callee	sdb_array_push_num		4561870	0					
ANR	4563453	Identifier	sdb_array_push_num		4561870	0					
ANR	4563454	ArgumentList	db		4561870	1					
ANR	4563455	Argument	db		4561870	0					
ANR	4563456	Identifier	db		4561870	0					
ANR	4563457	Argument	"""indent"""		4561870	1					
ANR	4563458	PrimaryExpression	"""indent"""		4561870	0					
ANR	4563459	Argument	fail		4561870	2					
ANR	4563460	Identifier	fail		4561870	0					
ANR	4563461	Argument	0		4561870	3					
ANR	4563462	PrimaryExpression	0		4561870	0					
ANR	4563463	ExpressionStatement	"sdb_num_set ( db , K_INDENT ( fail ) , indent , 0 )"	369:7:12402:12446	4561870	1	True				
ANR	4563464	CallExpression	"sdb_num_set ( db , K_INDENT ( fail ) , indent , 0 )"		4561870	0					
ANR	4563465	Callee	sdb_num_set		4561870	0					
ANR	4563466	Identifier	sdb_num_set		4561870	0					
ANR	4563467	ArgumentList	db		4561870	1					
ANR	4563468	Argument	db		4561870	0					
ANR	4563469	Identifier	db		4561870	0					
ANR	4563470	Argument	K_INDENT ( fail )		4561870	1					
ANR	4563471	CallExpression	K_INDENT ( fail )		4561870	0					
ANR	4563472	Callee	K_INDENT		4561870	0					
ANR	4563473	Identifier	K_INDENT		4561870	0					
ANR	4563474	ArgumentList	fail		4561870	1					
ANR	4563475	Argument	fail		4561870	0					
ANR	4563476	Identifier	fail		4561870	0					
ANR	4563477	Argument	indent		4561870	2					
ANR	4563478	Identifier	indent		4561870	0					
ANR	4563479	Argument	0		4561870	3					
ANR	4563480	PrimaryExpression	0		4561870	0					
ANR	4563481	ExpressionStatement	"sdb_num_set ( db , K_ELSE ( fail ) , 1 , 0 )"	370:7:12455:12492	4561870	2	True				
ANR	4563482	CallExpression	"sdb_num_set ( db , K_ELSE ( fail ) , 1 , 0 )"		4561870	0					
ANR	4563483	Callee	sdb_num_set		4561870	0					
ANR	4563484	Identifier	sdb_num_set		4561870	0					
ANR	4563485	ArgumentList	db		4561870	1					
ANR	4563486	Argument	db		4561870	0					
ANR	4563487	Identifier	db		4561870	0					
ANR	4563488	Argument	K_ELSE ( fail )		4561870	1					
ANR	4563489	CallExpression	K_ELSE ( fail )		4561870	0					
ANR	4563490	Callee	K_ELSE		4561870	0					
ANR	4563491	Identifier	K_ELSE		4561870	0					
ANR	4563492	ArgumentList	fail		4561870	1					
ANR	4563493	Argument	fail		4561870	0					
ANR	4563494	Identifier	fail		4561870	0					
ANR	4563495	Argument	1		4561870	2					
ANR	4563496	PrimaryExpression	1		4561870	0					
ANR	4563497	Argument	0		4561870	3					
ANR	4563498	PrimaryExpression	0		4561870	0					
ANR	4563499	ExpressionStatement	SET_INDENT ( indent )	371:7:12501:12520	4561870	3	True				
ANR	4563500	CallExpression	SET_INDENT ( indent )		4561870	0					
ANR	4563501	Callee	SET_INDENT		4561870	0					
ANR	4563502	Identifier	SET_INDENT		4561870	0					
ANR	4563503	ArgumentList	indent		4561870	1					
ANR	4563504	Argument	indent		4561870	0					
ANR	4563505	Identifier	indent		4561870	0					
ANR	4563506	ExpressionStatement	"r_cons_printf ( ""\\n%s {"" , indentstr )"	372:7:12529:12564	4561870	4	True				
ANR	4563507	CallExpression	"r_cons_printf ( ""\\n%s {"" , indentstr )"		4561870	0					
ANR	4563508	Callee	r_cons_printf		4561870	0					
ANR	4563509	Identifier	r_cons_printf		4561870	0					
ANR	4563510	ArgumentList	"""\\n%s {"""		4561870	1					
ANR	4563511	Argument	"""\\n%s {"""		4561870	0					
ANR	4563512	PrimaryExpression	"""\\n%s {"""		4561870	0					
ANR	4563513	Argument	indentstr		4561870	1					
ANR	4563514	Identifier	indentstr		4561870	0					
ANR	4563515	ElseStatement	else		4561870	0					
ANR	4563516	CompoundStatement		206:12:6933:6933	4561870	0					
ANR	4563517	ExpressionStatement	"r_cons_printf ( ""\\n%s do"" , indentstr )"	375:6:12594:12630	4561870	0	True				
ANR	4563518	CallExpression	"r_cons_printf ( ""\\n%s do"" , indentstr )"		4561870	0					
ANR	4563519	Callee	r_cons_printf		4561870	0					
ANR	4563520	Identifier	r_cons_printf		4561870	0					
ANR	4563521	ArgumentList	"""\\n%s do"""		4561870	1					
ANR	4563522	Argument	"""\\n%s do"""		4561870	0					
ANR	4563523	PrimaryExpression	"""\\n%s do"""		4561870	0					
ANR	4563524	Argument	indentstr		4561870	1					
ANR	4563525	Identifier	indentstr		4561870	0					
ANR	4563526	ExpressionStatement	"sdb_array_push_num ( db , ""indent"" , jump , 0 )"	376:6:12638:12680	4561870	1	True				
ANR	4563527	CallExpression	"sdb_array_push_num ( db , ""indent"" , jump , 0 )"		4561870	0					
ANR	4563528	Callee	sdb_array_push_num		4561870	0					
ANR	4563529	Identifier	sdb_array_push_num		4561870	0					
ANR	4563530	ArgumentList	db		4561870	1					
ANR	4563531	Argument	db		4561870	0					
ANR	4563532	Identifier	db		4561870	0					
ANR	4563533	Argument	"""indent"""		4561870	1					
ANR	4563534	PrimaryExpression	"""indent"""		4561870	0					
ANR	4563535	Argument	jump		4561870	2					
ANR	4563536	Identifier	jump		4561870	0					
ANR	4563537	Argument	0		4561870	3					
ANR	4563538	PrimaryExpression	0		4561870	0					
ANR	4563539	ExpressionStatement	"sdb_num_set ( db , K_INDENT ( jump ) , indent , 0 )"	377:6:12688:12732	4561870	2	True				
ANR	4563540	CallExpression	"sdb_num_set ( db , K_INDENT ( jump ) , indent , 0 )"		4561870	0					
ANR	4563541	Callee	sdb_num_set		4561870	0					
ANR	4563542	Identifier	sdb_num_set		4561870	0					
ANR	4563543	ArgumentList	db		4561870	1					
ANR	4563544	Argument	db		4561870	0					
ANR	4563545	Identifier	db		4561870	0					
ANR	4563546	Argument	K_INDENT ( jump )		4561870	1					
ANR	4563547	CallExpression	K_INDENT ( jump )		4561870	0					
ANR	4563548	Callee	K_INDENT		4561870	0					
ANR	4563549	Identifier	K_INDENT		4561870	0					
ANR	4563550	ArgumentList	jump		4561870	1					
ANR	4563551	Argument	jump		4561870	0					
ANR	4563552	Identifier	jump		4561870	0					
ANR	4563553	Argument	indent		4561870	2					
ANR	4563554	Identifier	indent		4561870	0					
ANR	4563555	Argument	0		4561870	3					
ANR	4563556	PrimaryExpression	0		4561870	0					
ANR	4563557	ExpressionStatement	"sdb_num_set ( db , K_ELSE ( jump ) , 1 , 0 )"	378:6:12740:12777	4561870	3	True				
ANR	4563558	CallExpression	"sdb_num_set ( db , K_ELSE ( jump ) , 1 , 0 )"		4561870	0					
ANR	4563559	Callee	sdb_num_set		4561870	0					
ANR	4563560	Identifier	sdb_num_set		4561870	0					
ANR	4563561	ArgumentList	db		4561870	1					
ANR	4563562	Argument	db		4561870	0					
ANR	4563563	Identifier	db		4561870	0					
ANR	4563564	Argument	K_ELSE ( jump )		4561870	1					
ANR	4563565	CallExpression	K_ELSE ( jump )		4561870	0					
ANR	4563566	Callee	K_ELSE		4561870	0					
ANR	4563567	Identifier	K_ELSE		4561870	0					
ANR	4563568	ArgumentList	jump		4561870	1					
ANR	4563569	Argument	jump		4561870	0					
ANR	4563570	Identifier	jump		4561870	0					
ANR	4563571	Argument	1		4561870	2					
ANR	4563572	PrimaryExpression	1		4561870	0					
ANR	4563573	Argument	0		4561870	3					
ANR	4563574	PrimaryExpression	0		4561870	0					
ANR	4563575	IfStatement	if ( jump <= bb -> addr )		4561870	4					
ANR	4563576	Condition	jump <= bb -> addr	379:10:12789:12804	4561870	0	True				
ANR	4563577	RelationalExpression	jump <= bb -> addr		4561870	0		<=			
ANR	4563578	Identifier	jump		4561870	0					
ANR	4563579	PtrMemberAccess	bb -> addr		4561870	1					
ANR	4563580	Identifier	bb		4561870	0					
ANR	4563581	Identifier	addr		4561870	1					
ANR	4563582	CompoundStatement		211:28:7154:7154	4561870	1					
ANR	4563583	ExpressionStatement	"blocktype = ""while"""	380:7:12816:12835	4561870	0	True				
ANR	4563584	AssignmentExpression	"blocktype = ""while"""		4561870	0		=			
ANR	4563585	Identifier	blocktype		4561870	0					
ANR	4563586	PrimaryExpression	"""while"""		4561870	1					
ANR	4563587	ElseStatement	else		4561870	0					
ANR	4563588	CompoundStatement		213:13:7197:7197	4561870	0					
ANR	4563589	ExpressionStatement	"blocktype = ""else"""	382:7:12859:12877	4561870	0	True				
ANR	4563590	AssignmentExpression	"blocktype = ""else"""		4561870	0		=			
ANR	4563591	Identifier	blocktype		4561870	0					
ANR	4563592	PrimaryExpression	"""else"""		4561870	1					
ANR	4563593	ExpressionStatement	"r_cons_printf ( ""\\n%s {"" , indentstr )"	384:6:12893:12928	4561870	5	True				
ANR	4563594	CallExpression	"r_cons_printf ( ""\\n%s {"" , indentstr )"		4561870	0					
ANR	4563595	Callee	r_cons_printf		4561870	0					
ANR	4563596	Identifier	r_cons_printf		4561870	0					
ANR	4563597	ArgumentList	"""\\n%s {"""		4561870	1					
ANR	4563598	Argument	"""\\n%s {"""		4561870	0					
ANR	4563599	PrimaryExpression	"""\\n%s {"""		4561870	0					
ANR	4563600	Argument	indentstr		4561870	1					
ANR	4563601	Identifier	indentstr		4561870	0					
ANR	4563602	ExpressionStatement	indent ++	385:6:12936:12944	4561870	6	True				
ANR	4563603	PostIncDecOperationExpression	indent ++		4561870	0					
ANR	4563604	Identifier	indent		4561870	0					
ANR	4563605	IncDec	++		4561870	1					
ANR	4563606	ElseStatement	else		4561870	0					
ANR	4563607	CompoundStatement		221:4:7322:7372	4561870	0					
ANR	4563608	IdentifierDeclStatement	"ut64 addr = sdb_array_pop_num ( db , ""indent"" , NULL ) ;"	389:4:12975:13025	4561870	0	True				
ANR	4563609	IdentifierDecl	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		4561870	0					
ANR	4563610	IdentifierDeclType	ut64		4561870	0					
ANR	4563611	Identifier	addr		4561870	1					
ANR	4563612	AssignmentExpression	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		4561870	2		=			
ANR	4563613	Identifier	addr		4561870	0					
ANR	4563614	CallExpression	"sdb_array_pop_num ( db , ""indent"" , NULL )"		4561870	1					
ANR	4563615	Callee	sdb_array_pop_num		4561870	0					
ANR	4563616	Identifier	sdb_array_pop_num		4561870	0					
ANR	4563617	ArgumentList	db		4561870	1					
ANR	4563618	Argument	db		4561870	0					
ANR	4563619	Identifier	db		4561870	0					
ANR	4563620	Argument	"""indent"""		4561870	1					
ANR	4563621	PrimaryExpression	"""indent"""		4561870	0					
ANR	4563622	Argument	NULL		4561870	2					
ANR	4563623	Identifier	NULL		4561870	0					
ANR	4563624	IfStatement	if ( addr == UT64_MAX )		4561870	1					
ANR	4563625	Condition	addr == UT64_MAX	390:8:13035:13050	4561870	0	True				
ANR	4563626	EqualityExpression	addr == UT64_MAX		4561870	0		==			
ANR	4563627	Identifier	addr		4561870	0					
ANR	4563628	Identifier	UT64_MAX		4561870	1					
ANR	4563629	CompoundStatement		222:26:7400:7400	4561870	1					
ANR	4563630	ExpressionStatement	"r_cons_printf ( ""\\n(break)\\n"" )"	391:5:13060:13089	4561870	0	True				
ANR	4563631	CallExpression	"r_cons_printf ( ""\\n(break)\\n"" )"		4561870	0					
ANR	4563632	Callee	r_cons_printf		4561870	0					
ANR	4563633	Identifier	r_cons_printf		4561870	0					
ANR	4563634	ArgumentList	"""\\n(break)\\n"""		4561870	1					
ANR	4563635	Argument	"""\\n(break)\\n"""		4561870	0					
ANR	4563636	PrimaryExpression	"""\\n(break)\\n"""		4561870	0					
ANR	4563637	BreakStatement	break ;	392:5:13096:13101	4561870	1	True				
ANR	4563638	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , addr )"	394:4:13113:13158	4561870	2	True				
ANR	4563639	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , addr )"		4561870	0		=			
ANR	4563640	Identifier	bb		4561870	0					
ANR	4563641	CallExpression	"r_anal_bb_from_offset ( core -> anal , addr )"		4561870	1					
ANR	4563642	Callee	r_anal_bb_from_offset		4561870	0					
ANR	4563643	Identifier	r_anal_bb_from_offset		4561870	0					
ANR	4563644	ArgumentList	core -> anal		4561870	1					
ANR	4563645	Argument	core -> anal		4561870	0					
ANR	4563646	PtrMemberAccess	core -> anal		4561870	0					
ANR	4563647	Identifier	core		4561870	0					
ANR	4563648	Identifier	anal		4561870	1					
ANR	4563649	Argument	addr		4561870	1					
ANR	4563650	Identifier	addr		4561870	0					
ANR	4563651	ExpressionStatement	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"	395:4:13164:13213	4561870	3	True				
ANR	4563652	AssignmentExpression	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		4561870	0		=			
ANR	4563653	Identifier	nindent		4561870	0					
ANR	4563654	CallExpression	"sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		4561870	1					
ANR	4563655	Callee	sdb_num_get		4561870	0					
ANR	4563656	Identifier	sdb_num_get		4561870	0					
ANR	4563657	ArgumentList	db		4561870	1					
ANR	4563658	Argument	db		4561870	0					
ANR	4563659	Identifier	db		4561870	0					
ANR	4563660	Argument	K_INDENT ( addr )		4561870	1					
ANR	4563661	CallExpression	K_INDENT ( addr )		4561870	0					
ANR	4563662	Callee	K_INDENT		4561870	0					
ANR	4563663	Identifier	K_INDENT		4561870	0					
ANR	4563664	ArgumentList	addr		4561870	1					
ANR	4563665	Argument	addr		4561870	0					
ANR	4563666	Identifier	addr		4561870	0					
ANR	4563667	Argument	NULL		4561870	2					
ANR	4563668	Identifier	NULL		4561870	0					
ANR	4563669	IfStatement	if ( indent > nindent )		4561870	4					
ANR	4563670	Condition	indent > nindent	396:8:13223:13238	4561870	0	True				
ANR	4563671	RelationalExpression	indent > nindent		4561870	0		>			
ANR	4563672	Identifier	indent		4561870	0					
ANR	4563673	Identifier	nindent		4561870	1					
ANR	4563674	CompoundStatement		229:5:7595:7600	4561870	1					
ANR	4563675	IdentifierDeclStatement	int i ;	397:5:13248:13253	4561870	0	True				
ANR	4563676	IdentifierDecl	i		4561870	0					
ANR	4563677	IdentifierDeclType	int		4561870	0					
ANR	4563678	Identifier	i		4561870	1					
ANR	4563679	ForStatement	for ( i = indent ; i != nindent ; i -- )		4561870	1					
ANR	4563680	ForInit	i = indent ;	398:10:13265:13275	4561870	0	True				
ANR	4563681	AssignmentExpression	i = indent		4561870	0		=			
ANR	4563682	Identifier	i		4561870	0					
ANR	4563683	Identifier	indent		4561870	1					
ANR	4563684	Condition	i != nindent	398:22:13277:13288	4561870	1	True				
ANR	4563685	EqualityExpression	i != nindent		4561870	0		!=			
ANR	4563686	Identifier	i		4561870	0					
ANR	4563687	Identifier	nindent		4561870	1					
ANR	4563688	PostIncDecOperationExpression	i --	398:36:13291:13293	4561870	2	True				
ANR	4563689	Identifier	i		4561870	0					
ANR	4563690	IncDec	--		4561870	1					
ANR	4563691	CompoundStatement		230:41:7643:7643	4561870	3					
ANR	4563692	ExpressionStatement	SET_INDENT ( i )	399:6:13304:13318	4561870	0	True				
ANR	4563693	CallExpression	SET_INDENT ( i )		4561870	0					
ANR	4563694	Callee	SET_INDENT		4561870	0					
ANR	4563695	Identifier	SET_INDENT		4561870	0					
ANR	4563696	ArgumentList	i		4561870	1					
ANR	4563697	Argument	i		4561870	0					
ANR	4563698	Identifier	i		4561870	0					
ANR	4563699	ExpressionStatement	"r_cons_printf ( ""\\n%s}"" , indentstr )"	400:6:13326:13360	4561870	1	True				
ANR	4563700	CallExpression	"r_cons_printf ( ""\\n%s}"" , indentstr )"		4561870	0					
ANR	4563701	Callee	r_cons_printf		4561870	0					
ANR	4563702	Identifier	r_cons_printf		4561870	0					
ANR	4563703	ArgumentList	"""\\n%s}"""		4561870	1					
ANR	4563704	Argument	"""\\n%s}"""		4561870	0					
ANR	4563705	PrimaryExpression	"""\\n%s}"""		4561870	0					
ANR	4563706	Argument	indentstr		4561870	1					
ANR	4563707	Identifier	indentstr		4561870	0					
ANR	4563708	IfStatement	if ( nindent != indent )		4561870	5					
ANR	4563709	Condition	nindent != indent	403:8:13383:13399	4561870	0	True				
ANR	4563710	EqualityExpression	nindent != indent		4561870	0		!=			
ANR	4563711	Identifier	nindent		4561870	0					
ANR	4563712	Identifier	indent		4561870	1					
ANR	4563713	CompoundStatement		235:27:7749:7749	4561870	1					
ANR	4563714	ExpressionStatement	"r_cons_printf ( ""\\n%s} else {\\n"" , indentstr )"	404:5:13409:13452	4561870	0	True				
ANR	4563715	CallExpression	"r_cons_printf ( ""\\n%s} else {\\n"" , indentstr )"		4561870	0					
ANR	4563716	Callee	r_cons_printf		4561870	0					
ANR	4563717	Identifier	r_cons_printf		4561870	0					
ANR	4563718	ArgumentList	"""\\n%s} else {\\n"""		4561870	1					
ANR	4563719	Argument	"""\\n%s} else {\\n"""		4561870	0					
ANR	4563720	PrimaryExpression	"""\\n%s} else {\\n"""		4561870	0					
ANR	4563721	Argument	indentstr		4561870	1					
ANR	4563722	Identifier	indentstr		4561870	0					
ANR	4563723	ExpressionStatement	indent = nindent	406:4:13464:13480	4561870	6	True				
ANR	4563724	AssignmentExpression	indent = nindent		4561870	0		=			
ANR	4563725	Identifier	indent		4561870	0					
ANR	4563726	Identifier	nindent		4561870	1					
ANR	4563727	Condition	n_bb > 0	410:10:13514:13521	4561870	1	True				
ANR	4563728	RelationalExpression	n_bb > 0		4561870	0		>			
ANR	4563729	Identifier	n_bb		4561870	0					
ANR	4563730	PrimaryExpression	0		4561870	1					
ANR	4563731	ExpressionStatement	r_list_free ( visited )	411:1:13526:13547	4561870	48	True				
ANR	4563732	CallExpression	r_list_free ( visited )		4561870	0					
ANR	4563733	Callee	r_list_free		4561870	0					
ANR	4563734	Identifier	r_list_free		4561870	0					
ANR	4563735	ArgumentList	visited		4561870	1					
ANR	4563736	Argument	visited		4561870	0					
ANR	4563737	Identifier	visited		4561870	0					
ANR	4563738	ExpressionStatement	"r_cons_printf ( ""\\n}\\n"" )"	412:1:13550:13573	4561870	49	True				
ANR	4563739	CallExpression	"r_cons_printf ( ""\\n}\\n"" )"		4561870	0					
ANR	4563740	Callee	r_cons_printf		4561870	0					
ANR	4563741	Identifier	r_cons_printf		4561870	0					
ANR	4563742	ArgumentList	"""\\n}\\n"""		4561870	1					
ANR	4563743	Argument	"""\\n}\\n"""		4561870	0					
ANR	4563744	PrimaryExpression	"""\\n}\\n"""		4561870	0					
ANR	4563745	ExpressionStatement	r_config_hold_restore ( hc )	413:1:13576:13602	4561870	50	True				
ANR	4563746	CallExpression	r_config_hold_restore ( hc )		4561870	0					
ANR	4563747	Callee	r_config_hold_restore		4561870	0					
ANR	4563748	Identifier	r_config_hold_restore		4561870	0					
ANR	4563749	ArgumentList	hc		4561870	1					
ANR	4563750	Argument	hc		4561870	0					
ANR	4563751	Identifier	hc		4561870	0					
ANR	4563752	ExpressionStatement	r_config_hold_free ( hc )	414:1:13605:13628	4561870	51	True				
ANR	4563753	CallExpression	r_config_hold_free ( hc )		4561870	0					
ANR	4563754	Callee	r_config_hold_free		4561870	0					
ANR	4563755	Identifier	r_config_hold_free		4561870	0					
ANR	4563756	ArgumentList	hc		4561870	1					
ANR	4563757	Argument	hc		4561870	0					
ANR	4563758	Identifier	hc		4561870	0					
ANR	4563759	ExpressionStatement	sdb_free ( db )	415:1:13631:13644	4561870	52	True				
ANR	4563760	CallExpression	sdb_free ( db )		4561870	0					
ANR	4563761	Callee	sdb_free		4561870	0					
ANR	4563762	Identifier	sdb_free		4561870	0					
ANR	4563763	ArgumentList	db		4561870	1					
ANR	4563764	Argument	db		4561870	0					
ANR	4563765	Identifier	db		4561870	0					
ANR	4563766	ReturnStatement	return true ;	416:1:13647:13658	4561870	53	True				
ANR	4563767	Identifier	true		4561870	0					
ANR	4563768	ReturnType	R_API int		4561870	1					
ANR	4563769	Identifier	r_core_pseudo_code		4561870	2					
ANR	4563770	ParameterList	"RCore * core , const char * input"		4561870	3					
ANR	4563771	Parameter	RCore * core	169:29:5620:5630	4561870	0	True				
ANR	4563772	ParameterType	RCore *		4561870	0					
ANR	4563773	Identifier	core		4561870	1					
ANR	4563774	Parameter	const char * input	169:42:5633:5649	4561870	1	True				
ANR	4563775	ParameterType	const char *		4561870	0					
ANR	4563776	Identifier	input		4561870	1					
ANR	4563777	CFGEntryNode	ENTRY		4561870		True				
ANR	4563778	CFGExitNode	EXIT		4561870		True				
ANR	4563779	Symbol	n_bb		4561870						
ANR	4563780	Symbol	r_core_cmdf		4561870						
ANR	4563781	Symbol	* fcn		4561870						
ANR	4563782	Symbol	curfcn		4561870						
ANR	4563783	Symbol	fcn -> name		4561870						
ANR	4563784	Symbol	core -> offset		4561870						
ANR	4563785	Symbol	bb -> addr		4561870						
ANR	4563786	Symbol	sdb_const_get		4561870						
ANR	4563787	Symbol	mustprint		4561870						
ANR	4563788	Symbol	strlen		4561870						
ANR	4563789	Symbol	len		4561870						
ANR	4563790	Symbol	* I_TAB		4561870						
ANR	4563791	Symbol	html		4561870						
ANR	4563792	Symbol	K_MARK		4561870						
ANR	4563793	Symbol	* indentstr		4561870						
ANR	4563794	Symbol	jump		4561870						
ANR	4563795	Symbol	strcmp		4561870						
ANR	4563796	Symbol	NULL		4561870						
ANR	4563797	Symbol	r_list_newf		4561870						
ANR	4563798	Symbol	swap		4561870						
ANR	4563799	Symbol	queuegoto		4561870						
ANR	4563800	Symbol	nbb		4561870						
ANR	4563801	Symbol	r_list_contains		4561870						
ANR	4563802	Symbol	core		4561870						
ANR	4563803	Symbol	input		4561870						
ANR	4563804	Symbol	fail		4561870						
ANR	4563805	Symbol	strstr		4561870						
ANR	4563806	Symbol	r_config_get_i		4561870						
ANR	4563807	Symbol	true		4561870						
ANR	4563808	Symbol	* code		4561870						
ANR	4563809	Symbol	bb		4561870						
ANR	4563810	Symbol	* indent		4561870						
ANR	4563811	Symbol	sdb_array_pop_num		4561870						
ANR	4563812	Symbol	code		4561870						
ANR	4563813	Symbol	r_anal_bb_from_offset		4561870						
ANR	4563814	Symbol	indent		4561870						
ANR	4563815	Symbol	K_INDENT		4561870						
ANR	4563816	Symbol	* core		4561870						
ANR	4563817	Symbol	r_config_get		4561870						
ANR	4563818	Symbol	blocktype		4561870						
ANR	4563819	Symbol	cmdPdc		4561870						
ANR	4563820	Symbol	core -> anal		4561870						
ANR	4563821	Symbol	nindent		4561870						
ANR	4563822	Symbol	I_TAB		4561870						
ANR	4563823	Symbol	fcn		4561870						
ANR	4563824	Symbol	r_list_first		4561870						
ANR	4563825	Symbol	r_str_prefix_all		4561870						
ANR	4563826	Symbol	r_config_hold_new		4561870						
ANR	4563827	Symbol	indentstr		4561870						
ANR	4563828	Symbol	* cmdPdc		4561870						
ANR	4563829	Symbol	addr		4561870						
ANR	4563830	Symbol	UT64_MAX		4561870						
ANR	4563831	Symbol	core -> config		4561870						
ANR	4563832	Symbol	bb -> fail		4561870						
ANR	4563833	Symbol	sdb_num_get		4561870						
ANR	4563834	Symbol	sdb_new0		4561870						
ANR	4563835	Symbol	R_ANAL_FCN_TYPE_NULL		4561870						
ANR	4563836	Symbol	* * I_TAB		4561870						
ANR	4563837	Symbol	* bb		4561870						
ANR	4563838	Symbol	false		4561870						
ANR	4563839	Symbol	i		4561870						
ANR	4563840	Symbol	sdb_get		4561870						
ANR	4563841	Symbol	bb -> jump		4561870						
ANR	4563842	Symbol	r_anal_get_fcn_in		4561870						
ANR	4563843	Symbol	fcn -> bbs		4561870						
ANR	4563844	Symbol	visited		4561870						
ANR	4563845	Symbol	x		4561870						
ANR	4563846	Symbol	hc		4561870						
ANR	4563847	Symbol	K_ELSE		4561870						
ANR	4563848	Symbol	db		4561870						
ANR	4563849	Symbol	r_list_length		4561870						
ANR	4563850	Symbol	* len		4561870						
