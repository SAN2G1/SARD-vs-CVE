command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1191052	File	data/converged/CVE-2019-16718~_radare2/cxx.c								
ANR	1191053	Function	r_bin_demangle_cxx	7:0:127:1826							
ANR	1191054	FunctionDef	"r_bin_demangle_cxx (RBinFile * bf , const char * str , ut64 vaddr)"		1191053	0					
ANR	1191055	CompoundStatement		7:74:201:1826	1191053	0					
ANR	1191056	IdentifierDeclStatement	int i ;	10:1:297:302	1191053	0	True				
ANR	1191057	IdentifierDecl	i		1191053	0					
ANR	1191058	IdentifierDeclType	int		1191053	0					
ANR	1191059	Identifier	i		1191053	1					
ANR	1191060	IdentifierDeclStatement	int flags = DMGL_NO_OPTS | DMGL_PARAMS ;	12:1:318:356	1191053	1	True				
ANR	1191061	IdentifierDecl	flags = DMGL_NO_OPTS | DMGL_PARAMS		1191053	0					
ANR	1191062	IdentifierDeclType	int		1191053	0					
ANR	1191063	Identifier	flags		1191053	1					
ANR	1191064	AssignmentExpression	flags = DMGL_NO_OPTS | DMGL_PARAMS		1191053	2		=			
ANR	1191065	Identifier	flags		1191053	0					
ANR	1191066	InclusiveOrExpression	DMGL_NO_OPTS | DMGL_PARAMS		1191053	1		|			
ANR	1191067	Identifier	DMGL_NO_OPTS		1191053	0					
ANR	1191068	Identifier	DMGL_PARAMS		1191053	1					
ANR	1191069	IdentifierDeclStatement	"const char * prefixes [ ] = { ""__symbol_stub1_"" , ""reloc."" , ""sym.imp."" , ""imp."" , NULL } ;"	14:1:366:459	1191053	2	True				
ANR	1191070	IdentifierDecl	"* prefixes [ ] = { ""__symbol_stub1_"" , ""reloc."" , ""sym.imp."" , ""imp."" , NULL }"		1191053	0					
ANR	1191071	IdentifierDeclType	const char * [ ]		1191053	0					
ANR	1191072	Identifier	prefixes		1191053	1					
ANR	1191073	AssignmentExpression	"* prefixes [ ] = { ""__symbol_stub1_"" , ""reloc."" , ""sym.imp."" , ""imp."" , NULL }"		1191053	2		=			
ANR	1191074	Identifier	prefixes		1191053	0					
ANR	1191075	InitializerList	"""__symbol_stub1_"""		1191053	1					
ANR	1191076	PrimaryExpression	"""__symbol_stub1_"""		1191053	0					
ANR	1191077	PrimaryExpression	"""reloc."""		1191053	1					
ANR	1191078	PrimaryExpression	"""sym.imp."""		1191053	2					
ANR	1191079	PrimaryExpression	"""imp."""		1191053	3					
ANR	1191080	Identifier	NULL		1191053	4					
ANR	1191081	IdentifierDeclStatement	char * tmpstr = strdup ( str ) ;	21:1:462:489	1191053	3	True				
ANR	1191082	IdentifierDecl	* tmpstr = strdup ( str )		1191053	0					
ANR	1191083	IdentifierDeclType	char *		1191053	0					
ANR	1191084	Identifier	tmpstr		1191053	1					
ANR	1191085	AssignmentExpression	* tmpstr = strdup ( str )		1191053	2		=			
ANR	1191086	Identifier	tmpstr		1191053	0					
ANR	1191087	CallExpression	strdup ( str )		1191053	1					
ANR	1191088	Callee	strdup		1191053	0					
ANR	1191089	Identifier	strdup		1191053	0					
ANR	1191090	ArgumentList	str		1191053	1					
ANR	1191091	Argument	str		1191053	0					
ANR	1191092	Identifier	str		1191053	0					
ANR	1191093	IdentifierDeclStatement	char * p = tmpstr ;	22:1:492:508	1191053	4	True				
ANR	1191094	IdentifierDecl	* p = tmpstr		1191053	0					
ANR	1191095	IdentifierDeclType	char *		1191053	0					
ANR	1191096	Identifier	p		1191053	1					
ANR	1191097	AssignmentExpression	* p = tmpstr		1191053	2		=			
ANR	1191098	Identifier	tmpstr		1191053	0					
ANR	1191099	Identifier	tmpstr		1191053	1					
ANR	1191100	IfStatement	if ( p [ 0 ] == p [ 1 ] && * p == '_' )		1191053	5					
ANR	1191101	Condition	p [ 0 ] == p [ 1 ] && * p == '_'	24:5:516:540	1191053	0	True				
ANR	1191102	AndExpression	p [ 0 ] == p [ 1 ] && * p == '_'		1191053	0		&&			
ANR	1191103	EqualityExpression	p [ 0 ] == p [ 1 ]		1191053	0		==			
ANR	1191104	ArrayIndexing	p [ 0 ]		1191053	0					
ANR	1191105	Identifier	p		1191053	0					
ANR	1191106	PrimaryExpression	0		1191053	1					
ANR	1191107	ArrayIndexing	p [ 1 ]		1191053	1					
ANR	1191108	Identifier	p		1191053	0					
ANR	1191109	PrimaryExpression	1		1191053	1					
ANR	1191110	EqualityExpression	* p == '_'		1191053	1		==			
ANR	1191111	UnaryOperationExpression	* p		1191053	0					
ANR	1191112	UnaryOperator	*		1191053	0					
ANR	1191113	Identifier	p		1191053	1					
ANR	1191114	PrimaryExpression	'_'		1191053	1					
ANR	1191115	CompoundStatement		18:32:341:341	1191053	1					
ANR	1191116	ExpressionStatement	p ++	25:2:547:550	1191053	0	True				
ANR	1191117	PostIncDecOperationExpression	p ++		1191053	0					
ANR	1191118	Identifier	p		1191053	0					
ANR	1191119	IncDec	++		1191053	1					
ANR	1191120	ForStatement	for ( i = 0 ; prefixes [ i ] ; i ++ )		1191053	6					
ANR	1191121	ForInit	i = 0 ;	27:6:561:566	1191053	0	True				
ANR	1191122	AssignmentExpression	i = 0		1191053	0		=			
ANR	1191123	Identifier	i		1191053	0					
ANR	1191124	PrimaryExpression	0		1191053	1					
ANR	1191125	Condition	prefixes [ i ]	27:13:568:578	1191053	1	True				
ANR	1191126	ArrayIndexing	prefixes [ i ]		1191053	0					
ANR	1191127	Identifier	prefixes		1191053	0					
ANR	1191128	Identifier	i		1191053	1					
ANR	1191129	PostIncDecOperationExpression	i ++	27:26:581:583	1191053	2	True				
ANR	1191130	Identifier	i		1191053	0					
ANR	1191131	IncDec	++		1191053	1					
ANR	1191132	CompoundStatement		22:2:388:419	1191053	3					
ANR	1191133	IdentifierDeclStatement	int plen = strlen ( prefixes [ i ] ) ;	28:2:590:621	1191053	0	True				
ANR	1191134	IdentifierDecl	plen = strlen ( prefixes [ i ] )		1191053	0					
ANR	1191135	IdentifierDeclType	int		1191053	0					
ANR	1191136	Identifier	plen		1191053	1					
ANR	1191137	AssignmentExpression	plen = strlen ( prefixes [ i ] )		1191053	2		=			
ANR	1191138	Identifier	plen		1191053	0					
ANR	1191139	CallExpression	strlen ( prefixes [ i ] )		1191053	1					
ANR	1191140	Callee	strlen		1191053	0					
ANR	1191141	Identifier	strlen		1191053	0					
ANR	1191142	ArgumentList	prefixes [ i ]		1191053	1					
ANR	1191143	Argument	prefixes [ i ]		1191053	0					
ANR	1191144	ArrayIndexing	prefixes [ i ]		1191053	0					
ANR	1191145	Identifier	prefixes		1191053	0					
ANR	1191146	Identifier	i		1191053	1					
ANR	1191147	IfStatement	"if ( ! strncmp ( p , prefixes [ i ] , plen ) )"		1191053	1					
ANR	1191148	Condition	"! strncmp ( p , prefixes [ i ] , plen )"	29:6:629:659	1191053	0	True				
ANR	1191149	UnaryOperationExpression	"! strncmp ( p , prefixes [ i ] , plen )"		1191053	0					
ANR	1191150	UnaryOperator	!		1191053	0					
ANR	1191151	CallExpression	"strncmp ( p , prefixes [ i ] , plen )"		1191053	1					
ANR	1191152	Callee	strncmp		1191053	0					
ANR	1191153	Identifier	strncmp		1191053	0					
ANR	1191154	ArgumentList	p		1191053	1					
ANR	1191155	Argument	p		1191053	0					
ANR	1191156	Identifier	p		1191053	0					
ANR	1191157	Argument	prefixes [ i ]		1191053	1					
ANR	1191158	ArrayIndexing	prefixes [ i ]		1191053	0					
ANR	1191159	Identifier	prefixes		1191053	0					
ANR	1191160	Identifier	i		1191053	1					
ANR	1191161	Argument	plen		1191053	2					
ANR	1191162	Identifier	plen		1191053	0					
ANR	1191163	CompoundStatement		23:39:460:460	1191053	1					
ANR	1191164	ExpressionStatement	p += plen	30:3:667:676	1191053	0	True				
ANR	1191165	AssignmentExpression	p += plen		1191053	0		+=			
ANR	1191166	Identifier	p		1191053	0					
ANR	1191167	Identifier	plen		1191053	1					
ANR	1191168	BreakStatement	break ;	31:3:681:686	1191053	1	True				
ANR	1191169	IdentifierDeclStatement	"char * cxxabi = strstr ( p , ""@@CXXABI"" ) ;"	35:1:721:758	1191053	7	True				
ANR	1191170	IdentifierDecl	"* cxxabi = strstr ( p , ""@@CXXABI"" )"		1191053	0					
ANR	1191171	IdentifierDeclType	char *		1191053	0					
ANR	1191172	Identifier	cxxabi		1191053	1					
ANR	1191173	AssignmentExpression	"* cxxabi = strstr ( p , ""@@CXXABI"" )"		1191053	2		=			
ANR	1191174	Identifier	cxxabi		1191053	0					
ANR	1191175	CallExpression	"strstr ( p , ""@@CXXABI"" )"		1191053	1					
ANR	1191176	Callee	strstr		1191053	0					
ANR	1191177	Identifier	strstr		1191053	0					
ANR	1191178	ArgumentList	p		1191053	1					
ANR	1191179	Argument	p		1191053	0					
ANR	1191180	Identifier	p		1191053	0					
ANR	1191181	Argument	"""@@CXXABI"""		1191053	1					
ANR	1191182	PrimaryExpression	"""@@CXXABI"""		1191053	0					
ANR	1191183	IdentifierDeclStatement	"char * glibcxx = strstr ( p , ""@GLIBCXX"" ) ;"	36:1:761:799	1191053	8	True				
ANR	1191184	IdentifierDecl	"* glibcxx = strstr ( p , ""@GLIBCXX"" )"		1191053	0					
ANR	1191185	IdentifierDeclType	char *		1191053	0					
ANR	1191186	Identifier	glibcxx		1191053	1					
ANR	1191187	AssignmentExpression	"* glibcxx = strstr ( p , ""@GLIBCXX"" )"		1191053	2		=			
ANR	1191188	Identifier	glibcxx		1191053	0					
ANR	1191189	CallExpression	"strstr ( p , ""@GLIBCXX"" )"		1191053	1					
ANR	1191190	Callee	strstr		1191053	0					
ANR	1191191	Identifier	strstr		1191053	0					
ANR	1191192	ArgumentList	p		1191053	1					
ANR	1191193	Argument	p		1191053	0					
ANR	1191194	Identifier	p		1191053	0					
ANR	1191195	Argument	"""@GLIBCXX"""		1191053	1					
ANR	1191196	PrimaryExpression	"""@GLIBCXX"""		1191053	0					
ANR	1191197	IfStatement	if ( cxxabi )		1191053	9					
ANR	1191198	Condition	cxxabi	37:5:806:811	1191053	0	True				
ANR	1191199	Identifier	cxxabi		1191053	0					
ANR	1191200	CompoundStatement		31:13:612:612	1191053	1					
ANR	1191201	ExpressionStatement	* cxxabi = '\\0'	38:2:818:832	1191053	0	True				
ANR	1191202	AssignmentExpression	* cxxabi = '\\0'		1191053	0		=			
ANR	1191203	UnaryOperationExpression	* cxxabi		1191053	0					
ANR	1191204	UnaryOperator	*		1191053	0					
ANR	1191205	Identifier	cxxabi		1191053	1					
ANR	1191206	PrimaryExpression	'\\0'		1191053	1					
ANR	1191207	ElseStatement	else		1191053	0					
ANR	1191208	IfStatement	if ( glibcxx )		1191053	0					
ANR	1191209	Condition	glibcxx	39:12:846:852	1191053	0	True				
ANR	1191210	Identifier	glibcxx		1191053	0					
ANR	1191211	CompoundStatement		33:21:653:653	1191053	1					
ANR	1191212	IfStatement	if ( p < glibcxx && glibcxx [ - 1 ] == '@' )		1191053	0					
ANR	1191213	Condition	p < glibcxx && glibcxx [ - 1 ] == '@'	40:6:863:895	1191053	0	True				
ANR	1191214	AndExpression	p < glibcxx && glibcxx [ - 1 ] == '@'		1191053	0		&&			
ANR	1191215	RelationalExpression	p < glibcxx		1191053	0		<			
ANR	1191216	Identifier	p		1191053	0					
ANR	1191217	Identifier	glibcxx		1191053	1					
ANR	1191218	EqualityExpression	glibcxx [ - 1 ] == '@'		1191053	1		==			
ANR	1191219	ArrayIndexing	glibcxx [ - 1 ]		1191053	0					
ANR	1191220	Identifier	glibcxx		1191053	0					
ANR	1191221	UnaryOperationExpression	- 1		1191053	1					
ANR	1191222	UnaryOperator	-		1191053	0					
ANR	1191223	PrimaryExpression	1		1191053	1					
ANR	1191224	PrimaryExpression	'@'		1191053	1					
ANR	1191225	CompoundStatement		34:41:696:696	1191053	1					
ANR	1191226	ExpressionStatement	glibcxx [ - 1 ] = '\\0'	41:3:903:921	1191053	0	True				
ANR	1191227	AssignmentExpression	glibcxx [ - 1 ] = '\\0'		1191053	0		=			
ANR	1191228	ArrayIndexing	glibcxx [ - 1 ]		1191053	0					
ANR	1191229	Identifier	glibcxx		1191053	0					
ANR	1191230	UnaryOperationExpression	- 1		1191053	1					
ANR	1191231	UnaryOperator	-		1191053	0					
ANR	1191232	PrimaryExpression	1		1191053	1					
ANR	1191233	PrimaryExpression	'\\0'		1191053	1					
ANR	1191234	ElseStatement	else		1191053	0					
ANR	1191235	CompoundStatement		36:9:730:730	1191053	0					
ANR	1191236	ExpressionStatement	* glibcxx = '\\0'	43:3:937:952	1191053	0	True				
ANR	1191237	AssignmentExpression	* glibcxx = '\\0'		1191053	0		=			
ANR	1191238	UnaryOperationExpression	* glibcxx		1191053	0					
ANR	1191239	UnaryOperator	*		1191053	0					
ANR	1191240	Identifier	glibcxx		1191053	1					
ANR	1191241	PrimaryExpression	'\\0'		1191053	1					
ANR	1191242	IdentifierDeclStatement	"char * out = cplus_demangle_v3 ( p , flags ) ;"	47:1:975:1015	1191053	10	True				
ANR	1191243	IdentifierDecl	"* out = cplus_demangle_v3 ( p , flags )"		1191053	0					
ANR	1191244	IdentifierDeclType	char *		1191053	0					
ANR	1191245	Identifier	out		1191053	1					
ANR	1191246	AssignmentExpression	"* out = cplus_demangle_v3 ( p , flags )"		1191053	2		=			
ANR	1191247	Identifier	out		1191053	0					
ANR	1191248	CallExpression	"cplus_demangle_v3 ( p , flags )"		1191053	1					
ANR	1191249	Callee	cplus_demangle_v3		1191053	0					
ANR	1191250	Identifier	cplus_demangle_v3		1191053	0					
ANR	1191251	ArgumentList	p		1191053	1					
ANR	1191252	Argument	p		1191053	0					
ANR	1191253	Identifier	p		1191053	0					
ANR	1191254	Argument	flags		1191053	1					
ANR	1191255	Identifier	flags		1191053	0					
ANR	1191256	ExpressionStatement	free ( tmpstr )	52:1:1114:1127	1191053	11	True				
ANR	1191257	CallExpression	free ( tmpstr )		1191053	0					
ANR	1191258	Callee	free		1191053	0					
ANR	1191259	Identifier	free		1191053	0					
ANR	1191260	ArgumentList	tmpstr		1191053	1					
ANR	1191261	Argument	tmpstr		1191053	0					
ANR	1191262	Identifier	tmpstr		1191053	0					
ANR	1191263	IfStatement	if ( out )		1191053	12					
ANR	1191264	Condition	out	53:5:1134:1136	1191053	0	True				
ANR	1191265	Identifier	out		1191053	0					
ANR	1191266	CompoundStatement		48:2:941:979	1191053	1					
ANR	1191267	IdentifierDeclStatement	"char * sign = ( char * ) strchr ( out , '(' ) ;"	54:2:1143:1181	1191053	0	True				
ANR	1191268	IdentifierDecl	"* sign = ( char * ) strchr ( out , '(' )"		1191053	0					
ANR	1191269	IdentifierDeclType	char *		1191053	0					
ANR	1191270	Identifier	sign		1191053	1					
ANR	1191271	AssignmentExpression	"* sign = ( char * ) strchr ( out , '(' )"		1191053	2		=			
ANR	1191272	Identifier	sign		1191053	0					
ANR	1191273	CastExpression	"( char * ) strchr ( out , '(' )"		1191053	1					
ANR	1191274	CastTarget	char *		1191053	0					
ANR	1191275	CallExpression	"strchr ( out , '(' )"		1191053	1					
ANR	1191276	Callee	strchr		1191053	0					
ANR	1191277	Identifier	strchr		1191053	0					
ANR	1191278	ArgumentList	out		1191053	1					
ANR	1191279	Argument	out		1191053	0					
ANR	1191280	Identifier	out		1191053	0					
ANR	1191281	Argument	'('		1191053	1					
ANR	1191282	PrimaryExpression	'('		1191053	0					
ANR	1191283	IfStatement	if ( sign )		1191053	1					
ANR	1191284	Condition	sign	55:6:1189:1192	1191053	0	True				
ANR	1191285	Identifier	sign		1191053	0					
ANR	1191286	CompoundStatement		52:3:1039:1056	1191053	1					
ANR	1191287	IdentifierDeclStatement	char * str = out ;	56:3:1200:1215	1191053	0	True				
ANR	1191288	IdentifierDecl	* str = out		1191053	0					
ANR	1191289	IdentifierDeclType	char *		1191053	0					
ANR	1191290	Identifier	str		1191053	1					
ANR	1191291	AssignmentExpression	* str = out		1191053	2		=			
ANR	1191292	Identifier	out		1191053	0					
ANR	1191293	Identifier	out		1191053	1					
ANR	1191294	IdentifierDeclStatement	char * ptr = NULL ;	57:3:1220:1236	1191053	1	True				
ANR	1191295	IdentifierDecl	* ptr = NULL		1191053	0					
ANR	1191296	IdentifierDeclType	char *		1191053	0					
ANR	1191297	Identifier	ptr		1191053	1					
ANR	1191298	AssignmentExpression	* ptr = NULL		1191053	2		=			
ANR	1191299	Identifier	NULL		1191053	0					
ANR	1191300	Identifier	NULL		1191053	1					
ANR	1191301	IdentifierDeclStatement	char * nerd = NULL ;	58:3:1241:1258	1191053	2	True				
ANR	1191302	IdentifierDecl	* nerd = NULL		1191053	0					
ANR	1191303	IdentifierDeclType	char *		1191053	0					
ANR	1191304	Identifier	nerd		1191053	1					
ANR	1191305	AssignmentExpression	* nerd = NULL		1191053	2		=			
ANR	1191306	Identifier	NULL		1191053	0					
ANR	1191307	Identifier	NULL		1191053	1					
ANR	1191308	ForStatement	for ( ; ; )		1191053	3					
ANR	1191309	CompoundStatement		53:12:1070:1070	1191053	0					
ANR	1191310	ExpressionStatement	"ptr = strstr ( str , ""::"" )"	60:4:1278:1302	1191053	0	True				
ANR	1191311	AssignmentExpression	"ptr = strstr ( str , ""::"" )"		1191053	0		=			
ANR	1191312	Identifier	ptr		1191053	0					
ANR	1191313	CallExpression	"strstr ( str , ""::"" )"		1191053	1					
ANR	1191314	Callee	strstr		1191053	0					
ANR	1191315	Identifier	strstr		1191053	0					
ANR	1191316	ArgumentList	str		1191053	1					
ANR	1191317	Argument	str		1191053	0					
ANR	1191318	Identifier	str		1191053	0					
ANR	1191319	Argument	"""::"""		1191053	1					
ANR	1191320	PrimaryExpression	"""::"""		1191053	0					
ANR	1191321	IfStatement	if ( ! ptr || ptr > sign )		1191053	1					
ANR	1191322	Condition	! ptr || ptr > sign	61:8:1312:1329	1191053	0	True				
ANR	1191323	OrExpression	! ptr || ptr > sign		1191053	0		||			
ANR	1191324	UnaryOperationExpression	! ptr		1191053	0					
ANR	1191325	UnaryOperator	!		1191053	0					
ANR	1191326	Identifier	ptr		1191053	1					
ANR	1191327	RelationalExpression	ptr > sign		1191053	1		>			
ANR	1191328	Identifier	ptr		1191053	0					
ANR	1191329	Identifier	sign		1191053	1					
ANR	1191330	CompoundStatement		55:28:1130:1130	1191053	1					
ANR	1191331	BreakStatement	break ;	62:5:1339:1344	1191053	0	True				
ANR	1191332	ExpressionStatement	nerd = ptr	64:4:1356:1366	1191053	2	True				
ANR	1191333	AssignmentExpression	nerd = ptr		1191053	0		=			
ANR	1191334	Identifier	nerd		1191053	0					
ANR	1191335	Identifier	ptr		1191053	1					
ANR	1191336	ExpressionStatement	str = ptr + 1	65:4:1372:1385	1191053	3	True				
ANR	1191337	AssignmentExpression	str = ptr + 1		1191053	0		=			
ANR	1191338	Identifier	str		1191053	0					
ANR	1191339	AdditiveExpression	ptr + 1		1191053	1		+			
ANR	1191340	Identifier	ptr		1191053	0					
ANR	1191341	PrimaryExpression	1		1191053	1					
ANR	1191342	IfStatement	if ( nerd && * nerd )		1191053	4					
ANR	1191343	Condition	nerd && * nerd	67:7:1399:1411	1191053	0	True				
ANR	1191344	AndExpression	nerd && * nerd		1191053	0		&&			
ANR	1191345	Identifier	nerd		1191053	0					
ANR	1191346	UnaryOperationExpression	* nerd		1191053	1					
ANR	1191347	UnaryOperator	*		1191053	0					
ANR	1191348	Identifier	nerd		1191053	1					
ANR	1191349	CompoundStatement		61:22:1212:1212	1191053	1					
ANR	1191350	ExpressionStatement	* nerd = 0	68:4:1420:1429	1191053	0	True				
ANR	1191351	AssignmentExpression	* nerd = 0		1191053	0		=			
ANR	1191352	UnaryOperationExpression	* nerd		1191053	0					
ANR	1191353	UnaryOperator	*		1191053	0					
ANR	1191354	Identifier	nerd		1191053	1					
ANR	1191355	PrimaryExpression	0		1191053	1					
ANR	1191356	IfStatement	if ( bf )		1191053	1					
ANR	1191357	Condition	bf	69:8:1439:1440	1191053	0	True				
ANR	1191358	Identifier	bf		1191053	0					
ANR	1191359	CompoundStatement		64:5:1248:1310	1191053	1					
ANR	1191360	IdentifierDeclStatement	"RBinSymbol * sym = r_bin_file_add_method ( bf , out , nerd + 2 , 0 ) ;"	70:5:1450:1512	1191053	0	True				
ANR	1191361	IdentifierDecl	"* sym = r_bin_file_add_method ( bf , out , nerd + 2 , 0 )"		1191053	0					
ANR	1191362	IdentifierDeclType	RBinSymbol *		1191053	0					
ANR	1191363	Identifier	sym		1191053	1					
ANR	1191364	AssignmentExpression	"* sym = r_bin_file_add_method ( bf , out , nerd + 2 , 0 )"		1191053	2		=			
ANR	1191365	Identifier	sym		1191053	0					
ANR	1191366	CallExpression	"r_bin_file_add_method ( bf , out , nerd + 2 , 0 )"		1191053	1					
ANR	1191367	Callee	r_bin_file_add_method		1191053	0					
ANR	1191368	Identifier	r_bin_file_add_method		1191053	0					
ANR	1191369	ArgumentList	bf		1191053	1					
ANR	1191370	Argument	bf		1191053	0					
ANR	1191371	Identifier	bf		1191053	0					
ANR	1191372	Argument	out		1191053	1					
ANR	1191373	Identifier	out		1191053	0					
ANR	1191374	Argument	nerd + 2		1191053	2					
ANR	1191375	AdditiveExpression	nerd + 2		1191053	0		+			
ANR	1191376	Identifier	nerd		1191053	0					
ANR	1191377	PrimaryExpression	2		1191053	1					
ANR	1191378	Argument	0		1191053	3					
ANR	1191379	PrimaryExpression	0		1191053	0					
ANR	1191380	IfStatement	if ( sym )		1191053	1					
ANR	1191381	Condition	sym	71:9:1523:1525	1191053	0	True				
ANR	1191382	Identifier	sym		1191053	0					
ANR	1191383	CompoundStatement		65:14:1326:1326	1191053	1					
ANR	1191384	IfStatement	if ( sym -> vaddr != 0 && sym -> vaddr != vaddr )		1191053	0					
ANR	1191385	Condition	sym -> vaddr != 0 && sym -> vaddr != vaddr	72:10:1540:1577	1191053	0	True				
ANR	1191386	AndExpression	sym -> vaddr != 0 && sym -> vaddr != vaddr		1191053	0		&&			
ANR	1191387	EqualityExpression	sym -> vaddr != 0		1191053	0		!=			
ANR	1191388	PtrMemberAccess	sym -> vaddr		1191053	0					
ANR	1191389	Identifier	sym		1191053	0					
ANR	1191390	Identifier	vaddr		1191053	1					
ANR	1191391	PrimaryExpression	0		1191053	1					
ANR	1191392	EqualityExpression	sym -> vaddr != vaddr		1191053	1		!=			
ANR	1191393	PtrMemberAccess	sym -> vaddr		1191053	0					
ANR	1191394	Identifier	sym		1191053	0					
ANR	1191395	Identifier	vaddr		1191053	1					
ANR	1191396	Identifier	vaddr		1191053	1					
ANR	1191397	CompoundStatement		66:50:1378:1378	1191053	1					
ANR	1191398	IfStatement	if ( bf && bf -> rbin && bf -> rbin -> verbose )		1191053	0					
ANR	1191399	Condition	bf && bf -> rbin && bf -> rbin -> verbose	73:11:1593:1627	1191053	0	True				
ANR	1191400	AndExpression	bf && bf -> rbin && bf -> rbin -> verbose		1191053	0		&&			
ANR	1191401	Identifier	bf		1191053	0					
ANR	1191402	AndExpression	bf -> rbin && bf -> rbin -> verbose		1191053	1		&&			
ANR	1191403	PtrMemberAccess	bf -> rbin		1191053	0					
ANR	1191404	Identifier	bf		1191053	0					
ANR	1191405	Identifier	rbin		1191053	1					
ANR	1191406	PtrMemberAccess	bf -> rbin -> verbose		1191053	1					
ANR	1191407	PtrMemberAccess	bf -> rbin		1191053	0					
ANR	1191408	Identifier	bf		1191053	0					
ANR	1191409	Identifier	rbin		1191053	1					
ANR	1191410	Identifier	verbose		1191053	1					
ANR	1191411	CompoundStatement		67:48:1428:1428	1191053	1					
ANR	1191412	ExpressionStatement	"eprintf ( ""Dupped method found: %s\\n"" , sym -> name )"	74:8:1640:1688	1191053	0	True				
ANR	1191413	CallExpression	"eprintf ( ""Dupped method found: %s\\n"" , sym -> name )"		1191053	0					
ANR	1191414	Callee	eprintf		1191053	0					
ANR	1191415	Identifier	eprintf		1191053	0					
ANR	1191416	ArgumentList	"""Dupped method found: %s\\n"""		1191053	1					
ANR	1191417	Argument	"""Dupped method found: %s\\n"""		1191053	0					
ANR	1191418	PrimaryExpression	"""Dupped method found: %s\\n"""		1191053	0					
ANR	1191419	Argument	sym -> name		1191053	1					
ANR	1191420	PtrMemberAccess	sym -> name		1191053	0					
ANR	1191421	Identifier	sym		1191053	0					
ANR	1191422	Identifier	name		1191053	1					
ANR	1191423	IfStatement	if ( sym -> vaddr == 0 )		1191053	1					
ANR	1191424	Condition	sym -> vaddr == 0	77:10:1717:1731	1191053	0	True				
ANR	1191425	EqualityExpression	sym -> vaddr == 0		1191053	0		==			
ANR	1191426	PtrMemberAccess	sym -> vaddr		1191053	0					
ANR	1191427	Identifier	sym		1191053	0					
ANR	1191428	Identifier	vaddr		1191053	1					
ANR	1191429	PrimaryExpression	0		1191053	1					
ANR	1191430	CompoundStatement		71:27:1532:1532	1191053	1					
ANR	1191431	ExpressionStatement	sym -> vaddr = vaddr	78:7:1743:1761	1191053	0	True				
ANR	1191432	AssignmentExpression	sym -> vaddr = vaddr		1191053	0		=			
ANR	1191433	PtrMemberAccess	sym -> vaddr		1191053	0					
ANR	1191434	Identifier	sym		1191053	0					
ANR	1191435	Identifier	vaddr		1191053	1					
ANR	1191436	Identifier	vaddr		1191053	1					
ANR	1191437	ExpressionStatement	* nerd = ':'	82:4:1788:1799	1191053	2	True				
ANR	1191438	AssignmentExpression	* nerd = ':'		1191053	0		=			
ANR	1191439	UnaryOperationExpression	* nerd		1191053	0					
ANR	1191440	UnaryOperator	*		1191053	0					
ANR	1191441	Identifier	nerd		1191053	1					
ANR	1191442	PrimaryExpression	':'		1191053	1					
ANR	1191443	ReturnStatement	return out ;	86:1:1814:1824	1191053	13	True				
ANR	1191444	Identifier	out		1191053	0					
ANR	1191445	ReturnType	R_API char *		1191053	1					
ANR	1191446	Identifier	r_bin_demangle_cxx		1191053	2					
ANR	1191447	ParameterList	"RBinFile * bf , const char * str , ut64 vaddr"		1191053	3					
ANR	1191448	Parameter	RBinFile * bf	7:31:158:169	1191053	0	True				
ANR	1191449	ParameterType	RBinFile *		1191053	0					
ANR	1191450	Identifier	bf		1191053	1					
ANR	1191451	Parameter	const char * str	7:45:172:186	1191053	1	True				
ANR	1191452	ParameterType	const char *		1191053	0					
ANR	1191453	Identifier	str		1191053	1					
ANR	1191454	Parameter	ut64 vaddr	7:62:189:198	1191053	2	True				
ANR	1191455	ParameterType	ut64		1191053	0					
ANR	1191456	Identifier	vaddr		1191053	1					
ANR	1191457	CFGEntryNode	ENTRY		1191053		True				
ANR	1191458	CFGExitNode	EXIT		1191053		True				
ANR	1191459	InfiniteForNode	true		1191053		True				
ANR	1191460	Symbol	DMGL_NO_OPTS		1191053						
ANR	1191461	Symbol	* bf -> rbin		1191053						
ANR	1191462	Symbol	bf		1191053						
ANR	1191463	Symbol	bf -> rbin -> verbose		1191053						
ANR	1191464	Symbol	sym		1191053						
ANR	1191465	Symbol	glibcxx		1191053						
ANR	1191466	Symbol	flags		1191053						
ANR	1191467	Symbol	sign		1191053						
ANR	1191468	Symbol	strchr		1191053						
ANR	1191469	Symbol	vaddr		1191053						
ANR	1191470	Symbol	bf -> rbin		1191053						
ANR	1191471	Symbol	out		1191053						
ANR	1191472	Symbol	plen		1191053						
ANR	1191473	Symbol	strlen		1191053						
ANR	1191474	Symbol	strncmp		1191053						
ANR	1191475	Symbol	nerd		1191053						
ANR	1191476	Symbol	tmpstr		1191053						
ANR	1191477	Symbol	* cxxabi		1191053						
ANR	1191478	Symbol	NULL		1191053						
ANR	1191479	Symbol	sym -> vaddr		1191053						
ANR	1191480	Symbol	cxxabi		1191053						
ANR	1191481	Symbol	i		1191053						
ANR	1191482	Symbol	* bf		1191053						
ANR	1191483	Symbol	* glibcxx		1191053						
ANR	1191484	Symbol	r_bin_file_add_method		1191053						
ANR	1191485	Symbol	DMGL_PARAMS		1191053						
ANR	1191486	Symbol	ptr		1191053						
ANR	1191487	Symbol	str		1191053						
ANR	1191488	Symbol	p		1191053						
ANR	1191489	Symbol	* sym		1191053						
ANR	1191490	Symbol	prefixes		1191053						
ANR	1191491	Symbol	* * bf		1191053						
ANR	1191492	Symbol	* i		1191053						
ANR	1191493	Symbol	strstr		1191053						
ANR	1191494	Symbol	sym -> name		1191053						
ANR	1191495	Symbol	* p		1191053						
ANR	1191496	Symbol	* prefixes		1191053						
ANR	1191497	Symbol	strdup		1191053						
ANR	1191498	Symbol	cplus_demangle_v3		1191053						
ANR	1191499	Symbol	* nerd		1191053						
