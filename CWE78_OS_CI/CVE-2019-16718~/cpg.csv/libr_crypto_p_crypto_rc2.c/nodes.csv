command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4662572	File	data/converged/CVE-2019-16718~_radare2/libr_crypto_p_crypto_rc2.c								
ANR	4662573	DeclStmt									
ANR	4662574	Decl							const ut8	const ut8 [ 256 ]	PITABLE
ANR	4662575	ClassDef	rc2_state	27:0:1717:1777							
ANR	4662576	DeclStmt									
ANR	4662577	Decl							ut16	ut16 [ RC2_KEY_SIZE ]	ekey
ANR	4662578	DeclStmt									
ANR	4662579	Decl							int	int	key_size
ANR	4662580	Function	rc2_expandKey	34:0:1845:2659							
ANR	4662581	FunctionDef	"rc2_expandKey (struct rc2_state * state , const ut8 * key , int key_len)"		4662580	0					
ANR	4662582	CompoundStatement		34:80:1925:2659	4662580	0					
ANR	4662583	IdentifierDeclStatement	int i ;	35:1:1928:1933	4662580	0	True				
ANR	4662584	IdentifierDecl	i		4662580	0					
ANR	4662585	IdentifierDeclType	int		4662580	0					
ANR	4662586	Identifier	i		4662580	1					
ANR	4662587	IfStatement	if ( key_len < 1 || key_len > 128 )		4662580	1					
ANR	4662588	Condition	key_len < 1 || key_len > 128	37:5:1941:1968	4662580	0	True				
ANR	4662589	OrExpression	key_len < 1 || key_len > 128		4662580	0		||			
ANR	4662590	RelationalExpression	key_len < 1		4662580	0		<			
ANR	4662591	Identifier	key_len		4662580	0					
ANR	4662592	PrimaryExpression	1		4662580	1					
ANR	4662593	RelationalExpression	key_len > 128		4662580	1		>			
ANR	4662594	Identifier	key_len		4662580	0					
ANR	4662595	PrimaryExpression	128		4662580	1					
ANR	4662596	CompoundStatement		4:35:45:45	4662580	1					
ANR	4662597	ReturnStatement	return false ;	38:2:1975:1987	4662580	0	True				
ANR	4662598	Identifier	false		4662580	0					
ANR	4662599	ExpressionStatement	"memcpy ( state -> ekey , key , key_len )"	40:1:1993:2026	4662580	2	True				
ANR	4662600	CallExpression	"memcpy ( state -> ekey , key , key_len )"		4662580	0					
ANR	4662601	Callee	memcpy		4662580	0					
ANR	4662602	Identifier	memcpy		4662580	0					
ANR	4662603	ArgumentList	state -> ekey		4662580	1					
ANR	4662604	Argument	state -> ekey		4662580	0					
ANR	4662605	PtrMemberAccess	state -> ekey		4662580	0					
ANR	4662606	Identifier	state		4662580	0					
ANR	4662607	Identifier	ekey		4662580	1					
ANR	4662608	Argument	key		4662580	1					
ANR	4662609	Identifier	key		4662580	0					
ANR	4662610	Argument	key_len		4662580	2					
ANR	4662611	Identifier	key_len		4662580	0					
ANR	4662612	ForStatement	for ( i = key_len ; i < 128 ; i ++ )		4662580	3					
ANR	4662613	ForInit	i = key_len ;	43:7:2051:2062	4662580	0	True				
ANR	4662614	AssignmentExpression	i = key_len		4662580	0		=			
ANR	4662615	Identifier	i		4662580	0					
ANR	4662616	Identifier	key_len		4662580	1					
ANR	4662617	Condition	i < 128	43:20:2064:2070	4662580	1	True				
ANR	4662618	RelationalExpression	i < 128		4662580	0		<			
ANR	4662619	Identifier	i		4662580	0					
ANR	4662620	PrimaryExpression	128		4662580	1					
ANR	4662621	PostIncDecOperationExpression	i ++	43:29:2073:2075	4662580	2	True				
ANR	4662622	Identifier	i		4662580	0					
ANR	4662623	IncDec	++		4662580	1					
ANR	4662624	CompoundStatement		10:34:152:152	4662580	3					
ANR	4662625	ExpressionStatement	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255 ]	44:3:2083:2189	4662580	0	True				
ANR	4662626	AssignmentExpression	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255 ]		4662580	0		=			
ANR	4662627	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		4662580	0					
ANR	4662628	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662629	CastTarget	ut8 *		4662580	0					
ANR	4662630	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662631	Identifier	state		4662580	0					
ANR	4662632	Identifier	ekey		4662580	1					
ANR	4662633	Identifier	i		4662580	1					
ANR	4662634	ArrayIndexing	PITABLE [ ( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255 ]		4662580	1					
ANR	4662635	Identifier	PITABLE		4662580	0					
ANR	4662636	BitAndExpression	( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255		4662580	1		&			
ANR	4662637	AdditiveExpression	( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ]		4662580	0		+			
ANR	4662638	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i - key_len ]		4662580	0					
ANR	4662639	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662640	CastTarget	ut8 *		4662580	0					
ANR	4662641	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662642	Identifier	state		4662580	0					
ANR	4662643	Identifier	ekey		4662580	1					
ANR	4662644	AdditiveExpression	i - key_len		4662580	1		-			
ANR	4662645	Identifier	i		4662580	0					
ANR	4662646	Identifier	key_len		4662580	1					
ANR	4662647	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i - 1 ]		4662580	1					
ANR	4662648	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662649	CastTarget	ut8 *		4662580	0					
ANR	4662650	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662651	Identifier	state		4662580	0					
ANR	4662652	Identifier	ekey		4662580	1					
ANR	4662653	AdditiveExpression	i - 1		4662580	1		-			
ANR	4662654	Identifier	i		4662580	0					
ANR	4662655	PrimaryExpression	1		4662580	1					
ANR	4662656	PrimaryExpression	255		4662580	1					
ANR	4662657	IdentifierDeclStatement	int ekey_len = ( BITS + 7 ) >> 3 ;	47:1:2197:2227	4662580	4	True				
ANR	4662658	IdentifierDecl	ekey_len = ( BITS + 7 ) >> 3		4662580	0					
ANR	4662659	IdentifierDeclType	int		4662580	0					
ANR	4662660	Identifier	ekey_len		4662580	1					
ANR	4662661	AssignmentExpression	ekey_len = ( BITS + 7 ) >> 3		4662580	2		=			
ANR	4662662	Identifier	ekey_len		4662580	0					
ANR	4662663	ShiftExpression	( BITS + 7 ) >> 3		4662580	1		>>			
ANR	4662664	AdditiveExpression	BITS + 7		4662580	0		+			
ANR	4662665	Identifier	BITS		4662580	0					
ANR	4662666	PrimaryExpression	7		4662580	1					
ANR	4662667	PrimaryExpression	3		4662580	1					
ANR	4662668	ExpressionStatement	i = 128 - ekey_len	48:1:2230:2248	4662580	5	True				
ANR	4662669	AssignmentExpression	i = 128 - ekey_len		4662580	0		=			
ANR	4662670	Identifier	i		4662580	0					
ANR	4662671	AdditiveExpression	128 - ekey_len		4662580	1		-			
ANR	4662672	PrimaryExpression	128		4662580	0					
ANR	4662673	Identifier	ekey_len		4662580	1					
ANR	4662674	ExpressionStatement	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) ) ]	49:2:2252:2333	4662580	6	True				
ANR	4662675	AssignmentExpression	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) ) ]		4662580	0		=			
ANR	4662676	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		4662580	0					
ANR	4662677	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662678	CastTarget	ut8 *		4662580	0					
ANR	4662679	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662680	Identifier	state		4662580	0					
ANR	4662681	Identifier	ekey		4662580	1					
ANR	4662682	Identifier	i		4662580	1					
ANR	4662683	ArrayIndexing	PITABLE [ ( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) ) ]		4662580	1					
ANR	4662684	Identifier	PITABLE		4662580	0					
ANR	4662685	BitAndExpression	( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) )		4662580	1		&			
ANR	4662686	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		4662580	0					
ANR	4662687	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662688	CastTarget	ut8 *		4662580	0					
ANR	4662689	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662690	Identifier	state		4662580	0					
ANR	4662691	Identifier	ekey		4662580	1					
ANR	4662692	Identifier	i		4662580	1					
ANR	4662693	ShiftExpression	255 >> ( 7 & - BITS )		4662580	1		>>			
ANR	4662694	PrimaryExpression	255		4662580	0					
ANR	4662695	BitAndExpression	7 & - BITS		4662580	1		&			
ANR	4662696	PrimaryExpression	7		4662580	0					
ANR	4662697	UnaryOperationExpression	- BITS		4662580	1					
ANR	4662698	UnaryOperator	-		4662580	0					
ANR	4662699	Identifier	BITS		4662580	1					
ANR	4662700	WhileStatement	while ( i -- )		4662580	7					
ANR	4662701	Condition	i --	52:9:2362:2364	4662580	0	True				
ANR	4662702	PostIncDecOperationExpression	i --		4662580	0					
ANR	4662703	Identifier	i		4662580	0					
ANR	4662704	IncDec	--		4662580	1					
ANR	4662705	CompoundStatement		19:14:441:441	4662580	1					
ANR	4662706	ExpressionStatement	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ] ]	53:3:2372:2471	4662580	0	True				
ANR	4662707	AssignmentExpression	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ] ]		4662580	0		=			
ANR	4662708	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		4662580	0					
ANR	4662709	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662710	CastTarget	ut8 *		4662580	0					
ANR	4662711	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662712	Identifier	state		4662580	0					
ANR	4662713	Identifier	ekey		4662580	1					
ANR	4662714	Identifier	i		4662580	1					
ANR	4662715	ArrayIndexing	PITABLE [ ( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ] ]		4662580	1					
ANR	4662716	Identifier	PITABLE		4662580	0					
ANR	4662717	ExclusiveOrExpression	( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ]		4662580	1		^			
ANR	4662718	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i + 1 ]		4662580	0					
ANR	4662719	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662720	CastTarget	ut8 *		4662580	0					
ANR	4662721	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662722	Identifier	state		4662580	0					
ANR	4662723	Identifier	ekey		4662580	1					
ANR	4662724	AdditiveExpression	i + 1		4662580	1		+			
ANR	4662725	Identifier	i		4662580	0					
ANR	4662726	PrimaryExpression	1		4662580	1					
ANR	4662727	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i + ekey_len ]		4662580	1					
ANR	4662728	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662729	CastTarget	ut8 *		4662580	0					
ANR	4662730	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662731	Identifier	state		4662580	0					
ANR	4662732	Identifier	ekey		4662580	1					
ANR	4662733	AdditiveExpression	i + ekey_len		4662580	1		+			
ANR	4662734	Identifier	i		4662580	0					
ANR	4662735	Identifier	ekey_len		4662580	1					
ANR	4662736	ForStatement	for ( i = RC2_KEY_SIZE - 1 ; i >= 0 ; i -- )		4662580	8					
ANR	4662737	ForInit	i = RC2_KEY_SIZE - 1 ;	57:7:2512:2532	4662580	0	True				
ANR	4662738	AssignmentExpression	i = RC2_KEY_SIZE - 1		4662580	0		=			
ANR	4662739	Identifier	i		4662580	0					
ANR	4662740	AdditiveExpression	RC2_KEY_SIZE - 1		4662580	1		-			
ANR	4662741	Identifier	RC2_KEY_SIZE		4662580	0					
ANR	4662742	PrimaryExpression	1		4662580	1					
ANR	4662743	Condition	i >= 0	57:29:2534:2539	4662580	1	True				
ANR	4662744	RelationalExpression	i >= 0		4662580	0		>=			
ANR	4662745	Identifier	i		4662580	0					
ANR	4662746	PrimaryExpression	0		4662580	1					
ANR	4662747	PostIncDecOperationExpression	i --	57:37:2542:2544	4662580	2	True				
ANR	4662748	Identifier	i		4662580	0					
ANR	4662749	IncDec	--		4662580	1					
ANR	4662750	CompoundStatement		24:42:621:621	4662580	3					
ANR	4662751	ExpressionStatement	state -> ekey [ i ] = ( ( ut8 * ) state -> ekey ) [ i * 2 ] + ( ( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8 )	58:3:2552:2637	4662580	0	True				
ANR	4662752	AssignmentExpression	state -> ekey [ i ] = ( ( ut8 * ) state -> ekey ) [ i * 2 ] + ( ( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8 )		4662580	0		=			
ANR	4662753	ArrayIndexing	state -> ekey [ i ]		4662580	0					
ANR	4662754	PtrMemberAccess	state -> ekey		4662580	0					
ANR	4662755	Identifier	state		4662580	0					
ANR	4662756	Identifier	ekey		4662580	1					
ANR	4662757	Identifier	i		4662580	1					
ANR	4662758	AdditiveExpression	( ( ut8 * ) state -> ekey ) [ i * 2 ] + ( ( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8 )		4662580	1		+			
ANR	4662759	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i * 2 ]		4662580	0					
ANR	4662760	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662761	CastTarget	ut8 *		4662580	0					
ANR	4662762	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662763	Identifier	state		4662580	0					
ANR	4662764	Identifier	ekey		4662580	1					
ANR	4662765	MultiplicativeExpression	i * 2		4662580	1		*			
ANR	4662766	Identifier	i		4662580	0					
ANR	4662767	PrimaryExpression	2		4662580	1					
ANR	4662768	ShiftExpression	( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8		4662580	1		<<			
ANR	4662769	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ]		4662580	0					
ANR	4662770	CastExpression	( ut8 * ) state -> ekey		4662580	0					
ANR	4662771	CastTarget	ut8 *		4662580	0					
ANR	4662772	PtrMemberAccess	state -> ekey		4662580	1					
ANR	4662773	Identifier	state		4662580	0					
ANR	4662774	Identifier	ekey		4662580	1					
ANR	4662775	AdditiveExpression	i * 2 + 1		4662580	1		+			
ANR	4662776	MultiplicativeExpression	i * 2		4662580	0		*			
ANR	4662777	Identifier	i		4662580	0					
ANR	4662778	PrimaryExpression	2		4662580	1					
ANR	4662779	PrimaryExpression	1		4662580	1					
ANR	4662780	PrimaryExpression	8		4662580	1					
ANR	4662781	ReturnStatement	return true ;	61:2:2646:2657	4662580	9	True				
ANR	4662782	Identifier	true		4662580	0					
ANR	4662783	ReturnType	static bool		4662580	1					
ANR	4662784	Identifier	rc2_expandKey		4662580	2					
ANR	4662785	ParameterList	"struct rc2_state * state , const ut8 * key , int key_len"		4662580	3					
ANR	4662786	Parameter	struct rc2_state * state	34:26:1871:1893	4662580	0	True				
ANR	4662787	ParameterType	struct rc2_state *		4662580	0					
ANR	4662788	Identifier	state		4662580	1					
ANR	4662789	Parameter	const ut8 * key	34:51:1896:1909	4662580	1	True				
ANR	4662790	ParameterType	const ut8 *		4662580	0					
ANR	4662791	Identifier	key		4662580	1					
ANR	4662792	Parameter	int key_len	34:67:1912:1922	4662580	2	True				
ANR	4662793	ParameterType	int		4662580	0					
ANR	4662794	Identifier	key_len		4662580	1					
ANR	4662795	CFGEntryNode	ENTRY		4662580		True				
ANR	4662796	CFGExitNode	EXIT		4662580		True				
ANR	4662797	Symbol	* * i		4662580						
ANR	4662798	Symbol	false		4662580						
ANR	4662799	Symbol	i		4662580						
ANR	4662800	Symbol	* * ekey_len		4662580						
ANR	4662801	Symbol	* * state		4662580						
ANR	4662802	Symbol	* state		4662580						
ANR	4662803	Symbol	ekey_len		4662580						
ANR	4662804	Symbol	* * * state		4662580						
ANR	4662805	Symbol	* BITS		4662580						
ANR	4662806	Symbol	* i		4662580						
ANR	4662807	Symbol	* * key_len		4662580						
ANR	4662808	Symbol	* key_len		4662580						
ANR	4662809	Symbol	PITABLE		4662580						
ANR	4662810	Symbol	* * state -> ekey		4662580						
ANR	4662811	Symbol	true		4662580						
ANR	4662812	Symbol	BITS		4662580						
ANR	4662813	Symbol	RC2_KEY_SIZE		4662580						
ANR	4662814	Symbol	state		4662580						
ANR	4662815	Symbol	* state -> ekey		4662580						
ANR	4662816	Symbol	state -> ekey		4662580						
ANR	4662817	Symbol	* PITABLE		4662580						
ANR	4662818	Symbol	* ekey_len		4662580						
ANR	4662819	Symbol	key		4662580						
ANR	4662820	Symbol	key_len		4662580						
ANR	4662821	Function	rc2_crypt8	64:0:2662:3747							
ANR	4662822	FunctionDef	"rc2_crypt8 (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf)"		4662821	0					
ANR	4662823	CompoundStatement		64:79:2741:3747	4662821	0					
ANR	4662824	IdentifierDeclStatement	int i ;	65:1:2744:2749	4662821	0	True				
ANR	4662825	IdentifierDecl	i		4662821	0					
ANR	4662826	IdentifierDeclType	int		4662821	0					
ANR	4662827	Identifier	i		4662821	1					
ANR	4662828	IdentifierDeclStatement	"ut16 x76 , x54 , x32 , x10 ;"	66:1:2752:2775	4662821	1	True				
ANR	4662829	IdentifierDecl	x76		4662821	0					
ANR	4662830	IdentifierDeclType	ut16		4662821	0					
ANR	4662831	Identifier	x76		4662821	1					
ANR	4662832	IdentifierDecl	x54		4662821	1					
ANR	4662833	IdentifierDeclType	ut16		4662821	0					
ANR	4662834	Identifier	x54		4662821	1					
ANR	4662835	IdentifierDecl	x32		4662821	2					
ANR	4662836	IdentifierDeclType	ut16		4662821	0					
ANR	4662837	Identifier	x32		4662821	1					
ANR	4662838	IdentifierDecl	x10		4662821	3					
ANR	4662839	IdentifierDeclType	ut16		4662821	0					
ANR	4662840	Identifier	x10		4662821	1					
ANR	4662841	ExpressionStatement	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]	68:1:2779:2811	4662821	2	True				
ANR	4662842	AssignmentExpression	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		4662821	0		=			
ANR	4662843	Identifier	x76		4662821	0					
ANR	4662844	InclusiveOrExpression	( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		4662821	1		|			
ANR	4662845	ShiftExpression	inbuf [ 7 ] << 8		4662821	0		<<			
ANR	4662846	ArrayIndexing	inbuf [ 7 ]		4662821	0					
ANR	4662847	Identifier	inbuf		4662821	0					
ANR	4662848	PrimaryExpression	7		4662821	1					
ANR	4662849	PrimaryExpression	8		4662821	1					
ANR	4662850	ArrayIndexing	inbuf [ 6 ]		4662821	1					
ANR	4662851	Identifier	inbuf		4662821	0					
ANR	4662852	PrimaryExpression	6		4662821	1					
ANR	4662853	ExpressionStatement	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]	69:1:2814:2846	4662821	3	True				
ANR	4662854	AssignmentExpression	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		4662821	0		=			
ANR	4662855	Identifier	x54		4662821	0					
ANR	4662856	InclusiveOrExpression	( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		4662821	1		|			
ANR	4662857	ShiftExpression	inbuf [ 5 ] << 8		4662821	0		<<			
ANR	4662858	ArrayIndexing	inbuf [ 5 ]		4662821	0					
ANR	4662859	Identifier	inbuf		4662821	0					
ANR	4662860	PrimaryExpression	5		4662821	1					
ANR	4662861	PrimaryExpression	8		4662821	1					
ANR	4662862	ArrayIndexing	inbuf [ 4 ]		4662821	1					
ANR	4662863	Identifier	inbuf		4662821	0					
ANR	4662864	PrimaryExpression	4		4662821	1					
ANR	4662865	ExpressionStatement	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]	70:1:2849:2881	4662821	4	True				
ANR	4662866	AssignmentExpression	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		4662821	0		=			
ANR	4662867	Identifier	x32		4662821	0					
ANR	4662868	InclusiveOrExpression	( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		4662821	1		|			
ANR	4662869	ShiftExpression	inbuf [ 3 ] << 8		4662821	0		<<			
ANR	4662870	ArrayIndexing	inbuf [ 3 ]		4662821	0					
ANR	4662871	Identifier	inbuf		4662821	0					
ANR	4662872	PrimaryExpression	3		4662821	1					
ANR	4662873	PrimaryExpression	8		4662821	1					
ANR	4662874	ArrayIndexing	inbuf [ 2 ]		4662821	1					
ANR	4662875	Identifier	inbuf		4662821	0					
ANR	4662876	PrimaryExpression	2		4662821	1					
ANR	4662877	ExpressionStatement	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]	71:1:2884:2916	4662821	5	True				
ANR	4662878	AssignmentExpression	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		4662821	0		=			
ANR	4662879	Identifier	x10		4662821	0					
ANR	4662880	InclusiveOrExpression	( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		4662821	1		|			
ANR	4662881	ShiftExpression	inbuf [ 1 ] << 8		4662821	0		<<			
ANR	4662882	ArrayIndexing	inbuf [ 1 ]		4662821	0					
ANR	4662883	Identifier	inbuf		4662821	0					
ANR	4662884	PrimaryExpression	1		4662821	1					
ANR	4662885	PrimaryExpression	8		4662821	1					
ANR	4662886	ArrayIndexing	inbuf [ 0 ]		4662821	1					
ANR	4662887	Identifier	inbuf		4662821	0					
ANR	4662888	PrimaryExpression	0		4662821	1					
ANR	4662889	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		4662821	6					
ANR	4662890	ForInit	i = 0 ;	73:6:2925:2930	4662821	0	True				
ANR	4662891	AssignmentExpression	i = 0		4662821	0		=			
ANR	4662892	Identifier	i		4662821	0					
ANR	4662893	PrimaryExpression	0		4662821	1					
ANR	4662894	Condition	i < 16	73:13:2932:2937	4662821	1	True				
ANR	4662895	RelationalExpression	i < 16		4662821	0		<			
ANR	4662896	Identifier	i		4662821	0					
ANR	4662897	PrimaryExpression	16		4662821	1					
ANR	4662898	PostIncDecOperationExpression	i ++	73:21:2940:2942	4662821	2	True				
ANR	4662899	Identifier	i		4662821	0					
ANR	4662900	IncDec	++		4662821	1					
ANR	4662901	CompoundStatement		10:26:203:203	4662821	3					
ANR	4662902	ExpressionStatement	x10 += ( ( x32 & ~x76 ) + ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]	74:2:2949:3009	4662821	0	True				
ANR	4662903	AssignmentExpression	x10 += ( ( x32 & ~x76 ) + ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		4662821	0		+=			
ANR	4662904	Identifier	x10		4662821	0					
ANR	4662905	AdditiveExpression	( ( x32 & ~x76 ) + ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		4662821	1		+			
ANR	4662906	AdditiveExpression	( x32 & ~x76 ) + ( x54 & x76 )		4662821	0		+			
ANR	4662907	BitAndExpression	x32 & ~x76		4662821	0		&			
ANR	4662908	Identifier	x32		4662821	0					
ANR	4662909	Identifier	~x76		4662821	1					
ANR	4662910	BitAndExpression	x54 & x76		4662821	1		&			
ANR	4662911	Identifier	x54		4662821	0					
ANR	4662912	Identifier	x76		4662821	1					
ANR	4662913	ArrayIndexing	state -> ekey [ 4 * i + 0 ]		4662821	1					
ANR	4662914	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4662915	Identifier	state		4662821	0					
ANR	4662916	Identifier	ekey		4662821	1					
ANR	4662917	AdditiveExpression	4 * i + 0		4662821	1		+			
ANR	4662918	MultiplicativeExpression	4 * i		4662821	0		*			
ANR	4662919	PrimaryExpression	4		4662821	0					
ANR	4662920	Identifier	i		4662821	1					
ANR	4662921	PrimaryExpression	0		4662821	1					
ANR	4662922	ExpressionStatement	x10 = ( x10 << 1 ) + ( x10 >> 15 & 1 )	75:2:3013:3047	4662821	1	True				
ANR	4662923	AssignmentExpression	x10 = ( x10 << 1 ) + ( x10 >> 15 & 1 )		4662821	0		=			
ANR	4662924	Identifier	x10		4662821	0					
ANR	4662925	AdditiveExpression	( x10 << 1 ) + ( x10 >> 15 & 1 )		4662821	1		+			
ANR	4662926	ShiftExpression	x10 << 1		4662821	0		<<			
ANR	4662927	Identifier	x10		4662821	0					
ANR	4662928	PrimaryExpression	1		4662821	1					
ANR	4662929	BitAndExpression	x10 >> 15 & 1		4662821	1		&			
ANR	4662930	ShiftExpression	x10 >> 15		4662821	0		>>			
ANR	4662931	Identifier	x10		4662821	0					
ANR	4662932	PrimaryExpression	15		4662821	1					
ANR	4662933	PrimaryExpression	1		4662821	1					
ANR	4662934	ExpressionStatement	x32 += ( ( x54 & ~x10 ) + ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]	77:2:3052:3112	4662821	2	True				
ANR	4662935	AssignmentExpression	x32 += ( ( x54 & ~x10 ) + ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		4662821	0		+=			
ANR	4662936	Identifier	x32		4662821	0					
ANR	4662937	AdditiveExpression	( ( x54 & ~x10 ) + ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		4662821	1		+			
ANR	4662938	AdditiveExpression	( x54 & ~x10 ) + ( x76 & x10 )		4662821	0		+			
ANR	4662939	BitAndExpression	x54 & ~x10		4662821	0		&			
ANR	4662940	Identifier	x54		4662821	0					
ANR	4662941	Identifier	~x10		4662821	1					
ANR	4662942	BitAndExpression	x76 & x10		4662821	1		&			
ANR	4662943	Identifier	x76		4662821	0					
ANR	4662944	Identifier	x10		4662821	1					
ANR	4662945	ArrayIndexing	state -> ekey [ 4 * i + 1 ]		4662821	1					
ANR	4662946	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4662947	Identifier	state		4662821	0					
ANR	4662948	Identifier	ekey		4662821	1					
ANR	4662949	AdditiveExpression	4 * i + 1		4662821	1		+			
ANR	4662950	MultiplicativeExpression	4 * i		4662821	0		*			
ANR	4662951	PrimaryExpression	4		4662821	0					
ANR	4662952	Identifier	i		4662821	1					
ANR	4662953	PrimaryExpression	1		4662821	1					
ANR	4662954	ExpressionStatement	x32 = ( x32 << 2 ) + ( x32 >> 14 & 3 )	78:2:3116:3150	4662821	3	True				
ANR	4662955	AssignmentExpression	x32 = ( x32 << 2 ) + ( x32 >> 14 & 3 )		4662821	0		=			
ANR	4662956	Identifier	x32		4662821	0					
ANR	4662957	AdditiveExpression	( x32 << 2 ) + ( x32 >> 14 & 3 )		4662821	1		+			
ANR	4662958	ShiftExpression	x32 << 2		4662821	0		<<			
ANR	4662959	Identifier	x32		4662821	0					
ANR	4662960	PrimaryExpression	2		4662821	1					
ANR	4662961	BitAndExpression	x32 >> 14 & 3		4662821	1		&			
ANR	4662962	ShiftExpression	x32 >> 14		4662821	0		>>			
ANR	4662963	Identifier	x32		4662821	0					
ANR	4662964	PrimaryExpression	14		4662821	1					
ANR	4662965	PrimaryExpression	3		4662821	1					
ANR	4662966	ExpressionStatement	x54 += ( ( x76 & ~x32 ) + ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]	80:2:3155:3215	4662821	4	True				
ANR	4662967	AssignmentExpression	x54 += ( ( x76 & ~x32 ) + ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		4662821	0		+=			
ANR	4662968	Identifier	x54		4662821	0					
ANR	4662969	AdditiveExpression	( ( x76 & ~x32 ) + ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		4662821	1		+			
ANR	4662970	AdditiveExpression	( x76 & ~x32 ) + ( x10 & x32 )		4662821	0		+			
ANR	4662971	BitAndExpression	x76 & ~x32		4662821	0		&			
ANR	4662972	Identifier	x76		4662821	0					
ANR	4662973	Identifier	~x32		4662821	1					
ANR	4662974	BitAndExpression	x10 & x32		4662821	1		&			
ANR	4662975	Identifier	x10		4662821	0					
ANR	4662976	Identifier	x32		4662821	1					
ANR	4662977	ArrayIndexing	state -> ekey [ 4 * i + 2 ]		4662821	1					
ANR	4662978	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4662979	Identifier	state		4662821	0					
ANR	4662980	Identifier	ekey		4662821	1					
ANR	4662981	AdditiveExpression	4 * i + 2		4662821	1		+			
ANR	4662982	MultiplicativeExpression	4 * i		4662821	0		*			
ANR	4662983	PrimaryExpression	4		4662821	0					
ANR	4662984	Identifier	i		4662821	1					
ANR	4662985	PrimaryExpression	2		4662821	1					
ANR	4662986	ExpressionStatement	x54 = ( x54 << 3 ) + ( x54 >> 13 & 7 )	81:2:3219:3253	4662821	5	True				
ANR	4662987	AssignmentExpression	x54 = ( x54 << 3 ) + ( x54 >> 13 & 7 )		4662821	0		=			
ANR	4662988	Identifier	x54		4662821	0					
ANR	4662989	AdditiveExpression	( x54 << 3 ) + ( x54 >> 13 & 7 )		4662821	1		+			
ANR	4662990	ShiftExpression	x54 << 3		4662821	0		<<			
ANR	4662991	Identifier	x54		4662821	0					
ANR	4662992	PrimaryExpression	3		4662821	1					
ANR	4662993	BitAndExpression	x54 >> 13 & 7		4662821	1		&			
ANR	4662994	ShiftExpression	x54 >> 13		4662821	0		>>			
ANR	4662995	Identifier	x54		4662821	0					
ANR	4662996	PrimaryExpression	13		4662821	1					
ANR	4662997	PrimaryExpression	7		4662821	1					
ANR	4662998	ExpressionStatement	x76 += ( ( x10 & ~x54 ) + ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]	83:2:3258:3318	4662821	6	True				
ANR	4662999	AssignmentExpression	x76 += ( ( x10 & ~x54 ) + ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		4662821	0		+=			
ANR	4663000	Identifier	x76		4662821	0					
ANR	4663001	AdditiveExpression	( ( x10 & ~x54 ) + ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		4662821	1		+			
ANR	4663002	AdditiveExpression	( x10 & ~x54 ) + ( x32 & x54 )		4662821	0		+			
ANR	4663003	BitAndExpression	x10 & ~x54		4662821	0		&			
ANR	4663004	Identifier	x10		4662821	0					
ANR	4663005	Identifier	~x54		4662821	1					
ANR	4663006	BitAndExpression	x32 & x54		4662821	1		&			
ANR	4663007	Identifier	x32		4662821	0					
ANR	4663008	Identifier	x54		4662821	1					
ANR	4663009	ArrayIndexing	state -> ekey [ 4 * i + 3 ]		4662821	1					
ANR	4663010	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4663011	Identifier	state		4662821	0					
ANR	4663012	Identifier	ekey		4662821	1					
ANR	4663013	AdditiveExpression	4 * i + 3		4662821	1		+			
ANR	4663014	MultiplicativeExpression	4 * i		4662821	0		*			
ANR	4663015	PrimaryExpression	4		4662821	0					
ANR	4663016	Identifier	i		4662821	1					
ANR	4663017	PrimaryExpression	3		4662821	1					
ANR	4663018	ExpressionStatement	x76 = ( x76 << 5 ) + ( x76 >> 11 & 31 )	84:2:3322:3357	4662821	7	True				
ANR	4663019	AssignmentExpression	x76 = ( x76 << 5 ) + ( x76 >> 11 & 31 )		4662821	0		=			
ANR	4663020	Identifier	x76		4662821	0					
ANR	4663021	AdditiveExpression	( x76 << 5 ) + ( x76 >> 11 & 31 )		4662821	1		+			
ANR	4663022	ShiftExpression	x76 << 5		4662821	0		<<			
ANR	4663023	Identifier	x76		4662821	0					
ANR	4663024	PrimaryExpression	5		4662821	1					
ANR	4663025	BitAndExpression	x76 >> 11 & 31		4662821	1		&			
ANR	4663026	ShiftExpression	x76 >> 11		4662821	0		>>			
ANR	4663027	Identifier	x76		4662821	0					
ANR	4663028	PrimaryExpression	11		4662821	1					
ANR	4663029	PrimaryExpression	31		4662821	1					
ANR	4663030	IfStatement	if ( i == 4 || i == 10 )		4662821	8					
ANR	4663031	Condition	i == 4 || i == 10	86:6:3366:3382	4662821	0	True				
ANR	4663032	OrExpression	i == 4 || i == 10		4662821	0		||			
ANR	4663033	EqualityExpression	i == 4		4662821	0		==			
ANR	4663034	Identifier	i		4662821	0					
ANR	4663035	PrimaryExpression	4		4662821	1					
ANR	4663036	EqualityExpression	i == 10		4662821	1		==			
ANR	4663037	Identifier	i		4662821	0					
ANR	4663038	PrimaryExpression	10		4662821	1					
ANR	4663039	CompoundStatement		23:25:643:643	4662821	1					
ANR	4663040	ExpressionStatement	x10 += state -> ekey [ x76 & 63 ]	87:3:3390:3418	4662821	0	True				
ANR	4663041	AssignmentExpression	x10 += state -> ekey [ x76 & 63 ]		4662821	0		+=			
ANR	4663042	Identifier	x10		4662821	0					
ANR	4663043	ArrayIndexing	state -> ekey [ x76 & 63 ]		4662821	1					
ANR	4663044	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4663045	Identifier	state		4662821	0					
ANR	4663046	Identifier	ekey		4662821	1					
ANR	4663047	BitAndExpression	x76 & 63		4662821	1		&			
ANR	4663048	Identifier	x76		4662821	0					
ANR	4663049	PrimaryExpression	63		4662821	1					
ANR	4663050	ExpressionStatement	x32 += state -> ekey [ x10 & 63 ]	88:3:3423:3451	4662821	1	True				
ANR	4663051	AssignmentExpression	x32 += state -> ekey [ x10 & 63 ]		4662821	0		+=			
ANR	4663052	Identifier	x32		4662821	0					
ANR	4663053	ArrayIndexing	state -> ekey [ x10 & 63 ]		4662821	1					
ANR	4663054	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4663055	Identifier	state		4662821	0					
ANR	4663056	Identifier	ekey		4662821	1					
ANR	4663057	BitAndExpression	x10 & 63		4662821	1		&			
ANR	4663058	Identifier	x10		4662821	0					
ANR	4663059	PrimaryExpression	63		4662821	1					
ANR	4663060	ExpressionStatement	x54 += state -> ekey [ x32 & 63 ]	89:3:3456:3484	4662821	2	True				
ANR	4663061	AssignmentExpression	x54 += state -> ekey [ x32 & 63 ]		4662821	0		+=			
ANR	4663062	Identifier	x54		4662821	0					
ANR	4663063	ArrayIndexing	state -> ekey [ x32 & 63 ]		4662821	1					
ANR	4663064	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4663065	Identifier	state		4662821	0					
ANR	4663066	Identifier	ekey		4662821	1					
ANR	4663067	BitAndExpression	x32 & 63		4662821	1		&			
ANR	4663068	Identifier	x32		4662821	0					
ANR	4663069	PrimaryExpression	63		4662821	1					
ANR	4663070	ExpressionStatement	x76 += state -> ekey [ x54 & 63 ]	90:3:3489:3517	4662821	3	True				
ANR	4663071	AssignmentExpression	x76 += state -> ekey [ x54 & 63 ]		4662821	0		+=			
ANR	4663072	Identifier	x76		4662821	0					
ANR	4663073	ArrayIndexing	state -> ekey [ x54 & 63 ]		4662821	1					
ANR	4663074	PtrMemberAccess	state -> ekey		4662821	0					
ANR	4663075	Identifier	state		4662821	0					
ANR	4663076	Identifier	ekey		4662821	1					
ANR	4663077	BitAndExpression	x54 & 63		4662821	1		&			
ANR	4663078	Identifier	x54		4662821	0					
ANR	4663079	PrimaryExpression	63		4662821	1					
ANR	4663080	ExpressionStatement	outbuf [ 0 ] = ( ut8 ) x10	94:1:3528:3549	4662821	7	True				
ANR	4663081	AssignmentExpression	outbuf [ 0 ] = ( ut8 ) x10		4662821	0		=			
ANR	4663082	ArrayIndexing	outbuf [ 0 ]		4662821	0					
ANR	4663083	Identifier	outbuf		4662821	0					
ANR	4663084	PrimaryExpression	0		4662821	1					
ANR	4663085	CastExpression	( ut8 ) x10		4662821	1					
ANR	4663086	CastTarget	ut8		4662821	0					
ANR	4663087	Identifier	x10		4662821	1					
ANR	4663088	ExpressionStatement	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )	95:1:3552:3580	4662821	8	True				
ANR	4663089	AssignmentExpression	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )		4662821	0		=			
ANR	4663090	ArrayIndexing	outbuf [ 1 ]		4662821	0					
ANR	4663091	Identifier	outbuf		4662821	0					
ANR	4663092	PrimaryExpression	1		4662821	1					
ANR	4663093	CastExpression	( ut8 ) ( x10 >> 8 )		4662821	1					
ANR	4663094	CastTarget	ut8		4662821	0					
ANR	4663095	ShiftExpression	x10 >> 8		4662821	1		>>			
ANR	4663096	Identifier	x10		4662821	0					
ANR	4663097	PrimaryExpression	8		4662821	1					
ANR	4663098	ExpressionStatement	outbuf [ 2 ] = ( ut8 ) x32	96:1:3583:3604	4662821	9	True				
ANR	4663099	AssignmentExpression	outbuf [ 2 ] = ( ut8 ) x32		4662821	0		=			
ANR	4663100	ArrayIndexing	outbuf [ 2 ]		4662821	0					
ANR	4663101	Identifier	outbuf		4662821	0					
ANR	4663102	PrimaryExpression	2		4662821	1					
ANR	4663103	CastExpression	( ut8 ) x32		4662821	1					
ANR	4663104	CastTarget	ut8		4662821	0					
ANR	4663105	Identifier	x32		4662821	1					
ANR	4663106	ExpressionStatement	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )	97:1:3607:3635	4662821	10	True				
ANR	4663107	AssignmentExpression	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )		4662821	0		=			
ANR	4663108	ArrayIndexing	outbuf [ 3 ]		4662821	0					
ANR	4663109	Identifier	outbuf		4662821	0					
ANR	4663110	PrimaryExpression	3		4662821	1					
ANR	4663111	CastExpression	( ut8 ) ( x32 >> 8 )		4662821	1					
ANR	4663112	CastTarget	ut8		4662821	0					
ANR	4663113	ShiftExpression	x32 >> 8		4662821	1		>>			
ANR	4663114	Identifier	x32		4662821	0					
ANR	4663115	PrimaryExpression	8		4662821	1					
ANR	4663116	ExpressionStatement	outbuf [ 4 ] = ( ut8 ) x54	98:1:3638:3659	4662821	11	True				
ANR	4663117	AssignmentExpression	outbuf [ 4 ] = ( ut8 ) x54		4662821	0		=			
ANR	4663118	ArrayIndexing	outbuf [ 4 ]		4662821	0					
ANR	4663119	Identifier	outbuf		4662821	0					
ANR	4663120	PrimaryExpression	4		4662821	1					
ANR	4663121	CastExpression	( ut8 ) x54		4662821	1					
ANR	4663122	CastTarget	ut8		4662821	0					
ANR	4663123	Identifier	x54		4662821	1					
ANR	4663124	ExpressionStatement	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )	99:1:3662:3690	4662821	12	True				
ANR	4663125	AssignmentExpression	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )		4662821	0		=			
ANR	4663126	ArrayIndexing	outbuf [ 5 ]		4662821	0					
ANR	4663127	Identifier	outbuf		4662821	0					
ANR	4663128	PrimaryExpression	5		4662821	1					
ANR	4663129	CastExpression	( ut8 ) ( x54 >> 8 )		4662821	1					
ANR	4663130	CastTarget	ut8		4662821	0					
ANR	4663131	ShiftExpression	x54 >> 8		4662821	1		>>			
ANR	4663132	Identifier	x54		4662821	0					
ANR	4663133	PrimaryExpression	8		4662821	1					
ANR	4663134	ExpressionStatement	outbuf [ 6 ] = ( ut8 ) x76	100:1:3693:3714	4662821	13	True				
ANR	4663135	AssignmentExpression	outbuf [ 6 ] = ( ut8 ) x76		4662821	0		=			
ANR	4663136	ArrayIndexing	outbuf [ 6 ]		4662821	0					
ANR	4663137	Identifier	outbuf		4662821	0					
ANR	4663138	PrimaryExpression	6		4662821	1					
ANR	4663139	CastExpression	( ut8 ) x76		4662821	1					
ANR	4663140	CastTarget	ut8		4662821	0					
ANR	4663141	Identifier	x76		4662821	1					
ANR	4663142	ExpressionStatement	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )	101:1:3717:3745	4662821	14	True				
ANR	4663143	AssignmentExpression	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )		4662821	0		=			
ANR	4663144	ArrayIndexing	outbuf [ 7 ]		4662821	0					
ANR	4663145	Identifier	outbuf		4662821	0					
ANR	4663146	PrimaryExpression	7		4662821	1					
ANR	4663147	CastExpression	( ut8 ) ( x76 >> 8 )		4662821	1					
ANR	4663148	CastTarget	ut8		4662821	0					
ANR	4663149	ShiftExpression	x76 >> 8		4662821	1		>>			
ANR	4663150	Identifier	x76		4662821	0					
ANR	4663151	PrimaryExpression	8		4662821	1					
ANR	4663152	ReturnType	static void		4662821	1					
ANR	4663153	Identifier	rc2_crypt8		4662821	2					
ANR	4663154	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf"		4662821	3					
ANR	4663155	Parameter	struct rc2_state * state	64:23:2685:2707	4662821	0	True				
ANR	4663156	ParameterType	struct rc2_state *		4662821	0					
ANR	4663157	Identifier	state		4662821	1					
ANR	4663158	Parameter	const ut8 * inbuf	64:48:2710:2725	4662821	1	True				
ANR	4663159	ParameterType	const ut8 *		4662821	0					
ANR	4663160	Identifier	inbuf		4662821	1					
ANR	4663161	Parameter	ut8 * outbuf	64:66:2728:2738	4662821	2	True				
ANR	4663162	ParameterType	ut8 *		4662821	0					
ANR	4663163	Identifier	outbuf		4662821	1					
ANR	4663164	CFGEntryNode	ENTRY		4662821		True				
ANR	4663165	CFGExitNode	EXIT		4662821		True				
ANR	4663166	Symbol	* x76		4662821						
ANR	4663167	Symbol	* x10		4662821						
ANR	4663168	Symbol	* x32		4662821						
ANR	4663169	Symbol	* x54		4662821						
ANR	4663170	Symbol	~x76		4662821						
ANR	4663171	Symbol	~x10		4662821						
ANR	4663172	Symbol	~x32		4662821						
ANR	4663173	Symbol	~x54		4662821						
ANR	4663174	Symbol	* inbuf		4662821						
ANR	4663175	Symbol	i		4662821						
ANR	4663176	Symbol	* * state		4662821						
ANR	4663177	Symbol	* state		4662821						
ANR	4663178	Symbol	* outbuf		4662821						
ANR	4663179	Symbol	* i		4662821						
ANR	4663180	Symbol	inbuf		4662821						
ANR	4663181	Symbol	outbuf		4662821						
ANR	4663182	Symbol	x54		4662821						
ANR	4663183	Symbol	x10		4662821						
ANR	4663184	Symbol	x76		4662821						
ANR	4663185	Symbol	x32		4662821						
ANR	4663186	Symbol	state		4662821						
ANR	4663187	Symbol	* state -> ekey		4662821						
ANR	4663188	Symbol	state -> ekey		4662821						
ANR	4663189	Function	rc2_dcrypt8	105:0:3751:4885							
ANR	4663190	FunctionDef	"rc2_dcrypt8 (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf)"		4663189	0					
ANR	4663191	CompoundStatement		105:80:3831:4885	4663189	0					
ANR	4663192	IdentifierDeclStatement	int i ;	106:1:3834:3839	4663189	0	True				
ANR	4663193	IdentifierDecl	i		4663189	0					
ANR	4663194	IdentifierDeclType	int		4663189	0					
ANR	4663195	Identifier	i		4663189	1					
ANR	4663196	IdentifierDeclStatement	"ut16 x76 , x54 , x32 , x10 ;"	107:1:3842:3865	4663189	1	True				
ANR	4663197	IdentifierDecl	x76		4663189	0					
ANR	4663198	IdentifierDeclType	ut16		4663189	0					
ANR	4663199	Identifier	x76		4663189	1					
ANR	4663200	IdentifierDecl	x54		4663189	1					
ANR	4663201	IdentifierDeclType	ut16		4663189	0					
ANR	4663202	Identifier	x54		4663189	1					
ANR	4663203	IdentifierDecl	x32		4663189	2					
ANR	4663204	IdentifierDeclType	ut16		4663189	0					
ANR	4663205	Identifier	x32		4663189	1					
ANR	4663206	IdentifierDecl	x10		4663189	3					
ANR	4663207	IdentifierDeclType	ut16		4663189	0					
ANR	4663208	Identifier	x10		4663189	1					
ANR	4663209	ExpressionStatement	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]	109:1:3869:3901	4663189	2	True				
ANR	4663210	AssignmentExpression	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		4663189	0		=			
ANR	4663211	Identifier	x76		4663189	0					
ANR	4663212	InclusiveOrExpression	( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		4663189	1		|			
ANR	4663213	ShiftExpression	inbuf [ 7 ] << 8		4663189	0		<<			
ANR	4663214	ArrayIndexing	inbuf [ 7 ]		4663189	0					
ANR	4663215	Identifier	inbuf		4663189	0					
ANR	4663216	PrimaryExpression	7		4663189	1					
ANR	4663217	PrimaryExpression	8		4663189	1					
ANR	4663218	ArrayIndexing	inbuf [ 6 ]		4663189	1					
ANR	4663219	Identifier	inbuf		4663189	0					
ANR	4663220	PrimaryExpression	6		4663189	1					
ANR	4663221	ExpressionStatement	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]	110:1:3904:3936	4663189	3	True				
ANR	4663222	AssignmentExpression	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		4663189	0		=			
ANR	4663223	Identifier	x54		4663189	0					
ANR	4663224	InclusiveOrExpression	( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		4663189	1		|			
ANR	4663225	ShiftExpression	inbuf [ 5 ] << 8		4663189	0		<<			
ANR	4663226	ArrayIndexing	inbuf [ 5 ]		4663189	0					
ANR	4663227	Identifier	inbuf		4663189	0					
ANR	4663228	PrimaryExpression	5		4663189	1					
ANR	4663229	PrimaryExpression	8		4663189	1					
ANR	4663230	ArrayIndexing	inbuf [ 4 ]		4663189	1					
ANR	4663231	Identifier	inbuf		4663189	0					
ANR	4663232	PrimaryExpression	4		4663189	1					
ANR	4663233	ExpressionStatement	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]	111:1:3939:3971	4663189	4	True				
ANR	4663234	AssignmentExpression	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		4663189	0		=			
ANR	4663235	Identifier	x32		4663189	0					
ANR	4663236	InclusiveOrExpression	( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		4663189	1		|			
ANR	4663237	ShiftExpression	inbuf [ 3 ] << 8		4663189	0		<<			
ANR	4663238	ArrayIndexing	inbuf [ 3 ]		4663189	0					
ANR	4663239	Identifier	inbuf		4663189	0					
ANR	4663240	PrimaryExpression	3		4663189	1					
ANR	4663241	PrimaryExpression	8		4663189	1					
ANR	4663242	ArrayIndexing	inbuf [ 2 ]		4663189	1					
ANR	4663243	Identifier	inbuf		4663189	0					
ANR	4663244	PrimaryExpression	2		4663189	1					
ANR	4663245	ExpressionStatement	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]	112:1:3974:4006	4663189	5	True				
ANR	4663246	AssignmentExpression	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		4663189	0		=			
ANR	4663247	Identifier	x10		4663189	0					
ANR	4663248	InclusiveOrExpression	( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		4663189	1		|			
ANR	4663249	ShiftExpression	inbuf [ 1 ] << 8		4663189	0		<<			
ANR	4663250	ArrayIndexing	inbuf [ 1 ]		4663189	0					
ANR	4663251	Identifier	inbuf		4663189	0					
ANR	4663252	PrimaryExpression	1		4663189	1					
ANR	4663253	PrimaryExpression	8		4663189	1					
ANR	4663254	ArrayIndexing	inbuf [ 0 ]		4663189	1					
ANR	4663255	Identifier	inbuf		4663189	0					
ANR	4663256	PrimaryExpression	0		4663189	1					
ANR	4663257	ForStatement	for ( i = 15 ; i >= 0 ; i -- )		4663189	6					
ANR	4663258	ForInit	i = 15 ;	114:6:4015:4021	4663189	0	True				
ANR	4663259	AssignmentExpression	i = 15		4663189	0		=			
ANR	4663260	Identifier	i		4663189	0					
ANR	4663261	PrimaryExpression	15		4663189	1					
ANR	4663262	Condition	i >= 0	114:14:4023:4028	4663189	1	True				
ANR	4663263	RelationalExpression	i >= 0		4663189	0		>=			
ANR	4663264	Identifier	i		4663189	0					
ANR	4663265	PrimaryExpression	0		4663189	1					
ANR	4663266	PostIncDecOperationExpression	i --	114:22:4031:4033	4663189	2	True				
ANR	4663267	Identifier	i		4663189	0					
ANR	4663268	IncDec	--		4663189	1					
ANR	4663269	CompoundStatement		10:27:204:204	4663189	3					
ANR	4663270	ExpressionStatement	x76 &= 65535	115:2:4040:4052	4663189	0	True				
ANR	4663271	AssignmentExpression	x76 &= 65535		4663189	0		&=			
ANR	4663272	Identifier	x76		4663189	0					
ANR	4663273	PrimaryExpression	65535		4663189	1					
ANR	4663274	ExpressionStatement	x76 = ( x76 << 11 ) | ( x76 >> 5 )	116:2:4056:4086	4663189	1	True				
ANR	4663275	AssignmentExpression	x76 = ( x76 << 11 ) | ( x76 >> 5 )		4663189	0		=			
ANR	4663276	Identifier	x76		4663189	0					
ANR	4663277	InclusiveOrExpression	( x76 << 11 ) | ( x76 >> 5 )		4663189	1		|			
ANR	4663278	ShiftExpression	x76 << 11		4663189	0		<<			
ANR	4663279	Identifier	x76		4663189	0					
ANR	4663280	PrimaryExpression	11		4663189	1					
ANR	4663281	ShiftExpression	x76 >> 5		4663189	1		>>			
ANR	4663282	Identifier	x76		4663189	0					
ANR	4663283	PrimaryExpression	5		4663189	1					
ANR	4663284	ExpressionStatement	x76 -= ( ( x10 & ~x54 ) | ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]	117:2:4090:4150	4663189	2	True				
ANR	4663285	AssignmentExpression	x76 -= ( ( x10 & ~x54 ) | ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		4663189	0		-=			
ANR	4663286	Identifier	x76		4663189	0					
ANR	4663287	AdditiveExpression	( ( x10 & ~x54 ) | ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		4663189	1		+			
ANR	4663288	InclusiveOrExpression	( x10 & ~x54 ) | ( x32 & x54 )		4663189	0		|			
ANR	4663289	BitAndExpression	x10 & ~x54		4663189	0		&			
ANR	4663290	Identifier	x10		4663189	0					
ANR	4663291	Identifier	~x54		4663189	1					
ANR	4663292	BitAndExpression	x32 & x54		4663189	1		&			
ANR	4663293	Identifier	x32		4663189	0					
ANR	4663294	Identifier	x54		4663189	1					
ANR	4663295	ArrayIndexing	state -> ekey [ 4 * i + 3 ]		4663189	1					
ANR	4663296	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663297	Identifier	state		4663189	0					
ANR	4663298	Identifier	ekey		4663189	1					
ANR	4663299	AdditiveExpression	4 * i + 3		4663189	1		+			
ANR	4663300	MultiplicativeExpression	4 * i		4663189	0		*			
ANR	4663301	PrimaryExpression	4		4663189	0					
ANR	4663302	Identifier	i		4663189	1					
ANR	4663303	PrimaryExpression	3		4663189	1					
ANR	4663304	ExpressionStatement	x76 &= 65535	119:2:4155:4167	4663189	3	True				
ANR	4663305	AssignmentExpression	x76 &= 65535		4663189	0		&=			
ANR	4663306	Identifier	x76		4663189	0					
ANR	4663307	PrimaryExpression	65535		4663189	1					
ANR	4663308	ExpressionStatement	x54 = ( x54 << 13 ) | ( x54 >> 3 )	120:2:4171:4201	4663189	4	True				
ANR	4663309	AssignmentExpression	x54 = ( x54 << 13 ) | ( x54 >> 3 )		4663189	0		=			
ANR	4663310	Identifier	x54		4663189	0					
ANR	4663311	InclusiveOrExpression	( x54 << 13 ) | ( x54 >> 3 )		4663189	1		|			
ANR	4663312	ShiftExpression	x54 << 13		4663189	0		<<			
ANR	4663313	Identifier	x54		4663189	0					
ANR	4663314	PrimaryExpression	13		4663189	1					
ANR	4663315	ShiftExpression	x54 >> 3		4663189	1		>>			
ANR	4663316	Identifier	x54		4663189	0					
ANR	4663317	PrimaryExpression	3		4663189	1					
ANR	4663318	ExpressionStatement	x54 -= ( ( x76 & ~x32 ) | ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]	121:2:4205:4265	4663189	5	True				
ANR	4663319	AssignmentExpression	x54 -= ( ( x76 & ~x32 ) | ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		4663189	0		-=			
ANR	4663320	Identifier	x54		4663189	0					
ANR	4663321	AdditiveExpression	( ( x76 & ~x32 ) | ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		4663189	1		+			
ANR	4663322	InclusiveOrExpression	( x76 & ~x32 ) | ( x10 & x32 )		4663189	0		|			
ANR	4663323	BitAndExpression	x76 & ~x32		4663189	0		&			
ANR	4663324	Identifier	x76		4663189	0					
ANR	4663325	Identifier	~x32		4663189	1					
ANR	4663326	BitAndExpression	x10 & x32		4663189	1		&			
ANR	4663327	Identifier	x10		4663189	0					
ANR	4663328	Identifier	x32		4663189	1					
ANR	4663329	ArrayIndexing	state -> ekey [ 4 * i + 2 ]		4663189	1					
ANR	4663330	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663331	Identifier	state		4663189	0					
ANR	4663332	Identifier	ekey		4663189	1					
ANR	4663333	AdditiveExpression	4 * i + 2		4663189	1		+			
ANR	4663334	MultiplicativeExpression	4 * i		4663189	0		*			
ANR	4663335	PrimaryExpression	4		4663189	0					
ANR	4663336	Identifier	i		4663189	1					
ANR	4663337	PrimaryExpression	2		4663189	1					
ANR	4663338	ExpressionStatement	x32 &= 65535	123:2:4270:4282	4663189	6	True				
ANR	4663339	AssignmentExpression	x32 &= 65535		4663189	0		&=			
ANR	4663340	Identifier	x32		4663189	0					
ANR	4663341	PrimaryExpression	65535		4663189	1					
ANR	4663342	ExpressionStatement	x32 = ( x32 << 14 ) | ( x32 >> 2 )	124:2:4286:4316	4663189	7	True				
ANR	4663343	AssignmentExpression	x32 = ( x32 << 14 ) | ( x32 >> 2 )		4663189	0		=			
ANR	4663344	Identifier	x32		4663189	0					
ANR	4663345	InclusiveOrExpression	( x32 << 14 ) | ( x32 >> 2 )		4663189	1		|			
ANR	4663346	ShiftExpression	x32 << 14		4663189	0		<<			
ANR	4663347	Identifier	x32		4663189	0					
ANR	4663348	PrimaryExpression	14		4663189	1					
ANR	4663349	ShiftExpression	x32 >> 2		4663189	1		>>			
ANR	4663350	Identifier	x32		4663189	0					
ANR	4663351	PrimaryExpression	2		4663189	1					
ANR	4663352	ExpressionStatement	x32 -= ( ( x54 & ~x10 ) | ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]	125:2:4320:4380	4663189	8	True				
ANR	4663353	AssignmentExpression	x32 -= ( ( x54 & ~x10 ) | ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		4663189	0		-=			
ANR	4663354	Identifier	x32		4663189	0					
ANR	4663355	AdditiveExpression	( ( x54 & ~x10 ) | ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		4663189	1		+			
ANR	4663356	InclusiveOrExpression	( x54 & ~x10 ) | ( x76 & x10 )		4663189	0		|			
ANR	4663357	BitAndExpression	x54 & ~x10		4663189	0		&			
ANR	4663358	Identifier	x54		4663189	0					
ANR	4663359	Identifier	~x10		4663189	1					
ANR	4663360	BitAndExpression	x76 & x10		4663189	1		&			
ANR	4663361	Identifier	x76		4663189	0					
ANR	4663362	Identifier	x10		4663189	1					
ANR	4663363	ArrayIndexing	state -> ekey [ 4 * i + 1 ]		4663189	1					
ANR	4663364	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663365	Identifier	state		4663189	0					
ANR	4663366	Identifier	ekey		4663189	1					
ANR	4663367	AdditiveExpression	4 * i + 1		4663189	1		+			
ANR	4663368	MultiplicativeExpression	4 * i		4663189	0		*			
ANR	4663369	PrimaryExpression	4		4663189	0					
ANR	4663370	Identifier	i		4663189	1					
ANR	4663371	PrimaryExpression	1		4663189	1					
ANR	4663372	ExpressionStatement	x10 &= 65535	127:2:4385:4397	4663189	9	True				
ANR	4663373	AssignmentExpression	x10 &= 65535		4663189	0		&=			
ANR	4663374	Identifier	x10		4663189	0					
ANR	4663375	PrimaryExpression	65535		4663189	1					
ANR	4663376	ExpressionStatement	x10 = ( x10 << 15 ) | ( x10 >> 1 )	128:2:4401:4431	4663189	10	True				
ANR	4663377	AssignmentExpression	x10 = ( x10 << 15 ) | ( x10 >> 1 )		4663189	0		=			
ANR	4663378	Identifier	x10		4663189	0					
ANR	4663379	InclusiveOrExpression	( x10 << 15 ) | ( x10 >> 1 )		4663189	1		|			
ANR	4663380	ShiftExpression	x10 << 15		4663189	0		<<			
ANR	4663381	Identifier	x10		4663189	0					
ANR	4663382	PrimaryExpression	15		4663189	1					
ANR	4663383	ShiftExpression	x10 >> 1		4663189	1		>>			
ANR	4663384	Identifier	x10		4663189	0					
ANR	4663385	PrimaryExpression	1		4663189	1					
ANR	4663386	ExpressionStatement	x10 -= ( ( x32 & ~x76 ) | ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]	129:2:4435:4495	4663189	11	True				
ANR	4663387	AssignmentExpression	x10 -= ( ( x32 & ~x76 ) | ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		4663189	0		-=			
ANR	4663388	Identifier	x10		4663189	0					
ANR	4663389	AdditiveExpression	( ( x32 & ~x76 ) | ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		4663189	1		+			
ANR	4663390	InclusiveOrExpression	( x32 & ~x76 ) | ( x54 & x76 )		4663189	0		|			
ANR	4663391	BitAndExpression	x32 & ~x76		4663189	0		&			
ANR	4663392	Identifier	x32		4663189	0					
ANR	4663393	Identifier	~x76		4663189	1					
ANR	4663394	BitAndExpression	x54 & x76		4663189	1		&			
ANR	4663395	Identifier	x54		4663189	0					
ANR	4663396	Identifier	x76		4663189	1					
ANR	4663397	ArrayIndexing	state -> ekey [ 4 * i + 0 ]		4663189	1					
ANR	4663398	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663399	Identifier	state		4663189	0					
ANR	4663400	Identifier	ekey		4663189	1					
ANR	4663401	AdditiveExpression	4 * i + 0		4663189	1		+			
ANR	4663402	MultiplicativeExpression	4 * i		4663189	0		*			
ANR	4663403	PrimaryExpression	4		4663189	0					
ANR	4663404	Identifier	i		4663189	1					
ANR	4663405	PrimaryExpression	0		4663189	1					
ANR	4663406	IfStatement	if ( i == 5 || i == 11 )		4663189	12					
ANR	4663407	Condition	i == 5 || i == 11	131:6:4504:4520	4663189	0	True				
ANR	4663408	OrExpression	i == 5 || i == 11		4663189	0		||			
ANR	4663409	EqualityExpression	i == 5		4663189	0		==			
ANR	4663410	Identifier	i		4663189	0					
ANR	4663411	PrimaryExpression	5		4663189	1					
ANR	4663412	EqualityExpression	i == 11		4663189	1		==			
ANR	4663413	Identifier	i		4663189	0					
ANR	4663414	PrimaryExpression	11		4663189	1					
ANR	4663415	CompoundStatement		27:25:691:691	4663189	1					
ANR	4663416	ExpressionStatement	x76 -= state -> ekey [ x54 & 63 ]	132:3:4528:4556	4663189	0	True				
ANR	4663417	AssignmentExpression	x76 -= state -> ekey [ x54 & 63 ]		4663189	0		-=			
ANR	4663418	Identifier	x76		4663189	0					
ANR	4663419	ArrayIndexing	state -> ekey [ x54 & 63 ]		4663189	1					
ANR	4663420	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663421	Identifier	state		4663189	0					
ANR	4663422	Identifier	ekey		4663189	1					
ANR	4663423	BitAndExpression	x54 & 63		4663189	1		&			
ANR	4663424	Identifier	x54		4663189	0					
ANR	4663425	PrimaryExpression	63		4663189	1					
ANR	4663426	ExpressionStatement	x54 -= state -> ekey [ x32 & 63 ]	133:3:4561:4589	4663189	1	True				
ANR	4663427	AssignmentExpression	x54 -= state -> ekey [ x32 & 63 ]		4663189	0		-=			
ANR	4663428	Identifier	x54		4663189	0					
ANR	4663429	ArrayIndexing	state -> ekey [ x32 & 63 ]		4663189	1					
ANR	4663430	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663431	Identifier	state		4663189	0					
ANR	4663432	Identifier	ekey		4663189	1					
ANR	4663433	BitAndExpression	x32 & 63		4663189	1		&			
ANR	4663434	Identifier	x32		4663189	0					
ANR	4663435	PrimaryExpression	63		4663189	1					
ANR	4663436	ExpressionStatement	x32 -= state -> ekey [ x10 & 63 ]	134:3:4594:4622	4663189	2	True				
ANR	4663437	AssignmentExpression	x32 -= state -> ekey [ x10 & 63 ]		4663189	0		-=			
ANR	4663438	Identifier	x32		4663189	0					
ANR	4663439	ArrayIndexing	state -> ekey [ x10 & 63 ]		4663189	1					
ANR	4663440	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663441	Identifier	state		4663189	0					
ANR	4663442	Identifier	ekey		4663189	1					
ANR	4663443	BitAndExpression	x10 & 63		4663189	1		&			
ANR	4663444	Identifier	x10		4663189	0					
ANR	4663445	PrimaryExpression	63		4663189	1					
ANR	4663446	ExpressionStatement	x10 -= state -> ekey [ x76 & 63 ]	135:3:4627:4655	4663189	3	True				
ANR	4663447	AssignmentExpression	x10 -= state -> ekey [ x76 & 63 ]		4663189	0		-=			
ANR	4663448	Identifier	x10		4663189	0					
ANR	4663449	ArrayIndexing	state -> ekey [ x76 & 63 ]		4663189	1					
ANR	4663450	PtrMemberAccess	state -> ekey		4663189	0					
ANR	4663451	Identifier	state		4663189	0					
ANR	4663452	Identifier	ekey		4663189	1					
ANR	4663453	BitAndExpression	x76 & 63		4663189	1		&			
ANR	4663454	Identifier	x76		4663189	0					
ANR	4663455	PrimaryExpression	63		4663189	1					
ANR	4663456	ExpressionStatement	outbuf [ 0 ] = ( ut8 ) x10	139:1:4666:4687	4663189	7	True				
ANR	4663457	AssignmentExpression	outbuf [ 0 ] = ( ut8 ) x10		4663189	0		=			
ANR	4663458	ArrayIndexing	outbuf [ 0 ]		4663189	0					
ANR	4663459	Identifier	outbuf		4663189	0					
ANR	4663460	PrimaryExpression	0		4663189	1					
ANR	4663461	CastExpression	( ut8 ) x10		4663189	1					
ANR	4663462	CastTarget	ut8		4663189	0					
ANR	4663463	Identifier	x10		4663189	1					
ANR	4663464	ExpressionStatement	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )	140:1:4690:4718	4663189	8	True				
ANR	4663465	AssignmentExpression	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )		4663189	0		=			
ANR	4663466	ArrayIndexing	outbuf [ 1 ]		4663189	0					
ANR	4663467	Identifier	outbuf		4663189	0					
ANR	4663468	PrimaryExpression	1		4663189	1					
ANR	4663469	CastExpression	( ut8 ) ( x10 >> 8 )		4663189	1					
ANR	4663470	CastTarget	ut8		4663189	0					
ANR	4663471	ShiftExpression	x10 >> 8		4663189	1		>>			
ANR	4663472	Identifier	x10		4663189	0					
ANR	4663473	PrimaryExpression	8		4663189	1					
ANR	4663474	ExpressionStatement	outbuf [ 2 ] = ( ut8 ) x32	141:1:4721:4742	4663189	9	True				
ANR	4663475	AssignmentExpression	outbuf [ 2 ] = ( ut8 ) x32		4663189	0		=			
ANR	4663476	ArrayIndexing	outbuf [ 2 ]		4663189	0					
ANR	4663477	Identifier	outbuf		4663189	0					
ANR	4663478	PrimaryExpression	2		4663189	1					
ANR	4663479	CastExpression	( ut8 ) x32		4663189	1					
ANR	4663480	CastTarget	ut8		4663189	0					
ANR	4663481	Identifier	x32		4663189	1					
ANR	4663482	ExpressionStatement	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )	142:1:4745:4773	4663189	10	True				
ANR	4663483	AssignmentExpression	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )		4663189	0		=			
ANR	4663484	ArrayIndexing	outbuf [ 3 ]		4663189	0					
ANR	4663485	Identifier	outbuf		4663189	0					
ANR	4663486	PrimaryExpression	3		4663189	1					
ANR	4663487	CastExpression	( ut8 ) ( x32 >> 8 )		4663189	1					
ANR	4663488	CastTarget	ut8		4663189	0					
ANR	4663489	ShiftExpression	x32 >> 8		4663189	1		>>			
ANR	4663490	Identifier	x32		4663189	0					
ANR	4663491	PrimaryExpression	8		4663189	1					
ANR	4663492	ExpressionStatement	outbuf [ 4 ] = ( ut8 ) x54	143:1:4776:4797	4663189	11	True				
ANR	4663493	AssignmentExpression	outbuf [ 4 ] = ( ut8 ) x54		4663189	0		=			
ANR	4663494	ArrayIndexing	outbuf [ 4 ]		4663189	0					
ANR	4663495	Identifier	outbuf		4663189	0					
ANR	4663496	PrimaryExpression	4		4663189	1					
ANR	4663497	CastExpression	( ut8 ) x54		4663189	1					
ANR	4663498	CastTarget	ut8		4663189	0					
ANR	4663499	Identifier	x54		4663189	1					
ANR	4663500	ExpressionStatement	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )	144:1:4800:4828	4663189	12	True				
ANR	4663501	AssignmentExpression	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )		4663189	0		=			
ANR	4663502	ArrayIndexing	outbuf [ 5 ]		4663189	0					
ANR	4663503	Identifier	outbuf		4663189	0					
ANR	4663504	PrimaryExpression	5		4663189	1					
ANR	4663505	CastExpression	( ut8 ) ( x54 >> 8 )		4663189	1					
ANR	4663506	CastTarget	ut8		4663189	0					
ANR	4663507	ShiftExpression	x54 >> 8		4663189	1		>>			
ANR	4663508	Identifier	x54		4663189	0					
ANR	4663509	PrimaryExpression	8		4663189	1					
ANR	4663510	ExpressionStatement	outbuf [ 6 ] = ( ut8 ) x76	145:1:4831:4852	4663189	13	True				
ANR	4663511	AssignmentExpression	outbuf [ 6 ] = ( ut8 ) x76		4663189	0		=			
ANR	4663512	ArrayIndexing	outbuf [ 6 ]		4663189	0					
ANR	4663513	Identifier	outbuf		4663189	0					
ANR	4663514	PrimaryExpression	6		4663189	1					
ANR	4663515	CastExpression	( ut8 ) x76		4663189	1					
ANR	4663516	CastTarget	ut8		4663189	0					
ANR	4663517	Identifier	x76		4663189	1					
ANR	4663518	ExpressionStatement	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )	146:1:4855:4883	4663189	14	True				
ANR	4663519	AssignmentExpression	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )		4663189	0		=			
ANR	4663520	ArrayIndexing	outbuf [ 7 ]		4663189	0					
ANR	4663521	Identifier	outbuf		4663189	0					
ANR	4663522	PrimaryExpression	7		4663189	1					
ANR	4663523	CastExpression	( ut8 ) ( x76 >> 8 )		4663189	1					
ANR	4663524	CastTarget	ut8		4663189	0					
ANR	4663525	ShiftExpression	x76 >> 8		4663189	1		>>			
ANR	4663526	Identifier	x76		4663189	0					
ANR	4663527	PrimaryExpression	8		4663189	1					
ANR	4663528	ReturnType	static void		4663189	1					
ANR	4663529	Identifier	rc2_dcrypt8		4663189	2					
ANR	4663530	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf"		4663189	3					
ANR	4663531	Parameter	struct rc2_state * state	105:24:3775:3797	4663189	0	True				
ANR	4663532	ParameterType	struct rc2_state *		4663189	0					
ANR	4663533	Identifier	state		4663189	1					
ANR	4663534	Parameter	const ut8 * inbuf	105:49:3800:3815	4663189	1	True				
ANR	4663535	ParameterType	const ut8 *		4663189	0					
ANR	4663536	Identifier	inbuf		4663189	1					
ANR	4663537	Parameter	ut8 * outbuf	105:67:3818:3828	4663189	2	True				
ANR	4663538	ParameterType	ut8 *		4663189	0					
ANR	4663539	Identifier	outbuf		4663189	1					
ANR	4663540	CFGEntryNode	ENTRY		4663189		True				
ANR	4663541	CFGExitNode	EXIT		4663189		True				
ANR	4663542	Symbol	* x54		4663189						
ANR	4663543	Symbol	* x32		4663189						
ANR	4663544	Symbol	* x10		4663189						
ANR	4663545	Symbol	* x76		4663189						
ANR	4663546	Symbol	~x54		4663189						
ANR	4663547	Symbol	~x32		4663189						
ANR	4663548	Symbol	~x10		4663189						
ANR	4663549	Symbol	~x76		4663189						
ANR	4663550	Symbol	* inbuf		4663189						
ANR	4663551	Symbol	i		4663189						
ANR	4663552	Symbol	* * state		4663189						
ANR	4663553	Symbol	* state		4663189						
ANR	4663554	Symbol	* outbuf		4663189						
ANR	4663555	Symbol	* i		4663189						
ANR	4663556	Symbol	inbuf		4663189						
ANR	4663557	Symbol	outbuf		4663189						
ANR	4663558	Symbol	x54		4663189						
ANR	4663559	Symbol	x76		4663189						
ANR	4663560	Symbol	x32		4663189						
ANR	4663561	Symbol	x10		4663189						
ANR	4663562	Symbol	state		4663189						
ANR	4663563	Symbol	* state -> ekey		4663189						
ANR	4663564	Symbol	state -> ekey		4663189						
ANR	4663565	Function	rc2_dcrypt	149:0:4888:5383							
ANR	4663566	FunctionDef	"rc2_dcrypt (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen)"		4663565	0					
ANR	4663567	CompoundStatement		149:91:4979:5383	4663565	0					
ANR	4663568	IdentifierDeclStatement	int i ;	150:1:4982:4987	4663565	0	True				
ANR	4663569	IdentifierDecl	i		4663565	0					
ANR	4663570	IdentifierDeclType	int		4663565	0					
ANR	4663571	Identifier	i		4663565	1					
ANR	4663572	IdentifierDeclStatement	char data_block [ BLOCK_SIZE + 1 ] = { 0 } ;	151:1:4990:5027	4663565	1	True				
ANR	4663573	IdentifierDecl	data_block [ BLOCK_SIZE + 1 ] = { 0 }		4663565	0					
ANR	4663574	IdentifierDeclType	char [ BLOCK_SIZE + 1 ]		4663565	0					
ANR	4663575	Identifier	data_block		4663565	1					
ANR	4663576	AdditiveExpression	BLOCK_SIZE + 1		4663565	2		+			
ANR	4663577	Identifier	BLOCK_SIZE		4663565	0					
ANR	4663578	PrimaryExpression	1		4663565	1					
ANR	4663579	AssignmentExpression	data_block [ BLOCK_SIZE + 1 ] = { 0 }		4663565	3		=			
ANR	4663580	Identifier	data_block		4663565	0					
ANR	4663581	InitializerList	0		4663565	1					
ANR	4663582	PrimaryExpression	0		4663565	0					
ANR	4663583	IdentifierDeclStatement	int idx = 0 ;	152:1:5030:5041	4663565	2	True				
ANR	4663584	IdentifierDecl	idx = 0		4663565	0					
ANR	4663585	IdentifierDeclType	int		4663565	0					
ANR	4663586	Identifier	idx		4663565	1					
ANR	4663587	AssignmentExpression	idx = 0		4663565	2		=			
ANR	4663588	Identifier	idx		4663565	0					
ANR	4663589	PrimaryExpression	0		4663565	1					
ANR	4663590	IdentifierDeclStatement	char dcrypted_block [ BLOCK_SIZE + 1 ] = { 0 } ;	153:1:5044:5085	4663565	3	True				
ANR	4663591	IdentifierDecl	dcrypted_block [ BLOCK_SIZE + 1 ] = { 0 }		4663565	0					
ANR	4663592	IdentifierDeclType	char [ BLOCK_SIZE + 1 ]		4663565	0					
ANR	4663593	Identifier	dcrypted_block		4663565	1					
ANR	4663594	AdditiveExpression	BLOCK_SIZE + 1		4663565	2		+			
ANR	4663595	Identifier	BLOCK_SIZE		4663565	0					
ANR	4663596	PrimaryExpression	1		4663565	1					
ANR	4663597	AssignmentExpression	dcrypted_block [ BLOCK_SIZE + 1 ] = { 0 }		4663565	3		=			
ANR	4663598	Identifier	dcrypted_block		4663565	0					
ANR	4663599	InitializerList	0		4663565	1					
ANR	4663600	PrimaryExpression	0		4663565	0					
ANR	4663601	IdentifierDeclStatement	char * ptr = ( char * ) outbuf ;	154:1:5088:5115	4663565	4	True				
ANR	4663602	IdentifierDecl	* ptr = ( char * ) outbuf		4663565	0					
ANR	4663603	IdentifierDeclType	char *		4663565	0					
ANR	4663604	Identifier	ptr		4663565	1					
ANR	4663605	AssignmentExpression	* ptr = ( char * ) outbuf		4663565	2		=			
ANR	4663606	Identifier	ptr		4663565	0					
ANR	4663607	CastExpression	( char * ) outbuf		4663565	1					
ANR	4663608	CastTarget	char *		4663565	0					
ANR	4663609	Identifier	outbuf		4663565	1					
ANR	4663610	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		4663565	5					
ANR	4663611	ForInit	i = 0 ;	156:6:5124:5129	4663565	0	True				
ANR	4663612	AssignmentExpression	i = 0		4663565	0		=			
ANR	4663613	Identifier	i		4663565	0					
ANR	4663614	PrimaryExpression	0		4663565	1					
ANR	4663615	Condition	i < buflen	156:13:5131:5140	4663565	1	True				
ANR	4663616	RelationalExpression	i < buflen		4663565	0		<			
ANR	4663617	Identifier	i		4663565	0					
ANR	4663618	Identifier	buflen		4663565	1					
ANR	4663619	PostIncDecOperationExpression	i ++	156:25:5143:5145	4663565	2	True				
ANR	4663620	Identifier	i		4663565	0					
ANR	4663621	IncDec	++		4663565	1					
ANR	4663622	CompoundStatement		8:30:168:168	4663565	3					
ANR	4663623	ExpressionStatement	data_block [ idx ] = inbuf [ i ]	157:2:5152:5178	4663565	0	True				
ANR	4663624	AssignmentExpression	data_block [ idx ] = inbuf [ i ]		4663565	0		=			
ANR	4663625	ArrayIndexing	data_block [ idx ]		4663565	0					
ANR	4663626	Identifier	data_block		4663565	0					
ANR	4663627	Identifier	idx		4663565	1					
ANR	4663628	ArrayIndexing	inbuf [ i ]		4663565	1					
ANR	4663629	Identifier	inbuf		4663565	0					
ANR	4663630	Identifier	i		4663565	1					
ANR	4663631	ExpressionStatement	idx += 1	158:2:5182:5190	4663565	1	True				
ANR	4663632	AssignmentExpression	idx += 1		4663565	0		+=			
ANR	4663633	Identifier	idx		4663565	0					
ANR	4663634	PrimaryExpression	1		4663565	1					
ANR	4663635	IfStatement	if ( idx % BLOCK_SIZE == 0 )		4663565	2					
ANR	4663636	Condition	idx % BLOCK_SIZE == 0	159:6:5198:5218	4663565	0	True				
ANR	4663637	EqualityExpression	idx % BLOCK_SIZE == 0		4663565	0		==			
ANR	4663638	MultiplicativeExpression	idx % BLOCK_SIZE		4663565	0		%			
ANR	4663639	Identifier	idx		4663565	0					
ANR	4663640	Identifier	BLOCK_SIZE		4663565	1					
ANR	4663641	PrimaryExpression	0		4663565	1					
ANR	4663642	CompoundStatement		11:29:241:241	4663565	1					
ANR	4663643	ExpressionStatement	"rc2_dcrypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) dcrypted_block )"	160:3:5226:5295	4663565	0	True				
ANR	4663644	CallExpression	"rc2_dcrypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) dcrypted_block )"		4663565	0					
ANR	4663645	Callee	rc2_dcrypt8		4663565	0					
ANR	4663646	Identifier	rc2_dcrypt8		4663565	0					
ANR	4663647	ArgumentList	state		4663565	1					
ANR	4663648	Argument	state		4663565	0					
ANR	4663649	Identifier	state		4663565	0					
ANR	4663650	Argument	( const ut8 * ) data_block		4663565	1					
ANR	4663651	CastExpression	( const ut8 * ) data_block		4663565	0					
ANR	4663652	CastTarget	const ut8 *		4663565	0					
ANR	4663653	Identifier	data_block		4663565	1					
ANR	4663654	Argument	( ut8 * ) dcrypted_block		4663565	2					
ANR	4663655	CastExpression	( ut8 * ) dcrypted_block		4663565	0					
ANR	4663656	CastTarget	ut8 *		4663565	0					
ANR	4663657	Identifier	dcrypted_block		4663565	1					
ANR	4663658	ExpressionStatement	"memcpy ( ptr , dcrypted_block , BLOCK_SIZE )"	161:3:5300:5340	4663565	1	True				
ANR	4663659	CallExpression	"memcpy ( ptr , dcrypted_block , BLOCK_SIZE )"		4663565	0					
ANR	4663660	Callee	memcpy		4663565	0					
ANR	4663661	Identifier	memcpy		4663565	0					
ANR	4663662	ArgumentList	ptr		4663565	1					
ANR	4663663	Argument	ptr		4663565	0					
ANR	4663664	Identifier	ptr		4663565	0					
ANR	4663665	Argument	dcrypted_block		4663565	1					
ANR	4663666	Identifier	dcrypted_block		4663565	0					
ANR	4663667	Argument	BLOCK_SIZE		4663565	2					
ANR	4663668	Identifier	BLOCK_SIZE		4663565	0					
ANR	4663669	ExpressionStatement	ptr += BLOCK_SIZE	162:3:5345:5362	4663565	2	True				
ANR	4663670	AssignmentExpression	ptr += BLOCK_SIZE		4663565	0		+=			
ANR	4663671	Identifier	ptr		4663565	0					
ANR	4663672	Identifier	BLOCK_SIZE		4663565	1					
ANR	4663673	ExpressionStatement	idx = 0	163:3:5367:5374	4663565	3	True				
ANR	4663674	AssignmentExpression	idx = 0		4663565	0		=			
ANR	4663675	Identifier	idx		4663565	0					
ANR	4663676	PrimaryExpression	0		4663565	1					
ANR	4663677	ReturnType	static void		4663565	1					
ANR	4663678	Identifier	rc2_dcrypt		4663565	2					
ANR	4663679	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen"		4663565	3					
ANR	4663680	Parameter	struct rc2_state * state	149:23:4911:4933	4663565	0	True				
ANR	4663681	ParameterType	struct rc2_state *		4663565	0					
ANR	4663682	Identifier	state		4663565	1					
ANR	4663683	Parameter	const ut8 * inbuf	149:48:4936:4951	4663565	1	True				
ANR	4663684	ParameterType	const ut8 *		4663565	0					
ANR	4663685	Identifier	inbuf		4663565	1					
ANR	4663686	Parameter	ut8 * outbuf	149:66:4954:4964	4663565	2	True				
ANR	4663687	ParameterType	ut8 *		4663565	0					
ANR	4663688	Identifier	outbuf		4663565	1					
ANR	4663689	Parameter	int buflen	149:79:4967:4976	4663565	3	True				
ANR	4663690	ParameterType	int		4663565	0					
ANR	4663691	Identifier	buflen		4663565	1					
ANR	4663692	CFGEntryNode	ENTRY		4663565		True				
ANR	4663693	CFGExitNode	EXIT		4663565		True				
ANR	4663694	Symbol	* inbuf		4663565						
ANR	4663695	Symbol	BLOCK_SIZE		4663565						
ANR	4663696	Symbol	i		4663565						
ANR	4663697	Symbol	data_block		4663565						
ANR	4663698	Symbol	ptr		4663565						
ANR	4663699	Symbol	* i		4663565						
ANR	4663700	Symbol	inbuf		4663565						
ANR	4663701	Symbol	outbuf		4663565						
ANR	4663702	Symbol	dcrypted_block		4663565						
ANR	4663703	Symbol	* idx		4663565						
ANR	4663704	Symbol	buflen		4663565						
ANR	4663705	Symbol	state		4663565						
ANR	4663706	Symbol	idx		4663565						
ANR	4663707	Symbol	* data_block		4663565						
ANR	4663708	Function	rc2_crypt	168:0:5386:6082							
ANR	4663709	FunctionDef	"rc2_crypt (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen)"		4663708	0					
ANR	4663710	CompoundStatement		168:90:5476:6082	4663708	0					
ANR	4663711	IdentifierDeclStatement	int i ;	169:1:5479:5484	4663708	0	True				
ANR	4663712	IdentifierDecl	i		4663708	0					
ANR	4663713	IdentifierDeclType	int		4663708	0					
ANR	4663714	Identifier	i		4663708	1					
ANR	4663715	IdentifierDeclStatement	char data_block [ BLOCK_SIZE ] = { 0 } ;	170:1:5487:5520	4663708	1	True				
ANR	4663716	IdentifierDecl	data_block [ BLOCK_SIZE ] = { 0 }		4663708	0					
ANR	4663717	IdentifierDeclType	char [ BLOCK_SIZE ]		4663708	0					
ANR	4663718	Identifier	data_block		4663708	1					
ANR	4663719	Identifier	BLOCK_SIZE		4663708	2					
ANR	4663720	AssignmentExpression	data_block [ BLOCK_SIZE ] = { 0 }		4663708	3		=			
ANR	4663721	Identifier	BLOCK_SIZE		4663708	0					
ANR	4663722	InitializerList	0		4663708	1					
ANR	4663723	PrimaryExpression	0		4663708	0					
ANR	4663724	IdentifierDeclStatement	int idx = 0 ;	171:1:5523:5534	4663708	2	True				
ANR	4663725	IdentifierDecl	idx = 0		4663708	0					
ANR	4663726	IdentifierDeclType	int		4663708	0					
ANR	4663727	Identifier	idx		4663708	1					
ANR	4663728	AssignmentExpression	idx = 0		4663708	2		=			
ANR	4663729	Identifier	idx		4663708	0					
ANR	4663730	PrimaryExpression	0		4663708	1					
ANR	4663731	IdentifierDeclStatement	char crypted_block [ BLOCK_SIZE ] = { 0 } ;	173:1:5538:5574	4663708	3	True				
ANR	4663732	IdentifierDecl	crypted_block [ BLOCK_SIZE ] = { 0 }		4663708	0					
ANR	4663733	IdentifierDeclType	char [ BLOCK_SIZE ]		4663708	0					
ANR	4663734	Identifier	crypted_block		4663708	1					
ANR	4663735	Identifier	BLOCK_SIZE		4663708	2					
ANR	4663736	AssignmentExpression	crypted_block [ BLOCK_SIZE ] = { 0 }		4663708	3		=			
ANR	4663737	Identifier	BLOCK_SIZE		4663708	0					
ANR	4663738	InitializerList	0		4663708	1					
ANR	4663739	PrimaryExpression	0		4663708	0					
ANR	4663740	IdentifierDeclStatement	char * ptr = ( char * ) outbuf ;	174:1:5577:5604	4663708	4	True				
ANR	4663741	IdentifierDecl	* ptr = ( char * ) outbuf		4663708	0					
ANR	4663742	IdentifierDeclType	char *		4663708	0					
ANR	4663743	Identifier	ptr		4663708	1					
ANR	4663744	AssignmentExpression	* ptr = ( char * ) outbuf		4663708	2		=			
ANR	4663745	Identifier	ptr		4663708	0					
ANR	4663746	CastExpression	( char * ) outbuf		4663708	1					
ANR	4663747	CastTarget	char *		4663708	0					
ANR	4663748	Identifier	outbuf		4663708	1					
ANR	4663749	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		4663708	5					
ANR	4663750	ForInit	i = 0 ;	177:6:5653:5658	4663708	0	True				
ANR	4663751	AssignmentExpression	i = 0		4663708	0		=			
ANR	4663752	Identifier	i		4663708	0					
ANR	4663753	PrimaryExpression	0		4663708	1					
ANR	4663754	Condition	i < buflen	177:13:5660:5669	4663708	1	True				
ANR	4663755	RelationalExpression	i < buflen		4663708	0		<			
ANR	4663756	Identifier	i		4663708	0					
ANR	4663757	Identifier	buflen		4663708	1					
ANR	4663758	PostIncDecOperationExpression	i ++	177:25:5672:5674	4663708	2	True				
ANR	4663759	Identifier	i		4663708	0					
ANR	4663760	IncDec	++		4663708	1					
ANR	4663761	CompoundStatement		10:30:200:200	4663708	3					
ANR	4663762	ExpressionStatement	data_block [ idx ] = inbuf [ i ]	178:2:5681:5707	4663708	0	True				
ANR	4663763	AssignmentExpression	data_block [ idx ] = inbuf [ i ]		4663708	0		=			
ANR	4663764	ArrayIndexing	data_block [ idx ]		4663708	0					
ANR	4663765	Identifier	data_block		4663708	0					
ANR	4663766	Identifier	idx		4663708	1					
ANR	4663767	ArrayIndexing	inbuf [ i ]		4663708	1					
ANR	4663768	Identifier	inbuf		4663708	0					
ANR	4663769	Identifier	i		4663708	1					
ANR	4663770	ExpressionStatement	idx += 1	179:2:5711:5719	4663708	1	True				
ANR	4663771	AssignmentExpression	idx += 1		4663708	0		+=			
ANR	4663772	Identifier	idx		4663708	0					
ANR	4663773	PrimaryExpression	1		4663708	1					
ANR	4663774	IfStatement	if ( idx % BLOCK_SIZE == 0 )		4663708	2					
ANR	4663775	Condition	idx % BLOCK_SIZE == 0	180:6:5727:5747	4663708	0	True				
ANR	4663776	EqualityExpression	idx % BLOCK_SIZE == 0		4663708	0		==			
ANR	4663777	MultiplicativeExpression	idx % BLOCK_SIZE		4663708	0		%			
ANR	4663778	Identifier	idx		4663708	0					
ANR	4663779	Identifier	BLOCK_SIZE		4663708	1					
ANR	4663780	PrimaryExpression	0		4663708	1					
ANR	4663781	CompoundStatement		13:29:273:273	4663708	1					
ANR	4663782	ExpressionStatement	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"	181:3:5755:5821	4663708	0	True				
ANR	4663783	CallExpression	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"		4663708	0					
ANR	4663784	Callee	rc2_crypt8		4663708	0					
ANR	4663785	Identifier	rc2_crypt8		4663708	0					
ANR	4663786	ArgumentList	state		4663708	1					
ANR	4663787	Argument	state		4663708	0					
ANR	4663788	Identifier	state		4663708	0					
ANR	4663789	Argument	( const ut8 * ) data_block		4663708	1					
ANR	4663790	CastExpression	( const ut8 * ) data_block		4663708	0					
ANR	4663791	CastTarget	const ut8 *		4663708	0					
ANR	4663792	Identifier	data_block		4663708	1					
ANR	4663793	Argument	( ut8 * ) crypted_block		4663708	2					
ANR	4663794	CastExpression	( ut8 * ) crypted_block		4663708	0					
ANR	4663795	CastTarget	ut8 *		4663708	0					
ANR	4663796	Identifier	crypted_block		4663708	1					
ANR	4663797	ExpressionStatement	"strncpy ( ptr , crypted_block , BLOCK_SIZE )"	182:3:5826:5865	4663708	1	True				
ANR	4663798	CallExpression	"strncpy ( ptr , crypted_block , BLOCK_SIZE )"		4663708	0					
ANR	4663799	Callee	strncpy		4663708	0					
ANR	4663800	Identifier	strncpy		4663708	0					
ANR	4663801	ArgumentList	ptr		4663708	1					
ANR	4663802	Argument	ptr		4663708	0					
ANR	4663803	Identifier	ptr		4663708	0					
ANR	4663804	Argument	crypted_block		4663708	1					
ANR	4663805	Identifier	crypted_block		4663708	0					
ANR	4663806	Argument	BLOCK_SIZE		4663708	2					
ANR	4663807	Identifier	BLOCK_SIZE		4663708	0					
ANR	4663808	ExpressionStatement	ptr += BLOCK_SIZE	183:3:5870:5887	4663708	2	True				
ANR	4663809	AssignmentExpression	ptr += BLOCK_SIZE		4663708	0		+=			
ANR	4663810	Identifier	ptr		4663708	0					
ANR	4663811	Identifier	BLOCK_SIZE		4663708	1					
ANR	4663812	ExpressionStatement	idx = 0	184:3:5892:5899	4663708	3	True				
ANR	4663813	AssignmentExpression	idx = 0		4663708	0		=			
ANR	4663814	Identifier	idx		4663708	0					
ANR	4663815	PrimaryExpression	0		4663708	1					
ANR	4663816	IfStatement	if ( idx % 8 )		4663708	6					
ANR	4663817	Condition	idx % 8	188:5:5914:5920	4663708	0	True				
ANR	4663818	MultiplicativeExpression	idx % 8		4663708	0		%			
ANR	4663819	Identifier	idx		4663708	0					
ANR	4663820	PrimaryExpression	8		4663708	1					
ANR	4663821	CompoundStatement		21:14:446:446	4663708	1					
ANR	4663822	WhileStatement	while ( idx % 8 )		4663708	0					
ANR	4663823	Condition	idx % 8	189:9:5934:5940	4663708	0	True				
ANR	4663824	MultiplicativeExpression	idx % 8		4663708	0		%			
ANR	4663825	Identifier	idx		4663708	0					
ANR	4663826	PrimaryExpression	8		4663708	1					
ANR	4663827	CompoundStatement		22:18:466:466	4663708	1					
ANR	4663828	ExpressionStatement	data_block [ idx ++ ] = 0	190:3:5948:5969	4663708	0	True				
ANR	4663829	AssignmentExpression	data_block [ idx ++ ] = 0		4663708	0		=			
ANR	4663830	ArrayIndexing	data_block [ idx ++ ]		4663708	0					
ANR	4663831	Identifier	data_block		4663708	0					
ANR	4663832	PostIncDecOperationExpression	idx ++		4663708	1					
ANR	4663833	Identifier	idx		4663708	0					
ANR	4663834	IncDec	++		4663708	1					
ANR	4663835	PrimaryExpression	0		4663708	1					
ANR	4663836	ExpressionStatement	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"	192:2:5977:6043	4663708	1	True				
ANR	4663837	CallExpression	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"		4663708	0					
ANR	4663838	Callee	rc2_crypt8		4663708	0					
ANR	4663839	Identifier	rc2_crypt8		4663708	0					
ANR	4663840	ArgumentList	state		4663708	1					
ANR	4663841	Argument	state		4663708	0					
ANR	4663842	Identifier	state		4663708	0					
ANR	4663843	Argument	( const ut8 * ) data_block		4663708	1					
ANR	4663844	CastExpression	( const ut8 * ) data_block		4663708	0					
ANR	4663845	CastTarget	const ut8 *		4663708	0					
ANR	4663846	Identifier	data_block		4663708	1					
ANR	4663847	Argument	( ut8 * ) crypted_block		4663708	2					
ANR	4663848	CastExpression	( ut8 * ) crypted_block		4663708	0					
ANR	4663849	CastTarget	ut8 *		4663708	0					
ANR	4663850	Identifier	crypted_block		4663708	1					
ANR	4663851	ExpressionStatement	"strncpy ( ptr , crypted_block , 8 )"	193:2:6047:6077	4663708	2	True				
ANR	4663852	CallExpression	"strncpy ( ptr , crypted_block , 8 )"		4663708	0					
ANR	4663853	Callee	strncpy		4663708	0					
ANR	4663854	Identifier	strncpy		4663708	0					
ANR	4663855	ArgumentList	ptr		4663708	1					
ANR	4663856	Argument	ptr		4663708	0					
ANR	4663857	Identifier	ptr		4663708	0					
ANR	4663858	Argument	crypted_block		4663708	1					
ANR	4663859	Identifier	crypted_block		4663708	0					
ANR	4663860	Argument	8		4663708	2					
ANR	4663861	PrimaryExpression	8		4663708	0					
ANR	4663862	ReturnType	static void		4663708	1					
ANR	4663863	Identifier	rc2_crypt		4663708	2					
ANR	4663864	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen"		4663708	3					
ANR	4663865	Parameter	struct rc2_state * state	168:22:5408:5430	4663708	0	True				
ANR	4663866	ParameterType	struct rc2_state *		4663708	0					
ANR	4663867	Identifier	state		4663708	1					
ANR	4663868	Parameter	const ut8 * inbuf	168:47:5433:5448	4663708	1	True				
ANR	4663869	ParameterType	const ut8 *		4663708	0					
ANR	4663870	Identifier	inbuf		4663708	1					
ANR	4663871	Parameter	ut8 * outbuf	168:65:5451:5461	4663708	2	True				
ANR	4663872	ParameterType	ut8 *		4663708	0					
ANR	4663873	Identifier	outbuf		4663708	1					
ANR	4663874	Parameter	int buflen	168:78:5464:5473	4663708	3	True				
ANR	4663875	ParameterType	int		4663708	0					
ANR	4663876	Identifier	buflen		4663708	1					
ANR	4663877	CFGEntryNode	ENTRY		4663708		True				
ANR	4663878	CFGExitNode	EXIT		4663708		True				
ANR	4663879	Symbol	* inbuf		4663708						
ANR	4663880	Symbol	crypted_block		4663708						
ANR	4663881	Symbol	BLOCK_SIZE		4663708						
ANR	4663882	Symbol	i		4663708						
ANR	4663883	Symbol	data_block		4663708						
ANR	4663884	Symbol	ptr		4663708						
ANR	4663885	Symbol	* i		4663708						
ANR	4663886	Symbol	inbuf		4663708						
ANR	4663887	Symbol	outbuf		4663708						
ANR	4663888	Symbol	* idx		4663708						
ANR	4663889	Symbol	buflen		4663708						
ANR	4663890	Symbol	state		4663708						
ANR	4663891	Symbol	idx		4663708						
ANR	4663892	Symbol	* data_block		4663708						
ANR	4663893	DeclStmt									
ANR	4663894	Decl							struct rc2_state	struct rc2_state	state
ANR	4663895	DeclStmt									
ANR	4663896	Decl							int	int	flag
ANR	4663897	Function	rc2_set_key	202:0:6199:6379							
ANR	4663898	FunctionDef	"rc2_set_key (RCrypto * cry , const ut8 * key , int keylen , int mode , int direction)"		4663897	0					
ANR	4663899	CompoundStatement		202:91:6290:6379	4663897	0					
ANR	4663900	ExpressionStatement	flag = direction	203:1:6293:6309	4663897	0	True				
ANR	4663901	AssignmentExpression	flag = direction		4663897	0		=			
ANR	4663902	Identifier	flag		4663897	0					
ANR	4663903	Identifier	direction		4663897	1					
ANR	4663904	ExpressionStatement	state . key_size = 1024	204:1:6312:6333	4663897	1	True				
ANR	4663905	AssignmentExpression	state . key_size = 1024		4663897	0		=			
ANR	4663906	MemberAccess	state . key_size		4663897	0					
ANR	4663907	Identifier	state		4663897	0					
ANR	4663908	Identifier	key_size		4663897	1					
ANR	4663909	PrimaryExpression	1024		4663897	1					
ANR	4663910	ReturnStatement	"return rc2_expandKey ( & state , key , keylen ) ;"	205:1:6336:6377	4663897	2	True				
ANR	4663911	CallExpression	"rc2_expandKey ( & state , key , keylen )"		4663897	0					
ANR	4663912	Callee	rc2_expandKey		4663897	0					
ANR	4663913	Identifier	rc2_expandKey		4663897	0					
ANR	4663914	ArgumentList	& state		4663897	1					
ANR	4663915	Argument	& state		4663897	0					
ANR	4663916	UnaryOperationExpression	& state		4663897	0					
ANR	4663917	UnaryOperator	&		4663897	0					
ANR	4663918	Identifier	state		4663897	1					
ANR	4663919	Argument	key		4663897	1					
ANR	4663920	Identifier	key		4663897	0					
ANR	4663921	Argument	keylen		4663897	2					
ANR	4663922	Identifier	keylen		4663897	0					
ANR	4663923	ReturnType	static bool		4663897	1					
ANR	4663924	Identifier	rc2_set_key		4663897	2					
ANR	4663925	ParameterList	"RCrypto * cry , const ut8 * key , int keylen , int mode , int direction"		4663897	3					
ANR	4663926	Parameter	RCrypto * cry	202:24:6223:6234	4663897	0	True				
ANR	4663927	ParameterType	RCrypto *		4663897	0					
ANR	4663928	Identifier	cry		4663897	1					
ANR	4663929	Parameter	const ut8 * key	202:38:6237:6250	4663897	1	True				
ANR	4663930	ParameterType	const ut8 *		4663897	0					
ANR	4663931	Identifier	key		4663897	1					
ANR	4663932	Parameter	int keylen	202:54:6253:6262	4663897	2	True				
ANR	4663933	ParameterType	int		4663897	0					
ANR	4663934	Identifier	keylen		4663897	1					
ANR	4663935	Parameter	int mode	202:66:6265:6272	4663897	3	True				
ANR	4663936	ParameterType	int		4663897	0					
ANR	4663937	Identifier	mode		4663897	1					
ANR	4663938	Parameter	int direction	202:76:6275:6287	4663897	4	True				
ANR	4663939	ParameterType	int		4663897	0					
ANR	4663940	Identifier	direction		4663897	1					
ANR	4663941	CFGEntryNode	ENTRY		4663897		True				
ANR	4663942	CFGExitNode	EXIT		4663897		True				
ANR	4663943	Symbol	mode		4663897						
ANR	4663944	Symbol	flag		4663897						
ANR	4663945	Symbol	state . key_size		4663897						
ANR	4663946	Symbol	& state		4663897						
ANR	4663947	Symbol	rc2_expandKey		4663897						
ANR	4663948	Symbol	keylen		4663897						
ANR	4663949	Symbol	cry		4663897						
ANR	4663950	Symbol	state		4663897						
ANR	4663951	Symbol	key		4663897						
ANR	4663952	Symbol	direction		4663897						
ANR	4663953	Function	rc2_get_key_size	208:0:6382:6450							
ANR	4663954	FunctionDef	rc2_get_key_size (RCrypto * cry)		4663953	0					
ANR	4663955	CompoundStatement		208:42:6424:6450	4663953	0					
ANR	4663956	ReturnStatement	return state . key_size ;	209:1:6427:6448	4663953	0	True				
ANR	4663957	MemberAccess	state . key_size		4663953	0					
ANR	4663958	Identifier	state		4663953	0					
ANR	4663959	Identifier	key_size		4663953	1					
ANR	4663960	ReturnType	static int		4663953	1					
ANR	4663961	Identifier	rc2_get_key_size		4663953	2					
ANR	4663962	ParameterList	RCrypto * cry		4663953	3					
ANR	4663963	Parameter	RCrypto * cry	208:28:6410:6421	4663953	0	True				
ANR	4663964	ParameterType	RCrypto *		4663953	0					
ANR	4663965	Identifier	cry		4663953	1					
ANR	4663966	CFGEntryNode	ENTRY		4663953		True				
ANR	4663967	CFGExitNode	EXIT		4663953		True				
ANR	4663968	Symbol	state . key_size		4663953						
ANR	4663969	Symbol	cry		4663953						
ANR	4663970	Symbol	state		4663953						
ANR	4663971	Function	rc2_use	212:0:6453:6524							
ANR	4663972	FunctionDef	rc2_use (const char * algo)		4663971	0					
ANR	4663973	CompoundStatement		212:38:6491:6524	4663971	0					
ANR	4663974	ReturnStatement	"return ! strcmp ( algo , ""rc2"" ) ;"	213:1:6494:6522	4663971	0	True				
ANR	4663975	UnaryOperationExpression	"! strcmp ( algo , ""rc2"" )"		4663971	0					
ANR	4663976	UnaryOperator	!		4663971	0					
ANR	4663977	CallExpression	"strcmp ( algo , ""rc2"" )"		4663971	1					
ANR	4663978	Callee	strcmp		4663971	0					
ANR	4663979	Identifier	strcmp		4663971	0					
ANR	4663980	ArgumentList	algo		4663971	1					
ANR	4663981	Argument	algo		4663971	0					
ANR	4663982	Identifier	algo		4663971	0					
ANR	4663983	Argument	"""rc2"""		4663971	1					
ANR	4663984	PrimaryExpression	"""rc2"""		4663971	0					
ANR	4663985	ReturnType	static bool		4663971	1					
ANR	4663986	Identifier	rc2_use		4663971	2					
ANR	4663987	ParameterList	const char * algo		4663971	3					
ANR	4663988	Parameter	const char * algo	212:20:6473:6488	4663971	0	True				
ANR	4663989	ParameterType	const char *		4663971	0					
ANR	4663990	Identifier	algo		4663971	1					
ANR	4663991	CFGEntryNode	ENTRY		4663971		True				
ANR	4663992	CFGExitNode	EXIT		4663971		True				
ANR	4663993	Symbol	strcmp		4663971						
ANR	4663994	Symbol	algo		4663971						
ANR	4663995	Function	update	216:0:6527:6835							
ANR	4663996	FunctionDef	"update (RCrypto * cry , const ut8 * buf , int len)"		4663995	0					
ANR	4663997	CompoundStatement		216:58:6585:6835	4663995	0					
ANR	4663998	IdentifierDeclStatement	"ut8 * obuf = calloc ( 1 , len ) ;"	217:1:6588:6615	4663995	0	True				
ANR	4663999	IdentifierDecl	"* obuf = calloc ( 1 , len )"		4663995	0					
ANR	4664000	IdentifierDeclType	ut8 *		4663995	0					
ANR	4664001	Identifier	obuf		4663995	1					
ANR	4664002	AssignmentExpression	"* obuf = calloc ( 1 , len )"		4663995	2		=			
ANR	4664003	Identifier	obuf		4663995	0					
ANR	4664004	CallExpression	"calloc ( 1 , len )"		4663995	1					
ANR	4664005	Callee	calloc		4663995	0					
ANR	4664006	Identifier	calloc		4663995	0					
ANR	4664007	ArgumentList	1		4663995	1					
ANR	4664008	Argument	1		4663995	0					
ANR	4664009	PrimaryExpression	1		4663995	0					
ANR	4664010	Argument	len		4663995	1					
ANR	4664011	Identifier	len		4663995	0					
ANR	4664012	IfStatement	if ( ! obuf )		4663995	1					
ANR	4664013	Condition	! obuf	218:5:6622:6626	4663995	0	True				
ANR	4664014	UnaryOperationExpression	! obuf		4663995	0					
ANR	4664015	UnaryOperator	!		4663995	0					
ANR	4664016	Identifier	obuf		4663995	1					
ANR	4664017	CompoundStatement		3:12:43:43	4663995	1					
ANR	4664018	ReturnStatement	return false ;	219:2:6633:6645	4663995	0	True				
ANR	4664019	Identifier	false		4663995	0					
ANR	4664020	IfStatement	if ( flag == 0 )		4663995	2					
ANR	4664021	Condition	flag == 0	221:5:6655:6663	4663995	0	True				
ANR	4664022	EqualityExpression	flag == 0		4663995	0		==			
ANR	4664023	Identifier	flag		4663995	0					
ANR	4664024	PrimaryExpression	0		4663995	1					
ANR	4664025	CompoundStatement		6:16:80:80	4663995	1					
ANR	4664026	ExpressionStatement	"rc2_crypt ( & state , buf , obuf , len )"	222:2:6670:6704	4663995	0	True				
ANR	4664027	CallExpression	"rc2_crypt ( & state , buf , obuf , len )"		4663995	0					
ANR	4664028	Callee	rc2_crypt		4663995	0					
ANR	4664029	Identifier	rc2_crypt		4663995	0					
ANR	4664030	ArgumentList	& state		4663995	1					
ANR	4664031	Argument	& state		4663995	0					
ANR	4664032	UnaryOperationExpression	& state		4663995	0					
ANR	4664033	UnaryOperator	&		4663995	0					
ANR	4664034	Identifier	state		4663995	1					
ANR	4664035	Argument	buf		4663995	1					
ANR	4664036	Identifier	buf		4663995	0					
ANR	4664037	Argument	obuf		4663995	2					
ANR	4664038	Identifier	obuf		4663995	0					
ANR	4664039	Argument	len		4663995	3					
ANR	4664040	Identifier	len		4663995	0					
ANR	4664041	ElseStatement	else		4663995	0					
ANR	4664042	IfStatement	if ( flag == 1 )		4663995	0					
ANR	4664043	Condition	flag == 1	223:12:6718:6726	4663995	0	True				
ANR	4664044	EqualityExpression	flag == 1		4663995	0		==			
ANR	4664045	Identifier	flag		4663995	0					
ANR	4664046	PrimaryExpression	1		4663995	1					
ANR	4664047	CompoundStatement		8:23:143:143	4663995	1					
ANR	4664048	ExpressionStatement	"rc2_dcrypt ( & state , buf , obuf , len )"	224:2:6733:6768	4663995	0	True				
ANR	4664049	CallExpression	"rc2_dcrypt ( & state , buf , obuf , len )"		4663995	0					
ANR	4664050	Callee	rc2_dcrypt		4663995	0					
ANR	4664051	Identifier	rc2_dcrypt		4663995	0					
ANR	4664052	ArgumentList	& state		4663995	1					
ANR	4664053	Argument	& state		4663995	0					
ANR	4664054	UnaryOperationExpression	& state		4663995	0					
ANR	4664055	UnaryOperator	&		4663995	0					
ANR	4664056	Identifier	state		4663995	1					
ANR	4664057	Argument	buf		4663995	1					
ANR	4664058	Identifier	buf		4663995	0					
ANR	4664059	Argument	obuf		4663995	2					
ANR	4664060	Identifier	obuf		4663995	0					
ANR	4664061	Argument	len		4663995	3					
ANR	4664062	Identifier	len		4663995	0					
ANR	4664063	ExpressionStatement	"r_crypto_append ( cry , obuf , len )"	226:1:6774:6805	4663995	3	True				
ANR	4664064	CallExpression	"r_crypto_append ( cry , obuf , len )"		4663995	0					
ANR	4664065	Callee	r_crypto_append		4663995	0					
ANR	4664066	Identifier	r_crypto_append		4663995	0					
ANR	4664067	ArgumentList	cry		4663995	1					
ANR	4664068	Argument	cry		4663995	0					
ANR	4664069	Identifier	cry		4663995	0					
ANR	4664070	Argument	obuf		4663995	1					
ANR	4664071	Identifier	obuf		4663995	0					
ANR	4664072	Argument	len		4663995	2					
ANR	4664073	Identifier	len		4663995	0					
ANR	4664074	ExpressionStatement	free ( obuf )	227:1:6808:6819	4663995	4	True				
ANR	4664075	CallExpression	free ( obuf )		4663995	0					
ANR	4664076	Callee	free		4663995	0					
ANR	4664077	Identifier	free		4663995	0					
ANR	4664078	ArgumentList	obuf		4663995	1					
ANR	4664079	Argument	obuf		4663995	0					
ANR	4664080	Identifier	obuf		4663995	0					
ANR	4664081	ReturnStatement	return true ;	228:1:6822:6833	4663995	5	True				
ANR	4664082	Identifier	true		4663995	0					
ANR	4664083	ReturnType	static bool		4663995	1					
ANR	4664084	Identifier	update		4663995	2					
ANR	4664085	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		4663995	3					
ANR	4664086	Parameter	RCrypto * cry	216:19:6546:6557	4663995	0	True				
ANR	4664087	ParameterType	RCrypto *		4663995	0					
ANR	4664088	Identifier	cry		4663995	1					
ANR	4664089	Parameter	const ut8 * buf	216:33:6560:6573	4663995	1	True				
ANR	4664090	ParameterType	const ut8 *		4663995	0					
ANR	4664091	Identifier	buf		4663995	1					
ANR	4664092	Parameter	int len	216:49:6576:6582	4663995	2	True				
ANR	4664093	ParameterType	int		4663995	0					
ANR	4664094	Identifier	len		4663995	1					
ANR	4664095	CFGEntryNode	ENTRY		4663995		True				
ANR	4664096	CFGExitNode	EXIT		4663995		True				
ANR	4664097	Symbol	buf		4663995						
ANR	4664098	Symbol	flag		4663995						
ANR	4664099	Symbol	len		4663995						
ANR	4664100	Symbol	& state		4663995						
ANR	4664101	Symbol	obuf		4663995						
ANR	4664102	Symbol	false		4663995						
ANR	4664103	Symbol	true		4663995						
ANR	4664104	Symbol	cry		4663995						
ANR	4664105	Symbol	calloc		4663995						
ANR	4664106	Function	final	231:0:6838:6929							
ANR	4664107	FunctionDef	"final (RCrypto * cry , const ut8 * buf , int len)"		4664106	0					
ANR	4664108	CompoundStatement		231:57:6895:6929	4664106	0					
ANR	4664109	ReturnStatement	"return update ( cry , buf , len ) ;"	232:1:6898:6927	4664106	0	True				
ANR	4664110	CallExpression	"update ( cry , buf , len )"		4664106	0					
ANR	4664111	Callee	update		4664106	0					
ANR	4664112	Identifier	update		4664106	0					
ANR	4664113	ArgumentList	cry		4664106	1					
ANR	4664114	Argument	cry		4664106	0					
ANR	4664115	Identifier	cry		4664106	0					
ANR	4664116	Argument	buf		4664106	1					
ANR	4664117	Identifier	buf		4664106	0					
ANR	4664118	Argument	len		4664106	2					
ANR	4664119	Identifier	len		4664106	0					
ANR	4664120	ReturnType	static bool		4664106	1					
ANR	4664121	Identifier	final		4664106	2					
ANR	4664122	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		4664106	3					
ANR	4664123	Parameter	RCrypto * cry	231:18:6856:6867	4664106	0	True				
ANR	4664124	ParameterType	RCrypto *		4664106	0					
ANR	4664125	Identifier	cry		4664106	1					
ANR	4664126	Parameter	const ut8 * buf	231:32:6870:6883	4664106	1	True				
ANR	4664127	ParameterType	const ut8 *		4664106	0					
ANR	4664128	Identifier	buf		4664106	1					
ANR	4664129	Parameter	int len	231:48:6886:6892	4664106	2	True				
ANR	4664130	ParameterType	int		4664106	0					
ANR	4664131	Identifier	len		4664106	1					
ANR	4664132	CFGEntryNode	ENTRY		4664106		True				
ANR	4664133	CFGExitNode	EXIT		4664106		True				
ANR	4664134	Symbol	buf		4664106						
ANR	4664135	Symbol	len		4664106						
ANR	4664136	Symbol	update		4664106						
ANR	4664137	Symbol	cry		4664106						
ANR	4664138	DeclStmt									
ANR	4664139	Decl							RCryptoPlugin	RCryptoPlugin	r_crypto_plugin_rc2
ANR	4664140	DeclStmt									
ANR	4664141	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
ANR	4664142	Function	main	253:0:7269:7596							
ANR	4664143	FunctionDef	main ()		4664142	0					
ANR	4664144	CompoundStatement		253:11:7280:7596	4664142	0					
ANR	4664145	IdentifierDeclStatement	ut8 out [ 16 ] ;	254:1:7283:7294	4664142	0	True				
ANR	4664146	IdentifierDecl	out [ 16 ]		4664142	0					
ANR	4664147	IdentifierDeclType	ut8 [ 16 ]		4664142	0					
ANR	4664148	Identifier	out		4664142	1					
ANR	4664149	PrimaryExpression	16		4664142	2					
ANR	4664150	IdentifierDeclStatement	struct rc2_state st ;	255:1:7297:7316	4664142	1	True				
ANR	4664151	IdentifierDecl	st		4664142	0					
ANR	4664152	IdentifierDeclType	struct rc2_state		4664142	0					
ANR	4664153	Identifier	st		4664142	1					
ANR	4664154	ExpressionStatement	st . key_size = 3	256:1:7319:7334	4664142	2	True				
ANR	4664155	AssignmentExpression	st . key_size = 3		4664142	0		=			
ANR	4664156	MemberAccess	st . key_size		4664142	0					
ANR	4664157	Identifier	st		4664142	0					
ANR	4664158	Identifier	key_size		4664142	1					
ANR	4664159	PrimaryExpression	3		4664142	1					
ANR	4664160	ExpressionStatement	"rc2_expandKey ( ( const ut8 * ) ""key"" , 3 , BITS , & st )"	258:1:7352:7399	4664142	3	True				
ANR	4664161	CallExpression	"rc2_expandKey ( ( const ut8 * ) ""key"" , 3 , BITS , & st )"		4664142	0					
ANR	4664162	Callee	rc2_expandKey		4664142	0					
ANR	4664163	Identifier	rc2_expandKey		4664142	0					
ANR	4664164	ArgumentList	"( const ut8 * ) ""key"""		4664142	1					
ANR	4664165	Argument	"( const ut8 * ) ""key"""		4664142	0					
ANR	4664166	CastExpression	"( const ut8 * ) ""key"""		4664142	0					
ANR	4664167	CastTarget	const ut8 *		4664142	0					
ANR	4664168	PrimaryExpression	"""key"""		4664142	1					
ANR	4664169	Argument	3		4664142	1					
ANR	4664170	PrimaryExpression	3		4664142	0					
ANR	4664171	Argument	BITS		4664142	2					
ANR	4664172	Identifier	BITS		4664142	0					
ANR	4664173	Argument	& st		4664142	3					
ANR	4664174	UnaryOperationExpression	& st		4664142	0					
ANR	4664175	UnaryOperator	&		4664142	0					
ANR	4664176	Identifier	st		4664142	1					
ANR	4664177	ExpressionStatement	"rc2_crypt ( & st , ( const ut8 * ) ""12345678abc"" , out , 11 )"	259:1:7402:7453	4664142	4	True				
ANR	4664178	CallExpression	"rc2_crypt ( & st , ( const ut8 * ) ""12345678abc"" , out , 11 )"		4664142	0					
ANR	4664179	Callee	rc2_crypt		4664142	0					
ANR	4664180	Identifier	rc2_crypt		4664142	0					
ANR	4664181	ArgumentList	& st		4664142	1					
ANR	4664182	Argument	& st		4664142	0					
ANR	4664183	UnaryOperationExpression	& st		4664142	0					
ANR	4664184	UnaryOperator	&		4664142	0					
ANR	4664185	Identifier	st		4664142	1					
ANR	4664186	Argument	"( const ut8 * ) ""12345678abc"""		4664142	1					
ANR	4664187	CastExpression	"( const ut8 * ) ""12345678abc"""		4664142	0					
ANR	4664188	CastTarget	const ut8 *		4664142	0					
ANR	4664189	PrimaryExpression	"""12345678abc"""		4664142	1					
ANR	4664190	Argument	out		4664142	2					
ANR	4664191	Identifier	out		4664142	0					
ANR	4664192	Argument	11		4664142	3					
ANR	4664193	PrimaryExpression	11		4664142	0					
ANR	4664194	ExpressionStatement	"eprintf ( ""%s\\n"" , ( const char * ) out )"	260:1:7456:7491	4664142	5	True				
ANR	4664195	CallExpression	"eprintf ( ""%s\\n"" , ( const char * ) out )"		4664142	0					
ANR	4664196	Callee	eprintf		4664142	0					
ANR	4664197	Identifier	eprintf		4664142	0					
ANR	4664198	ArgumentList	"""%s\\n"""		4664142	1					
ANR	4664199	Argument	"""%s\\n"""		4664142	0					
ANR	4664200	PrimaryExpression	"""%s\\n"""		4664142	0					
ANR	4664201	Argument	( const char * ) out		4664142	1					
ANR	4664202	CastExpression	( const char * ) out		4664142	0					
ANR	4664203	CastTarget	const char *		4664142	0					
ANR	4664204	Identifier	out		4664142	1					
ANR	4664205	ExpressionStatement	"rc2_dcrypt ( & st , ( const ut8 * ) out , out , sizeof ( out ) )"	261:1:7494:7545	4664142	6	True				
ANR	4664206	CallExpression	"rc2_dcrypt ( & st , ( const ut8 * ) out , out , sizeof ( out ) )"		4664142	0					
ANR	4664207	Callee	rc2_dcrypt		4664142	0					
ANR	4664208	Identifier	rc2_dcrypt		4664142	0					
ANR	4664209	ArgumentList	& st		4664142	1					
ANR	4664210	Argument	& st		4664142	0					
ANR	4664211	UnaryOperationExpression	& st		4664142	0					
ANR	4664212	UnaryOperator	&		4664142	0					
ANR	4664213	Identifier	st		4664142	1					
ANR	4664214	Argument	( const ut8 * ) out		4664142	1					
ANR	4664215	CastExpression	( const ut8 * ) out		4664142	0					
ANR	4664216	CastTarget	const ut8 *		4664142	0					
ANR	4664217	Identifier	out		4664142	1					
ANR	4664218	Argument	out		4664142	2					
ANR	4664219	Identifier	out		4664142	0					
ANR	4664220	Argument	sizeof ( out )		4664142	3					
ANR	4664221	SizeofExpression	sizeof ( out )		4664142	0					
ANR	4664222	Sizeof	sizeof		4664142	0					
ANR	4664223	SizeofOperand	out		4664142	1					
ANR	4664224	ExpressionStatement	"eprintf ( ""%s\\n"" , ( const char * ) out )"	262:1:7548:7583	4664142	7	True				
ANR	4664225	CallExpression	"eprintf ( ""%s\\n"" , ( const char * ) out )"		4664142	0					
ANR	4664226	Callee	eprintf		4664142	0					
ANR	4664227	Identifier	eprintf		4664142	0					
ANR	4664228	ArgumentList	"""%s\\n"""		4664142	1					
ANR	4664229	Argument	"""%s\\n"""		4664142	0					
ANR	4664230	PrimaryExpression	"""%s\\n"""		4664142	0					
ANR	4664231	Argument	( const char * ) out		4664142	1					
ANR	4664232	CastExpression	( const char * ) out		4664142	0					
ANR	4664233	CastTarget	const char *		4664142	0					
ANR	4664234	Identifier	out		4664142	1					
ANR	4664235	ReturnStatement	return 0 ;	263:1:7586:7594	4664142	8	True				
ANR	4664236	PrimaryExpression	0		4664142	0					
ANR	4664237	ReturnType	int		4664142	1					
ANR	4664238	Identifier	main		4664142	2					
ANR	4664239	ParameterList			4664142	3					
ANR	4664240	CFGEntryNode	ENTRY		4664142		True				
ANR	4664241	CFGExitNode	EXIT		4664142		True				
ANR	4664242	Symbol	st		4664142						
ANR	4664243	Symbol	BITS		4664142						
ANR	4664244	Symbol	& st		4664142						
ANR	4664245	Symbol	st . key_size		4664142						
ANR	4664246	Symbol	out		4664142						
