command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1186261	File	data/converged/CVE-2019-16718~_radare2/crypto_serpent.c								
ANR	1186262	DeclStmt									
ANR	1186263	Decl							struct serpent_state	struct serpent_state	st
ANR	1186264	Function	serpent_set_key	7:0:116:478							
ANR	1186265	FunctionDef	"serpent_set_key (RCrypto * cry , const ut8 * key , int keylen , int mode , int direction)"		1186264	0					
ANR	1186266	CompoundStatement		7:95:211:478	1186264	0					
ANR	1186267	ExpressionStatement	"eprintf ( ""key_size: %d\\n"" , keylen )"	8:1:214:248	1186264	0	True				
ANR	1186268	CallExpression	"eprintf ( ""key_size: %d\\n"" , keylen )"		1186264	0					
ANR	1186269	Callee	eprintf		1186264	0					
ANR	1186270	Identifier	eprintf		1186264	0					
ANR	1186271	ArgumentList	"""key_size: %d\\n"""		1186264	1					
ANR	1186272	Argument	"""key_size: %d\\n"""		1186264	0					
ANR	1186273	PrimaryExpression	"""key_size: %d\\n"""		1186264	0					
ANR	1186274	Argument	keylen		1186264	1					
ANR	1186275	Identifier	keylen		1186264	0					
ANR	1186276	IfStatement	if ( ( keylen != 128 / 8 ) && ( keylen != 192 / 8 ) && ( keylen != 256 / 8 ) )		1186264	1					
ANR	1186277	Condition	( keylen != 128 / 8 ) && ( keylen != 192 / 8 ) && ( keylen != 256 / 8 )	9:5:255:319	1186264	0	True				
ANR	1186278	AndExpression	( keylen != 128 / 8 ) && ( keylen != 192 / 8 ) && ( keylen != 256 / 8 )		1186264	0		&&			
ANR	1186279	EqualityExpression	keylen != 128 / 8		1186264	0		!=			
ANR	1186280	Identifier	keylen		1186264	0					
ANR	1186281	MultiplicativeExpression	128 / 8		1186264	1		/			
ANR	1186282	PrimaryExpression	128		1186264	0					
ANR	1186283	PrimaryExpression	8		1186264	1					
ANR	1186284	AndExpression	( keylen != 192 / 8 ) && ( keylen != 256 / 8 )		1186264	1		&&			
ANR	1186285	EqualityExpression	keylen != 192 / 8		1186264	0		!=			
ANR	1186286	Identifier	keylen		1186264	0					
ANR	1186287	MultiplicativeExpression	192 / 8		1186264	1		/			
ANR	1186288	PrimaryExpression	192		1186264	0					
ANR	1186289	PrimaryExpression	8		1186264	1					
ANR	1186290	EqualityExpression	keylen != 256 / 8		1186264	1		!=			
ANR	1186291	Identifier	keylen		1186264	0					
ANR	1186292	MultiplicativeExpression	256 / 8		1186264	1		/			
ANR	1186293	PrimaryExpression	256		1186264	0					
ANR	1186294	PrimaryExpression	8		1186264	1					
ANR	1186295	CompoundStatement		3:72:110:110	1186264	1					
ANR	1186296	ReturnStatement	return false ;	10:2:326:338	1186264	0	True				
ANR	1186297	Identifier	false		1186264	0					
ANR	1186298	ExpressionStatement	st . key_size = keylen * 8	12:1:344:366	1186264	2	True				
ANR	1186299	AssignmentExpression	st . key_size = keylen * 8		1186264	0		=			
ANR	1186300	MemberAccess	st . key_size		1186264	0					
ANR	1186301	Identifier	st		1186264	0					
ANR	1186302	Identifier	key_size		1186264	1					
ANR	1186303	MultiplicativeExpression	keylen * 8		1186264	1		*			
ANR	1186304	Identifier	keylen		1186264	0					
ANR	1186305	PrimaryExpression	8		1186264	1					
ANR	1186306	ExpressionStatement	"eprintf ( ""key_size: %d\\n"" , st . key_size )"	13:1:369:408	1186264	3	True				
ANR	1186307	CallExpression	"eprintf ( ""key_size: %d\\n"" , st . key_size )"		1186264	0					
ANR	1186308	Callee	eprintf		1186264	0					
ANR	1186309	Identifier	eprintf		1186264	0					
ANR	1186310	ArgumentList	"""key_size: %d\\n"""		1186264	1					
ANR	1186311	Argument	"""key_size: %d\\n"""		1186264	0					
ANR	1186312	PrimaryExpression	"""key_size: %d\\n"""		1186264	0					
ANR	1186313	Argument	st . key_size		1186264	1					
ANR	1186314	MemberAccess	st . key_size		1186264	0					
ANR	1186315	Identifier	st		1186264	0					
ANR	1186316	Identifier	key_size		1186264	1					
ANR	1186317	ExpressionStatement	"memcpy ( st . key , key , keylen )"	14:1:411:439	1186264	4	True				
ANR	1186318	CallExpression	"memcpy ( st . key , key , keylen )"		1186264	0					
ANR	1186319	Callee	memcpy		1186264	0					
ANR	1186320	Identifier	memcpy		1186264	0					
ANR	1186321	ArgumentList	st . key		1186264	1					
ANR	1186322	Argument	st . key		1186264	0					
ANR	1186323	MemberAccess	st . key		1186264	0					
ANR	1186324	Identifier	st		1186264	0					
ANR	1186325	Identifier	key		1186264	1					
ANR	1186326	Argument	key		1186264	1					
ANR	1186327	Identifier	key		1186264	0					
ANR	1186328	Argument	keylen		1186264	2					
ANR	1186329	Identifier	keylen		1186264	0					
ANR	1186330	ExpressionStatement	cry -> dir = direction	15:1:442:462	1186264	5	True				
ANR	1186331	AssignmentExpression	cry -> dir = direction		1186264	0		=			
ANR	1186332	PtrMemberAccess	cry -> dir		1186264	0					
ANR	1186333	Identifier	cry		1186264	0					
ANR	1186334	Identifier	dir		1186264	1					
ANR	1186335	Identifier	direction		1186264	1					
ANR	1186336	ReturnStatement	return true ;	16:1:465:476	1186264	6	True				
ANR	1186337	Identifier	true		1186264	0					
ANR	1186338	ReturnType	static bool		1186264	1					
ANR	1186339	Identifier	serpent_set_key		1186264	2					
ANR	1186340	ParameterList	"RCrypto * cry , const ut8 * key , int keylen , int mode , int direction"		1186264	3					
ANR	1186341	Parameter	RCrypto * cry	7:28:144:155	1186264	0	True				
ANR	1186342	ParameterType	RCrypto *		1186264	0					
ANR	1186343	Identifier	cry		1186264	1					
ANR	1186344	Parameter	const ut8 * key	7:42:158:171	1186264	1	True				
ANR	1186345	ParameterType	const ut8 *		1186264	0					
ANR	1186346	Identifier	key		1186264	1					
ANR	1186347	Parameter	int keylen	7:58:174:183	1186264	2	True				
ANR	1186348	ParameterType	int		1186264	0					
ANR	1186349	Identifier	keylen		1186264	1					
ANR	1186350	Parameter	int mode	7:70:186:193	1186264	3	True				
ANR	1186351	ParameterType	int		1186264	0					
ANR	1186352	Identifier	mode		1186264	1					
ANR	1186353	Parameter	int direction	7:80:196:208	1186264	4	True				
ANR	1186354	ParameterType	int		1186264	0					
ANR	1186355	Identifier	direction		1186264	1					
ANR	1186356	CFGEntryNode	ENTRY		1186264		True				
ANR	1186357	CFGExitNode	EXIT		1186264		True				
ANR	1186358	Symbol	mode		1186264						
ANR	1186359	Symbol	st		1186264						
ANR	1186360	Symbol	st . key		1186264						
ANR	1186361	Symbol	keylen		1186264						
ANR	1186362	Symbol	false		1186264						
ANR	1186363	Symbol	true		1186264						
ANR	1186364	Symbol	cry		1186264						
ANR	1186365	Symbol	* cry		1186264						
ANR	1186366	Symbol	st . key_size		1186264						
ANR	1186367	Symbol	cry -> dir		1186264						
ANR	1186368	Symbol	key		1186264						
ANR	1186369	Symbol	direction		1186264						
ANR	1186370	Function	serpent_get_key_size	19:0:481:550							
ANR	1186371	FunctionDef	serpent_get_key_size (RCrypto * cry)		1186370	0					
ANR	1186372	CompoundStatement		19:46:527:550	1186370	0					
ANR	1186373	ReturnStatement	return st . key_size ;	20:1:530:548	1186370	0	True				
ANR	1186374	MemberAccess	st . key_size		1186370	0					
ANR	1186375	Identifier	st		1186370	0					
ANR	1186376	Identifier	key_size		1186370	1					
ANR	1186377	ReturnType	static int		1186370	1					
ANR	1186378	Identifier	serpent_get_key_size		1186370	2					
ANR	1186379	ParameterList	RCrypto * cry		1186370	3					
ANR	1186380	Parameter	RCrypto * cry	19:32:513:524	1186370	0	True				
ANR	1186381	ParameterType	RCrypto *		1186370	0					
ANR	1186382	Identifier	cry		1186370	1					
ANR	1186383	CFGEntryNode	ENTRY		1186370		True				
ANR	1186384	CFGExitNode	EXIT		1186370		True				
ANR	1186385	Symbol	st		1186370						
ANR	1186386	Symbol	cry		1186370						
ANR	1186387	Symbol	st . key_size		1186370						
ANR	1186388	Function	serpent_use	23:0:553:636							
ANR	1186389	FunctionDef	serpent_use (const char * algo)		1186388	0					
ANR	1186390	CompoundStatement		23:42:595:636	1186388	0					
ANR	1186391	ReturnStatement	"return ! strcmp ( algo , ""serpent-ecb"" ) ;"	24:1:598:634	1186388	0	True				
ANR	1186392	UnaryOperationExpression	"! strcmp ( algo , ""serpent-ecb"" )"		1186388	0					
ANR	1186393	UnaryOperator	!		1186388	0					
ANR	1186394	CallExpression	"strcmp ( algo , ""serpent-ecb"" )"		1186388	1					
ANR	1186395	Callee	strcmp		1186388	0					
ANR	1186396	Identifier	strcmp		1186388	0					
ANR	1186397	ArgumentList	algo		1186388	1					
ANR	1186398	Argument	algo		1186388	0					
ANR	1186399	Identifier	algo		1186388	0					
ANR	1186400	Argument	"""serpent-ecb"""		1186388	1					
ANR	1186401	PrimaryExpression	"""serpent-ecb"""		1186388	0					
ANR	1186402	ReturnType	static bool		1186388	1					
ANR	1186403	Identifier	serpent_use		1186388	2					
ANR	1186404	ParameterList	const char * algo		1186388	3					
ANR	1186405	Parameter	const char * algo	23:24:577:592	1186388	0	True				
ANR	1186406	ParameterType	const char *		1186388	0					
ANR	1186407	Identifier	algo		1186388	1					
ANR	1186408	CFGEntryNode	ENTRY		1186388		True				
ANR	1186409	CFGExitNode	EXIT		1186388		True				
ANR	1186410	Symbol	strcmp		1186388						
ANR	1186411	Symbol	algo		1186388						
ANR	1186412	Function	update	29:0:662:2021							
ANR	1186413	FunctionDef	"update (RCrypto * cry , const ut8 * buf , int len)"		1186412	0					
ANR	1186414	CompoundStatement		29:58:720:2021	1186412	0					
ANR	1186415	IdentifierDeclStatement	const int diff = ( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE ;	31:1:776:839	1186412	0	True				
ANR	1186416	IdentifierDecl	diff = ( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE		1186412	0					
ANR	1186417	IdentifierDeclType	const int		1186412	0					
ANR	1186418	Identifier	diff		1186412	1					
ANR	1186419	AssignmentExpression	diff = ( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE		1186412	2		=			
ANR	1186420	Identifier	diff		1186412	0					
ANR	1186421	MultiplicativeExpression	( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE		1186412	1		%			
ANR	1186422	AdditiveExpression	BLOCK_SIZE - ( len % BLOCK_SIZE )		1186412	0		-			
ANR	1186423	Identifier	BLOCK_SIZE		1186412	0					
ANR	1186424	MultiplicativeExpression	len % BLOCK_SIZE		1186412	1		%			
ANR	1186425	Identifier	len		1186412	0					
ANR	1186426	Identifier	BLOCK_SIZE		1186412	1					
ANR	1186427	Identifier	BLOCK_SIZE		1186412	1					
ANR	1186428	IdentifierDeclStatement	const int size = len + diff ;	32:1:842:869	1186412	1	True				
ANR	1186429	IdentifierDecl	size = len + diff		1186412	0					
ANR	1186430	IdentifierDeclType	const int		1186412	0					
ANR	1186431	Identifier	size		1186412	1					
ANR	1186432	AssignmentExpression	size = len + diff		1186412	2		=			
ANR	1186433	Identifier	size		1186412	0					
ANR	1186434	AdditiveExpression	len + diff		1186412	1		+			
ANR	1186435	Identifier	len		1186412	0					
ANR	1186436	Identifier	diff		1186412	1					
ANR	1186437	IdentifierDeclStatement	const int blocks = size / BLOCK_SIZE ;	33:1:872:908	1186412	2	True				
ANR	1186438	IdentifierDecl	blocks = size / BLOCK_SIZE		1186412	0					
ANR	1186439	IdentifierDeclType	const int		1186412	0					
ANR	1186440	Identifier	blocks		1186412	1					
ANR	1186441	AssignmentExpression	blocks = size / BLOCK_SIZE		1186412	2		=			
ANR	1186442	Identifier	blocks		1186412	0					
ANR	1186443	MultiplicativeExpression	size / BLOCK_SIZE		1186412	1		/			
ANR	1186444	Identifier	size		1186412	0					
ANR	1186445	Identifier	BLOCK_SIZE		1186412	1					
ANR	1186446	IdentifierDeclStatement	"int i , j ;"	34:1:911:919	1186412	3	True				
ANR	1186447	IdentifierDecl	i		1186412	0					
ANR	1186448	IdentifierDeclType	int		1186412	0					
ANR	1186449	Identifier	i		1186412	1					
ANR	1186450	IdentifierDecl	j		1186412	1					
ANR	1186451	IdentifierDeclType	int		1186412	0					
ANR	1186452	Identifier	j		1186412	1					
ANR	1186453	Statement	ut8	36:1:923:925	1186412	4	True				
ANR	1186454	Statement	*	36:5:927:927	1186412	5	True				
ANR	1186455	Statement	const	36:6:928:932	1186412	6	True				
ANR	1186456	ExpressionStatement	"obuf = calloc ( 4 , size / 4 )"	36:12:934:959	1186412	7	True				
ANR	1186457	AssignmentExpression	"obuf = calloc ( 4 , size / 4 )"		1186412	0		=			
ANR	1186458	Identifier	obuf		1186412	0					
ANR	1186459	CallExpression	"calloc ( 4 , size / 4 )"		1186412	1					
ANR	1186460	Callee	calloc		1186412	0					
ANR	1186461	Identifier	calloc		1186412	0					
ANR	1186462	ArgumentList	4		1186412	1					
ANR	1186463	Argument	4		1186412	0					
ANR	1186464	PrimaryExpression	4		1186412	0					
ANR	1186465	Argument	size / 4		1186412	1					
ANR	1186466	MultiplicativeExpression	size / 4		1186412	0		/			
ANR	1186467	Identifier	size		1186412	0					
ANR	1186468	PrimaryExpression	4		1186412	1					
ANR	1186469	IfStatement	if ( ! obuf )		1186412	8					
ANR	1186470	Condition	! obuf	37:5:966:970	1186412	0	True				
ANR	1186471	UnaryOperationExpression	! obuf		1186412	0					
ANR	1186472	UnaryOperator	!		1186412	0					
ANR	1186473	Identifier	obuf		1186412	1					
ANR	1186474	CompoundStatement		9:12:252:252	1186412	1					
ANR	1186475	ReturnStatement	return false ;	38:2:977:989	1186412	0	True				
ANR	1186476	Identifier	false		1186412	0					
ANR	1186477	Statement	ut32	40:1:995:998	1186412	9	True				
ANR	1186478	Statement	*	40:6:1000:1000	1186412	10	True				
ANR	1186479	Statement	const	40:7:1001:1005	1186412	11	True				
ANR	1186480	ExpressionStatement	"ibuf = calloc ( 4 , size / 4 )"	40:13:1007:1032	1186412	12	True				
ANR	1186481	AssignmentExpression	"ibuf = calloc ( 4 , size / 4 )"		1186412	0		=			
ANR	1186482	Identifier	ibuf		1186412	0					
ANR	1186483	CallExpression	"calloc ( 4 , size / 4 )"		1186412	1					
ANR	1186484	Callee	calloc		1186412	0					
ANR	1186485	Identifier	calloc		1186412	0					
ANR	1186486	ArgumentList	4		1186412	1					
ANR	1186487	Argument	4		1186412	0					
ANR	1186488	PrimaryExpression	4		1186412	0					
ANR	1186489	Argument	size / 4		1186412	1					
ANR	1186490	MultiplicativeExpression	size / 4		1186412	0		/			
ANR	1186491	Identifier	size		1186412	0					
ANR	1186492	PrimaryExpression	4		1186412	1					
ANR	1186493	IfStatement	if ( ! ibuf )		1186412	13					
ANR	1186494	Condition	! ibuf	41:5:1039:1043	1186412	0	True				
ANR	1186495	UnaryOperationExpression	! ibuf		1186412	0					
ANR	1186496	UnaryOperator	!		1186412	0					
ANR	1186497	Identifier	ibuf		1186412	1					
ANR	1186498	CompoundStatement		13:12:325:325	1186412	1					
ANR	1186499	ExpressionStatement	free ( obuf )	42:2:1050:1061	1186412	0	True				
ANR	1186500	CallExpression	free ( obuf )		1186412	0					
ANR	1186501	Callee	free		1186412	0					
ANR	1186502	Identifier	free		1186412	0					
ANR	1186503	ArgumentList	obuf		1186412	1					
ANR	1186504	Argument	obuf		1186412	0					
ANR	1186505	Identifier	obuf		1186412	0					
ANR	1186506	ReturnStatement	return false ;	43:2:1065:1077	1186412	1	True				
ANR	1186507	Identifier	false		1186412	0					
ANR	1186508	Statement	ut32	45:1:1083:1086	1186412	14	True				
ANR	1186509	Statement	*	45:6:1088:1088	1186412	15	True				
ANR	1186510	Statement	const	45:7:1089:1093	1186412	16	True				
ANR	1186511	ExpressionStatement	"tmp = calloc ( 4 , size / 4 )"	45:13:1095:1119	1186412	17	True				
ANR	1186512	AssignmentExpression	"tmp = calloc ( 4 , size / 4 )"		1186412	0		=			
ANR	1186513	Identifier	tmp		1186412	0					
ANR	1186514	CallExpression	"calloc ( 4 , size / 4 )"		1186412	1					
ANR	1186515	Callee	calloc		1186412	0					
ANR	1186516	Identifier	calloc		1186412	0					
ANR	1186517	ArgumentList	4		1186412	1					
ANR	1186518	Argument	4		1186412	0					
ANR	1186519	PrimaryExpression	4		1186412	0					
ANR	1186520	Argument	size / 4		1186412	1					
ANR	1186521	MultiplicativeExpression	size / 4		1186412	0		/			
ANR	1186522	Identifier	size		1186412	0					
ANR	1186523	PrimaryExpression	4		1186412	1					
ANR	1186524	IfStatement	if ( ! ibuf )		1186412	18					
ANR	1186525	Condition	! ibuf	46:5:1126:1130	1186412	0	True				
ANR	1186526	UnaryOperationExpression	! ibuf		1186412	0					
ANR	1186527	UnaryOperator	!		1186412	0					
ANR	1186528	Identifier	ibuf		1186412	1					
ANR	1186529	CompoundStatement		18:12:412:412	1186412	1					
ANR	1186530	ExpressionStatement	free ( obuf )	47:2:1137:1148	1186412	0	True				
ANR	1186531	CallExpression	free ( obuf )		1186412	0					
ANR	1186532	Callee	free		1186412	0					
ANR	1186533	Identifier	free		1186412	0					
ANR	1186534	ArgumentList	obuf		1186412	1					
ANR	1186535	Argument	obuf		1186412	0					
ANR	1186536	Identifier	obuf		1186412	0					
ANR	1186537	ExpressionStatement	free ( ibuf )	48:2:1152:1163	1186412	1	True				
ANR	1186538	CallExpression	free ( ibuf )		1186412	0					
ANR	1186539	Callee	free		1186412	0					
ANR	1186540	Identifier	free		1186412	0					
ANR	1186541	ArgumentList	ibuf		1186412	1					
ANR	1186542	Argument	ibuf		1186412	0					
ANR	1186543	Identifier	ibuf		1186412	0					
ANR	1186544	ReturnStatement	return false ;	49:2:1167:1179	1186412	2	True				
ANR	1186545	Identifier	false		1186412	0					
ANR	1186546	ForStatement	for ( j = 0 ; j < size / 4 ; j ++ )		1186412	19					
ANR	1186547	ForInit	j = 0 ;	53:6:1234:1239	1186412	0	True				
ANR	1186548	AssignmentExpression	j = 0		1186412	0		=			
ANR	1186549	Identifier	j		1186412	0					
ANR	1186550	PrimaryExpression	0		1186412	1					
ANR	1186551	Condition	j < size / 4	53:13:1241:1250	1186412	1	True				
ANR	1186552	RelationalExpression	j < size / 4		1186412	0		<			
ANR	1186553	Identifier	j		1186412	0					
ANR	1186554	MultiplicativeExpression	size / 4		1186412	1		/			
ANR	1186555	Identifier	size		1186412	0					
ANR	1186556	PrimaryExpression	4		1186412	1					
ANR	1186557	PostIncDecOperationExpression	j ++	53:25:1253:1255	1186412	2	True				
ANR	1186558	Identifier	j		1186412	0					
ANR	1186559	IncDec	++		1186412	1					
ANR	1186560	CompoundStatement		25:30:537:537	1186412	3					
ANR	1186561	ExpressionStatement	ibuf [ j ] = r_read_le32 ( & buf [ 4 * j ] )	54:2:1262:1294	1186412	0	True				
ANR	1186562	AssignmentExpression	ibuf [ j ] = r_read_le32 ( & buf [ 4 * j ] )		1186412	0		=			
ANR	1186563	ArrayIndexing	ibuf [ j ]		1186412	0					
ANR	1186564	Identifier	ibuf		1186412	0					
ANR	1186565	Identifier	j		1186412	1					
ANR	1186566	CallExpression	r_read_le32 ( & buf [ 4 * j ] )		1186412	1					
ANR	1186567	Callee	r_read_le32		1186412	0					
ANR	1186568	Identifier	r_read_le32		1186412	0					
ANR	1186569	ArgumentList	& buf [ 4 * j ]		1186412	1					
ANR	1186570	Argument	& buf [ 4 * j ]		1186412	0					
ANR	1186571	UnaryOperationExpression	& buf [ 4 * j ]		1186412	0					
ANR	1186572	UnaryOperator	&		1186412	0					
ANR	1186573	ArrayIndexing	buf [ 4 * j ]		1186412	1					
ANR	1186574	Identifier	buf		1186412	0					
ANR	1186575	MultiplicativeExpression	4 * j		1186412	1		*			
ANR	1186576	PrimaryExpression	4		1186412	0					
ANR	1186577	Identifier	j		1186412	1					
ANR	1186578	IfStatement	if ( cry -> dir == 0 )		1186412	20					
ANR	1186579	Condition	cry -> dir == 0	59:5:1324:1336	1186412	0	True				
ANR	1186580	EqualityExpression	cry -> dir == 0		1186412	0		==			
ANR	1186581	PtrMemberAccess	cry -> dir		1186412	0					
ANR	1186582	Identifier	cry		1186412	0					
ANR	1186583	Identifier	dir		1186412	1					
ANR	1186584	PrimaryExpression	0		1186412	1					
ANR	1186585	CompoundStatement		31:20:618:618	1186412	1					
ANR	1186586	ForStatement	for ( i = 0 ; i < blocks ; i ++ )		1186412	0					
ANR	1186587	ForInit	i = 0 ;	60:7:1348:1353	1186412	0	True				
ANR	1186588	AssignmentExpression	i = 0		1186412	0		=			
ANR	1186589	Identifier	i		1186412	0					
ANR	1186590	PrimaryExpression	0		1186412	1					
ANR	1186591	Condition	i < blocks	60:14:1355:1364	1186412	1	True				
ANR	1186592	RelationalExpression	i < blocks		1186412	0		<			
ANR	1186593	Identifier	i		1186412	0					
ANR	1186594	Identifier	blocks		1186412	1					
ANR	1186595	PostIncDecOperationExpression	i ++	60:26:1367:1369	1186412	2	True				
ANR	1186596	Identifier	i		1186412	0					
ANR	1186597	IncDec	++		1186412	1					
ANR	1186598	CompoundStatement		34:3:686:722	1186412	3					
ANR	1186599	IdentifierDeclStatement	const int delta = ( BLOCK_SIZE * i ) / 4 ;	62:3:1407:1443	1186412	0	True				
ANR	1186600	IdentifierDecl	delta = ( BLOCK_SIZE * i ) / 4		1186412	0					
ANR	1186601	IdentifierDeclType	const int		1186412	0					
ANR	1186602	Identifier	delta		1186412	1					
ANR	1186603	AssignmentExpression	delta = ( BLOCK_SIZE * i ) / 4		1186412	2		=			
ANR	1186604	Identifier	delta		1186412	0					
ANR	1186605	MultiplicativeExpression	( BLOCK_SIZE * i ) / 4		1186412	1		/			
ANR	1186606	MultiplicativeExpression	BLOCK_SIZE * i		1186412	0		*			
ANR	1186607	Identifier	BLOCK_SIZE		1186412	0					
ANR	1186608	Identifier	i		1186412	1					
ANR	1186609	PrimaryExpression	4		1186412	1					
ANR	1186610	ExpressionStatement	"serpent_encrypt ( & st , ibuf + delta , tmp + delta )"	63:3:1448:1496	1186412	1	True				
ANR	1186611	CallExpression	"serpent_encrypt ( & st , ibuf + delta , tmp + delta )"		1186412	0					
ANR	1186612	Callee	serpent_encrypt		1186412	0					
ANR	1186613	Identifier	serpent_encrypt		1186412	0					
ANR	1186614	ArgumentList	& st		1186412	1					
ANR	1186615	Argument	& st		1186412	0					
ANR	1186616	UnaryOperationExpression	& st		1186412	0					
ANR	1186617	UnaryOperator	&		1186412	0					
ANR	1186618	Identifier	st		1186412	1					
ANR	1186619	Argument	ibuf + delta		1186412	1					
ANR	1186620	AdditiveExpression	ibuf + delta		1186412	0		+			
ANR	1186621	Identifier	ibuf		1186412	0					
ANR	1186622	Identifier	delta		1186412	1					
ANR	1186623	Argument	tmp + delta		1186412	2					
ANR	1186624	AdditiveExpression	tmp + delta		1186412	0		+			
ANR	1186625	Identifier	tmp		1186412	0					
ANR	1186626	Identifier	delta		1186412	1					
ANR	1186627	ElseStatement	else		1186412	0					
ANR	1186628	IfStatement	if ( cry -> dir > 0 )		1186412	0					
ANR	1186629	Condition	cry -> dir > 0	65:12:1514:1525	1186412	0	True				
ANR	1186630	RelationalExpression	cry -> dir > 0		1186412	0		>			
ANR	1186631	PtrMemberAccess	cry -> dir		1186412	0					
ANR	1186632	Identifier	cry		1186412	0					
ANR	1186633	Identifier	dir		1186412	1					
ANR	1186634	PrimaryExpression	0		1186412	1					
ANR	1186635	CompoundStatement		37:26:807:807	1186412	1					
ANR	1186636	ForStatement	for ( i = 0 ; i < blocks ; i ++ )		1186412	0					
ANR	1186637	ForInit	i = 0 ;	66:7:1537:1542	1186412	0	True				
ANR	1186638	AssignmentExpression	i = 0		1186412	0		=			
ANR	1186639	Identifier	i		1186412	0					
ANR	1186640	PrimaryExpression	0		1186412	1					
ANR	1186641	Condition	i < blocks	66:14:1544:1553	1186412	1	True				
ANR	1186642	RelationalExpression	i < blocks		1186412	0		<			
ANR	1186643	Identifier	i		1186412	0					
ANR	1186644	Identifier	blocks		1186412	1					
ANR	1186645	PostIncDecOperationExpression	i ++	66:26:1556:1558	1186412	2	True				
ANR	1186646	Identifier	i		1186412	0					
ANR	1186647	IncDec	++		1186412	1					
ANR	1186648	CompoundStatement		40:3:875:911	1186412	3					
ANR	1186649	IdentifierDeclStatement	const int delta = ( BLOCK_SIZE * i ) / 4 ;	68:3:1596:1632	1186412	0	True				
ANR	1186650	IdentifierDecl	delta = ( BLOCK_SIZE * i ) / 4		1186412	0					
ANR	1186651	IdentifierDeclType	const int		1186412	0					
ANR	1186652	Identifier	delta		1186412	1					
ANR	1186653	AssignmentExpression	delta = ( BLOCK_SIZE * i ) / 4		1186412	2		=			
ANR	1186654	Identifier	delta		1186412	0					
ANR	1186655	MultiplicativeExpression	( BLOCK_SIZE * i ) / 4		1186412	1		/			
ANR	1186656	MultiplicativeExpression	BLOCK_SIZE * i		1186412	0		*			
ANR	1186657	Identifier	BLOCK_SIZE		1186412	0					
ANR	1186658	Identifier	i		1186412	1					
ANR	1186659	PrimaryExpression	4		1186412	1					
ANR	1186660	ExpressionStatement	"serpent_decrypt ( & st , ibuf + delta , tmp + delta )"	69:3:1637:1685	1186412	1	True				
ANR	1186661	CallExpression	"serpent_decrypt ( & st , ibuf + delta , tmp + delta )"		1186412	0					
ANR	1186662	Callee	serpent_decrypt		1186412	0					
ANR	1186663	Identifier	serpent_decrypt		1186412	0					
ANR	1186664	ArgumentList	& st		1186412	1					
ANR	1186665	Argument	& st		1186412	0					
ANR	1186666	UnaryOperationExpression	& st		1186412	0					
ANR	1186667	UnaryOperator	&		1186412	0					
ANR	1186668	Identifier	st		1186412	1					
ANR	1186669	Argument	ibuf + delta		1186412	1					
ANR	1186670	AdditiveExpression	ibuf + delta		1186412	0		+			
ANR	1186671	Identifier	ibuf		1186412	0					
ANR	1186672	Identifier	delta		1186412	1					
ANR	1186673	Argument	tmp + delta		1186412	2					
ANR	1186674	AdditiveExpression	tmp + delta		1186412	0		+			
ANR	1186675	Identifier	tmp		1186412	0					
ANR	1186676	Identifier	delta		1186412	1					
ANR	1186677	IdentifierDeclStatement	int k ;	74:1:1739:1744	1186412	21	True				
ANR	1186678	IdentifierDecl	k		1186412	0					
ANR	1186679	IdentifierDeclType	int		1186412	0					
ANR	1186680	Identifier	k		1186412	1					
ANR	1186681	ForStatement	for ( j = 0 ; j < size / 4 ; j ++ )		1186412	22					
ANR	1186682	ForInit	j = 0 ;	75:6:1752:1757	1186412	0	True				
ANR	1186683	AssignmentExpression	j = 0		1186412	0		=			
ANR	1186684	Identifier	j		1186412	0					
ANR	1186685	PrimaryExpression	0		1186412	1					
ANR	1186686	Condition	j < size / 4	75:13:1759:1768	1186412	1	True				
ANR	1186687	RelationalExpression	j < size / 4		1186412	0		<			
ANR	1186688	Identifier	j		1186412	0					
ANR	1186689	MultiplicativeExpression	size / 4		1186412	1		/			
ANR	1186690	Identifier	size		1186412	0					
ANR	1186691	PrimaryExpression	4		1186412	1					
ANR	1186692	PostIncDecOperationExpression	j ++	75:25:1771:1773	1186412	2	True				
ANR	1186693	Identifier	j		1186412	0					
ANR	1186694	IncDec	++		1186412	1					
ANR	1186695	CompoundStatement		47:30:1055:1055	1186412	3					
ANR	1186696	ExpressionStatement	k = 4 * j	76:2:1780:1787	1186412	0	True				
ANR	1186697	AssignmentExpression	k = 4 * j		1186412	0		=			
ANR	1186698	Identifier	k		1186412	0					
ANR	1186699	MultiplicativeExpression	4 * j		1186412	1		*			
ANR	1186700	PrimaryExpression	4		1186412	0					
ANR	1186701	Identifier	j		1186412	1					
ANR	1186702	ExpressionStatement	obuf [ k ] = tmp [ j ] & 0xff	77:2:1791:1814	1186412	1	True				
ANR	1186703	AssignmentExpression	obuf [ k ] = tmp [ j ] & 0xff		1186412	0		=			
ANR	1186704	ArrayIndexing	obuf [ k ]		1186412	0					
ANR	1186705	Identifier	obuf		1186412	0					
ANR	1186706	Identifier	k		1186412	1					
ANR	1186707	BitAndExpression	tmp [ j ] & 0xff		1186412	1		&			
ANR	1186708	ArrayIndexing	tmp [ j ]		1186412	0					
ANR	1186709	Identifier	tmp		1186412	0					
ANR	1186710	Identifier	j		1186412	1					
ANR	1186711	PrimaryExpression	0xff		1186412	1					
ANR	1186712	ExpressionStatement	obuf [ k + 1 ] = ( tmp [ j ] >> 8 ) & 0xff	78:2:1818:1850	1186412	2	True				
ANR	1186713	AssignmentExpression	obuf [ k + 1 ] = ( tmp [ j ] >> 8 ) & 0xff		1186412	0		=			
ANR	1186714	ArrayIndexing	obuf [ k + 1 ]		1186412	0					
ANR	1186715	Identifier	obuf		1186412	0					
ANR	1186716	AdditiveExpression	k + 1		1186412	1		+			
ANR	1186717	Identifier	k		1186412	0					
ANR	1186718	PrimaryExpression	1		1186412	1					
ANR	1186719	BitAndExpression	( tmp [ j ] >> 8 ) & 0xff		1186412	1		&			
ANR	1186720	ShiftExpression	tmp [ j ] >> 8		1186412	0		>>			
ANR	1186721	ArrayIndexing	tmp [ j ]		1186412	0					
ANR	1186722	Identifier	tmp		1186412	0					
ANR	1186723	Identifier	j		1186412	1					
ANR	1186724	PrimaryExpression	8		1186412	1					
ANR	1186725	PrimaryExpression	0xff		1186412	1					
ANR	1186726	ExpressionStatement	obuf [ k + 2 ] = ( tmp [ j ] >> 16 ) & 0xff	79:2:1854:1887	1186412	3	True				
ANR	1186727	AssignmentExpression	obuf [ k + 2 ] = ( tmp [ j ] >> 16 ) & 0xff		1186412	0		=			
ANR	1186728	ArrayIndexing	obuf [ k + 2 ]		1186412	0					
ANR	1186729	Identifier	obuf		1186412	0					
ANR	1186730	AdditiveExpression	k + 2		1186412	1		+			
ANR	1186731	Identifier	k		1186412	0					
ANR	1186732	PrimaryExpression	2		1186412	1					
ANR	1186733	BitAndExpression	( tmp [ j ] >> 16 ) & 0xff		1186412	1		&			
ANR	1186734	ShiftExpression	tmp [ j ] >> 16		1186412	0		>>			
ANR	1186735	ArrayIndexing	tmp [ j ]		1186412	0					
ANR	1186736	Identifier	tmp		1186412	0					
ANR	1186737	Identifier	j		1186412	1					
ANR	1186738	PrimaryExpression	16		1186412	1					
ANR	1186739	PrimaryExpression	0xff		1186412	1					
ANR	1186740	ExpressionStatement	obuf [ k + 3 ] = ( tmp [ j ] >> 24 ) & 0xff	80:2:1891:1924	1186412	4	True				
ANR	1186741	AssignmentExpression	obuf [ k + 3 ] = ( tmp [ j ] >> 24 ) & 0xff		1186412	0		=			
ANR	1186742	ArrayIndexing	obuf [ k + 3 ]		1186412	0					
ANR	1186743	Identifier	obuf		1186412	0					
ANR	1186744	AdditiveExpression	k + 3		1186412	1		+			
ANR	1186745	Identifier	k		1186412	0					
ANR	1186746	PrimaryExpression	3		1186412	1					
ANR	1186747	BitAndExpression	( tmp [ j ] >> 24 ) & 0xff		1186412	1		&			
ANR	1186748	ShiftExpression	tmp [ j ] >> 24		1186412	0		>>			
ANR	1186749	ArrayIndexing	tmp [ j ]		1186412	0					
ANR	1186750	Identifier	tmp		1186412	0					
ANR	1186751	Identifier	j		1186412	1					
ANR	1186752	PrimaryExpression	24		1186412	1					
ANR	1186753	PrimaryExpression	0xff		1186412	1					
ANR	1186754	ExpressionStatement	"r_crypto_append ( cry , obuf , size )"	83:1:1931:1964	1186412	23	True				
ANR	1186755	CallExpression	"r_crypto_append ( cry , obuf , size )"		1186412	0					
ANR	1186756	Callee	r_crypto_append		1186412	0					
ANR	1186757	Identifier	r_crypto_append		1186412	0					
ANR	1186758	ArgumentList	cry		1186412	1					
ANR	1186759	Argument	cry		1186412	0					
ANR	1186760	Identifier	cry		1186412	0					
ANR	1186761	Argument	obuf		1186412	1					
ANR	1186762	Identifier	obuf		1186412	0					
ANR	1186763	Argument	size		1186412	2					
ANR	1186764	Identifier	size		1186412	0					
ANR	1186765	ExpressionStatement	free ( obuf )	84:1:1967:1978	1186412	24	True				
ANR	1186766	CallExpression	free ( obuf )		1186412	0					
ANR	1186767	Callee	free		1186412	0					
ANR	1186768	Identifier	free		1186412	0					
ANR	1186769	ArgumentList	obuf		1186412	1					
ANR	1186770	Argument	obuf		1186412	0					
ANR	1186771	Identifier	obuf		1186412	0					
ANR	1186772	ExpressionStatement	free ( ibuf )	85:1:1981:1992	1186412	25	True				
ANR	1186773	CallExpression	free ( ibuf )		1186412	0					
ANR	1186774	Callee	free		1186412	0					
ANR	1186775	Identifier	free		1186412	0					
ANR	1186776	ArgumentList	ibuf		1186412	1					
ANR	1186777	Argument	ibuf		1186412	0					
ANR	1186778	Identifier	ibuf		1186412	0					
ANR	1186779	ExpressionStatement	free ( tmp )	86:1:1995:2005	1186412	26	True				
ANR	1186780	CallExpression	free ( tmp )		1186412	0					
ANR	1186781	Callee	free		1186412	0					
ANR	1186782	Identifier	free		1186412	0					
ANR	1186783	ArgumentList	tmp		1186412	1					
ANR	1186784	Argument	tmp		1186412	0					
ANR	1186785	Identifier	tmp		1186412	0					
ANR	1186786	ReturnStatement	return true ;	87:1:2008:2019	1186412	27	True				
ANR	1186787	Identifier	true		1186412	0					
ANR	1186788	ReturnType	static bool		1186412	1					
ANR	1186789	Identifier	update		1186412	2					
ANR	1186790	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		1186412	3					
ANR	1186791	Parameter	RCrypto * cry	29:19:681:692	1186412	0	True				
ANR	1186792	ParameterType	RCrypto *		1186412	0					
ANR	1186793	Identifier	cry		1186412	1					
ANR	1186794	Parameter	const ut8 * buf	29:33:695:708	1186412	1	True				
ANR	1186795	ParameterType	const ut8 *		1186412	0					
ANR	1186796	Identifier	buf		1186412	1					
ANR	1186797	Parameter	int len	29:49:711:717	1186412	2	True				
ANR	1186798	ParameterType	int		1186412	0					
ANR	1186799	Identifier	len		1186412	1					
ANR	1186800	CFGEntryNode	ENTRY		1186412		True				
ANR	1186801	CFGExitNode	EXIT		1186412		True				
ANR	1186802	Symbol	* tmp		1186412						
ANR	1186803	Symbol	BLOCK_SIZE		1186412						
ANR	1186804	Symbol	delta		1186412						
ANR	1186805	Symbol	& st		1186412						
ANR	1186806	Symbol	calloc		1186412						
ANR	1186807	Symbol	cry -> dir		1186412						
ANR	1186808	Symbol	len		1186412						
ANR	1186809	Symbol	tmp		1186412						
ANR	1186810	Symbol	obuf		1186412						
ANR	1186811	Symbol	ibuf		1186412						
ANR	1186812	Symbol	r_read_le32		1186412						
ANR	1186813	Symbol	blocks		1186412						
ANR	1186814	Symbol	false		1186412						
ANR	1186815	Symbol	i		1186412						
ANR	1186816	Symbol	diff		1186412						
ANR	1186817	Symbol	j		1186412						
ANR	1186818	Symbol	cry		1186412						
ANR	1186819	Symbol	* cry		1186412						
ANR	1186820	Symbol	k		1186412						
ANR	1186821	Symbol	buf		1186412						
ANR	1186822	Symbol	size		1186412						
ANR	1186823	Symbol	* j		1186412						
ANR	1186824	Symbol	* k		1186412						
ANR	1186825	Symbol	* obuf		1186412						
ANR	1186826	Symbol	true		1186412						
ANR	1186827	Symbol	* ibuf		1186412						
ANR	1186828	Function	final	90:0:2024:2115							
ANR	1186829	FunctionDef	"final (RCrypto * cry , const ut8 * buf , int len)"		1186828	0					
ANR	1186830	CompoundStatement		90:57:2081:2115	1186828	0					
ANR	1186831	ReturnStatement	"return update ( cry , buf , len ) ;"	91:1:2084:2113	1186828	0	True				
ANR	1186832	CallExpression	"update ( cry , buf , len )"		1186828	0					
ANR	1186833	Callee	update		1186828	0					
ANR	1186834	Identifier	update		1186828	0					
ANR	1186835	ArgumentList	cry		1186828	1					
ANR	1186836	Argument	cry		1186828	0					
ANR	1186837	Identifier	cry		1186828	0					
ANR	1186838	Argument	buf		1186828	1					
ANR	1186839	Identifier	buf		1186828	0					
ANR	1186840	Argument	len		1186828	2					
ANR	1186841	Identifier	len		1186828	0					
ANR	1186842	ReturnType	static bool		1186828	1					
ANR	1186843	Identifier	final		1186828	2					
ANR	1186844	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		1186828	3					
ANR	1186845	Parameter	RCrypto * cry	90:18:2042:2053	1186828	0	True				
ANR	1186846	ParameterType	RCrypto *		1186828	0					
ANR	1186847	Identifier	cry		1186828	1					
ANR	1186848	Parameter	const ut8 * buf	90:32:2056:2069	1186828	1	True				
ANR	1186849	ParameterType	const ut8 *		1186828	0					
ANR	1186850	Identifier	buf		1186828	1					
ANR	1186851	Parameter	int len	90:48:2072:2078	1186828	2	True				
ANR	1186852	ParameterType	int		1186828	0					
ANR	1186853	Identifier	len		1186828	1					
ANR	1186854	CFGEntryNode	ENTRY		1186828		True				
ANR	1186855	CFGExitNode	EXIT		1186828		True				
ANR	1186856	Symbol	buf		1186828						
ANR	1186857	Symbol	len		1186828						
ANR	1186858	Symbol	update		1186828						
ANR	1186859	Symbol	cry		1186828						
ANR	1186860	DeclStmt									
ANR	1186861	Decl							RCryptoPlugin	RCryptoPlugin	r_crypto_plugin_serpent
ANR	1186862	DeclStmt									
ANR	1186863	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
