command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6650593	File	data/converged/CVE-2019-16718~_radare2/zones.c								
ANR	6650594	Function	r_flag_zone_get	10:0:141:350							
ANR	6650595	FunctionDef	"r_flag_zone_get (RFlag * f , const char * name)"		6650594	0					
ANR	6650596	CompoundStatement		10:67:208:350	6650594	0					
ANR	6650597	IdentifierDeclStatement	RListIter * iter ;	11:1:211:226	6650594	0	True				
ANR	6650598	IdentifierDecl	* iter		6650594	0					
ANR	6650599	IdentifierDeclType	RListIter *		6650594	0					
ANR	6650600	Identifier	iter		6650594	1					
ANR	6650601	IdentifierDeclStatement	RFlagZoneItem * zi ;	12:1:229:246	6650594	1	True				
ANR	6650602	IdentifierDecl	* zi		6650594	0					
ANR	6650603	IdentifierDeclType	RFlagZoneItem *		6650594	0					
ANR	6650604	Identifier	zi		6650594	1					
ANR	6650605	Statement	r_list_foreach	13:1:249:262	6650594	2	True				
ANR	6650606	Statement	(	13:16:264:264	6650594	3	True				
ANR	6650607	Statement	DB	13:17:265:266	6650594	4	True				
ANR	6650608	Statement	","	13:19:267:267	6650594	5	True				
ANR	6650609	Statement	iter	13:21:269:272	6650594	6	True				
ANR	6650610	Statement	","	13:25:273:273	6650594	7	True				
ANR	6650611	Statement	zi	13:27:275:276	6650594	8	True				
ANR	6650612	Statement	)	13:29:277:277	6650594	9	True				
ANR	6650613	CompoundStatement		4:31:70:70	6650594	10					
ANR	6650614	IfStatement	"if ( ! strcmp ( name , zi -> name ) )"		6650594	0					
ANR	6650615	Condition	"! strcmp ( name , zi -> name )"	14:6:287:310	6650594	0	True				
ANR	6650616	UnaryOperationExpression	"! strcmp ( name , zi -> name )"		6650594	0					
ANR	6650617	UnaryOperator	!		6650594	0					
ANR	6650618	CallExpression	"strcmp ( name , zi -> name )"		6650594	1					
ANR	6650619	Callee	strcmp		6650594	0					
ANR	6650620	Identifier	strcmp		6650594	0					
ANR	6650621	ArgumentList	name		6650594	1					
ANR	6650622	Argument	name		6650594	0					
ANR	6650623	Identifier	name		6650594	0					
ANR	6650624	Argument	zi -> name		6650594	1					
ANR	6650625	PtrMemberAccess	zi -> name		6650594	0					
ANR	6650626	Identifier	zi		6650594	0					
ANR	6650627	Identifier	name		6650594	1					
ANR	6650628	CompoundStatement		5:32:104:104	6650594	1					
ANR	6650629	ReturnStatement	return zi ;	15:3:318:327	6650594	0	True				
ANR	6650630	Identifier	zi		6650594	0					
ANR	6650631	ReturnStatement	return NULL ;	18:1:337:348	6650594	11	True				
ANR	6650632	Identifier	NULL		6650594	0					
ANR	6650633	ReturnType	static RFlagZoneItem *		6650594	1					
ANR	6650634	Identifier	r_flag_zone_get		6650594	2					
ANR	6650635	ParameterList	"RFlag * f , const char * name"		6650594	3					
ANR	6650636	Parameter	RFlag * f	10:39:180:187	6650594	0	True				
ANR	6650637	ParameterType	RFlag *		6650594	0					
ANR	6650638	Identifier	f		6650594	1					
ANR	6650639	Parameter	const char * name	10:49:190:205	6650594	1	True				
ANR	6650640	ParameterType	const char *		6650594	0					
ANR	6650641	Identifier	name		6650594	1					
ANR	6650642	CFGEntryNode	ENTRY		6650594		True				
ANR	6650643	CFGExitNode	EXIT		6650594		True				
ANR	6650644	Symbol	strcmp		6650594						
ANR	6650645	Symbol	NULL		6650594						
ANR	6650646	Symbol	f		6650594						
ANR	6650647	Symbol	* zi		6650594						
ANR	6650648	Symbol	name		6650594						
ANR	6650649	Symbol	iter		6650594						
ANR	6650650	Symbol	zi -> name		6650594						
ANR	6650651	Symbol	zi		6650594						
ANR	6650652	Function	r_flag_zone_get_inrange	22:0:360:585							
ANR	6650653	FunctionDef	"r_flag_zone_get_inrange (RFlag * f , ut64 from , ut64 to)"		6650652	0					
ANR	6650654	CompoundStatement		22:77:437:585	6650652	0					
ANR	6650655	IdentifierDeclStatement	RListIter * iter ;	23:1:440:455	6650652	0	True				
ANR	6650656	IdentifierDecl	* iter		6650652	0					
ANR	6650657	IdentifierDeclType	RListIter *		6650652	0					
ANR	6650658	Identifier	iter		6650652	1					
ANR	6650659	IdentifierDeclStatement	RFlagZoneItem * zi ;	24:1:458:475	6650652	1	True				
ANR	6650660	IdentifierDecl	* zi		6650652	0					
ANR	6650661	IdentifierDeclType	RFlagZoneItem *		6650652	0					
ANR	6650662	Identifier	zi		6650652	1					
ANR	6650663	Statement	r_list_foreach	25:1:478:491	6650652	2	True				
ANR	6650664	Statement	(	25:16:493:493	6650652	3	True				
ANR	6650665	Statement	DB	25:17:494:495	6650652	4	True				
ANR	6650666	Statement	","	25:19:496:496	6650652	5	True				
ANR	6650667	Statement	iter	25:21:498:501	6650652	6	True				
ANR	6650668	Statement	","	25:25:502:502	6650652	7	True				
ANR	6650669	Statement	zi	25:27:504:505	6650652	8	True				
ANR	6650670	Statement	)	25:29:506:506	6650652	9	True				
ANR	6650671	CompoundStatement		4:31:70:70	6650652	10					
ANR	6650672	IfStatement	"if ( R_BETWEEN ( from , zi -> from , to ) )"		6650652	0					
ANR	6650673	Condition	"R_BETWEEN ( from , zi -> from , to )"	26:6:516:545	6650652	0	True				
ANR	6650674	CallExpression	"R_BETWEEN ( from , zi -> from , to )"		6650652	0					
ANR	6650675	Callee	R_BETWEEN		6650652	0					
ANR	6650676	Identifier	R_BETWEEN		6650652	0					
ANR	6650677	ArgumentList	from		6650652	1					
ANR	6650678	Argument	from		6650652	0					
ANR	6650679	Identifier	from		6650652	0					
ANR	6650680	Argument	zi -> from		6650652	1					
ANR	6650681	PtrMemberAccess	zi -> from		6650652	0					
ANR	6650682	Identifier	zi		6650652	0					
ANR	6650683	Identifier	from		6650652	1					
ANR	6650684	Argument	to		6650652	2					
ANR	6650685	Identifier	to		6650652	0					
ANR	6650686	CompoundStatement		5:38:110:110	6650652	1					
ANR	6650687	ReturnStatement	return zi ;	27:3:553:562	6650652	0	True				
ANR	6650688	Identifier	zi		6650652	0					
ANR	6650689	ReturnStatement	return NULL ;	30:1:572:583	6650652	11	True				
ANR	6650690	Identifier	NULL		6650652	0					
ANR	6650691	ReturnType	static RFlagZoneItem *		6650652	1					
ANR	6650692	Identifier	r_flag_zone_get_inrange		6650652	2					
ANR	6650693	ParameterList	"RFlag * f , ut64 from , ut64 to"		6650652	3					
ANR	6650694	Parameter	RFlag * f	22:47:407:414	6650652	0	True				
ANR	6650695	ParameterType	RFlag *		6650652	0					
ANR	6650696	Identifier	f		6650652	1					
ANR	6650697	Parameter	ut64 from	22:57:417:425	6650652	1	True				
ANR	6650698	ParameterType	ut64		6650652	0					
ANR	6650699	Identifier	from		6650652	1					
ANR	6650700	Parameter	ut64 to	22:68:428:434	6650652	2	True				
ANR	6650701	ParameterType	ut64		6650652	0					
ANR	6650702	Identifier	to		6650652	1					
ANR	6650703	CFGEntryNode	ENTRY		6650652		True				
ANR	6650704	CFGExitNode	EXIT		6650652		True				
ANR	6650705	Symbol	NULL		6650652						
ANR	6650706	Symbol	f		6650652						
ANR	6650707	Symbol	* zi		6650652						
ANR	6650708	Symbol	R_BETWEEN		6650652						
ANR	6650709	Symbol	zi -> from		6650652						
ANR	6650710	Symbol	iter		6650652						
ANR	6650711	Symbol	from		6650652						
ANR	6650712	Symbol	to		6650652						
ANR	6650713	Symbol	zi		6650652						
ANR	6650714	Function	r_flag_zone_add	33:0:588:1540							
ANR	6650715	FunctionDef	"r_flag_zone_add (RFlag * f , const char * name , ut64 addr)"		6650714	0					
ANR	6650716	CompoundStatement		33:66:654:1540	6650714	0					
ANR	6650717	ExpressionStatement	"r_return_val_if_fail ( f && name && * name , false )"	34:1:657:705	6650714	0	True				
ANR	6650718	CallExpression	"r_return_val_if_fail ( f && name && * name , false )"		6650714	0					
ANR	6650719	Callee	r_return_val_if_fail		6650714	0					
ANR	6650720	Identifier	r_return_val_if_fail		6650714	0					
ANR	6650721	ArgumentList	f && name && * name		6650714	1					
ANR	6650722	Argument	f && name && * name		6650714	0					
ANR	6650723	AndExpression	f && name && * name		6650714	0		&&			
ANR	6650724	Identifier	f		6650714	0					
ANR	6650725	AndExpression	name && * name		6650714	1		&&			
ANR	6650726	Identifier	name		6650714	0					
ANR	6650727	UnaryOperationExpression	* name		6650714	1					
ANR	6650728	UnaryOperator	*		6650714	0					
ANR	6650729	Identifier	name		6650714	1					
ANR	6650730	Argument	false		6650714	1					
ANR	6650731	Identifier	false		6650714	0					
ANR	6650732	IdentifierDeclStatement	"RFlagZoneItem zi = { 0 , 0 , ( const char * ) name } ;"	36:1:732:779	6650714	1	True				
ANR	6650733	IdentifierDecl	"zi = { 0 , 0 , ( const char * ) name }"		6650714	0					
ANR	6650734	IdentifierDeclType	RFlagZoneItem		6650714	0					
ANR	6650735	Identifier	zi		6650714	1					
ANR	6650736	AssignmentExpression	"zi = { 0 , 0 , ( const char * ) name }"		6650714	2		=			
ANR	6650737	Identifier	zi		6650714	0					
ANR	6650738	InitializerList	0		6650714	1					
ANR	6650739	PrimaryExpression	0		6650714	0					
ANR	6650740	PrimaryExpression	0		6650714	1					
ANR	6650741	CastExpression	( const char * ) name		6650714	2					
ANR	6650742	CastTarget	const char *		6650714	0					
ANR	6650743	Identifier	name		6650714	1					
ANR	6650744	IfStatement	if ( ! DB )		6650714	2					
ANR	6650745	Condition	! DB	37:5:786:788	6650714	0	True				
ANR	6650746	UnaryOperationExpression	! DB		6650714	0					
ANR	6650747	UnaryOperator	!		6650714	0					
ANR	6650748	Identifier	DB		6650714	1					
ANR	6650749	CompoundStatement		5:10:136:136	6650714	1					
ANR	6650750	ReturnStatement	return false ;	38:2:795:807	6650714	0	True				
ANR	6650751	Identifier	false		6650714	0					
ANR	6650752	IdentifierDeclStatement	"const char * bound = sdb_const_get ( DB , name , NULL ) ;"	40:1:813:863	6650714	3	True				
ANR	6650753	IdentifierDecl	"* bound = sdb_const_get ( DB , name , NULL )"		6650714	0					
ANR	6650754	IdentifierDeclType	const char *		6650714	0					
ANR	6650755	Identifier	bound		6650714	1					
ANR	6650756	AssignmentExpression	"* bound = sdb_const_get ( DB , name , NULL )"		6650714	2		=			
ANR	6650757	Identifier	bound		6650714	0					
ANR	6650758	CallExpression	"sdb_const_get ( DB , name , NULL )"		6650714	1					
ANR	6650759	Callee	sdb_const_get		6650714	0					
ANR	6650760	Identifier	sdb_const_get		6650714	0					
ANR	6650761	ArgumentList	DB		6650714	1					
ANR	6650762	Argument	DB		6650714	0					
ANR	6650763	Identifier	DB		6650714	0					
ANR	6650764	Argument	name		6650714	1					
ANR	6650765	Identifier	name		6650714	0					
ANR	6650766	Argument	NULL		6650714	2					
ANR	6650767	Identifier	NULL		6650714	0					
ANR	6650768	IfStatement	if ( bound )		6650714	4					
ANR	6650769	Condition	bound	41:5:870:874	6650714	0	True				
ANR	6650770	Identifier	bound		6650714	0					
ANR	6650771	CompoundStatement		17:2:352:395	6650714	1					
ANR	6650772	ExpressionStatement	"sdb_fmt_tobin ( bound , ""qq"" , & zi )"	42:2:881:913	6650714	0	True				
ANR	6650773	CallExpression	"sdb_fmt_tobin ( bound , ""qq"" , & zi )"		6650714	0					
ANR	6650774	Callee	sdb_fmt_tobin		6650714	0					
ANR	6650775	Identifier	sdb_fmt_tobin		6650714	0					
ANR	6650776	ArgumentList	bound		6650714	1					
ANR	6650777	Argument	bound		6650714	0					
ANR	6650778	Identifier	bound		6650714	0					
ANR	6650779	Argument	"""qq"""		6650714	1					
ANR	6650780	PrimaryExpression	"""qq"""		6650714	0					
ANR	6650781	Argument	& zi		6650714	2					
ANR	6650782	UnaryOperationExpression	& zi		6650714	0					
ANR	6650783	UnaryOperator	&		6650714	0					
ANR	6650784	Identifier	zi		6650714	1					
ANR	6650785	IfStatement	if ( addr < zi . from )		6650714	1					
ANR	6650786	Condition	addr < zi . from	43:6:921:934	6650714	0	True				
ANR	6650787	RelationalExpression	addr < zi . from		6650714	0		<			
ANR	6650788	Identifier	addr		6650714	0					
ANR	6650789	MemberAccess	zi . from		6650714	1					
ANR	6650790	Identifier	zi		6650714	0					
ANR	6650791	Identifier	from		6650714	1					
ANR	6650792	CompoundStatement		11:22:282:282	6650714	1					
ANR	6650793	ExpressionStatement	zi . from = addr	44:3:942:956	6650714	0	True				
ANR	6650794	AssignmentExpression	zi . from = addr		6650714	0		=			
ANR	6650795	MemberAccess	zi . from		6650714	0					
ANR	6650796	Identifier	zi		6650714	0					
ANR	6650797	Identifier	from		6650714	1					
ANR	6650798	Identifier	addr		6650714	1					
ANR	6650799	IfStatement	if ( addr > zi . to )		6650714	2					
ANR	6650800	Condition	addr > zi . to	46:6:968:979	6650714	0	True				
ANR	6650801	RelationalExpression	addr > zi . to		6650714	0		>			
ANR	6650802	Identifier	addr		6650714	0					
ANR	6650803	MemberAccess	zi . to		6650714	1					
ANR	6650804	Identifier	zi		6650714	0					
ANR	6650805	Identifier	to		6650714	1					
ANR	6650806	CompoundStatement		14:20:327:327	6650714	1					
ANR	6650807	ExpressionStatement	zi . to = addr	47:3:987:999	6650714	0	True				
ANR	6650808	AssignmentExpression	zi . to = addr		6650714	0		=			
ANR	6650809	MemberAccess	zi . to		6650714	0					
ANR	6650810	Identifier	zi		6650714	0					
ANR	6650811	Identifier	to		6650714	1					
ANR	6650812	Identifier	addr		6650714	1					
ANR	6650813	IdentifierDeclStatement	"char * newBounds = sdb_fmt_tostr ( & zi , ""qq"" ) ;"	49:2:1007:1050	6650714	3	True				
ANR	6650814	IdentifierDecl	"* newBounds = sdb_fmt_tostr ( & zi , ""qq"" )"		6650714	0					
ANR	6650815	IdentifierDeclType	char *		6650714	0					
ANR	6650816	Identifier	newBounds		6650714	1					
ANR	6650817	AssignmentExpression	"* newBounds = sdb_fmt_tostr ( & zi , ""qq"" )"		6650714	2		=			
ANR	6650818	Identifier	newBounds		6650714	0					
ANR	6650819	CallExpression	"sdb_fmt_tostr ( & zi , ""qq"" )"		6650714	1					
ANR	6650820	Callee	sdb_fmt_tostr		6650714	0					
ANR	6650821	Identifier	sdb_fmt_tostr		6650714	0					
ANR	6650822	ArgumentList	& zi		6650714	1					
ANR	6650823	Argument	& zi		6650714	0					
ANR	6650824	UnaryOperationExpression	& zi		6650714	0					
ANR	6650825	UnaryOperator	&		6650714	0					
ANR	6650826	Identifier	zi		6650714	1					
ANR	6650827	Argument	"""qq"""		6650714	1					
ANR	6650828	PrimaryExpression	"""qq"""		6650714	0					
ANR	6650829	ExpressionStatement	"sdb_set ( DB , name , newBounds , 0 )"	50:2:1054:1086	6650714	4	True				
ANR	6650830	CallExpression	"sdb_set ( DB , name , newBounds , 0 )"		6650714	0					
ANR	6650831	Callee	sdb_set		6650714	0					
ANR	6650832	Identifier	sdb_set		6650714	0					
ANR	6650833	ArgumentList	DB		6650714	1					
ANR	6650834	Argument	DB		6650714	0					
ANR	6650835	Identifier	DB		6650714	0					
ANR	6650836	Argument	name		6650714	1					
ANR	6650837	Identifier	name		6650714	0					
ANR	6650838	Argument	newBounds		6650714	2					
ANR	6650839	Identifier	newBounds		6650714	0					
ANR	6650840	Argument	0		6650714	3					
ANR	6650841	PrimaryExpression	0		6650714	0					
ANR	6650842	ExpressionStatement	free ( newBounds )	51:2:1090:1106	6650714	5	True				
ANR	6650843	CallExpression	free ( newBounds )		6650714	0					
ANR	6650844	Callee	free		6650714	0					
ANR	6650845	Identifier	free		6650714	0					
ANR	6650846	ArgumentList	newBounds		6650714	1					
ANR	6650847	Argument	newBounds		6650714	0					
ANR	6650848	Identifier	newBounds		6650714	0					
ANR	6650849	ElseStatement	else		6650714	0					
ANR	6650850	CompoundStatement		20:8:461:461	6650714	0					
ANR	6650851	Statement	sdb_set	53:2:1120:1126	6650714	0	True				
ANR	6650852	Statement	(	53:10:1128:1128	6650714	1	True				
ANR	6650853	Statement	DB	53:11:1129:1130	6650714	2	True				
ANR	6650854	Statement	","	53:13:1131:1131	6650714	3	True				
ANR	6650855	Statement	name	53:15:1133:1136	6650714	4	True				
ANR	6650856	Statement	","	53:19:1137:1137	6650714	5	True				
ANR	6650857	Statement	sdb_fmt	53:21:1139:1145	6650714	6	True				
ANR	6650858	Statement	(	53:29:1147:1147	6650714	7	True				
ANR	6650859	Statement	"""%"""	53:30:1148:1150	6650714	8	True				
ANR	6650860	Statement	PFMT64d	53:33:1151:1157	6650714	9	True				
ANR	6650861	Statement	""",%"""	53:40:1158:1161	6650714	10	True				
ANR	6650862	Statement	PFMT64d	53:44:1162:1168	6650714	11	True				
ANR	6650863	Statement	","	53:51:1169:1169	6650714	12	True				
ANR	6650864	Statement	addr	53:53:1171:1174	6650714	13	True				
ANR	6650865	Statement	","	53:57:1175:1175	6650714	14	True				
ANR	6650866	Statement	addr	53:59:1177:1180	6650714	15	True				
ANR	6650867	Statement	)	53:63:1181:1181	6650714	16	True				
ANR	6650868	Statement	","	53:64:1182:1182	6650714	17	True				
ANR	6650869	Statement	0	53:66:1184:1184	6650714	18	True				
ANR	6650870	Statement	)	53:67:1185:1185	6650714	19	True				
ANR	6650871	ExpressionStatement		53:68:1186:1186	6650714	20	True				
ANR	6650872	ReturnStatement	return true ;	74:1:1527:1538	6650714	5	True				
ANR	6650873	Identifier	true		6650714	0					
ANR	6650874	ReturnType	R_API bool		6650714	1					
ANR	6650875	Identifier	r_flag_zone_add		6650714	2					
ANR	6650876	ParameterList	"RFlag * f , const char * name , ut64 addr"		6650714	3					
ANR	6650877	Parameter	RFlag * f	33:27:615:622	6650714	0	True				
ANR	6650878	ParameterType	RFlag *		6650714	0					
ANR	6650879	Identifier	f		6650714	1					
ANR	6650880	Parameter	const char * name	33:37:625:640	6650714	1	True				
ANR	6650881	ParameterType	const char *		6650714	0					
ANR	6650882	Identifier	name		6650714	1					
ANR	6650883	Parameter	ut64 addr	33:55:643:651	6650714	2	True				
ANR	6650884	ParameterType	ut64		6650714	0					
ANR	6650885	Identifier	addr		6650714	1					
ANR	6650886	CFGEntryNode	ENTRY		6650714		True				
ANR	6650887	CFGExitNode	EXIT		6650714		True				
ANR	6650888	Symbol	* name		6650714						
ANR	6650889	Symbol	NULL		6650714						
ANR	6650890	Symbol	zi . to		6650714						
ANR	6650891	Symbol	newBounds		6650714						
ANR	6650892	Symbol	f		6650714						
ANR	6650893	Symbol	bound		6650714						
ANR	6650894	Symbol	false		6650714						
ANR	6650895	Symbol	sdb_const_get		6650714						
ANR	6650896	Symbol	sdb_fmt_tostr		6650714						
ANR	6650897	Symbol	zi		6650714						
ANR	6650898	Symbol	name		6650714						
ANR	6650899	Symbol	& zi		6650714						
ANR	6650900	Symbol	true		6650714						
ANR	6650901	Symbol	addr		6650714						
ANR	6650902	Symbol	zi . from		6650714						
ANR	6650903	Symbol	DB		6650714						
ANR	6650904	Function	r_flag_zone_reset	77:0:1543:1733							
ANR	6650905	FunctionDef	r_flag_zone_reset (RFlag * f)		6650904	0					
ANR	6650906	CompoundStatement		77:39:1582:1733	6650904	0					
ANR	6650907	ReturnStatement	return sdb_reset ( DB ) ;	79:1:1609:1630	6650904	0	True				
ANR	6650908	CallExpression	sdb_reset ( DB )		6650904	0					
ANR	6650909	Callee	sdb_reset		6650904	0					
ANR	6650910	Identifier	sdb_reset		6650904	0					
ANR	6650911	ArgumentList	DB		6650904	1					
ANR	6650912	Argument	DB		6650904	0					
ANR	6650913	Identifier	DB		6650904	0					
ANR	6650914	ReturnType	R_API bool		6650904	1					
ANR	6650915	Identifier	r_flag_zone_reset		6650904	2					
ANR	6650916	ParameterList	RFlag * f		6650904	3					
ANR	6650917	Parameter	RFlag * f	77:29:1572:1579	6650904	0	True				
ANR	6650918	ParameterType	RFlag *		6650904	0					
ANR	6650919	Identifier	f		6650904	1					
ANR	6650920	CFGEntryNode	ENTRY		6650904		True				
ANR	6650921	CFGExitNode	EXIT		6650904		True				
ANR	6650922	Symbol	f		6650904						
ANR	6650923	Symbol	sdb_reset		6650904						
ANR	6650924	Symbol	DB		6650904						
ANR	6650925	Function	r_flag_zone_del	87:0:1736:2035							
ANR	6650926	FunctionDef	"r_flag_zone_del (RFlag * f , const char * name)"		6650925	0					
ANR	6650927	CompoundStatement		87:55:1791:2035	6650925	0					
ANR	6650928	ReturnStatement	"return sdb_unset ( DB , name , 0 ) ;"	89:1:1818:1848	6650925	0	True				
ANR	6650929	CallExpression	"sdb_unset ( DB , name , 0 )"		6650925	0					
ANR	6650930	Callee	sdb_unset		6650925	0					
ANR	6650931	Identifier	sdb_unset		6650925	0					
ANR	6650932	ArgumentList	DB		6650925	1					
ANR	6650933	Argument	DB		6650925	0					
ANR	6650934	Identifier	DB		6650925	0					
ANR	6650935	Argument	name		6650925	1					
ANR	6650936	Identifier	name		6650925	0					
ANR	6650937	Argument	0		6650925	2					
ANR	6650938	PrimaryExpression	0		6650925	0					
ANR	6650939	ReturnType	R_API bool		6650925	1					
ANR	6650940	Identifier	r_flag_zone_del		6650925	2					
ANR	6650941	ParameterList	"RFlag * f , const char * name"		6650925	3					
ANR	6650942	Parameter	RFlag * f	87:27:1763:1770	6650925	0	True				
ANR	6650943	ParameterType	RFlag *		6650925	0					
ANR	6650944	Identifier	f		6650925	1					
ANR	6650945	Parameter	const char * name	87:37:1773:1788	6650925	1	True				
ANR	6650946	ParameterType	const char *		6650925	0					
ANR	6650947	Identifier	name		6650925	1					
ANR	6650948	CFGEntryNode	ENTRY		6650925		True				
ANR	6650949	CFGExitNode	EXIT		6650925		True				
ANR	6650950	Symbol	f		6650925						
ANR	6650951	Symbol	name		6650925						
ANR	6650952	Symbol	sdb_unset		6650925						
ANR	6650953	Symbol	DB		6650925						
ANR	6650954	ClassDef	r_flag_zone_context_t	105:8:2071:2228							
ANR	6650955	DeclStmt									
ANR	6650956	Decl							RFlag	RFlag *	f
ANR	6650957	DeclStmt									
ANR	6650958	Decl							ut64	ut64	addr
ANR	6650959	DeclStmt									
ANR	6650960	Decl							ut64	ut64	l
ANR	6650961	Decl							ut64	ut64	h
ANR	6650962	DeclStmt									
ANR	6650963	Decl							const char	const char * *	prev
ANR	6650964	DeclStmt									
ANR	6650965	Decl							const char	const char * *	next
ANR	6650966	DeclStmt									
ANR	6650967	Decl							r_flag_zone_context_t	r_flag_zone_context_t	RFlagZoneContext
ANR	6650968	Function	cb	113:0:2231:3166							
ANR	6650969	FunctionDef	"cb (void * user , const char * name , const char * from_to)"		6650968	0					
ANR	6650970	CompoundStatement		113:65:2296:3166	6650968	0					
ANR	6650971	IdentifierDeclStatement	RFlagZoneContext * zc = ( RFlagZoneContext * ) user ;	114:1:2299:2345	6650968	0	True				
ANR	6650972	IdentifierDecl	* zc = ( RFlagZoneContext * ) user		6650968	0					
ANR	6650973	IdentifierDeclType	RFlagZoneContext *		6650968	0					
ANR	6650974	Identifier	zc		6650968	1					
ANR	6650975	AssignmentExpression	* zc = ( RFlagZoneContext * ) user		6650968	2		=			
ANR	6650976	Identifier	zc		6650968	0					
ANR	6650977	CastExpression	( RFlagZoneContext * ) user		6650968	1					
ANR	6650978	CastTarget	RFlagZoneContext *		6650968	0					
ANR	6650979	Identifier	user		6650968	1					
ANR	6650980	IdentifierDeclStatement	"RFlagZoneItem zi = { 0 , 0 , name } ;"	115:1:2348:2381	6650968	1	True				
ANR	6650981	IdentifierDecl	"zi = { 0 , 0 , name }"		6650968	0					
ANR	6650982	IdentifierDeclType	RFlagZoneItem		6650968	0					
ANR	6650983	Identifier	zi		6650968	1					
ANR	6650984	AssignmentExpression	"zi = { 0 , 0 , name }"		6650968	2		=			
ANR	6650985	Identifier	zi		6650968	0					
ANR	6650986	InitializerList	0		6650968	1					
ANR	6650987	PrimaryExpression	0		6650968	0					
ANR	6650988	PrimaryExpression	0		6650968	1					
ANR	6650989	Identifier	name		6650968	2					
ANR	6650990	ExpressionStatement	"sdb_fmt_tobin ( from_to , ""qq"" , & zi )"	116:1:2384:2418	6650968	2	True				
ANR	6650991	CallExpression	"sdb_fmt_tobin ( from_to , ""qq"" , & zi )"		6650968	0					
ANR	6650992	Callee	sdb_fmt_tobin		6650968	0					
ANR	6650993	Identifier	sdb_fmt_tobin		6650968	0					
ANR	6650994	ArgumentList	from_to		6650968	1					
ANR	6650995	Argument	from_to		6650968	0					
ANR	6650996	Identifier	from_to		6650968	0					
ANR	6650997	Argument	"""qq"""		6650968	1					
ANR	6650998	PrimaryExpression	"""qq"""		6650968	0					
ANR	6650999	Argument	& zi		6650968	2					
ANR	6651000	UnaryOperationExpression	& zi		6650968	0					
ANR	6651001	UnaryOperator	&		6650968	0					
ANR	6651002	Identifier	zi		6650968	1					
ANR	6651003	IfStatement	if ( zi . from > zc -> addr )		6650968	3					
ANR	6651004	Condition	zi . from > zc -> addr	117:5:2425:2442	6650968	0	True				
ANR	6651005	RelationalExpression	zi . from > zc -> addr		6650968	0		>			
ANR	6651006	MemberAccess	zi . from		6650968	0					
ANR	6651007	Identifier	zi		6650968	0					
ANR	6651008	Identifier	from		6650968	1					
ANR	6651009	PtrMemberAccess	zc -> addr		6650968	1					
ANR	6651010	Identifier	zc		6650968	0					
ANR	6651011	Identifier	addr		6650968	1					
ANR	6651012	CompoundStatement		5:25:148:148	6650968	1					
ANR	6651013	IfStatement	if ( zc -> h == UT64_MAX )		6650968	0					
ANR	6651014	Condition	zc -> h == UT64_MAX	118:6:2453:2469	6650968	0	True				
ANR	6651015	EqualityExpression	zc -> h == UT64_MAX		6650968	0		==			
ANR	6651016	PtrMemberAccess	zc -> h		6650968	0					
ANR	6651017	Identifier	zc		6650968	0					
ANR	6651018	Identifier	h		6650968	1					
ANR	6651019	Identifier	UT64_MAX		6650968	1					
ANR	6651020	CompoundStatement		6:25:175:175	6650968	1					
ANR	6651021	ExpressionStatement	zc -> h = zi . from	119:3:2477:2492	6650968	0	True				
ANR	6651022	AssignmentExpression	zc -> h = zi . from		6650968	0		=			
ANR	6651023	PtrMemberAccess	zc -> h		6650968	0					
ANR	6651024	Identifier	zc		6650968	0					
ANR	6651025	Identifier	h		6650968	1					
ANR	6651026	MemberAccess	zi . from		6650968	1					
ANR	6651027	Identifier	zi		6650968	0					
ANR	6651028	Identifier	from		6650968	1					
ANR	6651029	ExpressionStatement	* zc -> next = name	120:3:2497:2513	6650968	1	True				
ANR	6651030	AssignmentExpression	* zc -> next = name		6650968	0		=			
ANR	6651031	UnaryOperationExpression	* zc -> next		6650968	0					
ANR	6651032	UnaryOperator	*		6650968	0					
ANR	6651033	PtrMemberAccess	zc -> next		6650968	1					
ANR	6651034	Identifier	zc		6650968	0					
ANR	6651035	Identifier	next		6650968	1					
ANR	6651036	Identifier	name		6650968	1					
ANR	6651037	ElseStatement	else		6650968	0					
ANR	6651038	CompoundStatement		9:9:227:227	6650968	0					
ANR	6651039	IfStatement	if ( zi . from < zc -> h )		6650968	0					
ANR	6651040	Condition	zi . from < zc -> h	122:7:2533:2547	6650968	0	True				
ANR	6651041	RelationalExpression	zi . from < zc -> h		6650968	0		<			
ANR	6651042	MemberAccess	zi . from		6650968	0					
ANR	6651043	Identifier	zi		6650968	0					
ANR	6651044	Identifier	from		6650968	1					
ANR	6651045	PtrMemberAccess	zc -> h		6650968	1					
ANR	6651046	Identifier	zc		6650968	0					
ANR	6651047	Identifier	h		6650968	1					
ANR	6651048	CompoundStatement		10:24:253:253	6650968	1					
ANR	6651049	ExpressionStatement	zc -> h = zi . from	123:4:2556:2571	6650968	0	True				
ANR	6651050	AssignmentExpression	zc -> h = zi . from		6650968	0		=			
ANR	6651051	PtrMemberAccess	zc -> h		6650968	0					
ANR	6651052	Identifier	zc		6650968	0					
ANR	6651053	Identifier	h		6650968	1					
ANR	6651054	MemberAccess	zi . from		6650968	1					
ANR	6651055	Identifier	zi		6650968	0					
ANR	6651056	Identifier	from		6650968	1					
ANR	6651057	ExpressionStatement	* zc -> next = name	124:4:2577:2593	6650968	1	True				
ANR	6651058	AssignmentExpression	* zc -> next = name		6650968	0		=			
ANR	6651059	UnaryOperationExpression	* zc -> next		6650968	0					
ANR	6651060	UnaryOperator	*		6650968	0					
ANR	6651061	PtrMemberAccess	zc -> next		6650968	1					
ANR	6651062	Identifier	zc		6650968	0					
ANR	6651063	Identifier	next		6650968	1					
ANR	6651064	Identifier	name		6650968	1					
ANR	6651065	IfStatement	if ( zi . from < zc -> addr )		6650968	4					
ANR	6651066	Condition	zi . from < zc -> addr	128:5:2612:2629	6650968	0	True				
ANR	6651067	RelationalExpression	zi . from < zc -> addr		6650968	0		<			
ANR	6651068	MemberAccess	zi . from		6650968	0					
ANR	6651069	Identifier	zi		6650968	0					
ANR	6651070	Identifier	from		6650968	1					
ANR	6651071	PtrMemberAccess	zc -> addr		6650968	1					
ANR	6651072	Identifier	zc		6650968	0					
ANR	6651073	Identifier	addr		6650968	1					
ANR	6651074	CompoundStatement		16:25:335:335	6650968	1					
ANR	6651075	IfStatement	if ( zc -> l == UT64_MAX )		6650968	0					
ANR	6651076	Condition	zc -> l == UT64_MAX	129:6:2640:2656	6650968	0	True				
ANR	6651077	EqualityExpression	zc -> l == UT64_MAX		6650968	0		==			
ANR	6651078	PtrMemberAccess	zc -> l		6650968	0					
ANR	6651079	Identifier	zc		6650968	0					
ANR	6651080	Identifier	l		6650968	1					
ANR	6651081	Identifier	UT64_MAX		6650968	1					
ANR	6651082	CompoundStatement		17:25:362:362	6650968	1					
ANR	6651083	ExpressionStatement	zc -> l = zi . from	130:3:2664:2679	6650968	0	True				
ANR	6651084	AssignmentExpression	zc -> l = zi . from		6650968	0		=			
ANR	6651085	PtrMemberAccess	zc -> l		6650968	0					
ANR	6651086	Identifier	zc		6650968	0					
ANR	6651087	Identifier	l		6650968	1					
ANR	6651088	MemberAccess	zi . from		6650968	1					
ANR	6651089	Identifier	zi		6650968	0					
ANR	6651090	Identifier	from		6650968	1					
ANR	6651091	ExpressionStatement	* zc -> prev = name	131:3:2684:2700	6650968	1	True				
ANR	6651092	AssignmentExpression	* zc -> prev = name		6650968	0		=			
ANR	6651093	UnaryOperationExpression	* zc -> prev		6650968	0					
ANR	6651094	UnaryOperator	*		6650968	0					
ANR	6651095	PtrMemberAccess	zc -> prev		6650968	1					
ANR	6651096	Identifier	zc		6650968	0					
ANR	6651097	Identifier	prev		6650968	1					
ANR	6651098	Identifier	name		6650968	1					
ANR	6651099	ElseStatement	else		6650968	0					
ANR	6651100	CompoundStatement		20:9:414:414	6650968	0					
ANR	6651101	IfStatement	if ( zi . from >= zc -> l )		6650968	0					
ANR	6651102	Condition	zi . from >= zc -> l	133:7:2720:2735	6650968	0	True				
ANR	6651103	RelationalExpression	zi . from >= zc -> l		6650968	0		>=			
ANR	6651104	MemberAccess	zi . from		6650968	0					
ANR	6651105	Identifier	zi		6650968	0					
ANR	6651106	Identifier	from		6650968	1					
ANR	6651107	PtrMemberAccess	zc -> l		6650968	1					
ANR	6651108	Identifier	zc		6650968	0					
ANR	6651109	Identifier	l		6650968	1					
ANR	6651110	CompoundStatement		21:25:441:441	6650968	1					
ANR	6651111	ExpressionStatement	zc -> l = zi . from	134:4:2744:2759	6650968	0	True				
ANR	6651112	AssignmentExpression	zc -> l = zi . from		6650968	0		=			
ANR	6651113	PtrMemberAccess	zc -> l		6650968	0					
ANR	6651114	Identifier	zc		6650968	0					
ANR	6651115	Identifier	l		6650968	1					
ANR	6651116	MemberAccess	zi . from		6650968	1					
ANR	6651117	Identifier	zi		6650968	0					
ANR	6651118	Identifier	from		6650968	1					
ANR	6651119	ExpressionStatement	* zc -> prev = name	135:4:2765:2781	6650968	1	True				
ANR	6651120	AssignmentExpression	* zc -> prev = name		6650968	0		=			
ANR	6651121	UnaryOperationExpression	* zc -> prev		6650968	0					
ANR	6651122	UnaryOperator	*		6650968	0					
ANR	6651123	PtrMemberAccess	zc -> prev		6650968	1					
ANR	6651124	Identifier	zc		6650968	0					
ANR	6651125	Identifier	prev		6650968	1					
ANR	6651126	Identifier	name		6650968	1					
ANR	6651127	IfStatement	if ( zi . to <= zc -> addr )		6650968	5					
ANR	6651128	Condition	zi . to <= zc -> addr	139:5:2800:2816	6650968	0	True				
ANR	6651129	RelationalExpression	zi . to <= zc -> addr		6650968	0		<=			
ANR	6651130	MemberAccess	zi . to		6650968	0					
ANR	6651131	Identifier	zi		6650968	0					
ANR	6651132	Identifier	to		6650968	1					
ANR	6651133	PtrMemberAccess	zc -> addr		6650968	1					
ANR	6651134	Identifier	zc		6650968	0					
ANR	6651135	Identifier	addr		6650968	1					
ANR	6651136	CompoundStatement		27:24:522:522	6650968	1					
ANR	6651137	IfStatement	if ( zc -> l == UT64_MAX )		6650968	0					
ANR	6651138	Condition	zc -> l == UT64_MAX	140:6:2827:2843	6650968	0	True				
ANR	6651139	EqualityExpression	zc -> l == UT64_MAX		6650968	0		==			
ANR	6651140	PtrMemberAccess	zc -> l		6650968	0					
ANR	6651141	Identifier	zc		6650968	0					
ANR	6651142	Identifier	l		6650968	1					
ANR	6651143	Identifier	UT64_MAX		6650968	1					
ANR	6651144	CompoundStatement		28:25:549:549	6650968	1					
ANR	6651145	ExpressionStatement	zc -> l = zi . to	141:3:2851:2864	6650968	0	True				
ANR	6651146	AssignmentExpression	zc -> l = zi . to		6650968	0		=			
ANR	6651147	PtrMemberAccess	zc -> l		6650968	0					
ANR	6651148	Identifier	zc		6650968	0					
ANR	6651149	Identifier	l		6650968	1					
ANR	6651150	MemberAccess	zi . to		6650968	1					
ANR	6651151	Identifier	zi		6650968	0					
ANR	6651152	Identifier	to		6650968	1					
ANR	6651153	ExpressionStatement	* zc -> prev = name	142:3:2869:2885	6650968	1	True				
ANR	6651154	AssignmentExpression	* zc -> prev = name		6650968	0		=			
ANR	6651155	UnaryOperationExpression	* zc -> prev		6650968	0					
ANR	6651156	UnaryOperator	*		6650968	0					
ANR	6651157	PtrMemberAccess	zc -> prev		6650968	1					
ANR	6651158	Identifier	zc		6650968	0					
ANR	6651159	Identifier	prev		6650968	1					
ANR	6651160	Identifier	name		6650968	1					
ANR	6651161	ElseStatement	else		6650968	0					
ANR	6651162	CompoundStatement		31:9:599:599	6650968	0					
ANR	6651163	IfStatement	if ( zi . to >= zc -> l )		6650968	0					
ANR	6651164	Condition	zi . to >= zc -> l	144:7:2905:2918	6650968	0	True				
ANR	6651165	RelationalExpression	zi . to >= zc -> l		6650968	0		>=			
ANR	6651166	MemberAccess	zi . to		6650968	0					
ANR	6651167	Identifier	zi		6650968	0					
ANR	6651168	Identifier	to		6650968	1					
ANR	6651169	PtrMemberAccess	zc -> l		6650968	1					
ANR	6651170	Identifier	zc		6650968	0					
ANR	6651171	Identifier	l		6650968	1					
ANR	6651172	CompoundStatement		32:23:624:624	6650968	1					
ANR	6651173	ExpressionStatement	zc -> l = zi . to	145:4:2927:2940	6650968	0	True				
ANR	6651174	AssignmentExpression	zc -> l = zi . to		6650968	0		=			
ANR	6651175	PtrMemberAccess	zc -> l		6650968	0					
ANR	6651176	Identifier	zc		6650968	0					
ANR	6651177	Identifier	l		6650968	1					
ANR	6651178	MemberAccess	zi . to		6650968	1					
ANR	6651179	Identifier	zi		6650968	0					
ANR	6651180	Identifier	to		6650968	1					
ANR	6651181	ExpressionStatement	* zc -> prev = name	146:4:2946:2962	6650968	1	True				
ANR	6651182	AssignmentExpression	* zc -> prev = name		6650968	0		=			
ANR	6651183	UnaryOperationExpression	* zc -> prev		6650968	0					
ANR	6651184	UnaryOperator	*		6650968	0					
ANR	6651185	PtrMemberAccess	zc -> prev		6650968	1					
ANR	6651186	Identifier	zc		6650968	0					
ANR	6651187	Identifier	prev		6650968	1					
ANR	6651188	Identifier	name		6650968	1					
ANR	6651189	IfStatement	if ( zi . to > zc -> addr )		6650968	6					
ANR	6651190	Condition	zi . to > zc -> addr	150:5:2981:2996	6650968	0	True				
ANR	6651191	RelationalExpression	zi . to > zc -> addr		6650968	0		>			
ANR	6651192	MemberAccess	zi . to		6650968	0					
ANR	6651193	Identifier	zi		6650968	0					
ANR	6651194	Identifier	to		6650968	1					
ANR	6651195	PtrMemberAccess	zc -> addr		6650968	1					
ANR	6651196	Identifier	zc		6650968	0					
ANR	6651197	Identifier	addr		6650968	1					
ANR	6651198	CompoundStatement		38:23:702:702	6650968	1					
ANR	6651199	IfStatement	if ( zc -> h == UT64_MAX )		6650968	0					
ANR	6651200	Condition	zc -> h == UT64_MAX	151:6:3007:3023	6650968	0	True				
ANR	6651201	EqualityExpression	zc -> h == UT64_MAX		6650968	0		==			
ANR	6651202	PtrMemberAccess	zc -> h		6650968	0					
ANR	6651203	Identifier	zc		6650968	0					
ANR	6651204	Identifier	h		6650968	1					
ANR	6651205	Identifier	UT64_MAX		6650968	1					
ANR	6651206	CompoundStatement		39:25:729:729	6650968	1					
ANR	6651207	ExpressionStatement	zc -> h = zi . to	152:3:3031:3044	6650968	0	True				
ANR	6651208	AssignmentExpression	zc -> h = zi . to		6650968	0		=			
ANR	6651209	PtrMemberAccess	zc -> h		6650968	0					
ANR	6651210	Identifier	zc		6650968	0					
ANR	6651211	Identifier	h		6650968	1					
ANR	6651212	MemberAccess	zi . to		6650968	1					
ANR	6651213	Identifier	zi		6650968	0					
ANR	6651214	Identifier	to		6650968	1					
ANR	6651215	ExpressionStatement	* zc -> next = name	153:3:3049:3065	6650968	1	True				
ANR	6651216	AssignmentExpression	* zc -> next = name		6650968	0		=			
ANR	6651217	UnaryOperationExpression	* zc -> next		6650968	0					
ANR	6651218	UnaryOperator	*		6650968	0					
ANR	6651219	PtrMemberAccess	zc -> next		6650968	1					
ANR	6651220	Identifier	zc		6650968	0					
ANR	6651221	Identifier	next		6650968	1					
ANR	6651222	Identifier	name		6650968	1					
ANR	6651223	ElseStatement	else		6650968	0					
ANR	6651224	CompoundStatement		42:9:779:779	6650968	0					
ANR	6651225	IfStatement	if ( zi . to < zc -> h )		6650968	0					
ANR	6651226	Condition	zi . to < zc -> h	155:7:3085:3097	6650968	0	True				
ANR	6651227	RelationalExpression	zi . to < zc -> h		6650968	0		<			
ANR	6651228	MemberAccess	zi . to		6650968	0					
ANR	6651229	Identifier	zi		6650968	0					
ANR	6651230	Identifier	to		6650968	1					
ANR	6651231	PtrMemberAccess	zc -> h		6650968	1					
ANR	6651232	Identifier	zc		6650968	0					
ANR	6651233	Identifier	h		6650968	1					
ANR	6651234	CompoundStatement		43:22:803:803	6650968	1					
ANR	6651235	ExpressionStatement	zc -> h = zi . to	156:4:3106:3119	6650968	0	True				
ANR	6651236	AssignmentExpression	zc -> h = zi . to		6650968	0		=			
ANR	6651237	PtrMemberAccess	zc -> h		6650968	0					
ANR	6651238	Identifier	zc		6650968	0					
ANR	6651239	Identifier	h		6650968	1					
ANR	6651240	MemberAccess	zi . to		6650968	1					
ANR	6651241	Identifier	zi		6650968	0					
ANR	6651242	Identifier	to		6650968	1					
ANR	6651243	ExpressionStatement	* zc -> next = name	157:4:3125:3141	6650968	1	True				
ANR	6651244	AssignmentExpression	* zc -> next = name		6650968	0		=			
ANR	6651245	UnaryOperationExpression	* zc -> next		6650968	0					
ANR	6651246	UnaryOperator	*		6650968	0					
ANR	6651247	PtrMemberAccess	zc -> next		6650968	1					
ANR	6651248	Identifier	zc		6650968	0					
ANR	6651249	Identifier	next		6650968	1					
ANR	6651250	Identifier	name		6650968	1					
ANR	6651251	ReturnStatement	return 1 ;	161:1:3156:3164	6650968	7	True				
ANR	6651252	PrimaryExpression	1		6650968	0					
ANR	6651253	ReturnType	static int		6650968	1					
ANR	6651254	Identifier	cb		6650968	2					
ANR	6651255	ParameterList	"void * user , const char * name , const char * from_to"		6650968	3					
ANR	6651256	Parameter	void * user	113:14:2245:2254	6650968	0	True				
ANR	6651257	ParameterType	void *		6650968	0					
ANR	6651258	Identifier	user		6650968	1					
ANR	6651259	Parameter	const char * name	113:26:2257:2272	6650968	1	True				
ANR	6651260	ParameterType	const char *		6650968	0					
ANR	6651261	Identifier	name		6650968	1					
ANR	6651262	Parameter	const char * from_to	113:44:2275:2293	6650968	2	True				
ANR	6651263	ParameterType	const char *		6650968	0					
ANR	6651264	Identifier	from_to		6650968	1					
ANR	6651265	CFGEntryNode	ENTRY		6650968		True				
ANR	6651266	CFGExitNode	EXIT		6650968		True				
ANR	6651267	Symbol	from_to		6650968						
ANR	6651268	Symbol	zi . to		6650968						
ANR	6651269	Symbol	zc		6650968						
ANR	6651270	Symbol	* zc		6650968						
ANR	6651271	Symbol	zi		6650968						
ANR	6651272	Symbol	zc -> h		6650968						
ANR	6651273	Symbol	* zc -> next		6650968						
ANR	6651274	Symbol	zc -> prev		6650968						
ANR	6651275	Symbol	zc -> l		6650968						
ANR	6651276	Symbol	* zc -> prev		6650968						
ANR	6651277	Symbol	* * zc		6650968						
ANR	6651278	Symbol	name		6650968						
ANR	6651279	Symbol	& zi		6650968						
ANR	6651280	Symbol	zc -> addr		6650968						
ANR	6651281	Symbol	zi . from		6650968						
ANR	6651282	Symbol	UT64_MAX		6650968						
ANR	6651283	Symbol	zc -> next		6650968						
ANR	6651284	Symbol	user		6650968						
ANR	6651285	Function	r_flag_zone_around	164:0:3169:3388							
ANR	6651286	FunctionDef	"r_flag_zone_around (RFlag * f , ut64 addr , const char * * prev , const char * * next)"		6651285	0					
ANR	6651287	CompoundStatement		164:89:3258:3388	6651285	0					
ANR	6651288	IdentifierDeclStatement	"RFlagZoneContext ctx = { f , addr , 0 , UT64_MAX , prev , next } ;"	165:1:3261:3320	6651285	0	True				
ANR	6651289	IdentifierDecl	"ctx = { f , addr , 0 , UT64_MAX , prev , next }"		6651285	0					
ANR	6651290	IdentifierDeclType	RFlagZoneContext		6651285	0					
ANR	6651291	Identifier	ctx		6651285	1					
ANR	6651292	AssignmentExpression	"ctx = { f , addr , 0 , UT64_MAX , prev , next }"		6651285	2		=			
ANR	6651293	Identifier	ctx		6651285	0					
ANR	6651294	InitializerList	f		6651285	1					
ANR	6651295	Identifier	f		6651285	0					
ANR	6651296	Identifier	addr		6651285	1					
ANR	6651297	PrimaryExpression	0		6651285	2					
ANR	6651298	Identifier	UT64_MAX		6651285	3					
ANR	6651299	Identifier	prev		6651285	4					
ANR	6651300	Identifier	next		6651285	5					
ANR	6651301	ExpressionStatement	* prev = * next = NULL	166:1:3323:3343	6651285	1	True				
ANR	6651302	AssignmentExpression	* prev = * next = NULL		6651285	0		=			
ANR	6651303	UnaryOperationExpression	* prev		6651285	0					
ANR	6651304	UnaryOperator	*		6651285	0					
ANR	6651305	Identifier	prev		6651285	1					
ANR	6651306	AssignmentExpression	* next = NULL		6651285	1		=			
ANR	6651307	UnaryOperationExpression	* next		6651285	0					
ANR	6651308	UnaryOperator	*		6651285	0					
ANR	6651309	Identifier	next		6651285	1					
ANR	6651310	Identifier	NULL		6651285	1					
ANR	6651311	ExpressionStatement	"sdb_foreach ( DB , cb , & ctx )"	167:1:3346:3372	6651285	2	True				
ANR	6651312	CallExpression	"sdb_foreach ( DB , cb , & ctx )"		6651285	0					
ANR	6651313	Callee	sdb_foreach		6651285	0					
ANR	6651314	Identifier	sdb_foreach		6651285	0					
ANR	6651315	ArgumentList	DB		6651285	1					
ANR	6651316	Argument	DB		6651285	0					
ANR	6651317	Identifier	DB		6651285	0					
ANR	6651318	Argument	cb		6651285	1					
ANR	6651319	Identifier	cb		6651285	0					
ANR	6651320	Argument	& ctx		6651285	2					
ANR	6651321	UnaryOperationExpression	& ctx		6651285	0					
ANR	6651322	UnaryOperator	&		6651285	0					
ANR	6651323	Identifier	ctx		6651285	1					
ANR	6651324	ReturnStatement	return true ;	168:1:3375:3386	6651285	3	True				
ANR	6651325	Identifier	true		6651285	0					
ANR	6651326	ReturnType	R_API bool		6651285	1					
ANR	6651327	Identifier	r_flag_zone_around		6651285	2					
ANR	6651328	ParameterList	"RFlag * f , ut64 addr , const char * * prev , const char * * next"		6651285	3					
ANR	6651329	Parameter	RFlag * f	164:30:3199:3206	6651285	0	True				
ANR	6651330	ParameterType	RFlag *		6651285	0					
ANR	6651331	Identifier	f		6651285	1					
ANR	6651332	Parameter	ut64 addr	164:40:3209:3217	6651285	1	True				
ANR	6651333	ParameterType	ut64		6651285	0					
ANR	6651334	Identifier	addr		6651285	1					
ANR	6651335	Parameter	const char * * prev	164:51:3220:3236	6651285	2	True				
ANR	6651336	ParameterType	const char * *		6651285	0					
ANR	6651337	Identifier	prev		6651285	1					
ANR	6651338	Parameter	const char * * next	164:70:3239:3255	6651285	3	True				
ANR	6651339	ParameterType	const char * *		6651285	0					
ANR	6651340	Identifier	next		6651285	1					
ANR	6651341	CFGEntryNode	ENTRY		6651285		True				
ANR	6651342	CFGExitNode	EXIT		6651285		True				
ANR	6651343	Symbol	next		6651285						
ANR	6651344	Symbol	NULL		6651285						
ANR	6651345	Symbol	f		6651285						
ANR	6651346	Symbol	ctx		6651285						
ANR	6651347	Symbol	prev		6651285						
ANR	6651348	Symbol	* prev		6651285						
ANR	6651349	Symbol	& ctx		6651285						
ANR	6651350	Symbol	* next		6651285						
ANR	6651351	Symbol	true		6651285						
ANR	6651352	Symbol	addr		6651285						
ANR	6651353	Symbol	UT64_MAX		6651285						
ANR	6651354	Symbol	DB		6651285						
ANR	6651355	Symbol	cb		6651285						
ANR	6651356	Function	cb_list	171:0:3391:3551							
ANR	6651357	FunctionDef	"cb_list (void * user , const char * name , const char * from_to)"		6651356	0					
ANR	6651358	CompoundStatement		171:70:3461:3551	6651356	0					
ANR	6651359	ExpressionStatement	"eprintf ( ""%s%s  %s\\n"" , name , r_str_pad ( ' ' , 10 - strlen ( name ) ) , from_to )"	172:1:3464:3538	6651356	0	True				
ANR	6651360	CallExpression	"eprintf ( ""%s%s  %s\\n"" , name , r_str_pad ( ' ' , 10 - strlen ( name ) ) , from_to )"		6651356	0					
ANR	6651361	Callee	eprintf		6651356	0					
ANR	6651362	Identifier	eprintf		6651356	0					
ANR	6651363	ArgumentList	"""%s%s  %s\\n"""		6651356	1					
ANR	6651364	Argument	"""%s%s  %s\\n"""		6651356	0					
ANR	6651365	PrimaryExpression	"""%s%s  %s\\n"""		6651356	0					
ANR	6651366	Argument	name		6651356	1					
ANR	6651367	Identifier	name		6651356	0					
ANR	6651368	Argument	"r_str_pad ( ' ' , 10 - strlen ( name ) )"		6651356	2					
ANR	6651369	CallExpression	"r_str_pad ( ' ' , 10 - strlen ( name ) )"		6651356	0					
ANR	6651370	Callee	r_str_pad		6651356	0					
ANR	6651371	Identifier	r_str_pad		6651356	0					
ANR	6651372	ArgumentList	' '		6651356	1					
ANR	6651373	Argument	' '		6651356	0					
ANR	6651374	PrimaryExpression	' '		6651356	0					
ANR	6651375	Argument	10 - strlen ( name )		6651356	1					
ANR	6651376	AdditiveExpression	10 - strlen ( name )		6651356	0		-			
ANR	6651377	PrimaryExpression	10		6651356	0					
ANR	6651378	CallExpression	strlen ( name )		6651356	1					
ANR	6651379	Callee	strlen		6651356	0					
ANR	6651380	Identifier	strlen		6651356	0					
ANR	6651381	ArgumentList	name		6651356	1					
ANR	6651382	Argument	name		6651356	0					
ANR	6651383	Identifier	name		6651356	0					
ANR	6651384	Argument	from_to		6651356	3					
ANR	6651385	Identifier	from_to		6651356	0					
ANR	6651386	ReturnStatement	return 1 ;	173:1:3541:3549	6651356	1	True				
ANR	6651387	PrimaryExpression	1		6651356	0					
ANR	6651388	ReturnType	static int		6651356	1					
ANR	6651389	Identifier	cb_list		6651356	2					
ANR	6651390	ParameterList	"void * user , const char * name , const char * from_to"		6651356	3					
ANR	6651391	Parameter	void * user	171:19:3410:3419	6651356	0	True				
ANR	6651392	ParameterType	void *		6651356	0					
ANR	6651393	Identifier	user		6651356	1					
ANR	6651394	Parameter	const char * name	171:31:3422:3437	6651356	1	True				
ANR	6651395	ParameterType	const char *		6651356	0					
ANR	6651396	Identifier	name		6651356	1					
ANR	6651397	Parameter	const char * from_to	171:49:3440:3458	6651356	2	True				
ANR	6651398	ParameterType	const char *		6651356	0					
ANR	6651399	Identifier	from_to		6651356	1					
ANR	6651400	CFGEntryNode	ENTRY		6651356		True				
ANR	6651401	CFGExitNode	EXIT		6651356		True				
ANR	6651402	Symbol	strlen		6651356						
ANR	6651403	Symbol	from_to		6651356						
ANR	6651404	Symbol	r_str_pad		6651356						
ANR	6651405	Symbol	name		6651356						
ANR	6651406	Symbol	user		6651356						
ANR	6651407	Function	r_flag_zone_list	176:0:3554:3652							
ANR	6651408	FunctionDef	"r_flag_zone_list (RFlag * f , int mode)"		6651407	0					
ANR	6651409	CompoundStatement		176:48:3602:3652	6651407	0					
ANR	6651410	ExpressionStatement	"sdb_foreach ( DB , cb_list , NULL )"	177:1:3605:3636	6651407	0	True				
ANR	6651411	CallExpression	"sdb_foreach ( DB , cb_list , NULL )"		6651407	0					
ANR	6651412	Callee	sdb_foreach		6651407	0					
ANR	6651413	Identifier	sdb_foreach		6651407	0					
ANR	6651414	ArgumentList	DB		6651407	1					
ANR	6651415	Argument	DB		6651407	0					
ANR	6651416	Identifier	DB		6651407	0					
ANR	6651417	Argument	cb_list		6651407	1					
ANR	6651418	Identifier	cb_list		6651407	0					
ANR	6651419	Argument	NULL		6651407	2					
ANR	6651420	Identifier	NULL		6651407	0					
ANR	6651421	ReturnStatement	return true ;	178:1:3639:3650	6651407	1	True				
ANR	6651422	Identifier	true		6651407	0					
ANR	6651423	ReturnType	R_API bool		6651407	1					
ANR	6651424	Identifier	r_flag_zone_list		6651407	2					
ANR	6651425	ParameterList	"RFlag * f , int mode"		6651407	3					
ANR	6651426	Parameter	RFlag * f	176:28:3582:3589	6651407	0	True				
ANR	6651427	ParameterType	RFlag *		6651407	0					
ANR	6651428	Identifier	f		6651407	1					
ANR	6651429	Parameter	int mode	176:38:3592:3599	6651407	1	True				
ANR	6651430	ParameterType	int		6651407	0					
ANR	6651431	Identifier	mode		6651407	1					
ANR	6651432	CFGEntryNode	ENTRY		6651407		True				
ANR	6651433	CFGExitNode	EXIT		6651407		True				
ANR	6651434	Symbol	mode		6651407						
ANR	6651435	Symbol	NULL		6651407						
ANR	6651436	Symbol	f		6651407						
ANR	6651437	Symbol	true		6651407						
ANR	6651438	Symbol	DB		6651407						
ANR	6651439	Symbol	cb_list		6651407						
ANR	6651440	Function	r_flag_zone_item_free	183:0:3662:3760							
ANR	6651441	FunctionDef	r_flag_zone_item_free (void * a)		6651440	0					
ANR	6651442	CompoundStatement		183:42:3704:3760	6651440	0					
ANR	6651443	IdentifierDeclStatement	RFlagZoneItem * zi = a ;	184:1:3707:3728	6651440	0	True				
ANR	6651444	IdentifierDecl	* zi = a		6651440	0					
ANR	6651445	IdentifierDeclType	RFlagZoneItem *		6651440	0					
ANR	6651446	Identifier	zi		6651440	1					
ANR	6651447	AssignmentExpression	* zi = a		6651440	2		=			
ANR	6651448	Identifier	a		6651440	0					
ANR	6651449	Identifier	a		6651440	1					
ANR	6651450	ExpressionStatement	free ( zi -> name )	185:1:3731:3746	6651440	1	True				
ANR	6651451	CallExpression	free ( zi -> name )		6651440	0					
ANR	6651452	Callee	free		6651440	0					
ANR	6651453	Identifier	free		6651440	0					
ANR	6651454	ArgumentList	zi -> name		6651440	1					
ANR	6651455	Argument	zi -> name		6651440	0					
ANR	6651456	PtrMemberAccess	zi -> name		6651440	0					
ANR	6651457	Identifier	zi		6651440	0					
ANR	6651458	Identifier	name		6651440	1					
ANR	6651459	ExpressionStatement	free ( zi )	186:1:3749:3758	6651440	2	True				
ANR	6651460	CallExpression	free ( zi )		6651440	0					
ANR	6651461	Callee	free		6651440	0					
ANR	6651462	Identifier	free		6651440	0					
ANR	6651463	ArgumentList	zi		6651440	1					
ANR	6651464	Argument	zi		6651440	0					
ANR	6651465	Identifier	zi		6651440	0					
ANR	6651466	ReturnType	R_API void		6651440	1					
ANR	6651467	Identifier	r_flag_zone_item_free		6651440	2					
ANR	6651468	ParameterList	void * a		6651440	3					
ANR	6651469	Parameter	void * a	183:33:3695:3701	6651440	0	True				
ANR	6651470	ParameterType	void *		6651440	0					
ANR	6651471	Identifier	a		6651440	1					
ANR	6651472	CFGEntryNode	ENTRY		6651440		True				
ANR	6651473	CFGExitNode	EXIT		6651440		True				
ANR	6651474	Symbol	a		6651440						
ANR	6651475	Symbol	* zi		6651440						
ANR	6651476	Symbol	zi -> name		6651440						
ANR	6651477	Symbol	zi		6651440						
ANR	6651478	Function	r_flag_zone_around	189:0:3763:4710							
ANR	6651479	FunctionDef	"r_flag_zone_around (RFlag * f , ut64 addr , const char * * prev , const char * * next)"		6651478	0					
ANR	6651480	CompoundStatement		189:89:3852:4710	6651478	0					
ANR	6651481	IdentifierDeclStatement	RListIter * iter ;	190:1:3855:3870	6651478	0	True				
ANR	6651482	IdentifierDecl	* iter		6651478	0					
ANR	6651483	IdentifierDeclType	RListIter *		6651478	0					
ANR	6651484	Identifier	iter		6651478	1					
ANR	6651485	IdentifierDeclStatement	RFlagZoneItem * zi ;	191:1:3873:3890	6651478	1	True				
ANR	6651486	IdentifierDecl	* zi		6651478	0					
ANR	6651487	IdentifierDeclType	RFlagZoneItem *		6651478	0					
ANR	6651488	Identifier	zi		6651478	1					
ANR	6651489	ExpressionStatement	* prev = * next = NULL	192:1:3893:3913	6651478	2	True				
ANR	6651490	AssignmentExpression	* prev = * next = NULL		6651478	0		=			
ANR	6651491	UnaryOperationExpression	* prev		6651478	0					
ANR	6651492	UnaryOperator	*		6651478	0					
ANR	6651493	Identifier	prev		6651478	1					
ANR	6651494	AssignmentExpression	* next = NULL		6651478	1		=			
ANR	6651495	UnaryOperationExpression	* next		6651478	0					
ANR	6651496	UnaryOperator	*		6651478	0					
ANR	6651497	Identifier	next		6651478	1					
ANR	6651498	Identifier	NULL		6651478	1					
ANR	6651499	Statement	ut64	193:1:3916:3919	6651478	3	True				
ANR	6651500	Statement	h	193:6:3921:3921	6651478	4	True				
ANR	6651501	Statement	=	193:8:3923:3923	6651478	5	True				
ANR	6651502	Statement	UT64_MAX	193:10:3925:3932	6651478	6	True				
ANR	6651503	Statement	","	193:18:3933:3933	6651478	7	True				
ANR	6651504	Statement	l	193:20:3935:3935	6651478	8	True				
ANR	6651505	Statement	=	193:22:3937:3937	6651478	9	True				
ANR	6651506	Statement	0L	193:24:3939:3940	6651478	10	True				
ANR	6651507	ExpressionStatement	L	193:26:3941:3942	6651478	11	True				
ANR	6651508	Identifier	L		6651478	0					
ANR	6651509	Statement	r_list_foreach	195:1:3946:3959	6651478	12	True				
ANR	6651510	Statement	(	195:16:3961:3961	6651478	13	True				
ANR	6651511	Statement	DB	195:17:3962:3963	6651478	14	True				
ANR	6651512	Statement	","	195:19:3964:3964	6651478	15	True				
ANR	6651513	Statement	iter	195:21:3966:3969	6651478	16	True				
ANR	6651514	Statement	","	195:25:3970:3970	6651478	17	True				
ANR	6651515	Statement	zi	195:27:3972:3973	6651478	18	True				
ANR	6651516	Statement	)	195:29:3974:3974	6651478	19	True				
ANR	6651517	CompoundStatement		7:31:123:123	6651478	20					
ANR	6651518	IfStatement	if ( zi -> from > addr )		6651478	0					
ANR	6651519	Condition	zi -> from > addr	196:6:3984:3998	6651478	0	True				
ANR	6651520	RelationalExpression	zi -> from > addr		6651478	0		>			
ANR	6651521	PtrMemberAccess	zi -> from		6651478	0					
ANR	6651522	Identifier	zi		6651478	0					
ANR	6651523	Identifier	from		6651478	1					
ANR	6651524	Identifier	addr		6651478	1					
ANR	6651525	CompoundStatement		8:23:148:148	6651478	1					
ANR	6651526	IfStatement	if ( h == UT64_MAX )		6651478	0					
ANR	6651527	Condition	h == UT64_MAX	197:7:4010:4022	6651478	0	True				
ANR	6651528	EqualityExpression	h == UT64_MAX		6651478	0		==			
ANR	6651529	Identifier	h		6651478	0					
ANR	6651530	Identifier	UT64_MAX		6651478	1					
ANR	6651531	CompoundStatement		9:22:172:172	6651478	1					
ANR	6651532	ExpressionStatement	h = zi -> from	198:4:4031:4043	6651478	0	True				
ANR	6651533	AssignmentExpression	h = zi -> from		6651478	0		=			
ANR	6651534	Identifier	h		6651478	0					
ANR	6651535	PtrMemberAccess	zi -> from		6651478	1					
ANR	6651536	Identifier	zi		6651478	0					
ANR	6651537	Identifier	from		6651478	1					
ANR	6651538	ExpressionStatement	* next = zi -> name	199:4:4049:4065	6651478	1	True				
ANR	6651539	AssignmentExpression	* next = zi -> name		6651478	0		=			
ANR	6651540	UnaryOperationExpression	* next		6651478	0					
ANR	6651541	UnaryOperator	*		6651478	0					
ANR	6651542	Identifier	next		6651478	1					
ANR	6651543	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651544	Identifier	zi		6651478	0					
ANR	6651545	Identifier	name		6651478	1					
ANR	6651546	ElseStatement	else		6651478	0					
ANR	6651547	CompoundStatement		12:10:224:224	6651478	0					
ANR	6651548	IfStatement	if ( zi -> from < h )		6651478	0					
ANR	6651549	Condition	zi -> from < h	201:8:4087:4098	6651478	0	True				
ANR	6651550	RelationalExpression	zi -> from < h		6651478	0		<			
ANR	6651551	PtrMemberAccess	zi -> from		6651478	0					
ANR	6651552	Identifier	zi		6651478	0					
ANR	6651553	Identifier	from		6651478	1					
ANR	6651554	Identifier	h		6651478	1					
ANR	6651555	CompoundStatement		13:22:248:248	6651478	1					
ANR	6651556	ExpressionStatement	h = zi -> from	202:5:4108:4120	6651478	0	True				
ANR	6651557	AssignmentExpression	h = zi -> from		6651478	0		=			
ANR	6651558	Identifier	h		6651478	0					
ANR	6651559	PtrMemberAccess	zi -> from		6651478	1					
ANR	6651560	Identifier	zi		6651478	0					
ANR	6651561	Identifier	from		6651478	1					
ANR	6651562	ExpressionStatement	* next = zi -> name	203:5:4127:4143	6651478	1	True				
ANR	6651563	AssignmentExpression	* next = zi -> name		6651478	0		=			
ANR	6651564	UnaryOperationExpression	* next		6651478	0					
ANR	6651565	UnaryOperator	*		6651478	0					
ANR	6651566	Identifier	next		6651478	1					
ANR	6651567	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651568	Identifier	zi		6651478	0					
ANR	6651569	Identifier	name		6651478	1					
ANR	6651570	IfStatement	if ( zi -> from < addr )		6651478	1					
ANR	6651571	Condition	zi -> from < addr	207:6:4166:4180	6651478	0	True				
ANR	6651572	RelationalExpression	zi -> from < addr		6651478	0		<			
ANR	6651573	PtrMemberAccess	zi -> from		6651478	0					
ANR	6651574	Identifier	zi		6651478	0					
ANR	6651575	Identifier	from		6651478	1					
ANR	6651576	Identifier	addr		6651478	1					
ANR	6651577	CompoundStatement		19:23:330:330	6651478	1					
ANR	6651578	IfStatement	if ( l == UT64_MAX )		6651478	0					
ANR	6651579	Condition	l == UT64_MAX	208:7:4192:4204	6651478	0	True				
ANR	6651580	EqualityExpression	l == UT64_MAX		6651478	0		==			
ANR	6651581	Identifier	l		6651478	0					
ANR	6651582	Identifier	UT64_MAX		6651478	1					
ANR	6651583	CompoundStatement		20:22:354:354	6651478	1					
ANR	6651584	ExpressionStatement	l = zi -> from	209:4:4213:4225	6651478	0	True				
ANR	6651585	AssignmentExpression	l = zi -> from		6651478	0		=			
ANR	6651586	Identifier	l		6651478	0					
ANR	6651587	PtrMemberAccess	zi -> from		6651478	1					
ANR	6651588	Identifier	zi		6651478	0					
ANR	6651589	Identifier	from		6651478	1					
ANR	6651590	ExpressionStatement	* prev = zi -> name	210:4:4231:4247	6651478	1	True				
ANR	6651591	AssignmentExpression	* prev = zi -> name		6651478	0		=			
ANR	6651592	UnaryOperationExpression	* prev		6651478	0					
ANR	6651593	UnaryOperator	*		6651478	0					
ANR	6651594	Identifier	prev		6651478	1					
ANR	6651595	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651596	Identifier	zi		6651478	0					
ANR	6651597	Identifier	name		6651478	1					
ANR	6651598	ElseStatement	else		6651478	0					
ANR	6651599	CompoundStatement		23:10:406:406	6651478	0					
ANR	6651600	IfStatement	if ( zi -> from >= l )		6651478	0					
ANR	6651601	Condition	zi -> from >= l	212:8:4269:4281	6651478	0	True				
ANR	6651602	RelationalExpression	zi -> from >= l		6651478	0		>=			
ANR	6651603	PtrMemberAccess	zi -> from		6651478	0					
ANR	6651604	Identifier	zi		6651478	0					
ANR	6651605	Identifier	from		6651478	1					
ANR	6651606	Identifier	l		6651478	1					
ANR	6651607	CompoundStatement		24:23:431:431	6651478	1					
ANR	6651608	ExpressionStatement	l = zi -> from	213:5:4291:4303	6651478	0	True				
ANR	6651609	AssignmentExpression	l = zi -> from		6651478	0		=			
ANR	6651610	Identifier	l		6651478	0					
ANR	6651611	PtrMemberAccess	zi -> from		6651478	1					
ANR	6651612	Identifier	zi		6651478	0					
ANR	6651613	Identifier	from		6651478	1					
ANR	6651614	ExpressionStatement	* prev = zi -> name	214:5:4310:4326	6651478	1	True				
ANR	6651615	AssignmentExpression	* prev = zi -> name		6651478	0		=			
ANR	6651616	UnaryOperationExpression	* prev		6651478	0					
ANR	6651617	UnaryOperator	*		6651478	0					
ANR	6651618	Identifier	prev		6651478	1					
ANR	6651619	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651620	Identifier	zi		6651478	0					
ANR	6651621	Identifier	name		6651478	1					
ANR	6651622	IfStatement	if ( zi -> to <= addr )		6651478	2					
ANR	6651623	Condition	zi -> to <= addr	218:6:4349:4362	6651478	0	True				
ANR	6651624	RelationalExpression	zi -> to <= addr		6651478	0		<=			
ANR	6651625	PtrMemberAccess	zi -> to		6651478	0					
ANR	6651626	Identifier	zi		6651478	0					
ANR	6651627	Identifier	to		6651478	1					
ANR	6651628	Identifier	addr		6651478	1					
ANR	6651629	CompoundStatement		30:22:512:512	6651478	1					
ANR	6651630	IfStatement	if ( l == UT64_MAX )		6651478	0					
ANR	6651631	Condition	l == UT64_MAX	219:7:4374:4386	6651478	0	True				
ANR	6651632	EqualityExpression	l == UT64_MAX		6651478	0		==			
ANR	6651633	Identifier	l		6651478	0					
ANR	6651634	Identifier	UT64_MAX		6651478	1					
ANR	6651635	CompoundStatement		31:22:536:536	6651478	1					
ANR	6651636	ExpressionStatement	l = zi -> to	220:4:4395:4405	6651478	0	True				
ANR	6651637	AssignmentExpression	l = zi -> to		6651478	0		=			
ANR	6651638	Identifier	l		6651478	0					
ANR	6651639	PtrMemberAccess	zi -> to		6651478	1					
ANR	6651640	Identifier	zi		6651478	0					
ANR	6651641	Identifier	to		6651478	1					
ANR	6651642	ExpressionStatement	* prev = zi -> name	221:4:4411:4427	6651478	1	True				
ANR	6651643	AssignmentExpression	* prev = zi -> name		6651478	0		=			
ANR	6651644	UnaryOperationExpression	* prev		6651478	0					
ANR	6651645	UnaryOperator	*		6651478	0					
ANR	6651646	Identifier	prev		6651478	1					
ANR	6651647	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651648	Identifier	zi		6651478	0					
ANR	6651649	Identifier	name		6651478	1					
ANR	6651650	ElseStatement	else		6651478	0					
ANR	6651651	CompoundStatement		34:10:586:586	6651478	0					
ANR	6651652	IfStatement	if ( zi -> to >= l )		6651478	0					
ANR	6651653	Condition	zi -> to >= l	223:8:4449:4459	6651478	0	True				
ANR	6651654	RelationalExpression	zi -> to >= l		6651478	0		>=			
ANR	6651655	PtrMemberAccess	zi -> to		6651478	0					
ANR	6651656	Identifier	zi		6651478	0					
ANR	6651657	Identifier	to		6651478	1					
ANR	6651658	Identifier	l		6651478	1					
ANR	6651659	CompoundStatement		35:21:609:609	6651478	1					
ANR	6651660	ExpressionStatement	l = zi -> to	224:5:4469:4479	6651478	0	True				
ANR	6651661	AssignmentExpression	l = zi -> to		6651478	0		=			
ANR	6651662	Identifier	l		6651478	0					
ANR	6651663	PtrMemberAccess	zi -> to		6651478	1					
ANR	6651664	Identifier	zi		6651478	0					
ANR	6651665	Identifier	to		6651478	1					
ANR	6651666	ExpressionStatement	* prev = zi -> name	225:5:4486:4502	6651478	1	True				
ANR	6651667	AssignmentExpression	* prev = zi -> name		6651478	0		=			
ANR	6651668	UnaryOperationExpression	* prev		6651478	0					
ANR	6651669	UnaryOperator	*		6651478	0					
ANR	6651670	Identifier	prev		6651478	1					
ANR	6651671	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651672	Identifier	zi		6651478	0					
ANR	6651673	Identifier	name		6651478	1					
ANR	6651674	IfStatement	if ( zi -> to > addr )		6651478	3					
ANR	6651675	Condition	zi -> to > addr	229:6:4525:4537	6651478	0	True				
ANR	6651676	RelationalExpression	zi -> to > addr		6651478	0		>			
ANR	6651677	PtrMemberAccess	zi -> to		6651478	0					
ANR	6651678	Identifier	zi		6651478	0					
ANR	6651679	Identifier	to		6651478	1					
ANR	6651680	Identifier	addr		6651478	1					
ANR	6651681	CompoundStatement		41:21:687:687	6651478	1					
ANR	6651682	IfStatement	if ( h == UT64_MAX )		6651478	0					
ANR	6651683	Condition	h == UT64_MAX	230:7:4549:4561	6651478	0	True				
ANR	6651684	EqualityExpression	h == UT64_MAX		6651478	0		==			
ANR	6651685	Identifier	h		6651478	0					
ANR	6651686	Identifier	UT64_MAX		6651478	1					
ANR	6651687	CompoundStatement		42:22:711:711	6651478	1					
ANR	6651688	ExpressionStatement	h = zi -> to	231:4:4570:4580	6651478	0	True				
ANR	6651689	AssignmentExpression	h = zi -> to		6651478	0		=			
ANR	6651690	Identifier	h		6651478	0					
ANR	6651691	PtrMemberAccess	zi -> to		6651478	1					
ANR	6651692	Identifier	zi		6651478	0					
ANR	6651693	Identifier	to		6651478	1					
ANR	6651694	ExpressionStatement	* next = zi -> name	232:4:4586:4602	6651478	1	True				
ANR	6651695	AssignmentExpression	* next = zi -> name		6651478	0		=			
ANR	6651696	UnaryOperationExpression	* next		6651478	0					
ANR	6651697	UnaryOperator	*		6651478	0					
ANR	6651698	Identifier	next		6651478	1					
ANR	6651699	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651700	Identifier	zi		6651478	0					
ANR	6651701	Identifier	name		6651478	1					
ANR	6651702	ElseStatement	else		6651478	0					
ANR	6651703	CompoundStatement		45:10:761:761	6651478	0					
ANR	6651704	IfStatement	if ( zi -> to < h )		6651478	0					
ANR	6651705	Condition	zi -> to < h	234:8:4624:4633	6651478	0	True				
ANR	6651706	RelationalExpression	zi -> to < h		6651478	0		<			
ANR	6651707	PtrMemberAccess	zi -> to		6651478	0					
ANR	6651708	Identifier	zi		6651478	0					
ANR	6651709	Identifier	to		6651478	1					
ANR	6651710	Identifier	h		6651478	1					
ANR	6651711	CompoundStatement		46:20:783:783	6651478	1					
ANR	6651712	ExpressionStatement	h = zi -> to	235:5:4643:4653	6651478	0	True				
ANR	6651713	AssignmentExpression	h = zi -> to		6651478	0		=			
ANR	6651714	Identifier	h		6651478	0					
ANR	6651715	PtrMemberAccess	zi -> to		6651478	1					
ANR	6651716	Identifier	zi		6651478	0					
ANR	6651717	Identifier	to		6651478	1					
ANR	6651718	ExpressionStatement	* next = zi -> name	236:5:4660:4676	6651478	1	True				
ANR	6651719	AssignmentExpression	* next = zi -> name		6651478	0		=			
ANR	6651720	UnaryOperationExpression	* next		6651478	0					
ANR	6651721	UnaryOperator	*		6651478	0					
ANR	6651722	Identifier	next		6651478	1					
ANR	6651723	PtrMemberAccess	zi -> name		6651478	1					
ANR	6651724	Identifier	zi		6651478	0					
ANR	6651725	Identifier	name		6651478	1					
ANR	6651726	ReturnStatement	return true ;	241:1:4697:4708	6651478	21	True				
ANR	6651727	Identifier	true		6651478	0					
ANR	6651728	ReturnType	R_API bool		6651478	1					
ANR	6651729	Identifier	r_flag_zone_around		6651478	2					
ANR	6651730	ParameterList	"RFlag * f , ut64 addr , const char * * prev , const char * * next"		6651478	3					
ANR	6651731	Parameter	RFlag * f	189:30:3793:3800	6651478	0	True				
ANR	6651732	ParameterType	RFlag *		6651478	0					
ANR	6651733	Identifier	f		6651478	1					
ANR	6651734	Parameter	ut64 addr	189:40:3803:3811	6651478	1	True				
ANR	6651735	ParameterType	ut64		6651478	0					
ANR	6651736	Identifier	addr		6651478	1					
ANR	6651737	Parameter	const char * * prev	189:51:3814:3830	6651478	2	True				
ANR	6651738	ParameterType	const char * *		6651478	0					
ANR	6651739	Identifier	prev		6651478	1					
ANR	6651740	Parameter	const char * * next	189:70:3833:3849	6651478	3	True				
ANR	6651741	ParameterType	const char * *		6651478	0					
ANR	6651742	Identifier	next		6651478	1					
ANR	6651743	CFGEntryNode	ENTRY		6651478		True				
ANR	6651744	CFGExitNode	EXIT		6651478		True				
ANR	6651745	Symbol	next		6651478						
ANR	6651746	Symbol	NULL		6651478						
ANR	6651747	Symbol	f		6651478						
ANR	6651748	Symbol	zi -> from		6651478						
ANR	6651749	Symbol	prev		6651478						
ANR	6651750	Symbol	h		6651478						
ANR	6651751	Symbol	iter		6651478						
ANR	6651752	Symbol	* prev		6651478						
ANR	6651753	Symbol	* next		6651478						
ANR	6651754	Symbol	l		6651478						
ANR	6651755	Symbol	zi		6651478						
ANR	6651756	Symbol	* zi		6651478						
ANR	6651757	Symbol	zi -> to		6651478						
ANR	6651758	Symbol	true		6651478						
ANR	6651759	Symbol	zi -> name		6651478						
ANR	6651760	Symbol	addr		6651478						
ANR	6651761	Symbol	UT64_MAX		6651478						
ANR	6651762	Function	r_flag_zone_barlist	244:0:4713:5060							
ANR	6651763	FunctionDef	"r_flag_zone_barlist (RFlag * f , ut64 from , ut64 bsize , int rows)"		6651762	0					
ANR	6651764	CompoundStatement		244:76:4789:5060	6651762	0					
ANR	6651765	IdentifierDeclStatement	RList * list = r_list_newf ( NULL ) ;	245:1:4792:4824	6651762	0	True				
ANR	6651766	IdentifierDecl	* list = r_list_newf ( NULL )		6651762	0					
ANR	6651767	IdentifierDeclType	RList *		6651762	0					
ANR	6651768	Identifier	list		6651762	1					
ANR	6651769	AssignmentExpression	* list = r_list_newf ( NULL )		6651762	2		=			
ANR	6651770	Identifier	list		6651762	0					
ANR	6651771	CallExpression	r_list_newf ( NULL )		6651762	1					
ANR	6651772	Callee	r_list_newf		6651762	0					
ANR	6651773	Identifier	r_list_newf		6651762	0					
ANR	6651774	ArgumentList	NULL		6651762	1					
ANR	6651775	Argument	NULL		6651762	0					
ANR	6651776	Identifier	NULL		6651762	0					
ANR	6651777	IdentifierDeclStatement	int i ;	246:1:4827:4832	6651762	1	True				
ANR	6651778	IdentifierDecl	i		6651762	0					
ANR	6651779	IdentifierDeclType	int		6651762	0					
ANR	6651780	Identifier	i		6651762	1					
ANR	6651781	ForStatement	for ( i = 0 ; i < rows ; i ++ )		6651762	2					
ANR	6651782	ForInit	i = 0 ;	247:6:4840:4845	6651762	0	True				
ANR	6651783	AssignmentExpression	i = 0		6651762	0		=			
ANR	6651784	Identifier	i		6651762	0					
ANR	6651785	PrimaryExpression	0		6651762	1					
ANR	6651786	Condition	i < rows	247:13:4847:4854	6651762	1	True				
ANR	6651787	RelationalExpression	i < rows		6651762	0		<			
ANR	6651788	Identifier	i		6651762	0					
ANR	6651789	Identifier	rows		6651762	1					
ANR	6651790	PostIncDecOperationExpression	i ++	247:23:4857:4859	6651762	2	True				
ANR	6651791	Identifier	i		6651762	0					
ANR	6651792	IncDec	++		6651762	1					
ANR	6651793	CompoundStatement		5:2:76:143	6651762	3					
ANR	6651794	IdentifierDeclStatement	"RFlagZoneItem * zi = r_flag_zone_get_inrange ( f , from , from + bsize ) ;"	248:2:4866:4933	6651762	0	True				
ANR	6651795	IdentifierDecl	"* zi = r_flag_zone_get_inrange ( f , from , from + bsize )"		6651762	0					
ANR	6651796	IdentifierDeclType	RFlagZoneItem *		6651762	0					
ANR	6651797	Identifier	zi		6651762	1					
ANR	6651798	AssignmentExpression	"* zi = r_flag_zone_get_inrange ( f , from , from + bsize )"		6651762	2		=			
ANR	6651799	Identifier	zi		6651762	0					
ANR	6651800	CallExpression	"r_flag_zone_get_inrange ( f , from , from + bsize )"		6651762	1					
ANR	6651801	Callee	r_flag_zone_get_inrange		6651762	0					
ANR	6651802	Identifier	r_flag_zone_get_inrange		6651762	0					
ANR	6651803	ArgumentList	f		6651762	1					
ANR	6651804	Argument	f		6651762	0					
ANR	6651805	Identifier	f		6651762	0					
ANR	6651806	Argument	from		6651762	1					
ANR	6651807	Identifier	from		6651762	0					
ANR	6651808	Argument	from + bsize		6651762	2					
ANR	6651809	AdditiveExpression	from + bsize		6651762	0		+			
ANR	6651810	Identifier	from		6651762	0					
ANR	6651811	Identifier	bsize		6651762	1					
ANR	6651812	IfStatement	if ( zi )		6651762	1					
ANR	6651813	Condition	zi	249:6:4941:4942	6651762	0	True				
ANR	6651814	Identifier	zi		6651762	0					
ANR	6651815	CompoundStatement		6:10:155:155	6651762	1					
ANR	6651816	ExpressionStatement	"r_list_append ( list , zi -> name )"	250:3:4950:4980	6651762	0	True				
ANR	6651817	CallExpression	"r_list_append ( list , zi -> name )"		6651762	0					
ANR	6651818	Callee	r_list_append		6651762	0					
ANR	6651819	Identifier	r_list_append		6651762	0					
ANR	6651820	ArgumentList	list		6651762	1					
ANR	6651821	Argument	list		6651762	0					
ANR	6651822	Identifier	list		6651762	0					
ANR	6651823	Argument	zi -> name		6651762	1					
ANR	6651824	PtrMemberAccess	zi -> name		6651762	0					
ANR	6651825	Identifier	zi		6651762	0					
ANR	6651826	Identifier	name		6651762	1					
ANR	6651827	ElseStatement	else		6651762	0					
ANR	6651828	CompoundStatement		8:9:201:201	6651762	0					
ANR	6651829	ExpressionStatement	"r_list_append ( list , """" )"	252:3:4996:5020	6651762	0	True				
ANR	6651830	CallExpression	"r_list_append ( list , """" )"		6651762	0					
ANR	6651831	Callee	r_list_append		6651762	0					
ANR	6651832	Identifier	r_list_append		6651762	0					
ANR	6651833	ArgumentList	list		6651762	1					
ANR	6651834	Argument	list		6651762	0					
ANR	6651835	Identifier	list		6651762	0					
ANR	6651836	Argument	""""""		6651762	1					
ANR	6651837	PrimaryExpression	""""""		6651762	0					
ANR	6651838	ExpressionStatement	from += bsize	254:2:5028:5041	6651762	2	True				
ANR	6651839	AssignmentExpression	from += bsize		6651762	0		+=			
ANR	6651840	Identifier	from		6651762	0					
ANR	6651841	Identifier	bsize		6651762	1					
ANR	6651842	ReturnStatement	return list ;	256:1:5047:5058	6651762	3	True				
ANR	6651843	Identifier	list		6651762	0					
ANR	6651844	ReturnType	R_API RList *		6651762	1					
ANR	6651845	Identifier	r_flag_zone_barlist		6651762	2					
ANR	6651846	ParameterList	"RFlag * f , ut64 from , ut64 bsize , int rows"		6651762	3					
ANR	6651847	Parameter	RFlag * f	244:33:4746:4753	6651762	0	True				
ANR	6651848	ParameterType	RFlag *		6651762	0					
ANR	6651849	Identifier	f		6651762	1					
ANR	6651850	Parameter	ut64 from	244:43:4756:4764	6651762	1	True				
ANR	6651851	ParameterType	ut64		6651762	0					
ANR	6651852	Identifier	from		6651762	1					
ANR	6651853	Parameter	ut64 bsize	244:54:4767:4776	6651762	2	True				
ANR	6651854	ParameterType	ut64		6651762	0					
ANR	6651855	Identifier	bsize		6651762	1					
ANR	6651856	Parameter	int rows	244:66:4779:4786	6651762	3	True				
ANR	6651857	ParameterType	int		6651762	0					
ANR	6651858	Identifier	rows		6651762	1					
ANR	6651859	CFGEntryNode	ENTRY		6651762		True				
ANR	6651860	CFGExitNode	EXIT		6651762		True				
ANR	6651861	Symbol	NULL		6651762						
ANR	6651862	Symbol	r_flag_zone_get_inrange		6651762						
ANR	6651863	Symbol	r_list_newf		6651762						
ANR	6651864	Symbol	f		6651762						
ANR	6651865	Symbol	* zi		6651762						
ANR	6651866	Symbol	bsize		6651762						
ANR	6651867	Symbol	i		6651762						
ANR	6651868	Symbol	from		6651762						
ANR	6651869	Symbol	zi -> name		6651762						
ANR	6651870	Symbol	rows		6651762						
ANR	6651871	Symbol	list		6651762						
ANR	6651872	Symbol	zi		6651762						
ANR	6651873	Function	r_flag_zone_list	259:0:5063:5483							
ANR	6651874	FunctionDef	"r_flag_zone_list (RFlag * f , int mode)"		6651873	0					
ANR	6651875	CompoundStatement		259:48:5111:5483	6651873	0					
ANR	6651876	IdentifierDeclStatement	RListIter * iter ;	260:1:5114:5129	6651873	0	True				
ANR	6651877	IdentifierDecl	* iter		6651873	0					
ANR	6651878	IdentifierDeclType	RListIter *		6651873	0					
ANR	6651879	Identifier	iter		6651873	1					
ANR	6651880	IdentifierDeclStatement	RFlagZoneItem * zi ;	261:1:5132:5149	6651873	1	True				
ANR	6651881	IdentifierDecl	* zi		6651873	0					
ANR	6651882	IdentifierDeclType	RFlagZoneItem *		6651873	0					
ANR	6651883	Identifier	zi		6651873	1					
ANR	6651884	Statement	r_list_foreach	262:1:5152:5165	6651873	2	True				
ANR	6651885	Statement	(	262:16:5167:5167	6651873	3	True				
ANR	6651886	Statement	DB	262:17:5168:5169	6651873	4	True				
ANR	6651887	Statement	","	262:19:5170:5170	6651873	5	True				
ANR	6651888	Statement	iter	262:21:5172:5175	6651873	6	True				
ANR	6651889	Statement	","	262:25:5176:5176	6651873	7	True				
ANR	6651890	Statement	zi	262:27:5178:5179	6651873	8	True				
ANR	6651891	Statement	)	262:29:5180:5180	6651873	9	True				
ANR	6651892	CompoundStatement		4:31:70:70	6651873	10					
ANR	6651893	IfStatement	if ( mode == '*' )		6651873	0					
ANR	6651894	Condition	mode == '*'	263:6:5190:5200	6651873	0	True				
ANR	6651895	EqualityExpression	mode == '*'		6651873	0		==			
ANR	6651896	Identifier	mode		6651873	0					
ANR	6651897	PrimaryExpression	'*'		6651873	1					
ANR	6651898	CompoundStatement		5:19:91:91	6651873	1					
ANR	6651899	Statement	f	264:3:5208:5208	6651873	0	True				
ANR	6651900	Statement	->	264:4:5209:5210	6651873	1	True				
ANR	6651901	Statement	cb_printf	264:6:5211:5219	6651873	2	True				
ANR	6651902	Statement	(	264:16:5221:5221	6651873	3	True				
ANR	6651903	Statement	"""fz %s @ 0x08%"""	264:17:5222:5236	6651873	4	True				
ANR	6651904	Statement	PFMT64x	264:32:5237:5243	6651873	5	True				
ANR	6651905	Statement	"""\\n"""	264:39:5244:5247	6651873	6	True				
ANR	6651906	Statement	","	264:43:5248:5248	6651873	7	True				
ANR	6651907	Statement	zi	264:45:5250:5251	6651873	8	True				
ANR	6651908	Statement	->	264:47:5252:5253	6651873	9	True				
ANR	6651909	Statement	name	264:49:5254:5257	6651873	10	True				
ANR	6651910	Statement	","	264:53:5258:5258	6651873	11	True				
ANR	6651911	Statement	zi	264:55:5260:5261	6651873	12	True				
ANR	6651912	Statement	->	264:57:5262:5263	6651873	13	True				
ANR	6651913	Statement	from	264:59:5264:5267	6651873	14	True				
ANR	6651914	Statement	)	264:63:5268:5268	6651873	15	True				
ANR	6651915	ExpressionStatement		264:64:5269:5269	6651873	16	True				
ANR	6651916	Statement	f	265:3:5274:5274	6651873	17	True				
ANR	6651917	Statement	->	265:4:5275:5276	6651873	18	True				
ANR	6651918	Statement	cb_printf	265:6:5277:5285	6651873	19	True				
ANR	6651919	Statement	(	265:16:5287:5287	6651873	20	True				
ANR	6651920	Statement	"""f %s %d 0x08%"""	265:17:5288:5302	6651873	21	True				
ANR	6651921	Statement	PFMT64x	265:32:5303:5309	6651873	22	True				
ANR	6651922	Statement	"""\\n"""	265:39:5310:5313	6651873	23	True				
ANR	6651923	Statement	","	265:43:5314:5314	6651873	24	True				
ANR	6651924	Statement	zi	265:45:5316:5317	6651873	25	True				
ANR	6651925	Statement	->	265:47:5318:5319	6651873	26	True				
ANR	6651926	Statement	name	265:49:5320:5323	6651873	27	True				
ANR	6651927	Statement	","	265:53:5324:5324	6651873	28	True				
ANR	6651928	Statement	zi	266:4:5330:5331	6651873	29	True				
ANR	6651929	Statement	->	266:6:5332:5333	6651873	30	True				
ANR	6651930	Statement	to	266:8:5334:5335	6651873	31	True				
ANR	6651931	Statement	-	266:11:5337:5337	6651873	32	True				
ANR	6651932	Statement	zi	266:13:5339:5340	6651873	33	True				
ANR	6651933	Statement	->	266:15:5341:5342	6651873	34	True				
ANR	6651934	Statement	from	266:17:5343:5346	6651873	35	True				
ANR	6651935	Statement	","	266:21:5347:5347	6651873	36	True				
ANR	6651936	Statement	zi	266:23:5349:5350	6651873	37	True				
ANR	6651937	Statement	->	266:25:5351:5352	6651873	38	True				
ANR	6651938	Statement	from	266:27:5353:5356	6651873	39	True				
ANR	6651939	Statement	)	266:31:5357:5357	6651873	40	True				
ANR	6651940	ExpressionStatement		266:32:5358:5358	6651873	41	True				
ANR	6651941	ElseStatement	else		6651873	0					
ANR	6651942	CompoundStatement		9:9:257:257	6651873	0					
ANR	6651943	Statement	f	268:3:5374:5374	6651873	0	True				
ANR	6651944	Statement	->	268:4:5375:5376	6651873	1	True				
ANR	6651945	Statement	cb_printf	268:6:5377:5385	6651873	2	True				
ANR	6651946	Statement	(	268:16:5387:5387	6651873	3	True				
ANR	6651947	Statement	"""0x08%"""	268:17:5388:5394	6651873	4	True				
ANR	6651948	Statement	PFMT64x	268:24:5395:5401	6651873	5	True				
ANR	6651949	Statement	"""  0x%08"""	268:31:5402:5410	6651873	6	True				
ANR	6651950	Statement	PFMT64x	268:40:5411:5417	6651873	7	True				
ANR	6651951	Statement	"""  %s\\n"""	268:47:5418:5425	6651873	8	True				
ANR	6651952	Statement	","	268:55:5426:5426	6651873	9	True				
ANR	6651953	Statement	zi	269:5:5433:5434	6651873	10	True				
ANR	6651954	Statement	->	269:7:5435:5436	6651873	11	True				
ANR	6651955	Statement	from	269:9:5437:5440	6651873	12	True				
ANR	6651956	Statement	","	269:13:5441:5441	6651873	13	True				
ANR	6651957	Statement	zi	269:15:5443:5444	6651873	14	True				
ANR	6651958	Statement	->	269:17:5445:5446	6651873	15	True				
ANR	6651959	Statement	to	269:19:5447:5448	6651873	16	True				
ANR	6651960	Statement	","	269:21:5449:5449	6651873	17	True				
ANR	6651961	Statement	zi	269:23:5451:5452	6651873	18	True				
ANR	6651962	Statement	->	269:25:5453:5454	6651873	19	True				
ANR	6651963	Statement	name	269:27:5455:5458	6651873	20	True				
ANR	6651964	Statement	)	269:31:5459:5459	6651873	21	True				
ANR	6651965	ExpressionStatement		269:32:5460:5460	6651873	22	True				
ANR	6651966	ReturnStatement	return true ;	272:1:5470:5481	6651873	11	True				
ANR	6651967	Identifier	true		6651873	0					
ANR	6651968	ReturnType	R_API bool		6651873	1					
ANR	6651969	Identifier	r_flag_zone_list		6651873	2					
ANR	6651970	ParameterList	"RFlag * f , int mode"		6651873	3					
ANR	6651971	Parameter	RFlag * f	259:28:5091:5098	6651873	0	True				
ANR	6651972	ParameterType	RFlag *		6651873	0					
ANR	6651973	Identifier	f		6651873	1					
ANR	6651974	Parameter	int mode	259:38:5101:5108	6651873	1	True				
ANR	6651975	ParameterType	int		6651873	0					
ANR	6651976	Identifier	mode		6651873	1					
ANR	6651977	CFGEntryNode	ENTRY		6651873		True				
ANR	6651978	CFGExitNode	EXIT		6651873		True				
ANR	6651979	Symbol	mode		6651873						
ANR	6651980	Symbol	f		6651873						
ANR	6651981	Symbol	true		6651873						
ANR	6651982	Symbol	iter		6651873						
ANR	6651983	Symbol	zi		6651873						
ANR	6651984	Function	main	278:14:5542:5998							
ANR	6651985	FunctionDef	main ()		6651984	0					
ANR	6651986	CompoundStatement		280:11:5570:5998	6651984	0					
ANR	6651987	IdentifierDeclStatement	"const char * a , * b ;"	281:1:5573:5590	6651984	0	True				
ANR	6651988	IdentifierDecl	* a		6651984	0					
ANR	6651989	IdentifierDeclType	const char *		6651984	0					
ANR	6651990	Identifier	a		6651984	1					
ANR	6651991	IdentifierDecl	* b		6651984	1					
ANR	6651992	IdentifierDeclType	const char *		6651984	0					
ANR	6651993	Identifier	b		6651984	1					
ANR	6651994	IdentifierDeclStatement	RFlagZone * fz = r_flag_zone_new ( ) ;	282:1:5593:5627	6651984	1	True				
ANR	6651995	IdentifierDecl	* fz = r_flag_zone_new ( )		6651984	0					
ANR	6651996	IdentifierDeclType	RFlagZone *		6651984	0					
ANR	6651997	Identifier	fz		6651984	1					
ANR	6651998	AssignmentExpression	* fz = r_flag_zone_new ( )		6651984	2		=			
ANR	6651999	Identifier	fz		6651984	0					
ANR	6652000	CallExpression	r_flag_zone_new ( )		6651984	1					
ANR	6652001	Callee	r_flag_zone_new		6651984	0					
ANR	6652002	Identifier	r_flag_zone_new		6651984	0					
ANR	6652003	ArgumentList			6651984	1					
ANR	6652004	ExpressionStatement	"FZ ( add ) ( fz , ""main"" , 0x80000 )"	284:1:5631:5659	6651984	2	True				
ANR	6652005	CallExpression	"FZ ( add ) ( fz , ""main"" , 0x80000 )"		6651984	0					
ANR	6652006	Callee	FZ ( add )		6651984	0					
ANR	6652007	CallExpression	FZ ( add )		6651984	0					
ANR	6652008	Callee	FZ		6651984	0					
ANR	6652009	Identifier	FZ		6651984	0					
ANR	6652010	ArgumentList	add		6651984	1					
ANR	6652011	Argument	add		6651984	0					
ANR	6652012	Identifier	add		6651984	0					
ANR	6652013	ArgumentList	fz		6651984	1					
ANR	6652014	Argument	fz		6651984	0					
ANR	6652015	Identifier	fz		6651984	0					
ANR	6652016	Argument	"""main"""		6651984	1					
ANR	6652017	PrimaryExpression	"""main"""		6651984	0					
ANR	6652018	Argument	0x80000		6651984	2					
ANR	6652019	PrimaryExpression	0x80000		6651984	0					
ANR	6652020	ExpressionStatement	"FZ ( add ) ( fz , ""network"" , 0x85000 )"	285:1:5662:5693	6651984	3	True				
ANR	6652021	CallExpression	"FZ ( add ) ( fz , ""network"" , 0x85000 )"		6651984	0					
ANR	6652022	Callee	FZ ( add )		6651984	0					
ANR	6652023	CallExpression	FZ ( add )		6651984	0					
ANR	6652024	Callee	FZ		6651984	0					
ANR	6652025	Identifier	FZ		6651984	0					
ANR	6652026	ArgumentList	add		6651984	1					
ANR	6652027	Argument	add		6651984	0					
ANR	6652028	Identifier	add		6651984	0					
ANR	6652029	ArgumentList	fz		6651984	1					
ANR	6652030	Argument	fz		6651984	0					
ANR	6652031	Identifier	fz		6651984	0					
ANR	6652032	Argument	"""network"""		6651984	1					
ANR	6652033	PrimaryExpression	"""network"""		6651984	0					
ANR	6652034	Argument	0x85000		6651984	2					
ANR	6652035	PrimaryExpression	0x85000		6651984	0					
ANR	6652036	ExpressionStatement	"FZ ( add ) ( fz , ""libc"" , 0x90000 )"	286:1:5696:5724	6651984	4	True				
ANR	6652037	CallExpression	"FZ ( add ) ( fz , ""libc"" , 0x90000 )"		6651984	0					
ANR	6652038	Callee	FZ ( add )		6651984	0					
ANR	6652039	CallExpression	FZ ( add )		6651984	0					
ANR	6652040	Callee	FZ		6651984	0					
ANR	6652041	Identifier	FZ		6651984	0					
ANR	6652042	ArgumentList	add		6651984	1					
ANR	6652043	Argument	add		6651984	0					
ANR	6652044	Identifier	add		6651984	0					
ANR	6652045	ArgumentList	fz		6651984	1					
ANR	6652046	Argument	fz		6651984	0					
ANR	6652047	Identifier	fz		6651984	0					
ANR	6652048	Argument	"""libc"""		6651984	1					
ANR	6652049	PrimaryExpression	"""libc"""		6651984	0					
ANR	6652050	Argument	0x90000		6651984	2					
ANR	6652051	PrimaryExpression	0x90000		6651984	0					
ANR	6652052	ExpressionStatement	"FZ ( add ) ( fz , ""network"" , 0x000 )"	288:1:5728:5757	6651984	5	True				
ANR	6652053	CallExpression	"FZ ( add ) ( fz , ""network"" , 0x000 )"		6651984	0					
ANR	6652054	Callee	FZ ( add )		6651984	0					
ANR	6652055	CallExpression	FZ ( add )		6651984	0					
ANR	6652056	Callee	FZ		6651984	0					
ANR	6652057	Identifier	FZ		6651984	0					
ANR	6652058	ArgumentList	add		6651984	1					
ANR	6652059	Argument	add		6651984	0					
ANR	6652060	Identifier	add		6651984	0					
ANR	6652061	ArgumentList	fz		6651984	1					
ANR	6652062	Argument	fz		6651984	0					
ANR	6652063	Identifier	fz		6651984	0					
ANR	6652064	Argument	"""network"""		6651984	1					
ANR	6652065	PrimaryExpression	"""network"""		6651984	0					
ANR	6652066	Argument	0x000		6651984	2					
ANR	6652067	PrimaryExpression	0x000		6651984	0					
ANR	6652068	ExpressionStatement	"FZ ( around ) ( fz , 0x83000 , & a , & b )"	290:1:5761:5792	6651984	6	True				
ANR	6652069	CallExpression	"FZ ( around ) ( fz , 0x83000 , & a , & b )"		6651984	0					
ANR	6652070	Callee	FZ ( around )		6651984	0					
ANR	6652071	CallExpression	FZ ( around )		6651984	0					
ANR	6652072	Callee	FZ		6651984	0					
ANR	6652073	Identifier	FZ		6651984	0					
ANR	6652074	ArgumentList	around		6651984	1					
ANR	6652075	Argument	around		6651984	0					
ANR	6652076	Identifier	around		6651984	0					
ANR	6652077	ArgumentList	fz		6651984	1					
ANR	6652078	Argument	fz		6651984	0					
ANR	6652079	Identifier	fz		6651984	0					
ANR	6652080	Argument	0x83000		6651984	1					
ANR	6652081	PrimaryExpression	0x83000		6651984	0					
ANR	6652082	Argument	& a		6651984	2					
ANR	6652083	UnaryOperationExpression	& a		6651984	0					
ANR	6652084	UnaryOperator	&		6651984	0					
ANR	6652085	Identifier	a		6651984	1					
ANR	6652086	Argument	& b		6651984	3					
ANR	6652087	UnaryOperationExpression	& b		6651984	0					
ANR	6652088	UnaryOperator	&		6651984	0					
ANR	6652089	Identifier	b		6651984	1					
ANR	6652090	ExpressionStatement	"printf ( ""%s %s\\n"" , a , b )"	291:1:5795:5819	6651984	7	True				
ANR	6652091	CallExpression	"printf ( ""%s %s\\n"" , a , b )"		6651984	0					
ANR	6652092	Callee	printf		6651984	0					
ANR	6652093	Identifier	printf		6651984	0					
ANR	6652094	ArgumentList	"""%s %s\\n"""		6651984	1					
ANR	6652095	Argument	"""%s %s\\n"""		6651984	0					
ANR	6652096	PrimaryExpression	"""%s %s\\n"""		6651984	0					
ANR	6652097	Argument	a		6651984	1					
ANR	6652098	Identifier	a		6651984	0					
ANR	6652099	Argument	b		6651984	2					
ANR	6652100	Identifier	b		6651984	0					
ANR	6652101	ExpressionStatement	"FZ ( around ) ( fz , 0x50000 , & a , & b )"	293:1:5823:5854	6651984	8	True				
ANR	6652102	CallExpression	"FZ ( around ) ( fz , 0x50000 , & a , & b )"		6651984	0					
ANR	6652103	Callee	FZ ( around )		6651984	0					
ANR	6652104	CallExpression	FZ ( around )		6651984	0					
ANR	6652105	Callee	FZ		6651984	0					
ANR	6652106	Identifier	FZ		6651984	0					
ANR	6652107	ArgumentList	around		6651984	1					
ANR	6652108	Argument	around		6651984	0					
ANR	6652109	Identifier	around		6651984	0					
ANR	6652110	ArgumentList	fz		6651984	1					
ANR	6652111	Argument	fz		6651984	0					
ANR	6652112	Identifier	fz		6651984	0					
ANR	6652113	Argument	0x50000		6651984	1					
ANR	6652114	PrimaryExpression	0x50000		6651984	0					
ANR	6652115	Argument	& a		6651984	2					
ANR	6652116	UnaryOperationExpression	& a		6651984	0					
ANR	6652117	UnaryOperator	&		6651984	0					
ANR	6652118	Identifier	a		6651984	1					
ANR	6652119	Argument	& b		6651984	3					
ANR	6652120	UnaryOperationExpression	& b		6651984	0					
ANR	6652121	UnaryOperator	&		6651984	0					
ANR	6652122	Identifier	b		6651984	1					
ANR	6652123	ExpressionStatement	"printf ( ""%s %s\\n"" , a , b )"	294:1:5857:5881	6651984	9	True				
ANR	6652124	CallExpression	"printf ( ""%s %s\\n"" , a , b )"		6651984	0					
ANR	6652125	Callee	printf		6651984	0					
ANR	6652126	Identifier	printf		6651984	0					
ANR	6652127	ArgumentList	"""%s %s\\n"""		6651984	1					
ANR	6652128	Argument	"""%s %s\\n"""		6651984	0					
ANR	6652129	PrimaryExpression	"""%s %s\\n"""		6651984	0					
ANR	6652130	Argument	a		6651984	1					
ANR	6652131	Identifier	a		6651984	0					
ANR	6652132	Argument	b		6651984	2					
ANR	6652133	Identifier	b		6651984	0					
ANR	6652134	ExpressionStatement	"FZ ( around ) ( fz , 0x500000 , & a , & b )"	296:1:5885:5917	6651984	10	True				
ANR	6652135	CallExpression	"FZ ( around ) ( fz , 0x500000 , & a , & b )"		6651984	0					
ANR	6652136	Callee	FZ ( around )		6651984	0					
ANR	6652137	CallExpression	FZ ( around )		6651984	0					
ANR	6652138	Callee	FZ		6651984	0					
ANR	6652139	Identifier	FZ		6651984	0					
ANR	6652140	ArgumentList	around		6651984	1					
ANR	6652141	Argument	around		6651984	0					
ANR	6652142	Identifier	around		6651984	0					
ANR	6652143	ArgumentList	fz		6651984	1					
ANR	6652144	Argument	fz		6651984	0					
ANR	6652145	Identifier	fz		6651984	0					
ANR	6652146	Argument	0x500000		6651984	1					
ANR	6652147	PrimaryExpression	0x500000		6651984	0					
ANR	6652148	Argument	& a		6651984	2					
ANR	6652149	UnaryOperationExpression	& a		6651984	0					
ANR	6652150	UnaryOperator	&		6651984	0					
ANR	6652151	Identifier	a		6651984	1					
ANR	6652152	Argument	& b		6651984	3					
ANR	6652153	UnaryOperationExpression	& b		6651984	0					
ANR	6652154	UnaryOperator	&		6651984	0					
ANR	6652155	Identifier	b		6651984	1					
ANR	6652156	ExpressionStatement	"printf ( ""%s %s\\n"" , a , b )"	297:1:5920:5944	6651984	11	True				
ANR	6652157	CallExpression	"printf ( ""%s %s\\n"" , a , b )"		6651984	0					
ANR	6652158	Callee	printf		6651984	0					
ANR	6652159	Identifier	printf		6651984	0					
ANR	6652160	ArgumentList	"""%s %s\\n"""		6651984	1					
ANR	6652161	Argument	"""%s %s\\n"""		6651984	0					
ANR	6652162	PrimaryExpression	"""%s %s\\n"""		6651984	0					
ANR	6652163	Argument	a		6651984	1					
ANR	6652164	Identifier	a		6651984	0					
ANR	6652165	Argument	b		6651984	2					
ANR	6652166	Identifier	b		6651984	0					
ANR	6652167	ExpressionStatement	FZ ( list ) ( fz )	299:1:5948:5960	6651984	12	True				
ANR	6652168	CallExpression	FZ ( list ) ( fz )		6651984	0					
ANR	6652169	Callee	FZ ( list )		6651984	0					
ANR	6652170	CallExpression	FZ ( list )		6651984	0					
ANR	6652171	Callee	FZ		6651984	0					
ANR	6652172	Identifier	FZ		6651984	0					
ANR	6652173	ArgumentList	list		6651984	1					
ANR	6652174	Argument	list		6651984	0					
ANR	6652175	Identifier	list		6651984	0					
ANR	6652176	ArgumentList	fz		6651984	1					
ANR	6652177	Argument	fz		6651984	0					
ANR	6652178	Identifier	fz		6651984	0					
ANR	6652179	ExpressionStatement	r_flag_zone_free ( fz )	301:1:5964:5985	6651984	13	True				
ANR	6652180	CallExpression	r_flag_zone_free ( fz )		6651984	0					
ANR	6652181	Callee	r_flag_zone_free		6651984	0					
ANR	6652182	Identifier	r_flag_zone_free		6651984	0					
ANR	6652183	ArgumentList	fz		6651984	1					
ANR	6652184	Argument	fz		6651984	0					
ANR	6652185	Identifier	fz		6651984	0					
ANR	6652186	ReturnStatement	return 0 ;	302:1:5988:5996	6651984	14	True				
ANR	6652187	PrimaryExpression	0		6651984	0					
ANR	6652188	ReturnType	r_flag_zone_ x int		6651984	1					
ANR	6652189	Identifier	main		6651984	2					
ANR	6652190	ParameterList			6651984	3					
ANR	6652191	CFGEntryNode	ENTRY		6651984		True				
ANR	6652192	CFGExitNode	EXIT		6651984		True				
ANR	6652193	Symbol	add		6651984						
ANR	6652194	Symbol	a		6651984						
ANR	6652195	Symbol	b		6651984						
ANR	6652196	Symbol	fz		6651984						
ANR	6652197	Symbol	r_flag_zone_new		6651984						
ANR	6652198	Symbol	& a		6651984						
ANR	6652199	Symbol	& b		6651984						
ANR	6652200	Symbol	list		6651984						
ANR	6652201	Symbol	around		6651984						
