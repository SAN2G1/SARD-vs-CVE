command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5458341	File	data/converged/CVE-2019-16718~_radare2/objc.c								
ANR	5458342	Function	r_bin_demangle_objc	6:0:99:2875							
ANR	5458343	FunctionDef	"r_bin_demangle_objc (RBinFile * bf , const char * sym)"		5458342	0					
ANR	5458344	CompoundStatement		6:63:162:2875	5458342	0					
ANR	5458345	ExpressionStatement	"r_return_val_if_fail ( ( ! bf || ( bf && bf -> o && bf -> o -> classes ) ) && sym , NULL )"	7:1:165:241	5458342	0	True				
ANR	5458346	CallExpression	"r_return_val_if_fail ( ( ! bf || ( bf && bf -> o && bf -> o -> classes ) ) && sym , NULL )"		5458342	0					
ANR	5458347	Callee	r_return_val_if_fail		5458342	0					
ANR	5458348	Identifier	r_return_val_if_fail		5458342	0					
ANR	5458349	ArgumentList	( ! bf || ( bf && bf -> o && bf -> o -> classes ) ) && sym		5458342	1					
ANR	5458350	Argument	( ! bf || ( bf && bf -> o && bf -> o -> classes ) ) && sym		5458342	0					
ANR	5458351	AndExpression	( ! bf || ( bf && bf -> o && bf -> o -> classes ) ) && sym		5458342	0		&&			
ANR	5458352	OrExpression	! bf || ( bf && bf -> o && bf -> o -> classes )		5458342	0		||			
ANR	5458353	UnaryOperationExpression	! bf		5458342	0					
ANR	5458354	UnaryOperator	!		5458342	0					
ANR	5458355	Identifier	bf		5458342	1					
ANR	5458356	AndExpression	bf && bf -> o && bf -> o -> classes		5458342	1		&&			
ANR	5458357	Identifier	bf		5458342	0					
ANR	5458358	AndExpression	bf -> o && bf -> o -> classes		5458342	1		&&			
ANR	5458359	PtrMemberAccess	bf -> o		5458342	0					
ANR	5458360	Identifier	bf		5458342	0					
ANR	5458361	Identifier	o		5458342	1					
ANR	5458362	PtrMemberAccess	bf -> o -> classes		5458342	1					
ANR	5458363	PtrMemberAccess	bf -> o		5458342	0					
ANR	5458364	Identifier	bf		5458342	0					
ANR	5458365	Identifier	o		5458342	1					
ANR	5458366	Identifier	classes		5458342	1					
ANR	5458367	Identifier	sym		5458342	1					
ANR	5458368	Argument	NULL		5458342	1					
ANR	5458369	Identifier	NULL		5458342	0					
ANR	5458370	IdentifierDeclStatement	char * ret = NULL ;	8:1:244:260	5458342	1	True				
ANR	5458371	IdentifierDecl	* ret = NULL		5458342	0					
ANR	5458372	IdentifierDeclType	char *		5458342	0					
ANR	5458373	Identifier	ret		5458342	1					
ANR	5458374	AssignmentExpression	* ret = NULL		5458342	2		=			
ANR	5458375	Identifier	NULL		5458342	0					
ANR	5458376	Identifier	NULL		5458342	1					
ANR	5458377	IdentifierDeclStatement	char * clas = NULL ;	9:1:263:280	5458342	2	True				
ANR	5458378	IdentifierDecl	* clas = NULL		5458342	0					
ANR	5458379	IdentifierDeclType	char *		5458342	0					
ANR	5458380	Identifier	clas		5458342	1					
ANR	5458381	AssignmentExpression	* clas = NULL		5458342	2		=			
ANR	5458382	Identifier	NULL		5458342	0					
ANR	5458383	Identifier	NULL		5458342	1					
ANR	5458384	IdentifierDeclStatement	char * name = NULL ;	10:1:283:300	5458342	3	True				
ANR	5458385	IdentifierDecl	* name = NULL		5458342	0					
ANR	5458386	IdentifierDeclType	char *		5458342	0					
ANR	5458387	Identifier	name		5458342	1					
ANR	5458388	AssignmentExpression	* name = NULL		5458342	2		=			
ANR	5458389	Identifier	NULL		5458342	0					
ANR	5458390	Identifier	NULL		5458342	1					
ANR	5458391	IdentifierDeclStatement	char * args = NULL ;	11:1:303:320	5458342	4	True				
ANR	5458392	IdentifierDecl	* args = NULL		5458342	0					
ANR	5458393	IdentifierDeclType	char *		5458342	0					
ANR	5458394	Identifier	args		5458342	1					
ANR	5458395	AssignmentExpression	* args = NULL		5458342	2		=			
ANR	5458396	Identifier	NULL		5458342	0					
ANR	5458397	Identifier	NULL		5458342	1					
ANR	5458398	IdentifierDeclStatement	"int i , nargs = 0 ;"	12:1:323:339	5458342	5	True				
ANR	5458399	IdentifierDecl	i		5458342	0					
ANR	5458400	IdentifierDeclType	int		5458342	0					
ANR	5458401	Identifier	i		5458342	1					
ANR	5458402	IdentifierDecl	nargs = 0		5458342	1					
ANR	5458403	IdentifierDeclType	int		5458342	0					
ANR	5458404	Identifier	nargs		5458342	1					
ANR	5458405	AssignmentExpression	nargs = 0		5458342	2		=			
ANR	5458406	Identifier	nargs		5458342	0					
ANR	5458407	PrimaryExpression	0		5458342	1					
ANR	5458408	IdentifierDeclStatement	const char * type = NULL ;	13:1:342:365	5458342	6	True				
ANR	5458409	IdentifierDecl	* type = NULL		5458342	0					
ANR	5458410	IdentifierDeclType	const char *		5458342	0					
ANR	5458411	Identifier	type		5458342	1					
ANR	5458412	AssignmentExpression	* type = NULL		5458342	2		=			
ANR	5458413	Identifier	NULL		5458342	0					
ANR	5458414	Identifier	NULL		5458342	1					
ANR	5458415	IfStatement	if ( bf && bf -> o && bf -> o -> classes )		5458342	7					
ANR	5458416	Condition	bf && bf -> o && bf -> o -> classes	15:5:373:401	5458342	0	True				
ANR	5458417	AndExpression	bf && bf -> o && bf -> o -> classes		5458342	0		&&			
ANR	5458418	Identifier	bf		5458342	0					
ANR	5458419	AndExpression	bf -> o && bf -> o -> classes		5458342	1		&&			
ANR	5458420	PtrMemberAccess	bf -> o		5458342	0					
ANR	5458421	Identifier	bf		5458342	0					
ANR	5458422	Identifier	o		5458342	1					
ANR	5458423	PtrMemberAccess	bf -> o -> classes		5458342	1					
ANR	5458424	PtrMemberAccess	bf -> o		5458342	0					
ANR	5458425	Identifier	bf		5458342	0					
ANR	5458426	Identifier	o		5458342	1					
ANR	5458427	Identifier	classes		5458342	1					
ANR	5458428	CompoundStatement		10:36:241:241	5458342	1					
ANR	5458429	ExpressionStatement	bf = NULL	16:2:408:417	5458342	0	True				
ANR	5458430	AssignmentExpression	bf = NULL		5458342	0		=			
ANR	5458431	Identifier	bf		5458342	0					
ANR	5458432	Identifier	NULL		5458342	1					
ANR	5458433	IfStatement	"if ( ! strncmp ( sym , ""_OBJC_Class_"" , 12 ) )"		5458342	8					
ANR	5458434	Condition	"! strncmp ( sym , ""_OBJC_Class_"" , 12 )"	19:5:442:475	5458342	0	True				
ANR	5458435	UnaryOperationExpression	"! strncmp ( sym , ""_OBJC_Class_"" , 12 )"		5458342	0					
ANR	5458436	UnaryOperator	!		5458342	0					
ANR	5458437	CallExpression	"strncmp ( sym , ""_OBJC_Class_"" , 12 )"		5458342	1					
ANR	5458438	Callee	strncmp		5458342	0					
ANR	5458439	Identifier	strncmp		5458342	0					
ANR	5458440	ArgumentList	sym		5458342	1					
ANR	5458441	Argument	sym		5458342	0					
ANR	5458442	Identifier	sym		5458342	0					
ANR	5458443	Argument	"""_OBJC_Class_"""		5458342	1					
ANR	5458444	PrimaryExpression	"""_OBJC_Class_"""		5458342	0					
ANR	5458445	Argument	12		5458342	2					
ANR	5458446	PrimaryExpression	12		5458342	0					
ANR	5458447	CompoundStatement		15:2:319:351	5458342	1					
ANR	5458448	IdentifierDeclStatement	const char * className = sym + 12 ;	20:2:482:514	5458342	0	True				
ANR	5458449	IdentifierDecl	* className = sym + 12		5458342	0					
ANR	5458450	IdentifierDeclType	const char *		5458342	0					
ANR	5458451	Identifier	className		5458342	1					
ANR	5458452	AssignmentExpression	* className = sym + 12		5458342	2		=			
ANR	5458453	Identifier	className		5458342	0					
ANR	5458454	AdditiveExpression	sym + 12		5458342	1		+			
ANR	5458455	Identifier	sym		5458342	0					
ANR	5458456	PrimaryExpression	12		5458342	1					
ANR	5458457	ExpressionStatement	"ret = r_str_newf ( ""class %s"" , className )"	21:2:518:558	5458342	1	True				
ANR	5458458	AssignmentExpression	"ret = r_str_newf ( ""class %s"" , className )"		5458342	0		=			
ANR	5458459	Identifier	ret		5458342	0					
ANR	5458460	CallExpression	"r_str_newf ( ""class %s"" , className )"		5458342	1					
ANR	5458461	Callee	r_str_newf		5458342	0					
ANR	5458462	Identifier	r_str_newf		5458342	0					
ANR	5458463	ArgumentList	"""class %s"""		5458342	1					
ANR	5458464	Argument	"""class %s"""		5458342	0					
ANR	5458465	PrimaryExpression	"""class %s"""		5458342	0					
ANR	5458466	Argument	className		5458342	1					
ANR	5458467	Identifier	className		5458342	0					
ANR	5458468	IfStatement	if ( bf )		5458342	2					
ANR	5458469	Condition	bf	22:6:566:567	5458342	0	True				
ANR	5458470	Identifier	bf		5458342	0					
ANR	5458471	CompoundStatement		17:10:407:407	5458342	1					
ANR	5458472	ExpressionStatement	"r_bin_file_add_class ( bf , className , NULL , R_BIN_CLASS_PUBLIC )"	23:3:575:637	5458342	0	True				
ANR	5458473	CallExpression	"r_bin_file_add_class ( bf , className , NULL , R_BIN_CLASS_PUBLIC )"		5458342	0					
ANR	5458474	Callee	r_bin_file_add_class		5458342	0					
ANR	5458475	Identifier	r_bin_file_add_class		5458342	0					
ANR	5458476	ArgumentList	bf		5458342	1					
ANR	5458477	Argument	bf		5458342	0					
ANR	5458478	Identifier	bf		5458342	0					
ANR	5458479	Argument	className		5458342	1					
ANR	5458480	Identifier	className		5458342	0					
ANR	5458481	Argument	NULL		5458342	2					
ANR	5458482	Identifier	NULL		5458342	0					
ANR	5458483	Argument	R_BIN_CLASS_PUBLIC		5458342	3					
ANR	5458484	Identifier	R_BIN_CLASS_PUBLIC		5458342	0					
ANR	5458485	ReturnStatement	return ret ;	25:2:645:655	5458342	3	True				
ANR	5458486	Identifier	ret		5458342	0					
ANR	5458487	IfStatement	"if ( ! strncmp ( sym , ""_OBJC_CLASS_$_"" , 14 ) )"		5458342	9					
ANR	5458488	Condition	"! strncmp ( sym , ""_OBJC_CLASS_$_"" , 14 )"	27:5:665:700	5458342	0	True				
ANR	5458489	UnaryOperationExpression	"! strncmp ( sym , ""_OBJC_CLASS_$_"" , 14 )"		5458342	0					
ANR	5458490	UnaryOperator	!		5458342	0					
ANR	5458491	CallExpression	"strncmp ( sym , ""_OBJC_CLASS_$_"" , 14 )"		5458342	1					
ANR	5458492	Callee	strncmp		5458342	0					
ANR	5458493	Identifier	strncmp		5458342	0					
ANR	5458494	ArgumentList	sym		5458342	1					
ANR	5458495	Argument	sym		5458342	0					
ANR	5458496	Identifier	sym		5458342	0					
ANR	5458497	Argument	"""_OBJC_CLASS_$_"""		5458342	1					
ANR	5458498	PrimaryExpression	"""_OBJC_CLASS_$_"""		5458342	0					
ANR	5458499	Argument	14		5458342	2					
ANR	5458500	PrimaryExpression	14		5458342	0					
ANR	5458501	CompoundStatement		23:2:544:576	5458342	1					
ANR	5458502	IdentifierDeclStatement	const char * className = sym + 14 ;	28:2:707:739	5458342	0	True				
ANR	5458503	IdentifierDecl	* className = sym + 14		5458342	0					
ANR	5458504	IdentifierDeclType	const char *		5458342	0					
ANR	5458505	Identifier	className		5458342	1					
ANR	5458506	AssignmentExpression	* className = sym + 14		5458342	2		=			
ANR	5458507	Identifier	className		5458342	0					
ANR	5458508	AdditiveExpression	sym + 14		5458342	1		+			
ANR	5458509	Identifier	sym		5458342	0					
ANR	5458510	PrimaryExpression	14		5458342	1					
ANR	5458511	ExpressionStatement	"ret = r_str_newf ( ""class %s"" , className )"	29:2:743:783	5458342	1	True				
ANR	5458512	AssignmentExpression	"ret = r_str_newf ( ""class %s"" , className )"		5458342	0		=			
ANR	5458513	Identifier	ret		5458342	0					
ANR	5458514	CallExpression	"r_str_newf ( ""class %s"" , className )"		5458342	1					
ANR	5458515	Callee	r_str_newf		5458342	0					
ANR	5458516	Identifier	r_str_newf		5458342	0					
ANR	5458517	ArgumentList	"""class %s"""		5458342	1					
ANR	5458518	Argument	"""class %s"""		5458342	0					
ANR	5458519	PrimaryExpression	"""class %s"""		5458342	0					
ANR	5458520	Argument	className		5458342	1					
ANR	5458521	Identifier	className		5458342	0					
ANR	5458522	IfStatement	if ( bf )		5458342	2					
ANR	5458523	Condition	bf	30:6:791:792	5458342	0	True				
ANR	5458524	Identifier	bf		5458342	0					
ANR	5458525	CompoundStatement		25:10:632:632	5458342	1					
ANR	5458526	ExpressionStatement	"r_bin_file_add_class ( bf , className , NULL , R_BIN_CLASS_PUBLIC )"	31:3:800:862	5458342	0	True				
ANR	5458527	CallExpression	"r_bin_file_add_class ( bf , className , NULL , R_BIN_CLASS_PUBLIC )"		5458342	0					
ANR	5458528	Callee	r_bin_file_add_class		5458342	0					
ANR	5458529	Identifier	r_bin_file_add_class		5458342	0					
ANR	5458530	ArgumentList	bf		5458342	1					
ANR	5458531	Argument	bf		5458342	0					
ANR	5458532	Identifier	bf		5458342	0					
ANR	5458533	Argument	className		5458342	1					
ANR	5458534	Identifier	className		5458342	0					
ANR	5458535	Argument	NULL		5458342	2					
ANR	5458536	Identifier	NULL		5458342	0					
ANR	5458537	Argument	R_BIN_CLASS_PUBLIC		5458342	3					
ANR	5458538	Identifier	R_BIN_CLASS_PUBLIC		5458342	0					
ANR	5458539	ReturnStatement	return ret ;	33:2:870:880	5458342	3	True				
ANR	5458540	Identifier	ret		5458342	0					
ANR	5458541	IfStatement	"if ( ! strncmp ( sym , ""_OBJC_IVAR_$_"" , 13 ) )"		5458342	10					
ANR	5458542	Condition	"! strncmp ( sym , ""_OBJC_IVAR_$_"" , 13 )"	36:5:904:938	5458342	0	True				
ANR	5458543	UnaryOperationExpression	"! strncmp ( sym , ""_OBJC_IVAR_$_"" , 13 )"		5458342	0					
ANR	5458544	UnaryOperator	!		5458342	0					
ANR	5458545	CallExpression	"strncmp ( sym , ""_OBJC_IVAR_$_"" , 13 )"		5458342	1					
ANR	5458546	Callee	strncmp		5458342	0					
ANR	5458547	Identifier	strncmp		5458342	0					
ANR	5458548	ArgumentList	sym		5458342	1					
ANR	5458549	Argument	sym		5458342	0					
ANR	5458550	Identifier	sym		5458342	0					
ANR	5458551	Argument	"""_OBJC_IVAR_$_"""		5458342	1					
ANR	5458552	PrimaryExpression	"""_OBJC_IVAR_$_"""		5458342	0					
ANR	5458553	Argument	13		5458342	2					
ANR	5458554	PrimaryExpression	13		5458342	0					
ANR	5458555	CompoundStatement		33:2:810:838	5458342	1					
ANR	5458556	ExpressionStatement	clas = strdup ( sym + 13 )	37:2:945:969	5458342	0	True				
ANR	5458557	AssignmentExpression	clas = strdup ( sym + 13 )		5458342	0		=			
ANR	5458558	Identifier	clas		5458342	0					
ANR	5458559	CallExpression	strdup ( sym + 13 )		5458342	1					
ANR	5458560	Callee	strdup		5458342	0					
ANR	5458561	Identifier	strdup		5458342	0					
ANR	5458562	ArgumentList	sym + 13		5458342	1					
ANR	5458563	Argument	sym + 13		5458342	0					
ANR	5458564	AdditiveExpression	sym + 13		5458342	0		+			
ANR	5458565	Identifier	sym		5458342	0					
ANR	5458566	PrimaryExpression	13		5458342	1					
ANR	5458567	IdentifierDeclStatement	"char * p = strchr ( clas , '.' ) ;"	38:2:973:1001	5458342	1	True				
ANR	5458568	IdentifierDecl	"* p = strchr ( clas , '.' )"		5458342	0					
ANR	5458569	IdentifierDeclType	char *		5458342	0					
ANR	5458570	Identifier	p		5458342	1					
ANR	5458571	AssignmentExpression	"* p = strchr ( clas , '.' )"		5458342	2		=			
ANR	5458572	Identifier	p		5458342	0					
ANR	5458573	CallExpression	"strchr ( clas , '.' )"		5458342	1					
ANR	5458574	Callee	strchr		5458342	0					
ANR	5458575	Identifier	strchr		5458342	0					
ANR	5458576	ArgumentList	clas		5458342	1					
ANR	5458577	Argument	clas		5458342	0					
ANR	5458578	Identifier	clas		5458342	0					
ANR	5458579	Argument	'.'		5458342	1					
ANR	5458580	PrimaryExpression	'.'		5458342	0					
ANR	5458581	ExpressionStatement	"type = ""field"""	39:2:1005:1019	5458342	2	True				
ANR	5458582	AssignmentExpression	"type = ""field"""		5458342	0		=			
ANR	5458583	Identifier	type		5458342	0					
ANR	5458584	PrimaryExpression	"""field"""		5458342	1					
ANR	5458585	IfStatement	if ( p )		5458342	3					
ANR	5458586	Condition	p	40:6:1027:1027	5458342	0	True				
ANR	5458587	Identifier	p		5458342	0					
ANR	5458588	CompoundStatement		35:9:867:867	5458342	1					
ANR	5458589	ExpressionStatement	* p = 0	41:3:1035:1041	5458342	0	True				
ANR	5458590	AssignmentExpression	* p = 0		5458342	0		=			
ANR	5458591	UnaryOperationExpression	* p		5458342	0					
ANR	5458592	UnaryOperator	*		5458342	0					
ANR	5458593	Identifier	p		5458342	1					
ANR	5458594	PrimaryExpression	0		5458342	1					
ANR	5458595	ExpressionStatement	name = strdup ( p + 1 )	42:3:1046:1067	5458342	1	True				
ANR	5458596	AssignmentExpression	name = strdup ( p + 1 )		5458342	0		=			
ANR	5458597	Identifier	name		5458342	0					
ANR	5458598	CallExpression	strdup ( p + 1 )		5458342	1					
ANR	5458599	Callee	strdup		5458342	0					
ANR	5458600	Identifier	strdup		5458342	0					
ANR	5458601	ArgumentList	p + 1		5458342	1					
ANR	5458602	Argument	p + 1		5458342	0					
ANR	5458603	AdditiveExpression	p + 1		5458342	0		+			
ANR	5458604	Identifier	p		5458342	0					
ANR	5458605	PrimaryExpression	1		5458342	1					
ANR	5458606	ElseStatement	else		5458342	0					
ANR	5458607	CompoundStatement		38:9:915:915	5458342	0					
ANR	5458608	ExpressionStatement	name = NULL	44:3:1083:1094	5458342	0	True				
ANR	5458609	AssignmentExpression	name = NULL		5458342	0		=			
ANR	5458610	Identifier	name		5458342	0					
ANR	5458611	Identifier	NULL		5458342	1					
ANR	5458612	IfStatement	if ( bf )		5458342	4					
ANR	5458613	Condition	bf	46:6:1106:1107	5458342	0	True				
ANR	5458614	Identifier	bf		5458342	0					
ANR	5458615	CompoundStatement		41:10:947:947	5458342	1					
ANR	5458616	ExpressionStatement	"r_bin_file_add_field ( bf , clas , name )"	47:3:1115:1152	5458342	0	True				
ANR	5458617	CallExpression	"r_bin_file_add_field ( bf , clas , name )"		5458342	0					
ANR	5458618	Callee	r_bin_file_add_field		5458342	0					
ANR	5458619	Identifier	r_bin_file_add_field		5458342	0					
ANR	5458620	ArgumentList	bf		5458342	1					
ANR	5458621	Argument	bf		5458342	0					
ANR	5458622	Identifier	bf		5458342	0					
ANR	5458623	Argument	clas		5458342	1					
ANR	5458624	Identifier	clas		5458342	0					
ANR	5458625	Argument	name		5458342	2					
ANR	5458626	Identifier	name		5458342	0					
ANR	5458627	IfStatement	if ( sym && sym [ 0 ] && sym [ 1 ] == '[' )		5458342	11					
ANR	5458628	Condition	sym && sym [ 0 ] && sym [ 1 ] == '['	51:5:1181:1210	5458342	0	True				
ANR	5458629	AndExpression	sym && sym [ 0 ] && sym [ 1 ] == '['		5458342	0		&&			
ANR	5458630	Identifier	sym		5458342	0					
ANR	5458631	AndExpression	sym [ 0 ] && sym [ 1 ] == '['		5458342	1		&&			
ANR	5458632	ArrayIndexing	sym [ 0 ]		5458342	0					
ANR	5458633	Identifier	sym		5458342	0					
ANR	5458634	PrimaryExpression	0		5458342	1					
ANR	5458635	EqualityExpression	sym [ 1 ] == '['		5458342	1		==			
ANR	5458636	ArrayIndexing	sym [ 1 ]		5458342	0					
ANR	5458637	Identifier	sym		5458342	0					
ANR	5458638	PrimaryExpression	1		5458342	1					
ANR	5458639	PrimaryExpression	'['		5458342	1					
ANR	5458640	CompoundStatement		46:37:1050:1050	5458342	1					
ANR	5458641	IfStatement	if ( sym [ 0 ] == '+' )		5458342	0					
ANR	5458642	Condition	sym [ 0 ] == '+'	52:6:1236:1248	5458342	0	True				
ANR	5458643	EqualityExpression	sym [ 0 ] == '+'		5458342	0		==			
ANR	5458644	ArrayIndexing	sym [ 0 ]		5458342	0					
ANR	5458645	Identifier	sym		5458342	0					
ANR	5458646	PrimaryExpression	0		5458342	1					
ANR	5458647	PrimaryExpression	'+'		5458342	1					
ANR	5458648	CompoundStatement		47:21:1088:1088	5458342	1					
ANR	5458649	ExpressionStatement	"type = ""static"""	53:3:1256:1271	5458342	0	True				
ANR	5458650	AssignmentExpression	"type = ""static"""		5458342	0		=			
ANR	5458651	Identifier	type		5458342	0					
ANR	5458652	PrimaryExpression	"""static"""		5458342	1					
ANR	5458653	ElseStatement	else		5458342	0					
ANR	5458654	IfStatement	if ( sym [ 0 ] == '-' )		5458342	0					
ANR	5458655	Condition	sym [ 0 ] == '-'	54:13:1286:1298	5458342	0	True				
ANR	5458656	EqualityExpression	sym [ 0 ] == '-'		5458342	0		==			
ANR	5458657	ArrayIndexing	sym [ 0 ]		5458342	0					
ANR	5458658	Identifier	sym		5458342	0					
ANR	5458659	PrimaryExpression	0		5458342	1					
ANR	5458660	PrimaryExpression	'-'		5458342	1					
ANR	5458661	CompoundStatement		49:28:1138:1138	5458342	1					
ANR	5458662	ExpressionStatement	"type = ""public"""	55:3:1306:1321	5458342	0	True				
ANR	5458663	AssignmentExpression	"type = ""public"""		5458342	0		=			
ANR	5458664	Identifier	type		5458342	0					
ANR	5458665	PrimaryExpression	"""public"""		5458342	1					
ANR	5458666	IfStatement	if ( type )		5458342	1					
ANR	5458667	Condition	type	57:6:1333:1336	5458342	0	True				
ANR	5458668	Identifier	type		5458342	0					
ANR	5458669	CompoundStatement		52:12:1176:1176	5458342	1					
ANR	5458670	ExpressionStatement	free ( clas )	58:3:1344:1355	5458342	0	True				
ANR	5458671	CallExpression	free ( clas )		5458342	0					
ANR	5458672	Callee	free		5458342	0					
ANR	5458673	Identifier	free		5458342	0					
ANR	5458674	ArgumentList	clas		5458342	1					
ANR	5458675	Argument	clas		5458342	0					
ANR	5458676	Identifier	clas		5458342	0					
ANR	5458677	ExpressionStatement	clas = strdup ( sym + 2 )	59:3:1360:1383	5458342	1	True				
ANR	5458678	AssignmentExpression	clas = strdup ( sym + 2 )		5458342	0		=			
ANR	5458679	Identifier	clas		5458342	0					
ANR	5458680	CallExpression	strdup ( sym + 2 )		5458342	1					
ANR	5458681	Callee	strdup		5458342	0					
ANR	5458682	Identifier	strdup		5458342	0					
ANR	5458683	ArgumentList	sym + 2		5458342	1					
ANR	5458684	Argument	sym + 2		5458342	0					
ANR	5458685	AdditiveExpression	sym + 2		5458342	0		+			
ANR	5458686	Identifier	sym		5458342	0					
ANR	5458687	PrimaryExpression	2		5458342	1					
ANR	5458688	ExpressionStatement	"name = strchr ( clas , ' ' )"	60:3:1388:1413	5458342	2	True				
ANR	5458689	AssignmentExpression	"name = strchr ( clas , ' ' )"		5458342	0		=			
ANR	5458690	Identifier	name		5458342	0					
ANR	5458691	CallExpression	"strchr ( clas , ' ' )"		5458342	1					
ANR	5458692	Callee	strchr		5458342	0					
ANR	5458693	Identifier	strchr		5458342	0					
ANR	5458694	ArgumentList	clas		5458342	1					
ANR	5458695	Argument	clas		5458342	0					
ANR	5458696	Identifier	clas		5458342	0					
ANR	5458697	Argument	' '		5458342	1					
ANR	5458698	PrimaryExpression	' '		5458342	0					
ANR	5458699	IfStatement	if ( name )		5458342	3					
ANR	5458700	Condition	name	61:7:1422:1425	5458342	0	True				
ANR	5458701	Identifier	name		5458342	0					
ANR	5458702	CompoundStatement		56:13:1265:1265	5458342	1					
ANR	5458703	ExpressionStatement	* name ++ = 0	62:4:1434:1445	5458342	0	True				
ANR	5458704	AssignmentExpression	* name ++ = 0		5458342	0		=			
ANR	5458705	UnaryOperationExpression	* name ++		5458342	0					
ANR	5458706	UnaryOperator	*		5458342	0					
ANR	5458707	PostIncDecOperationExpression	name ++		5458342	1					
ANR	5458708	Identifier	name		5458342	0					
ANR	5458709	IncDec	++		5458342	1					
ANR	5458710	PrimaryExpression	0		5458342	1					
ANR	5458711	ExpressionStatement	name = strdup ( name )	63:4:1451:1471	5458342	1	True				
ANR	5458712	AssignmentExpression	name = strdup ( name )		5458342	0		=			
ANR	5458713	Identifier	name		5458342	0					
ANR	5458714	CallExpression	strdup ( name )		5458342	1					
ANR	5458715	Callee	strdup		5458342	0					
ANR	5458716	Identifier	strdup		5458342	0					
ANR	5458717	ArgumentList	name		5458342	1					
ANR	5458718	Argument	name		5458342	0					
ANR	5458719	Identifier	name		5458342	0					
ANR	5458720	IfStatement	if ( ! name )		5458342	2					
ANR	5458721	Condition	! name	64:8:1481:1485	5458342	0	True				
ANR	5458722	UnaryOperationExpression	! name		5458342	0					
ANR	5458723	UnaryOperator	!		5458342	0					
ANR	5458724	Identifier	name		5458342	1					
ANR	5458725	CompoundStatement		59:14:1324:1324	5458342	1					
ANR	5458726	ExpressionStatement	free ( clas )	65:5:1494:1505	5458342	0	True				
ANR	5458727	CallExpression	free ( clas )		5458342	0					
ANR	5458728	Callee	free		5458342	0					
ANR	5458729	Identifier	free		5458342	0					
ANR	5458730	ArgumentList	clas		5458342	1					
ANR	5458731	Argument	clas		5458342	0					
ANR	5458732	Identifier	clas		5458342	0					
ANR	5458733	ReturnStatement	return NULL ;	66:5:1512:1523	5458342	1	True				
ANR	5458734	Identifier	NULL		5458342	0					
ANR	5458735	ForStatement	for ( i = 0 ; name [ i ] ; i ++ )		5458342	3					
ANR	5458736	ForInit	i = 0 ;	68:9:1540:1545	5458342	0	True				
ANR	5458737	AssignmentExpression	i = 0		5458342	0		=			
ANR	5458738	Identifier	i		5458342	0					
ANR	5458739	PrimaryExpression	0		5458342	1					
ANR	5458740	Condition	name [ i ]	68:16:1547:1553	5458342	1	True				
ANR	5458741	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458742	Identifier	name		5458342	0					
ANR	5458743	Identifier	i		5458342	1					
ANR	5458744	PostIncDecOperationExpression	i ++	68:25:1556:1558	5458342	2	True				
ANR	5458745	Identifier	i		5458342	0					
ANR	5458746	IncDec	++		5458342	1					
ANR	5458747	CompoundStatement		63:30:1398:1398	5458342	3					
ANR	5458748	IfStatement	if ( name [ i ] == ']' )		5458342	0					
ANR	5458749	Condition	name [ i ] == ']'	69:9:1572:1583	5458342	0	True				
ANR	5458750	EqualityExpression	name [ i ] == ']'		5458342	0		==			
ANR	5458751	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458752	Identifier	name		5458342	0					
ANR	5458753	Identifier	i		5458342	1					
ANR	5458754	PrimaryExpression	']'		5458342	1					
ANR	5458755	CompoundStatement		64:23:1423:1423	5458342	1					
ANR	5458756	ExpressionStatement	name [ i ] = 0	70:6:1594:1605	5458342	0	True				
ANR	5458757	AssignmentExpression	name [ i ] = 0		5458342	0		=			
ANR	5458758	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458759	Identifier	name		5458342	0					
ANR	5458760	Identifier	i		5458342	1					
ANR	5458761	PrimaryExpression	0		5458342	1					
ANR	5458762	IfStatement	if ( name [ i ] == ':' )		5458342	1					
ANR	5458763	Condition	name [ i ] == ':'	72:9:1623:1634	5458342	0	True				
ANR	5458764	EqualityExpression	name [ i ] == ':'		5458342	0		==			
ANR	5458765	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458766	Identifier	name		5458342	0					
ANR	5458767	Identifier	i		5458342	1					
ANR	5458768	PrimaryExpression	':'		5458342	1					
ANR	5458769	CompoundStatement		67:23:1474:1474	5458342	1					
ANR	5458770	ExpressionStatement	nargs ++	73:6:1645:1652	5458342	0	True				
ANR	5458771	PostIncDecOperationExpression	nargs ++		5458342	0					
ANR	5458772	Identifier	nargs		5458342	0					
ANR	5458773	IncDec	++		5458342	1					
ANR	5458774	ExpressionStatement	name [ i ] = 0	74:6:1660:1671	5458342	1	True				
ANR	5458775	AssignmentExpression	name [ i ] = 0		5458342	0		=			
ANR	5458776	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458777	Identifier	name		5458342	0					
ANR	5458778	Identifier	i		5458342	1					
ANR	5458779	PrimaryExpression	0		5458342	1					
ANR	5458780	IfStatement	if ( sym [ 0 ] == '_' && sym [ 1 ] && sym [ 2 ] == '_' )		5458342	12					
ANR	5458781	Condition	sym [ 0 ] == '_' && sym [ 1 ] && sym [ 2 ] == '_'	80:5:1703:1742	5458342	0	True				
ANR	5458782	AndExpression	sym [ 0 ] == '_' && sym [ 1 ] && sym [ 2 ] == '_'		5458342	0		&&			
ANR	5458783	EqualityExpression	sym [ 0 ] == '_'		5458342	0		==			
ANR	5458784	ArrayIndexing	sym [ 0 ]		5458342	0					
ANR	5458785	Identifier	sym		5458342	0					
ANR	5458786	PrimaryExpression	0		5458342	1					
ANR	5458787	PrimaryExpression	'_'		5458342	1					
ANR	5458788	AndExpression	sym [ 1 ] && sym [ 2 ] == '_'		5458342	1		&&			
ANR	5458789	ArrayIndexing	sym [ 1 ]		5458342	0					
ANR	5458790	Identifier	sym		5458342	0					
ANR	5458791	PrimaryExpression	1		5458342	1					
ANR	5458792	EqualityExpression	sym [ 2 ] == '_'		5458342	1		==			
ANR	5458793	ArrayIndexing	sym [ 2 ]		5458342	0					
ANR	5458794	Identifier	sym		5458342	0					
ANR	5458795	PrimaryExpression	2		5458342	1					
ANR	5458796	PrimaryExpression	'_'		5458342	1					
ANR	5458797	CompoundStatement		75:47:1582:1582	5458342	1					
ANR	5458798	ExpressionStatement	free ( clas )	81:2:1762:1773	5458342	0	True				
ANR	5458799	CallExpression	free ( clas )		5458342	0					
ANR	5458800	Callee	free		5458342	0					
ANR	5458801	Identifier	free		5458342	0					
ANR	5458802	ArgumentList	clas		5458342	1					
ANR	5458803	Argument	clas		5458342	0					
ANR	5458804	Identifier	clas		5458342	0					
ANR	5458805	ExpressionStatement	clas = strdup ( sym + 3 )	82:2:1777:1800	5458342	1	True				
ANR	5458806	AssignmentExpression	clas = strdup ( sym + 3 )		5458342	0		=			
ANR	5458807	Identifier	clas		5458342	0					
ANR	5458808	CallExpression	strdup ( sym + 3 )		5458342	1					
ANR	5458809	Callee	strdup		5458342	0					
ANR	5458810	Identifier	strdup		5458342	0					
ANR	5458811	ArgumentList	sym + 3		5458342	1					
ANR	5458812	Argument	sym + 3		5458342	0					
ANR	5458813	AdditiveExpression	sym + 3		5458342	0		+			
ANR	5458814	Identifier	sym		5458342	0					
ANR	5458815	PrimaryExpression	3		5458342	1					
ANR	5458816	ExpressionStatement	"args = strstr ( clas , ""__"" )"	83:2:1804:1830	5458342	2	True				
ANR	5458817	AssignmentExpression	"args = strstr ( clas , ""__"" )"		5458342	0		=			
ANR	5458818	Identifier	args		5458342	0					
ANR	5458819	CallExpression	"strstr ( clas , ""__"" )"		5458342	1					
ANR	5458820	Callee	strstr		5458342	0					
ANR	5458821	Identifier	strstr		5458342	0					
ANR	5458822	ArgumentList	clas		5458342	1					
ANR	5458823	Argument	clas		5458342	0					
ANR	5458824	Identifier	clas		5458342	0					
ANR	5458825	Argument	"""__"""		5458342	1					
ANR	5458826	PrimaryExpression	"""__"""		5458342	0					
ANR	5458827	IfStatement	if ( ! args )		5458342	3					
ANR	5458828	Condition	! args	84:6:1838:1842	5458342	0	True				
ANR	5458829	UnaryOperationExpression	! args		5458342	0					
ANR	5458830	UnaryOperator	!		5458342	0					
ANR	5458831	Identifier	args		5458342	1					
ANR	5458832	CompoundStatement		79:13:1682:1682	5458342	1					
ANR	5458833	ExpressionStatement	free ( clas )	85:3:1850:1861	5458342	0	True				
ANR	5458834	CallExpression	free ( clas )		5458342	0					
ANR	5458835	Callee	free		5458342	0					
ANR	5458836	Identifier	free		5458342	0					
ANR	5458837	ArgumentList	clas		5458342	1					
ANR	5458838	Argument	clas		5458342	0					
ANR	5458839	Identifier	clas		5458342	0					
ANR	5458840	IfStatement	if ( name != clas )		5458342	1					
ANR	5458841	Condition	name != clas	86:7:1870:1881	5458342	0	True				
ANR	5458842	EqualityExpression	name != clas		5458342	0		!=			
ANR	5458843	Identifier	name		5458342	0					
ANR	5458844	Identifier	clas		5458342	1					
ANR	5458845	CompoundStatement		81:21:1721:1721	5458342	1					
ANR	5458846	ExpressionStatement	free ( name )	87:4:1890:1901	5458342	0	True				
ANR	5458847	CallExpression	free ( name )		5458342	0					
ANR	5458848	Callee	free		5458342	0					
ANR	5458849	Identifier	free		5458342	0					
ANR	5458850	ArgumentList	name		5458342	1					
ANR	5458851	Argument	name		5458342	0					
ANR	5458852	Identifier	name		5458342	0					
ANR	5458853	ReturnStatement	return NULL ;	89:3:1911:1922	5458342	2	True				
ANR	5458854	Identifier	NULL		5458342	0					
ANR	5458855	ExpressionStatement	* args = 0	91:2:1930:1939	5458342	4	True				
ANR	5458856	AssignmentExpression	* args = 0		5458342	0		=			
ANR	5458857	UnaryOperationExpression	* args		5458342	0					
ANR	5458858	UnaryOperator	*		5458342	0					
ANR	5458859	Identifier	args		5458342	1					
ANR	5458860	PrimaryExpression	0		5458342	1					
ANR	5458861	ExpressionStatement	free ( name )	92:2:1943:1954	5458342	5	True				
ANR	5458862	CallExpression	free ( name )		5458342	0					
ANR	5458863	Callee	free		5458342	0					
ANR	5458864	Identifier	free		5458342	0					
ANR	5458865	ArgumentList	name		5458342	1					
ANR	5458866	Argument	name		5458342	0					
ANR	5458867	Identifier	name		5458342	0					
ANR	5458868	ExpressionStatement	name = strdup ( args + 2 )	93:2:1958:1982	5458342	6	True				
ANR	5458869	AssignmentExpression	name = strdup ( args + 2 )		5458342	0		=			
ANR	5458870	Identifier	name		5458342	0					
ANR	5458871	CallExpression	strdup ( args + 2 )		5458342	1					
ANR	5458872	Callee	strdup		5458342	0					
ANR	5458873	Identifier	strdup		5458342	0					
ANR	5458874	ArgumentList	args + 2		5458342	1					
ANR	5458875	Argument	args + 2		5458342	0					
ANR	5458876	AdditiveExpression	args + 2		5458342	0		+			
ANR	5458877	Identifier	args		5458342	0					
ANR	5458878	PrimaryExpression	2		5458342	1					
ANR	5458879	IfStatement	if ( ! name )		5458342	7					
ANR	5458880	Condition	! name	94:6:1990:1994	5458342	0	True				
ANR	5458881	UnaryOperationExpression	! name		5458342	0					
ANR	5458882	UnaryOperator	!		5458342	0					
ANR	5458883	Identifier	name		5458342	1					
ANR	5458884	CompoundStatement		89:13:1834:1834	5458342	1					
ANR	5458885	ExpressionStatement	free ( clas )	95:3:2002:2013	5458342	0	True				
ANR	5458886	CallExpression	free ( clas )		5458342	0					
ANR	5458887	Callee	free		5458342	0					
ANR	5458888	Identifier	free		5458342	0					
ANR	5458889	ArgumentList	clas		5458342	1					
ANR	5458890	Argument	clas		5458342	0					
ANR	5458891	Identifier	clas		5458342	0					
ANR	5458892	ReturnStatement	return NULL ;	96:3:2018:2029	5458342	1	True				
ANR	5458893	Identifier	NULL		5458342	0					
ANR	5458894	ExpressionStatement	args = NULL	98:2:2037:2048	5458342	8	True				
ANR	5458895	AssignmentExpression	args = NULL		5458342	0		=			
ANR	5458896	Identifier	args		5458342	0					
ANR	5458897	Identifier	NULL		5458342	1					
ANR	5458898	ForStatement	for ( i = 0 ; name [ i ] ; i ++ )		5458342	9					
ANR	5458899	ForInit	i = 0 ;	99:7:2057:2062	5458342	0	True				
ANR	5458900	AssignmentExpression	i = 0		5458342	0		=			
ANR	5458901	Identifier	i		5458342	0					
ANR	5458902	PrimaryExpression	0		5458342	1					
ANR	5458903	Condition	name [ i ]	99:14:2064:2070	5458342	1	True				
ANR	5458904	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458905	Identifier	name		5458342	0					
ANR	5458906	Identifier	i		5458342	1					
ANR	5458907	PostIncDecOperationExpression	i ++	99:23:2073:2075	5458342	2	True				
ANR	5458908	Identifier	i		5458342	0					
ANR	5458909	IncDec	++		5458342	1					
ANR	5458910	CompoundStatement		94:28:1915:1915	5458342	3					
ANR	5458911	IfStatement	if ( name [ i ] == '_' )		5458342	0					
ANR	5458912	Condition	name [ i ] == '_'	100:7:2087:2100	5458342	0	True				
ANR	5458913	EqualityExpression	name [ i ] == '_'		5458342	0		==			
ANR	5458914	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458915	Identifier	name		5458342	0					
ANR	5458916	Identifier	i		5458342	1					
ANR	5458917	PrimaryExpression	'_'		5458342	1					
ANR	5458918	CompoundStatement		95:23:1940:1940	5458342	1					
ANR	5458919	ExpressionStatement	name [ i ] = 0	101:4:2109:2120	5458342	0	True				
ANR	5458920	AssignmentExpression	name [ i ] = 0		5458342	0		=			
ANR	5458921	ArrayIndexing	name [ i ]		5458342	0					
ANR	5458922	Identifier	name		5458342	0					
ANR	5458923	Identifier	i		5458342	1					
ANR	5458924	PrimaryExpression	0		5458342	1					
ANR	5458925	ExpressionStatement	nargs ++	102:4:2126:2133	5458342	1	True				
ANR	5458926	PostIncDecOperationExpression	nargs ++		5458342	0					
ANR	5458927	Identifier	nargs		5458342	0					
ANR	5458928	IncDec	++		5458342	1					
ANR	5458929	IfStatement	if ( sym [ 1 ] == 'i' )		5458342	10					
ANR	5458930	Condition	sym [ 1 ] == 'i'	105:6:2150:2162	5458342	0	True				
ANR	5458931	EqualityExpression	sym [ 1 ] == 'i'		5458342	0		==			
ANR	5458932	ArrayIndexing	sym [ 1 ]		5458342	0					
ANR	5458933	Identifier	sym		5458342	0					
ANR	5458934	PrimaryExpression	1		5458342	1					
ANR	5458935	PrimaryExpression	'i'		5458342	1					
ANR	5458936	CompoundStatement		100:21:2002:2002	5458342	1					
ANR	5458937	ExpressionStatement	"type = ""public"""	106:3:2170:2185	5458342	0	True				
ANR	5458938	AssignmentExpression	"type = ""public"""		5458342	0		=			
ANR	5458939	Identifier	type		5458342	0					
ANR	5458940	PrimaryExpression	"""public"""		5458342	1					
ANR	5458941	ElseStatement	else		5458342	0					
ANR	5458942	IfStatement	if ( sym [ 1 ] == 'c' )		5458342	0					
ANR	5458943	Condition	sym [ 1 ] == 'c'	107:13:2200:2212	5458342	0	True				
ANR	5458944	EqualityExpression	sym [ 1 ] == 'c'		5458342	0		==			
ANR	5458945	ArrayIndexing	sym [ 1 ]		5458342	0					
ANR	5458946	Identifier	sym		5458342	0					
ANR	5458947	PrimaryExpression	1		5458342	1					
ANR	5458948	PrimaryExpression	'c'		5458342	1					
ANR	5458949	CompoundStatement		102:28:2052:2052	5458342	1					
ANR	5458950	ExpressionStatement	"type = ""static"""	108:3:2220:2235	5458342	0	True				
ANR	5458951	AssignmentExpression	"type = ""static"""		5458342	0		=			
ANR	5458952	Identifier	type		5458342	0					
ANR	5458953	PrimaryExpression	"""static"""		5458342	1					
ANR	5458954	IfStatement	if ( type )		5458342	13					
ANR	5458955	Condition	type	111:5:2249:2252	5458342	0	True				
ANR	5458956	Identifier	type		5458342	0					
ANR	5458957	CompoundStatement		106:11:2092:2092	5458342	1					
ANR	5458958	IfStatement	"if ( ! strcmp ( type , ""field"" ) )"		5458342	0					
ANR	5458959	Condition	"! strcmp ( type , ""field"" )"	112:6:2263:2285	5458342	0	True				
ANR	5458960	UnaryOperationExpression	"! strcmp ( type , ""field"" )"		5458342	0					
ANR	5458961	UnaryOperator	!		5458342	0					
ANR	5458962	CallExpression	"strcmp ( type , ""field"" )"		5458342	1					
ANR	5458963	Callee	strcmp		5458342	0					
ANR	5458964	Identifier	strcmp		5458342	0					
ANR	5458965	ArgumentList	type		5458342	1					
ANR	5458966	Argument	type		5458342	0					
ANR	5458967	Identifier	type		5458342	0					
ANR	5458968	Argument	"""field"""		5458342	1					
ANR	5458969	PrimaryExpression	"""field"""		5458342	0					
ANR	5458970	CompoundStatement		107:31:2125:2125	5458342	1					
ANR	5458971	ExpressionStatement	"ret = r_str_newf ( ""field int %s::%s"" , clas , name )"	113:3:2293:2342	5458342	0	True				
ANR	5458972	AssignmentExpression	"ret = r_str_newf ( ""field int %s::%s"" , clas , name )"		5458342	0		=			
ANR	5458973	Identifier	ret		5458342	0					
ANR	5458974	CallExpression	"r_str_newf ( ""field int %s::%s"" , clas , name )"		5458342	1					
ANR	5458975	Callee	r_str_newf		5458342	0					
ANR	5458976	Identifier	r_str_newf		5458342	0					
ANR	5458977	ArgumentList	"""field int %s::%s"""		5458342	1					
ANR	5458978	Argument	"""field int %s::%s"""		5458342	0					
ANR	5458979	PrimaryExpression	"""field int %s::%s"""		5458342	0					
ANR	5458980	Argument	clas		5458342	1					
ANR	5458981	Identifier	clas		5458342	0					
ANR	5458982	Argument	name		5458342	2					
ANR	5458983	Identifier	name		5458342	0					
ANR	5458984	ElseStatement	else		5458342	0					
ANR	5458985	CompoundStatement		109:9:2190:2190	5458342	0					
ANR	5458986	IfStatement	if ( nargs )		5458342	0					
ANR	5458987	Condition	nargs	115:7:2362:2366	5458342	0	True				
ANR	5458988	Identifier	nargs		5458342	0					
ANR	5458989	CompoundStatement		111:4:2212:2235	5458342	1					
ANR	5458990	IdentifierDeclStatement	"const char * arg = ""int"" ;"	116:4:2375:2398	5458342	0	True				
ANR	5458991	IdentifierDecl	"* arg = ""int"""		5458342	0					
ANR	5458992	IdentifierDeclType	const char *		5458342	0					
ANR	5458993	Identifier	arg		5458342	1					
ANR	5458994	AssignmentExpression	"* arg = ""int"""		5458342	2		=			
ANR	5458995	Identifier	arg		5458342	0					
ANR	5458996	PrimaryExpression	"""int"""		5458342	1					
ANR	5458997	ExpressionStatement	args = malloc ( ( ( strlen ( arg ) + 4 ) * nargs ) + 1 )	117:4:2404:2452	5458342	1	True				
ANR	5458998	AssignmentExpression	args = malloc ( ( ( strlen ( arg ) + 4 ) * nargs ) + 1 )		5458342	0		=			
ANR	5458999	Identifier	args		5458342	0					
ANR	5459000	CallExpression	malloc ( ( ( strlen ( arg ) + 4 ) * nargs ) + 1 )		5458342	1					
ANR	5459001	Callee	malloc		5458342	0					
ANR	5459002	Identifier	malloc		5458342	0					
ANR	5459003	ArgumentList	( ( strlen ( arg ) + 4 ) * nargs ) + 1		5458342	1					
ANR	5459004	Argument	( ( strlen ( arg ) + 4 ) * nargs ) + 1		5458342	0					
ANR	5459005	AdditiveExpression	( ( strlen ( arg ) + 4 ) * nargs ) + 1		5458342	0		+			
ANR	5459006	MultiplicativeExpression	( strlen ( arg ) + 4 ) * nargs		5458342	0		*			
ANR	5459007	AdditiveExpression	strlen ( arg ) + 4		5458342	0		+			
ANR	5459008	CallExpression	strlen ( arg )		5458342	0					
ANR	5459009	Callee	strlen		5458342	0					
ANR	5459010	Identifier	strlen		5458342	0					
ANR	5459011	ArgumentList	arg		5458342	1					
ANR	5459012	Argument	arg		5458342	0					
ANR	5459013	Identifier	arg		5458342	0					
ANR	5459014	PrimaryExpression	4		5458342	1					
ANR	5459015	Identifier	nargs		5458342	1					
ANR	5459016	PrimaryExpression	1		5458342	1					
ANR	5459017	ExpressionStatement	args [ 0 ] = 0	118:4:2458:2469	5458342	2	True				
ANR	5459018	AssignmentExpression	args [ 0 ] = 0		5458342	0		=			
ANR	5459019	ArrayIndexing	args [ 0 ]		5458342	0					
ANR	5459020	Identifier	args		5458342	0					
ANR	5459021	PrimaryExpression	0		5458342	1					
ANR	5459022	PrimaryExpression	0		5458342	1					
ANR	5459023	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		5458342	3					
ANR	5459024	ForInit	i = 0 ;	119:9:2480:2485	5458342	0	True				
ANR	5459025	AssignmentExpression	i = 0		5458342	0		=			
ANR	5459026	Identifier	i		5458342	0					
ANR	5459027	PrimaryExpression	0		5458342	1					
ANR	5459028	Condition	i < nargs	119:15:2486:2494	5458342	1	True				
ANR	5459029	RelationalExpression	i < nargs		5458342	0		<			
ANR	5459030	Identifier	i		5458342	0					
ANR	5459031	Identifier	nargs		5458342	1					
ANR	5459032	PostIncDecOperationExpression	i ++	119:26:2497:2499	5458342	2	True				
ANR	5459033	Identifier	i		5458342	0					
ANR	5459034	IncDec	++		5458342	1					
ANR	5459035	CompoundStatement		114:31:2339:2339	5458342	3					
ANR	5459036	ExpressionStatement	"strcat ( args , arg )"	120:5:2509:2527	5458342	0	True				
ANR	5459037	CallExpression	"strcat ( args , arg )"		5458342	0					
ANR	5459038	Callee	strcat		5458342	0					
ANR	5459039	Identifier	strcat		5458342	0					
ANR	5459040	ArgumentList	args		5458342	1					
ANR	5459041	Argument	args		5458342	0					
ANR	5459042	Identifier	args		5458342	0					
ANR	5459043	Argument	arg		5458342	1					
ANR	5459044	Identifier	arg		5458342	0					
ANR	5459045	IfStatement	if ( i + 1 < nargs )		5458342	1					
ANR	5459046	Condition	i + 1 < nargs	121:9:2538:2550	5458342	0	True				
ANR	5459047	RelationalExpression	i + 1 < nargs		5458342	0		<			
ANR	5459048	AdditiveExpression	i + 1		5458342	0		+			
ANR	5459049	Identifier	i		5458342	0					
ANR	5459050	PrimaryExpression	1		5458342	1					
ANR	5459051	Identifier	nargs		5458342	1					
ANR	5459052	CompoundStatement		116:24:2390:2390	5458342	1					
ANR	5459053	ExpressionStatement	"strcat ( args , "", "" )"	122:6:2561:2580	5458342	0	True				
ANR	5459054	CallExpression	"strcat ( args , "", "" )"		5458342	0					
ANR	5459055	Callee	strcat		5458342	0					
ANR	5459056	Identifier	strcat		5458342	0					
ANR	5459057	ArgumentList	args		5458342	1					
ANR	5459058	Argument	args		5458342	0					
ANR	5459059	Identifier	args		5458342	0					
ANR	5459060	Argument	""", """		5458342	1					
ANR	5459061	PrimaryExpression	""", """		5458342	0					
ANR	5459062	ElseStatement	else		5458342	0					
ANR	5459063	CompoundStatement		120:10:2442:2442	5458342	0					
ANR	5459064	ExpressionStatement	"args = strdup ( """" )"	126:4:2611:2629	5458342	0	True				
ANR	5459065	AssignmentExpression	"args = strdup ( """" )"		5458342	0		=			
ANR	5459066	Identifier	args		5458342	0					
ANR	5459067	CallExpression	"strdup ( """" )"		5458342	1					
ANR	5459068	Callee	strdup		5458342	0					
ANR	5459069	Identifier	strdup		5458342	0					
ANR	5459070	ArgumentList	""""""		5458342	1					
ANR	5459071	Argument	""""""		5458342	0					
ANR	5459072	PrimaryExpression	""""""		5458342	0					
ANR	5459073	IfStatement	if ( type && name && * name )		5458342	1					
ANR	5459074	Condition	type && name && * name	128:7:2643:2663	5458342	0	True				
ANR	5459075	AndExpression	type && name && * name		5458342	0		&&			
ANR	5459076	Identifier	type		5458342	0					
ANR	5459077	AndExpression	name && * name		5458342	1		&&			
ANR	5459078	Identifier	name		5458342	0					
ANR	5459079	UnaryOperationExpression	* name		5458342	1					
ANR	5459080	UnaryOperator	*		5458342	0					
ANR	5459081	Identifier	name		5458342	1					
ANR	5459082	CompoundStatement		123:30:2503:2503	5458342	1					
ANR	5459083	ExpressionStatement	"ret = r_str_newf ( ""%s int %s::%s(%s)"" , type , clas , name , args )"	129:4:2672:2734	5458342	0	True				
ANR	5459084	AssignmentExpression	"ret = r_str_newf ( ""%s int %s::%s(%s)"" , type , clas , name , args )"		5458342	0		=			
ANR	5459085	Identifier	ret		5458342	0					
ANR	5459086	CallExpression	"r_str_newf ( ""%s int %s::%s(%s)"" , type , clas , name , args )"		5458342	1					
ANR	5459087	Callee	r_str_newf		5458342	0					
ANR	5459088	Identifier	r_str_newf		5458342	0					
ANR	5459089	ArgumentList	"""%s int %s::%s(%s)"""		5458342	1					
ANR	5459090	Argument	"""%s int %s::%s(%s)"""		5458342	0					
ANR	5459091	PrimaryExpression	"""%s int %s::%s(%s)"""		5458342	0					
ANR	5459092	Argument	type		5458342	1					
ANR	5459093	Identifier	type		5458342	0					
ANR	5459094	Argument	clas		5458342	2					
ANR	5459095	Identifier	clas		5458342	0					
ANR	5459096	Argument	name		5458342	3					
ANR	5459097	Identifier	name		5458342	0					
ANR	5459098	Argument	args		5458342	4					
ANR	5459099	Identifier	args		5458342	0					
ANR	5459100	IfStatement	if ( bf )		5458342	1					
ANR	5459101	Condition	bf	130:8:2744:2745	5458342	0	True				
ANR	5459102	Identifier	bf		5458342	0					
ANR	5459103	CompoundStatement		125:12:2585:2585	5458342	1					
ANR	5459104	ExpressionStatement	"r_bin_file_add_method ( bf , clas , name , nargs )"	131:5:2755:2800	5458342	0	True				
ANR	5459105	CallExpression	"r_bin_file_add_method ( bf , clas , name , nargs )"		5458342	0					
ANR	5459106	Callee	r_bin_file_add_method		5458342	0					
ANR	5459107	Identifier	r_bin_file_add_method		5458342	0					
ANR	5459108	ArgumentList	bf		5458342	1					
ANR	5459109	Argument	bf		5458342	0					
ANR	5459110	Identifier	bf		5458342	0					
ANR	5459111	Argument	clas		5458342	1					
ANR	5459112	Identifier	clas		5458342	0					
ANR	5459113	Argument	name		5458342	2					
ANR	5459114	Identifier	name		5458342	0					
ANR	5459115	Argument	nargs		5458342	3					
ANR	5459116	Identifier	nargs		5458342	0					
ANR	5459117	ExpressionStatement	free ( clas )	136:1:2821:2832	5458342	14	True				
ANR	5459118	CallExpression	free ( clas )		5458342	0					
ANR	5459119	Callee	free		5458342	0					
ANR	5459120	Identifier	free		5458342	0					
ANR	5459121	ArgumentList	clas		5458342	1					
ANR	5459122	Argument	clas		5458342	0					
ANR	5459123	Identifier	clas		5458342	0					
ANR	5459124	ExpressionStatement	free ( args )	137:1:2835:2846	5458342	15	True				
ANR	5459125	CallExpression	free ( args )		5458342	0					
ANR	5459126	Callee	free		5458342	0					
ANR	5459127	Identifier	free		5458342	0					
ANR	5459128	ArgumentList	args		5458342	1					
ANR	5459129	Argument	args		5458342	0					
ANR	5459130	Identifier	args		5458342	0					
ANR	5459131	ExpressionStatement	free ( name )	138:1:2849:2860	5458342	16	True				
ANR	5459132	CallExpression	free ( name )		5458342	0					
ANR	5459133	Callee	free		5458342	0					
ANR	5459134	Identifier	free		5458342	0					
ANR	5459135	ArgumentList	name		5458342	1					
ANR	5459136	Argument	name		5458342	0					
ANR	5459137	Identifier	name		5458342	0					
ANR	5459138	ReturnStatement	return ret ;	139:1:2863:2873	5458342	17	True				
ANR	5459139	Identifier	ret		5458342	0					
ANR	5459140	ReturnType	R_API char *		5458342	1					
ANR	5459141	Identifier	r_bin_demangle_objc		5458342	2					
ANR	5459142	ParameterList	"RBinFile * bf , const char * sym"		5458342	3					
ANR	5459143	Parameter	RBinFile * bf	6:32:131:142	5458342	0	True				
ANR	5459144	ParameterType	RBinFile *		5458342	0					
ANR	5459145	Identifier	bf		5458342	1					
ANR	5459146	Parameter	const char * sym	6:46:145:159	5458342	1	True				
ANR	5459147	ParameterType	const char *		5458342	0					
ANR	5459148	Identifier	sym		5458342	1					
ANR	5459149	CFGEntryNode	ENTRY		5458342		True				
ANR	5459150	CFGExitNode	EXIT		5458342		True				
ANR	5459151	Symbol	bf		5458342						
ANR	5459152	Symbol	sym		5458342						
ANR	5459153	Symbol	strchr		5458342						
ANR	5459154	Symbol	className		5458342						
ANR	5459155	Symbol	r_str_newf		5458342						
ANR	5459156	Symbol	R_BIN_CLASS_PUBLIC		5458342						
ANR	5459157	Symbol	type		5458342						
ANR	5459158	Symbol	* bf -> o		5458342						
ANR	5459159	Symbol	* args		5458342						
ANR	5459160	Symbol	strncmp		5458342						
ANR	5459161	Symbol	strlen		5458342						
ANR	5459162	Symbol	bf -> o		5458342						
ANR	5459163	Symbol	arg		5458342						
ANR	5459164	Symbol	* name ++		5458342						
ANR	5459165	Symbol	ret		5458342						
ANR	5459166	Symbol	* name		5458342						
ANR	5459167	Symbol	strcmp		5458342						
ANR	5459168	Symbol	malloc		5458342						
ANR	5459169	Symbol	NULL		5458342						
ANR	5459170	Symbol	* bf		5458342						
ANR	5459171	Symbol	i		5458342						
ANR	5459172	Symbol	bf -> o -> classes		5458342						
ANR	5459173	Symbol	args		5458342						
ANR	5459174	Symbol	nargs		5458342						
ANR	5459175	Symbol	p		5458342						
ANR	5459176	Symbol	* sym		5458342						
ANR	5459177	Symbol	* * bf		5458342						
ANR	5459178	Symbol	* i		5458342						
ANR	5459179	Symbol	clas		5458342						
ANR	5459180	Symbol	strstr		5458342						
ANR	5459181	Symbol	name		5458342						
ANR	5459182	Symbol	* p		5458342						
ANR	5459183	Symbol	strdup		5458342						
