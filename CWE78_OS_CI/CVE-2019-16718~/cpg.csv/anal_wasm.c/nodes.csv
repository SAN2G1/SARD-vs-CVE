command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	242748	File	data/converged/CVE-2019-16718~_radare2/anal_wasm.c								
ANR	242749	DeclStmt									
ANR	242750	Decl							ut64	ut64	scope_hint
ANR	242751	DeclStmt									
ANR	242752	Decl							ut64	ut64	addr_old
ANR	242753	Function	get_cf_offset	20:0:492:947							
ANR	242754	FunctionDef	"get_cf_offset (RAnal * anal , const ut8 * data , int len)"		242753	0					
ANR	242755	CompoundStatement		20:65:557:947	242753	0					
ANR	242756	IdentifierDeclStatement	ut32 fcn_id ;	21:1:560:571	242753	0	True				
ANR	242757	IdentifierDecl	fcn_id		242753	0					
ANR	242758	IdentifierDeclType	ut32		242753	0					
ANR	242759	Identifier	fcn_id		242753	1					
ANR	242760	IfStatement	"if ( ! read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id ) )"		242753	1					
ANR	242761	Condition	"! read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id )"	23:5:579:630	242753	0	True				
ANR	242762	UnaryOperationExpression	"! read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id )"		242753	0					
ANR	242763	UnaryOperator	!		242753	0					
ANR	242764	CallExpression	"read_u32_leb128 ( & data [ 1 ] , & data [ len - 1 ] , & fcn_id )"		242753	1					
ANR	242765	Callee	read_u32_leb128		242753	0					
ANR	242766	Identifier	read_u32_leb128		242753	0					
ANR	242767	ArgumentList	& data [ 1 ]		242753	1					
ANR	242768	Argument	& data [ 1 ]		242753	0					
ANR	242769	UnaryOperationExpression	& data [ 1 ]		242753	0					
ANR	242770	UnaryOperator	&		242753	0					
ANR	242771	ArrayIndexing	data [ 1 ]		242753	1					
ANR	242772	Identifier	data		242753	0					
ANR	242773	PrimaryExpression	1		242753	1					
ANR	242774	Argument	& data [ len - 1 ]		242753	1					
ANR	242775	UnaryOperationExpression	& data [ len - 1 ]		242753	0					
ANR	242776	UnaryOperator	&		242753	0					
ANR	242777	ArrayIndexing	data [ len - 1 ]		242753	1					
ANR	242778	Identifier	data		242753	0					
ANR	242779	AdditiveExpression	len - 1		242753	1		-			
ANR	242780	Identifier	len		242753	0					
ANR	242781	PrimaryExpression	1		242753	1					
ANR	242782	Argument	& fcn_id		242753	2					
ANR	242783	UnaryOperationExpression	& fcn_id		242753	0					
ANR	242784	UnaryOperator	&		242753	0					
ANR	242785	Identifier	fcn_id		242753	1					
ANR	242786	CompoundStatement		4:59:75:75	242753	1					
ANR	242787	ReturnStatement	return UT64_MAX ;	24:2:637:652	242753	0	True				
ANR	242788	Identifier	UT64_MAX		242753	0					
ANR	242789	ExpressionStatement	r_cons_push ( )	26:1:658:672	242753	2	True				
ANR	242790	CallExpression	r_cons_push ( )		242753	0					
ANR	242791	Callee	r_cons_push		242753	0					
ANR	242792	Identifier	r_cons_push		242753	0					
ANR	242793	ArgumentList			242753	1					
ANR	242794	IdentifierDeclStatement	"char * s = anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id ) ;"	29:1:769:842	242753	3	True				
ANR	242795	IdentifierDecl	"* s = anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id )"		242753	0					
ANR	242796	IdentifierDeclType	char *		242753	0					
ANR	242797	Identifier	s		242753	1					
ANR	242798	AssignmentExpression	"* s = anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id )"		242753	2		=			
ANR	242799	Identifier	s		242753	0					
ANR	242800	CallExpression	"anal -> coreb . cmdstrf ( anal -> coreb . core , ""is~FUNC[2:%u]"" , fcn_id )"		242753	1					
ANR	242801	Callee	anal -> coreb . cmdstrf		242753	0					
ANR	242802	MemberAccess	anal -> coreb . cmdstrf		242753	0					
ANR	242803	PtrMemberAccess	anal -> coreb		242753	0					
ANR	242804	Identifier	anal		242753	0					
ANR	242805	Identifier	coreb		242753	1					
ANR	242806	Identifier	cmdstrf		242753	1					
ANR	242807	ArgumentList	anal -> coreb . core		242753	1					
ANR	242808	Argument	anal -> coreb . core		242753	0					
ANR	242809	MemberAccess	anal -> coreb . core		242753	0					
ANR	242810	PtrMemberAccess	anal -> coreb		242753	0					
ANR	242811	Identifier	anal		242753	0					
ANR	242812	Identifier	coreb		242753	1					
ANR	242813	Identifier	core		242753	1					
ANR	242814	Argument	"""is~FUNC[2:%u]"""		242753	1					
ANR	242815	PrimaryExpression	"""is~FUNC[2:%u]"""		242753	0					
ANR	242816	Argument	fcn_id		242753	2					
ANR	242817	Identifier	fcn_id		242753	0					
ANR	242818	ExpressionStatement	r_cons_pop ( )	30:1:845:858	242753	4	True				
ANR	242819	CallExpression	r_cons_pop ( )		242753	0					
ANR	242820	Callee	r_cons_pop		242753	0					
ANR	242821	Identifier	r_cons_pop		242753	0					
ANR	242822	ArgumentList			242753	1					
ANR	242823	IfStatement	if ( s )		242753	5					
ANR	242824	Condition	s	31:5:865:865	242753	0	True				
ANR	242825	Identifier	s		242753	0					
ANR	242826	CompoundStatement		13:2:314:342	242753	1					
ANR	242827	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , s ) ;"	32:2:872:900	242753	0	True				
ANR	242828	IdentifierDecl	"n = r_num_get ( NULL , s )"		242753	0					
ANR	242829	IdentifierDeclType	ut64		242753	0					
ANR	242830	Identifier	n		242753	1					
ANR	242831	AssignmentExpression	"n = r_num_get ( NULL , s )"		242753	2		=			
ANR	242832	Identifier	n		242753	0					
ANR	242833	CallExpression	"r_num_get ( NULL , s )"		242753	1					
ANR	242834	Callee	r_num_get		242753	0					
ANR	242835	Identifier	r_num_get		242753	0					
ANR	242836	ArgumentList	NULL		242753	1					
ANR	242837	Argument	NULL		242753	0					
ANR	242838	Identifier	NULL		242753	0					
ANR	242839	Argument	s		242753	1					
ANR	242840	Identifier	s		242753	0					
ANR	242841	ExpressionStatement	free ( s )	33:2:904:912	242753	1	True				
ANR	242842	CallExpression	free ( s )		242753	0					
ANR	242843	Callee	free		242753	0					
ANR	242844	Identifier	free		242753	0					
ANR	242845	ArgumentList	s		242753	1					
ANR	242846	Argument	s		242753	0					
ANR	242847	Identifier	s		242753	0					
ANR	242848	ReturnStatement	return n ;	34:2:916:924	242753	2	True				
ANR	242849	Identifier	n		242753	0					
ANR	242850	ReturnStatement	return UT64_MAX ;	36:1:930:945	242753	6	True				
ANR	242851	Identifier	UT64_MAX		242753	0					
ANR	242852	ReturnType	static ut64		242753	1					
ANR	242853	Identifier	get_cf_offset		242753	2					
ANR	242854	ParameterList	"RAnal * anal , const ut8 * data , int len"		242753	3					
ANR	242855	Parameter	RAnal * anal	20:26:518:528	242753	0	True				
ANR	242856	ParameterType	RAnal *		242753	0					
ANR	242857	Identifier	anal		242753	1					
ANR	242858	Parameter	const ut8 * data	20:39:531:545	242753	1	True				
ANR	242859	ParameterType	const ut8 *		242753	0					
ANR	242860	Identifier	data		242753	1					
ANR	242861	Parameter	int len	20:56:548:554	242753	2	True				
ANR	242862	ParameterType	int		242753	0					
ANR	242863	Identifier	len		242753	1					
ANR	242864	CFGEntryNode	ENTRY		242753		True				
ANR	242865	CFGExitNode	EXIT		242753		True				
ANR	242866	Symbol	read_u32_leb128		242753						
ANR	242867	Symbol	NULL		242753						
ANR	242868	Symbol	data		242753						
ANR	242869	Symbol	& fcn_id		242753						
ANR	242870	Symbol	anal -> coreb . core		242753						
ANR	242871	Symbol	n		242753						
ANR	242872	Symbol	* anal		242753						
ANR	242873	Symbol	s		242753						
ANR	242874	Symbol	len		242753						
ANR	242875	Symbol	anal -> coreb . cmdstrf		242753						
ANR	242876	Symbol	anal		242753						
ANR	242877	Symbol	anal -> coreb		242753						
ANR	242878	Symbol	r_num_get		242753						
ANR	242879	Symbol	UT64_MAX		242753						
ANR	242880	Symbol	fcn_id		242753						
ANR	242881	Function	advance_till_scope_end	39:0:950:2023							
ANR	242882	FunctionDef	"advance_till_scope_end (RAnal * anal , RAnalOp * op , ut64 address , ut32 expected_type , ut32 depth , bool use_else)"		242881	0					
ANR	242883	CompoundStatement		39:122:1072:2023	242881	0					
ANR	242884	IdentifierDeclStatement	ut8 buffer [ 16 ] ;	40:1:1075:1089	242881	0	True				
ANR	242885	IdentifierDecl	buffer [ 16 ]		242881	0					
ANR	242886	IdentifierDeclType	ut8 [ 16 ]		242881	0					
ANR	242887	Identifier	buffer		242881	1					
ANR	242888	PrimaryExpression	16		242881	2					
ANR	242889	IdentifierDeclStatement	ut8 * ptr = buffer ;	41:1:1092:1109	242881	1	True				
ANR	242890	IdentifierDecl	* ptr = buffer		242881	0					
ANR	242891	IdentifierDeclType	ut8 *		242881	0					
ANR	242892	Identifier	ptr		242881	1					
ANR	242893	AssignmentExpression	* ptr = buffer		242881	2		=			
ANR	242894	Identifier	buffer		242881	0					
ANR	242895	Identifier	buffer		242881	1					
ANR	242896	IdentifierDeclStatement	ut8 * end = ptr + sizeof ( buffer ) ;	42:1:1112:1144	242881	2	True				
ANR	242897	IdentifierDecl	* end = ptr + sizeof ( buffer )		242881	0					
ANR	242898	IdentifierDeclType	ut8 *		242881	0					
ANR	242899	Identifier	end		242881	1					
ANR	242900	AssignmentExpression	* end = ptr + sizeof ( buffer )		242881	2		=			
ANR	242901	Identifier	end		242881	0					
ANR	242902	AdditiveExpression	ptr + sizeof ( buffer )		242881	1		+			
ANR	242903	Identifier	ptr		242881	0					
ANR	242904	SizeofExpression	sizeof ( buffer )		242881	1					
ANR	242905	Sizeof	sizeof		242881	0					
ANR	242906	SizeofOperand	buffer		242881	1					
ANR	242907	IdentifierDeclStatement	WasmOp wop = { { 0 } } ;	43:1:1147:1165	242881	3	True				
ANR	242908	IdentifierDecl	wop = { { 0 } }		242881	0					
ANR	242909	IdentifierDeclType	WasmOp		242881	0					
ANR	242910	Identifier	wop		242881	1					
ANR	242911	AssignmentExpression	wop = { { 0 } }		242881	2		=			
ANR	242912	Identifier	wop		242881	0					
ANR	242913	InitializerList	0		242881	1					
ANR	242914	InitializerList	0		242881	0					
ANR	242915	PrimaryExpression	0		242881	0					
ANR	242916	IdentifierDeclStatement	int size = 0 ;	44:1:1168:1180	242881	4	True				
ANR	242917	IdentifierDecl	size = 0		242881	0					
ANR	242918	IdentifierDeclType	int		242881	0					
ANR	242919	Identifier	size		242881	1					
ANR	242920	AssignmentExpression	size = 0		242881	2		=			
ANR	242921	Identifier	size		242881	0					
ANR	242922	PrimaryExpression	0		242881	1					
ANR	242923	WhileStatement	"while ( anal -> iob . read_at ( anal -> iob . io , address , buffer , sizeof ( buffer ) ) )"		242881	5					
ANR	242924	Condition	"anal -> iob . read_at ( anal -> iob . io , address , buffer , sizeof ( buffer ) )"	45:8:1190:1255	242881	0	True				
ANR	242925	CallExpression	"anal -> iob . read_at ( anal -> iob . io , address , buffer , sizeof ( buffer ) )"		242881	0					
ANR	242926	Callee	anal -> iob . read_at		242881	0					
ANR	242927	MemberAccess	anal -> iob . read_at		242881	0					
ANR	242928	PtrMemberAccess	anal -> iob		242881	0					
ANR	242929	Identifier	anal		242881	0					
ANR	242930	Identifier	iob		242881	1					
ANR	242931	Identifier	read_at		242881	1					
ANR	242932	ArgumentList	anal -> iob . io		242881	1					
ANR	242933	Argument	anal -> iob . io		242881	0					
ANR	242934	MemberAccess	anal -> iob . io		242881	0					
ANR	242935	PtrMemberAccess	anal -> iob		242881	0					
ANR	242936	Identifier	anal		242881	0					
ANR	242937	Identifier	iob		242881	1					
ANR	242938	Identifier	io		242881	1					
ANR	242939	Argument	address		242881	1					
ANR	242940	Identifier	address		242881	0					
ANR	242941	Argument	buffer		242881	2					
ANR	242942	Identifier	buffer		242881	0					
ANR	242943	Argument	sizeof ( buffer )		242881	3					
ANR	242944	SizeofExpression	sizeof ( buffer )		242881	0					
ANR	242945	Sizeof	sizeof		242881	0					
ANR	242946	SizeofOperand	buffer		242881	1					
ANR	242947	CompoundStatement		7:76:185:185	242881	1					
ANR	242948	ExpressionStatement	"size = wasm_dis ( & wop , ptr , end - ptr )"	46:2:1262:1300	242881	0	True				
ANR	242949	AssignmentExpression	"size = wasm_dis ( & wop , ptr , end - ptr )"		242881	0		=			
ANR	242950	Identifier	size		242881	0					
ANR	242951	CallExpression	"wasm_dis ( & wop , ptr , end - ptr )"		242881	1					
ANR	242952	Callee	wasm_dis		242881	0					
ANR	242953	Identifier	wasm_dis		242881	0					
ANR	242954	ArgumentList	& wop		242881	1					
ANR	242955	Argument	& wop		242881	0					
ANR	242956	UnaryOperationExpression	& wop		242881	0					
ANR	242957	UnaryOperator	&		242881	0					
ANR	242958	Identifier	wop		242881	1					
ANR	242959	Argument	ptr		242881	1					
ANR	242960	Identifier	ptr		242881	0					
ANR	242961	Argument	end - ptr		242881	2					
ANR	242962	AdditiveExpression	end - ptr		242881	0		-			
ANR	242963	Identifier	end		242881	0					
ANR	242964	Identifier	ptr		242881	1					
ANR	242965	IfStatement	if ( ! wop . txt || ( wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP ) )		242881	1					
ANR	242966	Condition	! wop . txt || ( wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP )	47:6:1308:1381	242881	0	True				
ANR	242967	OrExpression	! wop . txt || ( wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP )		242881	0		||			
ANR	242968	UnaryOperationExpression	! wop . txt		242881	0					
ANR	242969	UnaryOperator	!		242881	0					
ANR	242970	MemberAccess	wop . txt		242881	1					
ANR	242971	Identifier	wop		242881	0					
ANR	242972	Identifier	txt		242881	1					
ANR	242973	AndExpression	wop . type == WASM_TYPE_OP_CORE && wop . op . core == WASM_OP_TRAP		242881	1		&&			
ANR	242974	EqualityExpression	wop . type == WASM_TYPE_OP_CORE		242881	0		==			
ANR	242975	MemberAccess	wop . type		242881	0					
ANR	242976	Identifier	wop		242881	0					
ANR	242977	Identifier	type		242881	1					
ANR	242978	Identifier	WASM_TYPE_OP_CORE		242881	1					
ANR	242979	EqualityExpression	wop . op . core == WASM_OP_TRAP		242881	1		==			
ANR	242980	MemberAccess	wop . op . core		242881	0					
ANR	242981	MemberAccess	wop . op		242881	0					
ANR	242982	Identifier	wop		242881	0					
ANR	242983	Identifier	op		242881	1					
ANR	242984	Identifier	core		242881	1					
ANR	242985	Identifier	WASM_OP_TRAP		242881	1					
ANR	242986	CompoundStatement		9:82:311:311	242881	1					
ANR	242987	BreakStatement	break ;	49:3:1417:1422	242881	0	True				
ANR	242988	IfStatement	if ( wop . type == WASM_TYPE_OP_CORE )		242881	2					
ANR	242989	Condition	wop . type == WASM_TYPE_OP_CORE	51:6:1434:1462	242881	0	True				
ANR	242990	EqualityExpression	wop . type == WASM_TYPE_OP_CORE		242881	0		==			
ANR	242991	MemberAccess	wop . type		242881	0					
ANR	242992	Identifier	wop		242881	0					
ANR	242993	Identifier	type		242881	1					
ANR	242994	Identifier	WASM_TYPE_OP_CORE		242881	1					
ANR	242995	CompoundStatement		14:3:397:428	242881	1					
ANR	242996	IdentifierDeclStatement	WasmOpCodes wopop = wop . op . core ;	52:3:1470:1501	242881	0	True				
ANR	242997	IdentifierDecl	wopop = wop . op . core		242881	0					
ANR	242998	IdentifierDeclType	WasmOpCodes		242881	0					
ANR	242999	Identifier	wopop		242881	1					
ANR	243000	AssignmentExpression	wopop = wop . op . core		242881	2		=			
ANR	243001	Identifier	wopop		242881	0					
ANR	243002	MemberAccess	wop . op . core		242881	1					
ANR	243003	MemberAccess	wop . op		242881	0					
ANR	243004	Identifier	wop		242881	0					
ANR	243005	Identifier	op		242881	1					
ANR	243006	Identifier	core		242881	1					
ANR	243007	IfStatement	if ( wopop == WASM_OP_LOOP || wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF )		242881	1					
ANR	243008	Condition	wopop == WASM_OP_LOOP || wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF	53:7:1510:1579	242881	0	True				
ANR	243009	OrExpression	wopop == WASM_OP_LOOP || wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF		242881	0		||			
ANR	243010	EqualityExpression	wopop == WASM_OP_LOOP		242881	0		==			
ANR	243011	Identifier	wopop		242881	0					
ANR	243012	Identifier	WASM_OP_LOOP		242881	1					
ANR	243013	OrExpression	wopop == WASM_OP_BLOCK || wopop == WASM_OP_IF		242881	1		||			
ANR	243014	EqualityExpression	wopop == WASM_OP_BLOCK		242881	0		==			
ANR	243015	Identifier	wopop		242881	0					
ANR	243016	Identifier	WASM_OP_BLOCK		242881	1					
ANR	243017	EqualityExpression	wopop == WASM_OP_IF		242881	1		==			
ANR	243018	Identifier	wopop		242881	0					
ANR	243019	Identifier	WASM_OP_IF		242881	1					
ANR	243020	CompoundStatement		15:79:509:509	242881	1					
ANR	243021	ExpressionStatement	depth ++	54:4:1588:1595	242881	0	True				
ANR	243022	PostIncDecOperationExpression	depth ++		242881	0					
ANR	243023	Identifier	depth		242881	0					
ANR	243024	IncDec	++		242881	1					
ANR	243025	IfStatement	if ( use_else && wopop == WASM_OP_ELSE && ! depth )		242881	2					
ANR	243026	Condition	use_else && wopop == WASM_OP_ELSE && ! depth	56:7:1609:1651	242881	0	True				
ANR	243027	AndExpression	use_else && wopop == WASM_OP_ELSE && ! depth		242881	0		&&			
ANR	243028	Identifier	use_else		242881	0					
ANR	243029	AndExpression	wopop == WASM_OP_ELSE && ! depth		242881	1		&&			
ANR	243030	EqualityExpression	wopop == WASM_OP_ELSE		242881	0		==			
ANR	243031	Identifier	wopop		242881	0					
ANR	243032	Identifier	WASM_OP_ELSE		242881	1					
ANR	243033	UnaryOperationExpression	! depth		242881	1					
ANR	243034	UnaryOperator	!		242881	0					
ANR	243035	Identifier	depth		242881	1					
ANR	243036	CompoundStatement		18:52:581:581	242881	1					
ANR	243037	ExpressionStatement	op -> type = expected_type	57:4:1660:1684	242881	0	True				
ANR	243038	AssignmentExpression	op -> type = expected_type		242881	0		=			
ANR	243039	PtrMemberAccess	op -> type		242881	0					
ANR	243040	Identifier	op		242881	0					
ANR	243041	Identifier	type		242881	1					
ANR	243042	Identifier	expected_type		242881	1					
ANR	243043	ExpressionStatement	op -> jump = address + 1	58:4:1690:1712	242881	1	True				
ANR	243044	AssignmentExpression	op -> jump = address + 1		242881	0		=			
ANR	243045	PtrMemberAccess	op -> jump		242881	0					
ANR	243046	Identifier	op		242881	0					
ANR	243047	Identifier	jump		242881	1					
ANR	243048	AdditiveExpression	address + 1		242881	1		+			
ANR	243049	Identifier	address		242881	0					
ANR	243050	PrimaryExpression	1		242881	1					
ANR	243051	ReturnStatement	return true ;	59:4:1736:1747	242881	2	True				
ANR	243052	Identifier	true		242881	0					
ANR	243053	ElseStatement	else		242881	0					
ANR	243054	IfStatement	if ( wopop == WASM_OP_END && depth > 0 )		242881	0					
ANR	243055	Condition	wopop == WASM_OP_END && depth > 0	60:14:1763:1795	242881	0	True				
ANR	243056	AndExpression	wopop == WASM_OP_END && depth > 0		242881	0		&&			
ANR	243057	EqualityExpression	wopop == WASM_OP_END		242881	0		==			
ANR	243058	Identifier	wopop		242881	0					
ANR	243059	Identifier	WASM_OP_END		242881	1					
ANR	243060	RelationalExpression	depth > 0		242881	1		>			
ANR	243061	Identifier	depth		242881	0					
ANR	243062	PrimaryExpression	0		242881	1					
ANR	243063	CompoundStatement		22:49:725:725	242881	1					
ANR	243064	ExpressionStatement	depth --	62:4:1849:1856	242881	0	True				
ANR	243065	PostIncDecOperationExpression	depth --		242881	0					
ANR	243066	Identifier	depth		242881	0					
ANR	243067	IncDec	--		242881	1					
ANR	243068	ElseStatement	else		242881	0					
ANR	243069	IfStatement	if ( wopop == WASM_OP_END && ! depth )		242881	0					
ANR	243070	Condition	wopop == WASM_OP_END && ! depth	63:14:1872:1901	242881	0	True				
ANR	243071	AndExpression	wopop == WASM_OP_END && ! depth		242881	0		&&			
ANR	243072	EqualityExpression	wopop == WASM_OP_END		242881	0		==			
ANR	243073	Identifier	wopop		242881	0					
ANR	243074	Identifier	WASM_OP_END		242881	1					
ANR	243075	UnaryOperationExpression	! depth		242881	1					
ANR	243076	UnaryOperator	!		242881	0					
ANR	243077	Identifier	depth		242881	1					
ANR	243078	CompoundStatement		25:46:831:831	242881	1					
ANR	243079	ExpressionStatement	op -> type = expected_type	64:4:1910:1934	242881	0	True				
ANR	243080	AssignmentExpression	op -> type = expected_type		242881	0		=			
ANR	243081	PtrMemberAccess	op -> type		242881	0					
ANR	243082	Identifier	op		242881	0					
ANR	243083	Identifier	type		242881	1					
ANR	243084	Identifier	expected_type		242881	1					
ANR	243085	ExpressionStatement	op -> jump = address	65:4:1940:1958	242881	1	True				
ANR	243086	AssignmentExpression	op -> jump = address		242881	0		=			
ANR	243087	PtrMemberAccess	op -> jump		242881	0					
ANR	243088	Identifier	op		242881	0					
ANR	243089	Identifier	jump		242881	1					
ANR	243090	Identifier	address		242881	1					
ANR	243091	ReturnStatement	return true ;	66:4:1964:1975	242881	2	True				
ANR	243092	Identifier	true		242881	0					
ANR	243093	ExpressionStatement	address += size	69:2:1988:2003	242881	3	True				
ANR	243094	AssignmentExpression	address += size		242881	0		+=			
ANR	243095	Identifier	address		242881	0					
ANR	243096	Identifier	size		242881	1					
ANR	243097	ReturnStatement	return false ;	71:1:2009:2021	242881	6	True				
ANR	243098	Identifier	false		242881	0					
ANR	243099	ReturnType	static bool		242881	1					
ANR	243100	Identifier	advance_till_scope_end		242881	2					
ANR	243101	ParameterList	"RAnal * anal , RAnalOp * op , ut64 address , ut32 expected_type , ut32 depth , bool use_else"		242881	3					
ANR	243102	Parameter	RAnal * anal	39:35:985:995	242881	0	True				
ANR	243103	ParameterType	RAnal *		242881	0					
ANR	243104	Identifier	anal		242881	1					
ANR	243105	Parameter	RAnalOp * op	39:48:998:1008	242881	1	True				
ANR	243106	ParameterType	RAnalOp *		242881	0					
ANR	243107	Identifier	op		242881	1					
ANR	243108	Parameter	ut64 address	39:61:1011:1022	242881	2	True				
ANR	243109	ParameterType	ut64		242881	0					
ANR	243110	Identifier	address		242881	1					
ANR	243111	Parameter	ut32 expected_type	39:75:1025:1042	242881	3	True				
ANR	243112	ParameterType	ut32		242881	0					
ANR	243113	Identifier	expected_type		242881	1					
ANR	243114	Parameter	ut32 depth	39:95:1045:1054	242881	4	True				
ANR	243115	ParameterType	ut32		242881	0					
ANR	243116	Identifier	depth		242881	1					
ANR	243117	Parameter	bool use_else	39:107:1057:1069	242881	5	True				
ANR	243118	ParameterType	bool		242881	0					
ANR	243119	Identifier	use_else		242881	1					
ANR	243120	CFGEntryNode	ENTRY		242881		True				
ANR	243121	CFGExitNode	EXIT		242881		True				
ANR	243122	Symbol	WASM_OP_END		242881						
ANR	243123	Symbol	* op		242881						
ANR	243124	Symbol	expected_type		242881						
ANR	243125	Symbol	* anal		242881						
ANR	243126	Symbol	WASM_OP_IF		242881						
ANR	243127	Symbol	anal -> iob . read_at		242881						
ANR	243128	Symbol	WASM_TYPE_OP_CORE		242881						
ANR	243129	Symbol	wop		242881						
ANR	243130	Symbol	op -> jump		242881						
ANR	243131	Symbol	end		242881						
ANR	243132	Symbol	buffer		242881						
ANR	243133	Symbol	anal -> iob . io		242881						
ANR	243134	Symbol	WASM_OP_BLOCK		242881						
ANR	243135	Symbol	op		242881						
ANR	243136	Symbol	wasm_dis		242881						
ANR	243137	Symbol	address		242881						
ANR	243138	Symbol	op -> type		242881						
ANR	243139	Symbol	wop . type		242881						
ANR	243140	Symbol	WASM_OP_TRAP		242881						
ANR	243141	Symbol	use_else		242881						
ANR	243142	Symbol	wop . op . core		242881						
ANR	243143	Symbol	false		242881						
ANR	243144	Symbol	wop . txt		242881						
ANR	243145	Symbol	WASM_OP_ELSE		242881						
ANR	243146	Symbol	wop . op		242881						
ANR	243147	Symbol	ptr		242881						
ANR	243148	Symbol	depth		242881						
ANR	243149	Symbol	size		242881						
ANR	243150	Symbol	WASM_OP_LOOP		242881						
ANR	243151	Symbol	anal		242881						
ANR	243152	Symbol	wopop		242881						
ANR	243153	Symbol	true		242881						
ANR	243154	Symbol	& wop		242881						
ANR	243155	Symbol	anal -> iob		242881						
ANR	243156	Function	wasm_op	75:0:2055:12504							
ANR	243157	FunctionDef	"wasm_op (RAnal * anal , RAnalOp * op , ut64 addr , const ut8 * data , int len , RAnalOpMask mask)"		243156	0					
ANR	243158	CompoundStatement		75:100:2155:12504	243156	0					
ANR	243159	IdentifierDeclStatement	WasmOp wop = { { 0 } } ;	76:1:2158:2176	243156	0	True				
ANR	243160	IdentifierDecl	wop = { { 0 } }		243156	0					
ANR	243161	IdentifierDeclType	WasmOp		243156	0					
ANR	243162	Identifier	wop		243156	1					
ANR	243163	AssignmentExpression	wop = { { 0 } }		243156	2		=			
ANR	243164	Identifier	wop		243156	0					
ANR	243165	InitializerList	0		243156	1					
ANR	243166	InitializerList	0		243156	0					
ANR	243167	PrimaryExpression	0		243156	0					
ANR	243168	IdentifierDeclStatement	RAnalHint * hint = NULL ;	77:1:2179:2201	243156	1	True				
ANR	243169	IdentifierDecl	* hint = NULL		243156	0					
ANR	243170	IdentifierDeclType	RAnalHint *		243156	0					
ANR	243171	Identifier	hint		243156	1					
ANR	243172	AssignmentExpression	* hint = NULL		243156	2		=			
ANR	243173	Identifier	NULL		243156	0					
ANR	243174	Identifier	NULL		243156	1					
ANR	243175	ExpressionStatement	"memset ( op , '\\0' , sizeof ( RAnalOp ) )"	78:1:2204:2239	243156	2	True				
ANR	243176	CallExpression	"memset ( op , '\\0' , sizeof ( RAnalOp ) )"		243156	0					
ANR	243177	Callee	memset		243156	0					
ANR	243178	Identifier	memset		243156	0					
ANR	243179	ArgumentList	op		243156	1					
ANR	243180	Argument	op		243156	0					
ANR	243181	Identifier	op		243156	0					
ANR	243182	Argument	'\\0'		243156	1					
ANR	243183	PrimaryExpression	'\\0'		243156	0					
ANR	243184	Argument	sizeof ( RAnalOp )		243156	2					
ANR	243185	SizeofExpression	sizeof ( RAnalOp )		243156	0					
ANR	243186	Sizeof	sizeof		243156	0					
ANR	243187	SizeofOperand	RAnalOp		243156	1					
ANR	243188	IdentifierDeclStatement	"int ret = wasm_dis ( & wop , data , len ) ;"	79:1:2242:2278	243156	3	True				
ANR	243189	IdentifierDecl	"ret = wasm_dis ( & wop , data , len )"		243156	0					
ANR	243190	IdentifierDeclType	int		243156	0					
ANR	243191	Identifier	ret		243156	1					
ANR	243192	AssignmentExpression	"ret = wasm_dis ( & wop , data , len )"		243156	2		=			
ANR	243193	Identifier	ret		243156	0					
ANR	243194	CallExpression	"wasm_dis ( & wop , data , len )"		243156	1					
ANR	243195	Callee	wasm_dis		243156	0					
ANR	243196	Identifier	wasm_dis		243156	0					
ANR	243197	ArgumentList	& wop		243156	1					
ANR	243198	Argument	& wop		243156	0					
ANR	243199	UnaryOperationExpression	& wop		243156	0					
ANR	243200	UnaryOperator	&		243156	0					
ANR	243201	Identifier	wop		243156	1					
ANR	243202	Argument	data		243156	1					
ANR	243203	Identifier	data		243156	0					
ANR	243204	Argument	len		243156	2					
ANR	243205	Identifier	len		243156	0					
ANR	243206	ExpressionStatement	op -> jump = UT64_MAX	80:1:2281:2300	243156	4	True				
ANR	243207	AssignmentExpression	op -> jump = UT64_MAX		243156	0		=			
ANR	243208	PtrMemberAccess	op -> jump		243156	0					
ANR	243209	Identifier	op		243156	0					
ANR	243210	Identifier	jump		243156	1					
ANR	243211	Identifier	UT64_MAX		243156	1					
ANR	243212	ExpressionStatement	op -> fail = UT64_MAX	81:1:2303:2322	243156	5	True				
ANR	243213	AssignmentExpression	op -> fail = UT64_MAX		243156	0		=			
ANR	243214	PtrMemberAccess	op -> fail		243156	0					
ANR	243215	Identifier	op		243156	0					
ANR	243216	Identifier	fail		243156	1					
ANR	243217	Identifier	UT64_MAX		243156	1					
ANR	243218	ExpressionStatement	op -> ptr = op -> val = UT64_MAX	82:1:2325:2353	243156	6	True				
ANR	243219	AssignmentExpression	op -> ptr = op -> val = UT64_MAX		243156	0		=			
ANR	243220	PtrMemberAccess	op -> ptr		243156	0					
ANR	243221	Identifier	op		243156	0					
ANR	243222	Identifier	ptr		243156	1					
ANR	243223	AssignmentExpression	op -> val = UT64_MAX		243156	1		=			
ANR	243224	PtrMemberAccess	op -> val		243156	0					
ANR	243225	Identifier	op		243156	0					
ANR	243226	Identifier	val		243156	1					
ANR	243227	Identifier	UT64_MAX		243156	1					
ANR	243228	ExpressionStatement	op -> size = ret	83:1:2356:2370	243156	7	True				
ANR	243229	AssignmentExpression	op -> size = ret		243156	0		=			
ANR	243230	PtrMemberAccess	op -> size		243156	0					
ANR	243231	Identifier	op		243156	0					
ANR	243232	Identifier	size		243156	1					
ANR	243233	Identifier	ret		243156	1					
ANR	243234	ExpressionStatement	op -> addr = addr	84:1:2373:2388	243156	8	True				
ANR	243235	AssignmentExpression	op -> addr = addr		243156	0		=			
ANR	243236	PtrMemberAccess	op -> addr		243156	0					
ANR	243237	Identifier	op		243156	0					
ANR	243238	Identifier	addr		243156	1					
ANR	243239	Identifier	addr		243156	1					
ANR	243240	ExpressionStatement	op -> sign = true	85:1:2391:2406	243156	9	True				
ANR	243241	AssignmentExpression	op -> sign = true		243156	0		=			
ANR	243242	PtrMemberAccess	op -> sign		243156	0					
ANR	243243	Identifier	op		243156	0					
ANR	243244	Identifier	sign		243156	1					
ANR	243245	Identifier	true		243156	1					
ANR	243246	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_UNK	86:1:2409:2438	243156	10	True				
ANR	243247	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_UNK		243156	0		=			
ANR	243248	PtrMemberAccess	op -> type		243156	0					
ANR	243249	Identifier	op		243156	0					
ANR	243250	Identifier	type		243156	1					
ANR	243251	Identifier	R_ANAL_OP_TYPE_UNK		243156	1					
ANR	243252	SwitchStatement	switch ( wop . type )		243156	11					
ANR	243253	Condition	wop . type	87:9:2449:2456	243156	0	True				
ANR	243254	MemberAccess	wop . type		243156	0					
ANR	243255	Identifier	wop		243156	0					
ANR	243256	Identifier	type		243156	1					
ANR	243257	CompoundStatement		13:19:303:303	243156	1					
ANR	243258	Label	case WASM_TYPE_OP_CORE :	88:2:2463:2485	243156	0	True				
ANR	243259	Identifier	WASM_TYPE_OP_CORE		243156	0					
ANR	243260	ExpressionStatement	op -> id = wop . op . core	89:3:2490:2510	243156	1	True				
ANR	243261	AssignmentExpression	op -> id = wop . op . core		243156	0		=			
ANR	243262	PtrMemberAccess	op -> id		243156	0					
ANR	243263	Identifier	op		243156	0					
ANR	243264	Identifier	id		243156	1					
ANR	243265	MemberAccess	wop . op . core		243156	1					
ANR	243266	MemberAccess	wop . op		243156	0					
ANR	243267	Identifier	wop		243156	0					
ANR	243268	Identifier	op		243156	1					
ANR	243269	Identifier	core		243156	1					
ANR	243270	BreakStatement	break ;	90:3:2515:2520	243156	2	True				
ANR	243271	Label	case WASM_TYPE_OP_ATOMIC :	91:2:2524:2548	243156	3	True				
ANR	243272	Identifier	WASM_TYPE_OP_ATOMIC		243156	0					
ANR	243273	ExpressionStatement	op -> id = ( 0xfe << 8 ) | wop . op . atomic	92:3:2553:2589	243156	4	True				
ANR	243274	AssignmentExpression	op -> id = ( 0xfe << 8 ) | wop . op . atomic		243156	0		=			
ANR	243275	PtrMemberAccess	op -> id		243156	0					
ANR	243276	Identifier	op		243156	0					
ANR	243277	Identifier	id		243156	1					
ANR	243278	InclusiveOrExpression	( 0xfe << 8 ) | wop . op . atomic		243156	1		|			
ANR	243279	ShiftExpression	0xfe << 8		243156	0		<<			
ANR	243280	PrimaryExpression	0xfe		243156	0					
ANR	243281	PrimaryExpression	8		243156	1					
ANR	243282	MemberAccess	wop . op . atomic		243156	1					
ANR	243283	MemberAccess	wop . op		243156	0					
ANR	243284	Identifier	wop		243156	0					
ANR	243285	Identifier	op		243156	1					
ANR	243286	Identifier	atomic		243156	1					
ANR	243287	BreakStatement	break ;	93:3:2594:2599	243156	5	True				
ANR	243288	IfStatement	"if ( ! wop . txt || ! strncmp ( wop . txt , ""invalid"" , 7 ) )"		243156	12					
ANR	243289	Condition	"! wop . txt || ! strncmp ( wop . txt , ""invalid"" , 7 )"	96:5:2610:2653	243156	0	True				
ANR	243290	OrExpression	"! wop . txt || ! strncmp ( wop . txt , ""invalid"" , 7 )"		243156	0		||			
ANR	243291	UnaryOperationExpression	! wop . txt		243156	0					
ANR	243292	UnaryOperator	!		243156	0					
ANR	243293	MemberAccess	wop . txt		243156	1					
ANR	243294	Identifier	wop		243156	0					
ANR	243295	Identifier	txt		243156	1					
ANR	243296	UnaryOperationExpression	"! strncmp ( wop . txt , ""invalid"" , 7 )"		243156	1					
ANR	243297	UnaryOperator	!		243156	0					
ANR	243298	CallExpression	"strncmp ( wop . txt , ""invalid"" , 7 )"		243156	1					
ANR	243299	Callee	strncmp		243156	0					
ANR	243300	Identifier	strncmp		243156	0					
ANR	243301	ArgumentList	wop . txt		243156	1					
ANR	243302	Argument	wop . txt		243156	0					
ANR	243303	MemberAccess	wop . txt		243156	0					
ANR	243304	Identifier	wop		243156	0					
ANR	243305	Identifier	txt		243156	1					
ANR	243306	Argument	"""invalid"""		243156	1					
ANR	243307	PrimaryExpression	"""invalid"""		243156	0					
ANR	243308	Argument	7		243156	2					
ANR	243309	PrimaryExpression	7		243156	0					
ANR	243310	CompoundStatement		22:51:500:500	243156	1					
ANR	243311	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ILL	97:2:2660:2689	243156	0	True				
ANR	243312	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ILL		243156	0		=			
ANR	243313	PtrMemberAccess	op -> type		243156	0					
ANR	243314	Identifier	op		243156	0					
ANR	243315	Identifier	type		243156	1					
ANR	243316	Identifier	R_ANAL_OP_TYPE_ILL		243156	1					
ANR	243317	ExpressionStatement	free ( wop . txt )	98:2:2693:2707	243156	1	True				
ANR	243318	CallExpression	free ( wop . txt )		243156	0					
ANR	243319	Callee	free		243156	0					
ANR	243320	Identifier	free		243156	0					
ANR	243321	ArgumentList	wop . txt		243156	1					
ANR	243322	Argument	wop . txt		243156	0					
ANR	243323	MemberAccess	wop . txt		243156	0					
ANR	243324	Identifier	wop		243156	0					
ANR	243325	Identifier	txt		243156	1					
ANR	243326	ReturnStatement	return - 1 ;	99:2:2711:2720	243156	2	True				
ANR	243327	UnaryOperationExpression	- 1		243156	0					
ANR	243328	UnaryOperator	-		243156	0					
ANR	243329	PrimaryExpression	1		243156	1					
ANR	243330	IfStatement	if ( addr_old == addr && ( wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END ) )		243156	13					
ANR	243331	Condition	addr_old == addr && ( wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END )	102:5:2731:2811	243156	0	True				
ANR	243332	AndExpression	addr_old == addr && ( wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END )		243156	0		&&			
ANR	243333	EqualityExpression	addr_old == addr		243156	0		==			
ANR	243334	Identifier	addr_old		243156	0					
ANR	243335	Identifier	addr		243156	1					
ANR	243336	OrExpression	wop . type != WASM_TYPE_OP_CORE || wop . op . core != WASM_OP_END		243156	1		||			
ANR	243337	EqualityExpression	wop . type != WASM_TYPE_OP_CORE		243156	0		!=			
ANR	243338	MemberAccess	wop . type		243156	0					
ANR	243339	Identifier	wop		243156	0					
ANR	243340	Identifier	type		243156	1					
ANR	243341	Identifier	WASM_TYPE_OP_CORE		243156	1					
ANR	243342	EqualityExpression	wop . op . core != WASM_OP_END		243156	1		!=			
ANR	243343	MemberAccess	wop . op . core		243156	0					
ANR	243344	MemberAccess	wop . op		243156	0					
ANR	243345	Identifier	wop		243156	0					
ANR	243346	Identifier	op		243156	1					
ANR	243347	Identifier	core		243156	1					
ANR	243348	Identifier	WASM_OP_END		243156	1					
ANR	243349	CompoundStatement		28:88:658:658	243156	1					
ANR	243350	GotoStatement	goto anal_end ;	103:2:2818:2831	243156	0	True				
ANR	243351	Identifier	anal_end		243156	0					
ANR	243352	SwitchStatement	switch ( wop . type )		243156	14					
ANR	243353	Condition	wop . type	106:9:2846:2853	243156	0	True				
ANR	243354	MemberAccess	wop . type		243156	0					
ANR	243355	Identifier	wop		243156	0					
ANR	243356	Identifier	type		243156	1					
ANR	243357	CompoundStatement		32:19:700:700	243156	1					
ANR	243358	Label	case WASM_TYPE_OP_CORE :	107:1:2859:2881	243156	0	True				
ANR	243359	Identifier	WASM_TYPE_OP_CORE		243156	0					
ANR	243360	SwitchStatement	switch ( wop . op . core )		243156	1					
ANR	243361	Condition	wop . op . core	108:10:2893:2903	243156	0	True				
ANR	243362	MemberAccess	wop . op . core		243156	0					
ANR	243363	MemberAccess	wop . op		243156	0					
ANR	243364	Identifier	wop		243156	0					
ANR	243365	Identifier	op		243156	1					
ANR	243366	Identifier	core		243156	1					
ANR	243367	CompoundStatement		34:23:750:750	243156	1					
ANR	243368	Label	case WASM_OP_LOOP :	110:2:2964:2981	243156	0	True				
ANR	243369	Identifier	WASM_OP_LOOP		243156	0					
ANR	243370	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	111:3:2986:3015	243156	1	True				
ANR	243371	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		243156	0		=			
ANR	243372	PtrMemberAccess	op -> type		243156	0					
ANR	243373	Identifier	op		243156	0					
ANR	243374	Identifier	type		243156	1					
ANR	243375	Identifier	R_ANAL_OP_TYPE_NOP		243156	1					
ANR	243376	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		243156	2					
ANR	243377	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	112:7:3024:3061	243156	0	True				
ANR	243378	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		243156	0					
ANR	243379	UnaryOperator	!		243156	0					
ANR	243380	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		243156	1		=			
ANR	243381	Identifier	hint		243156	0					
ANR	243382	CallExpression	"r_anal_hint_get ( anal , addr )"		243156	1					
ANR	243383	Callee	r_anal_hint_get		243156	0					
ANR	243384	Identifier	r_anal_hint_get		243156	0					
ANR	243385	ArgumentList	anal		243156	1					
ANR	243386	Argument	anal		243156	0					
ANR	243387	Identifier	anal		243156	0					
ANR	243388	Argument	addr		243156	1					
ANR	243389	Identifier	addr		243156	0					
ANR	243390	CompoundStatement		38:47:908:908	243156	1					
ANR	243391	ExpressionStatement	scope_hint --	113:4:3070:3082	243156	0	True				
ANR	243392	PostIncDecOperationExpression	scope_hint --		243156	0					
ANR	243393	Identifier	scope_hint		243156	0					
ANR	243394	IncDec	--		243156	1					
ANR	243395	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""loop"" )"	114:4:3088:3137	243156	1	True				
ANR	243396	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""loop"" )"		243156	0					
ANR	243397	Callee	r_anal_hint_set_opcode		243156	0					
ANR	243398	Identifier	r_anal_hint_set_opcode		243156	0					
ANR	243399	ArgumentList	anal		243156	1					
ANR	243400	Argument	anal		243156	0					
ANR	243401	Identifier	anal		243156	0					
ANR	243402	Argument	scope_hint		243156	1					
ANR	243403	Identifier	scope_hint		243156	0					
ANR	243404	Argument	"""loop"""		243156	2					
ANR	243405	PrimaryExpression	"""loop"""		243156	0					
ANR	243406	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , addr )"	115:4:3143:3188	243156	2	True				
ANR	243407	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , addr )"		243156	0					
ANR	243408	Callee	r_anal_hint_set_jump		243156	0					
ANR	243409	Identifier	r_anal_hint_set_jump		243156	0					
ANR	243410	ArgumentList	anal		243156	1					
ANR	243411	Argument	anal		243156	0					
ANR	243412	Identifier	anal		243156	0					
ANR	243413	Argument	scope_hint		243156	1					
ANR	243414	Identifier	scope_hint		243156	0					
ANR	243415	Argument	addr		243156	2					
ANR	243416	Identifier	addr		243156	0					
ANR	243417	BreakStatement	break ;	117:3:3198:3203	243156	3	True				
ANR	243418	Label	case WASM_OP_BLOCK :	118:2:3207:3225	243156	4	True				
ANR	243419	Identifier	WASM_OP_BLOCK		243156	0					
ANR	243420	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	119:3:3230:3259	243156	5	True				
ANR	243421	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		243156	0		=			
ANR	243422	PtrMemberAccess	op -> type		243156	0					
ANR	243423	Identifier	op		243156	0					
ANR	243424	Identifier	type		243156	1					
ANR	243425	Identifier	R_ANAL_OP_TYPE_NOP		243156	1					
ANR	243426	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		243156	6					
ANR	243427	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	120:7:3268:3305	243156	0	True				
ANR	243428	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		243156	0					
ANR	243429	UnaryOperator	!		243156	0					
ANR	243430	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		243156	1		=			
ANR	243431	Identifier	hint		243156	0					
ANR	243432	CallExpression	"r_anal_hint_get ( anal , addr )"		243156	1					
ANR	243433	Callee	r_anal_hint_get		243156	0					
ANR	243434	Identifier	r_anal_hint_get		243156	0					
ANR	243435	ArgumentList	anal		243156	1					
ANR	243436	Argument	anal		243156	0					
ANR	243437	Identifier	anal		243156	0					
ANR	243438	Argument	addr		243156	1					
ANR	243439	Identifier	addr		243156	0					
ANR	243440	CompoundStatement		46:47:1152:1152	243156	1					
ANR	243441	ExpressionStatement	scope_hint --	121:4:3314:3326	243156	0	True				
ANR	243442	PostIncDecOperationExpression	scope_hint --		243156	0					
ANR	243443	Identifier	scope_hint		243156	0					
ANR	243444	IncDec	--		243156	1					
ANR	243445	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""block"" )"	122:4:3332:3382	243156	1	True				
ANR	243446	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""block"" )"		243156	0					
ANR	243447	Callee	r_anal_hint_set_opcode		243156	0					
ANR	243448	Identifier	r_anal_hint_set_opcode		243156	0					
ANR	243449	ArgumentList	anal		243156	1					
ANR	243450	Argument	anal		243156	0					
ANR	243451	Identifier	anal		243156	0					
ANR	243452	Argument	scope_hint		243156	1					
ANR	243453	Identifier	scope_hint		243156	0					
ANR	243454	Argument	"""block"""		243156	2					
ANR	243455	PrimaryExpression	"""block"""		243156	0					
ANR	243456	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , addr )"	123:4:3388:3433	243156	2	True				
ANR	243457	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , addr )"		243156	0					
ANR	243458	Callee	r_anal_hint_set_jump		243156	0					
ANR	243459	Identifier	r_anal_hint_set_jump		243156	0					
ANR	243460	ArgumentList	anal		243156	1					
ANR	243461	Argument	anal		243156	0					
ANR	243462	Identifier	anal		243156	0					
ANR	243463	Argument	scope_hint		243156	1					
ANR	243464	Identifier	scope_hint		243156	0					
ANR	243465	Argument	addr		243156	2					
ANR	243466	Identifier	addr		243156	0					
ANR	243467	BreakStatement	break ;	125:3:3443:3448	243156	7	True				
ANR	243468	Label	case WASM_OP_IF :	126:2:3452:3467	243156	8	True				
ANR	243469	Identifier	WASM_OP_IF		243156	0					
ANR	243470	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		243156	9					
ANR	243471	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	127:7:3476:3513	243156	0	True				
ANR	243472	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		243156	0					
ANR	243473	UnaryOperator	!		243156	0					
ANR	243474	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		243156	1		=			
ANR	243475	Identifier	hint		243156	0					
ANR	243476	CallExpression	"r_anal_hint_get ( anal , addr )"		243156	1					
ANR	243477	Callee	r_anal_hint_get		243156	0					
ANR	243478	Identifier	r_anal_hint_get		243156	0					
ANR	243479	ArgumentList	anal		243156	1					
ANR	243480	Argument	anal		243156	0					
ANR	243481	Identifier	anal		243156	0					
ANR	243482	Argument	addr		243156	1					
ANR	243483	Identifier	addr		243156	0					
ANR	243484	CompoundStatement		53:47:1360:1360	243156	1					
ANR	243485	ExpressionStatement	scope_hint --	128:4:3522:3534	243156	0	True				
ANR	243486	PostIncDecOperationExpression	scope_hint --		243156	0					
ANR	243487	Identifier	scope_hint		243156	0					
ANR	243488	IncDec	--		243156	1					
ANR	243489	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""if"" )"	129:4:3540:3587	243156	1	True				
ANR	243490	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""if"" )"		243156	0					
ANR	243491	Callee	r_anal_hint_set_opcode		243156	0					
ANR	243492	Identifier	r_anal_hint_set_opcode		243156	0					
ANR	243493	ArgumentList	anal		243156	1					
ANR	243494	Argument	anal		243156	0					
ANR	243495	Identifier	anal		243156	0					
ANR	243496	Argument	scope_hint		243156	1					
ANR	243497	Identifier	scope_hint		243156	0					
ANR	243498	Argument	"""if"""		243156	2					
ANR	243499	PrimaryExpression	"""if"""		243156	0					
ANR	243500	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , addr )"	130:4:3593:3638	243156	2	True				
ANR	243501	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , addr )"		243156	0					
ANR	243502	Callee	r_anal_hint_set_jump		243156	0					
ANR	243503	Identifier	r_anal_hint_set_jump		243156	0					
ANR	243504	ArgumentList	anal		243156	1					
ANR	243505	Argument	anal		243156	0					
ANR	243506	Identifier	anal		243156	0					
ANR	243507	Argument	scope_hint		243156	1					
ANR	243508	Identifier	scope_hint		243156	0					
ANR	243509	Argument	addr		243156	2					
ANR	243510	Identifier	addr		243156	0					
ANR	243511	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , 0 , true ) )"		243156	3					
ANR	243512	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , 0 , true )"	131:8:3648:3727	243156	0	True				
ANR	243513	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , 0 , true )"		243156	0					
ANR	243514	Callee	advance_till_scope_end		243156	0					
ANR	243515	Identifier	advance_till_scope_end		243156	0					
ANR	243516	ArgumentList	anal		243156	1					
ANR	243517	Argument	anal		243156	0					
ANR	243518	Identifier	anal		243156	0					
ANR	243519	Argument	op		243156	1					
ANR	243520	Identifier	op		243156	0					
ANR	243521	Argument	addr + op -> size		243156	2					
ANR	243522	AdditiveExpression	addr + op -> size		243156	0		+			
ANR	243523	Identifier	addr		243156	0					
ANR	243524	PtrMemberAccess	op -> size		243156	1					
ANR	243525	Identifier	op		243156	0					
ANR	243526	Identifier	size		243156	1					
ANR	243527	Argument	R_ANAL_OP_TYPE_CJMP		243156	3					
ANR	243528	Identifier	R_ANAL_OP_TYPE_CJMP		243156	0					
ANR	243529	Argument	0		243156	4					
ANR	243530	PrimaryExpression	0		243156	0					
ANR	243531	Argument	true		243156	5					
ANR	243532	Identifier	true		243156	0					
ANR	243533	CompoundStatement		57:90:1574:1574	243156	1					
ANR	243534	ExpressionStatement	op -> fail = addr + op -> size	132:5:3737:3763	243156	0	True				
ANR	243535	AssignmentExpression	op -> fail = addr + op -> size		243156	0		=			
ANR	243536	PtrMemberAccess	op -> fail		243156	0					
ANR	243537	Identifier	op		243156	0					
ANR	243538	Identifier	fail		243156	1					
ANR	243539	AdditiveExpression	addr + op -> size		243156	1		+			
ANR	243540	Identifier	addr		243156	0					
ANR	243541	PtrMemberAccess	op -> size		243156	1					
ANR	243542	Identifier	op		243156	0					
ANR	243543	Identifier	size		243156	1					
ANR	243544	ElseStatement	else		243156	0					
ANR	243545	CompoundStatement		60:10:1625:1625	243156	0					
ANR	243546	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CJMP	135:4:3787:3817	243156	0	True				
ANR	243547	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CJMP		243156	0		=			
ANR	243548	PtrMemberAccess	op -> type		243156	0					
ANR	243549	Identifier	op		243156	0					
ANR	243550	Identifier	type		243156	1					
ANR	243551	Identifier	R_ANAL_OP_TYPE_CJMP		243156	1					
ANR	243552	ExpressionStatement	op -> jump = hint -> jump	136:4:3823:3844	243156	1	True				
ANR	243553	AssignmentExpression	op -> jump = hint -> jump		243156	0		=			
ANR	243554	PtrMemberAccess	op -> jump		243156	0					
ANR	243555	Identifier	op		243156	0					
ANR	243556	Identifier	jump		243156	1					
ANR	243557	PtrMemberAccess	hint -> jump		243156	1					
ANR	243558	Identifier	hint		243156	0					
ANR	243559	Identifier	jump		243156	1					
ANR	243560	ExpressionStatement	op -> fail = addr + op -> size	137:4:3850:3876	243156	2	True				
ANR	243561	AssignmentExpression	op -> fail = addr + op -> size		243156	0		=			
ANR	243562	PtrMemberAccess	op -> fail		243156	0					
ANR	243563	Identifier	op		243156	0					
ANR	243564	Identifier	fail		243156	1					
ANR	243565	AdditiveExpression	addr + op -> size		243156	1		+			
ANR	243566	Identifier	addr		243156	0					
ANR	243567	PtrMemberAccess	op -> size		243156	1					
ANR	243568	Identifier	op		243156	0					
ANR	243569	Identifier	size		243156	1					
ANR	243570	BreakStatement	break ;	139:3:3886:3891	243156	10	True				
ANR	243571	Label	case WASM_OP_ELSE :	140:2:3895:3912	243156	11	True				
ANR	243572	Identifier	WASM_OP_ELSE		243156	0					
ANR	243573	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		243156	12					
ANR	243574	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	142:7:3948:3985	243156	0	True				
ANR	243575	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		243156	0					
ANR	243576	UnaryOperator	!		243156	0					
ANR	243577	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		243156	1		=			
ANR	243578	Identifier	hint		243156	0					
ANR	243579	CallExpression	"r_anal_hint_get ( anal , addr )"		243156	1					
ANR	243580	Callee	r_anal_hint_get		243156	0					
ANR	243581	Identifier	r_anal_hint_get		243156	0					
ANR	243582	ArgumentList	anal		243156	1					
ANR	243583	Argument	anal		243156	0					
ANR	243584	Identifier	anal		243156	0					
ANR	243585	Argument	addr		243156	1					
ANR	243586	Identifier	addr		243156	0					
ANR	243587	CompoundStatement		68:47:1832:1832	243156	1					
ANR	243588	ExpressionStatement	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , 0 , true )"	143:4:3994:4073	243156	0	True				
ANR	243589	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , 0 , true )"		243156	0					
ANR	243590	Callee	advance_till_scope_end		243156	0					
ANR	243591	Identifier	advance_till_scope_end		243156	0					
ANR	243592	ArgumentList	anal		243156	1					
ANR	243593	Argument	anal		243156	0					
ANR	243594	Identifier	anal		243156	0					
ANR	243595	Argument	op		243156	1					
ANR	243596	Identifier	op		243156	0					
ANR	243597	Argument	addr + op -> size		243156	2					
ANR	243598	AdditiveExpression	addr + op -> size		243156	0		+			
ANR	243599	Identifier	addr		243156	0					
ANR	243600	PtrMemberAccess	op -> size		243156	1					
ANR	243601	Identifier	op		243156	0					
ANR	243602	Identifier	size		243156	1					
ANR	243603	Argument	R_ANAL_OP_TYPE_JMP		243156	3					
ANR	243604	Identifier	R_ANAL_OP_TYPE_JMP		243156	0					
ANR	243605	Argument	0		243156	4					
ANR	243606	PrimaryExpression	0		243156	0					
ANR	243607	Argument	true		243156	5					
ANR	243608	Identifier	true		243156	0					
ANR	243609	ElseStatement	else		243156	0					
ANR	243610	CompoundStatement		70:10:1929:1929	243156	0					
ANR	243611	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_JMP	145:4:4091:4120	243156	0	True				
ANR	243612	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_JMP		243156	0		=			
ANR	243613	PtrMemberAccess	op -> type		243156	0					
ANR	243614	Identifier	op		243156	0					
ANR	243615	Identifier	type		243156	1					
ANR	243616	Identifier	R_ANAL_OP_TYPE_JMP		243156	1					
ANR	243617	ExpressionStatement	op -> jump = hint -> jump	146:4:4126:4147	243156	1	True				
ANR	243618	AssignmentExpression	op -> jump = hint -> jump		243156	0		=			
ANR	243619	PtrMemberAccess	op -> jump		243156	0					
ANR	243620	Identifier	op		243156	0					
ANR	243621	Identifier	jump		243156	1					
ANR	243622	PtrMemberAccess	hint -> jump		243156	1					
ANR	243623	Identifier	hint		243156	0					
ANR	243624	Identifier	jump		243156	1					
ANR	243625	BreakStatement	break ;	148:3:4157:4162	243156	13	True				
ANR	243626	Label	case WASM_OP_BR :	149:2:4166:4181	243156	14	True				
ANR	243627	Identifier	WASM_OP_BR		243156	0					
ANR	243628	CompoundStatement		78:4:2065:2073	243156	15					
ANR	243629	IdentifierDeclStatement	RAnalHint * hint2 = NULL ;	151:4:4192:4215	243156	0	True				
ANR	243630	IdentifierDecl	* hint2 = NULL		243156	0					
ANR	243631	IdentifierDeclType	RAnalHint *		243156	0					
ANR	243632	Identifier	hint2		243156	1					
ANR	243633	AssignmentExpression	* hint2 = NULL		243156	2		=			
ANR	243634	Identifier	NULL		243156	0					
ANR	243635	Identifier	NULL		243156	1					
ANR	243636	IdentifierDeclStatement	ut32 val ;	152:4:4221:4229	243156	1	True				
ANR	243637	IdentifierDecl	val		243156	0					
ANR	243638	IdentifierDeclType	ut32		243156	0					
ANR	243639	Identifier	val		243156	1					
ANR	243640	ExpressionStatement	"read_u32_leb128 ( data + 1 , data + len , & val )"	153:4:4235:4279	243156	2	True				
ANR	243641	CallExpression	"read_u32_leb128 ( data + 1 , data + len , & val )"		243156	0					
ANR	243642	Callee	read_u32_leb128		243156	0					
ANR	243643	Identifier	read_u32_leb128		243156	0					
ANR	243644	ArgumentList	data + 1		243156	1					
ANR	243645	Argument	data + 1		243156	0					
ANR	243646	AdditiveExpression	data + 1		243156	0		+			
ANR	243647	Identifier	data		243156	0					
ANR	243648	PrimaryExpression	1		243156	1					
ANR	243649	Argument	data + len		243156	1					
ANR	243650	AdditiveExpression	data + len		243156	0		+			
ANR	243651	Identifier	data		243156	0					
ANR	243652	Identifier	len		243156	1					
ANR	243653	Argument	& val		243156	2					
ANR	243654	UnaryOperationExpression	& val		243156	0					
ANR	243655	UnaryOperator	&		243156	0					
ANR	243656	Identifier	val		243156	1					
ANR	243657	IfStatement	"if ( ( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX )"		243156	3					
ANR	243658	Condition	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"	154:8:4289:4353	243156	0	True				
ANR	243659	AndExpression	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"		243156	0		&&			
ANR	243660	AssignmentExpression	"hint2 = r_anal_hint_get ( anal , addr )"		243156	0		=			
ANR	243661	Identifier	hint2		243156	0					
ANR	243662	CallExpression	"r_anal_hint_get ( anal , addr )"		243156	1					
ANR	243663	Callee	r_anal_hint_get		243156	0					
ANR	243664	Identifier	r_anal_hint_get		243156	0					
ANR	243665	ArgumentList	anal		243156	1					
ANR	243666	Argument	anal		243156	0					
ANR	243667	Identifier	anal		243156	0					
ANR	243668	Argument	addr		243156	1					
ANR	243669	Identifier	addr		243156	0					
ANR	243670	EqualityExpression	hint2 -> jump != UT64_MAX		243156	1		!=			
ANR	243671	PtrMemberAccess	hint2 -> jump		243156	0					
ANR	243672	Identifier	hint2		243156	0					
ANR	243673	Identifier	jump		243156	1					
ANR	243674	Identifier	UT64_MAX		243156	1					
ANR	243675	CompoundStatement		80:75:2200:2200	243156	1					
ANR	243676	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_JMP	155:5:4363:4392	243156	0	True				
ANR	243677	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_JMP		243156	0		=			
ANR	243678	PtrMemberAccess	op -> type		243156	0					
ANR	243679	Identifier	op		243156	0					
ANR	243680	Identifier	type		243156	1					
ANR	243681	Identifier	R_ANAL_OP_TYPE_JMP		243156	1					
ANR	243682	ExpressionStatement	op -> jump = hint2 -> jump	156:5:4399:4421	243156	1	True				
ANR	243683	AssignmentExpression	op -> jump = hint2 -> jump		243156	0		=			
ANR	243684	PtrMemberAccess	op -> jump		243156	0					
ANR	243685	Identifier	op		243156	0					
ANR	243686	Identifier	jump		243156	1					
ANR	243687	PtrMemberAccess	hint2 -> jump		243156	1					
ANR	243688	Identifier	hint2		243156	0					
ANR	243689	Identifier	jump		243156	1					
ANR	243690	ElseStatement	else		243156	0					
ANR	243691	IfStatement	"if ( ( hint = r_anal_hint_get ( anal , scope_hint ) ) )"		243156	0					
ANR	243692	Condition	"hint = r_anal_hint_get ( anal , scope_hint )"	157:15:4438:4480	243156	0	True				
ANR	243693	AssignmentExpression	"hint = r_anal_hint_get ( anal , scope_hint )"		243156	0		=			
ANR	243694	Identifier	hint		243156	0					
ANR	243695	CallExpression	"r_anal_hint_get ( anal , scope_hint )"		243156	1					
ANR	243696	Callee	r_anal_hint_get		243156	0					
ANR	243697	Identifier	r_anal_hint_get		243156	0					
ANR	243698	ArgumentList	anal		243156	1					
ANR	243699	Argument	anal		243156	0					
ANR	243700	Identifier	anal		243156	0					
ANR	243701	Argument	scope_hint		243156	1					
ANR	243702	Identifier	scope_hint		243156	0					
ANR	243703	CompoundStatement		83:60:2327:2327	243156	1					
ANR	243704	IfStatement	"if ( hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 ) )"		243156	0					
ANR	243705	Condition	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"	158:9:4494:4543	243156	0	True				
ANR	243706	AndExpression	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	0		&&			
ANR	243707	PtrMemberAccess	hint -> opcode		243156	0					
ANR	243708	Identifier	hint		243156	0					
ANR	243709	Identifier	opcode		243156	1					
ANR	243710	UnaryOperationExpression	"! strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	1					
ANR	243711	UnaryOperator	!		243156	0					
ANR	243712	CallExpression	"strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	1					
ANR	243713	Callee	strncmp		243156	0					
ANR	243714	Identifier	strncmp		243156	0					
ANR	243715	ArgumentList	"""loop"""		243156	1					
ANR	243716	Argument	"""loop"""		243156	0					
ANR	243717	PrimaryExpression	"""loop"""		243156	0					
ANR	243718	Argument	hint -> opcode		243156	1					
ANR	243719	PtrMemberAccess	hint -> opcode		243156	0					
ANR	243720	Identifier	hint		243156	0					
ANR	243721	Identifier	opcode		243156	1					
ANR	243722	Argument	4		243156	2					
ANR	243723	PrimaryExpression	4		243156	0					
ANR	243724	CompoundStatement		84:61:2390:2390	243156	1					
ANR	243725	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_JMP	159:6:4554:4583	243156	0	True				
ANR	243726	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_JMP		243156	0		=			
ANR	243727	PtrMemberAccess	op -> type		243156	0					
ANR	243728	Identifier	op		243156	0					
ANR	243729	Identifier	type		243156	1					
ANR	243730	Identifier	R_ANAL_OP_TYPE_JMP		243156	1					
ANR	243731	ExpressionStatement	op -> jump = hint -> jump	160:6:4591:4612	243156	1	True				
ANR	243732	AssignmentExpression	op -> jump = hint -> jump		243156	0		=			
ANR	243733	PtrMemberAccess	op -> jump		243156	0					
ANR	243734	Identifier	op		243156	0					
ANR	243735	Identifier	jump		243156	1					
ANR	243736	PtrMemberAccess	hint -> jump		243156	1					
ANR	243737	Identifier	hint		243156	0					
ANR	243738	Identifier	jump		243156	1					
ANR	243739	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	161:6:4620:4663	243156	2	True				
ANR	243740	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		243156	0					
ANR	243741	Callee	r_anal_hint_set_jump		243156	0					
ANR	243742	Identifier	r_anal_hint_set_jump		243156	0					
ANR	243743	ArgumentList	anal		243156	1					
ANR	243744	Argument	anal		243156	0					
ANR	243745	Identifier	anal		243156	0					
ANR	243746	Argument	addr		243156	1					
ANR	243747	Identifier	addr		243156	0					
ANR	243748	Argument	op -> jump		243156	2					
ANR	243749	PtrMemberAccess	op -> jump		243156	0					
ANR	243750	Identifier	op		243156	0					
ANR	243751	Identifier	jump		243156	1					
ANR	243752	ElseStatement	else		243156	0					
ANR	243753	CompoundStatement		88:12:2521:2521	243156	0					
ANR	243754	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false ) )"		243156	0					
ANR	243755	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"	163:10:4689:4770	243156	0	True				
ANR	243756	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"		243156	0					
ANR	243757	Callee	advance_till_scope_end		243156	0					
ANR	243758	Identifier	advance_till_scope_end		243156	0					
ANR	243759	ArgumentList	anal		243156	1					
ANR	243760	Argument	anal		243156	0					
ANR	243761	Identifier	anal		243156	0					
ANR	243762	Argument	op		243156	1					
ANR	243763	Identifier	op		243156	0					
ANR	243764	Argument	addr + op -> size		243156	2					
ANR	243765	AdditiveExpression	addr + op -> size		243156	0		+			
ANR	243766	Identifier	addr		243156	0					
ANR	243767	PtrMemberAccess	op -> size		243156	1					
ANR	243768	Identifier	op		243156	0					
ANR	243769	Identifier	size		243156	1					
ANR	243770	Argument	R_ANAL_OP_TYPE_JMP		243156	3					
ANR	243771	Identifier	R_ANAL_OP_TYPE_JMP		243156	0					
ANR	243772	Argument	val		243156	4					
ANR	243773	Identifier	val		243156	0					
ANR	243774	Argument	false		243156	5					
ANR	243775	Identifier	false		243156	0					
ANR	243776	CompoundStatement		89:94:2617:2617	243156	1					
ANR	243777	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	164:7:4782:4825	243156	0	True				
ANR	243778	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		243156	0					
ANR	243779	Callee	r_anal_hint_set_jump		243156	0					
ANR	243780	Identifier	r_anal_hint_set_jump		243156	0					
ANR	243781	ArgumentList	anal		243156	1					
ANR	243782	Argument	anal		243156	0					
ANR	243783	Identifier	anal		243156	0					
ANR	243784	Argument	addr		243156	1					
ANR	243785	Identifier	addr		243156	0					
ANR	243786	Argument	op -> jump		243156	2					
ANR	243787	PtrMemberAccess	op -> jump		243156	0					
ANR	243788	Identifier	op		243156	0					
ANR	243789	Identifier	jump		243156	1					
ANR	243790	ElseStatement	else		243156	0					
ANR	243791	CompoundStatement		93:11:2697:2697	243156	0					
ANR	243792	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false ) )"		243156	0					
ANR	243793	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"	168:9:4864:4945	243156	0	True				
ANR	243794	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_JMP , val , false )"		243156	0					
ANR	243795	Callee	advance_till_scope_end		243156	0					
ANR	243796	Identifier	advance_till_scope_end		243156	0					
ANR	243797	ArgumentList	anal		243156	1					
ANR	243798	Argument	anal		243156	0					
ANR	243799	Identifier	anal		243156	0					
ANR	243800	Argument	op		243156	1					
ANR	243801	Identifier	op		243156	0					
ANR	243802	Argument	addr + op -> size		243156	2					
ANR	243803	AdditiveExpression	addr + op -> size		243156	0		+			
ANR	243804	Identifier	addr		243156	0					
ANR	243805	PtrMemberAccess	op -> size		243156	1					
ANR	243806	Identifier	op		243156	0					
ANR	243807	Identifier	size		243156	1					
ANR	243808	Argument	R_ANAL_OP_TYPE_JMP		243156	3					
ANR	243809	Identifier	R_ANAL_OP_TYPE_JMP		243156	0					
ANR	243810	Argument	val		243156	4					
ANR	243811	Identifier	val		243156	0					
ANR	243812	Argument	false		243156	5					
ANR	243813	Identifier	false		243156	0					
ANR	243814	CompoundStatement		94:93:2792:2792	243156	1					
ANR	243815	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump type for br (using block type)\\n"" )"	169:6:4956:5024	243156	0	True				
ANR	243816	CallExpression	"eprintf ( ""[wasm] cannot find jump type for br (using block type)\\n"" )"		243156	0					
ANR	243817	Callee	eprintf		243156	0					
ANR	243818	Identifier	eprintf		243156	0					
ANR	243819	ArgumentList	"""[wasm] cannot find jump type for br (using block type)\\n"""		243156	1					
ANR	243820	Argument	"""[wasm] cannot find jump type for br (using block type)\\n"""		243156	0					
ANR	243821	PrimaryExpression	"""[wasm] cannot find jump type for br (using block type)\\n"""		243156	0					
ANR	243822	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	170:6:5032:5075	243156	1	True				
ANR	243823	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		243156	0					
ANR	243824	Callee	r_anal_hint_set_jump		243156	0					
ANR	243825	Identifier	r_anal_hint_set_jump		243156	0					
ANR	243826	ArgumentList	anal		243156	1					
ANR	243827	Argument	anal		243156	0					
ANR	243828	Identifier	anal		243156	0					
ANR	243829	Argument	addr		243156	1					
ANR	243830	Identifier	addr		243156	0					
ANR	243831	Argument	op -> jump		243156	2					
ANR	243832	PtrMemberAccess	op -> jump		243156	0					
ANR	243833	Identifier	op		243156	0					
ANR	243834	Identifier	jump		243156	1					
ANR	243835	ElseStatement	else		243156	0					
ANR	243836	CompoundStatement		97:12:2933:2933	243156	0					
ANR	243837	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump for br\\n"" )"	172:6:5097:5141	243156	0	True				
ANR	243838	CallExpression	"eprintf ( ""[wasm] cannot find jump for br\\n"" )"		243156	0					
ANR	243839	Callee	eprintf		243156	0					
ANR	243840	Identifier	eprintf		243156	0					
ANR	243841	ArgumentList	"""[wasm] cannot find jump for br\\n"""		243156	1					
ANR	243842	Argument	"""[wasm] cannot find jump for br\\n"""		243156	0					
ANR	243843	PrimaryExpression	"""[wasm] cannot find jump for br\\n"""		243156	0					
ANR	243844	ExpressionStatement	r_anal_hint_free ( hint2 )	175:4:5160:5184	243156	4	True				
ANR	243845	CallExpression	r_anal_hint_free ( hint2 )		243156	0					
ANR	243846	Callee	r_anal_hint_free		243156	0					
ANR	243847	Identifier	r_anal_hint_free		243156	0					
ANR	243848	ArgumentList	hint2		243156	1					
ANR	243849	Argument	hint2		243156	0					
ANR	243850	Identifier	hint2		243156	0					
ANR	243851	BreakStatement	break ;	177:3:5194:5199	243156	16	True				
ANR	243852	Label	case WASM_OP_BRIF :	178:2:5203:5220	243156	17	True				
ANR	243853	Identifier	WASM_OP_BRIF		243156	0					
ANR	243854	CompoundStatement		107:4:3104:3112	243156	18					
ANR	243855	IdentifierDeclStatement	RAnalHint * hint2 = NULL ;	180:4:5231:5254	243156	0	True				
ANR	243856	IdentifierDecl	* hint2 = NULL		243156	0					
ANR	243857	IdentifierDeclType	RAnalHint *		243156	0					
ANR	243858	Identifier	hint2		243156	1					
ANR	243859	AssignmentExpression	* hint2 = NULL		243156	2		=			
ANR	243860	Identifier	NULL		243156	0					
ANR	243861	Identifier	NULL		243156	1					
ANR	243862	IdentifierDeclStatement	ut32 val ;	181:4:5260:5268	243156	1	True				
ANR	243863	IdentifierDecl	val		243156	0					
ANR	243864	IdentifierDeclType	ut32		243156	0					
ANR	243865	Identifier	val		243156	1					
ANR	243866	ExpressionStatement	"read_u32_leb128 ( data + 1 , data + len , & val )"	182:4:5274:5318	243156	2	True				
ANR	243867	CallExpression	"read_u32_leb128 ( data + 1 , data + len , & val )"		243156	0					
ANR	243868	Callee	read_u32_leb128		243156	0					
ANR	243869	Identifier	read_u32_leb128		243156	0					
ANR	243870	ArgumentList	data + 1		243156	1					
ANR	243871	Argument	data + 1		243156	0					
ANR	243872	AdditiveExpression	data + 1		243156	0		+			
ANR	243873	Identifier	data		243156	0					
ANR	243874	PrimaryExpression	1		243156	1					
ANR	243875	Argument	data + len		243156	1					
ANR	243876	AdditiveExpression	data + len		243156	0		+			
ANR	243877	Identifier	data		243156	0					
ANR	243878	Identifier	len		243156	1					
ANR	243879	Argument	& val		243156	2					
ANR	243880	UnaryOperationExpression	& val		243156	0					
ANR	243881	UnaryOperator	&		243156	0					
ANR	243882	Identifier	val		243156	1					
ANR	243883	IfStatement	"if ( ( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX )"		243156	3					
ANR	243884	Condition	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"	183:8:5328:5392	243156	0	True				
ANR	243885	AndExpression	"( hint2 = r_anal_hint_get ( anal , addr ) ) && hint2 -> jump != UT64_MAX"		243156	0		&&			
ANR	243886	AssignmentExpression	"hint2 = r_anal_hint_get ( anal , addr )"		243156	0		=			
ANR	243887	Identifier	hint2		243156	0					
ANR	243888	CallExpression	"r_anal_hint_get ( anal , addr )"		243156	1					
ANR	243889	Callee	r_anal_hint_get		243156	0					
ANR	243890	Identifier	r_anal_hint_get		243156	0					
ANR	243891	ArgumentList	anal		243156	1					
ANR	243892	Argument	anal		243156	0					
ANR	243893	Identifier	anal		243156	0					
ANR	243894	Argument	addr		243156	1					
ANR	243895	Identifier	addr		243156	0					
ANR	243896	EqualityExpression	hint2 -> jump != UT64_MAX		243156	1		!=			
ANR	243897	PtrMemberAccess	hint2 -> jump		243156	0					
ANR	243898	Identifier	hint2		243156	0					
ANR	243899	Identifier	jump		243156	1					
ANR	243900	Identifier	UT64_MAX		243156	1					
ANR	243901	CompoundStatement		109:75:3239:3239	243156	1					
ANR	243902	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CJMP	184:5:5402:5432	243156	0	True				
ANR	243903	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CJMP		243156	0		=			
ANR	243904	PtrMemberAccess	op -> type		243156	0					
ANR	243905	Identifier	op		243156	0					
ANR	243906	Identifier	type		243156	1					
ANR	243907	Identifier	R_ANAL_OP_TYPE_CJMP		243156	1					
ANR	243908	ExpressionStatement	op -> jump = hint2 -> jump	185:5:5439:5461	243156	1	True				
ANR	243909	AssignmentExpression	op -> jump = hint2 -> jump		243156	0		=			
ANR	243910	PtrMemberAccess	op -> jump		243156	0					
ANR	243911	Identifier	op		243156	0					
ANR	243912	Identifier	jump		243156	1					
ANR	243913	PtrMemberAccess	hint2 -> jump		243156	1					
ANR	243914	Identifier	hint2		243156	0					
ANR	243915	Identifier	jump		243156	1					
ANR	243916	ExpressionStatement	op -> fail = addr + op -> size	186:5:5468:5494	243156	2	True				
ANR	243917	AssignmentExpression	op -> fail = addr + op -> size		243156	0		=			
ANR	243918	PtrMemberAccess	op -> fail		243156	0					
ANR	243919	Identifier	op		243156	0					
ANR	243920	Identifier	fail		243156	1					
ANR	243921	AdditiveExpression	addr + op -> size		243156	1		+			
ANR	243922	Identifier	addr		243156	0					
ANR	243923	PtrMemberAccess	op -> size		243156	1					
ANR	243924	Identifier	op		243156	0					
ANR	243925	Identifier	size		243156	1					
ANR	243926	ElseStatement	else		243156	0					
ANR	243927	IfStatement	"if ( ( hint = r_anal_hint_get ( anal , scope_hint ) ) )"		243156	0					
ANR	243928	Condition	"hint = r_anal_hint_get ( anal , scope_hint )"	187:15:5511:5553	243156	0	True				
ANR	243929	AssignmentExpression	"hint = r_anal_hint_get ( anal , scope_hint )"		243156	0		=			
ANR	243930	Identifier	hint		243156	0					
ANR	243931	CallExpression	"r_anal_hint_get ( anal , scope_hint )"		243156	1					
ANR	243932	Callee	r_anal_hint_get		243156	0					
ANR	243933	Identifier	r_anal_hint_get		243156	0					
ANR	243934	ArgumentList	anal		243156	1					
ANR	243935	Argument	anal		243156	0					
ANR	243936	Identifier	anal		243156	0					
ANR	243937	Argument	scope_hint		243156	1					
ANR	243938	Identifier	scope_hint		243156	0					
ANR	243939	CompoundStatement		113:60:3400:3400	243156	1					
ANR	243940	IfStatement	"if ( hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 ) )"		243156	0					
ANR	243941	Condition	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"	188:9:5567:5616	243156	0	True				
ANR	243942	AndExpression	"hint -> opcode && ! strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	0		&&			
ANR	243943	PtrMemberAccess	hint -> opcode		243156	0					
ANR	243944	Identifier	hint		243156	0					
ANR	243945	Identifier	opcode		243156	1					
ANR	243946	UnaryOperationExpression	"! strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	1					
ANR	243947	UnaryOperator	!		243156	0					
ANR	243948	CallExpression	"strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	1					
ANR	243949	Callee	strncmp		243156	0					
ANR	243950	Identifier	strncmp		243156	0					
ANR	243951	ArgumentList	"""loop"""		243156	1					
ANR	243952	Argument	"""loop"""		243156	0					
ANR	243953	PrimaryExpression	"""loop"""		243156	0					
ANR	243954	Argument	hint -> opcode		243156	1					
ANR	243955	PtrMemberAccess	hint -> opcode		243156	0					
ANR	243956	Identifier	hint		243156	0					
ANR	243957	Identifier	opcode		243156	1					
ANR	243958	Argument	4		243156	2					
ANR	243959	PrimaryExpression	4		243156	0					
ANR	243960	CompoundStatement		114:61:3463:3463	243156	1					
ANR	243961	ExpressionStatement	op -> fail = addr + op -> size	189:6:5627:5653	243156	0	True				
ANR	243962	AssignmentExpression	op -> fail = addr + op -> size		243156	0		=			
ANR	243963	PtrMemberAccess	op -> fail		243156	0					
ANR	243964	Identifier	op		243156	0					
ANR	243965	Identifier	fail		243156	1					
ANR	243966	AdditiveExpression	addr + op -> size		243156	1		+			
ANR	243967	Identifier	addr		243156	0					
ANR	243968	PtrMemberAccess	op -> size		243156	1					
ANR	243969	Identifier	op		243156	0					
ANR	243970	Identifier	size		243156	1					
ANR	243971	ExpressionStatement	op -> jump = hint -> jump	190:6:5661:5682	243156	1	True				
ANR	243972	AssignmentExpression	op -> jump = hint -> jump		243156	0		=			
ANR	243973	PtrMemberAccess	op -> jump		243156	0					
ANR	243974	Identifier	op		243156	0					
ANR	243975	Identifier	jump		243156	1					
ANR	243976	PtrMemberAccess	hint -> jump		243156	1					
ANR	243977	Identifier	hint		243156	0					
ANR	243978	Identifier	jump		243156	1					
ANR	243979	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	191:6:5690:5733	243156	2	True				
ANR	243980	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		243156	0					
ANR	243981	Callee	r_anal_hint_set_jump		243156	0					
ANR	243982	Identifier	r_anal_hint_set_jump		243156	0					
ANR	243983	ArgumentList	anal		243156	1					
ANR	243984	Argument	anal		243156	0					
ANR	243985	Identifier	anal		243156	0					
ANR	243986	Argument	addr		243156	1					
ANR	243987	Identifier	addr		243156	0					
ANR	243988	Argument	op -> jump		243156	2					
ANR	243989	PtrMemberAccess	op -> jump		243156	0					
ANR	243990	Identifier	op		243156	0					
ANR	243991	Identifier	jump		243156	1					
ANR	243992	ElseStatement	else		243156	0					
ANR	243993	CompoundStatement		118:12:3591:3591	243156	0					
ANR	243994	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false ) )"		243156	0					
ANR	243995	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"	193:10:5759:5841	243156	0	True				
ANR	243996	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"		243156	0					
ANR	243997	Callee	advance_till_scope_end		243156	0					
ANR	243998	Identifier	advance_till_scope_end		243156	0					
ANR	243999	ArgumentList	anal		243156	1					
ANR	244000	Argument	anal		243156	0					
ANR	244001	Identifier	anal		243156	0					
ANR	244002	Argument	op		243156	1					
ANR	244003	Identifier	op		243156	0					
ANR	244004	Argument	addr + op -> size		243156	2					
ANR	244005	AdditiveExpression	addr + op -> size		243156	0		+			
ANR	244006	Identifier	addr		243156	0					
ANR	244007	PtrMemberAccess	op -> size		243156	1					
ANR	244008	Identifier	op		243156	0					
ANR	244009	Identifier	size		243156	1					
ANR	244010	Argument	R_ANAL_OP_TYPE_CJMP		243156	3					
ANR	244011	Identifier	R_ANAL_OP_TYPE_CJMP		243156	0					
ANR	244012	Argument	val		243156	4					
ANR	244013	Identifier	val		243156	0					
ANR	244014	Argument	false		243156	5					
ANR	244015	Identifier	false		243156	0					
ANR	244016	CompoundStatement		119:95:3688:3688	243156	1					
ANR	244017	ExpressionStatement	op -> fail = addr + op -> size	194:7:5853:5879	243156	0	True				
ANR	244018	AssignmentExpression	op -> fail = addr + op -> size		243156	0		=			
ANR	244019	PtrMemberAccess	op -> fail		243156	0					
ANR	244020	Identifier	op		243156	0					
ANR	244021	Identifier	fail		243156	1					
ANR	244022	AdditiveExpression	addr + op -> size		243156	1		+			
ANR	244023	Identifier	addr		243156	0					
ANR	244024	PtrMemberAccess	op -> size		243156	1					
ANR	244025	Identifier	op		243156	0					
ANR	244026	Identifier	size		243156	1					
ANR	244027	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	195:7:5888:5931	243156	1	True				
ANR	244028	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		243156	0					
ANR	244029	Callee	r_anal_hint_set_jump		243156	0					
ANR	244030	Identifier	r_anal_hint_set_jump		243156	0					
ANR	244031	ArgumentList	anal		243156	1					
ANR	244032	Argument	anal		243156	0					
ANR	244033	Identifier	anal		243156	0					
ANR	244034	Argument	addr		243156	1					
ANR	244035	Identifier	addr		243156	0					
ANR	244036	Argument	op -> jump		243156	2					
ANR	244037	PtrMemberAccess	op -> jump		243156	0					
ANR	244038	Identifier	op		243156	0					
ANR	244039	Identifier	jump		243156	1					
ANR	244040	ElseStatement	else		243156	0					
ANR	244041	CompoundStatement		124:11:3803:3803	243156	0					
ANR	244042	IfStatement	"if ( advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false ) )"		243156	0					
ANR	244043	Condition	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"	199:9:5970:6052	243156	0	True				
ANR	244044	CallExpression	"advance_till_scope_end ( anal , op , addr + op -> size , R_ANAL_OP_TYPE_CJMP , val , false )"		243156	0					
ANR	244045	Callee	advance_till_scope_end		243156	0					
ANR	244046	Identifier	advance_till_scope_end		243156	0					
ANR	244047	ArgumentList	anal		243156	1					
ANR	244048	Argument	anal		243156	0					
ANR	244049	Identifier	anal		243156	0					
ANR	244050	Argument	op		243156	1					
ANR	244051	Identifier	op		243156	0					
ANR	244052	Argument	addr + op -> size		243156	2					
ANR	244053	AdditiveExpression	addr + op -> size		243156	0		+			
ANR	244054	Identifier	addr		243156	0					
ANR	244055	PtrMemberAccess	op -> size		243156	1					
ANR	244056	Identifier	op		243156	0					
ANR	244057	Identifier	size		243156	1					
ANR	244058	Argument	R_ANAL_OP_TYPE_CJMP		243156	3					
ANR	244059	Identifier	R_ANAL_OP_TYPE_CJMP		243156	0					
ANR	244060	Argument	val		243156	4					
ANR	244061	Identifier	val		243156	0					
ANR	244062	Argument	false		243156	5					
ANR	244063	Identifier	false		243156	0					
ANR	244064	CompoundStatement		125:94:3899:3899	243156	1					
ANR	244065	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump type for br_if (using block type)\\n"" )"	200:6:6063:6134	243156	0	True				
ANR	244066	CallExpression	"eprintf ( ""[wasm] cannot find jump type for br_if (using block type)\\n"" )"		243156	0					
ANR	244067	Callee	eprintf		243156	0					
ANR	244068	Identifier	eprintf		243156	0					
ANR	244069	ArgumentList	"""[wasm] cannot find jump type for br_if (using block type)\\n"""		243156	1					
ANR	244070	Argument	"""[wasm] cannot find jump type for br_if (using block type)\\n"""		243156	0					
ANR	244071	PrimaryExpression	"""[wasm] cannot find jump type for br_if (using block type)\\n"""		243156	0					
ANR	244072	ExpressionStatement	op -> fail = addr + op -> size	201:6:6142:6168	243156	1	True				
ANR	244073	AssignmentExpression	op -> fail = addr + op -> size		243156	0		=			
ANR	244074	PtrMemberAccess	op -> fail		243156	0					
ANR	244075	Identifier	op		243156	0					
ANR	244076	Identifier	fail		243156	1					
ANR	244077	AdditiveExpression	addr + op -> size		243156	1		+			
ANR	244078	Identifier	addr		243156	0					
ANR	244079	PtrMemberAccess	op -> size		243156	1					
ANR	244080	Identifier	op		243156	0					
ANR	244081	Identifier	size		243156	1					
ANR	244082	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	202:6:6176:6219	243156	2	True				
ANR	244083	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		243156	0					
ANR	244084	Callee	r_anal_hint_set_jump		243156	0					
ANR	244085	Identifier	r_anal_hint_set_jump		243156	0					
ANR	244086	ArgumentList	anal		243156	1					
ANR	244087	Argument	anal		243156	0					
ANR	244088	Identifier	anal		243156	0					
ANR	244089	Argument	addr		243156	1					
ANR	244090	Identifier	addr		243156	0					
ANR	244091	Argument	op -> jump		243156	2					
ANR	244092	PtrMemberAccess	op -> jump		243156	0					
ANR	244093	Identifier	op		243156	0					
ANR	244094	Identifier	jump		243156	1					
ANR	244095	ElseStatement	else		243156	0					
ANR	244096	CompoundStatement		129:12:4077:4077	243156	0					
ANR	244097	ExpressionStatement	"eprintf ( ""[wasm] cannot find jump for br_if\\n"" )"	204:6:6241:6288	243156	0	True				
ANR	244098	CallExpression	"eprintf ( ""[wasm] cannot find jump for br_if\\n"" )"		243156	0					
ANR	244099	Callee	eprintf		243156	0					
ANR	244100	Identifier	eprintf		243156	0					
ANR	244101	ArgumentList	"""[wasm] cannot find jump for br_if\\n"""		243156	1					
ANR	244102	Argument	"""[wasm] cannot find jump for br_if\\n"""		243156	0					
ANR	244103	PrimaryExpression	"""[wasm] cannot find jump for br_if\\n"""		243156	0					
ANR	244104	ExpressionStatement	r_anal_hint_free ( hint2 )	207:4:6307:6331	243156	4	True				
ANR	244105	CallExpression	r_anal_hint_free ( hint2 )		243156	0					
ANR	244106	Callee	r_anal_hint_free		243156	0					
ANR	244107	Identifier	r_anal_hint_free		243156	0					
ANR	244108	ArgumentList	hint2		243156	1					
ANR	244109	Argument	hint2		243156	0					
ANR	244110	Identifier	hint2		243156	0					
ANR	244111	BreakStatement	break ;	209:3:6341:6346	243156	19	True				
ANR	244112	Label	case WASM_OP_END :	210:2:6350:6366	243156	20	True				
ANR	244113	Identifier	WASM_OP_END		243156	0					
ANR	244114	CompoundStatement		137:3:4215:4215	243156	21					
ANR	244115	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	212:4:6377:6406	243156	0	True				
ANR	244116	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		243156	0		=			
ANR	244117	PtrMemberAccess	op -> type		243156	0					
ANR	244118	Identifier	op		243156	0					
ANR	244119	Identifier	type		243156	1					
ANR	244120	Identifier	R_ANAL_OP_TYPE_NOP		243156	1					
ANR	244121	IfStatement	if ( scope_hint < UT64_MAX )		243156	1					
ANR	244122	Condition	scope_hint < UT64_MAX	213:8:6416:6436	243156	0	True				
ANR	244123	RelationalExpression	scope_hint < UT64_MAX		243156	0		<			
ANR	244124	Identifier	scope_hint		243156	0					
ANR	244125	Identifier	UT64_MAX		243156	1					
ANR	244126	CompoundStatement		139:31:4283:4283	243156	1					
ANR	244127	ExpressionStatement	"hint = r_anal_hint_get ( anal , scope_hint )"	214:5:6446:6487	243156	0	True				
ANR	244128	AssignmentExpression	"hint = r_anal_hint_get ( anal , scope_hint )"		243156	0		=			
ANR	244129	Identifier	hint		243156	0					
ANR	244130	CallExpression	"r_anal_hint_get ( anal , scope_hint )"		243156	1					
ANR	244131	Callee	r_anal_hint_get		243156	0					
ANR	244132	Identifier	r_anal_hint_get		243156	0					
ANR	244133	ArgumentList	anal		243156	1					
ANR	244134	Argument	anal		243156	0					
ANR	244135	Identifier	anal		243156	0					
ANR	244136	Argument	scope_hint		243156	1					
ANR	244137	Identifier	scope_hint		243156	0					
ANR	244138	IfStatement	"if ( hint && ! strncmp ( ""loop"" , hint -> opcode , 4 ) )"		243156	1					
ANR	244139	Condition	"hint && ! strncmp ( ""loop"" , hint -> opcode , 4 )"	215:9:6498:6539	243156	0	True				
ANR	244140	AndExpression	"hint && ! strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	0		&&			
ANR	244141	Identifier	hint		243156	0					
ANR	244142	UnaryOperationExpression	"! strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	1					
ANR	244143	UnaryOperator	!		243156	0					
ANR	244144	CallExpression	"strncmp ( ""loop"" , hint -> opcode , 4 )"		243156	1					
ANR	244145	Callee	strncmp		243156	0					
ANR	244146	Identifier	strncmp		243156	0					
ANR	244147	ArgumentList	"""loop"""		243156	1					
ANR	244148	Argument	"""loop"""		243156	0					
ANR	244149	PrimaryExpression	"""loop"""		243156	0					
ANR	244150	Argument	hint -> opcode		243156	1					
ANR	244151	PtrMemberAccess	hint -> opcode		243156	0					
ANR	244152	Identifier	hint		243156	0					
ANR	244153	Identifier	opcode		243156	1					
ANR	244154	Argument	4		243156	2					
ANR	244155	PrimaryExpression	4		243156	0					
ANR	244156	CompoundStatement		141:53:4386:4386	243156	1					
ANR	244157	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , op -> jump )"	216:6:6550:6593	243156	0	True				
ANR	244158	CallExpression	"r_anal_hint_set_jump ( anal , addr , op -> jump )"		243156	0					
ANR	244159	Callee	r_anal_hint_set_jump		243156	0					
ANR	244160	Identifier	r_anal_hint_set_jump		243156	0					
ANR	244161	ArgumentList	anal		243156	1					
ANR	244162	Argument	anal		243156	0					
ANR	244163	Identifier	anal		243156	0					
ANR	244164	Argument	addr		243156	1					
ANR	244165	Identifier	addr		243156	0					
ANR	244166	Argument	op -> jump		243156	2					
ANR	244167	PtrMemberAccess	op -> jump		243156	0					
ANR	244168	Identifier	op		243156	0					
ANR	244169	Identifier	jump		243156	1					
ANR	244170	ExpressionStatement	"r_anal_hint_set_jump ( anal , op -> jump , addr )"	217:6:6601:6644	243156	1	True				
ANR	244171	CallExpression	"r_anal_hint_set_jump ( anal , op -> jump , addr )"		243156	0					
ANR	244172	Callee	r_anal_hint_set_jump		243156	0					
ANR	244173	Identifier	r_anal_hint_set_jump		243156	0					
ANR	244174	ArgumentList	anal		243156	1					
ANR	244175	Argument	anal		243156	0					
ANR	244176	Identifier	anal		243156	0					
ANR	244177	Argument	op -> jump		243156	1					
ANR	244178	PtrMemberAccess	op -> jump		243156	0					
ANR	244179	Identifier	op		243156	0					
ANR	244180	Identifier	jump		243156	1					
ANR	244181	Argument	addr		243156	2					
ANR	244182	Identifier	addr		243156	0					
ANR	244183	ElseStatement	else		243156	0					
ANR	244184	IfStatement	"if ( hint && ! strncmp ( ""block"" , hint -> opcode , 5 ) )"		243156	0					
ANR	244185	Condition	"hint && ! strncmp ( ""block"" , hint -> opcode , 5 )"	218:16:6662:6704	243156	0	True				
ANR	244186	AndExpression	"hint && ! strncmp ( ""block"" , hint -> opcode , 5 )"		243156	0		&&			
ANR	244187	Identifier	hint		243156	0					
ANR	244188	UnaryOperationExpression	"! strncmp ( ""block"" , hint -> opcode , 5 )"		243156	1					
ANR	244189	UnaryOperator	!		243156	0					
ANR	244190	CallExpression	"strncmp ( ""block"" , hint -> opcode , 5 )"		243156	1					
ANR	244191	Callee	strncmp		243156	0					
ANR	244192	Identifier	strncmp		243156	0					
ANR	244193	ArgumentList	"""block"""		243156	1					
ANR	244194	Argument	"""block"""		243156	0					
ANR	244195	PrimaryExpression	"""block"""		243156	0					
ANR	244196	Argument	hint -> opcode		243156	1					
ANR	244197	PtrMemberAccess	hint -> opcode		243156	0					
ANR	244198	Identifier	hint		243156	0					
ANR	244199	Identifier	opcode		243156	1					
ANR	244200	Argument	5		243156	2					
ANR	244201	PrimaryExpression	5		243156	0					
ANR	244202	CompoundStatement		144:61:4551:4551	243156	1					
ANR	244203	ExpressionStatement	"r_anal_hint_set_jump ( anal , hint -> jump , addr )"	220:6:6738:6783	243156	0	True				
ANR	244204	CallExpression	"r_anal_hint_set_jump ( anal , hint -> jump , addr )"		243156	0					
ANR	244205	Callee	r_anal_hint_set_jump		243156	0					
ANR	244206	Identifier	r_anal_hint_set_jump		243156	0					
ANR	244207	ArgumentList	anal		243156	1					
ANR	244208	Argument	anal		243156	0					
ANR	244209	Identifier	anal		243156	0					
ANR	244210	Argument	hint -> jump		243156	1					
ANR	244211	PtrMemberAccess	hint -> jump		243156	0					
ANR	244212	Identifier	hint		243156	0					
ANR	244213	Identifier	jump		243156	1					
ANR	244214	Argument	addr		243156	2					
ANR	244215	Identifier	addr		243156	0					
ANR	244216	ExpressionStatement	"r_anal_hint_set_jump ( anal , addr , UT64_MAX )"	221:6:6791:6834	243156	1	True				
ANR	244217	CallExpression	"r_anal_hint_set_jump ( anal , addr , UT64_MAX )"		243156	0					
ANR	244218	Callee	r_anal_hint_set_jump		243156	0					
ANR	244219	Identifier	r_anal_hint_set_jump		243156	0					
ANR	244220	ArgumentList	anal		243156	1					
ANR	244221	Argument	anal		243156	0					
ANR	244222	Identifier	anal		243156	0					
ANR	244223	Argument	addr		243156	1					
ANR	244224	Identifier	addr		243156	0					
ANR	244225	Argument	UT64_MAX		243156	2					
ANR	244226	Identifier	UT64_MAX		243156	0					
ANR	244227	IfStatement	if ( hint )		243156	2					
ANR	244228	Condition	hint	223:9:6852:6855	243156	0	True				
ANR	244229	Identifier	hint		243156	0					
ANR	244230	CompoundStatement		149:15:4702:4702	243156	1					
ANR	244231	ExpressionStatement	"r_anal_hint_set_opcode ( anal , scope_hint , ""invalid"" )"	224:6:6866:6918	243156	0	True				
ANR	244232	CallExpression	"r_anal_hint_set_opcode ( anal , scope_hint , ""invalid"" )"		243156	0					
ANR	244233	Callee	r_anal_hint_set_opcode		243156	0					
ANR	244234	Identifier	r_anal_hint_set_opcode		243156	0					
ANR	244235	ArgumentList	anal		243156	1					
ANR	244236	Argument	anal		243156	0					
ANR	244237	Identifier	anal		243156	0					
ANR	244238	Argument	scope_hint		243156	1					
ANR	244239	Identifier	scope_hint		243156	0					
ANR	244240	Argument	"""invalid"""		243156	2					
ANR	244241	PrimaryExpression	"""invalid"""		243156	0					
ANR	244242	ExpressionStatement	"r_anal_hint_set_jump ( anal , scope_hint , UT64_MAX )"	225:6:6926:6975	243156	1	True				
ANR	244243	CallExpression	"r_anal_hint_set_jump ( anal , scope_hint , UT64_MAX )"		243156	0					
ANR	244244	Callee	r_anal_hint_set_jump		243156	0					
ANR	244245	Identifier	r_anal_hint_set_jump		243156	0					
ANR	244246	ArgumentList	anal		243156	1					
ANR	244247	Argument	anal		243156	0					
ANR	244248	Identifier	anal		243156	0					
ANR	244249	Argument	scope_hint		243156	1					
ANR	244250	Identifier	scope_hint		243156	0					
ANR	244251	Argument	UT64_MAX		243156	2					
ANR	244252	Identifier	UT64_MAX		243156	0					
ANR	244253	ExpressionStatement	"r_anal_hint_del ( anal , scope_hint , 1 )"	226:6:6983:7020	243156	2	True				
ANR	244254	CallExpression	"r_anal_hint_del ( anal , scope_hint , 1 )"		243156	0					
ANR	244255	Callee	r_anal_hint_del		243156	0					
ANR	244256	Identifier	r_anal_hint_del		243156	0					
ANR	244257	ArgumentList	anal		243156	1					
ANR	244258	Argument	anal		243156	0					
ANR	244259	Identifier	anal		243156	0					
ANR	244260	Argument	scope_hint		243156	1					
ANR	244261	Identifier	scope_hint		243156	0					
ANR	244262	Argument	1		243156	2					
ANR	244263	PrimaryExpression	1		243156	0					
ANR	244264	ExpressionStatement	scope_hint ++	227:6:7028:7040	243156	3	True				
ANR	244265	PostIncDecOperationExpression	scope_hint ++		243156	0					
ANR	244266	Identifier	scope_hint		243156	0					
ANR	244267	IncDec	++		243156	1					
ANR	244268	ElseStatement	else		243156	0					
ANR	244269	CompoundStatement		154:12:4898:4898	243156	0					
ANR	244270	ExpressionStatement	op -> eob = true	230:6:7107:7121	243156	0	True				
ANR	244271	AssignmentExpression	op -> eob = true		243156	0		=			
ANR	244272	PtrMemberAccess	op -> eob		243156	0					
ANR	244273	Identifier	op		243156	0					
ANR	244274	Identifier	eob		243156	1					
ANR	244275	Identifier	true		243156	1					
ANR	244276	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_RET	231:6:7129:7158	243156	1	True				
ANR	244277	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_RET		243156	0		=			
ANR	244278	PtrMemberAccess	op -> type		243156	0					
ANR	244279	Identifier	op		243156	0					
ANR	244280	Identifier	type		243156	1					
ANR	244281	Identifier	R_ANAL_OP_TYPE_RET		243156	1					
ANR	244282	ExpressionStatement	scope_hint = UT64_MAX	232:6:7166:7187	243156	2	True				
ANR	244283	AssignmentExpression	scope_hint = UT64_MAX		243156	0		=			
ANR	244284	Identifier	scope_hint		243156	0					
ANR	244285	Identifier	UT64_MAX		243156	1					
ANR	244286	ElseStatement	else		243156	0					
ANR	244287	CompoundStatement		160:11:5051:5051	243156	0					
ANR	244288	IfStatement	"if ( ! ( hint = r_anal_hint_get ( anal , addr ) ) )"		243156	0					
ANR	244289	Condition	"! ( hint = r_anal_hint_get ( anal , addr ) )"	235:9:7218:7255	243156	0	True				
ANR	244290	UnaryOperationExpression	"! ( hint = r_anal_hint_get ( anal , addr ) )"		243156	0					
ANR	244291	UnaryOperator	!		243156	0					
ANR	244292	AssignmentExpression	"hint = r_anal_hint_get ( anal , addr )"		243156	1		=			
ANR	244293	Identifier	hint		243156	0					
ANR	244294	CallExpression	"r_anal_hint_get ( anal , addr )"		243156	1					
ANR	244295	Callee	r_anal_hint_get		243156	0					
ANR	244296	Identifier	r_anal_hint_get		243156	0					
ANR	244297	ArgumentList	anal		243156	1					
ANR	244298	Argument	anal		243156	0					
ANR	244299	Identifier	anal		243156	0					
ANR	244300	Argument	addr		243156	1					
ANR	244301	Identifier	addr		243156	0					
ANR	244302	CompoundStatement		161:49:5102:5102	243156	1					
ANR	244303	ExpressionStatement	op -> eob = true	237:6:7311:7325	243156	0	True				
ANR	244304	AssignmentExpression	op -> eob = true		243156	0		=			
ANR	244305	PtrMemberAccess	op -> eob		243156	0					
ANR	244306	Identifier	op		243156	0					
ANR	244307	Identifier	eob		243156	1					
ANR	244308	Identifier	true		243156	1					
ANR	244309	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_RET	238:6:7333:7362	243156	1	True				
ANR	244310	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_RET		243156	0		=			
ANR	244311	PtrMemberAccess	op -> type		243156	0					
ANR	244312	Identifier	op		243156	0					
ANR	244313	Identifier	type		243156	1					
ANR	244314	Identifier	R_ANAL_OP_TYPE_RET		243156	1					
ANR	244315	BreakStatement	break ;	242:3:7385:7390	243156	22	True				
ANR	244316	Label	case WASM_OP_I32REMS :	243:2:7394:7414	243156	23	True				
ANR	244317	Identifier	WASM_OP_I32REMS		243156	0					
ANR	244318	Label	case WASM_OP_I32REMU :	244:2:7418:7438	243156	24	True				
ANR	244319	Identifier	WASM_OP_I32REMU		243156	0					
ANR	244320	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_MOD	245:3:7443:7472	243156	25	True				
ANR	244321	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_MOD		243156	0		=			
ANR	244322	PtrMemberAccess	op -> type		243156	0					
ANR	244323	Identifier	op		243156	0					
ANR	244324	Identifier	type		243156	1					
ANR	244325	Identifier	R_ANAL_OP_TYPE_MOD		243156	1					
ANR	244326	BreakStatement	break ;	246:3:7477:7482	243156	26	True				
ANR	244327	Label	case WASM_OP_GETLOCAL :	247:2:7486:7507	243156	27	True				
ANR	244328	Identifier	WASM_OP_GETLOCAL		243156	0					
ANR	244329	Label	case WASM_OP_I32LOAD :	248:2:7511:7531	243156	28	True				
ANR	244330	Identifier	WASM_OP_I32LOAD		243156	0					
ANR	244331	Label	case WASM_OP_I64LOAD :	249:2:7535:7555	243156	29	True				
ANR	244332	Identifier	WASM_OP_I64LOAD		243156	0					
ANR	244333	Label	case WASM_OP_F32LOAD :	250:2:7559:7579	243156	30	True				
ANR	244334	Identifier	WASM_OP_F32LOAD		243156	0					
ANR	244335	Label	case WASM_OP_F64LOAD :	251:2:7583:7603	243156	31	True				
ANR	244336	Identifier	WASM_OP_F64LOAD		243156	0					
ANR	244337	Label	case WASM_OP_I32LOAD8S :	252:2:7607:7629	243156	32	True				
ANR	244338	Identifier	WASM_OP_I32LOAD8S		243156	0					
ANR	244339	Label	case WASM_OP_I32LOAD8U :	253:2:7633:7655	243156	33	True				
ANR	244340	Identifier	WASM_OP_I32LOAD8U		243156	0					
ANR	244341	Label	case WASM_OP_I32LOAD16S :	254:2:7659:7682	243156	34	True				
ANR	244342	Identifier	WASM_OP_I32LOAD16S		243156	0					
ANR	244343	Label	case WASM_OP_I32LOAD16U :	255:2:7686:7709	243156	35	True				
ANR	244344	Identifier	WASM_OP_I32LOAD16U		243156	0					
ANR	244345	Label	case WASM_OP_I64LOAD8S :	256:2:7713:7735	243156	36	True				
ANR	244346	Identifier	WASM_OP_I64LOAD8S		243156	0					
ANR	244347	Label	case WASM_OP_I64LOAD8U :	257:2:7739:7761	243156	37	True				
ANR	244348	Identifier	WASM_OP_I64LOAD8U		243156	0					
ANR	244349	Label	case WASM_OP_I64LOAD16S :	258:2:7765:7788	243156	38	True				
ANR	244350	Identifier	WASM_OP_I64LOAD16S		243156	0					
ANR	244351	Label	case WASM_OP_I64LOAD16U :	259:2:7792:7815	243156	39	True				
ANR	244352	Identifier	WASM_OP_I64LOAD16U		243156	0					
ANR	244353	Label	case WASM_OP_I64LOAD32S :	260:2:7819:7842	243156	40	True				
ANR	244354	Identifier	WASM_OP_I64LOAD32S		243156	0					
ANR	244355	Label	case WASM_OP_I64LOAD32U :	261:2:7846:7869	243156	41	True				
ANR	244356	Identifier	WASM_OP_I64LOAD32U		243156	0					
ANR	244357	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_LOAD	262:3:7874:7904	243156	42	True				
ANR	244358	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_LOAD		243156	0		=			
ANR	244359	PtrMemberAccess	op -> type		243156	0					
ANR	244360	Identifier	op		243156	0					
ANR	244361	Identifier	type		243156	1					
ANR	244362	Identifier	R_ANAL_OP_TYPE_LOAD		243156	1					
ANR	244363	BreakStatement	break ;	263:3:7909:7914	243156	43	True				
ANR	244364	Label	case WASM_OP_SETLOCAL :	264:2:7918:7939	243156	44	True				
ANR	244365	Identifier	WASM_OP_SETLOCAL		243156	0					
ANR	244366	Label	case WASM_OP_TEELOCAL :	265:2:7943:7964	243156	45	True				
ANR	244367	Identifier	WASM_OP_TEELOCAL		243156	0					
ANR	244368	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_STORE	266:3:7969:8000	243156	46	True				
ANR	244369	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_STORE		243156	0		=			
ANR	244370	PtrMemberAccess	op -> type		243156	0					
ANR	244371	Identifier	op		243156	0					
ANR	244372	Identifier	type		243156	1					
ANR	244373	Identifier	R_ANAL_OP_TYPE_STORE		243156	1					
ANR	244374	BreakStatement	break ;	267:3:8005:8010	243156	47	True				
ANR	244375	Label	case WASM_OP_I32EQZ :	268:2:8014:8033	243156	48	True				
ANR	244376	Identifier	WASM_OP_I32EQZ		243156	0					
ANR	244377	Label	case WASM_OP_I32EQ :	269:2:8037:8055	243156	49	True				
ANR	244378	Identifier	WASM_OP_I32EQ		243156	0					
ANR	244379	Label	case WASM_OP_I32NE :	270:2:8059:8077	243156	50	True				
ANR	244380	Identifier	WASM_OP_I32NE		243156	0					
ANR	244381	Label	case WASM_OP_I32LTS :	271:2:8081:8100	243156	51	True				
ANR	244382	Identifier	WASM_OP_I32LTS		243156	0					
ANR	244383	Label	case WASM_OP_I32LTU :	272:2:8104:8123	243156	52	True				
ANR	244384	Identifier	WASM_OP_I32LTU		243156	0					
ANR	244385	Label	case WASM_OP_I32GTS :	273:2:8127:8146	243156	53	True				
ANR	244386	Identifier	WASM_OP_I32GTS		243156	0					
ANR	244387	Label	case WASM_OP_I32GTU :	274:2:8150:8169	243156	54	True				
ANR	244388	Identifier	WASM_OP_I32GTU		243156	0					
ANR	244389	Label	case WASM_OP_I32LES :	275:2:8173:8192	243156	55	True				
ANR	244390	Identifier	WASM_OP_I32LES		243156	0					
ANR	244391	Label	case WASM_OP_I32LEU :	276:2:8196:8215	243156	56	True				
ANR	244392	Identifier	WASM_OP_I32LEU		243156	0					
ANR	244393	Label	case WASM_OP_I32GES :	277:2:8219:8238	243156	57	True				
ANR	244394	Identifier	WASM_OP_I32GES		243156	0					
ANR	244395	Label	case WASM_OP_I32GEU :	278:2:8242:8261	243156	58	True				
ANR	244396	Identifier	WASM_OP_I32GEU		243156	0					
ANR	244397	Label	case WASM_OP_I64EQZ :	279:2:8265:8284	243156	59	True				
ANR	244398	Identifier	WASM_OP_I64EQZ		243156	0					
ANR	244399	Label	case WASM_OP_I64EQ :	280:2:8288:8306	243156	60	True				
ANR	244400	Identifier	WASM_OP_I64EQ		243156	0					
ANR	244401	Label	case WASM_OP_I64NE :	281:2:8310:8328	243156	61	True				
ANR	244402	Identifier	WASM_OP_I64NE		243156	0					
ANR	244403	Label	case WASM_OP_I64LTS :	282:2:8332:8351	243156	62	True				
ANR	244404	Identifier	WASM_OP_I64LTS		243156	0					
ANR	244405	Label	case WASM_OP_I64LTU :	283:2:8355:8374	243156	63	True				
ANR	244406	Identifier	WASM_OP_I64LTU		243156	0					
ANR	244407	Label	case WASM_OP_I64GTS :	284:2:8378:8397	243156	64	True				
ANR	244408	Identifier	WASM_OP_I64GTS		243156	0					
ANR	244409	Label	case WASM_OP_I64GTU :	285:2:8401:8420	243156	65	True				
ANR	244410	Identifier	WASM_OP_I64GTU		243156	0					
ANR	244411	Label	case WASM_OP_I64LES :	286:2:8424:8443	243156	66	True				
ANR	244412	Identifier	WASM_OP_I64LES		243156	0					
ANR	244413	Label	case WASM_OP_I64LEU :	287:2:8447:8466	243156	67	True				
ANR	244414	Identifier	WASM_OP_I64LEU		243156	0					
ANR	244415	Label	case WASM_OP_I64GES :	288:2:8470:8489	243156	68	True				
ANR	244416	Identifier	WASM_OP_I64GES		243156	0					
ANR	244417	Label	case WASM_OP_I64GEU :	289:2:8493:8512	243156	69	True				
ANR	244418	Identifier	WASM_OP_I64GEU		243156	0					
ANR	244419	Label	case WASM_OP_F32EQ :	290:2:8516:8534	243156	70	True				
ANR	244420	Identifier	WASM_OP_F32EQ		243156	0					
ANR	244421	Label	case WASM_OP_F32NE :	291:2:8538:8556	243156	71	True				
ANR	244422	Identifier	WASM_OP_F32NE		243156	0					
ANR	244423	Label	case WASM_OP_F32LT :	292:2:8560:8578	243156	72	True				
ANR	244424	Identifier	WASM_OP_F32LT		243156	0					
ANR	244425	Label	case WASM_OP_F32GT :	293:2:8582:8600	243156	73	True				
ANR	244426	Identifier	WASM_OP_F32GT		243156	0					
ANR	244427	Label	case WASM_OP_F32LE :	294:2:8604:8622	243156	74	True				
ANR	244428	Identifier	WASM_OP_F32LE		243156	0					
ANR	244429	Label	case WASM_OP_F32GE :	295:2:8626:8644	243156	75	True				
ANR	244430	Identifier	WASM_OP_F32GE		243156	0					
ANR	244431	Label	case WASM_OP_F64EQ :	296:2:8648:8666	243156	76	True				
ANR	244432	Identifier	WASM_OP_F64EQ		243156	0					
ANR	244433	Label	case WASM_OP_F64NE :	297:2:8670:8688	243156	77	True				
ANR	244434	Identifier	WASM_OP_F64NE		243156	0					
ANR	244435	Label	case WASM_OP_F64LT :	298:2:8692:8710	243156	78	True				
ANR	244436	Identifier	WASM_OP_F64LT		243156	0					
ANR	244437	Label	case WASM_OP_F64GT :	299:2:8714:8732	243156	79	True				
ANR	244438	Identifier	WASM_OP_F64GT		243156	0					
ANR	244439	Label	case WASM_OP_F64LE :	300:2:8736:8754	243156	80	True				
ANR	244440	Identifier	WASM_OP_F64LE		243156	0					
ANR	244441	Label	case WASM_OP_F64GE :	301:2:8758:8776	243156	81	True				
ANR	244442	Identifier	WASM_OP_F64GE		243156	0					
ANR	244443	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CMP	302:3:8781:8810	243156	82	True				
ANR	244444	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CMP		243156	0		=			
ANR	244445	PtrMemberAccess	op -> type		243156	0					
ANR	244446	Identifier	op		243156	0					
ANR	244447	Identifier	type		243156	1					
ANR	244448	Identifier	R_ANAL_OP_TYPE_CMP		243156	1					
ANR	244449	BreakStatement	break ;	303:3:8815:8820	243156	83	True				
ANR	244450	Label	case WASM_OP_I64OR :	304:2:8824:8842	243156	84	True				
ANR	244451	Identifier	WASM_OP_I64OR		243156	0					
ANR	244452	Label	case WASM_OP_I32OR :	305:2:8846:8864	243156	85	True				
ANR	244453	Identifier	WASM_OP_I32OR		243156	0					
ANR	244454	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_OR	306:3:8869:8897	243156	86	True				
ANR	244455	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_OR		243156	0		=			
ANR	244456	PtrMemberAccess	op -> type		243156	0					
ANR	244457	Identifier	op		243156	0					
ANR	244458	Identifier	type		243156	1					
ANR	244459	Identifier	R_ANAL_OP_TYPE_OR		243156	1					
ANR	244460	BreakStatement	break ;	307:3:8902:8907	243156	87	True				
ANR	244461	Label	case WASM_OP_I64XOR :	308:2:8911:8930	243156	88	True				
ANR	244462	Identifier	WASM_OP_I64XOR		243156	0					
ANR	244463	Label	case WASM_OP_I32XOR :	309:2:8934:8953	243156	89	True				
ANR	244464	Identifier	WASM_OP_I32XOR		243156	0					
ANR	244465	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_XOR	310:3:8958:8987	243156	90	True				
ANR	244466	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_XOR		243156	0		=			
ANR	244467	PtrMemberAccess	op -> type		243156	0					
ANR	244468	Identifier	op		243156	0					
ANR	244469	Identifier	type		243156	1					
ANR	244470	Identifier	R_ANAL_OP_TYPE_XOR		243156	1					
ANR	244471	BreakStatement	break ;	311:3:8992:8997	243156	91	True				
ANR	244472	Label	case WASM_OP_I32CONST :	312:2:9001:9022	243156	92	True				
ANR	244473	Identifier	WASM_OP_I32CONST		243156	0					
ANR	244474	Label	case WASM_OP_I64CONST :	313:2:9026:9047	243156	93	True				
ANR	244475	Identifier	WASM_OP_I64CONST		243156	0					
ANR	244476	Label	case WASM_OP_F32CONST :	314:2:9051:9072	243156	94	True				
ANR	244477	Identifier	WASM_OP_F32CONST		243156	0					
ANR	244478	Label	case WASM_OP_F64CONST :	315:2:9076:9097	243156	95	True				
ANR	244479	Identifier	WASM_OP_F64CONST		243156	0					
ANR	244480	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_MOV	316:3:9102:9131	243156	96	True				
ANR	244481	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_MOV		243156	0		=			
ANR	244482	PtrMemberAccess	op -> type		243156	0					
ANR	244483	Identifier	op		243156	0					
ANR	244484	Identifier	type		243156	1					
ANR	244485	Identifier	R_ANAL_OP_TYPE_MOV		243156	1					
ANR	244486	CompoundStatement		244:4:6986:7003	243156	97					
ANR	244487	IdentifierDeclStatement	ut8 arg = data [ 1 ] ;	318:4:9142:9159	243156	0	True				
ANR	244488	IdentifierDecl	arg = data [ 1 ]		243156	0					
ANR	244489	IdentifierDeclType	ut8		243156	0					
ANR	244490	Identifier	arg		243156	1					
ANR	244491	AssignmentExpression	arg = data [ 1 ]		243156	2		=			
ANR	244492	Identifier	arg		243156	0					
ANR	244493	ArrayIndexing	data [ 1 ]		243156	1					
ANR	244494	Identifier	data		243156	0					
ANR	244495	PrimaryExpression	1		243156	1					
ANR	244496	ExpressionStatement	"r_strbuf_setf ( & op -> esil , ""4,sp,-=,%d,sp,=[4]"" , arg )"	319:4:9165:9217	243156	1	True				
ANR	244497	CallExpression	"r_strbuf_setf ( & op -> esil , ""4,sp,-=,%d,sp,=[4]"" , arg )"		243156	0					
ANR	244498	Callee	r_strbuf_setf		243156	0					
ANR	244499	Identifier	r_strbuf_setf		243156	0					
ANR	244500	ArgumentList	& op -> esil		243156	1					
ANR	244501	Argument	& op -> esil		243156	0					
ANR	244502	UnaryOperationExpression	& op -> esil		243156	0					
ANR	244503	UnaryOperator	&		243156	0					
ANR	244504	PtrMemberAccess	op -> esil		243156	1					
ANR	244505	Identifier	op		243156	0					
ANR	244506	Identifier	esil		243156	1					
ANR	244507	Argument	"""4,sp,-=,%d,sp,=[4]"""		243156	1					
ANR	244508	PrimaryExpression	"""4,sp,-=,%d,sp,=[4]"""		243156	0					
ANR	244509	Argument	arg		243156	2					
ANR	244510	Identifier	arg		243156	0					
ANR	244511	BreakStatement	break ;	321:3:9227:9232	243156	98	True				
ANR	244512	Label	case WASM_OP_I64ADD :	322:2:9236:9255	243156	99	True				
ANR	244513	Identifier	WASM_OP_I64ADD		243156	0					
ANR	244514	Label	case WASM_OP_I32ADD :	323:2:9259:9278	243156	100	True				
ANR	244515	Identifier	WASM_OP_I32ADD		243156	0					
ANR	244516	Label	case WASM_OP_F32ADD :	324:2:9282:9301	243156	101	True				
ANR	244517	Identifier	WASM_OP_F32ADD		243156	0					
ANR	244518	Label	case WASM_OP_F64ADD :	325:2:9305:9324	243156	102	True				
ANR	244519	Identifier	WASM_OP_F64ADD		243156	0					
ANR	244520	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ADD	326:3:9329:9358	243156	103	True				
ANR	244521	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ADD		243156	0		=			
ANR	244522	PtrMemberAccess	op -> type		243156	0					
ANR	244523	Identifier	op		243156	0					
ANR	244524	Identifier	type		243156	1					
ANR	244525	Identifier	R_ANAL_OP_TYPE_ADD		243156	1					
ANR	244526	BreakStatement	break ;	327:3:9363:9368	243156	104	True				
ANR	244527	Label	case WASM_OP_I64SUB :	328:2:9372:9391	243156	105	True				
ANR	244528	Identifier	WASM_OP_I64SUB		243156	0					
ANR	244529	Label	case WASM_OP_I32SUB :	329:2:9395:9414	243156	106	True				
ANR	244530	Identifier	WASM_OP_I32SUB		243156	0					
ANR	244531	Label	case WASM_OP_F32SUB :	330:2:9418:9437	243156	107	True				
ANR	244532	Identifier	WASM_OP_F32SUB		243156	0					
ANR	244533	Label	case WASM_OP_F64SUB :	331:2:9441:9460	243156	108	True				
ANR	244534	Identifier	WASM_OP_F64SUB		243156	0					
ANR	244535	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SUB	332:3:9465:9494	243156	109	True				
ANR	244536	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SUB		243156	0		=			
ANR	244537	PtrMemberAccess	op -> type		243156	0					
ANR	244538	Identifier	op		243156	0					
ANR	244539	Identifier	type		243156	1					
ANR	244540	Identifier	R_ANAL_OP_TYPE_SUB		243156	1					
ANR	244541	BreakStatement	break ;	333:3:9499:9504	243156	110	True				
ANR	244542	Label	case WASM_OP_NOP :	334:2:9508:9524	243156	111	True				
ANR	244543	Identifier	WASM_OP_NOP		243156	0					
ANR	244544	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	335:3:9529:9558	243156	112	True				
ANR	244545	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		243156	0		=			
ANR	244546	PtrMemberAccess	op -> type		243156	0					
ANR	244547	Identifier	op		243156	0					
ANR	244548	Identifier	type		243156	1					
ANR	244549	Identifier	R_ANAL_OP_TYPE_NOP		243156	1					
ANR	244550	ExpressionStatement	"r_strbuf_setf ( & op -> esil , """" )"	336:3:9563:9592	243156	113	True				
ANR	244551	CallExpression	"r_strbuf_setf ( & op -> esil , """" )"		243156	0					
ANR	244552	Callee	r_strbuf_setf		243156	0					
ANR	244553	Identifier	r_strbuf_setf		243156	0					
ANR	244554	ArgumentList	& op -> esil		243156	1					
ANR	244555	Argument	& op -> esil		243156	0					
ANR	244556	UnaryOperationExpression	& op -> esil		243156	0					
ANR	244557	UnaryOperator	&		243156	0					
ANR	244558	PtrMemberAccess	op -> esil		243156	1					
ANR	244559	Identifier	op		243156	0					
ANR	244560	Identifier	esil		243156	1					
ANR	244561	Argument	""""""		243156	1					
ANR	244562	PrimaryExpression	""""""		243156	0					
ANR	244563	BreakStatement	break ;	337:3:9597:9602	243156	114	True				
ANR	244564	Label	case WASM_OP_CALL :	338:2:9606:9623	243156	115	True				
ANR	244565	Identifier	WASM_OP_CALL		243156	0					
ANR	244566	Label	case WASM_OP_CALLINDIRECT :	339:2:9627:9652	243156	116	True				
ANR	244567	Identifier	WASM_OP_CALLINDIRECT		243156	0					
ANR	244568	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CALL	340:3:9657:9687	243156	117	True				
ANR	244569	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CALL		243156	0		=			
ANR	244570	PtrMemberAccess	op -> type		243156	0					
ANR	244571	Identifier	op		243156	0					
ANR	244572	Identifier	type		243156	1					
ANR	244573	Identifier	R_ANAL_OP_TYPE_CALL		243156	1					
ANR	244574	ExpressionStatement	"op -> jump = get_cf_offset ( anal , data , len )"	341:3:9692:9734	243156	118	True				
ANR	244575	AssignmentExpression	"op -> jump = get_cf_offset ( anal , data , len )"		243156	0		=			
ANR	244576	PtrMemberAccess	op -> jump		243156	0					
ANR	244577	Identifier	op		243156	0					
ANR	244578	Identifier	jump		243156	1					
ANR	244579	CallExpression	"get_cf_offset ( anal , data , len )"		243156	1					
ANR	244580	Callee	get_cf_offset		243156	0					
ANR	244581	Identifier	get_cf_offset		243156	0					
ANR	244582	ArgumentList	anal		243156	1					
ANR	244583	Argument	anal		243156	0					
ANR	244584	Identifier	anal		243156	0					
ANR	244585	Argument	data		243156	1					
ANR	244586	Identifier	data		243156	0					
ANR	244587	Argument	len		243156	2					
ANR	244588	Identifier	len		243156	0					
ANR	244589	ExpressionStatement	op -> fail = addr + op -> size	342:3:9739:9765	243156	119	True				
ANR	244590	AssignmentExpression	op -> fail = addr + op -> size		243156	0		=			
ANR	244591	PtrMemberAccess	op -> fail		243156	0					
ANR	244592	Identifier	op		243156	0					
ANR	244593	Identifier	fail		243156	1					
ANR	244594	AdditiveExpression	addr + op -> size		243156	1		+			
ANR	244595	Identifier	addr		243156	0					
ANR	244596	PtrMemberAccess	op -> size		243156	1					
ANR	244597	Identifier	op		243156	0					
ANR	244598	Identifier	size		243156	1					
ANR	244599	IfStatement	if ( op -> jump != UT64_MAX )		243156	120					
ANR	244600	Condition	op -> jump != UT64_MAX	343:7:9774:9793	243156	0	True				
ANR	244601	EqualityExpression	op -> jump != UT64_MAX		243156	0		!=			
ANR	244602	PtrMemberAccess	op -> jump		243156	0					
ANR	244603	Identifier	op		243156	0					
ANR	244604	Identifier	jump		243156	1					
ANR	244605	Identifier	UT64_MAX		243156	1					
ANR	244606	CompoundStatement		269:29:7640:7640	243156	1					
ANR	244607	ExpressionStatement	op -> ptr = op -> jump	344:4:9802:9820	243156	0	True				
ANR	244608	AssignmentExpression	op -> ptr = op -> jump		243156	0		=			
ANR	244609	PtrMemberAccess	op -> ptr		243156	0					
ANR	244610	Identifier	op		243156	0					
ANR	244611	Identifier	ptr		243156	1					
ANR	244612	PtrMemberAccess	op -> jump		243156	1					
ANR	244613	Identifier	op		243156	0					
ANR	244614	Identifier	jump		243156	1					
ANR	244615	Statement	r_strbuf_setf	346:3:9830:9842	243156	121	True				
ANR	244616	Statement	(	346:17:9844:9844	243156	122	True				
ANR	244617	Statement	&	346:18:9845:9845	243156	123	True				
ANR	244618	Statement	op	346:19:9846:9847	243156	124	True				
ANR	244619	Statement	->	346:21:9848:9849	243156	125	True				
ANR	244620	Statement	esil	346:23:9850:9853	243156	126	True				
ANR	244621	Statement	","	346:27:9854:9854	243156	127	True				
ANR	244622	Statement	"""4,sp,-=,0x%"""	346:29:9856:9868	243156	128	True				
ANR	244623	Statement	PFMT64x	346:42:9869:9875	243156	129	True				
ANR	244624	Statement	""",sp,=[4],0x%"""	346:49:9876:9889	243156	130	True				
ANR	244625	Statement	PFMT64x	346:63:9890:9896	243156	131	True				
ANR	244626	Statement	""",pc,="""	346:70:9897:9903	243156	132	True				
ANR	244627	Statement	","	346:77:9904:9904	243156	133	True				
ANR	244628	Statement	op	346:79:9906:9907	243156	134	True				
ANR	244629	Statement	->	346:81:9908:9909	243156	135	True				
ANR	244630	Statement	fail	346:83:9910:9913	243156	136	True				
ANR	244631	Statement	","	346:87:9914:9914	243156	137	True				
ANR	244632	Statement	op	346:89:9916:9917	243156	138	True				
ANR	244633	Statement	->	346:91:9918:9919	243156	139	True				
ANR	244634	Statement	jump	346:93:9920:9923	243156	140	True				
ANR	244635	Statement	)	346:97:9924:9924	243156	141	True				
ANR	244636	ExpressionStatement		346:98:9925:9925	243156	142	True				
ANR	244637	BreakStatement	break ;	347:3:9930:9935	243156	143	True				
ANR	244638	Label	case WASM_OP_RETURN :	348:2:9939:9958	243156	144	True				
ANR	244639	Identifier	WASM_OP_RETURN		243156	0					
ANR	244640	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CRET	350:3:10022:10052	243156	145	True				
ANR	244641	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CRET		243156	0		=			
ANR	244642	PtrMemberAccess	op -> type		243156	0					
ANR	244643	Identifier	op		243156	0					
ANR	244644	Identifier	type		243156	1					
ANR	244645	Identifier	R_ANAL_OP_TYPE_CRET		243156	1					
ANR	244646	Label	default :	351:2:10056:10063	243156	146	True				
ANR	244647	Identifier	default		243156	0					
ANR	244648	BreakStatement	break ;	352:3:10068:10073	243156	147	True				
ANR	244649	BreakStatement	break ;	354:2:10081:10086	243156	2	True				
ANR	244650	Label	case WASM_TYPE_OP_ATOMIC :	355:1:10089:10113	243156	3	True				
ANR	244651	Identifier	WASM_TYPE_OP_ATOMIC		243156	0					
ANR	244652	SwitchStatement	switch ( wop . op . atomic )		243156	4					
ANR	244653	Condition	wop . op . atomic	356:10:10125:10137	243156	0	True				
ANR	244654	MemberAccess	wop . op . atomic		243156	0					
ANR	244655	MemberAccess	wop . op		243156	0					
ANR	244656	Identifier	wop		243156	0					
ANR	244657	Identifier	op		243156	1					
ANR	244658	Identifier	atomic		243156	1					
ANR	244659	CompoundStatement		282:25:7984:7984	243156	1					
ANR	244660	Label	case WASM_OP_I32ATOMICLOAD :	357:2:10144:10170	243156	0	True				
ANR	244661	Identifier	WASM_OP_I32ATOMICLOAD		243156	0					
ANR	244662	Label	case WASM_OP_I64ATOMICLOAD :	358:2:10174:10200	243156	1	True				
ANR	244663	Identifier	WASM_OP_I64ATOMICLOAD		243156	0					
ANR	244664	Label	case WASM_OP_I32ATOMICLOAD8U :	359:2:10204:10232	243156	2	True				
ANR	244665	Identifier	WASM_OP_I32ATOMICLOAD8U		243156	0					
ANR	244666	Label	case WASM_OP_I32ATOMICLOAD16U :	360:2:10236:10265	243156	3	True				
ANR	244667	Identifier	WASM_OP_I32ATOMICLOAD16U		243156	0					
ANR	244668	Label	case WASM_OP_I64ATOMICLOAD8U :	361:2:10269:10297	243156	4	True				
ANR	244669	Identifier	WASM_OP_I64ATOMICLOAD8U		243156	0					
ANR	244670	Label	case WASM_OP_I64ATOMICLOAD16U :	362:2:10301:10330	243156	5	True				
ANR	244671	Identifier	WASM_OP_I64ATOMICLOAD16U		243156	0					
ANR	244672	Label	case WASM_OP_I64ATOMICLOAD32U :	363:2:10334:10363	243156	6	True				
ANR	244673	Identifier	WASM_OP_I64ATOMICLOAD32U		243156	0					
ANR	244674	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_LOAD	364:3:10368:10398	243156	7	True				
ANR	244675	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_LOAD		243156	0		=			
ANR	244676	PtrMemberAccess	op -> type		243156	0					
ANR	244677	Identifier	op		243156	0					
ANR	244678	Identifier	type		243156	1					
ANR	244679	Identifier	R_ANAL_OP_TYPE_LOAD		243156	1					
ANR	244680	BreakStatement	break ;	365:3:10403:10408	243156	8	True				
ANR	244681	Label	case WASM_OP_I32ATOMICSTORE :	366:2:10412:10439	243156	9	True				
ANR	244682	Identifier	WASM_OP_I32ATOMICSTORE		243156	0					
ANR	244683	Label	case WASM_OP_I64ATOMICSTORE :	367:2:10443:10470	243156	10	True				
ANR	244684	Identifier	WASM_OP_I64ATOMICSTORE		243156	0					
ANR	244685	Label	case WASM_OP_I32ATOMICSTORE8 :	368:2:10474:10502	243156	11	True				
ANR	244686	Identifier	WASM_OP_I32ATOMICSTORE8		243156	0					
ANR	244687	Label	case WASM_OP_I32ATOMICSTORE16 :	369:2:10506:10535	243156	12	True				
ANR	244688	Identifier	WASM_OP_I32ATOMICSTORE16		243156	0					
ANR	244689	Label	case WASM_OP_I64ATOMICSTORE8 :	370:2:10539:10567	243156	13	True				
ANR	244690	Identifier	WASM_OP_I64ATOMICSTORE8		243156	0					
ANR	244691	Label	case WASM_OP_I64ATOMICSTORE16 :	371:2:10571:10600	243156	14	True				
ANR	244692	Identifier	WASM_OP_I64ATOMICSTORE16		243156	0					
ANR	244693	Label	case WASM_OP_I64ATOMICSTORE32 :	372:2:10604:10633	243156	15	True				
ANR	244694	Identifier	WASM_OP_I64ATOMICSTORE32		243156	0					
ANR	244695	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_STORE	373:3:10638:10669	243156	16	True				
ANR	244696	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_STORE		243156	0		=			
ANR	244697	PtrMemberAccess	op -> type		243156	0					
ANR	244698	Identifier	op		243156	0					
ANR	244699	Identifier	type		243156	1					
ANR	244700	Identifier	R_ANAL_OP_TYPE_STORE		243156	1					
ANR	244701	BreakStatement	break ;	374:3:10674:10679	243156	17	True				
ANR	244702	Label	case WASM_OP_I32ATOMICRMWADD :	375:2:10683:10711	243156	18	True				
ANR	244703	Identifier	WASM_OP_I32ATOMICRMWADD		243156	0					
ANR	244704	Label	case WASM_OP_I64ATOMICRMWADD :	376:2:10715:10743	243156	19	True				
ANR	244705	Identifier	WASM_OP_I64ATOMICRMWADD		243156	0					
ANR	244706	Label	case WASM_OP_I32ATOMICRMW8UADD :	377:2:10747:10777	243156	20	True				
ANR	244707	Identifier	WASM_OP_I32ATOMICRMW8UADD		243156	0					
ANR	244708	Label	case WASM_OP_I32ATOMICRMW16UADD :	378:2:10781:10812	243156	21	True				
ANR	244709	Identifier	WASM_OP_I32ATOMICRMW16UADD		243156	0					
ANR	244710	Label	case WASM_OP_I64ATOMICRMW8UADD :	379:2:10816:10846	243156	22	True				
ANR	244711	Identifier	WASM_OP_I64ATOMICRMW8UADD		243156	0					
ANR	244712	Label	case WASM_OP_I64ATOMICRMW16UADD :	380:2:10850:10881	243156	23	True				
ANR	244713	Identifier	WASM_OP_I64ATOMICRMW16UADD		243156	0					
ANR	244714	Label	case WASM_OP_I64ATOMICRMW32UADD :	381:2:10885:10916	243156	24	True				
ANR	244715	Identifier	WASM_OP_I64ATOMICRMW32UADD		243156	0					
ANR	244716	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ADD	382:3:10921:10950	243156	25	True				
ANR	244717	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ADD		243156	0		=			
ANR	244718	PtrMemberAccess	op -> type		243156	0					
ANR	244719	Identifier	op		243156	0					
ANR	244720	Identifier	type		243156	1					
ANR	244721	Identifier	R_ANAL_OP_TYPE_ADD		243156	1					
ANR	244722	BreakStatement	break ;	383:3:10955:10960	243156	26	True				
ANR	244723	Label	case WASM_OP_I32ATOMICRMW8USUB :	384:2:10964:10994	243156	27	True				
ANR	244724	Identifier	WASM_OP_I32ATOMICRMW8USUB		243156	0					
ANR	244725	Label	case WASM_OP_I32ATOMICRMW16USUB :	385:2:10998:11029	243156	28	True				
ANR	244726	Identifier	WASM_OP_I32ATOMICRMW16USUB		243156	0					
ANR	244727	Label	case WASM_OP_I32ATOMICRMWSUB :	386:2:11033:11061	243156	29	True				
ANR	244728	Identifier	WASM_OP_I32ATOMICRMWSUB		243156	0					
ANR	244729	Label	case WASM_OP_I64ATOMICRMW8USUB :	387:2:11065:11095	243156	30	True				
ANR	244730	Identifier	WASM_OP_I64ATOMICRMW8USUB		243156	0					
ANR	244731	Label	case WASM_OP_I64ATOMICRMW16USUB :	388:2:11099:11130	243156	31	True				
ANR	244732	Identifier	WASM_OP_I64ATOMICRMW16USUB		243156	0					
ANR	244733	Label	case WASM_OP_I64ATOMICRMW32USUB :	389:2:11134:11165	243156	32	True				
ANR	244734	Identifier	WASM_OP_I64ATOMICRMW32USUB		243156	0					
ANR	244735	Label	case WASM_OP_I64ATOMICRMWSUB :	390:2:11169:11197	243156	33	True				
ANR	244736	Identifier	WASM_OP_I64ATOMICRMWSUB		243156	0					
ANR	244737	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SUB	391:3:11202:11231	243156	34	True				
ANR	244738	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SUB		243156	0		=			
ANR	244739	PtrMemberAccess	op -> type		243156	0					
ANR	244740	Identifier	op		243156	0					
ANR	244741	Identifier	type		243156	1					
ANR	244742	Identifier	R_ANAL_OP_TYPE_SUB		243156	1					
ANR	244743	BreakStatement	break ;	392:3:11236:11241	243156	35	True				
ANR	244744	Label	case WASM_OP_I32ATOMICRMWAND :	393:2:11245:11273	243156	36	True				
ANR	244745	Identifier	WASM_OP_I32ATOMICRMWAND		243156	0					
ANR	244746	Label	case WASM_OP_I64ATOMICRMWAND :	394:2:11277:11305	243156	37	True				
ANR	244747	Identifier	WASM_OP_I64ATOMICRMWAND		243156	0					
ANR	244748	Label	case WASM_OP_I32ATOMICRMW8UAND :	395:2:11309:11339	243156	38	True				
ANR	244749	Identifier	WASM_OP_I32ATOMICRMW8UAND		243156	0					
ANR	244750	Label	case WASM_OP_I32ATOMICRMW16UAND :	396:2:11343:11374	243156	39	True				
ANR	244751	Identifier	WASM_OP_I32ATOMICRMW16UAND		243156	0					
ANR	244752	Label	case WASM_OP_I64ATOMICRMW8UAND :	397:2:11378:11408	243156	40	True				
ANR	244753	Identifier	WASM_OP_I64ATOMICRMW8UAND		243156	0					
ANR	244754	Label	case WASM_OP_I64ATOMICRMW16UAND :	398:2:11412:11443	243156	41	True				
ANR	244755	Identifier	WASM_OP_I64ATOMICRMW16UAND		243156	0					
ANR	244756	Label	case WASM_OP_I64ATOMICRMW32UAND :	399:2:11447:11478	243156	42	True				
ANR	244757	Identifier	WASM_OP_I64ATOMICRMW32UAND		243156	0					
ANR	244758	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_AND	400:3:11483:11512	243156	43	True				
ANR	244759	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_AND		243156	0		=			
ANR	244760	PtrMemberAccess	op -> type		243156	0					
ANR	244761	Identifier	op		243156	0					
ANR	244762	Identifier	type		243156	1					
ANR	244763	Identifier	R_ANAL_OP_TYPE_AND		243156	1					
ANR	244764	BreakStatement	break ;	401:3:11517:11522	243156	44	True				
ANR	244765	Label	case WASM_OP_I32ATOMICRMWOR :	402:2:11526:11553	243156	45	True				
ANR	244766	Identifier	WASM_OP_I32ATOMICRMWOR		243156	0					
ANR	244767	Label	case WASM_OP_I64ATOMICRMWOR :	403:2:11557:11584	243156	46	True				
ANR	244768	Identifier	WASM_OP_I64ATOMICRMWOR		243156	0					
ANR	244769	Label	case WASM_OP_I32ATOMICRMW8UOR :	404:2:11588:11617	243156	47	True				
ANR	244770	Identifier	WASM_OP_I32ATOMICRMW8UOR		243156	0					
ANR	244771	Label	case WASM_OP_I32ATOMICRMW16UOR :	405:2:11621:11651	243156	48	True				
ANR	244772	Identifier	WASM_OP_I32ATOMICRMW16UOR		243156	0					
ANR	244773	Label	case WASM_OP_I64ATOMICRMW8UOR :	406:2:11655:11684	243156	49	True				
ANR	244774	Identifier	WASM_OP_I64ATOMICRMW8UOR		243156	0					
ANR	244775	Label	case WASM_OP_I64ATOMICRMW16UOR :	407:2:11688:11718	243156	50	True				
ANR	244776	Identifier	WASM_OP_I64ATOMICRMW16UOR		243156	0					
ANR	244777	Label	case WASM_OP_I64ATOMICRMW32UOR :	408:2:11722:11752	243156	51	True				
ANR	244778	Identifier	WASM_OP_I64ATOMICRMW32UOR		243156	0					
ANR	244779	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_OR	409:3:11757:11785	243156	52	True				
ANR	244780	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_OR		243156	0		=			
ANR	244781	PtrMemberAccess	op -> type		243156	0					
ANR	244782	Identifier	op		243156	0					
ANR	244783	Identifier	type		243156	1					
ANR	244784	Identifier	R_ANAL_OP_TYPE_OR		243156	1					
ANR	244785	BreakStatement	break ;	410:3:11790:11795	243156	53	True				
ANR	244786	Label	case WASM_OP_I32ATOMICRMWXOR :	411:2:11799:11827	243156	54	True				
ANR	244787	Identifier	WASM_OP_I32ATOMICRMWXOR		243156	0					
ANR	244788	Label	case WASM_OP_I64ATOMICRMWXOR :	412:2:11831:11859	243156	55	True				
ANR	244789	Identifier	WASM_OP_I64ATOMICRMWXOR		243156	0					
ANR	244790	Label	case WASM_OP_I32ATOMICRMW8UXOR :	413:2:11863:11893	243156	56	True				
ANR	244791	Identifier	WASM_OP_I32ATOMICRMW8UXOR		243156	0					
ANR	244792	Label	case WASM_OP_I32ATOMICRMW16UXOR :	414:2:11897:11928	243156	57	True				
ANR	244793	Identifier	WASM_OP_I32ATOMICRMW16UXOR		243156	0					
ANR	244794	Label	case WASM_OP_I64ATOMICRMW8UXOR :	415:2:11932:11962	243156	58	True				
ANR	244795	Identifier	WASM_OP_I64ATOMICRMW8UXOR		243156	0					
ANR	244796	Label	case WASM_OP_I64ATOMICRMW16UXOR :	416:2:11966:11997	243156	59	True				
ANR	244797	Identifier	WASM_OP_I64ATOMICRMW16UXOR		243156	0					
ANR	244798	Label	case WASM_OP_I64ATOMICRMW32UXOR :	417:2:12001:12032	243156	60	True				
ANR	244799	Identifier	WASM_OP_I64ATOMICRMW32UXOR		243156	0					
ANR	244800	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_XOR	418:3:12037:12066	243156	61	True				
ANR	244801	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_XOR		243156	0		=			
ANR	244802	PtrMemberAccess	op -> type		243156	0					
ANR	244803	Identifier	op		243156	0					
ANR	244804	Identifier	type		243156	1					
ANR	244805	Identifier	R_ANAL_OP_TYPE_XOR		243156	1					
ANR	244806	BreakStatement	break ;	419:3:12071:12076	243156	62	True				
ANR	244807	Label	case WASM_OP_I32ATOMICRMWXCHG :	420:2:12080:12109	243156	63	True				
ANR	244808	Identifier	WASM_OP_I32ATOMICRMWXCHG		243156	0					
ANR	244809	Label	case WASM_OP_I64ATOMICRMWXCHG :	421:2:12113:12142	243156	64	True				
ANR	244810	Identifier	WASM_OP_I64ATOMICRMWXCHG		243156	0					
ANR	244811	Label	case WASM_OP_I32ATOMICRMW8UXCHG :	422:2:12146:12177	243156	65	True				
ANR	244812	Identifier	WASM_OP_I32ATOMICRMW8UXCHG		243156	0					
ANR	244813	Label	case WASM_OP_I32ATOMICRMW16UXCHG :	423:2:12181:12213	243156	66	True				
ANR	244814	Identifier	WASM_OP_I32ATOMICRMW16UXCHG		243156	0					
ANR	244815	Label	case WASM_OP_I64ATOMICRMW8UXCHG :	424:2:12217:12248	243156	67	True				
ANR	244816	Identifier	WASM_OP_I64ATOMICRMW8UXCHG		243156	0					
ANR	244817	Label	case WASM_OP_I64ATOMICRMW16UXCHG :	425:2:12252:12284	243156	68	True				
ANR	244818	Identifier	WASM_OP_I64ATOMICRMW16UXCHG		243156	0					
ANR	244819	Label	case WASM_OP_I64ATOMICRMW32UXCHG :	426:2:12288:12320	243156	69	True				
ANR	244820	Identifier	WASM_OP_I64ATOMICRMW32UXCHG		243156	0					
ANR	244821	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_XCHG	427:3:12325:12355	243156	70	True				
ANR	244822	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_XCHG		243156	0		=			
ANR	244823	PtrMemberAccess	op -> type		243156	0					
ANR	244824	Identifier	op		243156	0					
ANR	244825	Identifier	type		243156	1					
ANR	244826	Identifier	R_ANAL_OP_TYPE_XCHG		243156	1					
ANR	244827	BreakStatement	break ;	428:3:12360:12365	243156	71	True				
ANR	244828	Label	default :	429:2:12369:12376	243156	72	True				
ANR	244829	Identifier	default		243156	0					
ANR	244830	BreakStatement	break ;	430:3:12381:12386	243156	73	True				
ANR	244831	Label	default :	432:1:12393:12400	243156	5	True				
ANR	244832	Identifier	default		243156	0					
ANR	244833	BreakStatement	break ;	433:2:12404:12409	243156	6	True				
ANR	244834	Label	anal_end :	436:0:12415:12423	243156	15	True				
ANR	244835	Identifier	anal_end		243156	0					
ANR	244836	ExpressionStatement	addr_old = addr	437:1:12426:12441	243156	16	True				
ANR	244837	AssignmentExpression	addr_old = addr		243156	0		=			
ANR	244838	Identifier	addr_old		243156	0					
ANR	244839	Identifier	addr		243156	1					
ANR	244840	ExpressionStatement	free ( wop . txt )	438:1:12444:12458	243156	17	True				
ANR	244841	CallExpression	free ( wop . txt )		243156	0					
ANR	244842	Callee	free		243156	0					
ANR	244843	Identifier	free		243156	0					
ANR	244844	ArgumentList	wop . txt		243156	1					
ANR	244845	Argument	wop . txt		243156	0					
ANR	244846	MemberAccess	wop . txt		243156	0					
ANR	244847	Identifier	wop		243156	0					
ANR	244848	Identifier	txt		243156	1					
ANR	244849	ExpressionStatement	r_anal_hint_free ( hint )	439:1:12461:12484	243156	18	True				
ANR	244850	CallExpression	r_anal_hint_free ( hint )		243156	0					
ANR	244851	Callee	r_anal_hint_free		243156	0					
ANR	244852	Identifier	r_anal_hint_free		243156	0					
ANR	244853	ArgumentList	hint		243156	1					
ANR	244854	Argument	hint		243156	0					
ANR	244855	Identifier	hint		243156	0					
ANR	244856	ReturnStatement	return op -> size ;	440:1:12487:12502	243156	19	True				
ANR	244857	PtrMemberAccess	op -> size		243156	0					
ANR	244858	Identifier	op		243156	0					
ANR	244859	Identifier	size		243156	1					
ANR	244860	ReturnType	static int		243156	1					
ANR	244861	Identifier	wasm_op		243156	2					
ANR	244862	ParameterList	"RAnal * anal , RAnalOp * op , ut64 addr , const ut8 * data , int len , RAnalOpMask mask"		243156	3					
ANR	244863	Parameter	RAnal * anal	75:19:2074:2084	243156	0	True				
ANR	244864	ParameterType	RAnal *		243156	0					
ANR	244865	Identifier	anal		243156	1					
ANR	244866	Parameter	RAnalOp * op	75:32:2087:2097	243156	1	True				
ANR	244867	ParameterType	RAnalOp *		243156	0					
ANR	244868	Identifier	op		243156	1					
ANR	244869	Parameter	ut64 addr	75:45:2100:2108	243156	2	True				
ANR	244870	ParameterType	ut64		243156	0					
ANR	244871	Identifier	addr		243156	1					
ANR	244872	Parameter	const ut8 * data	75:56:2111:2125	243156	3	True				
ANR	244873	ParameterType	const ut8 *		243156	0					
ANR	244874	Identifier	data		243156	1					
ANR	244875	Parameter	int len	75:73:2128:2134	243156	4	True				
ANR	244876	ParameterType	int		243156	0					
ANR	244877	Identifier	len		243156	1					
ANR	244878	Parameter	RAnalOpMask mask	75:82:2137:2152	243156	5	True				
ANR	244879	ParameterType	RAnalOpMask		243156	0					
ANR	244880	Identifier	mask		243156	1					
ANR	244881	CFGEntryNode	ENTRY		243156		True				
ANR	244882	CFGExitNode	EXIT		243156		True				
ANR	244883	Symbol	addr_old		243156						
ANR	244884	Symbol	& val		243156						
ANR	244885	Symbol	data		243156						
ANR	244886	Symbol	* op		243156						
ANR	244887	Symbol	scope_hint		243156						
ANR	244888	Symbol	R_ANAL_OP_TYPE_OR		243156						
ANR	244889	Symbol	R_ANAL_OP_TYPE_STORE		243156						
ANR	244890	Symbol	R_ANAL_OP_TYPE_UNK		243156						
ANR	244891	Symbol	strncmp		243156						
ANR	244892	Symbol	op -> eob		243156						
ANR	244893	Symbol	len		243156						
ANR	244894	Symbol	WASM_TYPE_OP_CORE		243156						
ANR	244895	Symbol	wop		243156						
ANR	244896	Symbol	R_ANAL_OP_TYPE_XCHG		243156						
ANR	244897	Symbol	advance_till_scope_end		243156						
ANR	244898	Symbol	ret		243156						
ANR	244899	Symbol	val		243156						
ANR	244900	Symbol	wasm_dis		243156						
ANR	244901	Symbol	wop . op . atomic		243156						
ANR	244902	Symbol	R_ANAL_OP_TYPE_CJMP		243156						
ANR	244903	Symbol	* hint		243156						
ANR	244904	Symbol	NULL		243156						
ANR	244905	Symbol	op -> ptr		243156						
ANR	244906	Symbol	op -> sign		243156						
ANR	244907	Symbol	op -> type		243156						
ANR	244908	Symbol	wop . op . core		243156						
ANR	244909	Symbol	wop . txt		243156						
ANR	244910	Symbol	R_ANAL_OP_TYPE_MOV		243156						
ANR	244911	Symbol	R_ANAL_OP_TYPE_JMP		243156						
ANR	244912	Symbol	anal		243156						
ANR	244913	Symbol	R_ANAL_OP_TYPE_CALL		243156						
ANR	244914	Symbol	R_ANAL_OP_TYPE_CRET		243156						
ANR	244915	Symbol	hint		243156						
ANR	244916	Symbol	true		243156						
ANR	244917	Symbol	& wop		243156						
ANR	244918	Symbol	R_ANAL_OP_TYPE_MOD		243156						
ANR	244919	Symbol	R_ANAL_OP_TYPE_SUB		243156						
ANR	244920	Symbol	get_cf_offset		243156						
ANR	244921	Symbol	& op -> esil		243156						
ANR	244922	Symbol	WASM_OP_END		243156						
ANR	244923	Symbol	hint2 -> jump		243156						
ANR	244924	Symbol	R_ANAL_OP_TYPE_LOAD		243156						
ANR	244925	Symbol	op -> fail		243156						
ANR	244926	Symbol	hint -> jump		243156						
ANR	244927	Symbol	hint -> opcode		243156						
ANR	244928	Symbol	R_ANAL_OP_TYPE_ILL		243156						
ANR	244929	Symbol	arg		243156						
ANR	244930	Symbol	op -> jump		243156						
ANR	244931	Symbol	addr		243156						
ANR	244932	Symbol	UT64_MAX		243156						
ANR	244933	Symbol	* hint2		243156						
ANR	244934	Symbol	mask		243156						
ANR	244935	Symbol	R_ANAL_OP_TYPE_RET		243156						
ANR	244936	Symbol	R_ANAL_OP_TYPE_ADD		243156						
ANR	244937	Symbol	op		243156						
ANR	244938	Symbol	hint2		243156						
ANR	244939	Symbol	op -> addr		243156						
ANR	244940	Symbol	op -> id		243156						
ANR	244941	Symbol	R_ANAL_OP_TYPE_XOR		243156						
ANR	244942	Symbol	wop . type		243156						
ANR	244943	Symbol	false		243156						
ANR	244944	Symbol	R_ANAL_OP_TYPE_AND		243156						
ANR	244945	Symbol	op -> val		243156						
ANR	244946	Symbol	r_anal_hint_get		243156						
ANR	244947	Symbol	wop . op		243156						
ANR	244948	Symbol	R_ANAL_OP_TYPE_NOP		243156						
ANR	244949	Symbol	op -> size		243156						
ANR	244950	Symbol	R_ANAL_OP_TYPE_CMP		243156						
ANR	244951	Symbol	* data		243156						
ANR	244952	Function	archinfo	443:0:12507:12557							
ANR	244953	FunctionDef	"archinfo (RAnal * a , int q)"		244952	0					
ANR	244954	CompoundStatement		443:37:12544:12557	244952	0					
ANR	244955	ReturnStatement	return 1 ;	444:1:12547:12555	244952	0	True				
ANR	244956	PrimaryExpression	1		244952	0					
ANR	244957	ReturnType	static int		244952	1					
ANR	244958	Identifier	archinfo		244952	2					
ANR	244959	ParameterList	"RAnal * a , int q"		244952	3					
ANR	244960	Parameter	RAnal * a	443:20:12527:12534	244952	0	True				
ANR	244961	ParameterType	RAnal *		244952	0					
ANR	244962	Identifier	a		244952	1					
ANR	244963	Parameter	int q	443:30:12537:12541	244952	1	True				
ANR	244964	ParameterType	int		244952	0					
ANR	244965	Identifier	q		244952	1					
ANR	244966	CFGEntryNode	ENTRY		244952		True				
ANR	244967	CFGExitNode	EXIT		244952		True				
ANR	244968	Symbol	a		244952						
ANR	244969	Symbol	q		244952						
ANR	244970	Function	get_reg_profile	447:0:12560:12789							
ANR	244971	FunctionDef	get_reg_profile (RAnal * anal)		244970	0					
ANR	244972	CompoundStatement		447:42:12602:12789	244970	0					
ANR	244973	Statement	return	448:1:12605:12610	244970	0	True				
ANR	244974	Statement	strdup	448:8:12612:12617	244970	1	True				
ANR	244975	Statement	(	448:15:12619:12619	244970	2	True				
ANR	244976	Statement	"""=PC\\tpc\\n"""	449:2:12623:12632	244970	3	True				
ANR	244977	Statement	"""=BP\\tbp\\n"""	450:2:12636:12645	244970	4	True				
ANR	244978	Statement	"""=SP\\tsp\\n"""	451:2:12649:12658	244970	5	True				
ANR	244979	Statement	"""gpr\\tsp\\t.32\\t0\\t0\\n"""	452:2:12662:12679	244970	6	True				
ANR	244980	Statement	"""gpr\\tpc\\t.32\\t4\\t0\\n"""	453:2:12700:12717	244970	7	True				
ANR	244981	Statement	"""gpr\\tbp\\t.32\\t8\\t0\\n"""	454:2:12740:12757	244970	8	True				
ANR	244982	Statement	)	455:1:12786:12786	244970	9	True				
ANR	244983	ExpressionStatement		455:2:12787:12787	244970	10	True				
ANR	244984	ReturnType	static char *		244970	1					
ANR	244985	Identifier	get_reg_profile		244970	2					
ANR	244986	ParameterList	RAnal * anal		244970	3					
ANR	244987	Parameter	RAnal * anal	447:29:12589:12599	244970	0	True				
ANR	244988	ParameterType	RAnal *		244970	0					
ANR	244989	Identifier	anal		244970	1					
ANR	244990	CFGEntryNode	ENTRY		244970		True				
ANR	244991	CFGExitNode	EXIT		244970		True				
ANR	244992	Symbol	anal		244970						
ANR	244993	DeclStmt									
ANR	244994	Decl							RAnalPlugin	RAnalPlugin	r_anal_plugin_wasm
ANR	244995	DeclStmt									
ANR	244996	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
