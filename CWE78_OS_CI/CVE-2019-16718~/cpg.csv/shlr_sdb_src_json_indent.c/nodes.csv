command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6079003	File	data/converged/CVE-2019-16718~_radare2/shlr_sdb_src_json_indent.c								
ANR	6079004	Function	doIndent	5:0:70:236							
ANR	6079005	FunctionDef	"doIndent (int idt , char * * o , const char * tab)"		6079004	0					
ANR	6079006	CompoundStatement		5:57:127:236	6079004	0					
ANR	6079007	IdentifierDeclStatement	int i ;	6:1:130:135	6079004	0	True				
ANR	6079008	IdentifierDecl	i		6079004	0					
ANR	6079009	IdentifierDeclType	int		6079004	0					
ANR	6079010	Identifier	i		6079004	1					
ANR	6079011	IdentifierDeclStatement	char * x ;	7:1:138:145	6079004	1	True				
ANR	6079012	IdentifierDecl	* x		6079004	0					
ANR	6079013	IdentifierDeclType	char *		6079004	0					
ANR	6079014	Identifier	x		6079004	1					
ANR	6079015	ForStatement	for ( i = 0 ; i < idt ; i ++ )		6079004	2					
ANR	6079016	ForInit	i = 0 ;	8:6:153:158	6079004	0	True				
ANR	6079017	AssignmentExpression	i = 0		6079004	0		=			
ANR	6079018	Identifier	i		6079004	0					
ANR	6079019	PrimaryExpression	0		6079004	1					
ANR	6079020	Condition	i < idt	8:13:160:166	6079004	1	True				
ANR	6079021	RelationalExpression	i < idt		6079004	0		<			
ANR	6079022	Identifier	i		6079004	0					
ANR	6079023	Identifier	idt		6079004	1					
ANR	6079024	PostIncDecOperationExpression	i ++	8:22:169:171	6079004	2	True				
ANR	6079025	Identifier	i		6079004	0					
ANR	6079026	IncDec	++		6079004	1					
ANR	6079027	CompoundStatement		4:27:46:46	6079004	3					
ANR	6079028	ForStatement	for ( x = ( char * ) tab ; * x ; x ++ )		6079004	0					
ANR	6079029	ForInit	x = ( char * ) tab ;	9:7:183:199	6079004	0	True				
ANR	6079030	AssignmentExpression	x = ( char * ) tab		6079004	0		=			
ANR	6079031	Identifier	x		6079004	0					
ANR	6079032	CastExpression	( char * ) tab		6079004	1					
ANR	6079033	CastTarget	char *		6079004	0					
ANR	6079034	Identifier	tab		6079004	1					
ANR	6079035	Condition	* x	9:25:201:202	6079004	1	True				
ANR	6079036	UnaryOperationExpression	* x		6079004	0					
ANR	6079037	UnaryOperator	*		6079004	0					
ANR	6079038	Identifier	x		6079004	1					
ANR	6079039	PostIncDecOperationExpression	x ++	9:29:205:207	6079004	2	True				
ANR	6079040	Identifier	x		6079004	0					
ANR	6079041	IncDec	++		6079004	1					
ANR	6079042	CompoundStatement		5:34:82:82	6079004	3					
ANR	6079043	ExpressionStatement	* ( * o ) ++ = * x	10:3:215:227	6079004	0	True				
ANR	6079044	AssignmentExpression	* ( * o ) ++ = * x		6079004	0		=			
ANR	6079045	UnaryOperationExpression	* ( * o ) ++		6079004	0					
ANR	6079046	UnaryOperator	*		6079004	0					
ANR	6079047	PostIncDecOperationExpression	( * o ) ++		6079004	1					
ANR	6079048	UnaryOperationExpression	* o		6079004	0					
ANR	6079049	UnaryOperator	*		6079004	0					
ANR	6079050	Identifier	o		6079004	1					
ANR	6079051	IncDec	++		6079004	1					
ANR	6079052	UnaryOperationExpression	* x		6079004	1					
ANR	6079053	UnaryOperator	*		6079004	0					
ANR	6079054	Identifier	x		6079004	1					
ANR	6079055	ReturnType	static void		6079004	1					
ANR	6079056	Identifier	doIndent		6079004	2					
ANR	6079057	ParameterList	"int idt , char * * o , const char * tab"		6079004	3					
ANR	6079058	Parameter	int idt	5:21:91:97	6079004	0	True				
ANR	6079059	ParameterType	int		6079004	0					
ANR	6079060	Identifier	idt		6079004	1					
ANR	6079061	Parameter	char * * o	5:30:100:107	6079004	1	True				
ANR	6079062	ParameterType	char * *		6079004	0					
ANR	6079063	Identifier	o		6079004	1					
ANR	6079064	Parameter	const char * tab	5:40:110:124	6079004	2	True				
ANR	6079065	ParameterType	const char *		6079004	0					
ANR	6079066	Identifier	tab		6079004	1					
ANR	6079067	CFGEntryNode	ENTRY		6079004		True				
ANR	6079068	CFGExitNode	EXIT		6079004		True				
ANR	6079069	Symbol	* x		6079004						
ANR	6079070	Symbol	tab		6079004						
ANR	6079071	Symbol	* ( * o ) ++		6079004						
ANR	6079072	Symbol	idt		6079004						
ANR	6079073	Symbol	x		6079004						
ANR	6079074	Symbol	i		6079004						
ANR	6079075	Symbol	* o		6079004						
ANR	6079076	Symbol	o		6079004						
ANR	6079077	Function	sdb_json_indent	15:0:239:1914							
ANR	6079078	FunctionDef	"sdb_json_indent (const char * s , const char * tab)"		6079077	0					
ANR	6079079	CompoundStatement		15:62:301:1914	6079077	0					
ANR	6079080	IdentifierDeclStatement	"int idx , indent = 0 ;"	16:1:304:323	6079077	0	True				
ANR	6079081	IdentifierDecl	idx		6079077	0					
ANR	6079082	IdentifierDeclType	int		6079077	0					
ANR	6079083	Identifier	idx		6079077	1					
ANR	6079084	IdentifierDecl	indent = 0		6079077	1					
ANR	6079085	IdentifierDeclType	int		6079077	0					
ANR	6079086	Identifier	indent		6079077	1					
ANR	6079087	AssignmentExpression	indent = 0		6079077	2		=			
ANR	6079088	Identifier	indent		6079077	0					
ANR	6079089	PrimaryExpression	0		6079077	1					
ANR	6079090	IdentifierDeclStatement	int instr = 0 ;	17:1:326:339	6079077	1	True				
ANR	6079091	IdentifierDecl	instr = 0		6079077	0					
ANR	6079092	IdentifierDeclType	int		6079077	0					
ANR	6079093	Identifier	instr		6079077	1					
ANR	6079094	AssignmentExpression	instr = 0		6079077	2		=			
ANR	6079095	Identifier	instr		6079077	0					
ANR	6079096	PrimaryExpression	0		6079077	1					
ANR	6079097	IdentifierDeclStatement	size_t o_size = 0 ;	18:1:342:359	6079077	2	True				
ANR	6079098	IdentifierDecl	o_size = 0		6079077	0					
ANR	6079099	IdentifierDeclType	size_t		6079077	0					
ANR	6079100	Identifier	o_size		6079077	1					
ANR	6079101	AssignmentExpression	o_size = 0		6079077	2		=			
ANR	6079102	Identifier	o_size		6079077	0					
ANR	6079103	PrimaryExpression	0		6079077	1					
ANR	6079104	IdentifierDeclStatement	"char * o , * O ;"	19:1:362:373	6079077	3	True				
ANR	6079105	IdentifierDecl	* o		6079077	0					
ANR	6079106	IdentifierDeclType	char *		6079077	0					
ANR	6079107	Identifier	o		6079077	1					
ANR	6079108	IdentifierDecl	* O		6079077	1					
ANR	6079109	IdentifierDeclType	char *		6079077	0					
ANR	6079110	Identifier	O		6079077	1					
ANR	6079111	IfStatement	if ( ! s )		6079077	4					
ANR	6079112	Condition	! s	20:5:380:381	6079077	0	True				
ANR	6079113	UnaryOperationExpression	! s		6079077	0					
ANR	6079114	UnaryOperator	!		6079077	0					
ANR	6079115	Identifier	s		6079077	1					
ANR	6079116	CompoundStatement		6:9:82:82	6079077	1					
ANR	6079117	ReturnStatement	return NULL ;	21:2:388:399	6079077	0	True				
ANR	6079118	Identifier	NULL		6079077	0					
ANR	6079119	IdentifierDeclStatement	size_t tab_len = strlen ( tab ) ;	24:1:406:435	6079077	5	True				
ANR	6079120	IdentifierDecl	tab_len = strlen ( tab )		6079077	0					
ANR	6079121	IdentifierDeclType	size_t		6079077	0					
ANR	6079122	Identifier	tab_len		6079077	1					
ANR	6079123	AssignmentExpression	tab_len = strlen ( tab )		6079077	2		=			
ANR	6079124	Identifier	tab_len		6079077	0					
ANR	6079125	CallExpression	strlen ( tab )		6079077	1					
ANR	6079126	Callee	strlen		6079077	0					
ANR	6079127	Identifier	strlen		6079077	0					
ANR	6079128	ArgumentList	tab		6079077	1					
ANR	6079129	Argument	tab		6079077	0					
ANR	6079130	Identifier	tab		6079077	0					
ANR	6079131	ForStatement	for ( idx = 0 ; s [ idx ] ; idx ++ )		6079077	6					
ANR	6079132	ForInit	idx = 0 ;	25:6:443:450	6079077	0	True				
ANR	6079133	AssignmentExpression	idx = 0		6079077	0		=			
ANR	6079134	Identifier	idx		6079077	0					
ANR	6079135	PrimaryExpression	0		6079077	1					
ANR	6079136	Condition	s [ idx ]	25:15:452:457	6079077	1	True				
ANR	6079137	ArrayIndexing	s [ idx ]		6079077	0					
ANR	6079138	Identifier	s		6079077	0					
ANR	6079139	Identifier	idx		6079077	1					
ANR	6079140	PostIncDecOperationExpression	idx ++	25:23:460:464	6079077	2	True				
ANR	6079141	Identifier	idx		6079077	0					
ANR	6079142	IncDec	++		6079077	1					
ANR	6079143	CompoundStatement		11:30:165:165	6079077	3					
ANR	6079144	IfStatement	if ( o_size > INT_MAX - ( indent * tab_len + 2 ) )		6079077	0					
ANR	6079145	Condition	o_size > INT_MAX - ( indent * tab_len + 2 )	26:6:475:515	6079077	0	True				
ANR	6079146	RelationalExpression	o_size > INT_MAX - ( indent * tab_len + 2 )		6079077	0		>			
ANR	6079147	Identifier	o_size		6079077	0					
ANR	6079148	AdditiveExpression	INT_MAX - ( indent * tab_len + 2 )		6079077	1		-			
ANR	6079149	Identifier	INT_MAX		6079077	0					
ANR	6079150	AdditiveExpression	indent * tab_len + 2		6079077	1		+			
ANR	6079151	MultiplicativeExpression	indent * tab_len		6079077	0		*			
ANR	6079152	Identifier	indent		6079077	0					
ANR	6079153	Identifier	tab_len		6079077	1					
ANR	6079154	PrimaryExpression	2		6079077	1					
ANR	6079155	CompoundStatement		12:49:216:216	6079077	1					
ANR	6079156	ReturnStatement	return NULL ;	27:3:523:534	6079077	0	True				
ANR	6079157	Identifier	NULL		6079077	0					
ANR	6079158	IfStatement	if ( s [ idx ] == '{' || s [ idx ] == '[' )		6079077	1					
ANR	6079159	Condition	s [ idx ] == '{' || s [ idx ] == '['	30:6:547:576	6079077	0	True				
ANR	6079160	OrExpression	s [ idx ] == '{' || s [ idx ] == '['		6079077	0		||			
ANR	6079161	EqualityExpression	s [ idx ] == '{'		6079077	0		==			
ANR	6079162	ArrayIndexing	s [ idx ]		6079077	0					
ANR	6079163	Identifier	s		6079077	0					
ANR	6079164	Identifier	idx		6079077	1					
ANR	6079165	PrimaryExpression	'{'		6079077	1					
ANR	6079166	EqualityExpression	s [ idx ] == '['		6079077	1		==			
ANR	6079167	ArrayIndexing	s [ idx ]		6079077	0					
ANR	6079168	Identifier	s		6079077	0					
ANR	6079169	Identifier	idx		6079077	1					
ANR	6079170	PrimaryExpression	'['		6079077	1					
ANR	6079171	CompoundStatement		16:38:277:277	6079077	1					
ANR	6079172	ExpressionStatement	indent ++	31:3:584:592	6079077	0	True				
ANR	6079173	PostIncDecOperationExpression	indent ++		6079077	0					
ANR	6079174	Identifier	indent		6079077	0					
ANR	6079175	IncDec	++		6079077	1					
ANR	6079176	ExpressionStatement	o_size += indent * tab_len + 2	33:3:647:677	6079077	1	True				
ANR	6079177	AssignmentExpression	o_size += indent * tab_len + 2		6079077	0		+=			
ANR	6079178	Identifier	o_size		6079077	0					
ANR	6079179	AdditiveExpression	indent * tab_len + 2		6079077	1		+			
ANR	6079180	MultiplicativeExpression	indent * tab_len		6079077	0		*			
ANR	6079181	Identifier	indent		6079077	0					
ANR	6079182	Identifier	tab_len		6079077	1					
ANR	6079183	PrimaryExpression	2		6079077	1					
ANR	6079184	ElseStatement	else		6079077	0					
ANR	6079185	IfStatement	if ( s [ idx ] == '}' || s [ idx ] == ']' )		6079077	0					
ANR	6079186	Condition	s [ idx ] == '}' || s [ idx ] == ']'	34:13:692:721	6079077	0	True				
ANR	6079187	OrExpression	s [ idx ] == '}' || s [ idx ] == ']'		6079077	0		||			
ANR	6079188	EqualityExpression	s [ idx ] == '}'		6079077	0		==			
ANR	6079189	ArrayIndexing	s [ idx ]		6079077	0					
ANR	6079190	Identifier	s		6079077	0					
ANR	6079191	Identifier	idx		6079077	1					
ANR	6079192	PrimaryExpression	'}'		6079077	1					
ANR	6079193	EqualityExpression	s [ idx ] == ']'		6079077	1		==			
ANR	6079194	ArrayIndexing	s [ idx ]		6079077	0					
ANR	6079195	Identifier	s		6079077	0					
ANR	6079196	Identifier	idx		6079077	1					
ANR	6079197	PrimaryExpression	']'		6079077	1					
ANR	6079198	CompoundStatement		20:45:422:422	6079077	1					
ANR	6079199	IfStatement	if ( indent > 0 )		6079077	0					
ANR	6079200	Condition	indent > 0	35:7:733:742	6079077	0	True				
ANR	6079201	RelationalExpression	indent > 0		6079077	0		>			
ANR	6079202	Identifier	indent		6079077	0					
ANR	6079203	PrimaryExpression	0		6079077	1					
ANR	6079204	CompoundStatement		21:19:443:443	6079077	1					
ANR	6079205	ExpressionStatement	indent --	36:4:751:759	6079077	0	True				
ANR	6079206	PostIncDecOperationExpression	indent --		6079077	0					
ANR	6079207	Identifier	indent		6079077	0					
ANR	6079208	IncDec	--		6079077	1					
ANR	6079209	ExpressionStatement	o_size += indent * tab_len + 2	39:3:819:849	6079077	1	True				
ANR	6079210	AssignmentExpression	o_size += indent * tab_len + 2		6079077	0		+=			
ANR	6079211	Identifier	o_size		6079077	0					
ANR	6079212	AdditiveExpression	indent * tab_len + 2		6079077	1		+			
ANR	6079213	MultiplicativeExpression	indent * tab_len		6079077	0		*			
ANR	6079214	Identifier	indent		6079077	0					
ANR	6079215	Identifier	tab_len		6079077	1					
ANR	6079216	PrimaryExpression	2		6079077	1					
ANR	6079217	ElseStatement	else		6079077	0					
ANR	6079218	IfStatement	"if ( s [ idx ] == ',' )"		6079077	0					
ANR	6079219	Condition	"s [ idx ] == ','"	40:13:864:876	6079077	0	True				
ANR	6079220	EqualityExpression	"s [ idx ] == ','"		6079077	0		==			
ANR	6079221	ArrayIndexing	s [ idx ]		6079077	0					
ANR	6079222	Identifier	s		6079077	0					
ANR	6079223	Identifier	idx		6079077	1					
ANR	6079224	PrimaryExpression	"','"		6079077	1					
ANR	6079225	CompoundStatement		26:28:577:577	6079077	1					
ANR	6079226	ExpressionStatement	o_size += indent * tab_len + 2	42:3:924:954	6079077	0	True				
ANR	6079227	AssignmentExpression	o_size += indent * tab_len + 2		6079077	0		+=			
ANR	6079228	Identifier	o_size		6079077	0					
ANR	6079229	AdditiveExpression	indent * tab_len + 2		6079077	1		+			
ANR	6079230	MultiplicativeExpression	indent * tab_len		6079077	0		*			
ANR	6079231	Identifier	indent		6079077	0					
ANR	6079232	Identifier	tab_len		6079077	1					
ANR	6079233	PrimaryExpression	2		6079077	1					
ANR	6079234	ElseStatement	else		6079077	0					
ANR	6079235	IfStatement	if ( s [ idx ] == ':' )		6079077	0					
ANR	6079236	Condition	s [ idx ] == ':'	43:13:969:981	6079077	0	True				
ANR	6079237	EqualityExpression	s [ idx ] == ':'		6079077	0		==			
ANR	6079238	ArrayIndexing	s [ idx ]		6079077	0					
ANR	6079239	Identifier	s		6079077	0					
ANR	6079240	Identifier	idx		6079077	1					
ANR	6079241	PrimaryExpression	':'		6079077	1					
ANR	6079242	CompoundStatement		29:28:682:682	6079077	1					
ANR	6079243	ExpressionStatement	o_size += 2	44:3:989:1000	6079077	0	True				
ANR	6079244	AssignmentExpression	o_size += 2		6079077	0		+=			
ANR	6079245	Identifier	o_size		6079077	0					
ANR	6079246	PrimaryExpression	2		6079077	1					
ANR	6079247	ElseStatement	else		6079077	0					
ANR	6079248	CompoundStatement		31:9:709:709	6079077	0					
ANR	6079249	ExpressionStatement	o_size ++	46:3:1016:1024	6079077	0	True				
ANR	6079250	PostIncDecOperationExpression	o_size ++		6079077	0					
ANR	6079251	Identifier	o_size		6079077	0					
ANR	6079252	IncDec	++		6079077	1					
ANR	6079253	ExpressionStatement	o_size += 2	50:1:1074:1085	6079077	7	True				
ANR	6079254	AssignmentExpression	o_size += 2		6079077	0		+=			
ANR	6079255	Identifier	o_size		6079077	0					
ANR	6079256	PrimaryExpression	2		6079077	1					
ANR	6079257	ExpressionStatement	indent = 0	51:1:1088:1098	6079077	8	True				
ANR	6079258	AssignmentExpression	indent = 0		6079077	0		=			
ANR	6079259	Identifier	indent		6079077	0					
ANR	6079260	PrimaryExpression	0		6079077	1					
ANR	6079261	ExpressionStatement	O = malloc ( o_size + 1 )	53:1:1102:1125	6079077	9	True				
ANR	6079262	AssignmentExpression	O = malloc ( o_size + 1 )		6079077	0		=			
ANR	6079263	Identifier	O		6079077	0					
ANR	6079264	CallExpression	malloc ( o_size + 1 )		6079077	1					
ANR	6079265	Callee	malloc		6079077	0					
ANR	6079266	Identifier	malloc		6079077	0					
ANR	6079267	ArgumentList	o_size + 1		6079077	1					
ANR	6079268	Argument	o_size + 1		6079077	0					
ANR	6079269	AdditiveExpression	o_size + 1		6079077	0		+			
ANR	6079270	Identifier	o_size		6079077	0					
ANR	6079271	PrimaryExpression	1		6079077	1					
ANR	6079272	IfStatement	if ( ! O )		6079077	10					
ANR	6079273	Condition	! O	54:5:1132:1133	6079077	0	True				
ANR	6079274	UnaryOperationExpression	! O		6079077	0					
ANR	6079275	UnaryOperator	!		6079077	0					
ANR	6079276	Identifier	O		6079077	1					
ANR	6079277	CompoundStatement		40:9:834:834	6079077	1					
ANR	6079278	ReturnStatement	return NULL ;	55:2:1140:1151	6079077	0	True				
ANR	6079279	Identifier	NULL		6079077	0					
ANR	6079280	ForStatement	for ( o = O ; * s ; s ++ )		6079077	11					
ANR	6079281	ForInit	o = O ;	58:6:1163:1168	6079077	0	True				
ANR	6079282	AssignmentExpression	o = O		6079077	0		=			
ANR	6079283	Identifier	o		6079077	0					
ANR	6079284	Identifier	O		6079077	1					
ANR	6079285	Condition	* s	58:13:1170:1171	6079077	1	True				
ANR	6079286	UnaryOperationExpression	* s		6079077	0					
ANR	6079287	UnaryOperator	*		6079077	0					
ANR	6079288	Identifier	s		6079077	1					
ANR	6079289	PostIncDecOperationExpression	s ++	58:17:1174:1176	6079077	2	True				
ANR	6079290	Identifier	s		6079077	0					
ANR	6079291	IncDec	++		6079077	1					
ANR	6079292	CompoundStatement		44:22:877:877	6079077	3					
ANR	6079293	IfStatement	if ( instr )		6079077	0					
ANR	6079294	Condition	instr	59:6:1187:1191	6079077	0	True				
ANR	6079295	Identifier	instr		6079077	0					
ANR	6079296	CompoundStatement		45:13:892:892	6079077	1					
ANR	6079297	IfStatement	"if ( s [ 0 ] == '""' )"		6079077	0					
ANR	6079298	Condition	"s [ 0 ] == '""'"	60:7:1203:1213	6079077	0	True				
ANR	6079299	EqualityExpression	"s [ 0 ] == '""'"		6079077	0		==			
ANR	6079300	ArrayIndexing	s [ 0 ]		6079077	0					
ANR	6079301	Identifier	s		6079077	0					
ANR	6079302	PrimaryExpression	0		6079077	1					
ANR	6079303	PrimaryExpression	"'""'"		6079077	1					
ANR	6079304	CompoundStatement		46:20:914:914	6079077	1					
ANR	6079305	ExpressionStatement	instr = 0	61:4:1222:1231	6079077	0	True				
ANR	6079306	AssignmentExpression	instr = 0		6079077	0		=			
ANR	6079307	Identifier	instr		6079077	0					
ANR	6079308	PrimaryExpression	0		6079077	1					
ANR	6079309	ElseStatement	else		6079077	0					
ANR	6079310	IfStatement	"if ( s [ 0 ] == '\\\\' && s [ 1 ] == '""' )"		6079077	0					
ANR	6079311	Condition	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"	62:14:1247:1273	6079077	0	True				
ANR	6079312	AndExpression	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"		6079077	0		&&			
ANR	6079313	EqualityExpression	s [ 0 ] == '\\\\'		6079077	0		==			
ANR	6079314	ArrayIndexing	s [ 0 ]		6079077	0					
ANR	6079315	Identifier	s		6079077	0					
ANR	6079316	PrimaryExpression	0		6079077	1					
ANR	6079317	PrimaryExpression	'\\\\'		6079077	1					
ANR	6079318	EqualityExpression	"s [ 1 ] == '""'"		6079077	1		==			
ANR	6079319	ArrayIndexing	s [ 1 ]		6079077	0					
ANR	6079320	Identifier	s		6079077	0					
ANR	6079321	PrimaryExpression	1		6079077	1					
ANR	6079322	PrimaryExpression	"'""'"		6079077	1					
ANR	6079323	CompoundStatement		48:43:974:974	6079077	1					
ANR	6079324	ExpressionStatement	* o ++ = * s	63:4:1282:1291	6079077	0	True				
ANR	6079325	AssignmentExpression	* o ++ = * s		6079077	0		=			
ANR	6079326	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079327	UnaryOperator	*		6079077	0					
ANR	6079328	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079329	Identifier	o		6079077	0					
ANR	6079330	IncDec	++		6079077	1					
ANR	6079331	UnaryOperationExpression	* s		6079077	1					
ANR	6079332	UnaryOperator	*		6079077	0					
ANR	6079333	Identifier	s		6079077	1					
ANR	6079334	ExpressionStatement	* o ++ = * s	65:3:1301:1310	6079077	1	True				
ANR	6079335	AssignmentExpression	* o ++ = * s		6079077	0		=			
ANR	6079336	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079337	UnaryOperator	*		6079077	0					
ANR	6079338	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079339	Identifier	o		6079077	0					
ANR	6079340	IncDec	++		6079077	1					
ANR	6079341	UnaryOperationExpression	* s		6079077	1					
ANR	6079342	UnaryOperator	*		6079077	0					
ANR	6079343	Identifier	s		6079077	1					
ANR	6079344	ContinueStatement	continue ;	66:3:1315:1323	6079077	2	True				
ANR	6079345	ElseStatement	else		6079077	0					
ANR	6079346	CompoundStatement		53:9:1032:1032	6079077	0					
ANR	6079347	IfStatement	"if ( s [ 0 ] == '""' )"		6079077	0					
ANR	6079348	Condition	"s [ 0 ] == '""'"	68:7:1343:1353	6079077	0	True				
ANR	6079349	EqualityExpression	"s [ 0 ] == '""'"		6079077	0		==			
ANR	6079350	ArrayIndexing	s [ 0 ]		6079077	0					
ANR	6079351	Identifier	s		6079077	0					
ANR	6079352	PrimaryExpression	0		6079077	1					
ANR	6079353	PrimaryExpression	"'""'"		6079077	1					
ANR	6079354	CompoundStatement		54:20:1054:1054	6079077	1					
ANR	6079355	ExpressionStatement	instr = 1	69:4:1362:1371	6079077	0	True				
ANR	6079356	AssignmentExpression	instr = 1		6079077	0		=			
ANR	6079357	Identifier	instr		6079077	0					
ANR	6079358	PrimaryExpression	1		6079077	1					
ANR	6079359	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' )		6079077	1					
ANR	6079360	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '	72:6:1388:1438	6079077	0	True				
ANR	6079361	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '		6079077	0		||			
ANR	6079362	EqualityExpression	* s == '\\n'		6079077	0		==			
ANR	6079363	UnaryOperationExpression	* s		6079077	0					
ANR	6079364	UnaryOperator	*		6079077	0					
ANR	6079365	Identifier	s		6079077	1					
ANR	6079366	PrimaryExpression	'\\n'		6079077	1					
ANR	6079367	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' '		6079077	1		||			
ANR	6079368	EqualityExpression	* s == '\\r'		6079077	0		==			
ANR	6079369	UnaryOperationExpression	* s		6079077	0					
ANR	6079370	UnaryOperator	*		6079077	0					
ANR	6079371	Identifier	s		6079077	1					
ANR	6079372	PrimaryExpression	'\\r'		6079077	1					
ANR	6079373	OrExpression	* s == '\\t' || * s == ' '		6079077	1		||			
ANR	6079374	EqualityExpression	* s == '\\t'		6079077	0		==			
ANR	6079375	UnaryOperationExpression	* s		6079077	0					
ANR	6079376	UnaryOperator	*		6079077	0					
ANR	6079377	Identifier	s		6079077	1					
ANR	6079378	PrimaryExpression	'\\t'		6079077	1					
ANR	6079379	EqualityExpression	* s == ' '		6079077	1		==			
ANR	6079380	UnaryOperationExpression	* s		6079077	0					
ANR	6079381	UnaryOperator	*		6079077	0					
ANR	6079382	Identifier	s		6079077	1					
ANR	6079383	PrimaryExpression	' '		6079077	1					
ANR	6079384	CompoundStatement		58:59:1139:1139	6079077	1					
ANR	6079385	ContinueStatement	continue ;	73:3:1446:1454	6079077	0	True				
ANR	6079386	SwitchStatement	switch ( * s )		6079077	2					
ANR	6079387	Condition	* s	75:10:1470:1471	6079077	0	True				
ANR	6079388	UnaryOperationExpression	* s		6079077	0					
ANR	6079389	UnaryOperator	*		6079077	0					
ANR	6079390	Identifier	s		6079077	1					
ANR	6079391	CompoundStatement		61:14:1172:1172	6079077	1					
ANR	6079392	Label	case ':' :	76:2:1478:1486	6079077	0	True				
ANR	6079393	ExpressionStatement	* o ++ = * s	77:3:1491:1500	6079077	1	True				
ANR	6079394	AssignmentExpression	* o ++ = * s		6079077	0		=			
ANR	6079395	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079396	UnaryOperator	*		6079077	0					
ANR	6079397	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079398	Identifier	o		6079077	0					
ANR	6079399	IncDec	++		6079077	1					
ANR	6079400	UnaryOperationExpression	* s		6079077	1					
ANR	6079401	UnaryOperator	*		6079077	0					
ANR	6079402	Identifier	s		6079077	1					
ANR	6079403	ExpressionStatement	* o ++ = ' '	78:3:1505:1515	6079077	2	True				
ANR	6079404	AssignmentExpression	* o ++ = ' '		6079077	0		=			
ANR	6079405	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079406	UnaryOperator	*		6079077	0					
ANR	6079407	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079408	Identifier	o		6079077	0					
ANR	6079409	IncDec	++		6079077	1					
ANR	6079410	PrimaryExpression	' '		6079077	1					
ANR	6079411	BreakStatement	break ;	79:3:1520:1525	6079077	3	True				
ANR	6079412	Label	"case ',' :"	80:2:1529:1537	6079077	4	True				
ANR	6079413	ExpressionStatement	* o ++ = * s	81:3:1542:1551	6079077	5	True				
ANR	6079414	AssignmentExpression	* o ++ = * s		6079077	0		=			
ANR	6079415	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079416	UnaryOperator	*		6079077	0					
ANR	6079417	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079418	Identifier	o		6079077	0					
ANR	6079419	IncDec	++		6079077	1					
ANR	6079420	UnaryOperationExpression	* s		6079077	1					
ANR	6079421	UnaryOperator	*		6079077	0					
ANR	6079422	Identifier	s		6079077	1					
ANR	6079423	ExpressionStatement	* o ++ = '\\n'	82:3:1556:1567	6079077	6	True				
ANR	6079424	AssignmentExpression	* o ++ = '\\n'		6079077	0		=			
ANR	6079425	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079426	UnaryOperator	*		6079077	0					
ANR	6079427	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079428	Identifier	o		6079077	0					
ANR	6079429	IncDec	++		6079077	1					
ANR	6079430	PrimaryExpression	'\\n'		6079077	1					
ANR	6079431	ExpressionStatement	"doIndent ( indent , & o , tab )"	83:3:1572:1598	6079077	7	True				
ANR	6079432	CallExpression	"doIndent ( indent , & o , tab )"		6079077	0					
ANR	6079433	Callee	doIndent		6079077	0					
ANR	6079434	Identifier	doIndent		6079077	0					
ANR	6079435	ArgumentList	indent		6079077	1					
ANR	6079436	Argument	indent		6079077	0					
ANR	6079437	Identifier	indent		6079077	0					
ANR	6079438	Argument	& o		6079077	1					
ANR	6079439	UnaryOperationExpression	& o		6079077	0					
ANR	6079440	UnaryOperator	&		6079077	0					
ANR	6079441	Identifier	o		6079077	1					
ANR	6079442	Argument	tab		6079077	2					
ANR	6079443	Identifier	tab		6079077	0					
ANR	6079444	BreakStatement	break ;	84:3:1603:1608	6079077	8	True				
ANR	6079445	Label	case '{' :	85:2:1612:1620	6079077	9	True				
ANR	6079446	Label	case '[' :	86:2:1624:1632	6079077	10	True				
ANR	6079447	ExpressionStatement	* o ++ = * s	87:3:1637:1646	6079077	11	True				
ANR	6079448	AssignmentExpression	* o ++ = * s		6079077	0		=			
ANR	6079449	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079450	UnaryOperator	*		6079077	0					
ANR	6079451	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079452	Identifier	o		6079077	0					
ANR	6079453	IncDec	++		6079077	1					
ANR	6079454	UnaryOperationExpression	* s		6079077	1					
ANR	6079455	UnaryOperator	*		6079077	0					
ANR	6079456	Identifier	s		6079077	1					
ANR	6079457	ExpressionStatement	* o ++ = ( indent != - 1 ) ? '\\n' : ' '	88:3:1651:1683	6079077	12	True				
ANR	6079458	AssignmentExpression	* o ++ = ( indent != - 1 ) ? '\\n' : ' '		6079077	0		=			
ANR	6079459	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079460	UnaryOperator	*		6079077	0					
ANR	6079461	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079462	Identifier	o		6079077	0					
ANR	6079463	IncDec	++		6079077	1					
ANR	6079464	ConditionalExpression	( indent != - 1 ) ? '\\n' : ' '		6079077	1					
ANR	6079465	Condition	indent != - 1		6079077	0					
ANR	6079466	EqualityExpression	indent != - 1		6079077	0		!=			
ANR	6079467	Identifier	indent		6079077	0					
ANR	6079468	UnaryOperationExpression	- 1		6079077	1					
ANR	6079469	UnaryOperator	-		6079077	0					
ANR	6079470	PrimaryExpression	1		6079077	1					
ANR	6079471	PrimaryExpression	'\\n'		6079077	1					
ANR	6079472	PrimaryExpression	' '		6079077	2					
ANR	6079473	ExpressionStatement	indent ++	89:3:1688:1696	6079077	13	True				
ANR	6079474	PostIncDecOperationExpression	indent ++		6079077	0					
ANR	6079475	Identifier	indent		6079077	0					
ANR	6079476	IncDec	++		6079077	1					
ANR	6079477	ExpressionStatement	"doIndent ( indent , & o , tab )"	90:3:1701:1727	6079077	14	True				
ANR	6079478	CallExpression	"doIndent ( indent , & o , tab )"		6079077	0					
ANR	6079479	Callee	doIndent		6079077	0					
ANR	6079480	Identifier	doIndent		6079077	0					
ANR	6079481	ArgumentList	indent		6079077	1					
ANR	6079482	Argument	indent		6079077	0					
ANR	6079483	Identifier	indent		6079077	0					
ANR	6079484	Argument	& o		6079077	1					
ANR	6079485	UnaryOperationExpression	& o		6079077	0					
ANR	6079486	UnaryOperator	&		6079077	0					
ANR	6079487	Identifier	o		6079077	1					
ANR	6079488	Argument	tab		6079077	2					
ANR	6079489	Identifier	tab		6079077	0					
ANR	6079490	BreakStatement	break ;	91:3:1732:1737	6079077	15	True				
ANR	6079491	Label	case '}' :	92:2:1741:1749	6079077	16	True				
ANR	6079492	Label	case ']' :	93:2:1753:1761	6079077	17	True				
ANR	6079493	ExpressionStatement	* o ++ = '\\n'	94:3:1766:1777	6079077	18	True				
ANR	6079494	AssignmentExpression	* o ++ = '\\n'		6079077	0		=			
ANR	6079495	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079496	UnaryOperator	*		6079077	0					
ANR	6079497	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079498	Identifier	o		6079077	0					
ANR	6079499	IncDec	++		6079077	1					
ANR	6079500	PrimaryExpression	'\\n'		6079077	1					
ANR	6079501	ExpressionStatement	indent --	95:3:1782:1790	6079077	19	True				
ANR	6079502	PostIncDecOperationExpression	indent --		6079077	0					
ANR	6079503	Identifier	indent		6079077	0					
ANR	6079504	IncDec	--		6079077	1					
ANR	6079505	ExpressionStatement	"doIndent ( indent , & o , tab )"	96:3:1795:1821	6079077	20	True				
ANR	6079506	CallExpression	"doIndent ( indent , & o , tab )"		6079077	0					
ANR	6079507	Callee	doIndent		6079077	0					
ANR	6079508	Identifier	doIndent		6079077	0					
ANR	6079509	ArgumentList	indent		6079077	1					
ANR	6079510	Argument	indent		6079077	0					
ANR	6079511	Identifier	indent		6079077	0					
ANR	6079512	Argument	& o		6079077	1					
ANR	6079513	UnaryOperationExpression	& o		6079077	0					
ANR	6079514	UnaryOperator	&		6079077	0					
ANR	6079515	Identifier	o		6079077	1					
ANR	6079516	Argument	tab		6079077	2					
ANR	6079517	Identifier	tab		6079077	0					
ANR	6079518	ExpressionStatement	* o ++ = * s	97:3:1826:1835	6079077	21	True				
ANR	6079519	AssignmentExpression	* o ++ = * s		6079077	0		=			
ANR	6079520	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079521	UnaryOperator	*		6079077	0					
ANR	6079522	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079523	Identifier	o		6079077	0					
ANR	6079524	IncDec	++		6079077	1					
ANR	6079525	UnaryOperationExpression	* s		6079077	1					
ANR	6079526	UnaryOperator	*		6079077	0					
ANR	6079527	Identifier	s		6079077	1					
ANR	6079528	BreakStatement	break ;	98:3:1840:1845	6079077	22	True				
ANR	6079529	Label	default :	99:2:1849:1856	6079077	23	True				
ANR	6079530	Identifier	default		6079077	0					
ANR	6079531	ExpressionStatement	* o ++ = * s	100:3:1861:1870	6079077	24	True				
ANR	6079532	AssignmentExpression	* o ++ = * s		6079077	0		=			
ANR	6079533	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079534	UnaryOperator	*		6079077	0					
ANR	6079535	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079536	Identifier	o		6079077	0					
ANR	6079537	IncDec	++		6079077	1					
ANR	6079538	UnaryOperationExpression	* s		6079077	1					
ANR	6079539	UnaryOperator	*		6079077	0					
ANR	6079540	Identifier	s		6079077	1					
ANR	6079541	ExpressionStatement	* o ++ = '\\n'	103:1:1880:1891	6079077	12	True				
ANR	6079542	AssignmentExpression	* o ++ = '\\n'		6079077	0		=			
ANR	6079543	UnaryOperationExpression	* o ++		6079077	0					
ANR	6079544	UnaryOperator	*		6079077	0					
ANR	6079545	PostIncDecOperationExpression	o ++		6079077	1					
ANR	6079546	Identifier	o		6079077	0					
ANR	6079547	IncDec	++		6079077	1					
ANR	6079548	PrimaryExpression	'\\n'		6079077	1					
ANR	6079549	ExpressionStatement	* o = 0	104:1:1894:1900	6079077	13	True				
ANR	6079550	AssignmentExpression	* o = 0		6079077	0		=			
ANR	6079551	UnaryOperationExpression	* o		6079077	0					
ANR	6079552	UnaryOperator	*		6079077	0					
ANR	6079553	Identifier	o		6079077	1					
ANR	6079554	PrimaryExpression	0		6079077	1					
ANR	6079555	ReturnStatement	return O ;	106:1:1904:1912	6079077	14	True				
ANR	6079556	Identifier	O		6079077	0					
ANR	6079557	ReturnType	SDB_API char *		6079077	1					
ANR	6079558	Identifier	sdb_json_indent		6079077	2					
ANR	6079559	ParameterList	"const char * s , const char * tab"		6079077	3					
ANR	6079560	Parameter	const char * s	15:30:269:281	6079077	0	True				
ANR	6079561	ParameterType	const char *		6079077	0					
ANR	6079562	Identifier	s		6079077	1					
ANR	6079563	Parameter	const char * tab	15:45:284:298	6079077	1	True				
ANR	6079564	ParameterType	const char *		6079077	0					
ANR	6079565	Identifier	tab		6079077	1					
ANR	6079566	CFGEntryNode	ENTRY		6079077		True				
ANR	6079567	CFGExitNode	EXIT		6079077		True				
ANR	6079568	Symbol	tab_len		6079077						
ANR	6079569	Symbol	malloc		6079077						
ANR	6079570	Symbol	NULL		6079077						
ANR	6079571	Symbol	indent		6079077						
ANR	6079572	Symbol	* o ++		6079077						
ANR	6079573	Symbol	o_size		6079077						
ANR	6079574	Symbol	O		6079077						
ANR	6079575	Symbol	o		6079077						
ANR	6079576	Symbol	strlen		6079077						
ANR	6079577	Symbol	s		6079077						
ANR	6079578	Symbol	tab		6079077						
ANR	6079579	Symbol	& o		6079077						
ANR	6079580	Symbol	instr		6079077						
ANR	6079581	Symbol	* idx		6079077						
ANR	6079582	Symbol	INT_MAX		6079077						
ANR	6079583	Symbol	* o		6079077						
ANR	6079584	Symbol	idx		6079077						
ANR	6079585	Symbol	* s		6079077						
ANR	6079586	Function	sdb_json_unindent	110:0:1941:2453							
ANR	6079587	FunctionDef	sdb_json_unindent (const char * s)		6079586	0					
ANR	6079588	CompoundStatement		110:47:1988:2453	6079586	0					
ANR	6079589	IdentifierDeclStatement	int instr = 0 ;	111:1:1991:2004	6079586	0	True				
ANR	6079590	IdentifierDecl	instr = 0		6079586	0					
ANR	6079591	IdentifierDeclType	int		6079586	0					
ANR	6079592	Identifier	instr		6079586	1					
ANR	6079593	AssignmentExpression	instr = 0		6079586	2		=			
ANR	6079594	Identifier	instr		6079586	0					
ANR	6079595	PrimaryExpression	0		6079586	1					
ANR	6079596	IdentifierDeclStatement	int len = strlen ( s ) ;	112:1:2007:2027	6079586	1	True				
ANR	6079597	IdentifierDecl	len = strlen ( s )		6079586	0					
ANR	6079598	IdentifierDeclType	int		6079586	0					
ANR	6079599	Identifier	len		6079586	1					
ANR	6079600	AssignmentExpression	len = strlen ( s )		6079586	2		=			
ANR	6079601	Identifier	len		6079586	0					
ANR	6079602	CallExpression	strlen ( s )		6079586	1					
ANR	6079603	Callee	strlen		6079586	0					
ANR	6079604	Identifier	strlen		6079586	0					
ANR	6079605	ArgumentList	s		6079586	1					
ANR	6079606	Argument	s		6079586	0					
ANR	6079607	Identifier	s		6079586	0					
ANR	6079608	IdentifierDeclStatement	"char * o , * O = malloc ( len + 1 ) ;"	113:1:2030:2060	6079586	2	True				
ANR	6079609	IdentifierDecl	* o		6079586	0					
ANR	6079610	IdentifierDeclType	char *		6079586	0					
ANR	6079611	Identifier	o		6079586	1					
ANR	6079612	IdentifierDecl	* O = malloc ( len + 1 )		6079586	1					
ANR	6079613	IdentifierDeclType	char *		6079586	0					
ANR	6079614	Identifier	O		6079586	1					
ANR	6079615	AssignmentExpression	* O = malloc ( len + 1 )		6079586	2		=			
ANR	6079616	Identifier	O		6079586	0					
ANR	6079617	CallExpression	malloc ( len + 1 )		6079586	1					
ANR	6079618	Callee	malloc		6079586	0					
ANR	6079619	Identifier	malloc		6079586	0					
ANR	6079620	ArgumentList	len + 1		6079586	1					
ANR	6079621	Argument	len + 1		6079586	0					
ANR	6079622	AdditiveExpression	len + 1		6079586	0		+			
ANR	6079623	Identifier	len		6079586	0					
ANR	6079624	PrimaryExpression	1		6079586	1					
ANR	6079625	IfStatement	if ( ! O )		6079586	3					
ANR	6079626	Condition	! O	114:5:2067:2068	6079586	0	True				
ANR	6079627	UnaryOperationExpression	! O		6079586	0					
ANR	6079628	UnaryOperator	!		6079586	0					
ANR	6079629	Identifier	O		6079586	1					
ANR	6079630	CompoundStatement		5:9:82:82	6079586	1					
ANR	6079631	ReturnStatement	return NULL ;	115:2:2075:2086	6079586	0	True				
ANR	6079632	Identifier	NULL		6079586	0					
ANR	6079633	ExpressionStatement	"memset ( O , 0 , len )"	117:1:2092:2110	6079586	4	True				
ANR	6079634	CallExpression	"memset ( O , 0 , len )"		6079586	0					
ANR	6079635	Callee	memset		6079586	0					
ANR	6079636	Identifier	memset		6079586	0					
ANR	6079637	ArgumentList	O		6079586	1					
ANR	6079638	Argument	O		6079586	0					
ANR	6079639	Identifier	O		6079586	0					
ANR	6079640	Argument	0		6079586	1					
ANR	6079641	PrimaryExpression	0		6079586	0					
ANR	6079642	Argument	len		6079586	2					
ANR	6079643	Identifier	len		6079586	0					
ANR	6079644	ForStatement	for ( o = O ; * s ; s ++ )		6079586	5					
ANR	6079645	ForInit	o = O ;	118:6:2118:2123	6079586	0	True				
ANR	6079646	AssignmentExpression	o = O		6079586	0		=			
ANR	6079647	Identifier	o		6079586	0					
ANR	6079648	Identifier	O		6079586	1					
ANR	6079649	Condition	* s	118:13:2125:2126	6079586	1	True				
ANR	6079650	UnaryOperationExpression	* s		6079586	0					
ANR	6079651	UnaryOperator	*		6079586	0					
ANR	6079652	Identifier	s		6079586	1					
ANR	6079653	PostIncDecOperationExpression	s ++	118:17:2129:2131	6079586	2	True				
ANR	6079654	Identifier	s		6079586	0					
ANR	6079655	IncDec	++		6079586	1					
ANR	6079656	CompoundStatement		9:22:145:145	6079586	3					
ANR	6079657	IfStatement	if ( instr )		6079586	0					
ANR	6079658	Condition	instr	119:6:2142:2146	6079586	0	True				
ANR	6079659	Identifier	instr		6079586	0					
ANR	6079660	CompoundStatement		10:13:160:160	6079586	1					
ANR	6079661	IfStatement	"if ( s [ 0 ] != '""' )"		6079586	0					
ANR	6079662	Condition	"s [ 0 ] != '""'"	120:7:2158:2168	6079586	0	True				
ANR	6079663	EqualityExpression	"s [ 0 ] != '""'"		6079586	0		!=			
ANR	6079664	ArrayIndexing	s [ 0 ]		6079586	0					
ANR	6079665	Identifier	s		6079586	0					
ANR	6079666	PrimaryExpression	0		6079586	1					
ANR	6079667	PrimaryExpression	"'""'"		6079586	1					
ANR	6079668	CompoundStatement		11:20:182:182	6079586	1					
ANR	6079669	IfStatement	"if ( s [ 0 ] == '\\\\' && s [ 1 ] == '""' )"		6079586	0					
ANR	6079670	Condition	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"	121:8:2181:2207	6079586	0	True				
ANR	6079671	AndExpression	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"		6079586	0		&&			
ANR	6079672	EqualityExpression	s [ 0 ] == '\\\\'		6079586	0		==			
ANR	6079673	ArrayIndexing	s [ 0 ]		6079586	0					
ANR	6079674	Identifier	s		6079586	0					
ANR	6079675	PrimaryExpression	0		6079586	1					
ANR	6079676	PrimaryExpression	'\\\\'		6079586	1					
ANR	6079677	EqualityExpression	"s [ 1 ] == '""'"		6079586	1		==			
ANR	6079678	ArrayIndexing	s [ 1 ]		6079586	0					
ANR	6079679	Identifier	s		6079586	0					
ANR	6079680	PrimaryExpression	1		6079586	1					
ANR	6079681	PrimaryExpression	"'""'"		6079586	1					
ANR	6079682	CompoundStatement		12:37:221:221	6079586	1					
ANR	6079683	ExpressionStatement	* o ++ = * s	122:5:2217:2226	6079586	0	True				
ANR	6079684	AssignmentExpression	* o ++ = * s		6079586	0		=			
ANR	6079685	UnaryOperationExpression	* o ++		6079586	0					
ANR	6079686	UnaryOperator	*		6079586	0					
ANR	6079687	PostIncDecOperationExpression	o ++		6079586	1					
ANR	6079688	Identifier	o		6079586	0					
ANR	6079689	IncDec	++		6079586	1					
ANR	6079690	UnaryOperationExpression	* s		6079586	1					
ANR	6079691	UnaryOperator	*		6079586	0					
ANR	6079692	Identifier	s		6079586	1					
ANR	6079693	ElseStatement	else		6079586	0					
ANR	6079694	CompoundStatement		15:10:255:255	6079586	0					
ANR	6079695	ExpressionStatement	instr = 0	125:4:2250:2259	6079586	0	True				
ANR	6079696	AssignmentExpression	instr = 0		6079586	0		=			
ANR	6079697	Identifier	instr		6079586	0					
ANR	6079698	PrimaryExpression	0		6079586	1					
ANR	6079699	ExpressionStatement	* o ++ = * s	127:3:2269:2278	6079586	1	True				
ANR	6079700	AssignmentExpression	* o ++ = * s		6079586	0		=			
ANR	6079701	UnaryOperationExpression	* o ++		6079586	0					
ANR	6079702	UnaryOperator	*		6079586	0					
ANR	6079703	PostIncDecOperationExpression	o ++		6079586	1					
ANR	6079704	Identifier	o		6079586	0					
ANR	6079705	IncDec	++		6079586	1					
ANR	6079706	UnaryOperationExpression	* s		6079586	1					
ANR	6079707	UnaryOperator	*		6079586	0					
ANR	6079708	Identifier	s		6079586	1					
ANR	6079709	ContinueStatement	continue ;	128:3:2283:2291	6079586	2	True				
ANR	6079710	ElseStatement	else		6079586	0					
ANR	6079711	IfStatement	"if ( s [ 0 ] == '""' )"		6079586	0					
ANR	6079712	Condition	"s [ 0 ] == '""'"	129:13:2306:2316	6079586	0	True				
ANR	6079713	EqualityExpression	"s [ 0 ] == '""'"		6079586	0		==			
ANR	6079714	ArrayIndexing	s [ 0 ]		6079586	0					
ANR	6079715	Identifier	s		6079586	0					
ANR	6079716	PrimaryExpression	0		6079586	1					
ANR	6079717	PrimaryExpression	"'""'"		6079586	1					
ANR	6079718	CompoundStatement		20:26:330:330	6079586	1					
ANR	6079719	ExpressionStatement	instr = 1	130:3:2324:2333	6079586	0	True				
ANR	6079720	AssignmentExpression	instr = 1		6079586	0		=			
ANR	6079721	Identifier	instr		6079586	0					
ANR	6079722	PrimaryExpression	1		6079586	1					
ANR	6079723	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' )		6079586	1					
ANR	6079724	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '	132:6:2345:2395	6079586	0	True				
ANR	6079725	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '		6079586	0		||			
ANR	6079726	EqualityExpression	* s == '\\n'		6079586	0		==			
ANR	6079727	UnaryOperationExpression	* s		6079586	0					
ANR	6079728	UnaryOperator	*		6079586	0					
ANR	6079729	Identifier	s		6079586	1					
ANR	6079730	PrimaryExpression	'\\n'		6079586	1					
ANR	6079731	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' '		6079586	1		||			
ANR	6079732	EqualityExpression	* s == '\\r'		6079586	0		==			
ANR	6079733	UnaryOperationExpression	* s		6079586	0					
ANR	6079734	UnaryOperator	*		6079586	0					
ANR	6079735	Identifier	s		6079586	1					
ANR	6079736	PrimaryExpression	'\\r'		6079586	1					
ANR	6079737	OrExpression	* s == '\\t' || * s == ' '		6079586	1		||			
ANR	6079738	EqualityExpression	* s == '\\t'		6079586	0		==			
ANR	6079739	UnaryOperationExpression	* s		6079586	0					
ANR	6079740	UnaryOperator	*		6079586	0					
ANR	6079741	Identifier	s		6079586	1					
ANR	6079742	PrimaryExpression	'\\t'		6079586	1					
ANR	6079743	EqualityExpression	* s == ' '		6079586	1		==			
ANR	6079744	UnaryOperationExpression	* s		6079586	0					
ANR	6079745	UnaryOperator	*		6079586	0					
ANR	6079746	Identifier	s		6079586	1					
ANR	6079747	PrimaryExpression	' '		6079586	1					
ANR	6079748	CompoundStatement		23:59:409:409	6079586	1					
ANR	6079749	ContinueStatement	continue ;	133:3:2403:2411	6079586	0	True				
ANR	6079750	ExpressionStatement	* o ++ = * s	135:2:2419:2428	6079586	2	True				
ANR	6079751	AssignmentExpression	* o ++ = * s		6079586	0		=			
ANR	6079752	UnaryOperationExpression	* o ++		6079586	0					
ANR	6079753	UnaryOperator	*		6079586	0					
ANR	6079754	PostIncDecOperationExpression	o ++		6079586	1					
ANR	6079755	Identifier	o		6079586	0					
ANR	6079756	IncDec	++		6079586	1					
ANR	6079757	UnaryOperationExpression	* s		6079586	1					
ANR	6079758	UnaryOperator	*		6079586	0					
ANR	6079759	Identifier	s		6079586	1					
ANR	6079760	ExpressionStatement	* o = 0	137:1:2434:2440	6079586	6	True				
ANR	6079761	AssignmentExpression	* o = 0		6079586	0		=			
ANR	6079762	UnaryOperationExpression	* o		6079586	0					
ANR	6079763	UnaryOperator	*		6079586	0					
ANR	6079764	Identifier	o		6079586	1					
ANR	6079765	PrimaryExpression	0		6079586	1					
ANR	6079766	ReturnStatement	return O ;	138:1:2443:2451	6079586	7	True				
ANR	6079767	Identifier	O		6079586	0					
ANR	6079768	ReturnType	SDB_API char *		6079586	1					
ANR	6079769	Identifier	sdb_json_unindent		6079586	2					
ANR	6079770	ParameterList	const char * s		6079586	3					
ANR	6079771	Parameter	const char * s	110:32:1973:1985	6079586	0	True				
ANR	6079772	ParameterType	const char *		6079586	0					
ANR	6079773	Identifier	s		6079586	1					
ANR	6079774	CFGEntryNode	ENTRY		6079586		True				
ANR	6079775	CFGExitNode	EXIT		6079586		True				
ANR	6079776	Symbol	strlen		6079586						
ANR	6079777	Symbol	malloc		6079586						
ANR	6079778	Symbol	s		6079586						
ANR	6079779	Symbol	NULL		6079586						
ANR	6079780	Symbol	len		6079586						
ANR	6079781	Symbol	* o ++		6079586						
ANR	6079782	Symbol	instr		6079586						
ANR	6079783	Symbol	* o		6079586						
ANR	6079784	Symbol	* s		6079586						
ANR	6079785	Symbol	o		6079586						
ANR	6079786	Symbol	O		6079586						
