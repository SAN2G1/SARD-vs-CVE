command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6162515	File	data/converged/CVE-2019-16718~_radare2/shlr_zip_zip_zip_dirent.c								
ANR	6162516	DeclStmt									
ANR	6162517	Decl							time_t	"time_t ( zip_uint16_t , zip_uint16_t )"	_zip_d2u_time
ANR	6162518	DeclStmt									
ANR	6162519	Decl							struct zip_string	"struct zip_string * ( const unsigned char * * , FILE * , zip_uint16_t , int , struct zip_error * )"	_zip_read_string
ANR	6162520	DeclStmt									
ANR	6162521	Decl							struct zip_string	"struct zip_string * ( const struct zip_dirent * , zip_uint16_t , struct zip_string * )"	_zip_dirent_process_ef_utf_8
ANR	6162522	DeclStmt									
ANR	6162523	Decl							struct zip_extra_field	"struct zip_extra_field * ( zip_uint16_t , struct zip_string * , struct zip_error * )"	_zip_ef_utf8
ANR	6162524	Function	_zip_cdir_free	53:0:2216:2441							
ANR	6162525	FunctionDef	_zip_cdir_free (struct zip_cdir * cd)		6162524	0					
ANR	6162526	CompoundStatement		55:0:2257:2441	6162524	0					
ANR	6162527	IdentifierDeclStatement	zip_uint64_t i ;	56:4:2263:2277	6162524	0	True				
ANR	6162528	IdentifierDecl	i		6162524	0					
ANR	6162529	IdentifierDeclType	zip_uint64_t		6162524	0					
ANR	6162530	Identifier	i		6162524	1					
ANR	6162531	IfStatement	if ( ! cd )		6162524	1					
ANR	6162532	Condition	! cd	58:8:2288:2290	6162524	0	True				
ANR	6162533	UnaryOperationExpression	! cd		6162524	0					
ANR	6162534	UnaryOperator	!		6162524	0					
ANR	6162535	Identifier	cd		6162524	1					
ANR	6162536	ReturnStatement	return ;	59:1:2294:2300	6162524	1	True				
ANR	6162537	ForStatement	for ( i = 0 ; i < cd -> nentry ; i ++ )		6162524	2					
ANR	6162538	ForInit	i = 0 ;	61:9:2312:2315	6162524	0	True				
ANR	6162539	AssignmentExpression	i = 0		6162524	0		=			
ANR	6162540	Identifier	i		6162524	0					
ANR	6162541	PrimaryExpression	0		6162524	1					
ANR	6162542	Condition	i < cd -> nentry	61:14:2317:2328	6162524	1	True				
ANR	6162543	RelationalExpression	i < cd -> nentry		6162524	0		<			
ANR	6162544	Identifier	i		6162524	0					
ANR	6162545	PtrMemberAccess	cd -> nentry		6162524	1					
ANR	6162546	Identifier	cd		6162524	0					
ANR	6162547	Identifier	nentry		6162524	1					
ANR	6162548	PostIncDecOperationExpression	i ++	61:28:2331:2333	6162524	2	True				
ANR	6162549	Identifier	i		6162524	0					
ANR	6162550	IncDec	++		6162524	1					
ANR	6162551	ExpressionStatement	_zip_entry_finalize ( cd -> entry + i )	62:1:2337:2369	6162524	3	True				
ANR	6162552	CallExpression	_zip_entry_finalize ( cd -> entry + i )		6162524	0					
ANR	6162553	Callee	_zip_entry_finalize		6162524	0					
ANR	6162554	Identifier	_zip_entry_finalize		6162524	0					
ANR	6162555	ArgumentList	cd -> entry + i		6162524	1					
ANR	6162556	Argument	cd -> entry + i		6162524	0					
ANR	6162557	AdditiveExpression	cd -> entry + i		6162524	0		+			
ANR	6162558	PtrMemberAccess	cd -> entry		6162524	0					
ANR	6162559	Identifier	cd		6162524	0					
ANR	6162560	Identifier	entry		6162524	1					
ANR	6162561	Identifier	i		6162524	1					
ANR	6162562	ExpressionStatement	free ( cd -> entry )	63:4:2375:2390	6162524	3	True				
ANR	6162563	CallExpression	free ( cd -> entry )		6162524	0					
ANR	6162564	Callee	free		6162524	0					
ANR	6162565	Identifier	free		6162524	0					
ANR	6162566	ArgumentList	cd -> entry		6162524	1					
ANR	6162567	Argument	cd -> entry		6162524	0					
ANR	6162568	PtrMemberAccess	cd -> entry		6162524	0					
ANR	6162569	Identifier	cd		6162524	0					
ANR	6162570	Identifier	entry		6162524	1					
ANR	6162571	ExpressionStatement	_zip_string_free ( cd -> comment )	64:4:2396:2425	6162524	4	True				
ANR	6162572	CallExpression	_zip_string_free ( cd -> comment )		6162524	0					
ANR	6162573	Callee	_zip_string_free		6162524	0					
ANR	6162574	Identifier	_zip_string_free		6162524	0					
ANR	6162575	ArgumentList	cd -> comment		6162524	1					
ANR	6162576	Argument	cd -> comment		6162524	0					
ANR	6162577	PtrMemberAccess	cd -> comment		6162524	0					
ANR	6162578	Identifier	cd		6162524	0					
ANR	6162579	Identifier	comment		6162524	1					
ANR	6162580	ExpressionStatement	free ( cd )	65:4:2431:2439	6162524	5	True				
ANR	6162581	CallExpression	free ( cd )		6162524	0					
ANR	6162582	Callee	free		6162524	0					
ANR	6162583	Identifier	free		6162524	0					
ANR	6162584	ArgumentList	cd		6162524	1					
ANR	6162585	Argument	cd		6162524	0					
ANR	6162586	Identifier	cd		6162524	0					
ANR	6162587	ReturnType	void		6162524	1					
ANR	6162588	Identifier	_zip_cdir_free		6162524	2					
ANR	6162589	ParameterList	struct zip_cdir * cd		6162524	3					
ANR	6162590	Parameter	struct zip_cdir * cd	54:15:2236:2254	6162524	0	True				
ANR	6162591	ParameterType	struct zip_cdir *		6162524	0					
ANR	6162592	Identifier	cd		6162524	1					
ANR	6162593	CFGEntryNode	ENTRY		6162524		True				
ANR	6162594	CFGExitNode	EXIT		6162524		True				
ANR	6162595	Symbol	cd		6162524						
ANR	6162596	Symbol	cd -> nentry		6162524						
ANR	6162597	Symbol	cd -> comment		6162524						
ANR	6162598	Symbol	* cd		6162524						
ANR	6162599	Symbol	cd -> entry		6162524						
ANR	6162600	Symbol	i		6162524						
ANR	6162601	Function	_zip_cdir_grow	70:0:2447:3039							
ANR	6162602	FunctionDef	"_zip_cdir_grow (struct zip_cdir * cd , zip_uint64_t nentry , struct zip_error * error)"		6162601	0					
ANR	6162603	CompoundStatement		72:0:2533:3039	6162601	0					
ANR	6162604	IdentifierDeclStatement	struct zip_entry * entry ;	73:4:2539:2562	6162601	0	True				
ANR	6162605	IdentifierDecl	* entry		6162601	0					
ANR	6162606	IdentifierDeclType	struct zip_entry *		6162601	0					
ANR	6162607	Identifier	entry		6162601	1					
ANR	6162608	IdentifierDeclStatement	zip_uint64_t i ;	74:4:2568:2582	6162601	1	True				
ANR	6162609	IdentifierDecl	i		6162601	0					
ANR	6162610	IdentifierDeclType	zip_uint64_t		6162601	0					
ANR	6162611	Identifier	i		6162601	1					
ANR	6162612	IfStatement	if ( nentry < cd -> nentry_alloc )		6162601	2					
ANR	6162613	Condition	nentry < cd -> nentry_alloc	76:8:2593:2617	6162601	0	True				
ANR	6162614	RelationalExpression	nentry < cd -> nentry_alloc		6162601	0		<			
ANR	6162615	Identifier	nentry		6162601	0					
ANR	6162616	PtrMemberAccess	cd -> nentry_alloc		6162601	1					
ANR	6162617	Identifier	cd		6162601	0					
ANR	6162618	Identifier	nentry_alloc		6162601	1					
ANR	6162619	CompoundStatement		5:35:86:86	6162601	1					
ANR	6162620	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INTERNAL , 0 )"	77:1:2623:2664	6162601	0	True				
ANR	6162621	CallExpression	"_zip_error_set ( error , ZIP_ER_INTERNAL , 0 )"		6162601	0					
ANR	6162622	Callee	_zip_error_set		6162601	0					
ANR	6162623	Identifier	_zip_error_set		6162601	0					
ANR	6162624	ArgumentList	error		6162601	1					
ANR	6162625	Argument	error		6162601	0					
ANR	6162626	Identifier	error		6162601	0					
ANR	6162627	Argument	ZIP_ER_INTERNAL		6162601	1					
ANR	6162628	Identifier	ZIP_ER_INTERNAL		6162601	0					
ANR	6162629	Argument	0		6162601	2					
ANR	6162630	PrimaryExpression	0		6162601	0					
ANR	6162631	ReturnStatement	return - 1 ;	78:1:2667:2676	6162601	1	True				
ANR	6162632	UnaryOperationExpression	- 1		6162601	0					
ANR	6162633	UnaryOperator	-		6162601	0					
ANR	6162634	PrimaryExpression	1		6162601	1					
ANR	6162635	IfStatement	if ( nentry == cd -> nentry_alloc )		6162601	3					
ANR	6162636	Condition	nentry == cd -> nentry_alloc	81:8:2693:2718	6162601	0	True				
ANR	6162637	EqualityExpression	nentry == cd -> nentry_alloc		6162601	0		==			
ANR	6162638	Identifier	nentry		6162601	0					
ANR	6162639	PtrMemberAccess	cd -> nentry_alloc		6162601	1					
ANR	6162640	Identifier	cd		6162601	0					
ANR	6162641	Identifier	nentry_alloc		6162601	1					
ANR	6162642	ReturnStatement	return 0 ;	82:1:2722:2730	6162601	1	True				
ANR	6162643	PrimaryExpression	0		6162601	0					
ANR	6162644	IfStatement	"if ( ( entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) ) ) == NULL )"		6162601	4					
ANR	6162645	Condition	"( entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) ) ) == NULL"	84:8:2741:2828	6162601	0	True				
ANR	6162646	EqualityExpression	"( entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) ) ) == NULL"		6162601	0		==			
ANR	6162647	AssignmentExpression	"entry = ( ( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry ) )"		6162601	0		=			
ANR	6162648	Identifier	entry		6162601	0					
ANR	6162649	CastExpression	"( struct zip_entry * ) realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry )"		6162601	1					
ANR	6162650	CastTarget	struct zip_entry *		6162601	0					
ANR	6162651	CallExpression	"realloc ( cd -> entry , sizeof ( * ( cd -> entry ) ) * nentry )"		6162601	1					
ANR	6162652	Callee	realloc		6162601	0					
ANR	6162653	Identifier	realloc		6162601	0					
ANR	6162654	ArgumentList	cd -> entry		6162601	1					
ANR	6162655	Argument	cd -> entry		6162601	0					
ANR	6162656	PtrMemberAccess	cd -> entry		6162601	0					
ANR	6162657	Identifier	cd		6162601	0					
ANR	6162658	Identifier	entry		6162601	1					
ANR	6162659	Argument	sizeof ( * ( cd -> entry ) ) * nentry		6162601	1					
ANR	6162660	MultiplicativeExpression	sizeof ( * ( cd -> entry ) ) * nentry		6162601	0		*			
ANR	6162661	SizeofExpression	sizeof ( * ( cd -> entry ) )		6162601	0					
ANR	6162662	Sizeof	sizeof		6162601	0					
ANR	6162663	UnaryOperationExpression	* ( cd -> entry )		6162601	1					
ANR	6162664	UnaryOperator	*		6162601	0					
ANR	6162665	PtrMemberAccess	cd -> entry		6162601	1					
ANR	6162666	Identifier	cd		6162601	0					
ANR	6162667	Identifier	entry		6162601	1					
ANR	6162668	Identifier	nentry		6162601	1					
ANR	6162669	Identifier	NULL		6162601	1					
ANR	6162670	CompoundStatement		14:61:297:297	6162601	1					
ANR	6162671	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	86:1:2834:2873	6162601	0	True				
ANR	6162672	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6162601	0					
ANR	6162673	Callee	_zip_error_set		6162601	0					
ANR	6162674	Identifier	_zip_error_set		6162601	0					
ANR	6162675	ArgumentList	error		6162601	1					
ANR	6162676	Argument	error		6162601	0					
ANR	6162677	Identifier	error		6162601	0					
ANR	6162678	Argument	ZIP_ER_MEMORY		6162601	1					
ANR	6162679	Identifier	ZIP_ER_MEMORY		6162601	0					
ANR	6162680	Argument	0		6162601	2					
ANR	6162681	PrimaryExpression	0		6162601	0					
ANR	6162682	ReturnStatement	return - 1 ;	87:1:2876:2885	6162601	1	True				
ANR	6162683	UnaryOperationExpression	- 1		6162601	0					
ANR	6162684	UnaryOperator	-		6162601	0					
ANR	6162685	PrimaryExpression	1		6162601	1					
ANR	6162686	ForStatement	for ( i = cd -> nentry_alloc ; i < nentry ; i ++ )		6162601	5					
ANR	6162687	ForInit	i = cd -> nentry_alloc ;	90:9:2907:2925	6162601	0	True				
ANR	6162688	AssignmentExpression	i = cd -> nentry_alloc		6162601	0		=			
ANR	6162689	Identifier	i		6162601	0					
ANR	6162690	PtrMemberAccess	cd -> nentry_alloc		6162601	1					
ANR	6162691	Identifier	cd		6162601	0					
ANR	6162692	Identifier	nentry_alloc		6162601	1					
ANR	6162693	Condition	i < nentry	90:29:2927:2934	6162601	1	True				
ANR	6162694	RelationalExpression	i < nentry		6162601	0		<			
ANR	6162695	Identifier	i		6162601	0					
ANR	6162696	Identifier	nentry		6162601	1					
ANR	6162697	PostIncDecOperationExpression	i ++	90:39:2937:2939	6162601	2	True				
ANR	6162698	Identifier	i		6162601	0					
ANR	6162699	IncDec	++		6162601	1					
ANR	6162700	ExpressionStatement	_zip_entry_init ( entry + i )	91:1:2943:2967	6162601	3	True				
ANR	6162701	CallExpression	_zip_entry_init ( entry + i )		6162601	0					
ANR	6162702	Callee	_zip_entry_init		6162601	0					
ANR	6162703	Identifier	_zip_entry_init		6162601	0					
ANR	6162704	ArgumentList	entry + i		6162601	1					
ANR	6162705	Argument	entry + i		6162601	0					
ANR	6162706	AdditiveExpression	entry + i		6162601	0		+			
ANR	6162707	Identifier	entry		6162601	0					
ANR	6162708	Identifier	i		6162601	1					
ANR	6162709	ExpressionStatement	cd -> nentry_alloc = nentry	93:4:2974:2999	6162601	6	True				
ANR	6162710	AssignmentExpression	cd -> nentry_alloc = nentry		6162601	0		=			
ANR	6162711	PtrMemberAccess	cd -> nentry_alloc		6162601	0					
ANR	6162712	Identifier	cd		6162601	0					
ANR	6162713	Identifier	nentry_alloc		6162601	1					
ANR	6162714	Identifier	nentry		6162601	1					
ANR	6162715	ExpressionStatement	cd -> entry = entry	94:4:3005:3022	6162601	7	True				
ANR	6162716	AssignmentExpression	cd -> entry = entry		6162601	0		=			
ANR	6162717	PtrMemberAccess	cd -> entry		6162601	0					
ANR	6162718	Identifier	cd		6162601	0					
ANR	6162719	Identifier	entry		6162601	1					
ANR	6162720	Identifier	entry		6162601	1					
ANR	6162721	ReturnStatement	return 0 ;	96:4:3029:3037	6162601	8	True				
ANR	6162722	PrimaryExpression	0		6162601	0					
ANR	6162723	ReturnType	int		6162601	1					
ANR	6162724	Identifier	_zip_cdir_grow		6162601	2					
ANR	6162725	ParameterList	"struct zip_cdir * cd , zip_uint64_t nentry , struct zip_error * error"		6162601	3					
ANR	6162726	Parameter	struct zip_cdir * cd	71:15:2466:2484	6162601	0	True				
ANR	6162727	ParameterType	struct zip_cdir *		6162601	0					
ANR	6162728	Identifier	cd		6162601	1					
ANR	6162729	Parameter	zip_uint64_t nentry	71:36:2487:2505	6162601	1	True				
ANR	6162730	ParameterType	zip_uint64_t		6162601	0					
ANR	6162731	Identifier	nentry		6162601	1					
ANR	6162732	Parameter	struct zip_error * error	71:57:2508:2530	6162601	2	True				
ANR	6162733	ParameterType	struct zip_error *		6162601	0					
ANR	6162734	Identifier	error		6162601	1					
ANR	6162735	CFGEntryNode	ENTRY		6162601		True				
ANR	6162736	CFGExitNode	EXIT		6162601		True				
ANR	6162737	Symbol	cd		6162601						
ANR	6162738	Symbol	cd -> nentry_alloc		6162601						
ANR	6162739	Symbol	NULL		6162601						
ANR	6162740	Symbol	* cd		6162601						
ANR	6162741	Symbol	ZIP_ER_INTERNAL		6162601						
ANR	6162742	Symbol	cd -> entry		6162601						
ANR	6162743	Symbol	i		6162601						
ANR	6162744	Symbol	realloc		6162601						
ANR	6162745	Symbol	error		6162601						
ANR	6162746	Symbol	* * cd		6162601						
ANR	6162747	Symbol	entry		6162601						
ANR	6162748	Symbol	* cd -> entry		6162601						
ANR	6162749	Symbol	* ( cd -> entry )		6162601						
ANR	6162750	Symbol	nentry		6162601						
ANR	6162751	Symbol	ZIP_ER_MEMORY		6162601						
ANR	6162752	Function	_zip_cdir_new	101:0:3045:3739							
ANR	6162753	FunctionDef	"_zip_cdir_new (zip_uint64_t nentry , struct zip_error * error)"		6162752	0					
ANR	6162754	CompoundStatement		103:0:3123:3739	6162752	0					
ANR	6162755	IdentifierDeclStatement	struct zip_cdir * cd ;	104:4:3129:3148	6162752	0	True				
ANR	6162756	IdentifierDecl	* cd		6162752	0					
ANR	6162757	IdentifierDeclType	struct zip_cdir *		6162752	0					
ANR	6162758	Identifier	cd		6162752	1					
ANR	6162759	IdentifierDeclStatement	zip_uint64_t i ;	105:4:3154:3168	6162752	1	True				
ANR	6162760	IdentifierDecl	i		6162752	0					
ANR	6162761	IdentifierDeclType	zip_uint64_t		6162752	0					
ANR	6162762	Identifier	i		6162752	1					
ANR	6162763	IfStatement	if ( ( cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) ) ) == NULL )		6162752	2					
ANR	6162764	Condition	( cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) ) ) == NULL	107:8:3183:3233	6162752	0	True				
ANR	6162765	EqualityExpression	( cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) ) ) == NULL		6162752	0		==			
ANR	6162766	AssignmentExpression	cd = ( struct zip_cdir * ) malloc ( sizeof ( * cd ) )		6162752	0		=			
ANR	6162767	Identifier	cd		6162752	0					
ANR	6162768	CastExpression	( struct zip_cdir * ) malloc ( sizeof ( * cd ) )		6162752	1					
ANR	6162769	CastTarget	struct zip_cdir *		6162752	0					
ANR	6162770	CallExpression	malloc ( sizeof ( * cd ) )		6162752	1					
ANR	6162771	Callee	malloc		6162752	0					
ANR	6162772	Identifier	malloc		6162752	0					
ANR	6162773	ArgumentList	sizeof ( * cd )		6162752	1					
ANR	6162774	Argument	sizeof ( * cd )		6162752	0					
ANR	6162775	SizeofExpression	sizeof ( * cd )		6162752	0					
ANR	6162776	Sizeof	sizeof		6162752	0					
ANR	6162777	UnaryOperationExpression	* cd		6162752	1					
ANR	6162778	UnaryOperator	*		6162752	0					
ANR	6162779	Identifier	cd		6162752	1					
ANR	6162780	Identifier	NULL		6162752	1					
ANR	6162781	CompoundStatement		5:61:112:112	6162752	1					
ANR	6162782	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	108:1:3239:3278	6162752	0	True				
ANR	6162783	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6162752	0					
ANR	6162784	Callee	_zip_error_set		6162752	0					
ANR	6162785	Identifier	_zip_error_set		6162752	0					
ANR	6162786	ArgumentList	error		6162752	1					
ANR	6162787	Argument	error		6162752	0					
ANR	6162788	Identifier	error		6162752	0					
ANR	6162789	Argument	ZIP_ER_MEMORY		6162752	1					
ANR	6162790	Identifier	ZIP_ER_MEMORY		6162752	0					
ANR	6162791	Argument	0		6162752	2					
ANR	6162792	PrimaryExpression	0		6162752	0					
ANR	6162793	ReturnStatement	return NULL ;	109:1:3281:3292	6162752	1	True				
ANR	6162794	Identifier	NULL		6162752	0					
ANR	6162795	IfStatement	if ( nentry == 0 )		6162752	3					
ANR	6162796	Condition	nentry == 0	112:8:3309:3319	6162752	0	True				
ANR	6162797	EqualityExpression	nentry == 0		6162752	0		==			
ANR	6162798	Identifier	nentry		6162752	0					
ANR	6162799	PrimaryExpression	0		6162752	1					
ANR	6162800	CompoundStatement		10:21:198:198	6162752	1					
ANR	6162801	ExpressionStatement	cd -> entry = NULL	113:1:3325:3341	6162752	0	True				
ANR	6162802	AssignmentExpression	cd -> entry = NULL		6162752	0		=			
ANR	6162803	PtrMemberAccess	cd -> entry		6162752	0					
ANR	6162804	Identifier	cd		6162752	0					
ANR	6162805	Identifier	entry		6162752	1					
ANR	6162806	Identifier	NULL		6162752	1					
ANR	6162807	ElseStatement	else		6162752	0					
ANR	6162808	IfStatement	if ( ( nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) ) ) || ( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL )		6162752	0					
ANR	6162809	Condition	( nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) ) ) || ( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL	114:15:3358:3484	6162752	0	True				
ANR	6162810	OrExpression	( nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) ) ) || ( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL		6162752	0		||			
ANR	6162811	RelationalExpression	nentry > SIZE_MAX / sizeof ( * ( cd -> entry ) )		6162752	0		>			
ANR	6162812	Identifier	nentry		6162752	0					
ANR	6162813	MultiplicativeExpression	SIZE_MAX / sizeof ( * ( cd -> entry ) )		6162752	1		/			
ANR	6162814	Identifier	SIZE_MAX		6162752	0					
ANR	6162815	SizeofExpression	sizeof ( * ( cd -> entry ) )		6162752	1					
ANR	6162816	Sizeof	sizeof		6162752	0					
ANR	6162817	UnaryOperationExpression	* ( cd -> entry )		6162752	1					
ANR	6162818	UnaryOperator	*		6162752	0					
ANR	6162819	PtrMemberAccess	cd -> entry		6162752	1					
ANR	6162820	Identifier	cd		6162752	0					
ANR	6162821	Identifier	entry		6162752	1					
ANR	6162822	EqualityExpression	( cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry ) ) == NULL		6162752	1		==			
ANR	6162823	AssignmentExpression	cd -> entry = ( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry )		6162752	0		=			
ANR	6162824	PtrMemberAccess	cd -> entry		6162752	0					
ANR	6162825	Identifier	cd		6162752	0					
ANR	6162826	Identifier	entry		6162752	1					
ANR	6162827	CastExpression	( struct zip_entry * ) malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry )		6162752	1					
ANR	6162828	CastTarget	struct zip_entry *		6162752	0					
ANR	6162829	CallExpression	malloc ( sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry )		6162752	1					
ANR	6162830	Callee	malloc		6162752	0					
ANR	6162831	Identifier	malloc		6162752	0					
ANR	6162832	ArgumentList	sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry		6162752	1					
ANR	6162833	Argument	sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry		6162752	0					
ANR	6162834	MultiplicativeExpression	sizeof ( * ( cd -> entry ) ) * ( size_t ) nentry		6162752	0		*			
ANR	6162835	SizeofExpression	sizeof ( * ( cd -> entry ) )		6162752	0					
ANR	6162836	Sizeof	sizeof		6162752	0					
ANR	6162837	UnaryOperationExpression	* ( cd -> entry )		6162752	1					
ANR	6162838	UnaryOperator	*		6162752	0					
ANR	6162839	PtrMemberAccess	cd -> entry		6162752	1					
ANR	6162840	Identifier	cd		6162752	0					
ANR	6162841	Identifier	entry		6162752	1					
ANR	6162842	CastExpression	( size_t ) nentry		6162752	1					
ANR	6162843	CastTarget	size_t		6162752	0					
ANR	6162844	Identifier	nentry		6162752	1					
ANR	6162845	Identifier	NULL		6162752	1					
ANR	6162846	CompoundStatement		12:144:363:363	6162752	1					
ANR	6162847	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	115:1:3490:3529	6162752	0	True				
ANR	6162848	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6162752	0					
ANR	6162849	Callee	_zip_error_set		6162752	0					
ANR	6162850	Identifier	_zip_error_set		6162752	0					
ANR	6162851	ArgumentList	error		6162752	1					
ANR	6162852	Argument	error		6162752	0					
ANR	6162853	Identifier	error		6162752	0					
ANR	6162854	Argument	ZIP_ER_MEMORY		6162752	1					
ANR	6162855	Identifier	ZIP_ER_MEMORY		6162752	0					
ANR	6162856	Argument	0		6162752	2					
ANR	6162857	PrimaryExpression	0		6162752	0					
ANR	6162858	ExpressionStatement	free ( cd )	116:1:3532:3540	6162752	1	True				
ANR	6162859	CallExpression	free ( cd )		6162752	0					
ANR	6162860	Callee	free		6162752	0					
ANR	6162861	Identifier	free		6162752	0					
ANR	6162862	ArgumentList	cd		6162752	1					
ANR	6162863	Argument	cd		6162752	0					
ANR	6162864	Identifier	cd		6162752	0					
ANR	6162865	ReturnStatement	return NULL ;	117:1:3543:3554	6162752	2	True				
ANR	6162866	Identifier	NULL		6162752	0					
ANR	6162867	ForStatement	for ( i = 0 ; i < nentry ; i ++ )		6162752	4					
ANR	6162868	ForInit	i = 0 ;	120:9:3572:3575	6162752	0	True				
ANR	6162869	AssignmentExpression	i = 0		6162752	0		=			
ANR	6162870	Identifier	i		6162752	0					
ANR	6162871	PrimaryExpression	0		6162752	1					
ANR	6162872	Condition	i < nentry	120:14:3577:3584	6162752	1	True				
ANR	6162873	RelationalExpression	i < nentry		6162752	0		<			
ANR	6162874	Identifier	i		6162752	0					
ANR	6162875	Identifier	nentry		6162752	1					
ANR	6162876	PostIncDecOperationExpression	i ++	120:24:3587:3589	6162752	2	True				
ANR	6162877	Identifier	i		6162752	0					
ANR	6162878	IncDec	++		6162752	1					
ANR	6162879	ExpressionStatement	_zip_entry_init ( cd -> entry + i )	121:1:3593:3621	6162752	3	True				
ANR	6162880	CallExpression	_zip_entry_init ( cd -> entry + i )		6162752	0					
ANR	6162881	Callee	_zip_entry_init		6162752	0					
ANR	6162882	Identifier	_zip_entry_init		6162752	0					
ANR	6162883	ArgumentList	cd -> entry + i		6162752	1					
ANR	6162884	Argument	cd -> entry + i		6162752	0					
ANR	6162885	AdditiveExpression	cd -> entry + i		6162752	0		+			
ANR	6162886	PtrMemberAccess	cd -> entry		6162752	0					
ANR	6162887	Identifier	cd		6162752	0					
ANR	6162888	Identifier	entry		6162752	1					
ANR	6162889	Identifier	i		6162752	1					
ANR	6162890	ExpressionStatement	cd -> nentry = cd -> nentry_alloc = nentry	123:4:3628:3666	6162752	5	True				
ANR	6162891	AssignmentExpression	cd -> nentry = cd -> nentry_alloc = nentry		6162752	0		=			
ANR	6162892	PtrMemberAccess	cd -> nentry		6162752	0					
ANR	6162893	Identifier	cd		6162752	0					
ANR	6162894	Identifier	nentry		6162752	1					
ANR	6162895	AssignmentExpression	cd -> nentry_alloc = nentry		6162752	1		=			
ANR	6162896	PtrMemberAccess	cd -> nentry_alloc		6162752	0					
ANR	6162897	Identifier	cd		6162752	0					
ANR	6162898	Identifier	nentry_alloc		6162752	1					
ANR	6162899	Identifier	nentry		6162752	1					
ANR	6162900	ExpressionStatement	cd -> size = cd -> offset = 0	124:4:3672:3697	6162752	6	True				
ANR	6162901	AssignmentExpression	cd -> size = cd -> offset = 0		6162752	0		=			
ANR	6162902	PtrMemberAccess	cd -> size		6162752	0					
ANR	6162903	Identifier	cd		6162752	0					
ANR	6162904	Identifier	size		6162752	1					
ANR	6162905	AssignmentExpression	cd -> offset = 0		6162752	1		=			
ANR	6162906	PtrMemberAccess	cd -> offset		6162752	0					
ANR	6162907	Identifier	cd		6162752	0					
ANR	6162908	Identifier	offset		6162752	1					
ANR	6162909	PrimaryExpression	0		6162752	1					
ANR	6162910	ExpressionStatement	cd -> comment = NULL	125:4:3703:3721	6162752	7	True				
ANR	6162911	AssignmentExpression	cd -> comment = NULL		6162752	0		=			
ANR	6162912	PtrMemberAccess	cd -> comment		6162752	0					
ANR	6162913	Identifier	cd		6162752	0					
ANR	6162914	Identifier	comment		6162752	1					
ANR	6162915	Identifier	NULL		6162752	1					
ANR	6162916	ReturnStatement	return cd ;	127:4:3728:3737	6162752	8	True				
ANR	6162917	Identifier	cd		6162752	0					
ANR	6162918	ReturnType	struct zip_cdir *		6162752	1					
ANR	6162919	Identifier	_zip_cdir_new		6162752	2					
ANR	6162920	ParameterList	"zip_uint64_t nentry , struct zip_error * error"		6162752	3					
ANR	6162921	Parameter	zip_uint64_t nentry	102:14:3077:3095	6162752	0	True				
ANR	6162922	ParameterType	zip_uint64_t		6162752	0					
ANR	6162923	Identifier	nentry		6162752	1					
ANR	6162924	Parameter	struct zip_error * error	102:35:3098:3120	6162752	1	True				
ANR	6162925	ParameterType	struct zip_error *		6162752	0					
ANR	6162926	Identifier	error		6162752	1					
ANR	6162927	CFGEntryNode	ENTRY		6162752		True				
ANR	6162928	CFGExitNode	EXIT		6162752		True				
ANR	6162929	Symbol	cd		6162752						
ANR	6162930	Symbol	malloc		6162752						
ANR	6162931	Symbol	cd -> nentry_alloc		6162752						
ANR	6162932	Symbol	cd -> comment		6162752						
ANR	6162933	Symbol	NULL		6162752						
ANR	6162934	Symbol	* cd		6162752						
ANR	6162935	Symbol	cd -> offset		6162752						
ANR	6162936	Symbol	cd -> entry		6162752						
ANR	6162937	Symbol	i		6162752						
ANR	6162938	Symbol	error		6162752						
ANR	6162939	Symbol	* * cd		6162752						
ANR	6162940	Symbol	cd -> nentry		6162752						
ANR	6162941	Symbol	SIZE_MAX		6162752						
ANR	6162942	Symbol	* cd -> entry		6162752						
ANR	6162943	Symbol	cd -> size		6162752						
ANR	6162944	Symbol	* ( cd -> entry )		6162752						
ANR	6162945	Symbol	nentry		6162752						
ANR	6162946	Symbol	ZIP_ER_MEMORY		6162752						
ANR	6162947	Function	_zip_cdir_write	132:0:3745:5800							
ANR	6162948	FunctionDef	"_zip_cdir_write (struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * fp)"		6162947	0					
ANR	6162949	CompoundStatement		134:0:3860:5800	6162947	0					
ANR	6162950	IdentifierDeclStatement	off_t off ;	135:4:3866:3875	6162947	0	True				
ANR	6162951	IdentifierDecl	off		6162947	0					
ANR	6162952	IdentifierDeclType	off_t		6162947	0					
ANR	6162953	Identifier	off		6162947	1					
ANR	6162954	IdentifierDeclStatement	"zip_uint64_t offset , size ;"	136:4:3881:3906	6162947	1	True				
ANR	6162955	IdentifierDecl	offset		6162947	0					
ANR	6162956	IdentifierDeclType	zip_uint64_t		6162947	0					
ANR	6162957	Identifier	offset		6162947	1					
ANR	6162958	IdentifierDecl	size		6162947	1					
ANR	6162959	IdentifierDeclType	zip_uint64_t		6162947	0					
ANR	6162960	Identifier	size		6162947	1					
ANR	6162961	IdentifierDeclStatement	struct zip_string * comment ;	137:4:3912:3938	6162947	2	True				
ANR	6162962	IdentifierDecl	* comment		6162947	0					
ANR	6162963	IdentifierDeclType	struct zip_string *		6162947	0					
ANR	6162964	Identifier	comment		6162947	1					
ANR	6162965	IdentifierDeclStatement	zip_uint64_t i ;	138:4:3944:3958	6162947	3	True				
ANR	6162966	IdentifierDecl	i		6162947	0					
ANR	6162967	IdentifierDeclType	zip_uint64_t		6162947	0					
ANR	6162968	Identifier	i		6162947	1					
ANR	6162969	IdentifierDeclStatement	int is_zip64 ;	139:4:3964:3976	6162947	4	True				
ANR	6162970	IdentifierDecl	is_zip64		6162947	0					
ANR	6162971	IdentifierDeclType	int		6162947	0					
ANR	6162972	Identifier	is_zip64		6162947	1					
ANR	6162973	IdentifierDeclStatement	int ret ;	140:4:3982:3989	6162947	5	True				
ANR	6162974	IdentifierDecl	ret		6162947	0					
ANR	6162975	IdentifierDeclType	int		6162947	0					
ANR	6162976	Identifier	ret		6162947	1					
ANR	6162977	IfStatement	if ( ( off = ftello ( fp ) ) < 0 )		6162947	6					
ANR	6162978	Condition	( off = ftello ( fp ) ) < 0	142:8:4000:4019	6162947	0	True				
ANR	6162979	RelationalExpression	( off = ftello ( fp ) ) < 0		6162947	0		<			
ANR	6162980	AssignmentExpression	off = ftello ( fp )		6162947	0		=			
ANR	6162981	Identifier	off		6162947	0					
ANR	6162982	CallExpression	ftello ( fp )		6162947	1					
ANR	6162983	Callee	ftello		6162947	0					
ANR	6162984	Identifier	ftello		6162947	0					
ANR	6162985	ArgumentList	fp		6162947	1					
ANR	6162986	Argument	fp		6162947	0					
ANR	6162987	Identifier	fp		6162947	0					
ANR	6162988	PrimaryExpression	0		6162947	1					
ANR	6162989	CompoundStatement		9:30:161:161	6162947	1					
ANR	6162990	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"	143:8:4032:4078	6162947	0	True				
ANR	6162991	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"		6162947	0					
ANR	6162992	Callee	_zip_error_set		6162947	0					
ANR	6162993	Identifier	_zip_error_set		6162947	0					
ANR	6162994	ArgumentList	& za -> error		6162947	1					
ANR	6162995	Argument	& za -> error		6162947	0					
ANR	6162996	UnaryOperationExpression	& za -> error		6162947	0					
ANR	6162997	UnaryOperator	&		6162947	0					
ANR	6162998	PtrMemberAccess	za -> error		6162947	1					
ANR	6162999	Identifier	za		6162947	0					
ANR	6163000	Identifier	error		6162947	1					
ANR	6163001	Argument	ZIP_ER_READ		6162947	1					
ANR	6163002	Identifier	ZIP_ER_READ		6162947	0					
ANR	6163003	Argument	errno		6162947	2					
ANR	6163004	Identifier	errno		6162947	0					
ANR	6163005	ReturnStatement	return - 1 ;	144:8:4088:4097	6162947	1	True				
ANR	6163006	UnaryOperationExpression	- 1		6162947	0					
ANR	6163007	UnaryOperator	-		6162947	0					
ANR	6163008	PrimaryExpression	1		6162947	1					
ANR	6163009	ExpressionStatement	offset = ( zip_uint64_t ) off	146:4:4109:4135	6162947	7	True				
ANR	6163010	AssignmentExpression	offset = ( zip_uint64_t ) off		6162947	0		=			
ANR	6163011	Identifier	offset		6162947	0					
ANR	6163012	CastExpression	( zip_uint64_t ) off		6162947	1					
ANR	6163013	CastTarget	zip_uint64_t		6162947	0					
ANR	6163014	Identifier	off		6162947	1					
ANR	6163015	ExpressionStatement	is_zip64 = 0	148:4:4142:4154	6162947	8	True				
ANR	6163016	AssignmentExpression	is_zip64 = 0		6162947	0		=			
ANR	6163017	Identifier	is_zip64		6162947	0					
ANR	6163018	PrimaryExpression	0		6162947	1					
ANR	6163019	ForStatement	for ( i = 0 ; i < survivors ; i ++ )		6162947	9					
ANR	6163020	ForInit	i = 0 ;	150:9:4166:4169	6162947	0	True				
ANR	6163021	AssignmentExpression	i = 0		6162947	0		=			
ANR	6163022	Identifier	i		6162947	0					
ANR	6163023	PrimaryExpression	0		6162947	1					
ANR	6163024	Condition	i < survivors	150:14:4171:4181	6162947	1	True				
ANR	6163025	RelationalExpression	i < survivors		6162947	0		<			
ANR	6163026	Identifier	i		6162947	0					
ANR	6163027	Identifier	survivors		6162947	1					
ANR	6163028	PostIncDecOperationExpression	i ++	150:27:4184:4186	6162947	2	True				
ANR	6163029	Identifier	i		6162947	0					
ANR	6163030	IncDec	++		6162947	1					
ANR	6163031	CompoundStatement		18:1:331:382	6162947	3					
ANR	6163032	IdentifierDeclStatement	struct zip_entry * entry = za -> entry + filelist [ i ] . idx ;	151:1:4192:4243	6162947	0	True				
ANR	6163033	IdentifierDecl	* entry = za -> entry + filelist [ i ] . idx		6162947	0					
ANR	6163034	IdentifierDeclType	struct zip_entry *		6162947	0					
ANR	6163035	Identifier	entry		6162947	1					
ANR	6163036	AssignmentExpression	* entry = za -> entry + filelist [ i ] . idx		6162947	2		=			
ANR	6163037	Identifier	entry		6162947	0					
ANR	6163038	AdditiveExpression	za -> entry + filelist [ i ] . idx		6162947	1		+			
ANR	6163039	PtrMemberAccess	za -> entry		6162947	0					
ANR	6163040	Identifier	za		6162947	0					
ANR	6163041	Identifier	entry		6162947	1					
ANR	6163042	MemberAccess	filelist [ i ] . idx		6162947	1					
ANR	6163043	ArrayIndexing	filelist [ i ]		6162947	0					
ANR	6163044	Identifier	filelist		6162947	0					
ANR	6163045	Identifier	i		6162947	1					
ANR	6163046	Identifier	idx		6162947	1					
ANR	6163047	IfStatement	"if ( ( ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error ) ) < 0 )"		6162947	1					
ANR	6163048	Condition	"( ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error ) ) < 0"	153:5:4251:4356	6162947	0	True				
ANR	6163049	RelationalExpression	"( ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error ) ) < 0"		6162947	0		<			
ANR	6163050	AssignmentExpression	"ret = _zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error )"		6162947	0		=			
ANR	6163051	Identifier	ret		6162947	0					
ANR	6163052	CallExpression	"_zip_dirent_write ( entry -> changes ? entry -> changes : entry -> orig , fp , ZIP_FL_CENTRAL , & za -> error )"		6162947	1					
ANR	6163053	Callee	_zip_dirent_write		6162947	0					
ANR	6163054	Identifier	_zip_dirent_write		6162947	0					
ANR	6163055	ArgumentList	entry -> changes ? entry -> changes : entry -> orig		6162947	1					
ANR	6163056	Argument	entry -> changes ? entry -> changes : entry -> orig		6162947	0					
ANR	6163057	ConditionalExpression	entry -> changes ? entry -> changes : entry -> orig		6162947	0					
ANR	6163058	Condition	entry -> changes		6162947	0					
ANR	6163059	PtrMemberAccess	entry -> changes		6162947	0					
ANR	6163060	Identifier	entry		6162947	0					
ANR	6163061	Identifier	changes		6162947	1					
ANR	6163062	PtrMemberAccess	entry -> changes		6162947	1					
ANR	6163063	Identifier	entry		6162947	0					
ANR	6163064	Identifier	changes		6162947	1					
ANR	6163065	PtrMemberAccess	entry -> orig		6162947	2					
ANR	6163066	Identifier	entry		6162947	0					
ANR	6163067	Identifier	orig		6162947	1					
ANR	6163068	Argument	fp		6162947	1					
ANR	6163069	Identifier	fp		6162947	0					
ANR	6163070	Argument	ZIP_FL_CENTRAL		6162947	2					
ANR	6163071	Identifier	ZIP_FL_CENTRAL		6162947	0					
ANR	6163072	Argument	& za -> error		6162947	3					
ANR	6163073	UnaryOperationExpression	& za -> error		6162947	0					
ANR	6163074	UnaryOperator	&		6162947	0					
ANR	6163075	PtrMemberAccess	za -> error		6162947	1					
ANR	6163076	Identifier	za		6162947	0					
ANR	6163077	Identifier	error		6162947	1					
ANR	6163078	PrimaryExpression	0		6162947	1					
ANR	6163079	ReturnStatement	return - 1 ;	154:5:4364:4373	6162947	1	True				
ANR	6163080	UnaryOperationExpression	- 1		6162947	0					
ANR	6163081	UnaryOperator	-		6162947	0					
ANR	6163082	PrimaryExpression	1		6162947	1					
ANR	6163083	IfStatement	if ( ret )		6162947	2					
ANR	6163084	Condition	ret	155:5:4380:4382	6162947	0	True				
ANR	6163085	Identifier	ret		6162947	0					
ANR	6163086	ExpressionStatement	is_zip64 = 1	156:5:4390:4402	6162947	1	True				
ANR	6163087	AssignmentExpression	is_zip64 = 1		6162947	0		=			
ANR	6163088	Identifier	is_zip64		6162947	0					
ANR	6163089	PrimaryExpression	1		6162947	1					
ANR	6163090	IfStatement	if ( ( off = ftello ( fp ) ) < 0 )		6162947	10					
ANR	6163091	Condition	( off = ftello ( fp ) ) < 0	159:8:4419:4438	6162947	0	True				
ANR	6163092	RelationalExpression	( off = ftello ( fp ) ) < 0		6162947	0		<			
ANR	6163093	AssignmentExpression	off = ftello ( fp )		6162947	0		=			
ANR	6163094	Identifier	off		6162947	0					
ANR	6163095	CallExpression	ftello ( fp )		6162947	1					
ANR	6163096	Callee	ftello		6162947	0					
ANR	6163097	Identifier	ftello		6162947	0					
ANR	6163098	ArgumentList	fp		6162947	1					
ANR	6163099	Argument	fp		6162947	0					
ANR	6163100	Identifier	fp		6162947	0					
ANR	6163101	PrimaryExpression	0		6162947	1					
ANR	6163102	CompoundStatement		26:30:580:580	6162947	1					
ANR	6163103	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"	160:8:4451:4497	6162947	0	True				
ANR	6163104	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_READ , errno )"		6162947	0					
ANR	6163105	Callee	_zip_error_set		6162947	0					
ANR	6163106	Identifier	_zip_error_set		6162947	0					
ANR	6163107	ArgumentList	& za -> error		6162947	1					
ANR	6163108	Argument	& za -> error		6162947	0					
ANR	6163109	UnaryOperationExpression	& za -> error		6162947	0					
ANR	6163110	UnaryOperator	&		6162947	0					
ANR	6163111	PtrMemberAccess	za -> error		6162947	1					
ANR	6163112	Identifier	za		6162947	0					
ANR	6163113	Identifier	error		6162947	1					
ANR	6163114	Argument	ZIP_ER_READ		6162947	1					
ANR	6163115	Identifier	ZIP_ER_READ		6162947	0					
ANR	6163116	Argument	errno		6162947	2					
ANR	6163117	Identifier	errno		6162947	0					
ANR	6163118	ReturnStatement	return - 1 ;	161:8:4507:4516	6162947	1	True				
ANR	6163119	UnaryOperationExpression	- 1		6162947	0					
ANR	6163120	UnaryOperator	-		6162947	0					
ANR	6163121	PrimaryExpression	1		6162947	1					
ANR	6163122	ExpressionStatement	size = ( zip_uint64_t ) off - offset	163:4:4528:4561	6162947	11	True				
ANR	6163123	AssignmentExpression	size = ( zip_uint64_t ) off - offset		6162947	0		=			
ANR	6163124	Identifier	size		6162947	0					
ANR	6163125	AdditiveExpression	( zip_uint64_t ) off - offset		6162947	1		-			
ANR	6163126	CastExpression	( zip_uint64_t ) off		6162947	0					
ANR	6163127	CastTarget	zip_uint64_t		6162947	0					
ANR	6163128	Identifier	off		6162947	1					
ANR	6163129	Identifier	offset		6162947	1					
ANR	6163130	IfStatement	if ( offset > ZIP_UINT32_MAX || survivors > ZIP_UINT16_MAX )		6162947	12					
ANR	6163131	Condition	offset > ZIP_UINT32_MAX || survivors > ZIP_UINT16_MAX	165:8:4572:4624	6162947	0	True				
ANR	6163132	OrExpression	offset > ZIP_UINT32_MAX || survivors > ZIP_UINT16_MAX		6162947	0		||			
ANR	6163133	RelationalExpression	offset > ZIP_UINT32_MAX		6162947	0		>			
ANR	6163134	Identifier	offset		6162947	0					
ANR	6163135	Identifier	ZIP_UINT32_MAX		6162947	1					
ANR	6163136	RelationalExpression	survivors > ZIP_UINT16_MAX		6162947	1		>			
ANR	6163137	Identifier	survivors		6162947	0					
ANR	6163138	Identifier	ZIP_UINT16_MAX		6162947	1					
ANR	6163139	ExpressionStatement	is_zip64 = 1	166:1:4628:4640	6162947	1	True				
ANR	6163140	AssignmentExpression	is_zip64 = 1		6162947	0		=			
ANR	6163141	Identifier	is_zip64		6162947	0					
ANR	6163142	PrimaryExpression	1		6162947	1					
ANR	6163143	IfStatement	if ( is_zip64 )		6162947	13					
ANR	6163144	Condition	is_zip64	168:8:4651:4658	6162947	0	True				
ANR	6163145	Identifier	is_zip64		6162947	0					
ANR	6163146	CompoundStatement		35:18:800:800	6162947	1					
ANR	6163147	ExpressionStatement	"fwrite ( EOCD64_MAGIC , 1 , 4 , fp )"	169:1:4664:4694	6162947	0	True				
ANR	6163148	CallExpression	"fwrite ( EOCD64_MAGIC , 1 , 4 , fp )"		6162947	0					
ANR	6163149	Callee	fwrite		6162947	0					
ANR	6163150	Identifier	fwrite		6162947	0					
ANR	6163151	ArgumentList	EOCD64_MAGIC		6162947	1					
ANR	6163152	Argument	EOCD64_MAGIC		6162947	0					
ANR	6163153	Identifier	EOCD64_MAGIC		6162947	0					
ANR	6163154	Argument	1		6162947	1					
ANR	6163155	PrimaryExpression	1		6162947	0					
ANR	6163156	Argument	4		6162947	2					
ANR	6163157	PrimaryExpression	4		6162947	0					
ANR	6163158	Argument	fp		6162947	3					
ANR	6163159	Identifier	fp		6162947	0					
ANR	6163160	ExpressionStatement	"_zip_write8 ( EOCD64LEN - 12 , fp )"	170:1:4697:4726	6162947	1	True				
ANR	6163161	CallExpression	"_zip_write8 ( EOCD64LEN - 12 , fp )"		6162947	0					
ANR	6163162	Callee	_zip_write8		6162947	0					
ANR	6163163	Identifier	_zip_write8		6162947	0					
ANR	6163164	ArgumentList	EOCD64LEN - 12		6162947	1					
ANR	6163165	Argument	EOCD64LEN - 12		6162947	0					
ANR	6163166	AdditiveExpression	EOCD64LEN - 12		6162947	0		-			
ANR	6163167	Identifier	EOCD64LEN		6162947	0					
ANR	6163168	PrimaryExpression	12		6162947	1					
ANR	6163169	Argument	fp		6162947	1					
ANR	6163170	Identifier	fp		6162947	0					
ANR	6163171	ExpressionStatement	"_zip_write2 ( 45 , fp )"	171:1:4729:4748	6162947	2	True				
ANR	6163172	CallExpression	"_zip_write2 ( 45 , fp )"		6162947	0					
ANR	6163173	Callee	_zip_write2		6162947	0					
ANR	6163174	Identifier	_zip_write2		6162947	0					
ANR	6163175	ArgumentList	45		6162947	1					
ANR	6163176	Argument	45		6162947	0					
ANR	6163177	PrimaryExpression	45		6162947	0					
ANR	6163178	Argument	fp		6162947	1					
ANR	6163179	Identifier	fp		6162947	0					
ANR	6163180	ExpressionStatement	"_zip_write2 ( 45 , fp )"	172:1:4751:4770	6162947	3	True				
ANR	6163181	CallExpression	"_zip_write2 ( 45 , fp )"		6162947	0					
ANR	6163182	Callee	_zip_write2		6162947	0					
ANR	6163183	Identifier	_zip_write2		6162947	0					
ANR	6163184	ArgumentList	45		6162947	1					
ANR	6163185	Argument	45		6162947	0					
ANR	6163186	PrimaryExpression	45		6162947	0					
ANR	6163187	Argument	fp		6162947	1					
ANR	6163188	Identifier	fp		6162947	0					
ANR	6163189	ExpressionStatement	"_zip_write4 ( 0 , fp )"	173:1:4773:4791	6162947	4	True				
ANR	6163190	CallExpression	"_zip_write4 ( 0 , fp )"		6162947	0					
ANR	6163191	Callee	_zip_write4		6162947	0					
ANR	6163192	Identifier	_zip_write4		6162947	0					
ANR	6163193	ArgumentList	0		6162947	1					
ANR	6163194	Argument	0		6162947	0					
ANR	6163195	PrimaryExpression	0		6162947	0					
ANR	6163196	Argument	fp		6162947	1					
ANR	6163197	Identifier	fp		6162947	0					
ANR	6163198	ExpressionStatement	"_zip_write4 ( 0 , fp )"	174:1:4794:4812	6162947	5	True				
ANR	6163199	CallExpression	"_zip_write4 ( 0 , fp )"		6162947	0					
ANR	6163200	Callee	_zip_write4		6162947	0					
ANR	6163201	Identifier	_zip_write4		6162947	0					
ANR	6163202	ArgumentList	0		6162947	1					
ANR	6163203	Argument	0		6162947	0					
ANR	6163204	PrimaryExpression	0		6162947	0					
ANR	6163205	Argument	fp		6162947	1					
ANR	6163206	Identifier	fp		6162947	0					
ANR	6163207	ExpressionStatement	"_zip_write8 ( survivors , fp )"	175:1:4815:4841	6162947	6	True				
ANR	6163208	CallExpression	"_zip_write8 ( survivors , fp )"		6162947	0					
ANR	6163209	Callee	_zip_write8		6162947	0					
ANR	6163210	Identifier	_zip_write8		6162947	0					
ANR	6163211	ArgumentList	survivors		6162947	1					
ANR	6163212	Argument	survivors		6162947	0					
ANR	6163213	Identifier	survivors		6162947	0					
ANR	6163214	Argument	fp		6162947	1					
ANR	6163215	Identifier	fp		6162947	0					
ANR	6163216	ExpressionStatement	"_zip_write8 ( survivors , fp )"	176:1:4844:4870	6162947	7	True				
ANR	6163217	CallExpression	"_zip_write8 ( survivors , fp )"		6162947	0					
ANR	6163218	Callee	_zip_write8		6162947	0					
ANR	6163219	Identifier	_zip_write8		6162947	0					
ANR	6163220	ArgumentList	survivors		6162947	1					
ANR	6163221	Argument	survivors		6162947	0					
ANR	6163222	Identifier	survivors		6162947	0					
ANR	6163223	Argument	fp		6162947	1					
ANR	6163224	Identifier	fp		6162947	0					
ANR	6163225	ExpressionStatement	"_zip_write8 ( size , fp )"	177:1:4873:4894	6162947	8	True				
ANR	6163226	CallExpression	"_zip_write8 ( size , fp )"		6162947	0					
ANR	6163227	Callee	_zip_write8		6162947	0					
ANR	6163228	Identifier	_zip_write8		6162947	0					
ANR	6163229	ArgumentList	size		6162947	1					
ANR	6163230	Argument	size		6162947	0					
ANR	6163231	Identifier	size		6162947	0					
ANR	6163232	Argument	fp		6162947	1					
ANR	6163233	Identifier	fp		6162947	0					
ANR	6163234	ExpressionStatement	"_zip_write8 ( offset , fp )"	178:1:4897:4920	6162947	9	True				
ANR	6163235	CallExpression	"_zip_write8 ( offset , fp )"		6162947	0					
ANR	6163236	Callee	_zip_write8		6162947	0					
ANR	6163237	Identifier	_zip_write8		6162947	0					
ANR	6163238	ArgumentList	offset		6162947	1					
ANR	6163239	Argument	offset		6162947	0					
ANR	6163240	Identifier	offset		6162947	0					
ANR	6163241	Argument	fp		6162947	1					
ANR	6163242	Identifier	fp		6162947	0					
ANR	6163243	ExpressionStatement	"fwrite ( EOCD64LOC_MAGIC , 1 , 4 , fp )"	180:1:4924:4957	6162947	10	True				
ANR	6163244	CallExpression	"fwrite ( EOCD64LOC_MAGIC , 1 , 4 , fp )"		6162947	0					
ANR	6163245	Callee	fwrite		6162947	0					
ANR	6163246	Identifier	fwrite		6162947	0					
ANR	6163247	ArgumentList	EOCD64LOC_MAGIC		6162947	1					
ANR	6163248	Argument	EOCD64LOC_MAGIC		6162947	0					
ANR	6163249	Identifier	EOCD64LOC_MAGIC		6162947	0					
ANR	6163250	Argument	1		6162947	1					
ANR	6163251	PrimaryExpression	1		6162947	0					
ANR	6163252	Argument	4		6162947	2					
ANR	6163253	PrimaryExpression	4		6162947	0					
ANR	6163254	Argument	fp		6162947	3					
ANR	6163255	Identifier	fp		6162947	0					
ANR	6163256	ExpressionStatement	"_zip_write4 ( 0 , fp )"	181:1:4960:4978	6162947	11	True				
ANR	6163257	CallExpression	"_zip_write4 ( 0 , fp )"		6162947	0					
ANR	6163258	Callee	_zip_write4		6162947	0					
ANR	6163259	Identifier	_zip_write4		6162947	0					
ANR	6163260	ArgumentList	0		6162947	1					
ANR	6163261	Argument	0		6162947	0					
ANR	6163262	PrimaryExpression	0		6162947	0					
ANR	6163263	Argument	fp		6162947	1					
ANR	6163264	Identifier	fp		6162947	0					
ANR	6163265	ExpressionStatement	"_zip_write8 ( offset + size , fp )"	182:1:4981:5009	6162947	12	True				
ANR	6163266	CallExpression	"_zip_write8 ( offset + size , fp )"		6162947	0					
ANR	6163267	Callee	_zip_write8		6162947	0					
ANR	6163268	Identifier	_zip_write8		6162947	0					
ANR	6163269	ArgumentList	offset + size		6162947	1					
ANR	6163270	Argument	offset + size		6162947	0					
ANR	6163271	AdditiveExpression	offset + size		6162947	0		+			
ANR	6163272	Identifier	offset		6162947	0					
ANR	6163273	Identifier	size		6162947	1					
ANR	6163274	Argument	fp		6162947	1					
ANR	6163275	Identifier	fp		6162947	0					
ANR	6163276	ExpressionStatement	"_zip_write4 ( 1 , fp )"	183:1:5012:5030	6162947	13	True				
ANR	6163277	CallExpression	"_zip_write4 ( 1 , fp )"		6162947	0					
ANR	6163278	Callee	_zip_write4		6162947	0					
ANR	6163279	Identifier	_zip_write4		6162947	0					
ANR	6163280	ArgumentList	1		6162947	1					
ANR	6163281	Argument	1		6162947	0					
ANR	6163282	PrimaryExpression	1		6162947	0					
ANR	6163283	Argument	fp		6162947	1					
ANR	6163284	Identifier	fp		6162947	0					
ANR	6163285	ExpressionStatement	"fwrite ( EOCD_MAGIC , 1 , 4 , fp )"	188:4:5074:5102	6162947	14	True				
ANR	6163286	CallExpression	"fwrite ( EOCD_MAGIC , 1 , 4 , fp )"		6162947	0					
ANR	6163287	Callee	fwrite		6162947	0					
ANR	6163288	Identifier	fwrite		6162947	0					
ANR	6163289	ArgumentList	EOCD_MAGIC		6162947	1					
ANR	6163290	Argument	EOCD_MAGIC		6162947	0					
ANR	6163291	Identifier	EOCD_MAGIC		6162947	0					
ANR	6163292	Argument	1		6162947	1					
ANR	6163293	PrimaryExpression	1		6162947	0					
ANR	6163294	Argument	4		6162947	2					
ANR	6163295	PrimaryExpression	4		6162947	0					
ANR	6163296	Argument	fp		6162947	3					
ANR	6163297	Identifier	fp		6162947	0					
ANR	6163298	ExpressionStatement	"_zip_write4 ( 0 , fp )"	189:4:5108:5126	6162947	15	True				
ANR	6163299	CallExpression	"_zip_write4 ( 0 , fp )"		6162947	0					
ANR	6163300	Callee	_zip_write4		6162947	0					
ANR	6163301	Identifier	_zip_write4		6162947	0					
ANR	6163302	ArgumentList	0		6162947	1					
ANR	6163303	Argument	0		6162947	0					
ANR	6163304	PrimaryExpression	0		6162947	0					
ANR	6163305	Argument	fp		6162947	1					
ANR	6163306	Identifier	fp		6162947	0					
ANR	6163307	ExpressionStatement	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"	190:4:5132:5219	6162947	16	True				
ANR	6163308	CallExpression	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"		6162947	0					
ANR	6163309	Callee	_zip_write2		6162947	0					
ANR	6163310	Identifier	_zip_write2		6162947	0					
ANR	6163311	ArgumentList	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6162947	1					
ANR	6163312	Argument	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6162947	0					
ANR	6163313	ConditionalExpression	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6162947	0					
ANR	6163314	Condition	survivors >= ZIP_UINT16_MAX		6162947	0					
ANR	6163315	RelationalExpression	survivors >= ZIP_UINT16_MAX		6162947	0		>=			
ANR	6163316	Identifier	survivors		6162947	0					
ANR	6163317	Identifier	ZIP_UINT16_MAX		6162947	1					
ANR	6163318	Identifier	ZIP_UINT16_MAX		6162947	1					
ANR	6163319	CastExpression	( zip_uint16_t ) survivors		6162947	2					
ANR	6163320	CastTarget	zip_uint16_t		6162947	0					
ANR	6163321	Identifier	survivors		6162947	1					
ANR	6163322	Argument	fp		6162947	1					
ANR	6163323	Identifier	fp		6162947	0					
ANR	6163324	ExpressionStatement	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"	191:4:5225:5312	6162947	17	True				
ANR	6163325	CallExpression	"_zip_write2 ( survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors , fp )"		6162947	0					
ANR	6163326	Callee	_zip_write2		6162947	0					
ANR	6163327	Identifier	_zip_write2		6162947	0					
ANR	6163328	ArgumentList	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6162947	1					
ANR	6163329	Argument	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6162947	0					
ANR	6163330	ConditionalExpression	survivors >= ZIP_UINT16_MAX ? ZIP_UINT16_MAX : ( zip_uint16_t ) survivors		6162947	0					
ANR	6163331	Condition	survivors >= ZIP_UINT16_MAX		6162947	0					
ANR	6163332	RelationalExpression	survivors >= ZIP_UINT16_MAX		6162947	0		>=			
ANR	6163333	Identifier	survivors		6162947	0					
ANR	6163334	Identifier	ZIP_UINT16_MAX		6162947	1					
ANR	6163335	Identifier	ZIP_UINT16_MAX		6162947	1					
ANR	6163336	CastExpression	( zip_uint16_t ) survivors		6162947	2					
ANR	6163337	CastTarget	zip_uint16_t		6162947	0					
ANR	6163338	Identifier	survivors		6162947	1					
ANR	6163339	Argument	fp		6162947	1					
ANR	6163340	Identifier	fp		6162947	0					
ANR	6163341	ExpressionStatement	"_zip_write4 ( size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size , fp )"	192:4:5318:5395	6162947	18	True				
ANR	6163342	CallExpression	"_zip_write4 ( size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size , fp )"		6162947	0					
ANR	6163343	Callee	_zip_write4		6162947	0					
ANR	6163344	Identifier	_zip_write4		6162947	0					
ANR	6163345	ArgumentList	size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size		6162947	1					
ANR	6163346	Argument	size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size		6162947	0					
ANR	6163347	ConditionalExpression	size >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) size		6162947	0					
ANR	6163348	Condition	size >= ZIP_UINT32_MAX		6162947	0					
ANR	6163349	RelationalExpression	size >= ZIP_UINT32_MAX		6162947	0		>=			
ANR	6163350	Identifier	size		6162947	0					
ANR	6163351	Identifier	ZIP_UINT32_MAX		6162947	1					
ANR	6163352	Identifier	ZIP_UINT32_MAX		6162947	1					
ANR	6163353	CastExpression	( zip_uint32_t ) size		6162947	2					
ANR	6163354	CastTarget	zip_uint32_t		6162947	0					
ANR	6163355	Identifier	size		6162947	1					
ANR	6163356	Argument	fp		6162947	1					
ANR	6163357	Identifier	fp		6162947	0					
ANR	6163358	ExpressionStatement	"_zip_write4 ( offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset , fp )"	193:4:5401:5482	6162947	19	True				
ANR	6163359	CallExpression	"_zip_write4 ( offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset , fp )"		6162947	0					
ANR	6163360	Callee	_zip_write4		6162947	0					
ANR	6163361	Identifier	_zip_write4		6162947	0					
ANR	6163362	ArgumentList	offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset		6162947	1					
ANR	6163363	Argument	offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset		6162947	0					
ANR	6163364	ConditionalExpression	offset >= ZIP_UINT32_MAX ? ZIP_UINT32_MAX : ( zip_uint32_t ) offset		6162947	0					
ANR	6163365	Condition	offset >= ZIP_UINT32_MAX		6162947	0					
ANR	6163366	RelationalExpression	offset >= ZIP_UINT32_MAX		6162947	0		>=			
ANR	6163367	Identifier	offset		6162947	0					
ANR	6163368	Identifier	ZIP_UINT32_MAX		6162947	1					
ANR	6163369	Identifier	ZIP_UINT32_MAX		6162947	1					
ANR	6163370	CastExpression	( zip_uint32_t ) offset		6162947	2					
ANR	6163371	CastTarget	zip_uint32_t		6162947	0					
ANR	6163372	Identifier	offset		6162947	1					
ANR	6163373	Argument	fp		6162947	1					
ANR	6163374	Identifier	fp		6162947	0					
ANR	6163375	ExpressionStatement	comment = za -> comment_changed ? za -> comment_changes : za -> comment_orig	195:4:5489:5559	6162947	20	True				
ANR	6163376	AssignmentExpression	comment = za -> comment_changed ? za -> comment_changes : za -> comment_orig		6162947	0		=			
ANR	6163377	Identifier	comment		6162947	0					
ANR	6163378	ConditionalExpression	za -> comment_changed ? za -> comment_changes : za -> comment_orig		6162947	1					
ANR	6163379	Condition	za -> comment_changed		6162947	0					
ANR	6163380	PtrMemberAccess	za -> comment_changed		6162947	0					
ANR	6163381	Identifier	za		6162947	0					
ANR	6163382	Identifier	comment_changed		6162947	1					
ANR	6163383	PtrMemberAccess	za -> comment_changes		6162947	1					
ANR	6163384	Identifier	za		6162947	0					
ANR	6163385	Identifier	comment_changes		6162947	1					
ANR	6163386	PtrMemberAccess	za -> comment_orig		6162947	2					
ANR	6163387	Identifier	za		6162947	0					
ANR	6163388	Identifier	comment_orig		6162947	1					
ANR	6163389	ExpressionStatement	"_zip_write2 ( comment ? comment -> length : 0 , fp )"	197:4:5566:5612	6162947	21	True				
ANR	6163390	CallExpression	"_zip_write2 ( comment ? comment -> length : 0 , fp )"		6162947	0					
ANR	6163391	Callee	_zip_write2		6162947	0					
ANR	6163392	Identifier	_zip_write2		6162947	0					
ANR	6163393	ArgumentList	comment ? comment -> length : 0		6162947	1					
ANR	6163394	Argument	comment ? comment -> length : 0		6162947	0					
ANR	6163395	ConditionalExpression	comment ? comment -> length : 0		6162947	0					
ANR	6163396	Condition	comment		6162947	0					
ANR	6163397	Identifier	comment		6162947	0					
ANR	6163398	PtrMemberAccess	comment -> length		6162947	1					
ANR	6163399	Identifier	comment		6162947	0					
ANR	6163400	Identifier	length		6162947	1					
ANR	6163401	PrimaryExpression	0		6162947	2					
ANR	6163402	Argument	fp		6162947	1					
ANR	6163403	Identifier	fp		6162947	0					
ANR	6163404	IfStatement	if ( comment )		6162947	22					
ANR	6163405	Condition	comment	198:8:5622:5628	6162947	0	True				
ANR	6163406	Identifier	comment		6162947	0					
ANR	6163407	ExpressionStatement	"fwrite ( comment -> raw , 1 , comment -> length , fp )"	199:1:5632:5676	6162947	1	True				
ANR	6163408	CallExpression	"fwrite ( comment -> raw , 1 , comment -> length , fp )"		6162947	0					
ANR	6163409	Callee	fwrite		6162947	0					
ANR	6163410	Identifier	fwrite		6162947	0					
ANR	6163411	ArgumentList	comment -> raw		6162947	1					
ANR	6163412	Argument	comment -> raw		6162947	0					
ANR	6163413	PtrMemberAccess	comment -> raw		6162947	0					
ANR	6163414	Identifier	comment		6162947	0					
ANR	6163415	Identifier	raw		6162947	1					
ANR	6163416	Argument	1		6162947	1					
ANR	6163417	PrimaryExpression	1		6162947	0					
ANR	6163418	Argument	comment -> length		6162947	2					
ANR	6163419	PtrMemberAccess	comment -> length		6162947	0					
ANR	6163420	Identifier	comment		6162947	0					
ANR	6163421	Identifier	length		6162947	1					
ANR	6163422	Argument	fp		6162947	3					
ANR	6163423	Identifier	fp		6162947	0					
ANR	6163424	IfStatement	if ( ferror ( fp ) )		6162947	23					
ANR	6163425	Condition	ferror ( fp )	201:8:5687:5696	6162947	0	True				
ANR	6163426	CallExpression	ferror ( fp )		6162947	0					
ANR	6163427	Callee	ferror		6162947	0					
ANR	6163428	Identifier	ferror		6162947	0					
ANR	6163429	ArgumentList	fp		6162947	1					
ANR	6163430	Argument	fp		6162947	0					
ANR	6163431	Identifier	fp		6162947	0					
ANR	6163432	CompoundStatement		68:20:1838:1838	6162947	1					
ANR	6163433	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"	202:1:5702:5749	6162947	0	True				
ANR	6163434	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"		6162947	0					
ANR	6163435	Callee	_zip_error_set		6162947	0					
ANR	6163436	Identifier	_zip_error_set		6162947	0					
ANR	6163437	ArgumentList	& za -> error		6162947	1					
ANR	6163438	Argument	& za -> error		6162947	0					
ANR	6163439	UnaryOperationExpression	& za -> error		6162947	0					
ANR	6163440	UnaryOperator	&		6162947	0					
ANR	6163441	PtrMemberAccess	za -> error		6162947	1					
ANR	6163442	Identifier	za		6162947	0					
ANR	6163443	Identifier	error		6162947	1					
ANR	6163444	Argument	ZIP_ER_WRITE		6162947	1					
ANR	6163445	Identifier	ZIP_ER_WRITE		6162947	0					
ANR	6163446	Argument	errno		6162947	2					
ANR	6163447	Identifier	errno		6162947	0					
ANR	6163448	ReturnStatement	return - 1 ;	203:1:5752:5761	6162947	1	True				
ANR	6163449	UnaryOperationExpression	- 1		6162947	0					
ANR	6163450	UnaryOperator	-		6162947	0					
ANR	6163451	PrimaryExpression	1		6162947	1					
ANR	6163452	ReturnStatement	return ( zip_int64_t ) size ;	206:4:5774:5798	6162947	24	True				
ANR	6163453	CastExpression	( zip_int64_t ) size		6162947	0					
ANR	6163454	CastTarget	zip_int64_t		6162947	0					
ANR	6163455	Identifier	size		6162947	1					
ANR	6163456	ReturnType	zip_int64_t		6162947	1					
ANR	6163457	Identifier	_zip_cdir_write		6162947	2					
ANR	6163458	ParameterList	"struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * fp"		6162947	3					
ANR	6163459	Parameter	struct zip * za	133:16:3773:3786	6162947	0	True				
ANR	6163460	ParameterType	struct zip *		6162947	0					
ANR	6163461	Identifier	za		6162947	1					
ANR	6163462	Parameter	const struct zip_filelist * filelist	133:32:3789:3823	6162947	1	True				
ANR	6163463	ParameterType	const struct zip_filelist *		6162947	0					
ANR	6163464	Identifier	filelist		6162947	1					
ANR	6163465	Parameter	zip_uint64_t survivors	133:69:3826:3847	6162947	2	True				
ANR	6163466	ParameterType	zip_uint64_t		6162947	0					
ANR	6163467	Identifier	survivors		6162947	1					
ANR	6163468	Parameter	FILE * fp	133:93:3850:3857	6162947	3	True				
ANR	6163469	ParameterType	FILE *		6162947	0					
ANR	6163470	Identifier	fp		6162947	1					
ANR	6163471	CFGEntryNode	ENTRY		6162947		True				
ANR	6163472	CFGExitNode	EXIT		6162947		True				
ANR	6163473	Symbol	EOCD64_MAGIC		6162947						
ANR	6163474	Symbol	& za -> error		6162947						
ANR	6163475	Symbol	ZIP_FL_CENTRAL		6162947						
ANR	6163476	Symbol	ZIP_UINT16_MAX		6162947						
ANR	6163477	Symbol	ZIP_UINT32_MAX		6162947						
ANR	6163478	Symbol	za -> comment_orig		6162947						
ANR	6163479	Symbol	is_zip64		6162947						
ANR	6163480	Symbol	EOCD64LEN		6162947						
ANR	6163481	Symbol	za -> entry		6162947						
ANR	6163482	Symbol	fp		6162947						
ANR	6163483	Symbol	ZIP_ER_READ		6162947						
ANR	6163484	Symbol	* za		6162947						
ANR	6163485	Symbol	za -> comment_changes		6162947						
ANR	6163486	Symbol	_zip_dirent_write		6162947						
ANR	6163487	Symbol	comment -> raw		6162947						
ANR	6163488	Symbol	ftello		6162947						
ANR	6163489	Symbol	* filelist		6162947						
ANR	6163490	Symbol	* entry		6162947						
ANR	6163491	Symbol	ret		6162947						
ANR	6163492	Symbol	EOCD_MAGIC		6162947						
ANR	6163493	Symbol	za -> comment_changed		6162947						
ANR	6163494	Symbol	errno		6162947						
ANR	6163495	Symbol	offset		6162947						
ANR	6163496	Symbol	entry -> changes		6162947						
ANR	6163497	Symbol	za		6162947						
ANR	6163498	Symbol	filelist		6162947						
ANR	6163499	Symbol	i		6162947						
ANR	6163500	Symbol	ZIP_ER_WRITE		6162947						
ANR	6163501	Symbol	* comment		6162947						
ANR	6163502	Symbol	off		6162947						
ANR	6163503	Symbol	entry		6162947						
ANR	6163504	Symbol	ferror		6162947						
ANR	6163505	Symbol	comment -> length		6162947						
ANR	6163506	Symbol	* i		6162947						
ANR	6163507	Symbol	size		6162947						
ANR	6163508	Symbol	filelist [ i ] . idx		6162947						
ANR	6163509	Symbol	entry -> orig		6162947						
ANR	6163510	Symbol	survivors		6162947						
ANR	6163511	Symbol	comment		6162947						
ANR	6163512	Symbol	EOCD64LOC_MAGIC		6162947						
ANR	6163513	Function	_zip_dirent_clone	211:0:5806:6129							
ANR	6163514	FunctionDef	_zip_dirent_clone (const struct zip_dirent * sde)		6163513	0					
ANR	6163515	CompoundStatement		213:0:5874:6129	6163513	0					
ANR	6163516	IdentifierDeclStatement	struct zip_dirent * tde ;	214:4:5880:5902	6163513	0	True				
ANR	6163517	IdentifierDecl	* tde		6163513	0					
ANR	6163518	IdentifierDeclType	struct zip_dirent *		6163513	0					
ANR	6163519	Identifier	tde		6163513	1					
ANR	6163520	IfStatement	if ( ( tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) ) ) == NULL )		6163513	1					
ANR	6163521	Condition	( tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) ) ) == NULL	216:8:5913:5967	6163513	0	True				
ANR	6163522	EqualityExpression	( tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) ) ) == NULL		6163513	0		==			
ANR	6163523	AssignmentExpression	tde = ( struct zip_dirent * ) malloc ( sizeof ( * tde ) )		6163513	0		=			
ANR	6163524	Identifier	tde		6163513	0					
ANR	6163525	CastExpression	( struct zip_dirent * ) malloc ( sizeof ( * tde ) )		6163513	1					
ANR	6163526	CastTarget	struct zip_dirent *		6163513	0					
ANR	6163527	CallExpression	malloc ( sizeof ( * tde ) )		6163513	1					
ANR	6163528	Callee	malloc		6163513	0					
ANR	6163529	Identifier	malloc		6163513	0					
ANR	6163530	ArgumentList	sizeof ( * tde )		6163513	1					
ANR	6163531	Argument	sizeof ( * tde )		6163513	0					
ANR	6163532	SizeofExpression	sizeof ( * tde )		6163513	0					
ANR	6163533	Sizeof	sizeof		6163513	0					
ANR	6163534	UnaryOperationExpression	* tde		6163513	1					
ANR	6163535	UnaryOperator	*		6163513	0					
ANR	6163536	Identifier	tde		6163513	1					
ANR	6163537	Identifier	NULL		6163513	1					
ANR	6163538	ReturnStatement	return NULL ;	217:1:5971:5982	6163513	1	True				
ANR	6163539	Identifier	NULL		6163513	0					
ANR	6163540	IfStatement	if ( sde )		6163513	2					
ANR	6163541	Condition	sde	219:8:5993:5995	6163513	0	True				
ANR	6163542	Identifier	sde		6163513	0					
ANR	6163543	ExpressionStatement	"memcpy ( tde , sde , sizeof ( * sde ) )"	220:1:5999:6029	6163513	1	True				
ANR	6163544	CallExpression	"memcpy ( tde , sde , sizeof ( * sde ) )"		6163513	0					
ANR	6163545	Callee	memcpy		6163513	0					
ANR	6163546	Identifier	memcpy		6163513	0					
ANR	6163547	ArgumentList	tde		6163513	1					
ANR	6163548	Argument	tde		6163513	0					
ANR	6163549	Identifier	tde		6163513	0					
ANR	6163550	Argument	sde		6163513	1					
ANR	6163551	Identifier	sde		6163513	0					
ANR	6163552	Argument	sizeof ( * sde )		6163513	2					
ANR	6163553	SizeofExpression	sizeof ( * sde )		6163513	0					
ANR	6163554	Sizeof	sizeof		6163513	0					
ANR	6163555	UnaryOperationExpression	* sde		6163513	1					
ANR	6163556	UnaryOperator	*		6163513	0					
ANR	6163557	Identifier	sde		6163513	1					
ANR	6163558	ElseStatement	else		6163513	0					
ANR	6163559	ExpressionStatement	_zip_dirent_init ( tde )	222:1:6041:6062	6163513	0	True				
ANR	6163560	CallExpression	_zip_dirent_init ( tde )		6163513	0					
ANR	6163561	Callee	_zip_dirent_init		6163513	0					
ANR	6163562	Identifier	_zip_dirent_init		6163513	0					
ANR	6163563	ArgumentList	tde		6163513	1					
ANR	6163564	Argument	tde		6163513	0					
ANR	6163565	Identifier	tde		6163513	0					
ANR	6163566	ExpressionStatement	tde -> changed = 0	224:4:6073:6089	6163513	3	True				
ANR	6163567	AssignmentExpression	tde -> changed = 0		6163513	0		=			
ANR	6163568	PtrMemberAccess	tde -> changed		6163513	0					
ANR	6163569	Identifier	tde		6163513	0					
ANR	6163570	Identifier	changed		6163513	1					
ANR	6163571	PrimaryExpression	0		6163513	1					
ANR	6163572	ExpressionStatement	tde -> cloned = 1	225:4:6095:6110	6163513	4	True				
ANR	6163573	AssignmentExpression	tde -> cloned = 1		6163513	0		=			
ANR	6163574	PtrMemberAccess	tde -> cloned		6163513	0					
ANR	6163575	Identifier	tde		6163513	0					
ANR	6163576	Identifier	cloned		6163513	1					
ANR	6163577	PrimaryExpression	1		6163513	1					
ANR	6163578	ReturnStatement	return tde ;	227:4:6117:6127	6163513	5	True				
ANR	6163579	Identifier	tde		6163513	0					
ANR	6163580	ReturnType	struct zip_dirent *		6163513	1					
ANR	6163581	Identifier	_zip_dirent_clone		6163513	2					
ANR	6163582	ParameterList	const struct zip_dirent * sde		6163513	3					
ANR	6163583	Parameter	const struct zip_dirent * sde	212:18:5844:5871	6163513	0	True				
ANR	6163584	ParameterType	const struct zip_dirent *		6163513	0					
ANR	6163585	Identifier	sde		6163513	1					
ANR	6163586	CFGEntryNode	ENTRY		6163513		True				
ANR	6163587	CFGExitNode	EXIT		6163513		True				
ANR	6163588	Symbol	malloc		6163513						
ANR	6163589	Symbol	tde -> cloned		6163513						
ANR	6163590	Symbol	NULL		6163513						
ANR	6163591	Symbol	tde		6163513						
ANR	6163592	Symbol	sde		6163513						
ANR	6163593	Symbol	tde -> changed		6163513						
ANR	6163594	Symbol	* sde		6163513						
ANR	6163595	Symbol	* tde		6163513						
ANR	6163596	Function	_zip_dirent_finalize	232:0:6135:6470							
ANR	6163597	FunctionDef	_zip_dirent_finalize (struct zip_dirent * zde)		6163596	0					
ANR	6163598	CompoundStatement		234:0:6185:6470	6163596	0					
ANR	6163599	IfStatement	if ( ! zde -> cloned || zde -> changed & ZIP_DIRENT_FILENAME )		6163596	0					
ANR	6163600	Condition	! zde -> cloned || zde -> changed & ZIP_DIRENT_FILENAME	235:8:6195:6244	6163596	0	True				
ANR	6163601	OrExpression	! zde -> cloned || zde -> changed & ZIP_DIRENT_FILENAME		6163596	0		||			
ANR	6163602	UnaryOperationExpression	! zde -> cloned		6163596	0					
ANR	6163603	UnaryOperator	!		6163596	0					
ANR	6163604	PtrMemberAccess	zde -> cloned		6163596	1					
ANR	6163605	Identifier	zde		6163596	0					
ANR	6163606	Identifier	cloned		6163596	1					
ANR	6163607	BitAndExpression	zde -> changed & ZIP_DIRENT_FILENAME		6163596	1		&			
ANR	6163608	PtrMemberAccess	zde -> changed		6163596	0					
ANR	6163609	Identifier	zde		6163596	0					
ANR	6163610	Identifier	changed		6163596	1					
ANR	6163611	Identifier	ZIP_DIRENT_FILENAME		6163596	1					
ANR	6163612	ExpressionStatement	_zip_string_free ( zde -> filename )	236:1:6248:6279	6163596	1	True				
ANR	6163613	CallExpression	_zip_string_free ( zde -> filename )		6163596	0					
ANR	6163614	Callee	_zip_string_free		6163596	0					
ANR	6163615	Identifier	_zip_string_free		6163596	0					
ANR	6163616	ArgumentList	zde -> filename		6163596	1					
ANR	6163617	Argument	zde -> filename		6163596	0					
ANR	6163618	PtrMemberAccess	zde -> filename		6163596	0					
ANR	6163619	Identifier	zde		6163596	0					
ANR	6163620	Identifier	filename		6163596	1					
ANR	6163621	IfStatement	if ( ! zde -> cloned || zde -> changed & ZIP_DIRENT_EXTRA_FIELD )		6163596	1					
ANR	6163622	Condition	! zde -> cloned || zde -> changed & ZIP_DIRENT_EXTRA_FIELD	237:8:6289:6341	6163596	0	True				
ANR	6163623	OrExpression	! zde -> cloned || zde -> changed & ZIP_DIRENT_EXTRA_FIELD		6163596	0		||			
ANR	6163624	UnaryOperationExpression	! zde -> cloned		6163596	0					
ANR	6163625	UnaryOperator	!		6163596	0					
ANR	6163626	PtrMemberAccess	zde -> cloned		6163596	1					
ANR	6163627	Identifier	zde		6163596	0					
ANR	6163628	Identifier	cloned		6163596	1					
ANR	6163629	BitAndExpression	zde -> changed & ZIP_DIRENT_EXTRA_FIELD		6163596	1		&			
ANR	6163630	PtrMemberAccess	zde -> changed		6163596	0					
ANR	6163631	Identifier	zde		6163596	0					
ANR	6163632	Identifier	changed		6163596	1					
ANR	6163633	Identifier	ZIP_DIRENT_EXTRA_FIELD		6163596	1					
ANR	6163634	ExpressionStatement	_zip_ef_free ( zde -> extra_fields )	238:1:6345:6376	6163596	1	True				
ANR	6163635	CallExpression	_zip_ef_free ( zde -> extra_fields )		6163596	0					
ANR	6163636	Callee	_zip_ef_free		6163596	0					
ANR	6163637	Identifier	_zip_ef_free		6163596	0					
ANR	6163638	ArgumentList	zde -> extra_fields		6163596	1					
ANR	6163639	Argument	zde -> extra_fields		6163596	0					
ANR	6163640	PtrMemberAccess	zde -> extra_fields		6163596	0					
ANR	6163641	Identifier	zde		6163596	0					
ANR	6163642	Identifier	extra_fields		6163596	1					
ANR	6163643	IfStatement	if ( ! zde -> cloned || zde -> changed & ZIP_DIRENT_COMMENT )		6163596	2					
ANR	6163644	Condition	! zde -> cloned || zde -> changed & ZIP_DIRENT_COMMENT	239:8:6386:6434	6163596	0	True				
ANR	6163645	OrExpression	! zde -> cloned || zde -> changed & ZIP_DIRENT_COMMENT		6163596	0		||			
ANR	6163646	UnaryOperationExpression	! zde -> cloned		6163596	0					
ANR	6163647	UnaryOperator	!		6163596	0					
ANR	6163648	PtrMemberAccess	zde -> cloned		6163596	1					
ANR	6163649	Identifier	zde		6163596	0					
ANR	6163650	Identifier	cloned		6163596	1					
ANR	6163651	BitAndExpression	zde -> changed & ZIP_DIRENT_COMMENT		6163596	1		&			
ANR	6163652	PtrMemberAccess	zde -> changed		6163596	0					
ANR	6163653	Identifier	zde		6163596	0					
ANR	6163654	Identifier	changed		6163596	1					
ANR	6163655	Identifier	ZIP_DIRENT_COMMENT		6163596	1					
ANR	6163656	ExpressionStatement	_zip_string_free ( zde -> comment )	240:1:6438:6468	6163596	1	True				
ANR	6163657	CallExpression	_zip_string_free ( zde -> comment )		6163596	0					
ANR	6163658	Callee	_zip_string_free		6163596	0					
ANR	6163659	Identifier	_zip_string_free		6163596	0					
ANR	6163660	ArgumentList	zde -> comment		6163596	1					
ANR	6163661	Argument	zde -> comment		6163596	0					
ANR	6163662	PtrMemberAccess	zde -> comment		6163596	0					
ANR	6163663	Identifier	zde		6163596	0					
ANR	6163664	Identifier	comment		6163596	1					
ANR	6163665	ReturnType	void		6163596	1					
ANR	6163666	Identifier	_zip_dirent_finalize		6163596	2					
ANR	6163667	ParameterList	struct zip_dirent * zde		6163596	3					
ANR	6163668	Parameter	struct zip_dirent * zde	233:21:6161:6182	6163596	0	True				
ANR	6163669	ParameterType	struct zip_dirent *		6163596	0					
ANR	6163670	Identifier	zde		6163596	1					
ANR	6163671	CFGEntryNode	ENTRY		6163596		True				
ANR	6163672	CFGExitNode	EXIT		6163596		True				
ANR	6163673	Symbol	zde -> comment		6163596						
ANR	6163674	Symbol	zde -> changed		6163596						
ANR	6163675	Symbol	* zde		6163596						
ANR	6163676	Symbol	ZIP_DIRENT_FILENAME		6163596						
ANR	6163677	Symbol	ZIP_DIRENT_EXTRA_FIELD		6163596						
ANR	6163678	Symbol	zde -> extra_fields		6163596						
ANR	6163679	Symbol	zde -> filename		6163596						
ANR	6163680	Symbol	zde		6163596						
ANR	6163681	Symbol	zde -> cloned		6163596						
ANR	6163682	Symbol	ZIP_DIRENT_COMMENT		6163596						
ANR	6163683	Function	_zip_dirent_free	245:0:6476:6601							
ANR	6163684	FunctionDef	_zip_dirent_free (struct zip_dirent * zde)		6163683	0					
ANR	6163685	CompoundStatement		247:0:6522:6601	6163683	0					
ANR	6163686	IfStatement	if ( zde == NULL )		6163683	0					
ANR	6163687	Condition	zde == NULL	248:8:6532:6542	6163683	0	True				
ANR	6163688	EqualityExpression	zde == NULL		6163683	0		==			
ANR	6163689	Identifier	zde		6163683	0					
ANR	6163690	Identifier	NULL		6163683	1					
ANR	6163691	ReturnStatement	return ;	249:1:6546:6552	6163683	1	True				
ANR	6163692	ExpressionStatement	_zip_dirent_finalize ( zde )	251:4:6559:6584	6163683	1	True				
ANR	6163693	CallExpression	_zip_dirent_finalize ( zde )		6163683	0					
ANR	6163694	Callee	_zip_dirent_finalize		6163683	0					
ANR	6163695	Identifier	_zip_dirent_finalize		6163683	0					
ANR	6163696	ArgumentList	zde		6163683	1					
ANR	6163697	Argument	zde		6163683	0					
ANR	6163698	Identifier	zde		6163683	0					
ANR	6163699	ExpressionStatement	free ( zde )	252:4:6590:6599	6163683	2	True				
ANR	6163700	CallExpression	free ( zde )		6163683	0					
ANR	6163701	Callee	free		6163683	0					
ANR	6163702	Identifier	free		6163683	0					
ANR	6163703	ArgumentList	zde		6163683	1					
ANR	6163704	Argument	zde		6163683	0					
ANR	6163705	Identifier	zde		6163683	0					
ANR	6163706	ReturnType	void		6163683	1					
ANR	6163707	Identifier	_zip_dirent_free		6163683	2					
ANR	6163708	ParameterList	struct zip_dirent * zde		6163683	3					
ANR	6163709	Parameter	struct zip_dirent * zde	246:17:6498:6519	6163683	0	True				
ANR	6163710	ParameterType	struct zip_dirent *		6163683	0					
ANR	6163711	Identifier	zde		6163683	1					
ANR	6163712	CFGEntryNode	ENTRY		6163683		True				
ANR	6163713	CFGExitNode	EXIT		6163683		True				
ANR	6163714	Symbol	NULL		6163683						
ANR	6163715	Symbol	zde		6163683						
ANR	6163716	Function	_zip_dirent_init	257:0:6607:7119							
ANR	6163717	FunctionDef	_zip_dirent_init (struct zip_dirent * de)		6163716	0					
ANR	6163718	CompoundStatement		259:0:6652:7119	6163716	0					
ANR	6163719	ExpressionStatement	de -> changed = 0	260:4:6658:6673	6163716	0	True				
ANR	6163720	AssignmentExpression	de -> changed = 0		6163716	0		=			
ANR	6163721	PtrMemberAccess	de -> changed		6163716	0					
ANR	6163722	Identifier	de		6163716	0					
ANR	6163723	Identifier	changed		6163716	1					
ANR	6163724	PrimaryExpression	0		6163716	1					
ANR	6163725	ExpressionStatement	de -> local_extra_fields_read = 0	261:4:6679:6710	6163716	1	True				
ANR	6163726	AssignmentExpression	de -> local_extra_fields_read = 0		6163716	0		=			
ANR	6163727	PtrMemberAccess	de -> local_extra_fields_read		6163716	0					
ANR	6163728	Identifier	de		6163716	0					
ANR	6163729	Identifier	local_extra_fields_read		6163716	1					
ANR	6163730	PrimaryExpression	0		6163716	1					
ANR	6163731	ExpressionStatement	de -> cloned = 0	262:4:6716:6730	6163716	2	True				
ANR	6163732	AssignmentExpression	de -> cloned = 0		6163716	0		=			
ANR	6163733	PtrMemberAccess	de -> cloned		6163716	0					
ANR	6163734	Identifier	de		6163716	0					
ANR	6163735	Identifier	cloned		6163716	1					
ANR	6163736	PrimaryExpression	0		6163716	1					
ANR	6163737	ExpressionStatement	de -> version_madeby = 20	264:4:6737:6760	6163716	3	True				
ANR	6163738	AssignmentExpression	de -> version_madeby = 20		6163716	0		=			
ANR	6163739	PtrMemberAccess	de -> version_madeby		6163716	0					
ANR	6163740	Identifier	de		6163716	0					
ANR	6163741	Identifier	version_madeby		6163716	1					
ANR	6163742	PrimaryExpression	20		6163716	1					
ANR	6163743	ExpressionStatement	de -> version_needed = 20	265:4:6766:6789	6163716	4	True				
ANR	6163744	AssignmentExpression	de -> version_needed = 20		6163716	0		=			
ANR	6163745	PtrMemberAccess	de -> version_needed		6163716	0					
ANR	6163746	Identifier	de		6163716	0					
ANR	6163747	Identifier	version_needed		6163716	1					
ANR	6163748	PrimaryExpression	20		6163716	1					
ANR	6163749	ExpressionStatement	de -> bitflags = 0	266:4:6805:6821	6163716	5	True				
ANR	6163750	AssignmentExpression	de -> bitflags = 0		6163716	0		=			
ANR	6163751	PtrMemberAccess	de -> bitflags		6163716	0					
ANR	6163752	Identifier	de		6163716	0					
ANR	6163753	Identifier	bitflags		6163716	1					
ANR	6163754	PrimaryExpression	0		6163716	1					
ANR	6163755	ExpressionStatement	de -> comp_method = ZIP_CM_DEFAULT	267:4:6827:6859	6163716	6	True				
ANR	6163756	AssignmentExpression	de -> comp_method = ZIP_CM_DEFAULT		6163716	0		=			
ANR	6163757	PtrMemberAccess	de -> comp_method		6163716	0					
ANR	6163758	Identifier	de		6163716	0					
ANR	6163759	Identifier	comp_method		6163716	1					
ANR	6163760	Identifier	ZIP_CM_DEFAULT		6163716	1					
ANR	6163761	ExpressionStatement	de -> last_mod = 0	268:4:6865:6881	6163716	7	True				
ANR	6163762	AssignmentExpression	de -> last_mod = 0		6163716	0		=			
ANR	6163763	PtrMemberAccess	de -> last_mod		6163716	0					
ANR	6163764	Identifier	de		6163716	0					
ANR	6163765	Identifier	last_mod		6163716	1					
ANR	6163766	PrimaryExpression	0		6163716	1					
ANR	6163767	ExpressionStatement	de -> crc = 0	269:4:6887:6898	6163716	8	True				
ANR	6163768	AssignmentExpression	de -> crc = 0		6163716	0		=			
ANR	6163769	PtrMemberAccess	de -> crc		6163716	0					
ANR	6163770	Identifier	de		6163716	0					
ANR	6163771	Identifier	crc		6163716	1					
ANR	6163772	PrimaryExpression	0		6163716	1					
ANR	6163773	ExpressionStatement	de -> comp_size = 0	270:4:6904:6921	6163716	9	True				
ANR	6163774	AssignmentExpression	de -> comp_size = 0		6163716	0		=			
ANR	6163775	PtrMemberAccess	de -> comp_size		6163716	0					
ANR	6163776	Identifier	de		6163716	0					
ANR	6163777	Identifier	comp_size		6163716	1					
ANR	6163778	PrimaryExpression	0		6163716	1					
ANR	6163779	ExpressionStatement	de -> uncomp_size = 0	271:4:6927:6946	6163716	10	True				
ANR	6163780	AssignmentExpression	de -> uncomp_size = 0		6163716	0		=			
ANR	6163781	PtrMemberAccess	de -> uncomp_size		6163716	0					
ANR	6163782	Identifier	de		6163716	0					
ANR	6163783	Identifier	uncomp_size		6163716	1					
ANR	6163784	PrimaryExpression	0		6163716	1					
ANR	6163785	ExpressionStatement	de -> filename = NULL	272:4:6952:6971	6163716	11	True				
ANR	6163786	AssignmentExpression	de -> filename = NULL		6163716	0		=			
ANR	6163787	PtrMemberAccess	de -> filename		6163716	0					
ANR	6163788	Identifier	de		6163716	0					
ANR	6163789	Identifier	filename		6163716	1					
ANR	6163790	Identifier	NULL		6163716	1					
ANR	6163791	ExpressionStatement	de -> extra_fields = NULL	273:4:6977:7000	6163716	12	True				
ANR	6163792	AssignmentExpression	de -> extra_fields = NULL		6163716	0		=			
ANR	6163793	PtrMemberAccess	de -> extra_fields		6163716	0					
ANR	6163794	Identifier	de		6163716	0					
ANR	6163795	Identifier	extra_fields		6163716	1					
ANR	6163796	Identifier	NULL		6163716	1					
ANR	6163797	ExpressionStatement	de -> comment = NULL	274:4:7006:7024	6163716	13	True				
ANR	6163798	AssignmentExpression	de -> comment = NULL		6163716	0		=			
ANR	6163799	PtrMemberAccess	de -> comment		6163716	0					
ANR	6163800	Identifier	de		6163716	0					
ANR	6163801	Identifier	comment		6163716	1					
ANR	6163802	Identifier	NULL		6163716	1					
ANR	6163803	ExpressionStatement	de -> disk_number = 0	275:4:7030:7049	6163716	14	True				
ANR	6163804	AssignmentExpression	de -> disk_number = 0		6163716	0		=			
ANR	6163805	PtrMemberAccess	de -> disk_number		6163716	0					
ANR	6163806	Identifier	de		6163716	0					
ANR	6163807	Identifier	disk_number		6163716	1					
ANR	6163808	PrimaryExpression	0		6163716	1					
ANR	6163809	ExpressionStatement	de -> int_attrib = 0	276:4:7055:7073	6163716	15	True				
ANR	6163810	AssignmentExpression	de -> int_attrib = 0		6163716	0		=			
ANR	6163811	PtrMemberAccess	de -> int_attrib		6163716	0					
ANR	6163812	Identifier	de		6163716	0					
ANR	6163813	Identifier	int_attrib		6163716	1					
ANR	6163814	PrimaryExpression	0		6163716	1					
ANR	6163815	ExpressionStatement	de -> ext_attrib = 0	277:4:7079:7097	6163716	16	True				
ANR	6163816	AssignmentExpression	de -> ext_attrib = 0		6163716	0		=			
ANR	6163817	PtrMemberAccess	de -> ext_attrib		6163716	0					
ANR	6163818	Identifier	de		6163716	0					
ANR	6163819	Identifier	ext_attrib		6163716	1					
ANR	6163820	PrimaryExpression	0		6163716	1					
ANR	6163821	ExpressionStatement	de -> offset = 0	278:4:7103:7117	6163716	17	True				
ANR	6163822	AssignmentExpression	de -> offset = 0		6163716	0		=			
ANR	6163823	PtrMemberAccess	de -> offset		6163716	0					
ANR	6163824	Identifier	de		6163716	0					
ANR	6163825	Identifier	offset		6163716	1					
ANR	6163826	PrimaryExpression	0		6163716	1					
ANR	6163827	ReturnType	void		6163716	1					
ANR	6163828	Identifier	_zip_dirent_init		6163716	2					
ANR	6163829	ParameterList	struct zip_dirent * de		6163716	3					
ANR	6163830	Parameter	struct zip_dirent * de	258:17:6629:6649	6163716	0	True				
ANR	6163831	ParameterType	struct zip_dirent *		6163716	0					
ANR	6163832	Identifier	de		6163716	1					
ANR	6163833	CFGEntryNode	ENTRY		6163716		True				
ANR	6163834	CFGExitNode	EXIT		6163716		True				
ANR	6163835	Symbol	de -> extra_fields		6163716						
ANR	6163836	Symbol	de		6163716						
ANR	6163837	Symbol	de -> disk_number		6163716						
ANR	6163838	Symbol	de -> changed		6163716						
ANR	6163839	Symbol	NULL		6163716						
ANR	6163840	Symbol	* de		6163716						
ANR	6163841	Symbol	de -> local_extra_fields_read		6163716						
ANR	6163842	Symbol	de -> comp_method		6163716						
ANR	6163843	Symbol	de -> cloned		6163716						
ANR	6163844	Symbol	de -> uncomp_size		6163716						
ANR	6163845	Symbol	de -> comment		6163716						
ANR	6163846	Symbol	de -> int_attrib		6163716						
ANR	6163847	Symbol	de -> version_needed		6163716						
ANR	6163848	Symbol	de -> last_mod		6163716						
ANR	6163849	Symbol	de -> version_madeby		6163716						
ANR	6163850	Symbol	de -> comp_size		6163716						
ANR	6163851	Symbol	de -> ext_attrib		6163716						
ANR	6163852	Symbol	de -> crc		6163716						
ANR	6163853	Symbol	de -> bitflags		6163716						
ANR	6163854	Symbol	ZIP_CM_DEFAULT		6163716						
ANR	6163855	Symbol	de -> filename		6163716						
ANR	6163856	Symbol	de -> offset		6163716						
ANR	6163857	Function	_zip_dirent_needs_zip64	283:0:7125:7370							
ANR	6163858	FunctionDef	"_zip_dirent_needs_zip64 (const struct zip_dirent * de , zip_flags_t flags)"		6163857	0					
ANR	6163859	CompoundStatement		285:0:7201:7370	6163857	0					
ANR	6163860	IfStatement	if ( de -> uncomp_size >= ZIP_UINT32_MAX || de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX ) )		6163857	0					
ANR	6163861	Condition	de -> uncomp_size >= ZIP_UINT32_MAX || de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX )	286:8:7211:7341	6163857	0	True				
ANR	6163862	OrExpression	de -> uncomp_size >= ZIP_UINT32_MAX || de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX )		6163857	0		||			
ANR	6163863	RelationalExpression	de -> uncomp_size >= ZIP_UINT32_MAX		6163857	0		>=			
ANR	6163864	PtrMemberAccess	de -> uncomp_size		6163857	0					
ANR	6163865	Identifier	de		6163857	0					
ANR	6163866	Identifier	uncomp_size		6163857	1					
ANR	6163867	Identifier	ZIP_UINT32_MAX		6163857	1					
ANR	6163868	OrExpression	de -> comp_size >= ZIP_UINT32_MAX || ( ( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX )		6163857	1		||			
ANR	6163869	RelationalExpression	de -> comp_size >= ZIP_UINT32_MAX		6163857	0		>=			
ANR	6163870	PtrMemberAccess	de -> comp_size		6163857	0					
ANR	6163871	Identifier	de		6163857	0					
ANR	6163872	Identifier	comp_size		6163857	1					
ANR	6163873	Identifier	ZIP_UINT32_MAX		6163857	1					
ANR	6163874	AndExpression	( flags & ZIP_FL_CENTRAL ) && de -> offset >= ZIP_UINT32_MAX		6163857	1		&&			
ANR	6163875	BitAndExpression	flags & ZIP_FL_CENTRAL		6163857	0		&			
ANR	6163876	Identifier	flags		6163857	0					
ANR	6163877	Identifier	ZIP_FL_CENTRAL		6163857	1					
ANR	6163878	RelationalExpression	de -> offset >= ZIP_UINT32_MAX		6163857	1		>=			
ANR	6163879	PtrMemberAccess	de -> offset		6163857	0					
ANR	6163880	Identifier	de		6163857	0					
ANR	6163881	Identifier	offset		6163857	1					
ANR	6163882	Identifier	ZIP_UINT32_MAX		6163857	1					
ANR	6163883	ReturnStatement	return 1 ;	288:1:7345:7353	6163857	1	True				
ANR	6163884	PrimaryExpression	1		6163857	0					
ANR	6163885	ReturnStatement	return 0 ;	290:4:7360:7368	6163857	1	True				
ANR	6163886	PrimaryExpression	0		6163857	0					
ANR	6163887	ReturnType	int		6163857	1					
ANR	6163888	Identifier	_zip_dirent_needs_zip64		6163857	2					
ANR	6163889	ParameterList	"const struct zip_dirent * de , zip_flags_t flags"		6163857	3					
ANR	6163890	Parameter	const struct zip_dirent * de	284:24:7153:7179	6163857	0	True				
ANR	6163891	ParameterType	const struct zip_dirent *		6163857	0					
ANR	6163892	Identifier	de		6163857	1					
ANR	6163893	Parameter	zip_flags_t flags	284:53:7182:7198	6163857	1	True				
ANR	6163894	ParameterType	zip_flags_t		6163857	0					
ANR	6163895	Identifier	flags		6163857	1					
ANR	6163896	CFGEntryNode	ENTRY		6163857		True				
ANR	6163897	CFGExitNode	EXIT		6163857		True				
ANR	6163898	Symbol	de		6163857						
ANR	6163899	Symbol	de -> comp_size		6163857						
ANR	6163900	Symbol	* de		6163857						
ANR	6163901	Symbol	ZIP_FL_CENTRAL		6163857						
ANR	6163902	Symbol	ZIP_UINT32_MAX		6163857						
ANR	6163903	Symbol	flags		6163857						
ANR	6163904	Symbol	de -> uncomp_size		6163857						
ANR	6163905	Symbol	de -> offset		6163857						
ANR	6163906	Function	_zip_dirent_new	295:0:7376:7567							
ANR	6163907	FunctionDef	_zip_dirent_new ()		6163906	0					
ANR	6163908	CompoundStatement		297:0:7418:7567	6163906	0					
ANR	6163909	IdentifierDeclStatement	struct zip_dirent * de ;	298:4:7424:7445	6163906	0	True				
ANR	6163910	IdentifierDecl	* de		6163906	0					
ANR	6163911	IdentifierDeclType	struct zip_dirent *		6163906	0					
ANR	6163912	Identifier	de		6163906	1					
ANR	6163913	IfStatement	if ( ( de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) ) ) == NULL )		6163906	1					
ANR	6163914	Condition	( de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) ) ) == NULL	300:8:7456:7508	6163906	0	True				
ANR	6163915	EqualityExpression	( de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) ) ) == NULL		6163906	0		==			
ANR	6163916	AssignmentExpression	de = ( struct zip_dirent * ) malloc ( sizeof ( * de ) )		6163906	0		=			
ANR	6163917	Identifier	de		6163906	0					
ANR	6163918	CastExpression	( struct zip_dirent * ) malloc ( sizeof ( * de ) )		6163906	1					
ANR	6163919	CastTarget	struct zip_dirent *		6163906	0					
ANR	6163920	CallExpression	malloc ( sizeof ( * de ) )		6163906	1					
ANR	6163921	Callee	malloc		6163906	0					
ANR	6163922	Identifier	malloc		6163906	0					
ANR	6163923	ArgumentList	sizeof ( * de )		6163906	1					
ANR	6163924	Argument	sizeof ( * de )		6163906	0					
ANR	6163925	SizeofExpression	sizeof ( * de )		6163906	0					
ANR	6163926	Sizeof	sizeof		6163906	0					
ANR	6163927	UnaryOperationExpression	* de		6163906	1					
ANR	6163928	UnaryOperator	*		6163906	0					
ANR	6163929	Identifier	de		6163906	1					
ANR	6163930	Identifier	NULL		6163906	1					
ANR	6163931	ReturnStatement	return NULL ;	301:1:7512:7523	6163906	1	True				
ANR	6163932	Identifier	NULL		6163906	0					
ANR	6163933	ExpressionStatement	_zip_dirent_init ( de )	303:4:7530:7550	6163906	2	True				
ANR	6163934	CallExpression	_zip_dirent_init ( de )		6163906	0					
ANR	6163935	Callee	_zip_dirent_init		6163906	0					
ANR	6163936	Identifier	_zip_dirent_init		6163906	0					
ANR	6163937	ArgumentList	de		6163906	1					
ANR	6163938	Argument	de		6163906	0					
ANR	6163939	Identifier	de		6163906	0					
ANR	6163940	ReturnStatement	return de ;	304:4:7556:7565	6163906	3	True				
ANR	6163941	Identifier	de		6163906	0					
ANR	6163942	ReturnType	struct zip_dirent *		6163906	1					
ANR	6163943	Identifier	_zip_dirent_new		6163906	2					
ANR	6163944	ParameterList			6163906	3					
ANR	6163945	CFGEntryNode	ENTRY		6163906		True				
ANR	6163946	CFGExitNode	EXIT		6163906		True				
ANR	6163947	Symbol	de		6163906						
ANR	6163948	Symbol	malloc		6163906						
ANR	6163949	Symbol	NULL		6163906						
ANR	6163950	Symbol	* de		6163906						
ANR	6163951	Function	_zip_dirent_read	327:0:8162:12853							
ANR	6163952	FunctionDef	"_zip_dirent_read (struct zip_dirent * zde , FILE * fp , const unsigned char * * bufp , zip_uint64_t * leftp , int local , struct zip_error * error)"		6163951	0					
ANR	6163953	CompoundStatement		331:0:8308:12853	6163951	0					
ANR	6163954	IdentifierDeclStatement	unsigned char buf [ CDENTRYSIZE ] ;	332:4:8314:8344	6163951	0	True				
ANR	6163955	IdentifierDecl	buf [ CDENTRYSIZE ]		6163951	0					
ANR	6163956	IdentifierDeclType	unsigned char [ CDENTRYSIZE ]		6163951	0					
ANR	6163957	Identifier	buf		6163951	1					
ANR	6163958	Identifier	CDENTRYSIZE		6163951	2					
ANR	6163959	IdentifierDeclStatement	const unsigned char * cur ;	333:4:8350:8374	6163951	1	True				
ANR	6163960	IdentifierDecl	* cur		6163951	0					
ANR	6163961	IdentifierDeclType	const unsigned char *		6163951	0					
ANR	6163962	Identifier	cur		6163951	1					
ANR	6163963	IdentifierDeclStatement	"zip_uint16_t dostime , dosdate ;"	334:4:8380:8409	6163951	2	True				
ANR	6163964	IdentifierDecl	dostime		6163951	0					
ANR	6163965	IdentifierDeclType	zip_uint16_t		6163951	0					
ANR	6163966	Identifier	dostime		6163951	1					
ANR	6163967	IdentifierDecl	dosdate		6163951	1					
ANR	6163968	IdentifierDeclType	zip_uint16_t		6163951	0					
ANR	6163969	Identifier	dosdate		6163951	1					
ANR	6163970	IdentifierDeclStatement	zip_uint32_t size ;	335:4:8415:8432	6163951	3	True				
ANR	6163971	IdentifierDecl	size		6163951	0					
ANR	6163972	IdentifierDeclType	zip_uint32_t		6163951	0					
ANR	6163973	Identifier	size		6163951	1					
ANR	6163974	IdentifierDeclStatement	"zip_uint16_t filename_len , comment_len , ef_len ;"	336:4:8438:8484	6163951	4	True				
ANR	6163975	IdentifierDecl	filename_len		6163951	0					
ANR	6163976	IdentifierDeclType	zip_uint16_t		6163951	0					
ANR	6163977	Identifier	filename_len		6163951	1					
ANR	6163978	IdentifierDecl	comment_len		6163951	1					
ANR	6163979	IdentifierDeclType	zip_uint16_t		6163951	0					
ANR	6163980	Identifier	comment_len		6163951	1					
ANR	6163981	IdentifierDecl	ef_len		6163951	2					
ANR	6163982	IdentifierDeclType	zip_uint16_t		6163951	0					
ANR	6163983	Identifier	ef_len		6163951	1					
ANR	6163984	IfStatement	if ( local )		6163951	5					
ANR	6163985	Condition	local	338:8:8495:8499	6163951	0	True				
ANR	6163986	Identifier	local		6163951	0					
ANR	6163987	ExpressionStatement	size = LENTRYSIZE	339:1:8503:8520	6163951	1	True				
ANR	6163988	AssignmentExpression	size = LENTRYSIZE		6163951	0		=			
ANR	6163989	Identifier	size		6163951	0					
ANR	6163990	Identifier	LENTRYSIZE		6163951	1					
ANR	6163991	ElseStatement	else		6163951	0					
ANR	6163992	ExpressionStatement	size = CDENTRYSIZE	341:1:8532:8550	6163951	0	True				
ANR	6163993	AssignmentExpression	size = CDENTRYSIZE		6163951	0		=			
ANR	6163994	Identifier	size		6163951	0					
ANR	6163995	Identifier	CDENTRYSIZE		6163951	1					
ANR	6163996	IfStatement	if ( leftp && ( * leftp < size ) )		6163951	6					
ANR	6163997	Condition	leftp && ( * leftp < size )	343:8:8561:8584	6163951	0	True				
ANR	6163998	AndExpression	leftp && ( * leftp < size )		6163951	0		&&			
ANR	6163999	Identifier	leftp		6163951	0					
ANR	6164000	RelationalExpression	* leftp < size		6163951	1		<			
ANR	6164001	UnaryOperationExpression	* leftp		6163951	0					
ANR	6164002	UnaryOperator	*		6163951	0					
ANR	6164003	Identifier	leftp		6163951	1					
ANR	6164004	Identifier	size		6163951	1					
ANR	6164005	CompoundStatement		13:34:278:278	6163951	1					
ANR	6164006	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"	344:1:8590:8628	6163951	0	True				
ANR	6164007	CallExpression	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"		6163951	0					
ANR	6164008	Callee	_zip_error_set		6163951	0					
ANR	6164009	Identifier	_zip_error_set		6163951	0					
ANR	6164010	ArgumentList	error		6163951	1					
ANR	6164011	Argument	error		6163951	0					
ANR	6164012	Identifier	error		6163951	0					
ANR	6164013	Argument	ZIP_ER_NOZIP		6163951	1					
ANR	6164014	Identifier	ZIP_ER_NOZIP		6163951	0					
ANR	6164015	Argument	0		6163951	2					
ANR	6164016	PrimaryExpression	0		6163951	0					
ANR	6164017	ReturnStatement	return - 1 ;	345:1:8631:8640	6163951	1	True				
ANR	6164018	UnaryOperationExpression	- 1		6163951	0					
ANR	6164019	UnaryOperator	-		6163951	0					
ANR	6164020	PrimaryExpression	1		6163951	1					
ANR	6164021	IfStatement	if ( bufp )		6163951	7					
ANR	6164022	Condition	bufp	348:8:8657:8660	6163951	0	True				
ANR	6164023	Identifier	bufp		6163951	0					
ANR	6164024	CompoundStatement		18:14:354:354	6163951	1					
ANR	6164025	ExpressionStatement	cur = * bufp	350:1:8694:8705	6163951	0	True				
ANR	6164026	AssignmentExpression	cur = * bufp		6163951	0		=			
ANR	6164027	Identifier	cur		6163951	0					
ANR	6164028	UnaryOperationExpression	* bufp		6163951	1					
ANR	6164029	UnaryOperator	*		6163951	0					
ANR	6164030	Identifier	bufp		6163951	1					
ANR	6164031	ElseStatement	else		6163951	0					
ANR	6164032	CompoundStatement		22:9:413:413	6163951	0					
ANR	6164033	IfStatement	"if ( ( fread ( buf , 1 , size , fp ) < size ) )"		6163951	0					
ANR	6164034	Condition	"fread ( buf , 1 , size , fp ) < size"	354:5:8757:8786	6163951	0	True				
ANR	6164035	RelationalExpression	"fread ( buf , 1 , size , fp ) < size"		6163951	0		<			
ANR	6164036	CallExpression	"fread ( buf , 1 , size , fp )"		6163951	0					
ANR	6164037	Callee	fread		6163951	0					
ANR	6164038	Identifier	fread		6163951	0					
ANR	6164039	ArgumentList	buf		6163951	1					
ANR	6164040	Argument	buf		6163951	0					
ANR	6164041	Identifier	buf		6163951	0					
ANR	6164042	Argument	1		6163951	1					
ANR	6164043	PrimaryExpression	1		6163951	0					
ANR	6164044	Argument	size		6163951	2					
ANR	6164045	Identifier	size		6163951	0					
ANR	6164046	Argument	fp		6163951	3					
ANR	6164047	Identifier	fp		6163951	0					
ANR	6164048	Identifier	size		6163951	1					
ANR	6164049	CompoundStatement		24:37:480:480	6163951	1					
ANR	6164050	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	355:5:8796:8837	6163951	0	True				
ANR	6164051	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6163951	0					
ANR	6164052	Callee	_zip_error_set		6163951	0					
ANR	6164053	Identifier	_zip_error_set		6163951	0					
ANR	6164054	ArgumentList	error		6163951	1					
ANR	6164055	Argument	error		6163951	0					
ANR	6164056	Identifier	error		6163951	0					
ANR	6164057	Argument	ZIP_ER_READ		6163951	1					
ANR	6164058	Identifier	ZIP_ER_READ		6163951	0					
ANR	6164059	Argument	errno		6163951	2					
ANR	6164060	Identifier	errno		6163951	0					
ANR	6164061	ReturnStatement	return - 1 ;	356:5:8844:8853	6163951	1	True				
ANR	6164062	UnaryOperationExpression	- 1		6163951	0					
ANR	6164063	UnaryOperator	-		6163951	0					
ANR	6164064	PrimaryExpression	1		6163951	1					
ANR	6164065	ExpressionStatement	cur = buf	358:1:8859:8868	6163951	1	True				
ANR	6164066	AssignmentExpression	cur = buf		6163951	0		=			
ANR	6164067	Identifier	cur		6163951	0					
ANR	6164068	Identifier	buf		6163951	1					
ANR	6164069	IfStatement	"if ( memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 ) != 0 )"		6163951	8					
ANR	6164070	Condition	"memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 ) != 0"	361:8:8885:8942	6163951	0	True				
ANR	6164071	EqualityExpression	"memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 ) != 0"		6163951	0		!=			
ANR	6164072	CallExpression	"memcmp ( cur , ( local ? LOCAL_MAGIC : CENTRAL_MAGIC ) , 4 )"		6163951	0					
ANR	6164073	Callee	memcmp		6163951	0					
ANR	6164074	Identifier	memcmp		6163951	0					
ANR	6164075	ArgumentList	cur		6163951	1					
ANR	6164076	Argument	cur		6163951	0					
ANR	6164077	Identifier	cur		6163951	0					
ANR	6164078	Argument	local ? LOCAL_MAGIC : CENTRAL_MAGIC		6163951	1					
ANR	6164079	ConditionalExpression	local ? LOCAL_MAGIC : CENTRAL_MAGIC		6163951	0					
ANR	6164080	Condition	local		6163951	0					
ANR	6164081	Identifier	local		6163951	0					
ANR	6164082	Identifier	LOCAL_MAGIC		6163951	1					
ANR	6164083	Identifier	CENTRAL_MAGIC		6163951	2					
ANR	6164084	Argument	4		6163951	2					
ANR	6164085	PrimaryExpression	4		6163951	0					
ANR	6164086	PrimaryExpression	0		6163951	1					
ANR	6164087	CompoundStatement		31:68:636:636	6163951	1					
ANR	6164088	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"	362:1:8948:8986	6163951	0	True				
ANR	6164089	CallExpression	"_zip_error_set ( error , ZIP_ER_NOZIP , 0 )"		6163951	0					
ANR	6164090	Callee	_zip_error_set		6163951	0					
ANR	6164091	Identifier	_zip_error_set		6163951	0					
ANR	6164092	ArgumentList	error		6163951	1					
ANR	6164093	Argument	error		6163951	0					
ANR	6164094	Identifier	error		6163951	0					
ANR	6164095	Argument	ZIP_ER_NOZIP		6163951	1					
ANR	6164096	Identifier	ZIP_ER_NOZIP		6163951	0					
ANR	6164097	Argument	0		6163951	2					
ANR	6164098	PrimaryExpression	0		6163951	0					
ANR	6164099	ReturnStatement	return - 1 ;	363:1:8989:8998	6163951	1	True				
ANR	6164100	UnaryOperationExpression	- 1		6163951	0					
ANR	6164101	UnaryOperator	-		6163951	0					
ANR	6164102	PrimaryExpression	1		6163951	1					
ANR	6164103	ExpressionStatement	cur += 4	365:4:9010:9018	6163951	9	True				
ANR	6164104	AssignmentExpression	cur += 4		6163951	0		+=			
ANR	6164105	Identifier	cur		6163951	0					
ANR	6164106	PrimaryExpression	4		6163951	1					
ANR	6164107	ExpressionStatement	_zip_dirent_init ( zde )	370:4:9074:9095	6163951	10	True				
ANR	6164108	CallExpression	_zip_dirent_init ( zde )		6163951	0					
ANR	6164109	Callee	_zip_dirent_init		6163951	0					
ANR	6164110	Identifier	_zip_dirent_init		6163951	0					
ANR	6164111	ArgumentList	zde		6163951	1					
ANR	6164112	Argument	zde		6163951	0					
ANR	6164113	Identifier	zde		6163951	0					
ANR	6164114	IfStatement	if ( ! local )		6163951	11					
ANR	6164115	Condition	! local	371:8:9105:9110	6163951	0	True				
ANR	6164116	UnaryOperationExpression	! local		6163951	0					
ANR	6164117	UnaryOperator	!		6163951	0					
ANR	6164118	Identifier	local		6163951	1					
ANR	6164119	ExpressionStatement	zde -> version_madeby = _zip_read2 ( & cur )	372:1:9114:9152	6163951	1	True				
ANR	6164120	AssignmentExpression	zde -> version_madeby = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164121	PtrMemberAccess	zde -> version_madeby		6163951	0					
ANR	6164122	Identifier	zde		6163951	0					
ANR	6164123	Identifier	version_madeby		6163951	1					
ANR	6164124	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164125	Callee	_zip_read2		6163951	0					
ANR	6164126	Identifier	_zip_read2		6163951	0					
ANR	6164127	ArgumentList	& cur		6163951	1					
ANR	6164128	Argument	& cur		6163951	0					
ANR	6164129	UnaryOperationExpression	& cur		6163951	0					
ANR	6164130	UnaryOperator	&		6163951	0					
ANR	6164131	Identifier	cur		6163951	1					
ANR	6164132	ElseStatement	else		6163951	0					
ANR	6164133	ExpressionStatement	zde -> version_madeby = 0	374:1:9164:9187	6163951	0	True				
ANR	6164134	AssignmentExpression	zde -> version_madeby = 0		6163951	0		=			
ANR	6164135	PtrMemberAccess	zde -> version_madeby		6163951	0					
ANR	6164136	Identifier	zde		6163951	0					
ANR	6164137	Identifier	version_madeby		6163951	1					
ANR	6164138	PrimaryExpression	0		6163951	1					
ANR	6164139	ExpressionStatement	zde -> version_needed = _zip_read2 ( & cur )	375:4:9193:9231	6163951	12	True				
ANR	6164140	AssignmentExpression	zde -> version_needed = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164141	PtrMemberAccess	zde -> version_needed		6163951	0					
ANR	6164142	Identifier	zde		6163951	0					
ANR	6164143	Identifier	version_needed		6163951	1					
ANR	6164144	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164145	Callee	_zip_read2		6163951	0					
ANR	6164146	Identifier	_zip_read2		6163951	0					
ANR	6164147	ArgumentList	& cur		6163951	1					
ANR	6164148	Argument	& cur		6163951	0					
ANR	6164149	UnaryOperationExpression	& cur		6163951	0					
ANR	6164150	UnaryOperator	&		6163951	0					
ANR	6164151	Identifier	cur		6163951	1					
ANR	6164152	ExpressionStatement	zde -> bitflags = _zip_read2 ( & cur )	376:4:9237:9269	6163951	13	True				
ANR	6164153	AssignmentExpression	zde -> bitflags = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164154	PtrMemberAccess	zde -> bitflags		6163951	0					
ANR	6164155	Identifier	zde		6163951	0					
ANR	6164156	Identifier	bitflags		6163951	1					
ANR	6164157	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164158	Callee	_zip_read2		6163951	0					
ANR	6164159	Identifier	_zip_read2		6163951	0					
ANR	6164160	ArgumentList	& cur		6163951	1					
ANR	6164161	Argument	& cur		6163951	0					
ANR	6164162	UnaryOperationExpression	& cur		6163951	0					
ANR	6164163	UnaryOperator	&		6163951	0					
ANR	6164164	Identifier	cur		6163951	1					
ANR	6164165	ExpressionStatement	zde -> comp_method = _zip_read2 ( & cur )	377:4:9275:9310	6163951	14	True				
ANR	6164166	AssignmentExpression	zde -> comp_method = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164167	PtrMemberAccess	zde -> comp_method		6163951	0					
ANR	6164168	Identifier	zde		6163951	0					
ANR	6164169	Identifier	comp_method		6163951	1					
ANR	6164170	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164171	Callee	_zip_read2		6163951	0					
ANR	6164172	Identifier	_zip_read2		6163951	0					
ANR	6164173	ArgumentList	& cur		6163951	1					
ANR	6164174	Argument	& cur		6163951	0					
ANR	6164175	UnaryOperationExpression	& cur		6163951	0					
ANR	6164176	UnaryOperator	&		6163951	0					
ANR	6164177	Identifier	cur		6163951	1					
ANR	6164178	ExpressionStatement	dostime = _zip_read2 ( & cur )	380:4:9349:9375	6163951	15	True				
ANR	6164179	AssignmentExpression	dostime = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164180	Identifier	dostime		6163951	0					
ANR	6164181	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164182	Callee	_zip_read2		6163951	0					
ANR	6164183	Identifier	_zip_read2		6163951	0					
ANR	6164184	ArgumentList	& cur		6163951	1					
ANR	6164185	Argument	& cur		6163951	0					
ANR	6164186	UnaryOperationExpression	& cur		6163951	0					
ANR	6164187	UnaryOperator	&		6163951	0					
ANR	6164188	Identifier	cur		6163951	1					
ANR	6164189	ExpressionStatement	dosdate = _zip_read2 ( & cur )	381:4:9381:9407	6163951	16	True				
ANR	6164190	AssignmentExpression	dosdate = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164191	Identifier	dosdate		6163951	0					
ANR	6164192	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164193	Callee	_zip_read2		6163951	0					
ANR	6164194	Identifier	_zip_read2		6163951	0					
ANR	6164195	ArgumentList	& cur		6163951	1					
ANR	6164196	Argument	& cur		6163951	0					
ANR	6164197	UnaryOperationExpression	& cur		6163951	0					
ANR	6164198	UnaryOperator	&		6163951	0					
ANR	6164199	Identifier	cur		6163951	1					
ANR	6164200	ExpressionStatement	"zde -> last_mod = _zip_d2u_time ( dostime , dosdate )"	382:4:9413:9460	6163951	17	True				
ANR	6164201	AssignmentExpression	"zde -> last_mod = _zip_d2u_time ( dostime , dosdate )"		6163951	0		=			
ANR	6164202	PtrMemberAccess	zde -> last_mod		6163951	0					
ANR	6164203	Identifier	zde		6163951	0					
ANR	6164204	Identifier	last_mod		6163951	1					
ANR	6164205	CallExpression	"_zip_d2u_time ( dostime , dosdate )"		6163951	1					
ANR	6164206	Callee	_zip_d2u_time		6163951	0					
ANR	6164207	Identifier	_zip_d2u_time		6163951	0					
ANR	6164208	ArgumentList	dostime		6163951	1					
ANR	6164209	Argument	dostime		6163951	0					
ANR	6164210	Identifier	dostime		6163951	0					
ANR	6164211	Argument	dosdate		6163951	1					
ANR	6164212	Identifier	dosdate		6163951	0					
ANR	6164213	ExpressionStatement	zde -> crc = _zip_read4 ( & cur )	384:4:9471:9498	6163951	18	True				
ANR	6164214	AssignmentExpression	zde -> crc = _zip_read4 ( & cur )		6163951	0		=			
ANR	6164215	PtrMemberAccess	zde -> crc		6163951	0					
ANR	6164216	Identifier	zde		6163951	0					
ANR	6164217	Identifier	crc		6163951	1					
ANR	6164218	CallExpression	_zip_read4 ( & cur )		6163951	1					
ANR	6164219	Callee	_zip_read4		6163951	0					
ANR	6164220	Identifier	_zip_read4		6163951	0					
ANR	6164221	ArgumentList	& cur		6163951	1					
ANR	6164222	Argument	& cur		6163951	0					
ANR	6164223	UnaryOperationExpression	& cur		6163951	0					
ANR	6164224	UnaryOperator	&		6163951	0					
ANR	6164225	Identifier	cur		6163951	1					
ANR	6164226	ExpressionStatement	zde -> comp_size = _zip_read4 ( & cur )	385:4:9504:9537	6163951	19	True				
ANR	6164227	AssignmentExpression	zde -> comp_size = _zip_read4 ( & cur )		6163951	0		=			
ANR	6164228	PtrMemberAccess	zde -> comp_size		6163951	0					
ANR	6164229	Identifier	zde		6163951	0					
ANR	6164230	Identifier	comp_size		6163951	1					
ANR	6164231	CallExpression	_zip_read4 ( & cur )		6163951	1					
ANR	6164232	Callee	_zip_read4		6163951	0					
ANR	6164233	Identifier	_zip_read4		6163951	0					
ANR	6164234	ArgumentList	& cur		6163951	1					
ANR	6164235	Argument	& cur		6163951	0					
ANR	6164236	UnaryOperationExpression	& cur		6163951	0					
ANR	6164237	UnaryOperator	&		6163951	0					
ANR	6164238	Identifier	cur		6163951	1					
ANR	6164239	ExpressionStatement	zde -> uncomp_size = _zip_read4 ( & cur )	386:4:9543:9578	6163951	20	True				
ANR	6164240	AssignmentExpression	zde -> uncomp_size = _zip_read4 ( & cur )		6163951	0		=			
ANR	6164241	PtrMemberAccess	zde -> uncomp_size		6163951	0					
ANR	6164242	Identifier	zde		6163951	0					
ANR	6164243	Identifier	uncomp_size		6163951	1					
ANR	6164244	CallExpression	_zip_read4 ( & cur )		6163951	1					
ANR	6164245	Callee	_zip_read4		6163951	0					
ANR	6164246	Identifier	_zip_read4		6163951	0					
ANR	6164247	ArgumentList	& cur		6163951	1					
ANR	6164248	Argument	& cur		6163951	0					
ANR	6164249	UnaryOperationExpression	& cur		6163951	0					
ANR	6164250	UnaryOperator	&		6163951	0					
ANR	6164251	Identifier	cur		6163951	1					
ANR	6164252	ExpressionStatement	filename_len = _zip_read2 ( & cur )	388:4:9589:9620	6163951	21	True				
ANR	6164253	AssignmentExpression	filename_len = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164254	Identifier	filename_len		6163951	0					
ANR	6164255	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164256	Callee	_zip_read2		6163951	0					
ANR	6164257	Identifier	_zip_read2		6163951	0					
ANR	6164258	ArgumentList	& cur		6163951	1					
ANR	6164259	Argument	& cur		6163951	0					
ANR	6164260	UnaryOperationExpression	& cur		6163951	0					
ANR	6164261	UnaryOperator	&		6163951	0					
ANR	6164262	Identifier	cur		6163951	1					
ANR	6164263	ExpressionStatement	ef_len = _zip_read2 ( & cur )	389:4:9626:9651	6163951	22	True				
ANR	6164264	AssignmentExpression	ef_len = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164265	Identifier	ef_len		6163951	0					
ANR	6164266	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164267	Callee	_zip_read2		6163951	0					
ANR	6164268	Identifier	_zip_read2		6163951	0					
ANR	6164269	ArgumentList	& cur		6163951	1					
ANR	6164270	Argument	& cur		6163951	0					
ANR	6164271	UnaryOperationExpression	& cur		6163951	0					
ANR	6164272	UnaryOperator	&		6163951	0					
ANR	6164273	Identifier	cur		6163951	1					
ANR	6164274	IfStatement	if ( local )		6163951	23					
ANR	6164275	Condition	local	391:8:9666:9670	6163951	0	True				
ANR	6164276	Identifier	local		6163951	0					
ANR	6164277	CompoundStatement		61:15:1364:1364	6163951	1					
ANR	6164278	ExpressionStatement	comment_len = 0	392:1:9676:9691	6163951	0	True				
ANR	6164279	AssignmentExpression	comment_len = 0		6163951	0		=			
ANR	6164280	Identifier	comment_len		6163951	0					
ANR	6164281	PrimaryExpression	0		6163951	1					
ANR	6164282	ExpressionStatement	zde -> disk_number = 0	393:1:9694:9714	6163951	1	True				
ANR	6164283	AssignmentExpression	zde -> disk_number = 0		6163951	0		=			
ANR	6164284	PtrMemberAccess	zde -> disk_number		6163951	0					
ANR	6164285	Identifier	zde		6163951	0					
ANR	6164286	Identifier	disk_number		6163951	1					
ANR	6164287	PrimaryExpression	0		6163951	1					
ANR	6164288	ExpressionStatement	zde -> int_attrib = 0	394:1:9717:9736	6163951	2	True				
ANR	6164289	AssignmentExpression	zde -> int_attrib = 0		6163951	0		=			
ANR	6164290	PtrMemberAccess	zde -> int_attrib		6163951	0					
ANR	6164291	Identifier	zde		6163951	0					
ANR	6164292	Identifier	int_attrib		6163951	1					
ANR	6164293	PrimaryExpression	0		6163951	1					
ANR	6164294	ExpressionStatement	zde -> ext_attrib = 0	395:1:9739:9758	6163951	3	True				
ANR	6164295	AssignmentExpression	zde -> ext_attrib = 0		6163951	0		=			
ANR	6164296	PtrMemberAccess	zde -> ext_attrib		6163951	0					
ANR	6164297	Identifier	zde		6163951	0					
ANR	6164298	Identifier	ext_attrib		6163951	1					
ANR	6164299	PrimaryExpression	0		6163951	1					
ANR	6164300	ExpressionStatement	zde -> offset = 0	396:1:9761:9776	6163951	4	True				
ANR	6164301	AssignmentExpression	zde -> offset = 0		6163951	0		=			
ANR	6164302	PtrMemberAccess	zde -> offset		6163951	0					
ANR	6164303	Identifier	zde		6163951	0					
ANR	6164304	Identifier	offset		6163951	1					
ANR	6164305	PrimaryExpression	0		6163951	1					
ANR	6164306	ElseStatement	else		6163951	0					
ANR	6164307	CompoundStatement		67:11:1480:1480	6163951	0					
ANR	6164308	ExpressionStatement	comment_len = _zip_read2 ( & cur )	398:1:9792:9822	6163951	0	True				
ANR	6164309	AssignmentExpression	comment_len = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164310	Identifier	comment_len		6163951	0					
ANR	6164311	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164312	Callee	_zip_read2		6163951	0					
ANR	6164313	Identifier	_zip_read2		6163951	0					
ANR	6164314	ArgumentList	& cur		6163951	1					
ANR	6164315	Argument	& cur		6163951	0					
ANR	6164316	UnaryOperationExpression	& cur		6163951	0					
ANR	6164317	UnaryOperator	&		6163951	0					
ANR	6164318	Identifier	cur		6163951	1					
ANR	6164319	ExpressionStatement	zde -> disk_number = _zip_read2 ( & cur )	399:1:9825:9860	6163951	1	True				
ANR	6164320	AssignmentExpression	zde -> disk_number = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164321	PtrMemberAccess	zde -> disk_number		6163951	0					
ANR	6164322	Identifier	zde		6163951	0					
ANR	6164323	Identifier	disk_number		6163951	1					
ANR	6164324	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164325	Callee	_zip_read2		6163951	0					
ANR	6164326	Identifier	_zip_read2		6163951	0					
ANR	6164327	ArgumentList	& cur		6163951	1					
ANR	6164328	Argument	& cur		6163951	0					
ANR	6164329	UnaryOperationExpression	& cur		6163951	0					
ANR	6164330	UnaryOperator	&		6163951	0					
ANR	6164331	Identifier	cur		6163951	1					
ANR	6164332	ExpressionStatement	zde -> int_attrib = _zip_read2 ( & cur )	400:1:9863:9897	6163951	2	True				
ANR	6164333	AssignmentExpression	zde -> int_attrib = _zip_read2 ( & cur )		6163951	0		=			
ANR	6164334	PtrMemberAccess	zde -> int_attrib		6163951	0					
ANR	6164335	Identifier	zde		6163951	0					
ANR	6164336	Identifier	int_attrib		6163951	1					
ANR	6164337	CallExpression	_zip_read2 ( & cur )		6163951	1					
ANR	6164338	Callee	_zip_read2		6163951	0					
ANR	6164339	Identifier	_zip_read2		6163951	0					
ANR	6164340	ArgumentList	& cur		6163951	1					
ANR	6164341	Argument	& cur		6163951	0					
ANR	6164342	UnaryOperationExpression	& cur		6163951	0					
ANR	6164343	UnaryOperator	&		6163951	0					
ANR	6164344	Identifier	cur		6163951	1					
ANR	6164345	ExpressionStatement	zde -> ext_attrib = _zip_read4 ( & cur )	401:1:9900:9934	6163951	3	True				
ANR	6164346	AssignmentExpression	zde -> ext_attrib = _zip_read4 ( & cur )		6163951	0		=			
ANR	6164347	PtrMemberAccess	zde -> ext_attrib		6163951	0					
ANR	6164348	Identifier	zde		6163951	0					
ANR	6164349	Identifier	ext_attrib		6163951	1					
ANR	6164350	CallExpression	_zip_read4 ( & cur )		6163951	1					
ANR	6164351	Callee	_zip_read4		6163951	0					
ANR	6164352	Identifier	_zip_read4		6163951	0					
ANR	6164353	ArgumentList	& cur		6163951	1					
ANR	6164354	Argument	& cur		6163951	0					
ANR	6164355	UnaryOperationExpression	& cur		6163951	0					
ANR	6164356	UnaryOperator	&		6163951	0					
ANR	6164357	Identifier	cur		6163951	1					
ANR	6164358	ExpressionStatement	zde -> offset = _zip_read4 ( & cur )	402:1:9937:9967	6163951	4	True				
ANR	6164359	AssignmentExpression	zde -> offset = _zip_read4 ( & cur )		6163951	0		=			
ANR	6164360	PtrMemberAccess	zde -> offset		6163951	0					
ANR	6164361	Identifier	zde		6163951	0					
ANR	6164362	Identifier	offset		6163951	1					
ANR	6164363	CallExpression	_zip_read4 ( & cur )		6163951	1					
ANR	6164364	Callee	_zip_read4		6163951	0					
ANR	6164365	Identifier	_zip_read4		6163951	0					
ANR	6164366	ArgumentList	& cur		6163951	1					
ANR	6164367	Argument	& cur		6163951	0					
ANR	6164368	UnaryOperationExpression	& cur		6163951	0					
ANR	6164369	UnaryOperator	&		6163951	0					
ANR	6164370	Identifier	cur		6163951	1					
ANR	6164371	ExpressionStatement	zde -> filename = NULL	405:4:9980:10000	6163951	24	True				
ANR	6164372	AssignmentExpression	zde -> filename = NULL		6163951	0		=			
ANR	6164373	PtrMemberAccess	zde -> filename		6163951	0					
ANR	6164374	Identifier	zde		6163951	0					
ANR	6164375	Identifier	filename		6163951	1					
ANR	6164376	Identifier	NULL		6163951	1					
ANR	6164377	ExpressionStatement	zde -> extra_fields = NULL	406:4:10006:10030	6163951	25	True				
ANR	6164378	AssignmentExpression	zde -> extra_fields = NULL		6163951	0		=			
ANR	6164379	PtrMemberAccess	zde -> extra_fields		6163951	0					
ANR	6164380	Identifier	zde		6163951	0					
ANR	6164381	Identifier	extra_fields		6163951	1					
ANR	6164382	Identifier	NULL		6163951	1					
ANR	6164383	ExpressionStatement	zde -> comment = NULL	407:4:10036:10055	6163951	26	True				
ANR	6164384	AssignmentExpression	zde -> comment = NULL		6163951	0		=			
ANR	6164385	PtrMemberAccess	zde -> comment		6163951	0					
ANR	6164386	Identifier	zde		6163951	0					
ANR	6164387	Identifier	comment		6163951	1					
ANR	6164388	Identifier	NULL		6163951	1					
ANR	6164389	ExpressionStatement	size += filename_len + ef_len + comment_len	409:4:10062:10101	6163951	27	True				
ANR	6164390	AssignmentExpression	size += filename_len + ef_len + comment_len		6163951	0		+=			
ANR	6164391	Identifier	size		6163951	0					
ANR	6164392	AdditiveExpression	filename_len + ef_len + comment_len		6163951	1		+			
ANR	6164393	Identifier	filename_len		6163951	0					
ANR	6164394	AdditiveExpression	ef_len + comment_len		6163951	1		+			
ANR	6164395	Identifier	ef_len		6163951	0					
ANR	6164396	Identifier	comment_len		6163951	1					
ANR	6164397	IfStatement	if ( leftp && ( * leftp < size ) )		6163951	28					
ANR	6164398	Condition	leftp && ( * leftp < size )	411:8:10112:10135	6163951	0	True				
ANR	6164399	AndExpression	leftp && ( * leftp < size )		6163951	0		&&			
ANR	6164400	Identifier	leftp		6163951	0					
ANR	6164401	RelationalExpression	* leftp < size		6163951	1		<			
ANR	6164402	UnaryOperationExpression	* leftp		6163951	0					
ANR	6164403	UnaryOperator	*		6163951	0					
ANR	6164404	Identifier	leftp		6163951	1					
ANR	6164405	Identifier	size		6163951	1					
ANR	6164406	CompoundStatement		81:34:1829:1829	6163951	1					
ANR	6164407	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	412:1:10141:10180	6163951	0	True				
ANR	6164408	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6163951	0					
ANR	6164409	Callee	_zip_error_set		6163951	0					
ANR	6164410	Identifier	_zip_error_set		6163951	0					
ANR	6164411	ArgumentList	error		6163951	1					
ANR	6164412	Argument	error		6163951	0					
ANR	6164413	Identifier	error		6163951	0					
ANR	6164414	Argument	ZIP_ER_INCONS		6163951	1					
ANR	6164415	Identifier	ZIP_ER_INCONS		6163951	0					
ANR	6164416	Argument	0		6163951	2					
ANR	6164417	PrimaryExpression	0		6163951	0					
ANR	6164418	ReturnStatement	return - 1 ;	413:1:10183:10192	6163951	1	True				
ANR	6164419	UnaryOperationExpression	- 1		6163951	0					
ANR	6164420	UnaryOperator	-		6163951	0					
ANR	6164421	PrimaryExpression	1		6163951	1					
ANR	6164422	IfStatement	if ( filename_len )		6163951	29					
ANR	6164423	Condition	filename_len	416:8:10209:10220	6163951	0	True				
ANR	6164424	Identifier	filename_len		6163951	0					
ANR	6164425	CompoundStatement		86:22:1914:1914	6163951	1					
ANR	6164426	ExpressionStatement	"zde -> filename = _zip_read_string ( bufp ? & cur : NULL , fp , filename_len , 1 , error )"	417:1:10226:10306	6163951	0	True				
ANR	6164427	AssignmentExpression	"zde -> filename = _zip_read_string ( bufp ? & cur : NULL , fp , filename_len , 1 , error )"		6163951	0		=			
ANR	6164428	PtrMemberAccess	zde -> filename		6163951	0					
ANR	6164429	Identifier	zde		6163951	0					
ANR	6164430	Identifier	filename		6163951	1					
ANR	6164431	CallExpression	"_zip_read_string ( bufp ? & cur : NULL , fp , filename_len , 1 , error )"		6163951	1					
ANR	6164432	Callee	_zip_read_string		6163951	0					
ANR	6164433	Identifier	_zip_read_string		6163951	0					
ANR	6164434	ArgumentList	bufp ? & cur : NULL		6163951	1					
ANR	6164435	Argument	bufp ? & cur : NULL		6163951	0					
ANR	6164436	ConditionalExpression	bufp ? & cur : NULL		6163951	0					
ANR	6164437	Condition	bufp		6163951	0					
ANR	6164438	Identifier	bufp		6163951	0					
ANR	6164439	UnaryOperationExpression	& cur		6163951	1					
ANR	6164440	UnaryOperator	&		6163951	0					
ANR	6164441	Identifier	cur		6163951	1					
ANR	6164442	Identifier	NULL		6163951	2					
ANR	6164443	Argument	fp		6163951	1					
ANR	6164444	Identifier	fp		6163951	0					
ANR	6164445	Argument	filename_len		6163951	2					
ANR	6164446	Identifier	filename_len		6163951	0					
ANR	6164447	Argument	1		6163951	3					
ANR	6164448	PrimaryExpression	1		6163951	0					
ANR	6164449	Argument	error		6163951	4					
ANR	6164450	Identifier	error		6163951	0					
ANR	6164451	IfStatement	if ( ! zde -> filename )		6163951	1					
ANR	6164452	Condition	! zde -> filename	418:5:10313:10326	6163951	0	True				
ANR	6164453	UnaryOperationExpression	! zde -> filename		6163951	0					
ANR	6164454	UnaryOperator	!		6163951	0					
ANR	6164455	PtrMemberAccess	zde -> filename		6163951	1					
ANR	6164456	Identifier	zde		6163951	0					
ANR	6164457	Identifier	filename		6163951	1					
ANR	6164458	ReturnStatement	return - 1 ;	419:5:10334:10343	6163951	1	True				
ANR	6164459	UnaryOperationExpression	- 1		6163951	0					
ANR	6164460	UnaryOperator	-		6163951	0					
ANR	6164461	PrimaryExpression	1		6163951	1					
ANR	6164462	IfStatement	if ( zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8 )		6163951	2					
ANR	6164463	Condition	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8	421:5:10351:10389	6163951	0	True				
ANR	6164464	BitAndExpression	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8		6163951	0		&			
ANR	6164465	PtrMemberAccess	zde -> bitflags		6163951	0					
ANR	6164466	Identifier	zde		6163951	0					
ANR	6164467	Identifier	bitflags		6163951	1					
ANR	6164468	Identifier	ZIP_GPBF_ENCODING_UTF_8		6163951	1					
ANR	6164469	CompoundStatement		91:46:2083:2083	6163951	1					
ANR	6164470	IfStatement	"if ( _zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR )"		6163951	0					
ANR	6164471	Condition	"_zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"	422:9:10403:10483	6163951	0	True				
ANR	6164472	EqualityExpression	"_zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"		6163951	0		==			
ANR	6164473	CallExpression	"_zip_guess_encoding ( zde -> filename , ZIP_ENCODING_UTF8_KNOWN )"		6163951	0					
ANR	6164474	Callee	_zip_guess_encoding		6163951	0					
ANR	6164475	Identifier	_zip_guess_encoding		6163951	0					
ANR	6164476	ArgumentList	zde -> filename		6163951	1					
ANR	6164477	Argument	zde -> filename		6163951	0					
ANR	6164478	PtrMemberAccess	zde -> filename		6163951	0					
ANR	6164479	Identifier	zde		6163951	0					
ANR	6164480	Identifier	filename		6163951	1					
ANR	6164481	Argument	ZIP_ENCODING_UTF8_KNOWN		6163951	1					
ANR	6164482	Identifier	ZIP_ENCODING_UTF8_KNOWN		6163951	0					
ANR	6164483	Identifier	ZIP_ENCODING_ERROR		6163951	1					
ANR	6164484	CompoundStatement		92:92:2177:2177	6163951	1					
ANR	6164485	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	423:2:10490:10529	6163951	0	True				
ANR	6164486	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6163951	0					
ANR	6164487	Callee	_zip_error_set		6163951	0					
ANR	6164488	Identifier	_zip_error_set		6163951	0					
ANR	6164489	ArgumentList	error		6163951	1					
ANR	6164490	Argument	error		6163951	0					
ANR	6164491	Identifier	error		6163951	0					
ANR	6164492	Argument	ZIP_ER_INCONS		6163951	1					
ANR	6164493	Identifier	ZIP_ER_INCONS		6163951	0					
ANR	6164494	Argument	0		6163951	2					
ANR	6164495	PrimaryExpression	0		6163951	0					
ANR	6164496	ReturnStatement	return - 1 ;	424:2:10533:10542	6163951	1	True				
ANR	6164497	UnaryOperationExpression	- 1		6163951	0					
ANR	6164498	UnaryOperator	-		6163951	0					
ANR	6164499	PrimaryExpression	1		6163951	1					
ANR	6164500	IfStatement	if ( ef_len )		6163951	30					
ANR	6164501	Condition	ef_len	429:8:10569:10574	6163951	0	True				
ANR	6164502	Identifier	ef_len		6163951	0					
ANR	6164503	CompoundStatement		100:1:2271:2345	6163951	1					
ANR	6164504	IdentifierDeclStatement	"zip_uint8_t * ef = _zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error ) ;"	430:1:10580:10654	6163951	0	True				
ANR	6164505	IdentifierDecl	"* ef = _zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error )"		6163951	0					
ANR	6164506	IdentifierDeclType	zip_uint8_t *		6163951	0					
ANR	6164507	Identifier	ef		6163951	1					
ANR	6164508	AssignmentExpression	"* ef = _zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error )"		6163951	2		=			
ANR	6164509	Identifier	ef		6163951	0					
ANR	6164510	CallExpression	"_zip_read_data ( bufp ? & cur : NULL , fp , ef_len , 0 , error )"		6163951	1					
ANR	6164511	Callee	_zip_read_data		6163951	0					
ANR	6164512	Identifier	_zip_read_data		6163951	0					
ANR	6164513	ArgumentList	bufp ? & cur : NULL		6163951	1					
ANR	6164514	Argument	bufp ? & cur : NULL		6163951	0					
ANR	6164515	ConditionalExpression	bufp ? & cur : NULL		6163951	0					
ANR	6164516	Condition	bufp		6163951	0					
ANR	6164517	Identifier	bufp		6163951	0					
ANR	6164518	UnaryOperationExpression	& cur		6163951	1					
ANR	6164519	UnaryOperator	&		6163951	0					
ANR	6164520	Identifier	cur		6163951	1					
ANR	6164521	Identifier	NULL		6163951	2					
ANR	6164522	Argument	fp		6163951	1					
ANR	6164523	Identifier	fp		6163951	0					
ANR	6164524	Argument	ef_len		6163951	2					
ANR	6164525	Identifier	ef_len		6163951	0					
ANR	6164526	Argument	0		6163951	3					
ANR	6164527	PrimaryExpression	0		6163951	0					
ANR	6164528	Argument	error		6163951	4					
ANR	6164529	Identifier	error		6163951	0					
ANR	6164530	IfStatement	if ( ef == NULL )		6163951	1					
ANR	6164531	Condition	ef == NULL	432:5:10662:10671	6163951	0	True				
ANR	6164532	EqualityExpression	ef == NULL		6163951	0		==			
ANR	6164533	Identifier	ef		6163951	0					
ANR	6164534	Identifier	NULL		6163951	1					
ANR	6164535	ReturnStatement	return - 1 ;	433:5:10679:10688	6163951	1	True				
ANR	6164536	UnaryOperationExpression	- 1		6163951	0					
ANR	6164537	UnaryOperator	-		6163951	0					
ANR	6164538	PrimaryExpression	1		6163951	1					
ANR	6164539	IfStatement	"if ( ( zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ) == NULL )"		6163951	2					
ANR	6164540	Condition	"( zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ) == NULL"	434:5:10695:10793	6163951	0	True				
ANR	6164541	EqualityExpression	"( zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ) == NULL"		6163951	0		==			
ANR	6164542	AssignmentExpression	"zde -> extra_fields = _zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6163951	0		=			
ANR	6164543	PtrMemberAccess	zde -> extra_fields		6163951	0					
ANR	6164544	Identifier	zde		6163951	0					
ANR	6164545	Identifier	extra_fields		6163951	1					
ANR	6164546	CallExpression	"_zip_ef_parse ( ef , ef_len , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6163951	1					
ANR	6164547	Callee	_zip_ef_parse		6163951	0					
ANR	6164548	Identifier	_zip_ef_parse		6163951	0					
ANR	6164549	ArgumentList	ef		6163951	1					
ANR	6164550	Argument	ef		6163951	0					
ANR	6164551	Identifier	ef		6163951	0					
ANR	6164552	Argument	ef_len		6163951	1					
ANR	6164553	Identifier	ef_len		6163951	0					
ANR	6164554	Argument	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6163951	2					
ANR	6164555	ConditionalExpression	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6163951	0					
ANR	6164556	Condition	local		6163951	0					
ANR	6164557	Identifier	local		6163951	0					
ANR	6164558	Identifier	ZIP_EF_LOCAL		6163951	1					
ANR	6164559	Identifier	ZIP_EF_CENTRAL		6163951	2					
ANR	6164560	Argument	error		6163951	3					
ANR	6164561	Identifier	error		6163951	0					
ANR	6164562	Identifier	NULL		6163951	1					
ANR	6164563	CompoundStatement		104:106:2487:2487	6163951	1					
ANR	6164564	ExpressionStatement	free ( ef )	435:5:10803:10811	6163951	0	True				
ANR	6164565	CallExpression	free ( ef )		6163951	0					
ANR	6164566	Callee	free		6163951	0					
ANR	6164567	Identifier	free		6163951	0					
ANR	6164568	ArgumentList	ef		6163951	1					
ANR	6164569	Argument	ef		6163951	0					
ANR	6164570	Identifier	ef		6163951	0					
ANR	6164571	ReturnStatement	return - 1 ;	436:5:10818:10827	6163951	1	True				
ANR	6164572	UnaryOperationExpression	- 1		6163951	0					
ANR	6164573	UnaryOperator	-		6163951	0					
ANR	6164574	PrimaryExpression	1		6163951	1					
ANR	6164575	ExpressionStatement	free ( ef )	438:1:10833:10841	6163951	3	True				
ANR	6164576	CallExpression	free ( ef )		6163951	0					
ANR	6164577	Callee	free		6163951	0					
ANR	6164578	Identifier	free		6163951	0					
ANR	6164579	ArgumentList	ef		6163951	1					
ANR	6164580	Argument	ef		6163951	0					
ANR	6164581	Identifier	ef		6163951	0					
ANR	6164582	IfStatement	if ( local )		6163951	4					
ANR	6164583	Condition	local	439:5:10848:10852	6163951	0	True				
ANR	6164584	Identifier	local		6163951	0					
ANR	6164585	ExpressionStatement	zde -> local_extra_fields_read = 1	440:5:10860:10892	6163951	1	True				
ANR	6164586	AssignmentExpression	zde -> local_extra_fields_read = 1		6163951	0		=			
ANR	6164587	PtrMemberAccess	zde -> local_extra_fields_read		6163951	0					
ANR	6164588	Identifier	zde		6163951	0					
ANR	6164589	Identifier	local_extra_fields_read		6163951	1					
ANR	6164590	PrimaryExpression	1		6163951	1					
ANR	6164591	IfStatement	if ( comment_len )		6163951	31					
ANR	6164592	Condition	comment_len	443:8:10909:10919	6163951	0	True				
ANR	6164593	Identifier	comment_len		6163951	0					
ANR	6164594	CompoundStatement		113:21:2613:2613	6163951	1					
ANR	6164595	ExpressionStatement	"zde -> comment = _zip_read_string ( bufp ? & cur : NULL , fp , comment_len , 0 , error )"	444:1:10925:11003	6163951	0	True				
ANR	6164596	AssignmentExpression	"zde -> comment = _zip_read_string ( bufp ? & cur : NULL , fp , comment_len , 0 , error )"		6163951	0		=			
ANR	6164597	PtrMemberAccess	zde -> comment		6163951	0					
ANR	6164598	Identifier	zde		6163951	0					
ANR	6164599	Identifier	comment		6163951	1					
ANR	6164600	CallExpression	"_zip_read_string ( bufp ? & cur : NULL , fp , comment_len , 0 , error )"		6163951	1					
ANR	6164601	Callee	_zip_read_string		6163951	0					
ANR	6164602	Identifier	_zip_read_string		6163951	0					
ANR	6164603	ArgumentList	bufp ? & cur : NULL		6163951	1					
ANR	6164604	Argument	bufp ? & cur : NULL		6163951	0					
ANR	6164605	ConditionalExpression	bufp ? & cur : NULL		6163951	0					
ANR	6164606	Condition	bufp		6163951	0					
ANR	6164607	Identifier	bufp		6163951	0					
ANR	6164608	UnaryOperationExpression	& cur		6163951	1					
ANR	6164609	UnaryOperator	&		6163951	0					
ANR	6164610	Identifier	cur		6163951	1					
ANR	6164611	Identifier	NULL		6163951	2					
ANR	6164612	Argument	fp		6163951	1					
ANR	6164613	Identifier	fp		6163951	0					
ANR	6164614	Argument	comment_len		6163951	2					
ANR	6164615	Identifier	comment_len		6163951	0					
ANR	6164616	Argument	0		6163951	3					
ANR	6164617	PrimaryExpression	0		6163951	0					
ANR	6164618	Argument	error		6163951	4					
ANR	6164619	Identifier	error		6163951	0					
ANR	6164620	IfStatement	if ( ! zde -> comment )		6163951	1					
ANR	6164621	Condition	! zde -> comment	445:5:11010:11022	6163951	0	True				
ANR	6164622	UnaryOperationExpression	! zde -> comment		6163951	0					
ANR	6164623	UnaryOperator	!		6163951	0					
ANR	6164624	PtrMemberAccess	zde -> comment		6163951	1					
ANR	6164625	Identifier	zde		6163951	0					
ANR	6164626	Identifier	comment		6163951	1					
ANR	6164627	ReturnStatement	return - 1 ;	446:5:11030:11039	6163951	1	True				
ANR	6164628	UnaryOperationExpression	- 1		6163951	0					
ANR	6164629	UnaryOperator	-		6163951	0					
ANR	6164630	PrimaryExpression	1		6163951	1					
ANR	6164631	IfStatement	if ( zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8 )		6163951	2					
ANR	6164632	Condition	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8	448:5:11047:11085	6163951	0	True				
ANR	6164633	BitAndExpression	zde -> bitflags & ZIP_GPBF_ENCODING_UTF_8		6163951	0		&			
ANR	6164634	PtrMemberAccess	zde -> bitflags		6163951	0					
ANR	6164635	Identifier	zde		6163951	0					
ANR	6164636	Identifier	bitflags		6163951	1					
ANR	6164637	Identifier	ZIP_GPBF_ENCODING_UTF_8		6163951	1					
ANR	6164638	CompoundStatement		118:46:2779:2779	6163951	1					
ANR	6164639	IfStatement	"if ( _zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR )"		6163951	0					
ANR	6164640	Condition	"_zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"	449:9:11099:11178	6163951	0	True				
ANR	6164641	EqualityExpression	"_zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN ) == ZIP_ENCODING_ERROR"		6163951	0		==			
ANR	6164642	CallExpression	"_zip_guess_encoding ( zde -> comment , ZIP_ENCODING_UTF8_KNOWN )"		6163951	0					
ANR	6164643	Callee	_zip_guess_encoding		6163951	0					
ANR	6164644	Identifier	_zip_guess_encoding		6163951	0					
ANR	6164645	ArgumentList	zde -> comment		6163951	1					
ANR	6164646	Argument	zde -> comment		6163951	0					
ANR	6164647	PtrMemberAccess	zde -> comment		6163951	0					
ANR	6164648	Identifier	zde		6163951	0					
ANR	6164649	Identifier	comment		6163951	1					
ANR	6164650	Argument	ZIP_ENCODING_UTF8_KNOWN		6163951	1					
ANR	6164651	Identifier	ZIP_ENCODING_UTF8_KNOWN		6163951	0					
ANR	6164652	Identifier	ZIP_ENCODING_ERROR		6163951	1					
ANR	6164653	CompoundStatement		119:91:2872:2872	6163951	1					
ANR	6164654	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	450:2:11185:11224	6163951	0	True				
ANR	6164655	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6163951	0					
ANR	6164656	Callee	_zip_error_set		6163951	0					
ANR	6164657	Identifier	_zip_error_set		6163951	0					
ANR	6164658	ArgumentList	error		6163951	1					
ANR	6164659	Argument	error		6163951	0					
ANR	6164660	Identifier	error		6163951	0					
ANR	6164661	Argument	ZIP_ER_INCONS		6163951	1					
ANR	6164662	Identifier	ZIP_ER_INCONS		6163951	0					
ANR	6164663	Argument	0		6163951	2					
ANR	6164664	PrimaryExpression	0		6163951	0					
ANR	6164665	ReturnStatement	return - 1 ;	451:2:11228:11237	6163951	1	True				
ANR	6164666	UnaryOperationExpression	- 1		6163951	0					
ANR	6164667	UnaryOperator	-		6163951	0					
ANR	6164668	PrimaryExpression	1		6163951	1					
ANR	6164669	ExpressionStatement	"zde -> filename = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_NAME , zde -> filename )"	456:4:11260:11343	6163951	32	True				
ANR	6164670	AssignmentExpression	"zde -> filename = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_NAME , zde -> filename )"		6163951	0		=			
ANR	6164671	PtrMemberAccess	zde -> filename		6163951	0					
ANR	6164672	Identifier	zde		6163951	0					
ANR	6164673	Identifier	filename		6163951	1					
ANR	6164674	CallExpression	"_zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_NAME , zde -> filename )"		6163951	1					
ANR	6164675	Callee	_zip_dirent_process_ef_utf_8		6163951	0					
ANR	6164676	Identifier	_zip_dirent_process_ef_utf_8		6163951	0					
ANR	6164677	ArgumentList	zde		6163951	1					
ANR	6164678	Argument	zde		6163951	0					
ANR	6164679	Identifier	zde		6163951	0					
ANR	6164680	Argument	ZIP_EF_UTF_8_NAME		6163951	1					
ANR	6164681	Identifier	ZIP_EF_UTF_8_NAME		6163951	0					
ANR	6164682	Argument	zde -> filename		6163951	2					
ANR	6164683	PtrMemberAccess	zde -> filename		6163951	0					
ANR	6164684	Identifier	zde		6163951	0					
ANR	6164685	Identifier	filename		6163951	1					
ANR	6164686	ExpressionStatement	"zde -> comment = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_COMMENT , zde -> comment )"	457:4:11349:11433	6163951	33	True				
ANR	6164687	AssignmentExpression	"zde -> comment = _zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_COMMENT , zde -> comment )"		6163951	0		=			
ANR	6164688	PtrMemberAccess	zde -> comment		6163951	0					
ANR	6164689	Identifier	zde		6163951	0					
ANR	6164690	Identifier	comment		6163951	1					
ANR	6164691	CallExpression	"_zip_dirent_process_ef_utf_8 ( zde , ZIP_EF_UTF_8_COMMENT , zde -> comment )"		6163951	1					
ANR	6164692	Callee	_zip_dirent_process_ef_utf_8		6163951	0					
ANR	6164693	Identifier	_zip_dirent_process_ef_utf_8		6163951	0					
ANR	6164694	ArgumentList	zde		6163951	1					
ANR	6164695	Argument	zde		6163951	0					
ANR	6164696	Identifier	zde		6163951	0					
ANR	6164697	Argument	ZIP_EF_UTF_8_COMMENT		6163951	1					
ANR	6164698	Identifier	ZIP_EF_UTF_8_COMMENT		6163951	0					
ANR	6164699	Argument	zde -> comment		6163951	2					
ANR	6164700	PtrMemberAccess	zde -> comment		6163951	0					
ANR	6164701	Identifier	zde		6163951	0					
ANR	6164702	Identifier	comment		6163951	1					
ANR	6164703	IfStatement	if ( zde -> uncomp_size == ZIP_UINT32_MAX || zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX )		6163951	34					
ANR	6164704	Condition	zde -> uncomp_size == ZIP_UINT32_MAX || zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX	461:8:11461:11563	6163951	0	True				
ANR	6164705	OrExpression	zde -> uncomp_size == ZIP_UINT32_MAX || zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX		6163951	0		||			
ANR	6164706	EqualityExpression	zde -> uncomp_size == ZIP_UINT32_MAX		6163951	0		==			
ANR	6164707	PtrMemberAccess	zde -> uncomp_size		6163951	0					
ANR	6164708	Identifier	zde		6163951	0					
ANR	6164709	Identifier	uncomp_size		6163951	1					
ANR	6164710	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164711	OrExpression	zde -> comp_size == ZIP_UINT32_MAX || zde -> offset == ZIP_UINT32_MAX		6163951	1		||			
ANR	6164712	EqualityExpression	zde -> comp_size == ZIP_UINT32_MAX		6163951	0		==			
ANR	6164713	PtrMemberAccess	zde -> comp_size		6163951	0					
ANR	6164714	Identifier	zde		6163951	0					
ANR	6164715	Identifier	comp_size		6163951	1					
ANR	6164716	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164717	EqualityExpression	zde -> offset == ZIP_UINT32_MAX		6163951	1		==			
ANR	6164718	PtrMemberAccess	zde -> offset		6163951	0					
ANR	6164719	Identifier	zde		6163951	0					
ANR	6164720	Identifier	offset		6163951	1					
ANR	6164721	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164722	CompoundStatement		133:1:3295:3428	6163951	1					
ANR	6164723	IdentifierDeclStatement	"zip_uint16_t got_len , needed_len ;"	462:1:11569:11601	6163951	0	True				
ANR	6164724	IdentifierDecl	got_len		6163951	0					
ANR	6164725	IdentifierDeclType	zip_uint16_t		6163951	0					
ANR	6164726	Identifier	got_len		6163951	1					
ANR	6164727	IdentifierDecl	needed_len		6163951	1					
ANR	6164728	IdentifierDeclType	zip_uint16_t		6163951	0					
ANR	6164729	Identifier	needed_len		6163951	1					
ANR	6164730	IdentifierDeclStatement	"const zip_uint8_t * ef = _zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error ) ;"	463:1:11604:11737	6163951	1	True				
ANR	6164731	IdentifierDecl	"* ef = _zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6163951	0					
ANR	6164732	IdentifierDeclType	const zip_uint8_t *		6163951	0					
ANR	6164733	Identifier	ef		6163951	1					
ANR	6164734	AssignmentExpression	"* ef = _zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6163951	2		=			
ANR	6164735	Identifier	ef		6163951	0					
ANR	6164736	CallExpression	"_zip_ef_get_by_id ( zde -> extra_fields , & got_len , ZIP_EF_ZIP64 , 0 , local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL , error )"		6163951	1					
ANR	6164737	Callee	_zip_ef_get_by_id		6163951	0					
ANR	6164738	Identifier	_zip_ef_get_by_id		6163951	0					
ANR	6164739	ArgumentList	zde -> extra_fields		6163951	1					
ANR	6164740	Argument	zde -> extra_fields		6163951	0					
ANR	6164741	PtrMemberAccess	zde -> extra_fields		6163951	0					
ANR	6164742	Identifier	zde		6163951	0					
ANR	6164743	Identifier	extra_fields		6163951	1					
ANR	6164744	Argument	& got_len		6163951	1					
ANR	6164745	UnaryOperationExpression	& got_len		6163951	0					
ANR	6164746	UnaryOperator	&		6163951	0					
ANR	6164747	Identifier	got_len		6163951	1					
ANR	6164748	Argument	ZIP_EF_ZIP64		6163951	2					
ANR	6164749	Identifier	ZIP_EF_ZIP64		6163951	0					
ANR	6164750	Argument	0		6163951	3					
ANR	6164751	PrimaryExpression	0		6163951	0					
ANR	6164752	Argument	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6163951	4					
ANR	6164753	ConditionalExpression	local ? ZIP_EF_LOCAL : ZIP_EF_CENTRAL		6163951	0					
ANR	6164754	Condition	local		6163951	0					
ANR	6164755	Identifier	local		6163951	0					
ANR	6164756	Identifier	ZIP_EF_LOCAL		6163951	1					
ANR	6164757	Identifier	ZIP_EF_CENTRAL		6163951	2					
ANR	6164758	Argument	error		6163951	5					
ANR	6164759	Identifier	error		6163951	0					
ANR	6164760	IfStatement	if ( ef == NULL )		6163951	2					
ANR	6164761	Condition	ef == NULL	465:5:11824:11833	6163951	0	True				
ANR	6164762	EqualityExpression	ef == NULL		6163951	0		==			
ANR	6164763	Identifier	ef		6163951	0					
ANR	6164764	Identifier	NULL		6163951	1					
ANR	6164765	ReturnStatement	return - 1 ;	466:5:11841:11850	6163951	1	True				
ANR	6164766	UnaryOperationExpression	- 1		6163951	0					
ANR	6164767	UnaryOperator	-		6163951	0					
ANR	6164768	PrimaryExpression	1		6163951	1					
ANR	6164769	IfStatement	if ( local )		6163951	3					
ANR	6164770	Condition	local	469:5:11859:11863	6163951	0	True				
ANR	6164771	Identifier	local		6163951	0					
ANR	6164772	ExpressionStatement	needed_len = 16	470:5:11871:11886	6163951	1	True				
ANR	6164773	AssignmentExpression	needed_len = 16		6163951	0		=			
ANR	6164774	Identifier	needed_len		6163951	0					
ANR	6164775	PrimaryExpression	16		6163951	1					
ANR	6164776	ElseStatement	else		6163951	0					
ANR	6164777	ExpressionStatement	needed_len = ( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8 + ( zde -> disk_number == ZIP_UINT16_MAX ) * 4	472:5:11899:12070	6163951	0	True				
ANR	6164778	AssignmentExpression	needed_len = ( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8 + ( zde -> disk_number == ZIP_UINT16_MAX ) * 4		6163951	0		=			
ANR	6164779	Identifier	needed_len		6163951	0					
ANR	6164780	AdditiveExpression	( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8 + ( zde -> disk_number == ZIP_UINT16_MAX ) * 4		6163951	1		+			
ANR	6164781	MultiplicativeExpression	( ( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX ) ) * 8		6163951	0		*			
ANR	6164782	AdditiveExpression	( zde -> uncomp_size == ZIP_UINT32_MAX ) + ( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX )		6163951	0		+			
ANR	6164783	EqualityExpression	zde -> uncomp_size == ZIP_UINT32_MAX		6163951	0		==			
ANR	6164784	PtrMemberAccess	zde -> uncomp_size		6163951	0					
ANR	6164785	Identifier	zde		6163951	0					
ANR	6164786	Identifier	uncomp_size		6163951	1					
ANR	6164787	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164788	AdditiveExpression	( zde -> comp_size == ZIP_UINT32_MAX ) + ( zde -> offset == ZIP_UINT32_MAX )		6163951	1		+			
ANR	6164789	EqualityExpression	zde -> comp_size == ZIP_UINT32_MAX		6163951	0		==			
ANR	6164790	PtrMemberAccess	zde -> comp_size		6163951	0					
ANR	6164791	Identifier	zde		6163951	0					
ANR	6164792	Identifier	comp_size		6163951	1					
ANR	6164793	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164794	EqualityExpression	zde -> offset == ZIP_UINT32_MAX		6163951	1		==			
ANR	6164795	PtrMemberAccess	zde -> offset		6163951	0					
ANR	6164796	Identifier	zde		6163951	0					
ANR	6164797	Identifier	offset		6163951	1					
ANR	6164798	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164799	PrimaryExpression	8		6163951	1					
ANR	6164800	MultiplicativeExpression	( zde -> disk_number == ZIP_UINT16_MAX ) * 4		6163951	1		*			
ANR	6164801	EqualityExpression	zde -> disk_number == ZIP_UINT16_MAX		6163951	0		==			
ANR	6164802	PtrMemberAccess	zde -> disk_number		6163951	0					
ANR	6164803	Identifier	zde		6163951	0					
ANR	6164804	Identifier	disk_number		6163951	1					
ANR	6164805	Identifier	ZIP_UINT16_MAX		6163951	1					
ANR	6164806	PrimaryExpression	4		6163951	1					
ANR	6164807	IfStatement	if ( got_len != needed_len )		6163951	4					
ANR	6164808	Condition	got_len != needed_len	475:5:12078:12098	6163951	0	True				
ANR	6164809	EqualityExpression	got_len != needed_len		6163951	0		!=			
ANR	6164810	Identifier	got_len		6163951	0					
ANR	6164811	Identifier	needed_len		6163951	1					
ANR	6164812	CompoundStatement		145:28:3792:3792	6163951	1					
ANR	6164813	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	476:5:12108:12147	6163951	0	True				
ANR	6164814	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6163951	0					
ANR	6164815	Callee	_zip_error_set		6163951	0					
ANR	6164816	Identifier	_zip_error_set		6163951	0					
ANR	6164817	ArgumentList	error		6163951	1					
ANR	6164818	Argument	error		6163951	0					
ANR	6164819	Identifier	error		6163951	0					
ANR	6164820	Argument	ZIP_ER_INCONS		6163951	1					
ANR	6164821	Identifier	ZIP_ER_INCONS		6163951	0					
ANR	6164822	Argument	0		6163951	2					
ANR	6164823	PrimaryExpression	0		6163951	0					
ANR	6164824	ReturnStatement	return - 1 ;	477:5:12154:12163	6163951	1	True				
ANR	6164825	UnaryOperationExpression	- 1		6163951	0					
ANR	6164826	UnaryOperator	-		6163951	0					
ANR	6164827	PrimaryExpression	1		6163951	1					
ANR	6164828	IfStatement	if ( zde -> uncomp_size == ZIP_UINT32_MAX )		6163951	5					
ANR	6164829	Condition	zde -> uncomp_size == ZIP_UINT32_MAX	480:5:12175:12208	6163951	0	True				
ANR	6164830	EqualityExpression	zde -> uncomp_size == ZIP_UINT32_MAX		6163951	0		==			
ANR	6164831	PtrMemberAccess	zde -> uncomp_size		6163951	0					
ANR	6164832	Identifier	zde		6163951	0					
ANR	6164833	Identifier	uncomp_size		6163951	1					
ANR	6164834	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164835	ExpressionStatement	zde -> uncomp_size = _zip_read8 ( & ef )	481:5:12216:12250	6163951	1	True				
ANR	6164836	AssignmentExpression	zde -> uncomp_size = _zip_read8 ( & ef )		6163951	0		=			
ANR	6164837	PtrMemberAccess	zde -> uncomp_size		6163951	0					
ANR	6164838	Identifier	zde		6163951	0					
ANR	6164839	Identifier	uncomp_size		6163951	1					
ANR	6164840	CallExpression	_zip_read8 ( & ef )		6163951	1					
ANR	6164841	Callee	_zip_read8		6163951	0					
ANR	6164842	Identifier	_zip_read8		6163951	0					
ANR	6164843	ArgumentList	& ef		6163951	1					
ANR	6164844	Argument	& ef		6163951	0					
ANR	6164845	UnaryOperationExpression	& ef		6163951	0					
ANR	6164846	UnaryOperator	&		6163951	0					
ANR	6164847	Identifier	ef		6163951	1					
ANR	6164848	ElseStatement	else		6163951	0					
ANR	6164849	IfStatement	if ( local )		6163951	0					
ANR	6164850	Condition	local	482:10:12262:12266	6163951	0	True				
ANR	6164851	Identifier	local		6163951	0					
ANR	6164852	ExpressionStatement	ef += 8	483:5:12274:12281	6163951	1	True				
ANR	6164853	AssignmentExpression	ef += 8		6163951	0		+=			
ANR	6164854	Identifier	ef		6163951	0					
ANR	6164855	PrimaryExpression	8		6163951	1					
ANR	6164856	IfStatement	if ( zde -> comp_size == ZIP_UINT32_MAX )		6163951	6					
ANR	6164857	Condition	zde -> comp_size == ZIP_UINT32_MAX	484:5:12288:12319	6163951	0	True				
ANR	6164858	EqualityExpression	zde -> comp_size == ZIP_UINT32_MAX		6163951	0		==			
ANR	6164859	PtrMemberAccess	zde -> comp_size		6163951	0					
ANR	6164860	Identifier	zde		6163951	0					
ANR	6164861	Identifier	comp_size		6163951	1					
ANR	6164862	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164863	ExpressionStatement	zde -> comp_size = _zip_read8 ( & ef )	485:5:12327:12359	6163951	1	True				
ANR	6164864	AssignmentExpression	zde -> comp_size = _zip_read8 ( & ef )		6163951	0		=			
ANR	6164865	PtrMemberAccess	zde -> comp_size		6163951	0					
ANR	6164866	Identifier	zde		6163951	0					
ANR	6164867	Identifier	comp_size		6163951	1					
ANR	6164868	CallExpression	_zip_read8 ( & ef )		6163951	1					
ANR	6164869	Callee	_zip_read8		6163951	0					
ANR	6164870	Identifier	_zip_read8		6163951	0					
ANR	6164871	ArgumentList	& ef		6163951	1					
ANR	6164872	Argument	& ef		6163951	0					
ANR	6164873	UnaryOperationExpression	& ef		6163951	0					
ANR	6164874	UnaryOperator	&		6163951	0					
ANR	6164875	Identifier	ef		6163951	1					
ANR	6164876	IfStatement	if ( ! local )		6163951	7					
ANR	6164877	Condition	! local	486:5:12366:12371	6163951	0	True				
ANR	6164878	UnaryOperationExpression	! local		6163951	0					
ANR	6164879	UnaryOperator	!		6163951	0					
ANR	6164880	Identifier	local		6163951	1					
ANR	6164881	CompoundStatement		156:13:4065:4065	6163951	1					
ANR	6164882	IfStatement	if ( zde -> offset == ZIP_UINT32_MAX )		6163951	0					
ANR	6164883	Condition	zde -> offset == ZIP_UINT32_MAX	487:9:12385:12413	6163951	0	True				
ANR	6164884	EqualityExpression	zde -> offset == ZIP_UINT32_MAX		6163951	0		==			
ANR	6164885	PtrMemberAccess	zde -> offset		6163951	0					
ANR	6164886	Identifier	zde		6163951	0					
ANR	6164887	Identifier	offset		6163951	1					
ANR	6164888	Identifier	ZIP_UINT32_MAX		6163951	1					
ANR	6164889	ExpressionStatement	zde -> offset = _zip_read8 ( & ef )	488:2:12418:12447	6163951	1	True				
ANR	6164890	AssignmentExpression	zde -> offset = _zip_read8 ( & ef )		6163951	0		=			
ANR	6164891	PtrMemberAccess	zde -> offset		6163951	0					
ANR	6164892	Identifier	zde		6163951	0					
ANR	6164893	Identifier	offset		6163951	1					
ANR	6164894	CallExpression	_zip_read8 ( & ef )		6163951	1					
ANR	6164895	Callee	_zip_read8		6163951	0					
ANR	6164896	Identifier	_zip_read8		6163951	0					
ANR	6164897	ArgumentList	& ef		6163951	1					
ANR	6164898	Argument	& ef		6163951	0					
ANR	6164899	UnaryOperationExpression	& ef		6163951	0					
ANR	6164900	UnaryOperator	&		6163951	0					
ANR	6164901	Identifier	ef		6163951	1					
ANR	6164902	IfStatement	if ( zde -> disk_number == ZIP_UINT16_MAX )		6163951	1					
ANR	6164903	Condition	zde -> disk_number == ZIP_UINT16_MAX	489:9:12458:12491	6163951	0	True				
ANR	6164904	EqualityExpression	zde -> disk_number == ZIP_UINT16_MAX		6163951	0		==			
ANR	6164905	PtrMemberAccess	zde -> disk_number		6163951	0					
ANR	6164906	Identifier	zde		6163951	0					
ANR	6164907	Identifier	disk_number		6163951	1					
ANR	6164908	Identifier	ZIP_UINT16_MAX		6163951	1					
ANR	6164909	ExpressionStatement	zde -> disk_number = _zip_read4 ( & ef )	490:2:12496:12530	6163951	1	True				
ANR	6164910	AssignmentExpression	zde -> disk_number = _zip_read4 ( & ef )		6163951	0		=			
ANR	6164911	PtrMemberAccess	zde -> disk_number		6163951	0					
ANR	6164912	Identifier	zde		6163951	0					
ANR	6164913	Identifier	disk_number		6163951	1					
ANR	6164914	CallExpression	_zip_read4 ( & ef )		6163951	1					
ANR	6164915	Callee	_zip_read4		6163951	0					
ANR	6164916	Identifier	_zip_read4		6163951	0					
ANR	6164917	ArgumentList	& ef		6163951	1					
ANR	6164918	Argument	& ef		6163951	0					
ANR	6164919	UnaryOperationExpression	& ef		6163951	0					
ANR	6164920	UnaryOperator	&		6163951	0					
ANR	6164921	Identifier	ef		6163951	1					
ANR	6164922	IfStatement	if ( ! local )		6163951	35					
ANR	6164923	Condition	! local	494:8:12554:12559	6163951	0	True				
ANR	6164924	UnaryOperationExpression	! local		6163951	0					
ANR	6164925	UnaryOperator	!		6163951	0					
ANR	6164926	Identifier	local		6163951	1					
ANR	6164927	CompoundStatement		164:16:4253:4253	6163951	1					
ANR	6164928	IfStatement	if ( zde -> offset > ZIP_OFF_MAX )		6163951	0					
ANR	6164929	Condition	zde -> offset > ZIP_OFF_MAX	495:12:12576:12600	6163951	0	True				
ANR	6164930	RelationalExpression	zde -> offset > ZIP_OFF_MAX		6163951	0		>			
ANR	6164931	PtrMemberAccess	zde -> offset		6163951	0					
ANR	6164932	Identifier	zde		6163951	0					
ANR	6164933	Identifier	offset		6163951	1					
ANR	6164934	Identifier	ZIP_OFF_MAX		6163951	1					
ANR	6164935	CompoundStatement		165:39:4294:4294	6163951	1					
ANR	6164936	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_SEEK , EFBIG )"	496:12:12617:12658	6163951	0	True				
ANR	6164937	CallExpression	"_zip_error_set ( error , ZIP_ER_SEEK , EFBIG )"		6163951	0					
ANR	6164938	Callee	_zip_error_set		6163951	0					
ANR	6164939	Identifier	_zip_error_set		6163951	0					
ANR	6164940	ArgumentList	error		6163951	1					
ANR	6164941	Argument	error		6163951	0					
ANR	6164942	Identifier	error		6163951	0					
ANR	6164943	Argument	ZIP_ER_SEEK		6163951	1					
ANR	6164944	Identifier	ZIP_ER_SEEK		6163951	0					
ANR	6164945	Argument	EFBIG		6163951	2					
ANR	6164946	Identifier	EFBIG		6163951	0					
ANR	6164947	ReturnStatement	return - 1 ;	497:12:12672:12681	6163951	1	True				
ANR	6164948	UnaryOperationExpression	- 1		6163951	0					
ANR	6164949	UnaryOperator	-		6163951	0					
ANR	6164950	PrimaryExpression	1		6163951	1					
ANR	6164951	ExpressionStatement	zde -> extra_fields = _zip_ef_remove_internal ( zde -> extra_fields )	501:4:12708:12770	6163951	36	True				
ANR	6164952	AssignmentExpression	zde -> extra_fields = _zip_ef_remove_internal ( zde -> extra_fields )		6163951	0		=			
ANR	6164953	PtrMemberAccess	zde -> extra_fields		6163951	0					
ANR	6164954	Identifier	zde		6163951	0					
ANR	6164955	Identifier	extra_fields		6163951	1					
ANR	6164956	CallExpression	_zip_ef_remove_internal ( zde -> extra_fields )		6163951	1					
ANR	6164957	Callee	_zip_ef_remove_internal		6163951	0					
ANR	6164958	Identifier	_zip_ef_remove_internal		6163951	0					
ANR	6164959	ArgumentList	zde -> extra_fields		6163951	1					
ANR	6164960	Argument	zde -> extra_fields		6163951	0					
ANR	6164961	PtrMemberAccess	zde -> extra_fields		6163951	0					
ANR	6164962	Identifier	zde		6163951	0					
ANR	6164963	Identifier	extra_fields		6163951	1					
ANR	6164964	IfStatement	if ( bufp )		6163951	37					
ANR	6164965	Condition	bufp	503:8:12781:12784	6163951	0	True				
ANR	6164966	Identifier	bufp		6163951	0					
ANR	6164967	ExpressionStatement	* bufp = cur	504:6:12793:12804	6163951	1	True				
ANR	6164968	AssignmentExpression	* bufp = cur		6163951	0		=			
ANR	6164969	UnaryOperationExpression	* bufp		6163951	0					
ANR	6164970	UnaryOperator	*		6163951	0					
ANR	6164971	Identifier	bufp		6163951	1					
ANR	6164972	Identifier	cur		6163951	1					
ANR	6164973	IfStatement	if ( leftp )		6163951	38					
ANR	6164974	Condition	leftp	505:8:12814:12818	6163951	0	True				
ANR	6164975	Identifier	leftp		6163951	0					
ANR	6164976	ExpressionStatement	* leftp -= size	506:1:12822:12836	6163951	1	True				
ANR	6164977	AssignmentExpression	* leftp -= size		6163951	0		-=			
ANR	6164978	UnaryOperationExpression	* leftp		6163951	0					
ANR	6164979	UnaryOperator	*		6163951	0					
ANR	6164980	Identifier	leftp		6163951	1					
ANR	6164981	Identifier	size		6163951	1					
ANR	6164982	ReturnStatement	return 0 ;	508:4:12843:12851	6163951	39	True				
ANR	6164983	PrimaryExpression	0		6163951	0					
ANR	6164984	ReturnType	int		6163951	1					
ANR	6164985	Identifier	_zip_dirent_read		6163951	2					
ANR	6164986	ParameterList	"struct zip_dirent * zde , FILE * fp , const unsigned char * * bufp , zip_uint64_t * leftp , int local , struct zip_error * error"		6163951	3					
ANR	6164987	Parameter	struct zip_dirent * zde	328:17:8183:8204	6163951	0	True				
ANR	6164988	ParameterType	struct zip_dirent *		6163951	0					
ANR	6164989	Identifier	zde		6163951	1					
ANR	6164990	Parameter	FILE * fp	328:41:8207:8214	6163951	1	True				
ANR	6164991	ParameterType	FILE *		6163951	0					
ANR	6164992	Identifier	fp		6163951	1					
ANR	6164993	Parameter	const unsigned char * * bufp	329:3:8220:8245	6163951	2	True				
ANR	6164994	ParameterType	const unsigned char * *		6163951	0					
ANR	6164995	Identifier	bufp		6163951	1					
ANR	6164996	Parameter	zip_uint64_t * leftp	329:31:8248:8266	6163951	3	True				
ANR	6164997	ParameterType	zip_uint64_t *		6163951	0					
ANR	6164998	Identifier	leftp		6163951	1					
ANR	6164999	Parameter	int local	329:52:8269:8277	6163951	4	True				
ANR	6165000	ParameterType	int		6163951	0					
ANR	6165001	Identifier	local		6163951	1					
ANR	6165002	Parameter	struct zip_error * error	330:3:8283:8305	6163951	5	True				
ANR	6165003	ParameterType	struct zip_error *		6163951	0					
ANR	6165004	Identifier	error		6163951	1					
ANR	6165005	CFGEntryNode	ENTRY		6163951		True				
ANR	6165006	CFGExitNode	EXIT		6163951		True				
ANR	6165007	Symbol	& got_len		6163951						
ANR	6165008	Symbol	zde -> bitflags		6163951						
ANR	6165009	Symbol	ZIP_EF_ZIP64		6163951						
ANR	6165010	Symbol	zde -> version_needed		6163951						
ANR	6165011	Symbol	zde -> uncomp_size		6163951						
ANR	6165012	Symbol	ZIP_UINT32_MAX		6163951						
ANR	6165013	Symbol	ZIP_UINT16_MAX		6163951						
ANR	6165014	Symbol	zde -> comp_method		6163951						
ANR	6165015	Symbol	ZIP_ER_NOZIP		6163951						
ANR	6165016	Symbol	ZIP_ER_READ		6163951						
ANR	6165017	Symbol	ZIP_EF_CENTRAL		6163951						
ANR	6165018	Symbol	* bufp		6163951						
ANR	6165019	Symbol	zde -> ext_attrib		6163951						
ANR	6165020	Symbol	zde -> comp_size		6163951						
ANR	6165021	Symbol	memcmp		6163951						
ANR	6165022	Symbol	_zip_read_data		6163951						
ANR	6165023	Symbol	filename_len		6163951						
ANR	6165024	Symbol	ZIP_ER_INCONS		6163951						
ANR	6165025	Symbol	_zip_read_string		6163951						
ANR	6165026	Symbol	ZIP_ENCODING_UTF8_KNOWN		6163951						
ANR	6165027	Symbol	ef		6163951						
ANR	6165028	Symbol	errno		6163951						
ANR	6165029	Symbol	NULL		6163951						
ANR	6165030	Symbol	ZIP_EF_UTF_8_COMMENT		6163951						
ANR	6165031	Symbol	zde -> version_madeby		6163951						
ANR	6165032	Symbol	_zip_dirent_process_ef_utf_8		6163951						
ANR	6165033	Symbol	zde -> filename		6163951						
ANR	6165034	Symbol	dosdate		6163951						
ANR	6165035	Symbol	ZIP_ER_SEEK		6163951						
ANR	6165036	Symbol	fread		6163951						
ANR	6165037	Symbol	zde -> offset		6163951						
ANR	6165038	Symbol	ZIP_EF_LOCAL		6163951						
ANR	6165039	Symbol	ZIP_EF_UTF_8_NAME		6163951						
ANR	6165040	Symbol	size		6163951						
ANR	6165041	Symbol	zde -> crc		6163951						
ANR	6165042	Symbol	zde -> local_extra_fields_read		6163951						
ANR	6165043	Symbol	_zip_read2		6163951						
ANR	6165044	Symbol	_zip_read8		6163951						
ANR	6165045	Symbol	cur		6163951						
ANR	6165046	Symbol	_zip_d2u_time		6163951						
ANR	6165047	Symbol	_zip_read4		6163951						
ANR	6165048	Symbol	_zip_guess_encoding		6163951						
ANR	6165049	Symbol	ZIP_OFF_MAX		6163951						
ANR	6165050	Symbol	fp		6163951						
ANR	6165051	Symbol	& ef		6163951						
ANR	6165052	Symbol	error		6163951						
ANR	6165053	Symbol	local		6163951						
ANR	6165054	Symbol	needed_len		6163951						
ANR	6165055	Symbol	* leftp		6163951						
ANR	6165056	Symbol	comment_len		6163951						
ANR	6165057	Symbol	ef_len		6163951						
ANR	6165058	Symbol	zde -> extra_fields		6163951						
ANR	6165059	Symbol	& cur		6163951						
ANR	6165060	Symbol	zde -> disk_number		6163951						
ANR	6165061	Symbol	zde -> comment		6163951						
ANR	6165062	Symbol	CDENTRYSIZE		6163951						
ANR	6165063	Symbol	_zip_ef_remove_internal		6163951						
ANR	6165064	Symbol	* zde		6163951						
ANR	6165065	Symbol	LENTRYSIZE		6163951						
ANR	6165066	Symbol	leftp		6163951						
ANR	6165067	Symbol	_zip_ef_get_by_id		6163951						
ANR	6165068	Symbol	LOCAL_MAGIC		6163951						
ANR	6165069	Symbol	zde -> last_mod		6163951						
ANR	6165070	Symbol	ZIP_ENCODING_ERROR		6163951						
ANR	6165071	Symbol	_zip_ef_parse		6163951						
ANR	6165072	Symbol	buf		6163951						
ANR	6165073	Symbol	EFBIG		6163951						
ANR	6165074	Symbol	bufp		6163951						
ANR	6165075	Symbol	dostime		6163951						
ANR	6165076	Symbol	ZIP_GPBF_ENCODING_UTF_8		6163951						
ANR	6165077	Symbol	got_len		6163951						
ANR	6165078	Symbol	zde		6163951						
ANR	6165079	Symbol	CENTRAL_MAGIC		6163951						
ANR	6165080	Symbol	zde -> int_attrib		6163951						
ANR	6165081	Function	_zip_dirent_process_ef_utf_8	513:0:12859:13478							
ANR	6165082	FunctionDef	"_zip_dirent_process_ef_utf_8 (const struct zip_dirent * de , zip_uint16_t id , struct zip_string * str)"		6165081	0					
ANR	6165083	CompoundStatement		515:0:12985:13478	6165081	0					
ANR	6165084	IdentifierDeclStatement	zip_uint16_t ef_len ;	516:4:12991:13010	6165081	0	True				
ANR	6165085	IdentifierDecl	ef_len		6165081	0					
ANR	6165086	IdentifierDeclType	zip_uint16_t		6165081	0					
ANR	6165087	Identifier	ef_len		6165081	1					
ANR	6165088	IdentifierDeclStatement	zip_uint32_t ef_crc ;	517:4:13016:13035	6165081	1	True				
ANR	6165089	IdentifierDecl	ef_crc		6165081	0					
ANR	6165090	IdentifierDeclType	zip_uint32_t		6165081	0					
ANR	6165091	Identifier	ef_crc		6165081	1					
ANR	6165092	IdentifierDeclStatement	"const zip_uint8_t * ef = _zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL ) ;"	519:4:13042:13136	6165081	2	True				
ANR	6165093	IdentifierDecl	"* ef = _zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL )"		6165081	0					
ANR	6165094	IdentifierDeclType	const zip_uint8_t *		6165081	0					
ANR	6165095	Identifier	ef		6165081	1					
ANR	6165096	AssignmentExpression	"* ef = _zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL )"		6165081	2		=			
ANR	6165097	Identifier	ef		6165081	0					
ANR	6165098	CallExpression	"_zip_ef_get_by_id ( de -> extra_fields , & ef_len , id , 0 , ZIP_EF_BOTH , NULL )"		6165081	1					
ANR	6165099	Callee	_zip_ef_get_by_id		6165081	0					
ANR	6165100	Identifier	_zip_ef_get_by_id		6165081	0					
ANR	6165101	ArgumentList	de -> extra_fields		6165081	1					
ANR	6165102	Argument	de -> extra_fields		6165081	0					
ANR	6165103	PtrMemberAccess	de -> extra_fields		6165081	0					
ANR	6165104	Identifier	de		6165081	0					
ANR	6165105	Identifier	extra_fields		6165081	1					
ANR	6165106	Argument	& ef_len		6165081	1					
ANR	6165107	UnaryOperationExpression	& ef_len		6165081	0					
ANR	6165108	UnaryOperator	&		6165081	0					
ANR	6165109	Identifier	ef_len		6165081	1					
ANR	6165110	Argument	id		6165081	2					
ANR	6165111	Identifier	id		6165081	0					
ANR	6165112	Argument	0		6165081	3					
ANR	6165113	PrimaryExpression	0		6165081	0					
ANR	6165114	Argument	ZIP_EF_BOTH		6165081	4					
ANR	6165115	Identifier	ZIP_EF_BOTH		6165081	0					
ANR	6165116	Argument	NULL		6165081	5					
ANR	6165117	Identifier	NULL		6165081	0					
ANR	6165118	IfStatement	if ( ef == NULL || ef_len < 5 || ef [ 0 ] != 1 )		6165081	3					
ANR	6165119	Condition	ef == NULL || ef_len < 5 || ef [ 0 ] != 1	521:8:13147:13184	6165081	0	True				
ANR	6165120	OrExpression	ef == NULL || ef_len < 5 || ef [ 0 ] != 1		6165081	0		||			
ANR	6165121	EqualityExpression	ef == NULL		6165081	0		==			
ANR	6165122	Identifier	ef		6165081	0					
ANR	6165123	Identifier	NULL		6165081	1					
ANR	6165124	OrExpression	ef_len < 5 || ef [ 0 ] != 1		6165081	1		||			
ANR	6165125	RelationalExpression	ef_len < 5		6165081	0		<			
ANR	6165126	Identifier	ef_len		6165081	0					
ANR	6165127	PrimaryExpression	5		6165081	1					
ANR	6165128	EqualityExpression	ef [ 0 ] != 1		6165081	1		!=			
ANR	6165129	ArrayIndexing	ef [ 0 ]		6165081	0					
ANR	6165130	Identifier	ef		6165081	0					
ANR	6165131	PrimaryExpression	0		6165081	1					
ANR	6165132	PrimaryExpression	1		6165081	1					
ANR	6165133	ReturnStatement	return str ;	522:1:13188:13198	6165081	1	True				
ANR	6165134	Identifier	str		6165081	0					
ANR	6165135	ExpressionStatement	ef ++	524:4:13205:13209	6165081	4	True				
ANR	6165136	PostIncDecOperationExpression	ef ++		6165081	0					
ANR	6165137	Identifier	ef		6165081	0					
ANR	6165138	IncDec	++		6165081	1					
ANR	6165139	ExpressionStatement	ef_crc = _zip_read4 ( & ef )	525:4:13215:13239	6165081	5	True				
ANR	6165140	AssignmentExpression	ef_crc = _zip_read4 ( & ef )		6165081	0		=			
ANR	6165141	Identifier	ef_crc		6165081	0					
ANR	6165142	CallExpression	_zip_read4 ( & ef )		6165081	1					
ANR	6165143	Callee	_zip_read4		6165081	0					
ANR	6165144	Identifier	_zip_read4		6165081	0					
ANR	6165145	ArgumentList	& ef		6165081	1					
ANR	6165146	Argument	& ef		6165081	0					
ANR	6165147	UnaryOperationExpression	& ef		6165081	0					
ANR	6165148	UnaryOperator	&		6165081	0					
ANR	6165149	Identifier	ef		6165081	1					
ANR	6165150	IfStatement	if ( _zip_string_crc32 ( str ) == ef_crc )		6165081	6					
ANR	6165151	Condition	_zip_string_crc32 ( str ) == ef_crc	527:8:13250:13281	6165081	0	True				
ANR	6165152	EqualityExpression	_zip_string_crc32 ( str ) == ef_crc		6165081	0		==			
ANR	6165153	CallExpression	_zip_string_crc32 ( str )		6165081	0					
ANR	6165154	Callee	_zip_string_crc32		6165081	0					
ANR	6165155	Identifier	_zip_string_crc32		6165081	0					
ANR	6165156	ArgumentList	str		6165081	1					
ANR	6165157	Argument	str		6165081	0					
ANR	6165158	Identifier	str		6165081	0					
ANR	6165159	Identifier	ef_crc		6165081	1					
ANR	6165160	CompoundStatement		14:1:301:389	6165081	1					
ANR	6165161	IdentifierDeclStatement	"struct zip_string * ef_str = _zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL ) ;"	528:1:13287:13375	6165081	0	True				
ANR	6165162	IdentifierDecl	"* ef_str = _zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL )"		6165081	0					
ANR	6165163	IdentifierDeclType	struct zip_string *		6165081	0					
ANR	6165164	Identifier	ef_str		6165081	1					
ANR	6165165	AssignmentExpression	"* ef_str = _zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL )"		6165081	2		=			
ANR	6165166	Identifier	ef_str		6165081	0					
ANR	6165167	CallExpression	"_zip_string_new ( ef , ef_len - 5 , ZIP_ENCODING_UTF8_KNOWN , NULL )"		6165081	1					
ANR	6165168	Callee	_zip_string_new		6165081	0					
ANR	6165169	Identifier	_zip_string_new		6165081	0					
ANR	6165170	ArgumentList	ef		6165081	1					
ANR	6165171	Argument	ef		6165081	0					
ANR	6165172	Identifier	ef		6165081	0					
ANR	6165173	Argument	ef_len - 5		6165081	1					
ANR	6165174	AdditiveExpression	ef_len - 5		6165081	0		-			
ANR	6165175	Identifier	ef_len		6165081	0					
ANR	6165176	PrimaryExpression	5		6165081	1					
ANR	6165177	Argument	ZIP_ENCODING_UTF8_KNOWN		6165081	2					
ANR	6165178	Identifier	ZIP_ENCODING_UTF8_KNOWN		6165081	0					
ANR	6165179	Argument	NULL		6165081	3					
ANR	6165180	Identifier	NULL		6165081	0					
ANR	6165181	IfStatement	if ( ef_str != NULL )		6165081	1					
ANR	6165182	Condition	ef_str != NULL	530:5:13383:13396	6165081	0	True				
ANR	6165183	EqualityExpression	ef_str != NULL		6165081	0		!=			
ANR	6165184	Identifier	ef_str		6165081	0					
ANR	6165185	Identifier	NULL		6165081	1					
ANR	6165186	CompoundStatement		16:21:413:413	6165081	1					
ANR	6165187	ExpressionStatement	_zip_string_free ( str )	531:5:13406:13427	6165081	0	True				
ANR	6165188	CallExpression	_zip_string_free ( str )		6165081	0					
ANR	6165189	Callee	_zip_string_free		6165081	0					
ANR	6165190	Identifier	_zip_string_free		6165081	0					
ANR	6165191	ArgumentList	str		6165081	1					
ANR	6165192	Argument	str		6165081	0					
ANR	6165193	Identifier	str		6165081	0					
ANR	6165194	ExpressionStatement	str = ef_str	532:5:13434:13446	6165081	1	True				
ANR	6165195	AssignmentExpression	str = ef_str		6165081	0		=			
ANR	6165196	Identifier	str		6165081	0					
ANR	6165197	Identifier	ef_str		6165081	1					
ANR	6165198	ReturnStatement	return str ;	536:4:13466:13476	6165081	7	True				
ANR	6165199	Identifier	str		6165081	0					
ANR	6165200	ReturnType	static struct zip_string *		6165081	1					
ANR	6165201	Identifier	_zip_dirent_process_ef_utf_8		6165081	2					
ANR	6165202	ParameterList	"const struct zip_dirent * de , zip_uint16_t id , struct zip_string * str"		6165081	3					
ANR	6165203	Parameter	const struct zip_dirent * de	514:29:12915:12941	6165081	0	True				
ANR	6165204	ParameterType	const struct zip_dirent *		6165081	0					
ANR	6165205	Identifier	de		6165081	1					
ANR	6165206	Parameter	zip_uint16_t id	514:58:12944:12958	6165081	1	True				
ANR	6165207	ParameterType	zip_uint16_t		6165081	0					
ANR	6165208	Identifier	id		6165081	1					
ANR	6165209	Parameter	struct zip_string * str	514:75:12961:12982	6165081	2	True				
ANR	6165210	ParameterType	struct zip_string *		6165081	0					
ANR	6165211	Identifier	str		6165081	1					
ANR	6165212	CFGEntryNode	ENTRY		6165081		True				
ANR	6165213	CFGExitNode	EXIT		6165081		True				
ANR	6165214	Symbol	de -> extra_fields		6165081						
ANR	6165215	Symbol	ZIP_ENCODING_UTF8_KNOWN		6165081						
ANR	6165216	Symbol	de		6165081						
ANR	6165217	Symbol	ef		6165081						
ANR	6165218	Symbol	NULL		6165081						
ANR	6165219	Symbol	* de		6165081						
ANR	6165220	Symbol	ZIP_EF_BOTH		6165081						
ANR	6165221	Symbol	* ef		6165081						
ANR	6165222	Symbol	_zip_read4		6165081						
ANR	6165223	Symbol	& ef_len		6165081						
ANR	6165224	Symbol	& ef		6165081						
ANR	6165225	Symbol	_zip_ef_get_by_id		6165081						
ANR	6165226	Symbol	_zip_string_crc32		6165081						
ANR	6165227	Symbol	str		6165081						
ANR	6165228	Symbol	ef_str		6165081						
ANR	6165229	Symbol	ef_len		6165081						
ANR	6165230	Symbol	ef_crc		6165081						
ANR	6165231	Symbol	id		6165081						
ANR	6165232	Symbol	_zip_string_new		6165081						
ANR	6165233	Function	_zip_dirent_size	541:0:13484:14066							
ANR	6165234	FunctionDef	"_zip_dirent_size (FILE * f , zip_uint16_t flags , struct zip_error * error)"		6165233	0					
ANR	6165235	CompoundStatement		543:0:13567:14066	6165233	0					
ANR	6165236	IdentifierDeclStatement	zip_int32_t size ;	544:4:13573:13589	6165233	0	True				
ANR	6165237	IdentifierDecl	size		6165233	0					
ANR	6165238	IdentifierDeclType	zip_int32_t		6165233	0					
ANR	6165239	Identifier	size		6165233	1					
ANR	6165240	IdentifierDeclStatement	int local = ( flags & ZIP_EF_LOCAL ) ;	545:4:13595:13629	6165233	1	True				
ANR	6165241	IdentifierDecl	local = ( flags & ZIP_EF_LOCAL )		6165233	0					
ANR	6165242	IdentifierDeclType	int		6165233	0					
ANR	6165243	Identifier	local		6165233	1					
ANR	6165244	AssignmentExpression	local = ( flags & ZIP_EF_LOCAL )		6165233	2		=			
ANR	6165245	Identifier	local		6165233	0					
ANR	6165246	BitAndExpression	flags & ZIP_EF_LOCAL		6165233	1		&			
ANR	6165247	Identifier	flags		6165233	0					
ANR	6165248	Identifier	ZIP_EF_LOCAL		6165233	1					
ANR	6165249	IdentifierDeclStatement	int i ;	546:4:13635:13640	6165233	2	True				
ANR	6165250	IdentifierDecl	i		6165233	0					
ANR	6165251	IdentifierDeclType	int		6165233	0					
ANR	6165252	Identifier	i		6165233	1					
ANR	6165253	IdentifierDeclStatement	unsigned char b [ 6 ] ;	547:4:13646:13664	6165233	3	True				
ANR	6165254	IdentifierDecl	b [ 6 ]		6165233	0					
ANR	6165255	IdentifierDeclType	unsigned char [ 6 ]		6165233	0					
ANR	6165256	Identifier	b		6165233	1					
ANR	6165257	PrimaryExpression	6		6165233	2					
ANR	6165258	IdentifierDeclStatement	const unsigned char * p ;	548:4:13670:13692	6165233	4	True				
ANR	6165259	IdentifierDecl	* p		6165233	0					
ANR	6165260	IdentifierDeclType	const unsigned char *		6165233	0					
ANR	6165261	Identifier	p		6165233	1					
ANR	6165262	ExpressionStatement	size = local ? LENTRYSIZE : CDENTRYSIZE	550:4:13699:13738	6165233	5	True				
ANR	6165263	AssignmentExpression	size = local ? LENTRYSIZE : CDENTRYSIZE		6165233	0		=			
ANR	6165264	Identifier	size		6165233	0					
ANR	6165265	ConditionalExpression	local ? LENTRYSIZE : CDENTRYSIZE		6165233	1					
ANR	6165266	Condition	local		6165233	0					
ANR	6165267	Identifier	local		6165233	0					
ANR	6165268	Identifier	LENTRYSIZE		6165233	1					
ANR	6165269	Identifier	CDENTRYSIZE		6165233	2					
ANR	6165270	IfStatement	"if ( fseek ( f , local ? 26 : 28 , SEEK_CUR ) < 0 )"		6165233	6					
ANR	6165271	Condition	"fseek ( f , local ? 26 : 28 , SEEK_CUR ) < 0"	552:8:13749:13787	6165233	0	True				
ANR	6165272	RelationalExpression	"fseek ( f , local ? 26 : 28 , SEEK_CUR ) < 0"		6165233	0		<			
ANR	6165273	CallExpression	"fseek ( f , local ? 26 : 28 , SEEK_CUR )"		6165233	0					
ANR	6165274	Callee	fseek		6165233	0					
ANR	6165275	Identifier	fseek		6165233	0					
ANR	6165276	ArgumentList	f		6165233	1					
ANR	6165277	Argument	f		6165233	0					
ANR	6165278	Identifier	f		6165233	0					
ANR	6165279	Argument	local ? 26 : 28		6165233	1					
ANR	6165280	ConditionalExpression	local ? 26 : 28		6165233	0					
ANR	6165281	Condition	local		6165233	0					
ANR	6165282	Identifier	local		6165233	0					
ANR	6165283	PrimaryExpression	26		6165233	1					
ANR	6165284	PrimaryExpression	28		6165233	2					
ANR	6165285	Argument	SEEK_CUR		6165233	2					
ANR	6165286	Identifier	SEEK_CUR		6165233	0					
ANR	6165287	PrimaryExpression	0		6165233	1					
ANR	6165288	CompoundStatement		10:49:222:222	6165233	1					
ANR	6165289	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_SEEK , errno )"	553:1:13793:13834	6165233	0	True				
ANR	6165290	CallExpression	"_zip_error_set ( error , ZIP_ER_SEEK , errno )"		6165233	0					
ANR	6165291	Callee	_zip_error_set		6165233	0					
ANR	6165292	Identifier	_zip_error_set		6165233	0					
ANR	6165293	ArgumentList	error		6165233	1					
ANR	6165294	Argument	error		6165233	0					
ANR	6165295	Identifier	error		6165233	0					
ANR	6165296	Argument	ZIP_ER_SEEK		6165233	1					
ANR	6165297	Identifier	ZIP_ER_SEEK		6165233	0					
ANR	6165298	Argument	errno		6165233	2					
ANR	6165299	Identifier	errno		6165233	0					
ANR	6165300	ReturnStatement	return - 1 ;	554:1:13837:13846	6165233	1	True				
ANR	6165301	UnaryOperationExpression	- 1		6165233	0					
ANR	6165302	UnaryOperator	-		6165233	0					
ANR	6165303	PrimaryExpression	1		6165233	1					
ANR	6165304	IfStatement	"if ( fread ( b , ( local ? 4 : 6 ) , 1 , f ) != 1 )"		6165233	7					
ANR	6165305	Condition	"fread ( b , ( local ? 4 : 6 ) , 1 , f ) != 1"	557:8:13863:13898	6165233	0	True				
ANR	6165306	EqualityExpression	"fread ( b , ( local ? 4 : 6 ) , 1 , f ) != 1"		6165233	0		!=			
ANR	6165307	CallExpression	"fread ( b , ( local ? 4 : 6 ) , 1 , f )"		6165233	0					
ANR	6165308	Callee	fread		6165233	0					
ANR	6165309	Identifier	fread		6165233	0					
ANR	6165310	ArgumentList	b		6165233	1					
ANR	6165311	Argument	b		6165233	0					
ANR	6165312	Identifier	b		6165233	0					
ANR	6165313	Argument	local ? 4 : 6		6165233	1					
ANR	6165314	ConditionalExpression	local ? 4 : 6		6165233	0					
ANR	6165315	Condition	local		6165233	0					
ANR	6165316	Identifier	local		6165233	0					
ANR	6165317	PrimaryExpression	4		6165233	1					
ANR	6165318	PrimaryExpression	6		6165233	2					
ANR	6165319	Argument	1		6165233	2					
ANR	6165320	PrimaryExpression	1		6165233	0					
ANR	6165321	Argument	f		6165233	3					
ANR	6165322	Identifier	f		6165233	0					
ANR	6165323	PrimaryExpression	1		6165233	1					
ANR	6165324	CompoundStatement		15:46:333:333	6165233	1					
ANR	6165325	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	558:1:13904:13945	6165233	0	True				
ANR	6165326	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6165233	0					
ANR	6165327	Callee	_zip_error_set		6165233	0					
ANR	6165328	Identifier	_zip_error_set		6165233	0					
ANR	6165329	ArgumentList	error		6165233	1					
ANR	6165330	Argument	error		6165233	0					
ANR	6165331	Identifier	error		6165233	0					
ANR	6165332	Argument	ZIP_ER_READ		6165233	1					
ANR	6165333	Identifier	ZIP_ER_READ		6165233	0					
ANR	6165334	Argument	errno		6165233	2					
ANR	6165335	Identifier	errno		6165233	0					
ANR	6165336	ReturnStatement	return - 1 ;	559:1:13948:13957	6165233	1	True				
ANR	6165337	UnaryOperationExpression	- 1		6165233	0					
ANR	6165338	UnaryOperator	-		6165233	0					
ANR	6165339	PrimaryExpression	1		6165233	1					
ANR	6165340	ExpressionStatement	p = b	562:4:13970:13975	6165233	8	True				
ANR	6165341	AssignmentExpression	p = b		6165233	0		=			
ANR	6165342	Identifier	p		6165233	0					
ANR	6165343	Identifier	b		6165233	1					
ANR	6165344	ForStatement	for ( i = 0 ; i < ( local ? 2 : 3 ) ; i ++ )		6165233	9					
ANR	6165345	ForInit	i = 0 ;	563:9:13986:13989	6165233	0	True				
ANR	6165346	AssignmentExpression	i = 0		6165233	0		=			
ANR	6165347	Identifier	i		6165233	0					
ANR	6165348	PrimaryExpression	0		6165233	1					
ANR	6165349	Condition	i < ( local ? 2 : 3 )	563:14:13991:14007	6165233	1	True				
ANR	6165350	RelationalExpression	i < ( local ? 2 : 3 )		6165233	0		<			
ANR	6165351	Identifier	i		6165233	0					
ANR	6165352	ConditionalExpression	local ? 2 : 3		6165233	1					
ANR	6165353	Condition	local		6165233	0					
ANR	6165354	Identifier	local		6165233	0					
ANR	6165355	PrimaryExpression	2		6165233	1					
ANR	6165356	PrimaryExpression	3		6165233	2					
ANR	6165357	PostIncDecOperationExpression	i ++	563:33:14010:14012	6165233	2	True				
ANR	6165358	Identifier	i		6165233	0					
ANR	6165359	IncDec	++		6165233	1					
ANR	6165360	CompoundStatement		21:38:447:447	6165233	3					
ANR	6165361	ExpressionStatement	size += _zip_read2 ( & p )	564:1:14018:14040	6165233	0	True				
ANR	6165362	AssignmentExpression	size += _zip_read2 ( & p )		6165233	0		+=			
ANR	6165363	Identifier	size		6165233	0					
ANR	6165364	CallExpression	_zip_read2 ( & p )		6165233	1					
ANR	6165365	Callee	_zip_read2		6165233	0					
ANR	6165366	Identifier	_zip_read2		6165233	0					
ANR	6165367	ArgumentList	& p		6165233	1					
ANR	6165368	Argument	& p		6165233	0					
ANR	6165369	UnaryOperationExpression	& p		6165233	0					
ANR	6165370	UnaryOperator	&		6165233	0					
ANR	6165371	Identifier	p		6165233	1					
ANR	6165372	ReturnStatement	return size ;	567:4:14053:14064	6165233	10	True				
ANR	6165373	Identifier	size		6165233	0					
ANR	6165374	ReturnType	zip_int32_t		6165233	1					
ANR	6165375	Identifier	_zip_dirent_size		6165233	2					
ANR	6165376	ParameterList	"FILE * f , zip_uint16_t flags , struct zip_error * error"		6165233	3					
ANR	6165377	Parameter	FILE * f	542:17:13513:13519	6165233	0	True				
ANR	6165378	ParameterType	FILE *		6165233	0					
ANR	6165379	Identifier	f		6165233	1					
ANR	6165380	Parameter	zip_uint16_t flags	542:26:13522:13539	6165233	1	True				
ANR	6165381	ParameterType	zip_uint16_t		6165233	0					
ANR	6165382	Identifier	flags		6165233	1					
ANR	6165383	Parameter	struct zip_error * error	542:46:13542:13564	6165233	2	True				
ANR	6165384	ParameterType	struct zip_error *		6165233	0					
ANR	6165385	Identifier	error		6165233	1					
ANR	6165386	CFGEntryNode	ENTRY		6165233		True				
ANR	6165387	CFGExitNode	EXIT		6165233		True				
ANR	6165388	Symbol	b		6165233						
ANR	6165389	Symbol	CDENTRYSIZE		6165233						
ANR	6165390	Symbol	errno		6165233						
ANR	6165391	Symbol	SEEK_CUR		6165233						
ANR	6165392	Symbol	f		6165233						
ANR	6165393	Symbol	LENTRYSIZE		6165233						
ANR	6165394	Symbol	flags		6165233						
ANR	6165395	Symbol	i		6165233						
ANR	6165396	Symbol	ZIP_ER_SEEK		6165233						
ANR	6165397	Symbol	error		6165233						
ANR	6165398	Symbol	ZIP_ER_READ		6165233						
ANR	6165399	Symbol	fseek		6165233						
ANR	6165400	Symbol	local		6165233						
ANR	6165401	Symbol	fread		6165233						
ANR	6165402	Symbol	p		6165233						
ANR	6165403	Symbol	ZIP_EF_LOCAL		6165233						
ANR	6165404	Symbol	size		6165233						
ANR	6165405	Symbol	& p		6165233						
ANR	6165406	Symbol	_zip_read2		6165233						
ANR	6165407	Function	_zip_dirent_torrent_normalize	576:0:14153:15212							
ANR	6165408	FunctionDef	_zip_dirent_torrent_normalize (struct zip_dirent * de)		6165407	0					
ANR	6165409	CompoundStatement		578:0:14211:15212	6165407	0					
ANR	6165410	Statement	static	579:4:14217:14222	6165407	0	True				
ANR	6165411	IdentifierDeclStatement	struct tm torrenttime ;	579:11:14224:14245	6165407	1	True				
ANR	6165412	IdentifierDecl	torrenttime		6165407	0					
ANR	6165413	IdentifierDeclType	struct tm		6165407	0					
ANR	6165414	Identifier	torrenttime		6165407	1					
ANR	6165415	Statement	static	580:4:14251:14256	6165407	2	True				
ANR	6165416	IdentifierDeclStatement	time_t last_mod = 0 ;	580:11:14258:14277	6165407	3	True				
ANR	6165417	IdentifierDecl	last_mod = 0		6165407	0					
ANR	6165418	IdentifierDeclType	time_t		6165407	0					
ANR	6165419	Identifier	last_mod		6165407	1					
ANR	6165420	AssignmentExpression	last_mod = 0		6165407	2		=			
ANR	6165421	Identifier	last_mod		6165407	0					
ANR	6165422	PrimaryExpression	0		6165407	1					
ANR	6165423	Statement	undef	582:1:14281:14285	6165407	4	True				
ANR	6165424	Statement	HAVE_STRUCT_TM_TM_ZONE	582:7:14287:14308	6165407	5	True				
ANR	6165425	IfStatement	if ( last_mod == 0 )		6165407	6					
ANR	6165426	Condition	last_mod == 0	583:8:14318:14330	6165407	0	True				
ANR	6165427	EqualityExpression	last_mod == 0		6165407	0		==			
ANR	6165428	Identifier	last_mod		6165407	0					
ANR	6165429	PrimaryExpression	0		6165407	1					
ANR	6165430	CompoundStatement		9:1:167:179	6165407	1					
ANR	6165431	IdentifierDeclStatement	time_t now ;	585:1:14366:14376	6165407	0	True				
ANR	6165432	IdentifierDecl	now		6165407	0					
ANR	6165433	IdentifierDeclType	time_t		6165407	0					
ANR	6165434	Identifier	now		6165407	1					
ANR	6165435	IdentifierDeclStatement	struct tm * l ;	586:1:14379:14391	6165407	1	True				
ANR	6165436	IdentifierDecl	* l		6165407	0					
ANR	6165437	IdentifierDeclType	struct tm *		6165407	0					
ANR	6165438	Identifier	l		6165407	1					
ANR	6165439	ExpressionStatement	torrenttime . tm_sec = 0	589:1:14402:14424	6165407	2	True				
ANR	6165440	AssignmentExpression	torrenttime . tm_sec = 0		6165407	0		=			
ANR	6165441	MemberAccess	torrenttime . tm_sec		6165407	0					
ANR	6165442	Identifier	torrenttime		6165407	0					
ANR	6165443	Identifier	tm_sec		6165407	1					
ANR	6165444	PrimaryExpression	0		6165407	1					
ANR	6165445	ExpressionStatement	torrenttime . tm_min = 32	590:1:14427:14450	6165407	3	True				
ANR	6165446	AssignmentExpression	torrenttime . tm_min = 32		6165407	0		=			
ANR	6165447	MemberAccess	torrenttime . tm_min		6165407	0					
ANR	6165448	Identifier	torrenttime		6165407	0					
ANR	6165449	Identifier	tm_min		6165407	1					
ANR	6165450	PrimaryExpression	32		6165407	1					
ANR	6165451	ExpressionStatement	torrenttime . tm_hour = 23	591:1:14453:14477	6165407	4	True				
ANR	6165452	AssignmentExpression	torrenttime . tm_hour = 23		6165407	0		=			
ANR	6165453	MemberAccess	torrenttime . tm_hour		6165407	0					
ANR	6165454	Identifier	torrenttime		6165407	0					
ANR	6165455	Identifier	tm_hour		6165407	1					
ANR	6165456	PrimaryExpression	23		6165407	1					
ANR	6165457	ExpressionStatement	torrenttime . tm_mday = 24	592:1:14480:14504	6165407	5	True				
ANR	6165458	AssignmentExpression	torrenttime . tm_mday = 24		6165407	0		=			
ANR	6165459	MemberAccess	torrenttime . tm_mday		6165407	0					
ANR	6165460	Identifier	torrenttime		6165407	0					
ANR	6165461	Identifier	tm_mday		6165407	1					
ANR	6165462	PrimaryExpression	24		6165407	1					
ANR	6165463	ExpressionStatement	torrenttime . tm_mon = 11	593:1:14507:14530	6165407	6	True				
ANR	6165464	AssignmentExpression	torrenttime . tm_mon = 11		6165407	0		=			
ANR	6165465	MemberAccess	torrenttime . tm_mon		6165407	0					
ANR	6165466	Identifier	torrenttime		6165407	0					
ANR	6165467	Identifier	tm_mon		6165407	1					
ANR	6165468	PrimaryExpression	11		6165407	1					
ANR	6165469	ExpressionStatement	torrenttime . tm_year = 96	594:1:14533:14557	6165407	7	True				
ANR	6165470	AssignmentExpression	torrenttime . tm_year = 96		6165407	0		=			
ANR	6165471	MemberAccess	torrenttime . tm_year		6165407	0					
ANR	6165472	Identifier	torrenttime		6165407	0					
ANR	6165473	Identifier	tm_year		6165407	1					
ANR	6165474	PrimaryExpression	96		6165407	1					
ANR	6165475	ExpressionStatement	torrenttime . tm_wday = 0	595:1:14560:14583	6165407	8	True				
ANR	6165476	AssignmentExpression	torrenttime . tm_wday = 0		6165407	0		=			
ANR	6165477	MemberAccess	torrenttime . tm_wday		6165407	0					
ANR	6165478	Identifier	torrenttime		6165407	0					
ANR	6165479	Identifier	tm_wday		6165407	1					
ANR	6165480	PrimaryExpression	0		6165407	1					
ANR	6165481	ExpressionStatement	torrenttime . tm_yday = 0	596:1:14586:14609	6165407	9	True				
ANR	6165482	AssignmentExpression	torrenttime . tm_yday = 0		6165407	0		=			
ANR	6165483	MemberAccess	torrenttime . tm_yday		6165407	0					
ANR	6165484	Identifier	torrenttime		6165407	0					
ANR	6165485	Identifier	tm_yday		6165407	1					
ANR	6165486	PrimaryExpression	0		6165407	1					
ANR	6165487	ExpressionStatement	torrenttime . tm_isdst = 0	597:1:14612:14636	6165407	10	True				
ANR	6165488	AssignmentExpression	torrenttime . tm_isdst = 0		6165407	0		=			
ANR	6165489	MemberAccess	torrenttime . tm_isdst		6165407	0					
ANR	6165490	Identifier	torrenttime		6165407	0					
ANR	6165491	Identifier	tm_isdst		6165407	1					
ANR	6165492	PrimaryExpression	0		6165407	1					
ANR	6165493	ExpressionStatement	time ( & now )	600:1:14670:14680	6165407	11	True				
ANR	6165494	CallExpression	time ( & now )		6165407	0					
ANR	6165495	Callee	time		6165407	0					
ANR	6165496	Identifier	time		6165407	0					
ANR	6165497	ArgumentList	& now		6165407	1					
ANR	6165498	Argument	& now		6165407	0					
ANR	6165499	UnaryOperationExpression	& now		6165407	0					
ANR	6165500	UnaryOperator	&		6165407	0					
ANR	6165501	Identifier	now		6165407	1					
ANR	6165502	ExpressionStatement	l = localtime ( & now )	601:1:14683:14702	6165407	12	True				
ANR	6165503	AssignmentExpression	l = localtime ( & now )		6165407	0		=			
ANR	6165504	Identifier	l		6165407	0					
ANR	6165505	CallExpression	localtime ( & now )		6165407	1					
ANR	6165506	Callee	localtime		6165407	0					
ANR	6165507	Identifier	localtime		6165407	0					
ANR	6165508	ArgumentList	& now		6165407	1					
ANR	6165509	Argument	& now		6165407	0					
ANR	6165510	UnaryOperationExpression	& now		6165407	0					
ANR	6165511	UnaryOperator	&		6165407	0					
ANR	6165512	Identifier	now		6165407	1					
ANR	6165513	ExpressionStatement	torrenttime . tm_gmtoff = l -> tm_gmtoff	602:1:14705:14741	6165407	13	True				
ANR	6165514	AssignmentExpression	torrenttime . tm_gmtoff = l -> tm_gmtoff		6165407	0		=			
ANR	6165515	MemberAccess	torrenttime . tm_gmtoff		6165407	0					
ANR	6165516	Identifier	torrenttime		6165407	0					
ANR	6165517	Identifier	tm_gmtoff		6165407	1					
ANR	6165518	PtrMemberAccess	l -> tm_gmtoff		6165407	1					
ANR	6165519	Identifier	l		6165407	0					
ANR	6165520	Identifier	tm_gmtoff		6165407	1					
ANR	6165521	ExpressionStatement	torrenttime . tm_zone = l -> tm_zone	603:1:14744:14776	6165407	14	True				
ANR	6165522	AssignmentExpression	torrenttime . tm_zone = l -> tm_zone		6165407	0		=			
ANR	6165523	MemberAccess	torrenttime . tm_zone		6165407	0					
ANR	6165524	Identifier	torrenttime		6165407	0					
ANR	6165525	Identifier	tm_zone		6165407	1					
ANR	6165526	PtrMemberAccess	l -> tm_zone		6165407	1					
ANR	6165527	Identifier	l		6165407	0					
ANR	6165528	Identifier	tm_zone		6165407	1					
ANR	6165529	ExpressionStatement	last_mod = mktime ( & torrenttime )	606:1:14787:14818	6165407	15	True				
ANR	6165530	AssignmentExpression	last_mod = mktime ( & torrenttime )		6165407	0		=			
ANR	6165531	Identifier	last_mod		6165407	0					
ANR	6165532	CallExpression	mktime ( & torrenttime )		6165407	1					
ANR	6165533	Callee	mktime		6165407	0					
ANR	6165534	Identifier	mktime		6165407	0					
ANR	6165535	ArgumentList	& torrenttime		6165407	1					
ANR	6165536	Argument	& torrenttime		6165407	0					
ANR	6165537	UnaryOperationExpression	& torrenttime		6165407	0					
ANR	6165538	UnaryOperator	&		6165407	0					
ANR	6165539	Identifier	torrenttime		6165407	1					
ANR	6165540	ExpressionStatement	de -> version_madeby = 0	609:4:14835:14857	6165407	7	True				
ANR	6165541	AssignmentExpression	de -> version_madeby = 0		6165407	0		=			
ANR	6165542	PtrMemberAccess	de -> version_madeby		6165407	0					
ANR	6165543	Identifier	de		6165407	0					
ANR	6165544	Identifier	version_madeby		6165407	1					
ANR	6165545	PrimaryExpression	0		6165407	1					
ANR	6165546	ExpressionStatement	de -> version_needed = 20	610:4:14863:14886	6165407	8	True				
ANR	6165547	AssignmentExpression	de -> version_needed = 20		6165407	0		=			
ANR	6165548	PtrMemberAccess	de -> version_needed		6165407	0					
ANR	6165549	Identifier	de		6165407	0					
ANR	6165550	Identifier	version_needed		6165407	1					
ANR	6165551	PrimaryExpression	20		6165407	1					
ANR	6165552	ExpressionStatement	de -> bitflags = 2	611:4:14902:14918	6165407	9	True				
ANR	6165553	AssignmentExpression	de -> bitflags = 2		6165407	0		=			
ANR	6165554	PtrMemberAccess	de -> bitflags		6165407	0					
ANR	6165555	Identifier	de		6165407	0					
ANR	6165556	Identifier	bitflags		6165407	1					
ANR	6165557	PrimaryExpression	2		6165407	1					
ANR	6165558	ExpressionStatement	de -> comp_method = ZIP_CM_DEFLATE	612:4:14950:14982	6165407	10	True				
ANR	6165559	AssignmentExpression	de -> comp_method = ZIP_CM_DEFLATE		6165407	0		=			
ANR	6165560	PtrMemberAccess	de -> comp_method		6165407	0					
ANR	6165561	Identifier	de		6165407	0					
ANR	6165562	Identifier	comp_method		6165407	1					
ANR	6165563	Identifier	ZIP_CM_DEFLATE		6165407	1					
ANR	6165564	ExpressionStatement	de -> last_mod = last_mod	613:4:14988:15011	6165407	11	True				
ANR	6165565	AssignmentExpression	de -> last_mod = last_mod		6165407	0		=			
ANR	6165566	PtrMemberAccess	de -> last_mod		6165407	0					
ANR	6165567	Identifier	de		6165407	0					
ANR	6165568	Identifier	last_mod		6165407	1					
ANR	6165569	Identifier	last_mod		6165407	1					
ANR	6165570	ExpressionStatement	de -> disk_number = 0	615:4:15018:15037	6165407	12	True				
ANR	6165571	AssignmentExpression	de -> disk_number = 0		6165407	0		=			
ANR	6165572	PtrMemberAccess	de -> disk_number		6165407	0					
ANR	6165573	Identifier	de		6165407	0					
ANR	6165574	Identifier	disk_number		6165407	1					
ANR	6165575	PrimaryExpression	0		6165407	1					
ANR	6165576	ExpressionStatement	de -> int_attrib = 0	616:4:15043:15061	6165407	13	True				
ANR	6165577	AssignmentExpression	de -> int_attrib = 0		6165407	0		=			
ANR	6165578	PtrMemberAccess	de -> int_attrib		6165407	0					
ANR	6165579	Identifier	de		6165407	0					
ANR	6165580	Identifier	int_attrib		6165407	1					
ANR	6165581	PrimaryExpression	0		6165407	1					
ANR	6165582	ExpressionStatement	de -> ext_attrib = 0	617:4:15067:15085	6165407	14	True				
ANR	6165583	AssignmentExpression	de -> ext_attrib = 0		6165407	0		=			
ANR	6165584	PtrMemberAccess	de -> ext_attrib		6165407	0					
ANR	6165585	Identifier	de		6165407	0					
ANR	6165586	Identifier	ext_attrib		6165407	1					
ANR	6165587	PrimaryExpression	0		6165407	1					
ANR	6165588	ExpressionStatement	_zip_ef_free ( de -> extra_fields )	619:4:15092:15122	6165407	15	True				
ANR	6165589	CallExpression	_zip_ef_free ( de -> extra_fields )		6165407	0					
ANR	6165590	Callee	_zip_ef_free		6165407	0					
ANR	6165591	Identifier	_zip_ef_free		6165407	0					
ANR	6165592	ArgumentList	de -> extra_fields		6165407	1					
ANR	6165593	Argument	de -> extra_fields		6165407	0					
ANR	6165594	PtrMemberAccess	de -> extra_fields		6165407	0					
ANR	6165595	Identifier	de		6165407	0					
ANR	6165596	Identifier	extra_fields		6165407	1					
ANR	6165597	ExpressionStatement	de -> extra_fields = NULL	620:4:15128:15151	6165407	16	True				
ANR	6165598	AssignmentExpression	de -> extra_fields = NULL		6165407	0		=			
ANR	6165599	PtrMemberAccess	de -> extra_fields		6165407	0					
ANR	6165600	Identifier	de		6165407	0					
ANR	6165601	Identifier	extra_fields		6165407	1					
ANR	6165602	Identifier	NULL		6165407	1					
ANR	6165603	ExpressionStatement	_zip_string_free ( de -> comment )	621:4:15157:15186	6165407	17	True				
ANR	6165604	CallExpression	_zip_string_free ( de -> comment )		6165407	0					
ANR	6165605	Callee	_zip_string_free		6165407	0					
ANR	6165606	Identifier	_zip_string_free		6165407	0					
ANR	6165607	ArgumentList	de -> comment		6165407	1					
ANR	6165608	Argument	de -> comment		6165407	0					
ANR	6165609	PtrMemberAccess	de -> comment		6165407	0					
ANR	6165610	Identifier	de		6165407	0					
ANR	6165611	Identifier	comment		6165407	1					
ANR	6165612	ExpressionStatement	de -> comment = NULL	622:4:15192:15210	6165407	18	True				
ANR	6165613	AssignmentExpression	de -> comment = NULL		6165407	0		=			
ANR	6165614	PtrMemberAccess	de -> comment		6165407	0					
ANR	6165615	Identifier	de		6165407	0					
ANR	6165616	Identifier	comment		6165407	1					
ANR	6165617	Identifier	NULL		6165407	1					
ANR	6165618	ReturnType	void		6165407	1					
ANR	6165619	Identifier	_zip_dirent_torrent_normalize		6165407	2					
ANR	6165620	ParameterList	struct zip_dirent * de		6165407	3					
ANR	6165621	Parameter	struct zip_dirent * de	577:30:14188:14208	6165407	0	True				
ANR	6165622	ParameterType	struct zip_dirent *		6165407	0					
ANR	6165623	Identifier	de		6165407	1					
ANR	6165624	CFGEntryNode	ENTRY		6165407		True				
ANR	6165625	CFGExitNode	EXIT		6165407		True				
ANR	6165626	Symbol	localtime		6165407						
ANR	6165627	Symbol	de -> extra_fields		6165407						
ANR	6165628	Symbol	de		6165407						
ANR	6165629	Symbol	torrenttime . tm_sec		6165407						
ANR	6165630	Symbol	torrenttime . tm_min		6165407						
ANR	6165631	Symbol	torrenttime		6165407						
ANR	6165632	Symbol	de -> comp_method		6165407						
ANR	6165633	Symbol	l -> tm_zone		6165407						
ANR	6165634	Symbol	torrenttime . tm_mday		6165407						
ANR	6165635	Symbol	torrenttime . tm_zone		6165407						
ANR	6165636	Symbol	ZIP_CM_DEFLATE		6165407						
ANR	6165637	Symbol	de -> int_attrib		6165407						
ANR	6165638	Symbol	de -> comment		6165407						
ANR	6165639	Symbol	last_mod		6165407						
ANR	6165640	Symbol	de -> version_needed		6165407						
ANR	6165641	Symbol	de -> last_mod		6165407						
ANR	6165642	Symbol	de -> ext_attrib		6165407						
ANR	6165643	Symbol	now		6165407						
ANR	6165644	Symbol	torrenttime . tm_hour		6165407						
ANR	6165645	Symbol	& torrenttime		6165407						
ANR	6165646	Symbol	de -> disk_number		6165407						
ANR	6165647	Symbol	NULL		6165407						
ANR	6165648	Symbol	torrenttime . tm_yday		6165407						
ANR	6165649	Symbol	* de		6165407						
ANR	6165650	Symbol	l -> tm_gmtoff		6165407						
ANR	6165651	Symbol	torrenttime . tm_isdst		6165407						
ANR	6165652	Symbol	l		6165407						
ANR	6165653	Symbol	torrenttime . tm_gmtoff		6165407						
ANR	6165654	Symbol	mktime		6165407						
ANR	6165655	Symbol	de -> version_madeby		6165407						
ANR	6165656	Symbol	* l		6165407						
ANR	6165657	Symbol	torrenttime . tm_wday		6165407						
ANR	6165658	Symbol	& now		6165407						
ANR	6165659	Symbol	de -> bitflags		6165407						
ANR	6165660	Symbol	torrenttime . tm_year		6165407						
ANR	6165661	Symbol	torrenttime . tm_mon		6165407						
ANR	6165662	Function	_zip_dirent_write	637:0:15618:19655							
ANR	6165663	FunctionDef	"_zip_dirent_write (struct zip_dirent * de , FILE * fp , zip_flags_t flags , struct zip_error * error)"		6165662	0					
ANR	6165664	CompoundStatement		639:0:15717:19655	6165662	0					
ANR	6165665	IdentifierDeclStatement	"unsigned short dostime , dosdate ;"	640:4:15723:15754	6165662	0	True				
ANR	6165666	IdentifierDecl	dostime		6165662	0					
ANR	6165667	IdentifierDeclType	unsigned short		6165662	0					
ANR	6165668	Identifier	dostime		6165662	1					
ANR	6165669	IdentifierDecl	dosdate		6165662	1					
ANR	6165670	IdentifierDeclType	unsigned short		6165662	0					
ANR	6165671	Identifier	dosdate		6165662	1					
ANR	6165672	IdentifierDeclStatement	"enum zip_encoding_type com_enc , name_enc ;"	641:4:15760:15800	6165662	1	True				
ANR	6165673	IdentifierDecl	com_enc		6165662	0					
ANR	6165674	IdentifierDeclType	enum zip_encoding_type		6165662	0					
ANR	6165675	Identifier	com_enc		6165662	1					
ANR	6165676	IdentifierDecl	name_enc		6165662	1					
ANR	6165677	IdentifierDeclType	enum zip_encoding_type		6165662	0					
ANR	6165678	Identifier	name_enc		6165662	1					
ANR	6165679	IdentifierDeclStatement	struct zip_extra_field * ef ;	642:4:15806:15832	6165662	2	True				
ANR	6165680	IdentifierDecl	* ef		6165662	0					
ANR	6165681	IdentifierDeclType	struct zip_extra_field *		6165662	0					
ANR	6165682	Identifier	ef		6165662	1					
ANR	6165683	IdentifierDeclStatement	"zip_uint8_t ef_zip64 [ 24 ] , * ef_zip64_p ;"	643:4:15838:15875	6165662	3	True				
ANR	6165684	IdentifierDecl	ef_zip64 [ 24 ]		6165662	0					
ANR	6165685	IdentifierDeclType	zip_uint8_t [ 24 ]		6165662	0					
ANR	6165686	Identifier	ef_zip64		6165662	1					
ANR	6165687	PrimaryExpression	24		6165662	2					
ANR	6165688	IdentifierDecl	* ef_zip64_p		6165662	1					
ANR	6165689	IdentifierDeclType	zip_uint8_t *		6165662	0					
ANR	6165690	Identifier	ef_zip64_p		6165662	1					
ANR	6165691	IdentifierDeclStatement	int is_zip64 ;	644:4:15881:15893	6165662	4	True				
ANR	6165692	IdentifierDecl	is_zip64		6165662	0					
ANR	6165693	IdentifierDeclType	int		6165662	0					
ANR	6165694	Identifier	is_zip64		6165662	1					
ANR	6165695	IdentifierDeclStatement	int is_really_zip64 ;	645:4:15899:15918	6165662	5	True				
ANR	6165696	IdentifierDecl	is_really_zip64		6165662	0					
ANR	6165697	IdentifierDeclType	int		6165662	0					
ANR	6165698	Identifier	is_really_zip64		6165662	1					
ANR	6165699	ExpressionStatement	ef = NULL	647:4:15925:15934	6165662	6	True				
ANR	6165700	AssignmentExpression	ef = NULL		6165662	0		=			
ANR	6165701	Identifier	ef		6165662	0					
ANR	6165702	Identifier	NULL		6165662	1					
ANR	6165703	ExpressionStatement	is_zip64 = 0	649:4:15941:15953	6165662	7	True				
ANR	6165704	AssignmentExpression	is_zip64 = 0		6165662	0		=			
ANR	6165705	Identifier	is_zip64		6165662	0					
ANR	6165706	PrimaryExpression	0		6165662	1					
ANR	6165707	ExpressionStatement	"fwrite ( ( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC , 1 , 4 , fp )"	651:4:15960:16030	6165662	8	True				
ANR	6165708	CallExpression	"fwrite ( ( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC , 1 , 4 , fp )"		6165662	0					
ANR	6165709	Callee	fwrite		6165662	0					
ANR	6165710	Identifier	fwrite		6165662	0					
ANR	6165711	ArgumentList	( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC		6165662	1					
ANR	6165712	Argument	( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC		6165662	0					
ANR	6165713	ConditionalExpression	( flags & ZIP_FL_LOCAL ) ? LOCAL_MAGIC : CENTRAL_MAGIC		6165662	0					
ANR	6165714	Condition	flags & ZIP_FL_LOCAL		6165662	0					
ANR	6165715	BitAndExpression	flags & ZIP_FL_LOCAL		6165662	0		&			
ANR	6165716	Identifier	flags		6165662	0					
ANR	6165717	Identifier	ZIP_FL_LOCAL		6165662	1					
ANR	6165718	Identifier	LOCAL_MAGIC		6165662	1					
ANR	6165719	Identifier	CENTRAL_MAGIC		6165662	2					
ANR	6165720	Argument	1		6165662	1					
ANR	6165721	PrimaryExpression	1		6165662	0					
ANR	6165722	Argument	4		6165662	2					
ANR	6165723	PrimaryExpression	4		6165662	0					
ANR	6165724	Argument	fp		6165662	3					
ANR	6165725	Identifier	fp		6165662	0					
ANR	6165726	ExpressionStatement	"name_enc = _zip_guess_encoding ( de -> filename , ZIP_ENCODING_UNKNOWN )"	653:4:16037:16103	6165662	9	True				
ANR	6165727	AssignmentExpression	"name_enc = _zip_guess_encoding ( de -> filename , ZIP_ENCODING_UNKNOWN )"		6165662	0		=			
ANR	6165728	Identifier	name_enc		6165662	0					
ANR	6165729	CallExpression	"_zip_guess_encoding ( de -> filename , ZIP_ENCODING_UNKNOWN )"		6165662	1					
ANR	6165730	Callee	_zip_guess_encoding		6165662	0					
ANR	6165731	Identifier	_zip_guess_encoding		6165662	0					
ANR	6165732	ArgumentList	de -> filename		6165662	1					
ANR	6165733	Argument	de -> filename		6165662	0					
ANR	6165734	PtrMemberAccess	de -> filename		6165662	0					
ANR	6165735	Identifier	de		6165662	0					
ANR	6165736	Identifier	filename		6165662	1					
ANR	6165737	Argument	ZIP_ENCODING_UNKNOWN		6165662	1					
ANR	6165738	Identifier	ZIP_ENCODING_UNKNOWN		6165662	0					
ANR	6165739	ExpressionStatement	"com_enc = _zip_guess_encoding ( de -> comment , ZIP_ENCODING_UNKNOWN )"	654:4:16109:16173	6165662	10	True				
ANR	6165740	AssignmentExpression	"com_enc = _zip_guess_encoding ( de -> comment , ZIP_ENCODING_UNKNOWN )"		6165662	0		=			
ANR	6165741	Identifier	com_enc		6165662	0					
ANR	6165742	CallExpression	"_zip_guess_encoding ( de -> comment , ZIP_ENCODING_UNKNOWN )"		6165662	1					
ANR	6165743	Callee	_zip_guess_encoding		6165662	0					
ANR	6165744	Identifier	_zip_guess_encoding		6165662	0					
ANR	6165745	ArgumentList	de -> comment		6165662	1					
ANR	6165746	Argument	de -> comment		6165662	0					
ANR	6165747	PtrMemberAccess	de -> comment		6165662	0					
ANR	6165748	Identifier	de		6165662	0					
ANR	6165749	Identifier	comment		6165662	1					
ANR	6165750	Argument	ZIP_ENCODING_UNKNOWN		6165662	1					
ANR	6165751	Identifier	ZIP_ENCODING_UNKNOWN		6165662	0					
ANR	6165752	IfStatement	if ( ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII ) || ( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN ) )		6165662	11					
ANR	6165753	Condition	( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII ) || ( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN )	656:8:16184:16410	6165662	0	True				
ANR	6165754	OrExpression	( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII ) || ( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN )		6165662	0		||			
ANR	6165755	AndExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_ASCII		6165662	0		&&			
ANR	6165756	EqualityExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	0		==			
ANR	6165757	Identifier	name_enc		6165662	0					
ANR	6165758	Identifier	ZIP_ENCODING_UTF8_KNOWN		6165662	1					
ANR	6165759	EqualityExpression	com_enc == ZIP_ENCODING_ASCII		6165662	1		==			
ANR	6165760	Identifier	com_enc		6165662	0					
ANR	6165761	Identifier	ZIP_ENCODING_ASCII		6165662	1					
ANR	6165762	OrExpression	( name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN ) || ( name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN )		6165662	1		||			
ANR	6165763	AndExpression	name_enc == ZIP_ENCODING_ASCII && com_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	0		&&			
ANR	6165764	EqualityExpression	name_enc == ZIP_ENCODING_ASCII		6165662	0		==			
ANR	6165765	Identifier	name_enc		6165662	0					
ANR	6165766	Identifier	ZIP_ENCODING_ASCII		6165662	1					
ANR	6165767	EqualityExpression	com_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	1		==			
ANR	6165768	Identifier	com_enc		6165662	0					
ANR	6165769	Identifier	ZIP_ENCODING_UTF8_KNOWN		6165662	1					
ANR	6165770	AndExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN && com_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	1		&&			
ANR	6165771	EqualityExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	0		==			
ANR	6165772	Identifier	name_enc		6165662	0					
ANR	6165773	Identifier	ZIP_ENCODING_UTF8_KNOWN		6165662	1					
ANR	6165774	EqualityExpression	com_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	1		==			
ANR	6165775	Identifier	com_enc		6165662	0					
ANR	6165776	Identifier	ZIP_ENCODING_UTF8_KNOWN		6165662	1					
ANR	6165777	ExpressionStatement	de -> bitflags |= ZIP_GPBF_ENCODING_UTF_8	659:1:16414:16453	6165662	1	True				
ANR	6165778	AssignmentExpression	de -> bitflags |= ZIP_GPBF_ENCODING_UTF_8		6165662	0		|=			
ANR	6165779	PtrMemberAccess	de -> bitflags		6165662	0					
ANR	6165780	Identifier	de		6165662	0					
ANR	6165781	Identifier	bitflags		6165662	1					
ANR	6165782	Identifier	ZIP_GPBF_ENCODING_UTF_8		6165662	1					
ANR	6165783	ElseStatement	else		6165662	0					
ANR	6165784	CompoundStatement		22:9:746:746	6165662	0					
ANR	6165785	ExpressionStatement	de -> bitflags &= ~ZIP_GPBF_ENCODING_UTF_8	661:1:16467:16507	6165662	0	True				
ANR	6165786	AssignmentExpression	de -> bitflags &= ~ZIP_GPBF_ENCODING_UTF_8		6165662	0		&=			
ANR	6165787	PtrMemberAccess	de -> bitflags		6165662	0					
ANR	6165788	Identifier	de		6165662	0					
ANR	6165789	Identifier	bitflags		6165662	1					
ANR	6165790	Identifier	~ZIP_GPBF_ENCODING_UTF_8		6165662	1					
ANR	6165791	IfStatement	if ( name_enc == ZIP_ENCODING_UTF8_KNOWN )		6165662	1					
ANR	6165792	Condition	name_enc == ZIP_ENCODING_UTF8_KNOWN	662:5:16514:16548	6165662	0	True				
ANR	6165793	EqualityExpression	name_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	0		==			
ANR	6165794	Identifier	name_enc		6165662	0					
ANR	6165795	Identifier	ZIP_ENCODING_UTF8_KNOWN		6165662	1					
ANR	6165796	CompoundStatement		24:42:833:833	6165662	1					
ANR	6165797	ExpressionStatement	"ef = _zip_ef_utf8 ( ZIP_EF_UTF_8_NAME , de -> filename , error )"	663:5:16558:16615	6165662	0	True				
ANR	6165798	AssignmentExpression	"ef = _zip_ef_utf8 ( ZIP_EF_UTF_8_NAME , de -> filename , error )"		6165662	0		=			
ANR	6165799	Identifier	ef		6165662	0					
ANR	6165800	CallExpression	"_zip_ef_utf8 ( ZIP_EF_UTF_8_NAME , de -> filename , error )"		6165662	1					
ANR	6165801	Callee	_zip_ef_utf8		6165662	0					
ANR	6165802	Identifier	_zip_ef_utf8		6165662	0					
ANR	6165803	ArgumentList	ZIP_EF_UTF_8_NAME		6165662	1					
ANR	6165804	Argument	ZIP_EF_UTF_8_NAME		6165662	0					
ANR	6165805	Identifier	ZIP_EF_UTF_8_NAME		6165662	0					
ANR	6165806	Argument	de -> filename		6165662	1					
ANR	6165807	PtrMemberAccess	de -> filename		6165662	0					
ANR	6165808	Identifier	de		6165662	0					
ANR	6165809	Identifier	filename		6165662	1					
ANR	6165810	Argument	error		6165662	2					
ANR	6165811	Identifier	error		6165662	0					
ANR	6165812	IfStatement	if ( ef == NULL )		6165662	1					
ANR	6165813	Condition	ef == NULL	664:9:16626:16635	6165662	0	True				
ANR	6165814	EqualityExpression	ef == NULL		6165662	0		==			
ANR	6165815	Identifier	ef		6165662	0					
ANR	6165816	Identifier	NULL		6165662	1					
ANR	6165817	ReturnStatement	return - 1 ;	665:2:16640:16649	6165662	1	True				
ANR	6165818	UnaryOperationExpression	- 1		6165662	0					
ANR	6165819	UnaryOperator	-		6165662	0					
ANR	6165820	PrimaryExpression	1		6165662	1					
ANR	6165821	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 && com_enc == ZIP_ENCODING_UTF8_KNOWN )		6165662	2					
ANR	6165822	Condition	( flags & ZIP_FL_LOCAL ) == 0 && com_enc == ZIP_ENCODING_UTF8_KNOWN	667:5:16659:16723	6165662	0	True				
ANR	6165823	AndExpression	( flags & ZIP_FL_LOCAL ) == 0 && com_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	0		&&			
ANR	6165824	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6165662	0		==			
ANR	6165825	BitAndExpression	flags & ZIP_FL_LOCAL		6165662	0		&			
ANR	6165826	Identifier	flags		6165662	0					
ANR	6165827	Identifier	ZIP_FL_LOCAL		6165662	1					
ANR	6165828	PrimaryExpression	0		6165662	1					
ANR	6165829	EqualityExpression	com_enc == ZIP_ENCODING_UTF8_KNOWN		6165662	1		==			
ANR	6165830	Identifier	com_enc		6165662	0					
ANR	6165831	Identifier	ZIP_ENCODING_UTF8_KNOWN		6165662	1					
ANR	6165832	CompoundStatement		30:5:1014:1098	6165662	1					
ANR	6165833	IdentifierDeclStatement	"struct zip_extra_field * ef2 = _zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error ) ;"	668:5:16732:16816	6165662	0	True				
ANR	6165834	IdentifierDecl	"* ef2 = _zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error )"		6165662	0					
ANR	6165835	IdentifierDeclType	struct zip_extra_field *		6165662	0					
ANR	6165836	Identifier	ef2		6165662	1					
ANR	6165837	AssignmentExpression	"* ef2 = _zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error )"		6165662	2		=			
ANR	6165838	Identifier	ef2		6165662	0					
ANR	6165839	CallExpression	"_zip_ef_utf8 ( ZIP_EF_UTF_8_COMMENT , de -> comment , error )"		6165662	1					
ANR	6165840	Callee	_zip_ef_utf8		6165662	0					
ANR	6165841	Identifier	_zip_ef_utf8		6165662	0					
ANR	6165842	ArgumentList	ZIP_EF_UTF_8_COMMENT		6165662	1					
ANR	6165843	Argument	ZIP_EF_UTF_8_COMMENT		6165662	0					
ANR	6165844	Identifier	ZIP_EF_UTF_8_COMMENT		6165662	0					
ANR	6165845	Argument	de -> comment		6165662	1					
ANR	6165846	PtrMemberAccess	de -> comment		6165662	0					
ANR	6165847	Identifier	de		6165662	0					
ANR	6165848	Identifier	comment		6165662	1					
ANR	6165849	Argument	error		6165662	2					
ANR	6165850	Identifier	error		6165662	0					
ANR	6165851	IfStatement	if ( ef2 == NULL )		6165662	1					
ANR	6165852	Condition	ef2 == NULL	669:9:16827:16837	6165662	0	True				
ANR	6165853	EqualityExpression	ef2 == NULL		6165662	0		==			
ANR	6165854	Identifier	ef2		6165662	0					
ANR	6165855	Identifier	NULL		6165662	1					
ANR	6165856	CompoundStatement		31:22:1122:1122	6165662	1					
ANR	6165857	ExpressionStatement	_zip_ef_free ( ef )	670:2:16844:16860	6165662	0	True				
ANR	6165858	CallExpression	_zip_ef_free ( ef )		6165662	0					
ANR	6165859	Callee	_zip_ef_free		6165662	0					
ANR	6165860	Identifier	_zip_ef_free		6165662	0					
ANR	6165861	ArgumentList	ef		6165662	1					
ANR	6165862	Argument	ef		6165662	0					
ANR	6165863	Identifier	ef		6165662	0					
ANR	6165864	ReturnStatement	return - 1 ;	671:2:16864:16873	6165662	1	True				
ANR	6165865	UnaryOperationExpression	- 1		6165662	0					
ANR	6165866	UnaryOperator	-		6165662	0					
ANR	6165867	PrimaryExpression	1		6165662	1					
ANR	6165868	ExpressionStatement	ef2 -> next = ef	673:5:16887:16901	6165662	2	True				
ANR	6165869	AssignmentExpression	ef2 -> next = ef		6165662	0		=			
ANR	6165870	PtrMemberAccess	ef2 -> next		6165662	0					
ANR	6165871	Identifier	ef2		6165662	0					
ANR	6165872	Identifier	next		6165662	1					
ANR	6165873	Identifier	ef		6165662	1					
ANR	6165874	ExpressionStatement	ef = ef2	674:5:16908:16916	6165662	3	True				
ANR	6165875	AssignmentExpression	ef = ef2		6165662	0		=			
ANR	6165876	Identifier	ef		6165662	0					
ANR	6165877	Identifier	ef2		6165662	1					
ANR	6165878	ExpressionStatement	ef_zip64_p = ef_zip64	678:4:16932:16953	6165662	12	True				
ANR	6165879	AssignmentExpression	ef_zip64_p = ef_zip64		6165662	0		=			
ANR	6165880	Identifier	ef_zip64_p		6165662	0					
ANR	6165881	Identifier	ef_zip64		6165662	1					
ANR	6165882	IfStatement	if ( flags & ZIP_FL_LOCAL )		6165662	13					
ANR	6165883	Condition	flags & ZIP_FL_LOCAL	679:8:16963:16982	6165662	0	True				
ANR	6165884	BitAndExpression	flags & ZIP_FL_LOCAL		6165662	0		&			
ANR	6165885	Identifier	flags		6165662	0					
ANR	6165886	Identifier	ZIP_FL_LOCAL		6165662	1					
ANR	6165887	CompoundStatement		41:30:1267:1267	6165662	1					
ANR	6165888	IfStatement	if ( ( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX )		6165662	0					
ANR	6165889	Condition	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX	680:5:16992:17089	6165662	0	True				
ANR	6165890	OrExpression	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX		6165662	0		||			
ANR	6165891	BitAndExpression	flags & ZIP_FL_FORCE_ZIP64		6165662	0		&			
ANR	6165892	Identifier	flags		6165662	0					
ANR	6165893	Identifier	ZIP_FL_FORCE_ZIP64		6165662	1					
ANR	6165894	OrExpression	de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX		6165662	1		||			
ANR	6165895	RelationalExpression	de -> comp_size > ZIP_UINT32_MAX		6165662	0		>			
ANR	6165896	PtrMemberAccess	de -> comp_size		6165662	0					
ANR	6165897	Identifier	de		6165662	0					
ANR	6165898	Identifier	comp_size		6165662	1					
ANR	6165899	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6165900	RelationalExpression	de -> uncomp_size > ZIP_UINT32_MAX		6165662	1		>			
ANR	6165901	PtrMemberAccess	de -> uncomp_size		6165662	0					
ANR	6165902	Identifier	de		6165662	0					
ANR	6165903	Identifier	uncomp_size		6165662	1					
ANR	6165904	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6165905	CompoundStatement		42:105:1374:1374	6165662	1					
ANR	6165906	ExpressionStatement	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"	681:5:17099:17137	6165662	0	True				
ANR	6165907	CallExpression	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"		6165662	0					
ANR	6165908	Callee	_zip_poke8		6165662	0					
ANR	6165909	Identifier	_zip_poke8		6165662	0					
ANR	6165910	ArgumentList	de -> comp_size		6165662	1					
ANR	6165911	Argument	de -> comp_size		6165662	0					
ANR	6165912	PtrMemberAccess	de -> comp_size		6165662	0					
ANR	6165913	Identifier	de		6165662	0					
ANR	6165914	Identifier	comp_size		6165662	1					
ANR	6165915	Argument	& ef_zip64_p		6165662	1					
ANR	6165916	UnaryOperationExpression	& ef_zip64_p		6165662	0					
ANR	6165917	UnaryOperator	&		6165662	0					
ANR	6165918	Identifier	ef_zip64_p		6165662	1					
ANR	6165919	ExpressionStatement	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"	682:5:17144:17184	6165662	1	True				
ANR	6165920	CallExpression	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"		6165662	0					
ANR	6165921	Callee	_zip_poke8		6165662	0					
ANR	6165922	Identifier	_zip_poke8		6165662	0					
ANR	6165923	ArgumentList	de -> uncomp_size		6165662	1					
ANR	6165924	Argument	de -> uncomp_size		6165662	0					
ANR	6165925	PtrMemberAccess	de -> uncomp_size		6165662	0					
ANR	6165926	Identifier	de		6165662	0					
ANR	6165927	Identifier	uncomp_size		6165662	1					
ANR	6165928	Argument	& ef_zip64_p		6165662	1					
ANR	6165929	UnaryOperationExpression	& ef_zip64_p		6165662	0					
ANR	6165930	UnaryOperator	&		6165662	0					
ANR	6165931	Identifier	ef_zip64_p		6165662	1					
ANR	6165932	ElseStatement	else		6165662	0					
ANR	6165933	CompoundStatement		47:9:1486:1486	6165662	0					
ANR	6165934	IfStatement	if ( ( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX )		6165662	0					
ANR	6165935	Condition	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX	686:5:17211:17339	6165662	0	True				
ANR	6165936	OrExpression	( flags & ZIP_FL_FORCE_ZIP64 ) || de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX		6165662	0		||			
ANR	6165937	BitAndExpression	flags & ZIP_FL_FORCE_ZIP64		6165662	0		&			
ANR	6165938	Identifier	flags		6165662	0					
ANR	6165939	Identifier	ZIP_FL_FORCE_ZIP64		6165662	1					
ANR	6165940	OrExpression	de -> comp_size > ZIP_UINT32_MAX || de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX		6165662	1		||			
ANR	6165941	RelationalExpression	de -> comp_size > ZIP_UINT32_MAX		6165662	0		>			
ANR	6165942	PtrMemberAccess	de -> comp_size		6165662	0					
ANR	6165943	Identifier	de		6165662	0					
ANR	6165944	Identifier	comp_size		6165662	1					
ANR	6165945	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6165946	OrExpression	de -> uncomp_size > ZIP_UINT32_MAX || de -> offset > ZIP_UINT32_MAX		6165662	1		||			
ANR	6165947	RelationalExpression	de -> uncomp_size > ZIP_UINT32_MAX		6165662	0		>			
ANR	6165948	PtrMemberAccess	de -> uncomp_size		6165662	0					
ANR	6165949	Identifier	de		6165662	0					
ANR	6165950	Identifier	uncomp_size		6165662	1					
ANR	6165951	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6165952	RelationalExpression	de -> offset > ZIP_UINT32_MAX		6165662	1		>			
ANR	6165953	PtrMemberAccess	de -> offset		6165662	0					
ANR	6165954	Identifier	de		6165662	0					
ANR	6165955	Identifier	offset		6165662	1					
ANR	6165956	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6165957	CompoundStatement		48:136:1624:1624	6165662	1					
ANR	6165958	IfStatement	if ( de -> comp_size >= ZIP_UINT32_MAX )		6165662	0					
ANR	6165959	Condition	de -> comp_size >= ZIP_UINT32_MAX	687:9:17353:17383	6165662	0	True				
ANR	6165960	RelationalExpression	de -> comp_size >= ZIP_UINT32_MAX		6165662	0		>=			
ANR	6165961	PtrMemberAccess	de -> comp_size		6165662	0					
ANR	6165962	Identifier	de		6165662	0					
ANR	6165963	Identifier	comp_size		6165662	1					
ANR	6165964	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6165965	ExpressionStatement	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"	688:2:17388:17426	6165662	1	True				
ANR	6165966	CallExpression	"_zip_poke8 ( de -> comp_size , & ef_zip64_p )"		6165662	0					
ANR	6165967	Callee	_zip_poke8		6165662	0					
ANR	6165968	Identifier	_zip_poke8		6165662	0					
ANR	6165969	ArgumentList	de -> comp_size		6165662	1					
ANR	6165970	Argument	de -> comp_size		6165662	0					
ANR	6165971	PtrMemberAccess	de -> comp_size		6165662	0					
ANR	6165972	Identifier	de		6165662	0					
ANR	6165973	Identifier	comp_size		6165662	1					
ANR	6165974	Argument	& ef_zip64_p		6165662	1					
ANR	6165975	UnaryOperationExpression	& ef_zip64_p		6165662	0					
ANR	6165976	UnaryOperator	&		6165662	0					
ANR	6165977	Identifier	ef_zip64_p		6165662	1					
ANR	6165978	IfStatement	if ( de -> uncomp_size >= ZIP_UINT32_MAX )		6165662	1					
ANR	6165979	Condition	de -> uncomp_size >= ZIP_UINT32_MAX	689:9:17437:17469	6165662	0	True				
ANR	6165980	RelationalExpression	de -> uncomp_size >= ZIP_UINT32_MAX		6165662	0		>=			
ANR	6165981	PtrMemberAccess	de -> uncomp_size		6165662	0					
ANR	6165982	Identifier	de		6165662	0					
ANR	6165983	Identifier	uncomp_size		6165662	1					
ANR	6165984	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6165985	ExpressionStatement	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"	690:2:17474:17514	6165662	1	True				
ANR	6165986	CallExpression	"_zip_poke8 ( de -> uncomp_size , & ef_zip64_p )"		6165662	0					
ANR	6165987	Callee	_zip_poke8		6165662	0					
ANR	6165988	Identifier	_zip_poke8		6165662	0					
ANR	6165989	ArgumentList	de -> uncomp_size		6165662	1					
ANR	6165990	Argument	de -> uncomp_size		6165662	0					
ANR	6165991	PtrMemberAccess	de -> uncomp_size		6165662	0					
ANR	6165992	Identifier	de		6165662	0					
ANR	6165993	Identifier	uncomp_size		6165662	1					
ANR	6165994	Argument	& ef_zip64_p		6165662	1					
ANR	6165995	UnaryOperationExpression	& ef_zip64_p		6165662	0					
ANR	6165996	UnaryOperator	&		6165662	0					
ANR	6165997	Identifier	ef_zip64_p		6165662	1					
ANR	6165998	IfStatement	if ( de -> offset >= ZIP_UINT32_MAX )		6165662	2					
ANR	6165999	Condition	de -> offset >= ZIP_UINT32_MAX	691:9:17525:17552	6165662	0	True				
ANR	6166000	RelationalExpression	de -> offset >= ZIP_UINT32_MAX		6165662	0		>=			
ANR	6166001	PtrMemberAccess	de -> offset		6165662	0					
ANR	6166002	Identifier	de		6165662	0					
ANR	6166003	Identifier	offset		6165662	1					
ANR	6166004	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6166005	ExpressionStatement	"_zip_poke8 ( de -> offset , & ef_zip64_p )"	692:2:17557:17592	6165662	1	True				
ANR	6166006	CallExpression	"_zip_poke8 ( de -> offset , & ef_zip64_p )"		6165662	0					
ANR	6166007	Callee	_zip_poke8		6165662	0					
ANR	6166008	Identifier	_zip_poke8		6165662	0					
ANR	6166009	ArgumentList	de -> offset		6165662	1					
ANR	6166010	Argument	de -> offset		6165662	0					
ANR	6166011	PtrMemberAccess	de -> offset		6165662	0					
ANR	6166012	Identifier	de		6165662	0					
ANR	6166013	Identifier	offset		6165662	1					
ANR	6166014	Argument	& ef_zip64_p		6165662	1					
ANR	6166015	UnaryOperationExpression	& ef_zip64_p		6165662	0					
ANR	6166016	UnaryOperator	&		6165662	0					
ANR	6166017	Identifier	ef_zip64_p		6165662	1					
ANR	6166018	IfStatement	if ( ef_zip64_p != ef_zip64 )		6165662	14					
ANR	6166019	Condition	ef_zip64_p != ef_zip64	696:8:17612:17633	6165662	0	True				
ANR	6166020	EqualityExpression	ef_zip64_p != ef_zip64		6165662	0		!=			
ANR	6166021	Identifier	ef_zip64_p		6165662	0					
ANR	6166022	Identifier	ef_zip64		6165662	1					
ANR	6166023	CompoundStatement		59:1:1921:2037	6165662	1					
ANR	6166024	IdentifierDeclStatement	"struct zip_extra_field * ef64 = _zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH ) ;"	697:1:17639:17755	6165662	0	True				
ANR	6166025	IdentifierDecl	"* ef64 = _zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH )"		6165662	0					
ANR	6166026	IdentifierDeclType	struct zip_extra_field *		6165662	0					
ANR	6166027	Identifier	ef64		6165662	1					
ANR	6166028	AssignmentExpression	"* ef64 = _zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH )"		6165662	2		=			
ANR	6166029	Identifier	ef64		6165662	0					
ANR	6166030	CallExpression	"_zip_ef_new ( ZIP_EF_ZIP64 , ( zip_uint16_t ) ( ef_zip64_p - ef_zip64 ) , ef_zip64 , ZIP_EF_BOTH )"		6165662	1					
ANR	6166031	Callee	_zip_ef_new		6165662	0					
ANR	6166032	Identifier	_zip_ef_new		6165662	0					
ANR	6166033	ArgumentList	ZIP_EF_ZIP64		6165662	1					
ANR	6166034	Argument	ZIP_EF_ZIP64		6165662	0					
ANR	6166035	Identifier	ZIP_EF_ZIP64		6165662	0					
ANR	6166036	Argument	( zip_uint16_t ) ( ef_zip64_p - ef_zip64 )		6165662	1					
ANR	6166037	CastExpression	( zip_uint16_t ) ( ef_zip64_p - ef_zip64 )		6165662	0					
ANR	6166038	CastTarget	zip_uint16_t		6165662	0					
ANR	6166039	AdditiveExpression	ef_zip64_p - ef_zip64		6165662	1		-			
ANR	6166040	Identifier	ef_zip64_p		6165662	0					
ANR	6166041	Identifier	ef_zip64		6165662	1					
ANR	6166042	Argument	ef_zip64		6165662	2					
ANR	6166043	Identifier	ef_zip64		6165662	0					
ANR	6166044	Argument	ZIP_EF_BOTH		6165662	3					
ANR	6166045	Identifier	ZIP_EF_BOTH		6165662	0					
ANR	6166046	ExpressionStatement	ef64 -> next = ef	698:1:17758:17773	6165662	1	True				
ANR	6166047	AssignmentExpression	ef64 -> next = ef		6165662	0		=			
ANR	6166048	PtrMemberAccess	ef64 -> next		6165662	0					
ANR	6166049	Identifier	ef64		6165662	0					
ANR	6166050	Identifier	next		6165662	1					
ANR	6166051	Identifier	ef		6165662	1					
ANR	6166052	ExpressionStatement	ef = ef64	699:1:17776:17785	6165662	2	True				
ANR	6166053	AssignmentExpression	ef = ef64		6165662	0		=			
ANR	6166054	Identifier	ef		6165662	0					
ANR	6166055	Identifier	ef64		6165662	1					
ANR	6166056	ExpressionStatement	is_zip64 = 1	700:1:17788:17800	6165662	3	True				
ANR	6166057	AssignmentExpression	is_zip64 = 1		6165662	0		=			
ANR	6166058	Identifier	is_zip64		6165662	0					
ANR	6166059	PrimaryExpression	1		6165662	1					
ANR	6166060	IfStatement	if ( ( flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) ) == ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) )		6165662	15					
ANR	6166061	Condition	( flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) ) == ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 )	703:8:17817:17896	6165662	0	True				
ANR	6166062	EqualityExpression	( flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 ) ) == ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 )		6165662	0		==			
ANR	6166063	BitAndExpression	flags & ( ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64 )		6165662	0		&			
ANR	6166064	Identifier	flags		6165662	0					
ANR	6166065	InclusiveOrExpression	ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64		6165662	1		|			
ANR	6166066	Identifier	ZIP_FL_LOCAL		6165662	0					
ANR	6166067	Identifier	ZIP_FL_FORCE_ZIP64		6165662	1					
ANR	6166068	InclusiveOrExpression	ZIP_FL_LOCAL | ZIP_FL_FORCE_ZIP64		6165662	1		|			
ANR	6166069	Identifier	ZIP_FL_LOCAL		6165662	0					
ANR	6166070	Identifier	ZIP_FL_FORCE_ZIP64		6165662	1					
ANR	6166071	ExpressionStatement	"is_really_zip64 = _zip_dirent_needs_zip64 ( de , flags )"	704:1:17900:17952	6165662	1	True				
ANR	6166072	AssignmentExpression	"is_really_zip64 = _zip_dirent_needs_zip64 ( de , flags )"		6165662	0		=			
ANR	6166073	Identifier	is_really_zip64		6165662	0					
ANR	6166074	CallExpression	"_zip_dirent_needs_zip64 ( de , flags )"		6165662	1					
ANR	6166075	Callee	_zip_dirent_needs_zip64		6165662	0					
ANR	6166076	Identifier	_zip_dirent_needs_zip64		6165662	0					
ANR	6166077	ArgumentList	de		6165662	1					
ANR	6166078	Argument	de		6165662	0					
ANR	6166079	Identifier	de		6165662	0					
ANR	6166080	Argument	flags		6165662	1					
ANR	6166081	Identifier	flags		6165662	0					
ANR	6166082	ElseStatement	else		6165662	0					
ANR	6166083	ExpressionStatement	is_really_zip64 = is_zip64	706:1:17964:17990	6165662	0	True				
ANR	6166084	AssignmentExpression	is_really_zip64 = is_zip64		6165662	0		=			
ANR	6166085	Identifier	is_really_zip64		6165662	0					
ANR	6166086	Identifier	is_zip64		6165662	1					
ANR	6166087	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 )		6165662	16					
ANR	6166088	Condition	( flags & ZIP_FL_LOCAL ) == 0	708:8:18005:18031	6165662	0	True				
ANR	6166089	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6165662	0		==			
ANR	6166090	BitAndExpression	flags & ZIP_FL_LOCAL		6165662	0		&			
ANR	6166091	Identifier	flags		6165662	0					
ANR	6166092	Identifier	ZIP_FL_LOCAL		6165662	1					
ANR	6166093	PrimaryExpression	0		6165662	1					
ANR	6166094	ExpressionStatement	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_madeby , fp )"	709:1:18035:18093	6165662	1	True				
ANR	6166095	CallExpression	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_madeby , fp )"		6165662	0					
ANR	6166096	Callee	_zip_write2		6165662	0					
ANR	6166097	Identifier	_zip_write2		6165662	0					
ANR	6166098	ArgumentList	is_really_zip64 ? 45 : de -> version_madeby		6165662	1					
ANR	6166099	Argument	is_really_zip64 ? 45 : de -> version_madeby		6165662	0					
ANR	6166100	ConditionalExpression	is_really_zip64 ? 45 : de -> version_madeby		6165662	0					
ANR	6166101	Condition	is_really_zip64		6165662	0					
ANR	6166102	Identifier	is_really_zip64		6165662	0					
ANR	6166103	PrimaryExpression	45		6165662	1					
ANR	6166104	PtrMemberAccess	de -> version_madeby		6165662	2					
ANR	6166105	Identifier	de		6165662	0					
ANR	6166106	Identifier	version_madeby		6165662	1					
ANR	6166107	Argument	fp		6165662	1					
ANR	6166108	Identifier	fp		6165662	0					
ANR	6166109	ExpressionStatement	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_needed , fp )"	710:4:18099:18157	6165662	17	True				
ANR	6166110	CallExpression	"_zip_write2 ( is_really_zip64 ? 45 : de -> version_needed , fp )"		6165662	0					
ANR	6166111	Callee	_zip_write2		6165662	0					
ANR	6166112	Identifier	_zip_write2		6165662	0					
ANR	6166113	ArgumentList	is_really_zip64 ? 45 : de -> version_needed		6165662	1					
ANR	6166114	Argument	is_really_zip64 ? 45 : de -> version_needed		6165662	0					
ANR	6166115	ConditionalExpression	is_really_zip64 ? 45 : de -> version_needed		6165662	0					
ANR	6166116	Condition	is_really_zip64		6165662	0					
ANR	6166117	Identifier	is_really_zip64		6165662	0					
ANR	6166118	PrimaryExpression	45		6165662	1					
ANR	6166119	PtrMemberAccess	de -> version_needed		6165662	2					
ANR	6166120	Identifier	de		6165662	0					
ANR	6166121	Identifier	version_needed		6165662	1					
ANR	6166122	Argument	fp		6165662	1					
ANR	6166123	Identifier	fp		6165662	0					
ANR	6166124	ExpressionStatement	"_zip_write2 ( de -> bitflags & 0xfff9 , fp )"	711:4:18163:18199	6165662	18	True				
ANR	6166125	CallExpression	"_zip_write2 ( de -> bitflags & 0xfff9 , fp )"		6165662	0					
ANR	6166126	Callee	_zip_write2		6165662	0					
ANR	6166127	Identifier	_zip_write2		6165662	0					
ANR	6166128	ArgumentList	de -> bitflags & 0xfff9		6165662	1					
ANR	6166129	Argument	de -> bitflags & 0xfff9		6165662	0					
ANR	6166130	BitAndExpression	de -> bitflags & 0xfff9		6165662	0		&			
ANR	6166131	PtrMemberAccess	de -> bitflags		6165662	0					
ANR	6166132	Identifier	de		6165662	0					
ANR	6166133	Identifier	bitflags		6165662	1					
ANR	6166134	PrimaryExpression	0xfff9		6165662	1					
ANR	6166135	Argument	fp		6165662	1					
ANR	6166136	Identifier	fp		6165662	0					
ANR	6166137	ExpressionStatement	"_zip_write2 ( ( zip_uint16_t ) de -> comp_method , fp )"	712:4:18251:18297	6165662	19	True				
ANR	6166138	CallExpression	"_zip_write2 ( ( zip_uint16_t ) de -> comp_method , fp )"		6165662	0					
ANR	6166139	Callee	_zip_write2		6165662	0					
ANR	6166140	Identifier	_zip_write2		6165662	0					
ANR	6166141	ArgumentList	( zip_uint16_t ) de -> comp_method		6165662	1					
ANR	6166142	Argument	( zip_uint16_t ) de -> comp_method		6165662	0					
ANR	6166143	CastExpression	( zip_uint16_t ) de -> comp_method		6165662	0					
ANR	6166144	CastTarget	zip_uint16_t		6165662	0					
ANR	6166145	PtrMemberAccess	de -> comp_method		6165662	1					
ANR	6166146	Identifier	de		6165662	0					
ANR	6166147	Identifier	comp_method		6165662	1					
ANR	6166148	Argument	fp		6165662	1					
ANR	6166149	Identifier	fp		6165662	0					
ANR	6166150	ExpressionStatement	"_zip_u2d_time ( de -> last_mod , & dostime , & dosdate )"	714:4:18341:18388	6165662	20	True				
ANR	6166151	CallExpression	"_zip_u2d_time ( de -> last_mod , & dostime , & dosdate )"		6165662	0					
ANR	6166152	Callee	_zip_u2d_time		6165662	0					
ANR	6166153	Identifier	_zip_u2d_time		6165662	0					
ANR	6166154	ArgumentList	de -> last_mod		6165662	1					
ANR	6166155	Argument	de -> last_mod		6165662	0					
ANR	6166156	PtrMemberAccess	de -> last_mod		6165662	0					
ANR	6166157	Identifier	de		6165662	0					
ANR	6166158	Identifier	last_mod		6165662	1					
ANR	6166159	Argument	& dostime		6165662	1					
ANR	6166160	UnaryOperationExpression	& dostime		6165662	0					
ANR	6166161	UnaryOperator	&		6165662	0					
ANR	6166162	Identifier	dostime		6165662	1					
ANR	6166163	Argument	& dosdate		6165662	2					
ANR	6166164	UnaryOperationExpression	& dosdate		6165662	0					
ANR	6166165	UnaryOperator	&		6165662	0					
ANR	6166166	Identifier	dosdate		6165662	1					
ANR	6166167	ExpressionStatement	"_zip_write2 ( dostime , fp )"	715:4:18394:18418	6165662	21	True				
ANR	6166168	CallExpression	"_zip_write2 ( dostime , fp )"		6165662	0					
ANR	6166169	Callee	_zip_write2		6165662	0					
ANR	6166170	Identifier	_zip_write2		6165662	0					
ANR	6166171	ArgumentList	dostime		6165662	1					
ANR	6166172	Argument	dostime		6165662	0					
ANR	6166173	Identifier	dostime		6165662	0					
ANR	6166174	Argument	fp		6165662	1					
ANR	6166175	Identifier	fp		6165662	0					
ANR	6166176	ExpressionStatement	"_zip_write2 ( dosdate , fp )"	716:4:18424:18448	6165662	22	True				
ANR	6166177	CallExpression	"_zip_write2 ( dosdate , fp )"		6165662	0					
ANR	6166178	Callee	_zip_write2		6165662	0					
ANR	6166179	Identifier	_zip_write2		6165662	0					
ANR	6166180	ArgumentList	dosdate		6165662	1					
ANR	6166181	Argument	dosdate		6165662	0					
ANR	6166182	Identifier	dosdate		6165662	0					
ANR	6166183	Argument	fp		6165662	1					
ANR	6166184	Identifier	fp		6165662	0					
ANR	6166185	ExpressionStatement	"_zip_write4 ( de -> crc , fp )"	718:4:18455:18479	6165662	23	True				
ANR	6166186	CallExpression	"_zip_write4 ( de -> crc , fp )"		6165662	0					
ANR	6166187	Callee	_zip_write4		6165662	0					
ANR	6166188	Identifier	_zip_write4		6165662	0					
ANR	6166189	ArgumentList	de -> crc		6165662	1					
ANR	6166190	Argument	de -> crc		6165662	0					
ANR	6166191	PtrMemberAccess	de -> crc		6165662	0					
ANR	6166192	Identifier	de		6165662	0					
ANR	6166193	Identifier	crc		6165662	1					
ANR	6166194	Argument	fp		6165662	1					
ANR	6166195	Identifier	fp		6165662	0					
ANR	6166196	IfStatement	if ( de -> comp_size < ZIP_UINT32_MAX )		6165662	24					
ANR	6166197	Condition	de -> comp_size < ZIP_UINT32_MAX	719:8:18489:18518	6165662	0	True				
ANR	6166198	RelationalExpression	de -> comp_size < ZIP_UINT32_MAX		6165662	0		<			
ANR	6166199	PtrMemberAccess	de -> comp_size		6165662	0					
ANR	6166200	Identifier	de		6165662	0					
ANR	6166201	Identifier	comp_size		6165662	1					
ANR	6166202	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6166203	ExpressionStatement	"_zip_write4 ( ( zip_uint32_t ) de -> comp_size , fp )"	720:1:18522:18566	6165662	1	True				
ANR	6166204	CallExpression	"_zip_write4 ( ( zip_uint32_t ) de -> comp_size , fp )"		6165662	0					
ANR	6166205	Callee	_zip_write4		6165662	0					
ANR	6166206	Identifier	_zip_write4		6165662	0					
ANR	6166207	ArgumentList	( zip_uint32_t ) de -> comp_size		6165662	1					
ANR	6166208	Argument	( zip_uint32_t ) de -> comp_size		6165662	0					
ANR	6166209	CastExpression	( zip_uint32_t ) de -> comp_size		6165662	0					
ANR	6166210	CastTarget	zip_uint32_t		6165662	0					
ANR	6166211	PtrMemberAccess	de -> comp_size		6165662	1					
ANR	6166212	Identifier	de		6165662	0					
ANR	6166213	Identifier	comp_size		6165662	1					
ANR	6166214	Argument	fp		6165662	1					
ANR	6166215	Identifier	fp		6165662	0					
ANR	6166216	ElseStatement	else		6165662	0					
ANR	6166217	ExpressionStatement	"_zip_write4 ( ZIP_UINT32_MAX , fp )"	722:1:18578:18609	6165662	0	True				
ANR	6166218	CallExpression	"_zip_write4 ( ZIP_UINT32_MAX , fp )"		6165662	0					
ANR	6166219	Callee	_zip_write4		6165662	0					
ANR	6166220	Identifier	_zip_write4		6165662	0					
ANR	6166221	ArgumentList	ZIP_UINT32_MAX		6165662	1					
ANR	6166222	Argument	ZIP_UINT32_MAX		6165662	0					
ANR	6166223	Identifier	ZIP_UINT32_MAX		6165662	0					
ANR	6166224	Argument	fp		6165662	1					
ANR	6166225	Identifier	fp		6165662	0					
ANR	6166226	IfStatement	if ( de -> uncomp_size < ZIP_UINT32_MAX )		6165662	25					
ANR	6166227	Condition	de -> uncomp_size < ZIP_UINT32_MAX	723:8:18619:18650	6165662	0	True				
ANR	6166228	RelationalExpression	de -> uncomp_size < ZIP_UINT32_MAX		6165662	0		<			
ANR	6166229	PtrMemberAccess	de -> uncomp_size		6165662	0					
ANR	6166230	Identifier	de		6165662	0					
ANR	6166231	Identifier	uncomp_size		6165662	1					
ANR	6166232	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6166233	ExpressionStatement	"_zip_write4 ( ( zip_uint32_t ) de -> uncomp_size , fp )"	724:1:18654:18700	6165662	1	True				
ANR	6166234	CallExpression	"_zip_write4 ( ( zip_uint32_t ) de -> uncomp_size , fp )"		6165662	0					
ANR	6166235	Callee	_zip_write4		6165662	0					
ANR	6166236	Identifier	_zip_write4		6165662	0					
ANR	6166237	ArgumentList	( zip_uint32_t ) de -> uncomp_size		6165662	1					
ANR	6166238	Argument	( zip_uint32_t ) de -> uncomp_size		6165662	0					
ANR	6166239	CastExpression	( zip_uint32_t ) de -> uncomp_size		6165662	0					
ANR	6166240	CastTarget	zip_uint32_t		6165662	0					
ANR	6166241	PtrMemberAccess	de -> uncomp_size		6165662	1					
ANR	6166242	Identifier	de		6165662	0					
ANR	6166243	Identifier	uncomp_size		6165662	1					
ANR	6166244	Argument	fp		6165662	1					
ANR	6166245	Identifier	fp		6165662	0					
ANR	6166246	ElseStatement	else		6165662	0					
ANR	6166247	ExpressionStatement	"_zip_write4 ( ZIP_UINT32_MAX , fp )"	726:1:18712:18743	6165662	0	True				
ANR	6166248	CallExpression	"_zip_write4 ( ZIP_UINT32_MAX , fp )"		6165662	0					
ANR	6166249	Callee	_zip_write4		6165662	0					
ANR	6166250	Identifier	_zip_write4		6165662	0					
ANR	6166251	ArgumentList	ZIP_UINT32_MAX		6165662	1					
ANR	6166252	Argument	ZIP_UINT32_MAX		6165662	0					
ANR	6166253	Identifier	ZIP_UINT32_MAX		6165662	0					
ANR	6166254	Argument	fp		6165662	1					
ANR	6166255	Identifier	fp		6165662	0					
ANR	6166256	ExpressionStatement	"_zip_write2 ( _zip_string_length ( de -> filename ) , fp )"	728:4:18750:18799	6165662	26	True				
ANR	6166257	CallExpression	"_zip_write2 ( _zip_string_length ( de -> filename ) , fp )"		6165662	0					
ANR	6166258	Callee	_zip_write2		6165662	0					
ANR	6166259	Identifier	_zip_write2		6165662	0					
ANR	6166260	ArgumentList	_zip_string_length ( de -> filename )		6165662	1					
ANR	6166261	Argument	_zip_string_length ( de -> filename )		6165662	0					
ANR	6166262	CallExpression	_zip_string_length ( de -> filename )		6165662	0					
ANR	6166263	Callee	_zip_string_length		6165662	0					
ANR	6166264	Identifier	_zip_string_length		6165662	0					
ANR	6166265	ArgumentList	de -> filename		6165662	1					
ANR	6166266	Argument	de -> filename		6165662	0					
ANR	6166267	PtrMemberAccess	de -> filename		6165662	0					
ANR	6166268	Identifier	de		6165662	0					
ANR	6166269	Identifier	filename		6165662	1					
ANR	6166270	Argument	fp		6165662	1					
ANR	6166271	Identifier	fp		6165662	0					
ANR	6166272	ExpressionStatement	"_zip_write2 ( _zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH ) , fp )"	729:4:18805:18891	6165662	27	True				
ANR	6166273	CallExpression	"_zip_write2 ( _zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH ) , fp )"		6165662	0					
ANR	6166274	Callee	_zip_write2		6165662	0					
ANR	6166275	Identifier	_zip_write2		6165662	0					
ANR	6166276	ArgumentList	"_zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH )"		6165662	1					
ANR	6166277	Argument	"_zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH )"		6165662	0					
ANR	6166278	AdditiveExpression	"_zip_ef_size ( de -> extra_fields , flags ) + _zip_ef_size ( ef , ZIP_EF_BOTH )"		6165662	0		+			
ANR	6166279	CallExpression	"_zip_ef_size ( de -> extra_fields , flags )"		6165662	0					
ANR	6166280	Callee	_zip_ef_size		6165662	0					
ANR	6166281	Identifier	_zip_ef_size		6165662	0					
ANR	6166282	ArgumentList	de -> extra_fields		6165662	1					
ANR	6166283	Argument	de -> extra_fields		6165662	0					
ANR	6166284	PtrMemberAccess	de -> extra_fields		6165662	0					
ANR	6166285	Identifier	de		6165662	0					
ANR	6166286	Identifier	extra_fields		6165662	1					
ANR	6166287	Argument	flags		6165662	1					
ANR	6166288	Identifier	flags		6165662	0					
ANR	6166289	CallExpression	"_zip_ef_size ( ef , ZIP_EF_BOTH )"		6165662	1					
ANR	6166290	Callee	_zip_ef_size		6165662	0					
ANR	6166291	Identifier	_zip_ef_size		6165662	0					
ANR	6166292	ArgumentList	ef		6165662	1					
ANR	6166293	Argument	ef		6165662	0					
ANR	6166294	Identifier	ef		6165662	0					
ANR	6166295	Argument	ZIP_EF_BOTH		6165662	1					
ANR	6166296	Identifier	ZIP_EF_BOTH		6165662	0					
ANR	6166297	Argument	fp		6165662	1					
ANR	6166298	Identifier	fp		6165662	0					
ANR	6166299	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 )		6165662	28					
ANR	6166300	Condition	( flags & ZIP_FL_LOCAL ) == 0	731:8:18906:18932	6165662	0	True				
ANR	6166301	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6165662	0		==			
ANR	6166302	BitAndExpression	flags & ZIP_FL_LOCAL		6165662	0		&			
ANR	6166303	Identifier	flags		6165662	0					
ANR	6166304	Identifier	ZIP_FL_LOCAL		6165662	1					
ANR	6166305	PrimaryExpression	0		6165662	1					
ANR	6166306	CompoundStatement		93:37:3217:3217	6165662	1					
ANR	6166307	ExpressionStatement	"_zip_write2 ( _zip_string_length ( de -> comment ) , fp )"	732:1:18938:18986	6165662	0	True				
ANR	6166308	CallExpression	"_zip_write2 ( _zip_string_length ( de -> comment ) , fp )"		6165662	0					
ANR	6166309	Callee	_zip_write2		6165662	0					
ANR	6166310	Identifier	_zip_write2		6165662	0					
ANR	6166311	ArgumentList	_zip_string_length ( de -> comment )		6165662	1					
ANR	6166312	Argument	_zip_string_length ( de -> comment )		6165662	0					
ANR	6166313	CallExpression	_zip_string_length ( de -> comment )		6165662	0					
ANR	6166314	Callee	_zip_string_length		6165662	0					
ANR	6166315	Identifier	_zip_string_length		6165662	0					
ANR	6166316	ArgumentList	de -> comment		6165662	1					
ANR	6166317	Argument	de -> comment		6165662	0					
ANR	6166318	PtrMemberAccess	de -> comment		6165662	0					
ANR	6166319	Identifier	de		6165662	0					
ANR	6166320	Identifier	comment		6165662	1					
ANR	6166321	Argument	fp		6165662	1					
ANR	6166322	Identifier	fp		6165662	0					
ANR	6166323	ExpressionStatement	"_zip_write2 ( ( zip_uint16_t ) de -> disk_number , fp )"	733:1:18989:19035	6165662	1	True				
ANR	6166324	CallExpression	"_zip_write2 ( ( zip_uint16_t ) de -> disk_number , fp )"		6165662	0					
ANR	6166325	Callee	_zip_write2		6165662	0					
ANR	6166326	Identifier	_zip_write2		6165662	0					
ANR	6166327	ArgumentList	( zip_uint16_t ) de -> disk_number		6165662	1					
ANR	6166328	Argument	( zip_uint16_t ) de -> disk_number		6165662	0					
ANR	6166329	CastExpression	( zip_uint16_t ) de -> disk_number		6165662	0					
ANR	6166330	CastTarget	zip_uint16_t		6165662	0					
ANR	6166331	PtrMemberAccess	de -> disk_number		6165662	1					
ANR	6166332	Identifier	de		6165662	0					
ANR	6166333	Identifier	disk_number		6165662	1					
ANR	6166334	Argument	fp		6165662	1					
ANR	6166335	Identifier	fp		6165662	0					
ANR	6166336	ExpressionStatement	"_zip_write2 ( de -> int_attrib , fp )"	734:1:19038:19069	6165662	2	True				
ANR	6166337	CallExpression	"_zip_write2 ( de -> int_attrib , fp )"		6165662	0					
ANR	6166338	Callee	_zip_write2		6165662	0					
ANR	6166339	Identifier	_zip_write2		6165662	0					
ANR	6166340	ArgumentList	de -> int_attrib		6165662	1					
ANR	6166341	Argument	de -> int_attrib		6165662	0					
ANR	6166342	PtrMemberAccess	de -> int_attrib		6165662	0					
ANR	6166343	Identifier	de		6165662	0					
ANR	6166344	Identifier	int_attrib		6165662	1					
ANR	6166345	Argument	fp		6165662	1					
ANR	6166346	Identifier	fp		6165662	0					
ANR	6166347	ExpressionStatement	"_zip_write4 ( de -> ext_attrib , fp )"	735:1:19072:19103	6165662	3	True				
ANR	6166348	CallExpression	"_zip_write4 ( de -> ext_attrib , fp )"		6165662	0					
ANR	6166349	Callee	_zip_write4		6165662	0					
ANR	6166350	Identifier	_zip_write4		6165662	0					
ANR	6166351	ArgumentList	de -> ext_attrib		6165662	1					
ANR	6166352	Argument	de -> ext_attrib		6165662	0					
ANR	6166353	PtrMemberAccess	de -> ext_attrib		6165662	0					
ANR	6166354	Identifier	de		6165662	0					
ANR	6166355	Identifier	ext_attrib		6165662	1					
ANR	6166356	Argument	fp		6165662	1					
ANR	6166357	Identifier	fp		6165662	0					
ANR	6166358	IfStatement	if ( de -> offset < ZIP_UINT32_MAX )		6165662	4					
ANR	6166359	Condition	de -> offset < ZIP_UINT32_MAX	736:5:19110:19136	6165662	0	True				
ANR	6166360	RelationalExpression	de -> offset < ZIP_UINT32_MAX		6165662	0		<			
ANR	6166361	PtrMemberAccess	de -> offset		6165662	0					
ANR	6166362	Identifier	de		6165662	0					
ANR	6166363	Identifier	offset		6165662	1					
ANR	6166364	Identifier	ZIP_UINT32_MAX		6165662	1					
ANR	6166365	ExpressionStatement	"_zip_write4 ( ( zip_uint32_t ) de -> offset , fp )"	737:5:19144:19185	6165662	1	True				
ANR	6166366	CallExpression	"_zip_write4 ( ( zip_uint32_t ) de -> offset , fp )"		6165662	0					
ANR	6166367	Callee	_zip_write4		6165662	0					
ANR	6166368	Identifier	_zip_write4		6165662	0					
ANR	6166369	ArgumentList	( zip_uint32_t ) de -> offset		6165662	1					
ANR	6166370	Argument	( zip_uint32_t ) de -> offset		6165662	0					
ANR	6166371	CastExpression	( zip_uint32_t ) de -> offset		6165662	0					
ANR	6166372	CastTarget	zip_uint32_t		6165662	0					
ANR	6166373	PtrMemberAccess	de -> offset		6165662	1					
ANR	6166374	Identifier	de		6165662	0					
ANR	6166375	Identifier	offset		6165662	1					
ANR	6166376	Argument	fp		6165662	1					
ANR	6166377	Identifier	fp		6165662	0					
ANR	6166378	ElseStatement	else		6165662	0					
ANR	6166379	ExpressionStatement	"_zip_write4 ( ZIP_UINT32_MAX , fp )"	739:5:19198:19229	6165662	0	True				
ANR	6166380	CallExpression	"_zip_write4 ( ZIP_UINT32_MAX , fp )"		6165662	0					
ANR	6166381	Callee	_zip_write4		6165662	0					
ANR	6166382	Identifier	_zip_write4		6165662	0					
ANR	6166383	ArgumentList	ZIP_UINT32_MAX		6165662	1					
ANR	6166384	Argument	ZIP_UINT32_MAX		6165662	0					
ANR	6166385	Identifier	ZIP_UINT32_MAX		6165662	0					
ANR	6166386	Argument	fp		6165662	1					
ANR	6166387	Identifier	fp		6165662	0					
ANR	6166388	IfStatement	if ( de -> filename )		6165662	29					
ANR	6166389	Condition	de -> filename	742:8:19246:19257	6165662	0	True				
ANR	6166390	PtrMemberAccess	de -> filename		6165662	0					
ANR	6166391	Identifier	de		6165662	0					
ANR	6166392	Identifier	filename		6165662	1					
ANR	6166393	ExpressionStatement	"_zip_string_write ( de -> filename , fp )"	743:1:19261:19296	6165662	1	True				
ANR	6166394	CallExpression	"_zip_string_write ( de -> filename , fp )"		6165662	0					
ANR	6166395	Callee	_zip_string_write		6165662	0					
ANR	6166396	Identifier	_zip_string_write		6165662	0					
ANR	6166397	ArgumentList	de -> filename		6165662	1					
ANR	6166398	Argument	de -> filename		6165662	0					
ANR	6166399	PtrMemberAccess	de -> filename		6165662	0					
ANR	6166400	Identifier	de		6165662	0					
ANR	6166401	Identifier	filename		6165662	1					
ANR	6166402	Argument	fp		6165662	1					
ANR	6166403	Identifier	fp		6165662	0					
ANR	6166404	IfStatement	if ( ef )		6165662	30					
ANR	6166405	Condition	ef	745:8:19307:19308	6165662	0	True				
ANR	6166406	Identifier	ef		6165662	0					
ANR	6166407	ExpressionStatement	"_zip_ef_write ( ef , ZIP_EF_BOTH , fp )"	746:1:19312:19346	6165662	1	True				
ANR	6166408	CallExpression	"_zip_ef_write ( ef , ZIP_EF_BOTH , fp )"		6165662	0					
ANR	6166409	Callee	_zip_ef_write		6165662	0					
ANR	6166410	Identifier	_zip_ef_write		6165662	0					
ANR	6166411	ArgumentList	ef		6165662	1					
ANR	6166412	Argument	ef		6165662	0					
ANR	6166413	Identifier	ef		6165662	0					
ANR	6166414	Argument	ZIP_EF_BOTH		6165662	1					
ANR	6166415	Identifier	ZIP_EF_BOTH		6165662	0					
ANR	6166416	Argument	fp		6165662	2					
ANR	6166417	Identifier	fp		6165662	0					
ANR	6166418	IfStatement	if ( de -> extra_fields )		6165662	31					
ANR	6166419	Condition	de -> extra_fields	747:8:19356:19371	6165662	0	True				
ANR	6166420	PtrMemberAccess	de -> extra_fields		6165662	0					
ANR	6166421	Identifier	de		6165662	0					
ANR	6166422	Identifier	extra_fields		6165662	1					
ANR	6166423	ExpressionStatement	"_zip_ef_write ( de -> extra_fields , flags , fp )"	748:1:19375:19417	6165662	1	True				
ANR	6166424	CallExpression	"_zip_ef_write ( de -> extra_fields , flags , fp )"		6165662	0					
ANR	6166425	Callee	_zip_ef_write		6165662	0					
ANR	6166426	Identifier	_zip_ef_write		6165662	0					
ANR	6166427	ArgumentList	de -> extra_fields		6165662	1					
ANR	6166428	Argument	de -> extra_fields		6165662	0					
ANR	6166429	PtrMemberAccess	de -> extra_fields		6165662	0					
ANR	6166430	Identifier	de		6165662	0					
ANR	6166431	Identifier	extra_fields		6165662	1					
ANR	6166432	Argument	flags		6165662	1					
ANR	6166433	Identifier	flags		6165662	0					
ANR	6166434	Argument	fp		6165662	2					
ANR	6166435	Identifier	fp		6165662	0					
ANR	6166436	IfStatement	if ( ( flags & ZIP_FL_LOCAL ) == 0 )		6165662	32					
ANR	6166437	Condition	( flags & ZIP_FL_LOCAL ) == 0	750:8:19428:19454	6165662	0	True				
ANR	6166438	EqualityExpression	( flags & ZIP_FL_LOCAL ) == 0		6165662	0		==			
ANR	6166439	BitAndExpression	flags & ZIP_FL_LOCAL		6165662	0		&			
ANR	6166440	Identifier	flags		6165662	0					
ANR	6166441	Identifier	ZIP_FL_LOCAL		6165662	1					
ANR	6166442	PrimaryExpression	0		6165662	1					
ANR	6166443	CompoundStatement		112:37:3739:3739	6165662	1					
ANR	6166444	IfStatement	if ( de -> comment )		6165662	0					
ANR	6166445	Condition	de -> comment	751:5:19464:19474	6165662	0	True				
ANR	6166446	PtrMemberAccess	de -> comment		6165662	0					
ANR	6166447	Identifier	de		6165662	0					
ANR	6166448	Identifier	comment		6165662	1					
ANR	6166449	ExpressionStatement	"_zip_string_write ( de -> comment , fp )"	752:5:19482:19516	6165662	1	True				
ANR	6166450	CallExpression	"_zip_string_write ( de -> comment , fp )"		6165662	0					
ANR	6166451	Callee	_zip_string_write		6165662	0					
ANR	6166452	Identifier	_zip_string_write		6165662	0					
ANR	6166453	ArgumentList	de -> comment		6165662	1					
ANR	6166454	Argument	de -> comment		6165662	0					
ANR	6166455	PtrMemberAccess	de -> comment		6165662	0					
ANR	6166456	Identifier	de		6165662	0					
ANR	6166457	Identifier	comment		6165662	1					
ANR	6166458	Argument	fp		6165662	1					
ANR	6166459	Identifier	fp		6165662	0					
ANR	6166460	ExpressionStatement	_zip_ef_free ( ef )	755:4:19529:19545	6165662	33	True				
ANR	6166461	CallExpression	_zip_ef_free ( ef )		6165662	0					
ANR	6166462	Callee	_zip_ef_free		6165662	0					
ANR	6166463	Identifier	_zip_ef_free		6165662	0					
ANR	6166464	ArgumentList	ef		6165662	1					
ANR	6166465	Argument	ef		6165662	0					
ANR	6166466	Identifier	ef		6165662	0					
ANR	6166467	IfStatement	if ( ferror ( fp ) )		6165662	34					
ANR	6166468	Condition	ferror ( fp )	757:8:19556:19565	6165662	0	True				
ANR	6166469	CallExpression	ferror ( fp )		6165662	0					
ANR	6166470	Callee	ferror		6165662	0					
ANR	6166471	Identifier	ferror		6165662	0					
ANR	6166472	ArgumentList	fp		6165662	1					
ANR	6166473	Argument	fp		6165662	0					
ANR	6166474	Identifier	fp		6165662	0					
ANR	6166475	CompoundStatement		119:20:3850:3850	6165662	1					
ANR	6166476	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"	758:1:19571:19613	6165662	0	True				
ANR	6166477	CallExpression	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"		6165662	0					
ANR	6166478	Callee	_zip_error_set		6165662	0					
ANR	6166479	Identifier	_zip_error_set		6165662	0					
ANR	6166480	ArgumentList	error		6165662	1					
ANR	6166481	Argument	error		6165662	0					
ANR	6166482	Identifier	error		6165662	0					
ANR	6166483	Argument	ZIP_ER_WRITE		6165662	1					
ANR	6166484	Identifier	ZIP_ER_WRITE		6165662	0					
ANR	6166485	Argument	errno		6165662	2					
ANR	6166486	Identifier	errno		6165662	0					
ANR	6166487	ReturnStatement	return - 1 ;	759:1:19616:19625	6165662	1	True				
ANR	6166488	UnaryOperationExpression	- 1		6165662	0					
ANR	6166489	UnaryOperator	-		6165662	0					
ANR	6166490	PrimaryExpression	1		6165662	1					
ANR	6166491	ReturnStatement	return is_zip64 ;	762:4:19638:19653	6165662	35	True				
ANR	6166492	Identifier	is_zip64		6165662	0					
ANR	6166493	ReturnType	int		6165662	1					
ANR	6166494	Identifier	_zip_dirent_write		6165662	2					
ANR	6166495	ParameterList	"struct zip_dirent * de , FILE * fp , zip_flags_t flags , struct zip_error * error"		6165662	3					
ANR	6166496	Parameter	struct zip_dirent * de	638:18:15640:15660	6165662	0	True				
ANR	6166497	ParameterType	struct zip_dirent *		6165662	0					
ANR	6166498	Identifier	de		6165662	1					
ANR	6166499	Parameter	FILE * fp	638:41:15663:15670	6165662	1	True				
ANR	6166500	ParameterType	FILE *		6165662	0					
ANR	6166501	Identifier	fp		6165662	1					
ANR	6166502	Parameter	zip_flags_t flags	638:51:15673:15689	6165662	2	True				
ANR	6166503	ParameterType	zip_flags_t		6165662	0					
ANR	6166504	Identifier	flags		6165662	1					
ANR	6166505	Parameter	struct zip_error * error	638:70:15692:15714	6165662	3	True				
ANR	6166506	ParameterType	struct zip_error *		6165662	0					
ANR	6166507	Identifier	error		6165662	1					
ANR	6166508	CFGEntryNode	ENTRY		6165662		True				
ANR	6166509	CFGExitNode	EXIT		6165662		True				
ANR	6166510	Symbol	de -> extra_fields		6165662						
ANR	6166511	Symbol	de		6165662						
ANR	6166512	Symbol	com_enc		6165662						
ANR	6166513	Symbol	ZIP_EF_ZIP64		6165662						
ANR	6166514	Symbol	ZIP_EF_BOTH		6165662						
ANR	6166515	Symbol	ZIP_UINT32_MAX		6165662						
ANR	6166516	Symbol	is_zip64		6165662						
ANR	6166517	Symbol	& ef_zip64_p		6165662						
ANR	6166518	Symbol	de -> int_attrib		6165662						
ANR	6166519	Symbol	ZIP_ENCODING_ASCII		6165662						
ANR	6166520	Symbol	ZIP_FL_FORCE_ZIP64		6165662						
ANR	6166521	Symbol	de -> version_needed		6165662						
ANR	6166522	Symbol	ef_zip64		6165662						
ANR	6166523	Symbol	de -> ext_attrib		6165662						
ANR	6166524	Symbol	is_really_zip64		6165662						
ANR	6166525	Symbol	name_enc		6165662						
ANR	6166526	Symbol	ZIP_ENCODING_UTF8_KNOWN		6165662						
ANR	6166527	Symbol	ef		6165662						
ANR	6166528	Symbol	errno		6165662						
ANR	6166529	Symbol	NULL		6165662						
ANR	6166530	Symbol	* de		6165662						
ANR	6166531	Symbol	ZIP_EF_UTF_8_COMMENT		6165662						
ANR	6166532	Symbol	& dostime		6165662						
ANR	6166533	Symbol	dosdate		6165662						
ANR	6166534	Symbol	_zip_dirent_needs_zip64		6165662						
ANR	6166535	Symbol	ZIP_ER_WRITE		6165662						
ANR	6166536	Symbol	_zip_ef_utf8		6165662						
ANR	6166537	Symbol	ef2 -> next		6165662						
ANR	6166538	Symbol	ef2		6165662						
ANR	6166539	Symbol	ef64		6165662						
ANR	6166540	Symbol	_zip_string_length		6165662						
ANR	6166541	Symbol	ferror		6165662						
ANR	6166542	Symbol	ZIP_EF_UTF_8_NAME		6165662						
ANR	6166543	Symbol	de -> filename		6165662						
ANR	6166544	Symbol	ef_zip64_p		6165662						
ANR	6166545	Symbol	_zip_guess_encoding		6165662						
ANR	6166546	Symbol	de -> comp_method		6165662						
ANR	6166547	Symbol	flags		6165662						
ANR	6166548	Symbol	* ef64		6165662						
ANR	6166549	Symbol	fp		6165662						
ANR	6166550	Symbol	error		6165662						
ANR	6166551	Symbol	de -> comment		6165662						
ANR	6166552	Symbol	de -> uncomp_size		6165662						
ANR	6166553	Symbol	ZIP_FL_LOCAL		6165662						
ANR	6166554	Symbol	de -> last_mod		6165662						
ANR	6166555	Symbol	de -> comp_size		6165662						
ANR	6166556	Symbol	& dosdate		6165662						
ANR	6166557	Symbol	ZIP_ENCODING_UNKNOWN		6165662						
ANR	6166558	Symbol	de -> offset		6165662						
ANR	6166559	Symbol	_zip_ef_size		6165662						
ANR	6166560	Symbol	de -> disk_number		6165662						
ANR	6166561	Symbol	* ef2		6165662						
ANR	6166562	Symbol	LOCAL_MAGIC		6165662						
ANR	6166563	Symbol	de -> version_madeby		6165662						
ANR	6166564	Symbol	dostime		6165662						
ANR	6166565	Symbol	_zip_ef_new		6165662						
ANR	6166566	Symbol	ZIP_GPBF_ENCODING_UTF_8		6165662						
ANR	6166567	Symbol	de -> crc		6165662						
ANR	6166568	Symbol	ef64 -> next		6165662						
ANR	6166569	Symbol	de -> bitflags		6165662						
ANR	6166570	Symbol	CENTRAL_MAGIC		6165662						
ANR	6166571	Symbol	~ZIP_GPBF_ENCODING_UTF_8		6165662						
ANR	6166572	Function	_zip_d2u_time	767:0:19661:20096							
ANR	6166573	FunctionDef	"_zip_d2u_time (zip_uint16_t dtime , zip_uint16_t ddate)"		6166572	0					
ANR	6166574	CompoundStatement		769:0:19729:20096	6166572	0					
ANR	6166575	IdentifierDeclStatement	struct tm tm ;	770:4:19735:19747	6166572	0	True				
ANR	6166576	IdentifierDecl	tm		6166572	0					
ANR	6166577	IdentifierDeclType	struct tm		6166572	0					
ANR	6166578	Identifier	tm		6166572	1					
ANR	6166579	ExpressionStatement	"memset ( & tm , 0 , sizeof ( tm ) )"	772:4:19754:19780	6166572	1	True				
ANR	6166580	CallExpression	"memset ( & tm , 0 , sizeof ( tm ) )"		6166572	0					
ANR	6166581	Callee	memset		6166572	0					
ANR	6166582	Identifier	memset		6166572	0					
ANR	6166583	ArgumentList	& tm		6166572	1					
ANR	6166584	Argument	& tm		6166572	0					
ANR	6166585	UnaryOperationExpression	& tm		6166572	0					
ANR	6166586	UnaryOperator	&		6166572	0					
ANR	6166587	Identifier	tm		6166572	1					
ANR	6166588	Argument	0		6166572	1					
ANR	6166589	PrimaryExpression	0		6166572	0					
ANR	6166590	Argument	sizeof ( tm )		6166572	2					
ANR	6166591	SizeofExpression	sizeof ( tm )		6166572	0					
ANR	6166592	Sizeof	sizeof		6166572	0					
ANR	6166593	SizeofOperand	tm		6166572	1					
ANR	6166594	ExpressionStatement	tm . tm_isdst = - 1	775:4:19839:19855	6166572	2	True				
ANR	6166595	AssignmentExpression	tm . tm_isdst = - 1		6166572	0		=			
ANR	6166596	MemberAccess	tm . tm_isdst		6166572	0					
ANR	6166597	Identifier	tm		6166572	0					
ANR	6166598	Identifier	tm_isdst		6166572	1					
ANR	6166599	UnaryOperationExpression	- 1		6166572	1					
ANR	6166600	UnaryOperator	-		6166572	0					
ANR	6166601	PrimaryExpression	1		6166572	1					
ANR	6166602	ExpressionStatement	tm . tm_year = ( ( ddate >> 9 ) & 127 ) + 1980 - 1900	777:4:19866:19909	6166572	3	True				
ANR	6166603	AssignmentExpression	tm . tm_year = ( ( ddate >> 9 ) & 127 ) + 1980 - 1900		6166572	0		=			
ANR	6166604	MemberAccess	tm . tm_year		6166572	0					
ANR	6166605	Identifier	tm		6166572	0					
ANR	6166606	Identifier	tm_year		6166572	1					
ANR	6166607	AdditiveExpression	( ( ddate >> 9 ) & 127 ) + 1980 - 1900		6166572	1		+			
ANR	6166608	BitAndExpression	( ddate >> 9 ) & 127		6166572	0		&			
ANR	6166609	ShiftExpression	ddate >> 9		6166572	0		>>			
ANR	6166610	Identifier	ddate		6166572	0					
ANR	6166611	PrimaryExpression	9		6166572	1					
ANR	6166612	PrimaryExpression	127		6166572	1					
ANR	6166613	AdditiveExpression	1980 - 1900		6166572	1		-			
ANR	6166614	PrimaryExpression	1980		6166572	0					
ANR	6166615	PrimaryExpression	1900		6166572	1					
ANR	6166616	ExpressionStatement	tm . tm_mon = ( ( ddate >> 5 ) & 15 ) - 1	778:4:19915:19946	6166572	4	True				
ANR	6166617	AssignmentExpression	tm . tm_mon = ( ( ddate >> 5 ) & 15 ) - 1		6166572	0		=			
ANR	6166618	MemberAccess	tm . tm_mon		6166572	0					
ANR	6166619	Identifier	tm		6166572	0					
ANR	6166620	Identifier	tm_mon		6166572	1					
ANR	6166621	AdditiveExpression	( ( ddate >> 5 ) & 15 ) - 1		6166572	1		-			
ANR	6166622	BitAndExpression	( ddate >> 5 ) & 15		6166572	0		&			
ANR	6166623	ShiftExpression	ddate >> 5		6166572	0		>>			
ANR	6166624	Identifier	ddate		6166572	0					
ANR	6166625	PrimaryExpression	5		6166572	1					
ANR	6166626	PrimaryExpression	15		6166572	1					
ANR	6166627	PrimaryExpression	1		6166572	1					
ANR	6166628	ExpressionStatement	tm . tm_mday = ddate & 31	779:4:19952:19973	6166572	5	True				
ANR	6166629	AssignmentExpression	tm . tm_mday = ddate & 31		6166572	0		=			
ANR	6166630	MemberAccess	tm . tm_mday		6166572	0					
ANR	6166631	Identifier	tm		6166572	0					
ANR	6166632	Identifier	tm_mday		6166572	1					
ANR	6166633	BitAndExpression	ddate & 31		6166572	1		&			
ANR	6166634	Identifier	ddate		6166572	0					
ANR	6166635	PrimaryExpression	31		6166572	1					
ANR	6166636	ExpressionStatement	tm . tm_hour = ( dtime >> 11 ) & 31	781:4:19980:20007	6166572	6	True				
ANR	6166637	AssignmentExpression	tm . tm_hour = ( dtime >> 11 ) & 31		6166572	0		=			
ANR	6166638	MemberAccess	tm . tm_hour		6166572	0					
ANR	6166639	Identifier	tm		6166572	0					
ANR	6166640	Identifier	tm_hour		6166572	1					
ANR	6166641	BitAndExpression	( dtime >> 11 ) & 31		6166572	1		&			
ANR	6166642	ShiftExpression	dtime >> 11		6166572	0		>>			
ANR	6166643	Identifier	dtime		6166572	0					
ANR	6166644	PrimaryExpression	11		6166572	1					
ANR	6166645	PrimaryExpression	31		6166572	1					
ANR	6166646	ExpressionStatement	tm . tm_min = ( dtime >> 5 ) & 63	782:4:20013:20038	6166572	7	True				
ANR	6166647	AssignmentExpression	tm . tm_min = ( dtime >> 5 ) & 63		6166572	0		=			
ANR	6166648	MemberAccess	tm . tm_min		6166572	0					
ANR	6166649	Identifier	tm		6166572	0					
ANR	6166650	Identifier	tm_min		6166572	1					
ANR	6166651	BitAndExpression	( dtime >> 5 ) & 63		6166572	1		&			
ANR	6166652	ShiftExpression	dtime >> 5		6166572	0		>>			
ANR	6166653	Identifier	dtime		6166572	0					
ANR	6166654	PrimaryExpression	5		6166572	1					
ANR	6166655	PrimaryExpression	63		6166572	1					
ANR	6166656	ExpressionStatement	tm . tm_sec = ( dtime << 1 ) & 62	783:4:20044:20069	6166572	8	True				
ANR	6166657	AssignmentExpression	tm . tm_sec = ( dtime << 1 ) & 62		6166572	0		=			
ANR	6166658	MemberAccess	tm . tm_sec		6166572	0					
ANR	6166659	Identifier	tm		6166572	0					
ANR	6166660	Identifier	tm_sec		6166572	1					
ANR	6166661	BitAndExpression	( dtime << 1 ) & 62		6166572	1		&			
ANR	6166662	ShiftExpression	dtime << 1		6166572	0		<<			
ANR	6166663	Identifier	dtime		6166572	0					
ANR	6166664	PrimaryExpression	1		6166572	1					
ANR	6166665	PrimaryExpression	62		6166572	1					
ANR	6166666	ReturnStatement	return mktime ( & tm ) ;	785:4:20076:20094	6166572	9	True				
ANR	6166667	CallExpression	mktime ( & tm )		6166572	0					
ANR	6166668	Callee	mktime		6166572	0					
ANR	6166669	Identifier	mktime		6166572	0					
ANR	6166670	ArgumentList	& tm		6166572	1					
ANR	6166671	Argument	& tm		6166572	0					
ANR	6166672	UnaryOperationExpression	& tm		6166572	0					
ANR	6166673	UnaryOperator	&		6166572	0					
ANR	6166674	Identifier	tm		6166572	1					
ANR	6166675	ReturnType	static time_t		6166572	1					
ANR	6166676	Identifier	_zip_d2u_time		6166572	2					
ANR	6166677	ParameterList	"zip_uint16_t dtime , zip_uint16_t ddate"		6166572	3					
ANR	6166678	Parameter	zip_uint16_t dtime	768:14:19689:19706	6166572	0	True				
ANR	6166679	ParameterType	zip_uint16_t		6166572	0					
ANR	6166680	Identifier	dtime		6166572	1					
ANR	6166681	Parameter	zip_uint16_t ddate	768:34:19709:19726	6166572	1	True				
ANR	6166682	ParameterType	zip_uint16_t		6166572	0					
ANR	6166683	Identifier	ddate		6166572	1					
ANR	6166684	CFGEntryNode	ENTRY		6166572		True				
ANR	6166685	CFGExitNode	EXIT		6166572		True				
ANR	6166686	Symbol	mktime		6166572						
ANR	6166687	Symbol	ddate		6166572						
ANR	6166688	Symbol	& tm		6166572						
ANR	6166689	Symbol	tm . tm_mday		6166572						
ANR	6166690	Symbol	tm . tm_sec		6166572						
ANR	6166691	Symbol	tm . tm_min		6166572						
ANR	6166692	Symbol	dtime		6166572						
ANR	6166693	Symbol	tm		6166572						
ANR	6166694	Symbol	tm . tm_isdst		6166572						
ANR	6166695	Symbol	tm . tm_hour		6166572						
ANR	6166696	Symbol	tm . tm_year		6166572						
ANR	6166697	Symbol	tm . tm_mon		6166572						
ANR	6166698	Function	_zip_ef_utf8	790:0:20102:20788							
ANR	6166699	FunctionDef	"_zip_ef_utf8 (zip_uint16_t id , struct zip_string * str , struct zip_error * error)"		6166698	0					
ANR	6166700	CompoundStatement		792:0:20213:20788	6166698	0					
ANR	6166701	IdentifierDeclStatement	const zip_uint8_t * raw ;	793:4:20219:20241	6166698	0	True				
ANR	6166702	IdentifierDecl	* raw		6166698	0					
ANR	6166703	IdentifierDeclType	const zip_uint8_t *		6166698	0					
ANR	6166704	Identifier	raw		6166698	1					
ANR	6166705	IdentifierDeclStatement	"zip_uint8_t * data , * p ;"	794:4:20247:20268	6166698	1	True				
ANR	6166706	IdentifierDecl	* data		6166698	0					
ANR	6166707	IdentifierDeclType	zip_uint8_t *		6166698	0					
ANR	6166708	Identifier	data		6166698	1					
ANR	6166709	IdentifierDecl	* p		6166698	1					
ANR	6166710	IdentifierDeclType	zip_uint8_t *		6166698	0					
ANR	6166711	Identifier	p		6166698	1					
ANR	6166712	IdentifierDeclStatement	zip_uint32_t len ;	795:4:20274:20290	6166698	2	True				
ANR	6166713	IdentifierDecl	len		6166698	0					
ANR	6166714	IdentifierDeclType	zip_uint32_t		6166698	0					
ANR	6166715	Identifier	len		6166698	1					
ANR	6166716	IdentifierDeclStatement	struct zip_extra_field * ef ;	796:4:20296:20322	6166698	3	True				
ANR	6166717	IdentifierDecl	* ef		6166698	0					
ANR	6166718	IdentifierDeclType	struct zip_extra_field *		6166698	0					
ANR	6166719	Identifier	ef		6166698	1					
ANR	6166720	ExpressionStatement	"raw = _zip_string_get ( str , & len , ZIP_FL_ENC_RAW , NULL )"	798:4:20329:20383	6166698	4	True				
ANR	6166721	AssignmentExpression	"raw = _zip_string_get ( str , & len , ZIP_FL_ENC_RAW , NULL )"		6166698	0		=			
ANR	6166722	Identifier	raw		6166698	0					
ANR	6166723	CallExpression	"_zip_string_get ( str , & len , ZIP_FL_ENC_RAW , NULL )"		6166698	1					
ANR	6166724	Callee	_zip_string_get		6166698	0					
ANR	6166725	Identifier	_zip_string_get		6166698	0					
ANR	6166726	ArgumentList	str		6166698	1					
ANR	6166727	Argument	str		6166698	0					
ANR	6166728	Identifier	str		6166698	0					
ANR	6166729	Argument	& len		6166698	1					
ANR	6166730	UnaryOperationExpression	& len		6166698	0					
ANR	6166731	UnaryOperator	&		6166698	0					
ANR	6166732	Identifier	len		6166698	1					
ANR	6166733	Argument	ZIP_FL_ENC_RAW		6166698	2					
ANR	6166734	Identifier	ZIP_FL_ENC_RAW		6166698	0					
ANR	6166735	Argument	NULL		6166698	3					
ANR	6166736	Identifier	NULL		6166698	0					
ANR	6166737	IfStatement	if ( len + 5 > ZIP_UINT16_MAX )		6166698	5					
ANR	6166738	Condition	len + 5 > ZIP_UINT16_MAX	800:8:20394:20415	6166698	0	True				
ANR	6166739	RelationalExpression	len + 5 > ZIP_UINT16_MAX		6166698	0		>			
ANR	6166740	AdditiveExpression	len + 5		6166698	0		+			
ANR	6166741	Identifier	len		6166698	0					
ANR	6166742	PrimaryExpression	5		6166698	1					
ANR	6166743	Identifier	ZIP_UINT16_MAX		6166698	1					
ANR	6166744	CompoundStatement		9:32:204:204	6166698	1					
ANR	6166745	IfStatement	if ( ( data = ( zip_uint8_t * ) malloc ( len + 5 ) ) == NULL )		6166698	6					
ANR	6166746	Condition	( data = ( zip_uint8_t * ) malloc ( len + 5 ) ) == NULL	804:8:20464:20506	6166698	0	True				
ANR	6166747	EqualityExpression	( data = ( zip_uint8_t * ) malloc ( len + 5 ) ) == NULL		6166698	0		==			
ANR	6166748	AssignmentExpression	data = ( zip_uint8_t * ) malloc ( len + 5 )		6166698	0		=			
ANR	6166749	Identifier	data		6166698	0					
ANR	6166750	CastExpression	( zip_uint8_t * ) malloc ( len + 5 )		6166698	1					
ANR	6166751	CastTarget	zip_uint8_t *		6166698	0					
ANR	6166752	CallExpression	malloc ( len + 5 )		6166698	1					
ANR	6166753	Callee	malloc		6166698	0					
ANR	6166754	Identifier	malloc		6166698	0					
ANR	6166755	ArgumentList	len + 5		6166698	1					
ANR	6166756	Argument	len + 5		6166698	0					
ANR	6166757	AdditiveExpression	len + 5		6166698	0		+			
ANR	6166758	Identifier	len		6166698	0					
ANR	6166759	PrimaryExpression	5		6166698	1					
ANR	6166760	Identifier	NULL		6166698	1					
ANR	6166761	CompoundStatement		13:53:295:295	6166698	1					
ANR	6166762	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	805:1:20512:20551	6166698	0	True				
ANR	6166763	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6166698	0					
ANR	6166764	Callee	_zip_error_set		6166698	0					
ANR	6166765	Identifier	_zip_error_set		6166698	0					
ANR	6166766	ArgumentList	error		6166698	1					
ANR	6166767	Argument	error		6166698	0					
ANR	6166768	Identifier	error		6166698	0					
ANR	6166769	Argument	ZIP_ER_MEMORY		6166698	1					
ANR	6166770	Identifier	ZIP_ER_MEMORY		6166698	0					
ANR	6166771	Argument	0		6166698	2					
ANR	6166772	PrimaryExpression	0		6166698	0					
ANR	6166773	ReturnStatement	return NULL ;	806:1:20554:20565	6166698	1	True				
ANR	6166774	Identifier	NULL		6166698	0					
ANR	6166775	ExpressionStatement	p = data	809:4:20578:20586	6166698	7	True				
ANR	6166776	AssignmentExpression	p = data		6166698	0		=			
ANR	6166777	Identifier	p		6166698	0					
ANR	6166778	Identifier	data		6166698	1					
ANR	6166779	ExpressionStatement	* ( p ++ ) = 1	810:4:20592:20602	6166698	8	True				
ANR	6166780	AssignmentExpression	* ( p ++ ) = 1		6166698	0		=			
ANR	6166781	UnaryOperationExpression	* ( p ++ )		6166698	0					
ANR	6166782	UnaryOperator	*		6166698	0					
ANR	6166783	PostIncDecOperationExpression	p ++		6166698	1					
ANR	6166784	Identifier	p		6166698	0					
ANR	6166785	IncDec	++		6166698	1					
ANR	6166786	PrimaryExpression	1		6166698	1					
ANR	6166787	ExpressionStatement	"_zip_poke4 ( _zip_string_crc32 ( str ) , & p )"	811:4:20608:20646	6166698	9	True				
ANR	6166788	CallExpression	"_zip_poke4 ( _zip_string_crc32 ( str ) , & p )"		6166698	0					
ANR	6166789	Callee	_zip_poke4		6166698	0					
ANR	6166790	Identifier	_zip_poke4		6166698	0					
ANR	6166791	ArgumentList	_zip_string_crc32 ( str )		6166698	1					
ANR	6166792	Argument	_zip_string_crc32 ( str )		6166698	0					
ANR	6166793	CallExpression	_zip_string_crc32 ( str )		6166698	0					
ANR	6166794	Callee	_zip_string_crc32		6166698	0					
ANR	6166795	Identifier	_zip_string_crc32		6166698	0					
ANR	6166796	ArgumentList	str		6166698	1					
ANR	6166797	Argument	str		6166698	0					
ANR	6166798	Identifier	str		6166698	0					
ANR	6166799	Argument	& p		6166698	1					
ANR	6166800	UnaryOperationExpression	& p		6166698	0					
ANR	6166801	UnaryOperator	&		6166698	0					
ANR	6166802	Identifier	p		6166698	1					
ANR	6166803	ExpressionStatement	"memcpy ( p , raw , len )"	812:4:20652:20671	6166698	10	True				
ANR	6166804	CallExpression	"memcpy ( p , raw , len )"		6166698	0					
ANR	6166805	Callee	memcpy		6166698	0					
ANR	6166806	Identifier	memcpy		6166698	0					
ANR	6166807	ArgumentList	p		6166698	1					
ANR	6166808	Argument	p		6166698	0					
ANR	6166809	Identifier	p		6166698	0					
ANR	6166810	Argument	raw		6166698	1					
ANR	6166811	Identifier	raw		6166698	0					
ANR	6166812	Argument	len		6166698	2					
ANR	6166813	Identifier	len		6166698	0					
ANR	6166814	ExpressionStatement	p += len	813:4:20677:20685	6166698	11	True				
ANR	6166815	AssignmentExpression	p += len		6166698	0		+=			
ANR	6166816	Identifier	p		6166698	0					
ANR	6166817	Identifier	len		6166698	1					
ANR	6166818	ExpressionStatement	"ef = _zip_ef_new ( id , ( zip_uint16_t ) ( p - data ) , data , ZIP_EF_BOTH )"	815:4:20692:20755	6166698	12	True				
ANR	6166819	AssignmentExpression	"ef = _zip_ef_new ( id , ( zip_uint16_t ) ( p - data ) , data , ZIP_EF_BOTH )"		6166698	0		=			
ANR	6166820	Identifier	ef		6166698	0					
ANR	6166821	CallExpression	"_zip_ef_new ( id , ( zip_uint16_t ) ( p - data ) , data , ZIP_EF_BOTH )"		6166698	1					
ANR	6166822	Callee	_zip_ef_new		6166698	0					
ANR	6166823	Identifier	_zip_ef_new		6166698	0					
ANR	6166824	ArgumentList	id		6166698	1					
ANR	6166825	Argument	id		6166698	0					
ANR	6166826	Identifier	id		6166698	0					
ANR	6166827	Argument	( zip_uint16_t ) ( p - data )		6166698	1					
ANR	6166828	CastExpression	( zip_uint16_t ) ( p - data )		6166698	0					
ANR	6166829	CastTarget	zip_uint16_t		6166698	0					
ANR	6166830	AdditiveExpression	p - data		6166698	1		-			
ANR	6166831	Identifier	p		6166698	0					
ANR	6166832	Identifier	data		6166698	1					
ANR	6166833	Argument	data		6166698	2					
ANR	6166834	Identifier	data		6166698	0					
ANR	6166835	Argument	ZIP_EF_BOTH		6166698	3					
ANR	6166836	Identifier	ZIP_EF_BOTH		6166698	0					
ANR	6166837	ExpressionStatement	free ( data )	816:4:20761:20771	6166698	13	True				
ANR	6166838	CallExpression	free ( data )		6166698	0					
ANR	6166839	Callee	free		6166698	0					
ANR	6166840	Identifier	free		6166698	0					
ANR	6166841	ArgumentList	data		6166698	1					
ANR	6166842	Argument	data		6166698	0					
ANR	6166843	Identifier	data		6166698	0					
ANR	6166844	ReturnStatement	return ef ;	817:4:20777:20786	6166698	14	True				
ANR	6166845	Identifier	ef		6166698	0					
ANR	6166846	ReturnType	static struct zip_extra_field *		6166698	1					
ANR	6166847	Identifier	_zip_ef_utf8		6166698	2					
ANR	6166848	ParameterList	"zip_uint16_t id , struct zip_string * str , struct zip_error * error"		6166698	3					
ANR	6166849	Parameter	zip_uint16_t id	791:13:20147:20161	6166698	0	True				
ANR	6166850	ParameterType	zip_uint16_t		6166698	0					
ANR	6166851	Identifier	id		6166698	1					
ANR	6166852	Parameter	struct zip_string * str	791:30:20164:20185	6166698	1	True				
ANR	6166853	ParameterType	struct zip_string *		6166698	0					
ANR	6166854	Identifier	str		6166698	1					
ANR	6166855	Parameter	struct zip_error * error	791:54:20188:20210	6166698	2	True				
ANR	6166856	ParameterType	struct zip_error *		6166698	0					
ANR	6166857	Identifier	error		6166698	1					
ANR	6166858	CFGEntryNode	ENTRY		6166698		True				
ANR	6166859	CFGExitNode	EXIT		6166698		True				
ANR	6166860	Symbol	ef		6166698						
ANR	6166861	Symbol	malloc		6166698						
ANR	6166862	Symbol	* ( p ++ )		6166698						
ANR	6166863	Symbol	NULL		6166698						
ANR	6166864	Symbol	data		6166698						
ANR	6166865	Symbol	ZIP_EF_BOTH		6166698						
ANR	6166866	Symbol	ZIP_UINT16_MAX		6166698						
ANR	6166867	Symbol	raw		6166698						
ANR	6166868	Symbol	error		6166698						
ANR	6166869	Symbol	_zip_string_crc32		6166698						
ANR	6166870	Symbol	str		6166698						
ANR	6166871	Symbol	p		6166698						
ANR	6166872	Symbol	_zip_string_get		6166698						
ANR	6166873	Symbol	len		6166698						
ANR	6166874	Symbol	& p		6166698						
ANR	6166875	Symbol	_zip_ef_new		6166698						
ANR	6166876	Symbol	ZIP_FL_ENC_RAW		6166698						
ANR	6166877	Symbol	id		6166698						
ANR	6166878	Symbol	& len		6166698						
ANR	6166879	Symbol	ZIP_ER_MEMORY		6166698						
ANR	6166880	Function	_zip_get_dirent	822:0:20794:21430							
ANR	6166881	FunctionDef	"_zip_get_dirent (struct zip * za , zip_uint64_t idx , zip_flags_t flags , struct zip_error * error)"		6166880	0					
ANR	6166882	CompoundStatement		824:0:20908:21430	6166880	0					
ANR	6166883	IfStatement	if ( error == NULL )		6166880	0					
ANR	6166884	Condition	error == NULL	825:8:20918:20930	6166880	0	True				
ANR	6166885	EqualityExpression	error == NULL		6166880	0		==			
ANR	6166886	Identifier	error		6166880	0					
ANR	6166887	Identifier	NULL		6166880	1					
ANR	6166888	ExpressionStatement	error = & za -> error	826:1:20934:20952	6166880	1	True				
ANR	6166889	AssignmentExpression	error = & za -> error		6166880	0		=			
ANR	6166890	Identifier	error		6166880	0					
ANR	6166891	UnaryOperationExpression	& za -> error		6166880	1					
ANR	6166892	UnaryOperator	&		6166880	0					
ANR	6166893	PtrMemberAccess	za -> error		6166880	1					
ANR	6166894	Identifier	za		6166880	0					
ANR	6166895	Identifier	error		6166880	1					
ANR	6166896	IfStatement	if ( idx >= za -> nentry )		6166880	1					
ANR	6166897	Condition	idx >= za -> nentry	828:8:20963:20979	6166880	0	True				
ANR	6166898	RelationalExpression	idx >= za -> nentry		6166880	0		>=			
ANR	6166899	Identifier	idx		6166880	0					
ANR	6166900	PtrMemberAccess	za -> nentry		6166880	1					
ANR	6166901	Identifier	za		6166880	0					
ANR	6166902	Identifier	nentry		6166880	1					
ANR	6166903	CompoundStatement		5:27:73:73	6166880	1					
ANR	6166904	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"	829:1:20985:21023	6166880	0	True				
ANR	6166905	CallExpression	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"		6166880	0					
ANR	6166906	Callee	_zip_error_set		6166880	0					
ANR	6166907	Identifier	_zip_error_set		6166880	0					
ANR	6166908	ArgumentList	error		6166880	1					
ANR	6166909	Argument	error		6166880	0					
ANR	6166910	Identifier	error		6166880	0					
ANR	6166911	Argument	ZIP_ER_INVAL		6166880	1					
ANR	6166912	Identifier	ZIP_ER_INVAL		6166880	0					
ANR	6166913	Argument	0		6166880	2					
ANR	6166914	PrimaryExpression	0		6166880	0					
ANR	6166915	ReturnStatement	return NULL ;	830:1:21026:21037	6166880	1	True				
ANR	6166916	Identifier	NULL		6166880	0					
ANR	6166917	IfStatement	if ( ( flags & ZIP_FL_UNCHANGED ) || za -> entry [ idx ] . changes == NULL )		6166880	2					
ANR	6166918	Condition	( flags & ZIP_FL_UNCHANGED ) || za -> entry [ idx ] . changes == NULL	833:8:21054:21113	6166880	0	True				
ANR	6166919	OrExpression	( flags & ZIP_FL_UNCHANGED ) || za -> entry [ idx ] . changes == NULL		6166880	0		||			
ANR	6166920	BitAndExpression	flags & ZIP_FL_UNCHANGED		6166880	0		&			
ANR	6166921	Identifier	flags		6166880	0					
ANR	6166922	Identifier	ZIP_FL_UNCHANGED		6166880	1					
ANR	6166923	EqualityExpression	za -> entry [ idx ] . changes == NULL		6166880	1		==			
ANR	6166924	MemberAccess	za -> entry [ idx ] . changes		6166880	0					
ANR	6166925	ArrayIndexing	za -> entry [ idx ]		6166880	0					
ANR	6166926	PtrMemberAccess	za -> entry		6166880	0					
ANR	6166927	Identifier	za		6166880	0					
ANR	6166928	Identifier	entry		6166880	1					
ANR	6166929	Identifier	idx		6166880	1					
ANR	6166930	Identifier	changes		6166880	1					
ANR	6166931	Identifier	NULL		6166880	1					
ANR	6166932	CompoundStatement		10:70:207:207	6166880	1					
ANR	6166933	IfStatement	if ( za -> entry [ idx ] . orig == NULL )		6166880	0					
ANR	6166934	Condition	za -> entry [ idx ] . orig == NULL	834:5:21123:21149	6166880	0	True				
ANR	6166935	EqualityExpression	za -> entry [ idx ] . orig == NULL		6166880	0		==			
ANR	6166936	MemberAccess	za -> entry [ idx ] . orig		6166880	0					
ANR	6166937	ArrayIndexing	za -> entry [ idx ]		6166880	0					
ANR	6166938	PtrMemberAccess	za -> entry		6166880	0					
ANR	6166939	Identifier	za		6166880	0					
ANR	6166940	Identifier	entry		6166880	1					
ANR	6166941	Identifier	idx		6166880	1					
ANR	6166942	Identifier	orig		6166880	1					
ANR	6166943	Identifier	NULL		6166880	1					
ANR	6166944	CompoundStatement		11:34:243:243	6166880	1					
ANR	6166945	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"	835:5:21159:21197	6166880	0	True				
ANR	6166946	CallExpression	"_zip_error_set ( error , ZIP_ER_INVAL , 0 )"		6166880	0					
ANR	6166947	Callee	_zip_error_set		6166880	0					
ANR	6166948	Identifier	_zip_error_set		6166880	0					
ANR	6166949	ArgumentList	error		6166880	1					
ANR	6166950	Argument	error		6166880	0					
ANR	6166951	Identifier	error		6166880	0					
ANR	6166952	Argument	ZIP_ER_INVAL		6166880	1					
ANR	6166953	Identifier	ZIP_ER_INVAL		6166880	0					
ANR	6166954	Argument	0		6166880	2					
ANR	6166955	PrimaryExpression	0		6166880	0					
ANR	6166956	ReturnStatement	return NULL ;	836:5:21204:21215	6166880	1	True				
ANR	6166957	Identifier	NULL		6166880	0					
ANR	6166958	IfStatement	if ( za -> entry [ idx ] . deleted && ( flags & ZIP_FL_UNCHANGED ) == 0 )		6166880	1					
ANR	6166959	Condition	za -> entry [ idx ] . deleted && ( flags & ZIP_FL_UNCHANGED ) == 0	838:5:21225:21281	6166880	0	True				
ANR	6166960	AndExpression	za -> entry [ idx ] . deleted && ( flags & ZIP_FL_UNCHANGED ) == 0		6166880	0		&&			
ANR	6166961	MemberAccess	za -> entry [ idx ] . deleted		6166880	0					
ANR	6166962	ArrayIndexing	za -> entry [ idx ]		6166880	0					
ANR	6166963	PtrMemberAccess	za -> entry		6166880	0					
ANR	6166964	Identifier	za		6166880	0					
ANR	6166965	Identifier	entry		6166880	1					
ANR	6166966	Identifier	idx		6166880	1					
ANR	6166967	Identifier	deleted		6166880	1					
ANR	6166968	EqualityExpression	( flags & ZIP_FL_UNCHANGED ) == 0		6166880	1		==			
ANR	6166969	BitAndExpression	flags & ZIP_FL_UNCHANGED		6166880	0		&			
ANR	6166970	Identifier	flags		6166880	0					
ANR	6166971	Identifier	ZIP_FL_UNCHANGED		6166880	1					
ANR	6166972	PrimaryExpression	0		6166880	1					
ANR	6166973	CompoundStatement		15:64:375:375	6166880	1					
ANR	6166974	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_DELETED , 0 )"	839:5:21291:21331	6166880	0	True				
ANR	6166975	CallExpression	"_zip_error_set ( error , ZIP_ER_DELETED , 0 )"		6166880	0					
ANR	6166976	Callee	_zip_error_set		6166880	0					
ANR	6166977	Identifier	_zip_error_set		6166880	0					
ANR	6166978	ArgumentList	error		6166880	1					
ANR	6166979	Argument	error		6166880	0					
ANR	6166980	Identifier	error		6166880	0					
ANR	6166981	Argument	ZIP_ER_DELETED		6166880	1					
ANR	6166982	Identifier	ZIP_ER_DELETED		6166880	0					
ANR	6166983	Argument	0		6166880	2					
ANR	6166984	PrimaryExpression	0		6166880	0					
ANR	6166985	ReturnStatement	return NULL ;	840:5:21338:21349	6166880	1	True				
ANR	6166986	Identifier	NULL		6166880	0					
ANR	6166987	ReturnStatement	return za -> entry [ idx ] . orig ;	842:1:21355:21381	6166880	2	True				
ANR	6166988	MemberAccess	za -> entry [ idx ] . orig		6166880	0					
ANR	6166989	ArrayIndexing	za -> entry [ idx ]		6166880	0					
ANR	6166990	PtrMemberAccess	za -> entry		6166880	0					
ANR	6166991	Identifier	za		6166880	0					
ANR	6166992	Identifier	entry		6166880	1					
ANR	6166993	Identifier	idx		6166880	1					
ANR	6166994	Identifier	orig		6166880	1					
ANR	6166995	ElseStatement	else		6166880	0					
ANR	6166996	ReturnStatement	return za -> entry [ idx ] . changes ;	845:1:21399:21428	6166880	0	True				
ANR	6166997	MemberAccess	za -> entry [ idx ] . changes		6166880	0					
ANR	6166998	ArrayIndexing	za -> entry [ idx ]		6166880	0					
ANR	6166999	PtrMemberAccess	za -> entry		6166880	0					
ANR	6167000	Identifier	za		6166880	0					
ANR	6167001	Identifier	entry		6166880	1					
ANR	6167002	Identifier	idx		6166880	1					
ANR	6167003	Identifier	changes		6166880	1					
ANR	6167004	ReturnType	struct zip_dirent *		6166880	1					
ANR	6167005	Identifier	_zip_get_dirent		6166880	2					
ANR	6167006	ParameterList	"struct zip * za , zip_uint64_t idx , zip_flags_t flags , struct zip_error * error"		6166880	3					
ANR	6167007	Parameter	struct zip * za	823:16:20830:20843	6166880	0	True				
ANR	6167008	ParameterType	struct zip *		6166880	0					
ANR	6167009	Identifier	za		6166880	1					
ANR	6167010	Parameter	zip_uint64_t idx	823:32:20846:20861	6166880	1	True				
ANR	6167011	ParameterType	zip_uint64_t		6166880	0					
ANR	6167012	Identifier	idx		6166880	1					
ANR	6167013	Parameter	zip_flags_t flags	823:50:20864:20880	6166880	2	True				
ANR	6167014	ParameterType	zip_flags_t		6166880	0					
ANR	6167015	Identifier	flags		6166880	1					
ANR	6167016	Parameter	struct zip_error * error	823:69:20883:20905	6166880	3	True				
ANR	6167017	ParameterType	struct zip_error *		6166880	0					
ANR	6167018	Identifier	error		6166880	1					
ANR	6167019	CFGEntryNode	ENTRY		6166880		True				
ANR	6167020	CFGExitNode	EXIT		6166880		True				
ANR	6167021	Symbol	NULL		6166880						
ANR	6167022	Symbol	& za -> error		6166880						
ANR	6167023	Symbol	za		6166880						
ANR	6167024	Symbol	flags		6166880						
ANR	6167025	Symbol	za -> entry		6166880						
ANR	6167026	Symbol	za -> entry [ idx ] . orig		6166880						
ANR	6167027	Symbol	error		6166880						
ANR	6167028	Symbol	ZIP_FL_UNCHANGED		6166880						
ANR	6167029	Symbol	* za		6166880						
ANR	6167030	Symbol	* za -> entry		6166880						
ANR	6167031	Symbol	za -> entry [ idx ] . changes		6166880						
ANR	6167032	Symbol	ZIP_ER_INVAL		6166880						
ANR	6167033	Symbol	* * za		6166880						
ANR	6167034	Symbol	ZIP_ER_DELETED		6166880						
ANR	6167035	Symbol	za -> entry [ idx ] . deleted		6166880						
ANR	6167036	Symbol	za -> nentry		6166880						
ANR	6167037	Symbol	* idx		6166880						
ANR	6167038	Symbol	idx		6166880						
ANR	6167039	Function	_zip_read2	850:0:21436:21586							
ANR	6167040	FunctionDef	_zip_read2 (const zip_uint8_t * * a)		6167039	0					
ANR	6167041	CompoundStatement		852:0:21483:21586	6167039	0					
ANR	6167042	IdentifierDeclStatement	zip_uint16_t ret ;	853:4:21489:21505	6167039	0	True				
ANR	6167043	IdentifierDecl	ret		6167039	0					
ANR	6167044	IdentifierDeclType	zip_uint16_t		6167039	0					
ANR	6167045	Identifier	ret		6167039	1					
ANR	6167046	ExpressionStatement	ret = ( zip_uint16_t ) ( ( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 ) )	855:4:21512:21554	6167039	1	True				
ANR	6167047	AssignmentExpression	ret = ( zip_uint16_t ) ( ( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 ) )		6167039	0		=			
ANR	6167048	Identifier	ret		6167039	0					
ANR	6167049	CastExpression	( zip_uint16_t ) ( ( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 ) )		6167039	1					
ANR	6167050	CastTarget	zip_uint16_t		6167039	0					
ANR	6167051	AdditiveExpression	( * a ) [ 0 ] + ( ( * a ) [ 1 ] << 8 )		6167039	1		+			
ANR	6167052	ArrayIndexing	( * a ) [ 0 ]		6167039	0					
ANR	6167053	UnaryOperationExpression	* a		6167039	0					
ANR	6167054	UnaryOperator	*		6167039	0					
ANR	6167055	Identifier	a		6167039	1					
ANR	6167056	PrimaryExpression	0		6167039	1					
ANR	6167057	ShiftExpression	( * a ) [ 1 ] << 8		6167039	1		<<			
ANR	6167058	ArrayIndexing	( * a ) [ 1 ]		6167039	0					
ANR	6167059	UnaryOperationExpression	* a		6167039	0					
ANR	6167060	UnaryOperator	*		6167039	0					
ANR	6167061	Identifier	a		6167039	1					
ANR	6167062	PrimaryExpression	1		6167039	1					
ANR	6167063	PrimaryExpression	8		6167039	1					
ANR	6167064	ExpressionStatement	* a += 2	856:4:21560:21567	6167039	2	True				
ANR	6167065	AssignmentExpression	* a += 2		6167039	0		+=			
ANR	6167066	UnaryOperationExpression	* a		6167039	0					
ANR	6167067	UnaryOperator	*		6167039	0					
ANR	6167068	Identifier	a		6167039	1					
ANR	6167069	PrimaryExpression	2		6167039	1					
ANR	6167070	ReturnStatement	return ret ;	858:4:21574:21584	6167039	3	True				
ANR	6167071	Identifier	ret		6167039	0					
ANR	6167072	ReturnType	zip_uint16_t		6167039	1					
ANR	6167073	Identifier	_zip_read2		6167039	2					
ANR	6167074	ParameterList	const zip_uint8_t * * a		6167039	3					
ANR	6167075	Parameter	const zip_uint8_t * * a	851:11:21460:21480	6167039	0	True				
ANR	6167076	ParameterType	const zip_uint8_t * *		6167039	0					
ANR	6167077	Identifier	a		6167039	1					
ANR	6167078	CFGEntryNode	ENTRY		6167039		True				
ANR	6167079	CFGExitNode	EXIT		6167039		True				
ANR	6167080	Symbol	ret		6167039						
ANR	6167081	Symbol	a		6167039						
ANR	6167082	Symbol	* * a		6167039						
ANR	6167083	Symbol	* a		6167039						
ANR	6167084	Function	_zip_read4	863:0:21592:21770							
ANR	6167085	FunctionDef	_zip_read4 (const zip_uint8_t * * a)		6167084	0					
ANR	6167086	CompoundStatement		865:0:21639:21770	6167084	0					
ANR	6167087	IdentifierDeclStatement	zip_uint32_t ret ;	866:4:21645:21661	6167084	0	True				
ANR	6167088	IdentifierDecl	ret		6167084	0					
ANR	6167089	IdentifierDeclType	zip_uint32_t		6167084	0					
ANR	6167090	Identifier	ret		6167084	1					
ANR	6167091	ExpressionStatement	ret = ( ( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]	868:4:21668:21738	6167084	1	True				
ANR	6167092	AssignmentExpression	ret = ( ( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6167084	0		=			
ANR	6167093	Identifier	ret		6167084	0					
ANR	6167094	AdditiveExpression	( ( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6167084	1		+			
ANR	6167095	ShiftExpression	( ( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8		6167084	0		<<			
ANR	6167096	AdditiveExpression	( ( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ]		6167084	0		+			
ANR	6167097	ShiftExpression	( ( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8		6167084	0		<<			
ANR	6167098	AdditiveExpression	( ( zip_uint32_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ]		6167084	0		+			
ANR	6167099	ShiftExpression	( zip_uint32_t ) ( * a ) [ 3 ] << 8		6167084	0		<<			
ANR	6167100	CastExpression	( zip_uint32_t ) ( * a ) [ 3 ]		6167084	0					
ANR	6167101	CastTarget	zip_uint32_t		6167084	0					
ANR	6167102	ArrayIndexing	( * a ) [ 3 ]		6167084	1					
ANR	6167103	UnaryOperationExpression	* a		6167084	0					
ANR	6167104	UnaryOperator	*		6167084	0					
ANR	6167105	Identifier	a		6167084	1					
ANR	6167106	PrimaryExpression	3		6167084	1					
ANR	6167107	PrimaryExpression	8		6167084	1					
ANR	6167108	ArrayIndexing	( * a ) [ 2 ]		6167084	1					
ANR	6167109	UnaryOperationExpression	* a		6167084	0					
ANR	6167110	UnaryOperator	*		6167084	0					
ANR	6167111	Identifier	a		6167084	1					
ANR	6167112	PrimaryExpression	2		6167084	1					
ANR	6167113	PrimaryExpression	8		6167084	1					
ANR	6167114	ArrayIndexing	( * a ) [ 1 ]		6167084	1					
ANR	6167115	UnaryOperationExpression	* a		6167084	0					
ANR	6167116	UnaryOperator	*		6167084	0					
ANR	6167117	Identifier	a		6167084	1					
ANR	6167118	PrimaryExpression	1		6167084	1					
ANR	6167119	PrimaryExpression	8		6167084	1					
ANR	6167120	ArrayIndexing	( * a ) [ 0 ]		6167084	1					
ANR	6167121	UnaryOperationExpression	* a		6167084	0					
ANR	6167122	UnaryOperator	*		6167084	0					
ANR	6167123	Identifier	a		6167084	1					
ANR	6167124	PrimaryExpression	0		6167084	1					
ANR	6167125	ExpressionStatement	* a += 4	869:4:21744:21751	6167084	2	True				
ANR	6167126	AssignmentExpression	* a += 4		6167084	0		+=			
ANR	6167127	UnaryOperationExpression	* a		6167084	0					
ANR	6167128	UnaryOperator	*		6167084	0					
ANR	6167129	Identifier	a		6167084	1					
ANR	6167130	PrimaryExpression	4		6167084	1					
ANR	6167131	ReturnStatement	return ret ;	871:4:21758:21768	6167084	3	True				
ANR	6167132	Identifier	ret		6167084	0					
ANR	6167133	ReturnType	zip_uint32_t		6167084	1					
ANR	6167134	Identifier	_zip_read4		6167084	2					
ANR	6167135	ParameterList	const zip_uint8_t * * a		6167084	3					
ANR	6167136	Parameter	const zip_uint8_t * * a	864:11:21616:21636	6167084	0	True				
ANR	6167137	ParameterType	const zip_uint8_t * *		6167084	0					
ANR	6167138	Identifier	a		6167084	1					
ANR	6167139	CFGEntryNode	ENTRY		6167084		True				
ANR	6167140	CFGExitNode	EXIT		6167084		True				
ANR	6167141	Symbol	ret		6167084						
ANR	6167142	Symbol	a		6167084						
ANR	6167143	Symbol	* * a		6167084						
ANR	6167144	Symbol	* a		6167084						
ANR	6167145	Function	_zip_read8	876:0:21776:22046							
ANR	6167146	FunctionDef	_zip_read8 (const zip_uint8_t * * a)		6167145	0					
ANR	6167147	CompoundStatement		878:0:21823:22046	6167145	0					
ANR	6167148	IdentifierDeclStatement	"zip_uint64_t x , y ;"	879:4:21829:21846	6167145	0	True				
ANR	6167149	IdentifierDecl	x		6167145	0					
ANR	6167150	IdentifierDeclType	zip_uint64_t		6167145	0					
ANR	6167151	Identifier	x		6167145	1					
ANR	6167152	IdentifierDecl	y		6167145	1					
ANR	6167153	IdentifierDeclType	zip_uint64_t		6167145	0					
ANR	6167154	Identifier	y		6167145	1					
ANR	6167155	ExpressionStatement	x = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]	881:4:21853:21921	6167145	1	True				
ANR	6167156	AssignmentExpression	x = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6167145	0		=			
ANR	6167157	Identifier	x		6167145	0					
ANR	6167158	AdditiveExpression	( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6167145	1		+			
ANR	6167159	ShiftExpression	( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8		6167145	0		<<			
ANR	6167160	AdditiveExpression	( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ]		6167145	0		+			
ANR	6167161	ShiftExpression	( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8		6167145	0		<<			
ANR	6167162	AdditiveExpression	( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ]		6167145	0		+			
ANR	6167163	ShiftExpression	( zip_uint64_t ) ( * a ) [ 3 ] << 8		6167145	0		<<			
ANR	6167164	CastExpression	( zip_uint64_t ) ( * a ) [ 3 ]		6167145	0					
ANR	6167165	CastTarget	zip_uint64_t		6167145	0					
ANR	6167166	ArrayIndexing	( * a ) [ 3 ]		6167145	1					
ANR	6167167	UnaryOperationExpression	* a		6167145	0					
ANR	6167168	UnaryOperator	*		6167145	0					
ANR	6167169	Identifier	a		6167145	1					
ANR	6167170	PrimaryExpression	3		6167145	1					
ANR	6167171	PrimaryExpression	8		6167145	1					
ANR	6167172	ArrayIndexing	( * a ) [ 2 ]		6167145	1					
ANR	6167173	UnaryOperationExpression	* a		6167145	0					
ANR	6167174	UnaryOperator	*		6167145	0					
ANR	6167175	Identifier	a		6167145	1					
ANR	6167176	PrimaryExpression	2		6167145	1					
ANR	6167177	PrimaryExpression	8		6167145	1					
ANR	6167178	ArrayIndexing	( * a ) [ 1 ]		6167145	1					
ANR	6167179	UnaryOperationExpression	* a		6167145	0					
ANR	6167180	UnaryOperator	*		6167145	0					
ANR	6167181	Identifier	a		6167145	1					
ANR	6167182	PrimaryExpression	1		6167145	1					
ANR	6167183	PrimaryExpression	8		6167145	1					
ANR	6167184	ArrayIndexing	( * a ) [ 0 ]		6167145	1					
ANR	6167185	UnaryOperationExpression	* a		6167145	0					
ANR	6167186	UnaryOperator	*		6167145	0					
ANR	6167187	Identifier	a		6167145	1					
ANR	6167188	PrimaryExpression	0		6167145	1					
ANR	6167189	ExpressionStatement	* a += 4	882:4:21927:21934	6167145	2	True				
ANR	6167190	AssignmentExpression	* a += 4		6167145	0		+=			
ANR	6167191	UnaryOperationExpression	* a		6167145	0					
ANR	6167192	UnaryOperator	*		6167145	0					
ANR	6167193	Identifier	a		6167145	1					
ANR	6167194	PrimaryExpression	4		6167145	1					
ANR	6167195	ExpressionStatement	y = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]	883:4:21940:22008	6167145	3	True				
ANR	6167196	AssignmentExpression	y = ( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6167145	0		=			
ANR	6167197	Identifier	y		6167145	0					
ANR	6167198	AdditiveExpression	( ( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8 ) + ( * a ) [ 0 ]		6167145	1		+			
ANR	6167199	ShiftExpression	( ( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ] ) << 8		6167145	0		<<			
ANR	6167200	AdditiveExpression	( ( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8 ) + ( * a ) [ 1 ]		6167145	0		+			
ANR	6167201	ShiftExpression	( ( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ] ) << 8		6167145	0		<<			
ANR	6167202	AdditiveExpression	( ( zip_uint64_t ) ( * a ) [ 3 ] << 8 ) + ( * a ) [ 2 ]		6167145	0		+			
ANR	6167203	ShiftExpression	( zip_uint64_t ) ( * a ) [ 3 ] << 8		6167145	0		<<			
ANR	6167204	CastExpression	( zip_uint64_t ) ( * a ) [ 3 ]		6167145	0					
ANR	6167205	CastTarget	zip_uint64_t		6167145	0					
ANR	6167206	ArrayIndexing	( * a ) [ 3 ]		6167145	1					
ANR	6167207	UnaryOperationExpression	* a		6167145	0					
ANR	6167208	UnaryOperator	*		6167145	0					
ANR	6167209	Identifier	a		6167145	1					
ANR	6167210	PrimaryExpression	3		6167145	1					
ANR	6167211	PrimaryExpression	8		6167145	1					
ANR	6167212	ArrayIndexing	( * a ) [ 2 ]		6167145	1					
ANR	6167213	UnaryOperationExpression	* a		6167145	0					
ANR	6167214	UnaryOperator	*		6167145	0					
ANR	6167215	Identifier	a		6167145	1					
ANR	6167216	PrimaryExpression	2		6167145	1					
ANR	6167217	PrimaryExpression	8		6167145	1					
ANR	6167218	ArrayIndexing	( * a ) [ 1 ]		6167145	1					
ANR	6167219	UnaryOperationExpression	* a		6167145	0					
ANR	6167220	UnaryOperator	*		6167145	0					
ANR	6167221	Identifier	a		6167145	1					
ANR	6167222	PrimaryExpression	1		6167145	1					
ANR	6167223	PrimaryExpression	8		6167145	1					
ANR	6167224	ArrayIndexing	( * a ) [ 0 ]		6167145	1					
ANR	6167225	UnaryOperationExpression	* a		6167145	0					
ANR	6167226	UnaryOperator	*		6167145	0					
ANR	6167227	Identifier	a		6167145	1					
ANR	6167228	PrimaryExpression	0		6167145	1					
ANR	6167229	ExpressionStatement	* a += 4	884:4:22014:22021	6167145	4	True				
ANR	6167230	AssignmentExpression	* a += 4		6167145	0		+=			
ANR	6167231	UnaryOperationExpression	* a		6167145	0					
ANR	6167232	UnaryOperator	*		6167145	0					
ANR	6167233	Identifier	a		6167145	1					
ANR	6167234	PrimaryExpression	4		6167145	1					
ANR	6167235	ReturnStatement	return x + ( y << 32 ) ;	886:4:22028:22044	6167145	5	True				
ANR	6167236	AdditiveExpression	x + ( y << 32 )		6167145	0		+			
ANR	6167237	Identifier	x		6167145	0					
ANR	6167238	ShiftExpression	y << 32		6167145	1		<<			
ANR	6167239	Identifier	y		6167145	0					
ANR	6167240	PrimaryExpression	32		6167145	1					
ANR	6167241	ReturnType	zip_uint64_t		6167145	1					
ANR	6167242	Identifier	_zip_read8		6167145	2					
ANR	6167243	ParameterList	const zip_uint8_t * * a		6167145	3					
ANR	6167244	Parameter	const zip_uint8_t * * a	877:11:21800:21820	6167145	0	True				
ANR	6167245	ParameterType	const zip_uint8_t * *		6167145	0					
ANR	6167246	Identifier	a		6167145	1					
ANR	6167247	CFGEntryNode	ENTRY		6167145		True				
ANR	6167248	CFGExitNode	EXIT		6167145		True				
ANR	6167249	Symbol	a		6167145						
ANR	6167250	Symbol	x		6167145						
ANR	6167251	Symbol	y		6167145						
ANR	6167252	Symbol	* * a		6167145						
ANR	6167253	Symbol	* a		6167145						
ANR	6167254	Function	_zip_read_data	891:0:22052:22846							
ANR	6167255	FunctionDef	"_zip_read_data (const zip_uint8_t * * buf , FILE * fp , size_t len , int nulp , struct zip_error * error)"		6167254	0					
ANR	6167256	CompoundStatement		893:0:22163:22846	6167254	0					
ANR	6167257	IdentifierDeclStatement	zip_uint8_t * r ;	894:4:22169:22183	6167254	0	True				
ANR	6167258	IdentifierDecl	* r		6167254	0					
ANR	6167259	IdentifierDeclType	zip_uint8_t *		6167254	0					
ANR	6167260	Identifier	r		6167254	1					
ANR	6167261	IfStatement	if ( len == 0 && nulp == 0 )		6167254	1					
ANR	6167262	Condition	len == 0 && nulp == 0	896:8:22194:22214	6167254	0	True				
ANR	6167263	AndExpression	len == 0 && nulp == 0		6167254	0		&&			
ANR	6167264	EqualityExpression	len == 0		6167254	0		==			
ANR	6167265	Identifier	len		6167254	0					
ANR	6167266	PrimaryExpression	0		6167254	1					
ANR	6167267	EqualityExpression	nulp == 0		6167254	1		==			
ANR	6167268	Identifier	nulp		6167254	0					
ANR	6167269	PrimaryExpression	0		6167254	1					
ANR	6167270	ReturnStatement	return NULL ;	897:1:22218:22229	6167254	1	True				
ANR	6167271	Identifier	NULL		6167254	0					
ANR	6167272	ExpressionStatement	r = ( zip_uint8_t * ) malloc ( nulp ? len + 1 : len )	899:4:22236:22281	6167254	2	True				
ANR	6167273	AssignmentExpression	r = ( zip_uint8_t * ) malloc ( nulp ? len + 1 : len )		6167254	0		=			
ANR	6167274	Identifier	r		6167254	0					
ANR	6167275	CastExpression	( zip_uint8_t * ) malloc ( nulp ? len + 1 : len )		6167254	1					
ANR	6167276	CastTarget	zip_uint8_t *		6167254	0					
ANR	6167277	CallExpression	malloc ( nulp ? len + 1 : len )		6167254	1					
ANR	6167278	Callee	malloc		6167254	0					
ANR	6167279	Identifier	malloc		6167254	0					
ANR	6167280	ArgumentList	nulp ? len + 1 : len		6167254	1					
ANR	6167281	Argument	nulp ? len + 1 : len		6167254	0					
ANR	6167282	ConditionalExpression	nulp ? len + 1 : len		6167254	0					
ANR	6167283	Condition	nulp		6167254	0					
ANR	6167284	Identifier	nulp		6167254	0					
ANR	6167285	AdditiveExpression	len + 1		6167254	1		+			
ANR	6167286	Identifier	len		6167254	0					
ANR	6167287	PrimaryExpression	1		6167254	1					
ANR	6167288	Identifier	len		6167254	2					
ANR	6167289	IfStatement	if ( ! r )		6167254	3					
ANR	6167290	Condition	! r	900:8:22291:22292	6167254	0	True				
ANR	6167291	UnaryOperationExpression	! r		6167254	0					
ANR	6167292	UnaryOperator	!		6167254	0					
ANR	6167293	Identifier	r		6167254	1					
ANR	6167294	CompoundStatement		8:12:131:131	6167254	1					
ANR	6167295	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"	901:1:22298:22337	6167254	0	True				
ANR	6167296	CallExpression	"_zip_error_set ( error , ZIP_ER_MEMORY , 0 )"		6167254	0					
ANR	6167297	Callee	_zip_error_set		6167254	0					
ANR	6167298	Identifier	_zip_error_set		6167254	0					
ANR	6167299	ArgumentList	error		6167254	1					
ANR	6167300	Argument	error		6167254	0					
ANR	6167301	Identifier	error		6167254	0					
ANR	6167302	Argument	ZIP_ER_MEMORY		6167254	1					
ANR	6167303	Identifier	ZIP_ER_MEMORY		6167254	0					
ANR	6167304	Argument	0		6167254	2					
ANR	6167305	PrimaryExpression	0		6167254	0					
ANR	6167306	ReturnStatement	return NULL ;	902:1:22340:22351	6167254	1	True				
ANR	6167307	Identifier	NULL		6167254	0					
ANR	6167308	IfStatement	if ( buf )		6167254	4					
ANR	6167309	Condition	buf	905:8:22368:22370	6167254	0	True				
ANR	6167310	Identifier	buf		6167254	0					
ANR	6167311	CompoundStatement		13:13:209:209	6167254	1					
ANR	6167312	ExpressionStatement	"memcpy ( r , * buf , len )"	906:1:22376:22396	6167254	0	True				
ANR	6167313	CallExpression	"memcpy ( r , * buf , len )"		6167254	0					
ANR	6167314	Callee	memcpy		6167254	0					
ANR	6167315	Identifier	memcpy		6167254	0					
ANR	6167316	ArgumentList	r		6167254	1					
ANR	6167317	Argument	r		6167254	0					
ANR	6167318	Identifier	r		6167254	0					
ANR	6167319	Argument	* buf		6167254	1					
ANR	6167320	UnaryOperationExpression	* buf		6167254	0					
ANR	6167321	UnaryOperator	*		6167254	0					
ANR	6167322	Identifier	buf		6167254	1					
ANR	6167323	Argument	len		6167254	2					
ANR	6167324	Identifier	len		6167254	0					
ANR	6167325	ExpressionStatement	* buf += len	907:1:22399:22410	6167254	1	True				
ANR	6167326	AssignmentExpression	* buf += len		6167254	0		+=			
ANR	6167327	UnaryOperationExpression	* buf		6167254	0					
ANR	6167328	UnaryOperator	*		6167254	0					
ANR	6167329	Identifier	buf		6167254	1					
ANR	6167330	Identifier	len		6167254	1					
ANR	6167331	ElseStatement	else		6167254	0					
ANR	6167332	CompoundStatement		17:9:263:263	6167254	0					
ANR	6167333	IfStatement	"if ( fread ( r , 1 , len , fp ) < len )"		6167254	0					
ANR	6167334	Condition	"fread ( r , 1 , len , fp ) < len"	910:5:22434:22457	6167254	0	True				
ANR	6167335	RelationalExpression	"fread ( r , 1 , len , fp ) < len"		6167254	0		<			
ANR	6167336	CallExpression	"fread ( r , 1 , len , fp )"		6167254	0					
ANR	6167337	Callee	fread		6167254	0					
ANR	6167338	Identifier	fread		6167254	0					
ANR	6167339	ArgumentList	r		6167254	1					
ANR	6167340	Argument	r		6167254	0					
ANR	6167341	Identifier	r		6167254	0					
ANR	6167342	Argument	1		6167254	1					
ANR	6167343	PrimaryExpression	1		6167254	0					
ANR	6167344	Argument	len		6167254	2					
ANR	6167345	Identifier	len		6167254	0					
ANR	6167346	Argument	fp		6167254	3					
ANR	6167347	Identifier	fp		6167254	0					
ANR	6167348	Identifier	len		6167254	1					
ANR	6167349	CompoundStatement		18:31:296:296	6167254	1					
ANR	6167350	ExpressionStatement	free ( r )	911:5:22467:22474	6167254	0	True				
ANR	6167351	CallExpression	free ( r )		6167254	0					
ANR	6167352	Callee	free		6167254	0					
ANR	6167353	Identifier	free		6167254	0					
ANR	6167354	ArgumentList	r		6167254	1					
ANR	6167355	Argument	r		6167254	0					
ANR	6167356	Identifier	r		6167254	0					
ANR	6167357	IfStatement	if ( ferror ( fp ) )		6167254	1					
ANR	6167358	Condition	ferror ( fp )	912:16:22492:22501	6167254	0	True				
ANR	6167359	CallExpression	ferror ( fp )		6167254	0					
ANR	6167360	Callee	ferror		6167254	0					
ANR	6167361	Identifier	ferror		6167254	0					
ANR	6167362	ArgumentList	fp		6167254	1					
ANR	6167363	Argument	fp		6167254	0					
ANR	6167364	Identifier	fp		6167254	0					
ANR	6167365	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	913:16:22520:22561	6167254	1	True				
ANR	6167366	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6167254	0					
ANR	6167367	Callee	_zip_error_set		6167254	0					
ANR	6167368	Identifier	_zip_error_set		6167254	0					
ANR	6167369	ArgumentList	error		6167254	1					
ANR	6167370	Argument	error		6167254	0					
ANR	6167371	Identifier	error		6167254	0					
ANR	6167372	Argument	ZIP_ER_READ		6167254	1					
ANR	6167373	Identifier	ZIP_ER_READ		6167254	0					
ANR	6167374	Argument	errno		6167254	2					
ANR	6167375	Identifier	errno		6167254	0					
ANR	6167376	ElseStatement	else		6167254	0					
ANR	6167377	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"	915:16:22596:22635	6167254	0	True				
ANR	6167378	CallExpression	"_zip_error_set ( error , ZIP_ER_INCONS , 0 )"		6167254	0					
ANR	6167379	Callee	_zip_error_set		6167254	0					
ANR	6167380	Identifier	_zip_error_set		6167254	0					
ANR	6167381	ArgumentList	error		6167254	1					
ANR	6167382	Argument	error		6167254	0					
ANR	6167383	Identifier	error		6167254	0					
ANR	6167384	Argument	ZIP_ER_INCONS		6167254	1					
ANR	6167385	Identifier	ZIP_ER_INCONS		6167254	0					
ANR	6167386	Argument	0		6167254	2					
ANR	6167387	PrimaryExpression	0		6167254	0					
ANR	6167388	ReturnStatement	return NULL ;	916:5:22642:22653	6167254	2	True				
ANR	6167389	Identifier	NULL		6167254	0					
ANR	6167390	IfStatement	if ( nulp )		6167254	5					
ANR	6167391	Condition	nulp	920:8:22673:22676	6167254	0	True				
ANR	6167392	Identifier	nulp		6167254	0					
ANR	6167393	CompoundStatement		29:1:518:532	6167254	1					
ANR	6167394	IdentifierDeclStatement	zip_uint8_t * o ;	921:1:22682:22696	6167254	0	True				
ANR	6167395	IdentifierDecl	* o		6167254	0					
ANR	6167396	IdentifierDeclType	zip_uint8_t *		6167254	0					
ANR	6167397	Identifier	o		6167254	1					
ANR	6167398	ExpressionStatement	r [ len ] = 0	923:1:22755:22765	6167254	1	True				
ANR	6167399	AssignmentExpression	r [ len ] = 0		6167254	0		=			
ANR	6167400	ArrayIndexing	r [ len ]		6167254	0					
ANR	6167401	Identifier	r		6167254	0					
ANR	6167402	Identifier	len		6167254	1					
ANR	6167403	PrimaryExpression	0		6167254	1					
ANR	6167404	ForStatement	for ( o = r ; o < r + len ; o ++ )		6167254	2					
ANR	6167405	ForInit	o = r ;	924:6:22773:22776	6167254	0	True				
ANR	6167406	AssignmentExpression	o = r		6167254	0		=			
ANR	6167407	Identifier	o		6167254	0					
ANR	6167408	Identifier	r		6167254	1					
ANR	6167409	Condition	o < r + len	924:11:22778:22784	6167254	1	True				
ANR	6167410	RelationalExpression	o < r + len		6167254	0		<			
ANR	6167411	Identifier	o		6167254	0					
ANR	6167412	AdditiveExpression	r + len		6167254	1		+			
ANR	6167413	Identifier	r		6167254	0					
ANR	6167414	Identifier	len		6167254	1					
ANR	6167415	PostIncDecOperationExpression	o ++	924:20:22787:22789	6167254	2	True				
ANR	6167416	Identifier	o		6167254	0					
ANR	6167417	IncDec	++		6167254	1					
ANR	6167418	IfStatement	if ( * o == '\\0' )		6167254	3					
ANR	6167419	Condition	* o == '\\0'	925:9:22801:22810	6167254	0	True				
ANR	6167420	EqualityExpression	* o == '\\0'		6167254	0		==			
ANR	6167421	UnaryOperationExpression	* o		6167254	0					
ANR	6167422	UnaryOperator	*		6167254	0					
ANR	6167423	Identifier	o		6167254	1					
ANR	6167424	PrimaryExpression	'\\0'		6167254	1					
ANR	6167425	ExpressionStatement	* o = ' '	926:2:22815:22823	6167254	1	True				
ANR	6167426	AssignmentExpression	* o = ' '		6167254	0		=			
ANR	6167427	UnaryOperationExpression	* o		6167254	0					
ANR	6167428	UnaryOperator	*		6167254	0					
ANR	6167429	Identifier	o		6167254	1					
ANR	6167430	PrimaryExpression	' '		6167254	1					
ANR	6167431	ReturnStatement	return r ;	929:4:22836:22844	6167254	6	True				
ANR	6167432	Identifier	r		6167254	0					
ANR	6167433	ReturnType	zip_uint8_t *		6167254	1					
ANR	6167434	Identifier	_zip_read_data		6167254	2					
ANR	6167435	ParameterList	"const zip_uint8_t * * buf , FILE * fp , size_t len , int nulp , struct zip_error * error"		6167254	3					
ANR	6167436	Parameter	const zip_uint8_t * * buf	892:15:22081:22103	6167254	0	True				
ANR	6167437	ParameterType	const zip_uint8_t * *		6167254	0					
ANR	6167438	Identifier	buf		6167254	1					
ANR	6167439	Parameter	FILE * fp	892:40:22106:22113	6167254	1	True				
ANR	6167440	ParameterType	FILE *		6167254	0					
ANR	6167441	Identifier	fp		6167254	1					
ANR	6167442	Parameter	size_t len	892:50:22116:22125	6167254	2	True				
ANR	6167443	ParameterType	size_t		6167254	0					
ANR	6167444	Identifier	len		6167254	1					
ANR	6167445	Parameter	int nulp	892:62:22128:22135	6167254	3	True				
ANR	6167446	ParameterType	int		6167254	0					
ANR	6167447	Identifier	nulp		6167254	1					
ANR	6167448	Parameter	struct zip_error * error	892:72:22138:22160	6167254	4	True				
ANR	6167449	ParameterType	struct zip_error *		6167254	0					
ANR	6167450	Identifier	error		6167254	1					
ANR	6167451	CFGEntryNode	ENTRY		6167254		True				
ANR	6167452	CFGExitNode	EXIT		6167254		True				
ANR	6167453	Symbol	malloc		6167254						
ANR	6167454	Symbol	* buf		6167254						
ANR	6167455	Symbol	errno		6167254						
ANR	6167456	Symbol	NULL		6167254						
ANR	6167457	Symbol	fp		6167254						
ANR	6167458	Symbol	error		6167254						
ANR	6167459	Symbol	ZIP_ER_READ		6167254						
ANR	6167460	Symbol	fread		6167254						
ANR	6167461	Symbol	o		6167254						
ANR	6167462	Symbol	ferror		6167254						
ANR	6167463	Symbol	buf		6167254						
ANR	6167464	Symbol	r		6167254						
ANR	6167465	Symbol	len		6167254						
ANR	6167466	Symbol	nulp		6167254						
ANR	6167467	Symbol	* o		6167254						
ANR	6167468	Symbol	ZIP_ER_INCONS		6167254						
ANR	6167469	Symbol	ZIP_ER_MEMORY		6167254						
ANR	6167470	Symbol	* r		6167254						
ANR	6167471	Symbol	* len		6167254						
ANR	6167472	Function	_zip_read_string	934:0:22852:23204							
ANR	6167473	FunctionDef	"_zip_read_string (const zip_uint8_t * * buf , FILE * fp , zip_uint16_t len , int nulp , struct zip_error * error)"		6167472	0					
ANR	6167474	CompoundStatement		936:0:22984:23204	6167472	0					
ANR	6167475	IdentifierDeclStatement	zip_uint8_t * raw ;	937:4:22990:23006	6167472	0	True				
ANR	6167476	IdentifierDecl	* raw		6167472	0					
ANR	6167477	IdentifierDeclType	zip_uint8_t *		6167472	0					
ANR	6167478	Identifier	raw		6167472	1					
ANR	6167479	IdentifierDeclStatement	struct zip_string * s ;	938:4:23012:23032	6167472	1	True				
ANR	6167480	IdentifierDecl	* s		6167472	0					
ANR	6167481	IdentifierDeclType	struct zip_string *		6167472	0					
ANR	6167482	Identifier	s		6167472	1					
ANR	6167483	IfStatement	"if ( ( raw = _zip_read_data ( buf , fp , len , nulp , error ) ) == NULL )"		6167472	2					
ANR	6167484	Condition	"( raw = _zip_read_data ( buf , fp , len , nulp , error ) ) == NULL"	940:8:23043:23097	6167472	0	True				
ANR	6167485	EqualityExpression	"( raw = _zip_read_data ( buf , fp , len , nulp , error ) ) == NULL"		6167472	0		==			
ANR	6167486	AssignmentExpression	"raw = _zip_read_data ( buf , fp , len , nulp , error )"		6167472	0		=			
ANR	6167487	Identifier	raw		6167472	0					
ANR	6167488	CallExpression	"_zip_read_data ( buf , fp , len , nulp , error )"		6167472	1					
ANR	6167489	Callee	_zip_read_data		6167472	0					
ANR	6167490	Identifier	_zip_read_data		6167472	0					
ANR	6167491	ArgumentList	buf		6167472	1					
ANR	6167492	Argument	buf		6167472	0					
ANR	6167493	Identifier	buf		6167472	0					
ANR	6167494	Argument	fp		6167472	1					
ANR	6167495	Identifier	fp		6167472	0					
ANR	6167496	Argument	len		6167472	2					
ANR	6167497	Identifier	len		6167472	0					
ANR	6167498	Argument	nulp		6167472	3					
ANR	6167499	Identifier	nulp		6167472	0					
ANR	6167500	Argument	error		6167472	4					
ANR	6167501	Identifier	error		6167472	0					
ANR	6167502	Identifier	NULL		6167472	1					
ANR	6167503	ReturnStatement	return NULL ;	941:1:23101:23112	6167472	1	True				
ANR	6167504	Identifier	NULL		6167472	0					
ANR	6167505	ExpressionStatement	"s = _zip_string_new ( raw , len , ZIP_FL_ENC_GUESS , error )"	943:4:23119:23173	6167472	3	True				
ANR	6167506	AssignmentExpression	"s = _zip_string_new ( raw , len , ZIP_FL_ENC_GUESS , error )"		6167472	0		=			
ANR	6167507	Identifier	s		6167472	0					
ANR	6167508	CallExpression	"_zip_string_new ( raw , len , ZIP_FL_ENC_GUESS , error )"		6167472	1					
ANR	6167509	Callee	_zip_string_new		6167472	0					
ANR	6167510	Identifier	_zip_string_new		6167472	0					
ANR	6167511	ArgumentList	raw		6167472	1					
ANR	6167512	Argument	raw		6167472	0					
ANR	6167513	Identifier	raw		6167472	0					
ANR	6167514	Argument	len		6167472	1					
ANR	6167515	Identifier	len		6167472	0					
ANR	6167516	Argument	ZIP_FL_ENC_GUESS		6167472	2					
ANR	6167517	Identifier	ZIP_FL_ENC_GUESS		6167472	0					
ANR	6167518	Argument	error		6167472	3					
ANR	6167519	Identifier	error		6167472	0					
ANR	6167520	ExpressionStatement	free ( raw )	944:4:23179:23188	6167472	4	True				
ANR	6167521	CallExpression	free ( raw )		6167472	0					
ANR	6167522	Callee	free		6167472	0					
ANR	6167523	Identifier	free		6167472	0					
ANR	6167524	ArgumentList	raw		6167472	1					
ANR	6167525	Argument	raw		6167472	0					
ANR	6167526	Identifier	raw		6167472	0					
ANR	6167527	ReturnStatement	return s ;	945:4:23194:23202	6167472	5	True				
ANR	6167528	Identifier	s		6167472	0					
ANR	6167529	ReturnType	static struct zip_string *		6167472	1					
ANR	6167530	Identifier	_zip_read_string		6167472	2					
ANR	6167531	ParameterList	"const zip_uint8_t * * buf , FILE * fp , zip_uint16_t len , int nulp , struct zip_error * error"		6167472	3					
ANR	6167532	Parameter	const zip_uint8_t * * buf	935:17:22896:22918	6167472	0	True				
ANR	6167533	ParameterType	const zip_uint8_t * *		6167472	0					
ANR	6167534	Identifier	buf		6167472	1					
ANR	6167535	Parameter	FILE * fp	935:42:22921:22928	6167472	1	True				
ANR	6167536	ParameterType	FILE *		6167472	0					
ANR	6167537	Identifier	fp		6167472	1					
ANR	6167538	Parameter	zip_uint16_t len	935:52:22931:22946	6167472	2	True				
ANR	6167539	ParameterType	zip_uint16_t		6167472	0					
ANR	6167540	Identifier	len		6167472	1					
ANR	6167541	Parameter	int nulp	935:70:22949:22956	6167472	3	True				
ANR	6167542	ParameterType	int		6167472	0					
ANR	6167543	Identifier	nulp		6167472	1					
ANR	6167544	Parameter	struct zip_error * error	935:80:22959:22981	6167472	4	True				
ANR	6167545	ParameterType	struct zip_error *		6167472	0					
ANR	6167546	Identifier	error		6167472	1					
ANR	6167547	CFGEntryNode	ENTRY		6167472		True				
ANR	6167548	CFGExitNode	EXIT		6167472		True				
ANR	6167549	Symbol	buf		6167472						
ANR	6167550	Symbol	s		6167472						
ANR	6167551	Symbol	NULL		6167472						
ANR	6167552	Symbol	_zip_read_data		6167472						
ANR	6167553	Symbol	len		6167472						
ANR	6167554	Symbol	nulp		6167472						
ANR	6167555	Symbol	raw		6167472						
ANR	6167556	Symbol	fp		6167472						
ANR	6167557	Symbol	ZIP_FL_ENC_GUESS		6167472						
ANR	6167558	Symbol	_zip_string_new		6167472						
ANR	6167559	Symbol	error		6167472						
ANR	6167560	Function	_zip_poke4	950:0:23210:23374							
ANR	6167561	FunctionDef	"_zip_poke4 (zip_uint32_t i , zip_uint8_t * * p)"		6167560	0					
ANR	6167562	CompoundStatement		952:0:23259:23374	6167560	0					
ANR	6167563	ExpressionStatement	* ( ( * p ) ++ ) = i & 0xff	953:4:23265:23283	6167560	0	True				
ANR	6167564	AssignmentExpression	* ( ( * p ) ++ ) = i & 0xff		6167560	0		=			
ANR	6167565	UnaryOperationExpression	* ( ( * p ) ++ )		6167560	0					
ANR	6167566	UnaryOperator	*		6167560	0					
ANR	6167567	PostIncDecOperationExpression	( * p ) ++		6167560	1					
ANR	6167568	UnaryOperationExpression	* p		6167560	0					
ANR	6167569	UnaryOperator	*		6167560	0					
ANR	6167570	Identifier	p		6167560	1					
ANR	6167571	IncDec	++		6167560	1					
ANR	6167572	BitAndExpression	i & 0xff		6167560	1		&			
ANR	6167573	Identifier	i		6167560	0					
ANR	6167574	PrimaryExpression	0xff		6167560	1					
ANR	6167575	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff	954:4:23289:23312	6167560	1	True				
ANR	6167576	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff		6167560	0		=			
ANR	6167577	UnaryOperationExpression	* ( ( * p ) ++ )		6167560	0					
ANR	6167578	UnaryOperator	*		6167560	0					
ANR	6167579	PostIncDecOperationExpression	( * p ) ++		6167560	1					
ANR	6167580	UnaryOperationExpression	* p		6167560	0					
ANR	6167581	UnaryOperator	*		6167560	0					
ANR	6167582	Identifier	p		6167560	1					
ANR	6167583	IncDec	++		6167560	1					
ANR	6167584	BitAndExpression	( i >> 8 ) & 0xff		6167560	1		&			
ANR	6167585	ShiftExpression	i >> 8		6167560	0		>>			
ANR	6167586	Identifier	i		6167560	0					
ANR	6167587	PrimaryExpression	8		6167560	1					
ANR	6167588	PrimaryExpression	0xff		6167560	1					
ANR	6167589	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff	955:4:23318:23342	6167560	2	True				
ANR	6167590	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff		6167560	0		=			
ANR	6167591	UnaryOperationExpression	* ( ( * p ) ++ )		6167560	0					
ANR	6167592	UnaryOperator	*		6167560	0					
ANR	6167593	PostIncDecOperationExpression	( * p ) ++		6167560	1					
ANR	6167594	UnaryOperationExpression	* p		6167560	0					
ANR	6167595	UnaryOperator	*		6167560	0					
ANR	6167596	Identifier	p		6167560	1					
ANR	6167597	IncDec	++		6167560	1					
ANR	6167598	BitAndExpression	( i >> 16 ) & 0xff		6167560	1		&			
ANR	6167599	ShiftExpression	i >> 16		6167560	0		>>			
ANR	6167600	Identifier	i		6167560	0					
ANR	6167601	PrimaryExpression	16		6167560	1					
ANR	6167602	PrimaryExpression	0xff		6167560	1					
ANR	6167603	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff	956:4:23348:23372	6167560	3	True				
ANR	6167604	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff		6167560	0		=			
ANR	6167605	UnaryOperationExpression	* ( ( * p ) ++ )		6167560	0					
ANR	6167606	UnaryOperator	*		6167560	0					
ANR	6167607	PostIncDecOperationExpression	( * p ) ++		6167560	1					
ANR	6167608	UnaryOperationExpression	* p		6167560	0					
ANR	6167609	UnaryOperator	*		6167560	0					
ANR	6167610	Identifier	p		6167560	1					
ANR	6167611	IncDec	++		6167560	1					
ANR	6167612	BitAndExpression	( i >> 24 ) & 0xff		6167560	1		&			
ANR	6167613	ShiftExpression	i >> 24		6167560	0		>>			
ANR	6167614	Identifier	i		6167560	0					
ANR	6167615	PrimaryExpression	24		6167560	1					
ANR	6167616	PrimaryExpression	0xff		6167560	1					
ANR	6167617	ReturnType	void		6167560	1					
ANR	6167618	Identifier	_zip_poke4		6167560	2					
ANR	6167619	ParameterList	"zip_uint32_t i , zip_uint8_t * * p"		6167560	3					
ANR	6167620	Parameter	zip_uint32_t i	951:11:23226:23239	6167560	0	True				
ANR	6167621	ParameterType	zip_uint32_t		6167560	0					
ANR	6167622	Identifier	i		6167560	1					
ANR	6167623	Parameter	zip_uint8_t * * p	951:27:23242:23256	6167560	1	True				
ANR	6167624	ParameterType	zip_uint8_t * *		6167560	0					
ANR	6167625	Identifier	p		6167560	1					
ANR	6167626	CFGEntryNode	ENTRY		6167560		True				
ANR	6167627	CFGExitNode	EXIT		6167560		True				
ANR	6167628	Symbol	p		6167560						
ANR	6167629	Symbol	* ( ( * p ) ++ )		6167560						
ANR	6167630	Symbol	i		6167560						
ANR	6167631	Symbol	* p		6167560						
ANR	6167632	Function	_zip_poke8	961:0:23380:23664							
ANR	6167633	FunctionDef	"_zip_poke8 (zip_uint64_t i , zip_uint8_t * * p)"		6167632	0					
ANR	6167634	CompoundStatement		963:0:23429:23664	6167632	0					
ANR	6167635	ExpressionStatement	* ( ( * p ) ++ ) = i & 0xff	964:4:23435:23453	6167632	0	True				
ANR	6167636	AssignmentExpression	* ( ( * p ) ++ ) = i & 0xff		6167632	0		=			
ANR	6167637	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167638	UnaryOperator	*		6167632	0					
ANR	6167639	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167640	UnaryOperationExpression	* p		6167632	0					
ANR	6167641	UnaryOperator	*		6167632	0					
ANR	6167642	Identifier	p		6167632	1					
ANR	6167643	IncDec	++		6167632	1					
ANR	6167644	BitAndExpression	i & 0xff		6167632	1		&			
ANR	6167645	Identifier	i		6167632	0					
ANR	6167646	PrimaryExpression	0xff		6167632	1					
ANR	6167647	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff	965:4:23459:23482	6167632	1	True				
ANR	6167648	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 8 ) & 0xff		6167632	0		=			
ANR	6167649	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167650	UnaryOperator	*		6167632	0					
ANR	6167651	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167652	UnaryOperationExpression	* p		6167632	0					
ANR	6167653	UnaryOperator	*		6167632	0					
ANR	6167654	Identifier	p		6167632	1					
ANR	6167655	IncDec	++		6167632	1					
ANR	6167656	BitAndExpression	( i >> 8 ) & 0xff		6167632	1		&			
ANR	6167657	ShiftExpression	i >> 8		6167632	0		>>			
ANR	6167658	Identifier	i		6167632	0					
ANR	6167659	PrimaryExpression	8		6167632	1					
ANR	6167660	PrimaryExpression	0xff		6167632	1					
ANR	6167661	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff	966:4:23488:23512	6167632	2	True				
ANR	6167662	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 16 ) & 0xff		6167632	0		=			
ANR	6167663	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167664	UnaryOperator	*		6167632	0					
ANR	6167665	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167666	UnaryOperationExpression	* p		6167632	0					
ANR	6167667	UnaryOperator	*		6167632	0					
ANR	6167668	Identifier	p		6167632	1					
ANR	6167669	IncDec	++		6167632	1					
ANR	6167670	BitAndExpression	( i >> 16 ) & 0xff		6167632	1		&			
ANR	6167671	ShiftExpression	i >> 16		6167632	0		>>			
ANR	6167672	Identifier	i		6167632	0					
ANR	6167673	PrimaryExpression	16		6167632	1					
ANR	6167674	PrimaryExpression	0xff		6167632	1					
ANR	6167675	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff	967:4:23518:23542	6167632	3	True				
ANR	6167676	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 24 ) & 0xff		6167632	0		=			
ANR	6167677	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167678	UnaryOperator	*		6167632	0					
ANR	6167679	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167680	UnaryOperationExpression	* p		6167632	0					
ANR	6167681	UnaryOperator	*		6167632	0					
ANR	6167682	Identifier	p		6167632	1					
ANR	6167683	IncDec	++		6167632	1					
ANR	6167684	BitAndExpression	( i >> 24 ) & 0xff		6167632	1		&			
ANR	6167685	ShiftExpression	i >> 24		6167632	0		>>			
ANR	6167686	Identifier	i		6167632	0					
ANR	6167687	PrimaryExpression	24		6167632	1					
ANR	6167688	PrimaryExpression	0xff		6167632	1					
ANR	6167689	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 32 ) & 0xff	968:4:23548:23572	6167632	4	True				
ANR	6167690	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 32 ) & 0xff		6167632	0		=			
ANR	6167691	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167692	UnaryOperator	*		6167632	0					
ANR	6167693	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167694	UnaryOperationExpression	* p		6167632	0					
ANR	6167695	UnaryOperator	*		6167632	0					
ANR	6167696	Identifier	p		6167632	1					
ANR	6167697	IncDec	++		6167632	1					
ANR	6167698	BitAndExpression	( i >> 32 ) & 0xff		6167632	1		&			
ANR	6167699	ShiftExpression	i >> 32		6167632	0		>>			
ANR	6167700	Identifier	i		6167632	0					
ANR	6167701	PrimaryExpression	32		6167632	1					
ANR	6167702	PrimaryExpression	0xff		6167632	1					
ANR	6167703	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 40 ) & 0xff	969:4:23578:23602	6167632	5	True				
ANR	6167704	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 40 ) & 0xff		6167632	0		=			
ANR	6167705	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167706	UnaryOperator	*		6167632	0					
ANR	6167707	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167708	UnaryOperationExpression	* p		6167632	0					
ANR	6167709	UnaryOperator	*		6167632	0					
ANR	6167710	Identifier	p		6167632	1					
ANR	6167711	IncDec	++		6167632	1					
ANR	6167712	BitAndExpression	( i >> 40 ) & 0xff		6167632	1		&			
ANR	6167713	ShiftExpression	i >> 40		6167632	0		>>			
ANR	6167714	Identifier	i		6167632	0					
ANR	6167715	PrimaryExpression	40		6167632	1					
ANR	6167716	PrimaryExpression	0xff		6167632	1					
ANR	6167717	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 48 ) & 0xff	970:4:23608:23632	6167632	6	True				
ANR	6167718	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 48 ) & 0xff		6167632	0		=			
ANR	6167719	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167720	UnaryOperator	*		6167632	0					
ANR	6167721	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167722	UnaryOperationExpression	* p		6167632	0					
ANR	6167723	UnaryOperator	*		6167632	0					
ANR	6167724	Identifier	p		6167632	1					
ANR	6167725	IncDec	++		6167632	1					
ANR	6167726	BitAndExpression	( i >> 48 ) & 0xff		6167632	1		&			
ANR	6167727	ShiftExpression	i >> 48		6167632	0		>>			
ANR	6167728	Identifier	i		6167632	0					
ANR	6167729	PrimaryExpression	48		6167632	1					
ANR	6167730	PrimaryExpression	0xff		6167632	1					
ANR	6167731	ExpressionStatement	* ( ( * p ) ++ ) = ( i >> 56 ) & 0xff	971:4:23638:23662	6167632	7	True				
ANR	6167732	AssignmentExpression	* ( ( * p ) ++ ) = ( i >> 56 ) & 0xff		6167632	0		=			
ANR	6167733	UnaryOperationExpression	* ( ( * p ) ++ )		6167632	0					
ANR	6167734	UnaryOperator	*		6167632	0					
ANR	6167735	PostIncDecOperationExpression	( * p ) ++		6167632	1					
ANR	6167736	UnaryOperationExpression	* p		6167632	0					
ANR	6167737	UnaryOperator	*		6167632	0					
ANR	6167738	Identifier	p		6167632	1					
ANR	6167739	IncDec	++		6167632	1					
ANR	6167740	BitAndExpression	( i >> 56 ) & 0xff		6167632	1		&			
ANR	6167741	ShiftExpression	i >> 56		6167632	0		>>			
ANR	6167742	Identifier	i		6167632	0					
ANR	6167743	PrimaryExpression	56		6167632	1					
ANR	6167744	PrimaryExpression	0xff		6167632	1					
ANR	6167745	ReturnType	void		6167632	1					
ANR	6167746	Identifier	_zip_poke8		6167632	2					
ANR	6167747	ParameterList	"zip_uint64_t i , zip_uint8_t * * p"		6167632	3					
ANR	6167748	Parameter	zip_uint64_t i	962:11:23396:23409	6167632	0	True				
ANR	6167749	ParameterType	zip_uint64_t		6167632	0					
ANR	6167750	Identifier	i		6167632	1					
ANR	6167751	Parameter	zip_uint8_t * * p	962:27:23412:23426	6167632	1	True				
ANR	6167752	ParameterType	zip_uint8_t * *		6167632	0					
ANR	6167753	Identifier	p		6167632	1					
ANR	6167754	CFGEntryNode	ENTRY		6167632		True				
ANR	6167755	CFGExitNode	EXIT		6167632		True				
ANR	6167756	Symbol	p		6167632						
ANR	6167757	Symbol	* ( ( * p ) ++ )		6167632						
ANR	6167758	Symbol	i		6167632						
ANR	6167759	Symbol	* p		6167632						
ANR	6167760	Function	_zip_write2	976:0:23670:23777							
ANR	6167761	FunctionDef	"_zip_write2 (zip_uint16_t i , FILE * fp)"		6167760	0					
ANR	6167762	CompoundStatement		978:0:23713:23777	6167760	0					
ANR	6167763	ExpressionStatement	"putc ( i & 0xff , fp )"	979:4:23719:23735	6167760	0	True				
ANR	6167764	CallExpression	"putc ( i & 0xff , fp )"		6167760	0					
ANR	6167765	Callee	putc		6167760	0					
ANR	6167766	Identifier	putc		6167760	0					
ANR	6167767	ArgumentList	i & 0xff		6167760	1					
ANR	6167768	Argument	i & 0xff		6167760	0					
ANR	6167769	BitAndExpression	i & 0xff		6167760	0		&			
ANR	6167770	Identifier	i		6167760	0					
ANR	6167771	PrimaryExpression	0xff		6167760	1					
ANR	6167772	Argument	fp		6167760	1					
ANR	6167773	Identifier	fp		6167760	0					
ANR	6167774	ExpressionStatement	"putc ( ( i >> 8 ) & 0xff , fp )"	980:4:23741:23762	6167760	1	True				
ANR	6167775	CallExpression	"putc ( ( i >> 8 ) & 0xff , fp )"		6167760	0					
ANR	6167776	Callee	putc		6167760	0					
ANR	6167777	Identifier	putc		6167760	0					
ANR	6167778	ArgumentList	( i >> 8 ) & 0xff		6167760	1					
ANR	6167779	Argument	( i >> 8 ) & 0xff		6167760	0					
ANR	6167780	BitAndExpression	( i >> 8 ) & 0xff		6167760	0		&			
ANR	6167781	ShiftExpression	i >> 8		6167760	0		>>			
ANR	6167782	Identifier	i		6167760	0					
ANR	6167783	PrimaryExpression	8		6167760	1					
ANR	6167784	PrimaryExpression	0xff		6167760	1					
ANR	6167785	Argument	fp		6167760	1					
ANR	6167786	Identifier	fp		6167760	0					
ANR	6167787	ReturnStatement	return ;	982:4:23769:23775	6167760	2	True				
ANR	6167788	ReturnType	void		6167760	1					
ANR	6167789	Identifier	_zip_write2		6167760	2					
ANR	6167790	ParameterList	"zip_uint16_t i , FILE * fp"		6167760	3					
ANR	6167791	Parameter	zip_uint16_t i	977:12:23687:23700	6167760	0	True				
ANR	6167792	ParameterType	zip_uint16_t		6167760	0					
ANR	6167793	Identifier	i		6167760	1					
ANR	6167794	Parameter	FILE * fp	977:28:23703:23710	6167760	1	True				
ANR	6167795	ParameterType	FILE *		6167760	0					
ANR	6167796	Identifier	fp		6167760	1					
ANR	6167797	CFGEntryNode	ENTRY		6167760		True				
ANR	6167798	CFGExitNode	EXIT		6167760		True				
ANR	6167799	Symbol	i		6167760						
ANR	6167800	Symbol	fp		6167760						
ANR	6167801	Function	_zip_write4	987:0:23783:23950							
ANR	6167802	FunctionDef	"_zip_write4 (zip_uint32_t i , FILE * fp)"		6167801	0					
ANR	6167803	CompoundStatement		989:0:23826:23950	6167801	0					
ANR	6167804	ExpressionStatement	"putc ( i & 0xff , fp )"	990:4:23832:23848	6167801	0	True				
ANR	6167805	CallExpression	"putc ( i & 0xff , fp )"		6167801	0					
ANR	6167806	Callee	putc		6167801	0					
ANR	6167807	Identifier	putc		6167801	0					
ANR	6167808	ArgumentList	i & 0xff		6167801	1					
ANR	6167809	Argument	i & 0xff		6167801	0					
ANR	6167810	BitAndExpression	i & 0xff		6167801	0		&			
ANR	6167811	Identifier	i		6167801	0					
ANR	6167812	PrimaryExpression	0xff		6167801	1					
ANR	6167813	Argument	fp		6167801	1					
ANR	6167814	Identifier	fp		6167801	0					
ANR	6167815	ExpressionStatement	"putc ( ( i >> 8 ) & 0xff , fp )"	991:4:23854:23875	6167801	1	True				
ANR	6167816	CallExpression	"putc ( ( i >> 8 ) & 0xff , fp )"		6167801	0					
ANR	6167817	Callee	putc		6167801	0					
ANR	6167818	Identifier	putc		6167801	0					
ANR	6167819	ArgumentList	( i >> 8 ) & 0xff		6167801	1					
ANR	6167820	Argument	( i >> 8 ) & 0xff		6167801	0					
ANR	6167821	BitAndExpression	( i >> 8 ) & 0xff		6167801	0		&			
ANR	6167822	ShiftExpression	i >> 8		6167801	0		>>			
ANR	6167823	Identifier	i		6167801	0					
ANR	6167824	PrimaryExpression	8		6167801	1					
ANR	6167825	PrimaryExpression	0xff		6167801	1					
ANR	6167826	Argument	fp		6167801	1					
ANR	6167827	Identifier	fp		6167801	0					
ANR	6167828	ExpressionStatement	"putc ( ( i >> 16 ) & 0xff , fp )"	992:4:23881:23903	6167801	2	True				
ANR	6167829	CallExpression	"putc ( ( i >> 16 ) & 0xff , fp )"		6167801	0					
ANR	6167830	Callee	putc		6167801	0					
ANR	6167831	Identifier	putc		6167801	0					
ANR	6167832	ArgumentList	( i >> 16 ) & 0xff		6167801	1					
ANR	6167833	Argument	( i >> 16 ) & 0xff		6167801	0					
ANR	6167834	BitAndExpression	( i >> 16 ) & 0xff		6167801	0		&			
ANR	6167835	ShiftExpression	i >> 16		6167801	0		>>			
ANR	6167836	Identifier	i		6167801	0					
ANR	6167837	PrimaryExpression	16		6167801	1					
ANR	6167838	PrimaryExpression	0xff		6167801	1					
ANR	6167839	Argument	fp		6167801	1					
ANR	6167840	Identifier	fp		6167801	0					
ANR	6167841	ExpressionStatement	"putc ( ( i >> 24 ) & 0xff , fp )"	993:4:23909:23931	6167801	3	True				
ANR	6167842	CallExpression	"putc ( ( i >> 24 ) & 0xff , fp )"		6167801	0					
ANR	6167843	Callee	putc		6167801	0					
ANR	6167844	Identifier	putc		6167801	0					
ANR	6167845	ArgumentList	( i >> 24 ) & 0xff		6167801	1					
ANR	6167846	Argument	( i >> 24 ) & 0xff		6167801	0					
ANR	6167847	BitAndExpression	( i >> 24 ) & 0xff		6167801	0		&			
ANR	6167848	ShiftExpression	i >> 24		6167801	0		>>			
ANR	6167849	Identifier	i		6167801	0					
ANR	6167850	PrimaryExpression	24		6167801	1					
ANR	6167851	PrimaryExpression	0xff		6167801	1					
ANR	6167852	Argument	fp		6167801	1					
ANR	6167853	Identifier	fp		6167801	0					
ANR	6167854	ReturnStatement	return ;	995:4:23942:23948	6167801	4	True				
ANR	6167855	ReturnType	void		6167801	1					
ANR	6167856	Identifier	_zip_write4		6167801	2					
ANR	6167857	ParameterList	"zip_uint32_t i , FILE * fp"		6167801	3					
ANR	6167858	Parameter	zip_uint32_t i	988:12:23800:23813	6167801	0	True				
ANR	6167859	ParameterType	zip_uint32_t		6167801	0					
ANR	6167860	Identifier	i		6167801	1					
ANR	6167861	Parameter	FILE * fp	988:28:23816:23823	6167801	1	True				
ANR	6167862	ParameterType	FILE *		6167801	0					
ANR	6167863	Identifier	fp		6167801	1					
ANR	6167864	CFGEntryNode	ENTRY		6167801		True				
ANR	6167865	CFGExitNode	EXIT		6167801		True				
ANR	6167866	Symbol	i		6167801						
ANR	6167867	Symbol	fp		6167801						
ANR	6167868	Function	_zip_write8	1000:0:23956:24235							
ANR	6167869	FunctionDef	"_zip_write8 (zip_uint64_t i , FILE * fp)"		6167868	0					
ANR	6167870	CompoundStatement		1002:0:23999:24235	6167868	0					
ANR	6167871	ExpressionStatement	"putc ( i & 0xff , fp )"	1003:4:24005:24021	6167868	0	True				
ANR	6167872	CallExpression	"putc ( i & 0xff , fp )"		6167868	0					
ANR	6167873	Callee	putc		6167868	0					
ANR	6167874	Identifier	putc		6167868	0					
ANR	6167875	ArgumentList	i & 0xff		6167868	1					
ANR	6167876	Argument	i & 0xff		6167868	0					
ANR	6167877	BitAndExpression	i & 0xff		6167868	0		&			
ANR	6167878	Identifier	i		6167868	0					
ANR	6167879	PrimaryExpression	0xff		6167868	1					
ANR	6167880	Argument	fp		6167868	1					
ANR	6167881	Identifier	fp		6167868	0					
ANR	6167882	ExpressionStatement	"putc ( ( i >> 8 ) & 0xff , fp )"	1004:4:24027:24048	6167868	1	True				
ANR	6167883	CallExpression	"putc ( ( i >> 8 ) & 0xff , fp )"		6167868	0					
ANR	6167884	Callee	putc		6167868	0					
ANR	6167885	Identifier	putc		6167868	0					
ANR	6167886	ArgumentList	( i >> 8 ) & 0xff		6167868	1					
ANR	6167887	Argument	( i >> 8 ) & 0xff		6167868	0					
ANR	6167888	BitAndExpression	( i >> 8 ) & 0xff		6167868	0		&			
ANR	6167889	ShiftExpression	i >> 8		6167868	0		>>			
ANR	6167890	Identifier	i		6167868	0					
ANR	6167891	PrimaryExpression	8		6167868	1					
ANR	6167892	PrimaryExpression	0xff		6167868	1					
ANR	6167893	Argument	fp		6167868	1					
ANR	6167894	Identifier	fp		6167868	0					
ANR	6167895	ExpressionStatement	"putc ( ( i >> 16 ) & 0xff , fp )"	1005:4:24054:24076	6167868	2	True				
ANR	6167896	CallExpression	"putc ( ( i >> 16 ) & 0xff , fp )"		6167868	0					
ANR	6167897	Callee	putc		6167868	0					
ANR	6167898	Identifier	putc		6167868	0					
ANR	6167899	ArgumentList	( i >> 16 ) & 0xff		6167868	1					
ANR	6167900	Argument	( i >> 16 ) & 0xff		6167868	0					
ANR	6167901	BitAndExpression	( i >> 16 ) & 0xff		6167868	0		&			
ANR	6167902	ShiftExpression	i >> 16		6167868	0		>>			
ANR	6167903	Identifier	i		6167868	0					
ANR	6167904	PrimaryExpression	16		6167868	1					
ANR	6167905	PrimaryExpression	0xff		6167868	1					
ANR	6167906	Argument	fp		6167868	1					
ANR	6167907	Identifier	fp		6167868	0					
ANR	6167908	ExpressionStatement	"putc ( ( i >> 24 ) & 0xff , fp )"	1006:4:24082:24104	6167868	3	True				
ANR	6167909	CallExpression	"putc ( ( i >> 24 ) & 0xff , fp )"		6167868	0					
ANR	6167910	Callee	putc		6167868	0					
ANR	6167911	Identifier	putc		6167868	0					
ANR	6167912	ArgumentList	( i >> 24 ) & 0xff		6167868	1					
ANR	6167913	Argument	( i >> 24 ) & 0xff		6167868	0					
ANR	6167914	BitAndExpression	( i >> 24 ) & 0xff		6167868	0		&			
ANR	6167915	ShiftExpression	i >> 24		6167868	0		>>			
ANR	6167916	Identifier	i		6167868	0					
ANR	6167917	PrimaryExpression	24		6167868	1					
ANR	6167918	PrimaryExpression	0xff		6167868	1					
ANR	6167919	Argument	fp		6167868	1					
ANR	6167920	Identifier	fp		6167868	0					
ANR	6167921	ExpressionStatement	"putc ( ( i >> 32 ) & 0xff , fp )"	1007:4:24110:24132	6167868	4	True				
ANR	6167922	CallExpression	"putc ( ( i >> 32 ) & 0xff , fp )"		6167868	0					
ANR	6167923	Callee	putc		6167868	0					
ANR	6167924	Identifier	putc		6167868	0					
ANR	6167925	ArgumentList	( i >> 32 ) & 0xff		6167868	1					
ANR	6167926	Argument	( i >> 32 ) & 0xff		6167868	0					
ANR	6167927	BitAndExpression	( i >> 32 ) & 0xff		6167868	0		&			
ANR	6167928	ShiftExpression	i >> 32		6167868	0		>>			
ANR	6167929	Identifier	i		6167868	0					
ANR	6167930	PrimaryExpression	32		6167868	1					
ANR	6167931	PrimaryExpression	0xff		6167868	1					
ANR	6167932	Argument	fp		6167868	1					
ANR	6167933	Identifier	fp		6167868	0					
ANR	6167934	ExpressionStatement	"putc ( ( i >> 40 ) & 0xff , fp )"	1008:4:24138:24160	6167868	5	True				
ANR	6167935	CallExpression	"putc ( ( i >> 40 ) & 0xff , fp )"		6167868	0					
ANR	6167936	Callee	putc		6167868	0					
ANR	6167937	Identifier	putc		6167868	0					
ANR	6167938	ArgumentList	( i >> 40 ) & 0xff		6167868	1					
ANR	6167939	Argument	( i >> 40 ) & 0xff		6167868	0					
ANR	6167940	BitAndExpression	( i >> 40 ) & 0xff		6167868	0		&			
ANR	6167941	ShiftExpression	i >> 40		6167868	0		>>			
ANR	6167942	Identifier	i		6167868	0					
ANR	6167943	PrimaryExpression	40		6167868	1					
ANR	6167944	PrimaryExpression	0xff		6167868	1					
ANR	6167945	Argument	fp		6167868	1					
ANR	6167946	Identifier	fp		6167868	0					
ANR	6167947	ExpressionStatement	"putc ( ( i >> 48 ) & 0xff , fp )"	1009:4:24166:24188	6167868	6	True				
ANR	6167948	CallExpression	"putc ( ( i >> 48 ) & 0xff , fp )"		6167868	0					
ANR	6167949	Callee	putc		6167868	0					
ANR	6167950	Identifier	putc		6167868	0					
ANR	6167951	ArgumentList	( i >> 48 ) & 0xff		6167868	1					
ANR	6167952	Argument	( i >> 48 ) & 0xff		6167868	0					
ANR	6167953	BitAndExpression	( i >> 48 ) & 0xff		6167868	0		&			
ANR	6167954	ShiftExpression	i >> 48		6167868	0		>>			
ANR	6167955	Identifier	i		6167868	0					
ANR	6167956	PrimaryExpression	48		6167868	1					
ANR	6167957	PrimaryExpression	0xff		6167868	1					
ANR	6167958	Argument	fp		6167868	1					
ANR	6167959	Identifier	fp		6167868	0					
ANR	6167960	ExpressionStatement	"putc ( ( i >> 56 ) & 0xff , fp )"	1010:4:24194:24216	6167868	7	True				
ANR	6167961	CallExpression	"putc ( ( i >> 56 ) & 0xff , fp )"		6167868	0					
ANR	6167962	Callee	putc		6167868	0					
ANR	6167963	Identifier	putc		6167868	0					
ANR	6167964	ArgumentList	( i >> 56 ) & 0xff		6167868	1					
ANR	6167965	Argument	( i >> 56 ) & 0xff		6167868	0					
ANR	6167966	BitAndExpression	( i >> 56 ) & 0xff		6167868	0		&			
ANR	6167967	ShiftExpression	i >> 56		6167868	0		>>			
ANR	6167968	Identifier	i		6167868	0					
ANR	6167969	PrimaryExpression	56		6167868	1					
ANR	6167970	PrimaryExpression	0xff		6167868	1					
ANR	6167971	Argument	fp		6167868	1					
ANR	6167972	Identifier	fp		6167868	0					
ANR	6167973	ReturnStatement	return ;	1012:4:24227:24233	6167868	8	True				
ANR	6167974	ReturnType	void		6167868	1					
ANR	6167975	Identifier	_zip_write8		6167868	2					
ANR	6167976	ParameterList	"zip_uint64_t i , FILE * fp"		6167868	3					
ANR	6167977	Parameter	zip_uint64_t i	1001:12:23973:23986	6167868	0	True				
ANR	6167978	ParameterType	zip_uint64_t		6167868	0					
ANR	6167979	Identifier	i		6167868	1					
ANR	6167980	Parameter	FILE * fp	1001:28:23989:23996	6167868	1	True				
ANR	6167981	ParameterType	FILE *		6167868	0					
ANR	6167982	Identifier	fp		6167868	1					
ANR	6167983	CFGEntryNode	ENTRY		6167868		True				
ANR	6167984	CFGExitNode	EXIT		6167868		True				
ANR	6167985	Symbol	i		6167868						
ANR	6167986	Symbol	fp		6167868						
ANR	6167987	Function	_zip_u2d_time	1017:0:24241:24562							
ANR	6167988	FunctionDef	"_zip_u2d_time (time_t time , zip_uint16_t * dtime , zip_uint16_t * ddate)"		6167987	0					
ANR	6167989	CompoundStatement		1019:0:24315:24562	6167987	0					
ANR	6167990	IdentifierDeclStatement	struct tm * tm ;	1020:4:24321:24334	6167987	0	True				
ANR	6167991	IdentifierDecl	* tm		6167987	0					
ANR	6167992	IdentifierDeclType	struct tm *		6167987	0					
ANR	6167993	Identifier	tm		6167987	1					
ANR	6167994	ExpressionStatement	tm = localtime ( & time )	1022:4:24341:24362	6167987	1	True				
ANR	6167995	AssignmentExpression	tm = localtime ( & time )		6167987	0		=			
ANR	6167996	Identifier	tm		6167987	0					
ANR	6167997	CallExpression	localtime ( & time )		6167987	1					
ANR	6167998	Callee	localtime		6167987	0					
ANR	6167999	Identifier	localtime		6167987	0					
ANR	6168000	ArgumentList	& time		6167987	1					
ANR	6168001	Argument	& time		6167987	0					
ANR	6168002	UnaryOperationExpression	& time		6167987	0					
ANR	6168003	UnaryOperator	&		6167987	0					
ANR	6168004	Identifier	time		6167987	1					
ANR	6168005	ExpressionStatement	* ddate = ( zip_uint16_t ) ( ( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday )	1023:4:24368:24457	6167987	2	True				
ANR	6168006	AssignmentExpression	* ddate = ( zip_uint16_t ) ( ( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday )		6167987	0		=			
ANR	6168007	UnaryOperationExpression	* ddate		6167987	0					
ANR	6168008	UnaryOperator	*		6167987	0					
ANR	6168009	Identifier	ddate		6167987	1					
ANR	6168010	CastExpression	( zip_uint16_t ) ( ( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday )		6167987	1					
ANR	6168011	CastTarget	zip_uint16_t		6167987	0					
ANR	6168012	AdditiveExpression	( ( tm -> tm_year + 1900 - 1980 ) << 9 ) + ( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday		6167987	1		+			
ANR	6168013	ShiftExpression	( tm -> tm_year + 1900 - 1980 ) << 9		6167987	0		<<			
ANR	6168014	AdditiveExpression	tm -> tm_year + 1900 - 1980		6167987	0		+			
ANR	6168015	PtrMemberAccess	tm -> tm_year		6167987	0					
ANR	6168016	Identifier	tm		6167987	0					
ANR	6168017	Identifier	tm_year		6167987	1					
ANR	6168018	AdditiveExpression	1900 - 1980		6167987	1		-			
ANR	6168019	PrimaryExpression	1900		6167987	0					
ANR	6168020	PrimaryExpression	1980		6167987	1					
ANR	6168021	PrimaryExpression	9		6167987	1					
ANR	6168022	AdditiveExpression	( ( tm -> tm_mon + 1 ) << 5 ) + tm -> tm_mday		6167987	1		+			
ANR	6168023	ShiftExpression	( tm -> tm_mon + 1 ) << 5		6167987	0		<<			
ANR	6168024	AdditiveExpression	tm -> tm_mon + 1		6167987	0		+			
ANR	6168025	PtrMemberAccess	tm -> tm_mon		6167987	0					
ANR	6168026	Identifier	tm		6167987	0					
ANR	6168027	Identifier	tm_mon		6167987	1					
ANR	6168028	PrimaryExpression	1		6167987	1					
ANR	6168029	PrimaryExpression	5		6167987	1					
ANR	6168030	PtrMemberAccess	tm -> tm_mday		6167987	1					
ANR	6168031	Identifier	tm		6167987	0					
ANR	6168032	Identifier	tm_mday		6167987	1					
ANR	6168033	ExpressionStatement	* dtime = ( zip_uint16_t ) ( ( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 ) )	1024:4:24463:24547	6167987	3	True				
ANR	6168034	AssignmentExpression	* dtime = ( zip_uint16_t ) ( ( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 ) )		6167987	0		=			
ANR	6168035	UnaryOperationExpression	* dtime		6167987	0					
ANR	6168036	UnaryOperator	*		6167987	0					
ANR	6168037	Identifier	dtime		6167987	1					
ANR	6168038	CastExpression	( zip_uint16_t ) ( ( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 ) )		6167987	1					
ANR	6168039	CastTarget	zip_uint16_t		6167987	0					
ANR	6168040	AdditiveExpression	( ( tm -> tm_hour ) << 11 ) + ( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 )		6167987	1		+			
ANR	6168041	ShiftExpression	( tm -> tm_hour ) << 11		6167987	0		<<			
ANR	6168042	PtrMemberAccess	tm -> tm_hour		6167987	0					
ANR	6168043	Identifier	tm		6167987	0					
ANR	6168044	Identifier	tm_hour		6167987	1					
ANR	6168045	PrimaryExpression	11		6167987	1					
ANR	6168046	AdditiveExpression	( ( tm -> tm_min ) << 5 ) + ( ( tm -> tm_sec ) >> 1 )		6167987	1		+			
ANR	6168047	ShiftExpression	( tm -> tm_min ) << 5		6167987	0		<<			
ANR	6168048	PtrMemberAccess	tm -> tm_min		6167987	0					
ANR	6168049	Identifier	tm		6167987	0					
ANR	6168050	Identifier	tm_min		6167987	1					
ANR	6168051	PrimaryExpression	5		6167987	1					
ANR	6168052	ShiftExpression	( tm -> tm_sec ) >> 1		6167987	1		>>			
ANR	6168053	PtrMemberAccess	tm -> tm_sec		6167987	0					
ANR	6168054	Identifier	tm		6167987	0					
ANR	6168055	Identifier	tm_sec		6167987	1					
ANR	6168056	PrimaryExpression	1		6167987	1					
ANR	6168057	ReturnStatement	return ;	1026:4:24554:24560	6167987	4	True				
ANR	6168058	ReturnType	void		6167987	1					
ANR	6168059	Identifier	_zip_u2d_time		6167987	2					
ANR	6168060	ParameterList	"time_t time , zip_uint16_t * dtime , zip_uint16_t * ddate"		6167987	3					
ANR	6168061	Parameter	time_t time	1018:14:24260:24270	6167987	0	True				
ANR	6168062	ParameterType	time_t		6167987	0					
ANR	6168063	Identifier	time		6167987	1					
ANR	6168064	Parameter	zip_uint16_t * dtime	1018:27:24273:24291	6167987	1	True				
ANR	6168065	ParameterType	zip_uint16_t *		6167987	0					
ANR	6168066	Identifier	dtime		6167987	1					
ANR	6168067	Parameter	zip_uint16_t * ddate	1018:48:24294:24312	6167987	2	True				
ANR	6168068	ParameterType	zip_uint16_t *		6167987	0					
ANR	6168069	Identifier	ddate		6167987	1					
ANR	6168070	CFGEntryNode	ENTRY		6167987		True				
ANR	6168071	CFGExitNode	EXIT		6167987		True				
ANR	6168072	Symbol	localtime		6167987						
ANR	6168073	Symbol	ddate		6167987						
ANR	6168074	Symbol	* dtime		6167987						
ANR	6168075	Symbol	dtime		6167987						
ANR	6168076	Symbol	* ddate		6167987						
ANR	6168077	Symbol	tm -> tm_mon		6167987						
ANR	6168078	Symbol	& time		6167987						
ANR	6168079	Symbol	tm -> tm_mday		6167987						
ANR	6168080	Symbol	tm -> tm_min		6167987						
ANR	6168081	Symbol	tm -> tm_sec		6167987						
ANR	6168082	Symbol	tm		6167987						
ANR	6168083	Symbol	tm -> tm_hour		6167987						
ANR	6168084	Symbol	time		6167987						
ANR	6168085	Symbol	tm -> tm_year		6167987						
ANR	6168086	Symbol	* tm		6167987						
