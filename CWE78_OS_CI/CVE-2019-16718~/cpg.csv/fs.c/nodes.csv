command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1504476	File	data/converged/CVE-2019-16718~_radare2/fs.c								
ANR	1504477	DeclStmt									
ANR	1504478	Decl							RFSPlugin	RFSPlugin * [ ]	fs_static_plugins
ANR	1504479	Function	r_fs_new	21:0:347:1045							
ANR	1504480	FunctionDef	r_fs_new ()		1504479	0					
ANR	1504481	CompoundStatement		21:22:369:1045	1504479	0					
ANR	1504482	IdentifierDeclStatement	int i ;	22:1:372:377	1504479	0	True				
ANR	1504483	IdentifierDecl	i		1504479	0					
ANR	1504484	IdentifierDeclType	int		1504479	0					
ANR	1504485	Identifier	i		1504479	1					
ANR	1504486	IdentifierDeclStatement	RFSPlugin * static_plugin ;	23:1:380:404	1504479	1	True				
ANR	1504487	IdentifierDecl	* static_plugin		1504479	0					
ANR	1504488	IdentifierDeclType	RFSPlugin *		1504479	0					
ANR	1504489	Identifier	static_plugin		1504479	1					
ANR	1504490	IdentifierDeclStatement	RFS * fs = R_NEW0 ( RFS ) ;	24:1:407:429	1504479	2	True				
ANR	1504491	IdentifierDecl	* fs = R_NEW0 ( RFS )		1504479	0					
ANR	1504492	IdentifierDeclType	RFS *		1504479	0					
ANR	1504493	Identifier	fs		1504479	1					
ANR	1504494	AssignmentExpression	* fs = R_NEW0 ( RFS )		1504479	2		=			
ANR	1504495	Identifier	fs		1504479	0					
ANR	1504496	CallExpression	R_NEW0 ( RFS )		1504479	1					
ANR	1504497	Callee	R_NEW0		1504479	0					
ANR	1504498	Identifier	R_NEW0		1504479	0					
ANR	1504499	ArgumentList	RFS		1504479	1					
ANR	1504500	Argument	RFS		1504479	0					
ANR	1504501	Identifier	RFS		1504479	0					
ANR	1504502	IfStatement	if ( fs )		1504479	3					
ANR	1504503	Condition	fs	25:5:436:437	1504479	0	True				
ANR	1504504	Identifier	fs		1504479	0					
ANR	1504505	CompoundStatement		5:9:70:70	1504479	1					
ANR	1504506	ExpressionStatement	fs -> view = R_FS_VIEW_NORMAL	26:2:444:471	1504479	0	True				
ANR	1504507	AssignmentExpression	fs -> view = R_FS_VIEW_NORMAL		1504479	0		=			
ANR	1504508	PtrMemberAccess	fs -> view		1504479	0					
ANR	1504509	Identifier	fs		1504479	0					
ANR	1504510	Identifier	view		1504479	1					
ANR	1504511	Identifier	R_FS_VIEW_NORMAL		1504479	1					
ANR	1504512	ExpressionStatement	fs -> roots = r_list_new ( )	27:2:475:500	1504479	1	True				
ANR	1504513	AssignmentExpression	fs -> roots = r_list_new ( )		1504479	0		=			
ANR	1504514	PtrMemberAccess	fs -> roots		1504479	0					
ANR	1504515	Identifier	fs		1504479	0					
ANR	1504516	Identifier	roots		1504479	1					
ANR	1504517	CallExpression	r_list_new ( )		1504479	1					
ANR	1504518	Callee	r_list_new		1504479	0					
ANR	1504519	Identifier	r_list_new		1504479	0					
ANR	1504520	ArgumentList			1504479	1					
ANR	1504521	IfStatement	if ( ! fs -> roots )		1504479	2					
ANR	1504522	Condition	! fs -> roots	28:6:508:517	1504479	0	True				
ANR	1504523	UnaryOperationExpression	! fs -> roots		1504479	0					
ANR	1504524	UnaryOperator	!		1504479	0					
ANR	1504525	PtrMemberAccess	fs -> roots		1504479	1					
ANR	1504526	Identifier	fs		1504479	0					
ANR	1504527	Identifier	roots		1504479	1					
ANR	1504528	CompoundStatement		8:18:150:150	1504479	1					
ANR	1504529	ExpressionStatement	r_fs_free ( fs )	29:3:525:539	1504479	0	True				
ANR	1504530	CallExpression	r_fs_free ( fs )		1504479	0					
ANR	1504531	Callee	r_fs_free		1504479	0					
ANR	1504532	Identifier	r_fs_free		1504479	0					
ANR	1504533	ArgumentList	fs		1504479	1					
ANR	1504534	Argument	fs		1504479	0					
ANR	1504535	Identifier	fs		1504479	0					
ANR	1504536	ReturnStatement	return NULL ;	30:3:544:555	1504479	1	True				
ANR	1504537	Identifier	NULL		1504479	0					
ANR	1504538	ExpressionStatement	fs -> roots -> free = ( RListFree ) r_fs_root_free	32:2:563:607	1504479	3	True				
ANR	1504539	AssignmentExpression	fs -> roots -> free = ( RListFree ) r_fs_root_free		1504479	0		=			
ANR	1504540	PtrMemberAccess	fs -> roots -> free		1504479	0					
ANR	1504541	PtrMemberAccess	fs -> roots		1504479	0					
ANR	1504542	Identifier	fs		1504479	0					
ANR	1504543	Identifier	roots		1504479	1					
ANR	1504544	Identifier	free		1504479	1					
ANR	1504545	CastExpression	( RListFree ) r_fs_root_free		1504479	1					
ANR	1504546	CastTarget	RListFree		1504479	0					
ANR	1504547	Identifier	r_fs_root_free		1504479	1					
ANR	1504548	ExpressionStatement	fs -> plugins = r_list_new ( )	33:2:611:638	1504479	4	True				
ANR	1504549	AssignmentExpression	fs -> plugins = r_list_new ( )		1504479	0		=			
ANR	1504550	PtrMemberAccess	fs -> plugins		1504479	0					
ANR	1504551	Identifier	fs		1504479	0					
ANR	1504552	Identifier	plugins		1504479	1					
ANR	1504553	CallExpression	r_list_new ( )		1504479	1					
ANR	1504554	Callee	r_list_new		1504479	0					
ANR	1504555	Identifier	r_list_new		1504479	0					
ANR	1504556	ArgumentList			1504479	1					
ANR	1504557	IfStatement	if ( ! fs -> plugins )		1504479	5					
ANR	1504558	Condition	! fs -> plugins	34:6:646:657	1504479	0	True				
ANR	1504559	UnaryOperationExpression	! fs -> plugins		1504479	0					
ANR	1504560	UnaryOperator	!		1504479	0					
ANR	1504561	PtrMemberAccess	fs -> plugins		1504479	1					
ANR	1504562	Identifier	fs		1504479	0					
ANR	1504563	Identifier	plugins		1504479	1					
ANR	1504564	CompoundStatement		14:20:290:290	1504479	1					
ANR	1504565	ExpressionStatement	r_fs_free ( fs )	35:3:665:679	1504479	0	True				
ANR	1504566	CallExpression	r_fs_free ( fs )		1504479	0					
ANR	1504567	Callee	r_fs_free		1504479	0					
ANR	1504568	Identifier	r_fs_free		1504479	0					
ANR	1504569	ArgumentList	fs		1504479	1					
ANR	1504570	Argument	fs		1504479	0					
ANR	1504571	Identifier	fs		1504479	0					
ANR	1504572	ReturnStatement	return NULL ;	36:3:684:695	1504479	1	True				
ANR	1504573	Identifier	NULL		1504479	0					
ANR	1504574	ExpressionStatement	fs -> plugins -> free = free	38:2:703:727	1504479	6	True				
ANR	1504575	AssignmentExpression	fs -> plugins -> free = free		1504479	0		=			
ANR	1504576	PtrMemberAccess	fs -> plugins -> free		1504479	0					
ANR	1504577	PtrMemberAccess	fs -> plugins		1504479	0					
ANR	1504578	Identifier	fs		1504479	0					
ANR	1504579	Identifier	plugins		1504479	1					
ANR	1504580	Identifier	free		1504479	1					
ANR	1504581	Identifier	free		1504479	1					
ANR	1504582	ForStatement	for ( i = 0 ; fs_static_plugins [ i ] ; i ++ )		1504479	7					
ANR	1504583	ForInit	i = 0 ;	40:7:781:786	1504479	0	True				
ANR	1504584	AssignmentExpression	i = 0		1504479	0		=			
ANR	1504585	Identifier	i		1504479	0					
ANR	1504586	PrimaryExpression	0		1504479	1					
ANR	1504587	Condition	fs_static_plugins [ i ]	40:14:788:807	1504479	1	True				
ANR	1504588	ArrayIndexing	fs_static_plugins [ i ]		1504479	0					
ANR	1504589	Identifier	fs_static_plugins		1504479	0					
ANR	1504590	Identifier	i		1504479	1					
ANR	1504591	PostIncDecOperationExpression	i ++	40:36:810:812	1504479	2	True				
ANR	1504592	Identifier	i		1504479	0					
ANR	1504593	IncDec	++		1504479	1					
ANR	1504594	CompoundStatement		20:41:445:445	1504479	3					
ANR	1504595	ExpressionStatement	static_plugin = R_NEW ( RFSPlugin )	41:3:820:853	1504479	0	True				
ANR	1504596	AssignmentExpression	static_plugin = R_NEW ( RFSPlugin )		1504479	0		=			
ANR	1504597	Identifier	static_plugin		1504479	0					
ANR	1504598	CallExpression	R_NEW ( RFSPlugin )		1504479	1					
ANR	1504599	Callee	R_NEW		1504479	0					
ANR	1504600	Identifier	R_NEW		1504479	0					
ANR	1504601	ArgumentList	RFSPlugin		1504479	1					
ANR	1504602	Argument	RFSPlugin		1504479	0					
ANR	1504603	Identifier	RFSPlugin		1504479	0					
ANR	1504604	IfStatement	if ( ! static_plugin )		1504479	1					
ANR	1504605	Condition	! static_plugin	42:7:862:875	1504479	0	True				
ANR	1504606	UnaryOperationExpression	! static_plugin		1504479	0					
ANR	1504607	UnaryOperator	!		1504479	0					
ANR	1504608	Identifier	static_plugin		1504479	1					
ANR	1504609	CompoundStatement		22:23:508:508	1504479	1					
ANR	1504610	ContinueStatement	continue ;	43:4:884:892	1504479	0	True				
ANR	1504611	ExpressionStatement	"memcpy ( static_plugin , fs_static_plugins [ i ] , sizeof ( RFSPlugin ) )"	45:3:902:966	1504479	2	True				
ANR	1504612	CallExpression	"memcpy ( static_plugin , fs_static_plugins [ i ] , sizeof ( RFSPlugin ) )"		1504479	0					
ANR	1504613	Callee	memcpy		1504479	0					
ANR	1504614	Identifier	memcpy		1504479	0					
ANR	1504615	ArgumentList	static_plugin		1504479	1					
ANR	1504616	Argument	static_plugin		1504479	0					
ANR	1504617	Identifier	static_plugin		1504479	0					
ANR	1504618	Argument	fs_static_plugins [ i ]		1504479	1					
ANR	1504619	ArrayIndexing	fs_static_plugins [ i ]		1504479	0					
ANR	1504620	Identifier	fs_static_plugins		1504479	0					
ANR	1504621	Identifier	i		1504479	1					
ANR	1504622	Argument	sizeof ( RFSPlugin )		1504479	2					
ANR	1504623	SizeofExpression	sizeof ( RFSPlugin )		1504479	0					
ANR	1504624	Sizeof	sizeof		1504479	0					
ANR	1504625	SizeofOperand	RFSPlugin		1504479	1					
ANR	1504626	ExpressionStatement	"r_fs_add ( fs , static_plugin )"	46:3:971:999	1504479	3	True				
ANR	1504627	CallExpression	"r_fs_add ( fs , static_plugin )"		1504479	0					
ANR	1504628	Callee	r_fs_add		1504479	0					
ANR	1504629	Identifier	r_fs_add		1504479	0					
ANR	1504630	ArgumentList	fs		1504479	1					
ANR	1504631	Argument	fs		1504479	0					
ANR	1504632	Identifier	fs		1504479	0					
ANR	1504633	Argument	static_plugin		1504479	1					
ANR	1504634	Identifier	static_plugin		1504479	0					
ANR	1504635	ExpressionStatement	free ( static_plugin )	47:3:1004:1024	1504479	4	True				
ANR	1504636	CallExpression	free ( static_plugin )		1504479	0					
ANR	1504637	Callee	free		1504479	0					
ANR	1504638	Identifier	free		1504479	0					
ANR	1504639	ArgumentList	static_plugin		1504479	1					
ANR	1504640	Argument	static_plugin		1504479	0					
ANR	1504641	Identifier	static_plugin		1504479	0					
ANR	1504642	ReturnStatement	return fs ;	50:1:1034:1043	1504479	4	True				
ANR	1504643	Identifier	fs		1504479	0					
ANR	1504644	ReturnType	R_API RFS *		1504479	1					
ANR	1504645	Identifier	r_fs_new		1504479	2					
ANR	1504646	ParameterList			1504479	3					
ANR	1504647	CFGEntryNode	ENTRY		1504479		True				
ANR	1504648	CFGExitNode	EXIT		1504479		True				
ANR	1504649	Symbol	fs -> roots		1504479						
ANR	1504650	Symbol	static_plugin		1504479						
ANR	1504651	Symbol	NULL		1504479						
ANR	1504652	Symbol	fs -> roots -> free		1504479						
ANR	1504653	Symbol	fs -> view		1504479						
ANR	1504654	Symbol	fs -> plugins		1504479						
ANR	1504655	Symbol	* fs_static_plugins		1504479						
ANR	1504656	Symbol	R_FS_VIEW_NORMAL		1504479						
ANR	1504657	Symbol	fs -> plugins -> free		1504479						
ANR	1504658	Symbol	i		1504479						
ANR	1504659	Symbol	fs		1504479						
ANR	1504660	Symbol	* fs		1504479						
ANR	1504661	Symbol	r_fs_root_free		1504479						
ANR	1504662	Symbol	R_NEW0		1504479						
ANR	1504663	Symbol	* i		1504479						
ANR	1504664	Symbol	* fs -> roots		1504479						
ANR	1504665	Symbol	* fs -> plugins		1504479						
ANR	1504666	Symbol	* * fs		1504479						
ANR	1504667	Symbol	free		1504479						
ANR	1504668	Symbol	R_NEW		1504479						
ANR	1504669	Symbol	RFSPlugin		1504479						
ANR	1504670	Symbol	RFS		1504479						
ANR	1504671	Symbol	fs_static_plugins		1504479						
ANR	1504672	Symbol	r_list_new		1504479						
ANR	1504673	Function	r_fs_plugin_get	53:0:1048:1290							
ANR	1504674	FunctionDef	"r_fs_plugin_get (RFS * fs , const char * name)"		1504673	0					
ANR	1504675	CompoundStatement		53:60:1108:1290	1504673	0					
ANR	1504676	IdentifierDeclStatement	RListIter * iter ;	54:1:1111:1126	1504673	0	True				
ANR	1504677	IdentifierDecl	* iter		1504673	0					
ANR	1504678	IdentifierDeclType	RListIter *		1504673	0					
ANR	1504679	Identifier	iter		1504673	1					
ANR	1504680	IdentifierDeclStatement	RFSPlugin * p ;	55:1:1129:1141	1504673	1	True				
ANR	1504681	IdentifierDecl	* p		1504673	0					
ANR	1504682	IdentifierDeclType	RFSPlugin *		1504673	0					
ANR	1504683	Identifier	p		1504673	1					
ANR	1504684	IfStatement	if ( ! fs || ! name )		1504673	2					
ANR	1504685	Condition	! fs || ! name	56:5:1148:1159	1504673	0	True				
ANR	1504686	OrExpression	! fs || ! name		1504673	0		||			
ANR	1504687	UnaryOperationExpression	! fs		1504673	0					
ANR	1504688	UnaryOperator	!		1504673	0					
ANR	1504689	Identifier	fs		1504673	1					
ANR	1504690	UnaryOperationExpression	! name		1504673	1					
ANR	1504691	UnaryOperator	!		1504673	0					
ANR	1504692	Identifier	name		1504673	1					
ANR	1504693	CompoundStatement		4:19:53:53	1504673	1					
ANR	1504694	ReturnStatement	return NULL ;	57:2:1166:1177	1504673	0	True				
ANR	1504695	Identifier	NULL		1504673	0					
ANR	1504696	Statement	r_list_foreach	59:1:1183:1196	1504673	3	True				
ANR	1504697	Statement	(	59:16:1198:1198	1504673	4	True				
ANR	1504698	Statement	fs	59:17:1199:1200	1504673	5	True				
ANR	1504699	Statement	->	59:19:1201:1202	1504673	6	True				
ANR	1504700	Statement	plugins	59:21:1203:1209	1504673	7	True				
ANR	1504701	Statement	","	59:28:1210:1210	1504673	8	True				
ANR	1504702	Statement	iter	59:30:1212:1215	1504673	9	True				
ANR	1504703	Statement	","	59:34:1216:1216	1504673	10	True				
ANR	1504704	Statement	p	59:36:1218:1218	1504673	11	True				
ANR	1504705	Statement	)	59:37:1219:1219	1504673	12	True				
ANR	1504706	CompoundStatement		7:39:112:112	1504673	13					
ANR	1504707	IfStatement	"if ( ! strcmp ( p -> name , name ) )"		1504673	0					
ANR	1504708	Condition	"! strcmp ( p -> name , name )"	60:6:1229:1251	1504673	0	True				
ANR	1504709	UnaryOperationExpression	"! strcmp ( p -> name , name )"		1504673	0					
ANR	1504710	UnaryOperator	!		1504673	0					
ANR	1504711	CallExpression	"strcmp ( p -> name , name )"		1504673	1					
ANR	1504712	Callee	strcmp		1504673	0					
ANR	1504713	Identifier	strcmp		1504673	0					
ANR	1504714	ArgumentList	p -> name		1504673	1					
ANR	1504715	Argument	p -> name		1504673	0					
ANR	1504716	PtrMemberAccess	p -> name		1504673	0					
ANR	1504717	Identifier	p		1504673	0					
ANR	1504718	Identifier	name		1504673	1					
ANR	1504719	Argument	name		1504673	1					
ANR	1504720	Identifier	name		1504673	0					
ANR	1504721	CompoundStatement		8:31:145:145	1504673	1					
ANR	1504722	ReturnStatement	return p ;	61:3:1259:1267	1504673	0	True				
ANR	1504723	Identifier	p		1504673	0					
ANR	1504724	ReturnStatement	return NULL ;	64:1:1277:1288	1504673	14	True				
ANR	1504725	Identifier	NULL		1504673	0					
ANR	1504726	ReturnType	R_API RFSPlugin *		1504673	1					
ANR	1504727	Identifier	r_fs_plugin_get		1504673	2					
ANR	1504728	ParameterList	"RFS * fs , const char * name"		1504673	3					
ANR	1504729	Parameter	RFS * fs	53:33:1081:1087	1504673	0	True				
ANR	1504730	ParameterType	RFS *		1504673	0					
ANR	1504731	Identifier	fs		1504673	1					
ANR	1504732	Parameter	const char * name	53:42:1090:1105	1504673	1	True				
ANR	1504733	ParameterType	const char *		1504673	0					
ANR	1504734	Identifier	name		1504673	1					
ANR	1504735	CFGEntryNode	ENTRY		1504673		True				
ANR	1504736	CFGExitNode	EXIT		1504673		True				
ANR	1504737	Symbol	p		1504673						
ANR	1504738	Symbol	strcmp		1504673						
ANR	1504739	Symbol	NULL		1504673						
ANR	1504740	Symbol	name		1504673						
ANR	1504741	Symbol	iter		1504673						
ANR	1504742	Symbol	* p		1504673						
ANR	1504743	Symbol	p -> name		1504673						
ANR	1504744	Symbol	fs		1504673						
ANR	1504745	Function	r_fs_free	67:0:1293:1494							
ANR	1504746	FunctionDef	r_fs_free (RFS * fs)		1504745	0					
ANR	1504747	CompoundStatement		67:30:1323:1494	1504745	0					
ANR	1504748	IfStatement	if ( ! fs )		1504745	0					
ANR	1504749	Condition	! fs	68:5:1330:1332	1504745	0	True				
ANR	1504750	UnaryOperationExpression	! fs		1504745	0					
ANR	1504751	UnaryOperator	!		1504745	0					
ANR	1504752	Identifier	fs		1504745	1					
ANR	1504753	CompoundStatement		2:10:11:11	1504745	1					
ANR	1504754	ReturnStatement	return ;	69:2:1339:1345	1504745	0	True				
ANR	1504755	ExpressionStatement	r_list_free ( fs -> roots )	73:1:1429:1452	1504745	1	True				
ANR	1504756	CallExpression	r_list_free ( fs -> roots )		1504745	0					
ANR	1504757	Callee	r_list_free		1504745	0					
ANR	1504758	Identifier	r_list_free		1504745	0					
ANR	1504759	ArgumentList	fs -> roots		1504745	1					
ANR	1504760	Argument	fs -> roots		1504745	0					
ANR	1504761	PtrMemberAccess	fs -> roots		1504745	0					
ANR	1504762	Identifier	fs		1504745	0					
ANR	1504763	Identifier	roots		1504745	1					
ANR	1504764	ExpressionStatement	r_list_free ( fs -> plugins )	74:1:1455:1480	1504745	2	True				
ANR	1504765	CallExpression	r_list_free ( fs -> plugins )		1504745	0					
ANR	1504766	Callee	r_list_free		1504745	0					
ANR	1504767	Identifier	r_list_free		1504745	0					
ANR	1504768	ArgumentList	fs -> plugins		1504745	1					
ANR	1504769	Argument	fs -> plugins		1504745	0					
ANR	1504770	PtrMemberAccess	fs -> plugins		1504745	0					
ANR	1504771	Identifier	fs		1504745	0					
ANR	1504772	Identifier	plugins		1504745	1					
ANR	1504773	ExpressionStatement	free ( fs )	75:1:1483:1492	1504745	3	True				
ANR	1504774	CallExpression	free ( fs )		1504745	0					
ANR	1504775	Callee	free		1504745	0					
ANR	1504776	Identifier	free		1504745	0					
ANR	1504777	ArgumentList	fs		1504745	1					
ANR	1504778	Argument	fs		1504745	0					
ANR	1504779	Identifier	fs		1504745	0					
ANR	1504780	ReturnType	R_API void		1504745	1					
ANR	1504781	Identifier	r_fs_free		1504745	2					
ANR	1504782	ParameterList	RFS * fs		1504745	3					
ANR	1504783	Parameter	RFS * fs	67:21:1314:1320	1504745	0	True				
ANR	1504784	ParameterType	RFS *		1504745	0					
ANR	1504785	Identifier	fs		1504745	1					
ANR	1504786	CFGEntryNode	ENTRY		1504745		True				
ANR	1504787	CFGExitNode	EXIT		1504745		True				
ANR	1504788	Symbol	* fs		1504745						
ANR	1504789	Symbol	fs -> roots		1504745						
ANR	1504790	Symbol	fs -> plugins		1504745						
ANR	1504791	Symbol	fs		1504745						
ANR	1504792	Function	r_fs_add	79:0:1511:1777							
ANR	1504793	FunctionDef	"r_fs_add (RFS * fs , RFSPlugin * p)"		1504792	0					
ANR	1504794	CompoundStatement		79:43:1554:1777	1504792	0					
ANR	1504795	IfStatement	if ( p && p -> init )		1504792	0					
ANR	1504796	Condition	p && p -> init	81:5:1597:1608	1504792	0	True				
ANR	1504797	AndExpression	p && p -> init		1504792	0		&&			
ANR	1504798	Identifier	p		1504792	0					
ANR	1504799	PtrMemberAccess	p -> init		1504792	1					
ANR	1504800	Identifier	p		1504792	0					
ANR	1504801	Identifier	init		1504792	1					
ANR	1504802	CompoundStatement		3:19:56:56	1504792	1					
ANR	1504803	ExpressionStatement	p -> init ( )	82:2:1615:1625	1504792	0	True				
ANR	1504804	CallExpression	p -> init ( )		1504792	0					
ANR	1504805	Callee	p -> init		1504792	0					
ANR	1504806	PtrMemberAccess	p -> init		1504792	0					
ANR	1504807	Identifier	p		1504792	0					
ANR	1504808	Identifier	init		1504792	1					
ANR	1504809	ArgumentList			1504792	1					
ANR	1504810	IdentifierDeclStatement	RFSPlugin * sp = R_NEW0 ( RFSPlugin ) ;	84:1:1631:1665	1504792	1	True				
ANR	1504811	IdentifierDecl	* sp = R_NEW0 ( RFSPlugin )		1504792	0					
ANR	1504812	IdentifierDeclType	RFSPlugin *		1504792	0					
ANR	1504813	Identifier	sp		1504792	1					
ANR	1504814	AssignmentExpression	* sp = R_NEW0 ( RFSPlugin )		1504792	2		=			
ANR	1504815	Identifier	sp		1504792	0					
ANR	1504816	CallExpression	R_NEW0 ( RFSPlugin )		1504792	1					
ANR	1504817	Callee	R_NEW0		1504792	0					
ANR	1504818	Identifier	R_NEW0		1504792	0					
ANR	1504819	ArgumentList	RFSPlugin		1504792	1					
ANR	1504820	Argument	RFSPlugin		1504792	0					
ANR	1504821	Identifier	RFSPlugin		1504792	0					
ANR	1504822	IfStatement	if ( ! sp )		1504792	2					
ANR	1504823	Condition	! sp	85:5:1672:1674	1504792	0	True				
ANR	1504824	UnaryOperationExpression	! sp		1504792	0					
ANR	1504825	UnaryOperator	!		1504792	0					
ANR	1504826	Identifier	sp		1504792	1					
ANR	1504827	CompoundStatement		7:10:122:122	1504792	1					
ANR	1504828	ReturnStatement	return ;	86:2:1681:1687	1504792	0	True				
ANR	1504829	IfStatement	if ( p )		1504792	3					
ANR	1504830	Condition	p	88:5:1697:1697	1504792	0	True				
ANR	1504831	Identifier	p		1504792	0					
ANR	1504832	CompoundStatement		10:8:145:145	1504792	1					
ANR	1504833	ExpressionStatement	"memcpy ( sp , p , sizeof ( RFSPlugin ) )"	89:2:1704:1738	1504792	0	True				
ANR	1504834	CallExpression	"memcpy ( sp , p , sizeof ( RFSPlugin ) )"		1504792	0					
ANR	1504835	Callee	memcpy		1504792	0					
ANR	1504836	Identifier	memcpy		1504792	0					
ANR	1504837	ArgumentList	sp		1504792	1					
ANR	1504838	Argument	sp		1504792	0					
ANR	1504839	Identifier	sp		1504792	0					
ANR	1504840	Argument	p		1504792	1					
ANR	1504841	Identifier	p		1504792	0					
ANR	1504842	Argument	sizeof ( RFSPlugin )		1504792	2					
ANR	1504843	SizeofExpression	sizeof ( RFSPlugin )		1504792	0					
ANR	1504844	Sizeof	sizeof		1504792	0					
ANR	1504845	SizeofOperand	RFSPlugin		1504792	1					
ANR	1504846	ExpressionStatement	"r_list_append ( fs -> plugins , sp )"	91:1:1744:1775	1504792	4	True				
ANR	1504847	CallExpression	"r_list_append ( fs -> plugins , sp )"		1504792	0					
ANR	1504848	Callee	r_list_append		1504792	0					
ANR	1504849	Identifier	r_list_append		1504792	0					
ANR	1504850	ArgumentList	fs -> plugins		1504792	1					
ANR	1504851	Argument	fs -> plugins		1504792	0					
ANR	1504852	PtrMemberAccess	fs -> plugins		1504792	0					
ANR	1504853	Identifier	fs		1504792	0					
ANR	1504854	Identifier	plugins		1504792	1					
ANR	1504855	Argument	sp		1504792	1					
ANR	1504856	Identifier	sp		1504792	0					
ANR	1504857	ReturnType	R_API void		1504792	1					
ANR	1504858	Identifier	r_fs_add		1504792	2					
ANR	1504859	ParameterList	"RFS * fs , RFSPlugin * p"		1504792	3					
ANR	1504860	Parameter	RFS * fs	79:20:1531:1537	1504792	0	True				
ANR	1504861	ParameterType	RFS *		1504792	0					
ANR	1504862	Identifier	fs		1504792	1					
ANR	1504863	Parameter	RFSPlugin * p	79:29:1540:1551	1504792	1	True				
ANR	1504864	ParameterType	RFSPlugin *		1504792	0					
ANR	1504865	Identifier	p		1504792	1					
ANR	1504866	CFGEntryNode	ENTRY		1504792		True				
ANR	1504867	CFGExitNode	EXIT		1504792		True				
ANR	1504868	Symbol	p		1504792						
ANR	1504869	Symbol	p -> init		1504792						
ANR	1504870	Symbol	* fs		1504792						
ANR	1504871	Symbol	R_NEW0		1504792						
ANR	1504872	Symbol	fs -> plugins		1504792						
ANR	1504873	Symbol	* p		1504792						
ANR	1504874	Symbol	fs		1504792						
ANR	1504875	Symbol	RFSPlugin		1504792						
ANR	1504876	Symbol	sp		1504792						
ANR	1504877	Function	r_fs_del	94:0:1780:1854							
ANR	1504878	FunctionDef	"r_fs_del (RFS * fs , RFSPlugin * p)"		1504877	0					
ANR	1504879	CompoundStatement		94:43:1823:1854	1504877	0					
ANR	1504880	ReturnType	R_API void		1504877	1					
ANR	1504881	Identifier	r_fs_del		1504877	2					
ANR	1504882	ParameterList	"RFS * fs , RFSPlugin * p"		1504877	3					
ANR	1504883	Parameter	RFS * fs	94:20:1800:1806	1504877	0	True				
ANR	1504884	ParameterType	RFS *		1504877	0					
ANR	1504885	Identifier	fs		1504877	1					
ANR	1504886	Parameter	RFSPlugin * p	94:29:1809:1820	1504877	1	True				
ANR	1504887	ParameterType	RFSPlugin *		1504877	0					
ANR	1504888	Identifier	p		1504877	1					
ANR	1504889	CFGEntryNode	ENTRY		1504877		True				
ANR	1504890	CFGExitNode	EXIT		1504877		True				
ANR	1504891	Symbol	p		1504877						
ANR	1504892	Symbol	fs		1504877						
ANR	1504893	Function	r_fs_mount	99:0:1874:3841							
ANR	1504894	FunctionDef	"r_fs_mount (RFS * fs , const char * fstype , const char * path , ut64 delta)"		1504893	0					
ANR	1504895	CompoundStatement		99:85:1959:3841	1504893	0					
ANR	1504896	IdentifierDeclStatement	RFSPlugin * p ;	100:1:1962:1974	1504893	0	True				
ANR	1504897	IdentifierDecl	* p		1504893	0					
ANR	1504898	IdentifierDeclType	RFSPlugin *		1504893	0					
ANR	1504899	Identifier	p		1504893	1					
ANR	1504900	IdentifierDeclStatement	RFSRoot * root ;	101:1:1977:1990	1504893	1	True				
ANR	1504901	IdentifierDecl	* root		1504893	0					
ANR	1504902	IdentifierDeclType	RFSRoot *		1504893	0					
ANR	1504903	Identifier	root		1504893	1					
ANR	1504904	IdentifierDeclStatement	RListIter * iter ;	102:1:1993:2008	1504893	2	True				
ANR	1504905	IdentifierDecl	* iter		1504893	0					
ANR	1504906	IdentifierDeclType	RListIter *		1504893	0					
ANR	1504907	Identifier	iter		1504893	1					
ANR	1504908	IdentifierDeclStatement	char * str ;	103:1:2011:2020	1504893	3	True				
ANR	1504909	IdentifierDecl	* str		1504893	0					
ANR	1504910	IdentifierDeclType	char *		1504893	0					
ANR	1504911	Identifier	str		1504893	1					
ANR	1504912	IdentifierDeclStatement	"int len , lenstr ;"	104:1:2023:2038	1504893	4	True				
ANR	1504913	IdentifierDecl	len		1504893	0					
ANR	1504914	IdentifierDeclType	int		1504893	0					
ANR	1504915	Identifier	len		1504893	1					
ANR	1504916	IdentifierDecl	lenstr		1504893	1					
ANR	1504917	IdentifierDeclType	int		1504893	0					
ANR	1504918	Identifier	lenstr		1504893	1					
ANR	1504919	IdentifierDeclStatement	char * heapFsType = NULL ;	105:1:2041:2064	1504893	5	True				
ANR	1504920	IdentifierDecl	* heapFsType = NULL		1504893	0					
ANR	1504921	IdentifierDeclType	char *		1504893	0					
ANR	1504922	Identifier	heapFsType		1504893	1					
ANR	1504923	AssignmentExpression	* heapFsType = NULL		1504893	2		=			
ANR	1504924	Identifier	NULL		1504893	0					
ANR	1504925	Identifier	NULL		1504893	1					
ANR	1504926	IfStatement	if ( path [ 0 ] != '/' )		1504893	6					
ANR	1504927	Condition	path [ 0 ] != '/'	107:5:2072:2085	1504893	0	True				
ANR	1504928	EqualityExpression	path [ 0 ] != '/'		1504893	0		!=			
ANR	1504929	ArrayIndexing	path [ 0 ]		1504893	0					
ANR	1504930	Identifier	path		1504893	0					
ANR	1504931	PrimaryExpression	0		1504893	1					
ANR	1504932	PrimaryExpression	'/'		1504893	1					
ANR	1504933	CompoundStatement		9:21:128:128	1504893	1					
ANR	1504934	ExpressionStatement	"eprintf ( ""r_fs_mount: invalid mountpoint %s\\n"" , path )"	108:2:2092:2145	1504893	0	True				
ANR	1504935	CallExpression	"eprintf ( ""r_fs_mount: invalid mountpoint %s\\n"" , path )"		1504893	0					
ANR	1504936	Callee	eprintf		1504893	0					
ANR	1504937	Identifier	eprintf		1504893	0					
ANR	1504938	ArgumentList	"""r_fs_mount: invalid mountpoint %s\\n"""		1504893	1					
ANR	1504939	Argument	"""r_fs_mount: invalid mountpoint %s\\n"""		1504893	0					
ANR	1504940	PrimaryExpression	"""r_fs_mount: invalid mountpoint %s\\n"""		1504893	0					
ANR	1504941	Argument	path		1504893	1					
ANR	1504942	Identifier	path		1504893	0					
ANR	1504943	ReturnStatement	return NULL ;	109:2:2149:2160	1504893	1	True				
ANR	1504944	Identifier	NULL		1504893	0					
ANR	1504945	IfStatement	if ( ! fstype || ! * fstype )		1504893	7					
ANR	1504946	Condition	! fstype || ! * fstype	111:5:2170:2188	1504893	0	True				
ANR	1504947	OrExpression	! fstype || ! * fstype		1504893	0		||			
ANR	1504948	UnaryOperationExpression	! fstype		1504893	0					
ANR	1504949	UnaryOperator	!		1504893	0					
ANR	1504950	Identifier	fstype		1504893	1					
ANR	1504951	UnaryOperationExpression	! * fstype		1504893	1					
ANR	1504952	UnaryOperator	!		1504893	0					
ANR	1504953	UnaryOperationExpression	* fstype		1504893	1					
ANR	1504954	UnaryOperator	*		1504893	0					
ANR	1504955	Identifier	fstype		1504893	1					
ANR	1504956	CompoundStatement		13:26:231:231	1504893	1					
ANR	1504957	ExpressionStatement	"heapFsType = r_fs_name ( fs , delta )"	112:2:2195:2229	1504893	0	True				
ANR	1504958	AssignmentExpression	"heapFsType = r_fs_name ( fs , delta )"		1504893	0		=			
ANR	1504959	Identifier	heapFsType		1504893	0					
ANR	1504960	CallExpression	"r_fs_name ( fs , delta )"		1504893	1					
ANR	1504961	Callee	r_fs_name		1504893	0					
ANR	1504962	Identifier	r_fs_name		1504893	0					
ANR	1504963	ArgumentList	fs		1504893	1					
ANR	1504964	Argument	fs		1504893	0					
ANR	1504965	Identifier	fs		1504893	0					
ANR	1504966	Argument	delta		1504893	1					
ANR	1504967	Identifier	delta		1504893	0					
ANR	1504968	ExpressionStatement	fstype = ( const char * ) heapFsType	113:2:2233:2266	1504893	1	True				
ANR	1504969	AssignmentExpression	fstype = ( const char * ) heapFsType		1504893	0		=			
ANR	1504970	Identifier	fstype		1504893	0					
ANR	1504971	CastExpression	( const char * ) heapFsType		1504893	1					
ANR	1504972	CastTarget	const char *		1504893	0					
ANR	1504973	Identifier	heapFsType		1504893	1					
ANR	1504974	IfStatement	"if ( ! ( p = r_fs_plugin_get ( fs , fstype ) ) )"		1504893	8					
ANR	1504975	Condition	"! ( p = r_fs_plugin_get ( fs , fstype ) )"	115:5:2276:2310	1504893	0	True				
ANR	1504976	UnaryOperationExpression	"! ( p = r_fs_plugin_get ( fs , fstype ) )"		1504893	0					
ANR	1504977	UnaryOperator	!		1504893	0					
ANR	1504978	AssignmentExpression	"p = r_fs_plugin_get ( fs , fstype )"		1504893	1		=			
ANR	1504979	Identifier	p		1504893	0					
ANR	1504980	CallExpression	"r_fs_plugin_get ( fs , fstype )"		1504893	1					
ANR	1504981	Callee	r_fs_plugin_get		1504893	0					
ANR	1504982	Identifier	r_fs_plugin_get		1504893	0					
ANR	1504983	ArgumentList	fs		1504893	1					
ANR	1504984	Argument	fs		1504893	0					
ANR	1504985	Identifier	fs		1504893	0					
ANR	1504986	Argument	fstype		1504893	1					
ANR	1504987	Identifier	fstype		1504893	0					
ANR	1504988	CompoundStatement		17:42:353:353	1504893	1					
ANR	1504989	ExpressionStatement	free ( heapFsType )	117:2:2373:2390	1504893	0	True				
ANR	1504990	CallExpression	free ( heapFsType )		1504893	0					
ANR	1504991	Callee	free		1504893	0					
ANR	1504992	Identifier	free		1504893	0					
ANR	1504993	ArgumentList	heapFsType		1504893	1					
ANR	1504994	Argument	heapFsType		1504893	0					
ANR	1504995	Identifier	heapFsType		1504893	0					
ANR	1504996	ReturnStatement	return NULL ;	118:2:2394:2405	1504893	1	True				
ANR	1504997	Identifier	NULL		1504893	0					
ANR	1504998	ExpressionStatement	str = strdup ( path )	120:1:2411:2430	1504893	9	True				
ANR	1504999	AssignmentExpression	str = strdup ( path )		1504893	0		=			
ANR	1505000	Identifier	str		1504893	0					
ANR	1505001	CallExpression	strdup ( path )		1504893	1					
ANR	1505002	Callee	strdup		1504893	0					
ANR	1505003	Identifier	strdup		1504893	0					
ANR	1505004	ArgumentList	path		1504893	1					
ANR	1505005	Argument	path		1504893	0					
ANR	1505006	Identifier	path		1504893	0					
ANR	1505007	IfStatement	if ( ! str )		1504893	10					
ANR	1505008	Condition	! str	121:5:2437:2440	1504893	0	True				
ANR	1505009	UnaryOperationExpression	! str		1504893	0					
ANR	1505010	UnaryOperator	!		1504893	0					
ANR	1505011	Identifier	str		1504893	1					
ANR	1505012	CompoundStatement		23:11:483:483	1504893	1					
ANR	1505013	ExpressionStatement	free ( heapFsType )	122:2:2447:2464	1504893	0	True				
ANR	1505014	CallExpression	free ( heapFsType )		1504893	0					
ANR	1505015	Callee	free		1504893	0					
ANR	1505016	Identifier	free		1504893	0					
ANR	1505017	ArgumentList	heapFsType		1504893	1					
ANR	1505018	Argument	heapFsType		1504893	0					
ANR	1505019	Identifier	heapFsType		1504893	0					
ANR	1505020	ReturnStatement	return NULL ;	123:2:2468:2479	1504893	1	True				
ANR	1505021	Identifier	NULL		1504893	0					
ANR	1505022	ExpressionStatement	r_str_trim_path ( str )	125:1:2485:2506	1504893	11	True				
ANR	1505023	CallExpression	r_str_trim_path ( str )		1504893	0					
ANR	1505024	Callee	r_str_trim_path		1504893	0					
ANR	1505025	Identifier	r_str_trim_path		1504893	0					
ANR	1505026	ArgumentList	str		1504893	1					
ANR	1505027	Argument	str		1504893	0					
ANR	1505028	Identifier	str		1504893	0					
ANR	1505029	IfStatement	"if ( * str && strchr ( str + 1 , '/' ) )"		1504893	12					
ANR	1505030	Condition	"* str && strchr ( str + 1 , '/' )"	126:5:2513:2541	1504893	0	True				
ANR	1505031	AndExpression	"* str && strchr ( str + 1 , '/' )"		1504893	0		&&			
ANR	1505032	UnaryOperationExpression	* str		1504893	0					
ANR	1505033	UnaryOperator	*		1504893	0					
ANR	1505034	Identifier	str		1504893	1					
ANR	1505035	CallExpression	"strchr ( str + 1 , '/' )"		1504893	1					
ANR	1505036	Callee	strchr		1504893	0					
ANR	1505037	Identifier	strchr		1504893	0					
ANR	1505038	ArgumentList	str + 1		1504893	1					
ANR	1505039	Argument	str + 1		1504893	0					
ANR	1505040	AdditiveExpression	str + 1		1504893	0		+			
ANR	1505041	Identifier	str		1504893	0					
ANR	1505042	PrimaryExpression	1		1504893	1					
ANR	1505043	Argument	'/'		1504893	1					
ANR	1505044	PrimaryExpression	'/'		1504893	0					
ANR	1505045	CompoundStatement		28:36:584:584	1504893	1					
ANR	1505046	ExpressionStatement	"eprintf ( ""r_fs_mount: mountpoint must have no subdirectories\\n"" )"	127:2:2548:2612	1504893	0	True				
ANR	1505047	CallExpression	"eprintf ( ""r_fs_mount: mountpoint must have no subdirectories\\n"" )"		1504893	0					
ANR	1505048	Callee	eprintf		1504893	0					
ANR	1505049	Identifier	eprintf		1504893	0					
ANR	1505050	ArgumentList	"""r_fs_mount: mountpoint must have no subdirectories\\n"""		1504893	1					
ANR	1505051	Argument	"""r_fs_mount: mountpoint must have no subdirectories\\n"""		1504893	0					
ANR	1505052	PrimaryExpression	"""r_fs_mount: mountpoint must have no subdirectories\\n"""		1504893	0					
ANR	1505053	ExpressionStatement	free ( heapFsType )	128:2:2616:2633	1504893	1	True				
ANR	1505054	CallExpression	free ( heapFsType )		1504893	0					
ANR	1505055	Callee	free		1504893	0					
ANR	1505056	Identifier	free		1504893	0					
ANR	1505057	ArgumentList	heapFsType		1504893	1					
ANR	1505058	Argument	heapFsType		1504893	0					
ANR	1505059	Identifier	heapFsType		1504893	0					
ANR	1505060	ReturnStatement	return NULL ;	129:2:2637:2648	1504893	2	True				
ANR	1505061	Identifier	NULL		1504893	0					
ANR	1505062	Statement	r_list_foreach	132:1:2682:2695	1504893	13	True				
ANR	1505063	Statement	(	132:16:2697:2697	1504893	14	True				
ANR	1505064	Statement	fs	132:17:2698:2699	1504893	15	True				
ANR	1505065	Statement	->	132:19:2700:2701	1504893	16	True				
ANR	1505066	Statement	roots	132:21:2702:2706	1504893	17	True				
ANR	1505067	Statement	","	132:26:2707:2707	1504893	18	True				
ANR	1505068	Statement	iter	132:28:2709:2712	1504893	19	True				
ANR	1505069	Statement	","	132:32:2713:2713	1504893	20	True				
ANR	1505070	Statement	root	132:34:2715:2718	1504893	21	True				
ANR	1505071	Statement	)	132:38:2719:2719	1504893	22	True				
ANR	1505072	CompoundStatement		34:40:761:761	1504893	23					
ANR	1505073	ExpressionStatement	len = strlen ( root -> path )	133:2:2725:2750	1504893	0	True				
ANR	1505074	AssignmentExpression	len = strlen ( root -> path )		1504893	0		=			
ANR	1505075	Identifier	len		1504893	0					
ANR	1505076	CallExpression	strlen ( root -> path )		1504893	1					
ANR	1505077	Callee	strlen		1504893	0					
ANR	1505078	Identifier	strlen		1504893	0					
ANR	1505079	ArgumentList	root -> path		1504893	1					
ANR	1505080	Argument	root -> path		1504893	0					
ANR	1505081	PtrMemberAccess	root -> path		1504893	0					
ANR	1505082	Identifier	root		1504893	0					
ANR	1505083	Identifier	path		1504893	1					
ANR	1505084	ExpressionStatement	lenstr = strlen ( str )	134:2:2754:2775	1504893	1	True				
ANR	1505085	AssignmentExpression	lenstr = strlen ( str )		1504893	0		=			
ANR	1505086	Identifier	lenstr		1504893	0					
ANR	1505087	CallExpression	strlen ( str )		1504893	1					
ANR	1505088	Callee	strlen		1504893	0					
ANR	1505089	Identifier	strlen		1504893	0					
ANR	1505090	ArgumentList	str		1504893	1					
ANR	1505091	Argument	str		1504893	0					
ANR	1505092	Identifier	str		1504893	0					
ANR	1505093	IfStatement	"if ( ! strncmp ( str , root -> path , len ) )"		1504893	2					
ANR	1505094	Condition	"! strncmp ( str , root -> path , len )"	135:6:2783:2813	1504893	0	True				
ANR	1505095	UnaryOperationExpression	"! strncmp ( str , root -> path , len )"		1504893	0					
ANR	1505096	UnaryOperator	!		1504893	0					
ANR	1505097	CallExpression	"strncmp ( str , root -> path , len )"		1504893	1					
ANR	1505098	Callee	strncmp		1504893	0					
ANR	1505099	Identifier	strncmp		1504893	0					
ANR	1505100	ArgumentList	str		1504893	1					
ANR	1505101	Argument	str		1504893	0					
ANR	1505102	Identifier	str		1504893	0					
ANR	1505103	Argument	root -> path		1504893	1					
ANR	1505104	PtrMemberAccess	root -> path		1504893	0					
ANR	1505105	Identifier	root		1504893	0					
ANR	1505106	Identifier	path		1504893	1					
ANR	1505107	Argument	len		1504893	2					
ANR	1505108	Identifier	len		1504893	0					
ANR	1505109	CompoundStatement		37:39:856:856	1504893	1					
ANR	1505110	IfStatement	if ( len < lenstr && str [ len ] != '/' )		1504893	0					
ANR	1505111	Condition	len < lenstr && str [ len ] != '/'	136:7:2825:2855	1504893	0	True				
ANR	1505112	AndExpression	len < lenstr && str [ len ] != '/'		1504893	0		&&			
ANR	1505113	RelationalExpression	len < lenstr		1504893	0		<			
ANR	1505114	Identifier	len		1504893	0					
ANR	1505115	Identifier	lenstr		1504893	1					
ANR	1505116	EqualityExpression	str [ len ] != '/'		1504893	1		!=			
ANR	1505117	ArrayIndexing	str [ len ]		1504893	0					
ANR	1505118	Identifier	str		1504893	0					
ANR	1505119	Identifier	len		1504893	1					
ANR	1505120	PrimaryExpression	'/'		1504893	1					
ANR	1505121	CompoundStatement		38:40:898:898	1504893	1					
ANR	1505122	ContinueStatement	continue ;	137:4:2864:2872	1504893	0	True				
ANR	1505123	IfStatement	if ( len > lenstr && root -> path [ lenstr ] == '/' )		1504893	1					
ANR	1505124	Condition	len > lenstr && root -> path [ lenstr ] == '/'	139:7:2886:2926	1504893	0	True				
ANR	1505125	AndExpression	len > lenstr && root -> path [ lenstr ] == '/'		1504893	0		&&			
ANR	1505126	RelationalExpression	len > lenstr		1504893	0		>			
ANR	1505127	Identifier	len		1504893	0					
ANR	1505128	Identifier	lenstr		1504893	1					
ANR	1505129	EqualityExpression	root -> path [ lenstr ] == '/'		1504893	1		==			
ANR	1505130	ArrayIndexing	root -> path [ lenstr ]		1504893	0					
ANR	1505131	PtrMemberAccess	root -> path		1504893	0					
ANR	1505132	Identifier	root		1504893	0					
ANR	1505133	Identifier	path		1504893	1					
ANR	1505134	Identifier	lenstr		1504893	1					
ANR	1505135	PrimaryExpression	'/'		1504893	1					
ANR	1505136	CompoundStatement		41:50:969:969	1504893	1					
ANR	1505137	ContinueStatement	continue ;	140:4:2935:2943	1504893	0	True				
ANR	1505138	ExpressionStatement	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"	142:3:2953:2998	1504893	2	True				
ANR	1505139	CallExpression	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"		1504893	0					
ANR	1505140	Callee	eprintf		1504893	0					
ANR	1505141	Identifier	eprintf		1504893	0					
ANR	1505142	ArgumentList	"""r_fs_mount: Invalid mount point\\n"""		1504893	1					
ANR	1505143	Argument	"""r_fs_mount: Invalid mount point\\n"""		1504893	0					
ANR	1505144	PrimaryExpression	"""r_fs_mount: Invalid mount point\\n"""		1504893	0					
ANR	1505145	ExpressionStatement	free ( str )	143:3:3003:3013	1504893	3	True				
ANR	1505146	CallExpression	free ( str )		1504893	0					
ANR	1505147	Callee	free		1504893	0					
ANR	1505148	Identifier	free		1504893	0					
ANR	1505149	ArgumentList	str		1504893	1					
ANR	1505150	Argument	str		1504893	0					
ANR	1505151	Identifier	str		1504893	0					
ANR	1505152	ExpressionStatement	free ( heapFsType )	144:3:3018:3035	1504893	4	True				
ANR	1505153	CallExpression	free ( heapFsType )		1504893	0					
ANR	1505154	Callee	free		1504893	0					
ANR	1505155	Identifier	free		1504893	0					
ANR	1505156	ArgumentList	heapFsType		1504893	1					
ANR	1505157	Argument	heapFsType		1504893	0					
ANR	1505158	Identifier	heapFsType		1504893	0					
ANR	1505159	ReturnStatement	return NULL ;	145:3:3040:3051	1504893	5	True				
ANR	1505160	Identifier	NULL		1504893	0					
ANR	1505161	IdentifierDeclStatement	"RFSFile * file = r_fs_open ( fs , str , false ) ;"	148:1:3061:3103	1504893	24	True				
ANR	1505162	IdentifierDecl	"* file = r_fs_open ( fs , str , false )"		1504893	0					
ANR	1505163	IdentifierDeclType	RFSFile *		1504893	0					
ANR	1505164	Identifier	file		1504893	1					
ANR	1505165	AssignmentExpression	"* file = r_fs_open ( fs , str , false )"		1504893	2		=			
ANR	1505166	Identifier	file		1504893	0					
ANR	1505167	CallExpression	"r_fs_open ( fs , str , false )"		1504893	1					
ANR	1505168	Callee	r_fs_open		1504893	0					
ANR	1505169	Identifier	r_fs_open		1504893	0					
ANR	1505170	ArgumentList	fs		1504893	1					
ANR	1505171	Argument	fs		1504893	0					
ANR	1505172	Identifier	fs		1504893	0					
ANR	1505173	Argument	str		1504893	1					
ANR	1505174	Identifier	str		1504893	0					
ANR	1505175	Argument	false		1504893	2					
ANR	1505176	Identifier	false		1504893	0					
ANR	1505177	IfStatement	if ( file )		1504893	25					
ANR	1505178	Condition	file	149:5:3110:3113	1504893	0	True				
ANR	1505179	Identifier	file		1504893	0					
ANR	1505180	CompoundStatement		51:11:1156:1156	1504893	1					
ANR	1505181	ExpressionStatement	"r_fs_close ( fs , file )"	150:2:3120:3141	1504893	0	True				
ANR	1505182	CallExpression	"r_fs_close ( fs , file )"		1504893	0					
ANR	1505183	Callee	r_fs_close		1504893	0					
ANR	1505184	Identifier	r_fs_close		1504893	0					
ANR	1505185	ArgumentList	fs		1504893	1					
ANR	1505186	Argument	fs		1504893	0					
ANR	1505187	Identifier	fs		1504893	0					
ANR	1505188	Argument	file		1504893	1					
ANR	1505189	Identifier	file		1504893	0					
ANR	1505190	ExpressionStatement	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"	151:2:3145:3190	1504893	1	True				
ANR	1505191	CallExpression	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"		1504893	0					
ANR	1505192	Callee	eprintf		1504893	0					
ANR	1505193	Identifier	eprintf		1504893	0					
ANR	1505194	ArgumentList	"""r_fs_mount: Invalid mount point\\n"""		1504893	1					
ANR	1505195	Argument	"""r_fs_mount: Invalid mount point\\n"""		1504893	0					
ANR	1505196	PrimaryExpression	"""r_fs_mount: Invalid mount point\\n"""		1504893	0					
ANR	1505197	ExpressionStatement	free ( heapFsType )	152:2:3194:3211	1504893	2	True				
ANR	1505198	CallExpression	free ( heapFsType )		1504893	0					
ANR	1505199	Callee	free		1504893	0					
ANR	1505200	Identifier	free		1504893	0					
ANR	1505201	ArgumentList	heapFsType		1504893	1					
ANR	1505202	Argument	heapFsType		1504893	0					
ANR	1505203	Identifier	heapFsType		1504893	0					
ANR	1505204	ExpressionStatement	free ( str )	153:2:3215:3225	1504893	3	True				
ANR	1505205	CallExpression	free ( str )		1504893	0					
ANR	1505206	Callee	free		1504893	0					
ANR	1505207	Identifier	free		1504893	0					
ANR	1505208	ArgumentList	str		1504893	1					
ANR	1505209	Argument	str		1504893	0					
ANR	1505210	Identifier	str		1504893	0					
ANR	1505211	ReturnStatement	return NULL ;	154:2:3229:3240	1504893	4	True				
ANR	1505212	Identifier	NULL		1504893	0					
ANR	1505213	IdentifierDeclStatement	"RList * list = r_fs_dir ( fs , str ) ;"	156:1:3246:3278	1504893	26	True				
ANR	1505214	IdentifierDecl	"* list = r_fs_dir ( fs , str )"		1504893	0					
ANR	1505215	IdentifierDeclType	RList *		1504893	0					
ANR	1505216	Identifier	list		1504893	1					
ANR	1505217	AssignmentExpression	"* list = r_fs_dir ( fs , str )"		1504893	2		=			
ANR	1505218	Identifier	list		1504893	0					
ANR	1505219	CallExpression	"r_fs_dir ( fs , str )"		1504893	1					
ANR	1505220	Callee	r_fs_dir		1504893	0					
ANR	1505221	Identifier	r_fs_dir		1504893	0					
ANR	1505222	ArgumentList	fs		1504893	1					
ANR	1505223	Argument	fs		1504893	0					
ANR	1505224	Identifier	fs		1504893	0					
ANR	1505225	Argument	str		1504893	1					
ANR	1505226	Identifier	str		1504893	0					
ANR	1505227	IfStatement	if ( ! r_list_empty ( list ) )		1504893	27					
ANR	1505228	Condition	! r_list_empty ( list )	157:5:3285:3304	1504893	0	True				
ANR	1505229	UnaryOperationExpression	! r_list_empty ( list )		1504893	0					
ANR	1505230	UnaryOperator	!		1504893	0					
ANR	1505231	CallExpression	r_list_empty ( list )		1504893	1					
ANR	1505232	Callee	r_list_empty		1504893	0					
ANR	1505233	Identifier	r_list_empty		1504893	0					
ANR	1505234	ArgumentList	list		1504893	1					
ANR	1505235	Argument	list		1504893	0					
ANR	1505236	Identifier	list		1504893	0					
ANR	1505237	CompoundStatement		59:27:1347:1347	1504893	1					
ANR	1505238	ExpressionStatement	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"	159:2:3338:3383	1504893	0	True				
ANR	1505239	CallExpression	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"		1504893	0					
ANR	1505240	Callee	eprintf		1504893	0					
ANR	1505241	Identifier	eprintf		1504893	0					
ANR	1505242	ArgumentList	"""r_fs_mount: Invalid mount point\\n"""		1504893	1					
ANR	1505243	Argument	"""r_fs_mount: Invalid mount point\\n"""		1504893	0					
ANR	1505244	PrimaryExpression	"""r_fs_mount: Invalid mount point\\n"""		1504893	0					
ANR	1505245	ExpressionStatement	free ( str )	160:2:3387:3397	1504893	1	True				
ANR	1505246	CallExpression	free ( str )		1504893	0					
ANR	1505247	Callee	free		1504893	0					
ANR	1505248	Identifier	free		1504893	0					
ANR	1505249	ArgumentList	str		1504893	1					
ANR	1505250	Argument	str		1504893	0					
ANR	1505251	Identifier	str		1504893	0					
ANR	1505252	ExpressionStatement	free ( heapFsType )	161:2:3401:3418	1504893	2	True				
ANR	1505253	CallExpression	free ( heapFsType )		1504893	0					
ANR	1505254	Callee	free		1504893	0					
ANR	1505255	Identifier	free		1504893	0					
ANR	1505256	ArgumentList	heapFsType		1504893	1					
ANR	1505257	Argument	heapFsType		1504893	0					
ANR	1505258	Identifier	heapFsType		1504893	0					
ANR	1505259	ReturnStatement	return NULL ;	162:2:3422:3433	1504893	3	True				
ANR	1505260	Identifier	NULL		1504893	0					
ANR	1505261	ExpressionStatement	"root = r_fs_root_new ( str , delta )"	164:1:3439:3472	1504893	28	True				
ANR	1505262	AssignmentExpression	"root = r_fs_root_new ( str , delta )"		1504893	0		=			
ANR	1505263	Identifier	root		1504893	0					
ANR	1505264	CallExpression	"r_fs_root_new ( str , delta )"		1504893	1					
ANR	1505265	Callee	r_fs_root_new		1504893	0					
ANR	1505266	Identifier	r_fs_root_new		1504893	0					
ANR	1505267	ArgumentList	str		1504893	1					
ANR	1505268	Argument	str		1504893	0					
ANR	1505269	Identifier	str		1504893	0					
ANR	1505270	Argument	delta		1504893	1					
ANR	1505271	Identifier	delta		1504893	0					
ANR	1505272	ExpressionStatement	root -> p = p	165:1:3475:3486	1504893	29	True				
ANR	1505273	AssignmentExpression	root -> p = p		1504893	0		=			
ANR	1505274	PtrMemberAccess	root -> p		1504893	0					
ANR	1505275	Identifier	root		1504893	0					
ANR	1505276	Identifier	p		1504893	1					
ANR	1505277	Identifier	p		1504893	1					
ANR	1505278	ExpressionStatement	root -> iob = fs -> iob	167:1:3543:3562	1504893	30	True				
ANR	1505279	AssignmentExpression	root -> iob = fs -> iob		1504893	0		=			
ANR	1505280	PtrMemberAccess	root -> iob		1504893	0					
ANR	1505281	Identifier	root		1504893	0					
ANR	1505282	Identifier	iob		1504893	1					
ANR	1505283	PtrMemberAccess	fs -> iob		1504893	1					
ANR	1505284	Identifier	fs		1504893	0					
ANR	1505285	Identifier	iob		1504893	1					
ANR	1505286	ExpressionStatement	root -> cob = fs -> cob	168:1:3565:3584	1504893	31	True				
ANR	1505287	AssignmentExpression	root -> cob = fs -> cob		1504893	0		=			
ANR	1505288	PtrMemberAccess	root -> cob		1504893	0					
ANR	1505289	Identifier	root		1504893	0					
ANR	1505290	Identifier	cob		1504893	1					
ANR	1505291	PtrMemberAccess	fs -> cob		1504893	1					
ANR	1505292	Identifier	fs		1504893	0					
ANR	1505293	Identifier	cob		1504893	1					
ANR	1505294	IfStatement	if ( ! p -> mount ( root ) )		1504893	32					
ANR	1505295	Condition	! p -> mount ( root )	169:5:3591:3606	1504893	0	True				
ANR	1505296	UnaryOperationExpression	! p -> mount ( root )		1504893	0					
ANR	1505297	UnaryOperator	!		1504893	0					
ANR	1505298	CallExpression	p -> mount ( root )		1504893	1					
ANR	1505299	Callee	p -> mount		1504893	0					
ANR	1505300	PtrMemberAccess	p -> mount		1504893	0					
ANR	1505301	Identifier	p		1504893	0					
ANR	1505302	Identifier	mount		1504893	1					
ANR	1505303	ArgumentList	root		1504893	1					
ANR	1505304	Argument	root		1504893	0					
ANR	1505305	Identifier	root		1504893	0					
ANR	1505306	CompoundStatement		71:23:1649:1649	1504893	1					
ANR	1505307	ExpressionStatement	free ( str )	170:2:3613:3623	1504893	0	True				
ANR	1505308	CallExpression	free ( str )		1504893	0					
ANR	1505309	Callee	free		1504893	0					
ANR	1505310	Identifier	free		1504893	0					
ANR	1505311	ArgumentList	str		1504893	1					
ANR	1505312	Argument	str		1504893	0					
ANR	1505313	Identifier	str		1504893	0					
ANR	1505314	ExpressionStatement	free ( heapFsType )	171:2:3627:3644	1504893	1	True				
ANR	1505315	CallExpression	free ( heapFsType )		1504893	0					
ANR	1505316	Callee	free		1504893	0					
ANR	1505317	Identifier	free		1504893	0					
ANR	1505318	ArgumentList	heapFsType		1504893	1					
ANR	1505319	Argument	heapFsType		1504893	0					
ANR	1505320	Identifier	heapFsType		1504893	0					
ANR	1505321	ExpressionStatement	r_fs_root_free ( root )	172:2:3648:3669	1504893	2	True				
ANR	1505322	CallExpression	r_fs_root_free ( root )		1504893	0					
ANR	1505323	Callee	r_fs_root_free		1504893	0					
ANR	1505324	Identifier	r_fs_root_free		1504893	0					
ANR	1505325	ArgumentList	root		1504893	1					
ANR	1505326	Argument	root		1504893	0					
ANR	1505327	Identifier	root		1504893	0					
ANR	1505328	ReturnStatement	return NULL ;	173:2:3673:3684	1504893	3	True				
ANR	1505329	Identifier	NULL		1504893	0					
ANR	1505330	ExpressionStatement	"r_list_append ( fs -> roots , root )"	175:1:3690:3721	1504893	33	True				
ANR	1505331	CallExpression	"r_list_append ( fs -> roots , root )"		1504893	0					
ANR	1505332	Callee	r_list_append		1504893	0					
ANR	1505333	Identifier	r_list_append		1504893	0					
ANR	1505334	ArgumentList	fs -> roots		1504893	1					
ANR	1505335	Argument	fs -> roots		1504893	0					
ANR	1505336	PtrMemberAccess	fs -> roots		1504893	0					
ANR	1505337	Identifier	fs		1504893	0					
ANR	1505338	Identifier	roots		1504893	1					
ANR	1505339	Argument	root		1504893	1					
ANR	1505340	Identifier	root		1504893	0					
ANR	1505341	Statement	eprintf	176:1:3724:3730	1504893	34	True				
ANR	1505342	Statement	(	176:9:3732:3732	1504893	35	True				
ANR	1505343	Statement	"""Mounted %s on %s at 0x%"""	176:10:3733:3757	1504893	36	True				
ANR	1505344	Statement	PFMT64x	176:36:3759:3765	1504893	37	True				
ANR	1505345	Statement	"""\\n"""	176:44:3767:3770	1504893	38	True				
ANR	1505346	Statement	","	176:48:3771:3771	1504893	39	True				
ANR	1505347	Statement	fstype	176:50:3773:3778	1504893	40	True				
ANR	1505348	Statement	","	176:56:3779:3779	1504893	41	True				
ANR	1505349	Statement	str	176:58:3781:3783	1504893	42	True				
ANR	1505350	Statement	","	176:61:3784:3784	1504893	43	True				
ANR	1505351	Statement	delta	176:63:3786:3790	1504893	44	True				
ANR	1505352	Statement	)	176:68:3791:3791	1504893	45	True				
ANR	1505353	ExpressionStatement		176:69:3792:3792	1504893	46	True				
ANR	1505354	ExpressionStatement	free ( str )	177:1:3795:3805	1504893	47	True				
ANR	1505355	CallExpression	free ( str )		1504893	0					
ANR	1505356	Callee	free		1504893	0					
ANR	1505357	Identifier	free		1504893	0					
ANR	1505358	ArgumentList	str		1504893	1					
ANR	1505359	Argument	str		1504893	0					
ANR	1505360	Identifier	str		1504893	0					
ANR	1505361	ExpressionStatement	free ( heapFsType )	178:1:3808:3825	1504893	48	True				
ANR	1505362	CallExpression	free ( heapFsType )		1504893	0					
ANR	1505363	Callee	free		1504893	0					
ANR	1505364	Identifier	free		1504893	0					
ANR	1505365	ArgumentList	heapFsType		1504893	1					
ANR	1505366	Argument	heapFsType		1504893	0					
ANR	1505367	Identifier	heapFsType		1504893	0					
ANR	1505368	ReturnStatement	return root ;	179:1:3828:3839	1504893	49	True				
ANR	1505369	Identifier	root		1504893	0					
ANR	1505370	ReturnType	R_API RFSRoot *		1504893	1					
ANR	1505371	Identifier	r_fs_mount		1504893	2					
ANR	1505372	ParameterList	"RFS * fs , const char * fstype , const char * path , ut64 delta"		1504893	3					
ANR	1505373	Parameter	RFS * fs	99:26:1900:1906	1504893	0	True				
ANR	1505374	ParameterType	RFS *		1504893	0					
ANR	1505375	Identifier	fs		1504893	1					
ANR	1505376	Parameter	const char * fstype	99:35:1909:1926	1504893	1	True				
ANR	1505377	ParameterType	const char *		1504893	0					
ANR	1505378	Identifier	fstype		1504893	1					
ANR	1505379	Parameter	const char * path	99:55:1929:1944	1504893	2	True				
ANR	1505380	ParameterType	const char *		1504893	0					
ANR	1505381	Identifier	path		1504893	1					
ANR	1505382	Parameter	ut64 delta	99:73:1947:1956	1504893	3	True				
ANR	1505383	ParameterType	ut64		1504893	0					
ANR	1505384	Identifier	delta		1504893	1					
ANR	1505385	CFGEntryNode	ENTRY		1504893		True				
ANR	1505386	CFGExitNode	EXIT		1504893		True				
ANR	1505387	CFGErrorNode	ERROR		1504893		True				
ANR	1505388	Symbol	r_fs_name		1504893						
ANR	1505389	Symbol	fs -> roots		1504893						
ANR	1505390	Symbol	root -> p		1504893						
ANR	1505391	Symbol	delta		1504893						
ANR	1505392	Symbol	strchr		1504893						
ANR	1505393	Symbol	fs -> cob		1504893						
ANR	1505394	Symbol	fs		1504893						
ANR	1505395	Symbol	r_fs_dir		1504893						
ANR	1505396	Symbol	p -> mount		1504893						
ANR	1505397	Symbol	* fs		1504893						
ANR	1505398	Symbol	path		1504893						
ANR	1505399	Symbol	strlen		1504893						
ANR	1505400	Symbol	strncmp		1504893						
ANR	1505401	Symbol	* * root		1504893						
ANR	1505402	Symbol	file		1504893						
ANR	1505403	Symbol	len		1504893						
ANR	1505404	Symbol	root		1504893						
ANR	1505405	Symbol	* str		1504893						
ANR	1505406	Symbol	fstype		1504893						
ANR	1505407	Symbol	r_fs_open		1504893						
ANR	1505408	Symbol	heapFsType		1504893						
ANR	1505409	Symbol	NULL		1504893						
ANR	1505410	Symbol	root -> iob		1504893						
ANR	1505411	Symbol	false		1504893						
ANR	1505412	Symbol	iter		1504893						
ANR	1505413	Symbol	* root -> path		1504893						
ANR	1505414	Symbol	root -> cob		1504893						
ANR	1505415	Symbol	list		1504893						
ANR	1505416	Symbol	* fstype		1504893						
ANR	1505417	Symbol	p		1504893						
ANR	1505418	Symbol	str		1504893						
ANR	1505419	Symbol	lenstr		1504893						
ANR	1505420	Symbol	r_fs_root_new		1504893						
ANR	1505421	Symbol	* lenstr		1504893						
ANR	1505422	Symbol	fs -> iob		1504893						
ANR	1505423	Symbol	root -> path		1504893						
ANR	1505424	Symbol	* path		1504893						
ANR	1505425	Symbol	r_fs_plugin_get		1504893						
ANR	1505426	Symbol	r_list_empty		1504893						
ANR	1505427	Symbol	* p		1504893						
ANR	1505428	Symbol	strdup		1504893						
ANR	1505429	Symbol	* root		1504893						
ANR	1505430	Symbol	* len		1504893						
ANR	1505431	Function	r_fs_match	182:0:3844:3959							
ANR	1505432	FunctionDef	"r_fs_match (const char * root , const char * path , int len)"		1505431	0					
ANR	1505433	CompoundStatement		182:75:3919:3959	1505431	0					
ANR	1505434	ReturnStatement	"return ( ! strncmp ( path , root , len ) ) ;"	183:1:3922:3957	1505431	0	True				
ANR	1505435	UnaryOperationExpression	"! strncmp ( path , root , len )"		1505431	0					
ANR	1505436	UnaryOperator	!		1505431	0					
ANR	1505437	CallExpression	"strncmp ( path , root , len )"		1505431	1					
ANR	1505438	Callee	strncmp		1505431	0					
ANR	1505439	Identifier	strncmp		1505431	0					
ANR	1505440	ArgumentList	path		1505431	1					
ANR	1505441	Argument	path		1505431	0					
ANR	1505442	Identifier	path		1505431	0					
ANR	1505443	Argument	root		1505431	1					
ANR	1505444	Identifier	root		1505431	0					
ANR	1505445	Argument	len		1505431	2					
ANR	1505446	Identifier	len		1505431	0					
ANR	1505447	ReturnType	static inline bool		1505431	1					
ANR	1505448	Identifier	r_fs_match		1505431	2					
ANR	1505449	ParameterList	"const char * root , const char * path , int len"		1505431	3					
ANR	1505450	Parameter	const char * root	182:30:3874:3889	1505431	0	True				
ANR	1505451	ParameterType	const char *		1505431	0					
ANR	1505452	Identifier	root		1505431	1					
ANR	1505453	Parameter	const char * path	182:48:3892:3907	1505431	1	True				
ANR	1505454	ParameterType	const char *		1505431	0					
ANR	1505455	Identifier	path		1505431	1					
ANR	1505456	Parameter	int len	182:66:3910:3916	1505431	2	True				
ANR	1505457	ParameterType	int		1505431	0					
ANR	1505458	Identifier	len		1505431	1					
ANR	1505459	CFGEntryNode	ENTRY		1505431		True				
ANR	1505460	CFGExitNode	EXIT		1505431		True				
ANR	1505461	Symbol	path		1505431						
ANR	1505462	Symbol	strncmp		1505431						
ANR	1505463	Symbol	len		1505431						
ANR	1505464	Symbol	root		1505431						
ANR	1505465	Function	r_fs_umount	186:0:3962:4331							
ANR	1505466	FunctionDef	"r_fs_umount (RFS * fs , const char * path)"		1505465	0					
ANR	1505467	CompoundStatement		186:50:4012:4331	1505465	0					
ANR	1505468	IdentifierDeclStatement	int len ;	187:1:4015:4022	1505465	0	True				
ANR	1505469	IdentifierDecl	len		1505465	0					
ANR	1505470	IdentifierDeclType	int		1505465	0					
ANR	1505471	Identifier	len		1505465	1					
ANR	1505472	IdentifierDeclStatement	RFSRoot * root ;	188:1:4025:4038	1505465	1	True				
ANR	1505473	IdentifierDecl	* root		1505465	0					
ANR	1505474	IdentifierDeclType	RFSRoot *		1505465	0					
ANR	1505475	Identifier	root		1505465	1					
ANR	1505476	IdentifierDeclStatement	"RListIter * iter , * riter = NULL ;"	189:1:4041:4072	1505465	2	True				
ANR	1505477	IdentifierDecl	* iter		1505465	0					
ANR	1505478	IdentifierDeclType	RListIter *		1505465	0					
ANR	1505479	Identifier	iter		1505465	1					
ANR	1505480	IdentifierDecl	* riter = NULL		1505465	1					
ANR	1505481	IdentifierDeclType	RListIter *		1505465	0					
ANR	1505482	Identifier	riter		1505465	1					
ANR	1505483	AssignmentExpression	* riter = NULL		1505465	2		=			
ANR	1505484	Identifier	NULL		1505465	0					
ANR	1505485	Identifier	NULL		1505465	1					
ANR	1505486	IfStatement	if ( ! path )		1505465	3					
ANR	1505487	Condition	! path	191:5:4080:4084	1505465	0	True				
ANR	1505488	UnaryOperationExpression	! path		1505465	0					
ANR	1505489	UnaryOperator	!		1505465	0					
ANR	1505490	Identifier	path		1505465	1					
ANR	1505491	CompoundStatement		6:12:74:74	1505465	1					
ANR	1505492	ReturnStatement	return false ;	192:2:4091:4103	1505465	0	True				
ANR	1505493	Identifier	false		1505465	0					
ANR	1505494	Statement	r_list_foreach	195:1:4110:4123	1505465	4	True				
ANR	1505495	Statement	(	195:16:4125:4125	1505465	5	True				
ANR	1505496	Statement	fs	195:17:4126:4127	1505465	6	True				
ANR	1505497	Statement	->	195:19:4128:4129	1505465	7	True				
ANR	1505498	Statement	roots	195:21:4130:4134	1505465	8	True				
ANR	1505499	Statement	","	195:26:4135:4135	1505465	9	True				
ANR	1505500	Statement	iter	195:28:4137:4140	1505465	10	True				
ANR	1505501	Statement	","	195:32:4141:4141	1505465	11	True				
ANR	1505502	Statement	root	195:34:4143:4146	1505465	12	True				
ANR	1505503	Statement	)	195:38:4147:4147	1505465	13	True				
ANR	1505504	CompoundStatement		10:40:136:136	1505465	14					
ANR	1505505	ExpressionStatement	len = strlen ( root -> path )	196:2:4153:4178	1505465	0	True				
ANR	1505506	AssignmentExpression	len = strlen ( root -> path )		1505465	0		=			
ANR	1505507	Identifier	len		1505465	0					
ANR	1505508	CallExpression	strlen ( root -> path )		1505465	1					
ANR	1505509	Callee	strlen		1505465	0					
ANR	1505510	Identifier	strlen		1505465	0					
ANR	1505511	ArgumentList	root -> path		1505465	1					
ANR	1505512	Argument	root -> path		1505465	0					
ANR	1505513	PtrMemberAccess	root -> path		1505465	0					
ANR	1505514	Identifier	root		1505465	0					
ANR	1505515	Identifier	path		1505465	1					
ANR	1505516	IfStatement	"if ( r_fs_match ( path , root -> path , len ) )"		1505465	1					
ANR	1505517	Condition	"r_fs_match ( path , root -> path , len )"	197:6:4186:4219	1505465	0	True				
ANR	1505518	CallExpression	"r_fs_match ( path , root -> path , len )"		1505465	0					
ANR	1505519	Callee	r_fs_match		1505465	0					
ANR	1505520	Identifier	r_fs_match		1505465	0					
ANR	1505521	ArgumentList	path		1505465	1					
ANR	1505522	Argument	path		1505465	0					
ANR	1505523	Identifier	path		1505465	0					
ANR	1505524	Argument	root -> path		1505465	1					
ANR	1505525	PtrMemberAccess	root -> path		1505465	0					
ANR	1505526	Identifier	root		1505465	0					
ANR	1505527	Identifier	path		1505465	1					
ANR	1505528	Argument	len		1505465	2					
ANR	1505529	Identifier	len		1505465	0					
ANR	1505530	CompoundStatement		12:42:209:209	1505465	1					
ANR	1505531	ExpressionStatement	riter = iter	198:3:4227:4239	1505465	0	True				
ANR	1505532	AssignmentExpression	riter = iter		1505465	0		=			
ANR	1505533	Identifier	riter		1505465	0					
ANR	1505534	Identifier	iter		1505465	1					
ANR	1505535	IfStatement	if ( riter )		1505465	15					
ANR	1505536	Condition	riter	201:5:4253:4257	1505465	0	True				
ANR	1505537	Identifier	riter		1505465	0					
ANR	1505538	CompoundStatement		16:12:247:247	1505465	1					
ANR	1505539	ExpressionStatement	"r_list_delete ( fs -> roots , riter )"	202:2:4264:4296	1505465	0	True				
ANR	1505540	CallExpression	"r_list_delete ( fs -> roots , riter )"		1505465	0					
ANR	1505541	Callee	r_list_delete		1505465	0					
ANR	1505542	Identifier	r_list_delete		1505465	0					
ANR	1505543	ArgumentList	fs -> roots		1505465	1					
ANR	1505544	Argument	fs -> roots		1505465	0					
ANR	1505545	PtrMemberAccess	fs -> roots		1505465	0					
ANR	1505546	Identifier	fs		1505465	0					
ANR	1505547	Identifier	roots		1505465	1					
ANR	1505548	Argument	riter		1505465	1					
ANR	1505549	Identifier	riter		1505465	0					
ANR	1505550	ReturnStatement	return true ;	203:2:4300:4311	1505465	1	True				
ANR	1505551	Identifier	true		1505465	0					
ANR	1505552	ReturnStatement	return false ;	205:1:4317:4329	1505465	16	True				
ANR	1505553	Identifier	false		1505465	0					
ANR	1505554	ReturnType	R_API bool		1505465	1					
ANR	1505555	Identifier	r_fs_umount		1505465	2					
ANR	1505556	ParameterList	"RFS * fs , const char * path"		1505465	3					
ANR	1505557	Parameter	RFS * fs	186:23:3985:3991	1505465	0	True				
ANR	1505558	ParameterType	RFS *		1505465	0					
ANR	1505559	Identifier	fs		1505465	1					
ANR	1505560	Parameter	const char * path	186:32:3994:4009	1505465	1	True				
ANR	1505561	ParameterType	const char *		1505465	0					
ANR	1505562	Identifier	path		1505465	1					
ANR	1505563	CFGEntryNode	ENTRY		1505465		True				
ANR	1505564	CFGExitNode	EXIT		1505465		True				
ANR	1505565	Symbol	fs -> roots		1505465						
ANR	1505566	Symbol	NULL		1505465						
ANR	1505567	Symbol	false		1505465						
ANR	1505568	Symbol	r_fs_match		1505465						
ANR	1505569	Symbol	iter		1505465						
ANR	1505570	Symbol	fs		1505465						
ANR	1505571	Symbol	* fs		1505465						
ANR	1505572	Symbol	path		1505465						
ANR	1505573	Symbol	strlen		1505465						
ANR	1505574	Symbol	len		1505465						
ANR	1505575	Symbol	root		1505465						
ANR	1505576	Symbol	root -> path		1505465						
ANR	1505577	Symbol	true		1505465						
ANR	1505578	Symbol	* root		1505465						
ANR	1505579	Symbol	riter		1505465						
ANR	1505580	Function	r_fs_root	208:0:4334:4884							
ANR	1505581	FunctionDef	"r_fs_root (RFS * fs , const char * p)"		1505580	0					
ANR	1505582	CompoundStatement		208:47:4381:4884	1505580	0					
ANR	1505583	IdentifierDeclStatement	RList * roots ;	209:1:4384:4396	1505580	0	True				
ANR	1505584	IdentifierDecl	* roots		1505580	0					
ANR	1505585	IdentifierDeclType	RList *		1505580	0					
ANR	1505586	Identifier	roots		1505580	1					
ANR	1505587	IdentifierDeclStatement	RFSRoot * root ;	210:1:4399:4412	1505580	1	True				
ANR	1505588	IdentifierDecl	* root		1505580	0					
ANR	1505589	IdentifierDeclType	RFSRoot *		1505580	0					
ANR	1505590	Identifier	root		1505580	1					
ANR	1505591	IdentifierDeclStatement	RListIter * iter ;	211:1:4415:4430	1505580	2	True				
ANR	1505592	IdentifierDecl	* iter		1505580	0					
ANR	1505593	IdentifierDeclType	RListIter *		1505580	0					
ANR	1505594	Identifier	iter		1505580	1					
ANR	1505595	IdentifierDeclStatement	"int len , olen ;"	212:1:4433:4446	1505580	3	True				
ANR	1505596	IdentifierDecl	len		1505580	0					
ANR	1505597	IdentifierDeclType	int		1505580	0					
ANR	1505598	Identifier	len		1505580	1					
ANR	1505599	IdentifierDecl	olen		1505580	1					
ANR	1505600	IdentifierDeclType	int		1505580	0					
ANR	1505601	Identifier	olen		1505580	1					
ANR	1505602	IdentifierDeclStatement	char * path = strdup ( p ) ;	213:1:4449:4472	1505580	4	True				
ANR	1505603	IdentifierDecl	* path = strdup ( p )		1505580	0					
ANR	1505604	IdentifierDeclType	char *		1505580	0					
ANR	1505605	Identifier	path		1505580	1					
ANR	1505606	AssignmentExpression	* path = strdup ( p )		1505580	2		=			
ANR	1505607	Identifier	path		1505580	0					
ANR	1505608	CallExpression	strdup ( p )		1505580	1					
ANR	1505609	Callee	strdup		1505580	0					
ANR	1505610	Identifier	strdup		1505580	0					
ANR	1505611	ArgumentList	p		1505580	1					
ANR	1505612	Argument	p		1505580	0					
ANR	1505613	Identifier	p		1505580	0					
ANR	1505614	IfStatement	if ( ! path )		1505580	5					
ANR	1505615	Condition	! path	214:5:4479:4483	1505580	0	True				
ANR	1505616	UnaryOperationExpression	! path		1505580	0					
ANR	1505617	UnaryOperator	!		1505580	0					
ANR	1505618	Identifier	path		1505580	1					
ANR	1505619	CompoundStatement		7:12:104:104	1505580	1					
ANR	1505620	ReturnStatement	return NULL ;	215:2:4490:4501	1505580	0	True				
ANR	1505621	Identifier	NULL		1505580	0					
ANR	1505622	ExpressionStatement	roots = r_list_new ( )	217:1:4507:4528	1505580	6	True				
ANR	1505623	AssignmentExpression	roots = r_list_new ( )		1505580	0		=			
ANR	1505624	Identifier	roots		1505580	0					
ANR	1505625	CallExpression	r_list_new ( )		1505580	1					
ANR	1505626	Callee	r_list_new		1505580	0					
ANR	1505627	Identifier	r_list_new		1505580	0					
ANR	1505628	ArgumentList			1505580	1					
ANR	1505629	ExpressionStatement	r_str_trim_path ( path )	218:1:4531:4553	1505580	7	True				
ANR	1505630	CallExpression	r_str_trim_path ( path )		1505580	0					
ANR	1505631	Callee	r_str_trim_path		1505580	0					
ANR	1505632	Identifier	r_str_trim_path		1505580	0					
ANR	1505633	ArgumentList	path		1505580	1					
ANR	1505634	Argument	path		1505580	0					
ANR	1505635	Identifier	path		1505580	0					
ANR	1505636	Statement	r_list_foreach	219:1:4556:4569	1505580	8	True				
ANR	1505637	Statement	(	219:16:4571:4571	1505580	9	True				
ANR	1505638	Statement	fs	219:17:4572:4573	1505580	10	True				
ANR	1505639	Statement	->	219:19:4574:4575	1505580	11	True				
ANR	1505640	Statement	roots	219:21:4576:4580	1505580	12	True				
ANR	1505641	Statement	","	219:26:4581:4581	1505580	13	True				
ANR	1505642	Statement	iter	219:28:4583:4586	1505580	14	True				
ANR	1505643	Statement	","	219:32:4587:4587	1505580	15	True				
ANR	1505644	Statement	root	219:34:4589:4592	1505580	16	True				
ANR	1505645	Statement	)	219:38:4593:4593	1505580	17	True				
ANR	1505646	CompoundStatement		12:40:213:213	1505580	18					
ANR	1505647	ExpressionStatement	len = strlen ( root -> path )	220:2:4599:4624	1505580	0	True				
ANR	1505648	AssignmentExpression	len = strlen ( root -> path )		1505580	0		=			
ANR	1505649	Identifier	len		1505580	0					
ANR	1505650	CallExpression	strlen ( root -> path )		1505580	1					
ANR	1505651	Callee	strlen		1505580	0					
ANR	1505652	Identifier	strlen		1505580	0					
ANR	1505653	ArgumentList	root -> path		1505580	1					
ANR	1505654	Argument	root -> path		1505580	0					
ANR	1505655	PtrMemberAccess	root -> path		1505580	0					
ANR	1505656	Identifier	root		1505580	0					
ANR	1505657	Identifier	path		1505580	1					
ANR	1505658	IfStatement	"if ( r_fs_match ( path , root -> path , len ) )"		1505580	1					
ANR	1505659	Condition	"r_fs_match ( path , root -> path , len )"	221:6:4632:4665	1505580	0	True				
ANR	1505660	CallExpression	"r_fs_match ( path , root -> path , len )"		1505580	0					
ANR	1505661	Callee	r_fs_match		1505580	0					
ANR	1505662	Identifier	r_fs_match		1505580	0					
ANR	1505663	ArgumentList	path		1505580	1					
ANR	1505664	Argument	path		1505580	0					
ANR	1505665	Identifier	path		1505580	0					
ANR	1505666	Argument	root -> path		1505580	1					
ANR	1505667	PtrMemberAccess	root -> path		1505580	0					
ANR	1505668	Identifier	root		1505580	0					
ANR	1505669	Identifier	path		1505580	1					
ANR	1505670	Argument	len		1505580	2					
ANR	1505671	Identifier	len		1505580	0					
ANR	1505672	CompoundStatement		14:42:286:286	1505580	1					
ANR	1505673	ExpressionStatement	olen = strlen ( path )	222:3:4673:4693	1505580	0	True				
ANR	1505674	AssignmentExpression	olen = strlen ( path )		1505580	0		=			
ANR	1505675	Identifier	olen		1505580	0					
ANR	1505676	CallExpression	strlen ( path )		1505580	1					
ANR	1505677	Callee	strlen		1505580	0					
ANR	1505678	Identifier	strlen		1505580	0					
ANR	1505679	ArgumentList	path		1505580	1					
ANR	1505680	Argument	path		1505580	0					
ANR	1505681	Identifier	path		1505580	0					
ANR	1505682	IfStatement	if ( len == 1 || olen == len )		1505580	1					
ANR	1505683	Condition	len == 1 || olen == len	223:7:4702:4724	1505580	0	True				
ANR	1505684	OrExpression	len == 1 || olen == len		1505580	0		||			
ANR	1505685	EqualityExpression	len == 1		1505580	0		==			
ANR	1505686	Identifier	len		1505580	0					
ANR	1505687	PrimaryExpression	1		1505580	1					
ANR	1505688	EqualityExpression	olen == len		1505580	1		==			
ANR	1505689	Identifier	olen		1505580	0					
ANR	1505690	Identifier	len		1505580	1					
ANR	1505691	CompoundStatement		16:32:345:345	1505580	1					
ANR	1505692	ExpressionStatement	"r_list_append ( roots , root )"	224:4:4733:4760	1505580	0	True				
ANR	1505693	CallExpression	"r_list_append ( roots , root )"		1505580	0					
ANR	1505694	Callee	r_list_append		1505580	0					
ANR	1505695	Identifier	r_list_append		1505580	0					
ANR	1505696	ArgumentList	roots		1505580	1					
ANR	1505697	Argument	roots		1505580	0					
ANR	1505698	Identifier	roots		1505580	0					
ANR	1505699	Argument	root		1505580	1					
ANR	1505700	Identifier	root		1505580	0					
ANR	1505701	ElseStatement	else		1505580	0					
ANR	1505702	IfStatement	if ( olen > len && path [ len ] == '/' )		1505580	0					
ANR	1505703	Condition	olen > len && path [ len ] == '/'	225:14:4776:4805	1505580	0	True				
ANR	1505704	AndExpression	olen > len && path [ len ] == '/'		1505580	0		&&			
ANR	1505705	RelationalExpression	olen > len		1505580	0		>			
ANR	1505706	Identifier	olen		1505580	0					
ANR	1505707	Identifier	len		1505580	1					
ANR	1505708	EqualityExpression	path [ len ] == '/'		1505580	1		==			
ANR	1505709	ArrayIndexing	path [ len ]		1505580	0					
ANR	1505710	Identifier	path		1505580	0					
ANR	1505711	Identifier	len		1505580	1					
ANR	1505712	PrimaryExpression	'/'		1505580	1					
ANR	1505713	CompoundStatement		18:46:426:426	1505580	1					
ANR	1505714	ExpressionStatement	"r_list_append ( roots , root )"	226:4:4814:4841	1505580	0	True				
ANR	1505715	CallExpression	"r_list_append ( roots , root )"		1505580	0					
ANR	1505716	Callee	r_list_append		1505580	0					
ANR	1505717	Identifier	r_list_append		1505580	0					
ANR	1505718	ArgumentList	roots		1505580	1					
ANR	1505719	Argument	roots		1505580	0					
ANR	1505720	Identifier	roots		1505580	0					
ANR	1505721	Argument	root		1505580	1					
ANR	1505722	Identifier	root		1505580	0					
ANR	1505723	ExpressionStatement	free ( path )	230:1:4856:4867	1505580	19	True				
ANR	1505724	CallExpression	free ( path )		1505580	0					
ANR	1505725	Callee	free		1505580	0					
ANR	1505726	Identifier	free		1505580	0					
ANR	1505727	ArgumentList	path		1505580	1					
ANR	1505728	Argument	path		1505580	0					
ANR	1505729	Identifier	path		1505580	0					
ANR	1505730	ReturnStatement	return roots ;	231:1:4870:4882	1505580	20	True				
ANR	1505731	Identifier	roots		1505580	0					
ANR	1505732	ReturnType	R_API RList *		1505580	1					
ANR	1505733	Identifier	r_fs_root		1505580	2					
ANR	1505734	ParameterList	"RFS * fs , const char * p"		1505580	3					
ANR	1505735	Parameter	RFS * fs	208:23:4357:4363	1505580	0	True				
ANR	1505736	ParameterType	RFS *		1505580	0					
ANR	1505737	Identifier	fs		1505580	1					
ANR	1505738	Parameter	const char * p	208:32:4366:4378	1505580	1	True				
ANR	1505739	ParameterType	const char *		1505580	0					
ANR	1505740	Identifier	p		1505580	1					
ANR	1505741	CFGEntryNode	ENTRY		1505580		True				
ANR	1505742	CFGExitNode	EXIT		1505580		True				
ANR	1505743	Symbol	NULL		1505580						
ANR	1505744	Symbol	r_fs_match		1505580						
ANR	1505745	Symbol	iter		1505580						
ANR	1505746	Symbol	roots		1505580						
ANR	1505747	Symbol	fs		1505580						
ANR	1505748	Symbol	p		1505580						
ANR	1505749	Symbol	path		1505580						
ANR	1505750	Symbol	strlen		1505580						
ANR	1505751	Symbol	olen		1505580						
ANR	1505752	Symbol	len		1505580						
ANR	1505753	Symbol	root		1505580						
ANR	1505754	Symbol	root -> path		1505580						
ANR	1505755	Symbol	* path		1505580						
ANR	1505756	Symbol	strdup		1505580						
ANR	1505757	Symbol	* root		1505580						
ANR	1505758	Symbol	r_list_new		1505580						
ANR	1505759	Symbol	* len		1505580						
ANR	1505760	Function	r_fs_open	235:0:4899:5613							
ANR	1505761	FunctionDef	"r_fs_open (RFS * fs , const char * p , bool create)"		1505760	0					
ANR	1505762	CompoundStatement		235:62:4961:5613	1505760	0					
ANR	1505763	IdentifierDeclStatement	RFSRoot * root ;	236:1:4964:4977	1505760	0	True				
ANR	1505764	IdentifierDecl	* root		1505760	0					
ANR	1505765	IdentifierDeclType	RFSRoot *		1505760	0					
ANR	1505766	Identifier	root		1505760	1					
ANR	1505767	IdentifierDeclStatement	RListIter * iter ;	237:1:4980:4995	1505760	1	True				
ANR	1505768	IdentifierDecl	* iter		1505760	0					
ANR	1505769	IdentifierDeclType	RListIter *		1505760	0					
ANR	1505770	Identifier	iter		1505760	1					
ANR	1505771	IdentifierDeclStatement	RFSFile * f = NULL ;	238:1:4998:5015	1505760	2	True				
ANR	1505772	IdentifierDecl	* f = NULL		1505760	0					
ANR	1505773	IdentifierDeclType	RFSFile *		1505760	0					
ANR	1505774	Identifier	f		1505760	1					
ANR	1505775	AssignmentExpression	* f = NULL		1505760	2		=			
ANR	1505776	Identifier	NULL		1505760	0					
ANR	1505777	Identifier	NULL		1505760	1					
ANR	1505778	IdentifierDeclStatement	const char * dir ;	239:1:5018:5033	1505760	3	True				
ANR	1505779	IdentifierDecl	* dir		1505760	0					
ANR	1505780	IdentifierDeclType	const char *		1505760	0					
ANR	1505781	Identifier	dir		1505760	1					
ANR	1505782	IdentifierDeclStatement	char * path = r_str_trim_dup ( p ) ;	240:1:5036:5067	1505760	4	True				
ANR	1505783	IdentifierDecl	* path = r_str_trim_dup ( p )		1505760	0					
ANR	1505784	IdentifierDeclType	char *		1505760	0					
ANR	1505785	Identifier	path		1505760	1					
ANR	1505786	AssignmentExpression	* path = r_str_trim_dup ( p )		1505760	2		=			
ANR	1505787	Identifier	path		1505760	0					
ANR	1505788	CallExpression	r_str_trim_dup ( p )		1505760	1					
ANR	1505789	Callee	r_str_trim_dup		1505760	0					
ANR	1505790	Identifier	r_str_trim_dup		1505760	0					
ANR	1505791	ArgumentList	p		1505760	1					
ANR	1505792	Argument	p		1505760	0					
ANR	1505793	Identifier	p		1505760	0					
ANR	1505794	IdentifierDeclStatement	"RList * roots = r_fs_root ( fs , path ) ;"	241:1:5070:5105	1505760	5	True				
ANR	1505795	IdentifierDecl	"* roots = r_fs_root ( fs , path )"		1505760	0					
ANR	1505796	IdentifierDeclType	RList *		1505760	0					
ANR	1505797	Identifier	roots		1505760	1					
ANR	1505798	AssignmentExpression	"* roots = r_fs_root ( fs , path )"		1505760	2		=			
ANR	1505799	Identifier	roots		1505760	0					
ANR	1505800	CallExpression	"r_fs_root ( fs , path )"		1505760	1					
ANR	1505801	Callee	r_fs_root		1505760	0					
ANR	1505802	Identifier	r_fs_root		1505760	0					
ANR	1505803	ArgumentList	fs		1505760	1					
ANR	1505804	Argument	fs		1505760	0					
ANR	1505805	Identifier	fs		1505760	0					
ANR	1505806	Argument	path		1505760	1					
ANR	1505807	Identifier	path		1505760	0					
ANR	1505808	IfStatement	if ( ! r_list_empty ( roots ) )		1505760	6					
ANR	1505809	Condition	! r_list_empty ( roots )	242:5:5112:5132	1505760	0	True				
ANR	1505810	UnaryOperationExpression	! r_list_empty ( roots )		1505760	0					
ANR	1505811	UnaryOperator	!		1505760	0					
ANR	1505812	CallExpression	r_list_empty ( roots )		1505760	1					
ANR	1505813	Callee	r_list_empty		1505760	0					
ANR	1505814	Identifier	r_list_empty		1505760	0					
ANR	1505815	ArgumentList	roots		1505760	1					
ANR	1505816	Argument	roots		1505760	0					
ANR	1505817	Identifier	roots		1505760	0					
ANR	1505818	CompoundStatement		8:28:173:173	1505760	1					
ANR	1505819	Statement	r_list_foreach	243:2:5139:5152	1505760	0	True				
ANR	1505820	Statement	(	243:17:5154:5154	1505760	1	True				
ANR	1505821	Statement	roots	243:18:5155:5159	1505760	2	True				
ANR	1505822	Statement	","	243:23:5160:5160	1505760	3	True				
ANR	1505823	Statement	iter	243:25:5162:5165	1505760	4	True				
ANR	1505824	Statement	","	243:29:5166:5166	1505760	5	True				
ANR	1505825	Statement	root	243:31:5168:5171	1505760	6	True				
ANR	1505826	Statement	)	243:35:5172:5172	1505760	7	True				
ANR	1505827	CompoundStatement		9:37:212:212	1505760	8					
ANR	1505828	IfStatement	if ( create )		1505760	0					
ANR	1505829	Condition	create	244:7:5183:5188	1505760	0	True				
ANR	1505830	Identifier	create		1505760	0					
ANR	1505831	CompoundStatement		10:15:229:229	1505760	1					
ANR	1505832	IfStatement	if ( root && root -> p && root -> p -> write )		1505760	0					
ANR	1505833	Condition	root && root -> p && root -> p -> write	245:8:5201:5233	1505760	0	True				
ANR	1505834	AndExpression	root && root -> p && root -> p -> write		1505760	0		&&			
ANR	1505835	Identifier	root		1505760	0					
ANR	1505836	AndExpression	root -> p && root -> p -> write		1505760	1		&&			
ANR	1505837	PtrMemberAccess	root -> p		1505760	0					
ANR	1505838	Identifier	root		1505760	0					
ANR	1505839	Identifier	p		1505760	1					
ANR	1505840	PtrMemberAccess	root -> p -> write		1505760	1					
ANR	1505841	PtrMemberAccess	root -> p		1505760	0					
ANR	1505842	Identifier	root		1505760	0					
ANR	1505843	Identifier	p		1505760	1					
ANR	1505844	Identifier	write		1505760	1					
ANR	1505845	CompoundStatement		11:43:274:274	1505760	1					
ANR	1505846	ExpressionStatement	"f = r_fs_file_new ( root , path + strlen ( root -> path ) )"	246:5:5243:5295	1505760	0	True				
ANR	1505847	AssignmentExpression	"f = r_fs_file_new ( root , path + strlen ( root -> path ) )"		1505760	0		=			
ANR	1505848	Identifier	f		1505760	0					
ANR	1505849	CallExpression	"r_fs_file_new ( root , path + strlen ( root -> path ) )"		1505760	1					
ANR	1505850	Callee	r_fs_file_new		1505760	0					
ANR	1505851	Identifier	r_fs_file_new		1505760	0					
ANR	1505852	ArgumentList	root		1505760	1					
ANR	1505853	Argument	root		1505760	0					
ANR	1505854	Identifier	root		1505760	0					
ANR	1505855	Argument	path + strlen ( root -> path )		1505760	1					
ANR	1505856	AdditiveExpression	path + strlen ( root -> path )		1505760	0		+			
ANR	1505857	Identifier	path		1505760	0					
ANR	1505858	CallExpression	strlen ( root -> path )		1505760	1					
ANR	1505859	Callee	strlen		1505760	0					
ANR	1505860	Identifier	strlen		1505760	0					
ANR	1505861	ArgumentList	root -> path		1505760	1					
ANR	1505862	Argument	root -> path		1505760	0					
ANR	1505863	PtrMemberAccess	root -> path		1505760	0					
ANR	1505864	Identifier	root		1505760	0					
ANR	1505865	Identifier	path		1505760	1					
ANR	1505866	BreakStatement	break ;	247:5:5302:5307	1505760	1	True				
ANR	1505867	ContinueStatement	continue ;	249:4:5319:5327	1505760	1	True				
ANR	1505868	IfStatement	if ( root && root -> p && root -> p -> open )		1505760	1					
ANR	1505869	Condition	root && root -> p && root -> p -> open	251:7:5341:5372	1505760	0	True				
ANR	1505870	AndExpression	root && root -> p && root -> p -> open		1505760	0		&&			
ANR	1505871	Identifier	root		1505760	0					
ANR	1505872	AndExpression	root -> p && root -> p -> open		1505760	1		&&			
ANR	1505873	PtrMemberAccess	root -> p		1505760	0					
ANR	1505874	Identifier	root		1505760	0					
ANR	1505875	Identifier	p		1505760	1					
ANR	1505876	PtrMemberAccess	root -> p -> open		1505760	1					
ANR	1505877	PtrMemberAccess	root -> p		1505760	0					
ANR	1505878	Identifier	root		1505760	0					
ANR	1505879	Identifier	p		1505760	1					
ANR	1505880	Identifier	open		1505760	1					
ANR	1505881	CompoundStatement		17:41:413:413	1505760	1					
ANR	1505882	IfStatement	if ( strlen ( root -> path ) == 1 )		1505760	0					
ANR	1505883	Condition	strlen ( root -> path ) == 1	252:8:5385:5408	1505760	0	True				
ANR	1505884	EqualityExpression	strlen ( root -> path ) == 1		1505760	0		==			
ANR	1505885	CallExpression	strlen ( root -> path )		1505760	0					
ANR	1505886	Callee	strlen		1505760	0					
ANR	1505887	Identifier	strlen		1505760	0					
ANR	1505888	ArgumentList	root -> path		1505760	1					
ANR	1505889	Argument	root -> path		1505760	0					
ANR	1505890	PtrMemberAccess	root -> path		1505760	0					
ANR	1505891	Identifier	root		1505760	0					
ANR	1505892	Identifier	path		1505760	1					
ANR	1505893	PrimaryExpression	1		1505760	1					
ANR	1505894	CompoundStatement		18:34:449:449	1505760	1					
ANR	1505895	ExpressionStatement	dir = path	253:5:5418:5428	1505760	0	True				
ANR	1505896	AssignmentExpression	dir = path		1505760	0		=			
ANR	1505897	Identifier	dir		1505760	0					
ANR	1505898	Identifier	path		1505760	1					
ANR	1505899	ElseStatement	else		1505760	0					
ANR	1505900	CompoundStatement		20:11:479:479	1505760	0					
ANR	1505901	ExpressionStatement	dir = path + strlen ( root -> path )	255:5:5448:5480	1505760	0	True				
ANR	1505902	AssignmentExpression	dir = path + strlen ( root -> path )		1505760	0		=			
ANR	1505903	Identifier	dir		1505760	0					
ANR	1505904	AdditiveExpression	path + strlen ( root -> path )		1505760	1		+			
ANR	1505905	Identifier	path		1505760	0					
ANR	1505906	CallExpression	strlen ( root -> path )		1505760	1					
ANR	1505907	Callee	strlen		1505760	0					
ANR	1505908	Identifier	strlen		1505760	0					
ANR	1505909	ArgumentList	root -> path		1505760	1					
ANR	1505910	Argument	root -> path		1505760	0					
ANR	1505911	PtrMemberAccess	root -> path		1505760	0					
ANR	1505912	Identifier	root		1505760	0					
ANR	1505913	Identifier	path		1505760	1					
ANR	1505914	ExpressionStatement	"f = root -> p -> open ( root , dir , false )"	257:4:5492:5528	1505760	1	True				
ANR	1505915	AssignmentExpression	"f = root -> p -> open ( root , dir , false )"		1505760	0		=			
ANR	1505916	Identifier	f		1505760	0					
ANR	1505917	CallExpression	"root -> p -> open ( root , dir , false )"		1505760	1					
ANR	1505918	Callee	root -> p -> open		1505760	0					
ANR	1505919	PtrMemberAccess	root -> p -> open		1505760	0					
ANR	1505920	PtrMemberAccess	root -> p		1505760	0					
ANR	1505921	Identifier	root		1505760	0					
ANR	1505922	Identifier	p		1505760	1					
ANR	1505923	Identifier	open		1505760	1					
ANR	1505924	ArgumentList	root		1505760	1					
ANR	1505925	Argument	root		1505760	0					
ANR	1505926	Identifier	root		1505760	0					
ANR	1505927	Argument	dir		1505760	1					
ANR	1505928	Identifier	dir		1505760	0					
ANR	1505929	Argument	false		1505760	2					
ANR	1505930	Identifier	false		1505760	0					
ANR	1505931	IfStatement	if ( f )		1505760	2					
ANR	1505932	Condition	f	258:8:5538:5538	1505760	0	True				
ANR	1505933	Identifier	f		1505760	0					
ANR	1505934	CompoundStatement		24:11:579:579	1505760	1					
ANR	1505935	BreakStatement	break ;	259:5:5548:5553	1505760	0	True				
ANR	1505936	ExpressionStatement	free ( roots )	264:1:5574:5586	1505760	7	True				
ANR	1505937	CallExpression	free ( roots )		1505760	0					
ANR	1505938	Callee	free		1505760	0					
ANR	1505939	Identifier	free		1505760	0					
ANR	1505940	ArgumentList	roots		1505760	1					
ANR	1505941	Argument	roots		1505760	0					
ANR	1505942	Identifier	roots		1505760	0					
ANR	1505943	ExpressionStatement	free ( path )	265:1:5589:5600	1505760	8	True				
ANR	1505944	CallExpression	free ( path )		1505760	0					
ANR	1505945	Callee	free		1505760	0					
ANR	1505946	Identifier	free		1505760	0					
ANR	1505947	ArgumentList	path		1505760	1					
ANR	1505948	Argument	path		1505760	0					
ANR	1505949	Identifier	path		1505760	0					
ANR	1505950	ReturnStatement	return f ;	266:1:5603:5611	1505760	9	True				
ANR	1505951	Identifier	f		1505760	0					
ANR	1505952	ReturnType	R_API RFSFile *		1505760	1					
ANR	1505953	Identifier	r_fs_open		1505760	2					
ANR	1505954	ParameterList	"RFS * fs , const char * p , bool create"		1505760	3					
ANR	1505955	Parameter	RFS * fs	235:25:4924:4930	1505760	0	True				
ANR	1505956	ParameterType	RFS *		1505760	0					
ANR	1505957	Identifier	fs		1505760	1					
ANR	1505958	Parameter	const char * p	235:34:4933:4945	1505760	1	True				
ANR	1505959	ParameterType	const char *		1505760	0					
ANR	1505960	Identifier	p		1505760	1					
ANR	1505961	Parameter	bool create	235:49:4948:4958	1505760	2	True				
ANR	1505962	ParameterType	bool		1505760	0					
ANR	1505963	Identifier	create		1505760	1					
ANR	1505964	CFGEntryNode	ENTRY		1505760		True				
ANR	1505965	CFGExitNode	EXIT		1505760		True				
ANR	1505966	CFGErrorNode	ERROR		1505760		True				
ANR	1505967	Symbol	NULL		1505760						
ANR	1505968	Symbol	* root -> p		1505760						
ANR	1505969	Symbol	root -> p		1505760						
ANR	1505970	Symbol	f		1505760						
ANR	1505971	Symbol	false		1505760						
ANR	1505972	Symbol	iter		1505760						
ANR	1505973	Symbol	roots		1505760						
ANR	1505974	Symbol	dir		1505760						
ANR	1505975	Symbol	fs		1505760						
ANR	1505976	Symbol	r_str_trim_dup		1505760						
ANR	1505977	Symbol	p		1505760						
ANR	1505978	Symbol	path		1505760						
ANR	1505979	Symbol	strlen		1505760						
ANR	1505980	Symbol	* * root		1505760						
ANR	1505981	Symbol	r_fs_root		1505760						
ANR	1505982	Symbol	root		1505760						
ANR	1505983	Symbol	r_fs_file_new		1505760						
ANR	1505984	Symbol	root -> path		1505760						
ANR	1505985	Symbol	create		1505760						
ANR	1505986	Symbol	r_list_empty		1505760						
ANR	1505987	Symbol	root -> p -> write		1505760						
ANR	1505988	Symbol	* root		1505760						
ANR	1505989	Symbol	root -> p -> open		1505760						
ANR	1505990	Function	r_fs_close	270:0:5643:5801							
ANR	1505991	FunctionDef	"r_fs_close (RFS * fs , RFSFile * file)"		1505990	0					
ANR	1505992	CompoundStatement		270:46:5689:5801	1505990	0					
ANR	1505993	IfStatement	if ( fs && file )		1505990	0					
ANR	1505994	Condition	fs && file	271:5:5696:5705	1505990	0	True				
ANR	1505995	AndExpression	fs && file		1505990	0		&&			
ANR	1505996	Identifier	fs		1505990	0					
ANR	1505997	Identifier	file		1505990	1					
ANR	1505998	CompoundStatement		2:17:18:18	1505990	1					
ANR	1505999	ExpressionStatement	R_FREE ( file -> data )	272:2:5712:5731	1505990	0	True				
ANR	1506000	CallExpression	R_FREE ( file -> data )		1505990	0					
ANR	1506001	Callee	R_FREE		1505990	0					
ANR	1506002	Identifier	R_FREE		1505990	0					
ANR	1506003	ArgumentList	file -> data		1505990	1					
ANR	1506004	Argument	file -> data		1505990	0					
ANR	1506005	PtrMemberAccess	file -> data		1505990	0					
ANR	1506006	Identifier	file		1505990	0					
ANR	1506007	Identifier	data		1505990	1					
ANR	1506008	IfStatement	if ( file -> p && file -> p -> close )		1505990	1					
ANR	1506009	Condition	file -> p && file -> p -> close	273:6:5739:5763	1505990	0	True				
ANR	1506010	AndExpression	file -> p && file -> p -> close		1505990	0		&&			
ANR	1506011	PtrMemberAccess	file -> p		1505990	0					
ANR	1506012	Identifier	file		1505990	0					
ANR	1506013	Identifier	p		1505990	1					
ANR	1506014	PtrMemberAccess	file -> p -> close		1505990	1					
ANR	1506015	PtrMemberAccess	file -> p		1505990	0					
ANR	1506016	Identifier	file		1505990	0					
ANR	1506017	Identifier	p		1505990	1					
ANR	1506018	Identifier	close		1505990	1					
ANR	1506019	CompoundStatement		4:33:76:76	1505990	1					
ANR	1506020	ExpressionStatement	file -> p -> close ( file )	274:3:5771:5792	1505990	0	True				
ANR	1506021	CallExpression	file -> p -> close ( file )		1505990	0					
ANR	1506022	Callee	file -> p -> close		1505990	0					
ANR	1506023	PtrMemberAccess	file -> p -> close		1505990	0					
ANR	1506024	PtrMemberAccess	file -> p		1505990	0					
ANR	1506025	Identifier	file		1505990	0					
ANR	1506026	Identifier	p		1505990	1					
ANR	1506027	Identifier	close		1505990	1					
ANR	1506028	ArgumentList	file		1505990	1					
ANR	1506029	Argument	file		1505990	0					
ANR	1506030	Identifier	file		1505990	0					
ANR	1506031	ReturnType	R_API void		1505990	1					
ANR	1506032	Identifier	r_fs_close		1505990	2					
ANR	1506033	ParameterList	"RFS * fs , RFSFile * file"		1505990	3					
ANR	1506034	Parameter	RFS * fs	270:22:5665:5671	1505990	0	True				
ANR	1506035	ParameterType	RFS *		1505990	0					
ANR	1506036	Identifier	fs		1505990	1					
ANR	1506037	Parameter	RFSFile * file	270:31:5674:5686	1505990	1	True				
ANR	1506038	ParameterType	RFSFile *		1505990	0					
ANR	1506039	Identifier	file		1505990	1					
ANR	1506040	CFGEntryNode	ENTRY		1505990		True				
ANR	1506041	CFGExitNode	EXIT		1505990		True				
ANR	1506042	Symbol	file		1505990						
ANR	1506043	Symbol	file -> p		1505990						
ANR	1506044	Symbol	file -> data		1505990						
ANR	1506045	Symbol	* file -> p		1505990						
ANR	1506046	Symbol	* file		1505990						
ANR	1506047	Symbol	fs		1505990						
ANR	1506048	Symbol	* * file		1505990						
ANR	1506049	Symbol	file -> p -> close		1505990						
ANR	1506050	Function	r_fs_write	279:0:5804:6167							
ANR	1506051	FunctionDef	"r_fs_write (RFS * fs , RFSFile * file , ut64 addr , const ut8 * data , int len)"		1506050	0					
ANR	1506052	CompoundStatement		279:82:5886:6167	1506050	0					
ANR	1506053	IfStatement	if ( len < 1 )		1506050	0					
ANR	1506054	Condition	len < 1	280:5:5893:5899	1506050	0	True				
ANR	1506055	RelationalExpression	len < 1		1506050	0		<			
ANR	1506056	Identifier	len		1506050	0					
ANR	1506057	PrimaryExpression	1		1506050	1					
ANR	1506058	CompoundStatement		2:14:15:15	1506050	1					
ANR	1506059	ReturnStatement	return false ;	281:2:5906:5918	1506050	0	True				
ANR	1506060	Identifier	false		1506050	0					
ANR	1506061	IfStatement	if ( fs && file )		1506050	1					
ANR	1506062	Condition	fs && file	283:5:5928:5937	1506050	0	True				
ANR	1506063	AndExpression	fs && file		1506050	0		&&			
ANR	1506064	Identifier	fs		1506050	0					
ANR	1506065	Identifier	file		1506050	1					
ANR	1506066	CompoundStatement		5:17:53:53	1506050	1					
ANR	1506067	IfStatement	if ( file -> p && file -> p -> write )		1506050	0					
ANR	1506068	Condition	file -> p && file -> p -> write	285:6:6005:6029	1506050	0	True				
ANR	1506069	AndExpression	file -> p && file -> p -> write		1506050	0		&&			
ANR	1506070	PtrMemberAccess	file -> p		1506050	0					
ANR	1506071	Identifier	file		1506050	0					
ANR	1506072	Identifier	p		1506050	1					
ANR	1506073	PtrMemberAccess	file -> p -> write		1506050	1					
ANR	1506074	PtrMemberAccess	file -> p		1506050	0					
ANR	1506075	Identifier	file		1506050	0					
ANR	1506076	Identifier	p		1506050	1					
ANR	1506077	Identifier	write		1506050	1					
ANR	1506078	CompoundStatement		7:33:145:145	1506050	1					
ANR	1506079	ExpressionStatement	"file -> p -> write ( file , addr , data , len )"	286:3:6037:6075	1506050	0	True				
ANR	1506080	CallExpression	"file -> p -> write ( file , addr , data , len )"		1506050	0					
ANR	1506081	Callee	file -> p -> write		1506050	0					
ANR	1506082	PtrMemberAccess	file -> p -> write		1506050	0					
ANR	1506083	PtrMemberAccess	file -> p		1506050	0					
ANR	1506084	Identifier	file		1506050	0					
ANR	1506085	Identifier	p		1506050	1					
ANR	1506086	Identifier	write		1506050	1					
ANR	1506087	ArgumentList	file		1506050	1					
ANR	1506088	Argument	file		1506050	0					
ANR	1506089	Identifier	file		1506050	0					
ANR	1506090	Argument	addr		1506050	1					
ANR	1506091	Identifier	addr		1506050	0					
ANR	1506092	Argument	data		1506050	2					
ANR	1506093	Identifier	data		1506050	0					
ANR	1506094	Argument	len		1506050	3					
ANR	1506095	Identifier	len		1506050	0					
ANR	1506096	ReturnStatement	return true ;	287:3:6080:6091	1506050	1	True				
ANR	1506097	Identifier	true		1506050	0					
ANR	1506098	ExpressionStatement	"eprintf ( ""r_fs_write: file->p->write is null\\n"" )"	289:2:6099:6147	1506050	1	True				
ANR	1506099	CallExpression	"eprintf ( ""r_fs_write: file->p->write is null\\n"" )"		1506050	0					
ANR	1506100	Callee	eprintf		1506050	0					
ANR	1506101	Identifier	eprintf		1506050	0					
ANR	1506102	ArgumentList	"""r_fs_write: file->p->write is null\\n"""		1506050	1					
ANR	1506103	Argument	"""r_fs_write: file->p->write is null\\n"""		1506050	0					
ANR	1506104	PrimaryExpression	"""r_fs_write: file->p->write is null\\n"""		1506050	0					
ANR	1506105	ReturnStatement	return false ;	291:1:6153:6165	1506050	2	True				
ANR	1506106	Identifier	false		1506050	0					
ANR	1506107	ReturnType	R_API int		1506050	1					
ANR	1506108	Identifier	r_fs_write		1506050	2					
ANR	1506109	ParameterList	"RFS * fs , RFSFile * file , ut64 addr , const ut8 * data , int len"		1506050	3					
ANR	1506110	Parameter	RFS * fs	279:21:5825:5831	1506050	0	True				
ANR	1506111	ParameterType	RFS *		1506050	0					
ANR	1506112	Identifier	fs		1506050	1					
ANR	1506113	Parameter	RFSFile * file	279:30:5834:5846	1506050	1	True				
ANR	1506114	ParameterType	RFSFile *		1506050	0					
ANR	1506115	Identifier	file		1506050	1					
ANR	1506116	Parameter	ut64 addr	279:45:5849:5857	1506050	2	True				
ANR	1506117	ParameterType	ut64		1506050	0					
ANR	1506118	Identifier	addr		1506050	1					
ANR	1506119	Parameter	const ut8 * data	279:56:5860:5874	1506050	3	True				
ANR	1506120	ParameterType	const ut8 *		1506050	0					
ANR	1506121	Identifier	data		1506050	1					
ANR	1506122	Parameter	int len	279:73:5877:5883	1506050	4	True				
ANR	1506123	ParameterType	int		1506050	0					
ANR	1506124	Identifier	len		1506050	1					
ANR	1506125	CFGEntryNode	ENTRY		1506050		True				
ANR	1506126	CFGExitNode	EXIT		1506050		True				
ANR	1506127	Symbol	file		1506050						
ANR	1506128	Symbol	file -> p -> write		1506050						
ANR	1506129	Symbol	data		1506050						
ANR	1506130	Symbol	len		1506050						
ANR	1506131	Symbol	file -> p		1506050						
ANR	1506132	Symbol	false		1506050						
ANR	1506133	Symbol	true		1506050						
ANR	1506134	Symbol	* file -> p		1506050						
ANR	1506135	Symbol	addr		1506050						
ANR	1506136	Symbol	* file		1506050						
ANR	1506137	Symbol	fs		1506050						
ANR	1506138	Symbol	* * file		1506050						
ANR	1506139	Function	r_fs_read	294:0:6170:6591							
ANR	1506140	FunctionDef	"r_fs_read (RFS * fs , RFSFile * file , ut64 addr , int len)"		1506139	0					
ANR	1506141	CompoundStatement		294:64:6234:6591	1506139	0					
ANR	1506142	IfStatement	if ( len < 1 )		1506139	0					
ANR	1506143	Condition	len < 1	295:5:6241:6247	1506139	0	True				
ANR	1506144	RelationalExpression	len < 1		1506139	0		<			
ANR	1506145	Identifier	len		1506139	0					
ANR	1506146	PrimaryExpression	1		1506139	1					
ANR	1506147	CompoundStatement		2:14:15:15	1506139	1					
ANR	1506148	ExpressionStatement	"eprintf ( ""r_fs_read: too short read\\n"" )"	296:2:6254:6293	1506139	0	True				
ANR	1506149	CallExpression	"eprintf ( ""r_fs_read: too short read\\n"" )"		1506139	0					
ANR	1506150	Callee	eprintf		1506139	0					
ANR	1506151	Identifier	eprintf		1506139	0					
ANR	1506152	ArgumentList	"""r_fs_read: too short read\\n"""		1506139	1					
ANR	1506153	Argument	"""r_fs_read: too short read\\n"""		1506139	0					
ANR	1506154	PrimaryExpression	"""r_fs_read: too short read\\n"""		1506139	0					
ANR	1506155	ReturnStatement	return false ;	297:2:6297:6309	1506139	1	True				
ANR	1506156	Identifier	false		1506139	0					
ANR	1506157	IfStatement	if ( fs && file )		1506139	1					
ANR	1506158	Condition	fs && file	299:5:6319:6328	1506139	0	True				
ANR	1506159	AndExpression	fs && file		1506139	0		&&			
ANR	1506160	Identifier	fs		1506139	0					
ANR	1506161	Identifier	file		1506139	1					
ANR	1506162	CompoundStatement		6:17:96:96	1506139	1					
ANR	1506163	IfStatement	if ( file -> p && file -> p -> read )		1506139	0					
ANR	1506164	Condition	file -> p && file -> p -> read	300:6:6339:6362	1506139	0	True				
ANR	1506165	AndExpression	file -> p && file -> p -> read		1506139	0		&&			
ANR	1506166	PtrMemberAccess	file -> p		1506139	0					
ANR	1506167	Identifier	file		1506139	0					
ANR	1506168	Identifier	p		1506139	1					
ANR	1506169	PtrMemberAccess	file -> p -> read		1506139	1					
ANR	1506170	PtrMemberAccess	file -> p		1506139	0					
ANR	1506171	Identifier	file		1506139	0					
ANR	1506172	Identifier	p		1506139	1					
ANR	1506173	Identifier	read		1506139	1					
ANR	1506174	CompoundStatement		7:32:130:130	1506139	1					
ANR	1506175	IfStatement	if ( ! file -> data )		1506139	0					
ANR	1506176	Condition	! file -> data	301:7:6374:6384	1506139	0	True				
ANR	1506177	UnaryOperationExpression	! file -> data		1506139	0					
ANR	1506178	UnaryOperator	!		1506139	0					
ANR	1506179	PtrMemberAccess	file -> data		1506139	1					
ANR	1506180	Identifier	file		1506139	0					
ANR	1506181	Identifier	data		1506139	1					
ANR	1506182	CompoundStatement		8:20:152:152	1506139	1					
ANR	1506183	ExpressionStatement	free ( file -> data )	302:4:6393:6410	1506139	0	True				
ANR	1506184	CallExpression	free ( file -> data )		1506139	0					
ANR	1506185	Callee	free		1506139	0					
ANR	1506186	Identifier	free		1506139	0					
ANR	1506187	ArgumentList	file -> data		1506139	1					
ANR	1506188	Argument	file -> data		1506139	0					
ANR	1506189	PtrMemberAccess	file -> data		1506139	0					
ANR	1506190	Identifier	file		1506139	0					
ANR	1506191	Identifier	data		1506139	1					
ANR	1506192	ExpressionStatement	"file -> data = calloc ( 1 , len + 1 )"	303:4:6416:6448	1506139	1	True				
ANR	1506193	AssignmentExpression	"file -> data = calloc ( 1 , len + 1 )"		1506139	0		=			
ANR	1506194	PtrMemberAccess	file -> data		1506139	0					
ANR	1506195	Identifier	file		1506139	0					
ANR	1506196	Identifier	data		1506139	1					
ANR	1506197	CallExpression	"calloc ( 1 , len + 1 )"		1506139	1					
ANR	1506198	Callee	calloc		1506139	0					
ANR	1506199	Identifier	calloc		1506139	0					
ANR	1506200	ArgumentList	1		1506139	1					
ANR	1506201	Argument	1		1506139	0					
ANR	1506202	PrimaryExpression	1		1506139	0					
ANR	1506203	Argument	len + 1		1506139	1					
ANR	1506204	AdditiveExpression	len + 1		1506139	0		+			
ANR	1506205	Identifier	len		1506139	0					
ANR	1506206	PrimaryExpression	1		1506139	1					
ANR	1506207	ExpressionStatement	"file -> p -> read ( file , addr , len )"	305:3:6458:6489	1506139	1	True				
ANR	1506208	CallExpression	"file -> p -> read ( file , addr , len )"		1506139	0					
ANR	1506209	Callee	file -> p -> read		1506139	0					
ANR	1506210	PtrMemberAccess	file -> p -> read		1506139	0					
ANR	1506211	PtrMemberAccess	file -> p		1506139	0					
ANR	1506212	Identifier	file		1506139	0					
ANR	1506213	Identifier	p		1506139	1					
ANR	1506214	Identifier	read		1506139	1					
ANR	1506215	ArgumentList	file		1506139	1					
ANR	1506216	Argument	file		1506139	0					
ANR	1506217	Identifier	file		1506139	0					
ANR	1506218	Argument	addr		1506139	1					
ANR	1506219	Identifier	addr		1506139	0					
ANR	1506220	Argument	len		1506139	2					
ANR	1506221	Identifier	len		1506139	0					
ANR	1506222	ReturnStatement	return true ;	306:3:6494:6505	1506139	2	True				
ANR	1506223	Identifier	true		1506139	0					
ANR	1506224	ElseStatement	else		1506139	0					
ANR	1506225	CompoundStatement		14:9:281:281	1506139	0					
ANR	1506226	ExpressionStatement	"eprintf ( ""r_fs_read: file->p->read is null\\n"" )"	308:3:6521:6567	1506139	0	True				
ANR	1506227	CallExpression	"eprintf ( ""r_fs_read: file->p->read is null\\n"" )"		1506139	0					
ANR	1506228	Callee	eprintf		1506139	0					
ANR	1506229	Identifier	eprintf		1506139	0					
ANR	1506230	ArgumentList	"""r_fs_read: file->p->read is null\\n"""		1506139	1					
ANR	1506231	Argument	"""r_fs_read: file->p->read is null\\n"""		1506139	0					
ANR	1506232	PrimaryExpression	"""r_fs_read: file->p->read is null\\n"""		1506139	0					
ANR	1506233	ReturnStatement	return false ;	311:1:6577:6589	1506139	2	True				
ANR	1506234	Identifier	false		1506139	0					
ANR	1506235	ReturnType	R_API int		1506139	1					
ANR	1506236	Identifier	r_fs_read		1506139	2					
ANR	1506237	ParameterList	"RFS * fs , RFSFile * file , ut64 addr , int len"		1506139	3					
ANR	1506238	Parameter	RFS * fs	294:20:6190:6196	1506139	0	True				
ANR	1506239	ParameterType	RFS *		1506139	0					
ANR	1506240	Identifier	fs		1506139	1					
ANR	1506241	Parameter	RFSFile * file	294:29:6199:6211	1506139	1	True				
ANR	1506242	ParameterType	RFSFile *		1506139	0					
ANR	1506243	Identifier	file		1506139	1					
ANR	1506244	Parameter	ut64 addr	294:44:6214:6222	1506139	2	True				
ANR	1506245	ParameterType	ut64		1506139	0					
ANR	1506246	Identifier	addr		1506139	1					
ANR	1506247	Parameter	int len	294:55:6225:6231	1506139	3	True				
ANR	1506248	ParameterType	int		1506139	0					
ANR	1506249	Identifier	len		1506139	1					
ANR	1506250	CFGEntryNode	ENTRY		1506139		True				
ANR	1506251	CFGExitNode	EXIT		1506139		True				
ANR	1506252	Symbol	false		1506139						
ANR	1506253	Symbol	* file -> p		1506139						
ANR	1506254	Symbol	calloc		1506139						
ANR	1506255	Symbol	* file		1506139						
ANR	1506256	Symbol	fs		1506139						
ANR	1506257	Symbol	file		1506139						
ANR	1506258	Symbol	len		1506139						
ANR	1506259	Symbol	file -> p		1506139						
ANR	1506260	Symbol	file -> data		1506139						
ANR	1506261	Symbol	true		1506139						
ANR	1506262	Symbol	file -> p -> read		1506139						
ANR	1506263	Symbol	addr		1506139						
ANR	1506264	Symbol	* * file		1506139						
ANR	1506265	Function	r_fs_dir	314:0:6594:7121							
ANR	1506266	FunctionDef	"r_fs_dir (RFS * fs , const char * p)"		1506265	0					
ANR	1506267	CompoundStatement		314:46:6640:7121	1506265	0					
ANR	1506268	IdentifierDeclStatement	RList * ret = NULL ;	315:1:6643:6660	1506265	0	True				
ANR	1506269	IdentifierDecl	* ret = NULL		1506265	0					
ANR	1506270	IdentifierDeclType	RList *		1506265	0					
ANR	1506271	Identifier	ret		1506265	1					
ANR	1506272	AssignmentExpression	* ret = NULL		1506265	2		=			
ANR	1506273	Identifier	NULL		1506265	0					
ANR	1506274	Identifier	NULL		1506265	1					
ANR	1506275	IdentifierDeclStatement	RFSRoot * root ;	316:1:6663:6676	1506265	1	True				
ANR	1506276	IdentifierDecl	* root		1506265	0					
ANR	1506277	IdentifierDeclType	RFSRoot *		1506265	0					
ANR	1506278	Identifier	root		1506265	1					
ANR	1506279	IdentifierDeclStatement	RListIter * iter ;	317:1:6679:6694	1506265	2	True				
ANR	1506280	IdentifierDecl	* iter		1506265	0					
ANR	1506281	IdentifierDeclType	RListIter *		1506265	0					
ANR	1506282	Identifier	iter		1506265	1					
ANR	1506283	IdentifierDeclStatement	const char * dir ;	318:1:6697:6712	1506265	3	True				
ANR	1506284	IdentifierDecl	* dir		1506265	0					
ANR	1506285	IdentifierDeclType	const char *		1506265	0					
ANR	1506286	Identifier	dir		1506265	1					
ANR	1506287	IdentifierDeclStatement	char * path = strdup ( p ) ;	319:1:6715:6738	1506265	4	True				
ANR	1506288	IdentifierDecl	* path = strdup ( p )		1506265	0					
ANR	1506289	IdentifierDeclType	char *		1506265	0					
ANR	1506290	Identifier	path		1506265	1					
ANR	1506291	AssignmentExpression	* path = strdup ( p )		1506265	2		=			
ANR	1506292	Identifier	path		1506265	0					
ANR	1506293	CallExpression	strdup ( p )		1506265	1					
ANR	1506294	Callee	strdup		1506265	0					
ANR	1506295	Identifier	strdup		1506265	0					
ANR	1506296	ArgumentList	p		1506265	1					
ANR	1506297	Argument	p		1506265	0					
ANR	1506298	Identifier	p		1506265	0					
ANR	1506299	ExpressionStatement	r_str_trim_path ( path )	320:1:6741:6763	1506265	5	True				
ANR	1506300	CallExpression	r_str_trim_path ( path )		1506265	0					
ANR	1506301	Callee	r_str_trim_path		1506265	0					
ANR	1506302	Identifier	r_str_trim_path		1506265	0					
ANR	1506303	ArgumentList	path		1506265	1					
ANR	1506304	Argument	path		1506265	0					
ANR	1506305	Identifier	path		1506265	0					
ANR	1506306	IdentifierDeclStatement	"RList * roots = r_fs_root ( fs , path ) ;"	321:1:6766:6801	1506265	6	True				
ANR	1506307	IdentifierDecl	"* roots = r_fs_root ( fs , path )"		1506265	0					
ANR	1506308	IdentifierDeclType	RList *		1506265	0					
ANR	1506309	Identifier	roots		1506265	1					
ANR	1506310	AssignmentExpression	"* roots = r_fs_root ( fs , path )"		1506265	2		=			
ANR	1506311	Identifier	roots		1506265	0					
ANR	1506312	CallExpression	"r_fs_root ( fs , path )"		1506265	1					
ANR	1506313	Callee	r_fs_root		1506265	0					
ANR	1506314	Identifier	r_fs_root		1506265	0					
ANR	1506315	ArgumentList	fs		1506265	1					
ANR	1506316	Argument	fs		1506265	0					
ANR	1506317	Identifier	fs		1506265	0					
ANR	1506318	Argument	path		1506265	1					
ANR	1506319	Identifier	path		1506265	0					
ANR	1506320	Statement	r_list_foreach	322:1:6804:6817	1506265	7	True				
ANR	1506321	Statement	(	322:16:6819:6819	1506265	8	True				
ANR	1506322	Statement	roots	322:17:6820:6824	1506265	9	True				
ANR	1506323	Statement	","	322:22:6825:6825	1506265	10	True				
ANR	1506324	Statement	iter	322:24:6827:6830	1506265	11	True				
ANR	1506325	Statement	","	322:28:6831:6831	1506265	12	True				
ANR	1506326	Statement	root	322:30:6833:6836	1506265	13	True				
ANR	1506327	Statement	)	322:34:6837:6837	1506265	14	True				
ANR	1506328	CompoundStatement		9:36:198:198	1506265	15					
ANR	1506329	IfStatement	if ( root )		1506265	0					
ANR	1506330	Condition	root	323:6:6847:6850	1506265	0	True				
ANR	1506331	Identifier	root		1506265	0					
ANR	1506332	CompoundStatement		10:12:212:212	1506265	1					
ANR	1506333	IfStatement	if ( strlen ( root -> path ) == 1 )		1506265	0					
ANR	1506334	Condition	strlen ( root -> path ) == 1	324:7:6862:6885	1506265	0	True				
ANR	1506335	EqualityExpression	strlen ( root -> path ) == 1		1506265	0		==			
ANR	1506336	CallExpression	strlen ( root -> path )		1506265	0					
ANR	1506337	Callee	strlen		1506265	0					
ANR	1506338	Identifier	strlen		1506265	0					
ANR	1506339	ArgumentList	root -> path		1506265	1					
ANR	1506340	Argument	root -> path		1506265	0					
ANR	1506341	PtrMemberAccess	root -> path		1506265	0					
ANR	1506342	Identifier	root		1506265	0					
ANR	1506343	Identifier	path		1506265	1					
ANR	1506344	PrimaryExpression	1		1506265	1					
ANR	1506345	CompoundStatement		11:33:247:247	1506265	1					
ANR	1506346	ExpressionStatement	dir = path	325:4:6894:6904	1506265	0	True				
ANR	1506347	AssignmentExpression	dir = path		1506265	0		=			
ANR	1506348	Identifier	dir		1506265	0					
ANR	1506349	Identifier	path		1506265	1					
ANR	1506350	ElseStatement	else		1506265	0					
ANR	1506351	CompoundStatement		13:10:275:275	1506265	0					
ANR	1506352	ExpressionStatement	dir = path + strlen ( root -> path )	327:4:6922:6954	1506265	0	True				
ANR	1506353	AssignmentExpression	dir = path + strlen ( root -> path )		1506265	0		=			
ANR	1506354	Identifier	dir		1506265	0					
ANR	1506355	AdditiveExpression	path + strlen ( root -> path )		1506265	1		+			
ANR	1506356	Identifier	path		1506265	0					
ANR	1506357	CallExpression	strlen ( root -> path )		1506265	1					
ANR	1506358	Callee	strlen		1506265	0					
ANR	1506359	Identifier	strlen		1506265	0					
ANR	1506360	ArgumentList	root -> path		1506265	1					
ANR	1506361	Argument	root -> path		1506265	0					
ANR	1506362	PtrMemberAccess	root -> path		1506265	0					
ANR	1506363	Identifier	root		1506265	0					
ANR	1506364	Identifier	path		1506265	1					
ANR	1506365	IfStatement	if ( ! * dir )		1506265	1					
ANR	1506366	Condition	! * dir	329:7:6968:6972	1506265	0	True				
ANR	1506367	UnaryOperationExpression	! * dir		1506265	0					
ANR	1506368	UnaryOperator	!		1506265	0					
ANR	1506369	UnaryOperationExpression	* dir		1506265	1					
ANR	1506370	UnaryOperator	*		1506265	0					
ANR	1506371	Identifier	dir		1506265	1					
ANR	1506372	CompoundStatement		16:14:334:334	1506265	1					
ANR	1506373	ExpressionStatement	"dir = ""/"""	330:4:6981:6990	1506265	0	True				
ANR	1506374	AssignmentExpression	"dir = ""/"""		1506265	0		=			
ANR	1506375	Identifier	dir		1506265	0					
ANR	1506376	PrimaryExpression	"""/"""		1506265	1					
ANR	1506377	ExpressionStatement	"ret = root -> p -> dir ( root , dir , fs -> view )"	332:3:7000:7040	1506265	2	True				
ANR	1506378	AssignmentExpression	"ret = root -> p -> dir ( root , dir , fs -> view )"		1506265	0		=			
ANR	1506379	Identifier	ret		1506265	0					
ANR	1506380	CallExpression	"root -> p -> dir ( root , dir , fs -> view )"		1506265	1					
ANR	1506381	Callee	root -> p -> dir		1506265	0					
ANR	1506382	PtrMemberAccess	root -> p -> dir		1506265	0					
ANR	1506383	PtrMemberAccess	root -> p		1506265	0					
ANR	1506384	Identifier	root		1506265	0					
ANR	1506385	Identifier	p		1506265	1					
ANR	1506386	Identifier	dir		1506265	1					
ANR	1506387	ArgumentList	root		1506265	1					
ANR	1506388	Argument	root		1506265	0					
ANR	1506389	Identifier	root		1506265	0					
ANR	1506390	Argument	dir		1506265	1					
ANR	1506391	Identifier	dir		1506265	0					
ANR	1506392	Argument	fs -> view		1506265	2					
ANR	1506393	PtrMemberAccess	fs -> view		1506265	0					
ANR	1506394	Identifier	fs		1506265	0					
ANR	1506395	Identifier	view		1506265	1					
ANR	1506396	IfStatement	if ( ret )		1506265	3					
ANR	1506397	Condition	ret	333:7:7049:7051	1506265	0	True				
ANR	1506398	Identifier	ret		1506265	0					
ANR	1506399	CompoundStatement		20:12:413:413	1506265	1					
ANR	1506400	BreakStatement	break ;	334:4:7060:7065	1506265	0	True				
ANR	1506401	ExpressionStatement	free ( roots )	338:1:7080:7092	1506265	16	True				
ANR	1506402	CallExpression	free ( roots )		1506265	0					
ANR	1506403	Callee	free		1506265	0					
ANR	1506404	Identifier	free		1506265	0					
ANR	1506405	ArgumentList	roots		1506265	1					
ANR	1506406	Argument	roots		1506265	0					
ANR	1506407	Identifier	roots		1506265	0					
ANR	1506408	ExpressionStatement	free ( path )	339:1:7095:7106	1506265	17	True				
ANR	1506409	CallExpression	free ( path )		1506265	0					
ANR	1506410	Callee	free		1506265	0					
ANR	1506411	Identifier	free		1506265	0					
ANR	1506412	ArgumentList	path		1506265	1					
ANR	1506413	Argument	path		1506265	0					
ANR	1506414	Identifier	path		1506265	0					
ANR	1506415	ReturnStatement	return ret ;	340:1:7109:7119	1506265	18	True				
ANR	1506416	Identifier	ret		1506265	0					
ANR	1506417	ReturnType	R_API RList *		1506265	1					
ANR	1506418	Identifier	r_fs_dir		1506265	2					
ANR	1506419	ParameterList	"RFS * fs , const char * p"		1506265	3					
ANR	1506420	Parameter	RFS * fs	314:22:6616:6622	1506265	0	True				
ANR	1506421	ParameterType	RFS *		1506265	0					
ANR	1506422	Identifier	fs		1506265	1					
ANR	1506423	Parameter	const char * p	314:31:6625:6637	1506265	1	True				
ANR	1506424	ParameterType	const char *		1506265	0					
ANR	1506425	Identifier	p		1506265	1					
ANR	1506426	CFGEntryNode	ENTRY		1506265		True				
ANR	1506427	CFGExitNode	EXIT		1506265		True				
ANR	1506428	CFGErrorNode	ERROR		1506265		True				
ANR	1506429	Symbol	ret		1506265						
ANR	1506430	Symbol	NULL		1506265						
ANR	1506431	Symbol	* root -> p		1506265						
ANR	1506432	Symbol	fs -> view		1506265						
ANR	1506433	Symbol	root -> p		1506265						
ANR	1506434	Symbol	* dir		1506265						
ANR	1506435	Symbol	iter		1506265						
ANR	1506436	Symbol	roots		1506265						
ANR	1506437	Symbol	dir		1506265						
ANR	1506438	Symbol	fs		1506265						
ANR	1506439	Symbol	p		1506265						
ANR	1506440	Symbol	root -> p -> dir		1506265						
ANR	1506441	Symbol	* fs		1506265						
ANR	1506442	Symbol	path		1506265						
ANR	1506443	Symbol	strlen		1506265						
ANR	1506444	Symbol	* * root		1506265						
ANR	1506445	Symbol	r_fs_root		1506265						
ANR	1506446	Symbol	root		1506265						
ANR	1506447	Symbol	root -> path		1506265						
ANR	1506448	Symbol	strdup		1506265						
ANR	1506449	Symbol	* root		1506265						
ANR	1506450	Function	r_fs_dir_dump	343:0:7124:8477							
ANR	1506451	FunctionDef	"r_fs_dir_dump (RFS * fs , const char * path , const char * name)"		1506450	0					
ANR	1506452	CompoundStatement		343:69:7193:8477	1506450	0					
ANR	1506453	IdentifierDeclStatement	RList * list ;	344:1:7196:7207	1506450	0	True				
ANR	1506454	IdentifierDecl	* list		1506450	0					
ANR	1506455	IdentifierDeclType	RList *		1506450	0					
ANR	1506456	Identifier	list		1506450	1					
ANR	1506457	IdentifierDeclStatement	RListIter * iter ;	345:1:7210:7225	1506450	1	True				
ANR	1506458	IdentifierDecl	* iter		1506450	0					
ANR	1506459	IdentifierDeclType	RListIter *		1506450	0					
ANR	1506460	Identifier	iter		1506450	1					
ANR	1506461	IdentifierDeclStatement	"RFSFile * file , * item ;"	346:1:7228:7249	1506450	2	True				
ANR	1506462	IdentifierDecl	* file		1506450	0					
ANR	1506463	IdentifierDeclType	RFSFile *		1506450	0					
ANR	1506464	Identifier	file		1506450	1					
ANR	1506465	IdentifierDecl	* item		1506450	1					
ANR	1506466	IdentifierDeclType	RFSFile *		1506450	0					
ANR	1506467	Identifier	item		1506450	1					
ANR	1506468	IdentifierDeclStatement	"char * str , * npath ;"	347:1:7252:7270	1506450	3	True				
ANR	1506469	IdentifierDecl	* str		1506450	0					
ANR	1506470	IdentifierDeclType	char *		1506450	0					
ANR	1506471	Identifier	str		1506450	1					
ANR	1506472	IdentifierDecl	* npath		1506450	1					
ANR	1506473	IdentifierDeclType	char *		1506450	0					
ANR	1506474	Identifier	npath		1506450	1					
ANR	1506475	ExpressionStatement	"list = r_fs_dir ( fs , path )"	349:1:7274:7300	1506450	4	True				
ANR	1506476	AssignmentExpression	"list = r_fs_dir ( fs , path )"		1506450	0		=			
ANR	1506477	Identifier	list		1506450	0					
ANR	1506478	CallExpression	"r_fs_dir ( fs , path )"		1506450	1					
ANR	1506479	Callee	r_fs_dir		1506450	0					
ANR	1506480	Identifier	r_fs_dir		1506450	0					
ANR	1506481	ArgumentList	fs		1506450	1					
ANR	1506482	Argument	fs		1506450	0					
ANR	1506483	Identifier	fs		1506450	0					
ANR	1506484	Argument	path		1506450	1					
ANR	1506485	Identifier	path		1506450	0					
ANR	1506486	IfStatement	if ( ! list )		1506450	5					
ANR	1506487	Condition	! list	350:5:7307:7311	1506450	0	True				
ANR	1506488	UnaryOperationExpression	! list		1506450	0					
ANR	1506489	UnaryOperator	!		1506450	0					
ANR	1506490	Identifier	list		1506450	1					
ANR	1506491	CompoundStatement		8:12:120:120	1506450	1					
ANR	1506492	ReturnStatement	return false ;	351:2:7318:7330	1506450	0	True				
ANR	1506493	Identifier	false		1506450	0					
ANR	1506494	IfStatement	if ( ! r_sys_mkdir ( name ) )		1506450	6					
ANR	1506495	Condition	! r_sys_mkdir ( name )	353:5:7340:7358	1506450	0	True				
ANR	1506496	UnaryOperationExpression	! r_sys_mkdir ( name )		1506450	0					
ANR	1506497	UnaryOperator	!		1506450	0					
ANR	1506498	CallExpression	r_sys_mkdir ( name )		1506450	1					
ANR	1506499	Callee	r_sys_mkdir		1506450	0					
ANR	1506500	Identifier	r_sys_mkdir		1506450	0					
ANR	1506501	ArgumentList	name		1506450	1					
ANR	1506502	Argument	name		1506450	0					
ANR	1506503	Identifier	name		1506450	0					
ANR	1506504	CompoundStatement		11:26:167:167	1506450	1					
ANR	1506505	IfStatement	if ( r_sys_mkdir_failed ( ) )		1506450	0					
ANR	1506506	Condition	r_sys_mkdir_failed ( )	354:6:7369:7389	1506450	0	True				
ANR	1506507	CallExpression	r_sys_mkdir_failed ( )		1506450	0					
ANR	1506508	Callee	r_sys_mkdir_failed		1506450	0					
ANR	1506509	Identifier	r_sys_mkdir_failed		1506450	0					
ANR	1506510	ArgumentList			1506450	1					
ANR	1506511	CompoundStatement		12:29:198:198	1506450	1					
ANR	1506512	ExpressionStatement	"eprintf ( ""Cannot create \\""%s\\""\\n"" , name )"	355:3:7397:7437	1506450	0	True				
ANR	1506513	CallExpression	"eprintf ( ""Cannot create \\""%s\\""\\n"" , name )"		1506450	0					
ANR	1506514	Callee	eprintf		1506450	0					
ANR	1506515	Identifier	eprintf		1506450	0					
ANR	1506516	ArgumentList	"""Cannot create \\""%s\\""\\n"""		1506450	1					
ANR	1506517	Argument	"""Cannot create \\""%s\\""\\n"""		1506450	0					
ANR	1506518	PrimaryExpression	"""Cannot create \\""%s\\""\\n"""		1506450	0					
ANR	1506519	Argument	name		1506450	1					
ANR	1506520	Identifier	name		1506450	0					
ANR	1506521	ReturnStatement	return false ;	356:3:7442:7454	1506450	1	True				
ANR	1506522	Identifier	false		1506450	0					
ANR	1506523	Statement	r_list_foreach	359:1:7464:7477	1506450	7	True				
ANR	1506524	Statement	(	359:16:7479:7479	1506450	8	True				
ANR	1506525	Statement	list	359:17:7480:7483	1506450	9	True				
ANR	1506526	Statement	","	359:21:7484:7484	1506450	10	True				
ANR	1506527	Statement	iter	359:23:7486:7489	1506450	11	True				
ANR	1506528	Statement	","	359:27:7490:7490	1506450	12	True				
ANR	1506529	Statement	file	359:29:7492:7495	1506450	13	True				
ANR	1506530	Statement	)	359:33:7496:7496	1506450	14	True				
ANR	1506531	CompoundStatement		17:35:304:304	1506450	15					
ANR	1506532	IfStatement	"if ( ! strcmp ( file -> name , ""."" ) || ! strcmp ( file -> name , "".."" ) )"		1506450	0					
ANR	1506533	Condition	"! strcmp ( file -> name , ""."" ) || ! strcmp ( file -> name , "".."" )"	360:6:7506:7560	1506450	0	True				
ANR	1506534	OrExpression	"! strcmp ( file -> name , ""."" ) || ! strcmp ( file -> name , "".."" )"		1506450	0		||			
ANR	1506535	UnaryOperationExpression	"! strcmp ( file -> name , ""."" )"		1506450	0					
ANR	1506536	UnaryOperator	!		1506450	0					
ANR	1506537	CallExpression	"strcmp ( file -> name , ""."" )"		1506450	1					
ANR	1506538	Callee	strcmp		1506450	0					
ANR	1506539	Identifier	strcmp		1506450	0					
ANR	1506540	ArgumentList	file -> name		1506450	1					
ANR	1506541	Argument	file -> name		1506450	0					
ANR	1506542	PtrMemberAccess	file -> name		1506450	0					
ANR	1506543	Identifier	file		1506450	0					
ANR	1506544	Identifier	name		1506450	1					
ANR	1506545	Argument	"""."""		1506450	1					
ANR	1506546	PrimaryExpression	"""."""		1506450	0					
ANR	1506547	UnaryOperationExpression	"! strcmp ( file -> name , "".."" )"		1506450	1					
ANR	1506548	UnaryOperator	!		1506450	0					
ANR	1506549	CallExpression	"strcmp ( file -> name , "".."" )"		1506450	1					
ANR	1506550	Callee	strcmp		1506450	0					
ANR	1506551	Identifier	strcmp		1506450	0					
ANR	1506552	ArgumentList	file -> name		1506450	1					
ANR	1506553	Argument	file -> name		1506450	0					
ANR	1506554	PtrMemberAccess	file -> name		1506450	0					
ANR	1506555	Identifier	file		1506450	0					
ANR	1506556	Identifier	name		1506450	1					
ANR	1506557	Argument	""".."""		1506450	1					
ANR	1506558	PrimaryExpression	""".."""		1506450	0					
ANR	1506559	CompoundStatement		18:63:369:369	1506450	1					
ANR	1506560	ContinueStatement	continue ;	361:3:7568:7576	1506450	0	True				
ANR	1506561	ExpressionStatement	str = ( char * ) malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )	363:2:7584:7646	1506450	1	True				
ANR	1506562	AssignmentExpression	str = ( char * ) malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )		1506450	0		=			
ANR	1506563	Identifier	str		1506450	0					
ANR	1506564	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )		1506450	1					
ANR	1506565	CastTarget	char *		1506450	0					
ANR	1506566	CallExpression	malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )		1506450	1					
ANR	1506567	Callee	malloc		1506450	0					
ANR	1506568	Identifier	malloc		1506450	0					
ANR	1506569	ArgumentList	strlen ( name ) + strlen ( file -> name ) + 2		1506450	1					
ANR	1506570	Argument	strlen ( name ) + strlen ( file -> name ) + 2		1506450	0					
ANR	1506571	AdditiveExpression	strlen ( name ) + strlen ( file -> name ) + 2		1506450	0		+			
ANR	1506572	CallExpression	strlen ( name )		1506450	0					
ANR	1506573	Callee	strlen		1506450	0					
ANR	1506574	Identifier	strlen		1506450	0					
ANR	1506575	ArgumentList	name		1506450	1					
ANR	1506576	Argument	name		1506450	0					
ANR	1506577	Identifier	name		1506450	0					
ANR	1506578	AdditiveExpression	strlen ( file -> name ) + 2		1506450	1		+			
ANR	1506579	CallExpression	strlen ( file -> name )		1506450	0					
ANR	1506580	Callee	strlen		1506450	0					
ANR	1506581	Identifier	strlen		1506450	0					
ANR	1506582	ArgumentList	file -> name		1506450	1					
ANR	1506583	Argument	file -> name		1506450	0					
ANR	1506584	PtrMemberAccess	file -> name		1506450	0					
ANR	1506585	Identifier	file		1506450	0					
ANR	1506586	Identifier	name		1506450	1					
ANR	1506587	PrimaryExpression	2		1506450	1					
ANR	1506588	IfStatement	if ( ! str )		1506450	2					
ANR	1506589	Condition	! str	364:6:7654:7657	1506450	0	True				
ANR	1506590	UnaryOperationExpression	! str		1506450	0					
ANR	1506591	UnaryOperator	!		1506450	0					
ANR	1506592	Identifier	str		1506450	1					
ANR	1506593	CompoundStatement		22:12:466:466	1506450	1					
ANR	1506594	ReturnStatement	return false ;	365:3:7665:7677	1506450	0	True				
ANR	1506595	Identifier	false		1506450	0					
ANR	1506596	ExpressionStatement	"strcpy ( str , name )"	367:2:7685:7703	1506450	3	True				
ANR	1506597	CallExpression	"strcpy ( str , name )"		1506450	0					
ANR	1506598	Callee	strcpy		1506450	0					
ANR	1506599	Identifier	strcpy		1506450	0					
ANR	1506600	ArgumentList	str		1506450	1					
ANR	1506601	Argument	str		1506450	0					
ANR	1506602	Identifier	str		1506450	0					
ANR	1506603	Argument	name		1506450	1					
ANR	1506604	Identifier	name		1506450	0					
ANR	1506605	ExpressionStatement	"strcat ( str , ""/"" )"	368:2:7707:7724	1506450	4	True				
ANR	1506606	CallExpression	"strcat ( str , ""/"" )"		1506450	0					
ANR	1506607	Callee	strcat		1506450	0					
ANR	1506608	Identifier	strcat		1506450	0					
ANR	1506609	ArgumentList	str		1506450	1					
ANR	1506610	Argument	str		1506450	0					
ANR	1506611	Identifier	str		1506450	0					
ANR	1506612	Argument	"""/"""		1506450	1					
ANR	1506613	PrimaryExpression	"""/"""		1506450	0					
ANR	1506614	ExpressionStatement	"strcat ( str , file -> name )"	369:2:7728:7752	1506450	5	True				
ANR	1506615	CallExpression	"strcat ( str , file -> name )"		1506450	0					
ANR	1506616	Callee	strcat		1506450	0					
ANR	1506617	Identifier	strcat		1506450	0					
ANR	1506618	ArgumentList	str		1506450	1					
ANR	1506619	Argument	str		1506450	0					
ANR	1506620	Identifier	str		1506450	0					
ANR	1506621	Argument	file -> name		1506450	1					
ANR	1506622	PtrMemberAccess	file -> name		1506450	0					
ANR	1506623	Identifier	file		1506450	0					
ANR	1506624	Identifier	name		1506450	1					
ANR	1506625	ExpressionStatement	npath = malloc ( strlen ( path ) + strlen ( file -> name ) + 2 )	370:2:7756:7812	1506450	6	True				
ANR	1506626	AssignmentExpression	npath = malloc ( strlen ( path ) + strlen ( file -> name ) + 2 )		1506450	0		=			
ANR	1506627	Identifier	npath		1506450	0					
ANR	1506628	CallExpression	malloc ( strlen ( path ) + strlen ( file -> name ) + 2 )		1506450	1					
ANR	1506629	Callee	malloc		1506450	0					
ANR	1506630	Identifier	malloc		1506450	0					
ANR	1506631	ArgumentList	strlen ( path ) + strlen ( file -> name ) + 2		1506450	1					
ANR	1506632	Argument	strlen ( path ) + strlen ( file -> name ) + 2		1506450	0					
ANR	1506633	AdditiveExpression	strlen ( path ) + strlen ( file -> name ) + 2		1506450	0		+			
ANR	1506634	CallExpression	strlen ( path )		1506450	0					
ANR	1506635	Callee	strlen		1506450	0					
ANR	1506636	Identifier	strlen		1506450	0					
ANR	1506637	ArgumentList	path		1506450	1					
ANR	1506638	Argument	path		1506450	0					
ANR	1506639	Identifier	path		1506450	0					
ANR	1506640	AdditiveExpression	strlen ( file -> name ) + 2		1506450	1		+			
ANR	1506641	CallExpression	strlen ( file -> name )		1506450	0					
ANR	1506642	Callee	strlen		1506450	0					
ANR	1506643	Identifier	strlen		1506450	0					
ANR	1506644	ArgumentList	file -> name		1506450	1					
ANR	1506645	Argument	file -> name		1506450	0					
ANR	1506646	PtrMemberAccess	file -> name		1506450	0					
ANR	1506647	Identifier	file		1506450	0					
ANR	1506648	Identifier	name		1506450	1					
ANR	1506649	PrimaryExpression	2		1506450	1					
ANR	1506650	IfStatement	if ( ! npath )		1506450	7					
ANR	1506651	Condition	! npath	371:6:7820:7825	1506450	0	True				
ANR	1506652	UnaryOperationExpression	! npath		1506450	0					
ANR	1506653	UnaryOperator	!		1506450	0					
ANR	1506654	Identifier	npath		1506450	1					
ANR	1506655	CompoundStatement		29:14:634:634	1506450	1					
ANR	1506656	ExpressionStatement	free ( str )	372:3:7833:7843	1506450	0	True				
ANR	1506657	CallExpression	free ( str )		1506450	0					
ANR	1506658	Callee	free		1506450	0					
ANR	1506659	Identifier	free		1506450	0					
ANR	1506660	ArgumentList	str		1506450	1					
ANR	1506661	Argument	str		1506450	0					
ANR	1506662	Identifier	str		1506450	0					
ANR	1506663	ReturnStatement	return false ;	373:3:7848:7860	1506450	1	True				
ANR	1506664	Identifier	false		1506450	0					
ANR	1506665	ExpressionStatement	"strcpy ( npath , path )"	375:2:7868:7888	1506450	8	True				
ANR	1506666	CallExpression	"strcpy ( npath , path )"		1506450	0					
ANR	1506667	Callee	strcpy		1506450	0					
ANR	1506668	Identifier	strcpy		1506450	0					
ANR	1506669	ArgumentList	npath		1506450	1					
ANR	1506670	Argument	npath		1506450	0					
ANR	1506671	Identifier	npath		1506450	0					
ANR	1506672	Argument	path		1506450	1					
ANR	1506673	Identifier	path		1506450	0					
ANR	1506674	ExpressionStatement	"strcat ( npath , ""/"" )"	376:2:7892:7911	1506450	9	True				
ANR	1506675	CallExpression	"strcat ( npath , ""/"" )"		1506450	0					
ANR	1506676	Callee	strcat		1506450	0					
ANR	1506677	Identifier	strcat		1506450	0					
ANR	1506678	ArgumentList	npath		1506450	1					
ANR	1506679	Argument	npath		1506450	0					
ANR	1506680	Identifier	npath		1506450	0					
ANR	1506681	Argument	"""/"""		1506450	1					
ANR	1506682	PrimaryExpression	"""/"""		1506450	0					
ANR	1506683	ExpressionStatement	"strcat ( npath , file -> name )"	377:2:7915:7941	1506450	10	True				
ANR	1506684	CallExpression	"strcat ( npath , file -> name )"		1506450	0					
ANR	1506685	Callee	strcat		1506450	0					
ANR	1506686	Identifier	strcat		1506450	0					
ANR	1506687	ArgumentList	npath		1506450	1					
ANR	1506688	Argument	npath		1506450	0					
ANR	1506689	Identifier	npath		1506450	0					
ANR	1506690	Argument	file -> name		1506450	1					
ANR	1506691	PtrMemberAccess	file -> name		1506450	0					
ANR	1506692	Identifier	file		1506450	0					
ANR	1506693	Identifier	name		1506450	1					
ANR	1506694	SwitchStatement	switch ( file -> type )		1506450	11					
ANR	1506695	Condition	file -> type	378:10:7953:7962	1506450	0	True				
ANR	1506696	PtrMemberAccess	file -> type		1506450	0					
ANR	1506697	Identifier	file		1506450	0					
ANR	1506698	Identifier	type		1506450	1					
ANR	1506699	CompoundStatement		36:22:771:771	1506450	1					
ANR	1506700	Label	case R_FS_FILE_TYPE_DIRECTORY :	380:2:7999:8028	1506450	0	True				
ANR	1506701	Identifier	R_FS_FILE_TYPE_DIRECTORY		1506450	0					
ANR	1506702	IfStatement	"if ( ! r_fs_dir_dump ( fs , npath , str ) )"		1506450	1					
ANR	1506703	Condition	"! r_fs_dir_dump ( fs , npath , str )"	381:7:8037:8067	1506450	0	True				
ANR	1506704	UnaryOperationExpression	"! r_fs_dir_dump ( fs , npath , str )"		1506450	0					
ANR	1506705	UnaryOperator	!		1506450	0					
ANR	1506706	CallExpression	"r_fs_dir_dump ( fs , npath , str )"		1506450	1					
ANR	1506707	Callee	r_fs_dir_dump		1506450	0					
ANR	1506708	Identifier	r_fs_dir_dump		1506450	0					
ANR	1506709	ArgumentList	fs		1506450	1					
ANR	1506710	Argument	fs		1506450	0					
ANR	1506711	Identifier	fs		1506450	0					
ANR	1506712	Argument	npath		1506450	1					
ANR	1506713	Identifier	npath		1506450	0					
ANR	1506714	Argument	str		1506450	2					
ANR	1506715	Identifier	str		1506450	0					
ANR	1506716	CompoundStatement		39:40:876:876	1506450	1					
ANR	1506717	ExpressionStatement	free ( npath )	382:4:8076:8088	1506450	0	True				
ANR	1506718	CallExpression	free ( npath )		1506450	0					
ANR	1506719	Callee	free		1506450	0					
ANR	1506720	Identifier	free		1506450	0					
ANR	1506721	ArgumentList	npath		1506450	1					
ANR	1506722	Argument	npath		1506450	0					
ANR	1506723	Identifier	npath		1506450	0					
ANR	1506724	ExpressionStatement	free ( str )	383:4:8094:8104	1506450	1	True				
ANR	1506725	CallExpression	free ( str )		1506450	0					
ANR	1506726	Callee	free		1506450	0					
ANR	1506727	Identifier	free		1506450	0					
ANR	1506728	ArgumentList	str		1506450	1					
ANR	1506729	Argument	str		1506450	0					
ANR	1506730	Identifier	str		1506450	0					
ANR	1506731	ReturnStatement	return false ;	384:4:8110:8122	1506450	2	True				
ANR	1506732	Identifier	false		1506450	0					
ANR	1506733	BreakStatement	break ;	386:3:8132:8137	1506450	2	True				
ANR	1506734	Label	case R_FS_FILE_TYPE_REGULAR :	387:2:8141:8168	1506450	3	True				
ANR	1506735	Identifier	R_FS_FILE_TYPE_REGULAR		1506450	0					
ANR	1506736	ExpressionStatement	"item = r_fs_open ( fs , npath , false )"	388:3:8173:8208	1506450	4	True				
ANR	1506737	AssignmentExpression	"item = r_fs_open ( fs , npath , false )"		1506450	0		=			
ANR	1506738	Identifier	item		1506450	0					
ANR	1506739	CallExpression	"r_fs_open ( fs , npath , false )"		1506450	1					
ANR	1506740	Callee	r_fs_open		1506450	0					
ANR	1506741	Identifier	r_fs_open		1506450	0					
ANR	1506742	ArgumentList	fs		1506450	1					
ANR	1506743	Argument	fs		1506450	0					
ANR	1506744	Identifier	fs		1506450	0					
ANR	1506745	Argument	npath		1506450	1					
ANR	1506746	Identifier	npath		1506450	0					
ANR	1506747	Argument	false		1506450	2					
ANR	1506748	Identifier	false		1506450	0					
ANR	1506749	IfStatement	if ( item )		1506450	5					
ANR	1506750	Condition	item	389:7:8217:8220	1506450	0	True				
ANR	1506751	Identifier	item		1506450	0					
ANR	1506752	CompoundStatement		47:13:1029:1029	1506450	1					
ANR	1506753	ExpressionStatement	"r_fs_read ( fs , item , 0 , item -> size )"	390:4:8229:8264	1506450	0	True				
ANR	1506754	CallExpression	"r_fs_read ( fs , item , 0 , item -> size )"		1506450	0					
ANR	1506755	Callee	r_fs_read		1506450	0					
ANR	1506756	Identifier	r_fs_read		1506450	0					
ANR	1506757	ArgumentList	fs		1506450	1					
ANR	1506758	Argument	fs		1506450	0					
ANR	1506759	Identifier	fs		1506450	0					
ANR	1506760	Argument	item		1506450	1					
ANR	1506761	Identifier	item		1506450	0					
ANR	1506762	Argument	0		1506450	2					
ANR	1506763	PrimaryExpression	0		1506450	0					
ANR	1506764	Argument	item -> size		1506450	3					
ANR	1506765	PtrMemberAccess	item -> size		1506450	0					
ANR	1506766	Identifier	item		1506450	0					
ANR	1506767	Identifier	size		1506450	1					
ANR	1506768	IfStatement	"if ( ! r_file_dump ( str , item -> data , item -> size , 0 ) )"		1506450	1					
ANR	1506769	Condition	"! r_file_dump ( str , item -> data , item -> size , 0 )"	391:8:8274:8318	1506450	0	True				
ANR	1506770	UnaryOperationExpression	"! r_file_dump ( str , item -> data , item -> size , 0 )"		1506450	0					
ANR	1506771	UnaryOperator	!		1506450	0					
ANR	1506772	CallExpression	"r_file_dump ( str , item -> data , item -> size , 0 )"		1506450	1					
ANR	1506773	Callee	r_file_dump		1506450	0					
ANR	1506774	Identifier	r_file_dump		1506450	0					
ANR	1506775	ArgumentList	str		1506450	1					
ANR	1506776	Argument	str		1506450	0					
ANR	1506777	Identifier	str		1506450	0					
ANR	1506778	Argument	item -> data		1506450	1					
ANR	1506779	PtrMemberAccess	item -> data		1506450	0					
ANR	1506780	Identifier	item		1506450	0					
ANR	1506781	Identifier	data		1506450	1					
ANR	1506782	Argument	item -> size		1506450	2					
ANR	1506783	PtrMemberAccess	item -> size		1506450	0					
ANR	1506784	Identifier	item		1506450	0					
ANR	1506785	Identifier	size		1506450	1					
ANR	1506786	Argument	0		1506450	3					
ANR	1506787	PrimaryExpression	0		1506450	0					
ANR	1506788	CompoundStatement		49:55:1127:1127	1506450	1					
ANR	1506789	ExpressionStatement	free ( npath )	392:5:8328:8340	1506450	0	True				
ANR	1506790	CallExpression	free ( npath )		1506450	0					
ANR	1506791	Callee	free		1506450	0					
ANR	1506792	Identifier	free		1506450	0					
ANR	1506793	ArgumentList	npath		1506450	1					
ANR	1506794	Argument	npath		1506450	0					
ANR	1506795	Identifier	npath		1506450	0					
ANR	1506796	ExpressionStatement	free ( str )	393:5:8347:8357	1506450	1	True				
ANR	1506797	CallExpression	free ( str )		1506450	0					
ANR	1506798	Callee	free		1506450	0					
ANR	1506799	Identifier	free		1506450	0					
ANR	1506800	ArgumentList	str		1506450	1					
ANR	1506801	Argument	str		1506450	0					
ANR	1506802	Identifier	str		1506450	0					
ANR	1506803	ReturnStatement	return false ;	394:5:8364:8376	1506450	2	True				
ANR	1506804	Identifier	false		1506450	0					
ANR	1506805	ExpressionStatement	"r_fs_close ( fs , item )"	396:4:8388:8409	1506450	2	True				
ANR	1506806	CallExpression	"r_fs_close ( fs , item )"		1506450	0					
ANR	1506807	Callee	r_fs_close		1506450	0					
ANR	1506808	Identifier	r_fs_close		1506450	0					
ANR	1506809	ArgumentList	fs		1506450	1					
ANR	1506810	Argument	fs		1506450	0					
ANR	1506811	Identifier	fs		1506450	0					
ANR	1506812	Argument	item		1506450	1					
ANR	1506813	Identifier	item		1506450	0					
ANR	1506814	BreakStatement	break ;	398:3:8419:8424	1506450	6	True				
ANR	1506815	ExpressionStatement	free ( npath )	400:2:8432:8444	1506450	12	True				
ANR	1506816	CallExpression	free ( npath )		1506450	0					
ANR	1506817	Callee	free		1506450	0					
ANR	1506818	Identifier	free		1506450	0					
ANR	1506819	ArgumentList	npath		1506450	1					
ANR	1506820	Argument	npath		1506450	0					
ANR	1506821	Identifier	npath		1506450	0					
ANR	1506822	ExpressionStatement	free ( str )	401:2:8448:8458	1506450	13	True				
ANR	1506823	CallExpression	free ( str )		1506450	0					
ANR	1506824	Callee	free		1506450	0					
ANR	1506825	Identifier	free		1506450	0					
ANR	1506826	ArgumentList	str		1506450	1					
ANR	1506827	Argument	str		1506450	0					
ANR	1506828	Identifier	str		1506450	0					
ANR	1506829	ReturnStatement	return true ;	403:1:8464:8475	1506450	16	True				
ANR	1506830	Identifier	true		1506450	0					
ANR	1506831	ReturnType	R_API int		1506450	1					
ANR	1506832	Identifier	r_fs_dir_dump		1506450	2					
ANR	1506833	ParameterList	"RFS * fs , const char * path , const char * name"		1506450	3					
ANR	1506834	Parameter	RFS * fs	343:24:7148:7154	1506450	0	True				
ANR	1506835	ParameterType	RFS *		1506450	0					
ANR	1506836	Identifier	fs		1506450	1					
ANR	1506837	Parameter	const char * path	343:33:7157:7172	1506450	1	True				
ANR	1506838	ParameterType	const char *		1506450	0					
ANR	1506839	Identifier	path		1506450	1					
ANR	1506840	Parameter	const char * name	343:51:7175:7190	1506450	2	True				
ANR	1506841	ParameterType	const char *		1506450	0					
ANR	1506842	Identifier	name		1506450	1					
ANR	1506843	CFGEntryNode	ENTRY		1506450		True				
ANR	1506844	CFGExitNode	EXIT		1506450		True				
ANR	1506845	CFGErrorNode	ERROR		1506450		True				
ANR	1506846	Symbol	file -> name		1506450						
ANR	1506847	Symbol	fs		1506450						
ANR	1506848	Symbol	r_fs_dir		1506450						
ANR	1506849	Symbol	r_sys_mkdir		1506450						
ANR	1506850	Symbol	path		1506450						
ANR	1506851	Symbol	npath		1506450						
ANR	1506852	Symbol	strlen		1506450						
ANR	1506853	Symbol	file -> type		1506450						
ANR	1506854	Symbol	file		1506450						
ANR	1506855	Symbol	r_fs_dir_dump		1506450						
ANR	1506856	Symbol	* item		1506450						
ANR	1506857	Symbol	r_file_dump		1506450						
ANR	1506858	Symbol	item -> data		1506450						
ANR	1506859	Symbol	r_fs_open		1506450						
ANR	1506860	Symbol	strcmp		1506450						
ANR	1506861	Symbol	malloc		1506450						
ANR	1506862	Symbol	item		1506450						
ANR	1506863	Symbol	false		1506450						
ANR	1506864	Symbol	iter		1506450						
ANR	1506865	Symbol	r_sys_mkdir_failed		1506450						
ANR	1506866	Symbol	list		1506450						
ANR	1506867	Symbol	* file		1506450						
ANR	1506868	Symbol	str		1506450						
ANR	1506869	Symbol	name		1506450						
ANR	1506870	Symbol	true		1506450						
ANR	1506871	Symbol	item -> size		1506450						
ANR	1506872	Function	r_fs_find_off_aux	406:0:8480:9297							
ANR	1506873	FunctionDef	"r_fs_find_off_aux (RFS * fs , const char * name , ut64 offset , RList * list)"		1506872	0					
ANR	1506874	CompoundStatement		406:83:8563:9297	1506872	0					
ANR	1506875	IdentifierDeclStatement	RList * dirs ;	407:1:8566:8577	1506872	0	True				
ANR	1506876	IdentifierDecl	* dirs		1506872	0					
ANR	1506877	IdentifierDeclType	RList *		1506872	0					
ANR	1506878	Identifier	dirs		1506872	1					
ANR	1506879	IdentifierDeclStatement	RListIter * iter ;	408:1:8580:8595	1506872	1	True				
ANR	1506880	IdentifierDecl	* iter		1506872	0					
ANR	1506881	IdentifierDeclType	RListIter *		1506872	0					
ANR	1506882	Identifier	iter		1506872	1					
ANR	1506883	IdentifierDeclStatement	"RFSFile * item , * file ;"	409:1:8598:8619	1506872	2	True				
ANR	1506884	IdentifierDecl	* item		1506872	0					
ANR	1506885	IdentifierDeclType	RFSFile *		1506872	0					
ANR	1506886	Identifier	item		1506872	1					
ANR	1506887	IdentifierDecl	* file		1506872	1					
ANR	1506888	IdentifierDeclType	RFSFile *		1506872	0					
ANR	1506889	Identifier	file		1506872	1					
ANR	1506890	IdentifierDeclStatement	char * found = NULL ;	410:1:8622:8640	1506872	3	True				
ANR	1506891	IdentifierDecl	* found = NULL		1506872	0					
ANR	1506892	IdentifierDeclType	char *		1506872	0					
ANR	1506893	Identifier	found		1506872	1					
ANR	1506894	AssignmentExpression	* found = NULL		1506872	2		=			
ANR	1506895	Identifier	NULL		1506872	0					
ANR	1506896	Identifier	NULL		1506872	1					
ANR	1506897	ExpressionStatement	"dirs = r_fs_dir ( fs , name )"	412:1:8644:8670	1506872	4	True				
ANR	1506898	AssignmentExpression	"dirs = r_fs_dir ( fs , name )"		1506872	0		=			
ANR	1506899	Identifier	dirs		1506872	0					
ANR	1506900	CallExpression	"r_fs_dir ( fs , name )"		1506872	1					
ANR	1506901	Callee	r_fs_dir		1506872	0					
ANR	1506902	Identifier	r_fs_dir		1506872	0					
ANR	1506903	ArgumentList	fs		1506872	1					
ANR	1506904	Argument	fs		1506872	0					
ANR	1506905	Identifier	fs		1506872	0					
ANR	1506906	Argument	name		1506872	1					
ANR	1506907	Identifier	name		1506872	0					
ANR	1506908	Statement	r_list_foreach	413:1:8673:8686	1506872	5	True				
ANR	1506909	Statement	(	413:16:8688:8688	1506872	6	True				
ANR	1506910	Statement	dirs	413:17:8689:8692	1506872	7	True				
ANR	1506911	Statement	","	413:21:8693:8693	1506872	8	True				
ANR	1506912	Statement	iter	413:23:8695:8698	1506872	9	True				
ANR	1506913	Statement	","	413:27:8699:8699	1506872	10	True				
ANR	1506914	Statement	item	413:29:8701:8704	1506872	11	True				
ANR	1506915	Statement	)	413:33:8705:8705	1506872	12	True				
ANR	1506916	CompoundStatement		8:35:143:143	1506872	13					
ANR	1506917	IfStatement	"if ( ! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" ) )"		1506872	0					
ANR	1506918	Condition	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"	414:6:8715:8769	1506872	0	True				
ANR	1506919	OrExpression	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"		1506872	0		||			
ANR	1506920	UnaryOperationExpression	"! strcmp ( item -> name , ""."" )"		1506872	0					
ANR	1506921	UnaryOperator	!		1506872	0					
ANR	1506922	CallExpression	"strcmp ( item -> name , ""."" )"		1506872	1					
ANR	1506923	Callee	strcmp		1506872	0					
ANR	1506924	Identifier	strcmp		1506872	0					
ANR	1506925	ArgumentList	item -> name		1506872	1					
ANR	1506926	Argument	item -> name		1506872	0					
ANR	1506927	PtrMemberAccess	item -> name		1506872	0					
ANR	1506928	Identifier	item		1506872	0					
ANR	1506929	Identifier	name		1506872	1					
ANR	1506930	Argument	"""."""		1506872	1					
ANR	1506931	PrimaryExpression	"""."""		1506872	0					
ANR	1506932	UnaryOperationExpression	"! strcmp ( item -> name , "".."" )"		1506872	1					
ANR	1506933	UnaryOperator	!		1506872	0					
ANR	1506934	CallExpression	"strcmp ( item -> name , "".."" )"		1506872	1					
ANR	1506935	Callee	strcmp		1506872	0					
ANR	1506936	Identifier	strcmp		1506872	0					
ANR	1506937	ArgumentList	item -> name		1506872	1					
ANR	1506938	Argument	item -> name		1506872	0					
ANR	1506939	PtrMemberAccess	item -> name		1506872	0					
ANR	1506940	Identifier	item		1506872	0					
ANR	1506941	Identifier	name		1506872	1					
ANR	1506942	Argument	""".."""		1506872	1					
ANR	1506943	PrimaryExpression	""".."""		1506872	0					
ANR	1506944	CompoundStatement		9:63:208:208	1506872	1					
ANR	1506945	ContinueStatement	continue ;	415:3:8777:8785	1506872	0	True				
ANR	1506946	ExpressionStatement	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )	418:2:8794:8858	1506872	1	True				
ANR	1506947	AssignmentExpression	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1506872	0		=			
ANR	1506948	Identifier	found		1506872	0					
ANR	1506949	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1506872	1					
ANR	1506950	CastTarget	char *		1506872	0					
ANR	1506951	CallExpression	malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1506872	1					
ANR	1506952	Callee	malloc		1506872	0					
ANR	1506953	Identifier	malloc		1506872	0					
ANR	1506954	ArgumentList	strlen ( name ) + strlen ( item -> name ) + 2		1506872	1					
ANR	1506955	Argument	strlen ( name ) + strlen ( item -> name ) + 2		1506872	0					
ANR	1506956	AdditiveExpression	strlen ( name ) + strlen ( item -> name ) + 2		1506872	0		+			
ANR	1506957	CallExpression	strlen ( name )		1506872	0					
ANR	1506958	Callee	strlen		1506872	0					
ANR	1506959	Identifier	strlen		1506872	0					
ANR	1506960	ArgumentList	name		1506872	1					
ANR	1506961	Argument	name		1506872	0					
ANR	1506962	Identifier	name		1506872	0					
ANR	1506963	AdditiveExpression	strlen ( item -> name ) + 2		1506872	1		+			
ANR	1506964	CallExpression	strlen ( item -> name )		1506872	0					
ANR	1506965	Callee	strlen		1506872	0					
ANR	1506966	Identifier	strlen		1506872	0					
ANR	1506967	ArgumentList	item -> name		1506872	1					
ANR	1506968	Argument	item -> name		1506872	0					
ANR	1506969	PtrMemberAccess	item -> name		1506872	0					
ANR	1506970	Identifier	item		1506872	0					
ANR	1506971	Identifier	name		1506872	1					
ANR	1506972	PrimaryExpression	2		1506872	1					
ANR	1506973	IfStatement	if ( ! found )		1506872	2					
ANR	1506974	Condition	! found	419:6:8866:8871	1506872	0	True				
ANR	1506975	UnaryOperationExpression	! found		1506872	0					
ANR	1506976	UnaryOperator	!		1506872	0					
ANR	1506977	Identifier	found		1506872	1					
ANR	1506978	CompoundStatement		14:14:310:310	1506872	1					
ANR	1506979	BreakStatement	break ;	420:3:8879:8884	1506872	0	True				
ANR	1506980	ExpressionStatement	"strcpy ( found , name )"	422:2:8892:8912	1506872	3	True				
ANR	1506981	CallExpression	"strcpy ( found , name )"		1506872	0					
ANR	1506982	Callee	strcpy		1506872	0					
ANR	1506983	Identifier	strcpy		1506872	0					
ANR	1506984	ArgumentList	found		1506872	1					
ANR	1506985	Argument	found		1506872	0					
ANR	1506986	Identifier	found		1506872	0					
ANR	1506987	Argument	name		1506872	1					
ANR	1506988	Identifier	name		1506872	0					
ANR	1506989	ExpressionStatement	"strcat ( found , ""/"" )"	423:2:8916:8935	1506872	4	True				
ANR	1506990	CallExpression	"strcat ( found , ""/"" )"		1506872	0					
ANR	1506991	Callee	strcat		1506872	0					
ANR	1506992	Identifier	strcat		1506872	0					
ANR	1506993	ArgumentList	found		1506872	1					
ANR	1506994	Argument	found		1506872	0					
ANR	1506995	Identifier	found		1506872	0					
ANR	1506996	Argument	"""/"""		1506872	1					
ANR	1506997	PrimaryExpression	"""/"""		1506872	0					
ANR	1506998	ExpressionStatement	"strcat ( found , item -> name )"	424:2:8939:8965	1506872	5	True				
ANR	1506999	CallExpression	"strcat ( found , item -> name )"		1506872	0					
ANR	1507000	Callee	strcat		1506872	0					
ANR	1507001	Identifier	strcat		1506872	0					
ANR	1507002	ArgumentList	found		1506872	1					
ANR	1507003	Argument	found		1506872	0					
ANR	1507004	Identifier	found		1506872	0					
ANR	1507005	Argument	item -> name		1506872	1					
ANR	1507006	PtrMemberAccess	item -> name		1506872	0					
ANR	1507007	Identifier	item		1506872	0					
ANR	1507008	Identifier	name		1506872	1					
ANR	1507009	IfStatement	if ( item -> type == R_FS_FILE_TYPE_DIRECTORY )		1506872	6					
ANR	1507010	Condition	item -> type == R_FS_FILE_TYPE_DIRECTORY	426:6:8974:9011	1506872	0	True				
ANR	1507011	EqualityExpression	item -> type == R_FS_FILE_TYPE_DIRECTORY		1506872	0		==			
ANR	1507012	PtrMemberAccess	item -> type		1506872	0					
ANR	1507013	Identifier	item		1506872	0					
ANR	1507014	Identifier	type		1506872	1					
ANR	1507015	Identifier	R_FS_FILE_TYPE_DIRECTORY		1506872	1					
ANR	1507016	CompoundStatement		21:46:450:450	1506872	1					
ANR	1507017	ExpressionStatement	"r_fs_find_off_aux ( fs , found , offset , list )"	427:3:9019:9062	1506872	0	True				
ANR	1507018	CallExpression	"r_fs_find_off_aux ( fs , found , offset , list )"		1506872	0					
ANR	1507019	Callee	r_fs_find_off_aux		1506872	0					
ANR	1507020	Identifier	r_fs_find_off_aux		1506872	0					
ANR	1507021	ArgumentList	fs		1506872	1					
ANR	1507022	Argument	fs		1506872	0					
ANR	1507023	Identifier	fs		1506872	0					
ANR	1507024	Argument	found		1506872	1					
ANR	1507025	Identifier	found		1506872	0					
ANR	1507026	Argument	offset		1506872	2					
ANR	1507027	Identifier	offset		1506872	0					
ANR	1507028	Argument	list		1506872	3					
ANR	1507029	Identifier	list		1506872	0					
ANR	1507030	ElseStatement	else		1506872	0					
ANR	1507031	CompoundStatement		23:9:509:509	1506872	0					
ANR	1507032	ExpressionStatement	"file = r_fs_open ( fs , found , false )"	429:3:9078:9113	1506872	0	True				
ANR	1507033	AssignmentExpression	"file = r_fs_open ( fs , found , false )"		1506872	0		=			
ANR	1507034	Identifier	file		1506872	0					
ANR	1507035	CallExpression	"r_fs_open ( fs , found , false )"		1506872	1					
ANR	1507036	Callee	r_fs_open		1506872	0					
ANR	1507037	Identifier	r_fs_open		1506872	0					
ANR	1507038	ArgumentList	fs		1506872	1					
ANR	1507039	Argument	fs		1506872	0					
ANR	1507040	Identifier	fs		1506872	0					
ANR	1507041	Argument	found		1506872	1					
ANR	1507042	Identifier	found		1506872	0					
ANR	1507043	Argument	false		1506872	2					
ANR	1507044	Identifier	false		1506872	0					
ANR	1507045	IfStatement	if ( file )		1506872	1					
ANR	1507046	Condition	file	430:7:9122:9125	1506872	0	True				
ANR	1507047	Identifier	file		1506872	0					
ANR	1507048	CompoundStatement		25:13:564:564	1506872	1					
ANR	1507049	ExpressionStatement	"r_fs_read ( fs , file , 0 , file -> size )"	431:4:9134:9169	1506872	0	True				
ANR	1507050	CallExpression	"r_fs_read ( fs , file , 0 , file -> size )"		1506872	0					
ANR	1507051	Callee	r_fs_read		1506872	0					
ANR	1507052	Identifier	r_fs_read		1506872	0					
ANR	1507053	ArgumentList	fs		1506872	1					
ANR	1507054	Argument	fs		1506872	0					
ANR	1507055	Identifier	fs		1506872	0					
ANR	1507056	Argument	file		1506872	1					
ANR	1507057	Identifier	file		1506872	0					
ANR	1507058	Argument	0		1506872	2					
ANR	1507059	PrimaryExpression	0		1506872	0					
ANR	1507060	Argument	file -> size		1506872	3					
ANR	1507061	PtrMemberAccess	file -> size		1506872	0					
ANR	1507062	Identifier	file		1506872	0					
ANR	1507063	Identifier	size		1506872	1					
ANR	1507064	IfStatement	if ( file -> off == offset )		1506872	1					
ANR	1507065	Condition	file -> off == offset	432:8:9179:9197	1506872	0	True				
ANR	1507066	EqualityExpression	file -> off == offset		1506872	0		==			
ANR	1507067	PtrMemberAccess	file -> off		1506872	0					
ANR	1507068	Identifier	file		1506872	0					
ANR	1507069	Identifier	off		1506872	1					
ANR	1507070	Identifier	offset		1506872	1					
ANR	1507071	CompoundStatement		27:29:636:636	1506872	1					
ANR	1507072	ExpressionStatement	"r_list_append ( list , found )"	433:5:9207:9234	1506872	0	True				
ANR	1507073	CallExpression	"r_list_append ( list , found )"		1506872	0					
ANR	1507074	Callee	r_list_append		1506872	0					
ANR	1507075	Identifier	r_list_append		1506872	0					
ANR	1507076	ArgumentList	list		1506872	1					
ANR	1507077	Argument	list		1506872	0					
ANR	1507078	Identifier	list		1506872	0					
ANR	1507079	Argument	found		1506872	1					
ANR	1507080	Identifier	found		1506872	0					
ANR	1507081	ExpressionStatement	"r_fs_close ( fs , file )"	435:4:9246:9267	1506872	2	True				
ANR	1507082	CallExpression	"r_fs_close ( fs , file )"		1506872	0					
ANR	1507083	Callee	r_fs_close		1506872	0					
ANR	1507084	Identifier	r_fs_close		1506872	0					
ANR	1507085	ArgumentList	fs		1506872	1					
ANR	1507086	Argument	fs		1506872	0					
ANR	1507087	Identifier	fs		1506872	0					
ANR	1507088	Argument	file		1506872	1					
ANR	1507089	Identifier	file		1506872	0					
ANR	1507090	ExpressionStatement	free ( found )	438:2:9280:9292	1506872	7	True				
ANR	1507091	CallExpression	free ( found )		1506872	0					
ANR	1507092	Callee	free		1506872	0					
ANR	1507093	Identifier	free		1506872	0					
ANR	1507094	ArgumentList	found		1506872	1					
ANR	1507095	Argument	found		1506872	0					
ANR	1507096	Identifier	found		1506872	0					
ANR	1507097	ReturnType	static void		1506872	1					
ANR	1507098	Identifier	r_fs_find_off_aux		1506872	2					
ANR	1507099	ParameterList	"RFS * fs , const char * name , ut64 offset , RList * list"		1506872	3					
ANR	1507100	Parameter	RFS * fs	406:30:8510:8516	1506872	0	True				
ANR	1507101	ParameterType	RFS *		1506872	0					
ANR	1507102	Identifier	fs		1506872	1					
ANR	1507103	Parameter	const char * name	406:39:8519:8534	1506872	1	True				
ANR	1507104	ParameterType	const char *		1506872	0					
ANR	1507105	Identifier	name		1506872	1					
ANR	1507106	Parameter	ut64 offset	406:57:8537:8547	1506872	2	True				
ANR	1507107	ParameterType	ut64		1506872	0					
ANR	1507108	Identifier	offset		1506872	1					
ANR	1507109	Parameter	RList * list	406:70:8550:8560	1506872	3	True				
ANR	1507110	ParameterType	RList *		1506872	0					
ANR	1507111	Identifier	list		1506872	1					
ANR	1507112	CFGEntryNode	ENTRY		1506872		True				
ANR	1507113	CFGExitNode	EXIT		1506872		True				
ANR	1507114	CFGErrorNode	ERROR		1506872		True				
ANR	1507115	Symbol	strcmp		1506872						
ANR	1507116	Symbol	malloc		1506872						
ANR	1507117	Symbol	item		1506872						
ANR	1507118	Symbol	item -> type		1506872						
ANR	1507119	Symbol	NULL		1506872						
ANR	1507120	Symbol	offset		1506872						
ANR	1507121	Symbol	R_FS_FILE_TYPE_DIRECTORY		1506872						
ANR	1507122	Symbol	false		1506872						
ANR	1507123	Symbol	dirs		1506872						
ANR	1507124	Symbol	iter		1506872						
ANR	1507125	Symbol	list		1506872						
ANR	1507126	Symbol	* file		1506872						
ANR	1507127	Symbol	fs		1506872						
ANR	1507128	Symbol	r_fs_dir		1506872						
ANR	1507129	Symbol	strlen		1506872						
ANR	1507130	Symbol	file		1506872						
ANR	1507131	Symbol	found		1506872						
ANR	1507132	Symbol	item -> name		1506872						
ANR	1507133	Symbol	* item		1506872						
ANR	1507134	Symbol	name		1506872						
ANR	1507135	Symbol	file -> size		1506872						
ANR	1507136	Symbol	file -> off		1506872						
ANR	1507137	Symbol	r_fs_open		1506872						
ANR	1507138	Function	r_fs_find_off	442:0:9300:9504							
ANR	1507139	FunctionDef	"r_fs_find_off (RFS * fs , const char * name , ut64 off)"		1507138	0					
ANR	1507140	CompoundStatement		442:64:9364:9504	1507138	0					
ANR	1507141	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	443:1:9367:9394	1507138	0	True				
ANR	1507142	IdentifierDecl	* list = r_list_new ( )		1507138	0					
ANR	1507143	IdentifierDeclType	RList *		1507138	0					
ANR	1507144	Identifier	list		1507138	1					
ANR	1507145	AssignmentExpression	* list = r_list_new ( )		1507138	2		=			
ANR	1507146	Identifier	list		1507138	0					
ANR	1507147	CallExpression	r_list_new ( )		1507138	1					
ANR	1507148	Callee	r_list_new		1507138	0					
ANR	1507149	Identifier	r_list_new		1507138	0					
ANR	1507150	ArgumentList			1507138	1					
ANR	1507151	IfStatement	if ( ! list )		1507138	1					
ANR	1507152	Condition	! list	444:5:9401:9405	1507138	0	True				
ANR	1507153	UnaryOperationExpression	! list		1507138	0					
ANR	1507154	UnaryOperator	!		1507138	0					
ANR	1507155	Identifier	list		1507138	1					
ANR	1507156	CompoundStatement		3:12:43:43	1507138	1					
ANR	1507157	ReturnStatement	return NULL ;	445:2:9412:9423	1507138	0	True				
ANR	1507158	Identifier	NULL		1507138	0					
ANR	1507159	ExpressionStatement	list -> free = free	447:1:9429:9446	1507138	2	True				
ANR	1507160	AssignmentExpression	list -> free = free		1507138	0		=			
ANR	1507161	PtrMemberAccess	list -> free		1507138	0					
ANR	1507162	Identifier	list		1507138	0					
ANR	1507163	Identifier	free		1507138	1					
ANR	1507164	Identifier	free		1507138	1					
ANR	1507165	ExpressionStatement	"r_fs_find_off_aux ( fs , name , off , list )"	448:1:9449:9488	1507138	3	True				
ANR	1507166	CallExpression	"r_fs_find_off_aux ( fs , name , off , list )"		1507138	0					
ANR	1507167	Callee	r_fs_find_off_aux		1507138	0					
ANR	1507168	Identifier	r_fs_find_off_aux		1507138	0					
ANR	1507169	ArgumentList	fs		1507138	1					
ANR	1507170	Argument	fs		1507138	0					
ANR	1507171	Identifier	fs		1507138	0					
ANR	1507172	Argument	name		1507138	1					
ANR	1507173	Identifier	name		1507138	0					
ANR	1507174	Argument	off		1507138	2					
ANR	1507175	Identifier	off		1507138	0					
ANR	1507176	Argument	list		1507138	3					
ANR	1507177	Identifier	list		1507138	0					
ANR	1507178	ReturnStatement	return list ;	449:1:9491:9502	1507138	4	True				
ANR	1507179	Identifier	list		1507138	0					
ANR	1507180	ReturnType	R_API RList *		1507138	1					
ANR	1507181	Identifier	r_fs_find_off		1507138	2					
ANR	1507182	ParameterList	"RFS * fs , const char * name , ut64 off"		1507138	3					
ANR	1507183	Parameter	RFS * fs	442:27:9327:9333	1507138	0	True				
ANR	1507184	ParameterType	RFS *		1507138	0					
ANR	1507185	Identifier	fs		1507138	1					
ANR	1507186	Parameter	const char * name	442:36:9336:9351	1507138	1	True				
ANR	1507187	ParameterType	const char *		1507138	0					
ANR	1507188	Identifier	name		1507138	1					
ANR	1507189	Parameter	ut64 off	442:54:9354:9361	1507138	2	True				
ANR	1507190	ParameterType	ut64		1507138	0					
ANR	1507191	Identifier	off		1507138	1					
ANR	1507192	CFGEntryNode	ENTRY		1507138		True				
ANR	1507193	CFGExitNode	EXIT		1507138		True				
ANR	1507194	Symbol	NULL		1507138						
ANR	1507195	Symbol	list -> free		1507138						
ANR	1507196	Symbol	* list		1507138						
ANR	1507197	Symbol	name		1507138						
ANR	1507198	Symbol	list		1507138						
ANR	1507199	Symbol	free		1507138						
ANR	1507200	Symbol	fs		1507138						
ANR	1507201	Symbol	off		1507138						
ANR	1507202	Symbol	r_list_new		1507138						
ANR	1507203	Function	r_fs_find_name_aux	452:0:9507:10367							
ANR	1507204	FunctionDef	"r_fs_find_name_aux (RFS * fs , const char * name , const char * glob , RList * list)"		1507203	0					
ANR	1507205	CompoundStatement		452:89:9596:10367	1507203	0					
ANR	1507206	IdentifierDeclStatement	RList * dirs ;	453:1:9599:9610	1507203	0	True				
ANR	1507207	IdentifierDecl	* dirs		1507203	0					
ANR	1507208	IdentifierDeclType	RList *		1507203	0					
ANR	1507209	Identifier	dirs		1507203	1					
ANR	1507210	IdentifierDeclStatement	RListIter * iter ;	454:1:9613:9628	1507203	1	True				
ANR	1507211	IdentifierDecl	* iter		1507203	0					
ANR	1507212	IdentifierDeclType	RListIter *		1507203	0					
ANR	1507213	Identifier	iter		1507203	1					
ANR	1507214	IdentifierDeclStatement	RFSFile * item ;	455:1:9631:9644	1507203	2	True				
ANR	1507215	IdentifierDecl	* item		1507203	0					
ANR	1507216	IdentifierDeclType	RFSFile *		1507203	0					
ANR	1507217	Identifier	item		1507203	1					
ANR	1507218	IdentifierDeclStatement	char * found ;	456:1:9647:9658	1507203	3	True				
ANR	1507219	IdentifierDecl	* found		1507203	0					
ANR	1507220	IdentifierDeclType	char *		1507203	0					
ANR	1507221	Identifier	found		1507203	1					
ANR	1507222	ExpressionStatement	"dirs = r_fs_dir ( fs , name )"	458:1:9662:9688	1507203	4	True				
ANR	1507223	AssignmentExpression	"dirs = r_fs_dir ( fs , name )"		1507203	0		=			
ANR	1507224	Identifier	dirs		1507203	0					
ANR	1507225	CallExpression	"r_fs_dir ( fs , name )"		1507203	1					
ANR	1507226	Callee	r_fs_dir		1507203	0					
ANR	1507227	Identifier	r_fs_dir		1507203	0					
ANR	1507228	ArgumentList	fs		1507203	1					
ANR	1507229	Argument	fs		1507203	0					
ANR	1507230	Identifier	fs		1507203	0					
ANR	1507231	Argument	name		1507203	1					
ANR	1507232	Identifier	name		1507203	0					
ANR	1507233	Statement	r_list_foreach	459:1:9691:9704	1507203	5	True				
ANR	1507234	Statement	(	459:16:9706:9706	1507203	6	True				
ANR	1507235	Statement	dirs	459:17:9707:9710	1507203	7	True				
ANR	1507236	Statement	","	459:21:9711:9711	1507203	8	True				
ANR	1507237	Statement	iter	459:23:9713:9716	1507203	9	True				
ANR	1507238	Statement	","	459:27:9717:9717	1507203	10	True				
ANR	1507239	Statement	item	459:29:9719:9722	1507203	11	True				
ANR	1507240	Statement	)	459:33:9723:9723	1507203	12	True				
ANR	1507241	CompoundStatement		8:35:128:128	1507203	13					
ANR	1507242	IfStatement	"if ( r_str_glob ( item -> name , glob ) )"		1507203	0					
ANR	1507243	Condition	"r_str_glob ( item -> name , glob )"	460:6:9733:9761	1507203	0	True				
ANR	1507244	CallExpression	"r_str_glob ( item -> name , glob )"		1507203	0					
ANR	1507245	Callee	r_str_glob		1507203	0					
ANR	1507246	Identifier	r_str_glob		1507203	0					
ANR	1507247	ArgumentList	item -> name		1507203	1					
ANR	1507248	Argument	item -> name		1507203	0					
ANR	1507249	PtrMemberAccess	item -> name		1507203	0					
ANR	1507250	Identifier	item		1507203	0					
ANR	1507251	Identifier	name		1507203	1					
ANR	1507252	Argument	glob		1507203	1					
ANR	1507253	Identifier	glob		1507203	0					
ANR	1507254	CompoundStatement		9:37:167:167	1507203	1					
ANR	1507255	ExpressionStatement	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )	461:3:9769:9833	1507203	0	True				
ANR	1507256	AssignmentExpression	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1507203	0		=			
ANR	1507257	Identifier	found		1507203	0					
ANR	1507258	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1507203	1					
ANR	1507259	CastTarget	char *		1507203	0					
ANR	1507260	CallExpression	malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1507203	1					
ANR	1507261	Callee	malloc		1507203	0					
ANR	1507262	Identifier	malloc		1507203	0					
ANR	1507263	ArgumentList	strlen ( name ) + strlen ( item -> name ) + 2		1507203	1					
ANR	1507264	Argument	strlen ( name ) + strlen ( item -> name ) + 2		1507203	0					
ANR	1507265	AdditiveExpression	strlen ( name ) + strlen ( item -> name ) + 2		1507203	0		+			
ANR	1507266	CallExpression	strlen ( name )		1507203	0					
ANR	1507267	Callee	strlen		1507203	0					
ANR	1507268	Identifier	strlen		1507203	0					
ANR	1507269	ArgumentList	name		1507203	1					
ANR	1507270	Argument	name		1507203	0					
ANR	1507271	Identifier	name		1507203	0					
ANR	1507272	AdditiveExpression	strlen ( item -> name ) + 2		1507203	1		+			
ANR	1507273	CallExpression	strlen ( item -> name )		1507203	0					
ANR	1507274	Callee	strlen		1507203	0					
ANR	1507275	Identifier	strlen		1507203	0					
ANR	1507276	ArgumentList	item -> name		1507203	1					
ANR	1507277	Argument	item -> name		1507203	0					
ANR	1507278	PtrMemberAccess	item -> name		1507203	0					
ANR	1507279	Identifier	item		1507203	0					
ANR	1507280	Identifier	name		1507203	1					
ANR	1507281	PrimaryExpression	2		1507203	1					
ANR	1507282	IfStatement	if ( ! found )		1507203	1					
ANR	1507283	Condition	! found	462:7:9842:9847	1507203	0	True				
ANR	1507284	UnaryOperationExpression	! found		1507203	0					
ANR	1507285	UnaryOperator	!		1507203	0					
ANR	1507286	Identifier	found		1507203	1					
ANR	1507287	CompoundStatement		11:15:253:253	1507203	1					
ANR	1507288	BreakStatement	break ;	463:4:9856:9861	1507203	0	True				
ANR	1507289	ExpressionStatement	"strcpy ( found , name )"	465:3:9871:9891	1507203	2	True				
ANR	1507290	CallExpression	"strcpy ( found , name )"		1507203	0					
ANR	1507291	Callee	strcpy		1507203	0					
ANR	1507292	Identifier	strcpy		1507203	0					
ANR	1507293	ArgumentList	found		1507203	1					
ANR	1507294	Argument	found		1507203	0					
ANR	1507295	Identifier	found		1507203	0					
ANR	1507296	Argument	name		1507203	1					
ANR	1507297	Identifier	name		1507203	0					
ANR	1507298	ExpressionStatement	"strcat ( found , ""/"" )"	466:3:9896:9915	1507203	3	True				
ANR	1507299	CallExpression	"strcat ( found , ""/"" )"		1507203	0					
ANR	1507300	Callee	strcat		1507203	0					
ANR	1507301	Identifier	strcat		1507203	0					
ANR	1507302	ArgumentList	found		1507203	1					
ANR	1507303	Argument	found		1507203	0					
ANR	1507304	Identifier	found		1507203	0					
ANR	1507305	Argument	"""/"""		1507203	1					
ANR	1507306	PrimaryExpression	"""/"""		1507203	0					
ANR	1507307	ExpressionStatement	"strcat ( found , item -> name )"	467:3:9920:9946	1507203	4	True				
ANR	1507308	CallExpression	"strcat ( found , item -> name )"		1507203	0					
ANR	1507309	Callee	strcat		1507203	0					
ANR	1507310	Identifier	strcat		1507203	0					
ANR	1507311	ArgumentList	found		1507203	1					
ANR	1507312	Argument	found		1507203	0					
ANR	1507313	Identifier	found		1507203	0					
ANR	1507314	Argument	item -> name		1507203	1					
ANR	1507315	PtrMemberAccess	item -> name		1507203	0					
ANR	1507316	Identifier	item		1507203	0					
ANR	1507317	Identifier	name		1507203	1					
ANR	1507318	ExpressionStatement	"r_list_append ( list , found )"	468:3:9951:9978	1507203	5	True				
ANR	1507319	CallExpression	"r_list_append ( list , found )"		1507203	0					
ANR	1507320	Callee	r_list_append		1507203	0					
ANR	1507321	Identifier	r_list_append		1507203	0					
ANR	1507322	ArgumentList	list		1507203	1					
ANR	1507323	Argument	list		1507203	0					
ANR	1507324	Identifier	list		1507203	0					
ANR	1507325	Argument	found		1507203	1					
ANR	1507326	Identifier	found		1507203	0					
ANR	1507327	IfStatement	"if ( ! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" ) )"		1507203	1					
ANR	1507328	Condition	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"	470:6:9990:10044	1507203	0	True				
ANR	1507329	OrExpression	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"		1507203	0		||			
ANR	1507330	UnaryOperationExpression	"! strcmp ( item -> name , ""."" )"		1507203	0					
ANR	1507331	UnaryOperator	!		1507203	0					
ANR	1507332	CallExpression	"strcmp ( item -> name , ""."" )"		1507203	1					
ANR	1507333	Callee	strcmp		1507203	0					
ANR	1507334	Identifier	strcmp		1507203	0					
ANR	1507335	ArgumentList	item -> name		1507203	1					
ANR	1507336	Argument	item -> name		1507203	0					
ANR	1507337	PtrMemberAccess	item -> name		1507203	0					
ANR	1507338	Identifier	item		1507203	0					
ANR	1507339	Identifier	name		1507203	1					
ANR	1507340	Argument	"""."""		1507203	1					
ANR	1507341	PrimaryExpression	"""."""		1507203	0					
ANR	1507342	UnaryOperationExpression	"! strcmp ( item -> name , "".."" )"		1507203	1					
ANR	1507343	UnaryOperator	!		1507203	0					
ANR	1507344	CallExpression	"strcmp ( item -> name , "".."" )"		1507203	1					
ANR	1507345	Callee	strcmp		1507203	0					
ANR	1507346	Identifier	strcmp		1507203	0					
ANR	1507347	ArgumentList	item -> name		1507203	1					
ANR	1507348	Argument	item -> name		1507203	0					
ANR	1507349	PtrMemberAccess	item -> name		1507203	0					
ANR	1507350	Identifier	item		1507203	0					
ANR	1507351	Identifier	name		1507203	1					
ANR	1507352	Argument	""".."""		1507203	1					
ANR	1507353	PrimaryExpression	""".."""		1507203	0					
ANR	1507354	CompoundStatement		19:63:450:450	1507203	1					
ANR	1507355	ContinueStatement	continue ;	471:3:10052:10060	1507203	0	True				
ANR	1507356	IfStatement	if ( item -> type == R_FS_FILE_TYPE_DIRECTORY )		1507203	2					
ANR	1507357	Condition	item -> type == R_FS_FILE_TYPE_DIRECTORY	473:6:10072:10109	1507203	0	True				
ANR	1507358	EqualityExpression	item -> type == R_FS_FILE_TYPE_DIRECTORY		1507203	0		==			
ANR	1507359	PtrMemberAccess	item -> type		1507203	0					
ANR	1507360	Identifier	item		1507203	0					
ANR	1507361	Identifier	type		1507203	1					
ANR	1507362	Identifier	R_FS_FILE_TYPE_DIRECTORY		1507203	1					
ANR	1507363	CompoundStatement		22:46:515:515	1507203	1					
ANR	1507364	ExpressionStatement	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )	474:3:10117:10181	1507203	0	True				
ANR	1507365	AssignmentExpression	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1507203	0		=			
ANR	1507366	Identifier	found		1507203	0					
ANR	1507367	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1507203	1					
ANR	1507368	CastTarget	char *		1507203	0					
ANR	1507369	CallExpression	malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		1507203	1					
ANR	1507370	Callee	malloc		1507203	0					
ANR	1507371	Identifier	malloc		1507203	0					
ANR	1507372	ArgumentList	strlen ( name ) + strlen ( item -> name ) + 2		1507203	1					
ANR	1507373	Argument	strlen ( name ) + strlen ( item -> name ) + 2		1507203	0					
ANR	1507374	AdditiveExpression	strlen ( name ) + strlen ( item -> name ) + 2		1507203	0		+			
ANR	1507375	CallExpression	strlen ( name )		1507203	0					
ANR	1507376	Callee	strlen		1507203	0					
ANR	1507377	Identifier	strlen		1507203	0					
ANR	1507378	ArgumentList	name		1507203	1					
ANR	1507379	Argument	name		1507203	0					
ANR	1507380	Identifier	name		1507203	0					
ANR	1507381	AdditiveExpression	strlen ( item -> name ) + 2		1507203	1		+			
ANR	1507382	CallExpression	strlen ( item -> name )		1507203	0					
ANR	1507383	Callee	strlen		1507203	0					
ANR	1507384	Identifier	strlen		1507203	0					
ANR	1507385	ArgumentList	item -> name		1507203	1					
ANR	1507386	Argument	item -> name		1507203	0					
ANR	1507387	PtrMemberAccess	item -> name		1507203	0					
ANR	1507388	Identifier	item		1507203	0					
ANR	1507389	Identifier	name		1507203	1					
ANR	1507390	PrimaryExpression	2		1507203	1					
ANR	1507391	IfStatement	if ( ! found )		1507203	1					
ANR	1507392	Condition	! found	475:7:10190:10195	1507203	0	True				
ANR	1507393	UnaryOperationExpression	! found		1507203	0					
ANR	1507394	UnaryOperator	!		1507203	0					
ANR	1507395	Identifier	found		1507203	1					
ANR	1507396	CompoundStatement		24:15:601:601	1507203	1					
ANR	1507397	BreakStatement	break ;	476:4:10204:10209	1507203	0	True				
ANR	1507398	ExpressionStatement	"strcpy ( found , name )"	478:3:10219:10239	1507203	2	True				
ANR	1507399	CallExpression	"strcpy ( found , name )"		1507203	0					
ANR	1507400	Callee	strcpy		1507203	0					
ANR	1507401	Identifier	strcpy		1507203	0					
ANR	1507402	ArgumentList	found		1507203	1					
ANR	1507403	Argument	found		1507203	0					
ANR	1507404	Identifier	found		1507203	0					
ANR	1507405	Argument	name		1507203	1					
ANR	1507406	Identifier	name		1507203	0					
ANR	1507407	ExpressionStatement	"strcat ( found , ""/"" )"	479:3:10244:10263	1507203	3	True				
ANR	1507408	CallExpression	"strcat ( found , ""/"" )"		1507203	0					
ANR	1507409	Callee	strcat		1507203	0					
ANR	1507410	Identifier	strcat		1507203	0					
ANR	1507411	ArgumentList	found		1507203	1					
ANR	1507412	Argument	found		1507203	0					
ANR	1507413	Identifier	found		1507203	0					
ANR	1507414	Argument	"""/"""		1507203	1					
ANR	1507415	PrimaryExpression	"""/"""		1507203	0					
ANR	1507416	ExpressionStatement	"strcat ( found , item -> name )"	480:3:10268:10294	1507203	4	True				
ANR	1507417	CallExpression	"strcat ( found , item -> name )"		1507203	0					
ANR	1507418	Callee	strcat		1507203	0					
ANR	1507419	Identifier	strcat		1507203	0					
ANR	1507420	ArgumentList	found		1507203	1					
ANR	1507421	Argument	found		1507203	0					
ANR	1507422	Identifier	found		1507203	0					
ANR	1507423	Argument	item -> name		1507203	1					
ANR	1507424	PtrMemberAccess	item -> name		1507203	0					
ANR	1507425	Identifier	item		1507203	0					
ANR	1507426	Identifier	name		1507203	1					
ANR	1507427	ExpressionStatement	"r_fs_find_name_aux ( fs , found , glob , list )"	481:3:10299:10341	1507203	5	True				
ANR	1507428	CallExpression	"r_fs_find_name_aux ( fs , found , glob , list )"		1507203	0					
ANR	1507429	Callee	r_fs_find_name_aux		1507203	0					
ANR	1507430	Identifier	r_fs_find_name_aux		1507203	0					
ANR	1507431	ArgumentList	fs		1507203	1					
ANR	1507432	Argument	fs		1507203	0					
ANR	1507433	Identifier	fs		1507203	0					
ANR	1507434	Argument	found		1507203	1					
ANR	1507435	Identifier	found		1507203	0					
ANR	1507436	Argument	glob		1507203	2					
ANR	1507437	Identifier	glob		1507203	0					
ANR	1507438	Argument	list		1507203	3					
ANR	1507439	Identifier	list		1507203	0					
ANR	1507440	ExpressionStatement	free ( found )	482:3:10346:10358	1507203	6	True				
ANR	1507441	CallExpression	free ( found )		1507203	0					
ANR	1507442	Callee	free		1507203	0					
ANR	1507443	Identifier	free		1507203	0					
ANR	1507444	ArgumentList	found		1507203	1					
ANR	1507445	Argument	found		1507203	0					
ANR	1507446	Identifier	found		1507203	0					
ANR	1507447	ReturnType	static void		1507203	1					
ANR	1507448	Identifier	r_fs_find_name_aux		1507203	2					
ANR	1507449	ParameterList	"RFS * fs , const char * name , const char * glob , RList * list"		1507203	3					
ANR	1507450	Parameter	RFS * fs	452:31:9538:9544	1507203	0	True				
ANR	1507451	ParameterType	RFS *		1507203	0					
ANR	1507452	Identifier	fs		1507203	1					
ANR	1507453	Parameter	const char * name	452:40:9547:9562	1507203	1	True				
ANR	1507454	ParameterType	const char *		1507203	0					
ANR	1507455	Identifier	name		1507203	1					
ANR	1507456	Parameter	const char * glob	452:58:9565:9580	1507203	2	True				
ANR	1507457	ParameterType	const char *		1507203	0					
ANR	1507458	Identifier	glob		1507203	1					
ANR	1507459	Parameter	RList * list	452:76:9583:9593	1507203	3	True				
ANR	1507460	ParameterType	RList *		1507203	0					
ANR	1507461	Identifier	list		1507203	1					
ANR	1507462	CFGEntryNode	ENTRY		1507203		True				
ANR	1507463	CFGExitNode	EXIT		1507203		True				
ANR	1507464	CFGErrorNode	ERROR		1507203		True				
ANR	1507465	Symbol	strcmp		1507203						
ANR	1507466	Symbol	malloc		1507203						
ANR	1507467	Symbol	item		1507203						
ANR	1507468	Symbol	item -> type		1507203						
ANR	1507469	Symbol	glob		1507203						
ANR	1507470	Symbol	R_FS_FILE_TYPE_DIRECTORY		1507203						
ANR	1507471	Symbol	dirs		1507203						
ANR	1507472	Symbol	iter		1507203						
ANR	1507473	Symbol	list		1507203						
ANR	1507474	Symbol	fs		1507203						
ANR	1507475	Symbol	r_fs_dir		1507203						
ANR	1507476	Symbol	strlen		1507203						
ANR	1507477	Symbol	found		1507203						
ANR	1507478	Symbol	r_str_glob		1507203						
ANR	1507479	Symbol	item -> name		1507203						
ANR	1507480	Symbol	* item		1507203						
ANR	1507481	Symbol	name		1507203						
ANR	1507482	Function	r_fs_find_name	487:0:10370:10555							
ANR	1507483	FunctionDef	"r_fs_find_name (RFS * fs , const char * name , const char * glob)"		1507482	0					
ANR	1507484	CompoundStatement		487:73:10443:10555	1507482	0					
ANR	1507485	IdentifierDeclStatement	RList * list = r_list_newf ( free ) ;	488:1:10446:10478	1507482	0	True				
ANR	1507486	IdentifierDecl	* list = r_list_newf ( free )		1507482	0					
ANR	1507487	IdentifierDeclType	RList *		1507482	0					
ANR	1507488	Identifier	list		1507482	1					
ANR	1507489	AssignmentExpression	* list = r_list_newf ( free )		1507482	2		=			
ANR	1507490	Identifier	list		1507482	0					
ANR	1507491	CallExpression	r_list_newf ( free )		1507482	1					
ANR	1507492	Callee	r_list_newf		1507482	0					
ANR	1507493	Identifier	r_list_newf		1507482	0					
ANR	1507494	ArgumentList	free		1507482	1					
ANR	1507495	Argument	free		1507482	0					
ANR	1507496	Identifier	free		1507482	0					
ANR	1507497	IfStatement	if ( list )		1507482	1					
ANR	1507498	Condition	list	489:5:10485:10488	1507482	0	True				
ANR	1507499	Identifier	list		1507482	0					
ANR	1507500	CompoundStatement		3:11:47:47	1507482	1					
ANR	1507501	ExpressionStatement	"r_fs_find_name_aux ( fs , name , glob , list )"	490:2:10495:10536	1507482	0	True				
ANR	1507502	CallExpression	"r_fs_find_name_aux ( fs , name , glob , list )"		1507482	0					
ANR	1507503	Callee	r_fs_find_name_aux		1507482	0					
ANR	1507504	Identifier	r_fs_find_name_aux		1507482	0					
ANR	1507505	ArgumentList	fs		1507482	1					
ANR	1507506	Argument	fs		1507482	0					
ANR	1507507	Identifier	fs		1507482	0					
ANR	1507508	Argument	name		1507482	1					
ANR	1507509	Identifier	name		1507482	0					
ANR	1507510	Argument	glob		1507482	2					
ANR	1507511	Identifier	glob		1507482	0					
ANR	1507512	Argument	list		1507482	3					
ANR	1507513	Identifier	list		1507482	0					
ANR	1507514	ReturnStatement	return list ;	492:1:10542:10553	1507482	2	True				
ANR	1507515	Identifier	list		1507482	0					
ANR	1507516	ReturnType	R_API RList *		1507482	1					
ANR	1507517	Identifier	r_fs_find_name		1507482	2					
ANR	1507518	ParameterList	"RFS * fs , const char * name , const char * glob"		1507482	3					
ANR	1507519	Parameter	RFS * fs	487:28:10398:10404	1507482	0	True				
ANR	1507520	ParameterType	RFS *		1507482	0					
ANR	1507521	Identifier	fs		1507482	1					
ANR	1507522	Parameter	const char * name	487:37:10407:10422	1507482	1	True				
ANR	1507523	ParameterType	const char *		1507482	0					
ANR	1507524	Identifier	name		1507482	1					
ANR	1507525	Parameter	const char * glob	487:55:10425:10440	1507482	2	True				
ANR	1507526	ParameterType	const char *		1507482	0					
ANR	1507527	Identifier	glob		1507482	1					
ANR	1507528	CFGEntryNode	ENTRY		1507482		True				
ANR	1507529	CFGExitNode	EXIT		1507482		True				
ANR	1507530	Symbol	r_list_newf		1507482						
ANR	1507531	Symbol	name		1507482						
ANR	1507532	Symbol	glob		1507482						
ANR	1507533	Symbol	list		1507482						
ANR	1507534	Symbol	free		1507482						
ANR	1507535	Symbol	fs		1507482						
ANR	1507536	Function	r_fs_slurp	495:0:10558:11211							
ANR	1507537	FunctionDef	"r_fs_slurp (RFS * fs , const char * path)"		1507536	0					
ANR	1507538	CompoundStatement		495:53:10611:11211	1507536	0					
ANR	1507539	IdentifierDeclStatement	RFSFile * file = NULL ;	496:1:10614:10634	1507536	0	True				
ANR	1507540	IdentifierDecl	* file = NULL		1507536	0					
ANR	1507541	IdentifierDeclType	RFSFile *		1507536	0					
ANR	1507542	Identifier	file		1507536	1					
ANR	1507543	AssignmentExpression	* file = NULL		1507536	2		=			
ANR	1507544	Identifier	NULL		1507536	0					
ANR	1507545	Identifier	NULL		1507536	1					
ANR	1507546	IdentifierDeclStatement	RFSRoot * root ;	497:1:10637:10650	1507536	1	True				
ANR	1507547	IdentifierDecl	* root		1507536	0					
ANR	1507548	IdentifierDeclType	RFSRoot *		1507536	0					
ANR	1507549	Identifier	root		1507536	1					
ANR	1507550	IdentifierDeclStatement	"RList * roots = r_fs_root ( fs , path ) ;"	498:1:10653:10688	1507536	2	True				
ANR	1507551	IdentifierDecl	"* roots = r_fs_root ( fs , path )"		1507536	0					
ANR	1507552	IdentifierDeclType	RList *		1507536	0					
ANR	1507553	Identifier	roots		1507536	1					
ANR	1507554	AssignmentExpression	"* roots = r_fs_root ( fs , path )"		1507536	2		=			
ANR	1507555	Identifier	roots		1507536	0					
ANR	1507556	CallExpression	"r_fs_root ( fs , path )"		1507536	1					
ANR	1507557	Callee	r_fs_root		1507536	0					
ANR	1507558	Identifier	r_fs_root		1507536	0					
ANR	1507559	ArgumentList	fs		1507536	1					
ANR	1507560	Argument	fs		1507536	0					
ANR	1507561	Identifier	fs		1507536	0					
ANR	1507562	Argument	path		1507536	1					
ANR	1507563	Identifier	path		1507536	0					
ANR	1507564	IdentifierDeclStatement	RListIter * iter ;	499:1:10691:10706	1507536	3	True				
ANR	1507565	IdentifierDecl	* iter		1507536	0					
ANR	1507566	IdentifierDeclType	RListIter *		1507536	0					
ANR	1507567	Identifier	iter		1507536	1					
ANR	1507568	Statement	r_list_foreach	500:1:10709:10722	1507536	4	True				
ANR	1507569	Statement	(	500:16:10724:10724	1507536	5	True				
ANR	1507570	Statement	roots	500:17:10725:10729	1507536	6	True				
ANR	1507571	Statement	","	500:22:10730:10730	1507536	7	True				
ANR	1507572	Statement	iter	500:24:10732:10735	1507536	8	True				
ANR	1507573	Statement	","	500:28:10736:10736	1507536	9	True				
ANR	1507574	Statement	root	500:30:10738:10741	1507536	10	True				
ANR	1507575	Statement	)	500:34:10742:10742	1507536	11	True				
ANR	1507576	CompoundStatement		6:36:132:132	1507536	12					
ANR	1507577	IfStatement	if ( ! root || ! root -> p )		1507536	0					
ANR	1507578	Condition	! root || ! root -> p	501:6:10752:10768	1507536	0	True				
ANR	1507579	OrExpression	! root || ! root -> p		1507536	0		||			
ANR	1507580	UnaryOperationExpression	! root		1507536	0					
ANR	1507581	UnaryOperator	!		1507536	0					
ANR	1507582	Identifier	root		1507536	1					
ANR	1507583	UnaryOperationExpression	! root -> p		1507536	1					
ANR	1507584	UnaryOperator	!		1507536	0					
ANR	1507585	PtrMemberAccess	root -> p		1507536	1					
ANR	1507586	Identifier	root		1507536	0					
ANR	1507587	Identifier	p		1507536	1					
ANR	1507588	CompoundStatement		7:25:159:159	1507536	1					
ANR	1507589	ContinueStatement	continue ;	502:3:10776:10784	1507536	0	True				
ANR	1507590	IfStatement	if ( root -> p -> open && root -> p -> read && root -> p -> close )		1507536	1					
ANR	1507591	Condition	root -> p -> open && root -> p -> read && root -> p -> close	504:6:10796:10843	1507536	0	True				
ANR	1507592	AndExpression	root -> p -> open && root -> p -> read && root -> p -> close		1507536	0		&&			
ANR	1507593	PtrMemberAccess	root -> p -> open		1507536	0					
ANR	1507594	PtrMemberAccess	root -> p		1507536	0					
ANR	1507595	Identifier	root		1507536	0					
ANR	1507596	Identifier	p		1507536	1					
ANR	1507597	Identifier	open		1507536	1					
ANR	1507598	AndExpression	root -> p -> read && root -> p -> close		1507536	1		&&			
ANR	1507599	PtrMemberAccess	root -> p -> read		1507536	0					
ANR	1507600	PtrMemberAccess	root -> p		1507536	0					
ANR	1507601	Identifier	root		1507536	0					
ANR	1507602	Identifier	p		1507536	1					
ANR	1507603	Identifier	read		1507536	1					
ANR	1507604	PtrMemberAccess	root -> p -> close		1507536	1					
ANR	1507605	PtrMemberAccess	root -> p		1507536	0					
ANR	1507606	Identifier	root		1507536	0					
ANR	1507607	Identifier	p		1507536	1					
ANR	1507608	Identifier	close		1507536	1					
ANR	1507609	CompoundStatement		10:56:234:234	1507536	1					
ANR	1507610	ExpressionStatement	"file = root -> p -> open ( root , path , false )"	505:3:10851:10891	1507536	0	True				
ANR	1507611	AssignmentExpression	"file = root -> p -> open ( root , path , false )"		1507536	0		=			
ANR	1507612	Identifier	file		1507536	0					
ANR	1507613	CallExpression	"root -> p -> open ( root , path , false )"		1507536	1					
ANR	1507614	Callee	root -> p -> open		1507536	0					
ANR	1507615	PtrMemberAccess	root -> p -> open		1507536	0					
ANR	1507616	PtrMemberAccess	root -> p		1507536	0					
ANR	1507617	Identifier	root		1507536	0					
ANR	1507618	Identifier	p		1507536	1					
ANR	1507619	Identifier	open		1507536	1					
ANR	1507620	ArgumentList	root		1507536	1					
ANR	1507621	Argument	root		1507536	0					
ANR	1507622	Identifier	root		1507536	0					
ANR	1507623	Argument	path		1507536	1					
ANR	1507624	Identifier	path		1507536	0					
ANR	1507625	Argument	false		1507536	2					
ANR	1507626	Identifier	false		1507536	0					
ANR	1507627	IfStatement	if ( file )		1507536	1					
ANR	1507628	Condition	file	506:7:10900:10903	1507536	0	True				
ANR	1507629	Identifier	file		1507536	0					
ANR	1507630	CompoundStatement		12:13:294:294	1507536	1					
ANR	1507631	ExpressionStatement	"root -> p -> read ( file , 0 , file -> size )"	507:4:10912:10947	1507536	0	True				
ANR	1507632	CallExpression	"root -> p -> read ( file , 0 , file -> size )"		1507536	0					
ANR	1507633	Callee	root -> p -> read		1507536	0					
ANR	1507634	PtrMemberAccess	root -> p -> read		1507536	0					
ANR	1507635	PtrMemberAccess	root -> p		1507536	0					
ANR	1507636	Identifier	root		1507536	0					
ANR	1507637	Identifier	p		1507536	1					
ANR	1507638	Identifier	read		1507536	1					
ANR	1507639	ArgumentList	file		1507536	1					
ANR	1507640	Argument	file		1507536	0					
ANR	1507641	Identifier	file		1507536	0					
ANR	1507642	Argument	0		1507536	1					
ANR	1507643	PrimaryExpression	0		1507536	0					
ANR	1507644	Argument	file -> size		1507536	2					
ANR	1507645	PtrMemberAccess	file -> size		1507536	0					
ANR	1507646	Identifier	file		1507536	0					
ANR	1507647	Identifier	size		1507536	1					
ANR	1507648	ElseStatement	else		1507536	0					
ANR	1507649	CompoundStatement		14:9:359:359	1507536	0					
ANR	1507650	ExpressionStatement	"eprintf ( ""r_fs_slurp: cannot open file\\n"" )"	509:4:10977:11019	1507536	0	True				
ANR	1507651	CallExpression	"eprintf ( ""r_fs_slurp: cannot open file\\n"" )"		1507536	0					
ANR	1507652	Callee	eprintf		1507536	0					
ANR	1507653	Identifier	eprintf		1507536	0					
ANR	1507654	ArgumentList	"""r_fs_slurp: cannot open file\\n"""		1507536	1					
ANR	1507655	Argument	"""r_fs_slurp: cannot open file\\n"""		1507536	0					
ANR	1507656	PrimaryExpression	"""r_fs_slurp: cannot open file\\n"""		1507536	0					
ANR	1507657	ElseStatement	else		1507536	0					
ANR	1507658	CompoundStatement		17:9:423:423	1507536	0					
ANR	1507659	IfStatement	if ( root -> p -> slurp )		1507536	0					
ANR	1507660	Condition	root -> p -> slurp	512:7:11044:11057	1507536	0	True				
ANR	1507661	PtrMemberAccess	root -> p -> slurp		1507536	0					
ANR	1507662	PtrMemberAccess	root -> p		1507536	0					
ANR	1507663	Identifier	root		1507536	0					
ANR	1507664	Identifier	p		1507536	1					
ANR	1507665	Identifier	slurp		1507536	1					
ANR	1507666	CompoundStatement		18:23:448:448	1507536	1					
ANR	1507667	ExpressionStatement	free ( roots )	513:4:11066:11078	1507536	0	True				
ANR	1507668	CallExpression	free ( roots )		1507536	0					
ANR	1507669	Callee	free		1507536	0					
ANR	1507670	Identifier	free		1507536	0					
ANR	1507671	ArgumentList	roots		1507536	1					
ANR	1507672	Argument	roots		1507536	0					
ANR	1507673	Identifier	roots		1507536	0					
ANR	1507674	ReturnStatement	"return root -> p -> slurp ( root , path ) ;"	514:4:11084:11118	1507536	1	True				
ANR	1507675	CallExpression	"root -> p -> slurp ( root , path )"		1507536	0					
ANR	1507676	Callee	root -> p -> slurp		1507536	0					
ANR	1507677	PtrMemberAccess	root -> p -> slurp		1507536	0					
ANR	1507678	PtrMemberAccess	root -> p		1507536	0					
ANR	1507679	Identifier	root		1507536	0					
ANR	1507680	Identifier	p		1507536	1					
ANR	1507681	Identifier	slurp		1507536	1					
ANR	1507682	ArgumentList	root		1507536	1					
ANR	1507683	Argument	root		1507536	0					
ANR	1507684	Identifier	root		1507536	0					
ANR	1507685	Argument	path		1507536	1					
ANR	1507686	Identifier	path		1507536	0					
ANR	1507687	ExpressionStatement	"eprintf ( ""r_fs_slurp: null root->p->slurp\\n"" )"	516:3:11128:11173	1507536	1	True				
ANR	1507688	CallExpression	"eprintf ( ""r_fs_slurp: null root->p->slurp\\n"" )"		1507536	0					
ANR	1507689	Callee	eprintf		1507536	0					
ANR	1507690	Identifier	eprintf		1507536	0					
ANR	1507691	ArgumentList	"""r_fs_slurp: null root->p->slurp\\n"""		1507536	1					
ANR	1507692	Argument	"""r_fs_slurp: null root->p->slurp\\n"""		1507536	0					
ANR	1507693	PrimaryExpression	"""r_fs_slurp: null root->p->slurp\\n"""		1507536	0					
ANR	1507694	ExpressionStatement	free ( roots )	519:1:11183:11195	1507536	13	True				
ANR	1507695	CallExpression	free ( roots )		1507536	0					
ANR	1507696	Callee	free		1507536	0					
ANR	1507697	Identifier	free		1507536	0					
ANR	1507698	ArgumentList	roots		1507536	1					
ANR	1507699	Argument	roots		1507536	0					
ANR	1507700	Identifier	roots		1507536	0					
ANR	1507701	ReturnStatement	return file ;	520:1:11198:11209	1507536	14	True				
ANR	1507702	Identifier	file		1507536	0					
ANR	1507703	ReturnType	R_API RFSFile *		1507536	1					
ANR	1507704	Identifier	r_fs_slurp		1507536	2					
ANR	1507705	ParameterList	"RFS * fs , const char * path"		1507536	3					
ANR	1507706	Parameter	RFS * fs	495:26:10584:10590	1507536	0	True				
ANR	1507707	ParameterType	RFS *		1507536	0					
ANR	1507708	Identifier	fs		1507536	1					
ANR	1507709	Parameter	const char * path	495:35:10593:10608	1507536	1	True				
ANR	1507710	ParameterType	const char *		1507536	0					
ANR	1507711	Identifier	path		1507536	1					
ANR	1507712	CFGEntryNode	ENTRY		1507536		True				
ANR	1507713	CFGExitNode	EXIT		1507536		True				
ANR	1507714	CFGErrorNode	ERROR		1507536		True				
ANR	1507715	Symbol	root -> p -> read		1507536						
ANR	1507716	Symbol	NULL		1507536						
ANR	1507717	Symbol	* root -> p		1507536						
ANR	1507718	Symbol	root -> p -> close		1507536						
ANR	1507719	Symbol	root -> p		1507536						
ANR	1507720	Symbol	false		1507536						
ANR	1507721	Symbol	iter		1507536						
ANR	1507722	Symbol	roots		1507536						
ANR	1507723	Symbol	* file		1507536						
ANR	1507724	Symbol	fs		1507536						
ANR	1507725	Symbol	path		1507536						
ANR	1507726	Symbol	* * root		1507536						
ANR	1507727	Symbol	file		1507536						
ANR	1507728	Symbol	r_fs_root		1507536						
ANR	1507729	Symbol	root		1507536						
ANR	1507730	Symbol	file -> size		1507536						
ANR	1507731	Symbol	* root		1507536						
ANR	1507732	Symbol	root -> p -> open		1507536						
ANR	1507733	Symbol	root -> p -> slurp		1507536						
ANR	1507734	Function	grub_parhook	527:0:11298:11595							
ANR	1507735	FunctionDef	"grub_parhook (void * disk , void * ptr , void * closure)"		1507734	0					
ANR	1507736	CompoundStatement		527:62:11360:11595	1507734	0					
ANR	1507737	IdentifierDeclStatement	struct grub_partition * par = ptr ;	528:1:11363:11395	1507734	0	True				
ANR	1507738	IdentifierDecl	* par = ptr		1507734	0					
ANR	1507739	IdentifierDeclType	struct grub_partition *		1507734	0					
ANR	1507740	Identifier	par		1507734	1					
ANR	1507741	AssignmentExpression	* par = ptr		1507734	2		=			
ANR	1507742	Identifier	ptr		1507734	0					
ANR	1507743	Identifier	ptr		1507734	1					
ANR	1507744	IdentifierDeclStatement	RList * list = ( RList * ) closure ;	529:1:11398:11428	1507734	1	True				
ANR	1507745	IdentifierDecl	* list = ( RList * ) closure		1507734	0					
ANR	1507746	IdentifierDeclType	RList *		1507734	0					
ANR	1507747	Identifier	list		1507734	1					
ANR	1507748	AssignmentExpression	* list = ( RList * ) closure		1507734	2		=			
ANR	1507749	Identifier	list		1507734	0					
ANR	1507750	CastExpression	( RList * ) closure		1507734	1					
ANR	1507751	CastTarget	RList *		1507734	0					
ANR	1507752	Identifier	closure		1507734	1					
ANR	1507753	IdentifierDeclStatement	"RFSPartition * p = r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len ) ;"	530:1:11431:11529	1507734	2	True				
ANR	1507754	IdentifierDecl	"* p = r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len )"		1507734	0					
ANR	1507755	IdentifierDeclType	RFSPartition *		1507734	0					
ANR	1507756	Identifier	p		1507734	1					
ANR	1507757	AssignmentExpression	"* p = r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len )"		1507734	2		=			
ANR	1507758	Identifier	p		1507734	0					
ANR	1507759	CallExpression	"r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len )"		1507734	1					
ANR	1507760	Callee	r_fs_partition_new		1507734	0					
ANR	1507761	Identifier	r_fs_partition_new		1507734	0					
ANR	1507762	ArgumentList	r_list_length ( list )		1507734	1					
ANR	1507763	Argument	r_list_length ( list )		1507734	0					
ANR	1507764	CallExpression	r_list_length ( list )		1507734	0					
ANR	1507765	Callee	r_list_length		1507734	0					
ANR	1507766	Identifier	r_list_length		1507734	0					
ANR	1507767	ArgumentList	list		1507734	1					
ANR	1507768	Argument	list		1507734	0					
ANR	1507769	Identifier	list		1507734	0					
ANR	1507770	Argument	par -> start * 512		1507734	1					
ANR	1507771	MultiplicativeExpression	par -> start * 512		1507734	0		*			
ANR	1507772	PtrMemberAccess	par -> start		1507734	0					
ANR	1507773	Identifier	par		1507734	0					
ANR	1507774	Identifier	start		1507734	1					
ANR	1507775	PrimaryExpression	512		1507734	1					
ANR	1507776	Argument	512 * par -> len		1507734	2					
ANR	1507777	MultiplicativeExpression	512 * par -> len		1507734	0		*			
ANR	1507778	PrimaryExpression	512		1507734	0					
ANR	1507779	PtrMemberAccess	par -> len		1507734	1					
ANR	1507780	Identifier	par		1507734	0					
ANR	1507781	Identifier	len		1507734	1					
ANR	1507782	ExpressionStatement	p -> type = par -> msdostype	533:1:11532:11556	1507734	3	True				
ANR	1507783	AssignmentExpression	p -> type = par -> msdostype		1507734	0		=			
ANR	1507784	PtrMemberAccess	p -> type		1507734	0					
ANR	1507785	Identifier	p		1507734	0					
ANR	1507786	Identifier	type		1507734	1					
ANR	1507787	PtrMemberAccess	par -> msdostype		1507734	1					
ANR	1507788	Identifier	par		1507734	0					
ANR	1507789	Identifier	msdostype		1507734	1					
ANR	1507790	ExpressionStatement	"r_list_append ( list , p )"	534:1:11559:11582	1507734	4	True				
ANR	1507791	CallExpression	"r_list_append ( list , p )"		1507734	0					
ANR	1507792	Callee	r_list_append		1507734	0					
ANR	1507793	Identifier	r_list_append		1507734	0					
ANR	1507794	ArgumentList	list		1507734	1					
ANR	1507795	Argument	list		1507734	0					
ANR	1507796	Identifier	list		1507734	0					
ANR	1507797	Argument	p		1507734	1					
ANR	1507798	Identifier	p		1507734	0					
ANR	1507799	ReturnStatement	return 0 ;	535:1:11585:11593	1507734	5	True				
ANR	1507800	PrimaryExpression	0		1507734	0					
ANR	1507801	ReturnType	static int		1507734	1					
ANR	1507802	Identifier	grub_parhook		1507734	2					
ANR	1507803	ParameterList	"void * disk , void * ptr , void * closure"		1507734	3					
ANR	1507804	Parameter	void * disk	527:24:11322:11331	1507734	0	True				
ANR	1507805	ParameterType	void *		1507734	0					
ANR	1507806	Identifier	disk		1507734	1					
ANR	1507807	Parameter	void * ptr	527:36:11334:11342	1507734	1	True				
ANR	1507808	ParameterType	void *		1507734	0					
ANR	1507809	Identifier	ptr		1507734	1					
ANR	1507810	Parameter	void * closure	527:47:11345:11357	1507734	2	True				
ANR	1507811	ParameterType	void *		1507734	0					
ANR	1507812	Identifier	closure		1507734	1					
ANR	1507813	CFGEntryNode	ENTRY		1507734		True				
ANR	1507814	CFGExitNode	EXIT		1507734		True				
ANR	1507815	Symbol	par		1507734						
ANR	1507816	Symbol	par -> len		1507734						
ANR	1507817	Symbol	* par		1507734						
ANR	1507818	Symbol	list		1507734						
ANR	1507819	Symbol	par -> start		1507734						
ANR	1507820	Symbol	r_fs_partition_new		1507734						
ANR	1507821	Symbol	p -> type		1507734						
ANR	1507822	Symbol	ptr		1507734						
ANR	1507823	Symbol	p		1507734						
ANR	1507824	Symbol	disk		1507734						
ANR	1507825	Symbol	* p		1507734						
ANR	1507826	Symbol	closure		1507734						
ANR	1507827	Symbol	r_list_length		1507734						
ANR	1507828	Symbol	par -> msdostype		1507734						
ANR	1507829	Function	fs_parhook	539:0:11605:11765							
ANR	1507830	FunctionDef	"fs_parhook (void * disk , void * ptr , void * closure)"		1507829	0					
ANR	1507831	CompoundStatement		539:60:11665:11765	1507829	0					
ANR	1507832	IdentifierDeclStatement	RFSPartition * par = ptr ;	540:1:11668:11691	1507829	0	True				
ANR	1507833	IdentifierDecl	* par = ptr		1507829	0					
ANR	1507834	IdentifierDeclType	RFSPartition *		1507829	0					
ANR	1507835	Identifier	par		1507829	1					
ANR	1507836	AssignmentExpression	* par = ptr		1507829	2		=			
ANR	1507837	Identifier	ptr		1507829	0					
ANR	1507838	Identifier	ptr		1507829	1					
ANR	1507839	IdentifierDeclStatement	RList * list = ( RList * ) closure ;	541:1:11694:11724	1507829	1	True				
ANR	1507840	IdentifierDecl	* list = ( RList * ) closure		1507829	0					
ANR	1507841	IdentifierDeclType	RList *		1507829	0					
ANR	1507842	Identifier	list		1507829	1					
ANR	1507843	AssignmentExpression	* list = ( RList * ) closure		1507829	2		=			
ANR	1507844	Identifier	list		1507829	0					
ANR	1507845	CastExpression	( RList * ) closure		1507829	1					
ANR	1507846	CastTarget	RList *		1507829	0					
ANR	1507847	Identifier	closure		1507829	1					
ANR	1507848	ExpressionStatement	"r_list_append ( list , par )"	542:1:11727:11752	1507829	2	True				
ANR	1507849	CallExpression	"r_list_append ( list , par )"		1507829	0					
ANR	1507850	Callee	r_list_append		1507829	0					
ANR	1507851	Identifier	r_list_append		1507829	0					
ANR	1507852	ArgumentList	list		1507829	1					
ANR	1507853	Argument	list		1507829	0					
ANR	1507854	Identifier	list		1507829	0					
ANR	1507855	Argument	par		1507829	1					
ANR	1507856	Identifier	par		1507829	0					
ANR	1507857	ReturnStatement	return 0 ;	543:1:11755:11763	1507829	3	True				
ANR	1507858	PrimaryExpression	0		1507829	0					
ANR	1507859	ReturnType	static int		1507829	1					
ANR	1507860	Identifier	fs_parhook		1507829	2					
ANR	1507861	ParameterList	"void * disk , void * ptr , void * closure"		1507829	3					
ANR	1507862	Parameter	void * disk	539:22:11627:11636	1507829	0	True				
ANR	1507863	ParameterType	void *		1507829	0					
ANR	1507864	Identifier	disk		1507829	1					
ANR	1507865	Parameter	void * ptr	539:34:11639:11647	1507829	1	True				
ANR	1507866	ParameterType	void *		1507829	0					
ANR	1507867	Identifier	ptr		1507829	1					
ANR	1507868	Parameter	void * closure	539:45:11650:11662	1507829	2	True				
ANR	1507869	ParameterType	void *		1507829	0					
ANR	1507870	Identifier	closure		1507829	1					
ANR	1507871	CFGEntryNode	ENTRY		1507829		True				
ANR	1507872	CFGExitNode	EXIT		1507829		True				
ANR	1507873	Symbol	par		1507829						
ANR	1507874	Symbol	disk		1507829						
ANR	1507875	Symbol	list		1507829						
ANR	1507876	Symbol	closure		1507829						
ANR	1507877	Symbol	ptr		1507829						
ANR	1507878	DeclStmt									
ANR	1507879	Decl							RFSPartitionType	RFSPartitionType [ ]	partitions
ANR	1507880	Function	r_fs_partition_type_get	571:6:12602:12738							
ANR	1507881	FunctionDef	r_fs_partition_type_get (int n)		1507880	0					
ANR	1507882	CompoundStatement		571:49:12645:12738	1507880	0					
ANR	1507883	IfStatement	if ( n < 0 || n >= R_FS_PARTITIONS_LENGTH )		1507880	0					
ANR	1507884	Condition	n < 0 || n >= R_FS_PARTITIONS_LENGTH	572:5:12652:12687	1507880	0	True				
ANR	1507885	OrExpression	n < 0 || n >= R_FS_PARTITIONS_LENGTH		1507880	0		||			
ANR	1507886	RelationalExpression	n < 0		1507880	0		<			
ANR	1507887	Identifier	n		1507880	0					
ANR	1507888	PrimaryExpression	0		1507880	1					
ANR	1507889	RelationalExpression	n >= R_FS_PARTITIONS_LENGTH		1507880	1		>=			
ANR	1507890	Identifier	n		1507880	0					
ANR	1507891	Identifier	R_FS_PARTITIONS_LENGTH		1507880	1					
ANR	1507892	CompoundStatement		2:43:44:44	1507880	1					
ANR	1507893	ReturnStatement	return NULL ;	573:2:12694:12705	1507880	0	True				
ANR	1507894	Identifier	NULL		1507880	0					
ANR	1507895	ReturnStatement	return partitions [ n ] . name ;	575:1:12711:12736	1507880	1	True				
ANR	1507896	MemberAccess	partitions [ n ] . name		1507880	0					
ANR	1507897	ArrayIndexing	partitions [ n ]		1507880	0					
ANR	1507898	Identifier	partitions		1507880	0					
ANR	1507899	Identifier	n		1507880	1					
ANR	1507900	Identifier	name		1507880	1					
ANR	1507901	ReturnType	const char *		1507880	1					
ANR	1507902	Identifier	r_fs_partition_type_get		1507880	2					
ANR	1507903	ParameterList	int n		1507880	3					
ANR	1507904	Parameter	int n	571:42:12638:12642	1507880	0	True				
ANR	1507905	ParameterType	int		1507880	0					
ANR	1507906	Identifier	n		1507880	1					
ANR	1507907	CFGEntryNode	ENTRY		1507880		True				
ANR	1507908	CFGExitNode	EXIT		1507880		True				
ANR	1507909	Symbol	partitions		1507880						
ANR	1507910	Symbol	NULL		1507880						
ANR	1507911	Symbol	* n		1507880						
ANR	1507912	Symbol	partitions [ n ] . name		1507880						
ANR	1507913	Symbol	* partitions		1507880						
ANR	1507914	Symbol	R_FS_PARTITIONS_LENGTH		1507880						
ANR	1507915	Symbol	n		1507880						
ANR	1507916	Function	r_fs_partition_get_size	578:0:12741:12811							
ANR	1507917	FunctionDef	r_fs_partition_get_size ()		1507916	0					
ANR	1507918	CompoundStatement		578:36:12777:12811	1507916	0					
ANR	1507919	ReturnStatement	return R_FS_PARTITIONS_LENGTH ;	579:1:12780:12809	1507916	0	True				
ANR	1507920	Identifier	R_FS_PARTITIONS_LENGTH		1507916	0					
ANR	1507921	ReturnType	R_API int		1507916	1					
ANR	1507922	Identifier	r_fs_partition_get_size		1507916	2					
ANR	1507923	ParameterList			1507916	3					
ANR	1507924	CFGEntryNode	ENTRY		1507916		True				
ANR	1507925	CFGExitNode	EXIT		1507916		True				
ANR	1507926	Symbol	R_FS_PARTITIONS_LENGTH		1507916						
ANR	1507927	Function	r_fs_partitions	582:0:12814:13812							
ANR	1507928	FunctionDef	"r_fs_partitions (RFS * fs , const char * ptype , ut64 delta)"		1507927	0					
ANR	1507929	CompoundStatement		582:69:12883:13812	1507927	0					
ANR	1507930	IdentifierDeclStatement	"int i , cur = - 1 ;"	583:1:12886:12901	1507927	0	True				
ANR	1507931	IdentifierDecl	i		1507927	0					
ANR	1507932	IdentifierDeclType	int		1507927	0					
ANR	1507933	Identifier	i		1507927	1					
ANR	1507934	IdentifierDecl	cur = - 1		1507927	1					
ANR	1507935	IdentifierDeclType	int		1507927	0					
ANR	1507936	Identifier	cur		1507927	1					
ANR	1507937	AssignmentExpression	cur = - 1		1507927	2		=			
ANR	1507938	Identifier	cur		1507927	0					
ANR	1507939	UnaryOperationExpression	- 1		1507927	1					
ANR	1507940	UnaryOperator	-		1507927	0					
ANR	1507941	PrimaryExpression	1		1507927	1					
ANR	1507942	ForStatement	for ( i = 0 ; partitions [ i ] . name ; i ++ )		1507927	1					
ANR	1507943	ForInit	i = 0 ;	584:6:12909:12914	1507927	0	True				
ANR	1507944	AssignmentExpression	i = 0		1507927	0		=			
ANR	1507945	Identifier	i		1507927	0					
ANR	1507946	PrimaryExpression	0		1507927	1					
ANR	1507947	Condition	partitions [ i ] . name	584:13:12916:12933	1507927	1	True				
ANR	1507948	MemberAccess	partitions [ i ] . name		1507927	0					
ANR	1507949	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1507950	Identifier	partitions		1507927	0					
ANR	1507951	Identifier	i		1507927	1					
ANR	1507952	Identifier	name		1507927	1					
ANR	1507953	PostIncDecOperationExpression	i ++	584:33:12936:12938	1507927	2	True				
ANR	1507954	Identifier	i		1507927	0					
ANR	1507955	IncDec	++		1507927	1					
ANR	1507956	CompoundStatement		3:38:57:57	1507927	3					
ANR	1507957	IfStatement	"if ( ! strcmp ( ptype , partitions [ i ] . name ) )"		1507927	0					
ANR	1507958	Condition	"! strcmp ( ptype , partitions [ i ] . name )"	585:6:12949:12983	1507927	0	True				
ANR	1507959	UnaryOperationExpression	"! strcmp ( ptype , partitions [ i ] . name )"		1507927	0					
ANR	1507960	UnaryOperator	!		1507927	0					
ANR	1507961	CallExpression	"strcmp ( ptype , partitions [ i ] . name )"		1507927	1					
ANR	1507962	Callee	strcmp		1507927	0					
ANR	1507963	Identifier	strcmp		1507927	0					
ANR	1507964	ArgumentList	ptype		1507927	1					
ANR	1507965	Argument	ptype		1507927	0					
ANR	1507966	Identifier	ptype		1507927	0					
ANR	1507967	Argument	partitions [ i ] . name		1507927	1					
ANR	1507968	MemberAccess	partitions [ i ] . name		1507927	0					
ANR	1507969	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1507970	Identifier	partitions		1507927	0					
ANR	1507971	Identifier	i		1507927	1					
ANR	1507972	Identifier	name		1507927	1					
ANR	1507973	CompoundStatement		4:43:102:102	1507927	1					
ANR	1507974	ExpressionStatement	cur = i	586:3:12991:12998	1507927	0	True				
ANR	1507975	AssignmentExpression	cur = i		1507927	0		=			
ANR	1507976	Identifier	cur		1507927	0					
ANR	1507977	Identifier	i		1507927	1					
ANR	1507978	BreakStatement	break ;	587:3:13003:13008	1507927	1	True				
ANR	1507979	IfStatement	if ( cur != - 1 )		1507927	2					
ANR	1507980	Condition	cur != - 1	590:5:13022:13030	1507927	0	True				
ANR	1507981	EqualityExpression	cur != - 1		1507927	0		!=			
ANR	1507982	Identifier	cur		1507927	0					
ANR	1507983	UnaryOperationExpression	- 1		1507927	1					
ANR	1507984	UnaryOperator	-		1507927	0					
ANR	1507985	PrimaryExpression	1		1507927	1					
ANR	1507986	CompoundStatement		12:2:229:246	1507927	1					
ANR	1507987	IdentifierDeclStatement	RList * list = r_list_newf ( ( RListFree ) r_fs_partition_free ) ;	591:2:13037:13096	1507927	0	True				
ANR	1507988	IdentifierDecl	* list = r_list_newf ( ( RListFree ) r_fs_partition_free )		1507927	0					
ANR	1507989	IdentifierDeclType	RList *		1507927	0					
ANR	1507990	Identifier	list		1507927	1					
ANR	1507991	AssignmentExpression	* list = r_list_newf ( ( RListFree ) r_fs_partition_free )		1507927	2		=			
ANR	1507992	Identifier	list		1507927	0					
ANR	1507993	CallExpression	r_list_newf ( ( RListFree ) r_fs_partition_free )		1507927	1					
ANR	1507994	Callee	r_list_newf		1507927	0					
ANR	1507995	Identifier	r_list_newf		1507927	0					
ANR	1507996	ArgumentList	( RListFree ) r_fs_partition_free		1507927	1					
ANR	1507997	Argument	( RListFree ) r_fs_partition_free		1507927	0					
ANR	1507998	CastExpression	( RListFree ) r_fs_partition_free		1507927	0					
ANR	1507999	CastTarget	RListFree		1507927	0					
ANR	1508000	Identifier	r_fs_partition_free		1507927	1					
ANR	1508001	IdentifierDeclStatement	void * disk = NULL ;	593:2:13113:13130	1507927	1	True				
ANR	1508002	IdentifierDecl	* disk = NULL		1507927	0					
ANR	1508003	IdentifierDeclType	void *		1507927	0					
ANR	1508004	Identifier	disk		1507927	1					
ANR	1508005	AssignmentExpression	* disk = NULL		1507927	2		=			
ANR	1508006	Identifier	NULL		1507927	0					
ANR	1508007	Identifier	NULL		1507927	1					
ANR	1508008	IfStatement	if ( partitions [ i ] . iterate == grub_parhook )		1507927	2					
ANR	1508009	Condition	partitions [ i ] . iterate == grub_parhook	594:6:13138:13174	1507927	0	True				
ANR	1508010	EqualityExpression	partitions [ i ] . iterate == grub_parhook		1507927	0		==			
ANR	1508011	MemberAccess	partitions [ i ] . iterate		1507927	0					
ANR	1508012	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1508013	Identifier	partitions		1507927	0					
ANR	1508014	Identifier	i		1507927	1					
ANR	1508015	Identifier	iterate		1507927	1					
ANR	1508016	Identifier	grub_parhook		1507927	1					
ANR	1508017	CompoundStatement		14:3:298:348	1507927	1					
ANR	1508018	IdentifierDeclStatement	struct grub_partition_map * gpt = partitions [ i ] . ptr ;	595:3:13182:13232	1507927	0	True				
ANR	1508019	IdentifierDecl	* gpt = partitions [ i ] . ptr		1507927	0					
ANR	1508020	IdentifierDeclType	struct grub_partition_map *		1507927	0					
ANR	1508021	Identifier	gpt		1507927	1					
ANR	1508022	AssignmentExpression	* gpt = partitions [ i ] . ptr		1507927	2		=			
ANR	1508023	Identifier	gpt		1507927	0					
ANR	1508024	MemberAccess	partitions [ i ] . ptr		1507927	1					
ANR	1508025	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1508026	Identifier	partitions		1507927	0					
ANR	1508027	Identifier	i		1507927	1					
ANR	1508028	Identifier	ptr		1507927	1					
ANR	1508029	ExpressionStatement	"grubfs_bind_io ( NULL , 0 )"	596:3:13237:13261	1507927	1	True				
ANR	1508030	CallExpression	"grubfs_bind_io ( NULL , 0 )"		1507927	0					
ANR	1508031	Callee	grubfs_bind_io		1507927	0					
ANR	1508032	Identifier	grubfs_bind_io		1507927	0					
ANR	1508033	ArgumentList	NULL		1507927	1					
ANR	1508034	Argument	NULL		1507927	0					
ANR	1508035	Identifier	NULL		1507927	0					
ANR	1508036	Argument	0		1507927	1					
ANR	1508037	PrimaryExpression	0		1507927	0					
ANR	1508038	ExpressionStatement	disk = ( void * ) grubfs_disk ( & fs -> iob )	597:3:13266:13303	1507927	2	True				
ANR	1508039	AssignmentExpression	disk = ( void * ) grubfs_disk ( & fs -> iob )		1507927	0		=			
ANR	1508040	Identifier	disk		1507927	0					
ANR	1508041	CastExpression	( void * ) grubfs_disk ( & fs -> iob )		1507927	1					
ANR	1508042	CastTarget	void *		1507927	0					
ANR	1508043	CallExpression	grubfs_disk ( & fs -> iob )		1507927	1					
ANR	1508044	Callee	grubfs_disk		1507927	0					
ANR	1508045	Identifier	grubfs_disk		1507927	0					
ANR	1508046	ArgumentList	& fs -> iob		1507927	1					
ANR	1508047	Argument	& fs -> iob		1507927	0					
ANR	1508048	UnaryOperationExpression	& fs -> iob		1507927	0					
ANR	1508049	UnaryOperator	&		1507927	0					
ANR	1508050	PtrMemberAccess	fs -> iob		1507927	1					
ANR	1508051	Identifier	fs		1507927	0					
ANR	1508052	Identifier	iob		1507927	1					
ANR	1508053	IfStatement	if ( gpt )		1507927	3					
ANR	1508054	Condition	gpt	598:7:13312:13314	1507927	0	True				
ANR	1508055	Identifier	gpt		1507927	0					
ANR	1508056	CompoundStatement		17:12:433:433	1507927	1					
ANR	1508057	ExpressionStatement	"gpt -> iterate ( disk , ( void * ) partitions [ i ] . iterate , list )"	599:4:13323:13384	1507927	0	True				
ANR	1508058	CallExpression	"gpt -> iterate ( disk , ( void * ) partitions [ i ] . iterate , list )"		1507927	0					
ANR	1508059	Callee	gpt -> iterate		1507927	0					
ANR	1508060	PtrMemberAccess	gpt -> iterate		1507927	0					
ANR	1508061	Identifier	gpt		1507927	0					
ANR	1508062	Identifier	iterate		1507927	1					
ANR	1508063	ArgumentList	disk		1507927	1					
ANR	1508064	Argument	disk		1507927	0					
ANR	1508065	Identifier	disk		1507927	0					
ANR	1508066	Argument	( void * ) partitions [ i ] . iterate		1507927	1					
ANR	1508067	CastExpression	( void * ) partitions [ i ] . iterate		1507927	0					
ANR	1508068	CastTarget	void *		1507927	0					
ANR	1508069	MemberAccess	partitions [ i ] . iterate		1507927	1					
ANR	1508070	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1508071	Identifier	partitions		1507927	0					
ANR	1508072	Identifier	i		1507927	1					
ANR	1508073	Identifier	iterate		1507927	1					
ANR	1508074	Argument	list		1507927	2					
ANR	1508075	Identifier	list		1507927	0					
ANR	1508076	ExpressionStatement	grubfs_free ( disk )	602:3:13394:13412	1507927	4	True				
ANR	1508077	CallExpression	grubfs_free ( disk )		1507927	0					
ANR	1508078	Callee	grubfs_free		1507927	0					
ANR	1508079	Identifier	grubfs_free		1507927	0					
ANR	1508080	ArgumentList	disk		1507927	1					
ANR	1508081	Argument	disk		1507927	0					
ANR	1508082	Identifier	disk		1507927	0					
ANR	1508083	ElseStatement	else		1507927	0					
ANR	1508084	CompoundStatement		26:3:561:609	1507927	0					
ANR	1508085	IdentifierDeclStatement	RFSPartitionIterator iterate = partitions [ i ] . ptr ;	607:3:13445:13493	1507927	0	True				
ANR	1508086	IdentifierDecl	iterate = partitions [ i ] . ptr		1507927	0					
ANR	1508087	IdentifierDeclType	RFSPartitionIterator		1507927	0					
ANR	1508088	Identifier	iterate		1507927	1					
ANR	1508089	AssignmentExpression	iterate = partitions [ i ] . ptr		1507927	2		=			
ANR	1508090	Identifier	iterate		1507927	0					
ANR	1508091	MemberAccess	partitions [ i ] . ptr		1507927	1					
ANR	1508092	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1508093	Identifier	partitions		1507927	0					
ANR	1508094	Identifier	i		1507927	1					
ANR	1508095	Identifier	ptr		1507927	1					
ANR	1508096	ExpressionStatement	"iterate ( fs , partitions [ i ] . iterate , list )"	608:3:13498:13539	1507927	1	True				
ANR	1508097	CallExpression	"iterate ( fs , partitions [ i ] . iterate , list )"		1507927	0					
ANR	1508098	Callee	iterate		1507927	0					
ANR	1508099	Identifier	iterate		1507927	0					
ANR	1508100	ArgumentList	fs		1507927	1					
ANR	1508101	Argument	fs		1507927	0					
ANR	1508102	Identifier	fs		1507927	0					
ANR	1508103	Argument	partitions [ i ] . iterate		1507927	1					
ANR	1508104	MemberAccess	partitions [ i ] . iterate		1507927	0					
ANR	1508105	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1508106	Identifier	partitions		1507927	0					
ANR	1508107	Identifier	i		1507927	1					
ANR	1508108	Identifier	iterate		1507927	1					
ANR	1508109	Argument	list		1507927	2					
ANR	1508110	Identifier	list		1507927	0					
ANR	1508111	ReturnStatement	return list ;	610:2:13570:13581	1507927	3	True				
ANR	1508112	Identifier	list		1507927	0					
ANR	1508113	IfStatement	if ( ptype && * ptype )		1507927	3					
ANR	1508114	Condition	ptype && * ptype	612:5:13591:13605	1507927	0	True				
ANR	1508115	AndExpression	ptype && * ptype		1507927	0		&&			
ANR	1508116	Identifier	ptype		1507927	0					
ANR	1508117	UnaryOperationExpression	* ptype		1507927	1					
ANR	1508118	UnaryOperator	*		1507927	0					
ANR	1508119	Identifier	ptype		1507927	1					
ANR	1508120	CompoundStatement		31:22:724:724	1507927	1					
ANR	1508121	ExpressionStatement	"eprintf ( ""Unknown partition type '%s'.\\n"" , ptype )"	613:2:13612:13661	1507927	0	True				
ANR	1508122	CallExpression	"eprintf ( ""Unknown partition type '%s'.\\n"" , ptype )"		1507927	0					
ANR	1508123	Callee	eprintf		1507927	0					
ANR	1508124	Identifier	eprintf		1507927	0					
ANR	1508125	ArgumentList	"""Unknown partition type '%s'.\\n"""		1507927	1					
ANR	1508126	Argument	"""Unknown partition type '%s'.\\n"""		1507927	0					
ANR	1508127	PrimaryExpression	"""Unknown partition type '%s'.\\n"""		1507927	0					
ANR	1508128	Argument	ptype		1507927	1					
ANR	1508129	Identifier	ptype		1507927	0					
ANR	1508130	ExpressionStatement	"eprintf ( ""Supported types:\\n"" )"	615:1:13667:13697	1507927	4	True				
ANR	1508131	CallExpression	"eprintf ( ""Supported types:\\n"" )"		1507927	0					
ANR	1508132	Callee	eprintf		1507927	0					
ANR	1508133	Identifier	eprintf		1507927	0					
ANR	1508134	ArgumentList	"""Supported types:\\n"""		1507927	1					
ANR	1508135	Argument	"""Supported types:\\n"""		1507927	0					
ANR	1508136	PrimaryExpression	"""Supported types:\\n"""		1507927	0					
ANR	1508137	ForStatement	for ( i = 0 ; partitions [ i ] . name ; i ++ )		1507927	5					
ANR	1508138	ForInit	i = 0 ;	616:6:13705:13710	1507927	0	True				
ANR	1508139	AssignmentExpression	i = 0		1507927	0		=			
ANR	1508140	Identifier	i		1507927	0					
ANR	1508141	PrimaryExpression	0		1507927	1					
ANR	1508142	Condition	partitions [ i ] . name	616:13:13712:13729	1507927	1	True				
ANR	1508143	MemberAccess	partitions [ i ] . name		1507927	0					
ANR	1508144	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1508145	Identifier	partitions		1507927	0					
ANR	1508146	Identifier	i		1507927	1					
ANR	1508147	Identifier	name		1507927	1					
ANR	1508148	PostIncDecOperationExpression	i ++	616:33:13732:13734	1507927	2	True				
ANR	1508149	Identifier	i		1507927	0					
ANR	1508150	IncDec	++		1507927	1					
ANR	1508151	CompoundStatement		35:38:853:853	1507927	3					
ANR	1508152	ExpressionStatement	"eprintf ( "" %s"" , partitions [ i ] . name )"	617:2:13741:13776	1507927	0	True				
ANR	1508153	CallExpression	"eprintf ( "" %s"" , partitions [ i ] . name )"		1507927	0					
ANR	1508154	Callee	eprintf		1507927	0					
ANR	1508155	Identifier	eprintf		1507927	0					
ANR	1508156	ArgumentList	""" %s"""		1507927	1					
ANR	1508157	Argument	""" %s"""		1507927	0					
ANR	1508158	PrimaryExpression	""" %s"""		1507927	0					
ANR	1508159	Argument	partitions [ i ] . name		1507927	1					
ANR	1508160	MemberAccess	partitions [ i ] . name		1507927	0					
ANR	1508161	ArrayIndexing	partitions [ i ]		1507927	0					
ANR	1508162	Identifier	partitions		1507927	0					
ANR	1508163	Identifier	i		1507927	1					
ANR	1508164	Identifier	name		1507927	1					
ANR	1508165	ExpressionStatement	"eprintf ( ""\\n"" )"	619:1:13782:13796	1507927	6	True				
ANR	1508166	CallExpression	"eprintf ( ""\\n"" )"		1507927	0					
ANR	1508167	Callee	eprintf		1507927	0					
ANR	1508168	Identifier	eprintf		1507927	0					
ANR	1508169	ArgumentList	"""\\n"""		1507927	1					
ANR	1508170	Argument	"""\\n"""		1507927	0					
ANR	1508171	PrimaryExpression	"""\\n"""		1507927	0					
ANR	1508172	ReturnStatement	return NULL ;	620:1:13799:13810	1507927	7	True				
ANR	1508173	Identifier	NULL		1507927	0					
ANR	1508174	ReturnType	R_API RList *		1507927	1					
ANR	1508175	Identifier	r_fs_partitions		1507927	2					
ANR	1508176	ParameterList	"RFS * fs , const char * ptype , ut64 delta"		1507927	3					
ANR	1508177	Parameter	RFS * fs	582:29:12843:12849	1507927	0	True				
ANR	1508178	ParameterType	RFS *		1507927	0					
ANR	1508179	Identifier	fs		1507927	1					
ANR	1508180	Parameter	const char * ptype	582:38:12852:12868	1507927	1	True				
ANR	1508181	ParameterType	const char *		1507927	0					
ANR	1508182	Identifier	ptype		1507927	1					
ANR	1508183	Parameter	ut64 delta	582:57:12871:12880	1507927	2	True				
ANR	1508184	ParameterType	ut64		1507927	0					
ANR	1508185	Identifier	delta		1507927	1					
ANR	1508186	CFGEntryNode	ENTRY		1507927		True				
ANR	1508187	CFGExitNode	EXIT		1507927		True				
ANR	1508188	Symbol	partitions		1507927						
ANR	1508189	Symbol	strcmp		1507927						
ANR	1508190	Symbol	partitions [ i ] . ptr		1507927						
ANR	1508191	Symbol	cur		1507927						
ANR	1508192	Symbol	NULL		1507927						
ANR	1508193	Symbol	grubfs_disk		1507927						
ANR	1508194	Symbol	partitions [ i ] . name		1507927						
ANR	1508195	Symbol	r_list_newf		1507927						
ANR	1508196	Symbol	partitions [ i ] . iterate		1507927						
ANR	1508197	Symbol	grub_parhook		1507927						
ANR	1508198	Symbol	delta		1507927						
ANR	1508199	Symbol	i		1507927						
ANR	1508200	Symbol	ptype		1507927						
ANR	1508201	Symbol	gpt		1507927						
ANR	1508202	Symbol	list		1507927						
ANR	1508203	Symbol	fs		1507927						
ANR	1508204	Symbol	& fs -> iob		1507927						
ANR	1508205	Symbol	disk		1507927						
ANR	1508206	Symbol	* i		1507927						
ANR	1508207	Symbol	* ptype		1507927						
ANR	1508208	Symbol	r_fs_partition_free		1507927						
ANR	1508209	Symbol	* partitions		1507927						
ANR	1508210	Symbol	iterate		1507927						
ANR	1508211	Function	r_fs_partition_type_str	623:0:13815:13900							
ANR	1508212	FunctionDef	r_fs_partition_type_str (const char * type)		1508211	0					
ANR	1508213	CompoundStatement		623:52:13867:13900	1508211	0					
ANR	1508214	ReturnStatement	return 0 ;	625:1:13890:13898	1508211	0	True				
ANR	1508215	PrimaryExpression	0		1508211	0					
ANR	1508216	ReturnType	R_API int		1508211	1					
ANR	1508217	Identifier	r_fs_partition_type_str		1508211	2					
ANR	1508218	ParameterList	const char * type		1508211	3					
ANR	1508219	Parameter	const char * type	623:34:13849:13864	1508211	0	True				
ANR	1508220	ParameterType	const char *		1508211	0					
ANR	1508221	Identifier	type		1508211	1					
ANR	1508222	CFGEntryNode	ENTRY		1508211		True				
ANR	1508223	CFGExitNode	EXIT		1508211		True				
ANR	1508224	Symbol	type		1508211						
ANR	1508225	Function	r_fs_partition_type	628:6:13909:15084							
ANR	1508226	FunctionDef	"r_fs_partition_type (const char * part , int type)"		1508225	0					
ANR	1508227	CompoundStatement		628:66:13969:15084	1508225	0					
ANR	1508228	SwitchStatement	switch ( type )		1508225	0					
ANR	1508229	Condition	type	630:9:14009:14012	1508225	0	True				
ANR	1508230	Identifier	type		1508225	0					
ANR	1508231	CompoundStatement		3:15:45:45	1508225	1					
ANR	1508232	Label	case GRUB_PC_PARTITION_TYPE_FAT12 :	631:1:14018:14051	1508225	0	True				
ANR	1508233	Identifier	GRUB_PC_PARTITION_TYPE_FAT12		1508225	0					
ANR	1508234	Label	case GRUB_PC_PARTITION_TYPE_FAT16_GT32M :	632:1:14054:14093	1508225	1	True				
ANR	1508235	Identifier	GRUB_PC_PARTITION_TYPE_FAT16_GT32M		1508225	0					
ANR	1508236	Label	case GRUB_PC_PARTITION_TYPE_FAT16_LT32M :	633:1:14096:14135	1508225	2	True				
ANR	1508237	Identifier	GRUB_PC_PARTITION_TYPE_FAT16_LT32M		1508225	0					
ANR	1508238	Label	case GRUB_PC_PARTITION_TYPE_FAT32 :	634:1:14138:14171	1508225	3	True				
ANR	1508239	Identifier	GRUB_PC_PARTITION_TYPE_FAT32		1508225	0					
ANR	1508240	Label	case GRUB_PC_PARTITION_TYPE_FAT32_LBA :	635:1:14174:14211	1508225	4	True				
ANR	1508241	Identifier	GRUB_PC_PARTITION_TYPE_FAT32_LBA		1508225	0					
ANR	1508242	Label	case GRUB_PC_PARTITION_TYPE_FAT16_LBA :	636:1:14214:14251	1508225	5	True				
ANR	1508243	Identifier	GRUB_PC_PARTITION_TYPE_FAT16_LBA		1508225	0					
ANR	1508244	ReturnStatement	"return strdup ( ""fat"" ) ;"	637:2:14255:14276	1508225	6	True				
ANR	1508245	CallExpression	"strdup ( ""fat"" )"		1508225	0					
ANR	1508246	Callee	strdup		1508225	0					
ANR	1508247	Identifier	strdup		1508225	0					
ANR	1508248	ArgumentList	"""fat"""		1508225	1					
ANR	1508249	Argument	"""fat"""		1508225	0					
ANR	1508250	PrimaryExpression	"""fat"""		1508225	0					
ANR	1508251	Label	case GRUB_PC_PARTITION_TYPE_EXT2FS :	639:1:14280:14314	1508225	7	True				
ANR	1508252	Identifier	GRUB_PC_PARTITION_TYPE_EXT2FS		1508225	0					
ANR	1508253	ReturnStatement	"return strdup ( ""ext2"" ) ;"	640:2:14318:14340	1508225	8	True				
ANR	1508254	CallExpression	"strdup ( ""ext2"" )"		1508225	0					
ANR	1508255	Callee	strdup		1508225	0					
ANR	1508256	Identifier	strdup		1508225	0					
ANR	1508257	ArgumentList	"""ext2"""		1508225	1					
ANR	1508258	Argument	"""ext2"""		1508225	0					
ANR	1508259	PrimaryExpression	"""ext2"""		1508225	0					
ANR	1508260	Label	case GRUB_PC_PARTITION_TYPE_MINIX :	642:1:14344:14377	1508225	9	True				
ANR	1508261	Identifier	GRUB_PC_PARTITION_TYPE_MINIX		1508225	0					
ANR	1508262	Label	case GRUB_PC_PARTITION_TYPE_LINUX_MINIX :	643:1:14380:14419	1508225	10	True				
ANR	1508263	Identifier	GRUB_PC_PARTITION_TYPE_LINUX_MINIX		1508225	0					
ANR	1508264	ReturnStatement	"return strdup ( ""minix"" ) ;"	644:2:14423:14446	1508225	11	True				
ANR	1508265	CallExpression	"strdup ( ""minix"" )"		1508225	0					
ANR	1508266	Callee	strdup		1508225	0					
ANR	1508267	Identifier	strdup		1508225	0					
ANR	1508268	ArgumentList	"""minix"""		1508225	1					
ANR	1508269	Argument	"""minix"""		1508225	0					
ANR	1508270	PrimaryExpression	"""minix"""		1508225	0					
ANR	1508271	Label	case GRUB_PC_PARTITION_TYPE_NTFS :	646:1:14450:14482	1508225	12	True				
ANR	1508272	Identifier	GRUB_PC_PARTITION_TYPE_NTFS		1508225	0					
ANR	1508273	ReturnStatement	"return strdup ( ""ntfs"" ) ;"	647:2:14486:14508	1508225	13	True				
ANR	1508274	CallExpression	"strdup ( ""ntfs"" )"		1508225	0					
ANR	1508275	Callee	strdup		1508225	0					
ANR	1508276	Identifier	strdup		1508225	0					
ANR	1508277	ArgumentList	"""ntfs"""		1508225	1					
ANR	1508278	Argument	"""ntfs"""		1508225	0					
ANR	1508279	PrimaryExpression	"""ntfs"""		1508225	0					
ANR	1508280	Label	case GRUB_PC_PARTITION_TYPE_EXTENDED :	649:1:14512:14548	1508225	14	True				
ANR	1508281	Identifier	GRUB_PC_PARTITION_TYPE_EXTENDED		1508225	0					
ANR	1508282	Label	case GRUB_PC_PARTITION_TYPE_LINUX_EXTENDED :	650:1:14551:14593	1508225	15	True				
ANR	1508283	Identifier	GRUB_PC_PARTITION_TYPE_LINUX_EXTENDED		1508225	0					
ANR	1508284	ReturnStatement	"return strdup ( ""ext3"" ) ;"	651:2:14597:14619	1508225	16	True				
ANR	1508285	CallExpression	"strdup ( ""ext3"" )"		1508225	0					
ANR	1508286	Callee	strdup		1508225	0					
ANR	1508287	Identifier	strdup		1508225	0					
ANR	1508288	ArgumentList	"""ext3"""		1508225	1					
ANR	1508289	Argument	"""ext3"""		1508225	0					
ANR	1508290	PrimaryExpression	"""ext3"""		1508225	0					
ANR	1508291	Label	case GRUB_PC_PARTITION_TYPE_HFS :	653:1:14623:14654	1508225	17	True				
ANR	1508292	Identifier	GRUB_PC_PARTITION_TYPE_HFS		1508225	0					
ANR	1508293	ReturnStatement	"return strdup ( ""hfs"" ) ;"	654:2:14658:14679	1508225	18	True				
ANR	1508294	CallExpression	"strdup ( ""hfs"" )"		1508225	0					
ANR	1508295	Callee	strdup		1508225	0					
ANR	1508296	Identifier	strdup		1508225	0					
ANR	1508297	ArgumentList	"""hfs"""		1508225	1					
ANR	1508298	Argument	"""hfs"""		1508225	0					
ANR	1508299	PrimaryExpression	"""hfs"""		1508225	0					
ANR	1508300	Label	case GRUB_PC_PARTITION_TYPE_WIN95_EXTENDED :	656:1:14683:14725	1508225	19	True				
ANR	1508301	Identifier	GRUB_PC_PARTITION_TYPE_WIN95_EXTENDED		1508225	0					
ANR	1508302	Label	case GRUB_PC_PARTITION_TYPE_EZD :	657:1:14736:14767	1508225	20	True				
ANR	1508303	Identifier	GRUB_PC_PARTITION_TYPE_EZD		1508225	0					
ANR	1508304	Label	case GRUB_PC_PARTITION_TYPE_VSTAFS :	658:1:14770:14804	1508225	21	True				
ANR	1508305	Identifier	GRUB_PC_PARTITION_TYPE_VSTAFS		1508225	0					
ANR	1508306	Label	case GRUB_PC_PARTITION_TYPE_FREEBSD :	659:1:14807:14842	1508225	22	True				
ANR	1508307	Identifier	GRUB_PC_PARTITION_TYPE_FREEBSD		1508225	0					
ANR	1508308	Label	case GRUB_PC_PARTITION_TYPE_OPENBSD :	660:1:14852:14887	1508225	23	True				
ANR	1508309	Identifier	GRUB_PC_PARTITION_TYPE_OPENBSD		1508225	0					
ANR	1508310	Label	case GRUB_PC_PARTITION_TYPE_NETBSD :	661:1:14897:14931	1508225	24	True				
ANR	1508311	Identifier	GRUB_PC_PARTITION_TYPE_NETBSD		1508225	0					
ANR	1508312	Label	case GRUB_PC_PARTITION_TYPE_GPT_DISK :	662:1:14942:14978	1508225	25	True				
ANR	1508313	Identifier	GRUB_PC_PARTITION_TYPE_GPT_DISK		1508225	0					
ANR	1508314	Label	case GRUB_PC_PARTITION_TYPE_LINUX_RAID :	663:1:14981:15019	1508225	26	True				
ANR	1508315	Identifier	GRUB_PC_PARTITION_TYPE_LINUX_RAID		1508225	0					
ANR	1508316	Label	case GRUB_PC_PARTITION_TYPE_NONE :	664:1:15022:15054	1508225	27	True				
ANR	1508317	Identifier	GRUB_PC_PARTITION_TYPE_NONE		1508225	0					
ANR	1508318	Label	default :	665:1:15057:15064	1508225	28	True				
ANR	1508319	Identifier	default		1508225	0					
ANR	1508320	ReturnStatement	return NULL ;	666:2:15068:15079	1508225	29	True				
ANR	1508321	Identifier	NULL		1508225	0					
ANR	1508322	ReturnType	const char *		1508225	1					
ANR	1508323	Identifier	r_fs_partition_type		1508225	2					
ANR	1508324	ParameterList	"const char * part , int type"		1508225	3					
ANR	1508325	Parameter	const char * part	628:38:13941:13956	1508225	0	True				
ANR	1508326	ParameterType	const char *		1508225	0					
ANR	1508327	Identifier	part		1508225	1					
ANR	1508328	Parameter	int type	628:56:13959:13966	1508225	1	True				
ANR	1508329	ParameterType	int		1508225	0					
ANR	1508330	Identifier	type		1508225	1					
ANR	1508331	CFGEntryNode	ENTRY		1508225		True				
ANR	1508332	CFGExitNode	EXIT		1508225		True				
ANR	1508333	Symbol	NULL		1508225						
ANR	1508334	Symbol	part		1508225						
ANR	1508335	Symbol	strdup		1508225						
ANR	1508336	Symbol	type		1508225						
ANR	1508337	Function	r_fs_name	670:0:15087:15743							
ANR	1508338	FunctionDef	"r_fs_name (RFS * fs , ut64 offset)"		1508337	0					
ANR	1508339	CompoundStatement		670:44:15131:15743	1508337	0					
ANR	1508340	IdentifierDeclStatement	ut8 buf [ 1024 ] ;	671:1:15134:15147	1508337	0	True				
ANR	1508341	IdentifierDecl	buf [ 1024 ]		1508337	0					
ANR	1508342	IdentifierDeclType	ut8 [ 1024 ]		1508337	0					
ANR	1508343	Identifier	buf		1508337	1					
ANR	1508344	PrimaryExpression	1024		1508337	2					
ANR	1508345	IdentifierDeclStatement	"int i , j , len , ret = false ;"	672:1:15150:15176	1508337	1	True				
ANR	1508346	IdentifierDecl	i		1508337	0					
ANR	1508347	IdentifierDeclType	int		1508337	0					
ANR	1508348	Identifier	i		1508337	1					
ANR	1508349	IdentifierDecl	j		1508337	1					
ANR	1508350	IdentifierDeclType	int		1508337	0					
ANR	1508351	Identifier	j		1508337	1					
ANR	1508352	IdentifierDecl	len		1508337	2					
ANR	1508353	IdentifierDeclType	int		1508337	0					
ANR	1508354	Identifier	len		1508337	1					
ANR	1508355	IdentifierDecl	ret = false		1508337	3					
ANR	1508356	IdentifierDeclType	int		1508337	0					
ANR	1508357	Identifier	ret		1508337	1					
ANR	1508358	AssignmentExpression	ret = false		1508337	2		=			
ANR	1508359	Identifier	false		1508337	0					
ANR	1508360	Identifier	false		1508337	1					
ANR	1508361	ForStatement	for ( i = 0 ; fstypes [ i ] . name ; i ++ )		1508337	2					
ANR	1508362	ForInit	i = 0 ;	674:6:15185:15190	1508337	0	True				
ANR	1508363	AssignmentExpression	i = 0		1508337	0		=			
ANR	1508364	Identifier	i		1508337	0					
ANR	1508365	PrimaryExpression	0		1508337	1					
ANR	1508366	Condition	fstypes [ i ] . name	674:13:15192:15206	1508337	1	True				
ANR	1508367	MemberAccess	fstypes [ i ] . name		1508337	0					
ANR	1508368	ArrayIndexing	fstypes [ i ]		1508337	0					
ANR	1508369	Identifier	fstypes		1508337	0					
ANR	1508370	Identifier	i		1508337	1					
ANR	1508371	Identifier	name		1508337	1					
ANR	1508372	PostIncDecOperationExpression	i ++	674:30:15209:15211	1508337	2	True				
ANR	1508373	Identifier	i		1508337	0					
ANR	1508374	IncDec	++		1508337	1					
ANR	1508375	CompoundStatement		6:2:86:110	1508337	3					
ANR	1508376	IdentifierDeclStatement	RFSType * f = & fstypes [ i ] ;	675:2:15218:15242	1508337	0	True				
ANR	1508377	IdentifierDecl	* f = & fstypes [ i ]		1508337	0					
ANR	1508378	IdentifierDeclType	RFSType *		1508337	0					
ANR	1508379	Identifier	f		1508337	1					
ANR	1508380	AssignmentExpression	* f = & fstypes [ i ]		1508337	2		=			
ANR	1508381	Identifier	f		1508337	0					
ANR	1508382	UnaryOperationExpression	& fstypes [ i ]		1508337	1					
ANR	1508383	UnaryOperator	&		1508337	0					
ANR	1508384	ArrayIndexing	fstypes [ i ]		1508337	1					
ANR	1508385	Identifier	fstypes		1508337	0					
ANR	1508386	Identifier	i		1508337	1					
ANR	1508387	ExpressionStatement	"len = R_MIN ( f -> buflen , sizeof ( buf ) - 1 )"	676:2:15246:15287	1508337	1	True				
ANR	1508388	AssignmentExpression	"len = R_MIN ( f -> buflen , sizeof ( buf ) - 1 )"		1508337	0		=			
ANR	1508389	Identifier	len		1508337	0					
ANR	1508390	CallExpression	"R_MIN ( f -> buflen , sizeof ( buf ) - 1 )"		1508337	1					
ANR	1508391	Callee	R_MIN		1508337	0					
ANR	1508392	Identifier	R_MIN		1508337	0					
ANR	1508393	ArgumentList	f -> buflen		1508337	1					
ANR	1508394	Argument	f -> buflen		1508337	0					
ANR	1508395	PtrMemberAccess	f -> buflen		1508337	0					
ANR	1508396	Identifier	f		1508337	0					
ANR	1508397	Identifier	buflen		1508337	1					
ANR	1508398	Argument	sizeof ( buf ) - 1		1508337	1					
ANR	1508399	AdditiveExpression	sizeof ( buf ) - 1		1508337	0		-			
ANR	1508400	SizeofExpression	sizeof ( buf )		1508337	0					
ANR	1508401	Sizeof	sizeof		1508337	0					
ANR	1508402	SizeofOperand	buf		1508337	1					
ANR	1508403	PrimaryExpression	1		1508337	1					
ANR	1508404	ExpressionStatement	"fs -> iob . read_at ( fs -> iob . io , offset + f -> bufoff , buf , len )"	677:2:15291:15349	1508337	2	True				
ANR	1508405	CallExpression	"fs -> iob . read_at ( fs -> iob . io , offset + f -> bufoff , buf , len )"		1508337	0					
ANR	1508406	Callee	fs -> iob . read_at		1508337	0					
ANR	1508407	MemberAccess	fs -> iob . read_at		1508337	0					
ANR	1508408	PtrMemberAccess	fs -> iob		1508337	0					
ANR	1508409	Identifier	fs		1508337	0					
ANR	1508410	Identifier	iob		1508337	1					
ANR	1508411	Identifier	read_at		1508337	1					
ANR	1508412	ArgumentList	fs -> iob . io		1508337	1					
ANR	1508413	Argument	fs -> iob . io		1508337	0					
ANR	1508414	MemberAccess	fs -> iob . io		1508337	0					
ANR	1508415	PtrMemberAccess	fs -> iob		1508337	0					
ANR	1508416	Identifier	fs		1508337	0					
ANR	1508417	Identifier	iob		1508337	1					
ANR	1508418	Identifier	io		1508337	1					
ANR	1508419	Argument	offset + f -> bufoff		1508337	1					
ANR	1508420	AdditiveExpression	offset + f -> bufoff		1508337	0		+			
ANR	1508421	Identifier	offset		1508337	0					
ANR	1508422	PtrMemberAccess	f -> bufoff		1508337	1					
ANR	1508423	Identifier	f		1508337	0					
ANR	1508424	Identifier	bufoff		1508337	1					
ANR	1508425	Argument	buf		1508337	2					
ANR	1508426	Identifier	buf		1508337	0					
ANR	1508427	Argument	len		1508337	3					
ANR	1508428	Identifier	len		1508337	0					
ANR	1508429	IfStatement	"if ( f -> buflen > 0 && ! memcmp ( buf , f -> buf , f -> buflen ) )"		1508337	3					
ANR	1508430	Condition	"f -> buflen > 0 && ! memcmp ( buf , f -> buf , f -> buflen )"	678:6:15357:15405	1508337	0	True				
ANR	1508431	AndExpression	"f -> buflen > 0 && ! memcmp ( buf , f -> buf , f -> buflen )"		1508337	0		&&			
ANR	1508432	RelationalExpression	f -> buflen > 0		1508337	0		>			
ANR	1508433	PtrMemberAccess	f -> buflen		1508337	0					
ANR	1508434	Identifier	f		1508337	0					
ANR	1508435	Identifier	buflen		1508337	1					
ANR	1508436	PrimaryExpression	0		1508337	1					
ANR	1508437	UnaryOperationExpression	"! memcmp ( buf , f -> buf , f -> buflen )"		1508337	1					
ANR	1508438	UnaryOperator	!		1508337	0					
ANR	1508439	CallExpression	"memcmp ( buf , f -> buf , f -> buflen )"		1508337	1					
ANR	1508440	Callee	memcmp		1508337	0					
ANR	1508441	Identifier	memcmp		1508337	0					
ANR	1508442	ArgumentList	buf		1508337	1					
ANR	1508443	Argument	buf		1508337	0					
ANR	1508444	Identifier	buf		1508337	0					
ANR	1508445	Argument	f -> buf		1508337	1					
ANR	1508446	PtrMemberAccess	f -> buf		1508337	0					
ANR	1508447	Identifier	f		1508337	0					
ANR	1508448	Identifier	buf		1508337	1					
ANR	1508449	Argument	f -> buflen		1508337	2					
ANR	1508450	PtrMemberAccess	f -> buflen		1508337	0					
ANR	1508451	Identifier	f		1508337	0					
ANR	1508452	Identifier	buflen		1508337	1					
ANR	1508453	CompoundStatement		9:57:276:276	1508337	1					
ANR	1508454	ExpressionStatement	ret = true	679:3:15413:15423	1508337	0	True				
ANR	1508455	AssignmentExpression	ret = true		1508337	0		=			
ANR	1508456	Identifier	ret		1508337	0					
ANR	1508457	Identifier	true		1508337	1					
ANR	1508458	ExpressionStatement	"len = R_MIN ( f -> bytelen , sizeof ( buf ) )"	680:3:15428:15466	1508337	1	True				
ANR	1508459	AssignmentExpression	"len = R_MIN ( f -> bytelen , sizeof ( buf ) )"		1508337	0		=			
ANR	1508460	Identifier	len		1508337	0					
ANR	1508461	CallExpression	"R_MIN ( f -> bytelen , sizeof ( buf ) )"		1508337	1					
ANR	1508462	Callee	R_MIN		1508337	0					
ANR	1508463	Identifier	R_MIN		1508337	0					
ANR	1508464	ArgumentList	f -> bytelen		1508337	1					
ANR	1508465	Argument	f -> bytelen		1508337	0					
ANR	1508466	PtrMemberAccess	f -> bytelen		1508337	0					
ANR	1508467	Identifier	f		1508337	0					
ANR	1508468	Identifier	bytelen		1508337	1					
ANR	1508469	Argument	sizeof ( buf )		1508337	1					
ANR	1508470	SizeofExpression	sizeof ( buf )		1508337	0					
ANR	1508471	Sizeof	sizeof		1508337	0					
ANR	1508472	SizeofOperand	buf		1508337	1					
ANR	1508473	ExpressionStatement	"fs -> iob . read_at ( fs -> iob . io , offset + f -> byteoff , buf , len )"	681:3:15471:15530	1508337	2	True				
ANR	1508474	CallExpression	"fs -> iob . read_at ( fs -> iob . io , offset + f -> byteoff , buf , len )"		1508337	0					
ANR	1508475	Callee	fs -> iob . read_at		1508337	0					
ANR	1508476	MemberAccess	fs -> iob . read_at		1508337	0					
ANR	1508477	PtrMemberAccess	fs -> iob		1508337	0					
ANR	1508478	Identifier	fs		1508337	0					
ANR	1508479	Identifier	iob		1508337	1					
ANR	1508480	Identifier	read_at		1508337	1					
ANR	1508481	ArgumentList	fs -> iob . io		1508337	1					
ANR	1508482	Argument	fs -> iob . io		1508337	0					
ANR	1508483	MemberAccess	fs -> iob . io		1508337	0					
ANR	1508484	PtrMemberAccess	fs -> iob		1508337	0					
ANR	1508485	Identifier	fs		1508337	0					
ANR	1508486	Identifier	iob		1508337	1					
ANR	1508487	Identifier	io		1508337	1					
ANR	1508488	Argument	offset + f -> byteoff		1508337	1					
ANR	1508489	AdditiveExpression	offset + f -> byteoff		1508337	0		+			
ANR	1508490	Identifier	offset		1508337	0					
ANR	1508491	PtrMemberAccess	f -> byteoff		1508337	1					
ANR	1508492	Identifier	f		1508337	0					
ANR	1508493	Identifier	byteoff		1508337	1					
ANR	1508494	Argument	buf		1508337	2					
ANR	1508495	Identifier	buf		1508337	0					
ANR	1508496	Argument	len		1508337	3					
ANR	1508497	Identifier	len		1508337	0					
ANR	1508498	ForStatement	for ( j = 0 ; j < len ; j ++ )		1508337	3					
ANR	1508499	ForInit	j = 0 ;	683:8:15581:15586	1508337	0	True				
ANR	1508500	AssignmentExpression	j = 0		1508337	0		=			
ANR	1508501	Identifier	j		1508337	0					
ANR	1508502	PrimaryExpression	0		1508337	1					
ANR	1508503	Condition	j < len	683:15:15588:15594	1508337	1	True				
ANR	1508504	RelationalExpression	j < len		1508337	0		<			
ANR	1508505	Identifier	j		1508337	0					
ANR	1508506	Identifier	len		1508337	1					
ANR	1508507	PostIncDecOperationExpression	j ++	683:24:15597:15599	1508337	2	True				
ANR	1508508	Identifier	j		1508337	0					
ANR	1508509	IncDec	++		1508337	1					
ANR	1508510	CompoundStatement		14:29:470:470	1508337	3					
ANR	1508511	IfStatement	if ( buf [ j ] != f -> byte )		1508337	0					
ANR	1508512	Condition	buf [ j ] != f -> byte	684:8:15612:15628	1508337	0	True				
ANR	1508513	EqualityExpression	buf [ j ] != f -> byte		1508337	0		!=			
ANR	1508514	ArrayIndexing	buf [ j ]		1508337	0					
ANR	1508515	Identifier	buf		1508337	0					
ANR	1508516	Identifier	j		1508337	1					
ANR	1508517	PtrMemberAccess	f -> byte		1508337	1					
ANR	1508518	Identifier	f		1508337	0					
ANR	1508519	Identifier	byte		1508337	1					
ANR	1508520	CompoundStatement		15:27:499:499	1508337	1					
ANR	1508521	ExpressionStatement	ret = false	685:5:15638:15649	1508337	0	True				
ANR	1508522	AssignmentExpression	ret = false		1508337	0		=			
ANR	1508523	Identifier	ret		1508337	0					
ANR	1508524	Identifier	false		1508337	1					
ANR	1508525	BreakStatement	break ;	686:5:15656:15661	1508337	1	True				
ANR	1508526	IfStatement	if ( ret )		1508337	4					
ANR	1508527	Condition	ret	689:7:15681:15683	1508337	0	True				
ANR	1508528	Identifier	ret		1508337	0					
ANR	1508529	CompoundStatement		20:12:554:554	1508337	1					
ANR	1508530	ReturnStatement	return strdup ( f -> name ) ;	690:4:15692:15715	1508337	0	True				
ANR	1508531	CallExpression	strdup ( f -> name )		1508337	0					
ANR	1508532	Callee	strdup		1508337	0					
ANR	1508533	Identifier	strdup		1508337	0					
ANR	1508534	ArgumentList	f -> name		1508337	1					
ANR	1508535	Argument	f -> name		1508337	0					
ANR	1508536	PtrMemberAccess	f -> name		1508337	0					
ANR	1508537	Identifier	f		1508337	0					
ANR	1508538	Identifier	name		1508337	1					
ANR	1508539	ReturnStatement	return NULL ;	694:1:15730:15741	1508337	3	True				
ANR	1508540	Identifier	NULL		1508337	0					
ANR	1508541	ReturnType	R_API char *		1508337	1					
ANR	1508542	Identifier	r_fs_name		1508337	2					
ANR	1508543	ParameterList	"RFS * fs , ut64 offset"		1508337	3					
ANR	1508544	Parameter	RFS * fs	670:22:15109:15115	1508337	0	True				
ANR	1508545	ParameterType	RFS *		1508337	0					
ANR	1508546	Identifier	fs		1508337	1					
ANR	1508547	Parameter	ut64 offset	670:31:15118:15128	1508337	1	True				
ANR	1508548	ParameterType	ut64		1508337	0					
ANR	1508549	Identifier	offset		1508337	1					
ANR	1508550	CFGEntryNode	ENTRY		1508337		True				
ANR	1508551	CFGExitNode	EXIT		1508337		True				
ANR	1508552	Symbol	fs -> iob . io		1508337						
ANR	1508553	Symbol	f -> name		1508337						
ANR	1508554	Symbol	fs		1508337						
ANR	1508555	Symbol	* fs		1508337						
ANR	1508556	Symbol	memcmp		1508337						
ANR	1508557	Symbol	len		1508337						
ANR	1508558	Symbol	f -> buflen		1508337						
ANR	1508559	Symbol	fstypes		1508337						
ANR	1508560	Symbol	f -> byteoff		1508337						
ANR	1508561	Symbol	ret		1508337						
ANR	1508562	Symbol	* fstypes		1508337						
ANR	1508563	Symbol	* buf		1508337						
ANR	1508564	Symbol	NULL		1508337						
ANR	1508565	Symbol	offset		1508337						
ANR	1508566	Symbol	f		1508337						
ANR	1508567	Symbol	false		1508337						
ANR	1508568	Symbol	i		1508337						
ANR	1508569	Symbol	j		1508337						
ANR	1508570	Symbol	R_MIN		1508337						
ANR	1508571	Symbol	* f		1508337						
ANR	1508572	Symbol	fstypes [ i ] . name		1508337						
ANR	1508573	Symbol	f -> bufoff		1508337						
ANR	1508574	Symbol	buf		1508337						
ANR	1508575	Symbol	* i		1508337						
ANR	1508576	Symbol	* j		1508337						
ANR	1508577	Symbol	fs -> iob		1508337						
ANR	1508578	Symbol	f -> bytelen		1508337						
ANR	1508579	Symbol	true		1508337						
ANR	1508580	Symbol	strdup		1508337						
ANR	1508581	Symbol	f -> buf		1508337						
ANR	1508582	Symbol	f -> byte		1508337						
ANR	1508583	Function	r_fs_view	697:0:15746:15806							
ANR	1508584	FunctionDef	"r_fs_view (RFS * fs , int view)"		1508583	0					
ANR	1508585	CompoundStatement		697:40:15786:15806	1508583	0					
ANR	1508586	ExpressionStatement	fs -> view = view	698:1:15789:15804	1508583	0	True				
ANR	1508587	AssignmentExpression	fs -> view = view		1508583	0		=			
ANR	1508588	PtrMemberAccess	fs -> view		1508583	0					
ANR	1508589	Identifier	fs		1508583	0					
ANR	1508590	Identifier	view		1508583	1					
ANR	1508591	Identifier	view		1508583	1					
ANR	1508592	ReturnType	R_API void		1508583	1					
ANR	1508593	Identifier	r_fs_view		1508583	2					
ANR	1508594	ParameterList	"RFS * fs , int view"		1508583	3					
ANR	1508595	Parameter	RFS * fs	697:21:15767:15773	1508583	0	True				
ANR	1508596	ParameterType	RFS *		1508583	0					
ANR	1508597	Identifier	fs		1508583	1					
ANR	1508598	Parameter	int view	697:30:15776:15783	1508583	1	True				
ANR	1508599	ParameterType	int		1508583	0					
ANR	1508600	Identifier	view		1508583	1					
ANR	1508601	CFGEntryNode	ENTRY		1508583		True				
ANR	1508602	CFGExitNode	EXIT		1508583		True				
ANR	1508603	Symbol	* fs		1508583						
ANR	1508604	Symbol	view		1508583						
ANR	1508605	Symbol	fs -> view		1508583						
ANR	1508606	Symbol	fs		1508583						
ANR	1508607	Function	r_fs_check	701:0:15809:16145							
ANR	1508608	FunctionDef	"r_fs_check (RFS * fs , const char * p)"		1508607	0					
ANR	1508609	CompoundStatement		701:46:15855:16145	1508607	0					
ANR	1508610	IdentifierDeclStatement	RFSRoot * root ;	702:1:15858:15871	1508607	0	True				
ANR	1508611	IdentifierDecl	* root		1508607	0					
ANR	1508612	IdentifierDeclType	RFSRoot *		1508607	0					
ANR	1508613	Identifier	root		1508607	1					
ANR	1508614	IdentifierDeclStatement	RListIter * iter ;	703:1:15874:15889	1508607	1	True				
ANR	1508615	IdentifierDecl	* iter		1508607	0					
ANR	1508616	IdentifierDeclType	RListIter *		1508607	0					
ANR	1508617	Identifier	iter		1508607	1					
ANR	1508618	IdentifierDeclStatement	char * path = strdup ( p ) ;	704:1:15892:15915	1508607	2	True				
ANR	1508619	IdentifierDecl	* path = strdup ( p )		1508607	0					
ANR	1508620	IdentifierDeclType	char *		1508607	0					
ANR	1508621	Identifier	path		1508607	1					
ANR	1508622	AssignmentExpression	* path = strdup ( p )		1508607	2		=			
ANR	1508623	Identifier	path		1508607	0					
ANR	1508624	CallExpression	strdup ( p )		1508607	1					
ANR	1508625	Callee	strdup		1508607	0					
ANR	1508626	Identifier	strdup		1508607	0					
ANR	1508627	ArgumentList	p		1508607	1					
ANR	1508628	Argument	p		1508607	0					
ANR	1508629	Identifier	p		1508607	0					
ANR	1508630	IfStatement	if ( ! path )		1508607	3					
ANR	1508631	Condition	! path	705:5:15922:15926	1508607	0	True				
ANR	1508632	UnaryOperationExpression	! path		1508607	0					
ANR	1508633	UnaryOperator	!		1508607	0					
ANR	1508634	Identifier	path		1508607	1					
ANR	1508635	CompoundStatement		5:12:73:73	1508607	1					
ANR	1508636	ReturnStatement	return false ;	706:2:15933:15945	1508607	0	True				
ANR	1508637	Identifier	false		1508607	0					
ANR	1508638	ExpressionStatement	r_str_trim_path ( path )	708:1:15951:15973	1508607	4	True				
ANR	1508639	CallExpression	r_str_trim_path ( path )		1508607	0					
ANR	1508640	Callee	r_str_trim_path		1508607	0					
ANR	1508641	Identifier	r_str_trim_path		1508607	0					
ANR	1508642	ArgumentList	path		1508607	1					
ANR	1508643	Argument	path		1508607	0					
ANR	1508644	Identifier	path		1508607	0					
ANR	1508645	Statement	r_list_foreach	709:1:15976:15989	1508607	5	True				
ANR	1508646	Statement	(	709:16:15991:15991	1508607	6	True				
ANR	1508647	Statement	fs	709:17:15992:15993	1508607	7	True				
ANR	1508648	Statement	->	709:19:15994:15995	1508607	8	True				
ANR	1508649	Statement	roots	709:21:15996:16000	1508607	9	True				
ANR	1508650	Statement	","	709:26:16001:16001	1508607	10	True				
ANR	1508651	Statement	iter	709:28:16003:16006	1508607	11	True				
ANR	1508652	Statement	","	709:32:16007:16007	1508607	12	True				
ANR	1508653	Statement	root	709:34:16009:16012	1508607	13	True				
ANR	1508654	Statement	)	709:38:16013:16013	1508607	14	True				
ANR	1508655	CompoundStatement		9:40:159:159	1508607	15					
ANR	1508656	IfStatement	"if ( r_fs_match ( path , root -> path , strlen ( root -> path ) ) )"		1508607	0					
ANR	1508657	Condition	"r_fs_match ( path , root -> path , strlen ( root -> path ) )"	710:6:16023:16072	1508607	0	True				
ANR	1508658	CallExpression	"r_fs_match ( path , root -> path , strlen ( root -> path ) )"		1508607	0					
ANR	1508659	Callee	r_fs_match		1508607	0					
ANR	1508660	Identifier	r_fs_match		1508607	0					
ANR	1508661	ArgumentList	path		1508607	1					
ANR	1508662	Argument	path		1508607	0					
ANR	1508663	Identifier	path		1508607	0					
ANR	1508664	Argument	root -> path		1508607	1					
ANR	1508665	PtrMemberAccess	root -> path		1508607	0					
ANR	1508666	Identifier	root		1508607	0					
ANR	1508667	Identifier	path		1508607	1					
ANR	1508668	Argument	strlen ( root -> path )		1508607	2					
ANR	1508669	CallExpression	strlen ( root -> path )		1508607	0					
ANR	1508670	Callee	strlen		1508607	0					
ANR	1508671	Identifier	strlen		1508607	0					
ANR	1508672	ArgumentList	root -> path		1508607	1					
ANR	1508673	Argument	root -> path		1508607	0					
ANR	1508674	PtrMemberAccess	root -> path		1508607	0					
ANR	1508675	Identifier	root		1508607	0					
ANR	1508676	Identifier	path		1508607	1					
ANR	1508677	CompoundStatement		10:58:219:219	1508607	1					
ANR	1508678	ExpressionStatement	free ( path )	711:3:16080:16091	1508607	0	True				
ANR	1508679	CallExpression	free ( path )		1508607	0					
ANR	1508680	Callee	free		1508607	0					
ANR	1508681	Identifier	free		1508607	0					
ANR	1508682	ArgumentList	path		1508607	1					
ANR	1508683	Argument	path		1508607	0					
ANR	1508684	Identifier	path		1508607	0					
ANR	1508685	ReturnStatement	return true ;	712:3:16096:16107	1508607	1	True				
ANR	1508686	Identifier	true		1508607	0					
ANR	1508687	ExpressionStatement	free ( path )	715:1:16117:16128	1508607	16	True				
ANR	1508688	CallExpression	free ( path )		1508607	0					
ANR	1508689	Callee	free		1508607	0					
ANR	1508690	Identifier	free		1508607	0					
ANR	1508691	ArgumentList	path		1508607	1					
ANR	1508692	Argument	path		1508607	0					
ANR	1508693	Identifier	path		1508607	0					
ANR	1508694	ReturnStatement	return false ;	716:1:16131:16143	1508607	17	True				
ANR	1508695	Identifier	false		1508607	0					
ANR	1508696	ReturnType	R_API bool		1508607	1					
ANR	1508697	Identifier	r_fs_check		1508607	2					
ANR	1508698	ParameterList	"RFS * fs , const char * p"		1508607	3					
ANR	1508699	Parameter	RFS * fs	701:22:15831:15837	1508607	0	True				
ANR	1508700	ParameterType	RFS *		1508607	0					
ANR	1508701	Identifier	fs		1508607	1					
ANR	1508702	Parameter	const char * p	701:31:15840:15852	1508607	1	True				
ANR	1508703	ParameterType	const char *		1508607	0					
ANR	1508704	Identifier	p		1508607	1					
ANR	1508705	CFGEntryNode	ENTRY		1508607		True				
ANR	1508706	CFGExitNode	EXIT		1508607		True				
ANR	1508707	Symbol	p		1508607						
ANR	1508708	Symbol	path		1508607						
ANR	1508709	Symbol	strlen		1508607						
ANR	1508710	Symbol	root		1508607						
ANR	1508711	Symbol	root -> path		1508607						
ANR	1508712	Symbol	false		1508607						
ANR	1508713	Symbol	r_fs_match		1508607						
ANR	1508714	Symbol	true		1508607						
ANR	1508715	Symbol	iter		1508607						
ANR	1508716	Symbol	strdup		1508607						
ANR	1508717	Symbol	* root		1508607						
ANR	1508718	Symbol	fs		1508607						
