command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5106892	File	data/converged/CVE-2019-16718~_radare2/libr_util_ctype.c								
ANR	5106893	Function	r_type_set	5:0:96:660							
ANR	5106894	FunctionDef	"r_type_set (Sdb * TDB , ut64 at , const char * field , ut64 val)"		5106893	0					
ANR	5106895	CompoundStatement		5:69:165:660	5106893	0					
ANR	5106896	IdentifierDeclStatement	const char * kind ;	6:1:168:184	5106893	0	True				
ANR	5106897	IdentifierDecl	* kind		5106893	0					
ANR	5106898	IdentifierDeclType	const char *		5106893	0					
ANR	5106899	Identifier	kind		5106893	1					
ANR	5106900	IdentifierDeclStatement	char var [ 128 ] ;	7:1:187:200	5106893	1	True				
ANR	5106901	IdentifierDecl	var [ 128 ]		5106893	0					
ANR	5106902	IdentifierDeclType	char [ 128 ]		5106893	0					
ANR	5106903	Identifier	var		5106893	1					
ANR	5106904	PrimaryExpression	128		5106893	2					
ANR	5106905	Statement	sprintf	8:1:203:209	5106893	2	True				
ANR	5106906	Statement	(	8:9:211:211	5106893	3	True				
ANR	5106907	Statement	var	8:10:212:214	5106893	4	True				
ANR	5106908	Statement	","	8:13:215:215	5106893	5	True				
ANR	5106909	Statement	"""link.%08"""	8:15:217:226	5106893	6	True				
ANR	5106910	Statement	PFMT64x	8:25:227:233	5106893	7	True				
ANR	5106911	Statement	","	8:32:234:234	5106893	8	True				
ANR	5106912	Statement	at	8:34:236:237	5106893	9	True				
ANR	5106913	Statement	)	8:36:238:238	5106893	10	True				
ANR	5106914	ExpressionStatement		8:37:239:239	5106893	11	True				
ANR	5106915	ExpressionStatement	"kind = sdb_const_get ( TDB , var , NULL )"	9:1:242:279	5106893	12	True				
ANR	5106916	AssignmentExpression	"kind = sdb_const_get ( TDB , var , NULL )"		5106893	0		=			
ANR	5106917	Identifier	kind		5106893	0					
ANR	5106918	CallExpression	"sdb_const_get ( TDB , var , NULL )"		5106893	1					
ANR	5106919	Callee	sdb_const_get		5106893	0					
ANR	5106920	Identifier	sdb_const_get		5106893	0					
ANR	5106921	ArgumentList	TDB		5106893	1					
ANR	5106922	Argument	TDB		5106893	0					
ANR	5106923	Identifier	TDB		5106893	0					
ANR	5106924	Argument	var		5106893	1					
ANR	5106925	Identifier	var		5106893	0					
ANR	5106926	Argument	NULL		5106893	2					
ANR	5106927	Identifier	NULL		5106893	0					
ANR	5106928	IfStatement	if ( kind )		5106893	13					
ANR	5106929	Condition	kind	10:5:286:289	5106893	0	True				
ANR	5106930	Identifier	kind		5106893	0					
ANR	5106931	CompoundStatement		7:2:130:177	5106893	1					
ANR	5106932	IdentifierDeclStatement	"const char * p = sdb_const_get ( TDB , kind , NULL ) ;"	11:2:296:343	5106893	0	True				
ANR	5106933	IdentifierDecl	"* p = sdb_const_get ( TDB , kind , NULL )"		5106893	0					
ANR	5106934	IdentifierDeclType	const char *		5106893	0					
ANR	5106935	Identifier	p		5106893	1					
ANR	5106936	AssignmentExpression	"* p = sdb_const_get ( TDB , kind , NULL )"		5106893	2		=			
ANR	5106937	Identifier	p		5106893	0					
ANR	5106938	CallExpression	"sdb_const_get ( TDB , kind , NULL )"		5106893	1					
ANR	5106939	Callee	sdb_const_get		5106893	0					
ANR	5106940	Identifier	sdb_const_get		5106893	0					
ANR	5106941	ArgumentList	TDB		5106893	1					
ANR	5106942	Argument	TDB		5106893	0					
ANR	5106943	Identifier	TDB		5106893	0					
ANR	5106944	Argument	kind		5106893	1					
ANR	5106945	Identifier	kind		5106893	0					
ANR	5106946	Argument	NULL		5106893	2					
ANR	5106947	Identifier	NULL		5106893	0					
ANR	5106948	IfStatement	if ( p )		5106893	1					
ANR	5106949	Condition	p	12:6:351:351	5106893	0	True				
ANR	5106950	Identifier	p		5106893	0					
ANR	5106951	CompoundStatement		10:3:254:301	5106893	1					
ANR	5106952	ExpressionStatement	"snprintf ( var , sizeof ( var ) , ""%s.%s.%s"" , p , kind , field )"	13:3:359:415	5106893	0	True				
ANR	5106953	CallExpression	"snprintf ( var , sizeof ( var ) , ""%s.%s.%s"" , p , kind , field )"		5106893	0					
ANR	5106954	Callee	snprintf		5106893	0					
ANR	5106955	Identifier	snprintf		5106893	0					
ANR	5106956	ArgumentList	var		5106893	1					
ANR	5106957	Argument	var		5106893	0					
ANR	5106958	Identifier	var		5106893	0					
ANR	5106959	Argument	sizeof ( var )		5106893	1					
ANR	5106960	SizeofExpression	sizeof ( var )		5106893	0					
ANR	5106961	Sizeof	sizeof		5106893	0					
ANR	5106962	SizeofOperand	var		5106893	1					
ANR	5106963	Argument	"""%s.%s.%s"""		5106893	2					
ANR	5106964	PrimaryExpression	"""%s.%s.%s"""		5106893	0					
ANR	5106965	Argument	p		5106893	3					
ANR	5106966	Identifier	p		5106893	0					
ANR	5106967	Argument	kind		5106893	4					
ANR	5106968	Identifier	kind		5106893	0					
ANR	5106969	Argument	field		5106893	5					
ANR	5106970	Identifier	field		5106893	0					
ANR	5106971	IdentifierDeclStatement	"int off = sdb_array_get_num ( TDB , var , 1 , NULL ) ;"	14:3:420:467	5106893	1	True				
ANR	5106972	IdentifierDecl	"off = sdb_array_get_num ( TDB , var , 1 , NULL )"		5106893	0					
ANR	5106973	IdentifierDeclType	int		5106893	0					
ANR	5106974	Identifier	off		5106893	1					
ANR	5106975	AssignmentExpression	"off = sdb_array_get_num ( TDB , var , 1 , NULL )"		5106893	2		=			
ANR	5106976	Identifier	off		5106893	0					
ANR	5106977	CallExpression	"sdb_array_get_num ( TDB , var , 1 , NULL )"		5106893	1					
ANR	5106978	Callee	sdb_array_get_num		5106893	0					
ANR	5106979	Identifier	sdb_array_get_num		5106893	0					
ANR	5106980	ArgumentList	TDB		5106893	1					
ANR	5106981	Argument	TDB		5106893	0					
ANR	5106982	Identifier	TDB		5106893	0					
ANR	5106983	Argument	var		5106893	1					
ANR	5106984	Identifier	var		5106893	0					
ANR	5106985	Argument	1		5106893	2					
ANR	5106986	PrimaryExpression	1		5106893	0					
ANR	5106987	Argument	NULL		5106893	3					
ANR	5106988	Identifier	NULL		5106893	0					
ANR	5106989	Statement	eprintf	16:3:525:531	5106893	2	True				
ANR	5106990	Statement	(	16:11:533:533	5106893	3	True				
ANR	5106991	Statement	"""wv 0x%08"""	16:12:534:543	5106893	4	True				
ANR	5106992	Statement	PFMT64x	16:22:544:550	5106893	5	True				
ANR	5106993	Statement	""" @ 0x%08"""	16:29:551:560	5106893	6	True				
ANR	5106994	Statement	PFMT64x	16:39:561:567	5106893	7	True				
ANR	5106995	Statement	","	16:46:568:568	5106893	8	True				
ANR	5106996	Statement	val	16:48:570:572	5106893	9	True				
ANR	5106997	Statement	","	16:51:573:573	5106893	10	True				
ANR	5106998	Statement	at	16:53:575:576	5106893	11	True				
ANR	5106999	Statement	+	16:55:577:577	5106893	12	True				
ANR	5107000	Statement	off	16:56:578:580	5106893	13	True				
ANR	5107001	Statement	)	16:59:581:581	5106893	14	True				
ANR	5107002	ExpressionStatement		16:60:582:582	5106893	15	True				
ANR	5107003	ReturnStatement	return true ;	17:3:587:598	5106893	16	True				
ANR	5107004	Identifier	true		5106893	0					
ANR	5107005	ExpressionStatement	"eprintf ( ""Invalid kind of type\\n"" )"	19:2:606:640	5106893	2	True				
ANR	5107006	CallExpression	"eprintf ( ""Invalid kind of type\\n"" )"		5106893	0					
ANR	5107007	Callee	eprintf		5106893	0					
ANR	5107008	Identifier	eprintf		5106893	0					
ANR	5107009	ArgumentList	"""Invalid kind of type\\n"""		5106893	1					
ANR	5107010	Argument	"""Invalid kind of type\\n"""		5106893	0					
ANR	5107011	PrimaryExpression	"""Invalid kind of type\\n"""		5106893	0					
ANR	5107012	ReturnStatement	return false ;	21:1:646:658	5106893	14	True				
ANR	5107013	Identifier	false		5106893	0					
ANR	5107014	ReturnType	R_API int		5106893	1					
ANR	5107015	Identifier	r_type_set		5106893	2					
ANR	5107016	ParameterList	"Sdb * TDB , ut64 at , const char * field , ut64 val"		5106893	3					
ANR	5107017	Parameter	Sdb * TDB	5:21:117:124	5106893	0	True				
ANR	5107018	ParameterType	Sdb *		5106893	0					
ANR	5107019	Identifier	TDB		5106893	1					
ANR	5107020	Parameter	ut64 at	5:31:127:133	5106893	1	True				
ANR	5107021	ParameterType	ut64		5106893	0					
ANR	5107022	Identifier	at		5106893	1					
ANR	5107023	Parameter	const char * field	5:40:136:152	5106893	2	True				
ANR	5107024	ParameterType	const char *		5106893	0					
ANR	5107025	Identifier	field		5106893	1					
ANR	5107026	Parameter	ut64 val	5:59:155:162	5106893	3	True				
ANR	5107027	ParameterType	ut64		5106893	0					
ANR	5107028	Identifier	val		5106893	1					
ANR	5107029	CFGEntryNode	ENTRY		5106893		True				
ANR	5107030	CFGExitNode	EXIT		5106893		True				
ANR	5107031	Symbol	val		5106893						
ANR	5107032	Symbol	NULL		5106893						
ANR	5107033	Symbol	kind		5106893						
ANR	5107034	Symbol	var		5106893						
ANR	5107035	Symbol	false		5106893						
ANR	5107036	Symbol	sdb_const_get		5106893						
ANR	5107037	Symbol	off		5106893						
ANR	5107038	Symbol	p		5106893						
ANR	5107039	Symbol	TDB		5106893						
ANR	5107040	Symbol	at		5106893						
ANR	5107041	Symbol	field		5106893						
ANR	5107042	Symbol	true		5106893						
ANR	5107043	Symbol	sdb_array_get_num		5106893						
ANR	5107044	Function	r_type_kind	24:0:663:1068							
ANR	5107045	FunctionDef	"r_type_kind (Sdb * TDB , const char * name)"		5107044	0					
ANR	5107046	CompoundStatement		24:50:713:1068	5107044	0					
ANR	5107047	IfStatement	if ( ! name )		5107044	0					
ANR	5107048	Condition	! name	25:5:720:724	5107044	0	True				
ANR	5107049	UnaryOperationExpression	! name		5107044	0					
ANR	5107050	UnaryOperator	!		5107044	0					
ANR	5107051	Identifier	name		5107044	1					
ANR	5107052	CompoundStatement		2:12:13:13	5107044	1					
ANR	5107053	ReturnStatement	return - 1 ;	26:2:731:740	5107044	0	True				
ANR	5107054	UnaryOperationExpression	- 1		5107044	0					
ANR	5107055	UnaryOperator	-		5107044	0					
ANR	5107056	PrimaryExpression	1		5107044	1					
ANR	5107057	IdentifierDeclStatement	"const char * type = sdb_const_get ( TDB , name , 0 ) ;"	28:1:746:793	5107044	1	True				
ANR	5107058	IdentifierDecl	"* type = sdb_const_get ( TDB , name , 0 )"		5107044	0					
ANR	5107059	IdentifierDeclType	const char *		5107044	0					
ANR	5107060	Identifier	type		5107044	1					
ANR	5107061	AssignmentExpression	"* type = sdb_const_get ( TDB , name , 0 )"		5107044	2		=			
ANR	5107062	Identifier	type		5107044	0					
ANR	5107063	CallExpression	"sdb_const_get ( TDB , name , 0 )"		5107044	1					
ANR	5107064	Callee	sdb_const_get		5107044	0					
ANR	5107065	Identifier	sdb_const_get		5107044	0					
ANR	5107066	ArgumentList	TDB		5107044	1					
ANR	5107067	Argument	TDB		5107044	0					
ANR	5107068	Identifier	TDB		5107044	0					
ANR	5107069	Argument	name		5107044	1					
ANR	5107070	Identifier	name		5107044	0					
ANR	5107071	Argument	0		5107044	2					
ANR	5107072	PrimaryExpression	0		5107044	0					
ANR	5107073	IfStatement	if ( ! type )		5107044	2					
ANR	5107074	Condition	! type	29:5:800:804	5107044	0	True				
ANR	5107075	UnaryOperationExpression	! type		5107044	0					
ANR	5107076	UnaryOperator	!		5107044	0					
ANR	5107077	Identifier	type		5107044	1					
ANR	5107078	CompoundStatement		6:12:93:93	5107044	1					
ANR	5107079	ReturnStatement	return - 1 ;	30:2:811:820	5107044	0	True				
ANR	5107080	UnaryOperationExpression	- 1		5107044	0					
ANR	5107081	UnaryOperator	-		5107044	0					
ANR	5107082	PrimaryExpression	1		5107044	1					
ANR	5107083	IfStatement	"if ( ! strcmp ( type , ""enum"" ) )"		5107044	3					
ANR	5107084	Condition	"! strcmp ( type , ""enum"" )"	32:5:830:851	5107044	0	True				
ANR	5107085	UnaryOperationExpression	"! strcmp ( type , ""enum"" )"		5107044	0					
ANR	5107086	UnaryOperator	!		5107044	0					
ANR	5107087	CallExpression	"strcmp ( type , ""enum"" )"		5107044	1					
ANR	5107088	Callee	strcmp		5107044	0					
ANR	5107089	Identifier	strcmp		5107044	0					
ANR	5107090	ArgumentList	type		5107044	1					
ANR	5107091	Argument	type		5107044	0					
ANR	5107092	Identifier	type		5107044	0					
ANR	5107093	Argument	"""enum"""		5107044	1					
ANR	5107094	PrimaryExpression	"""enum"""		5107044	0					
ANR	5107095	CompoundStatement		9:29:140:140	5107044	1					
ANR	5107096	ReturnStatement	return R_TYPE_ENUM ;	33:2:858:876	5107044	0	True				
ANR	5107097	Identifier	R_TYPE_ENUM		5107044	0					
ANR	5107098	IfStatement	"if ( ! strcmp ( type , ""struct"" ) )"		5107044	4					
ANR	5107099	Condition	"! strcmp ( type , ""struct"" )"	35:5:886:909	5107044	0	True				
ANR	5107100	UnaryOperationExpression	"! strcmp ( type , ""struct"" )"		5107044	0					
ANR	5107101	UnaryOperator	!		5107044	0					
ANR	5107102	CallExpression	"strcmp ( type , ""struct"" )"		5107044	1					
ANR	5107103	Callee	strcmp		5107044	0					
ANR	5107104	Identifier	strcmp		5107044	0					
ANR	5107105	ArgumentList	type		5107044	1					
ANR	5107106	Argument	type		5107044	0					
ANR	5107107	Identifier	type		5107044	0					
ANR	5107108	Argument	"""struct"""		5107044	1					
ANR	5107109	PrimaryExpression	"""struct"""		5107044	0					
ANR	5107110	CompoundStatement		12:31:198:198	5107044	1					
ANR	5107111	ReturnStatement	return R_TYPE_STRUCT ;	36:2:916:936	5107044	0	True				
ANR	5107112	Identifier	R_TYPE_STRUCT		5107044	0					
ANR	5107113	IfStatement	"if ( ! strcmp ( type , ""union"" ) )"		5107044	5					
ANR	5107114	Condition	"! strcmp ( type , ""union"" )"	38:5:946:968	5107044	0	True				
ANR	5107115	UnaryOperationExpression	"! strcmp ( type , ""union"" )"		5107044	0					
ANR	5107116	UnaryOperator	!		5107044	0					
ANR	5107117	CallExpression	"strcmp ( type , ""union"" )"		5107044	1					
ANR	5107118	Callee	strcmp		5107044	0					
ANR	5107119	Identifier	strcmp		5107044	0					
ANR	5107120	ArgumentList	type		5107044	1					
ANR	5107121	Argument	type		5107044	0					
ANR	5107122	Identifier	type		5107044	0					
ANR	5107123	Argument	"""union"""		5107044	1					
ANR	5107124	PrimaryExpression	"""union"""		5107044	0					
ANR	5107125	CompoundStatement		15:30:257:257	5107044	1					
ANR	5107126	ReturnStatement	return R_TYPE_UNION ;	39:2:975:994	5107044	0	True				
ANR	5107127	Identifier	R_TYPE_UNION		5107044	0					
ANR	5107128	IfStatement	"if ( ! strcmp ( type , ""type"" ) )"		5107044	6					
ANR	5107129	Condition	"! strcmp ( type , ""type"" )"	41:5:1004:1025	5107044	0	True				
ANR	5107130	UnaryOperationExpression	"! strcmp ( type , ""type"" )"		5107044	0					
ANR	5107131	UnaryOperator	!		5107044	0					
ANR	5107132	CallExpression	"strcmp ( type , ""type"" )"		5107044	1					
ANR	5107133	Callee	strcmp		5107044	0					
ANR	5107134	Identifier	strcmp		5107044	0					
ANR	5107135	ArgumentList	type		5107044	1					
ANR	5107136	Argument	type		5107044	0					
ANR	5107137	Identifier	type		5107044	0					
ANR	5107138	Argument	"""type"""		5107044	1					
ANR	5107139	PrimaryExpression	"""type"""		5107044	0					
ANR	5107140	CompoundStatement		18:29:314:314	5107044	1					
ANR	5107141	ReturnStatement	return R_TYPE_BASIC ;	42:2:1032:1051	5107044	0	True				
ANR	5107142	Identifier	R_TYPE_BASIC		5107044	0					
ANR	5107143	ReturnStatement	return - 1 ;	44:1:1057:1066	5107044	7	True				
ANR	5107144	UnaryOperationExpression	- 1		5107044	0					
ANR	5107145	UnaryOperator	-		5107044	0					
ANR	5107146	PrimaryExpression	1		5107044	1					
ANR	5107147	ReturnType	R_API int		5107044	1					
ANR	5107148	Identifier	r_type_kind		5107044	2					
ANR	5107149	ParameterList	"Sdb * TDB , const char * name"		5107044	3					
ANR	5107150	Parameter	Sdb * TDB	24:22:685:692	5107044	0	True				
ANR	5107151	ParameterType	Sdb *		5107044	0					
ANR	5107152	Identifier	TDB		5107044	1					
ANR	5107153	Parameter	const char * name	24:32:695:710	5107044	1	True				
ANR	5107154	ParameterType	const char *		5107044	0					
ANR	5107155	Identifier	name		5107044	1					
ANR	5107156	CFGEntryNode	ENTRY		5107044		True				
ANR	5107157	CFGExitNode	EXIT		5107044		True				
ANR	5107158	Symbol	strcmp		5107044						
ANR	5107159	Symbol	R_TYPE_ENUM		5107044						
ANR	5107160	Symbol	TDB		5107044						
ANR	5107161	Symbol	R_TYPE_UNION		5107044						
ANR	5107162	Symbol	R_TYPE_BASIC		5107044						
ANR	5107163	Symbol	name		5107044						
ANR	5107164	Symbol	type		5107044						
ANR	5107165	Symbol	sdb_const_get		5107044						
ANR	5107166	Symbol	R_TYPE_STRUCT		5107044						
ANR	5107167	Function	r_type_get_enum	47:0:1071:1743							
ANR	5107168	FunctionDef	"r_type_get_enum (Sdb * TDB , const char * name)"		5107167	0					
ANR	5107169	CompoundStatement		47:58:1129:1743	5107167	0					
ANR	5107170	IdentifierDeclStatement	"char * p , var [ 130 ] ;"	48:1:1132:1149	5107167	0	True				
ANR	5107171	IdentifierDecl	* p		5107167	0					
ANR	5107172	IdentifierDeclType	char *		5107167	0					
ANR	5107173	Identifier	p		5107167	1					
ANR	5107174	IdentifierDecl	var [ 130 ]		5107167	1					
ANR	5107175	IdentifierDeclType	char [ 130 ]		5107167	0					
ANR	5107176	Identifier	var		5107167	1					
ANR	5107177	PrimaryExpression	130		5107167	2					
ANR	5107178	IdentifierDeclStatement	int n ;	49:1:1152:1157	5107167	1	True				
ANR	5107179	IdentifierDecl	n		5107167	0					
ANR	5107180	IdentifierDeclType	int		5107167	0					
ANR	5107181	Identifier	n		5107167	1					
ANR	5107182	IfStatement	"if ( r_type_kind ( TDB , name ) != R_TYPE_ENUM )"		5107167	2					
ANR	5107183	Condition	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"	51:5:1165:1202	5107167	0	True				
ANR	5107184	EqualityExpression	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"		5107167	0		!=			
ANR	5107185	CallExpression	"r_type_kind ( TDB , name )"		5107167	0					
ANR	5107186	Callee	r_type_kind		5107167	0					
ANR	5107187	Identifier	r_type_kind		5107167	0					
ANR	5107188	ArgumentList	TDB		5107167	1					
ANR	5107189	Argument	TDB		5107167	0					
ANR	5107190	Identifier	TDB		5107167	0					
ANR	5107191	Argument	name		5107167	1					
ANR	5107192	Identifier	name		5107167	0					
ANR	5107193	Identifier	R_TYPE_ENUM		5107167	1					
ANR	5107194	CompoundStatement		5:45:75:75	5107167	1					
ANR	5107195	ReturnStatement	return NULL ;	52:2:1209:1220	5107167	0	True				
ANR	5107196	Identifier	NULL		5107167	0					
ANR	5107197	IdentifierDeclStatement	RList * res = r_list_new ( ) ;	54:1:1226:1252	5107167	3	True				
ANR	5107198	IdentifierDecl	* res = r_list_new ( )		5107167	0					
ANR	5107199	IdentifierDeclType	RList *		5107167	0					
ANR	5107200	Identifier	res		5107167	1					
ANR	5107201	AssignmentExpression	* res = r_list_new ( )		5107167	2		=			
ANR	5107202	Identifier	res		5107167	0					
ANR	5107203	CallExpression	r_list_new ( )		5107167	1					
ANR	5107204	Callee	r_list_new		5107167	0					
ANR	5107205	Identifier	r_list_new		5107167	0					
ANR	5107206	ArgumentList			5107167	1					
ANR	5107207	ExpressionStatement	"snprintf ( var , sizeof ( var ) , ""enum.%s"" , name )"	55:1:1255:1300	5107167	4	True				
ANR	5107208	CallExpression	"snprintf ( var , sizeof ( var ) , ""enum.%s"" , name )"		5107167	0					
ANR	5107209	Callee	snprintf		5107167	0					
ANR	5107210	Identifier	snprintf		5107167	0					
ANR	5107211	ArgumentList	var		5107167	1					
ANR	5107212	Argument	var		5107167	0					
ANR	5107213	Identifier	var		5107167	0					
ANR	5107214	Argument	sizeof ( var )		5107167	1					
ANR	5107215	SizeofExpression	sizeof ( var )		5107167	0					
ANR	5107216	Sizeof	sizeof		5107167	0					
ANR	5107217	SizeofOperand	var		5107167	1					
ANR	5107218	Argument	"""enum.%s"""		5107167	2					
ANR	5107219	PrimaryExpression	"""enum.%s"""		5107167	0					
ANR	5107220	Argument	name		5107167	3					
ANR	5107221	Identifier	name		5107167	0					
ANR	5107222	ForStatement	"for ( n = 0 ; ( p = sdb_array_get ( TDB , var , n , NULL ) ) ; n ++ )"		5107167	5					
ANR	5107223	ForInit	n = 0 ;	56:6:1308:1313	5107167	0	True				
ANR	5107224	AssignmentExpression	n = 0		5107167	0		=			
ANR	5107225	Identifier	n		5107167	0					
ANR	5107226	PrimaryExpression	0		5107167	1					
ANR	5107227	Condition	"p = sdb_array_get ( TDB , var , n , NULL )"	56:13:1315:1353	5107167	1	True				
ANR	5107228	AssignmentExpression	"p = sdb_array_get ( TDB , var , n , NULL )"		5107167	0		=			
ANR	5107229	Identifier	p		5107167	0					
ANR	5107230	CallExpression	"sdb_array_get ( TDB , var , n , NULL )"		5107167	1					
ANR	5107231	Callee	sdb_array_get		5107167	0					
ANR	5107232	Identifier	sdb_array_get		5107167	0					
ANR	5107233	ArgumentList	TDB		5107167	1					
ANR	5107234	Argument	TDB		5107167	0					
ANR	5107235	Identifier	TDB		5107167	0					
ANR	5107236	Argument	var		5107167	1					
ANR	5107237	Identifier	var		5107167	0					
ANR	5107238	Argument	n		5107167	2					
ANR	5107239	Identifier	n		5107167	0					
ANR	5107240	Argument	NULL		5107167	3					
ANR	5107241	Identifier	NULL		5107167	0					
ANR	5107242	PostIncDecOperationExpression	n ++	56:54:1356:1358	5107167	2	True				
ANR	5107243	Identifier	n		5107167	0					
ANR	5107244	IncDec	++		5107167	1					
ANR	5107245	CompoundStatement		11:2:235:273	5107167	3					
ANR	5107246	IdentifierDeclStatement	RTypeEnum * member = R_NEW0 ( RTypeEnum ) ;	57:2:1365:1403	5107167	0	True				
ANR	5107247	IdentifierDecl	* member = R_NEW0 ( RTypeEnum )		5107167	0					
ANR	5107248	IdentifierDeclType	RTypeEnum *		5107167	0					
ANR	5107249	Identifier	member		5107167	1					
ANR	5107250	AssignmentExpression	* member = R_NEW0 ( RTypeEnum )		5107167	2		=			
ANR	5107251	Identifier	member		5107167	0					
ANR	5107252	CallExpression	R_NEW0 ( RTypeEnum )		5107167	1					
ANR	5107253	Callee	R_NEW0		5107167	0					
ANR	5107254	Identifier	R_NEW0		5107167	0					
ANR	5107255	ArgumentList	RTypeEnum		5107167	1					
ANR	5107256	Argument	RTypeEnum		5107167	0					
ANR	5107257	Identifier	RTypeEnum		5107167	0					
ANR	5107258	IfStatement	if ( member )		5107167	1					
ANR	5107259	Condition	member	58:6:1411:1416	5107167	0	True				
ANR	5107260	Identifier	member		5107167	0					
ANR	5107261	CompoundStatement		13:3:294:335	5107167	1					
ANR	5107262	IdentifierDeclStatement	"char * var2 = r_str_newf ( ""%s.%s"" , var , p ) ;"	59:3:1424:1465	5107167	0	True				
ANR	5107263	IdentifierDecl	"* var2 = r_str_newf ( ""%s.%s"" , var , p )"		5107167	0					
ANR	5107264	IdentifierDeclType	char *		5107167	0					
ANR	5107265	Identifier	var2		5107167	1					
ANR	5107266	AssignmentExpression	"* var2 = r_str_newf ( ""%s.%s"" , var , p )"		5107167	2		=			
ANR	5107267	Identifier	var2		5107167	0					
ANR	5107268	CallExpression	"r_str_newf ( ""%s.%s"" , var , p )"		5107167	1					
ANR	5107269	Callee	r_str_newf		5107167	0					
ANR	5107270	Identifier	r_str_newf		5107167	0					
ANR	5107271	ArgumentList	"""%s.%s"""		5107167	1					
ANR	5107272	Argument	"""%s.%s"""		5107167	0					
ANR	5107273	PrimaryExpression	"""%s.%s"""		5107167	0					
ANR	5107274	Argument	var		5107167	1					
ANR	5107275	Identifier	var		5107167	0					
ANR	5107276	Argument	p		5107167	2					
ANR	5107277	Identifier	p		5107167	0					
ANR	5107278	IfStatement	if ( var2 )		5107167	1					
ANR	5107279	Condition	var2	60:7:1474:1477	5107167	0	True				
ANR	5107280	Identifier	var2		5107167	0					
ANR	5107281	CompoundStatement		15:4:356:402	5107167	1					
ANR	5107282	IdentifierDeclStatement	"char * val = sdb_array_get ( TDB , var2 , 0 , NULL ) ;"	61:4:1486:1532	5107167	0	True				
ANR	5107283	IdentifierDecl	"* val = sdb_array_get ( TDB , var2 , 0 , NULL )"		5107167	0					
ANR	5107284	IdentifierDeclType	char *		5107167	0					
ANR	5107285	Identifier	val		5107167	1					
ANR	5107286	AssignmentExpression	"* val = sdb_array_get ( TDB , var2 , 0 , NULL )"		5107167	2		=			
ANR	5107287	Identifier	val		5107167	0					
ANR	5107288	CallExpression	"sdb_array_get ( TDB , var2 , 0 , NULL )"		5107167	1					
ANR	5107289	Callee	sdb_array_get		5107167	0					
ANR	5107290	Identifier	sdb_array_get		5107167	0					
ANR	5107291	ArgumentList	TDB		5107167	1					
ANR	5107292	Argument	TDB		5107167	0					
ANR	5107293	Identifier	TDB		5107167	0					
ANR	5107294	Argument	var2		5107167	1					
ANR	5107295	Identifier	var2		5107167	0					
ANR	5107296	Argument	0		5107167	2					
ANR	5107297	PrimaryExpression	0		5107167	0					
ANR	5107298	Argument	NULL		5107167	3					
ANR	5107299	Identifier	NULL		5107167	0					
ANR	5107300	IfStatement	if ( val )		5107167	1					
ANR	5107301	Condition	val	62:8:1542:1544	5107167	0	True				
ANR	5107302	Identifier	val		5107167	0					
ANR	5107303	CompoundStatement		16:13:417:417	5107167	1					
ANR	5107304	ExpressionStatement	member -> name = p	63:5:1554:1570	5107167	0	True				
ANR	5107305	AssignmentExpression	member -> name = p		5107167	0		=			
ANR	5107306	PtrMemberAccess	member -> name		5107167	0					
ANR	5107307	Identifier	member		5107167	0					
ANR	5107308	Identifier	name		5107167	1					
ANR	5107309	Identifier	p		5107167	1					
ANR	5107310	ExpressionStatement	member -> val = val	64:5:1577:1594	5107167	1	True				
ANR	5107311	AssignmentExpression	member -> val = val		5107167	0		=			
ANR	5107312	PtrMemberAccess	member -> val		5107167	0					
ANR	5107313	Identifier	member		5107167	0					
ANR	5107314	Identifier	val		5107167	1					
ANR	5107315	Identifier	val		5107167	1					
ANR	5107316	ExpressionStatement	"r_list_append ( res , member )"	65:5:1601:1628	5107167	2	True				
ANR	5107317	CallExpression	"r_list_append ( res , member )"		5107167	0					
ANR	5107318	Callee	r_list_append		5107167	0					
ANR	5107319	Identifier	r_list_append		5107167	0					
ANR	5107320	ArgumentList	res		5107167	1					
ANR	5107321	Argument	res		5107167	0					
ANR	5107322	Identifier	res		5107167	0					
ANR	5107323	Argument	member		5107167	1					
ANR	5107324	Identifier	member		5107167	0					
ANR	5107325	ElseStatement	else		5107167	0					
ANR	5107326	CompoundStatement		20:11:511:511	5107167	0					
ANR	5107327	ExpressionStatement	free ( member )	67:5:1648:1661	5107167	0	True				
ANR	5107328	CallExpression	free ( member )		5107167	0					
ANR	5107329	Callee	free		5107167	0					
ANR	5107330	Identifier	free		5107167	0					
ANR	5107331	ArgumentList	member		5107167	1					
ANR	5107332	Argument	member		5107167	0					
ANR	5107333	Identifier	member		5107167	0					
ANR	5107334	ExpressionStatement	free ( var2 )	68:5:1668:1679	5107167	1	True				
ANR	5107335	CallExpression	free ( var2 )		5107167	0					
ANR	5107336	Callee	free		5107167	0					
ANR	5107337	Identifier	free		5107167	0					
ANR	5107338	ArgumentList	var2		5107167	1					
ANR	5107339	Argument	var2		5107167	0					
ANR	5107340	Identifier	var2		5107167	0					
ANR	5107341	ElseStatement	else		5107167	0					
ANR	5107342	CompoundStatement		24:10:567:567	5107167	0					
ANR	5107343	ExpressionStatement	free ( member )	71:4:1703:1716	5107167	0	True				
ANR	5107344	CallExpression	free ( member )		5107167	0					
ANR	5107345	Callee	free		5107167	0					
ANR	5107346	Identifier	free		5107167	0					
ANR	5107347	ArgumentList	member		5107167	1					
ANR	5107348	Argument	member		5107167	0					
ANR	5107349	Identifier	member		5107167	0					
ANR	5107350	ReturnStatement	return res ;	75:1:1731:1741	5107167	6	True				
ANR	5107351	Identifier	res		5107167	0					
ANR	5107352	ReturnType	R_API RList *		5107167	1					
ANR	5107353	Identifier	r_type_get_enum		5107167	2					
ANR	5107354	ParameterList	"Sdb * TDB , const char * name"		5107167	3					
ANR	5107355	Parameter	Sdb * TDB	47:30:1101:1108	5107167	0	True				
ANR	5107356	ParameterType	Sdb *		5107167	0					
ANR	5107357	Identifier	TDB		5107167	1					
ANR	5107358	Parameter	const char * name	47:40:1111:1126	5107167	1	True				
ANR	5107359	ParameterType	const char *		5107167	0					
ANR	5107360	Identifier	name		5107167	1					
ANR	5107361	CFGEntryNode	ENTRY		5107167		True				
ANR	5107362	CFGExitNode	EXIT		5107167		True				
ANR	5107363	Symbol	val		5107167						
ANR	5107364	Symbol	res		5107167						
ANR	5107365	Symbol	RTypeEnum		5107167						
ANR	5107366	Symbol	NULL		5107167						
ANR	5107367	Symbol	r_type_kind		5107167						
ANR	5107368	Symbol	var		5107167						
ANR	5107369	Symbol	sdb_array_get		5107167						
ANR	5107370	Symbol	r_str_newf		5107167						
ANR	5107371	Symbol	* member		5107167						
ANR	5107372	Symbol	n		5107167						
ANR	5107373	Symbol	p		5107167						
ANR	5107374	Symbol	member -> name		5107167						
ANR	5107375	Symbol	R_NEW0		5107167						
ANR	5107376	Symbol	R_TYPE_ENUM		5107167						
ANR	5107377	Symbol	TDB		5107167						
ANR	5107378	Symbol	member -> val		5107167						
ANR	5107379	Symbol	name		5107167						
ANR	5107380	Symbol	member		5107167						
ANR	5107381	Symbol	var2		5107167						
ANR	5107382	Symbol	r_list_new		5107167						
ANR	5107383	Function	r_type_enum_member	78:0:1746:2068							
ANR	5107384	FunctionDef	"r_type_enum_member (Sdb * TDB , const char * name , const char * member , ut64 val)"		5107383	0					
ANR	5107385	CompoundStatement		78:89:1835:2068	5107383	0					
ANR	5107386	IdentifierDeclStatement	const char * q ;	79:1:1838:1851	5107383	0	True				
ANR	5107387	IdentifierDecl	* q		5107383	0					
ANR	5107388	IdentifierDeclType	const char *		5107383	0					
ANR	5107389	Identifier	q		5107383	1					
ANR	5107390	IfStatement	"if ( r_type_kind ( TDB , name ) != R_TYPE_ENUM )"		5107383	1					
ANR	5107391	Condition	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"	80:5:1858:1895	5107383	0	True				
ANR	5107392	EqualityExpression	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"		5107383	0		!=			
ANR	5107393	CallExpression	"r_type_kind ( TDB , name )"		5107383	0					
ANR	5107394	Callee	r_type_kind		5107383	0					
ANR	5107395	Identifier	r_type_kind		5107383	0					
ANR	5107396	ArgumentList	TDB		5107383	1					
ANR	5107397	Argument	TDB		5107383	0					
ANR	5107398	Identifier	TDB		5107383	0					
ANR	5107399	Argument	name		5107383	1					
ANR	5107400	Identifier	name		5107383	0					
ANR	5107401	Identifier	R_TYPE_ENUM		5107383	1					
ANR	5107402	CompoundStatement		3:45:62:62	5107383	1					
ANR	5107403	ReturnStatement	return NULL ;	81:2:1902:1913	5107383	0	True				
ANR	5107404	Identifier	NULL		5107383	0					
ANR	5107405	IfStatement	if ( member )		5107383	2					
ANR	5107406	Condition	member	83:5:1923:1928	5107383	0	True				
ANR	5107407	Identifier	member		5107383	0					
ANR	5107408	CompoundStatement		6:13:95:95	5107383	1					
ANR	5107409	ExpressionStatement	"q = sdb_fmt ( ""enum.%s.%s"" , name , member )"	84:2:1935:1975	5107383	0	True				
ANR	5107410	AssignmentExpression	"q = sdb_fmt ( ""enum.%s.%s"" , name , member )"		5107383	0		=			
ANR	5107411	Identifier	q		5107383	0					
ANR	5107412	CallExpression	"sdb_fmt ( ""enum.%s.%s"" , name , member )"		5107383	1					
ANR	5107413	Callee	sdb_fmt		5107383	0					
ANR	5107414	Identifier	sdb_fmt		5107383	0					
ANR	5107415	ArgumentList	"""enum.%s.%s"""		5107383	1					
ANR	5107416	Argument	"""enum.%s.%s"""		5107383	0					
ANR	5107417	PrimaryExpression	"""enum.%s.%s"""		5107383	0					
ANR	5107418	Argument	name		5107383	1					
ANR	5107419	Identifier	name		5107383	0					
ANR	5107420	Argument	member		5107383	2					
ANR	5107421	Identifier	member		5107383	0					
ANR	5107422	ElseStatement	else		5107383	0					
ANR	5107423	CompoundStatement		8:8:149:149	5107383	0					
ANR	5107424	Statement	q	86:2:1989:1989	5107383	0	True				
ANR	5107425	Statement	=	86:4:1991:1991	5107383	1	True				
ANR	5107426	Statement	sdb_fmt	86:6:1993:1999	5107383	2	True				
ANR	5107427	Statement	(	86:14:2001:2001	5107383	3	True				
ANR	5107428	Statement	"""enum.%s.0x%"""	86:15:2002:2014	5107383	4	True				
ANR	5107429	Statement	PFMT64x	86:28:2015:2021	5107383	5	True				
ANR	5107430	Statement	","	86:35:2022:2022	5107383	6	True				
ANR	5107431	Statement	name	86:37:2024:2027	5107383	7	True				
ANR	5107432	Statement	","	86:41:2028:2028	5107383	8	True				
ANR	5107433	Statement	val	86:43:2030:2032	5107383	9	True				
ANR	5107434	Statement	)	86:46:2033:2033	5107383	10	True				
ANR	5107435	ExpressionStatement		86:47:2034:2034	5107383	11	True				
ANR	5107436	ReturnStatement	"return sdb_get ( TDB , q , 0 ) ;"	88:1:2040:2066	5107383	3	True				
ANR	5107437	CallExpression	"sdb_get ( TDB , q , 0 )"		5107383	0					
ANR	5107438	Callee	sdb_get		5107383	0					
ANR	5107439	Identifier	sdb_get		5107383	0					
ANR	5107440	ArgumentList	TDB		5107383	1					
ANR	5107441	Argument	TDB		5107383	0					
ANR	5107442	Identifier	TDB		5107383	0					
ANR	5107443	Argument	q		5107383	1					
ANR	5107444	Identifier	q		5107383	0					
ANR	5107445	Argument	0		5107383	2					
ANR	5107446	PrimaryExpression	0		5107383	0					
ANR	5107447	ReturnType	R_API char *		5107383	1					
ANR	5107448	Identifier	r_type_enum_member		5107383	2					
ANR	5107449	ParameterList	"Sdb * TDB , const char * name , const char * member , ut64 val"		5107383	3					
ANR	5107450	Parameter	Sdb * TDB	78:31:1777:1784	5107383	0	True				
ANR	5107451	ParameterType	Sdb *		5107383	0					
ANR	5107452	Identifier	TDB		5107383	1					
ANR	5107453	Parameter	const char * name	78:41:1787:1802	5107383	1	True				
ANR	5107454	ParameterType	const char *		5107383	0					
ANR	5107455	Identifier	name		5107383	1					
ANR	5107456	Parameter	const char * member	78:59:1805:1822	5107383	2	True				
ANR	5107457	ParameterType	const char *		5107383	0					
ANR	5107458	Identifier	member		5107383	1					
ANR	5107459	Parameter	ut64 val	78:79:1825:1832	5107383	3	True				
ANR	5107460	ParameterType	ut64		5107383	0					
ANR	5107461	Identifier	val		5107383	1					
ANR	5107462	CFGEntryNode	ENTRY		5107383		True				
ANR	5107463	CFGExitNode	EXIT		5107383		True				
ANR	5107464	Symbol	val		5107383						
ANR	5107465	Symbol	q		5107383						
ANR	5107466	Symbol	R_TYPE_ENUM		5107383						
ANR	5107467	Symbol	TDB		5107383						
ANR	5107468	Symbol	NULL		5107383						
ANR	5107469	Symbol	r_type_kind		5107383						
ANR	5107470	Symbol	name		5107383						
ANR	5107471	Symbol	member		5107383						
ANR	5107472	Symbol	sdb_get		5107383						
ANR	5107473	Symbol	sdb_fmt		5107383						
ANR	5107474	Function	r_type_enum_getbitfield	91:0:2071:2717							
ANR	5107475	FunctionDef	"r_type_enum_getbitfield (Sdb * TDB , const char * name , ut64 val)"		5107474	0					
ANR	5107476	CompoundStatement		91:74:2145:2717	5107474	0					
ANR	5107477	IdentifierDeclStatement	"char * q , * ret = NULL ;"	92:1:2148:2168	5107474	0	True				
ANR	5107478	IdentifierDecl	* q		5107474	0					
ANR	5107479	IdentifierDeclType	char *		5107474	0					
ANR	5107480	Identifier	q		5107474	1					
ANR	5107481	IdentifierDecl	* ret = NULL		5107474	1					
ANR	5107482	IdentifierDeclType	char *		5107474	0					
ANR	5107483	Identifier	ret		5107474	1					
ANR	5107484	AssignmentExpression	* ret = NULL		5107474	2		=			
ANR	5107485	Identifier	NULL		5107474	0					
ANR	5107486	Identifier	NULL		5107474	1					
ANR	5107487	IdentifierDeclStatement	const char * res ;	93:1:2171:2186	5107474	1	True				
ANR	5107488	IdentifierDecl	* res		5107474	0					
ANR	5107489	IdentifierDeclType	const char *		5107474	0					
ANR	5107490	Identifier	res		5107474	1					
ANR	5107491	IdentifierDeclStatement	int i ;	94:1:2189:2194	5107474	2	True				
ANR	5107492	IdentifierDecl	i		5107474	0					
ANR	5107493	IdentifierDeclType	int		5107474	0					
ANR	5107494	Identifier	i		5107474	1					
ANR	5107495	IfStatement	"if ( r_type_kind ( TDB , name ) != R_TYPE_ENUM )"		5107474	3					
ANR	5107496	Condition	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"	96:5:2202:2239	5107474	0	True				
ANR	5107497	EqualityExpression	"r_type_kind ( TDB , name ) != R_TYPE_ENUM"		5107474	0		!=			
ANR	5107498	CallExpression	"r_type_kind ( TDB , name )"		5107474	0					
ANR	5107499	Callee	r_type_kind		5107474	0					
ANR	5107500	Identifier	r_type_kind		5107474	0					
ANR	5107501	ArgumentList	TDB		5107474	1					
ANR	5107502	Argument	TDB		5107474	0					
ANR	5107503	Identifier	TDB		5107474	0					
ANR	5107504	Argument	name		5107474	1					
ANR	5107505	Identifier	name		5107474	0					
ANR	5107506	Identifier	R_TYPE_ENUM		5107474	1					
ANR	5107507	CompoundStatement		6:45:96:96	5107474	1					
ANR	5107508	ReturnStatement	return NULL ;	97:2:2246:2257	5107474	0	True				
ANR	5107509	Identifier	NULL		5107474	0					
ANR	5107510	IdentifierDeclStatement	bool isFirst = true ;	99:1:2263:2282	5107474	4	True				
ANR	5107511	IdentifierDecl	isFirst = true		5107474	0					
ANR	5107512	IdentifierDeclType	bool		5107474	0					
ANR	5107513	Identifier	isFirst		5107474	1					
ANR	5107514	AssignmentExpression	isFirst = true		5107474	2		=			
ANR	5107515	Identifier	true		5107474	0					
ANR	5107516	Identifier	true		5107474	1					
ANR	5107517	Statement	ret	100:1:2285:2287	5107474	5	True				
ANR	5107518	Statement	=	100:5:2289:2289	5107474	6	True				
ANR	5107519	Statement	r_str_appendf	100:7:2291:2303	5107474	7	True				
ANR	5107520	Statement	(	100:21:2305:2305	5107474	8	True				
ANR	5107521	Statement	ret	100:22:2306:2308	5107474	9	True				
ANR	5107522	Statement	","	100:25:2309:2309	5107474	10	True				
ANR	5107523	Statement	"""0x%08"""	100:27:2311:2317	5107474	11	True				
ANR	5107524	Statement	PFMT64x	100:34:2318:2324	5107474	12	True				
ANR	5107525	Statement	""" : """	100:41:2325:2329	5107474	13	True				
ANR	5107526	Statement	","	100:46:2330:2330	5107474	14	True				
ANR	5107527	Statement	val	100:48:2332:2334	5107474	15	True				
ANR	5107528	Statement	)	100:51:2335:2335	5107474	16	True				
ANR	5107529	ExpressionStatement		100:52:2336:2336	5107474	17	True				
ANR	5107530	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		5107474	18					
ANR	5107531	ForInit	i = 0 ;	101:6:2344:2349	5107474	0	True				
ANR	5107532	AssignmentExpression	i = 0		5107474	0		=			
ANR	5107533	Identifier	i		5107474	0					
ANR	5107534	PrimaryExpression	0		5107474	1					
ANR	5107535	Condition	i < 32	101:13:2351:2356	5107474	1	True				
ANR	5107536	RelationalExpression	i < 32		5107474	0		<			
ANR	5107537	Identifier	i		5107474	0					
ANR	5107538	PrimaryExpression	32		5107474	1					
ANR	5107539	PostIncDecOperationExpression	i ++	101:21:2359:2361	5107474	2	True				
ANR	5107540	Identifier	i		5107474	0					
ANR	5107541	IncDec	++		5107474	1					
ANR	5107542	CompoundStatement		11:26:218:218	5107474	3					
ANR	5107543	IfStatement	if ( ! ( val & ( 1 << i ) ) )		5107474	0					
ANR	5107544	Condition	! ( val & ( 1 << i ) )	102:6:2372:2388	5107474	0	True				
ANR	5107545	UnaryOperationExpression	! ( val & ( 1 << i ) )		5107474	0					
ANR	5107546	UnaryOperator	!		5107474	0					
ANR	5107547	BitAndExpression	val & ( 1 << i )		5107474	1		&			
ANR	5107548	Identifier	val		5107474	0					
ANR	5107549	ShiftExpression	1 << i		5107474	1		<<			
ANR	5107550	PrimaryExpression	1		5107474	0					
ANR	5107551	Identifier	i		5107474	1					
ANR	5107552	CompoundStatement		12:25:245:245	5107474	1					
ANR	5107553	ContinueStatement	continue ;	103:3:2396:2404	5107474	0	True				
ANR	5107554	ExpressionStatement	"q = sdb_fmt ( ""enum.%s.0x%x"" , name , ( 1 << i ) )"	105:2:2412:2454	5107474	1	True				
ANR	5107555	AssignmentExpression	"q = sdb_fmt ( ""enum.%s.0x%x"" , name , ( 1 << i ) )"		5107474	0		=			
ANR	5107556	Identifier	q		5107474	0					
ANR	5107557	CallExpression	"sdb_fmt ( ""enum.%s.0x%x"" , name , ( 1 << i ) )"		5107474	1					
ANR	5107558	Callee	sdb_fmt		5107474	0					
ANR	5107559	Identifier	sdb_fmt		5107474	0					
ANR	5107560	ArgumentList	"""enum.%s.0x%x"""		5107474	1					
ANR	5107561	Argument	"""enum.%s.0x%x"""		5107474	0					
ANR	5107562	PrimaryExpression	"""enum.%s.0x%x"""		5107474	0					
ANR	5107563	Argument	name		5107474	1					
ANR	5107564	Identifier	name		5107474	0					
ANR	5107565	Argument	1 << i		5107474	2					
ANR	5107566	ShiftExpression	1 << i		5107474	0		<<			
ANR	5107567	PrimaryExpression	1		5107474	0					
ANR	5107568	Identifier	i		5107474	1					
ANR	5107569	ExpressionStatement	"res = sdb_const_get ( TDB , q , 0 )"	106:4:2460:2491	5107474	2	True				
ANR	5107570	AssignmentExpression	"res = sdb_const_get ( TDB , q , 0 )"		5107474	0		=			
ANR	5107571	Identifier	res		5107474	0					
ANR	5107572	CallExpression	"sdb_const_get ( TDB , q , 0 )"		5107474	1					
ANR	5107573	Callee	sdb_const_get		5107474	0					
ANR	5107574	Identifier	sdb_const_get		5107474	0					
ANR	5107575	ArgumentList	TDB		5107474	1					
ANR	5107576	Argument	TDB		5107474	0					
ANR	5107577	Identifier	TDB		5107474	0					
ANR	5107578	Argument	q		5107474	1					
ANR	5107579	Identifier	q		5107474	0					
ANR	5107580	Argument	0		5107474	2					
ANR	5107581	PrimaryExpression	0		5107474	0					
ANR	5107582	IfStatement	if ( isFirst )		5107474	3					
ANR	5107583	Condition	isFirst	107:8:2501:2507	5107474	0	True				
ANR	5107584	Identifier	isFirst		5107474	0					
ANR	5107585	CompoundStatement		17:17:364:364	5107474	1					
ANR	5107586	ExpressionStatement	isFirst = false	108:3:2515:2530	5107474	0	True				
ANR	5107587	AssignmentExpression	isFirst = false		5107474	0		=			
ANR	5107588	Identifier	isFirst		5107474	0					
ANR	5107589	Identifier	false		5107474	1					
ANR	5107590	ElseStatement	else		5107474	0					
ANR	5107591	CompoundStatement		19:11:397:397	5107474	0					
ANR	5107592	ExpressionStatement	"ret = r_str_append ( ret , "" | "" )"	110:3:2548:2579	5107474	0	True				
ANR	5107593	AssignmentExpression	"ret = r_str_append ( ret , "" | "" )"		5107474	0		=			
ANR	5107594	Identifier	ret		5107474	0					
ANR	5107595	CallExpression	"r_str_append ( ret , "" | "" )"		5107474	1					
ANR	5107596	Callee	r_str_append		5107474	0					
ANR	5107597	Identifier	r_str_append		5107474	0					
ANR	5107598	ArgumentList	ret		5107474	1					
ANR	5107599	Argument	ret		5107474	0					
ANR	5107600	Identifier	ret		5107474	0					
ANR	5107601	Argument	""" | """		5107474	1					
ANR	5107602	PrimaryExpression	""" | """		5107474	0					
ANR	5107603	IfStatement	if ( res )		5107474	4					
ANR	5107604	Condition	res	112:8:2595:2597	5107474	0	True				
ANR	5107605	Identifier	res		5107474	0					
ANR	5107606	CompoundStatement		22:13:454:454	5107474	1					
ANR	5107607	ExpressionStatement	"ret = r_str_append ( ret , res )"	113:3:2605:2634	5107474	0	True				
ANR	5107608	AssignmentExpression	"ret = r_str_append ( ret , res )"		5107474	0		=			
ANR	5107609	Identifier	ret		5107474	0					
ANR	5107610	CallExpression	"r_str_append ( ret , res )"		5107474	1					
ANR	5107611	Callee	r_str_append		5107474	0					
ANR	5107612	Identifier	r_str_append		5107474	0					
ANR	5107613	ArgumentList	ret		5107474	1					
ANR	5107614	Argument	ret		5107474	0					
ANR	5107615	Identifier	ret		5107474	0					
ANR	5107616	Argument	res		5107474	1					
ANR	5107617	Identifier	res		5107474	0					
ANR	5107618	ElseStatement	else		5107474	0					
ANR	5107619	CompoundStatement		24:11:501:501	5107474	0					
ANR	5107620	ExpressionStatement	"ret = r_str_appendf ( ret , ""0x%x"" , ( 1 << i ) )"	115:3:2652:2693	5107474	0	True				
ANR	5107621	AssignmentExpression	"ret = r_str_appendf ( ret , ""0x%x"" , ( 1 << i ) )"		5107474	0		=			
ANR	5107622	Identifier	ret		5107474	0					
ANR	5107623	CallExpression	"r_str_appendf ( ret , ""0x%x"" , ( 1 << i ) )"		5107474	1					
ANR	5107624	Callee	r_str_appendf		5107474	0					
ANR	5107625	Identifier	r_str_appendf		5107474	0					
ANR	5107626	ArgumentList	ret		5107474	1					
ANR	5107627	Argument	ret		5107474	0					
ANR	5107628	Identifier	ret		5107474	0					
ANR	5107629	Argument	"""0x%x"""		5107474	1					
ANR	5107630	PrimaryExpression	"""0x%x"""		5107474	0					
ANR	5107631	Argument	1 << i		5107474	2					
ANR	5107632	ShiftExpression	1 << i		5107474	0		<<			
ANR	5107633	PrimaryExpression	1		5107474	0					
ANR	5107634	Identifier	i		5107474	1					
ANR	5107635	ReturnStatement	return ret ;	118:1:2705:2715	5107474	19	True				
ANR	5107636	Identifier	ret		5107474	0					
ANR	5107637	ReturnType	R_API char *		5107474	1					
ANR	5107638	Identifier	r_type_enum_getbitfield		5107474	2					
ANR	5107639	ParameterList	"Sdb * TDB , const char * name , ut64 val"		5107474	3					
ANR	5107640	Parameter	Sdb * TDB	91:36:2107:2114	5107474	0	True				
ANR	5107641	ParameterType	Sdb *		5107474	0					
ANR	5107642	Identifier	TDB		5107474	1					
ANR	5107643	Parameter	const char * name	91:46:2117:2132	5107474	1	True				
ANR	5107644	ParameterType	const char *		5107474	0					
ANR	5107645	Identifier	name		5107474	1					
ANR	5107646	Parameter	ut64 val	91:64:2135:2142	5107474	2	True				
ANR	5107647	ParameterType	ut64		5107474	0					
ANR	5107648	Identifier	val		5107474	1					
ANR	5107649	CFGEntryNode	ENTRY		5107474		True				
ANR	5107650	CFGExitNode	EXIT		5107474		True				
ANR	5107651	Symbol	val		5107474						
ANR	5107652	Symbol	ret		5107474						
ANR	5107653	Symbol	res		5107474						
ANR	5107654	Symbol	r_str_append		5107474						
ANR	5107655	Symbol	NULL		5107474						
ANR	5107656	Symbol	r_type_kind		5107474						
ANR	5107657	Symbol	false		5107474						
ANR	5107658	Symbol	i		5107474						
ANR	5107659	Symbol	sdb_const_get		5107474						
ANR	5107660	Symbol	q		5107474						
ANR	5107661	Symbol	isFirst		5107474						
ANR	5107662	Symbol	R_TYPE_ENUM		5107474						
ANR	5107663	Symbol	TDB		5107474						
ANR	5107664	Symbol	r_str_appendf		5107474						
ANR	5107665	Symbol	name		5107474						
ANR	5107666	Symbol	true		5107474						
ANR	5107667	Symbol	sdb_fmt		5107474						
ANR	5107668	Function	r_type_get_bitsize	121:0:2720:4551							
ANR	5107669	FunctionDef	"r_type_get_bitsize (Sdb * TDB , const char * type)"		5107668	0					
ANR	5107670	CompoundStatement		121:57:2777:4551	5107668	0					
ANR	5107671	IdentifierDeclStatement	char * query ;	122:1:2780:2791	5107668	0	True				
ANR	5107672	IdentifierDecl	* query		5107668	0					
ANR	5107673	IdentifierDeclType	char *		5107668	0					
ANR	5107674	Identifier	query		5107668	1					
ANR	5107675	IdentifierDeclStatement	const char * tmptype ;	124:1:2870:2889	5107668	1	True				
ANR	5107676	IdentifierDecl	* tmptype		5107668	0					
ANR	5107677	IdentifierDeclType	const char *		5107668	0					
ANR	5107678	Identifier	tmptype		5107668	1					
ANR	5107679	IfStatement	"if ( ! strncmp ( type , ""struct "" , 7 ) )"		5107668	2					
ANR	5107680	Condition	"! strncmp ( type , ""struct "" , 7 )"	125:5:2896:2924	5107668	0	True				
ANR	5107681	UnaryOperationExpression	"! strncmp ( type , ""struct "" , 7 )"		5107668	0					
ANR	5107682	UnaryOperator	!		5107668	0					
ANR	5107683	CallExpression	"strncmp ( type , ""struct "" , 7 )"		5107668	1					
ANR	5107684	Callee	strncmp		5107668	0					
ANR	5107685	Identifier	strncmp		5107668	0					
ANR	5107686	ArgumentList	type		5107668	1					
ANR	5107687	Argument	type		5107668	0					
ANR	5107688	Identifier	type		5107668	0					
ANR	5107689	Argument	"""struct """		5107668	1					
ANR	5107690	PrimaryExpression	"""struct """		5107668	0					
ANR	5107691	Argument	7		5107668	2					
ANR	5107692	PrimaryExpression	7		5107668	0					
ANR	5107693	CompoundStatement		5:36:149:149	5107668	1					
ANR	5107694	ExpressionStatement	tmptype = type + 7	126:2:2931:2949	5107668	0	True				
ANR	5107695	AssignmentExpression	tmptype = type + 7		5107668	0		=			
ANR	5107696	Identifier	tmptype		5107668	0					
ANR	5107697	AdditiveExpression	type + 7		5107668	1		+			
ANR	5107698	Identifier	type		5107668	0					
ANR	5107699	PrimaryExpression	7		5107668	1					
ANR	5107700	ElseStatement	else		5107668	0					
ANR	5107701	IfStatement	"if ( ! strncmp ( type , ""union "" , 6 ) )"		5107668	0					
ANR	5107702	Condition	"! strncmp ( type , ""union "" , 6 )"	127:12:2963:2990	5107668	0	True				
ANR	5107703	UnaryOperationExpression	"! strncmp ( type , ""union "" , 6 )"		5107668	0					
ANR	5107704	UnaryOperator	!		5107668	0					
ANR	5107705	CallExpression	"strncmp ( type , ""union "" , 6 )"		5107668	1					
ANR	5107706	Callee	strncmp		5107668	0					
ANR	5107707	Identifier	strncmp		5107668	0					
ANR	5107708	ArgumentList	type		5107668	1					
ANR	5107709	Argument	type		5107668	0					
ANR	5107710	Identifier	type		5107668	0					
ANR	5107711	Argument	"""union """		5107668	1					
ANR	5107712	PrimaryExpression	"""union """		5107668	0					
ANR	5107713	Argument	6		5107668	2					
ANR	5107714	PrimaryExpression	6		5107668	0					
ANR	5107715	CompoundStatement		7:42:215:215	5107668	1					
ANR	5107716	ExpressionStatement	tmptype = type + 6	128:2:2997:3015	5107668	0	True				
ANR	5107717	AssignmentExpression	tmptype = type + 6		5107668	0		=			
ANR	5107718	Identifier	tmptype		5107668	0					
ANR	5107719	AdditiveExpression	type + 6		5107668	1		+			
ANR	5107720	Identifier	type		5107668	0					
ANR	5107721	PrimaryExpression	6		5107668	1					
ANR	5107722	ElseStatement	else		5107668	0					
ANR	5107723	CompoundStatement		9:8:247:247	5107668	0					
ANR	5107724	ExpressionStatement	tmptype = type	130:2:3029:3043	5107668	0	True				
ANR	5107725	AssignmentExpression	tmptype = type		5107668	0		=			
ANR	5107726	Identifier	tmptype		5107668	0					
ANR	5107727	Identifier	type		5107668	1					
ANR	5107728	IfStatement	"if ( ( strstr ( type , ""*("" ) || strstr ( type , "" *"" ) ) && strncmp ( type , ""char *"" , 7 ) )"		5107668	3					
ANR	5107729	Condition	"( strstr ( type , ""*("" ) || strstr ( type , "" *"" ) ) && strncmp ( type , ""char *"" , 7 )"	132:5:3053:3130	5107668	0	True				
ANR	5107730	AndExpression	"( strstr ( type , ""*("" ) || strstr ( type , "" *"" ) ) && strncmp ( type , ""char *"" , 7 )"		5107668	0		&&			
ANR	5107731	OrExpression	"strstr ( type , ""*("" ) || strstr ( type , "" *"" )"		5107668	0		||			
ANR	5107732	CallExpression	"strstr ( type , ""*("" )"		5107668	0					
ANR	5107733	Callee	strstr		5107668	0					
ANR	5107734	Identifier	strstr		5107668	0					
ANR	5107735	ArgumentList	type		5107668	1					
ANR	5107736	Argument	type		5107668	0					
ANR	5107737	Identifier	type		5107668	0					
ANR	5107738	Argument	"""*("""		5107668	1					
ANR	5107739	PrimaryExpression	"""*("""		5107668	0					
ANR	5107740	CallExpression	"strstr ( type , "" *"" )"		5107668	1					
ANR	5107741	Callee	strstr		5107668	0					
ANR	5107742	Identifier	strstr		5107668	0					
ANR	5107743	ArgumentList	type		5107668	1					
ANR	5107744	Argument	type		5107668	0					
ANR	5107745	Identifier	type		5107668	0					
ANR	5107746	Argument	""" *"""		5107668	1					
ANR	5107747	PrimaryExpression	""" *"""		5107668	0					
ANR	5107748	CallExpression	"strncmp ( type , ""char *"" , 7 )"		5107668	1					
ANR	5107749	Callee	strncmp		5107668	0					
ANR	5107750	Identifier	strncmp		5107668	0					
ANR	5107751	ArgumentList	type		5107668	1					
ANR	5107752	Argument	type		5107668	0					
ANR	5107753	Identifier	type		5107668	0					
ANR	5107754	Argument	"""char *"""		5107668	1					
ANR	5107755	PrimaryExpression	"""char *"""		5107668	0					
ANR	5107756	Argument	7		5107668	2					
ANR	5107757	PrimaryExpression	7		5107668	0					
ANR	5107758	CompoundStatement		13:32:355:355	5107668	1					
ANR	5107759	ReturnStatement	return 32 ;	134:2:3137:3146	5107668	0	True				
ANR	5107760	PrimaryExpression	32		5107668	0					
ANR	5107761	IdentifierDeclStatement	"const char * t = sdb_const_get ( TDB , tmptype , 0 ) ;"	136:1:3152:3199	5107668	4	True				
ANR	5107762	IdentifierDecl	"* t = sdb_const_get ( TDB , tmptype , 0 )"		5107668	0					
ANR	5107763	IdentifierDeclType	const char *		5107668	0					
ANR	5107764	Identifier	t		5107668	1					
ANR	5107765	AssignmentExpression	"* t = sdb_const_get ( TDB , tmptype , 0 )"		5107668	2		=			
ANR	5107766	Identifier	t		5107668	0					
ANR	5107767	CallExpression	"sdb_const_get ( TDB , tmptype , 0 )"		5107668	1					
ANR	5107768	Callee	sdb_const_get		5107668	0					
ANR	5107769	Identifier	sdb_const_get		5107668	0					
ANR	5107770	ArgumentList	TDB		5107668	1					
ANR	5107771	Argument	TDB		5107668	0					
ANR	5107772	Identifier	TDB		5107668	0					
ANR	5107773	Argument	tmptype		5107668	1					
ANR	5107774	Identifier	tmptype		5107668	0					
ANR	5107775	Argument	0		5107668	2					
ANR	5107776	PrimaryExpression	0		5107668	0					
ANR	5107777	IfStatement	if ( ! t )		5107668	5					
ANR	5107778	Condition	! t	137:5:3206:3207	5107668	0	True				
ANR	5107779	UnaryOperationExpression	! t		5107668	0					
ANR	5107780	UnaryOperator	!		5107668	0					
ANR	5107781	Identifier	t		5107668	1					
ANR	5107782	CompoundStatement		17:9:432:432	5107668	1					
ANR	5107783	IfStatement	"if ( ! strncmp ( tmptype , ""enum "" , 5 ) )"		5107668	0					
ANR	5107784	Condition	"! strncmp ( tmptype , ""enum "" , 5 )"	138:6:3218:3247	5107668	0	True				
ANR	5107785	UnaryOperationExpression	"! strncmp ( tmptype , ""enum "" , 5 )"		5107668	0					
ANR	5107786	UnaryOperator	!		5107668	0					
ANR	5107787	CallExpression	"strncmp ( tmptype , ""enum "" , 5 )"		5107668	1					
ANR	5107788	Callee	strncmp		5107668	0					
ANR	5107789	Identifier	strncmp		5107668	0					
ANR	5107790	ArgumentList	tmptype		5107668	1					
ANR	5107791	Argument	tmptype		5107668	0					
ANR	5107792	Identifier	tmptype		5107668	0					
ANR	5107793	Argument	"""enum """		5107668	1					
ANR	5107794	PrimaryExpression	"""enum """		5107668	0					
ANR	5107795	Argument	5		5107668	2					
ANR	5107796	PrimaryExpression	5		5107668	0					
ANR	5107797	CompoundStatement		18:38:472:472	5107668	1					
ANR	5107798	ReturnStatement	return 32 ;	140:3:3309:3318	5107668	0	True				
ANR	5107799	PrimaryExpression	32		5107668	0					
ANR	5107800	ReturnStatement	return 0 ;	142:2:3326:3334	5107668	1	True				
ANR	5107801	PrimaryExpression	0		5107668	0					
ANR	5107802	IfStatement	"if ( ! strcmp ( t , ""type"" ) )"		5107668	6					
ANR	5107803	Condition	"! strcmp ( t , ""type"" )"	144:5:3344:3362	5107668	0	True				
ANR	5107804	UnaryOperationExpression	"! strcmp ( t , ""type"" )"		5107668	0					
ANR	5107805	UnaryOperator	!		5107668	0					
ANR	5107806	CallExpression	"strcmp ( t , ""type"" )"		5107668	1					
ANR	5107807	Callee	strcmp		5107668	0					
ANR	5107808	Identifier	strcmp		5107668	0					
ANR	5107809	ArgumentList	t		5107668	1					
ANR	5107810	Argument	t		5107668	0					
ANR	5107811	Identifier	t		5107668	0					
ANR	5107812	Argument	"""type"""		5107668	1					
ANR	5107813	PrimaryExpression	"""type"""		5107668	0					
ANR	5107814	CompoundStatement		26:2:638:678	5107668	1					
ANR	5107815	ExpressionStatement	"query = r_str_newf ( ""type.%s.size"" , tmptype )"	145:2:3368:3412	5107668	0	True				
ANR	5107816	AssignmentExpression	"query = r_str_newf ( ""type.%s.size"" , tmptype )"		5107668	0		=			
ANR	5107817	Identifier	query		5107668	0					
ANR	5107818	CallExpression	"r_str_newf ( ""type.%s.size"" , tmptype )"		5107668	1					
ANR	5107819	Callee	r_str_newf		5107668	0					
ANR	5107820	Identifier	r_str_newf		5107668	0					
ANR	5107821	ArgumentList	"""type.%s.size"""		5107668	1					
ANR	5107822	Argument	"""type.%s.size"""		5107668	0					
ANR	5107823	PrimaryExpression	"""type.%s.size"""		5107668	0					
ANR	5107824	Argument	tmptype		5107668	1					
ANR	5107825	Identifier	tmptype		5107668	0					
ANR	5107826	IdentifierDeclStatement	"int r = ( int ) sdb_num_get ( TDB , query , 0 ) ;"	146:2:3416:3456	5107668	1	True				
ANR	5107827	IdentifierDecl	"r = ( int ) sdb_num_get ( TDB , query , 0 )"		5107668	0					
ANR	5107828	IdentifierDeclType	int		5107668	0					
ANR	5107829	Identifier	r		5107668	1					
ANR	5107830	AssignmentExpression	"r = ( int ) sdb_num_get ( TDB , query , 0 )"		5107668	2		=			
ANR	5107831	Identifier	r		5107668	0					
ANR	5107832	CastExpression	"( int ) sdb_num_get ( TDB , query , 0 )"		5107668	1					
ANR	5107833	CastTarget	int		5107668	0					
ANR	5107834	CallExpression	"sdb_num_get ( TDB , query , 0 )"		5107668	1					
ANR	5107835	Callee	sdb_num_get		5107668	0					
ANR	5107836	Identifier	sdb_num_get		5107668	0					
ANR	5107837	ArgumentList	TDB		5107668	1					
ANR	5107838	Argument	TDB		5107668	0					
ANR	5107839	Identifier	TDB		5107668	0					
ANR	5107840	Argument	query		5107668	1					
ANR	5107841	Identifier	query		5107668	0					
ANR	5107842	Argument	0		5107668	2					
ANR	5107843	PrimaryExpression	0		5107668	0					
ANR	5107844	ExpressionStatement	free ( query )	147:2:3484:3496	5107668	2	True				
ANR	5107845	CallExpression	free ( query )		5107668	0					
ANR	5107846	Callee	free		5107668	0					
ANR	5107847	Identifier	free		5107668	0					
ANR	5107848	ArgumentList	query		5107668	1					
ANR	5107849	Argument	query		5107668	0					
ANR	5107850	Identifier	query		5107668	0					
ANR	5107851	ReturnStatement	return r ;	148:2:3500:3508	5107668	3	True				
ANR	5107852	Identifier	r		5107668	0					
ANR	5107853	IfStatement	"if ( ! strcmp ( t , ""struct"" ) || ! strcmp ( t , ""union"" ) )"		5107668	7					
ANR	5107854	Condition	"! strcmp ( t , ""struct"" ) || ! strcmp ( t , ""union"" )"	150:5:3518:3562	5107668	0	True				
ANR	5107855	OrExpression	"! strcmp ( t , ""struct"" ) || ! strcmp ( t , ""union"" )"		5107668	0		||			
ANR	5107856	UnaryOperationExpression	"! strcmp ( t , ""struct"" )"		5107668	0					
ANR	5107857	UnaryOperator	!		5107668	0					
ANR	5107858	CallExpression	"strcmp ( t , ""struct"" )"		5107668	1					
ANR	5107859	Callee	strcmp		5107668	0					
ANR	5107860	Identifier	strcmp		5107668	0					
ANR	5107861	ArgumentList	t		5107668	1					
ANR	5107862	Argument	t		5107668	0					
ANR	5107863	Identifier	t		5107668	0					
ANR	5107864	Argument	"""struct"""		5107668	1					
ANR	5107865	PrimaryExpression	"""struct"""		5107668	0					
ANR	5107866	UnaryOperationExpression	"! strcmp ( t , ""union"" )"		5107668	1					
ANR	5107867	UnaryOperator	!		5107668	0					
ANR	5107868	CallExpression	"strcmp ( t , ""union"" )"		5107668	1					
ANR	5107869	Callee	strcmp		5107668	0					
ANR	5107870	Identifier	strcmp		5107668	0					
ANR	5107871	ArgumentList	t		5107668	1					
ANR	5107872	Argument	t		5107668	0					
ANR	5107873	Identifier	t		5107668	0					
ANR	5107874	Argument	"""union"""		5107668	1					
ANR	5107875	PrimaryExpression	"""union"""		5107668	0					
ANR	5107876	CompoundStatement		34:2:908:919	5107668	1					
ANR	5107877	ExpressionStatement	"query = r_str_newf ( ""%s.%s"" , t , tmptype )"	151:2:3569:3609	5107668	0	True				
ANR	5107878	AssignmentExpression	"query = r_str_newf ( ""%s.%s"" , t , tmptype )"		5107668	0		=			
ANR	5107879	Identifier	query		5107668	0					
ANR	5107880	CallExpression	"r_str_newf ( ""%s.%s"" , t , tmptype )"		5107668	1					
ANR	5107881	Callee	r_str_newf		5107668	0					
ANR	5107882	Identifier	r_str_newf		5107668	0					
ANR	5107883	ArgumentList	"""%s.%s"""		5107668	1					
ANR	5107884	Argument	"""%s.%s"""		5107668	0					
ANR	5107885	PrimaryExpression	"""%s.%s"""		5107668	0					
ANR	5107886	Argument	t		5107668	1					
ANR	5107887	Identifier	t		5107668	0					
ANR	5107888	Argument	tmptype		5107668	2					
ANR	5107889	Identifier	tmptype		5107668	0					
ANR	5107890	IdentifierDeclStatement	"char * members = sdb_get ( TDB , query , 0 ) ;"	152:2:3613:3652	5107668	1	True				
ANR	5107891	IdentifierDecl	"* members = sdb_get ( TDB , query , 0 )"		5107668	0					
ANR	5107892	IdentifierDeclType	char *		5107668	0					
ANR	5107893	Identifier	members		5107668	1					
ANR	5107894	AssignmentExpression	"* members = sdb_get ( TDB , query , 0 )"		5107668	2		=			
ANR	5107895	Identifier	members		5107668	0					
ANR	5107896	CallExpression	"sdb_get ( TDB , query , 0 )"		5107668	1					
ANR	5107897	Callee	sdb_get		5107668	0					
ANR	5107898	Identifier	sdb_get		5107668	0					
ANR	5107899	ArgumentList	TDB		5107668	1					
ANR	5107900	Argument	TDB		5107668	0					
ANR	5107901	Identifier	TDB		5107668	0					
ANR	5107902	Argument	query		5107668	1					
ANR	5107903	Identifier	query		5107668	0					
ANR	5107904	Argument	0		5107668	2					
ANR	5107905	PrimaryExpression	0		5107668	0					
ANR	5107906	IdentifierDeclStatement	"char * next , * ptr = members ;"	153:2:3656:3682	5107668	2	True				
ANR	5107907	IdentifierDecl	* next		5107668	0					
ANR	5107908	IdentifierDeclType	char *		5107668	0					
ANR	5107909	Identifier	next		5107668	1					
ANR	5107910	IdentifierDecl	* ptr = members		5107668	1					
ANR	5107911	IdentifierDeclType	char *		5107668	0					
ANR	5107912	Identifier	ptr		5107668	1					
ANR	5107913	AssignmentExpression	* ptr = members		5107668	2		=			
ANR	5107914	Identifier	members		5107668	0					
ANR	5107915	Identifier	members		5107668	1					
ANR	5107916	IdentifierDeclStatement	int ret = 0 ;	154:2:3686:3697	5107668	3	True				
ANR	5107917	IdentifierDecl	ret = 0		5107668	0					
ANR	5107918	IdentifierDeclType	int		5107668	0					
ANR	5107919	Identifier	ret		5107668	1					
ANR	5107920	AssignmentExpression	ret = 0		5107668	2		=			
ANR	5107921	Identifier	ret		5107668	0					
ANR	5107922	PrimaryExpression	0		5107668	1					
ANR	5107923	IfStatement	if ( members )		5107668	4					
ANR	5107924	Condition	members	155:6:3705:3711	5107668	0	True				
ANR	5107925	Identifier	members		5107668	0					
ANR	5107926	CompoundStatement		35:15:936:936	5107668	1					
ANR	5107927	DoStatement	do		5107668	0					
ANR	5107928	CompoundStatement		48:4:1202:1235	5107668	0					
ANR	5107929	IdentifierDeclStatement	"char * name = sdb_anext ( ptr , & next ) ;"	157:4:3728:3763	5107668	0	True				
ANR	5107930	IdentifierDecl	"* name = sdb_anext ( ptr , & next )"		5107668	0					
ANR	5107931	IdentifierDeclType	char *		5107668	0					
ANR	5107932	Identifier	name		5107668	1					
ANR	5107933	AssignmentExpression	"* name = sdb_anext ( ptr , & next )"		5107668	2		=			
ANR	5107934	Identifier	name		5107668	0					
ANR	5107935	CallExpression	"sdb_anext ( ptr , & next )"		5107668	1					
ANR	5107936	Callee	sdb_anext		5107668	0					
ANR	5107937	Identifier	sdb_anext		5107668	0					
ANR	5107938	ArgumentList	ptr		5107668	1					
ANR	5107939	Argument	ptr		5107668	0					
ANR	5107940	Identifier	ptr		5107668	0					
ANR	5107941	Argument	& next		5107668	1					
ANR	5107942	UnaryOperationExpression	& next		5107668	0					
ANR	5107943	UnaryOperator	&		5107668	0					
ANR	5107944	Identifier	next		5107668	1					
ANR	5107945	IfStatement	if ( ! name )		5107668	1					
ANR	5107946	Condition	! name	158:8:3773:3777	5107668	0	True				
ANR	5107947	UnaryOperationExpression	! name		5107668	0					
ANR	5107948	UnaryOperator	!		5107668	0					
ANR	5107949	Identifier	name		5107668	1					
ANR	5107950	CompoundStatement		38:15:1002:1002	5107668	1					
ANR	5107951	BreakStatement	break ;	159:5:3787:3792	5107668	0	True				
ANR	5107952	ExpressionStatement	free ( query )	161:4:3804:3816	5107668	2	True				
ANR	5107953	CallExpression	free ( query )		5107668	0					
ANR	5107954	Callee	free		5107668	0					
ANR	5107955	Identifier	free		5107668	0					
ANR	5107956	ArgumentList	query		5107668	1					
ANR	5107957	Argument	query		5107668	0					
ANR	5107958	Identifier	query		5107668	0					
ANR	5107959	ExpressionStatement	"query = r_str_newf ( ""%s.%s.%s"" , t , tmptype , name )"	162:4:3822:3871	5107668	3	True				
ANR	5107960	AssignmentExpression	"query = r_str_newf ( ""%s.%s.%s"" , t , tmptype , name )"		5107668	0		=			
ANR	5107961	Identifier	query		5107668	0					
ANR	5107962	CallExpression	"r_str_newf ( ""%s.%s.%s"" , t , tmptype , name )"		5107668	1					
ANR	5107963	Callee	r_str_newf		5107668	0					
ANR	5107964	Identifier	r_str_newf		5107668	0					
ANR	5107965	ArgumentList	"""%s.%s.%s"""		5107668	1					
ANR	5107966	Argument	"""%s.%s.%s"""		5107668	0					
ANR	5107967	PrimaryExpression	"""%s.%s.%s"""		5107668	0					
ANR	5107968	Argument	t		5107668	1					
ANR	5107969	Identifier	t		5107668	0					
ANR	5107970	Argument	tmptype		5107668	2					
ANR	5107971	Identifier	tmptype		5107668	0					
ANR	5107972	Argument	name		5107668	3					
ANR	5107973	Identifier	name		5107668	0					
ANR	5107974	IdentifierDeclStatement	"char * subtype = sdb_get ( TDB , query , 0 ) ;"	163:4:3877:3916	5107668	4	True				
ANR	5107975	IdentifierDecl	"* subtype = sdb_get ( TDB , query , 0 )"		5107668	0					
ANR	5107976	IdentifierDeclType	char *		5107668	0					
ANR	5107977	Identifier	subtype		5107668	1					
ANR	5107978	AssignmentExpression	"* subtype = sdb_get ( TDB , query , 0 )"		5107668	2		=			
ANR	5107979	Identifier	subtype		5107668	0					
ANR	5107980	CallExpression	"sdb_get ( TDB , query , 0 )"		5107668	1					
ANR	5107981	Callee	sdb_get		5107668	0					
ANR	5107982	Identifier	sdb_get		5107668	0					
ANR	5107983	ArgumentList	TDB		5107668	1					
ANR	5107984	Argument	TDB		5107668	0					
ANR	5107985	Identifier	TDB		5107668	0					
ANR	5107986	Argument	query		5107668	1					
ANR	5107987	Identifier	query		5107668	0					
ANR	5107988	Argument	0		5107668	2					
ANR	5107989	PrimaryExpression	0		5107668	0					
ANR	5107990	ExpressionStatement	R_FREE ( query )	164:4:3922:3936	5107668	5	True				
ANR	5107991	CallExpression	R_FREE ( query )		5107668	0					
ANR	5107992	Callee	R_FREE		5107668	0					
ANR	5107993	Identifier	R_FREE		5107668	0					
ANR	5107994	ArgumentList	query		5107668	1					
ANR	5107995	Argument	query		5107668	0					
ANR	5107996	Identifier	query		5107668	0					
ANR	5107997	IfStatement	if ( ! subtype )		5107668	6					
ANR	5107998	Condition	! subtype	165:8:3946:3953	5107668	0	True				
ANR	5107999	UnaryOperationExpression	! subtype		5107668	0					
ANR	5108000	UnaryOperator	!		5107668	0					
ANR	5108001	Identifier	subtype		5107668	1					
ANR	5108002	CompoundStatement		45:18:1178:1178	5107668	1					
ANR	5108003	BreakStatement	break ;	166:5:3963:3968	5107668	0	True				
ANR	5108004	IdentifierDeclStatement	"char * tmp = strchr ( subtype , ',' ) ;"	168:4:3980:4013	5107668	7	True				
ANR	5108005	IdentifierDecl	"* tmp = strchr ( subtype , ',' )"		5107668	0					
ANR	5108006	IdentifierDeclType	char *		5107668	0					
ANR	5108007	Identifier	tmp		5107668	1					
ANR	5108008	AssignmentExpression	"* tmp = strchr ( subtype , ',' )"		5107668	2		=			
ANR	5108009	Identifier	tmp		5107668	0					
ANR	5108010	CallExpression	"strchr ( subtype , ',' )"		5107668	1					
ANR	5108011	Callee	strchr		5107668	0					
ANR	5108012	Identifier	strchr		5107668	0					
ANR	5108013	ArgumentList	subtype		5107668	1					
ANR	5108014	Argument	subtype		5107668	0					
ANR	5108015	Identifier	subtype		5107668	0					
ANR	5108016	Argument	"','"		5107668	1					
ANR	5108017	PrimaryExpression	"','"		5107668	0					
ANR	5108018	IfStatement	if ( tmp )		5107668	8					
ANR	5108019	Condition	tmp	169:8:4023:4025	5107668	0	True				
ANR	5108020	Identifier	tmp		5107668	0					
ANR	5108021	CompoundStatement		55:5:1345:1382	5107668	1					
ANR	5108022	ExpressionStatement	* tmp ++ = 0	170:5:4035:4045	5107668	0	True				
ANR	5108023	AssignmentExpression	* tmp ++ = 0		5107668	0		=			
ANR	5108024	UnaryOperationExpression	* tmp ++		5107668	0					
ANR	5108025	UnaryOperator	*		5107668	0					
ANR	5108026	PostIncDecOperationExpression	tmp ++		5107668	1					
ANR	5108027	Identifier	tmp		5107668	0					
ANR	5108028	IncDec	++		5107668	1					
ANR	5108029	PrimaryExpression	0		5107668	1					
ANR	5108030	ExpressionStatement	"tmp = strchr ( tmp , ',' )"	171:5:4052:4075	5107668	1	True				
ANR	5108031	AssignmentExpression	"tmp = strchr ( tmp , ',' )"		5107668	0		=			
ANR	5108032	Identifier	tmp		5107668	0					
ANR	5108033	CallExpression	"strchr ( tmp , ',' )"		5107668	1					
ANR	5108034	Callee	strchr		5107668	0					
ANR	5108035	Identifier	strchr		5107668	0					
ANR	5108036	ArgumentList	tmp		5107668	1					
ANR	5108037	Argument	tmp		5107668	0					
ANR	5108038	Identifier	tmp		5107668	0					
ANR	5108039	Argument	"','"		5107668	1					
ANR	5108040	PrimaryExpression	"','"		5107668	0					
ANR	5108041	IfStatement	if ( tmp )		5107668	2					
ANR	5108042	Condition	tmp	172:9:4086:4088	5107668	0	True				
ANR	5108043	Identifier	tmp		5107668	0					
ANR	5108044	CompoundStatement		52:14:1313:1313	5107668	1					
ANR	5108045	ExpressionStatement	* tmp ++ = 0	173:6:4099:4109	5107668	0	True				
ANR	5108046	AssignmentExpression	* tmp ++ = 0		5107668	0		=			
ANR	5108047	UnaryOperationExpression	* tmp ++		5107668	0					
ANR	5108048	UnaryOperator	*		5107668	0					
ANR	5108049	PostIncDecOperationExpression	tmp ++		5107668	1					
ANR	5108050	Identifier	tmp		5107668	0					
ANR	5108051	IncDec	++		5107668	1					
ANR	5108052	PrimaryExpression	0		5107668	1					
ANR	5108053	IdentifierDeclStatement	"int elements = r_num_math ( NULL , tmp ) ;"	175:5:4123:4160	5107668	3	True				
ANR	5108054	IdentifierDecl	"elements = r_num_math ( NULL , tmp )"		5107668	0					
ANR	5108055	IdentifierDeclType	int		5107668	0					
ANR	5108056	Identifier	elements		5107668	1					
ANR	5108057	AssignmentExpression	"elements = r_num_math ( NULL , tmp )"		5107668	2		=			
ANR	5108058	Identifier	elements		5107668	0					
ANR	5108059	CallExpression	"r_num_math ( NULL , tmp )"		5107668	1					
ANR	5108060	Callee	r_num_math		5107668	0					
ANR	5108061	Identifier	r_num_math		5107668	0					
ANR	5108062	ArgumentList	NULL		5107668	1					
ANR	5108063	Argument	NULL		5107668	0					
ANR	5108064	Identifier	NULL		5107668	0					
ANR	5108065	Argument	tmp		5107668	1					
ANR	5108066	Identifier	tmp		5107668	0					
ANR	5108067	IfStatement	if ( elements == 0 )		5107668	4					
ANR	5108068	Condition	elements == 0	176:9:4171:4183	5107668	0	True				
ANR	5108069	EqualityExpression	elements == 0		5107668	0		==			
ANR	5108070	Identifier	elements		5107668	0					
ANR	5108071	PrimaryExpression	0		5107668	1					
ANR	5108072	CompoundStatement		56:24:1408:1408	5107668	1					
ANR	5108073	ExpressionStatement	elements = 1	177:6:4194:4206	5107668	0	True				
ANR	5108074	AssignmentExpression	elements = 1		5107668	0		=			
ANR	5108075	Identifier	elements		5107668	0					
ANR	5108076	PrimaryExpression	1		5107668	1					
ANR	5108077	IfStatement	"if ( ! strcmp ( t , ""struct"" ) )"		5107668	5					
ANR	5108078	Condition	"! strcmp ( t , ""struct"" )"	179:9:4224:4244	5107668	0	True				
ANR	5108079	UnaryOperationExpression	"! strcmp ( t , ""struct"" )"		5107668	0					
ANR	5108080	UnaryOperator	!		5107668	0					
ANR	5108081	CallExpression	"strcmp ( t , ""struct"" )"		5107668	1					
ANR	5108082	Callee	strcmp		5107668	0					
ANR	5108083	Identifier	strcmp		5107668	0					
ANR	5108084	ArgumentList	t		5107668	1					
ANR	5108085	Argument	t		5107668	0					
ANR	5108086	Identifier	t		5107668	0					
ANR	5108087	Argument	"""struct"""		5107668	1					
ANR	5108088	PrimaryExpression	"""struct"""		5107668	0					
ANR	5108089	CompoundStatement		59:32:1469:1469	5107668	1					
ANR	5108090	ExpressionStatement	"ret += r_type_get_bitsize ( TDB , subtype ) * elements"	180:6:4255:4306	5107668	0	True				
ANR	5108091	AssignmentExpression	"ret += r_type_get_bitsize ( TDB , subtype ) * elements"		5107668	0		+=			
ANR	5108092	Identifier	ret		5107668	0					
ANR	5108093	MultiplicativeExpression	"r_type_get_bitsize ( TDB , subtype ) * elements"		5107668	1		*			
ANR	5108094	CallExpression	"r_type_get_bitsize ( TDB , subtype )"		5107668	0					
ANR	5108095	Callee	r_type_get_bitsize		5107668	0					
ANR	5108096	Identifier	r_type_get_bitsize		5107668	0					
ANR	5108097	ArgumentList	TDB		5107668	1					
ANR	5108098	Argument	TDB		5107668	0					
ANR	5108099	Identifier	TDB		5107668	0					
ANR	5108100	Argument	subtype		5107668	1					
ANR	5108101	Identifier	subtype		5107668	0					
ANR	5108102	Identifier	elements		5107668	1					
ANR	5108103	ElseStatement	else		5107668	0					
ANR	5108104	CompoundStatement		62:6:1550:1603	5107668	0					
ANR	5108105	IdentifierDeclStatement	"int sz = r_type_get_bitsize ( TDB , subtype ) * elements ;"	182:6:4328:4381	5107668	0	True				
ANR	5108106	IdentifierDecl	"sz = r_type_get_bitsize ( TDB , subtype ) * elements"		5107668	0					
ANR	5108107	IdentifierDeclType	int		5107668	0					
ANR	5108108	Identifier	sz		5107668	1					
ANR	5108109	AssignmentExpression	"sz = r_type_get_bitsize ( TDB , subtype ) * elements"		5107668	2		=			
ANR	5108110	Identifier	sz		5107668	0					
ANR	5108111	MultiplicativeExpression	"r_type_get_bitsize ( TDB , subtype ) * elements"		5107668	1		*			
ANR	5108112	CallExpression	"r_type_get_bitsize ( TDB , subtype )"		5107668	0					
ANR	5108113	Callee	r_type_get_bitsize		5107668	0					
ANR	5108114	Identifier	r_type_get_bitsize		5107668	0					
ANR	5108115	ArgumentList	TDB		5107668	1					
ANR	5108116	Argument	TDB		5107668	0					
ANR	5108117	Identifier	TDB		5107668	0					
ANR	5108118	Argument	subtype		5107668	1					
ANR	5108119	Identifier	subtype		5107668	0					
ANR	5108120	Identifier	elements		5107668	1					
ANR	5108121	ExpressionStatement	ret = sz > ret ? sz : ret	183:6:4389:4414	5107668	1	True				
ANR	5108122	AssignmentExpression	ret = sz > ret ? sz : ret		5107668	0		=			
ANR	5108123	Identifier	ret		5107668	0					
ANR	5108124	ConditionalExpression	sz > ret ? sz : ret		5107668	1					
ANR	5108125	Condition	sz > ret		5107668	0					
ANR	5108126	RelationalExpression	sz > ret		5107668	0		>			
ANR	5108127	Identifier	sz		5107668	0					
ANR	5108128	Identifier	ret		5107668	1					
ANR	5108129	Identifier	sz		5107668	1					
ANR	5108130	Identifier	ret		5107668	2					
ANR	5108131	ExpressionStatement	free ( subtype )	186:4:4433:4447	5107668	9	True				
ANR	5108132	CallExpression	free ( subtype )		5107668	0					
ANR	5108133	Callee	free		5107668	0					
ANR	5108134	Identifier	free		5107668	0					
ANR	5108135	ArgumentList	subtype		5107668	1					
ANR	5108136	Argument	subtype		5107668	0					
ANR	5108137	Identifier	subtype		5107668	0					
ANR	5108138	ExpressionStatement	ptr = next	187:4:4453:4463	5107668	10	True				
ANR	5108139	AssignmentExpression	ptr = next		5107668	0		=			
ANR	5108140	Identifier	ptr		5107668	0					
ANR	5108141	Identifier	next		5107668	1					
ANR	5108142	Condition	next	188:12:4477:4480	5107668	1	True				
ANR	5108143	Identifier	next		5107668	0					
ANR	5108144	ExpressionStatement	free ( members )	189:3:4487:4501	5107668	1	True				
ANR	5108145	CallExpression	free ( members )		5107668	0					
ANR	5108146	Callee	free		5107668	0					
ANR	5108147	Identifier	free		5107668	0					
ANR	5108148	ArgumentList	members		5107668	1					
ANR	5108149	Argument	members		5107668	0					
ANR	5108150	Identifier	members		5107668	0					
ANR	5108151	ExpressionStatement	free ( query )	191:2:4509:4521	5107668	5	True				
ANR	5108152	CallExpression	free ( query )		5107668	0					
ANR	5108153	Callee	free		5107668	0					
ANR	5108154	Identifier	free		5107668	0					
ANR	5108155	ArgumentList	query		5107668	1					
ANR	5108156	Argument	query		5107668	0					
ANR	5108157	Identifier	query		5107668	0					
ANR	5108158	ReturnStatement	return ret ;	192:2:4525:4535	5107668	6	True				
ANR	5108159	Identifier	ret		5107668	0					
ANR	5108160	ReturnStatement	return 0 ;	194:1:4541:4549	5107668	8	True				
ANR	5108161	PrimaryExpression	0		5107668	0					
ANR	5108162	ReturnType	R_API int		5107668	1					
ANR	5108163	Identifier	r_type_get_bitsize		5107668	2					
ANR	5108164	ParameterList	"Sdb * TDB , const char * type"		5107668	3					
ANR	5108165	Parameter	Sdb * TDB	121:29:2749:2756	5107668	0	True				
ANR	5108166	ParameterType	Sdb *		5107668	0					
ANR	5108167	Identifier	TDB		5107668	1					
ANR	5108168	Parameter	const char * type	121:39:2759:2774	5107668	1	True				
ANR	5108169	ParameterType	const char *		5107668	0					
ANR	5108170	Identifier	type		5107668	1					
ANR	5108171	CFGEntryNode	ENTRY		5107668		True				
ANR	5108172	CFGExitNode	EXIT		5107668		True				
ANR	5108173	Symbol	next		5107668						
ANR	5108174	Symbol	strchr		5107668						
ANR	5108175	Symbol	r_str_newf		5107668						
ANR	5108176	Symbol	type		5107668						
ANR	5108177	Symbol	sdb_const_get		5107668						
ANR	5108178	Symbol	r_num_math		5107668						
ANR	5108179	Symbol	strncmp		5107668						
ANR	5108180	Symbol	TDB		5107668						
ANR	5108181	Symbol	subtype		5107668						
ANR	5108182	Symbol	tmp		5107668						
ANR	5108183	Symbol	members		5107668						
ANR	5108184	Symbol	strcmp		5107668						
ANR	5108185	Symbol	sdb_num_get		5107668						
ANR	5108186	Symbol	ret		5107668						
ANR	5108187	Symbol	* tmp ++		5107668						
ANR	5108188	Symbol	tmptype		5107668						
ANR	5108189	Symbol	& next		5107668						
ANR	5108190	Symbol	NULL		5107668						
ANR	5108191	Symbol	r_type_get_bitsize		5107668						
ANR	5108192	Symbol	query		5107668						
ANR	5108193	Symbol	sz		5107668						
ANR	5108194	Symbol	sdb_get		5107668						
ANR	5108195	Symbol	ptr		5107668						
ANR	5108196	Symbol	r		5107668						
ANR	5108197	Symbol	t		5107668						
ANR	5108198	Symbol	strstr		5107668						
ANR	5108199	Symbol	elements		5107668						
ANR	5108200	Symbol	name		5107668						
ANR	5108201	Symbol	sdb_anext		5107668						
ANR	5108202	Function	r_type_get_struct_memb	197:0:4554:6288							
ANR	5108203	FunctionDef	"r_type_get_struct_memb (Sdb * TDB , const char * type , int offset)"		5108202	0					
ANR	5108204	CompoundStatement		197:75:4629:6288	5108202	0					
ANR	5108205	IdentifierDeclStatement	"int i , prev_typesize , typesize = 0 ;"	198:1:4632:4666	5108202	0	True				
ANR	5108206	IdentifierDecl	i		5108202	0					
ANR	5108207	IdentifierDeclType	int		5108202	0					
ANR	5108208	Identifier	i		5108202	1					
ANR	5108209	IdentifierDecl	prev_typesize		5108202	1					
ANR	5108210	IdentifierDeclType	int		5108202	0					
ANR	5108211	Identifier	prev_typesize		5108202	1					
ANR	5108212	IdentifierDecl	typesize = 0		5108202	2					
ANR	5108213	IdentifierDeclType	int		5108202	0					
ANR	5108214	Identifier	typesize		5108202	1					
ANR	5108215	AssignmentExpression	typesize = 0		5108202	2		=			
ANR	5108216	Identifier	typesize		5108202	0					
ANR	5108217	PrimaryExpression	0		5108202	1					
ANR	5108218	IdentifierDeclStatement	char * res = NULL ;	199:1:4669:4685	5108202	1	True				
ANR	5108219	IdentifierDecl	* res = NULL		5108202	0					
ANR	5108220	IdentifierDeclType	char *		5108202	0					
ANR	5108221	Identifier	res		5108202	1					
ANR	5108222	AssignmentExpression	* res = NULL		5108202	2		=			
ANR	5108223	Identifier	NULL		5108202	0					
ANR	5108224	Identifier	NULL		5108202	1					
ANR	5108225	IfStatement	if ( offset < 0 )		5108202	2					
ANR	5108226	Condition	offset < 0	201:5:4693:4702	5108202	0	True				
ANR	5108227	RelationalExpression	offset < 0		5108202	0		<			
ANR	5108228	Identifier	offset		5108202	0					
ANR	5108229	PrimaryExpression	0		5108202	1					
ANR	5108230	CompoundStatement		5:17:75:75	5108202	1					
ANR	5108231	ReturnStatement	return NULL ;	202:2:4709:4720	5108202	0	True				
ANR	5108232	Identifier	NULL		5108202	0					
ANR	5108233	IdentifierDeclStatement	"char * query = sdb_fmt ( ""struct.%s"" , type ) ;"	204:1:4726:4767	5108202	3	True				
ANR	5108234	IdentifierDecl	"* query = sdb_fmt ( ""struct.%s"" , type )"		5108202	0					
ANR	5108235	IdentifierDeclType	char *		5108202	0					
ANR	5108236	Identifier	query		5108202	1					
ANR	5108237	AssignmentExpression	"* query = sdb_fmt ( ""struct.%s"" , type )"		5108202	2		=			
ANR	5108238	Identifier	query		5108202	0					
ANR	5108239	CallExpression	"sdb_fmt ( ""struct.%s"" , type )"		5108202	1					
ANR	5108240	Callee	sdb_fmt		5108202	0					
ANR	5108241	Identifier	sdb_fmt		5108202	0					
ANR	5108242	ArgumentList	"""struct.%s"""		5108202	1					
ANR	5108243	Argument	"""struct.%s"""		5108202	0					
ANR	5108244	PrimaryExpression	"""struct.%s"""		5108202	0					
ANR	5108245	Argument	type		5108202	1					
ANR	5108246	Identifier	type		5108202	0					
ANR	5108247	IdentifierDeclStatement	"char * members = sdb_get ( TDB , query , 0 ) ;"	205:1:4770:4809	5108202	4	True				
ANR	5108248	IdentifierDecl	"* members = sdb_get ( TDB , query , 0 )"		5108202	0					
ANR	5108249	IdentifierDeclType	char *		5108202	0					
ANR	5108250	Identifier	members		5108202	1					
ANR	5108251	AssignmentExpression	"* members = sdb_get ( TDB , query , 0 )"		5108202	2		=			
ANR	5108252	Identifier	members		5108202	0					
ANR	5108253	CallExpression	"sdb_get ( TDB , query , 0 )"		5108202	1					
ANR	5108254	Callee	sdb_get		5108202	0					
ANR	5108255	Identifier	sdb_get		5108202	0					
ANR	5108256	ArgumentList	TDB		5108202	1					
ANR	5108257	Argument	TDB		5108202	0					
ANR	5108258	Identifier	TDB		5108202	0					
ANR	5108259	Argument	query		5108202	1					
ANR	5108260	Identifier	query		5108202	0					
ANR	5108261	Argument	0		5108202	2					
ANR	5108262	PrimaryExpression	0		5108202	0					
ANR	5108263	IfStatement	if ( ! members )		5108202	5					
ANR	5108264	Condition	! members	206:5:4816:4823	5108202	0	True				
ANR	5108265	UnaryOperationExpression	! members		5108202	0					
ANR	5108266	UnaryOperator	!		5108202	0					
ANR	5108267	Identifier	members		5108202	1					
ANR	5108268	CompoundStatement		10:15:196:196	5108202	1					
ANR	5108269	ReturnStatement	return NULL ;	208:2:4874:4885	5108202	0	True				
ANR	5108270	Identifier	NULL		5108202	0					
ANR	5108271	IdentifierDeclStatement	"int nargs = r_str_split ( members , ',' ) ;"	210:1:4891:4929	5108202	6	True				
ANR	5108272	IdentifierDecl	"nargs = r_str_split ( members , ',' )"		5108202	0					
ANR	5108273	IdentifierDeclType	int		5108202	0					
ANR	5108274	Identifier	nargs		5108202	1					
ANR	5108275	AssignmentExpression	"nargs = r_str_split ( members , ',' )"		5108202	2		=			
ANR	5108276	Identifier	nargs		5108202	0					
ANR	5108277	CallExpression	"r_str_split ( members , ',' )"		5108202	1					
ANR	5108278	Callee	r_str_split		5108202	0					
ANR	5108279	Identifier	r_str_split		5108202	0					
ANR	5108280	ArgumentList	members		5108202	1					
ANR	5108281	Argument	members		5108202	0					
ANR	5108282	Identifier	members		5108202	0					
ANR	5108283	Argument	"','"		5108202	1					
ANR	5108284	PrimaryExpression	"','"		5108202	0					
ANR	5108285	ForStatement	for ( i = 0 ; i < nargs ; i ++ )		5108202	7					
ANR	5108286	ForInit	i = 0 ;	211:6:4937:4942	5108202	0	True				
ANR	5108287	AssignmentExpression	i = 0		5108202	0		=			
ANR	5108288	Identifier	i		5108202	0					
ANR	5108289	PrimaryExpression	0		5108202	1					
ANR	5108290	Condition	i < nargs	211:13:4944:4952	5108202	1	True				
ANR	5108291	RelationalExpression	i < nargs		5108202	0		<			
ANR	5108292	Identifier	i		5108202	0					
ANR	5108293	Identifier	nargs		5108202	1					
ANR	5108294	PostIncDecOperationExpression	i ++	211:25:4956:4958	5108202	2	True				
ANR	5108295	Identifier	i		5108202	0					
ANR	5108296	IncDec	++		5108202	1					
ANR	5108297	CompoundStatement		31:2:695:720	5108202	3					
ANR	5108298	IdentifierDeclStatement	"const char * name = r_str_word_get0 ( members , i ) ;"	212:2:4965:5012	5108202	0	True				
ANR	5108299	IdentifierDecl	"* name = r_str_word_get0 ( members , i )"		5108202	0					
ANR	5108300	IdentifierDeclType	const char *		5108202	0					
ANR	5108301	Identifier	name		5108202	1					
ANR	5108302	AssignmentExpression	"* name = r_str_word_get0 ( members , i )"		5108202	2		=			
ANR	5108303	Identifier	name		5108202	0					
ANR	5108304	CallExpression	"r_str_word_get0 ( members , i )"		5108202	1					
ANR	5108305	Callee	r_str_word_get0		5108202	0					
ANR	5108306	Identifier	r_str_word_get0		5108202	0					
ANR	5108307	ArgumentList	members		5108202	1					
ANR	5108308	Argument	members		5108202	0					
ANR	5108309	Identifier	members		5108202	0					
ANR	5108310	Argument	i		5108202	1					
ANR	5108311	Identifier	i		5108202	0					
ANR	5108312	IfStatement	if ( ! name )		5108202	1					
ANR	5108313	Condition	! name	213:6:5020:5024	5108202	0	True				
ANR	5108314	UnaryOperationExpression	! name		5108202	0					
ANR	5108315	UnaryOperator	!		5108202	0					
ANR	5108316	Identifier	name		5108202	1					
ANR	5108317	CompoundStatement		17:13:397:397	5108202	1					
ANR	5108318	BreakStatement	break ;	214:3:5032:5037	5108202	0	True				
ANR	5108319	ExpressionStatement	"query = sdb_fmt ( ""struct.%s.%s"" , type , name )"	216:2:5045:5089	5108202	2	True				
ANR	5108320	AssignmentExpression	"query = sdb_fmt ( ""struct.%s.%s"" , type , name )"		5108202	0		=			
ANR	5108321	Identifier	query		5108202	0					
ANR	5108322	CallExpression	"sdb_fmt ( ""struct.%s.%s"" , type , name )"		5108202	1					
ANR	5108323	Callee	sdb_fmt		5108202	0					
ANR	5108324	Identifier	sdb_fmt		5108202	0					
ANR	5108325	ArgumentList	"""struct.%s.%s"""		5108202	1					
ANR	5108326	Argument	"""struct.%s.%s"""		5108202	0					
ANR	5108327	PrimaryExpression	"""struct.%s.%s"""		5108202	0					
ANR	5108328	Argument	type		5108202	1					
ANR	5108329	Identifier	type		5108202	0					
ANR	5108330	Argument	name		5108202	2					
ANR	5108331	Identifier	name		5108202	0					
ANR	5108332	IdentifierDeclStatement	"char * subtype = sdb_get ( TDB , query , 0 ) ;"	217:2:5093:5132	5108202	3	True				
ANR	5108333	IdentifierDecl	"* subtype = sdb_get ( TDB , query , 0 )"		5108202	0					
ANR	5108334	IdentifierDeclType	char *		5108202	0					
ANR	5108335	Identifier	subtype		5108202	1					
ANR	5108336	AssignmentExpression	"* subtype = sdb_get ( TDB , query , 0 )"		5108202	2		=			
ANR	5108337	Identifier	subtype		5108202	0					
ANR	5108338	CallExpression	"sdb_get ( TDB , query , 0 )"		5108202	1					
ANR	5108339	Callee	sdb_get		5108202	0					
ANR	5108340	Identifier	sdb_get		5108202	0					
ANR	5108341	ArgumentList	TDB		5108202	1					
ANR	5108342	Argument	TDB		5108202	0					
ANR	5108343	Identifier	TDB		5108202	0					
ANR	5108344	Argument	query		5108202	1					
ANR	5108345	Identifier	query		5108202	0					
ANR	5108346	Argument	0		5108202	2					
ANR	5108347	PrimaryExpression	0		5108202	0					
ANR	5108348	IfStatement	if ( ! subtype )		5108202	4					
ANR	5108349	Condition	! subtype	218:6:5140:5147	5108202	0	True				
ANR	5108350	UnaryOperationExpression	! subtype		5108202	0					
ANR	5108351	UnaryOperator	!		5108202	0					
ANR	5108352	Identifier	subtype		5108202	1					
ANR	5108353	CompoundStatement		22:16:520:520	5108202	1					
ANR	5108354	BreakStatement	break ;	219:3:5155:5160	5108202	0	True				
ANR	5108355	IdentifierDeclStatement	"int len = r_str_split ( subtype , ',' ) ;"	221:2:5168:5204	5108202	5	True				
ANR	5108356	IdentifierDecl	"len = r_str_split ( subtype , ',' )"		5108202	0					
ANR	5108357	IdentifierDeclType	int		5108202	0					
ANR	5108358	Identifier	len		5108202	1					
ANR	5108359	AssignmentExpression	"len = r_str_split ( subtype , ',' )"		5108202	2		=			
ANR	5108360	Identifier	len		5108202	0					
ANR	5108361	CallExpression	"r_str_split ( subtype , ',' )"		5108202	1					
ANR	5108362	Callee	r_str_split		5108202	0					
ANR	5108363	Identifier	r_str_split		5108202	0					
ANR	5108364	ArgumentList	subtype		5108202	1					
ANR	5108365	Argument	subtype		5108202	0					
ANR	5108366	Identifier	subtype		5108202	0					
ANR	5108367	Argument	"','"		5108202	1					
ANR	5108368	PrimaryExpression	"','"		5108202	0					
ANR	5108369	IfStatement	if ( len < 3 )		5108202	6					
ANR	5108370	Condition	len < 3	222:6:5212:5218	5108202	0	True				
ANR	5108371	RelationalExpression	len < 3		5108202	0		<			
ANR	5108372	Identifier	len		5108202	0					
ANR	5108373	PrimaryExpression	3		5108202	1					
ANR	5108374	CompoundStatement		26:15:591:591	5108202	1					
ANR	5108375	ExpressionStatement	free ( subtype )	223:3:5226:5240	5108202	0	True				
ANR	5108376	CallExpression	free ( subtype )		5108202	0					
ANR	5108377	Callee	free		5108202	0					
ANR	5108378	Identifier	free		5108202	0					
ANR	5108379	ArgumentList	subtype		5108202	1					
ANR	5108380	Argument	subtype		5108202	0					
ANR	5108381	Identifier	subtype		5108202	0					
ANR	5108382	BreakStatement	break ;	224:3:5245:5250	5108202	1	True				
ANR	5108383	IdentifierDeclStatement	"int val = r_num_math ( NULL , r_str_word_get0 ( subtype , len - 1 ) ) ;"	226:2:5258:5321	5108202	7	True				
ANR	5108384	IdentifierDecl	"val = r_num_math ( NULL , r_str_word_get0 ( subtype , len - 1 ) )"		5108202	0					
ANR	5108385	IdentifierDeclType	int		5108202	0					
ANR	5108386	Identifier	val		5108202	1					
ANR	5108387	AssignmentExpression	"val = r_num_math ( NULL , r_str_word_get0 ( subtype , len - 1 ) )"		5108202	2		=			
ANR	5108388	Identifier	val		5108202	0					
ANR	5108389	CallExpression	"r_num_math ( NULL , r_str_word_get0 ( subtype , len - 1 ) )"		5108202	1					
ANR	5108390	Callee	r_num_math		5108202	0					
ANR	5108391	Identifier	r_num_math		5108202	0					
ANR	5108392	ArgumentList	NULL		5108202	1					
ANR	5108393	Argument	NULL		5108202	0					
ANR	5108394	Identifier	NULL		5108202	0					
ANR	5108395	Argument	"r_str_word_get0 ( subtype , len - 1 )"		5108202	1					
ANR	5108396	CallExpression	"r_str_word_get0 ( subtype , len - 1 )"		5108202	0					
ANR	5108397	Callee	r_str_word_get0		5108202	0					
ANR	5108398	Identifier	r_str_word_get0		5108202	0					
ANR	5108399	ArgumentList	subtype		5108202	1					
ANR	5108400	Argument	subtype		5108202	0					
ANR	5108401	Identifier	subtype		5108202	0					
ANR	5108402	Argument	len - 1		5108202	1					
ANR	5108403	AdditiveExpression	len - 1		5108202	0		-			
ANR	5108404	Identifier	len		5108202	0					
ANR	5108405	PrimaryExpression	1		5108202	1					
ANR	5108406	IdentifierDeclStatement	int arrsz = val ? val : 1 ;	227:2:5325:5350	5108202	8	True				
ANR	5108407	IdentifierDecl	arrsz = val ? val : 1		5108202	0					
ANR	5108408	IdentifierDeclType	int		5108202	0					
ANR	5108409	Identifier	arrsz		5108202	1					
ANR	5108410	AssignmentExpression	arrsz = val ? val : 1		5108202	2		=			
ANR	5108411	Identifier	arrsz		5108202	0					
ANR	5108412	ConditionalExpression	val ? val : 1		5108202	1					
ANR	5108413	Condition	val		5108202	0					
ANR	5108414	Identifier	val		5108202	0					
ANR	5108415	Identifier	val		5108202	1					
ANR	5108416	PrimaryExpression	1		5108202	2					
ANR	5108417	IfStatement	if ( ( typesize / 8 ) == offset )		5108202	9					
ANR	5108418	Condition	( typesize / 8 ) == offset	228:6:5358:5381	5108202	0	True				
ANR	5108419	EqualityExpression	( typesize / 8 ) == offset		5108202	0		==			
ANR	5108420	MultiplicativeExpression	typesize / 8		5108202	0		/			
ANR	5108421	Identifier	typesize		5108202	0					
ANR	5108422	PrimaryExpression	8		5108202	1					
ANR	5108423	Identifier	offset		5108202	1					
ANR	5108424	CompoundStatement		32:32:754:754	5108202	1					
ANR	5108425	ExpressionStatement	"res = r_str_newf ( ""%s.%s"" , type , name )"	229:3:5389:5427	5108202	0	True				
ANR	5108426	AssignmentExpression	"res = r_str_newf ( ""%s.%s"" , type , name )"		5108202	0		=			
ANR	5108427	Identifier	res		5108202	0					
ANR	5108428	CallExpression	"r_str_newf ( ""%s.%s"" , type , name )"		5108202	1					
ANR	5108429	Callee	r_str_newf		5108202	0					
ANR	5108430	Identifier	r_str_newf		5108202	0					
ANR	5108431	ArgumentList	"""%s.%s"""		5108202	1					
ANR	5108432	Argument	"""%s.%s"""		5108202	0					
ANR	5108433	PrimaryExpression	"""%s.%s"""		5108202	0					
ANR	5108434	Argument	type		5108202	1					
ANR	5108435	Identifier	type		5108202	0					
ANR	5108436	Argument	name		5108202	2					
ANR	5108437	Identifier	name		5108202	0					
ANR	5108438	ExpressionStatement	free ( subtype )	230:3:5432:5446	5108202	1	True				
ANR	5108439	CallExpression	free ( subtype )		5108202	0					
ANR	5108440	Callee	free		5108202	0					
ANR	5108441	Identifier	free		5108202	0					
ANR	5108442	ArgumentList	subtype		5108202	1					
ANR	5108443	Argument	subtype		5108202	0					
ANR	5108444	Identifier	subtype		5108202	0					
ANR	5108445	BreakStatement	break ;	231:3:5451:5456	5108202	2	True				
ANR	5108446	ExpressionStatement	prev_typesize = typesize	233:2:5464:5488	5108202	10	True				
ANR	5108447	AssignmentExpression	prev_typesize = typesize		5108202	0		=			
ANR	5108448	Identifier	prev_typesize		5108202	0					
ANR	5108449	Identifier	typesize		5108202	1					
ANR	5108450	ExpressionStatement	"typesize += r_type_get_bitsize ( TDB , subtype ) * arrsz"	234:2:5492:5545	5108202	11	True				
ANR	5108451	AssignmentExpression	"typesize += r_type_get_bitsize ( TDB , subtype ) * arrsz"		5108202	0		+=			
ANR	5108452	Identifier	typesize		5108202	0					
ANR	5108453	MultiplicativeExpression	"r_type_get_bitsize ( TDB , subtype ) * arrsz"		5108202	1		*			
ANR	5108454	CallExpression	"r_type_get_bitsize ( TDB , subtype )"		5108202	0					
ANR	5108455	Callee	r_type_get_bitsize		5108202	0					
ANR	5108456	Identifier	r_type_get_bitsize		5108202	0					
ANR	5108457	ArgumentList	TDB		5108202	1					
ANR	5108458	Argument	TDB		5108202	0					
ANR	5108459	Identifier	TDB		5108202	0					
ANR	5108460	Argument	subtype		5108202	1					
ANR	5108461	Identifier	subtype		5108202	0					
ANR	5108462	Identifier	arrsz		5108202	1					
ANR	5108463	IfStatement	if ( offset < ( typesize / 8 ) )		5108202	12					
ANR	5108464	Condition	offset < ( typesize / 8 )	236:6:5580:5602	5108202	0	True				
ANR	5108465	RelationalExpression	offset < ( typesize / 8 )		5108202	0		<			
ANR	5108466	Identifier	offset		5108202	0					
ANR	5108467	MultiplicativeExpression	typesize / 8		5108202	1		/			
ANR	5108468	Identifier	typesize		5108202	0					
ANR	5108469	PrimaryExpression	8		5108202	1					
ANR	5108470	CompoundStatement		41:3:980:1036	5108202	1					
ANR	5108471	IdentifierDeclStatement	"char * nested_type = ( char * ) r_str_word_get0 ( subtype , 0 ) ;"	237:3:5610:5666	5108202	0	True				
ANR	5108472	IdentifierDecl	"* nested_type = ( char * ) r_str_word_get0 ( subtype , 0 )"		5108202	0					
ANR	5108473	IdentifierDeclType	char *		5108202	0					
ANR	5108474	Identifier	nested_type		5108202	1					
ANR	5108475	AssignmentExpression	"* nested_type = ( char * ) r_str_word_get0 ( subtype , 0 )"		5108202	2		=			
ANR	5108476	Identifier	nested_type		5108202	0					
ANR	5108477	CastExpression	"( char * ) r_str_word_get0 ( subtype , 0 )"		5108202	1					
ANR	5108478	CastTarget	char *		5108202	0					
ANR	5108479	CallExpression	"r_str_word_get0 ( subtype , 0 )"		5108202	1					
ANR	5108480	Callee	r_str_word_get0		5108202	0					
ANR	5108481	Identifier	r_str_word_get0		5108202	0					
ANR	5108482	ArgumentList	subtype		5108202	1					
ANR	5108483	Argument	subtype		5108202	0					
ANR	5108484	Identifier	subtype		5108202	0					
ANR	5108485	Argument	0		5108202	1					
ANR	5108486	PrimaryExpression	0		5108202	0					
ANR	5108487	IfStatement	"if ( r_str_startswith ( nested_type , ""struct "" ) && ! r_str_endswith ( nested_type , "" *"" ) )"		5108202	1					
ANR	5108488	Condition	"r_str_startswith ( nested_type , ""struct "" ) && ! r_str_endswith ( nested_type , "" *"" )"	238:7:5675:5754	5108202	0	True				
ANR	5108489	AndExpression	"r_str_startswith ( nested_type , ""struct "" ) && ! r_str_endswith ( nested_type , "" *"" )"		5108202	0		&&			
ANR	5108490	CallExpression	"r_str_startswith ( nested_type , ""struct "" )"		5108202	0					
ANR	5108491	Callee	r_str_startswith		5108202	0					
ANR	5108492	Identifier	r_str_startswith		5108202	0					
ANR	5108493	ArgumentList	nested_type		5108202	1					
ANR	5108494	Argument	nested_type		5108202	0					
ANR	5108495	Identifier	nested_type		5108202	0					
ANR	5108496	Argument	"""struct """		5108202	1					
ANR	5108497	PrimaryExpression	"""struct """		5108202	0					
ANR	5108498	UnaryOperationExpression	"! r_str_endswith ( nested_type , "" *"" )"		5108202	1					
ANR	5108499	UnaryOperator	!		5108202	0					
ANR	5108500	CallExpression	"r_str_endswith ( nested_type , "" *"" )"		5108202	1					
ANR	5108501	Callee	r_str_endswith		5108202	0					
ANR	5108502	Identifier	r_str_endswith		5108202	0					
ANR	5108503	ArgumentList	nested_type		5108202	1					
ANR	5108504	Argument	nested_type		5108202	0					
ANR	5108505	Identifier	nested_type		5108202	0					
ANR	5108506	Argument	""" *"""		5108202	1					
ANR	5108507	PrimaryExpression	""" *"""		5108202	0					
ANR	5108508	CompoundStatement		49:4:1293:1383	5108202	1					
ANR	5108509	ExpressionStatement	"len = r_str_split ( nested_type , ' ' )"	239:4:5763:5799	5108202	0	True				
ANR	5108510	AssignmentExpression	"len = r_str_split ( nested_type , ' ' )"		5108202	0		=			
ANR	5108511	Identifier	len		5108202	0					
ANR	5108512	CallExpression	"r_str_split ( nested_type , ' ' )"		5108202	1					
ANR	5108513	Callee	r_str_split		5108202	0					
ANR	5108514	Identifier	r_str_split		5108202	0					
ANR	5108515	ArgumentList	nested_type		5108202	1					
ANR	5108516	Argument	nested_type		5108202	0					
ANR	5108517	Identifier	nested_type		5108202	0					
ANR	5108518	Argument	' '		5108202	1					
ANR	5108519	PrimaryExpression	' '		5108202	0					
ANR	5108520	IfStatement	if ( len < 2 )		5108202	1					
ANR	5108521	Condition	len < 2	240:8:5809:5815	5108202	0	True				
ANR	5108522	RelationalExpression	len < 2		5108202	0		<			
ANR	5108523	Identifier	len		5108202	0					
ANR	5108524	PrimaryExpression	2		5108202	1					
ANR	5108525	CompoundStatement		44:17:1188:1188	5108202	1					
ANR	5108526	ExpressionStatement	free ( subtype )	241:5:5825:5839	5108202	0	True				
ANR	5108527	CallExpression	free ( subtype )		5108202	0					
ANR	5108528	Callee	free		5108202	0					
ANR	5108529	Identifier	free		5108202	0					
ANR	5108530	ArgumentList	subtype		5108202	1					
ANR	5108531	Argument	subtype		5108202	0					
ANR	5108532	Identifier	subtype		5108202	0					
ANR	5108533	BreakStatement	break ;	242:5:5846:5851	5108202	1	True				
ANR	5108534	ExpressionStatement	"nested_type = ( char * ) r_str_word_get0 ( nested_type , 1 )"	244:4:5863:5917	5108202	2	True				
ANR	5108535	AssignmentExpression	"nested_type = ( char * ) r_str_word_get0 ( nested_type , 1 )"		5108202	0		=			
ANR	5108536	Identifier	nested_type		5108202	0					
ANR	5108537	CastExpression	"( char * ) r_str_word_get0 ( nested_type , 1 )"		5108202	1					
ANR	5108538	CastTarget	char *		5108202	0					
ANR	5108539	CallExpression	"r_str_word_get0 ( nested_type , 1 )"		5108202	1					
ANR	5108540	Callee	r_str_word_get0		5108202	0					
ANR	5108541	Identifier	r_str_word_get0		5108202	0					
ANR	5108542	ArgumentList	nested_type		5108202	1					
ANR	5108543	Argument	nested_type		5108202	0					
ANR	5108544	Identifier	nested_type		5108202	0					
ANR	5108545	Argument	1		5108202	1					
ANR	5108546	PrimaryExpression	1		5108202	0					
ANR	5108547	IdentifierDeclStatement	"char * nested_res = r_type_get_struct_memb ( TDB , nested_type , offset - ( prev_typesize / 8 ) ) ;"	245:4:5923:6013	5108202	3	True				
ANR	5108548	IdentifierDecl	"* nested_res = r_type_get_struct_memb ( TDB , nested_type , offset - ( prev_typesize / 8 ) )"		5108202	0					
ANR	5108549	IdentifierDeclType	char *		5108202	0					
ANR	5108550	Identifier	nested_res		5108202	1					
ANR	5108551	AssignmentExpression	"* nested_res = r_type_get_struct_memb ( TDB , nested_type , offset - ( prev_typesize / 8 ) )"		5108202	2		=			
ANR	5108552	Identifier	nested_res		5108202	0					
ANR	5108553	CallExpression	"r_type_get_struct_memb ( TDB , nested_type , offset - ( prev_typesize / 8 ) )"		5108202	1					
ANR	5108554	Callee	r_type_get_struct_memb		5108202	0					
ANR	5108555	Identifier	r_type_get_struct_memb		5108202	0					
ANR	5108556	ArgumentList	TDB		5108202	1					
ANR	5108557	Argument	TDB		5108202	0					
ANR	5108558	Identifier	TDB		5108202	0					
ANR	5108559	Argument	nested_type		5108202	1					
ANR	5108560	Identifier	nested_type		5108202	0					
ANR	5108561	Argument	offset - ( prev_typesize / 8 )		5108202	2					
ANR	5108562	AdditiveExpression	offset - ( prev_typesize / 8 )		5108202	0		-			
ANR	5108563	Identifier	offset		5108202	0					
ANR	5108564	MultiplicativeExpression	prev_typesize / 8		5108202	1		/			
ANR	5108565	Identifier	prev_typesize		5108202	0					
ANR	5108566	PrimaryExpression	8		5108202	1					
ANR	5108567	IfStatement	if ( nested_res )		5108202	4					
ANR	5108568	Condition	nested_res	246:8:6023:6032	5108202	0	True				
ANR	5108569	Identifier	nested_res		5108202	0					
ANR	5108570	CompoundStatement		50:20:1405:1405	5108202	1					
ANR	5108571	ExpressionStatement	"len = r_str_split ( nested_res , '.' )"	247:5:6042:6076	5108202	0	True				
ANR	5108572	AssignmentExpression	"len = r_str_split ( nested_res , '.' )"		5108202	0		=			
ANR	5108573	Identifier	len		5108202	0					
ANR	5108574	CallExpression	"r_str_split ( nested_res , '.' )"		5108202	1					
ANR	5108575	Callee	r_str_split		5108202	0					
ANR	5108576	Identifier	r_str_split		5108202	0					
ANR	5108577	ArgumentList	nested_res		5108202	1					
ANR	5108578	Argument	nested_res		5108202	0					
ANR	5108579	Identifier	nested_res		5108202	0					
ANR	5108580	Argument	'.'		5108202	1					
ANR	5108581	PrimaryExpression	'.'		5108202	0					
ANR	5108582	ExpressionStatement	"res = r_str_newf ( ""%s.%s.%s"" , type , name , r_str_word_get0 ( nested_res , len - 1 ) )"	248:5:6083:6163	5108202	1	True				
ANR	5108583	AssignmentExpression	"res = r_str_newf ( ""%s.%s.%s"" , type , name , r_str_word_get0 ( nested_res , len - 1 ) )"		5108202	0		=			
ANR	5108584	Identifier	res		5108202	0					
ANR	5108585	CallExpression	"r_str_newf ( ""%s.%s.%s"" , type , name , r_str_word_get0 ( nested_res , len - 1 ) )"		5108202	1					
ANR	5108586	Callee	r_str_newf		5108202	0					
ANR	5108587	Identifier	r_str_newf		5108202	0					
ANR	5108588	ArgumentList	"""%s.%s.%s"""		5108202	1					
ANR	5108589	Argument	"""%s.%s.%s"""		5108202	0					
ANR	5108590	PrimaryExpression	"""%s.%s.%s"""		5108202	0					
ANR	5108591	Argument	type		5108202	1					
ANR	5108592	Identifier	type		5108202	0					
ANR	5108593	Argument	name		5108202	2					
ANR	5108594	Identifier	name		5108202	0					
ANR	5108595	Argument	"r_str_word_get0 ( nested_res , len - 1 )"		5108202	3					
ANR	5108596	CallExpression	"r_str_word_get0 ( nested_res , len - 1 )"		5108202	0					
ANR	5108597	Callee	r_str_word_get0		5108202	0					
ANR	5108598	Identifier	r_str_word_get0		5108202	0					
ANR	5108599	ArgumentList	nested_res		5108202	1					
ANR	5108600	Argument	nested_res		5108202	0					
ANR	5108601	Identifier	nested_res		5108202	0					
ANR	5108602	Argument	len - 1		5108202	1					
ANR	5108603	AdditiveExpression	len - 1		5108202	0		-			
ANR	5108604	Identifier	len		5108202	0					
ANR	5108605	PrimaryExpression	1		5108202	1					
ANR	5108606	ExpressionStatement	free ( nested_res )	249:5:6170:6187	5108202	2	True				
ANR	5108607	CallExpression	free ( nested_res )		5108202	0					
ANR	5108608	Callee	free		5108202	0					
ANR	5108609	Identifier	free		5108202	0					
ANR	5108610	ArgumentList	nested_res		5108202	1					
ANR	5108611	Argument	nested_res		5108202	0					
ANR	5108612	Identifier	nested_res		5108202	0					
ANR	5108613	ExpressionStatement	free ( subtype )	250:5:6194:6208	5108202	3	True				
ANR	5108614	CallExpression	free ( subtype )		5108202	0					
ANR	5108615	Callee	free		5108202	0					
ANR	5108616	Identifier	free		5108202	0					
ANR	5108617	ArgumentList	subtype		5108202	1					
ANR	5108618	Argument	subtype		5108202	0					
ANR	5108619	Identifier	subtype		5108202	0					
ANR	5108620	BreakStatement	break ;	251:5:6215:6220	5108202	4	True				
ANR	5108621	ExpressionStatement	free ( subtype )	255:2:6239:6253	5108202	13	True				
ANR	5108622	CallExpression	free ( subtype )		5108202	0					
ANR	5108623	Callee	free		5108202	0					
ANR	5108624	Identifier	free		5108202	0					
ANR	5108625	ArgumentList	subtype		5108202	1					
ANR	5108626	Argument	subtype		5108202	0					
ANR	5108627	Identifier	subtype		5108202	0					
ANR	5108628	ExpressionStatement	free ( members )	257:1:6259:6273	5108202	8	True				
ANR	5108629	CallExpression	free ( members )		5108202	0					
ANR	5108630	Callee	free		5108202	0					
ANR	5108631	Identifier	free		5108202	0					
ANR	5108632	ArgumentList	members		5108202	1					
ANR	5108633	Argument	members		5108202	0					
ANR	5108634	Identifier	members		5108202	0					
ANR	5108635	ReturnStatement	return res ;	258:1:6276:6286	5108202	9	True				
ANR	5108636	Identifier	res		5108202	0					
ANR	5108637	ReturnType	R_API char *		5108202	1					
ANR	5108638	Identifier	r_type_get_struct_memb		5108202	2					
ANR	5108639	ParameterList	"Sdb * TDB , const char * type , int offset"		5108202	3					
ANR	5108640	Parameter	Sdb * TDB	197:35:4589:4596	5108202	0	True				
ANR	5108641	ParameterType	Sdb *		5108202	0					
ANR	5108642	Identifier	TDB		5108202	1					
ANR	5108643	Parameter	const char * type	197:45:4599:4614	5108202	1	True				
ANR	5108644	ParameterType	const char *		5108202	0					
ANR	5108645	Identifier	type		5108202	1					
ANR	5108646	Parameter	int offset	197:63:4617:4626	5108202	2	True				
ANR	5108647	ParameterType	int		5108202	0					
ANR	5108648	Identifier	offset		5108202	1					
ANR	5108649	CFGEntryNode	ENTRY		5108202		True				
ANR	5108650	CFGExitNode	EXIT		5108202		True				
ANR	5108651	Symbol	arrsz		5108202						
ANR	5108652	Symbol	typesize		5108202						
ANR	5108653	Symbol	r_str_newf		5108202						
ANR	5108654	Symbol	type		5108202						
ANR	5108655	Symbol	r_num_math		5108202						
ANR	5108656	Symbol	TDB		5108202						
ANR	5108657	Symbol	len		5108202						
ANR	5108658	Symbol	subtype		5108202						
ANR	5108659	Symbol	members		5108202						
ANR	5108660	Symbol	nested_res		5108202						
ANR	5108661	Symbol	r_str_endswith		5108202						
ANR	5108662	Symbol	sdb_fmt		5108202						
ANR	5108663	Symbol	r_type_get_struct_memb		5108202						
ANR	5108664	Symbol	val		5108202						
ANR	5108665	Symbol	r_str_startswith		5108202						
ANR	5108666	Symbol	prev_typesize		5108202						
ANR	5108667	Symbol	res		5108202						
ANR	5108668	Symbol	NULL		5108202						
ANR	5108669	Symbol	offset		5108202						
ANR	5108670	Symbol	r_type_get_bitsize		5108202						
ANR	5108671	Symbol	query		5108202						
ANR	5108672	Symbol	i		5108202						
ANR	5108673	Symbol	sdb_get		5108202						
ANR	5108674	Symbol	r_str_word_get0		5108202						
ANR	5108675	Symbol	nested_type		5108202						
ANR	5108676	Symbol	nargs		5108202						
ANR	5108677	Symbol	r_str_split		5108202						
ANR	5108678	Symbol	name		5108202						
ANR	5108679	Function	r_type_get_by_offset	261:0:6291:6773							
ANR	5108680	FunctionDef	"r_type_get_by_offset (Sdb * TDB , ut64 offset)"		5108679	0					
ANR	5108681	CompoundStatement		261:57:6348:6773	5108679	0					
ANR	5108682	IdentifierDeclStatement	RList * offtypes = r_list_new ( ) ;	262:1:6351:6382	5108679	0	True				
ANR	5108683	IdentifierDecl	* offtypes = r_list_new ( )		5108679	0					
ANR	5108684	IdentifierDeclType	RList *		5108679	0					
ANR	5108685	Identifier	offtypes		5108679	1					
ANR	5108686	AssignmentExpression	* offtypes = r_list_new ( )		5108679	2		=			
ANR	5108687	Identifier	offtypes		5108679	0					
ANR	5108688	CallExpression	r_list_new ( )		5108679	1					
ANR	5108689	Callee	r_list_new		5108679	0					
ANR	5108690	Identifier	r_list_new		5108679	0					
ANR	5108691	ArgumentList			5108679	1					
ANR	5108692	IdentifierDeclStatement	"SdbList * ls = sdb_foreach_list ( TDB , true ) ;"	263:1:6385:6427	5108679	1	True				
ANR	5108693	IdentifierDecl	"* ls = sdb_foreach_list ( TDB , true )"		5108679	0					
ANR	5108694	IdentifierDeclType	SdbList *		5108679	0					
ANR	5108695	Identifier	ls		5108679	1					
ANR	5108696	AssignmentExpression	"* ls = sdb_foreach_list ( TDB , true )"		5108679	2		=			
ANR	5108697	Identifier	ls		5108679	0					
ANR	5108698	CallExpression	"sdb_foreach_list ( TDB , true )"		5108679	1					
ANR	5108699	Callee	sdb_foreach_list		5108679	0					
ANR	5108700	Identifier	sdb_foreach_list		5108679	0					
ANR	5108701	ArgumentList	TDB		5108679	1					
ANR	5108702	Argument	TDB		5108679	0					
ANR	5108703	Identifier	TDB		5108679	0					
ANR	5108704	Argument	true		5108679	1					
ANR	5108705	Identifier	true		5108679	0					
ANR	5108706	IdentifierDeclStatement	SdbListIter * lsi ;	264:1:6430:6446	5108679	2	True				
ANR	5108707	IdentifierDecl	* lsi		5108679	0					
ANR	5108708	IdentifierDeclType	SdbListIter *		5108679	0					
ANR	5108709	Identifier	lsi		5108679	1					
ANR	5108710	IdentifierDeclStatement	SdbKv * kv ;	265:1:6449:6458	5108679	3	True				
ANR	5108711	IdentifierDecl	* kv		5108679	0					
ANR	5108712	IdentifierDeclType	SdbKv *		5108679	0					
ANR	5108713	Identifier	kv		5108679	1					
ANR	5108714	Statement	ls_foreach	266:1:6461:6470	5108679	4	True				
ANR	5108715	Statement	(	266:12:6472:6472	5108679	5	True				
ANR	5108716	Statement	ls	266:13:6473:6474	5108679	6	True				
ANR	5108717	Statement	","	266:15:6475:6475	5108679	7	True				
ANR	5108718	Statement	lsi	266:17:6477:6479	5108679	8	True				
ANR	5108719	Statement	","	266:20:6480:6480	5108679	9	True				
ANR	5108720	Statement	kv	266:22:6482:6483	5108679	10	True				
ANR	5108721	Statement	)	266:24:6484:6484	5108679	11	True				
ANR	5108722	CompoundStatement		6:26:137:137	5108679	12					
ANR	5108723	IfStatement	"if ( ! strncmp ( sdbkv_value ( kv ) , ""struct"" , 6 ) && strncmp ( sdbkv_key ( kv ) , ""struct."" , 7 ) )"		5108679	0					
ANR	5108724	Condition	"! strncmp ( sdbkv_value ( kv ) , ""struct"" , 6 ) && strncmp ( sdbkv_key ( kv ) , ""struct."" , 7 )"	268:6:6524:6605	5108679	0	True				
ANR	5108725	AndExpression	"! strncmp ( sdbkv_value ( kv ) , ""struct"" , 6 ) && strncmp ( sdbkv_key ( kv ) , ""struct."" , 7 )"		5108679	0		&&			
ANR	5108726	UnaryOperationExpression	"! strncmp ( sdbkv_value ( kv ) , ""struct"" , 6 )"		5108679	0					
ANR	5108727	UnaryOperator	!		5108679	0					
ANR	5108728	CallExpression	"strncmp ( sdbkv_value ( kv ) , ""struct"" , 6 )"		5108679	1					
ANR	5108729	Callee	strncmp		5108679	0					
ANR	5108730	Identifier	strncmp		5108679	0					
ANR	5108731	ArgumentList	sdbkv_value ( kv )		5108679	1					
ANR	5108732	Argument	sdbkv_value ( kv )		5108679	0					
ANR	5108733	CallExpression	sdbkv_value ( kv )		5108679	0					
ANR	5108734	Callee	sdbkv_value		5108679	0					
ANR	5108735	Identifier	sdbkv_value		5108679	0					
ANR	5108736	ArgumentList	kv		5108679	1					
ANR	5108737	Argument	kv		5108679	0					
ANR	5108738	Identifier	kv		5108679	0					
ANR	5108739	Argument	"""struct"""		5108679	1					
ANR	5108740	PrimaryExpression	"""struct"""		5108679	0					
ANR	5108741	Argument	6		5108679	2					
ANR	5108742	PrimaryExpression	6		5108679	0					
ANR	5108743	CallExpression	"strncmp ( sdbkv_key ( kv ) , ""struct."" , 7 )"		5108679	1					
ANR	5108744	Callee	strncmp		5108679	0					
ANR	5108745	Identifier	strncmp		5108679	0					
ANR	5108746	ArgumentList	sdbkv_key ( kv )		5108679	1					
ANR	5108747	Argument	sdbkv_key ( kv )		5108679	0					
ANR	5108748	CallExpression	sdbkv_key ( kv )		5108679	0					
ANR	5108749	Callee	sdbkv_key		5108679	0					
ANR	5108750	Identifier	sdbkv_key		5108679	0					
ANR	5108751	ArgumentList	kv		5108679	1					
ANR	5108752	Argument	kv		5108679	0					
ANR	5108753	Identifier	kv		5108679	0					
ANR	5108754	Argument	"""struct."""		5108679	1					
ANR	5108755	PrimaryExpression	"""struct."""		5108679	0					
ANR	5108756	Argument	7		5108679	2					
ANR	5108757	PrimaryExpression	7		5108679	0					
ANR	5108758	CompoundStatement		9:3:264:328	5108679	1					
ANR	5108759	IdentifierDeclStatement	"char * res = r_type_get_struct_memb ( TDB , sdbkv_key ( kv ) , offset ) ;"	269:3:6613:6677	5108679	0	True				
ANR	5108760	IdentifierDecl	"* res = r_type_get_struct_memb ( TDB , sdbkv_key ( kv ) , offset )"		5108679	0					
ANR	5108761	IdentifierDeclType	char *		5108679	0					
ANR	5108762	Identifier	res		5108679	1					
ANR	5108763	AssignmentExpression	"* res = r_type_get_struct_memb ( TDB , sdbkv_key ( kv ) , offset )"		5108679	2		=			
ANR	5108764	Identifier	res		5108679	0					
ANR	5108765	CallExpression	"r_type_get_struct_memb ( TDB , sdbkv_key ( kv ) , offset )"		5108679	1					
ANR	5108766	Callee	r_type_get_struct_memb		5108679	0					
ANR	5108767	Identifier	r_type_get_struct_memb		5108679	0					
ANR	5108768	ArgumentList	TDB		5108679	1					
ANR	5108769	Argument	TDB		5108679	0					
ANR	5108770	Identifier	TDB		5108679	0					
ANR	5108771	Argument	sdbkv_key ( kv )		5108679	1					
ANR	5108772	CallExpression	sdbkv_key ( kv )		5108679	0					
ANR	5108773	Callee	sdbkv_key		5108679	0					
ANR	5108774	Identifier	sdbkv_key		5108679	0					
ANR	5108775	ArgumentList	kv		5108679	1					
ANR	5108776	Argument	kv		5108679	0					
ANR	5108777	Identifier	kv		5108679	0					
ANR	5108778	Argument	offset		5108679	2					
ANR	5108779	Identifier	offset		5108679	0					
ANR	5108780	IfStatement	if ( res )		5108679	1					
ANR	5108781	Condition	res	270:7:6686:6688	5108679	0	True				
ANR	5108782	Identifier	res		5108679	0					
ANR	5108783	CompoundStatement		10:12:342:342	5108679	1					
ANR	5108784	ExpressionStatement	"r_list_append ( offtypes , res )"	271:4:6697:6726	5108679	0	True				
ANR	5108785	CallExpression	"r_list_append ( offtypes , res )"		5108679	0					
ANR	5108786	Callee	r_list_append		5108679	0					
ANR	5108787	Identifier	r_list_append		5108679	0					
ANR	5108788	ArgumentList	offtypes		5108679	1					
ANR	5108789	Argument	offtypes		5108679	0					
ANR	5108790	Identifier	offtypes		5108679	0					
ANR	5108791	Argument	res		5108679	1					
ANR	5108792	Identifier	res		5108679	0					
ANR	5108793	ExpressionStatement	ls_free ( ls )	275:1:6741:6753	5108679	13	True				
ANR	5108794	CallExpression	ls_free ( ls )		5108679	0					
ANR	5108795	Callee	ls_free		5108679	0					
ANR	5108796	Identifier	ls_free		5108679	0					
ANR	5108797	ArgumentList	ls		5108679	1					
ANR	5108798	Argument	ls		5108679	0					
ANR	5108799	Identifier	ls		5108679	0					
ANR	5108800	ReturnStatement	return offtypes ;	276:1:6756:6771	5108679	14	True				
ANR	5108801	Identifier	offtypes		5108679	0					
ANR	5108802	ReturnType	R_API RList *		5108679	1					
ANR	5108803	Identifier	r_type_get_by_offset		5108679	2					
ANR	5108804	ParameterList	"Sdb * TDB , ut64 offset"		5108679	3					
ANR	5108805	Parameter	Sdb * TDB	261:34:6325:6332	5108679	0	True				
ANR	5108806	ParameterType	Sdb *		5108679	0					
ANR	5108807	Identifier	TDB		5108679	1					
ANR	5108808	Parameter	ut64 offset	261:44:6335:6345	5108679	1	True				
ANR	5108809	ParameterType	ut64		5108679	0					
ANR	5108810	Identifier	offset		5108679	1					
ANR	5108811	CFGEntryNode	ENTRY		5108679		True				
ANR	5108812	CFGExitNode	EXIT		5108679		True				
ANR	5108813	Symbol	res		5108679						
ANR	5108814	Symbol	lsi		5108679						
ANR	5108815	Symbol	offset		5108679						
ANR	5108816	Symbol	sdbkv_key		5108679						
ANR	5108817	Symbol	ls		5108679						
ANR	5108818	Symbol	sdb_foreach_list		5108679						
ANR	5108819	Symbol	kv		5108679						
ANR	5108820	Symbol	sdbkv_value		5108679						
ANR	5108821	Symbol	offtypes		5108679						
ANR	5108822	Symbol	strncmp		5108679						
ANR	5108823	Symbol	TDB		5108679						
ANR	5108824	Symbol	true		5108679						
ANR	5108825	Symbol	r_list_new		5108679						
ANR	5108826	Symbol	r_type_get_struct_memb		5108679						
ANR	5108827	Function	r_type_link_at	279:0:6776:7562							
ANR	5108828	FunctionDef	"r_type_link_at (Sdb * TDB , ut64 addr)"		5108827	0					
ANR	5108829	CompoundStatement		279:49:6825:7562	5108827	0					
ANR	5108830	IdentifierDeclStatement	char * res = NULL ;	280:1:6828:6844	5108827	0	True				
ANR	5108831	IdentifierDecl	* res = NULL		5108827	0					
ANR	5108832	IdentifierDeclType	char *		5108827	0					
ANR	5108833	Identifier	res		5108827	1					
ANR	5108834	AssignmentExpression	* res = NULL		5108827	2		=			
ANR	5108835	Identifier	NULL		5108827	0					
ANR	5108836	Identifier	NULL		5108827	1					
ANR	5108837	IfStatement	if ( addr == UT64_MAX )		5108827	1					
ANR	5108838	Condition	addr == UT64_MAX	282:5:6852:6867	5108827	0	True				
ANR	5108839	EqualityExpression	addr == UT64_MAX		5108827	0		==			
ANR	5108840	Identifier	addr		5108827	0					
ANR	5108841	Identifier	UT64_MAX		5108827	1					
ANR	5108842	CompoundStatement		4:23:44:44	5108827	1					
ANR	5108843	ReturnStatement	return NULL ;	283:2:6874:6885	5108827	0	True				
ANR	5108844	Identifier	NULL		5108827	0					
ANR	5108845	Statement	char	285:1:6891:6894	5108827	2	True				
ANR	5108846	Statement	*	285:5:6895:6895	5108827	3	True				
ANR	5108847	Statement	query	285:7:6897:6901	5108827	4	True				
ANR	5108848	Statement	=	285:13:6903:6903	5108827	5	True				
ANR	5108849	Statement	sdb_fmt	285:15:6905:6911	5108827	6	True				
ANR	5108850	Statement	(	285:23:6913:6913	5108827	7	True				
ANR	5108851	Statement	"""link.%08"""	285:24:6914:6923	5108827	8	True				
ANR	5108852	Statement	PFMT64x	285:34:6924:6930	5108827	9	True				
ANR	5108853	Statement	","	285:41:6931:6931	5108827	10	True				
ANR	5108854	Statement	addr	285:43:6933:6936	5108827	11	True				
ANR	5108855	Statement	)	285:47:6937:6937	5108827	12	True				
ANR	5108856	ExpressionStatement		285:48:6938:6938	5108827	13	True				
ANR	5108857	ExpressionStatement	"res = sdb_get ( TDB , query , 0 )"	286:1:6941:6970	5108827	14	True				
ANR	5108858	AssignmentExpression	"res = sdb_get ( TDB , query , 0 )"		5108827	0		=			
ANR	5108859	Identifier	res		5108827	0					
ANR	5108860	CallExpression	"sdb_get ( TDB , query , 0 )"		5108827	1					
ANR	5108861	Callee	sdb_get		5108827	0					
ANR	5108862	Identifier	sdb_get		5108827	0					
ANR	5108863	ArgumentList	TDB		5108827	1					
ANR	5108864	Argument	TDB		5108827	0					
ANR	5108865	Identifier	TDB		5108827	0					
ANR	5108866	Argument	query		5108827	1					
ANR	5108867	Identifier	query		5108827	0					
ANR	5108868	Argument	0		5108827	2					
ANR	5108869	PrimaryExpression	0		5108827	0					
ANR	5108870	IfStatement	if ( ! res )		5108827	15					
ANR	5108871	Condition	! res	287:5:6977:6980	5108827	0	True				
ANR	5108872	UnaryOperationExpression	! res		5108827	0					
ANR	5108873	UnaryOperator	!		5108827	0					
ANR	5108874	Identifier	res		5108827	1					
ANR	5108875	CompoundStatement		12:2:249:297	5108827	1					
ANR	5108876	IdentifierDeclStatement	SdbKv * kv ;	288:2:7037:7046	5108827	0	True				
ANR	5108877	IdentifierDecl	* kv		5108827	0					
ANR	5108878	IdentifierDeclType	SdbKv *		5108827	0					
ANR	5108879	Identifier	kv		5108827	1					
ANR	5108880	IdentifierDeclStatement	SdbListIter * sdb_iter ;	289:2:7050:7071	5108827	1	True				
ANR	5108881	IdentifierDecl	* sdb_iter		5108827	0					
ANR	5108882	IdentifierDeclType	SdbListIter *		5108827	0					
ANR	5108883	Identifier	sdb_iter		5108827	1					
ANR	5108884	IdentifierDeclStatement	"SdbList * sdb_list = sdb_foreach_list ( TDB , true ) ;"	290:2:7075:7123	5108827	2	True				
ANR	5108885	IdentifierDecl	"* sdb_list = sdb_foreach_list ( TDB , true )"		5108827	0					
ANR	5108886	IdentifierDeclType	SdbList *		5108827	0					
ANR	5108887	Identifier	sdb_list		5108827	1					
ANR	5108888	AssignmentExpression	"* sdb_list = sdb_foreach_list ( TDB , true )"		5108827	2		=			
ANR	5108889	Identifier	sdb_list		5108827	0					
ANR	5108890	CallExpression	"sdb_foreach_list ( TDB , true )"		5108827	1					
ANR	5108891	Callee	sdb_foreach_list		5108827	0					
ANR	5108892	Identifier	sdb_foreach_list		5108827	0					
ANR	5108893	ArgumentList	TDB		5108827	1					
ANR	5108894	Argument	TDB		5108827	0					
ANR	5108895	Identifier	TDB		5108827	0					
ANR	5108896	Argument	true		5108827	1					
ANR	5108897	Identifier	true		5108827	0					
ANR	5108898	Statement	ls_foreach	291:2:7127:7136	5108827	3	True				
ANR	5108899	Statement	(	291:13:7138:7138	5108827	4	True				
ANR	5108900	Statement	sdb_list	291:14:7139:7146	5108827	5	True				
ANR	5108901	Statement	","	291:22:7147:7147	5108827	6	True				
ANR	5108902	Statement	sdb_iter	291:24:7149:7156	5108827	7	True				
ANR	5108903	Statement	","	291:32:7157:7157	5108827	8	True				
ANR	5108904	Statement	kv	291:34:7159:7160	5108827	9	True				
ANR	5108905	Statement	)	291:36:7161:7161	5108827	10	True				
ANR	5108906	CompoundStatement		19:3:548:598	5108827	11					
ANR	5108907	IfStatement	"if ( strncmp ( sdbkv_key ( kv ) , ""link."" , strlen ( ""link."" ) ) )"		5108827	0					
ANR	5108908	Condition	"strncmp ( sdbkv_key ( kv ) , ""link."" , strlen ( ""link."" ) )"	292:7:7172:7222	5108827	0	True				
ANR	5108909	CallExpression	"strncmp ( sdbkv_key ( kv ) , ""link."" , strlen ( ""link."" ) )"		5108827	0					
ANR	5108910	Callee	strncmp		5108827	0					
ANR	5108911	Identifier	strncmp		5108827	0					
ANR	5108912	ArgumentList	sdbkv_key ( kv )		5108827	1					
ANR	5108913	Argument	sdbkv_key ( kv )		5108827	0					
ANR	5108914	CallExpression	sdbkv_key ( kv )		5108827	0					
ANR	5108915	Callee	sdbkv_key		5108827	0					
ANR	5108916	Identifier	sdbkv_key		5108827	0					
ANR	5108917	ArgumentList	kv		5108827	1					
ANR	5108918	Argument	kv		5108827	0					
ANR	5108919	Identifier	kv		5108827	0					
ANR	5108920	Argument	"""link."""		5108827	1					
ANR	5108921	PrimaryExpression	"""link."""		5108827	0					
ANR	5108922	Argument	"strlen ( ""link."" )"		5108827	2					
ANR	5108923	CallExpression	"strlen ( ""link."" )"		5108827	0					
ANR	5108924	Callee	strlen		5108827	0					
ANR	5108925	Identifier	strlen		5108827	0					
ANR	5108926	ArgumentList	"""link."""		5108827	1					
ANR	5108927	Argument	"""link."""		5108827	0					
ANR	5108928	PrimaryExpression	"""link."""		5108827	0					
ANR	5108929	CompoundStatement		14:60:399:399	5108827	1					
ANR	5108930	ContinueStatement	continue ;	293:4:7231:7239	5108827	0	True				
ANR	5108931	IdentifierDeclStatement	"const char * linkptr = sdb_fmt ( ""0x%s"" , sdbkv_key ( kv ) + strlen ( ""link."" ) ) ;"	295:3:7249:7322	5108827	1	True				
ANR	5108932	IdentifierDecl	"* linkptr = sdb_fmt ( ""0x%s"" , sdbkv_key ( kv ) + strlen ( ""link."" ) )"		5108827	0					
ANR	5108933	IdentifierDeclType	const char *		5108827	0					
ANR	5108934	Identifier	linkptr		5108827	1					
ANR	5108935	AssignmentExpression	"* linkptr = sdb_fmt ( ""0x%s"" , sdbkv_key ( kv ) + strlen ( ""link."" ) )"		5108827	2		=			
ANR	5108936	Identifier	linkptr		5108827	0					
ANR	5108937	CallExpression	"sdb_fmt ( ""0x%s"" , sdbkv_key ( kv ) + strlen ( ""link."" ) )"		5108827	1					
ANR	5108938	Callee	sdb_fmt		5108827	0					
ANR	5108939	Identifier	sdb_fmt		5108827	0					
ANR	5108940	ArgumentList	"""0x%s"""		5108827	1					
ANR	5108941	Argument	"""0x%s"""		5108827	0					
ANR	5108942	PrimaryExpression	"""0x%s"""		5108827	0					
ANR	5108943	Argument	"sdbkv_key ( kv ) + strlen ( ""link."" )"		5108827	1					
ANR	5108944	AdditiveExpression	"sdbkv_key ( kv ) + strlen ( ""link."" )"		5108827	0		+			
ANR	5108945	CallExpression	sdbkv_key ( kv )		5108827	0					
ANR	5108946	Callee	sdbkv_key		5108827	0					
ANR	5108947	Identifier	sdbkv_key		5108827	0					
ANR	5108948	ArgumentList	kv		5108827	1					
ANR	5108949	Argument	kv		5108827	0					
ANR	5108950	Identifier	kv		5108827	0					
ANR	5108951	CallExpression	"strlen ( ""link."" )"		5108827	1					
ANR	5108952	Callee	strlen		5108827	0					
ANR	5108953	Identifier	strlen		5108827	0					
ANR	5108954	ArgumentList	"""link."""		5108827	1					
ANR	5108955	Argument	"""link."""		5108827	0					
ANR	5108956	PrimaryExpression	"""link."""		5108827	0					
ANR	5108957	IdentifierDeclStatement	"ut64 baseaddr = r_num_math ( NULL , linkptr ) ;"	296:3:7327:7369	5108827	2	True				
ANR	5108958	IdentifierDecl	"baseaddr = r_num_math ( NULL , linkptr )"		5108827	0					
ANR	5108959	IdentifierDeclType	ut64		5108827	0					
ANR	5108960	Identifier	baseaddr		5108827	1					
ANR	5108961	AssignmentExpression	"baseaddr = r_num_math ( NULL , linkptr )"		5108827	2		=			
ANR	5108962	Identifier	baseaddr		5108827	0					
ANR	5108963	CallExpression	"r_num_math ( NULL , linkptr )"		5108827	1					
ANR	5108964	Callee	r_num_math		5108827	0					
ANR	5108965	Identifier	r_num_math		5108827	0					
ANR	5108966	ArgumentList	NULL		5108827	1					
ANR	5108967	Argument	NULL		5108827	0					
ANR	5108968	Identifier	NULL		5108827	0					
ANR	5108969	Argument	linkptr		5108827	1					
ANR	5108970	Identifier	linkptr		5108827	0					
ANR	5108971	IdentifierDeclStatement	int delta = ( addr > baseaddr ) ? addr - baseaddr : - 1 ;	297:3:7374:7424	5108827	3	True				
ANR	5108972	IdentifierDecl	delta = ( addr > baseaddr ) ? addr - baseaddr : - 1		5108827	0					
ANR	5108973	IdentifierDeclType	int		5108827	0					
ANR	5108974	Identifier	delta		5108827	1					
ANR	5108975	AssignmentExpression	delta = ( addr > baseaddr ) ? addr - baseaddr : - 1		5108827	2		=			
ANR	5108976	Identifier	delta		5108827	0					
ANR	5108977	ConditionalExpression	( addr > baseaddr ) ? addr - baseaddr : - 1		5108827	1					
ANR	5108978	Condition	addr > baseaddr		5108827	0					
ANR	5108979	RelationalExpression	addr > baseaddr		5108827	0		>			
ANR	5108980	Identifier	addr		5108827	0					
ANR	5108981	Identifier	baseaddr		5108827	1					
ANR	5108982	AdditiveExpression	addr - baseaddr		5108827	1		-			
ANR	5108983	Identifier	addr		5108827	0					
ANR	5108984	Identifier	baseaddr		5108827	1					
ANR	5108985	UnaryOperationExpression	- 1		5108827	2					
ANR	5108986	UnaryOperator	-		5108827	0					
ANR	5108987	PrimaryExpression	1		5108827	1					
ANR	5108988	ExpressionStatement	"res = r_type_get_struct_memb ( TDB , sdbkv_value ( kv ) , delta )"	298:3:7429:7488	5108827	4	True				
ANR	5108989	AssignmentExpression	"res = r_type_get_struct_memb ( TDB , sdbkv_value ( kv ) , delta )"		5108827	0		=			
ANR	5108990	Identifier	res		5108827	0					
ANR	5108991	CallExpression	"r_type_get_struct_memb ( TDB , sdbkv_value ( kv ) , delta )"		5108827	1					
ANR	5108992	Callee	r_type_get_struct_memb		5108827	0					
ANR	5108993	Identifier	r_type_get_struct_memb		5108827	0					
ANR	5108994	ArgumentList	TDB		5108827	1					
ANR	5108995	Argument	TDB		5108827	0					
ANR	5108996	Identifier	TDB		5108827	0					
ANR	5108997	Argument	sdbkv_value ( kv )		5108827	1					
ANR	5108998	CallExpression	sdbkv_value ( kv )		5108827	0					
ANR	5108999	Callee	sdbkv_value		5108827	0					
ANR	5109000	Identifier	sdbkv_value		5108827	0					
ANR	5109001	ArgumentList	kv		5108827	1					
ANR	5109002	Argument	kv		5108827	0					
ANR	5109003	Identifier	kv		5108827	0					
ANR	5109004	Argument	delta		5108827	2					
ANR	5109005	Identifier	delta		5108827	0					
ANR	5109006	IfStatement	if ( res )		5108827	5					
ANR	5109007	Condition	res	299:7:7497:7499	5108827	0	True				
ANR	5109008	Identifier	res		5108827	0					
ANR	5109009	CompoundStatement		21:12:676:676	5108827	1					
ANR	5109010	BreakStatement	break ;	300:4:7508:7513	5108827	0	True				
ANR	5109011	ExpressionStatement	ls_free ( sdb_list )	303:2:7526:7544	5108827	12	True				
ANR	5109012	CallExpression	ls_free ( sdb_list )		5108827	0					
ANR	5109013	Callee	ls_free		5108827	0					
ANR	5109014	Identifier	ls_free		5108827	0					
ANR	5109015	ArgumentList	sdb_list		5108827	1					
ANR	5109016	Argument	sdb_list		5108827	0					
ANR	5109017	Identifier	sdb_list		5108827	0					
ANR	5109018	ReturnStatement	return res ;	305:1:7550:7560	5108827	16	True				
ANR	5109019	Identifier	res		5108827	0					
ANR	5109020	ReturnType	R_API char *		5108827	1					
ANR	5109021	Identifier	r_type_link_at		5108827	2					
ANR	5109022	ParameterList	"Sdb * TDB , ut64 addr"		5108827	3					
ANR	5109023	Parameter	Sdb * TDB	279:28:6804:6811	5108827	0	True				
ANR	5109024	ParameterType	Sdb *		5108827	0					
ANR	5109025	Identifier	TDB		5108827	1					
ANR	5109026	Parameter	ut64 addr	279:38:6814:6822	5108827	1	True				
ANR	5109027	ParameterType	ut64		5108827	0					
ANR	5109028	Identifier	addr		5108827	1					
ANR	5109029	CFGEntryNode	ENTRY		5108827		True				
ANR	5109030	CFGExitNode	EXIT		5108827		True				
ANR	5109031	CFGErrorNode	ERROR		5108827		True				
ANR	5109032	Symbol	res		5108827						
ANR	5109033	Symbol	NULL		5108827						
ANR	5109034	Symbol	sdbkv_key		5108827						
ANR	5109035	Symbol	query		5108827						
ANR	5109036	Symbol	delta		5108827						
ANR	5109037	Symbol	sdb_foreach_list		5108827						
ANR	5109038	Symbol	sdb_get		5108827						
ANR	5109039	Symbol	kv		5108827						
ANR	5109040	Symbol	baseaddr		5108827						
ANR	5109041	Symbol	sdbkv_value		5108827						
ANR	5109042	Symbol	r_num_math		5108827						
ANR	5109043	Symbol	strlen		5108827						
ANR	5109044	Symbol	strncmp		5108827						
ANR	5109045	Symbol	sdb_list		5108827						
ANR	5109046	Symbol	TDB		5108827						
ANR	5109047	Symbol	true		5108827						
ANR	5109048	Symbol	linkptr		5108827						
ANR	5109049	Symbol	sdb_iter		5108827						
ANR	5109050	Symbol	addr		5108827						
ANR	5109051	Symbol	UT64_MAX		5108827						
ANR	5109052	Symbol	sdb_fmt		5108827						
ANR	5109053	Symbol	r_type_get_struct_memb		5108827						
ANR	5109054	Function	r_type_set_link	308:0:7565:7841							
ANR	5109055	FunctionDef	"r_type_set_link (Sdb * TDB , const char * type , ut64 addr)"		5109054	0					
ANR	5109056	CompoundStatement		308:65:7630:7841	5109054	0					
ANR	5109057	IfStatement	"if ( sdb_const_get ( TDB , type , 0 ) )"		5109054	0					
ANR	5109058	Condition	"sdb_const_get ( TDB , type , 0 )"	309:5:7637:7664	5109054	0	True				
ANR	5109059	CallExpression	"sdb_const_get ( TDB , type , 0 )"		5109054	0					
ANR	5109060	Callee	sdb_const_get		5109054	0					
ANR	5109061	Identifier	sdb_const_get		5109054	0					
ANR	5109062	ArgumentList	TDB		5109054	1					
ANR	5109063	Argument	TDB		5109054	0					
ANR	5109064	Identifier	TDB		5109054	0					
ANR	5109065	Argument	type		5109054	1					
ANR	5109066	Identifier	type		5109054	0					
ANR	5109067	Argument	0		5109054	2					
ANR	5109068	PrimaryExpression	0		5109054	0					
ANR	5109069	CompoundStatement		2:35:36:36	5109054	1					
ANR	5109070	Statement	char	310:2:7671:7674	5109054	0	True				
ANR	5109071	Statement	*	310:7:7676:7676	5109054	1	True				
ANR	5109072	Statement	laddr	310:8:7677:7681	5109054	2	True				
ANR	5109073	Statement	=	310:14:7683:7683	5109054	3	True				
ANR	5109074	Statement	r_str_newf	310:16:7685:7694	5109054	4	True				
ANR	5109075	Statement	(	310:27:7696:7696	5109054	5	True				
ANR	5109076	Statement	"""link.%08"""	310:28:7697:7706	5109054	6	True				
ANR	5109077	Statement	PFMT64x	310:38:7707:7713	5109054	7	True				
ANR	5109078	Statement	","	310:45:7714:7714	5109054	8	True				
ANR	5109079	Statement	addr	310:47:7716:7719	5109054	9	True				
ANR	5109080	Statement	)	310:51:7720:7720	5109054	10	True				
ANR	5109081	ExpressionStatement		310:52:7721:7721	5109054	11	True				
ANR	5109082	ExpressionStatement	"sdb_set ( TDB , laddr , type , 0 )"	311:2:7725:7754	5109054	12	True				
ANR	5109083	CallExpression	"sdb_set ( TDB , laddr , type , 0 )"		5109054	0					
ANR	5109084	Callee	sdb_set		5109054	0					
ANR	5109085	Identifier	sdb_set		5109054	0					
ANR	5109086	ArgumentList	TDB		5109054	1					
ANR	5109087	Argument	TDB		5109054	0					
ANR	5109088	Identifier	TDB		5109054	0					
ANR	5109089	Argument	laddr		5109054	1					
ANR	5109090	Identifier	laddr		5109054	0					
ANR	5109091	Argument	type		5109054	2					
ANR	5109092	Identifier	type		5109054	0					
ANR	5109093	Argument	0		5109054	3					
ANR	5109094	PrimaryExpression	0		5109054	0					
ANR	5109095	ExpressionStatement	free ( laddr )	312:2:7758:7770	5109054	13	True				
ANR	5109096	CallExpression	free ( laddr )		5109054	0					
ANR	5109097	Callee	free		5109054	0					
ANR	5109098	Identifier	free		5109054	0					
ANR	5109099	ArgumentList	laddr		5109054	1					
ANR	5109100	Argument	laddr		5109054	0					
ANR	5109101	Identifier	laddr		5109054	0					
ANR	5109102	ReturnStatement	return true ;	313:2:7774:7785	5109054	14	True				
ANR	5109103	Identifier	true		5109054	0					
ANR	5109104	ReturnStatement	return false ;	316:1:7827:7839	5109054	1	True				
ANR	5109105	Identifier	false		5109054	0					
ANR	5109106	ReturnType	R_API int		5109054	1					
ANR	5109107	Identifier	r_type_set_link		5109054	2					
ANR	5109108	ParameterList	"Sdb * TDB , const char * type , ut64 addr"		5109054	3					
ANR	5109109	Parameter	Sdb * TDB	308:26:7591:7598	5109054	0	True				
ANR	5109110	ParameterType	Sdb *		5109054	0					
ANR	5109111	Identifier	TDB		5109054	1					
ANR	5109112	Parameter	const char * type	308:36:7601:7616	5109054	1	True				
ANR	5109113	ParameterType	const char *		5109054	0					
ANR	5109114	Identifier	type		5109054	1					
ANR	5109115	Parameter	ut64 addr	308:54:7619:7627	5109054	2	True				
ANR	5109116	ParameterType	ut64		5109054	0					
ANR	5109117	Identifier	addr		5109054	1					
ANR	5109118	CFGEntryNode	ENTRY		5109054		True				
ANR	5109119	CFGExitNode	EXIT		5109054		True				
ANR	5109120	Symbol	laddr		5109054						
ANR	5109121	Symbol	TDB		5109054						
ANR	5109122	Symbol	true		5109054						
ANR	5109123	Symbol	false		5109054						
ANR	5109124	Symbol	type		5109054						
ANR	5109125	Symbol	addr		5109054						
ANR	5109126	Symbol	sdb_const_get		5109054						
ANR	5109127	Function	r_type_link_offset	319:0:7844:8125							
ANR	5109128	FunctionDef	"r_type_link_offset (Sdb * TDB , const char * type , ut64 addr)"		5109127	0					
ANR	5109129	CompoundStatement		319:68:7912:8125	5109127	0					
ANR	5109130	IfStatement	"if ( sdb_const_get ( TDB , type , 0 ) )"		5109127	0					
ANR	5109131	Condition	"sdb_const_get ( TDB , type , 0 )"	320:5:7919:7946	5109127	0	True				
ANR	5109132	CallExpression	"sdb_const_get ( TDB , type , 0 )"		5109127	0					
ANR	5109133	Callee	sdb_const_get		5109127	0					
ANR	5109134	Identifier	sdb_const_get		5109127	0					
ANR	5109135	ArgumentList	TDB		5109127	1					
ANR	5109136	Argument	TDB		5109127	0					
ANR	5109137	Identifier	TDB		5109127	0					
ANR	5109138	Argument	type		5109127	1					
ANR	5109139	Identifier	type		5109127	0					
ANR	5109140	Argument	0		5109127	2					
ANR	5109141	PrimaryExpression	0		5109127	0					
ANR	5109142	CompoundStatement		2:35:36:36	5109127	1					
ANR	5109143	Statement	char	321:2:7953:7956	5109127	0	True				
ANR	5109144	Statement	*	321:7:7958:7958	5109127	1	True				
ANR	5109145	Statement	laddr	321:8:7959:7963	5109127	2	True				
ANR	5109146	Statement	=	321:14:7965:7965	5109127	3	True				
ANR	5109147	Statement	r_str_newf	321:16:7967:7976	5109127	4	True				
ANR	5109148	Statement	(	321:27:7978:7978	5109127	5	True				
ANR	5109149	Statement	"""offset.%08"""	321:28:7979:7990	5109127	6	True				
ANR	5109150	Statement	PFMT64x	321:40:7991:7997	5109127	7	True				
ANR	5109151	Statement	","	321:47:7998:7998	5109127	8	True				
ANR	5109152	Statement	addr	321:49:8000:8003	5109127	9	True				
ANR	5109153	Statement	)	321:53:8004:8004	5109127	10	True				
ANR	5109154	ExpressionStatement		321:54:8005:8005	5109127	11	True				
ANR	5109155	ExpressionStatement	"sdb_set ( TDB , laddr , type , 0 )"	322:2:8009:8038	5109127	12	True				
ANR	5109156	CallExpression	"sdb_set ( TDB , laddr , type , 0 )"		5109127	0					
ANR	5109157	Callee	sdb_set		5109127	0					
ANR	5109158	Identifier	sdb_set		5109127	0					
ANR	5109159	ArgumentList	TDB		5109127	1					
ANR	5109160	Argument	TDB		5109127	0					
ANR	5109161	Identifier	TDB		5109127	0					
ANR	5109162	Argument	laddr		5109127	1					
ANR	5109163	Identifier	laddr		5109127	0					
ANR	5109164	Argument	type		5109127	2					
ANR	5109165	Identifier	type		5109127	0					
ANR	5109166	Argument	0		5109127	3					
ANR	5109167	PrimaryExpression	0		5109127	0					
ANR	5109168	ExpressionStatement	free ( laddr )	323:2:8042:8054	5109127	13	True				
ANR	5109169	CallExpression	free ( laddr )		5109127	0					
ANR	5109170	Callee	free		5109127	0					
ANR	5109171	Identifier	free		5109127	0					
ANR	5109172	ArgumentList	laddr		5109127	1					
ANR	5109173	Argument	laddr		5109127	0					
ANR	5109174	Identifier	laddr		5109127	0					
ANR	5109175	ReturnStatement	return true ;	324:2:8058:8069	5109127	14	True				
ANR	5109176	Identifier	true		5109127	0					
ANR	5109177	ReturnStatement	return false ;	327:1:8111:8123	5109127	1	True				
ANR	5109178	Identifier	false		5109127	0					
ANR	5109179	ReturnType	R_API int		5109127	1					
ANR	5109180	Identifier	r_type_link_offset		5109127	2					
ANR	5109181	ParameterList	"Sdb * TDB , const char * type , ut64 addr"		5109127	3					
ANR	5109182	Parameter	Sdb * TDB	319:29:7873:7880	5109127	0	True				
ANR	5109183	ParameterType	Sdb *		5109127	0					
ANR	5109184	Identifier	TDB		5109127	1					
ANR	5109185	Parameter	const char * type	319:39:7883:7898	5109127	1	True				
ANR	5109186	ParameterType	const char *		5109127	0					
ANR	5109187	Identifier	type		5109127	1					
ANR	5109188	Parameter	ut64 addr	319:57:7901:7909	5109127	2	True				
ANR	5109189	ParameterType	ut64		5109127	0					
ANR	5109190	Identifier	addr		5109127	1					
ANR	5109191	CFGEntryNode	ENTRY		5109127		True				
ANR	5109192	CFGExitNode	EXIT		5109127		True				
ANR	5109193	Symbol	laddr		5109127						
ANR	5109194	Symbol	TDB		5109127						
ANR	5109195	Symbol	true		5109127						
ANR	5109196	Symbol	false		5109127						
ANR	5109197	Symbol	type		5109127						
ANR	5109198	Symbol	addr		5109127						
ANR	5109199	Symbol	sdb_const_get		5109127						
ANR	5109200	Function	r_type_unlink	330:0:8128:8267							
ANR	5109201	FunctionDef	"r_type_unlink (Sdb * TDB , ut64 addr)"		5109200	0					
ANR	5109202	CompoundStatement		330:45:8173:8267	5109200	0					
ANR	5109203	Statement	char	331:1:8176:8179	5109200	0	True				
ANR	5109204	Statement	*	331:6:8181:8181	5109200	1	True				
ANR	5109205	Statement	laddr	331:7:8182:8186	5109200	2	True				
ANR	5109206	Statement	=	331:13:8188:8188	5109200	3	True				
ANR	5109207	Statement	sdb_fmt	331:15:8190:8196	5109200	4	True				
ANR	5109208	Statement	(	331:23:8198:8198	5109200	5	True				
ANR	5109209	Statement	"""link.%08"""	331:24:8199:8208	5109200	6	True				
ANR	5109210	Statement	PFMT64x	331:34:8209:8215	5109200	7	True				
ANR	5109211	Statement	","	331:41:8216:8216	5109200	8	True				
ANR	5109212	Statement	addr	331:43:8218:8221	5109200	9	True				
ANR	5109213	Statement	)	331:47:8222:8222	5109200	10	True				
ANR	5109214	ExpressionStatement		331:48:8223:8223	5109200	11	True				
ANR	5109215	ExpressionStatement	"sdb_unset ( TDB , laddr , 0 )"	332:1:8226:8251	5109200	12	True				
ANR	5109216	CallExpression	"sdb_unset ( TDB , laddr , 0 )"		5109200	0					
ANR	5109217	Callee	sdb_unset		5109200	0					
ANR	5109218	Identifier	sdb_unset		5109200	0					
ANR	5109219	ArgumentList	TDB		5109200	1					
ANR	5109220	Argument	TDB		5109200	0					
ANR	5109221	Identifier	TDB		5109200	0					
ANR	5109222	Argument	laddr		5109200	1					
ANR	5109223	Identifier	laddr		5109200	0					
ANR	5109224	Argument	0		5109200	2					
ANR	5109225	PrimaryExpression	0		5109200	0					
ANR	5109226	ReturnStatement	return true ;	333:1:8254:8265	5109200	13	True				
ANR	5109227	Identifier	true		5109200	0					
ANR	5109228	ReturnType	R_API int		5109200	1					
ANR	5109229	Identifier	r_type_unlink		5109200	2					
ANR	5109230	ParameterList	"Sdb * TDB , ut64 addr"		5109200	3					
ANR	5109231	Parameter	Sdb * TDB	330:24:8152:8159	5109200	0	True				
ANR	5109232	ParameterType	Sdb *		5109200	0					
ANR	5109233	Identifier	TDB		5109200	1					
ANR	5109234	Parameter	ut64 addr	330:34:8162:8170	5109200	1	True				
ANR	5109235	ParameterType	ut64		5109200	0					
ANR	5109236	Identifier	addr		5109200	1					
ANR	5109237	CFGEntryNode	ENTRY		5109200		True				
ANR	5109238	CFGExitNode	EXIT		5109200		True				
ANR	5109239	Symbol	laddr		5109200						
ANR	5109240	Symbol	TDB		5109200						
ANR	5109241	Symbol	true		5109200						
ANR	5109242	Symbol	addr		5109200						
ANR	5109243	Function	filter_type	336:0:8270:8408							
ANR	5109244	FunctionDef	filter_type (char * t)		5109243	0					
ANR	5109245	CompoundStatement		336:33:8303:8408	5109243	0					
ANR	5109246	ForStatement	for ( ; * t ; t ++ )		5109243	0					
ANR	5109247	Condition	* t	337:8:8313:8314	5109243	0	True				
ANR	5109248	UnaryOperationExpression	* t		5109243	0					
ANR	5109249	UnaryOperator	*		5109243	0					
ANR	5109250	Identifier	t		5109243	1					
ANR	5109251	PostIncDecOperationExpression	t ++	337:12:8317:8319	5109243	1	True				
ANR	5109252	Identifier	t		5109243	0					
ANR	5109253	IncDec	++		5109243	1					
ANR	5109254	CompoundStatement		2:17:18:18	5109243	2					
ANR	5109255	IfStatement	if ( * t == ' ' )		5109243	0					
ANR	5109256	Condition	* t == ' '	338:8:8332:8340	5109243	0	True				
ANR	5109257	EqualityExpression	* t == ' '		5109243	0		==			
ANR	5109258	UnaryOperationExpression	* t		5109243	0					
ANR	5109259	UnaryOperator	*		5109243	0					
ANR	5109260	Identifier	t		5109243	1					
ANR	5109261	PrimaryExpression	' '		5109243	1					
ANR	5109262	CompoundStatement		3:19:39:39	5109243	1					
ANR	5109263	ExpressionStatement	* t = '_'	339:6:8351:8359	5109243	0	True				
ANR	5109264	AssignmentExpression	* t = '_'		5109243	0		=			
ANR	5109265	UnaryOperationExpression	* t		5109243	0					
ANR	5109266	UnaryOperator	*		5109243	0					
ANR	5109267	Identifier	t		5109243	1					
ANR	5109268	PrimaryExpression	'_'		5109243	1					
ANR	5109269	ReturnType	static void		5109243	1					
ANR	5109270	Identifier	filter_type		5109243	2					
ANR	5109271	ParameterList	char * t		5109243	3					
ANR	5109272	Parameter	char * t	336:24:8294:8300	5109243	0	True				
ANR	5109273	ParameterType	char *		5109243	0					
ANR	5109274	Identifier	t		5109243	1					
ANR	5109275	CFGEntryNode	ENTRY		5109243		True				
ANR	5109276	CFGExitNode	EXIT		5109243		True				
ANR	5109277	Symbol	t		5109243						
ANR	5109278	Symbol	* t		5109243						
ANR	5109279	Function	r_type_format	345:0:8411:11654							
ANR	5109280	FunctionDef	"r_type_format (Sdb * TDB , const char * t)"		5109279	0					
ANR	5109281	CompoundStatement		345:51:8462:11654	5109279	0					
ANR	5109282	IdentifierDeclStatement	int n ;	346:1:8465:8470	5109279	0	True				
ANR	5109283	IdentifierDecl	n		5109279	0					
ANR	5109284	IdentifierDeclType	int		5109279	0					
ANR	5109285	Identifier	n		5109279	1					
ANR	5109286	IdentifierDeclStatement	"char * p , var [ 130 ] , var2 [ 132 ] ;"	347:1:8473:8501	5109279	1	True				
ANR	5109287	IdentifierDecl	* p		5109279	0					
ANR	5109288	IdentifierDeclType	char *		5109279	0					
ANR	5109289	Identifier	p		5109279	1					
ANR	5109290	IdentifierDecl	var [ 130 ]		5109279	1					
ANR	5109291	IdentifierDeclType	char [ 130 ]		5109279	0					
ANR	5109292	Identifier	var		5109279	1					
ANR	5109293	PrimaryExpression	130		5109279	2					
ANR	5109294	IdentifierDecl	var2 [ 132 ]		5109279	2					
ANR	5109295	IdentifierDeclType	char [ 132 ]		5109279	0					
ANR	5109296	Identifier	var2		5109279	1					
ANR	5109297	PrimaryExpression	132		5109279	2					
ANR	5109298	IdentifierDeclStatement	char * fmt = NULL ;	348:1:8504:8520	5109279	2	True				
ANR	5109299	IdentifierDecl	* fmt = NULL		5109279	0					
ANR	5109300	IdentifierDeclType	char *		5109279	0					
ANR	5109301	Identifier	fmt		5109279	1					
ANR	5109302	AssignmentExpression	* fmt = NULL		5109279	2		=			
ANR	5109303	Identifier	NULL		5109279	0					
ANR	5109304	Identifier	NULL		5109279	1					
ANR	5109305	IdentifierDeclStatement	char * vars = NULL ;	349:1:8523:8540	5109279	3	True				
ANR	5109306	IdentifierDecl	* vars = NULL		5109279	0					
ANR	5109307	IdentifierDeclType	char *		5109279	0					
ANR	5109308	Identifier	vars		5109279	1					
ANR	5109309	AssignmentExpression	* vars = NULL		5109279	2		=			
ANR	5109310	Identifier	NULL		5109279	0					
ANR	5109311	Identifier	NULL		5109279	1					
ANR	5109312	IdentifierDeclStatement	"const char * kind = sdb_const_get ( TDB , t , NULL ) ;"	350:1:8543:8590	5109279	4	True				
ANR	5109313	IdentifierDecl	"* kind = sdb_const_get ( TDB , t , NULL )"		5109279	0					
ANR	5109314	IdentifierDeclType	const char *		5109279	0					
ANR	5109315	Identifier	kind		5109279	1					
ANR	5109316	AssignmentExpression	"* kind = sdb_const_get ( TDB , t , NULL )"		5109279	2		=			
ANR	5109317	Identifier	kind		5109279	0					
ANR	5109318	CallExpression	"sdb_const_get ( TDB , t , NULL )"		5109279	1					
ANR	5109319	Callee	sdb_const_get		5109279	0					
ANR	5109320	Identifier	sdb_const_get		5109279	0					
ANR	5109321	ArgumentList	TDB		5109279	1					
ANR	5109322	Argument	TDB		5109279	0					
ANR	5109323	Identifier	TDB		5109279	0					
ANR	5109324	Argument	t		5109279	1					
ANR	5109325	Identifier	t		5109279	0					
ANR	5109326	Argument	NULL		5109279	2					
ANR	5109327	Identifier	NULL		5109279	0					
ANR	5109328	IfStatement	if ( ! kind )		5109279	5					
ANR	5109329	Condition	! kind	351:5:8597:8601	5109279	0	True				
ANR	5109330	UnaryOperationExpression	! kind		5109279	0					
ANR	5109331	UnaryOperator	!		5109279	0					
ANR	5109332	Identifier	kind		5109279	1					
ANR	5109333	CompoundStatement		7:12:141:141	5109279	1					
ANR	5109334	ReturnStatement	return NULL ;	352:2:8608:8619	5109279	0	True				
ANR	5109335	Identifier	NULL		5109279	0					
ANR	5109336	ExpressionStatement	"snprintf ( var , sizeof ( var ) , ""%s.%s"" , kind , t )"	355:1:8654:8700	5109279	6	True				
ANR	5109337	CallExpression	"snprintf ( var , sizeof ( var ) , ""%s.%s"" , kind , t )"		5109279	0					
ANR	5109338	Callee	snprintf		5109279	0					
ANR	5109339	Identifier	snprintf		5109279	0					
ANR	5109340	ArgumentList	var		5109279	1					
ANR	5109341	Argument	var		5109279	0					
ANR	5109342	Identifier	var		5109279	0					
ANR	5109343	Argument	sizeof ( var )		5109279	1					
ANR	5109344	SizeofExpression	sizeof ( var )		5109279	0					
ANR	5109345	Sizeof	sizeof		5109279	0					
ANR	5109346	SizeofOperand	var		5109279	1					
ANR	5109347	Argument	"""%s.%s"""		5109279	2					
ANR	5109348	PrimaryExpression	"""%s.%s"""		5109279	0					
ANR	5109349	Argument	kind		5109279	3					
ANR	5109350	Identifier	kind		5109279	0					
ANR	5109351	Argument	t		5109279	4					
ANR	5109352	Identifier	t		5109279	0					
ANR	5109353	IfStatement	"if ( ! strcmp ( kind , ""type"" ) )"		5109279	7					
ANR	5109354	Condition	"! strcmp ( kind , ""type"" )"	356:5:8707:8728	5109279	0	True				
ANR	5109355	UnaryOperationExpression	"! strcmp ( kind , ""type"" )"		5109279	0					
ANR	5109356	UnaryOperator	!		5109279	0					
ANR	5109357	CallExpression	"strcmp ( kind , ""type"" )"		5109279	1					
ANR	5109358	Callee	strcmp		5109279	0					
ANR	5109359	Identifier	strcmp		5109279	0					
ANR	5109360	ArgumentList	kind		5109279	1					
ANR	5109361	Argument	kind		5109279	0					
ANR	5109362	Identifier	kind		5109279	0					
ANR	5109363	Argument	"""type"""		5109279	1					
ANR	5109364	PrimaryExpression	"""type"""		5109279	0					
ANR	5109365	CompoundStatement		13:2:272:320	5109279	1					
ANR	5109366	IdentifierDeclStatement	"const char * fmt = sdb_const_get ( TDB , var , NULL ) ;"	357:2:8735:8783	5109279	0	True				
ANR	5109367	IdentifierDecl	"* fmt = sdb_const_get ( TDB , var , NULL )"		5109279	0					
ANR	5109368	IdentifierDeclType	const char *		5109279	0					
ANR	5109369	Identifier	fmt		5109279	1					
ANR	5109370	AssignmentExpression	"* fmt = sdb_const_get ( TDB , var , NULL )"		5109279	2		=			
ANR	5109371	Identifier	fmt		5109279	0					
ANR	5109372	CallExpression	"sdb_const_get ( TDB , var , NULL )"		5109279	1					
ANR	5109373	Callee	sdb_const_get		5109279	0					
ANR	5109374	Identifier	sdb_const_get		5109279	0					
ANR	5109375	ArgumentList	TDB		5109279	1					
ANR	5109376	Argument	TDB		5109279	0					
ANR	5109377	Identifier	TDB		5109279	0					
ANR	5109378	Argument	var		5109279	1					
ANR	5109379	Identifier	var		5109279	0					
ANR	5109380	Argument	NULL		5109279	2					
ANR	5109381	Identifier	NULL		5109279	0					
ANR	5109382	IfStatement	if ( fmt )		5109279	1					
ANR	5109383	Condition	fmt	358:6:8791:8793	5109279	0	True				
ANR	5109384	Identifier	fmt		5109279	0					
ANR	5109385	CompoundStatement		14:11:333:333	5109279	1					
ANR	5109386	ReturnStatement	return strdup ( fmt ) ;	359:3:8801:8820	5109279	0	True				
ANR	5109387	CallExpression	strdup ( fmt )		5109279	0					
ANR	5109388	Callee	strdup		5109279	0					
ANR	5109389	Identifier	strdup		5109279	0					
ANR	5109390	ArgumentList	fmt		5109279	1					
ANR	5109391	Argument	fmt		5109279	0					
ANR	5109392	Identifier	fmt		5109279	0					
ANR	5109393	ElseStatement	else		5109279	0					
ANR	5109394	IfStatement	"if ( ! strcmp ( kind , ""struct"" ) || ! strcmp ( kind , ""union"" ) )"		5109279	0					
ANR	5109395	Condition	"! strcmp ( kind , ""struct"" ) || ! strcmp ( kind , ""union"" )"	361:12:8838:8888	5109279	0	True				
ANR	5109396	OrExpression	"! strcmp ( kind , ""struct"" ) || ! strcmp ( kind , ""union"" )"		5109279	0		||			
ANR	5109397	UnaryOperationExpression	"! strcmp ( kind , ""struct"" )"		5109279	0					
ANR	5109398	UnaryOperator	!		5109279	0					
ANR	5109399	CallExpression	"strcmp ( kind , ""struct"" )"		5109279	1					
ANR	5109400	Callee	strcmp		5109279	0					
ANR	5109401	Identifier	strcmp		5109279	0					
ANR	5109402	ArgumentList	kind		5109279	1					
ANR	5109403	Argument	kind		5109279	0					
ANR	5109404	Identifier	kind		5109279	0					
ANR	5109405	Argument	"""struct"""		5109279	1					
ANR	5109406	PrimaryExpression	"""struct"""		5109279	0					
ANR	5109407	UnaryOperationExpression	"! strcmp ( kind , ""union"" )"		5109279	1					
ANR	5109408	UnaryOperator	!		5109279	0					
ANR	5109409	CallExpression	"strcmp ( kind , ""union"" )"		5109279	1					
ANR	5109410	Callee	strcmp		5109279	0					
ANR	5109411	Identifier	strcmp		5109279	0					
ANR	5109412	ArgumentList	kind		5109279	1					
ANR	5109413	Argument	kind		5109279	0					
ANR	5109414	Identifier	kind		5109279	0					
ANR	5109415	Argument	"""union"""		5109279	1					
ANR	5109416	PrimaryExpression	"""union"""		5109279	0					
ANR	5109417	CompoundStatement		17:65:428:428	5109279	1					
ANR	5109418	ForStatement	"for ( n = 0 ; ( p = sdb_array_get ( TDB , var , n , NULL ) ) ; n ++ )"		5109279	0					
ANR	5109419	ForInit	n = 0 ;	363:7:8971:8976	5109279	0	True				
ANR	5109420	AssignmentExpression	n = 0		5109279	0		=			
ANR	5109421	Identifier	n		5109279	0					
ANR	5109422	PrimaryExpression	0		5109279	1					
ANR	5109423	Condition	"p = sdb_array_get ( TDB , var , n , NULL )"	363:14:8978:9016	5109279	1	True				
ANR	5109424	AssignmentExpression	"p = sdb_array_get ( TDB , var , n , NULL )"		5109279	0		=			
ANR	5109425	Identifier	p		5109279	0					
ANR	5109426	CallExpression	"sdb_array_get ( TDB , var , n , NULL )"		5109279	1					
ANR	5109427	Callee	sdb_array_get		5109279	0					
ANR	5109428	Identifier	sdb_array_get		5109279	0					
ANR	5109429	ArgumentList	TDB		5109279	1					
ANR	5109430	Argument	TDB		5109279	0					
ANR	5109431	Identifier	TDB		5109279	0					
ANR	5109432	Argument	var		5109279	1					
ANR	5109433	Identifier	var		5109279	0					
ANR	5109434	Argument	n		5109279	2					
ANR	5109435	Identifier	n		5109279	0					
ANR	5109436	Argument	NULL		5109279	3					
ANR	5109437	Identifier	NULL		5109279	0					
ANR	5109438	PostIncDecOperationExpression	n ++	363:55:9019:9021	5109279	2	True				
ANR	5109439	Identifier	n		5109279	0					
ANR	5109440	IncDec	++		5109279	1					
ANR	5109441	CompoundStatement		29:3:843:903	5109279	3					
ANR	5109442	IdentifierDeclStatement	char * type ;	364:3:9029:9039	5109279	0	True				
ANR	5109443	IdentifierDecl	* type		5109279	0					
ANR	5109444	IdentifierDeclType	char *		5109279	0					
ANR	5109445	Identifier	type		5109279	1					
ANR	5109446	IdentifierDeclStatement	char * struct_name ;	365:3:9044:9061	5109279	1	True				
ANR	5109447	IdentifierDecl	* struct_name		5109279	0					
ANR	5109448	IdentifierDeclType	char *		5109279	0					
ANR	5109449	Identifier	struct_name		5109279	1					
ANR	5109450	IdentifierDeclStatement	const char * tfmt = NULL ;	366:3:9066:9089	5109279	2	True				
ANR	5109451	IdentifierDecl	* tfmt = NULL		5109279	0					
ANR	5109452	IdentifierDeclType	const char *		5109279	0					
ANR	5109453	Identifier	tfmt		5109279	1					
ANR	5109454	AssignmentExpression	* tfmt = NULL		5109279	2		=			
ANR	5109455	Identifier	NULL		5109279	0					
ANR	5109456	Identifier	NULL		5109279	1					
ANR	5109457	IdentifierDeclStatement	bool isStruct = false ;	367:3:9094:9115	5109279	3	True				
ANR	5109458	IdentifierDecl	isStruct = false		5109279	0					
ANR	5109459	IdentifierDeclType	bool		5109279	0					
ANR	5109460	Identifier	isStruct		5109279	1					
ANR	5109461	AssignmentExpression	isStruct = false		5109279	2		=			
ANR	5109462	Identifier	false		5109279	0					
ANR	5109463	Identifier	false		5109279	1					
ANR	5109464	IdentifierDeclStatement	bool isEnum = false ;	368:3:9120:9139	5109279	4	True				
ANR	5109465	IdentifierDecl	isEnum = false		5109279	0					
ANR	5109466	IdentifierDeclType	bool		5109279	0					
ANR	5109467	Identifier	isEnum		5109279	1					
ANR	5109468	AssignmentExpression	isEnum = false		5109279	2		=			
ANR	5109469	Identifier	false		5109279	0					
ANR	5109470	Identifier	false		5109279	1					
ANR	5109471	IdentifierDeclStatement	bool isfp = false ;	369:3:9144:9161	5109279	5	True				
ANR	5109472	IdentifierDecl	isfp = false		5109279	0					
ANR	5109473	IdentifierDeclType	bool		5109279	0					
ANR	5109474	Identifier	isfp		5109279	1					
ANR	5109475	AssignmentExpression	isfp = false		5109279	2		=			
ANR	5109476	Identifier	false		5109279	0					
ANR	5109477	Identifier	false		5109279	1					
ANR	5109478	ExpressionStatement	"snprintf ( var2 , sizeof ( var2 ) , ""%s.%s"" , var , p )"	370:3:9166:9213	5109279	6	True				
ANR	5109479	CallExpression	"snprintf ( var2 , sizeof ( var2 ) , ""%s.%s"" , var , p )"		5109279	0					
ANR	5109480	Callee	snprintf		5109279	0					
ANR	5109481	Identifier	snprintf		5109279	0					
ANR	5109482	ArgumentList	var2		5109279	1					
ANR	5109483	Argument	var2		5109279	0					
ANR	5109484	Identifier	var2		5109279	0					
ANR	5109485	Argument	sizeof ( var2 )		5109279	1					
ANR	5109486	SizeofExpression	sizeof ( var2 )		5109279	0					
ANR	5109487	Sizeof	sizeof		5109279	0					
ANR	5109488	SizeofOperand	var2		5109279	1					
ANR	5109489	Argument	"""%s.%s"""		5109279	2					
ANR	5109490	PrimaryExpression	"""%s.%s"""		5109279	0					
ANR	5109491	Argument	var		5109279	3					
ANR	5109492	Identifier	var		5109279	0					
ANR	5109493	Argument	p		5109279	4					
ANR	5109494	Identifier	p		5109279	0					
ANR	5109495	ExpressionStatement	"type = sdb_array_get ( TDB , var2 , 0 , NULL )"	371:3:9218:9259	5109279	7	True				
ANR	5109496	AssignmentExpression	"type = sdb_array_get ( TDB , var2 , 0 , NULL )"		5109279	0		=			
ANR	5109497	Identifier	type		5109279	0					
ANR	5109498	CallExpression	"sdb_array_get ( TDB , var2 , 0 , NULL )"		5109279	1					
ANR	5109499	Callee	sdb_array_get		5109279	0					
ANR	5109500	Identifier	sdb_array_get		5109279	0					
ANR	5109501	ArgumentList	TDB		5109279	1					
ANR	5109502	Argument	TDB		5109279	0					
ANR	5109503	Identifier	TDB		5109279	0					
ANR	5109504	Argument	var2		5109279	1					
ANR	5109505	Identifier	var2		5109279	0					
ANR	5109506	Argument	0		5109279	2					
ANR	5109507	PrimaryExpression	0		5109279	0					
ANR	5109508	Argument	NULL		5109279	3					
ANR	5109509	Identifier	NULL		5109279	0					
ANR	5109510	IdentifierDeclStatement	"int alen = sdb_array_size ( TDB , var2 ) ;"	372:3:9264:9301	5109279	8	True				
ANR	5109511	IdentifierDecl	"alen = sdb_array_size ( TDB , var2 )"		5109279	0					
ANR	5109512	IdentifierDeclType	int		5109279	0					
ANR	5109513	Identifier	alen		5109279	1					
ANR	5109514	AssignmentExpression	"alen = sdb_array_size ( TDB , var2 )"		5109279	2		=			
ANR	5109515	Identifier	alen		5109279	0					
ANR	5109516	CallExpression	"sdb_array_size ( TDB , var2 )"		5109279	1					
ANR	5109517	Callee	sdb_array_size		5109279	0					
ANR	5109518	Identifier	sdb_array_size		5109279	0					
ANR	5109519	ArgumentList	TDB		5109279	1					
ANR	5109520	Argument	TDB		5109279	0					
ANR	5109521	Identifier	TDB		5109279	0					
ANR	5109522	Argument	var2		5109279	1					
ANR	5109523	Identifier	var2		5109279	0					
ANR	5109524	IdentifierDeclStatement	"int elements = sdb_array_get_num ( TDB , var2 , alen - 1 , NULL ) ;"	373:3:9306:9366	5109279	9	True				
ANR	5109525	IdentifierDecl	"elements = sdb_array_get_num ( TDB , var2 , alen - 1 , NULL )"		5109279	0					
ANR	5109526	IdentifierDeclType	int		5109279	0					
ANR	5109527	Identifier	elements		5109279	1					
ANR	5109528	AssignmentExpression	"elements = sdb_array_get_num ( TDB , var2 , alen - 1 , NULL )"		5109279	2		=			
ANR	5109529	Identifier	elements		5109279	0					
ANR	5109530	CallExpression	"sdb_array_get_num ( TDB , var2 , alen - 1 , NULL )"		5109279	1					
ANR	5109531	Callee	sdb_array_get_num		5109279	0					
ANR	5109532	Identifier	sdb_array_get_num		5109279	0					
ANR	5109533	ArgumentList	TDB		5109279	1					
ANR	5109534	Argument	TDB		5109279	0					
ANR	5109535	Identifier	TDB		5109279	0					
ANR	5109536	Argument	var2		5109279	1					
ANR	5109537	Identifier	var2		5109279	0					
ANR	5109538	Argument	alen - 1		5109279	2					
ANR	5109539	AdditiveExpression	alen - 1		5109279	0		-			
ANR	5109540	Identifier	alen		5109279	0					
ANR	5109541	PrimaryExpression	1		5109279	1					
ANR	5109542	Argument	NULL		5109279	3					
ANR	5109543	Identifier	NULL		5109279	0					
ANR	5109544	IfStatement	if ( type )		5109279	10					
ANR	5109545	Condition	type	374:7:9375:9378	5109279	0	True				
ANR	5109546	Identifier	type		5109279	0					
ANR	5109547	CompoundStatement		31:4:924:944	5109279	1					
ANR	5109548	IdentifierDeclStatement	char var3 [ 128 ] = { 0 } ;	375:4:9387:9407	5109279	0	True				
ANR	5109549	IdentifierDecl	var3 [ 128 ] = { 0 }		5109279	0					
ANR	5109550	IdentifierDeclType	char [ 128 ]		5109279	0					
ANR	5109551	Identifier	var3		5109279	1					
ANR	5109552	PrimaryExpression	128		5109279	2					
ANR	5109553	AssignmentExpression	var3 [ 128 ] = { 0 }		5109279	3		=			
ANR	5109554	Identifier	var3		5109279	0					
ANR	5109555	InitializerList	0		5109279	1					
ANR	5109556	PrimaryExpression	0		5109279	0					
ANR	5109557	IfStatement	"if ( ( strstr ( type , ""*("" ) || strstr ( type , "" *"" ) ) && strncmp ( type , ""char *"" , 7 ) )"		5109279	1					
ANR	5109558	Condition	"( strstr ( type , ""*("" ) || strstr ( type , "" *"" ) ) && strncmp ( type , ""char *"" , 7 )"	377:8:9466:9546	5109279	0	True				
ANR	5109559	AndExpression	"( strstr ( type , ""*("" ) || strstr ( type , "" *"" ) ) && strncmp ( type , ""char *"" , 7 )"		5109279	0		&&			
ANR	5109560	OrExpression	"strstr ( type , ""*("" ) || strstr ( type , "" *"" )"		5109279	0		||			
ANR	5109561	CallExpression	"strstr ( type , ""*("" )"		5109279	0					
ANR	5109562	Callee	strstr		5109279	0					
ANR	5109563	Identifier	strstr		5109279	0					
ANR	5109564	ArgumentList	type		5109279	1					
ANR	5109565	Argument	type		5109279	0					
ANR	5109566	Identifier	type		5109279	0					
ANR	5109567	Argument	"""*("""		5109279	1					
ANR	5109568	PrimaryExpression	"""*("""		5109279	0					
ANR	5109569	CallExpression	"strstr ( type , "" *"" )"		5109279	1					
ANR	5109570	Callee	strstr		5109279	0					
ANR	5109571	Identifier	strstr		5109279	0					
ANR	5109572	ArgumentList	type		5109279	1					
ANR	5109573	Argument	type		5109279	0					
ANR	5109574	Identifier	type		5109279	0					
ANR	5109575	Argument	""" *"""		5109279	1					
ANR	5109576	PrimaryExpression	""" *"""		5109279	0					
ANR	5109577	CallExpression	"strncmp ( type , ""char *"" , 7 )"		5109279	1					
ANR	5109578	Callee	strncmp		5109279	0					
ANR	5109579	Identifier	strncmp		5109279	0					
ANR	5109580	ArgumentList	type		5109279	1					
ANR	5109581	Argument	type		5109279	0					
ANR	5109582	Identifier	type		5109279	0					
ANR	5109583	Argument	"""char *"""		5109279	1					
ANR	5109584	PrimaryExpression	"""char *"""		5109279	0					
ANR	5109585	Argument	7		5109279	2					
ANR	5109586	PrimaryExpression	7		5109279	0					
ANR	5109587	CompoundStatement		34:35:1086:1086	5109279	1					
ANR	5109588	ExpressionStatement	isfp = true	379:5:9556:9567	5109279	0	True				
ANR	5109589	AssignmentExpression	isfp = true		5109279	0		=			
ANR	5109590	Identifier	isfp		5109279	0					
ANR	5109591	Identifier	true		5109279	1					
ANR	5109592	ElseStatement	else		5109279	0					
ANR	5109593	IfStatement	"if ( ! strncmp ( type , ""struct "" , 7 ) )"		5109279	0					
ANR	5109594	Condition	"! strncmp ( type , ""struct "" , 7 )"	380:15:9584:9612	5109279	0	True				
ANR	5109595	UnaryOperationExpression	"! strncmp ( type , ""struct "" , 7 )"		5109279	0					
ANR	5109596	UnaryOperator	!		5109279	0					
ANR	5109597	CallExpression	"strncmp ( type , ""struct "" , 7 )"		5109279	1					
ANR	5109598	Callee	strncmp		5109279	0					
ANR	5109599	Identifier	strncmp		5109279	0					
ANR	5109600	ArgumentList	type		5109279	1					
ANR	5109601	Argument	type		5109279	0					
ANR	5109602	Identifier	type		5109279	0					
ANR	5109603	Argument	"""struct """		5109279	1					
ANR	5109604	PrimaryExpression	"""struct """		5109279	0					
ANR	5109605	Argument	7		5109279	2					
ANR	5109606	PrimaryExpression	7		5109279	0					
ANR	5109607	CompoundStatement		36:46:1152:1152	5109279	1					
ANR	5109608	ExpressionStatement	struct_name = type + 7	381:5:9622:9644	5109279	0	True				
ANR	5109609	AssignmentExpression	struct_name = type + 7		5109279	0		=			
ANR	5109610	Identifier	struct_name		5109279	0					
ANR	5109611	AdditiveExpression	type + 7		5109279	1		+			
ANR	5109612	Identifier	type		5109279	0					
ANR	5109613	PrimaryExpression	7		5109279	1					
ANR	5109614	ExpressionStatement	"snprintf ( var3 , sizeof ( var3 ) , ""struct.%s"" , struct_name )"	383:5:9732:9788	5109279	1	True				
ANR	5109615	CallExpression	"snprintf ( var3 , sizeof ( var3 ) , ""struct.%s"" , struct_name )"		5109279	0					
ANR	5109616	Callee	snprintf		5109279	0					
ANR	5109617	Identifier	snprintf		5109279	0					
ANR	5109618	ArgumentList	var3		5109279	1					
ANR	5109619	Argument	var3		5109279	0					
ANR	5109620	Identifier	var3		5109279	0					
ANR	5109621	Argument	sizeof ( var3 )		5109279	1					
ANR	5109622	SizeofExpression	sizeof ( var3 )		5109279	0					
ANR	5109623	Sizeof	sizeof		5109279	0					
ANR	5109624	SizeofOperand	var3		5109279	1					
ANR	5109625	Argument	"""struct.%s"""		5109279	2					
ANR	5109626	PrimaryExpression	"""struct.%s"""		5109279	0					
ANR	5109627	Argument	struct_name		5109279	3					
ANR	5109628	Identifier	struct_name		5109279	0					
ANR	5109629	ExpressionStatement	"tfmt = sdb_const_get ( TDB , var3 , NULL )"	384:5:9795:9833	5109279	2	True				
ANR	5109630	AssignmentExpression	"tfmt = sdb_const_get ( TDB , var3 , NULL )"		5109279	0		=			
ANR	5109631	Identifier	tfmt		5109279	0					
ANR	5109632	CallExpression	"sdb_const_get ( TDB , var3 , NULL )"		5109279	1					
ANR	5109633	Callee	sdb_const_get		5109279	0					
ANR	5109634	Identifier	sdb_const_get		5109279	0					
ANR	5109635	ArgumentList	TDB		5109279	1					
ANR	5109636	Argument	TDB		5109279	0					
ANR	5109637	Identifier	TDB		5109279	0					
ANR	5109638	Argument	var3		5109279	1					
ANR	5109639	Identifier	var3		5109279	0					
ANR	5109640	Argument	NULL		5109279	2					
ANR	5109641	Identifier	NULL		5109279	0					
ANR	5109642	ExpressionStatement	isStruct = true	385:5:9840:9855	5109279	3	True				
ANR	5109643	AssignmentExpression	isStruct = true		5109279	0		=			
ANR	5109644	Identifier	isStruct		5109279	0					
ANR	5109645	Identifier	true		5109279	1					
ANR	5109646	ElseStatement	else		5109279	0					
ANR	5109647	CompoundStatement		42:11:1405:1405	5109279	0					
ANR	5109648	IfStatement	"if ( ! strncmp ( type , ""char"" , 5 ) && elements > 0 )"		5109279	0					
ANR	5109649	Condition	"! strncmp ( type , ""char"" , 5 ) && elements > 0"	388:9:9944:9985	5109279	0	True				
ANR	5109650	AndExpression	"! strncmp ( type , ""char"" , 5 ) && elements > 0"		5109279	0		&&			
ANR	5109651	UnaryOperationExpression	"! strncmp ( type , ""char"" , 5 )"		5109279	0					
ANR	5109652	UnaryOperator	!		5109279	0					
ANR	5109653	CallExpression	"strncmp ( type , ""char"" , 5 )"		5109279	1					
ANR	5109654	Callee	strncmp		5109279	0					
ANR	5109655	Identifier	strncmp		5109279	0					
ANR	5109656	ArgumentList	type		5109279	1					
ANR	5109657	Argument	type		5109279	0					
ANR	5109658	Identifier	type		5109279	0					
ANR	5109659	Argument	"""char"""		5109279	1					
ANR	5109660	PrimaryExpression	"""char"""		5109279	0					
ANR	5109661	Argument	5		5109279	2					
ANR	5109662	PrimaryExpression	5		5109279	0					
ANR	5109663	RelationalExpression	elements > 0		5109279	1		>			
ANR	5109664	Identifier	elements		5109279	0					
ANR	5109665	PrimaryExpression	0		5109279	1					
ANR	5109666	CompoundStatement		44:53:1525:1525	5109279	1					
ANR	5109667	ExpressionStatement	"tfmt = sdb_const_get ( TDB , ""type.char *"" , NULL )"	389:6:9996:10043	5109279	0	True				
ANR	5109668	AssignmentExpression	"tfmt = sdb_const_get ( TDB , ""type.char *"" , NULL )"		5109279	0		=			
ANR	5109669	Identifier	tfmt		5109279	0					
ANR	5109670	CallExpression	"sdb_const_get ( TDB , ""type.char *"" , NULL )"		5109279	1					
ANR	5109671	Callee	sdb_const_get		5109279	0					
ANR	5109672	Identifier	sdb_const_get		5109279	0					
ANR	5109673	ArgumentList	TDB		5109279	1					
ANR	5109674	Argument	TDB		5109279	0					
ANR	5109675	Identifier	TDB		5109279	0					
ANR	5109676	Argument	"""type.char *"""		5109279	1					
ANR	5109677	PrimaryExpression	"""type.char *"""		5109279	0					
ANR	5109678	Argument	NULL		5109279	2					
ANR	5109679	Identifier	NULL		5109279	0					
ANR	5109680	IfStatement	if ( tfmt && * tfmt == '*' )		5109279	1					
ANR	5109681	Condition	tfmt && * tfmt == '*'	390:10:10055:10074	5109279	0	True				
ANR	5109682	AndExpression	tfmt && * tfmt == '*'		5109279	0		&&			
ANR	5109683	Identifier	tfmt		5109279	0					
ANR	5109684	EqualityExpression	* tfmt == '*'		5109279	1		==			
ANR	5109685	UnaryOperationExpression	* tfmt		5109279	0					
ANR	5109686	UnaryOperator	*		5109279	0					
ANR	5109687	Identifier	tfmt		5109279	1					
ANR	5109688	PrimaryExpression	'*'		5109279	1					
ANR	5109689	CompoundStatement		46:32:1614:1614	5109279	1					
ANR	5109690	ExpressionStatement	tfmt ++	391:7:10086:10092	5109279	0	True				
ANR	5109691	PostIncDecOperationExpression	tfmt ++		5109279	0					
ANR	5109692	Identifier	tfmt		5109279	0					
ANR	5109693	IncDec	++		5109279	1					
ANR	5109694	ElseStatement	else		5109279	0					
ANR	5109695	CompoundStatement		49:12:1651:1651	5109279	0					
ANR	5109696	IfStatement	"if ( ! strncmp ( type , ""enum "" , 5 ) )"		5109279	0					
ANR	5109697	Condition	"! strncmp ( type , ""enum "" , 5 )"	394:10:10126:10152	5109279	0	True				
ANR	5109698	UnaryOperationExpression	"! strncmp ( type , ""enum "" , 5 )"		5109279	0					
ANR	5109699	UnaryOperator	!		5109279	0					
ANR	5109700	CallExpression	"strncmp ( type , ""enum "" , 5 )"		5109279	1					
ANR	5109701	Callee	strncmp		5109279	0					
ANR	5109702	Identifier	strncmp		5109279	0					
ANR	5109703	ArgumentList	type		5109279	1					
ANR	5109704	Argument	type		5109279	0					
ANR	5109705	Identifier	type		5109279	0					
ANR	5109706	Argument	"""enum """		5109279	1					
ANR	5109707	PrimaryExpression	"""enum """		5109279	0					
ANR	5109708	Argument	5		5109279	2					
ANR	5109709	PrimaryExpression	5		5109279	0					
ANR	5109710	CompoundStatement		50:39:1692:1692	5109279	1					
ANR	5109711	ExpressionStatement	"snprintf ( var3 , sizeof ( var3 ) , ""%s"" , type + 5 )"	395:7:10164:10210	5109279	0	True				
ANR	5109712	CallExpression	"snprintf ( var3 , sizeof ( var3 ) , ""%s"" , type + 5 )"		5109279	0					
ANR	5109713	Callee	snprintf		5109279	0					
ANR	5109714	Identifier	snprintf		5109279	0					
ANR	5109715	ArgumentList	var3		5109279	1					
ANR	5109716	Argument	var3		5109279	0					
ANR	5109717	Identifier	var3		5109279	0					
ANR	5109718	Argument	sizeof ( var3 )		5109279	1					
ANR	5109719	SizeofExpression	sizeof ( var3 )		5109279	0					
ANR	5109720	Sizeof	sizeof		5109279	0					
ANR	5109721	SizeofOperand	var3		5109279	1					
ANR	5109722	Argument	"""%s"""		5109279	2					
ANR	5109723	PrimaryExpression	"""%s"""		5109279	0					
ANR	5109724	Argument	type + 5		5109279	3					
ANR	5109725	AdditiveExpression	type + 5		5109279	0		+			
ANR	5109726	Identifier	type		5109279	0					
ANR	5109727	PrimaryExpression	5		5109279	1					
ANR	5109728	ExpressionStatement	isEnum = true	396:7:10219:10232	5109279	1	True				
ANR	5109729	AssignmentExpression	isEnum = true		5109279	0		=			
ANR	5109730	Identifier	isEnum		5109279	0					
ANR	5109731	Identifier	true		5109279	1					
ANR	5109732	ElseStatement	else		5109279	0					
ANR	5109733	CompoundStatement		53:13:1784:1784	5109279	0					
ANR	5109734	ExpressionStatement	"snprintf ( var3 , sizeof ( var3 ) , ""type.%s"" , type )"	398:7:10256:10303	5109279	0	True				
ANR	5109735	CallExpression	"snprintf ( var3 , sizeof ( var3 ) , ""type.%s"" , type )"		5109279	0					
ANR	5109736	Callee	snprintf		5109279	0					
ANR	5109737	Identifier	snprintf		5109279	0					
ANR	5109738	ArgumentList	var3		5109279	1					
ANR	5109739	Argument	var3		5109279	0					
ANR	5109740	Identifier	var3		5109279	0					
ANR	5109741	Argument	sizeof ( var3 )		5109279	1					
ANR	5109742	SizeofExpression	sizeof ( var3 )		5109279	0					
ANR	5109743	Sizeof	sizeof		5109279	0					
ANR	5109744	SizeofOperand	var3		5109279	1					
ANR	5109745	Argument	"""type.%s"""		5109279	2					
ANR	5109746	PrimaryExpression	"""type.%s"""		5109279	0					
ANR	5109747	Argument	type		5109279	3					
ANR	5109748	Identifier	type		5109279	0					
ANR	5109749	ExpressionStatement	"tfmt = sdb_const_get ( TDB , var3 , NULL )"	400:6:10319:10357	5109279	1	True				
ANR	5109750	AssignmentExpression	"tfmt = sdb_const_get ( TDB , var3 , NULL )"		5109279	0		=			
ANR	5109751	Identifier	tfmt		5109279	0					
ANR	5109752	CallExpression	"sdb_const_get ( TDB , var3 , NULL )"		5109279	1					
ANR	5109753	Callee	sdb_const_get		5109279	0					
ANR	5109754	Identifier	sdb_const_get		5109279	0					
ANR	5109755	ArgumentList	TDB		5109279	1					
ANR	5109756	Argument	TDB		5109279	0					
ANR	5109757	Identifier	TDB		5109279	0					
ANR	5109758	Argument	var3		5109279	1					
ANR	5109759	Identifier	var3		5109279	0					
ANR	5109760	Argument	NULL		5109279	2					
ANR	5109761	Identifier	NULL		5109279	0					
ANR	5109762	IfStatement	if ( isfp )		5109279	2					
ANR	5109763	Condition	isfp	404:8:10381:10384	5109279	0	True				
ANR	5109764	Identifier	isfp		5109279	0					
ANR	5109765	CompoundStatement		60:14:1924:1924	5109279	1					
ANR	5109766	ExpressionStatement	"fmt = r_str_append ( fmt , ""p"" )"	406:5:10451:10480	5109279	0	True				
ANR	5109767	AssignmentExpression	"fmt = r_str_append ( fmt , ""p"" )"		5109279	0		=			
ANR	5109768	Identifier	fmt		5109279	0					
ANR	5109769	CallExpression	"r_str_append ( fmt , ""p"" )"		5109279	1					
ANR	5109770	Callee	r_str_append		5109279	0					
ANR	5109771	Identifier	r_str_append		5109279	0					
ANR	5109772	ArgumentList	fmt		5109279	1					
ANR	5109773	Argument	fmt		5109279	0					
ANR	5109774	Identifier	fmt		5109279	0					
ANR	5109775	Argument	"""p"""		5109279	1					
ANR	5109776	PrimaryExpression	"""p"""		5109279	0					
ANR	5109777	ExpressionStatement	"vars = r_str_append ( vars , p )"	407:5:10487:10516	5109279	1	True				
ANR	5109778	AssignmentExpression	"vars = r_str_append ( vars , p )"		5109279	0		=			
ANR	5109779	Identifier	vars		5109279	0					
ANR	5109780	CallExpression	"r_str_append ( vars , p )"		5109279	1					
ANR	5109781	Callee	r_str_append		5109279	0					
ANR	5109782	Identifier	r_str_append		5109279	0					
ANR	5109783	ArgumentList	vars		5109279	1					
ANR	5109784	Argument	vars		5109279	0					
ANR	5109785	Identifier	vars		5109279	0					
ANR	5109786	Argument	p		5109279	1					
ANR	5109787	Identifier	p		5109279	0					
ANR	5109788	ExpressionStatement	"vars = r_str_append ( vars , "" "" )"	408:5:10523:10554	5109279	2	True				
ANR	5109789	AssignmentExpression	"vars = r_str_append ( vars , "" "" )"		5109279	0		=			
ANR	5109790	Identifier	vars		5109279	0					
ANR	5109791	CallExpression	"r_str_append ( vars , "" "" )"		5109279	1					
ANR	5109792	Callee	r_str_append		5109279	0					
ANR	5109793	Identifier	r_str_append		5109279	0					
ANR	5109794	ArgumentList	vars		5109279	1					
ANR	5109795	Argument	vars		5109279	0					
ANR	5109796	Identifier	vars		5109279	0					
ANR	5109797	Argument	""" """		5109279	1					
ANR	5109798	PrimaryExpression	""" """		5109279	0					
ANR	5109799	ElseStatement	else		5109279	0					
ANR	5109800	IfStatement	if ( tfmt )		5109279	0					
ANR	5109801	Condition	tfmt	409:15:10571:10574	5109279	0	True				
ANR	5109802	Identifier	tfmt		5109279	0					
ANR	5109803	CompoundStatement		65:21:2114:2114	5109279	1					
ANR	5109804	ExpressionStatement	filter_type ( type )	410:5:10584:10602	5109279	0	True				
ANR	5109805	CallExpression	filter_type ( type )		5109279	0					
ANR	5109806	Callee	filter_type		5109279	0					
ANR	5109807	Identifier	filter_type		5109279	0					
ANR	5109808	ArgumentList	type		5109279	1					
ANR	5109809	Argument	type		5109279	0					
ANR	5109810	Identifier	type		5109279	0					
ANR	5109811	IfStatement	if ( elements > 0 )		5109279	1					
ANR	5109812	Condition	elements > 0	411:9:10613:10624	5109279	0	True				
ANR	5109813	RelationalExpression	elements > 0		5109279	0		>			
ANR	5109814	Identifier	elements		5109279	0					
ANR	5109815	PrimaryExpression	0		5109279	1					
ANR	5109816	CompoundStatement		67:23:2164:2164	5109279	1					
ANR	5109817	ExpressionStatement	"fmt = r_str_appendf ( fmt , ""[%d]"" , elements )"	412:6:10635:10678	5109279	0	True				
ANR	5109818	AssignmentExpression	"fmt = r_str_appendf ( fmt , ""[%d]"" , elements )"		5109279	0		=			
ANR	5109819	Identifier	fmt		5109279	0					
ANR	5109820	CallExpression	"r_str_appendf ( fmt , ""[%d]"" , elements )"		5109279	1					
ANR	5109821	Callee	r_str_appendf		5109279	0					
ANR	5109822	Identifier	r_str_appendf		5109279	0					
ANR	5109823	ArgumentList	fmt		5109279	1					
ANR	5109824	Argument	fmt		5109279	0					
ANR	5109825	Identifier	fmt		5109279	0					
ANR	5109826	Argument	"""[%d]"""		5109279	1					
ANR	5109827	PrimaryExpression	"""[%d]"""		5109279	0					
ANR	5109828	Argument	elements		5109279	2					
ANR	5109829	Identifier	elements		5109279	0					
ANR	5109830	IfStatement	if ( isStruct )		5109279	2					
ANR	5109831	Condition	isStruct	414:9:10696:10703	5109279	0	True				
ANR	5109832	Identifier	isStruct		5109279	0					
ANR	5109833	CompoundStatement		70:19:2243:2243	5109279	1					
ANR	5109834	ExpressionStatement	"fmt = r_str_append ( fmt , ""?"" )"	415:6:10714:10743	5109279	0	True				
ANR	5109835	AssignmentExpression	"fmt = r_str_append ( fmt , ""?"" )"		5109279	0		=			
ANR	5109836	Identifier	fmt		5109279	0					
ANR	5109837	CallExpression	"r_str_append ( fmt , ""?"" )"		5109279	1					
ANR	5109838	Callee	r_str_append		5109279	0					
ANR	5109839	Identifier	r_str_append		5109279	0					
ANR	5109840	ArgumentList	fmt		5109279	1					
ANR	5109841	Argument	fmt		5109279	0					
ANR	5109842	Identifier	fmt		5109279	0					
ANR	5109843	Argument	"""?"""		5109279	1					
ANR	5109844	PrimaryExpression	"""?"""		5109279	0					
ANR	5109845	ExpressionStatement	"vars = r_str_appendf ( vars , ""(%s)%s"" , struct_name , p )"	416:6:10751:10804	5109279	1	True				
ANR	5109846	AssignmentExpression	"vars = r_str_appendf ( vars , ""(%s)%s"" , struct_name , p )"		5109279	0		=			
ANR	5109847	Identifier	vars		5109279	0					
ANR	5109848	CallExpression	"r_str_appendf ( vars , ""(%s)%s"" , struct_name , p )"		5109279	1					
ANR	5109849	Callee	r_str_appendf		5109279	0					
ANR	5109850	Identifier	r_str_appendf		5109279	0					
ANR	5109851	ArgumentList	vars		5109279	1					
ANR	5109852	Argument	vars		5109279	0					
ANR	5109853	Identifier	vars		5109279	0					
ANR	5109854	Argument	"""(%s)%s"""		5109279	1					
ANR	5109855	PrimaryExpression	"""(%s)%s"""		5109279	0					
ANR	5109856	Argument	struct_name		5109279	2					
ANR	5109857	Identifier	struct_name		5109279	0					
ANR	5109858	Argument	p		5109279	3					
ANR	5109859	Identifier	p		5109279	0					
ANR	5109860	ExpressionStatement	"vars = r_str_append ( vars , "" "" )"	417:6:10812:10843	5109279	2	True				
ANR	5109861	AssignmentExpression	"vars = r_str_append ( vars , "" "" )"		5109279	0		=			
ANR	5109862	Identifier	vars		5109279	0					
ANR	5109863	CallExpression	"r_str_append ( vars , "" "" )"		5109279	1					
ANR	5109864	Callee	r_str_append		5109279	0					
ANR	5109865	Identifier	r_str_append		5109279	0					
ANR	5109866	ArgumentList	vars		5109279	1					
ANR	5109867	Argument	vars		5109279	0					
ANR	5109868	Identifier	vars		5109279	0					
ANR	5109869	Argument	""" """		5109279	1					
ANR	5109870	PrimaryExpression	""" """		5109279	0					
ANR	5109871	ElseStatement	else		5109279	0					
ANR	5109872	IfStatement	if ( isEnum )		5109279	0					
ANR	5109873	Condition	isEnum	418:16:10861:10866	5109279	0	True				
ANR	5109874	Identifier	isEnum		5109279	0					
ANR	5109875	CompoundStatement		74:24:2406:2406	5109279	1					
ANR	5109876	ExpressionStatement	"fmt = r_str_append ( fmt , ""E"" )"	419:6:10877:10906	5109279	0	True				
ANR	5109877	AssignmentExpression	"fmt = r_str_append ( fmt , ""E"" )"		5109279	0		=			
ANR	5109878	Identifier	fmt		5109279	0					
ANR	5109879	CallExpression	"r_str_append ( fmt , ""E"" )"		5109279	1					
ANR	5109880	Callee	r_str_append		5109279	0					
ANR	5109881	Identifier	r_str_append		5109279	0					
ANR	5109882	ArgumentList	fmt		5109279	1					
ANR	5109883	Argument	fmt		5109279	0					
ANR	5109884	Identifier	fmt		5109279	0					
ANR	5109885	Argument	"""E"""		5109279	1					
ANR	5109886	PrimaryExpression	"""E"""		5109279	0					
ANR	5109887	ExpressionStatement	"vars = r_str_appendf ( vars , ""(%s)%s"" , type + 5 , p )"	420:6:10914:10964	5109279	1	True				
ANR	5109888	AssignmentExpression	"vars = r_str_appendf ( vars , ""(%s)%s"" , type + 5 , p )"		5109279	0		=			
ANR	5109889	Identifier	vars		5109279	0					
ANR	5109890	CallExpression	"r_str_appendf ( vars , ""(%s)%s"" , type + 5 , p )"		5109279	1					
ANR	5109891	Callee	r_str_appendf		5109279	0					
ANR	5109892	Identifier	r_str_appendf		5109279	0					
ANR	5109893	ArgumentList	vars		5109279	1					
ANR	5109894	Argument	vars		5109279	0					
ANR	5109895	Identifier	vars		5109279	0					
ANR	5109896	Argument	"""(%s)%s"""		5109279	1					
ANR	5109897	PrimaryExpression	"""(%s)%s"""		5109279	0					
ANR	5109898	Argument	type + 5		5109279	2					
ANR	5109899	AdditiveExpression	type + 5		5109279	0		+			
ANR	5109900	Identifier	type		5109279	0					
ANR	5109901	PrimaryExpression	5		5109279	1					
ANR	5109902	Argument	p		5109279	3					
ANR	5109903	Identifier	p		5109279	0					
ANR	5109904	ExpressionStatement	"vars = r_str_append ( vars , "" "" )"	421:6:10972:11003	5109279	2	True				
ANR	5109905	AssignmentExpression	"vars = r_str_append ( vars , "" "" )"		5109279	0		=			
ANR	5109906	Identifier	vars		5109279	0					
ANR	5109907	CallExpression	"r_str_append ( vars , "" "" )"		5109279	1					
ANR	5109908	Callee	r_str_append		5109279	0					
ANR	5109909	Identifier	r_str_append		5109279	0					
ANR	5109910	ArgumentList	vars		5109279	1					
ANR	5109911	Argument	vars		5109279	0					
ANR	5109912	Identifier	vars		5109279	0					
ANR	5109913	Argument	""" """		5109279	1					
ANR	5109914	PrimaryExpression	""" """		5109279	0					
ANR	5109915	ElseStatement	else		5109279	0					
ANR	5109916	CompoundStatement		78:12:2554:2554	5109279	0					
ANR	5109917	ExpressionStatement	"fmt = r_str_append ( fmt , tfmt )"	423:6:11025:11055	5109279	0	True				
ANR	5109918	AssignmentExpression	"fmt = r_str_append ( fmt , tfmt )"		5109279	0		=			
ANR	5109919	Identifier	fmt		5109279	0					
ANR	5109920	CallExpression	"r_str_append ( fmt , tfmt )"		5109279	1					
ANR	5109921	Callee	r_str_append		5109279	0					
ANR	5109922	Identifier	r_str_append		5109279	0					
ANR	5109923	ArgumentList	fmt		5109279	1					
ANR	5109924	Argument	fmt		5109279	0					
ANR	5109925	Identifier	fmt		5109279	0					
ANR	5109926	Argument	tfmt		5109279	1					
ANR	5109927	Identifier	tfmt		5109279	0					
ANR	5109928	ExpressionStatement	"vars = r_str_append ( vars , p )"	424:6:11063:11092	5109279	1	True				
ANR	5109929	AssignmentExpression	"vars = r_str_append ( vars , p )"		5109279	0		=			
ANR	5109930	Identifier	vars		5109279	0					
ANR	5109931	CallExpression	"r_str_append ( vars , p )"		5109279	1					
ANR	5109932	Callee	r_str_append		5109279	0					
ANR	5109933	Identifier	r_str_append		5109279	0					
ANR	5109934	ArgumentList	vars		5109279	1					
ANR	5109935	Argument	vars		5109279	0					
ANR	5109936	Identifier	vars		5109279	0					
ANR	5109937	Argument	p		5109279	1					
ANR	5109938	Identifier	p		5109279	0					
ANR	5109939	ExpressionStatement	"vars = r_str_append ( vars , "" "" )"	425:6:11100:11131	5109279	2	True				
ANR	5109940	AssignmentExpression	"vars = r_str_append ( vars , "" "" )"		5109279	0		=			
ANR	5109941	Identifier	vars		5109279	0					
ANR	5109942	CallExpression	"r_str_append ( vars , "" "" )"		5109279	1					
ANR	5109943	Callee	r_str_append		5109279	0					
ANR	5109944	Identifier	r_str_append		5109279	0					
ANR	5109945	ArgumentList	vars		5109279	1					
ANR	5109946	Argument	vars		5109279	0					
ANR	5109947	Identifier	vars		5109279	0					
ANR	5109948	Argument	""" """		5109279	1					
ANR	5109949	PrimaryExpression	""" """		5109279	0					
ANR	5109950	ElseStatement	else		5109279	0					
ANR	5109951	CompoundStatement		83:11:2688:2688	5109279	0					
ANR	5109952	ExpressionStatement	"eprintf ( ""Cannot resolve type '%s'\\n"" , var3 )"	428:5:11158:11202	5109279	0	True				
ANR	5109953	CallExpression	"eprintf ( ""Cannot resolve type '%s'\\n"" , var3 )"		5109279	0					
ANR	5109954	Callee	eprintf		5109279	0					
ANR	5109955	Identifier	eprintf		5109279	0					
ANR	5109956	ArgumentList	"""Cannot resolve type '%s'\\n"""		5109279	1					
ANR	5109957	Argument	"""Cannot resolve type '%s'\\n"""		5109279	0					
ANR	5109958	PrimaryExpression	"""Cannot resolve type '%s'\\n"""		5109279	0					
ANR	5109959	Argument	var3		5109279	1					
ANR	5109960	Identifier	var3		5109279	0					
ANR	5109961	ExpressionStatement	free ( type )	431:3:11218:11229	5109279	11	True				
ANR	5109962	CallExpression	free ( type )		5109279	0					
ANR	5109963	Callee	free		5109279	0					
ANR	5109964	Identifier	free		5109279	0					
ANR	5109965	ArgumentList	type		5109279	1					
ANR	5109966	Argument	type		5109279	0					
ANR	5109967	Identifier	type		5109279	0					
ANR	5109968	ExpressionStatement	free ( p )	432:3:11234:11242	5109279	12	True				
ANR	5109969	CallExpression	free ( p )		5109279	0					
ANR	5109970	Callee	free		5109279	0					
ANR	5109971	Identifier	free		5109279	0					
ANR	5109972	ArgumentList	p		5109279	1					
ANR	5109973	Argument	p		5109279	0					
ANR	5109974	Identifier	p		5109279	0					
ANR	5109975	ExpressionStatement	"fmt = r_str_append ( fmt , "" "" )"	434:2:11250:11279	5109279	1	True				
ANR	5109976	AssignmentExpression	"fmt = r_str_append ( fmt , "" "" )"		5109279	0		=			
ANR	5109977	Identifier	fmt		5109279	0					
ANR	5109978	CallExpression	"r_str_append ( fmt , "" "" )"		5109279	1					
ANR	5109979	Callee	r_str_append		5109279	0					
ANR	5109980	Identifier	r_str_append		5109279	0					
ANR	5109981	ArgumentList	fmt		5109279	1					
ANR	5109982	Argument	fmt		5109279	0					
ANR	5109983	Identifier	fmt		5109279	0					
ANR	5109984	Argument	""" """		5109279	1					
ANR	5109985	PrimaryExpression	""" """		5109279	0					
ANR	5109986	ExpressionStatement	"fmt = r_str_append ( fmt , vars )"	435:2:11283:11313	5109279	2	True				
ANR	5109987	AssignmentExpression	"fmt = r_str_append ( fmt , vars )"		5109279	0		=			
ANR	5109988	Identifier	fmt		5109279	0					
ANR	5109989	CallExpression	"r_str_append ( fmt , vars )"		5109279	1					
ANR	5109990	Callee	r_str_append		5109279	0					
ANR	5109991	Identifier	r_str_append		5109279	0					
ANR	5109992	ArgumentList	fmt		5109279	1					
ANR	5109993	Argument	fmt		5109279	0					
ANR	5109994	Identifier	fmt		5109279	0					
ANR	5109995	Argument	vars		5109279	1					
ANR	5109996	Identifier	vars		5109279	0					
ANR	5109997	ExpressionStatement	free ( vars )	436:2:11317:11328	5109279	3	True				
ANR	5109998	CallExpression	free ( vars )		5109279	0					
ANR	5109999	Callee	free		5109279	0					
ANR	5110000	Identifier	free		5109279	0					
ANR	5110001	ArgumentList	vars		5109279	1					
ANR	5110002	Argument	vars		5109279	0					
ANR	5110003	Identifier	vars		5109279	0					
ANR	5110004	ReturnStatement	return fmt ;	437:2:11332:11342	5109279	4	True				
ANR	5110005	Identifier	fmt		5109279	0					
ANR	5110006	IfStatement	"if ( ! strcmp ( kind , ""typedef"" ) )"		5109279	8					
ANR	5110007	Condition	"! strcmp ( kind , ""typedef"" )"	439:5:11352:11376	5109279	0	True				
ANR	5110008	UnaryOperationExpression	"! strcmp ( kind , ""typedef"" )"		5109279	0					
ANR	5110009	UnaryOperator	!		5109279	0					
ANR	5110010	CallExpression	"strcmp ( kind , ""typedef"" )"		5109279	1					
ANR	5110011	Callee	strcmp		5109279	0					
ANR	5110012	Identifier	strcmp		5109279	0					
ANR	5110013	ArgumentList	kind		5109279	1					
ANR	5110014	Argument	kind		5109279	0					
ANR	5110015	Identifier	kind		5109279	0					
ANR	5110016	Argument	"""typedef"""		5109279	1					
ANR	5110017	PrimaryExpression	"""typedef"""		5109279	0					
ANR	5110018	CompoundStatement		97:2:2971:3021	5109279	1					
ANR	5110019	ExpressionStatement	"snprintf ( var2 , sizeof ( var2 ) , ""typedef.%s"" , t )"	440:2:11383:11430	5109279	0	True				
ANR	5110020	CallExpression	"snprintf ( var2 , sizeof ( var2 ) , ""typedef.%s"" , t )"		5109279	0					
ANR	5110021	Callee	snprintf		5109279	0					
ANR	5110022	Identifier	snprintf		5109279	0					
ANR	5110023	ArgumentList	var2		5109279	1					
ANR	5110024	Argument	var2		5109279	0					
ANR	5110025	Identifier	var2		5109279	0					
ANR	5110026	Argument	sizeof ( var2 )		5109279	1					
ANR	5110027	SizeofExpression	sizeof ( var2 )		5109279	0					
ANR	5110028	Sizeof	sizeof		5109279	0					
ANR	5110029	SizeofOperand	var2		5109279	1					
ANR	5110030	Argument	"""typedef.%s"""		5109279	2					
ANR	5110031	PrimaryExpression	"""typedef.%s"""		5109279	0					
ANR	5110032	Argument	t		5109279	3					
ANR	5110033	Identifier	t		5109279	0					
ANR	5110034	IdentifierDeclStatement	"const char * type = sdb_const_get ( TDB , var2 , NULL ) ;"	441:2:11434:11484	5109279	1	True				
ANR	5110035	IdentifierDecl	"* type = sdb_const_get ( TDB , var2 , NULL )"		5109279	0					
ANR	5110036	IdentifierDeclType	const char *		5109279	0					
ANR	5110037	Identifier	type		5109279	1					
ANR	5110038	AssignmentExpression	"* type = sdb_const_get ( TDB , var2 , NULL )"		5109279	2		=			
ANR	5110039	Identifier	type		5109279	0					
ANR	5110040	CallExpression	"sdb_const_get ( TDB , var2 , NULL )"		5109279	1					
ANR	5110041	Callee	sdb_const_get		5109279	0					
ANR	5110042	Identifier	sdb_const_get		5109279	0					
ANR	5110043	ArgumentList	TDB		5109279	1					
ANR	5110044	Argument	TDB		5109279	0					
ANR	5110045	Identifier	TDB		5109279	0					
ANR	5110046	Argument	var2		5109279	1					
ANR	5110047	Identifier	var2		5109279	0					
ANR	5110048	Argument	NULL		5109279	2					
ANR	5110049	Identifier	NULL		5109279	0					
ANR	5110050	IfStatement	"if ( type && r_str_startswith ( type , ""struct "" ) && strcmp ( type + 7 , t ) )"		5109279	2					
ANR	5110051	Condition	"type && r_str_startswith ( type , ""struct "" ) && strcmp ( type + 7 , t )"	443:6:11522:11587	5109279	0	True				
ANR	5110052	AndExpression	"type && r_str_startswith ( type , ""struct "" ) && strcmp ( type + 7 , t )"		5109279	0		&&			
ANR	5110053	Identifier	type		5109279	0					
ANR	5110054	AndExpression	"r_str_startswith ( type , ""struct "" ) && strcmp ( type + 7 , t )"		5109279	1		&&			
ANR	5110055	CallExpression	"r_str_startswith ( type , ""struct "" )"		5109279	0					
ANR	5110056	Callee	r_str_startswith		5109279	0					
ANR	5110057	Identifier	r_str_startswith		5109279	0					
ANR	5110058	ArgumentList	type		5109279	1					
ANR	5110059	Argument	type		5109279	0					
ANR	5110060	Identifier	type		5109279	0					
ANR	5110061	Argument	"""struct """		5109279	1					
ANR	5110062	PrimaryExpression	"""struct """		5109279	0					
ANR	5110063	CallExpression	"strcmp ( type + 7 , t )"		5109279	1					
ANR	5110064	Callee	strcmp		5109279	0					
ANR	5110065	Identifier	strcmp		5109279	0					
ANR	5110066	ArgumentList	type + 7		5109279	1					
ANR	5110067	Argument	type + 7		5109279	0					
ANR	5110068	AdditiveExpression	type + 7		5109279	0		+			
ANR	5110069	Identifier	type		5109279	0					
ANR	5110070	PrimaryExpression	7		5109279	1					
ANR	5110071	Argument	t		5109279	1					
ANR	5110072	Identifier	t		5109279	0					
ANR	5110073	CompoundStatement		99:74:3127:3127	5109279	1					
ANR	5110074	ReturnStatement	"return r_type_format ( TDB , type + 7 ) ;"	444:3:11595:11631	5109279	0	True				
ANR	5110075	CallExpression	"r_type_format ( TDB , type + 7 )"		5109279	0					
ANR	5110076	Callee	r_type_format		5109279	0					
ANR	5110077	Identifier	r_type_format		5109279	0					
ANR	5110078	ArgumentList	TDB		5109279	1					
ANR	5110079	Argument	TDB		5109279	0					
ANR	5110080	Identifier	TDB		5109279	0					
ANR	5110081	Argument	type + 7		5109279	1					
ANR	5110082	AdditiveExpression	type + 7		5109279	0		+			
ANR	5110083	Identifier	type		5109279	0					
ANR	5110084	PrimaryExpression	7		5109279	1					
ANR	5110085	ReturnStatement	return NULL ;	447:1:11641:11652	5109279	9	True				
ANR	5110086	Identifier	NULL		5109279	0					
ANR	5110087	ReturnType	R_API char *		5109279	1					
ANR	5110088	Identifier	r_type_format		5109279	2					
ANR	5110089	ParameterList	"Sdb * TDB , const char * t"		5109279	3					
ANR	5110090	Parameter	Sdb * TDB	345:26:8437:8444	5109279	0	True				
ANR	5110091	ParameterType	Sdb *		5109279	0					
ANR	5110092	Identifier	TDB		5109279	1					
ANR	5110093	Parameter	const char * t	345:36:8447:8459	5109279	1	True				
ANR	5110094	ParameterType	const char *		5109279	0					
ANR	5110095	Identifier	t		5109279	1					
ANR	5110096	CFGEntryNode	ENTRY		5109279		True				
ANR	5110097	CFGExitNode	EXIT		5109279		True				
ANR	5110098	Symbol	r_str_append		5109279						
ANR	5110099	Symbol	isfp		5109279						
ANR	5110100	Symbol	sdb_array_get		5109279						
ANR	5110101	Symbol	fmt		5109279						
ANR	5110102	Symbol	type		5109279						
ANR	5110103	Symbol	sdb_const_get		5109279						
ANR	5110104	Symbol	strncmp		5109279						
ANR	5110105	Symbol	TDB		5109279						
ANR	5110106	Symbol	vars		5109279						
ANR	5110107	Symbol	var3		5109279						
ANR	5110108	Symbol	var2		5109279						
ANR	5110109	Symbol	sdb_array_get_num		5109279						
ANR	5110110	Symbol	isStruct		5109279						
ANR	5110111	Symbol	sdb_array_size		5109279						
ANR	5110112	Symbol	strcmp		5109279						
ANR	5110113	Symbol	r_str_startswith		5109279						
ANR	5110114	Symbol	NULL		5109279						
ANR	5110115	Symbol	var		5109279						
ANR	5110116	Symbol	kind		5109279						
ANR	5110117	Symbol	false		5109279						
ANR	5110118	Symbol	isEnum		5109279						
ANR	5110119	Symbol	* tfmt		5109279						
ANR	5110120	Symbol	n		5109279						
ANR	5110121	Symbol	tfmt		5109279						
ANR	5110122	Symbol	p		5109279						
ANR	5110123	Symbol	t		5109279						
ANR	5110124	Symbol	strstr		5109279						
ANR	5110125	Symbol	elements		5109279						
ANR	5110126	Symbol	r_str_appendf		5109279						
ANR	5110127	Symbol	true		5109279						
ANR	5110128	Symbol	alen		5109279						
ANR	5110129	Symbol	struct_name		5109279						
ANR	5110130	Symbol	strdup		5109279						
ANR	5110131	Symbol	r_type_format		5109279						
ANR	5110132	Function	r_type_del	450:0:11657:13293							
ANR	5110133	FunctionDef	"r_type_del (Sdb * TDB , const char * name)"		5110132	0					
ANR	5110134	CompoundStatement		450:50:11707:13293	5110132	0					
ANR	5110135	IdentifierDeclStatement	"const char * kind = sdb_const_get ( TDB , name , 0 ) ;"	451:1:11710:11757	5110132	0	True				
ANR	5110136	IdentifierDecl	"* kind = sdb_const_get ( TDB , name , 0 )"		5110132	0					
ANR	5110137	IdentifierDeclType	const char *		5110132	0					
ANR	5110138	Identifier	kind		5110132	1					
ANR	5110139	AssignmentExpression	"* kind = sdb_const_get ( TDB , name , 0 )"		5110132	2		=			
ANR	5110140	Identifier	kind		5110132	0					
ANR	5110141	CallExpression	"sdb_const_get ( TDB , name , 0 )"		5110132	1					
ANR	5110142	Callee	sdb_const_get		5110132	0					
ANR	5110143	Identifier	sdb_const_get		5110132	0					
ANR	5110144	ArgumentList	TDB		5110132	1					
ANR	5110145	Argument	TDB		5110132	0					
ANR	5110146	Identifier	TDB		5110132	0					
ANR	5110147	Argument	name		5110132	1					
ANR	5110148	Identifier	name		5110132	0					
ANR	5110149	Argument	0		5110132	2					
ANR	5110150	PrimaryExpression	0		5110132	0					
ANR	5110151	IfStatement	if ( ! kind )		5110132	1					
ANR	5110152	Condition	! kind	452:5:11764:11768	5110132	0	True				
ANR	5110153	UnaryOperationExpression	! kind		5110132	0					
ANR	5110154	UnaryOperator	!		5110132	0					
ANR	5110155	Identifier	kind		5110132	1					
ANR	5110156	CompoundStatement		3:12:63:63	5110132	1					
ANR	5110157	ReturnStatement	return ;	453:2:11775:11781	5110132	0	True				
ANR	5110158	IfStatement	"if ( ! strcmp ( kind , ""type"" ) )"		5110132	2					
ANR	5110159	Condition	"! strcmp ( kind , ""type"" )"	455:5:11791:11812	5110132	0	True				
ANR	5110160	UnaryOperationExpression	"! strcmp ( kind , ""type"" )"		5110132	0					
ANR	5110161	UnaryOperator	!		5110132	0					
ANR	5110162	CallExpression	"strcmp ( kind , ""type"" )"		5110132	1					
ANR	5110163	Callee	strcmp		5110132	0					
ANR	5110164	Identifier	strcmp		5110132	0					
ANR	5110165	ArgumentList	kind		5110132	1					
ANR	5110166	Argument	kind		5110132	0					
ANR	5110167	Identifier	kind		5110132	0					
ANR	5110168	Argument	"""type"""		5110132	1					
ANR	5110169	PrimaryExpression	"""type"""		5110132	0					
ANR	5110170	CompoundStatement		6:29:107:107	5110132	1					
ANR	5110171	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""type.%s"" , name ) , 0 )"	456:2:11819:11864	5110132	0	True				
ANR	5110172	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""type.%s"" , name ) , 0 )"		5110132	0					
ANR	5110173	Callee	sdb_unset		5110132	0					
ANR	5110174	Identifier	sdb_unset		5110132	0					
ANR	5110175	ArgumentList	TDB		5110132	1					
ANR	5110176	Argument	TDB		5110132	0					
ANR	5110177	Identifier	TDB		5110132	0					
ANR	5110178	Argument	"sdb_fmt ( ""type.%s"" , name )"		5110132	1					
ANR	5110179	CallExpression	"sdb_fmt ( ""type.%s"" , name )"		5110132	0					
ANR	5110180	Callee	sdb_fmt		5110132	0					
ANR	5110181	Identifier	sdb_fmt		5110132	0					
ANR	5110182	ArgumentList	"""type.%s"""		5110132	1					
ANR	5110183	Argument	"""type.%s"""		5110132	0					
ANR	5110184	PrimaryExpression	"""type.%s"""		5110132	0					
ANR	5110185	Argument	name		5110132	1					
ANR	5110186	Identifier	name		5110132	0					
ANR	5110187	Argument	0		5110132	2					
ANR	5110188	PrimaryExpression	0		5110132	0					
ANR	5110189	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""type.%s.size"" , name ) , 0 )"	457:2:11868:11918	5110132	1	True				
ANR	5110190	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""type.%s.size"" , name ) , 0 )"		5110132	0					
ANR	5110191	Callee	sdb_unset		5110132	0					
ANR	5110192	Identifier	sdb_unset		5110132	0					
ANR	5110193	ArgumentList	TDB		5110132	1					
ANR	5110194	Argument	TDB		5110132	0					
ANR	5110195	Identifier	TDB		5110132	0					
ANR	5110196	Argument	"sdb_fmt ( ""type.%s.size"" , name )"		5110132	1					
ANR	5110197	CallExpression	"sdb_fmt ( ""type.%s.size"" , name )"		5110132	0					
ANR	5110198	Callee	sdb_fmt		5110132	0					
ANR	5110199	Identifier	sdb_fmt		5110132	0					
ANR	5110200	ArgumentList	"""type.%s.size"""		5110132	1					
ANR	5110201	Argument	"""type.%s.size"""		5110132	0					
ANR	5110202	PrimaryExpression	"""type.%s.size"""		5110132	0					
ANR	5110203	Argument	name		5110132	1					
ANR	5110204	Identifier	name		5110132	0					
ANR	5110205	Argument	0		5110132	2					
ANR	5110206	PrimaryExpression	0		5110132	0					
ANR	5110207	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""type.%s.meta"" , name ) , 0 )"	458:2:11922:11972	5110132	2	True				
ANR	5110208	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""type.%s.meta"" , name ) , 0 )"		5110132	0					
ANR	5110209	Callee	sdb_unset		5110132	0					
ANR	5110210	Identifier	sdb_unset		5110132	0					
ANR	5110211	ArgumentList	TDB		5110132	1					
ANR	5110212	Argument	TDB		5110132	0					
ANR	5110213	Identifier	TDB		5110132	0					
ANR	5110214	Argument	"sdb_fmt ( ""type.%s.meta"" , name )"		5110132	1					
ANR	5110215	CallExpression	"sdb_fmt ( ""type.%s.meta"" , name )"		5110132	0					
ANR	5110216	Callee	sdb_fmt		5110132	0					
ANR	5110217	Identifier	sdb_fmt		5110132	0					
ANR	5110218	ArgumentList	"""type.%s.meta"""		5110132	1					
ANR	5110219	Argument	"""type.%s.meta"""		5110132	0					
ANR	5110220	PrimaryExpression	"""type.%s.meta"""		5110132	0					
ANR	5110221	Argument	name		5110132	1					
ANR	5110222	Identifier	name		5110132	0					
ANR	5110223	Argument	0		5110132	2					
ANR	5110224	PrimaryExpression	0		5110132	0					
ANR	5110225	ExpressionStatement	"sdb_unset ( TDB , name , 0 )"	459:2:11976:12000	5110132	3	True				
ANR	5110226	CallExpression	"sdb_unset ( TDB , name , 0 )"		5110132	0					
ANR	5110227	Callee	sdb_unset		5110132	0					
ANR	5110228	Identifier	sdb_unset		5110132	0					
ANR	5110229	ArgumentList	TDB		5110132	1					
ANR	5110230	Argument	TDB		5110132	0					
ANR	5110231	Identifier	TDB		5110132	0					
ANR	5110232	Argument	name		5110132	1					
ANR	5110233	Identifier	name		5110132	0					
ANR	5110234	Argument	0		5110132	2					
ANR	5110235	PrimaryExpression	0		5110132	0					
ANR	5110236	ElseStatement	else		5110132	0					
ANR	5110237	IfStatement	"if ( ! strcmp ( kind , ""struct"" ) || ! strcmp ( kind , ""union"" ) )"		5110132	0					
ANR	5110238	Condition	"! strcmp ( kind , ""struct"" ) || ! strcmp ( kind , ""union"" )"	460:12:12014:12064	5110132	0	True				
ANR	5110239	OrExpression	"! strcmp ( kind , ""struct"" ) || ! strcmp ( kind , ""union"" )"		5110132	0		||			
ANR	5110240	UnaryOperationExpression	"! strcmp ( kind , ""struct"" )"		5110132	0					
ANR	5110241	UnaryOperator	!		5110132	0					
ANR	5110242	CallExpression	"strcmp ( kind , ""struct"" )"		5110132	1					
ANR	5110243	Callee	strcmp		5110132	0					
ANR	5110244	Identifier	strcmp		5110132	0					
ANR	5110245	ArgumentList	kind		5110132	1					
ANR	5110246	Argument	kind		5110132	0					
ANR	5110247	Identifier	kind		5110132	0					
ANR	5110248	Argument	"""struct"""		5110132	1					
ANR	5110249	PrimaryExpression	"""struct"""		5110132	0					
ANR	5110250	UnaryOperationExpression	"! strcmp ( kind , ""union"" )"		5110132	1					
ANR	5110251	UnaryOperator	!		5110132	0					
ANR	5110252	CallExpression	"strcmp ( kind , ""union"" )"		5110132	1					
ANR	5110253	Callee	strcmp		5110132	0					
ANR	5110254	Identifier	strcmp		5110132	0					
ANR	5110255	ArgumentList	kind		5110132	1					
ANR	5110256	Argument	kind		5110132	0					
ANR	5110257	Identifier	kind		5110132	0					
ANR	5110258	Argument	"""union"""		5110132	1					
ANR	5110259	PrimaryExpression	"""union"""		5110132	0					
ANR	5110260	CompoundStatement		13:2:430:483	5110132	1					
ANR	5110261	IdentifierDeclStatement	"int i , n = sdb_array_length ( TDB , sdb_fmt ( ""%s.%s"" , kind , name ) ) ;"	461:2:12071:12134	5110132	0	True				
ANR	5110262	IdentifierDecl	i		5110132	0					
ANR	5110263	IdentifierDeclType	int		5110132	0					
ANR	5110264	Identifier	i		5110132	1					
ANR	5110265	IdentifierDecl	"n = sdb_array_length ( TDB , sdb_fmt ( ""%s.%s"" , kind , name ) )"		5110132	1					
ANR	5110266	IdentifierDeclType	int		5110132	0					
ANR	5110267	Identifier	n		5110132	1					
ANR	5110268	AssignmentExpression	"n = sdb_array_length ( TDB , sdb_fmt ( ""%s.%s"" , kind , name ) )"		5110132	2		=			
ANR	5110269	Identifier	n		5110132	0					
ANR	5110270	CallExpression	"sdb_array_length ( TDB , sdb_fmt ( ""%s.%s"" , kind , name ) )"		5110132	1					
ANR	5110271	Callee	sdb_array_length		5110132	0					
ANR	5110272	Identifier	sdb_array_length		5110132	0					
ANR	5110273	ArgumentList	TDB		5110132	1					
ANR	5110274	Argument	TDB		5110132	0					
ANR	5110275	Identifier	TDB		5110132	0					
ANR	5110276	Argument	"sdb_fmt ( ""%s.%s"" , kind , name )"		5110132	1					
ANR	5110277	CallExpression	"sdb_fmt ( ""%s.%s"" , kind , name )"		5110132	0					
ANR	5110278	Callee	sdb_fmt		5110132	0					
ANR	5110279	Identifier	sdb_fmt		5110132	0					
ANR	5110280	ArgumentList	"""%s.%s"""		5110132	1					
ANR	5110281	Argument	"""%s.%s"""		5110132	0					
ANR	5110282	PrimaryExpression	"""%s.%s"""		5110132	0					
ANR	5110283	Argument	kind		5110132	1					
ANR	5110284	Identifier	kind		5110132	0					
ANR	5110285	Argument	name		5110132	2					
ANR	5110286	Identifier	name		5110132	0					
ANR	5110287	IdentifierDeclStatement	"char * elements_key = r_str_newf ( ""%s.%s"" , kind , name ) ;"	462:2:12138:12191	5110132	1	True				
ANR	5110288	IdentifierDecl	"* elements_key = r_str_newf ( ""%s.%s"" , kind , name )"		5110132	0					
ANR	5110289	IdentifierDeclType	char *		5110132	0					
ANR	5110290	Identifier	elements_key		5110132	1					
ANR	5110291	AssignmentExpression	"* elements_key = r_str_newf ( ""%s.%s"" , kind , name )"		5110132	2		=			
ANR	5110292	Identifier	elements_key		5110132	0					
ANR	5110293	CallExpression	"r_str_newf ( ""%s.%s"" , kind , name )"		5110132	1					
ANR	5110294	Callee	r_str_newf		5110132	0					
ANR	5110295	Identifier	r_str_newf		5110132	0					
ANR	5110296	ArgumentList	"""%s.%s"""		5110132	1					
ANR	5110297	Argument	"""%s.%s"""		5110132	0					
ANR	5110298	PrimaryExpression	"""%s.%s"""		5110132	0					
ANR	5110299	Argument	kind		5110132	1					
ANR	5110300	Identifier	kind		5110132	0					
ANR	5110301	Argument	name		5110132	2					
ANR	5110302	Identifier	name		5110132	0					
ANR	5110303	ForStatement	for ( i = 0 ; i < n ; i ++ )		5110132	2					
ANR	5110304	ForInit	i = 0 ;	463:7:12200:12205	5110132	0	True				
ANR	5110305	AssignmentExpression	i = 0		5110132	0		=			
ANR	5110306	Identifier	i		5110132	0					
ANR	5110307	PrimaryExpression	0		5110132	1					
ANR	5110308	Condition	i < n	463:14:12207:12210	5110132	1	True				
ANR	5110309	RelationalExpression	i < n		5110132	0		<			
ANR	5110310	Identifier	i		5110132	0					
ANR	5110311	Identifier	n		5110132	1					
ANR	5110312	PostIncDecOperationExpression	i ++	463:20:12213:12215	5110132	2	True				
ANR	5110313	Identifier	i		5110132	0					
ANR	5110314	IncDec	++		5110132	1					
ANR	5110315	CompoundStatement		15:3:515:567	5110132	3					
ANR	5110316	IdentifierDeclStatement	"char * p = sdb_array_get ( TDB , elements_key , i , NULL ) ;"	464:3:12223:12275	5110132	0	True				
ANR	5110317	IdentifierDecl	"* p = sdb_array_get ( TDB , elements_key , i , NULL )"		5110132	0					
ANR	5110318	IdentifierDeclType	char *		5110132	0					
ANR	5110319	Identifier	p		5110132	1					
ANR	5110320	AssignmentExpression	"* p = sdb_array_get ( TDB , elements_key , i , NULL )"		5110132	2		=			
ANR	5110321	Identifier	p		5110132	0					
ANR	5110322	CallExpression	"sdb_array_get ( TDB , elements_key , i , NULL )"		5110132	1					
ANR	5110323	Callee	sdb_array_get		5110132	0					
ANR	5110324	Identifier	sdb_array_get		5110132	0					
ANR	5110325	ArgumentList	TDB		5110132	1					
ANR	5110326	Argument	TDB		5110132	0					
ANR	5110327	Identifier	TDB		5110132	0					
ANR	5110328	Argument	elements_key		5110132	1					
ANR	5110329	Identifier	elements_key		5110132	0					
ANR	5110330	Argument	i		5110132	2					
ANR	5110331	Identifier	i		5110132	0					
ANR	5110332	Argument	NULL		5110132	3					
ANR	5110333	Identifier	NULL		5110132	0					
ANR	5110334	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""%s.%s"" , elements_key , p ) , 0 )"	465:3:12280:12334	5110132	1	True				
ANR	5110335	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""%s.%s"" , elements_key , p ) , 0 )"		5110132	0					
ANR	5110336	Callee	sdb_unset		5110132	0					
ANR	5110337	Identifier	sdb_unset		5110132	0					
ANR	5110338	ArgumentList	TDB		5110132	1					
ANR	5110339	Argument	TDB		5110132	0					
ANR	5110340	Identifier	TDB		5110132	0					
ANR	5110341	Argument	"sdb_fmt ( ""%s.%s"" , elements_key , p )"		5110132	1					
ANR	5110342	CallExpression	"sdb_fmt ( ""%s.%s"" , elements_key , p )"		5110132	0					
ANR	5110343	Callee	sdb_fmt		5110132	0					
ANR	5110344	Identifier	sdb_fmt		5110132	0					
ANR	5110345	ArgumentList	"""%s.%s"""		5110132	1					
ANR	5110346	Argument	"""%s.%s"""		5110132	0					
ANR	5110347	PrimaryExpression	"""%s.%s"""		5110132	0					
ANR	5110348	Argument	elements_key		5110132	1					
ANR	5110349	Identifier	elements_key		5110132	0					
ANR	5110350	Argument	p		5110132	2					
ANR	5110351	Identifier	p		5110132	0					
ANR	5110352	Argument	0		5110132	2					
ANR	5110353	PrimaryExpression	0		5110132	0					
ANR	5110354	ExpressionStatement	free ( p )	466:3:12339:12347	5110132	2	True				
ANR	5110355	CallExpression	free ( p )		5110132	0					
ANR	5110356	Callee	free		5110132	0					
ANR	5110357	Identifier	free		5110132	0					
ANR	5110358	ArgumentList	p		5110132	1					
ANR	5110359	Argument	p		5110132	0					
ANR	5110360	Identifier	p		5110132	0					
ANR	5110361	ExpressionStatement	"sdb_unset ( TDB , elements_key , 0 )"	468:2:12355:12387	5110132	3	True				
ANR	5110362	CallExpression	"sdb_unset ( TDB , elements_key , 0 )"		5110132	0					
ANR	5110363	Callee	sdb_unset		5110132	0					
ANR	5110364	Identifier	sdb_unset		5110132	0					
ANR	5110365	ArgumentList	TDB		5110132	1					
ANR	5110366	Argument	TDB		5110132	0					
ANR	5110367	Identifier	TDB		5110132	0					
ANR	5110368	Argument	elements_key		5110132	1					
ANR	5110369	Identifier	elements_key		5110132	0					
ANR	5110370	Argument	0		5110132	2					
ANR	5110371	PrimaryExpression	0		5110132	0					
ANR	5110372	ExpressionStatement	"sdb_unset ( TDB , name , 0 )"	469:2:12391:12415	5110132	4	True				
ANR	5110373	CallExpression	"sdb_unset ( TDB , name , 0 )"		5110132	0					
ANR	5110374	Callee	sdb_unset		5110132	0					
ANR	5110375	Identifier	sdb_unset		5110132	0					
ANR	5110376	ArgumentList	TDB		5110132	1					
ANR	5110377	Argument	TDB		5110132	0					
ANR	5110378	Identifier	TDB		5110132	0					
ANR	5110379	Argument	name		5110132	1					
ANR	5110380	Identifier	name		5110132	0					
ANR	5110381	Argument	0		5110132	2					
ANR	5110382	PrimaryExpression	0		5110132	0					
ANR	5110383	ExpressionStatement	free ( elements_key )	470:2:12419:12438	5110132	5	True				
ANR	5110384	CallExpression	free ( elements_key )		5110132	0					
ANR	5110385	Callee	free		5110132	0					
ANR	5110386	Identifier	free		5110132	0					
ANR	5110387	ArgumentList	elements_key		5110132	1					
ANR	5110388	Argument	elements_key		5110132	0					
ANR	5110389	Identifier	elements_key		5110132	0					
ANR	5110390	ElseStatement	else		5110132	0					
ANR	5110391	IfStatement	"if ( ! strcmp ( kind , ""func"" ) )"		5110132	0					
ANR	5110392	Condition	"! strcmp ( kind , ""func"" )"	471:12:12452:12473	5110132	0	True				
ANR	5110393	UnaryOperationExpression	"! strcmp ( kind , ""func"" )"		5110132	0					
ANR	5110394	UnaryOperator	!		5110132	0					
ANR	5110395	CallExpression	"strcmp ( kind , ""func"" )"		5110132	1					
ANR	5110396	Callee	strcmp		5110132	0					
ANR	5110397	Identifier	strcmp		5110132	0					
ANR	5110398	ArgumentList	kind		5110132	1					
ANR	5110399	Argument	kind		5110132	0					
ANR	5110400	Identifier	kind		5110132	0					
ANR	5110401	Argument	"""func"""		5110132	1					
ANR	5110402	PrimaryExpression	"""func"""		5110132	0					
ANR	5110403	CompoundStatement		23:2:772:835	5110132	1					
ANR	5110404	IdentifierDeclStatement	"int i , n = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 ) ;"	472:2:12480:12543	5110132	0	True				
ANR	5110405	IdentifierDecl	i		5110132	0					
ANR	5110406	IdentifierDeclType	int		5110132	0					
ANR	5110407	Identifier	i		5110132	1					
ANR	5110408	IdentifierDecl	"n = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		5110132	1					
ANR	5110409	IdentifierDeclType	int		5110132	0					
ANR	5110410	Identifier	n		5110132	1					
ANR	5110411	AssignmentExpression	"n = sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		5110132	2		=			
ANR	5110412	Identifier	n		5110132	0					
ANR	5110413	CallExpression	"sdb_num_get ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		5110132	1					
ANR	5110414	Callee	sdb_num_get		5110132	0					
ANR	5110415	Identifier	sdb_num_get		5110132	0					
ANR	5110416	ArgumentList	TDB		5110132	1					
ANR	5110417	Argument	TDB		5110132	0					
ANR	5110418	Identifier	TDB		5110132	0					
ANR	5110419	Argument	"sdb_fmt ( ""func.%s.args"" , name )"		5110132	1					
ANR	5110420	CallExpression	"sdb_fmt ( ""func.%s.args"" , name )"		5110132	0					
ANR	5110421	Callee	sdb_fmt		5110132	0					
ANR	5110422	Identifier	sdb_fmt		5110132	0					
ANR	5110423	ArgumentList	"""func.%s.args"""		5110132	1					
ANR	5110424	Argument	"""func.%s.args"""		5110132	0					
ANR	5110425	PrimaryExpression	"""func.%s.args"""		5110132	0					
ANR	5110426	Argument	name		5110132	1					
ANR	5110427	Identifier	name		5110132	0					
ANR	5110428	Argument	0		5110132	2					
ANR	5110429	PrimaryExpression	0		5110132	0					
ANR	5110430	ForStatement	for ( i = 0 ; i < n ; i ++ )		5110132	1					
ANR	5110431	ForInit	i = 0 ;	473:7:12552:12557	5110132	0	True				
ANR	5110432	AssignmentExpression	i = 0		5110132	0		=			
ANR	5110433	Identifier	i		5110132	0					
ANR	5110434	PrimaryExpression	0		5110132	1					
ANR	5110435	Condition	i < n	473:14:12559:12563	5110132	1	True				
ANR	5110436	RelationalExpression	i < n		5110132	0		<			
ANR	5110437	Identifier	i		5110132	0					
ANR	5110438	Identifier	n		5110132	1					
ANR	5110439	PostIncDecOperationExpression	i ++	473:21:12566:12568	5110132	2	True				
ANR	5110440	Identifier	i		5110132	0					
ANR	5110441	IncDec	++		5110132	1					
ANR	5110442	CompoundStatement		24:26:863:863	5110132	3					
ANR	5110443	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"	474:3:12576:12631	5110132	0	True				
ANR	5110444	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.arg.%d"" , name , i ) , 0 )"		5110132	0					
ANR	5110445	Callee	sdb_unset		5110132	0					
ANR	5110446	Identifier	sdb_unset		5110132	0					
ANR	5110447	ArgumentList	TDB		5110132	1					
ANR	5110448	Argument	TDB		5110132	0					
ANR	5110449	Identifier	TDB		5110132	0					
ANR	5110450	Argument	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		5110132	1					
ANR	5110451	CallExpression	"sdb_fmt ( ""func.%s.arg.%d"" , name , i )"		5110132	0					
ANR	5110452	Callee	sdb_fmt		5110132	0					
ANR	5110453	Identifier	sdb_fmt		5110132	0					
ANR	5110454	ArgumentList	"""func.%s.arg.%d"""		5110132	1					
ANR	5110455	Argument	"""func.%s.arg.%d"""		5110132	0					
ANR	5110456	PrimaryExpression	"""func.%s.arg.%d"""		5110132	0					
ANR	5110457	Argument	name		5110132	1					
ANR	5110458	Identifier	name		5110132	0					
ANR	5110459	Argument	i		5110132	2					
ANR	5110460	Identifier	i		5110132	0					
ANR	5110461	Argument	0		5110132	2					
ANR	5110462	PrimaryExpression	0		5110132	0					
ANR	5110463	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"	476:2:12639:12688	5110132	2	True				
ANR	5110464	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.ret"" , name ) , 0 )"		5110132	0					
ANR	5110465	Callee	sdb_unset		5110132	0					
ANR	5110466	Identifier	sdb_unset		5110132	0					
ANR	5110467	ArgumentList	TDB		5110132	1					
ANR	5110468	Argument	TDB		5110132	0					
ANR	5110469	Identifier	TDB		5110132	0					
ANR	5110470	Argument	"sdb_fmt ( ""func.%s.ret"" , name )"		5110132	1					
ANR	5110471	CallExpression	"sdb_fmt ( ""func.%s.ret"" , name )"		5110132	0					
ANR	5110472	Callee	sdb_fmt		5110132	0					
ANR	5110473	Identifier	sdb_fmt		5110132	0					
ANR	5110474	ArgumentList	"""func.%s.ret"""		5110132	1					
ANR	5110475	Argument	"""func.%s.ret"""		5110132	0					
ANR	5110476	PrimaryExpression	"""func.%s.ret"""		5110132	0					
ANR	5110477	Argument	name		5110132	1					
ANR	5110478	Identifier	name		5110132	0					
ANR	5110479	Argument	0		5110132	2					
ANR	5110480	PrimaryExpression	0		5110132	0					
ANR	5110481	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.cc"" , name ) , 0 )"	477:2:12692:12740	5110132	3	True				
ANR	5110482	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.cc"" , name ) , 0 )"		5110132	0					
ANR	5110483	Callee	sdb_unset		5110132	0					
ANR	5110484	Identifier	sdb_unset		5110132	0					
ANR	5110485	ArgumentList	TDB		5110132	1					
ANR	5110486	Argument	TDB		5110132	0					
ANR	5110487	Identifier	TDB		5110132	0					
ANR	5110488	Argument	"sdb_fmt ( ""func.%s.cc"" , name )"		5110132	1					
ANR	5110489	CallExpression	"sdb_fmt ( ""func.%s.cc"" , name )"		5110132	0					
ANR	5110490	Callee	sdb_fmt		5110132	0					
ANR	5110491	Identifier	sdb_fmt		5110132	0					
ANR	5110492	ArgumentList	"""func.%s.cc"""		5110132	1					
ANR	5110493	Argument	"""func.%s.cc"""		5110132	0					
ANR	5110494	PrimaryExpression	"""func.%s.cc"""		5110132	0					
ANR	5110495	Argument	name		5110132	1					
ANR	5110496	Identifier	name		5110132	0					
ANR	5110497	Argument	0		5110132	2					
ANR	5110498	PrimaryExpression	0		5110132	0					
ANR	5110499	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.noreturn"" , name ) , 0 )"	478:2:12744:12798	5110132	4	True				
ANR	5110500	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.noreturn"" , name ) , 0 )"		5110132	0					
ANR	5110501	Callee	sdb_unset		5110132	0					
ANR	5110502	Identifier	sdb_unset		5110132	0					
ANR	5110503	ArgumentList	TDB		5110132	1					
ANR	5110504	Argument	TDB		5110132	0					
ANR	5110505	Identifier	TDB		5110132	0					
ANR	5110506	Argument	"sdb_fmt ( ""func.%s.noreturn"" , name )"		5110132	1					
ANR	5110507	CallExpression	"sdb_fmt ( ""func.%s.noreturn"" , name )"		5110132	0					
ANR	5110508	Callee	sdb_fmt		5110132	0					
ANR	5110509	Identifier	sdb_fmt		5110132	0					
ANR	5110510	ArgumentList	"""func.%s.noreturn"""		5110132	1					
ANR	5110511	Argument	"""func.%s.noreturn"""		5110132	0					
ANR	5110512	PrimaryExpression	"""func.%s.noreturn"""		5110132	0					
ANR	5110513	Argument	name		5110132	1					
ANR	5110514	Identifier	name		5110132	0					
ANR	5110515	Argument	0		5110132	2					
ANR	5110516	PrimaryExpression	0		5110132	0					
ANR	5110517	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"	479:2:12802:12852	5110132	5	True				
ANR	5110518	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""func.%s.args"" , name ) , 0 )"		5110132	0					
ANR	5110519	Callee	sdb_unset		5110132	0					
ANR	5110520	Identifier	sdb_unset		5110132	0					
ANR	5110521	ArgumentList	TDB		5110132	1					
ANR	5110522	Argument	TDB		5110132	0					
ANR	5110523	Identifier	TDB		5110132	0					
ANR	5110524	Argument	"sdb_fmt ( ""func.%s.args"" , name )"		5110132	1					
ANR	5110525	CallExpression	"sdb_fmt ( ""func.%s.args"" , name )"		5110132	0					
ANR	5110526	Callee	sdb_fmt		5110132	0					
ANR	5110527	Identifier	sdb_fmt		5110132	0					
ANR	5110528	ArgumentList	"""func.%s.args"""		5110132	1					
ANR	5110529	Argument	"""func.%s.args"""		5110132	0					
ANR	5110530	PrimaryExpression	"""func.%s.args"""		5110132	0					
ANR	5110531	Argument	name		5110132	1					
ANR	5110532	Identifier	name		5110132	0					
ANR	5110533	Argument	0		5110132	2					
ANR	5110534	PrimaryExpression	0		5110132	0					
ANR	5110535	ExpressionStatement	"sdb_unset ( TDB , name , 0 )"	480:2:12856:12880	5110132	6	True				
ANR	5110536	CallExpression	"sdb_unset ( TDB , name , 0 )"		5110132	0					
ANR	5110537	Callee	sdb_unset		5110132	0					
ANR	5110538	Identifier	sdb_unset		5110132	0					
ANR	5110539	ArgumentList	TDB		5110132	1					
ANR	5110540	Argument	TDB		5110132	0					
ANR	5110541	Identifier	TDB		5110132	0					
ANR	5110542	Argument	name		5110132	1					
ANR	5110543	Identifier	name		5110132	0					
ANR	5110544	Argument	0		5110132	2					
ANR	5110545	PrimaryExpression	0		5110132	0					
ANR	5110546	ElseStatement	else		5110132	0					
ANR	5110547	IfStatement	"if ( ! strcmp ( kind , ""enum"" ) )"		5110132	0					
ANR	5110548	Condition	"! strcmp ( kind , ""enum"" )"	481:12:12894:12915	5110132	0	True				
ANR	5110549	UnaryOperationExpression	"! strcmp ( kind , ""enum"" )"		5110132	0					
ANR	5110550	UnaryOperator	!		5110132	0					
ANR	5110551	CallExpression	"strcmp ( kind , ""enum"" )"		5110132	1					
ANR	5110552	Callee	strcmp		5110132	0					
ANR	5110553	Identifier	strcmp		5110132	0					
ANR	5110554	ArgumentList	kind		5110132	1					
ANR	5110555	Argument	kind		5110132	0					
ANR	5110556	Identifier	kind		5110132	0					
ANR	5110557	Argument	"""enum"""		5110132	1					
ANR	5110558	PrimaryExpression	"""enum"""		5110132	0					
ANR	5110559	CompoundStatement		35:2:1280:1295	5110132	1					
ANR	5110560	IdentifierDeclStatement	"RList * list = r_type_get_enum ( TDB , name ) ;"	482:2:12922:12963	5110132	0	True				
ANR	5110561	IdentifierDecl	"* list = r_type_get_enum ( TDB , name )"		5110132	0					
ANR	5110562	IdentifierDeclType	RList *		5110132	0					
ANR	5110563	Identifier	list		5110132	1					
ANR	5110564	AssignmentExpression	"* list = r_type_get_enum ( TDB , name )"		5110132	2		=			
ANR	5110565	Identifier	list		5110132	0					
ANR	5110566	CallExpression	"r_type_get_enum ( TDB , name )"		5110132	1					
ANR	5110567	Callee	r_type_get_enum		5110132	0					
ANR	5110568	Identifier	r_type_get_enum		5110132	0					
ANR	5110569	ArgumentList	TDB		5110132	1					
ANR	5110570	Argument	TDB		5110132	0					
ANR	5110571	Identifier	TDB		5110132	0					
ANR	5110572	Argument	name		5110132	1					
ANR	5110573	Identifier	name		5110132	0					
ANR	5110574	IdentifierDeclStatement	RTypeEnum * member ;	483:2:12967:12984	5110132	1	True				
ANR	5110575	IdentifierDecl	* member		5110132	0					
ANR	5110576	IdentifierDeclType	RTypeEnum *		5110132	0					
ANR	5110577	Identifier	member		5110132	1					
ANR	5110578	IdentifierDeclStatement	RListIter * iter ;	484:2:12988:13003	5110132	2	True				
ANR	5110579	IdentifierDecl	* iter		5110132	0					
ANR	5110580	IdentifierDeclType	RListIter *		5110132	0					
ANR	5110581	Identifier	iter		5110132	1					
ANR	5110582	Statement	r_list_foreach	485:2:13007:13020	5110132	3	True				
ANR	5110583	Statement	(	485:17:13022:13022	5110132	4	True				
ANR	5110584	Statement	list	485:18:13023:13026	5110132	5	True				
ANR	5110585	Statement	","	485:22:13027:13027	5110132	6	True				
ANR	5110586	Statement	iter	485:24:13029:13032	5110132	7	True				
ANR	5110587	Statement	","	485:28:13033:13033	5110132	8	True				
ANR	5110588	Statement	member	485:30:13035:13040	5110132	9	True				
ANR	5110589	Statement	)	485:36:13041:13041	5110132	10	True				
ANR	5110590	CompoundStatement		36:38:1335:1335	5110132	11					
ANR	5110591	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""enum.%s.%s"" , name , member -> name ) , 0 )"	486:3:13048:13110	5110132	0	True				
ANR	5110592	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""enum.%s.%s"" , name , member -> name ) , 0 )"		5110132	0					
ANR	5110593	Callee	sdb_unset		5110132	0					
ANR	5110594	Identifier	sdb_unset		5110132	0					
ANR	5110595	ArgumentList	TDB		5110132	1					
ANR	5110596	Argument	TDB		5110132	0					
ANR	5110597	Identifier	TDB		5110132	0					
ANR	5110598	Argument	"sdb_fmt ( ""enum.%s.%s"" , name , member -> name )"		5110132	1					
ANR	5110599	CallExpression	"sdb_fmt ( ""enum.%s.%s"" , name , member -> name )"		5110132	0					
ANR	5110600	Callee	sdb_fmt		5110132	0					
ANR	5110601	Identifier	sdb_fmt		5110132	0					
ANR	5110602	ArgumentList	"""enum.%s.%s"""		5110132	1					
ANR	5110603	Argument	"""enum.%s.%s"""		5110132	0					
ANR	5110604	PrimaryExpression	"""enum.%s.%s"""		5110132	0					
ANR	5110605	Argument	name		5110132	1					
ANR	5110606	Identifier	name		5110132	0					
ANR	5110607	Argument	member -> name		5110132	2					
ANR	5110608	PtrMemberAccess	member -> name		5110132	0					
ANR	5110609	Identifier	member		5110132	0					
ANR	5110610	Identifier	name		5110132	1					
ANR	5110611	Argument	0		5110132	2					
ANR	5110612	PrimaryExpression	0		5110132	0					
ANR	5110613	ExpressionStatement	"sdb_unset ( TDB , sdb_fmt ( ""enum.%s.%s"" , name , member -> val ) , 0 )"	487:3:13115:13176	5110132	1	True				
ANR	5110614	CallExpression	"sdb_unset ( TDB , sdb_fmt ( ""enum.%s.%s"" , name , member -> val ) , 0 )"		5110132	0					
ANR	5110615	Callee	sdb_unset		5110132	0					
ANR	5110616	Identifier	sdb_unset		5110132	0					
ANR	5110617	ArgumentList	TDB		5110132	1					
ANR	5110618	Argument	TDB		5110132	0					
ANR	5110619	Identifier	TDB		5110132	0					
ANR	5110620	Argument	"sdb_fmt ( ""enum.%s.%s"" , name , member -> val )"		5110132	1					
ANR	5110621	CallExpression	"sdb_fmt ( ""enum.%s.%s"" , name , member -> val )"		5110132	0					
ANR	5110622	Callee	sdb_fmt		5110132	0					
ANR	5110623	Identifier	sdb_fmt		5110132	0					
ANR	5110624	ArgumentList	"""enum.%s.%s"""		5110132	1					
ANR	5110625	Argument	"""enum.%s.%s"""		5110132	0					
ANR	5110626	PrimaryExpression	"""enum.%s.%s"""		5110132	0					
ANR	5110627	Argument	name		5110132	1					
ANR	5110628	Identifier	name		5110132	0					
ANR	5110629	Argument	member -> val		5110132	2					
ANR	5110630	PtrMemberAccess	member -> val		5110132	0					
ANR	5110631	Identifier	member		5110132	0					
ANR	5110632	Identifier	val		5110132	1					
ANR	5110633	Argument	0		5110132	2					
ANR	5110634	PrimaryExpression	0		5110132	0					
ANR	5110635	ExpressionStatement	"sdb_unset ( TDB , name , 0 )"	489:2:13184:13208	5110132	12	True				
ANR	5110636	CallExpression	"sdb_unset ( TDB , name , 0 )"		5110132	0					
ANR	5110637	Callee	sdb_unset		5110132	0					
ANR	5110638	Identifier	sdb_unset		5110132	0					
ANR	5110639	ArgumentList	TDB		5110132	1					
ANR	5110640	Argument	TDB		5110132	0					
ANR	5110641	Identifier	TDB		5110132	0					
ANR	5110642	Argument	name		5110132	1					
ANR	5110643	Identifier	name		5110132	0					
ANR	5110644	Argument	0		5110132	2					
ANR	5110645	PrimaryExpression	0		5110132	0					
ANR	5110646	ExpressionStatement	r_list_free ( list )	490:2:13212:13230	5110132	13	True				
ANR	5110647	CallExpression	r_list_free ( list )		5110132	0					
ANR	5110648	Callee	r_list_free		5110132	0					
ANR	5110649	Identifier	r_list_free		5110132	0					
ANR	5110650	ArgumentList	list		5110132	1					
ANR	5110651	Argument	list		5110132	0					
ANR	5110652	Identifier	list		5110132	0					
ANR	5110653	ElseStatement	else		5110132	0					
ANR	5110654	CompoundStatement		42:8:1532:1532	5110132	0					
ANR	5110655	ExpressionStatement	"eprintf ( ""Unrecognized type \\""%s\\""\\n"" , kind )"	492:2:13244:13288	5110132	0	True				
ANR	5110656	CallExpression	"eprintf ( ""Unrecognized type \\""%s\\""\\n"" , kind )"		5110132	0					
ANR	5110657	Callee	eprintf		5110132	0					
ANR	5110658	Identifier	eprintf		5110132	0					
ANR	5110659	ArgumentList	"""Unrecognized type \\""%s\\""\\n"""		5110132	1					
ANR	5110660	Argument	"""Unrecognized type \\""%s\\""\\n"""		5110132	0					
ANR	5110661	PrimaryExpression	"""Unrecognized type \\""%s\\""\\n"""		5110132	0					
ANR	5110662	Argument	kind		5110132	1					
ANR	5110663	Identifier	kind		5110132	0					
ANR	5110664	ReturnType	R_API void		5110132	1					
ANR	5110665	Identifier	r_type_del		5110132	2					
ANR	5110666	ParameterList	"Sdb * TDB , const char * name"		5110132	3					
ANR	5110667	Parameter	Sdb * TDB	450:22:11679:11686	5110132	0	True				
ANR	5110668	ParameterType	Sdb *		5110132	0					
ANR	5110669	Identifier	TDB		5110132	1					
ANR	5110670	Parameter	const char * name	450:32:11689:11704	5110132	1	True				
ANR	5110671	ParameterType	const char *		5110132	0					
ANR	5110672	Identifier	name		5110132	1					
ANR	5110673	CFGEntryNode	ENTRY		5110132		True				
ANR	5110674	CFGExitNode	EXIT		5110132		True				
ANR	5110675	Symbol	strcmp		5110132						
ANR	5110676	Symbol	sdb_num_get		5110132						
ANR	5110677	Symbol	sdb_array_length		5110132						
ANR	5110678	Symbol	NULL		5110132						
ANR	5110679	Symbol	kind		5110132						
ANR	5110680	Symbol	sdb_array_get		5110132						
ANR	5110681	Symbol	i		5110132						
ANR	5110682	Symbol	iter		5110132						
ANR	5110683	Symbol	r_str_newf		5110132						
ANR	5110684	Symbol	* member		5110132						
ANR	5110685	Symbol	list		5110132						
ANR	5110686	Symbol	sdb_const_get		5110132						
ANR	5110687	Symbol	n		5110132						
ANR	5110688	Symbol	p		5110132						
ANR	5110689	Symbol	member -> name		5110132						
ANR	5110690	Symbol	elements_key		5110132						
ANR	5110691	Symbol	TDB		5110132						
ANR	5110692	Symbol	r_type_get_enum		5110132						
ANR	5110693	Symbol	member -> val		5110132						
ANR	5110694	Symbol	name		5110132						
ANR	5110695	Symbol	member		5110132						
ANR	5110696	Symbol	sdb_fmt		5110132						
ANR	5110697	Function	r_type_func_exist	497:0:13323:13478							
ANR	5110698	FunctionDef	"r_type_func_exist (Sdb * TDB , const char * func_name)"		5110697	0					
ANR	5110699	CompoundStatement		497:61:13384:13478	5110697	0					
ANR	5110700	IdentifierDeclStatement	"const char * fcn = sdb_const_get ( TDB , func_name , 0 ) ;"	498:1:13387:13438	5110697	0	True				
ANR	5110701	IdentifierDecl	"* fcn = sdb_const_get ( TDB , func_name , 0 )"		5110697	0					
ANR	5110702	IdentifierDeclType	const char *		5110697	0					
ANR	5110703	Identifier	fcn		5110697	1					
ANR	5110704	AssignmentExpression	"* fcn = sdb_const_get ( TDB , func_name , 0 )"		5110697	2		=			
ANR	5110705	Identifier	fcn		5110697	0					
ANR	5110706	CallExpression	"sdb_const_get ( TDB , func_name , 0 )"		5110697	1					
ANR	5110707	Callee	sdb_const_get		5110697	0					
ANR	5110708	Identifier	sdb_const_get		5110697	0					
ANR	5110709	ArgumentList	TDB		5110697	1					
ANR	5110710	Argument	TDB		5110697	0					
ANR	5110711	Identifier	TDB		5110697	0					
ANR	5110712	Argument	func_name		5110697	1					
ANR	5110713	Identifier	func_name		5110697	0					
ANR	5110714	Argument	0		5110697	2					
ANR	5110715	PrimaryExpression	0		5110697	0					
ANR	5110716	ReturnStatement	"return fcn && ! strcmp ( fcn , ""func"" ) ;"	499:1:13441:13476	5110697	1	True				
ANR	5110717	AndExpression	"fcn && ! strcmp ( fcn , ""func"" )"		5110697	0		&&			
ANR	5110718	Identifier	fcn		5110697	0					
ANR	5110719	UnaryOperationExpression	"! strcmp ( fcn , ""func"" )"		5110697	1					
ANR	5110720	UnaryOperator	!		5110697	0					
ANR	5110721	CallExpression	"strcmp ( fcn , ""func"" )"		5110697	1					
ANR	5110722	Callee	strcmp		5110697	0					
ANR	5110723	Identifier	strcmp		5110697	0					
ANR	5110724	ArgumentList	fcn		5110697	1					
ANR	5110725	Argument	fcn		5110697	0					
ANR	5110726	Identifier	fcn		5110697	0					
ANR	5110727	Argument	"""func"""		5110697	1					
ANR	5110728	PrimaryExpression	"""func"""		5110697	0					
ANR	5110729	ReturnType	R_API int		5110697	1					
ANR	5110730	Identifier	r_type_func_exist		5110697	2					
ANR	5110731	ParameterList	"Sdb * TDB , const char * func_name"		5110697	3					
ANR	5110732	Parameter	Sdb * TDB	497:28:13351:13358	5110697	0	True				
ANR	5110733	ParameterType	Sdb *		5110697	0					
ANR	5110734	Identifier	TDB		5110697	1					
ANR	5110735	Parameter	const char * func_name	497:38:13361:13381	5110697	1	True				
ANR	5110736	ParameterType	const char *		5110697	0					
ANR	5110737	Identifier	func_name		5110697	1					
ANR	5110738	CFGEntryNode	ENTRY		5110697		True				
ANR	5110739	CFGExitNode	EXIT		5110697		True				
ANR	5110740	Symbol	fcn		5110697						
ANR	5110741	Symbol	strcmp		5110697						
ANR	5110742	Symbol	TDB		5110697						
ANR	5110743	Symbol	sdb_const_get		5110697						
ANR	5110744	Symbol	func_name		5110697						
ANR	5110745	Function	r_type_func_ret	502:6:13487:13645							
ANR	5110746	FunctionDef	"r_type_func_ret (Sdb * TDB , const char * func_name)"		5110745	0					
ANR	5110747	CompoundStatement		502:66:13547:13645	5110745	0					
ANR	5110748	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""func.%s.ret"" , func_name ) ;"	503:1:13550:13604	5110745	0	True				
ANR	5110749	IdentifierDecl	"* query = sdb_fmt ( ""func.%s.ret"" , func_name )"		5110745	0					
ANR	5110750	IdentifierDeclType	const char *		5110745	0					
ANR	5110751	Identifier	query		5110745	1					
ANR	5110752	AssignmentExpression	"* query = sdb_fmt ( ""func.%s.ret"" , func_name )"		5110745	2		=			
ANR	5110753	Identifier	query		5110745	0					
ANR	5110754	CallExpression	"sdb_fmt ( ""func.%s.ret"" , func_name )"		5110745	1					
ANR	5110755	Callee	sdb_fmt		5110745	0					
ANR	5110756	Identifier	sdb_fmt		5110745	0					
ANR	5110757	ArgumentList	"""func.%s.ret"""		5110745	1					
ANR	5110758	Argument	"""func.%s.ret"""		5110745	0					
ANR	5110759	PrimaryExpression	"""func.%s.ret"""		5110745	0					
ANR	5110760	Argument	func_name		5110745	1					
ANR	5110761	Identifier	func_name		5110745	0					
ANR	5110762	ReturnStatement	"return sdb_const_get ( TDB , query , 0 ) ;"	504:1:13607:13643	5110745	1	True				
ANR	5110763	CallExpression	"sdb_const_get ( TDB , query , 0 )"		5110745	0					
ANR	5110764	Callee	sdb_const_get		5110745	0					
ANR	5110765	Identifier	sdb_const_get		5110745	0					
ANR	5110766	ArgumentList	TDB		5110745	1					
ANR	5110767	Argument	TDB		5110745	0					
ANR	5110768	Identifier	TDB		5110745	0					
ANR	5110769	Argument	query		5110745	1					
ANR	5110770	Identifier	query		5110745	0					
ANR	5110771	Argument	0		5110745	2					
ANR	5110772	PrimaryExpression	0		5110745	0					
ANR	5110773	ReturnType	const char *		5110745	1					
ANR	5110774	Identifier	r_type_func_ret		5110745	2					
ANR	5110775	ParameterList	"Sdb * TDB , const char * func_name"		5110745	3					
ANR	5110776	Parameter	Sdb * TDB	502:34:13515:13522	5110745	0	True				
ANR	5110777	ParameterType	Sdb *		5110745	0					
ANR	5110778	Identifier	TDB		5110745	1					
ANR	5110779	Parameter	const char * func_name	502:44:13525:13545	5110745	1	True				
ANR	5110780	ParameterType	const char *		5110745	0					
ANR	5110781	Identifier	func_name		5110745	1					
ANR	5110782	CFGEntryNode	ENTRY		5110745		True				
ANR	5110783	CFGExitNode	EXIT		5110745		True				
ANR	5110784	Symbol	TDB		5110745						
ANR	5110785	Symbol	query		5110745						
ANR	5110786	Symbol	sdb_fmt		5110745						
ANR	5110787	Symbol	sdb_const_get		5110745						
ANR	5110788	Symbol	func_name		5110745						
ANR	5110789	Function	r_type_func_args_count	507:0:13648:13811							
ANR	5110790	FunctionDef	"r_type_func_args_count (Sdb * TDB , const char * func_name)"		5110789	0					
ANR	5110791	CompoundStatement		507:66:13714:13811	5110789	0					
ANR	5110792	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""func.%s.args"" , func_name ) ;"	508:1:13717:13772	5110789	0	True				
ANR	5110793	IdentifierDecl	"* query = sdb_fmt ( ""func.%s.args"" , func_name )"		5110789	0					
ANR	5110794	IdentifierDeclType	const char *		5110789	0					
ANR	5110795	Identifier	query		5110789	1					
ANR	5110796	AssignmentExpression	"* query = sdb_fmt ( ""func.%s.args"" , func_name )"		5110789	2		=			
ANR	5110797	Identifier	query		5110789	0					
ANR	5110798	CallExpression	"sdb_fmt ( ""func.%s.args"" , func_name )"		5110789	1					
ANR	5110799	Callee	sdb_fmt		5110789	0					
ANR	5110800	Identifier	sdb_fmt		5110789	0					
ANR	5110801	ArgumentList	"""func.%s.args"""		5110789	1					
ANR	5110802	Argument	"""func.%s.args"""		5110789	0					
ANR	5110803	PrimaryExpression	"""func.%s.args"""		5110789	0					
ANR	5110804	Argument	func_name		5110789	1					
ANR	5110805	Identifier	func_name		5110789	0					
ANR	5110806	ReturnStatement	"return sdb_num_get ( TDB , query , 0 ) ;"	509:1:13775:13809	5110789	1	True				
ANR	5110807	CallExpression	"sdb_num_get ( TDB , query , 0 )"		5110789	0					
ANR	5110808	Callee	sdb_num_get		5110789	0					
ANR	5110809	Identifier	sdb_num_get		5110789	0					
ANR	5110810	ArgumentList	TDB		5110789	1					
ANR	5110811	Argument	TDB		5110789	0					
ANR	5110812	Identifier	TDB		5110789	0					
ANR	5110813	Argument	query		5110789	1					
ANR	5110814	Identifier	query		5110789	0					
ANR	5110815	Argument	0		5110789	2					
ANR	5110816	PrimaryExpression	0		5110789	0					
ANR	5110817	ReturnType	R_API int		5110789	1					
ANR	5110818	Identifier	r_type_func_args_count		5110789	2					
ANR	5110819	ParameterList	"Sdb * TDB , const char * func_name"		5110789	3					
ANR	5110820	Parameter	Sdb * TDB	507:33:13681:13688	5110789	0	True				
ANR	5110821	ParameterType	Sdb *		5110789	0					
ANR	5110822	Identifier	TDB		5110789	1					
ANR	5110823	Parameter	const char * func_name	507:43:13691:13711	5110789	1	True				
ANR	5110824	ParameterType	const char *		5110789	0					
ANR	5110825	Identifier	func_name		5110789	1					
ANR	5110826	CFGEntryNode	ENTRY		5110789		True				
ANR	5110827	CFGExitNode	EXIT		5110789		True				
ANR	5110828	Symbol	sdb_num_get		5110789						
ANR	5110829	Symbol	TDB		5110789						
ANR	5110830	Symbol	query		5110789						
ANR	5110831	Symbol	sdb_fmt		5110789						
ANR	5110832	Symbol	func_name		5110789						
ANR	5110833	DeclStmt									
ANR	5110834	Decl							const char	const char *	query
ANR	5110835	DeclStmt									
ANR	5110836	Decl							char	char *	ret
ANR	5110837	DeclStmt									
ANR	5110838	Decl							char	char *	comma
ANR	5110839	DeclStmt									
ANR	5110840	Decl							const char	const char *	query
ANR	5110841	DeclStmt									
ANR	5110842	Decl							const char	const char *	get
ANR	5110843	DeclStmt									
ANR	5110844	Decl							char	char *	ret
ANR	5110845	Function	type_func_try_guess	538:0:14467:14791							
ANR	5110846	FunctionDef	"type_func_try_guess (Sdb * TDB , R_NONNULL char * name)"		5110845	0					
ANR	5110847	CompoundStatement		538:71:14538:14791	5110845	0					
ANR	5110848	IdentifierDeclStatement	const char * res ;	539:1:14541:14556	5110845	0	True				
ANR	5110849	IdentifierDecl	* res		5110845	0					
ANR	5110850	IdentifierDeclType	const char *		5110845	0					
ANR	5110851	Identifier	res		5110845	1					
ANR	5110852	IfStatement	"if ( r_str_nlen ( name , MIN_MATCH_LEN ) < MIN_MATCH_LEN )"		5110845	1					
ANR	5110853	Condition	"r_str_nlen ( name , MIN_MATCH_LEN ) < MIN_MATCH_LEN"	540:5:14563:14610	5110845	0	True				
ANR	5110854	RelationalExpression	"r_str_nlen ( name , MIN_MATCH_LEN ) < MIN_MATCH_LEN"		5110845	0		<			
ANR	5110855	CallExpression	"r_str_nlen ( name , MIN_MATCH_LEN )"		5110845	0					
ANR	5110856	Callee	r_str_nlen		5110845	0					
ANR	5110857	Identifier	r_str_nlen		5110845	0					
ANR	5110858	ArgumentList	name		5110845	1					
ANR	5110859	Argument	name		5110845	0					
ANR	5110860	Identifier	name		5110845	0					
ANR	5110861	Argument	MIN_MATCH_LEN		5110845	1					
ANR	5110862	Identifier	MIN_MATCH_LEN		5110845	0					
ANR	5110863	Identifier	MIN_MATCH_LEN		5110845	1					
ANR	5110864	CompoundStatement		3:55:74:74	5110845	1					
ANR	5110865	ReturnStatement	return NULL ;	541:2:14617:14628	5110845	0	True				
ANR	5110866	Identifier	NULL		5110845	0					
ANR	5110867	IfStatement	"if ( ( res = sdb_const_get ( TDB , name , NULL ) ) )"		5110845	2					
ANR	5110868	Condition	"res = sdb_const_get ( TDB , name , NULL )"	543:5:14638:14676	5110845	0	True				
ANR	5110869	AssignmentExpression	"res = sdb_const_get ( TDB , name , NULL )"		5110845	0		=			
ANR	5110870	Identifier	res		5110845	0					
ANR	5110871	CallExpression	"sdb_const_get ( TDB , name , NULL )"		5110845	1					
ANR	5110872	Callee	sdb_const_get		5110845	0					
ANR	5110873	Identifier	sdb_const_get		5110845	0					
ANR	5110874	ArgumentList	TDB		5110845	1					
ANR	5110875	Argument	TDB		5110845	0					
ANR	5110876	Identifier	TDB		5110845	0					
ANR	5110877	Argument	name		5110845	1					
ANR	5110878	Identifier	name		5110845	0					
ANR	5110879	Argument	NULL		5110845	2					
ANR	5110880	Identifier	NULL		5110845	0					
ANR	5110881	CompoundStatement		7:2:144:187	5110845	1					
ANR	5110882	IdentifierDeclStatement	"bool is_func = res && ! strcmp ( ""func"" , res ) ;"	544:2:14683:14726	5110845	0	True				
ANR	5110883	IdentifierDecl	"is_func = res && ! strcmp ( ""func"" , res )"		5110845	0					
ANR	5110884	IdentifierDeclType	bool		5110845	0					
ANR	5110885	Identifier	is_func		5110845	1					
ANR	5110886	AssignmentExpression	"is_func = res && ! strcmp ( ""func"" , res )"		5110845	2		=			
ANR	5110887	Identifier	is_func		5110845	0					
ANR	5110888	AndExpression	"res && ! strcmp ( ""func"" , res )"		5110845	1		&&			
ANR	5110889	Identifier	res		5110845	0					
ANR	5110890	UnaryOperationExpression	"! strcmp ( ""func"" , res )"		5110845	1					
ANR	5110891	UnaryOperator	!		5110845	0					
ANR	5110892	CallExpression	"strcmp ( ""func"" , res )"		5110845	1					
ANR	5110893	Callee	strcmp		5110845	0					
ANR	5110894	Identifier	strcmp		5110845	0					
ANR	5110895	ArgumentList	"""func"""		5110845	1					
ANR	5110896	Argument	"""func"""		5110845	0					
ANR	5110897	PrimaryExpression	"""func"""		5110845	0					
ANR	5110898	Argument	res		5110845	1					
ANR	5110899	Identifier	res		5110845	0					
ANR	5110900	IfStatement	if ( is_func )		5110845	1					
ANR	5110901	Condition	is_func	545:6:14734:14740	5110845	0	True				
ANR	5110902	Identifier	is_func		5110845	0					
ANR	5110903	CompoundStatement		8:15:204:204	5110845	1					
ANR	5110904	ReturnStatement	return strdup ( name ) ;	546:3:14748:14768	5110845	0	True				
ANR	5110905	CallExpression	strdup ( name )		5110845	0					
ANR	5110906	Callee	strdup		5110845	0					
ANR	5110907	Identifier	strdup		5110845	0					
ANR	5110908	ArgumentList	name		5110845	1					
ANR	5110909	Argument	name		5110845	0					
ANR	5110910	Identifier	name		5110845	0					
ANR	5110911	ReturnStatement	return NULL ;	549:1:14778:14789	5110845	3	True				
ANR	5110912	Identifier	NULL		5110845	0					
ANR	5110913	ReturnType	static R_OWN char *		5110845	1					
ANR	5110914	Identifier	type_func_try_guess		5110845	2					
ANR	5110915	ParameterList	"Sdb * TDB , R_NONNULL char * name"		5110845	3					
ANR	5110916	Parameter	Sdb * TDB	538:39:14506:14513	5110845	0	True				
ANR	5110917	ParameterType	Sdb *		5110845	0					
ANR	5110918	Identifier	TDB		5110845	1					
ANR	5110919	Parameter	R_NONNULL char * name	538:49:14516:14535	5110845	1	True				
ANR	5110920	ParameterType	R_NONNULL char *		5110845	0					
ANR	5110921	Identifier	name		5110845	1					
ANR	5110922	CFGEntryNode	ENTRY		5110845		True				
ANR	5110923	CFGExitNode	EXIT		5110845		True				
ANR	5110924	Symbol	strcmp		5110845						
ANR	5110925	Symbol	res		5110845						
ANR	5110926	Symbol	TDB		5110845						
ANR	5110927	Symbol	NULL		5110845						
ANR	5110928	Symbol	name		5110845						
ANR	5110929	Symbol	r_str_nlen		5110845						
ANR	5110930	Symbol	MIN_MATCH_LEN		5110845						
ANR	5110931	Symbol	strdup		5110845						
ANR	5110932	Symbol	sdb_const_get		5110845						
ANR	5110933	Symbol	is_func		5110845						
ANR	5110934	Function	r_type_func_guess	555:0:14927:16640							
ANR	5110935	FunctionDef	"r_type_func_guess (Sdb * TDB , R_NONNULL char * func_name)"		5110934	0					
ANR	5110936	CompoundStatement		555:73:15000:16640	5110934	0					
ANR	5110937	IdentifierDeclStatement	int offset = 0 ;	556:1:15003:15017	5110934	0	True				
ANR	5110938	IdentifierDecl	offset = 0		5110934	0					
ANR	5110939	IdentifierDeclType	int		5110934	0					
ANR	5110940	Identifier	offset		5110934	1					
ANR	5110941	AssignmentExpression	offset = 0		5110934	2		=			
ANR	5110942	Identifier	offset		5110934	0					
ANR	5110943	PrimaryExpression	0		5110934	1					
ANR	5110944	IdentifierDeclStatement	char * str = func_name ;	557:1:15020:15041	5110934	1	True				
ANR	5110945	IdentifierDecl	* str = func_name		5110934	0					
ANR	5110946	IdentifierDeclType	char *		5110934	0					
ANR	5110947	Identifier	str		5110934	1					
ANR	5110948	AssignmentExpression	* str = func_name		5110934	2		=			
ANR	5110949	Identifier	func_name		5110934	0					
ANR	5110950	Identifier	func_name		5110934	1					
ANR	5110951	IdentifierDeclStatement	char * result = NULL ;	558:1:15044:15063	5110934	2	True				
ANR	5110952	IdentifierDecl	* result = NULL		5110934	0					
ANR	5110953	IdentifierDeclType	char *		5110934	0					
ANR	5110954	Identifier	result		5110934	1					
ANR	5110955	AssignmentExpression	* result = NULL		5110934	2		=			
ANR	5110956	Identifier	NULL		5110934	0					
ANR	5110957	Identifier	NULL		5110934	1					
ANR	5110958	IdentifierDeclStatement	char * first ;	559:1:15066:15077	5110934	3	True				
ANR	5110959	IdentifierDecl	* first		5110934	0					
ANR	5110960	IdentifierDeclType	char *		5110934	0					
ANR	5110961	Identifier	first		5110934	1					
ANR	5110962	ExpressionStatement	"r_return_val_if_fail ( TDB , false )"	560:1:15080:15113	5110934	4	True				
ANR	5110963	CallExpression	"r_return_val_if_fail ( TDB , false )"		5110934	0					
ANR	5110964	Callee	r_return_val_if_fail		5110934	0					
ANR	5110965	Identifier	r_return_val_if_fail		5110934	0					
ANR	5110966	ArgumentList	TDB		5110934	1					
ANR	5110967	Argument	TDB		5110934	0					
ANR	5110968	Identifier	TDB		5110934	0					
ANR	5110969	Argument	false		5110934	1					
ANR	5110970	Identifier	false		5110934	0					
ANR	5110971	ExpressionStatement	"r_return_val_if_fail ( func_name , false )"	561:1:15116:15155	5110934	5	True				
ANR	5110972	CallExpression	"r_return_val_if_fail ( func_name , false )"		5110934	0					
ANR	5110973	Callee	r_return_val_if_fail		5110934	0					
ANR	5110974	Identifier	r_return_val_if_fail		5110934	0					
ANR	5110975	ArgumentList	func_name		5110934	1					
ANR	5110976	Argument	func_name		5110934	0					
ANR	5110977	Identifier	func_name		5110934	0					
ANR	5110978	Argument	false		5110934	1					
ANR	5110979	Identifier	false		5110934	0					
ANR	5110980	IdentifierDeclStatement	size_t slen = strlen ( str ) ;	563:1:15159:15185	5110934	6	True				
ANR	5110981	IdentifierDecl	slen = strlen ( str )		5110934	0					
ANR	5110982	IdentifierDeclType	size_t		5110934	0					
ANR	5110983	Identifier	slen		5110934	1					
ANR	5110984	AssignmentExpression	slen = strlen ( str )		5110934	2		=			
ANR	5110985	Identifier	slen		5110934	0					
ANR	5110986	CallExpression	strlen ( str )		5110934	1					
ANR	5110987	Callee	strlen		5110934	0					
ANR	5110988	Identifier	strlen		5110934	0					
ANR	5110989	ArgumentList	str		5110934	1					
ANR	5110990	Argument	str		5110934	0					
ANR	5110991	Identifier	str		5110934	0					
ANR	5110992	IfStatement	if ( slen < MIN_MATCH_LEN )		5110934	7					
ANR	5110993	Condition	slen < MIN_MATCH_LEN	564:5:15192:15211	5110934	0	True				
ANR	5110994	RelationalExpression	slen < MIN_MATCH_LEN		5110934	0		<			
ANR	5110995	Identifier	slen		5110934	0					
ANR	5110996	Identifier	MIN_MATCH_LEN		5110934	1					
ANR	5110997	CompoundStatement		10:27:213:213	5110934	1					
ANR	5110998	ReturnStatement	return NULL ;	565:2:15218:15229	5110934	0	True				
ANR	5110999	Identifier	NULL		5110934	0					
ANR	5111000	IfStatement	if ( slen > 4 )		5110934	8					
ANR	5111001	Condition	slen > 4	568:5:15240:15247	5110934	0	True				
ANR	5111002	RelationalExpression	slen > 4		5110934	0		>			
ANR	5111003	Identifier	slen		5110934	0					
ANR	5111004	PrimaryExpression	4		5110934	1					
ANR	5111005	CompoundStatement		14:15:249:249	5110934	1					
ANR	5111006	IfStatement	"if ( ! strncmp ( str , ""fcn."" , 4 ) || ! strncmp ( str , ""loc."" , 4 ) )"		5110934	0					
ANR	5111007	Condition	"! strncmp ( str , ""fcn."" , 4 ) || ! strncmp ( str , ""loc."" , 4 )"	569:6:15300:15353	5110934	0	True				
ANR	5111008	OrExpression	"! strncmp ( str , ""fcn."" , 4 ) || ! strncmp ( str , ""loc."" , 4 )"		5110934	0		||			
ANR	5111009	UnaryOperationExpression	"! strncmp ( str , ""fcn."" , 4 )"		5110934	0					
ANR	5111010	UnaryOperator	!		5110934	0					
ANR	5111011	CallExpression	"strncmp ( str , ""fcn."" , 4 )"		5110934	1					
ANR	5111012	Callee	strncmp		5110934	0					
ANR	5111013	Identifier	strncmp		5110934	0					
ANR	5111014	ArgumentList	str		5110934	1					
ANR	5111015	Argument	str		5110934	0					
ANR	5111016	Identifier	str		5110934	0					
ANR	5111017	Argument	"""fcn."""		5110934	1					
ANR	5111018	PrimaryExpression	"""fcn."""		5110934	0					
ANR	5111019	Argument	4		5110934	2					
ANR	5111020	PrimaryExpression	4		5110934	0					
ANR	5111021	UnaryOperationExpression	"! strncmp ( str , ""loc."" , 4 )"		5110934	1					
ANR	5111022	UnaryOperator	!		5110934	0					
ANR	5111023	CallExpression	"strncmp ( str , ""loc."" , 4 )"		5110934	1					
ANR	5111024	Callee	strncmp		5110934	0					
ANR	5111025	Identifier	strncmp		5110934	0					
ANR	5111026	ArgumentList	str		5110934	1					
ANR	5111027	Argument	str		5110934	0					
ANR	5111028	Identifier	str		5110934	0					
ANR	5111029	Argument	"""loc."""		5110934	1					
ANR	5111030	PrimaryExpression	"""loc."""		5110934	0					
ANR	5111031	Argument	4		5110934	2					
ANR	5111032	PrimaryExpression	4		5110934	0					
ANR	5111033	CompoundStatement		15:62:355:355	5110934	1					
ANR	5111034	ReturnStatement	return NULL ;	570:3:15361:15372	5110934	0	True				
ANR	5111035	Identifier	NULL		5110934	0					
ANR	5111036	WhileStatement	while ( slen > 4 && ( offset + 3 < slen ) && str [ offset + 3 ] == '.' )		5110934	9					
ANR	5111037	Condition	slen > 4 && ( offset + 3 < slen ) && str [ offset + 3 ] == '.'	574:8:15432:15488	5110934	0	True				
ANR	5111038	AndExpression	slen > 4 && ( offset + 3 < slen ) && str [ offset + 3 ] == '.'		5110934	0		&&			
ANR	5111039	RelationalExpression	slen > 4		5110934	0		>			
ANR	5111040	Identifier	slen		5110934	0					
ANR	5111041	PrimaryExpression	4		5110934	1					
ANR	5111042	AndExpression	( offset + 3 < slen ) && str [ offset + 3 ] == '.'		5110934	1		&&			
ANR	5111043	RelationalExpression	offset + 3 < slen		5110934	0		<			
ANR	5111044	AdditiveExpression	offset + 3		5110934	0		+			
ANR	5111045	Identifier	offset		5110934	0					
ANR	5111046	PrimaryExpression	3		5110934	1					
ANR	5111047	Identifier	slen		5110934	1					
ANR	5111048	EqualityExpression	str [ offset + 3 ] == '.'		5110934	1		==			
ANR	5111049	ArrayIndexing	str [ offset + 3 ]		5110934	0					
ANR	5111050	Identifier	str		5110934	0					
ANR	5111051	AdditiveExpression	offset + 3		5110934	1		+			
ANR	5111052	Identifier	offset		5110934	0					
ANR	5111053	PrimaryExpression	3		5110934	1					
ANR	5111054	PrimaryExpression	'.'		5110934	1					
ANR	5111055	CompoundStatement		20:67:490:490	5110934	1					
ANR	5111056	ExpressionStatement	offset += 4	575:2:15495:15506	5110934	0	True				
ANR	5111057	AssignmentExpression	offset += 4		5110934	0		+=			
ANR	5111058	Identifier	offset		5110934	0					
ANR	5111059	PrimaryExpression	4		5110934	1					
ANR	5111060	ExpressionStatement	slen -= offset	577:1:15512:15526	5110934	10	True				
ANR	5111061	AssignmentExpression	slen -= offset		5110934	0		-=			
ANR	5111062	Identifier	slen		5110934	0					
ANR	5111063	Identifier	offset		5110934	1					
ANR	5111064	ExpressionStatement	str += offset	578:1:15529:15542	5110934	11	True				
ANR	5111065	AssignmentExpression	str += offset		5110934	0		+=			
ANR	5111066	Identifier	str		5110934	0					
ANR	5111067	Identifier	offset		5110934	1					
ANR	5111068	IfStatement	"if ( ! strncmp ( str , ""__isoc99_"" , 9 ) )"		5110934	12					
ANR	5111069	Condition	"! strncmp ( str , ""__isoc99_"" , 9 )"	580:5:15603:15632	5110934	0	True				
ANR	5111070	UnaryOperationExpression	"! strncmp ( str , ""__isoc99_"" , 9 )"		5110934	0					
ANR	5111071	UnaryOperator	!		5110934	0					
ANR	5111072	CallExpression	"strncmp ( str , ""__isoc99_"" , 9 )"		5110934	1					
ANR	5111073	Callee	strncmp		5110934	0					
ANR	5111074	Identifier	strncmp		5110934	0					
ANR	5111075	ArgumentList	str		5110934	1					
ANR	5111076	Argument	str		5110934	0					
ANR	5111077	Identifier	str		5110934	0					
ANR	5111078	Argument	"""__isoc99_"""		5110934	1					
ANR	5111079	PrimaryExpression	"""__isoc99_"""		5110934	0					
ANR	5111080	Argument	9		5110934	2					
ANR	5111081	PrimaryExpression	9		5110934	0					
ANR	5111082	CompoundStatement		26:37:634:634	5110934	1					
ANR	5111083	ExpressionStatement	str += 9	581:2:15639:15647	5110934	0	True				
ANR	5111084	AssignmentExpression	str += 9		5110934	0		+=			
ANR	5111085	Identifier	str		5110934	0					
ANR	5111086	PrimaryExpression	9		5110934	1					
ANR	5111087	ElseStatement	else		5110934	0					
ANR	5111088	IfStatement	"if ( ! strncmp ( str , ""__libc_"" , 7 ) && ! strstr ( str , ""_main"" ) )"		5110934	0					
ANR	5111089	Condition	"! strncmp ( str , ""__libc_"" , 7 ) && ! strstr ( str , ""_main"" )"	582:12:15661:15712	5110934	0	True				
ANR	5111090	AndExpression	"! strncmp ( str , ""__libc_"" , 7 ) && ! strstr ( str , ""_main"" )"		5110934	0		&&			
ANR	5111091	UnaryOperationExpression	"! strncmp ( str , ""__libc_"" , 7 )"		5110934	0					
ANR	5111092	UnaryOperator	!		5110934	0					
ANR	5111093	CallExpression	"strncmp ( str , ""__libc_"" , 7 )"		5110934	1					
ANR	5111094	Callee	strncmp		5110934	0					
ANR	5111095	Identifier	strncmp		5110934	0					
ANR	5111096	ArgumentList	str		5110934	1					
ANR	5111097	Argument	str		5110934	0					
ANR	5111098	Identifier	str		5110934	0					
ANR	5111099	Argument	"""__libc_"""		5110934	1					
ANR	5111100	PrimaryExpression	"""__libc_"""		5110934	0					
ANR	5111101	Argument	7		5110934	2					
ANR	5111102	PrimaryExpression	7		5110934	0					
ANR	5111103	UnaryOperationExpression	"! strstr ( str , ""_main"" )"		5110934	1					
ANR	5111104	UnaryOperator	!		5110934	0					
ANR	5111105	CallExpression	"strstr ( str , ""_main"" )"		5110934	1					
ANR	5111106	Callee	strstr		5110934	0					
ANR	5111107	Identifier	strstr		5110934	0					
ANR	5111108	ArgumentList	str		5110934	1					
ANR	5111109	Argument	str		5110934	0					
ANR	5111110	Identifier	str		5110934	0					
ANR	5111111	Argument	"""_main"""		5110934	1					
ANR	5111112	PrimaryExpression	"""_main"""		5110934	0					
ANR	5111113	CompoundStatement		28:66:714:714	5110934	1					
ANR	5111114	ExpressionStatement	str += 7	583:2:15719:15727	5110934	0	True				
ANR	5111115	AssignmentExpression	str += 7		5110934	0		+=			
ANR	5111116	Identifier	str		5110934	0					
ANR	5111117	PrimaryExpression	7		5110934	1					
ANR	5111118	ElseStatement	else		5110934	0					
ANR	5111119	IfStatement	"if ( ! strncmp ( str , ""__GI_"" , 5 ) )"		5110934	0					
ANR	5111120	Condition	"! strncmp ( str , ""__GI_"" , 5 )"	584:12:15741:15766	5110934	0	True				
ANR	5111121	UnaryOperationExpression	"! strncmp ( str , ""__GI_"" , 5 )"		5110934	0					
ANR	5111122	UnaryOperator	!		5110934	0					
ANR	5111123	CallExpression	"strncmp ( str , ""__GI_"" , 5 )"		5110934	1					
ANR	5111124	Callee	strncmp		5110934	0					
ANR	5111125	Identifier	strncmp		5110934	0					
ANR	5111126	ArgumentList	str		5110934	1					
ANR	5111127	Argument	str		5110934	0					
ANR	5111128	Identifier	str		5110934	0					
ANR	5111129	Argument	"""__GI_"""		5110934	1					
ANR	5111130	PrimaryExpression	"""__GI_"""		5110934	0					
ANR	5111131	Argument	5		5110934	2					
ANR	5111132	PrimaryExpression	5		5110934	0					
ANR	5111133	CompoundStatement		30:40:768:768	5110934	1					
ANR	5111134	ExpressionStatement	str += 5	585:2:15773:15781	5110934	0	True				
ANR	5111135	AssignmentExpression	str += 5		5110934	0		+=			
ANR	5111136	Identifier	str		5110934	0					
ANR	5111137	PrimaryExpression	5		5110934	1					
ANR	5111138	IfStatement	"if ( ( result = type_func_try_guess ( TDB , str ) ) )"		5110934	13					
ANR	5111139	Condition	"result = type_func_try_guess ( TDB , str )"	587:5:15791:15831	5110934	0	True				
ANR	5111140	AssignmentExpression	"result = type_func_try_guess ( TDB , str )"		5110934	0		=			
ANR	5111141	Identifier	result		5110934	0					
ANR	5111142	CallExpression	"type_func_try_guess ( TDB , str )"		5110934	1					
ANR	5111143	Callee	type_func_try_guess		5110934	0					
ANR	5111144	Identifier	type_func_try_guess		5110934	0					
ANR	5111145	ArgumentList	TDB		5110934	1					
ANR	5111146	Argument	TDB		5110934	0					
ANR	5111147	Identifier	TDB		5110934	0					
ANR	5111148	Argument	str		5110934	1					
ANR	5111149	Identifier	str		5110934	0					
ANR	5111150	CompoundStatement		33:48:833:833	5110934	1					
ANR	5111151	ReturnStatement	return result ;	588:2:15838:15851	5110934	0	True				
ANR	5111152	Identifier	result		5110934	0					
ANR	5111153	IfStatement	"if ( * str == '_' && ( result = type_func_try_guess ( TDB , str + 1 ) ) )"		5110934	14					
ANR	5111154	Condition	"* str == '_' && ( result = type_func_try_guess ( TDB , str + 1 ) )"	591:5:15862:15921	5110934	0	True				
ANR	5111155	AndExpression	"* str == '_' && ( result = type_func_try_guess ( TDB , str + 1 ) )"		5110934	0		&&			
ANR	5111156	EqualityExpression	* str == '_'		5110934	0		==			
ANR	5111157	UnaryOperationExpression	* str		5110934	0					
ANR	5111158	UnaryOperator	*		5110934	0					
ANR	5111159	Identifier	str		5110934	1					
ANR	5111160	PrimaryExpression	'_'		5110934	1					
ANR	5111161	AssignmentExpression	"result = type_func_try_guess ( TDB , str + 1 )"		5110934	1		=			
ANR	5111162	Identifier	result		5110934	0					
ANR	5111163	CallExpression	"type_func_try_guess ( TDB , str + 1 )"		5110934	1					
ANR	5111164	Callee	type_func_try_guess		5110934	0					
ANR	5111165	Identifier	type_func_try_guess		5110934	0					
ANR	5111166	ArgumentList	TDB		5110934	1					
ANR	5111167	Argument	TDB		5110934	0					
ANR	5111168	Identifier	TDB		5110934	0					
ANR	5111169	Argument	str + 1		5110934	1					
ANR	5111170	AdditiveExpression	str + 1		5110934	0		+			
ANR	5111171	Identifier	str		5110934	0					
ANR	5111172	PrimaryExpression	1		5110934	1					
ANR	5111173	CompoundStatement		37:67:923:923	5110934	1					
ANR	5111174	ReturnStatement	return result ;	592:2:15928:15941	5110934	0	True				
ANR	5111175	Identifier	result		5110934	0					
ANR	5111176	ExpressionStatement	str = strdup ( str )	594:1:15947:15965	5110934	15	True				
ANR	5111177	AssignmentExpression	str = strdup ( str )		5110934	0		=			
ANR	5111178	Identifier	str		5110934	0					
ANR	5111179	CallExpression	strdup ( str )		5110934	1					
ANR	5111180	Callee	strdup		5110934	0					
ANR	5111181	Identifier	strdup		5110934	0					
ANR	5111182	ArgumentList	str		5110934	1					
ANR	5111183	Argument	str		5110934	0					
ANR	5111184	Identifier	str		5110934	0					
ANR	5111185	IdentifierDeclStatement	"char * l = ( char * ) r_str_lchr ( str , '_' ) ;"	597:1:16054:16093	5110934	16	True				
ANR	5111186	IdentifierDecl	"* l = ( char * ) r_str_lchr ( str , '_' )"		5110934	0					
ANR	5111187	IdentifierDeclType	char *		5110934	0					
ANR	5111188	Identifier	l		5110934	1					
ANR	5111189	AssignmentExpression	"* l = ( char * ) r_str_lchr ( str , '_' )"		5110934	2		=			
ANR	5111190	Identifier	l		5110934	0					
ANR	5111191	CastExpression	"( char * ) r_str_lchr ( str , '_' )"		5110934	1					
ANR	5111192	CastTarget	char *		5110934	0					
ANR	5111193	CallExpression	"r_str_lchr ( str , '_' )"		5110934	1					
ANR	5111194	Callee	r_str_lchr		5110934	0					
ANR	5111195	Identifier	r_str_lchr		5110934	0					
ANR	5111196	ArgumentList	str		5110934	1					
ANR	5111197	Argument	str		5110934	0					
ANR	5111198	Identifier	str		5110934	0					
ANR	5111199	Argument	'_'		5110934	1					
ANR	5111200	PrimaryExpression	'_'		5110934	0					
ANR	5111201	IfStatement	if ( l )		5110934	17					
ANR	5111202	Condition	l	598:5:16100:16100	5110934	0	True				
ANR	5111203	Identifier	l		5110934	0					
ANR	5111204	CompoundStatement		46:2:1127:1158	5110934	1					
ANR	5111205	IdentifierDeclStatement	char * tmp = l + 1 ;	599:2:16107:16124	5110934	0	True				
ANR	5111206	IdentifierDecl	* tmp = l + 1		5110934	0					
ANR	5111207	IdentifierDeclType	char *		5110934	0					
ANR	5111208	Identifier	tmp		5110934	1					
ANR	5111209	AssignmentExpression	* tmp = l + 1		5110934	2		=			
ANR	5111210	Identifier	tmp		5110934	0					
ANR	5111211	AdditiveExpression	l + 1		5110934	1		+			
ANR	5111212	Identifier	l		5110934	0					
ANR	5111213	PrimaryExpression	1		5110934	1					
ANR	5111214	IdentifierDeclStatement	"char * first = strchr ( str , '_' ) ;"	600:2:16128:16159	5110934	1	True				
ANR	5111215	IdentifierDecl	"* first = strchr ( str , '_' )"		5110934	0					
ANR	5111216	IdentifierDeclType	char *		5110934	0					
ANR	5111217	Identifier	first		5110934	1					
ANR	5111218	AssignmentExpression	"* first = strchr ( str , '_' )"		5110934	2		=			
ANR	5111219	Identifier	first		5110934	0					
ANR	5111220	CallExpression	"strchr ( str , '_' )"		5110934	1					
ANR	5111221	Callee	strchr		5110934	0					
ANR	5111222	Identifier	strchr		5110934	0					
ANR	5111223	ArgumentList	str		5110934	1					
ANR	5111224	Argument	str		5110934	0					
ANR	5111225	Identifier	str		5110934	0					
ANR	5111226	Argument	'_'		5110934	1					
ANR	5111227	PrimaryExpression	'_'		5110934	0					
ANR	5111228	WhileStatement	while ( tmp && IS_DIGIT ( * tmp ) )		5110934	2					
ANR	5111229	Condition	tmp && IS_DIGIT ( * tmp )	601:9:16170:16191	5110934	0	True				
ANR	5111230	AndExpression	tmp && IS_DIGIT ( * tmp )		5110934	0		&&			
ANR	5111231	Identifier	tmp		5110934	0					
ANR	5111232	CallExpression	IS_DIGIT ( * tmp )		5110934	1					
ANR	5111233	Callee	IS_DIGIT		5110934	0					
ANR	5111234	Identifier	IS_DIGIT		5110934	0					
ANR	5111235	ArgumentList	* tmp		5110934	1					
ANR	5111236	Argument	* tmp		5110934	0					
ANR	5111237	UnaryOperationExpression	* tmp		5110934	0					
ANR	5111238	UnaryOperator	*		5110934	0					
ANR	5111239	Identifier	tmp		5110934	1					
ANR	5111240	CompoundStatement		47:33:1193:1193	5110934	1					
ANR	5111241	ExpressionStatement	tmp ++	602:3:16199:16204	5110934	0	True				
ANR	5111242	PostIncDecOperationExpression	tmp ++		5110934	0					
ANR	5111243	Identifier	tmp		5110934	0					
ANR	5111244	IncDec	++		5110934	1					
ANR	5111245	IfStatement	if ( tmp && first && ! * tmp )		5110934	3					
ANR	5111246	Condition	tmp && first && ! * tmp	604:6:16216:16236	5110934	0	True				
ANR	5111247	AndExpression	tmp && first && ! * tmp		5110934	0		&&			
ANR	5111248	Identifier	tmp		5110934	0					
ANR	5111249	AndExpression	first && ! * tmp		5110934	1		&&			
ANR	5111250	Identifier	first		5110934	0					
ANR	5111251	UnaryOperationExpression	! * tmp		5110934	1					
ANR	5111252	UnaryOperator	!		5110934	0					
ANR	5111253	UnaryOperationExpression	* tmp		5110934	1					
ANR	5111254	UnaryOperator	*		5110934	0					
ANR	5111255	Identifier	tmp		5110934	1					
ANR	5111256	CompoundStatement		50:29:1238:1238	5110934	1					
ANR	5111257	ExpressionStatement	* l = '\\0'	605:3:16244:16253	5110934	0	True				
ANR	5111258	AssignmentExpression	* l = '\\0'		5110934	0		=			
ANR	5111259	UnaryOperationExpression	* l		5110934	0					
ANR	5111260	UnaryOperator	*		5110934	0					
ANR	5111261	Identifier	l		5110934	1					
ANR	5111262	PrimaryExpression	'\\0'		5110934	1					
ANR	5111263	IfStatement	"if ( * str == '_' && ( result = type_func_try_guess ( TDB , str + 1 ) ) )"		5110934	1					
ANR	5111264	Condition	"* str == '_' && ( result = type_func_try_guess ( TDB , str + 1 ) )"	606:7:16262:16321	5110934	0	True				
ANR	5111265	AndExpression	"* str == '_' && ( result = type_func_try_guess ( TDB , str + 1 ) )"		5110934	0		&&			
ANR	5111266	EqualityExpression	* str == '_'		5110934	0		==			
ANR	5111267	UnaryOperationExpression	* str		5110934	0					
ANR	5111268	UnaryOperator	*		5110934	0					
ANR	5111269	Identifier	str		5110934	1					
ANR	5111270	PrimaryExpression	'_'		5110934	1					
ANR	5111271	AssignmentExpression	"result = type_func_try_guess ( TDB , str + 1 )"		5110934	1		=			
ANR	5111272	Identifier	result		5110934	0					
ANR	5111273	CallExpression	"type_func_try_guess ( TDB , str + 1 )"		5110934	1					
ANR	5111274	Callee	type_func_try_guess		5110934	0					
ANR	5111275	Identifier	type_func_try_guess		5110934	0					
ANR	5111276	ArgumentList	TDB		5110934	1					
ANR	5111277	Argument	TDB		5110934	0					
ANR	5111278	Identifier	TDB		5110934	0					
ANR	5111279	Argument	str + 1		5110934	1					
ANR	5111280	AdditiveExpression	str + 1		5110934	0		+			
ANR	5111281	Identifier	str		5110934	0					
ANR	5111282	PrimaryExpression	1		5110934	1					
ANR	5111283	CompoundStatement		52:69:1323:1323	5110934	1					
ANR	5111284	ExpressionStatement	free ( str )	607:4:16330:16340	5110934	0	True				
ANR	5111285	CallExpression	free ( str )		5110934	0					
ANR	5111286	Callee	free		5110934	0					
ANR	5111287	Identifier	free		5110934	0					
ANR	5111288	ArgumentList	str		5110934	1					
ANR	5111289	Argument	str		5110934	0					
ANR	5111290	Identifier	str		5110934	0					
ANR	5111291	ReturnStatement	return result ;	608:4:16346:16359	5110934	1	True				
ANR	5111292	Identifier	result		5110934	0					
ANR	5111293	IfStatement	"if ( ( first = strstr ( str , ""dll_"" ) ) )"		5110934	18					
ANR	5111294	Condition	"first = strstr ( str , ""dll_"" )"	614:5:16508:16537	5110934	0	True				
ANR	5111295	AssignmentExpression	"first = strstr ( str , ""dll_"" )"		5110934	0		=			
ANR	5111296	Identifier	first		5110934	0					
ANR	5111297	CallExpression	"strstr ( str , ""dll_"" )"		5110934	1					
ANR	5111298	Callee	strstr		5110934	0					
ANR	5111299	Identifier	strstr		5110934	0					
ANR	5111300	ArgumentList	str		5110934	1					
ANR	5111301	Argument	str		5110934	0					
ANR	5111302	Identifier	str		5110934	0					
ANR	5111303	Argument	"""dll_"""		5110934	1					
ANR	5111304	PrimaryExpression	"""dll_"""		5110934	0					
ANR	5111305	CompoundStatement		60:37:1539:1539	5110934	1					
ANR	5111306	ExpressionStatement	"result = type_func_try_guess ( TDB , first + 4 )"	615:2:16544:16589	5110934	0	True				
ANR	5111307	AssignmentExpression	"result = type_func_try_guess ( TDB , first + 4 )"		5110934	0		=			
ANR	5111308	Identifier	result		5110934	0					
ANR	5111309	CallExpression	"type_func_try_guess ( TDB , first + 4 )"		5110934	1					
ANR	5111310	Callee	type_func_try_guess		5110934	0					
ANR	5111311	Identifier	type_func_try_guess		5110934	0					
ANR	5111312	ArgumentList	TDB		5110934	1					
ANR	5111313	Argument	TDB		5110934	0					
ANR	5111314	Identifier	TDB		5110934	0					
ANR	5111315	Argument	first + 4		5110934	1					
ANR	5111316	AdditiveExpression	first + 4		5110934	0		+			
ANR	5111317	Identifier	first		5110934	0					
ANR	5111318	PrimaryExpression	4		5110934	1					
ANR	5111319	GotoStatement	goto out ;	616:2:16593:16601	5110934	1	True				
ANR	5111320	Identifier	out		5110934	0					
ANR	5111321	Label	out :	618:0:16606:16609	5110934	19	True				
ANR	5111322	Identifier	out		5110934	0					
ANR	5111323	ExpressionStatement	free ( str )	619:1:16612:16622	5110934	20	True				
ANR	5111324	CallExpression	free ( str )		5110934	0					
ANR	5111325	Callee	free		5110934	0					
ANR	5111326	Identifier	free		5110934	0					
ANR	5111327	ArgumentList	str		5110934	1					
ANR	5111328	Argument	str		5110934	0					
ANR	5111329	Identifier	str		5110934	0					
ANR	5111330	ReturnStatement	return result ;	620:1:16625:16638	5110934	21	True				
ANR	5111331	Identifier	result		5110934	0					
ANR	5111332	ReturnType	R_API R_OWN char *		5110934	1					
ANR	5111333	Identifier	r_type_func_guess		5110934	2					
ANR	5111334	ParameterList	"Sdb * TDB , R_NONNULL char * func_name"		5110934	3					
ANR	5111335	Parameter	Sdb * TDB	555:36:14963:14970	5110934	0	True				
ANR	5111336	ParameterType	Sdb *		5110934	0					
ANR	5111337	Identifier	TDB		5110934	1					
ANR	5111338	Parameter	R_NONNULL char * func_name	555:46:14973:14997	5110934	1	True				
ANR	5111339	ParameterType	R_NONNULL char *		5110934	0					
ANR	5111340	Identifier	func_name		5110934	1					
ANR	5111341	CFGEntryNode	ENTRY		5110934		True				
ANR	5111342	CFGExitNode	EXIT		5110934		True				
ANR	5111343	Symbol	* tmp		5110934						
ANR	5111344	Symbol	NULL		5110934						
ANR	5111345	Symbol	offset		5110934						
ANR	5111346	Symbol	false		5110934						
ANR	5111347	Symbol	strchr		5110934						
ANR	5111348	Symbol	MIN_MATCH_LEN		5110934						
ANR	5111349	Symbol	l		5110934						
ANR	5111350	Symbol	type_func_try_guess		5110934						
ANR	5111351	Symbol	IS_DIGIT		5110934						
ANR	5111352	Symbol	str		5110934						
ANR	5111353	Symbol	result		5110934						
ANR	5111354	Symbol	strlen		5110934						
ANR	5111355	Symbol	strncmp		5110934						
ANR	5111356	Symbol	TDB		5110934						
ANR	5111357	Symbol	strstr		5110934						
ANR	5111358	Symbol	r_str_lchr		5110934						
ANR	5111359	Symbol	tmp		5110934						
ANR	5111360	Symbol	* l		5110934						
ANR	5111361	Symbol	slen		5110934						
ANR	5111362	Symbol	* offset		5110934						
ANR	5111363	Symbol	* str		5110934						
ANR	5111364	Symbol	strdup		5110934						
ANR	5111365	Symbol	first		5110934						
ANR	5111366	Symbol	func_name		5110934						
