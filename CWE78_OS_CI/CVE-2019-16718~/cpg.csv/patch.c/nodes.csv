command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5561841	File	data/converged/CVE-2019-16718~_radare2/patch.c								
ANR	5561842	Function	r_core_patch_line	5:0:74:891							
ANR	5561843	FunctionDef	"r_core_patch_line (RCore * core , char * str)"		5561842	0					
ANR	5561844	CompoundStatement		5:53:127:891	5561842	0					
ANR	5561845	IdentifierDeclStatement	"char * p , * q ;"	6:1:130:141	5561842	0	True				
ANR	5561846	IdentifierDecl	* p		5561842	0					
ANR	5561847	IdentifierDeclType	char *		5561842	0					
ANR	5561848	Identifier	p		5561842	1					
ANR	5561849	IdentifierDecl	* q		5561842	1					
ANR	5561850	IdentifierDeclType	char *		5561842	0					
ANR	5561851	Identifier	q		5561842	1					
ANR	5561852	ExpressionStatement	"p = strchr ( str + 1 , ' ' )"	7:1:144:169	5561842	1	True				
ANR	5561853	AssignmentExpression	"p = strchr ( str + 1 , ' ' )"		5561842	0		=			
ANR	5561854	Identifier	p		5561842	0					
ANR	5561855	CallExpression	"strchr ( str + 1 , ' ' )"		5561842	1					
ANR	5561856	Callee	strchr		5561842	0					
ANR	5561857	Identifier	strchr		5561842	0					
ANR	5561858	ArgumentList	str + 1		5561842	1					
ANR	5561859	Argument	str + 1		5561842	0					
ANR	5561860	AdditiveExpression	str + 1		5561842	0		+			
ANR	5561861	Identifier	str		5561842	0					
ANR	5561862	PrimaryExpression	1		5561842	1					
ANR	5561863	Argument	' '		5561842	1					
ANR	5561864	PrimaryExpression	' '		5561842	0					
ANR	5561865	IfStatement	if ( ! p )		5561842	2					
ANR	5561866	Condition	! p	8:5:176:177	5561842	0	True				
ANR	5561867	UnaryOperationExpression	! p		5561842	0					
ANR	5561868	UnaryOperator	!		5561842	0					
ANR	5561869	Identifier	p		5561842	1					
ANR	5561870	CompoundStatement		4:9:52:52	5561842	1					
ANR	5561871	ReturnStatement	return 0 ;	9:2:184:192	5561842	0	True				
ANR	5561872	PrimaryExpression	0		5561842	0					
ANR	5561873	ExpressionStatement	* p = 0	11:1:198:204	5561842	3	True				
ANR	5561874	AssignmentExpression	* p = 0		5561842	0		=			
ANR	5561875	UnaryOperationExpression	* p		5561842	0					
ANR	5561876	UnaryOperator	*		5561842	0					
ANR	5561877	Identifier	p		5561842	1					
ANR	5561878	PrimaryExpression	0		5561842	1					
ANR	5561879	ForStatement	for ( ++ p ; * p == ' ' ; p ++ )		5561842	4					
ANR	5561880	ForInit	++ p ;	12:6:212:215	5561842	0	True				
ANR	5561881	UnaryExpression	++ p		5561842	0					
ANR	5561882	IncDec	++		5561842	0					
ANR	5561883	Identifier	p		5561842	1					
ANR	5561884	Condition	* p == ' '	12:11:217:225	5561842	1	True				
ANR	5561885	EqualityExpression	* p == ' '		5561842	0		==			
ANR	5561886	UnaryOperationExpression	* p		5561842	0					
ANR	5561887	UnaryOperator	*		5561842	0					
ANR	5561888	Identifier	p		5561842	1					
ANR	5561889	PrimaryExpression	' '		5561842	1					
ANR	5561890	PostIncDecOperationExpression	p ++	12:22:228:230	5561842	2	True				
ANR	5561891	Identifier	p		5561842	0					
ANR	5561892	IncDec	++		5561842	1					
ANR	5561893	CompoundStatement		8:27:105:105	5561842	3					
ANR	5561894	ExpressionStatement		13:2:237:237	5561842	0	True				
ANR	5561895	SwitchStatement	switch ( * p )		5561842	5					
ANR	5561896	Condition	* p	16:9:277:278	5561842	0	True				
ANR	5561897	UnaryOperationExpression	* p		5561842	0					
ANR	5561898	UnaryOperator	*		5561842	0					
ANR	5561899	Identifier	p		5561842	1					
ANR	5561900	CompoundStatement		12:13:153:153	5561842	1					
ANR	5561901	Label	"case '""' :"	17:1:284:292	5561842	0	True				
ANR	5561902	ExpressionStatement	"q = strchr ( p + 1 , '""' )"	18:4:298:320	5561842	1	True				
ANR	5561903	AssignmentExpression	"q = strchr ( p + 1 , '""' )"		5561842	0		=			
ANR	5561904	Identifier	q		5561842	0					
ANR	5561905	CallExpression	"strchr ( p + 1 , '""' )"		5561842	1					
ANR	5561906	Callee	strchr		5561842	0					
ANR	5561907	Identifier	strchr		5561842	0					
ANR	5561908	ArgumentList	p + 1		5561842	1					
ANR	5561909	Argument	p + 1		5561842	0					
ANR	5561910	AdditiveExpression	p + 1		5561842	0		+			
ANR	5561911	Identifier	p		5561842	0					
ANR	5561912	PrimaryExpression	1		5561842	1					
ANR	5561913	Argument	"'""'"		5561842	1					
ANR	5561914	PrimaryExpression	"'""'"		5561842	0					
ANR	5561915	IfStatement	if ( q )		5561842	2					
ANR	5561916	Condition	q	19:8:330:330	5561842	0	True				
ANR	5561917	Identifier	q		5561842	0					
ANR	5561918	CompoundStatement		15:11:205:205	5561842	1					
ANR	5561919	ExpressionStatement	* q = 0	20:5:340:346	5561842	0	True				
ANR	5561920	AssignmentExpression	* q = 0		5561842	0		=			
ANR	5561921	UnaryOperationExpression	* q		5561842	0					
ANR	5561922	UnaryOperator	*		5561842	0					
ANR	5561923	Identifier	q		5561842	1					
ANR	5561924	PrimaryExpression	0		5561842	1					
ANR	5561925	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	22:4:358:389	5561842	3	True				
ANR	5561926	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		5561842	0					
ANR	5561927	Callee	r_core_cmdf		5561842	0					
ANR	5561928	Identifier	r_core_cmdf		5561842	0					
ANR	5561929	ArgumentList	core		5561842	1					
ANR	5561930	Argument	core		5561842	0					
ANR	5561931	Identifier	core		5561842	0					
ANR	5561932	Argument	"""s %s"""		5561842	1					
ANR	5561933	PrimaryExpression	"""s %s"""		5561842	0					
ANR	5561934	Argument	str		5561842	2					
ANR	5561935	Identifier	str		5561842	0					
ANR	5561936	ExpressionStatement	"r_core_cmdf ( core , ""\\""w %s\\"""" , p + 1 )"	23:4:395:430	5561842	4	True				
ANR	5561937	CallExpression	"r_core_cmdf ( core , ""\\""w %s\\"""" , p + 1 )"		5561842	0					
ANR	5561938	Callee	r_core_cmdf		5561842	0					
ANR	5561939	Identifier	r_core_cmdf		5561842	0					
ANR	5561940	ArgumentList	core		5561842	1					
ANR	5561941	Argument	core		5561842	0					
ANR	5561942	Identifier	core		5561842	0					
ANR	5561943	Argument	"""\\""w %s\\"""""		5561842	1					
ANR	5561944	PrimaryExpression	"""\\""w %s\\"""""		5561842	0					
ANR	5561945	Argument	p + 1		5561842	2					
ANR	5561946	AdditiveExpression	p + 1		5561842	0		+			
ANR	5561947	Identifier	p		5561842	0					
ANR	5561948	PrimaryExpression	1		5561842	1					
ANR	5561949	BreakStatement	break ;	24:4:436:441	5561842	5	True				
ANR	5561950	Label	case ':' :	25:1:444:452	5561842	6	True				
ANR	5561951	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	26:4:458:489	5561842	7	True				
ANR	5561952	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		5561842	0					
ANR	5561953	Callee	r_core_cmdf		5561842	0					
ANR	5561954	Identifier	r_core_cmdf		5561842	0					
ANR	5561955	ArgumentList	core		5561842	1					
ANR	5561956	Argument	core		5561842	0					
ANR	5561957	Identifier	core		5561842	0					
ANR	5561958	Argument	"""s %s"""		5561842	1					
ANR	5561959	PrimaryExpression	"""s %s"""		5561842	0					
ANR	5561960	Argument	str		5561842	2					
ANR	5561961	Identifier	str		5561842	0					
ANR	5561962	ExpressionStatement	"r_core_cmdf ( core , ""\\""wa %s\\"""" , p )"	27:4:495:529	5561842	8	True				
ANR	5561963	CallExpression	"r_core_cmdf ( core , ""\\""wa %s\\"""" , p )"		5561842	0					
ANR	5561964	Callee	r_core_cmdf		5561842	0					
ANR	5561965	Identifier	r_core_cmdf		5561842	0					
ANR	5561966	ArgumentList	core		5561842	1					
ANR	5561967	Argument	core		5561842	0					
ANR	5561968	Identifier	core		5561842	0					
ANR	5561969	Argument	"""\\""wa %s\\"""""		5561842	1					
ANR	5561970	PrimaryExpression	"""\\""wa %s\\"""""		5561842	0					
ANR	5561971	Argument	p		5561842	2					
ANR	5561972	Identifier	p		5561842	0					
ANR	5561973	BreakStatement	break ;	28:4:535:540	5561842	9	True				
ANR	5561974	Label	case 'v' :	29:1:543:551	5561842	10	True				
ANR	5561975	ExpressionStatement	"q = strchr ( p + 1 , ' ' )"	30:2:555:577	5561842	11	True				
ANR	5561976	AssignmentExpression	"q = strchr ( p + 1 , ' ' )"		5561842	0		=			
ANR	5561977	Identifier	q		5561842	0					
ANR	5561978	CallExpression	"strchr ( p + 1 , ' ' )"		5561842	1					
ANR	5561979	Callee	strchr		5561842	0					
ANR	5561980	Identifier	strchr		5561842	0					
ANR	5561981	ArgumentList	p + 1		5561842	1					
ANR	5561982	Argument	p + 1		5561842	0					
ANR	5561983	AdditiveExpression	p + 1		5561842	0		+			
ANR	5561984	Identifier	p		5561842	0					
ANR	5561985	PrimaryExpression	1		5561842	1					
ANR	5561986	Argument	' '		5561842	1					
ANR	5561987	PrimaryExpression	' '		5561842	0					
ANR	5561988	IfStatement	if ( q )		5561842	12					
ANR	5561989	Condition	q	31:6:585:585	5561842	0	True				
ANR	5561990	Identifier	q		5561842	0					
ANR	5561991	CompoundStatement		27:9:460:460	5561842	1					
ANR	5561992	ExpressionStatement	* q = 0	32:3:593:599	5561842	0	True				
ANR	5561993	AssignmentExpression	* q = 0		5561842	0		=			
ANR	5561994	UnaryOperationExpression	* q		5561842	0					
ANR	5561995	UnaryOperator	*		5561842	0					
ANR	5561996	Identifier	q		5561842	1					
ANR	5561997	PrimaryExpression	0		5561842	1					
ANR	5561998	ForStatement	for ( ++ q ; * q == ' ' ; q ++ )		5561842	1					
ANR	5561999	ForInit	++ q ;	33:8:609:612	5561842	0	True				
ANR	5562000	UnaryExpression	++ q		5561842	0					
ANR	5562001	IncDec	++		5561842	0					
ANR	5562002	Identifier	q		5561842	1					
ANR	5562003	Condition	* q == ' '	33:13:614:622	5561842	1	True				
ANR	5562004	EqualityExpression	* q == ' '		5561842	0		==			
ANR	5562005	UnaryOperationExpression	* q		5561842	0					
ANR	5562006	UnaryOperator	*		5561842	0					
ANR	5562007	Identifier	q		5561842	1					
ANR	5562008	PrimaryExpression	' '		5561842	1					
ANR	5562009	PostIncDecOperationExpression	q ++	33:24:625:627	5561842	2	True				
ANR	5562010	Identifier	q		5561842	0					
ANR	5562011	IncDec	++		5561842	1					
ANR	5562012	CompoundStatement		29:29:502:502	5561842	3					
ANR	5562013	ExpressionStatement		34:4:636:636	5561842	0	True				
ANR	5562014	ElseStatement	else		5561842	0					
ANR	5562015	CompoundStatement		32:9:549:549	5561842	0					
ANR	5562016	ReturnStatement	return 0 ;	37:3:682:690	5561842	0	True				
ANR	5562017	PrimaryExpression	0		5561842	0					
ANR	5562018	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	39:2:698:729	5561842	13	True				
ANR	5562019	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		5561842	0					
ANR	5562020	Callee	r_core_cmdf		5561842	0					
ANR	5562021	Identifier	r_core_cmdf		5561842	0					
ANR	5562022	ArgumentList	core		5561842	1					
ANR	5562023	Argument	core		5561842	0					
ANR	5562024	Identifier	core		5561842	0					
ANR	5562025	Argument	"""s %s"""		5561842	1					
ANR	5562026	PrimaryExpression	"""s %s"""		5561842	0					
ANR	5562027	Argument	str		5561842	2					
ANR	5562028	Identifier	str		5561842	0					
ANR	5562029	ExpressionStatement	"r_core_cmdf ( core , ""wv%s %s"" , p + 1 , q )"	40:2:733:772	5561842	14	True				
ANR	5562030	CallExpression	"r_core_cmdf ( core , ""wv%s %s"" , p + 1 , q )"		5561842	0					
ANR	5562031	Callee	r_core_cmdf		5561842	0					
ANR	5562032	Identifier	r_core_cmdf		5561842	0					
ANR	5562033	ArgumentList	core		5561842	1					
ANR	5562034	Argument	core		5561842	0					
ANR	5562035	Identifier	core		5561842	0					
ANR	5562036	Argument	"""wv%s %s"""		5561842	1					
ANR	5562037	PrimaryExpression	"""wv%s %s"""		5561842	0					
ANR	5562038	Argument	p + 1		5561842	2					
ANR	5562039	AdditiveExpression	p + 1		5561842	0		+			
ANR	5562040	Identifier	p		5561842	0					
ANR	5562041	PrimaryExpression	1		5561842	1					
ANR	5562042	Argument	q		5561842	3					
ANR	5562043	Identifier	q		5561842	0					
ANR	5562044	BreakStatement	break ;	41:2:776:781	5561842	15	True				
ANR	5562045	Label	default :	42:1:784:791	5561842	16	True				
ANR	5562046	Identifier	default		5561842	0					
ANR	5562047	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , str )"	43:4:797:828	5561842	17	True				
ANR	5562048	CallExpression	"r_core_cmdf ( core , ""s %s"" , str )"		5561842	0					
ANR	5562049	Callee	r_core_cmdf		5561842	0					
ANR	5562050	Identifier	r_core_cmdf		5561842	0					
ANR	5562051	ArgumentList	core		5561842	1					
ANR	5562052	Argument	core		5561842	0					
ANR	5562053	Identifier	core		5561842	0					
ANR	5562054	Argument	"""s %s"""		5561842	1					
ANR	5562055	PrimaryExpression	"""s %s"""		5561842	0					
ANR	5562056	Argument	str		5561842	2					
ANR	5562057	Identifier	str		5561842	0					
ANR	5562058	ExpressionStatement	"r_core_cmdf ( core , ""wx %s"" , p )"	44:4:834:864	5561842	18	True				
ANR	5562059	CallExpression	"r_core_cmdf ( core , ""wx %s"" , p )"		5561842	0					
ANR	5562060	Callee	r_core_cmdf		5561842	0					
ANR	5562061	Identifier	r_core_cmdf		5561842	0					
ANR	5562062	ArgumentList	core		5561842	1					
ANR	5562063	Argument	core		5561842	0					
ANR	5562064	Identifier	core		5561842	0					
ANR	5562065	Argument	"""wx %s"""		5561842	1					
ANR	5562066	PrimaryExpression	"""wx %s"""		5561842	0					
ANR	5562067	Argument	p		5561842	2					
ANR	5562068	Identifier	p		5561842	0					
ANR	5562069	BreakStatement	break ;	45:4:870:875	5561842	19	True				
ANR	5562070	ReturnStatement	return 1 ;	47:1:881:889	5561842	6	True				
ANR	5562071	PrimaryExpression	1		5561842	0					
ANR	5562072	ReturnType	R_API int		5561842	1					
ANR	5562073	Identifier	r_core_patch_line		5561842	2					
ANR	5562074	ParameterList	"RCore * core , char * str"		5561842	3					
ANR	5562075	Parameter	RCore * core	5:29:103:113	5561842	0	True				
ANR	5562076	ParameterType	RCore *		5561842	0					
ANR	5562077	Identifier	core		5561842	1					
ANR	5562078	Parameter	char * str	5:42:116:124	5561842	1	True				
ANR	5562079	ParameterType	char *		5561842	0					
ANR	5562080	Identifier	str		5561842	1					
ANR	5562081	CFGEntryNode	ENTRY		5561842		True				
ANR	5562082	CFGExitNode	EXIT		5561842		True				
ANR	5562083	Symbol	str		5561842						
ANR	5562084	Symbol	p		5561842						
ANR	5562085	Symbol	core		5561842						
ANR	5562086	Symbol	q		5561842						
ANR	5562087	Symbol	strchr		5561842						
ANR	5562088	Symbol	* p		5561842						
ANR	5562089	Symbol	* q		5561842						
ANR	5562090	Function	__core_patch_bracket	50:0:894:2133							
ANR	5562091	FunctionDef	"__core_patch_bracket (RCore * core , const char * str , ut64 * noff)"		5562090	0					
ANR	5562092	CompoundStatement		50:74:968:2133	5562090	0					
ANR	5562093	IdentifierDeclStatement	char tmp [ 128 ] ;	51:1:971:984	5562090	0	True				
ANR	5562094	IdentifierDecl	tmp [ 128 ]		5562090	0					
ANR	5562095	IdentifierDeclType	char [ 128 ]		5562090	0					
ANR	5562096	Identifier	tmp		5562090	1					
ANR	5562097	PrimaryExpression	128		5562090	2					
ANR	5562098	IdentifierDeclStatement	"char * s , * p , * q , * off ;"	52:1:987:1008	5562090	1	True				
ANR	5562099	IdentifierDecl	* s		5562090	0					
ANR	5562100	IdentifierDeclType	char *		5562090	0					
ANR	5562101	Identifier	s		5562090	1					
ANR	5562102	IdentifierDecl	* p		5562090	1					
ANR	5562103	IdentifierDeclType	char *		5562090	0					
ANR	5562104	Identifier	p		5562090	1					
ANR	5562105	IdentifierDecl	* q		5562090	2					
ANR	5562106	IdentifierDeclType	char *		5562090	0					
ANR	5562107	Identifier	q		5562090	1					
ANR	5562108	IdentifierDecl	* off		5562090	3					
ANR	5562109	IdentifierDeclType	char *		5562090	0					
ANR	5562110	Identifier	off		5562090	1					
ANR	5562111	IdentifierDeclStatement	RBuffer * b = r_buf_new ( ) ;	53:1:1011:1036	5562090	2	True				
ANR	5562112	IdentifierDecl	* b = r_buf_new ( )		5562090	0					
ANR	5562113	IdentifierDeclType	RBuffer *		5562090	0					
ANR	5562114	Identifier	b		5562090	1					
ANR	5562115	AssignmentExpression	* b = r_buf_new ( )		5562090	2		=			
ANR	5562116	Identifier	b		5562090	0					
ANR	5562117	CallExpression	r_buf_new ( )		5562090	1					
ANR	5562118	Callee	r_buf_new		5562090	0					
ANR	5562119	Identifier	r_buf_new		5562090	0					
ANR	5562120	ArgumentList			5562090	1					
ANR	5562121	IfStatement	if ( ! b )		5562090	3					
ANR	5562122	Condition	! b	54:5:1043:1044	5562090	0	True				
ANR	5562123	UnaryOperationExpression	! b		5562090	0					
ANR	5562124	UnaryOperator	!		5562090	0					
ANR	5562125	Identifier	b		5562090	1					
ANR	5562126	CompoundStatement		5:9:78:78	5562090	1					
ANR	5562127	ReturnStatement	return 0 ;	55:2:1051:1059	5562090	0	True				
ANR	5562128	PrimaryExpression	0		5562090	0					
ANR	5562129	ExpressionStatement	p = off = strdup ( str )	57:1:1065:1087	5562090	4	True				
ANR	5562130	AssignmentExpression	p = off = strdup ( str )		5562090	0		=			
ANR	5562131	Identifier	p		5562090	0					
ANR	5562132	AssignmentExpression	off = strdup ( str )		5562090	1		=			
ANR	5562133	Identifier	off		5562090	0					
ANR	5562134	CallExpression	strdup ( str )		5562090	1					
ANR	5562135	Callee	strdup		5562090	0					
ANR	5562136	Identifier	strdup		5562090	0					
ANR	5562137	ArgumentList	str		5562090	1					
ANR	5562138	Argument	str		5562090	0					
ANR	5562139	Identifier	str		5562090	0					
ANR	5562140	IfStatement	if ( ! p )		5562090	5					
ANR	5562141	Condition	! p	58:5:1094:1095	5562090	0	True				
ANR	5562142	UnaryOperationExpression	! p		5562090	0					
ANR	5562143	UnaryOperator	!		5562090	0					
ANR	5562144	Identifier	p		5562090	1					
ANR	5562145	CompoundStatement		9:9:129:129	5562090	1					
ANR	5562146	ExpressionStatement	r_buf_free ( b )	59:2:1102:1116	5562090	0	True				
ANR	5562147	CallExpression	r_buf_free ( b )		5562090	0					
ANR	5562148	Callee	r_buf_free		5562090	0					
ANR	5562149	Identifier	r_buf_free		5562090	0					
ANR	5562150	ArgumentList	b		5562090	1					
ANR	5562151	Argument	b		5562090	0					
ANR	5562152	Identifier	b		5562090	0					
ANR	5562153	ReturnStatement	return 0 ;	60:2:1120:1128	5562090	1	True				
ANR	5562154	PrimaryExpression	0		5562090	0					
ANR	5562155	ForStatement	for ( ; * p ; )		5562090	6					
ANR	5562156	Condition	* p	62:7:1140:1141	5562090	0	True				
ANR	5562157	UnaryOperationExpression	* p		5562090	0					
ANR	5562158	UnaryOperator	*		5562090	0					
ANR	5562159	Identifier	p		5562090	1					
ANR	5562160	CompoundStatement		13:12:176:176	5562090	1					
ANR	5562161	IfStatement	if ( * p == '\\n' )		5562090	0					
ANR	5562162	Condition	* p == '\\n'	63:6:1153:1160	5562090	0	True				
ANR	5562163	EqualityExpression	* p == '\\n'		5562090	0		==			
ANR	5562164	UnaryOperationExpression	* p		5562090	0					
ANR	5562165	UnaryOperator	*		5562090	0					
ANR	5562166	Identifier	p		5562090	1					
ANR	5562167	PrimaryExpression	'\\n'		5562090	1					
ANR	5562168	CompoundStatement		14:16:194:194	5562090	1					
ANR	5562169	ExpressionStatement	* p ++ = 0	64:3:1168:1176	5562090	0	True				
ANR	5562170	AssignmentExpression	* p ++ = 0		5562090	0		=			
ANR	5562171	UnaryOperationExpression	* p ++		5562090	0					
ANR	5562172	UnaryOperator	*		5562090	0					
ANR	5562173	PostIncDecOperationExpression	p ++		5562090	1					
ANR	5562174	Identifier	p		5562090	0					
ANR	5562175	IncDec	++		5562090	1					
ANR	5562176	PrimaryExpression	0		5562090	1					
ANR	5562177	ElseStatement	else		5562090	0					
ANR	5562178	CompoundStatement		16:9:218:218	5562090	0					
ANR	5562179	ExpressionStatement	p ++	66:3:1192:1195	5562090	0	True				
ANR	5562180	PostIncDecOperationExpression	p ++		5562090	0					
ANR	5562181	Identifier	p		5562090	0					
ANR	5562182	IncDec	++		5562090	1					
ANR	5562183	ContinueStatement	continue ;	67:3:1200:1208	5562090	1	True				
ANR	5562184	IfStatement	if ( * str == '}' )		5562090	1					
ANR	5562185	Condition	* str == '}'	69:6:1220:1230	5562090	0	True				
ANR	5562186	EqualityExpression	* str == '}'		5562090	0		==			
ANR	5562187	UnaryOperationExpression	* str		5562090	0					
ANR	5562188	UnaryOperator	*		5562090	0					
ANR	5562189	Identifier	str		5562090	1					
ANR	5562190	PrimaryExpression	'}'		5562090	1					
ANR	5562191	CompoundStatement		20:19:264:264	5562090	1					
ANR	5562192	BreakStatement	break ;	70:3:1238:1243	5562090	0	True				
ANR	5562193	IfStatement	"if ( ( q = strstr ( str , ""${"" ) ) )"		5562090	2					
ANR	5562194	Condition	"q = strstr ( str , ""${"" )"	72:6:1255:1278	5562090	0	True				
ANR	5562195	AssignmentExpression	"q = strstr ( str , ""${"" )"		5562090	0		=			
ANR	5562196	Identifier	q		5562090	0					
ANR	5562197	CallExpression	"strstr ( str , ""${"" )"		5562090	1					
ANR	5562198	Callee	strstr		5562090	0					
ANR	5562199	Identifier	strstr		5562090	0					
ANR	5562200	ArgumentList	str		5562090	1					
ANR	5562201	Argument	str		5562090	0					
ANR	5562202	Identifier	str		5562090	0					
ANR	5562203	Argument	"""${"""		5562090	1					
ANR	5562204	PrimaryExpression	"""${"""		5562090	0					
ANR	5562205	CompoundStatement		24:3:317:345	5562090	1					
ANR	5562206	IdentifierDeclStatement	"char * end = strchr ( q + 2 , '}' ) ;"	73:3:1286:1314	5562090	0	True				
ANR	5562207	IdentifierDecl	"* end = strchr ( q + 2 , '}' )"		5562090	0					
ANR	5562208	IdentifierDeclType	char *		5562090	0					
ANR	5562209	Identifier	end		5562090	1					
ANR	5562210	AssignmentExpression	"* end = strchr ( q + 2 , '}' )"		5562090	2		=			
ANR	5562211	Identifier	end		5562090	0					
ANR	5562212	CallExpression	"strchr ( q + 2 , '}' )"		5562090	1					
ANR	5562213	Callee	strchr		5562090	0					
ANR	5562214	Identifier	strchr		5562090	0					
ANR	5562215	ArgumentList	q + 2		5562090	1					
ANR	5562216	Argument	q + 2		5562090	0					
ANR	5562217	AdditiveExpression	q + 2		5562090	0		+			
ANR	5562218	Identifier	q		5562090	0					
ANR	5562219	PrimaryExpression	2		5562090	1					
ANR	5562220	Argument	'}'		5562090	1					
ANR	5562221	PrimaryExpression	'}'		5562090	0					
ANR	5562222	IfStatement	if ( end )		5562090	1					
ANR	5562223	Condition	end	74:7:1323:1325	5562090	0	True				
ANR	5562224	Identifier	end		5562090	0					
ANR	5562225	CompoundStatement		25:12:359:359	5562090	1					
ANR	5562226	ExpressionStatement	* q = * end = 0	75:4:1334:1347	5562090	0	True				
ANR	5562227	AssignmentExpression	* q = * end = 0		5562090	0		=			
ANR	5562228	UnaryOperationExpression	* q		5562090	0					
ANR	5562229	UnaryOperator	*		5562090	0					
ANR	5562230	Identifier	q		5562090	1					
ANR	5562231	AssignmentExpression	* end = 0		5562090	1		=			
ANR	5562232	UnaryOperationExpression	* end		5562090	0					
ANR	5562233	UnaryOperator	*		5562090	0					
ANR	5562234	Identifier	end		5562090	1					
ANR	5562235	PrimaryExpression	0		5562090	1					
ANR	5562236	ExpressionStatement	"* noff = r_num_math ( core -> num , q + 2 )"	76:4:1353:1388	5562090	1	True				
ANR	5562237	AssignmentExpression	"* noff = r_num_math ( core -> num , q + 2 )"		5562090	0		=			
ANR	5562238	UnaryOperationExpression	* noff		5562090	0					
ANR	5562239	UnaryOperator	*		5562090	0					
ANR	5562240	Identifier	noff		5562090	1					
ANR	5562241	CallExpression	"r_num_math ( core -> num , q + 2 )"		5562090	1					
ANR	5562242	Callee	r_num_math		5562090	0					
ANR	5562243	Identifier	r_num_math		5562090	0					
ANR	5562244	ArgumentList	core -> num		5562090	1					
ANR	5562245	Argument	core -> num		5562090	0					
ANR	5562246	PtrMemberAccess	core -> num		5562090	0					
ANR	5562247	Identifier	core		5562090	0					
ANR	5562248	Identifier	num		5562090	1					
ANR	5562249	Argument	q + 2		5562090	1					
ANR	5562250	AdditiveExpression	q + 2		5562090	0		+			
ANR	5562251	Identifier	q		5562090	0					
ANR	5562252	PrimaryExpression	2		5562090	1					
ANR	5562253	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"	77:4:1394:1447	5562090	2	True				
ANR	5562254	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"		5562090	0					
ANR	5562255	Callee	r_buf_append_bytes		5562090	0					
ANR	5562256	Identifier	r_buf_append_bytes		5562090	0					
ANR	5562257	ArgumentList	b		5562090	1					
ANR	5562258	Argument	b		5562090	0					
ANR	5562259	Identifier	b		5562090	0					
ANR	5562260	Argument	( const ut8 * ) str		5562090	1					
ANR	5562261	CastExpression	( const ut8 * ) str		5562090	0					
ANR	5562262	CastTarget	const ut8 *		5562090	0					
ANR	5562263	Identifier	str		5562090	1					
ANR	5562264	Argument	strlen ( str )		5562090	2					
ANR	5562265	CallExpression	strlen ( str )		5562090	0					
ANR	5562266	Callee	strlen		5562090	0					
ANR	5562267	Identifier	strlen		5562090	0					
ANR	5562268	ArgumentList	str		5562090	1					
ANR	5562269	Argument	str		5562090	0					
ANR	5562270	Identifier	str		5562090	0					
ANR	5562271	Statement	snprintf	78:4:1453:1460	5562090	3	True				
ANR	5562272	Statement	(	78:13:1462:1462	5562090	4	True				
ANR	5562273	Statement	tmp	78:14:1463:1465	5562090	5	True				
ANR	5562274	Statement	","	78:17:1466:1466	5562090	6	True				
ANR	5562275	Statement	sizeof	78:19:1468:1473	5562090	7	True				
ANR	5562276	Statement	(	78:26:1475:1475	5562090	8	True				
ANR	5562277	Statement	tmp	78:27:1476:1478	5562090	9	True				
ANR	5562278	Statement	)	78:30:1479:1479	5562090	10	True				
ANR	5562279	Statement	","	78:31:1480:1480	5562090	11	True				
ANR	5562280	Statement	"""0x%08"""	78:33:1482:1488	5562090	12	True				
ANR	5562281	Statement	PFMT64x	78:40:1489:1495	5562090	13	True				
ANR	5562282	Statement	","	78:47:1496:1496	5562090	14	True				
ANR	5562283	Statement	*	78:49:1498:1498	5562090	15	True				
ANR	5562284	Statement	noff	78:50:1499:1502	5562090	16	True				
ANR	5562285	Statement	)	78:54:1503:1503	5562090	17	True				
ANR	5562286	ExpressionStatement		78:55:1504:1504	5562090	18	True				
ANR	5562287	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) tmp , strlen ( tmp ) )"	79:4:1510:1563	5562090	19	True				
ANR	5562288	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) tmp , strlen ( tmp ) )"		5562090	0					
ANR	5562289	Callee	r_buf_append_bytes		5562090	0					
ANR	5562290	Identifier	r_buf_append_bytes		5562090	0					
ANR	5562291	ArgumentList	b		5562090	1					
ANR	5562292	Argument	b		5562090	0					
ANR	5562293	Identifier	b		5562090	0					
ANR	5562294	Argument	( const ut8 * ) tmp		5562090	1					
ANR	5562295	CastExpression	( const ut8 * ) tmp		5562090	0					
ANR	5562296	CastTarget	const ut8 *		5562090	0					
ANR	5562297	Identifier	tmp		5562090	1					
ANR	5562298	Argument	strlen ( tmp )		5562090	2					
ANR	5562299	CallExpression	strlen ( tmp )		5562090	0					
ANR	5562300	Callee	strlen		5562090	0					
ANR	5562301	Identifier	strlen		5562090	0					
ANR	5562302	ArgumentList	tmp		5562090	1					
ANR	5562303	Argument	tmp		5562090	0					
ANR	5562304	Identifier	tmp		5562090	0					
ANR	5562305	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) end + 1 , strlen ( end + 1 ) )"	80:4:1569:1626	5562090	20	True				
ANR	5562306	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) end + 1 , strlen ( end + 1 ) )"		5562090	0					
ANR	5562307	Callee	r_buf_append_bytes		5562090	0					
ANR	5562308	Identifier	r_buf_append_bytes		5562090	0					
ANR	5562309	ArgumentList	b		5562090	1					
ANR	5562310	Argument	b		5562090	0					
ANR	5562311	Identifier	b		5562090	0					
ANR	5562312	Argument	( const ut8 * ) end + 1		5562090	1					
ANR	5562313	AdditiveExpression	( const ut8 * ) end + 1		5562090	0		+			
ANR	5562314	CastExpression	( const ut8 * ) end		5562090	0					
ANR	5562315	CastTarget	const ut8 *		5562090	0					
ANR	5562316	Identifier	end		5562090	1					
ANR	5562317	PrimaryExpression	1		5562090	1					
ANR	5562318	Argument	strlen ( end + 1 )		5562090	2					
ANR	5562319	CallExpression	strlen ( end + 1 )		5562090	0					
ANR	5562320	Callee	strlen		5562090	0					
ANR	5562321	Identifier	strlen		5562090	0					
ANR	5562322	ArgumentList	end + 1		5562090	1					
ANR	5562323	Argument	end + 1		5562090	0					
ANR	5562324	AdditiveExpression	end + 1		5562090	0		+			
ANR	5562325	Identifier	end		5562090	0					
ANR	5562326	PrimaryExpression	1		5562090	1					
ANR	5562327	ElseStatement	else		5562090	0					
ANR	5562328	CompoundStatement		33:9:673:673	5562090	0					
ANR	5562329	ExpressionStatement	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"	83:3:1647:1700	5562090	0	True				
ANR	5562330	CallExpression	"r_buf_append_bytes ( b , ( const ut8 * ) str , strlen ( str ) )"		5562090	0					
ANR	5562331	Callee	r_buf_append_bytes		5562090	0					
ANR	5562332	Identifier	r_buf_append_bytes		5562090	0					
ANR	5562333	ArgumentList	b		5562090	1					
ANR	5562334	Argument	b		5562090	0					
ANR	5562335	Identifier	b		5562090	0					
ANR	5562336	Argument	( const ut8 * ) str		5562090	1					
ANR	5562337	CastExpression	( const ut8 * ) str		5562090	0					
ANR	5562338	CastTarget	const ut8 *		5562090	0					
ANR	5562339	Identifier	str		5562090	1					
ANR	5562340	Argument	strlen ( str )		5562090	2					
ANR	5562341	CallExpression	strlen ( str )		5562090	0					
ANR	5562342	Callee	strlen		5562090	0					
ANR	5562343	Identifier	strlen		5562090	0					
ANR	5562344	ArgumentList	str		5562090	1					
ANR	5562345	Argument	str		5562090	0					
ANR	5562346	Identifier	str		5562090	0					
ANR	5562347	ExpressionStatement	str = p	85:2:1708:1715	5562090	3	True				
ANR	5562348	AssignmentExpression	str = p		5562090	0		=			
ANR	5562349	Identifier	str		5562090	0					
ANR	5562350	Identifier	p		5562090	1					
ANR	5562351	ExpressionStatement	s = r_buf_to_string ( b )	88:1:1722:1745	5562090	7	True				
ANR	5562352	AssignmentExpression	s = r_buf_to_string ( b )		5562090	0		=			
ANR	5562353	Identifier	s		5562090	0					
ANR	5562354	CallExpression	r_buf_to_string ( b )		5562090	1					
ANR	5562355	Callee	r_buf_to_string		5562090	0					
ANR	5562356	Identifier	r_buf_to_string		5562090	0					
ANR	5562357	ArgumentList	b		5562090	1					
ANR	5562358	Argument	b		5562090	0					
ANR	5562359	Identifier	b		5562090	0					
ANR	5562360	ExpressionStatement	"r_egg_load ( core -> egg , s , 0 )"	89:1:1748:1776	5562090	8	True				
ANR	5562361	CallExpression	"r_egg_load ( core -> egg , s , 0 )"		5562090	0					
ANR	5562362	Callee	r_egg_load		5562090	0					
ANR	5562363	Identifier	r_egg_load		5562090	0					
ANR	5562364	ArgumentList	core -> egg		5562090	1					
ANR	5562365	Argument	core -> egg		5562090	0					
ANR	5562366	PtrMemberAccess	core -> egg		5562090	0					
ANR	5562367	Identifier	core		5562090	0					
ANR	5562368	Identifier	egg		5562090	1					
ANR	5562369	Argument	s		5562090	1					
ANR	5562370	Identifier	s		5562090	0					
ANR	5562371	Argument	0		5562090	2					
ANR	5562372	PrimaryExpression	0		5562090	0					
ANR	5562373	ExpressionStatement	free ( s )	90:1:1779:1787	5562090	9	True				
ANR	5562374	CallExpression	free ( s )		5562090	0					
ANR	5562375	Callee	free		5562090	0					
ANR	5562376	Identifier	free		5562090	0					
ANR	5562377	ArgumentList	s		5562090	1					
ANR	5562378	Argument	s		5562090	0					
ANR	5562379	Identifier	s		5562090	0					
ANR	5562380	ExpressionStatement	( void ) r_egg_compile ( core -> egg )	92:1:1791:1822	5562090	10	True				
ANR	5562381	CastExpression	( void ) r_egg_compile ( core -> egg )		5562090	0					
ANR	5562382	CastTarget	void		5562090	0					
ANR	5562383	CallExpression	r_egg_compile ( core -> egg )		5562090	1					
ANR	5562384	Callee	r_egg_compile		5562090	0					
ANR	5562385	Identifier	r_egg_compile		5562090	0					
ANR	5562386	ArgumentList	core -> egg		5562090	1					
ANR	5562387	Argument	core -> egg		5562090	0					
ANR	5562388	PtrMemberAccess	core -> egg		5562090	0					
ANR	5562389	Identifier	core		5562090	0					
ANR	5562390	Identifier	egg		5562090	1					
ANR	5562391	ExpressionStatement	( void ) r_egg_assemble ( core -> egg )	93:1:1825:1857	5562090	11	True				
ANR	5562392	CastExpression	( void ) r_egg_assemble ( core -> egg )		5562090	0					
ANR	5562393	CastTarget	void		5562090	0					
ANR	5562394	CallExpression	r_egg_assemble ( core -> egg )		5562090	1					
ANR	5562395	Callee	r_egg_assemble		5562090	0					
ANR	5562396	Identifier	r_egg_assemble		5562090	0					
ANR	5562397	ArgumentList	core -> egg		5562090	1					
ANR	5562398	Argument	core -> egg		5562090	0					
ANR	5562399	PtrMemberAccess	core -> egg		5562090	0					
ANR	5562400	Identifier	core		5562090	0					
ANR	5562401	Identifier	egg		5562090	1					
ANR	5562402	ExpressionStatement	r_buf_free ( b )	95:1:1861:1875	5562090	12	True				
ANR	5562403	CallExpression	r_buf_free ( b )		5562090	0					
ANR	5562404	Callee	r_buf_free		5562090	0					
ANR	5562405	Identifier	r_buf_free		5562090	0					
ANR	5562406	ArgumentList	b		5562090	1					
ANR	5562407	Argument	b		5562090	0					
ANR	5562408	Identifier	b		5562090	0					
ANR	5562409	ExpressionStatement	b = r_egg_get_bin ( core -> egg )	96:1:1878:1907	5562090	13	True				
ANR	5562410	AssignmentExpression	b = r_egg_get_bin ( core -> egg )		5562090	0		=			
ANR	5562411	Identifier	b		5562090	0					
ANR	5562412	CallExpression	r_egg_get_bin ( core -> egg )		5562090	1					
ANR	5562413	Callee	r_egg_get_bin		5562090	0					
ANR	5562414	Identifier	r_egg_get_bin		5562090	0					
ANR	5562415	ArgumentList	core -> egg		5562090	1					
ANR	5562416	Argument	core -> egg		5562090	0					
ANR	5562417	PtrMemberAccess	core -> egg		5562090	0					
ANR	5562418	Identifier	core		5562090	0					
ANR	5562419	Identifier	egg		5562090	1					
ANR	5562420	IfStatement	"if ( strcmp ( off , ""+"" ) )"		5562090	14					
ANR	5562421	Condition	"strcmp ( off , ""+"" )"	98:5:1915:1931	5562090	0	True				
ANR	5562422	CallExpression	"strcmp ( off , ""+"" )"		5562090	0					
ANR	5562423	Callee	strcmp		5562090	0					
ANR	5562424	Identifier	strcmp		5562090	0					
ANR	5562425	ArgumentList	off		5562090	1					
ANR	5562426	Argument	off		5562090	0					
ANR	5562427	Identifier	off		5562090	0					
ANR	5562428	Argument	"""+"""		5562090	1					
ANR	5562429	PrimaryExpression	"""+"""		5562090	0					
ANR	5562430	CompoundStatement		49:24:965:965	5562090	1					
ANR	5562431	ExpressionStatement	"* noff = r_num_math ( core -> num , off )"	99:2:1938:1973	5562090	0	True				
ANR	5562432	AssignmentExpression	"* noff = r_num_math ( core -> num , off )"		5562090	0		=			
ANR	5562433	UnaryOperationExpression	* noff		5562090	0					
ANR	5562434	UnaryOperator	*		5562090	0					
ANR	5562435	Identifier	noff		5562090	1					
ANR	5562436	CallExpression	"r_num_math ( core -> num , off )"		5562090	1					
ANR	5562437	Callee	r_num_math		5562090	0					
ANR	5562438	Identifier	r_num_math		5562090	0					
ANR	5562439	ArgumentList	core -> num		5562090	1					
ANR	5562440	Argument	core -> num		5562090	0					
ANR	5562441	PtrMemberAccess	core -> num		5562090	0					
ANR	5562442	Identifier	core		5562090	0					
ANR	5562443	Identifier	num		5562090	1					
ANR	5562444	Argument	off		5562090	1					
ANR	5562445	Identifier	off		5562090	0					
ANR	5562446	IdentifierDeclStatement	ut64 tmpsz ;	101:1:1979:1989	5562090	15	True				
ANR	5562447	IdentifierDecl	tmpsz		5562090	0					
ANR	5562448	IdentifierDeclType	ut64		5562090	0					
ANR	5562449	Identifier	tmpsz		5562090	1					
ANR	5562450	IdentifierDeclStatement	"const ut8 * tmpbuf = r_buf_data ( b , & tmpsz ) ;"	102:1:1992:2034	5562090	16	True				
ANR	5562451	IdentifierDecl	"* tmpbuf = r_buf_data ( b , & tmpsz )"		5562090	0					
ANR	5562452	IdentifierDeclType	const ut8 *		5562090	0					
ANR	5562453	Identifier	tmpbuf		5562090	1					
ANR	5562454	AssignmentExpression	"* tmpbuf = r_buf_data ( b , & tmpsz )"		5562090	2		=			
ANR	5562455	Identifier	tmpbuf		5562090	0					
ANR	5562456	CallExpression	"r_buf_data ( b , & tmpsz )"		5562090	1					
ANR	5562457	Callee	r_buf_data		5562090	0					
ANR	5562458	Identifier	r_buf_data		5562090	0					
ANR	5562459	ArgumentList	b		5562090	1					
ANR	5562460	Argument	b		5562090	0					
ANR	5562461	Identifier	b		5562090	0					
ANR	5562462	Argument	& tmpsz		5562090	1					
ANR	5562463	UnaryOperationExpression	& tmpsz		5562090	0					
ANR	5562464	UnaryOperator	&		5562090	0					
ANR	5562465	Identifier	tmpsz		5562090	1					
ANR	5562466	ExpressionStatement	"r_core_write_at ( core , * noff , tmpbuf , tmpsz )"	103:1:2037:2081	5562090	17	True				
ANR	5562467	CallExpression	"r_core_write_at ( core , * noff , tmpbuf , tmpsz )"		5562090	0					
ANR	5562468	Callee	r_core_write_at		5562090	0					
ANR	5562469	Identifier	r_core_write_at		5562090	0					
ANR	5562470	ArgumentList	core		5562090	1					
ANR	5562471	Argument	core		5562090	0					
ANR	5562472	Identifier	core		5562090	0					
ANR	5562473	Argument	* noff		5562090	1					
ANR	5562474	UnaryOperationExpression	* noff		5562090	0					
ANR	5562475	UnaryOperator	*		5562090	0					
ANR	5562476	Identifier	noff		5562090	1					
ANR	5562477	Argument	tmpbuf		5562090	2					
ANR	5562478	Identifier	tmpbuf		5562090	0					
ANR	5562479	Argument	tmpsz		5562090	3					
ANR	5562480	Identifier	tmpsz		5562090	0					
ANR	5562481	ExpressionStatement	* noff += r_buf_size ( b )	104:1:2084:2107	5562090	18	True				
ANR	5562482	AssignmentExpression	* noff += r_buf_size ( b )		5562090	0		+=			
ANR	5562483	UnaryOperationExpression	* noff		5562090	0					
ANR	5562484	UnaryOperator	*		5562090	0					
ANR	5562485	Identifier	noff		5562090	1					
ANR	5562486	CallExpression	r_buf_size ( b )		5562090	1					
ANR	5562487	Callee	r_buf_size		5562090	0					
ANR	5562488	Identifier	r_buf_size		5562090	0					
ANR	5562489	ArgumentList	b		5562090	1					
ANR	5562490	Argument	b		5562090	0					
ANR	5562491	Identifier	b		5562090	0					
ANR	5562492	ExpressionStatement	free ( off )	105:1:2110:2120	5562090	19	True				
ANR	5562493	CallExpression	free ( off )		5562090	0					
ANR	5562494	Callee	free		5562090	0					
ANR	5562495	Identifier	free		5562090	0					
ANR	5562496	ArgumentList	off		5562090	1					
ANR	5562497	Argument	off		5562090	0					
ANR	5562498	Identifier	off		5562090	0					
ANR	5562499	ReturnStatement	return 1 ;	106:1:2123:2131	5562090	20	True				
ANR	5562500	PrimaryExpression	1		5562090	0					
ANR	5562501	ReturnType	static int		5562090	1					
ANR	5562502	Identifier	__core_patch_bracket		5562090	2					
ANR	5562503	ParameterList	"RCore * core , const char * str , ut64 * noff"		5562090	3					
ANR	5562504	Parameter	RCore * core	50:32:926:936	5562090	0	True				
ANR	5562505	ParameterType	RCore *		5562090	0					
ANR	5562506	Identifier	core		5562090	1					
ANR	5562507	Parameter	const char * str	50:45:939:953	5562090	1	True				
ANR	5562508	ParameterType	const char *		5562090	0					
ANR	5562509	Identifier	str		5562090	1					
ANR	5562510	Parameter	ut64 * noff	50:62:956:965	5562090	2	True				
ANR	5562511	ParameterType	ut64 *		5562090	0					
ANR	5562512	Identifier	noff		5562090	1					
ANR	5562513	CFGEntryNode	ENTRY		5562090		True				
ANR	5562514	CFGExitNode	EXIT		5562090		True				
ANR	5562515	Symbol	* core		5562090						
ANR	5562516	Symbol	strchr		5562090						
ANR	5562517	Symbol	r_num_math		5562090						
ANR	5562518	Symbol	strlen		5562090						
ANR	5562519	Symbol	core -> egg		5562090						
ANR	5562520	Symbol	* noff		5562090						
ANR	5562521	Symbol	tmp		5562090						
ANR	5562522	Symbol	& tmpsz		5562090						
ANR	5562523	Symbol	end		5562090						
ANR	5562524	Symbol	r_buf_to_string		5562090						
ANR	5562525	Symbol	tmpbuf		5562090						
ANR	5562526	Symbol	r_buf_new		5562090						
ANR	5562527	Symbol	* str		5562090						
ANR	5562528	Symbol	core -> num		5562090						
ANR	5562529	Symbol	r_buf_data		5562090						
ANR	5562530	Symbol	strcmp		5562090						
ANR	5562531	Symbol	b		5562090						
ANR	5562532	Symbol	* p ++		5562090						
ANR	5562533	Symbol	tmpsz		5562090						
ANR	5562534	Symbol	off		5562090						
ANR	5562535	Symbol	str		5562090						
ANR	5562536	Symbol	p		5562090						
ANR	5562537	Symbol	core		5562090						
ANR	5562538	Symbol	q		5562090						
ANR	5562539	Symbol	noff		5562090						
ANR	5562540	Symbol	s		5562090						
ANR	5562541	Symbol	strstr		5562090						
ANR	5562542	Symbol	r_egg_get_bin		5562090						
ANR	5562543	Symbol	* p		5562090						
ANR	5562544	Symbol	* end		5562090						
ANR	5562545	Symbol	strdup		5562090						
ANR	5562546	Symbol	* q		5562090						
ANR	5562547	Symbol	r_buf_size		5562090						
ANR	5562548	Function	r_core_patch	109:0:2136:2854							
ANR	5562549	FunctionDef	"r_core_patch (RCore * core , const char * patch)"		5562548	0					
ANR	5562550	CompoundStatement		109:55:2191:2854	5562548	0					
ANR	5562551	IdentifierDeclStatement	"char * p , * p0 , * str ;"	110:1:2194:2212	5562548	0	True				
ANR	5562552	IdentifierDecl	* p		5562548	0					
ANR	5562553	IdentifierDeclType	char *		5562548	0					
ANR	5562554	Identifier	p		5562548	1					
ANR	5562555	IdentifierDecl	* p0		5562548	1					
ANR	5562556	IdentifierDeclType	char *		5562548	0					
ANR	5562557	Identifier	p0		5562548	1					
ANR	5562558	IdentifierDecl	* str		5562548	2					
ANR	5562559	IdentifierDeclType	char *		5562548	0					
ANR	5562560	Identifier	str		5562548	1					
ANR	5562561	Statement	ut64	111:1:2215:2218	5562548	1	True				
ANR	5562562	Statement	noff	111:6:2220:2223	5562548	2	True				
ANR	5562563	Statement	=	111:11:2225:2225	5562548	3	True				
ANR	5562564	Statement	0L	111:13:2227:2228	5562548	4	True				
ANR	5562565	ExpressionStatement	L	111:15:2229:2230	5562548	5	True				
ANR	5562566	Identifier	L		5562548	0					
ANR	5562567	ExpressionStatement	p = p0 = str = strdup ( patch )	113:1:2234:2263	5562548	6	True				
ANR	5562568	AssignmentExpression	p = p0 = str = strdup ( patch )		5562548	0		=			
ANR	5562569	Identifier	p		5562548	0					
ANR	5562570	AssignmentExpression	p0 = str = strdup ( patch )		5562548	1		=			
ANR	5562571	Identifier	p0		5562548	0					
ANR	5562572	AssignmentExpression	str = strdup ( patch )		5562548	1		=			
ANR	5562573	Identifier	str		5562548	0					
ANR	5562574	CallExpression	strdup ( patch )		5562548	1					
ANR	5562575	Callee	strdup		5562548	0					
ANR	5562576	Identifier	strdup		5562548	0					
ANR	5562577	ArgumentList	patch		5562548	1					
ANR	5562578	Argument	patch		5562548	0					
ANR	5562579	Identifier	patch		5562548	0					
ANR	5562580	IfStatement	if ( ! p )		5562548	7					
ANR	5562581	Condition	! p	114:5:2270:2271	5562548	0	True				
ANR	5562582	UnaryOperationExpression	! p		5562548	0					
ANR	5562583	UnaryOperator	!		5562548	0					
ANR	5562584	Identifier	p		5562548	1					
ANR	5562585	CompoundStatement		6:9:82:82	5562548	1					
ANR	5562586	ReturnStatement	return 0 ;	115:2:2278:2286	5562548	0	True				
ANR	5562587	PrimaryExpression	0		5562548	0					
ANR	5562588	ForStatement	for ( ; * p ; p ++ )		5562548	8					
ANR	5562589	Condition	* p	117:8:2299:2300	5562548	0	True				
ANR	5562590	UnaryOperationExpression	* p		5562548	0					
ANR	5562591	UnaryOperator	*		5562548	0					
ANR	5562592	Identifier	p		5562548	1					
ANR	5562593	PostIncDecOperationExpression	p ++	117:12:2303:2305	5562548	1	True				
ANR	5562594	Identifier	p		5562548	0					
ANR	5562595	IncDec	++		5562548	1					
ANR	5562596	CompoundStatement		9:17:116:116	5562548	2					
ANR	5562597	IfStatement	if ( ! * p || * p == '\\n' )		5562548	0					
ANR	5562598	Condition	! * p || * p == '\\n'	119:6:2343:2359	5562548	0	True				
ANR	5562599	OrExpression	! * p || * p == '\\n'		5562548	0		||			
ANR	5562600	UnaryOperationExpression	! * p		5562548	0					
ANR	5562601	UnaryOperator	!		5562548	0					
ANR	5562602	UnaryOperationExpression	* p		5562548	1					
ANR	5562603	UnaryOperator	*		5562548	0					
ANR	5562604	Identifier	p		5562548	1					
ANR	5562605	EqualityExpression	* p == '\\n'		5562548	1		==			
ANR	5562606	UnaryOperationExpression	* p		5562548	0					
ANR	5562607	UnaryOperator	*		5562548	0					
ANR	5562608	Identifier	p		5562548	1					
ANR	5562609	PrimaryExpression	'\\n'		5562548	1					
ANR	5562610	CompoundStatement		11:25:170:170	5562548	1					
ANR	5562611	ExpressionStatement	* p ++ = 0	120:3:2367:2375	5562548	0	True				
ANR	5562612	AssignmentExpression	* p ++ = 0		5562548	0		=			
ANR	5562613	UnaryOperationExpression	* p ++		5562548	0					
ANR	5562614	UnaryOperator	*		5562548	0					
ANR	5562615	PostIncDecOperationExpression	p ++		5562548	1					
ANR	5562616	Identifier	p		5562548	0					
ANR	5562617	IncDec	++		5562548	1					
ANR	5562618	PrimaryExpression	0		5562548	1					
ANR	5562619	ElseStatement	else		5562548	0					
ANR	5562620	CompoundStatement		13:9:195:195	5562548	0					
ANR	5562621	ContinueStatement	continue ;	122:3:2392:2400	5562548	0	True				
ANR	5562622	SwitchStatement	switch ( * str )		5562548	1					
ANR	5562623	Condition	* str	125:10:2417:2420	5562548	0	True				
ANR	5562624	UnaryOperationExpression	* str		5562548	0					
ANR	5562625	UnaryOperator	*		5562548	0					
ANR	5562626	Identifier	str		5562548	1					
ANR	5562627	CompoundStatement		17:16:231:231	5562548	1					
ANR	5562628	Label	case '#' :	126:2:2427:2435	5562548	0	True				
ANR	5562629	Label	case '\\n' :	127:2:2439:2448	5562548	1	True				
ANR	5562630	Label	case '\\r' :	128:2:2452:2461	5562548	2	True				
ANR	5562631	Label	case '\\0' :	129:2:2465:2474	5562548	3	True				
ANR	5562632	BreakStatement	break ;	130:3:2479:2484	5562548	4	True				
ANR	5562633	Label	case ':' :	131:2:2488:2496	5562548	5	True				
ANR	5562634	ExpressionStatement	"r_core_cmd0 ( core , str + 1 )"	132:3:2501:2526	5562548	6	True				
ANR	5562635	CallExpression	"r_core_cmd0 ( core , str + 1 )"		5562548	0					
ANR	5562636	Callee	r_core_cmd0		5562548	0					
ANR	5562637	Identifier	r_core_cmd0		5562548	0					
ANR	5562638	ArgumentList	core		5562548	1					
ANR	5562639	Argument	core		5562548	0					
ANR	5562640	Identifier	core		5562548	0					
ANR	5562641	Argument	str + 1		5562548	1					
ANR	5562642	AdditiveExpression	str + 1		5562548	0		+			
ANR	5562643	Identifier	str		5562548	0					
ANR	5562644	PrimaryExpression	1		5562548	1					
ANR	5562645	BreakStatement	break ;	133:3:2531:2536	5562548	7	True				
ANR	5562646	Label	case '.' :	134:2:2540:2548	5562548	8	True				
ANR	5562647	Label	case '!' :	135:2:2552:2560	5562548	9	True				
ANR	5562648	ExpressionStatement	"r_core_cmd0 ( core , str )"	136:3:2565:2588	5562548	10	True				
ANR	5562649	CallExpression	"r_core_cmd0 ( core , str )"		5562548	0					
ANR	5562650	Callee	r_core_cmd0		5562548	0					
ANR	5562651	Identifier	r_core_cmd0		5562548	0					
ANR	5562652	ArgumentList	core		5562548	1					
ANR	5562653	Argument	core		5562548	0					
ANR	5562654	Identifier	core		5562548	0					
ANR	5562655	Argument	str		5562548	1					
ANR	5562656	Identifier	str		5562548	0					
ANR	5562657	BreakStatement	break ;	137:3:2593:2598	5562548	11	True				
ANR	5562658	Label	case '{' :	138:2:2602:2610	5562548	12	True				
ANR	5562659	ExpressionStatement	"( void ) __core_patch_bracket ( core , str , & noff )"	139:3:2615:2660	5562548	13	True				
ANR	5562660	CastExpression	"( void ) __core_patch_bracket ( core , str , & noff )"		5562548	0					
ANR	5562661	CastTarget	void		5562548	0					
ANR	5562662	CallExpression	"__core_patch_bracket ( core , str , & noff )"		5562548	1					
ANR	5562663	Callee	__core_patch_bracket		5562548	0					
ANR	5562664	Identifier	__core_patch_bracket		5562548	0					
ANR	5562665	ArgumentList	core		5562548	1					
ANR	5562666	Argument	core		5562548	0					
ANR	5562667	Identifier	core		5562548	0					
ANR	5562668	Argument	str		5562548	1					
ANR	5562669	Identifier	str		5562548	0					
ANR	5562670	Argument	& noff		5562548	2					
ANR	5562671	UnaryOperationExpression	& noff		5562548	0					
ANR	5562672	UnaryOperator	&		5562548	0					
ANR	5562673	Identifier	noff		5562548	1					
ANR	5562674	BreakStatement	break ;	140:3:2665:2670	5562548	14	True				
ANR	5562675	Label	default :	141:2:2674:2681	5562548	15	True				
ANR	5562676	Identifier	default		5562548	0					
ANR	5562677	ExpressionStatement	"r_core_patch_line ( core , str )"	142:3:2686:2715	5562548	16	True				
ANR	5562678	CallExpression	"r_core_patch_line ( core , str )"		5562548	0					
ANR	5562679	Callee	r_core_patch_line		5562548	0					
ANR	5562680	Identifier	r_core_patch_line		5562548	0					
ANR	5562681	ArgumentList	core		5562548	1					
ANR	5562682	Argument	core		5562548	0					
ANR	5562683	Identifier	core		5562548	0					
ANR	5562684	Argument	str		5562548	1					
ANR	5562685	Identifier	str		5562548	0					
ANR	5562686	BreakStatement	break ;	143:3:2720:2725	5562548	17	True				
ANR	5562687	IfStatement	if ( ! * p )		5562548	2					
ANR	5562688	Condition	! * p	145:6:2737:2739	5562548	0	True				
ANR	5562689	UnaryOperationExpression	! * p		5562548	0					
ANR	5562690	UnaryOperator	!		5562548	0					
ANR	5562691	UnaryOperationExpression	* p		5562548	1					
ANR	5562692	UnaryOperator	*		5562548	0					
ANR	5562693	Identifier	p		5562548	1					
ANR	5562694	CompoundStatement		37:11:550:550	5562548	1					
ANR	5562695	BreakStatement	break ;	146:3:2747:2752	5562548	0	True				
ANR	5562696	ExpressionStatement	str = p	148:2:2760:2767	5562548	3	True				
ANR	5562697	AssignmentExpression	str = p		5562548	0		=			
ANR	5562698	Identifier	str		5562548	0					
ANR	5562699	Identifier	p		5562548	1					
ANR	5562700	ExpressionStatement	free ( p0 )	152:1:2832:2841	5562548	9	True				
ANR	5562701	CallExpression	free ( p0 )		5562548	0					
ANR	5562702	Callee	free		5562548	0					
ANR	5562703	Identifier	free		5562548	0					
ANR	5562704	ArgumentList	p0		5562548	1					
ANR	5562705	Argument	p0		5562548	0					
ANR	5562706	Identifier	p0		5562548	0					
ANR	5562707	ReturnStatement	return 0 ;	153:1:2844:2852	5562548	10	True				
ANR	5562708	PrimaryExpression	0		5562548	0					
ANR	5562709	ReturnType	R_API int		5562548	1					
ANR	5562710	Identifier	r_core_patch		5562548	2					
ANR	5562711	ParameterList	"RCore * core , const char * patch"		5562548	3					
ANR	5562712	Parameter	RCore * core	109:23:2159:2169	5562548	0	True				
ANR	5562713	ParameterType	RCore *		5562548	0					
ANR	5562714	Identifier	core		5562548	1					
ANR	5562715	Parameter	const char * patch	109:36:2172:2188	5562548	1	True				
ANR	5562716	ParameterType	const char *		5562548	0					
ANR	5562717	Identifier	patch		5562548	1					
ANR	5562718	CFGEntryNode	ENTRY		5562548		True				
ANR	5562719	CFGExitNode	EXIT		5562548		True				
ANR	5562720	Symbol	patch		5562548						
ANR	5562721	Symbol	str		5562548						
ANR	5562722	Symbol	p		5562548						
ANR	5562723	Symbol	p0		5562548						
ANR	5562724	Symbol	core		5562548						
ANR	5562725	Symbol	& noff		5562548						
ANR	5562726	Symbol	* p ++		5562548						
ANR	5562727	Symbol	* p		5562548						
ANR	5562728	Symbol	strdup		5562548						
ANR	5562729	Symbol	* str		5562548						
