command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4099288	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd.c								
ANR	4099289	DeclStmt									
ANR	4099290	Decl							R_API void	"R_API void ( RCore * core , const char * _name )"	r_save_panels_layout
ANR	4099291	DeclStmt									
ANR	4099292	Decl							R_API void	"R_API void ( RCore * core , const char * _name )"	r_load_panels_layout
ANR	4099293	DeclStmt									
ANR	4099294	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	4099295	DeclStmt									
ANR	4099296	Decl							help_msg_	help_msg_	cmd_
ANR	4099297	DeclStmt									
ANR	4099298	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	4099299	DeclStmt									
ANR	4099300	Decl							help_msg_	help_msg_	cmd_
ANR	4099301	DeclStmt									
ANR	4099302	Decl							help_detail_	help_detail_	cmd_
ANR	4099303	DeclStmt									
ANR	4099304	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	4099305	DeclStmt									
ANR	4099306	Decl							help_msg_	help_msg_	cmd_
ANR	4099307	DeclStmt									
ANR	4099308	Decl							help_detail_	help_detail_	cmd_
ANR	4099309	DeclStmt									
ANR	4099310	Decl							help_detail2_	help_detail2_	cmd_
ANR	4099311	DeclStmt									
ANR	4099312	Decl							RCmdDescriptor	RCmdDescriptor *	d
ANR	4099313	DeclStmt									
ANR	4099314	Decl							help_msg_	help_msg_	named_cmd
ANR	4099315	DeclStmt									
ANR	4099316	Decl							int	"int ( RCore * core , char * cmd , char * colon , bool * tmpseek )"	r_core_cmd_subst_i
ANR	4099317	DeclStmt									
ANR	4099318	Decl							void	"void ( RCore * core , const char * str )"	cmd_debug_reg
ANR	4099319	DeclStmt									
ANR	4099320	Decl							const char	const char * [ ]	help_msg_dollar
ANR	4099321	DeclStmt									
ANR	4099322	Decl							const char	const char * [ ]	help_msg_star
ANR	4099323	DeclStmt									
ANR	4099324	Decl							const char	const char * [ ]	help_msg_dot
ANR	4099325	DeclStmt									
ANR	4099326	Decl							const char	const char * [ ]	help_msg_equal
ANR	4099327	DeclStmt									
ANR	4099328	Decl							const char	const char * [ ]	help_msg_equalh
ANR	4099329	DeclStmt									
ANR	4099330	Decl							const char	const char * [ ]	help_msg_equalh
ANR	4099331	DeclStmt									
ANR	4099332	Decl							const char	const char * [ ]	help_msg_equalg
ANR	4099333	DeclStmt									
ANR	4099334	Decl							const char	const char * [ ]	help_msg_b
ANR	4099335	DeclStmt									
ANR	4099336	Decl							const char	const char * [ ]	help_msg_k
ANR	4099337	DeclStmt									
ANR	4099338	Decl							const char	const char * [ ]	help_msg_r
ANR	4099339	DeclStmt									
ANR	4099340	Decl							const char	const char * [ ]	help_msg_u
ANR	4099341	DeclStmt									
ANR	4099342	Decl							const char	const char * [ ]	help_msg_y
ANR	4099343	DeclStmt									
ANR	4099344	Decl							const char	const char * [ ]	help_msg_triple_exclamation
ANR	4099345	DeclStmt									
ANR	4099346	Decl							const char	const char * [ ]	help_msg_vertical_bar
ANR	4099347	Function	r_core_cmd_help	311:0:11524:11659							
ANR	4099348	FunctionDef	"r_core_cmd_help (const RCore * core , const char * help [ ])"		4099347	0					
ANR	4099349	CompoundStatement		311:66:11590:11659	4099347	0					
ANR	4099350	ExpressionStatement	"r_cons_cmd_help ( help , core -> print -> flags & R_PRINT_FLAGS_COLOR )"	312:1:11593:11657	4099347	0	True				
ANR	4099351	CallExpression	"r_cons_cmd_help ( help , core -> print -> flags & R_PRINT_FLAGS_COLOR )"		4099347	0					
ANR	4099352	Callee	r_cons_cmd_help		4099347	0					
ANR	4099353	Identifier	r_cons_cmd_help		4099347	0					
ANR	4099354	ArgumentList	help		4099347	1					
ANR	4099355	Argument	help		4099347	0					
ANR	4099356	Identifier	help		4099347	0					
ANR	4099357	Argument	core -> print -> flags & R_PRINT_FLAGS_COLOR		4099347	1					
ANR	4099358	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		4099347	0		&			
ANR	4099359	PtrMemberAccess	core -> print -> flags		4099347	0					
ANR	4099360	PtrMemberAccess	core -> print		4099347	0					
ANR	4099361	Identifier	core		4099347	0					
ANR	4099362	Identifier	print		4099347	1					
ANR	4099363	Identifier	flags		4099347	1					
ANR	4099364	Identifier	R_PRINT_FLAGS_COLOR		4099347	1					
ANR	4099365	ReturnType	R_API void		4099347	1					
ANR	4099366	Identifier	r_core_cmd_help		4099347	2					
ANR	4099367	ParameterList	"const RCore * core , const char * help [ ]"		4099347	3					
ANR	4099368	Parameter	const RCore * core	311:27:11551:11567	4099347	0	True				
ANR	4099369	ParameterType	const RCore *		4099347	0					
ANR	4099370	Identifier	core		4099347	1					
ANR	4099371	Parameter	const char * help [ ]	311:46:11570:11587	4099347	1	True				
ANR	4099372	ParameterType	const char * [ ]		4099347	0					
ANR	4099373	Identifier	help		4099347	1					
ANR	4099374	CFGEntryNode	ENTRY		4099347		True				
ANR	4099375	CFGExitNode	EXIT		4099347		True				
ANR	4099376	Symbol	core		4099347						
ANR	4099377	Symbol	help		4099347						
ANR	4099378	Symbol	* core -> print		4099347						
ANR	4099379	Symbol	R_PRINT_FLAGS_COLOR		4099347						
ANR	4099380	Symbol	* core		4099347						
ANR	4099381	Symbol	core -> print		4099347						
ANR	4099382	Symbol	core -> print -> flags		4099347						
ANR	4099383	Symbol	* * core		4099347						
ANR	4099384	Function	recursive_help_go	315:0:11662:12142							
ANR	4099385	FunctionDef	"recursive_help_go (RCore * core , int detail , RCmdDescriptor * desc)"		4099384	0					
ANR	4099386	CompoundStatement		315:77:11739:12142	4099384	0					
ANR	4099387	IdentifierDeclStatement	int i ;	316:1:11742:11747	4099384	0	True				
ANR	4099388	IdentifierDecl	i		4099384	0					
ANR	4099389	IdentifierDeclType	int		4099384	0					
ANR	4099390	Identifier	i		4099384	1					
ANR	4099391	IfStatement	if ( desc -> help_msg )		4099384	1					
ANR	4099392	Condition	desc -> help_msg	317:5:11754:11767	4099384	0	True				
ANR	4099393	PtrMemberAccess	desc -> help_msg		4099384	0					
ANR	4099394	Identifier	desc		4099384	0					
ANR	4099395	Identifier	help_msg		4099384	1					
ANR	4099396	CompoundStatement		3:21:30:30	4099384	1					
ANR	4099397	ExpressionStatement	"r_core_cmd_help ( core , desc -> help_msg )"	318:2:11774:11812	4099384	0	True				
ANR	4099398	CallExpression	"r_core_cmd_help ( core , desc -> help_msg )"		4099384	0					
ANR	4099399	Callee	r_core_cmd_help		4099384	0					
ANR	4099400	Identifier	r_core_cmd_help		4099384	0					
ANR	4099401	ArgumentList	core		4099384	1					
ANR	4099402	Argument	core		4099384	0					
ANR	4099403	Identifier	core		4099384	0					
ANR	4099404	Argument	desc -> help_msg		4099384	1					
ANR	4099405	PtrMemberAccess	desc -> help_msg		4099384	0					
ANR	4099406	Identifier	desc		4099384	0					
ANR	4099407	Identifier	help_msg		4099384	1					
ANR	4099408	IfStatement	if ( detail >= 1 )		4099384	2					
ANR	4099409	Condition	detail >= 1	320:5:11822:11832	4099384	0	True				
ANR	4099410	RelationalExpression	detail >= 1		4099384	0		>=			
ANR	4099411	Identifier	detail		4099384	0					
ANR	4099412	PrimaryExpression	1		4099384	1					
ANR	4099413	CompoundStatement		6:18:95:95	4099384	1					
ANR	4099414	IfStatement	if ( desc -> help_detail )		4099384	0					
ANR	4099415	Condition	desc -> help_detail	321:6:11843:11859	4099384	0	True				
ANR	4099416	PtrMemberAccess	desc -> help_detail		4099384	0					
ANR	4099417	Identifier	desc		4099384	0					
ANR	4099418	Identifier	help_detail		4099384	1					
ANR	4099419	CompoundStatement		7:25:122:122	4099384	1					
ANR	4099420	ExpressionStatement	"r_core_cmd_help ( core , desc -> help_detail )"	322:3:11867:11908	4099384	0	True				
ANR	4099421	CallExpression	"r_core_cmd_help ( core , desc -> help_detail )"		4099384	0					
ANR	4099422	Callee	r_core_cmd_help		4099384	0					
ANR	4099423	Identifier	r_core_cmd_help		4099384	0					
ANR	4099424	ArgumentList	core		4099384	1					
ANR	4099425	Argument	core		4099384	0					
ANR	4099426	Identifier	core		4099384	0					
ANR	4099427	Argument	desc -> help_detail		4099384	1					
ANR	4099428	PtrMemberAccess	desc -> help_detail		4099384	0					
ANR	4099429	Identifier	desc		4099384	0					
ANR	4099430	Identifier	help_detail		4099384	1					
ANR	4099431	IfStatement	if ( detail >= 2 && desc -> help_detail2 )		4099384	1					
ANR	4099432	Condition	detail >= 2 && desc -> help_detail2	324:6:11920:11952	4099384	0	True				
ANR	4099433	AndExpression	detail >= 2 && desc -> help_detail2		4099384	0		&&			
ANR	4099434	RelationalExpression	detail >= 2		4099384	0		>=			
ANR	4099435	Identifier	detail		4099384	0					
ANR	4099436	PrimaryExpression	2		4099384	1					
ANR	4099437	PtrMemberAccess	desc -> help_detail2		4099384	1					
ANR	4099438	Identifier	desc		4099384	0					
ANR	4099439	Identifier	help_detail2		4099384	1					
ANR	4099440	CompoundStatement		10:41:215:215	4099384	1					
ANR	4099441	ExpressionStatement	"r_core_cmd_help ( core , desc -> help_detail2 )"	325:3:11960:12002	4099384	0	True				
ANR	4099442	CallExpression	"r_core_cmd_help ( core , desc -> help_detail2 )"		4099384	0					
ANR	4099443	Callee	r_core_cmd_help		4099384	0					
ANR	4099444	Identifier	r_core_cmd_help		4099384	0					
ANR	4099445	ArgumentList	core		4099384	1					
ANR	4099446	Argument	core		4099384	0					
ANR	4099447	Identifier	core		4099384	0					
ANR	4099448	Argument	desc -> help_detail2		4099384	1					
ANR	4099449	PtrMemberAccess	desc -> help_detail2		4099384	0					
ANR	4099450	Identifier	desc		4099384	0					
ANR	4099451	Identifier	help_detail2		4099384	1					
ANR	4099452	ForStatement	for ( i = 32 ; i < R_ARRAY_SIZE ( desc -> sub ) ; i ++ )		4099384	3					
ANR	4099453	ForInit	i = 32 ;	328:6:12017:12023	4099384	0	True				
ANR	4099454	AssignmentExpression	i = 32		4099384	0		=			
ANR	4099455	Identifier	i		4099384	0					
ANR	4099456	PrimaryExpression	32		4099384	1					
ANR	4099457	Condition	i < R_ARRAY_SIZE ( desc -> sub )	328:14:12025:12052	4099384	1	True				
ANR	4099458	RelationalExpression	i < R_ARRAY_SIZE ( desc -> sub )		4099384	0		<			
ANR	4099459	Identifier	i		4099384	0					
ANR	4099460	CallExpression	R_ARRAY_SIZE ( desc -> sub )		4099384	1					
ANR	4099461	Callee	R_ARRAY_SIZE		4099384	0					
ANR	4099462	Identifier	R_ARRAY_SIZE		4099384	0					
ANR	4099463	ArgumentList	desc -> sub		4099384	1					
ANR	4099464	Argument	desc -> sub		4099384	0					
ANR	4099465	PtrMemberAccess	desc -> sub		4099384	0					
ANR	4099466	Identifier	desc		4099384	0					
ANR	4099467	Identifier	sub		4099384	1					
ANR	4099468	PostIncDecOperationExpression	i ++	328:44:12055:12057	4099384	2	True				
ANR	4099469	Identifier	i		4099384	0					
ANR	4099470	IncDec	++		4099384	1					
ANR	4099471	CompoundStatement		14:49:320:320	4099384	3					
ANR	4099472	IfStatement	if ( desc -> sub [ i ] )		4099384	0					
ANR	4099473	Condition	desc -> sub [ i ]	329:6:12068:12079	4099384	0	True				
ANR	4099474	ArrayIndexing	desc -> sub [ i ]		4099384	0					
ANR	4099475	PtrMemberAccess	desc -> sub		4099384	0					
ANR	4099476	Identifier	desc		4099384	0					
ANR	4099477	Identifier	sub		4099384	1					
ANR	4099478	Identifier	i		4099384	1					
ANR	4099479	CompoundStatement		15:20:342:342	4099384	1					
ANR	4099480	ExpressionStatement	"recursive_help_go ( core , detail , desc -> sub [ i ] )"	330:3:12087:12133	4099384	0	True				
ANR	4099481	CallExpression	"recursive_help_go ( core , detail , desc -> sub [ i ] )"		4099384	0					
ANR	4099482	Callee	recursive_help_go		4099384	0					
ANR	4099483	Identifier	recursive_help_go		4099384	0					
ANR	4099484	ArgumentList	core		4099384	1					
ANR	4099485	Argument	core		4099384	0					
ANR	4099486	Identifier	core		4099384	0					
ANR	4099487	Argument	detail		4099384	1					
ANR	4099488	Identifier	detail		4099384	0					
ANR	4099489	Argument	desc -> sub [ i ]		4099384	2					
ANR	4099490	ArrayIndexing	desc -> sub [ i ]		4099384	0					
ANR	4099491	PtrMemberAccess	desc -> sub		4099384	0					
ANR	4099492	Identifier	desc		4099384	0					
ANR	4099493	Identifier	sub		4099384	1					
ANR	4099494	Identifier	i		4099384	1					
ANR	4099495	ReturnType	static void		4099384	1					
ANR	4099496	Identifier	recursive_help_go		4099384	2					
ANR	4099497	ParameterList	"RCore * core , int detail , RCmdDescriptor * desc"		4099384	3					
ANR	4099498	Parameter	RCore * core	315:30:11692:11702	4099384	0	True				
ANR	4099499	ParameterType	RCore *		4099384	0					
ANR	4099500	Identifier	core		4099384	1					
ANR	4099501	Parameter	int detail	315:43:11705:11714	4099384	1	True				
ANR	4099502	ParameterType	int		4099384	0					
ANR	4099503	Identifier	detail		4099384	1					
ANR	4099504	Parameter	RCmdDescriptor * desc	315:55:11717:11736	4099384	2	True				
ANR	4099505	ParameterType	RCmdDescriptor *		4099384	0					
ANR	4099506	Identifier	desc		4099384	1					
ANR	4099507	CFGEntryNode	ENTRY		4099384		True				
ANR	4099508	CFGExitNode	EXIT		4099384		True				
ANR	4099509	Symbol	desc -> help_detail		4099384						
ANR	4099510	Symbol	i		4099384						
ANR	4099511	Symbol	desc -> help_msg		4099384						
ANR	4099512	Symbol	desc -> help_detail2		4099384						
ANR	4099513	Symbol	* desc -> sub		4099384						
ANR	4099514	Symbol	* * desc		4099384						
ANR	4099515	Symbol	desc -> sub		4099384						
ANR	4099516	Symbol	core		4099384						
ANR	4099517	Symbol	* i		4099384						
ANR	4099518	Symbol	R_ARRAY_SIZE		4099384						
ANR	4099519	Symbol	* desc		4099384						
ANR	4099520	Symbol	detail		4099384						
ANR	4099521	Symbol	desc		4099384						
ANR	4099522	Function	recursive_help	335:0:12145:12461							
ANR	4099523	FunctionDef	"recursive_help (RCore * core , int detail , const char * cmd_prefix)"		4099522	0					
ANR	4099524	CompoundStatement		335:76:12221:12461	4099522	0					
ANR	4099525	IdentifierDeclStatement	const ut8 * p ;	336:1:12224:12236	4099522	0	True				
ANR	4099526	IdentifierDecl	* p		4099522	0					
ANR	4099527	IdentifierDeclType	const ut8 *		4099522	0					
ANR	4099528	Identifier	p		4099522	1					
ANR	4099529	IdentifierDeclStatement	RCmdDescriptor * desc = & core -> root_cmd_descriptor ;	337:1:12239:12288	4099522	1	True				
ANR	4099530	IdentifierDecl	* desc = & core -> root_cmd_descriptor		4099522	0					
ANR	4099531	IdentifierDeclType	RCmdDescriptor *		4099522	0					
ANR	4099532	Identifier	desc		4099522	1					
ANR	4099533	AssignmentExpression	* desc = & core -> root_cmd_descriptor		4099522	2		=			
ANR	4099534	Identifier	desc		4099522	0					
ANR	4099535	UnaryOperationExpression	& core -> root_cmd_descriptor		4099522	1					
ANR	4099536	UnaryOperator	&		4099522	0					
ANR	4099537	PtrMemberAccess	core -> root_cmd_descriptor		4099522	1					
ANR	4099538	Identifier	core		4099522	0					
ANR	4099539	Identifier	root_cmd_descriptor		4099522	1					
ANR	4099540	ForStatement	for ( p = ( const ut8 * ) cmd_prefix ; * p && * p < R_ARRAY_SIZE ( desc -> sub ) ; p ++ )		4099522	2					
ANR	4099541	ForInit	p = ( const ut8 * ) cmd_prefix ;	338:6:12296:12323	4099522	0	True				
ANR	4099542	AssignmentExpression	p = ( const ut8 * ) cmd_prefix		4099522	0		=			
ANR	4099543	Identifier	p		4099522	0					
ANR	4099544	CastExpression	( const ut8 * ) cmd_prefix		4099522	1					
ANR	4099545	CastTarget	const ut8 *		4099522	0					
ANR	4099546	Identifier	cmd_prefix		4099522	1					
ANR	4099547	Condition	* p && * p < R_ARRAY_SIZE ( desc -> sub )	338:35:12325:12359	4099522	1	True				
ANR	4099548	AndExpression	* p && * p < R_ARRAY_SIZE ( desc -> sub )		4099522	0		&&			
ANR	4099549	UnaryOperationExpression	* p		4099522	0					
ANR	4099550	UnaryOperator	*		4099522	0					
ANR	4099551	Identifier	p		4099522	1					
ANR	4099552	RelationalExpression	* p < R_ARRAY_SIZE ( desc -> sub )		4099522	1		<			
ANR	4099553	UnaryOperationExpression	* p		4099522	0					
ANR	4099554	UnaryOperator	*		4099522	0					
ANR	4099555	Identifier	p		4099522	1					
ANR	4099556	CallExpression	R_ARRAY_SIZE ( desc -> sub )		4099522	1					
ANR	4099557	Callee	R_ARRAY_SIZE		4099522	0					
ANR	4099558	Identifier	R_ARRAY_SIZE		4099522	0					
ANR	4099559	ArgumentList	desc -> sub		4099522	1					
ANR	4099560	Argument	desc -> sub		4099522	0					
ANR	4099561	PtrMemberAccess	desc -> sub		4099522	0					
ANR	4099562	Identifier	desc		4099522	0					
ANR	4099563	Identifier	sub		4099522	1					
ANR	4099564	PostIncDecOperationExpression	p ++	338:72:12362:12364	4099522	2	True				
ANR	4099565	Identifier	p		4099522	0					
ANR	4099566	IncDec	++		4099522	1					
ANR	4099567	CompoundStatement		4:77:145:145	4099522	3					
ANR	4099568	IfStatement	if ( ! ( desc = desc -> sub [ * p ] ) )		4099522	0					
ANR	4099569	Condition	! ( desc = desc -> sub [ * p ] )	339:6:12375:12397	4099522	0	True				
ANR	4099570	UnaryOperationExpression	! ( desc = desc -> sub [ * p ] )		4099522	0					
ANR	4099571	UnaryOperator	!		4099522	0					
ANR	4099572	AssignmentExpression	desc = desc -> sub [ * p ]		4099522	1		=			
ANR	4099573	Identifier	desc		4099522	0					
ANR	4099574	ArrayIndexing	desc -> sub [ * p ]		4099522	1					
ANR	4099575	PtrMemberAccess	desc -> sub		4099522	0					
ANR	4099576	Identifier	desc		4099522	0					
ANR	4099577	Identifier	sub		4099522	1					
ANR	4099578	UnaryOperationExpression	* p		4099522	1					
ANR	4099579	UnaryOperator	*		4099522	0					
ANR	4099580	Identifier	p		4099522	1					
ANR	4099581	CompoundStatement		5:31:178:178	4099522	1					
ANR	4099582	ReturnStatement	return ;	340:3:12405:12411	4099522	0	True				
ANR	4099583	ExpressionStatement	"recursive_help_go ( core , detail , desc )"	343:1:12421:12459	4099522	3	True				
ANR	4099584	CallExpression	"recursive_help_go ( core , detail , desc )"		4099522	0					
ANR	4099585	Callee	recursive_help_go		4099522	0					
ANR	4099586	Identifier	recursive_help_go		4099522	0					
ANR	4099587	ArgumentList	core		4099522	1					
ANR	4099588	Argument	core		4099522	0					
ANR	4099589	Identifier	core		4099522	0					
ANR	4099590	Argument	detail		4099522	1					
ANR	4099591	Identifier	detail		4099522	0					
ANR	4099592	Argument	desc		4099522	2					
ANR	4099593	Identifier	desc		4099522	0					
ANR	4099594	ReturnType	static void		4099522	1					
ANR	4099595	Identifier	recursive_help		4099522	2					
ANR	4099596	ParameterList	"RCore * core , int detail , const char * cmd_prefix"		4099522	3					
ANR	4099597	Parameter	RCore * core	335:27:12172:12182	4099522	0	True				
ANR	4099598	ParameterType	RCore *		4099522	0					
ANR	4099599	Identifier	core		4099522	1					
ANR	4099600	Parameter	int detail	335:40:12185:12194	4099522	1	True				
ANR	4099601	ParameterType	int		4099522	0					
ANR	4099602	Identifier	detail		4099522	1					
ANR	4099603	Parameter	const char * cmd_prefix	335:52:12197:12218	4099522	2	True				
ANR	4099604	ParameterType	const char *		4099522	0					
ANR	4099605	Identifier	cmd_prefix		4099522	1					
ANR	4099606	CFGEntryNode	ENTRY		4099522		True				
ANR	4099607	CFGExitNode	EXIT		4099522		True				
ANR	4099608	Symbol	& core -> root_cmd_descriptor		4099522						
ANR	4099609	Symbol	* desc -> sub		4099522						
ANR	4099610	Symbol	* * desc		4099522						
ANR	4099611	Symbol	desc -> sub		4099522						
ANR	4099612	Symbol	p		4099522						
ANR	4099613	Symbol	core		4099522						
ANR	4099614	Symbol	cmd_prefix		4099522						
ANR	4099615	Symbol	R_ARRAY_SIZE		4099522						
ANR	4099616	Symbol	* p		4099522						
ANR	4099617	Symbol	* desc		4099522						
ANR	4099618	Symbol	detail		4099522						
ANR	4099619	Symbol	* * p		4099522						
ANR	4099620	Symbol	desc		4099522						
ANR	4099621	Function	r_core_cmd_nullcallback	346:0:12464:12719							
ANR	4099622	FunctionDef	r_core_cmd_nullcallback (void * data)		4099621	0					
ANR	4099623	CompoundStatement		346:47:12511:12719	4099621	0					
ANR	4099624	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	347:1:12514:12541	4099621	0	True				
ANR	4099625	IdentifierDecl	* core = ( RCore * ) data		4099621	0					
ANR	4099626	IdentifierDeclType	RCore *		4099621	0					
ANR	4099627	Identifier	core		4099621	1					
ANR	4099628	AssignmentExpression	* core = ( RCore * ) data		4099621	2		=			
ANR	4099629	Identifier	core		4099621	0					
ANR	4099630	CastExpression	( RCore * ) data		4099621	1					
ANR	4099631	CastTarget	RCore *		4099621	0					
ANR	4099632	Identifier	data		4099621	1					
ANR	4099633	IfStatement	if ( core -> cons -> context -> breaked )		4099621	1					
ANR	4099634	Condition	core -> cons -> context -> breaked	348:5:12548:12575	4099621	0	True				
ANR	4099635	PtrMemberAccess	core -> cons -> context -> breaked		4099621	0					
ANR	4099636	PtrMemberAccess	core -> cons -> context		4099621	0					
ANR	4099637	PtrMemberAccess	core -> cons		4099621	0					
ANR	4099638	Identifier	core		4099621	0					
ANR	4099639	Identifier	cons		4099621	1					
ANR	4099640	Identifier	context		4099621	1					
ANR	4099641	Identifier	breaked		4099621	1					
ANR	4099642	CompoundStatement		3:35:66:66	4099621	1					
ANR	4099643	ExpressionStatement	core -> cons -> context -> breaked = false	349:2:12582:12618	4099621	0	True				
ANR	4099644	AssignmentExpression	core -> cons -> context -> breaked = false		4099621	0		=			
ANR	4099645	PtrMemberAccess	core -> cons -> context -> breaked		4099621	0					
ANR	4099646	PtrMemberAccess	core -> cons -> context		4099621	0					
ANR	4099647	PtrMemberAccess	core -> cons		4099621	0					
ANR	4099648	Identifier	core		4099621	0					
ANR	4099649	Identifier	cons		4099621	1					
ANR	4099650	Identifier	context		4099621	1					
ANR	4099651	Identifier	breaked		4099621	1					
ANR	4099652	Identifier	false		4099621	1					
ANR	4099653	ReturnStatement	return 0 ;	350:2:12622:12630	4099621	1	True				
ANR	4099654	PrimaryExpression	0		4099621	0					
ANR	4099655	IfStatement	if ( ! core -> cmdrepeat )		4099621	2					
ANR	4099656	Condition	! core -> cmdrepeat	352:5:12640:12655	4099621	0	True				
ANR	4099657	UnaryOperationExpression	! core -> cmdrepeat		4099621	0					
ANR	4099658	UnaryOperator	!		4099621	0					
ANR	4099659	PtrMemberAccess	core -> cmdrepeat		4099621	1					
ANR	4099660	Identifier	core		4099621	0					
ANR	4099661	Identifier	cmdrepeat		4099621	1					
ANR	4099662	CompoundStatement		7:23:146:146	4099621	1					
ANR	4099663	ReturnStatement	return 0 ;	353:2:12662:12670	4099621	0	True				
ANR	4099664	PrimaryExpression	0		4099621	0					
ANR	4099665	ExpressionStatement	"r_core_cmd_repeat ( core , true )"	355:1:12676:12706	4099621	3	True				
ANR	4099666	CallExpression	"r_core_cmd_repeat ( core , true )"		4099621	0					
ANR	4099667	Callee	r_core_cmd_repeat		4099621	0					
ANR	4099668	Identifier	r_core_cmd_repeat		4099621	0					
ANR	4099669	ArgumentList	core		4099621	1					
ANR	4099670	Argument	core		4099621	0					
ANR	4099671	Identifier	core		4099621	0					
ANR	4099672	Argument	true		4099621	1					
ANR	4099673	Identifier	true		4099621	0					
ANR	4099674	ReturnStatement	return 1 ;	356:1:12709:12717	4099621	4	True				
ANR	4099675	PrimaryExpression	1		4099621	0					
ANR	4099676	ReturnType	static int		4099621	1					
ANR	4099677	Identifier	r_core_cmd_nullcallback		4099621	2					
ANR	4099678	ParameterList	void * data		4099621	3					
ANR	4099679	Parameter	void * data	346:35:12499:12508	4099621	0	True				
ANR	4099680	ParameterType	void *		4099621	0					
ANR	4099681	Identifier	data		4099621	1					
ANR	4099682	CFGEntryNode	ENTRY		4099621		True				
ANR	4099683	CFGExitNode	EXIT		4099621		True				
ANR	4099684	Symbol	core -> cmdrepeat		4099621						
ANR	4099685	Symbol	data		4099621						
ANR	4099686	Symbol	* core -> cons		4099621						
ANR	4099687	Symbol	* * core -> cons		4099621						
ANR	4099688	Symbol	* core		4099621						
ANR	4099689	Symbol	false		4099621						
ANR	4099690	Symbol	core -> cons -> context -> breaked		4099621						
ANR	4099691	Symbol	core		4099621						
ANR	4099692	Symbol	* * * core		4099621						
ANR	4099693	Symbol	core -> cons		4099621						
ANR	4099694	Symbol	* core -> cons -> context		4099621						
ANR	4099695	Symbol	true		4099621						
ANR	4099696	Symbol	core -> cons -> context		4099621						
ANR	4099697	Symbol	* * core		4099621						
ANR	4099698	Function	cmd_uniq	359:0:12722:13277							
ANR	4099699	FunctionDef	"cmd_uniq (void * data , const char * input)"		4099698	0					
ANR	4099700	CompoundStatement		359:51:12773:13277	4099698	0					
ANR	4099701	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	360:1:12786:12813	4099698	0	True				
ANR	4099702	IdentifierDecl	* core = ( RCore * ) data		4099698	0					
ANR	4099703	IdentifierDeclType	RCore *		4099698	0					
ANR	4099704	Identifier	core		4099698	1					
ANR	4099705	AssignmentExpression	* core = ( RCore * ) data		4099698	2		=			
ANR	4099706	Identifier	core		4099698	0					
ANR	4099707	CastExpression	( RCore * ) data		4099698	1					
ANR	4099708	CastTarget	RCore *		4099698	0					
ANR	4099709	Identifier	data		4099698	1					
ANR	4099710	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	361:1:12816:12853	4099698	1	True				
ANR	4099711	IdentifierDecl	"* arg = strchr ( input , ' ' )"		4099698	0					
ANR	4099712	IdentifierDeclType	const char *		4099698	0					
ANR	4099713	Identifier	arg		4099698	1					
ANR	4099714	AssignmentExpression	"* arg = strchr ( input , ' ' )"		4099698	2		=			
ANR	4099715	Identifier	arg		4099698	0					
ANR	4099716	CallExpression	"strchr ( input , ' ' )"		4099698	1					
ANR	4099717	Callee	strchr		4099698	0					
ANR	4099718	Identifier	strchr		4099698	0					
ANR	4099719	ArgumentList	input		4099698	1					
ANR	4099720	Argument	input		4099698	0					
ANR	4099721	Identifier	input		4099698	0					
ANR	4099722	Argument	' '		4099698	1					
ANR	4099723	PrimaryExpression	' '		4099698	0					
ANR	4099724	IfStatement	if ( arg )		4099698	2					
ANR	4099725	Condition	arg	362:5:12860:12862	4099698	0	True				
ANR	4099726	Identifier	arg		4099698	0					
ANR	4099727	CompoundStatement		4:10:91:91	4099698	1					
ANR	4099728	ExpressionStatement	arg = r_str_trim_ro ( arg + 1 )	363:2:12869:12898	4099698	0	True				
ANR	4099729	AssignmentExpression	arg = r_str_trim_ro ( arg + 1 )		4099698	0		=			
ANR	4099730	Identifier	arg		4099698	0					
ANR	4099731	CallExpression	r_str_trim_ro ( arg + 1 )		4099698	1					
ANR	4099732	Callee	r_str_trim_ro		4099698	0					
ANR	4099733	Identifier	r_str_trim_ro		4099698	0					
ANR	4099734	ArgumentList	arg + 1		4099698	1					
ANR	4099735	Argument	arg + 1		4099698	0					
ANR	4099736	AdditiveExpression	arg + 1		4099698	0		+			
ANR	4099737	Identifier	arg		4099698	0					
ANR	4099738	PrimaryExpression	1		4099698	1					
ANR	4099739	SwitchStatement	switch ( * input )		4099698	3					
ANR	4099740	Condition	* input	365:9:12912:12917	4099698	0	True				
ANR	4099741	UnaryOperationExpression	* input		4099698	0					
ANR	4099742	UnaryOperator	*		4099698	0					
ANR	4099743	Identifier	input		4099698	1					
ANR	4099744	CompoundStatement		7:17:146:146	4099698	1					
ANR	4099745	Label	case '?' :	366:1:12923:12931	4099698	0	True				
ANR	4099746	ExpressionStatement	"eprintf ( ""Usage: uniq # uniq to list unique strings in file\\n"" )"	367:2:12946:13009	4099698	1	True				
ANR	4099747	CallExpression	"eprintf ( ""Usage: uniq # uniq to list unique strings in file\\n"" )"		4099698	0					
ANR	4099748	Callee	eprintf		4099698	0					
ANR	4099749	Identifier	eprintf		4099698	0					
ANR	4099750	ArgumentList	"""Usage: uniq # uniq to list unique strings in file\\n"""		4099698	1					
ANR	4099751	Argument	"""Usage: uniq # uniq to list unique strings in file\\n"""		4099698	0					
ANR	4099752	PrimaryExpression	"""Usage: uniq # uniq to list unique strings in file\\n"""		4099698	0					
ANR	4099753	BreakStatement	break ;	368:2:13013:13018	4099698	2	True				
ANR	4099754	Label	default :	369:1:13021:13028	4099698	3	True				
ANR	4099755	Identifier	default		4099698	0					
ANR	4099756	IfStatement	if ( ! arg )		4099698	4					
ANR	4099757	Condition	! arg	370:6:13046:13049	4099698	0	True				
ANR	4099758	UnaryOperationExpression	! arg		4099698	0					
ANR	4099759	UnaryOperator	!		4099698	0					
ANR	4099760	Identifier	arg		4099698	1					
ANR	4099761	CompoundStatement		12:12:278:278	4099698	1					
ANR	4099762	ExpressionStatement	"arg = """""	371:3:13057:13065	4099698	0	True				
ANR	4099763	AssignmentExpression	"arg = """""		4099698	0		=			
ANR	4099764	Identifier	arg		4099698	0					
ANR	4099765	PrimaryExpression	""""""		4099698	1					
ANR	4099766	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		4099698	5					
ANR	4099767	Condition	"r_fs_check ( core -> fs , arg )"	373:6:13077:13102	4099698	0	True				
ANR	4099768	CallExpression	"r_fs_check ( core -> fs , arg )"		4099698	0					
ANR	4099769	Callee	r_fs_check		4099698	0					
ANR	4099770	Identifier	r_fs_check		4099698	0					
ANR	4099771	ArgumentList	core -> fs		4099698	1					
ANR	4099772	Argument	core -> fs		4099698	0					
ANR	4099773	PtrMemberAccess	core -> fs		4099698	0					
ANR	4099774	Identifier	core		4099698	0					
ANR	4099775	Identifier	fs		4099698	1					
ANR	4099776	Argument	arg		4099698	1					
ANR	4099777	Identifier	arg		4099698	0					
ANR	4099778	CompoundStatement		15:34:331:331	4099698	1					
ANR	4099779	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	374:3:13110:13142	4099698	0	True				
ANR	4099780	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		4099698	0					
ANR	4099781	Callee	r_core_cmdf		4099698	0					
ANR	4099782	Identifier	r_core_cmdf		4099698	0					
ANR	4099783	ArgumentList	core		4099698	1					
ANR	4099784	Argument	core		4099698	0					
ANR	4099785	Identifier	core		4099698	0					
ANR	4099786	Argument	"""md %s"""		4099698	1					
ANR	4099787	PrimaryExpression	"""md %s"""		4099698	0					
ANR	4099788	Argument	arg		4099698	2					
ANR	4099789	Identifier	arg		4099698	0					
ANR	4099790	ElseStatement	else		4099698	0					
ANR	4099791	CompoundStatement		18:3:384:415	4099698	0					
ANR	4099792	IdentifierDeclStatement	char * res = r_syscmd_uniq ( arg ) ;	376:3:13158:13189	4099698	0	True				
ANR	4099793	IdentifierDecl	* res = r_syscmd_uniq ( arg )		4099698	0					
ANR	4099794	IdentifierDeclType	char *		4099698	0					
ANR	4099795	Identifier	res		4099698	1					
ANR	4099796	AssignmentExpression	* res = r_syscmd_uniq ( arg )		4099698	2		=			
ANR	4099797	Identifier	res		4099698	0					
ANR	4099798	CallExpression	r_syscmd_uniq ( arg )		4099698	1					
ANR	4099799	Callee	r_syscmd_uniq		4099698	0					
ANR	4099800	Identifier	r_syscmd_uniq		4099698	0					
ANR	4099801	ArgumentList	arg		4099698	1					
ANR	4099802	Argument	arg		4099698	0					
ANR	4099803	Identifier	arg		4099698	0					
ANR	4099804	IfStatement	if ( res )		4099698	1					
ANR	4099805	Condition	res	377:7:13198:13200	4099698	0	True				
ANR	4099806	Identifier	res		4099698	0					
ANR	4099807	CompoundStatement		19:12:429:429	4099698	1					
ANR	4099808	ExpressionStatement	r_cons_print ( res )	378:4:13209:13227	4099698	0	True				
ANR	4099809	CallExpression	r_cons_print ( res )		4099698	0					
ANR	4099810	Callee	r_cons_print		4099698	0					
ANR	4099811	Identifier	r_cons_print		4099698	0					
ANR	4099812	ArgumentList	res		4099698	1					
ANR	4099813	Argument	res		4099698	0					
ANR	4099814	Identifier	res		4099698	0					
ANR	4099815	ExpressionStatement	free ( res )	379:4:13233:13243	4099698	1	True				
ANR	4099816	CallExpression	free ( res )		4099698	0					
ANR	4099817	Callee	free		4099698	0					
ANR	4099818	Identifier	free		4099698	0					
ANR	4099819	ArgumentList	res		4099698	1					
ANR	4099820	Argument	res		4099698	0					
ANR	4099821	Identifier	res		4099698	0					
ANR	4099822	BreakStatement	break ;	382:2:13256:13261	4099698	6	True				
ANR	4099823	ReturnStatement	return 0 ;	384:1:13267:13275	4099698	4	True				
ANR	4099824	PrimaryExpression	0		4099698	0					
ANR	4099825	ReturnType	static int		4099698	1					
ANR	4099826	Identifier	cmd_uniq		4099698	2					
ANR	4099827	ParameterList	"void * data , const char * input"		4099698	3					
ANR	4099828	Parameter	void * data	359:20:12742:12751	4099698	0	True				
ANR	4099829	ParameterType	void *		4099698	0					
ANR	4099830	Identifier	data		4099698	1					
ANR	4099831	Parameter	const char * input	359:32:12754:12770	4099698	1	True				
ANR	4099832	ParameterType	const char *		4099698	0					
ANR	4099833	Identifier	input		4099698	1					
ANR	4099834	CFGEntryNode	ENTRY		4099698		True				
ANR	4099835	CFGExitNode	EXIT		4099698		True				
ANR	4099836	Symbol	input		4099698						
ANR	4099837	Symbol	core		4099698						
ANR	4099838	Symbol	res		4099698						
ANR	4099839	Symbol	r_syscmd_uniq		4099698						
ANR	4099840	Symbol	data		4099698						
ANR	4099841	Symbol	arg		4099698						
ANR	4099842	Symbol	r_str_trim_ro		4099698						
ANR	4099843	Symbol	* input		4099698						
ANR	4099844	Symbol	* core		4099698						
ANR	4099845	Symbol	strchr		4099698						
ANR	4099846	Symbol	core -> fs		4099698						
ANR	4099847	Symbol	r_fs_check		4099698						
ANR	4099848	Function	cmd_head	387:0:13280:14137							
ANR	4099849	FunctionDef	"cmd_head (void * data , const char * _input)"		4099848	0					
ANR	4099850	CompoundStatement		387:53:13333:14137	4099848	0					
ANR	4099851	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	388:1:13346:13373	4099848	0	True				
ANR	4099852	IdentifierDecl	* core = ( RCore * ) data		4099848	0					
ANR	4099853	IdentifierDeclType	RCore *		4099848	0					
ANR	4099854	Identifier	core		4099848	1					
ANR	4099855	AssignmentExpression	* core = ( RCore * ) data		4099848	2		=			
ANR	4099856	Identifier	core		4099848	0					
ANR	4099857	CastExpression	( RCore * ) data		4099848	1					
ANR	4099858	CastTarget	RCore *		4099848	0					
ANR	4099859	Identifier	data		4099848	1					
ANR	4099860	IdentifierDeclStatement	int lines = 5 ;	389:1:13376:13389	4099848	1	True				
ANR	4099861	IdentifierDecl	lines = 5		4099848	0					
ANR	4099862	IdentifierDeclType	int		4099848	0					
ANR	4099863	Identifier	lines		4099848	1					
ANR	4099864	AssignmentExpression	lines = 5		4099848	2		=			
ANR	4099865	Identifier	lines		4099848	0					
ANR	4099866	PrimaryExpression	5		4099848	1					
ANR	4099867	IdentifierDeclStatement	char * input = strdup ( _input ) ;	390:1:13392:13421	4099848	2	True				
ANR	4099868	IdentifierDecl	* input = strdup ( _input )		4099848	0					
ANR	4099869	IdentifierDeclType	char *		4099848	0					
ANR	4099870	Identifier	input		4099848	1					
ANR	4099871	AssignmentExpression	* input = strdup ( _input )		4099848	2		=			
ANR	4099872	Identifier	input		4099848	0					
ANR	4099873	CallExpression	strdup ( _input )		4099848	1					
ANR	4099874	Callee	strdup		4099848	0					
ANR	4099875	Identifier	strdup		4099848	0					
ANR	4099876	ArgumentList	_input		4099848	1					
ANR	4099877	Argument	_input		4099848	0					
ANR	4099878	Identifier	_input		4099848	0					
ANR	4099879	IdentifierDeclStatement	"char * arg = strchr ( input , ' ' ) ;"	391:1:13424:13455	4099848	3	True				
ANR	4099880	IdentifierDecl	"* arg = strchr ( input , ' ' )"		4099848	0					
ANR	4099881	IdentifierDeclType	char *		4099848	0					
ANR	4099882	Identifier	arg		4099848	1					
ANR	4099883	AssignmentExpression	"* arg = strchr ( input , ' ' )"		4099848	2		=			
ANR	4099884	Identifier	arg		4099848	0					
ANR	4099885	CallExpression	"strchr ( input , ' ' )"		4099848	1					
ANR	4099886	Callee	strchr		4099848	0					
ANR	4099887	Identifier	strchr		4099848	0					
ANR	4099888	ArgumentList	input		4099848	1					
ANR	4099889	Argument	input		4099848	0					
ANR	4099890	Identifier	input		4099848	0					
ANR	4099891	Argument	' '		4099848	1					
ANR	4099892	PrimaryExpression	' '		4099848	0					
ANR	4099893	IdentifierDeclStatement	"char * tmp , * count ;"	392:1:13458:13475	4099848	4	True				
ANR	4099894	IdentifierDecl	* tmp		4099848	0					
ANR	4099895	IdentifierDeclType	char *		4099848	0					
ANR	4099896	Identifier	tmp		4099848	1					
ANR	4099897	IdentifierDecl	* count		4099848	1					
ANR	4099898	IdentifierDeclType	char *		4099848	0					
ANR	4099899	Identifier	count		4099848	1					
ANR	4099900	IfStatement	if ( arg )		4099848	5					
ANR	4099901	Condition	arg	393:5:13482:13484	4099848	0	True				
ANR	4099902	Identifier	arg		4099848	0					
ANR	4099903	CompoundStatement		7:10:153:153	4099848	1					
ANR	4099904	ExpressionStatement	arg = ( char * ) r_str_trim_ro ( arg + 1 )	394:2:13491:13528	4099848	0	True				
ANR	4099905	AssignmentExpression	arg = ( char * ) r_str_trim_ro ( arg + 1 )		4099848	0		=			
ANR	4099906	Identifier	arg		4099848	0					
ANR	4099907	CastExpression	( char * ) r_str_trim_ro ( arg + 1 )		4099848	1					
ANR	4099908	CastTarget	char *		4099848	0					
ANR	4099909	CallExpression	r_str_trim_ro ( arg + 1 )		4099848	1					
ANR	4099910	Callee	r_str_trim_ro		4099848	0					
ANR	4099911	Identifier	r_str_trim_ro		4099848	0					
ANR	4099912	ArgumentList	arg + 1		4099848	1					
ANR	4099913	Argument	arg + 1		4099848	0					
ANR	4099914	AdditiveExpression	arg + 1		4099848	0		+			
ANR	4099915	Identifier	arg		4099848	0					
ANR	4099916	PrimaryExpression	1		4099848	1					
ANR	4099917	ExpressionStatement	"count = strchr ( arg , ' ' )"	395:2:13562:13587	4099848	1	True				
ANR	4099918	AssignmentExpression	"count = strchr ( arg , ' ' )"		4099848	0		=			
ANR	4099919	Identifier	count		4099848	0					
ANR	4099920	CallExpression	"strchr ( arg , ' ' )"		4099848	1					
ANR	4099921	Callee	strchr		4099848	0					
ANR	4099922	Identifier	strchr		4099848	0					
ANR	4099923	ArgumentList	arg		4099848	1					
ANR	4099924	Argument	arg		4099848	0					
ANR	4099925	Identifier	arg		4099848	0					
ANR	4099926	Argument	' '		4099848	1					
ANR	4099927	PrimaryExpression	' '		4099848	0					
ANR	4099928	IfStatement	if ( count )		4099848	2					
ANR	4099929	Condition	count	396:6:13595:13599	4099848	0	True				
ANR	4099930	Identifier	count		4099848	0					
ANR	4099931	CompoundStatement		10:13:268:268	4099848	1					
ANR	4099932	ExpressionStatement	* count = 0	397:3:13607:13617	4099848	0	True				
ANR	4099933	AssignmentExpression	* count = 0		4099848	0		=			
ANR	4099934	UnaryOperationExpression	* count		4099848	0					
ANR	4099935	UnaryOperator	*		4099848	0					
ANR	4099936	Identifier	count		4099848	1					
ANR	4099937	PrimaryExpression	0		4099848	1					
ANR	4099938	ExpressionStatement	tmp = ( char * ) r_str_trim_ro ( count + 1 )	398:3:13655:13694	4099848	1	True				
ANR	4099939	AssignmentExpression	tmp = ( char * ) r_str_trim_ro ( count + 1 )		4099848	0		=			
ANR	4099940	Identifier	tmp		4099848	0					
ANR	4099941	CastExpression	( char * ) r_str_trim_ro ( count + 1 )		4099848	1					
ANR	4099942	CastTarget	char *		4099848	0					
ANR	4099943	CallExpression	r_str_trim_ro ( count + 1 )		4099848	1					
ANR	4099944	Callee	r_str_trim_ro		4099848	0					
ANR	4099945	Identifier	r_str_trim_ro		4099848	0					
ANR	4099946	ArgumentList	count + 1		4099848	1					
ANR	4099947	Argument	count + 1		4099848	0					
ANR	4099948	AdditiveExpression	count + 1		4099848	0		+			
ANR	4099949	Identifier	count		4099848	0					
ANR	4099950	PrimaryExpression	1		4099848	1					
ANR	4099951	ExpressionStatement	lines = atoi ( arg )	399:3:13699:13717	4099848	2	True				
ANR	4099952	AssignmentExpression	lines = atoi ( arg )		4099848	0		=			
ANR	4099953	Identifier	lines		4099848	0					
ANR	4099954	CallExpression	atoi ( arg )		4099848	1					
ANR	4099955	Callee	atoi		4099848	0					
ANR	4099956	Identifier	atoi		4099848	0					
ANR	4099957	ArgumentList	arg		4099848	1					
ANR	4099958	Argument	arg		4099848	0					
ANR	4099959	Identifier	arg		4099848	0					
ANR	4099960	ExpressionStatement	arg = tmp	400:3:13722:13731	4099848	3	True				
ANR	4099961	AssignmentExpression	arg = tmp		4099848	0		=			
ANR	4099962	Identifier	arg		4099848	0					
ANR	4099963	Identifier	tmp		4099848	1					
ANR	4099964	SwitchStatement	switch ( * input )		4099848	6					
ANR	4099965	Condition	* input	403:9:13749:13754	4099848	0	True				
ANR	4099966	UnaryOperationExpression	* input		4099848	0					
ANR	4099967	UnaryOperator	*		4099848	0					
ANR	4099968	Identifier	input		4099848	1					
ANR	4099969	CompoundStatement		17:17:423:423	4099848	1					
ANR	4099970	Label	case '?' :	404:1:13760:13768	4099848	0	True				
ANR	4099971	ExpressionStatement	"eprintf ( ""Usage: head [file] # to list first n lines in file\\n"" )"	405:2:13783:13847	4099848	1	True				
ANR	4099972	CallExpression	"eprintf ( ""Usage: head [file] # to list first n lines in file\\n"" )"		4099848	0					
ANR	4099973	Callee	eprintf		4099848	0					
ANR	4099974	Identifier	eprintf		4099848	0					
ANR	4099975	ArgumentList	"""Usage: head [file] # to list first n lines in file\\n"""		4099848	1					
ANR	4099976	Argument	"""Usage: head [file] # to list first n lines in file\\n"""		4099848	0					
ANR	4099977	PrimaryExpression	"""Usage: head [file] # to list first n lines in file\\n"""		4099848	0					
ANR	4099978	BreakStatement	break ;	406:2:13851:13856	4099848	2	True				
ANR	4099979	Label	default :	407:1:13859:13866	4099848	3	True				
ANR	4099980	Identifier	default		4099848	0					
ANR	4099981	IfStatement	if ( ! arg )		4099848	4					
ANR	4099982	Condition	! arg	408:6:13884:13887	4099848	0	True				
ANR	4099983	UnaryOperationExpression	! arg		4099848	0					
ANR	4099984	UnaryOperator	!		4099848	0					
ANR	4099985	Identifier	arg		4099848	1					
ANR	4099986	CompoundStatement		22:12:556:556	4099848	1					
ANR	4099987	ExpressionStatement	"arg = """""	409:3:13895:13903	4099848	0	True				
ANR	4099988	AssignmentExpression	"arg = """""		4099848	0		=			
ANR	4099989	Identifier	arg		4099848	0					
ANR	4099990	PrimaryExpression	""""""		4099848	1					
ANR	4099991	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		4099848	5					
ANR	4099992	Condition	"r_fs_check ( core -> fs , arg )"	411:6:13915:13940	4099848	0	True				
ANR	4099993	CallExpression	"r_fs_check ( core -> fs , arg )"		4099848	0					
ANR	4099994	Callee	r_fs_check		4099848	0					
ANR	4099995	Identifier	r_fs_check		4099848	0					
ANR	4099996	ArgumentList	core -> fs		4099848	1					
ANR	4099997	Argument	core -> fs		4099848	0					
ANR	4099998	PtrMemberAccess	core -> fs		4099848	0					
ANR	4099999	Identifier	core		4099848	0					
ANR	4100000	Identifier	fs		4099848	1					
ANR	4100001	Argument	arg		4099848	1					
ANR	4100002	Identifier	arg		4099848	0					
ANR	4100003	CompoundStatement		25:34:609:609	4099848	1					
ANR	4100004	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	412:3:13948:13980	4099848	0	True				
ANR	4100005	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		4099848	0					
ANR	4100006	Callee	r_core_cmdf		4099848	0					
ANR	4100007	Identifier	r_core_cmdf		4099848	0					
ANR	4100008	ArgumentList	core		4099848	1					
ANR	4100009	Argument	core		4099848	0					
ANR	4100010	Identifier	core		4099848	0					
ANR	4100011	Argument	"""md %s"""		4099848	1					
ANR	4100012	PrimaryExpression	"""md %s"""		4099848	0					
ANR	4100013	Argument	arg		4099848	2					
ANR	4100014	Identifier	arg		4099848	0					
ANR	4100015	ElseStatement	else		4099848	0					
ANR	4100016	CompoundStatement		28:3:662:700	4099848	0					
ANR	4100017	IdentifierDeclStatement	"char * res = r_syscmd_head ( arg , lines ) ;"	414:3:13996:14034	4099848	0	True				
ANR	4100018	IdentifierDecl	"* res = r_syscmd_head ( arg , lines )"		4099848	0					
ANR	4100019	IdentifierDeclType	char *		4099848	0					
ANR	4100020	Identifier	res		4099848	1					
ANR	4100021	AssignmentExpression	"* res = r_syscmd_head ( arg , lines )"		4099848	2		=			
ANR	4100022	Identifier	res		4099848	0					
ANR	4100023	CallExpression	"r_syscmd_head ( arg , lines )"		4099848	1					
ANR	4100024	Callee	r_syscmd_head		4099848	0					
ANR	4100025	Identifier	r_syscmd_head		4099848	0					
ANR	4100026	ArgumentList	arg		4099848	1					
ANR	4100027	Argument	arg		4099848	0					
ANR	4100028	Identifier	arg		4099848	0					
ANR	4100029	Argument	lines		4099848	1					
ANR	4100030	Identifier	lines		4099848	0					
ANR	4100031	IfStatement	if ( res )		4099848	1					
ANR	4100032	Condition	res	415:7:14043:14045	4099848	0	True				
ANR	4100033	Identifier	res		4099848	0					
ANR	4100034	CompoundStatement		29:12:714:714	4099848	1					
ANR	4100035	ExpressionStatement	r_cons_print ( res )	416:4:14054:14072	4099848	0	True				
ANR	4100036	CallExpression	r_cons_print ( res )		4099848	0					
ANR	4100037	Callee	r_cons_print		4099848	0					
ANR	4100038	Identifier	r_cons_print		4099848	0					
ANR	4100039	ArgumentList	res		4099848	1					
ANR	4100040	Argument	res		4099848	0					
ANR	4100041	Identifier	res		4099848	0					
ANR	4100042	ExpressionStatement	free ( res )	417:4:14078:14088	4099848	1	True				
ANR	4100043	CallExpression	free ( res )		4099848	0					
ANR	4100044	Callee	free		4099848	0					
ANR	4100045	Identifier	free		4099848	0					
ANR	4100046	ArgumentList	res		4099848	1					
ANR	4100047	Argument	res		4099848	0					
ANR	4100048	Identifier	res		4099848	0					
ANR	4100049	BreakStatement	break ;	420:2:14101:14106	4099848	6	True				
ANR	4100050	ExpressionStatement	free ( input )	422:1:14112:14124	4099848	7	True				
ANR	4100051	CallExpression	free ( input )		4099848	0					
ANR	4100052	Callee	free		4099848	0					
ANR	4100053	Identifier	free		4099848	0					
ANR	4100054	ArgumentList	input		4099848	1					
ANR	4100055	Argument	input		4099848	0					
ANR	4100056	Identifier	input		4099848	0					
ANR	4100057	ReturnStatement	return 0 ;	423:1:14127:14135	4099848	8	True				
ANR	4100058	PrimaryExpression	0		4099848	0					
ANR	4100059	ReturnType	static int		4099848	1					
ANR	4100060	Identifier	cmd_head		4099848	2					
ANR	4100061	ParameterList	"void * data , const char * _input"		4099848	3					
ANR	4100062	Parameter	void * data	387:21:13301:13310	4099848	0	True				
ANR	4100063	ParameterType	void *		4099848	0					
ANR	4100064	Identifier	data		4099848	1					
ANR	4100065	Parameter	const char * _input	387:33:13313:13330	4099848	1	True				
ANR	4100066	ParameterType	const char *		4099848	0					
ANR	4100067	Identifier	_input		4099848	1					
ANR	4100068	CFGEntryNode	ENTRY		4099848		True				
ANR	4100069	CFGExitNode	EXIT		4099848		True				
ANR	4100070	Symbol	atoi		4099848						
ANR	4100071	Symbol	res		4099848						
ANR	4100072	Symbol	data		4099848						
ANR	4100073	Symbol	r_syscmd_head		4099848						
ANR	4100074	Symbol	count		4099848						
ANR	4100075	Symbol	* input		4099848						
ANR	4100076	Symbol	* core		4099848						
ANR	4100077	Symbol	strchr		4099848						
ANR	4100078	Symbol	core		4099848						
ANR	4100079	Symbol	input		4099848						
ANR	4100080	Symbol	* count		4099848						
ANR	4100081	Symbol	tmp		4099848						
ANR	4100082	Symbol	arg		4099848						
ANR	4100083	Symbol	r_str_trim_ro		4099848						
ANR	4100084	Symbol	strdup		4099848						
ANR	4100085	Symbol	core -> fs		4099848						
ANR	4100086	Symbol	_input		4099848						
ANR	4100087	Symbol	lines		4099848						
ANR	4100088	Symbol	r_fs_check		4099848						
ANR	4100089	Function	cmd_uname	426:0:14140:15762							
ANR	4100090	FunctionDef	"cmd_uname (void * data , const char * input)"		4100089	0					
ANR	4100091	CompoundStatement		426:52:14192:15762	4100089	0					
ANR	4100092	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	427:1:14195:14222	4100089	0	True				
ANR	4100093	IdentifierDecl	* core = ( RCore * ) data		4100089	0					
ANR	4100094	IdentifierDeclType	RCore *		4100089	0					
ANR	4100095	Identifier	core		4100089	1					
ANR	4100096	AssignmentExpression	* core = ( RCore * ) data		4100089	2		=			
ANR	4100097	Identifier	core		4100089	0					
ANR	4100098	CastExpression	( RCore * ) data		4100089	1					
ANR	4100099	CastTarget	RCore *		4100089	0					
ANR	4100100	Identifier	data		4100089	1					
ANR	4100101	SwitchStatement	switch ( input [ 0 ] )		4100089	1					
ANR	4100102	Condition	input [ 0 ]	428:9:14233:14240	4100089	0	True				
ANR	4100103	ArrayIndexing	input [ 0 ]		4100089	0					
ANR	4100104	Identifier	input		4100089	0					
ANR	4100105	PrimaryExpression	0		4100089	1					
ANR	4100106	CompoundStatement		3:19:50:50	4100089	1					
ANR	4100107	Label	case '?' :	429:1:14246:14254	4100089	0	True				
ANR	4100108	ExpressionStatement	"r_core_cmd_help ( data , help_msg_u )"	430:2:14266:14300	4100089	1	True				
ANR	4100109	CallExpression	"r_core_cmd_help ( data , help_msg_u )"		4100089	0					
ANR	4100110	Callee	r_core_cmd_help		4100089	0					
ANR	4100111	Identifier	r_core_cmd_help		4100089	0					
ANR	4100112	ArgumentList	data		4100089	1					
ANR	4100113	Argument	data		4100089	0					
ANR	4100114	Identifier	data		4100089	0					
ANR	4100115	Argument	help_msg_u		4100089	1					
ANR	4100116	Identifier	help_msg_u		4100089	0					
ANR	4100117	ReturnStatement	return 1 ;	431:2:14304:14312	4100089	2	True				
ANR	4100118	PrimaryExpression	1		4100089	0					
ANR	4100119	Label	case 'c' :	432:1:14315:14323	4100089	3	True				
ANR	4100120	SwitchStatement	switch ( input [ 1 ] )		4100089	4					
ANR	4100121	Condition	input [ 1 ]	433:10:14343:14350	4100089	0	True				
ANR	4100122	ArrayIndexing	input [ 1 ]		4100089	0					
ANR	4100123	Identifier	input		4100089	0					
ANR	4100124	PrimaryExpression	1		4100089	1					
ANR	4100125	CompoundStatement		8:20:160:160	4100089	1					
ANR	4100126	Label	case ' ' :	434:2:14357:14365	4100089	0	True				
ANR	4100127	CompoundStatement		11:3:214:244	4100089	1					
ANR	4100128	IdentifierDeclStatement	char * cmd = strdup ( input + 2 ) ;	435:3:14372:14402	4100089	0	True				
ANR	4100129	IdentifierDecl	* cmd = strdup ( input + 2 )		4100089	0					
ANR	4100130	IdentifierDeclType	char *		4100089	0					
ANR	4100131	Identifier	cmd		4100089	1					
ANR	4100132	AssignmentExpression	* cmd = strdup ( input + 2 )		4100089	2		=			
ANR	4100133	Identifier	cmd		4100089	0					
ANR	4100134	CallExpression	strdup ( input + 2 )		4100089	1					
ANR	4100135	Callee	strdup		4100089	0					
ANR	4100136	Identifier	strdup		4100089	0					
ANR	4100137	ArgumentList	input + 2		4100089	1					
ANR	4100138	Argument	input + 2		4100089	0					
ANR	4100139	AdditiveExpression	input + 2		4100089	0		+			
ANR	4100140	Identifier	input		4100089	0					
ANR	4100141	PrimaryExpression	2		4100089	1					
ANR	4100142	IdentifierDeclStatement	"char * rcmd = strchr ( cmd , ',' ) ;"	436:3:14407:14437	4100089	1	True				
ANR	4100143	IdentifierDecl	"* rcmd = strchr ( cmd , ',' )"		4100089	0					
ANR	4100144	IdentifierDeclType	char *		4100089	0					
ANR	4100145	Identifier	rcmd		4100089	1					
ANR	4100146	AssignmentExpression	"* rcmd = strchr ( cmd , ',' )"		4100089	2		=			
ANR	4100147	Identifier	rcmd		4100089	0					
ANR	4100148	CallExpression	"strchr ( cmd , ',' )"		4100089	1					
ANR	4100149	Callee	strchr		4100089	0					
ANR	4100150	Identifier	strchr		4100089	0					
ANR	4100151	ArgumentList	cmd		4100089	1					
ANR	4100152	Argument	cmd		4100089	0					
ANR	4100153	Identifier	cmd		4100089	0					
ANR	4100154	Argument	"','"		4100089	1					
ANR	4100155	PrimaryExpression	"','"		4100089	0					
ANR	4100156	IfStatement	if ( rcmd )		4100089	2					
ANR	4100157	Condition	rcmd	437:7:14446:14449	4100089	0	True				
ANR	4100158	Identifier	rcmd		4100089	0					
ANR	4100159	CompoundStatement		14:4:282:341	4100089	1					
ANR	4100160	ExpressionStatement	* rcmd ++ = 0	438:4:14458:14469	4100089	0	True				
ANR	4100161	AssignmentExpression	* rcmd ++ = 0		4100089	0		=			
ANR	4100162	UnaryOperationExpression	* rcmd ++		4100089	0					
ANR	4100163	UnaryOperator	*		4100089	0					
ANR	4100164	PostIncDecOperationExpression	rcmd ++		4100089	1					
ANR	4100165	Identifier	rcmd		4100089	0					
ANR	4100166	IncDec	++		4100089	1					
ANR	4100167	PrimaryExpression	0		4100089	1					
ANR	4100168	IdentifierDeclStatement	"RCoreUndo * undo = r_core_undo_new ( core -> offset , cmd , rcmd ) ;"	439:4:14475:14534	4100089	1	True				
ANR	4100169	IdentifierDecl	"* undo = r_core_undo_new ( core -> offset , cmd , rcmd )"		4100089	0					
ANR	4100170	IdentifierDeclType	RCoreUndo *		4100089	0					
ANR	4100171	Identifier	undo		4100089	1					
ANR	4100172	AssignmentExpression	"* undo = r_core_undo_new ( core -> offset , cmd , rcmd )"		4100089	2		=			
ANR	4100173	Identifier	undo		4100089	0					
ANR	4100174	CallExpression	"r_core_undo_new ( core -> offset , cmd , rcmd )"		4100089	1					
ANR	4100175	Callee	r_core_undo_new		4100089	0					
ANR	4100176	Identifier	r_core_undo_new		4100089	0					
ANR	4100177	ArgumentList	core -> offset		4100089	1					
ANR	4100178	Argument	core -> offset		4100089	0					
ANR	4100179	PtrMemberAccess	core -> offset		4100089	0					
ANR	4100180	Identifier	core		4100089	0					
ANR	4100181	Identifier	offset		4100089	1					
ANR	4100182	Argument	cmd		4100089	1					
ANR	4100183	Identifier	cmd		4100089	0					
ANR	4100184	Argument	rcmd		4100089	2					
ANR	4100185	Identifier	rcmd		4100089	0					
ANR	4100186	ExpressionStatement	"r_core_undo_push ( core , undo )"	440:4:14540:14569	4100089	2	True				
ANR	4100187	CallExpression	"r_core_undo_push ( core , undo )"		4100089	0					
ANR	4100188	Callee	r_core_undo_push		4100089	0					
ANR	4100189	Identifier	r_core_undo_push		4100089	0					
ANR	4100190	ArgumentList	core		4100089	1					
ANR	4100191	Argument	core		4100089	0					
ANR	4100192	Identifier	core		4100089	0					
ANR	4100193	Argument	undo		4100089	1					
ANR	4100194	Identifier	undo		4100089	0					
ANR	4100195	ElseStatement	else		4100089	0					
ANR	4100196	CompoundStatement		16:10:388:388	4100089	0					
ANR	4100197	ExpressionStatement	"eprintf ( ""Usage: uc [cmd] [revert-cmd]"" )"	442:4:14587:14627	4100089	0	True				
ANR	4100198	CallExpression	"eprintf ( ""Usage: uc [cmd] [revert-cmd]"" )"		4100089	0					
ANR	4100199	Callee	eprintf		4100089	0					
ANR	4100200	Identifier	eprintf		4100089	0					
ANR	4100201	ArgumentList	"""Usage: uc [cmd] [revert-cmd]"""		4100089	1					
ANR	4100202	Argument	"""Usage: uc [cmd] [revert-cmd]"""		4100089	0					
ANR	4100203	PrimaryExpression	"""Usage: uc [cmd] [revert-cmd]"""		4100089	0					
ANR	4100204	ExpressionStatement	free ( cmd )	444:3:14637:14647	4100089	3	True				
ANR	4100205	CallExpression	free ( cmd )		4100089	0					
ANR	4100206	Callee	free		4100089	0					
ANR	4100207	Identifier	free		4100089	0					
ANR	4100208	ArgumentList	cmd		4100089	1					
ANR	4100209	Argument	cmd		4100089	0					
ANR	4100210	Identifier	cmd		4100089	0					
ANR	4100211	BreakStatement	break ;	446:3:14657:14662	4100089	2	True				
ANR	4100212	Label	case '?' :	447:2:14666:14674	4100089	3	True				
ANR	4100213	ExpressionStatement	"eprintf ( ""Usage: uc [cmd],[revert-cmd]\\n"" )"	448:3:14679:14721	4100089	4	True				
ANR	4100214	CallExpression	"eprintf ( ""Usage: uc [cmd],[revert-cmd]\\n"" )"		4100089	0					
ANR	4100215	Callee	eprintf		4100089	0					
ANR	4100216	Identifier	eprintf		4100089	0					
ANR	4100217	ArgumentList	"""Usage: uc [cmd],[revert-cmd]\\n"""		4100089	1					
ANR	4100218	Argument	"""Usage: uc [cmd],[revert-cmd]\\n"""		4100089	0					
ANR	4100219	PrimaryExpression	"""Usage: uc [cmd],[revert-cmd]\\n"""		4100089	0					
ANR	4100220	ExpressionStatement	"eprintf ( "" uc. - list all reverts in current\\n"" )"	449:3:14726:14774	4100089	5	True				
ANR	4100221	CallExpression	"eprintf ( "" uc. - list all reverts in current\\n"" )"		4100089	0					
ANR	4100222	Callee	eprintf		4100089	0					
ANR	4100223	Identifier	eprintf		4100089	0					
ANR	4100224	ArgumentList	""" uc. - list all reverts in current\\n"""		4100089	1					
ANR	4100225	Argument	""" uc. - list all reverts in current\\n"""		4100089	0					
ANR	4100226	PrimaryExpression	""" uc. - list all reverts in current\\n"""		4100089	0					
ANR	4100227	ExpressionStatement	"eprintf ( "" uc* - list all core undos\\n"" )"	450:3:14779:14819	4100089	6	True				
ANR	4100228	CallExpression	"eprintf ( "" uc* - list all core undos\\n"" )"		4100089	0					
ANR	4100229	Callee	eprintf		4100089	0					
ANR	4100230	Identifier	eprintf		4100089	0					
ANR	4100231	ArgumentList	""" uc* - list all core undos\\n"""		4100089	1					
ANR	4100232	Argument	""" uc* - list all core undos\\n"""		4100089	0					
ANR	4100233	PrimaryExpression	""" uc* - list all core undos\\n"""		4100089	0					
ANR	4100234	ExpressionStatement	"eprintf ( "" uc  - list all core undos\\n"" )"	451:3:14824:14864	4100089	7	True				
ANR	4100235	CallExpression	"eprintf ( "" uc  - list all core undos\\n"" )"		4100089	0					
ANR	4100236	Callee	eprintf		4100089	0					
ANR	4100237	Identifier	eprintf		4100089	0					
ANR	4100238	ArgumentList	""" uc  - list all core undos\\n"""		4100089	1					
ANR	4100239	Argument	""" uc  - list all core undos\\n"""		4100089	0					
ANR	4100240	PrimaryExpression	""" uc  - list all core undos\\n"""		4100089	0					
ANR	4100241	ExpressionStatement	"eprintf ( "" uc- - undo last action\\n"" )"	452:3:14869:14906	4100089	8	True				
ANR	4100242	CallExpression	"eprintf ( "" uc- - undo last action\\n"" )"		4100089	0					
ANR	4100243	Callee	eprintf		4100089	0					
ANR	4100244	Identifier	eprintf		4100089	0					
ANR	4100245	ArgumentList	""" uc- - undo last action\\n"""		4100089	1					
ANR	4100246	Argument	""" uc- - undo last action\\n"""		4100089	0					
ANR	4100247	PrimaryExpression	""" uc- - undo last action\\n"""		4100089	0					
ANR	4100248	BreakStatement	break ;	453:3:14911:14916	4100089	9	True				
ANR	4100249	Label	case '.' :	454:2:14920:14928	4100089	10	True				
ANR	4100250	CompoundStatement		29:12:737:737	4100089	11					
ANR	4100251	Statement	RCoreUndoCondition	455:3:14935:14952	4100089	0	True				
ANR	4100252	Statement	cond	455:22:14954:14957	4100089	1	True				
ANR	4100253	Statement	=	455:27:14959:14959	4100089	2	True				
ANR	4100254	CompoundStatement		30:29:768:768	4100089	3					
ANR	4100255	Statement	.	456:4:14967:14967	4100089	0	True				
ANR	4100256	Statement	addr	456:5:14968:14971	4100089	1	True				
ANR	4100257	Statement	=	456:10:14973:14973	4100089	2	True				
ANR	4100258	Statement	core	456:12:14975:14978	4100089	3	True				
ANR	4100259	Statement	->	456:16:14979:14980	4100089	4	True				
ANR	4100260	Statement	offset	456:18:14981:14986	4100089	5	True				
ANR	4100261	Statement	","	456:24:14987:14987	4100089	6	True				
ANR	4100262	Statement	.	457:4:14993:14993	4100089	7	True				
ANR	4100263	Statement	minstamp	457:5:14994:15001	4100089	8	True				
ANR	4100264	Statement	=	457:14:15003:15003	4100089	9	True				
ANR	4100265	Statement	0	457:16:15005:15005	4100089	10	True				
ANR	4100266	Statement	","	457:17:15006:15006	4100089	11	True				
ANR	4100267	Statement	.	458:4:15012:15012	4100089	12	True				
ANR	4100268	Statement	glob	458:5:15013:15016	4100089	13	True				
ANR	4100269	Statement	=	458:10:15018:15018	4100089	14	True				
ANR	4100270	Statement	NULL	458:12:15020:15023	4100089	15	True				
ANR	4100271	ExpressionStatement		459:4:15029:15029	4100089	4	True				
ANR	4100272	ExpressionStatement	"r_core_undo_print ( core , 1 , & cond )"	460:3:15034:15068	4100089	5	True				
ANR	4100273	CallExpression	"r_core_undo_print ( core , 1 , & cond )"		4100089	0					
ANR	4100274	Callee	r_core_undo_print		4100089	0					
ANR	4100275	Identifier	r_core_undo_print		4100089	0					
ANR	4100276	ArgumentList	core		4100089	1					
ANR	4100277	Argument	core		4100089	0					
ANR	4100278	Identifier	core		4100089	0					
ANR	4100279	Argument	1		4100089	1					
ANR	4100280	PrimaryExpression	1		4100089	0					
ANR	4100281	Argument	& cond		4100089	2					
ANR	4100282	UnaryOperationExpression	& cond		4100089	0					
ANR	4100283	UnaryOperator	&		4100089	0					
ANR	4100284	Identifier	cond		4100089	1					
ANR	4100285	BreakStatement	break ;	461:5:15075:15080	4100089	12	True				
ANR	4100286	Label	case '*' :	462:2:15084:15092	4100089	13	True				
ANR	4100287	ExpressionStatement	"r_core_undo_print ( core , 1 , NULL )"	463:3:15097:15130	4100089	14	True				
ANR	4100288	CallExpression	"r_core_undo_print ( core , 1 , NULL )"		4100089	0					
ANR	4100289	Callee	r_core_undo_print		4100089	0					
ANR	4100290	Identifier	r_core_undo_print		4100089	0					
ANR	4100291	ArgumentList	core		4100089	1					
ANR	4100292	Argument	core		4100089	0					
ANR	4100293	Identifier	core		4100089	0					
ANR	4100294	Argument	1		4100089	1					
ANR	4100295	PrimaryExpression	1		4100089	0					
ANR	4100296	Argument	NULL		4100089	2					
ANR	4100297	Identifier	NULL		4100089	0					
ANR	4100298	BreakStatement	break ;	464:3:15135:15140	4100089	15	True				
ANR	4100299	Label	case '-' :	465:2:15144:15152	4100089	16	True				
ANR	4100300	ExpressionStatement	r_core_undo_pop ( core )	466:3:15166:15188	4100089	17	True				
ANR	4100301	CallExpression	r_core_undo_pop ( core )		4100089	0					
ANR	4100302	Callee	r_core_undo_pop		4100089	0					
ANR	4100303	Identifier	r_core_undo_pop		4100089	0					
ANR	4100304	ArgumentList	core		4100089	1					
ANR	4100305	Argument	core		4100089	0					
ANR	4100306	Identifier	core		4100089	0					
ANR	4100307	BreakStatement	break ;	467:3:15193:15198	4100089	18	True				
ANR	4100308	Label	default :	468:2:15202:15209	4100089	19	True				
ANR	4100309	Identifier	default		4100089	0					
ANR	4100310	ExpressionStatement	"r_core_undo_print ( core , 0 , NULL )"	469:3:15214:15247	4100089	20	True				
ANR	4100311	CallExpression	"r_core_undo_print ( core , 0 , NULL )"		4100089	0					
ANR	4100312	Callee	r_core_undo_print		4100089	0					
ANR	4100313	Identifier	r_core_undo_print		4100089	0					
ANR	4100314	ArgumentList	core		4100089	1					
ANR	4100315	Argument	core		4100089	0					
ANR	4100316	Identifier	core		4100089	0					
ANR	4100317	Argument	0		4100089	1					
ANR	4100318	PrimaryExpression	0		4100089	0					
ANR	4100319	Argument	NULL		4100089	2					
ANR	4100320	Identifier	NULL		4100089	0					
ANR	4100321	BreakStatement	break ;	470:3:15252:15257	4100089	21	True				
ANR	4100322	ReturnStatement	return 1 ;	472:2:15265:15273	4100089	5	True				
ANR	4100323	PrimaryExpression	1		4100089	0					
ANR	4100324	Label	case 's' :	473:1:15276:15284	4100089	6	True				
ANR	4100325	ExpressionStatement	"r_core_cmdf ( data , ""s-%s"" , input + 1 )"	474:2:15296:15333	4100089	7	True				
ANR	4100326	CallExpression	"r_core_cmdf ( data , ""s-%s"" , input + 1 )"		4100089	0					
ANR	4100327	Callee	r_core_cmdf		4100089	0					
ANR	4100328	Identifier	r_core_cmdf		4100089	0					
ANR	4100329	ArgumentList	data		4100089	1					
ANR	4100330	Argument	data		4100089	0					
ANR	4100331	Identifier	data		4100089	0					
ANR	4100332	Argument	"""s-%s"""		4100089	1					
ANR	4100333	PrimaryExpression	"""s-%s"""		4100089	0					
ANR	4100334	Argument	input + 1		4100089	2					
ANR	4100335	AdditiveExpression	input + 1		4100089	0		+			
ANR	4100336	Identifier	input		4100089	0					
ANR	4100337	PrimaryExpression	1		4100089	1					
ANR	4100338	ReturnStatement	return 1 ;	475:2:15337:15345	4100089	8	True				
ANR	4100339	PrimaryExpression	1		4100089	0					
ANR	4100340	Label	case 'w' :	476:1:15348:15356	4100089	9	True				
ANR	4100341	ExpressionStatement	"r_core_cmdf ( data , ""wc%s"" , input + 1 )"	477:2:15368:15405	4100089	10	True				
ANR	4100342	CallExpression	"r_core_cmdf ( data , ""wc%s"" , input + 1 )"		4100089	0					
ANR	4100343	Callee	r_core_cmdf		4100089	0					
ANR	4100344	Identifier	r_core_cmdf		4100089	0					
ANR	4100345	ArgumentList	data		4100089	1					
ANR	4100346	Argument	data		4100089	0					
ANR	4100347	Identifier	data		4100089	0					
ANR	4100348	Argument	"""wc%s"""		4100089	1					
ANR	4100349	PrimaryExpression	"""wc%s"""		4100089	0					
ANR	4100350	Argument	input + 1		4100089	2					
ANR	4100351	AdditiveExpression	input + 1		4100089	0		+			
ANR	4100352	Identifier	input		4100089	0					
ANR	4100353	PrimaryExpression	1		4100089	1					
ANR	4100354	ReturnStatement	return 1 ;	478:2:15409:15417	4100089	11	True				
ANR	4100355	PrimaryExpression	1		4100089	0					
ANR	4100356	Label	case 'n' :	479:1:15420:15428	4100089	12	True				
ANR	4100357	IfStatement	if ( input [ 1 ] == 'i' && input [ 2 ] == 'q' )		4100089	13					
ANR	4100358	Condition	input [ 1 ] == 'i' && input [ 2 ] == 'q'	480:6:15444:15477	4100089	0	True				
ANR	4100359	AndExpression	input [ 1 ] == 'i' && input [ 2 ] == 'q'		4100089	0		&&			
ANR	4100360	EqualityExpression	input [ 1 ] == 'i'		4100089	0		==			
ANR	4100361	ArrayIndexing	input [ 1 ]		4100089	0					
ANR	4100362	Identifier	input		4100089	0					
ANR	4100363	PrimaryExpression	1		4100089	1					
ANR	4100364	PrimaryExpression	'i'		4100089	1					
ANR	4100365	EqualityExpression	input [ 2 ] == 'q'		4100089	1		==			
ANR	4100366	ArrayIndexing	input [ 2 ]		4100089	0					
ANR	4100367	Identifier	input		4100089	0					
ANR	4100368	PrimaryExpression	2		4100089	1					
ANR	4100369	PrimaryExpression	'q'		4100089	1					
ANR	4100370	CompoundStatement		55:42:1287:1287	4100089	1					
ANR	4100371	ExpressionStatement	"cmd_uniq ( core , input )"	481:3:15485:15507	4100089	0	True				
ANR	4100372	CallExpression	"cmd_uniq ( core , input )"		4100089	0					
ANR	4100373	Callee	cmd_uniq		4100089	0					
ANR	4100374	Identifier	cmd_uniq		4100089	0					
ANR	4100375	ArgumentList	core		4100089	1					
ANR	4100376	Argument	core		4100089	0					
ANR	4100377	Identifier	core		4100089	0					
ANR	4100378	Argument	input		4100089	1					
ANR	4100379	Identifier	input		4100089	0					
ANR	4100380	ReturnStatement	return 1 ;	483:2:15515:15523	4100089	14	True				
ANR	4100381	PrimaryExpression	1		4100089	0					
ANR	4100382	IdentifierDeclStatement	struct utsname un ;	486:1:15542:15559	4100089	2	True				
ANR	4100383	IdentifierDecl	un		4100089	0					
ANR	4100384	IdentifierDeclType	struct utsname		4100089	0					
ANR	4100385	Identifier	un		4100089	1					
ANR	4100386	ExpressionStatement	uname ( & un )	487:1:15562:15573	4100089	3	True				
ANR	4100387	CallExpression	uname ( & un )		4100089	0					
ANR	4100388	Callee	uname		4100089	0					
ANR	4100389	Identifier	uname		4100089	0					
ANR	4100390	ArgumentList	& un		4100089	1					
ANR	4100391	Argument	& un		4100089	0					
ANR	4100392	UnaryOperationExpression	& un		4100089	0					
ANR	4100393	UnaryOperator	&		4100089	0					
ANR	4100394	Identifier	un		4100089	1					
ANR	4100395	ExpressionStatement	"r_cons_printf ( ""%s %s %s %s\\n"" , un . sysname , un . nodename , un . release , un . machine )"	488:1:15576:15658	4100089	4	True				
ANR	4100396	CallExpression	"r_cons_printf ( ""%s %s %s %s\\n"" , un . sysname , un . nodename , un . release , un . machine )"		4100089	0					
ANR	4100397	Callee	r_cons_printf		4100089	0					
ANR	4100398	Identifier	r_cons_printf		4100089	0					
ANR	4100399	ArgumentList	"""%s %s %s %s\\n"""		4100089	1					
ANR	4100400	Argument	"""%s %s %s %s\\n"""		4100089	0					
ANR	4100401	PrimaryExpression	"""%s %s %s %s\\n"""		4100089	0					
ANR	4100402	Argument	un . sysname		4100089	1					
ANR	4100403	MemberAccess	un . sysname		4100089	0					
ANR	4100404	Identifier	un		4100089	0					
ANR	4100405	Identifier	sysname		4100089	1					
ANR	4100406	Argument	un . nodename		4100089	2					
ANR	4100407	MemberAccess	un . nodename		4100089	0					
ANR	4100408	Identifier	un		4100089	0					
ANR	4100409	Identifier	nodename		4100089	1					
ANR	4100410	Argument	un . release		4100089	3					
ANR	4100411	MemberAccess	un . release		4100089	0					
ANR	4100412	Identifier	un		4100089	0					
ANR	4100413	Identifier	release		4100089	1					
ANR	4100414	Argument	un . machine		4100089	4					
ANR	4100415	MemberAccess	un . machine		4100089	0					
ANR	4100416	Identifier	un		4100089	0					
ANR	4100417	Identifier	machine		4100089	1					
ANR	4100418	ReturnStatement	return 0 ;	495:1:15752:15760	4100089	5	True				
ANR	4100419	PrimaryExpression	0		4100089	0					
ANR	4100420	ReturnType	static int		4100089	1					
ANR	4100421	Identifier	cmd_uname		4100089	2					
ANR	4100422	ParameterList	"void * data , const char * input"		4100089	3					
ANR	4100423	Parameter	void * data	426:21:14161:14170	4100089	0	True				
ANR	4100424	ParameterType	void *		4100089	0					
ANR	4100425	Identifier	data		4100089	1					
ANR	4100426	Parameter	const char * input	426:33:14173:14189	4100089	1	True				
ANR	4100427	ParameterType	const char *		4100089	0					
ANR	4100428	Identifier	input		4100089	1					
ANR	4100429	CFGEntryNode	ENTRY		4100089		True				
ANR	4100430	CFGExitNode	EXIT		4100089		True				
ANR	4100431	Symbol	* rcmd ++		4100089						
ANR	4100432	Symbol	& un		4100089						
ANR	4100433	Symbol	NULL		4100089						
ANR	4100434	Symbol	data		4100089						
ANR	4100435	Symbol	* input		4100089						
ANR	4100436	Symbol	r_core_undo_new		4100089						
ANR	4100437	Symbol	* core		4100089						
ANR	4100438	Symbol	un . machine		4100089						
ANR	4100439	Symbol	strchr		4100089						
ANR	4100440	Symbol	core -> offset		4100089						
ANR	4100441	Symbol	un . nodename		4100089						
ANR	4100442	Symbol	input		4100089						
ANR	4100443	Symbol	core		4100089						
ANR	4100444	Symbol	undo		4100089						
ANR	4100445	Symbol	& cond		4100089						
ANR	4100446	Symbol	un . release		4100089						
ANR	4100447	Symbol	help_msg_u		4100089						
ANR	4100448	Symbol	un		4100089						
ANR	4100449	Symbol	cmd		4100089						
ANR	4100450	Symbol	strdup		4100089						
ANR	4100451	Symbol	un . sysname		4100089						
ANR	4100452	Symbol	rcmd		4100089						
ANR	4100453	Function	cmd_alias	498:0:15765:18028							
ANR	4100454	FunctionDef	"cmd_alias (void * data , const char * input)"		4100453	0					
ANR	4100455	CompoundStatement		498:52:15817:18028	4100453	0					
ANR	4100456	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	499:1:15820:15847	4100453	0	True				
ANR	4100457	IdentifierDecl	* core = ( RCore * ) data		4100453	0					
ANR	4100458	IdentifierDeclType	RCore *		4100453	0					
ANR	4100459	Identifier	core		4100453	1					
ANR	4100460	AssignmentExpression	* core = ( RCore * ) data		4100453	2		=			
ANR	4100461	Identifier	core		4100453	0					
ANR	4100462	CastExpression	( RCore * ) data		4100453	1					
ANR	4100463	CastTarget	RCore *		4100453	0					
ANR	4100464	Identifier	data		4100453	1					
ANR	4100465	IfStatement	if ( * input == '?' )		4100453	1					
ANR	4100466	Condition	* input == '?'	500:5:15854:15866	4100453	0	True				
ANR	4100467	EqualityExpression	* input == '?'		4100453	0		==			
ANR	4100468	UnaryOperationExpression	* input		4100453	0					
ANR	4100469	UnaryOperator	*		4100453	0					
ANR	4100470	Identifier	input		4100453	1					
ANR	4100471	PrimaryExpression	'?'		4100453	1					
ANR	4100472	CompoundStatement		3:20:51:51	4100453	1					
ANR	4100473	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dollar )"	501:2:15873:15912	4100453	0	True				
ANR	4100474	CallExpression	"r_core_cmd_help ( core , help_msg_dollar )"		4100453	0					
ANR	4100475	Callee	r_core_cmd_help		4100453	0					
ANR	4100476	Identifier	r_core_cmd_help		4100453	0					
ANR	4100477	ArgumentList	core		4100453	1					
ANR	4100478	Argument	core		4100453	0					
ANR	4100479	Identifier	core		4100453	0					
ANR	4100480	Argument	help_msg_dollar		4100453	1					
ANR	4100481	Identifier	help_msg_dollar		4100453	0					
ANR	4100482	ReturnStatement	return 0 ;	502:2:15916:15924	4100453	1	True				
ANR	4100483	PrimaryExpression	0		4100453	0					
ANR	4100484	IdentifierDeclStatement	int i = strlen ( input ) ;	504:1:15930:15952	4100453	2	True				
ANR	4100485	IdentifierDecl	i = strlen ( input )		4100453	0					
ANR	4100486	IdentifierDeclType	int		4100453	0					
ANR	4100487	Identifier	i		4100453	1					
ANR	4100488	AssignmentExpression	i = strlen ( input )		4100453	2		=			
ANR	4100489	Identifier	i		4100453	0					
ANR	4100490	CallExpression	strlen ( input )		4100453	1					
ANR	4100491	Callee	strlen		4100453	0					
ANR	4100492	Identifier	strlen		4100453	0					
ANR	4100493	ArgumentList	input		4100453	1					
ANR	4100494	Argument	input		4100453	0					
ANR	4100495	Identifier	input		4100453	0					
ANR	4100496	IdentifierDeclStatement	char * buf = malloc ( i + 2 ) ;	505:1:15955:15981	4100453	3	True				
ANR	4100497	IdentifierDecl	* buf = malloc ( i + 2 )		4100453	0					
ANR	4100498	IdentifierDeclType	char *		4100453	0					
ANR	4100499	Identifier	buf		4100453	1					
ANR	4100500	AssignmentExpression	* buf = malloc ( i + 2 )		4100453	2		=			
ANR	4100501	Identifier	buf		4100453	0					
ANR	4100502	CallExpression	malloc ( i + 2 )		4100453	1					
ANR	4100503	Callee	malloc		4100453	0					
ANR	4100504	Identifier	malloc		4100453	0					
ANR	4100505	ArgumentList	i + 2		4100453	1					
ANR	4100506	Argument	i + 2		4100453	0					
ANR	4100507	AdditiveExpression	i + 2		4100453	0		+			
ANR	4100508	Identifier	i		4100453	0					
ANR	4100509	PrimaryExpression	2		4100453	1					
ANR	4100510	IfStatement	if ( ! buf )		4100453	4					
ANR	4100511	Condition	! buf	506:5:15988:15991	4100453	0	True				
ANR	4100512	UnaryOperationExpression	! buf		4100453	0					
ANR	4100513	UnaryOperator	!		4100453	0					
ANR	4100514	Identifier	buf		4100453	1					
ANR	4100515	CompoundStatement		9:11:176:176	4100453	1					
ANR	4100516	ReturnStatement	return 0 ;	507:2:15998:16006	4100453	0	True				
ANR	4100517	PrimaryExpression	0		4100453	0					
ANR	4100518	ExpressionStatement	* buf = '$'	509:1:16012:16022	4100453	5	True				
ANR	4100519	AssignmentExpression	* buf = '$'		4100453	0		=			
ANR	4100520	UnaryOperationExpression	* buf		4100453	0					
ANR	4100521	UnaryOperator	*		4100453	0					
ANR	4100522	Identifier	buf		4100453	1					
ANR	4100523	PrimaryExpression	'$'		4100453	1					
ANR	4100524	ExpressionStatement	"memcpy ( buf + 1 , input , i + 1 )"	510:1:16057:16087	4100453	6	True				
ANR	4100525	CallExpression	"memcpy ( buf + 1 , input , i + 1 )"		4100453	0					
ANR	4100526	Callee	memcpy		4100453	0					
ANR	4100527	Identifier	memcpy		4100453	0					
ANR	4100528	ArgumentList	buf + 1		4100453	1					
ANR	4100529	Argument	buf + 1		4100453	0					
ANR	4100530	AdditiveExpression	buf + 1		4100453	0		+			
ANR	4100531	Identifier	buf		4100453	0					
ANR	4100532	PrimaryExpression	1		4100453	1					
ANR	4100533	Argument	input		4100453	1					
ANR	4100534	Identifier	input		4100453	0					
ANR	4100535	Argument	i + 1		4100453	2					
ANR	4100536	AdditiveExpression	i + 1		4100453	0		+			
ANR	4100537	Identifier	i		4100453	0					
ANR	4100538	PrimaryExpression	1		4100453	1					
ANR	4100539	IdentifierDeclStatement	"char * q = strchr ( buf , ' ' ) ;"	511:1:16090:16117	4100453	7	True				
ANR	4100540	IdentifierDecl	"* q = strchr ( buf , ' ' )"		4100453	0					
ANR	4100541	IdentifierDeclType	char *		4100453	0					
ANR	4100542	Identifier	q		4100453	1					
ANR	4100543	AssignmentExpression	"* q = strchr ( buf , ' ' )"		4100453	2		=			
ANR	4100544	Identifier	q		4100453	0					
ANR	4100545	CallExpression	"strchr ( buf , ' ' )"		4100453	1					
ANR	4100546	Callee	strchr		4100453	0					
ANR	4100547	Identifier	strchr		4100453	0					
ANR	4100548	ArgumentList	buf		4100453	1					
ANR	4100549	Argument	buf		4100453	0					
ANR	4100550	Identifier	buf		4100453	0					
ANR	4100551	Argument	' '		4100453	1					
ANR	4100552	PrimaryExpression	' '		4100453	0					
ANR	4100553	IdentifierDeclStatement	"char * def = strchr ( buf , '=' ) ;"	512:1:16120:16149	4100453	8	True				
ANR	4100554	IdentifierDecl	"* def = strchr ( buf , '=' )"		4100453	0					
ANR	4100555	IdentifierDeclType	char *		4100453	0					
ANR	4100556	Identifier	def		4100453	1					
ANR	4100557	AssignmentExpression	"* def = strchr ( buf , '=' )"		4100453	2		=			
ANR	4100558	Identifier	def		4100453	0					
ANR	4100559	CallExpression	"strchr ( buf , '=' )"		4100453	1					
ANR	4100560	Callee	strchr		4100453	0					
ANR	4100561	Identifier	strchr		4100453	0					
ANR	4100562	ArgumentList	buf		4100453	1					
ANR	4100563	Argument	buf		4100453	0					
ANR	4100564	Identifier	buf		4100453	0					
ANR	4100565	Argument	'='		4100453	1					
ANR	4100566	PrimaryExpression	'='		4100453	0					
ANR	4100567	IdentifierDeclStatement	"char * desc = strchr ( buf , '?' ) ;"	513:1:16152:16182	4100453	9	True				
ANR	4100568	IdentifierDecl	"* desc = strchr ( buf , '?' )"		4100453	0					
ANR	4100569	IdentifierDeclType	char *		4100453	0					
ANR	4100570	Identifier	desc		4100453	1					
ANR	4100571	AssignmentExpression	"* desc = strchr ( buf , '?' )"		4100453	2		=			
ANR	4100572	Identifier	desc		4100453	0					
ANR	4100573	CallExpression	"strchr ( buf , '?' )"		4100453	1					
ANR	4100574	Callee	strchr		4100453	0					
ANR	4100575	Identifier	strchr		4100453	0					
ANR	4100576	ArgumentList	buf		4100453	1					
ANR	4100577	Argument	buf		4100453	0					
ANR	4100578	Identifier	buf		4100453	0					
ANR	4100579	Argument	'?'		4100453	1					
ANR	4100580	PrimaryExpression	'?'		4100453	0					
ANR	4100581	IfStatement	if ( ( def && q && ( def < q ) ) || ( def && ! q ) )		4100453	10					
ANR	4100582	Condition	( def && q && ( def < q ) ) || ( def && ! q )	516:5:16210:16247	4100453	0	True				
ANR	4100583	OrExpression	( def && q && ( def < q ) ) || ( def && ! q )		4100453	0		||			
ANR	4100584	AndExpression	def && q && ( def < q )		4100453	0		&&			
ANR	4100585	Identifier	def		4100453	0					
ANR	4100586	AndExpression	q && ( def < q )		4100453	1		&&			
ANR	4100587	Identifier	q		4100453	0					
ANR	4100588	RelationalExpression	def < q		4100453	1		<			
ANR	4100589	Identifier	def		4100453	0					
ANR	4100590	Identifier	q		4100453	1					
ANR	4100591	AndExpression	def && ! q		4100453	1		&&			
ANR	4100592	Identifier	def		4100453	0					
ANR	4100593	UnaryOperationExpression	! q		4100453	1					
ANR	4100594	UnaryOperator	!		4100453	0					
ANR	4100595	Identifier	q		4100453	1					
ANR	4100596	CompoundStatement		21:2:450:475	4100453	1					
ANR	4100597	ExpressionStatement	* def ++ = 0	517:2:16254:16264	4100453	0	True				
ANR	4100598	AssignmentExpression	* def ++ = 0		4100453	0		=			
ANR	4100599	UnaryOperationExpression	* def ++		4100453	0					
ANR	4100600	UnaryOperator	*		4100453	0					
ANR	4100601	PostIncDecOperationExpression	def ++		4100453	1					
ANR	4100602	Identifier	def		4100453	0					
ANR	4100603	IncDec	++		4100453	1					
ANR	4100604	PrimaryExpression	0		4100453	1					
ANR	4100605	IdentifierDeclStatement	size_t len = strlen ( def ) ;	518:2:16268:16293	4100453	1	True				
ANR	4100606	IdentifierDecl	len = strlen ( def )		4100453	0					
ANR	4100607	IdentifierDeclType	size_t		4100453	0					
ANR	4100608	Identifier	len		4100453	1					
ANR	4100609	AssignmentExpression	len = strlen ( def )		4100453	2		=			
ANR	4100610	Identifier	len		4100453	0					
ANR	4100611	CallExpression	strlen ( def )		4100453	1					
ANR	4100612	Callee	strlen		4100453	0					
ANR	4100613	Identifier	strlen		4100453	0					
ANR	4100614	ArgumentList	def		4100453	1					
ANR	4100615	Argument	def		4100453	0					
ANR	4100616	Identifier	def		4100453	0					
ANR	4100617	IfStatement	if ( len > 0 && ( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' ) )		4100453	2					
ANR	4100618	Condition	len > 0 && ( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' )	520:6:16323:16375	4100453	0	True				
ANR	4100619	AndExpression	len > 0 && ( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' )		4100453	0		&&			
ANR	4100620	RelationalExpression	len > 0		4100453	0		>			
ANR	4100621	Identifier	len		4100453	0					
ANR	4100622	PrimaryExpression	0		4100453	1					
ANR	4100623	AndExpression	( def [ 0 ] == '\\'' ) && ( def [ len - 1 ] == '\\'' )		4100453	1		&&			
ANR	4100624	EqualityExpression	def [ 0 ] == '\\''		4100453	0		==			
ANR	4100625	ArrayIndexing	def [ 0 ]		4100453	0					
ANR	4100626	Identifier	def		4100453	0					
ANR	4100627	PrimaryExpression	0		4100453	1					
ANR	4100628	PrimaryExpression	'\\''		4100453	1					
ANR	4100629	EqualityExpression	def [ len - 1 ] == '\\''		4100453	1		==			
ANR	4100630	ArrayIndexing	def [ len - 1 ]		4100453	0					
ANR	4100631	Identifier	def		4100453	0					
ANR	4100632	AdditiveExpression	len - 1		4100453	1		-			
ANR	4100633	Identifier	len		4100453	0					
ANR	4100634	PrimaryExpression	1		4100453	1					
ANR	4100635	PrimaryExpression	'\\''		4100453	1					
ANR	4100636	CompoundStatement		23:61:560:560	4100453	1					
ANR	4100637	ExpressionStatement	def [ len - 1 ] = 0x00	521:3:16383:16402	4100453	0	True				
ANR	4100638	AssignmentExpression	def [ len - 1 ] = 0x00		4100453	0		=			
ANR	4100639	ArrayIndexing	def [ len - 1 ]		4100453	0					
ANR	4100640	Identifier	def		4100453	0					
ANR	4100641	AdditiveExpression	len - 1		4100453	1		-			
ANR	4100642	Identifier	len		4100453	0					
ANR	4100643	PrimaryExpression	1		4100453	1					
ANR	4100644	PrimaryExpression	0x00		4100453	1					
ANR	4100645	ExpressionStatement	def ++	522:3:16407:16412	4100453	1	True				
ANR	4100646	PostIncDecOperationExpression	def ++		4100453	0					
ANR	4100647	Identifier	def		4100453	0					
ANR	4100648	IncDec	++		4100453	1					
ANR	4100649	IfStatement	if ( ! q || ( q && q > def ) )		4100453	3					
ANR	4100650	Condition	! q || ( q && q > def )	524:6:16424:16443	4100453	0	True				
ANR	4100651	OrExpression	! q || ( q && q > def )		4100453	0		||			
ANR	4100652	UnaryOperationExpression	! q		4100453	0					
ANR	4100653	UnaryOperator	!		4100453	0					
ANR	4100654	Identifier	q		4100453	1					
ANR	4100655	AndExpression	q && q > def		4100453	1		&&			
ANR	4100656	Identifier	q		4100453	0					
ANR	4100657	RelationalExpression	q > def		4100453	1		>			
ANR	4100658	Identifier	q		4100453	0					
ANR	4100659	Identifier	def		4100453	1					
ANR	4100660	CompoundStatement		27:28:628:628	4100453	1					
ANR	4100661	IfStatement	if ( * def )		4100453	0					
ANR	4100662	Condition	* def	525:7:16455:16458	4100453	0	True				
ANR	4100663	UnaryOperationExpression	* def		4100453	0					
ANR	4100664	UnaryOperator	*		4100453	0					
ANR	4100665	Identifier	def		4100453	1					
ANR	4100666	CompoundStatement		28:13:643:643	4100453	1					
ANR	4100667	IfStatement	"if ( ! strcmp ( def , ""-"" ) )"		4100453	0					
ANR	4100668	Condition	"! strcmp ( def , ""-"" )"	526:8:16471:16488	4100453	0	True				
ANR	4100669	UnaryOperationExpression	"! strcmp ( def , ""-"" )"		4100453	0					
ANR	4100670	UnaryOperator	!		4100453	0					
ANR	4100671	CallExpression	"strcmp ( def , ""-"" )"		4100453	1					
ANR	4100672	Callee	strcmp		4100453	0					
ANR	4100673	Identifier	strcmp		4100453	0					
ANR	4100674	ArgumentList	def		4100453	1					
ANR	4100675	Argument	def		4100453	0					
ANR	4100676	Identifier	def		4100453	0					
ANR	4100677	Argument	"""-"""		4100453	1					
ANR	4100678	PrimaryExpression	"""-"""		4100453	0					
ANR	4100679	CompoundStatement		31:5:733:766	4100453	1					
ANR	4100680	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , buf , 0 ) ;"	527:5:16498:16544	4100453	0	True				
ANR	4100681	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	0					
ANR	4100682	IdentifierDeclType	char *		4100453	0					
ANR	4100683	Identifier	v		4100453	1					
ANR	4100684	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	2		=			
ANR	4100685	Identifier	v		4100453	0					
ANR	4100686	CallExpression	"r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	1					
ANR	4100687	Callee	r_cmd_alias_get		4100453	0					
ANR	4100688	Identifier	r_cmd_alias_get		4100453	0					
ANR	4100689	ArgumentList	core -> rcmd		4100453	1					
ANR	4100690	Argument	core -> rcmd		4100453	0					
ANR	4100691	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100692	Identifier	core		4100453	0					
ANR	4100693	Identifier	rcmd		4100453	1					
ANR	4100694	Argument	buf		4100453	1					
ANR	4100695	Identifier	buf		4100453	0					
ANR	4100696	Argument	0		4100453	2					
ANR	4100697	PrimaryExpression	0		4100453	0					
ANR	4100698	IdentifierDeclStatement	"char * n = r_cons_editor ( NULL , v ) ;"	528:5:16551:16584	4100453	1	True				
ANR	4100699	IdentifierDecl	"* n = r_cons_editor ( NULL , v )"		4100453	0					
ANR	4100700	IdentifierDeclType	char *		4100453	0					
ANR	4100701	Identifier	n		4100453	1					
ANR	4100702	AssignmentExpression	"* n = r_cons_editor ( NULL , v )"		4100453	2		=			
ANR	4100703	Identifier	n		4100453	0					
ANR	4100704	CallExpression	"r_cons_editor ( NULL , v )"		4100453	1					
ANR	4100705	Callee	r_cons_editor		4100453	0					
ANR	4100706	Identifier	r_cons_editor		4100453	0					
ANR	4100707	ArgumentList	NULL		4100453	1					
ANR	4100708	Argument	NULL		4100453	0					
ANR	4100709	Identifier	NULL		4100453	0					
ANR	4100710	Argument	v		4100453	1					
ANR	4100711	Identifier	v		4100453	0					
ANR	4100712	IfStatement	if ( n )		4100453	2					
ANR	4100713	Condition	n	529:9:16595:16595	4100453	0	True				
ANR	4100714	Identifier	n		4100453	0					
ANR	4100715	CompoundStatement		32:12:780:780	4100453	1					
ANR	4100716	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , buf , n , 0 )"	530:6:16606:16645	4100453	0	True				
ANR	4100717	CallExpression	"r_cmd_alias_set ( core -> rcmd , buf , n , 0 )"		4100453	0					
ANR	4100718	Callee	r_cmd_alias_set		4100453	0					
ANR	4100719	Identifier	r_cmd_alias_set		4100453	0					
ANR	4100720	ArgumentList	core -> rcmd		4100453	1					
ANR	4100721	Argument	core -> rcmd		4100453	0					
ANR	4100722	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100723	Identifier	core		4100453	0					
ANR	4100724	Identifier	rcmd		4100453	1					
ANR	4100725	Argument	buf		4100453	1					
ANR	4100726	Identifier	buf		4100453	0					
ANR	4100727	Argument	n		4100453	2					
ANR	4100728	Identifier	n		4100453	0					
ANR	4100729	Argument	0		4100453	3					
ANR	4100730	PrimaryExpression	0		4100453	0					
ANR	4100731	ExpressionStatement	free ( n )	531:6:16653:16661	4100453	1	True				
ANR	4100732	CallExpression	free ( n )		4100453	0					
ANR	4100733	Callee	free		4100453	0					
ANR	4100734	Identifier	free		4100453	0					
ANR	4100735	ArgumentList	n		4100453	1					
ANR	4100736	Argument	n		4100453	0					
ANR	4100737	Identifier	n		4100453	0					
ANR	4100738	ElseStatement	else		4100453	0					
ANR	4100739	CompoundStatement		36:11:863:863	4100453	0					
ANR	4100740	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , buf , def , 0 )"	534:5:16688:16729	4100453	0	True				
ANR	4100741	CallExpression	"r_cmd_alias_set ( core -> rcmd , buf , def , 0 )"		4100453	0					
ANR	4100742	Callee	r_cmd_alias_set		4100453	0					
ANR	4100743	Identifier	r_cmd_alias_set		4100453	0					
ANR	4100744	ArgumentList	core -> rcmd		4100453	1					
ANR	4100745	Argument	core -> rcmd		4100453	0					
ANR	4100746	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100747	Identifier	core		4100453	0					
ANR	4100748	Identifier	rcmd		4100453	1					
ANR	4100749	Argument	buf		4100453	1					
ANR	4100750	Identifier	buf		4100453	0					
ANR	4100751	Argument	def		4100453	2					
ANR	4100752	Identifier	def		4100453	0					
ANR	4100753	Argument	0		4100453	3					
ANR	4100754	PrimaryExpression	0		4100453	0					
ANR	4100755	ElseStatement	else		4100453	0					
ANR	4100756	CompoundStatement		39:10:929:929	4100453	0					
ANR	4100757	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , buf )"	537:4:16753:16786	4100453	0	True				
ANR	4100758	CallExpression	"r_cmd_alias_del ( core -> rcmd , buf )"		4100453	0					
ANR	4100759	Callee	r_cmd_alias_del		4100453	0					
ANR	4100760	Identifier	r_cmd_alias_del		4100453	0					
ANR	4100761	ArgumentList	core -> rcmd		4100453	1					
ANR	4100762	Argument	core -> rcmd		4100453	0					
ANR	4100763	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100764	Identifier	core		4100453	0					
ANR	4100765	Identifier	rcmd		4100453	1					
ANR	4100766	Argument	buf		4100453	1					
ANR	4100767	Identifier	buf		4100453	0					
ANR	4100768	ElseStatement	else		4100453	0					
ANR	4100769	IfStatement	if ( desc && ! q )		4100453	0					
ANR	4100770	Condition	desc && ! q	541:12:16839:16848	4100453	0	True				
ANR	4100771	AndExpression	desc && ! q		4100453	0		&&			
ANR	4100772	Identifier	desc		4100453	0					
ANR	4100773	UnaryOperationExpression	! q		4100453	1					
ANR	4100774	UnaryOperator	!		4100453	0					
ANR	4100775	Identifier	q		4100453	1					
ANR	4100776	CompoundStatement		46:2:1050:1096	4100453	1					
ANR	4100777	ExpressionStatement	* desc = 0	542:2:16855:16864	4100453	0	True				
ANR	4100778	AssignmentExpression	* desc = 0		4100453	0		=			
ANR	4100779	UnaryOperationExpression	* desc		4100453	0					
ANR	4100780	UnaryOperator	*		4100453	0					
ANR	4100781	Identifier	desc		4100453	1					
ANR	4100782	PrimaryExpression	0		4100453	1					
ANR	4100783	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , buf , 0 ) ;"	543:2:16868:16914	4100453	1	True				
ANR	4100784	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	0					
ANR	4100785	IdentifierDeclType	char *		4100453	0					
ANR	4100786	Identifier	v		4100453	1					
ANR	4100787	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	2		=			
ANR	4100788	Identifier	v		4100453	0					
ANR	4100789	CallExpression	"r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	1					
ANR	4100790	Callee	r_cmd_alias_get		4100453	0					
ANR	4100791	Identifier	r_cmd_alias_get		4100453	0					
ANR	4100792	ArgumentList	core -> rcmd		4100453	1					
ANR	4100793	Argument	core -> rcmd		4100453	0					
ANR	4100794	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100795	Identifier	core		4100453	0					
ANR	4100796	Identifier	rcmd		4100453	1					
ANR	4100797	Argument	buf		4100453	1					
ANR	4100798	Identifier	buf		4100453	0					
ANR	4100799	Argument	0		4100453	2					
ANR	4100800	PrimaryExpression	0		4100453	0					
ANR	4100801	IfStatement	if ( v )		4100453	2					
ANR	4100802	Condition	v	544:6:16922:16922	4100453	0	True				
ANR	4100803	Identifier	v		4100453	0					
ANR	4100804	CompoundStatement		47:9:1107:1107	4100453	1					
ANR	4100805	ExpressionStatement	r_cons_println ( v )	545:3:16930:16948	4100453	0	True				
ANR	4100806	CallExpression	r_cons_println ( v )		4100453	0					
ANR	4100807	Callee	r_cons_println		4100453	0					
ANR	4100808	Identifier	r_cons_println		4100453	0					
ANR	4100809	ArgumentList	v		4100453	1					
ANR	4100810	Argument	v		4100453	0					
ANR	4100811	Identifier	v		4100453	0					
ANR	4100812	ExpressionStatement	free ( buf )	546:3:16953:16963	4100453	1	True				
ANR	4100813	CallExpression	free ( buf )		4100453	0					
ANR	4100814	Callee	free		4100453	0					
ANR	4100815	Identifier	free		4100453	0					
ANR	4100816	ArgumentList	buf		4100453	1					
ANR	4100817	Argument	buf		4100453	0					
ANR	4100818	Identifier	buf		4100453	0					
ANR	4100819	ReturnStatement	return 1 ;	547:3:16968:16976	4100453	2	True				
ANR	4100820	PrimaryExpression	1		4100453	0					
ANR	4100821	ElseStatement	else		4100453	0					
ANR	4100822	CompoundStatement		51:9:1169:1169	4100453	0					
ANR	4100823	ExpressionStatement	"eprintf ( ""unknown key '%s'\\n"" , buf )"	549:3:16992:17027	4100453	0	True				
ANR	4100824	CallExpression	"eprintf ( ""unknown key '%s'\\n"" , buf )"		4100453	0					
ANR	4100825	Callee	eprintf		4100453	0					
ANR	4100826	Identifier	eprintf		4100453	0					
ANR	4100827	ArgumentList	"""unknown key '%s'\\n"""		4100453	1					
ANR	4100828	Argument	"""unknown key '%s'\\n"""		4100453	0					
ANR	4100829	PrimaryExpression	"""unknown key '%s'\\n"""		4100453	0					
ANR	4100830	Argument	buf		4100453	1					
ANR	4100831	Identifier	buf		4100453	0					
ANR	4100832	ElseStatement	else		4100453	0					
ANR	4100833	IfStatement	if ( buf [ 1 ] == '*' )		4100453	0					
ANR	4100834	Condition	buf [ 1 ] == '*'	551:12:17045:17057	4100453	0	True				
ANR	4100835	EqualityExpression	buf [ 1 ] == '*'		4100453	0		==			
ANR	4100836	ArrayIndexing	buf [ 1 ]		4100453	0					
ANR	4100837	Identifier	buf		4100453	0					
ANR	4100838	PrimaryExpression	1		4100453	1					
ANR	4100839	PrimaryExpression	'*'		4100453	1					
ANR	4100840	CompoundStatement		57:2:1287:1338	4100453	1					
ANR	4100841	IdentifierDeclStatement	"int i , count = 0 ;"	553:2:17085:17101	4100453	0	True				
ANR	4100842	IdentifierDecl	i		4100453	0					
ANR	4100843	IdentifierDeclType	int		4100453	0					
ANR	4100844	Identifier	i		4100453	1					
ANR	4100845	IdentifierDecl	count = 0		4100453	1					
ANR	4100846	IdentifierDeclType	int		4100453	0					
ANR	4100847	Identifier	count		4100453	1					
ANR	4100848	AssignmentExpression	count = 0		4100453	2		=			
ANR	4100849	Identifier	count		4100453	0					
ANR	4100850	PrimaryExpression	0		4100453	1					
ANR	4100851	IdentifierDeclStatement	"char * * keys = r_cmd_alias_keys ( core -> rcmd , & count ) ;"	554:2:17105:17156	4100453	1	True				
ANR	4100852	IdentifierDecl	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		4100453	0					
ANR	4100853	IdentifierDeclType	char * *		4100453	0					
ANR	4100854	Identifier	keys		4100453	1					
ANR	4100855	AssignmentExpression	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		4100453	2		=			
ANR	4100856	Identifier	keys		4100453	0					
ANR	4100857	CallExpression	"r_cmd_alias_keys ( core -> rcmd , & count )"		4100453	1					
ANR	4100858	Callee	r_cmd_alias_keys		4100453	0					
ANR	4100859	Identifier	r_cmd_alias_keys		4100453	0					
ANR	4100860	ArgumentList	core -> rcmd		4100453	1					
ANR	4100861	Argument	core -> rcmd		4100453	0					
ANR	4100862	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100863	Identifier	core		4100453	0					
ANR	4100864	Identifier	rcmd		4100453	1					
ANR	4100865	Argument	& count		4100453	1					
ANR	4100866	UnaryOperationExpression	& count		4100453	0					
ANR	4100867	UnaryOperator	&		4100453	0					
ANR	4100868	Identifier	count		4100453	1					
ANR	4100869	ForStatement	for ( i = 0 ; i < count ; i ++ )		4100453	2					
ANR	4100870	ForInit	i = 0 ;	555:7:17165:17170	4100453	0	True				
ANR	4100871	AssignmentExpression	i = 0		4100453	0		=			
ANR	4100872	Identifier	i		4100453	0					
ANR	4100873	PrimaryExpression	0		4100453	1					
ANR	4100874	Condition	i < count	555:14:17172:17180	4100453	1	True				
ANR	4100875	RelationalExpression	i < count		4100453	0		<			
ANR	4100876	Identifier	i		4100453	0					
ANR	4100877	Identifier	count		4100453	1					
ANR	4100878	PostIncDecOperationExpression	i ++	555:25:17183:17185	4100453	2	True				
ANR	4100879	Identifier	i		4100453	0					
ANR	4100880	IncDec	++		4100453	1					
ANR	4100881	CompoundStatement		60:3:1430:1467	4100453	3					
ANR	4100882	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 ) ;"	556:3:17193:17243	4100453	0	True				
ANR	4100883	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 )"		4100453	0					
ANR	4100884	IdentifierDeclType	char *		4100453	0					
ANR	4100885	Identifier	v		4100453	1					
ANR	4100886	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 )"		4100453	2		=			
ANR	4100887	Identifier	v		4100453	0					
ANR	4100888	CallExpression	"r_cmd_alias_get ( core -> rcmd , keys [ i ] , 0 )"		4100453	1					
ANR	4100889	Callee	r_cmd_alias_get		4100453	0					
ANR	4100890	Identifier	r_cmd_alias_get		4100453	0					
ANR	4100891	ArgumentList	core -> rcmd		4100453	1					
ANR	4100892	Argument	core -> rcmd		4100453	0					
ANR	4100893	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100894	Identifier	core		4100453	0					
ANR	4100895	Identifier	rcmd		4100453	1					
ANR	4100896	Argument	keys [ i ]		4100453	1					
ANR	4100897	ArrayIndexing	keys [ i ]		4100453	0					
ANR	4100898	Identifier	keys		4100453	0					
ANR	4100899	Identifier	i		4100453	1					
ANR	4100900	Argument	0		4100453	2					
ANR	4100901	PrimaryExpression	0		4100453	0					
ANR	4100902	IdentifierDeclStatement	"char * q = r_base64_encode_dyn ( v , - 1 ) ;"	557:3:17248:17285	4100453	1	True				
ANR	4100903	IdentifierDecl	"* q = r_base64_encode_dyn ( v , - 1 )"		4100453	0					
ANR	4100904	IdentifierDeclType	char *		4100453	0					
ANR	4100905	Identifier	q		4100453	1					
ANR	4100906	AssignmentExpression	"* q = r_base64_encode_dyn ( v , - 1 )"		4100453	2		=			
ANR	4100907	Identifier	q		4100453	0					
ANR	4100908	CallExpression	"r_base64_encode_dyn ( v , - 1 )"		4100453	1					
ANR	4100909	Callee	r_base64_encode_dyn		4100453	0					
ANR	4100910	Identifier	r_base64_encode_dyn		4100453	0					
ANR	4100911	ArgumentList	v		4100453	1					
ANR	4100912	Argument	v		4100453	0					
ANR	4100913	Identifier	v		4100453	0					
ANR	4100914	Argument	- 1		4100453	1					
ANR	4100915	UnaryOperationExpression	- 1		4100453	0					
ANR	4100916	UnaryOperator	-		4100453	0					
ANR	4100917	PrimaryExpression	1		4100453	1					
ANR	4100918	IfStatement	if ( buf [ 2 ] == '*' )		4100453	2					
ANR	4100919	Condition	buf [ 2 ] == '*'	558:7:17294:17306	4100453	0	True				
ANR	4100920	EqualityExpression	buf [ 2 ] == '*'		4100453	0		==			
ANR	4100921	ArrayIndexing	buf [ 2 ]		4100453	0					
ANR	4100922	Identifier	buf		4100453	0					
ANR	4100923	PrimaryExpression	2		4100453	1					
ANR	4100924	PrimaryExpression	'*'		4100453	1					
ANR	4100925	CompoundStatement		61:22:1491:1491	4100453	1					
ANR	4100926	ExpressionStatement	"r_cons_printf ( ""%s=%s\\n"" , keys [ i ] , v )"	559:4:17315:17352	4100453	0	True				
ANR	4100927	CallExpression	"r_cons_printf ( ""%s=%s\\n"" , keys [ i ] , v )"		4100453	0					
ANR	4100928	Callee	r_cons_printf		4100453	0					
ANR	4100929	Identifier	r_cons_printf		4100453	0					
ANR	4100930	ArgumentList	"""%s=%s\\n"""		4100453	1					
ANR	4100931	Argument	"""%s=%s\\n"""		4100453	0					
ANR	4100932	PrimaryExpression	"""%s=%s\\n"""		4100453	0					
ANR	4100933	Argument	keys [ i ]		4100453	1					
ANR	4100934	ArrayIndexing	keys [ i ]		4100453	0					
ANR	4100935	Identifier	keys		4100453	0					
ANR	4100936	Identifier	i		4100453	1					
ANR	4100937	Argument	v		4100453	2					
ANR	4100938	Identifier	v		4100453	0					
ANR	4100939	ElseStatement	else		4100453	0					
ANR	4100940	CompoundStatement		63:10:1546:1546	4100453	0					
ANR	4100941	ExpressionStatement	"r_cons_printf ( ""%s=base64:%s\\n"" , keys [ i ] , q )"	561:4:17370:17414	4100453	0	True				
ANR	4100942	CallExpression	"r_cons_printf ( ""%s=base64:%s\\n"" , keys [ i ] , q )"		4100453	0					
ANR	4100943	Callee	r_cons_printf		4100453	0					
ANR	4100944	Identifier	r_cons_printf		4100453	0					
ANR	4100945	ArgumentList	"""%s=base64:%s\\n"""		4100453	1					
ANR	4100946	Argument	"""%s=base64:%s\\n"""		4100453	0					
ANR	4100947	PrimaryExpression	"""%s=base64:%s\\n"""		4100453	0					
ANR	4100948	Argument	keys [ i ]		4100453	1					
ANR	4100949	ArrayIndexing	keys [ i ]		4100453	0					
ANR	4100950	Identifier	keys		4100453	0					
ANR	4100951	Identifier	i		4100453	1					
ANR	4100952	Argument	q		4100453	2					
ANR	4100953	Identifier	q		4100453	0					
ANR	4100954	ExpressionStatement	free ( q )	563:3:17424:17432	4100453	3	True				
ANR	4100955	CallExpression	free ( q )		4100453	0					
ANR	4100956	Callee	free		4100453	0					
ANR	4100957	Identifier	free		4100453	0					
ANR	4100958	ArgumentList	q		4100453	1					
ANR	4100959	Argument	q		4100453	0					
ANR	4100960	Identifier	q		4100453	0					
ANR	4100961	ElseStatement	else		4100453	0					
ANR	4100962	IfStatement	if ( ! buf [ 1 ] )		4100453	0					
ANR	4100963	Condition	! buf [ 1 ]	565:12:17450:17456	4100453	0	True				
ANR	4100964	UnaryOperationExpression	! buf [ 1 ]		4100453	0					
ANR	4100965	UnaryOperator	!		4100453	0					
ANR	4100966	ArrayIndexing	buf [ 1 ]		4100453	1					
ANR	4100967	Identifier	buf		4100453	0					
ANR	4100968	PrimaryExpression	1		4100453	1					
ANR	4100969	CompoundStatement		70:2:1665:1716	4100453	1					
ANR	4100970	IdentifierDeclStatement	"int i , count = 0 ;"	566:2:17463:17479	4100453	0	True				
ANR	4100971	IdentifierDecl	i		4100453	0					
ANR	4100972	IdentifierDeclType	int		4100453	0					
ANR	4100973	Identifier	i		4100453	1					
ANR	4100974	IdentifierDecl	count = 0		4100453	1					
ANR	4100975	IdentifierDeclType	int		4100453	0					
ANR	4100976	Identifier	count		4100453	1					
ANR	4100977	AssignmentExpression	count = 0		4100453	2		=			
ANR	4100978	Identifier	count		4100453	0					
ANR	4100979	PrimaryExpression	0		4100453	1					
ANR	4100980	IdentifierDeclStatement	"char * * keys = r_cmd_alias_keys ( core -> rcmd , & count ) ;"	567:2:17483:17534	4100453	1	True				
ANR	4100981	IdentifierDecl	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		4100453	0					
ANR	4100982	IdentifierDeclType	char * *		4100453	0					
ANR	4100983	Identifier	keys		4100453	1					
ANR	4100984	AssignmentExpression	"* * keys = r_cmd_alias_keys ( core -> rcmd , & count )"		4100453	2		=			
ANR	4100985	Identifier	keys		4100453	0					
ANR	4100986	CallExpression	"r_cmd_alias_keys ( core -> rcmd , & count )"		4100453	1					
ANR	4100987	Callee	r_cmd_alias_keys		4100453	0					
ANR	4100988	Identifier	r_cmd_alias_keys		4100453	0					
ANR	4100989	ArgumentList	core -> rcmd		4100453	1					
ANR	4100990	Argument	core -> rcmd		4100453	0					
ANR	4100991	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4100992	Identifier	core		4100453	0					
ANR	4100993	Identifier	rcmd		4100453	1					
ANR	4100994	Argument	& count		4100453	1					
ANR	4100995	UnaryOperationExpression	& count		4100453	0					
ANR	4100996	UnaryOperator	&		4100453	0					
ANR	4100997	Identifier	count		4100453	1					
ANR	4100998	ForStatement	for ( i = 0 ; i < count ; i ++ )		4100453	2					
ANR	4100999	ForInit	i = 0 ;	568:7:17543:17548	4100453	0	True				
ANR	4101000	AssignmentExpression	i = 0		4100453	0		=			
ANR	4101001	Identifier	i		4100453	0					
ANR	4101002	PrimaryExpression	0		4100453	1					
ANR	4101003	Condition	i < count	568:14:17550:17558	4100453	1	True				
ANR	4101004	RelationalExpression	i < count		4100453	0		<			
ANR	4101005	Identifier	i		4100453	0					
ANR	4101006	Identifier	count		4100453	1					
ANR	4101007	PostIncDecOperationExpression	i ++	568:25:17561:17563	4100453	2	True				
ANR	4101008	Identifier	i		4100453	0					
ANR	4101009	IncDec	++		4100453	1					
ANR	4101010	CompoundStatement		71:30:1748:1748	4100453	3					
ANR	4101011	ExpressionStatement	r_cons_println ( keys [ i ] )	569:3:17571:17595	4100453	0	True				
ANR	4101012	CallExpression	r_cons_println ( keys [ i ] )		4100453	0					
ANR	4101013	Callee	r_cons_println		4100453	0					
ANR	4101014	Identifier	r_cons_println		4100453	0					
ANR	4101015	ArgumentList	keys [ i ]		4100453	1					
ANR	4101016	Argument	keys [ i ]		4100453	0					
ANR	4101017	ArrayIndexing	keys [ i ]		4100453	0					
ANR	4101018	Identifier	keys		4100453	0					
ANR	4101019	Identifier	i		4100453	1					
ANR	4101020	ElseStatement	else		4100453	0					
ANR	4101021	CompoundStatement		79:2:1843:1889	4100453	0					
ANR	4101022	IfStatement	if ( q )		4100453	0					
ANR	4101023	Condition	q	573:6:17639:17639	4100453	0	True				
ANR	4101024	Identifier	q		4100453	0					
ANR	4101025	CompoundStatement		76:9:1824:1824	4100453	1					
ANR	4101026	ExpressionStatement	* q = 0	574:3:17647:17653	4100453	0	True				
ANR	4101027	AssignmentExpression	* q = 0		4100453	0		=			
ANR	4101028	UnaryOperationExpression	* q		4100453	0					
ANR	4101029	UnaryOperator	*		4100453	0					
ANR	4101030	Identifier	q		4100453	1					
ANR	4101031	PrimaryExpression	0		4100453	1					
ANR	4101032	IdentifierDeclStatement	"char * v = r_cmd_alias_get ( core -> rcmd , buf , 0 ) ;"	576:2:17661:17707	4100453	1	True				
ANR	4101033	IdentifierDecl	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	0					
ANR	4101034	IdentifierDeclType	char *		4100453	0					
ANR	4101035	Identifier	v		4100453	1					
ANR	4101036	AssignmentExpression	"* v = r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	2		=			
ANR	4101037	Identifier	v		4100453	0					
ANR	4101038	CallExpression	"r_cmd_alias_get ( core -> rcmd , buf , 0 )"		4100453	1					
ANR	4101039	Callee	r_cmd_alias_get		4100453	0					
ANR	4101040	Identifier	r_cmd_alias_get		4100453	0					
ANR	4101041	ArgumentList	core -> rcmd		4100453	1					
ANR	4101042	Argument	core -> rcmd		4100453	0					
ANR	4101043	PtrMemberAccess	core -> rcmd		4100453	0					
ANR	4101044	Identifier	core		4100453	0					
ANR	4101045	Identifier	rcmd		4100453	1					
ANR	4101046	Argument	buf		4100453	1					
ANR	4101047	Identifier	buf		4100453	0					
ANR	4101048	Argument	0		4100453	2					
ANR	4101049	PrimaryExpression	0		4100453	0					
ANR	4101050	IfStatement	if ( v )		4100453	2					
ANR	4101051	Condition	v	577:6:17715:17715	4100453	0	True				
ANR	4101052	Identifier	v		4100453	0					
ANR	4101053	CompoundStatement		80:9:1900:1900	4100453	1					
ANR	4101054	IfStatement	if ( * v == '$' )		4100453	0					
ANR	4101055	Condition	* v == '$'	578:7:17727:17735	4100453	0	True				
ANR	4101056	EqualityExpression	* v == '$'		4100453	0		==			
ANR	4101057	UnaryOperationExpression	* v		4100453	0					
ANR	4101058	UnaryOperator	*		4100453	0					
ANR	4101059	Identifier	v		4100453	1					
ANR	4101060	PrimaryExpression	'$'		4100453	1					
ANR	4101061	CompoundStatement		81:18:1920:1920	4100453	1					
ANR	4101062	ExpressionStatement	r_cons_strcat ( v + 1 )	579:4:17744:17765	4100453	0	True				
ANR	4101063	CallExpression	r_cons_strcat ( v + 1 )		4100453	0					
ANR	4101064	Callee	r_cons_strcat		4100453	0					
ANR	4101065	Identifier	r_cons_strcat		4100453	0					
ANR	4101066	ArgumentList	v + 1		4100453	1					
ANR	4101067	Argument	v + 1		4100453	0					
ANR	4101068	AdditiveExpression	v + 1		4100453	0		+			
ANR	4101069	Identifier	v		4100453	0					
ANR	4101070	PrimaryExpression	1		4100453	1					
ANR	4101071	ExpressionStatement	r_cons_newline ( )	580:4:17771:17788	4100453	1	True				
ANR	4101072	CallExpression	r_cons_newline ( )		4100453	0					
ANR	4101073	Callee	r_cons_newline		4100453	0					
ANR	4101074	Identifier	r_cons_newline		4100453	0					
ANR	4101075	ArgumentList			4100453	1					
ANR	4101076	ElseStatement	else		4100453	0					
ANR	4101077	IfStatement	if ( q )		4100453	0					
ANR	4101078	Condition	q	581:14:17804:17804	4100453	0	True				
ANR	4101079	Identifier	q		4100453	0					
ANR	4101080	CompoundStatement		85:4:1995:2037	4100453	1					
ANR	4101081	IdentifierDeclStatement	"char * out = r_str_newf ( ""%s %s"" , v , q + 1 ) ;"	582:4:17813:17855	4100453	0	True				
ANR	4101082	IdentifierDecl	"* out = r_str_newf ( ""%s %s"" , v , q + 1 )"		4100453	0					
ANR	4101083	IdentifierDeclType	char *		4100453	0					
ANR	4101084	Identifier	out		4100453	1					
ANR	4101085	AssignmentExpression	"* out = r_str_newf ( ""%s %s"" , v , q + 1 )"		4100453	2		=			
ANR	4101086	Identifier	out		4100453	0					
ANR	4101087	CallExpression	"r_str_newf ( ""%s %s"" , v , q + 1 )"		4100453	1					
ANR	4101088	Callee	r_str_newf		4100453	0					
ANR	4101089	Identifier	r_str_newf		4100453	0					
ANR	4101090	ArgumentList	"""%s %s"""		4100453	1					
ANR	4101091	Argument	"""%s %s"""		4100453	0					
ANR	4101092	PrimaryExpression	"""%s %s"""		4100453	0					
ANR	4101093	Argument	v		4100453	1					
ANR	4101094	Identifier	v		4100453	0					
ANR	4101095	Argument	q + 1		4100453	2					
ANR	4101096	AdditiveExpression	q + 1		4100453	0		+			
ANR	4101097	Identifier	q		4100453	0					
ANR	4101098	PrimaryExpression	1		4100453	1					
ANR	4101099	ExpressionStatement	"r_core_cmd0 ( core , out )"	583:4:17861:17884	4100453	1	True				
ANR	4101100	CallExpression	"r_core_cmd0 ( core , out )"		4100453	0					
ANR	4101101	Callee	r_core_cmd0		4100453	0					
ANR	4101102	Identifier	r_core_cmd0		4100453	0					
ANR	4101103	ArgumentList	core		4100453	1					
ANR	4101104	Argument	core		4100453	0					
ANR	4101105	Identifier	core		4100453	0					
ANR	4101106	Argument	out		4100453	1					
ANR	4101107	Identifier	out		4100453	0					
ANR	4101108	ExpressionStatement	free ( out )	584:4:17890:17900	4100453	2	True				
ANR	4101109	CallExpression	free ( out )		4100453	0					
ANR	4101110	Callee	free		4100453	0					
ANR	4101111	Identifier	free		4100453	0					
ANR	4101112	ArgumentList	out		4100453	1					
ANR	4101113	Argument	out		4100453	0					
ANR	4101114	Identifier	out		4100453	0					
ANR	4101115	ElseStatement	else		4100453	0					
ANR	4101116	CompoundStatement		88:10:2094:2094	4100453	0					
ANR	4101117	ExpressionStatement	"r_core_cmd0 ( core , v )"	586:4:17918:17939	4100453	0	True				
ANR	4101118	CallExpression	"r_core_cmd0 ( core , v )"		4100453	0					
ANR	4101119	Callee	r_core_cmd0		4100453	0					
ANR	4101120	Identifier	r_core_cmd0		4100453	0					
ANR	4101121	ArgumentList	core		4100453	1					
ANR	4101122	Argument	core		4100453	0					
ANR	4101123	Identifier	core		4100453	0					
ANR	4101124	Argument	v		4100453	1					
ANR	4101125	Identifier	v		4100453	0					
ANR	4101126	ElseStatement	else		4100453	0					
ANR	4101127	CompoundStatement		91:9:2137:2137	4100453	0					
ANR	4101128	ExpressionStatement	"eprintf ( ""unknown key '%s'\\n"" , buf )"	589:3:17960:17995	4100453	0	True				
ANR	4101129	CallExpression	"eprintf ( ""unknown key '%s'\\n"" , buf )"		4100453	0					
ANR	4101130	Callee	eprintf		4100453	0					
ANR	4101131	Identifier	eprintf		4100453	0					
ANR	4101132	ArgumentList	"""unknown key '%s'\\n"""		4100453	1					
ANR	4101133	Argument	"""unknown key '%s'\\n"""		4100453	0					
ANR	4101134	PrimaryExpression	"""unknown key '%s'\\n"""		4100453	0					
ANR	4101135	Argument	buf		4100453	1					
ANR	4101136	Identifier	buf		4100453	0					
ANR	4101137	ExpressionStatement	free ( buf )	592:1:18005:18015	4100453	11	True				
ANR	4101138	CallExpression	free ( buf )		4100453	0					
ANR	4101139	Callee	free		4100453	0					
ANR	4101140	Identifier	free		4100453	0					
ANR	4101141	ArgumentList	buf		4100453	1					
ANR	4101142	Argument	buf		4100453	0					
ANR	4101143	Identifier	buf		4100453	0					
ANR	4101144	ReturnStatement	return 0 ;	593:1:18018:18026	4100453	12	True				
ANR	4101145	PrimaryExpression	0		4100453	0					
ANR	4101146	ReturnType	static int		4100453	1					
ANR	4101147	Identifier	cmd_alias		4100453	2					
ANR	4101148	ParameterList	"void * data , const char * input"		4100453	3					
ANR	4101149	Parameter	void * data	498:21:15786:15795	4100453	0	True				
ANR	4101150	ParameterType	void *		4100453	0					
ANR	4101151	Identifier	data		4100453	1					
ANR	4101152	Parameter	const char * input	498:33:15798:15814	4100453	1	True				
ANR	4101153	ParameterType	const char *		4100453	0					
ANR	4101154	Identifier	input		4100453	1					
ANR	4101155	CFGEntryNode	ENTRY		4100453		True				
ANR	4101156	CFGExitNode	EXIT		4100453		True				
ANR	4101157	Symbol	* v		4100453						
ANR	4101158	Symbol	data		4100453						
ANR	4101159	Symbol	def		4100453						
ANR	4101160	Symbol	keys		4100453						
ANR	4101161	Symbol	* input		4100453						
ANR	4101162	Symbol	* core		4100453						
ANR	4101163	Symbol	strchr		4100453						
ANR	4101164	Symbol	* def ++		4100453						
ANR	4101165	Symbol	* keys		4100453						
ANR	4101166	Symbol	r_str_newf		4100453						
ANR	4101167	Symbol	out		4100453						
ANR	4101168	Symbol	* def		4100453						
ANR	4101169	Symbol	strlen		4100453						
ANR	4101170	Symbol	r_base64_encode_dyn		4100453						
ANR	4101171	Symbol	len		4100453						
ANR	4101172	Symbol	* desc		4100453						
ANR	4101173	Symbol	r_cmd_alias_get		4100453						
ANR	4101174	Symbol	strcmp		4100453						
ANR	4101175	Symbol	malloc		4100453						
ANR	4101176	Symbol	* buf		4100453						
ANR	4101177	Symbol	NULL		4100453						
ANR	4101178	Symbol	core -> rcmd		4100453						
ANR	4101179	Symbol	count		4100453						
ANR	4101180	Symbol	i		4100453						
ANR	4101181	Symbol	n		4100453						
ANR	4101182	Symbol	input		4100453						
ANR	4101183	Symbol	core		4100453						
ANR	4101184	Symbol	q		4100453						
ANR	4101185	Symbol	buf		4100453						
ANR	4101186	Symbol	r_cmd_alias_keys		4100453						
ANR	4101187	Symbol	* i		4100453						
ANR	4101188	Symbol	v		4100453						
ANR	4101189	Symbol	r_cons_editor		4100453						
ANR	4101190	Symbol	help_msg_dollar		4100453						
ANR	4101191	Symbol	& count		4100453						
ANR	4101192	Symbol	* q		4100453						
ANR	4101193	Symbol	desc		4100453						
ANR	4101194	Symbol	* len		4100453						
ANR	4101195	Function	getArg	596:0:18031:18135							
ANR	4101196	FunctionDef	"getArg (char ch , int def)"		4101195	0					
ANR	4101197	CompoundStatement		596:36:18067:18135	4101195	0					
ANR	4101198	SwitchStatement	switch ( ch )		4101195	0					
ANR	4101199	Condition	ch	597:9:18078:18079	4101195	0	True				
ANR	4101200	Identifier	ch		4101195	0					
ANR	4101201	CompoundStatement		2:13:14:14	4101195	1					
ANR	4101202	Label	case '&' :	598:1:18085:18093	4101195	0	True				
ANR	4101203	Label	case '-' :	599:1:18096:18104	4101195	1	True				
ANR	4101204	ReturnStatement	return ch ;	600:2:18108:18117	4101195	2	True				
ANR	4101205	Identifier	ch		4101195	0					
ANR	4101206	ReturnStatement	return def ;	602:1:18123:18133	4101195	1	True				
ANR	4101207	Identifier	def		4101195	0					
ANR	4101208	ReturnType	static int		4101195	1					
ANR	4101209	Identifier	getArg		4101195	2					
ANR	4101210	ParameterList	"char ch , int def"		4101195	3					
ANR	4101211	Parameter	char ch	596:18:18049:18055	4101195	0	True				
ANR	4101212	ParameterType	char		4101195	0					
ANR	4101213	Identifier	ch		4101195	1					
ANR	4101214	Parameter	int def	596:27:18058:18064	4101195	1	True				
ANR	4101215	ParameterType	int		4101195	0					
ANR	4101216	Identifier	def		4101195	1					
ANR	4101217	CFGEntryNode	ENTRY		4101195		True				
ANR	4101218	CFGExitNode	EXIT		4101195		True				
ANR	4101219	Symbol	def		4101195						
ANR	4101220	Symbol	ch		4101195						
ANR	4101221	Function	aliascmd	606:0:18171:18734							
ANR	4101222	FunctionDef	"aliascmd (RCore * core , const char * str)"		4101221	0					
ANR	4101223	CompoundStatement		606:51:18222:18734	4101221	0					
ANR	4101224	SwitchStatement	switch ( str [ 0 ] )		4101221	0					
ANR	4101225	Condition	str [ 0 ]	607:9:18233:18238	4101221	0	True				
ANR	4101226	ArrayIndexing	str [ 0 ]		4101221	0					
ANR	4101227	Identifier	str		4101221	0					
ANR	4101228	PrimaryExpression	0		4101221	1					
ANR	4101229	CompoundStatement		2:17:18:18	4101221	1					
ANR	4101230	Label	case '\\0' :	608:1:18244:18253	4101221	0	True				
ANR	4101231	ExpressionStatement	"r_core_cmd0 ( core , ""$"" )"	609:2:18265:18288	4101221	1	True				
ANR	4101232	CallExpression	"r_core_cmd0 ( core , ""$"" )"		4101221	0					
ANR	4101233	Callee	r_core_cmd0		4101221	0					
ANR	4101234	Identifier	r_core_cmd0		4101221	0					
ANR	4101235	ArgumentList	core		4101221	1					
ANR	4101236	Argument	core		4101221	0					
ANR	4101237	Identifier	core		4101221	0					
ANR	4101238	Argument	"""$"""		4101221	1					
ANR	4101239	PrimaryExpression	"""$"""		4101221	0					
ANR	4101240	BreakStatement	break ;	610:2:18292:18297	4101221	2	True				
ANR	4101241	Label	case '-' :	611:1:18300:18308	4101221	3	True				
ANR	4101242	IfStatement	if ( str [ 1 ] )		4101221	4					
ANR	4101243	Condition	str [ 1 ]	612:6:18325:18330	4101221	0	True				
ANR	4101244	ArrayIndexing	str [ 1 ]		4101221	0					
ANR	4101245	Identifier	str		4101221	0					
ANR	4101246	PrimaryExpression	1		4101221	1					
ANR	4101247	CompoundStatement		7:14:110:110	4101221	1					
ANR	4101248	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , str + 2 )"	613:3:18338:18375	4101221	0	True				
ANR	4101249	CallExpression	"r_cmd_alias_del ( core -> rcmd , str + 2 )"		4101221	0					
ANR	4101250	Callee	r_cmd_alias_del		4101221	0					
ANR	4101251	Identifier	r_cmd_alias_del		4101221	0					
ANR	4101252	ArgumentList	core -> rcmd		4101221	1					
ANR	4101253	Argument	core -> rcmd		4101221	0					
ANR	4101254	PtrMemberAccess	core -> rcmd		4101221	0					
ANR	4101255	Identifier	core		4101221	0					
ANR	4101256	Identifier	rcmd		4101221	1					
ANR	4101257	Argument	str + 2		4101221	1					
ANR	4101258	AdditiveExpression	str + 2		4101221	0		+			
ANR	4101259	Identifier	str		4101221	0					
ANR	4101260	PrimaryExpression	2		4101221	1					
ANR	4101261	ElseStatement	else		4101221	0					
ANR	4101262	CompoundStatement		9:9:163:163	4101221	0					
ANR	4101263	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , NULL )"	615:3:18391:18425	4101221	0	True				
ANR	4101264	CallExpression	"r_cmd_alias_del ( core -> rcmd , NULL )"		4101221	0					
ANR	4101265	Callee	r_cmd_alias_del		4101221	0					
ANR	4101266	Identifier	r_cmd_alias_del		4101221	0					
ANR	4101267	ArgumentList	core -> rcmd		4101221	1					
ANR	4101268	Argument	core -> rcmd		4101221	0					
ANR	4101269	PtrMemberAccess	core -> rcmd		4101221	0					
ANR	4101270	Identifier	core		4101221	0					
ANR	4101271	Identifier	rcmd		4101221	1					
ANR	4101272	Argument	NULL		4101221	1					
ANR	4101273	Identifier	NULL		4101221	0					
ANR	4101274	BreakStatement	break ;	618:2:18470:18475	4101221	5	True				
ANR	4101275	Label	case '?' :	619:1:18478:18486	4101221	6	True				
ANR	4101276	ExpressionStatement	"eprintf ( ""Usage: =$[-][remotecmd]  # remote command alias\\n"" )"	620:2:18499:18560	4101221	7	True				
ANR	4101277	CallExpression	"eprintf ( ""Usage: =$[-][remotecmd]  # remote command alias\\n"" )"		4101221	0					
ANR	4101278	Callee	eprintf		4101221	0					
ANR	4101279	Identifier	eprintf		4101221	0					
ANR	4101280	ArgumentList	"""Usage: =$[-][remotecmd]  # remote command alias\\n"""		4101221	1					
ANR	4101281	Argument	"""Usage: =$[-][remotecmd]  # remote command alias\\n"""		4101221	0					
ANR	4101282	PrimaryExpression	"""Usage: =$[-][remotecmd]  # remote command alias\\n"""		4101221	0					
ANR	4101283	ExpressionStatement	"eprintf ( "" =$dr   # makes 'dr' alias for =!dr\\n"" )"	621:2:18564:18613	4101221	8	True				
ANR	4101284	CallExpression	"eprintf ( "" =$dr   # makes 'dr' alias for =!dr\\n"" )"		4101221	0					
ANR	4101285	Callee	eprintf		4101221	0					
ANR	4101286	Identifier	eprintf		4101221	0					
ANR	4101287	ArgumentList	""" =$dr   # makes 'dr' alias for =!dr\\n"""		4101221	1					
ANR	4101288	Argument	""" =$dr   # makes 'dr' alias for =!dr\\n"""		4101221	0					
ANR	4101289	PrimaryExpression	""" =$dr   # makes 'dr' alias for =!dr\\n"""		4101221	0					
ANR	4101290	ExpressionStatement	"eprintf ( "" =$-dr  # unset 'dr' alias\\n"" )"	622:2:18617:18657	4101221	9	True				
ANR	4101291	CallExpression	"eprintf ( "" =$-dr  # unset 'dr' alias\\n"" )"		4101221	0					
ANR	4101292	Callee	eprintf		4101221	0					
ANR	4101293	Identifier	eprintf		4101221	0					
ANR	4101294	ArgumentList	""" =$-dr  # unset 'dr' alias\\n"""		4101221	1					
ANR	4101295	Argument	""" =$-dr  # unset 'dr' alias\\n"""		4101221	0					
ANR	4101296	PrimaryExpression	""" =$-dr  # unset 'dr' alias\\n"""		4101221	0					
ANR	4101297	BreakStatement	break ;	623:2:18661:18666	4101221	10	True				
ANR	4101298	Label	default :	624:1:18669:18676	4101221	11	True				
ANR	4101299	Identifier	default		4101221	0					
ANR	4101300	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , """" , 1 )"	625:2:18680:18720	4101221	12	True				
ANR	4101301	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , """" , 1 )"		4101221	0					
ANR	4101302	Callee	r_cmd_alias_set		4101221	0					
ANR	4101303	Identifier	r_cmd_alias_set		4101221	0					
ANR	4101304	ArgumentList	core -> rcmd		4101221	1					
ANR	4101305	Argument	core -> rcmd		4101221	0					
ANR	4101306	PtrMemberAccess	core -> rcmd		4101221	0					
ANR	4101307	Identifier	core		4101221	0					
ANR	4101308	Identifier	rcmd		4101221	1					
ANR	4101309	Argument	str		4101221	1					
ANR	4101310	Identifier	str		4101221	0					
ANR	4101311	Argument	""""""		4101221	2					
ANR	4101312	PrimaryExpression	""""""		4101221	0					
ANR	4101313	Argument	1		4101221	3					
ANR	4101314	PrimaryExpression	1		4101221	0					
ANR	4101315	BreakStatement	break ;	626:2:18724:18729	4101221	13	True				
ANR	4101316	ReturnType	static void		4101221	1					
ANR	4101317	Identifier	aliascmd		4101221	2					
ANR	4101318	ParameterList	"RCore * core , const char * str"		4101221	3					
ANR	4101319	Parameter	RCore * core	606:21:18192:18202	4101221	0	True				
ANR	4101320	ParameterType	RCore *		4101221	0					
ANR	4101321	Identifier	core		4101221	1					
ANR	4101322	Parameter	const char * str	606:34:18205:18219	4101221	1	True				
ANR	4101323	ParameterType	const char *		4101221	0					
ANR	4101324	Identifier	str		4101221	1					
ANR	4101325	CFGEntryNode	ENTRY		4101221		True				
ANR	4101326	CFGExitNode	EXIT		4101221		True				
ANR	4101327	Symbol	str		4101221						
ANR	4101328	Symbol	core		4101221						
ANR	4101329	Symbol	NULL		4101221						
ANR	4101330	Symbol	core -> rcmd		4101221						
ANR	4101331	Symbol	* core		4101221						
ANR	4101332	Symbol	* str		4101221						
ANR	4101333	Function	cmd_rap	630:0:18737:20401							
ANR	4101334	FunctionDef	"cmd_rap (void * data , const char * input)"		4101333	0					
ANR	4101335	CompoundStatement		630:50:18787:20401	4101333	0					
ANR	4101336	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	631:1:18790:18817	4101333	0	True				
ANR	4101337	IdentifierDecl	* core = ( RCore * ) data		4101333	0					
ANR	4101338	IdentifierDeclType	RCore *		4101333	0					
ANR	4101339	Identifier	core		4101333	1					
ANR	4101340	AssignmentExpression	* core = ( RCore * ) data		4101333	2		=			
ANR	4101341	Identifier	core		4101333	0					
ANR	4101342	CastExpression	( RCore * ) data		4101333	1					
ANR	4101343	CastTarget	RCore *		4101333	0					
ANR	4101344	Identifier	data		4101333	1					
ANR	4101345	SwitchStatement	switch ( * input )		4101333	1					
ANR	4101346	Condition	* input	632:9:18828:18833	4101333	0	True				
ANR	4101347	UnaryOperationExpression	* input		4101333	0					
ANR	4101348	UnaryOperator	*		4101333	0					
ANR	4101349	Identifier	input		4101333	1					
ANR	4101350	CompoundStatement		3:17:48:48	4101333	1					
ANR	4101351	Label	case '\\0' :	633:1:18839:18848	4101333	0	True				
ANR	4101352	ExpressionStatement	r_core_rtr_list ( core )	634:2:18859:18881	4101333	1	True				
ANR	4101353	CallExpression	r_core_rtr_list ( core )		4101333	0					
ANR	4101354	Callee	r_core_rtr_list		4101333	0					
ANR	4101355	Identifier	r_core_rtr_list		4101333	0					
ANR	4101356	ArgumentList	core		4101333	1					
ANR	4101357	Argument	core		4101333	0					
ANR	4101358	Identifier	core		4101333	0					
ANR	4101359	BreakStatement	break ;	635:2:18885:18890	4101333	2	True				
ANR	4101360	Label	case 'j' :	636:1:18893:18901	4101333	3	True				
ANR	4101361	ExpressionStatement	"eprintf ( ""TODO: list connections in json\\n"" )"	637:2:18913:18957	4101333	4	True				
ANR	4101362	CallExpression	"eprintf ( ""TODO: list connections in json\\n"" )"		4101333	0					
ANR	4101363	Callee	eprintf		4101333	0					
ANR	4101364	Identifier	eprintf		4101333	0					
ANR	4101365	ArgumentList	"""TODO: list connections in json\\n"""		4101333	1					
ANR	4101366	Argument	"""TODO: list connections in json\\n"""		4101333	0					
ANR	4101367	PrimaryExpression	"""TODO: list connections in json\\n"""		4101333	0					
ANR	4101368	BreakStatement	break ;	638:2:18961:18966	4101333	5	True				
ANR	4101369	Label	case '!' :	639:1:18969:18977	4101333	6	True				
ANR	4101370	IfStatement	if ( input [ 1 ] == '=' )		4101333	7					
ANR	4101371	Condition	input [ 1 ] == '='	640:6:18993:19007	4101333	0	True				
ANR	4101372	EqualityExpression	input [ 1 ] == '='		4101333	0		==			
ANR	4101373	ArrayIndexing	input [ 1 ]		4101333	0					
ANR	4101374	Identifier	input		4101333	0					
ANR	4101375	PrimaryExpression	1		4101333	1					
ANR	4101376	PrimaryExpression	'='		4101333	1					
ANR	4101377	CompoundStatement		11:23:222:222	4101333	1					
ANR	4101378	ExpressionStatement	core -> cmdremote = input [ 2 ] ? 1 : 0	642:3:19067:19099	4101333	0	True				
ANR	4101379	AssignmentExpression	core -> cmdremote = input [ 2 ] ? 1 : 0		4101333	0		=			
ANR	4101380	PtrMemberAccess	core -> cmdremote		4101333	0					
ANR	4101381	Identifier	core		4101333	0					
ANR	4101382	Identifier	cmdremote		4101333	1					
ANR	4101383	ConditionalExpression	input [ 2 ] ? 1 : 0		4101333	1					
ANR	4101384	Condition	input [ 2 ]		4101333	0					
ANR	4101385	ArrayIndexing	input [ 2 ]		4101333	0					
ANR	4101386	Identifier	input		4101333	0					
ANR	4101387	PrimaryExpression	2		4101333	1					
ANR	4101388	PrimaryExpression	1		4101333	1					
ANR	4101389	PrimaryExpression	0		4101333	2					
ANR	4101390	ExpressionStatement	r_cons_println ( r_str_bool ( core -> cmdremote ) )	643:3:19104:19149	4101333	1	True				
ANR	4101391	CallExpression	r_cons_println ( r_str_bool ( core -> cmdremote ) )		4101333	0					
ANR	4101392	Callee	r_cons_println		4101333	0					
ANR	4101393	Identifier	r_cons_println		4101333	0					
ANR	4101394	ArgumentList	r_str_bool ( core -> cmdremote )		4101333	1					
ANR	4101395	Argument	r_str_bool ( core -> cmdremote )		4101333	0					
ANR	4101396	CallExpression	r_str_bool ( core -> cmdremote )		4101333	0					
ANR	4101397	Callee	r_str_bool		4101333	0					
ANR	4101398	Identifier	r_str_bool		4101333	0					
ANR	4101399	ArgumentList	core -> cmdremote		4101333	1					
ANR	4101400	Argument	core -> cmdremote		4101333	0					
ANR	4101401	PtrMemberAccess	core -> cmdremote		4101333	0					
ANR	4101402	Identifier	core		4101333	0					
ANR	4101403	Identifier	cmdremote		4101333	1					
ANR	4101404	ElseStatement	else		4101333	0					
ANR	4101405	CompoundStatement		16:3:377:422	4101333	0					
ANR	4101406	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , input + 1 ) ;"	645:3:19165:19210	4101333	0	True				
ANR	4101407	IdentifierDecl	"* res = r_io_system ( core -> io , input + 1 )"		4101333	0					
ANR	4101408	IdentifierDeclType	char *		4101333	0					
ANR	4101409	Identifier	res		4101333	1					
ANR	4101410	AssignmentExpression	"* res = r_io_system ( core -> io , input + 1 )"		4101333	2		=			
ANR	4101411	Identifier	res		4101333	0					
ANR	4101412	CallExpression	"r_io_system ( core -> io , input + 1 )"		4101333	1					
ANR	4101413	Callee	r_io_system		4101333	0					
ANR	4101414	Identifier	r_io_system		4101333	0					
ANR	4101415	ArgumentList	core -> io		4101333	1					
ANR	4101416	Argument	core -> io		4101333	0					
ANR	4101417	PtrMemberAccess	core -> io		4101333	0					
ANR	4101418	Identifier	core		4101333	0					
ANR	4101419	Identifier	io		4101333	1					
ANR	4101420	Argument	input + 1		4101333	1					
ANR	4101421	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101422	Identifier	input		4101333	0					
ANR	4101423	PrimaryExpression	1		4101333	1					
ANR	4101424	IfStatement	if ( res )		4101333	1					
ANR	4101425	Condition	res	646:7:19219:19221	4101333	0	True				
ANR	4101426	Identifier	res		4101333	0					
ANR	4101427	CompoundStatement		17:12:436:436	4101333	1					
ANR	4101428	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	647:4:19230:19257	4101333	0	True				
ANR	4101429	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		4101333	0					
ANR	4101430	Callee	r_cons_printf		4101333	0					
ANR	4101431	Identifier	r_cons_printf		4101333	0					
ANR	4101432	ArgumentList	"""%s\\n"""		4101333	1					
ANR	4101433	Argument	"""%s\\n"""		4101333	0					
ANR	4101434	PrimaryExpression	"""%s\\n"""		4101333	0					
ANR	4101435	Argument	res		4101333	1					
ANR	4101436	Identifier	res		4101333	0					
ANR	4101437	ExpressionStatement	free ( res )	648:4:19263:19273	4101333	1	True				
ANR	4101438	CallExpression	free ( res )		4101333	0					
ANR	4101439	Callee	free		4101333	0					
ANR	4101440	Identifier	free		4101333	0					
ANR	4101441	ArgumentList	res		4101333	1					
ANR	4101442	Argument	res		4101333	0					
ANR	4101443	Identifier	res		4101333	0					
ANR	4101444	BreakStatement	break ;	651:2:19286:19291	4101333	8	True				
ANR	4101445	Label	case '$' :	652:1:19294:19302	4101333	9	True				
ANR	4101446	ExpressionStatement	"aliascmd ( core , input + 1 )"	654:2:19334:19360	4101333	10	True				
ANR	4101447	CallExpression	"aliascmd ( core , input + 1 )"		4101333	0					
ANR	4101448	Callee	aliascmd		4101333	0					
ANR	4101449	Identifier	aliascmd		4101333	0					
ANR	4101450	ArgumentList	core		4101333	1					
ANR	4101451	Argument	core		4101333	0					
ANR	4101452	Identifier	core		4101333	0					
ANR	4101453	Argument	input + 1		4101333	1					
ANR	4101454	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101455	Identifier	input		4101333	0					
ANR	4101456	PrimaryExpression	1		4101333	1					
ANR	4101457	BreakStatement	break ;	655:2:19364:19369	4101333	11	True				
ANR	4101458	Label	case '+' :	656:1:19372:19380	4101333	12	True				
ANR	4101459	ExpressionStatement	"r_core_rtr_add ( core , input + 1 )"	657:2:19392:19424	4101333	13	True				
ANR	4101460	CallExpression	"r_core_rtr_add ( core , input + 1 )"		4101333	0					
ANR	4101461	Callee	r_core_rtr_add		4101333	0					
ANR	4101462	Identifier	r_core_rtr_add		4101333	0					
ANR	4101463	ArgumentList	core		4101333	1					
ANR	4101464	Argument	core		4101333	0					
ANR	4101465	Identifier	core		4101333	0					
ANR	4101466	Argument	input + 1		4101333	1					
ANR	4101467	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101468	Identifier	input		4101333	0					
ANR	4101469	PrimaryExpression	1		4101333	1					
ANR	4101470	BreakStatement	break ;	658:2:19428:19433	4101333	14	True				
ANR	4101471	Label	case '-' :	659:1:19436:19444	4101333	15	True				
ANR	4101472	ExpressionStatement	"r_core_rtr_remove ( core , input + 1 )"	660:2:19456:19491	4101333	16	True				
ANR	4101473	CallExpression	"r_core_rtr_remove ( core , input + 1 )"		4101333	0					
ANR	4101474	Callee	r_core_rtr_remove		4101333	0					
ANR	4101475	Identifier	r_core_rtr_remove		4101333	0					
ANR	4101476	ArgumentList	core		4101333	1					
ANR	4101477	Argument	core		4101333	0					
ANR	4101478	Identifier	core		4101333	0					
ANR	4101479	Argument	input + 1		4101333	1					
ANR	4101480	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101481	Identifier	input		4101333	0					
ANR	4101482	PrimaryExpression	1		4101333	1					
ANR	4101483	BreakStatement	break ;	661:2:19495:19500	4101333	17	True				
ANR	4101484	Label	case '<' :	663:1:19558:19566	4101333	18	True				
ANR	4101485	ExpressionStatement	"r_core_rtr_pushout ( core , input + 1 )"	664:2:19578:19614	4101333	19	True				
ANR	4101486	CallExpression	"r_core_rtr_pushout ( core , input + 1 )"		4101333	0					
ANR	4101487	Callee	r_core_rtr_pushout		4101333	0					
ANR	4101488	Identifier	r_core_rtr_pushout		4101333	0					
ANR	4101489	ArgumentList	core		4101333	1					
ANR	4101490	Argument	core		4101333	0					
ANR	4101491	Identifier	core		4101333	0					
ANR	4101492	Argument	input + 1		4101333	1					
ANR	4101493	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101494	Identifier	input		4101333	0					
ANR	4101495	PrimaryExpression	1		4101333	1					
ANR	4101496	BreakStatement	break ;	665:2:19618:19623	4101333	20	True				
ANR	4101497	Label	case '=' :	666:1:19626:19634	4101333	21	True				
ANR	4101498	ExpressionStatement	"r_core_rtr_session ( core , input + 1 )"	667:2:19646:19682	4101333	22	True				
ANR	4101499	CallExpression	"r_core_rtr_session ( core , input + 1 )"		4101333	0					
ANR	4101500	Callee	r_core_rtr_session		4101333	0					
ANR	4101501	Identifier	r_core_rtr_session		4101333	0					
ANR	4101502	ArgumentList	core		4101333	1					
ANR	4101503	Argument	core		4101333	0					
ANR	4101504	Identifier	core		4101333	0					
ANR	4101505	Argument	input + 1		4101333	1					
ANR	4101506	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101507	Identifier	input		4101333	0					
ANR	4101508	PrimaryExpression	1		4101333	1					
ANR	4101509	BreakStatement	break ;	668:2:19686:19691	4101333	23	True				
ANR	4101510	Label	case 'g' :	669:1:19694:19702	4101333	24	True				
ANR	4101511	IfStatement	if ( input [ 1 ] == '?' )		4101333	25					
ANR	4101512	Condition	input [ 1 ] == '?'	670:6:19718:19732	4101333	0	True				
ANR	4101513	EqualityExpression	input [ 1 ] == '?'		4101333	0		==			
ANR	4101514	ArrayIndexing	input [ 1 ]		4101333	0					
ANR	4101515	Identifier	input		4101333	0					
ANR	4101516	PrimaryExpression	1		4101333	1					
ANR	4101517	PrimaryExpression	'?'		4101333	1					
ANR	4101518	CompoundStatement		41:23:947:947	4101333	1					
ANR	4101519	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equalg )"	671:3:19740:19779	4101333	0	True				
ANR	4101520	CallExpression	"r_core_cmd_help ( core , help_msg_equalg )"		4101333	0					
ANR	4101521	Callee	r_core_cmd_help		4101333	0					
ANR	4101522	Identifier	r_core_cmd_help		4101333	0					
ANR	4101523	ArgumentList	core		4101333	1					
ANR	4101524	Argument	core		4101333	0					
ANR	4101525	Identifier	core		4101333	0					
ANR	4101526	Argument	help_msg_equalg		4101333	1					
ANR	4101527	Identifier	help_msg_equalg		4101333	0					
ANR	4101528	ElseStatement	else		4101333	0					
ANR	4101529	CompoundStatement		43:9:1002:1002	4101333	0					
ANR	4101530	ExpressionStatement	"r_core_rtr_gdb ( core , getArg ( input [ 1 ] , 'g' ) , input + 1 )"	673:3:19795:19851	4101333	0	True				
ANR	4101531	CallExpression	"r_core_rtr_gdb ( core , getArg ( input [ 1 ] , 'g' ) , input + 1 )"		4101333	0					
ANR	4101532	Callee	r_core_rtr_gdb		4101333	0					
ANR	4101533	Identifier	r_core_rtr_gdb		4101333	0					
ANR	4101534	ArgumentList	core		4101333	1					
ANR	4101535	Argument	core		4101333	0					
ANR	4101536	Identifier	core		4101333	0					
ANR	4101537	Argument	"getArg ( input [ 1 ] , 'g' )"		4101333	1					
ANR	4101538	CallExpression	"getArg ( input [ 1 ] , 'g' )"		4101333	0					
ANR	4101539	Callee	getArg		4101333	0					
ANR	4101540	Identifier	getArg		4101333	0					
ANR	4101541	ArgumentList	input [ 1 ]		4101333	1					
ANR	4101542	Argument	input [ 1 ]		4101333	0					
ANR	4101543	ArrayIndexing	input [ 1 ]		4101333	0					
ANR	4101544	Identifier	input		4101333	0					
ANR	4101545	PrimaryExpression	1		4101333	1					
ANR	4101546	Argument	'g'		4101333	1					
ANR	4101547	PrimaryExpression	'g'		4101333	0					
ANR	4101548	Argument	input + 1		4101333	2					
ANR	4101549	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101550	Identifier	input		4101333	0					
ANR	4101551	PrimaryExpression	1		4101333	1					
ANR	4101552	BreakStatement	break ;	675:2:19859:19864	4101333	26	True				
ANR	4101553	Label	case 'h' :	676:1:19867:19875	4101333	27	True				
ANR	4101554	IfStatement	if ( input [ 1 ] == '?' )		4101333	28					
ANR	4101555	Condition	input [ 1 ] == '?'	677:6:19891:19905	4101333	0	True				
ANR	4101556	EqualityExpression	input [ 1 ] == '?'		4101333	0		==			
ANR	4101557	ArrayIndexing	input [ 1 ]		4101333	0					
ANR	4101558	Identifier	input		4101333	0					
ANR	4101559	PrimaryExpression	1		4101333	1					
ANR	4101560	PrimaryExpression	'?'		4101333	1					
ANR	4101561	CompoundStatement		48:23:1120:1120	4101333	1					
ANR	4101562	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equalh )"	678:3:19913:19952	4101333	0	True				
ANR	4101563	CallExpression	"r_core_cmd_help ( core , help_msg_equalh )"		4101333	0					
ANR	4101564	Callee	r_core_cmd_help		4101333	0					
ANR	4101565	Identifier	r_core_cmd_help		4101333	0					
ANR	4101566	ArgumentList	core		4101333	1					
ANR	4101567	Argument	core		4101333	0					
ANR	4101568	Identifier	core		4101333	0					
ANR	4101569	Argument	help_msg_equalh		4101333	1					
ANR	4101570	Identifier	help_msg_equalh		4101333	0					
ANR	4101571	ElseStatement	else		4101333	0					
ANR	4101572	CompoundStatement		50:9:1175:1175	4101333	0					
ANR	4101573	ExpressionStatement	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'h' ) , 'h' , input + 1 )"	680:3:19968:20030	4101333	0	True				
ANR	4101574	CallExpression	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'h' ) , 'h' , input + 1 )"		4101333	0					
ANR	4101575	Callee	r_core_rtr_http		4101333	0					
ANR	4101576	Identifier	r_core_rtr_http		4101333	0					
ANR	4101577	ArgumentList	core		4101333	1					
ANR	4101578	Argument	core		4101333	0					
ANR	4101579	Identifier	core		4101333	0					
ANR	4101580	Argument	"getArg ( input [ 1 ] , 'h' )"		4101333	1					
ANR	4101581	CallExpression	"getArg ( input [ 1 ] , 'h' )"		4101333	0					
ANR	4101582	Callee	getArg		4101333	0					
ANR	4101583	Identifier	getArg		4101333	0					
ANR	4101584	ArgumentList	input [ 1 ]		4101333	1					
ANR	4101585	Argument	input [ 1 ]		4101333	0					
ANR	4101586	ArrayIndexing	input [ 1 ]		4101333	0					
ANR	4101587	Identifier	input		4101333	0					
ANR	4101588	PrimaryExpression	1		4101333	1					
ANR	4101589	Argument	'h'		4101333	1					
ANR	4101590	PrimaryExpression	'h'		4101333	0					
ANR	4101591	Argument	'h'		4101333	2					
ANR	4101592	PrimaryExpression	'h'		4101333	0					
ANR	4101593	Argument	input + 1		4101333	3					
ANR	4101594	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101595	Identifier	input		4101333	0					
ANR	4101596	PrimaryExpression	1		4101333	1					
ANR	4101597	BreakStatement	break ;	682:2:20038:20043	4101333	29	True				
ANR	4101598	Label	case 'H' :	683:1:20046:20054	4101333	30	True				
ANR	4101599	IfStatement	if ( input [ 1 ] == '?' )		4101333	31					
ANR	4101600	Condition	input [ 1 ] == '?'	684:6:20070:20084	4101333	0	True				
ANR	4101601	EqualityExpression	input [ 1 ] == '?'		4101333	0		==			
ANR	4101602	ArrayIndexing	input [ 1 ]		4101333	0					
ANR	4101603	Identifier	input		4101333	0					
ANR	4101604	PrimaryExpression	1		4101333	1					
ANR	4101605	PrimaryExpression	'?'		4101333	1					
ANR	4101606	CompoundStatement		55:23:1299:1299	4101333	1					
ANR	4101607	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equalh )"	685:3:20092:20131	4101333	0	True				
ANR	4101608	CallExpression	"r_core_cmd_help ( core , help_msg_equalh )"		4101333	0					
ANR	4101609	Callee	r_core_cmd_help		4101333	0					
ANR	4101610	Identifier	r_core_cmd_help		4101333	0					
ANR	4101611	ArgumentList	core		4101333	1					
ANR	4101612	Argument	core		4101333	0					
ANR	4101613	Identifier	core		4101333	0					
ANR	4101614	Argument	help_msg_equalh		4101333	1					
ANR	4101615	Identifier	help_msg_equalh		4101333	0					
ANR	4101616	ElseStatement	else		4101333	0					
ANR	4101617	CompoundStatement		58:3:1359:1402	4101333	0					
ANR	4101618	IdentifierDeclStatement	const char * arg = r_str_trim_ro ( input + 1 ) ;	687:3:20147:20190	4101333	0	True				
ANR	4101619	IdentifierDecl	* arg = r_str_trim_ro ( input + 1 )		4101333	0					
ANR	4101620	IdentifierDeclType	const char *		4101333	0					
ANR	4101621	Identifier	arg		4101333	1					
ANR	4101622	AssignmentExpression	* arg = r_str_trim_ro ( input + 1 )		4101333	2		=			
ANR	4101623	Identifier	arg		4101333	0					
ANR	4101624	CallExpression	r_str_trim_ro ( input + 1 )		4101333	1					
ANR	4101625	Callee	r_str_trim_ro		4101333	0					
ANR	4101626	Identifier	r_str_trim_ro		4101333	0					
ANR	4101627	ArgumentList	input + 1		4101333	1					
ANR	4101628	Argument	input + 1		4101333	0					
ANR	4101629	AdditiveExpression	input + 1		4101333	0		+			
ANR	4101630	Identifier	input		4101333	0					
ANR	4101631	PrimaryExpression	1		4101333	1					
ANR	4101632	ExpressionStatement	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'H' ) , 'H' , arg )"	688:3:20195:20251	4101333	1	True				
ANR	4101633	CallExpression	"r_core_rtr_http ( core , getArg ( input [ 1 ] , 'H' ) , 'H' , arg )"		4101333	0					
ANR	4101634	Callee	r_core_rtr_http		4101333	0					
ANR	4101635	Identifier	r_core_rtr_http		4101333	0					
ANR	4101636	ArgumentList	core		4101333	1					
ANR	4101637	Argument	core		4101333	0					
ANR	4101638	Identifier	core		4101333	0					
ANR	4101639	Argument	"getArg ( input [ 1 ] , 'H' )"		4101333	1					
ANR	4101640	CallExpression	"getArg ( input [ 1 ] , 'H' )"		4101333	0					
ANR	4101641	Callee	getArg		4101333	0					
ANR	4101642	Identifier	getArg		4101333	0					
ANR	4101643	ArgumentList	input [ 1 ]		4101333	1					
ANR	4101644	Argument	input [ 1 ]		4101333	0					
ANR	4101645	ArrayIndexing	input [ 1 ]		4101333	0					
ANR	4101646	Identifier	input		4101333	0					
ANR	4101647	PrimaryExpression	1		4101333	1					
ANR	4101648	Argument	'H'		4101333	1					
ANR	4101649	PrimaryExpression	'H'		4101333	0					
ANR	4101650	Argument	'H'		4101333	2					
ANR	4101651	PrimaryExpression	'H'		4101333	0					
ANR	4101652	Argument	arg		4101333	3					
ANR	4101653	Identifier	arg		4101333	0					
ANR	4101654	BreakStatement	break ;	690:2:20259:20264	4101333	32	True				
ANR	4101655	Label	case '?' :	691:1:20267:20275	4101333	33	True				
ANR	4101656	ExpressionStatement	"r_core_cmd_help ( core , help_msg_equal )"	692:2:20287:20325	4101333	34	True				
ANR	4101657	CallExpression	"r_core_cmd_help ( core , help_msg_equal )"		4101333	0					
ANR	4101658	Callee	r_core_cmd_help		4101333	0					
ANR	4101659	Identifier	r_core_cmd_help		4101333	0					
ANR	4101660	ArgumentList	core		4101333	1					
ANR	4101661	Argument	core		4101333	0					
ANR	4101662	Identifier	core		4101333	0					
ANR	4101663	Argument	help_msg_equal		4101333	1					
ANR	4101664	Identifier	help_msg_equal		4101333	0					
ANR	4101665	BreakStatement	break ;	693:2:20329:20334	4101333	35	True				
ANR	4101666	Label	default :	694:1:20337:20344	4101333	36	True				
ANR	4101667	Identifier	default		4101333	0					
ANR	4101668	ExpressionStatement	"r_core_rtr_cmd ( core , input )"	695:2:20348:20376	4101333	37	True				
ANR	4101669	CallExpression	"r_core_rtr_cmd ( core , input )"		4101333	0					
ANR	4101670	Callee	r_core_rtr_cmd		4101333	0					
ANR	4101671	Identifier	r_core_rtr_cmd		4101333	0					
ANR	4101672	ArgumentList	core		4101333	1					
ANR	4101673	Argument	core		4101333	0					
ANR	4101674	Identifier	core		4101333	0					
ANR	4101675	Argument	input		4101333	1					
ANR	4101676	Identifier	input		4101333	0					
ANR	4101677	BreakStatement	break ;	696:2:20380:20385	4101333	38	True				
ANR	4101678	ReturnStatement	return 0 ;	698:1:20391:20399	4101333	2	True				
ANR	4101679	PrimaryExpression	0		4101333	0					
ANR	4101680	ReturnType	static int		4101333	1					
ANR	4101681	Identifier	cmd_rap		4101333	2					
ANR	4101682	ParameterList	"void * data , const char * input"		4101333	3					
ANR	4101683	Parameter	void * data	630:19:18756:18765	4101333	0	True				
ANR	4101684	ParameterType	void *		4101333	0					
ANR	4101685	Identifier	data		4101333	1					
ANR	4101686	Parameter	const char * input	630:31:18768:18784	4101333	1	True				
ANR	4101687	ParameterType	const char *		4101333	0					
ANR	4101688	Identifier	input		4101333	1					
ANR	4101689	CFGEntryNode	ENTRY		4101333		True				
ANR	4101690	CFGExitNode	EXIT		4101333		True				
ANR	4101691	Symbol	r_str_bool		4101333						
ANR	4101692	Symbol	res		4101333						
ANR	4101693	Symbol	help_msg_equal		4101333						
ANR	4101694	Symbol	r_io_system		4101333						
ANR	4101695	Symbol	data		4101333						
ANR	4101696	Symbol	help_msg_equalh		4101333						
ANR	4101697	Symbol	* input		4101333						
ANR	4101698	Symbol	* core		4101333						
ANR	4101699	Symbol	getArg		4101333						
ANR	4101700	Symbol	input		4101333						
ANR	4101701	Symbol	core		4101333						
ANR	4101702	Symbol	core -> cmdremote		4101333						
ANR	4101703	Symbol	core -> io		4101333						
ANR	4101704	Symbol	arg		4101333						
ANR	4101705	Symbol	r_str_trim_ro		4101333						
ANR	4101706	Symbol	help_msg_equalg		4101333						
ANR	4101707	Function	cmd_rap_run	701:0:20404:20616							
ANR	4101708	FunctionDef	"cmd_rap_run (void * data , const char * input)"		4101707	0					
ANR	4101709	CompoundStatement		701:54:20458:20616	4101707	0					
ANR	4101710	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	702:1:20461:20488	4101707	0	True				
ANR	4101711	IdentifierDecl	* core = ( RCore * ) data		4101707	0					
ANR	4101712	IdentifierDeclType	RCore *		4101707	0					
ANR	4101713	Identifier	core		4101707	1					
ANR	4101714	AssignmentExpression	* core = ( RCore * ) data		4101707	2		=			
ANR	4101715	Identifier	core		4101707	0					
ANR	4101716	CastExpression	( RCore * ) data		4101707	1					
ANR	4101717	CastTarget	RCore *		4101707	0					
ANR	4101718	Identifier	data		4101707	1					
ANR	4101719	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , input ) ;"	703:1:20491:20532	4101707	1	True				
ANR	4101720	IdentifierDecl	"* res = r_io_system ( core -> io , input )"		4101707	0					
ANR	4101721	IdentifierDeclType	char *		4101707	0					
ANR	4101722	Identifier	res		4101707	1					
ANR	4101723	AssignmentExpression	"* res = r_io_system ( core -> io , input )"		4101707	2		=			
ANR	4101724	Identifier	res		4101707	0					
ANR	4101725	CallExpression	"r_io_system ( core -> io , input )"		4101707	1					
ANR	4101726	Callee	r_io_system		4101707	0					
ANR	4101727	Identifier	r_io_system		4101707	0					
ANR	4101728	ArgumentList	core -> io		4101707	1					
ANR	4101729	Argument	core -> io		4101707	0					
ANR	4101730	PtrMemberAccess	core -> io		4101707	0					
ANR	4101731	Identifier	core		4101707	0					
ANR	4101732	Identifier	io		4101707	1					
ANR	4101733	Argument	input		4101707	1					
ANR	4101734	Identifier	input		4101707	0					
ANR	4101735	IfStatement	if ( res )		4101707	2					
ANR	4101736	Condition	res	704:5:20539:20541	4101707	0	True				
ANR	4101737	Identifier	res		4101707	0					
ANR	4101738	CompoundStatement		5:2:89:109	4101707	1					
ANR	4101739	IdentifierDeclStatement	int ret = atoi ( res ) ;	705:2:20548:20568	4101707	0	True				
ANR	4101740	IdentifierDecl	ret = atoi ( res )		4101707	0					
ANR	4101741	IdentifierDeclType	int		4101707	0					
ANR	4101742	Identifier	ret		4101707	1					
ANR	4101743	AssignmentExpression	ret = atoi ( res )		4101707	2		=			
ANR	4101744	Identifier	ret		4101707	0					
ANR	4101745	CallExpression	atoi ( res )		4101707	1					
ANR	4101746	Callee	atoi		4101707	0					
ANR	4101747	Identifier	atoi		4101707	0					
ANR	4101748	ArgumentList	res		4101707	1					
ANR	4101749	Argument	res		4101707	0					
ANR	4101750	Identifier	res		4101707	0					
ANR	4101751	ExpressionStatement	free ( res )	706:2:20572:20582	4101707	1	True				
ANR	4101752	CallExpression	free ( res )		4101707	0					
ANR	4101753	Callee	free		4101707	0					
ANR	4101754	Identifier	free		4101707	0					
ANR	4101755	ArgumentList	res		4101707	1					
ANR	4101756	Argument	res		4101707	0					
ANR	4101757	Identifier	res		4101707	0					
ANR	4101758	ReturnStatement	return ret ;	707:2:20586:20596	4101707	2	True				
ANR	4101759	Identifier	ret		4101707	0					
ANR	4101760	ReturnStatement	return false ;	709:1:20602:20614	4101707	3	True				
ANR	4101761	Identifier	false		4101707	0					
ANR	4101762	ReturnType	static int		4101707	1					
ANR	4101763	Identifier	cmd_rap_run		4101707	2					
ANR	4101764	ParameterList	"void * data , const char * input"		4101707	3					
ANR	4101765	Parameter	void * data	701:23:20427:20436	4101707	0	True				
ANR	4101766	ParameterType	void *		4101707	0					
ANR	4101767	Identifier	data		4101707	1					
ANR	4101768	Parameter	const char * input	701:35:20439:20455	4101707	1	True				
ANR	4101769	ParameterType	const char *		4101707	0					
ANR	4101770	Identifier	input		4101707	1					
ANR	4101771	CFGEntryNode	ENTRY		4101707		True				
ANR	4101772	CFGExitNode	EXIT		4101707		True				
ANR	4101773	Symbol	ret		4101707						
ANR	4101774	Symbol	atoi		4101707						
ANR	4101775	Symbol	input		4101707						
ANR	4101776	Symbol	core		4101707						
ANR	4101777	Symbol	res		4101707						
ANR	4101778	Symbol	r_io_system		4101707						
ANR	4101779	Symbol	data		4101707						
ANR	4101780	Symbol	core -> io		4101707						
ANR	4101781	Symbol	* core		4101707						
ANR	4101782	Symbol	false		4101707						
ANR	4101783	Function	cmd_yank	712:0:20619:23551							
ANR	4101784	FunctionDef	"cmd_yank (void * data , const char * input)"		4101783	0					
ANR	4101785	CompoundStatement		712:51:20670:23551	4101783	0					
ANR	4101786	IdentifierDeclStatement	ut64 n ;	713:1:20673:20679	4101783	0	True				
ANR	4101787	IdentifierDecl	n		4101783	0					
ANR	4101788	IdentifierDeclType	ut64		4101783	0					
ANR	4101789	Identifier	n		4101783	1					
ANR	4101790	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	714:1:20682:20709	4101783	1	True				
ANR	4101791	IdentifierDecl	* core = ( RCore * ) data		4101783	0					
ANR	4101792	IdentifierDeclType	RCore *		4101783	0					
ANR	4101793	Identifier	core		4101783	1					
ANR	4101794	AssignmentExpression	* core = ( RCore * ) data		4101783	2		=			
ANR	4101795	Identifier	core		4101783	0					
ANR	4101796	CastExpression	( RCore * ) data		4101783	1					
ANR	4101797	CastTarget	RCore *		4101783	0					
ANR	4101798	Identifier	data		4101783	1					
ANR	4101799	SwitchStatement	switch ( input [ 0 ] )		4101783	2					
ANR	4101800	Condition	input [ 0 ]	715:9:20720:20727	4101783	0	True				
ANR	4101801	ArrayIndexing	input [ 0 ]		4101783	0					
ANR	4101802	Identifier	input		4101783	0					
ANR	4101803	PrimaryExpression	0		4101783	1					
ANR	4101804	CompoundStatement		4:19:59:59	4101783	1					
ANR	4101805	Label	case ' ' :	716:1:20733:20741	4101783	0	True				
ANR	4101806	ExpressionStatement	"r_core_yank ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"	717:2:20753:20820	4101783	1	True				
ANR	4101807	CallExpression	"r_core_yank ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"		4101783	0					
ANR	4101808	Callee	r_core_yank		4101783	0					
ANR	4101809	Identifier	r_core_yank		4101783	0					
ANR	4101810	ArgumentList	core		4101783	1					
ANR	4101811	Argument	core		4101783	0					
ANR	4101812	Identifier	core		4101783	0					
ANR	4101813	Argument	core -> offset		4101783	1					
ANR	4101814	PtrMemberAccess	core -> offset		4101783	0					
ANR	4101815	Identifier	core		4101783	0					
ANR	4101816	Identifier	offset		4101783	1					
ANR	4101817	Argument	"r_num_math ( core -> num , input + 1 )"		4101783	2					
ANR	4101818	CallExpression	"r_num_math ( core -> num , input + 1 )"		4101783	0					
ANR	4101819	Callee	r_num_math		4101783	0					
ANR	4101820	Identifier	r_num_math		4101783	0					
ANR	4101821	ArgumentList	core -> num		4101783	1					
ANR	4101822	Argument	core -> num		4101783	0					
ANR	4101823	PtrMemberAccess	core -> num		4101783	0					
ANR	4101824	Identifier	core		4101783	0					
ANR	4101825	Identifier	num		4101783	1					
ANR	4101826	Argument	input + 1		4101783	1					
ANR	4101827	AdditiveExpression	input + 1		4101783	0		+			
ANR	4101828	Identifier	input		4101783	0					
ANR	4101829	PrimaryExpression	1		4101783	1					
ANR	4101830	BreakStatement	break ;	718:2:20824:20829	4101783	2	True				
ANR	4101831	Label	case 'l' :	719:1:20832:20840	4101783	3	True				
ANR	4101832	ExpressionStatement	core -> num -> value = r_buf_size ( core -> yank_buf )	720:2:20852:20898	4101783	4	True				
ANR	4101833	AssignmentExpression	core -> num -> value = r_buf_size ( core -> yank_buf )		4101783	0		=			
ANR	4101834	PtrMemberAccess	core -> num -> value		4101783	0					
ANR	4101835	PtrMemberAccess	core -> num		4101783	0					
ANR	4101836	Identifier	core		4101783	0					
ANR	4101837	Identifier	num		4101783	1					
ANR	4101838	Identifier	value		4101783	1					
ANR	4101839	CallExpression	r_buf_size ( core -> yank_buf )		4101783	1					
ANR	4101840	Callee	r_buf_size		4101783	0					
ANR	4101841	Identifier	r_buf_size		4101783	0					
ANR	4101842	ArgumentList	core -> yank_buf		4101783	1					
ANR	4101843	Argument	core -> yank_buf		4101783	0					
ANR	4101844	PtrMemberAccess	core -> yank_buf		4101783	0					
ANR	4101845	Identifier	core		4101783	0					
ANR	4101846	Identifier	yank_buf		4101783	1					
ANR	4101847	BreakStatement	break ;	721:2:20902:20907	4101783	5	True				
ANR	4101848	Label	case 'y' :	722:1:20910:20918	4101783	6	True				
ANR	4101849	WhileStatement	while ( input [ 1 ] == ' ' )		4101783	7					
ANR	4101850	Condition	input [ 1 ] == ' '	723:9:20937:20951	4101783	0	True				
ANR	4101851	EqualityExpression	input [ 1 ] == ' '		4101783	0		==			
ANR	4101852	ArrayIndexing	input [ 1 ]		4101783	0					
ANR	4101853	Identifier	input		4101783	0					
ANR	4101854	PrimaryExpression	1		4101783	1					
ANR	4101855	PrimaryExpression	' '		4101783	1					
ANR	4101856	CompoundStatement		12:26:283:283	4101783	1					
ANR	4101857	ExpressionStatement	input ++	724:3:20959:20966	4101783	0	True				
ANR	4101858	PostIncDecOperationExpression	input ++		4101783	0					
ANR	4101859	Identifier	input		4101783	0					
ANR	4101860	IncDec	++		4101783	1					
ANR	4101861	ExpressionStatement	"n = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : core -> offset"	726:2:20974:21035	4101783	8	True				
ANR	4101862	AssignmentExpression	"n = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : core -> offset"		4101783	0		=			
ANR	4101863	Identifier	n		4101783	0					
ANR	4101864	ConditionalExpression	"input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : core -> offset"		4101783	1					
ANR	4101865	Condition	input [ 1 ]		4101783	0					
ANR	4101866	ArrayIndexing	input [ 1 ]		4101783	0					
ANR	4101867	Identifier	input		4101783	0					
ANR	4101868	PrimaryExpression	1		4101783	1					
ANR	4101869	CallExpression	"r_num_math ( core -> num , input + 1 )"		4101783	1					
ANR	4101870	Callee	r_num_math		4101783	0					
ANR	4101871	Identifier	r_num_math		4101783	0					
ANR	4101872	ArgumentList	core -> num		4101783	1					
ANR	4101873	Argument	core -> num		4101783	0					
ANR	4101874	PtrMemberAccess	core -> num		4101783	0					
ANR	4101875	Identifier	core		4101783	0					
ANR	4101876	Identifier	num		4101783	1					
ANR	4101877	Argument	input + 1		4101783	1					
ANR	4101878	AdditiveExpression	input + 1		4101783	0		+			
ANR	4101879	Identifier	input		4101783	0					
ANR	4101880	PrimaryExpression	1		4101783	1					
ANR	4101881	PtrMemberAccess	core -> offset		4101783	2					
ANR	4101882	Identifier	core		4101783	0					
ANR	4101883	Identifier	offset		4101783	1					
ANR	4101884	ExpressionStatement	"r_core_yank_paste ( core , n , 0 )"	727:2:21039:21069	4101783	9	True				
ANR	4101885	CallExpression	"r_core_yank_paste ( core , n , 0 )"		4101783	0					
ANR	4101886	Callee	r_core_yank_paste		4101783	0					
ANR	4101887	Identifier	r_core_yank_paste		4101783	0					
ANR	4101888	ArgumentList	core		4101783	1					
ANR	4101889	Argument	core		4101783	0					
ANR	4101890	Identifier	core		4101783	0					
ANR	4101891	Argument	n		4101783	1					
ANR	4101892	Identifier	n		4101783	0					
ANR	4101893	Argument	0		4101783	2					
ANR	4101894	PrimaryExpression	0		4101783	0					
ANR	4101895	BreakStatement	break ;	728:2:21073:21078	4101783	10	True				
ANR	4101896	Label	case 'x' :	729:1:21081:21089	4101783	11	True				
ANR	4101897	ExpressionStatement	"r_core_yank_hexdump ( core , r_num_math ( core -> num , input + 1 ) )"	730:2:21101:21162	4101783	12	True				
ANR	4101898	CallExpression	"r_core_yank_hexdump ( core , r_num_math ( core -> num , input + 1 ) )"		4101783	0					
ANR	4101899	Callee	r_core_yank_hexdump		4101783	0					
ANR	4101900	Identifier	r_core_yank_hexdump		4101783	0					
ANR	4101901	ArgumentList	core		4101783	1					
ANR	4101902	Argument	core		4101783	0					
ANR	4101903	Identifier	core		4101783	0					
ANR	4101904	Argument	"r_num_math ( core -> num , input + 1 )"		4101783	1					
ANR	4101905	CallExpression	"r_num_math ( core -> num , input + 1 )"		4101783	0					
ANR	4101906	Callee	r_num_math		4101783	0					
ANR	4101907	Identifier	r_num_math		4101783	0					
ANR	4101908	ArgumentList	core -> num		4101783	1					
ANR	4101909	Argument	core -> num		4101783	0					
ANR	4101910	PtrMemberAccess	core -> num		4101783	0					
ANR	4101911	Identifier	core		4101783	0					
ANR	4101912	Identifier	num		4101783	1					
ANR	4101913	Argument	input + 1		4101783	1					
ANR	4101914	AdditiveExpression	input + 1		4101783	0		+			
ANR	4101915	Identifier	input		4101783	0					
ANR	4101916	PrimaryExpression	1		4101783	1					
ANR	4101917	BreakStatement	break ;	731:2:21166:21171	4101783	13	True				
ANR	4101918	Label	case 'z' :	732:1:21174:21182	4101783	14	True				
ANR	4101919	ExpressionStatement	"r_core_yank_string ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"	733:2:21194:21268	4101783	15	True				
ANR	4101920	CallExpression	"r_core_yank_string ( core , core -> offset , r_num_math ( core -> num , input + 1 ) )"		4101783	0					
ANR	4101921	Callee	r_core_yank_string		4101783	0					
ANR	4101922	Identifier	r_core_yank_string		4101783	0					
ANR	4101923	ArgumentList	core		4101783	1					
ANR	4101924	Argument	core		4101783	0					
ANR	4101925	Identifier	core		4101783	0					
ANR	4101926	Argument	core -> offset		4101783	1					
ANR	4101927	PtrMemberAccess	core -> offset		4101783	0					
ANR	4101928	Identifier	core		4101783	0					
ANR	4101929	Identifier	offset		4101783	1					
ANR	4101930	Argument	"r_num_math ( core -> num , input + 1 )"		4101783	2					
ANR	4101931	CallExpression	"r_num_math ( core -> num , input + 1 )"		4101783	0					
ANR	4101932	Callee	r_num_math		4101783	0					
ANR	4101933	Identifier	r_num_math		4101783	0					
ANR	4101934	ArgumentList	core -> num		4101783	1					
ANR	4101935	Argument	core -> num		4101783	0					
ANR	4101936	PtrMemberAccess	core -> num		4101783	0					
ANR	4101937	Identifier	core		4101783	0					
ANR	4101938	Identifier	num		4101783	1					
ANR	4101939	Argument	input + 1		4101783	1					
ANR	4101940	AdditiveExpression	input + 1		4101783	0		+			
ANR	4101941	Identifier	input		4101783	0					
ANR	4101942	PrimaryExpression	1		4101783	1					
ANR	4101943	BreakStatement	break ;	734:2:21272:21277	4101783	16	True				
ANR	4101944	Label	case 'w' :	735:1:21280:21288	4101783	17	True				
ANR	4101945	SwitchStatement	switch ( input [ 1 ] )		4101783	18					
ANR	4101946	Condition	input [ 1 ]	736:10:21355:21362	4101783	0	True				
ANR	4101947	ArrayIndexing	input [ 1 ]		4101783	0					
ANR	4101948	Identifier	input		4101783	0					
ANR	4101949	PrimaryExpression	1		4101783	1					
ANR	4101950	CompoundStatement		25:20:694:694	4101783	1					
ANR	4101951	Label	case ' ' :	737:2:21369:21377	4101783	0	True				
ANR	4101952	ExpressionStatement	"r_core_yank_set ( core , 0 , ( const ut8 * ) input + 2 , strlen ( input + 2 ) )"	738:3:21382:21450	4101783	1	True				
ANR	4101953	CallExpression	"r_core_yank_set ( core , 0 , ( const ut8 * ) input + 2 , strlen ( input + 2 ) )"		4101783	0					
ANR	4101954	Callee	r_core_yank_set		4101783	0					
ANR	4101955	Identifier	r_core_yank_set		4101783	0					
ANR	4101956	ArgumentList	core		4101783	1					
ANR	4101957	Argument	core		4101783	0					
ANR	4101958	Identifier	core		4101783	0					
ANR	4101959	Argument	0		4101783	1					
ANR	4101960	PrimaryExpression	0		4101783	0					
ANR	4101961	Argument	( const ut8 * ) input + 2		4101783	2					
ANR	4101962	AdditiveExpression	( const ut8 * ) input + 2		4101783	0		+			
ANR	4101963	CastExpression	( const ut8 * ) input		4101783	0					
ANR	4101964	CastTarget	const ut8 *		4101783	0					
ANR	4101965	Identifier	input		4101783	1					
ANR	4101966	PrimaryExpression	2		4101783	1					
ANR	4101967	Argument	strlen ( input + 2 )		4101783	3					
ANR	4101968	CallExpression	strlen ( input + 2 )		4101783	0					
ANR	4101969	Callee	strlen		4101783	0					
ANR	4101970	Identifier	strlen		4101783	0					
ANR	4101971	ArgumentList	input + 2		4101783	1					
ANR	4101972	Argument	input + 2		4101783	0					
ANR	4101973	AdditiveExpression	input + 2		4101783	0		+			
ANR	4101974	Identifier	input		4101783	0					
ANR	4101975	PrimaryExpression	2		4101783	1					
ANR	4101976	BreakStatement	break ;	739:3:21455:21460	4101783	2	True				
ANR	4101977	Label	case 'x' :	740:2:21464:21472	4101783	3	True				
ANR	4101978	IfStatement	if ( input [ 2 ] == ' ' )		4101783	4					
ANR	4101979	Condition	input [ 2 ] == ' '	741:7:21481:21495	4101783	0	True				
ANR	4101980	EqualityExpression	input [ 2 ] == ' '		4101783	0		==			
ANR	4101981	ArrayIndexing	input [ 2 ]		4101783	0					
ANR	4101982	Identifier	input		4101783	0					
ANR	4101983	PrimaryExpression	2		4101783	1					
ANR	4101984	PrimaryExpression	' '		4101783	1					
ANR	4101985	CompoundStatement		32:4:869:915	4101783	1					
ANR	4101986	IdentifierDeclStatement	char * out = strdup ( input + 3 ) ;	742:4:21504:21534	4101783	0	True				
ANR	4101987	IdentifierDecl	* out = strdup ( input + 3 )		4101783	0					
ANR	4101988	IdentifierDeclType	char *		4101783	0					
ANR	4101989	Identifier	out		4101783	1					
ANR	4101990	AssignmentExpression	* out = strdup ( input + 3 )		4101783	2		=			
ANR	4101991	Identifier	out		4101783	0					
ANR	4101992	CallExpression	strdup ( input + 3 )		4101783	1					
ANR	4101993	Callee	strdup		4101783	0					
ANR	4101994	Identifier	strdup		4101783	0					
ANR	4101995	ArgumentList	input + 3		4101783	1					
ANR	4101996	Argument	input + 3		4101783	0					
ANR	4101997	AdditiveExpression	input + 3		4101783	0		+			
ANR	4101998	Identifier	input		4101783	0					
ANR	4101999	PrimaryExpression	3		4101783	1					
ANR	4102000	IdentifierDeclStatement	"int len = r_hex_str2bin ( input + 3 , ( ut8 * ) out ) ;"	743:4:21540:21586	4101783	1	True				
ANR	4102001	IdentifierDecl	"len = r_hex_str2bin ( input + 3 , ( ut8 * ) out )"		4101783	0					
ANR	4102002	IdentifierDeclType	int		4101783	0					
ANR	4102003	Identifier	len		4101783	1					
ANR	4102004	AssignmentExpression	"len = r_hex_str2bin ( input + 3 , ( ut8 * ) out )"		4101783	2		=			
ANR	4102005	Identifier	len		4101783	0					
ANR	4102006	CallExpression	"r_hex_str2bin ( input + 3 , ( ut8 * ) out )"		4101783	1					
ANR	4102007	Callee	r_hex_str2bin		4101783	0					
ANR	4102008	Identifier	r_hex_str2bin		4101783	0					
ANR	4102009	ArgumentList	input + 3		4101783	1					
ANR	4102010	Argument	input + 3		4101783	0					
ANR	4102011	AdditiveExpression	input + 3		4101783	0		+			
ANR	4102012	Identifier	input		4101783	0					
ANR	4102013	PrimaryExpression	3		4101783	1					
ANR	4102014	Argument	( ut8 * ) out		4101783	1					
ANR	4102015	CastExpression	( ut8 * ) out		4101783	0					
ANR	4102016	CastTarget	ut8 *		4101783	0					
ANR	4102017	Identifier	out		4101783	1					
ANR	4102018	IfStatement	if ( len > 0 )		4101783	2					
ANR	4102019	Condition	len > 0	744:8:21596:21602	4101783	0	True				
ANR	4102020	RelationalExpression	len > 0		4101783	0		>			
ANR	4102021	Identifier	len		4101783	0					
ANR	4102022	PrimaryExpression	0		4101783	1					
ANR	4102023	CompoundStatement		33:17:934:934	4101783	1					
ANR	4102024	ExpressionStatement	"r_core_yank_set ( core , core -> offset , ( const ut8 * ) out , len )"	745:5:21612:21670	4101783	0	True				
ANR	4102025	CallExpression	"r_core_yank_set ( core , core -> offset , ( const ut8 * ) out , len )"		4101783	0					
ANR	4102026	Callee	r_core_yank_set		4101783	0					
ANR	4102027	Identifier	r_core_yank_set		4101783	0					
ANR	4102028	ArgumentList	core		4101783	1					
ANR	4102029	Argument	core		4101783	0					
ANR	4102030	Identifier	core		4101783	0					
ANR	4102031	Argument	core -> offset		4101783	1					
ANR	4102032	PtrMemberAccess	core -> offset		4101783	0					
ANR	4102033	Identifier	core		4101783	0					
ANR	4102034	Identifier	offset		4101783	1					
ANR	4102035	Argument	( const ut8 * ) out		4101783	2					
ANR	4102036	CastExpression	( const ut8 * ) out		4101783	0					
ANR	4102037	CastTarget	const ut8 *		4101783	0					
ANR	4102038	Identifier	out		4101783	1					
ANR	4102039	Argument	len		4101783	3					
ANR	4102040	Identifier	len		4101783	0					
ANR	4102041	ElseStatement	else		4101783	0					
ANR	4102042	CompoundStatement		35:11:1012:1012	4101783	0					
ANR	4102043	ExpressionStatement	"eprintf ( ""Invalid length\\n"" )"	747:5:21690:21718	4101783	0	True				
ANR	4102044	CallExpression	"eprintf ( ""Invalid length\\n"" )"		4101783	0					
ANR	4102045	Callee	eprintf		4101783	0					
ANR	4102046	Identifier	eprintf		4101783	0					
ANR	4102047	ArgumentList	"""Invalid length\\n"""		4101783	1					
ANR	4102048	Argument	"""Invalid length\\n"""		4101783	0					
ANR	4102049	PrimaryExpression	"""Invalid length\\n"""		4101783	0					
ANR	4102050	ExpressionStatement	free ( out )	749:4:21730:21740	4101783	3	True				
ANR	4102051	CallExpression	free ( out )		4101783	0					
ANR	4102052	Callee	free		4101783	0					
ANR	4102053	Identifier	free		4101783	0					
ANR	4102054	ArgumentList	out		4101783	1					
ANR	4102055	Argument	out		4101783	0					
ANR	4102056	Identifier	out		4101783	0					
ANR	4102057	ElseStatement	else		4101783	0					
ANR	4102058	CompoundStatement		39:10:1081:1081	4101783	0					
ANR	4102059	ExpressionStatement	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"	751:4:21758:21793	4101783	0	True				
ANR	4102060	CallExpression	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"		4101783	0					
ANR	4102061	Callee	eprintf		4101783	0					
ANR	4102062	Identifier	eprintf		4101783	0					
ANR	4102063	ArgumentList	"""Usage: ywx [hexpairs]\\n"""		4101783	1					
ANR	4102064	Argument	"""Usage: ywx [hexpairs]\\n"""		4101783	0					
ANR	4102065	PrimaryExpression	"""Usage: ywx [hexpairs]\\n"""		4101783	0					
ANR	4102066	BreakStatement	break ;	754:3:21850:21855	4101783	5	True				
ANR	4102067	Label	default :	755:2:21859:21866	4101783	6	True				
ANR	4102068	Identifier	default		4101783	0					
ANR	4102069	ExpressionStatement	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"	756:3:21871:21906	4101783	7	True				
ANR	4102070	CallExpression	"eprintf ( ""Usage: ywx [hexpairs]\\n"" )"		4101783	0					
ANR	4102071	Callee	eprintf		4101783	0					
ANR	4102072	Identifier	eprintf		4101783	0					
ANR	4102073	ArgumentList	"""Usage: ywx [hexpairs]\\n"""		4101783	1					
ANR	4102074	Argument	"""Usage: ywx [hexpairs]\\n"""		4101783	0					
ANR	4102075	PrimaryExpression	"""Usage: ywx [hexpairs]\\n"""		4101783	0					
ANR	4102076	BreakStatement	break ;	757:3:21911:21916	4101783	8	True				
ANR	4102077	BreakStatement	break ;	759:2:21924:21929	4101783	19	True				
ANR	4102078	Label	case 'p' :	760:1:21932:21940	4101783	20	True				
ANR	4102079	ExpressionStatement	"r_core_yank_cat ( core , r_num_math ( core -> num , input + 1 ) )"	761:2:21952:22009	4101783	21	True				
ANR	4102080	CallExpression	"r_core_yank_cat ( core , r_num_math ( core -> num , input + 1 ) )"		4101783	0					
ANR	4102081	Callee	r_core_yank_cat		4101783	0					
ANR	4102082	Identifier	r_core_yank_cat		4101783	0					
ANR	4102083	ArgumentList	core		4101783	1					
ANR	4102084	Argument	core		4101783	0					
ANR	4102085	Identifier	core		4101783	0					
ANR	4102086	Argument	"r_num_math ( core -> num , input + 1 )"		4101783	1					
ANR	4102087	CallExpression	"r_num_math ( core -> num , input + 1 )"		4101783	0					
ANR	4102088	Callee	r_num_math		4101783	0					
ANR	4102089	Identifier	r_num_math		4101783	0					
ANR	4102090	ArgumentList	core -> num		4101783	1					
ANR	4102091	Argument	core -> num		4101783	0					
ANR	4102092	PtrMemberAccess	core -> num		4101783	0					
ANR	4102093	Identifier	core		4101783	0					
ANR	4102094	Identifier	num		4101783	1					
ANR	4102095	Argument	input + 1		4101783	1					
ANR	4102096	AdditiveExpression	input + 1		4101783	0		+			
ANR	4102097	Identifier	input		4101783	0					
ANR	4102098	PrimaryExpression	1		4101783	1					
ANR	4102099	BreakStatement	break ;	762:2:22013:22018	4101783	22	True				
ANR	4102100	Label	case 's' :	763:1:22021:22029	4101783	23	True				
ANR	4102101	ExpressionStatement	"r_core_yank_cat_string ( core , r_num_math ( core -> num , input + 1 ) )"	764:2:22041:22105	4101783	24	True				
ANR	4102102	CallExpression	"r_core_yank_cat_string ( core , r_num_math ( core -> num , input + 1 ) )"		4101783	0					
ANR	4102103	Callee	r_core_yank_cat_string		4101783	0					
ANR	4102104	Identifier	r_core_yank_cat_string		4101783	0					
ANR	4102105	ArgumentList	core		4101783	1					
ANR	4102106	Argument	core		4101783	0					
ANR	4102107	Identifier	core		4101783	0					
ANR	4102108	Argument	"r_num_math ( core -> num , input + 1 )"		4101783	1					
ANR	4102109	CallExpression	"r_num_math ( core -> num , input + 1 )"		4101783	0					
ANR	4102110	Callee	r_num_math		4101783	0					
ANR	4102111	Identifier	r_num_math		4101783	0					
ANR	4102112	ArgumentList	core -> num		4101783	1					
ANR	4102113	Argument	core -> num		4101783	0					
ANR	4102114	PtrMemberAccess	core -> num		4101783	0					
ANR	4102115	Identifier	core		4101783	0					
ANR	4102116	Identifier	num		4101783	1					
ANR	4102117	Argument	input + 1		4101783	1					
ANR	4102118	AdditiveExpression	input + 1		4101783	0		+			
ANR	4102119	Identifier	input		4101783	0					
ANR	4102120	PrimaryExpression	1		4101783	1					
ANR	4102121	BreakStatement	break ;	765:2:22109:22114	4101783	25	True				
ANR	4102122	Label	case 't' :	766:1:22117:22125	4101783	26	True				
ANR	4102123	IfStatement	if ( input [ 1 ] == 'f' )		4101783	27					
ANR	4102124	Condition	input [ 1 ] == 'f'	767:6:22141:22155	4101783	0	True				
ANR	4102125	EqualityExpression	input [ 1 ] == 'f'		4101783	0		==			
ANR	4102126	ArrayIndexing	input [ 1 ]		4101783	0					
ANR	4102127	Identifier	input		4101783	0					
ANR	4102128	PrimaryExpression	1		4101783	1					
ANR	4102129	PrimaryExpression	'f'		4101783	1					
ANR	4102130	CompoundStatement		59:3:1565:1617	4101783	1					
ANR	4102131	IdentifierDeclStatement	ut64 tmpsz ;	768:3:22172:22182	4101783	0	True				
ANR	4102132	IdentifierDecl	tmpsz		4101783	0					
ANR	4102133	IdentifierDeclType	ut64		4101783	0					
ANR	4102134	Identifier	tmpsz		4101783	1					
ANR	4102135	IdentifierDeclStatement	const char * file = r_str_trim_ro ( input + 2 ) ;	769:3:22187:22231	4101783	1	True				
ANR	4102136	IdentifierDecl	* file = r_str_trim_ro ( input + 2 )		4101783	0					
ANR	4102137	IdentifierDeclType	const char *		4101783	0					
ANR	4102138	Identifier	file		4101783	1					
ANR	4102139	AssignmentExpression	* file = r_str_trim_ro ( input + 2 )		4101783	2		=			
ANR	4102140	Identifier	file		4101783	0					
ANR	4102141	CallExpression	r_str_trim_ro ( input + 2 )		4101783	1					
ANR	4102142	Callee	r_str_trim_ro		4101783	0					
ANR	4102143	Identifier	r_str_trim_ro		4101783	0					
ANR	4102144	ArgumentList	input + 2		4101783	1					
ANR	4102145	Argument	input + 2		4101783	0					
ANR	4102146	AdditiveExpression	input + 2		4101783	0		+			
ANR	4102147	Identifier	input		4101783	0					
ANR	4102148	PrimaryExpression	2		4101783	1					
ANR	4102149	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( core -> yank_buf , & tmpsz ) ;"	770:3:22236:22288	4101783	2	True				
ANR	4102150	IdentifierDecl	"* tmp = r_buf_data ( core -> yank_buf , & tmpsz )"		4101783	0					
ANR	4102151	IdentifierDeclType	const ut8 *		4101783	0					
ANR	4102152	Identifier	tmp		4101783	1					
ANR	4102153	AssignmentExpression	"* tmp = r_buf_data ( core -> yank_buf , & tmpsz )"		4101783	2		=			
ANR	4102154	Identifier	tmp		4101783	0					
ANR	4102155	CallExpression	"r_buf_data ( core -> yank_buf , & tmpsz )"		4101783	1					
ANR	4102156	Callee	r_buf_data		4101783	0					
ANR	4102157	Identifier	r_buf_data		4101783	0					
ANR	4102158	ArgumentList	core -> yank_buf		4101783	1					
ANR	4102159	Argument	core -> yank_buf		4101783	0					
ANR	4102160	PtrMemberAccess	core -> yank_buf		4101783	0					
ANR	4102161	Identifier	core		4101783	0					
ANR	4102162	Identifier	yank_buf		4101783	1					
ANR	4102163	Argument	& tmpsz		4101783	1					
ANR	4102164	UnaryOperationExpression	& tmpsz		4101783	0					
ANR	4102165	UnaryOperator	&		4101783	0					
ANR	4102166	Identifier	tmpsz		4101783	1					
ANR	4102167	IfStatement	"if ( ! r_file_dump ( file , tmp , tmpsz , false ) )"		4101783	3					
ANR	4102168	Condition	"! r_file_dump ( file , tmp , tmpsz , false )"	771:7:22297:22334	4101783	0	True				
ANR	4102169	UnaryOperationExpression	"! r_file_dump ( file , tmp , tmpsz , false )"		4101783	0					
ANR	4102170	UnaryOperator	!		4101783	0					
ANR	4102171	CallExpression	"r_file_dump ( file , tmp , tmpsz , false )"		4101783	1					
ANR	4102172	Callee	r_file_dump		4101783	0					
ANR	4102173	Identifier	r_file_dump		4101783	0					
ANR	4102174	ArgumentList	file		4101783	1					
ANR	4102175	Argument	file		4101783	0					
ANR	4102176	Identifier	file		4101783	0					
ANR	4102177	Argument	tmp		4101783	1					
ANR	4102178	Identifier	tmp		4101783	0					
ANR	4102179	Argument	tmpsz		4101783	2					
ANR	4102180	Identifier	tmpsz		4101783	0					
ANR	4102181	Argument	false		4101783	3					
ANR	4102182	Identifier	false		4101783	0					
ANR	4102183	CompoundStatement		60:47:1666:1666	4101783	1					
ANR	4102184	ExpressionStatement	"eprintf ( ""Cannot dump to '%s'\\n"" , file )"	772:4:22343:22382	4101783	0	True				
ANR	4102185	CallExpression	"eprintf ( ""Cannot dump to '%s'\\n"" , file )"		4101783	0					
ANR	4102186	Callee	eprintf		4101783	0					
ANR	4102187	Identifier	eprintf		4101783	0					
ANR	4102188	ArgumentList	"""Cannot dump to '%s'\\n"""		4101783	1					
ANR	4102189	Argument	"""Cannot dump to '%s'\\n"""		4101783	0					
ANR	4102190	PrimaryExpression	"""Cannot dump to '%s'\\n"""		4101783	0					
ANR	4102191	Argument	file		4101783	1					
ANR	4102192	Identifier	file		4101783	0					
ANR	4102193	ElseStatement	else		4101783	0					
ANR	4102194	IfStatement	if ( input [ 1 ] == ' ' )		4101783	0					
ANR	4102195	Condition	input [ 1 ] == ' '	774:13:22402:22416	4101783	0	True				
ANR	4102196	EqualityExpression	input [ 1 ] == ' '		4101783	0		==			
ANR	4102197	ArrayIndexing	input [ 1 ]		4101783	0					
ANR	4102198	Identifier	input		4101783	0					
ANR	4102199	PrimaryExpression	1		4101783	1					
ANR	4102200	PrimaryExpression	' '		4101783	1					
ANR	4102201	CompoundStatement		63:30:1748:1748	4101783	1					
ANR	4102202	ExpressionStatement	"r_core_yank_to ( core , input + 1 )"	775:3:22424:22456	4101783	0	True				
ANR	4102203	CallExpression	"r_core_yank_to ( core , input + 1 )"		4101783	0					
ANR	4102204	Callee	r_core_yank_to		4101783	0					
ANR	4102205	Identifier	r_core_yank_to		4101783	0					
ANR	4102206	ArgumentList	core		4101783	1					
ANR	4102207	Argument	core		4101783	0					
ANR	4102208	Identifier	core		4101783	0					
ANR	4102209	Argument	input + 1		4101783	1					
ANR	4102210	AdditiveExpression	input + 1		4101783	0		+			
ANR	4102211	Identifier	input		4101783	0					
ANR	4102212	PrimaryExpression	1		4101783	1					
ANR	4102213	ElseStatement	else		4101783	0					
ANR	4102214	CompoundStatement		65:9:1796:1796	4101783	0					
ANR	4102215	ExpressionStatement	"eprintf ( ""Usage: wt[f] [arg] ..\\n"" )"	777:3:22472:22507	4101783	0	True				
ANR	4102216	CallExpression	"eprintf ( ""Usage: wt[f] [arg] ..\\n"" )"		4101783	0					
ANR	4102217	Callee	eprintf		4101783	0					
ANR	4102218	Identifier	eprintf		4101783	0					
ANR	4102219	ArgumentList	"""Usage: wt[f] [arg] ..\\n"""		4101783	1					
ANR	4102220	Argument	"""Usage: wt[f] [arg] ..\\n"""		4101783	0					
ANR	4102221	PrimaryExpression	"""Usage: wt[f] [arg] ..\\n"""		4101783	0					
ANR	4102222	BreakStatement	break ;	779:2:22515:22520	4101783	28	True				
ANR	4102223	Label	case 'f' :	780:1:22523:22531	4101783	29	True				
ANR	4102224	SwitchStatement	switch ( input [ 1 ] )		4101783	30					
ANR	4102225	Condition	input [ 1 ]	781:10:22551:22558	4101783	0	True				
ANR	4102226	ArrayIndexing	input [ 1 ]		4101783	0					
ANR	4102227	Identifier	input		4101783	0					
ANR	4102228	PrimaryExpression	1		4101783	1					
ANR	4102229	CompoundStatement		70:20:1890:1890	4101783	1					
ANR	4102230	Label	case ' ' :	782:2:22565:22573	4101783	0	True				
ANR	4102231	ExpressionStatement	"r_core_yank_file_ex ( core , input + 1 )"	783:3:22586:22623	4101783	1	True				
ANR	4102232	CallExpression	"r_core_yank_file_ex ( core , input + 1 )"		4101783	0					
ANR	4102233	Callee	r_core_yank_file_ex		4101783	0					
ANR	4102234	Identifier	r_core_yank_file_ex		4101783	0					
ANR	4102235	ArgumentList	core		4101783	1					
ANR	4102236	Argument	core		4101783	0					
ANR	4102237	Identifier	core		4101783	0					
ANR	4102238	Argument	input + 1		4101783	1					
ANR	4102239	AdditiveExpression	input + 1		4101783	0		+			
ANR	4102240	Identifier	input		4101783	0					
ANR	4102241	PrimaryExpression	1		4101783	1					
ANR	4102242	BreakStatement	break ;	784:3:22628:22633	4101783	2	True				
ANR	4102243	Label	case 'x' :	785:2:22637:22645	4101783	3	True				
ANR	4102244	ExpressionStatement	"r_core_yank_hexpair ( core , input + 2 )"	786:3:22659:22696	4101783	4	True				
ANR	4102245	CallExpression	"r_core_yank_hexpair ( core , input + 2 )"		4101783	0					
ANR	4102246	Callee	r_core_yank_hexpair		4101783	0					
ANR	4102247	Identifier	r_core_yank_hexpair		4101783	0					
ANR	4102248	ArgumentList	core		4101783	1					
ANR	4102249	Argument	core		4101783	0					
ANR	4102250	Identifier	core		4101783	0					
ANR	4102251	Argument	input + 2		4101783	1					
ANR	4102252	AdditiveExpression	input + 2		4101783	0		+			
ANR	4102253	Identifier	input		4101783	0					
ANR	4102254	PrimaryExpression	2		4101783	1					
ANR	4102255	BreakStatement	break ;	787:3:22701:22706	4101783	5	True				
ANR	4102256	Label	case 'a' :	788:2:22710:22718	4101783	6	True				
ANR	4102257	ExpressionStatement	"r_core_yank_file_all ( core , input + 2 )"	789:3:22732:22770	4101783	7	True				
ANR	4102258	CallExpression	"r_core_yank_file_all ( core , input + 2 )"		4101783	0					
ANR	4102259	Callee	r_core_yank_file_all		4101783	0					
ANR	4102260	Identifier	r_core_yank_file_all		4101783	0					
ANR	4102261	ArgumentList	core		4101783	1					
ANR	4102262	Argument	core		4101783	0					
ANR	4102263	Identifier	core		4101783	0					
ANR	4102264	Argument	input + 2		4101783	1					
ANR	4102265	AdditiveExpression	input + 2		4101783	0		+			
ANR	4102266	Identifier	input		4101783	0					
ANR	4102267	PrimaryExpression	2		4101783	1					
ANR	4102268	BreakStatement	break ;	790:3:22775:22780	4101783	8	True				
ANR	4102269	Label	default :	791:2:22784:22791	4101783	9	True				
ANR	4102270	Identifier	default		4101783	0					
ANR	4102271	ExpressionStatement	"eprintf ( ""Usage: yf[xa] [arg]\\n"" )"	792:3:22796:22829	4101783	10	True				
ANR	4102272	CallExpression	"eprintf ( ""Usage: yf[xa] [arg]\\n"" )"		4101783	0					
ANR	4102273	Callee	eprintf		4101783	0					
ANR	4102274	Identifier	eprintf		4101783	0					
ANR	4102275	ArgumentList	"""Usage: yf[xa] [arg]\\n"""		4101783	1					
ANR	4102276	Argument	"""Usage: yf[xa] [arg]\\n"""		4101783	0					
ANR	4102277	PrimaryExpression	"""Usage: yf[xa] [arg]\\n"""		4101783	0					
ANR	4102278	ExpressionStatement	"eprintf ( ""yf [file]     - copy blocksize from file into the clipboard\\n"" )"	793:3:22834:22907	4101783	11	True				
ANR	4102279	CallExpression	"eprintf ( ""yf [file]     - copy blocksize from file into the clipboard\\n"" )"		4101783	0					
ANR	4102280	Callee	eprintf		4101783	0					
ANR	4102281	Identifier	eprintf		4101783	0					
ANR	4102282	ArgumentList	"""yf [file]     - copy blocksize from file into the clipboard\\n"""		4101783	1					
ANR	4102283	Argument	"""yf [file]     - copy blocksize from file into the clipboard\\n"""		4101783	0					
ANR	4102284	PrimaryExpression	"""yf [file]     - copy blocksize from file into the clipboard\\n"""		4101783	0					
ANR	4102285	ExpressionStatement	"eprintf ( ""yfa [path]    - yank the whole file\\n"" )"	794:3:22912:22961	4101783	12	True				
ANR	4102286	CallExpression	"eprintf ( ""yfa [path]    - yank the whole file\\n"" )"		4101783	0					
ANR	4102287	Callee	eprintf		4101783	0					
ANR	4102288	Identifier	eprintf		4101783	0					
ANR	4102289	ArgumentList	"""yfa [path]    - yank the whole file\\n"""		4101783	1					
ANR	4102290	Argument	"""yfa [path]    - yank the whole file\\n"""		4101783	0					
ANR	4102291	PrimaryExpression	"""yfa [path]    - yank the whole file\\n"""		4101783	0					
ANR	4102292	ExpressionStatement	"eprintf ( ""yfx [hexpair] - yank from hexpair string\\n"" )"	795:3:22966:23020	4101783	13	True				
ANR	4102293	CallExpression	"eprintf ( ""yfx [hexpair] - yank from hexpair string\\n"" )"		4101783	0					
ANR	4102294	Callee	eprintf		4101783	0					
ANR	4102295	Identifier	eprintf		4101783	0					
ANR	4102296	ArgumentList	"""yfx [hexpair] - yank from hexpair string\\n"""		4101783	1					
ANR	4102297	Argument	"""yfx [hexpair] - yank from hexpair string\\n"""		4101783	0					
ANR	4102298	PrimaryExpression	"""yfx [hexpair] - yank from hexpair string\\n"""		4101783	0					
ANR	4102299	BreakStatement	break ;	796:3:23025:23030	4101783	14	True				
ANR	4102300	BreakStatement	break ;	798:2:23038:23043	4101783	31	True				
ANR	4102301	Label	case '!' :	799:1:23046:23054	4101783	32	True				
ANR	4102302	CompoundStatement		95:3:2523:2567	4101783	33					
ANR	4102303	IdentifierDeclStatement	"char * sig = r_core_cmd_str ( core , ""y*"" ) ;"	801:3:23071:23110	4101783	0	True				
ANR	4102304	IdentifierDecl	"* sig = r_core_cmd_str ( core , ""y*"" )"		4101783	0					
ANR	4102305	IdentifierDeclType	char *		4101783	0					
ANR	4102306	Identifier	sig		4101783	1					
ANR	4102307	AssignmentExpression	"* sig = r_core_cmd_str ( core , ""y*"" )"		4101783	2		=			
ANR	4102308	Identifier	sig		4101783	0					
ANR	4102309	CallExpression	"r_core_cmd_str ( core , ""y*"" )"		4101783	1					
ANR	4102310	Callee	r_core_cmd_str		4101783	0					
ANR	4102311	Identifier	r_core_cmd_str		4101783	0					
ANR	4102312	ArgumentList	core		4101783	1					
ANR	4102313	Argument	core		4101783	0					
ANR	4102314	Identifier	core		4101783	0					
ANR	4102315	Argument	"""y*"""		4101783	1					
ANR	4102316	PrimaryExpression	"""y*"""		4101783	0					
ANR	4102317	IfStatement	if ( ! sig || ! * sig )		4101783	1					
ANR	4102318	Condition	! sig || ! * sig	802:7:23119:23131	4101783	0	True				
ANR	4102319	OrExpression	! sig || ! * sig		4101783	0		||			
ANR	4102320	UnaryOperationExpression	! sig		4101783	0					
ANR	4102321	UnaryOperator	!		4101783	0					
ANR	4102322	Identifier	sig		4101783	1					
ANR	4102323	UnaryOperationExpression	! * sig		4101783	1					
ANR	4102324	UnaryOperator	!		4101783	0					
ANR	4102325	UnaryOperationExpression	* sig		4101783	1					
ANR	4102326	UnaryOperator	*		4101783	0					
ANR	4102327	Identifier	sig		4101783	1					
ANR	4102328	CompoundStatement		91:22:2463:2463	4101783	1					
ANR	4102329	ExpressionStatement	free ( sig )	803:4:23140:23150	4101783	0	True				
ANR	4102330	CallExpression	free ( sig )		4101783	0					
ANR	4102331	Callee	free		4101783	0					
ANR	4102332	Identifier	free		4101783	0					
ANR	4102333	ArgumentList	sig		4101783	1					
ANR	4102334	Argument	sig		4101783	0					
ANR	4102335	Identifier	sig		4101783	0					
ANR	4102336	ExpressionStatement	"sig = strdup ( ""wx 10203040"" )"	804:4:23156:23184	4101783	1	True				
ANR	4102337	AssignmentExpression	"sig = strdup ( ""wx 10203040"" )"		4101783	0		=			
ANR	4102338	Identifier	sig		4101783	0					
ANR	4102339	CallExpression	"strdup ( ""wx 10203040"" )"		4101783	1					
ANR	4102340	Callee	strdup		4101783	0					
ANR	4102341	Identifier	strdup		4101783	0					
ANR	4102342	ArgumentList	"""wx 10203040"""		4101783	1					
ANR	4102343	Argument	"""wx 10203040"""		4101783	0					
ANR	4102344	PrimaryExpression	"""wx 10203040"""		4101783	0					
ANR	4102345	IdentifierDeclStatement	"char * data = r_core_editor ( core , NULL , sig ) ;"	806:3:23194:23238	4101783	2	True				
ANR	4102346	IdentifierDecl	"* data = r_core_editor ( core , NULL , sig )"		4101783	0					
ANR	4102347	IdentifierDeclType	char *		4101783	0					
ANR	4102348	Identifier	data		4101783	1					
ANR	4102349	AssignmentExpression	"* data = r_core_editor ( core , NULL , sig )"		4101783	2		=			
ANR	4102350	Identifier	data		4101783	0					
ANR	4102351	CallExpression	"r_core_editor ( core , NULL , sig )"		4101783	1					
ANR	4102352	Callee	r_core_editor		4101783	0					
ANR	4102353	Identifier	r_core_editor		4101783	0					
ANR	4102354	ArgumentList	core		4101783	1					
ANR	4102355	Argument	core		4101783	0					
ANR	4102356	Identifier	core		4101783	0					
ANR	4102357	Argument	NULL		4101783	1					
ANR	4102358	Identifier	NULL		4101783	0					
ANR	4102359	Argument	sig		4101783	2					
ANR	4102360	Identifier	sig		4101783	0					
ANR	4102361	ExpressionStatement	"( void ) strtok ( data , "";\\n"" )"	807:3:23243:23270	4101783	3	True				
ANR	4102362	CastExpression	"( void ) strtok ( data , "";\\n"" )"		4101783	0					
ANR	4102363	CastTarget	void		4101783	0					
ANR	4102364	CallExpression	"strtok ( data , "";\\n"" )"		4101783	1					
ANR	4102365	Callee	strtok		4101783	0					
ANR	4102366	Identifier	strtok		4101783	0					
ANR	4102367	ArgumentList	data		4101783	1					
ANR	4102368	Argument	data		4101783	0					
ANR	4102369	Identifier	data		4101783	0					
ANR	4102370	Argument	""";\\n"""		4101783	1					
ANR	4102371	PrimaryExpression	""";\\n"""		4101783	0					
ANR	4102372	ExpressionStatement	"r_core_cmdf ( core , ""y%s"" , data )"	808:3:23275:23306	4101783	4	True				
ANR	4102373	CallExpression	"r_core_cmdf ( core , ""y%s"" , data )"		4101783	0					
ANR	4102374	Callee	r_core_cmdf		4101783	0					
ANR	4102375	Identifier	r_core_cmdf		4101783	0					
ANR	4102376	ArgumentList	core		4101783	1					
ANR	4102377	Argument	core		4101783	0					
ANR	4102378	Identifier	core		4101783	0					
ANR	4102379	Argument	"""y%s"""		4101783	1					
ANR	4102380	PrimaryExpression	"""y%s"""		4101783	0					
ANR	4102381	Argument	data		4101783	2					
ANR	4102382	Identifier	data		4101783	0					
ANR	4102383	ExpressionStatement	free ( sig )	809:3:23311:23321	4101783	5	True				
ANR	4102384	CallExpression	free ( sig )		4101783	0					
ANR	4102385	Callee	free		4101783	0					
ANR	4102386	Identifier	free		4101783	0					
ANR	4102387	ArgumentList	sig		4101783	1					
ANR	4102388	Argument	sig		4101783	0					
ANR	4102389	Identifier	sig		4101783	0					
ANR	4102390	ExpressionStatement	free ( data )	810:3:23326:23337	4101783	6	True				
ANR	4102391	CallExpression	free ( data )		4101783	0					
ANR	4102392	Callee	free		4101783	0					
ANR	4102393	Identifier	free		4101783	0					
ANR	4102394	ArgumentList	data		4101783	1					
ANR	4102395	Argument	data		4101783	0					
ANR	4102396	Identifier	data		4101783	0					
ANR	4102397	BreakStatement	break ;	812:2:23345:23350	4101783	34	True				
ANR	4102398	Label	case '*' :	813:1:23353:23361	4101783	35	True				
ANR	4102399	Label	case 'j' :	814:1:23372:23380	4101783	36	True				
ANR	4102400	Label	case 'q' :	815:1:23391:23399	4101783	37	True				
ANR	4102401	Label	case '\\0' :	816:1:23410:23419	4101783	38	True				
ANR	4102402	ExpressionStatement	"r_core_yank_dump ( core , 0 , input [ 0 ] )"	817:2:23430:23466	4101783	39	True				
ANR	4102403	CallExpression	"r_core_yank_dump ( core , 0 , input [ 0 ] )"		4101783	0					
ANR	4102404	Callee	r_core_yank_dump		4101783	0					
ANR	4102405	Identifier	r_core_yank_dump		4101783	0					
ANR	4102406	ArgumentList	core		4101783	1					
ANR	4102407	Argument	core		4101783	0					
ANR	4102408	Identifier	core		4101783	0					
ANR	4102409	Argument	0		4101783	1					
ANR	4102410	PrimaryExpression	0		4101783	0					
ANR	4102411	Argument	input [ 0 ]		4101783	2					
ANR	4102412	ArrayIndexing	input [ 0 ]		4101783	0					
ANR	4102413	Identifier	input		4101783	0					
ANR	4102414	PrimaryExpression	0		4101783	1					
ANR	4102415	BreakStatement	break ;	818:2:23470:23475	4101783	40	True				
ANR	4102416	Label	default :	819:1:23478:23485	4101783	41	True				
ANR	4102417	Identifier	default		4101783	0					
ANR	4102418	ExpressionStatement	"r_core_cmd_help ( core , help_msg_y )"	820:2:23489:23523	4101783	42	True				
ANR	4102419	CallExpression	"r_core_cmd_help ( core , help_msg_y )"		4101783	0					
ANR	4102420	Callee	r_core_cmd_help		4101783	0					
ANR	4102421	Identifier	r_core_cmd_help		4101783	0					
ANR	4102422	ArgumentList	core		4101783	1					
ANR	4102423	Argument	core		4101783	0					
ANR	4102424	Identifier	core		4101783	0					
ANR	4102425	Argument	help_msg_y		4101783	1					
ANR	4102426	Identifier	help_msg_y		4101783	0					
ANR	4102427	BreakStatement	break ;	821:2:23527:23532	4101783	43	True				
ANR	4102428	ReturnStatement	return true ;	823:1:23538:23549	4101783	3	True				
ANR	4102429	Identifier	true		4101783	0					
ANR	4102430	ReturnType	static int		4101783	1					
ANR	4102431	Identifier	cmd_yank		4101783	2					
ANR	4102432	ParameterList	"void * data , const char * input"		4101783	3					
ANR	4102433	Parameter	void * data	712:20:20639:20648	4101783	0	True				
ANR	4102434	ParameterType	void *		4101783	0					
ANR	4102435	Identifier	data		4101783	1					
ANR	4102436	Parameter	const char * input	712:32:20651:20667	4101783	1	True				
ANR	4102437	ParameterType	const char *		4101783	0					
ANR	4102438	Identifier	input		4101783	1					
ANR	4102439	CFGEntryNode	ENTRY		4101783		True				
ANR	4102440	CFGExitNode	EXIT		4101783		True				
ANR	4102441	Symbol	r_core_cmd_str		4101783						
ANR	4102442	Symbol	data		4101783						
ANR	4102443	Symbol	* input		4101783						
ANR	4102444	Symbol	* core		4101783						
ANR	4102445	Symbol	core -> offset		4101783						
ANR	4102446	Symbol	core -> num -> value		4101783						
ANR	4102447	Symbol	r_num_math		4101783						
ANR	4102448	Symbol	out		4101783						
ANR	4102449	Symbol	sig		4101783						
ANR	4102450	Symbol	strlen		4101783						
ANR	4102451	Symbol	file		4101783						
ANR	4102452	Symbol	len		4101783						
ANR	4102453	Symbol	tmp		4101783						
ANR	4102454	Symbol	r_file_dump		4101783						
ANR	4102455	Symbol	& tmpsz		4101783						
ANR	4102456	Symbol	* core -> num		4101783						
ANR	4102457	Symbol	r_core_editor		4101783						
ANR	4102458	Symbol	core -> num		4101783						
ANR	4102459	Symbol	r_hex_str2bin		4101783						
ANR	4102460	Symbol	help_msg_y		4101783						
ANR	4102461	Symbol	* * core		4101783						
ANR	4102462	Symbol	r_buf_data		4101783						
ANR	4102463	Symbol	NULL		4101783						
ANR	4102464	Symbol	false		4101783						
ANR	4102465	Symbol	tmpsz		4101783						
ANR	4102466	Symbol	n		4101783						
ANR	4102467	Symbol	input		4101783						
ANR	4102468	Symbol	core		4101783						
ANR	4102469	Symbol	core -> yank_buf		4101783						
ANR	4102470	Symbol	r_str_trim_ro		4101783						
ANR	4102471	Symbol	true		4101783						
ANR	4102472	Symbol	strdup		4101783						
ANR	4102473	Symbol	* sig		4101783						
ANR	4102474	Symbol	r_buf_size		4101783						
ANR	4102475	Function	lang_run_file	826:0:23554:23704							
ANR	4102476	FunctionDef	"lang_run_file (RCore * core , RLang * lang , const char * file)"		4102475	0					
ANR	4102477	CompoundStatement		826:69:23623:23704	4102475	0					
ANR	4102478	ExpressionStatement	"r_core_sysenv_begin ( core , NULL )"	827:1:23626:23658	4102475	0	True				
ANR	4102479	CallExpression	"r_core_sysenv_begin ( core , NULL )"		4102475	0					
ANR	4102480	Callee	r_core_sysenv_begin		4102475	0					
ANR	4102481	Identifier	r_core_sysenv_begin		4102475	0					
ANR	4102482	ArgumentList	core		4102475	1					
ANR	4102483	Argument	core		4102475	0					
ANR	4102484	Identifier	core		4102475	0					
ANR	4102485	Argument	NULL		4102475	1					
ANR	4102486	Identifier	NULL		4102475	0					
ANR	4102487	ReturnStatement	"return r_lang_run_file ( core -> lang , file ) ;"	828:1:23661:23702	4102475	1	True				
ANR	4102488	CallExpression	"r_lang_run_file ( core -> lang , file )"		4102475	0					
ANR	4102489	Callee	r_lang_run_file		4102475	0					
ANR	4102490	Identifier	r_lang_run_file		4102475	0					
ANR	4102491	ArgumentList	core -> lang		4102475	1					
ANR	4102492	Argument	core -> lang		4102475	0					
ANR	4102493	PtrMemberAccess	core -> lang		4102475	0					
ANR	4102494	Identifier	core		4102475	0					
ANR	4102495	Identifier	lang		4102475	1					
ANR	4102496	Argument	file		4102475	1					
ANR	4102497	Identifier	file		4102475	0					
ANR	4102498	ReturnType	static int		4102475	1					
ANR	4102499	Identifier	lang_run_file		4102475	2					
ANR	4102500	ParameterList	"RCore * core , RLang * lang , const char * file"		4102475	3					
ANR	4102501	Parameter	RCore * core	826:25:23579:23589	4102475	0	True				
ANR	4102502	ParameterType	RCore *		4102475	0					
ANR	4102503	Identifier	core		4102475	1					
ANR	4102504	Parameter	RLang * lang	826:38:23592:23602	4102475	1	True				
ANR	4102505	ParameterType	RLang *		4102475	0					
ANR	4102506	Identifier	lang		4102475	1					
ANR	4102507	Parameter	const char * file	826:51:23605:23620	4102475	2	True				
ANR	4102508	ParameterType	const char *		4102475	0					
ANR	4102509	Identifier	file		4102475	1					
ANR	4102510	CFGEntryNode	ENTRY		4102475		True				
ANR	4102511	CFGExitNode	EXIT		4102475		True				
ANR	4102512	Symbol	core		4102475						
ANR	4102513	Symbol	file		4102475						
ANR	4102514	Symbol	NULL		4102475						
ANR	4102515	Symbol	* core		4102475						
ANR	4102516	Symbol	r_lang_run_file		4102475						
ANR	4102517	Symbol	lang		4102475						
ANR	4102518	Symbol	core -> lang		4102475						
ANR	4102519	Function	langFromHashbang	831:0:23707:24239							
ANR	4102520	FunctionDef	"langFromHashbang (RCore * core , const char * file)"		4102519	0					
ANR	4102521	CompoundStatement		831:61:23768:24239	4102519	0					
ANR	4102522	IdentifierDeclStatement	"int fd = r_sandbox_open ( file , O_RDONLY , 0 ) ;"	832:1:23771:23814	4102519	0	True				
ANR	4102523	IdentifierDecl	"fd = r_sandbox_open ( file , O_RDONLY , 0 )"		4102519	0					
ANR	4102524	IdentifierDeclType	int		4102519	0					
ANR	4102525	Identifier	fd		4102519	1					
ANR	4102526	AssignmentExpression	"fd = r_sandbox_open ( file , O_RDONLY , 0 )"		4102519	2		=			
ANR	4102527	Identifier	fd		4102519	0					
ANR	4102528	CallExpression	"r_sandbox_open ( file , O_RDONLY , 0 )"		4102519	1					
ANR	4102529	Callee	r_sandbox_open		4102519	0					
ANR	4102530	Identifier	r_sandbox_open		4102519	0					
ANR	4102531	ArgumentList	file		4102519	1					
ANR	4102532	Argument	file		4102519	0					
ANR	4102533	Identifier	file		4102519	0					
ANR	4102534	Argument	O_RDONLY		4102519	1					
ANR	4102535	Identifier	O_RDONLY		4102519	0					
ANR	4102536	Argument	0		4102519	2					
ANR	4102537	PrimaryExpression	0		4102519	0					
ANR	4102538	IfStatement	if ( fd != - 1 )		4102519	1					
ANR	4102539	Condition	fd != - 1	833:5:23821:23828	4102519	0	True				
ANR	4102540	EqualityExpression	fd != - 1		4102519	0		!=			
ANR	4102541	Identifier	fd		4102519	0					
ANR	4102542	UnaryOperationExpression	- 1		4102519	1					
ANR	4102543	UnaryOperator	-		4102519	0					
ANR	4102544	PrimaryExpression	1		4102519	1					
ANR	4102545	CompoundStatement		5:2:95:165	4102519	1					
ANR	4102546	IdentifierDeclStatement	char firstLine [ 128 ] = { 0 } ;	834:2:23835:23860	4102519	0	True				
ANR	4102547	IdentifierDecl	firstLine [ 128 ] = { 0 }		4102519	0					
ANR	4102548	IdentifierDeclType	char [ 128 ]		4102519	0					
ANR	4102549	Identifier	firstLine		4102519	1					
ANR	4102550	PrimaryExpression	128		4102519	2					
ANR	4102551	AssignmentExpression	firstLine [ 128 ] = { 0 }		4102519	3		=			
ANR	4102552	Identifier	firstLine		4102519	0					
ANR	4102553	InitializerList	0		4102519	1					
ANR	4102554	PrimaryExpression	0		4102519	0					
ANR	4102555	IdentifierDeclStatement	"int len = r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 ) ;"	835:2:23864:23934	4102519	1	True				
ANR	4102556	IdentifierDecl	"len = r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 )"		4102519	0					
ANR	4102557	IdentifierDeclType	int		4102519	0					
ANR	4102558	Identifier	len		4102519	1					
ANR	4102559	AssignmentExpression	"len = r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 )"		4102519	2		=			
ANR	4102560	Identifier	len		4102519	0					
ANR	4102561	CallExpression	"r_sandbox_read ( fd , ( ut8 * ) firstLine , sizeof ( firstLine ) - 1 )"		4102519	1					
ANR	4102562	Callee	r_sandbox_read		4102519	0					
ANR	4102563	Identifier	r_sandbox_read		4102519	0					
ANR	4102564	ArgumentList	fd		4102519	1					
ANR	4102565	Argument	fd		4102519	0					
ANR	4102566	Identifier	fd		4102519	0					
ANR	4102567	Argument	( ut8 * ) firstLine		4102519	1					
ANR	4102568	CastExpression	( ut8 * ) firstLine		4102519	0					
ANR	4102569	CastTarget	ut8 *		4102519	0					
ANR	4102570	Identifier	firstLine		4102519	1					
ANR	4102571	Argument	sizeof ( firstLine ) - 1		4102519	2					
ANR	4102572	AdditiveExpression	sizeof ( firstLine ) - 1		4102519	0		-			
ANR	4102573	SizeofExpression	sizeof ( firstLine )		4102519	0					
ANR	4102574	Sizeof	sizeof		4102519	0					
ANR	4102575	SizeofOperand	firstLine		4102519	1					
ANR	4102576	PrimaryExpression	1		4102519	1					
ANR	4102577	ExpressionStatement	firstLine [ len ] = 0	836:2:23938:23956	4102519	2	True				
ANR	4102578	AssignmentExpression	firstLine [ len ] = 0		4102519	0		=			
ANR	4102579	ArrayIndexing	firstLine [ len ]		4102519	0					
ANR	4102580	Identifier	firstLine		4102519	0					
ANR	4102581	Identifier	len		4102519	1					
ANR	4102582	PrimaryExpression	0		4102519	1					
ANR	4102583	IfStatement	"if ( ! strncmp ( firstLine , ""#!/"" , 3 ) )"		4102519	3					
ANR	4102584	Condition	"! strncmp ( firstLine , ""#!/"" , 3 )"	837:6:23964:23993	4102519	0	True				
ANR	4102585	UnaryOperationExpression	"! strncmp ( firstLine , ""#!/"" , 3 )"		4102519	0					
ANR	4102586	UnaryOperator	!		4102519	0					
ANR	4102587	CallExpression	"strncmp ( firstLine , ""#!/"" , 3 )"		4102519	1					
ANR	4102588	Callee	strncmp		4102519	0					
ANR	4102589	Identifier	strncmp		4102519	0					
ANR	4102590	ArgumentList	firstLine		4102519	1					
ANR	4102591	Argument	firstLine		4102519	0					
ANR	4102592	Identifier	firstLine		4102519	0					
ANR	4102593	Argument	"""#!/"""		4102519	1					
ANR	4102594	PrimaryExpression	"""#!/"""		4102519	0					
ANR	4102595	Argument	3		4102519	2					
ANR	4102596	PrimaryExpression	3		4102519	0					
ANR	4102597	CompoundStatement		9:3:259:294	4102519	1					
ANR	4102598	IdentifierDeclStatement	"char * nl = strchr ( firstLine , '\\n' ) ;"	839:3:24028:24063	4102519	0	True				
ANR	4102599	IdentifierDecl	"* nl = strchr ( firstLine , '\\n' )"		4102519	0					
ANR	4102600	IdentifierDeclType	char *		4102519	0					
ANR	4102601	Identifier	nl		4102519	1					
ANR	4102602	AssignmentExpression	"* nl = strchr ( firstLine , '\\n' )"		4102519	2		=			
ANR	4102603	Identifier	nl		4102519	0					
ANR	4102604	CallExpression	"strchr ( firstLine , '\\n' )"		4102519	1					
ANR	4102605	Callee	strchr		4102519	0					
ANR	4102606	Identifier	strchr		4102519	0					
ANR	4102607	ArgumentList	firstLine		4102519	1					
ANR	4102608	Argument	firstLine		4102519	0					
ANR	4102609	Identifier	firstLine		4102519	0					
ANR	4102610	Argument	'\\n'		4102519	1					
ANR	4102611	PrimaryExpression	'\\n'		4102519	0					
ANR	4102612	IfStatement	if ( nl )		4102519	1					
ANR	4102613	Condition	nl	840:7:24072:24073	4102519	0	True				
ANR	4102614	Identifier	nl		4102519	0					
ANR	4102615	CompoundStatement		10:11:307:307	4102519	1					
ANR	4102616	ExpressionStatement	* nl = 0	841:4:24082:24089	4102519	0	True				
ANR	4102617	AssignmentExpression	* nl = 0		4102519	0		=			
ANR	4102618	UnaryOperationExpression	* nl		4102519	0					
ANR	4102619	UnaryOperator	*		4102519	0					
ANR	4102620	Identifier	nl		4102519	1					
ANR	4102621	PrimaryExpression	0		4102519	1					
ANR	4102622	ExpressionStatement	"nl = strchr ( firstLine , ' ' )"	843:3:24099:24127	4102519	2	True				
ANR	4102623	AssignmentExpression	"nl = strchr ( firstLine , ' ' )"		4102519	0		=			
ANR	4102624	Identifier	nl		4102519	0					
ANR	4102625	CallExpression	"strchr ( firstLine , ' ' )"		4102519	1					
ANR	4102626	Callee	strchr		4102519	0					
ANR	4102627	Identifier	strchr		4102519	0					
ANR	4102628	ArgumentList	firstLine		4102519	1					
ANR	4102629	Argument	firstLine		4102519	0					
ANR	4102630	Identifier	firstLine		4102519	0					
ANR	4102631	Argument	' '		4102519	1					
ANR	4102632	PrimaryExpression	' '		4102519	0					
ANR	4102633	IfStatement	if ( nl )		4102519	3					
ANR	4102634	Condition	nl	844:7:24136:24137	4102519	0	True				
ANR	4102635	Identifier	nl		4102519	0					
ANR	4102636	CompoundStatement		14:11:371:371	4102519	1					
ANR	4102637	ExpressionStatement	* nl = 0	845:4:24146:24153	4102519	0	True				
ANR	4102638	AssignmentExpression	* nl = 0		4102519	0		=			
ANR	4102639	UnaryOperationExpression	* nl		4102519	0					
ANR	4102640	UnaryOperator	*		4102519	0					
ANR	4102641	Identifier	nl		4102519	1					
ANR	4102642	PrimaryExpression	0		4102519	1					
ANR	4102643	ReturnStatement	return strdup ( firstLine + 2 ) ;	847:3:24163:24192	4102519	4	True				
ANR	4102644	CallExpression	strdup ( firstLine + 2 )		4102519	0					
ANR	4102645	Callee	strdup		4102519	0					
ANR	4102646	Identifier	strdup		4102519	0					
ANR	4102647	ArgumentList	firstLine + 2		4102519	1					
ANR	4102648	Argument	firstLine + 2		4102519	0					
ANR	4102649	AdditiveExpression	firstLine + 2		4102519	0		+			
ANR	4102650	Identifier	firstLine		4102519	0					
ANR	4102651	PrimaryExpression	2		4102519	1					
ANR	4102652	ExpressionStatement	r_sandbox_close ( fd )	849:2:24200:24220	4102519	4	True				
ANR	4102653	CallExpression	r_sandbox_close ( fd )		4102519	0					
ANR	4102654	Callee	r_sandbox_close		4102519	0					
ANR	4102655	Identifier	r_sandbox_close		4102519	0					
ANR	4102656	ArgumentList	fd		4102519	1					
ANR	4102657	Argument	fd		4102519	0					
ANR	4102658	Identifier	fd		4102519	0					
ANR	4102659	ReturnStatement	return NULL ;	851:1:24226:24237	4102519	2	True				
ANR	4102660	Identifier	NULL		4102519	0					
ANR	4102661	ReturnType	static char *		4102519	1					
ANR	4102662	Identifier	langFromHashbang		4102519	2					
ANR	4102663	ParameterList	"RCore * core , const char * file"		4102519	3					
ANR	4102664	Parameter	RCore * core	831:30:23737:23747	4102519	0	True				
ANR	4102665	ParameterType	RCore *		4102519	0					
ANR	4102666	Identifier	core		4102519	1					
ANR	4102667	Parameter	const char * file	831:43:23750:23765	4102519	1	True				
ANR	4102668	ParameterType	const char *		4102519	0					
ANR	4102669	Identifier	file		4102519	1					
ANR	4102670	CFGEntryNode	ENTRY		4102519		True				
ANR	4102671	CFGExitNode	EXIT		4102519		True				
ANR	4102672	Symbol	NULL		4102519						
ANR	4102673	Symbol	r_sandbox_read		4102519						
ANR	4102674	Symbol	* nl		4102519						
ANR	4102675	Symbol	strchr		4102519						
ANR	4102676	Symbol	firstLine		4102519						
ANR	4102677	Symbol	core		4102519						
ANR	4102678	Symbol	strncmp		4102519						
ANR	4102679	Symbol	r_sandbox_open		4102519						
ANR	4102680	Symbol	file		4102519						
ANR	4102681	Symbol	O_RDONLY		4102519						
ANR	4102682	Symbol	* firstLine		4102519						
ANR	4102683	Symbol	len		4102519						
ANR	4102684	Symbol	strdup		4102519						
ANR	4102685	Symbol	fd		4102519						
ANR	4102686	Symbol	nl		4102519						
ANR	4102687	Symbol	* len		4102519						
ANR	4102688	Function	r_core_run_script	854:0:24242:29084							
ANR	4102689	FunctionDef	"r_core_run_script (RCore * core , const char * file)"		4102688	0					
ANR	4102690	CompoundStatement		854:60:24302:29084	4102688	0					
ANR	4102691	IdentifierDeclStatement	bool ret = false ;	855:1:24305:24321	4102688	0	True				
ANR	4102692	IdentifierDecl	ret = false		4102688	0					
ANR	4102693	IdentifierDeclType	bool		4102688	0					
ANR	4102694	Identifier	ret		4102688	1					
ANR	4102695	AssignmentExpression	ret = false		4102688	2		=			
ANR	4102696	Identifier	false		4102688	0					
ANR	4102697	Identifier	false		4102688	1					
ANR	4102698	IdentifierDeclStatement	RListIter * iter ;	856:1:24324:24339	4102688	1	True				
ANR	4102699	IdentifierDecl	* iter		4102688	0					
ANR	4102700	IdentifierDeclType	RListIter *		4102688	0					
ANR	4102701	Identifier	iter		4102688	1					
ANR	4102702	IdentifierDeclStatement	RLangPlugin * p ;	857:1:24342:24356	4102688	2	True				
ANR	4102703	IdentifierDecl	* p		4102688	0					
ANR	4102704	IdentifierDeclType	RLangPlugin *		4102688	0					
ANR	4102705	Identifier	p		4102688	1					
ANR	4102706	IdentifierDeclStatement	char * name ;	858:1:24359:24369	4102688	3	True				
ANR	4102707	IdentifierDecl	* name		4102688	0					
ANR	4102708	IdentifierDeclType	char *		4102688	0					
ANR	4102709	Identifier	name		4102688	1					
ANR	4102710	Statement	r_list_foreach	860:1:24373:24386	4102688	4	True				
ANR	4102711	Statement	(	860:16:24388:24388	4102688	5	True				
ANR	4102712	Statement	core	860:17:24389:24392	4102688	6	True				
ANR	4102713	Statement	->	860:21:24393:24394	4102688	7	True				
ANR	4102714	Statement	scriptstack	860:23:24395:24405	4102688	8	True				
ANR	4102715	Statement	","	860:34:24406:24406	4102688	9	True				
ANR	4102716	Statement	iter	860:36:24408:24411	4102688	10	True				
ANR	4102717	Statement	","	860:40:24412:24412	4102688	11	True				
ANR	4102718	Statement	name	860:42:24414:24417	4102688	12	True				
ANR	4102719	Statement	)	860:46:24418:24418	4102688	13	True				
ANR	4102720	CompoundStatement		7:48:117:117	4102688	14					
ANR	4102721	IfStatement	"if ( ! strcmp ( file , name ) )"		4102688	0					
ANR	4102722	Condition	"! strcmp ( file , name )"	861:6:24428:24447	4102688	0	True				
ANR	4102723	UnaryOperationExpression	"! strcmp ( file , name )"		4102688	0					
ANR	4102724	UnaryOperator	!		4102688	0					
ANR	4102725	CallExpression	"strcmp ( file , name )"		4102688	1					
ANR	4102726	Callee	strcmp		4102688	0					
ANR	4102727	Identifier	strcmp		4102688	0					
ANR	4102728	ArgumentList	file		4102688	1					
ANR	4102729	Argument	file		4102688	0					
ANR	4102730	Identifier	file		4102688	0					
ANR	4102731	Argument	name		4102688	1					
ANR	4102732	Identifier	name		4102688	0					
ANR	4102733	CompoundStatement		8:28:147:147	4102688	1					
ANR	4102734	ExpressionStatement	"eprintf ( ""WARNING: ignored nested source: %s\\n"" , file )"	862:3:24455:24509	4102688	0	True				
ANR	4102735	CallExpression	"eprintf ( ""WARNING: ignored nested source: %s\\n"" , file )"		4102688	0					
ANR	4102736	Callee	eprintf		4102688	0					
ANR	4102737	Identifier	eprintf		4102688	0					
ANR	4102738	ArgumentList	"""WARNING: ignored nested source: %s\\n"""		4102688	1					
ANR	4102739	Argument	"""WARNING: ignored nested source: %s\\n"""		4102688	0					
ANR	4102740	PrimaryExpression	"""WARNING: ignored nested source: %s\\n"""		4102688	0					
ANR	4102741	Argument	file		4102688	1					
ANR	4102742	Identifier	file		4102688	0					
ANR	4102743	ReturnStatement	return false ;	863:3:24514:24526	4102688	1	True				
ANR	4102744	Identifier	false		4102688	0					
ANR	4102745	ExpressionStatement	"r_list_push ( core -> scriptstack , strdup ( file ) )"	866:1:24536:24582	4102688	15	True				
ANR	4102746	CallExpression	"r_list_push ( core -> scriptstack , strdup ( file ) )"		4102688	0					
ANR	4102747	Callee	r_list_push		4102688	0					
ANR	4102748	Identifier	r_list_push		4102688	0					
ANR	4102749	ArgumentList	core -> scriptstack		4102688	1					
ANR	4102750	Argument	core -> scriptstack		4102688	0					
ANR	4102751	PtrMemberAccess	core -> scriptstack		4102688	0					
ANR	4102752	Identifier	core		4102688	0					
ANR	4102753	Identifier	scriptstack		4102688	1					
ANR	4102754	Argument	strdup ( file )		4102688	1					
ANR	4102755	CallExpression	strdup ( file )		4102688	0					
ANR	4102756	Callee	strdup		4102688	0					
ANR	4102757	Identifier	strdup		4102688	0					
ANR	4102758	ArgumentList	file		4102688	1					
ANR	4102759	Argument	file		4102688	0					
ANR	4102760	Identifier	file		4102688	0					
ANR	4102761	IfStatement	"if ( ! strcmp ( file , ""-"" ) )"		4102688	16					
ANR	4102762	Condition	"! strcmp ( file , ""-"" )"	868:5:24590:24608	4102688	0	True				
ANR	4102763	UnaryOperationExpression	"! strcmp ( file , ""-"" )"		4102688	0					
ANR	4102764	UnaryOperator	!		4102688	0					
ANR	4102765	CallExpression	"strcmp ( file , ""-"" )"		4102688	1					
ANR	4102766	Callee	strcmp		4102688	0					
ANR	4102767	Identifier	strcmp		4102688	0					
ANR	4102768	ArgumentList	file		4102688	1					
ANR	4102769	Argument	file		4102688	0					
ANR	4102770	Identifier	file		4102688	0					
ANR	4102771	Argument	"""-"""		4102688	1					
ANR	4102772	PrimaryExpression	"""-"""		4102688	0					
ANR	4102773	CompoundStatement		16:2:312:356	4102688	1					
ANR	4102774	IdentifierDeclStatement	"char * out = r_core_editor ( core , NULL , NULL ) ;"	869:2:24615:24659	4102688	0	True				
ANR	4102775	IdentifierDecl	"* out = r_core_editor ( core , NULL , NULL )"		4102688	0					
ANR	4102776	IdentifierDeclType	char *		4102688	0					
ANR	4102777	Identifier	out		4102688	1					
ANR	4102778	AssignmentExpression	"* out = r_core_editor ( core , NULL , NULL )"		4102688	2		=			
ANR	4102779	Identifier	out		4102688	0					
ANR	4102780	CallExpression	"r_core_editor ( core , NULL , NULL )"		4102688	1					
ANR	4102781	Callee	r_core_editor		4102688	0					
ANR	4102782	Identifier	r_core_editor		4102688	0					
ANR	4102783	ArgumentList	core		4102688	1					
ANR	4102784	Argument	core		4102688	0					
ANR	4102785	Identifier	core		4102688	0					
ANR	4102786	Argument	NULL		4102688	1					
ANR	4102787	Identifier	NULL		4102688	0					
ANR	4102788	Argument	NULL		4102688	2					
ANR	4102789	Identifier	NULL		4102688	0					
ANR	4102790	IfStatement	if ( out )		4102688	1					
ANR	4102791	Condition	out	870:6:24667:24669	4102688	0	True				
ANR	4102792	Identifier	out		4102688	0					
ANR	4102793	CompoundStatement		17:11:369:369	4102688	1					
ANR	4102794	ExpressionStatement	"ret = r_core_cmd_lines ( core , out )"	871:3:24677:24711	4102688	0	True				
ANR	4102795	AssignmentExpression	"ret = r_core_cmd_lines ( core , out )"		4102688	0		=			
ANR	4102796	Identifier	ret		4102688	0					
ANR	4102797	CallExpression	"r_core_cmd_lines ( core , out )"		4102688	1					
ANR	4102798	Callee	r_core_cmd_lines		4102688	0					
ANR	4102799	Identifier	r_core_cmd_lines		4102688	0					
ANR	4102800	ArgumentList	core		4102688	1					
ANR	4102801	Argument	core		4102688	0					
ANR	4102802	Identifier	core		4102688	0					
ANR	4102803	Argument	out		4102688	1					
ANR	4102804	Identifier	out		4102688	0					
ANR	4102805	ExpressionStatement	free ( out )	872:3:24716:24726	4102688	1	True				
ANR	4102806	CallExpression	free ( out )		4102688	0					
ANR	4102807	Callee	free		4102688	0					
ANR	4102808	Identifier	free		4102688	0					
ANR	4102809	ArgumentList	out		4102688	1					
ANR	4102810	Argument	out		4102688	0					
ANR	4102811	Identifier	out		4102688	0					
ANR	4102812	ElseStatement	else		4102688	0					
ANR	4102813	IfStatement	"if ( r_str_endswith ( file , "".html"" ) )"		4102688	0					
ANR	4102814	Condition	"r_str_endswith ( file , "".html"" )"	874:12:24744:24773	4102688	0	True				
ANR	4102815	CallExpression	"r_str_endswith ( file , "".html"" )"		4102688	0					
ANR	4102816	Callee	r_str_endswith		4102688	0					
ANR	4102817	Identifier	r_str_endswith		4102688	0					
ANR	4102818	ArgumentList	file		4102688	1					
ANR	4102819	Argument	file		4102688	0					
ANR	4102820	Identifier	file		4102688	0					
ANR	4102821	Argument	""".html"""		4102688	1					
ANR	4102822	PrimaryExpression	""".html"""		4102688	0					
ANR	4102823	CompoundStatement		25:2:675:712	4102688	1					
ANR	4102824	IdentifierDeclStatement	"const bool httpSandbox = r_config_get_i ( core -> config , ""http.sandbox"" ) ;"	875:2:24780:24850	4102688	0	True				
ANR	4102825	IdentifierDecl	"httpSandbox = r_config_get_i ( core -> config , ""http.sandbox"" )"		4102688	0					
ANR	4102826	IdentifierDeclType	const bool		4102688	0					
ANR	4102827	Identifier	httpSandbox		4102688	1					
ANR	4102828	AssignmentExpression	"httpSandbox = r_config_get_i ( core -> config , ""http.sandbox"" )"		4102688	2		=			
ANR	4102829	Identifier	httpSandbox		4102688	0					
ANR	4102830	CallExpression	"r_config_get_i ( core -> config , ""http.sandbox"" )"		4102688	1					
ANR	4102831	Callee	r_config_get_i		4102688	0					
ANR	4102832	Identifier	r_config_get_i		4102688	0					
ANR	4102833	ArgumentList	core -> config		4102688	1					
ANR	4102834	Argument	core -> config		4102688	0					
ANR	4102835	PtrMemberAccess	core -> config		4102688	0					
ANR	4102836	Identifier	core		4102688	0					
ANR	4102837	Identifier	config		4102688	1					
ANR	4102838	Argument	"""http.sandbox"""		4102688	1					
ANR	4102839	PrimaryExpression	"""http.sandbox"""		4102688	0					
ANR	4102840	IdentifierDeclStatement	"char * httpIndex = strdup ( r_config_get ( core -> config , ""http.index"" ) ) ;"	876:2:24854:24922	4102688	1	True				
ANR	4102841	IdentifierDecl	"* httpIndex = strdup ( r_config_get ( core -> config , ""http.index"" ) )"		4102688	0					
ANR	4102842	IdentifierDeclType	char *		4102688	0					
ANR	4102843	Identifier	httpIndex		4102688	1					
ANR	4102844	AssignmentExpression	"* httpIndex = strdup ( r_config_get ( core -> config , ""http.index"" ) )"		4102688	2		=			
ANR	4102845	Identifier	httpIndex		4102688	0					
ANR	4102846	CallExpression	"strdup ( r_config_get ( core -> config , ""http.index"" ) )"		4102688	1					
ANR	4102847	Callee	strdup		4102688	0					
ANR	4102848	Identifier	strdup		4102688	0					
ANR	4102849	ArgumentList	"r_config_get ( core -> config , ""http.index"" )"		4102688	1					
ANR	4102850	Argument	"r_config_get ( core -> config , ""http.index"" )"		4102688	0					
ANR	4102851	CallExpression	"r_config_get ( core -> config , ""http.index"" )"		4102688	0					
ANR	4102852	Callee	r_config_get		4102688	0					
ANR	4102853	Identifier	r_config_get		4102688	0					
ANR	4102854	ArgumentList	core -> config		4102688	1					
ANR	4102855	Argument	core -> config		4102688	0					
ANR	4102856	PtrMemberAccess	core -> config		4102688	0					
ANR	4102857	Identifier	core		4102688	0					
ANR	4102858	Identifier	config		4102688	1					
ANR	4102859	Argument	"""http.index"""		4102688	1					
ANR	4102860	PrimaryExpression	"""http.index"""		4102688	0					
ANR	4102861	ExpressionStatement	"r_config_set_i ( core -> config , ""http.sandbox"" , 0 )"	877:2:24926:24974	4102688	2	True				
ANR	4102862	CallExpression	"r_config_set_i ( core -> config , ""http.sandbox"" , 0 )"		4102688	0					
ANR	4102863	Callee	r_config_set_i		4102688	0					
ANR	4102864	Identifier	r_config_set_i		4102688	0					
ANR	4102865	ArgumentList	core -> config		4102688	1					
ANR	4102866	Argument	core -> config		4102688	0					
ANR	4102867	PtrMemberAccess	core -> config		4102688	0					
ANR	4102868	Identifier	core		4102688	0					
ANR	4102869	Identifier	config		4102688	1					
ANR	4102870	Argument	"""http.sandbox"""		4102688	1					
ANR	4102871	PrimaryExpression	"""http.sandbox"""		4102688	0					
ANR	4102872	Argument	0		4102688	2					
ANR	4102873	PrimaryExpression	0		4102688	0					
ANR	4102874	IdentifierDeclStatement	char * absfile = r_file_abspath ( file ) ;	878:2:24978:25015	4102688	3	True				
ANR	4102875	IdentifierDecl	* absfile = r_file_abspath ( file )		4102688	0					
ANR	4102876	IdentifierDeclType	char *		4102688	0					
ANR	4102877	Identifier	absfile		4102688	1					
ANR	4102878	AssignmentExpression	* absfile = r_file_abspath ( file )		4102688	2		=			
ANR	4102879	Identifier	absfile		4102688	0					
ANR	4102880	CallExpression	r_file_abspath ( file )		4102688	1					
ANR	4102881	Callee	r_file_abspath		4102688	0					
ANR	4102882	Identifier	r_file_abspath		4102688	0					
ANR	4102883	ArgumentList	file		4102688	1					
ANR	4102884	Argument	file		4102688	0					
ANR	4102885	Identifier	file		4102688	0					
ANR	4102886	ExpressionStatement	"r_config_set ( core -> config , ""http.index"" , absfile )"	879:2:25019:25069	4102688	4	True				
ANR	4102887	CallExpression	"r_config_set ( core -> config , ""http.index"" , absfile )"		4102688	0					
ANR	4102888	Callee	r_config_set		4102688	0					
ANR	4102889	Identifier	r_config_set		4102688	0					
ANR	4102890	ArgumentList	core -> config		4102688	1					
ANR	4102891	Argument	core -> config		4102688	0					
ANR	4102892	PtrMemberAccess	core -> config		4102688	0					
ANR	4102893	Identifier	core		4102688	0					
ANR	4102894	Identifier	config		4102688	1					
ANR	4102895	Argument	"""http.index"""		4102688	1					
ANR	4102896	PrimaryExpression	"""http.index"""		4102688	0					
ANR	4102897	Argument	absfile		4102688	2					
ANR	4102898	Identifier	absfile		4102688	0					
ANR	4102899	ExpressionStatement	free ( absfile )	880:2:25073:25087	4102688	5	True				
ANR	4102900	CallExpression	free ( absfile )		4102688	0					
ANR	4102901	Callee	free		4102688	0					
ANR	4102902	Identifier	free		4102688	0					
ANR	4102903	ArgumentList	absfile		4102688	1					
ANR	4102904	Argument	absfile		4102688	0					
ANR	4102905	Identifier	absfile		4102688	0					
ANR	4102906	ExpressionStatement	"r_core_cmdf ( core , ""=H"" )"	881:2:25091:25115	4102688	6	True				
ANR	4102907	CallExpression	"r_core_cmdf ( core , ""=H"" )"		4102688	0					
ANR	4102908	Callee	r_core_cmdf		4102688	0					
ANR	4102909	Identifier	r_core_cmdf		4102688	0					
ANR	4102910	ArgumentList	core		4102688	1					
ANR	4102911	Argument	core		4102688	0					
ANR	4102912	Identifier	core		4102688	0					
ANR	4102913	Argument	"""=H"""		4102688	1					
ANR	4102914	PrimaryExpression	"""=H"""		4102688	0					
ANR	4102915	ExpressionStatement	"r_config_set_i ( core -> config , ""http.sandbox"" , httpSandbox )"	882:2:25119:25177	4102688	7	True				
ANR	4102916	CallExpression	"r_config_set_i ( core -> config , ""http.sandbox"" , httpSandbox )"		4102688	0					
ANR	4102917	Callee	r_config_set_i		4102688	0					
ANR	4102918	Identifier	r_config_set_i		4102688	0					
ANR	4102919	ArgumentList	core -> config		4102688	1					
ANR	4102920	Argument	core -> config		4102688	0					
ANR	4102921	PtrMemberAccess	core -> config		4102688	0					
ANR	4102922	Identifier	core		4102688	0					
ANR	4102923	Identifier	config		4102688	1					
ANR	4102924	Argument	"""http.sandbox"""		4102688	1					
ANR	4102925	PrimaryExpression	"""http.sandbox"""		4102688	0					
ANR	4102926	Argument	httpSandbox		4102688	2					
ANR	4102927	Identifier	httpSandbox		4102688	0					
ANR	4102928	ExpressionStatement	"r_config_set ( core -> config , ""http.index"" , httpIndex )"	883:2:25181:25233	4102688	8	True				
ANR	4102929	CallExpression	"r_config_set ( core -> config , ""http.index"" , httpIndex )"		4102688	0					
ANR	4102930	Callee	r_config_set		4102688	0					
ANR	4102931	Identifier	r_config_set		4102688	0					
ANR	4102932	ArgumentList	core -> config		4102688	1					
ANR	4102933	Argument	core -> config		4102688	0					
ANR	4102934	PtrMemberAccess	core -> config		4102688	0					
ANR	4102935	Identifier	core		4102688	0					
ANR	4102936	Identifier	config		4102688	1					
ANR	4102937	Argument	"""http.index"""		4102688	1					
ANR	4102938	PrimaryExpression	"""http.index"""		4102688	0					
ANR	4102939	Argument	httpIndex		4102688	2					
ANR	4102940	Identifier	httpIndex		4102688	0					
ANR	4102941	ExpressionStatement	free ( httpIndex )	884:2:25237:25253	4102688	9	True				
ANR	4102942	CallExpression	free ( httpIndex )		4102688	0					
ANR	4102943	Callee	free		4102688	0					
ANR	4102944	Identifier	free		4102688	0					
ANR	4102945	ArgumentList	httpIndex		4102688	1					
ANR	4102946	Argument	httpIndex		4102688	0					
ANR	4102947	Identifier	httpIndex		4102688	0					
ANR	4102948	ExpressionStatement	ret = true	885:2:25257:25267	4102688	10	True				
ANR	4102949	AssignmentExpression	ret = true		4102688	0		=			
ANR	4102950	Identifier	ret		4102688	0					
ANR	4102951	Identifier	true		4102688	1					
ANR	4102952	ElseStatement	else		4102688	0					
ANR	4102953	IfStatement	"if ( r_str_endswith ( file , "".c"" ) )"		4102688	0					
ANR	4102954	Condition	"r_str_endswith ( file , "".c"" )"	886:12:25281:25307	4102688	0	True				
ANR	4102955	CallExpression	"r_str_endswith ( file , "".c"" )"		4102688	0					
ANR	4102956	Callee	r_str_endswith		4102688	0					
ANR	4102957	Identifier	r_str_endswith		4102688	0					
ANR	4102958	ArgumentList	file		4102688	1					
ANR	4102959	Argument	file		4102688	0					
ANR	4102960	Identifier	file		4102688	0					
ANR	4102961	Argument	""".c"""		4102688	1					
ANR	4102962	PrimaryExpression	""".c"""		4102688	0					
ANR	4102963	CompoundStatement		33:41:1007:1007	4102688	1					
ANR	4102964	ExpressionStatement	"r_core_cmd_strf ( core , ""#!c %s"" , file )"	887:2:25314:25352	4102688	0	True				
ANR	4102965	CallExpression	"r_core_cmd_strf ( core , ""#!c %s"" , file )"		4102688	0					
ANR	4102966	Callee	r_core_cmd_strf		4102688	0					
ANR	4102967	Identifier	r_core_cmd_strf		4102688	0					
ANR	4102968	ArgumentList	core		4102688	1					
ANR	4102969	Argument	core		4102688	0					
ANR	4102970	Identifier	core		4102688	0					
ANR	4102971	Argument	"""#!c %s"""		4102688	1					
ANR	4102972	PrimaryExpression	"""#!c %s"""		4102688	0					
ANR	4102973	Argument	file		4102688	2					
ANR	4102974	Identifier	file		4102688	0					
ANR	4102975	ExpressionStatement	ret = true	888:2:25356:25366	4102688	1	True				
ANR	4102976	AssignmentExpression	ret = true		4102688	0		=			
ANR	4102977	Identifier	ret		4102688	0					
ANR	4102978	Identifier	true		4102688	1					
ANR	4102979	ElseStatement	else		4102688	0					
ANR	4102980	IfStatement	if ( r_file_is_c ( file ) )		4102688	0					
ANR	4102981	Condition	r_file_is_c ( file )	889:12:25380:25397	4102688	0	True				
ANR	4102982	CallExpression	r_file_is_c ( file )		4102688	0					
ANR	4102983	Callee	r_file_is_c		4102688	0					
ANR	4102984	Identifier	r_file_is_c		4102688	0					
ANR	4102985	ArgumentList	file		4102688	1					
ANR	4102986	Argument	file		4102688	0					
ANR	4102987	Identifier	file		4102688	0					
ANR	4102988	CompoundStatement		38:2:1163:1219	4102688	1					
ANR	4102989	IdentifierDeclStatement	"const char * dir = r_config_get ( core -> config , ""dir.types"" ) ;"	890:2:25404:25462	4102688	0	True				
ANR	4102990	IdentifierDecl	"* dir = r_config_get ( core -> config , ""dir.types"" )"		4102688	0					
ANR	4102991	IdentifierDeclType	const char *		4102688	0					
ANR	4102992	Identifier	dir		4102688	1					
ANR	4102993	AssignmentExpression	"* dir = r_config_get ( core -> config , ""dir.types"" )"		4102688	2		=			
ANR	4102994	Identifier	dir		4102688	0					
ANR	4102995	CallExpression	"r_config_get ( core -> config , ""dir.types"" )"		4102688	1					
ANR	4102996	Callee	r_config_get		4102688	0					
ANR	4102997	Identifier	r_config_get		4102688	0					
ANR	4102998	ArgumentList	core -> config		4102688	1					
ANR	4102999	Argument	core -> config		4102688	0					
ANR	4103000	PtrMemberAccess	core -> config		4102688	0					
ANR	4103001	Identifier	core		4102688	0					
ANR	4103002	Identifier	config		4102688	1					
ANR	4103003	Argument	"""dir.types"""		4102688	1					
ANR	4103004	PrimaryExpression	"""dir.types"""		4102688	0					
ANR	4103005	IdentifierDeclStatement	"char * out = r_parse_c_file ( core -> anal , file , dir , NULL ) ;"	891:2:25466:25522	4102688	1	True				
ANR	4103006	IdentifierDecl	"* out = r_parse_c_file ( core -> anal , file , dir , NULL )"		4102688	0					
ANR	4103007	IdentifierDeclType	char *		4102688	0					
ANR	4103008	Identifier	out		4102688	1					
ANR	4103009	AssignmentExpression	"* out = r_parse_c_file ( core -> anal , file , dir , NULL )"		4102688	2		=			
ANR	4103010	Identifier	out		4102688	0					
ANR	4103011	CallExpression	"r_parse_c_file ( core -> anal , file , dir , NULL )"		4102688	1					
ANR	4103012	Callee	r_parse_c_file		4102688	0					
ANR	4103013	Identifier	r_parse_c_file		4102688	0					
ANR	4103014	ArgumentList	core -> anal		4102688	1					
ANR	4103015	Argument	core -> anal		4102688	0					
ANR	4103016	PtrMemberAccess	core -> anal		4102688	0					
ANR	4103017	Identifier	core		4102688	0					
ANR	4103018	Identifier	anal		4102688	1					
ANR	4103019	Argument	file		4102688	1					
ANR	4103020	Identifier	file		4102688	0					
ANR	4103021	Argument	dir		4102688	2					
ANR	4103022	Identifier	dir		4102688	0					
ANR	4103023	Argument	NULL		4102688	3					
ANR	4103024	Identifier	NULL		4102688	0					
ANR	4103025	IfStatement	if ( out )		4102688	2					
ANR	4103026	Condition	out	892:6:25530:25532	4102688	0	True				
ANR	4103027	Identifier	out		4102688	0					
ANR	4103028	CompoundStatement		39:11:1232:1232	4102688	1					
ANR	4103029	ExpressionStatement	r_cons_strcat ( out )	893:3:25540:25559	4102688	0	True				
ANR	4103030	CallExpression	r_cons_strcat ( out )		4102688	0					
ANR	4103031	Callee	r_cons_strcat		4102688	0					
ANR	4103032	Identifier	r_cons_strcat		4102688	0					
ANR	4103033	ArgumentList	out		4102688	1					
ANR	4103034	Argument	out		4102688	0					
ANR	4103035	Identifier	out		4102688	0					
ANR	4103036	ExpressionStatement	"sdb_query_lines ( core -> anal -> sdb_types , out )"	894:3:25564:25608	4102688	1	True				
ANR	4103037	CallExpression	"sdb_query_lines ( core -> anal -> sdb_types , out )"		4102688	0					
ANR	4103038	Callee	sdb_query_lines		4102688	0					
ANR	4103039	Identifier	sdb_query_lines		4102688	0					
ANR	4103040	ArgumentList	core -> anal -> sdb_types		4102688	1					
ANR	4103041	Argument	core -> anal -> sdb_types		4102688	0					
ANR	4103042	PtrMemberAccess	core -> anal -> sdb_types		4102688	0					
ANR	4103043	PtrMemberAccess	core -> anal		4102688	0					
ANR	4103044	Identifier	core		4102688	0					
ANR	4103045	Identifier	anal		4102688	1					
ANR	4103046	Identifier	sdb_types		4102688	1					
ANR	4103047	Argument	out		4102688	1					
ANR	4103048	Identifier	out		4102688	0					
ANR	4103049	ExpressionStatement	free ( out )	895:3:25613:25623	4102688	2	True				
ANR	4103050	CallExpression	free ( out )		4102688	0					
ANR	4103051	Callee	free		4102688	0					
ANR	4103052	Identifier	free		4102688	0					
ANR	4103053	ArgumentList	out		4102688	1					
ANR	4103054	Argument	out		4102688	0					
ANR	4103055	Identifier	out		4102688	0					
ANR	4103056	ExpressionStatement	ret = out ? true : false	897:2:25631:25653	4102688	3	True				
ANR	4103057	AssignmentExpression	ret = out ? true : false		4102688	0		=			
ANR	4103058	Identifier	ret		4102688	0					
ANR	4103059	ConditionalExpression	out ? true : false		4102688	1					
ANR	4103060	Condition	out		4102688	0					
ANR	4103061	Identifier	out		4102688	0					
ANR	4103062	Identifier	true		4102688	1					
ANR	4103063	Identifier	false		4102688	2					
ANR	4103064	ElseStatement	else		4102688	0					
ANR	4103065	CompoundStatement		45:8:1360:1360	4102688	0					
ANR	4103066	ExpressionStatement	"p = r_lang_get_by_extension ( core -> lang , file )"	899:2:25667:25713	4102688	0	True				
ANR	4103067	AssignmentExpression	"p = r_lang_get_by_extension ( core -> lang , file )"		4102688	0		=			
ANR	4103068	Identifier	p		4102688	0					
ANR	4103069	CallExpression	"r_lang_get_by_extension ( core -> lang , file )"		4102688	1					
ANR	4103070	Callee	r_lang_get_by_extension		4102688	0					
ANR	4103071	Identifier	r_lang_get_by_extension		4102688	0					
ANR	4103072	ArgumentList	core -> lang		4102688	1					
ANR	4103073	Argument	core -> lang		4102688	0					
ANR	4103074	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103075	Identifier	core		4102688	0					
ANR	4103076	Identifier	lang		4102688	1					
ANR	4103077	Argument	file		4102688	1					
ANR	4103078	Identifier	file		4102688	0					
ANR	4103079	IfStatement	if ( p )		4102688	1					
ANR	4103080	Condition	p	900:6:25721:25721	4102688	0	True				
ANR	4103081	Identifier	p		4102688	0					
ANR	4103082	CompoundStatement		47:9:1421:1421	4102688	1					
ANR	4103083	ExpressionStatement	"r_lang_use ( core -> lang , p -> name )"	901:3:25729:25761	4102688	0	True				
ANR	4103084	CallExpression	"r_lang_use ( core -> lang , p -> name )"		4102688	0					
ANR	4103085	Callee	r_lang_use		4102688	0					
ANR	4103086	Identifier	r_lang_use		4102688	0					
ANR	4103087	ArgumentList	core -> lang		4102688	1					
ANR	4103088	Argument	core -> lang		4102688	0					
ANR	4103089	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103090	Identifier	core		4102688	0					
ANR	4103091	Identifier	lang		4102688	1					
ANR	4103092	Argument	p -> name		4102688	1					
ANR	4103093	PtrMemberAccess	p -> name		4102688	0					
ANR	4103094	Identifier	p		4102688	0					
ANR	4103095	Identifier	name		4102688	1					
ANR	4103096	ExpressionStatement	"ret = lang_run_file ( core , core -> lang , file )"	902:3:25766:25810	4102688	1	True				
ANR	4103097	AssignmentExpression	"ret = lang_run_file ( core , core -> lang , file )"		4102688	0		=			
ANR	4103098	Identifier	ret		4102688	0					
ANR	4103099	CallExpression	"lang_run_file ( core , core -> lang , file )"		4102688	1					
ANR	4103100	Callee	lang_run_file		4102688	0					
ANR	4103101	Identifier	lang_run_file		4102688	0					
ANR	4103102	ArgumentList	core		4102688	1					
ANR	4103103	Argument	core		4102688	0					
ANR	4103104	Identifier	core		4102688	0					
ANR	4103105	Argument	core -> lang		4102688	1					
ANR	4103106	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103107	Identifier	core		4102688	0					
ANR	4103108	Identifier	lang		4102688	1					
ANR	4103109	Argument	file		4102688	2					
ANR	4103110	Identifier	file		4102688	0					
ANR	4103111	ElseStatement	else		4102688	0					
ANR	4103112	CompoundStatement		57:3:1726:1764	4102688	0					
ANR	4103113	Statement	define	906:1:25922:25927	4102688	0	True				
ANR	4103114	Statement	cmdstr	906:8:25929:25934	4102688	1	True				
ANR	4103115	Statement	(	906:14:25935:25935	4102688	2	True				
ANR	4103116	Statement	x	906:15:25936:25936	4102688	3	True				
ANR	4103117	Statement	)	906:16:25937:25937	4102688	4	True				
ANR	4103118	Statement	r_str_newf	906:18:25939:25948	4102688	5	True				
ANR	4103119	Statement	(	906:29:25950:25950	4102688	6	True				
ANR	4103120	Statement	x	906:30:25951:25951	4102688	7	True				
ANR	4103121	Statement	""" %s"""	906:31:25952:25956	4102688	8	True				
ANR	4103122	Statement	","	906:36:25957:25957	4102688	9	True				
ANR	4103123	Statement	file	906:38:25959:25962	4102688	10	True				
ANR	4103124	Statement	)	906:42:25963:25963	4102688	11	True				
ANR	4103125	ExpressionStatement		906:43:25964:25964	4102688	12	True				
ANR	4103126	IdentifierDeclStatement	"const char * p = r_str_lchr ( file , '.' ) ;"	910:3:26029:26067	4102688	13	True				
ANR	4103127	IdentifierDecl	"* p = r_str_lchr ( file , '.' )"		4102688	0					
ANR	4103128	IdentifierDeclType	const char *		4102688	0					
ANR	4103129	Identifier	p		4102688	1					
ANR	4103130	AssignmentExpression	"* p = r_str_lchr ( file , '.' )"		4102688	2		=			
ANR	4103131	Identifier	p		4102688	0					
ANR	4103132	CallExpression	"r_str_lchr ( file , '.' )"		4102688	1					
ANR	4103133	Callee	r_str_lchr		4102688	0					
ANR	4103134	Identifier	r_str_lchr		4102688	0					
ANR	4103135	ArgumentList	file		4102688	1					
ANR	4103136	Argument	file		4102688	0					
ANR	4103137	Identifier	file		4102688	0					
ANR	4103138	Argument	'.'		4102688	1					
ANR	4103139	PrimaryExpression	'.'		4102688	0					
ANR	4103140	IfStatement	if ( p )		4102688	14					
ANR	4103141	Condition	p	911:7:26076:26076	4102688	0	True				
ANR	4103142	Identifier	p		4102688	0					
ANR	4103143	CompoundStatement		59:4:1782:1805	4102688	1					
ANR	4103144	IdentifierDeclStatement	const char * ext = p + 1 ;	912:4:26085:26108	4102688	0	True				
ANR	4103145	IdentifierDecl	* ext = p + 1		4102688	0					
ANR	4103146	IdentifierDeclType	const char *		4102688	0					
ANR	4103147	Identifier	ext		4102688	1					
ANR	4103148	AssignmentExpression	* ext = p + 1		4102688	2		=			
ANR	4103149	Identifier	ext		4102688	0					
ANR	4103150	AdditiveExpression	p + 1		4102688	1		+			
ANR	4103151	Identifier	p		4102688	0					
ANR	4103152	PrimaryExpression	1		4102688	1					
ANR	4103153	IfStatement	"if ( ! strcmp ( ext , ""js"" ) )"		4102688	1					
ANR	4103154	Condition	"! strcmp ( ext , ""js"" )"	914:8:26179:26197	4102688	0	True				
ANR	4103155	UnaryOperationExpression	"! strcmp ( ext , ""js"" )"		4102688	0					
ANR	4103156	UnaryOperator	!		4102688	0					
ANR	4103157	CallExpression	"strcmp ( ext , ""js"" )"		4102688	1					
ANR	4103158	Callee	strcmp		4102688	0					
ANR	4103159	Identifier	strcmp		4102688	0					
ANR	4103160	ArgumentList	ext		4102688	1					
ANR	4103161	Argument	ext		4102688	0					
ANR	4103162	Identifier	ext		4102688	0					
ANR	4103163	Argument	"""js"""		4102688	1					
ANR	4103164	PrimaryExpression	"""js"""		4102688	0					
ANR	4103165	CompoundStatement		62:5:1904:1931	4102688	1					
ANR	4103166	IdentifierDeclStatement	"char * cmd = cmdstr ( ""node"" ) ;"	915:5:26207:26234	4102688	0	True				
ANR	4103167	IdentifierDecl	"* cmd = cmdstr ( ""node"" )"		4102688	0					
ANR	4103168	IdentifierDeclType	char *		4102688	0					
ANR	4103169	Identifier	cmd		4102688	1					
ANR	4103170	AssignmentExpression	"* cmd = cmdstr ( ""node"" )"		4102688	2		=			
ANR	4103171	Identifier	cmd		4102688	0					
ANR	4103172	CallExpression	"cmdstr ( ""node"" )"		4102688	1					
ANR	4103173	Callee	cmdstr		4102688	0					
ANR	4103174	Identifier	cmdstr		4102688	0					
ANR	4103175	ArgumentList	"""node"""		4102688	1					
ANR	4103176	Argument	"""node"""		4102688	0					
ANR	4103177	PrimaryExpression	"""node"""		4102688	0					
ANR	4103178	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	916:5:26241:26272	4102688	1	True				
ANR	4103179	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103180	Callee	r_lang_use		4102688	0					
ANR	4103181	Identifier	r_lang_use		4102688	0					
ANR	4103182	ArgumentList	core -> lang		4102688	1					
ANR	4103183	Argument	core -> lang		4102688	0					
ANR	4103184	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103185	Identifier	core		4102688	0					
ANR	4103186	Identifier	lang		4102688	1					
ANR	4103187	Argument	"""pipe"""		4102688	1					
ANR	4103188	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103189	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	917:5:26279:26316	4102688	2	True				
ANR	4103190	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103191	Callee	lang_run_file		4102688	0					
ANR	4103192	Identifier	lang_run_file		4102688	0					
ANR	4103193	ArgumentList	core		4102688	1					
ANR	4103194	Argument	core		4102688	0					
ANR	4103195	Identifier	core		4102688	0					
ANR	4103196	Argument	core -> lang		4102688	1					
ANR	4103197	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103198	Identifier	core		4102688	0					
ANR	4103199	Identifier	lang		4102688	1					
ANR	4103200	Argument	cmd		4102688	2					
ANR	4103201	Identifier	cmd		4102688	0					
ANR	4103202	ExpressionStatement	free ( cmd )	918:5:26323:26333	4102688	3	True				
ANR	4103203	CallExpression	free ( cmd )		4102688	0					
ANR	4103204	Callee	free		4102688	0					
ANR	4103205	Identifier	free		4102688	0					
ANR	4103206	ArgumentList	cmd		4102688	1					
ANR	4103207	Argument	cmd		4102688	0					
ANR	4103208	Identifier	cmd		4102688	0					
ANR	4103209	ExpressionStatement	ret = 1	919:5:26340:26347	4102688	4	True				
ANR	4103210	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103211	Identifier	ret		4102688	0					
ANR	4103212	PrimaryExpression	1		4102688	1					
ANR	4103213	ElseStatement	else		4102688	0					
ANR	4103214	IfStatement	"if ( ! strcmp ( ext , ""exe"" ) )"		4102688	0					
ANR	4103215	Condition	"! strcmp ( ext , ""exe"" )"	920:15:26364:26383	4102688	0	True				
ANR	4103216	UnaryOperationExpression	"! strcmp ( ext , ""exe"" )"		4102688	0					
ANR	4103217	UnaryOperator	!		4102688	0					
ANR	4103218	CallExpression	"strcmp ( ext , ""exe"" )"		4102688	1					
ANR	4103219	Callee	strcmp		4102688	0					
ANR	4103220	Identifier	strcmp		4102688	0					
ANR	4103221	ArgumentList	ext		4102688	1					
ANR	4103222	Argument	ext		4102688	0					
ANR	4103223	Identifier	ext		4102688	0					
ANR	4103224	Argument	"""exe"""		4102688	1					
ANR	4103225	PrimaryExpression	"""exe"""		4102688	0					
ANR	4103226	CompoundStatement		69:5:2106:2141	4102688	1					
ANR	4103227	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""%s"" , file ) ;"	922:5:26409:26444	4102688	0	True				
ANR	4103228	IdentifierDecl	"* cmd = r_str_newf ( ""%s"" , file )"		4102688	0					
ANR	4103229	IdentifierDeclType	char *		4102688	0					
ANR	4103230	Identifier	cmd		4102688	1					
ANR	4103231	AssignmentExpression	"* cmd = r_str_newf ( ""%s"" , file )"		4102688	2		=			
ANR	4103232	Identifier	cmd		4102688	0					
ANR	4103233	CallExpression	"r_str_newf ( ""%s"" , file )"		4102688	1					
ANR	4103234	Callee	r_str_newf		4102688	0					
ANR	4103235	Identifier	r_str_newf		4102688	0					
ANR	4103236	ArgumentList	"""%s"""		4102688	1					
ANR	4103237	Argument	"""%s"""		4102688	0					
ANR	4103238	PrimaryExpression	"""%s"""		4102688	0					
ANR	4103239	Argument	file		4102688	1					
ANR	4103240	Identifier	file		4102688	0					
ANR	4103241	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	926:5:26498:26529	4102688	1	True				
ANR	4103242	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103243	Callee	r_lang_use		4102688	0					
ANR	4103244	Identifier	r_lang_use		4102688	0					
ANR	4103245	ArgumentList	core -> lang		4102688	1					
ANR	4103246	Argument	core -> lang		4102688	0					
ANR	4103247	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103248	Identifier	core		4102688	0					
ANR	4103249	Identifier	lang		4102688	1					
ANR	4103250	Argument	"""pipe"""		4102688	1					
ANR	4103251	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103252	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	927:5:26536:26573	4102688	2	True				
ANR	4103253	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103254	Callee	lang_run_file		4102688	0					
ANR	4103255	Identifier	lang_run_file		4102688	0					
ANR	4103256	ArgumentList	core		4102688	1					
ANR	4103257	Argument	core		4102688	0					
ANR	4103258	Identifier	core		4102688	0					
ANR	4103259	Argument	core -> lang		4102688	1					
ANR	4103260	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103261	Identifier	core		4102688	0					
ANR	4103262	Identifier	lang		4102688	1					
ANR	4103263	Argument	cmd		4102688	2					
ANR	4103264	Identifier	cmd		4102688	0					
ANR	4103265	ExpressionStatement	free ( cmd )	928:5:26580:26590	4102688	3	True				
ANR	4103266	CallExpression	free ( cmd )		4102688	0					
ANR	4103267	Callee	free		4102688	0					
ANR	4103268	Identifier	free		4102688	0					
ANR	4103269	ArgumentList	cmd		4102688	1					
ANR	4103270	Argument	cmd		4102688	0					
ANR	4103271	Identifier	cmd		4102688	0					
ANR	4103272	ExpressionStatement	ret = 1	929:5:26597:26604	4102688	4	True				
ANR	4103273	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103274	Identifier	ret		4102688	0					
ANR	4103275	PrimaryExpression	1		4102688	1					
ANR	4103276	ElseStatement	else		4102688	0					
ANR	4103277	IfStatement	"if ( ! strcmp ( ext , ""zig"" ) )"		4102688	0					
ANR	4103278	Condition	"! strcmp ( ext , ""zig"" )"	930:15:26621:26640	4102688	0	True				
ANR	4103279	UnaryOperationExpression	"! strcmp ( ext , ""zig"" )"		4102688	0					
ANR	4103280	UnaryOperator	!		4102688	0					
ANR	4103281	CallExpression	"strcmp ( ext , ""zig"" )"		4102688	1					
ANR	4103282	Callee	strcmp		4102688	0					
ANR	4103283	Identifier	strcmp		4102688	0					
ANR	4103284	ArgumentList	ext		4102688	1					
ANR	4103285	Argument	ext		4102688	0					
ANR	4103286	Identifier	ext		4102688	0					
ANR	4103287	Argument	"""zig"""		4102688	1					
ANR	4103288	PrimaryExpression	"""zig"""		4102688	0					
ANR	4103289	CompoundStatement		78:5:2347:2377	4102688	1					
ANR	4103290	IdentifierDeclStatement	"char * cmd = cmdstr ( ""zig run"" ) ;"	931:5:26650:26680	4102688	0	True				
ANR	4103291	IdentifierDecl	"* cmd = cmdstr ( ""zig run"" )"		4102688	0					
ANR	4103292	IdentifierDeclType	char *		4102688	0					
ANR	4103293	Identifier	cmd		4102688	1					
ANR	4103294	AssignmentExpression	"* cmd = cmdstr ( ""zig run"" )"		4102688	2		=			
ANR	4103295	Identifier	cmd		4102688	0					
ANR	4103296	CallExpression	"cmdstr ( ""zig run"" )"		4102688	1					
ANR	4103297	Callee	cmdstr		4102688	0					
ANR	4103298	Identifier	cmdstr		4102688	0					
ANR	4103299	ArgumentList	"""zig run"""		4102688	1					
ANR	4103300	Argument	"""zig run"""		4102688	0					
ANR	4103301	PrimaryExpression	"""zig run"""		4102688	0					
ANR	4103302	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	932:5:26687:26718	4102688	1	True				
ANR	4103303	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103304	Callee	r_lang_use		4102688	0					
ANR	4103305	Identifier	r_lang_use		4102688	0					
ANR	4103306	ArgumentList	core -> lang		4102688	1					
ANR	4103307	Argument	core -> lang		4102688	0					
ANR	4103308	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103309	Identifier	core		4102688	0					
ANR	4103310	Identifier	lang		4102688	1					
ANR	4103311	Argument	"""pipe"""		4102688	1					
ANR	4103312	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103313	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	933:5:26725:26762	4102688	2	True				
ANR	4103314	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103315	Callee	lang_run_file		4102688	0					
ANR	4103316	Identifier	lang_run_file		4102688	0					
ANR	4103317	ArgumentList	core		4102688	1					
ANR	4103318	Argument	core		4102688	0					
ANR	4103319	Identifier	core		4102688	0					
ANR	4103320	Argument	core -> lang		4102688	1					
ANR	4103321	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103322	Identifier	core		4102688	0					
ANR	4103323	Identifier	lang		4102688	1					
ANR	4103324	Argument	cmd		4102688	2					
ANR	4103325	Identifier	cmd		4102688	0					
ANR	4103326	ExpressionStatement	free ( cmd )	934:5:26769:26779	4102688	3	True				
ANR	4103327	CallExpression	free ( cmd )		4102688	0					
ANR	4103328	Callee	free		4102688	0					
ANR	4103329	Identifier	free		4102688	0					
ANR	4103330	ArgumentList	cmd		4102688	1					
ANR	4103331	Argument	cmd		4102688	0					
ANR	4103332	Identifier	cmd		4102688	0					
ANR	4103333	ExpressionStatement	ret = 1	935:5:26786:26793	4102688	4	True				
ANR	4103334	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103335	Identifier	ret		4102688	0					
ANR	4103336	PrimaryExpression	1		4102688	1					
ANR	4103337	ElseStatement	else		4102688	0					
ANR	4103338	IfStatement	"if ( ! strcmp ( ext , ""d"" ) )"		4102688	0					
ANR	4103339	Condition	"! strcmp ( ext , ""d"" )"	936:15:26810:26827	4102688	0	True				
ANR	4103340	UnaryOperationExpression	"! strcmp ( ext , ""d"" )"		4102688	0					
ANR	4103341	UnaryOperator	!		4102688	0					
ANR	4103342	CallExpression	"strcmp ( ext , ""d"" )"		4102688	1					
ANR	4103343	Callee	strcmp		4102688	0					
ANR	4103344	Identifier	strcmp		4102688	0					
ANR	4103345	ArgumentList	ext		4102688	1					
ANR	4103346	Argument	ext		4102688	0					
ANR	4103347	Identifier	ext		4102688	0					
ANR	4103348	Argument	"""d"""		4102688	1					
ANR	4103349	PrimaryExpression	"""d"""		4102688	0					
ANR	4103350	CompoundStatement		84:5:2534:2565	4102688	1					
ANR	4103351	IdentifierDeclStatement	"char * cmd = cmdstr ( ""dmd -run"" ) ;"	937:5:26837:26868	4102688	0	True				
ANR	4103352	IdentifierDecl	"* cmd = cmdstr ( ""dmd -run"" )"		4102688	0					
ANR	4103353	IdentifierDeclType	char *		4102688	0					
ANR	4103354	Identifier	cmd		4102688	1					
ANR	4103355	AssignmentExpression	"* cmd = cmdstr ( ""dmd -run"" )"		4102688	2		=			
ANR	4103356	Identifier	cmd		4102688	0					
ANR	4103357	CallExpression	"cmdstr ( ""dmd -run"" )"		4102688	1					
ANR	4103358	Callee	cmdstr		4102688	0					
ANR	4103359	Identifier	cmdstr		4102688	0					
ANR	4103360	ArgumentList	"""dmd -run"""		4102688	1					
ANR	4103361	Argument	"""dmd -run"""		4102688	0					
ANR	4103362	PrimaryExpression	"""dmd -run"""		4102688	0					
ANR	4103363	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	938:5:26875:26906	4102688	1	True				
ANR	4103364	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103365	Callee	r_lang_use		4102688	0					
ANR	4103366	Identifier	r_lang_use		4102688	0					
ANR	4103367	ArgumentList	core -> lang		4102688	1					
ANR	4103368	Argument	core -> lang		4102688	0					
ANR	4103369	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103370	Identifier	core		4102688	0					
ANR	4103371	Identifier	lang		4102688	1					
ANR	4103372	Argument	"""pipe"""		4102688	1					
ANR	4103373	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103374	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	939:5:26913:26950	4102688	2	True				
ANR	4103375	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103376	Callee	lang_run_file		4102688	0					
ANR	4103377	Identifier	lang_run_file		4102688	0					
ANR	4103378	ArgumentList	core		4102688	1					
ANR	4103379	Argument	core		4102688	0					
ANR	4103380	Identifier	core		4102688	0					
ANR	4103381	Argument	core -> lang		4102688	1					
ANR	4103382	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103383	Identifier	core		4102688	0					
ANR	4103384	Identifier	lang		4102688	1					
ANR	4103385	Argument	cmd		4102688	2					
ANR	4103386	Identifier	cmd		4102688	0					
ANR	4103387	ExpressionStatement	free ( cmd )	940:5:26957:26967	4102688	3	True				
ANR	4103388	CallExpression	free ( cmd )		4102688	0					
ANR	4103389	Callee	free		4102688	0					
ANR	4103390	Identifier	free		4102688	0					
ANR	4103391	ArgumentList	cmd		4102688	1					
ANR	4103392	Argument	cmd		4102688	0					
ANR	4103393	Identifier	cmd		4102688	0					
ANR	4103394	ExpressionStatement	ret = 1	941:5:26974:26981	4102688	4	True				
ANR	4103395	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103396	Identifier	ret		4102688	0					
ANR	4103397	PrimaryExpression	1		4102688	1					
ANR	4103398	ElseStatement	else		4102688	0					
ANR	4103399	IfStatement	"if ( ! strcmp ( ext , ""lsp"" ) )"		4102688	0					
ANR	4103400	Condition	"! strcmp ( ext , ""lsp"" )"	942:15:26998:27017	4102688	0	True				
ANR	4103401	UnaryOperationExpression	"! strcmp ( ext , ""lsp"" )"		4102688	0					
ANR	4103402	UnaryOperator	!		4102688	0					
ANR	4103403	CallExpression	"strcmp ( ext , ""lsp"" )"		4102688	1					
ANR	4103404	Callee	strcmp		4102688	0					
ANR	4103405	Identifier	strcmp		4102688	0					
ANR	4103406	ArgumentList	ext		4102688	1					
ANR	4103407	Argument	ext		4102688	0					
ANR	4103408	Identifier	ext		4102688	0					
ANR	4103409	Argument	"""lsp"""		4102688	1					
ANR	4103410	PrimaryExpression	"""lsp"""		4102688	0					
ANR	4103411	CompoundStatement		90:5:2724:2757	4102688	1					
ANR	4103412	IdentifierDeclStatement	"char * cmd = cmdstr ( ""newlisp -n"" ) ;"	943:5:27027:27060	4102688	0	True				
ANR	4103413	IdentifierDecl	"* cmd = cmdstr ( ""newlisp -n"" )"		4102688	0					
ANR	4103414	IdentifierDeclType	char *		4102688	0					
ANR	4103415	Identifier	cmd		4102688	1					
ANR	4103416	AssignmentExpression	"* cmd = cmdstr ( ""newlisp -n"" )"		4102688	2		=			
ANR	4103417	Identifier	cmd		4102688	0					
ANR	4103418	CallExpression	"cmdstr ( ""newlisp -n"" )"		4102688	1					
ANR	4103419	Callee	cmdstr		4102688	0					
ANR	4103420	Identifier	cmdstr		4102688	0					
ANR	4103421	ArgumentList	"""newlisp -n"""		4102688	1					
ANR	4103422	Argument	"""newlisp -n"""		4102688	0					
ANR	4103423	PrimaryExpression	"""newlisp -n"""		4102688	0					
ANR	4103424	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	944:5:27067:27098	4102688	1	True				
ANR	4103425	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103426	Callee	r_lang_use		4102688	0					
ANR	4103427	Identifier	r_lang_use		4102688	0					
ANR	4103428	ArgumentList	core -> lang		4102688	1					
ANR	4103429	Argument	core -> lang		4102688	0					
ANR	4103430	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103431	Identifier	core		4102688	0					
ANR	4103432	Identifier	lang		4102688	1					
ANR	4103433	Argument	"""pipe"""		4102688	1					
ANR	4103434	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103435	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	945:5:27105:27142	4102688	2	True				
ANR	4103436	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103437	Callee	lang_run_file		4102688	0					
ANR	4103438	Identifier	lang_run_file		4102688	0					
ANR	4103439	ArgumentList	core		4102688	1					
ANR	4103440	Argument	core		4102688	0					
ANR	4103441	Identifier	core		4102688	0					
ANR	4103442	Argument	core -> lang		4102688	1					
ANR	4103443	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103444	Identifier	core		4102688	0					
ANR	4103445	Identifier	lang		4102688	1					
ANR	4103446	Argument	cmd		4102688	2					
ANR	4103447	Identifier	cmd		4102688	0					
ANR	4103448	ExpressionStatement	free ( cmd )	946:5:27149:27159	4102688	3	True				
ANR	4103449	CallExpression	free ( cmd )		4102688	0					
ANR	4103450	Callee	free		4102688	0					
ANR	4103451	Identifier	free		4102688	0					
ANR	4103452	ArgumentList	cmd		4102688	1					
ANR	4103453	Argument	cmd		4102688	0					
ANR	4103454	Identifier	cmd		4102688	0					
ANR	4103455	ExpressionStatement	ret = 1	947:5:27166:27173	4102688	4	True				
ANR	4103456	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103457	Identifier	ret		4102688	0					
ANR	4103458	PrimaryExpression	1		4102688	1					
ANR	4103459	ElseStatement	else		4102688	0					
ANR	4103460	IfStatement	"if ( ! strcmp ( ext , ""go"" ) )"		4102688	0					
ANR	4103461	Condition	"! strcmp ( ext , ""go"" )"	948:15:27190:27208	4102688	0	True				
ANR	4103462	UnaryOperationExpression	"! strcmp ( ext , ""go"" )"		4102688	0					
ANR	4103463	UnaryOperator	!		4102688	0					
ANR	4103464	CallExpression	"strcmp ( ext , ""go"" )"		4102688	1					
ANR	4103465	Callee	strcmp		4102688	0					
ANR	4103466	Identifier	strcmp		4102688	0					
ANR	4103467	ArgumentList	ext		4102688	1					
ANR	4103468	Argument	ext		4102688	0					
ANR	4103469	Identifier	ext		4102688	0					
ANR	4103470	Argument	"""go"""		4102688	1					
ANR	4103471	PrimaryExpression	"""go"""		4102688	0					
ANR	4103472	CompoundStatement		96:5:2915:2944	4102688	1					
ANR	4103473	IdentifierDeclStatement	"char * cmd = cmdstr ( ""go run"" ) ;"	949:5:27218:27247	4102688	0	True				
ANR	4103474	IdentifierDecl	"* cmd = cmdstr ( ""go run"" )"		4102688	0					
ANR	4103475	IdentifierDeclType	char *		4102688	0					
ANR	4103476	Identifier	cmd		4102688	1					
ANR	4103477	AssignmentExpression	"* cmd = cmdstr ( ""go run"" )"		4102688	2		=			
ANR	4103478	Identifier	cmd		4102688	0					
ANR	4103479	CallExpression	"cmdstr ( ""go run"" )"		4102688	1					
ANR	4103480	Callee	cmdstr		4102688	0					
ANR	4103481	Identifier	cmdstr		4102688	0					
ANR	4103482	ArgumentList	"""go run"""		4102688	1					
ANR	4103483	Argument	"""go run"""		4102688	0					
ANR	4103484	PrimaryExpression	"""go run"""		4102688	0					
ANR	4103485	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	950:5:27254:27285	4102688	1	True				
ANR	4103486	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103487	Callee	r_lang_use		4102688	0					
ANR	4103488	Identifier	r_lang_use		4102688	0					
ANR	4103489	ArgumentList	core -> lang		4102688	1					
ANR	4103490	Argument	core -> lang		4102688	0					
ANR	4103491	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103492	Identifier	core		4102688	0					
ANR	4103493	Identifier	lang		4102688	1					
ANR	4103494	Argument	"""pipe"""		4102688	1					
ANR	4103495	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103496	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	951:5:27292:27329	4102688	2	True				
ANR	4103497	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103498	Callee	lang_run_file		4102688	0					
ANR	4103499	Identifier	lang_run_file		4102688	0					
ANR	4103500	ArgumentList	core		4102688	1					
ANR	4103501	Argument	core		4102688	0					
ANR	4103502	Identifier	core		4102688	0					
ANR	4103503	Argument	core -> lang		4102688	1					
ANR	4103504	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103505	Identifier	core		4102688	0					
ANR	4103506	Identifier	lang		4102688	1					
ANR	4103507	Argument	cmd		4102688	2					
ANR	4103508	Identifier	cmd		4102688	0					
ANR	4103509	ExpressionStatement	free ( cmd )	952:5:27336:27346	4102688	3	True				
ANR	4103510	CallExpression	free ( cmd )		4102688	0					
ANR	4103511	Callee	free		4102688	0					
ANR	4103512	Identifier	free		4102688	0					
ANR	4103513	ArgumentList	cmd		4102688	1					
ANR	4103514	Argument	cmd		4102688	0					
ANR	4103515	Identifier	cmd		4102688	0					
ANR	4103516	ExpressionStatement	ret = 1	953:5:27353:27360	4102688	4	True				
ANR	4103517	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103518	Identifier	ret		4102688	0					
ANR	4103519	PrimaryExpression	1		4102688	1					
ANR	4103520	ElseStatement	else		4102688	0					
ANR	4103521	IfStatement	"if ( ! strcmp ( ext , ""es6"" ) )"		4102688	0					
ANR	4103522	Condition	"! strcmp ( ext , ""es6"" )"	954:15:27377:27396	4102688	0	True				
ANR	4103523	UnaryOperationExpression	"! strcmp ( ext , ""es6"" )"		4102688	0					
ANR	4103524	UnaryOperator	!		4102688	0					
ANR	4103525	CallExpression	"strcmp ( ext , ""es6"" )"		4102688	1					
ANR	4103526	Callee	strcmp		4102688	0					
ANR	4103527	Identifier	strcmp		4102688	0					
ANR	4103528	ArgumentList	ext		4102688	1					
ANR	4103529	Argument	ext		4102688	0					
ANR	4103530	Identifier	ext		4102688	0					
ANR	4103531	Argument	"""es6"""		4102688	1					
ANR	4103532	PrimaryExpression	"""es6"""		4102688	0					
ANR	4103533	CompoundStatement		102:5:3103:3136	4102688	1					
ANR	4103534	IdentifierDeclStatement	"char * cmd = cmdstr ( ""babel-node"" ) ;"	955:5:27406:27439	4102688	0	True				
ANR	4103535	IdentifierDecl	"* cmd = cmdstr ( ""babel-node"" )"		4102688	0					
ANR	4103536	IdentifierDeclType	char *		4102688	0					
ANR	4103537	Identifier	cmd		4102688	1					
ANR	4103538	AssignmentExpression	"* cmd = cmdstr ( ""babel-node"" )"		4102688	2		=			
ANR	4103539	Identifier	cmd		4102688	0					
ANR	4103540	CallExpression	"cmdstr ( ""babel-node"" )"		4102688	1					
ANR	4103541	Callee	cmdstr		4102688	0					
ANR	4103542	Identifier	cmdstr		4102688	0					
ANR	4103543	ArgumentList	"""babel-node"""		4102688	1					
ANR	4103544	Argument	"""babel-node"""		4102688	0					
ANR	4103545	PrimaryExpression	"""babel-node"""		4102688	0					
ANR	4103546	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	956:5:27446:27477	4102688	1	True				
ANR	4103547	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103548	Callee	r_lang_use		4102688	0					
ANR	4103549	Identifier	r_lang_use		4102688	0					
ANR	4103550	ArgumentList	core -> lang		4102688	1					
ANR	4103551	Argument	core -> lang		4102688	0					
ANR	4103552	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103553	Identifier	core		4102688	0					
ANR	4103554	Identifier	lang		4102688	1					
ANR	4103555	Argument	"""pipe"""		4102688	1					
ANR	4103556	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103557	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	957:5:27484:27521	4102688	2	True				
ANR	4103558	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103559	Callee	lang_run_file		4102688	0					
ANR	4103560	Identifier	lang_run_file		4102688	0					
ANR	4103561	ArgumentList	core		4102688	1					
ANR	4103562	Argument	core		4102688	0					
ANR	4103563	Identifier	core		4102688	0					
ANR	4103564	Argument	core -> lang		4102688	1					
ANR	4103565	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103566	Identifier	core		4102688	0					
ANR	4103567	Identifier	lang		4102688	1					
ANR	4103568	Argument	cmd		4102688	2					
ANR	4103569	Identifier	cmd		4102688	0					
ANR	4103570	ExpressionStatement	free ( cmd )	958:5:27528:27538	4102688	3	True				
ANR	4103571	CallExpression	free ( cmd )		4102688	0					
ANR	4103572	Callee	free		4102688	0					
ANR	4103573	Identifier	free		4102688	0					
ANR	4103574	ArgumentList	cmd		4102688	1					
ANR	4103575	Argument	cmd		4102688	0					
ANR	4103576	Identifier	cmd		4102688	0					
ANR	4103577	ExpressionStatement	ret = 1	959:5:27545:27552	4102688	4	True				
ANR	4103578	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103579	Identifier	ret		4102688	0					
ANR	4103580	PrimaryExpression	1		4102688	1					
ANR	4103581	ElseStatement	else		4102688	0					
ANR	4103582	IfStatement	"if ( ! strcmp ( ext , ""rb"" ) )"		4102688	0					
ANR	4103583	Condition	"! strcmp ( ext , ""rb"" )"	960:15:27569:27587	4102688	0	True				
ANR	4103584	UnaryOperationExpression	"! strcmp ( ext , ""rb"" )"		4102688	0					
ANR	4103585	UnaryOperator	!		4102688	0					
ANR	4103586	CallExpression	"strcmp ( ext , ""rb"" )"		4102688	1					
ANR	4103587	Callee	strcmp		4102688	0					
ANR	4103588	Identifier	strcmp		4102688	0					
ANR	4103589	ArgumentList	ext		4102688	1					
ANR	4103590	Argument	ext		4102688	0					
ANR	4103591	Identifier	ext		4102688	0					
ANR	4103592	Argument	"""rb"""		4102688	1					
ANR	4103593	PrimaryExpression	"""rb"""		4102688	0					
ANR	4103594	CompoundStatement		108:5:3294:3321	4102688	1					
ANR	4103595	IdentifierDeclStatement	"char * cmd = cmdstr ( ""ruby"" ) ;"	961:5:27597:27624	4102688	0	True				
ANR	4103596	IdentifierDecl	"* cmd = cmdstr ( ""ruby"" )"		4102688	0					
ANR	4103597	IdentifierDeclType	char *		4102688	0					
ANR	4103598	Identifier	cmd		4102688	1					
ANR	4103599	AssignmentExpression	"* cmd = cmdstr ( ""ruby"" )"		4102688	2		=			
ANR	4103600	Identifier	cmd		4102688	0					
ANR	4103601	CallExpression	"cmdstr ( ""ruby"" )"		4102688	1					
ANR	4103602	Callee	cmdstr		4102688	0					
ANR	4103603	Identifier	cmdstr		4102688	0					
ANR	4103604	ArgumentList	"""ruby"""		4102688	1					
ANR	4103605	Argument	"""ruby"""		4102688	0					
ANR	4103606	PrimaryExpression	"""ruby"""		4102688	0					
ANR	4103607	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	962:5:27631:27662	4102688	1	True				
ANR	4103608	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103609	Callee	r_lang_use		4102688	0					
ANR	4103610	Identifier	r_lang_use		4102688	0					
ANR	4103611	ArgumentList	core -> lang		4102688	1					
ANR	4103612	Argument	core -> lang		4102688	0					
ANR	4103613	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103614	Identifier	core		4102688	0					
ANR	4103615	Identifier	lang		4102688	1					
ANR	4103616	Argument	"""pipe"""		4102688	1					
ANR	4103617	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103618	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	963:5:27669:27706	4102688	2	True				
ANR	4103619	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103620	Callee	lang_run_file		4102688	0					
ANR	4103621	Identifier	lang_run_file		4102688	0					
ANR	4103622	ArgumentList	core		4102688	1					
ANR	4103623	Argument	core		4102688	0					
ANR	4103624	Identifier	core		4102688	0					
ANR	4103625	Argument	core -> lang		4102688	1					
ANR	4103626	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103627	Identifier	core		4102688	0					
ANR	4103628	Identifier	lang		4102688	1					
ANR	4103629	Argument	cmd		4102688	2					
ANR	4103630	Identifier	cmd		4102688	0					
ANR	4103631	ExpressionStatement	free ( cmd )	964:5:27713:27723	4102688	3	True				
ANR	4103632	CallExpression	free ( cmd )		4102688	0					
ANR	4103633	Callee	free		4102688	0					
ANR	4103634	Identifier	free		4102688	0					
ANR	4103635	ArgumentList	cmd		4102688	1					
ANR	4103636	Argument	cmd		4102688	0					
ANR	4103637	Identifier	cmd		4102688	0					
ANR	4103638	ExpressionStatement	ret = 1	965:5:27730:27737	4102688	4	True				
ANR	4103639	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103640	Identifier	ret		4102688	0					
ANR	4103641	PrimaryExpression	1		4102688	1					
ANR	4103642	ElseStatement	else		4102688	0					
ANR	4103643	IfStatement	"if ( ! strcmp ( ext , ""vala"" ) )"		4102688	0					
ANR	4103644	Condition	"! strcmp ( ext , ""vala"" )"	966:15:27754:27774	4102688	0	True				
ANR	4103645	UnaryOperationExpression	"! strcmp ( ext , ""vala"" )"		4102688	0					
ANR	4103646	UnaryOperator	!		4102688	0					
ANR	4103647	CallExpression	"strcmp ( ext , ""vala"" )"		4102688	1					
ANR	4103648	Callee	strcmp		4102688	0					
ANR	4103649	Identifier	strcmp		4102688	0					
ANR	4103650	ArgumentList	ext		4102688	1					
ANR	4103651	Argument	ext		4102688	0					
ANR	4103652	Identifier	ext		4102688	0					
ANR	4103653	Argument	"""vala"""		4102688	1					
ANR	4103654	PrimaryExpression	"""vala"""		4102688	0					
ANR	4103655	CompoundStatement		113:38:3474:3474	4102688	1					
ANR	4103656	ExpressionStatement	"r_lang_use ( core -> lang , ""vala"" )"	967:5:27784:27815	4102688	0	True				
ANR	4103657	CallExpression	"r_lang_use ( core -> lang , ""vala"" )"		4102688	0					
ANR	4103658	Callee	r_lang_use		4102688	0					
ANR	4103659	Identifier	r_lang_use		4102688	0					
ANR	4103660	ArgumentList	core -> lang		4102688	1					
ANR	4103661	Argument	core -> lang		4102688	0					
ANR	4103662	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103663	Identifier	core		4102688	0					
ANR	4103664	Identifier	lang		4102688	1					
ANR	4103665	Argument	"""vala"""		4102688	1					
ANR	4103666	PrimaryExpression	"""vala"""		4102688	0					
ANR	4103667	ExpressionStatement	"lang_run_file ( core , core -> lang , file )"	968:5:27822:27860	4102688	1	True				
ANR	4103668	CallExpression	"lang_run_file ( core , core -> lang , file )"		4102688	0					
ANR	4103669	Callee	lang_run_file		4102688	0					
ANR	4103670	Identifier	lang_run_file		4102688	0					
ANR	4103671	ArgumentList	core		4102688	1					
ANR	4103672	Argument	core		4102688	0					
ANR	4103673	Identifier	core		4102688	0					
ANR	4103674	Argument	core -> lang		4102688	1					
ANR	4103675	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103676	Identifier	core		4102688	0					
ANR	4103677	Identifier	lang		4102688	1					
ANR	4103678	Argument	file		4102688	2					
ANR	4103679	Identifier	file		4102688	0					
ANR	4103680	ExpressionStatement	ret = 1	969:5:27867:27874	4102688	2	True				
ANR	4103681	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103682	Identifier	ret		4102688	0					
ANR	4103683	PrimaryExpression	1		4102688	1					
ANR	4103684	ElseStatement	else		4102688	0					
ANR	4103685	IfStatement	"if ( ! strcmp ( ext , ""sh"" ) )"		4102688	0					
ANR	4103686	Condition	"! strcmp ( ext , ""sh"" )"	970:15:27891:27909	4102688	0	True				
ANR	4103687	UnaryOperationExpression	"! strcmp ( ext , ""sh"" )"		4102688	0					
ANR	4103688	UnaryOperator	!		4102688	0					
ANR	4103689	CallExpression	"strcmp ( ext , ""sh"" )"		4102688	1					
ANR	4103690	Callee	strcmp		4102688	0					
ANR	4103691	Identifier	strcmp		4102688	0					
ANR	4103692	ArgumentList	ext		4102688	1					
ANR	4103693	Argument	ext		4102688	0					
ANR	4103694	Identifier	ext		4102688	0					
ANR	4103695	Argument	"""sh"""		4102688	1					
ANR	4103696	PrimaryExpression	"""sh"""		4102688	0					
ANR	4103697	CompoundStatement		118:5:3616:3652	4102688	1					
ANR	4103698	IdentifierDeclStatement	"char * shell = r_sys_getenv ( ""SHELL"" ) ;"	971:5:27919:27955	4102688	0	True				
ANR	4103699	IdentifierDecl	"* shell = r_sys_getenv ( ""SHELL"" )"		4102688	0					
ANR	4103700	IdentifierDeclType	char *		4102688	0					
ANR	4103701	Identifier	shell		4102688	1					
ANR	4103702	AssignmentExpression	"* shell = r_sys_getenv ( ""SHELL"" )"		4102688	2		=			
ANR	4103703	Identifier	shell		4102688	0					
ANR	4103704	CallExpression	"r_sys_getenv ( ""SHELL"" )"		4102688	1					
ANR	4103705	Callee	r_sys_getenv		4102688	0					
ANR	4103706	Identifier	r_sys_getenv		4102688	0					
ANR	4103707	ArgumentList	"""SHELL"""		4102688	1					
ANR	4103708	Argument	"""SHELL"""		4102688	0					
ANR	4103709	PrimaryExpression	"""SHELL"""		4102688	0					
ANR	4103710	IfStatement	if ( ! shell )		4102688	1					
ANR	4103711	Condition	! shell	972:9:27966:27971	4102688	0	True				
ANR	4103712	UnaryOperationExpression	! shell		4102688	0					
ANR	4103713	UnaryOperator	!		4102688	0					
ANR	4103714	Identifier	shell		4102688	1					
ANR	4103715	CompoundStatement		119:17:3671:3671	4102688	1					
ANR	4103716	ExpressionStatement	"shell = strdup ( ""sh"" )"	973:6:27982:28003	4102688	0	True				
ANR	4103717	AssignmentExpression	"shell = strdup ( ""sh"" )"		4102688	0		=			
ANR	4103718	Identifier	shell		4102688	0					
ANR	4103719	CallExpression	"strdup ( ""sh"" )"		4102688	1					
ANR	4103720	Callee	strdup		4102688	0					
ANR	4103721	Identifier	strdup		4102688	0					
ANR	4103722	ArgumentList	"""sh"""		4102688	1					
ANR	4103723	Argument	"""sh"""		4102688	0					
ANR	4103724	PrimaryExpression	"""sh"""		4102688	0					
ANR	4103725	IfStatement	if ( shell )		4102688	2					
ANR	4103726	Condition	shell	975:9:28021:28025	4102688	0	True				
ANR	4103727	Identifier	shell		4102688	0					
ANR	4103728	CompoundStatement		124:6:3772:3819	4102688	1					
ANR	4103729	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	976:6:28036:28067	4102688	0	True				
ANR	4103730	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103731	Callee	r_lang_use		4102688	0					
ANR	4103732	Identifier	r_lang_use		4102688	0					
ANR	4103733	ArgumentList	core -> lang		4102688	1					
ANR	4103734	Argument	core -> lang		4102688	0					
ANR	4103735	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103736	Identifier	core		4102688	0					
ANR	4103737	Identifier	lang		4102688	1					
ANR	4103738	Argument	"""pipe"""		4102688	1					
ANR	4103739	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103740	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""%s '%s'"" , shell , file ) ;"	977:6:28075:28122	4102688	1	True				
ANR	4103741	IdentifierDecl	"* cmd = r_str_newf ( ""%s '%s'"" , shell , file )"		4102688	0					
ANR	4103742	IdentifierDeclType	char *		4102688	0					
ANR	4103743	Identifier	cmd		4102688	1					
ANR	4103744	AssignmentExpression	"* cmd = r_str_newf ( ""%s '%s'"" , shell , file )"		4102688	2		=			
ANR	4103745	Identifier	cmd		4102688	0					
ANR	4103746	CallExpression	"r_str_newf ( ""%s '%s'"" , shell , file )"		4102688	1					
ANR	4103747	Callee	r_str_newf		4102688	0					
ANR	4103748	Identifier	r_str_newf		4102688	0					
ANR	4103749	ArgumentList	"""%s '%s'"""		4102688	1					
ANR	4103750	Argument	"""%s '%s'"""		4102688	0					
ANR	4103751	PrimaryExpression	"""%s '%s'"""		4102688	0					
ANR	4103752	Argument	shell		4102688	1					
ANR	4103753	Identifier	shell		4102688	0					
ANR	4103754	Argument	file		4102688	2					
ANR	4103755	Identifier	file		4102688	0					
ANR	4103756	IfStatement	if ( cmd )		4102688	2					
ANR	4103757	Condition	cmd	978:10:28134:28136	4102688	0	True				
ANR	4103758	Identifier	cmd		4102688	0					
ANR	4103759	CompoundStatement		125:15:3836:3836	4102688	1					
ANR	4103760	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	979:7:28148:28185	4102688	0	True				
ANR	4103761	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103762	Callee	lang_run_file		4102688	0					
ANR	4103763	Identifier	lang_run_file		4102688	0					
ANR	4103764	ArgumentList	core		4102688	1					
ANR	4103765	Argument	core		4102688	0					
ANR	4103766	Identifier	core		4102688	0					
ANR	4103767	Argument	core -> lang		4102688	1					
ANR	4103768	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103769	Identifier	core		4102688	0					
ANR	4103770	Identifier	lang		4102688	1					
ANR	4103771	Argument	cmd		4102688	2					
ANR	4103772	Identifier	cmd		4102688	0					
ANR	4103773	ExpressionStatement	free ( cmd )	980:7:28194:28204	4102688	1	True				
ANR	4103774	CallExpression	free ( cmd )		4102688	0					
ANR	4103775	Callee	free		4102688	0					
ANR	4103776	Identifier	free		4102688	0					
ANR	4103777	ArgumentList	cmd		4102688	1					
ANR	4103778	Argument	cmd		4102688	0					
ANR	4103779	Identifier	cmd		4102688	0					
ANR	4103780	ExpressionStatement	free ( shell )	982:6:28220:28232	4102688	3	True				
ANR	4103781	CallExpression	free ( shell )		4102688	0					
ANR	4103782	Callee	free		4102688	0					
ANR	4103783	Identifier	free		4102688	0					
ANR	4103784	ArgumentList	shell		4102688	1					
ANR	4103785	Argument	shell		4102688	0					
ANR	4103786	Identifier	shell		4102688	0					
ANR	4103787	ExpressionStatement	ret = 1	984:5:28246:28253	4102688	3	True				
ANR	4103788	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103789	Identifier	ret		4102688	0					
ANR	4103790	PrimaryExpression	1		4102688	1					
ANR	4103791	ElseStatement	else		4102688	0					
ANR	4103792	IfStatement	"if ( ! strcmp ( ext , ""pl"" ) )"		4102688	0					
ANR	4103793	Condition	"! strcmp ( ext , ""pl"" )"	985:15:28270:28288	4102688	0	True				
ANR	4103794	UnaryOperationExpression	"! strcmp ( ext , ""pl"" )"		4102688	0					
ANR	4103795	UnaryOperator	!		4102688	0					
ANR	4103796	CallExpression	"strcmp ( ext , ""pl"" )"		4102688	1					
ANR	4103797	Callee	strcmp		4102688	0					
ANR	4103798	Identifier	strcmp		4102688	0					
ANR	4103799	ArgumentList	ext		4102688	1					
ANR	4103800	Argument	ext		4102688	0					
ANR	4103801	Identifier	ext		4102688	0					
ANR	4103802	Argument	"""pl"""		4102688	1					
ANR	4103803	PrimaryExpression	"""pl"""		4102688	0					
ANR	4103804	CompoundStatement		133:5:3995:4022	4102688	1					
ANR	4103805	IdentifierDeclStatement	"char * cmd = cmdstr ( ""perl"" ) ;"	986:5:28298:28325	4102688	0	True				
ANR	4103806	IdentifierDecl	"* cmd = cmdstr ( ""perl"" )"		4102688	0					
ANR	4103807	IdentifierDeclType	char *		4102688	0					
ANR	4103808	Identifier	cmd		4102688	1					
ANR	4103809	AssignmentExpression	"* cmd = cmdstr ( ""perl"" )"		4102688	2		=			
ANR	4103810	Identifier	cmd		4102688	0					
ANR	4103811	CallExpression	"cmdstr ( ""perl"" )"		4102688	1					
ANR	4103812	Callee	cmdstr		4102688	0					
ANR	4103813	Identifier	cmdstr		4102688	0					
ANR	4103814	ArgumentList	"""perl"""		4102688	1					
ANR	4103815	Argument	"""perl"""		4102688	0					
ANR	4103816	PrimaryExpression	"""perl"""		4102688	0					
ANR	4103817	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	987:5:28332:28363	4102688	1	True				
ANR	4103818	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103819	Callee	r_lang_use		4102688	0					
ANR	4103820	Identifier	r_lang_use		4102688	0					
ANR	4103821	ArgumentList	core -> lang		4102688	1					
ANR	4103822	Argument	core -> lang		4102688	0					
ANR	4103823	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103824	Identifier	core		4102688	0					
ANR	4103825	Identifier	lang		4102688	1					
ANR	4103826	Argument	"""pipe"""		4102688	1					
ANR	4103827	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103828	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	988:5:28370:28407	4102688	2	True				
ANR	4103829	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103830	Callee	lang_run_file		4102688	0					
ANR	4103831	Identifier	lang_run_file		4102688	0					
ANR	4103832	ArgumentList	core		4102688	1					
ANR	4103833	Argument	core		4102688	0					
ANR	4103834	Identifier	core		4102688	0					
ANR	4103835	Argument	core -> lang		4102688	1					
ANR	4103836	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103837	Identifier	core		4102688	0					
ANR	4103838	Identifier	lang		4102688	1					
ANR	4103839	Argument	cmd		4102688	2					
ANR	4103840	Identifier	cmd		4102688	0					
ANR	4103841	ExpressionStatement	free ( cmd )	989:5:28414:28424	4102688	3	True				
ANR	4103842	CallExpression	free ( cmd )		4102688	0					
ANR	4103843	Callee	free		4102688	0					
ANR	4103844	Identifier	free		4102688	0					
ANR	4103845	ArgumentList	cmd		4102688	1					
ANR	4103846	Argument	cmd		4102688	0					
ANR	4103847	Identifier	cmd		4102688	0					
ANR	4103848	ExpressionStatement	ret = 1	990:5:28431:28438	4102688	4	True				
ANR	4103849	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103850	Identifier	ret		4102688	0					
ANR	4103851	PrimaryExpression	1		4102688	1					
ANR	4103852	ElseStatement	else		4102688	0					
ANR	4103853	IfStatement	"if ( ! strcmp ( ext , ""py"" ) )"		4102688	0					
ANR	4103854	Condition	"! strcmp ( ext , ""py"" )"	991:15:28455:28473	4102688	0	True				
ANR	4103855	UnaryOperationExpression	"! strcmp ( ext , ""py"" )"		4102688	0					
ANR	4103856	UnaryOperator	!		4102688	0					
ANR	4103857	CallExpression	"strcmp ( ext , ""py"" )"		4102688	1					
ANR	4103858	Callee	strcmp		4102688	0					
ANR	4103859	Identifier	strcmp		4102688	0					
ANR	4103860	ArgumentList	ext		4102688	1					
ANR	4103861	Argument	ext		4102688	0					
ANR	4103862	Identifier	ext		4102688	0					
ANR	4103863	Argument	"""py"""		4102688	1					
ANR	4103864	PrimaryExpression	"""py"""		4102688	0					
ANR	4103865	CompoundStatement		139:5:4180:4209	4102688	1					
ANR	4103866	IdentifierDeclStatement	"char * cmd = cmdstr ( ""python"" ) ;"	992:5:28483:28512	4102688	0	True				
ANR	4103867	IdentifierDecl	"* cmd = cmdstr ( ""python"" )"		4102688	0					
ANR	4103868	IdentifierDeclType	char *		4102688	0					
ANR	4103869	Identifier	cmd		4102688	1					
ANR	4103870	AssignmentExpression	"* cmd = cmdstr ( ""python"" )"		4102688	2		=			
ANR	4103871	Identifier	cmd		4102688	0					
ANR	4103872	CallExpression	"cmdstr ( ""python"" )"		4102688	1					
ANR	4103873	Callee	cmdstr		4102688	0					
ANR	4103874	Identifier	cmdstr		4102688	0					
ANR	4103875	ArgumentList	"""python"""		4102688	1					
ANR	4103876	Argument	"""python"""		4102688	0					
ANR	4103877	PrimaryExpression	"""python"""		4102688	0					
ANR	4103878	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	993:5:28519:28550	4102688	1	True				
ANR	4103879	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103880	Callee	r_lang_use		4102688	0					
ANR	4103881	Identifier	r_lang_use		4102688	0					
ANR	4103882	ArgumentList	core -> lang		4102688	1					
ANR	4103883	Argument	core -> lang		4102688	0					
ANR	4103884	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103885	Identifier	core		4102688	0					
ANR	4103886	Identifier	lang		4102688	1					
ANR	4103887	Argument	"""pipe"""		4102688	1					
ANR	4103888	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103889	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	994:5:28557:28594	4102688	2	True				
ANR	4103890	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103891	Callee	lang_run_file		4102688	0					
ANR	4103892	Identifier	lang_run_file		4102688	0					
ANR	4103893	ArgumentList	core		4102688	1					
ANR	4103894	Argument	core		4102688	0					
ANR	4103895	Identifier	core		4102688	0					
ANR	4103896	Argument	core -> lang		4102688	1					
ANR	4103897	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103898	Identifier	core		4102688	0					
ANR	4103899	Identifier	lang		4102688	1					
ANR	4103900	Argument	cmd		4102688	2					
ANR	4103901	Identifier	cmd		4102688	0					
ANR	4103902	ExpressionStatement	free ( cmd )	995:5:28601:28611	4102688	3	True				
ANR	4103903	CallExpression	free ( cmd )		4102688	0					
ANR	4103904	Callee	free		4102688	0					
ANR	4103905	Identifier	free		4102688	0					
ANR	4103906	ArgumentList	cmd		4102688	1					
ANR	4103907	Argument	cmd		4102688	0					
ANR	4103908	Identifier	cmd		4102688	0					
ANR	4103909	ExpressionStatement	ret = 1	996:5:28618:28625	4102688	4	True				
ANR	4103910	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4103911	Identifier	ret		4102688	0					
ANR	4103912	PrimaryExpression	1		4102688	1					
ANR	4103913	ElseStatement	else		4102688	0					
ANR	4103914	CompoundStatement		147:4:4386:4428	4102688	0					
ANR	4103915	IdentifierDeclStatement	char * abspath = r_file_path ( file ) ;	999:4:28649:28683	4102688	0	True				
ANR	4103916	IdentifierDecl	* abspath = r_file_path ( file )		4102688	0					
ANR	4103917	IdentifierDeclType	char *		4102688	0					
ANR	4103918	Identifier	abspath		4102688	1					
ANR	4103919	AssignmentExpression	* abspath = r_file_path ( file )		4102688	2		=			
ANR	4103920	Identifier	abspath		4102688	0					
ANR	4103921	CallExpression	r_file_path ( file )		4102688	1					
ANR	4103922	Callee	r_file_path		4102688	0					
ANR	4103923	Identifier	r_file_path		4102688	0					
ANR	4103924	ArgumentList	file		4102688	1					
ANR	4103925	Argument	file		4102688	0					
ANR	4103926	Identifier	file		4102688	0					
ANR	4103927	IdentifierDeclStatement	"char * lang = langFromHashbang ( core , file ) ;"	1000:4:28689:28731	4102688	1	True				
ANR	4103928	IdentifierDecl	"* lang = langFromHashbang ( core , file )"		4102688	0					
ANR	4103929	IdentifierDeclType	char *		4102688	0					
ANR	4103930	Identifier	lang		4102688	1					
ANR	4103931	AssignmentExpression	"* lang = langFromHashbang ( core , file )"		4102688	2		=			
ANR	4103932	Identifier	lang		4102688	0					
ANR	4103933	CallExpression	"langFromHashbang ( core , file )"		4102688	1					
ANR	4103934	Callee	langFromHashbang		4102688	0					
ANR	4103935	Identifier	langFromHashbang		4102688	0					
ANR	4103936	ArgumentList	core		4102688	1					
ANR	4103937	Argument	core		4102688	0					
ANR	4103938	Identifier	core		4102688	0					
ANR	4103939	Argument	file		4102688	1					
ANR	4103940	Identifier	file		4102688	0					
ANR	4103941	IfStatement	if ( lang )		4102688	2					
ANR	4103942	Condition	lang	1001:8:28741:28744	4102688	0	True				
ANR	4103943	Identifier	lang		4102688	0					
ANR	4103944	CompoundStatement		150:5:4489:4535	4102688	1					
ANR	4103945	ExpressionStatement	"r_lang_use ( core -> lang , ""pipe"" )"	1002:5:28754:28785	4102688	0	True				
ANR	4103946	CallExpression	"r_lang_use ( core -> lang , ""pipe"" )"		4102688	0					
ANR	4103947	Callee	r_lang_use		4102688	0					
ANR	4103948	Identifier	r_lang_use		4102688	0					
ANR	4103949	ArgumentList	core -> lang		4102688	1					
ANR	4103950	Argument	core -> lang		4102688	0					
ANR	4103951	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103952	Identifier	core		4102688	0					
ANR	4103953	Identifier	lang		4102688	1					
ANR	4103954	Argument	"""pipe"""		4102688	1					
ANR	4103955	PrimaryExpression	"""pipe"""		4102688	0					
ANR	4103956	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""%s '%s'"" , lang , file ) ;"	1003:5:28792:28838	4102688	1	True				
ANR	4103957	IdentifierDecl	"* cmd = r_str_newf ( ""%s '%s'"" , lang , file )"		4102688	0					
ANR	4103958	IdentifierDeclType	char *		4102688	0					
ANR	4103959	Identifier	cmd		4102688	1					
ANR	4103960	AssignmentExpression	"* cmd = r_str_newf ( ""%s '%s'"" , lang , file )"		4102688	2		=			
ANR	4103961	Identifier	cmd		4102688	0					
ANR	4103962	CallExpression	"r_str_newf ( ""%s '%s'"" , lang , file )"		4102688	1					
ANR	4103963	Callee	r_str_newf		4102688	0					
ANR	4103964	Identifier	r_str_newf		4102688	0					
ANR	4103965	ArgumentList	"""%s '%s'"""		4102688	1					
ANR	4103966	Argument	"""%s '%s'"""		4102688	0					
ANR	4103967	PrimaryExpression	"""%s '%s'"""		4102688	0					
ANR	4103968	Argument	lang		4102688	1					
ANR	4103969	Identifier	lang		4102688	0					
ANR	4103970	Argument	file		4102688	2					
ANR	4103971	Identifier	file		4102688	0					
ANR	4103972	ExpressionStatement	"lang_run_file ( core , core -> lang , cmd )"	1004:5:28845:28882	4102688	2	True				
ANR	4103973	CallExpression	"lang_run_file ( core , core -> lang , cmd )"		4102688	0					
ANR	4103974	Callee	lang_run_file		4102688	0					
ANR	4103975	Identifier	lang_run_file		4102688	0					
ANR	4103976	ArgumentList	core		4102688	1					
ANR	4103977	Argument	core		4102688	0					
ANR	4103978	Identifier	core		4102688	0					
ANR	4103979	Argument	core -> lang		4102688	1					
ANR	4103980	PtrMemberAccess	core -> lang		4102688	0					
ANR	4103981	Identifier	core		4102688	0					
ANR	4103982	Identifier	lang		4102688	1					
ANR	4103983	Argument	cmd		4102688	2					
ANR	4103984	Identifier	cmd		4102688	0					
ANR	4103985	ExpressionStatement	free ( lang )	1005:5:28889:28900	4102688	3	True				
ANR	4103986	CallExpression	free ( lang )		4102688	0					
ANR	4103987	Callee	free		4102688	0					
ANR	4103988	Identifier	free		4102688	0					
ANR	4103989	ArgumentList	lang		4102688	1					
ANR	4103990	Argument	lang		4102688	0					
ANR	4103991	Identifier	lang		4102688	0					
ANR	4103992	ExpressionStatement	free ( cmd )	1006:5:28907:28917	4102688	4	True				
ANR	4103993	CallExpression	free ( cmd )		4102688	0					
ANR	4103994	Callee	free		4102688	0					
ANR	4103995	Identifier	free		4102688	0					
ANR	4103996	ArgumentList	cmd		4102688	1					
ANR	4103997	Argument	cmd		4102688	0					
ANR	4103998	Identifier	cmd		4102688	0					
ANR	4103999	ExpressionStatement	ret = 1	1007:5:28924:28931	4102688	5	True				
ANR	4104000	AssignmentExpression	ret = 1		4102688	0		=			
ANR	4104001	Identifier	ret		4102688	0					
ANR	4104002	PrimaryExpression	1		4102688	1					
ANR	4104003	ExpressionStatement	free ( abspath )	1009:4:28943:28957	4102688	3	True				
ANR	4104004	CallExpression	free ( abspath )		4102688	0					
ANR	4104005	Callee	free		4102688	0					
ANR	4104006	Identifier	free		4102688	0					
ANR	4104007	ArgumentList	abspath		4102688	1					
ANR	4104008	Argument	abspath		4102688	0					
ANR	4104009	Identifier	abspath		4102688	0					
ANR	4104010	IfStatement	if ( ! ret )		4102688	15					
ANR	4104011	Condition	! ret	1011:7:28971:28974	4102688	0	True				
ANR	4104012	UnaryOperationExpression	! ret		4102688	0					
ANR	4104013	UnaryOperator	!		4102688	0					
ANR	4104014	Identifier	ret		4102688	1					
ANR	4104015	CompoundStatement		158:13:4674:4674	4102688	1					
ANR	4104016	ExpressionStatement	"ret = r_core_cmd_file ( core , file )"	1012:4:28983:29017	4102688	0	True				
ANR	4104017	AssignmentExpression	"ret = r_core_cmd_file ( core , file )"		4102688	0		=			
ANR	4104018	Identifier	ret		4102688	0					
ANR	4104019	CallExpression	"r_core_cmd_file ( core , file )"		4102688	1					
ANR	4104020	Callee	r_core_cmd_file		4102688	0					
ANR	4104021	Identifier	r_core_cmd_file		4102688	0					
ANR	4104022	ArgumentList	core		4102688	1					
ANR	4104023	Argument	core		4102688	0					
ANR	4104024	Identifier	core		4102688	0					
ANR	4104025	Argument	file		4102688	1					
ANR	4104026	Identifier	file		4102688	0					
ANR	4104027	ExpressionStatement	free ( r_list_pop ( core -> scriptstack ) )	1016:1:29032:29069	4102688	17	True				
ANR	4104028	CallExpression	free ( r_list_pop ( core -> scriptstack ) )		4102688	0					
ANR	4104029	Callee	free		4102688	0					
ANR	4104030	Identifier	free		4102688	0					
ANR	4104031	ArgumentList	r_list_pop ( core -> scriptstack )		4102688	1					
ANR	4104032	Argument	r_list_pop ( core -> scriptstack )		4102688	0					
ANR	4104033	CallExpression	r_list_pop ( core -> scriptstack )		4102688	0					
ANR	4104034	Callee	r_list_pop		4102688	0					
ANR	4104035	Identifier	r_list_pop		4102688	0					
ANR	4104036	ArgumentList	core -> scriptstack		4102688	1					
ANR	4104037	Argument	core -> scriptstack		4102688	0					
ANR	4104038	PtrMemberAccess	core -> scriptstack		4102688	0					
ANR	4104039	Identifier	core		4102688	0					
ANR	4104040	Identifier	scriptstack		4102688	1					
ANR	4104041	ReturnStatement	return ret ;	1017:1:29072:29082	4102688	18	True				
ANR	4104042	Identifier	ret		4102688	0					
ANR	4104043	ReturnType	R_API bool		4102688	1					
ANR	4104044	Identifier	r_core_run_script		4102688	2					
ANR	4104045	ParameterList	"RCore * core , const char * file"		4102688	3					
ANR	4104046	Parameter	RCore * core	854:29:24271:24281	4102688	0	True				
ANR	4104047	ParameterType	RCore *		4102688	0					
ANR	4104048	Identifier	core		4102688	1					
ANR	4104049	Parameter	const char * file	854:42:24284:24299	4102688	1	True				
ANR	4104050	ParameterType	const char *		4102688	0					
ANR	4104051	Identifier	file		4102688	1					
ANR	4104052	CFGEntryNode	ENTRY		4102688		True				
ANR	4104053	CFGExitNode	EXIT		4102688		True				
ANR	4104054	Symbol	httpSandbox		4102688						
ANR	4104055	Symbol	r_file_abspath		4102688						
ANR	4104056	Symbol	r_sys_getenv		4102688						
ANR	4104057	Symbol	lang_run_file		4102688						
ANR	4104058	Symbol	dir		4102688						
ANR	4104059	Symbol	core -> lang		4102688						
ANR	4104060	Symbol	r_list_pop		4102688						
ANR	4104061	Symbol	core -> scriptstack		4102688						
ANR	4104062	Symbol	r_core_cmd_lines		4102688						
ANR	4104063	Symbol	absfile		4102688						
ANR	4104064	Symbol	abspath		4102688						
ANR	4104065	Symbol	r_core_editor		4102688						
ANR	4104066	Symbol	ret		4102688						
ANR	4104067	Symbol	strcmp		4102688						
ANR	4104068	Symbol	ext		4102688						
ANR	4104069	Symbol	NULL		4102688						
ANR	4104070	Symbol	iter		4102688						
ANR	4104071	Symbol	cmdstr		4102688						
ANR	4104072	Symbol	core		4102688						
ANR	4104073	Symbol	r_str_lchr		4102688						
ANR	4104074	Symbol	shell		4102688						
ANR	4104075	Symbol	r_config_get_i		4102688						
ANR	4104076	Symbol	name		4102688						
ANR	4104077	Symbol	true		4102688						
ANR	4104078	Symbol	p -> name		4102688						
ANR	4104079	Symbol	cmd		4102688						
ANR	4104080	Symbol	r_parse_c_file		4102688						
ANR	4104081	Symbol	* core		4102688						
ANR	4104082	Symbol	r_config_get		4102688						
ANR	4104083	Symbol	core -> anal -> sdb_types		4102688						
ANR	4104084	Symbol	r_str_newf		4102688						
ANR	4104085	Symbol	core -> anal		4102688						
ANR	4104086	Symbol	out		4102688						
ANR	4104087	Symbol	file		4102688						
ANR	4104088	Symbol	langFromHashbang		4102688						
ANR	4104089	Symbol	httpIndex		4102688						
ANR	4104090	Symbol	r_str_endswith		4102688						
ANR	4104091	Symbol	r_file_path		4102688						
ANR	4104092	Symbol	lang		4102688						
ANR	4104093	Symbol	* * core		4102688						
ANR	4104094	Symbol	core -> config		4102688						
ANR	4104095	Symbol	r_core_cmd_file		4102688						
ANR	4104096	Symbol	false		4102688						
ANR	4104097	Symbol	p		4102688						
ANR	4104098	Symbol	* core -> anal		4102688						
ANR	4104099	Symbol	r_file_is_c		4102688						
ANR	4104100	Symbol	* p		4102688						
ANR	4104101	Symbol	strdup		4102688						
ANR	4104102	Symbol	r_lang_get_by_extension		4102688						
ANR	4104103	Function	cmd_ls	1020:0:29087:29770							
ANR	4104104	FunctionDef	"cmd_ls (void * data , const char * input)"		4104103	0					
ANR	4104105	CompoundStatement		1020:49:29136:29770	4104103	0					
ANR	4104106	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1021:1:29147:29174	4104103	0	True				
ANR	4104107	IdentifierDecl	* core = ( RCore * ) data		4104103	0					
ANR	4104108	IdentifierDeclType	RCore *		4104103	0					
ANR	4104109	Identifier	core		4104103	1					
ANR	4104110	AssignmentExpression	* core = ( RCore * ) data		4104103	2		=			
ANR	4104111	Identifier	core		4104103	0					
ANR	4104112	CastExpression	( RCore * ) data		4104103	1					
ANR	4104113	CastTarget	RCore *		4104103	0					
ANR	4104114	Identifier	data		4104103	1					
ANR	4104115	IdentifierDeclStatement	"const char * arg = strchr ( input , ' ' ) ;"	1022:1:29177:29214	4104103	1	True				
ANR	4104116	IdentifierDecl	"* arg = strchr ( input , ' ' )"		4104103	0					
ANR	4104117	IdentifierDeclType	const char *		4104103	0					
ANR	4104118	Identifier	arg		4104103	1					
ANR	4104119	AssignmentExpression	"* arg = strchr ( input , ' ' )"		4104103	2		=			
ANR	4104120	Identifier	arg		4104103	0					
ANR	4104121	CallExpression	"strchr ( input , ' ' )"		4104103	1					
ANR	4104122	Callee	strchr		4104103	0					
ANR	4104123	Identifier	strchr		4104103	0					
ANR	4104124	ArgumentList	input		4104103	1					
ANR	4104125	Argument	input		4104103	0					
ANR	4104126	Identifier	input		4104103	0					
ANR	4104127	Argument	' '		4104103	1					
ANR	4104128	PrimaryExpression	' '		4104103	0					
ANR	4104129	IfStatement	if ( arg )		4104103	2					
ANR	4104130	Condition	arg	1023:5:29221:29223	4104103	0	True				
ANR	4104131	Identifier	arg		4104103	0					
ANR	4104132	CompoundStatement		4:10:89:89	4104103	1					
ANR	4104133	ExpressionStatement	arg = r_str_trim_ro ( arg + 1 )	1024:2:29230:29259	4104103	0	True				
ANR	4104134	AssignmentExpression	arg = r_str_trim_ro ( arg + 1 )		4104103	0		=			
ANR	4104135	Identifier	arg		4104103	0					
ANR	4104136	CallExpression	r_str_trim_ro ( arg + 1 )		4104103	1					
ANR	4104137	Callee	r_str_trim_ro		4104103	0					
ANR	4104138	Identifier	r_str_trim_ro		4104103	0					
ANR	4104139	ArgumentList	arg + 1		4104103	1					
ANR	4104140	Argument	arg + 1		4104103	0					
ANR	4104141	AdditiveExpression	arg + 1		4104103	0		+			
ANR	4104142	Identifier	arg		4104103	0					
ANR	4104143	PrimaryExpression	1		4104103	1					
ANR	4104144	SwitchStatement	switch ( * input )		4104103	3					
ANR	4104145	Condition	* input	1026:9:29273:29278	4104103	0	True				
ANR	4104146	UnaryOperationExpression	* input		4104103	0					
ANR	4104147	UnaryOperator	*		4104103	0					
ANR	4104148	Identifier	input		4104103	1					
ANR	4104149	CompoundStatement		7:17:144:144	4104103	1					
ANR	4104150	Label	case '?' :	1027:1:29284:29292	4104103	0	True				
ANR	4104151	ExpressionStatement	"eprintf ( ""Usage: l[es] # ls to list files, le[ss] to less a file\\n"" )"	1028:2:29304:29372	4104103	1	True				
ANR	4104152	CallExpression	"eprintf ( ""Usage: l[es] # ls to list files, le[ss] to less a file\\n"" )"		4104103	0					
ANR	4104153	Callee	eprintf		4104103	0					
ANR	4104154	Identifier	eprintf		4104103	0					
ANR	4104155	ArgumentList	"""Usage: l[es] # ls to list files, le[ss] to less a file\\n"""		4104103	1					
ANR	4104156	Argument	"""Usage: l[es] # ls to list files, le[ss] to less a file\\n"""		4104103	0					
ANR	4104157	PrimaryExpression	"""Usage: l[es] # ls to list files, le[ss] to less a file\\n"""		4104103	0					
ANR	4104158	BreakStatement	break ;	1029:2:29376:29381	4104103	2	True				
ANR	4104159	Label	case 'e' :	1030:1:29384:29392	4104103	3	True				
ANR	4104160	IfStatement	if ( arg )		4104103	4					
ANR	4104161	Condition	arg	1031:6:29408:29410	4104103	0	True				
ANR	4104162	Identifier	arg		4104103	0					
ANR	4104163	CompoundStatement		12:11:276:276	4104103	1					
ANR	4104164	ExpressionStatement	"r_core_cmdf ( core , ""cat %s~.."" , arg )"	1032:3:29418:29454	4104103	0	True				
ANR	4104165	CallExpression	"r_core_cmdf ( core , ""cat %s~.."" , arg )"		4104103	0					
ANR	4104166	Callee	r_core_cmdf		4104103	0					
ANR	4104167	Identifier	r_core_cmdf		4104103	0					
ANR	4104168	ArgumentList	core		4104103	1					
ANR	4104169	Argument	core		4104103	0					
ANR	4104170	Identifier	core		4104103	0					
ANR	4104171	Argument	"""cat %s~.."""		4104103	1					
ANR	4104172	PrimaryExpression	"""cat %s~.."""		4104103	0					
ANR	4104173	Argument	arg		4104103	2					
ANR	4104174	Identifier	arg		4104103	0					
ANR	4104175	ElseStatement	else		4104103	0					
ANR	4104176	CompoundStatement		14:9:328:328	4104103	0					
ANR	4104177	ExpressionStatement	"eprintf ( ""Usage: less [file]\\n"" )"	1034:3:29470:29502	4104103	0	True				
ANR	4104178	CallExpression	"eprintf ( ""Usage: less [file]\\n"" )"		4104103	0					
ANR	4104179	Callee	eprintf		4104103	0					
ANR	4104180	Identifier	eprintf		4104103	0					
ANR	4104181	ArgumentList	"""Usage: less [file]\\n"""		4104103	1					
ANR	4104182	Argument	"""Usage: less [file]\\n"""		4104103	0					
ANR	4104183	PrimaryExpression	"""Usage: less [file]\\n"""		4104103	0					
ANR	4104184	BreakStatement	break ;	1036:2:29510:29515	4104103	5	True				
ANR	4104185	Label	default :	1037:1:29518:29525	4104103	6	True				
ANR	4104186	Identifier	default		4104103	0					
ANR	4104187	IfStatement	if ( ! arg )		4104103	7					
ANR	4104188	Condition	! arg	1038:6:29541:29544	4104103	0	True				
ANR	4104189	UnaryOperationExpression	! arg		4104103	0					
ANR	4104190	UnaryOperator	!		4104103	0					
ANR	4104191	Identifier	arg		4104103	1					
ANR	4104192	CompoundStatement		19:12:410:410	4104103	1					
ANR	4104193	ExpressionStatement	"arg = """""	1039:3:29552:29560	4104103	0	True				
ANR	4104194	AssignmentExpression	"arg = """""		4104103	0		=			
ANR	4104195	Identifier	arg		4104103	0					
ANR	4104196	PrimaryExpression	""""""		4104103	1					
ANR	4104197	IfStatement	"if ( r_fs_check ( core -> fs , arg ) )"		4104103	8					
ANR	4104198	Condition	"r_fs_check ( core -> fs , arg )"	1041:6:29572:29597	4104103	0	True				
ANR	4104199	CallExpression	"r_fs_check ( core -> fs , arg )"		4104103	0					
ANR	4104200	Callee	r_fs_check		4104103	0					
ANR	4104201	Identifier	r_fs_check		4104103	0					
ANR	4104202	ArgumentList	core -> fs		4104103	1					
ANR	4104203	Argument	core -> fs		4104103	0					
ANR	4104204	PtrMemberAccess	core -> fs		4104103	0					
ANR	4104205	Identifier	core		4104103	0					
ANR	4104206	Identifier	fs		4104103	1					
ANR	4104207	Argument	arg		4104103	1					
ANR	4104208	Identifier	arg		4104103	0					
ANR	4104209	CompoundStatement		22:34:463:463	4104103	1					
ANR	4104210	ExpressionStatement	"r_core_cmdf ( core , ""md %s"" , arg )"	1042:3:29605:29637	4104103	0	True				
ANR	4104211	CallExpression	"r_core_cmdf ( core , ""md %s"" , arg )"		4104103	0					
ANR	4104212	Callee	r_core_cmdf		4104103	0					
ANR	4104213	Identifier	r_core_cmdf		4104103	0					
ANR	4104214	ArgumentList	core		4104103	1					
ANR	4104215	Argument	core		4104103	0					
ANR	4104216	Identifier	core		4104103	0					
ANR	4104217	Argument	"""md %s"""		4104103	1					
ANR	4104218	PrimaryExpression	"""md %s"""		4104103	0					
ANR	4104219	Argument	arg		4104103	2					
ANR	4104220	Identifier	arg		4104103	0					
ANR	4104221	ElseStatement	else		4104103	0					
ANR	4104222	CompoundStatement		25:3:516:545	4104103	0					
ANR	4104223	IdentifierDeclStatement	char * res = r_syscmd_ls ( arg ) ;	1044:3:29653:29682	4104103	0	True				
ANR	4104224	IdentifierDecl	* res = r_syscmd_ls ( arg )		4104103	0					
ANR	4104225	IdentifierDeclType	char *		4104103	0					
ANR	4104226	Identifier	res		4104103	1					
ANR	4104227	AssignmentExpression	* res = r_syscmd_ls ( arg )		4104103	2		=			
ANR	4104228	Identifier	res		4104103	0					
ANR	4104229	CallExpression	r_syscmd_ls ( arg )		4104103	1					
ANR	4104230	Callee	r_syscmd_ls		4104103	0					
ANR	4104231	Identifier	r_syscmd_ls		4104103	0					
ANR	4104232	ArgumentList	arg		4104103	1					
ANR	4104233	Argument	arg		4104103	0					
ANR	4104234	Identifier	arg		4104103	0					
ANR	4104235	IfStatement	if ( res )		4104103	1					
ANR	4104236	Condition	res	1045:7:29691:29693	4104103	0	True				
ANR	4104237	Identifier	res		4104103	0					
ANR	4104238	CompoundStatement		26:12:559:559	4104103	1					
ANR	4104239	ExpressionStatement	r_cons_print ( res )	1046:4:29702:29720	4104103	0	True				
ANR	4104240	CallExpression	r_cons_print ( res )		4104103	0					
ANR	4104241	Callee	r_cons_print		4104103	0					
ANR	4104242	Identifier	r_cons_print		4104103	0					
ANR	4104243	ArgumentList	res		4104103	1					
ANR	4104244	Argument	res		4104103	0					
ANR	4104245	Identifier	res		4104103	0					
ANR	4104246	ExpressionStatement	free ( res )	1047:4:29726:29736	4104103	1	True				
ANR	4104247	CallExpression	free ( res )		4104103	0					
ANR	4104248	Callee	free		4104103	0					
ANR	4104249	Identifier	free		4104103	0					
ANR	4104250	ArgumentList	res		4104103	1					
ANR	4104251	Argument	res		4104103	0					
ANR	4104252	Identifier	res		4104103	0					
ANR	4104253	BreakStatement	break ;	1050:2:29749:29754	4104103	9	True				
ANR	4104254	ReturnStatement	return 0 ;	1052:1:29760:29768	4104103	4	True				
ANR	4104255	PrimaryExpression	0		4104103	0					
ANR	4104256	ReturnType	static int		4104103	1					
ANR	4104257	Identifier	cmd_ls		4104103	2					
ANR	4104258	ParameterList	"void * data , const char * input"		4104103	3					
ANR	4104259	Parameter	void * data	1020:18:29105:29114	4104103	0	True				
ANR	4104260	ParameterType	void *		4104103	0					
ANR	4104261	Identifier	data		4104103	1					
ANR	4104262	Parameter	const char * input	1020:30:29117:29133	4104103	1	True				
ANR	4104263	ParameterType	const char *		4104103	0					
ANR	4104264	Identifier	input		4104103	1					
ANR	4104265	CFGEntryNode	ENTRY		4104103		True				
ANR	4104266	CFGExitNode	EXIT		4104103		True				
ANR	4104267	Symbol	input		4104103						
ANR	4104268	Symbol	core		4104103						
ANR	4104269	Symbol	res		4104103						
ANR	4104270	Symbol	r_syscmd_ls		4104103						
ANR	4104271	Symbol	data		4104103						
ANR	4104272	Symbol	arg		4104103						
ANR	4104273	Symbol	r_str_trim_ro		4104103						
ANR	4104274	Symbol	* input		4104103						
ANR	4104275	Symbol	* core		4104103						
ANR	4104276	Symbol	strchr		4104103						
ANR	4104277	Symbol	core -> fs		4104103						
ANR	4104278	Symbol	r_fs_check		4104103						
ANR	4104279	Function	cmd_join	1055:0:29773:30622							
ANR	4104280	FunctionDef	"cmd_join (void * data , const char * input)"		4104279	0					
ANR	4104281	CompoundStatement		1055:51:29824:30622	4104279	0					
ANR	4104282	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1056:1:29837:29864	4104279	0	True				
ANR	4104283	IdentifierDecl	* core = ( RCore * ) data		4104279	0					
ANR	4104284	IdentifierDeclType	RCore *		4104279	0					
ANR	4104285	Identifier	core		4104279	1					
ANR	4104286	AssignmentExpression	* core = ( RCore * ) data		4104279	2		=			
ANR	4104287	Identifier	core		4104279	0					
ANR	4104288	CastExpression	( RCore * ) data		4104279	1					
ANR	4104289	CastTarget	RCore *		4104279	0					
ANR	4104290	Identifier	data		4104279	1					
ANR	4104291	IdentifierDeclStatement	const char * tmp = strdup ( input ) ;	1057:1:29867:29899	4104279	1	True				
ANR	4104292	IdentifierDecl	* tmp = strdup ( input )		4104279	0					
ANR	4104293	IdentifierDeclType	const char *		4104279	0					
ANR	4104294	Identifier	tmp		4104279	1					
ANR	4104295	AssignmentExpression	* tmp = strdup ( input )		4104279	2		=			
ANR	4104296	Identifier	tmp		4104279	0					
ANR	4104297	CallExpression	strdup ( input )		4104279	1					
ANR	4104298	Callee	strdup		4104279	0					
ANR	4104299	Identifier	strdup		4104279	0					
ANR	4104300	ArgumentList	input		4104279	1					
ANR	4104301	Argument	input		4104279	0					
ANR	4104302	Identifier	input		4104279	0					
ANR	4104303	IdentifierDeclStatement	"const char * arg1 = strchr ( tmp , ' ' ) ;"	1058:1:29902:29938	4104279	2	True				
ANR	4104304	IdentifierDecl	"* arg1 = strchr ( tmp , ' ' )"		4104279	0					
ANR	4104305	IdentifierDeclType	const char *		4104279	0					
ANR	4104306	Identifier	arg1		4104279	1					
ANR	4104307	AssignmentExpression	"* arg1 = strchr ( tmp , ' ' )"		4104279	2		=			
ANR	4104308	Identifier	arg1		4104279	0					
ANR	4104309	CallExpression	"strchr ( tmp , ' ' )"		4104279	1					
ANR	4104310	Callee	strchr		4104279	0					
ANR	4104311	Identifier	strchr		4104279	0					
ANR	4104312	ArgumentList	tmp		4104279	1					
ANR	4104313	Argument	tmp		4104279	0					
ANR	4104314	Identifier	tmp		4104279	0					
ANR	4104315	Argument	' '		4104279	1					
ANR	4104316	PrimaryExpression	' '		4104279	0					
ANR	4104317	IfStatement	if ( ! arg1 )		4104279	3					
ANR	4104318	Condition	! arg1	1059:5:29945:29949	4104279	0	True				
ANR	4104319	UnaryOperationExpression	! arg1		4104279	0					
ANR	4104320	UnaryOperator	!		4104279	0					
ANR	4104321	Identifier	arg1		4104279	1					
ANR	4104322	CompoundStatement		5:12:127:127	4104279	1					
ANR	4104323	GotoStatement	goto beach ;	1060:2:29956:29966	4104279	0	True				
ANR	4104324	Identifier	beach		4104279	0					
ANR	4104325	ExpressionStatement	arg1 = r_str_trim_ro ( arg1 )	1062:1:29972:29999	4104279	4	True				
ANR	4104326	AssignmentExpression	arg1 = r_str_trim_ro ( arg1 )		4104279	0		=			
ANR	4104327	Identifier	arg1		4104279	0					
ANR	4104328	CallExpression	r_str_trim_ro ( arg1 )		4104279	1					
ANR	4104329	Callee	r_str_trim_ro		4104279	0					
ANR	4104330	Identifier	r_str_trim_ro		4104279	0					
ANR	4104331	ArgumentList	arg1		4104279	1					
ANR	4104332	Argument	arg1		4104279	0					
ANR	4104333	Identifier	arg1		4104279	0					
ANR	4104334	IdentifierDeclStatement	"char * end = strchr ( arg1 , ' ' ) ;"	1063:1:30002:30032	4104279	5	True				
ANR	4104335	IdentifierDecl	"* end = strchr ( arg1 , ' ' )"		4104279	0					
ANR	4104336	IdentifierDeclType	char *		4104279	0					
ANR	4104337	Identifier	end		4104279	1					
ANR	4104338	AssignmentExpression	"* end = strchr ( arg1 , ' ' )"		4104279	2		=			
ANR	4104339	Identifier	end		4104279	0					
ANR	4104340	CallExpression	"strchr ( arg1 , ' ' )"		4104279	1					
ANR	4104341	Callee	strchr		4104279	0					
ANR	4104342	Identifier	strchr		4104279	0					
ANR	4104343	ArgumentList	arg1		4104279	1					
ANR	4104344	Argument	arg1		4104279	0					
ANR	4104345	Identifier	arg1		4104279	0					
ANR	4104346	Argument	' '		4104279	1					
ANR	4104347	PrimaryExpression	' '		4104279	0					
ANR	4104348	IfStatement	if ( ! end )		4104279	6					
ANR	4104349	Condition	! end	1064:5:30039:30042	4104279	0	True				
ANR	4104350	UnaryOperationExpression	! end		4104279	0					
ANR	4104351	UnaryOperator	!		4104279	0					
ANR	4104352	Identifier	end		4104279	1					
ANR	4104353	CompoundStatement		10:11:220:220	4104279	1					
ANR	4104354	GotoStatement	goto beach ;	1065:2:30049:30059	4104279	0	True				
ANR	4104355	Identifier	beach		4104279	0					
ANR	4104356	ExpressionStatement	* end = '\\0'	1067:1:30065:30076	4104279	7	True				
ANR	4104357	AssignmentExpression	* end = '\\0'		4104279	0		=			
ANR	4104358	UnaryOperationExpression	* end		4104279	0					
ANR	4104359	UnaryOperator	*		4104279	0					
ANR	4104360	Identifier	end		4104279	1					
ANR	4104361	PrimaryExpression	'\\0'		4104279	1					
ANR	4104362	IdentifierDeclStatement	const char * arg2 = end + 1 ;	1068:1:30079:30103	4104279	8	True				
ANR	4104363	IdentifierDecl	* arg2 = end + 1		4104279	0					
ANR	4104364	IdentifierDeclType	const char *		4104279	0					
ANR	4104365	Identifier	arg2		4104279	1					
ANR	4104366	AssignmentExpression	* arg2 = end + 1		4104279	2		=			
ANR	4104367	Identifier	arg2		4104279	0					
ANR	4104368	AdditiveExpression	end + 1		4104279	1		+			
ANR	4104369	Identifier	end		4104279	0					
ANR	4104370	PrimaryExpression	1		4104279	1					
ANR	4104371	IfStatement	if ( ! arg2 )		4104279	9					
ANR	4104372	Condition	! arg2	1069:5:30110:30114	4104279	0	True				
ANR	4104373	UnaryOperationExpression	! arg2		4104279	0					
ANR	4104374	UnaryOperator	!		4104279	0					
ANR	4104375	Identifier	arg2		4104279	1					
ANR	4104376	CompoundStatement		15:12:292:292	4104279	1					
ANR	4104377	GotoStatement	goto beach ;	1070:2:30121:30131	4104279	0	True				
ANR	4104378	Identifier	beach		4104279	0					
ANR	4104379	ExpressionStatement	arg2 = r_str_trim_ro ( arg2 )	1072:1:30137:30164	4104279	10	True				
ANR	4104380	AssignmentExpression	arg2 = r_str_trim_ro ( arg2 )		4104279	0		=			
ANR	4104381	Identifier	arg2		4104279	0					
ANR	4104382	CallExpression	r_str_trim_ro ( arg2 )		4104279	1					
ANR	4104383	Callee	r_str_trim_ro		4104279	0					
ANR	4104384	Identifier	r_str_trim_ro		4104279	0					
ANR	4104385	ArgumentList	arg2		4104279	1					
ANR	4104386	Argument	arg2		4104279	0					
ANR	4104387	Identifier	arg2		4104279	0					
ANR	4104388	SwitchStatement	switch ( * input )		4104279	11					
ANR	4104389	Condition	* input	1073:9:30175:30180	4104279	0	True				
ANR	4104390	UnaryOperationExpression	* input		4104279	0					
ANR	4104391	UnaryOperator	*		4104279	0					
ANR	4104392	Identifier	input		4104279	1					
ANR	4104393	CompoundStatement		19:17:358:358	4104279	1					
ANR	4104394	Label	case '?' :	1074:1:30186:30194	4104279	0	True				
ANR	4104395	GotoStatement	goto beach ;	1075:2:30209:30219	4104279	1	True				
ANR	4104396	Identifier	beach		4104279	0					
ANR	4104397	Label	default :	1076:1:30222:30229	4104279	2	True				
ANR	4104398	Identifier	default		4104279	0					
ANR	4104399	IfStatement	if ( ! arg1 )		4104279	3					
ANR	4104400	Condition	! arg1	1077:6:30247:30251	4104279	0	True				
ANR	4104401	UnaryOperationExpression	! arg1		4104279	0					
ANR	4104402	UnaryOperator	!		4104279	0					
ANR	4104403	Identifier	arg1		4104279	1					
ANR	4104404	CompoundStatement		23:13:429:429	4104279	1					
ANR	4104405	ExpressionStatement	"arg1 = """""	1078:3:30259:30268	4104279	0	True				
ANR	4104406	AssignmentExpression	"arg1 = """""		4104279	0		=			
ANR	4104407	Identifier	arg1		4104279	0					
ANR	4104408	PrimaryExpression	""""""		4104279	1					
ANR	4104409	IfStatement	if ( ! arg2 )		4104279	4					
ANR	4104410	Condition	! arg2	1080:6:30280:30284	4104279	0	True				
ANR	4104411	UnaryOperationExpression	! arg2		4104279	0					
ANR	4104412	UnaryOperator	!		4104279	0					
ANR	4104413	Identifier	arg2		4104279	1					
ANR	4104414	CompoundStatement		26:13:462:462	4104279	1					
ANR	4104415	ExpressionStatement	"arg2 = """""	1081:3:30292:30301	4104279	0	True				
ANR	4104416	AssignmentExpression	"arg2 = """""		4104279	0		=			
ANR	4104417	Identifier	arg2		4104279	0					
ANR	4104418	PrimaryExpression	""""""		4104279	1					
ANR	4104419	IfStatement	"if ( ! r_fs_check ( core -> fs , arg1 ) && ! r_fs_check ( core -> fs , arg2 ) )"		4104279	5					
ANR	4104420	Condition	"! r_fs_check ( core -> fs , arg1 ) && ! r_fs_check ( core -> fs , arg2 )"	1083:6:30313:30372	4104279	0	True				
ANR	4104421	AndExpression	"! r_fs_check ( core -> fs , arg1 ) && ! r_fs_check ( core -> fs , arg2 )"		4104279	0		&&			
ANR	4104422	UnaryOperationExpression	"! r_fs_check ( core -> fs , arg1 )"		4104279	0					
ANR	4104423	UnaryOperator	!		4104279	0					
ANR	4104424	CallExpression	"r_fs_check ( core -> fs , arg1 )"		4104279	1					
ANR	4104425	Callee	r_fs_check		4104279	0					
ANR	4104426	Identifier	r_fs_check		4104279	0					
ANR	4104427	ArgumentList	core -> fs		4104279	1					
ANR	4104428	Argument	core -> fs		4104279	0					
ANR	4104429	PtrMemberAccess	core -> fs		4104279	0					
ANR	4104430	Identifier	core		4104279	0					
ANR	4104431	Identifier	fs		4104279	1					
ANR	4104432	Argument	arg1		4104279	1					
ANR	4104433	Identifier	arg1		4104279	0					
ANR	4104434	UnaryOperationExpression	"! r_fs_check ( core -> fs , arg2 )"		4104279	1					
ANR	4104435	UnaryOperator	!		4104279	0					
ANR	4104436	CallExpression	"r_fs_check ( core -> fs , arg2 )"		4104279	1					
ANR	4104437	Callee	r_fs_check		4104279	0					
ANR	4104438	Identifier	r_fs_check		4104279	0					
ANR	4104439	ArgumentList	core -> fs		4104279	1					
ANR	4104440	Argument	core -> fs		4104279	0					
ANR	4104441	PtrMemberAccess	core -> fs		4104279	0					
ANR	4104442	Identifier	core		4104279	0					
ANR	4104443	Identifier	fs		4104279	1					
ANR	4104444	Argument	arg2		4104279	1					
ANR	4104445	Identifier	arg2		4104279	0					
ANR	4104446	CompoundStatement		30:3:555:593	4104279	1					
ANR	4104447	IdentifierDeclStatement	"char * res = r_syscmd_join ( arg1 , arg2 ) ;"	1084:3:30380:30418	4104279	0	True				
ANR	4104448	IdentifierDecl	"* res = r_syscmd_join ( arg1 , arg2 )"		4104279	0					
ANR	4104449	IdentifierDeclType	char *		4104279	0					
ANR	4104450	Identifier	res		4104279	1					
ANR	4104451	AssignmentExpression	"* res = r_syscmd_join ( arg1 , arg2 )"		4104279	2		=			
ANR	4104452	Identifier	res		4104279	0					
ANR	4104453	CallExpression	"r_syscmd_join ( arg1 , arg2 )"		4104279	1					
ANR	4104454	Callee	r_syscmd_join		4104279	0					
ANR	4104455	Identifier	r_syscmd_join		4104279	0					
ANR	4104456	ArgumentList	arg1		4104279	1					
ANR	4104457	Argument	arg1		4104279	0					
ANR	4104458	Identifier	arg1		4104279	0					
ANR	4104459	Argument	arg2		4104279	1					
ANR	4104460	Identifier	arg2		4104279	0					
ANR	4104461	IfStatement	if ( res )		4104279	1					
ANR	4104462	Condition	res	1085:7:30427:30429	4104279	0	True				
ANR	4104463	Identifier	res		4104279	0					
ANR	4104464	CompoundStatement		31:12:607:607	4104279	1					
ANR	4104465	ExpressionStatement	r_cons_print ( res )	1086:4:30438:30456	4104279	0	True				
ANR	4104466	CallExpression	r_cons_print ( res )		4104279	0					
ANR	4104467	Callee	r_cons_print		4104279	0					
ANR	4104468	Identifier	r_cons_print		4104279	0					
ANR	4104469	ArgumentList	res		4104279	1					
ANR	4104470	Argument	res		4104279	0					
ANR	4104471	Identifier	res		4104279	0					
ANR	4104472	ExpressionStatement	free ( res )	1087:4:30462:30472	4104279	1	True				
ANR	4104473	CallExpression	free ( res )		4104279	0					
ANR	4104474	Callee	free		4104279	0					
ANR	4104475	Identifier	free		4104279	0					
ANR	4104476	ArgumentList	res		4104279	1					
ANR	4104477	Argument	res		4104279	0					
ANR	4104478	Identifier	res		4104279	0					
ANR	4104479	ExpressionStatement	R_FREE ( tmp )	1089:3:30482:30494	4104279	2	True				
ANR	4104480	CallExpression	R_FREE ( tmp )		4104279	0					
ANR	4104481	Callee	R_FREE		4104279	0					
ANR	4104482	Identifier	R_FREE		4104279	0					
ANR	4104483	ArgumentList	tmp		4104279	1					
ANR	4104484	Argument	tmp		4104279	0					
ANR	4104485	Identifier	tmp		4104279	0					
ANR	4104486	BreakStatement	break ;	1091:2:30502:30507	4104279	6	True				
ANR	4104487	ReturnStatement	return 0 ;	1093:1:30513:30521	4104279	12	True				
ANR	4104488	PrimaryExpression	0		4104279	0					
ANR	4104489	Label	beach :	1094:0:30523:30528	4104279	13	True				
ANR	4104490	Identifier	beach		4104279	0					
ANR	4104491	ExpressionStatement	"eprintf ( ""Usage: join [file1] [file2] # join the contents of the two files\\n"" )"	1095:1:30531:30609	4104279	14	True				
ANR	4104492	CallExpression	"eprintf ( ""Usage: join [file1] [file2] # join the contents of the two files\\n"" )"		4104279	0					
ANR	4104493	Callee	eprintf		4104279	0					
ANR	4104494	Identifier	eprintf		4104279	0					
ANR	4104495	ArgumentList	"""Usage: join [file1] [file2] # join the contents of the two files\\n"""		4104279	1					
ANR	4104496	Argument	"""Usage: join [file1] [file2] # join the contents of the two files\\n"""		4104279	0					
ANR	4104497	PrimaryExpression	"""Usage: join [file1] [file2] # join the contents of the two files\\n"""		4104279	0					
ANR	4104498	ReturnStatement	return 0 ;	1096:1:30612:30620	4104279	15	True				
ANR	4104499	PrimaryExpression	0		4104279	0					
ANR	4104500	ReturnType	static int		4104279	1					
ANR	4104501	Identifier	cmd_join		4104279	2					
ANR	4104502	ParameterList	"void * data , const char * input"		4104279	3					
ANR	4104503	Parameter	void * data	1055:20:29793:29802	4104279	0	True				
ANR	4104504	ParameterType	void *		4104279	0					
ANR	4104505	Identifier	data		4104279	1					
ANR	4104506	Parameter	const char * input	1055:32:29805:29821	4104279	1	True				
ANR	4104507	ParameterType	const char *		4104279	0					
ANR	4104508	Identifier	input		4104279	1					
ANR	4104509	CFGEntryNode	ENTRY		4104279		True				
ANR	4104510	CFGExitNode	EXIT		4104279		True				
ANR	4104511	Symbol	res		4104279						
ANR	4104512	Symbol	data		4104279						
ANR	4104513	Symbol	* input		4104279						
ANR	4104514	Symbol	* core		4104279						
ANR	4104515	Symbol	strchr		4104279						
ANR	4104516	Symbol	r_syscmd_join		4104279						
ANR	4104517	Symbol	input		4104279						
ANR	4104518	Symbol	core		4104279						
ANR	4104519	Symbol	arg2		4104279						
ANR	4104520	Symbol	tmp		4104279						
ANR	4104521	Symbol	arg1		4104279						
ANR	4104522	Symbol	r_str_trim_ro		4104279						
ANR	4104523	Symbol	end		4104279						
ANR	4104524	Symbol	* end		4104279						
ANR	4104525	Symbol	strdup		4104279						
ANR	4104526	Symbol	core -> fs		4104279						
ANR	4104527	Symbol	r_fs_check		4104279						
ANR	4104528	Function	cmd_stdin	1099:0:30625:30848							
ANR	4104529	FunctionDef	"cmd_stdin (void * data , const char * input)"		4104528	0					
ANR	4104530	CompoundStatement		1099:52:30677:30848	4104528	0					
ANR	4104531	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1100:1:30680:30707	4104528	0	True				
ANR	4104532	IdentifierDecl	* core = ( RCore * ) data		4104528	0					
ANR	4104533	IdentifierDeclType	RCore *		4104528	0					
ANR	4104534	Identifier	core		4104528	1					
ANR	4104535	AssignmentExpression	* core = ( RCore * ) data		4104528	2		=			
ANR	4104536	Identifier	core		4104528	0					
ANR	4104537	CastExpression	( RCore * ) data		4104528	1					
ANR	4104538	CastTarget	RCore *		4104528	0					
ANR	4104539	Identifier	data		4104528	1					
ANR	4104540	IfStatement	if ( input [ 0 ] == '?' )		4104528	1					
ANR	4104541	Condition	input [ 0 ] == '?'	1101:5:30714:30728	4104528	0	True				
ANR	4104542	EqualityExpression	input [ 0 ] == '?'		4104528	0		==			
ANR	4104543	ArrayIndexing	input [ 0 ]		4104528	0					
ANR	4104544	Identifier	input		4104528	0					
ANR	4104545	PrimaryExpression	0		4104528	1					
ANR	4104546	PrimaryExpression	'?'		4104528	1					
ANR	4104547	CompoundStatement		3:22:53:53	4104528	1					
ANR	4104548	ExpressionStatement	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"	1102:2:30735:30788	4104528	0	True				
ANR	4104549	CallExpression	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"		4104528	0					
ANR	4104550	Callee	r_cons_printf		4104528	0					
ANR	4104551	Identifier	r_cons_printf		4104528	0					
ANR	4104552	ArgumentList	"""Usage: '-' '.-' '. -' do the same\\n"""		4104528	1					
ANR	4104553	Argument	"""Usage: '-' '.-' '. -' do the same\\n"""		4104528	0					
ANR	4104554	PrimaryExpression	"""Usage: '-' '.-' '. -' do the same\\n"""		4104528	0					
ANR	4104555	ReturnStatement	return false ;	1103:2:30792:30804	4104528	1	True				
ANR	4104556	Identifier	false		4104528	0					
ANR	4104557	ReturnStatement	"return r_core_run_script ( core , ""-"" ) ;"	1105:1:30810:30846	4104528	2	True				
ANR	4104558	CallExpression	"r_core_run_script ( core , ""-"" )"		4104528	0					
ANR	4104559	Callee	r_core_run_script		4104528	0					
ANR	4104560	Identifier	r_core_run_script		4104528	0					
ANR	4104561	ArgumentList	core		4104528	1					
ANR	4104562	Argument	core		4104528	0					
ANR	4104563	Identifier	core		4104528	0					
ANR	4104564	Argument	"""-"""		4104528	1					
ANR	4104565	PrimaryExpression	"""-"""		4104528	0					
ANR	4104566	ReturnType	static int		4104528	1					
ANR	4104567	Identifier	cmd_stdin		4104528	2					
ANR	4104568	ParameterList	"void * data , const char * input"		4104528	3					
ANR	4104569	Parameter	void * data	1099:21:30646:30655	4104528	0	True				
ANR	4104570	ParameterType	void *		4104528	0					
ANR	4104571	Identifier	data		4104528	1					
ANR	4104572	Parameter	const char * input	1099:33:30658:30674	4104528	1	True				
ANR	4104573	ParameterType	const char *		4104528	0					
ANR	4104574	Identifier	input		4104528	1					
ANR	4104575	CFGEntryNode	ENTRY		4104528		True				
ANR	4104576	CFGExitNode	EXIT		4104528		True				
ANR	4104577	Symbol	input		4104528						
ANR	4104578	Symbol	core		4104528						
ANR	4104579	Symbol	data		4104528						
ANR	4104580	Symbol	* input		4104528						
ANR	4104581	Symbol	false		4104528						
ANR	4104582	Symbol	r_core_run_script		4104528						
ANR	4104583	Function	cmd_interpret	1108:0:30851:33843							
ANR	4104584	FunctionDef	"cmd_interpret (void * data , const char * input)"		4104583	0					
ANR	4104585	CompoundStatement		1108:56:30907:33843	4104583	0					
ANR	4104586	IdentifierDeclStatement	"char * str , * ptr , * eol , * rbuf , * filter , * inp ;"	1109:1:30910:30953	4104583	0	True				
ANR	4104587	IdentifierDecl	* str		4104583	0					
ANR	4104588	IdentifierDeclType	char *		4104583	0					
ANR	4104589	Identifier	str		4104583	1					
ANR	4104590	IdentifierDecl	* ptr		4104583	1					
ANR	4104591	IdentifierDeclType	char *		4104583	0					
ANR	4104592	Identifier	ptr		4104583	1					
ANR	4104593	IdentifierDecl	* eol		4104583	2					
ANR	4104594	IdentifierDeclType	char *		4104583	0					
ANR	4104595	Identifier	eol		4104583	1					
ANR	4104596	IdentifierDecl	* rbuf		4104583	3					
ANR	4104597	IdentifierDeclType	char *		4104583	0					
ANR	4104598	Identifier	rbuf		4104583	1					
ANR	4104599	IdentifierDecl	* filter		4104583	4					
ANR	4104600	IdentifierDeclType	char *		4104583	0					
ANR	4104601	Identifier	filter		4104583	1					
ANR	4104602	IdentifierDecl	* inp		4104583	5					
ANR	4104603	IdentifierDeclType	char *		4104583	0					
ANR	4104604	Identifier	inp		4104583	1					
ANR	4104605	IdentifierDeclStatement	"const char * host , * port , * cmd ;"	1110:1:30956:30985	4104583	1	True				
ANR	4104606	IdentifierDecl	* host		4104583	0					
ANR	4104607	IdentifierDeclType	const char *		4104583	0					
ANR	4104608	Identifier	host		4104583	1					
ANR	4104609	IdentifierDecl	* port		4104583	1					
ANR	4104610	IdentifierDeclType	const char *		4104583	0					
ANR	4104611	Identifier	port		4104583	1					
ANR	4104612	IdentifierDecl	* cmd		4104583	2					
ANR	4104613	IdentifierDeclType	const char *		4104583	0					
ANR	4104614	Identifier	cmd		4104583	1					
ANR	4104615	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1111:1:30988:31015	4104583	2	True				
ANR	4104616	IdentifierDecl	* core = ( RCore * ) data		4104583	0					
ANR	4104617	IdentifierDeclType	RCore *		4104583	0					
ANR	4104618	Identifier	core		4104583	1					
ANR	4104619	AssignmentExpression	* core = ( RCore * ) data		4104583	2		=			
ANR	4104620	Identifier	core		4104583	0					
ANR	4104621	CastExpression	( RCore * ) data		4104583	1					
ANR	4104622	CastTarget	RCore *		4104583	0					
ANR	4104623	Identifier	data		4104583	1					
ANR	4104624	SwitchStatement	switch ( * input )		4104583	3					
ANR	4104625	Condition	* input	1113:9:31027:31032	4104583	0	True				
ANR	4104626	UnaryOperationExpression	* input		4104583	0					
ANR	4104627	UnaryOperator	*		4104583	0					
ANR	4104628	Identifier	input		4104583	1					
ANR	4104629	CompoundStatement		104:2:2297:2340	4104583	1					
ANR	4104630	Label	case '\\0' :	1114:1:31038:31047	4104583	0	True				
ANR	4104631	ExpressionStatement	"r_core_cmd_repeat ( core , 0 )"	1115:2:31058:31085	4104583	1	True				
ANR	4104632	CallExpression	"r_core_cmd_repeat ( core , 0 )"		4104583	0					
ANR	4104633	Callee	r_core_cmd_repeat		4104583	0					
ANR	4104634	Identifier	r_core_cmd_repeat		4104583	0					
ANR	4104635	ArgumentList	core		4104583	1					
ANR	4104636	Argument	core		4104583	0					
ANR	4104637	Identifier	core		4104583	0					
ANR	4104638	Argument	0		4104583	1					
ANR	4104639	PrimaryExpression	0		4104583	0					
ANR	4104640	BreakStatement	break ;	1116:2:31089:31094	4104583	2	True				
ANR	4104641	Label	case ':' :	1117:1:31097:31105	4104583	3	True				
ANR	4104642	IfStatement	"if ( ( ptr = strchr ( input + 1 , ' ' ) ) )"		4104583	4					
ANR	4104643	Condition	"ptr = strchr ( input + 1 , ' ' )"	1118:6:31121:31151	4104583	0	True				
ANR	4104644	AssignmentExpression	"ptr = strchr ( input + 1 , ' ' )"		4104583	0		=			
ANR	4104645	Identifier	ptr		4104583	0					
ANR	4104646	CallExpression	"strchr ( input + 1 , ' ' )"		4104583	1					
ANR	4104647	Callee	strchr		4104583	0					
ANR	4104648	Identifier	strchr		4104583	0					
ANR	4104649	ArgumentList	input + 1		4104583	1					
ANR	4104650	Argument	input + 1		4104583	0					
ANR	4104651	AdditiveExpression	input + 1		4104583	0		+			
ANR	4104652	Identifier	input		4104583	0					
ANR	4104653	PrimaryExpression	1		4104583	1					
ANR	4104654	Argument	' '		4104583	1					
ANR	4104655	PrimaryExpression	' '		4104583	0					
ANR	4104656	CompoundStatement		11:39:246:246	4104583	1					
ANR	4104657	ExpressionStatement	cmd = ptr + 1	1121:3:31204:31217	4104583	0	True				
ANR	4104658	AssignmentExpression	cmd = ptr + 1		4104583	0		=			
ANR	4104659	Identifier	cmd		4104583	0					
ANR	4104660	AdditiveExpression	ptr + 1		4104583	1		+			
ANR	4104661	Identifier	ptr		4104583	0					
ANR	4104662	PrimaryExpression	1		4104583	1					
ANR	4104663	ExpressionStatement	* ptr = 0	1122:3:31222:31230	4104583	1	True				
ANR	4104664	AssignmentExpression	* ptr = 0		4104583	0		=			
ANR	4104665	UnaryOperationExpression	* ptr		4104583	0					
ANR	4104666	UnaryOperator	*		4104583	0					
ANR	4104667	Identifier	ptr		4104583	1					
ANR	4104668	PrimaryExpression	0		4104583	1					
ANR	4104669	ExpressionStatement	"eol = strchr ( input + 1 , ':' )"	1123:3:31235:31264	4104583	2	True				
ANR	4104670	AssignmentExpression	"eol = strchr ( input + 1 , ':' )"		4104583	0		=			
ANR	4104671	Identifier	eol		4104583	0					
ANR	4104672	CallExpression	"strchr ( input + 1 , ':' )"		4104583	1					
ANR	4104673	Callee	strchr		4104583	0					
ANR	4104674	Identifier	strchr		4104583	0					
ANR	4104675	ArgumentList	input + 1		4104583	1					
ANR	4104676	Argument	input + 1		4104583	0					
ANR	4104677	AdditiveExpression	input + 1		4104583	0		+			
ANR	4104678	Identifier	input		4104583	0					
ANR	4104679	PrimaryExpression	1		4104583	1					
ANR	4104680	Argument	':'		4104583	1					
ANR	4104681	PrimaryExpression	':'		4104583	0					
ANR	4104682	IfStatement	if ( eol )		4104583	3					
ANR	4104683	Condition	eol	1124:7:31273:31275	4104583	0	True				
ANR	4104684	Identifier	eol		4104583	0					
ANR	4104685	CompoundStatement		17:12:370:370	4104583	1					
ANR	4104686	ExpressionStatement	* eol = 0	1125:4:31284:31292	4104583	0	True				
ANR	4104687	AssignmentExpression	* eol = 0		4104583	0		=			
ANR	4104688	UnaryOperationExpression	* eol		4104583	0					
ANR	4104689	UnaryOperator	*		4104583	0					
ANR	4104690	Identifier	eol		4104583	1					
ANR	4104691	PrimaryExpression	0		4104583	1					
ANR	4104692	ExpressionStatement	host = input + 1	1126:4:31298:31314	4104583	1	True				
ANR	4104693	AssignmentExpression	host = input + 1		4104583	0		=			
ANR	4104694	Identifier	host		4104583	0					
ANR	4104695	AdditiveExpression	input + 1		4104583	1		+			
ANR	4104696	Identifier	input		4104583	0					
ANR	4104697	PrimaryExpression	1		4104583	1					
ANR	4104698	ExpressionStatement	port = eol + 1	1127:4:31320:31334	4104583	2	True				
ANR	4104699	AssignmentExpression	port = eol + 1		4104583	0		=			
ANR	4104700	Identifier	port		4104583	0					
ANR	4104701	AdditiveExpression	eol + 1		4104583	1		+			
ANR	4104702	Identifier	eol		4104583	0					
ANR	4104703	PrimaryExpression	1		4104583	1					
ANR	4104704	ElseStatement	else		4104583	0					
ANR	4104705	CompoundStatement		21:10:438:438	4104583	0					
ANR	4104706	ExpressionStatement	"host = ""localhost"""	1129:4:31352:31370	4104583	0	True				
ANR	4104707	AssignmentExpression	"host = ""localhost"""		4104583	0		=			
ANR	4104708	Identifier	host		4104583	0					
ANR	4104709	PrimaryExpression	"""localhost"""		4104583	1					
ANR	4104710	ExpressionStatement	port = input + ( ( input [ 1 ] == ':' ) ? 2 : 1 )	1130:4:31376:31416	4104583	1	True				
ANR	4104711	AssignmentExpression	port = input + ( ( input [ 1 ] == ':' ) ? 2 : 1 )		4104583	0		=			
ANR	4104712	Identifier	port		4104583	0					
ANR	4104713	AdditiveExpression	input + ( ( input [ 1 ] == ':' ) ? 2 : 1 )		4104583	1		+			
ANR	4104714	Identifier	input		4104583	0					
ANR	4104715	ConditionalExpression	( input [ 1 ] == ':' ) ? 2 : 1		4104583	1					
ANR	4104716	Condition	input [ 1 ] == ':'		4104583	0					
ANR	4104717	EqualityExpression	input [ 1 ] == ':'		4104583	0		==			
ANR	4104718	ArrayIndexing	input [ 1 ]		4104583	0					
ANR	4104719	Identifier	input		4104583	0					
ANR	4104720	PrimaryExpression	1		4104583	1					
ANR	4104721	PrimaryExpression	':'		4104583	1					
ANR	4104722	PrimaryExpression	2		4104583	1					
ANR	4104723	PrimaryExpression	1		4104583	2					
ANR	4104724	ExpressionStatement	"rbuf = r_core_rtr_cmds_query ( core , host , port , cmd )"	1132:3:31426:31478	4104583	4	True				
ANR	4104725	AssignmentExpression	"rbuf = r_core_rtr_cmds_query ( core , host , port , cmd )"		4104583	0		=			
ANR	4104726	Identifier	rbuf		4104583	0					
ANR	4104727	CallExpression	"r_core_rtr_cmds_query ( core , host , port , cmd )"		4104583	1					
ANR	4104728	Callee	r_core_rtr_cmds_query		4104583	0					
ANR	4104729	Identifier	r_core_rtr_cmds_query		4104583	0					
ANR	4104730	ArgumentList	core		4104583	1					
ANR	4104731	Argument	core		4104583	0					
ANR	4104732	Identifier	core		4104583	0					
ANR	4104733	Argument	host		4104583	1					
ANR	4104734	Identifier	host		4104583	0					
ANR	4104735	Argument	port		4104583	2					
ANR	4104736	Identifier	port		4104583	0					
ANR	4104737	Argument	cmd		4104583	3					
ANR	4104738	Identifier	cmd		4104583	0					
ANR	4104739	IfStatement	if ( rbuf )		4104583	5					
ANR	4104740	Condition	rbuf	1133:7:31487:31490	4104583	0	True				
ANR	4104741	Identifier	rbuf		4104583	0					
ANR	4104742	CompoundStatement		26:13:585:585	4104583	1					
ANR	4104743	ExpressionStatement	r_cons_print ( rbuf )	1134:4:31499:31518	4104583	0	True				
ANR	4104744	CallExpression	r_cons_print ( rbuf )		4104583	0					
ANR	4104745	Callee	r_cons_print		4104583	0					
ANR	4104746	Identifier	r_cons_print		4104583	0					
ANR	4104747	ArgumentList	rbuf		4104583	1					
ANR	4104748	Argument	rbuf		4104583	0					
ANR	4104749	Identifier	rbuf		4104583	0					
ANR	4104750	ExpressionStatement	free ( rbuf )	1135:4:31524:31535	4104583	1	True				
ANR	4104751	CallExpression	free ( rbuf )		4104583	0					
ANR	4104752	Callee	free		4104583	0					
ANR	4104753	Identifier	free		4104583	0					
ANR	4104754	ArgumentList	rbuf		4104583	1					
ANR	4104755	Argument	rbuf		4104583	0					
ANR	4104756	Identifier	rbuf		4104583	0					
ANR	4104757	ElseStatement	else		4104583	0					
ANR	4104758	CompoundStatement		30:9:643:643	4104583	0					
ANR	4104759	ExpressionStatement	"r_core_rtr_cmds ( core , input + 1 )"	1138:3:31556:31589	4104583	0	True				
ANR	4104760	CallExpression	"r_core_rtr_cmds ( core , input + 1 )"		4104583	0					
ANR	4104761	Callee	r_core_rtr_cmds		4104583	0					
ANR	4104762	Identifier	r_core_rtr_cmds		4104583	0					
ANR	4104763	ArgumentList	core		4104583	1					
ANR	4104764	Argument	core		4104583	0					
ANR	4104765	Identifier	core		4104583	0					
ANR	4104766	Argument	input + 1		4104583	1					
ANR	4104767	AdditiveExpression	input + 1		4104583	0		+			
ANR	4104768	Identifier	input		4104583	0					
ANR	4104769	PrimaryExpression	1		4104583	1					
ANR	4104770	BreakStatement	break ;	1140:2:31597:31602	4104583	5	True				
ANR	4104771	Label	case '.' :	1141:1:31605:31613	4104583	6	True				
ANR	4104772	IfStatement	if ( input [ 1 ] == '.' )		4104583	7					
ANR	4104773	Condition	input [ 1 ] == '.'	1142:6:31640:31654	4104583	0	True				
ANR	4104774	EqualityExpression	input [ 1 ] == '.'		4104583	0		==			
ANR	4104775	ArrayIndexing	input [ 1 ]		4104583	0					
ANR	4104776	Identifier	input		4104583	0					
ANR	4104777	PrimaryExpression	1		4104583	1					
ANR	4104778	PrimaryExpression	'.'		4104583	1					
ANR	4104779	CompoundStatement		35:23:749:749	4104583	1					
ANR	4104780	ExpressionStatement	"r_core_cmd_repeat ( core , 1 )"	1144:3:31741:31768	4104583	0	True				
ANR	4104781	CallExpression	"r_core_cmd_repeat ( core , 1 )"		4104583	0					
ANR	4104782	Callee	r_core_cmd_repeat		4104583	0					
ANR	4104783	Identifier	r_core_cmd_repeat		4104583	0					
ANR	4104784	ArgumentList	core		4104583	1					
ANR	4104785	Argument	core		4104583	0					
ANR	4104786	Identifier	core		4104583	0					
ANR	4104787	Argument	1		4104583	1					
ANR	4104788	PrimaryExpression	1		4104583	0					
ANR	4104789	ElseStatement	else		4104583	0					
ANR	4104790	IfStatement	if ( input [ 1 ] )		4104583	0					
ANR	4104791	Condition	input [ 1 ]	1145:13:31783:31790	4104583	0	True				
ANR	4104792	ArrayIndexing	input [ 1 ]		4104583	0					
ANR	4104793	Identifier	input		4104583	0					
ANR	4104794	PrimaryExpression	1		4104583	1					
ANR	4104795	CompoundStatement		39:3:890:951	4104583	1					
ANR	4104796	IdentifierDeclStatement	"char * str = r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) ) ;"	1146:3:31798:31859	4104583	0	True				
ANR	4104797	IdentifierDecl	"* str = r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) )"		4104583	0					
ANR	4104798	IdentifierDeclType	char *		4104583	0					
ANR	4104799	Identifier	str		4104583	1					
ANR	4104800	AssignmentExpression	"* str = r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) )"		4104583	2		=			
ANR	4104801	Identifier	str		4104583	0					
ANR	4104802	CallExpression	"r_core_cmd_str_pipe ( core , r_str_trim_ro ( input ) )"		4104583	1					
ANR	4104803	Callee	r_core_cmd_str_pipe		4104583	0					
ANR	4104804	Identifier	r_core_cmd_str_pipe		4104583	0					
ANR	4104805	ArgumentList	core		4104583	1					
ANR	4104806	Argument	core		4104583	0					
ANR	4104807	Identifier	core		4104583	0					
ANR	4104808	Argument	r_str_trim_ro ( input )		4104583	1					
ANR	4104809	CallExpression	r_str_trim_ro ( input )		4104583	0					
ANR	4104810	Callee	r_str_trim_ro		4104583	0					
ANR	4104811	Identifier	r_str_trim_ro		4104583	0					
ANR	4104812	ArgumentList	input		4104583	1					
ANR	4104813	Argument	input		4104583	0					
ANR	4104814	Identifier	input		4104583	0					
ANR	4104815	IfStatement	if ( str )		4104583	1					
ANR	4104816	Condition	str	1147:7:31868:31870	4104583	0	True				
ANR	4104817	Identifier	str		4104583	0					
ANR	4104818	CompoundStatement		40:12:965:965	4104583	1					
ANR	4104819	ExpressionStatement	"r_core_cmd ( core , str , 0 )"	1148:4:31879:31904	4104583	0	True				
ANR	4104820	CallExpression	"r_core_cmd ( core , str , 0 )"		4104583	0					
ANR	4104821	Callee	r_core_cmd		4104583	0					
ANR	4104822	Identifier	r_core_cmd		4104583	0					
ANR	4104823	ArgumentList	core		4104583	1					
ANR	4104824	Argument	core		4104583	0					
ANR	4104825	Identifier	core		4104583	0					
ANR	4104826	Argument	str		4104583	1					
ANR	4104827	Identifier	str		4104583	0					
ANR	4104828	Argument	0		4104583	2					
ANR	4104829	PrimaryExpression	0		4104583	0					
ANR	4104830	ExpressionStatement	free ( str )	1149:4:31910:31920	4104583	1	True				
ANR	4104831	CallExpression	free ( str )		4104583	0					
ANR	4104832	Callee	free		4104583	0					
ANR	4104833	Identifier	free		4104583	0					
ANR	4104834	ArgumentList	str		4104583	1					
ANR	4104835	Argument	str		4104583	0					
ANR	4104836	Identifier	str		4104583	0					
ANR	4104837	ElseStatement	else		4104583	0					
ANR	4104838	CompoundStatement		44:9:1028:1028	4104583	0					
ANR	4104839	ExpressionStatement	"eprintf ( ""Usage: .. ([file])\\n"" )"	1152:3:31941:31973	4104583	0	True				
ANR	4104840	CallExpression	"eprintf ( ""Usage: .. ([file])\\n"" )"		4104583	0					
ANR	4104841	Callee	eprintf		4104583	0					
ANR	4104842	Identifier	eprintf		4104583	0					
ANR	4104843	ArgumentList	"""Usage: .. ([file])\\n"""		4104583	1					
ANR	4104844	Argument	"""Usage: .. ([file])\\n"""		4104583	0					
ANR	4104845	PrimaryExpression	"""Usage: .. ([file])\\n"""		4104583	0					
ANR	4104846	BreakStatement	break ;	1154:2:31981:31986	4104583	8	True				
ANR	4104847	Label	case '*' :	1155:1:31989:31997	4104583	9	True				
ANR	4104848	CompoundStatement		52:3:1177:1203	4104583	10					
ANR	4104849	IdentifierDeclStatement	const char * a = r_str_trim_ro ( input + 1 ) ;	1157:3:32014:32055	4104583	0	True				
ANR	4104850	IdentifierDecl	* a = r_str_trim_ro ( input + 1 )		4104583	0					
ANR	4104851	IdentifierDeclType	const char *		4104583	0					
ANR	4104852	Identifier	a		4104583	1					
ANR	4104853	AssignmentExpression	* a = r_str_trim_ro ( input + 1 )		4104583	2		=			
ANR	4104854	Identifier	a		4104583	0					
ANR	4104855	CallExpression	r_str_trim_ro ( input + 1 )		4104583	1					
ANR	4104856	Callee	r_str_trim_ro		4104583	0					
ANR	4104857	Identifier	r_str_trim_ro		4104583	0					
ANR	4104858	ArgumentList	input + 1		4104583	1					
ANR	4104859	Argument	input + 1		4104583	0					
ANR	4104860	AdditiveExpression	input + 1		4104583	0		+			
ANR	4104861	Identifier	input		4104583	0					
ANR	4104862	PrimaryExpression	1		4104583	1					
ANR	4104863	IdentifierDeclStatement	char * s = strdup ( a ) ;	1158:3:32060:32080	4104583	1	True				
ANR	4104864	IdentifierDecl	* s = strdup ( a )		4104583	0					
ANR	4104865	IdentifierDeclType	char *		4104583	0					
ANR	4104866	Identifier	s		4104583	1					
ANR	4104867	AssignmentExpression	* s = strdup ( a )		4104583	2		=			
ANR	4104868	Identifier	s		4104583	0					
ANR	4104869	CallExpression	strdup ( a )		4104583	1					
ANR	4104870	Callee	strdup		4104583	0					
ANR	4104871	Identifier	strdup		4104583	0					
ANR	4104872	ArgumentList	a		4104583	1					
ANR	4104873	Argument	a		4104583	0					
ANR	4104874	Identifier	a		4104583	0					
ANR	4104875	IdentifierDeclStatement	"char * sp = strchr ( s , ' ' ) ;"	1159:3:32085:32111	4104583	2	True				
ANR	4104876	IdentifierDecl	"* sp = strchr ( s , ' ' )"		4104583	0					
ANR	4104877	IdentifierDeclType	char *		4104583	0					
ANR	4104878	Identifier	sp		4104583	1					
ANR	4104879	AssignmentExpression	"* sp = strchr ( s , ' ' )"		4104583	2		=			
ANR	4104880	Identifier	sp		4104583	0					
ANR	4104881	CallExpression	"strchr ( s , ' ' )"		4104583	1					
ANR	4104882	Callee	strchr		4104583	0					
ANR	4104883	Identifier	strchr		4104583	0					
ANR	4104884	ArgumentList	s		4104583	1					
ANR	4104885	Argument	s		4104583	0					
ANR	4104886	Identifier	s		4104583	0					
ANR	4104887	Argument	' '		4104583	1					
ANR	4104888	PrimaryExpression	' '		4104583	0					
ANR	4104889	IfStatement	if ( sp )		4104583	3					
ANR	4104890	Condition	sp	1160:7:32120:32121	4104583	0	True				
ANR	4104891	Identifier	sp		4104583	0					
ANR	4104892	CompoundStatement		53:11:1216:1216	4104583	1					
ANR	4104893	ExpressionStatement	* sp = 0	1161:4:32130:32137	4104583	0	True				
ANR	4104894	AssignmentExpression	* sp = 0		4104583	0		=			
ANR	4104895	UnaryOperationExpression	* sp		4104583	0					
ANR	4104896	UnaryOperator	*		4104583	0					
ANR	4104897	Identifier	sp		4104583	1					
ANR	4104898	PrimaryExpression	0		4104583	1					
ANR	4104899	IfStatement	if ( R_STR_ISNOTEMPTY ( s ) )		4104583	4					
ANR	4104900	Condition	R_STR_ISNOTEMPTY ( s )	1163:7:32151:32170	4104583	0	True				
ANR	4104901	CallExpression	R_STR_ISNOTEMPTY ( s )		4104583	0					
ANR	4104902	Callee	R_STR_ISNOTEMPTY		4104583	0					
ANR	4104903	Identifier	R_STR_ISNOTEMPTY		4104583	0					
ANR	4104904	ArgumentList	s		4104583	1					
ANR	4104905	Argument	s		4104583	0					
ANR	4104906	Identifier	s		4104583	0					
ANR	4104907	CompoundStatement		56:29:1265:1265	4104583	1					
ANR	4104908	ExpressionStatement	"r_core_run_script ( core , s )"	1164:4:32179:32206	4104583	0	True				
ANR	4104909	CallExpression	"r_core_run_script ( core , s )"		4104583	0					
ANR	4104910	Callee	r_core_run_script		4104583	0					
ANR	4104911	Identifier	r_core_run_script		4104583	0					
ANR	4104912	ArgumentList	core		4104583	1					
ANR	4104913	Argument	core		4104583	0					
ANR	4104914	Identifier	core		4104583	0					
ANR	4104915	Argument	s		4104583	1					
ANR	4104916	Identifier	s		4104583	0					
ANR	4104917	ExpressionStatement	free ( s )	1166:3:32216:32224	4104583	5	True				
ANR	4104918	CallExpression	free ( s )		4104583	0					
ANR	4104919	Callee	free		4104583	0					
ANR	4104920	Identifier	free		4104583	0					
ANR	4104921	ArgumentList	s		4104583	1					
ANR	4104922	Argument	s		4104583	0					
ANR	4104923	Identifier	s		4104583	0					
ANR	4104924	BreakStatement	break ;	1168:2:32232:32237	4104583	11	True				
ANR	4104925	Label	case '-' :	1169:1:32240:32248	4104583	12	True				
ANR	4104926	IfStatement	if ( input [ 1 ] == '?' )		4104583	13					
ANR	4104927	Condition	input [ 1 ] == '?'	1170:6:32264:32278	4104583	0	True				
ANR	4104928	EqualityExpression	input [ 1 ] == '?'		4104583	0		==			
ANR	4104929	ArrayIndexing	input [ 1 ]		4104583	0					
ANR	4104930	Identifier	input		4104583	0					
ANR	4104931	PrimaryExpression	1		4104583	1					
ANR	4104932	PrimaryExpression	'?'		4104583	1					
ANR	4104933	CompoundStatement		63:23:1373:1373	4104583	1					
ANR	4104934	ExpressionStatement	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"	1171:3:32286:32339	4104583	0	True				
ANR	4104935	CallExpression	"r_cons_printf ( ""Usage: '-' '.-' '. -' do the same\\n"" )"		4104583	0					
ANR	4104936	Callee	r_cons_printf		4104583	0					
ANR	4104937	Identifier	r_cons_printf		4104583	0					
ANR	4104938	ArgumentList	"""Usage: '-' '.-' '. -' do the same\\n"""		4104583	1					
ANR	4104939	Argument	"""Usage: '-' '.-' '. -' do the same\\n"""		4104583	0					
ANR	4104940	PrimaryExpression	"""Usage: '-' '.-' '. -' do the same\\n"""		4104583	0					
ANR	4104941	ElseStatement	else		4104583	0					
ANR	4104942	CompoundStatement		65:9:1442:1442	4104583	0					
ANR	4104943	ExpressionStatement	"r_core_run_script ( core , ""-"" )"	1173:3:32355:32384	4104583	0	True				
ANR	4104944	CallExpression	"r_core_run_script ( core , ""-"" )"		4104583	0					
ANR	4104945	Callee	r_core_run_script		4104583	0					
ANR	4104946	Identifier	r_core_run_script		4104583	0					
ANR	4104947	ArgumentList	core		4104583	1					
ANR	4104948	Argument	core		4104583	0					
ANR	4104949	Identifier	core		4104583	0					
ANR	4104950	Argument	"""-"""		4104583	1					
ANR	4104951	PrimaryExpression	"""-"""		4104583	0					
ANR	4104952	BreakStatement	break ;	1175:2:32392:32397	4104583	14	True				
ANR	4104953	Label	case ' ' :	1176:1:32400:32408	4104583	15	True				
ANR	4104954	CompoundStatement		71:3:1517:1568	4104583	16					
ANR	4104955	IdentifierDeclStatement	const char * script_file = r_str_trim_ro ( input + 1 ) ;	1178:3:32425:32476	4104583	0	True				
ANR	4104956	IdentifierDecl	* script_file = r_str_trim_ro ( input + 1 )		4104583	0					
ANR	4104957	IdentifierDeclType	const char *		4104583	0					
ANR	4104958	Identifier	script_file		4104583	1					
ANR	4104959	AssignmentExpression	* script_file = r_str_trim_ro ( input + 1 )		4104583	2		=			
ANR	4104960	Identifier	script_file		4104583	0					
ANR	4104961	CallExpression	r_str_trim_ro ( input + 1 )		4104583	1					
ANR	4104962	Callee	r_str_trim_ro		4104583	0					
ANR	4104963	Identifier	r_str_trim_ro		4104583	0					
ANR	4104964	ArgumentList	input + 1		4104583	1					
ANR	4104965	Argument	input + 1		4104583	0					
ANR	4104966	AdditiveExpression	input + 1		4104583	0		+			
ANR	4104967	Identifier	input		4104583	0					
ANR	4104968	PrimaryExpression	1		4104583	1					
ANR	4104969	IfStatement	if ( * script_file == '$' )		4104583	1					
ANR	4104970	Condition	* script_file == '$'	1179:7:32485:32503	4104583	0	True				
ANR	4104971	EqualityExpression	* script_file == '$'		4104583	0		==			
ANR	4104972	UnaryOperationExpression	* script_file		4104583	0					
ANR	4104973	UnaryOperator	*		4104583	0					
ANR	4104974	Identifier	script_file		4104583	1					
ANR	4104975	PrimaryExpression	'$'		4104583	1					
ANR	4104976	CompoundStatement		72:28:1598:1598	4104583	1					
ANR	4104977	ExpressionStatement	"r_core_cmd0 ( core , script_file )"	1180:4:32512:32543	4104583	0	True				
ANR	4104978	CallExpression	"r_core_cmd0 ( core , script_file )"		4104583	0					
ANR	4104979	Callee	r_core_cmd0		4104583	0					
ANR	4104980	Identifier	r_core_cmd0		4104583	0					
ANR	4104981	ArgumentList	core		4104583	1					
ANR	4104982	Argument	core		4104583	0					
ANR	4104983	Identifier	core		4104583	0					
ANR	4104984	Argument	script_file		4104583	1					
ANR	4104985	Identifier	script_file		4104583	0					
ANR	4104986	ElseStatement	else		4104583	0					
ANR	4104987	CompoundStatement		74:10:1647:1647	4104583	0					
ANR	4104988	IfStatement	"if ( ! r_core_run_script ( core , script_file ) )"		4104583	0					
ANR	4104989	Condition	"! r_core_run_script ( core , script_file )"	1182:8:32565:32602	4104583	0	True				
ANR	4104990	UnaryOperationExpression	"! r_core_run_script ( core , script_file )"		4104583	0					
ANR	4104991	UnaryOperator	!		4104583	0					
ANR	4104992	CallExpression	"r_core_run_script ( core , script_file )"		4104583	1					
ANR	4104993	Callee	r_core_run_script		4104583	0					
ANR	4104994	Identifier	r_core_run_script		4104583	0					
ANR	4104995	ArgumentList	core		4104583	1					
ANR	4104996	Argument	core		4104583	0					
ANR	4104997	Identifier	core		4104583	0					
ANR	4104998	Argument	script_file		4104583	1					
ANR	4104999	Identifier	script_file		4104583	0					
ANR	4105000	CompoundStatement		75:48:1697:1697	4104583	1					
ANR	4105001	ExpressionStatement	"eprintf ( ""Cannot find script '%s'\\n"" , script_file )"	1183:5:32612:32662	4104583	0	True				
ANR	4105002	CallExpression	"eprintf ( ""Cannot find script '%s'\\n"" , script_file )"		4104583	0					
ANR	4105003	Callee	eprintf		4104583	0					
ANR	4105004	Identifier	eprintf		4104583	0					
ANR	4105005	ArgumentList	"""Cannot find script '%s'\\n"""		4104583	1					
ANR	4105006	Argument	"""Cannot find script '%s'\\n"""		4104583	0					
ANR	4105007	PrimaryExpression	"""Cannot find script '%s'\\n"""		4104583	0					
ANR	4105008	Argument	script_file		4104583	1					
ANR	4105009	Identifier	script_file		4104583	0					
ANR	4105010	ExpressionStatement	core -> num -> value = 1	1184:5:32669:32689	4104583	1	True				
ANR	4105011	AssignmentExpression	core -> num -> value = 1		4104583	0		=			
ANR	4105012	PtrMemberAccess	core -> num -> value		4104583	0					
ANR	4105013	PtrMemberAccess	core -> num		4104583	0					
ANR	4105014	Identifier	core		4104583	0					
ANR	4105015	Identifier	num		4104583	1					
ANR	4105016	Identifier	value		4104583	1					
ANR	4105017	PrimaryExpression	1		4104583	1					
ANR	4105018	ElseStatement	else		4104583	0					
ANR	4105019	CompoundStatement		78:11:1794:1794	4104583	0					
ANR	4105020	ExpressionStatement	core -> num -> value = 0	1186:5:32709:32729	4104583	0	True				
ANR	4105021	AssignmentExpression	core -> num -> value = 0		4104583	0		=			
ANR	4105022	PtrMemberAccess	core -> num -> value		4104583	0					
ANR	4105023	PtrMemberAccess	core -> num		4104583	0					
ANR	4105024	Identifier	core		4104583	0					
ANR	4105025	Identifier	num		4104583	1					
ANR	4105026	Identifier	value		4104583	1					
ANR	4105027	PrimaryExpression	0		4104583	1					
ANR	4105028	BreakStatement	break ;	1190:2:32748:32753	4104583	17	True				
ANR	4105029	Label	case '!' :	1191:1:32756:32764	4104583	18	True				
ANR	4105030	ExpressionStatement	"r_core_cmd_command ( core , input + 1 )"	1193:2:32797:32833	4104583	19	True				
ANR	4105031	CallExpression	"r_core_cmd_command ( core , input + 1 )"		4104583	0					
ANR	4105032	Callee	r_core_cmd_command		4104583	0					
ANR	4105033	Identifier	r_core_cmd_command		4104583	0					
ANR	4105034	ArgumentList	core		4104583	1					
ANR	4105035	Argument	core		4104583	0					
ANR	4105036	Identifier	core		4104583	0					
ANR	4105037	Argument	input + 1		4104583	1					
ANR	4105038	AdditiveExpression	input + 1		4104583	0		+			
ANR	4105039	Identifier	input		4104583	0					
ANR	4105040	PrimaryExpression	1		4104583	1					
ANR	4105041	BreakStatement	break ;	1194:2:32837:32842	4104583	20	True				
ANR	4105042	Label	case '(' :	1195:1:32845:32853	4104583	21	True				
ANR	4105043	ExpressionStatement	"r_cmd_macro_call ( & core -> rcmd -> macro , input + 1 )"	1196:2:32865:32913	4104583	22	True				
ANR	4105044	CallExpression	"r_cmd_macro_call ( & core -> rcmd -> macro , input + 1 )"		4104583	0					
ANR	4105045	Callee	r_cmd_macro_call		4104583	0					
ANR	4105046	Identifier	r_cmd_macro_call		4104583	0					
ANR	4105047	ArgumentList	& core -> rcmd -> macro		4104583	1					
ANR	4105048	Argument	& core -> rcmd -> macro		4104583	0					
ANR	4105049	UnaryOperationExpression	& core -> rcmd -> macro		4104583	0					
ANR	4105050	UnaryOperator	&		4104583	0					
ANR	4105051	PtrMemberAccess	core -> rcmd -> macro		4104583	1					
ANR	4105052	PtrMemberAccess	core -> rcmd		4104583	0					
ANR	4105053	Identifier	core		4104583	0					
ANR	4105054	Identifier	rcmd		4104583	1					
ANR	4105055	Identifier	macro		4104583	1					
ANR	4105056	Argument	input + 1		4104583	1					
ANR	4105057	AdditiveExpression	input + 1		4104583	0		+			
ANR	4105058	Identifier	input		4104583	0					
ANR	4105059	PrimaryExpression	1		4104583	1					
ANR	4105060	BreakStatement	break ;	1197:2:32917:32922	4104583	23	True				
ANR	4105061	Label	case '?' :	1198:1:32925:32933	4104583	24	True				
ANR	4105062	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dot )"	1199:2:32945:32981	4104583	25	True				
ANR	4105063	CallExpression	"r_core_cmd_help ( core , help_msg_dot )"		4104583	0					
ANR	4105064	Callee	r_core_cmd_help		4104583	0					
ANR	4105065	Identifier	r_core_cmd_help		4104583	0					
ANR	4105066	ArgumentList	core		4104583	1					
ANR	4105067	Argument	core		4104583	0					
ANR	4105068	Identifier	core		4104583	0					
ANR	4105069	Argument	help_msg_dot		4104583	1					
ANR	4105070	Identifier	help_msg_dot		4104583	0					
ANR	4105071	BreakStatement	break ;	1200:2:32985:32990	4104583	26	True				
ANR	4105072	Label	default :	1201:1:32993:33000	4104583	27	True				
ANR	4105073	Identifier	default		4104583	0					
ANR	4105074	IfStatement	if ( * input >= 0 && * input <= 9 )		4104583	28					
ANR	4105075	Condition	* input >= 0 && * input <= 9	1202:6:33008:33033	4104583	0	True				
ANR	4105076	AndExpression	* input >= 0 && * input <= 9		4104583	0		&&			
ANR	4105077	RelationalExpression	* input >= 0		4104583	0		>=			
ANR	4105078	UnaryOperationExpression	* input		4104583	0					
ANR	4105079	UnaryOperator	*		4104583	0					
ANR	4105080	Identifier	input		4104583	1					
ANR	4105081	PrimaryExpression	0		4104583	1					
ANR	4105082	RelationalExpression	* input <= 9		4104583	1		<=			
ANR	4105083	UnaryOperationExpression	* input		4104583	0					
ANR	4105084	UnaryOperator	*		4104583	0					
ANR	4105085	Identifier	input		4104583	1					
ANR	4105086	PrimaryExpression	9		4104583	1					
ANR	4105087	CompoundStatement		95:34:2128:2128	4104583	1					
ANR	4105088	ExpressionStatement	"eprintf ( ""|ERROR| No .[0..9] to avoid infinite loops\\n"" )"	1203:3:33041:33097	4104583	0	True				
ANR	4105089	CallExpression	"eprintf ( ""|ERROR| No .[0..9] to avoid infinite loops\\n"" )"		4104583	0					
ANR	4105090	Callee	eprintf		4104583	0					
ANR	4105091	Identifier	eprintf		4104583	0					
ANR	4105092	ArgumentList	"""|ERROR| No .[0..9] to avoid infinite loops\\n"""		4104583	1					
ANR	4105093	Argument	"""|ERROR| No .[0..9] to avoid infinite loops\\n"""		4104583	0					
ANR	4105094	PrimaryExpression	"""|ERROR| No .[0..9] to avoid infinite loops\\n"""		4104583	0					
ANR	4105095	BreakStatement	break ;	1204:3:33102:33107	4104583	1	True				
ANR	4105096	ExpressionStatement	inp = strdup ( input )	1206:2:33115:33135	4104583	29	True				
ANR	4105097	AssignmentExpression	inp = strdup ( input )		4104583	0		=			
ANR	4105098	Identifier	inp		4104583	0					
ANR	4105099	CallExpression	strdup ( input )		4104583	1					
ANR	4105100	Callee	strdup		4104583	0					
ANR	4105101	Identifier	strdup		4104583	0					
ANR	4105102	ArgumentList	input		4104583	1					
ANR	4105103	Argument	input		4104583	0					
ANR	4105104	Identifier	input		4104583	0					
ANR	4105105	ExpressionStatement	"filter = strchr ( inp , '~' )"	1207:2:33139:33165	4104583	30	True				
ANR	4105106	AssignmentExpression	"filter = strchr ( inp , '~' )"		4104583	0		=			
ANR	4105107	Identifier	filter		4104583	0					
ANR	4105108	CallExpression	"strchr ( inp , '~' )"		4104583	1					
ANR	4105109	Callee	strchr		4104583	0					
ANR	4105110	Identifier	strchr		4104583	0					
ANR	4105111	ArgumentList	inp		4104583	1					
ANR	4105112	Argument	inp		4104583	0					
ANR	4105113	Identifier	inp		4104583	0					
ANR	4105114	Argument	'~'		4104583	1					
ANR	4105115	PrimaryExpression	'~'		4104583	0					
ANR	4105116	IfStatement	if ( filter )		4104583	31					
ANR	4105117	Condition	filter	1208:6:33173:33178	4104583	0	True				
ANR	4105118	Identifier	filter		4104583	0					
ANR	4105119	CompoundStatement		101:14:2273:2273	4104583	1					
ANR	4105120	ExpressionStatement	* filter = 0	1209:3:33186:33197	4104583	0	True				
ANR	4105121	AssignmentExpression	* filter = 0		4104583	0		=			
ANR	4105122	UnaryOperationExpression	* filter		4104583	0					
ANR	4105123	UnaryOperator	*		4104583	0					
ANR	4105124	Identifier	filter		4104583	1					
ANR	4105125	PrimaryExpression	0		4104583	1					
ANR	4105126	IdentifierDeclStatement	int tmp_html = r_cons_singleton ( ) -> is_html ;	1211:2:33205:33248	4104583	32	True				
ANR	4105127	IdentifierDecl	tmp_html = r_cons_singleton ( ) -> is_html		4104583	0					
ANR	4105128	IdentifierDeclType	int		4104583	0					
ANR	4105129	Identifier	tmp_html		4104583	1					
ANR	4105130	AssignmentExpression	tmp_html = r_cons_singleton ( ) -> is_html		4104583	2		=			
ANR	4105131	Identifier	tmp_html		4104583	0					
ANR	4105132	PtrMemberAccess	r_cons_singleton ( ) -> is_html		4104583	1					
ANR	4105133	CallExpression	r_cons_singleton ( )		4104583	0					
ANR	4105134	Callee	r_cons_singleton		4104583	0					
ANR	4105135	Identifier	r_cons_singleton		4104583	0					
ANR	4105136	ArgumentList			4104583	1					
ANR	4105137	Identifier	is_html		4104583	1					
ANR	4105138	ExpressionStatement	r_cons_singleton ( ) -> is_html = 0	1212:2:33252:33284	4104583	33	True				
ANR	4105139	AssignmentExpression	r_cons_singleton ( ) -> is_html = 0		4104583	0		=			
ANR	4105140	PtrMemberAccess	r_cons_singleton ( ) -> is_html		4104583	0					
ANR	4105141	CallExpression	r_cons_singleton ( )		4104583	0					
ANR	4105142	Callee	r_cons_singleton		4104583	0					
ANR	4105143	Identifier	r_cons_singleton		4104583	0					
ANR	4105144	ArgumentList			4104583	1					
ANR	4105145	Identifier	is_html		4104583	1					
ANR	4105146	PrimaryExpression	0		4104583	1					
ANR	4105147	ExpressionStatement	"ptr = str = r_core_cmd_str ( core , inp )"	1213:2:33288:33326	4104583	34	True				
ANR	4105148	AssignmentExpression	"ptr = str = r_core_cmd_str ( core , inp )"		4104583	0		=			
ANR	4105149	Identifier	ptr		4104583	0					
ANR	4105150	AssignmentExpression	"str = r_core_cmd_str ( core , inp )"		4104583	1		=			
ANR	4105151	Identifier	str		4104583	0					
ANR	4105152	CallExpression	"r_core_cmd_str ( core , inp )"		4104583	1					
ANR	4105153	Callee	r_core_cmd_str		4104583	0					
ANR	4105154	Identifier	r_core_cmd_str		4104583	0					
ANR	4105155	ArgumentList	core		4104583	1					
ANR	4105156	Argument	core		4104583	0					
ANR	4105157	Identifier	core		4104583	0					
ANR	4105158	Argument	inp		4104583	1					
ANR	4105159	Identifier	inp		4104583	0					
ANR	4105160	ExpressionStatement	r_cons_singleton ( ) -> is_html = tmp_html	1214:2:33330:33369	4104583	35	True				
ANR	4105161	AssignmentExpression	r_cons_singleton ( ) -> is_html = tmp_html		4104583	0		=			
ANR	4105162	PtrMemberAccess	r_cons_singleton ( ) -> is_html		4104583	0					
ANR	4105163	CallExpression	r_cons_singleton ( )		4104583	0					
ANR	4105164	Callee	r_cons_singleton		4104583	0					
ANR	4105165	Identifier	r_cons_singleton		4104583	0					
ANR	4105166	ArgumentList			4104583	1					
ANR	4105167	Identifier	is_html		4104583	1					
ANR	4105168	Identifier	tmp_html		4104583	1					
ANR	4105169	IfStatement	if ( filter )		4104583	36					
ANR	4105170	Condition	filter	1216:6:33378:33383	4104583	0	True				
ANR	4105171	Identifier	filter		4104583	0					
ANR	4105172	CompoundStatement		109:14:2478:2478	4104583	1					
ANR	4105173	ExpressionStatement	* filter = '~'	1217:3:33391:33404	4104583	0	True				
ANR	4105174	AssignmentExpression	* filter = '~'		4104583	0		=			
ANR	4105175	UnaryOperationExpression	* filter		4104583	0					
ANR	4105176	UnaryOperator	*		4104583	0					
ANR	4105177	Identifier	filter		4104583	1					
ANR	4105178	PrimaryExpression	'~'		4104583	1					
ANR	4105179	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	1219:2:33412:33442	4104583	37	True				
ANR	4105180	CallExpression	"r_cons_break_push ( NULL , NULL )"		4104583	0					
ANR	4105181	Callee	r_cons_break_push		4104583	0					
ANR	4105182	Identifier	r_cons_break_push		4104583	0					
ANR	4105183	ArgumentList	NULL		4104583	1					
ANR	4105184	Argument	NULL		4104583	0					
ANR	4105185	Identifier	NULL		4104583	0					
ANR	4105186	Argument	NULL		4104583	1					
ANR	4105187	Identifier	NULL		4104583	0					
ANR	4105188	IfStatement	if ( ptr )		4104583	38					
ANR	4105189	Condition	ptr	1220:6:33450:33452	4104583	0	True				
ANR	4105190	Identifier	ptr		4104583	0					
ANR	4105191	CompoundStatement		113:11:2547:2547	4104583	1					
ANR	4105192	ForStatement	for ( ; ; )		4104583	0					
ANR	4105193	CompoundStatement		114:12:2561:2561	4104583	0					
ANR	4105194	IfStatement	if ( r_cons_is_breaked ( ) )		4104583	0					
ANR	4105195	Condition	r_cons_is_breaked ( )	1222:8:33479:33498	4104583	0	True				
ANR	4105196	CallExpression	r_cons_is_breaked ( )		4104583	0					
ANR	4105197	Callee	r_cons_is_breaked		4104583	0					
ANR	4105198	Identifier	r_cons_is_breaked		4104583	0					
ANR	4105199	ArgumentList			4104583	1					
ANR	4105200	CompoundStatement		115:30:2593:2593	4104583	1					
ANR	4105201	BreakStatement	break ;	1223:5:33508:33513	4104583	0	True				
ANR	4105202	ExpressionStatement	"eol = strchr ( ptr , '\\n' )"	1225:4:33525:33549	4104583	1	True				
ANR	4105203	AssignmentExpression	"eol = strchr ( ptr , '\\n' )"		4104583	0		=			
ANR	4105204	Identifier	eol		4104583	0					
ANR	4105205	CallExpression	"strchr ( ptr , '\\n' )"		4104583	1					
ANR	4105206	Callee	strchr		4104583	0					
ANR	4105207	Identifier	strchr		4104583	0					
ANR	4105208	ArgumentList	ptr		4104583	1					
ANR	4105209	Argument	ptr		4104583	0					
ANR	4105210	Identifier	ptr		4104583	0					
ANR	4105211	Argument	'\\n'		4104583	1					
ANR	4105212	PrimaryExpression	'\\n'		4104583	0					
ANR	4105213	IfStatement	if ( eol )		4104583	2					
ANR	4105214	Condition	eol	1226:8:33559:33561	4104583	0	True				
ANR	4105215	Identifier	eol		4104583	0					
ANR	4105216	CompoundStatement		119:13:2656:2656	4104583	1					
ANR	4105217	ExpressionStatement	* eol = '\\0'	1227:5:33571:33582	4104583	0	True				
ANR	4105218	AssignmentExpression	* eol = '\\0'		4104583	0		=			
ANR	4105219	UnaryOperationExpression	* eol		4104583	0					
ANR	4105220	UnaryOperator	*		4104583	0					
ANR	4105221	Identifier	eol		4104583	1					
ANR	4105222	PrimaryExpression	'\\0'		4104583	1					
ANR	4105223	IfStatement	if ( * ptr )		4104583	3					
ANR	4105224	Condition	* ptr	1229:8:33598:33601	4104583	0	True				
ANR	4105225	UnaryOperationExpression	* ptr		4104583	0					
ANR	4105226	UnaryOperator	*		4104583	0					
ANR	4105227	Identifier	ptr		4104583	1					
ANR	4105228	CompoundStatement		123:5:2703:2748	4104583	1					
ANR	4105229	IdentifierDeclStatement	"char * p = r_str_append ( strdup ( ptr ) , filter ) ;"	1230:5:33611:33656	4104583	0	True				
ANR	4105230	IdentifierDecl	"* p = r_str_append ( strdup ( ptr ) , filter )"		4104583	0					
ANR	4105231	IdentifierDeclType	char *		4104583	0					
ANR	4105232	Identifier	p		4104583	1					
ANR	4105233	AssignmentExpression	"* p = r_str_append ( strdup ( ptr ) , filter )"		4104583	2		=			
ANR	4105234	Identifier	p		4104583	0					
ANR	4105235	CallExpression	"r_str_append ( strdup ( ptr ) , filter )"		4104583	1					
ANR	4105236	Callee	r_str_append		4104583	0					
ANR	4105237	Identifier	r_str_append		4104583	0					
ANR	4105238	ArgumentList	strdup ( ptr )		4104583	1					
ANR	4105239	Argument	strdup ( ptr )		4104583	0					
ANR	4105240	CallExpression	strdup ( ptr )		4104583	0					
ANR	4105241	Callee	strdup		4104583	0					
ANR	4105242	Identifier	strdup		4104583	0					
ANR	4105243	ArgumentList	ptr		4104583	1					
ANR	4105244	Argument	ptr		4104583	0					
ANR	4105245	Identifier	ptr		4104583	0					
ANR	4105246	Argument	filter		4104583	1					
ANR	4105247	Identifier	filter		4104583	0					
ANR	4105248	ExpressionStatement	"r_core_cmd0 ( core , p )"	1231:5:33663:33684	4104583	1	True				
ANR	4105249	CallExpression	"r_core_cmd0 ( core , p )"		4104583	0					
ANR	4105250	Callee	r_core_cmd0		4104583	0					
ANR	4105251	Identifier	r_core_cmd0		4104583	0					
ANR	4105252	ArgumentList	core		4104583	1					
ANR	4105253	Argument	core		4104583	0					
ANR	4105254	Identifier	core		4104583	0					
ANR	4105255	Argument	p		4104583	1					
ANR	4105256	Identifier	p		4104583	0					
ANR	4105257	ExpressionStatement	free ( p )	1232:5:33691:33699	4104583	2	True				
ANR	4105258	CallExpression	free ( p )		4104583	0					
ANR	4105259	Callee	free		4104583	0					
ANR	4105260	Identifier	free		4104583	0					
ANR	4105261	ArgumentList	p		4104583	1					
ANR	4105262	Argument	p		4104583	0					
ANR	4105263	Identifier	p		4104583	0					
ANR	4105264	IfStatement	if ( ! eol )		4104583	4					
ANR	4105265	Condition	! eol	1234:8:33715:33718	4104583	0	True				
ANR	4105266	UnaryOperationExpression	! eol		4104583	0					
ANR	4105267	UnaryOperator	!		4104583	0					
ANR	4105268	Identifier	eol		4104583	1					
ANR	4105269	CompoundStatement		127:14:2813:2813	4104583	1					
ANR	4105270	BreakStatement	break ;	1235:5:33728:33733	4104583	0	True				
ANR	4105271	ExpressionStatement	ptr = eol + 1	1237:4:33745:33758	4104583	5	True				
ANR	4105272	AssignmentExpression	ptr = eol + 1		4104583	0		=			
ANR	4105273	Identifier	ptr		4104583	0					
ANR	4105274	AdditiveExpression	eol + 1		4104583	1		+			
ANR	4105275	Identifier	eol		4104583	0					
ANR	4105276	PrimaryExpression	1		4104583	1					
ANR	4105277	ExpressionStatement	r_cons_break_pop ( )	1240:2:33771:33790	4104583	39	True				
ANR	4105278	CallExpression	r_cons_break_pop ( )		4104583	0					
ANR	4105279	Callee	r_cons_break_pop		4104583	0					
ANR	4105280	Identifier	r_cons_break_pop		4104583	0					
ANR	4105281	ArgumentList			4104583	1					
ANR	4105282	ExpressionStatement	free ( str )	1241:2:33794:33804	4104583	40	True				
ANR	4105283	CallExpression	free ( str )		4104583	0					
ANR	4105284	Callee	free		4104583	0					
ANR	4105285	Identifier	free		4104583	0					
ANR	4105286	ArgumentList	str		4104583	1					
ANR	4105287	Argument	str		4104583	0					
ANR	4105288	Identifier	str		4104583	0					
ANR	4105289	ExpressionStatement	free ( inp )	1242:2:33808:33818	4104583	41	True				
ANR	4105290	CallExpression	free ( inp )		4104583	0					
ANR	4105291	Callee	free		4104583	0					
ANR	4105292	Identifier	free		4104583	0					
ANR	4105293	ArgumentList	inp		4104583	1					
ANR	4105294	Argument	inp		4104583	0					
ANR	4105295	Identifier	inp		4104583	0					
ANR	4105296	BreakStatement	break ;	1243:2:33822:33827	4104583	42	True				
ANR	4105297	ReturnStatement	return 0 ;	1245:1:33833:33841	4104583	4	True				
ANR	4105298	PrimaryExpression	0		4104583	0					
ANR	4105299	ReturnType	static int		4104583	1					
ANR	4105300	Identifier	cmd_interpret		4104583	2					
ANR	4105301	ParameterList	"void * data , const char * input"		4104583	3					
ANR	4105302	Parameter	void * data	1108:25:30876:30885	4104583	0	True				
ANR	4105303	ParameterType	void *		4104583	0					
ANR	4105304	Identifier	data		4104583	1					
ANR	4105305	Parameter	const char * input	1108:37:30888:30904	4104583	1	True				
ANR	4105306	ParameterType	const char *		4104583	0					
ANR	4105307	Identifier	input		4104583	1					
ANR	4105308	CFGEntryNode	ENTRY		4104583		True				
ANR	4105309	CFGExitNode	EXIT		4104583		True				
ANR	4105310	InfiniteForNode	true		4104583		True				
ANR	4105311	Symbol	* sp		4104583						
ANR	4105312	Symbol	r_str_append		4104583						
ANR	4105313	Symbol	eol		4104583						
ANR	4105314	Symbol	r_core_cmd_str		4104583						
ANR	4105315	Symbol	data		4104583						
ANR	4105316	Symbol	r_core_rtr_cmds_query		4104583						
ANR	4105317	Symbol	* input		4104583						
ANR	4105318	Symbol	* core		4104583						
ANR	4105319	Symbol	strchr		4104583						
ANR	4105320	Symbol	core -> num -> value		4104583						
ANR	4105321	Symbol	tmp_html		4104583						
ANR	4105322	Symbol	r_cons_is_breaked		4104583						
ANR	4105323	Symbol	* eol		4104583						
ANR	4105324	Symbol	r_core_cmd_str_pipe		4104583						
ANR	4105325	Symbol	host		4104583						
ANR	4105326	Symbol	* ptr		4104583						
ANR	4105327	Symbol	r_cons_singleton		4104583						
ANR	4105328	Symbol	* core -> num		4104583						
ANR	4105329	Symbol	core -> num		4104583						
ANR	4105330	Symbol	sp		4104583						
ANR	4105331	Symbol	R_STR_ISNOTEMPTY		4104583						
ANR	4105332	Symbol	* * core		4104583						
ANR	4105333	Symbol	a		4104583						
ANR	4105334	Symbol	NULL		4104583						
ANR	4105335	Symbol	core -> rcmd		4104583						
ANR	4105336	Symbol	inp		4104583						
ANR	4105337	Symbol	r_cons_singleton ( ) -> is_html		4104583						
ANR	4105338	Symbol	ptr		4104583						
ANR	4105339	Symbol	* filter		4104583						
ANR	4105340	Symbol	str		4104583						
ANR	4105341	Symbol	filter		4104583						
ANR	4105342	Symbol	p		4104583						
ANR	4105343	Symbol	input		4104583						
ANR	4105344	Symbol	core		4104583						
ANR	4105345	Symbol	s		4104583						
ANR	4105346	Symbol	help_msg_dot		4104583						
ANR	4105347	Symbol	rbuf		4104583						
ANR	4105348	Symbol	port		4104583						
ANR	4105349	Symbol	& core -> rcmd -> macro		4104583						
ANR	4105350	Symbol	r_str_trim_ro		4104583						
ANR	4105351	Symbol	* script_file		4104583						
ANR	4105352	Symbol	r_core_run_script		4104583						
ANR	4105353	Symbol	cmd		4104583						
ANR	4105354	Symbol	strdup		4104583						
ANR	4105355	Symbol	script_file		4104583						
ANR	4105356	Symbol	* r_cons_singleton		4104583						
ANR	4105357	Function	callback_foreach_kv	1248:0:33846:33966							
ANR	4105358	FunctionDef	"callback_foreach_kv (void * user , const char * k , const char * v)"		4105357	0					
ANR	4105359	CompoundStatement		1248:73:33919:33966	4105357	0					
ANR	4105360	ExpressionStatement	"r_cons_printf ( ""%s=%s\\n"" , k , v )"	1249:1:33922:33953	4105357	0	True				
ANR	4105361	CallExpression	"r_cons_printf ( ""%s=%s\\n"" , k , v )"		4105357	0					
ANR	4105362	Callee	r_cons_printf		4105357	0					
ANR	4105363	Identifier	r_cons_printf		4105357	0					
ANR	4105364	ArgumentList	"""%s=%s\\n"""		4105357	1					
ANR	4105365	Argument	"""%s=%s\\n"""		4105357	0					
ANR	4105366	PrimaryExpression	"""%s=%s\\n"""		4105357	0					
ANR	4105367	Argument	k		4105357	1					
ANR	4105368	Identifier	k		4105357	0					
ANR	4105369	Argument	v		4105357	2					
ANR	4105370	Identifier	v		4105357	0					
ANR	4105371	ReturnStatement	return 1 ;	1250:1:33956:33964	4105357	1	True				
ANR	4105372	PrimaryExpression	1		4105357	0					
ANR	4105373	ReturnType	static int		4105357	1					
ANR	4105374	Identifier	callback_foreach_kv		4105357	2					
ANR	4105375	ParameterList	"void * user , const char * k , const char * v"		4105357	3					
ANR	4105376	Parameter	void * user	1248:31:33877:33886	4105357	0	True				
ANR	4105377	ParameterType	void *		4105357	0					
ANR	4105378	Identifier	user		4105357	1					
ANR	4105379	Parameter	const char * k	1248:43:33889:33901	4105357	1	True				
ANR	4105380	ParameterType	const char *		4105357	0					
ANR	4105381	Identifier	k		4105357	1					
ANR	4105382	Parameter	const char * v	1248:58:33904:33916	4105357	2	True				
ANR	4105383	ParameterType	const char *		4105357	0					
ANR	4105384	Identifier	v		4105357	1					
ANR	4105385	CFGEntryNode	ENTRY		4105357		True				
ANR	4105386	CFGExitNode	EXIT		4105357		True				
ANR	4105387	Symbol	v		4105357						
ANR	4105388	Symbol	k		4105357						
ANR	4105389	Symbol	user		4105357						
ANR	4105390	Function	r_line_hist_sdb_up	1253:0:33969:34323							
ANR	4105391	FunctionDef	r_line_hist_sdb_up (RLine * line)		4105390	0					
ANR	4105392	CompoundStatement		1253:42:34011:34323	4105390	0					
ANR	4105393	IfStatement	if ( ! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> n )		4105390	0					
ANR	4105394	Condition	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> n	1254:5:34018:34074	4105390	0	True				
ANR	4105395	OrExpression	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> n		4105390	0		||			
ANR	4105396	UnaryOperationExpression	! line -> sdbshell_hist_iter		4105390	0					
ANR	4105397	UnaryOperator	!		4105390	0					
ANR	4105398	PtrMemberAccess	line -> sdbshell_hist_iter		4105390	1					
ANR	4105399	Identifier	line		4105390	0					
ANR	4105400	Identifier	sdbshell_hist_iter		4105390	1					
ANR	4105401	UnaryOperationExpression	! line -> sdbshell_hist_iter -> n		4105390	1					
ANR	4105402	UnaryOperator	!		4105390	0					
ANR	4105403	PtrMemberAccess	line -> sdbshell_hist_iter -> n		4105390	1					
ANR	4105404	PtrMemberAccess	line -> sdbshell_hist_iter		4105390	0					
ANR	4105405	Identifier	line		4105390	0					
ANR	4105406	Identifier	sdbshell_hist_iter		4105390	1					
ANR	4105407	Identifier	n		4105390	1					
ANR	4105408	CompoundStatement		2:64:65:65	4105390	1					
ANR	4105409	ReturnStatement	return false ;	1255:2:34081:34093	4105390	0	True				
ANR	4105410	Identifier	false		4105390	0					
ANR	4105411	ExpressionStatement	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> n	1257:1:34099:34153	4105390	1	True				
ANR	4105412	AssignmentExpression	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> n		4105390	0		=			
ANR	4105413	PtrMemberAccess	line -> sdbshell_hist_iter		4105390	0					
ANR	4105414	Identifier	line		4105390	0					
ANR	4105415	Identifier	sdbshell_hist_iter		4105390	1					
ANR	4105416	PtrMemberAccess	line -> sdbshell_hist_iter -> n		4105390	1					
ANR	4105417	PtrMemberAccess	line -> sdbshell_hist_iter		4105390	0					
ANR	4105418	Identifier	line		4105390	0					
ANR	4105419	Identifier	sdbshell_hist_iter		4105390	1					
ANR	4105420	Identifier	n		4105390	1					
ANR	4105421	ExpressionStatement	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"	1258:1:34156:34235	4105390	2	True				
ANR	4105422	CallExpression	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"		4105390	0					
ANR	4105423	Callee	strncpy		4105390	0					
ANR	4105424	Identifier	strncpy		4105390	0					
ANR	4105425	ArgumentList	line -> buffer . data		4105390	1					
ANR	4105426	Argument	line -> buffer . data		4105390	0					
ANR	4105427	MemberAccess	line -> buffer . data		4105390	0					
ANR	4105428	PtrMemberAccess	line -> buffer		4105390	0					
ANR	4105429	Identifier	line		4105390	0					
ANR	4105430	Identifier	buffer		4105390	1					
ANR	4105431	Identifier	data		4105390	1					
ANR	4105432	Argument	line -> sdbshell_hist_iter -> data		4105390	1					
ANR	4105433	PtrMemberAccess	line -> sdbshell_hist_iter -> data		4105390	0					
ANR	4105434	PtrMemberAccess	line -> sdbshell_hist_iter		4105390	0					
ANR	4105435	Identifier	line		4105390	0					
ANR	4105436	Identifier	sdbshell_hist_iter		4105390	1					
ANR	4105437	Identifier	data		4105390	1					
ANR	4105438	Argument	R_LINE_BUFSIZE - 1		4105390	2					
ANR	4105439	AdditiveExpression	R_LINE_BUFSIZE - 1		4105390	0		-			
ANR	4105440	Identifier	R_LINE_BUFSIZE		4105390	0					
ANR	4105441	PrimaryExpression	1		4105390	1					
ANR	4105442	ExpressionStatement	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )	1259:1:34238:34307	4105390	3	True				
ANR	4105443	AssignmentExpression	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )		4105390	0		=			
ANR	4105444	MemberAccess	line -> buffer . index		4105390	0					
ANR	4105445	PtrMemberAccess	line -> buffer		4105390	0					
ANR	4105446	Identifier	line		4105390	0					
ANR	4105447	Identifier	buffer		4105390	1					
ANR	4105448	Identifier	index		4105390	1					
ANR	4105449	AssignmentExpression	line -> buffer . length = strlen ( line -> buffer . data )		4105390	1		=			
ANR	4105450	MemberAccess	line -> buffer . length		4105390	0					
ANR	4105451	PtrMemberAccess	line -> buffer		4105390	0					
ANR	4105452	Identifier	line		4105390	0					
ANR	4105453	Identifier	buffer		4105390	1					
ANR	4105454	Identifier	length		4105390	1					
ANR	4105455	CallExpression	strlen ( line -> buffer . data )		4105390	1					
ANR	4105456	Callee	strlen		4105390	0					
ANR	4105457	Identifier	strlen		4105390	0					
ANR	4105458	ArgumentList	line -> buffer . data		4105390	1					
ANR	4105459	Argument	line -> buffer . data		4105390	0					
ANR	4105460	MemberAccess	line -> buffer . data		4105390	0					
ANR	4105461	PtrMemberAccess	line -> buffer		4105390	0					
ANR	4105462	Identifier	line		4105390	0					
ANR	4105463	Identifier	buffer		4105390	1					
ANR	4105464	Identifier	data		4105390	1					
ANR	4105465	ReturnStatement	return true ;	1260:1:34310:34321	4105390	4	True				
ANR	4105466	Identifier	true		4105390	0					
ANR	4105467	ReturnType	R_API int		4105390	1					
ANR	4105468	Identifier	r_line_hist_sdb_up		4105390	2					
ANR	4105469	ParameterList	RLine * line		4105390	3					
ANR	4105470	Parameter	RLine * line	1253:29:33998:34008	4105390	0	True				
ANR	4105471	ParameterType	RLine *		4105390	0					
ANR	4105472	Identifier	line		4105390	1					
ANR	4105473	CFGEntryNode	ENTRY		4105390		True				
ANR	4105474	CFGExitNode	EXIT		4105390		True				
ANR	4105475	Symbol	line -> buffer . index		4105390						
ANR	4105476	Symbol	line		4105390						
ANR	4105477	Symbol	line -> sdbshell_hist_iter -> n		4105390						
ANR	4105478	Symbol	false		4105390						
ANR	4105479	Symbol	* line		4105390						
ANR	4105480	Symbol	line -> sdbshell_hist_iter -> data		4105390						
ANR	4105481	Symbol	strlen		4105390						
ANR	4105482	Symbol	line -> sdbshell_hist_iter		4105390						
ANR	4105483	Symbol	* line -> sdbshell_hist_iter		4105390						
ANR	4105484	Symbol	true		4105390						
ANR	4105485	Symbol	* * line		4105390						
ANR	4105486	Symbol	line -> buffer . data		4105390						
ANR	4105487	Symbol	line -> buffer		4105390						
ANR	4105488	Symbol	R_LINE_BUFSIZE		4105390						
ANR	4105489	Symbol	line -> buffer . length		4105390						
ANR	4105490	Function	r_line_hist_sdb_down	1263:0:34326:34682							
ANR	4105491	FunctionDef	r_line_hist_sdb_down (RLine * line)		4105490	0					
ANR	4105492	CompoundStatement		1263:44:34370:34682	4105490	0					
ANR	4105493	IfStatement	if ( ! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> p )		4105490	0					
ANR	4105494	Condition	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> p	1264:5:34377:34433	4105490	0	True				
ANR	4105495	OrExpression	! line -> sdbshell_hist_iter || ! line -> sdbshell_hist_iter -> p		4105490	0		||			
ANR	4105496	UnaryOperationExpression	! line -> sdbshell_hist_iter		4105490	0					
ANR	4105497	UnaryOperator	!		4105490	0					
ANR	4105498	PtrMemberAccess	line -> sdbshell_hist_iter		4105490	1					
ANR	4105499	Identifier	line		4105490	0					
ANR	4105500	Identifier	sdbshell_hist_iter		4105490	1					
ANR	4105501	UnaryOperationExpression	! line -> sdbshell_hist_iter -> p		4105490	1					
ANR	4105502	UnaryOperator	!		4105490	0					
ANR	4105503	PtrMemberAccess	line -> sdbshell_hist_iter -> p		4105490	1					
ANR	4105504	PtrMemberAccess	line -> sdbshell_hist_iter		4105490	0					
ANR	4105505	Identifier	line		4105490	0					
ANR	4105506	Identifier	sdbshell_hist_iter		4105490	1					
ANR	4105507	Identifier	p		4105490	1					
ANR	4105508	CompoundStatement		2:64:65:65	4105490	1					
ANR	4105509	ReturnStatement	return false ;	1265:2:34440:34452	4105490	0	True				
ANR	4105510	Identifier	false		4105490	0					
ANR	4105511	ExpressionStatement	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> p	1267:1:34458:34512	4105490	1	True				
ANR	4105512	AssignmentExpression	line -> sdbshell_hist_iter = line -> sdbshell_hist_iter -> p		4105490	0		=			
ANR	4105513	PtrMemberAccess	line -> sdbshell_hist_iter		4105490	0					
ANR	4105514	Identifier	line		4105490	0					
ANR	4105515	Identifier	sdbshell_hist_iter		4105490	1					
ANR	4105516	PtrMemberAccess	line -> sdbshell_hist_iter -> p		4105490	1					
ANR	4105517	PtrMemberAccess	line -> sdbshell_hist_iter		4105490	0					
ANR	4105518	Identifier	line		4105490	0					
ANR	4105519	Identifier	sdbshell_hist_iter		4105490	1					
ANR	4105520	Identifier	p		4105490	1					
ANR	4105521	ExpressionStatement	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"	1268:1:34515:34594	4105490	2	True				
ANR	4105522	CallExpression	"strncpy ( line -> buffer . data , line -> sdbshell_hist_iter -> data , R_LINE_BUFSIZE - 1 )"		4105490	0					
ANR	4105523	Callee	strncpy		4105490	0					
ANR	4105524	Identifier	strncpy		4105490	0					
ANR	4105525	ArgumentList	line -> buffer . data		4105490	1					
ANR	4105526	Argument	line -> buffer . data		4105490	0					
ANR	4105527	MemberAccess	line -> buffer . data		4105490	0					
ANR	4105528	PtrMemberAccess	line -> buffer		4105490	0					
ANR	4105529	Identifier	line		4105490	0					
ANR	4105530	Identifier	buffer		4105490	1					
ANR	4105531	Identifier	data		4105490	1					
ANR	4105532	Argument	line -> sdbshell_hist_iter -> data		4105490	1					
ANR	4105533	PtrMemberAccess	line -> sdbshell_hist_iter -> data		4105490	0					
ANR	4105534	PtrMemberAccess	line -> sdbshell_hist_iter		4105490	0					
ANR	4105535	Identifier	line		4105490	0					
ANR	4105536	Identifier	sdbshell_hist_iter		4105490	1					
ANR	4105537	Identifier	data		4105490	1					
ANR	4105538	Argument	R_LINE_BUFSIZE - 1		4105490	2					
ANR	4105539	AdditiveExpression	R_LINE_BUFSIZE - 1		4105490	0		-			
ANR	4105540	Identifier	R_LINE_BUFSIZE		4105490	0					
ANR	4105541	PrimaryExpression	1		4105490	1					
ANR	4105542	ExpressionStatement	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )	1269:1:34597:34666	4105490	3	True				
ANR	4105543	AssignmentExpression	line -> buffer . index = line -> buffer . length = strlen ( line -> buffer . data )		4105490	0		=			
ANR	4105544	MemberAccess	line -> buffer . index		4105490	0					
ANR	4105545	PtrMemberAccess	line -> buffer		4105490	0					
ANR	4105546	Identifier	line		4105490	0					
ANR	4105547	Identifier	buffer		4105490	1					
ANR	4105548	Identifier	index		4105490	1					
ANR	4105549	AssignmentExpression	line -> buffer . length = strlen ( line -> buffer . data )		4105490	1		=			
ANR	4105550	MemberAccess	line -> buffer . length		4105490	0					
ANR	4105551	PtrMemberAccess	line -> buffer		4105490	0					
ANR	4105552	Identifier	line		4105490	0					
ANR	4105553	Identifier	buffer		4105490	1					
ANR	4105554	Identifier	length		4105490	1					
ANR	4105555	CallExpression	strlen ( line -> buffer . data )		4105490	1					
ANR	4105556	Callee	strlen		4105490	0					
ANR	4105557	Identifier	strlen		4105490	0					
ANR	4105558	ArgumentList	line -> buffer . data		4105490	1					
ANR	4105559	Argument	line -> buffer . data		4105490	0					
ANR	4105560	MemberAccess	line -> buffer . data		4105490	0					
ANR	4105561	PtrMemberAccess	line -> buffer		4105490	0					
ANR	4105562	Identifier	line		4105490	0					
ANR	4105563	Identifier	buffer		4105490	1					
ANR	4105564	Identifier	data		4105490	1					
ANR	4105565	ReturnStatement	return true ;	1270:1:34669:34680	4105490	4	True				
ANR	4105566	Identifier	true		4105490	0					
ANR	4105567	ReturnType	R_API int		4105490	1					
ANR	4105568	Identifier	r_line_hist_sdb_down		4105490	2					
ANR	4105569	ParameterList	RLine * line		4105490	3					
ANR	4105570	Parameter	RLine * line	1263:31:34357:34367	4105490	0	True				
ANR	4105571	ParameterType	RLine *		4105490	0					
ANR	4105572	Identifier	line		4105490	1					
ANR	4105573	CFGEntryNode	ENTRY		4105490		True				
ANR	4105574	CFGExitNode	EXIT		4105490		True				
ANR	4105575	Symbol	line -> buffer . index		4105490						
ANR	4105576	Symbol	line		4105490						
ANR	4105577	Symbol	line -> sdbshell_hist_iter -> p		4105490						
ANR	4105578	Symbol	false		4105490						
ANR	4105579	Symbol	* line		4105490						
ANR	4105580	Symbol	line -> sdbshell_hist_iter -> data		4105490						
ANR	4105581	Symbol	strlen		4105490						
ANR	4105582	Symbol	line -> sdbshell_hist_iter		4105490						
ANR	4105583	Symbol	* line -> sdbshell_hist_iter		4105490						
ANR	4105584	Symbol	true		4105490						
ANR	4105585	Symbol	* * line		4105490						
ANR	4105586	Symbol	line -> buffer . data		4105490						
ANR	4105587	Symbol	line -> buffer		4105490						
ANR	4105588	Symbol	R_LINE_BUFSIZE		4105490						
ANR	4105589	Symbol	line -> buffer . length		4105490						
ANR	4105590	Function	cmd_kuery	1273:0:34685:39499							
ANR	4105591	FunctionDef	"cmd_kuery (void * data , const char * input)"		4105590	0					
ANR	4105592	CompoundStatement		1273:52:34737:39499	4105590	0					
ANR	4105593	IdentifierDeclStatement	"char buf [ 1024 ] , * out ;"	1274:1:34740:34760	4105590	0	True				
ANR	4105594	IdentifierDecl	buf [ 1024 ]		4105590	0					
ANR	4105595	IdentifierDeclType	char [ 1024 ]		4105590	0					
ANR	4105596	Identifier	buf		4105590	1					
ANR	4105597	PrimaryExpression	1024		4105590	2					
ANR	4105598	IdentifierDecl	* out		4105590	1					
ANR	4105599	IdentifierDeclType	char *		4105590	0					
ANR	4105600	Identifier	out		4105590	1					
ANR	4105601	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1275:1:34763:34789	4105590	1	True				
ANR	4105602	IdentifierDecl	* core = ( RCore * ) data		4105590	0					
ANR	4105603	IdentifierDeclType	RCore *		4105590	0					
ANR	4105604	Identifier	core		4105590	1					
ANR	4105605	AssignmentExpression	* core = ( RCore * ) data		4105590	2		=			
ANR	4105606	Identifier	core		4105590	0					
ANR	4105607	CastExpression	( RCore * ) data		4105590	1					
ANR	4105608	CastTarget	RCore *		4105590	0					
ANR	4105609	Identifier	data		4105590	1					
ANR	4105610	IdentifierDeclStatement	"const char * sp , * p = ""[sdb]> "" ;"	1276:1:34792:34822	4105590	2	True				
ANR	4105611	IdentifierDecl	* sp		4105590	0					
ANR	4105612	IdentifierDeclType	const char *		4105590	0					
ANR	4105613	Identifier	sp		4105590	1					
ANR	4105614	IdentifierDecl	"* p = ""[sdb]> """		4105590	1					
ANR	4105615	IdentifierDeclType	const char *		4105590	0					
ANR	4105616	Identifier	p		4105590	1					
ANR	4105617	AssignmentExpression	"* p = ""[sdb]> """		4105590	2		=			
ANR	4105618	Identifier	p		4105590	0					
ANR	4105619	PrimaryExpression	"""[sdb]> """		4105590	1					
ANR	4105620	IdentifierDeclStatement	const int buflen = sizeof ( buf ) - 1 ;	1277:1:34825:34860	4105590	3	True				
ANR	4105621	IdentifierDecl	buflen = sizeof ( buf ) - 1		4105590	0					
ANR	4105622	IdentifierDeclType	const int		4105590	0					
ANR	4105623	Identifier	buflen		4105590	1					
ANR	4105624	AssignmentExpression	buflen = sizeof ( buf ) - 1		4105590	2		=			
ANR	4105625	Identifier	buflen		4105590	0					
ANR	4105626	AdditiveExpression	sizeof ( buf ) - 1		4105590	1		-			
ANR	4105627	SizeofExpression	sizeof ( buf )		4105590	0					
ANR	4105628	Sizeof	sizeof		4105590	0					
ANR	4105629	SizeofOperand	buf		4105590	1					
ANR	4105630	PrimaryExpression	1		4105590	1					
ANR	4105631	IdentifierDeclStatement	Sdb * s = core -> sdb ;	1278:1:34863:34881	4105590	4	True				
ANR	4105632	IdentifierDecl	* s = core -> sdb		4105590	0					
ANR	4105633	IdentifierDeclType	Sdb *		4105590	0					
ANR	4105634	Identifier	s		4105590	1					
ANR	4105635	AssignmentExpression	* s = core -> sdb		4105590	2		=			
ANR	4105636	Identifier	s		4105590	0					
ANR	4105637	PtrMemberAccess	core -> sdb		4105590	1					
ANR	4105638	Identifier	core		4105590	0					
ANR	4105639	Identifier	sdb		4105590	1					
ANR	4105640	IdentifierDeclStatement	"char * cur_pos , * cur_cmd , * next_cmd = NULL ;"	1280:1:34886:34927	4105590	5	True				
ANR	4105641	IdentifierDecl	* cur_pos		4105590	0					
ANR	4105642	IdentifierDeclType	char *		4105590	0					
ANR	4105643	Identifier	cur_pos		4105590	1					
ANR	4105644	IdentifierDecl	* cur_cmd		4105590	1					
ANR	4105645	IdentifierDeclType	char *		4105590	0					
ANR	4105646	Identifier	cur_cmd		4105590	1					
ANR	4105647	IdentifierDecl	* next_cmd = NULL		4105590	2					
ANR	4105648	IdentifierDeclType	char *		4105590	0					
ANR	4105649	Identifier	next_cmd		4105590	1					
ANR	4105650	AssignmentExpression	* next_cmd = NULL		4105590	2		=			
ANR	4105651	Identifier	NULL		4105590	0					
ANR	4105652	Identifier	NULL		4105590	1					
ANR	4105653	IdentifierDeclStatement	"char * temp_pos , * temp_cmd , * temp_storage = NULL ;"	1281:1:34930:34977	4105590	6	True				
ANR	4105654	IdentifierDecl	* temp_pos		4105590	0					
ANR	4105655	IdentifierDeclType	char *		4105590	0					
ANR	4105656	Identifier	temp_pos		4105590	1					
ANR	4105657	IdentifierDecl	* temp_cmd		4105590	1					
ANR	4105658	IdentifierDeclType	char *		4105590	0					
ANR	4105659	Identifier	temp_cmd		4105590	1					
ANR	4105660	IdentifierDecl	* temp_storage = NULL		4105590	2					
ANR	4105661	IdentifierDeclType	char *		4105590	0					
ANR	4105662	Identifier	temp_storage		4105590	1					
ANR	4105663	AssignmentExpression	* temp_storage = NULL		4105590	2		=			
ANR	4105664	Identifier	NULL		4105590	0					
ANR	4105665	Identifier	NULL		4105590	1					
ANR	4105666	SwitchStatement	switch ( input [ 0 ] )		4105590	7					
ANR	4105667	Condition	input [ 0 ]	1283:9:34989:34996	4105590	0	True				
ANR	4105668	ArrayIndexing	input [ 0 ]		4105590	0					
ANR	4105669	Identifier	input		4105590	0					
ANR	4105670	PrimaryExpression	0		4105590	1					
ANR	4105671	CompoundStatement		101:2:2221:2258	4105590	1					
ANR	4105672	Label	case 'j' :	1285:1:35003:35011	4105590	0	True				
ANR	4105673	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , ""anal/**"" )"	1286:2:35015:35055	4105590	1	True				
ANR	4105674	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , ""anal/**"" )"		4105590	0		=			
ANR	4105675	Identifier	out		4105590	0					
ANR	4105676	CallExpression	"sdb_querys ( s , NULL , 0 , ""anal/**"" )"		4105590	1					
ANR	4105677	Callee	sdb_querys		4105590	0					
ANR	4105678	Identifier	sdb_querys		4105590	0					
ANR	4105679	ArgumentList	s		4105590	1					
ANR	4105680	Argument	s		4105590	0					
ANR	4105681	Identifier	s		4105590	0					
ANR	4105682	Argument	NULL		4105590	1					
ANR	4105683	Identifier	NULL		4105590	0					
ANR	4105684	Argument	0		4105590	2					
ANR	4105685	PrimaryExpression	0		4105590	0					
ANR	4105686	Argument	"""anal/**"""		4105590	3					
ANR	4105687	PrimaryExpression	"""anal/**"""		4105590	0					
ANR	4105688	IfStatement	if ( ! out )		4105590	2					
ANR	4105689	Condition	! out	1287:6:35063:35066	4105590	0	True				
ANR	4105690	UnaryOperationExpression	! out		4105590	0					
ANR	4105691	UnaryOperator	!		4105590	0					
ANR	4105692	Identifier	out		4105590	1					
ANR	4105693	CompoundStatement		15:12:331:331	4105590	1					
ANR	4105694	ExpressionStatement	"r_cons_println ( ""No Output from sdb"" )"	1288:3:35074:35111	4105590	0	True				
ANR	4105695	CallExpression	"r_cons_println ( ""No Output from sdb"" )"		4105590	0					
ANR	4105696	Callee	r_cons_println		4105590	0					
ANR	4105697	Identifier	r_cons_println		4105590	0					
ANR	4105698	ArgumentList	"""No Output from sdb"""		4105590	1					
ANR	4105699	Argument	"""No Output from sdb"""		4105590	0					
ANR	4105700	PrimaryExpression	"""No Output from sdb"""		4105590	0					
ANR	4105701	BreakStatement	break ;	1289:3:35116:35121	4105590	1	True				
ANR	4105702	ExpressionStatement	"r_cons_printf ( ""{\\""anal\\"":{"" )"	1292:2:35130:35159	4105590	3	True				
ANR	4105703	CallExpression	"r_cons_printf ( ""{\\""anal\\"":{"" )"		4105590	0					
ANR	4105704	Callee	r_cons_printf		4105590	0					
ANR	4105705	Identifier	r_cons_printf		4105590	0					
ANR	4105706	ArgumentList	"""{\\""anal\\"":{"""		4105590	1					
ANR	4105707	Argument	"""{\\""anal\\"":{"""		4105590	0					
ANR	4105708	PrimaryExpression	"""{\\""anal\\"":{"""		4105590	0					
ANR	4105709	WhileStatement	while ( * out )		4105590	4					
ANR	4105710	Condition	* out	1294:9:35171:35174	4105590	0	True				
ANR	4105711	UnaryOperationExpression	* out		4105590	0					
ANR	4105712	UnaryOperator	*		4105590	0					
ANR	4105713	Identifier	out		4105590	1					
ANR	4105714	CompoundStatement		22:15:439:439	4105590	1					
ANR	4105715	ExpressionStatement	"cur_pos = strchr ( out , '\\n' )"	1295:3:35182:35210	4105590	0	True				
ANR	4105716	AssignmentExpression	"cur_pos = strchr ( out , '\\n' )"		4105590	0		=			
ANR	4105717	Identifier	cur_pos		4105590	0					
ANR	4105718	CallExpression	"strchr ( out , '\\n' )"		4105590	1					
ANR	4105719	Callee	strchr		4105590	0					
ANR	4105720	Identifier	strchr		4105590	0					
ANR	4105721	ArgumentList	out		4105590	1					
ANR	4105722	Argument	out		4105590	0					
ANR	4105723	Identifier	out		4105590	0					
ANR	4105724	Argument	'\\n'		4105590	1					
ANR	4105725	PrimaryExpression	'\\n'		4105590	0					
ANR	4105726	IfStatement	if ( ! cur_pos )		4105590	1					
ANR	4105727	Condition	! cur_pos	1296:7:35219:35226	4105590	0	True				
ANR	4105728	UnaryOperationExpression	! cur_pos		4105590	0					
ANR	4105729	UnaryOperator	!		4105590	0					
ANR	4105730	Identifier	cur_pos		4105590	1					
ANR	4105731	CompoundStatement		24:17:491:491	4105590	1					
ANR	4105732	BreakStatement	break ;	1297:5:35236:35241	4105590	0	True				
ANR	4105733	ExpressionStatement	"cur_cmd = r_str_ndup ( out , cur_pos - out )"	1299:3:35251:35292	4105590	2	True				
ANR	4105734	AssignmentExpression	"cur_cmd = r_str_ndup ( out , cur_pos - out )"		4105590	0		=			
ANR	4105735	Identifier	cur_cmd		4105590	0					
ANR	4105736	CallExpression	"r_str_ndup ( out , cur_pos - out )"		4105590	1					
ANR	4105737	Callee	r_str_ndup		4105590	0					
ANR	4105738	Identifier	r_str_ndup		4105590	0					
ANR	4105739	ArgumentList	out		4105590	1					
ANR	4105740	Argument	out		4105590	0					
ANR	4105741	Identifier	out		4105590	0					
ANR	4105742	Argument	cur_pos - out		4105590	1					
ANR	4105743	AdditiveExpression	cur_pos - out		4105590	0		-			
ANR	4105744	Identifier	cur_pos		4105590	0					
ANR	4105745	Identifier	out		4105590	1					
ANR	4105746	ExpressionStatement	"r_cons_printf ( ""\\n\\n\\""%s\\"" : ["" , cur_cmd )"	1301:3:35298:35339	4105590	3	True				
ANR	4105747	CallExpression	"r_cons_printf ( ""\\n\\n\\""%s\\"" : ["" , cur_cmd )"		4105590	0					
ANR	4105748	Callee	r_cons_printf		4105590	0					
ANR	4105749	Identifier	r_cons_printf		4105590	0					
ANR	4105750	ArgumentList	"""\\n\\n\\""%s\\"" : ["""		4105590	1					
ANR	4105751	Argument	"""\\n\\n\\""%s\\"" : ["""		4105590	0					
ANR	4105752	PrimaryExpression	"""\\n\\n\\""%s\\"" : ["""		4105590	0					
ANR	4105753	Argument	cur_cmd		4105590	1					
ANR	4105754	Identifier	cur_cmd		4105590	0					
ANR	4105755	ExpressionStatement	"next_cmd = r_str_newf ( ""anal/%s/*"" , cur_cmd )"	1303:3:35345:35389	4105590	4	True				
ANR	4105756	AssignmentExpression	"next_cmd = r_str_newf ( ""anal/%s/*"" , cur_cmd )"		4105590	0		=			
ANR	4105757	Identifier	next_cmd		4105590	0					
ANR	4105758	CallExpression	"r_str_newf ( ""anal/%s/*"" , cur_cmd )"		4105590	1					
ANR	4105759	Callee	r_str_newf		4105590	0					
ANR	4105760	Identifier	r_str_newf		4105590	0					
ANR	4105761	ArgumentList	"""anal/%s/*"""		4105590	1					
ANR	4105762	Argument	"""anal/%s/*"""		4105590	0					
ANR	4105763	PrimaryExpression	"""anal/%s/*"""		4105590	0					
ANR	4105764	Argument	cur_cmd		4105590	1					
ANR	4105765	Identifier	cur_cmd		4105590	0					
ANR	4105766	ExpressionStatement	"temp_storage = sdb_querys ( s , NULL , 0 , next_cmd )"	1304:3:35394:35442	4105590	5	True				
ANR	4105767	AssignmentExpression	"temp_storage = sdb_querys ( s , NULL , 0 , next_cmd )"		4105590	0		=			
ANR	4105768	Identifier	temp_storage		4105590	0					
ANR	4105769	CallExpression	"sdb_querys ( s , NULL , 0 , next_cmd )"		4105590	1					
ANR	4105770	Callee	sdb_querys		4105590	0					
ANR	4105771	Identifier	sdb_querys		4105590	0					
ANR	4105772	ArgumentList	s		4105590	1					
ANR	4105773	Argument	s		4105590	0					
ANR	4105774	Identifier	s		4105590	0					
ANR	4105775	Argument	NULL		4105590	1					
ANR	4105776	Identifier	NULL		4105590	0					
ANR	4105777	Argument	0		4105590	2					
ANR	4105778	PrimaryExpression	0		4105590	0					
ANR	4105779	Argument	next_cmd		4105590	3					
ANR	4105780	Identifier	next_cmd		4105590	0					
ANR	4105781	IfStatement	if ( ! temp_storage )		4105590	6					
ANR	4105782	Condition	! temp_storage	1306:7:35452:35464	4105590	0	True				
ANR	4105783	UnaryOperationExpression	! temp_storage		4105590	0					
ANR	4105784	UnaryOperator	!		4105590	0					
ANR	4105785	Identifier	temp_storage		4105590	1					
ANR	4105786	CompoundStatement		34:22:729:729	4105590	1					
ANR	4105787	ExpressionStatement	"r_cons_println ( ""\\nEMPTY\\n"" )"	1307:4:35473:35501	4105590	0	True				
ANR	4105788	CallExpression	"r_cons_println ( ""\\nEMPTY\\n"" )"		4105590	0					
ANR	4105789	Callee	r_cons_println		4105590	0					
ANR	4105790	Identifier	r_cons_println		4105590	0					
ANR	4105791	ArgumentList	"""\\nEMPTY\\n"""		4105590	1					
ANR	4105792	Argument	"""\\nEMPTY\\n"""		4105590	0					
ANR	4105793	PrimaryExpression	"""\\nEMPTY\\n"""		4105590	0					
ANR	4105794	ExpressionStatement	"r_cons_printf ( ""],\\n\\n"" )"	1308:4:35507:35531	4105590	1	True				
ANR	4105795	CallExpression	"r_cons_printf ( ""],\\n\\n"" )"		4105590	0					
ANR	4105796	Callee	r_cons_printf		4105590	0					
ANR	4105797	Identifier	r_cons_printf		4105590	0					
ANR	4105798	ArgumentList	"""],\\n\\n"""		4105590	1					
ANR	4105799	Argument	"""],\\n\\n"""		4105590	0					
ANR	4105800	PrimaryExpression	"""],\\n\\n"""		4105590	0					
ANR	4105801	ExpressionStatement	out += cur_pos - out + 1	1309:4:35537:35561	4105590	2	True				
ANR	4105802	AssignmentExpression	out += cur_pos - out + 1		4105590	0		+=			
ANR	4105803	Identifier	out		4105590	0					
ANR	4105804	AdditiveExpression	cur_pos - out + 1		4105590	1		-			
ANR	4105805	Identifier	cur_pos		4105590	0					
ANR	4105806	AdditiveExpression	out + 1		4105590	1		+			
ANR	4105807	Identifier	out		4105590	0					
ANR	4105808	PrimaryExpression	1		4105590	1					
ANR	4105809	ContinueStatement	continue ;	1310:4:35567:35575	4105590	3	True				
ANR	4105810	WhileStatement	while ( * temp_storage )		4105590	7					
ANR	4105811	Condition	* temp_storage	1313:10:35593:35605	4105590	0	True				
ANR	4105812	UnaryOperationExpression	* temp_storage		4105590	0					
ANR	4105813	UnaryOperator	*		4105590	0					
ANR	4105814	Identifier	temp_storage		4105590	1					
ANR	4105815	CompoundStatement		41:25:870:870	4105590	1					
ANR	4105816	ExpressionStatement	"temp_pos = strchr ( temp_storage , '\\n' )"	1314:4:35614:35652	4105590	0	True				
ANR	4105817	AssignmentExpression	"temp_pos = strchr ( temp_storage , '\\n' )"		4105590	0		=			
ANR	4105818	Identifier	temp_pos		4105590	0					
ANR	4105819	CallExpression	"strchr ( temp_storage , '\\n' )"		4105590	1					
ANR	4105820	Callee	strchr		4105590	0					
ANR	4105821	Identifier	strchr		4105590	0					
ANR	4105822	ArgumentList	temp_storage		4105590	1					
ANR	4105823	Argument	temp_storage		4105590	0					
ANR	4105824	Identifier	temp_storage		4105590	0					
ANR	4105825	Argument	'\\n'		4105590	1					
ANR	4105826	PrimaryExpression	'\\n'		4105590	0					
ANR	4105827	IfStatement	if ( ! temp_pos )		4105590	1					
ANR	4105828	Condition	! temp_pos	1315:8:35662:35670	4105590	0	True				
ANR	4105829	UnaryOperationExpression	! temp_pos		4105590	0					
ANR	4105830	UnaryOperator	!		4105590	0					
ANR	4105831	Identifier	temp_pos		4105590	1					
ANR	4105832	CompoundStatement		43:19:935:935	4105590	1					
ANR	4105833	BreakStatement	break ;	1316:5:35680:35685	4105590	0	True				
ANR	4105834	ExpressionStatement	"temp_cmd = r_str_ndup ( temp_storage , temp_pos - temp_storage )"	1319:4:35702:35763	4105590	2	True				
ANR	4105835	AssignmentExpression	"temp_cmd = r_str_ndup ( temp_storage , temp_pos - temp_storage )"		4105590	0		=			
ANR	4105836	Identifier	temp_cmd		4105590	0					
ANR	4105837	CallExpression	"r_str_ndup ( temp_storage , temp_pos - temp_storage )"		4105590	1					
ANR	4105838	Callee	r_str_ndup		4105590	0					
ANR	4105839	Identifier	r_str_ndup		4105590	0					
ANR	4105840	ArgumentList	temp_storage		4105590	1					
ANR	4105841	Argument	temp_storage		4105590	0					
ANR	4105842	Identifier	temp_storage		4105590	0					
ANR	4105843	Argument	temp_pos - temp_storage		4105590	1					
ANR	4105844	AdditiveExpression	temp_pos - temp_storage		4105590	0		-			
ANR	4105845	Identifier	temp_pos		4105590	0					
ANR	4105846	Identifier	temp_storage		4105590	1					
ANR	4105847	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"","" , temp_cmd )"	1320:4:35769:35804	4105590	3	True				
ANR	4105848	CallExpression	"r_cons_printf ( ""\\""%s\\"","" , temp_cmd )"		4105590	0					
ANR	4105849	Callee	r_cons_printf		4105590	0					
ANR	4105850	Identifier	r_cons_printf		4105590	0					
ANR	4105851	ArgumentList	"""\\""%s\\"","""		4105590	1					
ANR	4105852	Argument	"""\\""%s\\"","""		4105590	0					
ANR	4105853	PrimaryExpression	"""\\""%s\\"","""		4105590	0					
ANR	4105854	Argument	temp_cmd		4105590	1					
ANR	4105855	Identifier	temp_cmd		4105590	0					
ANR	4105856	ExpressionStatement	temp_storage += temp_pos - temp_storage + 1	1321:4:35810:35853	4105590	4	True				
ANR	4105857	AssignmentExpression	temp_storage += temp_pos - temp_storage + 1		4105590	0		+=			
ANR	4105858	Identifier	temp_storage		4105590	0					
ANR	4105859	AdditiveExpression	temp_pos - temp_storage + 1		4105590	1		-			
ANR	4105860	Identifier	temp_pos		4105590	0					
ANR	4105861	AdditiveExpression	temp_storage + 1		4105590	1		+			
ANR	4105862	Identifier	temp_storage		4105590	0					
ANR	4105863	PrimaryExpression	1		4105590	1					
ANR	4105864	ExpressionStatement	"r_cons_printf ( ""],\\n\\n"" )"	1324:3:35864:35888	4105590	8	True				
ANR	4105865	CallExpression	"r_cons_printf ( ""],\\n\\n"" )"		4105590	0					
ANR	4105866	Callee	r_cons_printf		4105590	0					
ANR	4105867	Identifier	r_cons_printf		4105590	0					
ANR	4105868	ArgumentList	"""],\\n\\n"""		4105590	1					
ANR	4105869	Argument	"""],\\n\\n"""		4105590	0					
ANR	4105870	PrimaryExpression	"""],\\n\\n"""		4105590	0					
ANR	4105871	ExpressionStatement	out += cur_pos - out + 1	1325:3:35893:35917	4105590	9	True				
ANR	4105872	AssignmentExpression	out += cur_pos - out + 1		4105590	0		+=			
ANR	4105873	Identifier	out		4105590	0					
ANR	4105874	AdditiveExpression	cur_pos - out + 1		4105590	1		-			
ANR	4105875	Identifier	cur_pos		4105590	0					
ANR	4105876	AdditiveExpression	out + 1		4105590	1		+			
ANR	4105877	Identifier	out		4105590	0					
ANR	4105878	PrimaryExpression	1		4105590	1					
ANR	4105879	ExpressionStatement	"r_cons_printf ( ""}}"" )"	1328:2:35926:35946	4105590	5	True				
ANR	4105880	CallExpression	"r_cons_printf ( ""}}"" )"		4105590	0					
ANR	4105881	Callee	r_cons_printf		4105590	0					
ANR	4105882	Identifier	r_cons_printf		4105590	0					
ANR	4105883	ArgumentList	"""}}"""		4105590	1					
ANR	4105884	Argument	"""}}"""		4105590	0					
ANR	4105885	PrimaryExpression	"""}}"""		4105590	0					
ANR	4105886	ExpressionStatement	free ( next_cmd )	1329:2:35950:35965	4105590	6	True				
ANR	4105887	CallExpression	free ( next_cmd )		4105590	0					
ANR	4105888	Callee	free		4105590	0					
ANR	4105889	Identifier	free		4105590	0					
ANR	4105890	ArgumentList	next_cmd		4105590	1					
ANR	4105891	Argument	next_cmd		4105590	0					
ANR	4105892	Identifier	next_cmd		4105590	0					
ANR	4105893	ExpressionStatement	free ( temp_storage )	1330:2:35969:35988	4105590	7	True				
ANR	4105894	CallExpression	free ( temp_storage )		4105590	0					
ANR	4105895	Callee	free		4105590	0					
ANR	4105896	Identifier	free		4105590	0					
ANR	4105897	ArgumentList	temp_storage		4105590	1					
ANR	4105898	Argument	temp_storage		4105590	0					
ANR	4105899	Identifier	temp_storage		4105590	0					
ANR	4105900	BreakStatement	break ;	1331:2:35992:35997	4105590	8	True				
ANR	4105901	Label	case ' ' :	1333:1:36001:36009	4105590	9	True				
ANR	4105902	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , input + 1 )"	1334:2:36013:36053	4105590	10	True				
ANR	4105903	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , input + 1 )"		4105590	0		=			
ANR	4105904	Identifier	out		4105590	0					
ANR	4105905	CallExpression	"sdb_querys ( s , NULL , 0 , input + 1 )"		4105590	1					
ANR	4105906	Callee	sdb_querys		4105590	0					
ANR	4105907	Identifier	sdb_querys		4105590	0					
ANR	4105908	ArgumentList	s		4105590	1					
ANR	4105909	Argument	s		4105590	0					
ANR	4105910	Identifier	s		4105590	0					
ANR	4105911	Argument	NULL		4105590	1					
ANR	4105912	Identifier	NULL		4105590	0					
ANR	4105913	Argument	0		4105590	2					
ANR	4105914	PrimaryExpression	0		4105590	0					
ANR	4105915	Argument	input + 1		4105590	3					
ANR	4105916	AdditiveExpression	input + 1		4105590	0		+			
ANR	4105917	Identifier	input		4105590	0					
ANR	4105918	PrimaryExpression	1		4105590	1					
ANR	4105919	IfStatement	if ( out )		4105590	11					
ANR	4105920	Condition	out	1335:6:36061:36063	4105590	0	True				
ANR	4105921	Identifier	out		4105590	0					
ANR	4105922	CompoundStatement		63:11:1328:1328	4105590	1					
ANR	4105923	ExpressionStatement	r_cons_println ( out )	1336:3:36071:36091	4105590	0	True				
ANR	4105924	CallExpression	r_cons_println ( out )		4105590	0					
ANR	4105925	Callee	r_cons_println		4105590	0					
ANR	4105926	Identifier	r_cons_println		4105590	0					
ANR	4105927	ArgumentList	out		4105590	1					
ANR	4105928	Argument	out		4105590	0					
ANR	4105929	Identifier	out		4105590	0					
ANR	4105930	ExpressionStatement	free ( out )	1338:2:36099:36109	4105590	12	True				
ANR	4105931	CallExpression	free ( out )		4105590	0					
ANR	4105932	Callee	free		4105590	0					
ANR	4105933	Identifier	free		4105590	0					
ANR	4105934	ArgumentList	out		4105590	1					
ANR	4105935	Argument	out		4105590	0					
ANR	4105936	Identifier	out		4105590	0					
ANR	4105937	BreakStatement	break ;	1339:2:36113:36118	4105590	13	True				
ANR	4105938	Label	case '\\0' :	1342:1:36219:36228	4105590	14	True				
ANR	4105939	ExpressionStatement	"sdb_foreach ( s , callback_foreach_kv , NULL )"	1343:2:36232:36274	4105590	15	True				
ANR	4105940	CallExpression	"sdb_foreach ( s , callback_foreach_kv , NULL )"		4105590	0					
ANR	4105941	Callee	sdb_foreach		4105590	0					
ANR	4105942	Identifier	sdb_foreach		4105590	0					
ANR	4105943	ArgumentList	s		4105590	1					
ANR	4105944	Argument	s		4105590	0					
ANR	4105945	Identifier	s		4105590	0					
ANR	4105946	Argument	callback_foreach_kv		4105590	1					
ANR	4105947	Identifier	callback_foreach_kv		4105590	0					
ANR	4105948	Argument	NULL		4105590	2					
ANR	4105949	Identifier	NULL		4105590	0					
ANR	4105950	BreakStatement	break ;	1344:2:36278:36283	4105590	16	True				
ANR	4105951	Label	case 's' :	1346:1:36351:36359	4105590	17	True				
ANR	4105952	IfStatement	if ( core -> http_up )		4105590	18					
ANR	4105953	Condition	core -> http_up	1347:6:36375:36387	4105590	0	True				
ANR	4105954	PtrMemberAccess	core -> http_up		4105590	0					
ANR	4105955	Identifier	core		4105590	0					
ANR	4105956	Identifier	http_up		4105590	1					
ANR	4105957	CompoundStatement		75:21:1652:1652	4105590	1					
ANR	4105958	ReturnStatement	return false ;	1348:3:36395:36407	4105590	0	True				
ANR	4105959	Identifier	false		4105590	0					
ANR	4105960	IfStatement	if ( ! r_cons_is_interactive ( ) )		4105590	19					
ANR	4105961	Condition	! r_cons_is_interactive ( )	1350:6:36419:36443	4105590	0	True				
ANR	4105962	UnaryOperationExpression	! r_cons_is_interactive ( )		4105590	0					
ANR	4105963	UnaryOperator	!		4105590	0					
ANR	4105964	CallExpression	r_cons_is_interactive ( )		4105590	1					
ANR	4105965	Callee	r_cons_is_interactive		4105590	0					
ANR	4105966	Identifier	r_cons_is_interactive		4105590	0					
ANR	4105967	ArgumentList			4105590	1					
ANR	4105968	CompoundStatement		78:33:1708:1708	4105590	1					
ANR	4105969	ReturnStatement	return false ;	1351:3:36451:36463	4105590	0	True				
ANR	4105970	Identifier	false		4105590	0					
ANR	4105971	IfStatement	if ( input [ 1 ] == ' ' )		4105590	20					
ANR	4105972	Condition	input [ 1 ] == ' '	1353:6:36475:36489	4105590	0	True				
ANR	4105973	EqualityExpression	input [ 1 ] == ' '		4105590	0		==			
ANR	4105974	ArrayIndexing	input [ 1 ]		4105590	0					
ANR	4105975	Identifier	input		4105590	0					
ANR	4105976	PrimaryExpression	1		4105590	1					
ANR	4105977	PrimaryExpression	' '		4105590	1					
ANR	4105978	CompoundStatement		82:3:1759:1795	4105590	1					
ANR	4105979	IdentifierDeclStatement	"char * n , * o , * p = strdup ( input + 2 ) ;"	1354:3:36497:36533	4105590	0	True				
ANR	4105980	IdentifierDecl	* n		4105590	0					
ANR	4105981	IdentifierDeclType	char *		4105590	0					
ANR	4105982	Identifier	n		4105590	1					
ANR	4105983	IdentifierDecl	* o		4105590	1					
ANR	4105984	IdentifierDeclType	char *		4105590	0					
ANR	4105985	Identifier	o		4105590	1					
ANR	4105986	IdentifierDecl	* p = strdup ( input + 2 )		4105590	2					
ANR	4105987	IdentifierDeclType	char *		4105590	0					
ANR	4105988	Identifier	p		4105590	1					
ANR	4105989	AssignmentExpression	* p = strdup ( input + 2 )		4105590	2		=			
ANR	4105990	Identifier	p		4105590	0					
ANR	4105991	CallExpression	strdup ( input + 2 )		4105590	1					
ANR	4105992	Callee	strdup		4105590	0					
ANR	4105993	Identifier	strdup		4105590	0					
ANR	4105994	ArgumentList	input + 2		4105590	1					
ANR	4105995	Argument	input + 2		4105590	0					
ANR	4105996	AdditiveExpression	input + 2		4105590	0		+			
ANR	4105997	Identifier	input		4105590	0					
ANR	4105998	PrimaryExpression	2		4105590	1					
ANR	4105999	ForStatement	for ( n = o = p ; n ; o = n )		4105590	1					
ANR	4106000	ForInit	n = o = p ;	1356:8:36592:36601	4105590	0	True				
ANR	4106001	AssignmentExpression	n = o = p		4105590	0		=			
ANR	4106002	Identifier	n		4105590	0					
ANR	4106003	AssignmentExpression	o = p		4105590	1		=			
ANR	4106004	Identifier	o		4105590	0					
ANR	4106005	Identifier	p		4105590	1					
ANR	4106006	Condition	n	1356:19:36603:36603	4105590	1	True				
ANR	4106007	Identifier	n		4105590	0					
ANR	4106008	AssignmentExpression	o = n	1356:22:36606:36610	4105590	2	True	=			
ANR	4106009	Identifier	o		4105590	0					
ANR	4106010	Identifier	n		4105590	1					
ANR	4106011	CompoundStatement		84:29:1875:1875	4105590	3					
ANR	4106012	ExpressionStatement	"n = strchr ( o , '/' )"	1357:4:36619:36638	4105590	0	True				
ANR	4106013	AssignmentExpression	"n = strchr ( o , '/' )"		4105590	0		=			
ANR	4106014	Identifier	n		4105590	0					
ANR	4106015	CallExpression	"strchr ( o , '/' )"		4105590	1					
ANR	4106016	Callee	strchr		4105590	0					
ANR	4106017	Identifier	strchr		4105590	0					
ANR	4106018	ArgumentList	o		4105590	1					
ANR	4106019	Argument	o		4105590	0					
ANR	4106020	Identifier	o		4105590	0					
ANR	4106021	Argument	'/'		4105590	1					
ANR	4106022	PrimaryExpression	'/'		4105590	0					
ANR	4106023	IfStatement	if ( n )		4105590	1					
ANR	4106024	Condition	n	1358:8:36678:36678	4105590	0	True				
ANR	4106025	Identifier	n		4105590	0					
ANR	4106026	CompoundStatement		86:11:1943:1943	4105590	1					
ANR	4106027	ExpressionStatement	* n ++ = 0	1359:5:36688:36696	4105590	0	True				
ANR	4106028	AssignmentExpression	* n ++ = 0		4105590	0		=			
ANR	4106029	UnaryOperationExpression	* n ++		4105590	0					
ANR	4106030	UnaryOperator	*		4105590	0					
ANR	4106031	PostIncDecOperationExpression	n ++		4105590	1					
ANR	4106032	Identifier	n		4105590	0					
ANR	4106033	IncDec	++		4105590	1					
ANR	4106034	PrimaryExpression	0		4105590	1					
ANR	4106035	ExpressionStatement	"s = sdb_ns ( s , o , 1 )"	1361:4:36708:36728	4105590	2	True				
ANR	4106036	AssignmentExpression	"s = sdb_ns ( s , o , 1 )"		4105590	0		=			
ANR	4106037	Identifier	s		4105590	0					
ANR	4106038	CallExpression	"sdb_ns ( s , o , 1 )"		4105590	1					
ANR	4106039	Callee	sdb_ns		4105590	0					
ANR	4106040	Identifier	sdb_ns		4105590	0					
ANR	4106041	ArgumentList	s		4105590	1					
ANR	4106042	Argument	s		4105590	0					
ANR	4106043	Identifier	s		4105590	0					
ANR	4106044	Argument	o		4105590	1					
ANR	4106045	Identifier	o		4105590	0					
ANR	4106046	Argument	1		4105590	2					
ANR	4106047	PrimaryExpression	1		4105590	0					
ANR	4106048	ExpressionStatement	free ( p )	1363:3:36738:36746	4105590	2	True				
ANR	4106049	CallExpression	free ( p )		4105590	0					
ANR	4106050	Callee	free		4105590	0					
ANR	4106051	Identifier	free		4105590	0					
ANR	4106052	ArgumentList	p		4105590	1					
ANR	4106053	Argument	p		4105590	0					
ANR	4106054	Identifier	p		4105590	0					
ANR	4106055	IfStatement	if ( ! s )		4105590	21					
ANR	4106056	Condition	! s	1365:6:36758:36759	4105590	0	True				
ANR	4106057	UnaryOperationExpression	! s		4105590	0					
ANR	4106058	UnaryOperator	!		4105590	0					
ANR	4106059	Identifier	s		4105590	1					
ANR	4106060	CompoundStatement		93:10:2024:2024	4105590	1					
ANR	4106061	ExpressionStatement	s = core -> sdb	1366:3:36767:36780	4105590	0	True				
ANR	4106062	AssignmentExpression	s = core -> sdb		4105590	0		=			
ANR	4106063	Identifier	s		4105590	0					
ANR	4106064	PtrMemberAccess	core -> sdb		4105590	1					
ANR	4106065	Identifier	core		4105590	0					
ANR	4106066	Identifier	sdb		4105590	1					
ANR	4106067	IdentifierDeclStatement	RLine * line = core -> cons -> line ;	1368:2:36788:36818	4105590	22	True				
ANR	4106068	IdentifierDecl	* line = core -> cons -> line		4105590	0					
ANR	4106069	IdentifierDeclType	RLine *		4105590	0					
ANR	4106070	Identifier	line		4105590	1					
ANR	4106071	AssignmentExpression	* line = core -> cons -> line		4105590	2		=			
ANR	4106072	Identifier	line		4105590	0					
ANR	4106073	PtrMemberAccess	core -> cons -> line		4105590	1					
ANR	4106074	PtrMemberAccess	core -> cons		4105590	0					
ANR	4106075	Identifier	core		4105590	0					
ANR	4106076	Identifier	cons		4105590	1					
ANR	4106077	Identifier	line		4105590	1					
ANR	4106078	IfStatement	if ( ! line -> sdbshell_hist )		4105590	23					
ANR	4106079	Condition	! line -> sdbshell_hist	1369:6:36826:36845	4105590	0	True				
ANR	4106080	UnaryOperationExpression	! line -> sdbshell_hist		4105590	0					
ANR	4106081	UnaryOperator	!		4105590	0					
ANR	4106082	PtrMemberAccess	line -> sdbshell_hist		4105590	1					
ANR	4106083	Identifier	line		4105590	0					
ANR	4106084	Identifier	sdbshell_hist		4105590	1					
ANR	4106085	CompoundStatement		97:28:2110:2110	4105590	1					
ANR	4106086	ExpressionStatement	line -> sdbshell_hist = r_list_newf ( free )	1370:3:36853:36893	4105590	0	True				
ANR	4106087	AssignmentExpression	line -> sdbshell_hist = r_list_newf ( free )		4105590	0		=			
ANR	4106088	PtrMemberAccess	line -> sdbshell_hist		4105590	0					
ANR	4106089	Identifier	line		4105590	0					
ANR	4106090	Identifier	sdbshell_hist		4105590	1					
ANR	4106091	CallExpression	r_list_newf ( free )		4105590	1					
ANR	4106092	Callee	r_list_newf		4105590	0					
ANR	4106093	Identifier	r_list_newf		4105590	0					
ANR	4106094	ArgumentList	free		4105590	1					
ANR	4106095	Argument	free		4105590	0					
ANR	4106096	Identifier	free		4105590	0					
ANR	4106097	ExpressionStatement	"r_list_append ( line -> sdbshell_hist , r_str_new ( ""\\0"" ) )"	1371:3:36898:36951	4105590	1	True				
ANR	4106098	CallExpression	"r_list_append ( line -> sdbshell_hist , r_str_new ( ""\\0"" ) )"		4105590	0					
ANR	4106099	Callee	r_list_append		4105590	0					
ANR	4106100	Identifier	r_list_append		4105590	0					
ANR	4106101	ArgumentList	line -> sdbshell_hist		4105590	1					
ANR	4106102	Argument	line -> sdbshell_hist		4105590	0					
ANR	4106103	PtrMemberAccess	line -> sdbshell_hist		4105590	0					
ANR	4106104	Identifier	line		4105590	0					
ANR	4106105	Identifier	sdbshell_hist		4105590	1					
ANR	4106106	Argument	"r_str_new ( ""\\0"" )"		4105590	1					
ANR	4106107	CallExpression	"r_str_new ( ""\\0"" )"		4105590	0					
ANR	4106108	Callee	r_str_new		4105590	0					
ANR	4106109	Identifier	r_str_new		4105590	0					
ANR	4106110	ArgumentList	"""\\0"""		4105590	1					
ANR	4106111	Argument	"""\\0"""		4105590	0					
ANR	4106112	PrimaryExpression	"""\\0"""		4105590	0					
ANR	4106113	IdentifierDeclStatement	RList * sdb_hist = line -> sdbshell_hist ;	1373:2:36959:36996	4105590	24	True				
ANR	4106114	IdentifierDecl	* sdb_hist = line -> sdbshell_hist		4105590	0					
ANR	4106115	IdentifierDeclType	RList *		4105590	0					
ANR	4106116	Identifier	sdb_hist		4105590	1					
ANR	4106117	AssignmentExpression	* sdb_hist = line -> sdbshell_hist		4105590	2		=			
ANR	4106118	Identifier	sdb_hist		4105590	0					
ANR	4106119	PtrMemberAccess	line -> sdbshell_hist		4105590	1					
ANR	4106120	Identifier	line		4105590	0					
ANR	4106121	Identifier	sdbshell_hist		4105590	1					
ANR	4106122	ExpressionStatement	"r_line_set_hist_callback ( line , & r_line_hist_sdb_up , & r_line_hist_sdb_down )"	1374:2:37000:37075	4105590	25	True				
ANR	4106123	CallExpression	"r_line_set_hist_callback ( line , & r_line_hist_sdb_up , & r_line_hist_sdb_down )"		4105590	0					
ANR	4106124	Callee	r_line_set_hist_callback		4105590	0					
ANR	4106125	Identifier	r_line_set_hist_callback		4105590	0					
ANR	4106126	ArgumentList	line		4105590	1					
ANR	4106127	Argument	line		4105590	0					
ANR	4106128	Identifier	line		4105590	0					
ANR	4106129	Argument	& r_line_hist_sdb_up		4105590	1					
ANR	4106130	UnaryOperationExpression	& r_line_hist_sdb_up		4105590	0					
ANR	4106131	UnaryOperator	&		4105590	0					
ANR	4106132	Identifier	r_line_hist_sdb_up		4105590	1					
ANR	4106133	Argument	& r_line_hist_sdb_down		4105590	2					
ANR	4106134	UnaryOperationExpression	& r_line_hist_sdb_down		4105590	0					
ANR	4106135	UnaryOperator	&		4105590	0					
ANR	4106136	Identifier	r_line_hist_sdb_down		4105590	1					
ANR	4106137	ForStatement	for ( ; ; )		4105590	26					
ANR	4106138	CompoundStatement		103:11:2350:2350	4105590	0					
ANR	4106139	ExpressionStatement	r_line_set_prompt ( p )	1376:3:37093:37114	4105590	0	True				
ANR	4106140	CallExpression	r_line_set_prompt ( p )		4105590	0					
ANR	4106141	Callee	r_line_set_prompt		4105590	0					
ANR	4106142	Identifier	r_line_set_prompt		4105590	0					
ANR	4106143	ArgumentList	p		4105590	1					
ANR	4106144	Argument	p		4105590	0					
ANR	4106145	Identifier	p		4105590	0					
ANR	4106146	IfStatement	"if ( r_cons_fgets ( buf , buflen , 0 , NULL ) < 1 )"		4105590	1					
ANR	4106147	Condition	"r_cons_fgets ( buf , buflen , 0 , NULL ) < 1"	1377:7:37123:37161	4105590	0	True				
ANR	4106148	RelationalExpression	"r_cons_fgets ( buf , buflen , 0 , NULL ) < 1"		4105590	0		<			
ANR	4106149	CallExpression	"r_cons_fgets ( buf , buflen , 0 , NULL )"		4105590	0					
ANR	4106150	Callee	r_cons_fgets		4105590	0					
ANR	4106151	Identifier	r_cons_fgets		4105590	0					
ANR	4106152	ArgumentList	buf		4105590	1					
ANR	4106153	Argument	buf		4105590	0					
ANR	4106154	Identifier	buf		4105590	0					
ANR	4106155	Argument	buflen		4105590	1					
ANR	4106156	Identifier	buflen		4105590	0					
ANR	4106157	Argument	0		4105590	2					
ANR	4106158	PrimaryExpression	0		4105590	0					
ANR	4106159	Argument	NULL		4105590	3					
ANR	4106160	Identifier	NULL		4105590	0					
ANR	4106161	PrimaryExpression	1		4105590	1					
ANR	4106162	CompoundStatement		105:48:2426:2426	4105590	1					
ANR	4106163	BreakStatement	break ;	1378:4:37170:37175	4105590	0	True				
ANR	4106164	IfStatement	if ( ! * buf )		4105590	2					
ANR	4106165	Condition	! * buf	1380:7:37189:37193	4105590	0	True				
ANR	4106166	UnaryOperationExpression	! * buf		4105590	0					
ANR	4106167	UnaryOperator	!		4105590	0					
ANR	4106168	UnaryOperationExpression	* buf		4105590	1					
ANR	4106169	UnaryOperator	*		4105590	0					
ANR	4106170	Identifier	buf		4105590	1					
ANR	4106171	CompoundStatement		108:14:2458:2458	4105590	1					
ANR	4106172	BreakStatement	break ;	1381:4:37202:37207	4105590	0	True				
ANR	4106173	IfStatement	if ( sdb_hist )		4105590	3					
ANR	4106174	Condition	sdb_hist	1383:7:37221:37228	4105590	0	True				
ANR	4106175	Identifier	sdb_hist		4105590	0					
ANR	4106176	CompoundStatement		111:17:2493:2493	4105590	1					
ANR	4106177	IfStatement	"if ( ( r_list_length ( sdb_hist ) == 1 ) || ( r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf ) ) )"		4105590	0					
ANR	4106178	Condition	"( r_list_length ( sdb_hist ) == 1 ) || ( r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf ) )"	1384:8:37241:37349	4105590	0	True				
ANR	4106179	OrExpression	"( r_list_length ( sdb_hist ) == 1 ) || ( r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf ) )"		4105590	0		||			
ANR	4106180	EqualityExpression	r_list_length ( sdb_hist ) == 1		4105590	0		==			
ANR	4106181	CallExpression	r_list_length ( sdb_hist )		4105590	0					
ANR	4106182	Callee	r_list_length		4105590	0					
ANR	4106183	Identifier	r_list_length		4105590	0					
ANR	4106184	ArgumentList	sdb_hist		4105590	1					
ANR	4106185	Argument	sdb_hist		4105590	0					
ANR	4106186	Identifier	sdb_hist		4105590	0					
ANR	4106187	PrimaryExpression	1		4105590	1					
ANR	4106188	AndExpression	"r_list_length ( sdb_hist ) > 1 && strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf )"		4105590	1		&&			
ANR	4106189	RelationalExpression	r_list_length ( sdb_hist ) > 1		4105590	0		>			
ANR	4106190	CallExpression	r_list_length ( sdb_hist )		4105590	0					
ANR	4106191	Callee	r_list_length		4105590	0					
ANR	4106192	Identifier	r_list_length		4105590	0					
ANR	4106193	ArgumentList	sdb_hist		4105590	1					
ANR	4106194	Argument	sdb_hist		4105590	0					
ANR	4106195	Identifier	sdb_hist		4105590	0					
ANR	4106196	PrimaryExpression	1		4105590	1					
ANR	4106197	CallExpression	"strcmp ( r_list_get_n ( sdb_hist , 1 ) , buf )"		4105590	1					
ANR	4106198	Callee	strcmp		4105590	0					
ANR	4106199	Identifier	strcmp		4105590	0					
ANR	4106200	ArgumentList	"r_list_get_n ( sdb_hist , 1 )"		4105590	1					
ANR	4106201	Argument	"r_list_get_n ( sdb_hist , 1 )"		4105590	0					
ANR	4106202	CallExpression	"r_list_get_n ( sdb_hist , 1 )"		4105590	0					
ANR	4106203	Callee	r_list_get_n		4105590	0					
ANR	4106204	Identifier	r_list_get_n		4105590	0					
ANR	4106205	ArgumentList	sdb_hist		4105590	1					
ANR	4106206	Argument	sdb_hist		4105590	0					
ANR	4106207	Identifier	sdb_hist		4105590	0					
ANR	4106208	Argument	1		4105590	1					
ANR	4106209	PrimaryExpression	1		4105590	0					
ANR	4106210	Argument	buf		4105590	1					
ANR	4106211	Identifier	buf		4105590	0					
ANR	4106212	CompoundStatement		112:119:2614:2614	4105590	1					
ANR	4106213	ExpressionStatement	"r_list_insert ( sdb_hist , 1 , strdup ( buf ) )"	1385:5:37359:37400	4105590	0	True				
ANR	4106214	CallExpression	"r_list_insert ( sdb_hist , 1 , strdup ( buf ) )"		4105590	0					
ANR	4106215	Callee	r_list_insert		4105590	0					
ANR	4106216	Identifier	r_list_insert		4105590	0					
ANR	4106217	ArgumentList	sdb_hist		4105590	1					
ANR	4106218	Argument	sdb_hist		4105590	0					
ANR	4106219	Identifier	sdb_hist		4105590	0					
ANR	4106220	Argument	1		4105590	1					
ANR	4106221	PrimaryExpression	1		4105590	0					
ANR	4106222	Argument	strdup ( buf )		4105590	2					
ANR	4106223	CallExpression	strdup ( buf )		4105590	0					
ANR	4106224	Callee	strdup		4105590	0					
ANR	4106225	Identifier	strdup		4105590	0					
ANR	4106226	ArgumentList	buf		4105590	1					
ANR	4106227	Argument	buf		4105590	0					
ANR	4106228	Identifier	buf		4105590	0					
ANR	4106229	ExpressionStatement	line -> sdbshell_hist_iter = sdb_hist -> head	1387:4:37412:37453	4105590	1	True				
ANR	4106230	AssignmentExpression	line -> sdbshell_hist_iter = sdb_hist -> head		4105590	0		=			
ANR	4106231	PtrMemberAccess	line -> sdbshell_hist_iter		4105590	0					
ANR	4106232	Identifier	line		4105590	0					
ANR	4106233	Identifier	sdbshell_hist_iter		4105590	1					
ANR	4106234	PtrMemberAccess	sdb_hist -> head		4105590	1					
ANR	4106235	Identifier	sdb_hist		4105590	0					
ANR	4106236	Identifier	head		4105590	1					
ANR	4106237	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , buf )"	1389:3:37463:37497	4105590	4	True				
ANR	4106238	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , buf )"		4105590	0		=			
ANR	4106239	Identifier	out		4105590	0					
ANR	4106240	CallExpression	"sdb_querys ( s , NULL , 0 , buf )"		4105590	1					
ANR	4106241	Callee	sdb_querys		4105590	0					
ANR	4106242	Identifier	sdb_querys		4105590	0					
ANR	4106243	ArgumentList	s		4105590	1					
ANR	4106244	Argument	s		4105590	0					
ANR	4106245	Identifier	s		4105590	0					
ANR	4106246	Argument	NULL		4105590	1					
ANR	4106247	Identifier	NULL		4105590	0					
ANR	4106248	Argument	0		4105590	2					
ANR	4106249	PrimaryExpression	0		4105590	0					
ANR	4106250	Argument	buf		4105590	3					
ANR	4106251	Identifier	buf		4105590	0					
ANR	4106252	IfStatement	if ( out )		4105590	5					
ANR	4106253	Condition	out	1390:7:37506:37508	4105590	0	True				
ANR	4106254	Identifier	out		4105590	0					
ANR	4106255	CompoundStatement		118:12:2773:2773	4105590	1					
ANR	4106256	ExpressionStatement	r_cons_println ( out )	1391:4:37517:37537	4105590	0	True				
ANR	4106257	CallExpression	r_cons_println ( out )		4105590	0					
ANR	4106258	Callee	r_cons_println		4105590	0					
ANR	4106259	Identifier	r_cons_println		4105590	0					
ANR	4106260	ArgumentList	out		4105590	1					
ANR	4106261	Argument	out		4105590	0					
ANR	4106262	Identifier	out		4105590	0					
ANR	4106263	ExpressionStatement	r_cons_flush ( )	1392:4:37543:37558	4105590	1	True				
ANR	4106264	CallExpression	r_cons_flush ( )		4105590	0					
ANR	4106265	Callee	r_cons_flush		4105590	0					
ANR	4106266	Identifier	r_cons_flush		4105590	0					
ANR	4106267	ArgumentList			4105590	1					
ANR	4106268	ExpressionStatement	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_cmd_up , & r_line_hist_cmd_down )"	1395:2:37571:37658	4105590	27	True				
ANR	4106269	CallExpression	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_cmd_up , & r_line_hist_cmd_down )"		4105590	0					
ANR	4106270	Callee	r_line_set_hist_callback		4105590	0					
ANR	4106271	Identifier	r_line_set_hist_callback		4105590	0					
ANR	4106272	ArgumentList	core -> cons -> line		4105590	1					
ANR	4106273	Argument	core -> cons -> line		4105590	0					
ANR	4106274	PtrMemberAccess	core -> cons -> line		4105590	0					
ANR	4106275	PtrMemberAccess	core -> cons		4105590	0					
ANR	4106276	Identifier	core		4105590	0					
ANR	4106277	Identifier	cons		4105590	1					
ANR	4106278	Identifier	line		4105590	1					
ANR	4106279	Argument	& r_line_hist_cmd_up		4105590	1					
ANR	4106280	UnaryOperationExpression	& r_line_hist_cmd_up		4105590	0					
ANR	4106281	UnaryOperator	&		4105590	0					
ANR	4106282	Identifier	r_line_hist_cmd_up		4105590	1					
ANR	4106283	Argument	& r_line_hist_cmd_down		4105590	2					
ANR	4106284	UnaryOperationExpression	& r_line_hist_cmd_down		4105590	0					
ANR	4106285	UnaryOperator	&		4105590	0					
ANR	4106286	Identifier	r_line_hist_cmd_down		4105590	1					
ANR	4106287	BreakStatement	break ;	1396:2:37662:37667	4105590	28	True				
ANR	4106288	Label	case 'o' :	1397:1:37670:37678	4105590	29	True				
ANR	4106289	IfStatement	if ( r_sandbox_enable ( 0 ) )		4105590	30					
ANR	4106290	Condition	r_sandbox_enable ( 0 )	1398:6:37686:37705	4105590	0	True				
ANR	4106291	CallExpression	r_sandbox_enable ( 0 )		4105590	0					
ANR	4106292	Callee	r_sandbox_enable		4105590	0					
ANR	4106293	Identifier	r_sandbox_enable		4105590	0					
ANR	4106294	ArgumentList	0		4105590	1					
ANR	4106295	Argument	0		4105590	0					
ANR	4106296	PrimaryExpression	0		4105590	0					
ANR	4106297	CompoundStatement		126:28:2970:2970	4105590	1					
ANR	4106298	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1399:3:37713:37767	4105590	0	True				
ANR	4106299	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4105590	0					
ANR	4106300	Callee	eprintf		4105590	0					
ANR	4106301	Identifier	eprintf		4105590	0					
ANR	4106302	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4105590	1					
ANR	4106303	Argument	"""This command is disabled in sandbox mode\\n"""		4105590	0					
ANR	4106304	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4105590	0					
ANR	4106305	ReturnStatement	return 0 ;	1400:3:37772:37780	4105590	1	True				
ANR	4106306	PrimaryExpression	0		4105590	0					
ANR	4106307	IfStatement	if ( input [ 1 ] == ' ' )		4105590	31					
ANR	4106308	Condition	input [ 1 ] == ' '	1402:6:37792:37806	4105590	0	True				
ANR	4106309	EqualityExpression	input [ 1 ] == ' '		4105590	0		==			
ANR	4106310	ArrayIndexing	input [ 1 ]		4105590	0					
ANR	4106311	Identifier	input		4105590	0					
ANR	4106312	PrimaryExpression	1		4105590	1					
ANR	4106313	PrimaryExpression	' '		4105590	1					
ANR	4106314	CompoundStatement		136:3:3187:3214	4105590	1					
ANR	4106315	IdentifierDeclStatement	char * fn = strdup ( input + 2 ) ;	1403:3:37814:37843	4105590	0	True				
ANR	4106316	IdentifierDecl	* fn = strdup ( input + 2 )		4105590	0					
ANR	4106317	IdentifierDeclType	char *		4105590	0					
ANR	4106318	Identifier	fn		4105590	1					
ANR	4106319	AssignmentExpression	* fn = strdup ( input + 2 )		4105590	2		=			
ANR	4106320	Identifier	fn		4105590	0					
ANR	4106321	CallExpression	strdup ( input + 2 )		4105590	1					
ANR	4106322	Callee	strdup		4105590	0					
ANR	4106323	Identifier	strdup		4105590	0					
ANR	4106324	ArgumentList	input + 2		4105590	1					
ANR	4106325	Argument	input + 2		4105590	0					
ANR	4106326	AdditiveExpression	input + 2		4105590	0		+			
ANR	4106327	Identifier	input		4105590	0					
ANR	4106328	PrimaryExpression	2		4105590	1					
ANR	4106329	IfStatement	if ( ! fn )		4105590	1					
ANR	4106330	Condition	! fn	1404:7:37852:37854	4105590	0	True				
ANR	4106331	UnaryOperationExpression	! fn		4105590	0					
ANR	4106332	UnaryOperator	!		4105590	0					
ANR	4106333	Identifier	fn		4105590	1					
ANR	4106334	CompoundStatement		132:12:3119:3119	4105590	1					
ANR	4106335	ExpressionStatement	"eprintf ( ""Unable to allocate memory\\n"" )"	1405:4:37863:37901	4105590	0	True				
ANR	4106336	CallExpression	"eprintf ( ""Unable to allocate memory\\n"" )"		4105590	0					
ANR	4106337	Callee	eprintf		4105590	0					
ANR	4106338	Identifier	eprintf		4105590	0					
ANR	4106339	ArgumentList	"""Unable to allocate memory\\n"""		4105590	1					
ANR	4106340	Argument	"""Unable to allocate memory\\n"""		4105590	0					
ANR	4106341	PrimaryExpression	"""Unable to allocate memory\\n"""		4105590	0					
ANR	4106342	ReturnStatement	return 0 ;	1406:4:37907:37915	4105590	1	True				
ANR	4106343	PrimaryExpression	0		4105590	0					
ANR	4106344	IdentifierDeclStatement	"char * ns = strchr ( fn , ' ' ) ;"	1408:3:37925:37952	4105590	2	True				
ANR	4106345	IdentifierDecl	"* ns = strchr ( fn , ' ' )"		4105590	0					
ANR	4106346	IdentifierDeclType	char *		4105590	0					
ANR	4106347	Identifier	ns		4105590	1					
ANR	4106348	AssignmentExpression	"* ns = strchr ( fn , ' ' )"		4105590	2		=			
ANR	4106349	Identifier	ns		4105590	0					
ANR	4106350	CallExpression	"strchr ( fn , ' ' )"		4105590	1					
ANR	4106351	Callee	strchr		4105590	0					
ANR	4106352	Identifier	strchr		4105590	0					
ANR	4106353	ArgumentList	fn		4105590	1					
ANR	4106354	Argument	fn		4105590	0					
ANR	4106355	Identifier	fn		4105590	0					
ANR	4106356	Argument	' '		4105590	1					
ANR	4106357	PrimaryExpression	' '		4105590	0					
ANR	4106358	IfStatement	if ( ns )		4105590	3					
ANR	4106359	Condition	ns	1409:7:37961:37962	4105590	0	True				
ANR	4106360	Identifier	ns		4105590	0					
ANR	4106361	CompoundStatement		138:4:3233:3240	4105590	1					
ANR	4106362	IdentifierDeclStatement	Sdb * db ;	1410:4:37971:37978	4105590	0	True				
ANR	4106363	IdentifierDecl	* db		4105590	0					
ANR	4106364	IdentifierDeclType	Sdb *		4105590	0					
ANR	4106365	Identifier	db		4105590	1					
ANR	4106366	ExpressionStatement	* ns ++ = 0	1411:4:37984:37993	4105590	1	True				
ANR	4106367	AssignmentExpression	* ns ++ = 0		4105590	0		=			
ANR	4106368	UnaryOperationExpression	* ns ++		4105590	0					
ANR	4106369	UnaryOperator	*		4105590	0					
ANR	4106370	PostIncDecOperationExpression	ns ++		4105590	1					
ANR	4106371	Identifier	ns		4105590	0					
ANR	4106372	IncDec	++		4105590	1					
ANR	4106373	PrimaryExpression	0		4105590	1					
ANR	4106374	IfStatement	if ( r_file_exists ( fn ) )		4105590	2					
ANR	4106375	Condition	r_file_exists ( fn )	1412:8:38003:38020	4105590	0	True				
ANR	4106376	CallExpression	r_file_exists ( fn )		4105590	0					
ANR	4106377	Callee	r_file_exists		4105590	0					
ANR	4106378	Identifier	r_file_exists		4105590	0					
ANR	4106379	ArgumentList	fn		4105590	1					
ANR	4106380	Argument	fn		4105590	0					
ANR	4106381	Identifier	fn		4105590	0					
ANR	4106382	CompoundStatement		140:28:3285:3285	4105590	1					
ANR	4106383	ExpressionStatement	"db = sdb_ns_path ( core -> sdb , ns , 1 )"	1413:5:38030:38065	4105590	0	True				
ANR	4106384	AssignmentExpression	"db = sdb_ns_path ( core -> sdb , ns , 1 )"		4105590	0		=			
ANR	4106385	Identifier	db		4105590	0					
ANR	4106386	CallExpression	"sdb_ns_path ( core -> sdb , ns , 1 )"		4105590	1					
ANR	4106387	Callee	sdb_ns_path		4105590	0					
ANR	4106388	Identifier	sdb_ns_path		4105590	0					
ANR	4106389	ArgumentList	core -> sdb		4105590	1					
ANR	4106390	Argument	core -> sdb		4105590	0					
ANR	4106391	PtrMemberAccess	core -> sdb		4105590	0					
ANR	4106392	Identifier	core		4105590	0					
ANR	4106393	Identifier	sdb		4105590	1					
ANR	4106394	Argument	ns		4105590	1					
ANR	4106395	Identifier	ns		4105590	0					
ANR	4106396	Argument	1		4105590	2					
ANR	4106397	PrimaryExpression	1		4105590	0					
ANR	4106398	IfStatement	if ( db )		4105590	1					
ANR	4106399	Condition	db	1414:9:38076:38077	4105590	0	True				
ANR	4106400	Identifier	db		4105590	0					
ANR	4106401	CompoundStatement		143:6:3350:3384	4105590	1					
ANR	4106402	IdentifierDeclStatement	"Sdb * newdb = sdb_new ( NULL , fn , 0 ) ;"	1415:6:38088:38122	4105590	0	True				
ANR	4106403	IdentifierDecl	"* newdb = sdb_new ( NULL , fn , 0 )"		4105590	0					
ANR	4106404	IdentifierDeclType	Sdb *		4105590	0					
ANR	4106405	Identifier	newdb		4105590	1					
ANR	4106406	AssignmentExpression	"* newdb = sdb_new ( NULL , fn , 0 )"		4105590	2		=			
ANR	4106407	Identifier	newdb		4105590	0					
ANR	4106408	CallExpression	"sdb_new ( NULL , fn , 0 )"		4105590	1					
ANR	4106409	Callee	sdb_new		4105590	0					
ANR	4106410	Identifier	sdb_new		4105590	0					
ANR	4106411	ArgumentList	NULL		4105590	1					
ANR	4106412	Argument	NULL		4105590	0					
ANR	4106413	Identifier	NULL		4105590	0					
ANR	4106414	Argument	fn		4105590	1					
ANR	4106415	Identifier	fn		4105590	0					
ANR	4106416	Argument	0		4105590	2					
ANR	4106417	PrimaryExpression	0		4105590	0					
ANR	4106418	IfStatement	if ( newdb )		4105590	1					
ANR	4106419	Condition	newdb	1416:10:38134:38138	4105590	0	True				
ANR	4106420	Identifier	newdb		4105590	0					
ANR	4106421	CompoundStatement		144:17:3403:3403	4105590	1					
ANR	4106422	ExpressionStatement	"sdb_drain ( db , newdb )"	1417:7:38150:38172	4105590	0	True				
ANR	4106423	CallExpression	"sdb_drain ( db , newdb )"		4105590	0					
ANR	4106424	Callee	sdb_drain		4105590	0					
ANR	4106425	Identifier	sdb_drain		4105590	0					
ANR	4106426	ArgumentList	db		4105590	1					
ANR	4106427	Argument	db		4105590	0					
ANR	4106428	Identifier	db		4105590	0					
ANR	4106429	Argument	newdb		4105590	1					
ANR	4106430	Identifier	newdb		4105590	0					
ANR	4106431	ElseStatement	else		4105590	0					
ANR	4106432	CompoundStatement		146:13:3449:3449	4105590	0					
ANR	4106433	ExpressionStatement	"eprintf ( ""Cannot open sdb '%s'\\n"" , fn )"	1419:7:38196:38234	4105590	0	True				
ANR	4106434	CallExpression	"eprintf ( ""Cannot open sdb '%s'\\n"" , fn )"		4105590	0					
ANR	4106435	Callee	eprintf		4105590	0					
ANR	4106436	Identifier	eprintf		4105590	0					
ANR	4106437	ArgumentList	"""Cannot open sdb '%s'\\n"""		4105590	1					
ANR	4106438	Argument	"""Cannot open sdb '%s'\\n"""		4105590	0					
ANR	4106439	PrimaryExpression	"""Cannot open sdb '%s'\\n"""		4105590	0					
ANR	4106440	Argument	fn		4105590	1					
ANR	4106441	Identifier	fn		4105590	0					
ANR	4106442	ElseStatement	else		4105590	0					
ANR	4106443	CompoundStatement		149:12:3518:3518	4105590	0					
ANR	4106444	ExpressionStatement	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"	1422:6:38264:38302	4105590	0	True				
ANR	4106445	CallExpression	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"		4105590	0					
ANR	4106446	Callee	eprintf		4105590	0					
ANR	4106447	Identifier	eprintf		4105590	0					
ANR	4106448	ArgumentList	"""Cannot find sdb '%s'\\n"""		4105590	1					
ANR	4106449	Argument	"""Cannot find sdb '%s'\\n"""		4105590	0					
ANR	4106450	PrimaryExpression	"""Cannot find sdb '%s'\\n"""		4105590	0					
ANR	4106451	Argument	ns		4105590	1					
ANR	4106452	Identifier	ns		4105590	0					
ANR	4106453	ElseStatement	else		4105590	0					
ANR	4106454	CompoundStatement		152:11:3584:3584	4105590	0					
ANR	4106455	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	1425:5:38329:38359	4105590	0	True				
ANR	4106456	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		4105590	0					
ANR	4106457	Callee	eprintf		4105590	0					
ANR	4106458	Identifier	eprintf		4105590	0					
ANR	4106459	ArgumentList	"""Cannot open file\\n"""		4105590	1					
ANR	4106460	Argument	"""Cannot open file\\n"""		4105590	0					
ANR	4106461	PrimaryExpression	"""Cannot open file\\n"""		4105590	0					
ANR	4106462	ElseStatement	else		4105590	0					
ANR	4106463	CompoundStatement		155:10:3639:3639	4105590	0					
ANR	4106464	ExpressionStatement	"eprintf ( ""Missing sdb namespace\\n"" )"	1428:4:38383:38418	4105590	0	True				
ANR	4106465	CallExpression	"eprintf ( ""Missing sdb namespace\\n"" )"		4105590	0					
ANR	4106466	Callee	eprintf		4105590	0					
ANR	4106467	Identifier	eprintf		4105590	0					
ANR	4106468	ArgumentList	"""Missing sdb namespace\\n"""		4105590	1					
ANR	4106469	Argument	"""Missing sdb namespace\\n"""		4105590	0					
ANR	4106470	PrimaryExpression	"""Missing sdb namespace\\n"""		4105590	0					
ANR	4106471	ExpressionStatement	free ( fn )	1430:3:38428:38437	4105590	4	True				
ANR	4106472	CallExpression	free ( fn )		4105590	0					
ANR	4106473	Callee	free		4105590	0					
ANR	4106474	Identifier	free		4105590	0					
ANR	4106475	ArgumentList	fn		4105590	1					
ANR	4106476	Argument	fn		4105590	0					
ANR	4106477	Identifier	fn		4105590	0					
ANR	4106478	ElseStatement	else		4105590	0					
ANR	4106479	CompoundStatement		159:9:3710:3710	4105590	0					
ANR	4106480	ExpressionStatement	"eprintf ( ""Usage: ko [file] [namespace]\\n"" )"	1432:3:38453:38495	4105590	0	True				
ANR	4106481	CallExpression	"eprintf ( ""Usage: ko [file] [namespace]\\n"" )"		4105590	0					
ANR	4106482	Callee	eprintf		4105590	0					
ANR	4106483	Identifier	eprintf		4105590	0					
ANR	4106484	ArgumentList	"""Usage: ko [file] [namespace]\\n"""		4105590	1					
ANR	4106485	Argument	"""Usage: ko [file] [namespace]\\n"""		4105590	0					
ANR	4106486	PrimaryExpression	"""Usage: ko [file] [namespace]\\n"""		4105590	0					
ANR	4106487	BreakStatement	break ;	1434:2:38503:38508	4105590	32	True				
ANR	4106488	Label	case 'd' :	1435:1:38511:38519	4105590	33	True				
ANR	4106489	IfStatement	if ( r_sandbox_enable ( 0 ) )		4105590	34					
ANR	4106490	Condition	r_sandbox_enable ( 0 )	1436:6:38527:38546	4105590	0	True				
ANR	4106491	CallExpression	r_sandbox_enable ( 0 )		4105590	0					
ANR	4106492	Callee	r_sandbox_enable		4105590	0					
ANR	4106493	Identifier	r_sandbox_enable		4105590	0					
ANR	4106494	ArgumentList	0		4105590	1					
ANR	4106495	Argument	0		4105590	0					
ANR	4106496	PrimaryExpression	0		4105590	0					
ANR	4106497	CompoundStatement		164:28:3811:3811	4105590	1					
ANR	4106498	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1437:3:38554:38608	4105590	0	True				
ANR	4106499	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4105590	0					
ANR	4106500	Callee	eprintf		4105590	0					
ANR	4106501	Identifier	eprintf		4105590	0					
ANR	4106502	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4105590	1					
ANR	4106503	Argument	"""This command is disabled in sandbox mode\\n"""		4105590	0					
ANR	4106504	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4105590	0					
ANR	4106505	ReturnStatement	return 0 ;	1438:3:38613:38621	4105590	1	True				
ANR	4106506	PrimaryExpression	0		4105590	0					
ANR	4106507	IfStatement	if ( input [ 1 ] == ' ' )		4105590	35					
ANR	4106508	Condition	input [ 1 ] == ' '	1440:6:38633:38647	4105590	0	True				
ANR	4106509	EqualityExpression	input [ 1 ] == ' '		4105590	0		==			
ANR	4106510	ArrayIndexing	input [ 1 ]		4105590	0					
ANR	4106511	Identifier	input		4105590	0					
ANR	4106512	PrimaryExpression	1		4105590	1					
ANR	4106513	PrimaryExpression	' '		4105590	1					
ANR	4106514	CompoundStatement		170:3:3951:3978	4105590	1					
ANR	4106515	IdentifierDeclStatement	char * fn = strdup ( input + 2 ) ;	1441:3:38655:38684	4105590	0	True				
ANR	4106516	IdentifierDecl	* fn = strdup ( input + 2 )		4105590	0					
ANR	4106517	IdentifierDeclType	char *		4105590	0					
ANR	4106518	Identifier	fn		4105590	1					
ANR	4106519	AssignmentExpression	* fn = strdup ( input + 2 )		4105590	2		=			
ANR	4106520	Identifier	fn		4105590	0					
ANR	4106521	CallExpression	strdup ( input + 2 )		4105590	1					
ANR	4106522	Callee	strdup		4105590	0					
ANR	4106523	Identifier	strdup		4105590	0					
ANR	4106524	ArgumentList	input + 2		4105590	1					
ANR	4106525	Argument	input + 2		4105590	0					
ANR	4106526	AdditiveExpression	input + 2		4105590	0		+			
ANR	4106527	Identifier	input		4105590	0					
ANR	4106528	PrimaryExpression	2		4105590	1					
ANR	4106529	IdentifierDeclStatement	"char * ns = strchr ( fn , ' ' ) ;"	1442:3:38689:38716	4105590	1	True				
ANR	4106530	IdentifierDecl	"* ns = strchr ( fn , ' ' )"		4105590	0					
ANR	4106531	IdentifierDeclType	char *		4105590	0					
ANR	4106532	Identifier	ns		4105590	1					
ANR	4106533	AssignmentExpression	"* ns = strchr ( fn , ' ' )"		4105590	2		=			
ANR	4106534	Identifier	ns		4105590	0					
ANR	4106535	CallExpression	"strchr ( fn , ' ' )"		4105590	1					
ANR	4106536	Callee	strchr		4105590	0					
ANR	4106537	Identifier	strchr		4105590	0					
ANR	4106538	ArgumentList	fn		4105590	1					
ANR	4106539	Argument	fn		4105590	0					
ANR	4106540	Identifier	fn		4105590	0					
ANR	4106541	Argument	' '		4105590	1					
ANR	4106542	PrimaryExpression	' '		4105590	0					
ANR	4106543	IfStatement	if ( ns )		4105590	2					
ANR	4106544	Condition	ns	1443:7:38725:38726	4105590	0	True				
ANR	4106545	Identifier	ns		4105590	0					
ANR	4106546	CompoundStatement		173:4:4012:4052	4105590	1					
ANR	4106547	ExpressionStatement	* ns ++ = 0	1444:4:38735:38744	4105590	0	True				
ANR	4106548	AssignmentExpression	* ns ++ = 0		4105590	0		=			
ANR	4106549	UnaryOperationExpression	* ns ++		4105590	0					
ANR	4106550	UnaryOperator	*		4105590	0					
ANR	4106551	PostIncDecOperationExpression	ns ++		4105590	1					
ANR	4106552	Identifier	ns		4105590	0					
ANR	4106553	IncDec	++		4105590	1					
ANR	4106554	PrimaryExpression	0		4105590	1					
ANR	4106555	IdentifierDeclStatement	"Sdb * db = sdb_ns_path ( core -> sdb , ns , 0 ) ;"	1445:4:38750:38790	4105590	1	True				
ANR	4106556	IdentifierDecl	"* db = sdb_ns_path ( core -> sdb , ns , 0 )"		4105590	0					
ANR	4106557	IdentifierDeclType	Sdb *		4105590	0					
ANR	4106558	Identifier	db		4105590	1					
ANR	4106559	AssignmentExpression	"* db = sdb_ns_path ( core -> sdb , ns , 0 )"		4105590	2		=			
ANR	4106560	Identifier	db		4105590	0					
ANR	4106561	CallExpression	"sdb_ns_path ( core -> sdb , ns , 0 )"		4105590	1					
ANR	4106562	Callee	sdb_ns_path		4105590	0					
ANR	4106563	Identifier	sdb_ns_path		4105590	0					
ANR	4106564	ArgumentList	core -> sdb		4105590	1					
ANR	4106565	Argument	core -> sdb		4105590	0					
ANR	4106566	PtrMemberAccess	core -> sdb		4105590	0					
ANR	4106567	Identifier	core		4105590	0					
ANR	4106568	Identifier	sdb		4105590	1					
ANR	4106569	Argument	ns		4105590	1					
ANR	4106570	Identifier	ns		4105590	0					
ANR	4106571	Argument	0		4105590	2					
ANR	4106572	PrimaryExpression	0		4105590	0					
ANR	4106573	IfStatement	if ( db )		4105590	2					
ANR	4106574	Condition	db	1446:8:38800:38801	4105590	0	True				
ANR	4106575	Identifier	db		4105590	0					
ANR	4106576	CompoundStatement		174:12:4066:4066	4105590	1					
ANR	4106577	ExpressionStatement	"sdb_file ( db , fn )"	1447:5:38811:38828	4105590	0	True				
ANR	4106578	CallExpression	"sdb_file ( db , fn )"		4105590	0					
ANR	4106579	Callee	sdb_file		4105590	0					
ANR	4106580	Identifier	sdb_file		4105590	0					
ANR	4106581	ArgumentList	db		4105590	1					
ANR	4106582	Argument	db		4105590	0					
ANR	4106583	Identifier	db		4105590	0					
ANR	4106584	Argument	fn		4105590	1					
ANR	4106585	Identifier	fn		4105590	0					
ANR	4106586	ExpressionStatement	sdb_sync ( db )	1448:5:38835:38848	4105590	1	True				
ANR	4106587	CallExpression	sdb_sync ( db )		4105590	0					
ANR	4106588	Callee	sdb_sync		4105590	0					
ANR	4106589	Identifier	sdb_sync		4105590	0					
ANR	4106590	ArgumentList	db		4105590	1					
ANR	4106591	Argument	db		4105590	0					
ANR	4106592	Identifier	db		4105590	0					
ANR	4106593	ElseStatement	else		4105590	0					
ANR	4106594	CompoundStatement		177:11:4123:4123	4105590	0					
ANR	4106595	ExpressionStatement	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"	1450:5:38868:38906	4105590	0	True				
ANR	4106596	CallExpression	"eprintf ( ""Cannot find sdb '%s'\\n"" , ns )"		4105590	0					
ANR	4106597	Callee	eprintf		4105590	0					
ANR	4106598	Identifier	eprintf		4105590	0					
ANR	4106599	ArgumentList	"""Cannot find sdb '%s'\\n"""		4105590	1					
ANR	4106600	Argument	"""Cannot find sdb '%s'\\n"""		4105590	0					
ANR	4106601	PrimaryExpression	"""Cannot find sdb '%s'\\n"""		4105590	0					
ANR	4106602	Argument	ns		4105590	1					
ANR	4106603	Identifier	ns		4105590	0					
ANR	4106604	ElseStatement	else		4105590	0					
ANR	4106605	CompoundStatement		180:10:4186:4186	4105590	0					
ANR	4106606	ExpressionStatement	"eprintf ( ""Missing sdb namespace\\n"" )"	1453:4:38930:38965	4105590	0	True				
ANR	4106607	CallExpression	"eprintf ( ""Missing sdb namespace\\n"" )"		4105590	0					
ANR	4106608	Callee	eprintf		4105590	0					
ANR	4106609	Identifier	eprintf		4105590	0					
ANR	4106610	ArgumentList	"""Missing sdb namespace\\n"""		4105590	1					
ANR	4106611	Argument	"""Missing sdb namespace\\n"""		4105590	0					
ANR	4106612	PrimaryExpression	"""Missing sdb namespace\\n"""		4105590	0					
ANR	4106613	ExpressionStatement	free ( fn )	1455:3:38975:38984	4105590	3	True				
ANR	4106614	CallExpression	free ( fn )		4105590	0					
ANR	4106615	Callee	free		4105590	0					
ANR	4106616	Identifier	free		4105590	0					
ANR	4106617	ArgumentList	fn		4105590	1					
ANR	4106618	Argument	fn		4105590	0					
ANR	4106619	Identifier	fn		4105590	0					
ANR	4106620	ElseStatement	else		4105590	0					
ANR	4106621	CompoundStatement		184:9:4257:4257	4105590	0					
ANR	4106622	ExpressionStatement	"eprintf ( ""Usage: kd [file] [namespace]\\n"" )"	1457:3:39000:39042	4105590	0	True				
ANR	4106623	CallExpression	"eprintf ( ""Usage: kd [file] [namespace]\\n"" )"		4105590	0					
ANR	4106624	Callee	eprintf		4105590	0					
ANR	4106625	Identifier	eprintf		4105590	0					
ANR	4106626	ArgumentList	"""Usage: kd [file] [namespace]\\n"""		4105590	1					
ANR	4106627	Argument	"""Usage: kd [file] [namespace]\\n"""		4105590	0					
ANR	4106628	PrimaryExpression	"""Usage: kd [file] [namespace]\\n"""		4105590	0					
ANR	4106629	BreakStatement	break ;	1459:2:39050:39055	4105590	36	True				
ANR	4106630	Label	case '?' :	1460:1:39058:39066	4105590	37	True				
ANR	4106631	ExpressionStatement	"r_core_cmd_help ( core , help_msg_k )"	1461:2:39070:39104	4105590	38	True				
ANR	4106632	CallExpression	"r_core_cmd_help ( core , help_msg_k )"		4105590	0					
ANR	4106633	Callee	r_core_cmd_help		4105590	0					
ANR	4106634	Identifier	r_core_cmd_help		4105590	0					
ANR	4106635	ArgumentList	core		4105590	1					
ANR	4106636	Argument	core		4105590	0					
ANR	4106637	Identifier	core		4105590	0					
ANR	4106638	Argument	help_msg_k		4105590	1					
ANR	4106639	Identifier	help_msg_k		4105590	0					
ANR	4106640	BreakStatement	break ;	1462:2:39108:39113	4105590	39	True				
ANR	4106641	IfStatement	if ( input [ 0 ] == '\\0' )		4105590	8					
ANR	4106642	Condition	input [ 0 ] == '\\0'	1465:5:39124:39139	4105590	0	True				
ANR	4106643	EqualityExpression	input [ 0 ] == '\\0'		4105590	0		==			
ANR	4106644	ArrayIndexing	input [ 0 ]		4105590	0					
ANR	4106645	Identifier	input		4105590	0					
ANR	4106646	PrimaryExpression	0		4105590	1					
ANR	4106647	PrimaryExpression	'\\0'		4105590	1					
ANR	4106648	CompoundStatement		193:23:4404:4404	4105590	1					
ANR	4106649	ReturnStatement	return 0 ;	1467:2:39203:39211	4105590	0	True				
ANR	4106650	PrimaryExpression	0		4105590	0					
ANR	4106651	ExpressionStatement	"sp = strchr ( input + 1 , ' ' )"	1470:1:39218:39246	4105590	9	True				
ANR	4106652	AssignmentExpression	"sp = strchr ( input + 1 , ' ' )"		4105590	0		=			
ANR	4106653	Identifier	sp		4105590	0					
ANR	4106654	CallExpression	"strchr ( input + 1 , ' ' )"		4105590	1					
ANR	4106655	Callee	strchr		4105590	0					
ANR	4106656	Identifier	strchr		4105590	0					
ANR	4106657	ArgumentList	input + 1		4105590	1					
ANR	4106658	Argument	input + 1		4105590	0					
ANR	4106659	AdditiveExpression	input + 1		4105590	0		+			
ANR	4106660	Identifier	input		4105590	0					
ANR	4106661	PrimaryExpression	1		4105590	1					
ANR	4106662	Argument	' '		4105590	1					
ANR	4106663	PrimaryExpression	' '		4105590	0					
ANR	4106664	IfStatement	if ( sp )		4105590	10					
ANR	4106665	Condition	sp	1471:5:39253:39254	4105590	0	True				
ANR	4106666	Identifier	sp		4105590	0					
ANR	4106667	CompoundStatement		200:2:4523:4549	4105590	1					
ANR	4106668	IdentifierDeclStatement	char * inp = strdup ( input ) ;	1472:2:39261:39287	4105590	0	True				
ANR	4106669	IdentifierDecl	* inp = strdup ( input )		4105590	0					
ANR	4106670	IdentifierDeclType	char *		4105590	0					
ANR	4106671	Identifier	inp		4105590	1					
ANR	4106672	AssignmentExpression	* inp = strdup ( input )		4105590	2		=			
ANR	4106673	Identifier	inp		4105590	0					
ANR	4106674	CallExpression	strdup ( input )		4105590	1					
ANR	4106675	Callee	strdup		4105590	0					
ANR	4106676	Identifier	strdup		4105590	0					
ANR	4106677	ArgumentList	input		4105590	1					
ANR	4106678	Argument	input		4105590	0					
ANR	4106679	Identifier	input		4105590	0					
ANR	4106680	ExpressionStatement	inp [ ( size_t ) ( sp - input ) ] = 0	1473:2:39291:39321	4105590	1	True				
ANR	4106681	AssignmentExpression	inp [ ( size_t ) ( sp - input ) ] = 0		4105590	0		=			
ANR	4106682	ArrayIndexing	inp [ ( size_t ) ( sp - input ) ]		4105590	0					
ANR	4106683	Identifier	inp		4105590	0					
ANR	4106684	CastExpression	( size_t ) ( sp - input )		4105590	1					
ANR	4106685	CastTarget	size_t		4105590	0					
ANR	4106686	AdditiveExpression	sp - input		4105590	1		-			
ANR	4106687	Identifier	sp		4105590	0					
ANR	4106688	Identifier	input		4105590	1					
ANR	4106689	PrimaryExpression	0		4105590	1					
ANR	4106690	ExpressionStatement	"s = sdb_ns ( core -> sdb , inp + 1 , 1 )"	1474:2:39325:39359	4105590	2	True				
ANR	4106691	AssignmentExpression	"s = sdb_ns ( core -> sdb , inp + 1 , 1 )"		4105590	0		=			
ANR	4106692	Identifier	s		4105590	0					
ANR	4106693	CallExpression	"sdb_ns ( core -> sdb , inp + 1 , 1 )"		4105590	1					
ANR	4106694	Callee	sdb_ns		4105590	0					
ANR	4106695	Identifier	sdb_ns		4105590	0					
ANR	4106696	ArgumentList	core -> sdb		4105590	1					
ANR	4106697	Argument	core -> sdb		4105590	0					
ANR	4106698	PtrMemberAccess	core -> sdb		4105590	0					
ANR	4106699	Identifier	core		4105590	0					
ANR	4106700	Identifier	sdb		4105590	1					
ANR	4106701	Argument	inp + 1		4105590	1					
ANR	4106702	AdditiveExpression	inp + 1		4105590	0		+			
ANR	4106703	Identifier	inp		4105590	0					
ANR	4106704	PrimaryExpression	1		4105590	1					
ANR	4106705	Argument	1		4105590	2					
ANR	4106706	PrimaryExpression	1		4105590	0					
ANR	4106707	ExpressionStatement	"out = sdb_querys ( s , NULL , 0 , sp + 1 )"	1475:2:39363:39400	4105590	3	True				
ANR	4106708	AssignmentExpression	"out = sdb_querys ( s , NULL , 0 , sp + 1 )"		4105590	0		=			
ANR	4106709	Identifier	out		4105590	0					
ANR	4106710	CallExpression	"sdb_querys ( s , NULL , 0 , sp + 1 )"		4105590	1					
ANR	4106711	Callee	sdb_querys		4105590	0					
ANR	4106712	Identifier	sdb_querys		4105590	0					
ANR	4106713	ArgumentList	s		4105590	1					
ANR	4106714	Argument	s		4105590	0					
ANR	4106715	Identifier	s		4105590	0					
ANR	4106716	Argument	NULL		4105590	1					
ANR	4106717	Identifier	NULL		4105590	0					
ANR	4106718	Argument	0		4105590	2					
ANR	4106719	PrimaryExpression	0		4105590	0					
ANR	4106720	Argument	sp + 1		4105590	3					
ANR	4106721	AdditiveExpression	sp + 1		4105590	0		+			
ANR	4106722	Identifier	sp		4105590	0					
ANR	4106723	PrimaryExpression	1		4105590	1					
ANR	4106724	IfStatement	if ( out )		4105590	4					
ANR	4106725	Condition	out	1476:6:39408:39410	4105590	0	True				
ANR	4106726	Identifier	out		4105590	0					
ANR	4106727	CompoundStatement		204:11:4675:4675	4105590	1					
ANR	4106728	ExpressionStatement	r_cons_println ( out )	1477:3:39418:39438	4105590	0	True				
ANR	4106729	CallExpression	r_cons_println ( out )		4105590	0					
ANR	4106730	Callee	r_cons_println		4105590	0					
ANR	4106731	Identifier	r_cons_println		4105590	0					
ANR	4106732	ArgumentList	out		4105590	1					
ANR	4106733	Argument	out		4105590	0					
ANR	4106734	Identifier	out		4105590	0					
ANR	4106735	ExpressionStatement	free ( out )	1478:3:39443:39453	4105590	1	True				
ANR	4106736	CallExpression	free ( out )		4105590	0					
ANR	4106737	Callee	free		4105590	0					
ANR	4106738	Identifier	free		4105590	0					
ANR	4106739	ArgumentList	out		4105590	1					
ANR	4106740	Argument	out		4105590	0					
ANR	4106741	Identifier	out		4105590	0					
ANR	4106742	ExpressionStatement	free ( inp )	1480:2:39461:39471	4105590	5	True				
ANR	4106743	CallExpression	free ( inp )		4105590	0					
ANR	4106744	Callee	free		4105590	0					
ANR	4106745	Identifier	free		4105590	0					
ANR	4106746	ArgumentList	inp		4105590	1					
ANR	4106747	Argument	inp		4105590	0					
ANR	4106748	Identifier	inp		4105590	0					
ANR	4106749	ReturnStatement	return 0 ;	1481:2:39475:39483	4105590	6	True				
ANR	4106750	PrimaryExpression	0		4105590	0					
ANR	4106751	ReturnStatement	return 0 ;	1483:1:39489:39497	4105590	11	True				
ANR	4106752	PrimaryExpression	0		4105590	0					
ANR	4106753	ReturnType	static int		4105590	1					
ANR	4106754	Identifier	cmd_kuery		4105590	2					
ANR	4106755	ParameterList	"void * data , const char * input"		4105590	3					
ANR	4106756	Parameter	void * data	1273:21:34706:34715	4105590	0	True				
ANR	4106757	ParameterType	void *		4105590	0					
ANR	4106758	Identifier	data		4105590	1					
ANR	4106759	Parameter	const char * input	1273:33:34718:34734	4105590	1	True				
ANR	4106760	ParameterType	const char *		4105590	0					
ANR	4106761	Identifier	input		4105590	1					
ANR	4106762	CFGEntryNode	ENTRY		4105590		True				
ANR	4106763	CFGExitNode	EXIT		4105590		True				
ANR	4106764	InfiniteForNode	true		4105590		True				
ANR	4106765	Symbol	* sp		4105590						
ANR	4106766	Symbol	data		4105590						
ANR	4106767	Symbol	next_cmd		4105590						
ANR	4106768	Symbol	r_cons_fgets		4105590						
ANR	4106769	Symbol	* ns ++		4105590						
ANR	4106770	Symbol	* input		4105590						
ANR	4106771	Symbol	strchr		4105590						
ANR	4106772	Symbol	* line		4105590						
ANR	4106773	Symbol	line -> sdbshell_hist		4105590						
ANR	4106774	Symbol	& r_line_hist_cmd_down		4105590						
ANR	4106775	Symbol	line -> sdbshell_hist_iter		4105590						
ANR	4106776	Symbol	cur_cmd		4105590						
ANR	4106777	Symbol	buflen		4105590						
ANR	4106778	Symbol	sdb_ns_path		4105590						
ANR	4106779	Symbol	r_str_new		4105590						
ANR	4106780	Symbol	strcmp		4105590						
ANR	4106781	Symbol	r_cons_is_interactive		4105590						
ANR	4106782	Symbol	* buf		4105590						
ANR	4106783	Symbol	NULL		4105590						
ANR	4106784	Symbol	newdb		4105590						
ANR	4106785	Symbol	r_list_newf		4105590						
ANR	4106786	Symbol	sdb_hist -> head		4105590						
ANR	4106787	Symbol	* n ++		4105590						
ANR	4106788	Symbol	sdb_querys		4105590						
ANR	4106789	Symbol	r_list_get_n		4105590						
ANR	4106790	Symbol	* inp		4105590						
ANR	4106791	Symbol	& r_line_hist_sdb_up		4105590						
ANR	4106792	Symbol	input		4105590						
ANR	4106793	Symbol	core		4105590						
ANR	4106794	Symbol	sdb_new		4105590						
ANR	4106795	Symbol	* temp_storage		4105590						
ANR	4106796	Symbol	* out		4105590						
ANR	4106797	Symbol	& r_line_hist_cmd_up		4105590						
ANR	4106798	Symbol	temp_storage		4105590						
ANR	4106799	Symbol	* core -> cons		4105590						
ANR	4106800	Symbol	ns		4105590						
ANR	4106801	Symbol	r_str_ndup		4105590						
ANR	4106802	Symbol	line		4105590						
ANR	4106803	Symbol	r_sandbox_enable		4105590						
ANR	4106804	Symbol	core -> sdb		4105590						
ANR	4106805	Symbol	* core		4105590						
ANR	4106806	Symbol	fn		4105590						
ANR	4106807	Symbol	r_str_newf		4105590						
ANR	4106808	Symbol	& r_line_hist_sdb_down		4105590						
ANR	4106809	Symbol	sdb_hist		4105590						
ANR	4106810	Symbol	out		4105590						
ANR	4106811	Symbol	help_msg_k		4105590						
ANR	4106812	Symbol	core -> cons		4105590						
ANR	4106813	Symbol	core -> http_up		4105590						
ANR	4106814	Symbol	temp_pos		4105590						
ANR	4106815	Symbol	free		4105590						
ANR	4106816	Symbol	sp		4105590						
ANR	4106817	Symbol	callback_foreach_kv		4105590						
ANR	4106818	Symbol	* * core		4105590						
ANR	4106819	Symbol	false		4105590						
ANR	4106820	Symbol	inp		4105590						
ANR	4106821	Symbol	n		4105590						
ANR	4106822	Symbol	o		4105590						
ANR	4106823	Symbol	p		4105590						
ANR	4106824	Symbol	* sdb_hist		4105590						
ANR	4106825	Symbol	buf		4105590						
ANR	4106826	Symbol	s		4105590						
ANR	4106827	Symbol	cur_pos		4105590						
ANR	4106828	Symbol	temp_cmd		4105590						
ANR	4106829	Symbol	strdup		4105590						
ANR	4106830	Symbol	core -> cons -> line		4105590						
ANR	4106831	Symbol	r_file_exists		4105590						
ANR	4106832	Symbol	r_list_length		4105590						
ANR	4106833	Symbol	db		4105590						
ANR	4106834	Symbol	sdb_ns		4105590						
ANR	4106835	Function	cmd_bsize	1486:0:39502:40791							
ANR	4106836	FunctionDef	"cmd_bsize (void * data , const char * input)"		4106835	0					
ANR	4106837	CompoundStatement		1486:52:39554:40791	4106835	0					
ANR	4106838	IdentifierDeclStatement	ut64 n ;	1487:1:39557:39563	4106835	0	True				
ANR	4106839	IdentifierDecl	n		4106835	0					
ANR	4106840	IdentifierDeclType	ut64		4106835	0					
ANR	4106841	Identifier	n		4106835	1					
ANR	4106842	IdentifierDeclStatement	RFlagItem * flag ;	1488:1:39566:39581	4106835	1	True				
ANR	4106843	IdentifierDecl	* flag		4106835	0					
ANR	4106844	IdentifierDeclType	RFlagItem *		4106835	0					
ANR	4106845	Identifier	flag		4106835	1					
ANR	4106846	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1489:1:39584:39611	4106835	2	True				
ANR	4106847	IdentifierDecl	* core = ( RCore * ) data		4106835	0					
ANR	4106848	IdentifierDeclType	RCore *		4106835	0					
ANR	4106849	Identifier	core		4106835	1					
ANR	4106850	AssignmentExpression	* core = ( RCore * ) data		4106835	2		=			
ANR	4106851	Identifier	core		4106835	0					
ANR	4106852	CastExpression	( RCore * ) data		4106835	1					
ANR	4106853	CastTarget	RCore *		4106835	0					
ANR	4106854	Identifier	data		4106835	1					
ANR	4106855	SwitchStatement	switch ( input [ 0 ] )		4106835	3					
ANR	4106856	Condition	input [ 0 ]	1490:9:39622:39629	4106835	0	True				
ANR	4106857	ArrayIndexing	input [ 0 ]		4106835	0					
ANR	4106858	Identifier	input		4106835	0					
ANR	4106859	PrimaryExpression	0		4106835	1					
ANR	4106860	CompoundStatement		5:19:77:77	4106835	1					
ANR	4106861	Label	case 'm' :	1491:1:39635:39643	4106835	0	True				
ANR	4106862	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	1492:2:39655:39692	4106835	1	True				
ANR	4106863	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		4106835	0		=			
ANR	4106864	Identifier	n		4106835	0					
ANR	4106865	CallExpression	"r_num_math ( core -> num , input + 1 )"		4106835	1					
ANR	4106866	Callee	r_num_math		4106835	0					
ANR	4106867	Identifier	r_num_math		4106835	0					
ANR	4106868	ArgumentList	core -> num		4106835	1					
ANR	4106869	Argument	core -> num		4106835	0					
ANR	4106870	PtrMemberAccess	core -> num		4106835	0					
ANR	4106871	Identifier	core		4106835	0					
ANR	4106872	Identifier	num		4106835	1					
ANR	4106873	Argument	input + 1		4106835	1					
ANR	4106874	AdditiveExpression	input + 1		4106835	0		+			
ANR	4106875	Identifier	input		4106835	0					
ANR	4106876	PrimaryExpression	1		4106835	1					
ANR	4106877	IfStatement	if ( n > 1 )		4106835	2					
ANR	4106878	Condition	n > 1	1493:6:39700:39704	4106835	0	True				
ANR	4106879	RelationalExpression	n > 1		4106835	0		>			
ANR	4106880	Identifier	n		4106835	0					
ANR	4106881	PrimaryExpression	1		4106835	1					
ANR	4106882	CompoundStatement		8:13:152:152	4106835	1					
ANR	4106883	ExpressionStatement	core -> blocksize_max = n	1494:3:39712:39735	4106835	0	True				
ANR	4106884	AssignmentExpression	core -> blocksize_max = n		4106835	0		=			
ANR	4106885	PtrMemberAccess	core -> blocksize_max		4106835	0					
ANR	4106886	Identifier	core		4106835	0					
ANR	4106887	Identifier	blocksize_max		4106835	1					
ANR	4106888	Identifier	n		4106835	1					
ANR	4106889	ElseStatement	else		4106835	0					
ANR	4106890	CompoundStatement		10:9:191:191	4106835	0					
ANR	4106891	ExpressionStatement	"r_cons_printf ( ""0x%x\\n"" , ( ut32 ) core -> blocksize_max )"	1496:3:39751:39802	4106835	0	True				
ANR	4106892	CallExpression	"r_cons_printf ( ""0x%x\\n"" , ( ut32 ) core -> blocksize_max )"		4106835	0					
ANR	4106893	Callee	r_cons_printf		4106835	0					
ANR	4106894	Identifier	r_cons_printf		4106835	0					
ANR	4106895	ArgumentList	"""0x%x\\n"""		4106835	1					
ANR	4106896	Argument	"""0x%x\\n"""		4106835	0					
ANR	4106897	PrimaryExpression	"""0x%x\\n"""		4106835	0					
ANR	4106898	Argument	( ut32 ) core -> blocksize_max		4106835	1					
ANR	4106899	CastExpression	( ut32 ) core -> blocksize_max		4106835	0					
ANR	4106900	CastTarget	ut32		4106835	0					
ANR	4106901	PtrMemberAccess	core -> blocksize_max		4106835	1					
ANR	4106902	Identifier	core		4106835	0					
ANR	4106903	Identifier	blocksize_max		4106835	1					
ANR	4106904	BreakStatement	break ;	1498:2:39810:39815	4106835	3	True				
ANR	4106905	Label	case '+' :	1499:1:39818:39826	4106835	4	True				
ANR	4106906	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	1500:2:39838:39875	4106835	5	True				
ANR	4106907	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		4106835	0		=			
ANR	4106908	Identifier	n		4106835	0					
ANR	4106909	CallExpression	"r_num_math ( core -> num , input + 1 )"		4106835	1					
ANR	4106910	Callee	r_num_math		4106835	0					
ANR	4106911	Identifier	r_num_math		4106835	0					
ANR	4106912	ArgumentList	core -> num		4106835	1					
ANR	4106913	Argument	core -> num		4106835	0					
ANR	4106914	PtrMemberAccess	core -> num		4106835	0					
ANR	4106915	Identifier	core		4106835	0					
ANR	4106916	Identifier	num		4106835	1					
ANR	4106917	Argument	input + 1		4106835	1					
ANR	4106918	AdditiveExpression	input + 1		4106835	0		+			
ANR	4106919	Identifier	input		4106835	0					
ANR	4106920	PrimaryExpression	1		4106835	1					
ANR	4106921	ExpressionStatement	"r_core_block_size ( core , core -> blocksize + n )"	1501:2:39879:39924	4106835	6	True				
ANR	4106922	CallExpression	"r_core_block_size ( core , core -> blocksize + n )"		4106835	0					
ANR	4106923	Callee	r_core_block_size		4106835	0					
ANR	4106924	Identifier	r_core_block_size		4106835	0					
ANR	4106925	ArgumentList	core		4106835	1					
ANR	4106926	Argument	core		4106835	0					
ANR	4106927	Identifier	core		4106835	0					
ANR	4106928	Argument	core -> blocksize + n		4106835	1					
ANR	4106929	AdditiveExpression	core -> blocksize + n		4106835	0		+			
ANR	4106930	PtrMemberAccess	core -> blocksize		4106835	0					
ANR	4106931	Identifier	core		4106835	0					
ANR	4106932	Identifier	blocksize		4106835	1					
ANR	4106933	Identifier	n		4106835	1					
ANR	4106934	BreakStatement	break ;	1502:2:39928:39933	4106835	7	True				
ANR	4106935	Label	case '-' :	1503:1:39936:39944	4106835	8	True				
ANR	4106936	ExpressionStatement	"n = r_num_math ( core -> num , input + 1 )"	1504:2:39956:39993	4106835	9	True				
ANR	4106937	AssignmentExpression	"n = r_num_math ( core -> num , input + 1 )"		4106835	0		=			
ANR	4106938	Identifier	n		4106835	0					
ANR	4106939	CallExpression	"r_num_math ( core -> num , input + 1 )"		4106835	1					
ANR	4106940	Callee	r_num_math		4106835	0					
ANR	4106941	Identifier	r_num_math		4106835	0					
ANR	4106942	ArgumentList	core -> num		4106835	1					
ANR	4106943	Argument	core -> num		4106835	0					
ANR	4106944	PtrMemberAccess	core -> num		4106835	0					
ANR	4106945	Identifier	core		4106835	0					
ANR	4106946	Identifier	num		4106835	1					
ANR	4106947	Argument	input + 1		4106835	1					
ANR	4106948	AdditiveExpression	input + 1		4106835	0		+			
ANR	4106949	Identifier	input		4106835	0					
ANR	4106950	PrimaryExpression	1		4106835	1					
ANR	4106951	ExpressionStatement	"r_core_block_size ( core , core -> blocksize - n )"	1505:2:39997:40042	4106835	10	True				
ANR	4106952	CallExpression	"r_core_block_size ( core , core -> blocksize - n )"		4106835	0					
ANR	4106953	Callee	r_core_block_size		4106835	0					
ANR	4106954	Identifier	r_core_block_size		4106835	0					
ANR	4106955	ArgumentList	core		4106835	1					
ANR	4106956	Argument	core		4106835	0					
ANR	4106957	Identifier	core		4106835	0					
ANR	4106958	Argument	core -> blocksize - n		4106835	1					
ANR	4106959	AdditiveExpression	core -> blocksize - n		4106835	0		-			
ANR	4106960	PtrMemberAccess	core -> blocksize		4106835	0					
ANR	4106961	Identifier	core		4106835	0					
ANR	4106962	Identifier	blocksize		4106835	1					
ANR	4106963	Identifier	n		4106835	1					
ANR	4106964	BreakStatement	break ;	1506:2:40046:40051	4106835	11	True				
ANR	4106965	Label	case 'f' :	1507:1:40054:40062	4106835	12	True				
ANR	4106966	IfStatement	if ( input [ 1 ] == ' ' )		4106835	13					
ANR	4106967	Condition	input [ 1 ] == ' '	1508:6:40078:40092	4106835	0	True				
ANR	4106968	EqualityExpression	input [ 1 ] == ' '		4106835	0		==			
ANR	4106969	ArrayIndexing	input [ 1 ]		4106835	0					
ANR	4106970	Identifier	input		4106835	0					
ANR	4106971	PrimaryExpression	1		4106835	1					
ANR	4106972	PrimaryExpression	' '		4106835	1					
ANR	4106973	CompoundStatement		23:23:540:540	4106835	1					
ANR	4106974	ExpressionStatement	"flag = r_flag_get ( core -> flags , input + 2 )"	1509:3:40100:40142	4106835	0	True				
ANR	4106975	AssignmentExpression	"flag = r_flag_get ( core -> flags , input + 2 )"		4106835	0		=			
ANR	4106976	Identifier	flag		4106835	0					
ANR	4106977	CallExpression	"r_flag_get ( core -> flags , input + 2 )"		4106835	1					
ANR	4106978	Callee	r_flag_get		4106835	0					
ANR	4106979	Identifier	r_flag_get		4106835	0					
ANR	4106980	ArgumentList	core -> flags		4106835	1					
ANR	4106981	Argument	core -> flags		4106835	0					
ANR	4106982	PtrMemberAccess	core -> flags		4106835	0					
ANR	4106983	Identifier	core		4106835	0					
ANR	4106984	Identifier	flags		4106835	1					
ANR	4106985	Argument	input + 2		4106835	1					
ANR	4106986	AdditiveExpression	input + 2		4106835	0		+			
ANR	4106987	Identifier	input		4106835	0					
ANR	4106988	PrimaryExpression	2		4106835	1					
ANR	4106989	IfStatement	if ( flag )		4106835	1					
ANR	4106990	Condition	flag	1510:7:40151:40154	4106835	0	True				
ANR	4106991	Identifier	flag		4106835	0					
ANR	4106992	CompoundStatement		25:13:602:602	4106835	1					
ANR	4106993	ExpressionStatement	"r_core_block_size ( core , flag -> size )"	1511:4:40163:40199	4106835	0	True				
ANR	4106994	CallExpression	"r_core_block_size ( core , flag -> size )"		4106835	0					
ANR	4106995	Callee	r_core_block_size		4106835	0					
ANR	4106996	Identifier	r_core_block_size		4106835	0					
ANR	4106997	ArgumentList	core		4106835	1					
ANR	4106998	Argument	core		4106835	0					
ANR	4106999	Identifier	core		4106835	0					
ANR	4107000	Argument	flag -> size		4106835	1					
ANR	4107001	PtrMemberAccess	flag -> size		4106835	0					
ANR	4107002	Identifier	flag		4106835	0					
ANR	4107003	Identifier	size		4106835	1					
ANR	4107004	ElseStatement	else		4106835	0					
ANR	4107005	CompoundStatement		27:10:656:656	4106835	0					
ANR	4107006	ExpressionStatement	"eprintf ( ""bf: cannot find flag named '%s'\\n"" , input + 2 )"	1513:4:40217:40273	4106835	0	True				
ANR	4107007	CallExpression	"eprintf ( ""bf: cannot find flag named '%s'\\n"" , input + 2 )"		4106835	0					
ANR	4107008	Callee	eprintf		4106835	0					
ANR	4107009	Identifier	eprintf		4106835	0					
ANR	4107010	ArgumentList	"""bf: cannot find flag named '%s'\\n"""		4106835	1					
ANR	4107011	Argument	"""bf: cannot find flag named '%s'\\n"""		4106835	0					
ANR	4107012	PrimaryExpression	"""bf: cannot find flag named '%s'\\n"""		4106835	0					
ANR	4107013	Argument	input + 2		4106835	1					
ANR	4107014	AdditiveExpression	input + 2		4106835	0		+			
ANR	4107015	Identifier	input		4106835	0					
ANR	4107016	PrimaryExpression	2		4106835	1					
ANR	4107017	ElseStatement	else		4106835	0					
ANR	4107018	CompoundStatement		30:9:734:734	4106835	0					
ANR	4107019	ExpressionStatement	"eprintf ( ""Usage: bf [flagname]\\n"" )"	1516:3:40294:40328	4106835	0	True				
ANR	4107020	CallExpression	"eprintf ( ""Usage: bf [flagname]\\n"" )"		4106835	0					
ANR	4107021	Callee	eprintf		4106835	0					
ANR	4107022	Identifier	eprintf		4106835	0					
ANR	4107023	ArgumentList	"""Usage: bf [flagname]\\n"""		4106835	1					
ANR	4107024	Argument	"""Usage: bf [flagname]\\n"""		4106835	0					
ANR	4107025	PrimaryExpression	"""Usage: bf [flagname]\\n"""		4106835	0					
ANR	4107026	BreakStatement	break ;	1518:2:40336:40341	4106835	14	True				
ANR	4107027	Label	case 'j' :	1519:1:40344:40352	4106835	15	True				
ANR	4107028	ExpressionStatement	"r_cons_printf ( ""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"" , core -> blocksize , core -> blocksize_max )"	1520:2:40364:40463	4106835	16	True				
ANR	4107029	CallExpression	"r_cons_printf ( ""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"" , core -> blocksize , core -> blocksize_max )"		4106835	0					
ANR	4107030	Callee	r_cons_printf		4106835	0					
ANR	4107031	Identifier	r_cons_printf		4106835	0					
ANR	4107032	ArgumentList	"""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"""		4106835	1					
ANR	4107033	Argument	"""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"""		4106835	0					
ANR	4107034	PrimaryExpression	"""{\\""blocksize\\"":%d,\\""blocksize_limit\\"":%d}\\n"""		4106835	0					
ANR	4107035	Argument	core -> blocksize		4106835	1					
ANR	4107036	PtrMemberAccess	core -> blocksize		4106835	0					
ANR	4107037	Identifier	core		4106835	0					
ANR	4107038	Identifier	blocksize		4106835	1					
ANR	4107039	Argument	core -> blocksize_max		4106835	2					
ANR	4107040	PtrMemberAccess	core -> blocksize_max		4106835	0					
ANR	4107041	Identifier	core		4106835	0					
ANR	4107042	Identifier	blocksize_max		4106835	1					
ANR	4107043	BreakStatement	break ;	1521:2:40467:40472	4106835	17	True				
ANR	4107044	Label	case '*' :	1522:1:40475:40483	4106835	18	True				
ANR	4107045	ExpressionStatement	"r_cons_printf ( ""b 0x%x\\n"" , core -> blocksize )"	1523:2:40495:40538	4106835	19	True				
ANR	4107046	CallExpression	"r_cons_printf ( ""b 0x%x\\n"" , core -> blocksize )"		4106835	0					
ANR	4107047	Callee	r_cons_printf		4106835	0					
ANR	4107048	Identifier	r_cons_printf		4106835	0					
ANR	4107049	ArgumentList	"""b 0x%x\\n"""		4106835	1					
ANR	4107050	Argument	"""b 0x%x\\n"""		4106835	0					
ANR	4107051	PrimaryExpression	"""b 0x%x\\n"""		4106835	0					
ANR	4107052	Argument	core -> blocksize		4106835	1					
ANR	4107053	PtrMemberAccess	core -> blocksize		4106835	0					
ANR	4107054	Identifier	core		4106835	0					
ANR	4107055	Identifier	blocksize		4106835	1					
ANR	4107056	BreakStatement	break ;	1524:2:40542:40547	4106835	20	True				
ANR	4107057	Label	case '\\0' :	1525:1:40550:40559	4106835	21	True				
ANR	4107058	ExpressionStatement	"r_cons_printf ( ""0x%x\\n"" , core -> blocksize )"	1526:2:40570:40611	4106835	22	True				
ANR	4107059	CallExpression	"r_cons_printf ( ""0x%x\\n"" , core -> blocksize )"		4106835	0					
ANR	4107060	Callee	r_cons_printf		4106835	0					
ANR	4107061	Identifier	r_cons_printf		4106835	0					
ANR	4107062	ArgumentList	"""0x%x\\n"""		4106835	1					
ANR	4107063	Argument	"""0x%x\\n"""		4106835	0					
ANR	4107064	PrimaryExpression	"""0x%x\\n"""		4106835	0					
ANR	4107065	Argument	core -> blocksize		4106835	1					
ANR	4107066	PtrMemberAccess	core -> blocksize		4106835	0					
ANR	4107067	Identifier	core		4106835	0					
ANR	4107068	Identifier	blocksize		4106835	1					
ANR	4107069	BreakStatement	break ;	1527:2:40615:40620	4106835	23	True				
ANR	4107070	Label	case ' ' :	1528:1:40623:40631	4106835	24	True				
ANR	4107071	ExpressionStatement	"r_core_block_size ( core , r_num_math ( core -> num , input ) )"	1529:2:40635:40690	4106835	25	True				
ANR	4107072	CallExpression	"r_core_block_size ( core , r_num_math ( core -> num , input ) )"		4106835	0					
ANR	4107073	Callee	r_core_block_size		4106835	0					
ANR	4107074	Identifier	r_core_block_size		4106835	0					
ANR	4107075	ArgumentList	core		4106835	1					
ANR	4107076	Argument	core		4106835	0					
ANR	4107077	Identifier	core		4106835	0					
ANR	4107078	Argument	"r_num_math ( core -> num , input )"		4106835	1					
ANR	4107079	CallExpression	"r_num_math ( core -> num , input )"		4106835	0					
ANR	4107080	Callee	r_num_math		4106835	0					
ANR	4107081	Identifier	r_num_math		4106835	0					
ANR	4107082	ArgumentList	core -> num		4106835	1					
ANR	4107083	Argument	core -> num		4106835	0					
ANR	4107084	PtrMemberAccess	core -> num		4106835	0					
ANR	4107085	Identifier	core		4106835	0					
ANR	4107086	Identifier	num		4106835	1					
ANR	4107087	Argument	input		4106835	1					
ANR	4107088	Identifier	input		4106835	0					
ANR	4107089	BreakStatement	break ;	1530:2:40694:40699	4106835	26	True				
ANR	4107090	Label	default :	1531:1:40702:40709	4106835	27	True				
ANR	4107091	Identifier	default		4106835	0					
ANR	4107092	Label	case '?' :	1532:1:40712:40720	4106835	28	True				
ANR	4107093	ExpressionStatement	"r_core_cmd_help ( core , help_msg_b )"	1533:2:40732:40766	4106835	29	True				
ANR	4107094	CallExpression	"r_core_cmd_help ( core , help_msg_b )"		4106835	0					
ANR	4107095	Callee	r_core_cmd_help		4106835	0					
ANR	4107096	Identifier	r_core_cmd_help		4106835	0					
ANR	4107097	ArgumentList	core		4106835	1					
ANR	4107098	Argument	core		4106835	0					
ANR	4107099	Identifier	core		4106835	0					
ANR	4107100	Argument	help_msg_b		4106835	1					
ANR	4107101	Identifier	help_msg_b		4106835	0					
ANR	4107102	BreakStatement	break ;	1534:2:40770:40775	4106835	30	True				
ANR	4107103	ReturnStatement	return 0 ;	1536:1:40781:40789	4106835	4	True				
ANR	4107104	PrimaryExpression	0		4106835	0					
ANR	4107105	ReturnType	static int		4106835	1					
ANR	4107106	Identifier	cmd_bsize		4106835	2					
ANR	4107107	ParameterList	"void * data , const char * input"		4106835	3					
ANR	4107108	Parameter	void * data	1486:21:39523:39532	4106835	0	True				
ANR	4107109	ParameterType	void *		4106835	0					
ANR	4107110	Identifier	data		4106835	1					
ANR	4107111	Parameter	const char * input	1486:33:39535:39551	4106835	1	True				
ANR	4107112	ParameterType	const char *		4106835	0					
ANR	4107113	Identifier	input		4106835	1					
ANR	4107114	CFGEntryNode	ENTRY		4106835		True				
ANR	4107115	CFGExitNode	EXIT		4106835		True				
ANR	4107116	Symbol	core -> blocksize		4106835						
ANR	4107117	Symbol	r_flag_get		4106835						
ANR	4107118	Symbol	flag		4106835						
ANR	4107119	Symbol	data		4106835						
ANR	4107120	Symbol	core -> blocksize_max		4106835						
ANR	4107121	Symbol	help_msg_b		4106835						
ANR	4107122	Symbol	* input		4106835						
ANR	4107123	Symbol	* core		4106835						
ANR	4107124	Symbol	core -> flags		4106835						
ANR	4107125	Symbol	n		4106835						
ANR	4107126	Symbol	r_num_math		4106835						
ANR	4107127	Symbol	input		4106835						
ANR	4107128	Symbol	core		4106835						
ANR	4107129	Symbol	core -> num		4106835						
ANR	4107130	Symbol	* flag		4106835						
ANR	4107131	Symbol	flag -> size		4106835						
ANR	4107132	Function	__runMain	1539:0:40794:41004							
ANR	4107133	FunctionDef	"__runMain (RMainCallback cb , const char * arg)"		4107132	0					
ANR	4107134	CompoundStatement		1539:56:40850:41004	4107132	0					
ANR	4107135	IdentifierDeclStatement	char * a = r_str_trim_dup ( arg ) ;	1540:1:40853:40883	4107132	0	True				
ANR	4107136	IdentifierDecl	* a = r_str_trim_dup ( arg )		4107132	0					
ANR	4107137	IdentifierDeclType	char *		4107132	0					
ANR	4107138	Identifier	a		4107132	1					
ANR	4107139	AssignmentExpression	* a = r_str_trim_dup ( arg )		4107132	2		=			
ANR	4107140	Identifier	a		4107132	0					
ANR	4107141	CallExpression	r_str_trim_dup ( arg )		4107132	1					
ANR	4107142	Callee	r_str_trim_dup		4107132	0					
ANR	4107143	Identifier	r_str_trim_dup		4107132	0					
ANR	4107144	ArgumentList	arg		4107132	1					
ANR	4107145	Argument	arg		4107132	0					
ANR	4107146	Identifier	arg		4107132	0					
ANR	4107147	IdentifierDeclStatement	int argc = 0 ;	1541:1:40886:40898	4107132	1	True				
ANR	4107148	IdentifierDecl	argc = 0		4107132	0					
ANR	4107149	IdentifierDeclType	int		4107132	0					
ANR	4107150	Identifier	argc		4107132	1					
ANR	4107151	AssignmentExpression	argc = 0		4107132	2		=			
ANR	4107152	Identifier	argc		4107132	0					
ANR	4107153	PrimaryExpression	0		4107132	1					
ANR	4107154	IdentifierDeclStatement	"char * * args = r_str_argv ( a , & argc ) ;"	1542:1:40901:40936	4107132	2	True				
ANR	4107155	IdentifierDecl	"* * args = r_str_argv ( a , & argc )"		4107132	0					
ANR	4107156	IdentifierDeclType	char * *		4107132	0					
ANR	4107157	Identifier	args		4107132	1					
ANR	4107158	AssignmentExpression	"* * args = r_str_argv ( a , & argc )"		4107132	2		=			
ANR	4107159	Identifier	args		4107132	0					
ANR	4107160	CallExpression	"r_str_argv ( a , & argc )"		4107132	1					
ANR	4107161	Callee	r_str_argv		4107132	0					
ANR	4107162	Identifier	r_str_argv		4107132	0					
ANR	4107163	ArgumentList	a		4107132	1					
ANR	4107164	Argument	a		4107132	0					
ANR	4107165	Identifier	a		4107132	0					
ANR	4107166	Argument	& argc		4107132	1					
ANR	4107167	UnaryOperationExpression	& argc		4107132	0					
ANR	4107168	UnaryOperator	&		4107132	0					
ANR	4107169	Identifier	argc		4107132	1					
ANR	4107170	IdentifierDeclStatement	"int res = cb ( argc , args ) ;"	1543:1:40939:40964	4107132	3	True				
ANR	4107171	IdentifierDecl	"res = cb ( argc , args )"		4107132	0					
ANR	4107172	IdentifierDeclType	int		4107132	0					
ANR	4107173	Identifier	res		4107132	1					
ANR	4107174	AssignmentExpression	"res = cb ( argc , args )"		4107132	2		=			
ANR	4107175	Identifier	res		4107132	0					
ANR	4107176	CallExpression	"cb ( argc , args )"		4107132	1					
ANR	4107177	Callee	cb		4107132	0					
ANR	4107178	Identifier	cb		4107132	0					
ANR	4107179	ArgumentList	argc		4107132	1					
ANR	4107180	Argument	argc		4107132	0					
ANR	4107181	Identifier	argc		4107132	0					
ANR	4107182	Argument	args		4107132	1					
ANR	4107183	Identifier	args		4107132	0					
ANR	4107184	ExpressionStatement	free ( args )	1544:1:40967:40978	4107132	4	True				
ANR	4107185	CallExpression	free ( args )		4107132	0					
ANR	4107186	Callee	free		4107132	0					
ANR	4107187	Identifier	free		4107132	0					
ANR	4107188	ArgumentList	args		4107132	1					
ANR	4107189	Argument	args		4107132	0					
ANR	4107190	Identifier	args		4107132	0					
ANR	4107191	ExpressionStatement	free ( a )	1545:1:40981:40989	4107132	5	True				
ANR	4107192	CallExpression	free ( a )		4107132	0					
ANR	4107193	Callee	free		4107132	0					
ANR	4107194	Identifier	free		4107132	0					
ANR	4107195	ArgumentList	a		4107132	1					
ANR	4107196	Argument	a		4107132	0					
ANR	4107197	Identifier	a		4107132	0					
ANR	4107198	ReturnStatement	return res ;	1546:1:40992:41002	4107132	6	True				
ANR	4107199	Identifier	res		4107132	0					
ANR	4107200	ReturnType	static int		4107132	1					
ANR	4107201	Identifier	__runMain		4107132	2					
ANR	4107202	ParameterList	"RMainCallback cb , const char * arg"		4107132	3					
ANR	4107203	Parameter	RMainCallback cb	1539:21:40815:40830	4107132	0	True				
ANR	4107204	ParameterType	RMainCallback		4107132	0					
ANR	4107205	Identifier	cb		4107132	1					
ANR	4107206	Parameter	const char * arg	1539:39:40833:40847	4107132	1	True				
ANR	4107207	ParameterType	const char *		4107132	0					
ANR	4107208	Identifier	arg		4107132	1					
ANR	4107209	CFGEntryNode	ENTRY		4107132		True				
ANR	4107210	CFGExitNode	EXIT		4107132		True				
ANR	4107211	Symbol	argc		4107132						
ANR	4107212	Symbol	args		4107132						
ANR	4107213	Symbol	a		4107132						
ANR	4107214	Symbol	res		4107132						
ANR	4107215	Symbol	arg		4107132						
ANR	4107216	Symbol	r_str_trim_dup		4107132						
ANR	4107217	Symbol	cb		4107132						
ANR	4107218	Symbol	& argc		4107132						
ANR	4107219	Symbol	r_str_argv		4107132						
ANR	4107220	Function	cmd_r2cmd	1549:0:41007:42285							
ANR	4107221	FunctionDef	"cmd_r2cmd (RCore * core , const char * _input)"		4107220	0					
ANR	4107222	CompoundStatement		1549:55:41062:42285	4107220	0					
ANR	4107223	IdentifierDeclStatement	"char * input = r_str_newf ( ""r%s"" , _input ) ;"	1550:1:41065:41105	4107220	0	True				
ANR	4107224	IdentifierDecl	"* input = r_str_newf ( ""r%s"" , _input )"		4107220	0					
ANR	4107225	IdentifierDeclType	char *		4107220	0					
ANR	4107226	Identifier	input		4107220	1					
ANR	4107227	AssignmentExpression	"* input = r_str_newf ( ""r%s"" , _input )"		4107220	2		=			
ANR	4107228	Identifier	input		4107220	0					
ANR	4107229	CallExpression	"r_str_newf ( ""r%s"" , _input )"		4107220	1					
ANR	4107230	Callee	r_str_newf		4107220	0					
ANR	4107231	Identifier	r_str_newf		4107220	0					
ANR	4107232	ArgumentList	"""r%s"""		4107220	1					
ANR	4107233	Argument	"""r%s"""		4107220	0					
ANR	4107234	PrimaryExpression	"""r%s"""		4107220	0					
ANR	4107235	Argument	_input		4107220	1					
ANR	4107236	Identifier	_input		4107220	0					
ANR	4107237	IdentifierDeclStatement	int rc = 0 ;	1551:1:41108:41118	4107220	1	True				
ANR	4107238	IdentifierDecl	rc = 0		4107220	0					
ANR	4107239	IdentifierDeclType	int		4107220	0					
ANR	4107240	Identifier	rc		4107220	1					
ANR	4107241	AssignmentExpression	rc = 0		4107220	2		=			
ANR	4107242	Identifier	rc		4107220	0					
ANR	4107243	PrimaryExpression	0		4107220	1					
ANR	4107244	IfStatement	"if ( r_str_startswith ( input , ""rax2"" ) )"		4107220	2					
ANR	4107245	Condition	"r_str_startswith ( input , ""rax2"" )"	1552:5:41125:41156	4107220	0	True				
ANR	4107246	CallExpression	"r_str_startswith ( input , ""rax2"" )"		4107220	0					
ANR	4107247	Callee	r_str_startswith		4107220	0					
ANR	4107248	Identifier	r_str_startswith		4107220	0					
ANR	4107249	ArgumentList	input		4107220	1					
ANR	4107250	Argument	input		4107220	0					
ANR	4107251	Identifier	input		4107220	0					
ANR	4107252	Argument	"""rax2"""		4107220	1					
ANR	4107253	PrimaryExpression	"""rax2"""		4107220	0					
ANR	4107254	CompoundStatement		4:39:96:96	4107220	1					
ANR	4107255	ExpressionStatement	"rc = __runMain ( core -> r_main_rax2 , input )"	1553:2:41163:41204	4107220	0	True				
ANR	4107256	AssignmentExpression	"rc = __runMain ( core -> r_main_rax2 , input )"		4107220	0		=			
ANR	4107257	Identifier	rc		4107220	0					
ANR	4107258	CallExpression	"__runMain ( core -> r_main_rax2 , input )"		4107220	1					
ANR	4107259	Callee	__runMain		4107220	0					
ANR	4107260	Identifier	__runMain		4107220	0					
ANR	4107261	ArgumentList	core -> r_main_rax2		4107220	1					
ANR	4107262	Argument	core -> r_main_rax2		4107220	0					
ANR	4107263	PtrMemberAccess	core -> r_main_rax2		4107220	0					
ANR	4107264	Identifier	core		4107220	0					
ANR	4107265	Identifier	r_main_rax2		4107220	1					
ANR	4107266	Argument	input		4107220	1					
ANR	4107267	Identifier	input		4107220	0					
ANR	4107268	ElseStatement	else		4107220	0					
ANR	4107269	IfStatement	"if ( r_str_startswith ( input , ""radare2"" ) )"		4107220	0					
ANR	4107270	Condition	"r_str_startswith ( input , ""radare2"" )"	1554:12:41218:41252	4107220	0	True				
ANR	4107271	CallExpression	"r_str_startswith ( input , ""radare2"" )"		4107220	0					
ANR	4107272	Callee	r_str_startswith		4107220	0					
ANR	4107273	Identifier	r_str_startswith		4107220	0					
ANR	4107274	ArgumentList	input		4107220	1					
ANR	4107275	Argument	input		4107220	0					
ANR	4107276	Identifier	input		4107220	0					
ANR	4107277	Argument	"""radare2"""		4107220	1					
ANR	4107278	PrimaryExpression	"""radare2"""		4107220	0					
ANR	4107279	CompoundStatement		6:49:192:192	4107220	1					
ANR	4107280	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1555:2:41259:41283	4107220	0	True				
ANR	4107281	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		4107220	0					
ANR	4107282	Callee	r_sys_cmdf		4107220	0					
ANR	4107283	Identifier	r_sys_cmdf		4107220	0					
ANR	4107284	ArgumentList	"""%s"""		4107220	1					
ANR	4107285	Argument	"""%s"""		4107220	0					
ANR	4107286	PrimaryExpression	"""%s"""		4107220	0					
ANR	4107287	Argument	input		4107220	1					
ANR	4107288	Identifier	input		4107220	0					
ANR	4107289	ElseStatement	else		4107220	0					
ANR	4107290	IfStatement	"if ( r_str_startswith ( input , ""rasm2"" ) )"		4107220	0					
ANR	4107291	Condition	"r_str_startswith ( input , ""rasm2"" )"	1557:12:41348:41380	4107220	0	True				
ANR	4107292	CallExpression	"r_str_startswith ( input , ""rasm2"" )"		4107220	0					
ANR	4107293	Callee	r_str_startswith		4107220	0					
ANR	4107294	Identifier	r_str_startswith		4107220	0					
ANR	4107295	ArgumentList	input		4107220	1					
ANR	4107296	Argument	input		4107220	0					
ANR	4107297	Identifier	input		4107220	0					
ANR	4107298	Argument	"""rasm2"""		4107220	1					
ANR	4107299	PrimaryExpression	"""rasm2"""		4107220	0					
ANR	4107300	CompoundStatement		9:47:320:320	4107220	1					
ANR	4107301	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1558:2:41387:41411	4107220	0	True				
ANR	4107302	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		4107220	0					
ANR	4107303	Callee	r_sys_cmdf		4107220	0					
ANR	4107304	Identifier	r_sys_cmdf		4107220	0					
ANR	4107305	ArgumentList	"""%s"""		4107220	1					
ANR	4107306	Argument	"""%s"""		4107220	0					
ANR	4107307	PrimaryExpression	"""%s"""		4107220	0					
ANR	4107308	Argument	input		4107220	1					
ANR	4107309	Identifier	input		4107220	0					
ANR	4107310	ElseStatement	else		4107220	0					
ANR	4107311	IfStatement	"if ( r_str_startswith ( input , ""rabin2"" ) )"		4107220	0					
ANR	4107312	Condition	"r_str_startswith ( input , ""rabin2"" )"	1560:12:41474:41507	4107220	0	True				
ANR	4107313	CallExpression	"r_str_startswith ( input , ""rabin2"" )"		4107220	0					
ANR	4107314	Callee	r_str_startswith		4107220	0					
ANR	4107315	Identifier	r_str_startswith		4107220	0					
ANR	4107316	ArgumentList	input		4107220	1					
ANR	4107317	Argument	input		4107220	0					
ANR	4107318	Identifier	input		4107220	0					
ANR	4107319	Argument	"""rabin2"""		4107220	1					
ANR	4107320	PrimaryExpression	"""rabin2"""		4107220	0					
ANR	4107321	CompoundStatement		12:48:447:447	4107220	1					
ANR	4107322	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1561:2:41514:41538	4107220	0	True				
ANR	4107323	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		4107220	0					
ANR	4107324	Callee	r_sys_cmdf		4107220	0					
ANR	4107325	Identifier	r_sys_cmdf		4107220	0					
ANR	4107326	ArgumentList	"""%s"""		4107220	1					
ANR	4107327	Argument	"""%s"""		4107220	0					
ANR	4107328	PrimaryExpression	"""%s"""		4107220	0					
ANR	4107329	Argument	input		4107220	1					
ANR	4107330	Identifier	input		4107220	0					
ANR	4107331	ElseStatement	else		4107220	0					
ANR	4107332	IfStatement	"if ( r_str_startswith ( input , ""ragg2"" ) )"		4107220	0					
ANR	4107333	Condition	"r_str_startswith ( input , ""ragg2"" )"	1563:12:41602:41634	4107220	0	True				
ANR	4107334	CallExpression	"r_str_startswith ( input , ""ragg2"" )"		4107220	0					
ANR	4107335	Callee	r_str_startswith		4107220	0					
ANR	4107336	Identifier	r_str_startswith		4107220	0					
ANR	4107337	ArgumentList	input		4107220	1					
ANR	4107338	Argument	input		4107220	0					
ANR	4107339	Identifier	input		4107220	0					
ANR	4107340	Argument	"""ragg2"""		4107220	1					
ANR	4107341	PrimaryExpression	"""ragg2"""		4107220	0					
ANR	4107342	CompoundStatement		15:47:574:574	4107220	1					
ANR	4107343	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1564:2:41641:41665	4107220	0	True				
ANR	4107344	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		4107220	0					
ANR	4107345	Callee	r_sys_cmdf		4107220	0					
ANR	4107346	Identifier	r_sys_cmdf		4107220	0					
ANR	4107347	ArgumentList	"""%s"""		4107220	1					
ANR	4107348	Argument	"""%s"""		4107220	0					
ANR	4107349	PrimaryExpression	"""%s"""		4107220	0					
ANR	4107350	Argument	input		4107220	1					
ANR	4107351	Identifier	input		4107220	0					
ANR	4107352	ElseStatement	else		4107220	0					
ANR	4107353	IfStatement	"if ( r_str_startswith ( input , ""r2pm"" ) )"		4107220	0					
ANR	4107354	Condition	"r_str_startswith ( input , ""r2pm"" )"	1566:12:41728:41759	4107220	0	True				
ANR	4107355	CallExpression	"r_str_startswith ( input , ""r2pm"" )"		4107220	0					
ANR	4107356	Callee	r_str_startswith		4107220	0					
ANR	4107357	Identifier	r_str_startswith		4107220	0					
ANR	4107358	ArgumentList	input		4107220	1					
ANR	4107359	Argument	input		4107220	0					
ANR	4107360	Identifier	input		4107220	0					
ANR	4107361	Argument	"""r2pm"""		4107220	1					
ANR	4107362	PrimaryExpression	"""r2pm"""		4107220	0					
ANR	4107363	CompoundStatement		18:46:699:699	4107220	1					
ANR	4107364	ExpressionStatement	"r_sys_cmdf ( ""%s"" , input )"	1567:2:41766:41790	4107220	0	True				
ANR	4107365	CallExpression	"r_sys_cmdf ( ""%s"" , input )"		4107220	0					
ANR	4107366	Callee	r_sys_cmdf		4107220	0					
ANR	4107367	Identifier	r_sys_cmdf		4107220	0					
ANR	4107368	ArgumentList	"""%s"""		4107220	1					
ANR	4107369	Argument	"""%s"""		4107220	0					
ANR	4107370	PrimaryExpression	"""%s"""		4107220	0					
ANR	4107371	Argument	input		4107220	1					
ANR	4107372	Identifier	input		4107220	0					
ANR	4107373	ElseStatement	else		4107220	0					
ANR	4107374	IfStatement	"if ( r_str_startswith ( input , ""radiff2"" ) )"		4107220	0					
ANR	4107375	Condition	"r_str_startswith ( input , ""radiff2"" )"	1569:12:41852:41886	4107220	0	True				
ANR	4107376	CallExpression	"r_str_startswith ( input , ""radiff2"" )"		4107220	0					
ANR	4107377	Callee	r_str_startswith		4107220	0					
ANR	4107378	Identifier	r_str_startswith		4107220	0					
ANR	4107379	ArgumentList	input		4107220	1					
ANR	4107380	Argument	input		4107220	0					
ANR	4107381	Identifier	input		4107220	0					
ANR	4107382	Argument	"""radiff2"""		4107220	1					
ANR	4107383	PrimaryExpression	"""radiff2"""		4107220	0					
ANR	4107384	CompoundStatement		21:49:826:826	4107220	1					
ANR	4107385	ExpressionStatement	"rc = __runMain ( core -> r_main_radiff2 , input )"	1570:2:41893:41937	4107220	0	True				
ANR	4107386	AssignmentExpression	"rc = __runMain ( core -> r_main_radiff2 , input )"		4107220	0		=			
ANR	4107387	Identifier	rc		4107220	0					
ANR	4107388	CallExpression	"__runMain ( core -> r_main_radiff2 , input )"		4107220	1					
ANR	4107389	Callee	__runMain		4107220	0					
ANR	4107390	Identifier	__runMain		4107220	0					
ANR	4107391	ArgumentList	core -> r_main_radiff2		4107220	1					
ANR	4107392	Argument	core -> r_main_radiff2		4107220	0					
ANR	4107393	PtrMemberAccess	core -> r_main_radiff2		4107220	0					
ANR	4107394	Identifier	core		4107220	0					
ANR	4107395	Identifier	r_main_radiff2		4107220	1					
ANR	4107396	Argument	input		4107220	1					
ANR	4107397	Identifier	input		4107220	0					
ANR	4107398	ElseStatement	else		4107220	0					
ANR	4107399	CompoundStatement		27:2:1021:1026	4107220	0					
ANR	4107400	IdentifierDeclStatement	"const char * r2cmds [ ] = { ""rax2"" , ""r2pm"" , ""rasm2"" , ""rabin2"" , ""rahash2"" , ""rafind2"" , ""rarun2"" , ""ragg2"" , ""radare2"" , ""r2"" , NULL } ;"	1572:2:41951:42080	4107220	0	True				
ANR	4107401	IdentifierDecl	"* r2cmds [ ] = { ""rax2"" , ""r2pm"" , ""rasm2"" , ""rabin2"" , ""rahash2"" , ""rafind2"" , ""rarun2"" , ""ragg2"" , ""radare2"" , ""r2"" , NULL }"		4107220	0					
ANR	4107402	IdentifierDeclType	const char * [ ]		4107220	0					
ANR	4107403	Identifier	r2cmds		4107220	1					
ANR	4107404	AssignmentExpression	"* r2cmds [ ] = { ""rax2"" , ""r2pm"" , ""rasm2"" , ""rabin2"" , ""rahash2"" , ""rafind2"" , ""rarun2"" , ""ragg2"" , ""radare2"" , ""r2"" , NULL }"		4107220	2		=			
ANR	4107405	Identifier	r2cmds		4107220	0					
ANR	4107406	InitializerList	"""rax2"""		4107220	1					
ANR	4107407	PrimaryExpression	"""rax2"""		4107220	0					
ANR	4107408	PrimaryExpression	"""r2pm"""		4107220	1					
ANR	4107409	PrimaryExpression	"""rasm2"""		4107220	2					
ANR	4107410	PrimaryExpression	"""rabin2"""		4107220	3					
ANR	4107411	PrimaryExpression	"""rahash2"""		4107220	4					
ANR	4107412	PrimaryExpression	"""rafind2"""		4107220	5					
ANR	4107413	PrimaryExpression	"""rarun2"""		4107220	6					
ANR	4107414	PrimaryExpression	"""ragg2"""		4107220	7					
ANR	4107415	PrimaryExpression	"""radare2"""		4107220	8					
ANR	4107416	PrimaryExpression	"""r2"""		4107220	9					
ANR	4107417	Identifier	NULL		4107220	10					
ANR	4107418	IdentifierDeclStatement	int i ;	1575:2:42084:42089	4107220	1	True				
ANR	4107419	IdentifierDecl	i		4107220	0					
ANR	4107420	IdentifierDeclType	int		4107220	0					
ANR	4107421	Identifier	i		4107220	1					
ANR	4107422	ForStatement	for ( i = 0 ; r2cmds [ i ] ; i ++ )		4107220	2					
ANR	4107423	ForInit	i = 0 ;	1576:7:42098:42103	4107220	0	True				
ANR	4107424	AssignmentExpression	i = 0		4107220	0		=			
ANR	4107425	Identifier	i		4107220	0					
ANR	4107426	PrimaryExpression	0		4107220	1					
ANR	4107427	Condition	r2cmds [ i ]	1576:14:42105:42113	4107220	1	True				
ANR	4107428	ArrayIndexing	r2cmds [ i ]		4107220	0					
ANR	4107429	Identifier	r2cmds		4107220	0					
ANR	4107430	Identifier	i		4107220	1					
ANR	4107431	PostIncDecOperationExpression	i ++	1576:25:42116:42118	4107220	2	True				
ANR	4107432	Identifier	i		4107220	0					
ANR	4107433	IncDec	++		4107220	1					
ANR	4107434	CompoundStatement		28:30:1058:1058	4107220	3					
ANR	4107435	IfStatement	"if ( r_str_startswith ( input , r2cmds [ i ] ) )"		4107220	0					
ANR	4107436	Condition	"r_str_startswith ( input , r2cmds [ i ] )"	1577:7:42130:42164	4107220	0	True				
ANR	4107437	CallExpression	"r_str_startswith ( input , r2cmds [ i ] )"		4107220	0					
ANR	4107438	Callee	r_str_startswith		4107220	0					
ANR	4107439	Identifier	r_str_startswith		4107220	0					
ANR	4107440	ArgumentList	input		4107220	1					
ANR	4107441	Argument	input		4107220	0					
ANR	4107442	Identifier	input		4107220	0					
ANR	4107443	Argument	r2cmds [ i ]		4107220	1					
ANR	4107444	ArrayIndexing	r2cmds [ i ]		4107220	0					
ANR	4107445	Identifier	r2cmds		4107220	0					
ANR	4107446	Identifier	i		4107220	1					
ANR	4107447	CompoundStatement		29:44:1104:1104	4107220	1					
ANR	4107448	ExpressionStatement	free ( input )	1578:4:42173:42185	4107220	0	True				
ANR	4107449	CallExpression	free ( input )		4107220	0					
ANR	4107450	Callee	free		4107220	0					
ANR	4107451	Identifier	free		4107220	0					
ANR	4107452	ArgumentList	input		4107220	1					
ANR	4107453	Argument	input		4107220	0					
ANR	4107454	Identifier	input		4107220	0					
ANR	4107455	ReturnStatement	return true ;	1579:4:42191:42202	4107220	1	True				
ANR	4107456	Identifier	true		4107220	0					
ANR	4107457	ReturnStatement	return false ;	1582:2:42215:42227	4107220	3	True				
ANR	4107458	Identifier	false		4107220	0					
ANR	4107459	ExpressionStatement	free ( input )	1584:1:42233:42245	4107220	3	True				
ANR	4107460	CallExpression	free ( input )		4107220	0					
ANR	4107461	Callee	free		4107220	0					
ANR	4107462	Identifier	free		4107220	0					
ANR	4107463	ArgumentList	input		4107220	1					
ANR	4107464	Argument	input		4107220	0					
ANR	4107465	Identifier	input		4107220	0					
ANR	4107466	ExpressionStatement	core -> num -> value = rc	1585:1:42248:42269	4107220	4	True				
ANR	4107467	AssignmentExpression	core -> num -> value = rc		4107220	0		=			
ANR	4107468	PtrMemberAccess	core -> num -> value		4107220	0					
ANR	4107469	PtrMemberAccess	core -> num		4107220	0					
ANR	4107470	Identifier	core		4107220	0					
ANR	4107471	Identifier	num		4107220	1					
ANR	4107472	Identifier	value		4107220	1					
ANR	4107473	Identifier	rc		4107220	1					
ANR	4107474	ReturnStatement	return true ;	1586:1:42272:42283	4107220	5	True				
ANR	4107475	Identifier	true		4107220	0					
ANR	4107476	ReturnType	static bool		4107220	1					
ANR	4107477	Identifier	cmd_r2cmd		4107220	2					
ANR	4107478	ParameterList	"RCore * core , const char * _input"		4107220	3					
ANR	4107479	Parameter	RCore * core	1549:22:41029:41039	4107220	0	True				
ANR	4107480	ParameterType	RCore *		4107220	0					
ANR	4107481	Identifier	core		4107220	1					
ANR	4107482	Parameter	const char * _input	1549:35:41042:41059	4107220	1	True				
ANR	4107483	ParameterType	const char *		4107220	0					
ANR	4107484	Identifier	_input		4107220	1					
ANR	4107485	CFGEntryNode	ENTRY		4107220		True				
ANR	4107486	CFGExitNode	EXIT		4107220		True				
ANR	4107487	Symbol	r_str_startswith		4107220						
ANR	4107488	Symbol	core -> r_main_radiff2		4107220						
ANR	4107489	Symbol	NULL		4107220						
ANR	4107490	Symbol	core -> r_main_rax2		4107220						
ANR	4107491	Symbol	* core		4107220						
ANR	4107492	Symbol	false		4107220						
ANR	4107493	Symbol	i		4107220						
ANR	4107494	Symbol	core -> num -> value		4107220						
ANR	4107495	Symbol	r_str_newf		4107220						
ANR	4107496	Symbol	r2cmds		4107220						
ANR	4107497	Symbol	__runMain		4107220						
ANR	4107498	Symbol	core		4107220						
ANR	4107499	Symbol	input		4107220						
ANR	4107500	Symbol	rc		4107220						
ANR	4107501	Symbol	* i		4107220						
ANR	4107502	Symbol	true		4107220						
ANR	4107503	Symbol	* core -> num		4107220						
ANR	4107504	Symbol	_input		4107220						
ANR	4107505	Symbol	core -> num		4107220						
ANR	4107506	Symbol	* * core		4107220						
ANR	4107507	Symbol	* r2cmds		4107220						
ANR	4107508	Function	cmd_resize	1589:0:42288:44464							
ANR	4107509	FunctionDef	"cmd_resize (void * data , const char * input)"		4107508	0					
ANR	4107510	CompoundStatement		1589:53:42341:44464	4107508	0					
ANR	4107511	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1590:1:42344:42371	4107508	0	True				
ANR	4107512	IdentifierDecl	* core = ( RCore * ) data		4107508	0					
ANR	4107513	IdentifierDeclType	RCore *		4107508	0					
ANR	4107514	Identifier	core		4107508	1					
ANR	4107515	AssignmentExpression	* core = ( RCore * ) data		4107508	2		=			
ANR	4107516	Identifier	core		4107508	0					
ANR	4107517	CastExpression	( RCore * ) data		4107508	1					
ANR	4107518	CastTarget	RCore *		4107508	0					
ANR	4107519	Identifier	data		4107508	1					
ANR	4107520	IdentifierDeclStatement	ut64 newsize = 0 ;	1591:1:42374:42390	4107508	1	True				
ANR	4107521	IdentifierDecl	newsize = 0		4107508	0					
ANR	4107522	IdentifierDeclType	ut64		4107508	0					
ANR	4107523	Identifier	newsize		4107508	1					
ANR	4107524	AssignmentExpression	newsize = 0		4107508	2		=			
ANR	4107525	Identifier	newsize		4107508	0					
ANR	4107526	PrimaryExpression	0		4107508	1					
ANR	4107527	IdentifierDeclStatement	st64 delta = 0 ;	1592:1:42393:42407	4107508	2	True				
ANR	4107528	IdentifierDecl	delta = 0		4107508	0					
ANR	4107529	IdentifierDeclType	st64		4107508	0					
ANR	4107530	Identifier	delta		4107508	1					
ANR	4107531	AssignmentExpression	delta = 0		4107508	2		=			
ANR	4107532	Identifier	delta		4107508	0					
ANR	4107533	PrimaryExpression	0		4107508	1					
ANR	4107534	IdentifierDeclStatement	"int grow , ret ;"	1593:1:42410:42423	4107508	3	True				
ANR	4107535	IdentifierDecl	grow		4107508	0					
ANR	4107536	IdentifierDeclType	int		4107508	0					
ANR	4107537	Identifier	grow		4107508	1					
ANR	4107538	IdentifierDecl	ret		4107508	1					
ANR	4107539	IdentifierDeclType	int		4107508	0					
ANR	4107540	Identifier	ret		4107508	1					
ANR	4107541	IfStatement	"if ( cmd_r2cmd ( core , input ) )"		4107508	4					
ANR	4107542	Condition	"cmd_r2cmd ( core , input )"	1595:5:42431:42453	4107508	0	True				
ANR	4107543	CallExpression	"cmd_r2cmd ( core , input )"		4107508	0					
ANR	4107544	Callee	cmd_r2cmd		4107508	0					
ANR	4107545	Identifier	cmd_r2cmd		4107508	0					
ANR	4107546	ArgumentList	core		4107508	1					
ANR	4107547	Argument	core		4107508	0					
ANR	4107548	Identifier	core		4107508	0					
ANR	4107549	Argument	input		4107508	1					
ANR	4107550	Identifier	input		4107508	0					
ANR	4107551	CompoundStatement		7:30:114:114	4107508	1					
ANR	4107552	ReturnStatement	return true ;	1596:2:42460:42471	4107508	0	True				
ANR	4107553	Identifier	true		4107508	0					
ANR	4107554	IdentifierDeclStatement	"ut64 oldsize = ( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0 ;"	1599:1:42478:42550	4107508	5	True				
ANR	4107555	IdentifierDecl	"oldsize = ( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0"		4107508	0					
ANR	4107556	IdentifierDeclType	ut64		4107508	0					
ANR	4107557	Identifier	oldsize		4107508	1					
ANR	4107558	AssignmentExpression	"oldsize = ( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0"		4107508	2		=			
ANR	4107559	Identifier	oldsize		4107508	0					
ANR	4107560	ConditionalExpression	"( core -> file ) ? r_io_fd_size ( core -> io , core -> file -> fd ) : 0"		4107508	1					
ANR	4107561	Condition	core -> file		4107508	0					
ANR	4107562	PtrMemberAccess	core -> file		4107508	0					
ANR	4107563	Identifier	core		4107508	0					
ANR	4107564	Identifier	file		4107508	1					
ANR	4107565	CallExpression	"r_io_fd_size ( core -> io , core -> file -> fd )"		4107508	1					
ANR	4107566	Callee	r_io_fd_size		4107508	0					
ANR	4107567	Identifier	r_io_fd_size		4107508	0					
ANR	4107568	ArgumentList	core -> io		4107508	1					
ANR	4107569	Argument	core -> io		4107508	0					
ANR	4107570	PtrMemberAccess	core -> io		4107508	0					
ANR	4107571	Identifier	core		4107508	0					
ANR	4107572	Identifier	io		4107508	1					
ANR	4107573	Argument	core -> file -> fd		4107508	1					
ANR	4107574	PtrMemberAccess	core -> file -> fd		4107508	0					
ANR	4107575	PtrMemberAccess	core -> file		4107508	0					
ANR	4107576	Identifier	core		4107508	0					
ANR	4107577	Identifier	file		4107508	1					
ANR	4107578	Identifier	fd		4107508	1					
ANR	4107579	PrimaryExpression	0		4107508	2					
ANR	4107580	SwitchStatement	switch ( * input )		4107508	6					
ANR	4107581	Condition	* input	1600:9:42561:42566	4107508	0	True				
ANR	4107582	UnaryOperationExpression	* input		4107508	0					
ANR	4107583	UnaryOperator	*		4107508	0					
ANR	4107584	Identifier	input		4107508	1					
ANR	4107585	CompoundStatement		12:17:227:227	4107508	1					
ANR	4107586	Label	case 'a' :	1601:1:42572:42580	4107508	0	True				
ANR	4107587	IfStatement	"if ( r_str_startswith ( input , ""adare2"" ) )"		4107508	1					
ANR	4107588	Condition	"r_str_startswith ( input , ""adare2"" )"	1602:6:42598:42631	4107508	0	True				
ANR	4107589	CallExpression	"r_str_startswith ( input , ""adare2"" )"		4107508	0					
ANR	4107590	Callee	r_str_startswith		4107508	0					
ANR	4107591	Identifier	r_str_startswith		4107508	0					
ANR	4107592	ArgumentList	input		4107508	1					
ANR	4107593	Argument	input		4107508	0					
ANR	4107594	Identifier	input		4107508	0					
ANR	4107595	Argument	"""adare2"""		4107508	1					
ANR	4107596	PrimaryExpression	"""adare2"""		4107508	0					
ANR	4107597	CompoundStatement		14:42:292:292	4107508	1					
ANR	4107598	ExpressionStatement	"__runMain ( core -> r_main_radare2 , input - 1 )"	1603:3:42639:42682	4107508	0	True				
ANR	4107599	CallExpression	"__runMain ( core -> r_main_radare2 , input - 1 )"		4107508	0					
ANR	4107600	Callee	__runMain		4107508	0					
ANR	4107601	Identifier	__runMain		4107508	0					
ANR	4107602	ArgumentList	core -> r_main_radare2		4107508	1					
ANR	4107603	Argument	core -> r_main_radare2		4107508	0					
ANR	4107604	PtrMemberAccess	core -> r_main_radare2		4107508	0					
ANR	4107605	Identifier	core		4107508	0					
ANR	4107606	Identifier	r_main_radare2		4107508	1					
ANR	4107607	Argument	input - 1		4107508	1					
ANR	4107608	AdditiveExpression	input - 1		4107508	0		-			
ANR	4107609	Identifier	input		4107508	0					
ANR	4107610	PrimaryExpression	1		4107508	1					
ANR	4107611	ReturnStatement	return true ;	1605:2:42691:42702	4107508	2	True				
ANR	4107612	Identifier	true		4107508	0					
ANR	4107613	Label	case '2' :	1606:1:42705:42713	4107508	3	True				
ANR	4107614	ExpressionStatement	"r_sys_cmdf ( ""radare%s"" , input )"	1608:2:42817:42847	4107508	4	True				
ANR	4107615	CallExpression	"r_sys_cmdf ( ""radare%s"" , input )"		4107508	0					
ANR	4107616	Callee	r_sys_cmdf		4107508	0					
ANR	4107617	Identifier	r_sys_cmdf		4107508	0					
ANR	4107618	ArgumentList	"""radare%s"""		4107508	1					
ANR	4107619	Argument	"""radare%s"""		4107508	0					
ANR	4107620	PrimaryExpression	"""radare%s"""		4107508	0					
ANR	4107621	Argument	input		4107508	1					
ANR	4107622	Identifier	input		4107508	0					
ANR	4107623	ReturnStatement	return true ;	1609:2:42851:42862	4107508	5	True				
ANR	4107624	Identifier	true		4107508	0					
ANR	4107625	Label	case 'm' :	1610:1:42865:42873	4107508	6	True				
ANR	4107626	IfStatement	if ( input [ 1 ] == ' ' )		4107508	7					
ANR	4107627	Condition	input [ 1 ] == ' '	1611:6:42889:42903	4107508	0	True				
ANR	4107628	EqualityExpression	input [ 1 ] == ' '		4107508	0		==			
ANR	4107629	ArrayIndexing	input [ 1 ]		4107508	0					
ANR	4107630	Identifier	input		4107508	0					
ANR	4107631	PrimaryExpression	1		4107508	1					
ANR	4107632	PrimaryExpression	' '		4107508	1					
ANR	4107633	CompoundStatement		24:3:569:613	4107508	1					
ANR	4107634	IdentifierDeclStatement	const char * file = r_str_trim_ro ( input + 2 ) ;	1612:3:42911:42955	4107508	0	True				
ANR	4107635	IdentifierDecl	* file = r_str_trim_ro ( input + 2 )		4107508	0					
ANR	4107636	IdentifierDeclType	const char *		4107508	0					
ANR	4107637	Identifier	file		4107508	1					
ANR	4107638	AssignmentExpression	* file = r_str_trim_ro ( input + 2 )		4107508	2		=			
ANR	4107639	Identifier	file		4107508	0					
ANR	4107640	CallExpression	r_str_trim_ro ( input + 2 )		4107508	1					
ANR	4107641	Callee	r_str_trim_ro		4107508	0					
ANR	4107642	Identifier	r_str_trim_ro		4107508	0					
ANR	4107643	ArgumentList	input + 2		4107508	1					
ANR	4107644	Argument	input + 2		4107508	0					
ANR	4107645	AdditiveExpression	input + 2		4107508	0		+			
ANR	4107646	Identifier	input		4107508	0					
ANR	4107647	PrimaryExpression	2		4107508	1					
ANR	4107648	IfStatement	if ( * file == '$' )		4107508	1					
ANR	4107649	Condition	* file == '$'	1613:7:42964:42975	4107508	0	True				
ANR	4107650	EqualityExpression	* file == '$'		4107508	0		==			
ANR	4107651	UnaryOperationExpression	* file		4107508	0					
ANR	4107652	UnaryOperator	*		4107508	0					
ANR	4107653	Identifier	file		4107508	1					
ANR	4107654	PrimaryExpression	'$'		4107508	1					
ANR	4107655	CompoundStatement		25:21:636:636	4107508	1					
ANR	4107656	ExpressionStatement	"r_cmd_alias_del ( core -> rcmd , file )"	1614:4:42984:43018	4107508	0	True				
ANR	4107657	CallExpression	"r_cmd_alias_del ( core -> rcmd , file )"		4107508	0					
ANR	4107658	Callee	r_cmd_alias_del		4107508	0					
ANR	4107659	Identifier	r_cmd_alias_del		4107508	0					
ANR	4107660	ArgumentList	core -> rcmd		4107508	1					
ANR	4107661	Argument	core -> rcmd		4107508	0					
ANR	4107662	PtrMemberAccess	core -> rcmd		4107508	0					
ANR	4107663	Identifier	core		4107508	0					
ANR	4107664	Identifier	rcmd		4107508	1					
ANR	4107665	Argument	file		4107508	1					
ANR	4107666	Identifier	file		4107508	0					
ANR	4107667	ElseStatement	else		4107508	0					
ANR	4107668	CompoundStatement		27:10:688:688	4107508	0					
ANR	4107669	ExpressionStatement	r_file_rm ( file )	1616:4:43036:43052	4107508	0	True				
ANR	4107670	CallExpression	r_file_rm ( file )		4107508	0					
ANR	4107671	Callee	r_file_rm		4107508	0					
ANR	4107672	Identifier	r_file_rm		4107508	0					
ANR	4107673	ArgumentList	file		4107508	1					
ANR	4107674	Argument	file		4107508	0					
ANR	4107675	Identifier	file		4107508	0					
ANR	4107676	ElseStatement	else		4107508	0					
ANR	4107677	CompoundStatement		30:9:726:726	4107508	0					
ANR	4107678	ExpressionStatement	"eprintf ( ""Usage: rm [file]   # removes a file\\n"" )"	1619:3:43073:43122	4107508	0	True				
ANR	4107679	CallExpression	"eprintf ( ""Usage: rm [file]   # removes a file\\n"" )"		4107508	0					
ANR	4107680	Callee	eprintf		4107508	0					
ANR	4107681	Identifier	eprintf		4107508	0					
ANR	4107682	ArgumentList	"""Usage: rm [file]   # removes a file\\n"""		4107508	1					
ANR	4107683	Argument	"""Usage: rm [file]   # removes a file\\n"""		4107508	0					
ANR	4107684	PrimaryExpression	"""Usage: rm [file]   # removes a file\\n"""		4107508	0					
ANR	4107685	ReturnStatement	return true ;	1621:2:43130:43141	4107508	8	True				
ANR	4107686	Identifier	true		4107508	0					
ANR	4107687	Label	case '\\0' :	1622:1:43144:43153	4107508	9	True				
ANR	4107688	IfStatement	if ( core -> file )		4107508	10					
ANR	4107689	Condition	core -> file	1623:6:43161:43170	4107508	0	True				
ANR	4107690	PtrMemberAccess	core -> file		4107508	0					
ANR	4107691	Identifier	core		4107508	0					
ANR	4107692	Identifier	file		4107508	1					
ANR	4107693	CompoundStatement		35:18:831:831	4107508	1					
ANR	4107694	IfStatement	if ( oldsize != - 1 )		4107508	0					
ANR	4107695	Condition	oldsize != - 1	1624:7:43182:43194	4107508	0	True				
ANR	4107696	EqualityExpression	oldsize != - 1		4107508	0		!=			
ANR	4107697	Identifier	oldsize		4107508	0					
ANR	4107698	UnaryOperationExpression	- 1		4107508	1					
ANR	4107699	UnaryOperator	-		4107508	0					
ANR	4107700	PrimaryExpression	1		4107508	1					
ANR	4107701	CompoundStatement		36:22:855:855	4107508	1					
ANR	4107702	Statement	r_cons_printf	1625:4:43203:43215	4107508	0	True				
ANR	4107703	Statement	(	1625:18:43217:43217	4107508	1	True				
ANR	4107704	Statement	"""%"""	1625:19:43218:43220	4107508	2	True				
ANR	4107705	Statement	PFMT64d	1625:22:43221:43227	4107508	3	True				
ANR	4107706	Statement	"""\\n"""	1625:29:43228:43231	4107508	4	True				
ANR	4107707	Statement	","	1625:33:43232:43232	4107508	5	True				
ANR	4107708	Statement	oldsize	1625:35:43234:43240	4107508	6	True				
ANR	4107709	Statement	)	1625:42:43241:43241	4107508	7	True				
ANR	4107710	ExpressionStatement		1625:43:43242:43242	4107508	8	True				
ANR	4107711	ReturnStatement	return true ;	1628:2:43255:43266	4107508	11	True				
ANR	4107712	Identifier	true		4107508	0					
ANR	4107713	Label	case 'h' :	1629:1:43269:43277	4107508	12	True				
ANR	4107714	IfStatement	if ( core -> file )		4107508	13					
ANR	4107715	Condition	core -> file	1630:6:43285:43294	4107508	0	True				
ANR	4107716	PtrMemberAccess	core -> file		4107508	0					
ANR	4107717	Identifier	core		4107508	0					
ANR	4107718	Identifier	file		4107508	1					
ANR	4107719	CompoundStatement		42:18:955:955	4107508	1					
ANR	4107720	IfStatement	if ( oldsize != - 1 )		4107508	0					
ANR	4107721	Condition	oldsize != - 1	1631:7:43306:43318	4107508	0	True				
ANR	4107722	EqualityExpression	oldsize != - 1		4107508	0		!=			
ANR	4107723	Identifier	oldsize		4107508	0					
ANR	4107724	UnaryOperationExpression	- 1		4107508	1					
ANR	4107725	UnaryOperator	-		4107508	0					
ANR	4107726	PrimaryExpression	1		4107508	1					
ANR	4107727	CompoundStatement		44:4:985:1000	4107508	1					
ANR	4107728	IdentifierDeclStatement	char humansz [ 8 ] ;	1632:4:43327:43342	4107508	0	True				
ANR	4107729	IdentifierDecl	humansz [ 8 ]		4107508	0					
ANR	4107730	IdentifierDeclType	char [ 8 ]		4107508	0					
ANR	4107731	Identifier	humansz		4107508	1					
ANR	4107732	PrimaryExpression	8		4107508	2					
ANR	4107733	ExpressionStatement	"r_num_units ( humansz , sizeof ( humansz ) , oldsize )"	1633:4:43348:43396	4107508	1	True				
ANR	4107734	CallExpression	"r_num_units ( humansz , sizeof ( humansz ) , oldsize )"		4107508	0					
ANR	4107735	Callee	r_num_units		4107508	0					
ANR	4107736	Identifier	r_num_units		4107508	0					
ANR	4107737	ArgumentList	humansz		4107508	1					
ANR	4107738	Argument	humansz		4107508	0					
ANR	4107739	Identifier	humansz		4107508	0					
ANR	4107740	Argument	sizeof ( humansz )		4107508	1					
ANR	4107741	SizeofExpression	sizeof ( humansz )		4107508	0					
ANR	4107742	Sizeof	sizeof		4107508	0					
ANR	4107743	SizeofOperand	humansz		4107508	1					
ANR	4107744	Argument	oldsize		4107508	2					
ANR	4107745	Identifier	oldsize		4107508	0					
ANR	4107746	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , humansz )"	1634:4:43402:43433	4107508	2	True				
ANR	4107747	CallExpression	"r_cons_printf ( ""%s\\n"" , humansz )"		4107508	0					
ANR	4107748	Callee	r_cons_printf		4107508	0					
ANR	4107749	Identifier	r_cons_printf		4107508	0					
ANR	4107750	ArgumentList	"""%s\\n"""		4107508	1					
ANR	4107751	Argument	"""%s\\n"""		4107508	0					
ANR	4107752	PrimaryExpression	"""%s\\n"""		4107508	0					
ANR	4107753	Argument	humansz		4107508	1					
ANR	4107754	Identifier	humansz		4107508	0					
ANR	4107755	ReturnStatement	return true ;	1637:2:43446:43457	4107508	14	True				
ANR	4107756	Identifier	true		4107508	0					
ANR	4107757	Label	case '+' :	1638:1:43460:43468	4107508	15	True				
ANR	4107758	Label	case '-' :	1639:1:43479:43487	4107508	16	True				
ANR	4107759	ExpressionStatement	"delta = ( st64 ) r_num_math ( core -> num , input )"	1640:2:43499:43542	4107508	17	True				
ANR	4107760	AssignmentExpression	"delta = ( st64 ) r_num_math ( core -> num , input )"		4107508	0		=			
ANR	4107761	Identifier	delta		4107508	0					
ANR	4107762	CastExpression	"( st64 ) r_num_math ( core -> num , input )"		4107508	1					
ANR	4107763	CastTarget	st64		4107508	0					
ANR	4107764	CallExpression	"r_num_math ( core -> num , input )"		4107508	1					
ANR	4107765	Callee	r_num_math		4107508	0					
ANR	4107766	Identifier	r_num_math		4107508	0					
ANR	4107767	ArgumentList	core -> num		4107508	1					
ANR	4107768	Argument	core -> num		4107508	0					
ANR	4107769	PtrMemberAccess	core -> num		4107508	0					
ANR	4107770	Identifier	core		4107508	0					
ANR	4107771	Identifier	num		4107508	1					
ANR	4107772	Argument	input		4107508	1					
ANR	4107773	Identifier	input		4107508	0					
ANR	4107774	ExpressionStatement	newsize = oldsize + delta	1641:2:43546:43571	4107508	18	True				
ANR	4107775	AssignmentExpression	newsize = oldsize + delta		4107508	0		=			
ANR	4107776	Identifier	newsize		4107508	0					
ANR	4107777	AdditiveExpression	oldsize + delta		4107508	1		+			
ANR	4107778	Identifier	oldsize		4107508	0					
ANR	4107779	Identifier	delta		4107508	1					
ANR	4107780	BreakStatement	break ;	1642:2:43575:43580	4107508	19	True				
ANR	4107781	Label	case ' ' :	1643:1:43583:43591	4107508	20	True				
ANR	4107782	ExpressionStatement	"newsize = r_num_math ( core -> num , input + 1 )"	1644:2:43603:43646	4107508	21	True				
ANR	4107783	AssignmentExpression	"newsize = r_num_math ( core -> num , input + 1 )"		4107508	0		=			
ANR	4107784	Identifier	newsize		4107508	0					
ANR	4107785	CallExpression	"r_num_math ( core -> num , input + 1 )"		4107508	1					
ANR	4107786	Callee	r_num_math		4107508	0					
ANR	4107787	Identifier	r_num_math		4107508	0					
ANR	4107788	ArgumentList	core -> num		4107508	1					
ANR	4107789	Argument	core -> num		4107508	0					
ANR	4107790	PtrMemberAccess	core -> num		4107508	0					
ANR	4107791	Identifier	core		4107508	0					
ANR	4107792	Identifier	num		4107508	1					
ANR	4107793	Argument	input + 1		4107508	1					
ANR	4107794	AdditiveExpression	input + 1		4107508	0		+			
ANR	4107795	Identifier	input		4107508	0					
ANR	4107796	PrimaryExpression	1		4107508	1					
ANR	4107797	IfStatement	if ( newsize == 0 )		4107508	22					
ANR	4107798	Condition	newsize == 0	1645:6:43654:43665	4107508	0	True				
ANR	4107799	EqualityExpression	newsize == 0		4107508	0		==			
ANR	4107800	Identifier	newsize		4107508	0					
ANR	4107801	PrimaryExpression	0		4107508	1					
ANR	4107802	CompoundStatement		57:20:1326:1326	4107508	1					
ANR	4107803	IfStatement	if ( input [ 1 ] == '0' )		4107508	0					
ANR	4107804	Condition	input [ 1 ] == '0'	1646:7:43677:43691	4107508	0	True				
ANR	4107805	EqualityExpression	input [ 1 ] == '0'		4107508	0		==			
ANR	4107806	ArrayIndexing	input [ 1 ]		4107508	0					
ANR	4107807	Identifier	input		4107508	0					
ANR	4107808	PrimaryExpression	1		4107508	1					
ANR	4107809	PrimaryExpression	'0'		4107508	1					
ANR	4107810	CompoundStatement		58:24:1352:1352	4107508	1					
ANR	4107811	ExpressionStatement	"eprintf ( ""Invalid size\\n"" )"	1647:4:43700:43726	4107508	0	True				
ANR	4107812	CallExpression	"eprintf ( ""Invalid size\\n"" )"		4107508	0					
ANR	4107813	Callee	eprintf		4107508	0					
ANR	4107814	Identifier	eprintf		4107508	0					
ANR	4107815	ArgumentList	"""Invalid size\\n"""		4107508	1					
ANR	4107816	Argument	"""Invalid size\\n"""		4107508	0					
ANR	4107817	PrimaryExpression	"""Invalid size\\n"""		4107508	0					
ANR	4107818	ReturnStatement	return false ;	1649:3:43736:43748	4107508	1	True				
ANR	4107819	Identifier	false		4107508	0					
ANR	4107820	BreakStatement	break ;	1651:2:43756:43761	4107508	23	True				
ANR	4107821	Label	case 'e' :	1652:1:43764:43772	4107508	24	True				
ANR	4107822	ExpressionStatement	"write ( 1 , Color_RESET_TERMINAL , strlen ( Color_RESET_TERMINAL ) )"	1653:2:43776:43838	4107508	25	True				
ANR	4107823	CallExpression	"write ( 1 , Color_RESET_TERMINAL , strlen ( Color_RESET_TERMINAL ) )"		4107508	0					
ANR	4107824	Callee	write		4107508	0					
ANR	4107825	Identifier	write		4107508	0					
ANR	4107826	ArgumentList	1		4107508	1					
ANR	4107827	Argument	1		4107508	0					
ANR	4107828	PrimaryExpression	1		4107508	0					
ANR	4107829	Argument	Color_RESET_TERMINAL		4107508	1					
ANR	4107830	Identifier	Color_RESET_TERMINAL		4107508	0					
ANR	4107831	Argument	strlen ( Color_RESET_TERMINAL )		4107508	2					
ANR	4107832	CallExpression	strlen ( Color_RESET_TERMINAL )		4107508	0					
ANR	4107833	Callee	strlen		4107508	0					
ANR	4107834	Identifier	strlen		4107508	0					
ANR	4107835	ArgumentList	Color_RESET_TERMINAL		4107508	1					
ANR	4107836	Argument	Color_RESET_TERMINAL		4107508	0					
ANR	4107837	Identifier	Color_RESET_TERMINAL		4107508	0					
ANR	4107838	ReturnStatement	return true ;	1654:2:43842:43853	4107508	26	True				
ANR	4107839	Identifier	true		4107508	0					
ANR	4107840	Label	case '?' :	1655:1:43856:43864	4107508	27	True				
ANR	4107841	Label	default :	1656:1:43875:43882	4107508	28	True				
ANR	4107842	Identifier	default		4107508	0					
ANR	4107843	ExpressionStatement	"r_core_cmd_help ( core , help_msg_r )"	1657:2:43886:43920	4107508	29	True				
ANR	4107844	CallExpression	"r_core_cmd_help ( core , help_msg_r )"		4107508	0					
ANR	4107845	Callee	r_core_cmd_help		4107508	0					
ANR	4107846	Identifier	r_core_cmd_help		4107508	0					
ANR	4107847	ArgumentList	core		4107508	1					
ANR	4107848	Argument	core		4107508	0					
ANR	4107849	Identifier	core		4107508	0					
ANR	4107850	Argument	help_msg_r		4107508	1					
ANR	4107851	Identifier	help_msg_r		4107508	0					
ANR	4107852	ReturnStatement	return true ;	1658:2:43924:43935	4107508	30	True				
ANR	4107853	Identifier	true		4107508	0					
ANR	4107854	ExpressionStatement	grow = ( newsize > oldsize )	1661:1:43942:43968	4107508	7	True				
ANR	4107855	AssignmentExpression	grow = ( newsize > oldsize )		4107508	0		=			
ANR	4107856	Identifier	grow		4107508	0					
ANR	4107857	RelationalExpression	newsize > oldsize		4107508	1		>			
ANR	4107858	Identifier	newsize		4107508	0					
ANR	4107859	Identifier	oldsize		4107508	1					
ANR	4107860	IfStatement	if ( grow )		4107508	8					
ANR	4107861	Condition	grow	1662:5:43975:43978	4107508	0	True				
ANR	4107862	Identifier	grow		4107508	0					
ANR	4107863	CompoundStatement		74:11:1639:1639	4107508	1					
ANR	4107864	ExpressionStatement	"ret = r_io_resize ( core -> io , newsize )"	1663:2:43985:44022	4107508	0	True				
ANR	4107865	AssignmentExpression	"ret = r_io_resize ( core -> io , newsize )"		4107508	0		=			
ANR	4107866	Identifier	ret		4107508	0					
ANR	4107867	CallExpression	"r_io_resize ( core -> io , newsize )"		4107508	1					
ANR	4107868	Callee	r_io_resize		4107508	0					
ANR	4107869	Identifier	r_io_resize		4107508	0					
ANR	4107870	ArgumentList	core -> io		4107508	1					
ANR	4107871	Argument	core -> io		4107508	0					
ANR	4107872	PtrMemberAccess	core -> io		4107508	0					
ANR	4107873	Identifier	core		4107508	0					
ANR	4107874	Identifier	io		4107508	1					
ANR	4107875	Argument	newsize		4107508	1					
ANR	4107876	Identifier	newsize		4107508	0					
ANR	4107877	IfStatement	if ( ret < 1 )		4107508	1					
ANR	4107878	Condition	ret < 1	1664:6:44030:44036	4107508	0	True				
ANR	4107879	RelationalExpression	ret < 1		4107508	0		<			
ANR	4107880	Identifier	ret		4107508	0					
ANR	4107881	PrimaryExpression	1		4107508	1					
ANR	4107882	CompoundStatement		76:15:1697:1697	4107508	1					
ANR	4107883	ExpressionStatement	"eprintf ( ""r_io_resize: cannot resize\\n"" )"	1665:3:44044:44084	4107508	0	True				
ANR	4107884	CallExpression	"eprintf ( ""r_io_resize: cannot resize\\n"" )"		4107508	0					
ANR	4107885	Callee	eprintf		4107508	0					
ANR	4107886	Identifier	eprintf		4107508	0					
ANR	4107887	ArgumentList	"""r_io_resize: cannot resize\\n"""		4107508	1					
ANR	4107888	Argument	"""r_io_resize: cannot resize\\n"""		4107508	0					
ANR	4107889	PrimaryExpression	"""r_io_resize: cannot resize\\n"""		4107508	0					
ANR	4107890	IfStatement	if ( delta && core -> offset < newsize )		4107508	9					
ANR	4107891	Condition	delta && core -> offset < newsize	1668:5:44098:44128	4107508	0	True				
ANR	4107892	AndExpression	delta && core -> offset < newsize		4107508	0		&&			
ANR	4107893	Identifier	delta		4107508	0					
ANR	4107894	RelationalExpression	core -> offset < newsize		4107508	1		<			
ANR	4107895	PtrMemberAccess	core -> offset		4107508	0					
ANR	4107896	Identifier	core		4107508	0					
ANR	4107897	Identifier	offset		4107508	1					
ANR	4107898	Identifier	newsize		4107508	1					
ANR	4107899	CompoundStatement		80:38:1789:1789	4107508	1					
ANR	4107900	ExpressionStatement	"r_io_shift ( core -> io , core -> offset , grow ? newsize : oldsize , delta )"	1669:2:44135:44199	4107508	0	True				
ANR	4107901	CallExpression	"r_io_shift ( core -> io , core -> offset , grow ? newsize : oldsize , delta )"		4107508	0					
ANR	4107902	Callee	r_io_shift		4107508	0					
ANR	4107903	Identifier	r_io_shift		4107508	0					
ANR	4107904	ArgumentList	core -> io		4107508	1					
ANR	4107905	Argument	core -> io		4107508	0					
ANR	4107906	PtrMemberAccess	core -> io		4107508	0					
ANR	4107907	Identifier	core		4107508	0					
ANR	4107908	Identifier	io		4107508	1					
ANR	4107909	Argument	core -> offset		4107508	1					
ANR	4107910	PtrMemberAccess	core -> offset		4107508	0					
ANR	4107911	Identifier	core		4107508	0					
ANR	4107912	Identifier	offset		4107508	1					
ANR	4107913	Argument	grow ? newsize : oldsize		4107508	2					
ANR	4107914	ConditionalExpression	grow ? newsize : oldsize		4107508	0					
ANR	4107915	Condition	grow		4107508	0					
ANR	4107916	Identifier	grow		4107508	0					
ANR	4107917	Identifier	newsize		4107508	1					
ANR	4107918	Identifier	oldsize		4107508	2					
ANR	4107919	Argument	delta		4107508	3					
ANR	4107920	Identifier	delta		4107508	0					
ANR	4107921	IfStatement	if ( ! grow )		4107508	10					
ANR	4107922	Condition	! grow	1671:5:44209:44213	4107508	0	True				
ANR	4107923	UnaryOperationExpression	! grow		4107508	0					
ANR	4107924	UnaryOperator	!		4107508	0					
ANR	4107925	Identifier	grow		4107508	1					
ANR	4107926	CompoundStatement		83:12:1874:1874	4107508	1					
ANR	4107927	ExpressionStatement	"ret = r_io_resize ( core -> io , newsize )"	1672:2:44220:44257	4107508	0	True				
ANR	4107928	AssignmentExpression	"ret = r_io_resize ( core -> io , newsize )"		4107508	0		=			
ANR	4107929	Identifier	ret		4107508	0					
ANR	4107930	CallExpression	"r_io_resize ( core -> io , newsize )"		4107508	1					
ANR	4107931	Callee	r_io_resize		4107508	0					
ANR	4107932	Identifier	r_io_resize		4107508	0					
ANR	4107933	ArgumentList	core -> io		4107508	1					
ANR	4107934	Argument	core -> io		4107508	0					
ANR	4107935	PtrMemberAccess	core -> io		4107508	0					
ANR	4107936	Identifier	core		4107508	0					
ANR	4107937	Identifier	io		4107508	1					
ANR	4107938	Argument	newsize		4107508	1					
ANR	4107939	Identifier	newsize		4107508	0					
ANR	4107940	IfStatement	if ( ret < 1 )		4107508	1					
ANR	4107941	Condition	ret < 1	1673:6:44265:44271	4107508	0	True				
ANR	4107942	RelationalExpression	ret < 1		4107508	0		<			
ANR	4107943	Identifier	ret		4107508	0					
ANR	4107944	PrimaryExpression	1		4107508	1					
ANR	4107945	CompoundStatement		85:15:1932:1932	4107508	1					
ANR	4107946	ExpressionStatement	"eprintf ( ""r_io_resize: cannot resize\\n"" )"	1674:3:44279:44319	4107508	0	True				
ANR	4107947	CallExpression	"eprintf ( ""r_io_resize: cannot resize\\n"" )"		4107508	0					
ANR	4107948	Callee	eprintf		4107508	0					
ANR	4107949	Identifier	eprintf		4107508	0					
ANR	4107950	ArgumentList	"""r_io_resize: cannot resize\\n"""		4107508	1					
ANR	4107951	Argument	"""r_io_resize: cannot resize\\n"""		4107508	0					
ANR	4107952	PrimaryExpression	"""r_io_resize: cannot resize\\n"""		4107508	0					
ANR	4107953	IfStatement	if ( newsize < core -> offset + core -> blocksize || oldsize < core -> offset + core -> blocksize )		4107508	11					
ANR	4107954	Condition	newsize < core -> offset + core -> blocksize || oldsize < core -> offset + core -> blocksize	1677:5:44333:44414	4107508	0	True				
ANR	4107955	OrExpression	newsize < core -> offset + core -> blocksize || oldsize < core -> offset + core -> blocksize		4107508	0		||			
ANR	4107956	RelationalExpression	newsize < core -> offset + core -> blocksize		4107508	0		<			
ANR	4107957	Identifier	newsize		4107508	0					
ANR	4107958	AdditiveExpression	core -> offset + core -> blocksize		4107508	1		+			
ANR	4107959	PtrMemberAccess	core -> offset		4107508	0					
ANR	4107960	Identifier	core		4107508	0					
ANR	4107961	Identifier	offset		4107508	1					
ANR	4107962	PtrMemberAccess	core -> blocksize		4107508	1					
ANR	4107963	Identifier	core		4107508	0					
ANR	4107964	Identifier	blocksize		4107508	1					
ANR	4107965	RelationalExpression	oldsize < core -> offset + core -> blocksize		4107508	1		<			
ANR	4107966	Identifier	oldsize		4107508	0					
ANR	4107967	AdditiveExpression	core -> offset + core -> blocksize		4107508	1		+			
ANR	4107968	PtrMemberAccess	core -> offset		4107508	0					
ANR	4107969	Identifier	core		4107508	0					
ANR	4107970	Identifier	offset		4107508	1					
ANR	4107971	PtrMemberAccess	core -> blocksize		4107508	1					
ANR	4107972	Identifier	core		4107508	0					
ANR	4107973	Identifier	blocksize		4107508	1					
ANR	4107974	CompoundStatement		89:89:2075:2075	4107508	1					
ANR	4107975	ExpressionStatement	r_core_block_read ( core )	1678:2:44421:44445	4107508	0	True				
ANR	4107976	CallExpression	r_core_block_read ( core )		4107508	0					
ANR	4107977	Callee	r_core_block_read		4107508	0					
ANR	4107978	Identifier	r_core_block_read		4107508	0					
ANR	4107979	ArgumentList	core		4107508	1					
ANR	4107980	Argument	core		4107508	0					
ANR	4107981	Identifier	core		4107508	0					
ANR	4107982	ReturnStatement	return true ;	1680:1:44451:44462	4107508	12	True				
ANR	4107983	Identifier	true		4107508	0					
ANR	4107984	ReturnType	static int		4107508	1					
ANR	4107985	Identifier	cmd_resize		4107508	2					
ANR	4107986	ParameterList	"void * data , const char * input"		4107508	3					
ANR	4107987	Parameter	void * data	1589:22:42310:42319	4107508	0	True				
ANR	4107988	ParameterType	void *		4107508	0					
ANR	4107989	Identifier	data		4107508	1					
ANR	4107990	Parameter	const char * input	1589:34:42322:42338	4107508	1	True				
ANR	4107991	ParameterType	const char *		4107508	0					
ANR	4107992	Identifier	input		4107508	1					
ANR	4107993	CFGEntryNode	ENTRY		4107508		True				
ANR	4107994	CFGExitNode	EXIT		4107508		True				
ANR	4107995	Symbol	data		4107508						
ANR	4107996	Symbol	core -> r_main_radare2		4107508						
ANR	4107997	Symbol	delta		4107508						
ANR	4107998	Symbol	* core		4107508						
ANR	4107999	Symbol	* input		4107508						
ANR	4108000	Symbol	humansz		4107508						
ANR	4108001	Symbol	core -> offset		4107508						
ANR	4108002	Symbol	r_num_math		4107508						
ANR	4108003	Symbol	strlen		4107508						
ANR	4108004	Symbol	r_io_fd_size		4107508						
ANR	4108005	Symbol	file		4107508						
ANR	4108006	Symbol	core -> io		4107508						
ANR	4108007	Symbol	help_msg_r		4107508						
ANR	4108008	Symbol	core -> num		4107508						
ANR	4108009	Symbol	* * core		4107508						
ANR	4108010	Symbol	ret		4107508						
ANR	4108011	Symbol	r_str_startswith		4107508						
ANR	4108012	Symbol	core -> blocksize		4107508						
ANR	4108013	Symbol	grow		4107508						
ANR	4108014	Symbol	core -> file		4107508						
ANR	4108015	Symbol	core -> rcmd		4107508						
ANR	4108016	Symbol	newsize		4107508						
ANR	4108017	Symbol	false		4107508						
ANR	4108018	Symbol	r_io_resize		4107508						
ANR	4108019	Symbol	Color_RESET_TERMINAL		4107508						
ANR	4108020	Symbol	* file		4107508						
ANR	4108021	Symbol	input		4107508						
ANR	4108022	Symbol	core		4107508						
ANR	4108023	Symbol	* core -> file		4107508						
ANR	4108024	Symbol	cmd_r2cmd		4107508						
ANR	4108025	Symbol	true		4107508						
ANR	4108026	Symbol	core -> file -> fd		4107508						
ANR	4108027	Symbol	r_str_trim_ro		4107508						
ANR	4108028	Symbol	oldsize		4107508						
ANR	4108029	Function	cmd_panels	1683:0:44467:45270							
ANR	4108030	FunctionDef	"cmd_panels (void * data , const char * input)"		4108029	0					
ANR	4108031	CompoundStatement		1683:53:44520:45270	4108029	0					
ANR	4108032	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1684:1:44523:44550	4108029	0	True				
ANR	4108033	IdentifierDecl	* core = ( RCore * ) data		4108029	0					
ANR	4108034	IdentifierDeclType	RCore *		4108029	0					
ANR	4108035	Identifier	core		4108029	1					
ANR	4108036	AssignmentExpression	* core = ( RCore * ) data		4108029	2		=			
ANR	4108037	Identifier	core		4108029	0					
ANR	4108038	CastExpression	( RCore * ) data		4108029	1					
ANR	4108039	CastTarget	RCore *		4108029	0					
ANR	4108040	Identifier	data		4108029	1					
ANR	4108041	IfStatement	if ( core -> vmode )		4108029	1					
ANR	4108042	Condition	core -> vmode	1685:5:44557:44567	4108029	0	True				
ANR	4108043	PtrMemberAccess	core -> vmode		4108029	0					
ANR	4108044	Identifier	core		4108029	0					
ANR	4108045	Identifier	vmode		4108029	1					
ANR	4108046	CompoundStatement		3:18:49:49	4108029	1					
ANR	4108047	ReturnStatement	return false ;	1686:2:44574:44586	4108029	0	True				
ANR	4108048	Identifier	false		4108029	0					
ANR	4108049	IfStatement	if ( * input == '?' )		4108029	2					
ANR	4108050	Condition	* input == '?'	1688:5:44596:44608	4108029	0	True				
ANR	4108051	EqualityExpression	* input == '?'		4108029	0		==			
ANR	4108052	UnaryOperationExpression	* input		4108029	0					
ANR	4108053	UnaryOperator	*		4108029	0					
ANR	4108054	Identifier	input		4108029	1					
ANR	4108055	PrimaryExpression	'?'		4108029	1					
ANR	4108056	CompoundStatement		6:20:90:90	4108029	1					
ANR	4108057	ExpressionStatement	"eprintf ( ""Usage: v[*i]\\n"" )"	1689:2:44615:44641	4108029	0	True				
ANR	4108058	CallExpression	"eprintf ( ""Usage: v[*i]\\n"" )"		4108029	0					
ANR	4108059	Callee	eprintf		4108029	0					
ANR	4108060	Identifier	eprintf		4108029	0					
ANR	4108061	ArgumentList	"""Usage: v[*i]\\n"""		4108029	1					
ANR	4108062	Argument	"""Usage: v[*i]\\n"""		4108029	0					
ANR	4108063	PrimaryExpression	"""Usage: v[*i]\\n"""		4108029	0					
ANR	4108064	ExpressionStatement	"eprintf ( ""v.test    # save curren layout with name test\\n"" )"	1690:2:44645:44704	4108029	1	True				
ANR	4108065	CallExpression	"eprintf ( ""v.test    # save curren layout with name test\\n"" )"		4108029	0					
ANR	4108066	Callee	eprintf		4108029	0					
ANR	4108067	Identifier	eprintf		4108029	0					
ANR	4108068	ArgumentList	"""v.test    # save curren layout with name test\\n"""		4108029	1					
ANR	4108069	Argument	"""v.test    # save curren layout with name test\\n"""		4108029	0					
ANR	4108070	PrimaryExpression	"""v.test    # save curren layout with name test\\n"""		4108029	0					
ANR	4108071	ExpressionStatement	"eprintf ( ""v test    # load saved layout with name test\\n"" )"	1691:2:44708:44766	4108029	2	True				
ANR	4108072	CallExpression	"eprintf ( ""v test    # load saved layout with name test\\n"" )"		4108029	0					
ANR	4108073	Callee	eprintf		4108029	0					
ANR	4108074	Identifier	eprintf		4108029	0					
ANR	4108075	ArgumentList	"""v test    # load saved layout with name test\\n"""		4108029	1					
ANR	4108076	Argument	"""v test    # load saved layout with name test\\n"""		4108029	0					
ANR	4108077	PrimaryExpression	"""v test    # load saved layout with name test\\n"""		4108029	0					
ANR	4108078	ExpressionStatement	"eprintf ( ""vi ...    # launch 'vim'\\n"" )"	1692:2:44770:44808	4108029	3	True				
ANR	4108079	CallExpression	"eprintf ( ""vi ...    # launch 'vim'\\n"" )"		4108029	0					
ANR	4108080	Callee	eprintf		4108029	0					
ANR	4108081	Identifier	eprintf		4108029	0					
ANR	4108082	ArgumentList	"""vi ...    # launch 'vim'\\n"""		4108029	1					
ANR	4108083	Argument	"""vi ...    # launch 'vim'\\n"""		4108029	0					
ANR	4108084	PrimaryExpression	"""vi ...    # launch 'vim'\\n"""		4108029	0					
ANR	4108085	ReturnStatement	return false ;	1693:2:44812:44824	4108029	4	True				
ANR	4108086	Identifier	false		4108029	0					
ANR	4108087	IfStatement	if ( * input == ' ' )		4108029	3					
ANR	4108088	Condition	* input == ' '	1695:5:44834:44846	4108029	0	True				
ANR	4108089	EqualityExpression	* input == ' '		4108029	0		==			
ANR	4108090	UnaryOperationExpression	* input		4108029	0					
ANR	4108091	UnaryOperator	*		4108029	0					
ANR	4108092	Identifier	input		4108029	1					
ANR	4108093	PrimaryExpression	' '		4108029	1					
ANR	4108094	CompoundStatement		13:20:328:328	4108029	1					
ANR	4108095	IfStatement	if ( core -> panels )		4108029	0					
ANR	4108096	Condition	core -> panels	1696:6:44857:44868	4108029	0	True				
ANR	4108097	PtrMemberAccess	core -> panels		4108029	0					
ANR	4108098	Identifier	core		4108029	0					
ANR	4108099	Identifier	panels		4108029	1					
ANR	4108100	CompoundStatement		14:20:350:350	4108029	1					
ANR	4108101	ExpressionStatement	"r_load_panels_layout ( core , input + 1 )"	1697:3:44876:44914	4108029	0	True				
ANR	4108102	CallExpression	"r_load_panels_layout ( core , input + 1 )"		4108029	0					
ANR	4108103	Callee	r_load_panels_layout		4108029	0					
ANR	4108104	Identifier	r_load_panels_layout		4108029	0					
ANR	4108105	ArgumentList	core		4108029	1					
ANR	4108106	Argument	core		4108029	0					
ANR	4108107	Identifier	core		4108029	0					
ANR	4108108	Argument	input + 1		4108029	1					
ANR	4108109	AdditiveExpression	input + 1		4108029	0		+			
ANR	4108110	Identifier	input		4108029	0					
ANR	4108111	PrimaryExpression	1		4108029	1					
ANR	4108112	ExpressionStatement	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"	1699:2:44922:44974	4108029	1	True				
ANR	4108113	CallExpression	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"		4108029	0					
ANR	4108114	Callee	r_config_set		4108029	0					
ANR	4108115	Identifier	r_config_set		4108029	0					
ANR	4108116	ArgumentList	core -> config		4108029	1					
ANR	4108117	Argument	core -> config		4108029	0					
ANR	4108118	PtrMemberAccess	core -> config		4108029	0					
ANR	4108119	Identifier	core		4108029	0					
ANR	4108120	Identifier	config		4108029	1					
ANR	4108121	Argument	"""scr.layout"""		4108029	1					
ANR	4108122	PrimaryExpression	"""scr.layout"""		4108029	0					
ANR	4108123	Argument	input + 1		4108029	2					
ANR	4108124	AdditiveExpression	input + 1		4108029	0		+			
ANR	4108125	Identifier	input		4108029	0					
ANR	4108126	PrimaryExpression	1		4108029	1					
ANR	4108127	ReturnStatement	return true ;	1700:2:44978:44989	4108029	2	True				
ANR	4108128	Identifier	true		4108029	0					
ANR	4108129	IfStatement	if ( * input == '=' )		4108029	4					
ANR	4108130	Condition	* input == '='	1702:5:44999:45011	4108029	0	True				
ANR	4108131	EqualityExpression	* input == '='		4108029	0		==			
ANR	4108132	UnaryOperationExpression	* input		4108029	0					
ANR	4108133	UnaryOperator	*		4108029	0					
ANR	4108134	Identifier	input		4108029	1					
ANR	4108135	PrimaryExpression	'='		4108029	1					
ANR	4108136	CompoundStatement		20:20:493:493	4108029	1					
ANR	4108137	ExpressionStatement	"r_save_panels_layout ( core , input + 1 )"	1703:2:45018:45056	4108029	0	True				
ANR	4108138	CallExpression	"r_save_panels_layout ( core , input + 1 )"		4108029	0					
ANR	4108139	Callee	r_save_panels_layout		4108029	0					
ANR	4108140	Identifier	r_save_panels_layout		4108029	0					
ANR	4108141	ArgumentList	core		4108029	1					
ANR	4108142	Argument	core		4108029	0					
ANR	4108143	Identifier	core		4108029	0					
ANR	4108144	Argument	input + 1		4108029	1					
ANR	4108145	AdditiveExpression	input + 1		4108029	0		+			
ANR	4108146	Identifier	input		4108029	0					
ANR	4108147	PrimaryExpression	1		4108029	1					
ANR	4108148	ExpressionStatement	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"	1704:2:45060:45112	4108029	1	True				
ANR	4108149	CallExpression	"r_config_set ( core -> config , ""scr.layout"" , input + 1 )"		4108029	0					
ANR	4108150	Callee	r_config_set		4108029	0					
ANR	4108151	Identifier	r_config_set		4108029	0					
ANR	4108152	ArgumentList	core -> config		4108029	1					
ANR	4108153	Argument	core -> config		4108029	0					
ANR	4108154	PtrMemberAccess	core -> config		4108029	0					
ANR	4108155	Identifier	core		4108029	0					
ANR	4108156	Identifier	config		4108029	1					
ANR	4108157	Argument	"""scr.layout"""		4108029	1					
ANR	4108158	PrimaryExpression	"""scr.layout"""		4108029	0					
ANR	4108159	Argument	input + 1		4108029	2					
ANR	4108160	AdditiveExpression	input + 1		4108029	0		+			
ANR	4108161	Identifier	input		4108029	0					
ANR	4108162	PrimaryExpression	1		4108029	1					
ANR	4108163	ReturnStatement	return true ;	1705:2:45116:45127	4108029	2	True				
ANR	4108164	Identifier	true		4108029	0					
ANR	4108165	IfStatement	if ( * input == 'i' )		4108029	5					
ANR	4108166	Condition	* input == 'i'	1707:5:45137:45149	4108029	0	True				
ANR	4108167	EqualityExpression	* input == 'i'		4108029	0		==			
ANR	4108168	UnaryOperationExpression	* input		4108029	0					
ANR	4108169	UnaryOperator	*		4108029	0					
ANR	4108170	Identifier	input		4108029	1					
ANR	4108171	PrimaryExpression	'i'		4108029	1					
ANR	4108172	CompoundStatement		25:20:631:631	4108029	1					
ANR	4108173	ExpressionStatement	"r_sys_cmdf ( ""v%s"" , input )"	1708:2:45156:45181	4108029	0	True				
ANR	4108174	CallExpression	"r_sys_cmdf ( ""v%s"" , input )"		4108029	0					
ANR	4108175	Callee	r_sys_cmdf		4108029	0					
ANR	4108176	Identifier	r_sys_cmdf		4108029	0					
ANR	4108177	ArgumentList	"""v%s"""		4108029	1					
ANR	4108178	Argument	"""v%s"""		4108029	0					
ANR	4108179	PrimaryExpression	"""v%s"""		4108029	0					
ANR	4108180	Argument	input		4108029	1					
ANR	4108181	Identifier	input		4108029	0					
ANR	4108182	ReturnStatement	return false ;	1709:2:45185:45197	4108029	1	True				
ANR	4108183	Identifier	false		4108029	0					
ANR	4108184	ExpressionStatement	"r_core_visual_panels_root ( core , core -> panels_root )"	1711:1:45203:45254	4108029	6	True				
ANR	4108185	CallExpression	"r_core_visual_panels_root ( core , core -> panels_root )"		4108029	0					
ANR	4108186	Callee	r_core_visual_panels_root		4108029	0					
ANR	4108187	Identifier	r_core_visual_panels_root		4108029	0					
ANR	4108188	ArgumentList	core		4108029	1					
ANR	4108189	Argument	core		4108029	0					
ANR	4108190	Identifier	core		4108029	0					
ANR	4108191	Argument	core -> panels_root		4108029	1					
ANR	4108192	PtrMemberAccess	core -> panels_root		4108029	0					
ANR	4108193	Identifier	core		4108029	0					
ANR	4108194	Identifier	panels_root		4108029	1					
ANR	4108195	ReturnStatement	return true ;	1712:1:45257:45268	4108029	7	True				
ANR	4108196	Identifier	true		4108029	0					
ANR	4108197	ReturnType	static int		4108029	1					
ANR	4108198	Identifier	cmd_panels		4108029	2					
ANR	4108199	ParameterList	"void * data , const char * input"		4108029	3					
ANR	4108200	Parameter	void * data	1683:22:44489:44498	4108029	0	True				
ANR	4108201	ParameterType	void *		4108029	0					
ANR	4108202	Identifier	data		4108029	1					
ANR	4108203	Parameter	const char * input	1683:34:44501:44517	4108029	1	True				
ANR	4108204	ParameterType	const char *		4108029	0					
ANR	4108205	Identifier	input		4108029	1					
ANR	4108206	CFGEntryNode	ENTRY		4108029		True				
ANR	4108207	CFGExitNode	EXIT		4108029		True				
ANR	4108208	Symbol	core -> config		4108029						
ANR	4108209	Symbol	input		4108029						
ANR	4108210	Symbol	core		4108029						
ANR	4108211	Symbol	data		4108029						
ANR	4108212	Symbol	core -> panels		4108029						
ANR	4108213	Symbol	* core		4108029						
ANR	4108214	Symbol	false		4108029						
ANR	4108215	Symbol	* input		4108029						
ANR	4108216	Symbol	true		4108029						
ANR	4108217	Symbol	core -> panels_root		4108029						
ANR	4108218	Symbol	core -> vmode		4108029						
ANR	4108219	Function	cmd_visual	1715:0:45273:45498							
ANR	4108220	FunctionDef	"cmd_visual (void * data , const char * input)"		4108219	0					
ANR	4108221	CompoundStatement		1715:53:45326:45498	4108219	0					
ANR	4108222	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1716:1:45329:45356	4108219	0	True				
ANR	4108223	IdentifierDecl	* core = ( RCore * ) data		4108219	0					
ANR	4108224	IdentifierDeclType	RCore *		4108219	0					
ANR	4108225	Identifier	core		4108219	1					
ANR	4108226	AssignmentExpression	* core = ( RCore * ) data		4108219	2		=			
ANR	4108227	Identifier	core		4108219	0					
ANR	4108228	CastExpression	( RCore * ) data		4108219	1					
ANR	4108229	CastTarget	RCore *		4108219	0					
ANR	4108230	Identifier	data		4108219	1					
ANR	4108231	IfStatement	if ( core -> http_up )		4108219	1					
ANR	4108232	Condition	core -> http_up	1717:5:45363:45375	4108219	0	True				
ANR	4108233	PtrMemberAccess	core -> http_up		4108219	0					
ANR	4108234	Identifier	core		4108219	0					
ANR	4108235	Identifier	http_up		4108219	1					
ANR	4108236	CompoundStatement		3:20:51:51	4108219	1					
ANR	4108237	ReturnStatement	return false ;	1718:2:45382:45394	4108219	0	True				
ANR	4108238	Identifier	false		4108219	0					
ANR	4108239	IfStatement	if ( ! r_cons_is_interactive ( ) )		4108219	2					
ANR	4108240	Condition	! r_cons_is_interactive ( )	1720:5:45404:45428	4108219	0	True				
ANR	4108241	UnaryOperationExpression	! r_cons_is_interactive ( )		4108219	0					
ANR	4108242	UnaryOperator	!		4108219	0					
ANR	4108243	CallExpression	r_cons_is_interactive ( )		4108219	1					
ANR	4108244	Callee	r_cons_is_interactive		4108219	0					
ANR	4108245	Identifier	r_cons_is_interactive		4108219	0					
ANR	4108246	ArgumentList			4108219	1					
ANR	4108247	CompoundStatement		6:32:104:104	4108219	1					
ANR	4108248	ReturnStatement	return false ;	1721:2:45435:45447	4108219	0	True				
ANR	4108249	Identifier	false		4108219	0					
ANR	4108250	ReturnStatement	"return r_core_visual ( ( RCore * ) data , input ) ;"	1723:1:45453:45496	4108219	3	True				
ANR	4108251	CallExpression	"r_core_visual ( ( RCore * ) data , input )"		4108219	0					
ANR	4108252	Callee	r_core_visual		4108219	0					
ANR	4108253	Identifier	r_core_visual		4108219	0					
ANR	4108254	ArgumentList	( RCore * ) data		4108219	1					
ANR	4108255	Argument	( RCore * ) data		4108219	0					
ANR	4108256	CastExpression	( RCore * ) data		4108219	0					
ANR	4108257	CastTarget	RCore *		4108219	0					
ANR	4108258	Identifier	data		4108219	1					
ANR	4108259	Argument	input		4108219	1					
ANR	4108260	Identifier	input		4108219	0					
ANR	4108261	ReturnType	static int		4108219	1					
ANR	4108262	Identifier	cmd_visual		4108219	2					
ANR	4108263	ParameterList	"void * data , const char * input"		4108219	3					
ANR	4108264	Parameter	void * data	1715:22:45295:45304	4108219	0	True				
ANR	4108265	ParameterType	void *		4108219	0					
ANR	4108266	Identifier	data		4108219	1					
ANR	4108267	Parameter	const char * input	1715:34:45307:45323	4108219	1	True				
ANR	4108268	ParameterType	const char *		4108219	0					
ANR	4108269	Identifier	input		4108219	1					
ANR	4108270	CFGEntryNode	ENTRY		4108219		True				
ANR	4108271	CFGExitNode	EXIT		4108219		True				
ANR	4108272	Symbol	input		4108219						
ANR	4108273	Symbol	core		4108219						
ANR	4108274	Symbol	r_cons_is_interactive		4108219						
ANR	4108275	Symbol	data		4108219						
ANR	4108276	Symbol	core -> http_up		4108219						
ANR	4108277	Symbol	* core		4108219						
ANR	4108278	Symbol	false		4108219						
ANR	4108279	Symbol	r_core_visual		4108219						
ANR	4108280	Function	cmd_pipein	1726:0:45501:45671							
ANR	4108281	FunctionDef	"cmd_pipein (void * user , const char * input)"		4108280	0					
ANR	4108282	CompoundStatement		1726:53:45554:45671	4108280	0					
ANR	4108283	IdentifierDeclStatement	char * buf = strdup ( input ) ;	1727:1:45557:45583	4108280	0	True				
ANR	4108284	IdentifierDecl	* buf = strdup ( input )		4108280	0					
ANR	4108285	IdentifierDeclType	char *		4108280	0					
ANR	4108286	Identifier	buf		4108280	1					
ANR	4108287	AssignmentExpression	* buf = strdup ( input )		4108280	2		=			
ANR	4108288	Identifier	buf		4108280	0					
ANR	4108289	CallExpression	strdup ( input )		4108280	1					
ANR	4108290	Callee	strdup		4108280	0					
ANR	4108291	Identifier	strdup		4108280	0					
ANR	4108292	ArgumentList	input		4108280	1					
ANR	4108293	Argument	input		4108280	0					
ANR	4108294	Identifier	input		4108280	0					
ANR	4108295	IdentifierDeclStatement	int len = r_str_unescape ( buf ) ;	1728:1:45586:45616	4108280	1	True				
ANR	4108296	IdentifierDecl	len = r_str_unescape ( buf )		4108280	0					
ANR	4108297	IdentifierDeclType	int		4108280	0					
ANR	4108298	Identifier	len		4108280	1					
ANR	4108299	AssignmentExpression	len = r_str_unescape ( buf )		4108280	2		=			
ANR	4108300	Identifier	len		4108280	0					
ANR	4108301	CallExpression	r_str_unescape ( buf )		4108280	1					
ANR	4108302	Callee	r_str_unescape		4108280	0					
ANR	4108303	Identifier	r_str_unescape		4108280	0					
ANR	4108304	ArgumentList	buf		4108280	1					
ANR	4108305	Argument	buf		4108280	0					
ANR	4108306	Identifier	buf		4108280	0					
ANR	4108307	ExpressionStatement	"r_cons_readpush ( buf , len )"	1729:1:45619:45645	4108280	2	True				
ANR	4108308	CallExpression	"r_cons_readpush ( buf , len )"		4108280	0					
ANR	4108309	Callee	r_cons_readpush		4108280	0					
ANR	4108310	Identifier	r_cons_readpush		4108280	0					
ANR	4108311	ArgumentList	buf		4108280	1					
ANR	4108312	Argument	buf		4108280	0					
ANR	4108313	Identifier	buf		4108280	0					
ANR	4108314	Argument	len		4108280	1					
ANR	4108315	Identifier	len		4108280	0					
ANR	4108316	ExpressionStatement	free ( buf )	1730:1:45648:45658	4108280	3	True				
ANR	4108317	CallExpression	free ( buf )		4108280	0					
ANR	4108318	Callee	free		4108280	0					
ANR	4108319	Identifier	free		4108280	0					
ANR	4108320	ArgumentList	buf		4108280	1					
ANR	4108321	Argument	buf		4108280	0					
ANR	4108322	Identifier	buf		4108280	0					
ANR	4108323	ReturnStatement	return 0 ;	1731:1:45661:45669	4108280	4	True				
ANR	4108324	PrimaryExpression	0		4108280	0					
ANR	4108325	ReturnType	static int		4108280	1					
ANR	4108326	Identifier	cmd_pipein		4108280	2					
ANR	4108327	ParameterList	"void * user , const char * input"		4108280	3					
ANR	4108328	Parameter	void * user	1726:22:45523:45532	4108280	0	True				
ANR	4108329	ParameterType	void *		4108280	0					
ANR	4108330	Identifier	user		4108280	1					
ANR	4108331	Parameter	const char * input	1726:34:45535:45551	4108280	1	True				
ANR	4108332	ParameterType	const char *		4108280	0					
ANR	4108333	Identifier	input		4108280	1					
ANR	4108334	CFGEntryNode	ENTRY		4108280		True				
ANR	4108335	CFGExitNode	EXIT		4108280		True				
ANR	4108336	Symbol	input		4108280						
ANR	4108337	Symbol	buf		4108280						
ANR	4108338	Symbol	len		4108280						
ANR	4108339	Symbol	strdup		4108280						
ANR	4108340	Symbol	r_str_unescape		4108280						
ANR	4108341	Symbol	user		4108280						
ANR	4108342	Function	cmd_tasks	1734:0:45674:47394							
ANR	4108343	FunctionDef	"cmd_tasks (void * data , const char * input)"		4108342	0					
ANR	4108344	CompoundStatement		1734:52:45726:47394	4108342	0					
ANR	4108345	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1735:1:45729:45756	4108342	0	True				
ANR	4108346	IdentifierDecl	* core = ( RCore * ) data		4108342	0					
ANR	4108347	IdentifierDeclType	RCore *		4108342	0					
ANR	4108348	Identifier	core		4108342	1					
ANR	4108349	AssignmentExpression	* core = ( RCore * ) data		4108342	2		=			
ANR	4108350	Identifier	core		4108342	0					
ANR	4108351	CastExpression	( RCore * ) data		4108342	1					
ANR	4108352	CastTarget	RCore *		4108342	0					
ANR	4108353	Identifier	data		4108342	1					
ANR	4108354	SwitchStatement	switch ( input [ 0 ] )		4108342	1					
ANR	4108355	Condition	input [ 0 ]	1736:9:45767:45774	4108342	0	True				
ANR	4108356	ArrayIndexing	input [ 0 ]		4108342	0					
ANR	4108357	Identifier	input		4108342	0					
ANR	4108358	PrimaryExpression	0		4108342	1					
ANR	4108359	CompoundStatement		3:19:50:50	4108342	1					
ANR	4108360	Label	case '\\0' :	1737:1:45780:45789	4108342	0	True				
ANR	4108361	Label	case 'j' :	1738:1:45799:45807	4108342	1	True				
ANR	4108362	ExpressionStatement	"r_core_task_list ( core , * input )"	1739:2:45819:45850	4108342	2	True				
ANR	4108363	CallExpression	"r_core_task_list ( core , * input )"		4108342	0					
ANR	4108364	Callee	r_core_task_list		4108342	0					
ANR	4108365	Identifier	r_core_task_list		4108342	0					
ANR	4108366	ArgumentList	core		4108342	1					
ANR	4108367	Argument	core		4108342	0					
ANR	4108368	Identifier	core		4108342	0					
ANR	4108369	Argument	* input		4108342	1					
ANR	4108370	UnaryOperationExpression	* input		4108342	0					
ANR	4108371	UnaryOperator	*		4108342	0					
ANR	4108372	Identifier	input		4108342	1					
ANR	4108373	BreakStatement	break ;	1740:2:45854:45859	4108342	3	True				
ANR	4108374	Label	case 'b' :	1741:1:45862:45870	4108342	4	True				
ANR	4108375	CompoundStatement		13:2:263:306	4108342	5					
ANR	4108376	IfStatement	if ( r_sandbox_enable ( 0 ) )		4108342	0					
ANR	4108377	Condition	r_sandbox_enable ( 0 )	1742:6:45888:45907	4108342	0	True				
ANR	4108378	CallExpression	r_sandbox_enable ( 0 )		4108342	0					
ANR	4108379	Callee	r_sandbox_enable		4108342	0					
ANR	4108380	Identifier	r_sandbox_enable		4108342	0					
ANR	4108381	ArgumentList	0		4108342	1					
ANR	4108382	Argument	0		4108342	0					
ANR	4108383	PrimaryExpression	0		4108342	0					
ANR	4108384	CompoundStatement		9:28:183:183	4108342	1					
ANR	4108385	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1743:3:45915:45969	4108342	0	True				
ANR	4108386	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4108342	0					
ANR	4108387	Callee	eprintf		4108342	0					
ANR	4108388	Identifier	eprintf		4108342	0					
ANR	4108389	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4108342	1					
ANR	4108390	Argument	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108391	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108392	ReturnStatement	return 0 ;	1744:3:45974:45982	4108342	1	True				
ANR	4108393	PrimaryExpression	0		4108342	0					
ANR	4108394	IdentifierDeclStatement	"int tid = r_num_math ( core -> num , input + 1 ) ;"	1746:2:45990:46033	4108342	1	True				
ANR	4108395	IdentifierDecl	"tid = r_num_math ( core -> num , input + 1 )"		4108342	0					
ANR	4108396	IdentifierDeclType	int		4108342	0					
ANR	4108397	Identifier	tid		4108342	1					
ANR	4108398	AssignmentExpression	"tid = r_num_math ( core -> num , input + 1 )"		4108342	2		=			
ANR	4108399	Identifier	tid		4108342	0					
ANR	4108400	CallExpression	"r_num_math ( core -> num , input + 1 )"		4108342	1					
ANR	4108401	Callee	r_num_math		4108342	0					
ANR	4108402	Identifier	r_num_math		4108342	0					
ANR	4108403	ArgumentList	core -> num		4108342	1					
ANR	4108404	Argument	core -> num		4108342	0					
ANR	4108405	PtrMemberAccess	core -> num		4108342	0					
ANR	4108406	Identifier	core		4108342	0					
ANR	4108407	Identifier	num		4108342	1					
ANR	4108408	Argument	input + 1		4108342	1					
ANR	4108409	AdditiveExpression	input + 1		4108342	0		+			
ANR	4108410	Identifier	input		4108342	0					
ANR	4108411	PrimaryExpression	1		4108342	1					
ANR	4108412	IfStatement	if ( tid )		4108342	2					
ANR	4108413	Condition	tid	1747:6:46041:46043	4108342	0	True				
ANR	4108414	Identifier	tid		4108342	0					
ANR	4108415	CompoundStatement		14:11:319:319	4108342	1					
ANR	4108416	ExpressionStatement	"r_core_task_break ( core , tid )"	1748:3:46051:46080	4108342	0	True				
ANR	4108417	CallExpression	"r_core_task_break ( core , tid )"		4108342	0					
ANR	4108418	Callee	r_core_task_break		4108342	0					
ANR	4108419	Identifier	r_core_task_break		4108342	0					
ANR	4108420	ArgumentList	core		4108342	1					
ANR	4108421	Argument	core		4108342	0					
ANR	4108422	Identifier	core		4108342	0					
ANR	4108423	Argument	tid		4108342	1					
ANR	4108424	Identifier	tid		4108342	0					
ANR	4108425	BreakStatement	break ;	1750:2:46088:46093	4108342	3	True				
ANR	4108426	Label	case '&' :	1752:1:46099:46107	4108342	6	True				
ANR	4108427	CompoundStatement		24:2:500:543	4108342	7					
ANR	4108428	IfStatement	if ( r_sandbox_enable ( 0 ) )		4108342	0					
ANR	4108429	Condition	r_sandbox_enable ( 0 )	1753:6:46125:46144	4108342	0	True				
ANR	4108430	CallExpression	r_sandbox_enable ( 0 )		4108342	0					
ANR	4108431	Callee	r_sandbox_enable		4108342	0					
ANR	4108432	Identifier	r_sandbox_enable		4108342	0					
ANR	4108433	ArgumentList	0		4108342	1					
ANR	4108434	Argument	0		4108342	0					
ANR	4108435	PrimaryExpression	0		4108342	0					
ANR	4108436	CompoundStatement		20:28:420:420	4108342	1					
ANR	4108437	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1754:3:46152:46206	4108342	0	True				
ANR	4108438	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4108342	0					
ANR	4108439	Callee	eprintf		4108342	0					
ANR	4108440	Identifier	eprintf		4108342	0					
ANR	4108441	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4108342	1					
ANR	4108442	Argument	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108443	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108444	ReturnStatement	return 0 ;	1755:3:46211:46219	4108342	1	True				
ANR	4108445	PrimaryExpression	0		4108342	0					
ANR	4108446	IdentifierDeclStatement	"int tid = r_num_math ( core -> num , input + 1 ) ;"	1757:2:46227:46270	4108342	1	True				
ANR	4108447	IdentifierDecl	"tid = r_num_math ( core -> num , input + 1 )"		4108342	0					
ANR	4108448	IdentifierDeclType	int		4108342	0					
ANR	4108449	Identifier	tid		4108342	1					
ANR	4108450	AssignmentExpression	"tid = r_num_math ( core -> num , input + 1 )"		4108342	2		=			
ANR	4108451	Identifier	tid		4108342	0					
ANR	4108452	CallExpression	"r_num_math ( core -> num , input + 1 )"		4108342	1					
ANR	4108453	Callee	r_num_math		4108342	0					
ANR	4108454	Identifier	r_num_math		4108342	0					
ANR	4108455	ArgumentList	core -> num		4108342	1					
ANR	4108456	Argument	core -> num		4108342	0					
ANR	4108457	PtrMemberAccess	core -> num		4108342	0					
ANR	4108458	Identifier	core		4108342	0					
ANR	4108459	Identifier	num		4108342	1					
ANR	4108460	Argument	input + 1		4108342	1					
ANR	4108461	AdditiveExpression	input + 1		4108342	0		+			
ANR	4108462	Identifier	input		4108342	0					
ANR	4108463	PrimaryExpression	1		4108342	1					
ANR	4108464	ExpressionStatement	"r_core_task_join ( core , core -> current_task , tid ? tid : - 1 )"	1758:2:46274:46333	4108342	2	True				
ANR	4108465	CallExpression	"r_core_task_join ( core , core -> current_task , tid ? tid : - 1 )"		4108342	0					
ANR	4108466	Callee	r_core_task_join		4108342	0					
ANR	4108467	Identifier	r_core_task_join		4108342	0					
ANR	4108468	ArgumentList	core		4108342	1					
ANR	4108469	Argument	core		4108342	0					
ANR	4108470	Identifier	core		4108342	0					
ANR	4108471	Argument	core -> current_task		4108342	1					
ANR	4108472	PtrMemberAccess	core -> current_task		4108342	0					
ANR	4108473	Identifier	core		4108342	0					
ANR	4108474	Identifier	current_task		4108342	1					
ANR	4108475	Argument	tid ? tid : - 1		4108342	2					
ANR	4108476	ConditionalExpression	tid ? tid : - 1		4108342	0					
ANR	4108477	Condition	tid		4108342	0					
ANR	4108478	Identifier	tid		4108342	0					
ANR	4108479	Identifier	tid		4108342	1					
ANR	4108480	UnaryOperationExpression	- 1		4108342	2					
ANR	4108481	UnaryOperator	-		4108342	0					
ANR	4108482	PrimaryExpression	1		4108342	1					
ANR	4108483	BreakStatement	break ;	1759:2:46337:46342	4108342	3	True				
ANR	4108484	Label	case '=' :	1761:1:46348:46356	4108342	8	True				
ANR	4108485	CompoundStatement		30:2:678:721	4108342	9					
ANR	4108486	IdentifierDeclStatement	"int tid = r_num_math ( core -> num , input + 1 ) ;"	1763:2:46405:46448	4108342	0	True				
ANR	4108487	IdentifierDecl	"tid = r_num_math ( core -> num , input + 1 )"		4108342	0					
ANR	4108488	IdentifierDeclType	int		4108342	0					
ANR	4108489	Identifier	tid		4108342	1					
ANR	4108490	AssignmentExpression	"tid = r_num_math ( core -> num , input + 1 )"		4108342	2		=			
ANR	4108491	Identifier	tid		4108342	0					
ANR	4108492	CallExpression	"r_num_math ( core -> num , input + 1 )"		4108342	1					
ANR	4108493	Callee	r_num_math		4108342	0					
ANR	4108494	Identifier	r_num_math		4108342	0					
ANR	4108495	ArgumentList	core -> num		4108342	1					
ANR	4108496	Argument	core -> num		4108342	0					
ANR	4108497	PtrMemberAccess	core -> num		4108342	0					
ANR	4108498	Identifier	core		4108342	0					
ANR	4108499	Identifier	num		4108342	1					
ANR	4108500	Argument	input + 1		4108342	1					
ANR	4108501	AdditiveExpression	input + 1		4108342	0		+			
ANR	4108502	Identifier	input		4108342	0					
ANR	4108503	PrimaryExpression	1		4108342	1					
ANR	4108504	IfStatement	if ( tid )		4108342	1					
ANR	4108505	Condition	tid	1764:6:46456:46458	4108342	0	True				
ANR	4108506	Identifier	tid		4108342	0					
ANR	4108507	CompoundStatement		32:3:739:791	4108342	1					
ANR	4108508	IdentifierDeclStatement	"RCoreTask * task = r_core_task_get_incref ( core , tid ) ;"	1765:3:46466:46518	4108342	0	True				
ANR	4108509	IdentifierDecl	"* task = r_core_task_get_incref ( core , tid )"		4108342	0					
ANR	4108510	IdentifierDeclType	RCoreTask *		4108342	0					
ANR	4108511	Identifier	task		4108342	1					
ANR	4108512	AssignmentExpression	"* task = r_core_task_get_incref ( core , tid )"		4108342	2		=			
ANR	4108513	Identifier	task		4108342	0					
ANR	4108514	CallExpression	"r_core_task_get_incref ( core , tid )"		4108342	1					
ANR	4108515	Callee	r_core_task_get_incref		4108342	0					
ANR	4108516	Identifier	r_core_task_get_incref		4108342	0					
ANR	4108517	ArgumentList	core		4108342	1					
ANR	4108518	Argument	core		4108342	0					
ANR	4108519	Identifier	core		4108342	0					
ANR	4108520	Argument	tid		4108342	1					
ANR	4108521	Identifier	tid		4108342	0					
ANR	4108522	IfStatement	if ( task )		4108342	1					
ANR	4108523	Condition	task	1766:7:46527:46530	4108342	0	True				
ANR	4108524	Identifier	task		4108342	0					
ANR	4108525	CompoundStatement		33:13:806:806	4108342	1					
ANR	4108526	IfStatement	if ( task -> res )		4108342	0					
ANR	4108527	Condition	task -> res	1767:8:46543:46551	4108342	0	True				
ANR	4108528	PtrMemberAccess	task -> res		4108342	0					
ANR	4108529	Identifier	task		4108342	0					
ANR	4108530	Identifier	res		4108342	1					
ANR	4108531	CompoundStatement		34:19:827:827	4108342	1					
ANR	4108532	ExpressionStatement	r_cons_println ( task -> res )	1768:5:46561:46587	4108342	0	True				
ANR	4108533	CallExpression	r_cons_println ( task -> res )		4108342	0					
ANR	4108534	Callee	r_cons_println		4108342	0					
ANR	4108535	Identifier	r_cons_println		4108342	0					
ANR	4108536	ArgumentList	task -> res		4108342	1					
ANR	4108537	Argument	task -> res		4108342	0					
ANR	4108538	PtrMemberAccess	task -> res		4108342	0					
ANR	4108539	Identifier	task		4108342	0					
ANR	4108540	Identifier	res		4108342	1					
ANR	4108541	ExpressionStatement	r_core_task_decref ( task )	1770:4:46599:46624	4108342	1	True				
ANR	4108542	CallExpression	r_core_task_decref ( task )		4108342	0					
ANR	4108543	Callee	r_core_task_decref		4108342	0					
ANR	4108544	Identifier	r_core_task_decref		4108342	0					
ANR	4108545	ArgumentList	task		4108342	1					
ANR	4108546	Argument	task		4108342	0					
ANR	4108547	Identifier	task		4108342	0					
ANR	4108548	ElseStatement	else		4108342	0					
ANR	4108549	CompoundStatement		38:10:909:909	4108342	0					
ANR	4108550	ExpressionStatement	"eprintf ( ""Cannot find task\\n"" )"	1772:4:46642:46672	4108342	0	True				
ANR	4108551	CallExpression	"eprintf ( ""Cannot find task\\n"" )"		4108342	0					
ANR	4108552	Callee	eprintf		4108342	0					
ANR	4108553	Identifier	eprintf		4108342	0					
ANR	4108554	ArgumentList	"""Cannot find task\\n"""		4108342	1					
ANR	4108555	Argument	"""Cannot find task\\n"""		4108342	0					
ANR	4108556	PrimaryExpression	"""Cannot find task\\n"""		4108342	0					
ANR	4108557	BreakStatement	break ;	1775:2:46685:46690	4108342	2	True				
ANR	4108558	Label	case '-' :	1777:1:46696:46704	4108342	10	True				
ANR	4108559	IfStatement	if ( r_sandbox_enable ( 0 ) )		4108342	11					
ANR	4108560	Condition	r_sandbox_enable ( 0 )	1778:6:46720:46739	4108342	0	True				
ANR	4108561	CallExpression	r_sandbox_enable ( 0 )		4108342	0					
ANR	4108562	Callee	r_sandbox_enable		4108342	0					
ANR	4108563	Identifier	r_sandbox_enable		4108342	0					
ANR	4108564	ArgumentList	0		4108342	1					
ANR	4108565	Argument	0		4108342	0					
ANR	4108566	PrimaryExpression	0		4108342	0					
ANR	4108567	CompoundStatement		45:28:1015:1015	4108342	1					
ANR	4108568	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1779:3:46747:46801	4108342	0	True				
ANR	4108569	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4108342	0					
ANR	4108570	Callee	eprintf		4108342	0					
ANR	4108571	Identifier	eprintf		4108342	0					
ANR	4108572	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4108342	1					
ANR	4108573	Argument	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108574	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108575	ReturnStatement	return 0 ;	1780:3:46806:46814	4108342	1	True				
ANR	4108576	PrimaryExpression	0		4108342	0					
ANR	4108577	IfStatement	if ( input [ 1 ] == '*' )		4108342	12					
ANR	4108578	Condition	input [ 1 ] == '*'	1782:6:46826:46840	4108342	0	True				
ANR	4108579	EqualityExpression	input [ 1 ] == '*'		4108342	0		==			
ANR	4108580	ArrayIndexing	input [ 1 ]		4108342	0					
ANR	4108581	Identifier	input		4108342	0					
ANR	4108582	PrimaryExpression	1		4108342	1					
ANR	4108583	PrimaryExpression	'*'		4108342	1					
ANR	4108584	CompoundStatement		49:23:1116:1116	4108342	1					
ANR	4108585	ExpressionStatement	r_core_task_del_all_done ( core )	1783:3:46848:46879	4108342	0	True				
ANR	4108586	CallExpression	r_core_task_del_all_done ( core )		4108342	0					
ANR	4108587	Callee	r_core_task_del_all_done		4108342	0					
ANR	4108588	Identifier	r_core_task_del_all_done		4108342	0					
ANR	4108589	ArgumentList	core		4108342	1					
ANR	4108590	Argument	core		4108342	0					
ANR	4108591	Identifier	core		4108342	0					
ANR	4108592	ElseStatement	else		4108342	0					
ANR	4108593	CompoundStatement		51:9:1163:1163	4108342	0					
ANR	4108594	ExpressionStatement	"r_core_task_del ( core , r_num_math ( core -> num , input + 1 ) )"	1785:3:46895:46952	4108342	0	True				
ANR	4108595	CallExpression	"r_core_task_del ( core , r_num_math ( core -> num , input + 1 ) )"		4108342	0					
ANR	4108596	Callee	r_core_task_del		4108342	0					
ANR	4108597	Identifier	r_core_task_del		4108342	0					
ANR	4108598	ArgumentList	core		4108342	1					
ANR	4108599	Argument	core		4108342	0					
ANR	4108600	Identifier	core		4108342	0					
ANR	4108601	Argument	"r_num_math ( core -> num , input + 1 )"		4108342	1					
ANR	4108602	CallExpression	"r_num_math ( core -> num , input + 1 )"		4108342	0					
ANR	4108603	Callee	r_num_math		4108342	0					
ANR	4108604	Identifier	r_num_math		4108342	0					
ANR	4108605	ArgumentList	core -> num		4108342	1					
ANR	4108606	Argument	core -> num		4108342	0					
ANR	4108607	PtrMemberAccess	core -> num		4108342	0					
ANR	4108608	Identifier	core		4108342	0					
ANR	4108609	Identifier	num		4108342	1					
ANR	4108610	Argument	input + 1		4108342	1					
ANR	4108611	AdditiveExpression	input + 1		4108342	0		+			
ANR	4108612	Identifier	input		4108342	0					
ANR	4108613	PrimaryExpression	1		4108342	1					
ANR	4108614	BreakStatement	break ;	1787:2:46960:46965	4108342	13	True				
ANR	4108615	Label	case '?' :	1788:1:46968:46976	4108342	14	True				
ANR	4108616	Label	default :	1789:1:46987:46994	4108342	15	True				
ANR	4108617	Identifier	default		4108342	0					
ANR	4108618	ExpressionStatement	helpCmdTasks ( core )	1790:2:46998:47017	4108342	16	True				
ANR	4108619	CallExpression	helpCmdTasks ( core )		4108342	0					
ANR	4108620	Callee	helpCmdTasks		4108342	0					
ANR	4108621	Identifier	helpCmdTasks		4108342	0					
ANR	4108622	ArgumentList	core		4108342	1					
ANR	4108623	Argument	core		4108342	0					
ANR	4108624	Identifier	core		4108342	0					
ANR	4108625	BreakStatement	break ;	1791:2:47021:47026	4108342	17	True				
ANR	4108626	Label	case ' ' :	1792:1:47029:47037	4108342	18	True				
ANR	4108627	Label	case '_' :	1793:1:47048:47056	4108342	19	True				
ANR	4108628	Label	case 't' :	1794:1:47067:47075	4108342	20	True				
ANR	4108629	CompoundStatement		66:2:1468:1537	4108342	21					
ANR	4108630	IfStatement	if ( r_sandbox_enable ( 0 ) )		4108342	0					
ANR	4108631	Condition	r_sandbox_enable ( 0 )	1795:6:47093:47112	4108342	0	True				
ANR	4108632	CallExpression	r_sandbox_enable ( 0 )		4108342	0					
ANR	4108633	Callee	r_sandbox_enable		4108342	0					
ANR	4108634	Identifier	r_sandbox_enable		4108342	0					
ANR	4108635	ArgumentList	0		4108342	1					
ANR	4108636	Argument	0		4108342	0					
ANR	4108637	PrimaryExpression	0		4108342	0					
ANR	4108638	CompoundStatement		62:28:1388:1388	4108342	1					
ANR	4108639	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	1796:3:47120:47174	4108342	0	True				
ANR	4108640	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4108342	0					
ANR	4108641	Callee	eprintf		4108342	0					
ANR	4108642	Identifier	eprintf		4108342	0					
ANR	4108643	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4108342	1					
ANR	4108644	Argument	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108645	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4108342	0					
ANR	4108646	ReturnStatement	return 0 ;	1797:3:47179:47187	4108342	1	True				
ANR	4108647	PrimaryExpression	0		4108342	0					
ANR	4108648	IdentifierDeclStatement	"RCoreTask * task = r_core_task_new ( core , true , input + 1 , NULL , core ) ;"	1799:2:47195:47264	4108342	1	True				
ANR	4108649	IdentifierDecl	"* task = r_core_task_new ( core , true , input + 1 , NULL , core )"		4108342	0					
ANR	4108650	IdentifierDeclType	RCoreTask *		4108342	0					
ANR	4108651	Identifier	task		4108342	1					
ANR	4108652	AssignmentExpression	"* task = r_core_task_new ( core , true , input + 1 , NULL , core )"		4108342	2		=			
ANR	4108653	Identifier	task		4108342	0					
ANR	4108654	CallExpression	"r_core_task_new ( core , true , input + 1 , NULL , core )"		4108342	1					
ANR	4108655	Callee	r_core_task_new		4108342	0					
ANR	4108656	Identifier	r_core_task_new		4108342	0					
ANR	4108657	ArgumentList	core		4108342	1					
ANR	4108658	Argument	core		4108342	0					
ANR	4108659	Identifier	core		4108342	0					
ANR	4108660	Argument	true		4108342	1					
ANR	4108661	Identifier	true		4108342	0					
ANR	4108662	Argument	input + 1		4108342	2					
ANR	4108663	AdditiveExpression	input + 1		4108342	0		+			
ANR	4108664	Identifier	input		4108342	0					
ANR	4108665	PrimaryExpression	1		4108342	1					
ANR	4108666	Argument	NULL		4108342	3					
ANR	4108667	Identifier	NULL		4108342	0					
ANR	4108668	Argument	core		4108342	4					
ANR	4108669	Identifier	core		4108342	0					
ANR	4108670	IfStatement	if ( ! task )		4108342	2					
ANR	4108671	Condition	! task	1800:6:47272:47276	4108342	0	True				
ANR	4108672	UnaryOperationExpression	! task		4108342	0					
ANR	4108673	UnaryOperator	!		4108342	0					
ANR	4108674	Identifier	task		4108342	1					
ANR	4108675	CompoundStatement		67:13:1552:1552	4108342	1					
ANR	4108676	BreakStatement	break ;	1801:3:47284:47289	4108342	0	True				
ANR	4108677	ExpressionStatement	task -> transient = input [ 0 ] == 't'	1803:2:47297:47330	4108342	3	True				
ANR	4108678	AssignmentExpression	task -> transient = input [ 0 ] == 't'		4108342	0		=			
ANR	4108679	PtrMemberAccess	task -> transient		4108342	0					
ANR	4108680	Identifier	task		4108342	0					
ANR	4108681	Identifier	transient		4108342	1					
ANR	4108682	EqualityExpression	input [ 0 ] == 't'		4108342	1		==			
ANR	4108683	ArrayIndexing	input [ 0 ]		4108342	0					
ANR	4108684	Identifier	input		4108342	0					
ANR	4108685	PrimaryExpression	0		4108342	1					
ANR	4108686	PrimaryExpression	't'		4108342	1					
ANR	4108687	ExpressionStatement	"r_core_task_enqueue ( core , task )"	1804:2:47334:47366	4108342	4	True				
ANR	4108688	CallExpression	"r_core_task_enqueue ( core , task )"		4108342	0					
ANR	4108689	Callee	r_core_task_enqueue		4108342	0					
ANR	4108690	Identifier	r_core_task_enqueue		4108342	0					
ANR	4108691	ArgumentList	core		4108342	1					
ANR	4108692	Argument	core		4108342	0					
ANR	4108693	Identifier	core		4108342	0					
ANR	4108694	Argument	task		4108342	1					
ANR	4108695	Identifier	task		4108342	0					
ANR	4108696	BreakStatement	break ;	1805:2:47370:47375	4108342	5	True				
ANR	4108697	ReturnStatement	return 0 ;	1808:1:47384:47392	4108342	2	True				
ANR	4108698	PrimaryExpression	0		4108342	0					
ANR	4108699	ReturnType	static int		4108342	1					
ANR	4108700	Identifier	cmd_tasks		4108342	2					
ANR	4108701	ParameterList	"void * data , const char * input"		4108342	3					
ANR	4108702	Parameter	void * data	1734:21:45695:45704	4108342	0	True				
ANR	4108703	ParameterType	void *		4108342	0					
ANR	4108704	Identifier	data		4108342	1					
ANR	4108705	Parameter	const char * input	1734:33:45707:45723	4108342	1	True				
ANR	4108706	ParameterType	const char *		4108342	0					
ANR	4108707	Identifier	input		4108342	1					
ANR	4108708	CFGEntryNode	ENTRY		4108342		True				
ANR	4108709	CFGExitNode	EXIT		4108342		True				
ANR	4108710	Symbol	NULL		4108342						
ANR	4108711	Symbol	data		4108342						
ANR	4108712	Symbol	r_core_task_get_incref		4108342						
ANR	4108713	Symbol	r_sandbox_enable		4108342						
ANR	4108714	Symbol	r_core_task_new		4108342						
ANR	4108715	Symbol	* input		4108342						
ANR	4108716	Symbol	* core		4108342						
ANR	4108717	Symbol	tid		4108342						
ANR	4108718	Symbol	r_num_math		4108342						
ANR	4108719	Symbol	input		4108342						
ANR	4108720	Symbol	core		4108342						
ANR	4108721	Symbol	task		4108342						
ANR	4108722	Symbol	task -> res		4108342						
ANR	4108723	Symbol	true		4108342						
ANR	4108724	Symbol	task -> transient		4108342						
ANR	4108725	Symbol	core -> num		4108342						
ANR	4108726	Symbol	core -> current_task		4108342						
ANR	4108727	Symbol	* task		4108342						
ANR	4108728	Function	cmd_pointer	1811:0:47397:47983							
ANR	4108729	FunctionDef	"cmd_pointer (void * data , const char * input)"		4108728	0					
ANR	4108730	CompoundStatement		1811:54:47451:47983	4108728	0					
ANR	4108731	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1812:1:47454:47481	4108728	0	True				
ANR	4108732	IdentifierDecl	* core = ( RCore * ) data		4108728	0					
ANR	4108733	IdentifierDeclType	RCore *		4108728	0					
ANR	4108734	Identifier	core		4108728	1					
ANR	4108735	AssignmentExpression	* core = ( RCore * ) data		4108728	2		=			
ANR	4108736	Identifier	core		4108728	0					
ANR	4108737	CastExpression	( RCore * ) data		4108728	1					
ANR	4108738	CastTarget	RCore *		4108728	0					
ANR	4108739	Identifier	data		4108728	1					
ANR	4108740	IdentifierDeclStatement	int ret = true ;	1813:1:47484:47498	4108728	1	True				
ANR	4108741	IdentifierDecl	ret = true		4108728	0					
ANR	4108742	IdentifierDeclType	int		4108728	0					
ANR	4108743	Identifier	ret		4108728	1					
ANR	4108744	AssignmentExpression	ret = true		4108728	2		=			
ANR	4108745	Identifier	true		4108728	0					
ANR	4108746	Identifier	true		4108728	1					
ANR	4108747	IdentifierDeclStatement	"char * str , * eq ;"	1814:1:47501:47515	4108728	2	True				
ANR	4108748	IdentifierDecl	* str		4108728	0					
ANR	4108749	IdentifierDeclType	char *		4108728	0					
ANR	4108750	Identifier	str		4108728	1					
ANR	4108751	IdentifierDecl	* eq		4108728	1					
ANR	4108752	IdentifierDeclType	char *		4108728	0					
ANR	4108753	Identifier	eq		4108728	1					
ANR	4108754	ExpressionStatement	input = r_str_trim_ro ( input )	1815:1:47518:47547	4108728	3	True				
ANR	4108755	AssignmentExpression	input = r_str_trim_ro ( input )		4108728	0		=			
ANR	4108756	Identifier	input		4108728	0					
ANR	4108757	CallExpression	r_str_trim_ro ( input )		4108728	1					
ANR	4108758	Callee	r_str_trim_ro		4108728	0					
ANR	4108759	Identifier	r_str_trim_ro		4108728	0					
ANR	4108760	ArgumentList	input		4108728	1					
ANR	4108761	Argument	input		4108728	0					
ANR	4108762	Identifier	input		4108728	0					
ANR	4108763	WhileStatement	while ( * input == ' ' )		4108728	4					
ANR	4108764	Condition	* input == ' '	1816:8:47557:47569	4108728	0	True				
ANR	4108765	EqualityExpression	* input == ' '		4108728	0		==			
ANR	4108766	UnaryOperationExpression	* input		4108728	0					
ANR	4108767	UnaryOperator	*		4108728	0					
ANR	4108768	Identifier	input		4108728	1					
ANR	4108769	PrimaryExpression	' '		4108728	1					
ANR	4108770	CompoundStatement		6:23:120:120	4108728	1					
ANR	4108771	ExpressionStatement	input ++	1817:2:47576:47583	4108728	0	True				
ANR	4108772	PostIncDecOperationExpression	input ++		4108728	0					
ANR	4108773	Identifier	input		4108728	0					
ANR	4108774	IncDec	++		4108728	1					
ANR	4108775	IfStatement	if ( ! * input || * input == '?' )		4108728	5					
ANR	4108776	Condition	! * input || * input == '?'	1819:5:47593:47616	4108728	0	True				
ANR	4108777	OrExpression	! * input || * input == '?'		4108728	0		||			
ANR	4108778	UnaryOperationExpression	! * input		4108728	0					
ANR	4108779	UnaryOperator	!		4108728	0					
ANR	4108780	UnaryOperationExpression	* input		4108728	1					
ANR	4108781	UnaryOperator	*		4108728	0					
ANR	4108782	Identifier	input		4108728	1					
ANR	4108783	EqualityExpression	* input == '?'		4108728	1		==			
ANR	4108784	UnaryOperationExpression	* input		4108728	0					
ANR	4108785	UnaryOperator	*		4108728	0					
ANR	4108786	Identifier	input		4108728	1					
ANR	4108787	PrimaryExpression	'?'		4108728	1					
ANR	4108788	CompoundStatement		9:31:167:167	4108728	1					
ANR	4108789	ExpressionStatement	"r_core_cmd_help ( core , help_msg_star )"	1820:2:47623:47660	4108728	0	True				
ANR	4108790	CallExpression	"r_core_cmd_help ( core , help_msg_star )"		4108728	0					
ANR	4108791	Callee	r_core_cmd_help		4108728	0					
ANR	4108792	Identifier	r_core_cmd_help		4108728	0					
ANR	4108793	ArgumentList	core		4108728	1					
ANR	4108794	Argument	core		4108728	0					
ANR	4108795	Identifier	core		4108728	0					
ANR	4108796	Argument	help_msg_star		4108728	1					
ANR	4108797	Identifier	help_msg_star		4108728	0					
ANR	4108798	ReturnStatement	return ret ;	1821:2:47664:47674	4108728	1	True				
ANR	4108799	Identifier	ret		4108728	0					
ANR	4108800	ExpressionStatement	str = strdup ( input )	1823:1:47680:47700	4108728	6	True				
ANR	4108801	AssignmentExpression	str = strdup ( input )		4108728	0		=			
ANR	4108802	Identifier	str		4108728	0					
ANR	4108803	CallExpression	strdup ( input )		4108728	1					
ANR	4108804	Callee	strdup		4108728	0					
ANR	4108805	Identifier	strdup		4108728	0					
ANR	4108806	ArgumentList	input		4108728	1					
ANR	4108807	Argument	input		4108728	0					
ANR	4108808	Identifier	input		4108728	0					
ANR	4108809	ExpressionStatement	"eq = strchr ( str , '=' )"	1824:1:47703:47725	4108728	7	True				
ANR	4108810	AssignmentExpression	"eq = strchr ( str , '=' )"		4108728	0		=			
ANR	4108811	Identifier	eq		4108728	0					
ANR	4108812	CallExpression	"strchr ( str , '=' )"		4108728	1					
ANR	4108813	Callee	strchr		4108728	0					
ANR	4108814	Identifier	strchr		4108728	0					
ANR	4108815	ArgumentList	str		4108728	1					
ANR	4108816	Argument	str		4108728	0					
ANR	4108817	Identifier	str		4108728	0					
ANR	4108818	Argument	'='		4108728	1					
ANR	4108819	PrimaryExpression	'='		4108728	0					
ANR	4108820	IfStatement	if ( eq )		4108728	8					
ANR	4108821	Condition	eq	1825:5:47732:47733	4108728	0	True				
ANR	4108822	Identifier	eq		4108728	0					
ANR	4108823	CompoundStatement		15:9:284:284	4108728	1					
ANR	4108824	ExpressionStatement	* eq ++ = 0	1826:2:47740:47749	4108728	0	True				
ANR	4108825	AssignmentExpression	* eq ++ = 0		4108728	0		=			
ANR	4108826	UnaryOperationExpression	* eq ++		4108728	0					
ANR	4108827	UnaryOperator	*		4108728	0					
ANR	4108828	PostIncDecOperationExpression	eq ++		4108728	1					
ANR	4108829	Identifier	eq		4108728	0					
ANR	4108830	IncDec	++		4108728	1					
ANR	4108831	PrimaryExpression	0		4108728	1					
ANR	4108832	IfStatement	"if ( ! strncmp ( eq , ""0x"" , 2 ) )"		4108728	1					
ANR	4108833	Condition	"! strncmp ( eq , ""0x"" , 2 )"	1827:6:47757:47778	4108728	0	True				
ANR	4108834	UnaryOperationExpression	"! strncmp ( eq , ""0x"" , 2 )"		4108728	0					
ANR	4108835	UnaryOperator	!		4108728	0					
ANR	4108836	CallExpression	"strncmp ( eq , ""0x"" , 2 )"		4108728	1					
ANR	4108837	Callee	strncmp		4108728	0					
ANR	4108838	Identifier	strncmp		4108728	0					
ANR	4108839	ArgumentList	eq		4108728	1					
ANR	4108840	Argument	eq		4108728	0					
ANR	4108841	Identifier	eq		4108728	0					
ANR	4108842	Argument	"""0x"""		4108728	1					
ANR	4108843	PrimaryExpression	"""0x"""		4108728	0					
ANR	4108844	Argument	2		4108728	2					
ANR	4108845	PrimaryExpression	2		4108728	0					
ANR	4108846	CompoundStatement		17:30:329:329	4108728	1					
ANR	4108847	ExpressionStatement	"ret = r_core_cmdf ( core , ""wv %s@%s"" , eq , str )"	1828:3:47786:47831	4108728	0	True				
ANR	4108848	AssignmentExpression	"ret = r_core_cmdf ( core , ""wv %s@%s"" , eq , str )"		4108728	0		=			
ANR	4108849	Identifier	ret		4108728	0					
ANR	4108850	CallExpression	"r_core_cmdf ( core , ""wv %s@%s"" , eq , str )"		4108728	1					
ANR	4108851	Callee	r_core_cmdf		4108728	0					
ANR	4108852	Identifier	r_core_cmdf		4108728	0					
ANR	4108853	ArgumentList	core		4108728	1					
ANR	4108854	Argument	core		4108728	0					
ANR	4108855	Identifier	core		4108728	0					
ANR	4108856	Argument	"""wv %s@%s"""		4108728	1					
ANR	4108857	PrimaryExpression	"""wv %s@%s"""		4108728	0					
ANR	4108858	Argument	eq		4108728	2					
ANR	4108859	Identifier	eq		4108728	0					
ANR	4108860	Argument	str		4108728	3					
ANR	4108861	Identifier	str		4108728	0					
ANR	4108862	ElseStatement	else		4108728	0					
ANR	4108863	CompoundStatement		19:9:390:390	4108728	0					
ANR	4108864	ExpressionStatement	"ret = r_core_cmdf ( core , ""wx %s@%s"" , eq , str )"	1830:3:47847:47892	4108728	0	True				
ANR	4108865	AssignmentExpression	"ret = r_core_cmdf ( core , ""wx %s@%s"" , eq , str )"		4108728	0		=			
ANR	4108866	Identifier	ret		4108728	0					
ANR	4108867	CallExpression	"r_core_cmdf ( core , ""wx %s@%s"" , eq , str )"		4108728	1					
ANR	4108868	Callee	r_core_cmdf		4108728	0					
ANR	4108869	Identifier	r_core_cmdf		4108728	0					
ANR	4108870	ArgumentList	core		4108728	1					
ANR	4108871	Argument	core		4108728	0					
ANR	4108872	Identifier	core		4108728	0					
ANR	4108873	Argument	"""wx %s@%s"""		4108728	1					
ANR	4108874	PrimaryExpression	"""wx %s@%s"""		4108728	0					
ANR	4108875	Argument	eq		4108728	2					
ANR	4108876	Identifier	eq		4108728	0					
ANR	4108877	Argument	str		4108728	3					
ANR	4108878	Identifier	str		4108728	0					
ANR	4108879	ElseStatement	else		4108728	0					
ANR	4108880	CompoundStatement		22:8:454:454	4108728	0					
ANR	4108881	ExpressionStatement	"ret = r_core_cmdf ( core , ""?v [%s]"" , input )"	1833:2:47910:47952	4108728	0	True				
ANR	4108882	AssignmentExpression	"ret = r_core_cmdf ( core , ""?v [%s]"" , input )"		4108728	0		=			
ANR	4108883	Identifier	ret		4108728	0					
ANR	4108884	CallExpression	"r_core_cmdf ( core , ""?v [%s]"" , input )"		4108728	1					
ANR	4108885	Callee	r_core_cmdf		4108728	0					
ANR	4108886	Identifier	r_core_cmdf		4108728	0					
ANR	4108887	ArgumentList	core		4108728	1					
ANR	4108888	Argument	core		4108728	0					
ANR	4108889	Identifier	core		4108728	0					
ANR	4108890	Argument	"""?v [%s]"""		4108728	1					
ANR	4108891	PrimaryExpression	"""?v [%s]"""		4108728	0					
ANR	4108892	Argument	input		4108728	2					
ANR	4108893	Identifier	input		4108728	0					
ANR	4108894	ExpressionStatement	free ( str )	1835:1:47958:47968	4108728	9	True				
ANR	4108895	CallExpression	free ( str )		4108728	0					
ANR	4108896	Callee	free		4108728	0					
ANR	4108897	Identifier	free		4108728	0					
ANR	4108898	ArgumentList	str		4108728	1					
ANR	4108899	Argument	str		4108728	0					
ANR	4108900	Identifier	str		4108728	0					
ANR	4108901	ReturnStatement	return ret ;	1836:1:47971:47981	4108728	10	True				
ANR	4108902	Identifier	ret		4108728	0					
ANR	4108903	ReturnType	static int		4108728	1					
ANR	4108904	Identifier	cmd_pointer		4108728	2					
ANR	4108905	ParameterList	"void * data , const char * input"		4108728	3					
ANR	4108906	Parameter	void * data	1811:23:47420:47429	4108728	0	True				
ANR	4108907	ParameterType	void *		4108728	0					
ANR	4108908	Identifier	data		4108728	1					
ANR	4108909	Parameter	const char * input	1811:35:47432:47448	4108728	1	True				
ANR	4108910	ParameterType	const char *		4108728	0					
ANR	4108911	Identifier	input		4108728	1					
ANR	4108912	CFGEntryNode	ENTRY		4108728		True				
ANR	4108913	CFGExitNode	EXIT		4108728		True				
ANR	4108914	Symbol	ret		4108728						
ANR	4108915	Symbol	data		4108728						
ANR	4108916	Symbol	r_core_cmdf		4108728						
ANR	4108917	Symbol	* input		4108728						
ANR	4108918	Symbol	strchr		4108728						
ANR	4108919	Symbol	eq		4108728						
ANR	4108920	Symbol	str		4108728						
ANR	4108921	Symbol	input		4108728						
ANR	4108922	Symbol	core		4108728						
ANR	4108923	Symbol	strncmp		4108728						
ANR	4108924	Symbol	true		4108728						
ANR	4108925	Symbol	r_str_trim_ro		4108728						
ANR	4108926	Symbol	strdup		4108728						
ANR	4108927	Symbol	help_msg_star		4108728						
ANR	4108928	Symbol	* eq ++		4108728						
ANR	4108929	Function	cmd_env	1839:0:47986:48221							
ANR	4108930	FunctionDef	"cmd_env (void * data , const char * input)"		4108929	0					
ANR	4108931	CompoundStatement		1839:50:48036:48221	4108929	0					
ANR	4108932	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	1840:1:48039:48065	4108929	0	True				
ANR	4108933	IdentifierDecl	* core = ( RCore * ) data		4108929	0					
ANR	4108934	IdentifierDeclType	RCore *		4108929	0					
ANR	4108935	Identifier	core		4108929	1					
ANR	4108936	AssignmentExpression	* core = ( RCore * ) data		4108929	2		=			
ANR	4108937	Identifier	core		4108929	0					
ANR	4108938	CastExpression	( RCore * ) data		4108929	1					
ANR	4108939	CastTarget	RCore *		4108929	0					
ANR	4108940	Identifier	data		4108929	1					
ANR	4108941	IdentifierDeclStatement	int ret = true ;	1841:1:48068:48082	4108929	1	True				
ANR	4108942	IdentifierDecl	ret = true		4108929	0					
ANR	4108943	IdentifierDeclType	int		4108929	0					
ANR	4108944	Identifier	ret		4108929	1					
ANR	4108945	AssignmentExpression	ret = true		4108929	2		=			
ANR	4108946	Identifier	true		4108929	0					
ANR	4108947	Identifier	true		4108929	1					
ANR	4108948	SwitchStatement	switch ( * input )		4108929	2					
ANR	4108949	Condition	* input	1842:9:48093:48098	4108929	0	True				
ANR	4108950	UnaryOperationExpression	* input		4108929	0					
ANR	4108951	UnaryOperator	*		4108929	0					
ANR	4108952	Identifier	input		4108929	1					
ANR	4108953	CompoundStatement		4:17:64:64	4108929	1					
ANR	4108954	Label	case '?' :	1843:1:48104:48112	4108929	0	True				
ANR	4108955	ExpressionStatement	cmd_help_percent ( core )	1844:2:48116:48139	4108929	1	True				
ANR	4108956	CallExpression	cmd_help_percent ( core )		4108929	0					
ANR	4108957	Callee	cmd_help_percent		4108929	0					
ANR	4108958	Identifier	cmd_help_percent		4108929	0					
ANR	4108959	ArgumentList	core		4108929	1					
ANR	4108960	Argument	core		4108929	0					
ANR	4108961	Identifier	core		4108929	0					
ANR	4108962	BreakStatement	break ;	1845:2:48143:48148	4108929	2	True				
ANR	4108963	Label	default :	1846:1:48151:48158	4108929	3	True				
ANR	4108964	Identifier	default		4108929	0					
ANR	4108965	ExpressionStatement	"ret = r_core_cmdf ( core , ""env %s"" , input )"	1847:2:48162:48203	4108929	4	True				
ANR	4108966	AssignmentExpression	"ret = r_core_cmdf ( core , ""env %s"" , input )"		4108929	0		=			
ANR	4108967	Identifier	ret		4108929	0					
ANR	4108968	CallExpression	"r_core_cmdf ( core , ""env %s"" , input )"		4108929	1					
ANR	4108969	Callee	r_core_cmdf		4108929	0					
ANR	4108970	Identifier	r_core_cmdf		4108929	0					
ANR	4108971	ArgumentList	core		4108929	1					
ANR	4108972	Argument	core		4108929	0					
ANR	4108973	Identifier	core		4108929	0					
ANR	4108974	Argument	"""env %s"""		4108929	1					
ANR	4108975	PrimaryExpression	"""env %s"""		4108929	0					
ANR	4108976	Argument	input		4108929	2					
ANR	4108977	Identifier	input		4108929	0					
ANR	4108978	ReturnStatement	return ret ;	1849:1:48209:48219	4108929	3	True				
ANR	4108979	Identifier	ret		4108929	0					
ANR	4108980	ReturnType	static int		4108929	1					
ANR	4108981	Identifier	cmd_env		4108929	2					
ANR	4108982	ParameterList	"void * data , const char * input"		4108929	3					
ANR	4108983	Parameter	void * data	1839:19:48005:48014	4108929	0	True				
ANR	4108984	ParameterType	void *		4108929	0					
ANR	4108985	Identifier	data		4108929	1					
ANR	4108986	Parameter	const char * input	1839:31:48017:48033	4108929	1	True				
ANR	4108987	ParameterType	const char *		4108929	0					
ANR	4108988	Identifier	input		4108929	1					
ANR	4108989	CFGEntryNode	ENTRY		4108929		True				
ANR	4108990	CFGExitNode	EXIT		4108929		True				
ANR	4108991	Symbol	ret		4108929						
ANR	4108992	Symbol	input		4108929						
ANR	4108993	Symbol	core		4108929						
ANR	4108994	Symbol	data		4108929						
ANR	4108995	Symbol	r_core_cmdf		4108929						
ANR	4108996	Symbol	true		4108929						
ANR	4108997	Symbol	* input		4108929						
ANR	4108998	ClassDef	autocomplete_flag_map_t	1852:7:48231:49227							
ANR	4108999	DeclStmt									
ANR	4109000	Decl							const char	const char *	name
ANR	4109001	DeclStmt									
ANR	4109002	Decl							const char	const char *	desc
ANR	4109003	DeclStmt									
ANR	4109004	Decl							int	int	type
ANR	4109005	DeclStmt									
ANR	4109006	Decl							autocomplete_flag_map_t	autocomplete_flag_map_t [ ]	autocomplete_flags
ANR	4109007	Function	print_dict	1874:0:49230:49720							
ANR	4109008	FunctionDef	"print_dict (RCoreAutocomplete * a , int sub)"		4109007	0					
ANR	4109009	CompoundStatement		1874:61:49291:49720	4109007	0					
ANR	4109010	IfStatement	if ( ! a )		4109007	0					
ANR	4109011	Condition	! a	1875:5:49298:49299	4109007	0	True				
ANR	4109012	UnaryOperationExpression	! a		4109007	0					
ANR	4109013	UnaryOperator	!		4109007	0					
ANR	4109014	Identifier	a		4109007	1					
ANR	4109015	CompoundStatement		2:9:10:10	4109007	1					
ANR	4109016	ReturnStatement	return ;	1876:2:49306:49312	4109007	0	True				
ANR	4109017	IdentifierDeclStatement	"int i , j ;"	1878:1:49318:49326	4109007	1	True				
ANR	4109018	IdentifierDecl	i		4109007	0					
ANR	4109019	IdentifierDeclType	int		4109007	0					
ANR	4109020	Identifier	i		4109007	1					
ANR	4109021	IdentifierDecl	j		4109007	1					
ANR	4109022	IdentifierDeclType	int		4109007	0					
ANR	4109023	Identifier	j		4109007	1					
ANR	4109024	IdentifierDeclStatement	"const char * name = ""unknown"" ;"	1879:1:49329:49357	4109007	2	True				
ANR	4109025	IdentifierDecl	"* name = ""unknown"""		4109007	0					
ANR	4109026	IdentifierDeclType	const char *		4109007	0					
ANR	4109027	Identifier	name		4109007	1					
ANR	4109028	AssignmentExpression	"* name = ""unknown"""		4109007	2		=			
ANR	4109029	Identifier	name		4109007	0					
ANR	4109030	PrimaryExpression	"""unknown"""		4109007	1					
ANR	4109031	ForStatement	for ( i = 0 ; i < a -> n_subcmds ; ++ i )		4109007	3					
ANR	4109032	ForInit	i = 0 ;	1880:6:49365:49370	4109007	0	True				
ANR	4109033	AssignmentExpression	i = 0		4109007	0		=			
ANR	4109034	Identifier	i		4109007	0					
ANR	4109035	PrimaryExpression	0		4109007	1					
ANR	4109036	Condition	i < a -> n_subcmds	1880:13:49372:49387	4109007	1	True				
ANR	4109037	RelationalExpression	i < a -> n_subcmds		4109007	0		<			
ANR	4109038	Identifier	i		4109007	0					
ANR	4109039	PtrMemberAccess	a -> n_subcmds		4109007	1					
ANR	4109040	Identifier	a		4109007	0					
ANR	4109041	Identifier	n_subcmds		4109007	1					
ANR	4109042	UnaryExpression	++ i	1880:31:49390:49392	4109007	2	True				
ANR	4109043	IncDec	++		4109007	0					
ANR	4109044	Identifier	i		4109007	1					
ANR	4109045	CompoundStatement		8:2:107:143	4109007	3					
ANR	4109046	IdentifierDeclStatement	RCoreAutocomplete * b = a -> subcmds [ i ] ;	1881:2:49399:49435	4109007	0	True				
ANR	4109047	IdentifierDecl	* b = a -> subcmds [ i ]		4109007	0					
ANR	4109048	IdentifierDeclType	RCoreAutocomplete *		4109007	0					
ANR	4109049	Identifier	b		4109007	1					
ANR	4109050	AssignmentExpression	* b = a -> subcmds [ i ]		4109007	2		=			
ANR	4109051	Identifier	b		4109007	0					
ANR	4109052	ArrayIndexing	a -> subcmds [ i ]		4109007	1					
ANR	4109053	PtrMemberAccess	a -> subcmds		4109007	0					
ANR	4109054	Identifier	a		4109007	0					
ANR	4109055	Identifier	subcmds		4109007	1					
ANR	4109056	Identifier	i		4109007	1					
ANR	4109057	IfStatement	if ( b -> locked )		4109007	1					
ANR	4109058	Condition	b -> locked	1882:6:49443:49451	4109007	0	True				
ANR	4109059	PtrMemberAccess	b -> locked		4109007	0					
ANR	4109060	Identifier	b		4109007	0					
ANR	4109061	Identifier	locked		4109007	1					
ANR	4109062	CompoundStatement		9:17:162:162	4109007	1					
ANR	4109063	ContinueStatement	continue ;	1883:3:49459:49467	4109007	0	True				
ANR	4109064	ForStatement	for ( j = 0 ; j < R_CORE_AUTOCMPLT_END ; ++ j )		4109007	2					
ANR	4109065	ForInit	j = 0 ;	1885:7:49480:49485	4109007	0	True				
ANR	4109066	AssignmentExpression	j = 0		4109007	0		=			
ANR	4109067	Identifier	j		4109007	0					
ANR	4109068	PrimaryExpression	0		4109007	1					
ANR	4109069	Condition	j < R_CORE_AUTOCMPLT_END	1885:14:49487:49510	4109007	1	True				
ANR	4109070	RelationalExpression	j < R_CORE_AUTOCMPLT_END		4109007	0		<			
ANR	4109071	Identifier	j		4109007	0					
ANR	4109072	Identifier	R_CORE_AUTOCMPLT_END		4109007	1					
ANR	4109073	UnaryExpression	++ j	1885:40:49513:49515	4109007	2	True				
ANR	4109074	IncDec	++		4109007	0					
ANR	4109075	Identifier	j		4109007	1					
ANR	4109076	CompoundStatement		12:45:226:226	4109007	3					
ANR	4109077	IfStatement	if ( b -> type == autocomplete_flags [ j ] . type )		4109007	0					
ANR	4109078	Condition	b -> type == autocomplete_flags [ j ] . type	1886:7:49527:49563	4109007	0	True				
ANR	4109079	EqualityExpression	b -> type == autocomplete_flags [ j ] . type		4109007	0		==			
ANR	4109080	PtrMemberAccess	b -> type		4109007	0					
ANR	4109081	Identifier	b		4109007	0					
ANR	4109082	Identifier	type		4109007	1					
ANR	4109083	MemberAccess	autocomplete_flags [ j ] . type		4109007	1					
ANR	4109084	ArrayIndexing	autocomplete_flags [ j ]		4109007	0					
ANR	4109085	Identifier	autocomplete_flags		4109007	0					
ANR	4109086	Identifier	j		4109007	1					
ANR	4109087	Identifier	type		4109007	1					
ANR	4109088	CompoundStatement		13:46:274:274	4109007	1					
ANR	4109089	ExpressionStatement	name = autocomplete_flags [ j ] . name	1887:4:49572:49605	4109007	0	True				
ANR	4109090	AssignmentExpression	name = autocomplete_flags [ j ] . name		4109007	0		=			
ANR	4109091	Identifier	name		4109007	0					
ANR	4109092	MemberAccess	autocomplete_flags [ j ] . name		4109007	1					
ANR	4109093	ArrayIndexing	autocomplete_flags [ j ]		4109007	0					
ANR	4109094	Identifier	autocomplete_flags		4109007	0					
ANR	4109095	Identifier	j		4109007	1					
ANR	4109096	Identifier	name		4109007	1					
ANR	4109097	BreakStatement	break ;	1888:4:49611:49616	4109007	1	True				
ANR	4109098	ExpressionStatement	"eprintf ( ""[%3d] %s: '%s'\\n"" , sub , name , b -> cmd )"	1891:2:49629:49676	4109007	3	True				
ANR	4109099	CallExpression	"eprintf ( ""[%3d] %s: '%s'\\n"" , sub , name , b -> cmd )"		4109007	0					
ANR	4109100	Callee	eprintf		4109007	0					
ANR	4109101	Identifier	eprintf		4109007	0					
ANR	4109102	ArgumentList	"""[%3d] %s: '%s'\\n"""		4109007	1					
ANR	4109103	Argument	"""[%3d] %s: '%s'\\n"""		4109007	0					
ANR	4109104	PrimaryExpression	"""[%3d] %s: '%s'\\n"""		4109007	0					
ANR	4109105	Argument	sub		4109007	1					
ANR	4109106	Identifier	sub		4109007	0					
ANR	4109107	Argument	name		4109007	2					
ANR	4109108	Identifier	name		4109007	0					
ANR	4109109	Argument	b -> cmd		4109007	3					
ANR	4109110	PtrMemberAccess	b -> cmd		4109007	0					
ANR	4109111	Identifier	b		4109007	0					
ANR	4109112	Identifier	cmd		4109007	1					
ANR	4109113	ExpressionStatement	"print_dict ( a -> subcmds [ i ] , sub + 1 )"	1892:2:49680:49715	4109007	4	True				
ANR	4109114	CallExpression	"print_dict ( a -> subcmds [ i ] , sub + 1 )"		4109007	0					
ANR	4109115	Callee	print_dict		4109007	0					
ANR	4109116	Identifier	print_dict		4109007	0					
ANR	4109117	ArgumentList	a -> subcmds [ i ]		4109007	1					
ANR	4109118	Argument	a -> subcmds [ i ]		4109007	0					
ANR	4109119	ArrayIndexing	a -> subcmds [ i ]		4109007	0					
ANR	4109120	PtrMemberAccess	a -> subcmds		4109007	0					
ANR	4109121	Identifier	a		4109007	0					
ANR	4109122	Identifier	subcmds		4109007	1					
ANR	4109123	Identifier	i		4109007	1					
ANR	4109124	Argument	sub + 1		4109007	1					
ANR	4109125	AdditiveExpression	sub + 1		4109007	0		+			
ANR	4109126	Identifier	sub		4109007	0					
ANR	4109127	PrimaryExpression	1		4109007	1					
ANR	4109128	ReturnType	static inline void		4109007	1					
ANR	4109129	Identifier	print_dict		4109007	2					
ANR	4109130	ParameterList	"RCoreAutocomplete * a , int sub"		4109007	3					
ANR	4109131	Parameter	RCoreAutocomplete * a	1874:30:49260:49279	4109007	0	True				
ANR	4109132	ParameterType	RCoreAutocomplete *		4109007	0					
ANR	4109133	Identifier	a		4109007	1					
ANR	4109134	Parameter	int sub	1874:52:49282:49288	4109007	1	True				
ANR	4109135	ParameterType	int		4109007	0					
ANR	4109136	Identifier	sub		4109007	1					
ANR	4109137	CFGEntryNode	ENTRY		4109007		True				
ANR	4109138	CFGExitNode	EXIT		4109007		True				
ANR	4109139	Symbol	autocomplete_flags		4109007						
ANR	4109140	Symbol	a		4109007						
ANR	4109141	Symbol	sub		4109007						
ANR	4109142	Symbol	b		4109007						
ANR	4109143	Symbol	a -> subcmds		4109007						
ANR	4109144	Symbol	i		4109007						
ANR	4109145	Symbol	autocomplete_flags [ j ] . type		4109007						
ANR	4109146	Symbol	j		4109007						
ANR	4109147	Symbol	* * a		4109007						
ANR	4109148	Symbol	* a		4109007						
ANR	4109149	Symbol	a -> n_subcmds		4109007						
ANR	4109150	Symbol	* b		4109007						
ANR	4109151	Symbol	* autocomplete_flags		4109007						
ANR	4109152	Symbol	* a -> subcmds		4109007						
ANR	4109153	Symbol	* i		4109007						
ANR	4109154	Symbol	b -> locked		4109007						
ANR	4109155	Symbol	R_CORE_AUTOCMPLT_END		4109007						
ANR	4109156	Symbol	* j		4109007						
ANR	4109157	Symbol	b -> cmd		4109007						
ANR	4109158	Symbol	name		4109007						
ANR	4109159	Symbol	autocomplete_flags [ j ] . name		4109007						
ANR	4109160	Symbol	b -> type		4109007						
ANR	4109161	Function	autocomplete_type	1896:0:49723:50036							
ANR	4109162	FunctionDef	autocomplete_type (const char * strflag)		4109161	0					
ANR	4109163	CompoundStatement		1896:50:49773:50036	4109161	0					
ANR	4109164	IdentifierDeclStatement	int i ;	1897:1:49776:49781	4109161	0	True				
ANR	4109165	IdentifierDecl	i		4109161	0					
ANR	4109166	IdentifierDeclType	int		4109161	0					
ANR	4109167	Identifier	i		4109161	1					
ANR	4109168	ForStatement	for ( i = 0 ; i < R_CORE_AUTOCMPLT_END ; ++ i )		4109161	1					
ANR	4109169	ForInit	i = 0 ;	1898:6:49789:49794	4109161	0	True				
ANR	4109170	AssignmentExpression	i = 0		4109161	0		=			
ANR	4109171	Identifier	i		4109161	0					
ANR	4109172	PrimaryExpression	0		4109161	1					
ANR	4109173	Condition	i < R_CORE_AUTOCMPLT_END	1898:13:49796:49819	4109161	1	True				
ANR	4109174	RelationalExpression	i < R_CORE_AUTOCMPLT_END		4109161	0		<			
ANR	4109175	Identifier	i		4109161	0					
ANR	4109176	Identifier	R_CORE_AUTOCMPLT_END		4109161	1					
ANR	4109177	UnaryExpression	++ i	1898:39:49822:49824	4109161	2	True				
ANR	4109178	IncDec	++		4109161	0					
ANR	4109179	Identifier	i		4109161	1					
ANR	4109180	CompoundStatement		3:44:53:53	4109161	3					
ANR	4109181	IfStatement	"if ( autocomplete_flags [ i ] . desc && ! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 ) )"		4109161	0					
ANR	4109182	Condition	"autocomplete_flags [ i ] . desc && ! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"	1899:6:49835:49913	4109161	0	True				
ANR	4109183	AndExpression	"autocomplete_flags [ i ] . desc && ! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"		4109161	0		&&			
ANR	4109184	MemberAccess	autocomplete_flags [ i ] . desc		4109161	0					
ANR	4109185	ArrayIndexing	autocomplete_flags [ i ]		4109161	0					
ANR	4109186	Identifier	autocomplete_flags		4109161	0					
ANR	4109187	Identifier	i		4109161	1					
ANR	4109188	Identifier	desc		4109161	1					
ANR	4109189	UnaryOperationExpression	"! strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"		4109161	1					
ANR	4109190	UnaryOperator	!		4109161	0					
ANR	4109191	CallExpression	"strncmp ( strflag , autocomplete_flags [ i ] . name , 5 )"		4109161	1					
ANR	4109192	Callee	strncmp		4109161	0					
ANR	4109193	Identifier	strncmp		4109161	0					
ANR	4109194	ArgumentList	strflag		4109161	1					
ANR	4109195	Argument	strflag		4109161	0					
ANR	4109196	Identifier	strflag		4109161	0					
ANR	4109197	Argument	autocomplete_flags [ i ] . name		4109161	1					
ANR	4109198	MemberAccess	autocomplete_flags [ i ] . name		4109161	0					
ANR	4109199	ArrayIndexing	autocomplete_flags [ i ]		4109161	0					
ANR	4109200	Identifier	autocomplete_flags		4109161	0					
ANR	4109201	Identifier	i		4109161	1					
ANR	4109202	Identifier	name		4109161	1					
ANR	4109203	Argument	5		4109161	2					
ANR	4109204	PrimaryExpression	5		4109161	0					
ANR	4109205	CompoundStatement		4:87:142:142	4109161	1					
ANR	4109206	ReturnStatement	return autocomplete_flags [ i ] . type ;	1900:3:49921:49954	4109161	0	True				
ANR	4109207	MemberAccess	autocomplete_flags [ i ] . type		4109161	0					
ANR	4109208	ArrayIndexing	autocomplete_flags [ i ]		4109161	0					
ANR	4109209	Identifier	autocomplete_flags		4109161	0					
ANR	4109210	Identifier	i		4109161	1					
ANR	4109211	Identifier	type		4109161	1					
ANR	4109212	ExpressionStatement	"eprintf ( ""Invalid flag '%s'\\n"" , strflag )"	1903:1:49964:50004	4109161	2	True				
ANR	4109213	CallExpression	"eprintf ( ""Invalid flag '%s'\\n"" , strflag )"		4109161	0					
ANR	4109214	Callee	eprintf		4109161	0					
ANR	4109215	Identifier	eprintf		4109161	0					
ANR	4109216	ArgumentList	"""Invalid flag '%s'\\n"""		4109161	1					
ANR	4109217	Argument	"""Invalid flag '%s'\\n"""		4109161	0					
ANR	4109218	PrimaryExpression	"""Invalid flag '%s'\\n"""		4109161	0					
ANR	4109219	Argument	strflag		4109161	1					
ANR	4109220	Identifier	strflag		4109161	0					
ANR	4109221	ReturnStatement	return R_CORE_AUTOCMPLT_END ;	1904:1:50007:50034	4109161	3	True				
ANR	4109222	Identifier	R_CORE_AUTOCMPLT_END		4109161	0					
ANR	4109223	ReturnType	static int		4109161	1					
ANR	4109224	Identifier	autocomplete_type		4109161	2					
ANR	4109225	ParameterList	const char * strflag		4109161	3					
ANR	4109226	Parameter	const char * strflag	1896:29:49752:49770	4109161	0	True				
ANR	4109227	ParameterType	const char *		4109161	0					
ANR	4109228	Identifier	strflag		4109161	1					
ANR	4109229	CFGEntryNode	ENTRY		4109161		True				
ANR	4109230	CFGExitNode	EXIT		4109161		True				
ANR	4109231	Symbol	autocomplete_flags [ i ] . desc		4109161						
ANR	4109232	Symbol	autocomplete_flags		4109161						
ANR	4109233	Symbol	strncmp		4109161						
ANR	4109234	Symbol	autocomplete_flags [ i ] . type		4109161						
ANR	4109235	Symbol	* i		4109161						
ANR	4109236	Symbol	R_CORE_AUTOCMPLT_END		4109161						
ANR	4109237	Symbol	strflag		4109161						
ANR	4109238	Symbol	i		4109161						
ANR	4109239	Symbol	autocomplete_flags [ i ] . name		4109161						
ANR	4109240	Symbol	* autocomplete_flags		4109161						
ANR	4109241	Function	cmd_autocomplete	1907:0:50039:52165							
ANR	4109242	FunctionDef	"cmd_autocomplete (RCore * core , const char * input)"		4109241	0					
ANR	4109243	CompoundStatement		1907:61:50100:52165	4109241	0					
ANR	4109244	IdentifierDeclStatement	RCoreAutocomplete * b = core -> autocomplete ;	1908:1:50103:50144	4109241	0	True				
ANR	4109245	IdentifierDecl	* b = core -> autocomplete		4109241	0					
ANR	4109246	IdentifierDeclType	RCoreAutocomplete *		4109241	0					
ANR	4109247	Identifier	b		4109241	1					
ANR	4109248	AssignmentExpression	* b = core -> autocomplete		4109241	2		=			
ANR	4109249	Identifier	b		4109241	0					
ANR	4109250	PtrMemberAccess	core -> autocomplete		4109241	1					
ANR	4109251	Identifier	core		4109241	0					
ANR	4109252	Identifier	autocomplete		4109241	1					
ANR	4109253	ExpressionStatement	input = r_str_trim_ro ( input )	1909:1:50147:50176	4109241	1	True				
ANR	4109254	AssignmentExpression	input = r_str_trim_ro ( input )		4109241	0		=			
ANR	4109255	Identifier	input		4109241	0					
ANR	4109256	CallExpression	r_str_trim_ro ( input )		4109241	1					
ANR	4109257	Callee	r_str_trim_ro		4109241	0					
ANR	4109258	Identifier	r_str_trim_ro		4109241	0					
ANR	4109259	ArgumentList	input		4109241	1					
ANR	4109260	Argument	input		4109241	0					
ANR	4109261	Identifier	input		4109241	0					
ANR	4109262	IdentifierDeclStatement	char arg [ 256 ] ;	1910:1:50179:50192	4109241	2	True				
ANR	4109263	IdentifierDecl	arg [ 256 ]		4109241	0					
ANR	4109264	IdentifierDeclType	char [ 256 ]		4109241	0					
ANR	4109265	Identifier	arg		4109241	1					
ANR	4109266	PrimaryExpression	256		4109241	2					
ANR	4109267	IfStatement	if ( ! * input )		4109241	3					
ANR	4109268	Condition	! * input	1911:5:50199:50205	4109241	0	True				
ANR	4109269	UnaryOperationExpression	! * input		4109241	0					
ANR	4109270	UnaryOperator	!		4109241	0					
ANR	4109271	UnaryOperationExpression	* input		4109241	1					
ANR	4109272	UnaryOperator	*		4109241	0					
ANR	4109273	Identifier	input		4109241	1					
ANR	4109274	CompoundStatement		5:14:107:107	4109241	1					
ANR	4109275	ExpressionStatement	"print_dict ( core -> autocomplete , 0 )"	1912:2:50212:50246	4109241	0	True				
ANR	4109276	CallExpression	"print_dict ( core -> autocomplete , 0 )"		4109241	0					
ANR	4109277	Callee	print_dict		4109241	0					
ANR	4109278	Identifier	print_dict		4109241	0					
ANR	4109279	ArgumentList	core -> autocomplete		4109241	1					
ANR	4109280	Argument	core -> autocomplete		4109241	0					
ANR	4109281	PtrMemberAccess	core -> autocomplete		4109241	0					
ANR	4109282	Identifier	core		4109241	0					
ANR	4109283	Identifier	autocomplete		4109241	1					
ANR	4109284	Argument	0		4109241	1					
ANR	4109285	PrimaryExpression	0		4109241	0					
ANR	4109286	ReturnStatement	return ;	1913:2:50250:50256	4109241	1	True				
ANR	4109287	IfStatement	if ( * input == '?' )		4109241	4					
ANR	4109288	Condition	* input == '?'	1915:5:50266:50278	4109241	0	True				
ANR	4109289	EqualityExpression	* input == '?'		4109241	0		==			
ANR	4109290	UnaryOperationExpression	* input		4109241	0					
ANR	4109291	UnaryOperator	*		4109241	0					
ANR	4109292	Identifier	input		4109241	1					
ANR	4109293	PrimaryExpression	'?'		4109241	1					
ANR	4109294	CompoundStatement		11:2:239:244	4109241	1					
ANR	4109295	ExpressionStatement	"r_core_cmd_help ( core , help_msg_triple_exclamation )"	1916:2:50285:50336	4109241	0	True				
ANR	4109296	CallExpression	"r_core_cmd_help ( core , help_msg_triple_exclamation )"		4109241	0					
ANR	4109297	Callee	r_core_cmd_help		4109241	0					
ANR	4109298	Identifier	r_core_cmd_help		4109241	0					
ANR	4109299	ArgumentList	core		4109241	1					
ANR	4109300	Argument	core		4109241	0					
ANR	4109301	Identifier	core		4109241	0					
ANR	4109302	Argument	help_msg_triple_exclamation		4109241	1					
ANR	4109303	Identifier	help_msg_triple_exclamation		4109241	0					
ANR	4109304	IdentifierDeclStatement	int i ;	1917:2:50340:50345	4109241	1	True				
ANR	4109305	IdentifierDecl	i		4109241	0					
ANR	4109306	IdentifierDeclType	int		4109241	0					
ANR	4109307	Identifier	i		4109241	1					
ANR	4109308	ExpressionStatement	"r_cons_printf ( ""|Types:\\n"" )"	1918:2:50349:50376	4109241	2	True				
ANR	4109309	CallExpression	"r_cons_printf ( ""|Types:\\n"" )"		4109241	0					
ANR	4109310	Callee	r_cons_printf		4109241	0					
ANR	4109311	Identifier	r_cons_printf		4109241	0					
ANR	4109312	ArgumentList	"""|Types:\\n"""		4109241	1					
ANR	4109313	Argument	"""|Types:\\n"""		4109241	0					
ANR	4109314	PrimaryExpression	"""|Types:\\n"""		4109241	0					
ANR	4109315	ForStatement	for ( i = 0 ; i < R_CORE_AUTOCMPLT_END ; ++ i )		4109241	3					
ANR	4109316	ForInit	i = 0 ;	1919:7:50385:50390	4109241	0	True				
ANR	4109317	AssignmentExpression	i = 0		4109241	0		=			
ANR	4109318	Identifier	i		4109241	0					
ANR	4109319	PrimaryExpression	0		4109241	1					
ANR	4109320	Condition	i < R_CORE_AUTOCMPLT_END	1919:14:50392:50415	4109241	1	True				
ANR	4109321	RelationalExpression	i < R_CORE_AUTOCMPLT_END		4109241	0		<			
ANR	4109322	Identifier	i		4109241	0					
ANR	4109323	Identifier	R_CORE_AUTOCMPLT_END		4109241	1					
ANR	4109324	UnaryExpression	++ i	1919:40:50418:50420	4109241	2	True				
ANR	4109325	IncDec	++		4109241	0					
ANR	4109326	Identifier	i		4109241	1					
ANR	4109327	CompoundStatement		13:45:322:322	4109241	3					
ANR	4109328	IfStatement	if ( autocomplete_flags [ i ] . desc )		4109241	0					
ANR	4109329	Condition	autocomplete_flags [ i ] . desc	1920:7:50432:50457	4109241	0	True				
ANR	4109330	MemberAccess	autocomplete_flags [ i ] . desc		4109241	0					
ANR	4109331	ArrayIndexing	autocomplete_flags [ i ]		4109241	0					
ANR	4109332	Identifier	autocomplete_flags		4109241	0					
ANR	4109333	Identifier	i		4109241	1					
ANR	4109334	Identifier	desc		4109241	1					
ANR	4109335	CompoundStatement		14:35:359:359	4109241	1					
ANR	4109336	ExpressionStatement	"r_cons_printf ( ""| %s     %s\\n"" , autocomplete_flags [ i ] . name , autocomplete_flags [ i ] . desc )"	1921:4:50466:50563	4109241	0	True				
ANR	4109337	CallExpression	"r_cons_printf ( ""| %s     %s\\n"" , autocomplete_flags [ i ] . name , autocomplete_flags [ i ] . desc )"		4109241	0					
ANR	4109338	Callee	r_cons_printf		4109241	0					
ANR	4109339	Identifier	r_cons_printf		4109241	0					
ANR	4109340	ArgumentList	"""| %s     %s\\n"""		4109241	1					
ANR	4109341	Argument	"""| %s     %s\\n"""		4109241	0					
ANR	4109342	PrimaryExpression	"""| %s     %s\\n"""		4109241	0					
ANR	4109343	Argument	autocomplete_flags [ i ] . name		4109241	1					
ANR	4109344	MemberAccess	autocomplete_flags [ i ] . name		4109241	0					
ANR	4109345	ArrayIndexing	autocomplete_flags [ i ]		4109241	0					
ANR	4109346	Identifier	autocomplete_flags		4109241	0					
ANR	4109347	Identifier	i		4109241	1					
ANR	4109348	Identifier	name		4109241	1					
ANR	4109349	Argument	autocomplete_flags [ i ] . desc		4109241	2					
ANR	4109350	MemberAccess	autocomplete_flags [ i ] . desc		4109241	0					
ANR	4109351	ArrayIndexing	autocomplete_flags [ i ]		4109241	0					
ANR	4109352	Identifier	autocomplete_flags		4109241	0					
ANR	4109353	Identifier	i		4109241	1					
ANR	4109354	Identifier	desc		4109241	1					
ANR	4109355	ReturnStatement	return ;	1926:2:50576:50582	4109241	4	True				
ANR	4109356	IfStatement	if ( * input == '-' )		4109241	5					
ANR	4109357	Condition	* input == '-'	1928:5:50592:50604	4109241	0	True				
ANR	4109358	EqualityExpression	* input == '-'		4109241	0		==			
ANR	4109359	UnaryOperationExpression	* input		4109241	0					
ANR	4109360	UnaryOperator	*		4109241	0					
ANR	4109361	Identifier	input		4109241	1					
ANR	4109362	PrimaryExpression	'-'		4109241	1					
ANR	4109363	CompoundStatement		23:2:510:537	4109241	1					
ANR	4109364	IdentifierDeclStatement	const char * arg = input + 1 ;	1929:2:50611:50638	4109241	0	True				
ANR	4109365	IdentifierDecl	* arg = input + 1		4109241	0					
ANR	4109366	IdentifierDeclType	const char *		4109241	0					
ANR	4109367	Identifier	arg		4109241	1					
ANR	4109368	AssignmentExpression	* arg = input + 1		4109241	2		=			
ANR	4109369	Identifier	arg		4109241	0					
ANR	4109370	AdditiveExpression	input + 1		4109241	1		+			
ANR	4109371	Identifier	input		4109241	0					
ANR	4109372	PrimaryExpression	1		4109241	1					
ANR	4109373	IfStatement	if ( ! * input )		4109241	1					
ANR	4109374	Condition	! * input	1930:6:50646:50652	4109241	0	True				
ANR	4109375	UnaryOperationExpression	! * input		4109241	0					
ANR	4109376	UnaryOperator	!		4109241	0					
ANR	4109377	UnaryOperationExpression	* input		4109241	1					
ANR	4109378	UnaryOperator	*		4109241	0					
ANR	4109379	Identifier	input		4109241	1					
ANR	4109380	CompoundStatement		24:15:554:554	4109241	1					
ANR	4109381	ExpressionStatement	"eprintf ( ""Use !!!-* or !!!-<cmd>\\n"" )"	1931:3:50660:50696	4109241	0	True				
ANR	4109382	CallExpression	"eprintf ( ""Use !!!-* or !!!-<cmd>\\n"" )"		4109241	0					
ANR	4109383	Callee	eprintf		4109241	0					
ANR	4109384	Identifier	eprintf		4109241	0					
ANR	4109385	ArgumentList	"""Use !!!-* or !!!-<cmd>\\n"""		4109241	1					
ANR	4109386	Argument	"""Use !!!-* or !!!-<cmd>\\n"""		4109241	0					
ANR	4109387	PrimaryExpression	"""Use !!!-* or !!!-<cmd>\\n"""		4109241	0					
ANR	4109388	ReturnStatement	return ;	1932:3:50701:50707	4109241	1	True				
ANR	4109389	ExpressionStatement	"r_core_autocomplete_remove ( b , arg )"	1934:2:50715:50750	4109241	2	True				
ANR	4109390	CallExpression	"r_core_autocomplete_remove ( b , arg )"		4109241	0					
ANR	4109391	Callee	r_core_autocomplete_remove		4109241	0					
ANR	4109392	Identifier	r_core_autocomplete_remove		4109241	0					
ANR	4109393	ArgumentList	b		4109241	1					
ANR	4109394	Argument	b		4109241	0					
ANR	4109395	Identifier	b		4109241	0					
ANR	4109396	Argument	arg		4109241	1					
ANR	4109397	Identifier	arg		4109241	0					
ANR	4109398	ReturnStatement	return ;	1935:2:50754:50760	4109241	3	True				
ANR	4109399	WhileStatement	while ( b )		4109241	6					
ANR	4109400	Condition	b	1937:8:50773:50773	4109241	0	True				
ANR	4109401	Identifier	b		4109241	0					
ANR	4109402	CompoundStatement		46:2:964:1026	4109241	1					
ANR	4109403	IdentifierDeclStatement	const char * end = r_str_trim_wp ( input ) ;	1938:2:50780:50819	4109241	0	True				
ANR	4109404	IdentifierDecl	* end = r_str_trim_wp ( input )		4109241	0					
ANR	4109405	IdentifierDeclType	const char *		4109241	0					
ANR	4109406	Identifier	end		4109241	1					
ANR	4109407	AssignmentExpression	* end = r_str_trim_wp ( input )		4109241	2		=			
ANR	4109408	Identifier	end		4109241	0					
ANR	4109409	CallExpression	r_str_trim_wp ( input )		4109241	1					
ANR	4109410	Callee	r_str_trim_wp		4109241	0					
ANR	4109411	Identifier	r_str_trim_wp		4109241	0					
ANR	4109412	ArgumentList	input		4109241	1					
ANR	4109413	Argument	input		4109241	0					
ANR	4109414	Identifier	input		4109241	0					
ANR	4109415	IfStatement	if ( ! end )		4109241	1					
ANR	4109416	Condition	! end	1939:6:50827:50830	4109241	0	True				
ANR	4109417	UnaryOperationExpression	! end		4109241	0					
ANR	4109418	UnaryOperator	!		4109241	0					
ANR	4109419	Identifier	end		4109241	1					
ANR	4109420	CompoundStatement		33:12:732:732	4109241	1					
ANR	4109421	BreakStatement	break ;	1940:3:50838:50843	4109241	0	True				
ANR	4109422	IfStatement	if ( ( end - input ) >= sizeof ( arg ) )		4109241	2					
ANR	4109423	Condition	( end - input ) >= sizeof ( arg )	1942:6:50855:50883	4109241	0	True				
ANR	4109424	RelationalExpression	( end - input ) >= sizeof ( arg )		4109241	0		>=			
ANR	4109425	AdditiveExpression	end - input		4109241	0		-			
ANR	4109426	Identifier	end		4109241	0					
ANR	4109427	Identifier	input		4109241	1					
ANR	4109428	SizeofExpression	sizeof ( arg )		4109241	1					
ANR	4109429	Sizeof	sizeof		4109241	0					
ANR	4109430	SizeofOperand	arg		4109241	1					
ANR	4109431	CompoundStatement		36:37:785:785	4109241	1					
ANR	4109432	ExpressionStatement	"eprintf ( ""Exceeded the max arg length (255).\\n"" )"	1944:3:50902:50950	4109241	0	True				
ANR	4109433	CallExpression	"eprintf ( ""Exceeded the max arg length (255).\\n"" )"		4109241	0					
ANR	4109434	Callee	eprintf		4109241	0					
ANR	4109435	Identifier	eprintf		4109241	0					
ANR	4109436	ArgumentList	"""Exceeded the max arg length (255).\\n"""		4109241	1					
ANR	4109437	Argument	"""Exceeded the max arg length (255).\\n"""		4109241	0					
ANR	4109438	PrimaryExpression	"""Exceeded the max arg length (255).\\n"""		4109241	0					
ANR	4109439	ReturnStatement	return ;	1945:3:50955:50961	4109241	1	True				
ANR	4109440	IfStatement	if ( end == input )		4109241	3					
ANR	4109441	Condition	end == input	1947:6:50973:50984	4109241	0	True				
ANR	4109442	EqualityExpression	end == input		4109241	0		==			
ANR	4109443	Identifier	end		4109241	0					
ANR	4109444	Identifier	input		4109241	1					
ANR	4109445	CompoundStatement		41:20:886:886	4109241	1					
ANR	4109446	BreakStatement	break ;	1948:3:50992:50997	4109241	0	True				
ANR	4109447	ExpressionStatement	"memcpy ( arg , input , end - input )"	1950:2:51005:51037	4109241	4	True				
ANR	4109448	CallExpression	"memcpy ( arg , input , end - input )"		4109241	0					
ANR	4109449	Callee	memcpy		4109241	0					
ANR	4109450	Identifier	memcpy		4109241	0					
ANR	4109451	ArgumentList	arg		4109241	1					
ANR	4109452	Argument	arg		4109241	0					
ANR	4109453	Identifier	arg		4109241	0					
ANR	4109454	Argument	input		4109241	1					
ANR	4109455	Identifier	input		4109241	0					
ANR	4109456	Argument	end - input		4109241	2					
ANR	4109457	AdditiveExpression	end - input		4109241	0		-			
ANR	4109458	Identifier	end		4109241	0					
ANR	4109459	Identifier	input		4109241	1					
ANR	4109460	ExpressionStatement	arg [ end - input ] = 0	1951:2:51041:51061	4109241	5	True				
ANR	4109461	AssignmentExpression	arg [ end - input ] = 0		4109241	0		=			
ANR	4109462	ArrayIndexing	arg [ end - input ]		4109241	0					
ANR	4109463	Identifier	arg		4109241	0					
ANR	4109464	AdditiveExpression	end - input		4109241	1		-			
ANR	4109465	Identifier	end		4109241	0					
ANR	4109466	Identifier	input		4109241	1					
ANR	4109467	PrimaryExpression	0		4109241	1					
ANR	4109468	IdentifierDeclStatement	"RCoreAutocomplete * a = r_core_autocomplete_find ( b , arg , true ) ;"	1952:2:51065:51127	4109241	6	True				
ANR	4109469	IdentifierDecl	"* a = r_core_autocomplete_find ( b , arg , true )"		4109241	0					
ANR	4109470	IdentifierDeclType	RCoreAutocomplete *		4109241	0					
ANR	4109471	Identifier	a		4109241	1					
ANR	4109472	AssignmentExpression	"* a = r_core_autocomplete_find ( b , arg , true )"		4109241	2		=			
ANR	4109473	Identifier	a		4109241	0					
ANR	4109474	CallExpression	"r_core_autocomplete_find ( b , arg , true )"		4109241	1					
ANR	4109475	Callee	r_core_autocomplete_find		4109241	0					
ANR	4109476	Identifier	r_core_autocomplete_find		4109241	0					
ANR	4109477	ArgumentList	b		4109241	1					
ANR	4109478	Argument	b		4109241	0					
ANR	4109479	Identifier	b		4109241	0					
ANR	4109480	Argument	arg		4109241	1					
ANR	4109481	Identifier	arg		4109241	0					
ANR	4109482	Argument	true		4109241	2					
ANR	4109483	Identifier	true		4109241	0					
ANR	4109484	ExpressionStatement	input = r_str_trim_ro ( end )	1953:2:51131:51158	4109241	7	True				
ANR	4109485	AssignmentExpression	input = r_str_trim_ro ( end )		4109241	0		=			
ANR	4109486	Identifier	input		4109241	0					
ANR	4109487	CallExpression	r_str_trim_ro ( end )		4109241	1					
ANR	4109488	Callee	r_str_trim_ro		4109241	0					
ANR	4109489	Identifier	r_str_trim_ro		4109241	0					
ANR	4109490	ArgumentList	end		4109241	1					
ANR	4109491	Argument	end		4109241	0					
ANR	4109492	Identifier	end		4109241	0					
ANR	4109493	IfStatement	if ( input && * input && ! a )		4109241	8					
ANR	4109494	Condition	input && * input && ! a	1954:6:51166:51186	4109241	0	True				
ANR	4109495	AndExpression	input && * input && ! a		4109241	0		&&			
ANR	4109496	Identifier	input		4109241	0					
ANR	4109497	AndExpression	* input && ! a		4109241	1		&&			
ANR	4109498	UnaryOperationExpression	* input		4109241	0					
ANR	4109499	UnaryOperator	*		4109241	0					
ANR	4109500	Identifier	input		4109241	1					
ANR	4109501	UnaryOperationExpression	! a		4109241	1					
ANR	4109502	UnaryOperator	!		4109241	0					
ANR	4109503	Identifier	a		4109241	1					
ANR	4109504	CompoundStatement		48:29:1088:1088	4109241	1					
ANR	4109505	IfStatement	"if ( b -> type == R_CORE_AUTOCMPLT_DFLT && ! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) ) )"		4109241	0					
ANR	4109506	Condition	"b -> type == R_CORE_AUTOCMPLT_DFLT && ! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"	1955:7:51198:51302	4109241	0	True				
ANR	4109507	AndExpression	"b -> type == R_CORE_AUTOCMPLT_DFLT && ! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"		4109241	0		&&			
ANR	4109508	EqualityExpression	b -> type == R_CORE_AUTOCMPLT_DFLT		4109241	0		==			
ANR	4109509	PtrMemberAccess	b -> type		4109241	0					
ANR	4109510	Identifier	b		4109241	0					
ANR	4109511	Identifier	type		4109241	1					
ANR	4109512	Identifier	R_CORE_AUTOCMPLT_DFLT		4109241	1					
ANR	4109513	UnaryOperationExpression	"! ( b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"		4109241	1					
ANR	4109514	UnaryOperator	!		4109241	0					
ANR	4109515	AssignmentExpression	"b = r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		4109241	1		=			
ANR	4109516	Identifier	b		4109241	0					
ANR	4109517	CallExpression	"r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		4109241	1					
ANR	4109518	Callee	r_core_autocomplete_add		4109241	0					
ANR	4109519	Identifier	r_core_autocomplete_add		4109241	0					
ANR	4109520	ArgumentList	b		4109241	1					
ANR	4109521	Argument	b		4109241	0					
ANR	4109522	Identifier	b		4109241	0					
ANR	4109523	Argument	arg		4109241	1					
ANR	4109524	Identifier	arg		4109241	0					
ANR	4109525	Argument	R_CORE_AUTOCMPLT_DFLT		4109241	2					
ANR	4109526	Identifier	R_CORE_AUTOCMPLT_DFLT		4109241	0					
ANR	4109527	Argument	false		4109241	3					
ANR	4109528	Identifier	false		4109241	0					
ANR	4109529	CompoundStatement		49:114:1204:1204	4109241	1					
ANR	4109530	ExpressionStatement	"eprintf ( ""ENOMEM\\n"" )"	1956:4:51311:51331	4109241	0	True				
ANR	4109531	CallExpression	"eprintf ( ""ENOMEM\\n"" )"		4109241	0					
ANR	4109532	Callee	eprintf		4109241	0					
ANR	4109533	Identifier	eprintf		4109241	0					
ANR	4109534	ArgumentList	"""ENOMEM\\n"""		4109241	1					
ANR	4109535	Argument	"""ENOMEM\\n"""		4109241	0					
ANR	4109536	PrimaryExpression	"""ENOMEM\\n"""		4109241	0					
ANR	4109537	ReturnStatement	return ;	1957:4:51337:51343	4109241	1	True				
ANR	4109538	ElseStatement	else		4109241	0					
ANR	4109539	IfStatement	if ( b -> type != R_CORE_AUTOCMPLT_DFLT )		4109241	0					
ANR	4109540	Condition	b -> type != R_CORE_AUTOCMPLT_DFLT	1958:14:51359:51390	4109241	0	True				
ANR	4109541	EqualityExpression	b -> type != R_CORE_AUTOCMPLT_DFLT		4109241	0		!=			
ANR	4109542	PtrMemberAccess	b -> type		4109241	0					
ANR	4109543	Identifier	b		4109241	0					
ANR	4109544	Identifier	type		4109241	1					
ANR	4109545	Identifier	R_CORE_AUTOCMPLT_DFLT		4109241	1					
ANR	4109546	CompoundStatement		52:48:1292:1292	4109241	1					
ANR	4109547	ExpressionStatement	"eprintf ( ""Cannot add autocomplete to '%s'. type not $dflt\\n"" , b -> cmd )"	1959:4:51399:51468	4109241	0	True				
ANR	4109548	CallExpression	"eprintf ( ""Cannot add autocomplete to '%s'. type not $dflt\\n"" , b -> cmd )"		4109241	0					
ANR	4109549	Callee	eprintf		4109241	0					
ANR	4109550	Identifier	eprintf		4109241	0					
ANR	4109551	ArgumentList	"""Cannot add autocomplete to '%s'. type not $dflt\\n"""		4109241	1					
ANR	4109552	Argument	"""Cannot add autocomplete to '%s'. type not $dflt\\n"""		4109241	0					
ANR	4109553	PrimaryExpression	"""Cannot add autocomplete to '%s'. type not $dflt\\n"""		4109241	0					
ANR	4109554	Argument	b -> cmd		4109241	1					
ANR	4109555	PtrMemberAccess	b -> cmd		4109241	0					
ANR	4109556	Identifier	b		4109241	0					
ANR	4109557	Identifier	cmd		4109241	1					
ANR	4109558	ReturnStatement	return ;	1960:4:51474:51480	4109241	1	True				
ANR	4109559	ElseStatement	else		4109241	0					
ANR	4109560	IfStatement	if ( ( ! input || ! * input ) && ! a )		4109241	0					
ANR	4109561	Condition	( ! input || ! * input ) && ! a	1962:13:51500:51524	4109241	0	True				
ANR	4109562	AndExpression	( ! input || ! * input ) && ! a		4109241	0		&&			
ANR	4109563	OrExpression	! input || ! * input		4109241	0		||			
ANR	4109564	UnaryOperationExpression	! input		4109241	0					
ANR	4109565	UnaryOperator	!		4109241	0					
ANR	4109566	Identifier	input		4109241	1					
ANR	4109567	UnaryOperationExpression	! * input		4109241	1					
ANR	4109568	UnaryOperator	!		4109241	0					
ANR	4109569	UnaryOperationExpression	* input		4109241	1					
ANR	4109570	UnaryOperator	*		4109241	0					
ANR	4109571	Identifier	input		4109241	1					
ANR	4109572	UnaryOperationExpression	! a		4109241	1					
ANR	4109573	UnaryOperator	!		4109241	0					
ANR	4109574	Identifier	a		4109241	1					
ANR	4109575	CompoundStatement		56:40:1426:1426	4109241	1					
ANR	4109576	IfStatement	if ( arg [ 0 ] == '$' )		4109241	0					
ANR	4109577	Condition	arg [ 0 ] == '$'	1963:7:51536:51548	4109241	0	True				
ANR	4109578	EqualityExpression	arg [ 0 ] == '$'		4109241	0		==			
ANR	4109579	ArrayIndexing	arg [ 0 ]		4109241	0					
ANR	4109580	Identifier	arg		4109241	0					
ANR	4109581	PrimaryExpression	0		4109241	1					
ANR	4109582	PrimaryExpression	'$'		4109241	1					
ANR	4109583	CompoundStatement		58:4:1456:1490	4109241	1					
ANR	4109584	IdentifierDeclStatement	int type = autocomplete_type ( arg ) ;	1964:4:51557:51591	4109241	0	True				
ANR	4109585	IdentifierDecl	type = autocomplete_type ( arg )		4109241	0					
ANR	4109586	IdentifierDeclType	int		4109241	0					
ANR	4109587	Identifier	type		4109241	1					
ANR	4109588	AssignmentExpression	type = autocomplete_type ( arg )		4109241	2		=			
ANR	4109589	Identifier	type		4109241	0					
ANR	4109590	CallExpression	autocomplete_type ( arg )		4109241	1					
ANR	4109591	Callee	autocomplete_type		4109241	0					
ANR	4109592	Identifier	autocomplete_type		4109241	0					
ANR	4109593	ArgumentList	arg		4109241	1					
ANR	4109594	Argument	arg		4109241	0					
ANR	4109595	Identifier	arg		4109241	0					
ANR	4109596	IfStatement	if ( type != R_CORE_AUTOCMPLT_END && ! b -> locked && ! b -> n_subcmds )		4109241	1					
ANR	4109597	Condition	type != R_CORE_AUTOCMPLT_END && ! b -> locked && ! b -> n_subcmds	1965:8:51601:51659	4109241	0	True				
ANR	4109598	AndExpression	type != R_CORE_AUTOCMPLT_END && ! b -> locked && ! b -> n_subcmds		4109241	0		&&			
ANR	4109599	EqualityExpression	type != R_CORE_AUTOCMPLT_END		4109241	0		!=			
ANR	4109600	Identifier	type		4109241	0					
ANR	4109601	Identifier	R_CORE_AUTOCMPLT_END		4109241	1					
ANR	4109602	AndExpression	! b -> locked && ! b -> n_subcmds		4109241	1		&&			
ANR	4109603	UnaryOperationExpression	! b -> locked		4109241	0					
ANR	4109604	UnaryOperator	!		4109241	0					
ANR	4109605	PtrMemberAccess	b -> locked		4109241	1					
ANR	4109606	Identifier	b		4109241	0					
ANR	4109607	Identifier	locked		4109241	1					
ANR	4109608	UnaryOperationExpression	! b -> n_subcmds		4109241	1					
ANR	4109609	UnaryOperator	!		4109241	0					
ANR	4109610	PtrMemberAccess	b -> n_subcmds		4109241	1					
ANR	4109611	Identifier	b		4109241	0					
ANR	4109612	Identifier	n_subcmds		4109241	1					
ANR	4109613	CompoundStatement		59:69:1561:1561	4109241	1					
ANR	4109614	ExpressionStatement	b -> type = type	1966:5:51669:51683	4109241	0	True				
ANR	4109615	AssignmentExpression	b -> type = type		4109241	0		=			
ANR	4109616	PtrMemberAccess	b -> type		4109241	0					
ANR	4109617	Identifier	b		4109241	0					
ANR	4109618	Identifier	type		4109241	1					
ANR	4109619	Identifier	type		4109241	1					
ANR	4109620	ElseStatement	else		4109241	0					
ANR	4109621	IfStatement	if ( b -> locked || b -> n_subcmds )		4109241	0					
ANR	4109622	Condition	b -> locked || b -> n_subcmds	1967:15:51700:51724	4109241	0	True				
ANR	4109623	OrExpression	b -> locked || b -> n_subcmds		4109241	0		||			
ANR	4109624	PtrMemberAccess	b -> locked		4109241	0					
ANR	4109625	Identifier	b		4109241	0					
ANR	4109626	Identifier	locked		4109241	1					
ANR	4109627	PtrMemberAccess	b -> n_subcmds		4109241	1					
ANR	4109628	Identifier	b		4109241	0					
ANR	4109629	Identifier	n_subcmds		4109241	1					
ANR	4109630	CompoundStatement		61:42:1626:1626	4109241	1					
ANR	4109631	IfStatement	if ( ! b -> cmd )		4109241	0					
ANR	4109632	Condition	! b -> cmd	1968:9:51738:51744	4109241	0	True				
ANR	4109633	UnaryOperationExpression	! b -> cmd		4109241	0					
ANR	4109634	UnaryOperator	!		4109241	0					
ANR	4109635	PtrMemberAccess	b -> cmd		4109241	1					
ANR	4109636	Identifier	b		4109241	0					
ANR	4109637	Identifier	cmd		4109241	1					
ANR	4109638	CompoundStatement		62:18:1646:1646	4109241	1					
ANR	4109639	ReturnStatement	return ;	1969:6:51755:51761	4109241	0	True				
ANR	4109640	ExpressionStatement	"eprintf ( ""Changing type of '%s' is forbidden.\\n"" , b -> cmd )"	1971:5:51775:51832	4109241	1	True				
ANR	4109641	CallExpression	"eprintf ( ""Changing type of '%s' is forbidden.\\n"" , b -> cmd )"		4109241	0					
ANR	4109642	Callee	eprintf		4109241	0					
ANR	4109643	Identifier	eprintf		4109241	0					
ANR	4109644	ArgumentList	"""Changing type of '%s' is forbidden.\\n"""		4109241	1					
ANR	4109645	Argument	"""Changing type of '%s' is forbidden.\\n"""		4109241	0					
ANR	4109646	PrimaryExpression	"""Changing type of '%s' is forbidden.\\n"""		4109241	0					
ANR	4109647	Argument	b -> cmd		4109241	1					
ANR	4109648	PtrMemberAccess	b -> cmd		4109241	0					
ANR	4109649	Identifier	b		4109241	0					
ANR	4109650	Identifier	cmd		4109241	1					
ANR	4109651	ElseStatement	else		4109241	0					
ANR	4109652	CompoundStatement		67:10:1749:1749	4109241	0					
ANR	4109653	IfStatement	"if ( ! r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false ) )"		4109241	0					
ANR	4109654	Condition	"! r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"	1974:8:51860:51922	4109241	0	True				
ANR	4109655	UnaryOperationExpression	"! r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		4109241	0					
ANR	4109656	UnaryOperator	!		4109241	0					
ANR	4109657	CallExpression	"r_core_autocomplete_add ( b , arg , R_CORE_AUTOCMPLT_DFLT , false )"		4109241	1					
ANR	4109658	Callee	r_core_autocomplete_add		4109241	0					
ANR	4109659	Identifier	r_core_autocomplete_add		4109241	0					
ANR	4109660	ArgumentList	b		4109241	1					
ANR	4109661	Argument	b		4109241	0					
ANR	4109662	Identifier	b		4109241	0					
ANR	4109663	Argument	arg		4109241	1					
ANR	4109664	Identifier	arg		4109241	0					
ANR	4109665	Argument	R_CORE_AUTOCMPLT_DFLT		4109241	2					
ANR	4109666	Identifier	R_CORE_AUTOCMPLT_DFLT		4109241	0					
ANR	4109667	Argument	false		4109241	3					
ANR	4109668	Identifier	false		4109241	0					
ANR	4109669	CompoundStatement		68:73:1824:1824	4109241	1					
ANR	4109670	ExpressionStatement	"eprintf ( ""ENOMEM\\n"" )"	1975:5:51932:51952	4109241	0	True				
ANR	4109671	CallExpression	"eprintf ( ""ENOMEM\\n"" )"		4109241	0					
ANR	4109672	Callee	eprintf		4109241	0					
ANR	4109673	Identifier	eprintf		4109241	0					
ANR	4109674	ArgumentList	"""ENOMEM\\n"""		4109241	1					
ANR	4109675	Argument	"""ENOMEM\\n"""		4109241	0					
ANR	4109676	PrimaryExpression	"""ENOMEM\\n"""		4109241	0					
ANR	4109677	ReturnStatement	return ;	1976:5:51959:51965	4109241	1	True				
ANR	4109678	ReturnStatement	return ;	1979:3:51981:51987	4109241	1	True				
ANR	4109679	ElseStatement	else		4109241	0					
ANR	4109680	IfStatement	if ( ( ! input || ! * input ) && a )		4109241	0					
ANR	4109681	Condition	( ! input || ! * input ) && a	1980:13:52002:52025	4109241	0	True				
ANR	4109682	AndExpression	( ! input || ! * input ) && a		4109241	0		&&			
ANR	4109683	OrExpression	! input || ! * input		4109241	0		||			
ANR	4109684	UnaryOperationExpression	! input		4109241	0					
ANR	4109685	UnaryOperator	!		4109241	0					
ANR	4109686	Identifier	input		4109241	1					
ANR	4109687	UnaryOperationExpression	! * input		4109241	1					
ANR	4109688	UnaryOperator	!		4109241	0					
ANR	4109689	UnaryOperationExpression	* input		4109241	1					
ANR	4109690	UnaryOperator	*		4109241	0					
ANR	4109691	Identifier	input		4109241	1					
ANR	4109692	Identifier	a		4109241	1					
ANR	4109693	CompoundStatement		74:39:1927:1927	4109241	1					
ANR	4109694	ReturnStatement	return ;	1982:3:52092:52098	4109241	0	True				
ANR	4109695	ElseStatement	else		4109241	0					
ANR	4109696	CompoundStatement		77:9:2008:2008	4109241	0					
ANR	4109697	ExpressionStatement	b = a	1984:3:52114:52119	4109241	0	True				
ANR	4109698	AssignmentExpression	b = a		4109241	0		=			
ANR	4109699	Identifier	b		4109241	0					
ANR	4109700	Identifier	a		4109241	1					
ANR	4109701	ExpressionStatement	"eprintf ( ""Invalid usage of !!!\\n"" )"	1987:1:52129:52163	4109241	7	True				
ANR	4109702	CallExpression	"eprintf ( ""Invalid usage of !!!\\n"" )"		4109241	0					
ANR	4109703	Callee	eprintf		4109241	0					
ANR	4109704	Identifier	eprintf		4109241	0					
ANR	4109705	ArgumentList	"""Invalid usage of !!!\\n"""		4109241	1					
ANR	4109706	Argument	"""Invalid usage of !!!\\n"""		4109241	0					
ANR	4109707	PrimaryExpression	"""Invalid usage of !!!\\n"""		4109241	0					
ANR	4109708	ReturnType	static void		4109241	1					
ANR	4109709	Identifier	cmd_autocomplete		4109241	2					
ANR	4109710	ParameterList	"RCore * core , const char * input"		4109241	3					
ANR	4109711	Parameter	RCore * core	1907:29:50068:50078	4109241	0	True				
ANR	4109712	ParameterType	RCore *		4109241	0					
ANR	4109713	Identifier	core		4109241	1					
ANR	4109714	Parameter	const char * input	1907:42:50081:50097	4109241	1	True				
ANR	4109715	ParameterType	const char *		4109241	0					
ANR	4109716	Identifier	input		4109241	1					
ANR	4109717	CFGEntryNode	ENTRY		4109241		True				
ANR	4109718	CFGExitNode	EXIT		4109241		True				
ANR	4109719	Symbol	autocomplete_flags		4109241						
ANR	4109720	Symbol	help_msg_triple_exclamation		4109241						
ANR	4109721	Symbol	b -> n_subcmds		4109241						
ANR	4109722	Symbol	* core		4109241						
ANR	4109723	Symbol	* input		4109241						
ANR	4109724	Symbol	type		4109241						
ANR	4109725	Symbol	core -> autocomplete		4109241						
ANR	4109726	Symbol	r_core_autocomplete_find		4109241						
ANR	4109727	Symbol	R_CORE_AUTOCMPLT_END		4109241						
ANR	4109728	Symbol	autocomplete_type		4109241						
ANR	4109729	Symbol	arg		4109241						
ANR	4109730	Symbol	end		4109241						
ANR	4109731	Symbol	r_str_trim_wp		4109241						
ANR	4109732	Symbol	b -> type		4109241						
ANR	4109733	Symbol	a		4109241						
ANR	4109734	Symbol	b		4109241						
ANR	4109735	Symbol	false		4109241						
ANR	4109736	Symbol	i		4109241						
ANR	4109737	Symbol	autocomplete_flags [ i ] . name		4109241						
ANR	4109738	Symbol	R_CORE_AUTOCMPLT_DFLT		4109241						
ANR	4109739	Symbol	* autocomplete_flags		4109241						
ANR	4109740	Symbol	* b		4109241						
ANR	4109741	Symbol	r_core_autocomplete_add		4109241						
ANR	4109742	Symbol	autocomplete_flags [ i ] . desc		4109241						
ANR	4109743	Symbol	core		4109241						
ANR	4109744	Symbol	input		4109241						
ANR	4109745	Symbol	* i		4109241						
ANR	4109746	Symbol	b -> locked		4109241						
ANR	4109747	Symbol	b -> cmd		4109241						
ANR	4109748	Symbol	r_str_trim_ro		4109241						
ANR	4109749	Symbol	true		4109241						
ANR	4109750	Symbol	* end		4109241						
ANR	4109751	Symbol	* arg		4109241						
ANR	4109752	Function	cmd_last	1990:0:52168:52345							
ANR	4109753	FunctionDef	"cmd_last (void * data , const char * input)"		4109752	0					
ANR	4109754	CompoundStatement		1990:51:52219:52345	4109752	0					
ANR	4109755	SwitchStatement	switch ( * input )		4109752	0					
ANR	4109756	Condition	* input	1991:9:52230:52235	4109752	0	True				
ANR	4109757	UnaryOperationExpression	* input		4109752	0					
ANR	4109758	UnaryOperator	*		4109752	0					
ANR	4109759	Identifier	input		4109752	1					
ANR	4109760	CompoundStatement		2:17:18:18	4109752	1					
ANR	4109761	Label	case 0 :	1992:1:52241:52247	4109752	0	True				
ANR	4109762	ExpressionStatement	r_cons_last ( )	1993:2:52251:52265	4109752	1	True				
ANR	4109763	CallExpression	r_cons_last ( )		4109752	0					
ANR	4109764	Callee	r_cons_last		4109752	0					
ANR	4109765	Identifier	r_cons_last		4109752	0					
ANR	4109766	ArgumentList			4109752	1					
ANR	4109767	BreakStatement	break ;	1994:2:52269:52274	4109752	2	True				
ANR	4109768	Label	default :	1995:1:52277:52284	4109752	3	True				
ANR	4109769	Identifier	default		4109752	0					
ANR	4109770	ExpressionStatement	"eprintf ( ""Usage: _  print last output\\n"" )"	1996:2:52288:52329	4109752	4	True				
ANR	4109771	CallExpression	"eprintf ( ""Usage: _  print last output\\n"" )"		4109752	0					
ANR	4109772	Callee	eprintf		4109752	0					
ANR	4109773	Identifier	eprintf		4109752	0					
ANR	4109774	ArgumentList	"""Usage: _  print last output\\n"""		4109752	1					
ANR	4109775	Argument	"""Usage: _  print last output\\n"""		4109752	0					
ANR	4109776	PrimaryExpression	"""Usage: _  print last output\\n"""		4109752	0					
ANR	4109777	ReturnStatement	return 0 ;	1998:1:52335:52343	4109752	1	True				
ANR	4109778	PrimaryExpression	0		4109752	0					
ANR	4109779	ReturnType	static int		4109752	1					
ANR	4109780	Identifier	cmd_last		4109752	2					
ANR	4109781	ParameterList	"void * data , const char * input"		4109752	3					
ANR	4109782	Parameter	void * data	1990:20:52188:52197	4109752	0	True				
ANR	4109783	ParameterType	void *		4109752	0					
ANR	4109784	Identifier	data		4109752	1					
ANR	4109785	Parameter	const char * input	1990:32:52200:52216	4109752	1	True				
ANR	4109786	ParameterType	const char *		4109752	0					
ANR	4109787	Identifier	input		4109752	1					
ANR	4109788	CFGEntryNode	ENTRY		4109752		True				
ANR	4109789	CFGExitNode	EXIT		4109752		True				
ANR	4109790	Symbol	input		4109752						
ANR	4109791	Symbol	data		4109752						
ANR	4109792	Symbol	* input		4109752						
ANR	4109793	Function	cmd_system	2001:0:52348:54782							
ANR	4109794	FunctionDef	"cmd_system (void * data , const char * input)"		4109793	0					
ANR	4109795	CompoundStatement		2001:53:52401:54782	4109793	0					
ANR	4109796	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	2002:1:52404:52430	4109793	0	True				
ANR	4109797	IdentifierDecl	* core = ( RCore * ) data		4109793	0					
ANR	4109798	IdentifierDeclType	RCore *		4109793	0					
ANR	4109799	Identifier	core		4109793	1					
ANR	4109800	AssignmentExpression	* core = ( RCore * ) data		4109793	2		=			
ANR	4109801	Identifier	core		4109793	0					
ANR	4109802	CastExpression	( RCore * ) data		4109793	1					
ANR	4109803	CastTarget	RCore *		4109793	0					
ANR	4109804	Identifier	data		4109793	1					
ANR	4109805	IdentifierDeclStatement	ut64 n ;	2003:1:52433:52439	4109793	1	True				
ANR	4109806	IdentifierDecl	n		4109793	0					
ANR	4109807	IdentifierDeclType	ut64		4109793	0					
ANR	4109808	Identifier	n		4109793	1					
ANR	4109809	IdentifierDeclStatement	int ret = 0 ;	2004:1:52442:52453	4109793	2	True				
ANR	4109810	IdentifierDecl	ret = 0		4109793	0					
ANR	4109811	IdentifierDeclType	int		4109793	0					
ANR	4109812	Identifier	ret		4109793	1					
ANR	4109813	AssignmentExpression	ret = 0		4109793	2		=			
ANR	4109814	Identifier	ret		4109793	0					
ANR	4109815	PrimaryExpression	0		4109793	1					
ANR	4109816	SwitchStatement	switch ( * input )		4109793	3					
ANR	4109817	Condition	* input	2005:9:52464:52469	4109793	0	True				
ANR	4109818	UnaryOperationExpression	* input		4109793	0					
ANR	4109819	UnaryOperator	*		4109793	0					
ANR	4109820	Identifier	input		4109793	1					
ANR	4109821	CompoundStatement		5:17:70:70	4109793	1					
ANR	4109822	Label	case '-' :	2006:1:52475:52483	4109793	0	True				
ANR	4109823	IfStatement	if ( input [ 1 ] )		4109793	1					
ANR	4109824	Condition	input [ 1 ]	2007:6:52496:52503	4109793	0	True				
ANR	4109825	ArrayIndexing	input [ 1 ]		4109793	0					
ANR	4109826	Identifier	input		4109793	0					
ANR	4109827	PrimaryExpression	1		4109793	1					
ANR	4109828	CompoundStatement		7:16:104:104	4109793	1					
ANR	4109829	ExpressionStatement	r_line_hist_free ( )	2008:3:52511:52529	4109793	0	True				
ANR	4109830	CallExpression	r_line_hist_free ( )		4109793	0					
ANR	4109831	Callee	r_line_hist_free		4109793	0					
ANR	4109832	Identifier	r_line_hist_free		4109793	0					
ANR	4109833	ArgumentList			4109793	1					
ANR	4109834	ExpressionStatement	r_line_hist_save ( R2_HOME_HISTORY )	2009:3:52534:52568	4109793	1	True				
ANR	4109835	CallExpression	r_line_hist_save ( R2_HOME_HISTORY )		4109793	0					
ANR	4109836	Callee	r_line_hist_save		4109793	0					
ANR	4109837	Identifier	r_line_hist_save		4109793	0					
ANR	4109838	ArgumentList	R2_HOME_HISTORY		4109793	1					
ANR	4109839	Argument	R2_HOME_HISTORY		4109793	0					
ANR	4109840	Identifier	R2_HOME_HISTORY		4109793	0					
ANR	4109841	ElseStatement	else		4109793	0					
ANR	4109842	CompoundStatement		10:9:177:177	4109793	0					
ANR	4109843	ExpressionStatement	r_line_hist_free ( )	2011:3:52584:52602	4109793	0	True				
ANR	4109844	CallExpression	r_line_hist_free ( )		4109793	0					
ANR	4109845	Callee	r_line_hist_free		4109793	0					
ANR	4109846	Identifier	r_line_hist_free		4109793	0					
ANR	4109847	ArgumentList			4109793	1					
ANR	4109848	BreakStatement	break ;	2013:2:52610:52615	4109793	2	True				
ANR	4109849	Label	case '=' :	2014:1:52618:52626	4109793	3	True				
ANR	4109850	IfStatement	if ( input [ 1 ] == '?' )		4109793	4					
ANR	4109851	Condition	input [ 1 ] == '?'	2015:6:52639:52653	4109793	0	True				
ANR	4109852	EqualityExpression	input [ 1 ] == '?'		4109793	0		==			
ANR	4109853	ArrayIndexing	input [ 1 ]		4109793	0					
ANR	4109854	Identifier	input		4109793	0					
ANR	4109855	PrimaryExpression	1		4109793	1					
ANR	4109856	PrimaryExpression	'?'		4109793	1					
ANR	4109857	CompoundStatement		15:23:254:254	4109793	1					
ANR	4109858	ExpressionStatement	"r_cons_printf ( ""Usage: !=[!]  - enable/disable remote commands\\n"" )"	2016:3:52661:52727	4109793	0	True				
ANR	4109859	CallExpression	"r_cons_printf ( ""Usage: !=[!]  - enable/disable remote commands\\n"" )"		4109793	0					
ANR	4109860	Callee	r_cons_printf		4109793	0					
ANR	4109861	Identifier	r_cons_printf		4109793	0					
ANR	4109862	ArgumentList	"""Usage: !=[!]  - enable/disable remote commands\\n"""		4109793	1					
ANR	4109863	Argument	"""Usage: !=[!]  - enable/disable remote commands\\n"""		4109793	0					
ANR	4109864	PrimaryExpression	"""Usage: !=[!]  - enable/disable remote commands\\n"""		4109793	0					
ANR	4109865	ElseStatement	else		4109793	0					
ANR	4109866	CompoundStatement		17:9:336:336	4109793	0					
ANR	4109867	IfStatement	if ( ! r_sandbox_enable ( 0 ) )		4109793	0					
ANR	4109868	Condition	! r_sandbox_enable ( 0 )	2018:7:52747:52767	4109793	0	True				
ANR	4109869	UnaryOperationExpression	! r_sandbox_enable ( 0 )		4109793	0					
ANR	4109870	UnaryOperator	!		4109793	0					
ANR	4109871	CallExpression	r_sandbox_enable ( 0 )		4109793	1					
ANR	4109872	Callee	r_sandbox_enable		4109793	0					
ANR	4109873	Identifier	r_sandbox_enable		4109793	0					
ANR	4109874	ArgumentList	0		4109793	1					
ANR	4109875	Argument	0		4109793	0					
ANR	4109876	PrimaryExpression	0		4109793	0					
ANR	4109877	CompoundStatement		18:30:368:368	4109793	1					
ANR	4109878	ExpressionStatement	core -> cmdremote = input [ 1 ] ? 1 : 0	2019:4:52776:52808	4109793	0	True				
ANR	4109879	AssignmentExpression	core -> cmdremote = input [ 1 ] ? 1 : 0		4109793	0		=			
ANR	4109880	PtrMemberAccess	core -> cmdremote		4109793	0					
ANR	4109881	Identifier	core		4109793	0					
ANR	4109882	Identifier	cmdremote		4109793	1					
ANR	4109883	ConditionalExpression	input [ 1 ] ? 1 : 0		4109793	1					
ANR	4109884	Condition	input [ 1 ]		4109793	0					
ANR	4109885	ArrayIndexing	input [ 1 ]		4109793	0					
ANR	4109886	Identifier	input		4109793	0					
ANR	4109887	PrimaryExpression	1		4109793	1					
ANR	4109888	PrimaryExpression	1		4109793	1					
ANR	4109889	PrimaryExpression	0		4109793	2					
ANR	4109890	ExpressionStatement	r_cons_println ( r_str_bool ( core -> cmdremote ) )	2020:4:52814:52859	4109793	1	True				
ANR	4109891	CallExpression	r_cons_println ( r_str_bool ( core -> cmdremote ) )		4109793	0					
ANR	4109892	Callee	r_cons_println		4109793	0					
ANR	4109893	Identifier	r_cons_println		4109793	0					
ANR	4109894	ArgumentList	r_str_bool ( core -> cmdremote )		4109793	1					
ANR	4109895	Argument	r_str_bool ( core -> cmdremote )		4109793	0					
ANR	4109896	CallExpression	r_str_bool ( core -> cmdremote )		4109793	0					
ANR	4109897	Callee	r_str_bool		4109793	0					
ANR	4109898	Identifier	r_str_bool		4109793	0					
ANR	4109899	ArgumentList	core -> cmdremote		4109793	1					
ANR	4109900	Argument	core -> cmdremote		4109793	0					
ANR	4109901	PtrMemberAccess	core -> cmdremote		4109793	0					
ANR	4109902	Identifier	core		4109793	0					
ANR	4109903	Identifier	cmdremote		4109793	1					
ANR	4109904	BreakStatement	break ;	2023:2:52872:52877	4109793	5	True				
ANR	4109905	Label	case '!' :	2024:1:52880:52888	4109793	6	True				
ANR	4109906	IfStatement	if ( input [ 1 ] == '!' )		4109793	7					
ANR	4109907	Condition	input [ 1 ] == '!'	2025:6:52901:52915	4109793	0	True				
ANR	4109908	EqualityExpression	input [ 1 ] == '!'		4109793	0		==			
ANR	4109909	ArrayIndexing	input [ 1 ]		4109793	0					
ANR	4109910	Identifier	input		4109793	0					
ANR	4109911	PrimaryExpression	1		4109793	1					
ANR	4109912	PrimaryExpression	'!'		4109793	1					
ANR	4109913	CompoundStatement		25:23:516:516	4109793	1					
ANR	4109914	ExpressionStatement	"cmd_autocomplete ( core , input + 2 )"	2026:3:52937:52971	4109793	0	True				
ANR	4109915	CallExpression	"cmd_autocomplete ( core , input + 2 )"		4109793	0					
ANR	4109916	Callee	cmd_autocomplete		4109793	0					
ANR	4109917	Identifier	cmd_autocomplete		4109793	0					
ANR	4109918	ArgumentList	core		4109793	1					
ANR	4109919	Argument	core		4109793	0					
ANR	4109920	Identifier	core		4109793	0					
ANR	4109921	Argument	input + 2		4109793	1					
ANR	4109922	AdditiveExpression	input + 2		4109793	0		+			
ANR	4109923	Identifier	input		4109793	0					
ANR	4109924	PrimaryExpression	2		4109793	1					
ANR	4109925	ElseStatement	else		4109793	0					
ANR	4109926	IfStatement	if ( input [ 1 ] == '?' )		4109793	0					
ANR	4109927	Condition	input [ 1 ] == '?'	2027:13:52986:53000	4109793	0	True				
ANR	4109928	EqualityExpression	input [ 1 ] == '?'		4109793	0		==			
ANR	4109929	ArrayIndexing	input [ 1 ]		4109793	0					
ANR	4109930	Identifier	input		4109793	0					
ANR	4109931	PrimaryExpression	1		4109793	1					
ANR	4109932	PrimaryExpression	'?'		4109793	1					
ANR	4109933	CompoundStatement		27:30:601:601	4109793	1					
ANR	4109934	ExpressionStatement	cmd_help_exclamation ( core )	2028:3:53008:53035	4109793	0	True				
ANR	4109935	CallExpression	cmd_help_exclamation ( core )		4109793	0					
ANR	4109936	Callee	cmd_help_exclamation		4109793	0					
ANR	4109937	Identifier	cmd_help_exclamation		4109793	0					
ANR	4109938	ArgumentList	core		4109793	1					
ANR	4109939	Argument	core		4109793	0					
ANR	4109940	Identifier	core		4109793	0					
ANR	4109941	ElseStatement	else		4109793	0					
ANR	4109942	IfStatement	if ( input [ 1 ] == '*' )		4109793	0					
ANR	4109943	Condition	input [ 1 ] == '*'	2029:13:53050:53064	4109793	0	True				
ANR	4109944	EqualityExpression	input [ 1 ] == '*'		4109793	0		==			
ANR	4109945	ArrayIndexing	input [ 1 ]		4109793	0					
ANR	4109946	Identifier	input		4109793	0					
ANR	4109947	PrimaryExpression	1		4109793	1					
ANR	4109948	PrimaryExpression	'*'		4109793	1					
ANR	4109949	CompoundStatement		30:3:670:708	4109793	1					
ANR	4109950	IdentifierDeclStatement	char * cmd = r_str_trim_dup ( input + 1 ) ;	2030:3:53072:53110	4109793	0	True				
ANR	4109951	IdentifierDecl	* cmd = r_str_trim_dup ( input + 1 )		4109793	0					
ANR	4109952	IdentifierDeclType	char *		4109793	0					
ANR	4109953	Identifier	cmd		4109793	1					
ANR	4109954	AssignmentExpression	* cmd = r_str_trim_dup ( input + 1 )		4109793	2		=			
ANR	4109955	Identifier	cmd		4109793	0					
ANR	4109956	CallExpression	r_str_trim_dup ( input + 1 )		4109793	1					
ANR	4109957	Callee	r_str_trim_dup		4109793	0					
ANR	4109958	Identifier	r_str_trim_dup		4109793	0					
ANR	4109959	ArgumentList	input + 1		4109793	1					
ANR	4109960	Argument	input + 1		4109793	0					
ANR	4109961	AdditiveExpression	input + 1		4109793	0		+			
ANR	4109962	Identifier	input		4109793	0					
ANR	4109963	PrimaryExpression	1		4109793	1					
ANR	4109964	ExpressionStatement	"( void ) r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"	2031:3:53115:53161	4109793	1	True				
ANR	4109965	CastExpression	"( void ) r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		4109793	0					
ANR	4109966	CastTarget	void		4109793	0					
ANR	4109967	CallExpression	"r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		4109793	1					
ANR	4109968	Callee	r_core_cmdf		4109793	0					
ANR	4109969	Identifier	r_core_cmdf		4109793	0					
ANR	4109970	ArgumentList	core		4109793	1					
ANR	4109971	Argument	core		4109793	0					
ANR	4109972	Identifier	core		4109793	0					
ANR	4109973	Argument	"""\\""#!pipe %s\\"""""		4109793	1					
ANR	4109974	PrimaryExpression	"""\\""#!pipe %s\\"""""		4109793	0					
ANR	4109975	Argument	cmd		4109793	2					
ANR	4109976	Identifier	cmd		4109793	0					
ANR	4109977	ExpressionStatement	free ( cmd )	2032:3:53166:53176	4109793	2	True				
ANR	4109978	CallExpression	free ( cmd )		4109793	0					
ANR	4109979	Callee	free		4109793	0					
ANR	4109980	Identifier	free		4109793	0					
ANR	4109981	ArgumentList	cmd		4109793	1					
ANR	4109982	Argument	cmd		4109793	0					
ANR	4109983	Identifier	cmd		4109793	0					
ANR	4109984	ElseStatement	else		4109793	0					
ANR	4109985	CompoundStatement		33:9:785:785	4109793	0					
ANR	4109986	IfStatement	if ( r_sandbox_enable ( 0 ) )		4109793	0					
ANR	4109987	Condition	r_sandbox_enable ( 0 )	2034:7:53196:53215	4109793	0	True				
ANR	4109988	CallExpression	r_sandbox_enable ( 0 )		4109793	0					
ANR	4109989	Callee	r_sandbox_enable		4109793	0					
ANR	4109990	Identifier	r_sandbox_enable		4109793	0					
ANR	4109991	ArgumentList	0		4109793	1					
ANR	4109992	Argument	0		4109793	0					
ANR	4109993	PrimaryExpression	0		4109793	0					
ANR	4109994	CompoundStatement		34:29:816:816	4109793	1					
ANR	4109995	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	2035:4:53224:53278	4109793	0	True				
ANR	4109996	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4109793	0					
ANR	4109997	Callee	eprintf		4109793	0					
ANR	4109998	Identifier	eprintf		4109793	0					
ANR	4109999	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4109793	1					
ANR	4110000	Argument	"""This command is disabled in sandbox mode\\n"""		4109793	0					
ANR	4110001	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4109793	0					
ANR	4110002	ReturnStatement	return 0 ;	2036:4:53284:53292	4109793	1	True				
ANR	4110003	PrimaryExpression	0		4109793	0					
ANR	4110004	IfStatement	if ( input [ 1 ] )		4109793	1					
ANR	4110005	Condition	input [ 1 ]	2038:7:53306:53313	4109793	0	True				
ANR	4110006	ArrayIndexing	input [ 1 ]		4109793	0					
ANR	4110007	Identifier	input		4109793	0					
ANR	4110008	PrimaryExpression	1		4109793	1					
ANR	4110009	CompoundStatement		41:4:956:1001	4109793	1					
ANR	4110010	IdentifierDeclStatement	int olen ;	2039:4:53322:53330	4109793	0	True				
ANR	4110011	IdentifierDecl	olen		4109793	0					
ANR	4110012	IdentifierDeclType	int		4109793	0					
ANR	4110013	Identifier	olen		4109793	1					
ANR	4110014	IdentifierDeclStatement	char * out = NULL ;	2040:4:53336:53352	4109793	1	True				
ANR	4110015	IdentifierDecl	* out = NULL		4109793	0					
ANR	4110016	IdentifierDeclType	char *		4109793	0					
ANR	4110017	Identifier	out		4109793	1					
ANR	4110018	AssignmentExpression	* out = NULL		4109793	2		=			
ANR	4110019	Identifier	NULL		4109793	0					
ANR	4110020	Identifier	NULL		4109793	1					
ANR	4110021	IdentifierDeclStatement	"char * cmd = r_core_sysenv_begin ( core , input ) ;"	2041:4:53358:53403	4109793	2	True				
ANR	4110022	IdentifierDecl	"* cmd = r_core_sysenv_begin ( core , input )"		4109793	0					
ANR	4110023	IdentifierDeclType	char *		4109793	0					
ANR	4110024	Identifier	cmd		4109793	1					
ANR	4110025	AssignmentExpression	"* cmd = r_core_sysenv_begin ( core , input )"		4109793	2		=			
ANR	4110026	Identifier	cmd		4109793	0					
ANR	4110027	CallExpression	"r_core_sysenv_begin ( core , input )"		4109793	1					
ANR	4110028	Callee	r_core_sysenv_begin		4109793	0					
ANR	4110029	Identifier	r_core_sysenv_begin		4109793	0					
ANR	4110030	ArgumentList	core		4109793	1					
ANR	4110031	Argument	core		4109793	0					
ANR	4110032	Identifier	core		4109793	0					
ANR	4110033	Argument	input		4109793	1					
ANR	4110034	Identifier	input		4109793	0					
ANR	4110035	IfStatement	if ( cmd )		4109793	3					
ANR	4110036	Condition	cmd	2042:8:53413:53415	4109793	0	True				
ANR	4110037	Identifier	cmd		4109793	0					
ANR	4110038	CompoundStatement		43:5:1023:1056	4109793	1					
ANR	4110039	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	2043:5:53425:53458	4109793	0	True				
ANR	4110040	IdentifierDecl	* bed = r_cons_sleep_begin ( )		4109793	0					
ANR	4110041	IdentifierDeclType	void *		4109793	0					
ANR	4110042	Identifier	bed		4109793	1					
ANR	4110043	AssignmentExpression	* bed = r_cons_sleep_begin ( )		4109793	2		=			
ANR	4110044	Identifier	bed		4109793	0					
ANR	4110045	CallExpression	r_cons_sleep_begin ( )		4109793	1					
ANR	4110046	Callee	r_cons_sleep_begin		4109793	0					
ANR	4110047	Identifier	r_cons_sleep_begin		4109793	0					
ANR	4110048	ArgumentList			4109793	1					
ANR	4110049	ExpressionStatement	"ret = r_sys_cmd_str_full ( cmd + 1 , NULL , & out , & olen , NULL )"	2044:5:53465:53524	4109793	1	True				
ANR	4110050	AssignmentExpression	"ret = r_sys_cmd_str_full ( cmd + 1 , NULL , & out , & olen , NULL )"		4109793	0		=			
ANR	4110051	Identifier	ret		4109793	0					
ANR	4110052	CallExpression	"r_sys_cmd_str_full ( cmd + 1 , NULL , & out , & olen , NULL )"		4109793	1					
ANR	4110053	Callee	r_sys_cmd_str_full		4109793	0					
ANR	4110054	Identifier	r_sys_cmd_str_full		4109793	0					
ANR	4110055	ArgumentList	cmd + 1		4109793	1					
ANR	4110056	Argument	cmd + 1		4109793	0					
ANR	4110057	AdditiveExpression	cmd + 1		4109793	0		+			
ANR	4110058	Identifier	cmd		4109793	0					
ANR	4110059	PrimaryExpression	1		4109793	1					
ANR	4110060	Argument	NULL		4109793	1					
ANR	4110061	Identifier	NULL		4109793	0					
ANR	4110062	Argument	& out		4109793	2					
ANR	4110063	UnaryOperationExpression	& out		4109793	0					
ANR	4110064	UnaryOperator	&		4109793	0					
ANR	4110065	Identifier	out		4109793	1					
ANR	4110066	Argument	& olen		4109793	3					
ANR	4110067	UnaryOperationExpression	& olen		4109793	0					
ANR	4110068	UnaryOperator	&		4109793	0					
ANR	4110069	Identifier	olen		4109793	1					
ANR	4110070	Argument	NULL		4109793	4					
ANR	4110071	Identifier	NULL		4109793	0					
ANR	4110072	ExpressionStatement	r_cons_sleep_end ( bed )	2045:5:53531:53553	4109793	2	True				
ANR	4110073	CallExpression	r_cons_sleep_end ( bed )		4109793	0					
ANR	4110074	Callee	r_cons_sleep_end		4109793	0					
ANR	4110075	Identifier	r_cons_sleep_end		4109793	0					
ANR	4110076	ArgumentList	bed		4109793	1					
ANR	4110077	Argument	bed		4109793	0					
ANR	4110078	Identifier	bed		4109793	0					
ANR	4110079	ExpressionStatement	"r_core_sysenv_end ( core , input )"	2046:5:53560:53591	4109793	3	True				
ANR	4110080	CallExpression	"r_core_sysenv_end ( core , input )"		4109793	0					
ANR	4110081	Callee	r_core_sysenv_end		4109793	0					
ANR	4110082	Identifier	r_core_sysenv_end		4109793	0					
ANR	4110083	ArgumentList	core		4109793	1					
ANR	4110084	Argument	core		4109793	0					
ANR	4110085	Identifier	core		4109793	0					
ANR	4110086	Argument	input		4109793	1					
ANR	4110087	Identifier	input		4109793	0					
ANR	4110088	ExpressionStatement	"r_cons_memcat ( out , olen )"	2047:5:53598:53623	4109793	4	True				
ANR	4110089	CallExpression	"r_cons_memcat ( out , olen )"		4109793	0					
ANR	4110090	Callee	r_cons_memcat		4109793	0					
ANR	4110091	Identifier	r_cons_memcat		4109793	0					
ANR	4110092	ArgumentList	out		4109793	1					
ANR	4110093	Argument	out		4109793	0					
ANR	4110094	Identifier	out		4109793	0					
ANR	4110095	Argument	olen		4109793	1					
ANR	4110096	Identifier	olen		4109793	0					
ANR	4110097	ExpressionStatement	free ( out )	2048:5:53630:53640	4109793	5	True				
ANR	4110098	CallExpression	free ( out )		4109793	0					
ANR	4110099	Callee	free		4109793	0					
ANR	4110100	Identifier	free		4109793	0					
ANR	4110101	ArgumentList	out		4109793	1					
ANR	4110102	Argument	out		4109793	0					
ANR	4110103	Identifier	out		4109793	0					
ANR	4110104	ExpressionStatement	free ( cmd )	2049:5:53647:53657	4109793	6	True				
ANR	4110105	CallExpression	free ( cmd )		4109793	0					
ANR	4110106	Callee	free		4109793	0					
ANR	4110107	Identifier	free		4109793	0					
ANR	4110108	ArgumentList	cmd		4109793	1					
ANR	4110109	Argument	cmd		4109793	0					
ANR	4110110	Identifier	cmd		4109793	0					
ANR	4110111	ElseStatement	else		4109793	0					
ANR	4110112	CompoundStatement		51:10:1331:1331	4109793	0					
ANR	4110113	Statement	eprintf	2052:4:53739:53745	4109793	0	True				
ANR	4110114	Statement	(	2052:12:53747:53747	4109793	1	True				
ANR	4110115	Statement	"""History saved to """	2052:13:53748:53766	4109793	2	True				
ANR	4110116	Statement	R2_HOME_HISTORY	2052:32:53767:53781	4109793	3	True				
ANR	4110117	Statement	"""\\n"""	2052:47:53782:53785	4109793	4	True				
ANR	4110118	Statement	)	2052:51:53786:53786	4109793	5	True				
ANR	4110119	ExpressionStatement		2052:52:53787:53787	4109793	6	True				
ANR	4110120	ExpressionStatement	r_line_hist_save ( R2_HOME_HISTORY )	2053:4:53793:53827	4109793	7	True				
ANR	4110121	CallExpression	r_line_hist_save ( R2_HOME_HISTORY )		4109793	0					
ANR	4110122	Callee	r_line_hist_save		4109793	0					
ANR	4110123	Identifier	r_line_hist_save		4109793	0					
ANR	4110124	ArgumentList	R2_HOME_HISTORY		4109793	1					
ANR	4110125	Argument	R2_HOME_HISTORY		4109793	0					
ANR	4110126	Identifier	R2_HOME_HISTORY		4109793	0					
ANR	4110127	BreakStatement	break ;	2056:2:53840:53845	4109793	8	True				
ANR	4110128	Label	case '\\0' :	2057:1:53848:53857	4109793	9	True				
ANR	4110129	ExpressionStatement	r_line_hist_list ( )	2058:2:53861:53880	4109793	10	True				
ANR	4110130	CallExpression	r_line_hist_list ( )		4109793	0					
ANR	4110131	Callee	r_line_hist_list		4109793	0					
ANR	4110132	Identifier	r_line_hist_list		4109793	0					
ANR	4110133	ArgumentList			4109793	1					
ANR	4110134	BreakStatement	break ;	2059:2:53884:53889	4109793	11	True				
ANR	4110135	Label	case '?' :	2060:1:53892:53900	4109793	12	True				
ANR	4110136	ExpressionStatement	cmd_help_exclamation ( core )	2061:2:53909:53936	4109793	13	True				
ANR	4110137	CallExpression	cmd_help_exclamation ( core )		4109793	0					
ANR	4110138	Callee	cmd_help_exclamation		4109793	0					
ANR	4110139	Identifier	cmd_help_exclamation		4109793	0					
ANR	4110140	ArgumentList	core		4109793	1					
ANR	4110141	Argument	core		4109793	0					
ANR	4110142	Identifier	core		4109793	0					
ANR	4110143	BreakStatement	break ;	2062:2:53940:53945	4109793	14	True				
ANR	4110144	Label	case '*' :	2063:1:53948:53956	4109793	15	True				
ANR	4110145	CompoundStatement		66:2:1585:1623	4109793	16					
ANR	4110146	IdentifierDeclStatement	char * cmd = r_str_trim_dup ( input + 1 ) ;	2066:2:53987:54025	4109793	0	True				
ANR	4110147	IdentifierDecl	* cmd = r_str_trim_dup ( input + 1 )		4109793	0					
ANR	4110148	IdentifierDeclType	char *		4109793	0					
ANR	4110149	Identifier	cmd		4109793	1					
ANR	4110150	AssignmentExpression	* cmd = r_str_trim_dup ( input + 1 )		4109793	2		=			
ANR	4110151	Identifier	cmd		4109793	0					
ANR	4110152	CallExpression	r_str_trim_dup ( input + 1 )		4109793	1					
ANR	4110153	Callee	r_str_trim_dup		4109793	0					
ANR	4110154	Identifier	r_str_trim_dup		4109793	0					
ANR	4110155	ArgumentList	input + 1		4109793	1					
ANR	4110156	Argument	input + 1		4109793	0					
ANR	4110157	AdditiveExpression	input + 1		4109793	0		+			
ANR	4110158	Identifier	input		4109793	0					
ANR	4110159	PrimaryExpression	1		4109793	1					
ANR	4110160	ExpressionStatement	"cmd = r_str_replace ( cmd , "" "" , ""\\\\ "" , true )"	2067:2:54029:54072	4109793	1	True				
ANR	4110161	AssignmentExpression	"cmd = r_str_replace ( cmd , "" "" , ""\\\\ "" , true )"		4109793	0		=			
ANR	4110162	Identifier	cmd		4109793	0					
ANR	4110163	CallExpression	"r_str_replace ( cmd , "" "" , ""\\\\ "" , true )"		4109793	1					
ANR	4110164	Callee	r_str_replace		4109793	0					
ANR	4110165	Identifier	r_str_replace		4109793	0					
ANR	4110166	ArgumentList	cmd		4109793	1					
ANR	4110167	Argument	cmd		4109793	0					
ANR	4110168	Identifier	cmd		4109793	0					
ANR	4110169	Argument	""" """		4109793	1					
ANR	4110170	PrimaryExpression	""" """		4109793	0					
ANR	4110171	Argument	"""\\\\ """		4109793	2					
ANR	4110172	PrimaryExpression	"""\\\\ """		4109793	0					
ANR	4110173	Argument	true		4109793	3					
ANR	4110174	Identifier	true		4109793	0					
ANR	4110175	ExpressionStatement	"cmd = r_str_replace ( cmd , ""\\\\ "" , "" "" , false )"	2068:2:54076:54120	4109793	2	True				
ANR	4110176	AssignmentExpression	"cmd = r_str_replace ( cmd , ""\\\\ "" , "" "" , false )"		4109793	0		=			
ANR	4110177	Identifier	cmd		4109793	0					
ANR	4110178	CallExpression	"r_str_replace ( cmd , ""\\\\ "" , "" "" , false )"		4109793	1					
ANR	4110179	Callee	r_str_replace		4109793	0					
ANR	4110180	Identifier	r_str_replace		4109793	0					
ANR	4110181	ArgumentList	cmd		4109793	1					
ANR	4110182	Argument	cmd		4109793	0					
ANR	4110183	Identifier	cmd		4109793	0					
ANR	4110184	Argument	"""\\\\ """		4109793	1					
ANR	4110185	PrimaryExpression	"""\\\\ """		4109793	0					
ANR	4110186	Argument	""" """		4109793	2					
ANR	4110187	PrimaryExpression	""" """		4109793	0					
ANR	4110188	Argument	false		4109793	3					
ANR	4110189	Identifier	false		4109793	0					
ANR	4110190	ExpressionStatement	"cmd = r_str_replace ( cmd , ""\\"""" , ""'"" , false )"	2069:2:54124:54167	4109793	3	True				
ANR	4110191	AssignmentExpression	"cmd = r_str_replace ( cmd , ""\\"""" , ""'"" , false )"		4109793	0		=			
ANR	4110192	Identifier	cmd		4109793	0					
ANR	4110193	CallExpression	"r_str_replace ( cmd , ""\\"""" , ""'"" , false )"		4109793	1					
ANR	4110194	Callee	r_str_replace		4109793	0					
ANR	4110195	Identifier	r_str_replace		4109793	0					
ANR	4110196	ArgumentList	cmd		4109793	1					
ANR	4110197	Argument	cmd		4109793	0					
ANR	4110198	Identifier	cmd		4109793	0					
ANR	4110199	Argument	"""\\"""""		4109793	1					
ANR	4110200	PrimaryExpression	"""\\"""""		4109793	0					
ANR	4110201	Argument	"""'"""		4109793	2					
ANR	4110202	PrimaryExpression	"""'"""		4109793	0					
ANR	4110203	Argument	false		4109793	3					
ANR	4110204	Identifier	false		4109793	0					
ANR	4110205	ExpressionStatement	"ret = r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"	2070:2:54171:54217	4109793	4	True				
ANR	4110206	AssignmentExpression	"ret = r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		4109793	0		=			
ANR	4110207	Identifier	ret		4109793	0					
ANR	4110208	CallExpression	"r_core_cmdf ( core , ""\\""#!pipe %s\\"""" , cmd )"		4109793	1					
ANR	4110209	Callee	r_core_cmdf		4109793	0					
ANR	4110210	Identifier	r_core_cmdf		4109793	0					
ANR	4110211	ArgumentList	core		4109793	1					
ANR	4110212	Argument	core		4109793	0					
ANR	4110213	Identifier	core		4109793	0					
ANR	4110214	Argument	"""\\""#!pipe %s\\"""""		4109793	1					
ANR	4110215	PrimaryExpression	"""\\""#!pipe %s\\"""""		4109793	0					
ANR	4110216	Argument	cmd		4109793	2					
ANR	4110217	Identifier	cmd		4109793	0					
ANR	4110218	ExpressionStatement	free ( cmd )	2071:2:54221:54231	4109793	5	True				
ANR	4110219	CallExpression	free ( cmd )		4109793	0					
ANR	4110220	Callee	free		4109793	0					
ANR	4110221	Identifier	free		4109793	0					
ANR	4110222	ArgumentList	cmd		4109793	1					
ANR	4110223	Argument	cmd		4109793	0					
ANR	4110224	Identifier	cmd		4109793	0					
ANR	4110225	BreakStatement	break ;	2073:2:54239:54244	4109793	17	True				
ANR	4110226	Label	default :	2074:1:54247:54254	4109793	18	True				
ANR	4110227	Identifier	default		4109793	0					
ANR	4110228	ExpressionStatement	n = atoi ( input )	2075:2:54258:54274	4109793	19	True				
ANR	4110229	AssignmentExpression	n = atoi ( input )		4109793	0		=			
ANR	4110230	Identifier	n		4109793	0					
ANR	4110231	CallExpression	atoi ( input )		4109793	1					
ANR	4110232	Callee	atoi		4109793	0					
ANR	4110233	Identifier	atoi		4109793	0					
ANR	4110234	ArgumentList	input		4109793	1					
ANR	4110235	Argument	input		4109793	0					
ANR	4110236	Identifier	input		4109793	0					
ANR	4110237	IfStatement	if ( * input == '0' || n > 0 )		4109793	20					
ANR	4110238	Condition	* input == '0' || n > 0	2076:6:54282:54303	4109793	0	True				
ANR	4110239	OrExpression	* input == '0' || n > 0		4109793	0		||			
ANR	4110240	EqualityExpression	* input == '0'		4109793	0		==			
ANR	4110241	UnaryOperationExpression	* input		4109793	0					
ANR	4110242	UnaryOperator	*		4109793	0					
ANR	4110243	Identifier	input		4109793	1					
ANR	4110244	PrimaryExpression	'0'		4109793	1					
ANR	4110245	RelationalExpression	n > 0		4109793	1		>			
ANR	4110246	Identifier	n		4109793	0					
ANR	4110247	PrimaryExpression	0		4109793	1					
ANR	4110248	CompoundStatement		77:3:1909:1946	4109793	1					
ANR	4110249	IdentifierDeclStatement	const char * cmd = r_line_hist_get ( n ) ;	2077:3:54311:54348	4109793	0	True				
ANR	4110250	IdentifierDecl	* cmd = r_line_hist_get ( n )		4109793	0					
ANR	4110251	IdentifierDeclType	const char *		4109793	0					
ANR	4110252	Identifier	cmd		4109793	1					
ANR	4110253	AssignmentExpression	* cmd = r_line_hist_get ( n )		4109793	2		=			
ANR	4110254	Identifier	cmd		4109793	0					
ANR	4110255	CallExpression	r_line_hist_get ( n )		4109793	1					
ANR	4110256	Callee	r_line_hist_get		4109793	0					
ANR	4110257	Identifier	r_line_hist_get		4109793	0					
ANR	4110258	ArgumentList	n		4109793	1					
ANR	4110259	Argument	n		4109793	0					
ANR	4110260	Identifier	n		4109793	0					
ANR	4110261	IfStatement	if ( cmd )		4109793	1					
ANR	4110262	Condition	cmd	2078:7:54357:54359	4109793	0	True				
ANR	4110263	Identifier	cmd		4109793	0					
ANR	4110264	CompoundStatement		78:12:1960:1960	4109793	1					
ANR	4110265	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	2079:4:54368:54391	4109793	0	True				
ANR	4110266	CallExpression	"r_core_cmd0 ( core , cmd )"		4109793	0					
ANR	4110267	Callee	r_core_cmd0		4109793	0					
ANR	4110268	Identifier	r_core_cmd0		4109793	0					
ANR	4110269	ArgumentList	core		4109793	1					
ANR	4110270	Argument	core		4109793	0					
ANR	4110271	Identifier	core		4109793	0					
ANR	4110272	Argument	cmd		4109793	1					
ANR	4110273	Identifier	cmd		4109793	0					
ANR	4110274	ElseStatement	else		4109793	0					
ANR	4110275	CompoundStatement		83:3:2071:2116	4109793	0					
ANR	4110276	IdentifierDeclStatement	"char * cmd = r_core_sysenv_begin ( core , input ) ;"	2083:3:54473:54518	4109793	0	True				
ANR	4110277	IdentifierDecl	"* cmd = r_core_sysenv_begin ( core , input )"		4109793	0					
ANR	4110278	IdentifierDeclType	char *		4109793	0					
ANR	4110279	Identifier	cmd		4109793	1					
ANR	4110280	AssignmentExpression	"* cmd = r_core_sysenv_begin ( core , input )"		4109793	2		=			
ANR	4110281	Identifier	cmd		4109793	0					
ANR	4110282	CallExpression	"r_core_sysenv_begin ( core , input )"		4109793	1					
ANR	4110283	Callee	r_core_sysenv_begin		4109793	0					
ANR	4110284	Identifier	r_core_sysenv_begin		4109793	0					
ANR	4110285	ArgumentList	core		4109793	1					
ANR	4110286	Argument	core		4109793	0					
ANR	4110287	Identifier	core		4109793	0					
ANR	4110288	Argument	input		4109793	1					
ANR	4110289	Identifier	input		4109793	0					
ANR	4110290	IfStatement	if ( cmd )		4109793	1					
ANR	4110291	Condition	cmd	2084:7:54527:54529	4109793	0	True				
ANR	4110292	Identifier	cmd		4109793	0					
ANR	4110293	CompoundStatement		85:4:2136:2169	4109793	1					
ANR	4110294	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	2085:4:54538:54571	4109793	0	True				
ANR	4110295	IdentifierDecl	* bed = r_cons_sleep_begin ( )		4109793	0					
ANR	4110296	IdentifierDeclType	void *		4109793	0					
ANR	4110297	Identifier	bed		4109793	1					
ANR	4110298	AssignmentExpression	* bed = r_cons_sleep_begin ( )		4109793	2		=			
ANR	4110299	Identifier	bed		4109793	0					
ANR	4110300	CallExpression	r_cons_sleep_begin ( )		4109793	1					
ANR	4110301	Callee	r_cons_sleep_begin		4109793	0					
ANR	4110302	Identifier	r_cons_sleep_begin		4109793	0					
ANR	4110303	ArgumentList			4109793	1					
ANR	4110304	ExpressionStatement	ret = r_sys_cmd ( cmd )	2086:4:54577:54598	4109793	1	True				
ANR	4110305	AssignmentExpression	ret = r_sys_cmd ( cmd )		4109793	0		=			
ANR	4110306	Identifier	ret		4109793	0					
ANR	4110307	CallExpression	r_sys_cmd ( cmd )		4109793	1					
ANR	4110308	Callee	r_sys_cmd		4109793	0					
ANR	4110309	Identifier	r_sys_cmd		4109793	0					
ANR	4110310	ArgumentList	cmd		4109793	1					
ANR	4110311	Argument	cmd		4109793	0					
ANR	4110312	Identifier	cmd		4109793	0					
ANR	4110313	ExpressionStatement	r_cons_sleep_end ( bed )	2087:4:54604:54626	4109793	2	True				
ANR	4110314	CallExpression	r_cons_sleep_end ( bed )		4109793	0					
ANR	4110315	Callee	r_cons_sleep_end		4109793	0					
ANR	4110316	Identifier	r_cons_sleep_end		4109793	0					
ANR	4110317	ArgumentList	bed		4109793	1					
ANR	4110318	Argument	bed		4109793	0					
ANR	4110319	Identifier	bed		4109793	0					
ANR	4110320	ExpressionStatement	"r_core_sysenv_end ( core , input )"	2088:4:54632:54663	4109793	3	True				
ANR	4110321	CallExpression	"r_core_sysenv_end ( core , input )"		4109793	0					
ANR	4110322	Callee	r_core_sysenv_end		4109793	0					
ANR	4110323	Identifier	r_core_sysenv_end		4109793	0					
ANR	4110324	ArgumentList	core		4109793	1					
ANR	4110325	Argument	core		4109793	0					
ANR	4110326	Identifier	core		4109793	0					
ANR	4110327	Argument	input		4109793	1					
ANR	4110328	Identifier	input		4109793	0					
ANR	4110329	ExpressionStatement	free ( cmd )	2089:4:54669:54679	4109793	4	True				
ANR	4110330	CallExpression	free ( cmd )		4109793	0					
ANR	4110331	Callee	free		4109793	0					
ANR	4110332	Identifier	free		4109793	0					
ANR	4110333	ArgumentList	cmd		4109793	1					
ANR	4110334	Argument	cmd		4109793	0					
ANR	4110335	Identifier	cmd		4109793	0					
ANR	4110336	ElseStatement	else		4109793	0					
ANR	4110337	CompoundStatement		90:10:2289:2289	4109793	0					
ANR	4110338	ExpressionStatement	"eprintf ( ""Error setting up system environment\\n"" )"	2091:4:54697:54746	4109793	0	True				
ANR	4110339	CallExpression	"eprintf ( ""Error setting up system environment\\n"" )"		4109793	0					
ANR	4110340	Callee	eprintf		4109793	0					
ANR	4110341	Identifier	eprintf		4109793	0					
ANR	4110342	ArgumentList	"""Error setting up system environment\\n"""		4109793	1					
ANR	4110343	Argument	"""Error setting up system environment\\n"""		4109793	0					
ANR	4110344	PrimaryExpression	"""Error setting up system environment\\n"""		4109793	0					
ANR	4110345	BreakStatement	break ;	2094:2:54759:54764	4109793	21	True				
ANR	4110346	ReturnStatement	return ret ;	2096:1:54770:54780	4109793	4	True				
ANR	4110347	Identifier	ret		4109793	0					
ANR	4110348	ReturnType	static int		4109793	1					
ANR	4110349	Identifier	cmd_system		4109793	2					
ANR	4110350	ParameterList	"void * data , const char * input"		4109793	3					
ANR	4110351	Parameter	void * data	2001:22:52370:52379	4109793	0	True				
ANR	4110352	ParameterType	void *		4109793	0					
ANR	4110353	Identifier	data		4109793	1					
ANR	4110354	Parameter	const char * input	2001:34:52382:52398	4109793	1	True				
ANR	4110355	ParameterType	const char *		4109793	0					
ANR	4110356	Identifier	input		4109793	1					
ANR	4110357	CFGEntryNode	ENTRY		4109793		True				
ANR	4110358	CFGExitNode	EXIT		4109793		True				
ANR	4110359	Symbol	bed		4109793						
ANR	4110360	Symbol	r_core_sysenv_begin		4109793						
ANR	4110361	Symbol	data		4109793						
ANR	4110362	Symbol	r_core_cmdf		4109793						
ANR	4110363	Symbol	r_sandbox_enable		4109793						
ANR	4110364	Symbol	* input		4109793						
ANR	4110365	Symbol	* core		4109793						
ANR	4110366	Symbol	r_sys_cmd		4109793						
ANR	4110367	Symbol	r_str_trim_dup		4109793						
ANR	4110368	Symbol	out		4109793						
ANR	4110369	Symbol	& olen		4109793						
ANR	4110370	Symbol	core -> cmdremote		4109793						
ANR	4110371	Symbol	r_str_replace		4109793						
ANR	4110372	Symbol	ret		4109793						
ANR	4110373	Symbol	atoi		4109793						
ANR	4110374	Symbol	r_str_bool		4109793						
ANR	4110375	Symbol	NULL		4109793						
ANR	4110376	Symbol	false		4109793						
ANR	4110377	Symbol	r_line_hist_get		4109793						
ANR	4110378	Symbol	n		4109793						
ANR	4110379	Symbol	input		4109793						
ANR	4110380	Symbol	core		4109793						
ANR	4110381	Symbol	olen		4109793						
ANR	4110382	Symbol	& out		4109793						
ANR	4110383	Symbol	r_sys_cmd_str_full		4109793						
ANR	4110384	Symbol	R2_HOME_HISTORY		4109793						
ANR	4110385	Symbol	true		4109793						
ANR	4110386	Symbol	r_cons_sleep_begin		4109793						
ANR	4110387	Symbol	cmd		4109793						
ANR	4110388	Function	r_w32_cmd_pipe	2101:0:54820:57323							
ANR	4110389	FunctionDef	"r_w32_cmd_pipe (RCore * core , char * radare_cmd , char * shell_cmd)"		4110388	0					
ANR	4110390	CompoundStatement		2101:75:54895:57323	4110388	0					
ANR	4110391	IdentifierDeclStatement	STARTUPINFO si = { 0 } ;	2102:1:54898:54918	4110388	0	True				
ANR	4110392	IdentifierDecl	si = { 0 }		4110388	0					
ANR	4110393	IdentifierDeclType	STARTUPINFO		4110388	0					
ANR	4110394	Identifier	si		4110388	1					
ANR	4110395	AssignmentExpression	si = { 0 }		4110388	2		=			
ANR	4110396	Identifier	si		4110388	0					
ANR	4110397	InitializerList	0		4110388	1					
ANR	4110398	PrimaryExpression	0		4110388	0					
ANR	4110399	IdentifierDeclStatement	PROCESS_INFORMATION pi = { 0 } ;	2103:1:54921:54949	4110388	1	True				
ANR	4110400	IdentifierDecl	pi = { 0 }		4110388	0					
ANR	4110401	IdentifierDeclType	PROCESS_INFORMATION		4110388	0					
ANR	4110402	Identifier	pi		4110388	1					
ANR	4110403	AssignmentExpression	pi = { 0 }		4110388	2		=			
ANR	4110404	Identifier	pi		4110388	0					
ANR	4110405	InitializerList	0		4110388	1					
ANR	4110406	PrimaryExpression	0		4110388	0					
ANR	4110407	IdentifierDeclStatement	SECURITY_ATTRIBUTES sa ;	2104:1:54952:54974	4110388	2	True				
ANR	4110408	IdentifierDecl	sa		4110388	0					
ANR	4110409	IdentifierDeclType	SECURITY_ATTRIBUTES		4110388	0					
ANR	4110410	Identifier	sa		4110388	1					
ANR	4110411	IdentifierDeclStatement	"HANDLE pipe [ 2 ] = { NULL , NULL } ;"	2105:1:54977:55006	4110388	3	True				
ANR	4110412	IdentifierDecl	"pipe [ 2 ] = { NULL , NULL }"		4110388	0					
ANR	4110413	IdentifierDeclType	HANDLE [ 2 ]		4110388	0					
ANR	4110414	Identifier	pipe		4110388	1					
ANR	4110415	PrimaryExpression	2		4110388	2					
ANR	4110416	AssignmentExpression	"pipe [ 2 ] = { NULL , NULL }"		4110388	3		=			
ANR	4110417	Identifier	pipe		4110388	0					
ANR	4110418	InitializerList	NULL		4110388	1					
ANR	4110419	Identifier	NULL		4110388	0					
ANR	4110420	Identifier	NULL		4110388	1					
ANR	4110421	IdentifierDeclStatement	"int fd_out = - 1 , cons_out = - 1 ;"	2106:1:55009:55039	4110388	4	True				
ANR	4110422	IdentifierDecl	fd_out = - 1		4110388	0					
ANR	4110423	IdentifierDeclType	int		4110388	0					
ANR	4110424	Identifier	fd_out		4110388	1					
ANR	4110425	AssignmentExpression	fd_out = - 1		4110388	2		=			
ANR	4110426	Identifier	fd_out		4110388	0					
ANR	4110427	UnaryOperationExpression	- 1		4110388	1					
ANR	4110428	UnaryOperator	-		4110388	0					
ANR	4110429	PrimaryExpression	1		4110388	1					
ANR	4110430	IdentifierDecl	cons_out = - 1		4110388	1					
ANR	4110431	IdentifierDeclType	int		4110388	0					
ANR	4110432	Identifier	cons_out		4110388	1					
ANR	4110433	AssignmentExpression	cons_out = - 1		4110388	2		=			
ANR	4110434	Identifier	cons_out		4110388	0					
ANR	4110435	UnaryOperationExpression	- 1		4110388	1					
ANR	4110436	UnaryOperator	-		4110388	0					
ANR	4110437	PrimaryExpression	1		4110388	1					
ANR	4110438	IdentifierDeclStatement	char * _shell_cmd = NULL ;	2107:1:55042:55065	4110388	5	True				
ANR	4110439	IdentifierDecl	* _shell_cmd = NULL		4110388	0					
ANR	4110440	IdentifierDeclType	char *		4110388	0					
ANR	4110441	Identifier	_shell_cmd		4110388	1					
ANR	4110442	AssignmentExpression	* _shell_cmd = NULL		4110388	2		=			
ANR	4110443	Identifier	NULL		4110388	0					
ANR	4110444	Identifier	NULL		4110388	1					
ANR	4110445	IdentifierDeclStatement	LPTSTR _shell_cmd_ = NULL ;	2108:1:55068:55093	4110388	6	True				
ANR	4110446	IdentifierDecl	_shell_cmd_ = NULL		4110388	0					
ANR	4110447	IdentifierDeclType	LPTSTR		4110388	0					
ANR	4110448	Identifier	_shell_cmd_		4110388	1					
ANR	4110449	AssignmentExpression	_shell_cmd_ = NULL		4110388	2		=			
ANR	4110450	Identifier	NULL		4110388	0					
ANR	4110451	Identifier	NULL		4110388	1					
ANR	4110452	IdentifierDeclStatement	DWORD mode ;	2109:1:55096:55106	4110388	7	True				
ANR	4110453	IdentifierDecl	mode		4110388	0					
ANR	4110454	IdentifierDeclType	DWORD		4110388	0					
ANR	4110455	Identifier	mode		4110388	1					
ANR	4110456	ExpressionStatement	"GetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & mode )"	2110:1:55109:55165	4110388	8	True				
ANR	4110457	CallExpression	"GetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , & mode )"		4110388	0					
ANR	4110458	Callee	GetConsoleMode		4110388	0					
ANR	4110459	Identifier	GetConsoleMode		4110388	0					
ANR	4110460	ArgumentList	GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	1					
ANR	4110461	Argument	GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	0					
ANR	4110462	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	0					
ANR	4110463	Callee	GetStdHandle		4110388	0					
ANR	4110464	Identifier	GetStdHandle		4110388	0					
ANR	4110465	ArgumentList	STD_OUTPUT_HANDLE		4110388	1					
ANR	4110466	Argument	STD_OUTPUT_HANDLE		4110388	0					
ANR	4110467	Identifier	STD_OUTPUT_HANDLE		4110388	0					
ANR	4110468	Argument	& mode		4110388	1					
ANR	4110469	UnaryOperationExpression	& mode		4110388	0					
ANR	4110470	UnaryOperator	&		4110388	0					
ANR	4110471	Identifier	mode		4110388	1					
ANR	4110472	ExpressionStatement	sa . nLength = sizeof ( SECURITY_ATTRIBUTES )	2112:1:55169:55210	4110388	9	True				
ANR	4110473	AssignmentExpression	sa . nLength = sizeof ( SECURITY_ATTRIBUTES )		4110388	0		=			
ANR	4110474	MemberAccess	sa . nLength		4110388	0					
ANR	4110475	Identifier	sa		4110388	0					
ANR	4110476	Identifier	nLength		4110388	1					
ANR	4110477	SizeofExpression	sizeof ( SECURITY_ATTRIBUTES )		4110388	1					
ANR	4110478	Sizeof	sizeof		4110388	0					
ANR	4110479	SizeofOperand	SECURITY_ATTRIBUTES		4110388	1					
ANR	4110480	ExpressionStatement	sa . bInheritHandle = TRUE	2113:1:55213:55237	4110388	10	True				
ANR	4110481	AssignmentExpression	sa . bInheritHandle = TRUE		4110388	0		=			
ANR	4110482	MemberAccess	sa . bInheritHandle		4110388	0					
ANR	4110483	Identifier	sa		4110388	0					
ANR	4110484	Identifier	bInheritHandle		4110388	1					
ANR	4110485	Identifier	TRUE		4110388	1					
ANR	4110486	ExpressionStatement	sa . lpSecurityDescriptor = NULL	2114:1:55240:55270	4110388	11	True				
ANR	4110487	AssignmentExpression	sa . lpSecurityDescriptor = NULL		4110388	0		=			
ANR	4110488	MemberAccess	sa . lpSecurityDescriptor		4110388	0					
ANR	4110489	Identifier	sa		4110388	0					
ANR	4110490	Identifier	lpSecurityDescriptor		4110388	1					
ANR	4110491	Identifier	NULL		4110388	1					
ANR	4110492	IfStatement	"if ( ! CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 ) )"		4110388	12					
ANR	4110493	Condition	"! CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 )"	2115:5:55277:55316	4110388	0	True				
ANR	4110494	UnaryOperationExpression	"! CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 )"		4110388	0					
ANR	4110495	UnaryOperator	!		4110388	0					
ANR	4110496	CallExpression	"CreatePipe ( & pipe [ 0 ] , & pipe [ 1 ] , & sa , 0 )"		4110388	1					
ANR	4110497	Callee	CreatePipe		4110388	0					
ANR	4110498	Identifier	CreatePipe		4110388	0					
ANR	4110499	ArgumentList	& pipe [ 0 ]		4110388	1					
ANR	4110500	Argument	& pipe [ 0 ]		4110388	0					
ANR	4110501	UnaryOperationExpression	& pipe [ 0 ]		4110388	0					
ANR	4110502	UnaryOperator	&		4110388	0					
ANR	4110503	ArrayIndexing	pipe [ 0 ]		4110388	1					
ANR	4110504	Identifier	pipe		4110388	0					
ANR	4110505	PrimaryExpression	0		4110388	1					
ANR	4110506	Argument	& pipe [ 1 ]		4110388	1					
ANR	4110507	UnaryOperationExpression	& pipe [ 1 ]		4110388	0					
ANR	4110508	UnaryOperator	&		4110388	0					
ANR	4110509	ArrayIndexing	pipe [ 1 ]		4110388	1					
ANR	4110510	Identifier	pipe		4110388	0					
ANR	4110511	PrimaryExpression	1		4110388	1					
ANR	4110512	Argument	& sa		4110388	2					
ANR	4110513	UnaryOperationExpression	& sa		4110388	0					
ANR	4110514	UnaryOperator	&		4110388	0					
ANR	4110515	Identifier	sa		4110388	1					
ANR	4110516	Argument	0		4110388	3					
ANR	4110517	PrimaryExpression	0		4110388	0					
ANR	4110518	CompoundStatement		15:47:423:423	4110388	1					
ANR	4110519	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/CreatePipe"" )"	2116:2:55323:55365	4110388	0	True				
ANR	4110520	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/CreatePipe"" )"		4110388	0					
ANR	4110521	Callee	r_sys_perror		4110388	0					
ANR	4110522	Identifier	r_sys_perror		4110388	0					
ANR	4110523	ArgumentList	"""r_w32_cmd_pipe/CreatePipe"""		4110388	1					
ANR	4110524	Argument	"""r_w32_cmd_pipe/CreatePipe"""		4110388	0					
ANR	4110525	PrimaryExpression	"""r_w32_cmd_pipe/CreatePipe"""		4110388	0					
ANR	4110526	GotoStatement	goto err_r_w32_cmd_pipe ;	2117:2:55369:55392	4110388	1	True				
ANR	4110527	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110528	IfStatement	"if ( ! SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 ) )"		4110388	13					
ANR	4110529	Condition	"! SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 )"	2119:5:55402:55456	4110388	0	True				
ANR	4110530	UnaryOperationExpression	"! SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 )"		4110388	0					
ANR	4110531	UnaryOperator	!		4110388	0					
ANR	4110532	CallExpression	"SetHandleInformation ( pipe [ 1 ] , HANDLE_FLAG_INHERIT , 0 )"		4110388	1					
ANR	4110533	Callee	SetHandleInformation		4110388	0					
ANR	4110534	Identifier	SetHandleInformation		4110388	0					
ANR	4110535	ArgumentList	pipe [ 1 ]		4110388	1					
ANR	4110536	Argument	pipe [ 1 ]		4110388	0					
ANR	4110537	ArrayIndexing	pipe [ 1 ]		4110388	0					
ANR	4110538	Identifier	pipe		4110388	0					
ANR	4110539	PrimaryExpression	1		4110388	1					
ANR	4110540	Argument	HANDLE_FLAG_INHERIT		4110388	1					
ANR	4110541	Identifier	HANDLE_FLAG_INHERIT		4110388	0					
ANR	4110542	Argument	0		4110388	2					
ANR	4110543	PrimaryExpression	0		4110388	0					
ANR	4110544	CompoundStatement		19:62:563:563	4110388	1					
ANR	4110545	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/SetHandleInformation"" )"	2120:2:55463:55515	4110388	0	True				
ANR	4110546	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/SetHandleInformation"" )"		4110388	0					
ANR	4110547	Callee	r_sys_perror		4110388	0					
ANR	4110548	Identifier	r_sys_perror		4110388	0					
ANR	4110549	ArgumentList	"""r_w32_cmd_pipe/SetHandleInformation"""		4110388	1					
ANR	4110550	Argument	"""r_w32_cmd_pipe/SetHandleInformation"""		4110388	0					
ANR	4110551	PrimaryExpression	"""r_w32_cmd_pipe/SetHandleInformation"""		4110388	0					
ANR	4110552	GotoStatement	goto err_r_w32_cmd_pipe ;	2121:2:55519:55542	4110388	1	True				
ANR	4110553	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110554	ExpressionStatement	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )	2123:1:55548:55594	4110388	14	True				
ANR	4110555	AssignmentExpression	si . hStdError = GetStdHandle ( STD_ERROR_HANDLE )		4110388	0		=			
ANR	4110556	MemberAccess	si . hStdError		4110388	0					
ANR	4110557	Identifier	si		4110388	0					
ANR	4110558	Identifier	hStdError		4110388	1					
ANR	4110559	CallExpression	GetStdHandle ( STD_ERROR_HANDLE )		4110388	1					
ANR	4110560	Callee	GetStdHandle		4110388	0					
ANR	4110561	Identifier	GetStdHandle		4110388	0					
ANR	4110562	ArgumentList	STD_ERROR_HANDLE		4110388	1					
ANR	4110563	Argument	STD_ERROR_HANDLE		4110388	0					
ANR	4110564	Identifier	STD_ERROR_HANDLE		4110388	0					
ANR	4110565	ExpressionStatement	si . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )	2124:1:55597:55645	4110388	15	True				
ANR	4110566	AssignmentExpression	si . hStdOutput = GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	0		=			
ANR	4110567	MemberAccess	si . hStdOutput		4110388	0					
ANR	4110568	Identifier	si		4110388	0					
ANR	4110569	Identifier	hStdOutput		4110388	1					
ANR	4110570	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	1					
ANR	4110571	Callee	GetStdHandle		4110388	0					
ANR	4110572	Identifier	GetStdHandle		4110388	0					
ANR	4110573	ArgumentList	STD_OUTPUT_HANDLE		4110388	1					
ANR	4110574	Argument	STD_OUTPUT_HANDLE		4110388	0					
ANR	4110575	Identifier	STD_OUTPUT_HANDLE		4110388	0					
ANR	4110576	ExpressionStatement	si . hStdInput = pipe [ 0 ]	2125:1:55648:55670	4110388	16	True				
ANR	4110577	AssignmentExpression	si . hStdInput = pipe [ 0 ]		4110388	0		=			
ANR	4110578	MemberAccess	si . hStdInput		4110388	0					
ANR	4110579	Identifier	si		4110388	0					
ANR	4110580	Identifier	hStdInput		4110388	1					
ANR	4110581	ArrayIndexing	pipe [ 0 ]		4110388	1					
ANR	4110582	Identifier	pipe		4110388	0					
ANR	4110583	PrimaryExpression	0		4110388	1					
ANR	4110584	ExpressionStatement	si . dwFlags |= STARTF_USESTDHANDLES	2126:1:55673:55707	4110388	17	True				
ANR	4110585	AssignmentExpression	si . dwFlags |= STARTF_USESTDHANDLES		4110388	0		|=			
ANR	4110586	MemberAccess	si . dwFlags		4110388	0					
ANR	4110587	Identifier	si		4110388	0					
ANR	4110588	Identifier	dwFlags		4110388	1					
ANR	4110589	Identifier	STARTF_USESTDHANDLES		4110388	1					
ANR	4110590	ExpressionStatement	si . cb = sizeof ( si )	2127:1:55710:55729	4110388	18	True				
ANR	4110591	AssignmentExpression	si . cb = sizeof ( si )		4110388	0		=			
ANR	4110592	MemberAccess	si . cb		4110388	0					
ANR	4110593	Identifier	si		4110388	0					
ANR	4110594	Identifier	cb		4110388	1					
ANR	4110595	SizeofExpression	sizeof ( si )		4110388	1					
ANR	4110596	Sizeof	sizeof		4110388	0					
ANR	4110597	SizeofOperand	si		4110388	1					
ANR	4110598	ExpressionStatement	_shell_cmd = shell_cmd	2128:1:55732:55754	4110388	19	True				
ANR	4110599	AssignmentExpression	_shell_cmd = shell_cmd		4110388	0		=			
ANR	4110600	Identifier	_shell_cmd		4110388	0					
ANR	4110601	Identifier	shell_cmd		4110388	1					
ANR	4110602	WhileStatement	while ( * _shell_cmd && isspace ( ( ut8 ) * _shell_cmd ) )		4110388	20					
ANR	4110603	Condition	* _shell_cmd && isspace ( ( ut8 ) * _shell_cmd )	2129:8:55764:55804	4110388	0	True				
ANR	4110604	AndExpression	* _shell_cmd && isspace ( ( ut8 ) * _shell_cmd )		4110388	0		&&			
ANR	4110605	UnaryOperationExpression	* _shell_cmd		4110388	0					
ANR	4110606	UnaryOperator	*		4110388	0					
ANR	4110607	Identifier	_shell_cmd		4110388	1					
ANR	4110608	CallExpression	isspace ( ( ut8 ) * _shell_cmd )		4110388	1					
ANR	4110609	Callee	isspace		4110388	0					
ANR	4110610	Identifier	isspace		4110388	0					
ANR	4110611	ArgumentList	( ut8 ) * _shell_cmd		4110388	1					
ANR	4110612	Argument	( ut8 ) * _shell_cmd		4110388	0					
ANR	4110613	CastExpression	( ut8 ) * _shell_cmd		4110388	0					
ANR	4110614	CastTarget	ut8		4110388	0					
ANR	4110615	UnaryOperationExpression	* _shell_cmd		4110388	1					
ANR	4110616	UnaryOperator	*		4110388	0					
ANR	4110617	Identifier	_shell_cmd		4110388	1					
ANR	4110618	CompoundStatement		29:51:911:911	4110388	1					
ANR	4110619	ExpressionStatement	_shell_cmd ++	2130:2:55811:55823	4110388	0	True				
ANR	4110620	PostIncDecOperationExpression	_shell_cmd ++		4110388	0					
ANR	4110621	Identifier	_shell_cmd		4110388	0					
ANR	4110622	IncDec	++		4110388	1					
ANR	4110623	IdentifierDeclStatement	"char * tmp = r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd ) ;"	2132:1:55829:55879	4110388	21	True				
ANR	4110624	IdentifierDecl	"* tmp = r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd )"		4110388	0					
ANR	4110625	IdentifierDeclType	char *		4110388	0					
ANR	4110626	Identifier	tmp		4110388	1					
ANR	4110627	AssignmentExpression	"* tmp = r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd )"		4110388	2		=			
ANR	4110628	Identifier	tmp		4110388	0					
ANR	4110629	CallExpression	"r_str_newf ( ""/Q /c \\""%s\\"""" , shell_cmd )"		4110388	1					
ANR	4110630	Callee	r_str_newf		4110388	0					
ANR	4110631	Identifier	r_str_newf		4110388	0					
ANR	4110632	ArgumentList	"""/Q /c \\""%s\\"""""		4110388	1					
ANR	4110633	Argument	"""/Q /c \\""%s\\"""""		4110388	0					
ANR	4110634	PrimaryExpression	"""/Q /c \\""%s\\"""""		4110388	0					
ANR	4110635	Argument	shell_cmd		4110388	1					
ANR	4110636	Identifier	shell_cmd		4110388	0					
ANR	4110637	IfStatement	if ( ! tmp )		4110388	22					
ANR	4110638	Condition	! tmp	2133:5:55886:55889	4110388	0	True				
ANR	4110639	UnaryOperationExpression	! tmp		4110388	0					
ANR	4110640	UnaryOperator	!		4110388	0					
ANR	4110641	Identifier	tmp		4110388	1					
ANR	4110642	CompoundStatement		33:11:996:996	4110388	1					
ANR	4110643	GotoStatement	goto err_r_w32_cmd_pipe ;	2134:2:55896:55919	4110388	0	True				
ANR	4110644	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110645	ExpressionStatement	_shell_cmd = tmp	2136:1:55925:55941	4110388	23	True				
ANR	4110646	AssignmentExpression	_shell_cmd = tmp		4110388	0		=			
ANR	4110647	Identifier	_shell_cmd		4110388	0					
ANR	4110648	Identifier	tmp		4110388	1					
ANR	4110649	ExpressionStatement	_shell_cmd_ = r_sys_conv_utf8_to_win ( _shell_cmd )	2137:1:55944:55993	4110388	24	True				
ANR	4110650	AssignmentExpression	_shell_cmd_ = r_sys_conv_utf8_to_win ( _shell_cmd )		4110388	0		=			
ANR	4110651	Identifier	_shell_cmd_		4110388	0					
ANR	4110652	CallExpression	r_sys_conv_utf8_to_win ( _shell_cmd )		4110388	1					
ANR	4110653	Callee	r_sys_conv_utf8_to_win		4110388	0					
ANR	4110654	Identifier	r_sys_conv_utf8_to_win		4110388	0					
ANR	4110655	ArgumentList	_shell_cmd		4110388	1					
ANR	4110656	Argument	_shell_cmd		4110388	0					
ANR	4110657	Identifier	_shell_cmd		4110388	0					
ANR	4110658	ExpressionStatement	free ( tmp )	2138:1:55996:56006	4110388	25	True				
ANR	4110659	CallExpression	free ( tmp )		4110388	0					
ANR	4110660	Callee	free		4110388	0					
ANR	4110661	Identifier	free		4110388	0					
ANR	4110662	ArgumentList	tmp		4110388	1					
ANR	4110663	Argument	tmp		4110388	0					
ANR	4110664	Identifier	tmp		4110388	0					
ANR	4110665	IfStatement	if ( ! _shell_cmd_ )		4110388	26					
ANR	4110666	Condition	! _shell_cmd_	2139:5:56013:56024	4110388	0	True				
ANR	4110667	UnaryOperationExpression	! _shell_cmd_		4110388	0					
ANR	4110668	UnaryOperator	!		4110388	0					
ANR	4110669	Identifier	_shell_cmd_		4110388	1					
ANR	4110670	CompoundStatement		39:19:1131:1131	4110388	1					
ANR	4110671	GotoStatement	goto err_r_w32_cmd_pipe ;	2140:2:56031:56054	4110388	0	True				
ANR	4110672	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110673	IdentifierDeclStatement	"TCHAR * systemdir = calloc ( MAX_PATH , sizeof ( TCHAR ) ) ;"	2142:1:56060:56112	4110388	27	True				
ANR	4110674	IdentifierDecl	"* systemdir = calloc ( MAX_PATH , sizeof ( TCHAR ) )"		4110388	0					
ANR	4110675	IdentifierDeclType	TCHAR *		4110388	0					
ANR	4110676	Identifier	systemdir		4110388	1					
ANR	4110677	AssignmentExpression	"* systemdir = calloc ( MAX_PATH , sizeof ( TCHAR ) )"		4110388	2		=			
ANR	4110678	Identifier	systemdir		4110388	0					
ANR	4110679	CallExpression	"calloc ( MAX_PATH , sizeof ( TCHAR ) )"		4110388	1					
ANR	4110680	Callee	calloc		4110388	0					
ANR	4110681	Identifier	calloc		4110388	0					
ANR	4110682	ArgumentList	MAX_PATH		4110388	1					
ANR	4110683	Argument	MAX_PATH		4110388	0					
ANR	4110684	Identifier	MAX_PATH		4110388	0					
ANR	4110685	Argument	sizeof ( TCHAR )		4110388	1					
ANR	4110686	SizeofExpression	sizeof ( TCHAR )		4110388	0					
ANR	4110687	Sizeof	sizeof		4110388	0					
ANR	4110688	SizeofOperand	TCHAR		4110388	1					
ANR	4110689	IfStatement	if ( ! systemdir )		4110388	28					
ANR	4110690	Condition	! systemdir	2143:5:56119:56128	4110388	0	True				
ANR	4110691	UnaryOperationExpression	! systemdir		4110388	0					
ANR	4110692	UnaryOperator	!		4110388	0					
ANR	4110693	Identifier	systemdir		4110388	1					
ANR	4110694	CompoundStatement		43:17:1235:1235	4110388	1					
ANR	4110695	GotoStatement	goto err_r_w32_cmd_pipe ;	2144:2:56135:56158	4110388	0	True				
ANR	4110696	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110697	IdentifierDeclStatement	"int ret = GetSystemDirectory ( systemdir , MAX_PATH ) ;"	2146:1:56164:56214	4110388	29	True				
ANR	4110698	IdentifierDecl	"ret = GetSystemDirectory ( systemdir , MAX_PATH )"		4110388	0					
ANR	4110699	IdentifierDeclType	int		4110388	0					
ANR	4110700	Identifier	ret		4110388	1					
ANR	4110701	AssignmentExpression	"ret = GetSystemDirectory ( systemdir , MAX_PATH )"		4110388	2		=			
ANR	4110702	Identifier	ret		4110388	0					
ANR	4110703	CallExpression	"GetSystemDirectory ( systemdir , MAX_PATH )"		4110388	1					
ANR	4110704	Callee	GetSystemDirectory		4110388	0					
ANR	4110705	Identifier	GetSystemDirectory		4110388	0					
ANR	4110706	ArgumentList	systemdir		4110388	1					
ANR	4110707	Argument	systemdir		4110388	0					
ANR	4110708	Identifier	systemdir		4110388	0					
ANR	4110709	Argument	MAX_PATH		4110388	1					
ANR	4110710	Identifier	MAX_PATH		4110388	0					
ANR	4110711	IfStatement	if ( ! ret )		4110388	30					
ANR	4110712	Condition	! ret	2147:5:56221:56224	4110388	0	True				
ANR	4110713	UnaryOperationExpression	! ret		4110388	0					
ANR	4110714	UnaryOperator	!		4110388	0					
ANR	4110715	Identifier	ret		4110388	1					
ANR	4110716	CompoundStatement		47:11:1331:1331	4110388	1					
ANR	4110717	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/systemdir"" )"	2148:2:56231:56272	4110388	0	True				
ANR	4110718	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/systemdir"" )"		4110388	0					
ANR	4110719	Callee	r_sys_perror		4110388	0					
ANR	4110720	Identifier	r_sys_perror		4110388	0					
ANR	4110721	ArgumentList	"""r_w32_cmd_pipe/systemdir"""		4110388	1					
ANR	4110722	Argument	"""r_w32_cmd_pipe/systemdir"""		4110388	0					
ANR	4110723	PrimaryExpression	"""r_w32_cmd_pipe/systemdir"""		4110388	0					
ANR	4110724	GotoStatement	goto err_r_w32_cmd_pipe ;	2149:2:56276:56299	4110388	1	True				
ANR	4110725	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110726	ExpressionStatement	"_tcscat_s ( systemdir , MAX_PATH , TEXT ( ""\\\\cmd.exe"" ) )"	2151:1:56305:56355	4110388	31	True				
ANR	4110727	CallExpression	"_tcscat_s ( systemdir , MAX_PATH , TEXT ( ""\\\\cmd.exe"" ) )"		4110388	0					
ANR	4110728	Callee	_tcscat_s		4110388	0					
ANR	4110729	Identifier	_tcscat_s		4110388	0					
ANR	4110730	ArgumentList	systemdir		4110388	1					
ANR	4110731	Argument	systemdir		4110388	0					
ANR	4110732	Identifier	systemdir		4110388	0					
ANR	4110733	Argument	MAX_PATH		4110388	1					
ANR	4110734	Identifier	MAX_PATH		4110388	0					
ANR	4110735	Argument	"TEXT ( ""\\\\cmd.exe"" )"		4110388	2					
ANR	4110736	CallExpression	"TEXT ( ""\\\\cmd.exe"" )"		4110388	0					
ANR	4110737	Callee	TEXT		4110388	0					
ANR	4110738	Identifier	TEXT		4110388	0					
ANR	4110739	ArgumentList	"""\\\\cmd.exe"""		4110388	1					
ANR	4110740	Argument	"""\\\\cmd.exe"""		4110388	0					
ANR	4110741	PrimaryExpression	"""\\\\cmd.exe"""		4110388	0					
ANR	4110742	IfStatement	"if ( ! CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi ) )"		4110388	32					
ANR	4110743	Condition	"! CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi )"	2153:5:56387:56468	4110388	0	True				
ANR	4110744	UnaryOperationExpression	"! CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi )"		4110388	0					
ANR	4110745	UnaryOperator	!		4110388	0					
ANR	4110746	CallExpression	"CreateProcess ( systemdir , _shell_cmd_ , NULL , NULL , TRUE , 0 , NULL , NULL , & si , & pi )"		4110388	1					
ANR	4110747	Callee	CreateProcess		4110388	0					
ANR	4110748	Identifier	CreateProcess		4110388	0					
ANR	4110749	ArgumentList	systemdir		4110388	1					
ANR	4110750	Argument	systemdir		4110388	0					
ANR	4110751	Identifier	systemdir		4110388	0					
ANR	4110752	Argument	_shell_cmd_		4110388	1					
ANR	4110753	Identifier	_shell_cmd_		4110388	0					
ANR	4110754	Argument	NULL		4110388	2					
ANR	4110755	Identifier	NULL		4110388	0					
ANR	4110756	Argument	NULL		4110388	3					
ANR	4110757	Identifier	NULL		4110388	0					
ANR	4110758	Argument	TRUE		4110388	4					
ANR	4110759	Identifier	TRUE		4110388	0					
ANR	4110760	Argument	0		4110388	5					
ANR	4110761	PrimaryExpression	0		4110388	0					
ANR	4110762	Argument	NULL		4110388	6					
ANR	4110763	Identifier	NULL		4110388	0					
ANR	4110764	Argument	NULL		4110388	7					
ANR	4110765	Identifier	NULL		4110388	0					
ANR	4110766	Argument	& si		4110388	8					
ANR	4110767	UnaryOperationExpression	& si		4110388	0					
ANR	4110768	UnaryOperator	&		4110388	0					
ANR	4110769	Identifier	si		4110388	1					
ANR	4110770	Argument	& pi		4110388	9					
ANR	4110771	UnaryOperationExpression	& pi		4110388	0					
ANR	4110772	UnaryOperator	&		4110388	0					
ANR	4110773	Identifier	pi		4110388	1					
ANR	4110774	CompoundStatement		53:89:1575:1575	4110388	1					
ANR	4110775	ExpressionStatement	"r_sys_perror ( ""r_w32_cmd_pipe/CreateProcess"" )"	2154:2:56475:56520	4110388	0	True				
ANR	4110776	CallExpression	"r_sys_perror ( ""r_w32_cmd_pipe/CreateProcess"" )"		4110388	0					
ANR	4110777	Callee	r_sys_perror		4110388	0					
ANR	4110778	Identifier	r_sys_perror		4110388	0					
ANR	4110779	ArgumentList	"""r_w32_cmd_pipe/CreateProcess"""		4110388	1					
ANR	4110780	Argument	"""r_w32_cmd_pipe/CreateProcess"""		4110388	0					
ANR	4110781	PrimaryExpression	"""r_w32_cmd_pipe/CreateProcess"""		4110388	0					
ANR	4110782	GotoStatement	goto err_r_w32_cmd_pipe ;	2155:2:56524:56547	4110388	1	True				
ANR	4110783	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110784	ExpressionStatement	"fd_out = _open_osfhandle ( ( intptr_t ) pipe [ 1 ] , _O_WRONLY | _O_TEXT )"	2157:1:56553:56616	4110388	33	True				
ANR	4110785	AssignmentExpression	"fd_out = _open_osfhandle ( ( intptr_t ) pipe [ 1 ] , _O_WRONLY | _O_TEXT )"		4110388	0		=			
ANR	4110786	Identifier	fd_out		4110388	0					
ANR	4110787	CallExpression	"_open_osfhandle ( ( intptr_t ) pipe [ 1 ] , _O_WRONLY | _O_TEXT )"		4110388	1					
ANR	4110788	Callee	_open_osfhandle		4110388	0					
ANR	4110789	Identifier	_open_osfhandle		4110388	0					
ANR	4110790	ArgumentList	( intptr_t ) pipe [ 1 ]		4110388	1					
ANR	4110791	Argument	( intptr_t ) pipe [ 1 ]		4110388	0					
ANR	4110792	CastExpression	( intptr_t ) pipe [ 1 ]		4110388	0					
ANR	4110793	CastTarget	intptr_t		4110388	0					
ANR	4110794	ArrayIndexing	pipe [ 1 ]		4110388	1					
ANR	4110795	Identifier	pipe		4110388	0					
ANR	4110796	PrimaryExpression	1		4110388	1					
ANR	4110797	Argument	_O_WRONLY | _O_TEXT		4110388	1					
ANR	4110798	InclusiveOrExpression	_O_WRONLY | _O_TEXT		4110388	0		|			
ANR	4110799	Identifier	_O_WRONLY		4110388	0					
ANR	4110800	Identifier	_O_TEXT		4110388	1					
ANR	4110801	IfStatement	if ( fd_out == - 1 )		4110388	34					
ANR	4110802	Condition	fd_out == - 1	2158:5:56623:56634	4110388	0	True				
ANR	4110803	EqualityExpression	fd_out == - 1		4110388	0		==			
ANR	4110804	Identifier	fd_out		4110388	0					
ANR	4110805	UnaryOperationExpression	- 1		4110388	1					
ANR	4110806	UnaryOperator	-		4110388	0					
ANR	4110807	PrimaryExpression	1		4110388	1					
ANR	4110808	CompoundStatement		58:19:1741:1741	4110388	1					
ANR	4110809	ExpressionStatement	"perror ( ""_open_osfhandle"" )"	2159:2:56641:56667	4110388	0	True				
ANR	4110810	CallExpression	"perror ( ""_open_osfhandle"" )"		4110388	0					
ANR	4110811	Callee	perror		4110388	0					
ANR	4110812	Identifier	perror		4110388	0					
ANR	4110813	ArgumentList	"""_open_osfhandle"""		4110388	1					
ANR	4110814	Argument	"""_open_osfhandle"""		4110388	0					
ANR	4110815	PrimaryExpression	"""_open_osfhandle"""		4110388	0					
ANR	4110816	GotoStatement	goto err_r_w32_cmd_pipe ;	2160:2:56671:56694	4110388	1	True				
ANR	4110817	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110818	ExpressionStatement	cons_out = dup ( 1 )	2162:1:56700:56718	4110388	35	True				
ANR	4110819	AssignmentExpression	cons_out = dup ( 1 )		4110388	0		=			
ANR	4110820	Identifier	cons_out		4110388	0					
ANR	4110821	CallExpression	dup ( 1 )		4110388	1					
ANR	4110822	Callee	dup		4110388	0					
ANR	4110823	Identifier	dup		4110388	0					
ANR	4110824	ArgumentList	1		4110388	1					
ANR	4110825	Argument	1		4110388	0					
ANR	4110826	PrimaryExpression	1		4110388	0					
ANR	4110827	ExpressionStatement	"dup2 ( fd_out , 1 )"	2163:1:56721:56737	4110388	36	True				
ANR	4110828	CallExpression	"dup2 ( fd_out , 1 )"		4110388	0					
ANR	4110829	Callee	dup2		4110388	0					
ANR	4110830	Identifier	dup2		4110388	0					
ANR	4110831	ArgumentList	fd_out		4110388	1					
ANR	4110832	Argument	fd_out		4110388	0					
ANR	4110833	Identifier	fd_out		4110388	0					
ANR	4110834	Argument	1		4110388	1					
ANR	4110835	PrimaryExpression	1		4110388	0					
ANR	4110836	ExpressionStatement	"r_core_cmd ( core , radare_cmd , 0 )"	2165:1:56764:56796	4110388	37	True				
ANR	4110837	CallExpression	"r_core_cmd ( core , radare_cmd , 0 )"		4110388	0					
ANR	4110838	Callee	r_core_cmd		4110388	0					
ANR	4110839	Identifier	r_core_cmd		4110388	0					
ANR	4110840	ArgumentList	core		4110388	1					
ANR	4110841	Argument	core		4110388	0					
ANR	4110842	Identifier	core		4110388	0					
ANR	4110843	Argument	radare_cmd		4110388	1					
ANR	4110844	Identifier	radare_cmd		4110388	0					
ANR	4110845	Argument	0		4110388	2					
ANR	4110846	PrimaryExpression	0		4110388	0					
ANR	4110847	ExpressionStatement	r_cons_flush ( )	2166:1:56799:56814	4110388	38	True				
ANR	4110848	CallExpression	r_cons_flush ( )		4110388	0					
ANR	4110849	Callee	r_cons_flush		4110388	0					
ANR	4110850	Identifier	r_cons_flush		4110388	0					
ANR	4110851	ArgumentList			4110388	1					
ANR	4110852	ExpressionStatement	close ( 1 )	2167:1:56817:56826	4110388	39	True				
ANR	4110853	CallExpression	close ( 1 )		4110388	0					
ANR	4110854	Callee	close		4110388	0					
ANR	4110855	Identifier	close		4110388	0					
ANR	4110856	ArgumentList	1		4110388	1					
ANR	4110857	Argument	1		4110388	0					
ANR	4110858	PrimaryExpression	1		4110388	0					
ANR	4110859	ExpressionStatement	close ( fd_out )	2168:1:56829:56843	4110388	40	True				
ANR	4110860	CallExpression	close ( fd_out )		4110388	0					
ANR	4110861	Callee	close		4110388	0					
ANR	4110862	Identifier	close		4110388	0					
ANR	4110863	ArgumentList	fd_out		4110388	1					
ANR	4110864	Argument	fd_out		4110388	0					
ANR	4110865	Identifier	fd_out		4110388	0					
ANR	4110866	ExpressionStatement	fd_out = - 1	2169:1:56846:56857	4110388	41	True				
ANR	4110867	AssignmentExpression	fd_out = - 1		4110388	0		=			
ANR	4110868	Identifier	fd_out		4110388	0					
ANR	4110869	UnaryOperationExpression	- 1		4110388	1					
ANR	4110870	UnaryOperator	-		4110388	0					
ANR	4110871	PrimaryExpression	1		4110388	1					
ANR	4110872	ExpressionStatement	"WaitForSingleObject ( pi . hProcess , INFINITE )"	2170:1:56860:56903	4110388	42	True				
ANR	4110873	CallExpression	"WaitForSingleObject ( pi . hProcess , INFINITE )"		4110388	0					
ANR	4110874	Callee	WaitForSingleObject		4110388	0					
ANR	4110875	Identifier	WaitForSingleObject		4110388	0					
ANR	4110876	ArgumentList	pi . hProcess		4110388	1					
ANR	4110877	Argument	pi . hProcess		4110388	0					
ANR	4110878	MemberAccess	pi . hProcess		4110388	0					
ANR	4110879	Identifier	pi		4110388	0					
ANR	4110880	Identifier	hProcess		4110388	1					
ANR	4110881	Argument	INFINITE		4110388	1					
ANR	4110882	Identifier	INFINITE		4110388	0					
ANR	4110883	Label	err_r_w32_cmd_pipe :	2171:0:56905:56923	4110388	43	True				
ANR	4110884	Identifier	err_r_w32_cmd_pipe		4110388	0					
ANR	4110885	IfStatement	if ( pi . hProcess )		4110388	44					
ANR	4110886	Condition	pi . hProcess	2172:5:56930:56940	4110388	0	True				
ANR	4110887	MemberAccess	pi . hProcess		4110388	0					
ANR	4110888	Identifier	pi		4110388	0					
ANR	4110889	Identifier	hProcess		4110388	1					
ANR	4110890	CompoundStatement		72:18:2047:2047	4110388	1					
ANR	4110891	ExpressionStatement	CloseHandle ( pi . hProcess )	2173:2:56947:56972	4110388	0	True				
ANR	4110892	CallExpression	CloseHandle ( pi . hProcess )		4110388	0					
ANR	4110893	Callee	CloseHandle		4110388	0					
ANR	4110894	Identifier	CloseHandle		4110388	0					
ANR	4110895	ArgumentList	pi . hProcess		4110388	1					
ANR	4110896	Argument	pi . hProcess		4110388	0					
ANR	4110897	MemberAccess	pi . hProcess		4110388	0					
ANR	4110898	Identifier	pi		4110388	0					
ANR	4110899	Identifier	hProcess		4110388	1					
ANR	4110900	IfStatement	if ( pi . hThread )		4110388	45					
ANR	4110901	Condition	pi . hThread	2175:5:56982:56991	4110388	0	True				
ANR	4110902	MemberAccess	pi . hThread		4110388	0					
ANR	4110903	Identifier	pi		4110388	0					
ANR	4110904	Identifier	hThread		4110388	1					
ANR	4110905	CompoundStatement		75:17:2098:2098	4110388	1					
ANR	4110906	ExpressionStatement	CloseHandle ( pi . hThread )	2176:2:56998:57022	4110388	0	True				
ANR	4110907	CallExpression	CloseHandle ( pi . hThread )		4110388	0					
ANR	4110908	Callee	CloseHandle		4110388	0					
ANR	4110909	Identifier	CloseHandle		4110388	0					
ANR	4110910	ArgumentList	pi . hThread		4110388	1					
ANR	4110911	Argument	pi . hThread		4110388	0					
ANR	4110912	MemberAccess	pi . hThread		4110388	0					
ANR	4110913	Identifier	pi		4110388	0					
ANR	4110914	Identifier	hThread		4110388	1					
ANR	4110915	IfStatement	if ( pipe [ 0 ] )		4110388	46					
ANR	4110916	Condition	pipe [ 0 ]	2178:5:57032:57038	4110388	0	True				
ANR	4110917	ArrayIndexing	pipe [ 0 ]		4110388	0					
ANR	4110918	Identifier	pipe		4110388	0					
ANR	4110919	PrimaryExpression	0		4110388	1					
ANR	4110920	CompoundStatement		78:14:2145:2145	4110388	1					
ANR	4110921	ExpressionStatement	CloseHandle ( pipe [ 0 ] )	2179:2:57045:57066	4110388	0	True				
ANR	4110922	CallExpression	CloseHandle ( pipe [ 0 ] )		4110388	0					
ANR	4110923	Callee	CloseHandle		4110388	0					
ANR	4110924	Identifier	CloseHandle		4110388	0					
ANR	4110925	ArgumentList	pipe [ 0 ]		4110388	1					
ANR	4110926	Argument	pipe [ 0 ]		4110388	0					
ANR	4110927	ArrayIndexing	pipe [ 0 ]		4110388	0					
ANR	4110928	Identifier	pipe		4110388	0					
ANR	4110929	PrimaryExpression	0		4110388	1					
ANR	4110930	IfStatement	if ( pipe [ 1 ] )		4110388	47					
ANR	4110931	Condition	pipe [ 1 ]	2181:5:57076:57082	4110388	0	True				
ANR	4110932	ArrayIndexing	pipe [ 1 ]		4110388	0					
ANR	4110933	Identifier	pipe		4110388	0					
ANR	4110934	PrimaryExpression	1		4110388	1					
ANR	4110935	CompoundStatement		81:14:2189:2189	4110388	1					
ANR	4110936	ExpressionStatement	CloseHandle ( pipe [ 1 ] )	2182:2:57089:57110	4110388	0	True				
ANR	4110937	CallExpression	CloseHandle ( pipe [ 1 ] )		4110388	0					
ANR	4110938	Callee	CloseHandle		4110388	0					
ANR	4110939	Identifier	CloseHandle		4110388	0					
ANR	4110940	ArgumentList	pipe [ 1 ]		4110388	1					
ANR	4110941	Argument	pipe [ 1 ]		4110388	0					
ANR	4110942	ArrayIndexing	pipe [ 1 ]		4110388	0					
ANR	4110943	Identifier	pipe		4110388	0					
ANR	4110944	PrimaryExpression	1		4110388	1					
ANR	4110945	IfStatement	if ( fd_out != - 1 )		4110388	48					
ANR	4110946	Condition	fd_out != - 1	2184:5:57120:57131	4110388	0	True				
ANR	4110947	EqualityExpression	fd_out != - 1		4110388	0		!=			
ANR	4110948	Identifier	fd_out		4110388	0					
ANR	4110949	UnaryOperationExpression	- 1		4110388	1					
ANR	4110950	UnaryOperator	-		4110388	0					
ANR	4110951	PrimaryExpression	1		4110388	1					
ANR	4110952	CompoundStatement		84:19:2238:2238	4110388	1					
ANR	4110953	ExpressionStatement	close ( fd_out )	2185:2:57138:57152	4110388	0	True				
ANR	4110954	CallExpression	close ( fd_out )		4110388	0					
ANR	4110955	Callee	close		4110388	0					
ANR	4110956	Identifier	close		4110388	0					
ANR	4110957	ArgumentList	fd_out		4110388	1					
ANR	4110958	Argument	fd_out		4110388	0					
ANR	4110959	Identifier	fd_out		4110388	0					
ANR	4110960	IfStatement	if ( cons_out != - 1 )		4110388	49					
ANR	4110961	Condition	cons_out != - 1	2187:5:57162:57175	4110388	0	True				
ANR	4110962	EqualityExpression	cons_out != - 1		4110388	0		!=			
ANR	4110963	Identifier	cons_out		4110388	0					
ANR	4110964	UnaryOperationExpression	- 1		4110388	1					
ANR	4110965	UnaryOperator	-		4110388	0					
ANR	4110966	PrimaryExpression	1		4110388	1					
ANR	4110967	CompoundStatement		87:21:2282:2282	4110388	1					
ANR	4110968	ExpressionStatement	"dup2 ( cons_out , 1 )"	2188:2:57182:57200	4110388	0	True				
ANR	4110969	CallExpression	"dup2 ( cons_out , 1 )"		4110388	0					
ANR	4110970	Callee	dup2		4110388	0					
ANR	4110971	Identifier	dup2		4110388	0					
ANR	4110972	ArgumentList	cons_out		4110388	1					
ANR	4110973	Argument	cons_out		4110388	0					
ANR	4110974	Identifier	cons_out		4110388	0					
ANR	4110975	Argument	1		4110388	1					
ANR	4110976	PrimaryExpression	1		4110388	0					
ANR	4110977	ExpressionStatement	close ( cons_out )	2189:2:57204:57220	4110388	1	True				
ANR	4110978	CallExpression	close ( cons_out )		4110388	0					
ANR	4110979	Callee	close		4110388	0					
ANR	4110980	Identifier	close		4110388	0					
ANR	4110981	ArgumentList	cons_out		4110388	1					
ANR	4110982	Argument	cons_out		4110388	0					
ANR	4110983	Identifier	cons_out		4110388	0					
ANR	4110984	ExpressionStatement	free ( systemdir )	2191:1:57226:57242	4110388	50	True				
ANR	4110985	CallExpression	free ( systemdir )		4110388	0					
ANR	4110986	Callee	free		4110388	0					
ANR	4110987	Identifier	free		4110388	0					
ANR	4110988	ArgumentList	systemdir		4110388	1					
ANR	4110989	Argument	systemdir		4110388	0					
ANR	4110990	Identifier	systemdir		4110388	0					
ANR	4110991	ExpressionStatement	free ( _shell_cmd_ )	2192:1:57245:57263	4110388	51	True				
ANR	4110992	CallExpression	free ( _shell_cmd_ )		4110388	0					
ANR	4110993	Callee	free		4110388	0					
ANR	4110994	Identifier	free		4110388	0					
ANR	4110995	ArgumentList	_shell_cmd_		4110388	1					
ANR	4110996	Argument	_shell_cmd_		4110388	0					
ANR	4110997	Identifier	_shell_cmd_		4110388	0					
ANR	4110998	ExpressionStatement	"SetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , mode )"	2193:1:57266:57321	4110388	52	True				
ANR	4110999	CallExpression	"SetConsoleMode ( GetStdHandle ( STD_OUTPUT_HANDLE ) , mode )"		4110388	0					
ANR	4111000	Callee	SetConsoleMode		4110388	0					
ANR	4111001	Identifier	SetConsoleMode		4110388	0					
ANR	4111002	ArgumentList	GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	1					
ANR	4111003	Argument	GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	0					
ANR	4111004	CallExpression	GetStdHandle ( STD_OUTPUT_HANDLE )		4110388	0					
ANR	4111005	Callee	GetStdHandle		4110388	0					
ANR	4111006	Identifier	GetStdHandle		4110388	0					
ANR	4111007	ArgumentList	STD_OUTPUT_HANDLE		4110388	1					
ANR	4111008	Argument	STD_OUTPUT_HANDLE		4110388	0					
ANR	4111009	Identifier	STD_OUTPUT_HANDLE		4110388	0					
ANR	4111010	Argument	mode		4110388	1					
ANR	4111011	Identifier	mode		4110388	0					
ANR	4111012	ReturnType	static void		4110388	1					
ANR	4111013	Identifier	r_w32_cmd_pipe		4110388	2					
ANR	4111014	ParameterList	"RCore * core , char * radare_cmd , char * shell_cmd"		4110388	3					
ANR	4111015	Parameter	RCore * core	2101:27:54847:54857	4110388	0	True				
ANR	4111016	ParameterType	RCore *		4110388	0					
ANR	4111017	Identifier	core		4110388	1					
ANR	4111018	Parameter	char * radare_cmd	2101:40:54860:54875	4110388	1	True				
ANR	4111019	ParameterType	char *		4110388	0					
ANR	4111020	Identifier	radare_cmd		4110388	1					
ANR	4111021	Parameter	char * shell_cmd	2101:58:54878:54892	4110388	2	True				
ANR	4111022	ParameterType	char *		4110388	0					
ANR	4111023	Identifier	shell_cmd		4110388	1					
ANR	4111024	CFGEntryNode	ENTRY		4110388		True				
ANR	4111025	CFGExitNode	EXIT		4110388		True				
ANR	4111026	Symbol	& si		4110388						
ANR	4111027	Symbol	radare_cmd		4110388						
ANR	4111028	Symbol	_open_osfhandle		4110388						
ANR	4111029	Symbol	CreatePipe		4110388						
ANR	4111030	Symbol	TEXT		4110388						
ANR	4111031	Symbol	mode		4110388						
ANR	4111032	Symbol	* _shell_cmd		4110388						
ANR	4111033	Symbol	& mode		4110388						
ANR	4111034	Symbol	_shell_cmd		4110388						
ANR	4111035	Symbol	tmp		4110388						
ANR	4111036	Symbol	& sa		4110388						
ANR	4111037	Symbol	pipe		4110388						
ANR	4111038	Symbol	SetHandleInformation		4110388						
ANR	4111039	Symbol	_O_TEXT		4110388						
ANR	4111040	Symbol	GetSystemDirectory		4110388						
ANR	4111041	Symbol	ret		4110388						
ANR	4111042	Symbol	CreateProcess		4110388						
ANR	4111043	Symbol	& pi		4110388						
ANR	4111044	Symbol	NULL		4110388						
ANR	4111045	Symbol	STD_ERROR_HANDLE		4110388						
ANR	4111046	Symbol	_O_WRONLY		4110388						
ANR	4111047	Symbol	isspace		4110388						
ANR	4111048	Symbol	TRUE		4110388						
ANR	4111049	Symbol	core		4110388						
ANR	4111050	Symbol	systemdir		4110388						
ANR	4111051	Symbol	sa . bInheritHandle		4110388						
ANR	4111052	Symbol	HANDLE_FLAG_INHERIT		4110388						
ANR	4111053	Symbol	si . dwFlags		4110388						
ANR	4111054	Symbol	r_sys_conv_utf8_to_win		4110388						
ANR	4111055	Symbol	GetStdHandle		4110388						
ANR	4111056	Symbol	sa . nLength		4110388						
ANR	4111057	Symbol	* pipe		4110388						
ANR	4111058	Symbol	pi . hThread		4110388						
ANR	4111059	Symbol	r_str_newf		4110388						
ANR	4111060	Symbol	calloc		4110388						
ANR	4111061	Symbol	sa		4110388						
ANR	4111062	Symbol	STARTF_USESTDHANDLES		4110388						
ANR	4111063	Symbol	si . hStdError		4110388						
ANR	4111064	Symbol	si		4110388						
ANR	4111065	Symbol	shell_cmd		4110388						
ANR	4111066	Symbol	cons_out		4110388						
ANR	4111067	Symbol	STD_OUTPUT_HANDLE		4110388						
ANR	4111068	Symbol	_shell_cmd_		4110388						
ANR	4111069	Symbol	si . hStdOutput		4110388						
ANR	4111070	Symbol	pi . hProcess		4110388						
ANR	4111071	Symbol	si . cb		4110388						
ANR	4111072	Symbol	si . hStdInput		4110388						
ANR	4111073	Symbol	INFINITE		4110388						
ANR	4111074	Symbol	fd_out		4110388						
ANR	4111075	Symbol	sa . lpSecurityDescriptor		4110388						
ANR	4111076	Symbol	pi		4110388						
ANR	4111077	Symbol	MAX_PATH		4110388						
ANR	4111078	Symbol	dup		4110388						
ANR	4111079	Function	r_core_cmd_pipe	2197:0:57333:59415							
ANR	4111080	FunctionDef	"r_core_cmd_pipe (RCore * core , char * radare_cmd , char * shell_cmd)"		4111079	0					
ANR	4111081	CompoundStatement		2197:74:57407:59415	4111079	0					
ANR	4111082	IdentifierDeclStatement	"int stdout_fd , fds [ 2 ] ;"	2199:1:57423:57444	4111079	0	True				
ANR	4111083	IdentifierDecl	stdout_fd		4111079	0					
ANR	4111084	IdentifierDeclType	int		4111079	0					
ANR	4111085	Identifier	stdout_fd		4111079	1					
ANR	4111086	IdentifierDecl	fds [ 2 ]		4111079	1					
ANR	4111087	IdentifierDeclType	int [ 2 ]		4111079	0					
ANR	4111088	Identifier	fds		4111079	1					
ANR	4111089	PrimaryExpression	2		4111079	2					
ANR	4111090	IdentifierDeclStatement	int child ;	2200:1:57447:57456	4111079	1	True				
ANR	4111091	IdentifierDecl	child		4111079	0					
ANR	4111092	IdentifierDeclType	int		4111079	0					
ANR	4111093	Identifier	child		4111079	1					
ANR	4111094	IdentifierDeclStatement	"int si , olen , ret = - 1 , pipecolor = - 1 ;"	2202:1:57466:57504	4111079	2	True				
ANR	4111095	IdentifierDecl	si		4111079	0					
ANR	4111096	IdentifierDeclType	int		4111079	0					
ANR	4111097	Identifier	si		4111079	1					
ANR	4111098	IdentifierDecl	olen		4111079	1					
ANR	4111099	IdentifierDeclType	int		4111079	0					
ANR	4111100	Identifier	olen		4111079	1					
ANR	4111101	IdentifierDecl	ret = - 1		4111079	2					
ANR	4111102	IdentifierDeclType	int		4111079	0					
ANR	4111103	Identifier	ret		4111079	1					
ANR	4111104	AssignmentExpression	ret = - 1		4111079	2		=			
ANR	4111105	Identifier	ret		4111079	0					
ANR	4111106	UnaryOperationExpression	- 1		4111079	1					
ANR	4111107	UnaryOperator	-		4111079	0					
ANR	4111108	PrimaryExpression	1		4111079	1					
ANR	4111109	IdentifierDecl	pipecolor = - 1		4111079	3					
ANR	4111110	IdentifierDeclType	int		4111079	0					
ANR	4111111	Identifier	pipecolor		4111079	1					
ANR	4111112	AssignmentExpression	pipecolor = - 1		4111079	2		=			
ANR	4111113	Identifier	pipecolor		4111079	0					
ANR	4111114	UnaryOperationExpression	- 1		4111079	1					
ANR	4111115	UnaryOperator	-		4111079	0					
ANR	4111116	PrimaryExpression	1		4111079	1					
ANR	4111117	IdentifierDeclStatement	"char * str , * out = NULL ;"	2203:1:57507:57529	4111079	3	True				
ANR	4111118	IdentifierDecl	* str		4111079	0					
ANR	4111119	IdentifierDeclType	char *		4111079	0					
ANR	4111120	Identifier	str		4111079	1					
ANR	4111121	IdentifierDecl	* out = NULL		4111079	1					
ANR	4111122	IdentifierDeclType	char *		4111079	0					
ANR	4111123	Identifier	out		4111079	1					
ANR	4111124	AssignmentExpression	* out = NULL		4111079	2		=			
ANR	4111125	Identifier	NULL		4111079	0					
ANR	4111126	Identifier	NULL		4111079	1					
ANR	4111127	IfStatement	if ( r_sandbox_enable ( 0 ) )		4111079	4					
ANR	4111128	Condition	r_sandbox_enable ( 0 )	2205:5:57537:57556	4111079	0	True				
ANR	4111129	CallExpression	r_sandbox_enable ( 0 )		4111079	0					
ANR	4111130	Callee	r_sandbox_enable		4111079	0					
ANR	4111131	Identifier	r_sandbox_enable		4111079	0					
ANR	4111132	ArgumentList	0		4111079	1					
ANR	4111133	Argument	0		4111079	0					
ANR	4111134	PrimaryExpression	0		4111079	0					
ANR	4111135	CompoundStatement		9:27:151:151	4111079	1					
ANR	4111136	ExpressionStatement	"eprintf ( ""Pipes are not allowed in sandbox mode\\n"" )"	2206:2:57563:57614	4111079	0	True				
ANR	4111137	CallExpression	"eprintf ( ""Pipes are not allowed in sandbox mode\\n"" )"		4111079	0					
ANR	4111138	Callee	eprintf		4111079	0					
ANR	4111139	Identifier	eprintf		4111079	0					
ANR	4111140	ArgumentList	"""Pipes are not allowed in sandbox mode\\n"""		4111079	1					
ANR	4111141	Argument	"""Pipes are not allowed in sandbox mode\\n"""		4111079	0					
ANR	4111142	PrimaryExpression	"""Pipes are not allowed in sandbox mode\\n"""		4111079	0					
ANR	4111143	ReturnStatement	return - 1 ;	2207:2:57618:57627	4111079	1	True				
ANR	4111144	UnaryOperationExpression	- 1		4111079	0					
ANR	4111145	UnaryOperator	-		4111079	0					
ANR	4111146	PrimaryExpression	1		4111079	1					
ANR	4111147	ExpressionStatement	si = r_cons_is_interactive ( )	2209:1:57633:57662	4111079	5	True				
ANR	4111148	AssignmentExpression	si = r_cons_is_interactive ( )		4111079	0		=			
ANR	4111149	Identifier	si		4111079	0					
ANR	4111150	CallExpression	r_cons_is_interactive ( )		4111079	1					
ANR	4111151	Callee	r_cons_is_interactive		4111079	0					
ANR	4111152	Identifier	r_cons_is_interactive		4111079	0					
ANR	4111153	ArgumentList			4111079	1					
ANR	4111154	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , 0 )"	2210:1:57665:57716	4111079	6	True				
ANR	4111155	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , 0 )"		4111079	0					
ANR	4111156	Callee	r_config_set_i		4111079	0					
ANR	4111157	Identifier	r_config_set_i		4111079	0					
ANR	4111158	ArgumentList	core -> config		4111079	1					
ANR	4111159	Argument	core -> config		4111079	0					
ANR	4111160	PtrMemberAccess	core -> config		4111079	0					
ANR	4111161	Identifier	core		4111079	0					
ANR	4111162	Identifier	config		4111079	1					
ANR	4111163	Argument	"""scr.interactive"""		4111079	1					
ANR	4111164	PrimaryExpression	"""scr.interactive"""		4111079	0					
ANR	4111165	Argument	0		4111079	2					
ANR	4111166	PrimaryExpression	0		4111079	0					
ANR	4111167	IfStatement	"if ( ! r_config_get_i ( core -> config , ""scr.color.pipe"" ) )"		4111079	7					
ANR	4111168	Condition	"! r_config_get_i ( core -> config , ""scr.color.pipe"" )"	2211:5:57723:57770	4111079	0	True				
ANR	4111169	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""scr.color.pipe"" )"		4111079	0					
ANR	4111170	UnaryOperator	!		4111079	0					
ANR	4111171	CallExpression	"r_config_get_i ( core -> config , ""scr.color.pipe"" )"		4111079	1					
ANR	4111172	Callee	r_config_get_i		4111079	0					
ANR	4111173	Identifier	r_config_get_i		4111079	0					
ANR	4111174	ArgumentList	core -> config		4111079	1					
ANR	4111175	Argument	core -> config		4111079	0					
ANR	4111176	PtrMemberAccess	core -> config		4111079	0					
ANR	4111177	Identifier	core		4111079	0					
ANR	4111178	Identifier	config		4111079	1					
ANR	4111179	Argument	"""scr.color.pipe"""		4111079	1					
ANR	4111180	PrimaryExpression	"""scr.color.pipe"""		4111079	0					
ANR	4111181	CompoundStatement		15:55:365:365	4111079	1					
ANR	4111182	ExpressionStatement	"pipecolor = r_config_get_i ( core -> config , ""scr.color"" )"	2212:2:57777:57831	4111079	0	True				
ANR	4111183	AssignmentExpression	"pipecolor = r_config_get_i ( core -> config , ""scr.color"" )"		4111079	0		=			
ANR	4111184	Identifier	pipecolor		4111079	0					
ANR	4111185	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4111079	1					
ANR	4111186	Callee	r_config_get_i		4111079	0					
ANR	4111187	Identifier	r_config_get_i		4111079	0					
ANR	4111188	ArgumentList	core -> config		4111079	1					
ANR	4111189	Argument	core -> config		4111079	0					
ANR	4111190	PtrMemberAccess	core -> config		4111079	0					
ANR	4111191	Identifier	core		4111079	0					
ANR	4111192	Identifier	config		4111079	1					
ANR	4111193	Argument	"""scr.color"""		4111079	1					
ANR	4111194	PrimaryExpression	"""scr.color"""		4111079	0					
ANR	4111195	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2213:2:57835:57898	4111079	1	True				
ANR	4111196	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		4111079	0					
ANR	4111197	Callee	r_config_set_i		4111079	0					
ANR	4111198	Identifier	r_config_set_i		4111079	0					
ANR	4111199	ArgumentList	core -> config		4111079	1					
ANR	4111200	Argument	core -> config		4111079	0					
ANR	4111201	PtrMemberAccess	core -> config		4111079	0					
ANR	4111202	Identifier	core		4111079	0					
ANR	4111203	Identifier	config		4111079	1					
ANR	4111204	Argument	"""scr.color"""		4111079	1					
ANR	4111205	PrimaryExpression	"""scr.color"""		4111079	0					
ANR	4111206	Argument	COLOR_MODE_DISABLED		4111079	2					
ANR	4111207	Identifier	COLOR_MODE_DISABLED		4111079	0					
ANR	4111208	IfStatement	if ( * shell_cmd == '!' )		4111079	8					
ANR	4111209	Condition	* shell_cmd == '!'	2215:5:57908:57922	4111079	0	True				
ANR	4111210	EqualityExpression	* shell_cmd == '!'		4111079	0		==			
ANR	4111211	UnaryOperationExpression	* shell_cmd		4111079	0					
ANR	4111212	UnaryOperator	*		4111079	0					
ANR	4111213	Identifier	shell_cmd		4111079	1					
ANR	4111214	PrimaryExpression	'!'		4111079	1					
ANR	4111215	CompoundStatement		19:22:517:517	4111079	1					
ANR	4111216	ExpressionStatement	"r_cons_grep_parsecmd ( shell_cmd , ""\\"""" )"	2216:2:57929:57967	4111079	0	True				
ANR	4111217	CallExpression	"r_cons_grep_parsecmd ( shell_cmd , ""\\"""" )"		4111079	0					
ANR	4111218	Callee	r_cons_grep_parsecmd		4111079	0					
ANR	4111219	Identifier	r_cons_grep_parsecmd		4111079	0					
ANR	4111220	ArgumentList	shell_cmd		4111079	1					
ANR	4111221	Argument	shell_cmd		4111079	0					
ANR	4111222	Identifier	shell_cmd		4111079	0					
ANR	4111223	Argument	"""\\"""""		4111079	1					
ANR	4111224	PrimaryExpression	"""\\"""""		4111079	0					
ANR	4111225	ExpressionStatement	olen = 0	2217:2:57971:57979	4111079	1	True				
ANR	4111226	AssignmentExpression	olen = 0		4111079	0		=			
ANR	4111227	Identifier	olen		4111079	0					
ANR	4111228	PrimaryExpression	0		4111079	1					
ANR	4111229	ExpressionStatement	out = NULL	2218:2:57983:57993	4111079	2	True				
ANR	4111230	AssignmentExpression	out = NULL		4111079	0		=			
ANR	4111231	Identifier	out		4111079	0					
ANR	4111232	Identifier	NULL		4111079	1					
ANR	4111233	ExpressionStatement	"str = r_core_cmd_str ( core , radare_cmd )"	2220:2:58022:58061	4111079	3	True				
ANR	4111234	AssignmentExpression	"str = r_core_cmd_str ( core , radare_cmd )"		4111079	0		=			
ANR	4111235	Identifier	str		4111079	0					
ANR	4111236	CallExpression	"r_core_cmd_str ( core , radare_cmd )"		4111079	1					
ANR	4111237	Callee	r_core_cmd_str		4111079	0					
ANR	4111238	Identifier	r_core_cmd_str		4111079	0					
ANR	4111239	ArgumentList	core		4111079	1					
ANR	4111240	Argument	core		4111079	0					
ANR	4111241	Identifier	core		4111079	0					
ANR	4111242	Argument	radare_cmd		4111079	1					
ANR	4111243	Identifier	radare_cmd		4111079	0					
ANR	4111244	ExpressionStatement	"r_sys_cmd_str_full ( shell_cmd + 1 , str , & out , & olen , NULL )"	2221:2:58065:58123	4111079	4	True				
ANR	4111245	CallExpression	"r_sys_cmd_str_full ( shell_cmd + 1 , str , & out , & olen , NULL )"		4111079	0					
ANR	4111246	Callee	r_sys_cmd_str_full		4111079	0					
ANR	4111247	Identifier	r_sys_cmd_str_full		4111079	0					
ANR	4111248	ArgumentList	shell_cmd + 1		4111079	1					
ANR	4111249	Argument	shell_cmd + 1		4111079	0					
ANR	4111250	AdditiveExpression	shell_cmd + 1		4111079	0		+			
ANR	4111251	Identifier	shell_cmd		4111079	0					
ANR	4111252	PrimaryExpression	1		4111079	1					
ANR	4111253	Argument	str		4111079	1					
ANR	4111254	Identifier	str		4111079	0					
ANR	4111255	Argument	& out		4111079	2					
ANR	4111256	UnaryOperationExpression	& out		4111079	0					
ANR	4111257	UnaryOperator	&		4111079	0					
ANR	4111258	Identifier	out		4111079	1					
ANR	4111259	Argument	& olen		4111079	3					
ANR	4111260	UnaryOperationExpression	& olen		4111079	0					
ANR	4111261	UnaryOperator	&		4111079	0					
ANR	4111262	Identifier	olen		4111079	1					
ANR	4111263	Argument	NULL		4111079	4					
ANR	4111264	Identifier	NULL		4111079	0					
ANR	4111265	ExpressionStatement	free ( str )	2222:2:58127:58137	4111079	5	True				
ANR	4111266	CallExpression	free ( str )		4111079	0					
ANR	4111267	Callee	free		4111079	0					
ANR	4111268	Identifier	free		4111079	0					
ANR	4111269	ArgumentList	str		4111079	1					
ANR	4111270	Argument	str		4111079	0					
ANR	4111271	Identifier	str		4111079	0					
ANR	4111272	ExpressionStatement	"r_cons_memcat ( out , olen )"	2223:2:58141:58166	4111079	6	True				
ANR	4111273	CallExpression	"r_cons_memcat ( out , olen )"		4111079	0					
ANR	4111274	Callee	r_cons_memcat		4111079	0					
ANR	4111275	Identifier	r_cons_memcat		4111079	0					
ANR	4111276	ArgumentList	out		4111079	1					
ANR	4111277	Argument	out		4111079	0					
ANR	4111278	Identifier	out		4111079	0					
ANR	4111279	Argument	olen		4111079	1					
ANR	4111280	Identifier	olen		4111079	0					
ANR	4111281	ExpressionStatement	free ( out )	2224:2:58170:58180	4111079	7	True				
ANR	4111282	CallExpression	free ( out )		4111079	0					
ANR	4111283	Callee	free		4111079	0					
ANR	4111284	Identifier	free		4111079	0					
ANR	4111285	ArgumentList	out		4111079	1					
ANR	4111286	Argument	out		4111079	0					
ANR	4111287	Identifier	out		4111079	0					
ANR	4111288	ExpressionStatement	ret = 0	2225:2:58184:58191	4111079	8	True				
ANR	4111289	AssignmentExpression	ret = 0		4111079	0		=			
ANR	4111290	Identifier	ret		4111079	0					
ANR	4111291	PrimaryExpression	0		4111079	1					
ANR	4111292	ExpressionStatement	radare_cmd = ( char * ) r_str_trim_head ( radare_cmd )	2228:1:58210:58258	4111079	9	True				
ANR	4111293	AssignmentExpression	radare_cmd = ( char * ) r_str_trim_head ( radare_cmd )		4111079	0		=			
ANR	4111294	Identifier	radare_cmd		4111079	0					
ANR	4111295	CastExpression	( char * ) r_str_trim_head ( radare_cmd )		4111079	1					
ANR	4111296	CastTarget	char *		4111079	0					
ANR	4111297	CallExpression	r_str_trim_head ( radare_cmd )		4111079	1					
ANR	4111298	Callee	r_str_trim_head		4111079	0					
ANR	4111299	Identifier	r_str_trim_head		4111079	0					
ANR	4111300	ArgumentList	radare_cmd		4111079	1					
ANR	4111301	Argument	radare_cmd		4111079	0					
ANR	4111302	Identifier	radare_cmd		4111079	0					
ANR	4111303	ExpressionStatement	shell_cmd = ( char * ) r_str_trim_head ( shell_cmd )	2229:1:58261:58307	4111079	10	True				
ANR	4111304	AssignmentExpression	shell_cmd = ( char * ) r_str_trim_head ( shell_cmd )		4111079	0		=			
ANR	4111305	Identifier	shell_cmd		4111079	0					
ANR	4111306	CastExpression	( char * ) r_str_trim_head ( shell_cmd )		4111079	1					
ANR	4111307	CastTarget	char *		4111079	0					
ANR	4111308	CallExpression	r_str_trim_head ( shell_cmd )		4111079	1					
ANR	4111309	Callee	r_str_trim_head		4111079	0					
ANR	4111310	Identifier	r_str_trim_head		4111079	0					
ANR	4111311	ArgumentList	shell_cmd		4111079	1					
ANR	4111312	Argument	shell_cmd		4111079	0					
ANR	4111313	Identifier	shell_cmd		4111079	0					
ANR	4111314	ExpressionStatement	"signal ( SIGPIPE , SIG_IGN )"	2231:1:58311:58336	4111079	11	True				
ANR	4111315	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		4111079	0					
ANR	4111316	Callee	signal		4111079	0					
ANR	4111317	Identifier	signal		4111079	0					
ANR	4111318	ArgumentList	SIGPIPE		4111079	1					
ANR	4111319	Argument	SIGPIPE		4111079	0					
ANR	4111320	Identifier	SIGPIPE		4111079	0					
ANR	4111321	Argument	SIG_IGN		4111079	1					
ANR	4111322	Identifier	SIG_IGN		4111079	0					
ANR	4111323	ExpressionStatement	stdout_fd = dup ( 1 )	2232:1:58339:58358	4111079	12	True				
ANR	4111324	AssignmentExpression	stdout_fd = dup ( 1 )		4111079	0		=			
ANR	4111325	Identifier	stdout_fd		4111079	0					
ANR	4111326	CallExpression	dup ( 1 )		4111079	1					
ANR	4111327	Callee	dup		4111079	0					
ANR	4111328	Identifier	dup		4111079	0					
ANR	4111329	ArgumentList	1		4111079	1					
ANR	4111330	Argument	1		4111079	0					
ANR	4111331	PrimaryExpression	1		4111079	0					
ANR	4111332	IfStatement	if ( stdout_fd != - 1 )		4111079	13					
ANR	4111333	Condition	stdout_fd != - 1	2233:5:58365:58379	4111079	0	True				
ANR	4111334	EqualityExpression	stdout_fd != - 1		4111079	0		!=			
ANR	4111335	Identifier	stdout_fd		4111079	0					
ANR	4111336	UnaryOperationExpression	- 1		4111079	1					
ANR	4111337	UnaryOperator	-		4111079	0					
ANR	4111338	PrimaryExpression	1		4111079	1					
ANR	4111339	CompoundStatement		37:22:974:974	4111079	1					
ANR	4111340	IfStatement	if ( pipe ( fds ) == 0 )		4111079	0					
ANR	4111341	Condition	pipe ( fds ) == 0	2234:6:58390:58404	4111079	0	True				
ANR	4111342	EqualityExpression	pipe ( fds ) == 0		4111079	0		==			
ANR	4111343	CallExpression	pipe ( fds )		4111079	0					
ANR	4111344	Callee	pipe		4111079	0					
ANR	4111345	Identifier	pipe		4111079	0					
ANR	4111346	ArgumentList	fds		4111079	1					
ANR	4111347	Argument	fds		4111079	0					
ANR	4111348	Identifier	fds		4111079	0					
ANR	4111349	PrimaryExpression	0		4111079	1					
ANR	4111350	CompoundStatement		38:23:999:999	4111079	1					
ANR	4111351	ExpressionStatement	child = r_sys_fork ( )	2235:3:58412:58433	4111079	0	True				
ANR	4111352	AssignmentExpression	child = r_sys_fork ( )		4111079	0		=			
ANR	4111353	Identifier	child		4111079	0					
ANR	4111354	CallExpression	r_sys_fork ( )		4111079	1					
ANR	4111355	Callee	r_sys_fork		4111079	0					
ANR	4111356	Identifier	r_sys_fork		4111079	0					
ANR	4111357	ArgumentList			4111079	1					
ANR	4111358	IfStatement	if ( child == - 1 )		4111079	1					
ANR	4111359	Condition	child == - 1	2236:7:58442:58452	4111079	0	True				
ANR	4111360	EqualityExpression	child == - 1		4111079	0		==			
ANR	4111361	Identifier	child		4111079	0					
ANR	4111362	UnaryOperationExpression	- 1		4111079	1					
ANR	4111363	UnaryOperator	-		4111079	0					
ANR	4111364	PrimaryExpression	1		4111079	1					
ANR	4111365	CompoundStatement		40:20:1047:1047	4111079	1					
ANR	4111366	ExpressionStatement	"eprintf ( ""Cannot fork\\n"" )"	2237:4:58461:58486	4111079	0	True				
ANR	4111367	CallExpression	"eprintf ( ""Cannot fork\\n"" )"		4111079	0					
ANR	4111368	Callee	eprintf		4111079	0					
ANR	4111369	Identifier	eprintf		4111079	0					
ANR	4111370	ArgumentList	"""Cannot fork\\n"""		4111079	1					
ANR	4111371	Argument	"""Cannot fork\\n"""		4111079	0					
ANR	4111372	PrimaryExpression	"""Cannot fork\\n"""		4111079	0					
ANR	4111373	ExpressionStatement	close ( stdout_fd )	2238:4:58492:58509	4111079	1	True				
ANR	4111374	CallExpression	close ( stdout_fd )		4111079	0					
ANR	4111375	Callee	close		4111079	0					
ANR	4111376	Identifier	close		4111079	0					
ANR	4111377	ArgumentList	stdout_fd		4111079	1					
ANR	4111378	Argument	stdout_fd		4111079	0					
ANR	4111379	Identifier	stdout_fd		4111079	0					
ANR	4111380	ElseStatement	else		4111079	0					
ANR	4111381	IfStatement	if ( child )		4111079	0					
ANR	4111382	Condition	child	2239:14:58525:58529	4111079	0	True				
ANR	4111383	Identifier	child		4111079	0					
ANR	4111384	CompoundStatement		43:21:1124:1124	4111079	1					
ANR	4111385	ExpressionStatement	"dup2 ( fds [ 1 ] , 1 )"	2240:4:58538:58554	4111079	0	True				
ANR	4111386	CallExpression	"dup2 ( fds [ 1 ] , 1 )"		4111079	0					
ANR	4111387	Callee	dup2		4111079	0					
ANR	4111388	Identifier	dup2		4111079	0					
ANR	4111389	ArgumentList	fds [ 1 ]		4111079	1					
ANR	4111390	Argument	fds [ 1 ]		4111079	0					
ANR	4111391	ArrayIndexing	fds [ 1 ]		4111079	0					
ANR	4111392	Identifier	fds		4111079	0					
ANR	4111393	PrimaryExpression	1		4111079	1					
ANR	4111394	Argument	1		4111079	1					
ANR	4111395	PrimaryExpression	1		4111079	0					
ANR	4111396	ExpressionStatement	close ( fds [ 1 ] )	2241:4:58560:58574	4111079	1	True				
ANR	4111397	CallExpression	close ( fds [ 1 ] )		4111079	0					
ANR	4111398	Callee	close		4111079	0					
ANR	4111399	Identifier	close		4111079	0					
ANR	4111400	ArgumentList	fds [ 1 ]		4111079	1					
ANR	4111401	Argument	fds [ 1 ]		4111079	0					
ANR	4111402	ArrayIndexing	fds [ 1 ]		4111079	0					
ANR	4111403	Identifier	fds		4111079	0					
ANR	4111404	PrimaryExpression	1		4111079	1					
ANR	4111405	ExpressionStatement	close ( fds [ 0 ] )	2242:4:58580:58594	4111079	2	True				
ANR	4111406	CallExpression	close ( fds [ 0 ] )		4111079	0					
ANR	4111407	Callee	close		4111079	0					
ANR	4111408	Identifier	close		4111079	0					
ANR	4111409	ArgumentList	fds [ 0 ]		4111079	1					
ANR	4111410	Argument	fds [ 0 ]		4111079	0					
ANR	4111411	ArrayIndexing	fds [ 0 ]		4111079	0					
ANR	4111412	Identifier	fds		4111079	0					
ANR	4111413	PrimaryExpression	0		4111079	1					
ANR	4111414	ExpressionStatement	"r_core_cmd ( core , radare_cmd , 0 )"	2243:4:58600:58632	4111079	3	True				
ANR	4111415	CallExpression	"r_core_cmd ( core , radare_cmd , 0 )"		4111079	0					
ANR	4111416	Callee	r_core_cmd		4111079	0					
ANR	4111417	Identifier	r_core_cmd		4111079	0					
ANR	4111418	ArgumentList	core		4111079	1					
ANR	4111419	Argument	core		4111079	0					
ANR	4111420	Identifier	core		4111079	0					
ANR	4111421	Argument	radare_cmd		4111079	1					
ANR	4111422	Identifier	radare_cmd		4111079	0					
ANR	4111423	Argument	0		4111079	2					
ANR	4111424	PrimaryExpression	0		4111079	0					
ANR	4111425	ExpressionStatement	r_cons_flush ( )	2244:4:58638:58653	4111079	4	True				
ANR	4111426	CallExpression	r_cons_flush ( )		4111079	0					
ANR	4111427	Callee	r_cons_flush		4111079	0					
ANR	4111428	Identifier	r_cons_flush		4111079	0					
ANR	4111429	ArgumentList			4111079	1					
ANR	4111430	ExpressionStatement	close ( 1 )	2245:4:58659:58668	4111079	5	True				
ANR	4111431	CallExpression	close ( 1 )		4111079	0					
ANR	4111432	Callee	close		4111079	0					
ANR	4111433	Identifier	close		4111079	0					
ANR	4111434	ArgumentList	1		4111079	1					
ANR	4111435	Argument	1		4111079	0					
ANR	4111436	PrimaryExpression	1		4111079	0					
ANR	4111437	ExpressionStatement	wait ( & ret )	2246:4:58674:58685	4111079	6	True				
ANR	4111438	CallExpression	wait ( & ret )		4111079	0					
ANR	4111439	Callee	wait		4111079	0					
ANR	4111440	Identifier	wait		4111079	0					
ANR	4111441	ArgumentList	& ret		4111079	1					
ANR	4111442	Argument	& ret		4111079	0					
ANR	4111443	UnaryOperationExpression	& ret		4111079	0					
ANR	4111444	UnaryOperator	&		4111079	0					
ANR	4111445	Identifier	ret		4111079	1					
ANR	4111446	ExpressionStatement	"dup2 ( stdout_fd , 1 )"	2247:4:58691:58710	4111079	7	True				
ANR	4111447	CallExpression	"dup2 ( stdout_fd , 1 )"		4111079	0					
ANR	4111448	Callee	dup2		4111079	0					
ANR	4111449	Identifier	dup2		4111079	0					
ANR	4111450	ArgumentList	stdout_fd		4111079	1					
ANR	4111451	Argument	stdout_fd		4111079	0					
ANR	4111452	Identifier	stdout_fd		4111079	0					
ANR	4111453	Argument	1		4111079	1					
ANR	4111454	PrimaryExpression	1		4111079	0					
ANR	4111455	ExpressionStatement	close ( stdout_fd )	2248:4:58716:58733	4111079	8	True				
ANR	4111456	CallExpression	close ( stdout_fd )		4111079	0					
ANR	4111457	Callee	close		4111079	0					
ANR	4111458	Identifier	close		4111079	0					
ANR	4111459	ArgumentList	stdout_fd		4111079	1					
ANR	4111460	Argument	stdout_fd		4111079	0					
ANR	4111461	Identifier	stdout_fd		4111079	0					
ANR	4111462	ElseStatement	else		4111079	0					
ANR	4111463	CompoundStatement		53:10:1337:1337	4111079	0					
ANR	4111464	ExpressionStatement	close ( fds [ 1 ] )	2250:4:58751:58765	4111079	0	True				
ANR	4111465	CallExpression	close ( fds [ 1 ] )		4111079	0					
ANR	4111466	Callee	close		4111079	0					
ANR	4111467	Identifier	close		4111079	0					
ANR	4111468	ArgumentList	fds [ 1 ]		4111079	1					
ANR	4111469	Argument	fds [ 1 ]		4111079	0					
ANR	4111470	ArrayIndexing	fds [ 1 ]		4111079	0					
ANR	4111471	Identifier	fds		4111079	0					
ANR	4111472	PrimaryExpression	1		4111079	1					
ANR	4111473	ExpressionStatement	"dup2 ( fds [ 0 ] , 0 )"	2251:4:58771:58787	4111079	1	True				
ANR	4111474	CallExpression	"dup2 ( fds [ 0 ] , 0 )"		4111079	0					
ANR	4111475	Callee	dup2		4111079	0					
ANR	4111476	Identifier	dup2		4111079	0					
ANR	4111477	ArgumentList	fds [ 0 ]		4111079	1					
ANR	4111478	Argument	fds [ 0 ]		4111079	0					
ANR	4111479	ArrayIndexing	fds [ 0 ]		4111079	0					
ANR	4111480	Identifier	fds		4111079	0					
ANR	4111481	PrimaryExpression	0		4111079	1					
ANR	4111482	Argument	0		4111079	1					
ANR	4111483	PrimaryExpression	0		4111079	0					
ANR	4111484	ExpressionStatement	"r_sandbox_system ( shell_cmd , 0 )"	2253:4:58837:58868	4111079	2	True				
ANR	4111485	CallExpression	"r_sandbox_system ( shell_cmd , 0 )"		4111079	0					
ANR	4111486	Callee	r_sandbox_system		4111079	0					
ANR	4111487	Identifier	r_sandbox_system		4111079	0					
ANR	4111488	ArgumentList	shell_cmd		4111079	1					
ANR	4111489	Argument	shell_cmd		4111079	0					
ANR	4111490	Identifier	shell_cmd		4111079	0					
ANR	4111491	Argument	0		4111079	1					
ANR	4111492	PrimaryExpression	0		4111079	0					
ANR	4111493	ExpressionStatement	close ( stdout_fd )	2254:4:58874:58891	4111079	3	True				
ANR	4111494	CallExpression	close ( stdout_fd )		4111079	0					
ANR	4111495	Callee	close		4111079	0					
ANR	4111496	Identifier	close		4111079	0					
ANR	4111497	ArgumentList	stdout_fd		4111079	1					
ANR	4111498	Argument	stdout_fd		4111079	0					
ANR	4111499	Identifier	stdout_fd		4111079	0					
ANR	4111500	ElseStatement	else		4111079	0					
ANR	4111501	CompoundStatement		60:9:1499:1499	4111079	0					
ANR	4111502	ExpressionStatement	"eprintf ( ""r_core_cmd_pipe: Could not pipe\\n"" )"	2257:3:58912:58957	4111079	0	True				
ANR	4111503	CallExpression	"eprintf ( ""r_core_cmd_pipe: Could not pipe\\n"" )"		4111079	0					
ANR	4111504	Callee	eprintf		4111079	0					
ANR	4111505	Identifier	eprintf		4111079	0					
ANR	4111506	ArgumentList	"""r_core_cmd_pipe: Could not pipe\\n"""		4111079	1					
ANR	4111507	Argument	"""r_core_cmd_pipe: Could not pipe\\n"""		4111079	0					
ANR	4111508	PrimaryExpression	"""r_core_cmd_pipe: Could not pipe\\n"""		4111079	0					
ANR	4111509	IfStatement	if ( pipecolor != - 1 )		4111079	14					
ANR	4111510	Condition	pipecolor != - 1	2270:5:59268:59282	4111079	0	True				
ANR	4111511	EqualityExpression	pipecolor != - 1		4111079	0		!=			
ANR	4111512	Identifier	pipecolor		4111079	0					
ANR	4111513	UnaryOperationExpression	- 1		4111079	1					
ANR	4111514	UnaryOperator	-		4111079	0					
ANR	4111515	PrimaryExpression	1		4111079	1					
ANR	4111516	CompoundStatement		74:22:1877:1877	4111079	1					
ANR	4111517	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , pipecolor )"	2271:2:59289:59342	4111079	0	True				
ANR	4111518	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , pipecolor )"		4111079	0					
ANR	4111519	Callee	r_config_set_i		4111079	0					
ANR	4111520	Identifier	r_config_set_i		4111079	0					
ANR	4111521	ArgumentList	core -> config		4111079	1					
ANR	4111522	Argument	core -> config		4111079	0					
ANR	4111523	PtrMemberAccess	core -> config		4111079	0					
ANR	4111524	Identifier	core		4111079	0					
ANR	4111525	Identifier	config		4111079	1					
ANR	4111526	Argument	"""scr.color"""		4111079	1					
ANR	4111527	PrimaryExpression	"""scr.color"""		4111079	0					
ANR	4111528	Argument	pipecolor		4111079	2					
ANR	4111529	Identifier	pipecolor		4111079	0					
ANR	4111530	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , si )"	2273:1:59348:59400	4111079	15	True				
ANR	4111531	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , si )"		4111079	0					
ANR	4111532	Callee	r_config_set_i		4111079	0					
ANR	4111533	Identifier	r_config_set_i		4111079	0					
ANR	4111534	ArgumentList	core -> config		4111079	1					
ANR	4111535	Argument	core -> config		4111079	0					
ANR	4111536	PtrMemberAccess	core -> config		4111079	0					
ANR	4111537	Identifier	core		4111079	0					
ANR	4111538	Identifier	config		4111079	1					
ANR	4111539	Argument	"""scr.interactive"""		4111079	1					
ANR	4111540	PrimaryExpression	"""scr.interactive"""		4111079	0					
ANR	4111541	Argument	si		4111079	2					
ANR	4111542	Identifier	si		4111079	0					
ANR	4111543	ReturnStatement	return ret ;	2274:1:59403:59413	4111079	16	True				
ANR	4111544	Identifier	ret		4111079	0					
ANR	4111545	ReturnType	R_API int		4111079	1					
ANR	4111546	Identifier	r_core_cmd_pipe		4111079	2					
ANR	4111547	ParameterList	"RCore * core , char * radare_cmd , char * shell_cmd"		4111079	3					
ANR	4111548	Parameter	RCore * core	2197:26:57359:57369	4111079	0	True				
ANR	4111549	ParameterType	RCore *		4111079	0					
ANR	4111550	Identifier	core		4111079	1					
ANR	4111551	Parameter	char * radare_cmd	2197:39:57372:57387	4111079	1	True				
ANR	4111552	ParameterType	char *		4111079	0					
ANR	4111553	Identifier	radare_cmd		4111079	1					
ANR	4111554	Parameter	char * shell_cmd	2197:57:57390:57404	4111079	2	True				
ANR	4111555	ParameterType	char *		4111079	0					
ANR	4111556	Identifier	shell_cmd		4111079	1					
ANR	4111557	CFGEntryNode	ENTRY		4111079		True				
ANR	4111558	CFGExitNode	EXIT		4111079		True				
ANR	4111559	Symbol	& ret		4111079						
ANR	4111560	Symbol	radare_cmd		4111079						
ANR	4111561	Symbol	r_core_cmd_str		4111079						
ANR	4111562	Symbol	r_sandbox_enable		4111079						
ANR	4111563	Symbol	COLOR_MODE_DISABLED		4111079						
ANR	4111564	Symbol	* core		4111079						
ANR	4111565	Symbol	out		4111079						
ANR	4111566	Symbol	& olen		4111079						
ANR	4111567	Symbol	si		4111079						
ANR	4111568	Symbol	r_str_trim_head		4111079						
ANR	4111569	Symbol	pipe		4111079						
ANR	4111570	Symbol	SIGPIPE		4111079						
ANR	4111571	Symbol	r_sys_fork		4111079						
ANR	4111572	Symbol	shell_cmd		4111079						
ANR	4111573	Symbol	* shell_cmd		4111079						
ANR	4111574	Symbol	ret		4111079						
ANR	4111575	Symbol	core -> config		4111079						
ANR	4111576	Symbol	* fds		4111079						
ANR	4111577	Symbol	r_cons_is_interactive		4111079						
ANR	4111578	Symbol	NULL		4111079						
ANR	4111579	Symbol	SIG_IGN		4111079						
ANR	4111580	Symbol	str		4111079						
ANR	4111581	Symbol	core		4111079						
ANR	4111582	Symbol	olen		4111079						
ANR	4111583	Symbol	pipecolor		4111079						
ANR	4111584	Symbol	& out		4111079						
ANR	4111585	Symbol	stdout_fd		4111079						
ANR	4111586	Symbol	fds		4111079						
ANR	4111587	Symbol	r_config_get_i		4111079						
ANR	4111588	Symbol	dup		4111079						
ANR	4111589	Symbol	child		4111079						
ANR	4111590	Function	parse_tmp_evals	2277:0:59418:60193							
ANR	4111591	FunctionDef	"parse_tmp_evals (RCore * core , const char * str)"		4111590	0					
ANR	4111592	CompoundStatement		2277:59:59477:60193	4111590	0					
ANR	4111593	IdentifierDeclStatement	char * s = strdup ( str ) ;	2278:1:59480:59502	4111590	0	True				
ANR	4111594	IdentifierDecl	* s = strdup ( str )		4111590	0					
ANR	4111595	IdentifierDeclType	char *		4111590	0					
ANR	4111596	Identifier	s		4111590	1					
ANR	4111597	AssignmentExpression	* s = strdup ( str )		4111590	2		=			
ANR	4111598	Identifier	s		4111590	0					
ANR	4111599	CallExpression	strdup ( str )		4111590	1					
ANR	4111600	Callee	strdup		4111590	0					
ANR	4111601	Identifier	strdup		4111590	0					
ANR	4111602	ArgumentList	str		4111590	1					
ANR	4111603	Argument	str		4111590	0					
ANR	4111604	Identifier	str		4111590	0					
ANR	4111605	IdentifierDeclStatement	"int i , argc = r_str_split ( s , ',' ) ;"	2279:1:59505:59539	4111590	1	True				
ANR	4111606	IdentifierDecl	i		4111590	0					
ANR	4111607	IdentifierDeclType	int		4111590	0					
ANR	4111608	Identifier	i		4111590	1					
ANR	4111609	IdentifierDecl	"argc = r_str_split ( s , ',' )"		4111590	1					
ANR	4111610	IdentifierDeclType	int		4111590	0					
ANR	4111611	Identifier	argc		4111590	1					
ANR	4111612	AssignmentExpression	"argc = r_str_split ( s , ',' )"		4111590	2		=			
ANR	4111613	Identifier	argc		4111590	0					
ANR	4111614	CallExpression	"r_str_split ( s , ',' )"		4111590	1					
ANR	4111615	Callee	r_str_split		4111590	0					
ANR	4111616	Identifier	r_str_split		4111590	0					
ANR	4111617	ArgumentList	s		4111590	1					
ANR	4111618	Argument	s		4111590	0					
ANR	4111619	Identifier	s		4111590	0					
ANR	4111620	Argument	"','"		4111590	1					
ANR	4111621	PrimaryExpression	"','"		4111590	0					
ANR	4111622	IdentifierDeclStatement	"char * res = strdup ( """" ) ;"	2280:1:59542:59565	4111590	2	True				
ANR	4111623	IdentifierDecl	"* res = strdup ( """" )"		4111590	0					
ANR	4111624	IdentifierDeclType	char *		4111590	0					
ANR	4111625	Identifier	res		4111590	1					
ANR	4111626	AssignmentExpression	"* res = strdup ( """" )"		4111590	2		=			
ANR	4111627	Identifier	res		4111590	0					
ANR	4111628	CallExpression	"strdup ( """" )"		4111590	1					
ANR	4111629	Callee	strdup		4111590	0					
ANR	4111630	Identifier	strdup		4111590	0					
ANR	4111631	ArgumentList	""""""		4111590	1					
ANR	4111632	Argument	""""""		4111590	0					
ANR	4111633	PrimaryExpression	""""""		4111590	0					
ANR	4111634	IfStatement	if ( ! s || ! res )		4111590	3					
ANR	4111635	Condition	! s || ! res	2281:5:59572:59581	4111590	0	True				
ANR	4111636	OrExpression	! s || ! res		4111590	0		||			
ANR	4111637	UnaryOperationExpression	! s		4111590	0					
ANR	4111638	UnaryOperator	!		4111590	0					
ANR	4111639	Identifier	s		4111590	1					
ANR	4111640	UnaryOperationExpression	! res		4111590	1					
ANR	4111641	UnaryOperator	!		4111590	0					
ANR	4111642	Identifier	res		4111590	1					
ANR	4111643	CompoundStatement		5:17:106:106	4111590	1					
ANR	4111644	ExpressionStatement	free ( s )	2282:2:59588:59596	4111590	0	True				
ANR	4111645	CallExpression	free ( s )		4111590	0					
ANR	4111646	Callee	free		4111590	0					
ANR	4111647	Identifier	free		4111590	0					
ANR	4111648	ArgumentList	s		4111590	1					
ANR	4111649	Argument	s		4111590	0					
ANR	4111650	Identifier	s		4111590	0					
ANR	4111651	ExpressionStatement	free ( res )	2283:2:59600:59610	4111590	1	True				
ANR	4111652	CallExpression	free ( res )		4111590	0					
ANR	4111653	Callee	free		4111590	0					
ANR	4111654	Identifier	free		4111590	0					
ANR	4111655	ArgumentList	res		4111590	1					
ANR	4111656	Argument	res		4111590	0					
ANR	4111657	Identifier	res		4111590	0					
ANR	4111658	ReturnStatement	return NULL ;	2284:2:59614:59625	4111590	2	True				
ANR	4111659	Identifier	NULL		4111590	0					
ANR	4111660	ForStatement	for ( i = 0 ; i < argc ; i ++ )		4111590	4					
ANR	4111661	ForInit	i = 0 ;	2286:6:59636:59641	4111590	0	True				
ANR	4111662	AssignmentExpression	i = 0		4111590	0		=			
ANR	4111663	Identifier	i		4111590	0					
ANR	4111664	PrimaryExpression	0		4111590	1					
ANR	4111665	Condition	i < argc	2286:13:59643:59650	4111590	1	True				
ANR	4111666	RelationalExpression	i < argc		4111590	0		<			
ANR	4111667	Identifier	i		4111590	0					
ANR	4111668	Identifier	argc		4111590	1					
ANR	4111669	PostIncDecOperationExpression	i ++	2286:23:59653:59655	4111590	2	True				
ANR	4111670	Identifier	i		4111590	0					
ANR	4111671	IncDec	++		4111590	1					
ANR	4111672	CompoundStatement		11:2:184:230	4111590	3					
ANR	4111673	IdentifierDeclStatement	"char * eq , * kv = ( char * ) r_str_word_get0 ( s , i ) ;"	2287:2:59662:59708	4111590	0	True				
ANR	4111674	IdentifierDecl	* eq		4111590	0					
ANR	4111675	IdentifierDeclType	char *		4111590	0					
ANR	4111676	Identifier	eq		4111590	1					
ANR	4111677	IdentifierDecl	"* kv = ( char * ) r_str_word_get0 ( s , i )"		4111590	1					
ANR	4111678	IdentifierDeclType	char *		4111590	0					
ANR	4111679	Identifier	kv		4111590	1					
ANR	4111680	AssignmentExpression	"* kv = ( char * ) r_str_word_get0 ( s , i )"		4111590	2		=			
ANR	4111681	Identifier	kv		4111590	0					
ANR	4111682	CastExpression	"( char * ) r_str_word_get0 ( s , i )"		4111590	1					
ANR	4111683	CastTarget	char *		4111590	0					
ANR	4111684	CallExpression	"r_str_word_get0 ( s , i )"		4111590	1					
ANR	4111685	Callee	r_str_word_get0		4111590	0					
ANR	4111686	Identifier	r_str_word_get0		4111590	0					
ANR	4111687	ArgumentList	s		4111590	1					
ANR	4111688	Argument	s		4111590	0					
ANR	4111689	Identifier	s		4111590	0					
ANR	4111690	Argument	i		4111590	1					
ANR	4111691	Identifier	i		4111590	0					
ANR	4111692	IfStatement	if ( ! kv )		4111590	1					
ANR	4111693	Condition	! kv	2288:6:59716:59718	4111590	0	True				
ANR	4111694	UnaryOperationExpression	! kv		4111590	0					
ANR	4111695	UnaryOperator	!		4111590	0					
ANR	4111696	Identifier	kv		4111590	1					
ANR	4111697	CompoundStatement		12:11:243:243	4111590	1					
ANR	4111698	BreakStatement	break ;	2289:3:59726:59731	4111590	0	True				
ANR	4111699	ExpressionStatement	"eq = strchr ( kv , '=' )"	2291:2:59739:59760	4111590	2	True				
ANR	4111700	AssignmentExpression	"eq = strchr ( kv , '=' )"		4111590	0		=			
ANR	4111701	Identifier	eq		4111590	0					
ANR	4111702	CallExpression	"strchr ( kv , '=' )"		4111590	1					
ANR	4111703	Callee	strchr		4111590	0					
ANR	4111704	Identifier	strchr		4111590	0					
ANR	4111705	ArgumentList	kv		4111590	1					
ANR	4111706	Argument	kv		4111590	0					
ANR	4111707	Identifier	kv		4111590	0					
ANR	4111708	Argument	'='		4111590	1					
ANR	4111709	PrimaryExpression	'='		4111590	0					
ANR	4111710	IfStatement	if ( eq )		4111590	3					
ANR	4111711	Condition	eq	2292:6:59768:59769	4111590	0	True				
ANR	4111712	Identifier	eq		4111590	0					
ANR	4111713	CompoundStatement		22:3:397:440	4111590	1					
ANR	4111714	ExpressionStatement	* eq = 0	2293:3:59777:59784	4111590	0	True				
ANR	4111715	AssignmentExpression	* eq = 0		4111590	0		=			
ANR	4111716	UnaryOperationExpression	* eq		4111590	0					
ANR	4111717	UnaryOperator	*		4111590	0					
ANR	4111718	Identifier	eq		4111590	1					
ANR	4111719	PrimaryExpression	0		4111590	1					
ANR	4111720	IdentifierDeclStatement	"const char * ov = r_config_get ( core -> config , kv ) ;"	2294:3:59789:59837	4111590	1	True				
ANR	4111721	IdentifierDecl	"* ov = r_config_get ( core -> config , kv )"		4111590	0					
ANR	4111722	IdentifierDeclType	const char *		4111590	0					
ANR	4111723	Identifier	ov		4111590	1					
ANR	4111724	AssignmentExpression	"* ov = r_config_get ( core -> config , kv )"		4111590	2		=			
ANR	4111725	Identifier	ov		4111590	0					
ANR	4111726	CallExpression	"r_config_get ( core -> config , kv )"		4111590	1					
ANR	4111727	Callee	r_config_get		4111590	0					
ANR	4111728	Identifier	r_config_get		4111590	0					
ANR	4111729	ArgumentList	core -> config		4111590	1					
ANR	4111730	Argument	core -> config		4111590	0					
ANR	4111731	PtrMemberAccess	core -> config		4111590	0					
ANR	4111732	Identifier	core		4111590	0					
ANR	4111733	Identifier	config		4111590	1					
ANR	4111734	Argument	kv		4111590	1					
ANR	4111735	Identifier	kv		4111590	0					
ANR	4111736	IfStatement	if ( ! ov )		4111590	2					
ANR	4111737	Condition	! ov	2295:7:59846:59848	4111590	0	True				
ANR	4111738	UnaryOperationExpression	! ov		4111590	0					
ANR	4111739	UnaryOperator	!		4111590	0					
ANR	4111740	Identifier	ov		4111590	1					
ANR	4111741	CompoundStatement		19:12:373:373	4111590	1					
ANR	4111742	ContinueStatement	continue ;	2296:4:59857:59865	4111590	0	True				
ANR	4111743	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""e %s=%s;"" , kv , ov ) ;"	2298:3:59875:59918	4111590	3	True				
ANR	4111744	IdentifierDecl	"* cmd = r_str_newf ( ""e %s=%s;"" , kv , ov )"		4111590	0					
ANR	4111745	IdentifierDeclType	char *		4111590	0					
ANR	4111746	Identifier	cmd		4111590	1					
ANR	4111747	AssignmentExpression	"* cmd = r_str_newf ( ""e %s=%s;"" , kv , ov )"		4111590	2		=			
ANR	4111748	Identifier	cmd		4111590	0					
ANR	4111749	CallExpression	"r_str_newf ( ""e %s=%s;"" , kv , ov )"		4111590	1					
ANR	4111750	Callee	r_str_newf		4111590	0					
ANR	4111751	Identifier	r_str_newf		4111590	0					
ANR	4111752	ArgumentList	"""e %s=%s;"""		4111590	1					
ANR	4111753	Argument	"""e %s=%s;"""		4111590	0					
ANR	4111754	PrimaryExpression	"""e %s=%s;"""		4111590	0					
ANR	4111755	Argument	kv		4111590	1					
ANR	4111756	Identifier	kv		4111590	0					
ANR	4111757	Argument	ov		4111590	2					
ANR	4111758	Identifier	ov		4111590	0					
ANR	4111759	IfStatement	if ( ! cmd )		4111590	4					
ANR	4111760	Condition	! cmd	2299:7:59927:59930	4111590	0	True				
ANR	4111761	UnaryOperationExpression	! cmd		4111590	0					
ANR	4111762	UnaryOperator	!		4111590	0					
ANR	4111763	Identifier	cmd		4111590	1					
ANR	4111764	CompoundStatement		23:13:455:455	4111590	1					
ANR	4111765	ExpressionStatement	free ( s )	2300:4:59939:59947	4111590	0	True				
ANR	4111766	CallExpression	free ( s )		4111590	0					
ANR	4111767	Callee	free		4111590	0					
ANR	4111768	Identifier	free		4111590	0					
ANR	4111769	ArgumentList	s		4111590	1					
ANR	4111770	Argument	s		4111590	0					
ANR	4111771	Identifier	s		4111590	0					
ANR	4111772	ExpressionStatement	free ( res )	2301:4:59953:59963	4111590	1	True				
ANR	4111773	CallExpression	free ( res )		4111590	0					
ANR	4111774	Callee	free		4111590	0					
ANR	4111775	Identifier	free		4111590	0					
ANR	4111776	ArgumentList	res		4111590	1					
ANR	4111777	Argument	res		4111590	0					
ANR	4111778	Identifier	res		4111590	0					
ANR	4111779	ReturnStatement	return NULL ;	2302:4:59969:59980	4111590	2	True				
ANR	4111780	Identifier	NULL		4111590	0					
ANR	4111781	ExpressionStatement	"res = r_str_prepend ( res , cmd )"	2304:3:59990:60020	4111590	5	True				
ANR	4111782	AssignmentExpression	"res = r_str_prepend ( res , cmd )"		4111590	0		=			
ANR	4111783	Identifier	res		4111590	0					
ANR	4111784	CallExpression	"r_str_prepend ( res , cmd )"		4111590	1					
ANR	4111785	Callee	r_str_prepend		4111590	0					
ANR	4111786	Identifier	r_str_prepend		4111590	0					
ANR	4111787	ArgumentList	res		4111590	1					
ANR	4111788	Argument	res		4111590	0					
ANR	4111789	Identifier	res		4111590	0					
ANR	4111790	Argument	cmd		4111590	1					
ANR	4111791	Identifier	cmd		4111590	0					
ANR	4111792	ExpressionStatement	free ( cmd )	2305:3:60025:60035	4111590	6	True				
ANR	4111793	CallExpression	free ( cmd )		4111590	0					
ANR	4111794	Callee	free		4111590	0					
ANR	4111795	Identifier	free		4111590	0					
ANR	4111796	ArgumentList	cmd		4111590	1					
ANR	4111797	Argument	cmd		4111590	0					
ANR	4111798	Identifier	cmd		4111590	0					
ANR	4111799	ExpressionStatement	"r_config_set ( core -> config , kv , eq + 1 )"	2306:3:60040:60079	4111590	7	True				
ANR	4111800	CallExpression	"r_config_set ( core -> config , kv , eq + 1 )"		4111590	0					
ANR	4111801	Callee	r_config_set		4111590	0					
ANR	4111802	Identifier	r_config_set		4111590	0					
ANR	4111803	ArgumentList	core -> config		4111590	1					
ANR	4111804	Argument	core -> config		4111590	0					
ANR	4111805	PtrMemberAccess	core -> config		4111590	0					
ANR	4111806	Identifier	core		4111590	0					
ANR	4111807	Identifier	config		4111590	1					
ANR	4111808	Argument	kv		4111590	1					
ANR	4111809	Identifier	kv		4111590	0					
ANR	4111810	Argument	eq + 1		4111590	2					
ANR	4111811	AdditiveExpression	eq + 1		4111590	0		+			
ANR	4111812	Identifier	eq		4111590	0					
ANR	4111813	PrimaryExpression	1		4111590	1					
ANR	4111814	ExpressionStatement	* eq = '='	2307:3:60084:60093	4111590	8	True				
ANR	4111815	AssignmentExpression	* eq = '='		4111590	0		=			
ANR	4111816	UnaryOperationExpression	* eq		4111590	0					
ANR	4111817	UnaryOperator	*		4111590	0					
ANR	4111818	Identifier	eq		4111590	1					
ANR	4111819	PrimaryExpression	'='		4111590	1					
ANR	4111820	ElseStatement	else		4111590	0					
ANR	4111821	CompoundStatement		32:9:626:626	4111590	0					
ANR	4111822	ExpressionStatement	"eprintf ( ""Missing '=' in e: expression (%s)\\n"" , kv )"	2309:3:60109:60160	4111590	0	True				
ANR	4111823	CallExpression	"eprintf ( ""Missing '=' in e: expression (%s)\\n"" , kv )"		4111590	0					
ANR	4111824	Callee	eprintf		4111590	0					
ANR	4111825	Identifier	eprintf		4111590	0					
ANR	4111826	ArgumentList	"""Missing '=' in e: expression (%s)\\n"""		4111590	1					
ANR	4111827	Argument	"""Missing '=' in e: expression (%s)\\n"""		4111590	0					
ANR	4111828	PrimaryExpression	"""Missing '=' in e: expression (%s)\\n"""		4111590	0					
ANR	4111829	Argument	kv		4111590	1					
ANR	4111830	Identifier	kv		4111590	0					
ANR	4111831	ExpressionStatement	free ( s )	2312:1:60170:60178	4111590	5	True				
ANR	4111832	CallExpression	free ( s )		4111590	0					
ANR	4111833	Callee	free		4111590	0					
ANR	4111834	Identifier	free		4111590	0					
ANR	4111835	ArgumentList	s		4111590	1					
ANR	4111836	Argument	s		4111590	0					
ANR	4111837	Identifier	s		4111590	0					
ANR	4111838	ReturnStatement	return res ;	2313:1:60181:60191	4111590	6	True				
ANR	4111839	Identifier	res		4111590	0					
ANR	4111840	ReturnType	static char *		4111590	1					
ANR	4111841	Identifier	parse_tmp_evals		4111590	2					
ANR	4111842	ParameterList	"RCore * core , const char * str"		4111590	3					
ANR	4111843	Parameter	RCore * core	2277:29:59447:59457	4111590	0	True				
ANR	4111844	ParameterType	RCore *		4111590	0					
ANR	4111845	Identifier	core		4111590	1					
ANR	4111846	Parameter	const char * str	2277:42:59460:59474	4111590	1	True				
ANR	4111847	ParameterType	const char *		4111590	0					
ANR	4111848	Identifier	str		4111590	1					
ANR	4111849	CFGEntryNode	ENTRY		4111590		True				
ANR	4111850	CFGExitNode	EXIT		4111590		True				
ANR	4111851	Symbol	argc		4111590						
ANR	4111852	Symbol	core -> config		4111590						
ANR	4111853	Symbol	res		4111590						
ANR	4111854	Symbol	NULL		4111590						
ANR	4111855	Symbol	ov		4111590						
ANR	4111856	Symbol	* core		4111590						
ANR	4111857	Symbol	r_config_get		4111590						
ANR	4111858	Symbol	i		4111590						
ANR	4111859	Symbol	strchr		4111590						
ANR	4111860	Symbol	r_str_word_get0		4111590						
ANR	4111861	Symbol	kv		4111590						
ANR	4111862	Symbol	r_str_newf		4111590						
ANR	4111863	Symbol	r_str_prepend		4111590						
ANR	4111864	Symbol	eq		4111590						
ANR	4111865	Symbol	str		4111590						
ANR	4111866	Symbol	core		4111590						
ANR	4111867	Symbol	* eq		4111590						
ANR	4111868	Symbol	s		4111590						
ANR	4111869	Symbol	r_str_split		4111590						
ANR	4111870	Symbol	strdup		4111590						
ANR	4111871	Symbol	cmd		4111590						
ANR	4111872	Function	r_core_cmd_subst	2316:0:60196:63655							
ANR	4111873	FunctionDef	"r_core_cmd_subst (RCore * core , char * cmd)"		4111872	0					
ANR	4111874	CompoundStatement		2316:52:60248:63655	4111872	0					
ANR	4111875	IdentifierDeclStatement	"ut64 rep = strtoull ( cmd , NULL , 10 ) ;"	2317:1:60251:60286	4111872	0	True				
ANR	4111876	IdentifierDecl	"rep = strtoull ( cmd , NULL , 10 )"		4111872	0					
ANR	4111877	IdentifierDeclType	ut64		4111872	0					
ANR	4111878	Identifier	rep		4111872	1					
ANR	4111879	AssignmentExpression	"rep = strtoull ( cmd , NULL , 10 )"		4111872	2		=			
ANR	4111880	Identifier	rep		4111872	0					
ANR	4111881	CallExpression	"strtoull ( cmd , NULL , 10 )"		4111872	1					
ANR	4111882	Callee	strtoull		4111872	0					
ANR	4111883	Identifier	strtoull		4111872	0					
ANR	4111884	ArgumentList	cmd		4111872	1					
ANR	4111885	Argument	cmd		4111872	0					
ANR	4111886	Identifier	cmd		4111872	0					
ANR	4111887	Argument	NULL		4111872	1					
ANR	4111888	Identifier	NULL		4111872	0					
ANR	4111889	Argument	10		4111872	2					
ANR	4111890	PrimaryExpression	10		4111872	0					
ANR	4111891	IdentifierDeclStatement	"int ret = 0 , orep ;"	2318:1:60289:60306	4111872	1	True				
ANR	4111892	IdentifierDecl	ret = 0		4111872	0					
ANR	4111893	IdentifierDeclType	int		4111872	0					
ANR	4111894	Identifier	ret		4111872	1					
ANR	4111895	AssignmentExpression	ret = 0		4111872	2		=			
ANR	4111896	Identifier	ret		4111872	0					
ANR	4111897	PrimaryExpression	0		4111872	1					
ANR	4111898	IdentifierDecl	orep		4111872	1					
ANR	4111899	IdentifierDeclType	int		4111872	0					
ANR	4111900	Identifier	orep		4111872	1					
ANR	4111901	IdentifierDeclStatement	"char * cmt , * colon = NULL , * icmd = NULL ;"	2319:1:60309:60347	4111872	2	True				
ANR	4111902	IdentifierDecl	* cmt		4111872	0					
ANR	4111903	IdentifierDeclType	char *		4111872	0					
ANR	4111904	Identifier	cmt		4111872	1					
ANR	4111905	IdentifierDecl	* colon = NULL		4111872	1					
ANR	4111906	IdentifierDeclType	char *		4111872	0					
ANR	4111907	Identifier	colon		4111872	1					
ANR	4111908	AssignmentExpression	* colon = NULL		4111872	2		=			
ANR	4111909	Identifier	NULL		4111872	0					
ANR	4111910	Identifier	NULL		4111872	1					
ANR	4111911	IdentifierDecl	* icmd = NULL		4111872	2					
ANR	4111912	IdentifierDeclType	char *		4111872	0					
ANR	4111913	Identifier	icmd		4111872	1					
ANR	4111914	AssignmentExpression	* icmd = NULL		4111872	2		=			
ANR	4111915	Identifier	NULL		4111872	0					
ANR	4111916	Identifier	NULL		4111872	1					
ANR	4111917	IdentifierDeclStatement	bool tmpseek = false ;	2320:1:60350:60370	4111872	3	True				
ANR	4111918	IdentifierDecl	tmpseek = false		4111872	0					
ANR	4111919	IdentifierDeclType	bool		4111872	0					
ANR	4111920	Identifier	tmpseek		4111872	1					
ANR	4111921	AssignmentExpression	tmpseek = false		4111872	2		=			
ANR	4111922	Identifier	false		4111872	0					
ANR	4111923	Identifier	false		4111872	1					
ANR	4111924	IdentifierDeclStatement	bool original_tmpseek = core -> tmpseek ;	2321:1:60373:60410	4111872	4	True				
ANR	4111925	IdentifierDecl	original_tmpseek = core -> tmpseek		4111872	0					
ANR	4111926	IdentifierDeclType	bool		4111872	0					
ANR	4111927	Identifier	original_tmpseek		4111872	1					
ANR	4111928	AssignmentExpression	original_tmpseek = core -> tmpseek		4111872	2		=			
ANR	4111929	Identifier	original_tmpseek		4111872	0					
ANR	4111930	PtrMemberAccess	core -> tmpseek		4111872	1					
ANR	4111931	Identifier	core		4111872	0					
ANR	4111932	Identifier	tmpseek		4111872	1					
ANR	4111933	IfStatement	"if ( r_str_startswith ( cmd , ""GET /cmd/"" ) )"		4111872	5					
ANR	4111934	Condition	"r_str_startswith ( cmd , ""GET /cmd/"" )"	2323:5:60418:60452	4111872	0	True				
ANR	4111935	CallExpression	"r_str_startswith ( cmd , ""GET /cmd/"" )"		4111872	0					
ANR	4111936	Callee	r_str_startswith		4111872	0					
ANR	4111937	Identifier	r_str_startswith		4111872	0					
ANR	4111938	ArgumentList	cmd		4111872	1					
ANR	4111939	Argument	cmd		4111872	0					
ANR	4111940	Identifier	cmd		4111872	0					
ANR	4111941	Argument	"""GET /cmd/"""		4111872	1					
ANR	4111942	PrimaryExpression	"""GET /cmd/"""		4111872	0					
ANR	4111943	CompoundStatement		10:2:258:291	4111872	1					
ANR	4111944	ExpressionStatement	"memmove ( cmd , cmd + 9 , strlen ( cmd + 9 ) + 1 )"	2324:2:60459:60503	4111872	0	True				
ANR	4111945	CallExpression	"memmove ( cmd , cmd + 9 , strlen ( cmd + 9 ) + 1 )"		4111872	0					
ANR	4111946	Callee	memmove		4111872	0					
ANR	4111947	Identifier	memmove		4111872	0					
ANR	4111948	ArgumentList	cmd		4111872	1					
ANR	4111949	Argument	cmd		4111872	0					
ANR	4111950	Identifier	cmd		4111872	0					
ANR	4111951	Argument	cmd + 9		4111872	1					
ANR	4111952	AdditiveExpression	cmd + 9		4111872	0		+			
ANR	4111953	Identifier	cmd		4111872	0					
ANR	4111954	PrimaryExpression	9		4111872	1					
ANR	4111955	Argument	strlen ( cmd + 9 ) + 1		4111872	2					
ANR	4111956	AdditiveExpression	strlen ( cmd + 9 ) + 1		4111872	0		+			
ANR	4111957	CallExpression	strlen ( cmd + 9 )		4111872	0					
ANR	4111958	Callee	strlen		4111872	0					
ANR	4111959	Identifier	strlen		4111872	0					
ANR	4111960	ArgumentList	cmd + 9		4111872	1					
ANR	4111961	Argument	cmd + 9		4111872	0					
ANR	4111962	AdditiveExpression	cmd + 9		4111872	0		+			
ANR	4111963	Identifier	cmd		4111872	0					
ANR	4111964	PrimaryExpression	9		4111872	1					
ANR	4111965	PrimaryExpression	1		4111872	1					
ANR	4111966	IdentifierDeclStatement	"char * http = strstr ( cmd , ""HTTP"" ) ;"	2325:2:60507:60540	4111872	1	True				
ANR	4111967	IdentifierDecl	"* http = strstr ( cmd , ""HTTP"" )"		4111872	0					
ANR	4111968	IdentifierDeclType	char *		4111872	0					
ANR	4111969	Identifier	http		4111872	1					
ANR	4111970	AssignmentExpression	"* http = strstr ( cmd , ""HTTP"" )"		4111872	2		=			
ANR	4111971	Identifier	http		4111872	0					
ANR	4111972	CallExpression	"strstr ( cmd , ""HTTP"" )"		4111872	1					
ANR	4111973	Callee	strstr		4111872	0					
ANR	4111974	Identifier	strstr		4111872	0					
ANR	4111975	ArgumentList	cmd		4111872	1					
ANR	4111976	Argument	cmd		4111872	0					
ANR	4111977	Identifier	cmd		4111872	0					
ANR	4111978	Argument	"""HTTP"""		4111872	1					
ANR	4111979	PrimaryExpression	"""HTTP"""		4111872	0					
ANR	4111980	IfStatement	if ( http )		4111872	2					
ANR	4111981	Condition	http	2326:6:60548:60551	4111872	0	True				
ANR	4111982	Identifier	http		4111872	0					
ANR	4111983	CompoundStatement		11:12:305:305	4111872	1					
ANR	4111984	ExpressionStatement	* http = 0	2327:3:60559:60568	4111872	0	True				
ANR	4111985	AssignmentExpression	* http = 0		4111872	0		=			
ANR	4111986	UnaryOperationExpression	* http		4111872	0					
ANR	4111987	UnaryOperator	*		4111872	0					
ANR	4111988	Identifier	http		4111872	1					
ANR	4111989	PrimaryExpression	0		4111872	1					
ANR	4111990	ExpressionStatement	http --	2328:3:60573:60579	4111872	1	True				
ANR	4111991	PostIncDecOperationExpression	http --		4111872	0					
ANR	4111992	Identifier	http		4111872	0					
ANR	4111993	IncDec	--		4111872	1					
ANR	4111994	IfStatement	if ( * http == ' ' )		4111872	2					
ANR	4111995	Condition	* http == ' '	2329:7:60588:60599	4111872	0	True				
ANR	4111996	EqualityExpression	* http == ' '		4111872	0		==			
ANR	4111997	UnaryOperationExpression	* http		4111872	0					
ANR	4111998	UnaryOperator	*		4111872	0					
ANR	4111999	Identifier	http		4111872	1					
ANR	4112000	PrimaryExpression	' '		4111872	1					
ANR	4112001	CompoundStatement		14:21:353:353	4111872	1					
ANR	4112002	ExpressionStatement	* http = 0	2330:4:60608:60617	4111872	0	True				
ANR	4112003	AssignmentExpression	* http = 0		4111872	0		=			
ANR	4112004	UnaryOperationExpression	* http		4111872	0					
ANR	4112005	UnaryOperator	*		4111872	0					
ANR	4112006	Identifier	http		4111872	1					
ANR	4112007	PrimaryExpression	0		4111872	1					
ANR	4112008	Statement	r_cons_printf	2333:2:60630:60642	4111872	3	True				
ANR	4112009	Statement	(	2333:16:60644:60644	4111872	4	True				
ANR	4112010	Statement	"""HTTP/1.0 %d %s\\r\\n%s"""	2333:17:60645:60666	4111872	5	True				
ANR	4112011	Statement	"""Connection: close\\r\\nContent-Length: %d\\r\\n\\r\\n"""	2334:4:60672:60720	4111872	6	True				
ANR	4112012	Statement	","	2334:53:60721:60721	4111872	7	True				
ANR	4112013	Statement	200	2335:4:60727:60729	4111872	8	True				
ANR	4112014	Statement	","	2335:7:60730:60730	4111872	9	True				
ANR	4112015	Statement	"""OK"""	2335:9:60732:60735	4111872	10	True				
ANR	4112016	Statement	","	2335:13:60736:60736	4111872	11	True				
ANR	4112017	Statement	""""""	2335:15:60738:60739	4111872	12	True				
ANR	4112018	Statement	","	2335:17:60740:60740	4111872	13	True				
ANR	4112019	Statement	-	2335:19:60742:60742	4111872	14	True				
ANR	4112020	Statement	1	2335:20:60743:60743	4111872	15	True				
ANR	4112021	Statement	)	2335:21:60744:60744	4111872	16	True				
ANR	4112022	ExpressionStatement		2335:22:60745:60745	4111872	17	True				
ANR	4112023	ReturnStatement	"return r_core_cmd0 ( core , cmd ) ;"	2336:2:60749:60779	4111872	18	True				
ANR	4112024	CallExpression	"r_core_cmd0 ( core , cmd )"		4111872	0					
ANR	4112025	Callee	r_core_cmd0		4111872	0					
ANR	4112026	Identifier	r_core_cmd0		4111872	0					
ANR	4112027	ArgumentList	core		4111872	1					
ANR	4112028	Argument	core		4111872	0					
ANR	4112029	Identifier	core		4111872	0					
ANR	4112030	Argument	cmd		4111872	1					
ANR	4112031	Identifier	cmd		4111872	0					
ANR	4112032	IdentifierDeclStatement	ut64 orig_offset = core -> offset ;	2341:1:60878:60909	4111872	6	True				
ANR	4112033	IdentifierDecl	orig_offset = core -> offset		4111872	0					
ANR	4112034	IdentifierDeclType	ut64		4111872	0					
ANR	4112035	Identifier	orig_offset		4111872	1					
ANR	4112036	AssignmentExpression	orig_offset = core -> offset		4111872	2		=			
ANR	4112037	Identifier	orig_offset		4111872	0					
ANR	4112038	PtrMemberAccess	core -> offset		4111872	1					
ANR	4112039	Identifier	core		4111872	0					
ANR	4112040	Identifier	offset		4111872	1					
ANR	4112041	ExpressionStatement	icmd = strdup ( cmd )	2342:1:60912:60931	4111872	7	True				
ANR	4112042	AssignmentExpression	icmd = strdup ( cmd )		4111872	0		=			
ANR	4112043	Identifier	icmd		4111872	0					
ANR	4112044	CallExpression	strdup ( cmd )		4111872	1					
ANR	4112045	Callee	strdup		4111872	0					
ANR	4112046	Identifier	strdup		4111872	0					
ANR	4112047	ArgumentList	cmd		4111872	1					
ANR	4112048	Argument	cmd		4111872	0					
ANR	4112049	Identifier	cmd		4111872	0					
ANR	4112050	IfStatement	if ( core -> max_cmd_depth - core -> cons -> context -> cmd_depth == 1 )		4111872	8					
ANR	4112051	Condition	core -> max_cmd_depth - core -> cons -> context -> cmd_depth == 1	2344:5:60939:60995	4111872	0	True				
ANR	4112052	EqualityExpression	core -> max_cmd_depth - core -> cons -> context -> cmd_depth == 1		4111872	0		==			
ANR	4112053	AdditiveExpression	core -> max_cmd_depth - core -> cons -> context -> cmd_depth		4111872	0		-			
ANR	4112054	PtrMemberAccess	core -> max_cmd_depth		4111872	0					
ANR	4112055	Identifier	core		4111872	0					
ANR	4112056	Identifier	max_cmd_depth		4111872	1					
ANR	4112057	PtrMemberAccess	core -> cons -> context -> cmd_depth		4111872	1					
ANR	4112058	PtrMemberAccess	core -> cons -> context		4111872	0					
ANR	4112059	PtrMemberAccess	core -> cons		4111872	0					
ANR	4112060	Identifier	core		4111872	0					
ANR	4112061	Identifier	cons		4111872	1					
ANR	4112062	Identifier	context		4111872	1					
ANR	4112063	Identifier	cmd_depth		4111872	1					
ANR	4112064	PrimaryExpression	1		4111872	1					
ANR	4112065	CompoundStatement		29:64:749:749	4111872	1					
ANR	4112066	ExpressionStatement	core -> prompt_offset = core -> offset	2345:2:61002:61036	4111872	0	True				
ANR	4112067	AssignmentExpression	core -> prompt_offset = core -> offset		4111872	0		=			
ANR	4112068	PtrMemberAccess	core -> prompt_offset		4111872	0					
ANR	4112069	Identifier	core		4111872	0					
ANR	4112070	Identifier	prompt_offset		4111872	1					
ANR	4112071	PtrMemberAccess	core -> offset		4111872	1					
ANR	4112072	Identifier	core		4111872	0					
ANR	4112073	Identifier	offset		4111872	1					
ANR	4112074	ExpressionStatement	cmd = r_str_trim_head_tail ( icmd )	2347:1:61042:61075	4111872	9	True				
ANR	4112075	AssignmentExpression	cmd = r_str_trim_head_tail ( icmd )		4111872	0		=			
ANR	4112076	Identifier	cmd		4111872	0					
ANR	4112077	CallExpression	r_str_trim_head_tail ( icmd )		4111872	1					
ANR	4112078	Callee	r_str_trim_head_tail		4111872	0					
ANR	4112079	Identifier	r_str_trim_head_tail		4111872	0					
ANR	4112080	ArgumentList	icmd		4111872	1					
ANR	4112081	Argument	icmd		4111872	0					
ANR	4112082	Identifier	icmd		4111872	0					
ANR	4112083	IfStatement	if ( ! * cmd )		4111872	10					
ANR	4112084	Condition	! * cmd	2349:5:61163:61167	4111872	0	True				
ANR	4112085	UnaryOperationExpression	! * cmd		4111872	0					
ANR	4112086	UnaryOperator	!		4111872	0					
ANR	4112087	UnaryOperationExpression	* cmd		4111872	1					
ANR	4112088	UnaryOperator	*		4111872	0					
ANR	4112089	Identifier	cmd		4111872	1					
ANR	4112090	CompoundStatement		34:12:921:921	4111872	1					
ANR	4112091	IfStatement	if ( core -> cmdrepeat > 0 )		4111872	0					
ANR	4112092	Condition	core -> cmdrepeat > 0	2350:6:61178:61196	4111872	0	True				
ANR	4112093	RelationalExpression	core -> cmdrepeat > 0		4111872	0		>			
ANR	4112094	PtrMemberAccess	core -> cmdrepeat		4111872	0					
ANR	4112095	Identifier	core		4111872	0					
ANR	4112096	Identifier	cmdrepeat		4111872	1					
ANR	4112097	PrimaryExpression	0		4111872	1					
ANR	4112098	CompoundStatement		35:27:950:950	4111872	1					
ANR	4112099	ExpressionStatement	"r_core_cmd_repeat ( core , true )"	2351:3:61204:61234	4111872	0	True				
ANR	4112100	CallExpression	"r_core_cmd_repeat ( core , true )"		4111872	0					
ANR	4112101	Callee	r_core_cmd_repeat		4111872	0					
ANR	4112102	Identifier	r_core_cmd_repeat		4111872	0					
ANR	4112103	ArgumentList	core		4111872	1					
ANR	4112104	Argument	core		4111872	0					
ANR	4112105	Identifier	core		4111872	0					
ANR	4112106	Argument	true		4111872	1					
ANR	4112107	Identifier	true		4111872	0					
ANR	4112108	ExpressionStatement	ret = r_core_cmd_nullcallback ( core )	2352:3:61239:61275	4111872	1	True				
ANR	4112109	AssignmentExpression	ret = r_core_cmd_nullcallback ( core )		4111872	0		=			
ANR	4112110	Identifier	ret		4111872	0					
ANR	4112111	CallExpression	r_core_cmd_nullcallback ( core )		4111872	1					
ANR	4112112	Callee	r_core_cmd_nullcallback		4111872	0					
ANR	4112113	Identifier	r_core_cmd_nullcallback		4111872	0					
ANR	4112114	ArgumentList	core		4111872	1					
ANR	4112115	Argument	core		4111872	0					
ANR	4112116	Identifier	core		4111872	0					
ANR	4112117	GotoStatement	goto beach ;	2354:2:61283:61293	4111872	1	True				
ANR	4112118	Identifier	beach		4111872	0					
ANR	4112119	IfStatement	if ( ! icmd || ( cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?' ) )		4111872	11					
ANR	4112120	Condition	! icmd || ( cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?' )	2356:5:61303:61360	4111872	0	True				
ANR	4112121	OrExpression	! icmd || ( cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?' )		4111872	0		||			
ANR	4112122	UnaryOperationExpression	! icmd		4111872	0					
ANR	4112123	UnaryOperator	!		4111872	0					
ANR	4112124	Identifier	icmd		4111872	1					
ANR	4112125	AndExpression	cmd [ 0 ] == '#' && cmd [ 1 ] != '!' && cmd [ 1 ] != '?'		4111872	1		&&			
ANR	4112126	EqualityExpression	cmd [ 0 ] == '#'		4111872	0		==			
ANR	4112127	ArrayIndexing	cmd [ 0 ]		4111872	0					
ANR	4112128	Identifier	cmd		4111872	0					
ANR	4112129	PrimaryExpression	0		4111872	1					
ANR	4112130	PrimaryExpression	'#'		4111872	1					
ANR	4112131	AndExpression	cmd [ 1 ] != '!' && cmd [ 1 ] != '?'		4111872	1		&&			
ANR	4112132	EqualityExpression	cmd [ 1 ] != '!'		4111872	0		!=			
ANR	4112133	ArrayIndexing	cmd [ 1 ]		4111872	0					
ANR	4112134	Identifier	cmd		4111872	0					
ANR	4112135	PrimaryExpression	1		4111872	1					
ANR	4112136	PrimaryExpression	'!'		4111872	1					
ANR	4112137	EqualityExpression	cmd [ 1 ] != '?'		4111872	1		!=			
ANR	4112138	ArrayIndexing	cmd [ 1 ]		4111872	0					
ANR	4112139	Identifier	cmd		4111872	0					
ANR	4112140	PrimaryExpression	1		4111872	1					
ANR	4112141	PrimaryExpression	'?'		4111872	1					
ANR	4112142	CompoundStatement		41:65:1114:1114	4111872	1					
ANR	4112143	GotoStatement	goto beach ;	2357:2:61367:61377	4111872	0	True				
ANR	4112144	Identifier	beach		4111872	0					
ANR	4112145	ExpressionStatement	"cmt = * icmd ? ( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" ) : NULL"	2359:1:61383:61443	4111872	12	True				
ANR	4112146	AssignmentExpression	"cmt = * icmd ? ( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" ) : NULL"		4111872	0		=			
ANR	4112147	Identifier	cmt		4111872	0					
ANR	4112148	ConditionalExpression	"* icmd ? ( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" ) : NULL"		4111872	1					
ANR	4112149	Condition	* icmd		4111872	0					
ANR	4112150	UnaryOperationExpression	* icmd		4111872	0					
ANR	4112151	UnaryOperator	*		4111872	0					
ANR	4112152	Identifier	icmd		4111872	1					
ANR	4112153	CastExpression	"( char * ) r_str_firstbut ( icmd , '#' , ""\\"""" )"		4111872	1					
ANR	4112154	CastTarget	char *		4111872	0					
ANR	4112155	CallExpression	"r_str_firstbut ( icmd , '#' , ""\\"""" )"		4111872	1					
ANR	4112156	Callee	r_str_firstbut		4111872	0					
ANR	4112157	Identifier	r_str_firstbut		4111872	0					
ANR	4112158	ArgumentList	icmd		4111872	1					
ANR	4112159	Argument	icmd		4111872	0					
ANR	4112160	Identifier	icmd		4111872	0					
ANR	4112161	Argument	'#'		4111872	1					
ANR	4112162	PrimaryExpression	'#'		4111872	0					
ANR	4112163	Argument	"""\\"""""		4111872	2					
ANR	4112164	PrimaryExpression	"""\\"""""		4111872	0					
ANR	4112165	Identifier	NULL		4111872	2					
ANR	4112166	IfStatement	if ( cmt && ( cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t' ) )		4111872	13					
ANR	4112167	Condition	cmt && ( cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t' )	2360:5:61450:61489	4111872	0	True				
ANR	4112168	AndExpression	cmt && ( cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t' )		4111872	0		&&			
ANR	4112169	Identifier	cmt		4111872	0					
ANR	4112170	OrExpression	cmt [ 1 ] == ' ' || cmt [ 1 ] == '\\t'		4111872	1		||			
ANR	4112171	EqualityExpression	cmt [ 1 ] == ' '		4111872	0		==			
ANR	4112172	ArrayIndexing	cmt [ 1 ]		4111872	0					
ANR	4112173	Identifier	cmt		4111872	0					
ANR	4112174	PrimaryExpression	1		4111872	1					
ANR	4112175	PrimaryExpression	' '		4111872	1					
ANR	4112176	EqualityExpression	cmt [ 1 ] == '\\t'		4111872	1		==			
ANR	4112177	ArrayIndexing	cmt [ 1 ]		4111872	0					
ANR	4112178	Identifier	cmt		4111872	0					
ANR	4112179	PrimaryExpression	1		4111872	1					
ANR	4112180	PrimaryExpression	'\\t'		4111872	1					
ANR	4112181	CompoundStatement		45:47:1243:1243	4111872	1					
ANR	4112182	ExpressionStatement	* cmt = 0	2361:2:61496:61504	4111872	0	True				
ANR	4112183	AssignmentExpression	* cmt = 0		4111872	0		=			
ANR	4112184	UnaryOperationExpression	* cmt		4111872	0					
ANR	4112185	UnaryOperator	*		4111872	0					
ANR	4112186	Identifier	cmt		4111872	1					
ANR	4112187	PrimaryExpression	0		4111872	1					
ANR	4112188	IfStatement	"if ( * cmd != '""' )"		4111872	14					
ANR	4112189	Condition	"* cmd != '""'"	2363:5:61514:61524	4111872	0	True				
ANR	4112190	EqualityExpression	"* cmd != '""'"		4111872	0		!=			
ANR	4112191	UnaryOperationExpression	* cmd		4111872	0					
ANR	4112192	UnaryOperator	*		4111872	0					
ANR	4112193	Identifier	cmd		4111872	1					
ANR	4112194	PrimaryExpression	"'""'"		4111872	1					
ANR	4112195	CompoundStatement		48:18:1278:1278	4111872	1					
ANR	4112196	IfStatement	"if ( ! strchr ( cmd , '\\'' ) )"		4111872	0					
ANR	4112197	Condition	"! strchr ( cmd , '\\'' )"	2364:6:61535:61553	4111872	0	True				
ANR	4112198	UnaryOperationExpression	"! strchr ( cmd , '\\'' )"		4111872	0					
ANR	4112199	UnaryOperator	!		4111872	0					
ANR	4112200	CallExpression	"strchr ( cmd , '\\'' )"		4111872	1					
ANR	4112201	Callee	strchr		4111872	0					
ANR	4112202	Identifier	strchr		4111872	0					
ANR	4112203	ArgumentList	cmd		4111872	1					
ANR	4112204	Argument	cmd		4111872	0					
ANR	4112205	Identifier	cmd		4111872	0					
ANR	4112206	Argument	'\\''		4111872	1					
ANR	4112207	PrimaryExpression	'\\''		4111872	0					
ANR	4112208	CompoundStatement		49:27:1307:1307	4111872	1					
ANR	4112209	IfStatement	"if ( ( colon = strchr ( cmd , ';' ) ) )"		4111872	0					
ANR	4112210	Condition	"colon = strchr ( cmd , ';' )"	2365:7:61630:61656	4111872	0	True				
ANR	4112211	AssignmentExpression	"colon = strchr ( cmd , ';' )"		4111872	0		=			
ANR	4112212	Identifier	colon		4111872	0					
ANR	4112213	CallExpression	"strchr ( cmd , ';' )"		4111872	1					
ANR	4112214	Callee	strchr		4111872	0					
ANR	4112215	Identifier	strchr		4111872	0					
ANR	4112216	ArgumentList	cmd		4111872	1					
ANR	4112217	Argument	cmd		4111872	0					
ANR	4112218	Identifier	cmd		4111872	0					
ANR	4112219	Argument	';'		4111872	1					
ANR	4112220	PrimaryExpression	';'		4111872	0					
ANR	4112221	CompoundStatement		50:36:1410:1410	4111872	1					
ANR	4112222	ExpressionStatement	* colon = 0	2366:4:61665:61675	4111872	0	True				
ANR	4112223	AssignmentExpression	* colon = 0		4111872	0		=			
ANR	4112224	UnaryOperationExpression	* colon		4111872	0					
ANR	4112225	UnaryOperator	*		4111872	0					
ANR	4112226	Identifier	colon		4111872	1					
ANR	4112227	PrimaryExpression	0		4111872	1					
ANR	4112228	ElseStatement	else		4111872	0					
ANR	4112229	CompoundStatement		54:8:1445:1445	4111872	0					
ANR	4112230	ExpressionStatement	colon = NULL	2370:2:61698:61710	4111872	0	True				
ANR	4112231	AssignmentExpression	colon = NULL		4111872	0		=			
ANR	4112232	Identifier	colon		4111872	0					
ANR	4112233	Identifier	NULL		4111872	1					
ANR	4112234	IfStatement	if ( rep > 0 )		4111872	15					
ANR	4112235	Condition	rep > 0	2372:5:61720:61726	4111872	0	True				
ANR	4112236	RelationalExpression	rep > 0		4111872	0		>			
ANR	4112237	Identifier	rep		4111872	0					
ANR	4112238	PrimaryExpression	0		4111872	1					
ANR	4112239	CompoundStatement		57:14:1480:1480	4111872	1					
ANR	4112240	WhileStatement	while ( IS_DIGIT ( * cmd ) )		4111872	0					
ANR	4112241	Condition	IS_DIGIT ( * cmd )	2373:9:61740:61754	4111872	0	True				
ANR	4112242	CallExpression	IS_DIGIT ( * cmd )		4111872	0					
ANR	4112243	Callee	IS_DIGIT		4111872	0					
ANR	4112244	Identifier	IS_DIGIT		4111872	0					
ANR	4112245	ArgumentList	* cmd		4111872	1					
ANR	4112246	Argument	* cmd		4111872	0					
ANR	4112247	UnaryOperationExpression	* cmd		4111872	0					
ANR	4112248	UnaryOperator	*		4111872	0					
ANR	4112249	Identifier	cmd		4111872	1					
ANR	4112250	CompoundStatement		58:26:1508:1508	4111872	1					
ANR	4112251	ExpressionStatement	cmd ++	2374:3:61762:61767	4111872	0	True				
ANR	4112252	PostIncDecOperationExpression	cmd ++		4111872	0					
ANR	4112253	Identifier	cmd		4111872	0					
ANR	4112254	IncDec	++		4111872	1					
ANR	4112255	IfStatement	if ( ! * cmd )		4111872	1					
ANR	4112256	Condition	! * cmd	2377:6:61807:61811	4111872	0	True				
ANR	4112257	UnaryOperationExpression	! * cmd		4111872	0					
ANR	4112258	UnaryOperator	!		4111872	0					
ANR	4112259	UnaryOperationExpression	* cmd		4111872	1					
ANR	4112260	UnaryOperator	*		4111872	0					
ANR	4112261	Identifier	cmd		4111872	1					
ANR	4112262	CompoundStatement		62:13:1565:1565	4111872	1					
ANR	4112263	GotoStatement	goto beach ;	2378:3:61819:61829	4111872	0	True				
ANR	4112264	Identifier	beach		4111872	0					
ANR	4112265	IfStatement	if ( rep < 1 )		4111872	16					
ANR	4112266	Condition	rep < 1	2381:5:61843:61849	4111872	0	True				
ANR	4112267	RelationalExpression	rep < 1		4111872	0		<			
ANR	4112268	Identifier	rep		4111872	0					
ANR	4112269	PrimaryExpression	1		4111872	1					
ANR	4112270	CompoundStatement		66:14:1603:1603	4111872	1					
ANR	4112271	ExpressionStatement	rep = 1	2382:2:61856:61863	4111872	0	True				
ANR	4112272	AssignmentExpression	rep = 1		4111872	0		=			
ANR	4112273	Identifier	rep		4111872	0					
ANR	4112274	PrimaryExpression	1		4111872	1					
ANR	4112275	IfStatement	if ( rep > 1 && r_sandbox_enable ( 0 ) )		4111872	17					
ANR	4112276	Condition	rep > 1 && r_sandbox_enable ( 0 )	2385:5:61938:61968	4111872	0	True				
ANR	4112277	AndExpression	rep > 1 && r_sandbox_enable ( 0 )		4111872	0		&&			
ANR	4112278	RelationalExpression	rep > 1		4111872	0		>			
ANR	4112279	Identifier	rep		4111872	0					
ANR	4112280	PrimaryExpression	1		4111872	1					
ANR	4112281	CallExpression	r_sandbox_enable ( 0 )		4111872	1					
ANR	4112282	Callee	r_sandbox_enable		4111872	0					
ANR	4112283	Identifier	r_sandbox_enable		4111872	0					
ANR	4112284	ArgumentList	0		4111872	1					
ANR	4112285	Argument	0		4111872	0					
ANR	4112286	PrimaryExpression	0		4111872	0					
ANR	4112287	CompoundStatement		70:38:1722:1722	4111872	1					
ANR	4112288	ExpressionStatement	"eprintf ( ""Command repeat sugar disabled in sandbox mode (%s)\\n"" , cmd )"	2386:2:61975:62044	4111872	0	True				
ANR	4112289	CallExpression	"eprintf ( ""Command repeat sugar disabled in sandbox mode (%s)\\n"" , cmd )"		4111872	0					
ANR	4112290	Callee	eprintf		4111872	0					
ANR	4112291	Identifier	eprintf		4111872	0					
ANR	4112292	ArgumentList	"""Command repeat sugar disabled in sandbox mode (%s)\\n"""		4111872	1					
ANR	4112293	Argument	"""Command repeat sugar disabled in sandbox mode (%s)\\n"""		4111872	0					
ANR	4112294	PrimaryExpression	"""Command repeat sugar disabled in sandbox mode (%s)\\n"""		4111872	0					
ANR	4112295	Argument	cmd		4111872	1					
ANR	4112296	Identifier	cmd		4111872	0					
ANR	4112297	GotoStatement	goto beach ;	2387:2:62048:62058	4111872	1	True				
ANR	4112298	Identifier	beach		4111872	0					
ANR	4112299	ElseStatement	else		4111872	0					
ANR	4112300	CompoundStatement		73:8:1819:1819	4111872	0					
ANR	4112301	IfStatement	if ( rep > INTERACTIVE_MAX_REP )		4111872	0					
ANR	4112302	Condition	rep > INTERACTIVE_MAX_REP	2389:6:62076:62100	4111872	0	True				
ANR	4112303	RelationalExpression	rep > INTERACTIVE_MAX_REP		4111872	0		>			
ANR	4112304	Identifier	rep		4111872	0					
ANR	4112305	Identifier	INTERACTIVE_MAX_REP		4111872	1					
ANR	4112306	CompoundStatement		74:33:1854:1854	4111872	1					
ANR	4112307	IfStatement	if ( r_cons_is_interactive ( ) )		4111872	0					
ANR	4112308	Condition	r_cons_is_interactive ( )	2390:7:62112:62135	4111872	0	True				
ANR	4112309	CallExpression	r_cons_is_interactive ( )		4111872	0					
ANR	4112310	Callee	r_cons_is_interactive		4111872	0					
ANR	4112311	Identifier	r_cons_is_interactive		4111872	0					
ANR	4112312	ArgumentList			4111872	1					
ANR	4112313	CompoundStatement		75:33:1889:1889	4111872	1					
ANR	4112314	Statement	if	2391:4:62144:62145	4111872	0	True				
ANR	4112315	Statement	(	2391:7:62147:62147	4111872	1	True				
ANR	4112316	Statement	!	2391:8:62148:62148	4111872	2	True				
ANR	4112317	Statement	r_cons_yesno	2391:9:62149:62160	4111872	3	True				
ANR	4112318	Statement	(	2391:22:62162:62162	4111872	4	True				
ANR	4112319	Statement	'n'	2391:23:62163:62165	4111872	5	True				
ANR	4112320	Statement	","	2391:26:62166:62166	4111872	6	True				
ANR	4112321	Statement	"""Are you sure to repeat this %"""	2391:28:62168:62198	4111872	7	True				
ANR	4112322	Statement	PFMT64d	2391:59:62199:62205	4111872	8	True				
ANR	4112323	Statement	""" times? (y/N)"""	2391:66:62206:62220	4111872	9	True				
ANR	4112324	Statement	","	2391:81:62221:62221	4111872	10	True				
ANR	4112325	Statement	rep	2391:83:62223:62225	4111872	11	True				
ANR	4112326	Statement	)	2391:86:62226:62226	4111872	12	True				
ANR	4112327	Statement	)	2391:87:62227:62227	4111872	13	True				
ANR	4112328	CompoundStatement		76:89:1980:1980	4111872	14					
ANR	4112329	GotoStatement	goto beach ;	2392:5:62236:62246	4111872	0	True				
ANR	4112330	Identifier	beach		4111872	0					
ANR	4112331	IdentifierDeclStatement	"const char * cmdrep = core -> cmdtimes ? core -> cmdtimes : """" ;"	2398:1:62314:62370	4111872	18	True				
ANR	4112332	IdentifierDecl	"* cmdrep = core -> cmdtimes ? core -> cmdtimes : """""		4111872	0					
ANR	4112333	IdentifierDeclType	const char *		4111872	0					
ANR	4112334	Identifier	cmdrep		4111872	1					
ANR	4112335	AssignmentExpression	"* cmdrep = core -> cmdtimes ? core -> cmdtimes : """""		4111872	2		=			
ANR	4112336	Identifier	cmdrep		4111872	0					
ANR	4112337	ConditionalExpression	"core -> cmdtimes ? core -> cmdtimes : """""		4111872	1					
ANR	4112338	Condition	core -> cmdtimes		4111872	0					
ANR	4112339	PtrMemberAccess	core -> cmdtimes		4111872	0					
ANR	4112340	Identifier	core		4111872	0					
ANR	4112341	Identifier	cmdtimes		4111872	1					
ANR	4112342	PtrMemberAccess	core -> cmdtimes		4111872	1					
ANR	4112343	Identifier	core		4111872	0					
ANR	4112344	Identifier	cmdtimes		4111872	1					
ANR	4112345	PrimaryExpression	""""""		4111872	2					
ANR	4112346	ExpressionStatement	orep = rep	2399:1:62373:62383	4111872	19	True				
ANR	4112347	AssignmentExpression	orep = rep		4111872	0		=			
ANR	4112348	Identifier	orep		4111872	0					
ANR	4112349	Identifier	rep		4111872	1					
ANR	4112350	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2401:1:62387:62417	4111872	20	True				
ANR	4112351	CallExpression	"r_cons_break_push ( NULL , NULL )"		4111872	0					
ANR	4112352	Callee	r_cons_break_push		4111872	0					
ANR	4112353	Identifier	r_cons_break_push		4111872	0					
ANR	4112354	ArgumentList	NULL		4111872	1					
ANR	4112355	Argument	NULL		4111872	0					
ANR	4112356	Identifier	NULL		4111872	0					
ANR	4112357	Argument	NULL		4111872	1					
ANR	4112358	Identifier	NULL		4111872	0					
ANR	4112359	IdentifierDeclStatement	int ocur_enabled = core -> print && core -> print -> cur_enabled ;	2403:1:62421:62479	4111872	21	True				
ANR	4112360	IdentifierDecl	ocur_enabled = core -> print && core -> print -> cur_enabled		4111872	0					
ANR	4112361	IdentifierDeclType	int		4111872	0					
ANR	4112362	Identifier	ocur_enabled		4111872	1					
ANR	4112363	AssignmentExpression	ocur_enabled = core -> print && core -> print -> cur_enabled		4111872	2		=			
ANR	4112364	Identifier	ocur_enabled		4111872	0					
ANR	4112365	AndExpression	core -> print && core -> print -> cur_enabled		4111872	1		&&			
ANR	4112366	PtrMemberAccess	core -> print		4111872	0					
ANR	4112367	Identifier	core		4111872	0					
ANR	4112368	Identifier	print		4111872	1					
ANR	4112369	PtrMemberAccess	core -> print -> cur_enabled		4111872	1					
ANR	4112370	PtrMemberAccess	core -> print		4111872	0					
ANR	4112371	Identifier	core		4111872	0					
ANR	4112372	Identifier	print		4111872	1					
ANR	4112373	Identifier	cur_enabled		4111872	1					
ANR	4112374	WhileStatement	while ( rep -- && * cmd )		4111872	22					
ANR	4112375	Condition	rep -- && * cmd	2404:8:62489:62501	4111872	0	True				
ANR	4112376	AndExpression	rep -- && * cmd		4111872	0		&&			
ANR	4112377	PostIncDecOperationExpression	rep --		4111872	0					
ANR	4112378	Identifier	rep		4111872	0					
ANR	4112379	IncDec	--		4111872	1					
ANR	4112380	UnaryOperationExpression	* cmd		4111872	1					
ANR	4112381	UnaryOperator	*		4111872	0					
ANR	4112382	Identifier	cmd		4111872	1					
ANR	4112383	CompoundStatement		101:2:2498:2524	4111872	1					
ANR	4112384	IfStatement	if ( core -> print )		4111872	0					
ANR	4112385	Condition	core -> print	2405:6:62512:62522	4111872	0	True				
ANR	4112386	PtrMemberAccess	core -> print		4111872	0					
ANR	4112387	Identifier	core		4111872	0					
ANR	4112388	Identifier	print		4111872	1					
ANR	4112389	CompoundStatement		90:19:2276:2276	4111872	1					
ANR	4112390	ExpressionStatement	core -> print -> cur_enabled = false	2406:3:62530:62562	4111872	0	True				
ANR	4112391	AssignmentExpression	core -> print -> cur_enabled = false		4111872	0		=			
ANR	4112392	PtrMemberAccess	core -> print -> cur_enabled		4111872	0					
ANR	4112393	PtrMemberAccess	core -> print		4111872	0					
ANR	4112394	Identifier	core		4111872	0					
ANR	4112395	Identifier	print		4111872	1					
ANR	4112396	Identifier	cur_enabled		4111872	1					
ANR	4112397	Identifier	false		4111872	1					
ANR	4112398	IfStatement	if ( ocur_enabled && core -> seltab >= 0 )		4111872	1					
ANR	4112399	Condition	ocur_enabled && core -> seltab >= 0	2407:7:62571:62603	4111872	0	True				
ANR	4112400	AndExpression	ocur_enabled && core -> seltab >= 0		4111872	0		&&			
ANR	4112401	Identifier	ocur_enabled		4111872	0					
ANR	4112402	RelationalExpression	core -> seltab >= 0		4111872	1		>=			
ANR	4112403	PtrMemberAccess	core -> seltab		4111872	0					
ANR	4112404	Identifier	core		4111872	0					
ANR	4112405	Identifier	seltab		4111872	1					
ANR	4112406	PrimaryExpression	0		4111872	1					
ANR	4112407	CompoundStatement		92:42:2357:2357	4111872	1					
ANR	4112408	IfStatement	if ( core -> seltab == core -> curtab )		4111872	0					
ANR	4112409	Condition	core -> seltab == core -> curtab	2408:8:62616:62643	4111872	0	True				
ANR	4112410	EqualityExpression	core -> seltab == core -> curtab		4111872	0		==			
ANR	4112411	PtrMemberAccess	core -> seltab		4111872	0					
ANR	4112412	Identifier	core		4111872	0					
ANR	4112413	Identifier	seltab		4111872	1					
ANR	4112414	PtrMemberAccess	core -> curtab		4111872	1					
ANR	4112415	Identifier	core		4111872	0					
ANR	4112416	Identifier	curtab		4111872	1					
ANR	4112417	CompoundStatement		93:38:2397:2397	4111872	1					
ANR	4112418	ExpressionStatement	core -> print -> cur_enabled = true	2409:5:62653:62684	4111872	0	True				
ANR	4112419	AssignmentExpression	core -> print -> cur_enabled = true		4111872	0		=			
ANR	4112420	PtrMemberAccess	core -> print -> cur_enabled		4111872	0					
ANR	4112421	PtrMemberAccess	core -> print		4111872	0					
ANR	4112422	Identifier	core		4111872	0					
ANR	4112423	Identifier	print		4111872	1					
ANR	4112424	Identifier	cur_enabled		4111872	1					
ANR	4112425	Identifier	true		4111872	1					
ANR	4112426	IfStatement	if ( r_cons_is_breaked ( ) )		4111872	1					
ANR	4112427	Condition	r_cons_is_breaked ( )	2413:6:62707:62726	4111872	0	True				
ANR	4112428	CallExpression	r_cons_is_breaked ( )		4111872	0					
ANR	4112429	Callee	r_cons_is_breaked		4111872	0					
ANR	4112430	Identifier	r_cons_is_breaked		4111872	0					
ANR	4112431	ArgumentList			4111872	1					
ANR	4112432	CompoundStatement		98:28:2480:2480	4111872	1					
ANR	4112433	BreakStatement	break ;	2414:3:62734:62739	4111872	0	True				
ANR	4112434	IdentifierDeclStatement	char * cr = strdup ( cmdrep ) ;	2416:2:62747:62773	4111872	2	True				
ANR	4112435	IdentifierDecl	* cr = strdup ( cmdrep )		4111872	0					
ANR	4112436	IdentifierDeclType	char *		4111872	0					
ANR	4112437	Identifier	cr		4111872	1					
ANR	4112438	AssignmentExpression	* cr = strdup ( cmdrep )		4111872	2		=			
ANR	4112439	Identifier	cr		4111872	0					
ANR	4112440	CallExpression	strdup ( cmdrep )		4111872	1					
ANR	4112441	Callee	strdup		4111872	0					
ANR	4112442	Identifier	strdup		4111872	0					
ANR	4112443	ArgumentList	cmdrep		4111872	1					
ANR	4112444	Argument	cmdrep		4111872	0					
ANR	4112445	Identifier	cmdrep		4111872	0					
ANR	4112446	ExpressionStatement	core -> break_loop = false	2417:2:62777:62801	4111872	3	True				
ANR	4112447	AssignmentExpression	core -> break_loop = false		4111872	0		=			
ANR	4112448	PtrMemberAccess	core -> break_loop		4111872	0					
ANR	4112449	Identifier	core		4111872	0					
ANR	4112450	Identifier	break_loop		4111872	1					
ANR	4112451	Identifier	false		4111872	1					
ANR	4112452	ExpressionStatement	"ret = r_core_cmd_subst_i ( core , cmd , colon , ( rep == orep - 1 ) ? & tmpseek : NULL )"	2418:2:62805:62885	4111872	4	True				
ANR	4112453	AssignmentExpression	"ret = r_core_cmd_subst_i ( core , cmd , colon , ( rep == orep - 1 ) ? & tmpseek : NULL )"		4111872	0		=			
ANR	4112454	Identifier	ret		4111872	0					
ANR	4112455	CallExpression	"r_core_cmd_subst_i ( core , cmd , colon , ( rep == orep - 1 ) ? & tmpseek : NULL )"		4111872	1					
ANR	4112456	Callee	r_core_cmd_subst_i		4111872	0					
ANR	4112457	Identifier	r_core_cmd_subst_i		4111872	0					
ANR	4112458	ArgumentList	core		4111872	1					
ANR	4112459	Argument	core		4111872	0					
ANR	4112460	Identifier	core		4111872	0					
ANR	4112461	Argument	cmd		4111872	1					
ANR	4112462	Identifier	cmd		4111872	0					
ANR	4112463	Argument	colon		4111872	2					
ANR	4112464	Identifier	colon		4111872	0					
ANR	4112465	Argument	( rep == orep - 1 ) ? & tmpseek : NULL		4111872	3					
ANR	4112466	ConditionalExpression	( rep == orep - 1 ) ? & tmpseek : NULL		4111872	0					
ANR	4112467	Condition	rep == orep - 1		4111872	0					
ANR	4112468	EqualityExpression	rep == orep - 1		4111872	0		==			
ANR	4112469	Identifier	rep		4111872	0					
ANR	4112470	AdditiveExpression	orep - 1		4111872	1		-			
ANR	4112471	Identifier	orep		4111872	0					
ANR	4112472	PrimaryExpression	1		4111872	1					
ANR	4112473	UnaryOperationExpression	& tmpseek		4111872	1					
ANR	4112474	UnaryOperator	&		4111872	0					
ANR	4112475	Identifier	tmpseek		4111872	1					
ANR	4112476	Identifier	NULL		4111872	2					
ANR	4112477	IfStatement	if ( ret && * cmd == 'q' )		4111872	5					
ANR	4112478	Condition	ret && * cmd == 'q'	2419:6:62893:62910	4111872	0	True				
ANR	4112479	AndExpression	ret && * cmd == 'q'		4111872	0		&&			
ANR	4112480	Identifier	ret		4111872	0					
ANR	4112481	EqualityExpression	* cmd == 'q'		4111872	1		==			
ANR	4112482	UnaryOperationExpression	* cmd		4111872	0					
ANR	4112483	UnaryOperator	*		4111872	0					
ANR	4112484	Identifier	cmd		4111872	1					
ANR	4112485	PrimaryExpression	'q'		4111872	1					
ANR	4112486	CompoundStatement		104:26:2664:2664	4111872	1					
ANR	4112487	ExpressionStatement	free ( cr )	2420:3:62918:62927	4111872	0	True				
ANR	4112488	CallExpression	free ( cr )		4111872	0					
ANR	4112489	Callee	free		4111872	0					
ANR	4112490	Identifier	free		4111872	0					
ANR	4112491	ArgumentList	cr		4111872	1					
ANR	4112492	Argument	cr		4111872	0					
ANR	4112493	Identifier	cr		4111872	0					
ANR	4112494	GotoStatement	goto beach ;	2421:3:62932:62942	4111872	1	True				
ANR	4112495	Identifier	beach		4111872	0					
ANR	4112496	IfStatement	if ( core -> break_loop )		4111872	6					
ANR	4112497	Condition	core -> break_loop	2423:6:62954:62969	4111872	0	True				
ANR	4112498	PtrMemberAccess	core -> break_loop		4111872	0					
ANR	4112499	Identifier	core		4111872	0					
ANR	4112500	Identifier	break_loop		4111872	1					
ANR	4112501	CompoundStatement		108:24:2723:2723	4111872	1					
ANR	4112502	ExpressionStatement	free ( cr )	2424:3:62977:62986	4111872	0	True				
ANR	4112503	CallExpression	free ( cr )		4111872	0					
ANR	4112504	Callee	free		4111872	0					
ANR	4112505	Identifier	free		4111872	0					
ANR	4112506	ArgumentList	cr		4111872	1					
ANR	4112507	Argument	cr		4111872	0					
ANR	4112508	Identifier	cr		4111872	0					
ANR	4112509	BreakStatement	break ;	2425:3:62991:62996	4111872	1	True				
ANR	4112510	IfStatement	if ( cr && * cr && orep > 1 )		4111872	7					
ANR	4112511	Condition	cr && * cr && orep > 1	2427:6:63008:63028	4111872	0	True				
ANR	4112512	AndExpression	cr && * cr && orep > 1		4111872	0		&&			
ANR	4112513	Identifier	cr		4111872	0					
ANR	4112514	AndExpression	* cr && orep > 1		4111872	1		&&			
ANR	4112515	UnaryOperationExpression	* cr		4111872	0					
ANR	4112516	UnaryOperator	*		4111872	0					
ANR	4112517	Identifier	cr		4111872	1					
ANR	4112518	RelationalExpression	orep > 1		4111872	1		>			
ANR	4112519	Identifier	orep		4111872	0					
ANR	4112520	PrimaryExpression	1		4111872	1					
ANR	4112521	CompoundStatement		112:29:2782:2782	4111872	1					
ANR	4112522	ExpressionStatement	r_cons_flush ( )	2429:3:63106:63121	4111872	0	True				
ANR	4112523	CallExpression	r_cons_flush ( )		4111872	0					
ANR	4112524	Callee	r_cons_flush		4111872	0					
ANR	4112525	Identifier	r_cons_flush		4111872	0					
ANR	4112526	ArgumentList			4111872	1					
ANR	4112527	ExpressionStatement	"( void ) r_core_cmd0 ( core , "".dr*"" )"	2431:3:63172:63204	4111872	1	True				
ANR	4112528	CastExpression	"( void ) r_core_cmd0 ( core , "".dr*"" )"		4111872	0					
ANR	4112529	CastTarget	void		4111872	0					
ANR	4112530	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		4111872	1					
ANR	4112531	Callee	r_core_cmd0		4111872	0					
ANR	4112532	Identifier	r_core_cmd0		4111872	0					
ANR	4112533	ArgumentList	core		4111872	1					
ANR	4112534	Argument	core		4111872	0					
ANR	4112535	Identifier	core		4111872	0					
ANR	4112536	Argument	""".dr*"""		4111872	1					
ANR	4112537	PrimaryExpression	""".dr*"""		4111872	0					
ANR	4112538	ExpressionStatement	"( void ) r_core_cmd0 ( core , cr )"	2432:3:63209:63237	4111872	2	True				
ANR	4112539	CastExpression	"( void ) r_core_cmd0 ( core , cr )"		4111872	0					
ANR	4112540	CastTarget	void		4111872	0					
ANR	4112541	CallExpression	"r_core_cmd0 ( core , cr )"		4111872	1					
ANR	4112542	Callee	r_core_cmd0		4111872	0					
ANR	4112543	Identifier	r_core_cmd0		4111872	0					
ANR	4112544	ArgumentList	core		4111872	1					
ANR	4112545	Argument	core		4111872	0					
ANR	4112546	Identifier	core		4111872	0					
ANR	4112547	Argument	cr		4111872	1					
ANR	4112548	Identifier	cr		4111872	0					
ANR	4112549	ExpressionStatement	free ( cr )	2434:2:63245:63254	4111872	8	True				
ANR	4112550	CallExpression	free ( cr )		4111872	0					
ANR	4112551	Callee	free		4111872	0					
ANR	4112552	Identifier	free		4111872	0					
ANR	4112553	ArgumentList	cr		4111872	1					
ANR	4112554	Argument	cr		4111872	0					
ANR	4112555	Identifier	cr		4111872	0					
ANR	4112556	ExpressionStatement	r_cons_break_pop ( )	2437:1:63261:63280	4111872	23	True				
ANR	4112557	CallExpression	r_cons_break_pop ( )		4111872	0					
ANR	4112558	Callee	r_cons_break_pop		4111872	0					
ANR	4112559	Identifier	r_cons_break_pop		4111872	0					
ANR	4112560	ArgumentList			4111872	1					
ANR	4112561	IfStatement	if ( tmpseek )		4111872	24					
ANR	4112562	Condition	tmpseek	2439:5:63288:63294	4111872	0	True				
ANR	4112563	Identifier	tmpseek		4111872	0					
ANR	4112564	CompoundStatement		124:14:3048:3048	4111872	1					
ANR	4112565	ExpressionStatement	"r_core_seek ( core , orig_offset , 1 )"	2440:2:63301:63335	4111872	0	True				
ANR	4112566	CallExpression	"r_core_seek ( core , orig_offset , 1 )"		4111872	0					
ANR	4112567	Callee	r_core_seek		4111872	0					
ANR	4112568	Identifier	r_core_seek		4111872	0					
ANR	4112569	ArgumentList	core		4111872	1					
ANR	4112570	Argument	core		4111872	0					
ANR	4112571	Identifier	core		4111872	0					
ANR	4112572	Argument	orig_offset		4111872	1					
ANR	4112573	Identifier	orig_offset		4111872	0					
ANR	4112574	Argument	1		4111872	2					
ANR	4112575	PrimaryExpression	1		4111872	0					
ANR	4112576	ExpressionStatement	core -> tmpseek = original_tmpseek	2441:2:63339:63371	4111872	1	True				
ANR	4112577	AssignmentExpression	core -> tmpseek = original_tmpseek		4111872	0		=			
ANR	4112578	PtrMemberAccess	core -> tmpseek		4111872	0					
ANR	4112579	Identifier	core		4111872	0					
ANR	4112580	Identifier	tmpseek		4111872	1					
ANR	4112581	Identifier	original_tmpseek		4111872	1					
ANR	4112582	IfStatement	if ( core -> print )		4111872	25					
ANR	4112583	Condition	core -> print	2443:5:63381:63391	4111872	0	True				
ANR	4112584	PtrMemberAccess	core -> print		4111872	0					
ANR	4112585	Identifier	core		4111872	0					
ANR	4112586	Identifier	print		4111872	1					
ANR	4112587	CompoundStatement		128:18:3145:3145	4111872	1					
ANR	4112588	ExpressionStatement	core -> print -> cur_enabled = ocur_enabled	2444:2:63398:63437	4111872	0	True				
ANR	4112589	AssignmentExpression	core -> print -> cur_enabled = ocur_enabled		4111872	0		=			
ANR	4112590	PtrMemberAccess	core -> print -> cur_enabled		4111872	0					
ANR	4112591	PtrMemberAccess	core -> print		4111872	0					
ANR	4112592	Identifier	core		4111872	0					
ANR	4112593	Identifier	print		4111872	1					
ANR	4112594	Identifier	cur_enabled		4111872	1					
ANR	4112595	Identifier	ocur_enabled		4111872	1					
ANR	4112596	IfStatement	if ( colon && colon [ 1 ] )		4111872	26					
ANR	4112597	Condition	colon && colon [ 1 ]	2446:5:63447:63463	4111872	0	True				
ANR	4112598	AndExpression	colon && colon [ 1 ]		4111872	0		&&			
ANR	4112599	Identifier	colon		4111872	0					
ANR	4112600	ArrayIndexing	colon [ 1 ]		4111872	1					
ANR	4112601	Identifier	colon		4111872	0					
ANR	4112602	PrimaryExpression	1		4111872	1					
ANR	4112603	CompoundStatement		131:24:3217:3217	4111872	1					
ANR	4112604	ForStatement	for ( ++ colon ; * colon == ';' ; colon ++ )		4111872	0					
ANR	4112605	ForInit	++ colon ;	2447:7:63475:63482	4111872	0	True				
ANR	4112606	UnaryExpression	++ colon		4111872	0					
ANR	4112607	IncDec	++		4111872	0					
ANR	4112608	Identifier	colon		4111872	1					
ANR	4112609	Condition	* colon == ';'	2447:16:63484:63496	4111872	1	True				
ANR	4112610	EqualityExpression	* colon == ';'		4111872	0		==			
ANR	4112611	UnaryOperationExpression	* colon		4111872	0					
ANR	4112612	UnaryOperator	*		4111872	0					
ANR	4112613	Identifier	colon		4111872	1					
ANR	4112614	PrimaryExpression	';'		4111872	1					
ANR	4112615	PostIncDecOperationExpression	colon ++	2447:31:63499:63505	4111872	2	True				
ANR	4112616	Identifier	colon		4111872	0					
ANR	4112617	IncDec	++		4111872	1					
ANR	4112618	CompoundStatement		132:40:3259:3259	4111872	3					
ANR	4112619	ExpressionStatement		2448:3:63513:63513	4111872	0	True				
ANR	4112620	ExpressionStatement	"r_core_cmd_subst ( core , colon )"	2450:2:63521:63551	4111872	1	True				
ANR	4112621	CallExpression	"r_core_cmd_subst ( core , colon )"		4111872	0					
ANR	4112622	Callee	r_core_cmd_subst		4111872	0					
ANR	4112623	Identifier	r_core_cmd_subst		4111872	0					
ANR	4112624	ArgumentList	core		4111872	1					
ANR	4112625	Argument	core		4111872	0					
ANR	4112626	Identifier	core		4111872	0					
ANR	4112627	Argument	colon		4111872	1					
ANR	4112628	Identifier	colon		4111872	0					
ANR	4112629	ElseStatement	else		4111872	0					
ANR	4112630	CompoundStatement		136:8:3312:3312	4111872	0					
ANR	4112631	IfStatement	if ( ! * icmd )		4111872	0					
ANR	4112632	Condition	! * icmd	2452:6:63569:63574	4111872	0	True				
ANR	4112633	UnaryOperationExpression	! * icmd		4111872	0					
ANR	4112634	UnaryOperator	!		4111872	0					
ANR	4112635	UnaryOperationExpression	* icmd		4111872	1					
ANR	4112636	UnaryOperator	*		4111872	0					
ANR	4112637	Identifier	icmd		4111872	1					
ANR	4112638	CompoundStatement		137:14:3328:3328	4111872	1					
ANR	4112639	ExpressionStatement	r_core_cmd_nullcallback ( core )	2453:3:63582:63612	4111872	0	True				
ANR	4112640	CallExpression	r_core_cmd_nullcallback ( core )		4111872	0					
ANR	4112641	Callee	r_core_cmd_nullcallback		4111872	0					
ANR	4112642	Identifier	r_core_cmd_nullcallback		4111872	0					
ANR	4112643	ArgumentList	core		4111872	1					
ANR	4112644	Argument	core		4111872	0					
ANR	4112645	Identifier	core		4111872	0					
ANR	4112646	Label	beach :	2456:0:63621:63626	4111872	27	True				
ANR	4112647	Identifier	beach		4111872	0					
ANR	4112648	ExpressionStatement	free ( icmd )	2457:1:63629:63640	4111872	28	True				
ANR	4112649	CallExpression	free ( icmd )		4111872	0					
ANR	4112650	Callee	free		4111872	0					
ANR	4112651	Identifier	free		4111872	0					
ANR	4112652	ArgumentList	icmd		4111872	1					
ANR	4112653	Argument	icmd		4111872	0					
ANR	4112654	Identifier	icmd		4111872	0					
ANR	4112655	ReturnStatement	return ret ;	2458:1:63643:63653	4111872	29	True				
ANR	4112656	Identifier	ret		4111872	0					
ANR	4112657	ReturnType	static int		4111872	1					
ANR	4112658	Identifier	r_core_cmd_subst		4111872	2					
ANR	4112659	ParameterList	"RCore * core , char * cmd"		4111872	3					
ANR	4112660	Parameter	RCore * core	2316:28:60224:60234	4111872	0	True				
ANR	4112661	ParameterType	RCore *		4111872	0					
ANR	4112662	Identifier	core		4111872	1					
ANR	4112663	Parameter	char * cmd	2316:41:60237:60245	4111872	1	True				
ANR	4112664	ParameterType	char *		4111872	0					
ANR	4112665	Identifier	cmd		4111872	1					
ANR	4112666	CFGEntryNode	ENTRY		4111872		True				
ANR	4112667	CFGExitNode	EXIT		4111872		True				
ANR	4112668	Symbol	icmd		4111872						
ANR	4112669	Symbol	core -> offset		4111872						
ANR	4112670	Symbol	strchr		4111872						
ANR	4112671	Symbol	core -> max_cmd_depth		4111872						
ANR	4112672	Symbol	* cmt		4111872						
ANR	4112673	Symbol	strlen		4111872						
ANR	4112674	Symbol	& tmpseek		4111872						
ANR	4112675	Symbol	original_tmpseek		4111872						
ANR	4112676	Symbol	* cmd		4111872						
ANR	4112677	Symbol	rep		4111872						
ANR	4112678	Symbol	core -> tmpseek		4111872						
ANR	4112679	Symbol	ret		4111872						
ANR	4112680	Symbol	* http		4111872						
ANR	4112681	Symbol	r_cons_is_interactive		4111872						
ANR	4112682	Symbol	NULL		4111872						
ANR	4112683	Symbol	* * core -> cons		4111872						
ANR	4112684	Symbol	core		4111872						
ANR	4112685	Symbol	* * * core		4111872						
ANR	4112686	Symbol	r_core_cmd0		4111872						
ANR	4112687	Symbol	strstr		4111872						
ANR	4112688	Symbol	* cr		4111872						
ANR	4112689	Symbol	true		4111872						
ANR	4112690	Symbol	http		4111872						
ANR	4112691	Symbol	cmd		4111872						
ANR	4112692	Symbol	tmpseek		4111872						
ANR	4112693	Symbol	core -> print		4111872						
ANR	4112694	Symbol	cmdrep		4111872						
ANR	4112695	Symbol	core -> cons -> context		4111872						
ANR	4112696	Symbol	* core -> cons		4111872						
ANR	4112697	Symbol	r_sandbox_enable		4111872						
ANR	4112698	Symbol	* core		4111872						
ANR	4112699	Symbol	cmt		4111872						
ANR	4112700	Symbol	r_core_cmd_nullcallback		4111872						
ANR	4112701	Symbol	core -> cmdtimes		4111872						
ANR	4112702	Symbol	r_core_cmd_subst_i		4111872						
ANR	4112703	Symbol	strtoull		4111872						
ANR	4112704	Symbol	core -> break_loop		4111872						
ANR	4112705	Symbol	INTERACTIVE_MAX_REP		4111872						
ANR	4112706	Symbol	ocur_enabled		4111872						
ANR	4112707	Symbol	r_cons_is_breaked		4111872						
ANR	4112708	Symbol	core -> cons		4111872						
ANR	4112709	Symbol	* core -> cons -> context		4111872						
ANR	4112710	Symbol	r_str_trim_head_tail		4111872						
ANR	4112711	Symbol	* * core		4111872						
ANR	4112712	Symbol	r_str_startswith		4111872						
ANR	4112713	Symbol	core -> cmdrepeat		4111872						
ANR	4112714	Symbol	core -> curtab		4111872						
ANR	4112715	Symbol	false		4111872						
ANR	4112716	Symbol	r_str_firstbut		4111872						
ANR	4112717	Symbol	* colon		4111872						
ANR	4112718	Symbol	IS_DIGIT		4111872						
ANR	4112719	Symbol	cr		4111872						
ANR	4112720	Symbol	* core -> print		4111872						
ANR	4112721	Symbol	colon		4111872						
ANR	4112722	Symbol	* icmd		4111872						
ANR	4112723	Symbol	core -> seltab		4111872						
ANR	4112724	Symbol	orep		4111872						
ANR	4112725	Symbol	core -> prompt_offset		4111872						
ANR	4112726	Symbol	strdup		4111872						
ANR	4112727	Symbol	orig_offset		4111872						
ANR	4112728	Symbol	core -> print -> cur_enabled		4111872						
ANR	4112729	Symbol	core -> cons -> context -> cmd_depth		4111872						
ANR	4112730	Function	find_eoq	2461:0:63658:63804							
ANR	4112731	FunctionDef	find_eoq (char * p)		4112730	0					
ANR	4112732	CompoundStatement		2461:31:63689:63804	4112730	0					
ANR	4112733	ForStatement	for ( ; * p ; p ++ )		4112730	0					
ANR	4112734	Condition	* p	2462:8:63699:63700	4112730	0	True				
ANR	4112735	UnaryOperationExpression	* p		4112730	0					
ANR	4112736	UnaryOperator	*		4112730	0					
ANR	4112737	Identifier	p		4112730	1					
ANR	4112738	PostIncDecOperationExpression	p ++	2462:12:63703:63705	4112730	1	True				
ANR	4112739	Identifier	p		4112730	0					
ANR	4112740	IncDec	++		4112730	1					
ANR	4112741	CompoundStatement		2:17:18:18	4112730	2					
ANR	4112742	IfStatement	"if ( * p == '""' )"		4112730	0					
ANR	4112743	Condition	"* p == '""'"	2463:6:63716:63724	4112730	0	True				
ANR	4112744	EqualityExpression	"* p == '""'"		4112730	0		==			
ANR	4112745	UnaryOperationExpression	* p		4112730	0					
ANR	4112746	UnaryOperator	*		4112730	0					
ANR	4112747	Identifier	p		4112730	1					
ANR	4112748	PrimaryExpression	"'""'"		4112730	1					
ANR	4112749	CompoundStatement		3:17:37:37	4112730	1					
ANR	4112750	BreakStatement	break ;	2464:3:63732:63737	4112730	0	True				
ANR	4112751	IfStatement	"if ( * p == '\\\\' && p [ 1 ] == '""' )"		4112730	1					
ANR	4112752	Condition	"* p == '\\\\' && p [ 1 ] == '""'"	2466:6:63749:63773	4112730	0	True				
ANR	4112753	AndExpression	"* p == '\\\\' && p [ 1 ] == '""'"		4112730	0		&&			
ANR	4112754	EqualityExpression	* p == '\\\\'		4112730	0		==			
ANR	4112755	UnaryOperationExpression	* p		4112730	0					
ANR	4112756	UnaryOperator	*		4112730	0					
ANR	4112757	Identifier	p		4112730	1					
ANR	4112758	PrimaryExpression	'\\\\'		4112730	1					
ANR	4112759	EqualityExpression	"p [ 1 ] == '""'"		4112730	1		==			
ANR	4112760	ArrayIndexing	p [ 1 ]		4112730	0					
ANR	4112761	Identifier	p		4112730	0					
ANR	4112762	PrimaryExpression	1		4112730	1					
ANR	4112763	PrimaryExpression	"'""'"		4112730	1					
ANR	4112764	CompoundStatement		6:33:86:86	4112730	1					
ANR	4112765	ExpressionStatement	p ++	2467:3:63781:63784	4112730	0	True				
ANR	4112766	PostIncDecOperationExpression	p ++		4112730	0					
ANR	4112767	Identifier	p		4112730	0					
ANR	4112768	IncDec	++		4112730	1					
ANR	4112769	ReturnStatement	return p ;	2470:1:63794:63802	4112730	1	True				
ANR	4112770	Identifier	p		4112730	0					
ANR	4112771	ReturnType	static char *		4112730	1					
ANR	4112772	Identifier	find_eoq		4112730	2					
ANR	4112773	ParameterList	char * p		4112730	3					
ANR	4112774	Parameter	char * p	2461:22:63680:63686	4112730	0	True				
ANR	4112775	ParameterType	char *		4112730	0					
ANR	4112776	Identifier	p		4112730	1					
ANR	4112777	CFGEntryNode	ENTRY		4112730		True				
ANR	4112778	CFGExitNode	EXIT		4112730		True				
ANR	4112779	Symbol	p		4112730						
ANR	4112780	Symbol	* p		4112730						
ANR	4112781	Function	findSeparator	2473:0:63807:63923							
ANR	4112782	FunctionDef	findSeparator (char * p)		4112781	0					
ANR	4112783	CompoundStatement		2473:36:63843:63923	4112781	0					
ANR	4112784	IdentifierDeclStatement	"char * q = strchr ( p , '+' ) ;"	2474:1:63846:63871	4112781	0	True				
ANR	4112785	IdentifierDecl	"* q = strchr ( p , '+' )"		4112781	0					
ANR	4112786	IdentifierDeclType	char *		4112781	0					
ANR	4112787	Identifier	q		4112781	1					
ANR	4112788	AssignmentExpression	"* q = strchr ( p , '+' )"		4112781	2		=			
ANR	4112789	Identifier	q		4112781	0					
ANR	4112790	CallExpression	"strchr ( p , '+' )"		4112781	1					
ANR	4112791	Callee	strchr		4112781	0					
ANR	4112792	Identifier	strchr		4112781	0					
ANR	4112793	ArgumentList	p		4112781	1					
ANR	4112794	Argument	p		4112781	0					
ANR	4112795	Identifier	p		4112781	0					
ANR	4112796	Argument	'+'		4112781	1					
ANR	4112797	PrimaryExpression	'+'		4112781	0					
ANR	4112798	IfStatement	if ( q )		4112781	1					
ANR	4112799	Condition	q	2475:5:63878:63878	4112781	0	True				
ANR	4112800	Identifier	q		4112781	0					
ANR	4112801	CompoundStatement		3:8:37:37	4112781	1					
ANR	4112802	ReturnStatement	return q ;	2476:2:63885:63893	4112781	0	True				
ANR	4112803	Identifier	q		4112781	0					
ANR	4112804	ReturnStatement	"return strchr ( p , '-' ) ;"	2478:1:63899:63921	4112781	2	True				
ANR	4112805	CallExpression	"strchr ( p , '-' )"		4112781	0					
ANR	4112806	Callee	strchr		4112781	0					
ANR	4112807	Identifier	strchr		4112781	0					
ANR	4112808	ArgumentList	p		4112781	1					
ANR	4112809	Argument	p		4112781	0					
ANR	4112810	Identifier	p		4112781	0					
ANR	4112811	Argument	'-'		4112781	1					
ANR	4112812	PrimaryExpression	'-'		4112781	0					
ANR	4112813	ReturnType	static char *		4112781	1					
ANR	4112814	Identifier	findSeparator		4112781	2					
ANR	4112815	ParameterList	char * p		4112781	3					
ANR	4112816	Parameter	char * p	2473:27:63834:63840	4112781	0	True				
ANR	4112817	ParameterType	char *		4112781	0					
ANR	4112818	Identifier	p		4112781	1					
ANR	4112819	CFGEntryNode	ENTRY		4112781		True				
ANR	4112820	CFGExitNode	EXIT		4112781		True				
ANR	4112821	Symbol	p		4112781						
ANR	4112822	Symbol	q		4112781						
ANR	4112823	Symbol	strchr		4112781						
ANR	4112824	Function	tmpenvs_free	2481:0:63926:64007							
ANR	4112825	FunctionDef	tmpenvs_free (void * item)		4112824	0					
ANR	4112826	CompoundStatement		2481:37:63963:64007	4112824	0					
ANR	4112827	ExpressionStatement	"r_sys_setenv ( item , NULL )"	2482:1:63966:63991	4112824	0	True				
ANR	4112828	CallExpression	"r_sys_setenv ( item , NULL )"		4112824	0					
ANR	4112829	Callee	r_sys_setenv		4112824	0					
ANR	4112830	Identifier	r_sys_setenv		4112824	0					
ANR	4112831	ArgumentList	item		4112824	1					
ANR	4112832	Argument	item		4112824	0					
ANR	4112833	Identifier	item		4112824	0					
ANR	4112834	Argument	NULL		4112824	1					
ANR	4112835	Identifier	NULL		4112824	0					
ANR	4112836	ExpressionStatement	free ( item )	2483:1:63994:64005	4112824	1	True				
ANR	4112837	CallExpression	free ( item )		4112824	0					
ANR	4112838	Callee	free		4112824	0					
ANR	4112839	Identifier	free		4112824	0					
ANR	4112840	ArgumentList	item		4112824	1					
ANR	4112841	Argument	item		4112824	0					
ANR	4112842	Identifier	item		4112824	0					
ANR	4112843	ReturnType	static void		4112824	1					
ANR	4112844	Identifier	tmpenvs_free		4112824	2					
ANR	4112845	ParameterList	void * item		4112824	3					
ANR	4112846	Parameter	void * item	2481:25:63951:63960	4112824	0	True				
ANR	4112847	ParameterType	void *		4112824	0					
ANR	4112848	Identifier	item		4112824	1					
ANR	4112849	CFGEntryNode	ENTRY		4112824		True				
ANR	4112850	CFGExitNode	EXIT		4112824		True				
ANR	4112851	Symbol	item		4112824						
ANR	4112852	Symbol	NULL		4112824						
ANR	4112853	Function	set_tmp_arch	2486:0:64010:64286							
ANR	4112854	FunctionDef	"set_tmp_arch (RCore * core , char * arch , char * * tmparch)"		4112853	0					
ANR	4112855	CompoundStatement		2486:66:64076:64286	4112853	0					
ANR	4112856	IfStatement	if ( ! tmparch )		4112853	0					
ANR	4112857	Condition	! tmparch	2487:5:64083:64090	4112853	0	True				
ANR	4112858	UnaryOperationExpression	! tmparch		4112853	0					
ANR	4112859	UnaryOperator	!		4112853	0					
ANR	4112860	Identifier	tmparch		4112853	1					
ANR	4112861	CompoundStatement		2:15:16:16	4112853	1					
ANR	4112862	ExpressionStatement	"eprintf ( ""tmparch should be set\\n"" )"	2488:2:64097:64132	4112853	0	True				
ANR	4112863	CallExpression	"eprintf ( ""tmparch should be set\\n"" )"		4112853	0					
ANR	4112864	Callee	eprintf		4112853	0					
ANR	4112865	Identifier	eprintf		4112853	0					
ANR	4112866	ArgumentList	"""tmparch should be set\\n"""		4112853	1					
ANR	4112867	Argument	"""tmparch should be set\\n"""		4112853	0					
ANR	4112868	PrimaryExpression	"""tmparch should be set\\n"""		4112853	0					
ANR	4112869	ExpressionStatement	"* tmparch = strdup ( r_config_get ( core -> config , ""asm.arch"" ) )"	2490:1:64138:64197	4112853	1	True				
ANR	4112870	AssignmentExpression	"* tmparch = strdup ( r_config_get ( core -> config , ""asm.arch"" ) )"		4112853	0		=			
ANR	4112871	UnaryOperationExpression	* tmparch		4112853	0					
ANR	4112872	UnaryOperator	*		4112853	0					
ANR	4112873	Identifier	tmparch		4112853	1					
ANR	4112874	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.arch"" ) )"		4112853	1					
ANR	4112875	Callee	strdup		4112853	0					
ANR	4112876	Identifier	strdup		4112853	0					
ANR	4112877	ArgumentList	"r_config_get ( core -> config , ""asm.arch"" )"		4112853	1					
ANR	4112878	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		4112853	0					
ANR	4112879	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4112853	0					
ANR	4112880	Callee	r_config_get		4112853	0					
ANR	4112881	Identifier	r_config_get		4112853	0					
ANR	4112882	ArgumentList	core -> config		4112853	1					
ANR	4112883	Argument	core -> config		4112853	0					
ANR	4112884	PtrMemberAccess	core -> config		4112853	0					
ANR	4112885	Identifier	core		4112853	0					
ANR	4112886	Identifier	config		4112853	1					
ANR	4112887	Argument	"""asm.arch"""		4112853	1					
ANR	4112888	PrimaryExpression	"""asm.arch"""		4112853	0					
ANR	4112889	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , arch )"	2491:1:64200:64245	4112853	2	True				
ANR	4112890	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , arch )"		4112853	0					
ANR	4112891	Callee	r_config_set		4112853	0					
ANR	4112892	Identifier	r_config_set		4112853	0					
ANR	4112893	ArgumentList	core -> config		4112853	1					
ANR	4112894	Argument	core -> config		4112853	0					
ANR	4112895	PtrMemberAccess	core -> config		4112853	0					
ANR	4112896	Identifier	core		4112853	0					
ANR	4112897	Identifier	config		4112853	1					
ANR	4112898	Argument	"""asm.arch"""		4112853	1					
ANR	4112899	PrimaryExpression	"""asm.arch"""		4112853	0					
ANR	4112900	Argument	arch		4112853	2					
ANR	4112901	Identifier	arch		4112853	0					
ANR	4112902	ExpressionStatement	core -> fixedarch = true	2492:1:64248:64270	4112853	3	True				
ANR	4112903	AssignmentExpression	core -> fixedarch = true		4112853	0		=			
ANR	4112904	PtrMemberAccess	core -> fixedarch		4112853	0					
ANR	4112905	Identifier	core		4112853	0					
ANR	4112906	Identifier	fixedarch		4112853	1					
ANR	4112907	Identifier	true		4112853	1					
ANR	4112908	ReturnStatement	return true ;	2493:1:64273:64284	4112853	4	True				
ANR	4112909	Identifier	true		4112853	0					
ANR	4112910	ReturnType	static bool		4112853	1					
ANR	4112911	Identifier	set_tmp_arch		4112853	2					
ANR	4112912	ParameterList	"RCore * core , char * arch , char * * tmparch"		4112853	3					
ANR	4112913	Parameter	RCore * core	2486:25:64035:64045	4112853	0	True				
ANR	4112914	ParameterType	RCore *		4112853	0					
ANR	4112915	Identifier	core		4112853	1					
ANR	4112916	Parameter	char * arch	2486:38:64048:64057	4112853	1	True				
ANR	4112917	ParameterType	char *		4112853	0					
ANR	4112918	Identifier	arch		4112853	1					
ANR	4112919	Parameter	char * * tmparch	2486:50:64060:64073	4112853	2	True				
ANR	4112920	ParameterType	char * *		4112853	0					
ANR	4112921	Identifier	tmparch		4112853	1					
ANR	4112922	CFGEntryNode	ENTRY		4112853		True				
ANR	4112923	CFGExitNode	EXIT		4112853		True				
ANR	4112924	Symbol	core -> config		4112853						
ANR	4112925	Symbol	core		4112853						
ANR	4112926	Symbol	tmparch		4112853						
ANR	4112927	Symbol	r_config_get		4112853						
ANR	4112928	Symbol	* core		4112853						
ANR	4112929	Symbol	true		4112853						
ANR	4112930	Symbol	core -> fixedarch		4112853						
ANR	4112931	Symbol	arch		4112853						
ANR	4112932	Symbol	strdup		4112853						
ANR	4112933	Symbol	* tmparch		4112853						
ANR	4112934	Function	set_tmp_bits	2496:0:64289:64565							
ANR	4112935	FunctionDef	"set_tmp_bits (RCore * core , int bits , char * * tmpbits)"		4112934	0					
ANR	4112936	CompoundStatement		2496:64:64353:64565	4112934	0					
ANR	4112937	IfStatement	if ( ! tmpbits )		4112934	0					
ANR	4112938	Condition	! tmpbits	2497:5:64360:64367	4112934	0	True				
ANR	4112939	UnaryOperationExpression	! tmpbits		4112934	0					
ANR	4112940	UnaryOperator	!		4112934	0					
ANR	4112941	Identifier	tmpbits		4112934	1					
ANR	4112942	CompoundStatement		2:15:16:16	4112934	1					
ANR	4112943	ExpressionStatement	"eprintf ( ""tmpbits should be set\\n"" )"	2498:2:64374:64409	4112934	0	True				
ANR	4112944	CallExpression	"eprintf ( ""tmpbits should be set\\n"" )"		4112934	0					
ANR	4112945	Callee	eprintf		4112934	0					
ANR	4112946	Identifier	eprintf		4112934	0					
ANR	4112947	ArgumentList	"""tmpbits should be set\\n"""		4112934	1					
ANR	4112948	Argument	"""tmpbits should be set\\n"""		4112934	0					
ANR	4112949	PrimaryExpression	"""tmpbits should be set\\n"""		4112934	0					
ANR	4112950	ExpressionStatement	"* tmpbits = strdup ( r_config_get ( core -> config , ""asm.bits"" ) )"	2500:1:64415:64474	4112934	1	True				
ANR	4112951	AssignmentExpression	"* tmpbits = strdup ( r_config_get ( core -> config , ""asm.bits"" ) )"		4112934	0		=			
ANR	4112952	UnaryOperationExpression	* tmpbits		4112934	0					
ANR	4112953	UnaryOperator	*		4112934	0					
ANR	4112954	Identifier	tmpbits		4112934	1					
ANR	4112955	CallExpression	"strdup ( r_config_get ( core -> config , ""asm.bits"" ) )"		4112934	1					
ANR	4112956	Callee	strdup		4112934	0					
ANR	4112957	Identifier	strdup		4112934	0					
ANR	4112958	ArgumentList	"r_config_get ( core -> config , ""asm.bits"" )"		4112934	1					
ANR	4112959	Argument	"r_config_get ( core -> config , ""asm.bits"" )"		4112934	0					
ANR	4112960	CallExpression	"r_config_get ( core -> config , ""asm.bits"" )"		4112934	0					
ANR	4112961	Callee	r_config_get		4112934	0					
ANR	4112962	Identifier	r_config_get		4112934	0					
ANR	4112963	ArgumentList	core -> config		4112934	1					
ANR	4112964	Argument	core -> config		4112934	0					
ANR	4112965	PtrMemberAccess	core -> config		4112934	0					
ANR	4112966	Identifier	core		4112934	0					
ANR	4112967	Identifier	config		4112934	1					
ANR	4112968	Argument	"""asm.bits"""		4112934	1					
ANR	4112969	PrimaryExpression	"""asm.bits"""		4112934	0					
ANR	4112970	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"	2501:1:64477:64524	4112934	2	True				
ANR	4112971	CallExpression	"r_config_set_i ( core -> config , ""asm.bits"" , bits )"		4112934	0					
ANR	4112972	Callee	r_config_set_i		4112934	0					
ANR	4112973	Identifier	r_config_set_i		4112934	0					
ANR	4112974	ArgumentList	core -> config		4112934	1					
ANR	4112975	Argument	core -> config		4112934	0					
ANR	4112976	PtrMemberAccess	core -> config		4112934	0					
ANR	4112977	Identifier	core		4112934	0					
ANR	4112978	Identifier	config		4112934	1					
ANR	4112979	Argument	"""asm.bits"""		4112934	1					
ANR	4112980	PrimaryExpression	"""asm.bits"""		4112934	0					
ANR	4112981	Argument	bits		4112934	2					
ANR	4112982	Identifier	bits		4112934	0					
ANR	4112983	ExpressionStatement	core -> fixedbits = true	2502:1:64527:64549	4112934	3	True				
ANR	4112984	AssignmentExpression	core -> fixedbits = true		4112934	0		=			
ANR	4112985	PtrMemberAccess	core -> fixedbits		4112934	0					
ANR	4112986	Identifier	core		4112934	0					
ANR	4112987	Identifier	fixedbits		4112934	1					
ANR	4112988	Identifier	true		4112934	1					
ANR	4112989	ReturnStatement	return true ;	2503:1:64552:64563	4112934	4	True				
ANR	4112990	Identifier	true		4112934	0					
ANR	4112991	ReturnType	static bool		4112934	1					
ANR	4112992	Identifier	set_tmp_bits		4112934	2					
ANR	4112993	ParameterList	"RCore * core , int bits , char * * tmpbits"		4112934	3					
ANR	4112994	Parameter	RCore * core	2496:25:64314:64324	4112934	0	True				
ANR	4112995	ParameterType	RCore *		4112934	0					
ANR	4112996	Identifier	core		4112934	1					
ANR	4112997	Parameter	int bits	2496:38:64327:64334	4112934	1	True				
ANR	4112998	ParameterType	int		4112934	0					
ANR	4112999	Identifier	bits		4112934	1					
ANR	4113000	Parameter	char * * tmpbits	2496:48:64337:64350	4112934	2	True				
ANR	4113001	ParameterType	char * *		4112934	0					
ANR	4113002	Identifier	tmpbits		4112934	1					
ANR	4113003	CFGEntryNode	ENTRY		4112934		True				
ANR	4113004	CFGExitNode	EXIT		4112934		True				
ANR	4113005	Symbol	core -> config		4112934						
ANR	4113006	Symbol	core		4112934						
ANR	4113007	Symbol	tmpbits		4112934						
ANR	4113008	Symbol	bits		4112934						
ANR	4113009	Symbol	* core		4112934						
ANR	4113010	Symbol	r_config_get		4112934						
ANR	4113011	Symbol	true		4112934						
ANR	4113012	Symbol	core -> fixedbits		4112934						
ANR	4113013	Symbol	strdup		4112934						
ANR	4113014	Symbol	* tmpbits		4112934						
ANR	4113015	Function	r_core_cmd_subst_i	2506:0:64568:90717							
ANR	4113016	FunctionDef	"r_core_cmd_subst_i (RCore * core , char * cmd , char * colon , bool * tmpseek)"		4113015	0					
ANR	4113017	CompoundStatement		2506:82:64650:90717	4113015	0					
ANR	4113018	IdentifierDeclStatement	RList * tmpenvs = r_list_newf ( tmpenvs_free ) ;	2507:1:64653:64696	4113015	0	True				
ANR	4113019	IdentifierDecl	* tmpenvs = r_list_newf ( tmpenvs_free )		4113015	0					
ANR	4113020	IdentifierDeclType	RList *		4113015	0					
ANR	4113021	Identifier	tmpenvs		4113015	1					
ANR	4113022	AssignmentExpression	* tmpenvs = r_list_newf ( tmpenvs_free )		4113015	2		=			
ANR	4113023	Identifier	tmpenvs		4113015	0					
ANR	4113024	CallExpression	r_list_newf ( tmpenvs_free )		4113015	1					
ANR	4113025	Callee	r_list_newf		4113015	0					
ANR	4113026	Identifier	r_list_newf		4113015	0					
ANR	4113027	ArgumentList	tmpenvs_free		4113015	1					
ANR	4113028	Argument	tmpenvs_free		4113015	0					
ANR	4113029	Identifier	tmpenvs_free		4113015	0					
ANR	4113030	IdentifierDeclStatement	"const char * quotestr = ""`"" ;"	2508:1:64699:64725	4113015	1	True				
ANR	4113031	IdentifierDecl	"* quotestr = ""`"""		4113015	0					
ANR	4113032	IdentifierDeclType	const char *		4113015	0					
ANR	4113033	Identifier	quotestr		4113015	1					
ANR	4113034	AssignmentExpression	"* quotestr = ""`"""		4113015	2		=			
ANR	4113035	Identifier	quotestr		4113015	0					
ANR	4113036	PrimaryExpression	"""`"""		4113015	1					
ANR	4113037	IdentifierDeclStatement	const char * tick = NULL ;	2509:1:64728:64751	4113015	2	True				
ANR	4113038	IdentifierDecl	* tick = NULL		4113015	0					
ANR	4113039	IdentifierDeclType	const char *		4113015	0					
ANR	4113040	Identifier	tick		4113015	1					
ANR	4113041	AssignmentExpression	* tick = NULL		4113015	2		=			
ANR	4113042	Identifier	NULL		4113015	0					
ANR	4113043	Identifier	NULL		4113015	1					
ANR	4113044	IdentifierDeclStatement	"char * ptr , * ptr2 , * str ;"	2510:1:64754:64776	4113015	3	True				
ANR	4113045	IdentifierDecl	* ptr		4113015	0					
ANR	4113046	IdentifierDeclType	char *		4113015	0					
ANR	4113047	Identifier	ptr		4113015	1					
ANR	4113048	IdentifierDecl	* ptr2		4113015	1					
ANR	4113049	IdentifierDeclType	char *		4113015	0					
ANR	4113050	Identifier	ptr2		4113015	1					
ANR	4113051	IdentifierDecl	* str		4113015	2					
ANR	4113052	IdentifierDeclType	char *		4113015	0					
ANR	4113053	Identifier	str		4113015	1					
ANR	4113054	IdentifierDeclStatement	char * arroba = NULL ;	2511:1:64779:64798	4113015	4	True				
ANR	4113055	IdentifierDecl	* arroba = NULL		4113015	0					
ANR	4113056	IdentifierDeclType	char *		4113015	0					
ANR	4113057	Identifier	arroba		4113015	1					
ANR	4113058	AssignmentExpression	* arroba = NULL		4113015	2		=			
ANR	4113059	Identifier	NULL		4113015	0					
ANR	4113060	Identifier	NULL		4113015	1					
ANR	4113061	IdentifierDeclStatement	char * grep = NULL ;	2512:1:64801:64818	4113015	5	True				
ANR	4113062	IdentifierDecl	* grep = NULL		4113015	0					
ANR	4113063	IdentifierDeclType	char *		4113015	0					
ANR	4113064	Identifier	grep		4113015	1					
ANR	4113065	AssignmentExpression	* grep = NULL		4113015	2		=			
ANR	4113066	Identifier	NULL		4113015	0					
ANR	4113067	Identifier	NULL		4113015	1					
ANR	4113068	IdentifierDeclStatement	RIODesc * tmpdesc = NULL ;	2513:1:64821:64844	4113015	6	True				
ANR	4113069	IdentifierDecl	* tmpdesc = NULL		4113015	0					
ANR	4113070	IdentifierDeclType	RIODesc *		4113015	0					
ANR	4113071	Identifier	tmpdesc		4113015	1					
ANR	4113072	AssignmentExpression	* tmpdesc = NULL		4113015	2		=			
ANR	4113073	Identifier	NULL		4113015	0					
ANR	4113074	Identifier	NULL		4113015	1					
ANR	4113075	IdentifierDeclStatement	int pamode = ! core -> io -> va ;	2514:1:64847:64873	4113015	7	True				
ANR	4113076	IdentifierDecl	pamode = ! core -> io -> va		4113015	0					
ANR	4113077	IdentifierDeclType	int		4113015	0					
ANR	4113078	Identifier	pamode		4113015	1					
ANR	4113079	AssignmentExpression	pamode = ! core -> io -> va		4113015	2		=			
ANR	4113080	Identifier	pamode		4113015	0					
ANR	4113081	UnaryOperationExpression	! core -> io -> va		4113015	1					
ANR	4113082	UnaryOperator	!		4113015	0					
ANR	4113083	PtrMemberAccess	core -> io -> va		4113015	1					
ANR	4113084	PtrMemberAccess	core -> io		4113015	0					
ANR	4113085	Identifier	core		4113015	0					
ANR	4113086	Identifier	io		4113015	1					
ANR	4113087	Identifier	va		4113015	1					
ANR	4113088	IdentifierDeclStatement	"int i , ret = 0 , pipefd ;"	2515:1:64876:64898	4113015	8	True				
ANR	4113089	IdentifierDecl	i		4113015	0					
ANR	4113090	IdentifierDeclType	int		4113015	0					
ANR	4113091	Identifier	i		4113015	1					
ANR	4113092	IdentifierDecl	ret = 0		4113015	1					
ANR	4113093	IdentifierDeclType	int		4113015	0					
ANR	4113094	Identifier	ret		4113015	1					
ANR	4113095	AssignmentExpression	ret = 0		4113015	2		=			
ANR	4113096	Identifier	ret		4113015	0					
ANR	4113097	PrimaryExpression	0		4113015	1					
ANR	4113098	IdentifierDecl	pipefd		4113015	2					
ANR	4113099	IdentifierDeclType	int		4113015	0					
ANR	4113100	Identifier	pipefd		4113015	1					
ANR	4113101	IdentifierDeclStatement	bool usemyblock = false ;	2516:1:64901:64924	4113015	9	True				
ANR	4113102	IdentifierDecl	usemyblock = false		4113015	0					
ANR	4113103	IdentifierDeclType	bool		4113015	0					
ANR	4113104	Identifier	usemyblock		4113015	1					
ANR	4113105	AssignmentExpression	usemyblock = false		4113015	2		=			
ANR	4113106	Identifier	false		4113015	0					
ANR	4113107	Identifier	false		4113015	1					
ANR	4113108	IdentifierDeclStatement	int scr_html = - 1 ;	2517:1:64927:64944	4113015	10	True				
ANR	4113109	IdentifierDecl	scr_html = - 1		4113015	0					
ANR	4113110	IdentifierDeclType	int		4113015	0					
ANR	4113111	Identifier	scr_html		4113015	1					
ANR	4113112	AssignmentExpression	scr_html = - 1		4113015	2		=			
ANR	4113113	Identifier	scr_html		4113015	0					
ANR	4113114	UnaryOperationExpression	- 1		4113015	1					
ANR	4113115	UnaryOperator	-		4113015	0					
ANR	4113116	PrimaryExpression	1		4113015	1					
ANR	4113117	IdentifierDeclStatement	int scr_color = - 1 ;	2518:1:64947:64965	4113015	11	True				
ANR	4113118	IdentifierDecl	scr_color = - 1		4113015	0					
ANR	4113119	IdentifierDeclType	int		4113015	0					
ANR	4113120	Identifier	scr_color		4113015	1					
ANR	4113121	AssignmentExpression	scr_color = - 1		4113015	2		=			
ANR	4113122	Identifier	scr_color		4113015	0					
ANR	4113123	UnaryOperationExpression	- 1		4113015	1					
ANR	4113124	UnaryOperator	-		4113015	0					
ANR	4113125	PrimaryExpression	1		4113015	1					
ANR	4113126	IdentifierDeclStatement	bool eos = false ;	2519:1:64968:64984	4113015	12	True				
ANR	4113127	IdentifierDecl	eos = false		4113015	0					
ANR	4113128	IdentifierDeclType	bool		4113015	0					
ANR	4113129	Identifier	eos		4113015	1					
ANR	4113130	AssignmentExpression	eos = false		4113015	2		=			
ANR	4113131	Identifier	false		4113015	0					
ANR	4113132	Identifier	false		4113015	1					
ANR	4113133	IdentifierDeclStatement	bool haveQuote = false ;	2520:1:64987:65009	4113015	13	True				
ANR	4113134	IdentifierDecl	haveQuote = false		4113015	0					
ANR	4113135	IdentifierDeclType	bool		4113015	0					
ANR	4113136	Identifier	haveQuote		4113015	1					
ANR	4113137	AssignmentExpression	haveQuote = false		4113015	2		=			
ANR	4113138	Identifier	false		4113015	0					
ANR	4113139	Identifier	false		4113015	1					
ANR	4113140	IdentifierDeclStatement	bool oldfixedarch = core -> fixedarch ;	2521:1:65012:65047	4113015	14	True				
ANR	4113141	IdentifierDecl	oldfixedarch = core -> fixedarch		4113015	0					
ANR	4113142	IdentifierDeclType	bool		4113015	0					
ANR	4113143	Identifier	oldfixedarch		4113015	1					
ANR	4113144	AssignmentExpression	oldfixedarch = core -> fixedarch		4113015	2		=			
ANR	4113145	Identifier	oldfixedarch		4113015	0					
ANR	4113146	PtrMemberAccess	core -> fixedarch		4113015	1					
ANR	4113147	Identifier	core		4113015	0					
ANR	4113148	Identifier	fixedarch		4113015	1					
ANR	4113149	IdentifierDeclStatement	bool oldfixedbits = core -> fixedbits ;	2522:1:65050:65085	4113015	15	True				
ANR	4113150	IdentifierDecl	oldfixedbits = core -> fixedbits		4113015	0					
ANR	4113151	IdentifierDeclType	bool		4113015	0					
ANR	4113152	Identifier	oldfixedbits		4113015	1					
ANR	4113153	AssignmentExpression	oldfixedbits = core -> fixedbits		4113015	2		=			
ANR	4113154	Identifier	oldfixedbits		4113015	0					
ANR	4113155	PtrMemberAccess	core -> fixedbits		4113015	1					
ANR	4113156	Identifier	core		4113015	0					
ANR	4113157	Identifier	fixedbits		4113015	1					
ANR	4113158	IdentifierDeclStatement	bool cmd_tmpseek = false ;	2523:1:65088:65112	4113015	16	True				
ANR	4113159	IdentifierDecl	cmd_tmpseek = false		4113015	0					
ANR	4113160	IdentifierDeclType	bool		4113015	0					
ANR	4113161	Identifier	cmd_tmpseek		4113015	1					
ANR	4113162	AssignmentExpression	cmd_tmpseek = false		4113015	2		=			
ANR	4113163	Identifier	false		4113015	0					
ANR	4113164	Identifier	false		4113015	1					
ANR	4113165	IdentifierDeclStatement	ut64 tmpbsz = core -> blocksize ;	2524:1:65115:65144	4113015	17	True				
ANR	4113166	IdentifierDecl	tmpbsz = core -> blocksize		4113015	0					
ANR	4113167	IdentifierDeclType	ut64		4113015	0					
ANR	4113168	Identifier	tmpbsz		4113015	1					
ANR	4113169	AssignmentExpression	tmpbsz = core -> blocksize		4113015	2		=			
ANR	4113170	Identifier	tmpbsz		4113015	0					
ANR	4113171	PtrMemberAccess	core -> blocksize		4113015	1					
ANR	4113172	Identifier	core		4113015	0					
ANR	4113173	Identifier	blocksize		4113015	1					
ANR	4113174	IdentifierDeclStatement	int cmd_ignbithints = - 1 ;	2525:1:65147:65171	4113015	18	True				
ANR	4113175	IdentifierDecl	cmd_ignbithints = - 1		4113015	0					
ANR	4113176	IdentifierDeclType	int		4113015	0					
ANR	4113177	Identifier	cmd_ignbithints		4113015	1					
ANR	4113178	AssignmentExpression	cmd_ignbithints = - 1		4113015	2		=			
ANR	4113179	Identifier	cmd_ignbithints		4113015	0					
ANR	4113180	UnaryOperationExpression	- 1		4113015	1					
ANR	4113181	UnaryOperator	-		4113015	0					
ANR	4113182	PrimaryExpression	1		4113015	1					
ANR	4113183	IfStatement	if ( ! cmd )		4113015	19					
ANR	4113184	Condition	! cmd	2527:5:65179:65182	4113015	0	True				
ANR	4113185	UnaryOperationExpression	! cmd		4113015	0					
ANR	4113186	UnaryOperator	!		4113015	0					
ANR	4113187	Identifier	cmd		4113015	1					
ANR	4113188	CompoundStatement		22:11:534:534	4113015	1					
ANR	4113189	ExpressionStatement	r_list_free ( tmpenvs )	2528:2:65189:65210	4113015	0	True				
ANR	4113190	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4113191	Callee	r_list_free		4113015	0					
ANR	4113192	Identifier	r_list_free		4113015	0					
ANR	4113193	ArgumentList	tmpenvs		4113015	1					
ANR	4113194	Argument	tmpenvs		4113015	0					
ANR	4113195	Identifier	tmpenvs		4113015	0					
ANR	4113196	ReturnStatement	return 0 ;	2529:2:65214:65222	4113015	1	True				
ANR	4113197	PrimaryExpression	0		4113015	0					
ANR	4113198	ExpressionStatement	cmd = r_str_trim_head_tail ( cmd )	2531:1:65228:65260	4113015	20	True				
ANR	4113199	AssignmentExpression	cmd = r_str_trim_head_tail ( cmd )		4113015	0		=			
ANR	4113200	Identifier	cmd		4113015	0					
ANR	4113201	CallExpression	r_str_trim_head_tail ( cmd )		4113015	1					
ANR	4113202	Callee	r_str_trim_head_tail		4113015	0					
ANR	4113203	Identifier	r_str_trim_head_tail		4113015	0					
ANR	4113204	ArgumentList	cmd		4113015	1					
ANR	4113205	Argument	cmd		4113015	0					
ANR	4113206	Identifier	cmd		4113015	0					
ANR	4113207	ExpressionStatement	"char * 0 = strstr ( cmd , ""$("" )"	2533:1:65264:65293	4113015	21	True				
ANR	4113208	AssignmentExpression	"char * 0 = strstr ( cmd , ""$("" )"		4113015	0		=			
ANR	4113209	MultiplicativeExpression	char * 0		4113015	0		*			
ANR	4113210	Identifier	char		4113015	0					
ANR	4113211	PrimaryExpression	0		4113015	1					
ANR	4113212	CallExpression	"strstr ( cmd , ""$("" )"		4113015	1					
ANR	4113213	Callee	strstr		4113015	0					
ANR	4113214	Identifier	strstr		4113015	0					
ANR	4113215	ArgumentList	cmd		4113015	1					
ANR	4113216	Argument	cmd		4113015	0					
ANR	4113217	Identifier	cmd		4113015	0					
ANR	4113218	Argument	"""$("""		4113015	1					
ANR	4113219	PrimaryExpression	"""$("""		4113015	0					
ANR	4113220	IfStatement	if ( 0 )		4113015	22					
ANR	4113221	Condition	0	2534:6:65301:65301	4113015	0	True				
ANR	4113222	PrimaryExpression	0		4113015	0					
ANR	4113223	CompoundStatement		29:9:653:653	4113015	1					
ANR	4113224	ExpressionStatement	"char * 1 = strchr ( 0 + 2 , ')' )"	2535:2:65308:65339	4113015	0	True				
ANR	4113225	AssignmentExpression	"char * 1 = strchr ( 0 + 2 , ')' )"		4113015	0		=			
ANR	4113226	MultiplicativeExpression	char * 1		4113015	0		*			
ANR	4113227	Identifier	char		4113015	0					
ANR	4113228	PrimaryExpression	1		4113015	1					
ANR	4113229	CallExpression	"strchr ( 0 + 2 , ')' )"		4113015	1					
ANR	4113230	Callee	strchr		4113015	0					
ANR	4113231	Identifier	strchr		4113015	0					
ANR	4113232	ArgumentList	0 + 2		4113015	1					
ANR	4113233	Argument	0 + 2		4113015	0					
ANR	4113234	AdditiveExpression	0 + 2		4113015	0		+			
ANR	4113235	PrimaryExpression	0		4113015	0					
ANR	4113236	PrimaryExpression	2		4113015	1					
ANR	4113237	Argument	')'		4113015	1					
ANR	4113238	PrimaryExpression	')'		4113015	0					
ANR	4113239	IfStatement	if ( 1 )		4113015	1					
ANR	4113240	Condition	1	2536:7:65348:65348	4113015	0	True				
ANR	4113241	PrimaryExpression	1		4113015	0					
ANR	4113242	CompoundStatement		31:10:700:700	4113015	1					
ANR	4113243	ExpressionStatement	* 0 = '`'	2537:3:65356:65365	4113015	0	True				
ANR	4113244	AssignmentExpression	* 0 = '`'		4113015	0		=			
ANR	4113245	UnaryOperationExpression	* 0		4113015	0					
ANR	4113246	UnaryOperator	*		4113015	0					
ANR	4113247	PrimaryExpression	0		4113015	1					
ANR	4113248	PrimaryExpression	'`'		4113015	1					
ANR	4113249	ExpressionStatement	* 1 = '`'	2538:3:65370:65379	4113015	1	True				
ANR	4113250	AssignmentExpression	* 1 = '`'		4113015	0		=			
ANR	4113251	UnaryOperationExpression	* 1		4113015	0					
ANR	4113252	UnaryOperator	*		4113015	0					
ANR	4113253	PrimaryExpression	1		4113015	1					
ANR	4113254	PrimaryExpression	'`'		4113015	1					
ANR	4113255	ExpressionStatement	"memmove ( 0 + 1 , 0 + 2 , strlen ( 0 + 2 ) + 1 )"	2539:3:65384:65429	4113015	2	True				
ANR	4113256	CallExpression	"memmove ( 0 + 1 , 0 + 2 , strlen ( 0 + 2 ) + 1 )"		4113015	0					
ANR	4113257	Callee	memmove		4113015	0					
ANR	4113258	Identifier	memmove		4113015	0					
ANR	4113259	ArgumentList	0 + 1		4113015	1					
ANR	4113260	Argument	0 + 1		4113015	0					
ANR	4113261	AdditiveExpression	0 + 1		4113015	0		+			
ANR	4113262	PrimaryExpression	0		4113015	0					
ANR	4113263	PrimaryExpression	1		4113015	1					
ANR	4113264	Argument	0 + 2		4113015	1					
ANR	4113265	AdditiveExpression	0 + 2		4113015	0		+			
ANR	4113266	PrimaryExpression	0		4113015	0					
ANR	4113267	PrimaryExpression	2		4113015	1					
ANR	4113268	Argument	strlen ( 0 + 2 ) + 1		4113015	2					
ANR	4113269	AdditiveExpression	strlen ( 0 + 2 ) + 1		4113015	0		+			
ANR	4113270	CallExpression	strlen ( 0 + 2 )		4113015	0					
ANR	4113271	Callee	strlen		4113015	0					
ANR	4113272	Identifier	strlen		4113015	0					
ANR	4113273	ArgumentList	0 + 2		4113015	1					
ANR	4113274	Argument	0 + 2		4113015	0					
ANR	4113275	AdditiveExpression	0 + 2		4113015	0		+			
ANR	4113276	PrimaryExpression	0		4113015	0					
ANR	4113277	PrimaryExpression	2		4113015	1					
ANR	4113278	PrimaryExpression	1		4113015	1					
ANR	4113279	ElseStatement	else		4113015	0					
ANR	4113280	CompoundStatement		35:9:789:789	4113015	0					
ANR	4113281	ExpressionStatement	"eprintf ( ""Unterminated $() block\\n"" )"	2541:3:65445:65481	4113015	0	True				
ANR	4113282	CallExpression	"eprintf ( ""Unterminated $() block\\n"" )"		4113015	0					
ANR	4113283	Callee	eprintf		4113015	0					
ANR	4113284	Identifier	eprintf		4113015	0					
ANR	4113285	ArgumentList	"""Unterminated $() block\\n"""		4113015	1					
ANR	4113286	Argument	"""Unterminated $() block\\n"""		4113015	0					
ANR	4113287	PrimaryExpression	"""Unterminated $() block\\n"""		4113015	0					
ANR	4113288	SwitchStatement	switch ( * cmd )		4113015	23					
ANR	4113289	Condition	* cmd	2546:9:65528:65531	4113015	0	True				
ANR	4113290	UnaryOperationExpression	* cmd		4113015	0					
ANR	4113291	UnaryOperator	*		4113015	0					
ANR	4113292	Identifier	cmd		4113015	1					
ANR	4113293	CompoundStatement		41:15:883:883	4113015	1					
ANR	4113294	Label	case '.' :	2547:1:65537:65545	4113015	0	True				
ANR	4113295	IfStatement	"if ( cmd [ 1 ] == '""' )"		4113015	1					
ANR	4113296	Condition	"cmd [ 1 ] == '""'"	2548:6:65553:65565	4113015	0	True				
ANR	4113297	EqualityExpression	"cmd [ 1 ] == '""'"		4113015	0		==			
ANR	4113298	ArrayIndexing	cmd [ 1 ]		4113015	0					
ANR	4113299	Identifier	cmd		4113015	0					
ANR	4113300	PrimaryExpression	1		4113015	1					
ANR	4113301	PrimaryExpression	"'""'"		4113015	1					
ANR	4113302	CompoundStatement		43:21:917:917	4113015	1					
ANR	4113303	ExpressionStatement	r_list_free ( tmpenvs )	2549:3:65589:65610	4113015	0	True				
ANR	4113304	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4113305	Callee	r_list_free		4113015	0					
ANR	4113306	Identifier	r_list_free		4113015	0					
ANR	4113307	ArgumentList	tmpenvs		4113015	1					
ANR	4113308	Argument	tmpenvs		4113015	0					
ANR	4113309	Identifier	tmpenvs		4113015	0					
ANR	4113310	ReturnStatement	"return r_cmd_call ( core -> rcmd , cmd ) ;"	2550:3:65615:65650	4113015	1	True				
ANR	4113311	CallExpression	"r_cmd_call ( core -> rcmd , cmd )"		4113015	0					
ANR	4113312	Callee	r_cmd_call		4113015	0					
ANR	4113313	Identifier	r_cmd_call		4113015	0					
ANR	4113314	ArgumentList	core -> rcmd		4113015	1					
ANR	4113315	Argument	core -> rcmd		4113015	0					
ANR	4113316	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4113317	Identifier	core		4113015	0					
ANR	4113318	Identifier	rcmd		4113015	1					
ANR	4113319	Argument	cmd		4113015	1					
ANR	4113320	Identifier	cmd		4113015	0					
ANR	4113321	BreakStatement	break ;	2552:2:65658:65663	4113015	2	True				
ANR	4113322	Label	"case '""' :"	2553:1:65666:65674	4113015	3	True				
ANR	4113323	ForStatement	for ( ; * cmd ; )		4113015	4					
ANR	4113324	Condition	* cmd	2554:9:65685:65688	4113015	0	True				
ANR	4113325	UnaryOperationExpression	* cmd		4113015	0					
ANR	4113326	UnaryOperator	*		4113015	0					
ANR	4113327	Identifier	cmd		4113015	1					
ANR	4113328	CompoundStatement		52:3:1093:1107	4113015	1					
ANR	4113329	IdentifierDeclStatement	int pipefd = - 1 ;	2555:3:65698:65713	4113015	0	True				
ANR	4113330	IdentifierDecl	pipefd = - 1		4113015	0					
ANR	4113331	IdentifierDeclType	int		4113015	0					
ANR	4113332	Identifier	pipefd		4113015	1					
ANR	4113333	AssignmentExpression	pipefd = - 1		4113015	2		=			
ANR	4113334	Identifier	pipefd		4113015	0					
ANR	4113335	UnaryOperationExpression	- 1		4113015	1					
ANR	4113336	UnaryOperator	-		4113015	0					
ANR	4113337	PrimaryExpression	1		4113015	1					
ANR	4113338	IdentifierDeclStatement	ut64 oseek = UT64_MAX ;	2556:3:65718:65739	4113015	1	True				
ANR	4113339	IdentifierDecl	oseek = UT64_MAX		4113015	0					
ANR	4113340	IdentifierDeclType	ut64		4113015	0					
ANR	4113341	Identifier	oseek		4113015	1					
ANR	4113342	AssignmentExpression	oseek = UT64_MAX		4113015	2		=			
ANR	4113343	Identifier	UT64_MAX		4113015	0					
ANR	4113344	Identifier	UT64_MAX		4113015	1					
ANR	4113345	IdentifierDeclStatement	"char * line , * p ;"	2557:3:65744:65758	4113015	2	True				
ANR	4113346	IdentifierDecl	* line		4113015	0					
ANR	4113347	IdentifierDeclType	char *		4113015	0					
ANR	4113348	Identifier	line		4113015	1					
ANR	4113349	IdentifierDecl	* p		4113015	1					
ANR	4113350	IdentifierDeclType	char *		4113015	0					
ANR	4113351	Identifier	p		4113015	1					
ANR	4113352	ExpressionStatement	"haveQuote = * cmd == '""'"	2558:3:65763:65786	4113015	3	True				
ANR	4113353	AssignmentExpression	"haveQuote = * cmd == '""'"		4113015	0		=			
ANR	4113354	Identifier	haveQuote		4113015	0					
ANR	4113355	EqualityExpression	"* cmd == '""'"		4113015	1		==			
ANR	4113356	UnaryOperationExpression	* cmd		4113015	0					
ANR	4113357	UnaryOperator	*		4113015	0					
ANR	4113358	Identifier	cmd		4113015	1					
ANR	4113359	PrimaryExpression	"'""'"		4113015	1					
ANR	4113360	IfStatement	if ( haveQuote )		4113015	4					
ANR	4113361	Condition	haveQuote	2559:7:65795:65803	4113015	0	True				
ANR	4113362	Identifier	haveQuote		4113015	0					
ANR	4113363	CompoundStatement		54:18:1155:1155	4113015	1					
ANR	4113364	ExpressionStatement	cmd ++	2560:4:65812:65817	4113015	0	True				
ANR	4113365	PostIncDecOperationExpression	cmd ++		4113015	0					
ANR	4113366	Identifier	cmd		4113015	0					
ANR	4113367	IncDec	++		4113015	1					
ANR	4113368	ExpressionStatement	p = * cmd ? find_eoq ( cmd ) : NULL	2561:4:65823:65855	4113015	1	True				
ANR	4113369	AssignmentExpression	p = * cmd ? find_eoq ( cmd ) : NULL		4113015	0		=			
ANR	4113370	Identifier	p		4113015	0					
ANR	4113371	ConditionalExpression	* cmd ? find_eoq ( cmd ) : NULL		4113015	1					
ANR	4113372	Condition	* cmd		4113015	0					
ANR	4113373	UnaryOperationExpression	* cmd		4113015	0					
ANR	4113374	UnaryOperator	*		4113015	0					
ANR	4113375	Identifier	cmd		4113015	1					
ANR	4113376	CallExpression	find_eoq ( cmd )		4113015	1					
ANR	4113377	Callee	find_eoq		4113015	0					
ANR	4113378	Identifier	find_eoq		4113015	0					
ANR	4113379	ArgumentList	cmd		4113015	1					
ANR	4113380	Argument	cmd		4113015	0					
ANR	4113381	Identifier	cmd		4113015	0					
ANR	4113382	Identifier	NULL		4113015	2					
ANR	4113383	IfStatement	if ( ! p || ! * p )		4113015	2					
ANR	4113384	Condition	! p || ! * p	2562:8:65865:65873	4113015	0	True				
ANR	4113385	OrExpression	! p || ! * p		4113015	0		||			
ANR	4113386	UnaryOperationExpression	! p		4113015	0					
ANR	4113387	UnaryOperator	!		4113015	0					
ANR	4113388	Identifier	p		4113015	1					
ANR	4113389	UnaryOperationExpression	! * p		4113015	1					
ANR	4113390	UnaryOperator	!		4113015	0					
ANR	4113391	UnaryOperationExpression	* p		4113015	1					
ANR	4113392	UnaryOperator	*		4113015	0					
ANR	4113393	Identifier	p		4113015	1					
ANR	4113394	CompoundStatement		57:19:1225:1225	4113015	1					
ANR	4113395	ExpressionStatement	"eprintf ( ""Missing \\"" in (%s)."" , cmd )"	2563:5:65883:65919	4113015	0	True				
ANR	4113396	CallExpression	"eprintf ( ""Missing \\"" in (%s)."" , cmd )"		4113015	0					
ANR	4113397	Callee	eprintf		4113015	0					
ANR	4113398	Identifier	eprintf		4113015	0					
ANR	4113399	ArgumentList	"""Missing \\"" in (%s)."""		4113015	1					
ANR	4113400	Argument	"""Missing \\"" in (%s)."""		4113015	0					
ANR	4113401	PrimaryExpression	"""Missing \\"" in (%s)."""		4113015	0					
ANR	4113402	Argument	cmd		4113015	1					
ANR	4113403	Identifier	cmd		4113015	0					
ANR	4113404	ExpressionStatement	r_list_free ( tmpenvs )	2564:5:65926:65947	4113015	1	True				
ANR	4113405	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4113406	Callee	r_list_free		4113015	0					
ANR	4113407	Identifier	r_list_free		4113015	0					
ANR	4113408	ArgumentList	tmpenvs		4113015	1					
ANR	4113409	Argument	tmpenvs		4113015	0					
ANR	4113410	Identifier	tmpenvs		4113015	0					
ANR	4113411	ReturnStatement	return false ;	2565:5:65954:65966	4113015	2	True				
ANR	4113412	Identifier	false		4113015	0					
ANR	4113413	ExpressionStatement	* p ++ = 0	2567:4:65978:65986	4113015	3	True				
ANR	4113414	AssignmentExpression	* p ++ = 0		4113015	0		=			
ANR	4113415	UnaryOperationExpression	* p ++		4113015	0					
ANR	4113416	UnaryOperator	*		4113015	0					
ANR	4113417	PostIncDecOperationExpression	p ++		4113015	1					
ANR	4113418	Identifier	p		4113015	0					
ANR	4113419	IncDec	++		4113015	1					
ANR	4113420	PrimaryExpression	0		4113015	1					
ANR	4113421	IfStatement	if ( ! * p )		4113015	4					
ANR	4113422	Condition	! * p	2568:8:65996:65998	4113015	0	True				
ANR	4113423	UnaryOperationExpression	! * p		4113015	0					
ANR	4113424	UnaryOperator	!		4113015	0					
ANR	4113425	UnaryOperationExpression	* p		4113015	1					
ANR	4113426	UnaryOperator	*		4113015	0					
ANR	4113427	Identifier	p		4113015	1					
ANR	4113428	CompoundStatement		63:13:1350:1350	4113015	1					
ANR	4113429	ExpressionStatement	eos = true	2569:5:66008:66018	4113015	0	True				
ANR	4113430	AssignmentExpression	eos = true		4113015	0		=			
ANR	4113431	Identifier	eos		4113015	0					
ANR	4113432	Identifier	true		4113015	1					
ANR	4113433	ElseStatement	else		4113015	0					
ANR	4113434	CompoundStatement		67:4:1391:1419	4113015	0					
ANR	4113435	IdentifierDeclStatement	"char * sc = strchr ( cmd , ';' ) ;"	2572:4:66042:66070	4113015	0	True				
ANR	4113436	IdentifierDecl	"* sc = strchr ( cmd , ';' )"		4113015	0					
ANR	4113437	IdentifierDeclType	char *		4113015	0					
ANR	4113438	Identifier	sc		4113015	1					
ANR	4113439	AssignmentExpression	"* sc = strchr ( cmd , ';' )"		4113015	2		=			
ANR	4113440	Identifier	sc		4113015	0					
ANR	4113441	CallExpression	"strchr ( cmd , ';' )"		4113015	1					
ANR	4113442	Callee	strchr		4113015	0					
ANR	4113443	Identifier	strchr		4113015	0					
ANR	4113444	ArgumentList	cmd		4113015	1					
ANR	4113445	Argument	cmd		4113015	0					
ANR	4113446	Identifier	cmd		4113015	0					
ANR	4113447	Argument	';'		4113015	1					
ANR	4113448	PrimaryExpression	';'		4113015	0					
ANR	4113449	IfStatement	if ( sc )		4113015	1					
ANR	4113450	Condition	sc	2573:8:66080:66081	4113015	0	True				
ANR	4113451	Identifier	sc		4113015	0					
ANR	4113452	CompoundStatement		68:12:1433:1433	4113015	1					
ANR	4113453	ExpressionStatement	* sc = 0	2574:5:66091:66098	4113015	0	True				
ANR	4113454	AssignmentExpression	* sc = 0		4113015	0		=			
ANR	4113455	UnaryOperationExpression	* sc		4113015	0					
ANR	4113456	UnaryOperator	*		4113015	0					
ANR	4113457	Identifier	sc		4113015	1					
ANR	4113458	PrimaryExpression	0		4113015	1					
ANR	4113459	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	2576:4:66110:66133	4113015	2	True				
ANR	4113460	CallExpression	"r_core_cmd0 ( core , cmd )"		4113015	0					
ANR	4113461	Callee	r_core_cmd0		4113015	0					
ANR	4113462	Identifier	r_core_cmd0		4113015	0					
ANR	4113463	ArgumentList	core		4113015	1					
ANR	4113464	Argument	core		4113015	0					
ANR	4113465	Identifier	core		4113015	0					
ANR	4113466	Argument	cmd		4113015	1					
ANR	4113467	Identifier	cmd		4113015	0					
ANR	4113468	IfStatement	if ( ! sc )		4113015	3					
ANR	4113469	Condition	! sc	2577:8:66143:66145	4113015	0	True				
ANR	4113470	UnaryOperationExpression	! sc		4113015	0					
ANR	4113471	UnaryOperator	!		4113015	0					
ANR	4113472	Identifier	sc		4113015	1					
ANR	4113473	CompoundStatement		72:13:1497:1497	4113015	1					
ANR	4113474	BreakStatement	break ;	2578:5:66155:66160	4113015	0	True				
ANR	4113475	ExpressionStatement	cmd = sc + 1	2580:4:66172:66184	4113015	4	True				
ANR	4113476	AssignmentExpression	cmd = sc + 1		4113015	0		=			
ANR	4113477	Identifier	cmd		4113015	0					
ANR	4113478	AdditiveExpression	sc + 1		4113015	1		+			
ANR	4113479	Identifier	sc		4113015	0					
ANR	4113480	PrimaryExpression	1		4113015	1					
ANR	4113481	ContinueStatement	continue ;	2581:4:66190:66198	4113015	5	True				
ANR	4113482	IfStatement	if ( * p )		4113015	5					
ANR	4113483	Condition	* p	2583:7:66212:66213	4113015	0	True				
ANR	4113484	UnaryOperationExpression	* p		4113015	0					
ANR	4113485	UnaryOperator	*		4113015	0					
ANR	4113486	Identifier	p		4113015	1					
ANR	4113487	CompoundStatement		78:11:1565:1565	4113015	1					
ANR	4113488	IfStatement	if ( p [ 0 ] == '@' )		4113015	0					
ANR	4113489	Condition	p [ 0 ] == '@'	2585:8:66247:66257	4113015	0	True				
ANR	4113490	EqualityExpression	p [ 0 ] == '@'		4113015	0		==			
ANR	4113491	ArrayIndexing	p [ 0 ]		4113015	0					
ANR	4113492	Identifier	p		4113015	0					
ANR	4113493	PrimaryExpression	0		4113015	1					
ANR	4113494	PrimaryExpression	'@'		4113015	1					
ANR	4113495	CompoundStatement		80:21:1609:1609	4113015	1					
ANR	4113496	ExpressionStatement	p --	2586:5:66267:66270	4113015	0	True				
ANR	4113497	PostIncDecOperationExpression	p --		4113015	0					
ANR	4113498	Identifier	p		4113015	0					
ANR	4113499	IncDec	--		4113015	1					
ANR	4113500	WhileStatement	while ( p [ 1 ] == ';' || IS_WHITESPACE ( p [ 1 ] ) )		4113015	1					
ANR	4113501	Condition	p [ 1 ] == ';' || IS_WHITESPACE ( p [ 1 ] )	2588:11:66289:66323	4113015	0	True				
ANR	4113502	OrExpression	p [ 1 ] == ';' || IS_WHITESPACE ( p [ 1 ] )		4113015	0		||			
ANR	4113503	EqualityExpression	p [ 1 ] == ';'		4113015	0		==			
ANR	4113504	ArrayIndexing	p [ 1 ]		4113015	0					
ANR	4113505	Identifier	p		4113015	0					
ANR	4113506	PrimaryExpression	1		4113015	1					
ANR	4113507	PrimaryExpression	';'		4113015	1					
ANR	4113508	CallExpression	IS_WHITESPACE ( p [ 1 ] )		4113015	1					
ANR	4113509	Callee	IS_WHITESPACE		4113015	0					
ANR	4113510	Identifier	IS_WHITESPACE		4113015	0					
ANR	4113511	ArgumentList	p [ 1 ]		4113015	1					
ANR	4113512	Argument	p [ 1 ]		4113015	0					
ANR	4113513	ArrayIndexing	p [ 1 ]		4113015	0					
ANR	4113514	Identifier	p		4113015	0					
ANR	4113515	PrimaryExpression	1		4113015	1					
ANR	4113516	CompoundStatement		83:48:1675:1675	4113015	1					
ANR	4113517	ExpressionStatement	p ++	2589:5:66333:66336	4113015	0	True				
ANR	4113518	PostIncDecOperationExpression	p ++		4113015	0					
ANR	4113519	Identifier	p		4113015	0					
ANR	4113520	IncDec	++		4113015	1					
ANR	4113521	IfStatement	if ( p [ 1 ] == '@' || ( p [ 1 ] && p [ 2 ] == '@' ) )		4113015	2					
ANR	4113522	Condition	p [ 1 ] == '@' || ( p [ 1 ] && p [ 2 ] == '@' )	2591:8:66352:66387	4113015	0	True				
ANR	4113523	OrExpression	p [ 1 ] == '@' || ( p [ 1 ] && p [ 2 ] == '@' )		4113015	0		||			
ANR	4113524	EqualityExpression	p [ 1 ] == '@'		4113015	0		==			
ANR	4113525	ArrayIndexing	p [ 1 ]		4113015	0					
ANR	4113526	Identifier	p		4113015	0					
ANR	4113527	PrimaryExpression	1		4113015	1					
ANR	4113528	PrimaryExpression	'@'		4113015	1					
ANR	4113529	AndExpression	p [ 1 ] && p [ 2 ] == '@'		4113015	1		&&			
ANR	4113530	ArrayIndexing	p [ 1 ]		4113015	0					
ANR	4113531	Identifier	p		4113015	0					
ANR	4113532	PrimaryExpression	1		4113015	1					
ANR	4113533	EqualityExpression	p [ 2 ] == '@'		4113015	1		==			
ANR	4113534	ArrayIndexing	p [ 2 ]		4113015	0					
ANR	4113535	Identifier	p		4113015	0					
ANR	4113536	PrimaryExpression	2		4113015	1					
ANR	4113537	PrimaryExpression	'@'		4113015	1					
ANR	4113538	CompoundStatement		87:5:1746:1775	4113015	1					
ANR	4113539	IdentifierDeclStatement	"char * q = strchr ( p + 1 , '""' ) ;"	2592:5:66397:66426	4113015	0	True				
ANR	4113540	IdentifierDecl	"* q = strchr ( p + 1 , '""' )"		4113015	0					
ANR	4113541	IdentifierDeclType	char *		4113015	0					
ANR	4113542	Identifier	q		4113015	1					
ANR	4113543	AssignmentExpression	"* q = strchr ( p + 1 , '""' )"		4113015	2		=			
ANR	4113544	Identifier	q		4113015	0					
ANR	4113545	CallExpression	"strchr ( p + 1 , '""' )"		4113015	1					
ANR	4113546	Callee	strchr		4113015	0					
ANR	4113547	Identifier	strchr		4113015	0					
ANR	4113548	ArgumentList	p + 1		4113015	1					
ANR	4113549	Argument	p + 1		4113015	0					
ANR	4113550	AdditiveExpression	p + 1		4113015	0		+			
ANR	4113551	Identifier	p		4113015	0					
ANR	4113552	PrimaryExpression	1		4113015	1					
ANR	4113553	Argument	"'""'"		4113015	1					
ANR	4113554	PrimaryExpression	"'""'"		4113015	0					
ANR	4113555	IfStatement	if ( q )		4113015	1					
ANR	4113556	Condition	q	2593:9:66437:66437	4113015	0	True				
ANR	4113557	Identifier	q		4113015	0					
ANR	4113558	CompoundStatement		88:12:1789:1789	4113015	1					
ANR	4113559	ExpressionStatement	* q = 0	2594:6:66448:66454	4113015	0	True				
ANR	4113560	AssignmentExpression	* q = 0		4113015	0		=			
ANR	4113561	UnaryOperationExpression	* q		4113015	0					
ANR	4113562	UnaryOperator	*		4113015	0					
ANR	4113563	Identifier	q		4113015	1					
ANR	4113564	PrimaryExpression	0		4113015	1					
ANR	4113565	ExpressionStatement	haveQuote = q != NULL	2596:5:66468:66489	4113015	2	True				
ANR	4113566	AssignmentExpression	haveQuote = q != NULL		4113015	0		=			
ANR	4113567	Identifier	haveQuote		4113015	0					
ANR	4113568	EqualityExpression	q != NULL		4113015	1		!=			
ANR	4113569	Identifier	q		4113015	0					
ANR	4113570	Identifier	NULL		4113015	1					
ANR	4113571	ExpressionStatement	oseek = core -> offset	2597:5:66496:66516	4113015	3	True				
ANR	4113572	AssignmentExpression	oseek = core -> offset		4113015	0		=			
ANR	4113573	Identifier	oseek		4113015	0					
ANR	4113574	PtrMemberAccess	core -> offset		4113015	1					
ANR	4113575	Identifier	core		4113015	0					
ANR	4113576	Identifier	offset		4113015	1					
ANR	4113577	ExpressionStatement	"r_core_seek ( core , r_num_math ( core -> num , p + 2 ) , 1 )"	2598:5:66523:66575	4113015	4	True				
ANR	4113578	CallExpression	"r_core_seek ( core , r_num_math ( core -> num , p + 2 ) , 1 )"		4113015	0					
ANR	4113579	Callee	r_core_seek		4113015	0					
ANR	4113580	Identifier	r_core_seek		4113015	0					
ANR	4113581	ArgumentList	core		4113015	1					
ANR	4113582	Argument	core		4113015	0					
ANR	4113583	Identifier	core		4113015	0					
ANR	4113584	Argument	"r_num_math ( core -> num , p + 2 )"		4113015	1					
ANR	4113585	CallExpression	"r_num_math ( core -> num , p + 2 )"		4113015	0					
ANR	4113586	Callee	r_num_math		4113015	0					
ANR	4113587	Identifier	r_num_math		4113015	0					
ANR	4113588	ArgumentList	core -> num		4113015	1					
ANR	4113589	Argument	core -> num		4113015	0					
ANR	4113590	PtrMemberAccess	core -> num		4113015	0					
ANR	4113591	Identifier	core		4113015	0					
ANR	4113592	Identifier	num		4113015	1					
ANR	4113593	Argument	p + 2		4113015	1					
ANR	4113594	AdditiveExpression	p + 2		4113015	0		+			
ANR	4113595	Identifier	p		4113015	0					
ANR	4113596	PrimaryExpression	2		4113015	1					
ANR	4113597	Argument	1		4113015	2					
ANR	4113598	PrimaryExpression	1		4113015	0					
ANR	4113599	IfStatement	if ( q )		4113015	5					
ANR	4113600	Condition	q	2599:9:66586:66586	4113015	0	True				
ANR	4113601	Identifier	q		4113015	0					
ANR	4113602	CompoundStatement		94:12:1938:1938	4113015	1					
ANR	4113603	ExpressionStatement	"* p = '""'"	2600:6:66597:66605	4113015	0	True				
ANR	4113604	AssignmentExpression	"* p = '""'"		4113015	0		=			
ANR	4113605	UnaryOperationExpression	* p		4113015	0					
ANR	4113606	UnaryOperator	*		4113015	0					
ANR	4113607	Identifier	p		4113015	1					
ANR	4113608	PrimaryExpression	"'""'"		4113015	1					
ANR	4113609	ExpressionStatement	p = q	2601:6:66613:66618	4113015	1	True				
ANR	4113610	AssignmentExpression	p = q		4113015	0		=			
ANR	4113611	Identifier	p		4113015	0					
ANR	4113612	Identifier	q		4113015	1					
ANR	4113613	ElseStatement	else		4113015	0					
ANR	4113614	CompoundStatement		97:12:1981:1981	4113015	0					
ANR	4113615	ExpressionStatement	"p = strchr ( p + 1 , ';' )"	2603:6:66640:66663	4113015	0	True				
ANR	4113616	AssignmentExpression	"p = strchr ( p + 1 , ';' )"		4113015	0		=			
ANR	4113617	Identifier	p		4113015	0					
ANR	4113618	CallExpression	"strchr ( p + 1 , ';' )"		4113015	1					
ANR	4113619	Callee	strchr		4113015	0					
ANR	4113620	Identifier	strchr		4113015	0					
ANR	4113621	ArgumentList	p + 1		4113015	1					
ANR	4113622	Argument	p + 1		4113015	0					
ANR	4113623	AdditiveExpression	p + 1		4113015	0		+			
ANR	4113624	Identifier	p		4113015	0					
ANR	4113625	PrimaryExpression	1		4113015	1					
ANR	4113626	Argument	';'		4113015	1					
ANR	4113627	PrimaryExpression	';'		4113015	0					
ANR	4113628	IfStatement	if ( p && * p && p [ 1 ] == '>' )		4113015	3					
ANR	4113629	Condition	p && * p && p [ 1 ] == '>'	2606:8:66686:66707	4113015	0	True				
ANR	4113630	AndExpression	p && * p && p [ 1 ] == '>'		4113015	0		&&			
ANR	4113631	Identifier	p		4113015	0					
ANR	4113632	AndExpression	* p && p [ 1 ] == '>'		4113015	1		&&			
ANR	4113633	UnaryOperationExpression	* p		4113015	0					
ANR	4113634	UnaryOperator	*		4113015	0					
ANR	4113635	Identifier	p		4113015	1					
ANR	4113636	EqualityExpression	p [ 1 ] == '>'		4113015	1		==			
ANR	4113637	ArrayIndexing	p [ 1 ]		4113015	0					
ANR	4113638	Identifier	p		4113015	0					
ANR	4113639	PrimaryExpression	1		4113015	1					
ANR	4113640	PrimaryExpression	'>'		4113015	1					
ANR	4113641	CompoundStatement		108:5:2193:2224	4113015	1					
ANR	4113642	ExpressionStatement	str = p + 2	2607:5:66717:66728	4113015	0	True				
ANR	4113643	AssignmentExpression	str = p + 2		4113015	0		=			
ANR	4113644	Identifier	str		4113015	0					
ANR	4113645	AdditiveExpression	p + 2		4113015	1		+			
ANR	4113646	Identifier	p		4113015	0					
ANR	4113647	PrimaryExpression	2		4113015	1					
ANR	4113648	WhileStatement	while ( * str == '>' )		4113015	1					
ANR	4113649	Condition	* str == '>'	2608:12:66742:66752	4113015	0	True				
ANR	4113650	EqualityExpression	* str == '>'		4113015	0		==			
ANR	4113651	UnaryOperationExpression	* str		4113015	0					
ANR	4113652	UnaryOperator	*		4113015	0					
ANR	4113653	Identifier	str		4113015	1					
ANR	4113654	PrimaryExpression	'>'		4113015	1					
ANR	4113655	CompoundStatement		103:25:2104:2104	4113015	1					
ANR	4113656	ExpressionStatement	str ++	2609:6:66763:66768	4113015	0	True				
ANR	4113657	PostIncDecOperationExpression	str ++		4113015	0					
ANR	4113658	Identifier	str		4113015	0					
ANR	4113659	IncDec	++		4113015	1					
ANR	4113660	ExpressionStatement	str = ( char * ) r_str_trim_ro ( str )	2611:5:66782:66815	4113015	2	True				
ANR	4113661	AssignmentExpression	str = ( char * ) r_str_trim_ro ( str )		4113015	0		=			
ANR	4113662	Identifier	str		4113015	0					
ANR	4113663	CastExpression	( char * ) r_str_trim_ro ( str )		4113015	1					
ANR	4113664	CastTarget	char *		4113015	0					
ANR	4113665	CallExpression	r_str_trim_ro ( str )		4113015	1					
ANR	4113666	Callee	r_str_trim_ro		4113015	0					
ANR	4113667	Identifier	r_str_trim_ro		4113015	0					
ANR	4113668	ArgumentList	str		4113015	1					
ANR	4113669	Argument	str		4113015	0					
ANR	4113670	Identifier	str		4113015	0					
ANR	4113671	ExpressionStatement	r_cons_flush ( )	2612:5:66822:66837	4113015	3	True				
ANR	4113672	CallExpression	r_cons_flush ( )		4113015	0					
ANR	4113673	Callee	r_cons_flush		4113015	0					
ANR	4113674	Identifier	r_cons_flush		4113015	0					
ANR	4113675	ArgumentList			4113015	1					
ANR	4113676	IdentifierDeclStatement	const bool append = p [ 2 ] == '>' ;	2613:5:66844:66875	4113015	4	True				
ANR	4113677	IdentifierDecl	append = p [ 2 ] == '>'		4113015	0					
ANR	4113678	IdentifierDeclType	const bool		4113015	0					
ANR	4113679	Identifier	append		4113015	1					
ANR	4113680	AssignmentExpression	append = p [ 2 ] == '>'		4113015	2		=			
ANR	4113681	Identifier	append		4113015	0					
ANR	4113682	EqualityExpression	p [ 2 ] == '>'		4113015	1		==			
ANR	4113683	ArrayIndexing	p [ 2 ]		4113015	0					
ANR	4113684	Identifier	p		4113015	0					
ANR	4113685	PrimaryExpression	2		4113015	1					
ANR	4113686	PrimaryExpression	'>'		4113015	1					
ANR	4113687	ExpressionStatement	"pipefd = r_cons_pipe_open ( str , 1 , append )"	2614:5:66882:66924	4113015	5	True				
ANR	4113688	AssignmentExpression	"pipefd = r_cons_pipe_open ( str , 1 , append )"		4113015	0		=			
ANR	4113689	Identifier	pipefd		4113015	0					
ANR	4113690	CallExpression	"r_cons_pipe_open ( str , 1 , append )"		4113015	1					
ANR	4113691	Callee	r_cons_pipe_open		4113015	0					
ANR	4113692	Identifier	r_cons_pipe_open		4113015	0					
ANR	4113693	ArgumentList	str		4113015	1					
ANR	4113694	Argument	str		4113015	0					
ANR	4113695	Identifier	str		4113015	0					
ANR	4113696	Argument	1		4113015	1					
ANR	4113697	PrimaryExpression	1		4113015	0					
ANR	4113698	Argument	append		4113015	2					
ANR	4113699	Identifier	append		4113015	0					
ANR	4113700	ExpressionStatement	line = strdup ( cmd )	2617:3:66940:66959	4113015	6	True				
ANR	4113701	AssignmentExpression	line = strdup ( cmd )		4113015	0		=			
ANR	4113702	Identifier	line		4113015	0					
ANR	4113703	CallExpression	strdup ( cmd )		4113015	1					
ANR	4113704	Callee	strdup		4113015	0					
ANR	4113705	Identifier	strdup		4113015	0					
ANR	4113706	ArgumentList	cmd		4113015	1					
ANR	4113707	Argument	cmd		4113015	0					
ANR	4113708	Identifier	cmd		4113015	0					
ANR	4113709	ExpressionStatement	"line = r_str_replace ( line , ""\\\\\\"""" , ""\\"""" , true )"	2618:3:66964:67011	4113015	7	True				
ANR	4113710	AssignmentExpression	"line = r_str_replace ( line , ""\\\\\\"""" , ""\\"""" , true )"		4113015	0		=			
ANR	4113711	Identifier	line		4113015	0					
ANR	4113712	CallExpression	"r_str_replace ( line , ""\\\\\\"""" , ""\\"""" , true )"		4113015	1					
ANR	4113713	Callee	r_str_replace		4113015	0					
ANR	4113714	Identifier	r_str_replace		4113015	0					
ANR	4113715	ArgumentList	line		4113015	1					
ANR	4113716	Argument	line		4113015	0					
ANR	4113717	Identifier	line		4113015	0					
ANR	4113718	Argument	"""\\\\\\"""""		4113015	1					
ANR	4113719	PrimaryExpression	"""\\\\\\"""""		4113015	0					
ANR	4113720	Argument	"""\\"""""		4113015	2					
ANR	4113721	PrimaryExpression	"""\\"""""		4113015	0					
ANR	4113722	Argument	true		4113015	3					
ANR	4113723	Identifier	true		4113015	0					
ANR	4113724	IfStatement	if ( p && * p && p [ 1 ] == '|' )		4113015	8					
ANR	4113725	Condition	p && * p && p [ 1 ] == '|'	2619:7:67020:67041	4113015	0	True				
ANR	4113726	AndExpression	p && * p && p [ 1 ] == '|'		4113015	0		&&			
ANR	4113727	Identifier	p		4113015	0					
ANR	4113728	AndExpression	* p && p [ 1 ] == '|'		4113015	1		&&			
ANR	4113729	UnaryOperationExpression	* p		4113015	0					
ANR	4113730	UnaryOperator	*		4113015	0					
ANR	4113731	Identifier	p		4113015	1					
ANR	4113732	EqualityExpression	p [ 1 ] == '|'		4113015	1		==			
ANR	4113733	ArrayIndexing	p [ 1 ]		4113015	0					
ANR	4113734	Identifier	p		4113015	0					
ANR	4113735	PrimaryExpression	1		4113015	1					
ANR	4113736	PrimaryExpression	'|'		4113015	1					
ANR	4113737	CompoundStatement		114:31:2393:2393	4113015	1					
ANR	4113738	ExpressionStatement	str = p + 2	2620:4:67050:67061	4113015	0	True				
ANR	4113739	AssignmentExpression	str = p + 2		4113015	0		=			
ANR	4113740	Identifier	str		4113015	0					
ANR	4113741	AdditiveExpression	p + 2		4113015	1		+			
ANR	4113742	Identifier	p		4113015	0					
ANR	4113743	PrimaryExpression	2		4113015	1					
ANR	4113744	WhileStatement	while ( IS_WHITESPACE ( * str ) )		4113015	1					
ANR	4113745	Condition	IS_WHITESPACE ( * str )	2621:11:67074:67093	4113015	0	True				
ANR	4113746	CallExpression	IS_WHITESPACE ( * str )		4113015	0					
ANR	4113747	Callee	IS_WHITESPACE		4113015	0					
ANR	4113748	Identifier	IS_WHITESPACE		4113015	0					
ANR	4113749	ArgumentList	* str		4113015	1					
ANR	4113750	Argument	* str		4113015	0					
ANR	4113751	UnaryOperationExpression	* str		4113015	0					
ANR	4113752	UnaryOperator	*		4113015	0					
ANR	4113753	Identifier	str		4113015	1					
ANR	4113754	CompoundStatement		116:33:2445:2445	4113015	1					
ANR	4113755	ExpressionStatement	str ++	2622:5:67103:67108	4113015	0	True				
ANR	4113756	PostIncDecOperationExpression	str ++		4113015	0					
ANR	4113757	Identifier	str		4113015	0					
ANR	4113758	IncDec	++		4113015	1					
ANR	4113759	ExpressionStatement	"r_core_cmd_pipe ( core , cmd , str )"	2624:4:67120:67152	4113015	2	True				
ANR	4113760	CallExpression	"r_core_cmd_pipe ( core , cmd , str )"		4113015	0					
ANR	4113761	Callee	r_core_cmd_pipe		4113015	0					
ANR	4113762	Identifier	r_core_cmd_pipe		4113015	0					
ANR	4113763	ArgumentList	core		4113015	1					
ANR	4113764	Argument	core		4113015	0					
ANR	4113765	Identifier	core		4113015	0					
ANR	4113766	Argument	cmd		4113015	1					
ANR	4113767	Identifier	cmd		4113015	0					
ANR	4113768	Argument	str		4113015	2					
ANR	4113769	Identifier	str		4113015	0					
ANR	4113770	ElseStatement	else		4113015	0					
ANR	4113771	CompoundStatement		120:10:2513:2513	4113015	0					
ANR	4113772	ExpressionStatement	"r_cmd_call ( core -> rcmd , line )"	2626:4:67170:67199	4113015	0	True				
ANR	4113773	CallExpression	"r_cmd_call ( core -> rcmd , line )"		4113015	0					
ANR	4113774	Callee	r_cmd_call		4113015	0					
ANR	4113775	Identifier	r_cmd_call		4113015	0					
ANR	4113776	ArgumentList	core -> rcmd		4113015	1					
ANR	4113777	Argument	core -> rcmd		4113015	0					
ANR	4113778	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4113779	Identifier	core		4113015	0					
ANR	4113780	Identifier	rcmd		4113015	1					
ANR	4113781	Argument	line		4113015	1					
ANR	4113782	Identifier	line		4113015	0					
ANR	4113783	ExpressionStatement	free ( line )	2628:3:67209:67220	4113015	9	True				
ANR	4113784	CallExpression	free ( line )		4113015	0					
ANR	4113785	Callee	free		4113015	0					
ANR	4113786	Identifier	free		4113015	0					
ANR	4113787	ArgumentList	line		4113015	1					
ANR	4113788	Argument	line		4113015	0					
ANR	4113789	Identifier	line		4113015	0					
ANR	4113790	IfStatement	if ( oseek != UT64_MAX )		4113015	10					
ANR	4113791	Condition	oseek != UT64_MAX	2629:7:67229:67245	4113015	0	True				
ANR	4113792	EqualityExpression	oseek != UT64_MAX		4113015	0		!=			
ANR	4113793	Identifier	oseek		4113015	0					
ANR	4113794	Identifier	UT64_MAX		4113015	1					
ANR	4113795	CompoundStatement		124:26:2597:2597	4113015	1					
ANR	4113796	ExpressionStatement	"r_core_seek ( core , oseek , 1 )"	2630:4:67254:67282	4113015	0	True				
ANR	4113797	CallExpression	"r_core_seek ( core , oseek , 1 )"		4113015	0					
ANR	4113798	Callee	r_core_seek		4113015	0					
ANR	4113799	Identifier	r_core_seek		4113015	0					
ANR	4113800	ArgumentList	core		4113015	1					
ANR	4113801	Argument	core		4113015	0					
ANR	4113802	Identifier	core		4113015	0					
ANR	4113803	Argument	oseek		4113015	1					
ANR	4113804	Identifier	oseek		4113015	0					
ANR	4113805	Argument	1		4113015	2					
ANR	4113806	PrimaryExpression	1		4113015	0					
ANR	4113807	IfStatement	if ( pipefd != - 1 )		4113015	11					
ANR	4113808	Condition	pipefd != - 1	2632:7:67296:67307	4113015	0	True				
ANR	4113809	EqualityExpression	pipefd != - 1		4113015	0		!=			
ANR	4113810	Identifier	pipefd		4113015	0					
ANR	4113811	UnaryOperationExpression	- 1		4113015	1					
ANR	4113812	UnaryOperator	-		4113015	0					
ANR	4113813	PrimaryExpression	1		4113015	1					
ANR	4113814	CompoundStatement		127:21:2659:2659	4113015	1					
ANR	4113815	ExpressionStatement	r_cons_flush ( )	2633:4:67316:67331	4113015	0	True				
ANR	4113816	CallExpression	r_cons_flush ( )		4113015	0					
ANR	4113817	Callee	r_cons_flush		4113015	0					
ANR	4113818	Identifier	r_cons_flush		4113015	0					
ANR	4113819	ArgumentList			4113015	1					
ANR	4113820	ExpressionStatement	r_cons_pipe_close ( pipefd )	2634:4:67337:67363	4113015	1	True				
ANR	4113821	CallExpression	r_cons_pipe_close ( pipefd )		4113015	0					
ANR	4113822	Callee	r_cons_pipe_close		4113015	0					
ANR	4113823	Identifier	r_cons_pipe_close		4113015	0					
ANR	4113824	ArgumentList	pipefd		4113015	1					
ANR	4113825	Argument	pipefd		4113015	0					
ANR	4113826	Identifier	pipefd		4113015	0					
ANR	4113827	IfStatement	if ( ! p )		4113015	12					
ANR	4113828	Condition	! p	2636:7:67377:67378	4113015	0	True				
ANR	4113829	UnaryOperationExpression	! p		4113015	0					
ANR	4113830	UnaryOperator	!		4113015	0					
ANR	4113831	Identifier	p		4113015	1					
ANR	4113832	CompoundStatement		131:11:2730:2730	4113015	1					
ANR	4113833	BreakStatement	break ;	2637:4:67387:67392	4113015	0	True				
ANR	4113834	IfStatement	if ( eos )		4113015	13					
ANR	4113835	Condition	eos	2639:7:67406:67408	4113015	0	True				
ANR	4113836	Identifier	eos		4113015	0					
ANR	4113837	CompoundStatement		134:12:2760:2760	4113015	1					
ANR	4113838	BreakStatement	break ;	2640:4:67417:67422	4113015	0	True				
ANR	4113839	IfStatement	if ( haveQuote )		4113015	14					
ANR	4113840	Condition	haveQuote	2642:7:67436:67444	4113015	0	True				
ANR	4113841	Identifier	haveQuote		4113015	0					
ANR	4113842	CompoundStatement		137:18:2796:2796	4113015	1					
ANR	4113843	IfStatement	if ( * p == ';' )		4113015	0					
ANR	4113844	Condition	* p == ';'	2643:8:67457:67465	4113015	0	True				
ANR	4113845	EqualityExpression	* p == ';'		4113015	0		==			
ANR	4113846	UnaryOperationExpression	* p		4113015	0					
ANR	4113847	UnaryOperator	*		4113015	0					
ANR	4113848	Identifier	p		4113015	1					
ANR	4113849	PrimaryExpression	';'		4113015	1					
ANR	4113850	CompoundStatement		138:19:2817:2817	4113015	1					
ANR	4113851	ExpressionStatement	cmd = p + 1	2644:5:67475:67486	4113015	0	True				
ANR	4113852	AssignmentExpression	cmd = p + 1		4113015	0		=			
ANR	4113853	Identifier	cmd		4113015	0					
ANR	4113854	AdditiveExpression	p + 1		4113015	1		+			
ANR	4113855	Identifier	p		4113015	0					
ANR	4113856	PrimaryExpression	1		4113015	1					
ANR	4113857	ElseStatement	else		4113015	0					
ANR	4113858	CompoundStatement		140:11:2848:2848	4113015	0					
ANR	4113859	IfStatement	"if ( * p == '""' )"		4113015	0					
ANR	4113860	Condition	"* p == '""'"	2646:9:67510:67518	4113015	0	True				
ANR	4113861	EqualityExpression	"* p == '""'"		4113015	0		==			
ANR	4113862	UnaryOperationExpression	* p		4113015	0					
ANR	4113863	UnaryOperator	*		4113015	0					
ANR	4113864	Identifier	p		4113015	1					
ANR	4113865	PrimaryExpression	"'""'"		4113015	1					
ANR	4113866	CompoundStatement		141:20:2870:2870	4113015	1					
ANR	4113867	ExpressionStatement	cmd = p + 1	2647:6:67529:67540	4113015	0	True				
ANR	4113868	AssignmentExpression	cmd = p + 1		4113015	0		=			
ANR	4113869	Identifier	cmd		4113015	0					
ANR	4113870	AdditiveExpression	p + 1		4113015	1		+			
ANR	4113871	Identifier	p		4113015	0					
ANR	4113872	PrimaryExpression	1		4113015	1					
ANR	4113873	ElseStatement	else		4113015	0					
ANR	4113874	CompoundStatement		143:12:2903:2903	4113015	0					
ANR	4113875	ExpressionStatement	"* p = '""'"	2649:6:67562:67570	4113015	0	True				
ANR	4113876	AssignmentExpression	"* p = '""'"		4113015	0		=			
ANR	4113877	UnaryOperationExpression	* p		4113015	0					
ANR	4113878	UnaryOperator	*		4113015	0					
ANR	4113879	Identifier	p		4113015	1					
ANR	4113880	PrimaryExpression	"'""'"		4113015	1					
ANR	4113881	ExpressionStatement	cmd = p	2650:6:67578:67585	4113015	1	True				
ANR	4113882	AssignmentExpression	cmd = p		4113015	0		=			
ANR	4113883	Identifier	cmd		4113015	0					
ANR	4113884	Identifier	p		4113015	1					
ANR	4113885	ElseStatement	else		4113015	0					
ANR	4113886	CompoundStatement		148:10:2959:2959	4113015	0					
ANR	4113887	ExpressionStatement	cmd = p + 1	2654:4:67616:67627	4113015	0	True				
ANR	4113888	AssignmentExpression	cmd = p + 1		4113015	0		=			
ANR	4113889	Identifier	cmd		4113015	0					
ANR	4113890	AdditiveExpression	p + 1		4113015	1		+			
ANR	4113891	Identifier	p		4113015	0					
ANR	4113892	PrimaryExpression	1		4113015	1					
ANR	4113893	ExpressionStatement	r_list_free ( tmpenvs )	2657:2:67640:67661	4113015	5	True				
ANR	4113894	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4113895	Callee	r_list_free		4113015	0					
ANR	4113896	Identifier	r_list_free		4113015	0					
ANR	4113897	ArgumentList	tmpenvs		4113015	1					
ANR	4113898	Argument	tmpenvs		4113015	0					
ANR	4113899	Identifier	tmpenvs		4113015	0					
ANR	4113900	ReturnStatement	return true ;	2658:2:67665:67676	4113015	6	True				
ANR	4113901	Identifier	true		4113015	0					
ANR	4113902	Label	case '(' :	2659:1:67679:67687	4113015	7	True				
ANR	4113903	IfStatement	"if ( cmd [ 1 ] != '*' && ! strstr ( cmd , "")()"" ) )"		4113015	8					
ANR	4113904	Condition	"cmd [ 1 ] != '*' && ! strstr ( cmd , "")()"" )"	2660:6:67695:67731	4113015	0	True				
ANR	4113905	AndExpression	"cmd [ 1 ] != '*' && ! strstr ( cmd , "")()"" )"		4113015	0		&&			
ANR	4113906	EqualityExpression	cmd [ 1 ] != '*'		4113015	0		!=			
ANR	4113907	ArrayIndexing	cmd [ 1 ]		4113015	0					
ANR	4113908	Identifier	cmd		4113015	0					
ANR	4113909	PrimaryExpression	1		4113015	1					
ANR	4113910	PrimaryExpression	'*'		4113015	1					
ANR	4113911	UnaryOperationExpression	"! strstr ( cmd , "")()"" )"		4113015	1					
ANR	4113912	UnaryOperator	!		4113015	0					
ANR	4113913	CallExpression	"strstr ( cmd , "")()"" )"		4113015	1					
ANR	4113914	Callee	strstr		4113015	0					
ANR	4113915	Identifier	strstr		4113015	0					
ANR	4113916	ArgumentList	cmd		4113015	1					
ANR	4113917	Argument	cmd		4113015	0					
ANR	4113918	Identifier	cmd		4113015	0					
ANR	4113919	Argument	""")()"""		4113015	1					
ANR	4113920	PrimaryExpression	""")()"""		4113015	0					
ANR	4113921	CompoundStatement		155:45:3083:3083	4113015	1					
ANR	4113922	ExpressionStatement	r_list_free ( tmpenvs )	2661:3:67739:67760	4113015	0	True				
ANR	4113923	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4113924	Callee	r_list_free		4113015	0					
ANR	4113925	Identifier	r_list_free		4113015	0					
ANR	4113926	ArgumentList	tmpenvs		4113015	1					
ANR	4113927	Argument	tmpenvs		4113015	0					
ANR	4113928	Identifier	tmpenvs		4113015	0					
ANR	4113929	ReturnStatement	"return r_cmd_call ( core -> rcmd , cmd ) ;"	2662:3:67765:67800	4113015	1	True				
ANR	4113930	CallExpression	"r_cmd_call ( core -> rcmd , cmd )"		4113015	0					
ANR	4113931	Callee	r_cmd_call		4113015	0					
ANR	4113932	Identifier	r_cmd_call		4113015	0					
ANR	4113933	ArgumentList	core -> rcmd		4113015	1					
ANR	4113934	Argument	core -> rcmd		4113015	0					
ANR	4113935	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4113936	Identifier	core		4113015	0					
ANR	4113937	Identifier	rcmd		4113015	1					
ANR	4113938	Argument	cmd		4113015	1					
ANR	4113939	Identifier	cmd		4113015	0					
ANR	4113940	BreakStatement	break ;	2664:2:67808:67813	4113015	9	True				
ANR	4113941	Label	case '?' :	2665:1:67816:67824	4113015	10	True				
ANR	4113942	IfStatement	if ( cmd [ 1 ] == '>' )		4113015	11					
ANR	4113943	Condition	cmd [ 1 ] == '>'	2666:6:67832:67844	4113015	0	True				
ANR	4113944	EqualityExpression	cmd [ 1 ] == '>'		4113015	0		==			
ANR	4113945	ArrayIndexing	cmd [ 1 ]		4113015	0					
ANR	4113946	Identifier	cmd		4113015	0					
ANR	4113947	PrimaryExpression	1		4113015	1					
ANR	4113948	PrimaryExpression	'>'		4113015	1					
ANR	4113949	CompoundStatement		161:21:3196:3196	4113015	1					
ANR	4113950	ExpressionStatement	"r_core_cmd_help ( core , help_msg_greater_sign )"	2667:3:67852:67897	4113015	0	True				
ANR	4113951	CallExpression	"r_core_cmd_help ( core , help_msg_greater_sign )"		4113015	0					
ANR	4113952	Callee	r_core_cmd_help		4113015	0					
ANR	4113953	Identifier	r_core_cmd_help		4113015	0					
ANR	4113954	ArgumentList	core		4113015	1					
ANR	4113955	Argument	core		4113015	0					
ANR	4113956	Identifier	core		4113015	0					
ANR	4113957	Argument	help_msg_greater_sign		4113015	1					
ANR	4113958	Identifier	help_msg_greater_sign		4113015	0					
ANR	4113959	ExpressionStatement	r_list_free ( tmpenvs )	2668:3:67902:67923	4113015	1	True				
ANR	4113960	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4113961	Callee	r_list_free		4113015	0					
ANR	4113962	Identifier	r_list_free		4113015	0					
ANR	4113963	ArgumentList	tmpenvs		4113015	1					
ANR	4113964	Argument	tmpenvs		4113015	0					
ANR	4113965	Identifier	tmpenvs		4113015	0					
ANR	4113966	ReturnStatement	return true ;	2669:3:67928:67939	4113015	2	True				
ANR	4113967	Identifier	true		4113015	0					
ANR	4113968	IfStatement	if ( * cmd != '#' )		4113015	24					
ANR	4113969	Condition	* cmd != '#'	2675:5:67991:68001	4113015	0	True				
ANR	4113970	EqualityExpression	* cmd != '#'		4113015	0		!=			
ANR	4113971	UnaryOperationExpression	* cmd		4113015	0					
ANR	4113972	UnaryOperator	*		4113015	0					
ANR	4113973	Identifier	cmd		4113015	1					
ANR	4113974	PrimaryExpression	'#'		4113015	1					
ANR	4113975	CompoundStatement		170:18:3353:3353	4113015	1					
ANR	4113976	ExpressionStatement	"ptr = ( char * ) r_str_firstbut ( cmd , '#' , ""`\\"""" )"	2676:2:68008:68054	4113015	0	True				
ANR	4113977	AssignmentExpression	"ptr = ( char * ) r_str_firstbut ( cmd , '#' , ""`\\"""" )"		4113015	0		=			
ANR	4113978	Identifier	ptr		4113015	0					
ANR	4113979	CastExpression	"( char * ) r_str_firstbut ( cmd , '#' , ""`\\"""" )"		4113015	1					
ANR	4113980	CastTarget	char *		4113015	0					
ANR	4113981	CallExpression	"r_str_firstbut ( cmd , '#' , ""`\\"""" )"		4113015	1					
ANR	4113982	Callee	r_str_firstbut		4113015	0					
ANR	4113983	Identifier	r_str_firstbut		4113015	0					
ANR	4113984	ArgumentList	cmd		4113015	1					
ANR	4113985	Argument	cmd		4113015	0					
ANR	4113986	Identifier	cmd		4113015	0					
ANR	4113987	Argument	'#'		4113015	1					
ANR	4113988	PrimaryExpression	'#'		4113015	0					
ANR	4113989	Argument	"""`\\"""""		4113015	2					
ANR	4113990	PrimaryExpression	"""`\\"""""		4113015	0					
ANR	4113991	IfStatement	if ( ptr && ( ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t' ) )		4113015	1					
ANR	4113992	Condition	ptr && ( ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t' )	2677:6:68089:68128	4113015	0	True				
ANR	4113993	AndExpression	ptr && ( ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t' )		4113015	0		&&			
ANR	4113994	Identifier	ptr		4113015	0					
ANR	4113995	OrExpression	ptr [ 1 ] == ' ' || ptr [ 1 ] == '\\t'		4113015	1		||			
ANR	4113996	EqualityExpression	ptr [ 1 ] == ' '		4113015	0		==			
ANR	4113997	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4113998	Identifier	ptr		4113015	0					
ANR	4113999	PrimaryExpression	1		4113015	1					
ANR	4114000	PrimaryExpression	' '		4113015	1					
ANR	4114001	EqualityExpression	ptr [ 1 ] == '\\t'		4113015	1		==			
ANR	4114002	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4114003	Identifier	ptr		4113015	0					
ANR	4114004	PrimaryExpression	1		4113015	1					
ANR	4114005	PrimaryExpression	'\\t'		4113015	1					
ANR	4114006	CompoundStatement		172:48:3480:3480	4113015	1					
ANR	4114007	ExpressionStatement	* ptr = '\\0'	2678:3:68136:68147	4113015	0	True				
ANR	4114008	AssignmentExpression	* ptr = '\\0'		4113015	0		=			
ANR	4114009	UnaryOperationExpression	* ptr		4113015	0					
ANR	4114010	UnaryOperator	*		4113015	0					
ANR	4114011	Identifier	ptr		4113015	1					
ANR	4114012	PrimaryExpression	'\\0'		4113015	1					
ANR	4114013	IfStatement	if ( * cmd != '#' )		4113015	25					
ANR	4114014	Condition	* cmd != '#'	2685:5:68256:68266	4113015	0	True				
ANR	4114015	EqualityExpression	* cmd != '#'		4113015	0		!=			
ANR	4114016	UnaryOperationExpression	* cmd		4113015	0					
ANR	4114017	UnaryOperator	*		4113015	0					
ANR	4114018	Identifier	cmd		4113015	1					
ANR	4114019	PrimaryExpression	'#'		4113015	1					
ANR	4114020	CompoundStatement		180:18:3618:3618	4113015	1					
ANR	4114021	ExpressionStatement	"ptr = ( char * ) r_str_lastbut ( cmd , ';' , quotestr )"	2686:2:68273:68321	4113015	0	True				
ANR	4114022	AssignmentExpression	"ptr = ( char * ) r_str_lastbut ( cmd , ';' , quotestr )"		4113015	0		=			
ANR	4114023	Identifier	ptr		4113015	0					
ANR	4114024	CastExpression	"( char * ) r_str_lastbut ( cmd , ';' , quotestr )"		4113015	1					
ANR	4114025	CastTarget	char *		4113015	0					
ANR	4114026	CallExpression	"r_str_lastbut ( cmd , ';' , quotestr )"		4113015	1					
ANR	4114027	Callee	r_str_lastbut		4113015	0					
ANR	4114028	Identifier	r_str_lastbut		4113015	0					
ANR	4114029	ArgumentList	cmd		4113015	1					
ANR	4114030	Argument	cmd		4113015	0					
ANR	4114031	Identifier	cmd		4113015	0					
ANR	4114032	Argument	';'		4113015	1					
ANR	4114033	PrimaryExpression	';'		4113015	0					
ANR	4114034	Argument	quotestr		4113015	2					
ANR	4114035	Identifier	quotestr		4113015	0					
ANR	4114036	IfStatement	if ( colon && ptr )		4113015	1					
ANR	4114037	Condition	colon && ptr	2687:6:68329:68340	4113015	0	True				
ANR	4114038	AndExpression	colon && ptr		4113015	0		&&			
ANR	4114039	Identifier	colon		4113015	0					
ANR	4114040	Identifier	ptr		4113015	1					
ANR	4114041	CompoundStatement		183:3:3697:3705	4113015	1					
ANR	4114042	IdentifierDeclStatement	int ret ;	2688:3:68348:68356	4113015	0	True				
ANR	4114043	IdentifierDecl	ret		4113015	0					
ANR	4114044	IdentifierDeclType	int		4113015	0					
ANR	4114045	Identifier	ret		4113015	1					
ANR	4114046	ExpressionStatement	* ptr = '\\0'	2689:3:68361:68372	4113015	1	True				
ANR	4114047	AssignmentExpression	* ptr = '\\0'		4113015	0		=			
ANR	4114048	UnaryOperationExpression	* ptr		4113015	0					
ANR	4114049	UnaryOperator	*		4113015	0					
ANR	4114050	Identifier	ptr		4113015	1					
ANR	4114051	PrimaryExpression	'\\0'		4113015	1					
ANR	4114052	IfStatement	"if ( r_core_cmd_subst ( core , cmd ) == - 1 )"		4113015	2					
ANR	4114053	Condition	"r_core_cmd_subst ( core , cmd ) == - 1"	2690:7:68381:68414	4113015	0	True				
ANR	4114054	EqualityExpression	"r_core_cmd_subst ( core , cmd ) == - 1"		4113015	0		==			
ANR	4114055	CallExpression	"r_core_cmd_subst ( core , cmd )"		4113015	0					
ANR	4114056	Callee	r_core_cmd_subst		4113015	0					
ANR	4114057	Identifier	r_core_cmd_subst		4113015	0					
ANR	4114058	ArgumentList	core		4113015	1					
ANR	4114059	Argument	core		4113015	0					
ANR	4114060	Identifier	core		4113015	0					
ANR	4114061	Argument	cmd		4113015	1					
ANR	4114062	Identifier	cmd		4113015	0					
ANR	4114063	UnaryOperationExpression	- 1		4113015	1					
ANR	4114064	UnaryOperator	-		4113015	0					
ANR	4114065	PrimaryExpression	1		4113015	1					
ANR	4114066	CompoundStatement		185:43:3766:3766	4113015	1					
ANR	4114067	ExpressionStatement	r_list_free ( tmpenvs )	2691:4:68423:68444	4113015	0	True				
ANR	4114068	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4114069	Callee	r_list_free		4113015	0					
ANR	4114070	Identifier	r_list_free		4113015	0					
ANR	4114071	ArgumentList	tmpenvs		4113015	1					
ANR	4114072	Argument	tmpenvs		4113015	0					
ANR	4114073	Identifier	tmpenvs		4113015	0					
ANR	4114074	ReturnStatement	return - 1 ;	2692:4:68450:68459	4113015	1	True				
ANR	4114075	UnaryOperationExpression	- 1		4113015	0					
ANR	4114076	UnaryOperator	-		4113015	0					
ANR	4114077	PrimaryExpression	1		4113015	1					
ANR	4114078	ExpressionStatement	cmd = ptr + 1	2694:3:68469:68482	4113015	3	True				
ANR	4114079	AssignmentExpression	cmd = ptr + 1		4113015	0		=			
ANR	4114080	Identifier	cmd		4113015	0					
ANR	4114081	AdditiveExpression	ptr + 1		4113015	1		+			
ANR	4114082	Identifier	ptr		4113015	0					
ANR	4114083	PrimaryExpression	1		4113015	1					
ANR	4114084	ExpressionStatement	"ret = r_core_cmd_subst ( core , cmd )"	2695:3:68487:68521	4113015	4	True				
ANR	4114085	AssignmentExpression	"ret = r_core_cmd_subst ( core , cmd )"		4113015	0		=			
ANR	4114086	Identifier	ret		4113015	0					
ANR	4114087	CallExpression	"r_core_cmd_subst ( core , cmd )"		4113015	1					
ANR	4114088	Callee	r_core_cmd_subst		4113015	0					
ANR	4114089	Identifier	r_core_cmd_subst		4113015	0					
ANR	4114090	ArgumentList	core		4113015	1					
ANR	4114091	Argument	core		4113015	0					
ANR	4114092	Identifier	core		4113015	0					
ANR	4114093	Argument	cmd		4113015	1					
ANR	4114094	Identifier	cmd		4113015	0					
ANR	4114095	ExpressionStatement	* ptr = ';'	2696:3:68526:68536	4113015	5	True				
ANR	4114096	AssignmentExpression	* ptr = ';'		4113015	0		=			
ANR	4114097	UnaryOperationExpression	* ptr		4113015	0					
ANR	4114098	UnaryOperator	*		4113015	0					
ANR	4114099	Identifier	ptr		4113015	1					
ANR	4114100	PrimaryExpression	';'		4113015	1					
ANR	4114101	ExpressionStatement	r_list_free ( tmpenvs )	2697:3:68541:68562	4113015	6	True				
ANR	4114102	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4114103	Callee	r_list_free		4113015	0					
ANR	4114104	Identifier	r_list_free		4113015	0					
ANR	4114105	ArgumentList	tmpenvs		4113015	1					
ANR	4114106	Argument	tmpenvs		4113015	0					
ANR	4114107	Identifier	tmpenvs		4113015	0					
ANR	4114108	ReturnStatement	return ret ;	2698:3:68567:68577	4113015	7	True				
ANR	4114109	Identifier	ret		4113015	0					
ANR	4114110	ExpressionStatement	"ptr = ( char * ) r_str_lastbut ( cmd , '|' , quotestr )"	2706:1:68703:68751	4113015	26	True				
ANR	4114111	AssignmentExpression	"ptr = ( char * ) r_str_lastbut ( cmd , '|' , quotestr )"		4113015	0		=			
ANR	4114112	Identifier	ptr		4113015	0					
ANR	4114113	CastExpression	"( char * ) r_str_lastbut ( cmd , '|' , quotestr )"		4113015	1					
ANR	4114114	CastTarget	char *		4113015	0					
ANR	4114115	CallExpression	"r_str_lastbut ( cmd , '|' , quotestr )"		4113015	1					
ANR	4114116	Callee	r_str_lastbut		4113015	0					
ANR	4114117	Identifier	r_str_lastbut		4113015	0					
ANR	4114118	ArgumentList	cmd		4113015	1					
ANR	4114119	Argument	cmd		4113015	0					
ANR	4114120	Identifier	cmd		4113015	0					
ANR	4114121	Argument	'|'		4113015	1					
ANR	4114122	PrimaryExpression	'|'		4113015	0					
ANR	4114123	Argument	quotestr		4113015	2					
ANR	4114124	Identifier	quotestr		4113015	0					
ANR	4114125	IfStatement	if ( ptr )		4113015	27					
ANR	4114126	Condition	ptr	2707:5:68758:68760	4113015	0	True				
ANR	4114127	Identifier	ptr		4113015	0					
ANR	4114128	CompoundStatement		210:2:4252:4282	4113015	1					
ANR	4114129	IfStatement	if ( ptr > cmd )		4113015	0					
ANR	4114130	Condition	ptr > cmd	2708:6:68771:68779	4113015	0	True				
ANR	4114131	RelationalExpression	ptr > cmd		4113015	0		>			
ANR	4114132	Identifier	ptr		4113015	0					
ANR	4114133	Identifier	cmd		4113015	1					
ANR	4114134	CompoundStatement		204:3:4136:4154	4113015	1					
ANR	4114135	IdentifierDeclStatement	char * ch = ptr - 1 ;	2709:3:68787:68805	4113015	0	True				
ANR	4114136	IdentifierDecl	* ch = ptr - 1		4113015	0					
ANR	4114137	IdentifierDeclType	char *		4113015	0					
ANR	4114138	Identifier	ch		4113015	1					
ANR	4114139	AssignmentExpression	* ch = ptr - 1		4113015	2		=			
ANR	4114140	Identifier	ch		4113015	0					
ANR	4114141	AdditiveExpression	ptr - 1		4113015	1		-			
ANR	4114142	Identifier	ptr		4113015	0					
ANR	4114143	PrimaryExpression	1		4113015	1					
ANR	4114144	IfStatement	if ( * ch == '\\\\' )		4113015	1					
ANR	4114145	Condition	* ch == '\\\\'	2710:7:68814:68824	4113015	0	True				
ANR	4114146	EqualityExpression	* ch == '\\\\'		4113015	0		==			
ANR	4114147	UnaryOperationExpression	* ch		4113015	0					
ANR	4114148	UnaryOperator	*		4113015	0					
ANR	4114149	Identifier	ch		4113015	1					
ANR	4114150	PrimaryExpression	'\\\\'		4113015	1					
ANR	4114151	CompoundStatement		205:20:4176:4176	4113015	1					
ANR	4114152	ExpressionStatement	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"	2711:4:68833:68868	4113015	0	True				
ANR	4114153	CallExpression	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"		4113015	0					
ANR	4114154	Callee	memmove		4113015	0					
ANR	4114155	Identifier	memmove		4113015	0					
ANR	4114156	ArgumentList	ch		4113015	1					
ANR	4114157	Argument	ch		4113015	0					
ANR	4114158	Identifier	ch		4113015	0					
ANR	4114159	Argument	ptr		4113015	1					
ANR	4114160	Identifier	ptr		4113015	0					
ANR	4114161	Argument	strlen ( ptr ) + 1		4113015	2					
ANR	4114162	AdditiveExpression	strlen ( ptr ) + 1		4113015	0		+			
ANR	4114163	CallExpression	strlen ( ptr )		4113015	0					
ANR	4114164	Callee	strlen		4113015	0					
ANR	4114165	Identifier	strlen		4113015	0					
ANR	4114166	ArgumentList	ptr		4113015	1					
ANR	4114167	Argument	ptr		4113015	0					
ANR	4114168	Identifier	ptr		4113015	0					
ANR	4114169	PrimaryExpression	1		4113015	1					
ANR	4114170	GotoStatement	goto escape_pipe ;	2712:4:68874:68890	4113015	1	True				
ANR	4114171	Identifier	escape_pipe		4113015	0					
ANR	4114172	IdentifierDeclStatement	"char * ptr2 = strchr ( cmd , '`' ) ;"	2715:2:68903:68933	4113015	1	True				
ANR	4114173	IdentifierDecl	"* ptr2 = strchr ( cmd , '`' )"		4113015	0					
ANR	4114174	IdentifierDeclType	char *		4113015	0					
ANR	4114175	Identifier	ptr2		4113015	1					
ANR	4114176	AssignmentExpression	"* ptr2 = strchr ( cmd , '`' )"		4113015	2		=			
ANR	4114177	Identifier	ptr2		4113015	0					
ANR	4114178	CallExpression	"strchr ( cmd , '`' )"		4113015	1					
ANR	4114179	Callee	strchr		4113015	0					
ANR	4114180	Identifier	strchr		4113015	0					
ANR	4114181	ArgumentList	cmd		4113015	1					
ANR	4114182	Argument	cmd		4113015	0					
ANR	4114183	Identifier	cmd		4113015	0					
ANR	4114184	Argument	'`'		4113015	1					
ANR	4114185	PrimaryExpression	'`'		4113015	0					
ANR	4114186	IfStatement	if ( ! ptr2 || ( ptr2 && ptr2 > ptr ) )		4113015	2					
ANR	4114187	Condition	! ptr2 || ( ptr2 && ptr2 > ptr )	2716:6:68941:68969	4113015	0	True				
ANR	4114188	OrExpression	! ptr2 || ( ptr2 && ptr2 > ptr )		4113015	0		||			
ANR	4114189	UnaryOperationExpression	! ptr2		4113015	0					
ANR	4114190	UnaryOperator	!		4113015	0					
ANR	4114191	Identifier	ptr2		4113015	1					
ANR	4114192	AndExpression	ptr2 && ptr2 > ptr		4113015	1		&&			
ANR	4114193	Identifier	ptr2		4113015	0					
ANR	4114194	RelationalExpression	ptr2 > ptr		4113015	1		>			
ANR	4114195	Identifier	ptr2		4113015	0					
ANR	4114196	Identifier	ptr		4113015	1					
ANR	4114197	CompoundStatement		211:37:4321:4321	4113015	1					
ANR	4114198	IfStatement	if ( ! tick || ( tick && tick > ptr ) )		4113015	0					
ANR	4114199	Condition	! tick || ( tick && tick > ptr )	2717:7:68981:69009	4113015	0	True				
ANR	4114200	OrExpression	! tick || ( tick && tick > ptr )		4113015	0		||			
ANR	4114201	UnaryOperationExpression	! tick		4113015	0					
ANR	4114202	UnaryOperator	!		4113015	0					
ANR	4114203	Identifier	tick		4113015	1					
ANR	4114204	AndExpression	tick && tick > ptr		4113015	1		&&			
ANR	4114205	Identifier	tick		4113015	0					
ANR	4114206	RelationalExpression	tick > ptr		4113015	1		>			
ANR	4114207	Identifier	tick		4113015	0					
ANR	4114208	Identifier	ptr		4113015	1					
ANR	4114209	CompoundStatement		212:38:4361:4361	4113015	1					
ANR	4114210	ExpressionStatement	* ptr = '\\0'	2718:4:69018:69029	4113015	0	True				
ANR	4114211	AssignmentExpression	* ptr = '\\0'		4113015	0		=			
ANR	4114212	UnaryOperationExpression	* ptr		4113015	0					
ANR	4114213	UnaryOperator	*		4113015	0					
ANR	4114214	Identifier	ptr		4113015	1					
ANR	4114215	PrimaryExpression	'\\0'		4113015	1					
ANR	4114216	ExpressionStatement	cmd = r_str_trim_nc ( cmd )	2719:4:69035:69060	4113015	1	True				
ANR	4114217	AssignmentExpression	cmd = r_str_trim_nc ( cmd )		4113015	0		=			
ANR	4114218	Identifier	cmd		4113015	0					
ANR	4114219	CallExpression	r_str_trim_nc ( cmd )		4113015	1					
ANR	4114220	Callee	r_str_trim_nc		4113015	0					
ANR	4114221	Identifier	r_str_trim_nc		4113015	0					
ANR	4114222	ArgumentList	cmd		4113015	1					
ANR	4114223	Argument	cmd		4113015	0					
ANR	4114224	Identifier	cmd		4113015	0					
ANR	4114225	IfStatement	"if ( ! strcmp ( ptr + 1 , ""?"" ) )"		4113015	2					
ANR	4114226	Condition	"! strcmp ( ptr + 1 , ""?"" )"	2720:8:69070:69091	4113015	0	True				
ANR	4114227	UnaryOperationExpression	"! strcmp ( ptr + 1 , ""?"" )"		4113015	0					
ANR	4114228	UnaryOperator	!		4113015	0					
ANR	4114229	CallExpression	"strcmp ( ptr + 1 , ""?"" )"		4113015	1					
ANR	4114230	Callee	strcmp		4113015	0					
ANR	4114231	Identifier	strcmp		4113015	0					
ANR	4114232	ArgumentList	ptr + 1		4113015	1					
ANR	4114233	Argument	ptr + 1		4113015	0					
ANR	4114234	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4114235	Identifier	ptr		4113015	0					
ANR	4114236	PrimaryExpression	1		4113015	1					
ANR	4114237	Argument	"""?"""		4113015	1					
ANR	4114238	PrimaryExpression	"""?"""		4113015	0					
ANR	4114239	CompoundStatement		215:32:4443:4443	4113015	1					
ANR	4114240	ExpressionStatement	"r_core_cmd_help ( core , help_msg_vertical_bar )"	2721:5:69109:69154	4113015	0	True				
ANR	4114241	CallExpression	"r_core_cmd_help ( core , help_msg_vertical_bar )"		4113015	0					
ANR	4114242	Callee	r_core_cmd_help		4113015	0					
ANR	4114243	Identifier	r_core_cmd_help		4113015	0					
ANR	4114244	ArgumentList	core		4113015	1					
ANR	4114245	Argument	core		4113015	0					
ANR	4114246	Identifier	core		4113015	0					
ANR	4114247	Argument	help_msg_vertical_bar		4113015	1					
ANR	4114248	Identifier	help_msg_vertical_bar		4113015	0					
ANR	4114249	ExpressionStatement	r_list_free ( tmpenvs )	2722:5:69161:69182	4113015	1	True				
ANR	4114250	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4114251	Callee	r_list_free		4113015	0					
ANR	4114252	Identifier	r_list_free		4113015	0					
ANR	4114253	ArgumentList	tmpenvs		4113015	1					
ANR	4114254	Argument	tmpenvs		4113015	0					
ANR	4114255	Identifier	tmpenvs		4113015	0					
ANR	4114256	ReturnStatement	return ret ;	2723:5:69189:69199	4113015	2	True				
ANR	4114257	Identifier	ret		4113015	0					
ANR	4114258	ElseStatement	else		4113015	0					
ANR	4114259	IfStatement	"if ( ! strncmp ( ptr + 1 , ""H"" , 1 ) )"		4113015	0					
ANR	4114260	Condition	"! strncmp ( ptr + 1 , ""H"" , 1 )"	2724:15:69216:69241	4113015	0	True				
ANR	4114261	UnaryOperationExpression	"! strncmp ( ptr + 1 , ""H"" , 1 )"		4113015	0					
ANR	4114262	UnaryOperator	!		4113015	0					
ANR	4114263	CallExpression	"strncmp ( ptr + 1 , ""H"" , 1 )"		4113015	1					
ANR	4114264	Callee	strncmp		4113015	0					
ANR	4114265	Identifier	strncmp		4113015	0					
ANR	4114266	ArgumentList	ptr + 1		4113015	1					
ANR	4114267	Argument	ptr + 1		4113015	0					
ANR	4114268	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4114269	Identifier	ptr		4113015	0					
ANR	4114270	PrimaryExpression	1		4113015	1					
ANR	4114271	Argument	"""H"""		4113015	1					
ANR	4114272	PrimaryExpression	"""H"""		4113015	0					
ANR	4114273	Argument	1		4113015	2					
ANR	4114274	PrimaryExpression	1		4113015	0					
ANR	4114275	CompoundStatement		219:43:4593:4593	4113015	1					
ANR	4114276	ExpressionStatement	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"	2725:5:69259:69311	4113015	0	True				
ANR	4114277	AssignmentExpression	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"		4113015	0		=			
ANR	4114278	Identifier	scr_html		4113015	0					
ANR	4114279	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		4113015	1					
ANR	4114280	Callee	r_config_get_i		4113015	0					
ANR	4114281	Identifier	r_config_get_i		4113015	0					
ANR	4114282	ArgumentList	core -> config		4113015	1					
ANR	4114283	Argument	core -> config		4113015	0					
ANR	4114284	PtrMemberAccess	core -> config		4113015	0					
ANR	4114285	Identifier	core		4113015	0					
ANR	4114286	Identifier	config		4113015	1					
ANR	4114287	Argument	"""scr.html"""		4113015	1					
ANR	4114288	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4114289	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , true )"	2726:5:69318:69365	4113015	1	True				
ANR	4114290	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , true )"		4113015	0					
ANR	4114291	Callee	r_config_set_i		4113015	0					
ANR	4114292	Identifier	r_config_set_i		4113015	0					
ANR	4114293	ArgumentList	core -> config		4113015	1					
ANR	4114294	Argument	core -> config		4113015	0					
ANR	4114295	PtrMemberAccess	core -> config		4113015	0					
ANR	4114296	Identifier	core		4113015	0					
ANR	4114297	Identifier	config		4113015	1					
ANR	4114298	Argument	"""scr.html"""		4113015	1					
ANR	4114299	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4114300	Argument	true		4113015	2					
ANR	4114301	Identifier	true		4113015	0					
ANR	4114302	ElseStatement	else		4113015	0					
ANR	4114303	IfStatement	"if ( ! strcmp ( ptr + 1 , ""T"" ) )"		4113015	0					
ANR	4114304	Condition	"! strcmp ( ptr + 1 , ""T"" )"	2727:15:69382:69403	4113015	0	True				
ANR	4114305	UnaryOperationExpression	"! strcmp ( ptr + 1 , ""T"" )"		4113015	0					
ANR	4114306	UnaryOperator	!		4113015	0					
ANR	4114307	CallExpression	"strcmp ( ptr + 1 , ""T"" )"		4113015	1					
ANR	4114308	Callee	strcmp		4113015	0					
ANR	4114309	Identifier	strcmp		4113015	0					
ANR	4114310	ArgumentList	ptr + 1		4113015	1					
ANR	4114311	Argument	ptr + 1		4113015	0					
ANR	4114312	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4114313	Identifier	ptr		4113015	0					
ANR	4114314	PrimaryExpression	1		4113015	1					
ANR	4114315	Argument	"""T"""		4113015	1					
ANR	4114316	PrimaryExpression	"""T"""		4113015	0					
ANR	4114317	CompoundStatement		222:39:4755:4755	4113015	1					
ANR	4114318	ExpressionStatement	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"	2728:5:69421:69475	4113015	0	True				
ANR	4114319	AssignmentExpression	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"		4113015	0		=			
ANR	4114320	Identifier	scr_color		4113015	0					
ANR	4114321	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4113015	1					
ANR	4114322	Callee	r_config_get_i		4113015	0					
ANR	4114323	Identifier	r_config_get_i		4113015	0					
ANR	4114324	ArgumentList	core -> config		4113015	1					
ANR	4114325	Argument	core -> config		4113015	0					
ANR	4114326	PtrMemberAccess	core -> config		4113015	0					
ANR	4114327	Identifier	core		4113015	0					
ANR	4114328	Identifier	config		4113015	1					
ANR	4114329	Argument	"""scr.color"""		4113015	1					
ANR	4114330	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4114331	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2729:5:69482:69545	4113015	1	True				
ANR	4114332	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		4113015	0					
ANR	4114333	Callee	r_config_set_i		4113015	0					
ANR	4114334	Identifier	r_config_set_i		4113015	0					
ANR	4114335	ArgumentList	core -> config		4113015	1					
ANR	4114336	Argument	core -> config		4113015	0					
ANR	4114337	PtrMemberAccess	core -> config		4113015	0					
ANR	4114338	Identifier	core		4113015	0					
ANR	4114339	Identifier	config		4113015	1					
ANR	4114340	Argument	"""scr.color"""		4113015	1					
ANR	4114341	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4114342	Argument	COLOR_MODE_DISABLED		4113015	2					
ANR	4114343	Identifier	COLOR_MODE_DISABLED		4113015	0					
ANR	4114344	ExpressionStatement	core -> cons -> use_tts = true	2730:5:69552:69578	4113015	2	True				
ANR	4114345	AssignmentExpression	core -> cons -> use_tts = true		4113015	0		=			
ANR	4114346	PtrMemberAccess	core -> cons -> use_tts		4113015	0					
ANR	4114347	PtrMemberAccess	core -> cons		4113015	0					
ANR	4114348	Identifier	core		4113015	0					
ANR	4114349	Identifier	cons		4113015	1					
ANR	4114350	Identifier	use_tts		4113015	1					
ANR	4114351	Identifier	true		4113015	1					
ANR	4114352	ElseStatement	else		4113015	0					
ANR	4114353	IfStatement	"if ( ! strcmp ( ptr + 1 , ""."" ) )"		4113015	0					
ANR	4114354	Condition	"! strcmp ( ptr + 1 , ""."" )"	2731:15:69595:69616	4113015	0	True				
ANR	4114355	UnaryOperationExpression	"! strcmp ( ptr + 1 , ""."" )"		4113015	0					
ANR	4114356	UnaryOperator	!		4113015	0					
ANR	4114357	CallExpression	"strcmp ( ptr + 1 , ""."" )"		4113015	1					
ANR	4114358	Callee	strcmp		4113015	0					
ANR	4114359	Identifier	strcmp		4113015	0					
ANR	4114360	ArgumentList	ptr + 1		4113015	1					
ANR	4114361	Argument	ptr + 1		4113015	0					
ANR	4114362	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4114363	Identifier	ptr		4113015	0					
ANR	4114364	PrimaryExpression	1		4113015	1					
ANR	4114365	Argument	"""."""		4113015	1					
ANR	4114366	PrimaryExpression	"""."""		4113015	0					
ANR	4114367	CompoundStatement		226:39:4968:4968	4113015	1					
ANR	4114368	ExpressionStatement	"ret = * cmd ? r_core_cmdf ( core , "".%s"" , cmd ) : 0"	2732:5:69634:69681	4113015	0	True				
ANR	4114369	AssignmentExpression	"ret = * cmd ? r_core_cmdf ( core , "".%s"" , cmd ) : 0"		4113015	0		=			
ANR	4114370	Identifier	ret		4113015	0					
ANR	4114371	ConditionalExpression	"* cmd ? r_core_cmdf ( core , "".%s"" , cmd ) : 0"		4113015	1					
ANR	4114372	Condition	* cmd		4113015	0					
ANR	4114373	UnaryOperationExpression	* cmd		4113015	0					
ANR	4114374	UnaryOperator	*		4113015	0					
ANR	4114375	Identifier	cmd		4113015	1					
ANR	4114376	CallExpression	"r_core_cmdf ( core , "".%s"" , cmd )"		4113015	1					
ANR	4114377	Callee	r_core_cmdf		4113015	0					
ANR	4114378	Identifier	r_core_cmdf		4113015	0					
ANR	4114379	ArgumentList	core		4113015	1					
ANR	4114380	Argument	core		4113015	0					
ANR	4114381	Identifier	core		4113015	0					
ANR	4114382	Argument	""".%s"""		4113015	1					
ANR	4114383	PrimaryExpression	""".%s"""		4113015	0					
ANR	4114384	Argument	cmd		4113015	2					
ANR	4114385	Identifier	cmd		4113015	0					
ANR	4114386	PrimaryExpression	0		4113015	2					
ANR	4114387	ExpressionStatement	r_list_free ( tmpenvs )	2733:5:69688:69709	4113015	1	True				
ANR	4114388	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4114389	Callee	r_list_free		4113015	0					
ANR	4114390	Identifier	r_list_free		4113015	0					
ANR	4114391	ArgumentList	tmpenvs		4113015	1					
ANR	4114392	Argument	tmpenvs		4113015	0					
ANR	4114393	Identifier	tmpenvs		4113015	0					
ANR	4114394	ReturnStatement	return ret ;	2734:5:69716:69726	4113015	2	True				
ANR	4114395	Identifier	ret		4113015	0					
ANR	4114396	ElseStatement	else		4113015	0					
ANR	4114397	IfStatement	if ( ptr [ 1 ] )		4113015	0					
ANR	4114398	Condition	ptr [ 1 ]	2735:15:69743:69748	4113015	0	True				
ANR	4114399	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4114400	Identifier	ptr		4113015	0					
ANR	4114401	PrimaryExpression	1		4113015	1					
ANR	4114402	CompoundStatement		231:5:5122:5150	4113015	1					
ANR	4114403	IdentifierDeclStatement	int value = core -> num -> value ;	2736:5:69773:69801	4113015	0	True				
ANR	4114404	IdentifierDecl	value = core -> num -> value		4113015	0					
ANR	4114405	IdentifierDeclType	int		4113015	0					
ANR	4114406	Identifier	value		4113015	1					
ANR	4114407	AssignmentExpression	value = core -> num -> value		4113015	2		=			
ANR	4114408	Identifier	value		4113015	0					
ANR	4114409	PtrMemberAccess	core -> num -> value		4113015	1					
ANR	4114410	PtrMemberAccess	core -> num		4113015	0					
ANR	4114411	Identifier	core		4113015	0					
ANR	4114412	Identifier	num		4113015	1					
ANR	4114413	Identifier	value		4113015	1					
ANR	4114414	IfStatement	if ( * cmd )		4113015	1					
ANR	4114415	Condition	* cmd	2737:9:69812:69815	4113015	0	True				
ANR	4114416	UnaryOperationExpression	* cmd		4113015	0					
ANR	4114417	UnaryOperator	*		4113015	0					
ANR	4114418	Identifier	cmd		4113015	1					
ANR	4114419	CompoundStatement		232:15:5167:5167	4113015	1					
ANR	4114420	ExpressionStatement	"r_core_cmd_pipe ( core , cmd , ptr + 1 )"	2738:6:69826:69862	4113015	0	True				
ANR	4114421	CallExpression	"r_core_cmd_pipe ( core , cmd , ptr + 1 )"		4113015	0					
ANR	4114422	Callee	r_core_cmd_pipe		4113015	0					
ANR	4114423	Identifier	r_core_cmd_pipe		4113015	0					
ANR	4114424	ArgumentList	core		4113015	1					
ANR	4114425	Argument	core		4113015	0					
ANR	4114426	Identifier	core		4113015	0					
ANR	4114427	Argument	cmd		4113015	1					
ANR	4114428	Identifier	cmd		4113015	0					
ANR	4114429	Argument	ptr + 1		4113015	2					
ANR	4114430	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4114431	Identifier	ptr		4113015	0					
ANR	4114432	PrimaryExpression	1		4113015	1					
ANR	4114433	ElseStatement	else		4113015	0					
ANR	4114434	CompoundStatement		235:6:5233:5276	4113015	0					
ANR	4114435	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , ptr + 1 ) ;"	2740:6:69884:69927	4113015	0	True				
ANR	4114436	IdentifierDecl	"* res = r_io_system ( core -> io , ptr + 1 )"		4113015	0					
ANR	4114437	IdentifierDeclType	char *		4113015	0					
ANR	4114438	Identifier	res		4113015	1					
ANR	4114439	AssignmentExpression	"* res = r_io_system ( core -> io , ptr + 1 )"		4113015	2		=			
ANR	4114440	Identifier	res		4113015	0					
ANR	4114441	CallExpression	"r_io_system ( core -> io , ptr + 1 )"		4113015	1					
ANR	4114442	Callee	r_io_system		4113015	0					
ANR	4114443	Identifier	r_io_system		4113015	0					
ANR	4114444	ArgumentList	core -> io		4113015	1					
ANR	4114445	Argument	core -> io		4113015	0					
ANR	4114446	PtrMemberAccess	core -> io		4113015	0					
ANR	4114447	Identifier	core		4113015	0					
ANR	4114448	Identifier	io		4113015	1					
ANR	4114449	Argument	ptr + 1		4113015	1					
ANR	4114450	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4114451	Identifier	ptr		4113015	0					
ANR	4114452	PrimaryExpression	1		4113015	1					
ANR	4114453	IfStatement	if ( res )		4113015	1					
ANR	4114454	Condition	res	2741:10:69939:69941	4113015	0	True				
ANR	4114455	Identifier	res		4113015	0					
ANR	4114456	CompoundStatement		236:15:5293:5293	4113015	1					
ANR	4114457	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	2742:7:69953:69980	4113015	0	True				
ANR	4114458	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		4113015	0					
ANR	4114459	Callee	r_cons_printf		4113015	0					
ANR	4114460	Identifier	r_cons_printf		4113015	0					
ANR	4114461	ArgumentList	"""%s\\n"""		4113015	1					
ANR	4114462	Argument	"""%s\\n"""		4113015	0					
ANR	4114463	PrimaryExpression	"""%s\\n"""		4113015	0					
ANR	4114464	Argument	res		4113015	1					
ANR	4114465	Identifier	res		4113015	0					
ANR	4114466	ExpressionStatement	free ( res )	2743:7:69989:69999	4113015	1	True				
ANR	4114467	CallExpression	free ( res )		4113015	0					
ANR	4114468	Callee	free		4113015	0					
ANR	4114469	Identifier	free		4113015	0					
ANR	4114470	ArgumentList	res		4113015	1					
ANR	4114471	Argument	res		4113015	0					
ANR	4114472	Identifier	res		4113015	0					
ANR	4114473	ExpressionStatement	core -> num -> value = value	2746:5:70021:70045	4113015	2	True				
ANR	4114474	AssignmentExpression	core -> num -> value = value		4113015	0		=			
ANR	4114475	PtrMemberAccess	core -> num -> value		4113015	0					
ANR	4114476	PtrMemberAccess	core -> num		4113015	0					
ANR	4114477	Identifier	core		4113015	0					
ANR	4114478	Identifier	num		4113015	1					
ANR	4114479	Identifier	value		4113015	1					
ANR	4114480	Identifier	value		4113015	1					
ANR	4114481	ExpressionStatement	r_list_free ( tmpenvs )	2747:5:70052:70073	4113015	3	True				
ANR	4114482	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4114483	Callee	r_list_free		4113015	0					
ANR	4114484	Identifier	r_list_free		4113015	0					
ANR	4114485	ArgumentList	tmpenvs		4113015	1					
ANR	4114486	Argument	tmpenvs		4113015	0					
ANR	4114487	Identifier	tmpenvs		4113015	0					
ANR	4114488	ReturnStatement	return 0 ;	2748:5:70080:70088	4113015	4	True				
ANR	4114489	PrimaryExpression	0		4113015	0					
ANR	4114490	ElseStatement	else		4113015	0					
ANR	4114491	CompoundStatement		244:11:5450:5450	4113015	0					
ANR	4114492	ExpressionStatement	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"	2750:5:70115:70167	4113015	0	True				
ANR	4114493	AssignmentExpression	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"		4113015	0		=			
ANR	4114494	Identifier	scr_html		4113015	0					
ANR	4114495	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		4113015	1					
ANR	4114496	Callee	r_config_get_i		4113015	0					
ANR	4114497	Identifier	r_config_get_i		4113015	0					
ANR	4114498	ArgumentList	core -> config		4113015	1					
ANR	4114499	Argument	core -> config		4113015	0					
ANR	4114500	PtrMemberAccess	core -> config		4113015	0					
ANR	4114501	Identifier	core		4113015	0					
ANR	4114502	Identifier	config		4113015	1					
ANR	4114503	Argument	"""scr.html"""		4113015	1					
ANR	4114504	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4114505	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"	2751:5:70174:70218	4113015	1	True				
ANR	4114506	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"		4113015	0					
ANR	4114507	Callee	r_config_set_i		4113015	0					
ANR	4114508	Identifier	r_config_set_i		4113015	0					
ANR	4114509	ArgumentList	core -> config		4113015	1					
ANR	4114510	Argument	core -> config		4113015	0					
ANR	4114511	PtrMemberAccess	core -> config		4113015	0					
ANR	4114512	Identifier	core		4113015	0					
ANR	4114513	Identifier	config		4113015	1					
ANR	4114514	Argument	"""scr.html"""		4113015	1					
ANR	4114515	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4114516	Argument	0		4113015	2					
ANR	4114517	PrimaryExpression	0		4113015	0					
ANR	4114518	ExpressionStatement	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"	2752:5:70225:70279	4113015	2	True				
ANR	4114519	AssignmentExpression	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"		4113015	0		=			
ANR	4114520	Identifier	scr_color		4113015	0					
ANR	4114521	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4113015	1					
ANR	4114522	Callee	r_config_get_i		4113015	0					
ANR	4114523	Identifier	r_config_get_i		4113015	0					
ANR	4114524	ArgumentList	core -> config		4113015	1					
ANR	4114525	Argument	core -> config		4113015	0					
ANR	4114526	PtrMemberAccess	core -> config		4113015	0					
ANR	4114527	Identifier	core		4113015	0					
ANR	4114528	Identifier	config		4113015	1					
ANR	4114529	Argument	"""scr.color"""		4113015	1					
ANR	4114530	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4114531	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2753:5:70286:70349	4113015	3	True				
ANR	4114532	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		4113015	0					
ANR	4114533	Callee	r_config_set_i		4113015	0					
ANR	4114534	Identifier	r_config_set_i		4113015	0					
ANR	4114535	ArgumentList	core -> config		4113015	1					
ANR	4114536	Argument	core -> config		4113015	0					
ANR	4114537	PtrMemberAccess	core -> config		4113015	0					
ANR	4114538	Identifier	core		4113015	0					
ANR	4114539	Identifier	config		4113015	1					
ANR	4114540	Argument	"""scr.color"""		4113015	1					
ANR	4114541	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4114542	Argument	COLOR_MODE_DISABLED		4113015	2					
ANR	4114543	Identifier	COLOR_MODE_DISABLED		4113015	0					
ANR	4114544	Label	escape_pipe :	2758:0:70369:70380	4113015	28	True				
ANR	4114545	Identifier	escape_pipe		4113015	0					
ANR	4114546	ExpressionStatement	"ptr = ( char * ) r_str_lastbut ( cmd , '&' , quotestr )"	2762:1:70435:70483	4113015	29	True				
ANR	4114547	AssignmentExpression	"ptr = ( char * ) r_str_lastbut ( cmd , '&' , quotestr )"		4113015	0		=			
ANR	4114548	Identifier	ptr		4113015	0					
ANR	4114549	CastExpression	"( char * ) r_str_lastbut ( cmd , '&' , quotestr )"		4113015	1					
ANR	4114550	CastTarget	char *		4113015	0					
ANR	4114551	CallExpression	"r_str_lastbut ( cmd , '&' , quotestr )"		4113015	1					
ANR	4114552	Callee	r_str_lastbut		4113015	0					
ANR	4114553	Identifier	r_str_lastbut		4113015	0					
ANR	4114554	ArgumentList	cmd		4113015	1					
ANR	4114555	Argument	cmd		4113015	0					
ANR	4114556	Identifier	cmd		4113015	0					
ANR	4114557	Argument	'&'		4113015	1					
ANR	4114558	PrimaryExpression	'&'		4113015	0					
ANR	4114559	Argument	quotestr		4113015	2					
ANR	4114560	Identifier	quotestr		4113015	0					
ANR	4114561	WhileStatement	while ( ptr && * ptr && ptr [ 1 ] == '&' )		4113015	30					
ANR	4114562	Condition	ptr && * ptr && ptr [ 1 ] == '&'	2764:8:70521:70548	4113015	0	True				
ANR	4114563	AndExpression	ptr && * ptr && ptr [ 1 ] == '&'		4113015	0		&&			
ANR	4114564	Identifier	ptr		4113015	0					
ANR	4114565	AndExpression	* ptr && ptr [ 1 ] == '&'		4113015	1		&&			
ANR	4114566	UnaryOperationExpression	* ptr		4113015	0					
ANR	4114567	UnaryOperator	*		4113015	0					
ANR	4114568	Identifier	ptr		4113015	1					
ANR	4114569	EqualityExpression	ptr [ 1 ] == '&'		4113015	1		==			
ANR	4114570	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4114571	Identifier	ptr		4113015	0					
ANR	4114572	PrimaryExpression	1		4113015	1					
ANR	4114573	PrimaryExpression	'&'		4113015	1					
ANR	4114574	CompoundStatement		259:38:5900:5900	4113015	1					
ANR	4114575	ExpressionStatement	* ptr = '\\0'	2765:2:70555:70566	4113015	0	True				
ANR	4114576	AssignmentExpression	* ptr = '\\0'		4113015	0		=			
ANR	4114577	UnaryOperationExpression	* ptr		4113015	0					
ANR	4114578	UnaryOperator	*		4113015	0					
ANR	4114579	Identifier	ptr		4113015	1					
ANR	4114580	PrimaryExpression	'\\0'		4113015	1					
ANR	4114581	ExpressionStatement	"ret = r_cmd_call ( core -> rcmd , cmd )"	2766:2:70570:70604	4113015	1	True				
ANR	4114582	AssignmentExpression	"ret = r_cmd_call ( core -> rcmd , cmd )"		4113015	0		=			
ANR	4114583	Identifier	ret		4113015	0					
ANR	4114584	CallExpression	"r_cmd_call ( core -> rcmd , cmd )"		4113015	1					
ANR	4114585	Callee	r_cmd_call		4113015	0					
ANR	4114586	Identifier	r_cmd_call		4113015	0					
ANR	4114587	ArgumentList	core -> rcmd		4113015	1					
ANR	4114588	Argument	core -> rcmd		4113015	0					
ANR	4114589	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4114590	Identifier	core		4113015	0					
ANR	4114591	Identifier	rcmd		4113015	1					
ANR	4114592	Argument	cmd		4113015	1					
ANR	4114593	Identifier	cmd		4113015	0					
ANR	4114594	IfStatement	if ( ret == - 1 )		4113015	2					
ANR	4114595	Condition	ret == - 1	2767:6:70612:70620	4113015	0	True				
ANR	4114596	EqualityExpression	ret == - 1		4113015	0		==			
ANR	4114597	Identifier	ret		4113015	0					
ANR	4114598	UnaryOperationExpression	- 1		4113015	1					
ANR	4114599	UnaryOperator	-		4113015	0					
ANR	4114600	PrimaryExpression	1		4113015	1					
ANR	4114601	CompoundStatement		262:17:5972:5972	4113015	1					
ANR	4114602	ExpressionStatement	"eprintf ( ""command error(%s)\\n"" , cmd )"	2768:3:70628:70664	4113015	0	True				
ANR	4114603	CallExpression	"eprintf ( ""command error(%s)\\n"" , cmd )"		4113015	0					
ANR	4114604	Callee	eprintf		4113015	0					
ANR	4114605	Identifier	eprintf		4113015	0					
ANR	4114606	ArgumentList	"""command error(%s)\\n"""		4113015	1					
ANR	4114607	Argument	"""command error(%s)\\n"""		4113015	0					
ANR	4114608	PrimaryExpression	"""command error(%s)\\n"""		4113015	0					
ANR	4114609	Argument	cmd		4113015	1					
ANR	4114610	Identifier	cmd		4113015	0					
ANR	4114611	IfStatement	if ( scr_html != - 1 )		4113015	1					
ANR	4114612	Condition	scr_html != - 1	2769:7:70673:70686	4113015	0	True				
ANR	4114613	EqualityExpression	scr_html != - 1		4113015	0		!=			
ANR	4114614	Identifier	scr_html		4113015	0					
ANR	4114615	UnaryOperationExpression	- 1		4113015	1					
ANR	4114616	UnaryOperator	-		4113015	0					
ANR	4114617	PrimaryExpression	1		4113015	1					
ANR	4114618	CompoundStatement		264:23:6038:6038	4113015	1					
ANR	4114619	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	2770:4:70695:70746	4113015	0	True				
ANR	4114620	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		4113015	0					
ANR	4114621	Callee	r_config_set_i		4113015	0					
ANR	4114622	Identifier	r_config_set_i		4113015	0					
ANR	4114623	ArgumentList	core -> config		4113015	1					
ANR	4114624	Argument	core -> config		4113015	0					
ANR	4114625	PtrMemberAccess	core -> config		4113015	0					
ANR	4114626	Identifier	core		4113015	0					
ANR	4114627	Identifier	config		4113015	1					
ANR	4114628	Argument	"""scr.html"""		4113015	1					
ANR	4114629	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4114630	Argument	scr_html		4113015	2					
ANR	4114631	Identifier	scr_html		4113015	0					
ANR	4114632	IfStatement	if ( scr_color != - 1 )		4113015	2					
ANR	4114633	Condition	scr_color != - 1	2772:7:70760:70774	4113015	0	True				
ANR	4114634	EqualityExpression	scr_color != - 1		4113015	0		!=			
ANR	4114635	Identifier	scr_color		4113015	0					
ANR	4114636	UnaryOperationExpression	- 1		4113015	1					
ANR	4114637	UnaryOperator	-		4113015	0					
ANR	4114638	PrimaryExpression	1		4113015	1					
ANR	4114639	CompoundStatement		267:24:6126:6126	4113015	1					
ANR	4114640	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	2773:4:70783:70836	4113015	0	True				
ANR	4114641	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		4113015	0					
ANR	4114642	Callee	r_config_set_i		4113015	0					
ANR	4114643	Identifier	r_config_set_i		4113015	0					
ANR	4114644	ArgumentList	core -> config		4113015	1					
ANR	4114645	Argument	core -> config		4113015	0					
ANR	4114646	PtrMemberAccess	core -> config		4113015	0					
ANR	4114647	Identifier	core		4113015	0					
ANR	4114648	Identifier	config		4113015	1					
ANR	4114649	Argument	"""scr.color"""		4113015	1					
ANR	4114650	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4114651	Argument	scr_color		4113015	2					
ANR	4114652	Identifier	scr_color		4113015	0					
ANR	4114653	ExpressionStatement	r_list_free ( tmpenvs )	2775:3:70846:70867	4113015	3	True				
ANR	4114654	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4114655	Callee	r_list_free		4113015	0					
ANR	4114656	Identifier	r_list_free		4113015	0					
ANR	4114657	ArgumentList	tmpenvs		4113015	1					
ANR	4114658	Argument	tmpenvs		4113015	0					
ANR	4114659	Identifier	tmpenvs		4113015	0					
ANR	4114660	ReturnStatement	return ret ;	2776:3:70872:70882	4113015	4	True				
ANR	4114661	Identifier	ret		4113015	0					
ANR	4114662	ForStatement	for ( cmd = ptr + 2 ; cmd && * cmd == ' ' ; cmd ++ )		4113015	3					
ANR	4114663	ForInit	cmd = ptr + 2 ;	2778:7:70895:70908	4113015	0	True				
ANR	4114664	AssignmentExpression	cmd = ptr + 2		4113015	0		=			
ANR	4114665	Identifier	cmd		4113015	0					
ANR	4114666	AdditiveExpression	ptr + 2		4113015	1		+			
ANR	4114667	Identifier	ptr		4113015	0					
ANR	4114668	PrimaryExpression	2		4113015	1					
ANR	4114669	Condition	cmd && * cmd == ' '	2778:22:70910:70927	4113015	1	True				
ANR	4114670	AndExpression	cmd && * cmd == ' '		4113015	0		&&			
ANR	4114671	Identifier	cmd		4113015	0					
ANR	4114672	EqualityExpression	* cmd == ' '		4113015	1		==			
ANR	4114673	UnaryOperationExpression	* cmd		4113015	0					
ANR	4114674	UnaryOperator	*		4113015	0					
ANR	4114675	Identifier	cmd		4113015	1					
ANR	4114676	PrimaryExpression	' '		4113015	1					
ANR	4114677	PostIncDecOperationExpression	cmd ++	2778:42:70930:70934	4113015	2	True				
ANR	4114678	Identifier	cmd		4113015	0					
ANR	4114679	IncDec	++		4113015	1					
ANR	4114680	CompoundStatement		273:49:6286:6286	4113015	3					
ANR	4114681	ExpressionStatement		2779:3:70942:70942	4113015	0	True				
ANR	4114682	ExpressionStatement	"ptr = strchr ( cmd , '&' )"	2781:2:70950:70973	4113015	4	True				
ANR	4114683	AssignmentExpression	"ptr = strchr ( cmd , '&' )"		4113015	0		=			
ANR	4114684	Identifier	ptr		4113015	0					
ANR	4114685	CallExpression	"strchr ( cmd , '&' )"		4113015	1					
ANR	4114686	Callee	strchr		4113015	0					
ANR	4114687	Identifier	strchr		4113015	0					
ANR	4114688	ArgumentList	cmd		4113015	1					
ANR	4114689	Argument	cmd		4113015	0					
ANR	4114690	Identifier	cmd		4113015	0					
ANR	4114691	Argument	'&'		4113015	1					
ANR	4114692	PrimaryExpression	'&'		4113015	0					
ANR	4114693	ExpressionStatement	R_FREE ( core -> oobi )	2785:1:71005:71024	4113015	31	True				
ANR	4114694	CallExpression	R_FREE ( core -> oobi )		4113015	0					
ANR	4114695	Callee	R_FREE		4113015	0					
ANR	4114696	Identifier	R_FREE		4113015	0					
ANR	4114697	ArgumentList	core -> oobi		4113015	1					
ANR	4114698	Argument	core -> oobi		4113015	0					
ANR	4114699	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4114700	Identifier	core		4113015	0					
ANR	4114701	Identifier	oobi		4113015	1					
ANR	4114702	ExpressionStatement	"ptr = strstr ( cmd , ""?*"" )"	2787:1:71028:71052	4113015	32	True				
ANR	4114703	AssignmentExpression	"ptr = strstr ( cmd , ""?*"" )"		4113015	0		=			
ANR	4114704	Identifier	ptr		4113015	0					
ANR	4114705	CallExpression	"strstr ( cmd , ""?*"" )"		4113015	1					
ANR	4114706	Callee	strstr		4113015	0					
ANR	4114707	Identifier	strstr		4113015	0					
ANR	4114708	ArgumentList	cmd		4113015	1					
ANR	4114709	Argument	cmd		4113015	0					
ANR	4114710	Identifier	cmd		4113015	0					
ANR	4114711	Argument	"""?*"""		4113015	1					
ANR	4114712	PrimaryExpression	"""?*"""		4113015	0					
ANR	4114713	IfStatement	if ( ptr && ( ptr == cmd || ptr [ - 1 ] != '~' ) )		4113015	33					
ANR	4114714	Condition	ptr && ( ptr == cmd || ptr [ - 1 ] != '~' )	2788:5:71059:71095	4113015	0	True				
ANR	4114715	AndExpression	ptr && ( ptr == cmd || ptr [ - 1 ] != '~' )		4113015	0		&&			
ANR	4114716	Identifier	ptr		4113015	0					
ANR	4114717	OrExpression	ptr == cmd || ptr [ - 1 ] != '~'		4113015	1		||			
ANR	4114718	EqualityExpression	ptr == cmd		4113015	0		==			
ANR	4114719	Identifier	ptr		4113015	0					
ANR	4114720	Identifier	cmd		4113015	1					
ANR	4114721	EqualityExpression	ptr [ - 1 ] != '~'		4113015	1		!=			
ANR	4114722	ArrayIndexing	ptr [ - 1 ]		4113015	0					
ANR	4114723	Identifier	ptr		4113015	0					
ANR	4114724	UnaryOperationExpression	- 1		4113015	1					
ANR	4114725	UnaryOperator	-		4113015	0					
ANR	4114726	PrimaryExpression	1		4113015	1					
ANR	4114727	PrimaryExpression	'~'		4113015	1					
ANR	4114728	CompoundStatement		283:44:6447:6447	4113015	1					
ANR	4114729	ExpressionStatement	ptr [ 0 ] = 0	2789:2:71102:71112	4113015	0	True				
ANR	4114730	AssignmentExpression	ptr [ 0 ] = 0		4113015	0		=			
ANR	4114731	ArrayIndexing	ptr [ 0 ]		4113015	0					
ANR	4114732	Identifier	ptr		4113015	0					
ANR	4114733	PrimaryExpression	0		4113015	1					
ANR	4114734	PrimaryExpression	0		4113015	1					
ANR	4114735	IfStatement	if ( * cmd != '#' )		4113015	1					
ANR	4114736	Condition	* cmd != '#'	2790:6:71120:71130	4113015	0	True				
ANR	4114737	EqualityExpression	* cmd != '#'		4113015	0		!=			
ANR	4114738	UnaryOperationExpression	* cmd		4113015	0					
ANR	4114739	UnaryOperator	*		4113015	0					
ANR	4114740	Identifier	cmd		4113015	1					
ANR	4114741	PrimaryExpression	'#'		4113015	1					
ANR	4114742	CompoundStatement		286:3:6487:6501	4113015	1					
ANR	4114743	IdentifierDeclStatement	int detail = 0 ;	2791:3:71138:71152	4113015	0	True				
ANR	4114744	IdentifierDecl	detail = 0		4113015	0					
ANR	4114745	IdentifierDeclType	int		4113015	0					
ANR	4114746	Identifier	detail		4113015	1					
ANR	4114747	AssignmentExpression	detail = 0		4113015	2		=			
ANR	4114748	Identifier	detail		4113015	0					
ANR	4114749	PrimaryExpression	0		4113015	1					
ANR	4114750	IfStatement	if ( cmd < ptr && ptr [ - 1 ] == '?' )		4113015	1					
ANR	4114751	Condition	cmd < ptr && ptr [ - 1 ] == '?'	2792:7:71161:71187	4113015	0	True				
ANR	4114752	AndExpression	cmd < ptr && ptr [ - 1 ] == '?'		4113015	0		&&			
ANR	4114753	RelationalExpression	cmd < ptr		4113015	0		<			
ANR	4114754	Identifier	cmd		4113015	0					
ANR	4114755	Identifier	ptr		4113015	1					
ANR	4114756	EqualityExpression	ptr [ - 1 ] == '?'		4113015	1		==			
ANR	4114757	ArrayIndexing	ptr [ - 1 ]		4113015	0					
ANR	4114758	Identifier	ptr		4113015	0					
ANR	4114759	UnaryOperationExpression	- 1		4113015	1					
ANR	4114760	UnaryOperator	-		4113015	0					
ANR	4114761	PrimaryExpression	1		4113015	1					
ANR	4114762	PrimaryExpression	'?'		4113015	1					
ANR	4114763	CompoundStatement		287:36:6539:6539	4113015	1					
ANR	4114764	ExpressionStatement	detail ++	2793:4:71196:71204	4113015	0	True				
ANR	4114765	PostIncDecOperationExpression	detail ++		4113015	0					
ANR	4114766	Identifier	detail		4113015	0					
ANR	4114767	IncDec	++		4113015	1					
ANR	4114768	IfStatement	if ( cmd < ptr - 1 && ptr [ - 2 ] == '?' )		4113015	1					
ANR	4114769	Condition	cmd < ptr - 1 && ptr [ - 2 ] == '?'	2794:8:71214:71244	4113015	0	True				
ANR	4114770	AndExpression	cmd < ptr - 1 && ptr [ - 2 ] == '?'		4113015	0		&&			
ANR	4114771	RelationalExpression	cmd < ptr - 1		4113015	0		<			
ANR	4114772	Identifier	cmd		4113015	0					
ANR	4114773	AdditiveExpression	ptr - 1		4113015	1		-			
ANR	4114774	Identifier	ptr		4113015	0					
ANR	4114775	PrimaryExpression	1		4113015	1					
ANR	4114776	EqualityExpression	ptr [ - 2 ] == '?'		4113015	1		==			
ANR	4114777	ArrayIndexing	ptr [ - 2 ]		4113015	0					
ANR	4114778	Identifier	ptr		4113015	0					
ANR	4114779	UnaryOperationExpression	- 2		4113015	1					
ANR	4114780	UnaryOperator	-		4113015	0					
ANR	4114781	PrimaryExpression	2		4113015	1					
ANR	4114782	PrimaryExpression	'?'		4113015	1					
ANR	4114783	CompoundStatement		289:41:6596:6596	4113015	1					
ANR	4114784	ExpressionStatement	detail ++	2795:5:71254:71262	4113015	0	True				
ANR	4114785	PostIncDecOperationExpression	detail ++		4113015	0					
ANR	4114786	Identifier	detail		4113015	0					
ANR	4114787	IncDec	++		4113015	1					
ANR	4114788	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2798:3:71278:71308	4113015	2	True				
ANR	4114789	CallExpression	"r_cons_break_push ( NULL , NULL )"		4113015	0					
ANR	4114790	Callee	r_cons_break_push		4113015	0					
ANR	4114791	Identifier	r_cons_break_push		4113015	0					
ANR	4114792	ArgumentList	NULL		4113015	1					
ANR	4114793	Argument	NULL		4113015	0					
ANR	4114794	Identifier	NULL		4113015	0					
ANR	4114795	Argument	NULL		4113015	1					
ANR	4114796	Identifier	NULL		4113015	0					
ANR	4114797	ExpressionStatement	"recursive_help ( core , detail , cmd )"	2799:3:71313:71347	4113015	3	True				
ANR	4114798	CallExpression	"recursive_help ( core , detail , cmd )"		4113015	0					
ANR	4114799	Callee	recursive_help		4113015	0					
ANR	4114800	Identifier	recursive_help		4113015	0					
ANR	4114801	ArgumentList	core		4113015	1					
ANR	4114802	Argument	core		4113015	0					
ANR	4114803	Identifier	core		4113015	0					
ANR	4114804	Argument	detail		4113015	1					
ANR	4114805	Identifier	detail		4113015	0					
ANR	4114806	Argument	cmd		4113015	2					
ANR	4114807	Identifier	cmd		4113015	0					
ANR	4114808	ExpressionStatement	r_cons_break_pop ( )	2800:3:71352:71371	4113015	4	True				
ANR	4114809	CallExpression	r_cons_break_pop ( )		4113015	0					
ANR	4114810	Callee	r_cons_break_pop		4113015	0					
ANR	4114811	Identifier	r_cons_break_pop		4113015	0					
ANR	4114812	ArgumentList			4113015	1					
ANR	4114813	ExpressionStatement	"r_cons_grep_parsecmd ( ptr + 2 , ""`"" )"	2801:3:71376:71411	4113015	5	True				
ANR	4114814	CallExpression	"r_cons_grep_parsecmd ( ptr + 2 , ""`"" )"		4113015	0					
ANR	4114815	Callee	r_cons_grep_parsecmd		4113015	0					
ANR	4114816	Identifier	r_cons_grep_parsecmd		4113015	0					
ANR	4114817	ArgumentList	ptr + 2		4113015	1					
ANR	4114818	Argument	ptr + 2		4113015	0					
ANR	4114819	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4114820	Identifier	ptr		4113015	0					
ANR	4114821	PrimaryExpression	2		4113015	1					
ANR	4114822	Argument	"""`"""		4113015	1					
ANR	4114823	PrimaryExpression	"""`"""		4113015	0					
ANR	4114824	IfStatement	if ( scr_html != - 1 )		4113015	6					
ANR	4114825	Condition	scr_html != - 1	2802:7:71420:71433	4113015	0	True				
ANR	4114826	EqualityExpression	scr_html != - 1		4113015	0		!=			
ANR	4114827	Identifier	scr_html		4113015	0					
ANR	4114828	UnaryOperationExpression	- 1		4113015	1					
ANR	4114829	UnaryOperator	-		4113015	0					
ANR	4114830	PrimaryExpression	1		4113015	1					
ANR	4114831	CompoundStatement		297:23:6785:6785	4113015	1					
ANR	4114832	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	2803:4:71442:71493	4113015	0	True				
ANR	4114833	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		4113015	0					
ANR	4114834	Callee	r_config_set_i		4113015	0					
ANR	4114835	Identifier	r_config_set_i		4113015	0					
ANR	4114836	ArgumentList	core -> config		4113015	1					
ANR	4114837	Argument	core -> config		4113015	0					
ANR	4114838	PtrMemberAccess	core -> config		4113015	0					
ANR	4114839	Identifier	core		4113015	0					
ANR	4114840	Identifier	config		4113015	1					
ANR	4114841	Argument	"""scr.html"""		4113015	1					
ANR	4114842	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4114843	Argument	scr_html		4113015	2					
ANR	4114844	Identifier	scr_html		4113015	0					
ANR	4114845	IfStatement	if ( scr_color != - 1 )		4113015	7					
ANR	4114846	Condition	scr_color != - 1	2805:7:71507:71521	4113015	0	True				
ANR	4114847	EqualityExpression	scr_color != - 1		4113015	0		!=			
ANR	4114848	Identifier	scr_color		4113015	0					
ANR	4114849	UnaryOperationExpression	- 1		4113015	1					
ANR	4114850	UnaryOperator	-		4113015	0					
ANR	4114851	PrimaryExpression	1		4113015	1					
ANR	4114852	CompoundStatement		300:24:6873:6873	4113015	1					
ANR	4114853	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	2806:4:71530:71583	4113015	0	True				
ANR	4114854	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		4113015	0					
ANR	4114855	Callee	r_config_set_i		4113015	0					
ANR	4114856	Identifier	r_config_set_i		4113015	0					
ANR	4114857	ArgumentList	core -> config		4113015	1					
ANR	4114858	Argument	core -> config		4113015	0					
ANR	4114859	PtrMemberAccess	core -> config		4113015	0					
ANR	4114860	Identifier	core		4113015	0					
ANR	4114861	Identifier	config		4113015	1					
ANR	4114862	Argument	"""scr.color"""		4113015	1					
ANR	4114863	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4114864	Argument	scr_color		4113015	2					
ANR	4114865	Identifier	scr_color		4113015	0					
ANR	4114866	ExpressionStatement	r_list_free ( tmpenvs )	2808:3:71593:71614	4113015	8	True				
ANR	4114867	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4114868	Callee	r_list_free		4113015	0					
ANR	4114869	Identifier	r_list_free		4113015	0					
ANR	4114870	ArgumentList	tmpenvs		4113015	1					
ANR	4114871	Argument	tmpenvs		4113015	0					
ANR	4114872	Identifier	tmpenvs		4113015	0					
ANR	4114873	ReturnStatement	return 0 ;	2809:3:71619:71627	4113015	9	True				
ANR	4114874	PrimaryExpression	0		4113015	0					
ANR	4114875	ExpressionStatement	"ptr = strchr ( cmd , '<' )"	2814:1:71644:71667	4113015	34	True				
ANR	4114876	AssignmentExpression	"ptr = strchr ( cmd , '<' )"		4113015	0		=			
ANR	4114877	Identifier	ptr		4113015	0					
ANR	4114878	CallExpression	"strchr ( cmd , '<' )"		4113015	1					
ANR	4114879	Callee	strchr		4113015	0					
ANR	4114880	Identifier	strchr		4113015	0					
ANR	4114881	ArgumentList	cmd		4113015	1					
ANR	4114882	Argument	cmd		4113015	0					
ANR	4114883	Identifier	cmd		4113015	0					
ANR	4114884	Argument	'<'		4113015	1					
ANR	4114885	PrimaryExpression	'<'		4113015	0					
ANR	4114886	IfStatement	if ( ptr )		4113015	35					
ANR	4114887	Condition	ptr	2815:5:71674:71676	4113015	0	True				
ANR	4114888	Identifier	ptr		4113015	0					
ANR	4114889	CompoundStatement		310:10:7028:7028	4113015	1					
ANR	4114890	ExpressionStatement	ptr [ 0 ] = '\\0'	2816:2:71683:71696	4113015	0	True				
ANR	4114891	AssignmentExpression	ptr [ 0 ] = '\\0'		4113015	0		=			
ANR	4114892	ArrayIndexing	ptr [ 0 ]		4113015	0					
ANR	4114893	Identifier	ptr		4113015	0					
ANR	4114894	PrimaryExpression	0		4113015	1					
ANR	4114895	PrimaryExpression	'\\0'		4113015	1					
ANR	4114896	IfStatement	if ( r_cons_singleton ( ) -> is_interactive )		4113015	1					
ANR	4114897	Condition	r_cons_singleton ( ) -> is_interactive	2817:6:71704:71738	4113015	0	True				
ANR	4114898	PtrMemberAccess	r_cons_singleton ( ) -> is_interactive		4113015	0					
ANR	4114899	CallExpression	r_cons_singleton ( )		4113015	0					
ANR	4114900	Callee	r_cons_singleton		4113015	0					
ANR	4114901	Identifier	r_cons_singleton		4113015	0					
ANR	4114902	ArgumentList			4113015	1					
ANR	4114903	Identifier	is_interactive		4113015	1					
ANR	4114904	CompoundStatement		312:43:7090:7090	4113015	1					
ANR	4114905	IfStatement	if ( ptr [ 1 ] == '<' )		4113015	0					
ANR	4114906	Condition	ptr [ 1 ] == '<'	2818:7:71750:71762	4113015	0	True				
ANR	4114907	EqualityExpression	ptr [ 1 ] == '<'		4113015	0		==			
ANR	4114908	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4114909	Identifier	ptr		4113015	0					
ANR	4114910	PrimaryExpression	1		4113015	1					
ANR	4114911	PrimaryExpression	'<'		4113015	1					
ANR	4114912	CompoundStatement		313:22:7114:7114	4113015	1					
ANR	4114913	ForStatement	for ( str = ptr + 2 ; str [ 0 ] == ' ' ; str ++ )		4113015	0					
ANR	4114914	ForInit	str = ptr + 2 ;	2822:9:71892:71905	4113015	0	True				
ANR	4114915	AssignmentExpression	str = ptr + 2		4113015	0		=			
ANR	4114916	Identifier	str		4113015	0					
ANR	4114917	AdditiveExpression	ptr + 2		4113015	1		+			
ANR	4114918	Identifier	ptr		4113015	0					
ANR	4114919	PrimaryExpression	2		4113015	1					
ANR	4114920	Condition	str [ 0 ] == ' '	2822:24:71907:71919	4113015	1	True				
ANR	4114921	EqualityExpression	str [ 0 ] == ' '		4113015	0		==			
ANR	4114922	ArrayIndexing	str [ 0 ]		4113015	0					
ANR	4114923	Identifier	str		4113015	0					
ANR	4114924	PrimaryExpression	0		4113015	1					
ANR	4114925	PrimaryExpression	' '		4113015	1					
ANR	4114926	PostIncDecOperationExpression	str ++	2822:39:71922:71926	4113015	2	True				
ANR	4114927	Identifier	str		4113015	0					
ANR	4114928	IncDec	++		4113015	1					
ANR	4114929	CompoundStatement		317:46:7278:7278	4113015	3					
ANR	4114930	ExpressionStatement	"eprintf ( ""==> Reading from stdin until '%s'\\n"" , str )"	2825:4:71968:72020	4113015	1	True				
ANR	4114931	CallExpression	"eprintf ( ""==> Reading from stdin until '%s'\\n"" , str )"		4113015	0					
ANR	4114932	Callee	eprintf		4113015	0					
ANR	4114933	Identifier	eprintf		4113015	0					
ANR	4114934	ArgumentList	"""==> Reading from stdin until '%s'\\n"""		4113015	1					
ANR	4114935	Argument	"""==> Reading from stdin until '%s'\\n"""		4113015	0					
ANR	4114936	PrimaryExpression	"""==> Reading from stdin until '%s'\\n"""		4113015	0					
ANR	4114937	Argument	str		4113015	1					
ANR	4114938	Identifier	str		4113015	0					
ANR	4114939	ExpressionStatement	free ( core -> oobi )	2826:4:72026:72043	4113015	2	True				
ANR	4114940	CallExpression	free ( core -> oobi )		4113015	0					
ANR	4114941	Callee	free		4113015	0					
ANR	4114942	Identifier	free		4113015	0					
ANR	4114943	ArgumentList	core -> oobi		4113015	1					
ANR	4114944	Argument	core -> oobi		4113015	0					
ANR	4114945	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4114946	Identifier	core		4113015	0					
ANR	4114947	Identifier	oobi		4113015	1					
ANR	4114948	ExpressionStatement	core -> oobi = malloc ( 1 )	2827:4:72049:72072	4113015	3	True				
ANR	4114949	AssignmentExpression	core -> oobi = malloc ( 1 )		4113015	0		=			
ANR	4114950	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4114951	Identifier	core		4113015	0					
ANR	4114952	Identifier	oobi		4113015	1					
ANR	4114953	CallExpression	malloc ( 1 )		4113015	1					
ANR	4114954	Callee	malloc		4113015	0					
ANR	4114955	Identifier	malloc		4113015	0					
ANR	4114956	ArgumentList	1		4113015	1					
ANR	4114957	Argument	1		4113015	0					
ANR	4114958	PrimaryExpression	1		4113015	0					
ANR	4114959	IfStatement	if ( core -> oobi )		4113015	4					
ANR	4114960	Condition	core -> oobi	2828:8:72082:72091	4113015	0	True				
ANR	4114961	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4114962	Identifier	core		4113015	0					
ANR	4114963	Identifier	oobi		4113015	1					
ANR	4114964	CompoundStatement		323:20:7443:7443	4113015	1					
ANR	4114965	ExpressionStatement	core -> oobi [ 0 ] = '\\0'	2829:5:72101:72121	4113015	0	True				
ANR	4114966	AssignmentExpression	core -> oobi [ 0 ] = '\\0'		4113015	0		=			
ANR	4114967	ArrayIndexing	core -> oobi [ 0 ]		4113015	0					
ANR	4114968	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4114969	Identifier	core		4113015	0					
ANR	4114970	Identifier	oobi		4113015	1					
ANR	4114971	PrimaryExpression	0		4113015	1					
ANR	4114972	PrimaryExpression	'\\0'		4113015	1					
ANR	4114973	ExpressionStatement	core -> oobi_len = 0	2831:4:72133:72151	4113015	5	True				
ANR	4114974	AssignmentExpression	core -> oobi_len = 0		4113015	0		=			
ANR	4114975	PtrMemberAccess	core -> oobi_len		4113015	0					
ANR	4114976	Identifier	core		4113015	0					
ANR	4114977	Identifier	oobi_len		4113015	1					
ANR	4114978	PrimaryExpression	0		4113015	1					
ANR	4114979	ForStatement	for ( ; ; )		4113015	6					
ANR	4114980	CompoundStatement		329:5:7543:7550	4113015	0					
ANR	4114981	IdentifierDeclStatement	char buf [ 1024 ] ;	2833:5:72173:72187	4113015	0	True				
ANR	4114982	IdentifierDecl	buf [ 1024 ]		4113015	0					
ANR	4114983	IdentifierDeclType	char [ 1024 ]		4113015	0					
ANR	4114984	Identifier	buf		4113015	1					
ANR	4114985	PrimaryExpression	1024		4113015	2					
ANR	4114986	IdentifierDeclStatement	int ret ;	2834:5:72194:72201	4113015	1	True				
ANR	4114987	IdentifierDecl	ret		4113015	0					
ANR	4114988	IdentifierDeclType	int		4113015	0					
ANR	4114989	Identifier	ret		4113015	1					
ANR	4114990	ExpressionStatement	"write ( 1 , ""> "" , 2 )"	2835:5:72208:72226	4113015	2	True				
ANR	4114991	CallExpression	"write ( 1 , ""> "" , 2 )"		4113015	0					
ANR	4114992	Callee	write		4113015	0					
ANR	4114993	Identifier	write		4113015	0					
ANR	4114994	ArgumentList	1		4113015	1					
ANR	4114995	Argument	1		4113015	0					
ANR	4114996	PrimaryExpression	1		4113015	0					
ANR	4114997	Argument	"""> """		4113015	1					
ANR	4114998	PrimaryExpression	"""> """		4113015	0					
ANR	4114999	Argument	2		4113015	2					
ANR	4115000	PrimaryExpression	2		4113015	0					
ANR	4115001	ExpressionStatement	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"	2836:5:72233:72269	4113015	3	True				
ANR	4115002	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"		4113015	0					
ANR	4115003	Callee	fgets		4113015	0					
ANR	4115004	Identifier	fgets		4113015	0					
ANR	4115005	ArgumentList	buf		4113015	1					
ANR	4115006	Argument	buf		4113015	0					
ANR	4115007	Identifier	buf		4113015	0					
ANR	4115008	Argument	sizeof ( buf ) - 1		4113015	1					
ANR	4115009	AdditiveExpression	sizeof ( buf ) - 1		4113015	0		-			
ANR	4115010	SizeofExpression	sizeof ( buf )		4113015	0					
ANR	4115011	Sizeof	sizeof		4113015	0					
ANR	4115012	SizeofOperand	buf		4113015	1					
ANR	4115013	PrimaryExpression	1		4113015	1					
ANR	4115014	Argument	stdin		4113015	2					
ANR	4115015	Identifier	stdin		4113015	0					
ANR	4115016	IfStatement	if ( feof ( stdin ) )		4113015	4					
ANR	4115017	Condition	feof ( stdin )	2837:9:72301:72312	4113015	0	True				
ANR	4115018	CallExpression	feof ( stdin )		4113015	0					
ANR	4115019	Callee	feof		4113015	0					
ANR	4115020	Identifier	feof		4113015	0					
ANR	4115021	ArgumentList	stdin		4113015	1					
ANR	4115022	Argument	stdin		4113015	0					
ANR	4115023	Identifier	stdin		4113015	0					
ANR	4115024	CompoundStatement		332:23:7664:7664	4113015	1					
ANR	4115025	BreakStatement	break ;	2838:6:72323:72328	4113015	0	True				
ANR	4115026	IfStatement	if ( * buf )		4113015	5					
ANR	4115027	Condition	* buf	2840:9:72346:72349	4113015	0	True				
ANR	4115028	UnaryOperationExpression	* buf		4113015	0					
ANR	4115029	UnaryOperator	*		4113015	0					
ANR	4115030	Identifier	buf		4113015	1					
ANR	4115031	ExpressionStatement	buf [ strlen ( buf ) - 1 ] = '\\0'	2840:15:72352:72378	4113015	1	True				
ANR	4115032	AssignmentExpression	buf [ strlen ( buf ) - 1 ] = '\\0'		4113015	0		=			
ANR	4115033	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		4113015	0					
ANR	4115034	Identifier	buf		4113015	0					
ANR	4115035	AdditiveExpression	strlen ( buf ) - 1		4113015	1		-			
ANR	4115036	CallExpression	strlen ( buf )		4113015	0					
ANR	4115037	Callee	strlen		4113015	0					
ANR	4115038	Identifier	strlen		4113015	0					
ANR	4115039	ArgumentList	buf		4113015	1					
ANR	4115040	Argument	buf		4113015	0					
ANR	4115041	Identifier	buf		4113015	0					
ANR	4115042	PrimaryExpression	1		4113015	1					
ANR	4115043	PrimaryExpression	'\\0'		4113015	1					
ANR	4115044	ExpressionStatement	ret = strlen ( buf )	2841:5:72385:72403	4113015	6	True				
ANR	4115045	AssignmentExpression	ret = strlen ( buf )		4113015	0		=			
ANR	4115046	Identifier	ret		4113015	0					
ANR	4115047	CallExpression	strlen ( buf )		4113015	1					
ANR	4115048	Callee	strlen		4113015	0					
ANR	4115049	Identifier	strlen		4113015	0					
ANR	4115050	ArgumentList	buf		4113015	1					
ANR	4115051	Argument	buf		4113015	0					
ANR	4115052	Identifier	buf		4113015	0					
ANR	4115053	ExpressionStatement	core -> oobi_len += ret	2842:5:72410:72431	4113015	7	True				
ANR	4115054	AssignmentExpression	core -> oobi_len += ret		4113015	0		+=			
ANR	4115055	PtrMemberAccess	core -> oobi_len		4113015	0					
ANR	4115056	Identifier	core		4113015	0					
ANR	4115057	Identifier	oobi_len		4113015	1					
ANR	4115058	Identifier	ret		4113015	1					
ANR	4115059	ExpressionStatement	"core -> oobi = realloc ( core -> oobi , core -> oobi_len + 1 )"	2843:5:72438:72491	4113015	8	True				
ANR	4115060	AssignmentExpression	"core -> oobi = realloc ( core -> oobi , core -> oobi_len + 1 )"		4113015	0		=			
ANR	4115061	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4115062	Identifier	core		4113015	0					
ANR	4115063	Identifier	oobi		4113015	1					
ANR	4115064	CallExpression	"realloc ( core -> oobi , core -> oobi_len + 1 )"		4113015	1					
ANR	4115065	Callee	realloc		4113015	0					
ANR	4115066	Identifier	realloc		4113015	0					
ANR	4115067	ArgumentList	core -> oobi		4113015	1					
ANR	4115068	Argument	core -> oobi		4113015	0					
ANR	4115069	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4115070	Identifier	core		4113015	0					
ANR	4115071	Identifier	oobi		4113015	1					
ANR	4115072	Argument	core -> oobi_len + 1		4113015	1					
ANR	4115073	AdditiveExpression	core -> oobi_len + 1		4113015	0		+			
ANR	4115074	PtrMemberAccess	core -> oobi_len		4113015	0					
ANR	4115075	Identifier	core		4113015	0					
ANR	4115076	Identifier	oobi_len		4113015	1					
ANR	4115077	PrimaryExpression	1		4113015	1					
ANR	4115078	IfStatement	if ( core -> oobi )		4113015	9					
ANR	4115079	Condition	core -> oobi	2844:9:72502:72511	4113015	0	True				
ANR	4115080	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4115081	Identifier	core		4113015	0					
ANR	4115082	Identifier	oobi		4113015	1					
ANR	4115083	CompoundStatement		339:21:7863:7863	4113015	1					
ANR	4115084	IfStatement	"if ( ! strcmp ( buf , str ) )"		4113015	0					
ANR	4115085	Condition	"! strcmp ( buf , str )"	2845:10:72526:72543	4113015	0	True				
ANR	4115086	UnaryOperationExpression	"! strcmp ( buf , str )"		4113015	0					
ANR	4115087	UnaryOperator	!		4113015	0					
ANR	4115088	CallExpression	"strcmp ( buf , str )"		4113015	1					
ANR	4115089	Callee	strcmp		4113015	0					
ANR	4115090	Identifier	strcmp		4113015	0					
ANR	4115091	ArgumentList	buf		4113015	1					
ANR	4115092	Argument	buf		4113015	0					
ANR	4115093	Identifier	buf		4113015	0					
ANR	4115094	Argument	str		4113015	1					
ANR	4115095	Identifier	str		4113015	0					
ANR	4115096	CompoundStatement		340:30:7895:7895	4113015	1					
ANR	4115097	BreakStatement	break ;	2846:7:72555:72560	4113015	0	True				
ANR	4115098	ExpressionStatement	"strcat ( ( char * ) core -> oobi , buf )"	2848:6:72576:72608	4113015	1	True				
ANR	4115099	CallExpression	"strcat ( ( char * ) core -> oobi , buf )"		4113015	0					
ANR	4115100	Callee	strcat		4113015	0					
ANR	4115101	Identifier	strcat		4113015	0					
ANR	4115102	ArgumentList	( char * ) core -> oobi		4113015	1					
ANR	4115103	Argument	( char * ) core -> oobi		4113015	0					
ANR	4115104	CastExpression	( char * ) core -> oobi		4113015	0					
ANR	4115105	CastTarget	char *		4113015	0					
ANR	4115106	PtrMemberAccess	core -> oobi		4113015	1					
ANR	4115107	Identifier	core		4113015	0					
ANR	4115108	Identifier	oobi		4113015	1					
ANR	4115109	Argument	buf		4113015	1					
ANR	4115110	Identifier	buf		4113015	0					
ANR	4115111	ElseStatement	else		4113015	0					
ANR	4115112	CompoundStatement		347:10:8017:8017	4113015	0					
ANR	4115113	ForStatement	for ( str = ptr + 1 ; * str == ' ' ; str ++ )		4113015	0					
ANR	4115114	ForInit	str = ptr + 1 ;	2853:9:72679:72692	4113015	0	True				
ANR	4115115	AssignmentExpression	str = ptr + 1		4113015	0		=			
ANR	4115116	Identifier	str		4113015	0					
ANR	4115117	AdditiveExpression	ptr + 1		4113015	1		+			
ANR	4115118	Identifier	ptr		4113015	0					
ANR	4115119	PrimaryExpression	1		4113015	1					
ANR	4115120	Condition	* str == ' '	2853:24:72694:72704	4113015	1	True				
ANR	4115121	EqualityExpression	* str == ' '		4113015	0		==			
ANR	4115122	UnaryOperationExpression	* str		4113015	0					
ANR	4115123	UnaryOperator	*		4113015	0					
ANR	4115124	Identifier	str		4113015	1					
ANR	4115125	PrimaryExpression	' '		4113015	1					
ANR	4115126	PostIncDecOperationExpression	str ++	2853:37:72707:72711	4113015	2	True				
ANR	4115127	Identifier	str		4113015	0					
ANR	4115128	IncDec	++		4113015	1					
ANR	4115129	CompoundStatement		348:44:8063:8063	4113015	3					
ANR	4115130	IfStatement	if ( ! * str )		4113015	1					
ANR	4115131	Condition	! * str	2856:8:72757:72761	4113015	0	True				
ANR	4115132	UnaryOperationExpression	! * str		4113015	0					
ANR	4115133	UnaryOperator	!		4113015	0					
ANR	4115134	UnaryOperationExpression	* str		4113015	1					
ANR	4115135	UnaryOperator	*		4113015	0					
ANR	4115136	Identifier	str		4113015	1					
ANR	4115137	CompoundStatement		351:15:8113:8113	4113015	1					
ANR	4115138	GotoStatement	goto next ;	2857:5:72771:72780	4113015	0	True				
ANR	4115139	Identifier	next		4113015	0					
ANR	4115140	ExpressionStatement	"eprintf ( ""Slurping file '%s'\\n"" , str )"	2859:4:72792:72829	4113015	2	True				
ANR	4115141	CallExpression	"eprintf ( ""Slurping file '%s'\\n"" , str )"		4113015	0					
ANR	4115142	Callee	eprintf		4113015	0					
ANR	4115143	Identifier	eprintf		4113015	0					
ANR	4115144	ArgumentList	"""Slurping file '%s'\\n"""		4113015	1					
ANR	4115145	Argument	"""Slurping file '%s'\\n"""		4113015	0					
ANR	4115146	PrimaryExpression	"""Slurping file '%s'\\n"""		4113015	0					
ANR	4115147	Argument	str		4113015	1					
ANR	4115148	Identifier	str		4113015	0					
ANR	4115149	ExpressionStatement	free ( core -> oobi )	2860:4:72835:72852	4113015	3	True				
ANR	4115150	CallExpression	free ( core -> oobi )		4113015	0					
ANR	4115151	Callee	free		4113015	0					
ANR	4115152	Identifier	free		4113015	0					
ANR	4115153	ArgumentList	core -> oobi		4113015	1					
ANR	4115154	Argument	core -> oobi		4113015	0					
ANR	4115155	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4115156	Identifier	core		4113015	0					
ANR	4115157	Identifier	oobi		4113015	1					
ANR	4115158	ExpressionStatement	"core -> oobi = ( ut8 * ) r_file_slurp ( str , & core -> oobi_len )"	2861:4:72858:72912	4113015	4	True				
ANR	4115159	AssignmentExpression	"core -> oobi = ( ut8 * ) r_file_slurp ( str , & core -> oobi_len )"		4113015	0		=			
ANR	4115160	PtrMemberAccess	core -> oobi		4113015	0					
ANR	4115161	Identifier	core		4113015	0					
ANR	4115162	Identifier	oobi		4113015	1					
ANR	4115163	CastExpression	"( ut8 * ) r_file_slurp ( str , & core -> oobi_len )"		4113015	1					
ANR	4115164	CastTarget	ut8 *		4113015	0					
ANR	4115165	CallExpression	"r_file_slurp ( str , & core -> oobi_len )"		4113015	1					
ANR	4115166	Callee	r_file_slurp		4113015	0					
ANR	4115167	Identifier	r_file_slurp		4113015	0					
ANR	4115168	ArgumentList	str		4113015	1					
ANR	4115169	Argument	str		4113015	0					
ANR	4115170	Identifier	str		4113015	0					
ANR	4115171	Argument	& core -> oobi_len		4113015	1					
ANR	4115172	UnaryOperationExpression	& core -> oobi_len		4113015	0					
ANR	4115173	UnaryOperator	&		4113015	0					
ANR	4115174	PtrMemberAccess	core -> oobi_len		4113015	1					
ANR	4115175	Identifier	core		4113015	0					
ANR	4115176	Identifier	oobi_len		4113015	1					
ANR	4115177	IfStatement	if ( ! core -> oobi )		4113015	5					
ANR	4115178	Condition	! core -> oobi	2862:8:72922:72932	4113015	0	True				
ANR	4115179	UnaryOperationExpression	! core -> oobi		4113015	0					
ANR	4115180	UnaryOperator	!		4113015	0					
ANR	4115181	PtrMemberAccess	core -> oobi		4113015	1					
ANR	4115182	Identifier	core		4113015	0					
ANR	4115183	Identifier	oobi		4113015	1					
ANR	4115184	CompoundStatement		357:21:8284:8284	4113015	1					
ANR	4115185	ExpressionStatement	"eprintf ( ""cannot open file\\n"" )"	2863:5:72942:72972	4113015	0	True				
ANR	4115186	CallExpression	"eprintf ( ""cannot open file\\n"" )"		4113015	0					
ANR	4115187	Callee	eprintf		4113015	0					
ANR	4115188	Identifier	eprintf		4113015	0					
ANR	4115189	ArgumentList	"""cannot open file\\n"""		4113015	1					
ANR	4115190	Argument	"""cannot open file\\n"""		4113015	0					
ANR	4115191	PrimaryExpression	"""cannot open file\\n"""		4113015	0					
ANR	4115192	ElseStatement	else		4113015	0					
ANR	4115193	IfStatement	if ( ptr == cmd )		4113015	0					
ANR	4115194	Condition	ptr == cmd	2864:15:72989:72998	4113015	0	True				
ANR	4115195	EqualityExpression	ptr == cmd		4113015	0		==			
ANR	4115196	Identifier	ptr		4113015	0					
ANR	4115197	Identifier	cmd		4113015	1					
ANR	4115198	CompoundStatement		359:27:8350:8350	4113015	1					
ANR	4115199	ReturnStatement	"return r_core_cmd_buffer ( core , ( const char * ) core -> oobi ) ;"	2865:5:73008:73065	4113015	0	True				
ANR	4115200	CallExpression	"r_core_cmd_buffer ( core , ( const char * ) core -> oobi )"		4113015	0					
ANR	4115201	Callee	r_core_cmd_buffer		4113015	0					
ANR	4115202	Identifier	r_core_cmd_buffer		4113015	0					
ANR	4115203	ArgumentList	core		4113015	1					
ANR	4115204	Argument	core		4113015	0					
ANR	4115205	Identifier	core		4113015	0					
ANR	4115206	Argument	( const char * ) core -> oobi		4113015	1					
ANR	4115207	CastExpression	( const char * ) core -> oobi		4113015	0					
ANR	4115208	CastTarget	const char *		4113015	0					
ANR	4115209	PtrMemberAccess	core -> oobi		4113015	1					
ANR	4115210	Identifier	core		4113015	0					
ANR	4115211	Identifier	oobi		4113015	1					
ANR	4115212	ElseStatement	else		4113015	0					
ANR	4115213	CompoundStatement		363:9:8436:8436	4113015	0					
ANR	4115214	ExpressionStatement	"eprintf ( ""Cannot slurp with << in non-interactive mode\\n"" )"	2869:3:73092:73150	4113015	0	True				
ANR	4115215	CallExpression	"eprintf ( ""Cannot slurp with << in non-interactive mode\\n"" )"		4113015	0					
ANR	4115216	Callee	eprintf		4113015	0					
ANR	4115217	Identifier	eprintf		4113015	0					
ANR	4115218	ArgumentList	"""Cannot slurp with << in non-interactive mode\\n"""		4113015	1					
ANR	4115219	Argument	"""Cannot slurp with << in non-interactive mode\\n"""		4113015	0					
ANR	4115220	PrimaryExpression	"""Cannot slurp with << in non-interactive mode\\n"""		4113015	0					
ANR	4115221	ExpressionStatement	r_list_free ( tmpenvs )	2870:3:73155:73176	4113015	1	True				
ANR	4115222	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4115223	Callee	r_list_free		4113015	0					
ANR	4115224	Identifier	r_list_free		4113015	0					
ANR	4115225	ArgumentList	tmpenvs		4113015	1					
ANR	4115226	Argument	tmpenvs		4113015	0					
ANR	4115227	Identifier	tmpenvs		4113015	0					
ANR	4115228	ReturnStatement	return 0 ;	2871:3:73181:73189	4113015	2	True				
ANR	4115229	PrimaryExpression	0		4113015	0					
ANR	4115230	Label	next :	2874:0:73198:73202	4113015	36	True				
ANR	4115231	Identifier	next		4113015	0					
ANR	4115232	ExpressionStatement	"ptr = ( char * ) r_str_firstbut ( cmd , '>' , ""\\"""" )"	2877:1:73240:73285	4113015	37	True				
ANR	4115233	AssignmentExpression	"ptr = ( char * ) r_str_firstbut ( cmd , '>' , ""\\"""" )"		4113015	0		=			
ANR	4115234	Identifier	ptr		4113015	0					
ANR	4115235	CastExpression	"( char * ) r_str_firstbut ( cmd , '>' , ""\\"""" )"		4113015	1					
ANR	4115236	CastTarget	char *		4113015	0					
ANR	4115237	CallExpression	"r_str_firstbut ( cmd , '>' , ""\\"""" )"		4113015	1					
ANR	4115238	Callee	r_str_firstbut		4113015	0					
ANR	4115239	Identifier	r_str_firstbut		4113015	0					
ANR	4115240	ArgumentList	cmd		4113015	1					
ANR	4115241	Argument	cmd		4113015	0					
ANR	4115242	Identifier	cmd		4113015	0					
ANR	4115243	Argument	'>'		4113015	1					
ANR	4115244	PrimaryExpression	'>'		4113015	0					
ANR	4115245	Argument	"""\\"""""		4113015	2					
ANR	4115246	PrimaryExpression	"""\\"""""		4113015	0					
ANR	4115247	IfStatement	if ( ptr )		4113015	38					
ANR	4115248	Condition	ptr	2879:5:73309:73311	4113015	0	True				
ANR	4115249	Identifier	ptr		4113015	0					
ANR	4115250	CompoundStatement		420:2:9972:10013	4113015	1					
ANR	4115251	IfStatement	if ( ptr > cmd )		4113015	0					
ANR	4115252	Condition	ptr > cmd	2880:6:73322:73330	4113015	0	True				
ANR	4115253	RelationalExpression	ptr > cmd		4113015	0		>			
ANR	4115254	Identifier	ptr		4113015	0					
ANR	4115255	Identifier	cmd		4113015	1					
ANR	4115256	CompoundStatement		376:3:8687:8705	4113015	1					
ANR	4115257	IdentifierDeclStatement	char * ch = ptr - 1 ;	2881:3:73338:73356	4113015	0	True				
ANR	4115258	IdentifierDecl	* ch = ptr - 1		4113015	0					
ANR	4115259	IdentifierDeclType	char *		4113015	0					
ANR	4115260	Identifier	ch		4113015	1					
ANR	4115261	AssignmentExpression	* ch = ptr - 1		4113015	2		=			
ANR	4115262	Identifier	ch		4113015	0					
ANR	4115263	AdditiveExpression	ptr - 1		4113015	1		-			
ANR	4115264	Identifier	ptr		4113015	0					
ANR	4115265	PrimaryExpression	1		4113015	1					
ANR	4115266	IfStatement	if ( * ch == '\\\\' )		4113015	1					
ANR	4115267	Condition	* ch == '\\\\'	2882:7:73365:73375	4113015	0	True				
ANR	4115268	EqualityExpression	* ch == '\\\\'		4113015	0		==			
ANR	4115269	UnaryOperationExpression	* ch		4113015	0					
ANR	4115270	UnaryOperator	*		4113015	0					
ANR	4115271	Identifier	ch		4113015	1					
ANR	4115272	PrimaryExpression	'\\\\'		4113015	1					
ANR	4115273	CompoundStatement		377:20:8727:8727	4113015	1					
ANR	4115274	ExpressionStatement	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"	2883:4:73384:73419	4113015	0	True				
ANR	4115275	CallExpression	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"		4113015	0					
ANR	4115276	Callee	memmove		4113015	0					
ANR	4115277	Identifier	memmove		4113015	0					
ANR	4115278	ArgumentList	ch		4113015	1					
ANR	4115279	Argument	ch		4113015	0					
ANR	4115280	Identifier	ch		4113015	0					
ANR	4115281	Argument	ptr		4113015	1					
ANR	4115282	Identifier	ptr		4113015	0					
ANR	4115283	Argument	strlen ( ptr ) + 1		4113015	2					
ANR	4115284	AdditiveExpression	strlen ( ptr ) + 1		4113015	0		+			
ANR	4115285	CallExpression	strlen ( ptr )		4113015	0					
ANR	4115286	Callee	strlen		4113015	0					
ANR	4115287	Identifier	strlen		4113015	0					
ANR	4115288	ArgumentList	ptr		4113015	1					
ANR	4115289	Argument	ptr		4113015	0					
ANR	4115290	Identifier	ptr		4113015	0					
ANR	4115291	PrimaryExpression	1		4113015	1					
ANR	4115292	GotoStatement	goto escape_redir ;	2884:4:73425:73442	4113015	1	True				
ANR	4115293	Identifier	escape_redir		4113015	0					
ANR	4115294	IfStatement	if ( ptr [ 0 ] && ptr [ 1 ] == '?' )		4113015	1					
ANR	4115295	Condition	ptr [ 0 ] && ptr [ 1 ] == '?'	2887:6:73459:73481	4113015	0	True				
ANR	4115296	AndExpression	ptr [ 0 ] && ptr [ 1 ] == '?'		4113015	0		&&			
ANR	4115297	ArrayIndexing	ptr [ 0 ]		4113015	0					
ANR	4115298	Identifier	ptr		4113015	0					
ANR	4115299	PrimaryExpression	0		4113015	1					
ANR	4115300	EqualityExpression	ptr [ 1 ] == '?'		4113015	1		==			
ANR	4115301	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4115302	Identifier	ptr		4113015	0					
ANR	4115303	PrimaryExpression	1		4113015	1					
ANR	4115304	PrimaryExpression	'?'		4113015	1					
ANR	4115305	CompoundStatement		382:31:8833:8833	4113015	1					
ANR	4115306	ExpressionStatement	"r_core_cmd_help ( core , help_msg_greater_sign )"	2888:3:73489:73534	4113015	0	True				
ANR	4115307	CallExpression	"r_core_cmd_help ( core , help_msg_greater_sign )"		4113015	0					
ANR	4115308	Callee	r_core_cmd_help		4113015	0					
ANR	4115309	Identifier	r_core_cmd_help		4113015	0					
ANR	4115310	ArgumentList	core		4113015	1					
ANR	4115311	Argument	core		4113015	0					
ANR	4115312	Identifier	core		4113015	0					
ANR	4115313	Argument	help_msg_greater_sign		4113015	1					
ANR	4115314	Identifier	help_msg_greater_sign		4113015	0					
ANR	4115315	ExpressionStatement	r_list_free ( tmpenvs )	2889:3:73539:73560	4113015	1	True				
ANR	4115316	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4115317	Callee	r_list_free		4113015	0					
ANR	4115318	Identifier	r_list_free		4113015	0					
ANR	4115319	ArgumentList	tmpenvs		4113015	1					
ANR	4115320	Argument	tmpenvs		4113015	0					
ANR	4115321	Identifier	tmpenvs		4113015	0					
ANR	4115322	ReturnStatement	return true ;	2890:3:73565:73576	4113015	2	True				
ANR	4115323	Identifier	true		4113015	0					
ANR	4115324	IdentifierDeclStatement	int fdn = 1 ;	2892:2:73584:73595	4113015	2	True				
ANR	4115325	IdentifierDecl	fdn = 1		4113015	0					
ANR	4115326	IdentifierDeclType	int		4113015	0					
ANR	4115327	Identifier	fdn		4113015	1					
ANR	4115328	AssignmentExpression	fdn = 1		4113015	2		=			
ANR	4115329	Identifier	fdn		4113015	0					
ANR	4115330	PrimaryExpression	1		4113015	1					
ANR	4115331	IdentifierDeclStatement	"int pipecolor = r_config_get_i ( core -> config , ""scr.color.pipe"" ) ;"	2893:2:73599:73662	4113015	3	True				
ANR	4115332	IdentifierDecl	"pipecolor = r_config_get_i ( core -> config , ""scr.color.pipe"" )"		4113015	0					
ANR	4115333	IdentifierDeclType	int		4113015	0					
ANR	4115334	Identifier	pipecolor		4113015	1					
ANR	4115335	AssignmentExpression	"pipecolor = r_config_get_i ( core -> config , ""scr.color.pipe"" )"		4113015	2		=			
ANR	4115336	Identifier	pipecolor		4113015	0					
ANR	4115337	CallExpression	"r_config_get_i ( core -> config , ""scr.color.pipe"" )"		4113015	1					
ANR	4115338	Callee	r_config_get_i		4113015	0					
ANR	4115339	Identifier	r_config_get_i		4113015	0					
ANR	4115340	ArgumentList	core -> config		4113015	1					
ANR	4115341	Argument	core -> config		4113015	0					
ANR	4115342	PtrMemberAccess	core -> config		4113015	0					
ANR	4115343	Identifier	core		4113015	0					
ANR	4115344	Identifier	config		4113015	1					
ANR	4115345	Argument	"""scr.color.pipe"""		4113015	1					
ANR	4115346	PrimaryExpression	"""scr.color.pipe"""		4113015	0					
ANR	4115347	IdentifierDeclStatement	int use_editor = false ;	2894:2:73666:73688	4113015	4	True				
ANR	4115348	IdentifierDecl	use_editor = false		4113015	0					
ANR	4115349	IdentifierDeclType	int		4113015	0					
ANR	4115350	Identifier	use_editor		4113015	1					
ANR	4115351	AssignmentExpression	use_editor = false		4113015	2		=			
ANR	4115352	Identifier	false		4113015	0					
ANR	4115353	Identifier	false		4113015	1					
ANR	4115354	IdentifierDeclStatement	"int ocolor = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2895:2:73692:73747	4113015	5	True				
ANR	4115355	IdentifierDecl	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		4113015	0					
ANR	4115356	IdentifierDeclType	int		4113015	0					
ANR	4115357	Identifier	ocolor		4113015	1					
ANR	4115358	AssignmentExpression	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		4113015	2		=			
ANR	4115359	Identifier	ocolor		4113015	0					
ANR	4115360	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4113015	1					
ANR	4115361	Callee	r_config_get_i		4113015	0					
ANR	4115362	Identifier	r_config_get_i		4113015	0					
ANR	4115363	ArgumentList	core -> config		4113015	1					
ANR	4115364	Argument	core -> config		4113015	0					
ANR	4115365	PtrMemberAccess	core -> config		4113015	0					
ANR	4115366	Identifier	core		4113015	0					
ANR	4115367	Identifier	config		4113015	1					
ANR	4115368	Argument	"""scr.color"""		4113015	1					
ANR	4115369	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4115370	ExpressionStatement	* ptr = '\\0'	2896:2:73751:73762	4113015	6	True				
ANR	4115371	AssignmentExpression	* ptr = '\\0'		4113015	0		=			
ANR	4115372	UnaryOperationExpression	* ptr		4113015	0					
ANR	4115373	UnaryOperator	*		4113015	0					
ANR	4115374	Identifier	ptr		4113015	1					
ANR	4115375	PrimaryExpression	'\\0'		4113015	1					
ANR	4115376	ExpressionStatement	str = r_str_trim_head_tail ( ptr + 1 + ( ptr [ 1 ] == '>' ) )	2897:2:73766:73820	4113015	7	True				
ANR	4115377	AssignmentExpression	str = r_str_trim_head_tail ( ptr + 1 + ( ptr [ 1 ] == '>' ) )		4113015	0		=			
ANR	4115378	Identifier	str		4113015	0					
ANR	4115379	CallExpression	r_str_trim_head_tail ( ptr + 1 + ( ptr [ 1 ] == '>' ) )		4113015	1					
ANR	4115380	Callee	r_str_trim_head_tail		4113015	0					
ANR	4115381	Identifier	r_str_trim_head_tail		4113015	0					
ANR	4115382	ArgumentList	ptr + 1 + ( ptr [ 1 ] == '>' )		4113015	1					
ANR	4115383	Argument	ptr + 1 + ( ptr [ 1 ] == '>' )		4113015	0					
ANR	4115384	AdditiveExpression	ptr + 1 + ( ptr [ 1 ] == '>' )		4113015	0		+			
ANR	4115385	Identifier	ptr		4113015	0					
ANR	4115386	AdditiveExpression	1 + ( ptr [ 1 ] == '>' )		4113015	1		+			
ANR	4115387	PrimaryExpression	1		4113015	0					
ANR	4115388	EqualityExpression	ptr [ 1 ] == '>'		4113015	1		==			
ANR	4115389	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4115390	Identifier	ptr		4113015	0					
ANR	4115391	PrimaryExpression	1		4113015	1					
ANR	4115392	PrimaryExpression	'>'		4113015	1					
ANR	4115393	IfStatement	if ( ! * str )		4113015	8					
ANR	4115394	Condition	! * str	2898:6:73828:73832	4113015	0	True				
ANR	4115395	UnaryOperationExpression	! * str		4113015	0					
ANR	4115396	UnaryOperator	!		4113015	0					
ANR	4115397	UnaryOperationExpression	* str		4113015	1					
ANR	4115398	UnaryOperator	*		4113015	0					
ANR	4115399	Identifier	str		4113015	1					
ANR	4115400	CompoundStatement		393:13:9184:9184	4113015	1					
ANR	4115401	ExpressionStatement	"eprintf ( ""No output?\\n"" )"	2899:3:73840:73864	4113015	0	True				
ANR	4115402	CallExpression	"eprintf ( ""No output?\\n"" )"		4113015	0					
ANR	4115403	Callee	eprintf		4113015	0					
ANR	4115404	Identifier	eprintf		4113015	0					
ANR	4115405	ArgumentList	"""No output?\\n"""		4113015	1					
ANR	4115406	Argument	"""No output?\\n"""		4113015	0					
ANR	4115407	PrimaryExpression	"""No output?\\n"""		4113015	0					
ANR	4115408	GotoStatement	goto next2 ;	2900:3:73869:73879	4113015	1	True				
ANR	4115409	Identifier	next2		4113015	0					
ANR	4115410	IfStatement	if ( ptr > ( cmd + 1 ) && IS_WHITECHAR ( ptr [ - 2 ] ) )		4113015	9					
ANR	4115411	Condition	ptr > ( cmd + 1 ) && IS_WHITECHAR ( ptr [ - 2 ] )	2905:6:74081:74121	4113015	0	True				
ANR	4115412	AndExpression	ptr > ( cmd + 1 ) && IS_WHITECHAR ( ptr [ - 2 ] )		4113015	0		&&			
ANR	4115413	RelationalExpression	ptr > ( cmd + 1 )		4113015	0		>			
ANR	4115414	Identifier	ptr		4113015	0					
ANR	4115415	AdditiveExpression	cmd + 1		4113015	1		+			
ANR	4115416	Identifier	cmd		4113015	0					
ANR	4115417	PrimaryExpression	1		4113015	1					
ANR	4115418	CallExpression	IS_WHITECHAR ( ptr [ - 2 ] )		4113015	1					
ANR	4115419	Callee	IS_WHITECHAR		4113015	0					
ANR	4115420	Identifier	IS_WHITECHAR		4113015	0					
ANR	4115421	ArgumentList	ptr [ - 2 ]		4113015	1					
ANR	4115422	Argument	ptr [ - 2 ]		4113015	0					
ANR	4115423	ArrayIndexing	ptr [ - 2 ]		4113015	0					
ANR	4115424	Identifier	ptr		4113015	0					
ANR	4115425	UnaryOperationExpression	- 2		4113015	1					
ANR	4115426	UnaryOperator	-		4113015	0					
ANR	4115427	PrimaryExpression	2		4113015	1					
ANR	4115428	CompoundStatement		401:3:9478:9499	4113015	1					
ANR	4115429	IdentifierDeclStatement	char * fdnum = ptr - 1 ;	2906:3:74129:74150	4113015	0	True				
ANR	4115430	IdentifierDecl	* fdnum = ptr - 1		4113015	0					
ANR	4115431	IdentifierDeclType	char *		4113015	0					
ANR	4115432	Identifier	fdnum		4113015	1					
ANR	4115433	AssignmentExpression	* fdnum = ptr - 1		4113015	2		=			
ANR	4115434	Identifier	fdnum		4113015	0					
ANR	4115435	AdditiveExpression	ptr - 1		4113015	1		-			
ANR	4115436	Identifier	ptr		4113015	0					
ANR	4115437	PrimaryExpression	1		4113015	1					
ANR	4115438	IfStatement	if ( * fdnum == 'H' )		4113015	1					
ANR	4115439	Condition	* fdnum == 'H'	2907:7:74159:74171	4113015	0	True				
ANR	4115440	EqualityExpression	* fdnum == 'H'		4113015	0		==			
ANR	4115441	UnaryOperationExpression	* fdnum		4113015	0					
ANR	4115442	UnaryOperator	*		4113015	0					
ANR	4115443	Identifier	fdnum		4113015	1					
ANR	4115444	PrimaryExpression	'H'		4113015	1					
ANR	4115445	CompoundStatement		402:22:9523:9523	4113015	1					
ANR	4115446	ExpressionStatement	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"	2908:4:74188:74240	4113015	0	True				
ANR	4115447	AssignmentExpression	"scr_html = r_config_get_i ( core -> config , ""scr.html"" )"		4113015	0		=			
ANR	4115448	Identifier	scr_html		4113015	0					
ANR	4115449	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		4113015	1					
ANR	4115450	Callee	r_config_get_i		4113015	0					
ANR	4115451	Identifier	r_config_get_i		4113015	0					
ANR	4115452	ArgumentList	core -> config		4113015	1					
ANR	4115453	Argument	core -> config		4113015	0					
ANR	4115454	PtrMemberAccess	core -> config		4113015	0					
ANR	4115455	Identifier	core		4113015	0					
ANR	4115456	Identifier	config		4113015	1					
ANR	4115457	Argument	"""scr.html"""		4113015	1					
ANR	4115458	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4115459	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , true )"	2909:4:74246:74293	4113015	1	True				
ANR	4115460	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , true )"		4113015	0					
ANR	4115461	Callee	r_config_set_i		4113015	0					
ANR	4115462	Identifier	r_config_set_i		4113015	0					
ANR	4115463	ArgumentList	core -> config		4113015	1					
ANR	4115464	Argument	core -> config		4113015	0					
ANR	4115465	PtrMemberAccess	core -> config		4113015	0					
ANR	4115466	Identifier	core		4113015	0					
ANR	4115467	Identifier	config		4113015	1					
ANR	4115468	Argument	"""scr.html"""		4113015	1					
ANR	4115469	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4115470	Argument	true		4113015	2					
ANR	4115471	Identifier	true		4113015	0					
ANR	4115472	ExpressionStatement	pipecolor = true	2910:4:74299:74315	4113015	2	True				
ANR	4115473	AssignmentExpression	pipecolor = true		4113015	0		=			
ANR	4115474	Identifier	pipecolor		4113015	0					
ANR	4115475	Identifier	true		4113015	1					
ANR	4115476	ExpressionStatement	* fdnum = 0	2911:4:74321:74331	4113015	3	True				
ANR	4115477	AssignmentExpression	* fdnum = 0		4113015	0		=			
ANR	4115478	UnaryOperationExpression	* fdnum		4113015	0					
ANR	4115479	UnaryOperator	*		4113015	0					
ANR	4115480	Identifier	fdnum		4113015	1					
ANR	4115481	PrimaryExpression	0		4113015	1					
ANR	4115482	ElseStatement	else		4113015	0					
ANR	4115483	CompoundStatement		407:10:9692:9692	4113015	0					
ANR	4115484	IfStatement	if ( IS_DIGIT ( * fdnum ) )		4113015	0					
ANR	4115485	Condition	IS_DIGIT ( * fdnum )	2913:8:74353:74369	4113015	0	True				
ANR	4115486	CallExpression	IS_DIGIT ( * fdnum )		4113015	0					
ANR	4115487	Callee	IS_DIGIT		4113015	0					
ANR	4115488	Identifier	IS_DIGIT		4113015	0					
ANR	4115489	ArgumentList	* fdnum		4113015	1					
ANR	4115490	Argument	* fdnum		4113015	0					
ANR	4115491	UnaryOperationExpression	* fdnum		4113015	0					
ANR	4115492	UnaryOperator	*		4113015	0					
ANR	4115493	Identifier	fdnum		4113015	1					
ANR	4115494	CompoundStatement		408:27:9721:9721	4113015	1					
ANR	4115495	ExpressionStatement	fdn = * fdnum - '0'	2914:5:74379:74397	4113015	0	True				
ANR	4115496	AssignmentExpression	fdn = * fdnum - '0'		4113015	0		=			
ANR	4115497	Identifier	fdn		4113015	0					
ANR	4115498	AdditiveExpression	* fdnum - '0'		4113015	1		-			
ANR	4115499	UnaryOperationExpression	* fdnum		4113015	0					
ANR	4115500	UnaryOperator	*		4113015	0					
ANR	4115501	Identifier	fdnum		4113015	1					
ANR	4115502	PrimaryExpression	'0'		4113015	1					
ANR	4115503	ExpressionStatement	* fdnum = 0	2916:4:74409:74419	4113015	1	True				
ANR	4115504	AssignmentExpression	* fdnum = 0		4113015	0		=			
ANR	4115505	UnaryOperationExpression	* fdnum		4113015	0					
ANR	4115506	UnaryOperator	*		4113015	0					
ANR	4115507	Identifier	fdnum		4113015	1					
ANR	4115508	PrimaryExpression	0		4113015	1					
ANR	4115509	ExpressionStatement	r_cons_set_interactive ( false )	2919:2:74432:74462	4113015	10	True				
ANR	4115510	CallExpression	r_cons_set_interactive ( false )		4113015	0					
ANR	4115511	Callee	r_cons_set_interactive		4113015	0					
ANR	4115512	Identifier	r_cons_set_interactive		4113015	0					
ANR	4115513	ArgumentList	false		4113015	1					
ANR	4115514	Argument	false		4113015	0					
ANR	4115515	Identifier	false		4113015	0					
ANR	4115516	IfStatement	"if ( ! strcmp ( str , ""-"" ) )"		4113015	11					
ANR	4115517	Condition	"! strcmp ( str , ""-"" )"	2920:6:74470:74487	4113015	0	True				
ANR	4115518	UnaryOperationExpression	"! strcmp ( str , ""-"" )"		4113015	0					
ANR	4115519	UnaryOperator	!		4113015	0					
ANR	4115520	CallExpression	"strcmp ( str , ""-"" )"		4113015	1					
ANR	4115521	Callee	strcmp		4113015	0					
ANR	4115522	Identifier	strcmp		4113015	0					
ANR	4115523	ArgumentList	str		4113015	1					
ANR	4115524	Argument	str		4113015	0					
ANR	4115525	Identifier	str		4113015	0					
ANR	4115526	Argument	"""-"""		4113015	1					
ANR	4115527	PrimaryExpression	"""-"""		4113015	0					
ANR	4115528	CompoundStatement		415:26:9839:9839	4113015	1					
ANR	4115529	ExpressionStatement	use_editor = true	2921:3:74495:74512	4113015	0	True				
ANR	4115530	AssignmentExpression	use_editor = true		4113015	0		=			
ANR	4115531	Identifier	use_editor		4113015	0					
ANR	4115532	Identifier	true		4113015	1					
ANR	4115533	ExpressionStatement	"str = r_file_temp ( ""dumpedit"" )"	2922:3:74517:74547	4113015	1	True				
ANR	4115534	AssignmentExpression	"str = r_file_temp ( ""dumpedit"" )"		4113015	0		=			
ANR	4115535	Identifier	str		4113015	0					
ANR	4115536	CallExpression	"r_file_temp ( ""dumpedit"" )"		4113015	1					
ANR	4115537	Callee	r_file_temp		4113015	0					
ANR	4115538	Identifier	r_file_temp		4113015	0					
ANR	4115539	ArgumentList	"""dumpedit"""		4113015	1					
ANR	4115540	Argument	"""dumpedit"""		4113015	0					
ANR	4115541	PrimaryExpression	"""dumpedit"""		4113015	0					
ANR	4115542	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2923:3:74552:74615	4113015	2	True				
ANR	4115543	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		4113015	0					
ANR	4115544	Callee	r_config_set_i		4113015	0					
ANR	4115545	Identifier	r_config_set_i		4113015	0					
ANR	4115546	ArgumentList	core -> config		4113015	1					
ANR	4115547	Argument	core -> config		4113015	0					
ANR	4115548	PtrMemberAccess	core -> config		4113015	0					
ANR	4115549	Identifier	core		4113015	0					
ANR	4115550	Identifier	config		4113015	1					
ANR	4115551	Argument	"""scr.color"""		4113015	1					
ANR	4115552	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4115553	Argument	COLOR_MODE_DISABLED		4113015	2					
ANR	4115554	Identifier	COLOR_MODE_DISABLED		4113015	0					
ANR	4115555	IdentifierDeclStatement	const bool appendResult = ( ptr [ 1 ] == '>' ) ;	2925:2:74623:74664	4113015	12	True				
ANR	4115556	IdentifierDecl	appendResult = ( ptr [ 1 ] == '>' )		4113015	0					
ANR	4115557	IdentifierDeclType	const bool		4113015	0					
ANR	4115558	Identifier	appendResult		4113015	1					
ANR	4115559	AssignmentExpression	appendResult = ( ptr [ 1 ] == '>' )		4113015	2		=			
ANR	4115560	Identifier	appendResult		4113015	0					
ANR	4115561	EqualityExpression	ptr [ 1 ] == '>'		4113015	1		==			
ANR	4115562	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4115563	Identifier	ptr		4113015	0					
ANR	4115564	PrimaryExpression	1		4113015	1					
ANR	4115565	PrimaryExpression	'>'		4113015	1					
ANR	4115566	IfStatement	if ( * str == '$' )		4113015	13					
ANR	4115567	Condition	* str == '$'	2926:6:74672:74682	4113015	0	True				
ANR	4115568	EqualityExpression	* str == '$'		4113015	0		==			
ANR	4115569	UnaryOperationExpression	* str		4113015	0					
ANR	4115570	UnaryOperator	*		4113015	0					
ANR	4115571	Identifier	str		4113015	1					
ANR	4115572	PrimaryExpression	'$'		4113015	1					
ANR	4115573	CompoundStatement		424:3:10113:10149	4113015	1					
ANR	4115574	IdentifierDeclStatement	"char * o = r_core_cmd_str ( core , cmd ) ;"	2929:3:74764:74800	4113015	0	True				
ANR	4115575	IdentifierDecl	"* o = r_core_cmd_str ( core , cmd )"		4113015	0					
ANR	4115576	IdentifierDeclType	char *		4113015	0					
ANR	4115577	Identifier	o		4113015	1					
ANR	4115578	AssignmentExpression	"* o = r_core_cmd_str ( core , cmd )"		4113015	2		=			
ANR	4115579	Identifier	o		4113015	0					
ANR	4115580	CallExpression	"r_core_cmd_str ( core , cmd )"		4113015	1					
ANR	4115581	Callee	r_core_cmd_str		4113015	0					
ANR	4115582	Identifier	r_core_cmd_str		4113015	0					
ANR	4115583	ArgumentList	core		4113015	1					
ANR	4115584	Argument	core		4113015	0					
ANR	4115585	Identifier	core		4113015	0					
ANR	4115586	Argument	cmd		4113015	1					
ANR	4115587	Identifier	cmd		4113015	0					
ANR	4115588	IfStatement	if ( appendResult )		4113015	1					
ANR	4115589	Condition	appendResult	2930:7:74809:74820	4113015	0	True				
ANR	4115590	Identifier	appendResult		4113015	0					
ANR	4115591	CompoundStatement		426:4:10178:10230	4113015	1					
ANR	4115592	IdentifierDeclStatement	"char * oldText = r_cmd_alias_get ( core -> rcmd , str , 1 ) ;"	2931:4:74829:74881	4113015	0	True				
ANR	4115593	IdentifierDecl	"* oldText = r_cmd_alias_get ( core -> rcmd , str , 1 )"		4113015	0					
ANR	4115594	IdentifierDeclType	char *		4113015	0					
ANR	4115595	Identifier	oldText		4113015	1					
ANR	4115596	AssignmentExpression	"* oldText = r_cmd_alias_get ( core -> rcmd , str , 1 )"		4113015	2		=			
ANR	4115597	Identifier	oldText		4113015	0					
ANR	4115598	CallExpression	"r_cmd_alias_get ( core -> rcmd , str , 1 )"		4113015	1					
ANR	4115599	Callee	r_cmd_alias_get		4113015	0					
ANR	4115600	Identifier	r_cmd_alias_get		4113015	0					
ANR	4115601	ArgumentList	core -> rcmd		4113015	1					
ANR	4115602	Argument	core -> rcmd		4113015	0					
ANR	4115603	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4115604	Identifier	core		4113015	0					
ANR	4115605	Identifier	rcmd		4113015	1					
ANR	4115606	Argument	str		4113015	1					
ANR	4115607	Identifier	str		4113015	0					
ANR	4115608	Argument	1		4113015	2					
ANR	4115609	PrimaryExpression	1		4113015	0					
ANR	4115610	IfStatement	if ( oldText )		4113015	1					
ANR	4115611	Condition	oldText	2932:8:74891:74897	4113015	0	True				
ANR	4115612	Identifier	oldText		4113015	0					
ANR	4115613	CompoundStatement		428:5:10256:10299	4113015	1					
ANR	4115614	IdentifierDeclStatement	"char * two = r_str_newf ( ""%s%s"" , oldText , o ) ;"	2933:5:74907:74950	4113015	0	True				
ANR	4115615	IdentifierDecl	"* two = r_str_newf ( ""%s%s"" , oldText , o )"		4113015	0					
ANR	4115616	IdentifierDeclType	char *		4113015	0					
ANR	4115617	Identifier	two		4113015	1					
ANR	4115618	AssignmentExpression	"* two = r_str_newf ( ""%s%s"" , oldText , o )"		4113015	2		=			
ANR	4115619	Identifier	two		4113015	0					
ANR	4115620	CallExpression	"r_str_newf ( ""%s%s"" , oldText , o )"		4113015	1					
ANR	4115621	Callee	r_str_newf		4113015	0					
ANR	4115622	Identifier	r_str_newf		4113015	0					
ANR	4115623	ArgumentList	"""%s%s"""		4113015	1					
ANR	4115624	Argument	"""%s%s"""		4113015	0					
ANR	4115625	PrimaryExpression	"""%s%s"""		4113015	0					
ANR	4115626	Argument	oldText		4113015	1					
ANR	4115627	Identifier	oldText		4113015	0					
ANR	4115628	Argument	o		4113015	2					
ANR	4115629	Identifier	o		4113015	0					
ANR	4115630	IfStatement	if ( two )		4113015	1					
ANR	4115631	Condition	two	2934:9:74961:74963	4113015	0	True				
ANR	4115632	Identifier	two		4113015	0					
ANR	4115633	CompoundStatement		429:14:10315:10315	4113015	1					
ANR	4115634	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , two , 1 )"	2935:6:74974:75015	4113015	0	True				
ANR	4115635	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , two , 1 )"		4113015	0					
ANR	4115636	Callee	r_cmd_alias_set		4113015	0					
ANR	4115637	Identifier	r_cmd_alias_set		4113015	0					
ANR	4115638	ArgumentList	core -> rcmd		4113015	1					
ANR	4115639	Argument	core -> rcmd		4113015	0					
ANR	4115640	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4115641	Identifier	core		4113015	0					
ANR	4115642	Identifier	rcmd		4113015	1					
ANR	4115643	Argument	str		4113015	1					
ANR	4115644	Identifier	str		4113015	0					
ANR	4115645	Argument	two		4113015	2					
ANR	4115646	Identifier	two		4113015	0					
ANR	4115647	Argument	1		4113015	3					
ANR	4115648	PrimaryExpression	1		4113015	0					
ANR	4115649	ExpressionStatement	free ( two )	2936:6:75023:75033	4113015	1	True				
ANR	4115650	CallExpression	free ( two )		4113015	0					
ANR	4115651	Callee	free		4113015	0					
ANR	4115652	Identifier	free		4113015	0					
ANR	4115653	ArgumentList	two		4113015	1					
ANR	4115654	Argument	two		4113015	0					
ANR	4115655	Identifier	two		4113015	0					
ANR	4115656	ElseStatement	else		4113015	0					
ANR	4115657	CompoundStatement		434:5:10409:10440	4113015	0					
ANR	4115658	IdentifierDeclStatement	"char * n = r_str_newf ( ""$%s"" , o ) ;"	2939:5:75060:75091	4113015	0	True				
ANR	4115659	IdentifierDecl	"* n = r_str_newf ( ""$%s"" , o )"		4113015	0					
ANR	4115660	IdentifierDeclType	char *		4113015	0					
ANR	4115661	Identifier	n		4113015	1					
ANR	4115662	AssignmentExpression	"* n = r_str_newf ( ""$%s"" , o )"		4113015	2		=			
ANR	4115663	Identifier	n		4113015	0					
ANR	4115664	CallExpression	"r_str_newf ( ""$%s"" , o )"		4113015	1					
ANR	4115665	Callee	r_str_newf		4113015	0					
ANR	4115666	Identifier	r_str_newf		4113015	0					
ANR	4115667	ArgumentList	"""$%s"""		4113015	1					
ANR	4115668	Argument	"""$%s"""		4113015	0					
ANR	4115669	PrimaryExpression	"""$%s"""		4113015	0					
ANR	4115670	Argument	o		4113015	1					
ANR	4115671	Identifier	o		4113015	0					
ANR	4115672	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"	2940:5:75098:75137	4113015	1	True				
ANR	4115673	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"		4113015	0					
ANR	4115674	Callee	r_cmd_alias_set		4113015	0					
ANR	4115675	Identifier	r_cmd_alias_set		4113015	0					
ANR	4115676	ArgumentList	core -> rcmd		4113015	1					
ANR	4115677	Argument	core -> rcmd		4113015	0					
ANR	4115678	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4115679	Identifier	core		4113015	0					
ANR	4115680	Identifier	rcmd		4113015	1					
ANR	4115681	Argument	str		4113015	1					
ANR	4115682	Identifier	str		4113015	0					
ANR	4115683	Argument	n		4113015	2					
ANR	4115684	Identifier	n		4113015	0					
ANR	4115685	Argument	1		4113015	3					
ANR	4115686	PrimaryExpression	1		4113015	0					
ANR	4115687	ExpressionStatement	free ( n )	2941:5:75144:75152	4113015	2	True				
ANR	4115688	CallExpression	free ( n )		4113015	0					
ANR	4115689	Callee	free		4113015	0					
ANR	4115690	Identifier	free		4113015	0					
ANR	4115691	ArgumentList	n		4113015	1					
ANR	4115692	Argument	n		4113015	0					
ANR	4115693	Identifier	n		4113015	0					
ANR	4115694	ElseStatement	else		4113015	0					
ANR	4115695	CompoundStatement		439:4:10525:10556	4113015	0					
ANR	4115696	IdentifierDeclStatement	"char * n = r_str_newf ( ""$%s"" , o ) ;"	2944:4:75176:75207	4113015	0	True				
ANR	4115697	IdentifierDecl	"* n = r_str_newf ( ""$%s"" , o )"		4113015	0					
ANR	4115698	IdentifierDeclType	char *		4113015	0					
ANR	4115699	Identifier	n		4113015	1					
ANR	4115700	AssignmentExpression	"* n = r_str_newf ( ""$%s"" , o )"		4113015	2		=			
ANR	4115701	Identifier	n		4113015	0					
ANR	4115702	CallExpression	"r_str_newf ( ""$%s"" , o )"		4113015	1					
ANR	4115703	Callee	r_str_newf		4113015	0					
ANR	4115704	Identifier	r_str_newf		4113015	0					
ANR	4115705	ArgumentList	"""$%s"""		4113015	1					
ANR	4115706	Argument	"""$%s"""		4113015	0					
ANR	4115707	PrimaryExpression	"""$%s"""		4113015	0					
ANR	4115708	Argument	o		4113015	1					
ANR	4115709	Identifier	o		4113015	0					
ANR	4115710	ExpressionStatement	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"	2945:4:75213:75252	4113015	1	True				
ANR	4115711	CallExpression	"r_cmd_alias_set ( core -> rcmd , str , n , 1 )"		4113015	0					
ANR	4115712	Callee	r_cmd_alias_set		4113015	0					
ANR	4115713	Identifier	r_cmd_alias_set		4113015	0					
ANR	4115714	ArgumentList	core -> rcmd		4113015	1					
ANR	4115715	Argument	core -> rcmd		4113015	0					
ANR	4115716	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4115717	Identifier	core		4113015	0					
ANR	4115718	Identifier	rcmd		4113015	1					
ANR	4115719	Argument	str		4113015	1					
ANR	4115720	Identifier	str		4113015	0					
ANR	4115721	Argument	n		4113015	2					
ANR	4115722	Identifier	n		4113015	0					
ANR	4115723	Argument	1		4113015	3					
ANR	4115724	PrimaryExpression	1		4113015	0					
ANR	4115725	ExpressionStatement	free ( n )	2946:4:75258:75266	4113015	2	True				
ANR	4115726	CallExpression	free ( n )		4113015	0					
ANR	4115727	Callee	free		4113015	0					
ANR	4115728	Identifier	free		4113015	0					
ANR	4115729	ArgumentList	n		4113015	1					
ANR	4115730	Argument	n		4113015	0					
ANR	4115731	Identifier	n		4113015	0					
ANR	4115732	ExpressionStatement	ret = 0	2948:3:75276:75283	4113015	2	True				
ANR	4115733	AssignmentExpression	ret = 0		4113015	0		=			
ANR	4115734	Identifier	ret		4113015	0					
ANR	4115735	PrimaryExpression	0		4113015	1					
ANR	4115736	ExpressionStatement	free ( o )	2949:3:75288:75296	4113015	3	True				
ANR	4115737	CallExpression	free ( o )		4113015	0					
ANR	4115738	Callee	free		4113015	0					
ANR	4115739	Identifier	free		4113015	0					
ANR	4115740	ArgumentList	o		4113015	1					
ANR	4115741	Argument	o		4113015	0					
ANR	4115742	Identifier	o		4113015	0					
ANR	4115743	ElseStatement	else		4113015	0					
ANR	4115744	IfStatement	if ( fdn > 0 )		4113015	0					
ANR	4115745	Condition	fdn > 0	2950:13:75311:75317	4113015	0	True				
ANR	4115746	RelationalExpression	fdn > 0		4113015	0		>			
ANR	4115747	Identifier	fdn		4113015	0					
ANR	4115748	PrimaryExpression	0		4113015	1					
ANR	4115749	CompoundStatement		445:22:10669:10669	4113015	1					
ANR	4115750	ExpressionStatement	"pipefd = r_cons_pipe_open ( str , fdn , appendResult )"	2952:3:75356:75406	4113015	0	True				
ANR	4115751	AssignmentExpression	"pipefd = r_cons_pipe_open ( str , fdn , appendResult )"		4113015	0		=			
ANR	4115752	Identifier	pipefd		4113015	0					
ANR	4115753	CallExpression	"r_cons_pipe_open ( str , fdn , appendResult )"		4113015	1					
ANR	4115754	Callee	r_cons_pipe_open		4113015	0					
ANR	4115755	Identifier	r_cons_pipe_open		4113015	0					
ANR	4115756	ArgumentList	str		4113015	1					
ANR	4115757	Argument	str		4113015	0					
ANR	4115758	Identifier	str		4113015	0					
ANR	4115759	Argument	fdn		4113015	1					
ANR	4115760	Identifier	fdn		4113015	0					
ANR	4115761	Argument	appendResult		4113015	2					
ANR	4115762	Identifier	appendResult		4113015	0					
ANR	4115763	IfStatement	if ( pipefd != - 1 )		4113015	1					
ANR	4115764	Condition	pipefd != - 1	2953:7:75415:75426	4113015	0	True				
ANR	4115765	EqualityExpression	pipefd != - 1		4113015	0		!=			
ANR	4115766	Identifier	pipefd		4113015	0					
ANR	4115767	UnaryOperationExpression	- 1		4113015	1					
ANR	4115768	UnaryOperator	-		4113015	0					
ANR	4115769	PrimaryExpression	1		4113015	1					
ANR	4115770	CompoundStatement		448:21:10778:10778	4113015	1					
ANR	4115771	IfStatement	if ( ! pipecolor )		4113015	0					
ANR	4115772	Condition	! pipecolor	2954:8:75439:75448	4113015	0	True				
ANR	4115773	UnaryOperationExpression	! pipecolor		4113015	0					
ANR	4115774	UnaryOperator	!		4113015	0					
ANR	4115775	Identifier	pipecolor		4113015	1					
ANR	4115776	CompoundStatement		449:20:10800:10800	4113015	1					
ANR	4115777	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"	2955:5:75458:75521	4113015	0	True				
ANR	4115778	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , COLOR_MODE_DISABLED )"		4113015	0					
ANR	4115779	Callee	r_config_set_i		4113015	0					
ANR	4115780	Identifier	r_config_set_i		4113015	0					
ANR	4115781	ArgumentList	core -> config		4113015	1					
ANR	4115782	Argument	core -> config		4113015	0					
ANR	4115783	PtrMemberAccess	core -> config		4113015	0					
ANR	4115784	Identifier	core		4113015	0					
ANR	4115785	Identifier	config		4113015	1					
ANR	4115786	Argument	"""scr.color"""		4113015	1					
ANR	4115787	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4115788	Argument	COLOR_MODE_DISABLED		4113015	2					
ANR	4115789	Identifier	COLOR_MODE_DISABLED		4113015	0					
ANR	4115790	ExpressionStatement	"ret = r_core_cmd_subst ( core , cmd )"	2957:4:75533:75567	4113015	1	True				
ANR	4115791	AssignmentExpression	"ret = r_core_cmd_subst ( core , cmd )"		4113015	0		=			
ANR	4115792	Identifier	ret		4113015	0					
ANR	4115793	CallExpression	"r_core_cmd_subst ( core , cmd )"		4113015	1					
ANR	4115794	Callee	r_core_cmd_subst		4113015	0					
ANR	4115795	Identifier	r_core_cmd_subst		4113015	0					
ANR	4115796	ArgumentList	core		4113015	1					
ANR	4115797	Argument	core		4113015	0					
ANR	4115798	Identifier	core		4113015	0					
ANR	4115799	Argument	cmd		4113015	1					
ANR	4115800	Identifier	cmd		4113015	0					
ANR	4115801	ExpressionStatement	r_cons_flush ( )	2958:4:75573:75588	4113015	2	True				
ANR	4115802	CallExpression	r_cons_flush ( )		4113015	0					
ANR	4115803	Callee	r_cons_flush		4113015	0					
ANR	4115804	Identifier	r_cons_flush		4113015	0					
ANR	4115805	ArgumentList			4113015	1					
ANR	4115806	ExpressionStatement	r_cons_pipe_close ( pipefd )	2959:4:75594:75620	4113015	3	True				
ANR	4115807	CallExpression	r_cons_pipe_close ( pipefd )		4113015	0					
ANR	4115808	Callee	r_cons_pipe_close		4113015	0					
ANR	4115809	Identifier	r_cons_pipe_close		4113015	0					
ANR	4115810	ArgumentList	pipefd		4113015	1					
ANR	4115811	Argument	pipefd		4113015	0					
ANR	4115812	Identifier	pipefd		4113015	0					
ANR	4115813	ExpressionStatement	r_cons_set_last_interactive ( )	2962:2:75633:75663	4113015	14	True				
ANR	4115814	CallExpression	r_cons_set_last_interactive ( )		4113015	0					
ANR	4115815	Callee	r_cons_set_last_interactive		4113015	0					
ANR	4115816	Identifier	r_cons_set_last_interactive		4113015	0					
ANR	4115817	ArgumentList			4113015	1					
ANR	4115818	IfStatement	if ( ! pipecolor )		4113015	15					
ANR	4115819	Condition	! pipecolor	2963:6:75671:75680	4113015	0	True				
ANR	4115820	UnaryOperationExpression	! pipecolor		4113015	0					
ANR	4115821	UnaryOperator	!		4113015	0					
ANR	4115822	Identifier	pipecolor		4113015	1					
ANR	4115823	CompoundStatement		458:18:11032:11032	4113015	1					
ANR	4115824	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"	2964:3:75688:75738	4113015	0	True				
ANR	4115825	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"		4113015	0					
ANR	4115826	Callee	r_config_set_i		4113015	0					
ANR	4115827	Identifier	r_config_set_i		4113015	0					
ANR	4115828	ArgumentList	core -> config		4113015	1					
ANR	4115829	Argument	core -> config		4113015	0					
ANR	4115830	PtrMemberAccess	core -> config		4113015	0					
ANR	4115831	Identifier	core		4113015	0					
ANR	4115832	Identifier	config		4113015	1					
ANR	4115833	Argument	"""scr.color"""		4113015	1					
ANR	4115834	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4115835	Argument	ocolor		4113015	2					
ANR	4115836	Identifier	ocolor		4113015	0					
ANR	4115837	IfStatement	if ( use_editor )		4113015	16					
ANR	4115838	Condition	use_editor	2966:6:75750:75759	4113015	0	True				
ANR	4115839	Identifier	use_editor		4113015	0					
ANR	4115840	CompoundStatement		462:3:11116:11178	4113015	1					
ANR	4115841	IdentifierDeclStatement	"const char * editor = r_config_get ( core -> config , ""cfg.editor"" ) ;"	2967:3:75767:75829	4113015	0	True				
ANR	4115842	IdentifierDecl	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		4113015	0					
ANR	4115843	IdentifierDeclType	const char *		4113015	0					
ANR	4115844	Identifier	editor		4113015	1					
ANR	4115845	AssignmentExpression	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		4113015	2		=			
ANR	4115846	Identifier	editor		4113015	0					
ANR	4115847	CallExpression	"r_config_get ( core -> config , ""cfg.editor"" )"		4113015	1					
ANR	4115848	Callee	r_config_get		4113015	0					
ANR	4115849	Identifier	r_config_get		4113015	0					
ANR	4115850	ArgumentList	core -> config		4113015	1					
ANR	4115851	Argument	core -> config		4113015	0					
ANR	4115852	PtrMemberAccess	core -> config		4113015	0					
ANR	4115853	Identifier	core		4113015	0					
ANR	4115854	Identifier	config		4113015	1					
ANR	4115855	Argument	"""cfg.editor"""		4113015	1					
ANR	4115856	PrimaryExpression	"""cfg.editor"""		4113015	0					
ANR	4115857	IfStatement	if ( editor && * editor )		4113015	1					
ANR	4115858	Condition	editor && * editor	2968:7:75838:75854	4113015	0	True				
ANR	4115859	AndExpression	editor && * editor		4113015	0		&&			
ANR	4115860	Identifier	editor		4113015	0					
ANR	4115861	UnaryOperationExpression	* editor		4113015	1					
ANR	4115862	UnaryOperator	*		4113015	0					
ANR	4115863	Identifier	editor		4113015	1					
ANR	4115864	CompoundStatement		463:26:11206:11206	4113015	1					
ANR	4115865	ExpressionStatement	"r_sys_cmdf ( ""%s '%s'"" , editor , str )"	2969:4:75863:75898	4113015	0	True				
ANR	4115866	CallExpression	"r_sys_cmdf ( ""%s '%s'"" , editor , str )"		4113015	0					
ANR	4115867	Callee	r_sys_cmdf		4113015	0					
ANR	4115868	Identifier	r_sys_cmdf		4113015	0					
ANR	4115869	ArgumentList	"""%s '%s'"""		4113015	1					
ANR	4115870	Argument	"""%s '%s'"""		4113015	0					
ANR	4115871	PrimaryExpression	"""%s '%s'"""		4113015	0					
ANR	4115872	Argument	editor		4113015	1					
ANR	4115873	Identifier	editor		4113015	0					
ANR	4115874	Argument	str		4113015	2					
ANR	4115875	Identifier	str		4113015	0					
ANR	4115876	ExpressionStatement	r_file_rm ( str )	2970:4:75904:75919	4113015	1	True				
ANR	4115877	CallExpression	r_file_rm ( str )		4113015	0					
ANR	4115878	Callee	r_file_rm		4113015	0					
ANR	4115879	Identifier	r_file_rm		4113015	0					
ANR	4115880	ArgumentList	str		4113015	1					
ANR	4115881	Argument	str		4113015	0					
ANR	4115882	Identifier	str		4113015	0					
ANR	4115883	ElseStatement	else		4113015	0					
ANR	4115884	CompoundStatement		466:10:11280:11280	4113015	0					
ANR	4115885	ExpressionStatement	"eprintf ( ""No cfg.editor configured\\n"" )"	2972:4:75937:75975	4113015	0	True				
ANR	4115886	CallExpression	"eprintf ( ""No cfg.editor configured\\n"" )"		4113015	0					
ANR	4115887	Callee	eprintf		4113015	0					
ANR	4115888	Identifier	eprintf		4113015	0					
ANR	4115889	ArgumentList	"""No cfg.editor configured\\n"""		4113015	1					
ANR	4115890	Argument	"""No cfg.editor configured\\n"""		4113015	0					
ANR	4115891	PrimaryExpression	"""No cfg.editor configured\\n"""		4113015	0					
ANR	4115892	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"	2974:3:75985:76035	4113015	2	True				
ANR	4115893	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"		4113015	0					
ANR	4115894	Callee	r_config_set_i		4113015	0					
ANR	4115895	Identifier	r_config_set_i		4113015	0					
ANR	4115896	ArgumentList	core -> config		4113015	1					
ANR	4115897	Argument	core -> config		4113015	0					
ANR	4115898	PtrMemberAccess	core -> config		4113015	0					
ANR	4115899	Identifier	core		4113015	0					
ANR	4115900	Identifier	config		4113015	1					
ANR	4115901	Argument	"""scr.color"""		4113015	1					
ANR	4115902	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4115903	Argument	ocolor		4113015	2					
ANR	4115904	Identifier	ocolor		4113015	0					
ANR	4115905	ExpressionStatement	free ( str )	2975:3:76040:76050	4113015	3	True				
ANR	4115906	CallExpression	free ( str )		4113015	0					
ANR	4115907	Callee	free		4113015	0					
ANR	4115908	Identifier	free		4113015	0					
ANR	4115909	ArgumentList	str		4113015	1					
ANR	4115910	Argument	str		4113015	0					
ANR	4115911	Identifier	str		4113015	0					
ANR	4115912	IfStatement	if ( scr_html != - 1 )		4113015	17					
ANR	4115913	Condition	scr_html != - 1	2977:6:76062:76075	4113015	0	True				
ANR	4115914	EqualityExpression	scr_html != - 1		4113015	0		!=			
ANR	4115915	Identifier	scr_html		4113015	0					
ANR	4115916	UnaryOperationExpression	- 1		4113015	1					
ANR	4115917	UnaryOperator	-		4113015	0					
ANR	4115918	PrimaryExpression	1		4113015	1					
ANR	4115919	CompoundStatement		472:22:11427:11427	4113015	1					
ANR	4115920	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	2978:3:76083:76134	4113015	0	True				
ANR	4115921	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		4113015	0					
ANR	4115922	Callee	r_config_set_i		4113015	0					
ANR	4115923	Identifier	r_config_set_i		4113015	0					
ANR	4115924	ArgumentList	core -> config		4113015	1					
ANR	4115925	Argument	core -> config		4113015	0					
ANR	4115926	PtrMemberAccess	core -> config		4113015	0					
ANR	4115927	Identifier	core		4113015	0					
ANR	4115928	Identifier	config		4113015	1					
ANR	4115929	Argument	"""scr.html"""		4113015	1					
ANR	4115930	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4115931	Argument	scr_html		4113015	2					
ANR	4115932	Identifier	scr_html		4113015	0					
ANR	4115933	IfStatement	if ( scr_color != - 1 )		4113015	18					
ANR	4115934	Condition	scr_color != - 1	2980:6:76146:76160	4113015	0	True				
ANR	4115935	EqualityExpression	scr_color != - 1		4113015	0		!=			
ANR	4115936	Identifier	scr_color		4113015	0					
ANR	4115937	UnaryOperationExpression	- 1		4113015	1					
ANR	4115938	UnaryOperator	-		4113015	0					
ANR	4115939	PrimaryExpression	1		4113015	1					
ANR	4115940	CompoundStatement		475:23:11512:11512	4113015	1					
ANR	4115941	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	2981:3:76168:76221	4113015	0	True				
ANR	4115942	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		4113015	0					
ANR	4115943	Callee	r_config_set_i		4113015	0					
ANR	4115944	Identifier	r_config_set_i		4113015	0					
ANR	4115945	ArgumentList	core -> config		4113015	1					
ANR	4115946	Argument	core -> config		4113015	0					
ANR	4115947	PtrMemberAccess	core -> config		4113015	0					
ANR	4115948	Identifier	core		4113015	0					
ANR	4115949	Identifier	config		4113015	1					
ANR	4115950	Argument	"""scr.color"""		4113015	1					
ANR	4115951	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4115952	Argument	scr_color		4113015	2					
ANR	4115953	Identifier	scr_color		4113015	0					
ANR	4115954	ExpressionStatement	core -> cons -> use_tts = false	2983:2:76229:76256	4113015	19	True				
ANR	4115955	AssignmentExpression	core -> cons -> use_tts = false		4113015	0		=			
ANR	4115956	PtrMemberAccess	core -> cons -> use_tts		4113015	0					
ANR	4115957	PtrMemberAccess	core -> cons		4113015	0					
ANR	4115958	Identifier	core		4113015	0					
ANR	4115959	Identifier	cons		4113015	1					
ANR	4115960	Identifier	use_tts		4113015	1					
ANR	4115961	Identifier	false		4113015	1					
ANR	4115962	ExpressionStatement	r_list_free ( tmpenvs )	2984:2:76260:76281	4113015	20	True				
ANR	4115963	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4115964	Callee	r_list_free		4113015	0					
ANR	4115965	Identifier	r_list_free		4113015	0					
ANR	4115966	ArgumentList	tmpenvs		4113015	1					
ANR	4115967	Argument	tmpenvs		4113015	0					
ANR	4115968	Identifier	tmpenvs		4113015	0					
ANR	4115969	ReturnStatement	return ret ;	2985:2:76285:76295	4113015	21	True				
ANR	4115970	Identifier	ret		4113015	0					
ANR	4115971	Label	escape_redir :	2987:0:76300:76312	4113015	39	True				
ANR	4115972	Identifier	escape_redir		4113015	0					
ANR	4115973	Label	next2 :	2988:0:76314:76319	4113015	40	True				
ANR	4115974	Identifier	next2		4113015	0					
ANR	4115975	ExpressionStatement	"ptr = strchr ( cmd , '`' )"	2990:1:76342:76365	4113015	41	True				
ANR	4115976	AssignmentExpression	"ptr = strchr ( cmd , '`' )"		4113015	0		=			
ANR	4115977	Identifier	ptr		4113015	0					
ANR	4115978	CallExpression	"strchr ( cmd , '`' )"		4113015	1					
ANR	4115979	Callee	strchr		4113015	0					
ANR	4115980	Identifier	strchr		4113015	0					
ANR	4115981	ArgumentList	cmd		4113015	1					
ANR	4115982	Argument	cmd		4113015	0					
ANR	4115983	Identifier	cmd		4113015	0					
ANR	4115984	Argument	'`'		4113015	1					
ANR	4115985	PrimaryExpression	'`'		4113015	0					
ANR	4115986	IfStatement	if ( ptr )		4113015	42					
ANR	4115987	Condition	ptr	2991:5:76372:76374	4113015	0	True				
ANR	4115988	Identifier	ptr		4113015	0					
ANR	4115989	CompoundStatement		495:2:11892:11907	4113015	1					
ANR	4115990	IfStatement	if ( ptr > cmd )		4113015	0					
ANR	4115991	Condition	ptr > cmd	2992:6:76385:76393	4113015	0	True				
ANR	4115992	RelationalExpression	ptr > cmd		4113015	0		>			
ANR	4115993	Identifier	ptr		4113015	0					
ANR	4115994	Identifier	cmd		4113015	1					
ANR	4115995	CompoundStatement		488:3:11750:11768	4113015	1					
ANR	4115996	IdentifierDeclStatement	char * ch = ptr - 1 ;	2993:3:76401:76419	4113015	0	True				
ANR	4115997	IdentifierDecl	* ch = ptr - 1		4113015	0					
ANR	4115998	IdentifierDeclType	char *		4113015	0					
ANR	4115999	Identifier	ch		4113015	1					
ANR	4116000	AssignmentExpression	* ch = ptr - 1		4113015	2		=			
ANR	4116001	Identifier	ch		4113015	0					
ANR	4116002	AdditiveExpression	ptr - 1		4113015	1		-			
ANR	4116003	Identifier	ptr		4113015	0					
ANR	4116004	PrimaryExpression	1		4113015	1					
ANR	4116005	IfStatement	if ( * ch == '\\\\' )		4113015	1					
ANR	4116006	Condition	* ch == '\\\\'	2994:7:76428:76438	4113015	0	True				
ANR	4116007	EqualityExpression	* ch == '\\\\'		4113015	0		==			
ANR	4116008	UnaryOperationExpression	* ch		4113015	0					
ANR	4116009	UnaryOperator	*		4113015	0					
ANR	4116010	Identifier	ch		4113015	1					
ANR	4116011	PrimaryExpression	'\\\\'		4113015	1					
ANR	4116012	CompoundStatement		489:20:11790:11790	4113015	1					
ANR	4116013	ExpressionStatement	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"	2995:4:76447:76482	4113015	0	True				
ANR	4116014	CallExpression	"memmove ( ch , ptr , strlen ( ptr ) + 1 )"		4113015	0					
ANR	4116015	Callee	memmove		4113015	0					
ANR	4116016	Identifier	memmove		4113015	0					
ANR	4116017	ArgumentList	ch		4113015	1					
ANR	4116018	Argument	ch		4113015	0					
ANR	4116019	Identifier	ch		4113015	0					
ANR	4116020	Argument	ptr		4113015	1					
ANR	4116021	Identifier	ptr		4113015	0					
ANR	4116022	Argument	strlen ( ptr ) + 1		4113015	2					
ANR	4116023	AdditiveExpression	strlen ( ptr ) + 1		4113015	0		+			
ANR	4116024	CallExpression	strlen ( ptr )		4113015	0					
ANR	4116025	Callee	strlen		4113015	0					
ANR	4116026	Identifier	strlen		4113015	0					
ANR	4116027	ArgumentList	ptr		4113015	1					
ANR	4116028	Argument	ptr		4113015	0					
ANR	4116029	Identifier	ptr		4113015	0					
ANR	4116030	PrimaryExpression	1		4113015	1					
ANR	4116031	GotoStatement	goto escape_backtick ;	2996:4:76488:76508	4113015	1	True				
ANR	4116032	Identifier	escape_backtick		4113015	0					
ANR	4116033	IdentifierDeclStatement	bool empty = false ;	2999:2:76521:76539	4113015	1	True				
ANR	4116034	IdentifierDecl	empty = false		4113015	0					
ANR	4116035	IdentifierDeclType	bool		4113015	0					
ANR	4116036	Identifier	empty		4113015	1					
ANR	4116037	AssignmentExpression	empty = false		4113015	2		=			
ANR	4116038	Identifier	false		4113015	0					
ANR	4116039	Identifier	false		4113015	1					
ANR	4116040	IdentifierDeclStatement	int oneline = 1 ;	3000:2:76543:76558	4113015	2	True				
ANR	4116041	IdentifierDecl	oneline = 1		4113015	0					
ANR	4116042	IdentifierDeclType	int		4113015	0					
ANR	4116043	Identifier	oneline		4113015	1					
ANR	4116044	AssignmentExpression	oneline = 1		4113015	2		=			
ANR	4116045	Identifier	oneline		4113015	0					
ANR	4116046	PrimaryExpression	1		4113015	1					
ANR	4116047	IfStatement	if ( ptr [ 1 ] == '`' )		4113015	3					
ANR	4116048	Condition	ptr [ 1 ] == '`'	3001:6:76566:76578	4113015	0	True				
ANR	4116049	EqualityExpression	ptr [ 1 ] == '`'		4113015	0		==			
ANR	4116050	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116051	Identifier	ptr		4113015	0					
ANR	4116052	PrimaryExpression	1		4113015	1					
ANR	4116053	PrimaryExpression	'`'		4113015	1					
ANR	4116054	CompoundStatement		496:21:11930:11930	4113015	1					
ANR	4116055	ExpressionStatement	"memmove ( ptr , ptr + 1 , strlen ( ptr ) )"	3002:3:76586:76622	4113015	0	True				
ANR	4116056	CallExpression	"memmove ( ptr , ptr + 1 , strlen ( ptr ) )"		4113015	0					
ANR	4116057	Callee	memmove		4113015	0					
ANR	4116058	Identifier	memmove		4113015	0					
ANR	4116059	ArgumentList	ptr		4113015	1					
ANR	4116060	Argument	ptr		4113015	0					
ANR	4116061	Identifier	ptr		4113015	0					
ANR	4116062	Argument	ptr + 1		4113015	1					
ANR	4116063	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4116064	Identifier	ptr		4113015	0					
ANR	4116065	PrimaryExpression	1		4113015	1					
ANR	4116066	Argument	strlen ( ptr )		4113015	2					
ANR	4116067	CallExpression	strlen ( ptr )		4113015	0					
ANR	4116068	Callee	strlen		4113015	0					
ANR	4116069	Identifier	strlen		4113015	0					
ANR	4116070	ArgumentList	ptr		4113015	1					
ANR	4116071	Argument	ptr		4113015	0					
ANR	4116072	Identifier	ptr		4113015	0					
ANR	4116073	ExpressionStatement	oneline = 0	3003:3:76627:76638	4113015	1	True				
ANR	4116074	AssignmentExpression	oneline = 0		4113015	0		=			
ANR	4116075	Identifier	oneline		4113015	0					
ANR	4116076	PrimaryExpression	0		4113015	1					
ANR	4116077	ExpressionStatement	empty = true	3004:3:76643:76655	4113015	2	True				
ANR	4116078	AssignmentExpression	empty = true		4113015	0		=			
ANR	4116079	Identifier	empty		4113015	0					
ANR	4116080	Identifier	true		4113015	1					
ANR	4116081	ExpressionStatement	"ptr2 = strchr ( ptr + 1 , '`' )"	3006:2:76663:76691	4113015	4	True				
ANR	4116082	AssignmentExpression	"ptr2 = strchr ( ptr + 1 , '`' )"		4113015	0		=			
ANR	4116083	Identifier	ptr2		4113015	0					
ANR	4116084	CallExpression	"strchr ( ptr + 1 , '`' )"		4113015	1					
ANR	4116085	Callee	strchr		4113015	0					
ANR	4116086	Identifier	strchr		4113015	0					
ANR	4116087	ArgumentList	ptr + 1		4113015	1					
ANR	4116088	Argument	ptr + 1		4113015	0					
ANR	4116089	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4116090	Identifier	ptr		4113015	0					
ANR	4116091	PrimaryExpression	1		4113015	1					
ANR	4116092	Argument	'`'		4113015	1					
ANR	4116093	PrimaryExpression	'`'		4113015	0					
ANR	4116094	IfStatement	if ( empty )		4113015	5					
ANR	4116095	Condition	empty	3007:6:76699:76703	4113015	0	True				
ANR	4116096	Identifier	empty		4113015	0					
ANR	4116097	CompoundStatement		502:13:12055:12055	4113015	1					
ANR	4116098	ElseStatement	else		4113015	0					
ANR	4116099	IfStatement	if ( ! ptr2 )		4113015	0					
ANR	4116100	Condition	! ptr2	3009:13:76741:76745	4113015	0	True				
ANR	4116101	UnaryOperationExpression	! ptr2		4113015	0					
ANR	4116102	UnaryOperator	!		4113015	0					
ANR	4116103	Identifier	ptr2		4113015	1					
ANR	4116104	CompoundStatement		504:20:12097:12097	4113015	1					
ANR	4116105	ExpressionStatement	"eprintf ( ""parse: Missing backtick in expression.\\n"" )"	3010:3:76753:76805	4113015	0	True				
ANR	4116106	CallExpression	"eprintf ( ""parse: Missing backtick in expression.\\n"" )"		4113015	0					
ANR	4116107	Callee	eprintf		4113015	0					
ANR	4116108	Identifier	eprintf		4113015	0					
ANR	4116109	ArgumentList	"""parse: Missing backtick in expression.\\n"""		4113015	1					
ANR	4116110	Argument	"""parse: Missing backtick in expression.\\n"""		4113015	0					
ANR	4116111	PrimaryExpression	"""parse: Missing backtick in expression.\\n"""		4113015	0					
ANR	4116112	GotoStatement	goto fail ;	3011:3:76810:76819	4113015	1	True				
ANR	4116113	Identifier	fail		4113015	0					
ANR	4116114	ElseStatement	else		4113015	0					
ANR	4116115	CompoundStatement		508:3:12184:12212	4113015	0					
ANR	4116116	IdentifierDeclStatement	int value = core -> num -> value ;	3013:3:76835:76863	4113015	0	True				
ANR	4116117	IdentifierDecl	value = core -> num -> value		4113015	0					
ANR	4116118	IdentifierDeclType	int		4113015	0					
ANR	4116119	Identifier	value		4113015	1					
ANR	4116120	AssignmentExpression	value = core -> num -> value		4113015	2		=			
ANR	4116121	Identifier	value		4113015	0					
ANR	4116122	PtrMemberAccess	core -> num -> value		4113015	1					
ANR	4116123	PtrMemberAccess	core -> num		4113015	0					
ANR	4116124	Identifier	core		4113015	0					
ANR	4116125	Identifier	num		4113015	1					
ANR	4116126	Identifier	value		4113015	1					
ANR	4116127	ExpressionStatement	* ptr = '\\0'	3014:3:76868:76879	4113015	1	True				
ANR	4116128	AssignmentExpression	* ptr = '\\0'		4113015	0		=			
ANR	4116129	UnaryOperationExpression	* ptr		4113015	0					
ANR	4116130	UnaryOperator	*		4113015	0					
ANR	4116131	Identifier	ptr		4113015	1					
ANR	4116132	PrimaryExpression	'\\0'		4113015	1					
ANR	4116133	ExpressionStatement	* ptr2 = '\\0'	3015:3:76884:76896	4113015	2	True				
ANR	4116134	AssignmentExpression	* ptr2 = '\\0'		4113015	0		=			
ANR	4116135	UnaryOperationExpression	* ptr2		4113015	0					
ANR	4116136	UnaryOperator	*		4113015	0					
ANR	4116137	Identifier	ptr2		4113015	1					
ANR	4116138	PrimaryExpression	'\\0'		4113015	1					
ANR	4116139	IfStatement	if ( ptr [ 1 ] == '!' )		4113015	3					
ANR	4116140	Condition	ptr [ 1 ] == '!'	3016:7:76905:76917	4113015	0	True				
ANR	4116141	EqualityExpression	ptr [ 1 ] == '!'		4113015	0		==			
ANR	4116142	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116143	Identifier	ptr		4113015	0					
ANR	4116144	PrimaryExpression	1		4113015	1					
ANR	4116145	PrimaryExpression	'!'		4113015	1					
ANR	4116146	CompoundStatement		511:22:12269:12269	4113015	1					
ANR	4116147	ExpressionStatement	"str = r_core_cmd_str_pipe ( core , ptr + 1 )"	3017:4:76926:76967	4113015	0	True				
ANR	4116148	AssignmentExpression	"str = r_core_cmd_str_pipe ( core , ptr + 1 )"		4113015	0		=			
ANR	4116149	Identifier	str		4113015	0					
ANR	4116150	CallExpression	"r_core_cmd_str_pipe ( core , ptr + 1 )"		4113015	1					
ANR	4116151	Callee	r_core_cmd_str_pipe		4113015	0					
ANR	4116152	Identifier	r_core_cmd_str_pipe		4113015	0					
ANR	4116153	ArgumentList	core		4113015	1					
ANR	4116154	Argument	core		4113015	0					
ANR	4116155	Identifier	core		4113015	0					
ANR	4116156	Argument	ptr + 1		4113015	1					
ANR	4116157	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4116158	Identifier	ptr		4113015	0					
ANR	4116159	PrimaryExpression	1		4113015	1					
ANR	4116160	ElseStatement	else		4113015	0					
ANR	4116161	CompoundStatement		515:4:12387:12442	4113015	0					
ANR	4116162	IdentifierDeclStatement	"int ocolor = r_config_get_i ( core -> config , ""scr.color"" ) ;"	3020:4:77038:77093	4113015	0	True				
ANR	4116163	IdentifierDecl	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		4113015	0					
ANR	4116164	IdentifierDeclType	int		4113015	0					
ANR	4116165	Identifier	ocolor		4113015	1					
ANR	4116166	AssignmentExpression	"ocolor = r_config_get_i ( core -> config , ""scr.color"" )"		4113015	2		=			
ANR	4116167	Identifier	ocolor		4113015	0					
ANR	4116168	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4113015	1					
ANR	4116169	Callee	r_config_get_i		4113015	0					
ANR	4116170	Identifier	r_config_get_i		4113015	0					
ANR	4116171	ArgumentList	core -> config		4113015	1					
ANR	4116172	Argument	core -> config		4113015	0					
ANR	4116173	PtrMemberAccess	core -> config		4113015	0					
ANR	4116174	Identifier	core		4113015	0					
ANR	4116175	Identifier	config		4113015	1					
ANR	4116176	Argument	"""scr.color"""		4113015	1					
ANR	4116177	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4116178	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"	3021:4:77099:77144	4113015	1	True				
ANR	4116179	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"		4113015	0					
ANR	4116180	Callee	r_config_set_i		4113015	0					
ANR	4116181	Identifier	r_config_set_i		4113015	0					
ANR	4116182	ArgumentList	core -> config		4113015	1					
ANR	4116183	Argument	core -> config		4113015	0					
ANR	4116184	PtrMemberAccess	core -> config		4113015	0					
ANR	4116185	Identifier	core		4113015	0					
ANR	4116186	Identifier	config		4113015	1					
ANR	4116187	Argument	"""scr.color"""		4113015	1					
ANR	4116188	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4116189	Argument	0		4113015	2					
ANR	4116190	PrimaryExpression	0		4113015	0					
ANR	4116191	ExpressionStatement	core -> cmd_in_backticks = true	3022:4:77150:77179	4113015	2	True				
ANR	4116192	AssignmentExpression	core -> cmd_in_backticks = true		4113015	0		=			
ANR	4116193	PtrMemberAccess	core -> cmd_in_backticks		4113015	0					
ANR	4116194	Identifier	core		4113015	0					
ANR	4116195	Identifier	cmd_in_backticks		4113015	1					
ANR	4116196	Identifier	true		4113015	1					
ANR	4116197	ExpressionStatement	"str = r_core_cmd_str ( core , ptr + 1 )"	3023:4:77185:77221	4113015	3	True				
ANR	4116198	AssignmentExpression	"str = r_core_cmd_str ( core , ptr + 1 )"		4113015	0		=			
ANR	4116199	Identifier	str		4113015	0					
ANR	4116200	CallExpression	"r_core_cmd_str ( core , ptr + 1 )"		4113015	1					
ANR	4116201	Callee	r_core_cmd_str		4113015	0					
ANR	4116202	Identifier	r_core_cmd_str		4113015	0					
ANR	4116203	ArgumentList	core		4113015	1					
ANR	4116204	Argument	core		4113015	0					
ANR	4116205	Identifier	core		4113015	0					
ANR	4116206	Argument	ptr + 1		4113015	1					
ANR	4116207	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4116208	Identifier	ptr		4113015	0					
ANR	4116209	PrimaryExpression	1		4113015	1					
ANR	4116210	ExpressionStatement	core -> cmd_in_backticks = false	3024:4:77227:77257	4113015	4	True				
ANR	4116211	AssignmentExpression	core -> cmd_in_backticks = false		4113015	0		=			
ANR	4116212	PtrMemberAccess	core -> cmd_in_backticks		4113015	0					
ANR	4116213	Identifier	core		4113015	0					
ANR	4116214	Identifier	cmd_in_backticks		4113015	1					
ANR	4116215	Identifier	false		4113015	1					
ANR	4116216	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"	3025:4:77263:77313	4113015	5	True				
ANR	4116217	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , ocolor )"		4113015	0					
ANR	4116218	Callee	r_config_set_i		4113015	0					
ANR	4116219	Identifier	r_config_set_i		4113015	0					
ANR	4116220	ArgumentList	core -> config		4113015	1					
ANR	4116221	Argument	core -> config		4113015	0					
ANR	4116222	PtrMemberAccess	core -> config		4113015	0					
ANR	4116223	Identifier	core		4113015	0					
ANR	4116224	Identifier	config		4113015	1					
ANR	4116225	Argument	"""scr.color"""		4113015	1					
ANR	4116226	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4116227	Argument	ocolor		4113015	2					
ANR	4116228	Identifier	ocolor		4113015	0					
ANR	4116229	IfStatement	if ( ! str )		4113015	4					
ANR	4116230	Condition	! str	3027:7:77327:77330	4113015	0	True				
ANR	4116231	UnaryOperationExpression	! str		4113015	0					
ANR	4116232	UnaryOperator	!		4113015	0					
ANR	4116233	Identifier	str		4113015	1					
ANR	4116234	CompoundStatement		522:13:12682:12682	4113015	1					
ANR	4116235	GotoStatement	goto fail ;	3028:4:77339:77348	4113015	0	True				
ANR	4116236	Identifier	fail		4113015	0					
ANR	4116237	IfStatement	if ( * str == '|' || * str == '*' )		4113015	5					
ANR	4116238	Condition	* str == '|' || * str == '*'	3031:7:77417:77442	4113015	0	True				
ANR	4116239	OrExpression	* str == '|' || * str == '*'		4113015	0		||			
ANR	4116240	EqualityExpression	* str == '|'		4113015	0		==			
ANR	4116241	UnaryOperationExpression	* str		4113015	0					
ANR	4116242	UnaryOperator	*		4113015	0					
ANR	4116243	Identifier	str		4113015	1					
ANR	4116244	PrimaryExpression	'|'		4113015	1					
ANR	4116245	EqualityExpression	* str == '*'		4113015	1		==			
ANR	4116246	UnaryOperationExpression	* str		4113015	0					
ANR	4116247	UnaryOperator	*		4113015	0					
ANR	4116248	Identifier	str		4113015	1					
ANR	4116249	PrimaryExpression	'*'		4113015	1					
ANR	4116250	CompoundStatement		526:35:12794:12794	4113015	1					
ANR	4116251	ExpressionStatement	"eprintf ( ""r_core_cmd_subst_i: invalid backticked command\\n"" )"	3032:4:77451:77511	4113015	0	True				
ANR	4116252	CallExpression	"eprintf ( ""r_core_cmd_subst_i: invalid backticked command\\n"" )"		4113015	0					
ANR	4116253	Callee	eprintf		4113015	0					
ANR	4116254	Identifier	eprintf		4113015	0					
ANR	4116255	ArgumentList	"""r_core_cmd_subst_i: invalid backticked command\\n"""		4113015	1					
ANR	4116256	Argument	"""r_core_cmd_subst_i: invalid backticked command\\n"""		4113015	0					
ANR	4116257	PrimaryExpression	"""r_core_cmd_subst_i: invalid backticked command\\n"""		4113015	0					
ANR	4116258	ExpressionStatement	free ( str )	3033:4:77517:77527	4113015	1	True				
ANR	4116259	CallExpression	free ( str )		4113015	0					
ANR	4116260	Callee	free		4113015	0					
ANR	4116261	Identifier	free		4113015	0					
ANR	4116262	ArgumentList	str		4113015	1					
ANR	4116263	Argument	str		4113015	0					
ANR	4116264	Identifier	str		4113015	0					
ANR	4116265	GotoStatement	goto fail ;	3034:4:77533:77542	4113015	2	True				
ANR	4116266	Identifier	fail		4113015	0					
ANR	4116267	IfStatement	if ( oneline && str )		4113015	6					
ANR	4116268	Condition	oneline && str	3036:7:77556:77569	4113015	0	True				
ANR	4116269	AndExpression	oneline && str		4113015	0		&&			
ANR	4116270	Identifier	oneline		4113015	0					
ANR	4116271	Identifier	str		4113015	1					
ANR	4116272	CompoundStatement		531:23:12921:12921	4113015	1					
ANR	4116273	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		4113015	0					
ANR	4116274	ForInit	i = 0 ;	3037:9:77583:77588	4113015	0	True				
ANR	4116275	AssignmentExpression	i = 0		4113015	0		=			
ANR	4116276	Identifier	i		4113015	0					
ANR	4116277	PrimaryExpression	0		4113015	1					
ANR	4116278	Condition	str [ i ]	3037:16:77590:77595	4113015	1	True				
ANR	4116279	ArrayIndexing	str [ i ]		4113015	0					
ANR	4116280	Identifier	str		4113015	0					
ANR	4116281	Identifier	i		4113015	1					
ANR	4116282	PostIncDecOperationExpression	i ++	3037:24:77598:77600	4113015	2	True				
ANR	4116283	Identifier	i		4113015	0					
ANR	4116284	IncDec	++		4113015	1					
ANR	4116285	CompoundStatement		532:29:12952:12952	4113015	3					
ANR	4116286	IfStatement	if ( str [ i ] == '\\n' )		4113015	0					
ANR	4116287	Condition	str [ i ] == '\\n'	3038:9:77614:77627	4113015	0	True				
ANR	4116288	EqualityExpression	str [ i ] == '\\n'		4113015	0		==			
ANR	4116289	ArrayIndexing	str [ i ]		4113015	0					
ANR	4116290	Identifier	str		4113015	0					
ANR	4116291	Identifier	i		4113015	1					
ANR	4116292	PrimaryExpression	'\\n'		4113015	1					
ANR	4116293	CompoundStatement		533:25:12979:12979	4113015	1					
ANR	4116294	ExpressionStatement	str [ i ] = ' '	3039:6:77638:77650	4113015	0	True				
ANR	4116295	AssignmentExpression	str [ i ] = ' '		4113015	0		=			
ANR	4116296	ArrayIndexing	str [ i ]		4113015	0					
ANR	4116297	Identifier	str		4113015	0					
ANR	4116298	Identifier	i		4113015	1					
ANR	4116299	PrimaryExpression	' '		4113015	1					
ANR	4116300	ExpressionStatement	"str = r_str_append ( str , ptr2 + 1 )"	3043:3:77673:77707	4113015	7	True				
ANR	4116301	AssignmentExpression	"str = r_str_append ( str , ptr2 + 1 )"		4113015	0		=			
ANR	4116302	Identifier	str		4113015	0					
ANR	4116303	CallExpression	"r_str_append ( str , ptr2 + 1 )"		4113015	1					
ANR	4116304	Callee	r_str_append		4113015	0					
ANR	4116305	Identifier	r_str_append		4113015	0					
ANR	4116306	ArgumentList	str		4113015	1					
ANR	4116307	Argument	str		4113015	0					
ANR	4116308	Identifier	str		4113015	0					
ANR	4116309	Argument	ptr2 + 1		4113015	1					
ANR	4116310	AdditiveExpression	ptr2 + 1		4113015	0		+			
ANR	4116311	Identifier	ptr2		4113015	0					
ANR	4116312	PrimaryExpression	1		4113015	1					
ANR	4116313	ExpressionStatement	"cmd = r_str_append ( strdup ( cmd ) , str )"	3044:3:77712:77750	4113015	8	True				
ANR	4116314	AssignmentExpression	"cmd = r_str_append ( strdup ( cmd ) , str )"		4113015	0		=			
ANR	4116315	Identifier	cmd		4113015	0					
ANR	4116316	CallExpression	"r_str_append ( strdup ( cmd ) , str )"		4113015	1					
ANR	4116317	Callee	r_str_append		4113015	0					
ANR	4116318	Identifier	r_str_append		4113015	0					
ANR	4116319	ArgumentList	strdup ( cmd )		4113015	1					
ANR	4116320	Argument	strdup ( cmd )		4113015	0					
ANR	4116321	CallExpression	strdup ( cmd )		4113015	0					
ANR	4116322	Callee	strdup		4113015	0					
ANR	4116323	Identifier	strdup		4113015	0					
ANR	4116324	ArgumentList	cmd		4113015	1					
ANR	4116325	Argument	cmd		4113015	0					
ANR	4116326	Identifier	cmd		4113015	0					
ANR	4116327	Argument	str		4113015	1					
ANR	4116328	Identifier	str		4113015	0					
ANR	4116329	ExpressionStatement	core -> num -> value = value	3045:3:77755:77779	4113015	9	True				
ANR	4116330	AssignmentExpression	core -> num -> value = value		4113015	0		=			
ANR	4116331	PtrMemberAccess	core -> num -> value		4113015	0					
ANR	4116332	PtrMemberAccess	core -> num		4113015	0					
ANR	4116333	Identifier	core		4113015	0					
ANR	4116334	Identifier	num		4113015	1					
ANR	4116335	Identifier	value		4113015	1					
ANR	4116336	Identifier	value		4113015	1					
ANR	4116337	ExpressionStatement	"ret = r_core_cmd_subst ( core , cmd )"	3046:3:77784:77818	4113015	10	True				
ANR	4116338	AssignmentExpression	"ret = r_core_cmd_subst ( core , cmd )"		4113015	0		=			
ANR	4116339	Identifier	ret		4113015	0					
ANR	4116340	CallExpression	"r_core_cmd_subst ( core , cmd )"		4113015	1					
ANR	4116341	Callee	r_core_cmd_subst		4113015	0					
ANR	4116342	Identifier	r_core_cmd_subst		4113015	0					
ANR	4116343	ArgumentList	core		4113015	1					
ANR	4116344	Argument	core		4113015	0					
ANR	4116345	Identifier	core		4113015	0					
ANR	4116346	Argument	cmd		4113015	1					
ANR	4116347	Identifier	cmd		4113015	0					
ANR	4116348	ExpressionStatement	free ( cmd )	3047:3:77823:77833	4113015	11	True				
ANR	4116349	CallExpression	free ( cmd )		4113015	0					
ANR	4116350	Callee	free		4113015	0					
ANR	4116351	Identifier	free		4113015	0					
ANR	4116352	ArgumentList	cmd		4113015	1					
ANR	4116353	Argument	cmd		4113015	0					
ANR	4116354	Identifier	cmd		4113015	0					
ANR	4116355	IfStatement	if ( scr_html != - 1 )		4113015	12					
ANR	4116356	Condition	scr_html != - 1	3048:7:77842:77855	4113015	0	True				
ANR	4116357	EqualityExpression	scr_html != - 1		4113015	0		!=			
ANR	4116358	Identifier	scr_html		4113015	0					
ANR	4116359	UnaryOperationExpression	- 1		4113015	1					
ANR	4116360	UnaryOperator	-		4113015	0					
ANR	4116361	PrimaryExpression	1		4113015	1					
ANR	4116362	CompoundStatement		543:23:13207:13207	4113015	1					
ANR	4116363	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	3049:4:77864:77915	4113015	0	True				
ANR	4116364	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		4113015	0					
ANR	4116365	Callee	r_config_set_i		4113015	0					
ANR	4116366	Identifier	r_config_set_i		4113015	0					
ANR	4116367	ArgumentList	core -> config		4113015	1					
ANR	4116368	Argument	core -> config		4113015	0					
ANR	4116369	PtrMemberAccess	core -> config		4113015	0					
ANR	4116370	Identifier	core		4113015	0					
ANR	4116371	Identifier	config		4113015	1					
ANR	4116372	Argument	"""scr.html"""		4113015	1					
ANR	4116373	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4116374	Argument	scr_html		4113015	2					
ANR	4116375	Identifier	scr_html		4113015	0					
ANR	4116376	ExpressionStatement	free ( str )	3051:3:77925:77935	4113015	13	True				
ANR	4116377	CallExpression	free ( str )		4113015	0					
ANR	4116378	Callee	free		4113015	0					
ANR	4116379	Identifier	free		4113015	0					
ANR	4116380	ArgumentList	str		4113015	1					
ANR	4116381	Argument	str		4113015	0					
ANR	4116382	Identifier	str		4113015	0					
ANR	4116383	ExpressionStatement	r_list_free ( tmpenvs )	3052:3:77940:77961	4113015	14	True				
ANR	4116384	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4116385	Callee	r_list_free		4113015	0					
ANR	4116386	Identifier	r_list_free		4113015	0					
ANR	4116387	ArgumentList	tmpenvs		4113015	1					
ANR	4116388	Argument	tmpenvs		4113015	0					
ANR	4116389	Identifier	tmpenvs		4113015	0					
ANR	4116390	ReturnStatement	return ret ;	3053:3:77966:77976	4113015	15	True				
ANR	4116391	Identifier	ret		4113015	0					
ANR	4116392	Label	escape_backtick :	3056:0:77985:78000	4113015	43	True				
ANR	4116393	Identifier	escape_backtick		4113015	0					
ANR	4116394	IfStatement	"if ( * cmd != '""' && * cmd )"		4113015	44					
ANR	4116395	Condition	"* cmd != '""' && * cmd"	3058:5:78035:78053	4113015	0	True				
ANR	4116396	AndExpression	"* cmd != '""' && * cmd"		4113015	0		&&			
ANR	4116397	EqualityExpression	"* cmd != '""'"		4113015	0		!=			
ANR	4116398	UnaryOperationExpression	* cmd		4113015	0					
ANR	4116399	UnaryOperator	*		4113015	0					
ANR	4116400	Identifier	cmd		4113015	1					
ANR	4116401	PrimaryExpression	"'""'"		4113015	1					
ANR	4116402	UnaryOperationExpression	* cmd		4113015	1					
ANR	4116403	UnaryOperator	*		4113015	0					
ANR	4116404	Identifier	cmd		4113015	1					
ANR	4116405	CompoundStatement		554:2:13409:13443	4113015	1					
ANR	4116406	IdentifierDeclStatement	"const char * s = strstr ( cmd , ""~?"" ) ;"	3059:2:78060:78094	4113015	0	True				
ANR	4116407	IdentifierDecl	"* s = strstr ( cmd , ""~?"" )"		4113015	0					
ANR	4116408	IdentifierDeclType	const char *		4113015	0					
ANR	4116409	Identifier	s		4113015	1					
ANR	4116410	AssignmentExpression	"* s = strstr ( cmd , ""~?"" )"		4113015	2		=			
ANR	4116411	Identifier	s		4113015	0					
ANR	4116412	CallExpression	"strstr ( cmd , ""~?"" )"		4113015	1					
ANR	4116413	Callee	strstr		4113015	0					
ANR	4116414	Identifier	strstr		4113015	0					
ANR	4116415	ArgumentList	cmd		4113015	1					
ANR	4116416	Argument	cmd		4113015	0					
ANR	4116417	Identifier	cmd		4113015	0					
ANR	4116418	Argument	"""~?"""		4113015	1					
ANR	4116419	PrimaryExpression	"""~?"""		4113015	0					
ANR	4116420	IfStatement	if ( s )		4113015	1					
ANR	4116421	Condition	s	3060:6:78102:78102	4113015	0	True				
ANR	4116422	Identifier	s		4113015	0					
ANR	4116423	CompoundStatement		556:3:13459:13480	4113015	1					
ANR	4116424	IdentifierDeclStatement	bool showHelp = false ;	3061:3:78110:78131	4113015	0	True				
ANR	4116425	IdentifierDecl	showHelp = false		4113015	0					
ANR	4116426	IdentifierDeclType	bool		4113015	0					
ANR	4116427	Identifier	showHelp		4113015	1					
ANR	4116428	AssignmentExpression	showHelp = false		4113015	2		=			
ANR	4116429	Identifier	false		4113015	0					
ANR	4116430	Identifier	false		4113015	1					
ANR	4116431	IfStatement	if ( cmd == s )		4113015	1					
ANR	4116432	Condition	cmd == s	3062:7:78140:78147	4113015	0	True				
ANR	4116433	EqualityExpression	cmd == s		4113015	0		==			
ANR	4116434	Identifier	cmd		4113015	0					
ANR	4116435	Identifier	s		4113015	1					
ANR	4116436	CompoundStatement		557:17:13499:13499	4113015	1					
ANR	4116437	ExpressionStatement	showHelp = true	3065:4:78177:78192	4113015	0	True				
ANR	4116438	AssignmentExpression	showHelp = true		4113015	0		=			
ANR	4116439	Identifier	showHelp		4113015	0					
ANR	4116440	Identifier	true		4113015	1					
ANR	4116441	ElseStatement	else		4113015	0					
ANR	4116442	CompoundStatement		561:10:13553:13553	4113015	0					
ANR	4116443	IfStatement	"if ( ! strcmp ( s , ""~??"" ) )"		4113015	0					
ANR	4116444	Condition	"! strcmp ( s , ""~??"" )"	3069:8:78239:78256	4113015	0	True				
ANR	4116445	UnaryOperationExpression	"! strcmp ( s , ""~??"" )"		4113015	0					
ANR	4116446	UnaryOperator	!		4113015	0					
ANR	4116447	CallExpression	"strcmp ( s , ""~??"" )"		4113015	1					
ANR	4116448	Callee	strcmp		4113015	0					
ANR	4116449	Identifier	strcmp		4113015	0					
ANR	4116450	ArgumentList	s		4113015	1					
ANR	4116451	Argument	s		4113015	0					
ANR	4116452	Identifier	s		4113015	0					
ANR	4116453	Argument	"""~??"""		4113015	1					
ANR	4116454	PrimaryExpression	"""~??"""		4113015	0					
ANR	4116455	CompoundStatement		564:28:13608:13608	4113015	1					
ANR	4116456	ExpressionStatement	showHelp = true	3070:5:78266:78281	4113015	0	True				
ANR	4116457	AssignmentExpression	showHelp = true		4113015	0		=			
ANR	4116458	Identifier	showHelp		4113015	0					
ANR	4116459	Identifier	true		4113015	1					
ANR	4116460	IfStatement	if ( showHelp )		4113015	2					
ANR	4116461	Condition	showHelp	3073:7:78301:78308	4113015	0	True				
ANR	4116462	Identifier	showHelp		4113015	0					
ANR	4116463	CompoundStatement		568:17:13660:13660	4113015	1					
ANR	4116464	ExpressionStatement	r_cons_grep_help ( )	3074:4:78317:78336	4113015	0	True				
ANR	4116465	CallExpression	r_cons_grep_help ( )		4113015	0					
ANR	4116466	Callee	r_cons_grep_help		4113015	0					
ANR	4116467	Identifier	r_cons_grep_help		4113015	0					
ANR	4116468	ArgumentList			4113015	1					
ANR	4116469	ExpressionStatement	r_list_free ( tmpenvs )	3075:4:78342:78363	4113015	1	True				
ANR	4116470	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4116471	Callee	r_list_free		4113015	0					
ANR	4116472	Identifier	r_list_free		4113015	0					
ANR	4116473	ArgumentList	tmpenvs		4113015	1					
ANR	4116474	Argument	tmpenvs		4113015	0					
ANR	4116475	Identifier	tmpenvs		4113015	0					
ANR	4116476	ReturnStatement	return true ;	3076:4:78369:78380	4113015	2	True				
ANR	4116477	Identifier	true		4113015	0					
ANR	4116478	IfStatement	if ( * cmd != '.' )		4113015	45					
ANR	4116479	Condition	* cmd != '.'	3080:5:78399:78409	4113015	0	True				
ANR	4116480	EqualityExpression	* cmd != '.'		4113015	0		!=			
ANR	4116481	UnaryOperationExpression	* cmd		4113015	0					
ANR	4116482	UnaryOperator	*		4113015	0					
ANR	4116483	Identifier	cmd		4113015	1					
ANR	4116484	PrimaryExpression	'.'		4113015	1					
ANR	4116485	CompoundStatement		575:18:13761:13761	4113015	1					
ANR	4116486	ExpressionStatement	"grep = r_cons_grep_strip ( cmd , quotestr )"	3081:2:78416:78456	4113015	0	True				
ANR	4116487	AssignmentExpression	"grep = r_cons_grep_strip ( cmd , quotestr )"		4113015	0		=			
ANR	4116488	Identifier	grep		4113015	0					
ANR	4116489	CallExpression	"r_cons_grep_strip ( cmd , quotestr )"		4113015	1					
ANR	4116490	Callee	r_cons_grep_strip		4113015	0					
ANR	4116491	Identifier	r_cons_grep_strip		4113015	0					
ANR	4116492	ArgumentList	cmd		4113015	1					
ANR	4116493	Argument	cmd		4113015	0					
ANR	4116494	Identifier	cmd		4113015	0					
ANR	4116495	Argument	quotestr		4113015	1					
ANR	4116496	Identifier	quotestr		4113015	0					
ANR	4116497	IfStatement	"if ( * cmd != '""' )"		4113015	46					
ANR	4116498	Condition	"* cmd != '""'"	3086:5:78536:78546	4113015	0	True				
ANR	4116499	EqualityExpression	"* cmd != '""'"		4113015	0		!=			
ANR	4116500	UnaryOperationExpression	* cmd		4113015	0					
ANR	4116501	UnaryOperator	*		4113015	0					
ANR	4116502	Identifier	cmd		4113015	1					
ANR	4116503	PrimaryExpression	"'""'"		4113015	1					
ANR	4116504	CompoundStatement		581:18:13898:13898	4113015	1					
ANR	4116505	ExpressionStatement	"ptr = strchr ( cmd , '@' )"	3087:2:78553:78576	4113015	0	True				
ANR	4116506	AssignmentExpression	"ptr = strchr ( cmd , '@' )"		4113015	0		=			
ANR	4116507	Identifier	ptr		4113015	0					
ANR	4116508	CallExpression	"strchr ( cmd , '@' )"		4113015	1					
ANR	4116509	Callee	strchr		4113015	0					
ANR	4116510	Identifier	strchr		4113015	0					
ANR	4116511	ArgumentList	cmd		4113015	1					
ANR	4116512	Argument	cmd		4113015	0					
ANR	4116513	Identifier	cmd		4113015	0					
ANR	4116514	Argument	'@'		4113015	1					
ANR	4116515	PrimaryExpression	'@'		4113015	0					
ANR	4116516	IfStatement	if ( ptr == cmd + 1 && * cmd == '?' )		4113015	1					
ANR	4116517	Condition	ptr == cmd + 1 && * cmd == '?'	3088:6:78584:78612	4113015	0	True				
ANR	4116518	AndExpression	ptr == cmd + 1 && * cmd == '?'		4113015	0		&&			
ANR	4116519	EqualityExpression	ptr == cmd + 1		4113015	0		==			
ANR	4116520	Identifier	ptr		4113015	0					
ANR	4116521	AdditiveExpression	cmd + 1		4113015	1		+			
ANR	4116522	Identifier	cmd		4113015	0					
ANR	4116523	PrimaryExpression	1		4113015	1					
ANR	4116524	EqualityExpression	* cmd == '?'		4113015	1		==			
ANR	4116525	UnaryOperationExpression	* cmd		4113015	0					
ANR	4116526	UnaryOperator	*		4113015	0					
ANR	4116527	Identifier	cmd		4113015	1					
ANR	4116528	PrimaryExpression	'?'		4113015	1					
ANR	4116529	CompoundStatement		583:37:13964:13964	4113015	1					
ANR	4116530	ExpressionStatement	ptr = NULL	3089:3:78620:78630	4113015	0	True				
ANR	4116531	AssignmentExpression	ptr = NULL		4113015	0		=			
ANR	4116532	Identifier	ptr		4113015	0					
ANR	4116533	Identifier	NULL		4113015	1					
ANR	4116534	ElseStatement	else		4113015	0					
ANR	4116535	CompoundStatement		586:8:13993:13993	4113015	0					
ANR	4116536	ExpressionStatement	ptr = NULL	3092:2:78648:78658	4113015	0	True				
ANR	4116537	AssignmentExpression	ptr = NULL		4113015	0		=			
ANR	4116538	Identifier	ptr		4113015	0					
ANR	4116539	Identifier	NULL		4113015	1					
ANR	4116540	ExpressionStatement	cmd_tmpseek = core -> tmpseek = ptr ? true : false	3095:1:78665:78712	4113015	47	True				
ANR	4116541	AssignmentExpression	cmd_tmpseek = core -> tmpseek = ptr ? true : false		4113015	0		=			
ANR	4116542	Identifier	cmd_tmpseek		4113015	0					
ANR	4116543	AssignmentExpression	core -> tmpseek = ptr ? true : false		4113015	1		=			
ANR	4116544	PtrMemberAccess	core -> tmpseek		4113015	0					
ANR	4116545	Identifier	core		4113015	0					
ANR	4116546	Identifier	tmpseek		4113015	1					
ANR	4116547	ConditionalExpression	ptr ? true : false		4113015	1					
ANR	4116548	Condition	ptr		4113015	0					
ANR	4116549	Identifier	ptr		4113015	0					
ANR	4116550	Identifier	true		4113015	1					
ANR	4116551	Identifier	false		4113015	2					
ANR	4116552	IdentifierDeclStatement	int rc = 0 ;	3096:1:78715:78725	4113015	48	True				
ANR	4116553	IdentifierDecl	rc = 0		4113015	0					
ANR	4116554	IdentifierDeclType	int		4113015	0					
ANR	4116555	Identifier	rc		4113015	1					
ANR	4116556	AssignmentExpression	rc = 0		4113015	2		=			
ANR	4116557	Identifier	rc		4113015	0					
ANR	4116558	PrimaryExpression	0		4113015	1					
ANR	4116559	IfStatement	if ( ptr )		4113015	49					
ANR	4116560	Condition	ptr	3097:5:78732:78734	4113015	0	True				
ANR	4116561	Identifier	ptr		4113015	0					
ANR	4116562	CompoundStatement		605:2:14408:14416	4113015	1					
ANR	4116563	IdentifierDeclStatement	"char * f , * ptr2 = strchr ( ptr + 1 , '!' ) ;"	3098:2:78741:78779	4113015	0	True				
ANR	4116564	IdentifierDecl	* f		4113015	0					
ANR	4116565	IdentifierDeclType	char *		4113015	0					
ANR	4116566	Identifier	f		4113015	1					
ANR	4116567	IdentifierDecl	"* ptr2 = strchr ( ptr + 1 , '!' )"		4113015	1					
ANR	4116568	IdentifierDeclType	char *		4113015	0					
ANR	4116569	Identifier	ptr2		4113015	1					
ANR	4116570	AssignmentExpression	"* ptr2 = strchr ( ptr + 1 , '!' )"		4113015	2		=			
ANR	4116571	Identifier	ptr2		4113015	0					
ANR	4116572	CallExpression	"strchr ( ptr + 1 , '!' )"		4113015	1					
ANR	4116573	Callee	strchr		4113015	0					
ANR	4116574	Identifier	strchr		4113015	0					
ANR	4116575	ArgumentList	ptr + 1		4113015	1					
ANR	4116576	Argument	ptr + 1		4113015	0					
ANR	4116577	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4116578	Identifier	ptr		4113015	0					
ANR	4116579	PrimaryExpression	1		4113015	1					
ANR	4116580	Argument	'!'		4113015	1					
ANR	4116581	PrimaryExpression	'!'		4113015	0					
ANR	4116582	IdentifierDeclStatement	ut64 addr = core -> offset ;	3099:2:78783:78807	4113015	1	True				
ANR	4116583	IdentifierDecl	addr = core -> offset		4113015	0					
ANR	4116584	IdentifierDeclType	ut64		4113015	0					
ANR	4116585	Identifier	addr		4113015	1					
ANR	4116586	AssignmentExpression	addr = core -> offset		4113015	2		=			
ANR	4116587	Identifier	addr		4113015	0					
ANR	4116588	PtrMemberAccess	core -> offset		4113015	1					
ANR	4116589	Identifier	core		4113015	0					
ANR	4116590	Identifier	offset		4113015	1					
ANR	4116591	IdentifierDeclStatement	bool addr_is_set = false ;	3100:2:78811:78835	4113015	2	True				
ANR	4116592	IdentifierDecl	addr_is_set = false		4113015	0					
ANR	4116593	IdentifierDeclType	bool		4113015	0					
ANR	4116594	Identifier	addr_is_set		4113015	1					
ANR	4116595	AssignmentExpression	addr_is_set = false		4113015	2		=			
ANR	4116596	Identifier	false		4113015	0					
ANR	4116597	Identifier	false		4113015	1					
ANR	4116598	IdentifierDeclStatement	char * tmpbits = NULL ;	3101:2:78839:78859	4113015	3	True				
ANR	4116599	IdentifierDecl	* tmpbits = NULL		4113015	0					
ANR	4116600	IdentifierDeclType	char *		4113015	0					
ANR	4116601	Identifier	tmpbits		4113015	1					
ANR	4116602	AssignmentExpression	* tmpbits = NULL		4113015	2		=			
ANR	4116603	Identifier	NULL		4113015	0					
ANR	4116604	Identifier	NULL		4113015	1					
ANR	4116605	IdentifierDeclStatement	const char * offstr = NULL ;	3102:2:78863:78888	4113015	4	True				
ANR	4116606	IdentifierDecl	* offstr = NULL		4113015	0					
ANR	4116607	IdentifierDeclType	const char *		4113015	0					
ANR	4116608	Identifier	offstr		4113015	1					
ANR	4116609	AssignmentExpression	* offstr = NULL		4113015	2		=			
ANR	4116610	Identifier	NULL		4113015	0					
ANR	4116611	Identifier	NULL		4113015	1					
ANR	4116612	IdentifierDeclStatement	bool is_bits_set = false ;	3103:2:78892:78916	4113015	5	True				
ANR	4116613	IdentifierDecl	is_bits_set = false		4113015	0					
ANR	4116614	IdentifierDeclType	bool		4113015	0					
ANR	4116615	Identifier	is_bits_set		4113015	1					
ANR	4116616	AssignmentExpression	is_bits_set = false		4113015	2		=			
ANR	4116617	Identifier	false		4113015	0					
ANR	4116618	Identifier	false		4113015	1					
ANR	4116619	IdentifierDeclStatement	bool is_arch_set = false ;	3104:2:78920:78944	4113015	6	True				
ANR	4116620	IdentifierDecl	is_arch_set = false		4113015	0					
ANR	4116621	IdentifierDeclType	bool		4113015	0					
ANR	4116622	Identifier	is_arch_set		4113015	1					
ANR	4116623	AssignmentExpression	is_arch_set = false		4113015	2		=			
ANR	4116624	Identifier	false		4113015	0					
ANR	4116625	Identifier	false		4113015	1					
ANR	4116626	IdentifierDeclStatement	char * tmpeval = NULL ;	3105:2:78948:78968	4113015	7	True				
ANR	4116627	IdentifierDecl	* tmpeval = NULL		4113015	0					
ANR	4116628	IdentifierDeclType	char *		4113015	0					
ANR	4116629	Identifier	tmpeval		4113015	1					
ANR	4116630	AssignmentExpression	* tmpeval = NULL		4113015	2		=			
ANR	4116631	Identifier	NULL		4113015	0					
ANR	4116632	Identifier	NULL		4113015	1					
ANR	4116633	IdentifierDeclStatement	char * tmpasm = NULL ;	3106:2:78972:78991	4113015	8	True				
ANR	4116634	IdentifierDecl	* tmpasm = NULL		4113015	0					
ANR	4116635	IdentifierDeclType	char *		4113015	0					
ANR	4116636	Identifier	tmpasm		4113015	1					
ANR	4116637	AssignmentExpression	* tmpasm = NULL		4113015	2		=			
ANR	4116638	Identifier	NULL		4113015	0					
ANR	4116639	Identifier	NULL		4113015	1					
ANR	4116640	IdentifierDeclStatement	bool flgspc_changed = false ;	3107:2:78995:79022	4113015	9	True				
ANR	4116641	IdentifierDecl	flgspc_changed = false		4113015	0					
ANR	4116642	IdentifierDeclType	bool		4113015	0					
ANR	4116643	Identifier	flgspc_changed		4113015	1					
ANR	4116644	AssignmentExpression	flgspc_changed = false		4113015	2		=			
ANR	4116645	Identifier	false		4113015	0					
ANR	4116646	Identifier	false		4113015	1					
ANR	4116647	IdentifierDeclStatement	int tmpfd = - 1 ;	3108:2:79026:79040	4113015	10	True				
ANR	4116648	IdentifierDecl	tmpfd = - 1		4113015	0					
ANR	4116649	IdentifierDeclType	int		4113015	0					
ANR	4116650	Identifier	tmpfd		4113015	1					
ANR	4116651	AssignmentExpression	tmpfd = - 1		4113015	2		=			
ANR	4116652	Identifier	tmpfd		4113015	0					
ANR	4116653	UnaryOperationExpression	- 1		4113015	1					
ANR	4116654	UnaryOperator	-		4113015	0					
ANR	4116655	PrimaryExpression	1		4113015	1					
ANR	4116656	IdentifierDeclStatement	"int sz , len ;"	3109:2:79044:79055	4113015	11	True				
ANR	4116657	IdentifierDecl	sz		4113015	0					
ANR	4116658	IdentifierDeclType	int		4113015	0					
ANR	4116659	Identifier	sz		4113015	1					
ANR	4116660	IdentifierDecl	len		4113015	1					
ANR	4116661	IdentifierDeclType	int		4113015	0					
ANR	4116662	Identifier	len		4113015	1					
ANR	4116663	IdentifierDeclStatement	ut8 * buf ;	3110:2:79059:79067	4113015	12	True				
ANR	4116664	IdentifierDecl	* buf		4113015	0					
ANR	4116665	IdentifierDeclType	ut8 *		4113015	0					
ANR	4116666	Identifier	buf		4113015	1					
ANR	4116667	ExpressionStatement	* ptr ++ = '\\0'	3112:2:79072:79085	4113015	13	True				
ANR	4116668	AssignmentExpression	* ptr ++ = '\\0'		4113015	0		=			
ANR	4116669	UnaryOperationExpression	* ptr ++		4113015	0					
ANR	4116670	UnaryOperator	*		4113015	0					
ANR	4116671	PostIncDecOperationExpression	ptr ++		4113015	1					
ANR	4116672	Identifier	ptr		4113015	0					
ANR	4116673	IncDec	++		4113015	1					
ANR	4116674	PrimaryExpression	'\\0'		4113015	1					
ANR	4116675	Label	repeat_arroba :	3113:0:79087:79100	4113015	14	True				
ANR	4116676	Identifier	repeat_arroba		4113015	0					
ANR	4116677	ExpressionStatement	"arroba = ( ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ] ) ? strchr ( ptr + 2 , '@' ) : NULL"	3114:2:79104:79175	4113015	15	True				
ANR	4116678	AssignmentExpression	"arroba = ( ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ] ) ? strchr ( ptr + 2 , '@' ) : NULL"		4113015	0		=			
ANR	4116679	Identifier	arroba		4113015	0					
ANR	4116680	ConditionalExpression	"( ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ] ) ? strchr ( ptr + 2 , '@' ) : NULL"		4113015	1					
ANR	4116681	Condition	ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ]		4113015	0					
ANR	4116682	AndExpression	ptr [ 0 ] && ptr [ 1 ] && ptr [ 2 ]		4113015	0		&&			
ANR	4116683	ArrayIndexing	ptr [ 0 ]		4113015	0					
ANR	4116684	Identifier	ptr		4113015	0					
ANR	4116685	PrimaryExpression	0		4113015	1					
ANR	4116686	AndExpression	ptr [ 1 ] && ptr [ 2 ]		4113015	1		&&			
ANR	4116687	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116688	Identifier	ptr		4113015	0					
ANR	4116689	PrimaryExpression	1		4113015	1					
ANR	4116690	ArrayIndexing	ptr [ 2 ]		4113015	1					
ANR	4116691	Identifier	ptr		4113015	0					
ANR	4116692	PrimaryExpression	2		4113015	1					
ANR	4116693	CallExpression	"strchr ( ptr + 2 , '@' )"		4113015	1					
ANR	4116694	Callee	strchr		4113015	0					
ANR	4116695	Identifier	strchr		4113015	0					
ANR	4116696	ArgumentList	ptr + 2		4113015	1					
ANR	4116697	Argument	ptr + 2		4113015	0					
ANR	4116698	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4116699	Identifier	ptr		4113015	0					
ANR	4116700	PrimaryExpression	2		4113015	1					
ANR	4116701	Argument	'@'		4113015	1					
ANR	4116702	PrimaryExpression	'@'		4113015	0					
ANR	4116703	Identifier	NULL		4113015	2					
ANR	4116704	IfStatement	if ( arroba )		4113015	16					
ANR	4116705	Condition	arroba	3116:6:79183:79188	4113015	0	True				
ANR	4116706	Identifier	arroba		4113015	0					
ANR	4116707	CompoundStatement		611:14:14540:14540	4113015	1					
ANR	4116708	ExpressionStatement	* arroba = 0	3117:3:79196:79207	4113015	0	True				
ANR	4116709	AssignmentExpression	* arroba = 0		4113015	0		=			
ANR	4116710	UnaryOperationExpression	* arroba		4113015	0					
ANR	4116711	UnaryOperator	*		4113015	0					
ANR	4116712	Identifier	arroba		4113015	1					
ANR	4116713	PrimaryExpression	0		4113015	1					
ANR	4116714	ForStatement	for ( ; * ptr == ' ' ; ptr ++ )		4113015	17					
ANR	4116715	Condition	* ptr == ' '	3120:9:79223:79233	4113015	0	True				
ANR	4116716	EqualityExpression	* ptr == ' '		4113015	0		==			
ANR	4116717	UnaryOperationExpression	* ptr		4113015	0					
ANR	4116718	UnaryOperator	*		4113015	0					
ANR	4116719	Identifier	ptr		4113015	1					
ANR	4116720	PrimaryExpression	' '		4113015	1					
ANR	4116721	PostIncDecOperationExpression	ptr ++	3120:22:79236:79240	4113015	1	True				
ANR	4116722	Identifier	ptr		4113015	0					
ANR	4116723	IncDec	++		4113015	1					
ANR	4116724	CompoundStatement		615:29:14592:14592	4113015	2					
ANR	4116725	IfStatement	if ( * ptr && ptr [ 1 ] == ':' )		4113015	18					
ANR	4116726	Condition	* ptr && ptr [ 1 ] == ':'	3123:6:79280:79300	4113015	0	True				
ANR	4116727	AndExpression	* ptr && ptr [ 1 ] == ':'		4113015	0		&&			
ANR	4116728	UnaryOperationExpression	* ptr		4113015	0					
ANR	4116729	UnaryOperator	*		4113015	0					
ANR	4116730	Identifier	ptr		4113015	1					
ANR	4116731	EqualityExpression	ptr [ 1 ] == ':'		4113015	1		==			
ANR	4116732	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116733	Identifier	ptr		4113015	0					
ANR	4116734	PrimaryExpression	1		4113015	1					
ANR	4116735	PrimaryExpression	':'		4113015	1					
ANR	4116736	CompoundStatement		618:29:14652:14652	4113015	1					
ANR	4116737	ElseStatement	else		4113015	0					
ANR	4116738	CompoundStatement		620:9:14688:14688	4113015	0					
ANR	4116739	ExpressionStatement	ptr --	3126:3:79344:79349	4113015	0	True				
ANR	4116740	PostIncDecOperationExpression	ptr --		4113015	0					
ANR	4116741	Identifier	ptr		4113015	0					
ANR	4116742	IncDec	--		4113015	1					
ANR	4116743	ExpressionStatement	ptr = r_str_trim_tail ( ptr )	3129:2:79358:79385	4113015	19	True				
ANR	4116744	AssignmentExpression	ptr = r_str_trim_tail ( ptr )		4113015	0		=			
ANR	4116745	Identifier	ptr		4113015	0					
ANR	4116746	CallExpression	r_str_trim_tail ( ptr )		4113015	1					
ANR	4116747	Callee	r_str_trim_tail		4113015	0					
ANR	4116748	Identifier	r_str_trim_tail		4113015	0					
ANR	4116749	ArgumentList	ptr		4113015	1					
ANR	4116750	Argument	ptr		4113015	0					
ANR	4116751	Identifier	ptr		4113015	0					
ANR	4116752	IfStatement	if ( ptr [ 1 ] == '?' )		4113015	20					
ANR	4116753	Condition	ptr [ 1 ] == '?'	3131:6:79394:79406	4113015	0	True				
ANR	4116754	EqualityExpression	ptr [ 1 ] == '?'		4113015	0		==			
ANR	4116755	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116756	Identifier	ptr		4113015	0					
ANR	4116757	PrimaryExpression	1		4113015	1					
ANR	4116758	PrimaryExpression	'?'		4113015	1					
ANR	4116759	CompoundStatement		626:21:14758:14758	4113015	1					
ANR	4116760	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at )"	3132:3:79414:79449	4113015	0	True				
ANR	4116761	CallExpression	"r_core_cmd_help ( core , help_msg_at )"		4113015	0					
ANR	4116762	Callee	r_core_cmd_help		4113015	0					
ANR	4116763	Identifier	r_core_cmd_help		4113015	0					
ANR	4116764	ArgumentList	core		4113015	1					
ANR	4116765	Argument	core		4113015	0					
ANR	4116766	Identifier	core		4113015	0					
ANR	4116767	Argument	help_msg_at		4113015	1					
ANR	4116768	Identifier	help_msg_at		4113015	0					
ANR	4116769	ElseStatement	else		4113015	0					
ANR	4116770	IfStatement	if ( ptr [ 1 ] == '%' )		4113015	0					
ANR	4116771	Condition	ptr [ 1 ] == '%'	3133:13:79464:79476	4113015	0	True				
ANR	4116772	EqualityExpression	ptr [ 1 ] == '%'		4113015	0		==			
ANR	4116773	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116774	Identifier	ptr		4113015	0					
ANR	4116775	PrimaryExpression	1		4113015	1					
ANR	4116776	PrimaryExpression	'%'		4113015	1					
ANR	4116777	CompoundStatement		630:3:14872:14897	4113015	1					
ANR	4116778	IdentifierDeclStatement	char * k = strdup ( ptr + 2 ) ;	3134:3:79492:79518	4113015	0	True				
ANR	4116779	IdentifierDecl	* k = strdup ( ptr + 2 )		4113015	0					
ANR	4116780	IdentifierDeclType	char *		4113015	0					
ANR	4116781	Identifier	k		4113015	1					
ANR	4116782	AssignmentExpression	* k = strdup ( ptr + 2 )		4113015	2		=			
ANR	4116783	Identifier	k		4113015	0					
ANR	4116784	CallExpression	strdup ( ptr + 2 )		4113015	1					
ANR	4116785	Callee	strdup		4113015	0					
ANR	4116786	Identifier	strdup		4113015	0					
ANR	4116787	ArgumentList	ptr + 2		4113015	1					
ANR	4116788	Argument	ptr + 2		4113015	0					
ANR	4116789	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4116790	Identifier	ptr		4113015	0					
ANR	4116791	PrimaryExpression	2		4113015	1					
ANR	4116792	IdentifierDeclStatement	"char * v = strchr ( k , '=' ) ;"	3135:3:79523:79548	4113015	1	True				
ANR	4116793	IdentifierDecl	"* v = strchr ( k , '=' )"		4113015	0					
ANR	4116794	IdentifierDeclType	char *		4113015	0					
ANR	4116795	Identifier	v		4113015	1					
ANR	4116796	AssignmentExpression	"* v = strchr ( k , '=' )"		4113015	2		=			
ANR	4116797	Identifier	v		4113015	0					
ANR	4116798	CallExpression	"strchr ( k , '=' )"		4113015	1					
ANR	4116799	Callee	strchr		4113015	0					
ANR	4116800	Identifier	strchr		4113015	0					
ANR	4116801	ArgumentList	k		4113015	1					
ANR	4116802	Argument	k		4113015	0					
ANR	4116803	Identifier	k		4113015	0					
ANR	4116804	Argument	'='		4113015	1					
ANR	4116805	PrimaryExpression	'='		4113015	0					
ANR	4116806	IfStatement	if ( v )		4113015	2					
ANR	4116807	Condition	v	3136:7:79557:79557	4113015	0	True				
ANR	4116808	Identifier	v		4113015	0					
ANR	4116809	CompoundStatement		631:10:14909:14909	4113015	1					
ANR	4116810	ExpressionStatement	* v ++ = 0	3137:4:79566:79574	4113015	0	True				
ANR	4116811	AssignmentExpression	* v ++ = 0		4113015	0		=			
ANR	4116812	UnaryOperationExpression	* v ++		4113015	0					
ANR	4116813	UnaryOperator	*		4113015	0					
ANR	4116814	PostIncDecOperationExpression	v ++		4113015	1					
ANR	4116815	Identifier	v		4113015	0					
ANR	4116816	IncDec	++		4113015	1					
ANR	4116817	PrimaryExpression	0		4113015	1					
ANR	4116818	ExpressionStatement	"r_sys_setenv ( k , v )"	3138:4:79580:79599	4113015	1	True				
ANR	4116819	CallExpression	"r_sys_setenv ( k , v )"		4113015	0					
ANR	4116820	Callee	r_sys_setenv		4113015	0					
ANR	4116821	Identifier	r_sys_setenv		4113015	0					
ANR	4116822	ArgumentList	k		4113015	1					
ANR	4116823	Argument	k		4113015	0					
ANR	4116824	Identifier	k		4113015	0					
ANR	4116825	Argument	v		4113015	1					
ANR	4116826	Identifier	v		4113015	0					
ANR	4116827	ExpressionStatement	"r_list_append ( tmpenvs , k )"	3139:4:79605:79631	4113015	2	True				
ANR	4116828	CallExpression	"r_list_append ( tmpenvs , k )"		4113015	0					
ANR	4116829	Callee	r_list_append		4113015	0					
ANR	4116830	Identifier	r_list_append		4113015	0					
ANR	4116831	ArgumentList	tmpenvs		4113015	1					
ANR	4116832	Argument	tmpenvs		4113015	0					
ANR	4116833	Identifier	tmpenvs		4113015	0					
ANR	4116834	Argument	k		4113015	1					
ANR	4116835	Identifier	k		4113015	0					
ANR	4116836	ElseStatement	else		4113015	0					
ANR	4116837	CompoundStatement		635:10:14992:14992	4113015	0					
ANR	4116838	ExpressionStatement	free ( k )	3141:4:79649:79657	4113015	0	True				
ANR	4116839	CallExpression	free ( k )		4113015	0					
ANR	4116840	Callee	free		4113015	0					
ANR	4116841	Identifier	free		4113015	0					
ANR	4116842	ArgumentList	k		4113015	1					
ANR	4116843	Argument	k		4113015	0					
ANR	4116844	Identifier	k		4113015	0					
ANR	4116845	ElseStatement	else		4113015	0					
ANR	4116846	IfStatement	if ( ptr [ 1 ] == '.' )		4113015	0					
ANR	4116847	Condition	ptr [ 1 ] == '.'	3143:13:79677:79689	4113015	0	True				
ANR	4116848	EqualityExpression	ptr [ 1 ] == '.'		4113015	0		==			
ANR	4116849	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116850	Identifier	ptr		4113015	0					
ANR	4116851	PrimaryExpression	1		4113015	1					
ANR	4116852	PrimaryExpression	'.'		4113015	1					
ANR	4116853	CompoundStatement		638:28:15041:15041	4113015	1					
ANR	4116854	IfStatement	if ( ptr [ 2 ] == '.' )		4113015	0					
ANR	4116855	Condition	ptr [ 2 ] == '.'	3144:7:79709:79721	4113015	0	True				
ANR	4116856	EqualityExpression	ptr [ 2 ] == '.'		4113015	0		==			
ANR	4116857	ArrayIndexing	ptr [ 2 ]		4113015	0					
ANR	4116858	Identifier	ptr		4113015	0					
ANR	4116859	PrimaryExpression	2		4113015	1					
ANR	4116860	PrimaryExpression	'.'		4113015	1					
ANR	4116861	CompoundStatement		639:22:15073:15073	4113015	1					
ANR	4116862	IfStatement	if ( ptr [ 3 ] == '.' )		4113015	0					
ANR	4116863	Condition	ptr [ 3 ] == '.'	3145:8:79743:79755	4113015	0	True				
ANR	4116864	EqualityExpression	ptr [ 3 ] == '.'		4113015	0		==			
ANR	4116865	ArrayIndexing	ptr [ 3 ]		4113015	0					
ANR	4116866	Identifier	ptr		4113015	0					
ANR	4116867	PrimaryExpression	3		4113015	1					
ANR	4116868	PrimaryExpression	'.'		4113015	1					
ANR	4116869	CompoundStatement		641:5:15124:15181	4113015	1					
ANR	4116870	IdentifierDeclStatement	"ut64 addr = r_num_tail ( core -> num , core -> offset , ptr + 4 ) ;"	3146:5:79775:79832	4113015	0	True				
ANR	4116871	IdentifierDecl	"addr = r_num_tail ( core -> num , core -> offset , ptr + 4 )"		4113015	0					
ANR	4116872	IdentifierDeclType	ut64		4113015	0					
ANR	4116873	Identifier	addr		4113015	1					
ANR	4116874	AssignmentExpression	"addr = r_num_tail ( core -> num , core -> offset , ptr + 4 )"		4113015	2		=			
ANR	4116875	Identifier	addr		4113015	0					
ANR	4116876	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 4 )"		4113015	1					
ANR	4116877	Callee	r_num_tail		4113015	0					
ANR	4116878	Identifier	r_num_tail		4113015	0					
ANR	4116879	ArgumentList	core -> num		4113015	1					
ANR	4116880	Argument	core -> num		4113015	0					
ANR	4116881	PtrMemberAccess	core -> num		4113015	0					
ANR	4116882	Identifier	core		4113015	0					
ANR	4116883	Identifier	num		4113015	1					
ANR	4116884	Argument	core -> offset		4113015	1					
ANR	4116885	PtrMemberAccess	core -> offset		4113015	0					
ANR	4116886	Identifier	core		4113015	0					
ANR	4116887	Identifier	offset		4113015	1					
ANR	4116888	Argument	ptr + 4		4113015	2					
ANR	4116889	AdditiveExpression	ptr + 4		4113015	0		+			
ANR	4116890	Identifier	ptr		4113015	0					
ANR	4116891	PrimaryExpression	4		4113015	1					
ANR	4116892	ExpressionStatement	"r_core_block_size ( core , R_ABS ( ( st64 ) addr - ( st64 ) core -> offset ) )"	3147:5:79839:79904	4113015	1	True				
ANR	4116893	CallExpression	"r_core_block_size ( core , R_ABS ( ( st64 ) addr - ( st64 ) core -> offset ) )"		4113015	0					
ANR	4116894	Callee	r_core_block_size		4113015	0					
ANR	4116895	Identifier	r_core_block_size		4113015	0					
ANR	4116896	ArgumentList	core		4113015	1					
ANR	4116897	Argument	core		4113015	0					
ANR	4116898	Identifier	core		4113015	0					
ANR	4116899	Argument	R_ABS ( ( st64 ) addr - ( st64 ) core -> offset )		4113015	1					
ANR	4116900	CallExpression	R_ABS ( ( st64 ) addr - ( st64 ) core -> offset )		4113015	0					
ANR	4116901	Callee	R_ABS		4113015	0					
ANR	4116902	Identifier	R_ABS		4113015	0					
ANR	4116903	ArgumentList	( st64 ) addr - ( st64 ) core -> offset		4113015	1					
ANR	4116904	Argument	( st64 ) addr - ( st64 ) core -> offset		4113015	0					
ANR	4116905	AdditiveExpression	( st64 ) addr - ( st64 ) core -> offset		4113015	0		-			
ANR	4116906	CastExpression	( st64 ) addr		4113015	0					
ANR	4116907	CastTarget	st64		4113015	0					
ANR	4116908	Identifier	addr		4113015	1					
ANR	4116909	CastExpression	( st64 ) core -> offset		4113015	1					
ANR	4116910	CastTarget	st64		4113015	0					
ANR	4116911	PtrMemberAccess	core -> offset		4113015	1					
ANR	4116912	Identifier	core		4113015	0					
ANR	4116913	Identifier	offset		4113015	1					
ANR	4116914	GotoStatement	goto fuji ;	3148:5:79911:79920	4113015	2	True				
ANR	4116915	Identifier	fuji		4113015	0					
ANR	4116916	ElseStatement	else		4113015	0					
ANR	4116917	CompoundStatement		644:11:15282:15282	4113015	0					
ANR	4116918	ExpressionStatement	"addr = r_num_tail ( core -> num , core -> offset , ptr + 3 )"	3150:5:79940:79992	4113015	0	True				
ANR	4116919	AssignmentExpression	"addr = r_num_tail ( core -> num , core -> offset , ptr + 3 )"		4113015	0		=			
ANR	4116920	Identifier	addr		4113015	0					
ANR	4116921	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 3 )"		4113015	1					
ANR	4116922	Callee	r_num_tail		4113015	0					
ANR	4116923	Identifier	r_num_tail		4113015	0					
ANR	4116924	ArgumentList	core -> num		4113015	1					
ANR	4116925	Argument	core -> num		4113015	0					
ANR	4116926	PtrMemberAccess	core -> num		4113015	0					
ANR	4116927	Identifier	core		4113015	0					
ANR	4116928	Identifier	num		4113015	1					
ANR	4116929	Argument	core -> offset		4113015	1					
ANR	4116930	PtrMemberAccess	core -> offset		4113015	0					
ANR	4116931	Identifier	core		4113015	0					
ANR	4116932	Identifier	offset		4113015	1					
ANR	4116933	Argument	ptr + 3		4113015	2					
ANR	4116934	AdditiveExpression	ptr + 3		4113015	0		+			
ANR	4116935	Identifier	ptr		4113015	0					
ANR	4116936	PrimaryExpression	3		4113015	1					
ANR	4116937	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3151:5:79999:80026	4113015	1	True				
ANR	4116938	CallExpression	"r_core_seek ( core , addr , 1 )"		4113015	0					
ANR	4116939	Callee	r_core_seek		4113015	0					
ANR	4116940	Identifier	r_core_seek		4113015	0					
ANR	4116941	ArgumentList	core		4113015	1					
ANR	4116942	Argument	core		4113015	0					
ANR	4116943	Identifier	core		4113015	0					
ANR	4116944	Argument	addr		4113015	1					
ANR	4116945	Identifier	addr		4113015	0					
ANR	4116946	Argument	1		4113015	2					
ANR	4116947	PrimaryExpression	1		4113015	0					
ANR	4116948	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3152:5:80033:80067	4113015	2	True				
ANR	4116949	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		4113015	0		=			
ANR	4116950	Identifier	cmd_tmpseek		4113015	0					
ANR	4116951	AssignmentExpression	core -> tmpseek = true		4113015	1		=			
ANR	4116952	PtrMemberAccess	core -> tmpseek		4113015	0					
ANR	4116953	Identifier	core		4113015	0					
ANR	4116954	Identifier	tmpseek		4113015	1					
ANR	4116955	Identifier	true		4113015	1					
ANR	4116956	GotoStatement	goto fuji ;	3153:5:80074:80083	4113015	3	True				
ANR	4116957	Identifier	fuji		4113015	0					
ANR	4116958	ElseStatement	else		4113015	0					
ANR	4116959	CompoundStatement		650:10:15450:15450	4113015	0					
ANR	4116960	ExpressionStatement	"eprintf ( ""TODO: what do you expect for @. import offset from file maybe?\\n"" )"	3157:4:80121:80197	4113015	0	True				
ANR	4116961	CallExpression	"eprintf ( ""TODO: what do you expect for @. import offset from file maybe?\\n"" )"		4113015	0					
ANR	4116962	Callee	eprintf		4113015	0					
ANR	4116963	Identifier	eprintf		4113015	0					
ANR	4116964	ArgumentList	"""TODO: what do you expect for @. import offset from file maybe?\\n"""		4113015	1					
ANR	4116965	Argument	"""TODO: what do you expect for @. import offset from file maybe?\\n"""		4113015	0					
ANR	4116966	PrimaryExpression	"""TODO: what do you expect for @. import offset from file maybe?\\n"""		4113015	0					
ANR	4116967	ElseStatement	else		4113015	0					
ANR	4116968	IfStatement	if ( ptr [ 0 ] && ptr [ 1 ] == ':' && ptr [ 2 ] )		4113015	0					
ANR	4116969	Condition	ptr [ 0 ] && ptr [ 1 ] == ':' && ptr [ 2 ]	3159:13:80217:80249	4113015	0	True				
ANR	4116970	AndExpression	ptr [ 0 ] && ptr [ 1 ] == ':' && ptr [ 2 ]		4113015	0		&&			
ANR	4116971	ArrayIndexing	ptr [ 0 ]		4113015	0					
ANR	4116972	Identifier	ptr		4113015	0					
ANR	4116973	PrimaryExpression	0		4113015	1					
ANR	4116974	AndExpression	ptr [ 1 ] == ':' && ptr [ 2 ]		4113015	1		&&			
ANR	4116975	EqualityExpression	ptr [ 1 ] == ':'		4113015	0		==			
ANR	4116976	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4116977	Identifier	ptr		4113015	0					
ANR	4116978	PrimaryExpression	1		4113015	1					
ANR	4116979	PrimaryExpression	':'		4113015	1					
ANR	4116980	ArrayIndexing	ptr [ 2 ]		4113015	1					
ANR	4116981	Identifier	ptr		4113015	0					
ANR	4116982	PrimaryExpression	2		4113015	1					
ANR	4116983	CompoundStatement		857:3:21223:21243	4113015	1					
ANR	4116984	SwitchStatement	switch ( ptr [ 0 ] )		4113015	0					
ANR	4116985	Condition	ptr [ 0 ]	3160:11:80265:80270	4113015	0	True				
ANR	4116986	ArrayIndexing	ptr [ 0 ]		4113015	0					
ANR	4116987	Identifier	ptr		4113015	0					
ANR	4116988	PrimaryExpression	0		4113015	1					
ANR	4116989	CompoundStatement		655:19:15622:15622	4113015	1					
ANR	4116990	Label	case 'F' :	3161:3:80278:80286	4113015	0	True				
ANR	4116991	ExpressionStatement	"flgspc_changed = r_flag_space_push ( core -> flags , ptr + 2 )"	3162:4:80325:80382	4113015	1	True				
ANR	4116992	AssignmentExpression	"flgspc_changed = r_flag_space_push ( core -> flags , ptr + 2 )"		4113015	0		=			
ANR	4116993	Identifier	flgspc_changed		4113015	0					
ANR	4116994	CallExpression	"r_flag_space_push ( core -> flags , ptr + 2 )"		4113015	1					
ANR	4116995	Callee	r_flag_space_push		4113015	0					
ANR	4116996	Identifier	r_flag_space_push		4113015	0					
ANR	4116997	ArgumentList	core -> flags		4113015	1					
ANR	4116998	Argument	core -> flags		4113015	0					
ANR	4116999	PtrMemberAccess	core -> flags		4113015	0					
ANR	4117000	Identifier	core		4113015	0					
ANR	4117001	Identifier	flags		4113015	1					
ANR	4117002	Argument	ptr + 2		4113015	1					
ANR	4117003	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117004	Identifier	ptr		4113015	0					
ANR	4117005	PrimaryExpression	2		4113015	1					
ANR	4117006	BreakStatement	break ;	3163:4:80388:80393	4113015	2	True				
ANR	4117007	Label	case 'B' :	3164:3:80398:80406	4113015	3	True				
ANR	4117008	CompoundStatement		662:5:15879:15944	4113015	4					
ANR	4117009	IdentifierDeclStatement	"int index = ( int ) r_num_math ( core -> num , ptr + 2 ) ;"	3166:5:80475:80523	4113015	0	True				
ANR	4117010	IdentifierDecl	"index = ( int ) r_num_math ( core -> num , ptr + 2 )"		4113015	0					
ANR	4117011	IdentifierDeclType	int		4113015	0					
ANR	4117012	Identifier	index		4113015	1					
ANR	4117013	AssignmentExpression	"index = ( int ) r_num_math ( core -> num , ptr + 2 )"		4113015	2		=			
ANR	4117014	Identifier	index		4113015	0					
ANR	4117015	CastExpression	"( int ) r_num_math ( core -> num , ptr + 2 )"		4113015	1					
ANR	4117016	CastTarget	int		4113015	0					
ANR	4117017	CallExpression	"r_num_math ( core -> num , ptr + 2 )"		4113015	1					
ANR	4117018	Callee	r_num_math		4113015	0					
ANR	4117019	Identifier	r_num_math		4113015	0					
ANR	4117020	ArgumentList	core -> num		4113015	1					
ANR	4117021	Argument	core -> num		4113015	0					
ANR	4117022	PtrMemberAccess	core -> num		4113015	0					
ANR	4117023	Identifier	core		4113015	0					
ANR	4117024	Identifier	num		4113015	1					
ANR	4117025	Argument	ptr + 2		4113015	1					
ANR	4117026	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117027	Identifier	ptr		4113015	0					
ANR	4117028	PrimaryExpression	2		4113015	1					
ANR	4117029	IdentifierDeclStatement	"RAnalBlock * bb = r_anal_bb_from_offset ( core -> anal , core -> offset ) ;"	3167:5:80530:80595	4113015	1	True				
ANR	4117030	IdentifierDecl	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		4113015	0					
ANR	4117031	IdentifierDeclType	RAnalBlock *		4113015	0					
ANR	4117032	Identifier	bb		4113015	1					
ANR	4117033	AssignmentExpression	"* bb = r_anal_bb_from_offset ( core -> anal , core -> offset )"		4113015	2		=			
ANR	4117034	Identifier	bb		4113015	0					
ANR	4117035	CallExpression	"r_anal_bb_from_offset ( core -> anal , core -> offset )"		4113015	1					
ANR	4117036	Callee	r_anal_bb_from_offset		4113015	0					
ANR	4117037	Identifier	r_anal_bb_from_offset		4113015	0					
ANR	4117038	ArgumentList	core -> anal		4113015	1					
ANR	4117039	Argument	core -> anal		4113015	0					
ANR	4117040	PtrMemberAccess	core -> anal		4113015	0					
ANR	4117041	Identifier	core		4113015	0					
ANR	4117042	Identifier	anal		4113015	1					
ANR	4117043	Argument	core -> offset		4113015	1					
ANR	4117044	PtrMemberAccess	core -> offset		4113015	0					
ANR	4117045	Identifier	core		4113015	0					
ANR	4117046	Identifier	offset		4113015	1					
ANR	4117047	IfStatement	if ( bb )		4113015	2					
ANR	4117048	Condition	bb	3168:9:80606:80607	4113015	0	True				
ANR	4117049	Identifier	bb		4113015	0					
ANR	4117050	CompoundStatement		663:13:15959:15959	4113015	1					
ANR	4117051	IfStatement	if ( index < 0 )		4113015	0					
ANR	4117052	Condition	index < 0	3170:10:80655:80663	4113015	0	True				
ANR	4117053	RelationalExpression	index < 0		4113015	0		<			
ANR	4117054	Identifier	index		4113015	0					
ANR	4117055	PrimaryExpression	0		4113015	1					
ANR	4117056	CompoundStatement		665:21:16015:16015	4113015	1					
ANR	4117057	ExpressionStatement	index = bb -> ninstr + index	3171:7:80675:80701	4113015	0	True				
ANR	4117058	AssignmentExpression	index = bb -> ninstr + index		4113015	0		=			
ANR	4117059	Identifier	index		4113015	0					
ANR	4117060	AdditiveExpression	bb -> ninstr + index		4113015	1		+			
ANR	4117061	PtrMemberAccess	bb -> ninstr		4113015	0					
ANR	4117062	Identifier	bb		4113015	0					
ANR	4117063	Identifier	ninstr		4113015	1					
ANR	4117064	Identifier	index		4113015	1					
ANR	4117065	IfStatement	if ( index >= 0 && index < bb -> ninstr )		4113015	1					
ANR	4117066	Condition	index >= 0 && index < bb -> ninstr	3174:10:80722:80753	4113015	0	True				
ANR	4117067	AndExpression	index >= 0 && index < bb -> ninstr		4113015	0		&&			
ANR	4117068	RelationalExpression	index >= 0		4113015	0		>=			
ANR	4117069	Identifier	index		4113015	0					
ANR	4117070	PrimaryExpression	0		4113015	1					
ANR	4117071	RelationalExpression	index < bb -> ninstr		4113015	1		<			
ANR	4117072	Identifier	index		4113015	0					
ANR	4117073	PtrMemberAccess	bb -> ninstr		4113015	1					
ANR	4117074	Identifier	bb		4113015	0					
ANR	4117075	Identifier	ninstr		4113015	1					
ANR	4117076	CompoundStatement		670:7:16114:16163	4113015	1					
ANR	4117077	IdentifierDeclStatement	"ut16 inst_off = r_anal_bb_offset_inst ( bb , index ) ;"	3175:7:80765:80814	4113015	0	True				
ANR	4117078	IdentifierDecl	"inst_off = r_anal_bb_offset_inst ( bb , index )"		4113015	0					
ANR	4117079	IdentifierDeclType	ut16		4113015	0					
ANR	4117080	Identifier	inst_off		4113015	1					
ANR	4117081	AssignmentExpression	"inst_off = r_anal_bb_offset_inst ( bb , index )"		4113015	2		=			
ANR	4117082	Identifier	inst_off		4113015	0					
ANR	4117083	CallExpression	"r_anal_bb_offset_inst ( bb , index )"		4113015	1					
ANR	4117084	Callee	r_anal_bb_offset_inst		4113015	0					
ANR	4117085	Identifier	r_anal_bb_offset_inst		4113015	0					
ANR	4117086	ArgumentList	bb		4113015	1					
ANR	4117087	Argument	bb		4113015	0					
ANR	4117088	Identifier	bb		4113015	0					
ANR	4117089	Argument	index		4113015	1					
ANR	4117090	Identifier	index		4113015	0					
ANR	4117091	ExpressionStatement	"r_core_seek ( core , bb -> addr + inst_off , 1 )"	3176:7:80823:80865	4113015	1	True				
ANR	4117092	CallExpression	"r_core_seek ( core , bb -> addr + inst_off , 1 )"		4113015	0					
ANR	4117093	Callee	r_core_seek		4113015	0					
ANR	4117094	Identifier	r_core_seek		4113015	0					
ANR	4117095	ArgumentList	core		4113015	1					
ANR	4117096	Argument	core		4113015	0					
ANR	4117097	Identifier	core		4113015	0					
ANR	4117098	Argument	bb -> addr + inst_off		4113015	1					
ANR	4117099	AdditiveExpression	bb -> addr + inst_off		4113015	0		+			
ANR	4117100	PtrMemberAccess	bb -> addr		4113015	0					
ANR	4117101	Identifier	bb		4113015	0					
ANR	4117102	Identifier	addr		4113015	1					
ANR	4117103	Identifier	inst_off		4113015	1					
ANR	4117104	Argument	1		4113015	2					
ANR	4117105	PrimaryExpression	1		4113015	0					
ANR	4117106	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3177:7:80874:80908	4113015	2	True				
ANR	4117107	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		4113015	0		=			
ANR	4117108	Identifier	cmd_tmpseek		4113015	0					
ANR	4117109	AssignmentExpression	core -> tmpseek = true		4113015	1		=			
ANR	4117110	PtrMemberAccess	core -> tmpseek		4113015	0					
ANR	4117111	Identifier	core		4113015	0					
ANR	4117112	Identifier	tmpseek		4113015	1					
ANR	4117113	Identifier	true		4113015	1					
ANR	4117114	ElseStatement	else		4113015	0					
ANR	4117115	CompoundStatement		673:13:16272:16272	4113015	0					
ANR	4117116	ExpressionStatement	"eprintf ( ""The current basic block has %d instructions\\n"" , bb -> ninstr )"	3179:7:80932:81001	4113015	0	True				
ANR	4117117	CallExpression	"eprintf ( ""The current basic block has %d instructions\\n"" , bb -> ninstr )"		4113015	0					
ANR	4117118	Callee	eprintf		4113015	0					
ANR	4117119	Identifier	eprintf		4113015	0					
ANR	4117120	ArgumentList	"""The current basic block has %d instructions\\n"""		4113015	1					
ANR	4117121	Argument	"""The current basic block has %d instructions\\n"""		4113015	0					
ANR	4117122	PrimaryExpression	"""The current basic block has %d instructions\\n"""		4113015	0					
ANR	4117123	Argument	bb -> ninstr		4113015	1					
ANR	4117124	PtrMemberAccess	bb -> ninstr		4113015	0					
ANR	4117125	Identifier	bb		4113015	0					
ANR	4117126	Identifier	ninstr		4113015	1					
ANR	4117127	ElseStatement	else		4113015	0					
ANR	4117128	CompoundStatement		676:12:16372:16372	4113015	0					
ANR	4117129	Statement	eprintf	3182:6:81031:81037	4113015	0	True				
ANR	4117130	Statement	(	3182:14:81039:81039	4113015	1	True				
ANR	4117131	Statement	"""Can't find a basic block for 0x%08"""	3182:15:81040:81075	4113015	2	True				
ANR	4117132	Statement	PFMT64x	3182:51:81076:81082	4113015	3	True				
ANR	4117133	Statement	"""\\n"""	3182:58:81083:81086	4113015	4	True				
ANR	4117134	Statement	","	3182:62:81087:81087	4113015	5	True				
ANR	4117135	Statement	core	3182:64:81089:81092	4113015	6	True				
ANR	4117136	Statement	->	3182:68:81093:81094	4113015	7	True				
ANR	4117137	Statement	offset	3182:70:81095:81100	4113015	8	True				
ANR	4117138	Statement	)	3182:76:81101:81101	4113015	9	True				
ANR	4117139	ExpressionStatement		3182:77:81102:81102	4113015	10	True				
ANR	4117140	BreakStatement	break ;	3184:5:81116:81121	4113015	3	True				
ANR	4117141	BreakStatement	break ;	3186:4:81133:81138	4113015	5	True				
ANR	4117142	Label	case 'f' :	3187:3:81143:81151	4113015	6	True				
ANR	4117143	ExpressionStatement	"f = r_file_slurp ( ptr + 2 , & sz )"	3188:4:81189:81220	4113015	7	True				
ANR	4117144	AssignmentExpression	"f = r_file_slurp ( ptr + 2 , & sz )"		4113015	0		=			
ANR	4117145	Identifier	f		4113015	0					
ANR	4117146	CallExpression	"r_file_slurp ( ptr + 2 , & sz )"		4113015	1					
ANR	4117147	Callee	r_file_slurp		4113015	0					
ANR	4117148	Identifier	r_file_slurp		4113015	0					
ANR	4117149	ArgumentList	ptr + 2		4113015	1					
ANR	4117150	Argument	ptr + 2		4113015	0					
ANR	4117151	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117152	Identifier	ptr		4113015	0					
ANR	4117153	PrimaryExpression	2		4113015	1					
ANR	4117154	Argument	& sz		4113015	1					
ANR	4117155	UnaryOperationExpression	& sz		4113015	0					
ANR	4117156	UnaryOperator	&		4113015	0					
ANR	4117157	Identifier	sz		4113015	1					
ANR	4117158	IfStatement	if ( f )		4113015	8					
ANR	4117159	Condition	f	3189:8:81230:81230	4113015	0	True				
ANR	4117160	Identifier	f		4113015	0					
ANR	4117161	CompoundStatement		684:11:16582:16582	4113015	1					
ANR	4117162	CompoundStatement		687:6:16658:16716	4113015	0					
ANR	4117163	IdentifierDeclStatement	"RBuffer * b = r_buf_new_with_bytes ( ( const ut8 * ) f , sz ) ;"	3191:6:81248:81301	4113015	0	True				
ANR	4117164	IdentifierDecl	"* b = r_buf_new_with_bytes ( ( const ut8 * ) f , sz )"		4113015	0					
ANR	4117165	IdentifierDeclType	RBuffer *		4113015	0					
ANR	4117166	Identifier	b		4113015	1					
ANR	4117167	AssignmentExpression	"* b = r_buf_new_with_bytes ( ( const ut8 * ) f , sz )"		4113015	2		=			
ANR	4117168	Identifier	b		4113015	0					
ANR	4117169	CallExpression	"r_buf_new_with_bytes ( ( const ut8 * ) f , sz )"		4113015	1					
ANR	4117170	Callee	r_buf_new_with_bytes		4113015	0					
ANR	4117171	Identifier	r_buf_new_with_bytes		4113015	0					
ANR	4117172	ArgumentList	( const ut8 * ) f		4113015	1					
ANR	4117173	Argument	( const ut8 * ) f		4113015	0					
ANR	4117174	CastExpression	( const ut8 * ) f		4113015	0					
ANR	4117175	CastTarget	const ut8 *		4113015	0					
ANR	4117176	Identifier	f		4113015	1					
ANR	4117177	Argument	sz		4113015	1					
ANR	4117178	Identifier	sz		4113015	0					
ANR	4117179	IdentifierDeclStatement	"RIODesc * d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 ) ;"	3192:6:81309:81367	4113015	1	True				
ANR	4117180	IdentifierDecl	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	0					
ANR	4117181	IdentifierDeclType	RIODesc *		4113015	0					
ANR	4117182	Identifier	d		4113015	1					
ANR	4117183	AssignmentExpression	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	2		=			
ANR	4117184	Identifier	d		4113015	0					
ANR	4117185	CallExpression	"r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	1					
ANR	4117186	Callee	r_io_open_buffer		4113015	0					
ANR	4117187	Identifier	r_io_open_buffer		4113015	0					
ANR	4117188	ArgumentList	core -> io		4113015	1					
ANR	4117189	Argument	core -> io		4113015	0					
ANR	4117190	PtrMemberAccess	core -> io		4113015	0					
ANR	4117191	Identifier	core		4113015	0					
ANR	4117192	Identifier	io		4113015	1					
ANR	4117193	Argument	b		4113015	1					
ANR	4117194	Identifier	b		4113015	0					
ANR	4117195	Argument	R_PERM_RWX		4113015	2					
ANR	4117196	Identifier	R_PERM_RWX		4113015	0					
ANR	4117197	Argument	0		4113015	3					
ANR	4117198	PrimaryExpression	0		4113015	0					
ANR	4117199	IfStatement	if ( d )		4113015	2					
ANR	4117200	Condition	d	3193:10:81379:81379	4113015	0	True				
ANR	4117201	Identifier	d		4113015	0					
ANR	4117202	CompoundStatement		688:13:16731:16731	4113015	1					
ANR	4117203	IfStatement	if ( tmpdesc )		4113015	0					
ANR	4117204	Condition	tmpdesc	3194:11:81395:81401	4113015	0	True				
ANR	4117205	Identifier	tmpdesc		4113015	0					
ANR	4117206	CompoundStatement		689:20:16753:16753	4113015	1					
ANR	4117207	ExpressionStatement	r_io_desc_close ( tmpdesc )	3195:8:81414:81439	4113015	0	True				
ANR	4117208	CallExpression	r_io_desc_close ( tmpdesc )		4113015	0					
ANR	4117209	Callee	r_io_desc_close		4113015	0					
ANR	4117210	Identifier	r_io_desc_close		4113015	0					
ANR	4117211	ArgumentList	tmpdesc		4113015	1					
ANR	4117212	Argument	tmpdesc		4113015	0					
ANR	4117213	Identifier	tmpdesc		4113015	0					
ANR	4117214	ExpressionStatement	tmpdesc = d	3197:7:81457:81468	4113015	1	True				
ANR	4117215	AssignmentExpression	tmpdesc = d		4113015	0		=			
ANR	4117216	Identifier	tmpdesc		4113015	0					
ANR	4117217	Identifier	d		4113015	1					
ANR	4117218	IfStatement	if ( pamode )		4113015	2					
ANR	4117219	Condition	pamode	3198:11:81481:81486	4113015	0	True				
ANR	4117220	Identifier	pamode		4113015	0					
ANR	4117221	CompoundStatement		693:19:16838:16838	4113015	1					
ANR	4117222	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3199:8:81499:81540	4113015	0	True				
ANR	4117223	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		4113015	0					
ANR	4117224	Callee	r_config_set_i		4113015	0					
ANR	4117225	Identifier	r_config_set_i		4113015	0					
ANR	4117226	ArgumentList	core -> config		4113015	1					
ANR	4117227	Argument	core -> config		4113015	0					
ANR	4117228	PtrMemberAccess	core -> config		4113015	0					
ANR	4117229	Identifier	core		4113015	0					
ANR	4117230	Identifier	config		4113015	1					
ANR	4117231	Argument	"""io.va"""		4113015	1					
ANR	4117232	PrimaryExpression	"""io.va"""		4113015	0					
ANR	4117233	Argument	1		4113015	2					
ANR	4117234	PrimaryExpression	1		4113015	0					
ANR	4117235	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"	3201:7:81558:81630	4113015	3	True				
ANR	4117236	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"		4113015	0					
ANR	4117237	Callee	r_io_map_new		4113015	0					
ANR	4117238	Identifier	r_io_map_new		4113015	0					
ANR	4117239	ArgumentList	core -> io		4113015	1					
ANR	4117240	Argument	core -> io		4113015	0					
ANR	4117241	PtrMemberAccess	core -> io		4113015	0					
ANR	4117242	Identifier	core		4113015	0					
ANR	4117243	Identifier	io		4113015	1					
ANR	4117244	Argument	d -> fd		4113015	1					
ANR	4117245	PtrMemberAccess	d -> fd		4113015	0					
ANR	4117246	Identifier	d		4113015	0					
ANR	4117247	Identifier	fd		4113015	1					
ANR	4117248	Argument	d -> perm		4113015	2					
ANR	4117249	PtrMemberAccess	d -> perm		4113015	0					
ANR	4117250	Identifier	d		4113015	0					
ANR	4117251	Identifier	perm		4113015	1					
ANR	4117252	Argument	0		4113015	3					
ANR	4117253	PrimaryExpression	0		4113015	0					
ANR	4117254	Argument	core -> offset		4113015	4					
ANR	4117255	PtrMemberAccess	core -> offset		4113015	0					
ANR	4117256	Identifier	core		4113015	0					
ANR	4117257	Identifier	offset		4113015	1					
ANR	4117258	Argument	r_buf_size ( b )		4113015	5					
ANR	4117259	CallExpression	r_buf_size ( b )		4113015	0					
ANR	4117260	Callee	r_buf_size		4113015	0					
ANR	4117261	Identifier	r_buf_size		4113015	0					
ANR	4117262	ArgumentList	b		4113015	1					
ANR	4117263	Argument	b		4113015	0					
ANR	4117264	Identifier	b		4113015	0					
ANR	4117265	ExpressionStatement	buf = malloc ( sz )	3205:5:81658:81675	4113015	1	True				
ANR	4117266	AssignmentExpression	buf = malloc ( sz )		4113015	0		=			
ANR	4117267	Identifier	buf		4113015	0					
ANR	4117268	CallExpression	malloc ( sz )		4113015	1					
ANR	4117269	Callee	malloc		4113015	0					
ANR	4117270	Identifier	malloc		4113015	0					
ANR	4117271	ArgumentList	sz		4113015	1					
ANR	4117272	Argument	sz		4113015	0					
ANR	4117273	Identifier	sz		4113015	0					
ANR	4117274	IfStatement	if ( buf )		4113015	2					
ANR	4117275	Condition	buf	3206:9:81686:81688	4113015	0	True				
ANR	4117276	Identifier	buf		4113015	0					
ANR	4117277	CompoundStatement		701:14:17040:17040	4113015	1					
ANR	4117278	ExpressionStatement	free ( core -> block )	3207:6:81699:81717	4113015	0	True				
ANR	4117279	CallExpression	free ( core -> block )		4113015	0					
ANR	4117280	Callee	free		4113015	0					
ANR	4117281	Identifier	free		4113015	0					
ANR	4117282	ArgumentList	core -> block		4113015	1					
ANR	4117283	Argument	core -> block		4113015	0					
ANR	4117284	PtrMemberAccess	core -> block		4113015	0					
ANR	4117285	Identifier	core		4113015	0					
ANR	4117286	Identifier	block		4113015	1					
ANR	4117287	ExpressionStatement	core -> block = buf	3208:6:81725:81742	4113015	1	True				
ANR	4117288	AssignmentExpression	core -> block = buf		4113015	0		=			
ANR	4117289	PtrMemberAccess	core -> block		4113015	0					
ANR	4117290	Identifier	core		4113015	0					
ANR	4117291	Identifier	block		4113015	1					
ANR	4117292	Identifier	buf		4113015	1					
ANR	4117293	ExpressionStatement	core -> blocksize = sz	3209:6:81750:81770	4113015	2	True				
ANR	4117294	AssignmentExpression	core -> blocksize = sz		4113015	0		=			
ANR	4117295	PtrMemberAccess	core -> blocksize		4113015	0					
ANR	4117296	Identifier	core		4113015	0					
ANR	4117297	Identifier	blocksize		4113015	1					
ANR	4117298	Identifier	sz		4113015	1					
ANR	4117299	ExpressionStatement	"memcpy ( core -> block , f , sz )"	3210:6:81778:81805	4113015	3	True				
ANR	4117300	CallExpression	"memcpy ( core -> block , f , sz )"		4113015	0					
ANR	4117301	Callee	memcpy		4113015	0					
ANR	4117302	Identifier	memcpy		4113015	0					
ANR	4117303	ArgumentList	core -> block		4113015	1					
ANR	4117304	Argument	core -> block		4113015	0					
ANR	4117305	PtrMemberAccess	core -> block		4113015	0					
ANR	4117306	Identifier	core		4113015	0					
ANR	4117307	Identifier	block		4113015	1					
ANR	4117308	Argument	f		4113015	1					
ANR	4117309	Identifier	f		4113015	0					
ANR	4117310	Argument	sz		4113015	2					
ANR	4117311	Identifier	sz		4113015	0					
ANR	4117312	ExpressionStatement	usemyblock = true	3211:6:81813:81830	4113015	4	True				
ANR	4117313	AssignmentExpression	usemyblock = true		4113015	0		=			
ANR	4117314	Identifier	usemyblock		4113015	0					
ANR	4117315	Identifier	true		4113015	1					
ANR	4117316	ElseStatement	else		4113015	0					
ANR	4117317	CompoundStatement		707:12:17193:17193	4113015	0					
ANR	4117318	ExpressionStatement	"eprintf ( ""cannot alloc %d"" , sz )"	3213:6:81852:81883	4113015	0	True				
ANR	4117319	CallExpression	"eprintf ( ""cannot alloc %d"" , sz )"		4113015	0					
ANR	4117320	Callee	eprintf		4113015	0					
ANR	4117321	Identifier	eprintf		4113015	0					
ANR	4117322	ArgumentList	"""cannot alloc %d"""		4113015	1					
ANR	4117323	Argument	"""cannot alloc %d"""		4113015	0					
ANR	4117324	PrimaryExpression	"""cannot alloc %d"""		4113015	0					
ANR	4117325	Argument	sz		4113015	1					
ANR	4117326	Identifier	sz		4113015	0					
ANR	4117327	ExpressionStatement	free ( f )	3215:5:81897:81905	4113015	3	True				
ANR	4117328	CallExpression	free ( f )		4113015	0					
ANR	4117329	Callee	free		4113015	0					
ANR	4117330	Identifier	free		4113015	0					
ANR	4117331	ArgumentList	f		4113015	1					
ANR	4117332	Argument	f		4113015	0					
ANR	4117333	Identifier	f		4113015	0					
ANR	4117334	ElseStatement	else		4113015	0					
ANR	4117335	CompoundStatement		712:11:17274:17274	4113015	0					
ANR	4117336	ExpressionStatement	"eprintf ( ""cannot open '%s'\\n"" , ptr + 3 )"	3218:5:81932:81971	4113015	0	True				
ANR	4117337	CallExpression	"eprintf ( ""cannot open '%s'\\n"" , ptr + 3 )"		4113015	0					
ANR	4117338	Callee	eprintf		4113015	0					
ANR	4117339	Identifier	eprintf		4113015	0					
ANR	4117340	ArgumentList	"""cannot open '%s'\\n"""		4113015	1					
ANR	4117341	Argument	"""cannot open '%s'\\n"""		4113015	0					
ANR	4117342	PrimaryExpression	"""cannot open '%s'\\n"""		4113015	0					
ANR	4117343	Argument	ptr + 3		4113015	1					
ANR	4117344	AdditiveExpression	ptr + 3		4113015	0		+			
ANR	4117345	Identifier	ptr		4113015	0					
ANR	4117346	PrimaryExpression	3		4113015	1					
ANR	4117347	BreakStatement	break ;	3220:4:81983:81988	4113015	9	True				
ANR	4117348	Label	case 'r' :	3221:3:81993:82001	4113015	10	True				
ANR	4117349	IfStatement	if ( ptr [ 1 ] == ':' )		4113015	11					
ANR	4117350	Condition	ptr [ 1 ] == ':'	3222:8:82031:82043	4113015	0	True				
ANR	4117351	EqualityExpression	ptr [ 1 ] == ':'		4113015	0		==			
ANR	4117352	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4117353	Identifier	ptr		4113015	0					
ANR	4117354	PrimaryExpression	1		4113015	1					
ANR	4117355	PrimaryExpression	':'		4113015	1					
ANR	4117356	CompoundStatement		720:5:17458:17492	4113015	1					
ANR	4117357	IdentifierDeclStatement	ut64 regval ;	3223:5:82053:82064	4113015	0	True				
ANR	4117358	IdentifierDecl	regval		4113015	0					
ANR	4117359	IdentifierDeclType	ut64		4113015	0					
ANR	4117360	Identifier	regval		4113015	1					
ANR	4117361	IdentifierDeclStatement	char * mander = strdup ( ptr + 2 ) ;	3224:5:82071:82102	4113015	1	True				
ANR	4117362	IdentifierDecl	* mander = strdup ( ptr + 2 )		4113015	0					
ANR	4117363	IdentifierDeclType	char *		4113015	0					
ANR	4117364	Identifier	mander		4113015	1					
ANR	4117365	AssignmentExpression	* mander = strdup ( ptr + 2 )		4113015	2		=			
ANR	4117366	Identifier	mander		4113015	0					
ANR	4117367	CallExpression	strdup ( ptr + 2 )		4113015	1					
ANR	4117368	Callee	strdup		4113015	0					
ANR	4117369	Identifier	strdup		4113015	0					
ANR	4117370	ArgumentList	ptr + 2		4113015	1					
ANR	4117371	Argument	ptr + 2		4113015	0					
ANR	4117372	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117373	Identifier	ptr		4113015	0					
ANR	4117374	PrimaryExpression	2		4113015	1					
ANR	4117375	IdentifierDeclStatement	char * sep = findSeparator ( mander ) ;	3225:5:82109:82143	4113015	2	True				
ANR	4117376	IdentifierDecl	* sep = findSeparator ( mander )		4113015	0					
ANR	4117377	IdentifierDeclType	char *		4113015	0					
ANR	4117378	Identifier	sep		4113015	1					
ANR	4117379	AssignmentExpression	* sep = findSeparator ( mander )		4113015	2		=			
ANR	4117380	Identifier	sep		4113015	0					
ANR	4117381	CallExpression	findSeparator ( mander )		4113015	1					
ANR	4117382	Callee	findSeparator		4113015	0					
ANR	4117383	Identifier	findSeparator		4113015	0					
ANR	4117384	ArgumentList	mander		4113015	1					
ANR	4117385	Argument	mander		4113015	0					
ANR	4117386	Identifier	mander		4113015	0					
ANR	4117387	IfStatement	if ( sep )		4113015	3					
ANR	4117388	Condition	sep	3226:9:82154:82156	4113015	0	True				
ANR	4117389	Identifier	sep		4113015	0					
ANR	4117390	CompoundStatement		722:6:17516:17530	4113015	1					
ANR	4117391	IdentifierDeclStatement	char ch = * sep ;	3227:6:82167:82181	4113015	0	True				
ANR	4117392	IdentifierDecl	ch = * sep		4113015	0					
ANR	4117393	IdentifierDeclType	char		4113015	0					
ANR	4117394	Identifier	ch		4113015	1					
ANR	4117395	AssignmentExpression	ch = * sep		4113015	2		=			
ANR	4117396	Identifier	ch		4113015	0					
ANR	4117397	UnaryOperationExpression	* sep		4113015	1					
ANR	4117398	UnaryOperator	*		4113015	0					
ANR	4117399	Identifier	sep		4113015	1					
ANR	4117400	ExpressionStatement	* sep = 0	3228:6:82189:82197	4113015	1	True				
ANR	4117401	AssignmentExpression	* sep = 0		4113015	0		=			
ANR	4117402	UnaryOperationExpression	* sep		4113015	0					
ANR	4117403	UnaryOperator	*		4113015	0					
ANR	4117404	Identifier	sep		4113015	1					
ANR	4117405	PrimaryExpression	0		4113015	1					
ANR	4117406	ExpressionStatement	"regval = r_debug_reg_get ( core -> dbg , mander )"	3229:6:82205:82249	4113015	2	True				
ANR	4117407	AssignmentExpression	"regval = r_debug_reg_get ( core -> dbg , mander )"		4113015	0		=			
ANR	4117408	Identifier	regval		4113015	0					
ANR	4117409	CallExpression	"r_debug_reg_get ( core -> dbg , mander )"		4113015	1					
ANR	4117410	Callee	r_debug_reg_get		4113015	0					
ANR	4117411	Identifier	r_debug_reg_get		4113015	0					
ANR	4117412	ArgumentList	core -> dbg		4113015	1					
ANR	4117413	Argument	core -> dbg		4113015	0					
ANR	4117414	PtrMemberAccess	core -> dbg		4113015	0					
ANR	4117415	Identifier	core		4113015	0					
ANR	4117416	Identifier	dbg		4113015	1					
ANR	4117417	Argument	mander		4113015	1					
ANR	4117418	Identifier	mander		4113015	0					
ANR	4117419	ExpressionStatement	* sep = ch	3230:6:82257:82266	4113015	3	True				
ANR	4117420	AssignmentExpression	* sep = ch		4113015	0		=			
ANR	4117421	UnaryOperationExpression	* sep		4113015	0					
ANR	4117422	UnaryOperator	*		4113015	0					
ANR	4117423	Identifier	sep		4113015	1					
ANR	4117424	Identifier	ch		4113015	1					
ANR	4117425	Statement	char	3231:6:82274:82277	4113015	4	True				
ANR	4117426	Statement	*	3231:11:82279:82279	4113015	5	True				
ANR	4117427	Statement	numexpr	3231:12:82280:82286	4113015	6	True				
ANR	4117428	Statement	=	3231:20:82288:82288	4113015	7	True				
ANR	4117429	Statement	r_str_newf	3231:22:82290:82299	4113015	8	True				
ANR	4117430	Statement	(	3231:33:82301:82301	4113015	9	True				
ANR	4117431	Statement	"""0x%"""	3231:34:82302:82306	4113015	10	True				
ANR	4117432	Statement	PFMT64x	3231:39:82307:82313	4113015	11	True				
ANR	4117433	Statement	"""%s"""	3231:46:82314:82317	4113015	12	True				
ANR	4117434	Statement	","	3231:50:82318:82318	4113015	13	True				
ANR	4117435	Statement	regval	3231:52:82320:82325	4113015	14	True				
ANR	4117436	Statement	","	3231:58:82326:82326	4113015	15	True				
ANR	4117437	Statement	sep	3231:60:82328:82330	4113015	16	True				
ANR	4117438	Statement	)	3231:63:82331:82331	4113015	17	True				
ANR	4117439	ExpressionStatement		3231:64:82332:82332	4113015	18	True				
ANR	4117440	ExpressionStatement	"regval = r_num_math ( core -> num , numexpr )"	3232:6:82340:82380	4113015	19	True				
ANR	4117441	AssignmentExpression	"regval = r_num_math ( core -> num , numexpr )"		4113015	0		=			
ANR	4117442	Identifier	regval		4113015	0					
ANR	4117443	CallExpression	"r_num_math ( core -> num , numexpr )"		4113015	1					
ANR	4117444	Callee	r_num_math		4113015	0					
ANR	4117445	Identifier	r_num_math		4113015	0					
ANR	4117446	ArgumentList	core -> num		4113015	1					
ANR	4117447	Argument	core -> num		4113015	0					
ANR	4117448	PtrMemberAccess	core -> num		4113015	0					
ANR	4117449	Identifier	core		4113015	0					
ANR	4117450	Identifier	num		4113015	1					
ANR	4117451	Argument	numexpr		4113015	1					
ANR	4117452	Identifier	numexpr		4113015	0					
ANR	4117453	ExpressionStatement	free ( numexpr )	3233:6:82388:82402	4113015	20	True				
ANR	4117454	CallExpression	free ( numexpr )		4113015	0					
ANR	4117455	Callee	free		4113015	0					
ANR	4117456	Identifier	free		4113015	0					
ANR	4117457	ArgumentList	numexpr		4113015	1					
ANR	4117458	Argument	numexpr		4113015	0					
ANR	4117459	Identifier	numexpr		4113015	0					
ANR	4117460	ElseStatement	else		4113015	0					
ANR	4117461	CompoundStatement		729:12:17765:17765	4113015	0					
ANR	4117462	ExpressionStatement	"regval = r_debug_reg_get ( core -> dbg , ptr + 2 )"	3235:6:82424:82469	4113015	0	True				
ANR	4117463	AssignmentExpression	"regval = r_debug_reg_get ( core -> dbg , ptr + 2 )"		4113015	0		=			
ANR	4117464	Identifier	regval		4113015	0					
ANR	4117465	CallExpression	"r_debug_reg_get ( core -> dbg , ptr + 2 )"		4113015	1					
ANR	4117466	Callee	r_debug_reg_get		4113015	0					
ANR	4117467	Identifier	r_debug_reg_get		4113015	0					
ANR	4117468	ArgumentList	core -> dbg		4113015	1					
ANR	4117469	Argument	core -> dbg		4113015	0					
ANR	4117470	PtrMemberAccess	core -> dbg		4113015	0					
ANR	4117471	Identifier	core		4113015	0					
ANR	4117472	Identifier	dbg		4113015	1					
ANR	4117473	Argument	ptr + 2		4113015	1					
ANR	4117474	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117475	Identifier	ptr		4113015	0					
ANR	4117476	PrimaryExpression	2		4113015	1					
ANR	4117477	ExpressionStatement	"r_core_seek ( core , regval , 1 )"	3237:5:82483:82512	4113015	4	True				
ANR	4117478	CallExpression	"r_core_seek ( core , regval , 1 )"		4113015	0					
ANR	4117479	Callee	r_core_seek		4113015	0					
ANR	4117480	Identifier	r_core_seek		4113015	0					
ANR	4117481	ArgumentList	core		4113015	1					
ANR	4117482	Argument	core		4113015	0					
ANR	4117483	Identifier	core		4113015	0					
ANR	4117484	Argument	regval		4113015	1					
ANR	4117485	Identifier	regval		4113015	0					
ANR	4117486	Argument	1		4113015	2					
ANR	4117487	PrimaryExpression	1		4113015	0					
ANR	4117488	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3238:5:82519:82553	4113015	5	True				
ANR	4117489	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		4113015	0		=			
ANR	4117490	Identifier	cmd_tmpseek		4113015	0					
ANR	4117491	AssignmentExpression	core -> tmpseek = true		4113015	1		=			
ANR	4117492	PtrMemberAccess	core -> tmpseek		4113015	0					
ANR	4117493	Identifier	core		4113015	0					
ANR	4117494	Identifier	tmpseek		4113015	1					
ANR	4117495	Identifier	true		4113015	1					
ANR	4117496	ExpressionStatement	free ( mander )	3239:5:82560:82573	4113015	6	True				
ANR	4117497	CallExpression	free ( mander )		4113015	0					
ANR	4117498	Callee	free		4113015	0					
ANR	4117499	Identifier	free		4113015	0					
ANR	4117500	ArgumentList	mander		4113015	1					
ANR	4117501	Argument	mander		4113015	0					
ANR	4117502	Identifier	mander		4113015	0					
ANR	4117503	BreakStatement	break ;	3241:4:82585:82590	4113015	12	True				
ANR	4117504	Label	case 'b' :	3242:3:82595:82603	4113015	13	True				
ANR	4117505	ExpressionStatement	"is_bits_set = set_tmp_bits ( core , r_num_math ( core -> num , ptr + 2 ) , & tmpbits )"	3243:4:82626:82702	4113015	14	True				
ANR	4117506	AssignmentExpression	"is_bits_set = set_tmp_bits ( core , r_num_math ( core -> num , ptr + 2 ) , & tmpbits )"		4113015	0		=			
ANR	4117507	Identifier	is_bits_set		4113015	0					
ANR	4117508	CallExpression	"set_tmp_bits ( core , r_num_math ( core -> num , ptr + 2 ) , & tmpbits )"		4113015	1					
ANR	4117509	Callee	set_tmp_bits		4113015	0					
ANR	4117510	Identifier	set_tmp_bits		4113015	0					
ANR	4117511	ArgumentList	core		4113015	1					
ANR	4117512	Argument	core		4113015	0					
ANR	4117513	Identifier	core		4113015	0					
ANR	4117514	Argument	"r_num_math ( core -> num , ptr + 2 )"		4113015	1					
ANR	4117515	CallExpression	"r_num_math ( core -> num , ptr + 2 )"		4113015	0					
ANR	4117516	Callee	r_num_math		4113015	0					
ANR	4117517	Identifier	r_num_math		4113015	0					
ANR	4117518	ArgumentList	core -> num		4113015	1					
ANR	4117519	Argument	core -> num		4113015	0					
ANR	4117520	PtrMemberAccess	core -> num		4113015	0					
ANR	4117521	Identifier	core		4113015	0					
ANR	4117522	Identifier	num		4113015	1					
ANR	4117523	Argument	ptr + 2		4113015	1					
ANR	4117524	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117525	Identifier	ptr		4113015	0					
ANR	4117526	PrimaryExpression	2		4113015	1					
ANR	4117527	Argument	& tmpbits		4113015	2					
ANR	4117528	UnaryOperationExpression	& tmpbits		4113015	0					
ANR	4117529	UnaryOperator	&		4113015	0					
ANR	4117530	Identifier	tmpbits		4113015	1					
ANR	4117531	ExpressionStatement	"cmd_ignbithints = r_config_get_i ( core -> config , ""anal.ignbithints"" )"	3244:4:82708:82775	4113015	15	True				
ANR	4117532	AssignmentExpression	"cmd_ignbithints = r_config_get_i ( core -> config , ""anal.ignbithints"" )"		4113015	0		=			
ANR	4117533	Identifier	cmd_ignbithints		4113015	0					
ANR	4117534	CallExpression	"r_config_get_i ( core -> config , ""anal.ignbithints"" )"		4113015	1					
ANR	4117535	Callee	r_config_get_i		4113015	0					
ANR	4117536	Identifier	r_config_get_i		4113015	0					
ANR	4117537	ArgumentList	core -> config		4113015	1					
ANR	4117538	Argument	core -> config		4113015	0					
ANR	4117539	PtrMemberAccess	core -> config		4113015	0					
ANR	4117540	Identifier	core		4113015	0					
ANR	4117541	Identifier	config		4113015	1					
ANR	4117542	Argument	"""anal.ignbithints"""		4113015	1					
ANR	4117543	PrimaryExpression	"""anal.ignbithints"""		4113015	0					
ANR	4117544	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.ignbithints"" , 1 )"	3245:4:82781:82833	4113015	16	True				
ANR	4117545	CallExpression	"r_config_set_i ( core -> config , ""anal.ignbithints"" , 1 )"		4113015	0					
ANR	4117546	Callee	r_config_set_i		4113015	0					
ANR	4117547	Identifier	r_config_set_i		4113015	0					
ANR	4117548	ArgumentList	core -> config		4113015	1					
ANR	4117549	Argument	core -> config		4113015	0					
ANR	4117550	PtrMemberAccess	core -> config		4113015	0					
ANR	4117551	Identifier	core		4113015	0					
ANR	4117552	Identifier	config		4113015	1					
ANR	4117553	Argument	"""anal.ignbithints"""		4113015	1					
ANR	4117554	PrimaryExpression	"""anal.ignbithints"""		4113015	0					
ANR	4117555	Argument	1		4113015	2					
ANR	4117556	PrimaryExpression	1		4113015	0					
ANR	4117557	BreakStatement	break ;	3246:4:82839:82844	4113015	17	True				
ANR	4117558	Label	case 'i' :	3247:3:82849:82857	4113015	18	True				
ANR	4117559	CompoundStatement		744:5:18228:18271	4113015	19					
ANR	4117560	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , ptr + 2 ) ;"	3249:5:82879:82922	4113015	0	True				
ANR	4117561	IdentifierDecl	"addr = r_num_math ( core -> num , ptr + 2 )"		4113015	0					
ANR	4117562	IdentifierDeclType	ut64		4113015	0					
ANR	4117563	Identifier	addr		4113015	1					
ANR	4117564	AssignmentExpression	"addr = r_num_math ( core -> num , ptr + 2 )"		4113015	2		=			
ANR	4117565	Identifier	addr		4113015	0					
ANR	4117566	CallExpression	"r_num_math ( core -> num , ptr + 2 )"		4113015	1					
ANR	4117567	Callee	r_num_math		4113015	0					
ANR	4117568	Identifier	r_num_math		4113015	0					
ANR	4117569	ArgumentList	core -> num		4113015	1					
ANR	4117570	Argument	core -> num		4113015	0					
ANR	4117571	PtrMemberAccess	core -> num		4113015	0					
ANR	4117572	Identifier	core		4113015	0					
ANR	4117573	Identifier	num		4113015	1					
ANR	4117574	Argument	ptr + 2		4113015	1					
ANR	4117575	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117576	Identifier	ptr		4113015	0					
ANR	4117577	PrimaryExpression	2		4113015	1					
ANR	4117578	IfStatement	if ( addr )		4113015	1					
ANR	4117579	Condition	addr	3250:9:82933:82936	4113015	0	True				
ANR	4117580	Identifier	addr		4113015	0					
ANR	4117581	CompoundStatement		745:15:18288:18288	4113015	1					
ANR	4117582	ExpressionStatement	"r_core_cmdf ( core , ""so %s"" , ptr + 2 )"	3251:6:82947:82983	4113015	0	True				
ANR	4117583	CallExpression	"r_core_cmdf ( core , ""so %s"" , ptr + 2 )"		4113015	0					
ANR	4117584	Callee	r_core_cmdf		4113015	0					
ANR	4117585	Identifier	r_core_cmdf		4113015	0					
ANR	4117586	ArgumentList	core		4113015	1					
ANR	4117587	Argument	core		4113015	0					
ANR	4117588	Identifier	core		4113015	0					
ANR	4117589	Argument	"""so %s"""		4113015	1					
ANR	4117590	PrimaryExpression	"""so %s"""		4113015	0					
ANR	4117591	Argument	ptr + 2		4113015	2					
ANR	4117592	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117593	Identifier	ptr		4113015	0					
ANR	4117594	PrimaryExpression	2		4113015	1					
ANR	4117595	ExpressionStatement	cmd_tmpseek = core -> tmpseek = true	3253:6:83036:83070	4113015	1	True				
ANR	4117596	AssignmentExpression	cmd_tmpseek = core -> tmpseek = true		4113015	0		=			
ANR	4117597	Identifier	cmd_tmpseek		4113015	0					
ANR	4117598	AssignmentExpression	core -> tmpseek = true		4113015	1		=			
ANR	4117599	PtrMemberAccess	core -> tmpseek		4113015	0					
ANR	4117600	Identifier	core		4113015	0					
ANR	4117601	Identifier	tmpseek		4113015	1					
ANR	4117602	Identifier	true		4113015	1					
ANR	4117603	BreakStatement	break ;	3256:4:83089:83094	4113015	20	True				
ANR	4117604	Label	case 'e' :	3257:3:83099:83107	4113015	21	True				
ANR	4117605	CompoundStatement		754:5:18478:18521	4113015	22					
ANR	4117606	IdentifierDeclStatement	"char * cmd = parse_tmp_evals ( core , ptr + 2 ) ;"	3259:5:83129:83172	4113015	0	True				
ANR	4117607	IdentifierDecl	"* cmd = parse_tmp_evals ( core , ptr + 2 )"		4113015	0					
ANR	4117608	IdentifierDeclType	char *		4113015	0					
ANR	4117609	Identifier	cmd		4113015	1					
ANR	4117610	AssignmentExpression	"* cmd = parse_tmp_evals ( core , ptr + 2 )"		4113015	2		=			
ANR	4117611	Identifier	cmd		4113015	0					
ANR	4117612	CallExpression	"parse_tmp_evals ( core , ptr + 2 )"		4113015	1					
ANR	4117613	Callee	parse_tmp_evals		4113015	0					
ANR	4117614	Identifier	parse_tmp_evals		4113015	0					
ANR	4117615	ArgumentList	core		4113015	1					
ANR	4117616	Argument	core		4113015	0					
ANR	4117617	Identifier	core		4113015	0					
ANR	4117618	Argument	ptr + 2		4113015	1					
ANR	4117619	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117620	Identifier	ptr		4113015	0					
ANR	4117621	PrimaryExpression	2		4113015	1					
ANR	4117622	IfStatement	if ( ! tmpeval )		4113015	1					
ANR	4117623	Condition	! tmpeval	3260:9:83183:83190	4113015	0	True				
ANR	4117624	UnaryOperationExpression	! tmpeval		4113015	0					
ANR	4117625	UnaryOperator	!		4113015	0					
ANR	4117626	Identifier	tmpeval		4113015	1					
ANR	4117627	CompoundStatement		755:19:18542:18542	4113015	1					
ANR	4117628	ExpressionStatement	tmpeval = cmd	3261:6:83201:83214	4113015	0	True				
ANR	4117629	AssignmentExpression	tmpeval = cmd		4113015	0		=			
ANR	4117630	Identifier	tmpeval		4113015	0					
ANR	4117631	Identifier	cmd		4113015	1					
ANR	4117632	ElseStatement	else		4113015	0					
ANR	4117633	CompoundStatement		757:12:18577:18577	4113015	0					
ANR	4117634	ExpressionStatement	"tmpeval = r_str_prepend ( tmpeval , cmd )"	3263:6:83236:83274	4113015	0	True				
ANR	4117635	AssignmentExpression	"tmpeval = r_str_prepend ( tmpeval , cmd )"		4113015	0		=			
ANR	4117636	Identifier	tmpeval		4113015	0					
ANR	4117637	CallExpression	"r_str_prepend ( tmpeval , cmd )"		4113015	1					
ANR	4117638	Callee	r_str_prepend		4113015	0					
ANR	4117639	Identifier	r_str_prepend		4113015	0					
ANR	4117640	ArgumentList	tmpeval		4113015	1					
ANR	4117641	Argument	tmpeval		4113015	0					
ANR	4117642	Identifier	tmpeval		4113015	0					
ANR	4117643	Argument	cmd		4113015	1					
ANR	4117644	Identifier	cmd		4113015	0					
ANR	4117645	ExpressionStatement	free ( cmd )	3264:6:83282:83292	4113015	1	True				
ANR	4117646	CallExpression	free ( cmd )		4113015	0					
ANR	4117647	Callee	free		4113015	0					
ANR	4117648	Identifier	free		4113015	0					
ANR	4117649	ArgumentList	cmd		4113015	1					
ANR	4117650	Argument	cmd		4113015	0					
ANR	4117651	Identifier	cmd		4113015	0					
ANR	4117652	BreakStatement	break ;	3267:4:83311:83316	4113015	23	True				
ANR	4117653	Label	case 'x' :	3268:3:83321:83329	4113015	24	True				
ANR	4117654	IfStatement	if ( ptr [ 1 ] == ':' )		4113015	25					
ANR	4117655	Condition	ptr [ 1 ] == ':'	3269:8:83360:83372	4113015	0	True				
ANR	4117656	EqualityExpression	ptr [ 1 ] == ':'		4113015	0		==			
ANR	4117657	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4117658	Identifier	ptr		4113015	0					
ANR	4117659	PrimaryExpression	1		4113015	1					
ANR	4117660	PrimaryExpression	':'		4113015	1					
ANR	4117661	CompoundStatement		764:23:18724:18724	4113015	1					
ANR	4117662	ExpressionStatement	buf = malloc ( strlen ( ptr + 2 ) + 1 )	3270:5:83382:83417	4113015	0	True				
ANR	4117663	AssignmentExpression	buf = malloc ( strlen ( ptr + 2 ) + 1 )		4113015	0		=			
ANR	4117664	Identifier	buf		4113015	0					
ANR	4117665	CallExpression	malloc ( strlen ( ptr + 2 ) + 1 )		4113015	1					
ANR	4117666	Callee	malloc		4113015	0					
ANR	4117667	Identifier	malloc		4113015	0					
ANR	4117668	ArgumentList	strlen ( ptr + 2 ) + 1		4113015	1					
ANR	4117669	Argument	strlen ( ptr + 2 ) + 1		4113015	0					
ANR	4117670	AdditiveExpression	strlen ( ptr + 2 ) + 1		4113015	0		+			
ANR	4117671	CallExpression	strlen ( ptr + 2 )		4113015	0					
ANR	4117672	Callee	strlen		4113015	0					
ANR	4117673	Identifier	strlen		4113015	0					
ANR	4117674	ArgumentList	ptr + 2		4113015	1					
ANR	4117675	Argument	ptr + 2		4113015	0					
ANR	4117676	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117677	Identifier	ptr		4113015	0					
ANR	4117678	PrimaryExpression	2		4113015	1					
ANR	4117679	PrimaryExpression	1		4113015	1					
ANR	4117680	IfStatement	if ( buf )		4113015	1					
ANR	4117681	Condition	buf	3271:9:83428:83430	4113015	0	True				
ANR	4117682	Identifier	buf		4113015	0					
ANR	4117683	CompoundStatement		766:14:18782:18782	4113015	1					
ANR	4117684	ExpressionStatement	"len = r_hex_str2bin ( ptr + 2 , buf )"	3272:6:83441:83475	4113015	0	True				
ANR	4117685	AssignmentExpression	"len = r_hex_str2bin ( ptr + 2 , buf )"		4113015	0		=			
ANR	4117686	Identifier	len		4113015	0					
ANR	4117687	CallExpression	"r_hex_str2bin ( ptr + 2 , buf )"		4113015	1					
ANR	4117688	Callee	r_hex_str2bin		4113015	0					
ANR	4117689	Identifier	r_hex_str2bin		4113015	0					
ANR	4117690	ArgumentList	ptr + 2		4113015	1					
ANR	4117691	Argument	ptr + 2		4113015	0					
ANR	4117692	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117693	Identifier	ptr		4113015	0					
ANR	4117694	PrimaryExpression	2		4113015	1					
ANR	4117695	Argument	buf		4113015	1					
ANR	4117696	Identifier	buf		4113015	0					
ANR	4117697	ExpressionStatement	"r_core_block_size ( core , R_ABS ( len ) )"	3273:6:83483:83520	4113015	1	True				
ANR	4117698	CallExpression	"r_core_block_size ( core , R_ABS ( len ) )"		4113015	0					
ANR	4117699	Callee	r_core_block_size		4113015	0					
ANR	4117700	Identifier	r_core_block_size		4113015	0					
ANR	4117701	ArgumentList	core		4113015	1					
ANR	4117702	Argument	core		4113015	0					
ANR	4117703	Identifier	core		4113015	0					
ANR	4117704	Argument	R_ABS ( len )		4113015	1					
ANR	4117705	CallExpression	R_ABS ( len )		4113015	0					
ANR	4117706	Callee	R_ABS		4113015	0					
ANR	4117707	Identifier	R_ABS		4113015	0					
ANR	4117708	ArgumentList	len		4113015	1					
ANR	4117709	Argument	len		4113015	0					
ANR	4117710	Identifier	len		4113015	0					
ANR	4117711	IfStatement	if ( len > 0 )		4113015	2					
ANR	4117712	Condition	len > 0	3274:10:83532:83538	4113015	0	True				
ANR	4117713	RelationalExpression	len > 0		4113015	0		>			
ANR	4117714	Identifier	len		4113015	0					
ANR	4117715	PrimaryExpression	0		4113015	1					
ANR	4117716	CompoundStatement		771:7:18952:19010	4113015	1					
ANR	4117717	IdentifierDeclStatement	"RBuffer * b = r_buf_new_with_bytes ( buf , len ) ;"	3275:7:83550:83594	4113015	0	True				
ANR	4117718	IdentifierDecl	"* b = r_buf_new_with_bytes ( buf , len )"		4113015	0					
ANR	4117719	IdentifierDeclType	RBuffer *		4113015	0					
ANR	4117720	Identifier	b		4113015	1					
ANR	4117721	AssignmentExpression	"* b = r_buf_new_with_bytes ( buf , len )"		4113015	2		=			
ANR	4117722	Identifier	b		4113015	0					
ANR	4117723	CallExpression	"r_buf_new_with_bytes ( buf , len )"		4113015	1					
ANR	4117724	Callee	r_buf_new_with_bytes		4113015	0					
ANR	4117725	Identifier	r_buf_new_with_bytes		4113015	0					
ANR	4117726	ArgumentList	buf		4113015	1					
ANR	4117727	Argument	buf		4113015	0					
ANR	4117728	Identifier	buf		4113015	0					
ANR	4117729	Argument	len		4113015	1					
ANR	4117730	Identifier	len		4113015	0					
ANR	4117731	IdentifierDeclStatement	"RIODesc * d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 ) ;"	3276:7:83603:83661	4113015	1	True				
ANR	4117732	IdentifierDecl	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	0					
ANR	4117733	IdentifierDeclType	RIODesc *		4113015	0					
ANR	4117734	Identifier	d		4113015	1					
ANR	4117735	AssignmentExpression	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	2		=			
ANR	4117736	Identifier	d		4113015	0					
ANR	4117737	CallExpression	"r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	1					
ANR	4117738	Callee	r_io_open_buffer		4113015	0					
ANR	4117739	Identifier	r_io_open_buffer		4113015	0					
ANR	4117740	ArgumentList	core -> io		4113015	1					
ANR	4117741	Argument	core -> io		4113015	0					
ANR	4117742	PtrMemberAccess	core -> io		4113015	0					
ANR	4117743	Identifier	core		4113015	0					
ANR	4117744	Identifier	io		4113015	1					
ANR	4117745	Argument	b		4113015	1					
ANR	4117746	Identifier	b		4113015	0					
ANR	4117747	Argument	R_PERM_RWX		4113015	2					
ANR	4117748	Identifier	R_PERM_RWX		4113015	0					
ANR	4117749	Argument	0		4113015	3					
ANR	4117750	PrimaryExpression	0		4113015	0					
ANR	4117751	IfStatement	if ( d )		4113015	2					
ANR	4117752	Condition	d	3277:11:83674:83674	4113015	0	True				
ANR	4117753	Identifier	d		4113015	0					
ANR	4117754	CompoundStatement		772:14:19026:19026	4113015	1					
ANR	4117755	IfStatement	if ( tmpdesc )		4113015	0					
ANR	4117756	Condition	tmpdesc	3278:12:83691:83697	4113015	0	True				
ANR	4117757	Identifier	tmpdesc		4113015	0					
ANR	4117758	CompoundStatement		773:21:19049:19049	4113015	1					
ANR	4117759	ExpressionStatement	r_io_desc_close ( tmpdesc )	3279:9:83711:83736	4113015	0	True				
ANR	4117760	CallExpression	r_io_desc_close ( tmpdesc )		4113015	0					
ANR	4117761	Callee	r_io_desc_close		4113015	0					
ANR	4117762	Identifier	r_io_desc_close		4113015	0					
ANR	4117763	ArgumentList	tmpdesc		4113015	1					
ANR	4117764	Argument	tmpdesc		4113015	0					
ANR	4117765	Identifier	tmpdesc		4113015	0					
ANR	4117766	ExpressionStatement	tmpdesc = d	3281:8:83756:83767	4113015	1	True				
ANR	4117767	AssignmentExpression	tmpdesc = d		4113015	0		=			
ANR	4117768	Identifier	tmpdesc		4113015	0					
ANR	4117769	Identifier	d		4113015	1					
ANR	4117770	IfStatement	if ( pamode )		4113015	2					
ANR	4117771	Condition	pamode	3282:12:83781:83786	4113015	0	True				
ANR	4117772	Identifier	pamode		4113015	0					
ANR	4117773	CompoundStatement		777:20:19138:19138	4113015	1					
ANR	4117774	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3283:9:83800:83841	4113015	0	True				
ANR	4117775	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		4113015	0					
ANR	4117776	Callee	r_config_set_i		4113015	0					
ANR	4117777	Identifier	r_config_set_i		4113015	0					
ANR	4117778	ArgumentList	core -> config		4113015	1					
ANR	4117779	Argument	core -> config		4113015	0					
ANR	4117780	PtrMemberAccess	core -> config		4113015	0					
ANR	4117781	Identifier	core		4113015	0					
ANR	4117782	Identifier	config		4113015	1					
ANR	4117783	Argument	"""io.va"""		4113015	1					
ANR	4117784	PrimaryExpression	"""io.va"""		4113015	0					
ANR	4117785	Argument	1		4113015	2					
ANR	4117786	PrimaryExpression	1		4113015	0					
ANR	4117787	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"	3285:8:83861:83933	4113015	3	True				
ANR	4117788	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"		4113015	0					
ANR	4117789	Callee	r_io_map_new		4113015	0					
ANR	4117790	Identifier	r_io_map_new		4113015	0					
ANR	4117791	ArgumentList	core -> io		4113015	1					
ANR	4117792	Argument	core -> io		4113015	0					
ANR	4117793	PtrMemberAccess	core -> io		4113015	0					
ANR	4117794	Identifier	core		4113015	0					
ANR	4117795	Identifier	io		4113015	1					
ANR	4117796	Argument	d -> fd		4113015	1					
ANR	4117797	PtrMemberAccess	d -> fd		4113015	0					
ANR	4117798	Identifier	d		4113015	0					
ANR	4117799	Identifier	fd		4113015	1					
ANR	4117800	Argument	d -> perm		4113015	2					
ANR	4117801	PtrMemberAccess	d -> perm		4113015	0					
ANR	4117802	Identifier	d		4113015	0					
ANR	4117803	Identifier	perm		4113015	1					
ANR	4117804	Argument	0		4113015	3					
ANR	4117805	PrimaryExpression	0		4113015	0					
ANR	4117806	Argument	core -> offset		4113015	4					
ANR	4117807	PtrMemberAccess	core -> offset		4113015	0					
ANR	4117808	Identifier	core		4113015	0					
ANR	4117809	Identifier	offset		4113015	1					
ANR	4117810	Argument	r_buf_size ( b )		4113015	5					
ANR	4117811	CallExpression	r_buf_size ( b )		4113015	0					
ANR	4117812	Callee	r_buf_size		4113015	0					
ANR	4117813	Identifier	r_buf_size		4113015	0					
ANR	4117814	ArgumentList	b		4113015	1					
ANR	4117815	Argument	b		4113015	0					
ANR	4117816	Identifier	b		4113015	0					
ANR	4117817	ExpressionStatement	"r_core_block_size ( core , len )"	3286:8:83943:83972	4113015	4	True				
ANR	4117818	CallExpression	"r_core_block_size ( core , len )"		4113015	0					
ANR	4117819	Callee	r_core_block_size		4113015	0					
ANR	4117820	Identifier	r_core_block_size		4113015	0					
ANR	4117821	ArgumentList	core		4113015	1					
ANR	4117822	Argument	core		4113015	0					
ANR	4117823	Identifier	core		4113015	0					
ANR	4117824	Argument	len		4113015	1					
ANR	4117825	Identifier	len		4113015	0					
ANR	4117826	ExpressionStatement	r_core_block_read ( core )	3287:8:83982:84006	4113015	5	True				
ANR	4117827	CallExpression	r_core_block_read ( core )		4113015	0					
ANR	4117828	Callee	r_core_block_read		4113015	0					
ANR	4117829	Identifier	r_core_block_read		4113015	0					
ANR	4117830	ArgumentList	core		4113015	1					
ANR	4117831	Argument	core		4113015	0					
ANR	4117832	Identifier	core		4113015	0					
ANR	4117833	ElseStatement	else		4113015	0					
ANR	4117834	CompoundStatement		784:13:19379:19379	4113015	0					
ANR	4117835	ExpressionStatement	"eprintf ( ""Error: Invalid hexpairs for @x:\\n"" )"	3290:7:84039:84084	4113015	0	True				
ANR	4117836	CallExpression	"eprintf ( ""Error: Invalid hexpairs for @x:\\n"" )"		4113015	0					
ANR	4117837	Callee	eprintf		4113015	0					
ANR	4117838	Identifier	eprintf		4113015	0					
ANR	4117839	ArgumentList	"""Error: Invalid hexpairs for @x:\\n"""		4113015	1					
ANR	4117840	Argument	"""Error: Invalid hexpairs for @x:\\n"""		4113015	0					
ANR	4117841	PrimaryExpression	"""Error: Invalid hexpairs for @x:\\n"""		4113015	0					
ANR	4117842	ExpressionStatement	free ( buf )	3292:6:84100:84110	4113015	3	True				
ANR	4117843	CallExpression	free ( buf )		4113015	0					
ANR	4117844	Callee	free		4113015	0					
ANR	4117845	Identifier	free		4113015	0					
ANR	4117846	ArgumentList	buf		4113015	1					
ANR	4117847	Argument	buf		4113015	0					
ANR	4117848	Identifier	buf		4113015	0					
ANR	4117849	ElseStatement	else		4113015	0					
ANR	4117850	CompoundStatement		788:12:19473:19473	4113015	0					
ANR	4117851	ExpressionStatement	"eprintf ( ""cannot allocate\\n"" )"	3294:6:84132:84161	4113015	0	True				
ANR	4117852	CallExpression	"eprintf ( ""cannot allocate\\n"" )"		4113015	0					
ANR	4117853	Callee	eprintf		4113015	0					
ANR	4117854	Identifier	eprintf		4113015	0					
ANR	4117855	ArgumentList	"""cannot allocate\\n"""		4113015	1					
ANR	4117856	Argument	"""cannot allocate\\n"""		4113015	0					
ANR	4117857	PrimaryExpression	"""cannot allocate\\n"""		4113015	0					
ANR	4117858	ElseStatement	else		4113015	0					
ANR	4117859	CompoundStatement		791:11:19530:19530	4113015	0					
ANR	4117860	ExpressionStatement	"eprintf ( ""Invalid @x: syntax\\n"" )"	3297:5:84188:84220	4113015	0	True				
ANR	4117861	CallExpression	"eprintf ( ""Invalid @x: syntax\\n"" )"		4113015	0					
ANR	4117862	Callee	eprintf		4113015	0					
ANR	4117863	Identifier	eprintf		4113015	0					
ANR	4117864	ArgumentList	"""Invalid @x: syntax\\n"""		4113015	1					
ANR	4117865	Argument	"""Invalid @x: syntax\\n"""		4113015	0					
ANR	4117866	PrimaryExpression	"""Invalid @x: syntax\\n"""		4113015	0					
ANR	4117867	BreakStatement	break ;	3299:4:84232:84237	4113015	26	True				
ANR	4117868	Label	case 'k' :	3300:3:84242:84250	4113015	27	True				
ANR	4117869	CompoundStatement		797:5:19621:19688	4113015	28					
ANR	4117870	IdentifierDeclStatement	"char * out = sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) ) ;"	3302:5:84272:84339	4113015	0	True				
ANR	4117871	IdentifierDecl	"* out = sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) )"		4113015	0					
ANR	4117872	IdentifierDeclType	char *		4113015	0					
ANR	4117873	Identifier	out		4113015	1					
ANR	4117874	AssignmentExpression	"* out = sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) )"		4113015	2		=			
ANR	4117875	Identifier	out		4113015	0					
ANR	4117876	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ptr + ( ( ptr [ 1 ] ) ? 2 : 1 ) )"		4113015	1					
ANR	4117877	Callee	sdb_querys		4113015	0					
ANR	4117878	Identifier	sdb_querys		4113015	0					
ANR	4117879	ArgumentList	core -> sdb		4113015	1					
ANR	4117880	Argument	core -> sdb		4113015	0					
ANR	4117881	PtrMemberAccess	core -> sdb		4113015	0					
ANR	4117882	Identifier	core		4113015	0					
ANR	4117883	Identifier	sdb		4113015	1					
ANR	4117884	Argument	NULL		4113015	1					
ANR	4117885	Identifier	NULL		4113015	0					
ANR	4117886	Argument	0		4113015	2					
ANR	4117887	PrimaryExpression	0		4113015	0					
ANR	4117888	Argument	ptr + ( ( ptr [ 1 ] ) ? 2 : 1 )		4113015	3					
ANR	4117889	AdditiveExpression	ptr + ( ( ptr [ 1 ] ) ? 2 : 1 )		4113015	0		+			
ANR	4117890	Identifier	ptr		4113015	0					
ANR	4117891	ConditionalExpression	( ptr [ 1 ] ) ? 2 : 1		4113015	1					
ANR	4117892	Condition	ptr [ 1 ]		4113015	0					
ANR	4117893	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4117894	Identifier	ptr		4113015	0					
ANR	4117895	PrimaryExpression	1		4113015	1					
ANR	4117896	PrimaryExpression	2		4113015	1					
ANR	4117897	PrimaryExpression	1		4113015	2					
ANR	4117898	IfStatement	if ( out )		4113015	1					
ANR	4117899	Condition	out	3303:9:84350:84352	4113015	0	True				
ANR	4117900	Identifier	out		4113015	0					
ANR	4117901	CompoundStatement		798:14:19704:19704	4113015	1					
ANR	4117902	ExpressionStatement	"r_core_seek ( core , r_num_math ( core -> num , out ) , 1 )"	3304:6:84363:84413	4113015	0	True				
ANR	4117903	CallExpression	"r_core_seek ( core , r_num_math ( core -> num , out ) , 1 )"		4113015	0					
ANR	4117904	Callee	r_core_seek		4113015	0					
ANR	4117905	Identifier	r_core_seek		4113015	0					
ANR	4117906	ArgumentList	core		4113015	1					
ANR	4117907	Argument	core		4113015	0					
ANR	4117908	Identifier	core		4113015	0					
ANR	4117909	Argument	"r_num_math ( core -> num , out )"		4113015	1					
ANR	4117910	CallExpression	"r_num_math ( core -> num , out )"		4113015	0					
ANR	4117911	Callee	r_num_math		4113015	0					
ANR	4117912	Identifier	r_num_math		4113015	0					
ANR	4117913	ArgumentList	core -> num		4113015	1					
ANR	4117914	Argument	core -> num		4113015	0					
ANR	4117915	PtrMemberAccess	core -> num		4113015	0					
ANR	4117916	Identifier	core		4113015	0					
ANR	4117917	Identifier	num		4113015	1					
ANR	4117918	Argument	out		4113015	1					
ANR	4117919	Identifier	out		4113015	0					
ANR	4117920	Argument	1		4113015	2					
ANR	4117921	PrimaryExpression	1		4113015	0					
ANR	4117922	ExpressionStatement	free ( out )	3305:6:84421:84431	4113015	1	True				
ANR	4117923	CallExpression	free ( out )		4113015	0					
ANR	4117924	Callee	free		4113015	0					
ANR	4117925	Identifier	free		4113015	0					
ANR	4117926	ArgumentList	out		4113015	1					
ANR	4117927	Argument	out		4113015	0					
ANR	4117928	Identifier	out		4113015	0					
ANR	4117929	ExpressionStatement	usemyblock = true	3306:6:84439:84456	4113015	2	True				
ANR	4117930	AssignmentExpression	usemyblock = true		4113015	0		=			
ANR	4117931	Identifier	usemyblock		4113015	0					
ANR	4117932	Identifier	true		4113015	1					
ANR	4117933	BreakStatement	break ;	3309:4:84476:84481	4113015	29	True				
ANR	4117934	Label	case 'o' :	3310:3:84486:84494	4113015	30	True				
ANR	4117935	IfStatement	if ( ptr [ 1 ] == ':' )		4113015	31					
ANR	4117936	Condition	ptr [ 1 ] == ':'	3311:8:84514:84526	4113015	0	True				
ANR	4117937	EqualityExpression	ptr [ 1 ] == ':'		4113015	0		==			
ANR	4117938	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4117939	Identifier	ptr		4113015	0					
ANR	4117940	PrimaryExpression	1		4113015	1					
ANR	4117941	PrimaryExpression	':'		4113015	1					
ANR	4117942	CompoundStatement		806:23:19878:19878	4113015	1					
ANR	4117943	ExpressionStatement	tmpfd = core -> io -> desc ? core -> io -> desc -> fd : - 1	3312:5:84536:84584	4113015	0	True				
ANR	4117944	AssignmentExpression	tmpfd = core -> io -> desc ? core -> io -> desc -> fd : - 1		4113015	0		=			
ANR	4117945	Identifier	tmpfd		4113015	0					
ANR	4117946	ConditionalExpression	core -> io -> desc ? core -> io -> desc -> fd : - 1		4113015	1					
ANR	4117947	Condition	core -> io -> desc		4113015	0					
ANR	4117948	PtrMemberAccess	core -> io -> desc		4113015	0					
ANR	4117949	PtrMemberAccess	core -> io		4113015	0					
ANR	4117950	Identifier	core		4113015	0					
ANR	4117951	Identifier	io		4113015	1					
ANR	4117952	Identifier	desc		4113015	1					
ANR	4117953	PtrMemberAccess	core -> io -> desc -> fd		4113015	1					
ANR	4117954	PtrMemberAccess	core -> io -> desc		4113015	0					
ANR	4117955	PtrMemberAccess	core -> io		4113015	0					
ANR	4117956	Identifier	core		4113015	0					
ANR	4117957	Identifier	io		4113015	1					
ANR	4117958	Identifier	desc		4113015	1					
ANR	4117959	Identifier	fd		4113015	1					
ANR	4117960	UnaryOperationExpression	- 1		4113015	2					
ANR	4117961	UnaryOperator	-		4113015	0					
ANR	4117962	PrimaryExpression	1		4113015	1					
ANR	4117963	ExpressionStatement	"r_io_use_fd ( core -> io , atoi ( ptr + 2 ) )"	3313:5:84591:84629	4113015	1	True				
ANR	4117964	CallExpression	"r_io_use_fd ( core -> io , atoi ( ptr + 2 ) )"		4113015	0					
ANR	4117965	Callee	r_io_use_fd		4113015	0					
ANR	4117966	Identifier	r_io_use_fd		4113015	0					
ANR	4117967	ArgumentList	core -> io		4113015	1					
ANR	4117968	Argument	core -> io		4113015	0					
ANR	4117969	PtrMemberAccess	core -> io		4113015	0					
ANR	4117970	Identifier	core		4113015	0					
ANR	4117971	Identifier	io		4113015	1					
ANR	4117972	Argument	atoi ( ptr + 2 )		4113015	1					
ANR	4117973	CallExpression	atoi ( ptr + 2 )		4113015	0					
ANR	4117974	Callee	atoi		4113015	0					
ANR	4117975	Identifier	atoi		4113015	0					
ANR	4117976	ArgumentList	ptr + 2		4113015	1					
ANR	4117977	Argument	ptr + 2		4113015	0					
ANR	4117978	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4117979	Identifier	ptr		4113015	0					
ANR	4117980	PrimaryExpression	2		4113015	1					
ANR	4117981	BreakStatement	break ;	3315:4:84641:84646	4113015	32	True				
ANR	4117982	Label	case 'a' :	3316:3:84651:84659	4113015	33	True				
ANR	4117983	IfStatement	if ( ptr [ 1 ] == ':' )		4113015	34					
ANR	4117984	Condition	ptr [ 1 ] == ':'	3317:8:84678:84690	4113015	0	True				
ANR	4117985	EqualityExpression	ptr [ 1 ] == ':'		4113015	0		==			
ANR	4117986	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4117987	Identifier	ptr		4113015	0					
ANR	4117988	PrimaryExpression	1		4113015	1					
ANR	4117989	PrimaryExpression	':'		4113015	1					
ANR	4117990	CompoundStatement		813:5:20049:20080	4113015	1					
ANR	4117991	IdentifierDeclStatement	"char * q = strchr ( ptr + 2 , ':' ) ;"	3318:5:84700:84731	4113015	0	True				
ANR	4117992	IdentifierDecl	"* q = strchr ( ptr + 2 , ':' )"		4113015	0					
ANR	4117993	IdentifierDeclType	char *		4113015	0					
ANR	4117994	Identifier	q		4113015	1					
ANR	4117995	AssignmentExpression	"* q = strchr ( ptr + 2 , ':' )"		4113015	2		=			
ANR	4117996	Identifier	q		4113015	0					
ANR	4117997	CallExpression	"strchr ( ptr + 2 , ':' )"		4113015	1					
ANR	4117998	Callee	strchr		4113015	0					
ANR	4117999	Identifier	strchr		4113015	0					
ANR	4118000	ArgumentList	ptr + 2		4113015	1					
ANR	4118001	Argument	ptr + 2		4113015	0					
ANR	4118002	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4118003	Identifier	ptr		4113015	0					
ANR	4118004	PrimaryExpression	2		4113015	1					
ANR	4118005	Argument	':'		4113015	1					
ANR	4118006	PrimaryExpression	':'		4113015	0					
ANR	4118007	IfStatement	if ( q )		4113015	1					
ANR	4118008	Condition	q	3319:9:84742:84742	4113015	0	True				
ANR	4118009	Identifier	q		4113015	0					
ANR	4118010	CompoundStatement		816:6:20118:20154	4113015	1					
ANR	4118011	ExpressionStatement	* q ++ = 0	3320:6:84753:84761	4113015	0	True				
ANR	4118012	AssignmentExpression	* q ++ = 0		4113015	0		=			
ANR	4118013	UnaryOperationExpression	* q ++		4113015	0					
ANR	4118014	UnaryOperator	*		4113015	0					
ANR	4118015	PostIncDecOperationExpression	q ++		4113015	1					
ANR	4118016	Identifier	q		4113015	0					
ANR	4118017	IncDec	++		4113015	1					
ANR	4118018	PrimaryExpression	0		4113015	1					
ANR	4118019	IdentifierDeclStatement	"int bits = r_num_math ( core -> num , q ) ;"	3321:6:84769:84805	4113015	1	True				
ANR	4118020	IdentifierDecl	"bits = r_num_math ( core -> num , q )"		4113015	0					
ANR	4118021	IdentifierDeclType	int		4113015	0					
ANR	4118022	Identifier	bits		4113015	1					
ANR	4118023	AssignmentExpression	"bits = r_num_math ( core -> num , q )"		4113015	2		=			
ANR	4118024	Identifier	bits		4113015	0					
ANR	4118025	CallExpression	"r_num_math ( core -> num , q )"		4113015	1					
ANR	4118026	Callee	r_num_math		4113015	0					
ANR	4118027	Identifier	r_num_math		4113015	0					
ANR	4118028	ArgumentList	core -> num		4113015	1					
ANR	4118029	Argument	core -> num		4113015	0					
ANR	4118030	PtrMemberAccess	core -> num		4113015	0					
ANR	4118031	Identifier	core		4113015	0					
ANR	4118032	Identifier	num		4113015	1					
ANR	4118033	Argument	q		4113015	1					
ANR	4118034	Identifier	q		4113015	0					
ANR	4118035	ExpressionStatement	"is_bits_set = set_tmp_bits ( core , bits , & tmpbits )"	3322:6:84813:84862	4113015	2	True				
ANR	4118036	AssignmentExpression	"is_bits_set = set_tmp_bits ( core , bits , & tmpbits )"		4113015	0		=			
ANR	4118037	Identifier	is_bits_set		4113015	0					
ANR	4118038	CallExpression	"set_tmp_bits ( core , bits , & tmpbits )"		4113015	1					
ANR	4118039	Callee	set_tmp_bits		4113015	0					
ANR	4118040	Identifier	set_tmp_bits		4113015	0					
ANR	4118041	ArgumentList	core		4113015	1					
ANR	4118042	Argument	core		4113015	0					
ANR	4118043	Identifier	core		4113015	0					
ANR	4118044	Argument	bits		4113015	1					
ANR	4118045	Identifier	bits		4113015	0					
ANR	4118046	Argument	& tmpbits		4113015	2					
ANR	4118047	UnaryOperationExpression	& tmpbits		4113015	0					
ANR	4118048	UnaryOperator	&		4113015	0					
ANR	4118049	Identifier	tmpbits		4113015	1					
ANR	4118050	ExpressionStatement	"is_arch_set = set_tmp_arch ( core , ptr + 2 , & tmpasm )"	3324:5:84876:84927	4113015	2	True				
ANR	4118051	AssignmentExpression	"is_arch_set = set_tmp_arch ( core , ptr + 2 , & tmpasm )"		4113015	0		=			
ANR	4118052	Identifier	is_arch_set		4113015	0					
ANR	4118053	CallExpression	"set_tmp_arch ( core , ptr + 2 , & tmpasm )"		4113015	1					
ANR	4118054	Callee	set_tmp_arch		4113015	0					
ANR	4118055	Identifier	set_tmp_arch		4113015	0					
ANR	4118056	ArgumentList	core		4113015	1					
ANR	4118057	Argument	core		4113015	0					
ANR	4118058	Identifier	core		4113015	0					
ANR	4118059	Argument	ptr + 2		4113015	1					
ANR	4118060	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4118061	Identifier	ptr		4113015	0					
ANR	4118062	PrimaryExpression	2		4113015	1					
ANR	4118063	Argument	& tmpasm		4113015	2					
ANR	4118064	UnaryOperationExpression	& tmpasm		4113015	0					
ANR	4118065	UnaryOperator	&		4113015	0					
ANR	4118066	Identifier	tmpasm		4113015	1					
ANR	4118067	ElseStatement	else		4113015	0					
ANR	4118068	CompoundStatement		820:11:20289:20289	4113015	0					
ANR	4118069	ExpressionStatement	"eprintf ( ""Usage: pd 10 @a:arm:32\\n"" )"	3326:5:84947:84983	4113015	0	True				
ANR	4118070	CallExpression	"eprintf ( ""Usage: pd 10 @a:arm:32\\n"" )"		4113015	0					
ANR	4118071	Callee	eprintf		4113015	0					
ANR	4118072	Identifier	eprintf		4113015	0					
ANR	4118073	ArgumentList	"""Usage: pd 10 @a:arm:32\\n"""		4113015	1					
ANR	4118074	Argument	"""Usage: pd 10 @a:arm:32\\n"""		4113015	0					
ANR	4118075	PrimaryExpression	"""Usage: pd 10 @a:arm:32\\n"""		4113015	0					
ANR	4118076	BreakStatement	break ;	3328:4:84995:85000	4113015	35	True				
ANR	4118077	Label	case 's' :	3329:3:85005:85013	4113015	36	True				
ANR	4118078	CompoundStatement		828:5:20463:20515	4113015	37					
ANR	4118079	ExpressionStatement	len = strlen ( ptr + 2 )	3331:5:85049:85071	4113015	0	True				
ANR	4118080	AssignmentExpression	len = strlen ( ptr + 2 )		4113015	0		=			
ANR	4118081	Identifier	len		4113015	0					
ANR	4118082	CallExpression	strlen ( ptr + 2 )		4113015	1					
ANR	4118083	Callee	strlen		4113015	0					
ANR	4118084	Identifier	strlen		4113015	0					
ANR	4118085	ArgumentList	ptr + 2		4113015	1					
ANR	4118086	Argument	ptr + 2		4113015	0					
ANR	4118087	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4118088	Identifier	ptr		4113015	0					
ANR	4118089	PrimaryExpression	2		4113015	1					
ANR	4118090	ExpressionStatement	"r_core_block_size ( core , len )"	3332:5:85078:85107	4113015	1	True				
ANR	4118091	CallExpression	"r_core_block_size ( core , len )"		4113015	0					
ANR	4118092	Callee	r_core_block_size		4113015	0					
ANR	4118093	Identifier	r_core_block_size		4113015	0					
ANR	4118094	ArgumentList	core		4113015	1					
ANR	4118095	Argument	core		4113015	0					
ANR	4118096	Identifier	core		4113015	0					
ANR	4118097	Argument	len		4113015	1					
ANR	4118098	Identifier	len		4113015	0					
ANR	4118099	IdentifierDeclStatement	const ut8 * buf = ( const ut8 * ) r_str_trim_ro ( ptr + 2 ) ;	3333:5:85114:85166	4113015	2	True				
ANR	4118100	IdentifierDecl	* buf = ( const ut8 * ) r_str_trim_ro ( ptr + 2 )		4113015	0					
ANR	4118101	IdentifierDeclType	const ut8 *		4113015	0					
ANR	4118102	Identifier	buf		4113015	1					
ANR	4118103	AssignmentExpression	* buf = ( const ut8 * ) r_str_trim_ro ( ptr + 2 )		4113015	2		=			
ANR	4118104	Identifier	buf		4113015	0					
ANR	4118105	CastExpression	( const ut8 * ) r_str_trim_ro ( ptr + 2 )		4113015	1					
ANR	4118106	CastTarget	const ut8 *		4113015	0					
ANR	4118107	CallExpression	r_str_trim_ro ( ptr + 2 )		4113015	1					
ANR	4118108	Callee	r_str_trim_ro		4113015	0					
ANR	4118109	Identifier	r_str_trim_ro		4113015	0					
ANR	4118110	ArgumentList	ptr + 2		4113015	1					
ANR	4118111	Argument	ptr + 2		4113015	0					
ANR	4118112	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4118113	Identifier	ptr		4113015	0					
ANR	4118114	PrimaryExpression	2		4113015	1					
ANR	4118115	IfStatement	if ( len > 0 )		4113015	3					
ANR	4118116	Condition	len > 0	3335:9:85178:85184	4113015	0	True				
ANR	4118117	RelationalExpression	len > 0		4113015	0		>			
ANR	4118118	Identifier	len		4113015	0					
ANR	4118119	PrimaryExpression	0		4113015	1					
ANR	4118120	CompoundStatement		832:6:20596:20654	4113015	1					
ANR	4118121	IdentifierDeclStatement	"RBuffer * b = r_buf_new_with_bytes ( buf , len ) ;"	3336:6:85195:85239	4113015	0	True				
ANR	4118122	IdentifierDecl	"* b = r_buf_new_with_bytes ( buf , len )"		4113015	0					
ANR	4118123	IdentifierDeclType	RBuffer *		4113015	0					
ANR	4118124	Identifier	b		4113015	1					
ANR	4118125	AssignmentExpression	"* b = r_buf_new_with_bytes ( buf , len )"		4113015	2		=			
ANR	4118126	Identifier	b		4113015	0					
ANR	4118127	CallExpression	"r_buf_new_with_bytes ( buf , len )"		4113015	1					
ANR	4118128	Callee	r_buf_new_with_bytes		4113015	0					
ANR	4118129	Identifier	r_buf_new_with_bytes		4113015	0					
ANR	4118130	ArgumentList	buf		4113015	1					
ANR	4118131	Argument	buf		4113015	0					
ANR	4118132	Identifier	buf		4113015	0					
ANR	4118133	Argument	len		4113015	1					
ANR	4118134	Identifier	len		4113015	0					
ANR	4118135	IdentifierDeclStatement	"RIODesc * d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 ) ;"	3337:6:85247:85305	4113015	1	True				
ANR	4118136	IdentifierDecl	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	0					
ANR	4118137	IdentifierDeclType	RIODesc *		4113015	0					
ANR	4118138	Identifier	d		4113015	1					
ANR	4118139	AssignmentExpression	"* d = r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	2		=			
ANR	4118140	Identifier	d		4113015	0					
ANR	4118141	CallExpression	"r_io_open_buffer ( core -> io , b , R_PERM_RWX , 0 )"		4113015	1					
ANR	4118142	Callee	r_io_open_buffer		4113015	0					
ANR	4118143	Identifier	r_io_open_buffer		4113015	0					
ANR	4118144	ArgumentList	core -> io		4113015	1					
ANR	4118145	Argument	core -> io		4113015	0					
ANR	4118146	PtrMemberAccess	core -> io		4113015	0					
ANR	4118147	Identifier	core		4113015	0					
ANR	4118148	Identifier	io		4113015	1					
ANR	4118149	Argument	b		4113015	1					
ANR	4118150	Identifier	b		4113015	0					
ANR	4118151	Argument	R_PERM_RWX		4113015	2					
ANR	4118152	Identifier	R_PERM_RWX		4113015	0					
ANR	4118153	Argument	0		4113015	3					
ANR	4118154	PrimaryExpression	0		4113015	0					
ANR	4118155	IfStatement	if ( ! core -> io -> va )		4113015	2					
ANR	4118156	Condition	! core -> io -> va	3338:10:85317:85329	4113015	0	True				
ANR	4118157	UnaryOperationExpression	! core -> io -> va		4113015	0					
ANR	4118158	UnaryOperator	!		4113015	0					
ANR	4118159	PtrMemberAccess	core -> io -> va		4113015	1					
ANR	4118160	PtrMemberAccess	core -> io		4113015	0					
ANR	4118161	Identifier	core		4113015	0					
ANR	4118162	Identifier	io		4113015	1					
ANR	4118163	Identifier	va		4113015	1					
ANR	4118164	CompoundStatement		833:25:20681:20681	4113015	1					
ANR	4118165	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3339:7:85341:85382	4113015	0	True				
ANR	4118166	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		4113015	0					
ANR	4118167	Callee	r_config_set_i		4113015	0					
ANR	4118168	Identifier	r_config_set_i		4113015	0					
ANR	4118169	ArgumentList	core -> config		4113015	1					
ANR	4118170	Argument	core -> config		4113015	0					
ANR	4118171	PtrMemberAccess	core -> config		4113015	0					
ANR	4118172	Identifier	core		4113015	0					
ANR	4118173	Identifier	config		4113015	1					
ANR	4118174	Argument	"""io.va"""		4113015	1					
ANR	4118175	PrimaryExpression	"""io.va"""		4113015	0					
ANR	4118176	Argument	1		4113015	2					
ANR	4118177	PrimaryExpression	1		4113015	0					
ANR	4118178	IfStatement	if ( d )		4113015	3					
ANR	4118179	Condition	d	3341:10:85402:85402	4113015	0	True				
ANR	4118180	Identifier	d		4113015	0					
ANR	4118181	CompoundStatement		836:13:20754:20754	4113015	1					
ANR	4118182	IfStatement	if ( tmpdesc )		4113015	0					
ANR	4118183	Condition	tmpdesc	3342:11:85418:85424	4113015	0	True				
ANR	4118184	Identifier	tmpdesc		4113015	0					
ANR	4118185	CompoundStatement		837:20:20776:20776	4113015	1					
ANR	4118186	ExpressionStatement	r_io_desc_close ( tmpdesc )	3343:8:85437:85462	4113015	0	True				
ANR	4118187	CallExpression	r_io_desc_close ( tmpdesc )		4113015	0					
ANR	4118188	Callee	r_io_desc_close		4113015	0					
ANR	4118189	Identifier	r_io_desc_close		4113015	0					
ANR	4118190	ArgumentList	tmpdesc		4113015	1					
ANR	4118191	Argument	tmpdesc		4113015	0					
ANR	4118192	Identifier	tmpdesc		4113015	0					
ANR	4118193	ExpressionStatement	tmpdesc = d	3345:7:85480:85491	4113015	1	True				
ANR	4118194	AssignmentExpression	tmpdesc = d		4113015	0		=			
ANR	4118195	Identifier	tmpdesc		4113015	0					
ANR	4118196	Identifier	d		4113015	1					
ANR	4118197	IfStatement	if ( pamode )		4113015	2					
ANR	4118198	Condition	pamode	3346:11:85504:85509	4113015	0	True				
ANR	4118199	Identifier	pamode		4113015	0					
ANR	4118200	CompoundStatement		841:19:20861:20861	4113015	1					
ANR	4118201	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 1 )"	3347:8:85522:85563	4113015	0	True				
ANR	4118202	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 1 )"		4113015	0					
ANR	4118203	Callee	r_config_set_i		4113015	0					
ANR	4118204	Identifier	r_config_set_i		4113015	0					
ANR	4118205	ArgumentList	core -> config		4113015	1					
ANR	4118206	Argument	core -> config		4113015	0					
ANR	4118207	PtrMemberAccess	core -> config		4113015	0					
ANR	4118208	Identifier	core		4113015	0					
ANR	4118209	Identifier	config		4113015	1					
ANR	4118210	Argument	"""io.va"""		4113015	1					
ANR	4118211	PrimaryExpression	"""io.va"""		4113015	0					
ANR	4118212	Argument	1		4113015	2					
ANR	4118213	PrimaryExpression	1		4113015	0					
ANR	4118214	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"	3349:7:85581:85653	4113015	3	True				
ANR	4118215	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , core -> offset , r_buf_size ( b ) )"		4113015	0					
ANR	4118216	Callee	r_io_map_new		4113015	0					
ANR	4118217	Identifier	r_io_map_new		4113015	0					
ANR	4118218	ArgumentList	core -> io		4113015	1					
ANR	4118219	Argument	core -> io		4113015	0					
ANR	4118220	PtrMemberAccess	core -> io		4113015	0					
ANR	4118221	Identifier	core		4113015	0					
ANR	4118222	Identifier	io		4113015	1					
ANR	4118223	Argument	d -> fd		4113015	1					
ANR	4118224	PtrMemberAccess	d -> fd		4113015	0					
ANR	4118225	Identifier	d		4113015	0					
ANR	4118226	Identifier	fd		4113015	1					
ANR	4118227	Argument	d -> perm		4113015	2					
ANR	4118228	PtrMemberAccess	d -> perm		4113015	0					
ANR	4118229	Identifier	d		4113015	0					
ANR	4118230	Identifier	perm		4113015	1					
ANR	4118231	Argument	0		4113015	3					
ANR	4118232	PrimaryExpression	0		4113015	0					
ANR	4118233	Argument	core -> offset		4113015	4					
ANR	4118234	PtrMemberAccess	core -> offset		4113015	0					
ANR	4118235	Identifier	core		4113015	0					
ANR	4118236	Identifier	offset		4113015	1					
ANR	4118237	Argument	r_buf_size ( b )		4113015	5					
ANR	4118238	CallExpression	r_buf_size ( b )		4113015	0					
ANR	4118239	Callee	r_buf_size		4113015	0					
ANR	4118240	Identifier	r_buf_size		4113015	0					
ANR	4118241	ArgumentList	b		4113015	1					
ANR	4118242	Argument	b		4113015	0					
ANR	4118243	Identifier	b		4113015	0					
ANR	4118244	ExpressionStatement	"r_core_block_size ( core , len )"	3350:7:85662:85691	4113015	4	True				
ANR	4118245	CallExpression	"r_core_block_size ( core , len )"		4113015	0					
ANR	4118246	Callee	r_core_block_size		4113015	0					
ANR	4118247	Identifier	r_core_block_size		4113015	0					
ANR	4118248	ArgumentList	core		4113015	1					
ANR	4118249	Argument	core		4113015	0					
ANR	4118250	Identifier	core		4113015	0					
ANR	4118251	Argument	len		4113015	1					
ANR	4118252	Identifier	len		4113015	0					
ANR	4118253	BreakStatement	break ;	3355:0:85750:85755	4113015	38	True				
ANR	4118254	Label	default :	3356:3:85760:85767	4113015	39	True				
ANR	4118255	Identifier	default		4113015	0					
ANR	4118256	GotoStatement	goto ignore ;	3357:4:85773:85784	4113015	40	True				
ANR	4118257	Identifier	ignore		4113015	0					
ANR	4118258	ExpressionStatement	* ptr = '@'	3359:3:85794:85804	4113015	1	True				
ANR	4118259	AssignmentExpression	* ptr = '@'		4113015	0		=			
ANR	4118260	UnaryOperationExpression	* ptr		4113015	0					
ANR	4118261	UnaryOperator	*		4113015	0					
ANR	4118262	Identifier	ptr		4113015	1					
ANR	4118263	PrimaryExpression	'@'		4113015	1					
ANR	4118264	IdentifierDeclStatement	char * trim = ptr - 2 ;	3362:3:85874:85894	4113015	2	True				
ANR	4118265	IdentifierDecl	* trim = ptr - 2		4113015	0					
ANR	4118266	IdentifierDeclType	char *		4113015	0					
ANR	4118267	Identifier	trim		4113015	1					
ANR	4118268	AssignmentExpression	* trim = ptr - 2		4113015	2		=			
ANR	4118269	Identifier	trim		4113015	0					
ANR	4118270	AdditiveExpression	ptr - 2		4113015	1		-			
ANR	4118271	Identifier	ptr		4113015	0					
ANR	4118272	PrimaryExpression	2		4113015	1					
ANR	4118273	WhileStatement	while ( trim > cmd )		4113015	3					
ANR	4118274	Condition	trim > cmd	3363:10:85906:85915	4113015	0	True				
ANR	4118275	RelationalExpression	trim > cmd		4113015	0		>			
ANR	4118276	Identifier	trim		4113015	0					
ANR	4118277	Identifier	cmd		4113015	1					
ANR	4118278	CompoundStatement		858:22:21267:21267	4113015	1					
ANR	4118279	IfStatement	if ( ! IS_WHITESPACE ( * trim ) )		4113015	0					
ANR	4118280	Condition	! IS_WHITESPACE ( * trim )	3364:8:85928:85949	4113015	0	True				
ANR	4118281	UnaryOperationExpression	! IS_WHITESPACE ( * trim )		4113015	0					
ANR	4118282	UnaryOperator	!		4113015	0					
ANR	4118283	CallExpression	IS_WHITESPACE ( * trim )		4113015	1					
ANR	4118284	Callee	IS_WHITESPACE		4113015	0					
ANR	4118285	Identifier	IS_WHITESPACE		4113015	0					
ANR	4118286	ArgumentList	* trim		4113015	1					
ANR	4118287	Argument	* trim		4113015	0					
ANR	4118288	UnaryOperationExpression	* trim		4113015	0					
ANR	4118289	UnaryOperator	*		4113015	0					
ANR	4118290	Identifier	trim		4113015	1					
ANR	4118291	CompoundStatement		859:32:21301:21301	4113015	1					
ANR	4118292	BreakStatement	break ;	3365:5:85959:85964	4113015	0	True				
ANR	4118293	ExpressionStatement	* trim = 0	3367:4:85976:85985	4113015	1	True				
ANR	4118294	AssignmentExpression	* trim = 0		4113015	0		=			
ANR	4118295	UnaryOperationExpression	* trim		4113015	0					
ANR	4118296	UnaryOperator	*		4113015	0					
ANR	4118297	Identifier	trim		4113015	1					
ANR	4118298	PrimaryExpression	0		4113015	1					
ANR	4118299	ExpressionStatement	trim --	3368:4:85991:85997	4113015	2	True				
ANR	4118300	PostIncDecOperationExpression	trim --		4113015	0					
ANR	4118301	Identifier	trim		4113015	0					
ANR	4118302	IncDec	--		4113015	1					
ANR	4118303	GotoStatement	goto next_arroba ;	3370:3:86007:86023	4113015	4	True				
ANR	4118304	Identifier	next_arroba		4113015	0					
ANR	4118305	Label	ignore :	3372:0:86029:86035	4113015	21	True				
ANR	4118306	Identifier	ignore		4113015	0					
ANR	4118307	ExpressionStatement	ptr = r_str_trim_head ( ptr + 1 ) - 1	3373:2:86039:86074	4113015	22	True				
ANR	4118308	AssignmentExpression	ptr = r_str_trim_head ( ptr + 1 ) - 1		4113015	0		=			
ANR	4118309	Identifier	ptr		4113015	0					
ANR	4118310	AdditiveExpression	r_str_trim_head ( ptr + 1 ) - 1		4113015	1		-			
ANR	4118311	CallExpression	r_str_trim_head ( ptr + 1 )		4113015	0					
ANR	4118312	Callee	r_str_trim_head		4113015	0					
ANR	4118313	Identifier	r_str_trim_head		4113015	0					
ANR	4118314	ArgumentList	ptr + 1		4113015	1					
ANR	4118315	Argument	ptr + 1		4113015	0					
ANR	4118316	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4118317	Identifier	ptr		4113015	0					
ANR	4118318	PrimaryExpression	1		4113015	1					
ANR	4118319	PrimaryExpression	1		4113015	1					
ANR	4118320	ExpressionStatement	cmd = r_str_trim_nc ( cmd )	3374:2:86078:86103	4113015	23	True				
ANR	4118321	AssignmentExpression	cmd = r_str_trim_nc ( cmd )		4113015	0		=			
ANR	4118322	Identifier	cmd		4113015	0					
ANR	4118323	CallExpression	r_str_trim_nc ( cmd )		4113015	1					
ANR	4118324	Callee	r_str_trim_nc		4113015	0					
ANR	4118325	Identifier	r_str_trim_nc		4113015	0					
ANR	4118326	ArgumentList	cmd		4113015	1					
ANR	4118327	Argument	cmd		4113015	0					
ANR	4118328	Identifier	cmd		4113015	0					
ANR	4118329	IfStatement	if ( ptr2 )		4113015	24					
ANR	4118330	Condition	ptr2	3375:6:86111:86114	4113015	0	True				
ANR	4118331	Identifier	ptr2		4113015	0					
ANR	4118332	CompoundStatement		870:12:21466:21466	4113015	1					
ANR	4118333	IfStatement	"if ( strlen ( ptr + 1 ) == 13 && strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 ) )"		4113015	0					
ANR	4118334	Condition	"strlen ( ptr + 1 ) == 13 && strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"	3376:7:86126:86242	4113015	0	True				
ANR	4118335	AndExpression	"strlen ( ptr + 1 ) == 13 && strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		4113015	0		&&			
ANR	4118336	EqualityExpression	strlen ( ptr + 1 ) == 13		4113015	0		==			
ANR	4118337	CallExpression	strlen ( ptr + 1 )		4113015	0					
ANR	4118338	Callee	strlen		4113015	0					
ANR	4118339	Identifier	strlen		4113015	0					
ANR	4118340	ArgumentList	ptr + 1		4113015	1					
ANR	4118341	Argument	ptr + 1		4113015	0					
ANR	4118342	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4118343	Identifier	ptr		4113015	0					
ANR	4118344	PrimaryExpression	1		4113015	1					
ANR	4118345	PrimaryExpression	13		4113015	1					
ANR	4118346	AndExpression	"strlen ( ptr2 + 1 ) == 6 && ! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		4113015	1		&&			
ANR	4118347	EqualityExpression	strlen ( ptr2 + 1 ) == 6		4113015	0		==			
ANR	4118348	CallExpression	strlen ( ptr2 + 1 )		4113015	0					
ANR	4118349	Callee	strlen		4113015	0					
ANR	4118350	Identifier	strlen		4113015	0					
ANR	4118351	ArgumentList	ptr2 + 1		4113015	1					
ANR	4118352	Argument	ptr2 + 1		4113015	0					
ANR	4118353	AdditiveExpression	ptr2 + 1		4113015	0		+			
ANR	4118354	Identifier	ptr2		4113015	0					
ANR	4118355	PrimaryExpression	1		4113015	1					
ANR	4118356	PrimaryExpression	6		4113015	1					
ANR	4118357	AndExpression	"! memcmp ( ptr + 1 , ""0x"" , 2 ) && ! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		4113015	1		&&			
ANR	4118358	UnaryOperationExpression	"! memcmp ( ptr + 1 , ""0x"" , 2 )"		4113015	0					
ANR	4118359	UnaryOperator	!		4113015	0					
ANR	4118360	CallExpression	"memcmp ( ptr + 1 , ""0x"" , 2 )"		4113015	1					
ANR	4118361	Callee	memcmp		4113015	0					
ANR	4118362	Identifier	memcmp		4113015	0					
ANR	4118363	ArgumentList	ptr + 1		4113015	1					
ANR	4118364	Argument	ptr + 1		4113015	0					
ANR	4118365	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4118366	Identifier	ptr		4113015	0					
ANR	4118367	PrimaryExpression	1		4113015	1					
ANR	4118368	Argument	"""0x"""		4113015	1					
ANR	4118369	PrimaryExpression	"""0x"""		4113015	0					
ANR	4118370	Argument	2		4113015	2					
ANR	4118371	PrimaryExpression	2		4113015	0					
ANR	4118372	UnaryOperationExpression	"! memcmp ( ptr2 + 1 , ""0x"" , 2 )"		4113015	1					
ANR	4118373	UnaryOperator	!		4113015	0					
ANR	4118374	CallExpression	"memcmp ( ptr2 + 1 , ""0x"" , 2 )"		4113015	1					
ANR	4118375	Callee	memcmp		4113015	0					
ANR	4118376	Identifier	memcmp		4113015	0					
ANR	4118377	ArgumentList	ptr2 + 1		4113015	1					
ANR	4118378	Argument	ptr2 + 1		4113015	0					
ANR	4118379	AdditiveExpression	ptr2 + 1		4113015	0		+			
ANR	4118380	Identifier	ptr2		4113015	0					
ANR	4118381	PrimaryExpression	1		4113015	1					
ANR	4118382	Argument	"""0x"""		4113015	1					
ANR	4118383	PrimaryExpression	"""0x"""		4113015	0					
ANR	4118384	Argument	2		4113015	2					
ANR	4118385	PrimaryExpression	2		4113015	0					
ANR	4118386	CompoundStatement		873:33:21594:21594	4113015	1					
ANR	4118387	ElseStatement	else		4113015	0					
ANR	4118388	IfStatement	if ( strlen ( ptr + 1 ) == 9 && strlen ( ptr2 + 1 ) == 4 )		4113015	0					
ANR	4118389	Condition	strlen ( ptr + 1 ) == 9 && strlen ( ptr2 + 1 ) == 4	3380:14:86285:86331	4113015	0	True				
ANR	4118390	AndExpression	strlen ( ptr + 1 ) == 9 && strlen ( ptr2 + 1 ) == 4		4113015	0		&&			
ANR	4118391	EqualityExpression	strlen ( ptr + 1 ) == 9		4113015	0		==			
ANR	4118392	CallExpression	strlen ( ptr + 1 )		4113015	0					
ANR	4118393	Callee	strlen		4113015	0					
ANR	4118394	Identifier	strlen		4113015	0					
ANR	4118395	ArgumentList	ptr + 1		4113015	1					
ANR	4118396	Argument	ptr + 1		4113015	0					
ANR	4118397	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4118398	Identifier	ptr		4113015	0					
ANR	4118399	PrimaryExpression	1		4113015	1					
ANR	4118400	PrimaryExpression	9		4113015	1					
ANR	4118401	EqualityExpression	strlen ( ptr2 + 1 ) == 4		4113015	1		==			
ANR	4118402	CallExpression	strlen ( ptr2 + 1 )		4113015	0					
ANR	4118403	Callee	strlen		4113015	0					
ANR	4118404	Identifier	strlen		4113015	0					
ANR	4118405	ArgumentList	ptr2 + 1		4113015	1					
ANR	4118406	Argument	ptr2 + 1		4113015	0					
ANR	4118407	AdditiveExpression	ptr2 + 1		4113015	0		+			
ANR	4118408	Identifier	ptr2		4113015	0					
ANR	4118409	PrimaryExpression	1		4113015	1					
ANR	4118410	PrimaryExpression	4		4113015	1					
ANR	4118411	CompoundStatement		875:63:21683:21683	4113015	1					
ANR	4118412	ElseStatement	else		4113015	0					
ANR	4118413	CompoundStatement		877:10:21715:21715	4113015	0					
ANR	4118414	ExpressionStatement	* ptr2 = '\\0'	3383:4:86372:86384	4113015	0	True				
ANR	4118415	AssignmentExpression	* ptr2 = '\\0'		4113015	0		=			
ANR	4118416	UnaryOperationExpression	* ptr2		4113015	0					
ANR	4118417	UnaryOperator	*		4113015	0					
ANR	4118418	Identifier	ptr2		4113015	1					
ANR	4118419	PrimaryExpression	'\\0'		4113015	1					
ANR	4118420	IfStatement	if ( ! ptr2 [ 1 ] )		4113015	1					
ANR	4118421	Condition	! ptr2 [ 1 ]	3384:8:86394:86401	4113015	0	True				
ANR	4118422	UnaryOperationExpression	! ptr2 [ 1 ]		4113015	0					
ANR	4118423	UnaryOperator	!		4113015	0					
ANR	4118424	ArrayIndexing	ptr2 [ 1 ]		4113015	1					
ANR	4118425	Identifier	ptr2		4113015	0					
ANR	4118426	PrimaryExpression	1		4113015	1					
ANR	4118427	CompoundStatement		879:18:21753:21753	4113015	1					
ANR	4118428	GotoStatement	goto fail ;	3385:5:86411:86420	4113015	0	True				
ANR	4118429	Identifier	fail		4113015	0					
ANR	4118430	ExpressionStatement	"r_core_block_size ( core , r_num_math ( core -> num , ptr2 + 1 ) )"	3387:4:86432:86496	4113015	2	True				
ANR	4118431	CallExpression	"r_core_block_size ( core , r_num_math ( core -> num , ptr2 + 1 ) )"		4113015	0					
ANR	4118432	Callee	r_core_block_size		4113015	0					
ANR	4118433	Identifier	r_core_block_size		4113015	0					
ANR	4118434	ArgumentList	core		4113015	1					
ANR	4118435	Argument	core		4113015	0					
ANR	4118436	Identifier	core		4113015	0					
ANR	4118437	Argument	"r_num_math ( core -> num , ptr2 + 1 )"		4113015	1					
ANR	4118438	CallExpression	"r_num_math ( core -> num , ptr2 + 1 )"		4113015	0					
ANR	4118439	Callee	r_num_math		4113015	0					
ANR	4118440	Identifier	r_num_math		4113015	0					
ANR	4118441	ArgumentList	core -> num		4113015	1					
ANR	4118442	Argument	core -> num		4113015	0					
ANR	4118443	PtrMemberAccess	core -> num		4113015	0					
ANR	4118444	Identifier	core		4113015	0					
ANR	4118445	Identifier	num		4113015	1					
ANR	4118446	Argument	ptr2 + 1		4113015	1					
ANR	4118447	AdditiveExpression	ptr2 + 1		4113015	0		+			
ANR	4118448	Identifier	ptr2		4113015	0					
ANR	4118449	PrimaryExpression	1		4113015	1					
ANR	4118450	ExpressionStatement	offstr = r_str_trim_head ( ptr + 1 )	3392:2:86510:86544	4113015	25	True				
ANR	4118451	AssignmentExpression	offstr = r_str_trim_head ( ptr + 1 )		4113015	0		=			
ANR	4118452	Identifier	offstr		4113015	0					
ANR	4118453	CallExpression	r_str_trim_head ( ptr + 1 )		4113015	1					
ANR	4118454	Callee	r_str_trim_head		4113015	0					
ANR	4118455	Identifier	r_str_trim_head		4113015	0					
ANR	4118456	ArgumentList	ptr + 1		4113015	1					
ANR	4118457	Argument	ptr + 1		4113015	0					
ANR	4118458	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4118459	Identifier	ptr		4113015	0					
ANR	4118460	PrimaryExpression	1		4113015	1					
ANR	4118461	ExpressionStatement	"addr = r_num_math ( core -> num , offstr )"	3394:2:86549:86586	4113015	26	True				
ANR	4118462	AssignmentExpression	"addr = r_num_math ( core -> num , offstr )"		4113015	0		=			
ANR	4118463	Identifier	addr		4113015	0					
ANR	4118464	CallExpression	"r_num_math ( core -> num , offstr )"		4113015	1					
ANR	4118465	Callee	r_num_math		4113015	0					
ANR	4118466	Identifier	r_num_math		4113015	0					
ANR	4118467	ArgumentList	core -> num		4113015	1					
ANR	4118468	Argument	core -> num		4113015	0					
ANR	4118469	PtrMemberAccess	core -> num		4113015	0					
ANR	4118470	Identifier	core		4113015	0					
ANR	4118471	Identifier	num		4113015	1					
ANR	4118472	Argument	offstr		4113015	1					
ANR	4118473	Identifier	offstr		4113015	0					
ANR	4118474	ExpressionStatement	addr_is_set = true	3395:2:86590:86608	4113015	27	True				
ANR	4118475	AssignmentExpression	addr_is_set = true		4113015	0		=			
ANR	4118476	Identifier	addr_is_set		4113015	0					
ANR	4118477	Identifier	true		4113015	1					
ANR	4118478	IfStatement	if ( isalpha ( ( ut8 ) ptr [ 1 ] ) && ! addr )		4113015	28					
ANR	4118479	Condition	isalpha ( ( ut8 ) ptr [ 1 ] ) && ! addr	3397:6:86617:86646	4113015	0	True				
ANR	4118480	AndExpression	isalpha ( ( ut8 ) ptr [ 1 ] ) && ! addr		4113015	0		&&			
ANR	4118481	CallExpression	isalpha ( ( ut8 ) ptr [ 1 ] )		4113015	0					
ANR	4118482	Callee	isalpha		4113015	0					
ANR	4118483	Identifier	isalpha		4113015	0					
ANR	4118484	ArgumentList	( ut8 ) ptr [ 1 ]		4113015	1					
ANR	4118485	Argument	( ut8 ) ptr [ 1 ]		4113015	0					
ANR	4118486	CastExpression	( ut8 ) ptr [ 1 ]		4113015	0					
ANR	4118487	CastTarget	ut8		4113015	0					
ANR	4118488	ArrayIndexing	ptr [ 1 ]		4113015	1					
ANR	4118489	Identifier	ptr		4113015	0					
ANR	4118490	PrimaryExpression	1		4113015	1					
ANR	4118491	UnaryOperationExpression	! addr		4113015	1					
ANR	4118492	UnaryOperator	!		4113015	0					
ANR	4118493	Identifier	addr		4113015	1					
ANR	4118494	CompoundStatement		892:38:21998:21998	4113015	1					
ANR	4118495	IfStatement	"if ( ! r_flag_get ( core -> flags , ptr + 1 ) )"		4113015	0					
ANR	4118496	Condition	"! r_flag_get ( core -> flags , ptr + 1 )"	3398:7:86658:86691	4113015	0	True				
ANR	4118497	UnaryOperationExpression	"! r_flag_get ( core -> flags , ptr + 1 )"		4113015	0					
ANR	4118498	UnaryOperator	!		4113015	0					
ANR	4118499	CallExpression	"r_flag_get ( core -> flags , ptr + 1 )"		4113015	1					
ANR	4118500	Callee	r_flag_get		4113015	0					
ANR	4118501	Identifier	r_flag_get		4113015	0					
ANR	4118502	ArgumentList	core -> flags		4113015	1					
ANR	4118503	Argument	core -> flags		4113015	0					
ANR	4118504	PtrMemberAccess	core -> flags		4113015	0					
ANR	4118505	Identifier	core		4113015	0					
ANR	4118506	Identifier	flags		4113015	1					
ANR	4118507	Argument	ptr + 1		4113015	1					
ANR	4118508	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4118509	Identifier	ptr		4113015	0					
ANR	4118510	PrimaryExpression	1		4113015	1					
ANR	4118511	CompoundStatement		893:43:22043:22043	4113015	1					
ANR	4118512	ExpressionStatement	"eprintf ( ""Invalid address (%s)\\n"" , ptr + 1 )"	3399:4:86700:86743	4113015	0	True				
ANR	4118513	CallExpression	"eprintf ( ""Invalid address (%s)\\n"" , ptr + 1 )"		4113015	0					
ANR	4118514	Callee	eprintf		4113015	0					
ANR	4118515	Identifier	eprintf		4113015	0					
ANR	4118516	ArgumentList	"""Invalid address (%s)\\n"""		4113015	1					
ANR	4118517	Argument	"""Invalid address (%s)\\n"""		4113015	0					
ANR	4118518	PrimaryExpression	"""Invalid address (%s)\\n"""		4113015	0					
ANR	4118519	Argument	ptr + 1		4113015	1					
ANR	4118520	AdditiveExpression	ptr + 1		4113015	0		+			
ANR	4118521	Identifier	ptr		4113015	0					
ANR	4118522	PrimaryExpression	1		4113015	1					
ANR	4118523	GotoStatement	goto fail ;	3400:4:86749:86758	4113015	1	True				
ANR	4118524	Identifier	fail		4113015	0					
ANR	4118525	ElseStatement	else		4113015	0					
ANR	4118526	CompoundStatement		898:3:22128:22145	4113015	0					
ANR	4118527	IdentifierDeclStatement	char ch = * offstr ;	3403:3:86779:86796	4113015	0	True				
ANR	4118528	IdentifierDecl	ch = * offstr		4113015	0					
ANR	4118529	IdentifierDeclType	char		4113015	0					
ANR	4118530	Identifier	ch		4113015	1					
ANR	4118531	AssignmentExpression	ch = * offstr		4113015	2		=			
ANR	4118532	Identifier	ch		4113015	0					
ANR	4118533	UnaryOperationExpression	* offstr		4113015	1					
ANR	4118534	UnaryOperator	*		4113015	0					
ANR	4118535	Identifier	offstr		4113015	1					
ANR	4118536	IfStatement	if ( ch == '-' || ch == '+' )		4113015	1					
ANR	4118537	Condition	ch == '-' || ch == '+'	3404:7:86805:86826	4113015	0	True				
ANR	4118538	OrExpression	ch == '-' || ch == '+'		4113015	0		||			
ANR	4118539	EqualityExpression	ch == '-'		4113015	0		==			
ANR	4118540	Identifier	ch		4113015	0					
ANR	4118541	PrimaryExpression	'-'		4113015	1					
ANR	4118542	EqualityExpression	ch == '+'		4113015	1		==			
ANR	4118543	Identifier	ch		4113015	0					
ANR	4118544	PrimaryExpression	'+'		4113015	1					
ANR	4118545	CompoundStatement		899:31:22178:22178	4113015	1					
ANR	4118546	ExpressionStatement	addr = core -> offset + addr	3405:4:86835:86861	4113015	0	True				
ANR	4118547	AssignmentExpression	addr = core -> offset + addr		4113015	0		=			
ANR	4118548	Identifier	addr		4113015	0					
ANR	4118549	AdditiveExpression	core -> offset + addr		4113015	1		+			
ANR	4118550	PtrMemberAccess	core -> offset		4113015	0					
ANR	4118551	Identifier	core		4113015	0					
ANR	4118552	Identifier	offset		4113015	1					
ANR	4118553	Identifier	addr		4113015	1					
ANR	4118554	IfStatement	if ( addr )		4113015	29					
ANR	4118555	Condition	addr	3409:6:86909:86912	4113015	0	True				
ANR	4118556	Identifier	addr		4113015	0					
ANR	4118557	CompoundStatement		905:3:22269:22289	4113015	1					
ANR	4118558	IdentifierDeclStatement	RIODesc * d = tmpdesc ;	3410:3:86920:86940	4113015	0	True				
ANR	4118559	IdentifierDecl	* d = tmpdesc		4113015	0					
ANR	4118560	IdentifierDeclType	RIODesc *		4113015	0					
ANR	4118561	Identifier	d		4113015	1					
ANR	4118562	AssignmentExpression	* d = tmpdesc		4113015	2		=			
ANR	4118563	Identifier	tmpdesc		4113015	0					
ANR	4118564	Identifier	tmpdesc		4113015	1					
ANR	4118565	IfStatement	if ( d )		4113015	1					
ANR	4118566	Condition	d	3411:7:86949:86949	4113015	0	True				
ANR	4118567	Identifier	d		4113015	0					
ANR	4118568	CompoundStatement		906:10:22301:22301	4113015	1					
ANR	4118569	ExpressionStatement	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , addr , r_io_desc_size ( d ) )"	3412:4:86958:87026	4113015	0	True				
ANR	4118570	CallExpression	"r_io_map_new ( core -> io , d -> fd , d -> perm , 0 , addr , r_io_desc_size ( d ) )"		4113015	0					
ANR	4118571	Callee	r_io_map_new		4113015	0					
ANR	4118572	Identifier	r_io_map_new		4113015	0					
ANR	4118573	ArgumentList	core -> io		4113015	1					
ANR	4118574	Argument	core -> io		4113015	0					
ANR	4118575	PtrMemberAccess	core -> io		4113015	0					
ANR	4118576	Identifier	core		4113015	0					
ANR	4118577	Identifier	io		4113015	1					
ANR	4118578	Argument	d -> fd		4113015	1					
ANR	4118579	PtrMemberAccess	d -> fd		4113015	0					
ANR	4118580	Identifier	d		4113015	0					
ANR	4118581	Identifier	fd		4113015	1					
ANR	4118582	Argument	d -> perm		4113015	2					
ANR	4118583	PtrMemberAccess	d -> perm		4113015	0					
ANR	4118584	Identifier	d		4113015	0					
ANR	4118585	Identifier	perm		4113015	1					
ANR	4118586	Argument	0		4113015	3					
ANR	4118587	PrimaryExpression	0		4113015	0					
ANR	4118588	Argument	addr		4113015	4					
ANR	4118589	Identifier	addr		4113015	0					
ANR	4118590	Argument	r_io_desc_size ( d )		4113015	5					
ANR	4118591	CallExpression	r_io_desc_size ( d )		4113015	0					
ANR	4118592	Callee	r_io_desc_size		4113015	0					
ANR	4118593	Identifier	r_io_desc_size		4113015	0					
ANR	4118594	ArgumentList	d		4113015	1					
ANR	4118595	Argument	d		4113015	0					
ANR	4118596	Identifier	d		4113015	0					
ANR	4118597	Label	next_arroba :	3415:0:87037:87048	4113015	30	True				
ANR	4118598	Identifier	next_arroba		4113015	0					
ANR	4118599	IfStatement	if ( arroba )		4113015	31					
ANR	4118600	Condition	arroba	3416:6:87056:87061	4113015	0	True				
ANR	4118601	Identifier	arroba		4113015	0					
ANR	4118602	CompoundStatement		911:14:22413:22413	4113015	1					
ANR	4118603	ExpressionStatement	ptr = arroba + 1	3417:3:87069:87085	4113015	0	True				
ANR	4118604	AssignmentExpression	ptr = arroba + 1		4113015	0		=			
ANR	4118605	Identifier	ptr		4113015	0					
ANR	4118606	AdditiveExpression	arroba + 1		4113015	1		+			
ANR	4118607	Identifier	arroba		4113015	0					
ANR	4118608	PrimaryExpression	1		4113015	1					
ANR	4118609	ExpressionStatement	* arroba = '@'	3418:3:87090:87103	4113015	1	True				
ANR	4118610	AssignmentExpression	* arroba = '@'		4113015	0		=			
ANR	4118611	UnaryOperationExpression	* arroba		4113015	0					
ANR	4118612	UnaryOperator	*		4113015	0					
ANR	4118613	Identifier	arroba		4113015	1					
ANR	4118614	PrimaryExpression	'@'		4113015	1					
ANR	4118615	ExpressionStatement	arroba = NULL	3419:3:87108:87121	4113015	2	True				
ANR	4118616	AssignmentExpression	arroba = NULL		4113015	0		=			
ANR	4118617	Identifier	arroba		4113015	0					
ANR	4118618	Identifier	NULL		4113015	1					
ANR	4118619	GotoStatement	goto repeat_arroba ;	3420:3:87126:87144	4113015	3	True				
ANR	4118620	Identifier	repeat_arroba		4113015	0					
ANR	4118621	ExpressionStatement	core -> fixedblock = ! ! tmpdesc	3422:2:87152:87180	4113015	32	True				
ANR	4118622	AssignmentExpression	core -> fixedblock = ! ! tmpdesc		4113015	0		=			
ANR	4118623	PtrMemberAccess	core -> fixedblock		4113015	0					
ANR	4118624	Identifier	core		4113015	0					
ANR	4118625	Identifier	fixedblock		4113015	1					
ANR	4118626	UnaryOperationExpression	! ! tmpdesc		4113015	1					
ANR	4118627	UnaryOperator	!		4113015	0					
ANR	4118628	UnaryOperationExpression	! tmpdesc		4113015	1					
ANR	4118629	UnaryOperator	!		4113015	0					
ANR	4118630	Identifier	tmpdesc		4113015	1					
ANR	4118631	IfStatement	if ( core -> fixedblock )		4113015	33					
ANR	4118632	Condition	core -> fixedblock	3423:6:87188:87203	4113015	0	True				
ANR	4118633	PtrMemberAccess	core -> fixedblock		4113015	0					
ANR	4118634	Identifier	core		4113015	0					
ANR	4118635	Identifier	fixedblock		4113015	1					
ANR	4118636	CompoundStatement		918:24:22555:22555	4113015	1					
ANR	4118637	ExpressionStatement	r_core_block_read ( core )	3424:3:87211:87235	4113015	0	True				
ANR	4118638	CallExpression	r_core_block_read ( core )		4113015	0					
ANR	4118639	Callee	r_core_block_read		4113015	0					
ANR	4118640	Identifier	r_core_block_read		4113015	0					
ANR	4118641	ArgumentList	core		4113015	1					
ANR	4118642	Argument	core		4113015	0					
ANR	4118643	Identifier	core		4113015	0					
ANR	4118644	IfStatement	if ( ptr [ 1 ] == '@' )		4113015	34					
ANR	4118645	Condition	ptr [ 1 ] == '@'	3426:6:87247:87259	4113015	0	True				
ANR	4118646	EqualityExpression	ptr [ 1 ] == '@'		4113015	0		==			
ANR	4118647	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4118648	Identifier	ptr		4113015	0					
ANR	4118649	PrimaryExpression	1		4113015	1					
ANR	4118650	PrimaryExpression	'@'		4113015	1					
ANR	4118651	CompoundStatement		921:21:22611:22611	4113015	1					
ANR	4118652	IfStatement	if ( ptr [ 2 ] == '@' )		4113015	0					
ANR	4118653	Condition	ptr [ 2 ] == '@'	3427:7:87271:87283	4113015	0	True				
ANR	4118654	EqualityExpression	ptr [ 2 ] == '@'		4113015	0		==			
ANR	4118655	ArrayIndexing	ptr [ 2 ]		4113015	0					
ANR	4118656	Identifier	ptr		4113015	0					
ANR	4118657	PrimaryExpression	2		4113015	1					
ANR	4118658	PrimaryExpression	'@'		4113015	1					
ANR	4118659	CompoundStatement		923:4:22641:22661	4113015	1					
ANR	4118660	IdentifierDeclStatement	char * rule = ptr + 3 ;	3428:4:87292:87312	4113015	0	True				
ANR	4118661	IdentifierDecl	* rule = ptr + 3		4113015	0					
ANR	4118662	IdentifierDeclType	char *		4113015	0					
ANR	4118663	Identifier	rule		4113015	1					
ANR	4118664	AssignmentExpression	* rule = ptr + 3		4113015	2		=			
ANR	4118665	Identifier	rule		4113015	0					
ANR	4118666	AdditiveExpression	ptr + 3		4113015	1		+			
ANR	4118667	Identifier	ptr		4113015	0					
ANR	4118668	PrimaryExpression	3		4113015	1					
ANR	4118669	WhileStatement	while ( * rule && * rule == ' ' )		4113015	1					
ANR	4118670	Condition	* rule && * rule == ' '	3429:11:87325:87345	4113015	0	True				
ANR	4118671	AndExpression	* rule && * rule == ' '		4113015	0		&&			
ANR	4118672	UnaryOperationExpression	* rule		4113015	0					
ANR	4118673	UnaryOperator	*		4113015	0					
ANR	4118674	Identifier	rule		4113015	1					
ANR	4118675	EqualityExpression	* rule == ' '		4113015	1		==			
ANR	4118676	UnaryOperationExpression	* rule		4113015	0					
ANR	4118677	UnaryOperator	*		4113015	0					
ANR	4118678	Identifier	rule		4113015	1					
ANR	4118679	PrimaryExpression	' '		4113015	1					
ANR	4118680	CompoundStatement		924:34:22697:22697	4113015	1					
ANR	4118681	ExpressionStatement	rule ++	3430:5:87355:87361	4113015	0	True				
ANR	4118682	PostIncDecOperationExpression	rule ++		4113015	0					
ANR	4118683	Identifier	rule		4113015	0					
ANR	4118684	IncDec	++		4113015	1					
ANR	4118685	ExpressionStatement	"ret = r_core_cmd_foreach3 ( core , cmd , rule )"	3432:4:87373:87416	4113015	2	True				
ANR	4118686	AssignmentExpression	"ret = r_core_cmd_foreach3 ( core , cmd , rule )"		4113015	0		=			
ANR	4118687	Identifier	ret		4113015	0					
ANR	4118688	CallExpression	"r_core_cmd_foreach3 ( core , cmd , rule )"		4113015	1					
ANR	4118689	Callee	r_core_cmd_foreach3		4113015	0					
ANR	4118690	Identifier	r_core_cmd_foreach3		4113015	0					
ANR	4118691	ArgumentList	core		4113015	1					
ANR	4118692	Argument	core		4113015	0					
ANR	4118693	Identifier	core		4113015	0					
ANR	4118694	Argument	cmd		4113015	1					
ANR	4118695	Identifier	cmd		4113015	0					
ANR	4118696	Argument	rule		4113015	2					
ANR	4118697	Identifier	rule		4113015	0					
ANR	4118698	ElseStatement	else		4113015	0					
ANR	4118699	CompoundStatement		928:10:22777:22777	4113015	0					
ANR	4118700	ExpressionStatement	"ret = r_core_cmd_foreach ( core , cmd , ptr + 2 )"	3434:4:87434:87479	4113015	0	True				
ANR	4118701	AssignmentExpression	"ret = r_core_cmd_foreach ( core , cmd , ptr + 2 )"		4113015	0		=			
ANR	4118702	Identifier	ret		4113015	0					
ANR	4118703	CallExpression	"r_core_cmd_foreach ( core , cmd , ptr + 2 )"		4113015	1					
ANR	4118704	Callee	r_core_cmd_foreach		4113015	0					
ANR	4118705	Identifier	r_core_cmd_foreach		4113015	0					
ANR	4118706	ArgumentList	core		4113015	1					
ANR	4118707	Argument	core		4113015	0					
ANR	4118708	Identifier	core		4113015	0					
ANR	4118709	Argument	cmd		4113015	1					
ANR	4118710	Identifier	cmd		4113015	0					
ANR	4118711	Argument	ptr + 2		4113015	2					
ANR	4118712	AdditiveExpression	ptr + 2		4113015	0		+			
ANR	4118713	Identifier	ptr		4113015	0					
ANR	4118714	PrimaryExpression	2		4113015	1					
ANR	4118715	ElseStatement	else		4113015	0					
ANR	4118716	CompoundStatement		937:3:23142:23217	4113015	0					
ANR	4118717	IdentifierDeclStatement	bool tmpseek = false ;	3437:3:87500:87520	4113015	0	True				
ANR	4118718	IdentifierDecl	tmpseek = false		4113015	0					
ANR	4118719	IdentifierDeclType	bool		4113015	0					
ANR	4118720	Identifier	tmpseek		4113015	1					
ANR	4118721	AssignmentExpression	tmpseek = false		4113015	2		=			
ANR	4118722	Identifier	false		4113015	0					
ANR	4118723	Identifier	false		4113015	1					
ANR	4118724	IdentifierDeclStatement	"const char * fromvars [ ] = { ""anal.from"" , ""diff.from"" , ""graph.from"" , ""io.buffer.from"" , ""lines.from"" , ""search.from"" , ""zoom.from"" , NULL } ;"	3438:3:87525:87662	4113015	1	True				
ANR	4118725	IdentifierDecl	"* fromvars [ ] = { ""anal.from"" , ""diff.from"" , ""graph.from"" , ""io.buffer.from"" , ""lines.from"" , ""search.from"" , ""zoom.from"" , NULL }"		4113015	0					
ANR	4118726	IdentifierDeclType	const char * [ ]		4113015	0					
ANR	4118727	Identifier	fromvars		4113015	1					
ANR	4118728	AssignmentExpression	"* fromvars [ ] = { ""anal.from"" , ""diff.from"" , ""graph.from"" , ""io.buffer.from"" , ""lines.from"" , ""search.from"" , ""zoom.from"" , NULL }"		4113015	2		=			
ANR	4118729	Identifier	fromvars		4113015	0					
ANR	4118730	InitializerList	"""anal.from"""		4113015	1					
ANR	4118731	PrimaryExpression	"""anal.from"""		4113015	0					
ANR	4118732	PrimaryExpression	"""diff.from"""		4113015	1					
ANR	4118733	PrimaryExpression	"""graph.from"""		4113015	2					
ANR	4118734	PrimaryExpression	"""io.buffer.from"""		4113015	3					
ANR	4118735	PrimaryExpression	"""lines.from"""		4113015	4					
ANR	4118736	PrimaryExpression	"""search.from"""		4113015	5					
ANR	4118737	PrimaryExpression	"""zoom.from"""		4113015	6					
ANR	4118738	Identifier	NULL		4113015	7					
ANR	4118739	IdentifierDeclStatement	"const char * tovars [ ] = { ""anal.to"" , ""diff.to"" , ""graph.to"" , ""io.buffer.to"" , ""lines.to"" , ""search.to"" , ""zoom.to"" , NULL } ;"	3440:3:87667:87788	4113015	2	True				
ANR	4118740	IdentifierDecl	"* tovars [ ] = { ""anal.to"" , ""diff.to"" , ""graph.to"" , ""io.buffer.to"" , ""lines.to"" , ""search.to"" , ""zoom.to"" , NULL }"		4113015	0					
ANR	4118741	IdentifierDeclType	const char * [ ]		4113015	0					
ANR	4118742	Identifier	tovars		4113015	1					
ANR	4118743	AssignmentExpression	"* tovars [ ] = { ""anal.to"" , ""diff.to"" , ""graph.to"" , ""io.buffer.to"" , ""lines.to"" , ""search.to"" , ""zoom.to"" , NULL }"		4113015	2		=			
ANR	4118744	Identifier	tovars		4113015	0					
ANR	4118745	InitializerList	"""anal.to"""		4113015	1					
ANR	4118746	PrimaryExpression	"""anal.to"""		4113015	0					
ANR	4118747	PrimaryExpression	"""diff.to"""		4113015	1					
ANR	4118748	PrimaryExpression	"""graph.to"""		4113015	2					
ANR	4118749	PrimaryExpression	"""io.buffer.to"""		4113015	3					
ANR	4118750	PrimaryExpression	"""lines.to"""		4113015	4					
ANR	4118751	PrimaryExpression	"""search.to"""		4113015	5					
ANR	4118752	PrimaryExpression	"""zoom.to"""		4113015	6					
ANR	4118753	Identifier	NULL		4113015	7					
ANR	4118754	IdentifierDeclStatement	"ut64 curfrom [ R_ARRAY_SIZE ( fromvars ) - 1 ] , curto [ R_ARRAY_SIZE ( tovars ) - 1 ] ;"	3442:3:87793:87868	4113015	3	True				
ANR	4118755	IdentifierDecl	curfrom [ R_ARRAY_SIZE ( fromvars ) - 1 ]		4113015	0					
ANR	4118756	IdentifierDeclType	ut64 [ R_ARRAY_SIZE ( fromvars ) - 1 ]		4113015	0					
ANR	4118757	Identifier	curfrom		4113015	1					
ANR	4118758	AdditiveExpression	R_ARRAY_SIZE ( fromvars ) - 1		4113015	2		-			
ANR	4118759	CallExpression	R_ARRAY_SIZE ( fromvars )		4113015	0					
ANR	4118760	Callee	R_ARRAY_SIZE		4113015	0					
ANR	4118761	Identifier	R_ARRAY_SIZE		4113015	0					
ANR	4118762	ArgumentList	fromvars		4113015	1					
ANR	4118763	Argument	fromvars		4113015	0					
ANR	4118764	Identifier	fromvars		4113015	0					
ANR	4118765	PrimaryExpression	1		4113015	1					
ANR	4118766	IdentifierDecl	curto [ R_ARRAY_SIZE ( tovars ) - 1 ]		4113015	1					
ANR	4118767	IdentifierDeclType	ut64 [ R_ARRAY_SIZE ( tovars ) - 1 ]		4113015	0					
ANR	4118768	Identifier	curto		4113015	1					
ANR	4118769	AdditiveExpression	R_ARRAY_SIZE ( tovars ) - 1		4113015	2		-			
ANR	4118770	CallExpression	R_ARRAY_SIZE ( tovars )		4113015	0					
ANR	4118771	Callee	R_ARRAY_SIZE		4113015	0					
ANR	4118772	Identifier	R_ARRAY_SIZE		4113015	0					
ANR	4118773	ArgumentList	tovars		4113015	1					
ANR	4118774	Argument	tovars		4113015	0					
ANR	4118775	Identifier	tovars		4113015	0					
ANR	4118776	PrimaryExpression	1		4113015	1					
ANR	4118777	IfStatement	if ( ptr [ 1 ] == '(' )		4113015	4					
ANR	4118778	Condition	ptr [ 1 ] == '('	3445:7:87893:87905	4113015	0	True				
ANR	4118779	EqualityExpression	ptr [ 1 ] == '('		4113015	0		==			
ANR	4118780	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4118781	Identifier	ptr		4113015	0					
ANR	4118782	PrimaryExpression	1		4113015	1					
ANR	4118783	PrimaryExpression	'('		4113015	1					
ANR	4118784	CompoundStatement		952:4:23538:23577	4113015	1					
ANR	4118785	IdentifierDeclStatement	char * range = ptr + 3 ;	3446:4:87914:87935	4113015	0	True				
ANR	4118786	IdentifierDecl	* range = ptr + 3		4113015	0					
ANR	4118787	IdentifierDeclType	char *		4113015	0					
ANR	4118788	Identifier	range		4113015	1					
ANR	4118789	AssignmentExpression	* range = ptr + 3		4113015	2		=			
ANR	4118790	Identifier	range		4113015	0					
ANR	4118791	AdditiveExpression	ptr + 3		4113015	1		+			
ANR	4118792	Identifier	ptr		4113015	0					
ANR	4118793	PrimaryExpression	3		4113015	1					
ANR	4118794	IdentifierDeclStatement	"char * p = strchr ( range , ' ' ) ;"	3447:4:87941:87970	4113015	1	True				
ANR	4118795	IdentifierDecl	"* p = strchr ( range , ' ' )"		4113015	0					
ANR	4118796	IdentifierDeclType	char *		4113015	0					
ANR	4118797	Identifier	p		4113015	1					
ANR	4118798	AssignmentExpression	"* p = strchr ( range , ' ' )"		4113015	2		=			
ANR	4118799	Identifier	p		4113015	0					
ANR	4118800	CallExpression	"strchr ( range , ' ' )"		4113015	1					
ANR	4118801	Callee	strchr		4113015	0					
ANR	4118802	Identifier	strchr		4113015	0					
ANR	4118803	ArgumentList	range		4113015	1					
ANR	4118804	Argument	range		4113015	0					
ANR	4118805	Identifier	range		4113015	0					
ANR	4118806	Argument	' '		4113015	1					
ANR	4118807	PrimaryExpression	' '		4113015	0					
ANR	4118808	IfStatement	if ( ! p )		4113015	2					
ANR	4118809	Condition	! p	3448:8:87980:87981	4113015	0	True				
ANR	4118810	UnaryOperationExpression	! p		4113015	0					
ANR	4118811	UnaryOperator	!		4113015	0					
ANR	4118812	Identifier	p		4113015	1					
ANR	4118813	CompoundStatement		943:12:23333:23333	4113015	1					
ANR	4118814	ExpressionStatement	"eprintf ( ""Usage: / ABCD @..0x1000 0x3000\\n"" )"	3449:5:87991:88035	4113015	0	True				
ANR	4118815	CallExpression	"eprintf ( ""Usage: / ABCD @..0x1000 0x3000\\n"" )"		4113015	0					
ANR	4118816	Callee	eprintf		4113015	0					
ANR	4118817	Identifier	eprintf		4113015	0					
ANR	4118818	ArgumentList	"""Usage: / ABCD @..0x1000 0x3000\\n"""		4113015	1					
ANR	4118819	Argument	"""Usage: / ABCD @..0x1000 0x3000\\n"""		4113015	0					
ANR	4118820	PrimaryExpression	"""Usage: / ABCD @..0x1000 0x3000\\n"""		4113015	0					
ANR	4118821	ExpressionStatement	free ( tmpeval )	3450:5:88042:88056	4113015	1	True				
ANR	4118822	CallExpression	free ( tmpeval )		4113015	0					
ANR	4118823	Callee	free		4113015	0					
ANR	4118824	Identifier	free		4113015	0					
ANR	4118825	ArgumentList	tmpeval		4113015	1					
ANR	4118826	Argument	tmpeval		4113015	0					
ANR	4118827	Identifier	tmpeval		4113015	0					
ANR	4118828	ExpressionStatement	free ( tmpasm )	3451:5:88063:88076	4113015	2	True				
ANR	4118829	CallExpression	free ( tmpasm )		4113015	0					
ANR	4118830	Callee	free		4113015	0					
ANR	4118831	Identifier	free		4113015	0					
ANR	4118832	ArgumentList	tmpasm		4113015	1					
ANR	4118833	Argument	tmpasm		4113015	0					
ANR	4118834	Identifier	tmpasm		4113015	0					
ANR	4118835	ExpressionStatement	free ( tmpbits )	3452:5:88083:88097	4113015	3	True				
ANR	4118836	CallExpression	free ( tmpbits )		4113015	0					
ANR	4118837	Callee	free		4113015	0					
ANR	4118838	Identifier	free		4113015	0					
ANR	4118839	ArgumentList	tmpbits		4113015	1					
ANR	4118840	Argument	tmpbits		4113015	0					
ANR	4118841	Identifier	tmpbits		4113015	0					
ANR	4118842	GotoStatement	goto fail ;	3453:5:88104:88113	4113015	4	True				
ANR	4118843	Identifier	fail		4113015	0					
ANR	4118844	ExpressionStatement	* p = x00	3455:4:88125:88136	4113015	3	True				
ANR	4118845	AssignmentExpression	* p = x00		4113015	0		=			
ANR	4118846	UnaryOperationExpression	* p		4113015	0					
ANR	4118847	UnaryOperator	*		4113015	0					
ANR	4118848	Identifier	p		4113015	1					
ANR	4118849	Identifier	x00		4113015	1					
ANR	4118850	IdentifierDeclStatement	"ut64 from = r_num_math ( core -> num , range ) ;"	3456:4:88142:88183	4113015	4	True				
ANR	4118851	IdentifierDecl	"from = r_num_math ( core -> num , range )"		4113015	0					
ANR	4118852	IdentifierDeclType	ut64		4113015	0					
ANR	4118853	Identifier	from		4113015	1					
ANR	4118854	AssignmentExpression	"from = r_num_math ( core -> num , range )"		4113015	2		=			
ANR	4118855	Identifier	from		4113015	0					
ANR	4118856	CallExpression	"r_num_math ( core -> num , range )"		4113015	1					
ANR	4118857	Callee	r_num_math		4113015	0					
ANR	4118858	Identifier	r_num_math		4113015	0					
ANR	4118859	ArgumentList	core -> num		4113015	1					
ANR	4118860	Argument	core -> num		4113015	0					
ANR	4118861	PtrMemberAccess	core -> num		4113015	0					
ANR	4118862	Identifier	core		4113015	0					
ANR	4118863	Identifier	num		4113015	1					
ANR	4118864	Argument	range		4113015	1					
ANR	4118865	Identifier	range		4113015	0					
ANR	4118866	IdentifierDeclStatement	"ut64 to = r_num_math ( core -> num , p + 1 ) ;"	3457:4:88189:88228	4113015	5	True				
ANR	4118867	IdentifierDecl	"to = r_num_math ( core -> num , p + 1 )"		4113015	0					
ANR	4118868	IdentifierDeclType	ut64		4113015	0					
ANR	4118869	Identifier	to		4113015	1					
ANR	4118870	AssignmentExpression	"to = r_num_math ( core -> num , p + 1 )"		4113015	2		=			
ANR	4118871	Identifier	to		4113015	0					
ANR	4118872	CallExpression	"r_num_math ( core -> num , p + 1 )"		4113015	1					
ANR	4118873	Callee	r_num_math		4113015	0					
ANR	4118874	Identifier	r_num_math		4113015	0					
ANR	4118875	ArgumentList	core -> num		4113015	1					
ANR	4118876	Argument	core -> num		4113015	0					
ANR	4118877	PtrMemberAccess	core -> num		4113015	0					
ANR	4118878	Identifier	core		4113015	0					
ANR	4118879	Identifier	num		4113015	1					
ANR	4118880	Argument	p + 1		4113015	1					
ANR	4118881	AdditiveExpression	p + 1		4113015	0		+			
ANR	4118882	Identifier	p		4113015	0					
ANR	4118883	PrimaryExpression	1		4113015	1					
ANR	4118884	ForStatement	for ( i = 0 ; fromvars [ i ] ; i ++ )		4113015	6					
ANR	4118885	ForInit	i = 0 ;	3459:9:88266:88271	4113015	0	True				
ANR	4118886	AssignmentExpression	i = 0		4113015	0		=			
ANR	4118887	Identifier	i		4113015	0					
ANR	4118888	PrimaryExpression	0		4113015	1					
ANR	4118889	Condition	fromvars [ i ]	3459:16:88273:88283	4113015	1	True				
ANR	4118890	ArrayIndexing	fromvars [ i ]		4113015	0					
ANR	4118891	Identifier	fromvars		4113015	0					
ANR	4118892	Identifier	i		4113015	1					
ANR	4118893	PostIncDecOperationExpression	i ++	3459:29:88286:88288	4113015	2	True				
ANR	4118894	Identifier	i		4113015	0					
ANR	4118895	IncDec	++		4113015	1					
ANR	4118896	CompoundStatement		954:34:23640:23640	4113015	3					
ANR	4118897	ExpressionStatement	"curfrom [ i ] = r_config_get_i ( core -> config , fromvars [ i ] )"	3460:5:88298:88353	4113015	0	True				
ANR	4118898	AssignmentExpression	"curfrom [ i ] = r_config_get_i ( core -> config , fromvars [ i ] )"		4113015	0		=			
ANR	4118899	ArrayIndexing	curfrom [ i ]		4113015	0					
ANR	4118900	Identifier	curfrom		4113015	0					
ANR	4118901	Identifier	i		4113015	1					
ANR	4118902	CallExpression	"r_config_get_i ( core -> config , fromvars [ i ] )"		4113015	1					
ANR	4118903	Callee	r_config_get_i		4113015	0					
ANR	4118904	Identifier	r_config_get_i		4113015	0					
ANR	4118905	ArgumentList	core -> config		4113015	1					
ANR	4118906	Argument	core -> config		4113015	0					
ANR	4118907	PtrMemberAccess	core -> config		4113015	0					
ANR	4118908	Identifier	core		4113015	0					
ANR	4118909	Identifier	config		4113015	1					
ANR	4118910	Argument	fromvars [ i ]		4113015	1					
ANR	4118911	ArrayIndexing	fromvars [ i ]		4113015	0					
ANR	4118912	Identifier	fromvars		4113015	0					
ANR	4118913	Identifier	i		4113015	1					
ANR	4118914	ForStatement	for ( i = 0 ; tovars [ i ] ; i ++ )		4113015	7					
ANR	4118915	ForInit	i = 0 ;	3462:9:88370:88375	4113015	0	True				
ANR	4118916	AssignmentExpression	i = 0		4113015	0		=			
ANR	4118917	Identifier	i		4113015	0					
ANR	4118918	PrimaryExpression	0		4113015	1					
ANR	4118919	Condition	tovars [ i ]	3462:16:88377:88385	4113015	1	True				
ANR	4118920	ArrayIndexing	tovars [ i ]		4113015	0					
ANR	4118921	Identifier	tovars		4113015	0					
ANR	4118922	Identifier	i		4113015	1					
ANR	4118923	PostIncDecOperationExpression	i ++	3462:27:88388:88390	4113015	2	True				
ANR	4118924	Identifier	i		4113015	0					
ANR	4118925	IncDec	++		4113015	1					
ANR	4118926	CompoundStatement		957:32:23742:23742	4113015	3					
ANR	4118927	ExpressionStatement	"curto [ i ] = r_config_get_i ( core -> config , tovars [ i ] )"	3463:5:88400:88451	4113015	0	True				
ANR	4118928	AssignmentExpression	"curto [ i ] = r_config_get_i ( core -> config , tovars [ i ] )"		4113015	0		=			
ANR	4118929	ArrayIndexing	curto [ i ]		4113015	0					
ANR	4118930	Identifier	curto		4113015	0					
ANR	4118931	Identifier	i		4113015	1					
ANR	4118932	CallExpression	"r_config_get_i ( core -> config , tovars [ i ] )"		4113015	1					
ANR	4118933	Callee	r_config_get_i		4113015	0					
ANR	4118934	Identifier	r_config_get_i		4113015	0					
ANR	4118935	ArgumentList	core -> config		4113015	1					
ANR	4118936	Argument	core -> config		4113015	0					
ANR	4118937	PtrMemberAccess	core -> config		4113015	0					
ANR	4118938	Identifier	core		4113015	0					
ANR	4118939	Identifier	config		4113015	1					
ANR	4118940	Argument	tovars [ i ]		4113015	1					
ANR	4118941	ArrayIndexing	tovars [ i ]		4113015	0					
ANR	4118942	Identifier	tovars		4113015	0					
ANR	4118943	Identifier	i		4113015	1					
ANR	4118944	ForStatement	for ( i = 0 ; fromvars [ i ] ; i ++ )		4113015	8					
ANR	4118945	ForInit	i = 0 ;	3466:9:88490:88495	4113015	0	True				
ANR	4118946	AssignmentExpression	i = 0		4113015	0		=			
ANR	4118947	Identifier	i		4113015	0					
ANR	4118948	PrimaryExpression	0		4113015	1					
ANR	4118949	Condition	fromvars [ i ]	3466:16:88497:88507	4113015	1	True				
ANR	4118950	ArrayIndexing	fromvars [ i ]		4113015	0					
ANR	4118951	Identifier	fromvars		4113015	0					
ANR	4118952	Identifier	i		4113015	1					
ANR	4118953	PostIncDecOperationExpression	i ++	3466:29:88510:88512	4113015	2	True				
ANR	4118954	Identifier	i		4113015	0					
ANR	4118955	IncDec	++		4113015	1					
ANR	4118956	CompoundStatement		961:34:23864:23864	4113015	3					
ANR	4118957	ExpressionStatement	"r_config_set_i ( core -> config , fromvars [ i ] , from )"	3467:5:88522:88570	4113015	0	True				
ANR	4118958	CallExpression	"r_config_set_i ( core -> config , fromvars [ i ] , from )"		4113015	0					
ANR	4118959	Callee	r_config_set_i		4113015	0					
ANR	4118960	Identifier	r_config_set_i		4113015	0					
ANR	4118961	ArgumentList	core -> config		4113015	1					
ANR	4118962	Argument	core -> config		4113015	0					
ANR	4118963	PtrMemberAccess	core -> config		4113015	0					
ANR	4118964	Identifier	core		4113015	0					
ANR	4118965	Identifier	config		4113015	1					
ANR	4118966	Argument	fromvars [ i ]		4113015	1					
ANR	4118967	ArrayIndexing	fromvars [ i ]		4113015	0					
ANR	4118968	Identifier	fromvars		4113015	0					
ANR	4118969	Identifier	i		4113015	1					
ANR	4118970	Argument	from		4113015	2					
ANR	4118971	Identifier	from		4113015	0					
ANR	4118972	ForStatement	for ( i = 0 ; tovars [ i ] ; i ++ )		4113015	9					
ANR	4118973	ForInit	i = 0 ;	3469:9:88587:88592	4113015	0	True				
ANR	4118974	AssignmentExpression	i = 0		4113015	0		=			
ANR	4118975	Identifier	i		4113015	0					
ANR	4118976	PrimaryExpression	0		4113015	1					
ANR	4118977	Condition	tovars [ i ]	3469:16:88594:88602	4113015	1	True				
ANR	4118978	ArrayIndexing	tovars [ i ]		4113015	0					
ANR	4118979	Identifier	tovars		4113015	0					
ANR	4118980	Identifier	i		4113015	1					
ANR	4118981	PostIncDecOperationExpression	i ++	3469:27:88605:88607	4113015	2	True				
ANR	4118982	Identifier	i		4113015	0					
ANR	4118983	IncDec	++		4113015	1					
ANR	4118984	CompoundStatement		964:32:23959:23959	4113015	3					
ANR	4118985	ExpressionStatement	"r_config_set_i ( core -> config , tovars [ i ] , to )"	3470:5:88617:88661	4113015	0	True				
ANR	4118986	CallExpression	"r_config_set_i ( core -> config , tovars [ i ] , to )"		4113015	0					
ANR	4118987	Callee	r_config_set_i		4113015	0					
ANR	4118988	Identifier	r_config_set_i		4113015	0					
ANR	4118989	ArgumentList	core -> config		4113015	1					
ANR	4118990	Argument	core -> config		4113015	0					
ANR	4118991	PtrMemberAccess	core -> config		4113015	0					
ANR	4118992	Identifier	core		4113015	0					
ANR	4118993	Identifier	config		4113015	1					
ANR	4118994	Argument	tovars [ i ]		4113015	1					
ANR	4118995	ArrayIndexing	tovars [ i ]		4113015	0					
ANR	4118996	Identifier	tovars		4113015	0					
ANR	4118997	Identifier	i		4113015	1					
ANR	4118998	Argument	to		4113015	2					
ANR	4118999	Identifier	to		4113015	0					
ANR	4119000	ExpressionStatement	tmpseek = true	3472:4:88673:88687	4113015	10	True				
ANR	4119001	AssignmentExpression	tmpseek = true		4113015	0		=			
ANR	4119002	Identifier	tmpseek		4113015	0					
ANR	4119003	Identifier	true		4113015	1					
ANR	4119004	IfStatement	if ( usemyblock )		4113015	5					
ANR	4119005	Condition	usemyblock	3474:7:88701:88710	4113015	0	True				
ANR	4119006	Identifier	usemyblock		4113015	0					
ANR	4119007	CompoundStatement		969:19:24062:24062	4113015	1					
ANR	4119008	IfStatement	if ( addr_is_set )		4113015	0					
ANR	4119009	Condition	addr_is_set	3475:8:88723:88733	4113015	0	True				
ANR	4119010	Identifier	addr_is_set		4113015	0					
ANR	4119011	CompoundStatement		970:21:24085:24085	4113015	1					
ANR	4119012	ExpressionStatement	core -> offset = addr	3476:5:88743:88762	4113015	0	True				
ANR	4119013	AssignmentExpression	core -> offset = addr		4113015	0		=			
ANR	4119014	PtrMemberAccess	core -> offset		4113015	0					
ANR	4119015	Identifier	core		4113015	0					
ANR	4119016	Identifier	offset		4113015	1					
ANR	4119017	Identifier	addr		4113015	1					
ANR	4119018	ExpressionStatement	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"	3478:4:88774:88826	4113015	1	True				
ANR	4119019	AssignmentExpression	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		4113015	0		=			
ANR	4119020	Identifier	ret		4113015	0					
ANR	4119021	CallExpression	"r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		4113015	1					
ANR	4119022	Callee	r_cmd_call		4113015	0					
ANR	4119023	Identifier	r_cmd_call		4113015	0					
ANR	4119024	ArgumentList	core -> rcmd		4113015	1					
ANR	4119025	Argument	core -> rcmd		4113015	0					
ANR	4119026	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4119027	Identifier	core		4113015	0					
ANR	4119028	Identifier	rcmd		4113015	1					
ANR	4119029	Argument	r_str_trim_head ( cmd )		4113015	1					
ANR	4119030	CallExpression	r_str_trim_head ( cmd )		4113015	0					
ANR	4119031	Callee	r_str_trim_head		4113015	0					
ANR	4119032	Identifier	r_str_trim_head		4113015	0					
ANR	4119033	ArgumentList	cmd		4113015	1					
ANR	4119034	Argument	cmd		4113015	0					
ANR	4119035	Identifier	cmd		4113015	0					
ANR	4119036	ElseStatement	else		4113015	0					
ANR	4119037	CompoundStatement		974:10:24187:24187	4113015	0					
ANR	4119038	IfStatement	if ( addr_is_set )		4113015	0					
ANR	4119039	Condition	addr_is_set	3480:8:88848:88858	4113015	0	True				
ANR	4119040	Identifier	addr_is_set		4113015	0					
ANR	4119041	CompoundStatement		975:21:24210:24210	4113015	1					
ANR	4119042	IfStatement	if ( ptr [ 1 ] )		4113015	0					
ANR	4119043	Condition	ptr [ 1 ]	3481:9:88872:88877	4113015	0	True				
ANR	4119044	ArrayIndexing	ptr [ 1 ]		4113015	0					
ANR	4119045	Identifier	ptr		4113015	0					
ANR	4119046	PrimaryExpression	1		4113015	1					
ANR	4119047	CompoundStatement		976:17:24229:24229	4113015	1					
ANR	4119048	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3482:6:88888:88915	4113015	0	True				
ANR	4119049	CallExpression	"r_core_seek ( core , addr , 1 )"		4113015	0					
ANR	4119050	Callee	r_core_seek		4113015	0					
ANR	4119051	Identifier	r_core_seek		4113015	0					
ANR	4119052	ArgumentList	core		4113015	1					
ANR	4119053	Argument	core		4113015	0					
ANR	4119054	Identifier	core		4113015	0					
ANR	4119055	Argument	addr		4113015	1					
ANR	4119056	Identifier	addr		4113015	0					
ANR	4119057	Argument	1		4113015	2					
ANR	4119058	PrimaryExpression	1		4113015	0					
ANR	4119059	ExpressionStatement	r_core_block_read ( core )	3483:6:88923:88947	4113015	1	True				
ANR	4119060	CallExpression	r_core_block_read ( core )		4113015	0					
ANR	4119061	Callee	r_core_block_read		4113015	0					
ANR	4119062	Identifier	r_core_block_read		4113015	0					
ANR	4119063	ArgumentList	core		4113015	1					
ANR	4119064	Argument	core		4113015	0					
ANR	4119065	Identifier	core		4113015	0					
ANR	4119066	ExpressionStatement	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"	3486:4:88966:89018	4113015	1	True				
ANR	4119067	AssignmentExpression	"ret = r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		4113015	0		=			
ANR	4119068	Identifier	ret		4113015	0					
ANR	4119069	CallExpression	"r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		4113015	1					
ANR	4119070	Callee	r_cmd_call		4113015	0					
ANR	4119071	Identifier	r_cmd_call		4113015	0					
ANR	4119072	ArgumentList	core -> rcmd		4113015	1					
ANR	4119073	Argument	core -> rcmd		4113015	0					
ANR	4119074	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4119075	Identifier	core		4113015	0					
ANR	4119076	Identifier	rcmd		4113015	1					
ANR	4119077	Argument	r_str_trim_head ( cmd )		4113015	1					
ANR	4119078	CallExpression	r_str_trim_head ( cmd )		4113015	0					
ANR	4119079	Callee	r_str_trim_head		4113015	0					
ANR	4119080	Identifier	r_str_trim_head		4113015	0					
ANR	4119081	ArgumentList	cmd		4113015	1					
ANR	4119082	Argument	cmd		4113015	0					
ANR	4119083	Identifier	cmd		4113015	0					
ANR	4119084	IfStatement	if ( tmpseek )		4113015	6					
ANR	4119085	Condition	tmpseek	3489:7:89033:89039	4113015	0	True				
ANR	4119086	Identifier	tmpseek		4113015	0					
ANR	4119087	CompoundStatement		984:16:24391:24391	4113015	1					
ANR	4119088	ForStatement	for ( i = 0 ; fromvars [ i ] ; i ++ )		4113015	0					
ANR	4119089	ForInit	i = 0 ;	3491:9:89075:89080	4113015	0	True				
ANR	4119090	AssignmentExpression	i = 0		4113015	0		=			
ANR	4119091	Identifier	i		4113015	0					
ANR	4119092	PrimaryExpression	0		4113015	1					
ANR	4119093	Condition	fromvars [ i ]	3491:16:89082:89092	4113015	1	True				
ANR	4119094	ArrayIndexing	fromvars [ i ]		4113015	0					
ANR	4119095	Identifier	fromvars		4113015	0					
ANR	4119096	Identifier	i		4113015	1					
ANR	4119097	PostIncDecOperationExpression	i ++	3491:29:89095:89097	4113015	2	True				
ANR	4119098	Identifier	i		4113015	0					
ANR	4119099	IncDec	++		4113015	1					
ANR	4119100	CompoundStatement		986:34:24449:24449	4113015	3					
ANR	4119101	ExpressionStatement	"r_config_set_i ( core -> config , fromvars [ i ] , curfrom [ i ] )"	3492:5:89107:89161	4113015	0	True				
ANR	4119102	CallExpression	"r_config_set_i ( core -> config , fromvars [ i ] , curfrom [ i ] )"		4113015	0					
ANR	4119103	Callee	r_config_set_i		4113015	0					
ANR	4119104	Identifier	r_config_set_i		4113015	0					
ANR	4119105	ArgumentList	core -> config		4113015	1					
ANR	4119106	Argument	core -> config		4113015	0					
ANR	4119107	PtrMemberAccess	core -> config		4113015	0					
ANR	4119108	Identifier	core		4113015	0					
ANR	4119109	Identifier	config		4113015	1					
ANR	4119110	Argument	fromvars [ i ]		4113015	1					
ANR	4119111	ArrayIndexing	fromvars [ i ]		4113015	0					
ANR	4119112	Identifier	fromvars		4113015	0					
ANR	4119113	Identifier	i		4113015	1					
ANR	4119114	Argument	curfrom [ i ]		4113015	2					
ANR	4119115	ArrayIndexing	curfrom [ i ]		4113015	0					
ANR	4119116	Identifier	curfrom		4113015	0					
ANR	4119117	Identifier	i		4113015	1					
ANR	4119118	ForStatement	for ( i = 0 ; tovars [ i ] ; i ++ )		4113015	1					
ANR	4119119	ForInit	i = 0 ;	3494:9:89178:89183	4113015	0	True				
ANR	4119120	AssignmentExpression	i = 0		4113015	0		=			
ANR	4119121	Identifier	i		4113015	0					
ANR	4119122	PrimaryExpression	0		4113015	1					
ANR	4119123	Condition	tovars [ i ]	3494:16:89185:89193	4113015	1	True				
ANR	4119124	ArrayIndexing	tovars [ i ]		4113015	0					
ANR	4119125	Identifier	tovars		4113015	0					
ANR	4119126	Identifier	i		4113015	1					
ANR	4119127	PostIncDecOperationExpression	i ++	3494:27:89196:89198	4113015	2	True				
ANR	4119128	Identifier	i		4113015	0					
ANR	4119129	IncDec	++		4113015	1					
ANR	4119130	CompoundStatement		989:32:24550:24550	4113015	3					
ANR	4119131	ExpressionStatement	"r_config_set_i ( core -> config , tovars [ i ] , curto [ i ] )"	3495:5:89208:89258	4113015	0	True				
ANR	4119132	CallExpression	"r_config_set_i ( core -> config , tovars [ i ] , curto [ i ] )"		4113015	0					
ANR	4119133	Callee	r_config_set_i		4113015	0					
ANR	4119134	Identifier	r_config_set_i		4113015	0					
ANR	4119135	ArgumentList	core -> config		4113015	1					
ANR	4119136	Argument	core -> config		4113015	0					
ANR	4119137	PtrMemberAccess	core -> config		4113015	0					
ANR	4119138	Identifier	core		4113015	0					
ANR	4119139	Identifier	config		4113015	1					
ANR	4119140	Argument	tovars [ i ]		4113015	1					
ANR	4119141	ArrayIndexing	tovars [ i ]		4113015	0					
ANR	4119142	Identifier	tovars		4113015	0					
ANR	4119143	Identifier	i		4113015	1					
ANR	4119144	Argument	curto [ i ]		4113015	2					
ANR	4119145	ArrayIndexing	curto [ i ]		4113015	0					
ANR	4119146	Identifier	curto		4113015	0					
ANR	4119147	Identifier	i		4113015	1					
ANR	4119148	IfStatement	if ( ptr2 )		4113015	35					
ANR	4119149	Condition	ptr2	3499:6:89281:89284	4113015	0	True				
ANR	4119150	Identifier	ptr2		4113015	0					
ANR	4119151	CompoundStatement		994:12:24636:24636	4113015	1					
ANR	4119152	ExpressionStatement	* ptr2 = '!'	3500:3:89292:89303	4113015	0	True				
ANR	4119153	AssignmentExpression	* ptr2 = '!'		4113015	0		=			
ANR	4119154	UnaryOperationExpression	* ptr2		4113015	0					
ANR	4119155	UnaryOperator	*		4113015	0					
ANR	4119156	Identifier	ptr2		4113015	1					
ANR	4119157	PrimaryExpression	'!'		4113015	1					
ANR	4119158	ExpressionStatement	"r_core_block_size ( core , tmpbsz )"	3501:3:89308:89340	4113015	1	True				
ANR	4119159	CallExpression	"r_core_block_size ( core , tmpbsz )"		4113015	0					
ANR	4119160	Callee	r_core_block_size		4113015	0					
ANR	4119161	Identifier	r_core_block_size		4113015	0					
ANR	4119162	ArgumentList	core		4113015	1					
ANR	4119163	Argument	core		4113015	0					
ANR	4119164	Identifier	core		4113015	0					
ANR	4119165	Argument	tmpbsz		4113015	1					
ANR	4119166	Identifier	tmpbsz		4113015	0					
ANR	4119167	IfStatement	if ( is_arch_set )		4113015	36					
ANR	4119168	Condition	is_arch_set	3503:6:89352:89362	4113015	0	True				
ANR	4119169	Identifier	is_arch_set		4113015	0					
ANR	4119170	CompoundStatement		998:19:24714:24714	4113015	1					
ANR	4119171	ExpressionStatement	core -> fixedarch = oldfixedarch	3504:3:89370:89400	4113015	0	True				
ANR	4119172	AssignmentExpression	core -> fixedarch = oldfixedarch		4113015	0		=			
ANR	4119173	PtrMemberAccess	core -> fixedarch		4113015	0					
ANR	4119174	Identifier	core		4113015	0					
ANR	4119175	Identifier	fixedarch		4113015	1					
ANR	4119176	Identifier	oldfixedarch		4113015	1					
ANR	4119177	ExpressionStatement	"r_config_set ( core -> config , ""asm.arch"" , tmpasm )"	3505:3:89405:89452	4113015	1	True				
ANR	4119178	CallExpression	"r_config_set ( core -> config , ""asm.arch"" , tmpasm )"		4113015	0					
ANR	4119179	Callee	r_config_set		4113015	0					
ANR	4119180	Identifier	r_config_set		4113015	0					
ANR	4119181	ArgumentList	core -> config		4113015	1					
ANR	4119182	Argument	core -> config		4113015	0					
ANR	4119183	PtrMemberAccess	core -> config		4113015	0					
ANR	4119184	Identifier	core		4113015	0					
ANR	4119185	Identifier	config		4113015	1					
ANR	4119186	Argument	"""asm.arch"""		4113015	1					
ANR	4119187	PrimaryExpression	"""asm.arch"""		4113015	0					
ANR	4119188	Argument	tmpasm		4113015	2					
ANR	4119189	Identifier	tmpasm		4113015	0					
ANR	4119190	ExpressionStatement	R_FREE ( tmpasm )	3506:3:89457:89472	4113015	2	True				
ANR	4119191	CallExpression	R_FREE ( tmpasm )		4113015	0					
ANR	4119192	Callee	R_FREE		4113015	0					
ANR	4119193	Identifier	R_FREE		4113015	0					
ANR	4119194	ArgumentList	tmpasm		4113015	1					
ANR	4119195	Argument	tmpasm		4113015	0					
ANR	4119196	Identifier	tmpasm		4113015	0					
ANR	4119197	IfStatement	if ( tmpfd != - 1 )		4113015	37					
ANR	4119198	Condition	tmpfd != - 1	3508:6:89484:89494	4113015	0	True				
ANR	4119199	EqualityExpression	tmpfd != - 1		4113015	0		!=			
ANR	4119200	Identifier	tmpfd		4113015	0					
ANR	4119201	UnaryOperationExpression	- 1		4113015	1					
ANR	4119202	UnaryOperator	-		4113015	0					
ANR	4119203	PrimaryExpression	1		4113015	1					
ANR	4119204	CompoundStatement		1003:19:24846:24846	4113015	1					
ANR	4119205	ExpressionStatement	"r_io_use_fd ( core -> io , tmpfd )"	3510:3:89537:89566	4113015	0	True				
ANR	4119206	CallExpression	"r_io_use_fd ( core -> io , tmpfd )"		4113015	0					
ANR	4119207	Callee	r_io_use_fd		4113015	0					
ANR	4119208	Identifier	r_io_use_fd		4113015	0					
ANR	4119209	ArgumentList	core -> io		4113015	1					
ANR	4119210	Argument	core -> io		4113015	0					
ANR	4119211	PtrMemberAccess	core -> io		4113015	0					
ANR	4119212	Identifier	core		4113015	0					
ANR	4119213	Identifier	io		4113015	1					
ANR	4119214	Argument	tmpfd		4113015	1					
ANR	4119215	Identifier	tmpfd		4113015	0					
ANR	4119216	IfStatement	if ( tmpdesc )		4113015	38					
ANR	4119217	Condition	tmpdesc	3512:6:89578:89584	4113015	0	True				
ANR	4119218	Identifier	tmpdesc		4113015	0					
ANR	4119219	CompoundStatement		1007:15:24936:24936	4113015	1					
ANR	4119220	IfStatement	if ( pamode )		4113015	0					
ANR	4119221	Condition	pamode	3513:7:89596:89601	4113015	0	True				
ANR	4119222	Identifier	pamode		4113015	0					
ANR	4119223	CompoundStatement		1008:15:24953:24953	4113015	1					
ANR	4119224	ExpressionStatement	"r_config_set_i ( core -> config , ""io.va"" , 0 )"	3514:4:89610:89651	4113015	0	True				
ANR	4119225	CallExpression	"r_config_set_i ( core -> config , ""io.va"" , 0 )"		4113015	0					
ANR	4119226	Callee	r_config_set_i		4113015	0					
ANR	4119227	Identifier	r_config_set_i		4113015	0					
ANR	4119228	ArgumentList	core -> config		4113015	1					
ANR	4119229	Argument	core -> config		4113015	0					
ANR	4119230	PtrMemberAccess	core -> config		4113015	0					
ANR	4119231	Identifier	core		4113015	0					
ANR	4119232	Identifier	config		4113015	1					
ANR	4119233	Argument	"""io.va"""		4113015	1					
ANR	4119234	PrimaryExpression	"""io.va"""		4113015	0					
ANR	4119235	Argument	0		4113015	2					
ANR	4119236	PrimaryExpression	0		4113015	0					
ANR	4119237	ExpressionStatement	r_io_desc_close ( tmpdesc )	3516:3:89661:89686	4113015	1	True				
ANR	4119238	CallExpression	r_io_desc_close ( tmpdesc )		4113015	0					
ANR	4119239	Callee	r_io_desc_close		4113015	0					
ANR	4119240	Identifier	r_io_desc_close		4113015	0					
ANR	4119241	ArgumentList	tmpdesc		4113015	1					
ANR	4119242	Argument	tmpdesc		4113015	0					
ANR	4119243	Identifier	tmpdesc		4113015	0					
ANR	4119244	ExpressionStatement	tmpdesc = NULL	3517:3:89691:89705	4113015	2	True				
ANR	4119245	AssignmentExpression	tmpdesc = NULL		4113015	0		=			
ANR	4119246	Identifier	tmpdesc		4113015	0					
ANR	4119247	Identifier	NULL		4113015	1					
ANR	4119248	IfStatement	if ( is_bits_set )		4113015	39					
ANR	4119249	Condition	is_bits_set	3519:6:89717:89727	4113015	0	True				
ANR	4119250	Identifier	is_bits_set		4113015	0					
ANR	4119251	CompoundStatement		1014:19:25079:25079	4113015	1					
ANR	4119252	ExpressionStatement	"r_config_set ( core -> config , ""asm.bits"" , tmpbits )"	3520:3:89735:89783	4113015	0	True				
ANR	4119253	CallExpression	"r_config_set ( core -> config , ""asm.bits"" , tmpbits )"		4113015	0					
ANR	4119254	Callee	r_config_set		4113015	0					
ANR	4119255	Identifier	r_config_set		4113015	0					
ANR	4119256	ArgumentList	core -> config		4113015	1					
ANR	4119257	Argument	core -> config		4113015	0					
ANR	4119258	PtrMemberAccess	core -> config		4113015	0					
ANR	4119259	Identifier	core		4113015	0					
ANR	4119260	Identifier	config		4113015	1					
ANR	4119261	Argument	"""asm.bits"""		4113015	1					
ANR	4119262	PrimaryExpression	"""asm.bits"""		4113015	0					
ANR	4119263	Argument	tmpbits		4113015	2					
ANR	4119264	Identifier	tmpbits		4113015	0					
ANR	4119265	ExpressionStatement	core -> fixedbits = oldfixedbits	3521:3:89788:89818	4113015	1	True				
ANR	4119266	AssignmentExpression	core -> fixedbits = oldfixedbits		4113015	0		=			
ANR	4119267	PtrMemberAccess	core -> fixedbits		4113015	0					
ANR	4119268	Identifier	core		4113015	0					
ANR	4119269	Identifier	fixedbits		4113015	1					
ANR	4119270	Identifier	oldfixedbits		4113015	1					
ANR	4119271	IfStatement	if ( tmpbsz != core -> blocksize )		4113015	40					
ANR	4119272	Condition	tmpbsz != core -> blocksize	3523:6:89830:89854	4113015	0	True				
ANR	4119273	EqualityExpression	tmpbsz != core -> blocksize		4113015	0		!=			
ANR	4119274	Identifier	tmpbsz		4113015	0					
ANR	4119275	PtrMemberAccess	core -> blocksize		4113015	1					
ANR	4119276	Identifier	core		4113015	0					
ANR	4119277	Identifier	blocksize		4113015	1					
ANR	4119278	CompoundStatement		1018:33:25206:25206	4113015	1					
ANR	4119279	ExpressionStatement	"r_core_block_size ( core , tmpbsz )"	3524:3:89862:89894	4113015	0	True				
ANR	4119280	CallExpression	"r_core_block_size ( core , tmpbsz )"		4113015	0					
ANR	4119281	Callee	r_core_block_size		4113015	0					
ANR	4119282	Identifier	r_core_block_size		4113015	0					
ANR	4119283	ArgumentList	core		4113015	1					
ANR	4119284	Argument	core		4113015	0					
ANR	4119285	Identifier	core		4113015	0					
ANR	4119286	Argument	tmpbsz		4113015	1					
ANR	4119287	Identifier	tmpbsz		4113015	0					
ANR	4119288	IfStatement	if ( tmpeval )		4113015	41					
ANR	4119289	Condition	tmpeval	3526:6:89906:89912	4113015	0	True				
ANR	4119290	Identifier	tmpeval		4113015	0					
ANR	4119291	CompoundStatement		1021:15:25264:25264	4113015	1					
ANR	4119292	ExpressionStatement	"r_core_cmd0 ( core , tmpeval )"	3527:3:89920:89947	4113015	0	True				
ANR	4119293	CallExpression	"r_core_cmd0 ( core , tmpeval )"		4113015	0					
ANR	4119294	Callee	r_core_cmd0		4113015	0					
ANR	4119295	Identifier	r_core_cmd0		4113015	0					
ANR	4119296	ArgumentList	core		4113015	1					
ANR	4119297	Argument	core		4113015	0					
ANR	4119298	Identifier	core		4113015	0					
ANR	4119299	Argument	tmpeval		4113015	1					
ANR	4119300	Identifier	tmpeval		4113015	0					
ANR	4119301	ExpressionStatement	R_FREE ( tmpeval )	3528:3:89952:89968	4113015	1	True				
ANR	4119302	CallExpression	R_FREE ( tmpeval )		4113015	0					
ANR	4119303	Callee	R_FREE		4113015	0					
ANR	4119304	Identifier	R_FREE		4113015	0					
ANR	4119305	ArgumentList	tmpeval		4113015	1					
ANR	4119306	Argument	tmpeval		4113015	0					
ANR	4119307	Identifier	tmpeval		4113015	0					
ANR	4119308	IfStatement	if ( flgspc_changed )		4113015	42					
ANR	4119309	Condition	flgspc_changed	3530:6:89980:89993	4113015	0	True				
ANR	4119310	Identifier	flgspc_changed		4113015	0					
ANR	4119311	CompoundStatement		1025:22:25345:25345	4113015	1					
ANR	4119312	ExpressionStatement	r_flag_space_pop ( core -> flags )	3531:3:90001:90031	4113015	0	True				
ANR	4119313	CallExpression	r_flag_space_pop ( core -> flags )		4113015	0					
ANR	4119314	Callee	r_flag_space_pop		4113015	0					
ANR	4119315	Identifier	r_flag_space_pop		4113015	0					
ANR	4119316	ArgumentList	core -> flags		4113015	1					
ANR	4119317	Argument	core -> flags		4113015	0					
ANR	4119318	PtrMemberAccess	core -> flags		4113015	0					
ANR	4119319	Identifier	core		4113015	0					
ANR	4119320	Identifier	flags		4113015	1					
ANR	4119321	ExpressionStatement	* ptr = '@'	3533:2:90039:90049	4113015	43	True				
ANR	4119322	AssignmentExpression	* ptr = '@'		4113015	0		=			
ANR	4119323	UnaryOperationExpression	* ptr		4113015	0					
ANR	4119324	UnaryOperator	*		4113015	0					
ANR	4119325	Identifier	ptr		4113015	1					
ANR	4119326	PrimaryExpression	'@'		4113015	1					
ANR	4119327	ExpressionStatement	rc = ret	3534:2:90053:90061	4113015	44	True				
ANR	4119328	AssignmentExpression	rc = ret		4113015	0		=			
ANR	4119329	Identifier	rc		4113015	0					
ANR	4119330	Identifier	ret		4113015	1					
ANR	4119331	GotoStatement	goto beach ;	3535:2:90065:90075	4113015	45	True				
ANR	4119332	Identifier	beach		4113015	0					
ANR	4119333	Label	fuji :	3537:0:90080:90084	4113015	50	True				
ANR	4119334	Identifier	fuji		4113015	0					
ANR	4119335	ExpressionStatement	"rc = cmd ? r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) ) : false"	3538:1:90087:90150	4113015	51	True				
ANR	4119336	AssignmentExpression	"rc = cmd ? r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) ) : false"		4113015	0		=			
ANR	4119337	Identifier	rc		4113015	0					
ANR	4119338	ConditionalExpression	"cmd ? r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) ) : false"		4113015	1					
ANR	4119339	Condition	cmd		4113015	0					
ANR	4119340	Identifier	cmd		4113015	0					
ANR	4119341	CallExpression	"r_cmd_call ( core -> rcmd , r_str_trim_head ( cmd ) )"		4113015	1					
ANR	4119342	Callee	r_cmd_call		4113015	0					
ANR	4119343	Identifier	r_cmd_call		4113015	0					
ANR	4119344	ArgumentList	core -> rcmd		4113015	1					
ANR	4119345	Argument	core -> rcmd		4113015	0					
ANR	4119346	PtrMemberAccess	core -> rcmd		4113015	0					
ANR	4119347	Identifier	core		4113015	0					
ANR	4119348	Identifier	rcmd		4113015	1					
ANR	4119349	Argument	r_str_trim_head ( cmd )		4113015	1					
ANR	4119350	CallExpression	r_str_trim_head ( cmd )		4113015	0					
ANR	4119351	Callee	r_str_trim_head		4113015	0					
ANR	4119352	Identifier	r_str_trim_head		4113015	0					
ANR	4119353	ArgumentList	cmd		4113015	1					
ANR	4119354	Argument	cmd		4113015	0					
ANR	4119355	Identifier	cmd		4113015	0					
ANR	4119356	Identifier	false		4113015	2					
ANR	4119357	Label	beach :	3539:0:90152:90157	4113015	52	True				
ANR	4119358	Identifier	beach		4113015	0					
ANR	4119359	ExpressionStatement	r_cons_grep_process ( grep )	3540:1:90160:90186	4113015	53	True				
ANR	4119360	CallExpression	r_cons_grep_process ( grep )		4113015	0					
ANR	4119361	Callee	r_cons_grep_process		4113015	0					
ANR	4119362	Identifier	r_cons_grep_process		4113015	0					
ANR	4119363	ArgumentList	grep		4113015	1					
ANR	4119364	Argument	grep		4113015	0					
ANR	4119365	Identifier	grep		4113015	0					
ANR	4119366	IfStatement	if ( scr_html != - 1 )		4113015	54					
ANR	4119367	Condition	scr_html != - 1	3541:5:90193:90206	4113015	0	True				
ANR	4119368	EqualityExpression	scr_html != - 1		4113015	0		!=			
ANR	4119369	Identifier	scr_html		4113015	0					
ANR	4119370	UnaryOperationExpression	- 1		4113015	1					
ANR	4119371	UnaryOperator	-		4113015	0					
ANR	4119372	PrimaryExpression	1		4113015	1					
ANR	4119373	CompoundStatement		1036:21:25558:25558	4113015	1					
ANR	4119374	ExpressionStatement	r_cons_flush ( )	3542:2:90213:90228	4113015	0	True				
ANR	4119375	CallExpression	r_cons_flush ( )		4113015	0					
ANR	4119376	Callee	r_cons_flush		4113015	0					
ANR	4119377	Identifier	r_cons_flush		4113015	0					
ANR	4119378	ArgumentList			4113015	1					
ANR	4119379	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"	3543:2:90232:90283	4113015	1	True				
ANR	4119380	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , scr_html )"		4113015	0					
ANR	4119381	Callee	r_config_set_i		4113015	0					
ANR	4119382	Identifier	r_config_set_i		4113015	0					
ANR	4119383	ArgumentList	core -> config		4113015	1					
ANR	4119384	Argument	core -> config		4113015	0					
ANR	4119385	PtrMemberAccess	core -> config		4113015	0					
ANR	4119386	Identifier	core		4113015	0					
ANR	4119387	Identifier	config		4113015	1					
ANR	4119388	Argument	"""scr.html"""		4113015	1					
ANR	4119389	PrimaryExpression	"""scr.html"""		4113015	0					
ANR	4119390	Argument	scr_html		4113015	2					
ANR	4119391	Identifier	scr_html		4113015	0					
ANR	4119392	IfStatement	if ( scr_color != - 1 )		4113015	55					
ANR	4119393	Condition	scr_color != - 1	3545:5:90293:90307	4113015	0	True				
ANR	4119394	EqualityExpression	scr_color != - 1		4113015	0		!=			
ANR	4119395	Identifier	scr_color		4113015	0					
ANR	4119396	UnaryOperationExpression	- 1		4113015	1					
ANR	4119397	UnaryOperator	-		4113015	0					
ANR	4119398	PrimaryExpression	1		4113015	1					
ANR	4119399	CompoundStatement		1040:22:25659:25659	4113015	1					
ANR	4119400	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"	3546:2:90314:90367	4113015	0	True				
ANR	4119401	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , scr_color )"		4113015	0					
ANR	4119402	Callee	r_config_set_i		4113015	0					
ANR	4119403	Identifier	r_config_set_i		4113015	0					
ANR	4119404	ArgumentList	core -> config		4113015	1					
ANR	4119405	Argument	core -> config		4113015	0					
ANR	4119406	PtrMemberAccess	core -> config		4113015	0					
ANR	4119407	Identifier	core		4113015	0					
ANR	4119408	Identifier	config		4113015	1					
ANR	4119409	Argument	"""scr.color"""		4113015	1					
ANR	4119410	PrimaryExpression	"""scr.color"""		4113015	0					
ANR	4119411	Argument	scr_color		4113015	2					
ANR	4119412	Identifier	scr_color		4113015	0					
ANR	4119413	ExpressionStatement	r_list_free ( tmpenvs )	3548:1:90373:90394	4113015	56	True				
ANR	4119414	CallExpression	r_list_free ( tmpenvs )		4113015	0					
ANR	4119415	Callee	r_list_free		4113015	0					
ANR	4119416	Identifier	r_list_free		4113015	0					
ANR	4119417	ArgumentList	tmpenvs		4113015	1					
ANR	4119418	Argument	tmpenvs		4113015	0					
ANR	4119419	Identifier	tmpenvs		4113015	0					
ANR	4119420	IfStatement	if ( tmpdesc )		4113015	57					
ANR	4119421	Condition	tmpdesc	3549:5:90401:90407	4113015	0	True				
ANR	4119422	Identifier	tmpdesc		4113015	0					
ANR	4119423	CompoundStatement		1044:14:25759:25759	4113015	1					
ANR	4119424	ExpressionStatement	r_io_desc_close ( tmpdesc )	3550:2:90414:90439	4113015	0	True				
ANR	4119425	CallExpression	r_io_desc_close ( tmpdesc )		4113015	0					
ANR	4119426	Callee	r_io_desc_close		4113015	0					
ANR	4119427	Identifier	r_io_desc_close		4113015	0					
ANR	4119428	ArgumentList	tmpdesc		4113015	1					
ANR	4119429	Argument	tmpdesc		4113015	0					
ANR	4119430	Identifier	tmpdesc		4113015	0					
ANR	4119431	ExpressionStatement	tmpdesc = NULL	3551:2:90443:90457	4113015	1	True				
ANR	4119432	AssignmentExpression	tmpdesc = NULL		4113015	0		=			
ANR	4119433	Identifier	tmpdesc		4113015	0					
ANR	4119434	Identifier	NULL		4113015	1					
ANR	4119435	ExpressionStatement	core -> fixedarch = oldfixedarch	3553:1:90463:90493	4113015	58	True				
ANR	4119436	AssignmentExpression	core -> fixedarch = oldfixedarch		4113015	0		=			
ANR	4119437	PtrMemberAccess	core -> fixedarch		4113015	0					
ANR	4119438	Identifier	core		4113015	0					
ANR	4119439	Identifier	fixedarch		4113015	1					
ANR	4119440	Identifier	oldfixedarch		4113015	1					
ANR	4119441	ExpressionStatement	core -> fixedbits = oldfixedbits	3554:1:90496:90526	4113015	59	True				
ANR	4119442	AssignmentExpression	core -> fixedbits = oldfixedbits		4113015	0		=			
ANR	4119443	PtrMemberAccess	core -> fixedbits		4113015	0					
ANR	4119444	Identifier	core		4113015	0					
ANR	4119445	Identifier	fixedbits		4113015	1					
ANR	4119446	Identifier	oldfixedbits		4113015	1					
ANR	4119447	IfStatement	if ( tmpseek )		4113015	60					
ANR	4119448	Condition	tmpseek	3555:5:90533:90539	4113015	0	True				
ANR	4119449	Identifier	tmpseek		4113015	0					
ANR	4119450	CompoundStatement		1050:14:25891:25891	4113015	1					
ANR	4119451	ExpressionStatement	* tmpseek = cmd_tmpseek	3556:2:90546:90568	4113015	0	True				
ANR	4119452	AssignmentExpression	* tmpseek = cmd_tmpseek		4113015	0		=			
ANR	4119453	UnaryOperationExpression	* tmpseek		4113015	0					
ANR	4119454	UnaryOperator	*		4113015	0					
ANR	4119455	Identifier	tmpseek		4113015	1					
ANR	4119456	Identifier	cmd_tmpseek		4113015	1					
ANR	4119457	IfStatement	if ( cmd_ignbithints != - 1 )		4113015	61					
ANR	4119458	Condition	cmd_ignbithints != - 1	3558:5:90578:90598	4113015	0	True				
ANR	4119459	EqualityExpression	cmd_ignbithints != - 1		4113015	0		!=			
ANR	4119460	Identifier	cmd_ignbithints		4113015	0					
ANR	4119461	UnaryOperationExpression	- 1		4113015	1					
ANR	4119462	UnaryOperator	-		4113015	0					
ANR	4119463	PrimaryExpression	1		4113015	1					
ANR	4119464	CompoundStatement		1053:28:25950:25950	4113015	1					
ANR	4119465	ExpressionStatement	"r_config_set_i ( core -> config , ""anal.ignbithints"" , cmd_ignbithints )"	3559:2:90605:90671	4113015	0	True				
ANR	4119466	CallExpression	"r_config_set_i ( core -> config , ""anal.ignbithints"" , cmd_ignbithints )"		4113015	0					
ANR	4119467	Callee	r_config_set_i		4113015	0					
ANR	4119468	Identifier	r_config_set_i		4113015	0					
ANR	4119469	ArgumentList	core -> config		4113015	1					
ANR	4119470	Argument	core -> config		4113015	0					
ANR	4119471	PtrMemberAccess	core -> config		4113015	0					
ANR	4119472	Identifier	core		4113015	0					
ANR	4119473	Identifier	config		4113015	1					
ANR	4119474	Argument	"""anal.ignbithints"""		4113015	1					
ANR	4119475	PrimaryExpression	"""anal.ignbithints"""		4113015	0					
ANR	4119476	Argument	cmd_ignbithints		4113015	2					
ANR	4119477	Identifier	cmd_ignbithints		4113015	0					
ANR	4119478	ReturnStatement	return rc ;	3561:1:90677:90686	4113015	62	True				
ANR	4119479	Identifier	rc		4113015	0					
ANR	4119480	Label	fail :	3562:0:90688:90692	4113015	63	True				
ANR	4119481	Identifier	fail		4113015	0					
ANR	4119482	ExpressionStatement	rc = - 1	3563:1:90695:90702	4113015	64	True				
ANR	4119483	AssignmentExpression	rc = - 1		4113015	0		=			
ANR	4119484	Identifier	rc		4113015	0					
ANR	4119485	UnaryOperationExpression	- 1		4113015	1					
ANR	4119486	UnaryOperator	-		4113015	0					
ANR	4119487	PrimaryExpression	1		4113015	1					
ANR	4119488	GotoStatement	goto beach ;	3564:1:90705:90715	4113015	65	True				
ANR	4119489	Identifier	beach		4113015	0					
ANR	4119490	ReturnType	static int		4113015	1					
ANR	4119491	Identifier	r_core_cmd_subst_i		4113015	2					
ANR	4119492	ParameterList	"RCore * core , char * cmd , char * colon , bool * tmpseek"		4113015	3					
ANR	4119493	Parameter	RCore * core	2506:30:64598:64608	4113015	0	True				
ANR	4119494	ParameterType	RCore *		4113015	0					
ANR	4119495	Identifier	core		4113015	1					
ANR	4119496	Parameter	char * cmd	2506:43:64611:64619	4113015	1	True				
ANR	4119497	ParameterType	char *		4113015	0					
ANR	4119498	Identifier	cmd		4113015	1					
ANR	4119499	Parameter	char * colon	2506:54:64622:64632	4113015	2	True				
ANR	4119500	ParameterType	char *		4113015	0					
ANR	4119501	Identifier	colon		4113015	1					
ANR	4119502	Parameter	bool * tmpseek	2506:67:64635:64647	4113015	3	True				
ANR	4119503	ParameterType	bool *		4113015	0					
ANR	4119504	Identifier	tmpseek		4113015	1					
ANR	4119505	CFGEntryNode	ENTRY		4113015		True				
ANR	4119506	CFGExitNode	EXIT		4113015		True				
ANR	4119507	InfiniteForNode	true		4113015		True				
ANR	4119508	Symbol	stdin		4113015						
ANR	4119509	Symbol	* q ++		4113015						
ANR	4119510	Symbol	find_eoq		4113015						
ANR	4119511	Symbol	* ch		4113015						
ANR	4119512	Symbol	strchr		4113015						
ANR	4119513	Symbol	core -> offset		4113015						
ANR	4119514	Symbol	* tmpseek		4113015						
ANR	4119515	Symbol	& core -> oobi_len		4113015						
ANR	4119516	Symbol	oneline		4113015						
ANR	4119517	Symbol	tmpenvs		4113015						
ANR	4119518	Symbol	strncmp		4113015						
ANR	4119519	Symbol	flgspc_changed		4113015						
ANR	4119520	Symbol	len		4113015						
ANR	4119521	Symbol	trim		4113015						
ANR	4119522	Symbol	* sc		4113015						
ANR	4119523	Symbol	r_core_cmd_str_pipe		4113015						
ANR	4119524	Symbol	showHelp		4113015						
ANR	4119525	Symbol	help_msg_vertical_bar		4113015						
ANR	4119526	Symbol	* arroba		4113015						
ANR	4119527	Symbol	scr_color		4113015						
ANR	4119528	Symbol	* core -> num		4113015						
ANR	4119529	Symbol	* cmd		4113015						
ANR	4119530	Symbol	core -> blocksize		4113015						
ANR	4119531	Symbol	set_tmp_bits		4113015						
ANR	4119532	Symbol	r_file_slurp		4113015						
ANR	4119533	Symbol	tmpasm		4113015						
ANR	4119534	Symbol	* tovars		4113015						
ANR	4119535	Symbol	* v ++		4113015						
ANR	4119536	Symbol	core -> block		4113015						
ANR	4119537	Symbol	r_list_newf		4113015						
ANR	4119538	Symbol	r_str_trim_tail		4113015						
ANR	4119539	Symbol	str		4113015						
ANR	4119540	Symbol	rc		4113015						
ANR	4119541	Symbol	* * * core		4113015						
ANR	4119542	Symbol	oldText		4113015						
ANR	4119543	Symbol	appendResult		4113015						
ANR	4119544	Symbol	tmpbits		4113015						
ANR	4119545	Symbol	r_config_get_i		4113015						
ANR	4119546	Symbol	core -> cons -> use_tts		4113015						
ANR	4119547	Symbol	r_str_trim_ro		4113015						
ANR	4119548	Symbol	core -> cmd_in_backticks		4113015						
ANR	4119549	Symbol	detail		4113015						
ANR	4119550	Symbol	bb		4113015						
ANR	4119551	Symbol	isalpha		4113015						
ANR	4119552	Symbol	oldfixedarch		4113015						
ANR	4119553	Symbol	regval		4113015						
ANR	4119554	Symbol	* core		4113015						
ANR	4119555	Symbol	core -> fixedbits		4113015						
ANR	4119556	Symbol	R_ABS		4113015						
ANR	4119557	Symbol	two		4113015						
ANR	4119558	Symbol	core -> anal		4113015						
ANR	4119559	Symbol	core -> fixedblock		4113015						
ANR	4119560	Symbol	sc		4113015						
ANR	4119561	Symbol	r_str_lastbut		4113015						
ANR	4119562	Symbol	core -> cons		4113015						
ANR	4119563	Symbol	core -> io		4113015						
ANR	4119564	Symbol	r_str_trim_head_tail		4113015						
ANR	4119565	Symbol	r_core_cmd_foreach		4113015						
ANR	4119566	Symbol	& tmpbits		4113015						
ANR	4119567	Symbol	is_bits_set		4113015						
ANR	4119568	Symbol	* core -> oobi		4113015						
ANR	4119569	Symbol	r_hex_str2bin		4113015						
ANR	4119570	Symbol	sep		4113015						
ANR	4119571	Symbol	b		4113015						
ANR	4119572	Symbol	d		4113015						
ANR	4119573	Symbol	ch		4113015						
ANR	4119574	Symbol	f		4113015						
ANR	4119575	Symbol	sz		4113015						
ANR	4119576	Symbol	i		4113015						
ANR	4119577	Symbol	r_anal_bb_offset_inst		4113015						
ANR	4119578	Symbol	core -> flags		4113015						
ANR	4119579	Symbol	k		4113015						
ANR	4119580	Symbol	r_str_prepend		4113015						
ANR	4119581	Symbol	n		4113015						
ANR	4119582	Symbol	IS_DIGIT		4113015						
ANR	4119583	Symbol	o		4113015						
ANR	4119584	Symbol	p		4113015						
ANR	4119585	Symbol	q		4113015						
ANR	4119586	Symbol	buf		4113015						
ANR	4119587	Symbol	pipecolor		4113015						
ANR	4119588	Symbol	s		4113015						
ANR	4119589	Symbol	* strlen		4113015						
ANR	4119590	Symbol	* fromvars		4113015						
ANR	4119591	Symbol	v		4113015						
ANR	4119592	Symbol	x00		4113015						
ANR	4119593	Symbol	to		4113015						
ANR	4119594	Symbol	* r_cons_singleton		4113015						
ANR	4119595	Symbol	r_buf_size		4113015						
ANR	4119596	Symbol	tmpfd		4113015						
ANR	4119597	Symbol	r_core_cmd_str		4113015						
ANR	4119598	Symbol	tmpdesc		4113015						
ANR	4119599	Symbol	use_editor		4113015						
ANR	4119600	Symbol	IS_WHITECHAR		4113015						
ANR	4119601	Symbol	realloc		4113015						
ANR	4119602	Symbol	scr_html		4113015						
ANR	4119603	Symbol	IS_WHITESPACE		4113015						
ANR	4119604	Symbol	empty		4113015						
ANR	4119605	Symbol	strlen		4113015						
ANR	4119606	Symbol	memcmp		4113015						
ANR	4119607	Symbol	* rule		4113015						
ANR	4119608	Symbol	* ptr2		4113015						
ANR	4119609	Symbol	tmpeval		4113015						
ANR	4119610	Symbol	core -> tmpseek		4113015						
ANR	4119611	Symbol	ret		4113015						
ANR	4119612	Symbol	res		4113015						
ANR	4119613	Symbol	sdb_querys		4113015						
ANR	4119614	Symbol	core -> io -> desc		4113015						
ANR	4119615	Symbol	r_buf_new_with_bytes		4113015						
ANR	4119616	Symbol	addr_is_set		4113015						
ANR	4119617	Symbol	haveQuote		4113015						
ANR	4119618	Symbol	& sz		4113015						
ANR	4119619	Symbol	strstr		4113015						
ANR	4119620	Symbol	tmpseek		4113015						
ANR	4119621	Symbol	* fdnum		4113015						
ANR	4119622	Symbol	numexpr		4113015						
ANR	4119623	Symbol	r_anal_bb_from_offset		4113015						
ANR	4119624	Symbol	usemyblock		4113015						
ANR	4119625	Symbol	r_io_open_buffer		4113015						
ANR	4119626	Symbol	rule		4113015						
ANR	4119627	Symbol	curfrom		4113015						
ANR	4119628	Symbol	r_num_math		4113015						
ANR	4119629	Symbol	r_str_trim_head		4113015						
ANR	4119630	Symbol	inst_off		4113015						
ANR	4119631	Symbol	grep		4113015						
ANR	4119632	Symbol	* p ++		4113015						
ANR	4119633	Symbol	false		4113015						
ANR	4119634	Symbol	core -> oobi_len		4113015						
ANR	4119635	Symbol	findSeparator		4113015						
ANR	4119636	Symbol	ptr		4113015						
ANR	4119637	Symbol	arroba		4113015						
ANR	4119638	Symbol	colon		4113015						
ANR	4119639	Symbol	feof		4113015						
ANR	4119640	Symbol	strdup		4113015						
ANR	4119641	Symbol	append		4113015						
ANR	4119642	Symbol	* * core -> io		4113015						
ANR	4119643	Symbol	r_core_cmdf		4113015						
ANR	4119644	Symbol	COLOR_MODE_DISABLED		4113015						
ANR	4119645	Symbol	r_debug_reg_get		4113015						
ANR	4119646	Symbol	core -> io -> desc -> fd		4113015						
ANR	4119647	Symbol	eos		4113015						
ANR	4119648	Symbol	* sep		4113015						
ANR	4119649	Symbol	fromvars		4113015						
ANR	4119650	Symbol	r_cons_pipe_open		4113015						
ANR	4119651	Symbol	curto		4113015						
ANR	4119652	Symbol	r_num_tail		4113015						
ANR	4119653	Symbol	core -> fixedarch		4113015						
ANR	4119654	Symbol	* buf		4113015						
ANR	4119655	Symbol	tmpenvs_free		4113015						
ANR	4119656	Symbol	bits		4113015						
ANR	4119657	Symbol	index		4113015						
ANR	4119658	Symbol	ptr2		4113015						
ANR	4119659	Symbol	r_cmd_call		4113015						
ANR	4119660	Symbol	oseek		4113015						
ANR	4119661	Symbol	cmd		4113015						
ANR	4119662	Symbol	r_str_append		4113015						
ANR	4119663	Symbol	* core -> cons		4113015						
ANR	4119664	Symbol	ocolor		4113015						
ANR	4119665	Symbol	core -> oobi		4113015						
ANR	4119666	Symbol	core -> sdb		4113015						
ANR	4119667	Symbol	r_config_get		4113015						
ANR	4119668	Symbol	range		4113015						
ANR	4119669	Symbol	r_flag_space_push		4113015						
ANR	4119670	Symbol	help_msg_greater_sign		4113015						
ANR	4119671	Symbol	out		4113015						
ANR	4119672	Symbol	* curto		4113015						
ANR	4119673	Symbol	r_core_cmd_subst		4113015						
ANR	4119674	Symbol	offstr		4113015						
ANR	4119675	Symbol	help_msg_at		4113015						
ANR	4119676	Symbol	* str		4113015						
ANR	4119677	Symbol	r_core_cmd_buffer		4113015						
ANR	4119678	Symbol	r_cmd_alias_get		4113015						
ANR	4119679	Symbol	d -> perm		4113015						
ANR	4119680	Symbol	atoi		4113015						
ANR	4119681	Symbol	r_flag_get		4113015						
ANR	4119682	Symbol	r_core_cmd_foreach3		4113015						
ANR	4119683	Symbol	malloc		4113015						
ANR	4119684	Symbol	editor		4113015						
ANR	4119685	Symbol	tovars		4113015						
ANR	4119686	Symbol	& tmpasm		4113015						
ANR	4119687	Symbol	bb -> ninstr		4113015						
ANR	4119688	Symbol	fdn		4113015						
ANR	4119689	Symbol	r_cons_grep_strip		4113015						
ANR	4119690	Symbol	* curfrom		4113015						
ANR	4119691	Symbol	char		4113015						
ANR	4119692	Symbol	r_io_system		4113015						
ANR	4119693	Symbol	r_cons_singleton ( ) -> is_interactive		4113015						
ANR	4119694	Symbol	core -> num -> value		4113015						
ANR	4119695	Symbol	r_file_temp		4113015						
ANR	4119696	Symbol	bb -> addr		4113015						
ANR	4119697	Symbol	parse_tmp_evals		4113015						
ANR	4119698	Symbol	* ptr		4113015						
ANR	4119699	Symbol	from		4113015						
ANR	4119700	Symbol	core -> num		4113015						
ANR	4119701	Symbol	* core -> io -> desc		4113015						
ANR	4119702	Symbol	R_PERM_RWX		4113015						
ANR	4119703	Symbol	strcmp		4113015						
ANR	4119704	Symbol	NULL		4113015						
ANR	4119705	Symbol	tick		4113015						
ANR	4119706	Symbol	quotestr		4113015						
ANR	4119707	Symbol	core -> io -> va		4113015						
ANR	4119708	Symbol	r_str_trim_nc		4113015						
ANR	4119709	Symbol	is_arch_set		4113015						
ANR	4119710	Symbol	core		4113015						
ANR	4119711	Symbol	true		4113015						
ANR	4119712	Symbol	* 0		4113015						
ANR	4119713	Symbol	* 1		4113015						
ANR	4119714	Symbol	pamode		4113015						
ANR	4119715	Symbol	cmd_tmpseek		4113015						
ANR	4119716	Symbol	fdnum		4113015						
ANR	4119717	Symbol	line		4113015						
ANR	4119718	Symbol	cmd_ignbithints		4113015						
ANR	4119719	Symbol	r_io_desc_size		4113015						
ANR	4119720	Symbol	r_str_newf		4113015						
ANR	4119721	Symbol	r_str_replace		4113015						
ANR	4119722	Symbol	r_cons_singleton		4113015						
ANR	4119723	Symbol	UT64_MAX		4113015						
ANR	4119724	Symbol	addr		4113015						
ANR	4119725	Symbol	value		4113015						
ANR	4119726	Symbol	* * core		4113015						
ANR	4119727	Symbol	core -> config		4113015						
ANR	4119728	Symbol	core -> rcmd		4113015						
ANR	4119729	Symbol	* bb		4113015						
ANR	4119730	Symbol	* ptr ++		4113015						
ANR	4119731	Symbol	* editor		4113015						
ANR	4119732	Symbol	r_str_firstbut		4113015						
ANR	4119733	Symbol	* offstr		4113015						
ANR	4119734	Symbol	* d		4113015						
ANR	4119735	Symbol	d -> fd		4113015						
ANR	4119736	Symbol	set_tmp_arch		4113015						
ANR	4119737	Symbol	* core -> io		4113015						
ANR	4119738	Symbol	* i		4113015						
ANR	4119739	Symbol	tmpbsz		4113015						
ANR	4119740	Symbol	oldfixedbits		4113015						
ANR	4119741	Symbol	pipefd		4113015						
ANR	4119742	Symbol	* p		4113015						
ANR	4119743	Symbol	* q		4113015						
ANR	4119744	Symbol	* trim		4113015						
ANR	4119745	Symbol	mander		4113015						
ANR	4119746	Symbol	core -> dbg		4113015						
ANR	4119747	Function	foreach_comment	3567:0:90720:91070							
ANR	4119748	FunctionDef	"foreach_comment (void * user , const char * k , const char * v)"		4119747	0					
ANR	4119749	CompoundStatement		3567:69:90789:91070	4119747	0					
ANR	4119750	IdentifierDeclStatement	RAnalMetaUserItem * ui = user ;	3568:1:90792:90820	4119747	0	True				
ANR	4119751	IdentifierDecl	* ui = user		4119747	0					
ANR	4119752	IdentifierDeclType	RAnalMetaUserItem *		4119747	0					
ANR	4119753	Identifier	ui		4119747	1					
ANR	4119754	AssignmentExpression	* ui = user		4119747	2		=			
ANR	4119755	Identifier	user		4119747	0					
ANR	4119756	Identifier	user		4119747	1					
ANR	4119757	IdentifierDeclStatement	RCore * core = ui -> anal -> user ;	3569:1:90823:90851	4119747	1	True				
ANR	4119758	IdentifierDecl	* core = ui -> anal -> user		4119747	0					
ANR	4119759	IdentifierDeclType	RCore *		4119747	0					
ANR	4119760	Identifier	core		4119747	1					
ANR	4119761	AssignmentExpression	* core = ui -> anal -> user		4119747	2		=			
ANR	4119762	Identifier	core		4119747	0					
ANR	4119763	PtrMemberAccess	ui -> anal -> user		4119747	1					
ANR	4119764	PtrMemberAccess	ui -> anal		4119747	0					
ANR	4119765	Identifier	ui		4119747	0					
ANR	4119766	Identifier	anal		4119747	1					
ANR	4119767	Identifier	user		4119747	1					
ANR	4119768	IdentifierDeclStatement	const char * cmd = ui -> user ;	3570:1:90854:90880	4119747	2	True				
ANR	4119769	IdentifierDecl	* cmd = ui -> user		4119747	0					
ANR	4119770	IdentifierDeclType	const char *		4119747	0					
ANR	4119771	Identifier	cmd		4119747	1					
ANR	4119772	AssignmentExpression	* cmd = ui -> user		4119747	2		=			
ANR	4119773	Identifier	cmd		4119747	0					
ANR	4119774	PtrMemberAccess	ui -> user		4119747	1					
ANR	4119775	Identifier	ui		4119747	0					
ANR	4119776	Identifier	user		4119747	1					
ANR	4119777	IfStatement	"if ( ! strncmp ( k , ""meta.C."" , 7 ) )"		4119747	3					
ANR	4119778	Condition	"! strncmp ( k , ""meta.C."" , 7 )"	3571:5:90887:90912	4119747	0	True				
ANR	4119779	UnaryOperationExpression	"! strncmp ( k , ""meta.C."" , 7 )"		4119747	0					
ANR	4119780	UnaryOperator	!		4119747	0					
ANR	4119781	CallExpression	"strncmp ( k , ""meta.C."" , 7 )"		4119747	1					
ANR	4119782	Callee	strncmp		4119747	0					
ANR	4119783	Identifier	strncmp		4119747	0					
ANR	4119784	ArgumentList	k		4119747	1					
ANR	4119785	Argument	k		4119747	0					
ANR	4119786	Identifier	k		4119747	0					
ANR	4119787	Argument	"""meta.C."""		4119747	1					
ANR	4119788	PrimaryExpression	"""meta.C."""		4119747	0					
ANR	4119789	Argument	7		4119747	2					
ANR	4119790	PrimaryExpression	7		4119747	0					
ANR	4119791	CompoundStatement		6:2:129:166	4119747	1					
ANR	4119792	IdentifierDeclStatement	"char * cmt = ( char * ) sdb_decode ( v , 0 ) ;"	3572:2:90919:90956	4119747	0	True				
ANR	4119793	IdentifierDecl	"* cmt = ( char * ) sdb_decode ( v , 0 )"		4119747	0					
ANR	4119794	IdentifierDeclType	char *		4119747	0					
ANR	4119795	Identifier	cmt		4119747	1					
ANR	4119796	AssignmentExpression	"* cmt = ( char * ) sdb_decode ( v , 0 )"		4119747	2		=			
ANR	4119797	Identifier	cmt		4119747	0					
ANR	4119798	CastExpression	"( char * ) sdb_decode ( v , 0 )"		4119747	1					
ANR	4119799	CastTarget	char *		4119747	0					
ANR	4119800	CallExpression	"sdb_decode ( v , 0 )"		4119747	1					
ANR	4119801	Callee	sdb_decode		4119747	0					
ANR	4119802	Identifier	sdb_decode		4119747	0					
ANR	4119803	ArgumentList	v		4119747	1					
ANR	4119804	Argument	v		4119747	0					
ANR	4119805	Identifier	v		4119747	0					
ANR	4119806	Argument	0		4119747	1					
ANR	4119807	PrimaryExpression	0		4119747	0					
ANR	4119808	IfStatement	if ( cmt )		4119747	1					
ANR	4119809	Condition	cmt	3573:6:90964:90966	4119747	0	True				
ANR	4119810	Identifier	cmt		4119747	0					
ANR	4119811	CompoundStatement		7:11:179:179	4119747	1					
ANR	4119812	ExpressionStatement	"r_core_cmdf ( core , ""s %s"" , k + 7 )"	3574:3:90974:91007	4119747	0	True				
ANR	4119813	CallExpression	"r_core_cmdf ( core , ""s %s"" , k + 7 )"		4119747	0					
ANR	4119814	Callee	r_core_cmdf		4119747	0					
ANR	4119815	Identifier	r_core_cmdf		4119747	0					
ANR	4119816	ArgumentList	core		4119747	1					
ANR	4119817	Argument	core		4119747	0					
ANR	4119818	Identifier	core		4119747	0					
ANR	4119819	Argument	"""s %s"""		4119747	1					
ANR	4119820	PrimaryExpression	"""s %s"""		4119747	0					
ANR	4119821	Argument	k + 7		4119747	2					
ANR	4119822	AdditiveExpression	k + 7		4119747	0		+			
ANR	4119823	Identifier	k		4119747	0					
ANR	4119824	PrimaryExpression	7		4119747	1					
ANR	4119825	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3575:3:91012:91035	4119747	1	True				
ANR	4119826	CallExpression	"r_core_cmd0 ( core , cmd )"		4119747	0					
ANR	4119827	Callee	r_core_cmd0		4119747	0					
ANR	4119828	Identifier	r_core_cmd0		4119747	0					
ANR	4119829	ArgumentList	core		4119747	1					
ANR	4119830	Argument	core		4119747	0					
ANR	4119831	Identifier	core		4119747	0					
ANR	4119832	Argument	cmd		4119747	1					
ANR	4119833	Identifier	cmd		4119747	0					
ANR	4119834	ExpressionStatement	free ( cmt )	3576:3:91040:91050	4119747	2	True				
ANR	4119835	CallExpression	free ( cmt )		4119747	0					
ANR	4119836	Callee	free		4119747	0					
ANR	4119837	Identifier	free		4119747	0					
ANR	4119838	ArgumentList	cmt		4119747	1					
ANR	4119839	Argument	cmt		4119747	0					
ANR	4119840	Identifier	cmt		4119747	0					
ANR	4119841	ReturnStatement	return 1 ;	3579:1:91060:91068	4119747	4	True				
ANR	4119842	PrimaryExpression	1		4119747	0					
ANR	4119843	ReturnType	static int		4119747	1					
ANR	4119844	Identifier	foreach_comment		4119747	2					
ANR	4119845	ParameterList	"void * user , const char * k , const char * v"		4119747	3					
ANR	4119846	Parameter	void * user	3567:27:90747:90756	4119747	0	True				
ANR	4119847	ParameterType	void *		4119747	0					
ANR	4119848	Identifier	user		4119747	1					
ANR	4119849	Parameter	const char * k	3567:39:90759:90771	4119747	1	True				
ANR	4119850	ParameterType	const char *		4119747	0					
ANR	4119851	Identifier	k		4119747	1					
ANR	4119852	Parameter	const char * v	3567:54:90774:90786	4119747	2	True				
ANR	4119853	ParameterType	const char *		4119747	0					
ANR	4119854	Identifier	v		4119747	1					
ANR	4119855	CFGEntryNode	ENTRY		4119747		True				
ANR	4119856	CFGExitNode	EXIT		4119747		True				
ANR	4119857	Symbol	* * ui		4119747						
ANR	4119858	Symbol	sdb_decode		4119747						
ANR	4119859	Symbol	ui -> anal		4119747						
ANR	4119860	Symbol	ui -> user		4119747						
ANR	4119861	Symbol	* ui -> anal		4119747						
ANR	4119862	Symbol	k		4119747						
ANR	4119863	Symbol	cmt		4119747						
ANR	4119864	Symbol	core		4119747						
ANR	4119865	Symbol	strncmp		4119747						
ANR	4119866	Symbol	ui		4119747						
ANR	4119867	Symbol	v		4119747						
ANR	4119868	Symbol	* ui		4119747						
ANR	4119869	Symbol	cmd		4119747						
ANR	4119870	Symbol	user		4119747						
ANR	4119871	Symbol	ui -> anal -> user		4119747						
ANR	4119872	ClassDef	exec_command_t	3582:0:91073:91129							
ANR	4119873	DeclStmt									
ANR	4119874	Decl							RCore	RCore *	core
ANR	4119875	DeclStmt									
ANR	4119876	Decl							const char	const char *	cmd
ANR	4119877	Function	exec_command_on_flag	3587:0:91133:91391							
ANR	4119878	FunctionDef	"exec_command_on_flag (RFlagItem * flg , void * u)"		4119877	0					
ANR	4119879	CompoundStatement		3587:58:91191:91391	4119877	0					
ANR	4119880	IdentifierDeclStatement	struct exec_command_t * user = ( struct exec_command_t * ) u ;	3588:1:91194:91250	4119877	0	True				
ANR	4119881	IdentifierDecl	* user = ( struct exec_command_t * ) u		4119877	0					
ANR	4119882	IdentifierDeclType	struct exec_command_t *		4119877	0					
ANR	4119883	Identifier	user		4119877	1					
ANR	4119884	AssignmentExpression	* user = ( struct exec_command_t * ) u		4119877	2		=			
ANR	4119885	Identifier	user		4119877	0					
ANR	4119886	CastExpression	( struct exec_command_t * ) u		4119877	1					
ANR	4119887	CastTarget	struct exec_command_t *		4119877	0					
ANR	4119888	Identifier	u		4119877	1					
ANR	4119889	ExpressionStatement	"r_core_block_size ( user -> core , flg -> size )"	3589:1:91253:91294	4119877	1	True				
ANR	4119890	CallExpression	"r_core_block_size ( user -> core , flg -> size )"		4119877	0					
ANR	4119891	Callee	r_core_block_size		4119877	0					
ANR	4119892	Identifier	r_core_block_size		4119877	0					
ANR	4119893	ArgumentList	user -> core		4119877	1					
ANR	4119894	Argument	user -> core		4119877	0					
ANR	4119895	PtrMemberAccess	user -> core		4119877	0					
ANR	4119896	Identifier	user		4119877	0					
ANR	4119897	Identifier	core		4119877	1					
ANR	4119898	Argument	flg -> size		4119877	1					
ANR	4119899	PtrMemberAccess	flg -> size		4119877	0					
ANR	4119900	Identifier	flg		4119877	0					
ANR	4119901	Identifier	size		4119877	1					
ANR	4119902	ExpressionStatement	"r_core_seek ( user -> core , flg -> offset , 1 )"	3590:1:91297:91337	4119877	2	True				
ANR	4119903	CallExpression	"r_core_seek ( user -> core , flg -> offset , 1 )"		4119877	0					
ANR	4119904	Callee	r_core_seek		4119877	0					
ANR	4119905	Identifier	r_core_seek		4119877	0					
ANR	4119906	ArgumentList	user -> core		4119877	1					
ANR	4119907	Argument	user -> core		4119877	0					
ANR	4119908	PtrMemberAccess	user -> core		4119877	0					
ANR	4119909	Identifier	user		4119877	0					
ANR	4119910	Identifier	core		4119877	1					
ANR	4119911	Argument	flg -> offset		4119877	1					
ANR	4119912	PtrMemberAccess	flg -> offset		4119877	0					
ANR	4119913	Identifier	flg		4119877	0					
ANR	4119914	Identifier	offset		4119877	1					
ANR	4119915	Argument	1		4119877	2					
ANR	4119916	PrimaryExpression	1		4119877	0					
ANR	4119917	ExpressionStatement	"r_core_cmd0 ( user -> core , user -> cmd )"	3591:1:91340:91375	4119877	3	True				
ANR	4119918	CallExpression	"r_core_cmd0 ( user -> core , user -> cmd )"		4119877	0					
ANR	4119919	Callee	r_core_cmd0		4119877	0					
ANR	4119920	Identifier	r_core_cmd0		4119877	0					
ANR	4119921	ArgumentList	user -> core		4119877	1					
ANR	4119922	Argument	user -> core		4119877	0					
ANR	4119923	PtrMemberAccess	user -> core		4119877	0					
ANR	4119924	Identifier	user		4119877	0					
ANR	4119925	Identifier	core		4119877	1					
ANR	4119926	Argument	user -> cmd		4119877	1					
ANR	4119927	PtrMemberAccess	user -> cmd		4119877	0					
ANR	4119928	Identifier	user		4119877	0					
ANR	4119929	Identifier	cmd		4119877	1					
ANR	4119930	ReturnStatement	return true ;	3592:1:91378:91389	4119877	4	True				
ANR	4119931	Identifier	true		4119877	0					
ANR	4119932	ReturnType	static bool		4119877	1					
ANR	4119933	Identifier	exec_command_on_flag		4119877	2					
ANR	4119934	ParameterList	"RFlagItem * flg , void * u"		4119877	3					
ANR	4119935	Parameter	RFlagItem * flg	3587:33:91166:91179	4119877	0	True				
ANR	4119936	ParameterType	RFlagItem *		4119877	0					
ANR	4119937	Identifier	flg		4119877	1					
ANR	4119938	Parameter	void * u	3587:49:91182:91188	4119877	1	True				
ANR	4119939	ParameterType	void *		4119877	0					
ANR	4119940	Identifier	u		4119877	1					
ANR	4119941	CFGEntryNode	ENTRY		4119877		True				
ANR	4119942	CFGExitNode	EXIT		4119877		True				
ANR	4119943	Symbol	flg		4119877						
ANR	4119944	Symbol	* flg		4119877						
ANR	4119945	Symbol	* user		4119877						
ANR	4119946	Symbol	flg -> offset		4119877						
ANR	4119947	Symbol	user -> cmd		4119877						
ANR	4119948	Symbol	u		4119877						
ANR	4119949	Symbol	user -> core		4119877						
ANR	4119950	Symbol	flg -> size		4119877						
ANR	4119951	Symbol	true		4119877						
ANR	4119952	Symbol	user		4119877						
ANR	4119953	Function	foreach_pairs	3595:0:91394:91841							
ANR	4119954	FunctionDef	"foreach_pairs (RCore * core , const char * cmd , const char * each)"		4119953	0					
ANR	4119955	CompoundStatement		3595:74:91468:91841	4119953	0					
ANR	4119956	IdentifierDeclStatement	const char * arg ;	3596:1:91471:91486	4119953	0	True				
ANR	4119957	IdentifierDecl	* arg		4119953	0					
ANR	4119958	IdentifierDeclType	const char *		4119953	0					
ANR	4119959	Identifier	arg		4119953	1					
ANR	4119960	IdentifierDeclStatement	int pair = 0 ;	3597:1:91489:91501	4119953	1	True				
ANR	4119961	IdentifierDecl	pair = 0		4119953	0					
ANR	4119962	IdentifierDeclType	int		4119953	0					
ANR	4119963	Identifier	pair		4119953	1					
ANR	4119964	AssignmentExpression	pair = 0		4119953	2		=			
ANR	4119965	Identifier	pair		4119953	0					
ANR	4119966	PrimaryExpression	0		4119953	1					
ANR	4119967	ForStatement	for ( arg = each ; ; )		4119953	2					
ANR	4119968	ForInit	arg = each ;	3598:6:91509:91520	4119953	0	True				
ANR	4119969	AssignmentExpression	arg = each		4119953	0		=			
ANR	4119970	Identifier	arg		4119953	0					
ANR	4119971	Identifier	each		4119953	1					
ANR	4119972	CompoundStatement		5:2:61:91	4119953	1					
ANR	4119973	IdentifierDeclStatement	"char * next = strchr ( arg , ' ' ) ;"	3599:2:91530:91560	4119953	0	True				
ANR	4119974	IdentifierDecl	"* next = strchr ( arg , ' ' )"		4119953	0					
ANR	4119975	IdentifierDeclType	char *		4119953	0					
ANR	4119976	Identifier	next		4119953	1					
ANR	4119977	AssignmentExpression	"* next = strchr ( arg , ' ' )"		4119953	2		=			
ANR	4119978	Identifier	next		4119953	0					
ANR	4119979	CallExpression	"strchr ( arg , ' ' )"		4119953	1					
ANR	4119980	Callee	strchr		4119953	0					
ANR	4119981	Identifier	strchr		4119953	0					
ANR	4119982	ArgumentList	arg		4119953	1					
ANR	4119983	Argument	arg		4119953	0					
ANR	4119984	Identifier	arg		4119953	0					
ANR	4119985	Argument	' '		4119953	1					
ANR	4119986	PrimaryExpression	' '		4119953	0					
ANR	4119987	IfStatement	if ( next )		4119953	1					
ANR	4119988	Condition	next	3600:6:91568:91571	4119953	0	True				
ANR	4119989	Identifier	next		4119953	0					
ANR	4119990	CompoundStatement		6:12:105:105	4119953	1					
ANR	4119991	ExpressionStatement	* next = 0	3601:3:91579:91588	4119953	0	True				
ANR	4119992	AssignmentExpression	* next = 0		4119953	0		=			
ANR	4119993	UnaryOperationExpression	* next		4119953	0					
ANR	4119994	UnaryOperator	*		4119953	0					
ANR	4119995	Identifier	next		4119953	1					
ANR	4119996	PrimaryExpression	0		4119953	1					
ANR	4119997	IfStatement	if ( arg && * arg )		4119953	2					
ANR	4119998	Condition	arg && * arg	3603:6:91600:91610	4119953	0	True				
ANR	4119999	AndExpression	arg && * arg		4119953	0		&&			
ANR	4120000	Identifier	arg		4119953	0					
ANR	4120001	UnaryOperationExpression	* arg		4119953	1					
ANR	4120002	UnaryOperator	*		4119953	0					
ANR	4120003	Identifier	arg		4119953	1					
ANR	4120004	CompoundStatement		10:3:149:179	4119953	1					
ANR	4120005	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , arg ) ;"	3604:3:91618:91648	4119953	0	True				
ANR	4120006	IdentifierDecl	"n = r_num_get ( NULL , arg )"		4119953	0					
ANR	4120007	IdentifierDeclType	ut64		4119953	0					
ANR	4120008	Identifier	n		4119953	1					
ANR	4120009	AssignmentExpression	"n = r_num_get ( NULL , arg )"		4119953	2		=			
ANR	4120010	Identifier	n		4119953	0					
ANR	4120011	CallExpression	"r_num_get ( NULL , arg )"		4119953	1					
ANR	4120012	Callee	r_num_get		4119953	0					
ANR	4120013	Identifier	r_num_get		4119953	0					
ANR	4120014	ArgumentList	NULL		4119953	1					
ANR	4120015	Argument	NULL		4119953	0					
ANR	4120016	Identifier	NULL		4119953	0					
ANR	4120017	Argument	arg		4119953	1					
ANR	4120018	Identifier	arg		4119953	0					
ANR	4120019	IfStatement	if ( pair % 2 )		4119953	1					
ANR	4120020	Condition	pair % 2	3605:7:91657:91662	4119953	0	True				
ANR	4120021	MultiplicativeExpression	pair % 2		4119953	0		%			
ANR	4120022	Identifier	pair		4119953	0					
ANR	4120023	PrimaryExpression	2		4119953	1					
ANR	4120024	CompoundStatement		11:15:196:196	4119953	1					
ANR	4120025	ExpressionStatement	"r_core_block_size ( core , n )"	3606:4:91671:91698	4119953	0	True				
ANR	4120026	CallExpression	"r_core_block_size ( core , n )"		4119953	0					
ANR	4120027	Callee	r_core_block_size		4119953	0					
ANR	4120028	Identifier	r_core_block_size		4119953	0					
ANR	4120029	ArgumentList	core		4119953	1					
ANR	4120030	Argument	core		4119953	0					
ANR	4120031	Identifier	core		4119953	0					
ANR	4120032	Argument	n		4119953	1					
ANR	4120033	Identifier	n		4119953	0					
ANR	4120034	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3607:4:91704:91727	4119953	1	True				
ANR	4120035	CallExpression	"r_core_cmd0 ( core , cmd )"		4119953	0					
ANR	4120036	Callee	r_core_cmd0		4119953	0					
ANR	4120037	Identifier	r_core_cmd0		4119953	0					
ANR	4120038	ArgumentList	core		4119953	1					
ANR	4120039	Argument	core		4119953	0					
ANR	4120040	Identifier	core		4119953	0					
ANR	4120041	Argument	cmd		4119953	1					
ANR	4120042	Identifier	cmd		4119953	0					
ANR	4120043	ElseStatement	else		4119953	0					
ANR	4120044	CompoundStatement		14:10:270:270	4119953	0					
ANR	4120045	ExpressionStatement	"r_core_seek ( core , n , 1 )"	3609:4:91745:91769	4119953	0	True				
ANR	4120046	CallExpression	"r_core_seek ( core , n , 1 )"		4119953	0					
ANR	4120047	Callee	r_core_seek		4119953	0					
ANR	4120048	Identifier	r_core_seek		4119953	0					
ANR	4120049	ArgumentList	core		4119953	1					
ANR	4120050	Argument	core		4119953	0					
ANR	4120051	Identifier	core		4119953	0					
ANR	4120052	Argument	n		4119953	1					
ANR	4120053	Identifier	n		4119953	0					
ANR	4120054	Argument	1		4119953	2					
ANR	4120055	PrimaryExpression	1		4119953	0					
ANR	4120056	ExpressionStatement	pair ++	3611:3:91779:91785	4119953	2	True				
ANR	4120057	PostIncDecOperationExpression	pair ++		4119953	0					
ANR	4120058	Identifier	pair		4119953	0					
ANR	4120059	IncDec	++		4119953	1					
ANR	4120060	IfStatement	if ( ! next )		4119953	3					
ANR	4120061	Condition	! next	3613:6:91797:91801	4119953	0	True				
ANR	4120062	UnaryOperationExpression	! next		4119953	0					
ANR	4120063	UnaryOperator	!		4119953	0					
ANR	4120064	Identifier	next		4119953	1					
ANR	4120065	CompoundStatement		19:13:335:335	4119953	1					
ANR	4120066	BreakStatement	break ;	3614:3:91809:91814	4119953	0	True				
ANR	4120067	ExpressionStatement	arg = next + 1	3616:2:91822:91836	4119953	4	True				
ANR	4120068	AssignmentExpression	arg = next + 1		4119953	0		=			
ANR	4120069	Identifier	arg		4119953	0					
ANR	4120070	AdditiveExpression	next + 1		4119953	1		+			
ANR	4120071	Identifier	next		4119953	0					
ANR	4120072	PrimaryExpression	1		4119953	1					
ANR	4120073	ReturnType	static void		4119953	1					
ANR	4120074	Identifier	foreach_pairs		4119953	2					
ANR	4120075	ParameterList	"RCore * core , const char * cmd , const char * each"		4119953	3					
ANR	4120076	Parameter	RCore * core	3595:26:91420:91430	4119953	0	True				
ANR	4120077	ParameterType	RCore *		4119953	0					
ANR	4120078	Identifier	core		4119953	1					
ANR	4120079	Parameter	const char * cmd	3595:39:91433:91447	4119953	1	True				
ANR	4120080	ParameterType	const char *		4119953	0					
ANR	4120081	Identifier	cmd		4119953	1					
ANR	4120082	Parameter	const char * each	3595:56:91450:91465	4119953	2	True				
ANR	4120083	ParameterType	const char *		4119953	0					
ANR	4120084	Identifier	each		4119953	1					
ANR	4120085	CFGEntryNode	ENTRY		4119953		True				
ANR	4120086	CFGExitNode	EXIT		4119953		True				
ANR	4120087	InfiniteForNode	true		4119953		True				
ANR	4120088	Symbol	next		4119953						
ANR	4120089	Symbol	core		4119953						
ANR	4120090	Symbol	NULL		4119953						
ANR	4120091	Symbol	arg		4119953						
ANR	4120092	Symbol	strchr		4119953						
ANR	4120093	Symbol	r_num_get		4119953						
ANR	4120094	Symbol	cmd		4119953						
ANR	4120095	Symbol	* next		4119953						
ANR	4120096	Symbol	each		4119953						
ANR	4120097	Symbol	pair		4119953						
ANR	4120098	Symbol	n		4119953						
ANR	4120099	Symbol	* arg		4119953						
ANR	4120100	Function	r_core_cmd_foreach3	3620:0:91844:97840							
ANR	4120101	FunctionDef	"r_core_cmd_foreach3 (RCore * core , const char * cmd , char * each)"		4120100	0					
ANR	4120102	CompoundStatement		3620:72:91916:97840	4120100	0					
ANR	4120103	IdentifierDeclStatement	RDebug * dbg = core -> dbg ;	3621:1:91928:91951	4120100	0	True				
ANR	4120104	IdentifierDecl	* dbg = core -> dbg		4120100	0					
ANR	4120105	IdentifierDeclType	RDebug *		4120100	0					
ANR	4120106	Identifier	dbg		4120100	1					
ANR	4120107	AssignmentExpression	* dbg = core -> dbg		4120100	2		=			
ANR	4120108	Identifier	dbg		4120100	0					
ANR	4120109	PtrMemberAccess	core -> dbg		4120100	1					
ANR	4120110	Identifier	core		4120100	0					
ANR	4120111	Identifier	dbg		4120100	1					
ANR	4120112	IdentifierDeclStatement	"RList * list , * head ;"	3622:1:91954:91972	4120100	1	True				
ANR	4120113	IdentifierDecl	* list		4120100	0					
ANR	4120114	IdentifierDeclType	RList *		4120100	0					
ANR	4120115	Identifier	list		4120100	1					
ANR	4120116	IdentifierDecl	* head		4120100	1					
ANR	4120117	IdentifierDeclType	RList *		4120100	0					
ANR	4120118	Identifier	head		4120100	1					
ANR	4120119	IdentifierDeclStatement	RListIter * iter ;	3623:1:91975:91990	4120100	2	True				
ANR	4120120	IdentifierDecl	* iter		4120100	0					
ANR	4120121	IdentifierDeclType	RListIter *		4120100	0					
ANR	4120122	Identifier	iter		4120100	1					
ANR	4120123	IdentifierDeclStatement	int i ;	3624:1:91993:91998	4120100	3	True				
ANR	4120124	IdentifierDecl	i		4120100	0					
ANR	4120125	IdentifierDeclType	int		4120100	0					
ANR	4120126	Identifier	i		4120100	1					
ANR	4120127	IdentifierDeclStatement	const char * filter = NULL ;	3625:1:92001:92026	4120100	4	True				
ANR	4120128	IdentifierDecl	* filter = NULL		4120100	0					
ANR	4120129	IdentifierDeclType	const char *		4120100	0					
ANR	4120130	Identifier	filter		4120100	1					
ANR	4120131	AssignmentExpression	* filter = NULL		4120100	2		=			
ANR	4120132	Identifier	NULL		4120100	0					
ANR	4120133	Identifier	NULL		4120100	1					
ANR	4120134	IfStatement	if ( each [ 1 ] == ':' )		4120100	5					
ANR	4120135	Condition	each [ 1 ] == ':'	3627:5:92034:92047	4120100	0	True				
ANR	4120136	EqualityExpression	each [ 1 ] == ':'		4120100	0		==			
ANR	4120137	ArrayIndexing	each [ 1 ]		4120100	0					
ANR	4120138	Identifier	each		4120100	0					
ANR	4120139	PrimaryExpression	1		4120100	1					
ANR	4120140	PrimaryExpression	':'		4120100	1					
ANR	4120141	CompoundStatement		8:21:133:133	4120100	1					
ANR	4120142	ExpressionStatement	filter = each + 2	3628:2:92054:92071	4120100	0	True				
ANR	4120143	AssignmentExpression	filter = each + 2		4120100	0		=			
ANR	4120144	Identifier	filter		4120100	0					
ANR	4120145	AdditiveExpression	each + 2		4120100	1		+			
ANR	4120146	Identifier	each		4120100	0					
ANR	4120147	PrimaryExpression	2		4120100	1					
ANR	4120148	SwitchStatement	switch ( each [ 0 ] )		4120100	6					
ANR	4120149	Condition	each [ 0 ]	3631:9:92086:92092	4120100	0	True				
ANR	4120150	ArrayIndexing	each [ 0 ]		4120100	0					
ANR	4120151	Identifier	each		4120100	0					
ANR	4120152	PrimaryExpression	0		4120100	1					
ANR	4120153	CompoundStatement		12:18:178:178	4120100	1					
ANR	4120154	Label	case '=' :	3632:1:92098:92106	4120100	0	True				
ANR	4120155	ExpressionStatement	"foreach_pairs ( core , cmd , each + 1 )"	3633:2:92110:92145	4120100	1	True				
ANR	4120156	CallExpression	"foreach_pairs ( core , cmd , each + 1 )"		4120100	0					
ANR	4120157	Callee	foreach_pairs		4120100	0					
ANR	4120158	Identifier	foreach_pairs		4120100	0					
ANR	4120159	ArgumentList	core		4120100	1					
ANR	4120160	Argument	core		4120100	0					
ANR	4120161	Identifier	core		4120100	0					
ANR	4120162	Argument	cmd		4120100	1					
ANR	4120163	Identifier	cmd		4120100	0					
ANR	4120164	Argument	each + 1		4120100	2					
ANR	4120165	AdditiveExpression	each + 1		4120100	0		+			
ANR	4120166	Identifier	each		4120100	0					
ANR	4120167	PrimaryExpression	1		4120100	1					
ANR	4120168	BreakStatement	break ;	3634:2:92149:92154	4120100	2	True				
ANR	4120169	Label	case '?' :	3635:1:92157:92165	4120100	3	True				
ANR	4120170	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at_at_at )"	3636:2:92169:92210	4120100	4	True				
ANR	4120171	CallExpression	"r_core_cmd_help ( core , help_msg_at_at_at )"		4120100	0					
ANR	4120172	Callee	r_core_cmd_help		4120100	0					
ANR	4120173	Identifier	r_core_cmd_help		4120100	0					
ANR	4120174	ArgumentList	core		4120100	1					
ANR	4120175	Argument	core		4120100	0					
ANR	4120176	Identifier	core		4120100	0					
ANR	4120177	Argument	help_msg_at_at_at		4120100	1					
ANR	4120178	Identifier	help_msg_at_at_at		4120100	0					
ANR	4120179	BreakStatement	break ;	3637:2:92214:92219	4120100	5	True				
ANR	4120180	Label	case 'c' :	3638:1:92222:92230	4120100	6	True				
ANR	4120181	IfStatement	if ( filter )		4120100	7					
ANR	4120182	Condition	filter	3639:6:92238:92243	4120100	0	True				
ANR	4120183	Identifier	filter		4120100	0					
ANR	4120184	CompoundStatement		21:3:334:375	4120100	1					
ANR	4120185	IdentifierDeclStatement	"char * arg = r_core_cmd_str ( core , filter ) ;"	3640:3:92251:92292	4120100	0	True				
ANR	4120186	IdentifierDecl	"* arg = r_core_cmd_str ( core , filter )"		4120100	0					
ANR	4120187	IdentifierDeclType	char *		4120100	0					
ANR	4120188	Identifier	arg		4120100	1					
ANR	4120189	AssignmentExpression	"* arg = r_core_cmd_str ( core , filter )"		4120100	2		=			
ANR	4120190	Identifier	arg		4120100	0					
ANR	4120191	CallExpression	"r_core_cmd_str ( core , filter )"		4120100	1					
ANR	4120192	Callee	r_core_cmd_str		4120100	0					
ANR	4120193	Identifier	r_core_cmd_str		4120100	0					
ANR	4120194	ArgumentList	core		4120100	1					
ANR	4120195	Argument	core		4120100	0					
ANR	4120196	Identifier	core		4120100	0					
ANR	4120197	Argument	filter		4120100	1					
ANR	4120198	Identifier	filter		4120100	0					
ANR	4120199	ExpressionStatement	"foreach_pairs ( core , cmd , arg )"	3641:3:92297:92327	4120100	1	True				
ANR	4120200	CallExpression	"foreach_pairs ( core , cmd , arg )"		4120100	0					
ANR	4120201	Callee	foreach_pairs		4120100	0					
ANR	4120202	Identifier	foreach_pairs		4120100	0					
ANR	4120203	ArgumentList	core		4120100	1					
ANR	4120204	Argument	core		4120100	0					
ANR	4120205	Identifier	core		4120100	0					
ANR	4120206	Argument	cmd		4120100	1					
ANR	4120207	Identifier	cmd		4120100	0					
ANR	4120208	Argument	arg		4120100	2					
ANR	4120209	Identifier	arg		4120100	0					
ANR	4120210	ExpressionStatement	free ( arg )	3642:3:92332:92342	4120100	2	True				
ANR	4120211	CallExpression	free ( arg )		4120100	0					
ANR	4120212	Callee	free		4120100	0					
ANR	4120213	Identifier	free		4120100	0					
ANR	4120214	ArgumentList	arg		4120100	1					
ANR	4120215	Argument	arg		4120100	0					
ANR	4120216	Identifier	arg		4120100	0					
ANR	4120217	ElseStatement	else		4120100	0					
ANR	4120218	CompoundStatement		24:9:436:436	4120100	0					
ANR	4120219	ExpressionStatement	"eprintf ( ""Usage: @@@c:command   # same as @@@=`command`\\n"" )"	3644:3:92358:92417	4120100	0	True				
ANR	4120220	CallExpression	"eprintf ( ""Usage: @@@c:command   # same as @@@=`command`\\n"" )"		4120100	0					
ANR	4120221	Callee	eprintf		4120100	0					
ANR	4120222	Identifier	eprintf		4120100	0					
ANR	4120223	ArgumentList	"""Usage: @@@c:command   # same as @@@=`command`\\n"""		4120100	1					
ANR	4120224	Argument	"""Usage: @@@c:command   # same as @@@=`command`\\n"""		4120100	0					
ANR	4120225	PrimaryExpression	"""Usage: @@@c:command   # same as @@@=`command`\\n"""		4120100	0					
ANR	4120226	BreakStatement	break ;	3646:2:92425:92430	4120100	8	True				
ANR	4120227	Label	case 'C' :	3647:1:92433:92441	4120100	9	True				
ANR	4120228	ExpressionStatement	"r_meta_list_cb ( core -> anal , R_META_TYPE_COMMENT , 0 , foreach_comment , ( void * ) cmd , UT64_MAX )"	3648:2:92445:92535	4120100	10	True				
ANR	4120229	CallExpression	"r_meta_list_cb ( core -> anal , R_META_TYPE_COMMENT , 0 , foreach_comment , ( void * ) cmd , UT64_MAX )"		4120100	0					
ANR	4120230	Callee	r_meta_list_cb		4120100	0					
ANR	4120231	Identifier	r_meta_list_cb		4120100	0					
ANR	4120232	ArgumentList	core -> anal		4120100	1					
ANR	4120233	Argument	core -> anal		4120100	0					
ANR	4120234	PtrMemberAccess	core -> anal		4120100	0					
ANR	4120235	Identifier	core		4120100	0					
ANR	4120236	Identifier	anal		4120100	1					
ANR	4120237	Argument	R_META_TYPE_COMMENT		4120100	1					
ANR	4120238	Identifier	R_META_TYPE_COMMENT		4120100	0					
ANR	4120239	Argument	0		4120100	2					
ANR	4120240	PrimaryExpression	0		4120100	0					
ANR	4120241	Argument	foreach_comment		4120100	3					
ANR	4120242	Identifier	foreach_comment		4120100	0					
ANR	4120243	Argument	( void * ) cmd		4120100	4					
ANR	4120244	CastExpression	( void * ) cmd		4120100	0					
ANR	4120245	CastTarget	void *		4120100	0					
ANR	4120246	Identifier	cmd		4120100	1					
ANR	4120247	Argument	UT64_MAX		4120100	5					
ANR	4120248	Identifier	UT64_MAX		4120100	0					
ANR	4120249	BreakStatement	break ;	3649:2:92539:92544	4120100	11	True				
ANR	4120250	Label	case 'm' :	3650:1:92547:92555	4120100	12	True				
ANR	4120251	CompoundStatement		36:3:782:793	4120100	13					
ANR	4120252	IdentifierDeclStatement	int fd = r_io_fd_get_current ( core -> io ) ;	3652:3:92564:92603	4120100	0	True				
ANR	4120253	IdentifierDecl	fd = r_io_fd_get_current ( core -> io )		4120100	0					
ANR	4120254	IdentifierDeclType	int		4120100	0					
ANR	4120255	Identifier	fd		4120100	1					
ANR	4120256	AssignmentExpression	fd = r_io_fd_get_current ( core -> io )		4120100	2		=			
ANR	4120257	Identifier	fd		4120100	0					
ANR	4120258	CallExpression	r_io_fd_get_current ( core -> io )		4120100	1					
ANR	4120259	Callee	r_io_fd_get_current		4120100	0					
ANR	4120260	Identifier	r_io_fd_get_current		4120100	0					
ANR	4120261	ArgumentList	core -> io		4120100	1					
ANR	4120262	Argument	core -> io		4120100	0					
ANR	4120263	PtrMemberAccess	core -> io		4120100	0					
ANR	4120264	Identifier	core		4120100	0					
ANR	4120265	Identifier	io		4120100	1					
ANR	4120266	IdentifierDeclStatement	"RList * maps = r_io_map_get_for_fd ( core -> io , fd ) ;"	3654:3:92646:92694	4120100	1	True				
ANR	4120267	IdentifierDecl	"* maps = r_io_map_get_for_fd ( core -> io , fd )"		4120100	0					
ANR	4120268	IdentifierDeclType	RList *		4120100	0					
ANR	4120269	Identifier	maps		4120100	1					
ANR	4120270	AssignmentExpression	"* maps = r_io_map_get_for_fd ( core -> io , fd )"		4120100	2		=			
ANR	4120271	Identifier	maps		4120100	0					
ANR	4120272	CallExpression	"r_io_map_get_for_fd ( core -> io , fd )"		4120100	1					
ANR	4120273	Callee	r_io_map_get_for_fd		4120100	0					
ANR	4120274	Identifier	r_io_map_get_for_fd		4120100	0					
ANR	4120275	ArgumentList	core -> io		4120100	1					
ANR	4120276	Argument	core -> io		4120100	0					
ANR	4120277	PtrMemberAccess	core -> io		4120100	0					
ANR	4120278	Identifier	core		4120100	0					
ANR	4120279	Identifier	io		4120100	1					
ANR	4120280	Argument	fd		4120100	1					
ANR	4120281	Identifier	fd		4120100	0					
ANR	4120282	IdentifierDeclStatement	RIOMap * map ;	3655:3:92699:92710	4120100	2	True				
ANR	4120283	IdentifierDecl	* map		4120100	0					
ANR	4120284	IdentifierDeclType	RIOMap *		4120100	0					
ANR	4120285	Identifier	map		4120100	1					
ANR	4120286	IfStatement	if ( maps )		4120100	3					
ANR	4120287	Condition	maps	3656:7:92719:92722	4120100	0	True				
ANR	4120288	Identifier	maps		4120100	0					
ANR	4120289	CompoundStatement		38:4:814:829	4120100	1					
ANR	4120290	IdentifierDeclStatement	RListIter * iter ;	3657:4:92731:92746	4120100	0	True				
ANR	4120291	IdentifierDecl	* iter		4120100	0					
ANR	4120292	IdentifierDeclType	RListIter *		4120100	0					
ANR	4120293	Identifier	iter		4120100	1					
ANR	4120294	Statement	r_list_foreach	3658:4:92752:92765	4120100	1	True				
ANR	4120295	Statement	(	3658:19:92767:92767	4120100	2	True				
ANR	4120296	Statement	maps	3658:20:92768:92771	4120100	3	True				
ANR	4120297	Statement	","	3658:24:92772:92772	4120100	4	True				
ANR	4120298	Statement	iter	3658:26:92774:92777	4120100	5	True				
ANR	4120299	Statement	","	3658:30:92778:92778	4120100	6	True				
ANR	4120300	Statement	map	3658:32:92780:92782	4120100	7	True				
ANR	4120301	Statement	)	3658:35:92783:92783	4120100	8	True				
ANR	4120302	CompoundStatement		39:37:868:868	4120100	9					
ANR	4120303	ExpressionStatement	"r_core_seek ( core , map -> itv . addr , 1 )"	3659:5:92792:92828	4120100	0	True				
ANR	4120304	CallExpression	"r_core_seek ( core , map -> itv . addr , 1 )"		4120100	0					
ANR	4120305	Callee	r_core_seek		4120100	0					
ANR	4120306	Identifier	r_core_seek		4120100	0					
ANR	4120307	ArgumentList	core		4120100	1					
ANR	4120308	Argument	core		4120100	0					
ANR	4120309	Identifier	core		4120100	0					
ANR	4120310	Argument	map -> itv . addr		4120100	1					
ANR	4120311	MemberAccess	map -> itv . addr		4120100	0					
ANR	4120312	PtrMemberAccess	map -> itv		4120100	0					
ANR	4120313	Identifier	map		4120100	0					
ANR	4120314	Identifier	itv		4120100	1					
ANR	4120315	Identifier	addr		4120100	1					
ANR	4120316	Argument	1		4120100	2					
ANR	4120317	PrimaryExpression	1		4120100	0					
ANR	4120318	ExpressionStatement	"r_core_block_size ( core , map -> itv . size )"	3660:5:92835:92874	4120100	1	True				
ANR	4120319	CallExpression	"r_core_block_size ( core , map -> itv . size )"		4120100	0					
ANR	4120320	Callee	r_core_block_size		4120100	0					
ANR	4120321	Identifier	r_core_block_size		4120100	0					
ANR	4120322	ArgumentList	core		4120100	1					
ANR	4120323	Argument	core		4120100	0					
ANR	4120324	Identifier	core		4120100	0					
ANR	4120325	Argument	map -> itv . size		4120100	1					
ANR	4120326	MemberAccess	map -> itv . size		4120100	0					
ANR	4120327	PtrMemberAccess	map -> itv		4120100	0					
ANR	4120328	Identifier	map		4120100	0					
ANR	4120329	Identifier	itv		4120100	1					
ANR	4120330	Identifier	size		4120100	1					
ANR	4120331	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3661:5:92881:92904	4120100	2	True				
ANR	4120332	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4120333	Callee	r_core_cmd0		4120100	0					
ANR	4120334	Identifier	r_core_cmd0		4120100	0					
ANR	4120335	ArgumentList	core		4120100	1					
ANR	4120336	Argument	core		4120100	0					
ANR	4120337	Identifier	core		4120100	0					
ANR	4120338	Argument	cmd		4120100	1					
ANR	4120339	Identifier	cmd		4120100	0					
ANR	4120340	ExpressionStatement	r_list_free ( maps )	3663:4:92916:92934	4120100	10	True				
ANR	4120341	CallExpression	r_list_free ( maps )		4120100	0					
ANR	4120342	Callee	r_list_free		4120100	0					
ANR	4120343	Identifier	r_list_free		4120100	0					
ANR	4120344	ArgumentList	maps		4120100	1					
ANR	4120345	Argument	maps		4120100	0					
ANR	4120346	Identifier	maps		4120100	0					
ANR	4120347	BreakStatement	break ;	3666:2:92947:92952	4120100	14	True				
ANR	4120348	Label	case 'M' :	3667:1:92955:92963	4120100	15	True				
ANR	4120349	IfStatement	if ( dbg && dbg -> h && dbg -> maps )		4120100	16					
ANR	4120350	Condition	dbg && dbg -> h && dbg -> maps	3668:6:92971:92996	4120100	0	True				
ANR	4120351	AndExpression	dbg && dbg -> h && dbg -> maps		4120100	0		&&			
ANR	4120352	Identifier	dbg		4120100	0					
ANR	4120353	AndExpression	dbg -> h && dbg -> maps		4120100	1		&&			
ANR	4120354	PtrMemberAccess	dbg -> h		4120100	0					
ANR	4120355	Identifier	dbg		4120100	0					
ANR	4120356	Identifier	h		4120100	1					
ANR	4120357	PtrMemberAccess	dbg -> maps		4120100	1					
ANR	4120358	Identifier	dbg		4120100	0					
ANR	4120359	Identifier	maps		4120100	1					
ANR	4120360	CompoundStatement		50:3:1087:1101	4120100	1					
ANR	4120361	IdentifierDeclStatement	RDebugMap * map ;	3669:3:93004:93018	4120100	0	True				
ANR	4120362	IdentifierDecl	* map		4120100	0					
ANR	4120363	IdentifierDeclType	RDebugMap *		4120100	0					
ANR	4120364	Identifier	map		4120100	1					
ANR	4120365	Statement	r_list_foreach	3670:3:93023:93036	4120100	1	True				
ANR	4120366	Statement	(	3670:18:93038:93038	4120100	2	True				
ANR	4120367	Statement	dbg	3670:19:93039:93041	4120100	3	True				
ANR	4120368	Statement	->	3670:22:93042:93043	4120100	4	True				
ANR	4120369	Statement	maps	3670:24:93044:93047	4120100	5	True				
ANR	4120370	Statement	","	3670:28:93048:93048	4120100	6	True				
ANR	4120371	Statement	iter	3670:30:93050:93053	4120100	7	True				
ANR	4120372	Statement	","	3670:34:93054:93054	4120100	8	True				
ANR	4120373	Statement	map	3670:36:93056:93058	4120100	9	True				
ANR	4120374	Statement	)	3670:39:93059:93059	4120100	10	True				
ANR	4120375	CompoundStatement		51:41:1144:1144	4120100	11					
ANR	4120376	ExpressionStatement	"r_core_seek ( core , map -> addr , 1 )"	3671:4:93067:93099	4120100	0	True				
ANR	4120377	CallExpression	"r_core_seek ( core , map -> addr , 1 )"		4120100	0					
ANR	4120378	Callee	r_core_seek		4120100	0					
ANR	4120379	Identifier	r_core_seek		4120100	0					
ANR	4120380	ArgumentList	core		4120100	1					
ANR	4120381	Argument	core		4120100	0					
ANR	4120382	Identifier	core		4120100	0					
ANR	4120383	Argument	map -> addr		4120100	1					
ANR	4120384	PtrMemberAccess	map -> addr		4120100	0					
ANR	4120385	Identifier	map		4120100	0					
ANR	4120386	Identifier	addr		4120100	1					
ANR	4120387	Argument	1		4120100	2					
ANR	4120388	PrimaryExpression	1		4120100	0					
ANR	4120389	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3673:4:93148:93171	4120100	1	True				
ANR	4120390	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4120391	Callee	r_core_cmd0		4120100	0					
ANR	4120392	Identifier	r_core_cmd0		4120100	0					
ANR	4120393	ArgumentList	core		4120100	1					
ANR	4120394	Argument	core		4120100	0					
ANR	4120395	Identifier	core		4120100	0					
ANR	4120396	Argument	cmd		4120100	1					
ANR	4120397	Identifier	cmd		4120100	0					
ANR	4120398	BreakStatement	break ;	3676:2:93184:93189	4120100	17	True				
ANR	4120399	Label	case 't' :	3677:1:93192:93200	4120100	18	True				
ANR	4120400	IfStatement	if ( dbg && dbg -> h && dbg -> h -> threads )		4120100	19					
ANR	4120401	Condition	dbg && dbg -> h && dbg -> h -> threads	3679:6:93238:93269	4120100	0	True				
ANR	4120402	AndExpression	dbg && dbg -> h && dbg -> h -> threads		4120100	0		&&			
ANR	4120403	Identifier	dbg		4120100	0					
ANR	4120404	AndExpression	dbg -> h && dbg -> h -> threads		4120100	1		&&			
ANR	4120405	PtrMemberAccess	dbg -> h		4120100	0					
ANR	4120406	Identifier	dbg		4120100	0					
ANR	4120407	Identifier	h		4120100	1					
ANR	4120408	PtrMemberAccess	dbg -> h -> threads		4120100	1					
ANR	4120409	PtrMemberAccess	dbg -> h		4120100	0					
ANR	4120410	Identifier	dbg		4120100	0					
ANR	4120411	Identifier	h		4120100	1					
ANR	4120412	Identifier	threads		4120100	1					
ANR	4120413	CompoundStatement		62:3:1387:1399	4120100	1					
ANR	4120414	IdentifierDeclStatement	int origpid = dbg -> pid ;	3680:3:93277:93299	4120100	0	True				
ANR	4120415	IdentifierDecl	origpid = dbg -> pid		4120100	0					
ANR	4120416	IdentifierDeclType	int		4120100	0					
ANR	4120417	Identifier	origpid		4120100	1					
ANR	4120418	AssignmentExpression	origpid = dbg -> pid		4120100	2		=			
ANR	4120419	Identifier	origpid		4120100	0					
ANR	4120420	PtrMemberAccess	dbg -> pid		4120100	1					
ANR	4120421	Identifier	dbg		4120100	0					
ANR	4120422	Identifier	pid		4120100	1					
ANR	4120423	IdentifierDeclStatement	RDebugPid * p ;	3681:3:93304:93316	4120100	1	True				
ANR	4120424	IdentifierDecl	* p		4120100	0					
ANR	4120425	IdentifierDeclType	RDebugPid *		4120100	0					
ANR	4120426	Identifier	p		4120100	1					
ANR	4120427	ExpressionStatement	"list = dbg -> h -> threads ( dbg , dbg -> pid )"	3682:3:93321:93359	4120100	2	True				
ANR	4120428	AssignmentExpression	"list = dbg -> h -> threads ( dbg , dbg -> pid )"		4120100	0		=			
ANR	4120429	Identifier	list		4120100	0					
ANR	4120430	CallExpression	"dbg -> h -> threads ( dbg , dbg -> pid )"		4120100	1					
ANR	4120431	Callee	dbg -> h -> threads		4120100	0					
ANR	4120432	PtrMemberAccess	dbg -> h -> threads		4120100	0					
ANR	4120433	PtrMemberAccess	dbg -> h		4120100	0					
ANR	4120434	Identifier	dbg		4120100	0					
ANR	4120435	Identifier	h		4120100	1					
ANR	4120436	Identifier	threads		4120100	1					
ANR	4120437	ArgumentList	dbg		4120100	1					
ANR	4120438	Argument	dbg		4120100	0					
ANR	4120439	Identifier	dbg		4120100	0					
ANR	4120440	Argument	dbg -> pid		4120100	1					
ANR	4120441	PtrMemberAccess	dbg -> pid		4120100	0					
ANR	4120442	Identifier	dbg		4120100	0					
ANR	4120443	Identifier	pid		4120100	1					
ANR	4120444	IfStatement	if ( ! list )		4120100	3					
ANR	4120445	Condition	! list	3683:7:93368:93372	4120100	0	True				
ANR	4120446	UnaryOperationExpression	! list		4120100	0					
ANR	4120447	UnaryOperator	!		4120100	0					
ANR	4120448	Identifier	list		4120100	1					
ANR	4120449	CompoundStatement		64:14:1458:1458	4120100	1					
ANR	4120450	ReturnStatement	return false ;	3684:4:93381:93393	4120100	0	True				
ANR	4120451	Identifier	false		4120100	0					
ANR	4120452	Statement	r_list_foreach	3686:3:93403:93416	4120100	4	True				
ANR	4120453	Statement	(	3686:18:93418:93418	4120100	5	True				
ANR	4120454	Statement	list	3686:19:93419:93422	4120100	6	True				
ANR	4120455	Statement	","	3686:23:93423:93423	4120100	7	True				
ANR	4120456	Statement	iter	3686:25:93425:93428	4120100	8	True				
ANR	4120457	Statement	","	3686:29:93429:93429	4120100	9	True				
ANR	4120458	Statement	p	3686:31:93431:93431	4120100	10	True				
ANR	4120459	Statement	)	3686:32:93432:93432	4120100	11	True				
ANR	4120460	CompoundStatement		67:34:1517:1517	4120100	12					
ANR	4120461	ExpressionStatement	"r_core_cmdf ( core , ""dp %d"" , p -> pid )"	3687:4:93440:93475	4120100	0	True				
ANR	4120462	CallExpression	"r_core_cmdf ( core , ""dp %d"" , p -> pid )"		4120100	0					
ANR	4120463	Callee	r_core_cmdf		4120100	0					
ANR	4120464	Identifier	r_core_cmdf		4120100	0					
ANR	4120465	ArgumentList	core		4120100	1					
ANR	4120466	Argument	core		4120100	0					
ANR	4120467	Identifier	core		4120100	0					
ANR	4120468	Argument	"""dp %d"""		4120100	1					
ANR	4120469	PrimaryExpression	"""dp %d"""		4120100	0					
ANR	4120470	Argument	p -> pid		4120100	2					
ANR	4120471	PtrMemberAccess	p -> pid		4120100	0					
ANR	4120472	Identifier	p		4120100	0					
ANR	4120473	Identifier	pid		4120100	1					
ANR	4120474	ExpressionStatement	"r_cons_printf ( ""PID %d\\n"" , p -> pid )"	3688:4:93481:93515	4120100	1	True				
ANR	4120475	CallExpression	"r_cons_printf ( ""PID %d\\n"" , p -> pid )"		4120100	0					
ANR	4120476	Callee	r_cons_printf		4120100	0					
ANR	4120477	Identifier	r_cons_printf		4120100	0					
ANR	4120478	ArgumentList	"""PID %d\\n"""		4120100	1					
ANR	4120479	Argument	"""PID %d\\n"""		4120100	0					
ANR	4120480	PrimaryExpression	"""PID %d\\n"""		4120100	0					
ANR	4120481	Argument	p -> pid		4120100	1					
ANR	4120482	PtrMemberAccess	p -> pid		4120100	0					
ANR	4120483	Identifier	p		4120100	0					
ANR	4120484	Identifier	pid		4120100	1					
ANR	4120485	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3689:4:93521:93544	4120100	2	True				
ANR	4120486	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4120487	Callee	r_core_cmd0		4120100	0					
ANR	4120488	Identifier	r_core_cmd0		4120100	0					
ANR	4120489	ArgumentList	core		4120100	1					
ANR	4120490	Argument	core		4120100	0					
ANR	4120491	Identifier	core		4120100	0					
ANR	4120492	Argument	cmd		4120100	1					
ANR	4120493	Identifier	cmd		4120100	0					
ANR	4120494	ExpressionStatement	"r_core_cmdf ( core , ""dp %d"" , origpid )"	3691:3:93554:93590	4120100	13	True				
ANR	4120495	CallExpression	"r_core_cmdf ( core , ""dp %d"" , origpid )"		4120100	0					
ANR	4120496	Callee	r_core_cmdf		4120100	0					
ANR	4120497	Identifier	r_core_cmdf		4120100	0					
ANR	4120498	ArgumentList	core		4120100	1					
ANR	4120499	Argument	core		4120100	0					
ANR	4120500	Identifier	core		4120100	0					
ANR	4120501	Argument	"""dp %d"""		4120100	1					
ANR	4120502	PrimaryExpression	"""dp %d"""		4120100	0					
ANR	4120503	Argument	origpid		4120100	2					
ANR	4120504	Identifier	origpid		4120100	0					
ANR	4120505	ExpressionStatement	r_list_free ( list )	3692:3:93595:93613	4120100	14	True				
ANR	4120506	CallExpression	r_list_free ( list )		4120100	0					
ANR	4120507	Callee	r_list_free		4120100	0					
ANR	4120508	Identifier	r_list_free		4120100	0					
ANR	4120509	ArgumentList	list		4120100	1					
ANR	4120510	Argument	list		4120100	0					
ANR	4120511	Identifier	list		4120100	0					
ANR	4120512	BreakStatement	break ;	3694:2:93621:93626	4120100	20	True				
ANR	4120513	Label	case 'r' :	3695:1:93629:93637	4120100	21	True				
ANR	4120514	CompoundStatement		79:3:1744:1771	4120100	22					
ANR	4120515	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3698:3:93661:93688	4120100	0	True				
ANR	4120516	IdentifierDecl	offorig = core -> offset		4120100	0					
ANR	4120517	IdentifierDeclType	ut64		4120100	0					
ANR	4120518	Identifier	offorig		4120100	1					
ANR	4120519	AssignmentExpression	offorig = core -> offset		4120100	2		=			
ANR	4120520	Identifier	offorig		4120100	0					
ANR	4120521	PtrMemberAccess	core -> offset		4120100	1					
ANR	4120522	Identifier	core		4120100	0					
ANR	4120523	Identifier	offset		4120100	1					
ANR	4120524	ForStatement	for ( i = 0 ; i < 128 ; i ++ )		4120100	1					
ANR	4120525	ForInit	i = 0 ;	3699:8:93698:93703	4120100	0	True				
ANR	4120526	AssignmentExpression	i = 0		4120100	0		=			
ANR	4120527	Identifier	i		4120100	0					
ANR	4120528	PrimaryExpression	0		4120100	1					
ANR	4120529	Condition	i < 128	3699:15:93705:93711	4120100	1	True				
ANR	4120530	RelationalExpression	i < 128		4120100	0		<			
ANR	4120531	Identifier	i		4120100	0					
ANR	4120532	PrimaryExpression	128		4120100	1					
ANR	4120533	PostIncDecOperationExpression	i ++	3699:24:93714:93716	4120100	2	True				
ANR	4120534	Identifier	i		4120100	0					
ANR	4120535	IncDec	++		4120100	1					
ANR	4120536	CompoundStatement		82:4:1828:1838	4120100	3					
ANR	4120537	IdentifierDeclStatement	RRegItem * item ;	3700:4:93725:93739	4120100	0	True				
ANR	4120538	IdentifierDecl	* item		4120100	0					
ANR	4120539	IdentifierDeclType	RRegItem *		4120100	0					
ANR	4120540	Identifier	item		4120100	1					
ANR	4120541	IdentifierDeclStatement	ut64 value ;	3701:4:93745:93755	4120100	1	True				
ANR	4120542	IdentifierDecl	value		4120100	0					
ANR	4120543	IdentifierDeclType	ut64		4120100	0					
ANR	4120544	Identifier	value		4120100	1					
ANR	4120545	ExpressionStatement	"head = r_reg_get_list ( dbg -> reg , i )"	3702:4:93761:93796	4120100	2	True				
ANR	4120546	AssignmentExpression	"head = r_reg_get_list ( dbg -> reg , i )"		4120100	0		=			
ANR	4120547	Identifier	head		4120100	0					
ANR	4120548	CallExpression	"r_reg_get_list ( dbg -> reg , i )"		4120100	1					
ANR	4120549	Callee	r_reg_get_list		4120100	0					
ANR	4120550	Identifier	r_reg_get_list		4120100	0					
ANR	4120551	ArgumentList	dbg -> reg		4120100	1					
ANR	4120552	Argument	dbg -> reg		4120100	0					
ANR	4120553	PtrMemberAccess	dbg -> reg		4120100	0					
ANR	4120554	Identifier	dbg		4120100	0					
ANR	4120555	Identifier	reg		4120100	1					
ANR	4120556	Argument	i		4120100	1					
ANR	4120557	Identifier	i		4120100	0					
ANR	4120558	IfStatement	if ( ! head )		4120100	3					
ANR	4120559	Condition	! head	3703:8:93806:93810	4120100	0	True				
ANR	4120560	UnaryOperationExpression	! head		4120100	0					
ANR	4120561	UnaryOperator	!		4120100	0					
ANR	4120562	Identifier	head		4120100	1					
ANR	4120563	CompoundStatement		84:15:1896:1896	4120100	1					
ANR	4120564	ContinueStatement	continue ;	3704:5:93820:93828	4120100	0	True				
ANR	4120565	Statement	r_list_foreach	3706:4:93840:93853	4120100	4	True				
ANR	4120566	Statement	(	3706:19:93855:93855	4120100	5	True				
ANR	4120567	Statement	head	3706:20:93856:93859	4120100	6	True				
ANR	4120568	Statement	","	3706:24:93860:93860	4120100	7	True				
ANR	4120569	Statement	iter	3706:26:93862:93865	4120100	8	True				
ANR	4120570	Statement	","	3706:30:93866:93866	4120100	9	True				
ANR	4120571	Statement	item	3706:32:93868:93871	4120100	10	True				
ANR	4120572	Statement	)	3706:36:93872:93872	4120100	11	True				
ANR	4120573	CompoundStatement		87:38:1957:1957	4120100	12					
ANR	4120574	IfStatement	if ( item -> size != core -> anal -> bits )		4120100	0					
ANR	4120575	Condition	item -> size != core -> anal -> bits	3707:9:93885:93914	4120100	0	True				
ANR	4120576	EqualityExpression	item -> size != core -> anal -> bits		4120100	0		!=			
ANR	4120577	PtrMemberAccess	item -> size		4120100	0					
ANR	4120578	Identifier	item		4120100	0					
ANR	4120579	Identifier	size		4120100	1					
ANR	4120580	PtrMemberAccess	core -> anal -> bits		4120100	1					
ANR	4120581	PtrMemberAccess	core -> anal		4120100	0					
ANR	4120582	Identifier	core		4120100	0					
ANR	4120583	Identifier	anal		4120100	1					
ANR	4120584	Identifier	bits		4120100	1					
ANR	4120585	CompoundStatement		88:41:2000:2000	4120100	1					
ANR	4120586	ContinueStatement	continue ;	3708:6:93925:93933	4120100	0	True				
ANR	4120587	ExpressionStatement	"value = r_reg_get_value ( dbg -> reg , item )"	3710:5:93947:93987	4120100	1	True				
ANR	4120588	AssignmentExpression	"value = r_reg_get_value ( dbg -> reg , item )"		4120100	0		=			
ANR	4120589	Identifier	value		4120100	0					
ANR	4120590	CallExpression	"r_reg_get_value ( dbg -> reg , item )"		4120100	1					
ANR	4120591	Callee	r_reg_get_value		4120100	0					
ANR	4120592	Identifier	r_reg_get_value		4120100	0					
ANR	4120593	ArgumentList	dbg -> reg		4120100	1					
ANR	4120594	Argument	dbg -> reg		4120100	0					
ANR	4120595	PtrMemberAccess	dbg -> reg		4120100	0					
ANR	4120596	Identifier	dbg		4120100	0					
ANR	4120597	Identifier	reg		4120100	1					
ANR	4120598	Argument	item		4120100	1					
ANR	4120599	Identifier	item		4120100	0					
ANR	4120600	ExpressionStatement	"r_core_seek ( core , value , 1 )"	3711:5:93994:94022	4120100	2	True				
ANR	4120601	CallExpression	"r_core_seek ( core , value , 1 )"		4120100	0					
ANR	4120602	Callee	r_core_seek		4120100	0					
ANR	4120603	Identifier	r_core_seek		4120100	0					
ANR	4120604	ArgumentList	core		4120100	1					
ANR	4120605	Argument	core		4120100	0					
ANR	4120606	Identifier	core		4120100	0					
ANR	4120607	Argument	value		4120100	1					
ANR	4120608	Identifier	value		4120100	0					
ANR	4120609	Argument	1		4120100	2					
ANR	4120610	PrimaryExpression	1		4120100	0					
ANR	4120611	ExpressionStatement	"r_cons_printf ( ""%s: "" , item -> name )"	3712:5:94029:94063	4120100	3	True				
ANR	4120612	CallExpression	"r_cons_printf ( ""%s: "" , item -> name )"		4120100	0					
ANR	4120613	Callee	r_cons_printf		4120100	0					
ANR	4120614	Identifier	r_cons_printf		4120100	0					
ANR	4120615	ArgumentList	"""%s: """		4120100	1					
ANR	4120616	Argument	"""%s: """		4120100	0					
ANR	4120617	PrimaryExpression	"""%s: """		4120100	0					
ANR	4120618	Argument	item -> name		4120100	1					
ANR	4120619	PtrMemberAccess	item -> name		4120100	0					
ANR	4120620	Identifier	item		4120100	0					
ANR	4120621	Identifier	name		4120100	1					
ANR	4120622	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3713:5:94070:94093	4120100	4	True				
ANR	4120623	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4120624	Callee	r_core_cmd0		4120100	0					
ANR	4120625	Identifier	r_core_cmd0		4120100	0					
ANR	4120626	ArgumentList	core		4120100	1					
ANR	4120627	Argument	core		4120100	0					
ANR	4120628	Identifier	core		4120100	0					
ANR	4120629	Argument	cmd		4120100	1					
ANR	4120630	Identifier	cmd		4120100	0					
ANR	4120631	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3716:3:94109:94139	4120100	2	True				
ANR	4120632	CallExpression	"r_core_seek ( core , offorig , 1 )"		4120100	0					
ANR	4120633	Callee	r_core_seek		4120100	0					
ANR	4120634	Identifier	r_core_seek		4120100	0					
ANR	4120635	ArgumentList	core		4120100	1					
ANR	4120636	Argument	core		4120100	0					
ANR	4120637	Identifier	core		4120100	0					
ANR	4120638	Argument	offorig		4120100	1					
ANR	4120639	Identifier	offorig		4120100	0					
ANR	4120640	Argument	1		4120100	2					
ANR	4120641	PrimaryExpression	1		4120100	0					
ANR	4120642	BreakStatement	break ;	3718:2:94147:94152	4120100	23	True				
ANR	4120643	Label	case 'i' :	3719:1:94155:94163	4120100	24	True				
ANR	4120644	CompoundStatement		104:3:2296:2323	4120100	25					
ANR	4120645	IdentifierDeclStatement	RBinImport * imp ;	3722:3:94193:94208	4120100	0	True				
ANR	4120646	IdentifierDecl	* imp		4120100	0					
ANR	4120647	IdentifierDeclType	RBinImport *		4120100	0					
ANR	4120648	Identifier	imp		4120100	1					
ANR	4120649	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3723:3:94213:94240	4120100	1	True				
ANR	4120650	IdentifierDecl	offorig = core -> offset		4120100	0					
ANR	4120651	IdentifierDeclType	ut64		4120100	0					
ANR	4120652	Identifier	offorig		4120100	1					
ANR	4120653	AssignmentExpression	offorig = core -> offset		4120100	2		=			
ANR	4120654	Identifier	offorig		4120100	0					
ANR	4120655	PtrMemberAccess	core -> offset		4120100	1					
ANR	4120656	Identifier	core		4120100	0					
ANR	4120657	Identifier	offset		4120100	1					
ANR	4120658	ExpressionStatement	list = r_bin_get_imports ( core -> bin )	3724:3:94245:94281	4120100	2	True				
ANR	4120659	AssignmentExpression	list = r_bin_get_imports ( core -> bin )		4120100	0		=			
ANR	4120660	Identifier	list		4120100	0					
ANR	4120661	CallExpression	r_bin_get_imports ( core -> bin )		4120100	1					
ANR	4120662	Callee	r_bin_get_imports		4120100	0					
ANR	4120663	Identifier	r_bin_get_imports		4120100	0					
ANR	4120664	ArgumentList	core -> bin		4120100	1					
ANR	4120665	Argument	core -> bin		4120100	0					
ANR	4120666	PtrMemberAccess	core -> bin		4120100	0					
ANR	4120667	Identifier	core		4120100	0					
ANR	4120668	Identifier	bin		4120100	1					
ANR	4120669	Statement	r_list_foreach	3725:3:94286:94299	4120100	3	True				
ANR	4120670	Statement	(	3725:18:94301:94301	4120100	4	True				
ANR	4120671	Statement	list	3725:19:94302:94305	4120100	5	True				
ANR	4120672	Statement	","	3725:23:94306:94306	4120100	6	True				
ANR	4120673	Statement	iter	3725:25:94308:94311	4120100	7	True				
ANR	4120674	Statement	","	3725:29:94312:94312	4120100	8	True				
ANR	4120675	Statement	imp	3725:31:94314:94316	4120100	9	True				
ANR	4120676	Statement	)	3725:34:94317:94317	4120100	10	True				
ANR	4120677	CompoundStatement		108:4:2466:2509	4120100	11					
ANR	4120678	IdentifierDeclStatement	"char * impflag = r_str_newf ( ""sym.imp.%s"" , imp -> name ) ;"	3726:4:94325:94377	4120100	0	True				
ANR	4120679	IdentifierDecl	"* impflag = r_str_newf ( ""sym.imp.%s"" , imp -> name )"		4120100	0					
ANR	4120680	IdentifierDeclType	char *		4120100	0					
ANR	4120681	Identifier	impflag		4120100	1					
ANR	4120682	AssignmentExpression	"* impflag = r_str_newf ( ""sym.imp.%s"" , imp -> name )"		4120100	2		=			
ANR	4120683	Identifier	impflag		4120100	0					
ANR	4120684	CallExpression	"r_str_newf ( ""sym.imp.%s"" , imp -> name )"		4120100	1					
ANR	4120685	Callee	r_str_newf		4120100	0					
ANR	4120686	Identifier	r_str_newf		4120100	0					
ANR	4120687	ArgumentList	"""sym.imp.%s"""		4120100	1					
ANR	4120688	Argument	"""sym.imp.%s"""		4120100	0					
ANR	4120689	PrimaryExpression	"""sym.imp.%s"""		4120100	0					
ANR	4120690	Argument	imp -> name		4120100	1					
ANR	4120691	PtrMemberAccess	imp -> name		4120100	0					
ANR	4120692	Identifier	imp		4120100	0					
ANR	4120693	Identifier	name		4120100	1					
ANR	4120694	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , impflag ) ;"	3727:4:94383:94426	4120100	1	True				
ANR	4120695	IdentifierDecl	"addr = r_num_math ( core -> num , impflag )"		4120100	0					
ANR	4120696	IdentifierDeclType	ut64		4120100	0					
ANR	4120697	Identifier	addr		4120100	1					
ANR	4120698	AssignmentExpression	"addr = r_num_math ( core -> num , impflag )"		4120100	2		=			
ANR	4120699	Identifier	addr		4120100	0					
ANR	4120700	CallExpression	"r_num_math ( core -> num , impflag )"		4120100	1					
ANR	4120701	Callee	r_num_math		4120100	0					
ANR	4120702	Identifier	r_num_math		4120100	0					
ANR	4120703	ArgumentList	core -> num		4120100	1					
ANR	4120704	Argument	core -> num		4120100	0					
ANR	4120705	PtrMemberAccess	core -> num		4120100	0					
ANR	4120706	Identifier	core		4120100	0					
ANR	4120707	Identifier	num		4120100	1					
ANR	4120708	Argument	impflag		4120100	1					
ANR	4120709	Identifier	impflag		4120100	0					
ANR	4120710	ExpressionStatement	free ( impflag )	3728:4:94432:94446	4120100	2	True				
ANR	4120711	CallExpression	free ( impflag )		4120100	0					
ANR	4120712	Callee	free		4120100	0					
ANR	4120713	Identifier	free		4120100	0					
ANR	4120714	ArgumentList	impflag		4120100	1					
ANR	4120715	Argument	impflag		4120100	0					
ANR	4120716	Identifier	impflag		4120100	0					
ANR	4120717	IfStatement	if ( addr && addr != UT64_MAX )		4120100	3					
ANR	4120718	Condition	addr && addr != UT64_MAX	3729:8:94456:94479	4120100	0	True				
ANR	4120719	AndExpression	addr && addr != UT64_MAX		4120100	0		&&			
ANR	4120720	Identifier	addr		4120100	0					
ANR	4120721	EqualityExpression	addr != UT64_MAX		4120100	1		!=			
ANR	4120722	Identifier	addr		4120100	0					
ANR	4120723	Identifier	UT64_MAX		4120100	1					
ANR	4120724	CompoundStatement		110:34:2565:2565	4120100	1					
ANR	4120725	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3730:5:94489:94516	4120100	0	True				
ANR	4120726	CallExpression	"r_core_seek ( core , addr , 1 )"		4120100	0					
ANR	4120727	Callee	r_core_seek		4120100	0					
ANR	4120728	Identifier	r_core_seek		4120100	0					
ANR	4120729	ArgumentList	core		4120100	1					
ANR	4120730	Argument	core		4120100	0					
ANR	4120731	Identifier	core		4120100	0					
ANR	4120732	Argument	addr		4120100	1					
ANR	4120733	Identifier	addr		4120100	0					
ANR	4120734	Argument	1		4120100	2					
ANR	4120735	PrimaryExpression	1		4120100	0					
ANR	4120736	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3731:5:94523:94546	4120100	1	True				
ANR	4120737	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4120738	Callee	r_core_cmd0		4120100	0					
ANR	4120739	Identifier	r_core_cmd0		4120100	0					
ANR	4120740	ArgumentList	core		4120100	1					
ANR	4120741	Argument	core		4120100	0					
ANR	4120742	Identifier	core		4120100	0					
ANR	4120743	Argument	cmd		4120100	1					
ANR	4120744	Identifier	cmd		4120100	0					
ANR	4120745	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3734:3:94562:94592	4120100	12	True				
ANR	4120746	CallExpression	"r_core_seek ( core , offorig , 1 )"		4120100	0					
ANR	4120747	Callee	r_core_seek		4120100	0					
ANR	4120748	Identifier	r_core_seek		4120100	0					
ANR	4120749	ArgumentList	core		4120100	1					
ANR	4120750	Argument	core		4120100	0					
ANR	4120751	Identifier	core		4120100	0					
ANR	4120752	Argument	offorig		4120100	1					
ANR	4120753	Identifier	offorig		4120100	0					
ANR	4120754	Argument	1		4120100	2					
ANR	4120755	PrimaryExpression	1		4120100	0					
ANR	4120756	BreakStatement	break ;	3736:2:94600:94605	4120100	26	True				
ANR	4120757	Label	case 'S' :	3737:1:94608:94616	4120100	27	True				
ANR	4120758	CompoundStatement		120:3:2718:2764	4120100	28					
ANR	4120759	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	3739:3:94635:94681	4120100	0	True				
ANR	4120760	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		4120100	0					
ANR	4120761	IdentifierDeclType	RBinObject *		4120100	0					
ANR	4120762	Identifier	obj		4120100	1					
ANR	4120763	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		4120100	2		=			
ANR	4120764	Identifier	obj		4120100	0					
ANR	4120765	CallExpression	r_bin_cur_object ( core -> bin )		4120100	1					
ANR	4120766	Callee	r_bin_cur_object		4120100	0					
ANR	4120767	Identifier	r_bin_cur_object		4120100	0					
ANR	4120768	ArgumentList	core -> bin		4120100	1					
ANR	4120769	Argument	core -> bin		4120100	0					
ANR	4120770	PtrMemberAccess	core -> bin		4120100	0					
ANR	4120771	Identifier	core		4120100	0					
ANR	4120772	Identifier	bin		4120100	1					
ANR	4120773	IfStatement	if ( obj )		4120100	1					
ANR	4120774	Condition	obj	3740:7:94690:94692	4120100	0	True				
ANR	4120775	Identifier	obj		4120100	0					
ANR	4120776	CompoundStatement		125:4:2875:2890	4120100	1					
ANR	4120777	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3741:4:94701:94728	4120100	0	True				
ANR	4120778	IdentifierDecl	offorig = core -> offset		4120100	0					
ANR	4120779	IdentifierDeclType	ut64		4120100	0					
ANR	4120780	Identifier	offorig		4120100	1					
ANR	4120781	AssignmentExpression	offorig = core -> offset		4120100	2		=			
ANR	4120782	Identifier	offorig		4120100	0					
ANR	4120783	PtrMemberAccess	core -> offset		4120100	1					
ANR	4120784	Identifier	core		4120100	0					
ANR	4120785	Identifier	offset		4120100	1					
ANR	4120786	IdentifierDeclStatement	ut64 bszorig = core -> blocksize ;	3742:4:94734:94764	4120100	1	True				
ANR	4120787	IdentifierDecl	bszorig = core -> blocksize		4120100	0					
ANR	4120788	IdentifierDeclType	ut64		4120100	0					
ANR	4120789	Identifier	bszorig		4120100	1					
ANR	4120790	AssignmentExpression	bszorig = core -> blocksize		4120100	2		=			
ANR	4120791	Identifier	bszorig		4120100	0					
ANR	4120792	PtrMemberAccess	core -> blocksize		4120100	1					
ANR	4120793	Identifier	core		4120100	0					
ANR	4120794	Identifier	blocksize		4120100	1					
ANR	4120795	IdentifierDeclStatement	RBinSection * sec ;	3743:4:94770:94786	4120100	2	True				
ANR	4120796	IdentifierDecl	* sec		4120100	0					
ANR	4120797	IdentifierDeclType	RBinSection *		4120100	0					
ANR	4120798	Identifier	sec		4120100	1					
ANR	4120799	IdentifierDeclStatement	RListIter * iter ;	3744:4:94792:94807	4120100	3	True				
ANR	4120800	IdentifierDecl	* iter		4120100	0					
ANR	4120801	IdentifierDeclType	RListIter *		4120100	0					
ANR	4120802	Identifier	iter		4120100	1					
ANR	4120803	Statement	r_list_foreach	3745:4:94813:94826	4120100	4	True				
ANR	4120804	Statement	(	3745:19:94828:94828	4120100	5	True				
ANR	4120805	Statement	obj	3745:20:94829:94831	4120100	6	True				
ANR	4120806	Statement	->	3745:23:94832:94833	4120100	7	True				
ANR	4120807	Statement	sections	3745:25:94834:94841	4120100	8	True				
ANR	4120808	Statement	","	3745:33:94842:94842	4120100	9	True				
ANR	4120809	Statement	iter	3745:35:94844:94847	4120100	10	True				
ANR	4120810	Statement	","	3745:39:94848:94848	4120100	11	True				
ANR	4120811	Statement	sec	3745:41:94850:94852	4120100	12	True				
ANR	4120812	Statement	)	3745:44:94853:94853	4120100	13	True				
ANR	4120813	CompoundStatement		126:46:2938:2938	4120100	14					
ANR	4120814	ExpressionStatement	"r_core_seek ( core , sec -> vaddr , 1 )"	3746:5:94862:94895	4120100	0	True				
ANR	4120815	CallExpression	"r_core_seek ( core , sec -> vaddr , 1 )"		4120100	0					
ANR	4120816	Callee	r_core_seek		4120100	0					
ANR	4120817	Identifier	r_core_seek		4120100	0					
ANR	4120818	ArgumentList	core		4120100	1					
ANR	4120819	Argument	core		4120100	0					
ANR	4120820	Identifier	core		4120100	0					
ANR	4120821	Argument	sec -> vaddr		4120100	1					
ANR	4120822	PtrMemberAccess	sec -> vaddr		4120100	0					
ANR	4120823	Identifier	sec		4120100	0					
ANR	4120824	Identifier	vaddr		4120100	1					
ANR	4120825	Argument	1		4120100	2					
ANR	4120826	PrimaryExpression	1		4120100	0					
ANR	4120827	ExpressionStatement	"r_core_block_size ( core , sec -> vsize )"	3747:5:94902:94938	4120100	1	True				
ANR	4120828	CallExpression	"r_core_block_size ( core , sec -> vsize )"		4120100	0					
ANR	4120829	Callee	r_core_block_size		4120100	0					
ANR	4120830	Identifier	r_core_block_size		4120100	0					
ANR	4120831	ArgumentList	core		4120100	1					
ANR	4120832	Argument	core		4120100	0					
ANR	4120833	Identifier	core		4120100	0					
ANR	4120834	Argument	sec -> vsize		4120100	1					
ANR	4120835	PtrMemberAccess	sec -> vsize		4120100	0					
ANR	4120836	Identifier	sec		4120100	0					
ANR	4120837	Identifier	vsize		4120100	1					
ANR	4120838	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3748:5:94945:94968	4120100	2	True				
ANR	4120839	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4120840	Callee	r_core_cmd0		4120100	0					
ANR	4120841	Identifier	r_core_cmd0		4120100	0					
ANR	4120842	ArgumentList	core		4120100	1					
ANR	4120843	Argument	core		4120100	0					
ANR	4120844	Identifier	core		4120100	0					
ANR	4120845	Argument	cmd		4120100	1					
ANR	4120846	Identifier	cmd		4120100	0					
ANR	4120847	ExpressionStatement	"r_core_block_size ( core , bszorig )"	3750:4:94980:95013	4120100	15	True				
ANR	4120848	CallExpression	"r_core_block_size ( core , bszorig )"		4120100	0					
ANR	4120849	Callee	r_core_block_size		4120100	0					
ANR	4120850	Identifier	r_core_block_size		4120100	0					
ANR	4120851	ArgumentList	core		4120100	1					
ANR	4120852	Argument	core		4120100	0					
ANR	4120853	Identifier	core		4120100	0					
ANR	4120854	Argument	bszorig		4120100	1					
ANR	4120855	Identifier	bszorig		4120100	0					
ANR	4120856	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3751:4:95019:95049	4120100	16	True				
ANR	4120857	CallExpression	"r_core_seek ( core , offorig , 1 )"		4120100	0					
ANR	4120858	Callee	r_core_seek		4120100	0					
ANR	4120859	Identifier	r_core_seek		4120100	0					
ANR	4120860	ArgumentList	core		4120100	1					
ANR	4120861	Argument	core		4120100	0					
ANR	4120862	Identifier	core		4120100	0					
ANR	4120863	Argument	offorig		4120100	1					
ANR	4120864	Identifier	offorig		4120100	0					
ANR	4120865	Argument	1		4120100	2					
ANR	4120866	PrimaryExpression	1		4120100	0					
ANR	4120867	IfStatement	if ( each [ 1 ] == 'S' )		4120100	29					
ANR	4120868	Condition	each [ 1 ] == 'S'	3755:6:95076:95089	4120100	0	True				
ANR	4120869	EqualityExpression	each [ 1 ] == 'S'		4120100	0		==			
ANR	4120870	ArrayIndexing	each [ 1 ]		4120100	0					
ANR	4120871	Identifier	each		4120100	0					
ANR	4120872	PrimaryExpression	1		4120100	1					
ANR	4120873	PrimaryExpression	'S'		4120100	1					
ANR	4120874	CompoundStatement		140:3:3270:3296	4120100	1					
ANR	4120875	IdentifierDeclStatement	RListIter * it ;	3756:3:95097:95110	4120100	0	True				
ANR	4120876	IdentifierDecl	* it		4120100	0					
ANR	4120877	IdentifierDeclType	RListIter *		4120100	0					
ANR	4120878	Identifier	it		4120100	1					
ANR	4120879	IdentifierDeclStatement	RBinSection * sec ;	3757:3:95115:95131	4120100	1	True				
ANR	4120880	IdentifierDecl	* sec		4120100	0					
ANR	4120881	IdentifierDeclType	RBinSection *		4120100	0					
ANR	4120882	Identifier	sec		4120100	1					
ANR	4120883	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	3758:3:95136:95182	4120100	2	True				
ANR	4120884	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		4120100	0					
ANR	4120885	IdentifierDeclType	RBinObject *		4120100	0					
ANR	4120886	Identifier	obj		4120100	1					
ANR	4120887	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		4120100	2		=			
ANR	4120888	Identifier	obj		4120100	0					
ANR	4120889	CallExpression	r_bin_cur_object ( core -> bin )		4120100	1					
ANR	4120890	Callee	r_bin_cur_object		4120100	0					
ANR	4120891	Identifier	r_bin_cur_object		4120100	0					
ANR	4120892	ArgumentList	core -> bin		4120100	1					
ANR	4120893	Argument	core -> bin		4120100	0					
ANR	4120894	PtrMemberAccess	core -> bin		4120100	0					
ANR	4120895	Identifier	core		4120100	0					
ANR	4120896	Identifier	bin		4120100	1					
ANR	4120897	IdentifierDeclStatement	int cbsz = core -> blocksize ;	3759:3:95187:95213	4120100	3	True				
ANR	4120898	IdentifierDecl	cbsz = core -> blocksize		4120100	0					
ANR	4120899	IdentifierDeclType	int		4120100	0					
ANR	4120900	Identifier	cbsz		4120100	1					
ANR	4120901	AssignmentExpression	cbsz = core -> blocksize		4120100	2		=			
ANR	4120902	Identifier	cbsz		4120100	0					
ANR	4120903	PtrMemberAccess	core -> blocksize		4120100	1					
ANR	4120904	Identifier	core		4120100	0					
ANR	4120905	Identifier	blocksize		4120100	1					
ANR	4120906	Statement	r_list_foreach	3760:3:95218:95231	4120100	4	True				
ANR	4120907	Statement	(	3760:18:95233:95233	4120100	5	True				
ANR	4120908	Statement	obj	3760:19:95234:95236	4120100	6	True				
ANR	4120909	Statement	->	3760:22:95237:95238	4120100	7	True				
ANR	4120910	Statement	sections	3760:24:95239:95246	4120100	8	True				
ANR	4120911	Statement	","	3760:32:95247:95247	4120100	9	True				
ANR	4120912	Statement	it	3760:34:95249:95250	4120100	10	True				
ANR	4120913	Statement	","	3760:36:95251:95251	4120100	11	True				
ANR	4120914	Statement	sec	3760:38:95253:95255	4120100	12	True				
ANR	4120915	Statement	)	3760:41:95256:95256	4120100	13	True				
ANR	4120916	CompoundStatement		143:4:3374:3396	4120100	14					
ANR	4120917	IdentifierDeclStatement	ut64 addr = sec -> vaddr ;	3761:4:95263:95285	4120100	0	True				
ANR	4120918	IdentifierDecl	addr = sec -> vaddr		4120100	0					
ANR	4120919	IdentifierDeclType	ut64		4120100	0					
ANR	4120920	Identifier	addr		4120100	1					
ANR	4120921	AssignmentExpression	addr = sec -> vaddr		4120100	2		=			
ANR	4120922	Identifier	addr		4120100	0					
ANR	4120923	PtrMemberAccess	sec -> vaddr		4120100	1					
ANR	4120924	Identifier	sec		4120100	0					
ANR	4120925	Identifier	vaddr		4120100	1					
ANR	4120926	IdentifierDeclStatement	ut64 size = sec -> vsize ;	3762:4:95291:95313	4120100	1	True				
ANR	4120927	IdentifierDecl	size = sec -> vsize		4120100	0					
ANR	4120928	IdentifierDeclType	ut64		4120100	0					
ANR	4120929	Identifier	size		4120100	1					
ANR	4120930	AssignmentExpression	size = sec -> vsize		4120100	2		=			
ANR	4120931	Identifier	size		4120100	0					
ANR	4120932	PtrMemberAccess	sec -> vsize		4120100	1					
ANR	4120933	Identifier	sec		4120100	0					
ANR	4120934	Identifier	vsize		4120100	1					
ANR	4120935	ExpressionStatement	"r_core_seek_size ( core , addr , size )"	3767:4:95403:95438	4120100	2	True				
ANR	4120936	CallExpression	"r_core_seek_size ( core , addr , size )"		4120100	0					
ANR	4120937	Callee	r_core_seek_size		4120100	0					
ANR	4120938	Identifier	r_core_seek_size		4120100	0					
ANR	4120939	ArgumentList	core		4120100	1					
ANR	4120940	Argument	core		4120100	0					
ANR	4120941	Identifier	core		4120100	0					
ANR	4120942	Argument	addr		4120100	1					
ANR	4120943	Identifier	addr		4120100	0					
ANR	4120944	Argument	size		4120100	2					
ANR	4120945	Identifier	size		4120100	0					
ANR	4120946	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	3768:4:95444:95469	4120100	3	True				
ANR	4120947	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4120100	0					
ANR	4120948	Callee	r_core_cmd		4120100	0					
ANR	4120949	Identifier	r_core_cmd		4120100	0					
ANR	4120950	ArgumentList	core		4120100	1					
ANR	4120951	Argument	core		4120100	0					
ANR	4120952	Identifier	core		4120100	0					
ANR	4120953	Argument	cmd		4120100	1					
ANR	4120954	Identifier	cmd		4120100	0					
ANR	4120955	Argument	0		4120100	2					
ANR	4120956	PrimaryExpression	0		4120100	0					
ANR	4120957	ExpressionStatement	"r_core_block_size ( core , cbsz )"	3770:3:95479:95509	4120100	15	True				
ANR	4120958	CallExpression	"r_core_block_size ( core , cbsz )"		4120100	0					
ANR	4120959	Callee	r_core_block_size		4120100	0					
ANR	4120960	Identifier	r_core_block_size		4120100	0					
ANR	4120961	ArgumentList	core		4120100	1					
ANR	4120962	Argument	core		4120100	0					
ANR	4120963	Identifier	core		4120100	0					
ANR	4120964	Argument	cbsz		4120100	1					
ANR	4120965	Identifier	cbsz		4120100	0					
ANR	4120966	BreakStatement	break ;	3773:2:95524:95529	4120100	30	True				
ANR	4120967	Label	case 's' :	3774:1:95532:95540	4120100	31	True				
ANR	4120968	IfStatement	if ( each [ 1 ] == 't' )		4120100	32					
ANR	4120969	Condition	each [ 1 ] == 't'	3775:6:95548:95561	4120100	0	True				
ANR	4120970	EqualityExpression	each [ 1 ] == 't'		4120100	0		==			
ANR	4120971	ArrayIndexing	each [ 1 ]		4120100	0					
ANR	4120972	Identifier	each		4120100	0					
ANR	4120973	PrimaryExpression	1		4120100	1					
ANR	4120974	PrimaryExpression	't'		4120100	1					
ANR	4120975	CompoundStatement		158:3:3704:3717	4120100	1					
ANR	4120976	ExpressionStatement	list = r_bin_get_strings ( core -> bin )	3776:3:95580:95616	4120100	0	True				
ANR	4120977	AssignmentExpression	list = r_bin_get_strings ( core -> bin )		4120100	0		=			
ANR	4120978	Identifier	list		4120100	0					
ANR	4120979	CallExpression	r_bin_get_strings ( core -> bin )		4120100	1					
ANR	4120980	Callee	r_bin_get_strings		4120100	0					
ANR	4120981	Identifier	r_bin_get_strings		4120100	0					
ANR	4120982	ArgumentList	core -> bin		4120100	1					
ANR	4120983	Argument	core -> bin		4120100	0					
ANR	4120984	PtrMemberAccess	core -> bin		4120100	0					
ANR	4120985	Identifier	core		4120100	0					
ANR	4120986	Identifier	bin		4120100	1					
ANR	4120987	IdentifierDeclStatement	RBinString * s ;	3777:3:95621:95634	4120100	1	True				
ANR	4120988	IdentifierDecl	* s		4120100	0					
ANR	4120989	IdentifierDeclType	RBinString *		4120100	0					
ANR	4120990	Identifier	s		4120100	1					
ANR	4120991	IfStatement	if ( list )		4120100	2					
ANR	4120992	Condition	list	3778:7:95643:95646	4120100	0	True				
ANR	4120993	Identifier	list		4120100	0					
ANR	4120994	CompoundStatement		161:4:3771:3797	4120100	1					
ANR	4120995	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3779:4:95655:95682	4120100	0	True				
ANR	4120996	IdentifierDecl	offorig = core -> offset		4120100	0					
ANR	4120997	IdentifierDeclType	ut64		4120100	0					
ANR	4120998	Identifier	offorig		4120100	1					
ANR	4120999	AssignmentExpression	offorig = core -> offset		4120100	2		=			
ANR	4121000	Identifier	offorig		4120100	0					
ANR	4121001	PtrMemberAccess	core -> offset		4120100	1					
ANR	4121002	Identifier	core		4120100	0					
ANR	4121003	Identifier	offset		4120100	1					
ANR	4121004	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3780:4:95688:95714	4120100	1	True				
ANR	4121005	IdentifierDecl	obs = core -> blocksize		4120100	0					
ANR	4121006	IdentifierDeclType	ut64		4120100	0					
ANR	4121007	Identifier	obs		4120100	1					
ANR	4121008	AssignmentExpression	obs = core -> blocksize		4120100	2		=			
ANR	4121009	Identifier	obs		4120100	0					
ANR	4121010	PtrMemberAccess	core -> blocksize		4120100	1					
ANR	4121011	Identifier	core		4120100	0					
ANR	4121012	Identifier	blocksize		4120100	1					
ANR	4121013	Statement	r_list_foreach	3781:4:95720:95733	4120100	2	True				
ANR	4121014	Statement	(	3781:19:95735:95735	4120100	3	True				
ANR	4121015	Statement	list	3781:20:95736:95739	4120100	4	True				
ANR	4121016	Statement	","	3781:24:95740:95740	4120100	5	True				
ANR	4121017	Statement	iter	3781:26:95742:95745	4120100	6	True				
ANR	4121018	Statement	","	3781:30:95746:95746	4120100	7	True				
ANR	4121019	Statement	s	3781:32:95748:95748	4120100	8	True				
ANR	4121020	Statement	)	3781:33:95749:95749	4120100	9	True				
ANR	4121021	CompoundStatement		162:35:3834:3834	4120100	10					
ANR	4121022	ExpressionStatement	"r_core_block_size ( core , s -> size )"	3782:5:95758:95791	4120100	0	True				
ANR	4121023	CallExpression	"r_core_block_size ( core , s -> size )"		4120100	0					
ANR	4121024	Callee	r_core_block_size		4120100	0					
ANR	4121025	Identifier	r_core_block_size		4120100	0					
ANR	4121026	ArgumentList	core		4120100	1					
ANR	4121027	Argument	core		4120100	0					
ANR	4121028	Identifier	core		4120100	0					
ANR	4121029	Argument	s -> size		4120100	1					
ANR	4121030	PtrMemberAccess	s -> size		4120100	0					
ANR	4121031	Identifier	s		4120100	0					
ANR	4121032	Identifier	size		4120100	1					
ANR	4121033	ExpressionStatement	"r_core_seek ( core , s -> vaddr , 1 )"	3783:5:95798:95829	4120100	1	True				
ANR	4121034	CallExpression	"r_core_seek ( core , s -> vaddr , 1 )"		4120100	0					
ANR	4121035	Callee	r_core_seek		4120100	0					
ANR	4121036	Identifier	r_core_seek		4120100	0					
ANR	4121037	ArgumentList	core		4120100	1					
ANR	4121038	Argument	core		4120100	0					
ANR	4121039	Identifier	core		4120100	0					
ANR	4121040	Argument	s -> vaddr		4120100	1					
ANR	4121041	PtrMemberAccess	s -> vaddr		4120100	0					
ANR	4121042	Identifier	s		4120100	0					
ANR	4121043	Identifier	vaddr		4120100	1					
ANR	4121044	Argument	1		4120100	2					
ANR	4121045	PrimaryExpression	1		4120100	0					
ANR	4121046	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3784:5:95836:95859	4120100	2	True				
ANR	4121047	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4121048	Callee	r_core_cmd0		4120100	0					
ANR	4121049	Identifier	r_core_cmd0		4120100	0					
ANR	4121050	ArgumentList	core		4120100	1					
ANR	4121051	Argument	core		4120100	0					
ANR	4121052	Identifier	core		4120100	0					
ANR	4121053	Argument	cmd		4120100	1					
ANR	4121054	Identifier	cmd		4120100	0					
ANR	4121055	ExpressionStatement	"r_core_block_size ( core , obs )"	3786:4:95871:95900	4120100	11	True				
ANR	4121056	CallExpression	"r_core_block_size ( core , obs )"		4120100	0					
ANR	4121057	Callee	r_core_block_size		4120100	0					
ANR	4121058	Identifier	r_core_block_size		4120100	0					
ANR	4121059	ArgumentList	core		4120100	1					
ANR	4121060	Argument	core		4120100	0					
ANR	4121061	Identifier	core		4120100	0					
ANR	4121062	Argument	obs		4120100	1					
ANR	4121063	Identifier	obs		4120100	0					
ANR	4121064	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3787:4:95906:95936	4120100	12	True				
ANR	4121065	CallExpression	"r_core_seek ( core , offorig , 1 )"		4120100	0					
ANR	4121066	Callee	r_core_seek		4120100	0					
ANR	4121067	Identifier	r_core_seek		4120100	0					
ANR	4121068	ArgumentList	core		4120100	1					
ANR	4121069	Argument	core		4120100	0					
ANR	4121070	Identifier	core		4120100	0					
ANR	4121071	Argument	offorig		4120100	1					
ANR	4121072	Identifier	offorig		4120100	0					
ANR	4121073	Argument	1		4120100	2					
ANR	4121074	PrimaryExpression	1		4120100	0					
ANR	4121075	ElseStatement	else		4120100	0					
ANR	4121076	CompoundStatement		174:3:4106:4132	4120100	0					
ANR	4121077	IdentifierDeclStatement	RBinSymbol * sym ;	3791:3:95971:95986	4120100	0	True				
ANR	4121078	IdentifierDecl	* sym		4120100	0					
ANR	4121079	IdentifierDeclType	RBinSymbol *		4120100	0					
ANR	4121080	Identifier	sym		4120100	1					
ANR	4121081	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3792:3:95991:96018	4120100	1	True				
ANR	4121082	IdentifierDecl	offorig = core -> offset		4120100	0					
ANR	4121083	IdentifierDeclType	ut64		4120100	0					
ANR	4121084	Identifier	offorig		4120100	1					
ANR	4121085	AssignmentExpression	offorig = core -> offset		4120100	2		=			
ANR	4121086	Identifier	offorig		4120100	0					
ANR	4121087	PtrMemberAccess	core -> offset		4120100	1					
ANR	4121088	Identifier	core		4120100	0					
ANR	4121089	Identifier	offset		4120100	1					
ANR	4121090	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3793:3:96023:96049	4120100	2	True				
ANR	4121091	IdentifierDecl	obs = core -> blocksize		4120100	0					
ANR	4121092	IdentifierDeclType	ut64		4120100	0					
ANR	4121093	Identifier	obs		4120100	1					
ANR	4121094	AssignmentExpression	obs = core -> blocksize		4120100	2		=			
ANR	4121095	Identifier	obs		4120100	0					
ANR	4121096	PtrMemberAccess	core -> blocksize		4120100	1					
ANR	4121097	Identifier	core		4120100	0					
ANR	4121098	Identifier	blocksize		4120100	1					
ANR	4121099	ExpressionStatement	list = r_bin_get_symbols ( core -> bin )	3794:3:96054:96090	4120100	3	True				
ANR	4121100	AssignmentExpression	list = r_bin_get_symbols ( core -> bin )		4120100	0		=			
ANR	4121101	Identifier	list		4120100	0					
ANR	4121102	CallExpression	r_bin_get_symbols ( core -> bin )		4120100	1					
ANR	4121103	Callee	r_bin_get_symbols		4120100	0					
ANR	4121104	Identifier	r_bin_get_symbols		4120100	0					
ANR	4121105	ArgumentList	core -> bin		4120100	1					
ANR	4121106	Argument	core -> bin		4120100	0					
ANR	4121107	PtrMemberAccess	core -> bin		4120100	0					
ANR	4121108	Identifier	core		4120100	0					
ANR	4121109	Identifier	bin		4120100	1					
ANR	4121110	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3795:3:96095:96125	4120100	4	True				
ANR	4121111	CallExpression	"r_cons_break_push ( NULL , NULL )"		4120100	0					
ANR	4121112	Callee	r_cons_break_push		4120100	0					
ANR	4121113	Identifier	r_cons_break_push		4120100	0					
ANR	4121114	ArgumentList	NULL		4120100	1					
ANR	4121115	Argument	NULL		4120100	0					
ANR	4121116	Identifier	NULL		4120100	0					
ANR	4121117	Argument	NULL		4120100	1					
ANR	4121118	Identifier	NULL		4120100	0					
ANR	4121119	Statement	r_list_foreach	3796:3:96130:96143	4120100	5	True				
ANR	4121120	Statement	(	3796:18:96145:96145	4120100	6	True				
ANR	4121121	Statement	list	3796:19:96146:96149	4120100	7	True				
ANR	4121122	Statement	","	3796:23:96150:96150	4120100	8	True				
ANR	4121123	Statement	iter	3796:25:96152:96155	4120100	9	True				
ANR	4121124	Statement	","	3796:29:96156:96156	4120100	10	True				
ANR	4121125	Statement	sym	3796:31:96158:96160	4120100	11	True				
ANR	4121126	Statement	)	3796:34:96161:96161	4120100	12	True				
ANR	4121127	CompoundStatement		177:36:4246:4246	4120100	13					
ANR	4121128	IfStatement	if ( r_cons_is_breaked ( ) )		4120100	0					
ANR	4121129	Condition	r_cons_is_breaked ( )	3797:8:96173:96192	4120100	0	True				
ANR	4121130	CallExpression	r_cons_is_breaked ( )		4120100	0					
ANR	4121131	Callee	r_cons_is_breaked		4120100	0					
ANR	4121132	Identifier	r_cons_is_breaked		4120100	0					
ANR	4121133	ArgumentList			4120100	1					
ANR	4121134	CompoundStatement		178:30:4278:4278	4120100	1					
ANR	4121135	BreakStatement	break ;	3798:5:96202:96207	4120100	0	True				
ANR	4121136	ExpressionStatement	"r_core_block_size ( core , sym -> size )"	3800:4:96219:96254	4120100	1	True				
ANR	4121137	CallExpression	"r_core_block_size ( core , sym -> size )"		4120100	0					
ANR	4121138	Callee	r_core_block_size		4120100	0					
ANR	4121139	Identifier	r_core_block_size		4120100	0					
ANR	4121140	ArgumentList	core		4120100	1					
ANR	4121141	Argument	core		4120100	0					
ANR	4121142	Identifier	core		4120100	0					
ANR	4121143	Argument	sym -> size		4120100	1					
ANR	4121144	PtrMemberAccess	sym -> size		4120100	0					
ANR	4121145	Identifier	sym		4120100	0					
ANR	4121146	Identifier	size		4120100	1					
ANR	4121147	ExpressionStatement	"r_core_seek ( core , sym -> vaddr , 1 )"	3801:4:96260:96293	4120100	2	True				
ANR	4121148	CallExpression	"r_core_seek ( core , sym -> vaddr , 1 )"		4120100	0					
ANR	4121149	Callee	r_core_seek		4120100	0					
ANR	4121150	Identifier	r_core_seek		4120100	0					
ANR	4121151	ArgumentList	core		4120100	1					
ANR	4121152	Argument	core		4120100	0					
ANR	4121153	Identifier	core		4120100	0					
ANR	4121154	Argument	sym -> vaddr		4120100	1					
ANR	4121155	PtrMemberAccess	sym -> vaddr		4120100	0					
ANR	4121156	Identifier	sym		4120100	0					
ANR	4121157	Identifier	vaddr		4120100	1					
ANR	4121158	Argument	1		4120100	2					
ANR	4121159	PrimaryExpression	1		4120100	0					
ANR	4121160	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3802:4:96299:96322	4120100	3	True				
ANR	4121161	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4121162	Callee	r_core_cmd0		4120100	0					
ANR	4121163	Identifier	r_core_cmd0		4120100	0					
ANR	4121164	ArgumentList	core		4120100	1					
ANR	4121165	Argument	core		4120100	0					
ANR	4121166	Identifier	core		4120100	0					
ANR	4121167	Argument	cmd		4120100	1					
ANR	4121168	Identifier	cmd		4120100	0					
ANR	4121169	ExpressionStatement	r_cons_break_pop ( )	3804:3:96332:96351	4120100	14	True				
ANR	4121170	CallExpression	r_cons_break_pop ( )		4120100	0					
ANR	4121171	Callee	r_cons_break_pop		4120100	0					
ANR	4121172	Identifier	r_cons_break_pop		4120100	0					
ANR	4121173	ArgumentList			4120100	1					
ANR	4121174	ExpressionStatement	"r_core_block_size ( core , obs )"	3805:3:96356:96385	4120100	15	True				
ANR	4121175	CallExpression	"r_core_block_size ( core , obs )"		4120100	0					
ANR	4121176	Callee	r_core_block_size		4120100	0					
ANR	4121177	Identifier	r_core_block_size		4120100	0					
ANR	4121178	ArgumentList	core		4120100	1					
ANR	4121179	Argument	core		4120100	0					
ANR	4121180	Identifier	core		4120100	0					
ANR	4121181	Argument	obs		4120100	1					
ANR	4121182	Identifier	obs		4120100	0					
ANR	4121183	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3806:3:96390:96420	4120100	16	True				
ANR	4121184	CallExpression	"r_core_seek ( core , offorig , 1 )"		4120100	0					
ANR	4121185	Callee	r_core_seek		4120100	0					
ANR	4121186	Identifier	r_core_seek		4120100	0					
ANR	4121187	ArgumentList	core		4120100	1					
ANR	4121188	Argument	core		4120100	0					
ANR	4121189	Identifier	core		4120100	0					
ANR	4121190	Argument	offorig		4120100	1					
ANR	4121191	Identifier	offorig		4120100	0					
ANR	4121192	Argument	1		4120100	2					
ANR	4121193	PrimaryExpression	1		4120100	0					
ANR	4121194	BreakStatement	break ;	3808:2:96428:96433	4120100	33	True				
ANR	4121195	Label	case 'f' :	3809:1:96436:96444	4120100	34	True				
ANR	4121196	CompoundStatement		195:3:4648:4674	4120100	35					
ANR	4121197	IdentifierDeclStatement	char * glob = filter ? r_str_trim_dup ( filter ) : NULL ;	3812:3:96482:96532	4120100	0	True				
ANR	4121198	IdentifierDecl	* glob = filter ? r_str_trim_dup ( filter ) : NULL		4120100	0					
ANR	4121199	IdentifierDeclType	char *		4120100	0					
ANR	4121200	Identifier	glob		4120100	1					
ANR	4121201	AssignmentExpression	* glob = filter ? r_str_trim_dup ( filter ) : NULL		4120100	2		=			
ANR	4121202	Identifier	glob		4120100	0					
ANR	4121203	ConditionalExpression	filter ? r_str_trim_dup ( filter ) : NULL		4120100	1					
ANR	4121204	Condition	filter		4120100	0					
ANR	4121205	Identifier	filter		4120100	0					
ANR	4121206	CallExpression	r_str_trim_dup ( filter )		4120100	1					
ANR	4121207	Callee	r_str_trim_dup		4120100	0					
ANR	4121208	Identifier	r_str_trim_dup		4120100	0					
ANR	4121209	ArgumentList	filter		4120100	1					
ANR	4121210	Argument	filter		4120100	0					
ANR	4121211	Identifier	filter		4120100	0					
ANR	4121212	Identifier	NULL		4120100	2					
ANR	4121213	IdentifierDeclStatement	ut64 off = core -> offset ;	3813:3:96537:96560	4120100	1	True				
ANR	4121214	IdentifierDecl	off = core -> offset		4120100	0					
ANR	4121215	IdentifierDeclType	ut64		4120100	0					
ANR	4121216	Identifier	off		4120100	1					
ANR	4121217	AssignmentExpression	off = core -> offset		4120100	2		=			
ANR	4121218	Identifier	off		4120100	0					
ANR	4121219	PtrMemberAccess	core -> offset		4120100	1					
ANR	4121220	Identifier	core		4120100	0					
ANR	4121221	Identifier	offset		4120100	1					
ANR	4121222	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3814:3:96565:96591	4120100	2	True				
ANR	4121223	IdentifierDecl	obs = core -> blocksize		4120100	0					
ANR	4121224	IdentifierDeclType	ut64		4120100	0					
ANR	4121225	Identifier	obs		4120100	1					
ANR	4121226	AssignmentExpression	obs = core -> blocksize		4120100	2		=			
ANR	4121227	Identifier	obs		4120100	0					
ANR	4121228	PtrMemberAccess	core -> blocksize		4120100	1					
ANR	4121229	Identifier	core		4120100	0					
ANR	4121230	Identifier	blocksize		4120100	1					
ANR	4121231	Statement	struct	3815:3:96596:96601	4120100	3	True				
ANR	4121232	Statement	exec_command_t	3815:10:96603:96616	4120100	4	True				
ANR	4121233	Statement	u	3815:25:96618:96618	4120100	5	True				
ANR	4121234	Statement	=	3815:27:96620:96620	4120100	6	True				
ANR	4121235	CompoundStatement		196:29:4705:4705	4120100	7					
ANR	4121236	Statement	.	3815:31:96624:96624	4120100	0	True				
ANR	4121237	Statement	core	3815:32:96625:96628	4120100	1	True				
ANR	4121238	Statement	=	3815:37:96630:96630	4120100	2	True				
ANR	4121239	Statement	core	3815:39:96632:96635	4120100	3	True				
ANR	4121240	Statement	","	3815:43:96636:96636	4120100	4	True				
ANR	4121241	Statement	.	3815:45:96638:96638	4120100	5	True				
ANR	4121242	Statement	cmd	3815:46:96639:96641	4120100	6	True				
ANR	4121243	Statement	=	3815:50:96643:96643	4120100	7	True				
ANR	4121244	Statement	cmd	3815:52:96645:96647	4120100	8	True				
ANR	4121245	ExpressionStatement		3815:57:96650:96650	4120100	8	True				
ANR	4121246	ExpressionStatement	"r_flag_foreach_glob ( core -> flags , glob , exec_command_on_flag , & u )"	3816:3:96655:96720	4120100	9	True				
ANR	4121247	CallExpression	"r_flag_foreach_glob ( core -> flags , glob , exec_command_on_flag , & u )"		4120100	0					
ANR	4121248	Callee	r_flag_foreach_glob		4120100	0					
ANR	4121249	Identifier	r_flag_foreach_glob		4120100	0					
ANR	4121250	ArgumentList	core -> flags		4120100	1					
ANR	4121251	Argument	core -> flags		4120100	0					
ANR	4121252	PtrMemberAccess	core -> flags		4120100	0					
ANR	4121253	Identifier	core		4120100	0					
ANR	4121254	Identifier	flags		4120100	1					
ANR	4121255	Argument	glob		4120100	1					
ANR	4121256	Identifier	glob		4120100	0					
ANR	4121257	Argument	exec_command_on_flag		4120100	2					
ANR	4121258	Identifier	exec_command_on_flag		4120100	0					
ANR	4121259	Argument	& u		4120100	3					
ANR	4121260	UnaryOperationExpression	& u		4120100	0					
ANR	4121261	UnaryOperator	&		4120100	0					
ANR	4121262	Identifier	u		4120100	1					
ANR	4121263	ExpressionStatement	"r_core_seek ( core , off , 0 )"	3817:3:96725:96751	4120100	10	True				
ANR	4121264	CallExpression	"r_core_seek ( core , off , 0 )"		4120100	0					
ANR	4121265	Callee	r_core_seek		4120100	0					
ANR	4121266	Identifier	r_core_seek		4120100	0					
ANR	4121267	ArgumentList	core		4120100	1					
ANR	4121268	Argument	core		4120100	0					
ANR	4121269	Identifier	core		4120100	0					
ANR	4121270	Argument	off		4120100	1					
ANR	4121271	Identifier	off		4120100	0					
ANR	4121272	Argument	0		4120100	2					
ANR	4121273	PrimaryExpression	0		4120100	0					
ANR	4121274	ExpressionStatement	"r_core_block_size ( core , obs )"	3818:3:96756:96785	4120100	11	True				
ANR	4121275	CallExpression	"r_core_block_size ( core , obs )"		4120100	0					
ANR	4121276	Callee	r_core_block_size		4120100	0					
ANR	4121277	Identifier	r_core_block_size		4120100	0					
ANR	4121278	ArgumentList	core		4120100	1					
ANR	4121279	Argument	core		4120100	0					
ANR	4121280	Identifier	core		4120100	0					
ANR	4121281	Argument	obs		4120100	1					
ANR	4121282	Identifier	obs		4120100	0					
ANR	4121283	ExpressionStatement	free ( glob )	3819:3:96790:96801	4120100	12	True				
ANR	4121284	CallExpression	free ( glob )		4120100	0					
ANR	4121285	Callee	free		4120100	0					
ANR	4121286	Identifier	free		4120100	0					
ANR	4121287	ArgumentList	glob		4120100	1					
ANR	4121288	Argument	glob		4120100	0					
ANR	4121289	Identifier	glob		4120100	0					
ANR	4121290	BreakStatement	break ;	3821:2:96809:96814	4120100	36	True				
ANR	4121291	Label	case 'F' :	3822:1:96817:96825	4120100	37	True				
ANR	4121292	CompoundStatement		207:3:4993:5011	4120100	38					
ANR	4121293	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3824:3:96847:96873	4120100	0	True				
ANR	4121294	IdentifierDecl	obs = core -> blocksize		4120100	0					
ANR	4121295	IdentifierDeclType	ut64		4120100	0					
ANR	4121296	Identifier	obs		4120100	1					
ANR	4121297	AssignmentExpression	obs = core -> blocksize		4120100	2		=			
ANR	4121298	Identifier	obs		4120100	0					
ANR	4121299	PtrMemberAccess	core -> blocksize		4120100	1					
ANR	4121300	Identifier	core		4120100	0					
ANR	4121301	Identifier	blocksize		4120100	1					
ANR	4121302	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3825:3:96878:96905	4120100	1	True				
ANR	4121303	IdentifierDecl	offorig = core -> offset		4120100	0					
ANR	4121304	IdentifierDeclType	ut64		4120100	0					
ANR	4121305	Identifier	offorig		4120100	1					
ANR	4121306	AssignmentExpression	offorig = core -> offset		4120100	2		=			
ANR	4121307	Identifier	offorig		4120100	0					
ANR	4121308	PtrMemberAccess	core -> offset		4120100	1					
ANR	4121309	Identifier	core		4120100	0					
ANR	4121310	Identifier	offset		4120100	1					
ANR	4121311	IdentifierDeclStatement	RAnalFunction * fcn ;	3826:3:96910:96928	4120100	2	True				
ANR	4121312	IdentifierDecl	* fcn		4120100	0					
ANR	4121313	IdentifierDeclType	RAnalFunction *		4120100	0					
ANR	4121314	Identifier	fcn		4120100	1					
ANR	4121315	ExpressionStatement	list = core -> anal -> fcns	3827:3:96933:96956	4120100	3	True				
ANR	4121316	AssignmentExpression	list = core -> anal -> fcns		4120100	0		=			
ANR	4121317	Identifier	list		4120100	0					
ANR	4121318	PtrMemberAccess	core -> anal -> fcns		4120100	1					
ANR	4121319	PtrMemberAccess	core -> anal		4120100	0					
ANR	4121320	Identifier	core		4120100	0					
ANR	4121321	Identifier	anal		4120100	1					
ANR	4121322	Identifier	fcns		4120100	1					
ANR	4121323	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3828:3:96961:96991	4120100	4	True				
ANR	4121324	CallExpression	"r_cons_break_push ( NULL , NULL )"		4120100	0					
ANR	4121325	Callee	r_cons_break_push		4120100	0					
ANR	4121326	Identifier	r_cons_break_push		4120100	0					
ANR	4121327	ArgumentList	NULL		4120100	1					
ANR	4121328	Argument	NULL		4120100	0					
ANR	4121329	Identifier	NULL		4120100	0					
ANR	4121330	Argument	NULL		4120100	1					
ANR	4121331	Identifier	NULL		4120100	0					
ANR	4121332	Statement	r_list_foreach	3829:3:96996:97009	4120100	5	True				
ANR	4121333	Statement	(	3829:18:97011:97011	4120100	6	True				
ANR	4121334	Statement	list	3829:19:97012:97015	4120100	7	True				
ANR	4121335	Statement	","	3829:23:97016:97016	4120100	8	True				
ANR	4121336	Statement	iter	3829:25:97018:97021	4120100	9	True				
ANR	4121337	Statement	","	3829:29:97022:97022	4120100	10	True				
ANR	4121338	Statement	fcn	3829:31:97024:97026	4120100	11	True				
ANR	4121339	Statement	)	3829:34:97027:97027	4120100	12	True				
ANR	4121340	CompoundStatement		210:36:5112:5112	4120100	13					
ANR	4121341	IfStatement	if ( r_cons_is_breaked ( ) )		4120100	0					
ANR	4121342	Condition	r_cons_is_breaked ( )	3830:8:97039:97058	4120100	0	True				
ANR	4121343	CallExpression	r_cons_is_breaked ( )		4120100	0					
ANR	4121344	Callee	r_cons_is_breaked		4120100	0					
ANR	4121345	Identifier	r_cons_is_breaked		4120100	0					
ANR	4121346	ArgumentList			4120100	1					
ANR	4121347	CompoundStatement		211:30:5144:5144	4120100	1					
ANR	4121348	BreakStatement	break ;	3831:5:97068:97073	4120100	0	True				
ANR	4121349	IfStatement	"if ( ! filter || r_str_glob ( fcn -> name , filter ) )"		4120100	1					
ANR	4121350	Condition	"! filter || r_str_glob ( fcn -> name , filter )"	3833:8:97089:97129	4120100	0	True				
ANR	4121351	OrExpression	"! filter || r_str_glob ( fcn -> name , filter )"		4120100	0		||			
ANR	4121352	UnaryOperationExpression	! filter		4120100	0					
ANR	4121353	UnaryOperator	!		4120100	0					
ANR	4121354	Identifier	filter		4120100	1					
ANR	4121355	CallExpression	"r_str_glob ( fcn -> name , filter )"		4120100	1					
ANR	4121356	Callee	r_str_glob		4120100	0					
ANR	4121357	Identifier	r_str_glob		4120100	0					
ANR	4121358	ArgumentList	fcn -> name		4120100	1					
ANR	4121359	Argument	fcn -> name		4120100	0					
ANR	4121360	PtrMemberAccess	fcn -> name		4120100	0					
ANR	4121361	Identifier	fcn		4120100	0					
ANR	4121362	Identifier	name		4120100	1					
ANR	4121363	Argument	filter		4120100	1					
ANR	4121364	Identifier	filter		4120100	0					
ANR	4121365	CompoundStatement		214:51:5215:5215	4120100	1					
ANR	4121366	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	3834:5:97139:97171	4120100	0	True				
ANR	4121367	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		4120100	0					
ANR	4121368	Callee	r_core_seek		4120100	0					
ANR	4121369	Identifier	r_core_seek		4120100	0					
ANR	4121370	ArgumentList	core		4120100	1					
ANR	4121371	Argument	core		4120100	0					
ANR	4121372	Identifier	core		4120100	0					
ANR	4121373	Argument	fcn -> addr		4120100	1					
ANR	4121374	PtrMemberAccess	fcn -> addr		4120100	0					
ANR	4121375	Identifier	fcn		4120100	0					
ANR	4121376	Identifier	addr		4120100	1					
ANR	4121377	Argument	1		4120100	2					
ANR	4121378	PrimaryExpression	1		4120100	0					
ANR	4121379	ExpressionStatement	"r_core_block_size ( core , r_anal_fcn_size ( fcn ) )"	3835:5:97178:97225	4120100	1	True				
ANR	4121380	CallExpression	"r_core_block_size ( core , r_anal_fcn_size ( fcn ) )"		4120100	0					
ANR	4121381	Callee	r_core_block_size		4120100	0					
ANR	4121382	Identifier	r_core_block_size		4120100	0					
ANR	4121383	ArgumentList	core		4120100	1					
ANR	4121384	Argument	core		4120100	0					
ANR	4121385	Identifier	core		4120100	0					
ANR	4121386	Argument	r_anal_fcn_size ( fcn )		4120100	1					
ANR	4121387	CallExpression	r_anal_fcn_size ( fcn )		4120100	0					
ANR	4121388	Callee	r_anal_fcn_size		4120100	0					
ANR	4121389	Identifier	r_anal_fcn_size		4120100	0					
ANR	4121390	ArgumentList	fcn		4120100	1					
ANR	4121391	Argument	fcn		4120100	0					
ANR	4121392	Identifier	fcn		4120100	0					
ANR	4121393	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3836:5:97232:97255	4120100	2	True				
ANR	4121394	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4121395	Callee	r_core_cmd0		4120100	0					
ANR	4121396	Identifier	r_core_cmd0		4120100	0					
ANR	4121397	ArgumentList	core		4120100	1					
ANR	4121398	Argument	core		4120100	0					
ANR	4121399	Identifier	core		4120100	0					
ANR	4121400	Argument	cmd		4120100	1					
ANR	4121401	Identifier	cmd		4120100	0					
ANR	4121402	ExpressionStatement	r_cons_break_pop ( )	3839:3:97271:97290	4120100	14	True				
ANR	4121403	CallExpression	r_cons_break_pop ( )		4120100	0					
ANR	4121404	Callee	r_cons_break_pop		4120100	0					
ANR	4121405	Identifier	r_cons_break_pop		4120100	0					
ANR	4121406	ArgumentList			4120100	1					
ANR	4121407	ExpressionStatement	"r_core_block_size ( core , obs )"	3840:3:97295:97324	4120100	15	True				
ANR	4121408	CallExpression	"r_core_block_size ( core , obs )"		4120100	0					
ANR	4121409	Callee	r_core_block_size		4120100	0					
ANR	4121410	Identifier	r_core_block_size		4120100	0					
ANR	4121411	ArgumentList	core		4120100	1					
ANR	4121412	Argument	core		4120100	0					
ANR	4121413	Identifier	core		4120100	0					
ANR	4121414	Argument	obs		4120100	1					
ANR	4121415	Identifier	obs		4120100	0					
ANR	4121416	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3841:3:97329:97359	4120100	16	True				
ANR	4121417	CallExpression	"r_core_seek ( core , offorig , 1 )"		4120100	0					
ANR	4121418	Callee	r_core_seek		4120100	0					
ANR	4121419	Identifier	r_core_seek		4120100	0					
ANR	4121420	ArgumentList	core		4120100	1					
ANR	4121421	Argument	core		4120100	0					
ANR	4121422	Identifier	core		4120100	0					
ANR	4121423	Argument	offorig		4120100	1					
ANR	4121424	Identifier	offorig		4120100	0					
ANR	4121425	Argument	1		4120100	2					
ANR	4121426	PrimaryExpression	1		4120100	0					
ANR	4121427	BreakStatement	break ;	3843:2:97367:97372	4120100	39	True				
ANR	4121428	Label	case 'b' :	3844:1:97375:97383	4120100	40	True				
ANR	4121429	CompoundStatement		229:3:5580:5606	4120100	41					
ANR	4121430	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	3846:3:97392:97460	4120100	0	True				
ANR	4121431	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		4120100	0					
ANR	4121432	IdentifierDeclType	RAnalFunction *		4120100	0					
ANR	4121433	Identifier	fcn		4120100	1					
ANR	4121434	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		4120100	2		=			
ANR	4121435	Identifier	fcn		4120100	0					
ANR	4121436	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		4120100	1					
ANR	4121437	Callee	r_anal_get_fcn_in		4120100	0					
ANR	4121438	Identifier	r_anal_get_fcn_in		4120100	0					
ANR	4121439	ArgumentList	core -> anal		4120100	1					
ANR	4121440	Argument	core -> anal		4120100	0					
ANR	4121441	PtrMemberAccess	core -> anal		4120100	0					
ANR	4121442	Identifier	core		4120100	0					
ANR	4121443	Identifier	anal		4120100	1					
ANR	4121444	Argument	core -> offset		4120100	1					
ANR	4121445	PtrMemberAccess	core -> offset		4120100	0					
ANR	4121446	Identifier	core		4120100	0					
ANR	4121447	Identifier	offset		4120100	1					
ANR	4121448	Argument	0		4120100	2					
ANR	4121449	PrimaryExpression	0		4120100	0					
ANR	4121450	IdentifierDeclStatement	ut64 offorig = core -> offset ;	3847:3:97465:97492	4120100	1	True				
ANR	4121451	IdentifierDecl	offorig = core -> offset		4120100	0					
ANR	4121452	IdentifierDeclType	ut64		4120100	0					
ANR	4121453	Identifier	offorig		4120100	1					
ANR	4121454	AssignmentExpression	offorig = core -> offset		4120100	2		=			
ANR	4121455	Identifier	offorig		4120100	0					
ANR	4121456	PtrMemberAccess	core -> offset		4120100	1					
ANR	4121457	Identifier	core		4120100	0					
ANR	4121458	Identifier	offset		4120100	1					
ANR	4121459	IdentifierDeclStatement	ut64 obs = core -> blocksize ;	3848:3:97497:97523	4120100	2	True				
ANR	4121460	IdentifierDecl	obs = core -> blocksize		4120100	0					
ANR	4121461	IdentifierDeclType	ut64		4120100	0					
ANR	4121462	Identifier	obs		4120100	1					
ANR	4121463	AssignmentExpression	obs = core -> blocksize		4120100	2		=			
ANR	4121464	Identifier	obs		4120100	0					
ANR	4121465	PtrMemberAccess	core -> blocksize		4120100	1					
ANR	4121466	Identifier	core		4120100	0					
ANR	4121467	Identifier	blocksize		4120100	1					
ANR	4121468	IfStatement	if ( fcn )		4120100	3					
ANR	4121469	Condition	fcn	3849:7:97532:97534	4120100	0	True				
ANR	4121470	Identifier	fcn		4120100	0					
ANR	4121471	CompoundStatement		232:4:5647:5661	4120100	1					
ANR	4121472	IdentifierDeclStatement	RListIter * iter ;	3850:4:97543:97558	4120100	0	True				
ANR	4121473	IdentifierDecl	* iter		4120100	0					
ANR	4121474	IdentifierDeclType	RListIter *		4120100	0					
ANR	4121475	Identifier	iter		4120100	1					
ANR	4121476	IdentifierDeclStatement	RAnalBlock * bb ;	3851:4:97564:97578	4120100	1	True				
ANR	4121477	IdentifierDecl	* bb		4120100	0					
ANR	4121478	IdentifierDeclType	RAnalBlock *		4120100	0					
ANR	4121479	Identifier	bb		4120100	1					
ANR	4121480	Statement	r_list_foreach	3852:4:97584:97597	4120100	2	True				
ANR	4121481	Statement	(	3852:19:97599:97599	4120100	3	True				
ANR	4121482	Statement	fcn	3852:20:97600:97602	4120100	4	True				
ANR	4121483	Statement	->	3852:23:97603:97604	4120100	5	True				
ANR	4121484	Statement	bbs	3852:25:97605:97607	4120100	6	True				
ANR	4121485	Statement	","	3852:28:97608:97608	4120100	7	True				
ANR	4121486	Statement	iter	3852:30:97610:97613	4120100	8	True				
ANR	4121487	Statement	","	3852:34:97614:97614	4120100	9	True				
ANR	4121488	Statement	bb	3852:36:97616:97617	4120100	10	True				
ANR	4121489	Statement	)	3852:38:97618:97618	4120100	11	True				
ANR	4121490	CompoundStatement		233:40:5703:5703	4120100	12					
ANR	4121491	ExpressionStatement	"r_core_seek ( core , bb -> addr , 1 )"	3853:5:97627:97658	4120100	0	True				
ANR	4121492	CallExpression	"r_core_seek ( core , bb -> addr , 1 )"		4120100	0					
ANR	4121493	Callee	r_core_seek		4120100	0					
ANR	4121494	Identifier	r_core_seek		4120100	0					
ANR	4121495	ArgumentList	core		4120100	1					
ANR	4121496	Argument	core		4120100	0					
ANR	4121497	Identifier	core		4120100	0					
ANR	4121498	Argument	bb -> addr		4120100	1					
ANR	4121499	PtrMemberAccess	bb -> addr		4120100	0					
ANR	4121500	Identifier	bb		4120100	0					
ANR	4121501	Identifier	addr		4120100	1					
ANR	4121502	Argument	1		4120100	2					
ANR	4121503	PrimaryExpression	1		4120100	0					
ANR	4121504	ExpressionStatement	"r_core_block_size ( core , bb -> size )"	3854:5:97665:97699	4120100	1	True				
ANR	4121505	CallExpression	"r_core_block_size ( core , bb -> size )"		4120100	0					
ANR	4121506	Callee	r_core_block_size		4120100	0					
ANR	4121507	Identifier	r_core_block_size		4120100	0					
ANR	4121508	ArgumentList	core		4120100	1					
ANR	4121509	Argument	core		4120100	0					
ANR	4121510	Identifier	core		4120100	0					
ANR	4121511	Argument	bb -> size		4120100	1					
ANR	4121512	PtrMemberAccess	bb -> size		4120100	0					
ANR	4121513	Identifier	bb		4120100	0					
ANR	4121514	Identifier	size		4120100	1					
ANR	4121515	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3855:5:97706:97729	4120100	2	True				
ANR	4121516	CallExpression	"r_core_cmd0 ( core , cmd )"		4120100	0					
ANR	4121517	Callee	r_core_cmd0		4120100	0					
ANR	4121518	Identifier	r_core_cmd0		4120100	0					
ANR	4121519	ArgumentList	core		4120100	1					
ANR	4121520	Argument	core		4120100	0					
ANR	4121521	Identifier	core		4120100	0					
ANR	4121522	Argument	cmd		4120100	1					
ANR	4121523	Identifier	cmd		4120100	0					
ANR	4121524	ExpressionStatement	"r_core_block_size ( core , obs )"	3857:4:97741:97770	4120100	13	True				
ANR	4121525	CallExpression	"r_core_block_size ( core , obs )"		4120100	0					
ANR	4121526	Callee	r_core_block_size		4120100	0					
ANR	4121527	Identifier	r_core_block_size		4120100	0					
ANR	4121528	ArgumentList	core		4120100	1					
ANR	4121529	Argument	core		4120100	0					
ANR	4121530	Identifier	core		4120100	0					
ANR	4121531	Argument	obs		4120100	1					
ANR	4121532	Identifier	obs		4120100	0					
ANR	4121533	ExpressionStatement	"r_core_seek ( core , offorig , 1 )"	3858:4:97776:97806	4120100	14	True				
ANR	4121534	CallExpression	"r_core_seek ( core , offorig , 1 )"		4120100	0					
ANR	4121535	Callee	r_core_seek		4120100	0					
ANR	4121536	Identifier	r_core_seek		4120100	0					
ANR	4121537	ArgumentList	core		4120100	1					
ANR	4121538	Argument	core		4120100	0					
ANR	4121539	Identifier	core		4120100	0					
ANR	4121540	Argument	offorig		4120100	1					
ANR	4121541	Identifier	offorig		4120100	0					
ANR	4121542	Argument	1		4120100	2					
ANR	4121543	PrimaryExpression	1		4120100	0					
ANR	4121544	BreakStatement	break ;	3861:2:97819:97824	4120100	42	True				
ANR	4121545	ReturnStatement	return 0 ;	3863:1:97830:97838	4120100	7	True				
ANR	4121546	PrimaryExpression	0		4120100	0					
ANR	4121547	ReturnType	R_API int		4120100	1					
ANR	4121548	Identifier	r_core_cmd_foreach3		4120100	2					
ANR	4121549	ParameterList	"RCore * core , const char * cmd , char * each"		4120100	3					
ANR	4121550	Parameter	RCore * core	3620:30:91874:91884	4120100	0	True				
ANR	4121551	ParameterType	RCore *		4120100	0					
ANR	4121552	Identifier	core		4120100	1					
ANR	4121553	Parameter	const char * cmd	3620:43:91887:91901	4120100	1	True				
ANR	4121554	ParameterType	const char *		4120100	0					
ANR	4121555	Identifier	cmd		4120100	1					
ANR	4121556	Parameter	char * each	3620:60:91904:91913	4120100	2	True				
ANR	4121557	ParameterType	char *		4120100	0					
ANR	4121558	Identifier	each		4120100	1					
ANR	4121559	CFGEntryNode	ENTRY		4120100		True				
ANR	4121560	CFGExitNode	EXIT		4120100		True				
ANR	4121561	Symbol	obs		4120100						
ANR	4121562	Symbol	* fcn		4120100						
ANR	4121563	Symbol	r_io_map_get_for_fd		4120100						
ANR	4121564	Symbol	* map		4120100						
ANR	4121565	Symbol	core -> offset		4120100						
ANR	4121566	Symbol	core -> bin		4120100						
ANR	4121567	Symbol	core -> blocksize		4120100						
ANR	4121568	Symbol	item		4120100						
ANR	4121569	Symbol	imp -> name		4120100						
ANR	4121570	Symbol	sym -> vaddr		4120100						
ANR	4121571	Symbol	cbsz		4120100						
ANR	4121572	Symbol	iter		4120100						
ANR	4121573	Symbol	it		4120100						
ANR	4121574	Symbol	core -> anal -> fcns		4120100						
ANR	4121575	Symbol	each		4120100						
ANR	4121576	Symbol	size		4120100						
ANR	4121577	Symbol	cmd		4120100						
ANR	4121578	Symbol	* sec		4120100						
ANR	4121579	Symbol	bb		4120100						
ANR	4121580	Symbol	bszorig		4120100						
ANR	4121581	Symbol	s -> size		4120100						
ANR	4121582	Symbol	map -> addr		4120100						
ANR	4121583	Symbol	* core		4120100						
ANR	4121584	Symbol	* dbg -> h		4120100						
ANR	4121585	Symbol	glob		4120100						
ANR	4121586	Symbol	core -> anal		4120100						
ANR	4121587	Symbol	sym -> size		4120100						
ANR	4121588	Symbol	sec		4120100						
ANR	4121589	Symbol	fcn		4120100						
ANR	4121590	Symbol	r_cons_is_breaked		4120100						
ANR	4121591	Symbol	core -> io		4120100						
ANR	4121592	Symbol	arg		4120100						
ANR	4121593	Symbol	map		4120100						
ANR	4121594	Symbol	r_bin_cur_object		4120100						
ANR	4121595	Symbol	core -> anal -> bits		4120100						
ANR	4121596	Symbol	r_reg_get_value		4120100						
ANR	4121597	Symbol	dbg -> h		4120100						
ANR	4121598	Symbol	i		4120100						
ANR	4121599	Symbol	core -> flags		4120100						
ANR	4121600	Symbol	off		4120100						
ANR	4121601	Symbol	s -> vaddr		4120100						
ANR	4121602	Symbol	filter		4120100						
ANR	4121603	Symbol	p		4120100						
ANR	4121604	Symbol	dbg -> maps		4120100						
ANR	4121605	Symbol	* core -> anal		4120100						
ANR	4121606	Symbol	s		4120100						
ANR	4121607	Symbol	dbg -> pid		4120100						
ANR	4121608	Symbol	r_str_glob		4120100						
ANR	4121609	Symbol	item -> name		4120100						
ANR	4121610	Symbol	r_bin_get_symbols		4120100						
ANR	4121611	Symbol	fcn -> addr		4120100						
ANR	4121612	Symbol	dbg -> reg		4120100						
ANR	4121613	Symbol	foreach_comment		4120100						
ANR	4121614	Symbol	r_core_cmd_str		4120100						
ANR	4121615	Symbol	offorig		4120100						
ANR	4121616	Symbol	bb -> size		4120100						
ANR	4121617	Symbol	fcn -> name		4120100						
ANR	4121618	Symbol	r_anal_fcn_size		4120100						
ANR	4121619	Symbol	help_msg_at_at_at		4120100						
ANR	4121620	Symbol	* imp		4120100						
ANR	4121621	Symbol	bb -> addr		4120100						
ANR	4121622	Symbol	r_str_trim_dup		4120100						
ANR	4121623	Symbol	sec -> vsize		4120100						
ANR	4121624	Symbol	core -> num		4120100						
ANR	4121625	Symbol	NULL		4120100						
ANR	4121626	Symbol	maps		4120100						
ANR	4121627	Symbol	r_reg_get_list		4120100						
ANR	4121628	Symbol	dbg		4120100						
ANR	4121629	Symbol	* each		4120100						
ANR	4121630	Symbol	list		4120100						
ANR	4121631	Symbol	core		4120100						
ANR	4121632	Symbol	* sym		4120100						
ANR	4121633	Symbol	r_io_fd_get_current		4120100						
ANR	4121634	Symbol	sec -> vaddr		4120100						
ANR	4121635	Symbol	fd		4120100						
ANR	4121636	Symbol	map -> itv		4120100						
ANR	4121637	Symbol	p -> pid		4120100						
ANR	4121638	Symbol	sym		4120100						
ANR	4121639	Symbol	R_META_TYPE_COMMENT		4120100						
ANR	4121640	Symbol	r_str_newf		4120100						
ANR	4121641	Symbol	dbg -> h -> threads		4120100						
ANR	4121642	Symbol	imp		4120100						
ANR	4121643	Symbol	r_num_math		4120100						
ANR	4121644	Symbol	r_bin_get_strings		4120100						
ANR	4121645	Symbol	head		4120100						
ANR	4121646	Symbol	r_bin_get_imports		4120100						
ANR	4121647	Symbol	exec_command_on_flag		4120100						
ANR	4121648	Symbol	* item		4120100						
ANR	4121649	Symbol	map -> itv . addr		4120100						
ANR	4121650	Symbol	UT64_MAX		4120100						
ANR	4121651	Symbol	addr		4120100						
ANR	4121652	Symbol	value		4120100						
ANR	4121653	Symbol	* * core		4120100						
ANR	4121654	Symbol	* bb		4120100						
ANR	4121655	Symbol	false		4120100						
ANR	4121656	Symbol	* dbg		4120100						
ANR	4121657	Symbol	impflag		4120100						
ANR	4121658	Symbol	map -> itv . size		4120100						
ANR	4121659	Symbol	r_anal_get_fcn_in		4120100						
ANR	4121660	Symbol	obj		4120100						
ANR	4121661	Symbol	* p		4120100						
ANR	4121662	Symbol	& u		4120100						
ANR	4121663	Symbol	* * dbg		4120100						
ANR	4121664	Symbol	item -> size		4120100						
ANR	4121665	Symbol	* s		4120100						
ANR	4121666	Symbol	origpid		4120100						
ANR	4121667	Symbol	core -> dbg		4120100						
ANR	4121668	Function	foreachOffset	3866:0:97843:98848							
ANR	4121669	FunctionDef	"foreachOffset (RCore * core , const char * _cmd , const char * each)"		4121668	0					
ANR	4121670	CompoundStatement		3866:75:97918:98848	4121668	0					
ANR	4121671	IdentifierDeclStatement	char * cmd = strdup ( _cmd ) ;	3867:1:97921:97946	4121668	0	True				
ANR	4121672	IdentifierDecl	* cmd = strdup ( _cmd )		4121668	0					
ANR	4121673	IdentifierDeclType	char *		4121668	0					
ANR	4121674	Identifier	cmd		4121668	1					
ANR	4121675	AssignmentExpression	* cmd = strdup ( _cmd )		4121668	2		=			
ANR	4121676	Identifier	cmd		4121668	0					
ANR	4121677	CallExpression	strdup ( _cmd )		4121668	1					
ANR	4121678	Callee	strdup		4121668	0					
ANR	4121679	Identifier	strdup		4121668	0					
ANR	4121680	ArgumentList	_cmd		4121668	1					
ANR	4121681	Argument	_cmd		4121668	0					
ANR	4121682	Identifier	_cmd		4121668	0					
ANR	4121683	IdentifierDeclStatement	char * nextLine = NULL ;	3868:1:97949:97970	4121668	1	True				
ANR	4121684	IdentifierDecl	* nextLine = NULL		4121668	0					
ANR	4121685	IdentifierDeclType	char *		4121668	0					
ANR	4121686	Identifier	nextLine		4121668	1					
ANR	4121687	AssignmentExpression	* nextLine = NULL		4121668	2		=			
ANR	4121688	Identifier	NULL		4121668	0					
ANR	4121689	Identifier	NULL		4121668	1					
ANR	4121690	IdentifierDeclStatement	ut64 addr ;	3869:1:97973:97982	4121668	2	True				
ANR	4121691	IdentifierDecl	addr		4121668	0					
ANR	4121692	IdentifierDeclType	ut64		4121668	0					
ANR	4121693	Identifier	addr		4121668	1					
ANR	4121694	WhileStatement	while ( each )		4121668	3					
ANR	4121695	Condition	each	3871:8:98021:98024	4121668	0	True				
ANR	4121696	Identifier	each		4121668	0					
ANR	4121697	CompoundStatement		16:2:244:274	4121668	1					
ANR	4121698	WhileStatement	while ( * each == ' ' )		4121668	0					
ANR	4121699	Condition	* each == ' '	3873:9:98055:98066	4121668	0	True				
ANR	4121700	EqualityExpression	* each == ' '		4121668	0		==			
ANR	4121701	UnaryOperationExpression	* each		4121668	0					
ANR	4121702	UnaryOperator	*		4121668	0					
ANR	4121703	Identifier	each		4121668	1					
ANR	4121704	PrimaryExpression	' '		4121668	1					
ANR	4121705	CompoundStatement		8:23:150:150	4121668	1					
ANR	4121706	ExpressionStatement	each ++	3874:3:98074:98080	4121668	0	True				
ANR	4121707	PostIncDecOperationExpression	each ++		4121668	0					
ANR	4121708	Identifier	each		4121668	0					
ANR	4121709	IncDec	++		4121668	1					
ANR	4121710	IfStatement	if ( ! * each )		4121668	1					
ANR	4121711	Condition	! * each	3877:6:98119:98124	4121668	0	True				
ANR	4121712	UnaryOperationExpression	! * each		4121668	0					
ANR	4121713	UnaryOperator	!		4121668	0					
ANR	4121714	UnaryOperationExpression	* each		4121668	1					
ANR	4121715	UnaryOperator	*		4121668	0					
ANR	4121716	Identifier	each		4121668	1					
ANR	4121717	CompoundStatement		12:14:208:208	4121668	1					
ANR	4121718	BreakStatement	break ;	3878:3:98132:98137	4121668	0	True				
ANR	4121719	IdentifierDeclStatement	"char * nl = strchr ( each , '\\n' ) ;"	3881:2:98163:98193	4121668	2	True				
ANR	4121720	IdentifierDecl	"* nl = strchr ( each , '\\n' )"		4121668	0					
ANR	4121721	IdentifierDeclType	char *		4121668	0					
ANR	4121722	Identifier	nl		4121668	1					
ANR	4121723	AssignmentExpression	"* nl = strchr ( each , '\\n' )"		4121668	2		=			
ANR	4121724	Identifier	nl		4121668	0					
ANR	4121725	CallExpression	"strchr ( each , '\\n' )"		4121668	1					
ANR	4121726	Callee	strchr		4121668	0					
ANR	4121727	Identifier	strchr		4121668	0					
ANR	4121728	ArgumentList	each		4121668	1					
ANR	4121729	Argument	each		4121668	0					
ANR	4121730	Identifier	each		4121668	0					
ANR	4121731	Argument	'\\n'		4121668	1					
ANR	4121732	PrimaryExpression	'\\n'		4121668	0					
ANR	4121733	IfStatement	if ( nl )		4121668	3					
ANR	4121734	Condition	nl	3882:6:98201:98202	4121668	0	True				
ANR	4121735	Identifier	nl		4121668	0					
ANR	4121736	CompoundStatement		17:10:286:286	4121668	1					
ANR	4121737	ExpressionStatement	* nl = 0	3883:3:98210:98217	4121668	0	True				
ANR	4121738	AssignmentExpression	* nl = 0		4121668	0		=			
ANR	4121739	UnaryOperationExpression	* nl		4121668	0					
ANR	4121740	UnaryOperator	*		4121668	0					
ANR	4121741	Identifier	nl		4121668	1					
ANR	4121742	PrimaryExpression	0		4121668	1					
ANR	4121743	ExpressionStatement	nextLine = nl + 1	3884:3:98222:98239	4121668	1	True				
ANR	4121744	AssignmentExpression	nextLine = nl + 1		4121668	0		=			
ANR	4121745	Identifier	nextLine		4121668	0					
ANR	4121746	AdditiveExpression	nl + 1		4121668	1		+			
ANR	4121747	Identifier	nl		4121668	0					
ANR	4121748	PrimaryExpression	1		4121668	1					
ANR	4121749	ElseStatement	else		4121668	0					
ANR	4121750	CompoundStatement		20:9:331:331	4121668	0					
ANR	4121751	ExpressionStatement	nextLine = NULL	3886:3:98255:98270	4121668	0	True				
ANR	4121752	AssignmentExpression	nextLine = NULL		4121668	0		=			
ANR	4121753	Identifier	nextLine		4121668	0					
ANR	4121754	Identifier	NULL		4121668	1					
ANR	4121755	ExpressionStatement	"nl = strchr ( each , '#' )"	3889:2:98304:98327	4121668	4	True				
ANR	4121756	AssignmentExpression	"nl = strchr ( each , '#' )"		4121668	0		=			
ANR	4121757	Identifier	nl		4121668	0					
ANR	4121758	CallExpression	"strchr ( each , '#' )"		4121668	1					
ANR	4121759	Callee	strchr		4121668	0					
ANR	4121760	Identifier	strchr		4121668	0					
ANR	4121761	ArgumentList	each		4121668	1					
ANR	4121762	Argument	each		4121668	0					
ANR	4121763	Identifier	each		4121668	0					
ANR	4121764	Argument	'#'		4121668	1					
ANR	4121765	PrimaryExpression	'#'		4121668	0					
ANR	4121766	IfStatement	if ( nl )		4121668	5					
ANR	4121767	Condition	nl	3890:6:98335:98336	4121668	0	True				
ANR	4121768	Identifier	nl		4121668	0					
ANR	4121769	CompoundStatement		25:10:420:420	4121668	1					
ANR	4121770	ExpressionStatement	* nl = 0	3891:3:98344:98351	4121668	0	True				
ANR	4121771	AssignmentExpression	* nl = 0		4121668	0		=			
ANR	4121772	UnaryOperationExpression	* nl		4121668	0					
ANR	4121773	UnaryOperator	*		4121668	0					
ANR	4121774	Identifier	nl		4121668	1					
ANR	4121775	PrimaryExpression	0		4121668	1					
ANR	4121776	WhileStatement	while ( each && * each )		4121668	6					
ANR	4121777	Condition	each && * each	3894:9:98395:98407	4121668	0	True				
ANR	4121778	AndExpression	each && * each		4121668	0		&&			
ANR	4121779	Identifier	each		4121668	0					
ANR	4121780	UnaryOperationExpression	* each		4121668	1					
ANR	4121781	UnaryOperator	*		4121668	0					
ANR	4121782	Identifier	each		4121668	1					
ANR	4121783	CompoundStatement		34:3:557:587	4121668	1					
ANR	4121784	WhileStatement	while ( * each == ' ' )		4121668	0					
ANR	4121785	Condition	* each == ' '	3896:10:98440:98451	4121668	0	True				
ANR	4121786	EqualityExpression	* each == ' '		4121668	0		==			
ANR	4121787	UnaryOperationExpression	* each		4121668	0					
ANR	4121788	UnaryOperator	*		4121668	0					
ANR	4121789	Identifier	each		4121668	1					
ANR	4121790	PrimaryExpression	' '		4121668	1					
ANR	4121791	CompoundStatement		31:24:535:535	4121668	1					
ANR	4121792	ExpressionStatement	each ++	3897:4:98460:98466	4121668	0	True				
ANR	4121793	PostIncDecOperationExpression	each ++		4121668	0					
ANR	4121794	Identifier	each		4121668	0					
ANR	4121795	IncDec	++		4121668	1					
ANR	4121796	IdentifierDeclStatement	"char * str = strchr ( each , ' ' ) ;"	3899:3:98476:98506	4121668	1	True				
ANR	4121797	IdentifierDecl	"* str = strchr ( each , ' ' )"		4121668	0					
ANR	4121798	IdentifierDeclType	char *		4121668	0					
ANR	4121799	Identifier	str		4121668	1					
ANR	4121800	AssignmentExpression	"* str = strchr ( each , ' ' )"		4121668	2		=			
ANR	4121801	Identifier	str		4121668	0					
ANR	4121802	CallExpression	"strchr ( each , ' ' )"		4121668	1					
ANR	4121803	Callee	strchr		4121668	0					
ANR	4121804	Identifier	strchr		4121668	0					
ANR	4121805	ArgumentList	each		4121668	1					
ANR	4121806	Argument	each		4121668	0					
ANR	4121807	Identifier	each		4121668	0					
ANR	4121808	Argument	' '		4121668	1					
ANR	4121809	PrimaryExpression	' '		4121668	0					
ANR	4121810	IfStatement	if ( str )		4121668	2					
ANR	4121811	Condition	str	3900:7:98515:98517	4121668	0	True				
ANR	4121812	Identifier	str		4121668	0					
ANR	4121813	CompoundStatement		35:12:601:601	4121668	1					
ANR	4121814	ExpressionStatement	* str = '\\0'	3901:4:98526:98537	4121668	0	True				
ANR	4121815	AssignmentExpression	* str = '\\0'		4121668	0		=			
ANR	4121816	UnaryOperationExpression	* str		4121668	0					
ANR	4121817	UnaryOperator	*		4121668	0					
ANR	4121818	Identifier	str		4121668	1					
ANR	4121819	PrimaryExpression	'\\0'		4121668	1					
ANR	4121820	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	3902:4:98543:98578	4121668	1	True				
ANR	4121821	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		4121668	0		=			
ANR	4121822	Identifier	addr		4121668	0					
ANR	4121823	CallExpression	"r_num_math ( core -> num , each )"		4121668	1					
ANR	4121824	Callee	r_num_math		4121668	0					
ANR	4121825	Identifier	r_num_math		4121668	0					
ANR	4121826	ArgumentList	core -> num		4121668	1					
ANR	4121827	Argument	core -> num		4121668	0					
ANR	4121828	PtrMemberAccess	core -> num		4121668	0					
ANR	4121829	Identifier	core		4121668	0					
ANR	4121830	Identifier	num		4121668	1					
ANR	4121831	Argument	each		4121668	1					
ANR	4121832	Identifier	each		4121668	0					
ANR	4121833	ExpressionStatement	* str = ' '	3903:4:98584:98594	4121668	2	True				
ANR	4121834	AssignmentExpression	* str = ' '		4121668	0		=			
ANR	4121835	UnaryOperationExpression	* str		4121668	0					
ANR	4121836	UnaryOperator	*		4121668	0					
ANR	4121837	Identifier	str		4121668	1					
ANR	4121838	PrimaryExpression	' '		4121668	1					
ANR	4121839	ExpressionStatement	each = str + 1	3904:4:98600:98614	4121668	3	True				
ANR	4121840	AssignmentExpression	each = str + 1		4121668	0		=			
ANR	4121841	Identifier	each		4121668	0					
ANR	4121842	AdditiveExpression	str + 1		4121668	1		+			
ANR	4121843	Identifier	str		4121668	0					
ANR	4121844	PrimaryExpression	1		4121668	1					
ANR	4121845	ElseStatement	else		4121668	0					
ANR	4121846	CompoundStatement		40:10:707:707	4121668	0					
ANR	4121847	IfStatement	if ( ! * each )		4121668	0					
ANR	4121848	Condition	! * each	3906:8:98636:98641	4121668	0	True				
ANR	4121849	UnaryOperationExpression	! * each		4121668	0					
ANR	4121850	UnaryOperator	!		4121668	0					
ANR	4121851	UnaryOperationExpression	* each		4121668	1					
ANR	4121852	UnaryOperator	*		4121668	0					
ANR	4121853	Identifier	each		4121668	1					
ANR	4121854	CompoundStatement		41:16:725:725	4121668	1					
ANR	4121855	BreakStatement	break ;	3907:5:98651:98656	4121668	0	True				
ANR	4121856	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	3909:4:98668:98703	4121668	1	True				
ANR	4121857	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		4121668	0		=			
ANR	4121858	Identifier	addr		4121668	0					
ANR	4121859	CallExpression	"r_num_math ( core -> num , each )"		4121668	1					
ANR	4121860	Callee	r_num_math		4121668	0					
ANR	4121861	Identifier	r_num_math		4121668	0					
ANR	4121862	ArgumentList	core -> num		4121668	1					
ANR	4121863	Argument	core -> num		4121668	0					
ANR	4121864	PtrMemberAccess	core -> num		4121668	0					
ANR	4121865	Identifier	core		4121668	0					
ANR	4121866	Identifier	num		4121668	1					
ANR	4121867	Argument	each		4121668	1					
ANR	4121868	Identifier	each		4121668	0					
ANR	4121869	ExpressionStatement	each = NULL	3910:4:98709:98720	4121668	2	True				
ANR	4121870	AssignmentExpression	each = NULL		4121668	0		=			
ANR	4121871	Identifier	each		4121668	0					
ANR	4121872	Identifier	NULL		4121668	1					
ANR	4121873	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	3912:3:98730:98757	4121668	3	True				
ANR	4121874	CallExpression	"r_core_seek ( core , addr , 1 )"		4121668	0					
ANR	4121875	Callee	r_core_seek		4121668	0					
ANR	4121876	Identifier	r_core_seek		4121668	0					
ANR	4121877	ArgumentList	core		4121668	1					
ANR	4121878	Argument	core		4121668	0					
ANR	4121879	Identifier	core		4121668	0					
ANR	4121880	Argument	addr		4121668	1					
ANR	4121881	Identifier	addr		4121668	0					
ANR	4121882	Argument	1		4121668	2					
ANR	4121883	PrimaryExpression	1		4121668	0					
ANR	4121884	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	3913:3:98762:98787	4121668	4	True				
ANR	4121885	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4121668	0					
ANR	4121886	Callee	r_core_cmd		4121668	0					
ANR	4121887	Identifier	r_core_cmd		4121668	0					
ANR	4121888	ArgumentList	core		4121668	1					
ANR	4121889	Argument	core		4121668	0					
ANR	4121890	Identifier	core		4121668	0					
ANR	4121891	Argument	cmd		4121668	1					
ANR	4121892	Identifier	cmd		4121668	0					
ANR	4121893	Argument	0		4121668	2					
ANR	4121894	PrimaryExpression	0		4121668	0					
ANR	4121895	ExpressionStatement	r_cons_flush ( )	3914:3:98792:98807	4121668	5	True				
ANR	4121896	CallExpression	r_cons_flush ( )		4121668	0					
ANR	4121897	Callee	r_cons_flush		4121668	0					
ANR	4121898	Identifier	r_cons_flush		4121668	0					
ANR	4121899	ArgumentList			4121668	1					
ANR	4121900	ExpressionStatement	each = nextLine	3916:2:98815:98830	4121668	7	True				
ANR	4121901	AssignmentExpression	each = nextLine		4121668	0		=			
ANR	4121902	Identifier	each		4121668	0					
ANR	4121903	Identifier	nextLine		4121668	1					
ANR	4121904	ExpressionStatement	free ( cmd )	3918:1:98836:98846	4121668	4	True				
ANR	4121905	CallExpression	free ( cmd )		4121668	0					
ANR	4121906	Callee	free		4121668	0					
ANR	4121907	Identifier	free		4121668	0					
ANR	4121908	ArgumentList	cmd		4121668	1					
ANR	4121909	Argument	cmd		4121668	0					
ANR	4121910	Identifier	cmd		4121668	0					
ANR	4121911	ReturnType	static void		4121668	1					
ANR	4121912	Identifier	foreachOffset		4121668	2					
ANR	4121913	ParameterList	"RCore * core , const char * _cmd , const char * each"		4121668	3					
ANR	4121914	Parameter	RCore * core	3866:26:97869:97879	4121668	0	True				
ANR	4121915	ParameterType	RCore *		4121668	0					
ANR	4121916	Identifier	core		4121668	1					
ANR	4121917	Parameter	const char * _cmd	3866:39:97882:97897	4121668	1	True				
ANR	4121918	ParameterType	const char *		4121668	0					
ANR	4121919	Identifier	_cmd		4121668	1					
ANR	4121920	Parameter	const char * each	3866:57:97900:97915	4121668	2	True				
ANR	4121921	ParameterType	const char *		4121668	0					
ANR	4121922	Identifier	each		4121668	1					
ANR	4121923	CFGEntryNode	ENTRY		4121668		True				
ANR	4121924	CFGExitNode	EXIT		4121668		True				
ANR	4121925	Symbol	NULL		4121668						
ANR	4121926	Symbol	nextLine		4121668						
ANR	4121927	Symbol	* nl		4121668						
ANR	4121928	Symbol	* core		4121668						
ANR	4121929	Symbol	strchr		4121668						
ANR	4121930	Symbol	* each		4121668						
ANR	4121931	Symbol	each		4121668						
ANR	4121932	Symbol	r_num_math		4121668						
ANR	4121933	Symbol	str		4121668						
ANR	4121934	Symbol	core		4121668						
ANR	4121935	Symbol	_cmd		4121668						
ANR	4121936	Symbol	strdup		4121668						
ANR	4121937	Symbol	cmd		4121668						
ANR	4121938	Symbol	* str		4121668						
ANR	4121939	Symbol	addr		4121668						
ANR	4121940	Symbol	core -> num		4121668						
ANR	4121941	Symbol	nl		4121668						
ANR	4121942	ClassDef	duplicate_flag_t	3921:0:98851:98909							
ANR	4121943	DeclStmt									
ANR	4121944	Decl							RList	RList *	ret
ANR	4121945	DeclStmt									
ANR	4121946	Decl							const char	const char *	word
ANR	4121947	Function	duplicate_flag	3926:0:98913:99260							
ANR	4121948	FunctionDef	"duplicate_flag (RFlagItem * flag , void * u)"		4121947	0					
ANR	4121949	CompoundStatement		3926:53:98966:99260	4121947	0					
ANR	4121950	IdentifierDeclStatement	struct duplicate_flag_t * user = ( struct duplicate_flag_t * ) u ;	3927:1:98969:99029	4121947	0	True				
ANR	4121951	IdentifierDecl	* user = ( struct duplicate_flag_t * ) u		4121947	0					
ANR	4121952	IdentifierDeclType	struct duplicate_flag_t *		4121947	0					
ANR	4121953	Identifier	user		4121947	1					
ANR	4121954	AssignmentExpression	* user = ( struct duplicate_flag_t * ) u		4121947	2		=			
ANR	4121955	Identifier	user		4121947	0					
ANR	4121956	CastExpression	( struct duplicate_flag_t * ) u		4121947	1					
ANR	4121957	CastTarget	struct duplicate_flag_t *		4121947	0					
ANR	4121958	Identifier	u		4121947	1					
ANR	4121959	IfStatement	"if ( r_str_glob ( flag -> name , user -> word ) )"		4121947	1					
ANR	4121960	Condition	"r_str_glob ( flag -> name , user -> word )"	3929:5:99066:99100	4121947	0	True				
ANR	4121961	CallExpression	"r_str_glob ( flag -> name , user -> word )"		4121947	0					
ANR	4121962	Callee	r_str_glob		4121947	0					
ANR	4121963	Identifier	r_str_glob		4121947	0					
ANR	4121964	ArgumentList	flag -> name		4121947	1					
ANR	4121965	Argument	flag -> name		4121947	0					
ANR	4121966	PtrMemberAccess	flag -> name		4121947	0					
ANR	4121967	Identifier	flag		4121947	0					
ANR	4121968	Identifier	name		4121947	1					
ANR	4121969	Argument	user -> word		4121947	1					
ANR	4121970	PtrMemberAccess	user -> word		4121947	0					
ANR	4121971	Identifier	user		4121947	0					
ANR	4121972	Identifier	word		4121947	1					
ANR	4121973	CompoundStatement		5:2:140:189	4121947	1					
ANR	4121974	IdentifierDeclStatement	RFlagItem * cloned_item = r_flag_item_clone ( flag ) ;	3930:2:99107:99156	4121947	0	True				
ANR	4121975	IdentifierDecl	* cloned_item = r_flag_item_clone ( flag )		4121947	0					
ANR	4121976	IdentifierDeclType	RFlagItem *		4121947	0					
ANR	4121977	Identifier	cloned_item		4121947	1					
ANR	4121978	AssignmentExpression	* cloned_item = r_flag_item_clone ( flag )		4121947	2		=			
ANR	4121979	Identifier	cloned_item		4121947	0					
ANR	4121980	CallExpression	r_flag_item_clone ( flag )		4121947	1					
ANR	4121981	Callee	r_flag_item_clone		4121947	0					
ANR	4121982	Identifier	r_flag_item_clone		4121947	0					
ANR	4121983	ArgumentList	flag		4121947	1					
ANR	4121984	Argument	flag		4121947	0					
ANR	4121985	Identifier	flag		4121947	0					
ANR	4121986	IfStatement	if ( ! cloned_item )		4121947	1					
ANR	4121987	Condition	! cloned_item	3931:6:99164:99175	4121947	0	True				
ANR	4121988	UnaryOperationExpression	! cloned_item		4121947	0					
ANR	4121989	UnaryOperator	!		4121947	0					
ANR	4121990	Identifier	cloned_item		4121947	1					
ANR	4121991	CompoundStatement		6:20:211:211	4121947	1					
ANR	4121992	ReturnStatement	return false ;	3932:3:99183:99195	4121947	0	True				
ANR	4121993	Identifier	false		4121947	0					
ANR	4121994	ExpressionStatement	"r_list_append ( user -> ret , cloned_item )"	3934:2:99203:99241	4121947	2	True				
ANR	4121995	CallExpression	"r_list_append ( user -> ret , cloned_item )"		4121947	0					
ANR	4121996	Callee	r_list_append		4121947	0					
ANR	4121997	Identifier	r_list_append		4121947	0					
ANR	4121998	ArgumentList	user -> ret		4121947	1					
ANR	4121999	Argument	user -> ret		4121947	0					
ANR	4122000	PtrMemberAccess	user -> ret		4121947	0					
ANR	4122001	Identifier	user		4121947	0					
ANR	4122002	Identifier	ret		4121947	1					
ANR	4122003	Argument	cloned_item		4121947	1					
ANR	4122004	Identifier	cloned_item		4121947	0					
ANR	4122005	ReturnStatement	return true ;	3936:1:99247:99258	4121947	2	True				
ANR	4122006	Identifier	true		4121947	0					
ANR	4122007	ReturnType	static bool		4121947	1					
ANR	4122008	Identifier	duplicate_flag		4121947	2					
ANR	4122009	ParameterList	"RFlagItem * flag , void * u"		4121947	3					
ANR	4122010	Parameter	RFlagItem * flag	3926:27:98940:98954	4121947	0	True				
ANR	4122011	ParameterType	RFlagItem *		4121947	0					
ANR	4122012	Identifier	flag		4121947	1					
ANR	4122013	Parameter	void * u	3926:44:98957:98963	4121947	1	True				
ANR	4122014	ParameterType	void *		4121947	0					
ANR	4122015	Identifier	u		4121947	1					
ANR	4122016	CFGEntryNode	ENTRY		4121947		True				
ANR	4122017	CFGExitNode	EXIT		4121947		True				
ANR	4122018	Symbol	user -> word		4121947						
ANR	4122019	Symbol	flag		4121947						
ANR	4122020	Symbol	* user		4121947						
ANR	4122021	Symbol	flag -> name		4121947						
ANR	4122022	Symbol	false		4121947						
ANR	4122023	Symbol	cloned_item		4121947						
ANR	4122024	Symbol	user -> ret		4121947						
ANR	4122025	Symbol	r_str_glob		4121947						
ANR	4122026	Symbol	u		4121947						
ANR	4122027	Symbol	r_flag_item_clone		4121947						
ANR	4122028	Symbol	true		4121947						
ANR	4122029	Symbol	* flag		4121947						
ANR	4122030	Symbol	user		4121947						
ANR	4122031	Function	r_core_cmd_foreach	3939:0:99263:107464							
ANR	4122032	FunctionDef	"r_core_cmd_foreach (RCore * core , const char * cmd , char * each)"		4122031	0					
ANR	4122033	CompoundStatement		3939:71:99334:107464	4122031	0					
ANR	4122034	IdentifierDeclStatement	"int i , j ;"	3940:1:99337:99345	4122031	0	True				
ANR	4122035	IdentifierDecl	i		4122031	0					
ANR	4122036	IdentifierDeclType	int		4122031	0					
ANR	4122037	Identifier	i		4122031	1					
ANR	4122038	IdentifierDecl	j		4122031	1					
ANR	4122039	IdentifierDeclType	int		4122031	0					
ANR	4122040	Identifier	j		4122031	1					
ANR	4122041	IdentifierDeclStatement	char ch ;	3941:1:99348:99355	4122031	1	True				
ANR	4122042	IdentifierDecl	ch		4122031	0					
ANR	4122043	IdentifierDeclType	char		4122031	0					
ANR	4122044	Identifier	ch		4122031	1					
ANR	4122045	IdentifierDeclStatement	char * word = NULL ;	3942:1:99358:99375	4122031	2	True				
ANR	4122046	IdentifierDecl	* word = NULL		4122031	0					
ANR	4122047	IdentifierDeclType	char *		4122031	0					
ANR	4122048	Identifier	word		4122031	1					
ANR	4122049	AssignmentExpression	* word = NULL		4122031	2		=			
ANR	4122050	Identifier	NULL		4122031	0					
ANR	4122051	Identifier	NULL		4122031	1					
ANR	4122052	IdentifierDeclStatement	"char * str , * ostr = NULL ;"	3943:1:99378:99401	4122031	3	True				
ANR	4122053	IdentifierDecl	* str		4122031	0					
ANR	4122054	IdentifierDeclType	char *		4122031	0					
ANR	4122055	Identifier	str		4122031	1					
ANR	4122056	IdentifierDecl	* ostr = NULL		4122031	1					
ANR	4122057	IdentifierDeclType	char *		4122031	0					
ANR	4122058	Identifier	ostr		4122031	1					
ANR	4122059	AssignmentExpression	* ostr = NULL		4122031	2		=			
ANR	4122060	Identifier	NULL		4122031	0					
ANR	4122061	Identifier	NULL		4122031	1					
ANR	4122062	IdentifierDeclStatement	RListIter * iter ;	3944:1:99404:99419	4122031	4	True				
ANR	4122063	IdentifierDecl	* iter		4122031	0					
ANR	4122064	IdentifierDeclType	RListIter *		4122031	0					
ANR	4122065	Identifier	iter		4122031	1					
ANR	4122066	IdentifierDeclStatement	RFlagItem * flag ;	3945:1:99422:99437	4122031	5	True				
ANR	4122067	IdentifierDecl	* flag		4122031	0					
ANR	4122068	IdentifierDeclType	RFlagItem *		4122031	0					
ANR	4122069	Identifier	flag		4122031	1					
ANR	4122070	IdentifierDeclStatement	"ut64 oseek , addr ;"	3946:1:99440:99456	4122031	6	True				
ANR	4122071	IdentifierDecl	oseek		4122031	0					
ANR	4122072	IdentifierDeclType	ut64		4122031	0					
ANR	4122073	Identifier	oseek		4122031	1					
ANR	4122074	IdentifierDecl	addr		4122031	1					
ANR	4122075	IdentifierDeclType	ut64		4122031	0					
ANR	4122076	Identifier	addr		4122031	1					
ANR	4122077	ForStatement	for ( ; * cmd == ' ' ; cmd ++ )		4122031	7					
ANR	4122078	Condition	* cmd == ' '	3948:8:99467:99477	4122031	0	True				
ANR	4122079	EqualityExpression	* cmd == ' '		4122031	0		==			
ANR	4122080	UnaryOperationExpression	* cmd		4122031	0					
ANR	4122081	UnaryOperator	*		4122031	0					
ANR	4122082	Identifier	cmd		4122031	1					
ANR	4122083	PrimaryExpression	' '		4122031	1					
ANR	4122084	PostIncDecOperationExpression	cmd ++	3948:21:99480:99484	4122031	1	True				
ANR	4122085	Identifier	cmd		4122031	0					
ANR	4122086	IncDec	++		4122031	1					
ANR	4122087	CompoundStatement		10:28:152:152	4122031	2					
ANR	4122088	ExpressionStatement		3949:2:99491:99491	4122031	0	True				
ANR	4122089	ExpressionStatement	oseek = core -> offset	3952:1:99498:99518	4122031	8	True				
ANR	4122090	AssignmentExpression	oseek = core -> offset		4122031	0		=			
ANR	4122091	Identifier	oseek		4122031	0					
ANR	4122092	PtrMemberAccess	core -> offset		4122031	1					
ANR	4122093	Identifier	core		4122031	0					
ANR	4122094	Identifier	offset		4122031	1					
ANR	4122095	ExpressionStatement	ostr = str = strdup ( each )	3953:1:99521:99547	4122031	9	True				
ANR	4122096	AssignmentExpression	ostr = str = strdup ( each )		4122031	0		=			
ANR	4122097	Identifier	ostr		4122031	0					
ANR	4122098	AssignmentExpression	str = strdup ( each )		4122031	1		=			
ANR	4122099	Identifier	str		4122031	0					
ANR	4122100	CallExpression	strdup ( each )		4122031	1					
ANR	4122101	Callee	strdup		4122031	0					
ANR	4122102	Identifier	strdup		4122031	0					
ANR	4122103	ArgumentList	each		4122031	1					
ANR	4122104	Argument	each		4122031	0					
ANR	4122105	Identifier	each		4122031	0					
ANR	4122106	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3954:1:99550:99580	4122031	10	True				
ANR	4122107	CallExpression	"r_cons_break_push ( NULL , NULL )"		4122031	0					
ANR	4122108	Callee	r_cons_break_push		4122031	0					
ANR	4122109	Identifier	r_cons_break_push		4122031	0					
ANR	4122110	ArgumentList	NULL		4122031	1					
ANR	4122111	Argument	NULL		4122031	0					
ANR	4122112	Identifier	NULL		4122031	0					
ANR	4122113	Argument	NULL		4122031	1					
ANR	4122114	Identifier	NULL		4122031	0					
ANR	4122115	SwitchStatement	switch ( each [ 0 ] )		4122031	11					
ANR	4122116	Condition	each [ 0 ]	3955:9:99607:99613	4122031	0	True				
ANR	4122117	ArrayIndexing	each [ 0 ]		4122031	0					
ANR	4122118	Identifier	each		4122031	0					
ANR	4122119	PrimaryExpression	0		4122031	1					
ANR	4122120	CompoundStatement		17:18:281:281	4122031	1					
ANR	4122121	Label	case '/' :	3956:1:99619:99627	4122031	0	True				
ANR	4122122	CompoundStatement		20:2:309:371	4122031	1					
ANR	4122123	IdentifierDeclStatement	"char * cmdhit = strdup ( r_config_get ( core -> config , ""cmd.hit"" ) ) ;"	3958:2:99644:99706	4122031	0	True				
ANR	4122124	IdentifierDecl	"* cmdhit = strdup ( r_config_get ( core -> config , ""cmd.hit"" ) )"		4122031	0					
ANR	4122125	IdentifierDeclType	char *		4122031	0					
ANR	4122126	Identifier	cmdhit		4122031	1					
ANR	4122127	AssignmentExpression	"* cmdhit = strdup ( r_config_get ( core -> config , ""cmd.hit"" ) )"		4122031	2		=			
ANR	4122128	Identifier	cmdhit		4122031	0					
ANR	4122129	CallExpression	"strdup ( r_config_get ( core -> config , ""cmd.hit"" ) )"		4122031	1					
ANR	4122130	Callee	strdup		4122031	0					
ANR	4122131	Identifier	strdup		4122031	0					
ANR	4122132	ArgumentList	"r_config_get ( core -> config , ""cmd.hit"" )"		4122031	1					
ANR	4122133	Argument	"r_config_get ( core -> config , ""cmd.hit"" )"		4122031	0					
ANR	4122134	CallExpression	"r_config_get ( core -> config , ""cmd.hit"" )"		4122031	0					
ANR	4122135	Callee	r_config_get		4122031	0					
ANR	4122136	Identifier	r_config_get		4122031	0					
ANR	4122137	ArgumentList	core -> config		4122031	1					
ANR	4122138	Argument	core -> config		4122031	0					
ANR	4122139	PtrMemberAccess	core -> config		4122031	0					
ANR	4122140	Identifier	core		4122031	0					
ANR	4122141	Identifier	config		4122031	1					
ANR	4122142	Argument	"""cmd.hit"""		4122031	1					
ANR	4122143	PrimaryExpression	"""cmd.hit"""		4122031	0					
ANR	4122144	ExpressionStatement	"r_config_set ( core -> config , ""cmd.hit"" , cmd )"	3959:2:99710:99753	4122031	1	True				
ANR	4122145	CallExpression	"r_config_set ( core -> config , ""cmd.hit"" , cmd )"		4122031	0					
ANR	4122146	Callee	r_config_set		4122031	0					
ANR	4122147	Identifier	r_config_set		4122031	0					
ANR	4122148	ArgumentList	core -> config		4122031	1					
ANR	4122149	Argument	core -> config		4122031	0					
ANR	4122150	PtrMemberAccess	core -> config		4122031	0					
ANR	4122151	Identifier	core		4122031	0					
ANR	4122152	Identifier	config		4122031	1					
ANR	4122153	Argument	"""cmd.hit"""		4122031	1					
ANR	4122154	PrimaryExpression	"""cmd.hit"""		4122031	0					
ANR	4122155	Argument	cmd		4122031	2					
ANR	4122156	Identifier	cmd		4122031	0					
ANR	4122157	ExpressionStatement	"r_core_cmd0 ( core , each )"	3960:2:99757:99781	4122031	2	True				
ANR	4122158	CallExpression	"r_core_cmd0 ( core , each )"		4122031	0					
ANR	4122159	Callee	r_core_cmd0		4122031	0					
ANR	4122160	Identifier	r_core_cmd0		4122031	0					
ANR	4122161	ArgumentList	core		4122031	1					
ANR	4122162	Argument	core		4122031	0					
ANR	4122163	Identifier	core		4122031	0					
ANR	4122164	Argument	each		4122031	1					
ANR	4122165	Identifier	each		4122031	0					
ANR	4122166	ExpressionStatement	"r_config_set ( core -> config , ""cmd.hit"" , cmdhit )"	3961:2:99785:99831	4122031	3	True				
ANR	4122167	CallExpression	"r_config_set ( core -> config , ""cmd.hit"" , cmdhit )"		4122031	0					
ANR	4122168	Callee	r_config_set		4122031	0					
ANR	4122169	Identifier	r_config_set		4122031	0					
ANR	4122170	ArgumentList	core -> config		4122031	1					
ANR	4122171	Argument	core -> config		4122031	0					
ANR	4122172	PtrMemberAccess	core -> config		4122031	0					
ANR	4122173	Identifier	core		4122031	0					
ANR	4122174	Identifier	config		4122031	1					
ANR	4122175	Argument	"""cmd.hit"""		4122031	1					
ANR	4122176	PrimaryExpression	"""cmd.hit"""		4122031	0					
ANR	4122177	Argument	cmdhit		4122031	2					
ANR	4122178	Identifier	cmdhit		4122031	0					
ANR	4122179	ExpressionStatement	free ( cmdhit )	3962:2:99835:99848	4122031	4	True				
ANR	4122180	CallExpression	free ( cmdhit )		4122031	0					
ANR	4122181	Callee	free		4122031	0					
ANR	4122182	Identifier	free		4122031	0					
ANR	4122183	ArgumentList	cmdhit		4122031	1					
ANR	4122184	Argument	cmdhit		4122031	0					
ANR	4122185	Identifier	cmdhit		4122031	0					
ANR	4122186	ExpressionStatement	free ( ostr )	3964:2:99856:99867	4122031	2	True				
ANR	4122187	CallExpression	free ( ostr )		4122031	0					
ANR	4122188	Callee	free		4122031	0					
ANR	4122189	Identifier	free		4122031	0					
ANR	4122190	ArgumentList	ostr		4122031	1					
ANR	4122191	Argument	ostr		4122031	0					
ANR	4122192	Identifier	ostr		4122031	0					
ANR	4122193	ReturnStatement	return 0 ;	3965:2:99871:99879	4122031	3	True				
ANR	4122194	PrimaryExpression	0		4122031	0					
ANR	4122195	Label	case '?' :	3966:1:99882:99890	4122031	4	True				
ANR	4122196	ExpressionStatement	"r_core_cmd_help ( core , help_msg_at_at )"	3967:2:99903:99941	4122031	5	True				
ANR	4122197	CallExpression	"r_core_cmd_help ( core , help_msg_at_at )"		4122031	0					
ANR	4122198	Callee	r_core_cmd_help		4122031	0					
ANR	4122199	Identifier	r_core_cmd_help		4122031	0					
ANR	4122200	ArgumentList	core		4122031	1					
ANR	4122201	Argument	core		4122031	0					
ANR	4122202	Identifier	core		4122031	0					
ANR	4122203	Argument	help_msg_at_at		4122031	1					
ANR	4122204	Identifier	help_msg_at_at		4122031	0					
ANR	4122205	BreakStatement	break ;	3968:2:99945:99950	4122031	6	True				
ANR	4122206	Label	case 'b' :	3969:1:99953:99961	4122031	7	True				
ANR	4122207	CompoundStatement		36:3:780:804	4122031	8					
ANR	4122208	IdentifierDeclStatement	RListIter * iter ;	3971:3:100003:100018	4122031	0	True				
ANR	4122209	IdentifierDecl	* iter		4122031	0					
ANR	4122210	IdentifierDeclType	RListIter *		4122031	0					
ANR	4122211	Identifier	iter		4122031	1					
ANR	4122212	IdentifierDeclStatement	RAnalBlock * bb ;	3972:3:100023:100037	4122031	1	True				
ANR	4122213	IdentifierDecl	* bb		4122031	0					
ANR	4122214	IdentifierDeclType	RAnalBlock *		4122031	0					
ANR	4122215	Identifier	bb		4122031	1					
ANR	4122216	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 ) ;"	3973:3:100042:100110	4122031	2	True				
ANR	4122217	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4122031	0					
ANR	4122218	IdentifierDeclType	RAnalFunction *		4122031	0					
ANR	4122219	Identifier	fcn		4122031	1					
ANR	4122220	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4122031	2		=			
ANR	4122221	Identifier	fcn		4122031	0					
ANR	4122222	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4122031	1					
ANR	4122223	Callee	r_anal_get_fcn_at		4122031	0					
ANR	4122224	Identifier	r_anal_get_fcn_at		4122031	0					
ANR	4122225	ArgumentList	core -> anal		4122031	1					
ANR	4122226	Argument	core -> anal		4122031	0					
ANR	4122227	PtrMemberAccess	core -> anal		4122031	0					
ANR	4122228	Identifier	core		4122031	0					
ANR	4122229	Identifier	anal		4122031	1					
ANR	4122230	Argument	core -> offset		4122031	1					
ANR	4122231	PtrMemberAccess	core -> offset		4122031	0					
ANR	4122232	Identifier	core		4122031	0					
ANR	4122233	Identifier	offset		4122031	1					
ANR	4122234	Argument	0		4122031	2					
ANR	4122235	PrimaryExpression	0		4122031	0					
ANR	4122236	IdentifierDeclStatement	int bs = core -> blocksize ;	3974:3:100115:100139	4122031	3	True				
ANR	4122237	IdentifierDecl	bs = core -> blocksize		4122031	0					
ANR	4122238	IdentifierDeclType	int		4122031	0					
ANR	4122239	Identifier	bs		4122031	1					
ANR	4122240	AssignmentExpression	bs = core -> blocksize		4122031	2		=			
ANR	4122241	Identifier	bs		4122031	0					
ANR	4122242	PtrMemberAccess	core -> blocksize		4122031	1					
ANR	4122243	Identifier	core		4122031	0					
ANR	4122244	Identifier	blocksize		4122031	1					
ANR	4122245	IfStatement	if ( fcn )		4122031	4					
ANR	4122246	Condition	fcn	3975:7:100148:100150	4122031	0	True				
ANR	4122247	Identifier	fcn		4122031	0					
ANR	4122248	CompoundStatement		37:12:818:818	4122031	1					
ANR	4122249	ExpressionStatement	"r_list_sort ( fcn -> bbs , bb_cmp )"	3976:4:100159:100189	4122031	0	True				
ANR	4122250	CallExpression	"r_list_sort ( fcn -> bbs , bb_cmp )"		4122031	0					
ANR	4122251	Callee	r_list_sort		4122031	0					
ANR	4122252	Identifier	r_list_sort		4122031	0					
ANR	4122253	ArgumentList	fcn -> bbs		4122031	1					
ANR	4122254	Argument	fcn -> bbs		4122031	0					
ANR	4122255	PtrMemberAccess	fcn -> bbs		4122031	0					
ANR	4122256	Identifier	fcn		4122031	0					
ANR	4122257	Identifier	bbs		4122031	1					
ANR	4122258	Argument	bb_cmp		4122031	1					
ANR	4122259	Identifier	bb_cmp		4122031	0					
ANR	4122260	Statement	r_list_foreach	3977:4:100195:100208	4122031	1	True				
ANR	4122261	Statement	(	3977:19:100210:100210	4122031	2	True				
ANR	4122262	Statement	fcn	3977:20:100211:100213	4122031	3	True				
ANR	4122263	Statement	->	3977:23:100214:100215	4122031	4	True				
ANR	4122264	Statement	bbs	3977:25:100216:100218	4122031	5	True				
ANR	4122265	Statement	","	3977:28:100219:100219	4122031	6	True				
ANR	4122266	Statement	iter	3977:30:100221:100224	4122031	7	True				
ANR	4122267	Statement	","	3977:34:100225:100225	4122031	8	True				
ANR	4122268	Statement	bb	3977:36:100227:100228	4122031	9	True				
ANR	4122269	Statement	)	3977:38:100229:100229	4122031	10	True				
ANR	4122270	CompoundStatement		39:40:896:896	4122031	11					
ANR	4122271	ExpressionStatement	"r_core_block_size ( core , bb -> size )"	3978:5:100238:100272	4122031	0	True				
ANR	4122272	CallExpression	"r_core_block_size ( core , bb -> size )"		4122031	0					
ANR	4122273	Callee	r_core_block_size		4122031	0					
ANR	4122274	Identifier	r_core_block_size		4122031	0					
ANR	4122275	ArgumentList	core		4122031	1					
ANR	4122276	Argument	core		4122031	0					
ANR	4122277	Identifier	core		4122031	0					
ANR	4122278	Argument	bb -> size		4122031	1					
ANR	4122279	PtrMemberAccess	bb -> size		4122031	0					
ANR	4122280	Identifier	bb		4122031	0					
ANR	4122281	Identifier	size		4122031	1					
ANR	4122282	ExpressionStatement	"r_core_seek ( core , bb -> addr , 1 )"	3979:5:100279:100310	4122031	1	True				
ANR	4122283	CallExpression	"r_core_seek ( core , bb -> addr , 1 )"		4122031	0					
ANR	4122284	Callee	r_core_seek		4122031	0					
ANR	4122285	Identifier	r_core_seek		4122031	0					
ANR	4122286	ArgumentList	core		4122031	1					
ANR	4122287	Argument	core		4122031	0					
ANR	4122288	Identifier	core		4122031	0					
ANR	4122289	Argument	bb -> addr		4122031	1					
ANR	4122290	PtrMemberAccess	bb -> addr		4122031	0					
ANR	4122291	Identifier	bb		4122031	0					
ANR	4122292	Identifier	addr		4122031	1					
ANR	4122293	Argument	1		4122031	2					
ANR	4122294	PrimaryExpression	1		4122031	0					
ANR	4122295	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	3980:5:100317:100342	4122031	2	True				
ANR	4122296	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4122297	Callee	r_core_cmd		4122031	0					
ANR	4122298	Identifier	r_core_cmd		4122031	0					
ANR	4122299	ArgumentList	core		4122031	1					
ANR	4122300	Argument	core		4122031	0					
ANR	4122301	Identifier	core		4122031	0					
ANR	4122302	Argument	cmd		4122031	1					
ANR	4122303	Identifier	cmd		4122031	0					
ANR	4122304	Argument	0		4122031	2					
ANR	4122305	PrimaryExpression	0		4122031	0					
ANR	4122306	IfStatement	if ( r_cons_is_breaked ( ) )		4122031	3					
ANR	4122307	Condition	r_cons_is_breaked ( )	3981:9:100353:100372	4122031	0	True				
ANR	4122308	CallExpression	r_cons_is_breaked ( )		4122031	0					
ANR	4122309	Callee	r_cons_is_breaked		4122031	0					
ANR	4122310	Identifier	r_cons_is_breaked		4122031	0					
ANR	4122311	ArgumentList			4122031	1					
ANR	4122312	CompoundStatement		43:31:1040:1040	4122031	1					
ANR	4122313	BreakStatement	break ;	3982:6:100383:100388	4122031	0	True				
ANR	4122314	ExpressionStatement	"r_core_block_size ( core , bs )"	3986:3:100411:100439	4122031	5	True				
ANR	4122315	CallExpression	"r_core_block_size ( core , bs )"		4122031	0					
ANR	4122316	Callee	r_core_block_size		4122031	0					
ANR	4122317	Identifier	r_core_block_size		4122031	0					
ANR	4122318	ArgumentList	core		4122031	1					
ANR	4122319	Argument	core		4122031	0					
ANR	4122320	Identifier	core		4122031	0					
ANR	4122321	Argument	bs		4122031	1					
ANR	4122322	Identifier	bs		4122031	0					
ANR	4122323	GotoStatement	goto out_finish ;	3987:3:100444:100459	4122031	6	True				
ANR	4122324	Identifier	out_finish		4122031	0					
ANR	4122325	BreakStatement	break ;	3989:2:100467:100472	4122031	9	True				
ANR	4122326	Label	case 's' :	3990:1:100475:100483	4122031	10	True				
ANR	4122327	CompoundStatement		58:3:1255:1289	4122031	11					
ANR	4122328	IdentifierDeclStatement	char * str = each + 1 ;	3992:3:100512:100532	4122031	0	True				
ANR	4122329	IdentifierDecl	* str = each + 1		4122031	0					
ANR	4122330	IdentifierDeclType	char *		4122031	0					
ANR	4122331	Identifier	str		4122031	1					
ANR	4122332	AssignmentExpression	* str = each + 1		4122031	2		=			
ANR	4122333	Identifier	str		4122031	0					
ANR	4122334	AdditiveExpression	each + 1		4122031	1		+			
ANR	4122335	Identifier	each		4122031	0					
ANR	4122336	PrimaryExpression	1		4122031	1					
ANR	4122337	IfStatement	if ( * str == ':' || * str == ' ' )		4122031	1					
ANR	4122338	Condition	* str == ':' || * str == ' '	3993:7:100541:100566	4122031	0	True				
ANR	4122339	OrExpression	* str == ':' || * str == ' '		4122031	0		||			
ANR	4122340	EqualityExpression	* str == ':'		4122031	0		==			
ANR	4122341	UnaryOperationExpression	* str		4122031	0					
ANR	4122342	UnaryOperator	*		4122031	0					
ANR	4122343	Identifier	str		4122031	1					
ANR	4122344	PrimaryExpression	':'		4122031	1					
ANR	4122345	EqualityExpression	* str == ' '		4122031	1		==			
ANR	4122346	UnaryOperationExpression	* str		4122031	0					
ANR	4122347	UnaryOperator	*		4122031	0					
ANR	4122348	Identifier	str		4122031	1					
ANR	4122349	PrimaryExpression	' '		4122031	1					
ANR	4122350	CompoundStatement		55:35:1234:1234	4122031	1					
ANR	4122351	ExpressionStatement	str ++	3994:4:100575:100580	4122031	0	True				
ANR	4122352	PostIncDecOperationExpression	str ++		4122031	0					
ANR	4122353	Identifier	str		4122031	0					
ANR	4122354	IncDec	++		4122031	1					
ANR	4122355	IdentifierDeclStatement	"int count = r_str_split ( str , ' ' ) ;"	3996:3:100590:100624	4122031	2	True				
ANR	4122356	IdentifierDecl	"count = r_str_split ( str , ' ' )"		4122031	0					
ANR	4122357	IdentifierDeclType	int		4122031	0					
ANR	4122358	Identifier	count		4122031	1					
ANR	4122359	AssignmentExpression	"count = r_str_split ( str , ' ' )"		4122031	2		=			
ANR	4122360	Identifier	count		4122031	0					
ANR	4122361	CallExpression	"r_str_split ( str , ' ' )"		4122031	1					
ANR	4122362	Callee	r_str_split		4122031	0					
ANR	4122363	Identifier	r_str_split		4122031	0					
ANR	4122364	ArgumentList	str		4122031	1					
ANR	4122365	Argument	str		4122031	0					
ANR	4122366	Identifier	str		4122031	0					
ANR	4122367	Argument	' '		4122031	1					
ANR	4122368	PrimaryExpression	' '		4122031	0					
ANR	4122369	IfStatement	if ( count == 3 )		4122031	3					
ANR	4122370	Condition	count == 3	3997:7:100633:100642	4122031	0	True				
ANR	4122371	EqualityExpression	count == 3		4122031	0		==			
ANR	4122372	Identifier	count		4122031	0					
ANR	4122373	PrimaryExpression	3		4122031	1					
ANR	4122374	CompoundStatement		63:4:1460:1520	4122031	1					
ANR	4122375	IdentifierDeclStatement	ut64 cur ;	3998:4:100651:100659	4122031	0	True				
ANR	4122376	IdentifierDecl	cur		4122031	0					
ANR	4122377	IdentifierDeclType	ut64		4122031	0					
ANR	4122378	Identifier	cur		4122031	1					
ANR	4122379	IdentifierDeclStatement	"ut64 from = r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) ) ;"	3999:4:100665:100725	4122031	1	True				
ANR	4122380	IdentifierDecl	"from = r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) )"		4122031	0					
ANR	4122381	IdentifierDeclType	ut64		4122031	0					
ANR	4122382	Identifier	from		4122031	1					
ANR	4122383	AssignmentExpression	"from = r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) )"		4122031	2		=			
ANR	4122384	Identifier	from		4122031	0					
ANR	4122385	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( str , 0 ) )"		4122031	1					
ANR	4122386	Callee	r_num_math		4122031	0					
ANR	4122387	Identifier	r_num_math		4122031	0					
ANR	4122388	ArgumentList	core -> num		4122031	1					
ANR	4122389	Argument	core -> num		4122031	0					
ANR	4122390	PtrMemberAccess	core -> num		4122031	0					
ANR	4122391	Identifier	core		4122031	0					
ANR	4122392	Identifier	num		4122031	1					
ANR	4122393	Argument	"r_str_word_get0 ( str , 0 )"		4122031	1					
ANR	4122394	CallExpression	"r_str_word_get0 ( str , 0 )"		4122031	0					
ANR	4122395	Callee	r_str_word_get0		4122031	0					
ANR	4122396	Identifier	r_str_word_get0		4122031	0					
ANR	4122397	ArgumentList	str		4122031	1					
ANR	4122398	Argument	str		4122031	0					
ANR	4122399	Identifier	str		4122031	0					
ANR	4122400	Argument	0		4122031	1					
ANR	4122401	PrimaryExpression	0		4122031	0					
ANR	4122402	IdentifierDeclStatement	"ut64 to = r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) ) ;"	4000:4:100731:100789	4122031	2	True				
ANR	4122403	IdentifierDecl	"to = r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) )"		4122031	0					
ANR	4122404	IdentifierDeclType	ut64		4122031	0					
ANR	4122405	Identifier	to		4122031	1					
ANR	4122406	AssignmentExpression	"to = r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) )"		4122031	2		=			
ANR	4122407	Identifier	to		4122031	0					
ANR	4122408	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( str , 1 ) )"		4122031	1					
ANR	4122409	Callee	r_num_math		4122031	0					
ANR	4122410	Identifier	r_num_math		4122031	0					
ANR	4122411	ArgumentList	core -> num		4122031	1					
ANR	4122412	Argument	core -> num		4122031	0					
ANR	4122413	PtrMemberAccess	core -> num		4122031	0					
ANR	4122414	Identifier	core		4122031	0					
ANR	4122415	Identifier	num		4122031	1					
ANR	4122416	Argument	"r_str_word_get0 ( str , 1 )"		4122031	1					
ANR	4122417	CallExpression	"r_str_word_get0 ( str , 1 )"		4122031	0					
ANR	4122418	Callee	r_str_word_get0		4122031	0					
ANR	4122419	Identifier	r_str_word_get0		4122031	0					
ANR	4122420	ArgumentList	str		4122031	1					
ANR	4122421	Argument	str		4122031	0					
ANR	4122422	Identifier	str		4122031	0					
ANR	4122423	Argument	1		4122031	1					
ANR	4122424	PrimaryExpression	1		4122031	0					
ANR	4122425	IdentifierDeclStatement	"ut64 step = r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) ) ;"	4001:4:100795:100855	4122031	3	True				
ANR	4122426	IdentifierDecl	"step = r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) )"		4122031	0					
ANR	4122427	IdentifierDeclType	ut64		4122031	0					
ANR	4122428	Identifier	step		4122031	1					
ANR	4122429	AssignmentExpression	"step = r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) )"		4122031	2		=			
ANR	4122430	Identifier	step		4122031	0					
ANR	4122431	CallExpression	"r_num_math ( core -> num , r_str_word_get0 ( str , 2 ) )"		4122031	1					
ANR	4122432	Callee	r_num_math		4122031	0					
ANR	4122433	Identifier	r_num_math		4122031	0					
ANR	4122434	ArgumentList	core -> num		4122031	1					
ANR	4122435	Argument	core -> num		4122031	0					
ANR	4122436	PtrMemberAccess	core -> num		4122031	0					
ANR	4122437	Identifier	core		4122031	0					
ANR	4122438	Identifier	num		4122031	1					
ANR	4122439	Argument	"r_str_word_get0 ( str , 2 )"		4122031	1					
ANR	4122440	CallExpression	"r_str_word_get0 ( str , 2 )"		4122031	0					
ANR	4122441	Callee	r_str_word_get0		4122031	0					
ANR	4122442	Identifier	r_str_word_get0		4122031	0					
ANR	4122443	ArgumentList	str		4122031	1					
ANR	4122444	Argument	str		4122031	0					
ANR	4122445	Identifier	str		4122031	0					
ANR	4122446	Argument	2		4122031	1					
ANR	4122447	PrimaryExpression	2		4122031	0					
ANR	4122448	ForStatement	for ( cur = from ; cur < to ; cur += step )		4122031	4					
ANR	4122449	ForInit	cur = from ;	4002:9:100866:100876	4122031	0	True				
ANR	4122450	AssignmentExpression	cur = from		4122031	0		=			
ANR	4122451	Identifier	cur		4122031	0					
ANR	4122452	Identifier	from		4122031	1					
ANR	4122453	Condition	cur < to	4002:21:100878:100885	4122031	1	True				
ANR	4122454	RelationalExpression	cur < to		4122031	0		<			
ANR	4122455	Identifier	cur		4122031	0					
ANR	4122456	Identifier	to		4122031	1					
ANR	4122457	AssignmentExpression	cur += step	4002:31:100888:100898	4122031	2	True	+=			
ANR	4122458	Identifier	cur		4122031	0					
ANR	4122459	Identifier	step		4122031	1					
ANR	4122460	CompoundStatement		64:44:1566:1566	4122031	3					
ANR	4122461	ExpressionStatement	"( void ) r_core_seek ( core , cur , 1 )"	4003:5:100908:100940	4122031	0	True				
ANR	4122462	CastExpression	"( void ) r_core_seek ( core , cur , 1 )"		4122031	0					
ANR	4122463	CastTarget	void		4122031	0					
ANR	4122464	CallExpression	"r_core_seek ( core , cur , 1 )"		4122031	1					
ANR	4122465	Callee	r_core_seek		4122031	0					
ANR	4122466	Identifier	r_core_seek		4122031	0					
ANR	4122467	ArgumentList	core		4122031	1					
ANR	4122468	Argument	core		4122031	0					
ANR	4122469	Identifier	core		4122031	0					
ANR	4122470	Argument	cur		4122031	1					
ANR	4122471	Identifier	cur		4122031	0					
ANR	4122472	Argument	1		4122031	2					
ANR	4122473	PrimaryExpression	1		4122031	0					
ANR	4122474	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4004:5:100947:100972	4122031	1	True				
ANR	4122475	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4122476	Callee	r_core_cmd		4122031	0					
ANR	4122477	Identifier	r_core_cmd		4122031	0					
ANR	4122478	ArgumentList	core		4122031	1					
ANR	4122479	Argument	core		4122031	0					
ANR	4122480	Identifier	core		4122031	0					
ANR	4122481	Argument	cmd		4122031	1					
ANR	4122482	Identifier	cmd		4122031	0					
ANR	4122483	Argument	0		4122031	2					
ANR	4122484	PrimaryExpression	0		4122031	0					
ANR	4122485	IfStatement	if ( r_cons_is_breaked ( ) )		4122031	2					
ANR	4122486	Condition	r_cons_is_breaked ( )	4005:9:100983:101002	4122031	0	True				
ANR	4122487	CallExpression	r_cons_is_breaked ( )		4122031	0					
ANR	4122488	Callee	r_cons_is_breaked		4122031	0					
ANR	4122489	Identifier	r_cons_is_breaked		4122031	0					
ANR	4122490	ArgumentList			4122031	1					
ANR	4122491	CompoundStatement		67:31:1670:1670	4122031	1					
ANR	4122492	BreakStatement	break ;	4006:6:101013:101018	4122031	0	True				
ANR	4122493	ElseStatement	else		4122031	0					
ANR	4122494	CompoundStatement		71:10:1708:1708	4122031	0					
ANR	4122495	ExpressionStatement	"eprintf ( ""Usage: cmd @@s:from to step\\n"" )"	4010:4:101049:101090	4122031	0	True				
ANR	4122496	CallExpression	"eprintf ( ""Usage: cmd @@s:from to step\\n"" )"		4122031	0					
ANR	4122497	Callee	eprintf		4122031	0					
ANR	4122498	Identifier	eprintf		4122031	0					
ANR	4122499	ArgumentList	"""Usage: cmd @@s:from to step\\n"""		4122031	1					
ANR	4122500	Argument	"""Usage: cmd @@s:from to step\\n"""		4122031	0					
ANR	4122501	PrimaryExpression	"""Usage: cmd @@s:from to step\\n"""		4122031	0					
ANR	4122502	GotoStatement	goto out_finish ;	4012:3:101100:101115	4122031	4	True				
ANR	4122503	Identifier	out_finish		4122031	0					
ANR	4122504	BreakStatement	break ;	4014:2:101123:101128	4122031	12	True				
ANR	4122505	Label	case 'i' :	4015:1:101131:101139	4122031	13	True				
ANR	4122506	CompoundStatement		82:3:1895:1963	4122031	14					
ANR	4122507	IdentifierDeclStatement	RListIter * iter ;	4017:3:101181:101196	4122031	0	True				
ANR	4122508	IdentifierDecl	* iter		4122031	0					
ANR	4122509	IdentifierDeclType	RListIter *		4122031	0					
ANR	4122510	Identifier	iter		4122031	1					
ANR	4122511	IdentifierDeclStatement	RAnalBlock * bb ;	4018:3:101201:101215	4122031	1	True				
ANR	4122512	IdentifierDecl	* bb		4122031	0					
ANR	4122513	IdentifierDeclType	RAnalBlock *		4122031	0					
ANR	4122514	Identifier	bb		4122031	1					
ANR	4122515	IdentifierDeclStatement	int i ;	4019:3:101220:101225	4122031	2	True				
ANR	4122516	IdentifierDecl	i		4122031	0					
ANR	4122517	IdentifierDeclType	int		4122031	0					
ANR	4122518	Identifier	i		4122031	1					
ANR	4122519	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 ) ;"	4020:3:101230:101298	4122031	3	True				
ANR	4122520	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4122031	0					
ANR	4122521	IdentifierDeclType	RAnalFunction *		4122031	0					
ANR	4122522	Identifier	fcn		4122031	1					
ANR	4122523	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4122031	2		=			
ANR	4122524	Identifier	fcn		4122031	0					
ANR	4122525	CallExpression	"r_anal_get_fcn_at ( core -> anal , core -> offset , 0 )"		4122031	1					
ANR	4122526	Callee	r_anal_get_fcn_at		4122031	0					
ANR	4122527	Identifier	r_anal_get_fcn_at		4122031	0					
ANR	4122528	ArgumentList	core -> anal		4122031	1					
ANR	4122529	Argument	core -> anal		4122031	0					
ANR	4122530	PtrMemberAccess	core -> anal		4122031	0					
ANR	4122531	Identifier	core		4122031	0					
ANR	4122532	Identifier	anal		4122031	1					
ANR	4122533	Argument	core -> offset		4122031	1					
ANR	4122534	PtrMemberAccess	core -> offset		4122031	0					
ANR	4122535	Identifier	core		4122031	0					
ANR	4122536	Identifier	offset		4122031	1					
ANR	4122537	Argument	0		4122031	2					
ANR	4122538	PrimaryExpression	0		4122031	0					
ANR	4122539	IfStatement	if ( fcn )		4122031	4					
ANR	4122540	Condition	fcn	4021:7:101307:101309	4122031	0	True				
ANR	4122541	Identifier	fcn		4122031	0					
ANR	4122542	CompoundStatement		83:12:1977:1977	4122031	1					
ANR	4122543	ExpressionStatement	"r_list_sort ( fcn -> bbs , bb_cmp )"	4022:4:101318:101348	4122031	0	True				
ANR	4122544	CallExpression	"r_list_sort ( fcn -> bbs , bb_cmp )"		4122031	0					
ANR	4122545	Callee	r_list_sort		4122031	0					
ANR	4122546	Identifier	r_list_sort		4122031	0					
ANR	4122547	ArgumentList	fcn -> bbs		4122031	1					
ANR	4122548	Argument	fcn -> bbs		4122031	0					
ANR	4122549	PtrMemberAccess	fcn -> bbs		4122031	0					
ANR	4122550	Identifier	fcn		4122031	0					
ANR	4122551	Identifier	bbs		4122031	1					
ANR	4122552	Argument	bb_cmp		4122031	1					
ANR	4122553	Identifier	bb_cmp		4122031	0					
ANR	4122554	Statement	r_list_foreach	4023:4:101354:101367	4122031	1	True				
ANR	4122555	Statement	(	4023:19:101369:101369	4122031	2	True				
ANR	4122556	Statement	fcn	4023:20:101370:101372	4122031	3	True				
ANR	4122557	Statement	->	4023:23:101373:101374	4122031	4	True				
ANR	4122558	Statement	bbs	4023:25:101375:101377	4122031	5	True				
ANR	4122559	Statement	","	4023:28:101378:101378	4122031	6	True				
ANR	4122560	Statement	iter	4023:30:101380:101383	4122031	7	True				
ANR	4122561	Statement	","	4023:34:101384:101384	4122031	8	True				
ANR	4122562	Statement	bb	4023:36:101386:101387	4122031	9	True				
ANR	4122563	Statement	)	4023:38:101388:101388	4122031	10	True				
ANR	4122564	CompoundStatement		85:40:2055:2055	4122031	11					
ANR	4122565	ForStatement	for ( i = 0 ; i < bb -> op_pos_size ; i ++ )		4122031	0					
ANR	4122566	ForInit	i = 0 ;	4024:10:101402:101407	4122031	0	True				
ANR	4122567	AssignmentExpression	i = 0		4122031	0		=			
ANR	4122568	Identifier	i		4122031	0					
ANR	4122569	PrimaryExpression	0		4122031	1					
ANR	4122570	Condition	i < bb -> op_pos_size	4024:17:101409:101427	4122031	1	True				
ANR	4122571	RelationalExpression	i < bb -> op_pos_size		4122031	0		<			
ANR	4122572	Identifier	i		4122031	0					
ANR	4122573	PtrMemberAccess	bb -> op_pos_size		4122031	1					
ANR	4122574	Identifier	bb		4122031	0					
ANR	4122575	Identifier	op_pos_size		4122031	1					
ANR	4122576	PostIncDecOperationExpression	i ++	4024:38:101430:101432	4122031	2	True				
ANR	4122577	Identifier	i		4122031	0					
ANR	4122578	IncDec	++		4122031	1					
ANR	4122579	CompoundStatement		87:6:2108:2144	4122031	3					
ANR	4122580	IdentifierDeclStatement	ut64 addr = bb -> addr + bb -> op_pos [ i ] ;	4025:6:101443:101479	4122031	0	True				
ANR	4122581	IdentifierDecl	addr = bb -> addr + bb -> op_pos [ i ]		4122031	0					
ANR	4122582	IdentifierDeclType	ut64		4122031	0					
ANR	4122583	Identifier	addr		4122031	1					
ANR	4122584	AssignmentExpression	addr = bb -> addr + bb -> op_pos [ i ]		4122031	2		=			
ANR	4122585	Identifier	addr		4122031	0					
ANR	4122586	AdditiveExpression	bb -> addr + bb -> op_pos [ i ]		4122031	1		+			
ANR	4122587	PtrMemberAccess	bb -> addr		4122031	0					
ANR	4122588	Identifier	bb		4122031	0					
ANR	4122589	Identifier	addr		4122031	1					
ANR	4122590	ArrayIndexing	bb -> op_pos [ i ]		4122031	1					
ANR	4122591	PtrMemberAccess	bb -> op_pos		4122031	0					
ANR	4122592	Identifier	bb		4122031	0					
ANR	4122593	Identifier	op_pos		4122031	1					
ANR	4122594	Identifier	i		4122031	1					
ANR	4122595	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4026:6:101487:101514	4122031	1	True				
ANR	4122596	CallExpression	"r_core_seek ( core , addr , 1 )"		4122031	0					
ANR	4122597	Callee	r_core_seek		4122031	0					
ANR	4122598	Identifier	r_core_seek		4122031	0					
ANR	4122599	ArgumentList	core		4122031	1					
ANR	4122600	Argument	core		4122031	0					
ANR	4122601	Identifier	core		4122031	0					
ANR	4122602	Argument	addr		4122031	1					
ANR	4122603	Identifier	addr		4122031	0					
ANR	4122604	Argument	1		4122031	2					
ANR	4122605	PrimaryExpression	1		4122031	0					
ANR	4122606	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4027:6:101522:101547	4122031	2	True				
ANR	4122607	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4122608	Callee	r_core_cmd		4122031	0					
ANR	4122609	Identifier	r_core_cmd		4122031	0					
ANR	4122610	ArgumentList	core		4122031	1					
ANR	4122611	Argument	core		4122031	0					
ANR	4122612	Identifier	core		4122031	0					
ANR	4122613	Argument	cmd		4122031	1					
ANR	4122614	Identifier	cmd		4122031	0					
ANR	4122615	Argument	0		4122031	2					
ANR	4122616	PrimaryExpression	0		4122031	0					
ANR	4122617	IfStatement	if ( r_cons_is_breaked ( ) )		4122031	3					
ANR	4122618	Condition	r_cons_is_breaked ( )	4028:10:101559:101578	4122031	0	True				
ANR	4122619	CallExpression	r_cons_is_breaked ( )		4122031	0					
ANR	4122620	Callee	r_cons_is_breaked		4122031	0					
ANR	4122621	Identifier	r_cons_is_breaked		4122031	0					
ANR	4122622	ArgumentList			4122031	1					
ANR	4122623	CompoundStatement		90:32:2246:2246	4122031	1					
ANR	4122624	BreakStatement	break ;	4029:7:101590:101595	4122031	0	True				
ANR	4122625	GotoStatement	goto out_finish ;	4034:3:101626:101641	4122031	5	True				
ANR	4122626	Identifier	out_finish		4122031	0					
ANR	4122627	BreakStatement	break ;	4036:2:101649:101654	4122031	15	True				
ANR	4122628	Label	case 'f' :	4037:1:101657:101665	4122031	16	True				
ANR	4122629	IfStatement	if ( each [ 1 ] == ':' )		4122031	17					
ANR	4122630	Condition	each [ 1 ] == ':'	4038:6:101682:101695	4122031	0	True				
ANR	4122631	EqualityExpression	each [ 1 ] == ':'		4122031	0		==			
ANR	4122632	ArrayIndexing	each [ 1 ]		4122031	0					
ANR	4122633	Identifier	each		4122031	0					
ANR	4122634	PrimaryExpression	1		4122031	1					
ANR	4122635	PrimaryExpression	':'		4122031	1					
ANR	4122636	CompoundStatement		102:3:2391:2406	4122031	1					
ANR	4122637	IdentifierDeclStatement	RAnalFunction * fcn ;	4039:3:101703:101721	4122031	0	True				
ANR	4122638	IdentifierDecl	* fcn		4122031	0					
ANR	4122639	IdentifierDeclType	RAnalFunction *		4122031	0					
ANR	4122640	Identifier	fcn		4122031	1					
ANR	4122641	IdentifierDeclStatement	RListIter * iter ;	4040:3:101726:101741	4122031	1	True				
ANR	4122642	IdentifierDecl	* iter		4122031	0					
ANR	4122643	IdentifierDeclType	RListIter *		4122031	0					
ANR	4122644	Identifier	iter		4122031	1					
ANR	4122645	IfStatement	if ( core -> anal )		4122031	2					
ANR	4122646	Condition	core -> anal	4041:7:101750:101759	4122031	0	True				
ANR	4122647	PtrMemberAccess	core -> anal		4122031	0					
ANR	4122648	Identifier	core		4122031	0					
ANR	4122649	Identifier	anal		4122031	1					
ANR	4122650	CompoundStatement		103:19:2427:2427	4122031	1					
ANR	4122651	Statement	r_list_foreach	4042:4:101768:101781	4122031	0	True				
ANR	4122652	Statement	(	4042:19:101783:101783	4122031	1	True				
ANR	4122653	Statement	core	4042:20:101784:101787	4122031	2	True				
ANR	4122654	Statement	->	4042:24:101788:101789	4122031	3	True				
ANR	4122655	Statement	anal	4042:26:101790:101793	4122031	4	True				
ANR	4122656	Statement	->	4042:30:101794:101795	4122031	5	True				
ANR	4122657	Statement	fcns	4042:32:101796:101799	4122031	6	True				
ANR	4122658	Statement	","	4042:36:101800:101800	4122031	7	True				
ANR	4122659	Statement	iter	4042:38:101802:101805	4122031	8	True				
ANR	4122660	Statement	","	4042:42:101806:101806	4122031	9	True				
ANR	4122661	Statement	fcn	4042:44:101808:101810	4122031	10	True				
ANR	4122662	Statement	)	4042:47:101811:101811	4122031	11	True				
ANR	4122663	CompoundStatement		104:49:2478:2478	4122031	12					
ANR	4122664	IfStatement	"if ( each [ 2 ] && strstr ( fcn -> name , each + 2 ) )"		4122031	0					
ANR	4122665	Condition	"each [ 2 ] && strstr ( fcn -> name , each + 2 )"	4043:9:101824:101862	4122031	0	True				
ANR	4122666	AndExpression	"each [ 2 ] && strstr ( fcn -> name , each + 2 )"		4122031	0		&&			
ANR	4122667	ArrayIndexing	each [ 2 ]		4122031	0					
ANR	4122668	Identifier	each		4122031	0					
ANR	4122669	PrimaryExpression	2		4122031	1					
ANR	4122670	CallExpression	"strstr ( fcn -> name , each + 2 )"		4122031	1					
ANR	4122671	Callee	strstr		4122031	0					
ANR	4122672	Identifier	strstr		4122031	0					
ANR	4122673	ArgumentList	fcn -> name		4122031	1					
ANR	4122674	Argument	fcn -> name		4122031	0					
ANR	4122675	PtrMemberAccess	fcn -> name		4122031	0					
ANR	4122676	Identifier	fcn		4122031	0					
ANR	4122677	Identifier	name		4122031	1					
ANR	4122678	Argument	each + 2		4122031	1					
ANR	4122679	AdditiveExpression	each + 2		4122031	0		+			
ANR	4122680	Identifier	each		4122031	0					
ANR	4122681	PrimaryExpression	2		4122031	1					
ANR	4122682	CompoundStatement		105:50:2530:2530	4122031	1					
ANR	4122683	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	4044:6:101873:101905	4122031	0	True				
ANR	4122684	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		4122031	0					
ANR	4122685	Callee	r_core_seek		4122031	0					
ANR	4122686	Identifier	r_core_seek		4122031	0					
ANR	4122687	ArgumentList	core		4122031	1					
ANR	4122688	Argument	core		4122031	0					
ANR	4122689	Identifier	core		4122031	0					
ANR	4122690	Argument	fcn -> addr		4122031	1					
ANR	4122691	PtrMemberAccess	fcn -> addr		4122031	0					
ANR	4122692	Identifier	fcn		4122031	0					
ANR	4122693	Identifier	addr		4122031	1					
ANR	4122694	Argument	1		4122031	2					
ANR	4122695	PrimaryExpression	1		4122031	0					
ANR	4122696	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4045:6:101913:101938	4122031	1	True				
ANR	4122697	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4122698	Callee	r_core_cmd		4122031	0					
ANR	4122699	Identifier	r_core_cmd		4122031	0					
ANR	4122700	ArgumentList	core		4122031	1					
ANR	4122701	Argument	core		4122031	0					
ANR	4122702	Identifier	core		4122031	0					
ANR	4122703	Argument	cmd		4122031	1					
ANR	4122704	Identifier	cmd		4122031	0					
ANR	4122705	Argument	0		4122031	2					
ANR	4122706	PrimaryExpression	0		4122031	0					
ANR	4122707	IfStatement	if ( r_cons_is_breaked ( ) )		4122031	2					
ANR	4122708	Condition	r_cons_is_breaked ( )	4046:10:101950:101969	4122031	0	True				
ANR	4122709	CallExpression	r_cons_is_breaked ( )		4122031	0					
ANR	4122710	Callee	r_cons_is_breaked		4122031	0					
ANR	4122711	Identifier	r_cons_is_breaked		4122031	0					
ANR	4122712	ArgumentList			4122031	1					
ANR	4122713	CompoundStatement		108:32:2637:2637	4122031	1					
ANR	4122714	BreakStatement	break ;	4047:7:101981:101986	4122031	0	True				
ANR	4122715	GotoStatement	goto out_finish ;	4052:3:102017:102032	4122031	3	True				
ANR	4122716	Identifier	out_finish		4122031	0					
ANR	4122717	ElseStatement	else		4122031	0					
ANR	4122718	CompoundStatement		117:3:2736:2751	4122031	0					
ANR	4122719	IdentifierDeclStatement	RAnalFunction * fcn ;	4054:3:102048:102066	4122031	0	True				
ANR	4122720	IdentifierDecl	* fcn		4122031	0					
ANR	4122721	IdentifierDeclType	RAnalFunction *		4122031	0					
ANR	4122722	Identifier	fcn		4122031	1					
ANR	4122723	IdentifierDeclStatement	RListIter * iter ;	4055:3:102071:102086	4122031	1	True				
ANR	4122724	IdentifierDecl	* iter		4122031	0					
ANR	4122725	IdentifierDeclType	RListIter *		4122031	0					
ANR	4122726	Identifier	iter		4122031	1					
ANR	4122727	IfStatement	if ( core -> anal )		4122031	2					
ANR	4122728	Condition	core -> anal	4056:7:102095:102104	4122031	0	True				
ANR	4122729	PtrMemberAccess	core -> anal		4122031	0					
ANR	4122730	Identifier	core		4122031	0					
ANR	4122731	Identifier	anal		4122031	1					
ANR	4122732	CompoundStatement		119:4:2778:2820	4122031	1					
ANR	4122733	IdentifierDeclStatement	RConsGrep grep = core -> cons -> context -> grep ;	4057:4:102113:102155	4122031	0	True				
ANR	4122734	IdentifierDecl	grep = core -> cons -> context -> grep		4122031	0					
ANR	4122735	IdentifierDeclType	RConsGrep		4122031	0					
ANR	4122736	Identifier	grep		4122031	1					
ANR	4122737	AssignmentExpression	grep = core -> cons -> context -> grep		4122031	2		=			
ANR	4122738	Identifier	grep		4122031	0					
ANR	4122739	PtrMemberAccess	core -> cons -> context -> grep		4122031	1					
ANR	4122740	PtrMemberAccess	core -> cons -> context		4122031	0					
ANR	4122741	PtrMemberAccess	core -> cons		4122031	0					
ANR	4122742	Identifier	core		4122031	0					
ANR	4122743	Identifier	cons		4122031	1					
ANR	4122744	Identifier	context		4122031	1					
ANR	4122745	Identifier	grep		4122031	1					
ANR	4122746	Statement	r_list_foreach	4058:4:102161:102174	4122031	1	True				
ANR	4122747	Statement	(	4058:19:102176:102176	4122031	2	True				
ANR	4122748	Statement	core	4058:20:102177:102180	4122031	3	True				
ANR	4122749	Statement	->	4058:24:102181:102182	4122031	4	True				
ANR	4122750	Statement	anal	4058:26:102183:102186	4122031	5	True				
ANR	4122751	Statement	->	4058:30:102187:102188	4122031	6	True				
ANR	4122752	Statement	fcns	4058:32:102189:102192	4122031	7	True				
ANR	4122753	Statement	","	4058:36:102193:102193	4122031	8	True				
ANR	4122754	Statement	iter	4058:38:102195:102198	4122031	9	True				
ANR	4122755	Statement	","	4058:42:102199:102199	4122031	10	True				
ANR	4122756	Statement	fcn	4058:44:102201:102203	4122031	11	True				
ANR	4122757	Statement	)	4058:47:102204:102204	4122031	12	True				
ANR	4122758	CompoundStatement		121:5:2878:2887	4122031	13					
ANR	4122759	IdentifierDeclStatement	char * buf ;	4059:5:102213:102222	4122031	0	True				
ANR	4122760	IdentifierDecl	* buf		4122031	0					
ANR	4122761	IdentifierDeclType	char *		4122031	0					
ANR	4122762	Identifier	buf		4122031	1					
ANR	4122763	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 1 )"	4060:5:102229:102261	4122031	1	True				
ANR	4122764	CallExpression	"r_core_seek ( core , fcn -> addr , 1 )"		4122031	0					
ANR	4122765	Callee	r_core_seek		4122031	0					
ANR	4122766	Identifier	r_core_seek		4122031	0					
ANR	4122767	ArgumentList	core		4122031	1					
ANR	4122768	Argument	core		4122031	0					
ANR	4122769	Identifier	core		4122031	0					
ANR	4122770	Argument	fcn -> addr		4122031	1					
ANR	4122771	PtrMemberAccess	fcn -> addr		4122031	0					
ANR	4122772	Identifier	fcn		4122031	0					
ANR	4122773	Identifier	addr		4122031	1					
ANR	4122774	Argument	1		4122031	2					
ANR	4122775	PrimaryExpression	1		4122031	0					
ANR	4122776	ExpressionStatement	r_cons_push ( )	4061:5:102268:102282	4122031	2	True				
ANR	4122777	CallExpression	r_cons_push ( )		4122031	0					
ANR	4122778	Callee	r_cons_push		4122031	0					
ANR	4122779	Identifier	r_cons_push		4122031	0					
ANR	4122780	ArgumentList			4122031	1					
ANR	4122781	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4062:5:102289:102314	4122031	3	True				
ANR	4122782	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4122783	Callee	r_core_cmd		4122031	0					
ANR	4122784	Identifier	r_core_cmd		4122031	0					
ANR	4122785	ArgumentList	core		4122031	1					
ANR	4122786	Argument	core		4122031	0					
ANR	4122787	Identifier	core		4122031	0					
ANR	4122788	Argument	cmd		4122031	1					
ANR	4122789	Identifier	cmd		4122031	0					
ANR	4122790	Argument	0		4122031	2					
ANR	4122791	PrimaryExpression	0		4122031	0					
ANR	4122792	ExpressionStatement	buf = ( char * ) r_cons_get_buffer ( )	4063:5:102321:102355	4122031	4	True				
ANR	4122793	AssignmentExpression	buf = ( char * ) r_cons_get_buffer ( )		4122031	0		=			
ANR	4122794	Identifier	buf		4122031	0					
ANR	4122795	CastExpression	( char * ) r_cons_get_buffer ( )		4122031	1					
ANR	4122796	CastTarget	char *		4122031	0					
ANR	4122797	CallExpression	r_cons_get_buffer ( )		4122031	1					
ANR	4122798	Callee	r_cons_get_buffer		4122031	0					
ANR	4122799	Identifier	r_cons_get_buffer		4122031	0					
ANR	4122800	ArgumentList			4122031	1					
ANR	4122801	IfStatement	if ( buf )		4122031	5					
ANR	4122802	Condition	buf	4064:9:102366:102368	4122031	0	True				
ANR	4122803	Identifier	buf		4122031	0					
ANR	4122804	CompoundStatement		126:14:3036:3036	4122031	1					
ANR	4122805	ExpressionStatement	buf = strdup ( buf )	4065:6:102379:102397	4122031	0	True				
ANR	4122806	AssignmentExpression	buf = strdup ( buf )		4122031	0		=			
ANR	4122807	Identifier	buf		4122031	0					
ANR	4122808	CallExpression	strdup ( buf )		4122031	1					
ANR	4122809	Callee	strdup		4122031	0					
ANR	4122810	Identifier	strdup		4122031	0					
ANR	4122811	ArgumentList	buf		4122031	1					
ANR	4122812	Argument	buf		4122031	0					
ANR	4122813	Identifier	buf		4122031	0					
ANR	4122814	ExpressionStatement	r_cons_pop ( )	4067:5:102411:102424	4122031	6	True				
ANR	4122815	CallExpression	r_cons_pop ( )		4122031	0					
ANR	4122816	Callee	r_cons_pop		4122031	0					
ANR	4122817	Identifier	r_cons_pop		4122031	0					
ANR	4122818	ArgumentList			4122031	1					
ANR	4122819	ExpressionStatement	r_cons_strcat ( buf )	4068:5:102431:102450	4122031	7	True				
ANR	4122820	CallExpression	r_cons_strcat ( buf )		4122031	0					
ANR	4122821	Callee	r_cons_strcat		4122031	0					
ANR	4122822	Identifier	r_cons_strcat		4122031	0					
ANR	4122823	ArgumentList	buf		4122031	1					
ANR	4122824	Argument	buf		4122031	0					
ANR	4122825	Identifier	buf		4122031	0					
ANR	4122826	ExpressionStatement	free ( buf )	4069:5:102457:102467	4122031	8	True				
ANR	4122827	CallExpression	free ( buf )		4122031	0					
ANR	4122828	Callee	free		4122031	0					
ANR	4122829	Identifier	free		4122031	0					
ANR	4122830	ArgumentList	buf		4122031	1					
ANR	4122831	Argument	buf		4122031	0					
ANR	4122832	Identifier	buf		4122031	0					
ANR	4122833	IfStatement	if ( r_cons_is_breaked ( ) )		4122031	9					
ANR	4122834	Condition	r_cons_is_breaked ( )	4070:9:102478:102497	4122031	0	True				
ANR	4122835	CallExpression	r_cons_is_breaked ( )		4122031	0					
ANR	4122836	Callee	r_cons_is_breaked		4122031	0					
ANR	4122837	Identifier	r_cons_is_breaked		4122031	0					
ANR	4122838	ArgumentList			4122031	1					
ANR	4122839	CompoundStatement		132:31:3165:3165	4122031	1					
ANR	4122840	BreakStatement	break ;	4071:6:102508:102513	4122031	0	True				
ANR	4122841	ExpressionStatement	core -> cons -> context -> grep = grep	4074:4:102532:102564	4122031	14	True				
ANR	4122842	AssignmentExpression	core -> cons -> context -> grep = grep		4122031	0		=			
ANR	4122843	PtrMemberAccess	core -> cons -> context -> grep		4122031	0					
ANR	4122844	PtrMemberAccess	core -> cons -> context		4122031	0					
ANR	4122845	PtrMemberAccess	core -> cons		4122031	0					
ANR	4122846	Identifier	core		4122031	0					
ANR	4122847	Identifier	cons		4122031	1					
ANR	4122848	Identifier	context		4122031	1					
ANR	4122849	Identifier	grep		4122031	1					
ANR	4122850	Identifier	grep		4122031	1					
ANR	4122851	GotoStatement	goto out_finish ;	4076:3:102574:102589	4122031	3	True				
ANR	4122852	Identifier	out_finish		4122031	0					
ANR	4122853	BreakStatement	break ;	4078:2:102597:102602	4122031	18	True				
ANR	4122854	Label	case 't' :	4079:1:102605:102613	4122031	19	True				
ANR	4122855	CompoundStatement		144:3:3313:3337	4122031	20					
ANR	4122856	IdentifierDeclStatement	RDebugPid * p ;	4081:3:102631:102643	4122031	0	True				
ANR	4122857	IdentifierDecl	* p		4122031	0					
ANR	4122858	IdentifierDeclType	RDebugPid *		4122031	0					
ANR	4122859	Identifier	p		4122031	1					
ANR	4122860	IdentifierDeclStatement	int pid = core -> dbg -> pid ;	4082:3:102648:102672	4122031	1	True				
ANR	4122861	IdentifierDecl	pid = core -> dbg -> pid		4122031	0					
ANR	4122862	IdentifierDeclType	int		4122031	0					
ANR	4122863	Identifier	pid		4122031	1					
ANR	4122864	AssignmentExpression	pid = core -> dbg -> pid		4122031	2		=			
ANR	4122865	Identifier	pid		4122031	0					
ANR	4122866	PtrMemberAccess	core -> dbg -> pid		4122031	1					
ANR	4122867	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4122868	Identifier	core		4122031	0					
ANR	4122869	Identifier	dbg		4122031	1					
ANR	4122870	Identifier	pid		4122031	1					
ANR	4122871	IfStatement	if ( core -> dbg -> h && core -> dbg -> h -> pids )		4122031	2					
ANR	4122872	Condition	core -> dbg -> h && core -> dbg -> h -> pids	4083:7:102681:102714	4122031	0	True				
ANR	4122873	AndExpression	core -> dbg -> h && core -> dbg -> h -> pids		4122031	0		&&			
ANR	4122874	PtrMemberAccess	core -> dbg -> h		4122031	0					
ANR	4122875	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4122876	Identifier	core		4122031	0					
ANR	4122877	Identifier	dbg		4122031	1					
ANR	4122878	Identifier	h		4122031	1					
ANR	4122879	PtrMemberAccess	core -> dbg -> h -> pids		4122031	1					
ANR	4122880	PtrMemberAccess	core -> dbg -> h		4122031	0					
ANR	4122881	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4122882	Identifier	core		4122031	0					
ANR	4122883	Identifier	dbg		4122031	1					
ANR	4122884	Identifier	h		4122031	1					
ANR	4122885	Identifier	pids		4122031	1					
ANR	4122886	CompoundStatement		146:4:3388:3448	4122031	1					
ANR	4122887	IdentifierDeclStatement	"RList * list = core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) ) ;"	4084:4:102723:102783	4122031	0	True				
ANR	4122888	IdentifierDecl	"* list = core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) )"		4122031	0					
ANR	4122889	IdentifierDeclType	RList *		4122031	0					
ANR	4122890	Identifier	list		4122031	1					
ANR	4122891	AssignmentExpression	"* list = core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) )"		4122031	2		=			
ANR	4122892	Identifier	list		4122031	0					
ANR	4122893	CallExpression	"core -> dbg -> h -> pids ( core -> dbg , R_MAX ( 0 , pid ) )"		4122031	1					
ANR	4122894	Callee	core -> dbg -> h -> pids		4122031	0					
ANR	4122895	PtrMemberAccess	core -> dbg -> h -> pids		4122031	0					
ANR	4122896	PtrMemberAccess	core -> dbg -> h		4122031	0					
ANR	4122897	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4122898	Identifier	core		4122031	0					
ANR	4122899	Identifier	dbg		4122031	1					
ANR	4122900	Identifier	h		4122031	1					
ANR	4122901	Identifier	pids		4122031	1					
ANR	4122902	ArgumentList	core -> dbg		4122031	1					
ANR	4122903	Argument	core -> dbg		4122031	0					
ANR	4122904	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4122905	Identifier	core		4122031	0					
ANR	4122906	Identifier	dbg		4122031	1					
ANR	4122907	Argument	"R_MAX ( 0 , pid )"		4122031	1					
ANR	4122908	CallExpression	"R_MAX ( 0 , pid )"		4122031	0					
ANR	4122909	Callee	R_MAX		4122031	0					
ANR	4122910	Identifier	R_MAX		4122031	0					
ANR	4122911	ArgumentList	0		4122031	1					
ANR	4122912	Argument	0		4122031	0					
ANR	4122913	PrimaryExpression	0		4122031	0					
ANR	4122914	Argument	pid		4122031	1					
ANR	4122915	Identifier	pid		4122031	0					
ANR	4122916	Statement	r_list_foreach	4085:4:102789:102802	4122031	1	True				
ANR	4122917	Statement	(	4085:19:102804:102804	4122031	2	True				
ANR	4122918	Statement	list	4085:20:102805:102808	4122031	3	True				
ANR	4122919	Statement	","	4085:24:102809:102809	4122031	4	True				
ANR	4122920	Statement	iter	4085:26:102811:102814	4122031	5	True				
ANR	4122921	Statement	","	4085:30:102815:102815	4122031	6	True				
ANR	4122922	Statement	p	4085:32:102817:102817	4122031	7	True				
ANR	4122923	Statement	)	4085:33:102818:102818	4122031	8	True				
ANR	4122924	CompoundStatement		147:35:3485:3485	4122031	9					
ANR	4122925	ExpressionStatement	"r_cons_printf ( ""# PID %d\\n"" , p -> pid )"	4086:5:102827:102863	4122031	0	True				
ANR	4122926	CallExpression	"r_cons_printf ( ""# PID %d\\n"" , p -> pid )"		4122031	0					
ANR	4122927	Callee	r_cons_printf		4122031	0					
ANR	4122928	Identifier	r_cons_printf		4122031	0					
ANR	4122929	ArgumentList	"""# PID %d\\n"""		4122031	1					
ANR	4122930	Argument	"""# PID %d\\n"""		4122031	0					
ANR	4122931	PrimaryExpression	"""# PID %d\\n"""		4122031	0					
ANR	4122932	Argument	p -> pid		4122031	1					
ANR	4122933	PtrMemberAccess	p -> pid		4122031	0					
ANR	4122934	Identifier	p		4122031	0					
ANR	4122935	Identifier	pid		4122031	1					
ANR	4122936	ExpressionStatement	"r_debug_select ( core -> dbg , p -> pid , p -> pid )"	4087:5:102870:102912	4122031	1	True				
ANR	4122937	CallExpression	"r_debug_select ( core -> dbg , p -> pid , p -> pid )"		4122031	0					
ANR	4122938	Callee	r_debug_select		4122031	0					
ANR	4122939	Identifier	r_debug_select		4122031	0					
ANR	4122940	ArgumentList	core -> dbg		4122031	1					
ANR	4122941	Argument	core -> dbg		4122031	0					
ANR	4122942	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4122943	Identifier	core		4122031	0					
ANR	4122944	Identifier	dbg		4122031	1					
ANR	4122945	Argument	p -> pid		4122031	1					
ANR	4122946	PtrMemberAccess	p -> pid		4122031	0					
ANR	4122947	Identifier	p		4122031	0					
ANR	4122948	Identifier	pid		4122031	1					
ANR	4122949	Argument	p -> pid		4122031	2					
ANR	4122950	PtrMemberAccess	p -> pid		4122031	0					
ANR	4122951	Identifier	p		4122031	0					
ANR	4122952	Identifier	pid		4122031	1					
ANR	4122953	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4088:5:102919:102944	4122031	2	True				
ANR	4122954	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4122955	Callee	r_core_cmd		4122031	0					
ANR	4122956	Identifier	r_core_cmd		4122031	0					
ANR	4122957	ArgumentList	core		4122031	1					
ANR	4122958	Argument	core		4122031	0					
ANR	4122959	Identifier	core		4122031	0					
ANR	4122960	Argument	cmd		4122031	1					
ANR	4122961	Identifier	cmd		4122031	0					
ANR	4122962	Argument	0		4122031	2					
ANR	4122963	PrimaryExpression	0		4122031	0					
ANR	4122964	ExpressionStatement	r_cons_newline ( )	4089:5:102951:102968	4122031	3	True				
ANR	4122965	CallExpression	r_cons_newline ( )		4122031	0					
ANR	4122966	Callee	r_cons_newline		4122031	0					
ANR	4122967	Identifier	r_cons_newline		4122031	0					
ANR	4122968	ArgumentList			4122031	1					
ANR	4122969	ExpressionStatement	r_list_free ( list )	4091:4:102980:102998	4122031	10	True				
ANR	4122970	CallExpression	r_list_free ( list )		4122031	0					
ANR	4122971	Callee	r_list_free		4122031	0					
ANR	4122972	Identifier	r_list_free		4122031	0					
ANR	4122973	ArgumentList	list		4122031	1					
ANR	4122974	Argument	list		4122031	0					
ANR	4122975	Identifier	list		4122031	0					
ANR	4122976	ExpressionStatement	"r_debug_select ( core -> dbg , pid , pid )"	4093:3:103008:103044	4122031	3	True				
ANR	4122977	CallExpression	"r_debug_select ( core -> dbg , pid , pid )"		4122031	0					
ANR	4122978	Callee	r_debug_select		4122031	0					
ANR	4122979	Identifier	r_debug_select		4122031	0					
ANR	4122980	ArgumentList	core -> dbg		4122031	1					
ANR	4122981	Argument	core -> dbg		4122031	0					
ANR	4122982	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4122983	Identifier	core		4122031	0					
ANR	4122984	Identifier	dbg		4122031	1					
ANR	4122985	Argument	pid		4122031	1					
ANR	4122986	Identifier	pid		4122031	0					
ANR	4122987	Argument	pid		4122031	2					
ANR	4122988	Identifier	pid		4122031	0					
ANR	4122989	GotoStatement	goto out_finish ;	4094:3:103049:103064	4122031	4	True				
ANR	4122990	Identifier	out_finish		4122031	0					
ANR	4122991	BreakStatement	break ;	4096:2:103072:103077	4122031	21	True				
ANR	4122992	Label	case 'c' :	4097:1:103080:103088	4122031	22	True				
ANR	4122993	IfStatement	if ( each [ 1 ] == ':' )		4122031	23					
ANR	4122994	Condition	each [ 1 ] == ':'	4098:6:103106:103119	4122031	0	True				
ANR	4122995	EqualityExpression	each [ 1 ] == ':'		4122031	0		==			
ANR	4122996	ArrayIndexing	each [ 1 ]		4122031	0					
ANR	4122997	Identifier	each		4122031	0					
ANR	4122998	PrimaryExpression	1		4122031	1					
ANR	4122999	PrimaryExpression	':'		4122031	1					
ANR	4123000	CompoundStatement		161:3:3792:3835	4122031	1					
ANR	4123001	IdentifierDeclStatement	"char * arg = r_core_cmd_str ( core , each + 2 ) ;"	4099:3:103127:103170	4122031	0	True				
ANR	4123002	IdentifierDecl	"* arg = r_core_cmd_str ( core , each + 2 )"		4122031	0					
ANR	4123003	IdentifierDeclType	char *		4122031	0					
ANR	4123004	Identifier	arg		4122031	1					
ANR	4123005	AssignmentExpression	"* arg = r_core_cmd_str ( core , each + 2 )"		4122031	2		=			
ANR	4123006	Identifier	arg		4122031	0					
ANR	4123007	CallExpression	"r_core_cmd_str ( core , each + 2 )"		4122031	1					
ANR	4123008	Callee	r_core_cmd_str		4122031	0					
ANR	4123009	Identifier	r_core_cmd_str		4122031	0					
ANR	4123010	ArgumentList	core		4122031	1					
ANR	4123011	Argument	core		4122031	0					
ANR	4123012	Identifier	core		4122031	0					
ANR	4123013	Argument	each + 2		4122031	1					
ANR	4123014	AdditiveExpression	each + 2		4122031	0		+			
ANR	4123015	Identifier	each		4122031	0					
ANR	4123016	PrimaryExpression	2		4122031	1					
ANR	4123017	IfStatement	if ( arg )		4122031	1					
ANR	4123018	Condition	arg	4100:7:103179:103181	4122031	0	True				
ANR	4123019	Identifier	arg		4122031	0					
ANR	4123020	CompoundStatement		162:12:3849:3849	4122031	1					
ANR	4123021	ExpressionStatement	"foreachOffset ( core , cmd , arg )"	4101:4:103190:103220	4122031	0	True				
ANR	4123022	CallExpression	"foreachOffset ( core , cmd , arg )"		4122031	0					
ANR	4123023	Callee	foreachOffset		4122031	0					
ANR	4123024	Identifier	foreachOffset		4122031	0					
ANR	4123025	ArgumentList	core		4122031	1					
ANR	4123026	Argument	core		4122031	0					
ANR	4123027	Identifier	core		4122031	0					
ANR	4123028	Argument	cmd		4122031	1					
ANR	4123029	Identifier	cmd		4122031	0					
ANR	4123030	Argument	arg		4122031	2					
ANR	4123031	Identifier	arg		4122031	0					
ANR	4123032	ExpressionStatement	free ( arg )	4102:4:103226:103236	4122031	1	True				
ANR	4123033	CallExpression	free ( arg )		4122031	0					
ANR	4123034	Callee	free		4122031	0					
ANR	4123035	Identifier	free		4122031	0					
ANR	4123036	ArgumentList	arg		4122031	1					
ANR	4123037	Argument	arg		4122031	0					
ANR	4123038	Identifier	arg		4122031	0					
ANR	4123039	BreakStatement	break ;	4105:2:103249:103254	4122031	24	True				
ANR	4123040	Label	case '=' :	4106:1:103257:103265	4122031	25	True				
ANR	4123041	ExpressionStatement	"foreachOffset ( core , cmd , str + 1 )"	4107:2:103278:103312	4122031	26	True				
ANR	4123042	CallExpression	"foreachOffset ( core , cmd , str + 1 )"		4122031	0					
ANR	4123043	Callee	foreachOffset		4122031	0					
ANR	4123044	Identifier	foreachOffset		4122031	0					
ANR	4123045	ArgumentList	core		4122031	1					
ANR	4123046	Argument	core		4122031	0					
ANR	4123047	Identifier	core		4122031	0					
ANR	4123048	Argument	cmd		4122031	1					
ANR	4123049	Identifier	cmd		4122031	0					
ANR	4123050	Argument	str + 1		4122031	2					
ANR	4123051	AdditiveExpression	str + 1		4122031	0		+			
ANR	4123052	Identifier	str		4122031	0					
ANR	4123053	PrimaryExpression	1		4122031	1					
ANR	4123054	BreakStatement	break ;	4108:2:103316:103321	4122031	27	True				
ANR	4123055	Label	case 'd' :	4109:1:103324:103332	4122031	28	True				
ANR	4123056	IfStatement	if ( each [ 1 ] == 'b' && each [ 2 ] == 't' )		4122031	29					
ANR	4123057	Condition	each [ 1 ] == 'b' && each [ 2 ] == 't'	4110:6:103349:103380	4122031	0	True				
ANR	4123058	AndExpression	each [ 1 ] == 'b' && each [ 2 ] == 't'		4122031	0		&&			
ANR	4123059	EqualityExpression	each [ 1 ] == 'b'		4122031	0		==			
ANR	4123060	ArrayIndexing	each [ 1 ]		4122031	0					
ANR	4123061	Identifier	each		4122031	0					
ANR	4123062	PrimaryExpression	1		4122031	1					
ANR	4123063	PrimaryExpression	'b'		4122031	1					
ANR	4123064	EqualityExpression	each [ 2 ] == 't'		4122031	1		==			
ANR	4123065	ArrayIndexing	each [ 2 ]		4122031	0					
ANR	4123066	Identifier	each		4122031	0					
ANR	4123067	PrimaryExpression	2		4122031	1					
ANR	4123068	PrimaryExpression	't'		4122031	1					
ANR	4123069	CompoundStatement		176:3:4126:4137	4122031	1					
ANR	4123070	IdentifierDeclStatement	ut64 oseek = core -> offset ;	4111:3:103388:103413	4122031	0	True				
ANR	4123071	IdentifierDecl	oseek = core -> offset		4122031	0					
ANR	4123072	IdentifierDeclType	ut64		4122031	0					
ANR	4123073	Identifier	oseek		4122031	1					
ANR	4123074	AssignmentExpression	oseek = core -> offset		4122031	2		=			
ANR	4123075	Identifier	oseek		4122031	0					
ANR	4123076	PtrMemberAccess	core -> offset		4122031	1					
ANR	4123077	Identifier	core		4122031	0					
ANR	4123078	Identifier	offset		4122031	1					
ANR	4123079	IdentifierDeclStatement	RDebugFrame * frame ;	4112:3:103418:103436	4122031	1	True				
ANR	4123080	IdentifierDecl	* frame		4122031	0					
ANR	4123081	IdentifierDeclType	RDebugFrame *		4122031	0					
ANR	4123082	Identifier	frame		4122031	1					
ANR	4123083	IdentifierDeclStatement	RListIter * iter ;	4113:3:103441:103456	4122031	2	True				
ANR	4123084	IdentifierDecl	* iter		4122031	0					
ANR	4123085	IdentifierDeclType	RListIter *		4122031	0					
ANR	4123086	Identifier	iter		4122031	1					
ANR	4123087	IdentifierDeclStatement	RList * list ;	4114:3:103461:103472	4122031	3	True				
ANR	4123088	IdentifierDecl	* list		4122031	0					
ANR	4123089	IdentifierDeclType	RList *		4122031	0					
ANR	4123090	Identifier	list		4122031	1					
ANR	4123091	ExpressionStatement	"list = r_debug_frames ( core -> dbg , UT64_MAX )"	4115:3:103477:103520	4122031	4	True				
ANR	4123092	AssignmentExpression	"list = r_debug_frames ( core -> dbg , UT64_MAX )"		4122031	0		=			
ANR	4123093	Identifier	list		4122031	0					
ANR	4123094	CallExpression	"r_debug_frames ( core -> dbg , UT64_MAX )"		4122031	1					
ANR	4123095	Callee	r_debug_frames		4122031	0					
ANR	4123096	Identifier	r_debug_frames		4122031	0					
ANR	4123097	ArgumentList	core -> dbg		4122031	1					
ANR	4123098	Argument	core -> dbg		4122031	0					
ANR	4123099	PtrMemberAccess	core -> dbg		4122031	0					
ANR	4123100	Identifier	core		4122031	0					
ANR	4123101	Identifier	dbg		4122031	1					
ANR	4123102	Argument	UT64_MAX		4122031	1					
ANR	4123103	Identifier	UT64_MAX		4122031	0					
ANR	4123104	ExpressionStatement	i = 0	4116:3:103525:103530	4122031	5	True				
ANR	4123105	AssignmentExpression	i = 0		4122031	0		=			
ANR	4123106	Identifier	i		4122031	0					
ANR	4123107	PrimaryExpression	0		4122031	1					
ANR	4123108	Statement	r_list_foreach	4117:3:103535:103548	4122031	6	True				
ANR	4123109	Statement	(	4117:18:103550:103550	4122031	7	True				
ANR	4123110	Statement	list	4117:19:103551:103554	4122031	8	True				
ANR	4123111	Statement	","	4117:23:103555:103555	4122031	9	True				
ANR	4123112	Statement	iter	4117:25:103557:103560	4122031	10	True				
ANR	4123113	Statement	","	4117:29:103561:103561	4122031	11	True				
ANR	4123114	Statement	frame	4117:31:103563:103567	4122031	12	True				
ANR	4123115	Statement	)	4117:36:103568:103568	4122031	13	True				
ANR	4123116	CompoundStatement		179:38:4235:4235	4122031	14					
ANR	4123117	SwitchStatement	switch ( each [ 3 ] )		4122031	0					
ANR	4123118	Condition	each [ 3 ]	4118:12:103584:103590	4122031	0	True				
ANR	4123119	ArrayIndexing	each [ 3 ]		4122031	0					
ANR	4123120	Identifier	each		4122031	0					
ANR	4123121	PrimaryExpression	3		4122031	1					
ANR	4123122	CompoundStatement		180:21:4258:4258	4122031	1					
ANR	4123123	Label	case 'b' :	4119:4:103599:103607	4122031	0	True				
ANR	4123124	ExpressionStatement	"r_core_seek ( core , frame -> bp , 1 )"	4120:5:103614:103646	4122031	1	True				
ANR	4123125	CallExpression	"r_core_seek ( core , frame -> bp , 1 )"		4122031	0					
ANR	4123126	Callee	r_core_seek		4122031	0					
ANR	4123127	Identifier	r_core_seek		4122031	0					
ANR	4123128	ArgumentList	core		4122031	1					
ANR	4123129	Argument	core		4122031	0					
ANR	4123130	Identifier	core		4122031	0					
ANR	4123131	Argument	frame -> bp		4122031	1					
ANR	4123132	PtrMemberAccess	frame -> bp		4122031	0					
ANR	4123133	Identifier	frame		4122031	0					
ANR	4123134	Identifier	bp		4122031	1					
ANR	4123135	Argument	1		4122031	2					
ANR	4123136	PrimaryExpression	1		4122031	0					
ANR	4123137	BreakStatement	break ;	4121:5:103653:103658	4122031	2	True				
ANR	4123138	Label	case 's' :	4122:4:103664:103672	4122031	3	True				
ANR	4123139	ExpressionStatement	"r_core_seek ( core , frame -> sp , 1 )"	4123:5:103679:103711	4122031	4	True				
ANR	4123140	CallExpression	"r_core_seek ( core , frame -> sp , 1 )"		4122031	0					
ANR	4123141	Callee	r_core_seek		4122031	0					
ANR	4123142	Identifier	r_core_seek		4122031	0					
ANR	4123143	ArgumentList	core		4122031	1					
ANR	4123144	Argument	core		4122031	0					
ANR	4123145	Identifier	core		4122031	0					
ANR	4123146	Argument	frame -> sp		4122031	1					
ANR	4123147	PtrMemberAccess	frame -> sp		4122031	0					
ANR	4123148	Identifier	frame		4122031	0					
ANR	4123149	Identifier	sp		4122031	1					
ANR	4123150	Argument	1		4122031	2					
ANR	4123151	PrimaryExpression	1		4122031	0					
ANR	4123152	BreakStatement	break ;	4124:5:103718:103723	4122031	5	True				
ANR	4123153	Label	default :	4125:4:103729:103736	4122031	6	True				
ANR	4123154	Identifier	default		4122031	0					
ANR	4123155	Label	case 'a' :	4126:4:103742:103750	4122031	7	True				
ANR	4123156	ExpressionStatement	"r_core_seek ( core , frame -> addr , 1 )"	4127:5:103757:103791	4122031	8	True				
ANR	4123157	CallExpression	"r_core_seek ( core , frame -> addr , 1 )"		4122031	0					
ANR	4123158	Callee	r_core_seek		4122031	0					
ANR	4123159	Identifier	r_core_seek		4122031	0					
ANR	4123160	ArgumentList	core		4122031	1					
ANR	4123161	Argument	core		4122031	0					
ANR	4123162	Identifier	core		4122031	0					
ANR	4123163	Argument	frame -> addr		4122031	1					
ANR	4123164	PtrMemberAccess	frame -> addr		4122031	0					
ANR	4123165	Identifier	frame		4122031	0					
ANR	4123166	Identifier	addr		4122031	1					
ANR	4123167	Argument	1		4122031	2					
ANR	4123168	PrimaryExpression	1		4122031	0					
ANR	4123169	BreakStatement	break ;	4128:5:103798:103803	4122031	9	True				
ANR	4123170	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4130:4:103815:103840	4122031	1	True				
ANR	4123171	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4123172	Callee	r_core_cmd		4122031	0					
ANR	4123173	Identifier	r_core_cmd		4122031	0					
ANR	4123174	ArgumentList	core		4122031	1					
ANR	4123175	Argument	core		4122031	0					
ANR	4123176	Identifier	core		4122031	0					
ANR	4123177	Argument	cmd		4122031	1					
ANR	4123178	Identifier	cmd		4122031	0					
ANR	4123179	Argument	0		4122031	2					
ANR	4123180	PrimaryExpression	0		4122031	0					
ANR	4123181	ExpressionStatement	r_cons_newline ( )	4131:4:103846:103863	4122031	2	True				
ANR	4123182	CallExpression	r_cons_newline ( )		4122031	0					
ANR	4123183	Callee	r_cons_newline		4122031	0					
ANR	4123184	Identifier	r_cons_newline		4122031	0					
ANR	4123185	ArgumentList			4122031	1					
ANR	4123186	ExpressionStatement	i ++	4132:4:103869:103872	4122031	3	True				
ANR	4123187	PostIncDecOperationExpression	i ++		4122031	0					
ANR	4123188	Identifier	i		4122031	0					
ANR	4123189	IncDec	++		4122031	1					
ANR	4123190	ExpressionStatement	"r_core_seek ( core , oseek , 0 )"	4134:3:103882:103910	4122031	15	True				
ANR	4123191	CallExpression	"r_core_seek ( core , oseek , 0 )"		4122031	0					
ANR	4123192	Callee	r_core_seek		4122031	0					
ANR	4123193	Identifier	r_core_seek		4122031	0					
ANR	4123194	ArgumentList	core		4122031	1					
ANR	4123195	Argument	core		4122031	0					
ANR	4123196	Identifier	core		4122031	0					
ANR	4123197	Argument	oseek		4122031	1					
ANR	4123198	Identifier	oseek		4122031	0					
ANR	4123199	Argument	0		4122031	2					
ANR	4123200	PrimaryExpression	0		4122031	0					
ANR	4123201	ExpressionStatement	r_list_free ( list )	4135:3:103915:103933	4122031	16	True				
ANR	4123202	CallExpression	r_list_free ( list )		4122031	0					
ANR	4123203	Callee	r_list_free		4122031	0					
ANR	4123204	Identifier	r_list_free		4122031	0					
ANR	4123205	ArgumentList	list		4122031	1					
ANR	4123206	Argument	list		4122031	0					
ANR	4123207	Identifier	list		4122031	0					
ANR	4123208	ElseStatement	else		4122031	0					
ANR	4123209	CompoundStatement		198:9:4609:4609	4122031	0					
ANR	4123210	ExpressionStatement	"eprintf ( ""Invalid for-each statement. Use @@=dbt[abs]\\n"" )"	4137:3:103949:104005	4122031	0	True				
ANR	4123211	CallExpression	"eprintf ( ""Invalid for-each statement. Use @@=dbt[abs]\\n"" )"		4122031	0					
ANR	4123212	Callee	eprintf		4122031	0					
ANR	4123213	Identifier	eprintf		4122031	0					
ANR	4123214	ArgumentList	"""Invalid for-each statement. Use @@=dbt[abs]\\n"""		4122031	1					
ANR	4123215	Argument	"""Invalid for-each statement. Use @@=dbt[abs]\\n"""		4122031	0					
ANR	4123216	PrimaryExpression	"""Invalid for-each statement. Use @@=dbt[abs]\\n"""		4122031	0					
ANR	4123217	BreakStatement	break ;	4139:2:104013:104018	4122031	30	True				
ANR	4123218	Label	case 'k' :	4140:1:104021:104029	4122031	31	True				
ANR	4123219	CompoundStatement		205:2:4741:4808	4122031	32					
ANR	4123220	IdentifierDeclStatement	"char * out = sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) ) ;"	4143:2:104076:104143	4122031	0	True				
ANR	4123221	IdentifierDecl	"* out = sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) )"		4122031	0					
ANR	4123222	IdentifierDeclType	char *		4122031	0					
ANR	4123223	Identifier	out		4122031	1					
ANR	4123224	AssignmentExpression	"* out = sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) )"		4122031	2		=			
ANR	4123225	Identifier	out		4122031	0					
ANR	4123226	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , str + ( ( str [ 1 ] ) ? 2 : 1 ) )"		4122031	1					
ANR	4123227	Callee	sdb_querys		4122031	0					
ANR	4123228	Identifier	sdb_querys		4122031	0					
ANR	4123229	ArgumentList	core -> sdb		4122031	1					
ANR	4123230	Argument	core -> sdb		4122031	0					
ANR	4123231	PtrMemberAccess	core -> sdb		4122031	0					
ANR	4123232	Identifier	core		4122031	0					
ANR	4123233	Identifier	sdb		4122031	1					
ANR	4123234	Argument	NULL		4122031	1					
ANR	4123235	Identifier	NULL		4122031	0					
ANR	4123236	Argument	0		4122031	2					
ANR	4123237	PrimaryExpression	0		4122031	0					
ANR	4123238	Argument	str + ( ( str [ 1 ] ) ? 2 : 1 )		4122031	3					
ANR	4123239	AdditiveExpression	str + ( ( str [ 1 ] ) ? 2 : 1 )		4122031	0		+			
ANR	4123240	Identifier	str		4122031	0					
ANR	4123241	ConditionalExpression	( str [ 1 ] ) ? 2 : 1		4122031	1					
ANR	4123242	Condition	str [ 1 ]		4122031	0					
ANR	4123243	ArrayIndexing	str [ 1 ]		4122031	0					
ANR	4123244	Identifier	str		4122031	0					
ANR	4123245	PrimaryExpression	1		4122031	1					
ANR	4123246	PrimaryExpression	2		4122031	1					
ANR	4123247	PrimaryExpression	1		4122031	2					
ANR	4123248	IfStatement	if ( out )		4122031	1					
ANR	4123249	Condition	out	4144:6:104151:104153	4122031	0	True				
ANR	4123250	Identifier	out		4122031	0					
ANR	4123251	CompoundStatement		206:11:4821:4821	4122031	1					
ANR	4123252	ExpressionStatement	each = out	4145:3:104161:104171	4122031	0	True				
ANR	4123253	AssignmentExpression	each = out		4122031	0		=			
ANR	4123254	Identifier	each		4122031	0					
ANR	4123255	Identifier	out		4122031	1					
ANR	4123256	DoStatement	do		4122031	1					
ANR	4123257	CompoundStatement		208:6:4844:4844	4122031	0					
ANR	4123258	WhileStatement	while ( * each == ' ' )		4122031	0					
ANR	4123259	Condition	* each == ' '	4147:11:104192:104203	4122031	0	True				
ANR	4123260	EqualityExpression	* each == ' '		4122031	0		==			
ANR	4123261	UnaryOperationExpression	* each		4122031	0					
ANR	4123262	UnaryOperator	*		4122031	0					
ANR	4123263	Identifier	each		4122031	1					
ANR	4123264	PrimaryExpression	' '		4122031	1					
ANR	4123265	CompoundStatement		209:25:4871:4871	4122031	1					
ANR	4123266	ExpressionStatement	each ++	4148:5:104213:104219	4122031	0	True				
ANR	4123267	PostIncDecOperationExpression	each ++		4122031	0					
ANR	4123268	Identifier	each		4122031	0					
ANR	4123269	IncDec	++		4122031	1					
ANR	4123270	IfStatement	if ( ! * each )		4122031	1					
ANR	4123271	Condition	! * each	4150:8:104235:104240	4122031	0	True				
ANR	4123272	UnaryOperationExpression	! * each		4122031	0					
ANR	4123273	UnaryOperator	!		4122031	0					
ANR	4123274	UnaryOperationExpression	* each		4122031	1					
ANR	4123275	UnaryOperator	*		4122031	0					
ANR	4123276	Identifier	each		4122031	1					
ANR	4123277	CompoundStatement		212:16:4908:4908	4122031	1					
ANR	4123278	BreakStatement	break ;	4151:5:104250:104255	4122031	0	True				
ANR	4123279	ExpressionStatement	"str = strchr ( each , ' ' )"	4153:4:104267:104291	4122031	2	True				
ANR	4123280	AssignmentExpression	"str = strchr ( each , ' ' )"		4122031	0		=			
ANR	4123281	Identifier	str		4122031	0					
ANR	4123282	CallExpression	"strchr ( each , ' ' )"		4122031	1					
ANR	4123283	Callee	strchr		4122031	0					
ANR	4123284	Identifier	strchr		4122031	0					
ANR	4123285	ArgumentList	each		4122031	1					
ANR	4123286	Argument	each		4122031	0					
ANR	4123287	Identifier	each		4122031	0					
ANR	4123288	Argument	' '		4122031	1					
ANR	4123289	PrimaryExpression	' '		4122031	0					
ANR	4123290	IfStatement	if ( str )		4122031	3					
ANR	4123291	Condition	str	4154:8:104301:104303	4122031	0	True				
ANR	4123292	Identifier	str		4122031	0					
ANR	4123293	CompoundStatement		216:13:4971:4971	4122031	1					
ANR	4123294	ExpressionStatement	* str = '\\0'	4155:5:104313:104324	4122031	0	True				
ANR	4123295	AssignmentExpression	* str = '\\0'		4122031	0		=			
ANR	4123296	UnaryOperationExpression	* str		4122031	0					
ANR	4123297	UnaryOperator	*		4122031	0					
ANR	4123298	Identifier	str		4122031	1					
ANR	4123299	PrimaryExpression	'\\0'		4122031	1					
ANR	4123300	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	4156:5:104331:104366	4122031	1	True				
ANR	4123301	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		4122031	0		=			
ANR	4123302	Identifier	addr		4122031	0					
ANR	4123303	CallExpression	"r_num_math ( core -> num , each )"		4122031	1					
ANR	4123304	Callee	r_num_math		4122031	0					
ANR	4123305	Identifier	r_num_math		4122031	0					
ANR	4123306	ArgumentList	core -> num		4122031	1					
ANR	4123307	Argument	core -> num		4122031	0					
ANR	4123308	PtrMemberAccess	core -> num		4122031	0					
ANR	4123309	Identifier	core		4122031	0					
ANR	4123310	Identifier	num		4122031	1					
ANR	4123311	Argument	each		4122031	1					
ANR	4123312	Identifier	each		4122031	0					
ANR	4123313	ExpressionStatement	* str = ' '	4157:5:104373:104383	4122031	2	True				
ANR	4123314	AssignmentExpression	* str = ' '		4122031	0		=			
ANR	4123315	UnaryOperationExpression	* str		4122031	0					
ANR	4123316	UnaryOperator	*		4122031	0					
ANR	4123317	Identifier	str		4122031	1					
ANR	4123318	PrimaryExpression	' '		4122031	1					
ANR	4123319	ElseStatement	else		4122031	0					
ANR	4123320	CompoundStatement		220:11:5061:5061	4122031	0					
ANR	4123321	ExpressionStatement	"addr = r_num_math ( core -> num , each )"	4159:5:104403:104438	4122031	0	True				
ANR	4123322	AssignmentExpression	"addr = r_num_math ( core -> num , each )"		4122031	0		=			
ANR	4123323	Identifier	addr		4122031	0					
ANR	4123324	CallExpression	"r_num_math ( core -> num , each )"		4122031	1					
ANR	4123325	Callee	r_num_math		4122031	0					
ANR	4123326	Identifier	r_num_math		4122031	0					
ANR	4123327	ArgumentList	core -> num		4122031	1					
ANR	4123328	Argument	core -> num		4122031	0					
ANR	4123329	PtrMemberAccess	core -> num		4122031	0					
ANR	4123330	Identifier	core		4122031	0					
ANR	4123331	Identifier	num		4122031	1					
ANR	4123332	Argument	each		4122031	1					
ANR	4123333	Identifier	each		4122031	0					
ANR	4123334	ExpressionStatement	each = str + 1	4162:4:104495:104509	4122031	4	True				
ANR	4123335	AssignmentExpression	each = str + 1		4122031	0		=			
ANR	4123336	Identifier	each		4122031	0					
ANR	4123337	AdditiveExpression	str + 1		4122031	1		+			
ANR	4123338	Identifier	str		4122031	0					
ANR	4123339	PrimaryExpression	1		4122031	1					
ANR	4123340	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4163:4:104515:104542	4122031	5	True				
ANR	4123341	CallExpression	"r_core_seek ( core , addr , 1 )"		4122031	0					
ANR	4123342	Callee	r_core_seek		4122031	0					
ANR	4123343	Identifier	r_core_seek		4122031	0					
ANR	4123344	ArgumentList	core		4122031	1					
ANR	4123345	Argument	core		4122031	0					
ANR	4123346	Identifier	core		4122031	0					
ANR	4123347	Argument	addr		4122031	1					
ANR	4123348	Identifier	addr		4122031	0					
ANR	4123349	Argument	1		4122031	2					
ANR	4123350	PrimaryExpression	1		4122031	0					
ANR	4123351	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4164:4:104548:104573	4122031	6	True				
ANR	4123352	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4123353	Callee	r_core_cmd		4122031	0					
ANR	4123354	Identifier	r_core_cmd		4122031	0					
ANR	4123355	ArgumentList	core		4122031	1					
ANR	4123356	Argument	core		4122031	0					
ANR	4123357	Identifier	core		4122031	0					
ANR	4123358	Argument	cmd		4122031	1					
ANR	4123359	Identifier	cmd		4122031	0					
ANR	4123360	Argument	0		4122031	2					
ANR	4123361	PrimaryExpression	0		4122031	0					
ANR	4123362	ExpressionStatement	r_cons_flush ( )	4165:4:104579:104594	4122031	7	True				
ANR	4123363	CallExpression	r_cons_flush ( )		4122031	0					
ANR	4123364	Callee	r_cons_flush		4122031	0					
ANR	4123365	Identifier	r_cons_flush		4122031	0					
ANR	4123366	ArgumentList			4122031	1					
ANR	4123367	Condition	str != NULL	4166:12:104608:104618	4122031	1	True				
ANR	4123368	EqualityExpression	str != NULL		4122031	0		!=			
ANR	4123369	Identifier	str		4122031	0					
ANR	4123370	Identifier	NULL		4122031	1					
ANR	4123371	ExpressionStatement	free ( out )	4167:3:104625:104635	4122031	2	True				
ANR	4123372	CallExpression	free ( out )		4122031	0					
ANR	4123373	Callee	free		4122031	0					
ANR	4123374	Identifier	free		4122031	0					
ANR	4123375	ArgumentList	out		4122031	1					
ANR	4123376	Argument	out		4122031	0					
ANR	4123377	Identifier	out		4122031	0					
ANR	4123378	BreakStatement	break ;	4170:2:104647:104652	4122031	33	True				
ANR	4123379	Label	case '.' :	4171:1:104655:104663	4122031	34	True				
ANR	4123380	IfStatement	if ( each [ 1 ] == '(' )		4122031	35					
ANR	4123381	Condition	each [ 1 ] == '('	4172:6:104680:104693	4122031	0	True				
ANR	4123382	EqualityExpression	each [ 1 ] == '('		4122031	0		==			
ANR	4123383	ArrayIndexing	each [ 1 ]		4122031	0					
ANR	4123384	Identifier	each		4122031	0					
ANR	4123385	PrimaryExpression	1		4122031	1					
ANR	4123386	PrimaryExpression	'('		4122031	1					
ANR	4123387	CompoundStatement		235:3:5366:5381	4122031	1					
ANR	4123388	IdentifierDeclStatement	char cmd2 [ 1024 ] ;	4173:3:104701:104716	4122031	0	True				
ANR	4123389	IdentifierDecl	cmd2 [ 1024 ]		4122031	0					
ANR	4123390	IdentifierDeclType	char [ 1024 ]		4122031	0					
ANR	4123391	Identifier	cmd2		4122031	1					
ANR	4123392	PrimaryExpression	1024		4122031	2					
ANR	4123393	ExpressionStatement	i = 0	4175:3:104749:104754	4122031	1	True				
ANR	4123394	AssignmentExpression	i = 0		4122031	0		=			
ANR	4123395	Identifier	i		4122031	0					
ANR	4123396	PrimaryExpression	0		4122031	1					
ANR	4123397	ForStatement	for ( core -> rcmd -> macro . counter = 0 ; i < 999 ; core -> rcmd -> macro . counter ++ )		4122031	2					
ANR	4123398	ForInit	core -> rcmd -> macro . counter = 0 ;	4176:8:104764:104793	4122031	0	True				
ANR	4123399	AssignmentExpression	core -> rcmd -> macro . counter = 0		4122031	0		=			
ANR	4123400	MemberAccess	core -> rcmd -> macro . counter		4122031	0					
ANR	4123401	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123402	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123403	Identifier	core		4122031	0					
ANR	4123404	Identifier	rcmd		4122031	1					
ANR	4123405	Identifier	macro		4122031	1					
ANR	4123406	Identifier	counter		4122031	1					
ANR	4123407	PrimaryExpression	0		4122031	1					
ANR	4123408	Condition	i < 999	4176:39:104795:104801	4122031	1	True				
ANR	4123409	RelationalExpression	i < 999		4122031	0		<			
ANR	4123410	Identifier	i		4122031	0					
ANR	4123411	PrimaryExpression	999		4122031	1					
ANR	4123412	PostIncDecOperationExpression	core -> rcmd -> macro . counter ++	4176:48:104804:104830	4122031	2	True				
ANR	4123413	MemberAccess	core -> rcmd -> macro . counter		4122031	0					
ANR	4123414	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123415	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123416	Identifier	core		4122031	0					
ANR	4123417	Identifier	rcmd		4122031	1					
ANR	4123418	Identifier	macro		4122031	1					
ANR	4123419	Identifier	counter		4122031	1					
ANR	4123420	IncDec	++		4122031	1					
ANR	4123421	CompoundStatement		238:77:5498:5498	4122031	3					
ANR	4123422	IfStatement	if ( r_cons_is_breaked ( ) )		4122031	0					
ANR	4123423	Condition	r_cons_is_breaked ( )	4177:8:104843:104862	4122031	0	True				
ANR	4123424	CallExpression	r_cons_is_breaked ( )		4122031	0					
ANR	4123425	Callee	r_cons_is_breaked		4122031	0					
ANR	4123426	Identifier	r_cons_is_breaked		4122031	0					
ANR	4123427	ArgumentList			4122031	1					
ANR	4123428	CompoundStatement		239:30:5530:5530	4122031	1					
ANR	4123429	BreakStatement	break ;	4178:5:104872:104877	4122031	0	True				
ANR	4123430	ExpressionStatement	"r_cmd_macro_call ( & core -> rcmd -> macro , each + 2 )"	4180:4:104889:104936	4122031	1	True				
ANR	4123431	CallExpression	"r_cmd_macro_call ( & core -> rcmd -> macro , each + 2 )"		4122031	0					
ANR	4123432	Callee	r_cmd_macro_call		4122031	0					
ANR	4123433	Identifier	r_cmd_macro_call		4122031	0					
ANR	4123434	ArgumentList	& core -> rcmd -> macro		4122031	1					
ANR	4123435	Argument	& core -> rcmd -> macro		4122031	0					
ANR	4123436	UnaryOperationExpression	& core -> rcmd -> macro		4122031	0					
ANR	4123437	UnaryOperator	&		4122031	0					
ANR	4123438	PtrMemberAccess	core -> rcmd -> macro		4122031	1					
ANR	4123439	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123440	Identifier	core		4122031	0					
ANR	4123441	Identifier	rcmd		4122031	1					
ANR	4123442	Identifier	macro		4122031	1					
ANR	4123443	Argument	each + 2		4122031	1					
ANR	4123444	AdditiveExpression	each + 2		4122031	0		+			
ANR	4123445	Identifier	each		4122031	0					
ANR	4123446	PrimaryExpression	2		4122031	1					
ANR	4123447	IfStatement	if ( ! core -> rcmd -> macro . brk_value )		4122031	2					
ANR	4123448	Condition	! core -> rcmd -> macro . brk_value	4181:8:104946:104973	4122031	0	True				
ANR	4123449	UnaryOperationExpression	! core -> rcmd -> macro . brk_value		4122031	0					
ANR	4123450	UnaryOperator	!		4122031	0					
ANR	4123451	MemberAccess	core -> rcmd -> macro . brk_value		4122031	1					
ANR	4123452	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123453	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123454	Identifier	core		4122031	0					
ANR	4123455	Identifier	rcmd		4122031	1					
ANR	4123456	Identifier	macro		4122031	1					
ANR	4123457	Identifier	brk_value		4122031	1					
ANR	4123458	CompoundStatement		243:38:5641:5641	4122031	1					
ANR	4123459	BreakStatement	break ;	4182:5:104983:104988	4122031	0	True				
ANR	4123460	ExpressionStatement	addr = core -> rcmd -> macro . _brk_value	4184:4:105000:105035	4122031	3	True				
ANR	4123461	AssignmentExpression	addr = core -> rcmd -> macro . _brk_value		4122031	0		=			
ANR	4123462	Identifier	addr		4122031	0					
ANR	4123463	MemberAccess	core -> rcmd -> macro . _brk_value		4122031	1					
ANR	4123464	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123465	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123466	Identifier	core		4122031	0					
ANR	4123467	Identifier	rcmd		4122031	1					
ANR	4123468	Identifier	macro		4122031	1					
ANR	4123469	Identifier	_brk_value		4122031	1					
ANR	4123470	Statement	sprintf	4185:4:105041:105047	4122031	4	True				
ANR	4123471	Statement	(	4185:12:105049:105049	4122031	5	True				
ANR	4123472	Statement	cmd2	4185:13:105050:105053	4122031	6	True				
ANR	4123473	Statement	","	4185:17:105054:105054	4122031	7	True				
ANR	4123474	Statement	"""%s @ 0x%08"""	4185:19:105056:105067	4122031	8	True				
ANR	4123475	Statement	PFMT64x	4185:31:105068:105074	4122031	9	True				
ANR	4123476	Statement	""""""	4185:38:105075:105076	4122031	10	True				
ANR	4123477	Statement	","	4185:40:105077:105077	4122031	11	True				
ANR	4123478	Statement	cmd	4185:42:105079:105081	4122031	12	True				
ANR	4123479	Statement	","	4185:45:105082:105082	4122031	13	True				
ANR	4123480	Statement	addr	4185:47:105084:105087	4122031	14	True				
ANR	4123481	Statement	)	4185:51:105088:105088	4122031	15	True				
ANR	4123482	ExpressionStatement		4185:52:105089:105089	4122031	16	True				
ANR	4123483	Statement	eprintf	4186:4:105095:105101	4122031	17	True				
ANR	4123484	Statement	(	4186:12:105103:105103	4122031	18	True				
ANR	4123485	Statement	"""0x%08"""	4186:13:105104:105110	4122031	19	True				
ANR	4123486	Statement	PFMT64x	4186:20:105111:105117	4122031	20	True				
ANR	4123487	Statement	""" (%s)\\n"""	4186:27:105118:105126	4122031	21	True				
ANR	4123488	Statement	","	4186:36:105127:105127	4122031	22	True				
ANR	4123489	Statement	addr	4186:38:105129:105132	4122031	23	True				
ANR	4123490	Statement	","	4186:42:105133:105133	4122031	24	True				
ANR	4123491	Statement	cmd2	4186:44:105135:105138	4122031	25	True				
ANR	4123492	Statement	)	4186:48:105139:105139	4122031	26	True				
ANR	4123493	ExpressionStatement		4186:49:105140:105140	4122031	27	True				
ANR	4123494	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4187:4:105146:105173	4122031	28	True				
ANR	4123495	CallExpression	"r_core_seek ( core , addr , 1 )"		4122031	0					
ANR	4123496	Callee	r_core_seek		4122031	0					
ANR	4123497	Identifier	r_core_seek		4122031	0					
ANR	4123498	ArgumentList	core		4122031	1					
ANR	4123499	Argument	core		4122031	0					
ANR	4123500	Identifier	core		4122031	0					
ANR	4123501	Argument	addr		4122031	1					
ANR	4123502	Identifier	addr		4122031	0					
ANR	4123503	Argument	1		4122031	2					
ANR	4123504	PrimaryExpression	1		4122031	0					
ANR	4123505	ExpressionStatement	"r_core_cmd ( core , cmd2 , 0 )"	4188:4:105179:105205	4122031	29	True				
ANR	4123506	CallExpression	"r_core_cmd ( core , cmd2 , 0 )"		4122031	0					
ANR	4123507	Callee	r_core_cmd		4122031	0					
ANR	4123508	Identifier	r_core_cmd		4122031	0					
ANR	4123509	ArgumentList	core		4122031	1					
ANR	4123510	Argument	core		4122031	0					
ANR	4123511	Identifier	core		4122031	0					
ANR	4123512	Argument	cmd2		4122031	1					
ANR	4123513	Identifier	cmd2		4122031	0					
ANR	4123514	Argument	0		4122031	2					
ANR	4123515	PrimaryExpression	0		4122031	0					
ANR	4123516	ExpressionStatement	i ++	4189:4:105211:105214	4122031	30	True				
ANR	4123517	PostIncDecOperationExpression	i ++		4122031	0					
ANR	4123518	Identifier	i		4122031	0					
ANR	4123519	IncDec	++		4122031	1					
ANR	4123520	ElseStatement	else		4122031	0					
ANR	4123521	CompoundStatement		256:3:5939:5981	4122031	0					
ANR	4123522	IdentifierDeclStatement	char buf [ 1024 ] ;	4192:3:105235:105249	4122031	0	True				
ANR	4123523	IdentifierDecl	buf [ 1024 ]		4122031	0					
ANR	4123524	IdentifierDeclType	char [ 1024 ]		4122031	0					
ANR	4123525	Identifier	buf		4122031	1					
ANR	4123526	PrimaryExpression	1024		4122031	2					
ANR	4123527	IdentifierDeclStatement	char cmd2 [ 1024 ] ;	4193:3:105254:105269	4122031	1	True				
ANR	4123528	IdentifierDecl	cmd2 [ 1024 ]		4122031	0					
ANR	4123529	IdentifierDeclType	char [ 1024 ]		4122031	0					
ANR	4123530	Identifier	cmd2		4122031	1					
ANR	4123531	PrimaryExpression	1024		4122031	2					
ANR	4123532	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( each + 1 , ""r"" ) ;"	4194:3:105274:105316	4122031	2	True				
ANR	4123533	IdentifierDecl	"* fd = r_sandbox_fopen ( each + 1 , ""r"" )"		4122031	0					
ANR	4123534	IdentifierDeclType	FILE *		4122031	0					
ANR	4123535	Identifier	fd		4122031	1					
ANR	4123536	AssignmentExpression	"* fd = r_sandbox_fopen ( each + 1 , ""r"" )"		4122031	2		=			
ANR	4123537	Identifier	fd		4122031	0					
ANR	4123538	CallExpression	"r_sandbox_fopen ( each + 1 , ""r"" )"		4122031	1					
ANR	4123539	Callee	r_sandbox_fopen		4122031	0					
ANR	4123540	Identifier	r_sandbox_fopen		4122031	0					
ANR	4123541	ArgumentList	each + 1		4122031	1					
ANR	4123542	Argument	each + 1		4122031	0					
ANR	4123543	AdditiveExpression	each + 1		4122031	0		+			
ANR	4123544	Identifier	each		4122031	0					
ANR	4123545	PrimaryExpression	1		4122031	1					
ANR	4123546	Argument	"""r"""		4122031	1					
ANR	4123547	PrimaryExpression	"""r"""		4122031	0					
ANR	4123548	IfStatement	if ( fd )		4122031	3					
ANR	4123549	Condition	fd	4195:7:105325:105326	4122031	0	True				
ANR	4123550	Identifier	fd		4122031	0					
ANR	4123551	CompoundStatement		257:11:5994:5994	4122031	1					
ANR	4123552	ExpressionStatement	core -> rcmd -> macro . counter = 0	4196:4:105335:105364	4122031	0	True				
ANR	4123553	AssignmentExpression	core -> rcmd -> macro . counter = 0		4122031	0		=			
ANR	4123554	MemberAccess	core -> rcmd -> macro . counter		4122031	0					
ANR	4123555	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123556	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123557	Identifier	core		4122031	0					
ANR	4123558	Identifier	rcmd		4122031	1					
ANR	4123559	Identifier	macro		4122031	1					
ANR	4123560	Identifier	counter		4122031	1					
ANR	4123561	PrimaryExpression	0		4122031	1					
ANR	4123562	WhileStatement	while ( ! feof ( fd ) )		4122031	1					
ANR	4123563	Condition	! feof ( fd )	4197:11:105377:105386	4122031	0	True				
ANR	4123564	UnaryOperationExpression	! feof ( fd )		4122031	0					
ANR	4123565	UnaryOperator	!		4122031	0					
ANR	4123566	CallExpression	feof ( fd )		4122031	1					
ANR	4123567	Callee	feof		4122031	0					
ANR	4123568	Identifier	feof		4122031	0					
ANR	4123569	ArgumentList	fd		4122031	1					
ANR	4123570	Argument	fd		4122031	0					
ANR	4123571	Identifier	fd		4122031	0					
ANR	4123572	CompoundStatement		259:23:6054:6054	4122031	1					
ANR	4123573	ExpressionStatement	buf [ 0 ] = '\\0'	4198:5:105396:105409	4122031	0	True				
ANR	4123574	AssignmentExpression	buf [ 0 ] = '\\0'		4122031	0		=			
ANR	4123575	ArrayIndexing	buf [ 0 ]		4122031	0					
ANR	4123576	Identifier	buf		4122031	0					
ANR	4123577	PrimaryExpression	0		4122031	1					
ANR	4123578	PrimaryExpression	'\\0'		4122031	1					
ANR	4123579	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) , fd ) )"		4122031	1					
ANR	4123580	Condition	"! fgets ( buf , sizeof ( buf ) , fd )"	4199:9:105420:105449	4122031	0	True				
ANR	4123581	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) , fd )"		4122031	0					
ANR	4123582	UnaryOperator	!		4122031	0					
ANR	4123583	CallExpression	"fgets ( buf , sizeof ( buf ) , fd )"		4122031	1					
ANR	4123584	Callee	fgets		4122031	0					
ANR	4123585	Identifier	fgets		4122031	0					
ANR	4123586	ArgumentList	buf		4122031	1					
ANR	4123587	Argument	buf		4122031	0					
ANR	4123588	Identifier	buf		4122031	0					
ANR	4123589	Argument	sizeof ( buf )		4122031	1					
ANR	4123590	SizeofExpression	sizeof ( buf )		4122031	0					
ANR	4123591	Sizeof	sizeof		4122031	0					
ANR	4123592	SizeofOperand	buf		4122031	1					
ANR	4123593	Argument	fd		4122031	2					
ANR	4123594	Identifier	fd		4122031	0					
ANR	4123595	CompoundStatement		261:41:6117:6117	4122031	1					
ANR	4123596	BreakStatement	break ;	4200:6:105460:105465	4122031	0	True				
ANR	4123597	ExpressionStatement	"addr = r_num_math ( core -> num , buf )"	4202:5:105479:105513	4122031	2	True				
ANR	4123598	AssignmentExpression	"addr = r_num_math ( core -> num , buf )"		4122031	0		=			
ANR	4123599	Identifier	addr		4122031	0					
ANR	4123600	CallExpression	"r_num_math ( core -> num , buf )"		4122031	1					
ANR	4123601	Callee	r_num_math		4122031	0					
ANR	4123602	Identifier	r_num_math		4122031	0					
ANR	4123603	ArgumentList	core -> num		4122031	1					
ANR	4123604	Argument	core -> num		4122031	0					
ANR	4123605	PtrMemberAccess	core -> num		4122031	0					
ANR	4123606	Identifier	core		4122031	0					
ANR	4123607	Identifier	num		4122031	1					
ANR	4123608	Argument	buf		4122031	1					
ANR	4123609	Identifier	buf		4122031	0					
ANR	4123610	Statement	eprintf	4203:5:105520:105526	4122031	3	True				
ANR	4123611	Statement	(	4203:13:105528:105528	4122031	4	True				
ANR	4123612	Statement	"""0x%08"""	4203:14:105529:105535	4122031	5	True				
ANR	4123613	Statement	PFMT64x	4203:21:105536:105542	4122031	6	True				
ANR	4123614	Statement	""": %s\\n"""	4203:28:105543:105550	4122031	7	True				
ANR	4123615	Statement	","	4203:36:105551:105551	4122031	8	True				
ANR	4123616	Statement	addr	4203:38:105553:105556	4122031	9	True				
ANR	4123617	Statement	","	4203:42:105557:105557	4122031	10	True				
ANR	4123618	Statement	cmd	4203:44:105559:105561	4122031	11	True				
ANR	4123619	Statement	)	4203:47:105562:105562	4122031	12	True				
ANR	4123620	ExpressionStatement		4203:48:105563:105563	4122031	13	True				
ANR	4123621	Statement	sprintf	4204:5:105570:105576	4122031	14	True				
ANR	4123622	Statement	(	4204:13:105578:105578	4122031	15	True				
ANR	4123623	Statement	cmd2	4204:14:105579:105582	4122031	16	True				
ANR	4123624	Statement	","	4204:18:105583:105583	4122031	17	True				
ANR	4123625	Statement	"""%s @ 0x%08"""	4204:20:105585:105596	4122031	18	True				
ANR	4123626	Statement	PFMT64x	4204:32:105597:105603	4122031	19	True				
ANR	4123627	Statement	""""""	4204:39:105604:105605	4122031	20	True				
ANR	4123628	Statement	","	4204:41:105606:105606	4122031	21	True				
ANR	4123629	Statement	cmd	4204:43:105608:105610	4122031	22	True				
ANR	4123630	Statement	","	4204:46:105611:105611	4122031	23	True				
ANR	4123631	Statement	addr	4204:48:105613:105616	4122031	24	True				
ANR	4123632	Statement	)	4204:52:105617:105617	4122031	25	True				
ANR	4123633	ExpressionStatement		4204:53:105618:105618	4122031	26	True				
ANR	4123634	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	4205:5:105625:105652	4122031	27	True				
ANR	4123635	CallExpression	"r_core_seek ( core , addr , 1 )"		4122031	0					
ANR	4123636	Callee	r_core_seek		4122031	0					
ANR	4123637	Identifier	r_core_seek		4122031	0					
ANR	4123638	ArgumentList	core		4122031	1					
ANR	4123639	Argument	core		4122031	0					
ANR	4123640	Identifier	core		4122031	0					
ANR	4123641	Argument	addr		4122031	1					
ANR	4123642	Identifier	addr		4122031	0					
ANR	4123643	Argument	1		4122031	2					
ANR	4123644	PrimaryExpression	1		4122031	0					
ANR	4123645	ExpressionStatement	"r_core_cmd ( core , cmd2 , 0 )"	4206:5:105666:105692	4122031	28	True				
ANR	4123646	CallExpression	"r_core_cmd ( core , cmd2 , 0 )"		4122031	0					
ANR	4123647	Callee	r_core_cmd		4122031	0					
ANR	4123648	Identifier	r_core_cmd		4122031	0					
ANR	4123649	ArgumentList	core		4122031	1					
ANR	4123650	Argument	core		4122031	0					
ANR	4123651	Identifier	core		4122031	0					
ANR	4123652	Argument	cmd2		4122031	1					
ANR	4123653	Identifier	cmd2		4122031	0					
ANR	4123654	Argument	0		4122031	2					
ANR	4123655	PrimaryExpression	0		4122031	0					
ANR	4123656	ExpressionStatement	core -> rcmd -> macro . counter ++	4207:5:105699:105726	4122031	29	True				
ANR	4123657	PostIncDecOperationExpression	core -> rcmd -> macro . counter ++		4122031	0					
ANR	4123658	MemberAccess	core -> rcmd -> macro . counter		4122031	0					
ANR	4123659	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123660	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123661	Identifier	core		4122031	0					
ANR	4123662	Identifier	rcmd		4122031	1					
ANR	4123663	Identifier	macro		4122031	1					
ANR	4123664	Identifier	counter		4122031	1					
ANR	4123665	IncDec	++		4122031	1					
ANR	4123666	ExpressionStatement	fclose ( fd )	4209:4:105738:105749	4122031	2	True				
ANR	4123667	CallExpression	fclose ( fd )		4122031	0					
ANR	4123668	Callee	fclose		4122031	0					
ANR	4123669	Identifier	fclose		4122031	0					
ANR	4123670	ArgumentList	fd		4122031	1					
ANR	4123671	Argument	fd		4122031	0					
ANR	4123672	Identifier	fd		4122031	0					
ANR	4123673	ElseStatement	else		4122031	0					
ANR	4123674	CompoundStatement		272:10:6426:6426	4122031	0					
ANR	4123675	ExpressionStatement	"eprintf ( ""cannot open file '%s' to read offsets\\n"" , each + 1 )"	4211:4:105767:105828	4122031	0	True				
ANR	4123676	CallExpression	"eprintf ( ""cannot open file '%s' to read offsets\\n"" , each + 1 )"		4122031	0					
ANR	4123677	Callee	eprintf		4122031	0					
ANR	4123678	Identifier	eprintf		4122031	0					
ANR	4123679	ArgumentList	"""cannot open file '%s' to read offsets\\n"""		4122031	1					
ANR	4123680	Argument	"""cannot open file '%s' to read offsets\\n"""		4122031	0					
ANR	4123681	PrimaryExpression	"""cannot open file '%s' to read offsets\\n"""		4122031	0					
ANR	4123682	Argument	each + 1		4122031	1					
ANR	4123683	AdditiveExpression	each + 1		4122031	0		+			
ANR	4123684	Identifier	each		4122031	0					
ANR	4123685	PrimaryExpression	1		4122031	1					
ANR	4123686	BreakStatement	break ;	4214:2:105841:105846	4122031	36	True				
ANR	4123687	Label	default :	4215:1:105849:105856	4122031	37	True				
ANR	4123688	Identifier	default		4122031	0					
ANR	4123689	ExpressionStatement	core -> rcmd -> macro . counter = 0	4216:2:105860:105889	4122031	38	True				
ANR	4123690	AssignmentExpression	core -> rcmd -> macro . counter = 0		4122031	0		=			
ANR	4123691	MemberAccess	core -> rcmd -> macro . counter		4122031	0					
ANR	4123692	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123693	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123694	Identifier	core		4122031	0					
ANR	4123695	Identifier	rcmd		4122031	1					
ANR	4123696	Identifier	macro		4122031	1					
ANR	4123697	Identifier	counter		4122031	1					
ANR	4123698	PrimaryExpression	0		4122031	1					
ANR	4123699	ForStatement	for ( ; * each == ' ' ; each ++ )		4122031	39					
ANR	4123700	Condition	* each == ' '	4217:9:105900:105911	4122031	0	True				
ANR	4123701	EqualityExpression	* each == ' '		4122031	0		==			
ANR	4123702	UnaryOperationExpression	* each		4122031	0					
ANR	4123703	UnaryOperator	*		4122031	0					
ANR	4123704	Identifier	each		4122031	1					
ANR	4123705	PrimaryExpression	' '		4122031	1					
ANR	4123706	PostIncDecOperationExpression	each ++	4217:23:105914:105919	4122031	1	True				
ANR	4123707	Identifier	each		4122031	0					
ANR	4123708	IncDec	++		4122031	1					
ANR	4123709	CompoundStatement		279:31:6587:6587	4122031	2					
ANR	4123710	ExpressionStatement		4218:3:105927:105927	4122031	0	True				
ANR	4123711	ExpressionStatement	i = 0	4220:2:105935:105940	4122031	40	True				
ANR	4123712	AssignmentExpression	i = 0		4122031	0		=			
ANR	4123713	Identifier	i		4122031	0					
ANR	4123714	PrimaryExpression	0		4122031	1					
ANR	4123715	WhileStatement	while ( str [ i ] )		4122031	41					
ANR	4123716	Condition	str [ i ]	4221:9:105951:105956	4122031	0	True				
ANR	4123717	ArrayIndexing	str [ i ]		4122031	0					
ANR	4123718	Identifier	str		4122031	0					
ANR	4123719	Identifier	i		4122031	1					
ANR	4123720	CompoundStatement		283:17:6624:6624	4122031	1					
ANR	4123721	ExpressionStatement	j = i	4222:3:105964:105969	4122031	0	True				
ANR	4123722	AssignmentExpression	j = i		4122031	0		=			
ANR	4123723	Identifier	j		4122031	0					
ANR	4123724	Identifier	i		4122031	1					
ANR	4123725	ForStatement	for ( ; str [ j ] && str [ j ] == ' ' ; j ++ )		4122031	1					
ANR	4123726	Condition	str [ j ] && str [ j ] == ' '	4223:10:105981:106003	4122031	0	True				
ANR	4123727	AndExpression	str [ j ] && str [ j ] == ' '		4122031	0		&&			
ANR	4123728	ArrayIndexing	str [ j ]		4122031	0					
ANR	4123729	Identifier	str		4122031	0					
ANR	4123730	Identifier	j		4122031	1					
ANR	4123731	EqualityExpression	str [ j ] == ' '		4122031	1		==			
ANR	4123732	ArrayIndexing	str [ j ]		4122031	0					
ANR	4123733	Identifier	str		4122031	0					
ANR	4123734	Identifier	j		4122031	1					
ANR	4123735	PrimaryExpression	' '		4122031	1					
ANR	4123736	PostIncDecOperationExpression	j ++	4223:35:106006:106008	4122031	1	True				
ANR	4123737	Identifier	j		4122031	0					
ANR	4123738	IncDec	++		4122031	1					
ANR	4123739	CompoundStatement		285:40:6676:6676	4122031	2					
ANR	4123740	ExpressionStatement		4224:4:106017:106017	4122031	0	True				
ANR	4123741	ForStatement	for ( i = j ; str [ i ] && str [ i ] != ' ' ; i ++ )		4122031	2					
ANR	4123742	ForInit	i = j ;	4226:8:106047:106052	4122031	0	True				
ANR	4123743	AssignmentExpression	i = j		4122031	0		=			
ANR	4123744	Identifier	i		4122031	0					
ANR	4123745	Identifier	j		4122031	1					
ANR	4123746	Condition	str [ i ] && str [ i ] != ' '	4226:15:106054:106076	4122031	1	True				
ANR	4123747	AndExpression	str [ i ] && str [ i ] != ' '		4122031	0		&&			
ANR	4123748	ArrayIndexing	str [ i ]		4122031	0					
ANR	4123749	Identifier	str		4122031	0					
ANR	4123750	Identifier	i		4122031	1					
ANR	4123751	EqualityExpression	str [ i ] != ' '		4122031	1		!=			
ANR	4123752	ArrayIndexing	str [ i ]		4122031	0					
ANR	4123753	Identifier	str		4122031	0					
ANR	4123754	Identifier	i		4122031	1					
ANR	4123755	PrimaryExpression	' '		4122031	1					
ANR	4123756	PostIncDecOperationExpression	i ++	4226:40:106079:106081	4122031	2	True				
ANR	4123757	Identifier	i		4122031	0					
ANR	4123758	IncDec	++		4122031	1					
ANR	4123759	CompoundStatement		288:45:6749:6749	4122031	3					
ANR	4123760	ExpressionStatement		4227:4:106090:106090	4122031	0	True				
ANR	4123761	ExpressionStatement	ch = str [ i ]	4229:3:106112:106123	4122031	3	True				
ANR	4123762	AssignmentExpression	ch = str [ i ]		4122031	0		=			
ANR	4123763	Identifier	ch		4122031	0					
ANR	4123764	ArrayIndexing	str [ i ]		4122031	1					
ANR	4123765	Identifier	str		4122031	0					
ANR	4123766	Identifier	i		4122031	1					
ANR	4123767	ExpressionStatement	str [ i ] = '\\0'	4230:3:106128:106141	4122031	4	True				
ANR	4123768	AssignmentExpression	str [ i ] = '\\0'		4122031	0		=			
ANR	4123769	ArrayIndexing	str [ i ]		4122031	0					
ANR	4123770	Identifier	str		4122031	0					
ANR	4123771	Identifier	i		4122031	1					
ANR	4123772	PrimaryExpression	'\\0'		4122031	1					
ANR	4123773	ExpressionStatement	word = strdup ( str + j )	4231:3:106146:106169	4122031	5	True				
ANR	4123774	AssignmentExpression	word = strdup ( str + j )		4122031	0		=			
ANR	4123775	Identifier	word		4122031	0					
ANR	4123776	CallExpression	strdup ( str + j )		4122031	1					
ANR	4123777	Callee	strdup		4122031	0					
ANR	4123778	Identifier	strdup		4122031	0					
ANR	4123779	ArgumentList	str + j		4122031	1					
ANR	4123780	Argument	str + j		4122031	0					
ANR	4123781	AdditiveExpression	str + j		4122031	0		+			
ANR	4123782	Identifier	str		4122031	0					
ANR	4123783	Identifier	j		4122031	1					
ANR	4123784	IfStatement	if ( ! word )		4122031	6					
ANR	4123785	Condition	! word	4232:7:106178:106182	4122031	0	True				
ANR	4123786	UnaryOperationExpression	! word		4122031	0					
ANR	4123787	UnaryOperator	!		4122031	0					
ANR	4123788	Identifier	word		4122031	1					
ANR	4123789	CompoundStatement		294:14:6850:6850	4122031	1					
ANR	4123790	BreakStatement	break ;	4233:4:106191:106196	4122031	0	True				
ANR	4123791	ExpressionStatement	str [ i ] = ch	4235:3:106206:106217	4122031	7	True				
ANR	4123792	AssignmentExpression	str [ i ] = ch		4122031	0		=			
ANR	4123793	ArrayIndexing	str [ i ]		4122031	0					
ANR	4123794	Identifier	str		4122031	0					
ANR	4123795	Identifier	i		4122031	1					
ANR	4123796	Identifier	ch		4122031	1					
ANR	4123797	CompoundStatement		300:4:6955:7022	4122031	8					
ANR	4123798	IdentifierDeclStatement	const RSpace * flagspace = r_flag_space_cur ( core -> flags ) ;	4237:4:106228:106284	4122031	0	True				
ANR	4123799	IdentifierDecl	* flagspace = r_flag_space_cur ( core -> flags )		4122031	0					
ANR	4123800	IdentifierDeclType	const RSpace *		4122031	0					
ANR	4123801	Identifier	flagspace		4122031	1					
ANR	4123802	AssignmentExpression	* flagspace = r_flag_space_cur ( core -> flags )		4122031	2		=			
ANR	4123803	Identifier	flagspace		4122031	0					
ANR	4123804	CallExpression	r_flag_space_cur ( core -> flags )		4122031	1					
ANR	4123805	Callee	r_flag_space_cur		4122031	0					
ANR	4123806	Identifier	r_flag_space_cur		4122031	0					
ANR	4123807	ArgumentList	core -> flags		4122031	1					
ANR	4123808	Argument	core -> flags		4122031	0					
ANR	4123809	PtrMemberAccess	core -> flags		4122031	0					
ANR	4123810	Identifier	core		4122031	0					
ANR	4123811	Identifier	flags		4122031	1					
ANR	4123812	IdentifierDeclStatement	RList * match_flag_items = r_list_newf ( ( RListFree ) r_flag_item_free ) ;	4238:4:106290:106357	4122031	1	True				
ANR	4123813	IdentifierDecl	* match_flag_items = r_list_newf ( ( RListFree ) r_flag_item_free )		4122031	0					
ANR	4123814	IdentifierDeclType	RList *		4122031	0					
ANR	4123815	Identifier	match_flag_items		4122031	1					
ANR	4123816	AssignmentExpression	* match_flag_items = r_list_newf ( ( RListFree ) r_flag_item_free )		4122031	2		=			
ANR	4123817	Identifier	match_flag_items		4122031	0					
ANR	4123818	CallExpression	r_list_newf ( ( RListFree ) r_flag_item_free )		4122031	1					
ANR	4123819	Callee	r_list_newf		4122031	0					
ANR	4123820	Identifier	r_list_newf		4122031	0					
ANR	4123821	ArgumentList	( RListFree ) r_flag_item_free		4122031	1					
ANR	4123822	Argument	( RListFree ) r_flag_item_free		4122031	0					
ANR	4123823	CastExpression	( RListFree ) r_flag_item_free		4122031	0					
ANR	4123824	CastTarget	RListFree		4122031	0					
ANR	4123825	Identifier	r_flag_item_free		4122031	1					
ANR	4123826	IfStatement	if ( ! match_flag_items )		4122031	2					
ANR	4123827	Condition	! match_flag_items	4239:8:106367:106383	4122031	0	True				
ANR	4123828	UnaryOperationExpression	! match_flag_items		4122031	0					
ANR	4123829	UnaryOperator	!		4122031	0					
ANR	4123830	Identifier	match_flag_items		4122031	1					
ANR	4123831	CompoundStatement		301:27:7051:7051	4122031	1					
ANR	4123832	BreakStatement	break ;	4240:5:106393:106398	4122031	0	True				
ANR	4123833	Statement	struct	4247:4:106597:106602	4122031	3	True				
ANR	4123834	Statement	duplicate_flag_t	4247:11:106604:106619	4122031	4	True				
ANR	4123835	Statement	u	4247:28:106621:106621	4122031	5	True				
ANR	4123836	Statement	=	4247:30:106623:106623	4122031	6	True				
ANR	4123837	CompoundStatement		309:32:7290:7290	4122031	7					
ANR	4123838	Statement	.	4248:5:106632:106632	4122031	0	True				
ANR	4123839	Statement	ret	4248:6:106633:106635	4122031	1	True				
ANR	4123840	Statement	=	4248:10:106637:106637	4122031	2	True				
ANR	4123841	Statement	match_flag_items	4248:12:106639:106654	4122031	3	True				
ANR	4123842	Statement	","	4248:28:106655:106655	4122031	4	True				
ANR	4123843	Statement	.	4249:5:106662:106662	4122031	5	True				
ANR	4123844	Statement	word	4249:6:106663:106666	4122031	6	True				
ANR	4123845	Statement	=	4249:11:106668:106668	4122031	7	True				
ANR	4123846	Statement	word	4249:13:106670:106673	4122031	8	True				
ANR	4123847	Statement	","	4249:17:106674:106674	4122031	9	True				
ANR	4123848	ExpressionStatement		4250:5:106681:106681	4122031	8	True				
ANR	4123849	ExpressionStatement	"r_flag_foreach_space ( core -> flags , flagspace , duplicate_flag , & u )"	4251:4:106687:106752	4122031	9	True				
ANR	4123850	CallExpression	"r_flag_foreach_space ( core -> flags , flagspace , duplicate_flag , & u )"		4122031	0					
ANR	4123851	Callee	r_flag_foreach_space		4122031	0					
ANR	4123852	Identifier	r_flag_foreach_space		4122031	0					
ANR	4123853	ArgumentList	core -> flags		4122031	1					
ANR	4123854	Argument	core -> flags		4122031	0					
ANR	4123855	PtrMemberAccess	core -> flags		4122031	0					
ANR	4123856	Identifier	core		4122031	0					
ANR	4123857	Identifier	flags		4122031	1					
ANR	4123858	Argument	flagspace		4122031	1					
ANR	4123859	Identifier	flagspace		4122031	0					
ANR	4123860	Argument	duplicate_flag		4122031	2					
ANR	4123861	Identifier	duplicate_flag		4122031	0					
ANR	4123862	Argument	& u		4122031	3					
ANR	4123863	UnaryOperationExpression	& u		4122031	0					
ANR	4123864	UnaryOperator	&		4122031	0					
ANR	4123865	Identifier	u		4122031	1					
ANR	4123866	Statement	r_list_foreach	4254:4:106794:106807	4122031	10	True				
ANR	4123867	Statement	(	4254:19:106809:106809	4122031	11	True				
ANR	4123868	Statement	match_flag_items	4254:20:106810:106825	4122031	12	True				
ANR	4123869	Statement	","	4254:36:106826:106826	4122031	13	True				
ANR	4123870	Statement	iter	4254:38:106828:106831	4122031	14	True				
ANR	4123871	Statement	","	4254:42:106832:106832	4122031	15	True				
ANR	4123872	Statement	flag	4254:44:106834:106837	4122031	16	True				
ANR	4123873	Statement	)	4254:48:106838:106838	4122031	17	True				
ANR	4123874	CompoundStatement		322:5:7589:7611	4122031	18					
ANR	4123875	IfStatement	if ( r_cons_is_breaked ( ) )		4122031	0					
ANR	4123876	Condition	r_cons_is_breaked ( )	4255:9:106851:106870	4122031	0	True				
ANR	4123877	CallExpression	r_cons_is_breaked ( )		4122031	0					
ANR	4123878	Callee	r_cons_is_breaked		4122031	0					
ANR	4123879	Identifier	r_cons_is_breaked		4122031	0					
ANR	4123880	ArgumentList			4122031	1					
ANR	4123881	CompoundStatement		317:31:7538:7538	4122031	1					
ANR	4123882	BreakStatement	break ;	4256:6:106881:106886	4122031	0	True				
ANR	4123883	IdentifierDeclStatement	char * buf = NULL ;	4259:5:106901:106917	4122031	1	True				
ANR	4123884	IdentifierDecl	* buf = NULL		4122031	0					
ANR	4123885	IdentifierDeclType	char *		4122031	0					
ANR	4123886	Identifier	buf		4122031	1					
ANR	4123887	AssignmentExpression	* buf = NULL		4122031	2		=			
ANR	4123888	Identifier	NULL		4122031	0					
ANR	4123889	Identifier	NULL		4122031	1					
ANR	4123890	IdentifierDeclStatement	const char * tmp = NULL ;	4260:5:106924:106946	4122031	2	True				
ANR	4123891	IdentifierDecl	* tmp = NULL		4122031	0					
ANR	4123892	IdentifierDeclType	const char *		4122031	0					
ANR	4123893	Identifier	tmp		4122031	1					
ANR	4123894	AssignmentExpression	* tmp = NULL		4122031	2		=			
ANR	4123895	Identifier	NULL		4122031	0					
ANR	4123896	Identifier	NULL		4122031	1					
ANR	4123897	ExpressionStatement	"r_core_seek ( core , flag -> offset , 1 )"	4261:5:106953:106988	4122031	3	True				
ANR	4123898	CallExpression	"r_core_seek ( core , flag -> offset , 1 )"		4122031	0					
ANR	4123899	Callee	r_core_seek		4122031	0					
ANR	4123900	Identifier	r_core_seek		4122031	0					
ANR	4123901	ArgumentList	core		4122031	1					
ANR	4123902	Argument	core		4122031	0					
ANR	4123903	Identifier	core		4122031	0					
ANR	4123904	Argument	flag -> offset		4122031	1					
ANR	4123905	PtrMemberAccess	flag -> offset		4122031	0					
ANR	4123906	Identifier	flag		4122031	0					
ANR	4123907	Identifier	offset		4122031	1					
ANR	4123908	Argument	1		4122031	2					
ANR	4123909	PrimaryExpression	1		4122031	0					
ANR	4123910	ExpressionStatement	r_cons_push ( )	4262:5:106995:107009	4122031	4	True				
ANR	4123911	CallExpression	r_cons_push ( )		4122031	0					
ANR	4123912	Callee	r_cons_push		4122031	0					
ANR	4123913	Identifier	r_cons_push		4122031	0					
ANR	4123914	ArgumentList			4122031	1					
ANR	4123915	ExpressionStatement	"r_core_cmd ( core , cmd , 0 )"	4263:5:107016:107041	4122031	5	True				
ANR	4123916	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4122031	0					
ANR	4123917	Callee	r_core_cmd		4122031	0					
ANR	4123918	Identifier	r_core_cmd		4122031	0					
ANR	4123919	ArgumentList	core		4122031	1					
ANR	4123920	Argument	core		4122031	0					
ANR	4123921	Identifier	core		4122031	0					
ANR	4123922	Argument	cmd		4122031	1					
ANR	4123923	Identifier	cmd		4122031	0					
ANR	4123924	Argument	0		4122031	2					
ANR	4123925	PrimaryExpression	0		4122031	0					
ANR	4123926	ExpressionStatement	tmp = r_cons_get_buffer ( )	4264:5:107048:107074	4122031	6	True				
ANR	4123927	AssignmentExpression	tmp = r_cons_get_buffer ( )		4122031	0		=			
ANR	4123928	Identifier	tmp		4122031	0					
ANR	4123929	CallExpression	r_cons_get_buffer ( )		4122031	1					
ANR	4123930	Callee	r_cons_get_buffer		4122031	0					
ANR	4123931	Identifier	r_cons_get_buffer		4122031	0					
ANR	4123932	ArgumentList			4122031	1					
ANR	4123933	ExpressionStatement	buf = tmp ? strdup ( tmp ) : NULL	4265:5:107081:107110	4122031	7	True				
ANR	4123934	AssignmentExpression	buf = tmp ? strdup ( tmp ) : NULL		4122031	0		=			
ANR	4123935	Identifier	buf		4122031	0					
ANR	4123936	ConditionalExpression	tmp ? strdup ( tmp ) : NULL		4122031	1					
ANR	4123937	Condition	tmp		4122031	0					
ANR	4123938	Identifier	tmp		4122031	0					
ANR	4123939	CallExpression	strdup ( tmp )		4122031	1					
ANR	4123940	Callee	strdup		4122031	0					
ANR	4123941	Identifier	strdup		4122031	0					
ANR	4123942	ArgumentList	tmp		4122031	1					
ANR	4123943	Argument	tmp		4122031	0					
ANR	4123944	Identifier	tmp		4122031	0					
ANR	4123945	Identifier	NULL		4122031	2					
ANR	4123946	ExpressionStatement	r_cons_pop ( )	4266:5:107117:107130	4122031	8	True				
ANR	4123947	CallExpression	r_cons_pop ( )		4122031	0					
ANR	4123948	Callee	r_cons_pop		4122031	0					
ANR	4123949	Identifier	r_cons_pop		4122031	0					
ANR	4123950	ArgumentList			4122031	1					
ANR	4123951	ExpressionStatement	r_cons_strcat ( buf )	4267:5:107137:107156	4122031	9	True				
ANR	4123952	CallExpression	r_cons_strcat ( buf )		4122031	0					
ANR	4123953	Callee	r_cons_strcat		4122031	0					
ANR	4123954	Identifier	r_cons_strcat		4122031	0					
ANR	4123955	ArgumentList	buf		4122031	1					
ANR	4123956	Argument	buf		4122031	0					
ANR	4123957	Identifier	buf		4122031	0					
ANR	4123958	ExpressionStatement	free ( buf )	4268:5:107163:107173	4122031	10	True				
ANR	4123959	CallExpression	free ( buf )		4122031	0					
ANR	4123960	Callee	free		4122031	0					
ANR	4123961	Identifier	free		4122031	0					
ANR	4123962	ArgumentList	buf		4122031	1					
ANR	4123963	Argument	buf		4122031	0					
ANR	4123964	Identifier	buf		4122031	0					
ANR	4123965	ExpressionStatement	r_list_free ( match_flag_items )	4271:4:107186:107216	4122031	19	True				
ANR	4123966	CallExpression	r_list_free ( match_flag_items )		4122031	0					
ANR	4123967	Callee	r_list_free		4122031	0					
ANR	4123968	Identifier	r_list_free		4122031	0					
ANR	4123969	ArgumentList	match_flag_items		4122031	1					
ANR	4123970	Argument	match_flag_items		4122031	0					
ANR	4123971	Identifier	match_flag_items		4122031	0					
ANR	4123972	ExpressionStatement	core -> rcmd -> macro . counter ++	4272:4:107222:107250	4122031	20	True				
ANR	4123973	PostIncDecOperationExpression	core -> rcmd -> macro . counter ++		4122031	0					
ANR	4123974	MemberAccess	core -> rcmd -> macro . counter		4122031	0					
ANR	4123975	PtrMemberAccess	core -> rcmd -> macro		4122031	0					
ANR	4123976	PtrMemberAccess	core -> rcmd		4122031	0					
ANR	4123977	Identifier	core		4122031	0					
ANR	4123978	Identifier	rcmd		4122031	1					
ANR	4123979	Identifier	macro		4122031	1					
ANR	4123980	Identifier	counter		4122031	1					
ANR	4123981	IncDec	++		4122031	1					
ANR	4123982	ExpressionStatement	R_FREE ( word )	4273:4:107256:107269	4122031	21	True				
ANR	4123983	CallExpression	R_FREE ( word )		4122031	0					
ANR	4123984	Callee	R_FREE		4122031	0					
ANR	4123985	Identifier	R_FREE		4122031	0					
ANR	4123986	ArgumentList	word		4122031	1					
ANR	4123987	Argument	word		4122031	0					
ANR	4123988	Identifier	word		4122031	0					
ANR	4123989	ExpressionStatement	r_cons_break_pop ( )	4277:1:107284:107303	4122031	12	True				
ANR	4123990	CallExpression	r_cons_break_pop ( )		4122031	0					
ANR	4123991	Callee	r_cons_break_pop		4122031	0					
ANR	4123992	Identifier	r_cons_break_pop		4122031	0					
ANR	4123993	ArgumentList			4122031	1					
ANR	4123994	ExpressionStatement	core -> offset = oseek	4279:1:107336:107356	4122031	13	True				
ANR	4123995	AssignmentExpression	core -> offset = oseek		4122031	0		=			
ANR	4123996	PtrMemberAccess	core -> offset		4122031	0					
ANR	4123997	Identifier	core		4122031	0					
ANR	4123998	Identifier	offset		4122031	1					
ANR	4123999	Identifier	oseek		4122031	1					
ANR	4124000	ExpressionStatement	free ( word )	4281:1:107360:107371	4122031	14	True				
ANR	4124001	CallExpression	free ( word )		4122031	0					
ANR	4124002	Callee	free		4122031	0					
ANR	4124003	Identifier	free		4122031	0					
ANR	4124004	ArgumentList	word		4122031	1					
ANR	4124005	Argument	word		4122031	0					
ANR	4124006	Identifier	word		4122031	0					
ANR	4124007	ExpressionStatement	free ( ostr )	4282:1:107374:107385	4122031	15	True				
ANR	4124008	CallExpression	free ( ostr )		4122031	0					
ANR	4124009	Callee	free		4122031	0					
ANR	4124010	Identifier	free		4122031	0					
ANR	4124011	ArgumentList	ostr		4122031	1					
ANR	4124012	Argument	ostr		4122031	0					
ANR	4124013	Identifier	ostr		4122031	0					
ANR	4124014	ReturnStatement	return true ;	4283:1:107388:107399	4122031	16	True				
ANR	4124015	Identifier	true		4122031	0					
ANR	4124016	Label	out_finish :	4284:0:107401:107411	4122031	17	True				
ANR	4124017	Identifier	out_finish		4122031	0					
ANR	4124018	ExpressionStatement	free ( ostr )	4285:1:107414:107425	4122031	18	True				
ANR	4124019	CallExpression	free ( ostr )		4122031	0					
ANR	4124020	Callee	free		4122031	0					
ANR	4124021	Identifier	free		4122031	0					
ANR	4124022	ArgumentList	ostr		4122031	1					
ANR	4124023	Argument	ostr		4122031	0					
ANR	4124024	Identifier	ostr		4122031	0					
ANR	4124025	ExpressionStatement	r_cons_break_pop ( )	4286:1:107428:107447	4122031	19	True				
ANR	4124026	CallExpression	r_cons_break_pop ( )		4122031	0					
ANR	4124027	Callee	r_cons_break_pop		4122031	0					
ANR	4124028	Identifier	r_cons_break_pop		4122031	0					
ANR	4124029	ArgumentList			4122031	1					
ANR	4124030	ReturnStatement	return false ;	4287:1:107450:107462	4122031	20	True				
ANR	4124031	Identifier	false		4122031	0					
ANR	4124032	ReturnType	R_API int		4122031	1					
ANR	4124033	Identifier	r_core_cmd_foreach		4122031	2					
ANR	4124034	ParameterList	"RCore * core , const char * cmd , char * each"		4122031	3					
ANR	4124035	Parameter	RCore * core	3939:29:99292:99302	4122031	0	True				
ANR	4124036	ParameterType	RCore *		4122031	0					
ANR	4124037	Identifier	core		4122031	1					
ANR	4124038	Parameter	const char * cmd	3939:42:99305:99319	4122031	1	True				
ANR	4124039	ParameterType	const char *		4122031	0					
ANR	4124040	Identifier	cmd		4122031	1					
ANR	4124041	Parameter	char * each	3939:59:99322:99331	4122031	2	True				
ANR	4124042	ParameterType	char *		4122031	0					
ANR	4124043	Identifier	each		4122031	1					
ANR	4124044	CFGEntryNode	ENTRY		4122031		True				
ANR	4124045	CFGExitNode	EXIT		4122031		True				
ANR	4124046	Symbol	* bb -> op_pos		4122031						
ANR	4124047	Symbol	frame -> bp		4122031						
ANR	4124048	Symbol	* fcn		4122031						
ANR	4124049	Symbol	cmdhit		4122031						
ANR	4124050	Symbol	core -> offset		4122031						
ANR	4124051	Symbol	strchr		4122031						
ANR	4124052	Symbol	bb_cmp		4122031						
ANR	4124053	Symbol	* core -> dbg -> h		4122031						
ANR	4124054	Symbol	frame -> sp		4122031						
ANR	4124055	Symbol	cmd2		4122031						
ANR	4124056	Symbol	tmp		4122031						
ANR	4124057	Symbol	* cmd		4122031						
ANR	4124058	Symbol	core -> blocksize		4122031						
ANR	4124059	Symbol	core -> rcmd -> macro		4122031						
ANR	4124060	Symbol	* buf		4122031						
ANR	4124061	Symbol	r_flag_space_cur		4122031						
ANR	4124062	Symbol	r_list_newf		4122031						
ANR	4124063	Symbol	iter		4122031						
ANR	4124064	Symbol	core -> dbg -> h		4122031						
ANR	4124065	Symbol	core -> rcmd -> macro . counter		4122031						
ANR	4124066	Symbol	each		4122031						
ANR	4124067	Symbol	str		4122031						
ANR	4124068	Symbol	* * * core		4122031						
ANR	4124069	Symbol	oseek		4122031						
ANR	4124070	Symbol	cmd		4122031						
ANR	4124071	Symbol	* flag		4122031						
ANR	4124072	Symbol	word		4122031						
ANR	4124073	Symbol	* core -> dbg		4122031						
ANR	4124074	Symbol	core -> cons -> context		4122031						
ANR	4124075	Symbol	bb		4122031						
ANR	4124076	Symbol	cur		4122031						
ANR	4124077	Symbol	flag		4122031						
ANR	4124078	Symbol	match_flag_items		4122031						
ANR	4124079	Symbol	* core -> cons		4122031						
ANR	4124080	Symbol	core -> sdb		4122031						
ANR	4124081	Symbol	* core		4122031						
ANR	4124082	Symbol	r_config_get		4122031						
ANR	4124083	Symbol	core -> anal		4122031						
ANR	4124084	Symbol	r_debug_frames		4122031						
ANR	4124085	Symbol	out		4122031						
ANR	4124086	Symbol	fcn		4122031						
ANR	4124087	Symbol	bs		4122031						
ANR	4124088	Symbol	r_cons_is_breaked		4122031						
ANR	4124089	Symbol	core -> cons		4122031						
ANR	4124090	Symbol	ostr		4122031						
ANR	4124091	Symbol	arg		4122031						
ANR	4124092	Symbol	* str		4122031						
ANR	4124093	Symbol	ch		4122031						
ANR	4124094	Symbol	i		4122031						
ANR	4124095	Symbol	j		4122031						
ANR	4124096	Symbol	r_str_word_get0		4122031						
ANR	4124097	Symbol	core -> flags		4122031						
ANR	4124098	Symbol	p		4122031						
ANR	4124099	Symbol	buf		4122031						
ANR	4124100	Symbol	fcn -> bbs		4122031						
ANR	4124101	Symbol	bb -> op_pos_size		4122031						
ANR	4124102	Symbol	R_MAX		4122031						
ANR	4124103	Symbol	fcn -> addr		4122031						
ANR	4124104	Symbol	to		4122031						
ANR	4124105	Symbol	core -> dbg -> pid		4122031						
ANR	4124106	Symbol	bb -> size		4122031						
ANR	4124107	Symbol	r_core_cmd_str		4122031						
ANR	4124108	Symbol	fcn -> name		4122031						
ANR	4124109	Symbol	r_flag_item_free		4122031						
ANR	4124110	Symbol	bb -> addr		4122031						
ANR	4124111	Symbol	pid		4122031						
ANR	4124112	Symbol	fgets		4122031						
ANR	4124113	Symbol	core -> rcmd -> macro . brk_value		4122031						
ANR	4124114	Symbol	duplicate_flag		4122031						
ANR	4124115	Symbol	from		4122031						
ANR	4124116	Symbol	core -> rcmd -> macro . _brk_value		4122031						
ANR	4124117	Symbol	flag -> offset		4122031						
ANR	4124118	Symbol	core -> num		4122031						
ANR	4124119	Symbol	help_msg_at_at		4122031						
ANR	4124120	Symbol	NULL		4122031						
ANR	4124121	Symbol	* * core -> cons		4122031						
ANR	4124122	Symbol	count		4122031						
ANR	4124123	Symbol	sdb_querys		4122031						
ANR	4124124	Symbol	* each		4122031						
ANR	4124125	Symbol	list		4122031						
ANR	4124126	Symbol	* * bb		4122031						
ANR	4124127	Symbol	core		4122031						
ANR	4124128	Symbol	bb -> op_pos		4122031						
ANR	4124129	Symbol	strstr		4122031						
ANR	4124130	Symbol	& core -> rcmd -> macro		4122031						
ANR	4124131	Symbol	true		4122031						
ANR	4124132	Symbol	fd		4122031						
ANR	4124133	Symbol	frame		4122031						
ANR	4124134	Symbol	r_anal_get_fcn_at		4122031						
ANR	4124135	Symbol	p -> pid		4122031						
ANR	4124136	Symbol	* frame		4122031						
ANR	4124137	Symbol	core -> dbg -> h -> pids		4122031						
ANR	4124138	Symbol	r_num_math		4122031						
ANR	4124139	Symbol	flagspace		4122031						
ANR	4124140	Symbol	* core -> cons -> context		4122031						
ANR	4124141	Symbol	frame -> addr		4122031						
ANR	4124142	Symbol	addr		4122031						
ANR	4124143	Symbol	UT64_MAX		4122031						
ANR	4124144	Symbol	* * core		4122031						
ANR	4124145	Symbol	core -> config		4122031						
ANR	4124146	Symbol	* bb		4122031						
ANR	4124147	Symbol	core -> rcmd		4122031						
ANR	4124148	Symbol	grep		4122031						
ANR	4124149	Symbol	false		4122031						
ANR	4124150	Symbol	r_cons_get_buffer		4122031						
ANR	4124151	Symbol	core -> cons -> context -> grep		4122031						
ANR	4124152	Symbol	* i		4122031						
ANR	4124153	Symbol	* j		4122031						
ANR	4124154	Symbol	r_str_split		4122031						
ANR	4124155	Symbol	r_sandbox_fopen		4122031						
ANR	4124156	Symbol	feof		4122031						
ANR	4124157	Symbol	step		4122031						
ANR	4124158	Symbol	* p		4122031						
ANR	4124159	Symbol	strdup		4122031						
ANR	4124160	Symbol	* core -> rcmd		4122031						
ANR	4124161	Symbol	& u		4122031						
ANR	4124162	Symbol	core -> dbg		4122031						
ANR	4124163	Symbol	* * core -> dbg		4122031						
ANR	4124164	Function	run_pending_anal	4290:0:107467:107749							
ANR	4124165	FunctionDef	run_pending_anal (RCore * core)		4124164	0					
ANR	4124166	CompoundStatement		4290:41:107508:107749	4124164	0					
ANR	4124167	ExpressionStatement	core -> ev -> incall = false	4292:1:107559:107583	4124164	0	True				
ANR	4124168	AssignmentExpression	core -> ev -> incall = false		4124164	0		=			
ANR	4124169	PtrMemberAccess	core -> ev -> incall		4124164	0					
ANR	4124170	PtrMemberAccess	core -> ev		4124164	0					
ANR	4124171	Identifier	core		4124164	0					
ANR	4124172	Identifier	ev		4124164	1					
ANR	4124173	Identifier	incall		4124164	1					
ANR	4124174	Identifier	false		4124164	1					
ANR	4124175	IfStatement	if ( core && core -> anal && core -> anal -> cmdtail )		4124164	1					
ANR	4124176	Condition	core && core -> anal && core -> anal -> cmdtail	4293:5:107590:107630	4124164	0	True				
ANR	4124177	AndExpression	core && core -> anal && core -> anal -> cmdtail		4124164	0		&&			
ANR	4124178	Identifier	core		4124164	0					
ANR	4124179	AndExpression	core -> anal && core -> anal -> cmdtail		4124164	1		&&			
ANR	4124180	PtrMemberAccess	core -> anal		4124164	0					
ANR	4124181	Identifier	core		4124164	0					
ANR	4124182	Identifier	anal		4124164	1					
ANR	4124183	PtrMemberAccess	core -> anal -> cmdtail		4124164	1					
ANR	4124184	PtrMemberAccess	core -> anal		4124164	0					
ANR	4124185	Identifier	core		4124164	0					
ANR	4124186	Identifier	anal		4124164	1					
ANR	4124187	Identifier	cmdtail		4124164	1					
ANR	4124188	CompoundStatement		5:2:128:159	4124164	1					
ANR	4124189	IdentifierDeclStatement	char * res = core -> anal -> cmdtail ;	4294:2:107637:107668	4124164	0	True				
ANR	4124190	IdentifierDecl	* res = core -> anal -> cmdtail		4124164	0					
ANR	4124191	IdentifierDeclType	char *		4124164	0					
ANR	4124192	Identifier	res		4124164	1					
ANR	4124193	AssignmentExpression	* res = core -> anal -> cmdtail		4124164	2		=			
ANR	4124194	Identifier	res		4124164	0					
ANR	4124195	PtrMemberAccess	core -> anal -> cmdtail		4124164	1					
ANR	4124196	PtrMemberAccess	core -> anal		4124164	0					
ANR	4124197	Identifier	core		4124164	0					
ANR	4124198	Identifier	anal		4124164	1					
ANR	4124199	Identifier	cmdtail		4124164	1					
ANR	4124200	ExpressionStatement	core -> anal -> cmdtail = NULL	4295:2:107672:107698	4124164	1	True				
ANR	4124201	AssignmentExpression	core -> anal -> cmdtail = NULL		4124164	0		=			
ANR	4124202	PtrMemberAccess	core -> anal -> cmdtail		4124164	0					
ANR	4124203	PtrMemberAccess	core -> anal		4124164	0					
ANR	4124204	Identifier	core		4124164	0					
ANR	4124205	Identifier	anal		4124164	1					
ANR	4124206	Identifier	cmdtail		4124164	1					
ANR	4124207	Identifier	NULL		4124164	1					
ANR	4124208	ExpressionStatement	"r_core_cmd_lines ( core , res )"	4296:2:107702:107730	4124164	2	True				
ANR	4124209	CallExpression	"r_core_cmd_lines ( core , res )"		4124164	0					
ANR	4124210	Callee	r_core_cmd_lines		4124164	0					
ANR	4124211	Identifier	r_core_cmd_lines		4124164	0					
ANR	4124212	ArgumentList	core		4124164	1					
ANR	4124213	Argument	core		4124164	0					
ANR	4124214	Identifier	core		4124164	0					
ANR	4124215	Argument	res		4124164	1					
ANR	4124216	Identifier	res		4124164	0					
ANR	4124217	ExpressionStatement	free ( res )	4297:2:107734:107744	4124164	3	True				
ANR	4124218	CallExpression	free ( res )		4124164	0					
ANR	4124219	Callee	free		4124164	0					
ANR	4124220	Identifier	free		4124164	0					
ANR	4124221	ArgumentList	res		4124164	1					
ANR	4124222	Argument	res		4124164	0					
ANR	4124223	Identifier	res		4124164	0					
ANR	4124224	ReturnType	R_API void		4124164	1					
ANR	4124225	Identifier	run_pending_anal		4124164	2					
ANR	4124226	ParameterList	RCore * core		4124164	3					
ANR	4124227	Parameter	RCore * core	4290:28:107495:107505	4124164	0	True				
ANR	4124228	ParameterType	RCore *		4124164	0					
ANR	4124229	Identifier	core		4124164	1					
ANR	4124230	CFGEntryNode	ENTRY		4124164		True				
ANR	4124231	CFGExitNode	EXIT		4124164		True				
ANR	4124232	Symbol	core		4124164						
ANR	4124233	Symbol	res		4124164						
ANR	4124234	Symbol	* core -> anal		4124164						
ANR	4124235	Symbol	NULL		4124164						
ANR	4124236	Symbol	core -> anal -> cmdtail		4124164						
ANR	4124237	Symbol	core -> ev -> incall		4124164						
ANR	4124238	Symbol	* core		4124164						
ANR	4124239	Symbol	false		4124164						
ANR	4124240	Symbol	core -> anal		4124164						
ANR	4124241	Symbol	* * core		4124164						
ANR	4124242	Symbol	* core -> ev		4124164						
ANR	4124243	Symbol	core -> ev		4124164						
ANR	4124244	Function	r_core_cmd	4301:0:107752:110028							
ANR	4124245	FunctionDef	"r_core_cmd (RCore * core , const char * cstr , int log)"		4124244	0					
ANR	4124246	CompoundStatement		4301:61:107813:110028	4124244	0					
ANR	4124247	IdentifierDeclStatement	"char * cmd , * ocmd , * ptr , * rcmd ;"	4302:1:107816:107845	4124244	0	True				
ANR	4124248	IdentifierDecl	* cmd		4124244	0					
ANR	4124249	IdentifierDeclType	char *		4124244	0					
ANR	4124250	Identifier	cmd		4124244	1					
ANR	4124251	IdentifierDecl	* ocmd		4124244	1					
ANR	4124252	IdentifierDeclType	char *		4124244	0					
ANR	4124253	Identifier	ocmd		4124244	1					
ANR	4124254	IdentifierDecl	* ptr		4124244	2					
ANR	4124255	IdentifierDeclType	char *		4124244	0					
ANR	4124256	Identifier	ptr		4124244	1					
ANR	4124257	IdentifierDecl	* rcmd		4124244	3					
ANR	4124258	IdentifierDeclType	char *		4124244	0					
ANR	4124259	Identifier	rcmd		4124244	1					
ANR	4124260	IdentifierDeclStatement	"int ret = false , i ;"	4303:1:107848:107866	4124244	1	True				
ANR	4124261	IdentifierDecl	ret = false		4124244	0					
ANR	4124262	IdentifierDeclType	int		4124244	0					
ANR	4124263	Identifier	ret		4124244	1					
ANR	4124264	AssignmentExpression	ret = false		4124244	2		=			
ANR	4124265	Identifier	false		4124244	0					
ANR	4124266	Identifier	false		4124244	1					
ANR	4124267	IdentifierDecl	i		4124244	1					
ANR	4124268	IdentifierDeclType	int		4124244	0					
ANR	4124269	Identifier	i		4124244	1					
ANR	4124270	IfStatement	if ( core -> cmdfilter )		4124244	2					
ANR	4124271	Condition	core -> cmdfilter	4305:5:107874:107888	4124244	0	True				
ANR	4124272	PtrMemberAccess	core -> cmdfilter		4124244	0					
ANR	4124273	Identifier	core		4124244	0					
ANR	4124274	Identifier	cmdfilter		4124244	1					
ANR	4124275	CompoundStatement		6:2:81:116	4124244	1					
ANR	4124276	IdentifierDeclStatement	"const char * invalid_chars = "";|>`@"" ;"	4306:2:107895:107930	4124244	0	True				
ANR	4124277	IdentifierDecl	"* invalid_chars = "";|>`@"""		4124244	0					
ANR	4124278	IdentifierDeclType	const char *		4124244	0					
ANR	4124279	Identifier	invalid_chars		4124244	1					
ANR	4124280	AssignmentExpression	"* invalid_chars = "";|>`@"""		4124244	2		=			
ANR	4124281	Identifier	invalid_chars		4124244	0					
ANR	4124282	PrimaryExpression	""";|>`@"""		4124244	1					
ANR	4124283	ForStatement	for ( i = 0 ; invalid_chars [ i ] ; i ++ )		4124244	1					
ANR	4124284	ForInit	i = 0 ;	4307:7:107939:107944	4124244	0	True				
ANR	4124285	AssignmentExpression	i = 0		4124244	0		=			
ANR	4124286	Identifier	i		4124244	0					
ANR	4124287	PrimaryExpression	0		4124244	1					
ANR	4124288	Condition	invalid_chars [ i ]	4307:14:107946:107961	4124244	1	True				
ANR	4124289	ArrayIndexing	invalid_chars [ i ]		4124244	0					
ANR	4124290	Identifier	invalid_chars		4124244	0					
ANR	4124291	Identifier	i		4124244	1					
ANR	4124292	PostIncDecOperationExpression	i ++	4307:32:107964:107966	4124244	2	True				
ANR	4124293	Identifier	i		4124244	0					
ANR	4124294	IncDec	++		4124244	1					
ANR	4124295	CompoundStatement		7:37:155:155	4124244	3					
ANR	4124296	IfStatement	"if ( strchr ( cstr , invalid_chars [ i ] ) )"		4124244	0					
ANR	4124297	Condition	"strchr ( cstr , invalid_chars [ i ] )"	4308:7:107978:108008	4124244	0	True				
ANR	4124298	CallExpression	"strchr ( cstr , invalid_chars [ i ] )"		4124244	0					
ANR	4124299	Callee	strchr		4124244	0					
ANR	4124300	Identifier	strchr		4124244	0					
ANR	4124301	ArgumentList	cstr		4124244	1					
ANR	4124302	Argument	cstr		4124244	0					
ANR	4124303	Identifier	cstr		4124244	0					
ANR	4124304	Argument	invalid_chars [ i ]		4124244	1					
ANR	4124305	ArrayIndexing	invalid_chars [ i ]		4124244	0					
ANR	4124306	Identifier	invalid_chars		4124244	0					
ANR	4124307	Identifier	i		4124244	1					
ANR	4124308	CompoundStatement		8:40:197:197	4124244	1					
ANR	4124309	ExpressionStatement	ret = true	4309:4:108017:108027	4124244	0	True				
ANR	4124310	AssignmentExpression	ret = true		4124244	0		=			
ANR	4124311	Identifier	ret		4124244	0					
ANR	4124312	Identifier	true		4124244	1					
ANR	4124313	GotoStatement	goto beach ;	4310:4:108033:108043	4124244	1	True				
ANR	4124314	Identifier	beach		4124244	0					
ANR	4124315	IfStatement	"if ( strncmp ( cstr , core -> cmdfilter , strlen ( core -> cmdfilter ) ) )"		4124244	2					
ANR	4124316	Condition	"strncmp ( cstr , core -> cmdfilter , strlen ( core -> cmdfilter ) )"	4313:6:108060:108116	4124244	0	True				
ANR	4124317	CallExpression	"strncmp ( cstr , core -> cmdfilter , strlen ( core -> cmdfilter ) )"		4124244	0					
ANR	4124318	Callee	strncmp		4124244	0					
ANR	4124319	Identifier	strncmp		4124244	0					
ANR	4124320	ArgumentList	cstr		4124244	1					
ANR	4124321	Argument	cstr		4124244	0					
ANR	4124322	Identifier	cstr		4124244	0					
ANR	4124323	Argument	core -> cmdfilter		4124244	1					
ANR	4124324	PtrMemberAccess	core -> cmdfilter		4124244	0					
ANR	4124325	Identifier	core		4124244	0					
ANR	4124326	Identifier	cmdfilter		4124244	1					
ANR	4124327	Argument	strlen ( core -> cmdfilter )		4124244	2					
ANR	4124328	CallExpression	strlen ( core -> cmdfilter )		4124244	0					
ANR	4124329	Callee	strlen		4124244	0					
ANR	4124330	Identifier	strlen		4124244	0					
ANR	4124331	ArgumentList	core -> cmdfilter		4124244	1					
ANR	4124332	Argument	core -> cmdfilter		4124244	0					
ANR	4124333	PtrMemberAccess	core -> cmdfilter		4124244	0					
ANR	4124334	Identifier	core		4124244	0					
ANR	4124335	Identifier	cmdfilter		4124244	1					
ANR	4124336	CompoundStatement		13:65:305:305	4124244	1					
ANR	4124337	ExpressionStatement	ret = true	4314:3:108124:108134	4124244	0	True				
ANR	4124338	AssignmentExpression	ret = true		4124244	0		=			
ANR	4124339	Identifier	ret		4124244	0					
ANR	4124340	Identifier	true		4124244	1					
ANR	4124341	GotoStatement	goto beach ;	4315:3:108139:108149	4124244	1	True				
ANR	4124342	Identifier	beach		4124244	0					
ANR	4124343	IfStatement	if ( core -> cmdremote )		4124244	3					
ANR	4124344	Condition	core -> cmdremote	4318:5:108163:108177	4124244	0	True				
ANR	4124345	PtrMemberAccess	core -> cmdremote		4124244	0					
ANR	4124346	Identifier	core		4124244	0					
ANR	4124347	Identifier	cmdremote		4124244	1					
ANR	4124348	CompoundStatement		18:22:366:366	4124244	1					
ANR	4124349	IfStatement	"if ( * cstr != '=' && * cstr != 'q' && strncmp ( cstr , ""!="" , 2 ) )"		4124244	0					
ANR	4124350	Condition	"* cstr != '=' && * cstr != 'q' && strncmp ( cstr , ""!="" , 2 )"	4319:6:108188:108242	4124244	0	True				
ANR	4124351	AndExpression	"* cstr != '=' && * cstr != 'q' && strncmp ( cstr , ""!="" , 2 )"		4124244	0		&&			
ANR	4124352	EqualityExpression	* cstr != '='		4124244	0		!=			
ANR	4124353	UnaryOperationExpression	* cstr		4124244	0					
ANR	4124354	UnaryOperator	*		4124244	0					
ANR	4124355	Identifier	cstr		4124244	1					
ANR	4124356	PrimaryExpression	'='		4124244	1					
ANR	4124357	AndExpression	"* cstr != 'q' && strncmp ( cstr , ""!="" , 2 )"		4124244	1		&&			
ANR	4124358	EqualityExpression	* cstr != 'q'		4124244	0		!=			
ANR	4124359	UnaryOperationExpression	* cstr		4124244	0					
ANR	4124360	UnaryOperator	*		4124244	0					
ANR	4124361	Identifier	cstr		4124244	1					
ANR	4124362	PrimaryExpression	'q'		4124244	1					
ANR	4124363	CallExpression	"strncmp ( cstr , ""!="" , 2 )"		4124244	1					
ANR	4124364	Callee	strncmp		4124244	0					
ANR	4124365	Identifier	strncmp		4124244	0					
ANR	4124366	ArgumentList	cstr		4124244	1					
ANR	4124367	Argument	cstr		4124244	0					
ANR	4124368	Identifier	cstr		4124244	0					
ANR	4124369	Argument	"""!="""		4124244	1					
ANR	4124370	PrimaryExpression	"""!="""		4124244	0					
ANR	4124371	Argument	2		4124244	2					
ANR	4124372	PrimaryExpression	2		4124244	0					
ANR	4124373	CompoundStatement		20:3:436:476	4124244	1					
ANR	4124374	IdentifierDeclStatement	"char * res = r_io_system ( core -> io , cstr ) ;"	4320:3:108250:108290	4124244	0	True				
ANR	4124375	IdentifierDecl	"* res = r_io_system ( core -> io , cstr )"		4124244	0					
ANR	4124376	IdentifierDeclType	char *		4124244	0					
ANR	4124377	Identifier	res		4124244	1					
ANR	4124378	AssignmentExpression	"* res = r_io_system ( core -> io , cstr )"		4124244	2		=			
ANR	4124379	Identifier	res		4124244	0					
ANR	4124380	CallExpression	"r_io_system ( core -> io , cstr )"		4124244	1					
ANR	4124381	Callee	r_io_system		4124244	0					
ANR	4124382	Identifier	r_io_system		4124244	0					
ANR	4124383	ArgumentList	core -> io		4124244	1					
ANR	4124384	Argument	core -> io		4124244	0					
ANR	4124385	PtrMemberAccess	core -> io		4124244	0					
ANR	4124386	Identifier	core		4124244	0					
ANR	4124387	Identifier	io		4124244	1					
ANR	4124388	Argument	cstr		4124244	1					
ANR	4124389	Identifier	cstr		4124244	0					
ANR	4124390	IfStatement	if ( res )		4124244	1					
ANR	4124391	Condition	res	4321:7:108299:108301	4124244	0	True				
ANR	4124392	Identifier	res		4124244	0					
ANR	4124393	CompoundStatement		21:12:490:490	4124244	1					
ANR	4124394	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , res )"	4322:4:108310:108337	4124244	0	True				
ANR	4124395	CallExpression	"r_cons_printf ( ""%s\\n"" , res )"		4124244	0					
ANR	4124396	Callee	r_cons_printf		4124244	0					
ANR	4124397	Identifier	r_cons_printf		4124244	0					
ANR	4124398	ArgumentList	"""%s\\n"""		4124244	1					
ANR	4124399	Argument	"""%s\\n"""		4124244	0					
ANR	4124400	PrimaryExpression	"""%s\\n"""		4124244	0					
ANR	4124401	Argument	res		4124244	1					
ANR	4124402	Identifier	res		4124244	0					
ANR	4124403	ExpressionStatement	free ( res )	4323:4:108343:108353	4124244	1	True				
ANR	4124404	CallExpression	free ( res )		4124244	0					
ANR	4124405	Callee	free		4124244	0					
ANR	4124406	Identifier	free		4124244	0					
ANR	4124407	ArgumentList	res		4124244	1					
ANR	4124408	Argument	res		4124244	0					
ANR	4124409	Identifier	res		4124244	0					
ANR	4124410	GotoStatement	goto beach ;	4325:3:108363:108373	4124244	2	True				
ANR	4124411	Identifier	beach		4124244	0					
ANR	4124412	IfStatement	if ( ! cstr || ( * cstr == '|' && cstr [ 1 ] != '?' ) )		4124244	4					
ANR	4124413	Condition	! cstr || ( * cstr == '|' && cstr [ 1 ] != '?' )	4329:5:108397:108437	4124244	0	True				
ANR	4124414	OrExpression	! cstr || ( * cstr == '|' && cstr [ 1 ] != '?' )		4124244	0		||			
ANR	4124415	UnaryOperationExpression	! cstr		4124244	0					
ANR	4124416	UnaryOperator	!		4124244	0					
ANR	4124417	Identifier	cstr		4124244	1					
ANR	4124418	AndExpression	* cstr == '|' && cstr [ 1 ] != '?'		4124244	1		&&			
ANR	4124419	EqualityExpression	* cstr == '|'		4124244	0		==			
ANR	4124420	UnaryOperationExpression	* cstr		4124244	0					
ANR	4124421	UnaryOperator	*		4124244	0					
ANR	4124422	Identifier	cstr		4124244	1					
ANR	4124423	PrimaryExpression	'|'		4124244	1					
ANR	4124424	EqualityExpression	cstr [ 1 ] != '?'		4124244	1		!=			
ANR	4124425	ArrayIndexing	cstr [ 1 ]		4124244	0					
ANR	4124426	Identifier	cstr		4124244	0					
ANR	4124427	PrimaryExpression	1		4124244	1					
ANR	4124428	PrimaryExpression	'?'		4124244	1					
ANR	4124429	CompoundStatement		29:48:626:626	4124244	1					
ANR	4124430	GotoStatement	goto beach ;	4331:2:108468:108478	4124244	0	True				
ANR	4124431	Identifier	beach		4124244	0					
ANR	4124432	IfStatement	"if ( ! strncmp ( cstr , ""/*"" , 2 ) )"		4124244	5					
ANR	4124433	Condition	"! strncmp ( cstr , ""/*"" , 2 )"	4333:5:108498:108521	4124244	0	True				
ANR	4124434	UnaryOperationExpression	"! strncmp ( cstr , ""/*"" , 2 )"		4124244	0					
ANR	4124435	UnaryOperator	!		4124244	0					
ANR	4124436	CallExpression	"strncmp ( cstr , ""/*"" , 2 )"		4124244	1					
ANR	4124437	Callee	strncmp		4124244	0					
ANR	4124438	Identifier	strncmp		4124244	0					
ANR	4124439	ArgumentList	cstr		4124244	1					
ANR	4124440	Argument	cstr		4124244	0					
ANR	4124441	Identifier	cstr		4124244	0					
ANR	4124442	Argument	"""/*"""		4124244	1					
ANR	4124443	PrimaryExpression	"""/*"""		4124244	0					
ANR	4124444	Argument	2		4124244	2					
ANR	4124445	PrimaryExpression	2		4124244	0					
ANR	4124446	CompoundStatement		33:31:710:710	4124244	1					
ANR	4124447	IfStatement	if ( r_sandbox_enable ( 0 ) )		4124244	0					
ANR	4124448	Condition	r_sandbox_enable ( 0 )	4334:6:108532:108551	4124244	0	True				
ANR	4124449	CallExpression	r_sandbox_enable ( 0 )		4124244	0					
ANR	4124450	Callee	r_sandbox_enable		4124244	0					
ANR	4124451	Identifier	r_sandbox_enable		4124244	0					
ANR	4124452	ArgumentList	0		4124244	1					
ANR	4124453	Argument	0		4124244	0					
ANR	4124454	PrimaryExpression	0		4124244	0					
ANR	4124455	CompoundStatement		34:28:740:740	4124244	1					
ANR	4124456	ExpressionStatement	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"	4335:3:108559:108613	4124244	0	True				
ANR	4124457	CallExpression	"eprintf ( ""This command is disabled in sandbox mode\\n"" )"		4124244	0					
ANR	4124458	Callee	eprintf		4124244	0					
ANR	4124459	Identifier	eprintf		4124244	0					
ANR	4124460	ArgumentList	"""This command is disabled in sandbox mode\\n"""		4124244	1					
ANR	4124461	Argument	"""This command is disabled in sandbox mode\\n"""		4124244	0					
ANR	4124462	PrimaryExpression	"""This command is disabled in sandbox mode\\n"""		4124244	0					
ANR	4124463	GotoStatement	goto beach ;	4336:3:108618:108628	4124244	1	True				
ANR	4124464	Identifier	beach		4124244	0					
ANR	4124465	ExpressionStatement	core -> incomment = true	4338:2:108645:108667	4124244	1	True				
ANR	4124466	AssignmentExpression	core -> incomment = true		4124244	0		=			
ANR	4124467	PtrMemberAccess	core -> incomment		4124244	0					
ANR	4124468	Identifier	core		4124244	0					
ANR	4124469	Identifier	incomment		4124244	1					
ANR	4124470	Identifier	true		4124244	1					
ANR	4124471	ElseStatement	else		4124244	0					
ANR	4124472	IfStatement	"if ( ! strncmp ( cstr , ""*/"" , 2 ) )"		4124244	0					
ANR	4124473	Condition	"! strncmp ( cstr , ""*/"" , 2 )"	4339:12:108681:108704	4124244	0	True				
ANR	4124474	UnaryOperationExpression	"! strncmp ( cstr , ""*/"" , 2 )"		4124244	0					
ANR	4124475	UnaryOperator	!		4124244	0					
ANR	4124476	CallExpression	"strncmp ( cstr , ""*/"" , 2 )"		4124244	1					
ANR	4124477	Callee	strncmp		4124244	0					
ANR	4124478	Identifier	strncmp		4124244	0					
ANR	4124479	ArgumentList	cstr		4124244	1					
ANR	4124480	Argument	cstr		4124244	0					
ANR	4124481	Identifier	cstr		4124244	0					
ANR	4124482	Argument	"""*/"""		4124244	1					
ANR	4124483	PrimaryExpression	"""*/"""		4124244	0					
ANR	4124484	Argument	2		4124244	2					
ANR	4124485	PrimaryExpression	2		4124244	0					
ANR	4124486	CompoundStatement		39:38:893:893	4124244	1					
ANR	4124487	ExpressionStatement	core -> incomment = false	4340:2:108711:108734	4124244	0	True				
ANR	4124488	AssignmentExpression	core -> incomment = false		4124244	0		=			
ANR	4124489	PtrMemberAccess	core -> incomment		4124244	0					
ANR	4124490	Identifier	core		4124244	0					
ANR	4124491	Identifier	incomment		4124244	1					
ANR	4124492	Identifier	false		4124244	1					
ANR	4124493	GotoStatement	goto beach ;	4341:2:108738:108748	4124244	1	True				
ANR	4124494	Identifier	beach		4124244	0					
ANR	4124495	IfStatement	if ( core -> incomment )		4124244	6					
ANR	4124496	Condition	core -> incomment	4343:5:108767:108781	4124244	0	True				
ANR	4124497	PtrMemberAccess	core -> incomment		4124244	0					
ANR	4124498	Identifier	core		4124244	0					
ANR	4124499	Identifier	incomment		4124244	1					
ANR	4124500	CompoundStatement		43:22:970:970	4124244	1					
ANR	4124501	GotoStatement	goto beach ;	4344:2:108788:108798	4124244	0	True				
ANR	4124502	Identifier	beach		4124244	0					
ANR	4124503	IfStatement	"if ( log && ( * cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) ) ) )"		4124244	7					
ANR	4124504	Condition	"log && ( * cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) ) )"	4346:5:108817:108876	4124244	0	True				
ANR	4124505	AndExpression	"log && ( * cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) ) )"		4124244	0		&&			
ANR	4124506	Identifier	log		4124244	0					
ANR	4124507	AndExpression	"* cstr && ( * cstr != '.' || ! strncmp ( cstr , "".("" , 2 ) )"		4124244	1		&&			
ANR	4124508	UnaryOperationExpression	* cstr		4124244	0					
ANR	4124509	UnaryOperator	*		4124244	0					
ANR	4124510	Identifier	cstr		4124244	1					
ANR	4124511	OrExpression	"* cstr != '.' || ! strncmp ( cstr , "".("" , 2 )"		4124244	1		||			
ANR	4124512	EqualityExpression	* cstr != '.'		4124244	0		!=			
ANR	4124513	UnaryOperationExpression	* cstr		4124244	0					
ANR	4124514	UnaryOperator	*		4124244	0					
ANR	4124515	Identifier	cstr		4124244	1					
ANR	4124516	PrimaryExpression	'.'		4124244	1					
ANR	4124517	UnaryOperationExpression	"! strncmp ( cstr , "".("" , 2 )"		4124244	1					
ANR	4124518	UnaryOperator	!		4124244	0					
ANR	4124519	CallExpression	"strncmp ( cstr , "".("" , 2 )"		4124244	1					
ANR	4124520	Callee	strncmp		4124244	0					
ANR	4124521	Identifier	strncmp		4124244	0					
ANR	4124522	ArgumentList	cstr		4124244	1					
ANR	4124523	Argument	cstr		4124244	0					
ANR	4124524	Identifier	cstr		4124244	0					
ANR	4124525	Argument	""".("""		4124244	1					
ANR	4124526	PrimaryExpression	""".("""		4124244	0					
ANR	4124527	Argument	2		4124244	2					
ANR	4124528	PrimaryExpression	2		4124244	0					
ANR	4124529	CompoundStatement		46:67:1065:1065	4124244	1					
ANR	4124530	ExpressionStatement	free ( core -> lastcmd )	4347:2:108883:108903	4124244	0	True				
ANR	4124531	CallExpression	free ( core -> lastcmd )		4124244	0					
ANR	4124532	Callee	free		4124244	0					
ANR	4124533	Identifier	free		4124244	0					
ANR	4124534	ArgumentList	core -> lastcmd		4124244	1					
ANR	4124535	Argument	core -> lastcmd		4124244	0					
ANR	4124536	PtrMemberAccess	core -> lastcmd		4124244	0					
ANR	4124537	Identifier	core		4124244	0					
ANR	4124538	Identifier	lastcmd		4124244	1					
ANR	4124539	ExpressionStatement	core -> lastcmd = strdup ( cstr )	4348:2:108907:108936	4124244	1	True				
ANR	4124540	AssignmentExpression	core -> lastcmd = strdup ( cstr )		4124244	0		=			
ANR	4124541	PtrMemberAccess	core -> lastcmd		4124244	0					
ANR	4124542	Identifier	core		4124244	0					
ANR	4124543	Identifier	lastcmd		4124244	1					
ANR	4124544	CallExpression	strdup ( cstr )		4124244	1					
ANR	4124545	Callee	strdup		4124244	0					
ANR	4124546	Identifier	strdup		4124244	0					
ANR	4124547	ArgumentList	cstr		4124244	1					
ANR	4124548	Argument	cstr		4124244	0					
ANR	4124549	Identifier	cstr		4124244	0					
ANR	4124550	ExpressionStatement	ocmd = cmd = malloc ( strlen ( cstr ) + 4096 )	4351:1:108943:108985	4124244	8	True				
ANR	4124551	AssignmentExpression	ocmd = cmd = malloc ( strlen ( cstr ) + 4096 )		4124244	0		=			
ANR	4124552	Identifier	ocmd		4124244	0					
ANR	4124553	AssignmentExpression	cmd = malloc ( strlen ( cstr ) + 4096 )		4124244	1		=			
ANR	4124554	Identifier	cmd		4124244	0					
ANR	4124555	CallExpression	malloc ( strlen ( cstr ) + 4096 )		4124244	1					
ANR	4124556	Callee	malloc		4124244	0					
ANR	4124557	Identifier	malloc		4124244	0					
ANR	4124558	ArgumentList	strlen ( cstr ) + 4096		4124244	1					
ANR	4124559	Argument	strlen ( cstr ) + 4096		4124244	0					
ANR	4124560	AdditiveExpression	strlen ( cstr ) + 4096		4124244	0		+			
ANR	4124561	CallExpression	strlen ( cstr )		4124244	0					
ANR	4124562	Callee	strlen		4124244	0					
ANR	4124563	Identifier	strlen		4124244	0					
ANR	4124564	ArgumentList	cstr		4124244	1					
ANR	4124565	Argument	cstr		4124244	0					
ANR	4124566	Identifier	cstr		4124244	0					
ANR	4124567	PrimaryExpression	4096		4124244	1					
ANR	4124568	IfStatement	if ( ! ocmd )		4124244	9					
ANR	4124569	Condition	! ocmd	4352:5:108992:108996	4124244	0	True				
ANR	4124570	UnaryOperationExpression	! ocmd		4124244	0					
ANR	4124571	UnaryOperator	!		4124244	0					
ANR	4124572	Identifier	ocmd		4124244	1					
ANR	4124573	CompoundStatement		52:12:1185:1185	4124244	1					
ANR	4124574	GotoStatement	goto beach ;	4353:2:109003:109013	4124244	0	True				
ANR	4124575	Identifier	beach		4124244	0					
ANR	4124576	ExpressionStatement	"r_str_cpy ( cmd , cstr )"	4355:1:109019:109040	4124244	10	True				
ANR	4124577	CallExpression	"r_str_cpy ( cmd , cstr )"		4124244	0					
ANR	4124578	Callee	r_str_cpy		4124244	0					
ANR	4124579	Identifier	r_str_cpy		4124244	0					
ANR	4124580	ArgumentList	cmd		4124244	1					
ANR	4124581	Argument	cmd		4124244	0					
ANR	4124582	Identifier	cmd		4124244	0					
ANR	4124583	Argument	cstr		4124244	1					
ANR	4124584	Identifier	cstr		4124244	0					
ANR	4124585	IfStatement	if ( log )		4124244	11					
ANR	4124586	Condition	log	4356:5:109047:109049	4124244	0	True				
ANR	4124587	Identifier	log		4124244	0					
ANR	4124588	CompoundStatement		56:10:1238:1238	4124244	1					
ANR	4124589	ExpressionStatement	r_line_hist_add ( cstr )	4357:2:109056:109078	4124244	0	True				
ANR	4124590	CallExpression	r_line_hist_add ( cstr )		4124244	0					
ANR	4124591	Callee	r_line_hist_add		4124244	0					
ANR	4124592	Identifier	r_line_hist_add		4124244	0					
ANR	4124593	ArgumentList	cstr		4124244	1					
ANR	4124594	Argument	cstr		4124244	0					
ANR	4124595	Identifier	cstr		4124244	0					
ANR	4124596	IfStatement	if ( core -> cons -> context -> cmd_depth < 1 )		4124244	12					
ANR	4124597	Condition	core -> cons -> context -> cmd_depth < 1	4360:5:109089:109122	4124244	0	True				
ANR	4124598	RelationalExpression	core -> cons -> context -> cmd_depth < 1		4124244	0		<			
ANR	4124599	PtrMemberAccess	core -> cons -> context -> cmd_depth		4124244	0					
ANR	4124600	PtrMemberAccess	core -> cons -> context		4124244	0					
ANR	4124601	PtrMemberAccess	core -> cons		4124244	0					
ANR	4124602	Identifier	core		4124244	0					
ANR	4124603	Identifier	cons		4124244	1					
ANR	4124604	Identifier	context		4124244	1					
ANR	4124605	Identifier	cmd_depth		4124244	1					
ANR	4124606	PrimaryExpression	1		4124244	1					
ANR	4124607	CompoundStatement		60:41:1311:1311	4124244	1					
ANR	4124608	ExpressionStatement	"eprintf ( ""r_core_cmd: That was too deep (%s)...\\n"" , cmd )"	4361:2:109129:109185	4124244	0	True				
ANR	4124609	CallExpression	"eprintf ( ""r_core_cmd: That was too deep (%s)...\\n"" , cmd )"		4124244	0					
ANR	4124610	Callee	eprintf		4124244	0					
ANR	4124611	Identifier	eprintf		4124244	0					
ANR	4124612	ArgumentList	"""r_core_cmd: That was too deep (%s)...\\n"""		4124244	1					
ANR	4124613	Argument	"""r_core_cmd: That was too deep (%s)...\\n"""		4124244	0					
ANR	4124614	PrimaryExpression	"""r_core_cmd: That was too deep (%s)...\\n"""		4124244	0					
ANR	4124615	Argument	cmd		4124244	1					
ANR	4124616	Identifier	cmd		4124244	0					
ANR	4124617	ExpressionStatement	free ( ocmd )	4362:2:109189:109200	4124244	1	True				
ANR	4124618	CallExpression	free ( ocmd )		4124244	0					
ANR	4124619	Callee	free		4124244	0					
ANR	4124620	Identifier	free		4124244	0					
ANR	4124621	ArgumentList	ocmd		4124244	1					
ANR	4124622	Argument	ocmd		4124244	0					
ANR	4124623	Identifier	ocmd		4124244	0					
ANR	4124624	ExpressionStatement	R_FREE ( core -> oobi )	4363:2:109204:109223	4124244	2	True				
ANR	4124625	CallExpression	R_FREE ( core -> oobi )		4124244	0					
ANR	4124626	Callee	R_FREE		4124244	0					
ANR	4124627	Identifier	R_FREE		4124244	0					
ANR	4124628	ArgumentList	core -> oobi		4124244	1					
ANR	4124629	Argument	core -> oobi		4124244	0					
ANR	4124630	PtrMemberAccess	core -> oobi		4124244	0					
ANR	4124631	Identifier	core		4124244	0					
ANR	4124632	Identifier	oobi		4124244	1					
ANR	4124633	ExpressionStatement	core -> oobi_len = 0	4364:2:109227:109245	4124244	3	True				
ANR	4124634	AssignmentExpression	core -> oobi_len = 0		4124244	0		=			
ANR	4124635	PtrMemberAccess	core -> oobi_len		4124244	0					
ANR	4124636	Identifier	core		4124244	0					
ANR	4124637	Identifier	oobi_len		4124244	1					
ANR	4124638	PrimaryExpression	0		4124244	1					
ANR	4124639	GotoStatement	goto beach ;	4365:2:109249:109259	4124244	4	True				
ANR	4124640	Identifier	beach		4124244	0					
ANR	4124641	ExpressionStatement	core -> cons -> context -> cmd_depth --	4367:1:109265:109297	4124244	13	True				
ANR	4124642	PostIncDecOperationExpression	core -> cons -> context -> cmd_depth --		4124244	0					
ANR	4124643	PtrMemberAccess	core -> cons -> context -> cmd_depth		4124244	0					
ANR	4124644	PtrMemberAccess	core -> cons -> context		4124244	0					
ANR	4124645	PtrMemberAccess	core -> cons		4124244	0					
ANR	4124646	Identifier	core		4124244	0					
ANR	4124647	Identifier	cons		4124244	1					
ANR	4124648	Identifier	context		4124244	1					
ANR	4124649	Identifier	cmd_depth		4124244	1					
ANR	4124650	IncDec	--		4124244	1					
ANR	4124651	ForStatement	for ( rcmd = cmd ; ; )		4124244	14					
ANR	4124652	ForInit	rcmd = cmd ;	4368:6:109305:109315	4124244	0	True				
ANR	4124653	AssignmentExpression	rcmd = cmd		4124244	0		=			
ANR	4124654	Identifier	rcmd		4124244	0					
ANR	4124655	Identifier	cmd		4124244	1					
ANR	4124656	CompoundStatement		68:20:1505:1505	4124244	1					
ANR	4124657	ExpressionStatement	"ptr = strchr ( rcmd , '\\n' )"	4369:2:109323:109348	4124244	0	True				
ANR	4124658	AssignmentExpression	"ptr = strchr ( rcmd , '\\n' )"		4124244	0		=			
ANR	4124659	Identifier	ptr		4124244	0					
ANR	4124660	CallExpression	"strchr ( rcmd , '\\n' )"		4124244	1					
ANR	4124661	Callee	strchr		4124244	0					
ANR	4124662	Identifier	strchr		4124244	0					
ANR	4124663	ArgumentList	rcmd		4124244	1					
ANR	4124664	Argument	rcmd		4124244	0					
ANR	4124665	Identifier	rcmd		4124244	0					
ANR	4124666	Argument	'\\n'		4124244	1					
ANR	4124667	PrimaryExpression	'\\n'		4124244	0					
ANR	4124668	IfStatement	if ( ptr )		4124244	1					
ANR	4124669	Condition	ptr	4370:6:109356:109358	4124244	0	True				
ANR	4124670	Identifier	ptr		4124244	0					
ANR	4124671	CompoundStatement		70:11:1547:1547	4124244	1					
ANR	4124672	ExpressionStatement	* ptr = '\\0'	4371:3:109366:109377	4124244	0	True				
ANR	4124673	AssignmentExpression	* ptr = '\\0'		4124244	0		=			
ANR	4124674	UnaryOperationExpression	* ptr		4124244	0					
ANR	4124675	UnaryOperator	*		4124244	0					
ANR	4124676	Identifier	ptr		4124244	1					
ANR	4124677	PrimaryExpression	'\\0'		4124244	1					
ANR	4124678	ExpressionStatement	"ret = r_core_cmd_subst ( core , rcmd )"	4373:2:109385:109420	4124244	2	True				
ANR	4124679	AssignmentExpression	"ret = r_core_cmd_subst ( core , rcmd )"		4124244	0		=			
ANR	4124680	Identifier	ret		4124244	0					
ANR	4124681	CallExpression	"r_core_cmd_subst ( core , rcmd )"		4124244	1					
ANR	4124682	Callee	r_core_cmd_subst		4124244	0					
ANR	4124683	Identifier	r_core_cmd_subst		4124244	0					
ANR	4124684	ArgumentList	core		4124244	1					
ANR	4124685	Argument	core		4124244	0					
ANR	4124686	Identifier	core		4124244	0					
ANR	4124687	Argument	rcmd		4124244	1					
ANR	4124688	Identifier	rcmd		4124244	0					
ANR	4124689	IfStatement	if ( ret == - 1 )		4124244	3					
ANR	4124690	Condition	ret == - 1	4374:6:109428:109436	4124244	0	True				
ANR	4124691	EqualityExpression	ret == - 1		4124244	0		==			
ANR	4124692	Identifier	ret		4124244	0					
ANR	4124693	UnaryOperationExpression	- 1		4124244	1					
ANR	4124694	UnaryOperator	-		4124244	0					
ANR	4124695	PrimaryExpression	1		4124244	1					
ANR	4124696	CompoundStatement		74:17:1625:1625	4124244	1					
ANR	4124697	ExpressionStatement	"eprintf ( ""|ERROR| Invalid command '%s' (0x%02x)\\n"" , rcmd , * rcmd )"	4375:3:109444:109508	4124244	0	True				
ANR	4124698	CallExpression	"eprintf ( ""|ERROR| Invalid command '%s' (0x%02x)\\n"" , rcmd , * rcmd )"		4124244	0					
ANR	4124699	Callee	eprintf		4124244	0					
ANR	4124700	Identifier	eprintf		4124244	0					
ANR	4124701	ArgumentList	"""|ERROR| Invalid command '%s' (0x%02x)\\n"""		4124244	1					
ANR	4124702	Argument	"""|ERROR| Invalid command '%s' (0x%02x)\\n"""		4124244	0					
ANR	4124703	PrimaryExpression	"""|ERROR| Invalid command '%s' (0x%02x)\\n"""		4124244	0					
ANR	4124704	Argument	rcmd		4124244	1					
ANR	4124705	Identifier	rcmd		4124244	0					
ANR	4124706	Argument	* rcmd		4124244	2					
ANR	4124707	UnaryOperationExpression	* rcmd		4124244	0					
ANR	4124708	UnaryOperator	*		4124244	0					
ANR	4124709	Identifier	rcmd		4124244	1					
ANR	4124710	BreakStatement	break ;	4376:3:109513:109518	4124244	1	True				
ANR	4124711	IfStatement	if ( ! ptr )		4124244	4					
ANR	4124712	Condition	! ptr	4378:6:109530:109533	4124244	0	True				
ANR	4124713	UnaryOperationExpression	! ptr		4124244	0					
ANR	4124714	UnaryOperator	!		4124244	0					
ANR	4124715	Identifier	ptr		4124244	1					
ANR	4124716	CompoundStatement		78:12:1722:1722	4124244	1					
ANR	4124717	BreakStatement	break ;	4379:3:109541:109546	4124244	0	True				
ANR	4124718	ExpressionStatement	rcmd = ptr + 1	4381:2:109554:109568	4124244	5	True				
ANR	4124719	AssignmentExpression	rcmd = ptr + 1		4124244	0		=			
ANR	4124720	Identifier	rcmd		4124244	0					
ANR	4124721	AdditiveExpression	ptr + 1		4124244	1		+			
ANR	4124722	Identifier	ptr		4124244	0					
ANR	4124723	PrimaryExpression	1		4124244	1					
ANR	4124724	ExpressionStatement	run_pending_anal ( core )	4384:1:109611:109634	4124244	15	True				
ANR	4124725	CallExpression	run_pending_anal ( core )		4124244	0					
ANR	4124726	Callee	run_pending_anal		4124244	0					
ANR	4124727	Identifier	run_pending_anal		4124244	0					
ANR	4124728	ArgumentList	core		4124244	1					
ANR	4124729	Argument	core		4124244	0					
ANR	4124730	Identifier	core		4124244	0					
ANR	4124731	ExpressionStatement	core -> cons -> context -> cmd_depth ++	4385:1:109637:109669	4124244	16	True				
ANR	4124732	PostIncDecOperationExpression	core -> cons -> context -> cmd_depth ++		4124244	0					
ANR	4124733	PtrMemberAccess	core -> cons -> context -> cmd_depth		4124244	0					
ANR	4124734	PtrMemberAccess	core -> cons -> context		4124244	0					
ANR	4124735	PtrMemberAccess	core -> cons		4124244	0					
ANR	4124736	Identifier	core		4124244	0					
ANR	4124737	Identifier	cons		4124244	1					
ANR	4124738	Identifier	context		4124244	1					
ANR	4124739	Identifier	cmd_depth		4124244	1					
ANR	4124740	IncDec	++		4124244	1					
ANR	4124741	ExpressionStatement	free ( ocmd )	4386:1:109672:109683	4124244	17	True				
ANR	4124742	CallExpression	free ( ocmd )		4124244	0					
ANR	4124743	Callee	free		4124244	0					
ANR	4124744	Identifier	free		4124244	0					
ANR	4124745	ArgumentList	ocmd		4124244	1					
ANR	4124746	Argument	ocmd		4124244	0					
ANR	4124747	Identifier	ocmd		4124244	0					
ANR	4124748	ExpressionStatement	R_FREE ( core -> oobi )	4387:1:109686:109705	4124244	18	True				
ANR	4124749	CallExpression	R_FREE ( core -> oobi )		4124244	0					
ANR	4124750	Callee	R_FREE		4124244	0					
ANR	4124751	Identifier	R_FREE		4124244	0					
ANR	4124752	ArgumentList	core -> oobi		4124244	1					
ANR	4124753	Argument	core -> oobi		4124244	0					
ANR	4124754	PtrMemberAccess	core -> oobi		4124244	0					
ANR	4124755	Identifier	core		4124244	0					
ANR	4124756	Identifier	oobi		4124244	1					
ANR	4124757	ExpressionStatement	core -> oobi_len = 0	4388:1:109708:109726	4124244	19	True				
ANR	4124758	AssignmentExpression	core -> oobi_len = 0		4124244	0		=			
ANR	4124759	PtrMemberAccess	core -> oobi_len		4124244	0					
ANR	4124760	Identifier	core		4124244	0					
ANR	4124761	Identifier	oobi_len		4124244	1					
ANR	4124762	PrimaryExpression	0		4124244	1					
ANR	4124763	ReturnStatement	return ret ;	4389:1:109729:109739	4124244	20	True				
ANR	4124764	Identifier	ret		4124244	0					
ANR	4124765	Label	beach :	4390:0:109741:109746	4124244	21	True				
ANR	4124766	Identifier	beach		4124244	0					
ANR	4124767	IfStatement	if ( r_list_empty ( core -> tasks ) )		4124244	22					
ANR	4124768	Condition	r_list_empty ( core -> tasks )	4391:5:109753:109778	4124244	0	True				
ANR	4124769	CallExpression	r_list_empty ( core -> tasks )		4124244	0					
ANR	4124770	Callee	r_list_empty		4124244	0					
ANR	4124771	Identifier	r_list_empty		4124244	0					
ANR	4124772	ArgumentList	core -> tasks		4124244	1					
ANR	4124773	Argument	core -> tasks		4124244	0					
ANR	4124774	PtrMemberAccess	core -> tasks		4124244	0					
ANR	4124775	Identifier	core		4124244	0					
ANR	4124776	Identifier	tasks		4124244	1					
ANR	4124777	CompoundStatement		91:33:1967:1967	4124244	1					
ANR	4124778	ExpressionStatement	r_th_lock_leave ( core -> lock )	4392:2:109785:109813	4124244	0	True				
ANR	4124779	CallExpression	r_th_lock_leave ( core -> lock )		4124244	0					
ANR	4124780	Callee	r_th_lock_leave		4124244	0					
ANR	4124781	Identifier	r_th_lock_leave		4124244	0					
ANR	4124782	ArgumentList	core -> lock		4124244	1					
ANR	4124783	Argument	core -> lock		4124244	0					
ANR	4124784	PtrMemberAccess	core -> lock		4124244	0					
ANR	4124785	Identifier	core		4124244	0					
ANR	4124786	Identifier	lock		4124244	1					
ANR	4124787	ElseStatement	else		4124244	0					
ANR	4124788	CompoundStatement		95:2:2032:2047	4124244	0					
ANR	4124789	IdentifierDeclStatement	RListIter * iter ;	4394:2:109827:109842	4124244	0	True				
ANR	4124790	IdentifierDecl	* iter		4124244	0					
ANR	4124791	IdentifierDeclType	RListIter *		4124244	0					
ANR	4124792	Identifier	iter		4124244	1					
ANR	4124793	IdentifierDeclStatement	RCoreTask * task ;	4395:2:109846:109861	4124244	1	True				
ANR	4124794	IdentifierDecl	* task		4124244	0					
ANR	4124795	IdentifierDeclType	RCoreTask *		4124244	0					
ANR	4124796	Identifier	task		4124244	1					
ANR	4124797	Statement	r_list_foreach	4396:2:109865:109878	4124244	2	True				
ANR	4124798	Statement	(	4396:17:109880:109880	4124244	3	True				
ANR	4124799	Statement	core	4396:18:109881:109884	4124244	4	True				
ANR	4124800	Statement	->	4396:22:109885:109886	4124244	5	True				
ANR	4124801	Statement	tasks	4396:24:109887:109891	4124244	6	True				
ANR	4124802	Statement	","	4396:29:109892:109892	4124244	7	True				
ANR	4124803	Statement	iter	4396:31:109894:109897	4124244	8	True				
ANR	4124804	Statement	","	4396:35:109898:109898	4124244	9	True				
ANR	4124805	Statement	task	4396:37:109900:109903	4124244	10	True				
ANR	4124806	Statement	)	4396:41:109904:109904	4124244	11	True				
ANR	4124807	CompoundStatement		96:43:2092:2092	4124244	12					
ANR	4124808	ExpressionStatement	"r_th_pause ( task -> thread , false )"	4397:3:109911:109943	4124244	0	True				
ANR	4124809	CallExpression	"r_th_pause ( task -> thread , false )"		4124244	0					
ANR	4124810	Callee	r_th_pause		4124244	0					
ANR	4124811	Identifier	r_th_pause		4124244	0					
ANR	4124812	ArgumentList	task -> thread		4124244	1					
ANR	4124813	Argument	task -> thread		4124244	0					
ANR	4124814	PtrMemberAccess	task -> thread		4124244	0					
ANR	4124815	Identifier	task		4124244	0					
ANR	4124816	Identifier	thread		4124244	1					
ANR	4124817	Argument	false		4124244	1					
ANR	4124818	Identifier	false		4124244	0					
ANR	4124819	ExpressionStatement	run_pending_anal ( core )	4401:1:109990:110013	4124244	23	True				
ANR	4124820	CallExpression	run_pending_anal ( core )		4124244	0					
ANR	4124821	Callee	run_pending_anal		4124244	0					
ANR	4124822	Identifier	run_pending_anal		4124244	0					
ANR	4124823	ArgumentList	core		4124244	1					
ANR	4124824	Argument	core		4124244	0					
ANR	4124825	Identifier	core		4124244	0					
ANR	4124826	ReturnStatement	return ret ;	4402:1:110016:110026	4124244	24	True				
ANR	4124827	Identifier	ret		4124244	0					
ANR	4124828	ReturnType	R_API int		4124244	1					
ANR	4124829	Identifier	r_core_cmd		4124244	2					
ANR	4124830	ParameterList	"RCore * core , const char * cstr , int log"		4124244	3					
ANR	4124831	Parameter	RCore * core	4301:21:107773:107783	4124244	0	True				
ANR	4124832	ParameterType	RCore *		4124244	0					
ANR	4124833	Identifier	core		4124244	1					
ANR	4124834	Parameter	const char * cstr	4301:34:107786:107801	4124244	1	True				
ANR	4124835	ParameterType	const char *		4124244	0					
ANR	4124836	Identifier	cstr		4124244	1					
ANR	4124837	Parameter	int log	4301:52:107804:107810	4124244	2	True				
ANR	4124838	ParameterType	int		4124244	0					
ANR	4124839	Identifier	log		4124244	1					
ANR	4124840	CFGEntryNode	ENTRY		4124244		True				
ANR	4124841	CFGExitNode	EXIT		4124244		True				
ANR	4124842	InfiniteForNode	true		4124244		True				
ANR	4124843	Symbol	r_io_system		4124244						
ANR	4124844	Symbol	core -> incomment		4124244						
ANR	4124845	Symbol	strchr		4124244						
ANR	4124846	Symbol	strncmp		4124244						
ANR	4124847	Symbol	strlen		4124244						
ANR	4124848	Symbol	task -> thread		4124244						
ANR	4124849	Symbol	* ptr		4124244						
ANR	4124850	Symbol	* rcmd		4124244						
ANR	4124851	Symbol	* task		4124244						
ANR	4124852	Symbol	ret		4124244						
ANR	4124853	Symbol	res		4124244						
ANR	4124854	Symbol	* * core -> cons		4124244						
ANR	4124855	Symbol	iter		4124244						
ANR	4124856	Symbol	invalid_chars		4124244						
ANR	4124857	Symbol	core		4124244						
ANR	4124858	Symbol	* * * core		4124244						
ANR	4124859	Symbol	task		4124244						
ANR	4124860	Symbol	true		4124244						
ANR	4124861	Symbol	* cstr		4124244						
ANR	4124862	Symbol	r_list_empty		4124244						
ANR	4124863	Symbol	cmd		4124244						
ANR	4124864	Symbol	rcmd		4124244						
ANR	4124865	Symbol	core -> cons -> context		4124244						
ANR	4124866	Symbol	cstr		4124244						
ANR	4124867	Symbol	log		4124244						
ANR	4124868	Symbol	core -> cmdfilter		4124244						
ANR	4124869	Symbol	* core -> cons		4124244						
ANR	4124870	Symbol	r_sandbox_enable		4124244						
ANR	4124871	Symbol	core -> oobi		4124244						
ANR	4124872	Symbol	* core		4124244						
ANR	4124873	Symbol	core -> lock		4124244						
ANR	4124874	Symbol	core -> lastcmd		4124244						
ANR	4124875	Symbol	core -> cmdremote		4124244						
ANR	4124876	Symbol	core -> cons		4124244						
ANR	4124877	Symbol	r_core_cmd_subst		4124244						
ANR	4124878	Symbol	core -> io		4124244						
ANR	4124879	Symbol	core -> tasks		4124244						
ANR	4124880	Symbol	* core -> cons -> context		4124244						
ANR	4124881	Symbol	ocmd		4124244						
ANR	4124882	Symbol	* * core		4124244						
ANR	4124883	Symbol	malloc		4124244						
ANR	4124884	Symbol	false		4124244						
ANR	4124885	Symbol	i		4124244						
ANR	4124886	Symbol	* invalid_chars		4124244						
ANR	4124887	Symbol	core -> oobi_len		4124244						
ANR	4124888	Symbol	ptr		4124244						
ANR	4124889	Symbol	* i		4124244						
ANR	4124890	Symbol	strdup		4124244						
ANR	4124891	Symbol	core -> cons -> context -> cmd_depth		4124244						
ANR	4124892	Function	r_core_cmd_lines	4405:0:110031:110931							
ANR	4124893	FunctionDef	"r_core_cmd_lines (RCore * core , const char * lines)"		4124892	0					
ANR	4124894	CompoundStatement		4405:59:110090:110931	4124892	0					
ANR	4124895	IdentifierDeclStatement	"int r , ret = true ;"	4406:1:110093:110110	4124892	0	True				
ANR	4124896	IdentifierDecl	r		4124892	0					
ANR	4124897	IdentifierDeclType	int		4124892	0					
ANR	4124898	Identifier	r		4124892	1					
ANR	4124899	IdentifierDecl	ret = true		4124892	1					
ANR	4124900	IdentifierDeclType	int		4124892	0					
ANR	4124901	Identifier	ret		4124892	1					
ANR	4124902	AssignmentExpression	ret = true		4124892	2		=			
ANR	4124903	Identifier	true		4124892	0					
ANR	4124904	Identifier	true		4124892	1					
ANR	4124905	IdentifierDeclStatement	"char * nl , * data , * odata ;"	4407:1:110113:110136	4124892	1	True				
ANR	4124906	IdentifierDecl	* nl		4124892	0					
ANR	4124907	IdentifierDeclType	char *		4124892	0					
ANR	4124908	Identifier	nl		4124892	1					
ANR	4124909	IdentifierDecl	* data		4124892	1					
ANR	4124910	IdentifierDeclType	char *		4124892	0					
ANR	4124911	Identifier	data		4124892	1					
ANR	4124912	IdentifierDecl	* odata		4124892	2					
ANR	4124913	IdentifierDeclType	char *		4124892	0					
ANR	4124914	Identifier	odata		4124892	1					
ANR	4124915	IfStatement	if ( ! lines || ! * lines )		4124892	2					
ANR	4124916	Condition	! lines || ! * lines	4409:5:110144:110160	4124892	0	True				
ANR	4124917	OrExpression	! lines || ! * lines		4124892	0		||			
ANR	4124918	UnaryOperationExpression	! lines		4124892	0					
ANR	4124919	UnaryOperator	!		4124892	0					
ANR	4124920	Identifier	lines		4124892	1					
ANR	4124921	UnaryOperationExpression	! * lines		4124892	1					
ANR	4124922	UnaryOperator	!		4124892	0					
ANR	4124923	UnaryOperationExpression	* lines		4124892	1					
ANR	4124924	UnaryOperator	*		4124892	0					
ANR	4124925	Identifier	lines		4124892	1					
ANR	4124926	CompoundStatement		5:24:72:72	4124892	1					
ANR	4124927	ReturnStatement	return true ;	4410:2:110167:110178	4124892	0	True				
ANR	4124928	Identifier	true		4124892	0					
ANR	4124929	ExpressionStatement	data = odata = strdup ( lines )	4412:1:110184:110213	4124892	3	True				
ANR	4124930	AssignmentExpression	data = odata = strdup ( lines )		4124892	0		=			
ANR	4124931	Identifier	data		4124892	0					
ANR	4124932	AssignmentExpression	odata = strdup ( lines )		4124892	1		=			
ANR	4124933	Identifier	odata		4124892	0					
ANR	4124934	CallExpression	strdup ( lines )		4124892	1					
ANR	4124935	Callee	strdup		4124892	0					
ANR	4124936	Identifier	strdup		4124892	0					
ANR	4124937	ArgumentList	lines		4124892	1					
ANR	4124938	Argument	lines		4124892	0					
ANR	4124939	Identifier	lines		4124892	0					
ANR	4124940	IfStatement	if ( ! odata )		4124892	4					
ANR	4124941	Condition	! odata	4413:5:110220:110225	4124892	0	True				
ANR	4124942	UnaryOperationExpression	! odata		4124892	0					
ANR	4124943	UnaryOperator	!		4124892	0					
ANR	4124944	Identifier	odata		4124892	1					
ANR	4124945	CompoundStatement		9:13:137:137	4124892	1					
ANR	4124946	ReturnStatement	return false ;	4414:2:110232:110244	4124892	0	True				
ANR	4124947	Identifier	false		4124892	0					
ANR	4124948	ExpressionStatement	"nl = strchr ( odata , '\\n' )"	4416:1:110250:110275	4124892	5	True				
ANR	4124949	AssignmentExpression	"nl = strchr ( odata , '\\n' )"		4124892	0		=			
ANR	4124950	Identifier	nl		4124892	0					
ANR	4124951	CallExpression	"strchr ( odata , '\\n' )"		4124892	1					
ANR	4124952	Callee	strchr		4124892	0					
ANR	4124953	Identifier	strchr		4124892	0					
ANR	4124954	ArgumentList	odata		4124892	1					
ANR	4124955	Argument	odata		4124892	0					
ANR	4124956	Identifier	odata		4124892	0					
ANR	4124957	Argument	'\\n'		4124892	1					
ANR	4124958	PrimaryExpression	'\\n'		4124892	0					
ANR	4124959	IfStatement	if ( nl )		4124892	6					
ANR	4124960	Condition	nl	4417:5:110282:110283	4124892	0	True				
ANR	4124961	Identifier	nl		4124892	0					
ANR	4124962	CompoundStatement		13:9:195:195	4124892	1					
ANR	4124963	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4418:2:110290:110320	4124892	0	True				
ANR	4124964	CallExpression	"r_cons_break_push ( NULL , NULL )"		4124892	0					
ANR	4124965	Callee	r_cons_break_push		4124892	0					
ANR	4124966	Identifier	r_cons_break_push		4124892	0					
ANR	4124967	ArgumentList	NULL		4124892	1					
ANR	4124968	Argument	NULL		4124892	0					
ANR	4124969	Identifier	NULL		4124892	0					
ANR	4124970	Argument	NULL		4124892	1					
ANR	4124971	Identifier	NULL		4124892	0					
ANR	4124972	DoStatement	do		4124892	1					
ANR	4124973	CompoundStatement		15:5:236:236	4124892	0					
ANR	4124974	IfStatement	if ( r_cons_is_breaked ( ) )		4124892	0					
ANR	4124975	Condition	r_cons_is_breaked ( )	4420:7:110336:110355	4124892	0	True				
ANR	4124976	CallExpression	r_cons_is_breaked ( )		4124892	0					
ANR	4124977	Callee	r_cons_is_breaked		4124892	0					
ANR	4124978	Identifier	r_cons_is_breaked		4124892	0					
ANR	4124979	ArgumentList			4124892	1					
ANR	4124980	CompoundStatement		16:29:267:267	4124892	1					
ANR	4124981	ExpressionStatement	free ( odata )	4421:4:110364:110376	4124892	0	True				
ANR	4124982	CallExpression	free ( odata )		4124892	0					
ANR	4124983	Callee	free		4124892	0					
ANR	4124984	Identifier	free		4124892	0					
ANR	4124985	ArgumentList	odata		4124892	1					
ANR	4124986	Argument	odata		4124892	0					
ANR	4124987	Identifier	odata		4124892	0					
ANR	4124988	ExpressionStatement	r_cons_break_pop ( )	4422:4:110382:110401	4124892	1	True				
ANR	4124989	CallExpression	r_cons_break_pop ( )		4124892	0					
ANR	4124990	Callee	r_cons_break_pop		4124892	0					
ANR	4124991	Identifier	r_cons_break_pop		4124892	0					
ANR	4124992	ArgumentList			4124892	1					
ANR	4124993	ReturnStatement	return ret ;	4423:4:110407:110417	4124892	2	True				
ANR	4124994	Identifier	ret		4124892	0					
ANR	4124995	ExpressionStatement	* nl = '\\0'	4425:3:110427:110437	4124892	1	True				
ANR	4124996	AssignmentExpression	* nl = '\\0'		4124892	0		=			
ANR	4124997	UnaryOperationExpression	* nl		4124892	0					
ANR	4124998	UnaryOperator	*		4124892	0					
ANR	4124999	Identifier	nl		4124892	1					
ANR	4125000	PrimaryExpression	'\\0'		4124892	1					
ANR	4125001	ExpressionStatement	"r = r_core_cmd ( core , data , 0 )"	4426:3:110442:110472	4124892	2	True				
ANR	4125002	AssignmentExpression	"r = r_core_cmd ( core , data , 0 )"		4124892	0		=			
ANR	4125003	Identifier	r		4124892	0					
ANR	4125004	CallExpression	"r_core_cmd ( core , data , 0 )"		4124892	1					
ANR	4125005	Callee	r_core_cmd		4124892	0					
ANR	4125006	Identifier	r_core_cmd		4124892	0					
ANR	4125007	ArgumentList	core		4124892	1					
ANR	4125008	Argument	core		4124892	0					
ANR	4125009	Identifier	core		4124892	0					
ANR	4125010	Argument	data		4124892	1					
ANR	4125011	Identifier	data		4124892	0					
ANR	4125012	Argument	0		4124892	2					
ANR	4125013	PrimaryExpression	0		4124892	0					
ANR	4125014	IfStatement	if ( r < 0 )		4124892	3					
ANR	4125015	Condition	r < 0	4427:7:110481:110485	4124892	0	True				
ANR	4125016	RelationalExpression	r < 0		4124892	0		<			
ANR	4125017	Identifier	r		4124892	0					
ANR	4125018	PrimaryExpression	0		4124892	1					
ANR	4125019	CompoundStatement		23:14:397:397	4124892	1					
ANR	4125020	ExpressionStatement	data = nl + 1	4428:4:110505:110518	4124892	0	True				
ANR	4125021	AssignmentExpression	data = nl + 1		4124892	0		=			
ANR	4125022	Identifier	data		4124892	0					
ANR	4125023	AdditiveExpression	nl + 1		4124892	1		+			
ANR	4125024	Identifier	nl		4124892	0					
ANR	4125025	PrimaryExpression	1		4124892	1					
ANR	4125026	ExpressionStatement	ret = - 1	4429:4:110524:110532	4124892	1	True				
ANR	4125027	AssignmentExpression	ret = - 1		4124892	0		=			
ANR	4125028	Identifier	ret		4124892	0					
ANR	4125029	UnaryOperationExpression	- 1		4124892	1					
ANR	4125030	UnaryOperator	-		4124892	0					
ANR	4125031	PrimaryExpression	1		4124892	1					
ANR	4125032	BreakStatement	break ;	4430:4:110552:110557	4124892	2	True				
ANR	4125033	ExpressionStatement	r_cons_flush ( )	4432:3:110567:110582	4124892	4	True				
ANR	4125034	CallExpression	r_cons_flush ( )		4124892	0					
ANR	4125035	Callee	r_cons_flush		4124892	0					
ANR	4125036	Identifier	r_cons_flush		4124892	0					
ANR	4125037	ArgumentList			4124892	1					
ANR	4125038	IfStatement	if ( data [ 0 ] == 'q' )		4124892	5					
ANR	4125039	Condition	data [ 0 ] == 'q'	4433:7:110591:110604	4124892	0	True				
ANR	4125040	EqualityExpression	data [ 0 ] == 'q'		4124892	0		==			
ANR	4125041	ArrayIndexing	data [ 0 ]		4124892	0					
ANR	4125042	Identifier	data		4124892	0					
ANR	4125043	PrimaryExpression	0		4124892	1					
ANR	4125044	PrimaryExpression	'q'		4124892	1					
ANR	4125045	CompoundStatement		29:23:516:516	4124892	1					
ANR	4125046	IfStatement	if ( data [ 1 ] == '!' )		4124892	0					
ANR	4125047	Condition	data [ 1 ] == '!'	4434:8:110617:110630	4124892	0	True				
ANR	4125048	EqualityExpression	data [ 1 ] == '!'		4124892	0		==			
ANR	4125049	ArrayIndexing	data [ 1 ]		4124892	0					
ANR	4125050	Identifier	data		4124892	0					
ANR	4125051	PrimaryExpression	1		4124892	1					
ANR	4125052	PrimaryExpression	'!'		4124892	1					
ANR	4125053	CompoundStatement		30:24:542:542	4124892	1					
ANR	4125054	ExpressionStatement	ret = - 1	4435:5:110640:110648	4124892	0	True				
ANR	4125055	AssignmentExpression	ret = - 1		4124892	0		=			
ANR	4125056	Identifier	ret		4124892	0					
ANR	4125057	UnaryOperationExpression	- 1		4124892	1					
ANR	4125058	UnaryOperator	-		4124892	0					
ANR	4125059	PrimaryExpression	1		4124892	1					
ANR	4125060	ElseStatement	else		4124892	0					
ANR	4125061	CompoundStatement		32:11:570:570	4124892	0					
ANR	4125062	ExpressionStatement	"eprintf ( ""'q': quit ignored. Use 'q!'\\n"" )"	4437:5:110668:110709	4124892	0	True				
ANR	4125063	CallExpression	"eprintf ( ""'q': quit ignored. Use 'q!'\\n"" )"		4124892	0					
ANR	4125064	Callee	eprintf		4124892	0					
ANR	4125065	Identifier	eprintf		4124892	0					
ANR	4125066	ArgumentList	"""'q': quit ignored. Use 'q!'\\n"""		4124892	1					
ANR	4125067	Argument	"""'q': quit ignored. Use 'q!'\\n"""		4124892	0					
ANR	4125068	PrimaryExpression	"""'q': quit ignored. Use 'q!'\\n"""		4124892	0					
ANR	4125069	ExpressionStatement	data = nl + 1	4439:4:110721:110734	4124892	1	True				
ANR	4125070	AssignmentExpression	data = nl + 1		4124892	0		=			
ANR	4125071	Identifier	data		4124892	0					
ANR	4125072	AdditiveExpression	nl + 1		4124892	1		+			
ANR	4125073	Identifier	nl		4124892	0					
ANR	4125074	PrimaryExpression	1		4124892	1					
ANR	4125075	BreakStatement	break ;	4440:4:110740:110745	4124892	2	True				
ANR	4125076	ExpressionStatement	data = nl + 1	4442:3:110755:110768	4124892	6	True				
ANR	4125077	AssignmentExpression	data = nl + 1		4124892	0		=			
ANR	4125078	Identifier	data		4124892	0					
ANR	4125079	AdditiveExpression	nl + 1		4124892	1		+			
ANR	4125080	Identifier	nl		4124892	0					
ANR	4125081	PrimaryExpression	1		4124892	1					
ANR	4125082	Condition	"nl = strchr ( data , '\\n' )"	4443:11:110781:110806	4124892	1	True				
ANR	4125083	AssignmentExpression	"nl = strchr ( data , '\\n' )"		4124892	0		=			
ANR	4125084	Identifier	nl		4124892	0					
ANR	4125085	CallExpression	"strchr ( data , '\\n' )"		4124892	1					
ANR	4125086	Callee	strchr		4124892	0					
ANR	4125087	Identifier	strchr		4124892	0					
ANR	4125088	ArgumentList	data		4124892	1					
ANR	4125089	Argument	data		4124892	0					
ANR	4125090	Identifier	data		4124892	0					
ANR	4125091	Argument	'\\n'		4124892	1					
ANR	4125092	PrimaryExpression	'\\n'		4124892	0					
ANR	4125093	ExpressionStatement	r_cons_break_pop ( )	4444:2:110812:110831	4124892	2	True				
ANR	4125094	CallExpression	r_cons_break_pop ( )		4124892	0					
ANR	4125095	Callee	r_cons_break_pop		4124892	0					
ANR	4125096	Identifier	r_cons_break_pop		4124892	0					
ANR	4125097	ArgumentList			4124892	1					
ANR	4125098	IfStatement	if ( ret >= 0 && data && * data )		4124892	7					
ANR	4125099	Condition	ret >= 0 && data && * data	4446:5:110841:110865	4124892	0	True				
ANR	4125100	AndExpression	ret >= 0 && data && * data		4124892	0		&&			
ANR	4125101	RelationalExpression	ret >= 0		4124892	0		>=			
ANR	4125102	Identifier	ret		4124892	0					
ANR	4125103	PrimaryExpression	0		4124892	1					
ANR	4125104	AndExpression	data && * data		4124892	1		&&			
ANR	4125105	Identifier	data		4124892	0					
ANR	4125106	UnaryOperationExpression	* data		4124892	1					
ANR	4125107	UnaryOperator	*		4124892	0					
ANR	4125108	Identifier	data		4124892	1					
ANR	4125109	CompoundStatement		42:32:777:777	4124892	1					
ANR	4125110	ExpressionStatement	"r_core_cmd ( core , data , 0 )"	4447:2:110872:110898	4124892	0	True				
ANR	4125111	CallExpression	"r_core_cmd ( core , data , 0 )"		4124892	0					
ANR	4125112	Callee	r_core_cmd		4124892	0					
ANR	4125113	Identifier	r_core_cmd		4124892	0					
ANR	4125114	ArgumentList	core		4124892	1					
ANR	4125115	Argument	core		4124892	0					
ANR	4125116	Identifier	core		4124892	0					
ANR	4125117	Argument	data		4124892	1					
ANR	4125118	Identifier	data		4124892	0					
ANR	4125119	Argument	0		4124892	2					
ANR	4125120	PrimaryExpression	0		4124892	0					
ANR	4125121	ExpressionStatement	free ( odata )	4449:1:110904:110916	4124892	8	True				
ANR	4125122	CallExpression	free ( odata )		4124892	0					
ANR	4125123	Callee	free		4124892	0					
ANR	4125124	Identifier	free		4124892	0					
ANR	4125125	ArgumentList	odata		4124892	1					
ANR	4125126	Argument	odata		4124892	0					
ANR	4125127	Identifier	odata		4124892	0					
ANR	4125128	ReturnStatement	return ret ;	4450:1:110919:110929	4124892	9	True				
ANR	4125129	Identifier	ret		4124892	0					
ANR	4125130	ReturnType	R_API int		4124892	1					
ANR	4125131	Identifier	r_core_cmd_lines		4124892	2					
ANR	4125132	ParameterList	"RCore * core , const char * lines"		4124892	3					
ANR	4125133	Parameter	RCore * core	4405:27:110058:110068	4124892	0	True				
ANR	4125134	ParameterType	RCore *		4124892	0					
ANR	4125135	Identifier	core		4124892	1					
ANR	4125136	Parameter	const char * lines	4405:40:110071:110087	4124892	1	True				
ANR	4125137	ParameterType	const char *		4124892	0					
ANR	4125138	Identifier	lines		4124892	1					
ANR	4125139	CFGEntryNode	ENTRY		4124892		True				
ANR	4125140	CFGExitNode	EXIT		4124892		True				
ANR	4125141	Symbol	ret		4124892						
ANR	4125142	Symbol	r_core_cmd		4124892						
ANR	4125143	Symbol	NULL		4124892						
ANR	4125144	Symbol	data		4124892						
ANR	4125145	Symbol	* nl		4124892						
ANR	4125146	Symbol	false		4124892						
ANR	4125147	Symbol	strchr		4124892						
ANR	4125148	Symbol	* lines		4124892						
ANR	4125149	Symbol	core		4124892						
ANR	4125150	Symbol	r		4124892						
ANR	4125151	Symbol	odata		4124892						
ANR	4125152	Symbol	r_cons_is_breaked		4124892						
ANR	4125153	Symbol	true		4124892						
ANR	4125154	Symbol	strdup		4124892						
ANR	4125155	Symbol	lines		4124892						
ANR	4125156	Symbol	* data		4124892						
ANR	4125157	Symbol	nl		4124892						
ANR	4125158	Function	r_core_cmd_file	4453:0:110934:111306							
ANR	4125159	FunctionDef	"r_core_cmd_file (RCore * core , const char * file)"		4125158	0					
ANR	4125160	CompoundStatement		4453:57:110991:111306	4125158	0					
ANR	4125161	IdentifierDeclStatement	char * data = r_file_abspath ( file ) ;	4454:1:110994:111028	4125158	0	True				
ANR	4125162	IdentifierDecl	* data = r_file_abspath ( file )		4125158	0					
ANR	4125163	IdentifierDeclType	char *		4125158	0					
ANR	4125164	Identifier	data		4125158	1					
ANR	4125165	AssignmentExpression	* data = r_file_abspath ( file )		4125158	2		=			
ANR	4125166	Identifier	data		4125158	0					
ANR	4125167	CallExpression	r_file_abspath ( file )		4125158	1					
ANR	4125168	Callee	r_file_abspath		4125158	0					
ANR	4125169	Identifier	r_file_abspath		4125158	0					
ANR	4125170	ArgumentList	file		4125158	1					
ANR	4125171	Argument	file		4125158	0					
ANR	4125172	Identifier	file		4125158	0					
ANR	4125173	IfStatement	if ( ! data )		4125158	1					
ANR	4125174	Condition	! data	4455:5:111035:111039	4125158	0	True				
ANR	4125175	UnaryOperationExpression	! data		4125158	0					
ANR	4125176	UnaryOperator	!		4125158	0					
ANR	4125177	Identifier	data		4125158	1					
ANR	4125178	CompoundStatement		3:12:50:50	4125158	1					
ANR	4125179	ReturnStatement	return false ;	4456:2:111046:111058	4125158	0	True				
ANR	4125180	Identifier	false		4125158	0					
ANR	4125181	IdentifierDeclStatement	"char * odata = r_file_slurp ( data , NULL ) ;"	4458:1:111064:111103	4125158	2	True				
ANR	4125182	IdentifierDecl	"* odata = r_file_slurp ( data , NULL )"		4125158	0					
ANR	4125183	IdentifierDeclType	char *		4125158	0					
ANR	4125184	Identifier	odata		4125158	1					
ANR	4125185	AssignmentExpression	"* odata = r_file_slurp ( data , NULL )"		4125158	2		=			
ANR	4125186	Identifier	odata		4125158	0					
ANR	4125187	CallExpression	"r_file_slurp ( data , NULL )"		4125158	1					
ANR	4125188	Callee	r_file_slurp		4125158	0					
ANR	4125189	Identifier	r_file_slurp		4125158	0					
ANR	4125190	ArgumentList	data		4125158	1					
ANR	4125191	Argument	data		4125158	0					
ANR	4125192	Identifier	data		4125158	0					
ANR	4125193	Argument	NULL		4125158	1					
ANR	4125194	Identifier	NULL		4125158	0					
ANR	4125195	ExpressionStatement	free ( data )	4459:1:111106:111117	4125158	3	True				
ANR	4125196	CallExpression	free ( data )		4125158	0					
ANR	4125197	Callee	free		4125158	0					
ANR	4125198	Identifier	free		4125158	0					
ANR	4125199	ArgumentList	data		4125158	1					
ANR	4125200	Argument	data		4125158	0					
ANR	4125201	Identifier	data		4125158	0					
ANR	4125202	IfStatement	if ( ! odata )		4125158	4					
ANR	4125203	Condition	! odata	4460:5:111124:111129	4125158	0	True				
ANR	4125204	UnaryOperationExpression	! odata		4125158	0					
ANR	4125205	UnaryOperator	!		4125158	0					
ANR	4125206	Identifier	odata		4125158	1					
ANR	4125207	CompoundStatement		8:13:140:140	4125158	1					
ANR	4125208	ReturnStatement	return false ;	4461:2:111136:111148	4125158	0	True				
ANR	4125209	Identifier	false		4125158	0					
ANR	4125210	IfStatement	"if ( ! r_core_cmd_lines ( core , odata ) )"		4125158	5					
ANR	4125211	Condition	"! r_core_cmd_lines ( core , odata )"	4463:5:111158:111188	4125158	0	True				
ANR	4125212	UnaryOperationExpression	"! r_core_cmd_lines ( core , odata )"		4125158	0					
ANR	4125213	UnaryOperator	!		4125158	0					
ANR	4125214	CallExpression	"r_core_cmd_lines ( core , odata )"		4125158	1					
ANR	4125215	Callee	r_core_cmd_lines		4125158	0					
ANR	4125216	Identifier	r_core_cmd_lines		4125158	0					
ANR	4125217	ArgumentList	core		4125158	1					
ANR	4125218	Argument	core		4125158	0					
ANR	4125219	Identifier	core		4125158	0					
ANR	4125220	Argument	odata		4125158	1					
ANR	4125221	Identifier	odata		4125158	0					
ANR	4125222	CompoundStatement		11:38:199:199	4125158	1					
ANR	4125223	ExpressionStatement	"eprintf ( ""Failed to run script '%s'\\n"" , file )"	4464:2:111195:111240	4125158	0	True				
ANR	4125224	CallExpression	"eprintf ( ""Failed to run script '%s'\\n"" , file )"		4125158	0					
ANR	4125225	Callee	eprintf		4125158	0					
ANR	4125226	Identifier	eprintf		4125158	0					
ANR	4125227	ArgumentList	"""Failed to run script '%s'\\n"""		4125158	1					
ANR	4125228	Argument	"""Failed to run script '%s'\\n"""		4125158	0					
ANR	4125229	PrimaryExpression	"""Failed to run script '%s'\\n"""		4125158	0					
ANR	4125230	Argument	file		4125158	1					
ANR	4125231	Identifier	file		4125158	0					
ANR	4125232	ExpressionStatement	free ( odata )	4465:2:111244:111256	4125158	1	True				
ANR	4125233	CallExpression	free ( odata )		4125158	0					
ANR	4125234	Callee	free		4125158	0					
ANR	4125235	Identifier	free		4125158	0					
ANR	4125236	ArgumentList	odata		4125158	1					
ANR	4125237	Argument	odata		4125158	0					
ANR	4125238	Identifier	odata		4125158	0					
ANR	4125239	ReturnStatement	return false ;	4466:2:111260:111272	4125158	2	True				
ANR	4125240	Identifier	false		4125158	0					
ANR	4125241	ExpressionStatement	free ( odata )	4468:1:111278:111290	4125158	6	True				
ANR	4125242	CallExpression	free ( odata )		4125158	0					
ANR	4125243	Callee	free		4125158	0					
ANR	4125244	Identifier	free		4125158	0					
ANR	4125245	ArgumentList	odata		4125158	1					
ANR	4125246	Argument	odata		4125158	0					
ANR	4125247	Identifier	odata		4125158	0					
ANR	4125248	ReturnStatement	return true ;	4469:1:111293:111304	4125158	7	True				
ANR	4125249	Identifier	true		4125158	0					
ANR	4125250	ReturnType	R_API int		4125158	1					
ANR	4125251	Identifier	r_core_cmd_file		4125158	2					
ANR	4125252	ParameterList	"RCore * core , const char * file"		4125158	3					
ANR	4125253	Parameter	RCore * core	4453:26:110960:110970	4125158	0	True				
ANR	4125254	ParameterType	RCore *		4125158	0					
ANR	4125255	Identifier	core		4125158	1					
ANR	4125256	Parameter	const char * file	4453:39:110973:110988	4125158	1	True				
ANR	4125257	ParameterType	const char *		4125158	0					
ANR	4125258	Identifier	file		4125158	1					
ANR	4125259	CFGEntryNode	ENTRY		4125158		True				
ANR	4125260	CFGExitNode	EXIT		4125158		True				
ANR	4125261	Symbol	core		4125158						
ANR	4125262	Symbol	r_file_abspath		4125158						
ANR	4125263	Symbol	r_file_slurp		4125158						
ANR	4125264	Symbol	odata		4125158						
ANR	4125265	Symbol	file		4125158						
ANR	4125266	Symbol	NULL		4125158						
ANR	4125267	Symbol	data		4125158						
ANR	4125268	Symbol	r_core_cmd_lines		4125158						
ANR	4125269	Symbol	false		4125158						
ANR	4125270	Symbol	true		4125158						
ANR	4125271	Function	r_core_cmd_command	4472:0:111309:111654							
ANR	4125272	FunctionDef	"r_core_cmd_command (RCore * core , const char * command)"		4125271	0					
ANR	4125273	CompoundStatement		4472:63:111372:111654	4125271	0					
ANR	4125274	IdentifierDeclStatement	"int ret , len ;"	4473:1:111375:111387	4125271	0	True				
ANR	4125275	IdentifierDecl	ret		4125271	0					
ANR	4125276	IdentifierDeclType	int		4125271	0					
ANR	4125277	Identifier	ret		4125271	1					
ANR	4125278	IdentifierDecl	len		4125271	1					
ANR	4125279	IdentifierDeclType	int		4125271	0					
ANR	4125280	Identifier	len		4125271	1					
ANR	4125281	IdentifierDeclStatement	"char * buf , * rcmd , * ptr ;"	4474:1:111390:111412	4125271	1	True				
ANR	4125282	IdentifierDecl	* buf		4125271	0					
ANR	4125283	IdentifierDeclType	char *		4125271	0					
ANR	4125284	Identifier	buf		4125271	1					
ANR	4125285	IdentifierDecl	* rcmd		4125271	1					
ANR	4125286	IdentifierDeclType	char *		4125271	0					
ANR	4125287	Identifier	rcmd		4125271	1					
ANR	4125288	IdentifierDecl	* ptr		4125271	2					
ANR	4125289	IdentifierDeclType	char *		4125271	0					
ANR	4125290	Identifier	ptr		4125271	1					
ANR	4125291	IdentifierDeclStatement	"char * cmd = r_core_sysenv_begin ( core , command ) ;"	4475:1:111415:111462	4125271	2	True				
ANR	4125292	IdentifierDecl	"* cmd = r_core_sysenv_begin ( core , command )"		4125271	0					
ANR	4125293	IdentifierDeclType	char *		4125271	0					
ANR	4125294	Identifier	cmd		4125271	1					
ANR	4125295	AssignmentExpression	"* cmd = r_core_sysenv_begin ( core , command )"		4125271	2		=			
ANR	4125296	Identifier	cmd		4125271	0					
ANR	4125297	CallExpression	"r_core_sysenv_begin ( core , command )"		4125271	1					
ANR	4125298	Callee	r_core_sysenv_begin		4125271	0					
ANR	4125299	Identifier	r_core_sysenv_begin		4125271	0					
ANR	4125300	ArgumentList	core		4125271	1					
ANR	4125301	Argument	core		4125271	0					
ANR	4125302	Identifier	core		4125271	0					
ANR	4125303	Argument	command		4125271	1					
ANR	4125304	Identifier	command		4125271	0					
ANR	4125305	ExpressionStatement	"rcmd = ptr = buf = r_sys_cmd_str ( cmd , 0 , & len )"	4476:1:111465:111512	4125271	3	True				
ANR	4125306	AssignmentExpression	"rcmd = ptr = buf = r_sys_cmd_str ( cmd , 0 , & len )"		4125271	0		=			
ANR	4125307	Identifier	rcmd		4125271	0					
ANR	4125308	AssignmentExpression	"ptr = buf = r_sys_cmd_str ( cmd , 0 , & len )"		4125271	1		=			
ANR	4125309	Identifier	ptr		4125271	0					
ANR	4125310	AssignmentExpression	"buf = r_sys_cmd_str ( cmd , 0 , & len )"		4125271	1		=			
ANR	4125311	Identifier	buf		4125271	0					
ANR	4125312	CallExpression	"r_sys_cmd_str ( cmd , 0 , & len )"		4125271	1					
ANR	4125313	Callee	r_sys_cmd_str		4125271	0					
ANR	4125314	Identifier	r_sys_cmd_str		4125271	0					
ANR	4125315	ArgumentList	cmd		4125271	1					
ANR	4125316	Argument	cmd		4125271	0					
ANR	4125317	Identifier	cmd		4125271	0					
ANR	4125318	Argument	0		4125271	1					
ANR	4125319	PrimaryExpression	0		4125271	0					
ANR	4125320	Argument	& len		4125271	2					
ANR	4125321	UnaryOperationExpression	& len		4125271	0					
ANR	4125322	UnaryOperator	&		4125271	0					
ANR	4125323	Identifier	len		4125271	1					
ANR	4125324	IfStatement	if ( ! buf )		4125271	4					
ANR	4125325	Condition	! buf	4477:5:111519:111522	4125271	0	True				
ANR	4125326	UnaryOperationExpression	! buf		4125271	0					
ANR	4125327	UnaryOperator	!		4125271	0					
ANR	4125328	Identifier	buf		4125271	1					
ANR	4125329	CompoundStatement		6:11:152:152	4125271	1					
ANR	4125330	ExpressionStatement	free ( cmd )	4478:2:111529:111539	4125271	0	True				
ANR	4125331	CallExpression	free ( cmd )		4125271	0					
ANR	4125332	Callee	free		4125271	0					
ANR	4125333	Identifier	free		4125271	0					
ANR	4125334	ArgumentList	cmd		4125271	1					
ANR	4125335	Argument	cmd		4125271	0					
ANR	4125336	Identifier	cmd		4125271	0					
ANR	4125337	ReturnStatement	return - 1 ;	4479:2:111543:111552	4125271	1	True				
ANR	4125338	UnaryOperationExpression	- 1		4125271	0					
ANR	4125339	UnaryOperator	-		4125271	0					
ANR	4125340	PrimaryExpression	1		4125271	1					
ANR	4125341	ExpressionStatement	"ret = r_core_cmd ( core , rcmd , 0 )"	4481:1:111558:111590	4125271	5	True				
ANR	4125342	AssignmentExpression	"ret = r_core_cmd ( core , rcmd , 0 )"		4125271	0		=			
ANR	4125343	Identifier	ret		4125271	0					
ANR	4125344	CallExpression	"r_core_cmd ( core , rcmd , 0 )"		4125271	1					
ANR	4125345	Callee	r_core_cmd		4125271	0					
ANR	4125346	Identifier	r_core_cmd		4125271	0					
ANR	4125347	ArgumentList	core		4125271	1					
ANR	4125348	Argument	core		4125271	0					
ANR	4125349	Identifier	core		4125271	0					
ANR	4125350	Argument	rcmd		4125271	1					
ANR	4125351	Identifier	rcmd		4125271	0					
ANR	4125352	Argument	0		4125271	2					
ANR	4125353	PrimaryExpression	0		4125271	0					
ANR	4125354	ExpressionStatement	"r_core_sysenv_end ( core , command )"	4482:1:111593:111626	4125271	6	True				
ANR	4125355	CallExpression	"r_core_sysenv_end ( core , command )"		4125271	0					
ANR	4125356	Callee	r_core_sysenv_end		4125271	0					
ANR	4125357	Identifier	r_core_sysenv_end		4125271	0					
ANR	4125358	ArgumentList	core		4125271	1					
ANR	4125359	Argument	core		4125271	0					
ANR	4125360	Identifier	core		4125271	0					
ANR	4125361	Argument	command		4125271	1					
ANR	4125362	Identifier	command		4125271	0					
ANR	4125363	ExpressionStatement	free ( buf )	4483:1:111629:111639	4125271	7	True				
ANR	4125364	CallExpression	free ( buf )		4125271	0					
ANR	4125365	Callee	free		4125271	0					
ANR	4125366	Identifier	free		4125271	0					
ANR	4125367	ArgumentList	buf		4125271	1					
ANR	4125368	Argument	buf		4125271	0					
ANR	4125369	Identifier	buf		4125271	0					
ANR	4125370	ReturnStatement	return ret ;	4484:1:111642:111652	4125271	8	True				
ANR	4125371	Identifier	ret		4125271	0					
ANR	4125372	ReturnType	R_API int		4125271	1					
ANR	4125373	Identifier	r_core_cmd_command		4125271	2					
ANR	4125374	ParameterList	"RCore * core , const char * command"		4125271	3					
ANR	4125375	Parameter	RCore * core	4472:29:111338:111348	4125271	0	True				
ANR	4125376	ParameterType	RCore *		4125271	0					
ANR	4125377	Identifier	core		4125271	1					
ANR	4125378	Parameter	const char * command	4472:42:111351:111369	4125271	1	True				
ANR	4125379	ParameterType	const char *		4125271	0					
ANR	4125380	Identifier	command		4125271	1					
ANR	4125381	CFGEntryNode	ENTRY		4125271		True				
ANR	4125382	CFGExitNode	EXIT		4125271		True				
ANR	4125383	Symbol	ret		4125271						
ANR	4125384	Symbol	core		4125271						
ANR	4125385	Symbol	r_core_sysenv_begin		4125271						
ANR	4125386	Symbol	r_sys_cmd_str		4125271						
ANR	4125387	Symbol	r_core_cmd		4125271						
ANR	4125388	Symbol	buf		4125271						
ANR	4125389	Symbol	len		4125271						
ANR	4125390	Symbol	cmd		4125271						
ANR	4125391	Symbol	& len		4125271						
ANR	4125392	Symbol	rcmd		4125271						
ANR	4125393	Symbol	command		4125271						
ANR	4125394	Symbol	ptr		4125271						
ANR	4125395	Function	r_core_disassemble_instr	4488:0:111694:111920							
ANR	4125396	FunctionDef	"r_core_disassemble_instr (RCore * core , ut64 addr , int l)"		4125395	0					
ANR	4125397	CompoundStatement		4488:68:111762:111920	4125395	0					
ANR	4125398	IdentifierDeclStatement	"char * cmd , * ret = NULL ;"	4489:1:111765:111787	4125395	0	True				
ANR	4125399	IdentifierDecl	* cmd		4125395	0					
ANR	4125400	IdentifierDeclType	char *		4125395	0					
ANR	4125401	Identifier	cmd		4125395	1					
ANR	4125402	IdentifierDecl	* ret = NULL		4125395	1					
ANR	4125403	IdentifierDeclType	char *		4125395	0					
ANR	4125404	Identifier	ret		4125395	1					
ANR	4125405	AssignmentExpression	* ret = NULL		4125395	2		=			
ANR	4125406	Identifier	NULL		4125395	0					
ANR	4125407	Identifier	NULL		4125395	1					
ANR	4125408	Statement	cmd	4490:1:111790:111792	4125395	1	True				
ANR	4125409	Statement	=	4490:5:111794:111794	4125395	2	True				
ANR	4125410	Statement	r_str_newf	4490:7:111796:111805	4125395	3	True				
ANR	4125411	Statement	(	4490:18:111807:111807	4125395	4	True				
ANR	4125412	Statement	"""pd %i @ 0x%08"""	4490:19:111808:111822	4125395	5	True				
ANR	4125413	Statement	PFMT64x	4490:34:111823:111829	4125395	6	True				
ANR	4125414	Statement	","	4490:41:111830:111830	4125395	7	True				
ANR	4125415	Statement	l	4490:43:111832:111832	4125395	8	True				
ANR	4125416	Statement	","	4490:44:111833:111833	4125395	9	True				
ANR	4125417	Statement	addr	4490:46:111835:111838	4125395	10	True				
ANR	4125418	Statement	)	4490:50:111839:111839	4125395	11	True				
ANR	4125419	ExpressionStatement		4490:51:111840:111840	4125395	12	True				
ANR	4125420	IfStatement	if ( cmd )		4125395	13					
ANR	4125421	Condition	cmd	4491:5:111847:111849	4125395	0	True				
ANR	4125422	Identifier	cmd		4125395	0					
ANR	4125423	CompoundStatement		4:10:89:89	4125395	1					
ANR	4125424	ExpressionStatement	"ret = r_core_cmd_str ( core , cmd )"	4492:2:111856:111888	4125395	0	True				
ANR	4125425	AssignmentExpression	"ret = r_core_cmd_str ( core , cmd )"		4125395	0		=			
ANR	4125426	Identifier	ret		4125395	0					
ANR	4125427	CallExpression	"r_core_cmd_str ( core , cmd )"		4125395	1					
ANR	4125428	Callee	r_core_cmd_str		4125395	0					
ANR	4125429	Identifier	r_core_cmd_str		4125395	0					
ANR	4125430	ArgumentList	core		4125395	1					
ANR	4125431	Argument	core		4125395	0					
ANR	4125432	Identifier	core		4125395	0					
ANR	4125433	Argument	cmd		4125395	1					
ANR	4125434	Identifier	cmd		4125395	0					
ANR	4125435	ExpressionStatement	free ( cmd )	4493:2:111892:111902	4125395	1	True				
ANR	4125436	CallExpression	free ( cmd )		4125395	0					
ANR	4125437	Callee	free		4125395	0					
ANR	4125438	Identifier	free		4125395	0					
ANR	4125439	ArgumentList	cmd		4125395	1					
ANR	4125440	Argument	cmd		4125395	0					
ANR	4125441	Identifier	cmd		4125395	0					
ANR	4125442	ReturnStatement	return ret ;	4495:1:111908:111918	4125395	14	True				
ANR	4125443	Identifier	ret		4125395	0					
ANR	4125444	ReturnType	R_API char *		4125395	1					
ANR	4125445	Identifier	r_core_disassemble_instr		4125395	2					
ANR	4125446	ParameterList	"RCore * core , ut64 addr , int l"		4125395	3					
ANR	4125447	Parameter	RCore * core	4488:37:111731:111741	4125395	0	True				
ANR	4125448	ParameterType	RCore *		4125395	0					
ANR	4125449	Identifier	core		4125395	1					
ANR	4125450	Parameter	ut64 addr	4488:50:111744:111752	4125395	1	True				
ANR	4125451	ParameterType	ut64		4125395	0					
ANR	4125452	Identifier	addr		4125395	1					
ANR	4125453	Parameter	int l	4488:61:111755:111759	4125395	2	True				
ANR	4125454	ParameterType	int		4125395	0					
ANR	4125455	Identifier	l		4125395	1					
ANR	4125456	CFGEntryNode	ENTRY		4125395		True				
ANR	4125457	CFGExitNode	EXIT		4125395		True				
ANR	4125458	Symbol	ret		4125395						
ANR	4125459	Symbol	core		4125395						
ANR	4125460	Symbol	NULL		4125395						
ANR	4125461	Symbol	r_core_cmd_str		4125395						
ANR	4125462	Symbol	cmd		4125395						
ANR	4125463	Symbol	addr		4125395						
ANR	4125464	Symbol	l		4125395						
ANR	4125465	Function	r_core_disassemble_bytes	4498:0:111923:112149							
ANR	4125466	FunctionDef	"r_core_disassemble_bytes (RCore * core , ut64 addr , int b)"		4125465	0					
ANR	4125467	CompoundStatement		4498:68:111991:112149	4125465	0					
ANR	4125468	IdentifierDeclStatement	"char * cmd , * ret = NULL ;"	4499:1:111994:112016	4125465	0	True				
ANR	4125469	IdentifierDecl	* cmd		4125465	0					
ANR	4125470	IdentifierDeclType	char *		4125465	0					
ANR	4125471	Identifier	cmd		4125465	1					
ANR	4125472	IdentifierDecl	* ret = NULL		4125465	1					
ANR	4125473	IdentifierDeclType	char *		4125465	0					
ANR	4125474	Identifier	ret		4125465	1					
ANR	4125475	AssignmentExpression	* ret = NULL		4125465	2		=			
ANR	4125476	Identifier	NULL		4125465	0					
ANR	4125477	Identifier	NULL		4125465	1					
ANR	4125478	Statement	cmd	4500:1:112019:112021	4125465	1	True				
ANR	4125479	Statement	=	4500:5:112023:112023	4125465	2	True				
ANR	4125480	Statement	r_str_newf	4500:7:112025:112034	4125465	3	True				
ANR	4125481	Statement	(	4500:18:112036:112036	4125465	4	True				
ANR	4125482	Statement	"""pD %i @ 0x%08"""	4500:19:112037:112051	4125465	5	True				
ANR	4125483	Statement	PFMT64x	4500:34:112052:112058	4125465	6	True				
ANR	4125484	Statement	","	4500:41:112059:112059	4125465	7	True				
ANR	4125485	Statement	b	4500:43:112061:112061	4125465	8	True				
ANR	4125486	Statement	","	4500:44:112062:112062	4125465	9	True				
ANR	4125487	Statement	addr	4500:46:112064:112067	4125465	10	True				
ANR	4125488	Statement	)	4500:50:112068:112068	4125465	11	True				
ANR	4125489	ExpressionStatement		4500:51:112069:112069	4125465	12	True				
ANR	4125490	IfStatement	if ( cmd )		4125465	13					
ANR	4125491	Condition	cmd	4501:5:112076:112078	4125465	0	True				
ANR	4125492	Identifier	cmd		4125465	0					
ANR	4125493	CompoundStatement		4:10:89:89	4125465	1					
ANR	4125494	ExpressionStatement	"ret = r_core_cmd_str ( core , cmd )"	4502:2:112085:112117	4125465	0	True				
ANR	4125495	AssignmentExpression	"ret = r_core_cmd_str ( core , cmd )"		4125465	0		=			
ANR	4125496	Identifier	ret		4125465	0					
ANR	4125497	CallExpression	"r_core_cmd_str ( core , cmd )"		4125465	1					
ANR	4125498	Callee	r_core_cmd_str		4125465	0					
ANR	4125499	Identifier	r_core_cmd_str		4125465	0					
ANR	4125500	ArgumentList	core		4125465	1					
ANR	4125501	Argument	core		4125465	0					
ANR	4125502	Identifier	core		4125465	0					
ANR	4125503	Argument	cmd		4125465	1					
ANR	4125504	Identifier	cmd		4125465	0					
ANR	4125505	ExpressionStatement	free ( cmd )	4503:2:112121:112131	4125465	1	True				
ANR	4125506	CallExpression	free ( cmd )		4125465	0					
ANR	4125507	Callee	free		4125465	0					
ANR	4125508	Identifier	free		4125465	0					
ANR	4125509	ArgumentList	cmd		4125465	1					
ANR	4125510	Argument	cmd		4125465	0					
ANR	4125511	Identifier	cmd		4125465	0					
ANR	4125512	ReturnStatement	return ret ;	4505:1:112137:112147	4125465	14	True				
ANR	4125513	Identifier	ret		4125465	0					
ANR	4125514	ReturnType	R_API char *		4125465	1					
ANR	4125515	Identifier	r_core_disassemble_bytes		4125465	2					
ANR	4125516	ParameterList	"RCore * core , ut64 addr , int b"		4125465	3					
ANR	4125517	Parameter	RCore * core	4498:37:111960:111970	4125465	0	True				
ANR	4125518	ParameterType	RCore *		4125465	0					
ANR	4125519	Identifier	core		4125465	1					
ANR	4125520	Parameter	ut64 addr	4498:50:111973:111981	4125465	1	True				
ANR	4125521	ParameterType	ut64		4125465	0					
ANR	4125522	Identifier	addr		4125465	1					
ANR	4125523	Parameter	int b	4498:61:111984:111988	4125465	2	True				
ANR	4125524	ParameterType	int		4125465	0					
ANR	4125525	Identifier	b		4125465	1					
ANR	4125526	CFGEntryNode	ENTRY		4125465		True				
ANR	4125527	CFGExitNode	EXIT		4125465		True				
ANR	4125528	Symbol	ret		4125465						
ANR	4125529	Symbol	core		4125465						
ANR	4125530	Symbol	b		4125465						
ANR	4125531	Symbol	NULL		4125465						
ANR	4125532	Symbol	r_core_cmd_str		4125465						
ANR	4125533	Symbol	cmd		4125465						
ANR	4125534	Symbol	addr		4125465						
ANR	4125535	Function	r_core_cmd_buffer	4508:0:112152:112489							
ANR	4125536	FunctionDef	"r_core_cmd_buffer (RCore * core , const char * buf)"		4125535	0					
ANR	4125537	CompoundStatement		4508:58:112210:112489	4125535	0					
ANR	4125538	IdentifierDeclStatement	"char * ptr , * optr , * str = strdup ( buf ) ;"	4509:1:112213:112250	4125535	0	True				
ANR	4125539	IdentifierDecl	* ptr		4125535	0					
ANR	4125540	IdentifierDeclType	char *		4125535	0					
ANR	4125541	Identifier	ptr		4125535	1					
ANR	4125542	IdentifierDecl	* optr		4125535	1					
ANR	4125543	IdentifierDeclType	char *		4125535	0					
ANR	4125544	Identifier	optr		4125535	1					
ANR	4125545	IdentifierDecl	* str = strdup ( buf )		4125535	2					
ANR	4125546	IdentifierDeclType	char *		4125535	0					
ANR	4125547	Identifier	str		4125535	1					
ANR	4125548	AssignmentExpression	* str = strdup ( buf )		4125535	2		=			
ANR	4125549	Identifier	str		4125535	0					
ANR	4125550	CallExpression	strdup ( buf )		4125535	1					
ANR	4125551	Callee	strdup		4125535	0					
ANR	4125552	Identifier	strdup		4125535	0					
ANR	4125553	ArgumentList	buf		4125535	1					
ANR	4125554	Argument	buf		4125535	0					
ANR	4125555	Identifier	buf		4125535	0					
ANR	4125556	IfStatement	if ( ! str )		4125535	1					
ANR	4125557	Condition	! str	4510:5:112257:112260	4125535	0	True				
ANR	4125558	UnaryOperationExpression	! str		4125535	0					
ANR	4125559	UnaryOperator	!		4125535	0					
ANR	4125560	Identifier	str		4125535	1					
ANR	4125561	CompoundStatement		3:11:52:52	4125535	1					
ANR	4125562	ReturnStatement	return false ;	4511:2:112267:112279	4125535	0	True				
ANR	4125563	Identifier	false		4125535	0					
ANR	4125564	ExpressionStatement	optr = str	4513:1:112285:112295	4125535	2	True				
ANR	4125565	AssignmentExpression	optr = str		4125535	0		=			
ANR	4125566	Identifier	optr		4125535	0					
ANR	4125567	Identifier	str		4125535	1					
ANR	4125568	ExpressionStatement	"ptr = strchr ( str , '\\n' )"	4514:1:112298:112322	4125535	3	True				
ANR	4125569	AssignmentExpression	"ptr = strchr ( str , '\\n' )"		4125535	0		=			
ANR	4125570	Identifier	ptr		4125535	0					
ANR	4125571	CallExpression	"strchr ( str , '\\n' )"		4125535	1					
ANR	4125572	Callee	strchr		4125535	0					
ANR	4125573	Identifier	strchr		4125535	0					
ANR	4125574	ArgumentList	str		4125535	1					
ANR	4125575	Argument	str		4125535	0					
ANR	4125576	Identifier	str		4125535	0					
ANR	4125577	Argument	'\\n'		4125535	1					
ANR	4125578	PrimaryExpression	'\\n'		4125535	0					
ANR	4125579	WhileStatement	while ( ptr )		4125535	4					
ANR	4125580	Condition	ptr	4515:8:112332:112334	4125535	0	True				
ANR	4125581	Identifier	ptr		4125535	0					
ANR	4125582	CompoundStatement		8:13:126:126	4125535	1					
ANR	4125583	ExpressionStatement	* ptr = '\\0'	4516:2:112341:112352	4125535	0	True				
ANR	4125584	AssignmentExpression	* ptr = '\\0'		4125535	0		=			
ANR	4125585	UnaryOperationExpression	* ptr		4125535	0					
ANR	4125586	UnaryOperator	*		4125535	0					
ANR	4125587	Identifier	ptr		4125535	1					
ANR	4125588	PrimaryExpression	'\\0'		4125535	1					
ANR	4125589	ExpressionStatement	"r_core_cmd ( core , optr , 0 )"	4517:2:112356:112382	4125535	1	True				
ANR	4125590	CallExpression	"r_core_cmd ( core , optr , 0 )"		4125535	0					
ANR	4125591	Callee	r_core_cmd		4125535	0					
ANR	4125592	Identifier	r_core_cmd		4125535	0					
ANR	4125593	ArgumentList	core		4125535	1					
ANR	4125594	Argument	core		4125535	0					
ANR	4125595	Identifier	core		4125535	0					
ANR	4125596	Argument	optr		4125535	1					
ANR	4125597	Identifier	optr		4125535	0					
ANR	4125598	Argument	0		4125535	2					
ANR	4125599	PrimaryExpression	0		4125535	0					
ANR	4125600	ExpressionStatement	optr = ptr + 1	4518:2:112386:112400	4125535	2	True				
ANR	4125601	AssignmentExpression	optr = ptr + 1		4125535	0		=			
ANR	4125602	Identifier	optr		4125535	0					
ANR	4125603	AdditiveExpression	ptr + 1		4125535	1		+			
ANR	4125604	Identifier	ptr		4125535	0					
ANR	4125605	PrimaryExpression	1		4125535	1					
ANR	4125606	ExpressionStatement	"ptr = strchr ( str , '\\n' )"	4519:2:112404:112428	4125535	3	True				
ANR	4125607	AssignmentExpression	"ptr = strchr ( str , '\\n' )"		4125535	0		=			
ANR	4125608	Identifier	ptr		4125535	0					
ANR	4125609	CallExpression	"strchr ( str , '\\n' )"		4125535	1					
ANR	4125610	Callee	strchr		4125535	0					
ANR	4125611	Identifier	strchr		4125535	0					
ANR	4125612	ArgumentList	str		4125535	1					
ANR	4125613	Argument	str		4125535	0					
ANR	4125614	Identifier	str		4125535	0					
ANR	4125615	Argument	'\\n'		4125535	1					
ANR	4125616	PrimaryExpression	'\\n'		4125535	0					
ANR	4125617	ExpressionStatement	"r_core_cmd ( core , optr , 0 )"	4521:1:112434:112460	4125535	5	True				
ANR	4125618	CallExpression	"r_core_cmd ( core , optr , 0 )"		4125535	0					
ANR	4125619	Callee	r_core_cmd		4125535	0					
ANR	4125620	Identifier	r_core_cmd		4125535	0					
ANR	4125621	ArgumentList	core		4125535	1					
ANR	4125622	Argument	core		4125535	0					
ANR	4125623	Identifier	core		4125535	0					
ANR	4125624	Argument	optr		4125535	1					
ANR	4125625	Identifier	optr		4125535	0					
ANR	4125626	Argument	0		4125535	2					
ANR	4125627	PrimaryExpression	0		4125535	0					
ANR	4125628	ExpressionStatement	free ( str )	4522:1:112463:112473	4125535	6	True				
ANR	4125629	CallExpression	free ( str )		4125535	0					
ANR	4125630	Callee	free		4125535	0					
ANR	4125631	Identifier	free		4125535	0					
ANR	4125632	ArgumentList	str		4125535	1					
ANR	4125633	Argument	str		4125535	0					
ANR	4125634	Identifier	str		4125535	0					
ANR	4125635	ReturnStatement	return true ;	4523:1:112476:112487	4125535	7	True				
ANR	4125636	Identifier	true		4125535	0					
ANR	4125637	ReturnType	R_API int		4125535	1					
ANR	4125638	Identifier	r_core_cmd_buffer		4125535	2					
ANR	4125639	ParameterList	"RCore * core , const char * buf"		4125535	3					
ANR	4125640	Parameter	RCore * core	4508:28:112180:112190	4125535	0	True				
ANR	4125641	ParameterType	RCore *		4125535	0					
ANR	4125642	Identifier	core		4125535	1					
ANR	4125643	Parameter	const char * buf	4508:41:112193:112207	4125535	1	True				
ANR	4125644	ParameterType	const char *		4125535	0					
ANR	4125645	Identifier	buf		4125535	1					
ANR	4125646	CFGEntryNode	ENTRY		4125535		True				
ANR	4125647	CFGExitNode	EXIT		4125535		True				
ANR	4125648	Symbol	str		4125535						
ANR	4125649	Symbol	core		4125535						
ANR	4125650	Symbol	buf		4125535						
ANR	4125651	Symbol	false		4125535						
ANR	4125652	Symbol	* ptr		4125535						
ANR	4125653	Symbol	true		4125535						
ANR	4125654	Symbol	strchr		4125535						
ANR	4125655	Symbol	optr		4125535						
ANR	4125656	Symbol	strdup		4125535						
ANR	4125657	Symbol	ptr		4125535						
ANR	4125658	Function	r_core_cmdf	4526:0:112492:112726							
ANR	4125659	FunctionDef	"r_core_cmdf (RCore * core , const char * fmt)"		4125658	0					
ANR	4125660	CompoundStatement		4526:57:112549:112726	4125658	0					
ANR	4125661	IdentifierDeclStatement	char string [ 4096 ] ;	4527:1:112552:112569	4125658	0	True				
ANR	4125662	IdentifierDecl	string [ 4096 ]		4125658	0					
ANR	4125663	IdentifierDeclType	char [ 4096 ]		4125658	0					
ANR	4125664	Identifier	string		4125658	1					
ANR	4125665	PrimaryExpression	4096		4125658	2					
ANR	4125666	IdentifierDeclStatement	int ret ;	4528:1:112572:112579	4125658	1	True				
ANR	4125667	IdentifierDecl	ret		4125658	0					
ANR	4125668	IdentifierDeclType	int		4125658	0					
ANR	4125669	Identifier	ret		4125658	1					
ANR	4125670	IdentifierDeclStatement	va_list ap ;	4529:1:112582:112592	4125658	2	True				
ANR	4125671	IdentifierDecl	ap		4125658	0					
ANR	4125672	IdentifierDeclType	va_list		4125658	0					
ANR	4125673	Identifier	ap		4125658	1					
ANR	4125674	ExpressionStatement	"va_start ( ap , fmt )"	4530:1:112595:112613	4125658	3	True				
ANR	4125675	CallExpression	"va_start ( ap , fmt )"		4125658	0					
ANR	4125676	Callee	va_start		4125658	0					
ANR	4125677	Identifier	va_start		4125658	0					
ANR	4125678	ArgumentList	ap		4125658	1					
ANR	4125679	Argument	ap		4125658	0					
ANR	4125680	Identifier	ap		4125658	0					
ANR	4125681	Argument	fmt		4125658	1					
ANR	4125682	Identifier	fmt		4125658	0					
ANR	4125683	ExpressionStatement	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"	4531:1:112616:112660	4125658	4	True				
ANR	4125684	CallExpression	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"		4125658	0					
ANR	4125685	Callee	vsnprintf		4125658	0					
ANR	4125686	Identifier	vsnprintf		4125658	0					
ANR	4125687	ArgumentList	string		4125658	1					
ANR	4125688	Argument	string		4125658	0					
ANR	4125689	Identifier	string		4125658	0					
ANR	4125690	Argument	sizeof ( string )		4125658	1					
ANR	4125691	SizeofExpression	sizeof ( string )		4125658	0					
ANR	4125692	Sizeof	sizeof		4125658	0					
ANR	4125693	SizeofOperand	string		4125658	1					
ANR	4125694	Argument	fmt		4125658	2					
ANR	4125695	Identifier	fmt		4125658	0					
ANR	4125696	Argument	ap		4125658	3					
ANR	4125697	Identifier	ap		4125658	0					
ANR	4125698	ExpressionStatement	"ret = r_core_cmd ( core , string , 0 )"	4532:1:112663:112697	4125658	5	True				
ANR	4125699	AssignmentExpression	"ret = r_core_cmd ( core , string , 0 )"		4125658	0		=			
ANR	4125700	Identifier	ret		4125658	0					
ANR	4125701	CallExpression	"r_core_cmd ( core , string , 0 )"		4125658	1					
ANR	4125702	Callee	r_core_cmd		4125658	0					
ANR	4125703	Identifier	r_core_cmd		4125658	0					
ANR	4125704	ArgumentList	core		4125658	1					
ANR	4125705	Argument	core		4125658	0					
ANR	4125706	Identifier	core		4125658	0					
ANR	4125707	Argument	string		4125658	1					
ANR	4125708	Identifier	string		4125658	0					
ANR	4125709	Argument	0		4125658	2					
ANR	4125710	PrimaryExpression	0		4125658	0					
ANR	4125711	ExpressionStatement	va_end ( ap )	4533:1:112700:112711	4125658	6	True				
ANR	4125712	CallExpression	va_end ( ap )		4125658	0					
ANR	4125713	Callee	va_end		4125658	0					
ANR	4125714	Identifier	va_end		4125658	0					
ANR	4125715	ArgumentList	ap		4125658	1					
ANR	4125716	Argument	ap		4125658	0					
ANR	4125717	Identifier	ap		4125658	0					
ANR	4125718	ReturnStatement	return ret ;	4534:1:112714:112724	4125658	7	True				
ANR	4125719	Identifier	ret		4125658	0					
ANR	4125720	ReturnType	R_API int		4125658	1					
ANR	4125721	Identifier	r_core_cmdf		4125658	2					
ANR	4125722	ParameterList	"RCore * core , const char * fmt"		4125658	3					
ANR	4125723	Parameter	RCore * core	4526:22:112514:112524	4125658	0	True				
ANR	4125724	ParameterType	RCore *		4125658	0					
ANR	4125725	Identifier	core		4125658	1					
ANR	4125726	Parameter	const char * fmt	4526:35:112527:112541	4125658	1	True				
ANR	4125727	ParameterType	const char *		4125658	0					
ANR	4125728	Identifier	fmt		4125658	1					
ANR	4125729	CFGEntryNode	ENTRY		4125658		True				
ANR	4125730	CFGExitNode	EXIT		4125658		True				
ANR	4125731	Symbol	ret		4125658						
ANR	4125732	Symbol	core		4125658						
ANR	4125733	Symbol	r_core_cmd		4125658						
ANR	4125734	Symbol	string		4125658						
ANR	4125735	Symbol	fmt		4125658						
ANR	4125736	Symbol	ap		4125658						
ANR	4125737	Function	r_core_cmd0	4537:0:112729:112818							
ANR	4125738	FunctionDef	"r_core_cmd0 (RCore * core , const char * cmd)"		4125737	0					
ANR	4125739	CompoundStatement		4537:52:112781:112818	4125737	0					
ANR	4125740	ReturnStatement	"return r_core_cmd ( core , cmd , 0 ) ;"	4538:1:112784:112816	4125737	0	True				
ANR	4125741	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4125737	0					
ANR	4125742	Callee	r_core_cmd		4125737	0					
ANR	4125743	Identifier	r_core_cmd		4125737	0					
ANR	4125744	ArgumentList	core		4125737	1					
ANR	4125745	Argument	core		4125737	0					
ANR	4125746	Identifier	core		4125737	0					
ANR	4125747	Argument	cmd		4125737	1					
ANR	4125748	Identifier	cmd		4125737	0					
ANR	4125749	Argument	0		4125737	2					
ANR	4125750	PrimaryExpression	0		4125737	0					
ANR	4125751	ReturnType	R_API int		4125737	1					
ANR	4125752	Identifier	r_core_cmd0		4125737	2					
ANR	4125753	ParameterList	"RCore * core , const char * cmd"		4125737	3					
ANR	4125754	Parameter	RCore * core	4537:22:112751:112761	4125737	0	True				
ANR	4125755	ParameterType	RCore *		4125737	0					
ANR	4125756	Identifier	core		4125737	1					
ANR	4125757	Parameter	const char * cmd	4537:35:112764:112778	4125737	1	True				
ANR	4125758	ParameterType	const char *		4125737	0					
ANR	4125759	Identifier	cmd		4125737	1					
ANR	4125760	CFGEntryNode	ENTRY		4125737		True				
ANR	4125761	CFGExitNode	EXIT		4125737		True				
ANR	4125762	Symbol	core		4125737						
ANR	4125763	Symbol	r_core_cmd		4125737						
ANR	4125764	Symbol	cmd		4125737						
ANR	4125765	Function	r_core_flush	4541:0:112821:112945							
ANR	4125766	FunctionDef	"r_core_flush (RCore * core , const char * cmd)"		4125765	0					
ANR	4125767	CompoundStatement		4541:53:112874:112945	4125765	0					
ANR	4125768	IdentifierDeclStatement	"int ret = r_core_cmd ( core , cmd , 0 ) ;"	4542:1:112877:112912	4125765	0	True				
ANR	4125769	IdentifierDecl	"ret = r_core_cmd ( core , cmd , 0 )"		4125765	0					
ANR	4125770	IdentifierDeclType	int		4125765	0					
ANR	4125771	Identifier	ret		4125765	1					
ANR	4125772	AssignmentExpression	"ret = r_core_cmd ( core , cmd , 0 )"		4125765	2		=			
ANR	4125773	Identifier	ret		4125765	0					
ANR	4125774	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4125765	1					
ANR	4125775	Callee	r_core_cmd		4125765	0					
ANR	4125776	Identifier	r_core_cmd		4125765	0					
ANR	4125777	ArgumentList	core		4125765	1					
ANR	4125778	Argument	core		4125765	0					
ANR	4125779	Identifier	core		4125765	0					
ANR	4125780	Argument	cmd		4125765	1					
ANR	4125781	Identifier	cmd		4125765	0					
ANR	4125782	Argument	0		4125765	2					
ANR	4125783	PrimaryExpression	0		4125765	0					
ANR	4125784	ExpressionStatement	r_cons_flush ( )	4543:1:112915:112930	4125765	1	True				
ANR	4125785	CallExpression	r_cons_flush ( )		4125765	0					
ANR	4125786	Callee	r_cons_flush		4125765	0					
ANR	4125787	Identifier	r_cons_flush		4125765	0					
ANR	4125788	ArgumentList			4125765	1					
ANR	4125789	ReturnStatement	return ret ;	4544:1:112933:112943	4125765	2	True				
ANR	4125790	Identifier	ret		4125765	0					
ANR	4125791	ReturnType	R_API int		4125765	1					
ANR	4125792	Identifier	r_core_flush		4125765	2					
ANR	4125793	ParameterList	"RCore * core , const char * cmd"		4125765	3					
ANR	4125794	Parameter	RCore * core	4541:23:112844:112854	4125765	0	True				
ANR	4125795	ParameterType	RCore *		4125765	0					
ANR	4125796	Identifier	core		4125765	1					
ANR	4125797	Parameter	const char * cmd	4541:36:112857:112871	4125765	1	True				
ANR	4125798	ParameterType	const char *		4125765	0					
ANR	4125799	Identifier	cmd		4125765	1					
ANR	4125800	CFGEntryNode	ENTRY		4125765		True				
ANR	4125801	CFGExitNode	EXIT		4125765		True				
ANR	4125802	Symbol	ret		4125765						
ANR	4125803	Symbol	core		4125765						
ANR	4125804	Symbol	r_core_cmd		4125765						
ANR	4125805	Symbol	cmd		4125765						
ANR	4125806	Function	r_core_cmd_str_pipe	4547:0:112948:114502							
ANR	4125807	FunctionDef	"r_core_cmd_str_pipe (RCore * core , const char * cmd)"		4125806	0					
ANR	4125808	CompoundStatement		4547:62:113010:114502	4125806	0					
ANR	4125809	IdentifierDeclStatement	"char * s , * tmp = NULL ;"	4548:1:113013:113033	4125806	0	True				
ANR	4125810	IdentifierDecl	* s		4125806	0					
ANR	4125811	IdentifierDeclType	char *		4125806	0					
ANR	4125812	Identifier	s		4125806	1					
ANR	4125813	IdentifierDecl	* tmp = NULL		4125806	1					
ANR	4125814	IdentifierDeclType	char *		4125806	0					
ANR	4125815	Identifier	tmp		4125806	1					
ANR	4125816	AssignmentExpression	* tmp = NULL		4125806	2		=			
ANR	4125817	Identifier	NULL		4125806	0					
ANR	4125818	Identifier	NULL		4125806	1					
ANR	4125819	IfStatement	if ( r_sandbox_enable ( 0 ) )		4125806	1					
ANR	4125820	Condition	r_sandbox_enable ( 0 )	4549:5:113040:113059	4125806	0	True				
ANR	4125821	CallExpression	r_sandbox_enable ( 0 )		4125806	0					
ANR	4125822	Callee	r_sandbox_enable		4125806	0					
ANR	4125823	Identifier	r_sandbox_enable		4125806	0					
ANR	4125824	ArgumentList	0		4125806	1					
ANR	4125825	Argument	0		4125806	0					
ANR	4125826	PrimaryExpression	0		4125806	0					
ANR	4125827	CompoundStatement		4:2:55:103	4125806	1					
ANR	4125828	IdentifierDeclStatement	"char * p = ( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL ;"	4550:2:113066:113114	4125806	0	True				
ANR	4125829	IdentifierDecl	"* p = ( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL"		4125806	0					
ANR	4125830	IdentifierDeclType	char *		4125806	0					
ANR	4125831	Identifier	p		4125806	1					
ANR	4125832	AssignmentExpression	"* p = ( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL"		4125806	2		=			
ANR	4125833	Identifier	p		4125806	0					
ANR	4125834	ConditionalExpression	"( * cmd != '""' ) ? strchr ( cmd , '|' ) : NULL"		4125806	1					
ANR	4125835	Condition	"* cmd != '""'"		4125806	0					
ANR	4125836	EqualityExpression	"* cmd != '""'"		4125806	0		!=			
ANR	4125837	UnaryOperationExpression	* cmd		4125806	0					
ANR	4125838	UnaryOperator	*		4125806	0					
ANR	4125839	Identifier	cmd		4125806	1					
ANR	4125840	PrimaryExpression	"'""'"		4125806	1					
ANR	4125841	CallExpression	"strchr ( cmd , '|' )"		4125806	1					
ANR	4125842	Callee	strchr		4125806	0					
ANR	4125843	Identifier	strchr		4125806	0					
ANR	4125844	ArgumentList	cmd		4125806	1					
ANR	4125845	Argument	cmd		4125806	0					
ANR	4125846	Identifier	cmd		4125806	0					
ANR	4125847	Argument	'|'		4125806	1					
ANR	4125848	PrimaryExpression	'|'		4125806	0					
ANR	4125849	Identifier	NULL		4125806	2					
ANR	4125850	IfStatement	if ( p )		4125806	1					
ANR	4125851	Condition	p	4551:6:113122:113122	4125806	0	True				
ANR	4125852	Identifier	p		4125806	0					
ANR	4125853	CompoundStatement		9:3:295:317	4125806	1					
ANR	4125854	IdentifierDeclStatement	char * c = strdup ( cmd ) ;	4555:3:113306:113328	4125806	0	True				
ANR	4125855	IdentifierDecl	* c = strdup ( cmd )		4125806	0					
ANR	4125856	IdentifierDeclType	char *		4125806	0					
ANR	4125857	Identifier	c		4125806	1					
ANR	4125858	AssignmentExpression	* c = strdup ( cmd )		4125806	2		=			
ANR	4125859	Identifier	c		4125806	0					
ANR	4125860	CallExpression	strdup ( cmd )		4125806	1					
ANR	4125861	Callee	strdup		4125806	0					
ANR	4125862	Identifier	strdup		4125806	0					
ANR	4125863	ArgumentList	cmd		4125806	1					
ANR	4125864	Argument	cmd		4125806	0					
ANR	4125865	Identifier	cmd		4125806	0					
ANR	4125866	ExpressionStatement	c [ p - cmd ] = 0	4556:3:113333:113347	4125806	1	True				
ANR	4125867	AssignmentExpression	c [ p - cmd ] = 0		4125806	0		=			
ANR	4125868	ArrayIndexing	c [ p - cmd ]		4125806	0					
ANR	4125869	Identifier	c		4125806	0					
ANR	4125870	AdditiveExpression	p - cmd		4125806	1		-			
ANR	4125871	Identifier	p		4125806	0					
ANR	4125872	Identifier	cmd		4125806	1					
ANR	4125873	PrimaryExpression	0		4125806	1					
ANR	4125874	IfStatement	"if ( ! strcmp ( p + 1 , ""H"" ) )"		4125806	2					
ANR	4125875	Condition	"! strcmp ( p + 1 , ""H"" )"	4557:7:113356:113375	4125806	0	True				
ANR	4125876	UnaryOperationExpression	"! strcmp ( p + 1 , ""H"" )"		4125806	0					
ANR	4125877	UnaryOperator	!		4125806	0					
ANR	4125878	CallExpression	"strcmp ( p + 1 , ""H"" )"		4125806	1					
ANR	4125879	Callee	strcmp		4125806	0					
ANR	4125880	Identifier	strcmp		4125806	0					
ANR	4125881	ArgumentList	p + 1		4125806	1					
ANR	4125882	Argument	p + 1		4125806	0					
ANR	4125883	AdditiveExpression	p + 1		4125806	0		+			
ANR	4125884	Identifier	p		4125806	0					
ANR	4125885	PrimaryExpression	1		4125806	1					
ANR	4125886	Argument	"""H"""		4125806	1					
ANR	4125887	PrimaryExpression	"""H"""		4125806	0					
ANR	4125888	CompoundStatement		14:4:429:472	4125806	1					
ANR	4125889	IdentifierDeclStatement	"char * res = r_core_cmd_str ( core , c ) ;"	4558:4:113384:113420	4125806	0	True				
ANR	4125890	IdentifierDecl	"* res = r_core_cmd_str ( core , c )"		4125806	0					
ANR	4125891	IdentifierDeclType	char *		4125806	0					
ANR	4125892	Identifier	res		4125806	1					
ANR	4125893	AssignmentExpression	"* res = r_core_cmd_str ( core , c )"		4125806	2		=			
ANR	4125894	Identifier	res		4125806	0					
ANR	4125895	CallExpression	"r_core_cmd_str ( core , c )"		4125806	1					
ANR	4125896	Callee	r_core_cmd_str		4125806	0					
ANR	4125897	Identifier	r_core_cmd_str		4125806	0					
ANR	4125898	ArgumentList	core		4125806	1					
ANR	4125899	Argument	core		4125806	0					
ANR	4125900	Identifier	core		4125806	0					
ANR	4125901	Argument	c		4125806	1					
ANR	4125902	Identifier	c		4125806	0					
ANR	4125903	ExpressionStatement	free ( c )	4559:4:113426:113434	4125806	1	True				
ANR	4125904	CallExpression	free ( c )		4125806	0					
ANR	4125905	Callee	free		4125806	0					
ANR	4125906	Identifier	free		4125806	0					
ANR	4125907	ArgumentList	c		4125806	1					
ANR	4125908	Argument	c		4125806	0					
ANR	4125909	Identifier	c		4125806	0					
ANR	4125910	IdentifierDeclStatement	"char * hres = r_cons_html_filter ( res , NULL ) ;"	4560:4:113440:113483	4125806	2	True				
ANR	4125911	IdentifierDecl	"* hres = r_cons_html_filter ( res , NULL )"		4125806	0					
ANR	4125912	IdentifierDeclType	char *		4125806	0					
ANR	4125913	Identifier	hres		4125806	1					
ANR	4125914	AssignmentExpression	"* hres = r_cons_html_filter ( res , NULL )"		4125806	2		=			
ANR	4125915	Identifier	hres		4125806	0					
ANR	4125916	CallExpression	"r_cons_html_filter ( res , NULL )"		4125806	1					
ANR	4125917	Callee	r_cons_html_filter		4125806	0					
ANR	4125918	Identifier	r_cons_html_filter		4125806	0					
ANR	4125919	ArgumentList	res		4125806	1					
ANR	4125920	Argument	res		4125806	0					
ANR	4125921	Identifier	res		4125806	0					
ANR	4125922	Argument	NULL		4125806	1					
ANR	4125923	Identifier	NULL		4125806	0					
ANR	4125924	ExpressionStatement	free ( res )	4561:4:113489:113499	4125806	3	True				
ANR	4125925	CallExpression	free ( res )		4125806	0					
ANR	4125926	Callee	free		4125806	0					
ANR	4125927	Identifier	free		4125806	0					
ANR	4125928	ArgumentList	res		4125806	1					
ANR	4125929	Argument	res		4125806	0					
ANR	4125930	Identifier	res		4125806	0					
ANR	4125931	ReturnStatement	return hres ;	4562:4:113505:113516	4125806	4	True				
ANR	4125932	Identifier	hres		4125806	0					
ANR	4125933	ElseStatement	else		4125806	0					
ANR	4125934	CompoundStatement		20:4:631:667	4125806	0					
ANR	4125935	IdentifierDeclStatement	"int sh = r_config_get_i ( core -> config , ""scr.color"" ) ;"	4564:4:113534:113585	4125806	0	True				
ANR	4125936	IdentifierDecl	"sh = r_config_get_i ( core -> config , ""scr.color"" )"		4125806	0					
ANR	4125937	IdentifierDeclType	int		4125806	0					
ANR	4125938	Identifier	sh		4125806	1					
ANR	4125939	AssignmentExpression	"sh = r_config_get_i ( core -> config , ""scr.color"" )"		4125806	2		=			
ANR	4125940	Identifier	sh		4125806	0					
ANR	4125941	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4125806	1					
ANR	4125942	Callee	r_config_get_i		4125806	0					
ANR	4125943	Identifier	r_config_get_i		4125806	0					
ANR	4125944	ArgumentList	core -> config		4125806	1					
ANR	4125945	Argument	core -> config		4125806	0					
ANR	4125946	PtrMemberAccess	core -> config		4125806	0					
ANR	4125947	Identifier	core		4125806	0					
ANR	4125948	Identifier	config		4125806	1					
ANR	4125949	Argument	"""scr.color"""		4125806	1					
ANR	4125950	PrimaryExpression	"""scr.color"""		4125806	0					
ANR	4125951	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"	4565:4:113591:113636	4125806	1	True				
ANR	4125952	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"		4125806	0					
ANR	4125953	Callee	r_config_set_i		4125806	0					
ANR	4125954	Identifier	r_config_set_i		4125806	0					
ANR	4125955	ArgumentList	core -> config		4125806	1					
ANR	4125956	Argument	core -> config		4125806	0					
ANR	4125957	PtrMemberAccess	core -> config		4125806	0					
ANR	4125958	Identifier	core		4125806	0					
ANR	4125959	Identifier	config		4125806	1					
ANR	4125960	Argument	"""scr.color"""		4125806	1					
ANR	4125961	PrimaryExpression	"""scr.color"""		4125806	0					
ANR	4125962	Argument	0		4125806	2					
ANR	4125963	PrimaryExpression	0		4125806	0					
ANR	4125964	IdentifierDeclStatement	"char * ret = r_core_cmd_str ( core , c ) ;"	4566:4:113642:113678	4125806	2	True				
ANR	4125965	IdentifierDecl	"* ret = r_core_cmd_str ( core , c )"		4125806	0					
ANR	4125966	IdentifierDeclType	char *		4125806	0					
ANR	4125967	Identifier	ret		4125806	1					
ANR	4125968	AssignmentExpression	"* ret = r_core_cmd_str ( core , c )"		4125806	2		=			
ANR	4125969	Identifier	ret		4125806	0					
ANR	4125970	CallExpression	"r_core_cmd_str ( core , c )"		4125806	1					
ANR	4125971	Callee	r_core_cmd_str		4125806	0					
ANR	4125972	Identifier	r_core_cmd_str		4125806	0					
ANR	4125973	ArgumentList	core		4125806	1					
ANR	4125974	Argument	core		4125806	0					
ANR	4125975	Identifier	core		4125806	0					
ANR	4125976	Argument	c		4125806	1					
ANR	4125977	Identifier	c		4125806	0					
ANR	4125978	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , sh )"	4567:4:113684:113730	4125806	3	True				
ANR	4125979	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , sh )"		4125806	0					
ANR	4125980	Callee	r_config_set_i		4125806	0					
ANR	4125981	Identifier	r_config_set_i		4125806	0					
ANR	4125982	ArgumentList	core -> config		4125806	1					
ANR	4125983	Argument	core -> config		4125806	0					
ANR	4125984	PtrMemberAccess	core -> config		4125806	0					
ANR	4125985	Identifier	core		4125806	0					
ANR	4125986	Identifier	config		4125806	1					
ANR	4125987	Argument	"""scr.color"""		4125806	1					
ANR	4125988	PrimaryExpression	"""scr.color"""		4125806	0					
ANR	4125989	Argument	sh		4125806	2					
ANR	4125990	Identifier	sh		4125806	0					
ANR	4125991	ExpressionStatement	free ( c )	4568:4:113736:113744	4125806	4	True				
ANR	4125992	CallExpression	free ( c )		4125806	0					
ANR	4125993	Callee	free		4125806	0					
ANR	4125994	Identifier	free		4125806	0					
ANR	4125995	ArgumentList	c		4125806	1					
ANR	4125996	Argument	c		4125806	0					
ANR	4125997	Identifier	c		4125806	0					
ANR	4125998	ReturnStatement	return ret ;	4569:4:113750:113760	4125806	5	True				
ANR	4125999	Identifier	ret		4125806	0					
ANR	4126000	ReturnStatement	"return r_core_cmd_str ( core , cmd ) ;"	4572:2:113773:113806	4125806	2	True				
ANR	4126001	CallExpression	"r_core_cmd_str ( core , cmd )"		4125806	0					
ANR	4126002	Callee	r_core_cmd_str		4125806	0					
ANR	4126003	Identifier	r_core_cmd_str		4125806	0					
ANR	4126004	ArgumentList	core		4125806	1					
ANR	4126005	Argument	core		4125806	0					
ANR	4126006	Identifier	core		4125806	0					
ANR	4126007	Argument	cmd		4125806	1					
ANR	4126008	Identifier	cmd		4125806	0					
ANR	4126009	ExpressionStatement	r_cons_reset ( )	4574:1:113812:113827	4125806	2	True				
ANR	4126010	CallExpression	r_cons_reset ( )		4125806	0					
ANR	4126011	Callee	r_cons_reset		4125806	0					
ANR	4126012	Identifier	r_cons_reset		4125806	0					
ANR	4126013	ArgumentList			4125806	1					
ANR	4126014	ExpressionStatement	r_sandbox_disable ( 1 )	4575:1:113830:113851	4125806	3	True				
ANR	4126015	CallExpression	r_sandbox_disable ( 1 )		4125806	0					
ANR	4126016	Callee	r_sandbox_disable		4125806	0					
ANR	4126017	Identifier	r_sandbox_disable		4125806	0					
ANR	4126018	ArgumentList	1		4125806	1					
ANR	4126019	Argument	1		4125806	0					
ANR	4126020	PrimaryExpression	1		4125806	0					
ANR	4126021	IfStatement	"if ( r_file_mkstemp ( ""cmd"" , & tmp ) != - 1 )"		4125806	4					
ANR	4126022	Condition	"r_file_mkstemp ( ""cmd"" , & tmp ) != - 1"	4576:5:113858:113891	4125806	0	True				
ANR	4126023	EqualityExpression	"r_file_mkstemp ( ""cmd"" , & tmp ) != - 1"		4125806	0		!=			
ANR	4126024	CallExpression	"r_file_mkstemp ( ""cmd"" , & tmp )"		4125806	0					
ANR	4126025	Callee	r_file_mkstemp		4125806	0					
ANR	4126026	Identifier	r_file_mkstemp		4125806	0					
ANR	4126027	ArgumentList	"""cmd"""		4125806	1					
ANR	4126028	Argument	"""cmd"""		4125806	0					
ANR	4126029	PrimaryExpression	"""cmd"""		4125806	0					
ANR	4126030	Argument	& tmp		4125806	1					
ANR	4126031	UnaryOperationExpression	& tmp		4125806	0					
ANR	4126032	UnaryOperator	&		4125806	0					
ANR	4126033	Identifier	tmp		4125806	1					
ANR	4126034	UnaryOperationExpression	- 1		4125806	1					
ANR	4126035	UnaryOperator	-		4125806	0					
ANR	4126036	PrimaryExpression	1		4125806	1					
ANR	4126037	CompoundStatement		38:2:1057:1082	4125806	1					
ANR	4126038	IdentifierDeclStatement	"int pipefd = r_cons_pipe_open ( tmp , 1 , 0 ) ;"	4577:2:113898:113939	4125806	0	True				
ANR	4126039	IdentifierDecl	"pipefd = r_cons_pipe_open ( tmp , 1 , 0 )"		4125806	0					
ANR	4126040	IdentifierDeclType	int		4125806	0					
ANR	4126041	Identifier	pipefd		4125806	1					
ANR	4126042	AssignmentExpression	"pipefd = r_cons_pipe_open ( tmp , 1 , 0 )"		4125806	2		=			
ANR	4126043	Identifier	pipefd		4125806	0					
ANR	4126044	CallExpression	"r_cons_pipe_open ( tmp , 1 , 0 )"		4125806	1					
ANR	4126045	Callee	r_cons_pipe_open		4125806	0					
ANR	4126046	Identifier	r_cons_pipe_open		4125806	0					
ANR	4126047	ArgumentList	tmp		4125806	1					
ANR	4126048	Argument	tmp		4125806	0					
ANR	4126049	Identifier	tmp		4125806	0					
ANR	4126050	Argument	1		4125806	1					
ANR	4126051	PrimaryExpression	1		4125806	0					
ANR	4126052	Argument	0		4125806	2					
ANR	4126053	PrimaryExpression	0		4125806	0					
ANR	4126054	IfStatement	if ( pipefd == - 1 )		4125806	1					
ANR	4126055	Condition	pipefd == - 1	4578:6:113947:113958	4125806	0	True				
ANR	4126056	EqualityExpression	pipefd == - 1		4125806	0		==			
ANR	4126057	Identifier	pipefd		4125806	0					
ANR	4126058	UnaryOperationExpression	- 1		4125806	1					
ANR	4126059	UnaryOperator	-		4125806	0					
ANR	4126060	PrimaryExpression	1		4125806	1					
ANR	4126061	CompoundStatement		32:20:950:950	4125806	1					
ANR	4126062	ExpressionStatement	r_file_rm ( tmp )	4579:3:113966:113981	4125806	0	True				
ANR	4126063	CallExpression	r_file_rm ( tmp )		4125806	0					
ANR	4126064	Callee	r_file_rm		4125806	0					
ANR	4126065	Identifier	r_file_rm		4125806	0					
ANR	4126066	ArgumentList	tmp		4125806	1					
ANR	4126067	Argument	tmp		4125806	0					
ANR	4126068	Identifier	tmp		4125806	0					
ANR	4126069	ExpressionStatement	r_sandbox_disable ( 0 )	4580:3:113986:114007	4125806	1	True				
ANR	4126070	CallExpression	r_sandbox_disable ( 0 )		4125806	0					
ANR	4126071	Callee	r_sandbox_disable		4125806	0					
ANR	4126072	Identifier	r_sandbox_disable		4125806	0					
ANR	4126073	ArgumentList	0		4125806	1					
ANR	4126074	Argument	0		4125806	0					
ANR	4126075	PrimaryExpression	0		4125806	0					
ANR	4126076	ExpressionStatement	free ( tmp )	4581:3:114012:114022	4125806	2	True				
ANR	4126077	CallExpression	free ( tmp )		4125806	0					
ANR	4126078	Callee	free		4125806	0					
ANR	4126079	Identifier	free		4125806	0					
ANR	4126080	ArgumentList	tmp		4125806	1					
ANR	4126081	Argument	tmp		4125806	0					
ANR	4126082	Identifier	tmp		4125806	0					
ANR	4126083	ReturnStatement	"return r_core_cmd_str ( core , cmd ) ;"	4582:3:114027:114060	4125806	3	True				
ANR	4126084	CallExpression	"r_core_cmd_str ( core , cmd )"		4125806	0					
ANR	4126085	Callee	r_core_cmd_str		4125806	0					
ANR	4126086	Identifier	r_core_cmd_str		4125806	0					
ANR	4126087	ArgumentList	core		4125806	1					
ANR	4126088	Argument	core		4125806	0					
ANR	4126089	Identifier	core		4125806	0					
ANR	4126090	Argument	cmd		4125806	1					
ANR	4126091	Identifier	cmd		4125806	0					
ANR	4126092	IdentifierDeclStatement	char * _cmd = strdup ( cmd ) ;	4584:2:114068:114093	4125806	2	True				
ANR	4126093	IdentifierDecl	* _cmd = strdup ( cmd )		4125806	0					
ANR	4126094	IdentifierDeclType	char *		4125806	0					
ANR	4126095	Identifier	_cmd		4125806	1					
ANR	4126096	AssignmentExpression	* _cmd = strdup ( cmd )		4125806	2		=			
ANR	4126097	Identifier	_cmd		4125806	0					
ANR	4126098	CallExpression	strdup ( cmd )		4125806	1					
ANR	4126099	Callee	strdup		4125806	0					
ANR	4126100	Identifier	strdup		4125806	0					
ANR	4126101	ArgumentList	cmd		4125806	1					
ANR	4126102	Argument	cmd		4125806	0					
ANR	4126103	Identifier	cmd		4125806	0					
ANR	4126104	ExpressionStatement	"r_core_cmd_subst ( core , _cmd )"	4585:2:114097:114126	4125806	3	True				
ANR	4126105	CallExpression	"r_core_cmd_subst ( core , _cmd )"		4125806	0					
ANR	4126106	Callee	r_core_cmd_subst		4125806	0					
ANR	4126107	Identifier	r_core_cmd_subst		4125806	0					
ANR	4126108	ArgumentList	core		4125806	1					
ANR	4126109	Argument	core		4125806	0					
ANR	4126110	Identifier	core		4125806	0					
ANR	4126111	Argument	_cmd		4125806	1					
ANR	4126112	Identifier	_cmd		4125806	0					
ANR	4126113	ExpressionStatement	r_cons_flush ( )	4586:2:114130:114145	4125806	4	True				
ANR	4126114	CallExpression	r_cons_flush ( )		4125806	0					
ANR	4126115	Callee	r_cons_flush		4125806	0					
ANR	4126116	Identifier	r_cons_flush		4125806	0					
ANR	4126117	ArgumentList			4125806	1					
ANR	4126118	ExpressionStatement	r_cons_pipe_close ( pipefd )	4587:2:114149:114175	4125806	5	True				
ANR	4126119	CallExpression	r_cons_pipe_close ( pipefd )		4125806	0					
ANR	4126120	Callee	r_cons_pipe_close		4125806	0					
ANR	4126121	Identifier	r_cons_pipe_close		4125806	0					
ANR	4126122	ArgumentList	pipefd		4125806	1					
ANR	4126123	Argument	pipefd		4125806	0					
ANR	4126124	Identifier	pipefd		4125806	0					
ANR	4126125	ExpressionStatement	"s = r_file_slurp ( tmp , NULL )"	4588:2:114179:114207	4125806	6	True				
ANR	4126126	AssignmentExpression	"s = r_file_slurp ( tmp , NULL )"		4125806	0		=			
ANR	4126127	Identifier	s		4125806	0					
ANR	4126128	CallExpression	"r_file_slurp ( tmp , NULL )"		4125806	1					
ANR	4126129	Callee	r_file_slurp		4125806	0					
ANR	4126130	Identifier	r_file_slurp		4125806	0					
ANR	4126131	ArgumentList	tmp		4125806	1					
ANR	4126132	Argument	tmp		4125806	0					
ANR	4126133	Identifier	tmp		4125806	0					
ANR	4126134	Argument	NULL		4125806	1					
ANR	4126135	Identifier	NULL		4125806	0					
ANR	4126136	IfStatement	if ( s )		4125806	7					
ANR	4126137	Condition	s	4589:6:114215:114215	4125806	0	True				
ANR	4126138	Identifier	s		4125806	0					
ANR	4126139	CompoundStatement		43:9:1207:1207	4125806	1					
ANR	4126140	ExpressionStatement	r_file_rm ( tmp )	4590:3:114223:114238	4125806	0	True				
ANR	4126141	CallExpression	r_file_rm ( tmp )		4125806	0					
ANR	4126142	Callee	r_file_rm		4125806	0					
ANR	4126143	Identifier	r_file_rm		4125806	0					
ANR	4126144	ArgumentList	tmp		4125806	1					
ANR	4126145	Argument	tmp		4125806	0					
ANR	4126146	Identifier	tmp		4125806	0					
ANR	4126147	ExpressionStatement	r_sandbox_disable ( 0 )	4591:3:114243:114264	4125806	1	True				
ANR	4126148	CallExpression	r_sandbox_disable ( 0 )		4125806	0					
ANR	4126149	Callee	r_sandbox_disable		4125806	0					
ANR	4126150	Identifier	r_sandbox_disable		4125806	0					
ANR	4126151	ArgumentList	0		4125806	1					
ANR	4126152	Argument	0		4125806	0					
ANR	4126153	PrimaryExpression	0		4125806	0					
ANR	4126154	ExpressionStatement	free ( tmp )	4592:3:114269:114279	4125806	2	True				
ANR	4126155	CallExpression	free ( tmp )		4125806	0					
ANR	4126156	Callee	free		4125806	0					
ANR	4126157	Identifier	free		4125806	0					
ANR	4126158	ArgumentList	tmp		4125806	1					
ANR	4126159	Argument	tmp		4125806	0					
ANR	4126160	Identifier	tmp		4125806	0					
ANR	4126161	ExpressionStatement	free ( _cmd )	4593:3:114284:114295	4125806	3	True				
ANR	4126162	CallExpression	free ( _cmd )		4125806	0					
ANR	4126163	Callee	free		4125806	0					
ANR	4126164	Identifier	free		4125806	0					
ANR	4126165	ArgumentList	_cmd		4125806	1					
ANR	4126166	Argument	_cmd		4125806	0					
ANR	4126167	Identifier	_cmd		4125806	0					
ANR	4126168	ReturnStatement	return s ;	4594:3:114300:114308	4125806	4	True				
ANR	4126169	Identifier	s		4125806	0					
ANR	4126170	ExpressionStatement	"eprintf ( ""slurp %s fails\\n"" , tmp )"	4596:2:114316:114349	4125806	8	True				
ANR	4126171	CallExpression	"eprintf ( ""slurp %s fails\\n"" , tmp )"		4125806	0					
ANR	4126172	Callee	eprintf		4125806	0					
ANR	4126173	Identifier	eprintf		4125806	0					
ANR	4126174	ArgumentList	"""slurp %s fails\\n"""		4125806	1					
ANR	4126175	Argument	"""slurp %s fails\\n"""		4125806	0					
ANR	4126176	PrimaryExpression	"""slurp %s fails\\n"""		4125806	0					
ANR	4126177	Argument	tmp		4125806	1					
ANR	4126178	Identifier	tmp		4125806	0					
ANR	4126179	ExpressionStatement	r_file_rm ( tmp )	4597:2:114353:114368	4125806	9	True				
ANR	4126180	CallExpression	r_file_rm ( tmp )		4125806	0					
ANR	4126181	Callee	r_file_rm		4125806	0					
ANR	4126182	Identifier	r_file_rm		4125806	0					
ANR	4126183	ArgumentList	tmp		4125806	1					
ANR	4126184	Argument	tmp		4125806	0					
ANR	4126185	Identifier	tmp		4125806	0					
ANR	4126186	ExpressionStatement	free ( tmp )	4598:2:114372:114382	4125806	10	True				
ANR	4126187	CallExpression	free ( tmp )		4125806	0					
ANR	4126188	Callee	free		4125806	0					
ANR	4126189	Identifier	free		4125806	0					
ANR	4126190	ArgumentList	tmp		4125806	1					
ANR	4126191	Argument	tmp		4125806	0					
ANR	4126192	Identifier	tmp		4125806	0					
ANR	4126193	ExpressionStatement	free ( _cmd )	4599:2:114386:114397	4125806	11	True				
ANR	4126194	CallExpression	free ( _cmd )		4125806	0					
ANR	4126195	Callee	free		4125806	0					
ANR	4126196	Identifier	free		4125806	0					
ANR	4126197	ArgumentList	_cmd		4125806	1					
ANR	4126198	Argument	_cmd		4125806	0					
ANR	4126199	Identifier	_cmd		4125806	0					
ANR	4126200	ExpressionStatement	r_sandbox_disable ( 0 )	4600:2:114401:114422	4125806	12	True				
ANR	4126201	CallExpression	r_sandbox_disable ( 0 )		4125806	0					
ANR	4126202	Callee	r_sandbox_disable		4125806	0					
ANR	4126203	Identifier	r_sandbox_disable		4125806	0					
ANR	4126204	ArgumentList	0		4125806	1					
ANR	4126205	Argument	0		4125806	0					
ANR	4126206	PrimaryExpression	0		4125806	0					
ANR	4126207	ReturnStatement	"return r_core_cmd_str ( core , cmd ) ;"	4601:2:114426:114459	4125806	13	True				
ANR	4126208	CallExpression	"r_core_cmd_str ( core , cmd )"		4125806	0					
ANR	4126209	Callee	r_core_cmd_str		4125806	0					
ANR	4126210	Identifier	r_core_cmd_str		4125806	0					
ANR	4126211	ArgumentList	core		4125806	1					
ANR	4126212	Argument	core		4125806	0					
ANR	4126213	Identifier	core		4125806	0					
ANR	4126214	Argument	cmd		4125806	1					
ANR	4126215	Identifier	cmd		4125806	0					
ANR	4126216	ExpressionStatement	r_sandbox_disable ( 0 )	4603:1:114465:114486	4125806	5	True				
ANR	4126217	CallExpression	r_sandbox_disable ( 0 )		4125806	0					
ANR	4126218	Callee	r_sandbox_disable		4125806	0					
ANR	4126219	Identifier	r_sandbox_disable		4125806	0					
ANR	4126220	ArgumentList	0		4125806	1					
ANR	4126221	Argument	0		4125806	0					
ANR	4126222	PrimaryExpression	0		4125806	0					
ANR	4126223	ReturnStatement	return NULL ;	4604:1:114489:114500	4125806	6	True				
ANR	4126224	Identifier	NULL		4125806	0					
ANR	4126225	ReturnType	R_API char *		4125806	1					
ANR	4126226	Identifier	r_core_cmd_str_pipe		4125806	2					
ANR	4126227	ParameterList	"RCore * core , const char * cmd"		4125806	3					
ANR	4126228	Parameter	RCore * core	4547:32:112980:112990	4125806	0	True				
ANR	4126229	ParameterType	RCore *		4125806	0					
ANR	4126230	Identifier	core		4125806	1					
ANR	4126231	Parameter	const char * cmd	4547:45:112993:113007	4125806	1	True				
ANR	4126232	ParameterType	const char *		4125806	0					
ANR	4126233	Identifier	cmd		4125806	1					
ANR	4126234	CFGEntryNode	ENTRY		4125806		True				
ANR	4126235	CFGExitNode	EXIT		4125806		True				
ANR	4126236	Symbol	r_cons_html_filter		4125806						
ANR	4126237	Symbol	r_core_cmd_str		4125806						
ANR	4126238	Symbol	r_sandbox_enable		4125806						
ANR	4126239	Symbol	hres		4125806						
ANR	4126240	Symbol	* core		4125806						
ANR	4126241	Symbol	strchr		4125806						
ANR	4126242	Symbol	r_cons_pipe_open		4125806						
ANR	4126243	Symbol	sh		4125806						
ANR	4126244	Symbol	tmp		4125806						
ANR	4126245	Symbol	_cmd		4125806						
ANR	4126246	Symbol	* cmd		4125806						
ANR	4126247	Symbol	strcmp		4125806						
ANR	4126248	Symbol	core -> config		4125806						
ANR	4126249	Symbol	ret		4125806						
ANR	4126250	Symbol	res		4125806						
ANR	4126251	Symbol	r_file_slurp		4125806						
ANR	4126252	Symbol	NULL		4125806						
ANR	4126253	Symbol	c		4125806						
ANR	4126254	Symbol	* c		4125806						
ANR	4126255	Symbol	p		4125806						
ANR	4126256	Symbol	core		4125806						
ANR	4126257	Symbol	s		4125806						
ANR	4126258	Symbol	pipefd		4125806						
ANR	4126259	Symbol	r_config_get_i		4125806						
ANR	4126260	Symbol	* p		4125806						
ANR	4126261	Symbol	& tmp		4125806						
ANR	4126262	Symbol	cmd		4125806						
ANR	4126263	Symbol	strdup		4125806						
ANR	4126264	Symbol	r_file_mkstemp		4125806						
ANR	4126265	Function	r_core_cmd_strf	4607:0:114505:114748							
ANR	4126266	FunctionDef	"r_core_cmd_strf (RCore * core , const char * fmt)"		4126265	0					
ANR	4126267	CompoundStatement		4607:63:114568:114748	4126265	0					
ANR	4126268	IdentifierDeclStatement	char string [ 4096 ] ;	4608:1:114571:114588	4126265	0	True				
ANR	4126269	IdentifierDecl	string [ 4096 ]		4126265	0					
ANR	4126270	IdentifierDeclType	char [ 4096 ]		4126265	0					
ANR	4126271	Identifier	string		4126265	1					
ANR	4126272	PrimaryExpression	4096		4126265	2					
ANR	4126273	IdentifierDeclStatement	char * ret ;	4609:1:114591:114600	4126265	1	True				
ANR	4126274	IdentifierDecl	* ret		4126265	0					
ANR	4126275	IdentifierDeclType	char *		4126265	0					
ANR	4126276	Identifier	ret		4126265	1					
ANR	4126277	IdentifierDeclStatement	va_list ap ;	4610:1:114603:114613	4126265	2	True				
ANR	4126278	IdentifierDecl	ap		4126265	0					
ANR	4126279	IdentifierDeclType	va_list		4126265	0					
ANR	4126280	Identifier	ap		4126265	1					
ANR	4126281	ExpressionStatement	"va_start ( ap , fmt )"	4611:1:114616:114634	4126265	3	True				
ANR	4126282	CallExpression	"va_start ( ap , fmt )"		4126265	0					
ANR	4126283	Callee	va_start		4126265	0					
ANR	4126284	Identifier	va_start		4126265	0					
ANR	4126285	ArgumentList	ap		4126265	1					
ANR	4126286	Argument	ap		4126265	0					
ANR	4126287	Identifier	ap		4126265	0					
ANR	4126288	Argument	fmt		4126265	1					
ANR	4126289	Identifier	fmt		4126265	0					
ANR	4126290	ExpressionStatement	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"	4612:1:114637:114681	4126265	4	True				
ANR	4126291	CallExpression	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"		4126265	0					
ANR	4126292	Callee	vsnprintf		4126265	0					
ANR	4126293	Identifier	vsnprintf		4126265	0					
ANR	4126294	ArgumentList	string		4126265	1					
ANR	4126295	Argument	string		4126265	0					
ANR	4126296	Identifier	string		4126265	0					
ANR	4126297	Argument	sizeof ( string )		4126265	1					
ANR	4126298	SizeofExpression	sizeof ( string )		4126265	0					
ANR	4126299	Sizeof	sizeof		4126265	0					
ANR	4126300	SizeofOperand	string		4126265	1					
ANR	4126301	Argument	fmt		4126265	2					
ANR	4126302	Identifier	fmt		4126265	0					
ANR	4126303	Argument	ap		4126265	3					
ANR	4126304	Identifier	ap		4126265	0					
ANR	4126305	ExpressionStatement	"ret = r_core_cmd_str ( core , string )"	4613:1:114684:114719	4126265	5	True				
ANR	4126306	AssignmentExpression	"ret = r_core_cmd_str ( core , string )"		4126265	0		=			
ANR	4126307	Identifier	ret		4126265	0					
ANR	4126308	CallExpression	"r_core_cmd_str ( core , string )"		4126265	1					
ANR	4126309	Callee	r_core_cmd_str		4126265	0					
ANR	4126310	Identifier	r_core_cmd_str		4126265	0					
ANR	4126311	ArgumentList	core		4126265	1					
ANR	4126312	Argument	core		4126265	0					
ANR	4126313	Identifier	core		4126265	0					
ANR	4126314	Argument	string		4126265	1					
ANR	4126315	Identifier	string		4126265	0					
ANR	4126316	ExpressionStatement	va_end ( ap )	4614:1:114722:114733	4126265	6	True				
ANR	4126317	CallExpression	va_end ( ap )		4126265	0					
ANR	4126318	Callee	va_end		4126265	0					
ANR	4126319	Identifier	va_end		4126265	0					
ANR	4126320	ArgumentList	ap		4126265	1					
ANR	4126321	Argument	ap		4126265	0					
ANR	4126322	Identifier	ap		4126265	0					
ANR	4126323	ReturnStatement	return ret ;	4615:1:114736:114746	4126265	7	True				
ANR	4126324	Identifier	ret		4126265	0					
ANR	4126325	ReturnType	R_API char *		4126265	1					
ANR	4126326	Identifier	r_core_cmd_strf		4126265	2					
ANR	4126327	ParameterList	"RCore * core , const char * fmt"		4126265	3					
ANR	4126328	Parameter	RCore * core	4607:28:114533:114543	4126265	0	True				
ANR	4126329	ParameterType	RCore *		4126265	0					
ANR	4126330	Identifier	core		4126265	1					
ANR	4126331	Parameter	const char * fmt	4607:41:114546:114560	4126265	1	True				
ANR	4126332	ParameterType	const char *		4126265	0					
ANR	4126333	Identifier	fmt		4126265	1					
ANR	4126334	CFGEntryNode	ENTRY		4126265		True				
ANR	4126335	CFGExitNode	EXIT		4126265		True				
ANR	4126336	Symbol	ret		4126265						
ANR	4126337	Symbol	core		4126265						
ANR	4126338	Symbol	r_core_cmd_str		4126265						
ANR	4126339	Symbol	string		4126265						
ANR	4126340	Symbol	fmt		4126265						
ANR	4126341	Symbol	ap		4126265						
ANR	4126342	Function	r_core_cmd_str	4619:0:114816:115196							
ANR	4126343	FunctionDef	"r_core_cmd_str (RCore * core , const char * cmd)"		4126342	0					
ANR	4126344	CompoundStatement		4619:57:114873:115196	4126342	0					
ANR	4126345	IdentifierDeclStatement	const char * static_str ;	4620:1:114876:114898	4126342	0	True				
ANR	4126346	IdentifierDecl	* static_str		4126342	0					
ANR	4126347	IdentifierDeclType	const char *		4126342	0					
ANR	4126348	Identifier	static_str		4126342	1					
ANR	4126349	IdentifierDeclStatement	char * retstr = NULL ;	4621:1:114901:114920	4126342	1	True				
ANR	4126350	IdentifierDecl	* retstr = NULL		4126342	0					
ANR	4126351	IdentifierDeclType	char *		4126342	0					
ANR	4126352	Identifier	retstr		4126342	1					
ANR	4126353	AssignmentExpression	* retstr = NULL		4126342	2		=			
ANR	4126354	Identifier	NULL		4126342	0					
ANR	4126355	Identifier	NULL		4126342	1					
ANR	4126356	ExpressionStatement	r_cons_push ( )	4622:1:114923:114937	4126342	2	True				
ANR	4126357	CallExpression	r_cons_push ( )		4126342	0					
ANR	4126358	Callee	r_cons_push		4126342	0					
ANR	4126359	Identifier	r_cons_push		4126342	0					
ANR	4126360	ArgumentList			4126342	1					
ANR	4126361	IfStatement	"if ( r_core_cmd ( core , cmd , 0 ) == - 1 )"		4126342	3					
ANR	4126362	Condition	"r_core_cmd ( core , cmd , 0 ) == - 1"	4623:5:114944:114974	4126342	0	True				
ANR	4126363	EqualityExpression	"r_core_cmd ( core , cmd , 0 ) == - 1"		4126342	0		==			
ANR	4126364	CallExpression	"r_core_cmd ( core , cmd , 0 )"		4126342	0					
ANR	4126365	Callee	r_core_cmd		4126342	0					
ANR	4126366	Identifier	r_core_cmd		4126342	0					
ANR	4126367	ArgumentList	core		4126342	1					
ANR	4126368	Argument	core		4126342	0					
ANR	4126369	Identifier	core		4126342	0					
ANR	4126370	Argument	cmd		4126342	1					
ANR	4126371	Identifier	cmd		4126342	0					
ANR	4126372	Argument	0		4126342	2					
ANR	4126373	PrimaryExpression	0		4126342	0					
ANR	4126374	UnaryOperationExpression	- 1		4126342	1					
ANR	4126375	UnaryOperator	-		4126342	0					
ANR	4126376	PrimaryExpression	1		4126342	1					
ANR	4126377	CompoundStatement		5:38:103:103	4126342	1					
ANR	4126378	ReturnStatement	return NULL ;	4625:2:115025:115036	4126342	0	True				
ANR	4126379	Identifier	NULL		4126342	0					
ANR	4126380	ExpressionStatement	r_cons_filter ( )	4627:1:115042:115058	4126342	4	True				
ANR	4126381	CallExpression	r_cons_filter ( )		4126342	0					
ANR	4126382	Callee	r_cons_filter		4126342	0					
ANR	4126383	Identifier	r_cons_filter		4126342	0					
ANR	4126384	ArgumentList			4126342	1					
ANR	4126385	ExpressionStatement	static_str = r_cons_get_buffer ( )	4628:1:115061:115094	4126342	5	True				
ANR	4126386	AssignmentExpression	static_str = r_cons_get_buffer ( )		4126342	0		=			
ANR	4126387	Identifier	static_str		4126342	0					
ANR	4126388	CallExpression	r_cons_get_buffer ( )		4126342	1					
ANR	4126389	Callee	r_cons_get_buffer		4126342	0					
ANR	4126390	Identifier	r_cons_get_buffer		4126342	0					
ANR	4126391	ArgumentList			4126342	1					
ANR	4126392	ExpressionStatement	"retstr = strdup ( static_str ? static_str : """" )"	4629:1:115097:115141	4126342	6	True				
ANR	4126393	AssignmentExpression	"retstr = strdup ( static_str ? static_str : """" )"		4126342	0		=			
ANR	4126394	Identifier	retstr		4126342	0					
ANR	4126395	CallExpression	"strdup ( static_str ? static_str : """" )"		4126342	1					
ANR	4126396	Callee	strdup		4126342	0					
ANR	4126397	Identifier	strdup		4126342	0					
ANR	4126398	ArgumentList	"static_str ? static_str : """""		4126342	1					
ANR	4126399	Argument	"static_str ? static_str : """""		4126342	0					
ANR	4126400	ConditionalExpression	"static_str ? static_str : """""		4126342	0					
ANR	4126401	Condition	static_str		4126342	0					
ANR	4126402	Identifier	static_str		4126342	0					
ANR	4126403	Identifier	static_str		4126342	1					
ANR	4126404	PrimaryExpression	""""""		4126342	2					
ANR	4126405	ExpressionStatement	r_cons_pop ( )	4630:1:115144:115157	4126342	7	True				
ANR	4126406	CallExpression	r_cons_pop ( )		4126342	0					
ANR	4126407	Callee	r_cons_pop		4126342	0					
ANR	4126408	Identifier	r_cons_pop		4126342	0					
ANR	4126409	ArgumentList			4126342	1					
ANR	4126410	ExpressionStatement	r_cons_echo ( NULL )	4631:1:115160:115178	4126342	8	True				
ANR	4126411	CallExpression	r_cons_echo ( NULL )		4126342	0					
ANR	4126412	Callee	r_cons_echo		4126342	0					
ANR	4126413	Identifier	r_cons_echo		4126342	0					
ANR	4126414	ArgumentList	NULL		4126342	1					
ANR	4126415	Argument	NULL		4126342	0					
ANR	4126416	Identifier	NULL		4126342	0					
ANR	4126417	ReturnStatement	return retstr ;	4632:1:115181:115194	4126342	9	True				
ANR	4126418	Identifier	retstr		4126342	0					
ANR	4126419	ReturnType	R_API char *		4126342	1					
ANR	4126420	Identifier	r_core_cmd_str		4126342	2					
ANR	4126421	ParameterList	"RCore * core , const char * cmd"		4126342	3					
ANR	4126422	Parameter	RCore * core	4619:27:114843:114853	4126342	0	True				
ANR	4126423	ParameterType	RCore *		4126342	0					
ANR	4126424	Identifier	core		4126342	1					
ANR	4126425	Parameter	const char * cmd	4619:40:114856:114870	4126342	1	True				
ANR	4126426	ParameterType	const char *		4126342	0					
ANR	4126427	Identifier	cmd		4126342	1					
ANR	4126428	CFGEntryNode	ENTRY		4126342		True				
ANR	4126429	CFGExitNode	EXIT		4126342		True				
ANR	4126430	Symbol	core		4126342						
ANR	4126431	Symbol	static_str		4126342						
ANR	4126432	Symbol	r_core_cmd		4126342						
ANR	4126433	Symbol	NULL		4126342						
ANR	4126434	Symbol	r_cons_get_buffer		4126342						
ANR	4126435	Symbol	cmd		4126342						
ANR	4126436	Symbol	strdup		4126342						
ANR	4126437	Symbol	retstr		4126342						
ANR	4126438	Function	r_core_cmd_repeat	4635:0:115199:116185							
ANR	4126439	FunctionDef	"r_core_cmd_repeat (RCore * core , int next)"		4126438	0					
ANR	4126440	CompoundStatement		4635:52:115251:116185	4126438	0					
ANR	4126441	IfStatement	if ( ! core -> lastcmd || core -> cons -> context -> cmd_depth < 1 )		4126438	0					
ANR	4126442	Condition	! core -> lastcmd || core -> cons -> context -> cmd_depth < 1	4637:5:115288:115339	4126438	0	True				
ANR	4126443	OrExpression	! core -> lastcmd || core -> cons -> context -> cmd_depth < 1		4126438	0		||			
ANR	4126444	UnaryOperationExpression	! core -> lastcmd		4126438	0					
ANR	4126445	UnaryOperator	!		4126438	0					
ANR	4126446	PtrMemberAccess	core -> lastcmd		4126438	1					
ANR	4126447	Identifier	core		4126438	0					
ANR	4126448	Identifier	lastcmd		4126438	1					
ANR	4126449	RelationalExpression	core -> cons -> context -> cmd_depth < 1		4126438	1		<			
ANR	4126450	PtrMemberAccess	core -> cons -> context -> cmd_depth		4126438	0					
ANR	4126451	PtrMemberAccess	core -> cons -> context		4126438	0					
ANR	4126452	PtrMemberAccess	core -> cons		4126438	0					
ANR	4126453	Identifier	core		4126438	0					
ANR	4126454	Identifier	cons		4126438	1					
ANR	4126455	Identifier	context		4126438	1					
ANR	4126456	Identifier	cmd_depth		4126438	1					
ANR	4126457	PrimaryExpression	1		4126438	1					
ANR	4126458	CompoundStatement		3:59:90:90	4126438	1					
ANR	4126459	ReturnStatement	return ;	4638:2:115346:115352	4126438	0	True				
ANR	4126460	SwitchStatement	switch ( * core -> lastcmd )		4126438	1					
ANR	4126461	Condition	* core -> lastcmd	4640:9:115366:115379	4126438	0	True				
ANR	4126462	UnaryOperationExpression	* core -> lastcmd		4126438	0					
ANR	4126463	UnaryOperator	*		4126438	0					
ANR	4126464	PtrMemberAccess	core -> lastcmd		4126438	1					
ANR	4126465	Identifier	core		4126438	0					
ANR	4126466	Identifier	lastcmd		4126438	1					
ANR	4126467	CompoundStatement		6:25:130:130	4126438	1					
ANR	4126468	Label	case '.' :	4641:1:115385:115393	4126438	0	True				
ANR	4126469	IfStatement	if ( core -> lastcmd [ 1 ] == '(' )		4126438	1					
ANR	4126470	Condition	core -> lastcmd [ 1 ] == '('	4642:6:115401:115423	4126438	0	True				
ANR	4126471	EqualityExpression	core -> lastcmd [ 1 ] == '('		4126438	0		==			
ANR	4126472	ArrayIndexing	core -> lastcmd [ 1 ]		4126438	0					
ANR	4126473	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126474	Identifier	core		4126438	0					
ANR	4126475	Identifier	lastcmd		4126438	1					
ANR	4126476	PrimaryExpression	1		4126438	1					
ANR	4126477	PrimaryExpression	'('		4126438	1					
ANR	4126478	CompoundStatement		8:31:174:174	4126438	1					
ANR	4126479	ExpressionStatement	"r_core_cmd0 ( core , core -> lastcmd )"	4643:3:115445:115478	4126438	0	True				
ANR	4126480	CallExpression	"r_core_cmd0 ( core , core -> lastcmd )"		4126438	0					
ANR	4126481	Callee	r_core_cmd0		4126438	0					
ANR	4126482	Identifier	r_core_cmd0		4126438	0					
ANR	4126483	ArgumentList	core		4126438	1					
ANR	4126484	Argument	core		4126438	0					
ANR	4126485	Identifier	core		4126438	0					
ANR	4126486	Argument	core -> lastcmd		4126438	1					
ANR	4126487	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126488	Identifier	core		4126438	0					
ANR	4126489	Identifier	lastcmd		4126438	1					
ANR	4126490	BreakStatement	break ;	4645:2:115486:115491	4126438	2	True				
ANR	4126491	Label	case 'd' :	4646:1:115494:115502	4126438	3	True				
ANR	4126492	ExpressionStatement	"r_core_cmd0 ( core , core -> lastcmd )"	4647:2:115515:115548	4126438	4	True				
ANR	4126493	CallExpression	"r_core_cmd0 ( core , core -> lastcmd )"		4126438	0					
ANR	4126494	Callee	r_core_cmd0		4126438	0					
ANR	4126495	Identifier	r_core_cmd0		4126438	0					
ANR	4126496	ArgumentList	core		4126438	1					
ANR	4126497	Argument	core		4126438	0					
ANR	4126498	Identifier	core		4126438	0					
ANR	4126499	Argument	core -> lastcmd		4126438	1					
ANR	4126500	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126501	Identifier	core		4126438	0					
ANR	4126502	Identifier	lastcmd		4126438	1					
ANR	4126503	SwitchStatement	switch ( core -> lastcmd [ 1 ] )		4126438	5					
ANR	4126504	Condition	core -> lastcmd [ 1 ]	4648:10:115560:115575	4126438	0	True				
ANR	4126505	ArrayIndexing	core -> lastcmd [ 1 ]		4126438	0					
ANR	4126506	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126507	Identifier	core		4126438	0					
ANR	4126508	Identifier	lastcmd		4126438	1					
ANR	4126509	PrimaryExpression	1		4126438	1					
ANR	4126510	CompoundStatement		14:28:326:326	4126438	1					
ANR	4126511	Label	case 's' :	4649:2:115582:115590	4126438	0	True				
ANR	4126512	Label	case 'c' :	4650:2:115594:115602	4126438	1	True				
ANR	4126513	ExpressionStatement	"r_core_cmd0 ( core , ""sr PC;pd 1"" )"	4651:3:115607:115639	4126438	2	True				
ANR	4126514	CallExpression	"r_core_cmd0 ( core , ""sr PC;pd 1"" )"		4126438	0					
ANR	4126515	Callee	r_core_cmd0		4126438	0					
ANR	4126516	Identifier	r_core_cmd0		4126438	0					
ANR	4126517	ArgumentList	core		4126438	1					
ANR	4126518	Argument	core		4126438	0					
ANR	4126519	Identifier	core		4126438	0					
ANR	4126520	Argument	"""sr PC;pd 1"""		4126438	1					
ANR	4126521	PrimaryExpression	"""sr PC;pd 1"""		4126438	0					
ANR	4126522	BreakStatement	break ;	4653:2:115647:115652	4126438	6	True				
ANR	4126523	Label	case 'p' :	4654:1:115655:115663	4126438	7	True				
ANR	4126524	Label	case 'x' :	4655:1:115675:115683	4126438	8	True				
ANR	4126525	Label	case '$' :	4656:1:115686:115694	4126438	9	True				
ANR	4126526	IfStatement	"if ( ! strncmp ( core -> lastcmd , ""pd"" , 2 ) )"		4126438	10					
ANR	4126527	Condition	"! strncmp ( core -> lastcmd , ""pd"" , 2 )"	4657:6:115702:115734	4126438	0	True				
ANR	4126528	UnaryOperationExpression	"! strncmp ( core -> lastcmd , ""pd"" , 2 )"		4126438	0					
ANR	4126529	UnaryOperator	!		4126438	0					
ANR	4126530	CallExpression	"strncmp ( core -> lastcmd , ""pd"" , 2 )"		4126438	1					
ANR	4126531	Callee	strncmp		4126438	0					
ANR	4126532	Identifier	strncmp		4126438	0					
ANR	4126533	ArgumentList	core -> lastcmd		4126438	1					
ANR	4126534	Argument	core -> lastcmd		4126438	0					
ANR	4126535	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126536	Identifier	core		4126438	0					
ANR	4126537	Identifier	lastcmd		4126438	1					
ANR	4126538	Argument	"""pd"""		4126438	1					
ANR	4126539	PrimaryExpression	"""pd"""		4126438	0					
ANR	4126540	Argument	2		4126438	2					
ANR	4126541	PrimaryExpression	2		4126438	0					
ANR	4126542	CompoundStatement		23:41:485:485	4126438	1					
ANR	4126543	IfStatement	if ( core -> lastcmd [ 2 ] == ' ' )		4126438	0					
ANR	4126544	Condition	core -> lastcmd [ 2 ] == ' '	4658:7:115746:115767	4126438	0	True				
ANR	4126545	EqualityExpression	core -> lastcmd [ 2 ] == ' '		4126438	0		==			
ANR	4126546	ArrayIndexing	core -> lastcmd [ 2 ]		4126438	0					
ANR	4126547	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126548	Identifier	core		4126438	0					
ANR	4126549	Identifier	lastcmd		4126438	1					
ANR	4126550	PrimaryExpression	2		4126438	1					
ANR	4126551	PrimaryExpression	' '		4126438	1					
ANR	4126552	CompoundStatement		24:31:518:518	4126438	1					
ANR	4126553	ExpressionStatement	"r_core_cmdf ( core , ""so %s"" , core -> lastcmd + 3 )"	4659:4:115776:115822	4126438	0	True				
ANR	4126554	CallExpression	"r_core_cmdf ( core , ""so %s"" , core -> lastcmd + 3 )"		4126438	0					
ANR	4126555	Callee	r_core_cmdf		4126438	0					
ANR	4126556	Identifier	r_core_cmdf		4126438	0					
ANR	4126557	ArgumentList	core		4126438	1					
ANR	4126558	Argument	core		4126438	0					
ANR	4126559	Identifier	core		4126438	0					
ANR	4126560	Argument	"""so %s"""		4126438	1					
ANR	4126561	PrimaryExpression	"""so %s"""		4126438	0					
ANR	4126562	Argument	core -> lastcmd + 3		4126438	2					
ANR	4126563	AdditiveExpression	core -> lastcmd + 3		4126438	0		+			
ANR	4126564	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126565	Identifier	core		4126438	0					
ANR	4126566	Identifier	lastcmd		4126438	1					
ANR	4126567	PrimaryExpression	3		4126438	1					
ANR	4126568	ElseStatement	else		4126438	0					
ANR	4126569	CompoundStatement		26:10:582:582	4126438	0					
ANR	4126570	ExpressionStatement	"r_core_cmd0 ( core , ""so `pi~?`"" )"	4661:4:115840:115871	4126438	0	True				
ANR	4126571	CallExpression	"r_core_cmd0 ( core , ""so `pi~?`"" )"		4126438	0					
ANR	4126572	Callee	r_core_cmd0		4126438	0					
ANR	4126573	Identifier	r_core_cmd0		4126438	0					
ANR	4126574	ArgumentList	core		4126438	1					
ANR	4126575	Argument	core		4126438	0					
ANR	4126576	Identifier	core		4126438	0					
ANR	4126577	Argument	"""so `pi~?`"""		4126438	1					
ANR	4126578	PrimaryExpression	"""so `pi~?`"""		4126438	0					
ANR	4126579	ElseStatement	else		4126438	0					
ANR	4126580	CompoundStatement		29:9:635:635	4126438	0					
ANR	4126581	IfStatement	if ( next )		4126438	0					
ANR	4126582	Condition	next	4664:7:115896:115899	4126438	0	True				
ANR	4126583	Identifier	next		4126438	0					
ANR	4126584	CompoundStatement		30:13:650:650	4126438	1					
ANR	4126585	ExpressionStatement	"r_core_seek ( core , core -> offset + core -> blocksize , 1 )"	4665:4:115908:115961	4126438	0	True				
ANR	4126586	CallExpression	"r_core_seek ( core , core -> offset + core -> blocksize , 1 )"		4126438	0					
ANR	4126587	Callee	r_core_seek		4126438	0					
ANR	4126588	Identifier	r_core_seek		4126438	0					
ANR	4126589	ArgumentList	core		4126438	1					
ANR	4126590	Argument	core		4126438	0					
ANR	4126591	Identifier	core		4126438	0					
ANR	4126592	Argument	core -> offset + core -> blocksize		4126438	1					
ANR	4126593	AdditiveExpression	core -> offset + core -> blocksize		4126438	0		+			
ANR	4126594	PtrMemberAccess	core -> offset		4126438	0					
ANR	4126595	Identifier	core		4126438	0					
ANR	4126596	Identifier	offset		4126438	1					
ANR	4126597	PtrMemberAccess	core -> blocksize		4126438	1					
ANR	4126598	Identifier	core		4126438	0					
ANR	4126599	Identifier	blocksize		4126438	1					
ANR	4126600	Argument	1		4126438	2					
ANR	4126601	PrimaryExpression	1		4126438	0					
ANR	4126602	ElseStatement	else		4126438	0					
ANR	4126603	CompoundStatement		32:10:721:721	4126438	0					
ANR	4126604	IfStatement	if ( core -> blocksize > core -> offset )		4126438	0					
ANR	4126605	Condition	core -> blocksize > core -> offset	4667:8:115983:116012	4126438	0	True				
ANR	4126606	RelationalExpression	core -> blocksize > core -> offset		4126438	0		>			
ANR	4126607	PtrMemberAccess	core -> blocksize		4126438	0					
ANR	4126608	Identifier	core		4126438	0					
ANR	4126609	Identifier	blocksize		4126438	1					
ANR	4126610	PtrMemberAccess	core -> offset		4126438	1					
ANR	4126611	Identifier	core		4126438	0					
ANR	4126612	Identifier	offset		4126438	1					
ANR	4126613	CompoundStatement		33:40:763:763	4126438	1					
ANR	4126614	ExpressionStatement	"r_core_seek ( core , 0 , 1 )"	4668:5:116022:116046	4126438	0	True				
ANR	4126615	CallExpression	"r_core_seek ( core , 0 , 1 )"		4126438	0					
ANR	4126616	Callee	r_core_seek		4126438	0					
ANR	4126617	Identifier	r_core_seek		4126438	0					
ANR	4126618	ArgumentList	core		4126438	1					
ANR	4126619	Argument	core		4126438	0					
ANR	4126620	Identifier	core		4126438	0					
ANR	4126621	Argument	0		4126438	1					
ANR	4126622	PrimaryExpression	0		4126438	0					
ANR	4126623	Argument	1		4126438	2					
ANR	4126624	PrimaryExpression	1		4126438	0					
ANR	4126625	ElseStatement	else		4126438	0					
ANR	4126626	CompoundStatement		35:11:807:807	4126438	0					
ANR	4126627	ExpressionStatement	"r_core_seek ( core , core -> offset - core -> blocksize , 1 )"	4670:5:116066:116119	4126438	0	True				
ANR	4126628	CallExpression	"r_core_seek ( core , core -> offset - core -> blocksize , 1 )"		4126438	0					
ANR	4126629	Callee	r_core_seek		4126438	0					
ANR	4126630	Identifier	r_core_seek		4126438	0					
ANR	4126631	ArgumentList	core		4126438	1					
ANR	4126632	Argument	core		4126438	0					
ANR	4126633	Identifier	core		4126438	0					
ANR	4126634	Argument	core -> offset - core -> blocksize		4126438	1					
ANR	4126635	AdditiveExpression	core -> offset - core -> blocksize		4126438	0		-			
ANR	4126636	PtrMemberAccess	core -> offset		4126438	0					
ANR	4126637	Identifier	core		4126438	0					
ANR	4126638	Identifier	offset		4126438	1					
ANR	4126639	PtrMemberAccess	core -> blocksize		4126438	1					
ANR	4126640	Identifier	core		4126438	0					
ANR	4126641	Identifier	blocksize		4126438	1					
ANR	4126642	Argument	1		4126438	2					
ANR	4126643	PrimaryExpression	1		4126438	0					
ANR	4126644	ExpressionStatement	"r_core_cmd0 ( core , core -> lastcmd )"	4674:2:116138:116171	4126438	11	True				
ANR	4126645	CallExpression	"r_core_cmd0 ( core , core -> lastcmd )"		4126438	0					
ANR	4126646	Callee	r_core_cmd0		4126438	0					
ANR	4126647	Identifier	r_core_cmd0		4126438	0					
ANR	4126648	ArgumentList	core		4126438	1					
ANR	4126649	Argument	core		4126438	0					
ANR	4126650	Identifier	core		4126438	0					
ANR	4126651	Argument	core -> lastcmd		4126438	1					
ANR	4126652	PtrMemberAccess	core -> lastcmd		4126438	0					
ANR	4126653	Identifier	core		4126438	0					
ANR	4126654	Identifier	lastcmd		4126438	1					
ANR	4126655	BreakStatement	break ;	4675:2:116175:116180	4126438	12	True				
ANR	4126656	ReturnType	R_API void		4126438	1					
ANR	4126657	Identifier	r_core_cmd_repeat		4126438	2					
ANR	4126658	ParameterList	"RCore * core , int next"		4126438	3					
ANR	4126659	Parameter	RCore * core	4635:29:115228:115238	4126438	0	True				
ANR	4126660	ParameterType	RCore *		4126438	0					
ANR	4126661	Identifier	core		4126438	1					
ANR	4126662	Parameter	int next	4635:42:115241:115248	4126438	1	True				
ANR	4126663	ParameterType	int		4126438	0					
ANR	4126664	Identifier	next		4126438	1					
ANR	4126665	CFGEntryNode	ENTRY		4126438		True				
ANR	4126666	CFGExitNode	EXIT		4126438		True				
ANR	4126667	Symbol	next		4126438						
ANR	4126668	Symbol	core -> blocksize		4126438						
ANR	4126669	Symbol	* core -> cons		4126438						
ANR	4126670	Symbol	* * core -> cons		4126438						
ANR	4126671	Symbol	* core		4126438						
ANR	4126672	Symbol	core -> offset		4126438						
ANR	4126673	Symbol	core -> lastcmd		4126438						
ANR	4126674	Symbol	core		4126438						
ANR	4126675	Symbol	* * * core		4126438						
ANR	4126676	Symbol	strncmp		4126438						
ANR	4126677	Symbol	core -> cons		4126438						
ANR	4126678	Symbol	* core -> cons -> context		4126438						
ANR	4126679	Symbol	* core -> lastcmd		4126438						
ANR	4126680	Symbol	* * core		4126438						
ANR	4126681	Symbol	core -> cons -> context		4126438						
ANR	4126682	Symbol	core -> cons -> context -> cmd_depth		4126438						
ANR	4126683	Function	r_core_cmd_task_sync	4680:0:116233:116548							
ANR	4126684	FunctionDef	"r_core_cmd_task_sync (RCore * core , const char * cmd , bool log)"		4126683	0					
ANR	4126685	CompoundStatement		4680:71:116304:116548	4126683	0					
ANR	4126686	IdentifierDeclStatement	RCoreTask * task = core -> main_task ;	4681:1:116307:116340	4126683	0	True				
ANR	4126687	IdentifierDecl	* task = core -> main_task		4126683	0					
ANR	4126688	IdentifierDeclType	RCoreTask *		4126683	0					
ANR	4126689	Identifier	task		4126683	1					
ANR	4126690	AssignmentExpression	* task = core -> main_task		4126683	2		=			
ANR	4126691	Identifier	task		4126683	0					
ANR	4126692	PtrMemberAccess	core -> main_task		4126683	1					
ANR	4126693	Identifier	core		4126683	0					
ANR	4126694	Identifier	main_task		4126683	1					
ANR	4126695	IdentifierDeclStatement	char * s = strdup ( cmd ) ;	4682:1:116343:116365	4126683	1	True				
ANR	4126696	IdentifierDecl	* s = strdup ( cmd )		4126683	0					
ANR	4126697	IdentifierDeclType	char *		4126683	0					
ANR	4126698	Identifier	s		4126683	1					
ANR	4126699	AssignmentExpression	* s = strdup ( cmd )		4126683	2		=			
ANR	4126700	Identifier	s		4126683	0					
ANR	4126701	CallExpression	strdup ( cmd )		4126683	1					
ANR	4126702	Callee	strdup		4126683	0					
ANR	4126703	Identifier	strdup		4126683	0					
ANR	4126704	ArgumentList	cmd		4126683	1					
ANR	4126705	Argument	cmd		4126683	0					
ANR	4126706	Identifier	cmd		4126683	0					
ANR	4126707	IfStatement	if ( ! s )		4126683	2					
ANR	4126708	Condition	! s	4683:5:116372:116373	4126683	0	True				
ANR	4126709	UnaryOperationExpression	! s		4126683	0					
ANR	4126710	UnaryOperator	!		4126683	0					
ANR	4126711	Identifier	s		4126683	1					
ANR	4126712	CompoundStatement		4:9:71:71	4126683	1					
ANR	4126713	ReturnStatement	return 0 ;	4684:2:116380:116388	4126683	0	True				
ANR	4126714	PrimaryExpression	0		4126683	0					
ANR	4126715	ExpressionStatement	task -> cmd = s	4686:1:116394:116407	4126683	3	True				
ANR	4126716	AssignmentExpression	task -> cmd = s		4126683	0		=			
ANR	4126717	PtrMemberAccess	task -> cmd		4126683	0					
ANR	4126718	Identifier	task		4126683	0					
ANR	4126719	Identifier	cmd		4126683	1					
ANR	4126720	Identifier	s		4126683	1					
ANR	4126721	ExpressionStatement	task -> cmd_log = log	4687:1:116410:116429	4126683	4	True				
ANR	4126722	AssignmentExpression	task -> cmd_log = log		4126683	0		=			
ANR	4126723	PtrMemberAccess	task -> cmd_log		4126683	0					
ANR	4126724	Identifier	task		4126683	0					
ANR	4126725	Identifier	cmd_log		4126683	1					
ANR	4126726	Identifier	log		4126683	1					
ANR	4126727	ExpressionStatement	task -> state = R_CORE_TASK_STATE_BEFORE_START	4688:1:116432:116476	4126683	5	True				
ANR	4126728	AssignmentExpression	task -> state = R_CORE_TASK_STATE_BEFORE_START		4126683	0		=			
ANR	4126729	PtrMemberAccess	task -> state		4126683	0					
ANR	4126730	Identifier	task		4126683	0					
ANR	4126731	Identifier	state		4126683	1					
ANR	4126732	Identifier	R_CORE_TASK_STATE_BEFORE_START		4126683	1					
ANR	4126733	IdentifierDeclStatement	"int res = r_core_task_run_sync ( core , task ) ;"	4689:1:116479:116522	4126683	6	True				
ANR	4126734	IdentifierDecl	"res = r_core_task_run_sync ( core , task )"		4126683	0					
ANR	4126735	IdentifierDeclType	int		4126683	0					
ANR	4126736	Identifier	res		4126683	1					
ANR	4126737	AssignmentExpression	"res = r_core_task_run_sync ( core , task )"		4126683	2		=			
ANR	4126738	Identifier	res		4126683	0					
ANR	4126739	CallExpression	"r_core_task_run_sync ( core , task )"		4126683	1					
ANR	4126740	Callee	r_core_task_run_sync		4126683	0					
ANR	4126741	Identifier	r_core_task_run_sync		4126683	0					
ANR	4126742	ArgumentList	core		4126683	1					
ANR	4126743	Argument	core		4126683	0					
ANR	4126744	Identifier	core		4126683	0					
ANR	4126745	Argument	task		4126683	1					
ANR	4126746	Identifier	task		4126683	0					
ANR	4126747	ExpressionStatement	free ( s )	4690:1:116525:116533	4126683	7	True				
ANR	4126748	CallExpression	free ( s )		4126683	0					
ANR	4126749	Callee	free		4126683	0					
ANR	4126750	Identifier	free		4126683	0					
ANR	4126751	ArgumentList	s		4126683	1					
ANR	4126752	Argument	s		4126683	0					
ANR	4126753	Identifier	s		4126683	0					
ANR	4126754	ReturnStatement	return res ;	4691:1:116536:116546	4126683	8	True				
ANR	4126755	Identifier	res		4126683	0					
ANR	4126756	ReturnType	R_API int		4126683	1					
ANR	4126757	Identifier	r_core_cmd_task_sync		4126683	2					
ANR	4126758	ParameterList	"RCore * core , const char * cmd , bool log"		4126683	3					
ANR	4126759	Parameter	RCore * core	4680:31:116264:116274	4126683	0	True				
ANR	4126760	ParameterType	RCore *		4126683	0					
ANR	4126761	Identifier	core		4126683	1					
ANR	4126762	Parameter	const char * cmd	4680:44:116277:116291	4126683	1	True				
ANR	4126763	ParameterType	const char *		4126683	0					
ANR	4126764	Identifier	cmd		4126683	1					
ANR	4126765	Parameter	bool log	4680:61:116294:116301	4126683	2	True				
ANR	4126766	ParameterType	bool		4126683	0					
ANR	4126767	Identifier	log		4126683	1					
ANR	4126768	CFGEntryNode	ENTRY		4126683		True				
ANR	4126769	CFGExitNode	EXIT		4126683		True				
ANR	4126770	Symbol	res		4126683						
ANR	4126771	Symbol	log		4126683						
ANR	4126772	Symbol	core -> main_task		4126683						
ANR	4126773	Symbol	* core		4126683						
ANR	4126774	Symbol	task -> cmd_log		4126683						
ANR	4126775	Symbol	R_CORE_TASK_STATE_BEFORE_START		4126683						
ANR	4126776	Symbol	r_core_task_run_sync		4126683						
ANR	4126777	Symbol	core		4126683						
ANR	4126778	Symbol	task		4126683						
ANR	4126779	Symbol	s		4126683						
ANR	4126780	Symbol	task -> state		4126683						
ANR	4126781	Symbol	cmd		4126683						
ANR	4126782	Symbol	strdup		4126683						
ANR	4126783	Symbol	task -> cmd		4126683						
ANR	4126784	Symbol	* task		4126683						
ANR	4126785	Function	cmd_ox	4694:0:116551:116654							
ANR	4126786	FunctionDef	"cmd_ox (void * data , const char * input)"		4126785	0					
ANR	4126787	CompoundStatement		4694:49:116600:116654	4126785	0					
ANR	4126788	ReturnStatement	"return r_core_cmdf ( ( RCore * ) data , ""s 0%s"" , input ) ;"	4695:1:116603:116652	4126785	0	True				
ANR	4126789	CallExpression	"r_core_cmdf ( ( RCore * ) data , ""s 0%s"" , input )"		4126785	0					
ANR	4126790	Callee	r_core_cmdf		4126785	0					
ANR	4126791	Identifier	r_core_cmdf		4126785	0					
ANR	4126792	ArgumentList	( RCore * ) data		4126785	1					
ANR	4126793	Argument	( RCore * ) data		4126785	0					
ANR	4126794	CastExpression	( RCore * ) data		4126785	0					
ANR	4126795	CastTarget	RCore *		4126785	0					
ANR	4126796	Identifier	data		4126785	1					
ANR	4126797	Argument	"""s 0%s"""		4126785	1					
ANR	4126798	PrimaryExpression	"""s 0%s"""		4126785	0					
ANR	4126799	Argument	input		4126785	2					
ANR	4126800	Identifier	input		4126785	0					
ANR	4126801	ReturnType	static int		4126785	1					
ANR	4126802	Identifier	cmd_ox		4126785	2					
ANR	4126803	ParameterList	"void * data , const char * input"		4126785	3					
ANR	4126804	Parameter	void * data	4694:18:116569:116578	4126785	0	True				
ANR	4126805	ParameterType	void *		4126785	0					
ANR	4126806	Identifier	data		4126785	1					
ANR	4126807	Parameter	const char * input	4694:30:116581:116597	4126785	1	True				
ANR	4126808	ParameterType	const char *		4126785	0					
ANR	4126809	Identifier	input		4126785	1					
ANR	4126810	CFGEntryNode	ENTRY		4126785		True				
ANR	4126811	CFGExitNode	EXIT		4126785		True				
ANR	4126812	Symbol	input		4126785						
ANR	4126813	Symbol	data		4126785						
ANR	4126814	Symbol	r_core_cmdf		4126785						
ANR	4126815	Function	compare_cmd_descriptor_name	4698:0:116657:116801							
ANR	4126816	FunctionDef	"compare_cmd_descriptor_name (const void * a , const void * b)"		4126815	0					
ANR	4126817	CompoundStatement		4698:69:116726:116801	4126815	0					
ANR	4126818	ReturnStatement	"return strcmp ( ( ( RCmdDescriptor * ) a ) -> cmd , ( ( RCmdDescriptor * ) b ) -> cmd ) ;"	4699:1:116729:116799	4126815	0	True				
ANR	4126819	CallExpression	"strcmp ( ( ( RCmdDescriptor * ) a ) -> cmd , ( ( RCmdDescriptor * ) b ) -> cmd )"		4126815	0					
ANR	4126820	Callee	strcmp		4126815	0					
ANR	4126821	Identifier	strcmp		4126815	0					
ANR	4126822	ArgumentList	( ( RCmdDescriptor * ) a ) -> cmd		4126815	1					
ANR	4126823	Argument	( ( RCmdDescriptor * ) a ) -> cmd		4126815	0					
ANR	4126824	PtrMemberAccess	( ( RCmdDescriptor * ) a ) -> cmd		4126815	0					
ANR	4126825	CastExpression	( RCmdDescriptor * ) a		4126815	0					
ANR	4126826	CastTarget	RCmdDescriptor *		4126815	0					
ANR	4126827	Identifier	a		4126815	1					
ANR	4126828	Identifier	cmd		4126815	1					
ANR	4126829	Argument	( ( RCmdDescriptor * ) b ) -> cmd		4126815	1					
ANR	4126830	PtrMemberAccess	( ( RCmdDescriptor * ) b ) -> cmd		4126815	0					
ANR	4126831	CastExpression	( RCmdDescriptor * ) b		4126815	0					
ANR	4126832	CastTarget	RCmdDescriptor *		4126815	0					
ANR	4126833	Identifier	b		4126815	1					
ANR	4126834	Identifier	cmd		4126815	1					
ANR	4126835	ReturnType	static int		4126815	1					
ANR	4126836	Identifier	compare_cmd_descriptor_name		4126815	2					
ANR	4126837	ParameterList	"const void * a , const void * b"		4126815	3					
ANR	4126838	Parameter	const void * a	4698:39:116696:116708	4126815	0	True				
ANR	4126839	ParameterType	const void *		4126815	0					
ANR	4126840	Identifier	a		4126815	1					
ANR	4126841	Parameter	const void * b	4698:54:116711:116723	4126815	1	True				
ANR	4126842	ParameterType	const void *		4126815	0					
ANR	4126843	Identifier	b		4126815	1					
ANR	4126844	CFGEntryNode	ENTRY		4126815		True				
ANR	4126845	CFGExitNode	EXIT		4126815		True				
ANR	4126846	Symbol	strcmp		4126815						
ANR	4126847	Symbol	a		4126815						
ANR	4126848	Symbol	b		4126815						
ANR	4126849	Symbol	( ( RCmdDescriptor * ) a ) -> cmd		4126815						
ANR	4126850	Symbol	* a		4126815						
ANR	4126851	Symbol	* b		4126815						
ANR	4126852	Symbol	( ( RCmdDescriptor * ) b ) -> cmd		4126815						
ANR	4126853	Function	cmd_descriptor_init	4702:0:116804:117492							
ANR	4126854	FunctionDef	cmd_descriptor_init (RCore * core)		4126853	0					
ANR	4126855	CompoundStatement		4702:45:116849:117492	4126853	0					
ANR	4126856	IdentifierDeclStatement	const ut8 * p ;	4703:1:116852:116864	4126853	0	True				
ANR	4126857	IdentifierDecl	* p		4126853	0					
ANR	4126858	IdentifierDeclType	const ut8 *		4126853	0					
ANR	4126859	Identifier	p		4126853	1					
ANR	4126860	IdentifierDeclStatement	RListIter * iter ;	4704:1:116867:116882	4126853	1	True				
ANR	4126861	IdentifierDecl	* iter		4126853	0					
ANR	4126862	IdentifierDeclType	RListIter *		4126853	0					
ANR	4126863	Identifier	iter		4126853	1					
ANR	4126864	IdentifierDeclStatement	"RCmdDescriptor * x , * y ;"	4705:1:116885:116906	4126853	2	True				
ANR	4126865	IdentifierDecl	* x		4126853	0					
ANR	4126866	IdentifierDeclType	RCmdDescriptor *		4126853	0					
ANR	4126867	Identifier	x		4126853	1					
ANR	4126868	IdentifierDecl	* y		4126853	1					
ANR	4126869	IdentifierDeclType	RCmdDescriptor *		4126853	0					
ANR	4126870	Identifier	y		4126853	1					
ANR	4126871	IdentifierDeclStatement	int n = core -> cmd_descriptors -> length ;	4706:1:116909:116946	4126853	3	True				
ANR	4126872	IdentifierDecl	n = core -> cmd_descriptors -> length		4126853	0					
ANR	4126873	IdentifierDeclType	int		4126853	0					
ANR	4126874	Identifier	n		4126853	1					
ANR	4126875	AssignmentExpression	n = core -> cmd_descriptors -> length		4126853	2		=			
ANR	4126876	Identifier	n		4126853	0					
ANR	4126877	PtrMemberAccess	core -> cmd_descriptors -> length		4126853	1					
ANR	4126878	PtrMemberAccess	core -> cmd_descriptors		4126853	0					
ANR	4126879	Identifier	core		4126853	0					
ANR	4126880	Identifier	cmd_descriptors		4126853	1					
ANR	4126881	Identifier	length		4126853	1					
ANR	4126882	ExpressionStatement	"r_list_sort ( core -> cmd_descriptors , compare_cmd_descriptor_name )"	4707:1:116949:117013	4126853	4	True				
ANR	4126883	CallExpression	"r_list_sort ( core -> cmd_descriptors , compare_cmd_descriptor_name )"		4126853	0					
ANR	4126884	Callee	r_list_sort		4126853	0					
ANR	4126885	Identifier	r_list_sort		4126853	0					
ANR	4126886	ArgumentList	core -> cmd_descriptors		4126853	1					
ANR	4126887	Argument	core -> cmd_descriptors		4126853	0					
ANR	4126888	PtrMemberAccess	core -> cmd_descriptors		4126853	0					
ANR	4126889	Identifier	core		4126853	0					
ANR	4126890	Identifier	cmd_descriptors		4126853	1					
ANR	4126891	Argument	compare_cmd_descriptor_name		4126853	1					
ANR	4126892	Identifier	compare_cmd_descriptor_name		4126853	0					
ANR	4126893	Statement	r_list_foreach	4708:1:117016:117029	4126853	5	True				
ANR	4126894	Statement	(	4708:16:117031:117031	4126853	6	True				
ANR	4126895	Statement	core	4708:17:117032:117035	4126853	7	True				
ANR	4126896	Statement	->	4708:21:117036:117037	4126853	8	True				
ANR	4126897	Statement	cmd_descriptors	4708:23:117038:117052	4126853	9	True				
ANR	4126898	Statement	","	4708:38:117053:117053	4126853	10	True				
ANR	4126899	Statement	iter	4708:40:117055:117058	4126853	11	True				
ANR	4126900	Statement	","	4708:44:117059:117059	4126853	12	True				
ANR	4126901	Statement	y	4708:46:117061:117061	4126853	13	True				
ANR	4126902	Statement	)	4708:47:117062:117062	4126853	14	True				
ANR	4126903	CompoundStatement		7:49:214:214	4126853	15					
ANR	4126904	IfStatement	if ( -- n < 0 )		4126853	0					
ANR	4126905	Condition	-- n < 0	4709:6:117072:117078	4126853	0	True				
ANR	4126906	RelationalExpression	-- n < 0		4126853	0		<			
ANR	4126907	UnaryExpression	-- n		4126853	0					
ANR	4126908	IncDec	--		4126853	0					
ANR	4126909	Identifier	n		4126853	1					
ANR	4126910	PrimaryExpression	0		4126853	1					
ANR	4126911	CompoundStatement		8:15:231:231	4126853	1					
ANR	4126912	BreakStatement	break ;	4710:3:117086:117091	4126853	0	True				
ANR	4126913	ExpressionStatement	x = & core -> root_cmd_descriptor	4712:2:117099:117129	4126853	1	True				
ANR	4126914	AssignmentExpression	x = & core -> root_cmd_descriptor		4126853	0		=			
ANR	4126915	Identifier	x		4126853	0					
ANR	4126916	UnaryOperationExpression	& core -> root_cmd_descriptor		4126853	1					
ANR	4126917	UnaryOperator	&		4126853	0					
ANR	4126918	PtrMemberAccess	core -> root_cmd_descriptor		4126853	1					
ANR	4126919	Identifier	core		4126853	0					
ANR	4126920	Identifier	root_cmd_descriptor		4126853	1					
ANR	4126921	ForStatement	for ( p = ( const ut8 * ) y -> cmd ; * p ; p ++ )		4126853	2					
ANR	4126922	ForInit	p = ( const ut8 * ) y -> cmd ;	4713:7:117138:117161	4126853	0	True				
ANR	4126923	AssignmentExpression	p = ( const ut8 * ) y -> cmd		4126853	0		=			
ANR	4126924	Identifier	p		4126853	0					
ANR	4126925	CastExpression	( const ut8 * ) y -> cmd		4126853	1					
ANR	4126926	CastTarget	const ut8 *		4126853	0					
ANR	4126927	PtrMemberAccess	y -> cmd		4126853	1					
ANR	4126928	Identifier	y		4126853	0					
ANR	4126929	Identifier	cmd		4126853	1					
ANR	4126930	Condition	* p	4713:32:117163:117164	4126853	1	True				
ANR	4126931	UnaryOperationExpression	* p		4126853	0					
ANR	4126932	UnaryOperator	*		4126853	0					
ANR	4126933	Identifier	p		4126853	1					
ANR	4126934	PostIncDecOperationExpression	p ++	4713:36:117167:117169	4126853	2	True				
ANR	4126935	Identifier	p		4126853	0					
ANR	4126936	IncDec	++		4126853	1					
ANR	4126937	CompoundStatement		12:41:322:322	4126853	3					
ANR	4126938	IfStatement	if ( ! x -> sub [ * p ] )		4126853	0					
ANR	4126939	Condition	! x -> sub [ * p ]	4714:7:117181:117191	4126853	0	True				
ANR	4126940	UnaryOperationExpression	! x -> sub [ * p ]		4126853	0					
ANR	4126941	UnaryOperator	!		4126853	0					
ANR	4126942	ArrayIndexing	x -> sub [ * p ]		4126853	1					
ANR	4126943	PtrMemberAccess	x -> sub		4126853	0					
ANR	4126944	Identifier	x		4126853	0					
ANR	4126945	Identifier	sub		4126853	1					
ANR	4126946	UnaryOperationExpression	* p		4126853	1					
ANR	4126947	UnaryOperator	*		4126853	0					
ANR	4126948	Identifier	p		4126853	1					
ANR	4126949	CompoundStatement		13:20:344:344	4126853	1					
ANR	4126950	IfStatement	if ( p [ 1 ] )		4126853	0					
ANR	4126951	Condition	p [ 1 ]	4715:8:117204:117207	4126853	0	True				
ANR	4126952	ArrayIndexing	p [ 1 ]		4126853	0					
ANR	4126953	Identifier	p		4126853	0					
ANR	4126954	PrimaryExpression	1		4126853	1					
ANR	4126955	CompoundStatement		15:5:367:410	4126853	1					
ANR	4126956	IdentifierDeclStatement	RCmdDescriptor * d = R_NEW0 ( RCmdDescriptor ) ;	4716:5:117217:117260	4126853	0	True				
ANR	4126957	IdentifierDecl	* d = R_NEW0 ( RCmdDescriptor )		4126853	0					
ANR	4126958	IdentifierDeclType	RCmdDescriptor *		4126853	0					
ANR	4126959	Identifier	d		4126853	1					
ANR	4126960	AssignmentExpression	* d = R_NEW0 ( RCmdDescriptor )		4126853	2		=			
ANR	4126961	Identifier	d		4126853	0					
ANR	4126962	CallExpression	R_NEW0 ( RCmdDescriptor )		4126853	1					
ANR	4126963	Callee	R_NEW0		4126853	0					
ANR	4126964	Identifier	R_NEW0		4126853	0					
ANR	4126965	ArgumentList	RCmdDescriptor		4126853	1					
ANR	4126966	Argument	RCmdDescriptor		4126853	0					
ANR	4126967	Identifier	RCmdDescriptor		4126853	0					
ANR	4126968	ExpressionStatement	"r_list_append ( core -> cmd_descriptors , d )"	4717:5:117267:117307	4126853	1	True				
ANR	4126969	CallExpression	"r_list_append ( core -> cmd_descriptors , d )"		4126853	0					
ANR	4126970	Callee	r_list_append		4126853	0					
ANR	4126971	Identifier	r_list_append		4126853	0					
ANR	4126972	ArgumentList	core -> cmd_descriptors		4126853	1					
ANR	4126973	Argument	core -> cmd_descriptors		4126853	0					
ANR	4126974	PtrMemberAccess	core -> cmd_descriptors		4126853	0					
ANR	4126975	Identifier	core		4126853	0					
ANR	4126976	Identifier	cmd_descriptors		4126853	1					
ANR	4126977	Argument	d		4126853	1					
ANR	4126978	Identifier	d		4126853	0					
ANR	4126979	ExpressionStatement	x -> sub [ * p ] = d	4718:5:117314:117328	4126853	2	True				
ANR	4126980	AssignmentExpression	x -> sub [ * p ] = d		4126853	0		=			
ANR	4126981	ArrayIndexing	x -> sub [ * p ]		4126853	0					
ANR	4126982	PtrMemberAccess	x -> sub		4126853	0					
ANR	4126983	Identifier	x		4126853	0					
ANR	4126984	Identifier	sub		4126853	1					
ANR	4126985	UnaryOperationExpression	* p		4126853	1					
ANR	4126986	UnaryOperator	*		4126853	0					
ANR	4126987	Identifier	p		4126853	1					
ANR	4126988	Identifier	d		4126853	1					
ANR	4126989	ElseStatement	else		4126853	0					
ANR	4126990	CompoundStatement		18:11:491:491	4126853	0					
ANR	4126991	ExpressionStatement	x -> sub [ * p ] = y	4720:5:117348:117362	4126853	0	True				
ANR	4126992	AssignmentExpression	x -> sub [ * p ] = y		4126853	0		=			
ANR	4126993	ArrayIndexing	x -> sub [ * p ]		4126853	0					
ANR	4126994	PtrMemberAccess	x -> sub		4126853	0					
ANR	4126995	Identifier	x		4126853	0					
ANR	4126996	Identifier	sub		4126853	1					
ANR	4126997	UnaryOperationExpression	* p		4126853	1					
ANR	4126998	UnaryOperator	*		4126853	0					
ANR	4126999	Identifier	p		4126853	1					
ANR	4127000	Identifier	y		4126853	1					
ANR	4127001	ElseStatement	else		4126853	0					
ANR	4127002	IfStatement	if ( ! p [ 1 ] )		4126853	0					
ANR	4127003	Condition	! p [ 1 ]	4722:14:117384:117388	4126853	0	True				
ANR	4127004	UnaryOperationExpression	! p [ 1 ]		4126853	0					
ANR	4127005	UnaryOperator	!		4126853	0					
ANR	4127006	ArrayIndexing	p [ 1 ]		4126853	1					
ANR	4127007	Identifier	p		4126853	0					
ANR	4127008	PrimaryExpression	1		4126853	1					
ANR	4127009	CompoundStatement		21:21:541:541	4126853	1					
ANR	4127010	ExpressionStatement	"eprintf ( ""Command '%s' is duplicated, please check\\n"" , y -> cmd )"	4723:4:117397:117459	4126853	0	True				
ANR	4127011	CallExpression	"eprintf ( ""Command '%s' is duplicated, please check\\n"" , y -> cmd )"		4126853	0					
ANR	4127012	Callee	eprintf		4126853	0					
ANR	4127013	Identifier	eprintf		4126853	0					
ANR	4127014	ArgumentList	"""Command '%s' is duplicated, please check\\n"""		4126853	1					
ANR	4127015	Argument	"""Command '%s' is duplicated, please check\\n"""		4126853	0					
ANR	4127016	PrimaryExpression	"""Command '%s' is duplicated, please check\\n"""		4126853	0					
ANR	4127017	Argument	y -> cmd		4126853	1					
ANR	4127018	PtrMemberAccess	y -> cmd		4126853	0					
ANR	4127019	Identifier	y		4126853	0					
ANR	4127020	Identifier	cmd		4126853	1					
ANR	4127021	ExpressionStatement	x = x -> sub [ * p ]	4725:3:117469:117483	4126853	1	True				
ANR	4127022	AssignmentExpression	x = x -> sub [ * p ]		4126853	0		=			
ANR	4127023	Identifier	x		4126853	0					
ANR	4127024	ArrayIndexing	x -> sub [ * p ]		4126853	1					
ANR	4127025	PtrMemberAccess	x -> sub		4126853	0					
ANR	4127026	Identifier	x		4126853	0					
ANR	4127027	Identifier	sub		4126853	1					
ANR	4127028	UnaryOperationExpression	* p		4126853	1					
ANR	4127029	UnaryOperator	*		4126853	0					
ANR	4127030	Identifier	p		4126853	1					
ANR	4127031	ReturnType	static void		4126853	1					
ANR	4127032	Identifier	cmd_descriptor_init		4126853	2					
ANR	4127033	ParameterList	RCore * core		4126853	3					
ANR	4127034	Parameter	RCore * core	4702:32:116836:116846	4126853	0	True				
ANR	4127035	ParameterType	RCore *		4126853	0					
ANR	4127036	Identifier	core		4126853	1					
ANR	4127037	CFGEntryNode	ENTRY		4126853		True				
ANR	4127038	CFGExitNode	EXIT		4126853		True				
ANR	4127039	CFGErrorNode	ERROR		4126853		True				
ANR	4127040	Symbol	x -> sub		4126853						
ANR	4127041	Symbol	* x		4126853						
ANR	4127042	Symbol	* y		4126853						
ANR	4127043	Symbol	d		4126853						
ANR	4127044	Symbol	& core -> root_cmd_descriptor		4126853						
ANR	4127045	Symbol	core -> cmd_descriptors -> length		4126853						
ANR	4127046	Symbol	* core		4126853						
ANR	4127047	Symbol	iter		4126853						
ANR	4127048	Symbol	y -> cmd		4126853						
ANR	4127049	Symbol	n		4126853						
ANR	4127050	Symbol	p		4126853						
ANR	4127051	Symbol	core		4126853						
ANR	4127052	Symbol	R_NEW0		4126853						
ANR	4127053	Symbol	* core -> cmd_descriptors		4126853						
ANR	4127054	Symbol	RCmdDescriptor		4126853						
ANR	4127055	Symbol	compare_cmd_descriptor_name		4126853						
ANR	4127056	Symbol	* * x		4126853						
ANR	4127057	Symbol	x		4126853						
ANR	4127058	Symbol	y		4126853						
ANR	4127059	Symbol	core -> cmd_descriptors		4126853						
ANR	4127060	Symbol	* p		4126853						
ANR	4127061	Symbol	* * p		4126853						
ANR	4127062	Symbol	* x -> sub		4126853						
ANR	4127063	Symbol	* * core		4126853						
ANR	4127064	Function	core_cmd0_wrapper	4730:0:117495:117597							
ANR	4127065	FunctionDef	"core_cmd0_wrapper (void * core , const char * cmd)"		4127064	0					
ANR	4127066	CompoundStatement		4730:58:117553:117597	4127064	0					
ANR	4127067	ReturnStatement	"return r_core_cmd0 ( ( RCore * ) core , cmd ) ;"	4731:1:117556:117595	4127064	0	True				
ANR	4127068	CallExpression	"r_core_cmd0 ( ( RCore * ) core , cmd )"		4127064	0					
ANR	4127069	Callee	r_core_cmd0		4127064	0					
ANR	4127070	Identifier	r_core_cmd0		4127064	0					
ANR	4127071	ArgumentList	( RCore * ) core		4127064	1					
ANR	4127072	Argument	( RCore * ) core		4127064	0					
ANR	4127073	CastExpression	( RCore * ) core		4127064	0					
ANR	4127074	CastTarget	RCore *		4127064	0					
ANR	4127075	Identifier	core		4127064	1					
ANR	4127076	Argument	cmd		4127064	1					
ANR	4127077	Identifier	cmd		4127064	0					
ANR	4127078	ReturnType	static int		4127064	1					
ANR	4127079	Identifier	core_cmd0_wrapper		4127064	2					
ANR	4127080	ParameterList	"void * core , const char * cmd"		4127064	3					
ANR	4127081	Parameter	void * core	4730:29:117524:117533	4127064	0	True				
ANR	4127082	ParameterType	void *		4127064	0					
ANR	4127083	Identifier	core		4127064	1					
ANR	4127084	Parameter	const char * cmd	4730:41:117536:117550	4127064	1	True				
ANR	4127085	ParameterType	const char *		4127064	0					
ANR	4127086	Identifier	cmd		4127064	1					
ANR	4127087	CFGEntryNode	ENTRY		4127064		True				
ANR	4127088	CFGExitNode	EXIT		4127064		True				
ANR	4127089	Symbol	core		4127064						
ANR	4127090	Symbol	r_core_cmd0		4127064						
ANR	4127091	Symbol	cmd		4127064						
ANR	4127092	Function	r_core_cmd_init	4734:0:117600:121418							
ANR	4127093	FunctionDef	r_core_cmd_init (RCore * core)		4127092	0					
ANR	4127094	CompoundStatement		4734:40:117640:121418	4127092	0					
ANR	4127095	ClassDefStatement	struct { const char * cmd ; const char * description ; r_cmd_callback ( cb ) ; void ( * descriptor_init ) ( RCore * core ) ; }	4735:1:117643:117762	4127092	0	True				
ANR	4127096	Statement	cmds	4740:3:117764:117767	4127092	1	True				
ANR	4127097	Statement	[	4740:7:117768:117768	4127092	2	True				
ANR	4127098	Statement	]	4740:8:117769:117769	4127092	3	True				
ANR	4127099	Statement	=	4740:10:117771:117771	4127092	4	True				
ANR	4127100	CompoundStatement		7:12:132:132	4127092	5					
ANR	4127101	CompoundStatement		8:2:136:136	4127092	0					
ANR	4127102	Statement	"""!"""	4741:3:117778:117780	4127092	0	True				
ANR	4127103	Statement	","	4741:6:117781:117781	4127092	1	True				
ANR	4127104	Statement	"""run system command"""	4741:15:117790:117809	4127092	2	True				
ANR	4127105	Statement	","	4741:35:117810:117810	4127092	3	True				
ANR	4127106	Statement	cmd_system	4741:37:117812:117821	4127092	4	True				
ANR	4127107	Statement	","	4741:48:117823:117823	4127092	1	True				
ANR	4127108	CompoundStatement		9:2:186:186	4127092	2					
ANR	4127109	Statement	"""_"""	4742:3:117828:117830	4127092	0	True				
ANR	4127110	Statement	","	4742:6:117831:117831	4127092	1	True				
ANR	4127111	Statement	"""print last output"""	4742:15:117840:117858	4127092	2	True				
ANR	4127112	Statement	","	4742:34:117859:117859	4127092	3	True				
ANR	4127113	Statement	cmd_last	4742:36:117861:117868	4127092	4	True				
ANR	4127114	Statement	","	4742:45:117870:117870	4127092	3	True				
ANR	4127115	CompoundStatement		10:2:233:233	4127092	4					
ANR	4127116	Statement	"""#"""	4743:3:117875:117877	4127092	0	True				
ANR	4127117	Statement	","	4743:6:117878:117878	4127092	1	True				
ANR	4127118	Statement	"""calculate hash"""	4743:15:117887:117902	4127092	2	True				
ANR	4127119	Statement	","	4743:31:117903:117903	4127092	3	True				
ANR	4127120	Statement	cmd_hash	4743:33:117905:117912	4127092	4	True				
ANR	4127121	Statement	","	4743:42:117914:117914	4127092	5	True				
ANR	4127122	CompoundStatement		11:2:277:277	4127092	6					
ANR	4127123	Statement	"""$"""	4744:3:117919:117921	4127092	0	True				
ANR	4127124	Statement	","	4744:6:117922:117922	4127092	1	True				
ANR	4127125	Statement	"""alias"""	4744:15:117931:117937	4127092	2	True				
ANR	4127126	Statement	","	4744:22:117938:117938	4127092	3	True				
ANR	4127127	Statement	cmd_alias	4744:24:117940:117948	4127092	4	True				
ANR	4127128	Statement	","	4744:34:117950:117950	4127092	7	True				
ANR	4127129	CompoundStatement		12:2:313:313	4127092	8					
ANR	4127130	Statement	"""%"""	4745:3:117955:117957	4127092	0	True				
ANR	4127131	Statement	","	4745:6:117958:117958	4127092	1	True				
ANR	4127132	Statement	"""short version of 'env' command"""	4745:15:117967:117998	4127092	2	True				
ANR	4127133	Statement	","	4745:47:117999:117999	4127092	3	True				
ANR	4127134	Statement	cmd_env	4745:49:118001:118007	4127092	4	True				
ANR	4127135	Statement	","	4745:57:118009:118009	4127092	9	True				
ANR	4127136	CompoundStatement		13:2:372:372	4127092	10					
ANR	4127137	Statement	"""&"""	4746:3:118014:118016	4127092	0	True				
ANR	4127138	Statement	","	4746:6:118017:118017	4127092	1	True				
ANR	4127139	Statement	"""tasks"""	4746:15:118026:118032	4127092	2	True				
ANR	4127140	Statement	","	4746:22:118033:118033	4127092	3	True				
ANR	4127141	Statement	cmd_tasks	4746:24:118035:118043	4127092	4	True				
ANR	4127142	Statement	","	4746:34:118045:118045	4127092	11	True				
ANR	4127143	CompoundStatement		14:2:408:408	4127092	12					
ANR	4127144	Statement	"""("""	4747:3:118050:118052	4127092	0	True				
ANR	4127145	Statement	","	4747:6:118053:118053	4127092	1	True				
ANR	4127146	Statement	"""macro"""	4747:15:118062:118068	4127092	2	True				
ANR	4127147	Statement	","	4747:22:118069:118069	4127092	3	True				
ANR	4127148	Statement	cmd_macro	4747:24:118071:118079	4127092	4	True				
ANR	4127149	Statement	","	4747:33:118080:118080	4127092	5	True				
ANR	4127150	Statement	cmd_macro_init	4747:35:118082:118095	4127092	6	True				
ANR	4127151	Statement	","	4747:50:118097:118097	4127092	13	True				
ANR	4127152	CompoundStatement		15:2:460:460	4127092	14					
ANR	4127153	Statement	"""*"""	4748:3:118102:118104	4127092	0	True				
ANR	4127154	Statement	","	4748:6:118105:118105	4127092	1	True				
ANR	4127155	Statement	"""pointer read/write"""	4748:15:118114:118133	4127092	2	True				
ANR	4127156	Statement	","	4748:35:118134:118134	4127092	3	True				
ANR	4127157	Statement	cmd_pointer	4748:37:118136:118146	4127092	4	True				
ANR	4127158	Statement	","	4748:49:118148:118148	4127092	15	True				
ANR	4127159	CompoundStatement		16:2:511:511	4127092	16					
ANR	4127160	Statement	"""-"""	4749:3:118153:118155	4127092	0	True				
ANR	4127161	Statement	","	4749:6:118156:118156	4127092	1	True				
ANR	4127162	Statement	"""open cfg.editor and run script"""	4749:15:118165:118196	4127092	2	True				
ANR	4127163	Statement	","	4749:47:118197:118197	4127092	3	True				
ANR	4127164	Statement	cmd_stdin	4749:49:118199:118207	4127092	4	True				
ANR	4127165	Statement	","	4749:59:118209:118209	4127092	17	True				
ANR	4127166	CompoundStatement		17:2:572:572	4127092	18					
ANR	4127167	Statement	"""."""	4750:3:118214:118216	4127092	0	True				
ANR	4127168	Statement	","	4750:6:118217:118217	4127092	1	True				
ANR	4127169	Statement	"""interpret"""	4750:15:118226:118236	4127092	2	True				
ANR	4127170	Statement	","	4750:26:118237:118237	4127092	3	True				
ANR	4127171	Statement	cmd_interpret	4750:28:118239:118251	4127092	4	True				
ANR	4127172	Statement	","	4750:42:118253:118253	4127092	19	True				
ANR	4127173	CompoundStatement		18:2:616:616	4127092	20					
ANR	4127174	Statement	"""/"""	4751:3:118258:118260	4127092	0	True				
ANR	4127175	Statement	","	4751:6:118261:118261	4127092	1	True				
ANR	4127176	Statement	"""search kw, pattern aes"""	4751:15:118270:118293	4127092	2	True				
ANR	4127177	Statement	","	4751:39:118294:118294	4127092	3	True				
ANR	4127178	Statement	cmd_search	4751:41:118296:118305	4127092	4	True				
ANR	4127179	Statement	","	4751:51:118306:118306	4127092	5	True				
ANR	4127180	Statement	cmd_search_init	4751:53:118308:118322	4127092	6	True				
ANR	4127181	Statement	","	4751:69:118324:118324	4127092	21	True				
ANR	4127182	CompoundStatement		19:2:687:687	4127092	22					
ANR	4127183	Statement	"""="""	4752:3:118329:118331	4127092	0	True				
ANR	4127184	Statement	","	4752:6:118332:118332	4127092	1	True				
ANR	4127185	Statement	"""io pipe"""	4752:15:118341:118349	4127092	2	True				
ANR	4127186	Statement	","	4752:24:118350:118350	4127092	3	True				
ANR	4127187	Statement	cmd_rap	4752:26:118352:118358	4127092	4	True				
ANR	4127188	Statement	","	4752:34:118360:118360	4127092	23	True				
ANR	4127189	CompoundStatement		20:2:723:723	4127092	24					
ANR	4127190	Statement	"""?"""	4753:3:118365:118367	4127092	0	True				
ANR	4127191	Statement	","	4753:6:118368:118368	4127092	1	True				
ANR	4127192	Statement	"""help message"""	4753:15:118377:118390	4127092	2	True				
ANR	4127193	Statement	","	4753:29:118391:118391	4127092	3	True				
ANR	4127194	Statement	cmd_help	4753:31:118393:118400	4127092	4	True				
ANR	4127195	Statement	","	4753:39:118401:118401	4127092	5	True				
ANR	4127196	Statement	cmd_help_init	4753:41:118403:118415	4127092	6	True				
ANR	4127197	Statement	","	4753:55:118417:118417	4127092	25	True				
ANR	4127198	CompoundStatement		21:2:780:780	4127092	26					
ANR	4127199	Statement	"""\\\\"""	4754:3:118422:118425	4127092	0	True				
ANR	4127200	Statement	","	4754:7:118426:118426	4127092	1	True				
ANR	4127201	Statement	"""alias for =!"""	4754:15:118434:118447	4127092	2	True				
ANR	4127202	Statement	","	4754:29:118448:118448	4127092	3	True				
ANR	4127203	Statement	cmd_rap_run	4754:31:118450:118460	4127092	4	True				
ANR	4127204	Statement	","	4754:43:118462:118462	4127092	27	True				
ANR	4127205	CompoundStatement		22:2:825:825	4127092	28					
ANR	4127206	Statement	"""'"""	4755:3:118467:118469	4127092	0	True				
ANR	4127207	Statement	","	4755:6:118470:118470	4127092	1	True				
ANR	4127208	Statement	"""alias for =!"""	4755:15:118479:118492	4127092	2	True				
ANR	4127209	Statement	","	4755:29:118493:118493	4127092	3	True				
ANR	4127210	Statement	cmd_rap_run	4755:31:118495:118505	4127092	4	True				
ANR	4127211	Statement	","	4755:43:118507:118507	4127092	29	True				
ANR	4127212	CompoundStatement		23:2:870:870	4127092	30					
ANR	4127213	Statement	"""0x"""	4756:3:118512:118515	4127092	0	True				
ANR	4127214	Statement	","	4756:7:118516:118516	4127092	1	True				
ANR	4127215	Statement	"""alias for s 0x"""	4756:15:118524:118539	4127092	2	True				
ANR	4127216	Statement	","	4756:31:118540:118540	4127092	3	True				
ANR	4127217	Statement	cmd_ox	4756:33:118542:118547	4127092	4	True				
ANR	4127218	Statement	","	4756:40:118549:118549	4127092	31	True				
ANR	4127219	CompoundStatement		24:2:912:912	4127092	32					
ANR	4127220	Statement	"""analysis"""	4757:3:118554:118563	4127092	0	True				
ANR	4127221	Statement	","	4757:13:118564:118564	4127092	1	True				
ANR	4127222	Statement	"""analysis"""	4757:15:118566:118575	4127092	2	True				
ANR	4127223	Statement	","	4757:25:118576:118576	4127092	3	True				
ANR	4127224	Statement	cmd_anal	4757:27:118578:118585	4127092	4	True				
ANR	4127225	Statement	","	4757:35:118586:118586	4127092	5	True				
ANR	4127226	Statement	cmd_anal_init	4757:37:118588:118600	4127092	6	True				
ANR	4127227	Statement	","	4757:51:118602:118602	4127092	33	True				
ANR	4127228	CompoundStatement		25:2:965:965	4127092	34					
ANR	4127229	Statement	"""bsize"""	4758:3:118607:118613	4127092	0	True				
ANR	4127230	Statement	","	4758:10:118614:118614	4127092	1	True				
ANR	4127231	Statement	"""change block size"""	4758:15:118619:118637	4127092	2	True				
ANR	4127232	Statement	","	4758:34:118638:118638	4127092	3	True				
ANR	4127233	Statement	cmd_bsize	4758:36:118640:118648	4127092	4	True				
ANR	4127234	Statement	","	4758:46:118650:118650	4127092	35	True				
ANR	4127235	CompoundStatement		26:2:1013:1013	4127092	36					
ANR	4127236	Statement	"""cmp"""	4759:3:118655:118659	4127092	0	True				
ANR	4127237	Statement	","	4759:8:118660:118660	4127092	1	True				
ANR	4127238	Statement	"""compare memory"""	4759:15:118667:118682	4127092	2	True				
ANR	4127239	Statement	","	4759:31:118683:118683	4127092	3	True				
ANR	4127240	Statement	cmd_cmp	4759:33:118685:118691	4127092	4	True				
ANR	4127241	Statement	","	4759:40:118692:118692	4127092	5	True				
ANR	4127242	Statement	cmd_cmp_init	4759:42:118694:118705	4127092	6	True				
ANR	4127243	Statement	","	4759:55:118707:118707	4127092	37	True				
ANR	4127244	CompoundStatement		27:2:1070:1070	4127092	38					
ANR	4127245	Statement	"""Code"""	4760:3:118712:118717	4127092	0	True				
ANR	4127246	Statement	","	4760:9:118718:118718	4127092	1	True				
ANR	4127247	Statement	"""code metadata"""	4760:15:118724:118738	4127092	2	True				
ANR	4127248	Statement	","	4760:30:118739:118739	4127092	3	True				
ANR	4127249	Statement	cmd_meta	4760:32:118741:118748	4127092	4	True				
ANR	4127250	Statement	","	4760:40:118749:118749	4127092	5	True				
ANR	4127251	Statement	cmd_meta_init	4760:42:118751:118763	4127092	6	True				
ANR	4127252	Statement	","	4760:56:118765:118765	4127092	39	True				
ANR	4127253	CompoundStatement		28:2:1128:1128	4127092	40					
ANR	4127254	Statement	"""debug"""	4761:3:118770:118776	4127092	0	True				
ANR	4127255	Statement	","	4761:10:118777:118777	4127092	1	True				
ANR	4127256	Statement	"""debugger operations"""	4761:15:118782:118802	4127092	2	True				
ANR	4127257	Statement	","	4761:36:118803:118803	4127092	3	True				
ANR	4127258	Statement	cmd_debug	4761:38:118805:118813	4127092	4	True				
ANR	4127259	Statement	","	4761:47:118814:118814	4127092	5	True				
ANR	4127260	Statement	cmd_debug_init	4761:49:118816:118829	4127092	6	True				
ANR	4127261	Statement	","	4761:64:118831:118831	4127092	41	True				
ANR	4127262	CompoundStatement		29:2:1194:1194	4127092	42					
ANR	4127263	Statement	"""eval"""	4762:3:118836:118841	4127092	0	True				
ANR	4127264	Statement	","	4762:9:118842:118842	4127092	1	True				
ANR	4127265	Statement	"""evaluate configuration variable"""	4762:15:118848:118880	4127092	2	True				
ANR	4127266	Statement	","	4762:48:118881:118881	4127092	3	True				
ANR	4127267	Statement	cmd_eval	4762:50:118883:118890	4127092	4	True				
ANR	4127268	Statement	","	4762:58:118891:118891	4127092	5	True				
ANR	4127269	Statement	cmd_eval_init	4762:60:118893:118905	4127092	6	True				
ANR	4127270	Statement	","	4762:74:118907:118907	4127092	43	True				
ANR	4127271	CompoundStatement		30:2:1270:1270	4127092	44					
ANR	4127272	Statement	"""flag"""	4763:3:118912:118917	4127092	0	True				
ANR	4127273	Statement	","	4763:9:118918:118918	4127092	1	True				
ANR	4127274	Statement	"""get/set flags"""	4763:15:118924:118938	4127092	2	True				
ANR	4127275	Statement	","	4763:30:118939:118939	4127092	3	True				
ANR	4127276	Statement	cmd_flag	4763:32:118941:118948	4127092	4	True				
ANR	4127277	Statement	","	4763:40:118949:118949	4127092	5	True				
ANR	4127278	Statement	cmd_flag_init	4763:42:118951:118963	4127092	6	True				
ANR	4127279	Statement	","	4763:56:118965:118965	4127092	45	True				
ANR	4127280	CompoundStatement		31:2:1328:1328	4127092	46					
ANR	4127281	Statement	"""g"""	4764:3:118970:118972	4127092	0	True				
ANR	4127282	Statement	","	4764:6:118973:118973	4127092	1	True				
ANR	4127283	Statement	"""egg manipulation"""	4764:15:118982:118999	4127092	2	True				
ANR	4127284	Statement	","	4764:33:119000:119000	4127092	3	True				
ANR	4127285	Statement	cmd_egg	4764:35:119002:119008	4127092	4	True				
ANR	4127286	Statement	","	4764:42:119009:119009	4127092	5	True				
ANR	4127287	Statement	cmd_egg_init	4764:44:119011:119022	4127092	6	True				
ANR	4127288	Statement	","	4764:57:119024:119024	4127092	47	True				
ANR	4127289	CompoundStatement		32:2:1387:1387	4127092	48					
ANR	4127290	Statement	"""info"""	4765:3:119029:119034	4127092	0	True				
ANR	4127291	Statement	","	4765:9:119035:119035	4127092	1	True				
ANR	4127292	Statement	"""get file info"""	4765:15:119041:119055	4127092	2	True				
ANR	4127293	Statement	","	4765:30:119056:119056	4127092	3	True				
ANR	4127294	Statement	cmd_info	4765:32:119058:119065	4127092	4	True				
ANR	4127295	Statement	","	4765:40:119066:119066	4127092	5	True				
ANR	4127296	Statement	cmd_info_init	4765:42:119068:119080	4127092	6	True				
ANR	4127297	Statement	","	4765:56:119082:119082	4127092	49	True				
ANR	4127298	CompoundStatement		33:2:1445:1445	4127092	50					
ANR	4127299	Statement	"""kuery"""	4766:3:119087:119093	4127092	0	True				
ANR	4127300	Statement	","	4766:10:119094:119094	4127092	1	True				
ANR	4127301	Statement	"""perform sdb query"""	4766:15:119099:119117	4127092	2	True				
ANR	4127302	Statement	","	4766:34:119118:119118	4127092	3	True				
ANR	4127303	Statement	cmd_kuery	4766:36:119120:119128	4127092	4	True				
ANR	4127304	Statement	","	4766:46:119130:119130	4127092	51	True				
ANR	4127305	CompoundStatement		34:2:1493:1493	4127092	52					
ANR	4127306	Statement	"""l"""	4767:3:119135:119137	4127092	0	True				
ANR	4127307	Statement	","	4767:6:119138:119138	4127092	1	True				
ANR	4127308	Statement	"""list files and directories"""	4767:14:119146:119173	4127092	2	True				
ANR	4127309	Statement	","	4767:42:119174:119174	4127092	3	True				
ANR	4127310	Statement	cmd_ls	4767:44:119176:119181	4127092	4	True				
ANR	4127311	Statement	","	4767:51:119183:119183	4127092	53	True				
ANR	4127312	CompoundStatement		35:2:1546:1546	4127092	54					
ANR	4127313	Statement	"""join"""	4768:3:119188:119193	4127092	0	True				
ANR	4127314	Statement	","	4768:9:119194:119194	4127092	1	True				
ANR	4127315	Statement	"""join the contents of the two files"""	4768:14:119199:119234	4127092	2	True				
ANR	4127316	Statement	","	4768:50:119235:119235	4127092	3	True				
ANR	4127317	Statement	cmd_join	4768:52:119237:119244	4127092	4	True				
ANR	4127318	Statement	","	4768:61:119246:119246	4127092	55	True				
ANR	4127319	CompoundStatement		36:2:1609:1609	4127092	56					
ANR	4127320	Statement	"""head"""	4769:3:119251:119256	4127092	0	True				
ANR	4127321	Statement	","	4769:9:119257:119257	4127092	1	True				
ANR	4127322	Statement	"""show the top n number of line in file"""	4769:14:119262:119300	4127092	2	True				
ANR	4127323	Statement	","	4769:53:119301:119301	4127092	3	True				
ANR	4127324	Statement	cmd_head	4769:55:119303:119310	4127092	4	True				
ANR	4127325	Statement	","	4769:64:119312:119312	4127092	57	True				
ANR	4127326	CompoundStatement		37:2:1675:1675	4127092	58					
ANR	4127327	Statement	"""L"""	4770:3:119317:119319	4127092	0	True				
ANR	4127328	Statement	","	4770:6:119320:119320	4127092	1	True				
ANR	4127329	Statement	"""manage dynamically loaded plugins"""	4770:15:119329:119363	4127092	2	True				
ANR	4127330	Statement	","	4770:50:119364:119364	4127092	3	True				
ANR	4127331	Statement	cmd_plugins	4770:52:119366:119376	4127092	4	True				
ANR	4127332	Statement	","	4770:64:119378:119378	4127092	59	True				
ANR	4127333	CompoundStatement		38:2:1741:1741	4127092	60					
ANR	4127334	Statement	"""mount"""	4771:3:119383:119389	4127092	0	True				
ANR	4127335	Statement	","	4771:10:119390:119390	4127092	1	True				
ANR	4127336	Statement	"""mount filesystem"""	4771:15:119395:119412	4127092	2	True				
ANR	4127337	Statement	","	4771:33:119413:119413	4127092	3	True				
ANR	4127338	Statement	cmd_mount	4771:35:119415:119423	4127092	4	True				
ANR	4127339	Statement	","	4771:44:119424:119424	4127092	5	True				
ANR	4127340	Statement	cmd_mount_init	4771:46:119426:119439	4127092	6	True				
ANR	4127341	Statement	","	4771:61:119441:119441	4127092	61	True				
ANR	4127342	CompoundStatement		39:2:1804:1804	4127092	62					
ANR	4127343	Statement	"""open"""	4772:3:119446:119451	4127092	0	True				
ANR	4127344	Statement	","	4772:9:119452:119452	4127092	1	True				
ANR	4127345	Statement	"""open or map file"""	4772:15:119458:119475	4127092	2	True				
ANR	4127346	Statement	","	4772:33:119476:119476	4127092	3	True				
ANR	4127347	Statement	cmd_open	4772:35:119478:119485	4127092	4	True				
ANR	4127348	Statement	","	4772:43:119486:119486	4127092	5	True				
ANR	4127349	Statement	cmd_open_init	4772:45:119488:119500	4127092	6	True				
ANR	4127350	Statement	","	4772:59:119502:119502	4127092	63	True				
ANR	4127351	CompoundStatement		40:2:1865:1865	4127092	64					
ANR	4127352	Statement	"""print"""	4773:3:119507:119513	4127092	0	True				
ANR	4127353	Statement	","	4773:10:119514:119514	4127092	1	True				
ANR	4127354	Statement	"""print current block"""	4773:15:119519:119539	4127092	2	True				
ANR	4127355	Statement	","	4773:36:119540:119540	4127092	3	True				
ANR	4127356	Statement	cmd_print	4773:38:119542:119550	4127092	4	True				
ANR	4127357	Statement	","	4773:47:119551:119551	4127092	5	True				
ANR	4127358	Statement	cmd_print_init	4773:49:119553:119566	4127092	6	True				
ANR	4127359	Statement	","	4773:64:119568:119568	4127092	65	True				
ANR	4127360	CompoundStatement		41:2:1931:1931	4127092	66					
ANR	4127361	Statement	"""Project"""	4774:3:119573:119581	4127092	0	True				
ANR	4127362	Statement	","	4774:12:119582:119582	4127092	1	True				
ANR	4127363	Statement	"""project"""	4774:15:119585:119593	4127092	2	True				
ANR	4127364	Statement	","	4774:24:119594:119594	4127092	3	True				
ANR	4127365	Statement	cmd_project	4774:26:119596:119606	4127092	4	True				
ANR	4127366	Statement	","	4774:37:119607:119607	4127092	5	True				
ANR	4127367	Statement	cmd_project_init	4774:39:119609:119624	4127092	6	True				
ANR	4127368	Statement	","	4774:56:119626:119626	4127092	67	True				
ANR	4127369	CompoundStatement		42:2:1989:1989	4127092	68					
ANR	4127370	Statement	"""quit"""	4775:3:119631:119636	4127092	0	True				
ANR	4127371	Statement	","	4775:9:119637:119637	4127092	1	True				
ANR	4127372	Statement	"""exit program session"""	4775:15:119643:119664	4127092	2	True				
ANR	4127373	Statement	","	4775:37:119665:119665	4127092	3	True				
ANR	4127374	Statement	cmd_quit	4775:39:119667:119674	4127092	4	True				
ANR	4127375	Statement	","	4775:47:119675:119675	4127092	5	True				
ANR	4127376	Statement	cmd_quit_init	4775:49:119677:119689	4127092	6	True				
ANR	4127377	Statement	","	4775:63:119691:119691	4127092	69	True				
ANR	4127378	CompoundStatement		43:2:2054:2054	4127092	70					
ANR	4127379	Statement	"""Q"""	4776:3:119696:119698	4127092	0	True				
ANR	4127380	Statement	","	4776:6:119699:119699	4127092	1	True				
ANR	4127381	Statement	"""alias for q!"""	4776:15:119708:119721	4127092	2	True				
ANR	4127382	Statement	","	4776:29:119722:119722	4127092	3	True				
ANR	4127383	Statement	cmd_Quit	4776:31:119724:119731	4127092	4	True				
ANR	4127384	Statement	","	4776:40:119733:119733	4127092	71	True				
ANR	4127385	CompoundStatement		44:2:2096:2096	4127092	72					
ANR	4127386	Statement	""":"""	4777:3:119738:119740	4127092	0	True				
ANR	4127387	Statement	","	4777:6:119741:119741	4127092	1	True				
ANR	4127388	Statement	"""long commands starting with :"""	4777:15:119750:119780	4127092	2	True				
ANR	4127389	Statement	","	4777:46:119781:119781	4127092	3	True				
ANR	4127390	Statement	cmd_colon	4777:48:119783:119791	4127092	4	True				
ANR	4127391	Statement	","	4777:58:119793:119793	4127092	73	True				
ANR	4127392	CompoundStatement		45:2:2156:2156	4127092	74					
ANR	4127393	Statement	"""resize"""	4778:3:119798:119805	4127092	0	True				
ANR	4127394	Statement	","	4778:11:119806:119806	4127092	1	True				
ANR	4127395	Statement	"""change file size"""	4778:15:119810:119827	4127092	2	True				
ANR	4127396	Statement	","	4778:33:119828:119828	4127092	3	True				
ANR	4127397	Statement	cmd_resize	4778:35:119830:119839	4127092	4	True				
ANR	4127398	Statement	","	4778:46:119841:119841	4127092	75	True				
ANR	4127399	CompoundStatement		46:2:2204:2204	4127092	76					
ANR	4127400	Statement	"""seek"""	4779:3:119846:119851	4127092	0	True				
ANR	4127401	Statement	","	4779:9:119852:119852	4127092	1	True				
ANR	4127402	Statement	"""seek to an offset"""	4779:15:119858:119876	4127092	2	True				
ANR	4127403	Statement	","	4779:34:119877:119877	4127092	3	True				
ANR	4127404	Statement	cmd_seek	4779:36:119879:119886	4127092	4	True				
ANR	4127405	Statement	","	4779:44:119887:119887	4127092	5	True				
ANR	4127406	Statement	cmd_seek_init	4779:46:119889:119901	4127092	6	True				
ANR	4127407	Statement	","	4779:60:119903:119903	4127092	77	True				
ANR	4127408	CompoundStatement		47:2:2266:2266	4127092	78					
ANR	4127409	Statement	"""t"""	4780:3:119908:119910	4127092	0	True				
ANR	4127410	Statement	","	4780:6:119911:119911	4127092	1	True				
ANR	4127411	Statement	"""type information (cparse)"""	4780:15:119920:119946	4127092	2	True				
ANR	4127412	Statement	","	4780:42:119947:119947	4127092	3	True				
ANR	4127413	Statement	cmd_type	4780:44:119949:119956	4127092	4	True				
ANR	4127414	Statement	","	4780:52:119957:119957	4127092	5	True				
ANR	4127415	Statement	cmd_type_init	4780:54:119959:119971	4127092	6	True				
ANR	4127416	Statement	","	4780:68:119973:119973	4127092	79	True				
ANR	4127417	CompoundStatement		48:2:2336:2336	4127092	80					
ANR	4127418	Statement	"""Text"""	4781:3:119978:119983	4127092	0	True				
ANR	4127419	Statement	","	4781:9:119984:119984	4127092	1	True				
ANR	4127420	Statement	"""Text log utility"""	4781:15:119990:120007	4127092	2	True				
ANR	4127421	Statement	","	4781:33:120008:120008	4127092	3	True				
ANR	4127422	Statement	cmd_log	4781:35:120010:120016	4127092	4	True				
ANR	4127423	Statement	","	4781:42:120017:120017	4127092	5	True				
ANR	4127424	Statement	cmd_log_init	4781:44:120019:120030	4127092	6	True				
ANR	4127425	Statement	","	4781:57:120032:120032	4127092	81	True				
ANR	4127426	CompoundStatement		49:2:2395:2395	4127092	82					
ANR	4127427	Statement	"""u"""	4782:3:120037:120039	4127092	0	True				
ANR	4127428	Statement	","	4782:6:120040:120040	4127092	1	True				
ANR	4127429	Statement	"""uname/undo"""	4782:15:120049:120060	4127092	2	True				
ANR	4127430	Statement	","	4782:27:120061:120061	4127092	3	True				
ANR	4127431	Statement	cmd_uname	4782:29:120063:120071	4127092	4	True				
ANR	4127432	Statement	","	4782:39:120073:120073	4127092	83	True				
ANR	4127433	CompoundStatement		50:2:2436:2436	4127092	84					
ANR	4127434	Statement	"""<"""	4783:3:120078:120080	4127092	0	True				
ANR	4127435	Statement	","	4783:6:120081:120081	4127092	1	True				
ANR	4127436	Statement	"""pipe into RCons.readChar"""	4783:15:120090:120115	4127092	2	True				
ANR	4127437	Statement	","	4783:41:120116:120116	4127092	3	True				
ANR	4127438	Statement	cmd_pipein	4783:43:120118:120127	4127092	4	True				
ANR	4127439	Statement	","	4783:54:120129:120129	4127092	85	True				
ANR	4127440	CompoundStatement		51:2:2492:2492	4127092	86					
ANR	4127441	Statement	"""Visual"""	4784:3:120134:120141	4127092	0	True				
ANR	4127442	Statement	","	4784:11:120142:120142	4127092	1	True				
ANR	4127443	Statement	"""enter visual mode"""	4784:15:120146:120164	4127092	2	True				
ANR	4127444	Statement	","	4784:34:120165:120165	4127092	3	True				
ANR	4127445	Statement	cmd_visual	4784:36:120167:120176	4127092	4	True				
ANR	4127446	Statement	","	4784:47:120178:120178	4127092	87	True				
ANR	4127447	CompoundStatement		52:2:2541:2541	4127092	88					
ANR	4127448	Statement	"""visualPanels"""	4785:3:120183:120196	4127092	0	True				
ANR	4127449	Statement	","	4785:17:120197:120197	4127092	1	True				
ANR	4127450	Statement	"""enter visual mode"""	4785:21:120201:120219	4127092	2	True				
ANR	4127451	Statement	","	4785:40:120220:120220	4127092	3	True				
ANR	4127452	Statement	cmd_panels	4785:42:120222:120231	4127092	4	True				
ANR	4127453	Statement	","	4785:53:120233:120233	4127092	89	True				
ANR	4127454	CompoundStatement		53:2:2596:2596	4127092	90					
ANR	4127455	Statement	"""write"""	4786:3:120238:120244	4127092	0	True				
ANR	4127456	Statement	","	4786:10:120245:120245	4127092	1	True				
ANR	4127457	Statement	"""write bytes"""	4786:15:120250:120262	4127092	2	True				
ANR	4127458	Statement	","	4786:28:120263:120263	4127092	3	True				
ANR	4127459	Statement	cmd_write	4786:30:120265:120273	4127092	4	True				
ANR	4127460	Statement	","	4786:39:120274:120274	4127092	5	True				
ANR	4127461	Statement	cmd_write_init	4786:41:120276:120289	4127092	6	True				
ANR	4127462	Statement	","	4786:56:120291:120291	4127092	91	True				
ANR	4127463	CompoundStatement		54:2:2654:2654	4127092	92					
ANR	4127464	Statement	"""x"""	4787:3:120296:120298	4127092	0	True				
ANR	4127465	Statement	","	4787:6:120299:120299	4127092	1	True				
ANR	4127466	Statement	"""alias for px"""	4787:15:120308:120321	4127092	2	True				
ANR	4127467	Statement	","	4787:29:120322:120322	4127092	3	True				
ANR	4127468	Statement	cmd_hexdump	4787:31:120324:120334	4127092	4	True				
ANR	4127469	Statement	","	4787:43:120336:120336	4127092	93	True				
ANR	4127470	CompoundStatement		55:2:2699:2699	4127092	94					
ANR	4127471	Statement	"""yank"""	4788:3:120341:120346	4127092	0	True				
ANR	4127472	Statement	","	4788:9:120347:120347	4127092	1	True				
ANR	4127473	Statement	"""yank bytes"""	4788:15:120353:120364	4127092	2	True				
ANR	4127474	Statement	","	4788:27:120365:120365	4127092	3	True				
ANR	4127475	Statement	cmd_yank	4788:29:120367:120374	4127092	4	True				
ANR	4127476	Statement	","	4788:38:120376:120376	4127092	95	True				
ANR	4127477	CompoundStatement		56:2:2739:2739	4127092	96					
ANR	4127478	Statement	"""zign"""	4789:3:120381:120386	4127092	0	True				
ANR	4127479	Statement	","	4789:9:120387:120387	4127092	1	True				
ANR	4127480	Statement	"""zignatures"""	4789:15:120393:120404	4127092	2	True				
ANR	4127481	Statement	","	4789:27:120405:120405	4127092	3	True				
ANR	4127482	Statement	cmd_zign	4789:29:120407:120414	4127092	4	True				
ANR	4127483	Statement	","	4789:37:120415:120415	4127092	5	True				
ANR	4127484	Statement	cmd_zign_init	4789:39:120417:120429	4127092	6	True				
ANR	4127485	Statement	","	4789:53:120431:120431	4127092	97	True				
ANR	4127486	ExpressionStatement		4790:2:120435:120435	4127092	6	True				
ANR	4127487	ExpressionStatement	core -> rcmd = r_cmd_new ( )	4792:1:120439:120464	4127092	7	True				
ANR	4127488	AssignmentExpression	core -> rcmd = r_cmd_new ( )		4127092	0		=			
ANR	4127489	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127490	Identifier	core		4127092	0					
ANR	4127491	Identifier	rcmd		4127092	1					
ANR	4127492	CallExpression	r_cmd_new ( )		4127092	1					
ANR	4127493	Callee	r_cmd_new		4127092	0					
ANR	4127494	Identifier	r_cmd_new		4127092	0					
ANR	4127495	ArgumentList			4127092	1					
ANR	4127496	ExpressionStatement	core -> rcmd -> macro . user = core	4793:1:120467:120496	4127092	8	True				
ANR	4127497	AssignmentExpression	core -> rcmd -> macro . user = core		4127092	0		=			
ANR	4127498	MemberAccess	core -> rcmd -> macro . user		4127092	0					
ANR	4127499	PtrMemberAccess	core -> rcmd -> macro		4127092	0					
ANR	4127500	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127501	Identifier	core		4127092	0					
ANR	4127502	Identifier	rcmd		4127092	1					
ANR	4127503	Identifier	macro		4127092	1					
ANR	4127504	Identifier	user		4127092	1					
ANR	4127505	Identifier	core		4127092	1					
ANR	4127506	ExpressionStatement	core -> rcmd -> macro . num = core -> num	4794:1:120499:120532	4127092	9	True				
ANR	4127507	AssignmentExpression	core -> rcmd -> macro . num = core -> num		4127092	0		=			
ANR	4127508	MemberAccess	core -> rcmd -> macro . num		4127092	0					
ANR	4127509	PtrMemberAccess	core -> rcmd -> macro		4127092	0					
ANR	4127510	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127511	Identifier	core		4127092	0					
ANR	4127512	Identifier	rcmd		4127092	1					
ANR	4127513	Identifier	macro		4127092	1					
ANR	4127514	Identifier	num		4127092	1					
ANR	4127515	PtrMemberAccess	core -> num		4127092	1					
ANR	4127516	Identifier	core		4127092	0					
ANR	4127517	Identifier	num		4127092	1					
ANR	4127518	ExpressionStatement	core -> rcmd -> macro . cmd = core_cmd0_wrapper	4795:1:120535:120576	4127092	10	True				
ANR	4127519	AssignmentExpression	core -> rcmd -> macro . cmd = core_cmd0_wrapper		4127092	0		=			
ANR	4127520	MemberAccess	core -> rcmd -> macro . cmd		4127092	0					
ANR	4127521	PtrMemberAccess	core -> rcmd -> macro		4127092	0					
ANR	4127522	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127523	Identifier	core		4127092	0					
ANR	4127524	Identifier	rcmd		4127092	1					
ANR	4127525	Identifier	macro		4127092	1					
ANR	4127526	Identifier	cmd		4127092	1					
ANR	4127527	Identifier	core_cmd0_wrapper		4127092	1					
ANR	4127528	ExpressionStatement	core -> rcmd -> nullcallback = r_core_cmd_nullcallback	4796:1:120579:120629	4127092	11	True				
ANR	4127529	AssignmentExpression	core -> rcmd -> nullcallback = r_core_cmd_nullcallback		4127092	0		=			
ANR	4127530	PtrMemberAccess	core -> rcmd -> nullcallback		4127092	0					
ANR	4127531	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127532	Identifier	core		4127092	0					
ANR	4127533	Identifier	rcmd		4127092	1					
ANR	4127534	Identifier	nullcallback		4127092	1					
ANR	4127535	Identifier	r_core_cmd_nullcallback		4127092	1					
ANR	4127536	ExpressionStatement	core -> rcmd -> macro . cb_printf = ( PrintfCallback ) r_cons_printf	4797:1:120632:120691	4127092	12	True				
ANR	4127537	AssignmentExpression	core -> rcmd -> macro . cb_printf = ( PrintfCallback ) r_cons_printf		4127092	0		=			
ANR	4127538	MemberAccess	core -> rcmd -> macro . cb_printf		4127092	0					
ANR	4127539	PtrMemberAccess	core -> rcmd -> macro		4127092	0					
ANR	4127540	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127541	Identifier	core		4127092	0					
ANR	4127542	Identifier	rcmd		4127092	1					
ANR	4127543	Identifier	macro		4127092	1					
ANR	4127544	Identifier	cb_printf		4127092	1					
ANR	4127545	CastExpression	( PrintfCallback ) r_cons_printf		4127092	1					
ANR	4127546	CastTarget	PrintfCallback		4127092	0					
ANR	4127547	Identifier	r_cons_printf		4127092	1					
ANR	4127548	ExpressionStatement	"r_cmd_set_data ( core -> rcmd , core )"	4798:1:120694:120727	4127092	13	True				
ANR	4127549	CallExpression	"r_cmd_set_data ( core -> rcmd , core )"		4127092	0					
ANR	4127550	Callee	r_cmd_set_data		4127092	0					
ANR	4127551	Identifier	r_cmd_set_data		4127092	0					
ANR	4127552	ArgumentList	core -> rcmd		4127092	1					
ANR	4127553	Argument	core -> rcmd		4127092	0					
ANR	4127554	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127555	Identifier	core		4127092	0					
ANR	4127556	Identifier	rcmd		4127092	1					
ANR	4127557	Argument	core		4127092	1					
ANR	4127558	Identifier	core		4127092	0					
ANR	4127559	ExpressionStatement	core -> cmd_descriptors = r_list_newf ( free )	4799:1:120730:120772	4127092	14	True				
ANR	4127560	AssignmentExpression	core -> cmd_descriptors = r_list_newf ( free )		4127092	0		=			
ANR	4127561	PtrMemberAccess	core -> cmd_descriptors		4127092	0					
ANR	4127562	Identifier	core		4127092	0					
ANR	4127563	Identifier	cmd_descriptors		4127092	1					
ANR	4127564	CallExpression	r_list_newf ( free )		4127092	1					
ANR	4127565	Callee	r_list_newf		4127092	0					
ANR	4127566	Identifier	r_list_newf		4127092	0					
ANR	4127567	ArgumentList	free		4127092	1					
ANR	4127568	Argument	free		4127092	0					
ANR	4127569	Identifier	free		4127092	0					
ANR	4127570	IdentifierDeclStatement	int i ;	4800:1:120775:120780	4127092	15	True				
ANR	4127571	IdentifierDecl	i		4127092	0					
ANR	4127572	IdentifierDeclType	int		4127092	0					
ANR	4127573	Identifier	i		4127092	1					
ANR	4127574	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( cmds ) ; i ++ )		4127092	16					
ANR	4127575	ForInit	i = 0 ;	4801:6:120788:120793	4127092	0	True				
ANR	4127576	AssignmentExpression	i = 0		4127092	0		=			
ANR	4127577	Identifier	i		4127092	0					
ANR	4127578	PrimaryExpression	0		4127092	1					
ANR	4127579	Condition	i < R_ARRAY_SIZE ( cmds )	4801:13:120795:120817	4127092	1	True				
ANR	4127580	RelationalExpression	i < R_ARRAY_SIZE ( cmds )		4127092	0		<			
ANR	4127581	Identifier	i		4127092	0					
ANR	4127582	CallExpression	R_ARRAY_SIZE ( cmds )		4127092	1					
ANR	4127583	Callee	R_ARRAY_SIZE		4127092	0					
ANR	4127584	Identifier	R_ARRAY_SIZE		4127092	0					
ANR	4127585	ArgumentList	cmds		4127092	1					
ANR	4127586	Argument	cmds		4127092	0					
ANR	4127587	Identifier	cmds		4127092	0					
ANR	4127588	PostIncDecOperationExpression	i ++	4801:38:120820:120822	4127092	2	True				
ANR	4127589	Identifier	i		4127092	0					
ANR	4127590	IncDec	++		4127092	1					
ANR	4127591	CompoundStatement		68:43:3184:3184	4127092	3					
ANR	4127592	ExpressionStatement	"r_cmd_add ( core -> rcmd , cmds [ i ] . cmd , cmds [ i ] . description , cmds [ i ] . cb )"	4802:2:120829:120897	4127092	0	True				
ANR	4127593	CallExpression	"r_cmd_add ( core -> rcmd , cmds [ i ] . cmd , cmds [ i ] . description , cmds [ i ] . cb )"		4127092	0					
ANR	4127594	Callee	r_cmd_add		4127092	0					
ANR	4127595	Identifier	r_cmd_add		4127092	0					
ANR	4127596	ArgumentList	core -> rcmd		4127092	1					
ANR	4127597	Argument	core -> rcmd		4127092	0					
ANR	4127598	PtrMemberAccess	core -> rcmd		4127092	0					
ANR	4127599	Identifier	core		4127092	0					
ANR	4127600	Identifier	rcmd		4127092	1					
ANR	4127601	Argument	cmds [ i ] . cmd		4127092	1					
ANR	4127602	MemberAccess	cmds [ i ] . cmd		4127092	0					
ANR	4127603	ArrayIndexing	cmds [ i ]		4127092	0					
ANR	4127604	Identifier	cmds		4127092	0					
ANR	4127605	Identifier	i		4127092	1					
ANR	4127606	Identifier	cmd		4127092	1					
ANR	4127607	Argument	cmds [ i ] . description		4127092	2					
ANR	4127608	MemberAccess	cmds [ i ] . description		4127092	0					
ANR	4127609	ArrayIndexing	cmds [ i ]		4127092	0					
ANR	4127610	Identifier	cmds		4127092	0					
ANR	4127611	Identifier	i		4127092	1					
ANR	4127612	Identifier	description		4127092	1					
ANR	4127613	Argument	cmds [ i ] . cb		4127092	3					
ANR	4127614	MemberAccess	cmds [ i ] . cb		4127092	0					
ANR	4127615	ArrayIndexing	cmds [ i ]		4127092	0					
ANR	4127616	Identifier	cmds		4127092	0					
ANR	4127617	Identifier	i		4127092	1					
ANR	4127618	Identifier	cb		4127092	1					
ANR	4127619	IfStatement	if ( cmds [ i ] . descriptor_init )		4127092	1					
ANR	4127620	Condition	cmds [ i ] . descriptor_init	4803:6:120905:120927	4127092	0	True				
ANR	4127621	MemberAccess	cmds [ i ] . descriptor_init		4127092	0					
ANR	4127622	ArrayIndexing	cmds [ i ]		4127092	0					
ANR	4127623	Identifier	cmds		4127092	0					
ANR	4127624	Identifier	i		4127092	1					
ANR	4127625	Identifier	descriptor_init		4127092	1					
ANR	4127626	CompoundStatement		70:31:3289:3289	4127092	1					
ANR	4127627	ExpressionStatement	cmds [ i ] . descriptor_init ( core )	4804:3:120935:120965	4127092	0	True				
ANR	4127628	CallExpression	cmds [ i ] . descriptor_init ( core )		4127092	0					
ANR	4127629	Callee	cmds [ i ] . descriptor_init		4127092	0					
ANR	4127630	MemberAccess	cmds [ i ] . descriptor_init		4127092	0					
ANR	4127631	ArrayIndexing	cmds [ i ]		4127092	0					
ANR	4127632	Identifier	cmds		4127092	0					
ANR	4127633	Identifier	i		4127092	1					
ANR	4127634	Identifier	descriptor_init		4127092	1					
ANR	4127635	ArgumentList	core		4127092	1					
ANR	4127636	Argument	core		4127092	0					
ANR	4127637	Identifier	core		4127092	0					
ANR	4127638	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4807:1:120975:121003	4127092	17	True				
ANR	4127639	Statement	(	4807:31:121005:121005	4127092	18	True				
ANR	4127640	Statement	core	4807:32:121006:121009	4127092	19	True				
ANR	4127641	Statement	","	4807:36:121010:121010	4127092	20	True				
ANR	4127642	Statement	","	4807:39:121013:121013	4127092	21	True				
ANR	4127643	Statement	dollar	4807:41:121015:121020	4127092	22	True				
ANR	4127644	Statement	)	4807:47:121021:121021	4127092	23	True				
ANR	4127645	ExpressionStatement		4807:48:121022:121022	4127092	24	True				
ANR	4127646	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4808:1:121025:121053	4127092	25	True				
ANR	4127647	Statement	(	4808:31:121055:121055	4127092	26	True				
ANR	4127648	Statement	core	4808:32:121056:121059	4127092	27	True				
ANR	4127649	Statement	","	4808:36:121060:121060	4127092	28	True				
ANR	4127650	Statement	%	4808:38:121062:121062	4127092	29	True				
ANR	4127651	Statement	","	4808:39:121063:121063	4127092	30	True				
ANR	4127652	Statement	percent	4808:41:121065:121071	4127092	31	True				
ANR	4127653	Statement	)	4808:48:121072:121072	4127092	32	True				
ANR	4127654	ExpressionStatement		4808:49:121073:121073	4127092	33	True				
ANR	4127655	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4809:1:121076:121104	4127092	34	True				
ANR	4127656	Statement	(	4809:31:121106:121106	4127092	35	True				
ANR	4127657	Statement	core	4809:32:121107:121110	4127092	36	True				
ANR	4127658	Statement	","	4809:36:121111:121111	4127092	37	True				
ANR	4127659	Statement	*	4809:38:121113:121113	4127092	38	True				
ANR	4127660	Statement	","	4809:39:121114:121114	4127092	39	True				
ANR	4127661	Statement	star	4809:41:121116:121119	4127092	40	True				
ANR	4127662	Statement	)	4809:45:121120:121120	4127092	41	True				
ANR	4127663	ExpressionStatement		4809:46:121121:121121	4127092	42	True				
ANR	4127664	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4810:1:121124:121152	4127092	43	True				
ANR	4127665	Statement	(	4810:31:121154:121154	4127092	44	True				
ANR	4127666	Statement	core	4810:32:121155:121158	4127092	45	True				
ANR	4127667	Statement	","	4810:36:121159:121159	4127092	46	True				
ANR	4127668	Statement	.	4810:38:121161:121161	4127092	47	True				
ANR	4127669	Statement	","	4810:39:121162:121162	4127092	48	True				
ANR	4127670	Statement	dot	4810:41:121164:121166	4127092	49	True				
ANR	4127671	Statement	)	4810:44:121167:121167	4127092	50	True				
ANR	4127672	ExpressionStatement		4810:45:121168:121168	4127092	51	True				
ANR	4127673	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	4811:1:121171:121199	4127092	52	True				
ANR	4127674	Statement	(	4811:31:121201:121201	4127092	53	True				
ANR	4127675	Statement	core	4811:32:121202:121205	4127092	54	True				
ANR	4127676	Statement	","	4811:36:121206:121206	4127092	55	True				
ANR	4127677	Statement	=	4811:38:121208:121208	4127092	56	True				
ANR	4127678	Statement	","	4811:39:121209:121209	4127092	57	True				
ANR	4127679	Statement	equal	4811:41:121211:121215	4127092	58	True				
ANR	4127680	Statement	)	4811:46:121216:121216	4127092	59	True				
ANR	4127681	ExpressionStatement		4811:47:121217:121217	4127092	60	True				
ANR	4127682	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , b )"	4812:1:121220:121251	4127092	61	True				
ANR	4127683	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , b )"		4127092	0					
ANR	4127684	Callee	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127685	Identifier	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127686	ArgumentList	core		4127092	1					
ANR	4127687	Argument	core		4127092	0					
ANR	4127688	Identifier	core		4127092	0					
ANR	4127689	Argument	b		4127092	1					
ANR	4127690	Identifier	b		4127092	0					
ANR	4127691	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , k )"	4813:1:121254:121285	4127092	62	True				
ANR	4127692	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , k )"		4127092	0					
ANR	4127693	Callee	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127694	Identifier	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127695	ArgumentList	core		4127092	1					
ANR	4127696	Argument	core		4127092	0					
ANR	4127697	Identifier	core		4127092	0					
ANR	4127698	Argument	k		4127092	1					
ANR	4127699	Identifier	k		4127092	0					
ANR	4127700	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , r )"	4814:1:121288:121319	4127092	63	True				
ANR	4127701	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , r )"		4127092	0					
ANR	4127702	Callee	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127703	Identifier	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127704	ArgumentList	core		4127092	1					
ANR	4127705	Argument	core		4127092	0					
ANR	4127706	Identifier	core		4127092	0					
ANR	4127707	Argument	r		4127092	1					
ANR	4127708	Identifier	r		4127092	0					
ANR	4127709	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , u )"	4815:1:121322:121353	4127092	64	True				
ANR	4127710	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , u )"		4127092	0					
ANR	4127711	Callee	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127712	Identifier	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127713	ArgumentList	core		4127092	1					
ANR	4127714	Argument	core		4127092	0					
ANR	4127715	Identifier	core		4127092	0					
ANR	4127716	Argument	u		4127092	1					
ANR	4127717	Identifier	u		4127092	0					
ANR	4127718	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , y )"	4816:1:121356:121387	4127092	65	True				
ANR	4127719	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , y )"		4127092	0					
ANR	4127720	Callee	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127721	Identifier	DEFINE_CMD_DESCRIPTOR		4127092	0					
ANR	4127722	ArgumentList	core		4127092	1					
ANR	4127723	Argument	core		4127092	0					
ANR	4127724	Identifier	core		4127092	0					
ANR	4127725	Argument	y		4127092	1					
ANR	4127726	Identifier	y		4127092	0					
ANR	4127727	ExpressionStatement	cmd_descriptor_init ( core )	4817:1:121390:121416	4127092	66	True				
ANR	4127728	CallExpression	cmd_descriptor_init ( core )		4127092	0					
ANR	4127729	Callee	cmd_descriptor_init		4127092	0					
ANR	4127730	Identifier	cmd_descriptor_init		4127092	0					
ANR	4127731	ArgumentList	core		4127092	1					
ANR	4127732	Argument	core		4127092	0					
ANR	4127733	Identifier	core		4127092	0					
ANR	4127734	ReturnType	R_API void		4127092	1					
ANR	4127735	Identifier	r_core_cmd_init		4127092	2					
ANR	4127736	ParameterList	RCore * core		4127092	3					
ANR	4127737	Parameter	RCore * core	4734:27:117627:117637	4127092	0	True				
ANR	4127738	ParameterType	RCore *		4127092	0					
ANR	4127739	Identifier	core		4127092	1					
ANR	4127740	CFGEntryNode	ENTRY		4127092		True				
ANR	4127741	CFGExitNode	EXIT		4127092		True				
ANR	4127742	Symbol	core -> rcmd -> macro . num		4127092						
ANR	4127743	Symbol	cmds [ i ] . cb		4127092						
ANR	4127744	Symbol	* core		4127092						
ANR	4127745	Symbol	core -> rcmd -> macro . user		4127092						
ANR	4127746	Symbol	r_core_cmd_nullcallback		4127092						
ANR	4127747	Symbol	r_cmd_new		4127092						
ANR	4127748	Symbol	core -> rcmd -> nullcallback		4127092						
ANR	4127749	Symbol	core -> rcmd -> macro . cmd		4127092						
ANR	4127750	Symbol	cmds		4127092						
ANR	4127751	Symbol	core -> cmd_descriptors		4127092						
ANR	4127752	Symbol	cmds [ i ] . description		4127092						
ANR	4127753	Symbol	cmds [ i ] . descriptor_init		4127092						
ANR	4127754	Symbol	core -> num		4127092						
ANR	4127755	Symbol	free		4127092						
ANR	4127756	Symbol	* * core		4127092						
ANR	4127757	Symbol	core -> rcmd -> macro		4127092						
ANR	4127758	Symbol	b		4127092						
ANR	4127759	Symbol	core -> rcmd		4127092						
ANR	4127760	Symbol	r_list_newf		4127092						
ANR	4127761	Symbol	i		4127092						
ANR	4127762	Symbol	core -> rcmd -> macro . cb_printf		4127092						
ANR	4127763	Symbol	k		4127092						
ANR	4127764	Symbol	core_cmd0_wrapper		4127092						
ANR	4127765	Symbol	core		4127092						
ANR	4127766	Symbol	* cmds		4127092						
ANR	4127767	Symbol	cmds [ i ] . cmd		4127092						
ANR	4127768	Symbol	r		4127092						
ANR	4127769	Symbol	* i		4127092						
ANR	4127770	Symbol	u		4127092						
ANR	4127771	Symbol	R_ARRAY_SIZE		4127092						
ANR	4127772	Symbol	r_cons_printf		4127092						
ANR	4127773	Symbol	y		4127092						
ANR	4127774	Symbol	* core -> rcmd		4127092						
