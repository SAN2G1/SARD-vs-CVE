command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6309743	File	data/converged/CVE-2019-16718~_radare2/tccpp.c								
ANR	6309744	DeclStmt									
ANR	6309745	Decl							ST_DATA int	ST_DATA int	tok_flags
ANR	6309746	DeclStmt									
ANR	6309747	Decl							ST_DATA int	ST_DATA int	parse_flags
ANR	6309748	DeclStmt									
ANR	6309749	Decl							struct BufferedFile	struct BufferedFile *	file
ANR	6309750	DeclStmt									
ANR	6309751	Decl							ST_DATA int	ST_DATA int	ch
ANR	6309752	Decl							ST_DATA int	ST_DATA int	tok
ANR	6309753	DeclStmt									
ANR	6309754	Decl							ST_DATA CValue	ST_DATA CValue	tokc
ANR	6309755	DeclStmt									
ANR	6309756	Decl							const int	const int *	macro_ptr
ANR	6309757	DeclStmt									
ANR	6309758	Decl							ST_DATA CString	ST_DATA CString	tokcstr
ANR	6309759	DeclStmt									
ANR	6309760	Decl							ST_DATA int	ST_DATA int	total_lines
ANR	6309761	DeclStmt									
ANR	6309762	Decl							ST_DATA int	ST_DATA int	total_bytes
ANR	6309763	DeclStmt									
ANR	6309764	Decl							ST_DATA int	ST_DATA int	tok_ident
ANR	6309765	DeclStmt									
ANR	6309766	Decl							ST_DATA TokenSym	ST_DATA TokenSym * *	table_ident
ANR	6309767	DeclStmt									
ANR	6309768	Decl							int	int *	macro_ptr_allocated
ANR	6309769	DeclStmt									
ANR	6309770	Decl							const int	const int *	unget_saved_macro_ptr
ANR	6309771	DeclStmt									
ANR	6309772	Decl							int	int [ TOK_MAX_SIZE + 1 ]	unget_saved_buffer
ANR	6309773	DeclStmt									
ANR	6309774	Decl							int	int	unget_buffer_enabled
ANR	6309775	DeclStmt									
ANR	6309776	Decl							TokenSym	TokenSym * [ TOK_HASH_SIZE ]	hash_ident
ANR	6309777	DeclStmt									
ANR	6309778	Decl							char	char [ STRING_MAX_SIZE + 1 ]	token_buf
ANR	6309779	DeclStmt									
ANR	6309780	Decl							unsigned char	unsigned char [ 256 - CH_EOF ]	isidnum_table
ANR	6309781	DeclStmt									
ANR	6309782	Decl							const char	const char [ ]	tcc_keywords
ANR	6309783	DeclStmt									
ANR	6309784	Decl							const unsigned char	const unsigned char [ ]	tok_two_chars
ANR	6309785	ClassDef	macro_level	76:0:2755:2818							
ANR	6309786	DeclStmt									
ANR	6309787	Decl							struct macro_level	struct macro_level *	prev
ANR	6309788	DeclStmt									
ANR	6309789	Decl							const int	const int *	p
ANR	6309790	DeclStmt									
ANR	6309791	Decl							void	void ( void )	next_nomacro_spc
ANR	6309792	DeclStmt									
ANR	6309793	Decl							void	"void ( TokenString * tok_str , Sym * * nested_list , const int * macro_str , struct macro_level * * can_read_stream )"	macro_subst
ANR	6309794	Function	skip	89:0:2991:3121							
ANR	6309795	FunctionDef	skip (int c)		6309794	0					
ANR	6309796	CompoundStatement		90:0:3016:3121	6309794	0					
ANR	6309797	IfStatement	if ( tok != c )		6309794	0					
ANR	6309798	Condition	tok != c	91:5:3023:3030	6309794	0	True				
ANR	6309799	EqualityExpression	tok != c		6309794	0		!=			
ANR	6309800	Identifier	tok		6309794	0					
ANR	6309801	Identifier	c		6309794	1					
ANR	6309802	CompoundStatement		2:15:16:16	6309794	1					
ANR	6309803	ExpressionStatement	"tcc_error ( ""'%c' expected (got \\""%s\\"")"" , c , get_tok_str ( tok , & tokc ) )"	92:2:3037:3106	6309794	0	True				
ANR	6309804	CallExpression	"tcc_error ( ""'%c' expected (got \\""%s\\"")"" , c , get_tok_str ( tok , & tokc ) )"		6309794	0					
ANR	6309805	Callee	tcc_error		6309794	0					
ANR	6309806	Identifier	tcc_error		6309794	0					
ANR	6309807	ArgumentList	"""'%c' expected (got \\""%s\\"")"""		6309794	1					
ANR	6309808	Argument	"""'%c' expected (got \\""%s\\"")"""		6309794	0					
ANR	6309809	PrimaryExpression	"""'%c' expected (got \\""%s\\"")"""		6309794	0					
ANR	6309810	Argument	c		6309794	1					
ANR	6309811	Identifier	c		6309794	0					
ANR	6309812	Argument	"get_tok_str ( tok , & tokc )"		6309794	2					
ANR	6309813	CallExpression	"get_tok_str ( tok , & tokc )"		6309794	0					
ANR	6309814	Callee	get_tok_str		6309794	0					
ANR	6309815	Identifier	get_tok_str		6309794	0					
ANR	6309816	ArgumentList	tok		6309794	1					
ANR	6309817	Argument	tok		6309794	0					
ANR	6309818	Identifier	tok		6309794	0					
ANR	6309819	Argument	& tokc		6309794	1					
ANR	6309820	UnaryOperationExpression	& tokc		6309794	0					
ANR	6309821	UnaryOperator	&		6309794	0					
ANR	6309822	Identifier	tokc		6309794	1					
ANR	6309823	ExpressionStatement	next ( )	94:1:3112:3119	6309794	1	True				
ANR	6309824	CallExpression	next ( )		6309794	0					
ANR	6309825	Callee	next		6309794	0					
ANR	6309826	Identifier	next		6309794	0					
ANR	6309827	ArgumentList			6309794	1					
ANR	6309828	ReturnType	ST_FUNC void		6309794	1					
ANR	6309829	Identifier	skip		6309794	2					
ANR	6309830	ParameterList	int c		6309794	3					
ANR	6309831	Parameter	int c	89:18:3009:3013	6309794	0	True				
ANR	6309832	ParameterType	int		6309794	0					
ANR	6309833	Identifier	c		6309794	1					
ANR	6309834	CFGEntryNode	ENTRY		6309794		True				
ANR	6309835	CFGExitNode	EXIT		6309794		True				
ANR	6309836	Symbol	tok		6309794						
ANR	6309837	Symbol	c		6309794						
ANR	6309838	Symbol	get_tok_str		6309794						
ANR	6309839	Symbol	& tokc		6309794						
ANR	6309840	Function	expect	97:0:3124:3196							
ANR	6309841	FunctionDef	expect (const char * msg)		6309840	0					
ANR	6309842	CompoundStatement		98:0:3161:3196	6309840	0					
ANR	6309843	ExpressionStatement	"tcc_error ( ""%s expected"" , msg )"	99:1:3164:3194	6309840	0	True				
ANR	6309844	CallExpression	"tcc_error ( ""%s expected"" , msg )"		6309840	0					
ANR	6309845	Callee	tcc_error		6309840	0					
ANR	6309846	Identifier	tcc_error		6309840	0					
ANR	6309847	ArgumentList	"""%s expected"""		6309840	1					
ANR	6309848	Argument	"""%s expected"""		6309840	0					
ANR	6309849	PrimaryExpression	"""%s expected"""		6309840	0					
ANR	6309850	Argument	msg		6309840	1					
ANR	6309851	Identifier	msg		6309840	0					
ANR	6309852	ReturnType	ST_FUNC void		6309840	1					
ANR	6309853	Identifier	expect		6309840	2					
ANR	6309854	ParameterList	const char * msg		6309840	3					
ANR	6309855	Parameter	const char * msg	97:20:3144:3158	6309840	0	True				
ANR	6309856	ParameterType	const char *		6309840	0					
ANR	6309857	Identifier	msg		6309840	1					
ANR	6309858	CFGEntryNode	ENTRY		6309840		True				
ANR	6309859	CFGExitNode	EXIT		6309840		True				
ANR	6309860	Symbol	msg		6309840						
ANR	6309861	Function	cstr_realloc	104:0:3302:3667							
ANR	6309862	FunctionDef	"cstr_realloc (CString * cstr , int new_size)"		6309861	0					
ANR	6309863	CompoundStatement		105:0:3356:3667	6309861	0					
ANR	6309864	IdentifierDeclStatement	int size ;	106:1:3359:3367	6309861	0	True				
ANR	6309865	IdentifierDecl	size		6309861	0					
ANR	6309866	IdentifierDeclType	int		6309861	0					
ANR	6309867	Identifier	size		6309861	1					
ANR	6309868	IdentifierDeclStatement	void * data ;	107:1:3370:3380	6309861	1	True				
ANR	6309869	IdentifierDecl	* data		6309861	0					
ANR	6309870	IdentifierDeclType	void *		6309861	0					
ANR	6309871	Identifier	data		6309861	1					
ANR	6309872	ExpressionStatement	size = cstr -> size_allocated	109:1:3384:3411	6309861	2	True				
ANR	6309873	AssignmentExpression	size = cstr -> size_allocated		6309861	0		=			
ANR	6309874	Identifier	size		6309861	0					
ANR	6309875	PtrMemberAccess	cstr -> size_allocated		6309861	1					
ANR	6309876	Identifier	cstr		6309861	0					
ANR	6309877	Identifier	size_allocated		6309861	1					
ANR	6309878	IfStatement	if ( size == 0 )		6309861	3					
ANR	6309879	Condition	size == 0	110:5:3418:3426	6309861	0	True				
ANR	6309880	EqualityExpression	size == 0		6309861	0		==			
ANR	6309881	Identifier	size		6309861	0					
ANR	6309882	PrimaryExpression	0		6309861	1					
ANR	6309883	CompoundStatement		6:16:72:72	6309861	1					
ANR	6309884	ExpressionStatement	size = 8	111:2:3433:3441	6309861	0	True				
ANR	6309885	AssignmentExpression	size = 8		6309861	0		=			
ANR	6309886	Identifier	size		6309861	0					
ANR	6309887	PrimaryExpression	8		6309861	1					
ANR	6309888	WhileStatement	while ( size < new_size )		6309861	4					
ANR	6309889	Condition	size < new_size	113:8:3505:3519	6309861	0	True				
ANR	6309890	RelationalExpression	size < new_size		6309861	0		<			
ANR	6309891	Identifier	size		6309861	0					
ANR	6309892	Identifier	new_size		6309861	1					
ANR	6309893	ExpressionStatement	size = size * 2	114:2:3524:3539	6309861	1	True				
ANR	6309894	AssignmentExpression	size = size * 2		6309861	0		=			
ANR	6309895	Identifier	size		6309861	0					
ANR	6309896	MultiplicativeExpression	size * 2		6309861	1		*			
ANR	6309897	Identifier	size		6309861	0					
ANR	6309898	PrimaryExpression	2		6309861	1					
ANR	6309899	ExpressionStatement	"data = realloc ( cstr -> data_allocated , size )"	115:1:3542:3585	6309861	5	True				
ANR	6309900	AssignmentExpression	"data = realloc ( cstr -> data_allocated , size )"		6309861	0		=			
ANR	6309901	Identifier	data		6309861	0					
ANR	6309902	CallExpression	"realloc ( cstr -> data_allocated , size )"		6309861	1					
ANR	6309903	Callee	realloc		6309861	0					
ANR	6309904	Identifier	realloc		6309861	0					
ANR	6309905	ArgumentList	cstr -> data_allocated		6309861	1					
ANR	6309906	Argument	cstr -> data_allocated		6309861	0					
ANR	6309907	PtrMemberAccess	cstr -> data_allocated		6309861	0					
ANR	6309908	Identifier	cstr		6309861	0					
ANR	6309909	Identifier	data_allocated		6309861	1					
ANR	6309910	Argument	size		6309861	1					
ANR	6309911	Identifier	size		6309861	0					
ANR	6309912	ExpressionStatement	cstr -> data_allocated = data	116:1:3588:3615	6309861	6	True				
ANR	6309913	AssignmentExpression	cstr -> data_allocated = data		6309861	0		=			
ANR	6309914	PtrMemberAccess	cstr -> data_allocated		6309861	0					
ANR	6309915	Identifier	cstr		6309861	0					
ANR	6309916	Identifier	data_allocated		6309861	1					
ANR	6309917	Identifier	data		6309861	1					
ANR	6309918	ExpressionStatement	cstr -> size_allocated = size	117:1:3618:3645	6309861	7	True				
ANR	6309919	AssignmentExpression	cstr -> size_allocated = size		6309861	0		=			
ANR	6309920	PtrMemberAccess	cstr -> size_allocated		6309861	0					
ANR	6309921	Identifier	cstr		6309861	0					
ANR	6309922	Identifier	size_allocated		6309861	1					
ANR	6309923	Identifier	size		6309861	1					
ANR	6309924	ExpressionStatement	cstr -> data = data	118:1:3648:3665	6309861	8	True				
ANR	6309925	AssignmentExpression	cstr -> data = data		6309861	0		=			
ANR	6309926	PtrMemberAccess	cstr -> data		6309861	0					
ANR	6309927	Identifier	cstr		6309861	0					
ANR	6309928	Identifier	data		6309861	1					
ANR	6309929	Identifier	data		6309861	1					
ANR	6309930	ReturnType	static void		6309861	1					
ANR	6309931	Identifier	cstr_realloc		6309861	2					
ANR	6309932	ParameterList	"CString * cstr , int new_size"		6309861	3					
ANR	6309933	Parameter	CString * cstr	104:25:3327:3339	6309861	0	True				
ANR	6309934	ParameterType	CString *		6309861	0					
ANR	6309935	Identifier	cstr		6309861	1					
ANR	6309936	Parameter	int new_size	104:40:3342:3353	6309861	1	True				
ANR	6309937	ParameterType	int		6309861	0					
ANR	6309938	Identifier	new_size		6309861	1					
ANR	6309939	CFGEntryNode	ENTRY		6309861		True				
ANR	6309940	CFGExitNode	EXIT		6309861		True				
ANR	6309941	Symbol	cstr		6309861						
ANR	6309942	Symbol	cstr -> size_allocated		6309861						
ANR	6309943	Symbol	size		6309861						
ANR	6309944	Symbol	data		6309861						
ANR	6309945	Symbol	new_size		6309861						
ANR	6309946	Symbol	* cstr		6309861						
ANR	6309947	Symbol	realloc		6309861						
ANR	6309948	Symbol	cstr -> data_allocated		6309861						
ANR	6309949	Symbol	cstr -> data		6309861						
ANR	6309950	Function	cstr_ccat	122:0:3687:3906							
ANR	6309951	FunctionDef	"cstr_ccat (CString * cstr , int ch)"		6309950	0					
ANR	6309952	CompoundStatement		123:0:3733:3906	6309950	0					
ANR	6309953	IdentifierDeclStatement	int size ;	124:1:3736:3744	6309950	0	True				
ANR	6309954	IdentifierDecl	size		6309950	0					
ANR	6309955	IdentifierDeclType	int		6309950	0					
ANR	6309956	Identifier	size		6309950	1					
ANR	6309957	ExpressionStatement	size = cstr -> size + 1	125:1:3747:3768	6309950	1	True				
ANR	6309958	AssignmentExpression	size = cstr -> size + 1		6309950	0		=			
ANR	6309959	Identifier	size		6309950	0					
ANR	6309960	AdditiveExpression	cstr -> size + 1		6309950	1		+			
ANR	6309961	PtrMemberAccess	cstr -> size		6309950	0					
ANR	6309962	Identifier	cstr		6309950	0					
ANR	6309963	Identifier	size		6309950	1					
ANR	6309964	PrimaryExpression	1		6309950	1					
ANR	6309965	IfStatement	if ( size > cstr -> size_allocated )		6309950	2					
ANR	6309966	Condition	size > cstr -> size_allocated	126:5:3775:3801	6309950	0	True				
ANR	6309967	RelationalExpression	size > cstr -> size_allocated		6309950	0		>			
ANR	6309968	Identifier	size		6309950	0					
ANR	6309969	PtrMemberAccess	cstr -> size_allocated		6309950	1					
ANR	6309970	Identifier	cstr		6309950	0					
ANR	6309971	Identifier	size_allocated		6309950	1					
ANR	6309972	CompoundStatement		4:34:70:70	6309950	1					
ANR	6309973	ExpressionStatement	"cstr_realloc ( cstr , size )"	127:2:3808:3833	6309950	0	True				
ANR	6309974	CallExpression	"cstr_realloc ( cstr , size )"		6309950	0					
ANR	6309975	Callee	cstr_realloc		6309950	0					
ANR	6309976	Identifier	cstr_realloc		6309950	0					
ANR	6309977	ArgumentList	cstr		6309950	1					
ANR	6309978	Argument	cstr		6309950	0					
ANR	6309979	Identifier	cstr		6309950	0					
ANR	6309980	Argument	size		6309950	1					
ANR	6309981	Identifier	size		6309950	0					
ANR	6309982	ExpressionStatement	( ( unsigned char * ) cstr -> data ) [ size - 1 ] = ch	129:1:3839:3884	6309950	3	True				
ANR	6309983	AssignmentExpression	( ( unsigned char * ) cstr -> data ) [ size - 1 ] = ch		6309950	0		=			
ANR	6309984	ArrayIndexing	( ( unsigned char * ) cstr -> data ) [ size - 1 ]		6309950	0					
ANR	6309985	CastExpression	( unsigned char * ) cstr -> data		6309950	0					
ANR	6309986	CastTarget	unsigned char *		6309950	0					
ANR	6309987	PtrMemberAccess	cstr -> data		6309950	1					
ANR	6309988	Identifier	cstr		6309950	0					
ANR	6309989	Identifier	data		6309950	1					
ANR	6309990	AdditiveExpression	size - 1		6309950	1		-			
ANR	6309991	Identifier	size		6309950	0					
ANR	6309992	PrimaryExpression	1		6309950	1					
ANR	6309993	Identifier	ch		6309950	1					
ANR	6309994	ExpressionStatement	cstr -> size = size	130:1:3887:3904	6309950	4	True				
ANR	6309995	AssignmentExpression	cstr -> size = size		6309950	0		=			
ANR	6309996	PtrMemberAccess	cstr -> size		6309950	0					
ANR	6309997	Identifier	cstr		6309950	0					
ANR	6309998	Identifier	size		6309950	1					
ANR	6309999	Identifier	size		6309950	1					
ANR	6310000	ReturnType	ST_FUNC void		6309950	1					
ANR	6310001	Identifier	cstr_ccat		6309950	2					
ANR	6310002	ParameterList	"CString * cstr , int ch"		6309950	3					
ANR	6310003	Parameter	CString * cstr	122:23:3710:3722	6309950	0	True				
ANR	6310004	ParameterType	CString *		6309950	0					
ANR	6310005	Identifier	cstr		6309950	1					
ANR	6310006	Parameter	int ch	122:38:3725:3730	6309950	1	True				
ANR	6310007	ParameterType	int		6309950	0					
ANR	6310008	Identifier	ch		6309950	1					
ANR	6310009	CFGEntryNode	ENTRY		6309950		True				
ANR	6310010	CFGExitNode	EXIT		6309950		True				
ANR	6310011	Symbol	cstr		6309950						
ANR	6310012	Symbol	cstr -> size_allocated		6309950						
ANR	6310013	Symbol	* size		6309950						
ANR	6310014	Symbol	size		6309950						
ANR	6310015	Symbol	ch		6309950						
ANR	6310016	Symbol	* cstr		6309950						
ANR	6310017	Symbol	cstr -> data		6309950						
ANR	6310018	Symbol	cstr -> size		6309950						
ANR	6310019	Symbol	* cstr -> data		6309950						
ANR	6310020	Symbol	* * cstr		6309950						
ANR	6310021	Function	cstr_cat	133:0:3909:4065							
ANR	6310022	FunctionDef	"cstr_cat (CString * cstr , const char * str)"		6310021	0					
ANR	6310023	CompoundStatement		134:0:3963:4065	6310021	0					
ANR	6310024	IdentifierDeclStatement	int c ;	135:1:3966:3971	6310021	0	True				
ANR	6310025	IdentifierDecl	c		6310021	0					
ANR	6310026	IdentifierDeclType	int		6310021	0					
ANR	6310027	Identifier	c		6310021	1					
ANR	6310028	ForStatement	for ( ; ; )		6310021	1					
ANR	6310029	CompoundStatement		3:10:19:19	6310021	0					
ANR	6310030	ExpressionStatement	c = * str	137:2:3987:3995	6310021	0	True				
ANR	6310031	AssignmentExpression	c = * str		6310021	0		=			
ANR	6310032	Identifier	c		6310021	0					
ANR	6310033	UnaryOperationExpression	* str		6310021	1					
ANR	6310034	UnaryOperator	*		6310021	0					
ANR	6310035	Identifier	str		6310021	1					
ANR	6310036	IfStatement	if ( c == '\\0' )		6310021	1					
ANR	6310037	Condition	c == '\\0'	138:6:4003:4011	6310021	0	True				
ANR	6310038	EqualityExpression	c == '\\0'		6310021	0		==			
ANR	6310039	Identifier	c		6310021	0					
ANR	6310040	PrimaryExpression	'\\0'		6310021	1					
ANR	6310041	CompoundStatement		5:17:50:50	6310021	1					
ANR	6310042	BreakStatement	break ;	139:3:4019:4024	6310021	0	True				
ANR	6310043	ExpressionStatement	"cstr_ccat ( cstr , c )"	141:2:4032:4051	6310021	2	True				
ANR	6310044	CallExpression	"cstr_ccat ( cstr , c )"		6310021	0					
ANR	6310045	Callee	cstr_ccat		6310021	0					
ANR	6310046	Identifier	cstr_ccat		6310021	0					
ANR	6310047	ArgumentList	cstr		6310021	1					
ANR	6310048	Argument	cstr		6310021	0					
ANR	6310049	Identifier	cstr		6310021	0					
ANR	6310050	Argument	c		6310021	1					
ANR	6310051	Identifier	c		6310021	0					
ANR	6310052	ExpressionStatement	str ++	142:2:4055:4060	6310021	3	True				
ANR	6310053	PostIncDecOperationExpression	str ++		6310021	0					
ANR	6310054	Identifier	str		6310021	0					
ANR	6310055	IncDec	++		6310021	1					
ANR	6310056	ReturnType	ST_FUNC void		6310021	1					
ANR	6310057	Identifier	cstr_cat		6310021	2					
ANR	6310058	ParameterList	"CString * cstr , const char * str"		6310021	3					
ANR	6310059	Parameter	CString * cstr	133:22:3931:3943	6310021	0	True				
ANR	6310060	ParameterType	CString *		6310021	0					
ANR	6310061	Identifier	cstr		6310021	1					
ANR	6310062	Parameter	const char * str	133:37:3946:3960	6310021	1	True				
ANR	6310063	ParameterType	const char *		6310021	0					
ANR	6310064	Identifier	str		6310021	1					
ANR	6310065	CFGEntryNode	ENTRY		6310021		True				
ANR	6310066	CFGExitNode	EXIT		6310021		True				
ANR	6310067	InfiniteForNode	true		6310021		True				
ANR	6310068	Symbol	cstr		6310021						
ANR	6310069	Symbol	str		6310021						
ANR	6310070	Symbol	c		6310021						
ANR	6310071	Symbol	* str		6310021						
ANR	6310072	Function	cstr_wccat	147:0:4090:4357							
ANR	6310073	FunctionDef	"cstr_wccat (CString * cstr , int ch)"		6310072	0					
ANR	6310074	CompoundStatement		148:0:4137:4357	6310072	0					
ANR	6310075	IdentifierDeclStatement	int size ;	149:1:4140:4148	6310072	0	True				
ANR	6310076	IdentifierDecl	size		6310072	0					
ANR	6310077	IdentifierDeclType	int		6310072	0					
ANR	6310078	Identifier	size		6310072	1					
ANR	6310079	ExpressionStatement	size = cstr -> size + sizeof ( nwchar_t )	150:1:4151:4187	6310072	1	True				
ANR	6310080	AssignmentExpression	size = cstr -> size + sizeof ( nwchar_t )		6310072	0		=			
ANR	6310081	Identifier	size		6310072	0					
ANR	6310082	AdditiveExpression	cstr -> size + sizeof ( nwchar_t )		6310072	1		+			
ANR	6310083	PtrMemberAccess	cstr -> size		6310072	0					
ANR	6310084	Identifier	cstr		6310072	0					
ANR	6310085	Identifier	size		6310072	1					
ANR	6310086	SizeofExpression	sizeof ( nwchar_t )		6310072	1					
ANR	6310087	Sizeof	sizeof		6310072	0					
ANR	6310088	SizeofOperand	nwchar_t		6310072	1					
ANR	6310089	IfStatement	if ( size > cstr -> size_allocated )		6310072	2					
ANR	6310090	Condition	size > cstr -> size_allocated	151:5:4194:4220	6310072	0	True				
ANR	6310091	RelationalExpression	size > cstr -> size_allocated		6310072	0		>			
ANR	6310092	Identifier	size		6310072	0					
ANR	6310093	PtrMemberAccess	cstr -> size_allocated		6310072	1					
ANR	6310094	Identifier	cstr		6310072	0					
ANR	6310095	Identifier	size_allocated		6310072	1					
ANR	6310096	CompoundStatement		4:34:85:85	6310072	1					
ANR	6310097	ExpressionStatement	"cstr_realloc ( cstr , size )"	152:2:4227:4252	6310072	0	True				
ANR	6310098	CallExpression	"cstr_realloc ( cstr , size )"		6310072	0					
ANR	6310099	Callee	cstr_realloc		6310072	0					
ANR	6310100	Identifier	cstr_realloc		6310072	0					
ANR	6310101	ArgumentList	cstr		6310072	1					
ANR	6310102	Argument	cstr		6310072	0					
ANR	6310103	Identifier	cstr		6310072	0					
ANR	6310104	Argument	size		6310072	1					
ANR	6310105	Identifier	size		6310072	0					
ANR	6310106	ExpressionStatement	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) ) = ch	154:1:4258:4335	6310072	3	True				
ANR	6310107	AssignmentExpression	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) ) = ch		6310072	0		=			
ANR	6310108	UnaryOperationExpression	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) )		6310072	0					
ANR	6310109	UnaryOperator	*		6310072	0					
ANR	6310110	CastExpression	( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) )		6310072	1					
ANR	6310111	CastTarget	nwchar_t *		6310072	0					
ANR	6310112	AdditiveExpression	( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t )		6310072	1		+			
ANR	6310113	CastExpression	( unsigned char * ) cstr -> data		6310072	0					
ANR	6310114	CastTarget	unsigned char *		6310072	0					
ANR	6310115	PtrMemberAccess	cstr -> data		6310072	1					
ANR	6310116	Identifier	cstr		6310072	0					
ANR	6310117	Identifier	data		6310072	1					
ANR	6310118	AdditiveExpression	size - sizeof ( nwchar_t )		6310072	1		-			
ANR	6310119	Identifier	size		6310072	0					
ANR	6310120	SizeofExpression	sizeof ( nwchar_t )		6310072	1					
ANR	6310121	Sizeof	sizeof		6310072	0					
ANR	6310122	SizeofOperand	nwchar_t		6310072	1					
ANR	6310123	Identifier	ch		6310072	1					
ANR	6310124	ExpressionStatement	cstr -> size = size	155:1:4338:4355	6310072	4	True				
ANR	6310125	AssignmentExpression	cstr -> size = size		6310072	0		=			
ANR	6310126	PtrMemberAccess	cstr -> size		6310072	0					
ANR	6310127	Identifier	cstr		6310072	0					
ANR	6310128	Identifier	size		6310072	1					
ANR	6310129	Identifier	size		6310072	1					
ANR	6310130	ReturnType	ST_FUNC void		6310072	1					
ANR	6310131	Identifier	cstr_wccat		6310072	2					
ANR	6310132	ParameterList	"CString * cstr , int ch"		6310072	3					
ANR	6310133	Parameter	CString * cstr	147:24:4114:4126	6310072	0	True				
ANR	6310134	ParameterType	CString *		6310072	0					
ANR	6310135	Identifier	cstr		6310072	1					
ANR	6310136	Parameter	int ch	147:39:4129:4134	6310072	1	True				
ANR	6310137	ParameterType	int		6310072	0					
ANR	6310138	Identifier	ch		6310072	1					
ANR	6310139	CFGEntryNode	ENTRY		6310072		True				
ANR	6310140	CFGExitNode	EXIT		6310072		True				
ANR	6310141	Symbol	cstr		6310072						
ANR	6310142	Symbol	cstr -> size_allocated		6310072						
ANR	6310143	Symbol	* ( nwchar_t * ) ( ( ( unsigned char * ) cstr -> data ) + size - sizeof ( nwchar_t ) )		6310072						
ANR	6310144	Symbol	* size		6310072						
ANR	6310145	Symbol	size		6310072						
ANR	6310146	Symbol	ch		6310072						
ANR	6310147	Symbol	* cstr		6310072						
ANR	6310148	Symbol	cstr -> data		6310072						
ANR	6310149	Symbol	cstr -> size		6310072						
ANR	6310150	Symbol	* cstr -> data		6310072						
ANR	6310151	Symbol	* * cstr		6310072						
ANR	6310152	Function	cstr_new	158:0:4360:4435							
ANR	6310153	FunctionDef	cstr_new (CString * cstr)		6310152	0					
ANR	6310154	CompoundStatement		159:0:4397:4435	6310152	0					
ANR	6310155	ExpressionStatement	"memset ( cstr , 0 , sizeof ( CString ) )"	160:1:4400:4433	6310152	0	True				
ANR	6310156	CallExpression	"memset ( cstr , 0 , sizeof ( CString ) )"		6310152	0					
ANR	6310157	Callee	memset		6310152	0					
ANR	6310158	Identifier	memset		6310152	0					
ANR	6310159	ArgumentList	cstr		6310152	1					
ANR	6310160	Argument	cstr		6310152	0					
ANR	6310161	Identifier	cstr		6310152	0					
ANR	6310162	Argument	0		6310152	1					
ANR	6310163	PrimaryExpression	0		6310152	0					
ANR	6310164	Argument	sizeof ( CString )		6310152	2					
ANR	6310165	SizeofExpression	sizeof ( CString )		6310152	0					
ANR	6310166	Sizeof	sizeof		6310152	0					
ANR	6310167	SizeofOperand	CString		6310152	1					
ANR	6310168	ReturnType	ST_FUNC void		6310152	1					
ANR	6310169	Identifier	cstr_new		6310152	2					
ANR	6310170	ParameterList	CString * cstr		6310152	3					
ANR	6310171	Parameter	CString * cstr	158:22:4382:4394	6310152	0	True				
ANR	6310172	ParameterType	CString *		6310152	0					
ANR	6310173	Identifier	cstr		6310152	1					
ANR	6310174	CFGEntryNode	ENTRY		6310152		True				
ANR	6310175	CFGExitNode	EXIT		6310152		True				
ANR	6310176	Symbol	cstr		6310152						
ANR	6310177	Function	cstr_free	164:0:4477:4565							
ANR	6310178	FunctionDef	cstr_free (CString * cstr)		6310177	0					
ANR	6310179	CompoundStatement		165:0:4515:4565	6310177	0					
ANR	6310180	ExpressionStatement	free ( cstr -> data_allocated )	166:1:4518:4545	6310177	0	True				
ANR	6310181	CallExpression	free ( cstr -> data_allocated )		6310177	0					
ANR	6310182	Callee	free		6310177	0					
ANR	6310183	Identifier	free		6310177	0					
ANR	6310184	ArgumentList	cstr -> data_allocated		6310177	1					
ANR	6310185	Argument	cstr -> data_allocated		6310177	0					
ANR	6310186	PtrMemberAccess	cstr -> data_allocated		6310177	0					
ANR	6310187	Identifier	cstr		6310177	0					
ANR	6310188	Identifier	data_allocated		6310177	1					
ANR	6310189	ExpressionStatement	cstr_new ( cstr )	167:1:4548:4563	6310177	1	True				
ANR	6310190	CallExpression	cstr_new ( cstr )		6310177	0					
ANR	6310191	Callee	cstr_new		6310177	0					
ANR	6310192	Identifier	cstr_new		6310177	0					
ANR	6310193	ArgumentList	cstr		6310177	1					
ANR	6310194	Argument	cstr		6310177	0					
ANR	6310195	Identifier	cstr		6310177	0					
ANR	6310196	ReturnType	ST_FUNC void		6310177	1					
ANR	6310197	Identifier	cstr_free		6310177	2					
ANR	6310198	ParameterList	CString * cstr		6310177	3					
ANR	6310199	Parameter	CString * cstr	164:23:4500:4512	6310177	0	True				
ANR	6310200	ParameterType	CString *		6310177	0					
ANR	6310201	Identifier	cstr		6310177	1					
ANR	6310202	CFGEntryNode	ENTRY		6310177		True				
ANR	6310203	CFGExitNode	EXIT		6310177		True				
ANR	6310204	Symbol	cstr		6310177						
ANR	6310205	Symbol	* cstr		6310177						
ANR	6310206	Symbol	cstr -> data_allocated		6310177						
ANR	6310207	Function	cstr_reset	171:0:4596:4654							
ANR	6310208	FunctionDef	cstr_reset (CString * cstr)		6310207	0					
ANR	6310209	CompoundStatement		172:0:4635:4654	6310207	0					
ANR	6310210	ExpressionStatement	cstr -> size = 0	173:1:4638:4652	6310207	0	True				
ANR	6310211	AssignmentExpression	cstr -> size = 0		6310207	0		=			
ANR	6310212	PtrMemberAccess	cstr -> size		6310207	0					
ANR	6310213	Identifier	cstr		6310207	0					
ANR	6310214	Identifier	size		6310207	1					
ANR	6310215	PrimaryExpression	0		6310207	1					
ANR	6310216	ReturnType	ST_FUNC void		6310207	1					
ANR	6310217	Identifier	cstr_reset		6310207	2					
ANR	6310218	ParameterList	CString * cstr		6310207	3					
ANR	6310219	Parameter	CString * cstr	171:24:4620:4632	6310207	0	True				
ANR	6310220	ParameterType	CString *		6310207	0					
ANR	6310221	Identifier	cstr		6310207	1					
ANR	6310222	CFGEntryNode	ENTRY		6310207		True				
ANR	6310223	CFGExitNode	EXIT		6310207		True				
ANR	6310224	Symbol	cstr		6310207						
ANR	6310225	Symbol	* cstr		6310207						
ANR	6310226	Symbol	cstr -> size		6310207						
ANR	6310227	Function	add_char	177:0:4678:5121							
ANR	6310228	FunctionDef	"add_char (CString * cstr , int c)"		6310227	0					
ANR	6310229	CompoundStatement		178:0:4721:5121	6310227	0					
ANR	6310230	IfStatement	"if ( c == '\\'' || c == '\\""' || c == '\\\\' )"		6310227	0					
ANR	6310231	Condition	"c == '\\'' || c == '\\""' || c == '\\\\'"	179:5:4728:4762	6310227	0	True				
ANR	6310232	OrExpression	"c == '\\'' || c == '\\""' || c == '\\\\'"		6310227	0		||			
ANR	6310233	EqualityExpression	c == '\\''		6310227	0		==			
ANR	6310234	Identifier	c		6310227	0					
ANR	6310235	PrimaryExpression	'\\''		6310227	1					
ANR	6310236	OrExpression	"c == '\\""' || c == '\\\\'"		6310227	1		||			
ANR	6310237	EqualityExpression	"c == '\\""'"		6310227	0		==			
ANR	6310238	Identifier	c		6310227	0					
ANR	6310239	PrimaryExpression	"'\\""'"		6310227	1					
ANR	6310240	EqualityExpression	c == '\\\\'		6310227	1		==			
ANR	6310241	Identifier	c		6310227	0					
ANR	6310242	PrimaryExpression	'\\\\'		6310227	1					
ANR	6310243	CompoundStatement		2:42:43:43	6310227	1					
ANR	6310244	ExpressionStatement	"cstr_ccat ( cstr , '\\\\' )"	181:2:4822:4844	6310227	0	True				
ANR	6310245	CallExpression	"cstr_ccat ( cstr , '\\\\' )"		6310227	0					
ANR	6310246	Callee	cstr_ccat		6310227	0					
ANR	6310247	Identifier	cstr_ccat		6310227	0					
ANR	6310248	ArgumentList	cstr		6310227	1					
ANR	6310249	Argument	cstr		6310227	0					
ANR	6310250	Identifier	cstr		6310227	0					
ANR	6310251	Argument	'\\\\'		6310227	1					
ANR	6310252	PrimaryExpression	'\\\\'		6310227	0					
ANR	6310253	IfStatement	if ( c >= 32 && c <= 126 )		6310227	1					
ANR	6310254	Condition	c >= 32 && c <= 126	183:5:4854:4872	6310227	0	True				
ANR	6310255	AndExpression	c >= 32 && c <= 126		6310227	0		&&			
ANR	6310256	RelationalExpression	c >= 32		6310227	0		>=			
ANR	6310257	Identifier	c		6310227	0					
ANR	6310258	PrimaryExpression	32		6310227	1					
ANR	6310259	RelationalExpression	c <= 126		6310227	1		<=			
ANR	6310260	Identifier	c		6310227	0					
ANR	6310261	PrimaryExpression	126		6310227	1					
ANR	6310262	CompoundStatement		6:26:153:153	6310227	1					
ANR	6310263	ExpressionStatement	"cstr_ccat ( cstr , c )"	184:2:4879:4898	6310227	0	True				
ANR	6310264	CallExpression	"cstr_ccat ( cstr , c )"		6310227	0					
ANR	6310265	Callee	cstr_ccat		6310227	0					
ANR	6310266	Identifier	cstr_ccat		6310227	0					
ANR	6310267	ArgumentList	cstr		6310227	1					
ANR	6310268	Argument	cstr		6310227	0					
ANR	6310269	Identifier	cstr		6310227	0					
ANR	6310270	Argument	c		6310227	1					
ANR	6310271	Identifier	c		6310227	0					
ANR	6310272	ElseStatement	else		6310227	0					
ANR	6310273	CompoundStatement		8:8:186:186	6310227	0					
ANR	6310274	ExpressionStatement	"cstr_ccat ( cstr , '\\\\' )"	186:2:4912:4934	6310227	0	True				
ANR	6310275	CallExpression	"cstr_ccat ( cstr , '\\\\' )"		6310227	0					
ANR	6310276	Callee	cstr_ccat		6310227	0					
ANR	6310277	Identifier	cstr_ccat		6310227	0					
ANR	6310278	ArgumentList	cstr		6310227	1					
ANR	6310279	Argument	cstr		6310227	0					
ANR	6310280	Identifier	cstr		6310227	0					
ANR	6310281	Argument	'\\\\'		6310227	1					
ANR	6310282	PrimaryExpression	'\\\\'		6310227	0					
ANR	6310283	IfStatement	if ( c == '\\n' )		6310227	1					
ANR	6310284	Condition	c == '\\n'	187:6:4942:4950	6310227	0	True				
ANR	6310285	EqualityExpression	c == '\\n'		6310227	0		==			
ANR	6310286	Identifier	c		6310227	0					
ANR	6310287	PrimaryExpression	'\\n'		6310227	1					
ANR	6310288	CompoundStatement		10:17:231:231	6310227	1					
ANR	6310289	ExpressionStatement	"cstr_ccat ( cstr , 'n' )"	188:3:4958:4979	6310227	0	True				
ANR	6310290	CallExpression	"cstr_ccat ( cstr , 'n' )"		6310227	0					
ANR	6310291	Callee	cstr_ccat		6310227	0					
ANR	6310292	Identifier	cstr_ccat		6310227	0					
ANR	6310293	ArgumentList	cstr		6310227	1					
ANR	6310294	Argument	cstr		6310227	0					
ANR	6310295	Identifier	cstr		6310227	0					
ANR	6310296	Argument	'n'		6310227	1					
ANR	6310297	PrimaryExpression	'n'		6310227	0					
ANR	6310298	ElseStatement	else		6310227	0					
ANR	6310299	CompoundStatement		12:9:268:268	6310227	0					
ANR	6310300	ExpressionStatement	"cstr_ccat ( cstr , '0' + ( ( c >> 6 ) & 7 ) )"	190:3:4995:5033	6310227	0	True				
ANR	6310301	CallExpression	"cstr_ccat ( cstr , '0' + ( ( c >> 6 ) & 7 ) )"		6310227	0					
ANR	6310302	Callee	cstr_ccat		6310227	0					
ANR	6310303	Identifier	cstr_ccat		6310227	0					
ANR	6310304	ArgumentList	cstr		6310227	1					
ANR	6310305	Argument	cstr		6310227	0					
ANR	6310306	Identifier	cstr		6310227	0					
ANR	6310307	Argument	'0' + ( ( c >> 6 ) & 7 )		6310227	1					
ANR	6310308	AdditiveExpression	'0' + ( ( c >> 6 ) & 7 )		6310227	0		+			
ANR	6310309	PrimaryExpression	'0'		6310227	0					
ANR	6310310	BitAndExpression	( c >> 6 ) & 7		6310227	1		&			
ANR	6310311	ShiftExpression	c >> 6		6310227	0		>>			
ANR	6310312	Identifier	c		6310227	0					
ANR	6310313	PrimaryExpression	6		6310227	1					
ANR	6310314	PrimaryExpression	7		6310227	1					
ANR	6310315	ExpressionStatement	"cstr_ccat ( cstr , '0' + ( ( c >> 3 ) & 7 ) )"	191:3:5038:5076	6310227	1	True				
ANR	6310316	CallExpression	"cstr_ccat ( cstr , '0' + ( ( c >> 3 ) & 7 ) )"		6310227	0					
ANR	6310317	Callee	cstr_ccat		6310227	0					
ANR	6310318	Identifier	cstr_ccat		6310227	0					
ANR	6310319	ArgumentList	cstr		6310227	1					
ANR	6310320	Argument	cstr		6310227	0					
ANR	6310321	Identifier	cstr		6310227	0					
ANR	6310322	Argument	'0' + ( ( c >> 3 ) & 7 )		6310227	1					
ANR	6310323	AdditiveExpression	'0' + ( ( c >> 3 ) & 7 )		6310227	0		+			
ANR	6310324	PrimaryExpression	'0'		6310227	0					
ANR	6310325	BitAndExpression	( c >> 3 ) & 7		6310227	1		&			
ANR	6310326	ShiftExpression	c >> 3		6310227	0		>>			
ANR	6310327	Identifier	c		6310227	0					
ANR	6310328	PrimaryExpression	3		6310227	1					
ANR	6310329	PrimaryExpression	7		6310227	1					
ANR	6310330	ExpressionStatement	"cstr_ccat ( cstr , '0' + ( c & 7 ) )"	192:3:5081:5112	6310227	2	True				
ANR	6310331	CallExpression	"cstr_ccat ( cstr , '0' + ( c & 7 ) )"		6310227	0					
ANR	6310332	Callee	cstr_ccat		6310227	0					
ANR	6310333	Identifier	cstr_ccat		6310227	0					
ANR	6310334	ArgumentList	cstr		6310227	1					
ANR	6310335	Argument	cstr		6310227	0					
ANR	6310336	Identifier	cstr		6310227	0					
ANR	6310337	Argument	'0' + ( c & 7 )		6310227	1					
ANR	6310338	AdditiveExpression	'0' + ( c & 7 )		6310227	0		+			
ANR	6310339	PrimaryExpression	'0'		6310227	0					
ANR	6310340	BitAndExpression	c & 7		6310227	1		&			
ANR	6310341	Identifier	c		6310227	0					
ANR	6310342	PrimaryExpression	7		6310227	1					
ANR	6310343	ReturnType	static void		6310227	1					
ANR	6310344	Identifier	add_char		6310227	2					
ANR	6310345	ParameterList	"CString * cstr , int c"		6310227	3					
ANR	6310346	Parameter	CString * cstr	177:21:4699:4711	6310227	0	True				
ANR	6310347	ParameterType	CString *		6310227	0					
ANR	6310348	Identifier	cstr		6310227	1					
ANR	6310349	Parameter	int c	177:36:4714:4718	6310227	1	True				
ANR	6310350	ParameterType	int		6310227	0					
ANR	6310351	Identifier	c		6310227	1					
ANR	6310352	CFGEntryNode	ENTRY		6310227		True				
ANR	6310353	CFGExitNode	EXIT		6310227		True				
ANR	6310354	Symbol	cstr		6310227						
ANR	6310355	Symbol	c		6310227						
ANR	6310356	Function	tok_alloc_new	199:0:5231:5909							
ANR	6310357	FunctionDef	"tok_alloc_new (TokenSym * * pts , const char * str , int len)"		6310356	0					
ANR	6310358	CompoundStatement		200:0:5304:5909	6310356	0					
ANR	6310359	IdentifierDeclStatement	"TokenSym * ts , * * ptable ;"	201:1:5307:5329	6310356	0	True				
ANR	6310360	IdentifierDecl	* ts		6310356	0					
ANR	6310361	IdentifierDeclType	TokenSym *		6310356	0					
ANR	6310362	Identifier	ts		6310356	1					
ANR	6310363	IdentifierDecl	* * ptable		6310356	1					
ANR	6310364	IdentifierDeclType	TokenSym * *		6310356	0					
ANR	6310365	Identifier	ptable		6310356	1					
ANR	6310366	IdentifierDeclStatement	int i ;	202:1:5332:5337	6310356	1	True				
ANR	6310367	IdentifierDecl	i		6310356	0					
ANR	6310368	IdentifierDeclType	int		6310356	0					
ANR	6310369	Identifier	i		6310356	1					
ANR	6310370	IfStatement	if ( tok_ident >= SYM_FIRST_ANOM )		6310356	2					
ANR	6310371	Condition	tok_ident >= SYM_FIRST_ANOM	204:5:5345:5371	6310356	0	True				
ANR	6310372	RelationalExpression	tok_ident >= SYM_FIRST_ANOM		6310356	0		>=			
ANR	6310373	Identifier	tok_ident		6310356	0					
ANR	6310374	Identifier	SYM_FIRST_ANOM		6310356	1					
ANR	6310375	CompoundStatement		5:34:69:69	6310356	1					
ANR	6310376	ExpressionStatement	"tcc_error ( ""memory full"" )"	205:2:5378:5403	6310356	0	True				
ANR	6310377	CallExpression	"tcc_error ( ""memory full"" )"		6310356	0					
ANR	6310378	Callee	tcc_error		6310356	0					
ANR	6310379	Identifier	tcc_error		6310356	0					
ANR	6310380	ArgumentList	"""memory full"""		6310356	1					
ANR	6310381	Argument	"""memory full"""		6310356	0					
ANR	6310382	PrimaryExpression	"""memory full"""		6310356	0					
ANR	6310383	ExpressionStatement	i = tok_ident - TOK_IDENT	209:1:5446:5471	6310356	3	True				
ANR	6310384	AssignmentExpression	i = tok_ident - TOK_IDENT		6310356	0		=			
ANR	6310385	Identifier	i		6310356	0					
ANR	6310386	AdditiveExpression	tok_ident - TOK_IDENT		6310356	1		-			
ANR	6310387	Identifier	tok_ident		6310356	0					
ANR	6310388	Identifier	TOK_IDENT		6310356	1					
ANR	6310389	IfStatement	if ( ( i % TOK_ALLOC_INCR ) == 0 )		6310356	4					
ANR	6310390	Condition	( i % TOK_ALLOC_INCR ) == 0	210:5:5478:5502	6310356	0	True				
ANR	6310391	EqualityExpression	( i % TOK_ALLOC_INCR ) == 0		6310356	0		==			
ANR	6310392	MultiplicativeExpression	i % TOK_ALLOC_INCR		6310356	0		%			
ANR	6310393	Identifier	i		6310356	0					
ANR	6310394	Identifier	TOK_ALLOC_INCR		6310356	1					
ANR	6310395	PrimaryExpression	0		6310356	1					
ANR	6310396	CompoundStatement		11:32:200:200	6310356	1					
ANR	6310397	ExpressionStatement	"ptable = realloc ( table_ident , ( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * ) )"	211:2:5509:5582	6310356	0	True				
ANR	6310398	AssignmentExpression	"ptable = realloc ( table_ident , ( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * ) )"		6310356	0		=			
ANR	6310399	Identifier	ptable		6310356	0					
ANR	6310400	CallExpression	"realloc ( table_ident , ( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * ) )"		6310356	1					
ANR	6310401	Callee	realloc		6310356	0					
ANR	6310402	Identifier	realloc		6310356	0					
ANR	6310403	ArgumentList	table_ident		6310356	1					
ANR	6310404	Argument	table_ident		6310356	0					
ANR	6310405	Identifier	table_ident		6310356	0					
ANR	6310406	Argument	( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * )		6310356	1					
ANR	6310407	MultiplicativeExpression	( i + TOK_ALLOC_INCR ) * sizeof ( TokenSym * )		6310356	0		*			
ANR	6310408	AdditiveExpression	i + TOK_ALLOC_INCR		6310356	0		+			
ANR	6310409	Identifier	i		6310356	0					
ANR	6310410	Identifier	TOK_ALLOC_INCR		6310356	1					
ANR	6310411	SizeofExpression	sizeof ( TokenSym * )		6310356	1					
ANR	6310412	Sizeof	sizeof		6310356	0					
ANR	6310413	SizeofOperand	TokenSym *		6310356	1					
ANR	6310414	ExpressionStatement	table_ident = ptable	212:2:5586:5606	6310356	1	True				
ANR	6310415	AssignmentExpression	table_ident = ptable		6310356	0		=			
ANR	6310416	Identifier	table_ident		6310356	0					
ANR	6310417	Identifier	ptable		6310356	1					
ANR	6310418	ExpressionStatement	ts = malloc ( sizeof ( TokenSym ) + len )	214:1:5612:5648	6310356	5	True				
ANR	6310419	AssignmentExpression	ts = malloc ( sizeof ( TokenSym ) + len )		6310356	0		=			
ANR	6310420	Identifier	ts		6310356	0					
ANR	6310421	CallExpression	malloc ( sizeof ( TokenSym ) + len )		6310356	1					
ANR	6310422	Callee	malloc		6310356	0					
ANR	6310423	Identifier	malloc		6310356	0					
ANR	6310424	ArgumentList	sizeof ( TokenSym ) + len		6310356	1					
ANR	6310425	Argument	sizeof ( TokenSym ) + len		6310356	0					
ANR	6310426	AdditiveExpression	sizeof ( TokenSym ) + len		6310356	0		+			
ANR	6310427	SizeofExpression	sizeof ( TokenSym )		6310356	0					
ANR	6310428	Sizeof	sizeof		6310356	0					
ANR	6310429	SizeofOperand	TokenSym		6310356	1					
ANR	6310430	Identifier	len		6310356	1					
ANR	6310431	ExpressionStatement	table_ident [ i ] = ts	215:1:5651:5670	6310356	6	True				
ANR	6310432	AssignmentExpression	table_ident [ i ] = ts		6310356	0		=			
ANR	6310433	ArrayIndexing	table_ident [ i ]		6310356	0					
ANR	6310434	Identifier	table_ident		6310356	0					
ANR	6310435	Identifier	i		6310356	1					
ANR	6310436	Identifier	ts		6310356	1					
ANR	6310437	ExpressionStatement	ts -> tok = tok_ident ++	216:1:5673:5694	6310356	7	True				
ANR	6310438	AssignmentExpression	ts -> tok = tok_ident ++		6310356	0		=			
ANR	6310439	PtrMemberAccess	ts -> tok		6310356	0					
ANR	6310440	Identifier	ts		6310356	0					
ANR	6310441	Identifier	tok		6310356	1					
ANR	6310442	PostIncDecOperationExpression	tok_ident ++		6310356	1					
ANR	6310443	Identifier	tok_ident		6310356	0					
ANR	6310444	IncDec	++		6310356	1					
ANR	6310445	ExpressionStatement	ts -> sym_define = NULL	217:1:5697:5718	6310356	8	True				
ANR	6310446	AssignmentExpression	ts -> sym_define = NULL		6310356	0		=			
ANR	6310447	PtrMemberAccess	ts -> sym_define		6310356	0					
ANR	6310448	Identifier	ts		6310356	0					
ANR	6310449	Identifier	sym_define		6310356	1					
ANR	6310450	Identifier	NULL		6310356	1					
ANR	6310451	ExpressionStatement	ts -> sym_label = NULL	218:1:5721:5741	6310356	9	True				
ANR	6310452	AssignmentExpression	ts -> sym_label = NULL		6310356	0		=			
ANR	6310453	PtrMemberAccess	ts -> sym_label		6310356	0					
ANR	6310454	Identifier	ts		6310356	0					
ANR	6310455	Identifier	sym_label		6310356	1					
ANR	6310456	Identifier	NULL		6310356	1					
ANR	6310457	ExpressionStatement	ts -> sym_struct = NULL	219:1:5744:5765	6310356	10	True				
ANR	6310458	AssignmentExpression	ts -> sym_struct = NULL		6310356	0		=			
ANR	6310459	PtrMemberAccess	ts -> sym_struct		6310356	0					
ANR	6310460	Identifier	ts		6310356	0					
ANR	6310461	Identifier	sym_struct		6310356	1					
ANR	6310462	Identifier	NULL		6310356	1					
ANR	6310463	ExpressionStatement	ts -> sym_identifier = NULL	220:1:5768:5793	6310356	11	True				
ANR	6310464	AssignmentExpression	ts -> sym_identifier = NULL		6310356	0		=			
ANR	6310465	PtrMemberAccess	ts -> sym_identifier		6310356	0					
ANR	6310466	Identifier	ts		6310356	0					
ANR	6310467	Identifier	sym_identifier		6310356	1					
ANR	6310468	Identifier	NULL		6310356	1					
ANR	6310469	ExpressionStatement	ts -> len = len	221:1:5796:5809	6310356	12	True				
ANR	6310470	AssignmentExpression	ts -> len = len		6310356	0		=			
ANR	6310471	PtrMemberAccess	ts -> len		6310356	0					
ANR	6310472	Identifier	ts		6310356	0					
ANR	6310473	Identifier	len		6310356	1					
ANR	6310474	Identifier	len		6310356	1					
ANR	6310475	ExpressionStatement	ts -> hash_next = NULL	222:1:5812:5832	6310356	13	True				
ANR	6310476	AssignmentExpression	ts -> hash_next = NULL		6310356	0		=			
ANR	6310477	PtrMemberAccess	ts -> hash_next		6310356	0					
ANR	6310478	Identifier	ts		6310356	0					
ANR	6310479	Identifier	hash_next		6310356	1					
ANR	6310480	Identifier	NULL		6310356	1					
ANR	6310481	ExpressionStatement	"memcpy ( ts -> str , str , len )"	223:1:5835:5861	6310356	14	True				
ANR	6310482	CallExpression	"memcpy ( ts -> str , str , len )"		6310356	0					
ANR	6310483	Callee	memcpy		6310356	0					
ANR	6310484	Identifier	memcpy		6310356	0					
ANR	6310485	ArgumentList	ts -> str		6310356	1					
ANR	6310486	Argument	ts -> str		6310356	0					
ANR	6310487	PtrMemberAccess	ts -> str		6310356	0					
ANR	6310488	Identifier	ts		6310356	0					
ANR	6310489	Identifier	str		6310356	1					
ANR	6310490	Argument	str		6310356	1					
ANR	6310491	Identifier	str		6310356	0					
ANR	6310492	Argument	len		6310356	2					
ANR	6310493	Identifier	len		6310356	0					
ANR	6310494	ExpressionStatement	ts -> str [ len ] = '\\0'	224:1:5864:5883	6310356	15	True				
ANR	6310495	AssignmentExpression	ts -> str [ len ] = '\\0'		6310356	0		=			
ANR	6310496	ArrayIndexing	ts -> str [ len ]		6310356	0					
ANR	6310497	PtrMemberAccess	ts -> str		6310356	0					
ANR	6310498	Identifier	ts		6310356	0					
ANR	6310499	Identifier	str		6310356	1					
ANR	6310500	Identifier	len		6310356	1					
ANR	6310501	PrimaryExpression	'\\0'		6310356	1					
ANR	6310502	ExpressionStatement	* pts = ts	225:1:5886:5895	6310356	16	True				
ANR	6310503	AssignmentExpression	* pts = ts		6310356	0		=			
ANR	6310504	UnaryOperationExpression	* pts		6310356	0					
ANR	6310505	UnaryOperator	*		6310356	0					
ANR	6310506	Identifier	pts		6310356	1					
ANR	6310507	Identifier	ts		6310356	1					
ANR	6310508	ReturnStatement	return ts ;	226:1:5898:5907	6310356	17	True				
ANR	6310509	Identifier	ts		6310356	0					
ANR	6310510	ReturnType	static TokenSym *		6310356	1					
ANR	6310511	Identifier	tok_alloc_new		6310356	2					
ANR	6310512	ParameterList	"TokenSym * * pts , const char * str , int len"		6310356	3					
ANR	6310513	Parameter	TokenSym * * pts	199:31:5262:5275	6310356	0	True				
ANR	6310514	ParameterType	TokenSym * *		6310356	0					
ANR	6310515	Identifier	pts		6310356	1					
ANR	6310516	Parameter	const char * str	199:47:5278:5292	6310356	1	True				
ANR	6310517	ParameterType	const char *		6310356	0					
ANR	6310518	Identifier	str		6310356	1					
ANR	6310519	Parameter	int len	199:64:5295:5301	6310356	2	True				
ANR	6310520	ParameterType	int		6310356	0					
ANR	6310521	Identifier	len		6310356	1					
ANR	6310522	CFGEntryNode	ENTRY		6310356		True				
ANR	6310523	CFGExitNode	EXIT		6310356		True				
ANR	6310524	Symbol	TOK_ALLOC_INCR		6310356						
ANR	6310525	Symbol	realloc		6310356						
ANR	6310526	Symbol	* table_ident		6310356						
ANR	6310527	Symbol	ts -> len		6310356						
ANR	6310528	Symbol	len		6310356						
ANR	6310529	Symbol	ts -> tok		6310356						
ANR	6310530	Symbol	* pts		6310356						
ANR	6310531	Symbol	ts -> sym_identifier		6310356						
ANR	6310532	Symbol	malloc		6310356						
ANR	6310533	Symbol	SYM_FIRST_ANOM		6310356						
ANR	6310534	Symbol	NULL		6310356						
ANR	6310535	Symbol	TOK_IDENT		6310356						
ANR	6310536	Symbol	* ts -> str		6310356						
ANR	6310537	Symbol	* ts		6310356						
ANR	6310538	Symbol	ts -> sym_label		6310356						
ANR	6310539	Symbol	i		6310356						
ANR	6310540	Symbol	* * ts		6310356						
ANR	6310541	Symbol	pts		6310356						
ANR	6310542	Symbol	str		6310356						
ANR	6310543	Symbol	ts -> sym_define		6310356						
ANR	6310544	Symbol	ptable		6310356						
ANR	6310545	Symbol	table_ident		6310356						
ANR	6310546	Symbol	tok_ident		6310356						
ANR	6310547	Symbol	* i		6310356						
ANR	6310548	Symbol	ts -> str		6310356						
ANR	6310549	Symbol	ts -> sym_struct		6310356						
ANR	6310550	Symbol	ts -> hash_next		6310356						
ANR	6310551	Symbol	ts		6310356						
ANR	6310552	Symbol	* len		6310356						
ANR	6310553	Function	tok_alloc	233:0:6026:6479							
ANR	6310554	FunctionDef	"tok_alloc (const char * str , int len)"		6310553	0					
ANR	6310555	CompoundStatement		234:0:6080:6479	6310553	0					
ANR	6310556	IdentifierDeclStatement	"TokenSym * ts , * * pts ;"	235:1:6083:6102	6310553	0	True				
ANR	6310557	IdentifierDecl	* ts		6310553	0					
ANR	6310558	IdentifierDeclType	TokenSym *		6310553	0					
ANR	6310559	Identifier	ts		6310553	1					
ANR	6310560	IdentifierDecl	* * pts		6310553	1					
ANR	6310561	IdentifierDeclType	TokenSym * *		6310553	0					
ANR	6310562	Identifier	pts		6310553	1					
ANR	6310563	IdentifierDeclStatement	int i ;	236:1:6105:6110	6310553	1	True				
ANR	6310564	IdentifierDecl	i		6310553	0					
ANR	6310565	IdentifierDeclType	int		6310553	0					
ANR	6310566	Identifier	i		6310553	1					
ANR	6310567	IdentifierDeclStatement	unsigned int h ;	237:1:6113:6127	6310553	2	True				
ANR	6310568	IdentifierDecl	h		6310553	0					
ANR	6310569	IdentifierDeclType	unsigned int		6310553	0					
ANR	6310570	Identifier	h		6310553	1					
ANR	6310571	ExpressionStatement	h = TOK_HASH_INIT	239:1:6131:6148	6310553	3	True				
ANR	6310572	AssignmentExpression	h = TOK_HASH_INIT		6310553	0		=			
ANR	6310573	Identifier	h		6310553	0					
ANR	6310574	Identifier	TOK_HASH_INIT		6310553	1					
ANR	6310575	ForStatement	for ( i = 0 ; i < len ; i ++ )		6310553	4					
ANR	6310576	ForInit	i = 0 ;	240:6:6156:6161	6310553	0	True				
ANR	6310577	AssignmentExpression	i = 0		6310553	0		=			
ANR	6310578	Identifier	i		6310553	0					
ANR	6310579	PrimaryExpression	0		6310553	1					
ANR	6310580	Condition	i < len	240:13:6163:6169	6310553	1	True				
ANR	6310581	RelationalExpression	i < len		6310553	0		<			
ANR	6310582	Identifier	i		6310553	0					
ANR	6310583	Identifier	len		6310553	1					
ANR	6310584	PostIncDecOperationExpression	i ++	240:22:6172:6174	6310553	2	True				
ANR	6310585	Identifier	i		6310553	0					
ANR	6310586	IncDec	++		6310553	1					
ANR	6310587	CompoundStatement		7:27:96:96	6310553	3					
ANR	6310588	ExpressionStatement	"h = TOK_HASH_FUNC ( h , ( ( unsigned char * ) str ) [ i ] )"	241:2:6181:6230	6310553	0	True				
ANR	6310589	AssignmentExpression	"h = TOK_HASH_FUNC ( h , ( ( unsigned char * ) str ) [ i ] )"		6310553	0		=			
ANR	6310590	Identifier	h		6310553	0					
ANR	6310591	CallExpression	"TOK_HASH_FUNC ( h , ( ( unsigned char * ) str ) [ i ] )"		6310553	1					
ANR	6310592	Callee	TOK_HASH_FUNC		6310553	0					
ANR	6310593	Identifier	TOK_HASH_FUNC		6310553	0					
ANR	6310594	ArgumentList	h		6310553	1					
ANR	6310595	Argument	h		6310553	0					
ANR	6310596	Identifier	h		6310553	0					
ANR	6310597	Argument	( ( unsigned char * ) str ) [ i ]		6310553	1					
ANR	6310598	ArrayIndexing	( ( unsigned char * ) str ) [ i ]		6310553	0					
ANR	6310599	CastExpression	( unsigned char * ) str		6310553	0					
ANR	6310600	CastTarget	unsigned char *		6310553	0					
ANR	6310601	Identifier	str		6310553	1					
ANR	6310602	Identifier	i		6310553	1					
ANR	6310603	ExpressionStatement	h &= ( TOK_HASH_SIZE - 1 )	243:1:6236:6260	6310553	5	True				
ANR	6310604	AssignmentExpression	h &= ( TOK_HASH_SIZE - 1 )		6310553	0		&=			
ANR	6310605	Identifier	h		6310553	0					
ANR	6310606	AdditiveExpression	TOK_HASH_SIZE - 1		6310553	1		-			
ANR	6310607	Identifier	TOK_HASH_SIZE		6310553	0					
ANR	6310608	PrimaryExpression	1		6310553	1					
ANR	6310609	ExpressionStatement	pts = & hash_ident [ h ]	245:1:6264:6284	6310553	6	True				
ANR	6310610	AssignmentExpression	pts = & hash_ident [ h ]		6310553	0		=			
ANR	6310611	Identifier	pts		6310553	0					
ANR	6310612	UnaryOperationExpression	& hash_ident [ h ]		6310553	1					
ANR	6310613	UnaryOperator	&		6310553	0					
ANR	6310614	ArrayIndexing	hash_ident [ h ]		6310553	1					
ANR	6310615	Identifier	hash_ident		6310553	0					
ANR	6310616	Identifier	h		6310553	1					
ANR	6310617	ForStatement	for ( ; ; )		6310553	7					
ANR	6310618	CompoundStatement		13:10:215:215	6310553	0					
ANR	6310619	ExpressionStatement	ts = * pts	247:2:6300:6309	6310553	0	True				
ANR	6310620	AssignmentExpression	ts = * pts		6310553	0		=			
ANR	6310621	Identifier	ts		6310553	0					
ANR	6310622	UnaryOperationExpression	* pts		6310553	1					
ANR	6310623	UnaryOperator	*		6310553	0					
ANR	6310624	Identifier	pts		6310553	1					
ANR	6310625	IfStatement	if ( ! ts )		6310553	1					
ANR	6310626	Condition	! ts	248:6:6317:6319	6310553	0	True				
ANR	6310627	UnaryOperationExpression	! ts		6310553	0					
ANR	6310628	UnaryOperator	!		6310553	0					
ANR	6310629	Identifier	ts		6310553	1					
ANR	6310630	CompoundStatement		15:11:241:241	6310553	1					
ANR	6310631	BreakStatement	break ;	249:3:6327:6332	6310553	0	True				
ANR	6310632	IfStatement	"if ( ts -> len == len && ! memcmp ( ts -> str , str , len ) )"		6310553	2					
ANR	6310633	Condition	"ts -> len == len && ! memcmp ( ts -> str , str , len )"	251:6:6344:6388	6310553	0	True				
ANR	6310634	AndExpression	"ts -> len == len && ! memcmp ( ts -> str , str , len )"		6310553	0		&&			
ANR	6310635	EqualityExpression	ts -> len == len		6310553	0		==			
ANR	6310636	PtrMemberAccess	ts -> len		6310553	0					
ANR	6310637	Identifier	ts		6310553	0					
ANR	6310638	Identifier	len		6310553	1					
ANR	6310639	Identifier	len		6310553	1					
ANR	6310640	UnaryOperationExpression	"! memcmp ( ts -> str , str , len )"		6310553	1					
ANR	6310641	UnaryOperator	!		6310553	0					
ANR	6310642	CallExpression	"memcmp ( ts -> str , str , len )"		6310553	1					
ANR	6310643	Callee	memcmp		6310553	0					
ANR	6310644	Identifier	memcmp		6310553	0					
ANR	6310645	ArgumentList	ts -> str		6310553	1					
ANR	6310646	Argument	ts -> str		6310553	0					
ANR	6310647	PtrMemberAccess	ts -> str		6310553	0					
ANR	6310648	Identifier	ts		6310553	0					
ANR	6310649	Identifier	str		6310553	1					
ANR	6310650	Argument	str		6310553	1					
ANR	6310651	Identifier	str		6310553	0					
ANR	6310652	Argument	len		6310553	2					
ANR	6310653	Identifier	len		6310553	0					
ANR	6310654	CompoundStatement		18:53:310:310	6310553	1					
ANR	6310655	ReturnStatement	return ts ;	252:3:6396:6405	6310553	0	True				
ANR	6310656	Identifier	ts		6310553	0					
ANR	6310657	ExpressionStatement	pts = & ( ts -> hash_next )	254:2:6413:6435	6310553	3	True				
ANR	6310658	AssignmentExpression	pts = & ( ts -> hash_next )		6310553	0		=			
ANR	6310659	Identifier	pts		6310553	0					
ANR	6310660	UnaryOperationExpression	& ( ts -> hash_next )		6310553	1					
ANR	6310661	UnaryOperator	&		6310553	0					
ANR	6310662	PtrMemberAccess	ts -> hash_next		6310553	1					
ANR	6310663	Identifier	ts		6310553	0					
ANR	6310664	Identifier	hash_next		6310553	1					
ANR	6310665	ReturnStatement	"return tok_alloc_new ( pts , str , len ) ;"	256:1:6441:6477	6310553	8	True				
ANR	6310666	CallExpression	"tok_alloc_new ( pts , str , len )"		6310553	0					
ANR	6310667	Callee	tok_alloc_new		6310553	0					
ANR	6310668	Identifier	tok_alloc_new		6310553	0					
ANR	6310669	ArgumentList	pts		6310553	1					
ANR	6310670	Argument	pts		6310553	0					
ANR	6310671	Identifier	pts		6310553	0					
ANR	6310672	Argument	str		6310553	1					
ANR	6310673	Identifier	str		6310553	0					
ANR	6310674	Argument	len		6310553	2					
ANR	6310675	Identifier	len		6310553	0					
ANR	6310676	ReturnType	ST_FUNC TokenSym *		6310553	1					
ANR	6310677	Identifier	tok_alloc		6310553	2					
ANR	6310678	ParameterList	"const char * str , int len"		6310553	3					
ANR	6310679	Parameter	const char * str	233:28:6054:6068	6310553	0	True				
ANR	6310680	ParameterType	const char *		6310553	0					
ANR	6310681	Identifier	str		6310553	1					
ANR	6310682	Parameter	int len	233:45:6071:6077	6310553	1	True				
ANR	6310683	ParameterType	int		6310553	0					
ANR	6310684	Identifier	len		6310553	1					
ANR	6310685	CFGEntryNode	ENTRY		6310553		True				
ANR	6310686	CFGExitNode	EXIT		6310553		True				
ANR	6310687	InfiniteForNode	true		6310553		True				
ANR	6310688	Symbol	& ts -> hash_next		6310553						
ANR	6310689	Symbol	TOK_HASH_SIZE		6310553						
ANR	6310690	Symbol	* ts		6310553						
ANR	6310691	Symbol	h		6310553						
ANR	6310692	Symbol	i		6310553						
ANR	6310693	Symbol	pts		6310553						
ANR	6310694	Symbol	TOK_HASH_INIT		6310553						
ANR	6310695	Symbol	str		6310553						
ANR	6310696	Symbol	tok_alloc_new		6310553						
ANR	6310697	Symbol	* i		6310553						
ANR	6310698	Symbol	ts -> len		6310553						
ANR	6310699	Symbol	memcmp		6310553						
ANR	6310700	Symbol	len		6310553						
ANR	6310701	Symbol	ts -> str		6310553						
ANR	6310702	Symbol	hash_ident		6310553						
ANR	6310703	Symbol	* pts		6310553						
ANR	6310704	Symbol	* str		6310553						
ANR	6310705	Symbol	TOK_HASH_FUNC		6310553						
ANR	6310706	Symbol	ts		6310553						
ANR	6310707	Function	get_tok_str	261:0:6533:8897							
ANR	6310708	FunctionDef	"get_tok_str (int v , CValue * cv)"		6310707	0					
ANR	6310709	CompoundStatement		262:0:6578:8897	6310707	0					
ANR	6310710	Statement	static	263:1:6581:6586	6310707	0	True				
ANR	6310711	IdentifierDeclStatement	char buf [ STRING_MAX_SIZE + 1 ] ;	263:8:6588:6617	6310707	1	True				
ANR	6310712	IdentifierDecl	buf [ STRING_MAX_SIZE + 1 ]		6310707	0					
ANR	6310713	IdentifierDeclType	char [ STRING_MAX_SIZE + 1 ]		6310707	0					
ANR	6310714	Identifier	buf		6310707	1					
ANR	6310715	AdditiveExpression	STRING_MAX_SIZE + 1		6310707	2		+			
ANR	6310716	Identifier	STRING_MAX_SIZE		6310707	0					
ANR	6310717	PrimaryExpression	1		6310707	1					
ANR	6310718	Statement	static	264:1:6620:6625	6310707	2	True				
ANR	6310719	IdentifierDeclStatement	CString cstr_buf ;	264:8:6627:6643	6310707	3	True				
ANR	6310720	IdentifierDecl	cstr_buf		6310707	0					
ANR	6310721	IdentifierDeclType	CString		6310707	0					
ANR	6310722	Identifier	cstr_buf		6310707	1					
ANR	6310723	IdentifierDeclStatement	CString * cstr ;	265:1:6646:6659	6310707	4	True				
ANR	6310724	IdentifierDecl	* cstr		6310707	0					
ANR	6310725	IdentifierDeclType	CString *		6310707	0					
ANR	6310726	Identifier	cstr		6310707	1					
ANR	6310727	IdentifierDeclStatement	char * p ;	266:1:6662:6669	6310707	5	True				
ANR	6310728	IdentifierDecl	* p		6310707	0					
ANR	6310729	IdentifierDeclType	char *		6310707	0					
ANR	6310730	Identifier	p		6310707	1					
ANR	6310731	IdentifierDeclStatement	"int i , len ;"	267:1:6672:6682	6310707	6	True				
ANR	6310732	IdentifierDecl	i		6310707	0					
ANR	6310733	IdentifierDeclType	int		6310707	0					
ANR	6310734	Identifier	i		6310707	1					
ANR	6310735	IdentifierDecl	len		6310707	1					
ANR	6310736	IdentifierDeclType	int		6310707	0					
ANR	6310737	Identifier	len		6310707	1					
ANR	6310738	ExpressionStatement	cstr_reset ( & cstr_buf )	270:1:6754:6776	6310707	7	True				
ANR	6310739	CallExpression	cstr_reset ( & cstr_buf )		6310707	0					
ANR	6310740	Callee	cstr_reset		6310707	0					
ANR	6310741	Identifier	cstr_reset		6310707	0					
ANR	6310742	ArgumentList	& cstr_buf		6310707	1					
ANR	6310743	Argument	& cstr_buf		6310707	0					
ANR	6310744	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310745	UnaryOperator	&		6310707	0					
ANR	6310746	Identifier	cstr_buf		6310707	1					
ANR	6310747	ExpressionStatement	cstr_buf . data = buf	271:1:6779:6798	6310707	8	True				
ANR	6310748	AssignmentExpression	cstr_buf . data = buf		6310707	0		=			
ANR	6310749	MemberAccess	cstr_buf . data		6310707	0					
ANR	6310750	Identifier	cstr_buf		6310707	0					
ANR	6310751	Identifier	data		6310707	1					
ANR	6310752	Identifier	buf		6310707	1					
ANR	6310753	ExpressionStatement	cstr_buf . size_allocated = sizeof ( buf )	272:1:6801:6838	6310707	9	True				
ANR	6310754	AssignmentExpression	cstr_buf . size_allocated = sizeof ( buf )		6310707	0		=			
ANR	6310755	MemberAccess	cstr_buf . size_allocated		6310707	0					
ANR	6310756	Identifier	cstr_buf		6310707	0					
ANR	6310757	Identifier	size_allocated		6310707	1					
ANR	6310758	SizeofExpression	sizeof ( buf )		6310707	1					
ANR	6310759	Sizeof	sizeof		6310707	0					
ANR	6310760	SizeofOperand	buf		6310707	1					
ANR	6310761	ExpressionStatement	p = buf	273:1:6841:6848	6310707	10	True				
ANR	6310762	AssignmentExpression	p = buf		6310707	0		=			
ANR	6310763	Identifier	p		6310707	0					
ANR	6310764	Identifier	buf		6310707	1					
ANR	6310765	SwitchStatement	switch ( v )		6310707	11					
ANR	6310766	Condition	v	275:9:6860:6860	6310707	0	True				
ANR	6310767	Identifier	v		6310707	0					
ANR	6310768	CompoundStatement		14:12:284:284	6310707	1					
ANR	6310769	Label	case TOK_CINT :	276:1:6866:6879	6310707	0	True				
ANR	6310770	Identifier	TOK_CINT		6310707	0					
ANR	6310771	Label	case TOK_CUINT :	277:1:6882:6896	6310707	1	True				
ANR	6310772	Identifier	TOK_CUINT		6310707	0					
ANR	6310773	IfStatement	if ( cv )		6310707	2					
ANR	6310774	Condition	cv	279:6:6962:6963	6310707	0	True				
ANR	6310775	Identifier	cv		6310707	0					
ANR	6310776	CompoundStatement		18:10:387:387	6310707	1					
ANR	6310777	ExpressionStatement	"sprintf ( p , ""%u"" , cv -> ui )"	280:3:6971:6996	6310707	0	True				
ANR	6310778	CallExpression	"sprintf ( p , ""%u"" , cv -> ui )"		6310707	0					
ANR	6310779	Callee	sprintf		6310707	0					
ANR	6310780	Identifier	sprintf		6310707	0					
ANR	6310781	ArgumentList	p		6310707	1					
ANR	6310782	Argument	p		6310707	0					
ANR	6310783	Identifier	p		6310707	0					
ANR	6310784	Argument	"""%u"""		6310707	1					
ANR	6310785	PrimaryExpression	"""%u"""		6310707	0					
ANR	6310786	Argument	cv -> ui		6310707	2					
ANR	6310787	PtrMemberAccess	cv -> ui		6310707	0					
ANR	6310788	Identifier	cv		6310707	0					
ANR	6310789	Identifier	ui		6310707	1					
ANR	6310790	BreakStatement	break ;	282:2:7004:7009	6310707	3	True				
ANR	6310791	Label	case TOK_CLLONG :	283:1:7012:7027	6310707	4	True				
ANR	6310792	Identifier	TOK_CLLONG		6310707	0					
ANR	6310793	Label	case TOK_CULLONG :	284:1:7030:7046	6310707	5	True				
ANR	6310794	Identifier	TOK_CULLONG		6310707	0					
ANR	6310795	IfStatement	if ( cv )		6310707	6					
ANR	6310796	Condition	cv	286:6:7113:7114	6310707	0	True				
ANR	6310797	Identifier	cv		6310707	0					
ANR	6310798	CompoundStatement		25:10:538:538	6310707	1					
ANR	6310799	Statement	sprintf	287:3:7122:7128	6310707	0	True				
ANR	6310800	Statement	(	287:11:7130:7130	6310707	1	True				
ANR	6310801	Statement	p	287:12:7131:7131	6310707	2	True				
ANR	6310802	Statement	","	287:13:7132:7132	6310707	3	True				
ANR	6310803	Statement	"""%"""	287:15:7134:7136	6310707	4	True				
ANR	6310804	Statement	PFMT64u	287:18:7137:7143	6310707	5	True				
ANR	6310805	Statement	","	287:25:7144:7144	6310707	6	True				
ANR	6310806	Statement	cv	287:27:7146:7147	6310707	7	True				
ANR	6310807	Statement	->	287:29:7148:7149	6310707	8	True				
ANR	6310808	Statement	ull	287:31:7150:7152	6310707	9	True				
ANR	6310809	Statement	)	287:34:7153:7153	6310707	10	True				
ANR	6310810	ExpressionStatement		287:35:7154:7154	6310707	11	True				
ANR	6310811	BreakStatement	break ;	289:2:7162:7167	6310707	7	True				
ANR	6310812	Label	case TOK_LCHAR :	290:1:7170:7184	6310707	8	True				
ANR	6310813	Identifier	TOK_LCHAR		6310707	0					
ANR	6310814	ExpressionStatement	"cstr_ccat ( & cstr_buf , 'L' )"	291:2:7188:7214	6310707	9	True				
ANR	6310815	CallExpression	"cstr_ccat ( & cstr_buf , 'L' )"		6310707	0					
ANR	6310816	Callee	cstr_ccat		6310707	0					
ANR	6310817	Identifier	cstr_ccat		6310707	0					
ANR	6310818	ArgumentList	& cstr_buf		6310707	1					
ANR	6310819	Argument	& cstr_buf		6310707	0					
ANR	6310820	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310821	UnaryOperator	&		6310707	0					
ANR	6310822	Identifier	cstr_buf		6310707	1					
ANR	6310823	Argument	'L'		6310707	1					
ANR	6310824	PrimaryExpression	'L'		6310707	0					
ANR	6310825	Label	case TOK_CCHAR :	292:1:7217:7231	6310707	10	True				
ANR	6310826	Identifier	TOK_CCHAR		6310707	0					
ANR	6310827	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\'' )"	293:2:7235:7262	6310707	11	True				
ANR	6310828	CallExpression	"cstr_ccat ( & cstr_buf , '\\'' )"		6310707	0					
ANR	6310829	Callee	cstr_ccat		6310707	0					
ANR	6310830	Identifier	cstr_ccat		6310707	0					
ANR	6310831	ArgumentList	& cstr_buf		6310707	1					
ANR	6310832	Argument	& cstr_buf		6310707	0					
ANR	6310833	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310834	UnaryOperator	&		6310707	0					
ANR	6310835	Identifier	cstr_buf		6310707	1					
ANR	6310836	Argument	'\\''		6310707	1					
ANR	6310837	PrimaryExpression	'\\''		6310707	0					
ANR	6310838	IfStatement	if ( cv )		6310707	12					
ANR	6310839	Condition	cv	294:6:7270:7271	6310707	0	True				
ANR	6310840	Identifier	cv		6310707	0					
ANR	6310841	CompoundStatement		33:10:695:695	6310707	1					
ANR	6310842	ExpressionStatement	"add_char ( & cstr_buf , cv -> i )"	295:3:7279:7306	6310707	0	True				
ANR	6310843	CallExpression	"add_char ( & cstr_buf , cv -> i )"		6310707	0					
ANR	6310844	Callee	add_char		6310707	0					
ANR	6310845	Identifier	add_char		6310707	0					
ANR	6310846	ArgumentList	& cstr_buf		6310707	1					
ANR	6310847	Argument	& cstr_buf		6310707	0					
ANR	6310848	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310849	UnaryOperator	&		6310707	0					
ANR	6310850	Identifier	cstr_buf		6310707	1					
ANR	6310851	Argument	cv -> i		6310707	1					
ANR	6310852	PtrMemberAccess	cv -> i		6310707	0					
ANR	6310853	Identifier	cv		6310707	0					
ANR	6310854	Identifier	i		6310707	1					
ANR	6310855	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\'' )"	297:2:7314:7341	6310707	13	True				
ANR	6310856	CallExpression	"cstr_ccat ( & cstr_buf , '\\'' )"		6310707	0					
ANR	6310857	Callee	cstr_ccat		6310707	0					
ANR	6310858	Identifier	cstr_ccat		6310707	0					
ANR	6310859	ArgumentList	& cstr_buf		6310707	1					
ANR	6310860	Argument	& cstr_buf		6310707	0					
ANR	6310861	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310862	UnaryOperator	&		6310707	0					
ANR	6310863	Identifier	cstr_buf		6310707	1					
ANR	6310864	Argument	'\\''		6310707	1					
ANR	6310865	PrimaryExpression	'\\''		6310707	0					
ANR	6310866	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\0' )"	298:2:7345:7372	6310707	14	True				
ANR	6310867	CallExpression	"cstr_ccat ( & cstr_buf , '\\0' )"		6310707	0					
ANR	6310868	Callee	cstr_ccat		6310707	0					
ANR	6310869	Identifier	cstr_ccat		6310707	0					
ANR	6310870	ArgumentList	& cstr_buf		6310707	1					
ANR	6310871	Argument	& cstr_buf		6310707	0					
ANR	6310872	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310873	UnaryOperator	&		6310707	0					
ANR	6310874	Identifier	cstr_buf		6310707	1					
ANR	6310875	Argument	'\\0'		6310707	1					
ANR	6310876	PrimaryExpression	'\\0'		6310707	0					
ANR	6310877	BreakStatement	break ;	299:2:7376:7381	6310707	15	True				
ANR	6310878	Label	case TOK_PPNUM :	300:1:7384:7398	6310707	16	True				
ANR	6310879	Identifier	TOK_PPNUM		6310707	0					
ANR	6310880	ExpressionStatement	cstr = cv -> cstr	301:2:7402:7417	6310707	17	True				
ANR	6310881	AssignmentExpression	cstr = cv -> cstr		6310707	0		=			
ANR	6310882	Identifier	cstr		6310707	0					
ANR	6310883	PtrMemberAccess	cv -> cstr		6310707	1					
ANR	6310884	Identifier	cv		6310707	0					
ANR	6310885	Identifier	cstr		6310707	1					
ANR	6310886	ExpressionStatement	len = cstr -> size - 1	302:2:7421:7441	6310707	18	True				
ANR	6310887	AssignmentExpression	len = cstr -> size - 1		6310707	0		=			
ANR	6310888	Identifier	len		6310707	0					
ANR	6310889	AdditiveExpression	cstr -> size - 1		6310707	1		-			
ANR	6310890	PtrMemberAccess	cstr -> size		6310707	0					
ANR	6310891	Identifier	cstr		6310707	0					
ANR	6310892	Identifier	size		6310707	1					
ANR	6310893	PrimaryExpression	1		6310707	1					
ANR	6310894	ForStatement	for ( i = 0 ; i < len ; i ++ )		6310707	19					
ANR	6310895	ForInit	i = 0 ;	303:7:7450:7455	6310707	0	True				
ANR	6310896	AssignmentExpression	i = 0		6310707	0		=			
ANR	6310897	Identifier	i		6310707	0					
ANR	6310898	PrimaryExpression	0		6310707	1					
ANR	6310899	Condition	i < len	303:14:7457:7463	6310707	1	True				
ANR	6310900	RelationalExpression	i < len		6310707	0		<			
ANR	6310901	Identifier	i		6310707	0					
ANR	6310902	Identifier	len		6310707	1					
ANR	6310903	PostIncDecOperationExpression	i ++	303:23:7466:7468	6310707	2	True				
ANR	6310904	Identifier	i		6310707	0					
ANR	6310905	IncDec	++		6310707	1					
ANR	6310906	CompoundStatement		42:28:892:892	6310707	3					
ANR	6310907	ExpressionStatement	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"	304:3:7476:7531	6310707	0	True				
ANR	6310908	CallExpression	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"		6310707	0					
ANR	6310909	Callee	add_char		6310707	0					
ANR	6310910	Identifier	add_char		6310707	0					
ANR	6310911	ArgumentList	& cstr_buf		6310707	1					
ANR	6310912	Argument	& cstr_buf		6310707	0					
ANR	6310913	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310914	UnaryOperator	&		6310707	0					
ANR	6310915	Identifier	cstr_buf		6310707	1					
ANR	6310916	Argument	( ( unsigned char * ) cstr -> data ) [ i ]		6310707	1					
ANR	6310917	ArrayIndexing	( ( unsigned char * ) cstr -> data ) [ i ]		6310707	0					
ANR	6310918	CastExpression	( unsigned char * ) cstr -> data		6310707	0					
ANR	6310919	CastTarget	unsigned char *		6310707	0					
ANR	6310920	PtrMemberAccess	cstr -> data		6310707	1					
ANR	6310921	Identifier	cstr		6310707	0					
ANR	6310922	Identifier	data		6310707	1					
ANR	6310923	Identifier	i		6310707	1					
ANR	6310924	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\0' )"	306:2:7539:7566	6310707	20	True				
ANR	6310925	CallExpression	"cstr_ccat ( & cstr_buf , '\\0' )"		6310707	0					
ANR	6310926	Callee	cstr_ccat		6310707	0					
ANR	6310927	Identifier	cstr_ccat		6310707	0					
ANR	6310928	ArgumentList	& cstr_buf		6310707	1					
ANR	6310929	Argument	& cstr_buf		6310707	0					
ANR	6310930	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310931	UnaryOperator	&		6310707	0					
ANR	6310932	Identifier	cstr_buf		6310707	1					
ANR	6310933	Argument	'\\0'		6310707	1					
ANR	6310934	PrimaryExpression	'\\0'		6310707	0					
ANR	6310935	BreakStatement	break ;	307:2:7570:7575	6310707	21	True				
ANR	6310936	Label	case TOK_LSTR :	308:1:7578:7591	6310707	22	True				
ANR	6310937	Identifier	TOK_LSTR		6310707	0					
ANR	6310938	ExpressionStatement	"cstr_ccat ( & cstr_buf , 'L' )"	309:2:7595:7621	6310707	23	True				
ANR	6310939	CallExpression	"cstr_ccat ( & cstr_buf , 'L' )"		6310707	0					
ANR	6310940	Callee	cstr_ccat		6310707	0					
ANR	6310941	Identifier	cstr_ccat		6310707	0					
ANR	6310942	ArgumentList	& cstr_buf		6310707	1					
ANR	6310943	Argument	& cstr_buf		6310707	0					
ANR	6310944	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310945	UnaryOperator	&		6310707	0					
ANR	6310946	Identifier	cstr_buf		6310707	1					
ANR	6310947	Argument	'L'		6310707	1					
ANR	6310948	PrimaryExpression	'L'		6310707	0					
ANR	6310949	Label	case TOK_STR :	310:1:7624:7636	6310707	24	True				
ANR	6310950	Identifier	TOK_STR		6310707	0					
ANR	6310951	IfStatement	if ( cv )		6310707	25					
ANR	6310952	Condition	cv	311:6:7644:7645	6310707	0	True				
ANR	6310953	Identifier	cv		6310707	0					
ANR	6310954	CompoundStatement		50:10:1069:1069	6310707	1					
ANR	6310955	ExpressionStatement	cstr = cv -> cstr	312:3:7653:7668	6310707	0	True				
ANR	6310956	AssignmentExpression	cstr = cv -> cstr		6310707	0		=			
ANR	6310957	Identifier	cstr		6310707	0					
ANR	6310958	PtrMemberAccess	cv -> cstr		6310707	1					
ANR	6310959	Identifier	cv		6310707	0					
ANR	6310960	Identifier	cstr		6310707	1					
ANR	6310961	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\""' )"	313:3:7673:7700	6310707	1	True				
ANR	6310962	CallExpression	"cstr_ccat ( & cstr_buf , '\\""' )"		6310707	0					
ANR	6310963	Callee	cstr_ccat		6310707	0					
ANR	6310964	Identifier	cstr_ccat		6310707	0					
ANR	6310965	ArgumentList	& cstr_buf		6310707	1					
ANR	6310966	Argument	& cstr_buf		6310707	0					
ANR	6310967	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6310968	UnaryOperator	&		6310707	0					
ANR	6310969	Identifier	cstr_buf		6310707	1					
ANR	6310970	Argument	"'\\""'"		6310707	1					
ANR	6310971	PrimaryExpression	"'\\""'"		6310707	0					
ANR	6310972	IfStatement	if ( v == TOK_STR )		6310707	2					
ANR	6310973	Condition	v == TOK_STR	314:7:7709:7720	6310707	0	True				
ANR	6310974	EqualityExpression	v == TOK_STR		6310707	0		==			
ANR	6310975	Identifier	v		6310707	0					
ANR	6310976	Identifier	TOK_STR		6310707	1					
ANR	6310977	CompoundStatement		53:21:1144:1144	6310707	1					
ANR	6310978	ExpressionStatement	len = cstr -> size - 1	315:4:7729:7749	6310707	0	True				
ANR	6310979	AssignmentExpression	len = cstr -> size - 1		6310707	0		=			
ANR	6310980	Identifier	len		6310707	0					
ANR	6310981	AdditiveExpression	cstr -> size - 1		6310707	1		-			
ANR	6310982	PtrMemberAccess	cstr -> size		6310707	0					
ANR	6310983	Identifier	cstr		6310707	0					
ANR	6310984	Identifier	size		6310707	1					
ANR	6310985	PrimaryExpression	1		6310707	1					
ANR	6310986	ForStatement	for ( i = 0 ; i < len ; i ++ )		6310707	1					
ANR	6310987	ForInit	i = 0 ;	316:9:7760:7765	6310707	0	True				
ANR	6310988	AssignmentExpression	i = 0		6310707	0		=			
ANR	6310989	Identifier	i		6310707	0					
ANR	6310990	PrimaryExpression	0		6310707	1					
ANR	6310991	Condition	i < len	316:16:7767:7773	6310707	1	True				
ANR	6310992	RelationalExpression	i < len		6310707	0		<			
ANR	6310993	Identifier	i		6310707	0					
ANR	6310994	Identifier	len		6310707	1					
ANR	6310995	PostIncDecOperationExpression	i ++	316:25:7776:7778	6310707	2	True				
ANR	6310996	Identifier	i		6310707	0					
ANR	6310997	IncDec	++		6310707	1					
ANR	6310998	CompoundStatement		55:30:1202:1202	6310707	3					
ANR	6310999	ExpressionStatement	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"	317:5:7788:7843	6310707	0	True				
ANR	6311000	CallExpression	"add_char ( & cstr_buf , ( ( unsigned char * ) cstr -> data ) [ i ] )"		6310707	0					
ANR	6311001	Callee	add_char		6310707	0					
ANR	6311002	Identifier	add_char		6310707	0					
ANR	6311003	ArgumentList	& cstr_buf		6310707	1					
ANR	6311004	Argument	& cstr_buf		6310707	0					
ANR	6311005	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6311006	UnaryOperator	&		6310707	0					
ANR	6311007	Identifier	cstr_buf		6310707	1					
ANR	6311008	Argument	( ( unsigned char * ) cstr -> data ) [ i ]		6310707	1					
ANR	6311009	ArrayIndexing	( ( unsigned char * ) cstr -> data ) [ i ]		6310707	0					
ANR	6311010	CastExpression	( unsigned char * ) cstr -> data		6310707	0					
ANR	6311011	CastTarget	unsigned char *		6310707	0					
ANR	6311012	PtrMemberAccess	cstr -> data		6310707	1					
ANR	6311013	Identifier	cstr		6310707	0					
ANR	6311014	Identifier	data		6310707	1					
ANR	6311015	Identifier	i		6310707	1					
ANR	6311016	ElseStatement	else		6310707	0					
ANR	6311017	CompoundStatement		58:10:1282:1282	6310707	0					
ANR	6311018	ExpressionStatement	len = ( cstr -> size / sizeof ( nwchar_t ) ) - 1	320:4:7867:7908	6310707	0	True				
ANR	6311019	AssignmentExpression	len = ( cstr -> size / sizeof ( nwchar_t ) ) - 1		6310707	0		=			
ANR	6311020	Identifier	len		6310707	0					
ANR	6311021	AdditiveExpression	( cstr -> size / sizeof ( nwchar_t ) ) - 1		6310707	1		-			
ANR	6311022	MultiplicativeExpression	cstr -> size / sizeof ( nwchar_t )		6310707	0		/			
ANR	6311023	PtrMemberAccess	cstr -> size		6310707	0					
ANR	6311024	Identifier	cstr		6310707	0					
ANR	6311025	Identifier	size		6310707	1					
ANR	6311026	SizeofExpression	sizeof ( nwchar_t )		6310707	1					
ANR	6311027	Sizeof	sizeof		6310707	0					
ANR	6311028	SizeofOperand	nwchar_t		6310707	1					
ANR	6311029	PrimaryExpression	1		6310707	1					
ANR	6311030	ForStatement	for ( i = 0 ; i < len ; i ++ )		6310707	1					
ANR	6311031	ForInit	i = 0 ;	321:9:7919:7924	6310707	0	True				
ANR	6311032	AssignmentExpression	i = 0		6310707	0		=			
ANR	6311033	Identifier	i		6310707	0					
ANR	6311034	PrimaryExpression	0		6310707	1					
ANR	6311035	Condition	i < len	321:16:7926:7932	6310707	1	True				
ANR	6311036	RelationalExpression	i < len		6310707	0		<			
ANR	6311037	Identifier	i		6310707	0					
ANR	6311038	Identifier	len		6310707	1					
ANR	6311039	PostIncDecOperationExpression	i ++	321:25:7935:7937	6310707	2	True				
ANR	6311040	Identifier	i		6310707	0					
ANR	6311041	IncDec	++		6310707	1					
ANR	6311042	CompoundStatement		60:30:1361:1361	6310707	3					
ANR	6311043	ExpressionStatement	"add_char ( & cstr_buf , ( ( nwchar_t * ) cstr -> data ) [ i ] )"	322:5:7947:7997	6310707	0	True				
ANR	6311044	CallExpression	"add_char ( & cstr_buf , ( ( nwchar_t * ) cstr -> data ) [ i ] )"		6310707	0					
ANR	6311045	Callee	add_char		6310707	0					
ANR	6311046	Identifier	add_char		6310707	0					
ANR	6311047	ArgumentList	& cstr_buf		6310707	1					
ANR	6311048	Argument	& cstr_buf		6310707	0					
ANR	6311049	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6311050	UnaryOperator	&		6310707	0					
ANR	6311051	Identifier	cstr_buf		6310707	1					
ANR	6311052	Argument	( ( nwchar_t * ) cstr -> data ) [ i ]		6310707	1					
ANR	6311053	ArrayIndexing	( ( nwchar_t * ) cstr -> data ) [ i ]		6310707	0					
ANR	6311054	CastExpression	( nwchar_t * ) cstr -> data		6310707	0					
ANR	6311055	CastTarget	nwchar_t *		6310707	0					
ANR	6311056	PtrMemberAccess	cstr -> data		6310707	1					
ANR	6311057	Identifier	cstr		6310707	0					
ANR	6311058	Identifier	data		6310707	1					
ANR	6311059	Identifier	i		6310707	1					
ANR	6311060	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\""' )"	325:3:8013:8040	6310707	3	True				
ANR	6311061	CallExpression	"cstr_ccat ( & cstr_buf , '\\""' )"		6310707	0					
ANR	6311062	Callee	cstr_ccat		6310707	0					
ANR	6311063	Identifier	cstr_ccat		6310707	0					
ANR	6311064	ArgumentList	& cstr_buf		6310707	1					
ANR	6311065	Argument	& cstr_buf		6310707	0					
ANR	6311066	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6311067	UnaryOperator	&		6310707	0					
ANR	6311068	Identifier	cstr_buf		6310707	1					
ANR	6311069	Argument	"'\\""'"		6310707	1					
ANR	6311070	PrimaryExpression	"'\\""'"		6310707	0					
ANR	6311071	ExpressionStatement	"cstr_ccat ( & cstr_buf , '\\0' )"	326:3:8045:8072	6310707	4	True				
ANR	6311072	CallExpression	"cstr_ccat ( & cstr_buf , '\\0' )"		6310707	0					
ANR	6311073	Callee	cstr_ccat		6310707	0					
ANR	6311074	Identifier	cstr_ccat		6310707	0					
ANR	6311075	ArgumentList	& cstr_buf		6310707	1					
ANR	6311076	Argument	& cstr_buf		6310707	0					
ANR	6311077	UnaryOperationExpression	& cstr_buf		6310707	0					
ANR	6311078	UnaryOperator	&		6310707	0					
ANR	6311079	Identifier	cstr_buf		6310707	1					
ANR	6311080	Argument	'\\0'		6310707	1					
ANR	6311081	PrimaryExpression	'\\0'		6310707	0					
ANR	6311082	ElseStatement	else		6310707	0					
ANR	6311083	CompoundStatement		66:9:1504:1504	6310707	0					
ANR	6311084	ExpressionStatement	"eprintf ( ""cv = nil\\n"" )"	328:3:8088:8110	6310707	0	True				
ANR	6311085	CallExpression	"eprintf ( ""cv = nil\\n"" )"		6310707	0					
ANR	6311086	Callee	eprintf		6310707	0					
ANR	6311087	Identifier	eprintf		6310707	0					
ANR	6311088	ArgumentList	"""cv = nil\\n"""		6310707	1					
ANR	6311089	Argument	"""cv = nil\\n"""		6310707	0					
ANR	6311090	PrimaryExpression	"""cv = nil\\n"""		6310707	0					
ANR	6311091	BreakStatement	break ;	330:2:8118:8123	6310707	26	True				
ANR	6311092	Label	case TOK_LT :	331:1:8126:8137	6310707	27	True				
ANR	6311093	Identifier	TOK_LT		6310707	0					
ANR	6311094	ExpressionStatement	v = '<'	332:2:8141:8148	6310707	28	True				
ANR	6311095	AssignmentExpression	v = '<'		6310707	0		=			
ANR	6311096	Identifier	v		6310707	0					
ANR	6311097	PrimaryExpression	'<'		6310707	1					
ANR	6311098	GotoStatement	goto addv ;	333:2:8152:8161	6310707	29	True				
ANR	6311099	Identifier	addv		6310707	0					
ANR	6311100	Label	case TOK_GT :	334:1:8164:8175	6310707	30	True				
ANR	6311101	Identifier	TOK_GT		6310707	0					
ANR	6311102	ExpressionStatement	v = '>'	335:2:8179:8186	6310707	31	True				
ANR	6311103	AssignmentExpression	v = '>'		6310707	0		=			
ANR	6311104	Identifier	v		6310707	0					
ANR	6311105	PrimaryExpression	'>'		6310707	1					
ANR	6311106	GotoStatement	goto addv ;	336:2:8190:8199	6310707	32	True				
ANR	6311107	Identifier	addv		6310707	0					
ANR	6311108	Label	case TOK_DOTS :	337:1:8202:8215	6310707	33	True				
ANR	6311109	Identifier	TOK_DOTS		6310707	0					
ANR	6311110	ReturnStatement	"return strcpy ( p , ""..."" ) ;"	338:2:8219:8243	6310707	34	True				
ANR	6311111	CallExpression	"strcpy ( p , ""..."" )"		6310707	0					
ANR	6311112	Callee	strcpy		6310707	0					
ANR	6311113	Identifier	strcpy		6310707	0					
ANR	6311114	ArgumentList	p		6310707	1					
ANR	6311115	Argument	p		6310707	0					
ANR	6311116	Identifier	p		6310707	0					
ANR	6311117	Argument	"""..."""		6310707	1					
ANR	6311118	PrimaryExpression	"""..."""		6310707	0					
ANR	6311119	Label	case TOK_A_SHL :	339:1:8246:8260	6310707	35	True				
ANR	6311120	Identifier	TOK_A_SHL		6310707	0					
ANR	6311121	ReturnStatement	"return strcpy ( p , ""<<="" ) ;"	340:2:8264:8288	6310707	36	True				
ANR	6311122	CallExpression	"strcpy ( p , ""<<="" )"		6310707	0					
ANR	6311123	Callee	strcpy		6310707	0					
ANR	6311124	Identifier	strcpy		6310707	0					
ANR	6311125	ArgumentList	p		6310707	1					
ANR	6311126	Argument	p		6310707	0					
ANR	6311127	Identifier	p		6310707	0					
ANR	6311128	Argument	"""<<="""		6310707	1					
ANR	6311129	PrimaryExpression	"""<<="""		6310707	0					
ANR	6311130	Label	case TOK_A_SAR :	341:1:8291:8305	6310707	37	True				
ANR	6311131	Identifier	TOK_A_SAR		6310707	0					
ANR	6311132	ReturnStatement	"return strcpy ( p , "">>="" ) ;"	342:2:8309:8333	6310707	38	True				
ANR	6311133	CallExpression	"strcpy ( p , "">>="" )"		6310707	0					
ANR	6311134	Callee	strcpy		6310707	0					
ANR	6311135	Identifier	strcpy		6310707	0					
ANR	6311136	ArgumentList	p		6310707	1					
ANR	6311137	Argument	p		6310707	0					
ANR	6311138	Identifier	p		6310707	0					
ANR	6311139	Argument	""">>="""		6310707	1					
ANR	6311140	PrimaryExpression	""">>="""		6310707	0					
ANR	6311141	Label	default :	343:1:8336:8343	6310707	39	True				
ANR	6311142	Identifier	default		6310707	0					
ANR	6311143	IfStatement	if ( v < TOK_IDENT )		6310707	40					
ANR	6311144	Condition	v < TOK_IDENT	344:6:8351:8363	6310707	0	True				
ANR	6311145	RelationalExpression	v < TOK_IDENT		6310707	0		<			
ANR	6311146	Identifier	v		6310707	0					
ANR	6311147	Identifier	TOK_IDENT		6310707	1					
ANR	6311148	CompoundStatement		85:3:1827:1865	6310707	1					
ANR	6311149	IdentifierDeclStatement	const unsigned char * q = tok_two_chars ;	346:3:8406:8444	6310707	0	True				
ANR	6311150	IdentifierDecl	* q = tok_two_chars		6310707	0					
ANR	6311151	IdentifierDeclType	const unsigned char *		6310707	0					
ANR	6311152	Identifier	q		6310707	1					
ANR	6311153	AssignmentExpression	* q = tok_two_chars		6310707	2		=			
ANR	6311154	Identifier	tok_two_chars		6310707	0					
ANR	6311155	Identifier	tok_two_chars		6310707	1					
ANR	6311156	WhileStatement	while ( * q )		6310707	1					
ANR	6311157	Condition	* q	347:10:8456:8457	6310707	0	True				
ANR	6311158	UnaryOperationExpression	* q		6310707	0					
ANR	6311159	UnaryOperator	*		6310707	0					
ANR	6311160	Identifier	q		6310707	1					
ANR	6311161	CompoundStatement		86:14:1881:1881	6310707	1					
ANR	6311162	IfStatement	if ( q [ 2 ] == v )		6310707	0					
ANR	6311163	Condition	q [ 2 ] == v	348:8:8470:8478	6310707	0	True				
ANR	6311164	EqualityExpression	q [ 2 ] == v		6310707	0		==			
ANR	6311165	ArrayIndexing	q [ 2 ]		6310707	0					
ANR	6311166	Identifier	q		6310707	0					
ANR	6311167	PrimaryExpression	2		6310707	1					
ANR	6311168	Identifier	v		6310707	1					
ANR	6311169	CompoundStatement		87:19:1902:1902	6310707	1					
ANR	6311170	ExpressionStatement	* p ++ = q [ 0 ]	349:5:8488:8499	6310707	0	True				
ANR	6311171	AssignmentExpression	* p ++ = q [ 0 ]		6310707	0		=			
ANR	6311172	UnaryOperationExpression	* p ++		6310707	0					
ANR	6311173	UnaryOperator	*		6310707	0					
ANR	6311174	PostIncDecOperationExpression	p ++		6310707	1					
ANR	6311175	Identifier	p		6310707	0					
ANR	6311176	IncDec	++		6310707	1					
ANR	6311177	ArrayIndexing	q [ 0 ]		6310707	1					
ANR	6311178	Identifier	q		6310707	0					
ANR	6311179	PrimaryExpression	0		6310707	1					
ANR	6311180	ExpressionStatement	* p ++ = q [ 1 ]	350:5:8506:8517	6310707	1	True				
ANR	6311181	AssignmentExpression	* p ++ = q [ 1 ]		6310707	0		=			
ANR	6311182	UnaryOperationExpression	* p ++		6310707	0					
ANR	6311183	UnaryOperator	*		6310707	0					
ANR	6311184	PostIncDecOperationExpression	p ++		6310707	1					
ANR	6311185	Identifier	p		6310707	0					
ANR	6311186	IncDec	++		6310707	1					
ANR	6311187	ArrayIndexing	q [ 1 ]		6310707	1					
ANR	6311188	Identifier	q		6310707	0					
ANR	6311189	PrimaryExpression	1		6310707	1					
ANR	6311190	ExpressionStatement	* p = '\\0'	351:5:8524:8533	6310707	2	True				
ANR	6311191	AssignmentExpression	* p = '\\0'		6310707	0		=			
ANR	6311192	UnaryOperationExpression	* p		6310707	0					
ANR	6311193	UnaryOperator	*		6310707	0					
ANR	6311194	Identifier	p		6310707	1					
ANR	6311195	PrimaryExpression	'\\0'		6310707	1					
ANR	6311196	ReturnStatement	return buf ;	352:5:8540:8550	6310707	3	True				
ANR	6311197	Identifier	buf		6310707	0					
ANR	6311198	ExpressionStatement	q += 3	354:4:8562:8568	6310707	1	True				
ANR	6311199	AssignmentExpression	q += 3		6310707	0		+=			
ANR	6311200	Identifier	q		6310707	0					
ANR	6311201	PrimaryExpression	3		6310707	1					
ANR	6311202	Label	addv :	356:0:8575:8579	6310707	2	True				
ANR	6311203	Identifier	addv		6310707	0					
ANR	6311204	ExpressionStatement	* p ++ = v	357:3:8584:8592	6310707	3	True				
ANR	6311205	AssignmentExpression	* p ++ = v		6310707	0		=			
ANR	6311206	UnaryOperationExpression	* p ++		6310707	0					
ANR	6311207	UnaryOperator	*		6310707	0					
ANR	6311208	PostIncDecOperationExpression	p ++		6310707	1					
ANR	6311209	Identifier	p		6310707	0					
ANR	6311210	IncDec	++		6310707	1					
ANR	6311211	Identifier	v		6310707	1					
ANR	6311212	ExpressionStatement	* p = '\\0'	358:3:8597:8606	6310707	4	True				
ANR	6311213	AssignmentExpression	* p = '\\0'		6310707	0		=			
ANR	6311214	UnaryOperationExpression	* p		6310707	0					
ANR	6311215	UnaryOperator	*		6310707	0					
ANR	6311216	Identifier	p		6310707	1					
ANR	6311217	PrimaryExpression	'\\0'		6310707	1					
ANR	6311218	ElseStatement	else		6310707	0					
ANR	6311219	IfStatement	if ( v < tok_ident )		6310707	0					
ANR	6311220	Condition	v < tok_ident	359:13:8621:8633	6310707	0	True				
ANR	6311221	RelationalExpression	v < tok_ident		6310707	0		<			
ANR	6311222	Identifier	v		6310707	0					
ANR	6311223	Identifier	tok_ident		6310707	1					
ANR	6311224	CompoundStatement		98:28:2057:2057	6310707	1					
ANR	6311225	ReturnStatement	return table_ident [ v - TOK_IDENT ] -> str ;	360:3:8641:8679	6310707	0	True				
ANR	6311226	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> str		6310707	0					
ANR	6311227	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6310707	0					
ANR	6311228	Identifier	table_ident		6310707	0					
ANR	6311229	AdditiveExpression	v - TOK_IDENT		6310707	1		-			
ANR	6311230	Identifier	v		6310707	0					
ANR	6311231	Identifier	TOK_IDENT		6310707	1					
ANR	6311232	Identifier	str		6310707	1					
ANR	6311233	ElseStatement	else		6310707	0					
ANR	6311234	IfStatement	if ( v >= SYM_FIRST_ANOM )		6310707	0					
ANR	6311235	Condition	v >= SYM_FIRST_ANOM	361:13:8694:8712	6310707	0	True				
ANR	6311236	RelationalExpression	v >= SYM_FIRST_ANOM		6310707	0		>=			
ANR	6311237	Identifier	v		6310707	0					
ANR	6311238	Identifier	SYM_FIRST_ANOM		6310707	1					
ANR	6311239	CompoundStatement		100:34:2136:2136	6310707	1					
ANR	6311240	ExpressionStatement	"sprintf ( p , ""%u"" , v - SYM_FIRST_ANOM )"	363:3:8763:8800	6310707	0	True				
ANR	6311241	CallExpression	"sprintf ( p , ""%u"" , v - SYM_FIRST_ANOM )"		6310707	0					
ANR	6311242	Callee	sprintf		6310707	0					
ANR	6311243	Identifier	sprintf		6310707	0					
ANR	6311244	ArgumentList	p		6310707	1					
ANR	6311245	Argument	p		6310707	0					
ANR	6311246	Identifier	p		6310707	0					
ANR	6311247	Argument	"""%u"""		6310707	1					
ANR	6311248	PrimaryExpression	"""%u"""		6310707	0					
ANR	6311249	Argument	v - SYM_FIRST_ANOM		6310707	2					
ANR	6311250	AdditiveExpression	v - SYM_FIRST_ANOM		6310707	0		-			
ANR	6311251	Identifier	v		6310707	0					
ANR	6311252	Identifier	SYM_FIRST_ANOM		6310707	1					
ANR	6311253	ElseStatement	else		6310707	0					
ANR	6311254	CompoundStatement		103:9:2232:2232	6310707	0					
ANR	6311255	ReturnStatement	return NULL ;	366:3:8845:8856	6310707	0	True				
ANR	6311256	Identifier	NULL		6310707	0					
ANR	6311257	BreakStatement	break ;	368:2:8864:8869	6310707	41	True				
ANR	6311258	ReturnStatement	return cstr_buf . data ;	370:1:8875:8895	6310707	12	True				
ANR	6311259	MemberAccess	cstr_buf . data		6310707	0					
ANR	6311260	Identifier	cstr_buf		6310707	0					
ANR	6311261	Identifier	data		6310707	1					
ANR	6311262	ReturnType	ST_FUNC char *		6310707	1					
ANR	6311263	Identifier	get_tok_str		6310707	2					
ANR	6311264	ParameterList	"int v , CValue * cv"		6310707	3					
ANR	6311265	Parameter	int v	261:26:6559:6563	6310707	0	True				
ANR	6311266	ParameterType	int		6310707	0					
ANR	6311267	Identifier	v		6310707	1					
ANR	6311268	Parameter	CValue * cv	261:33:6566:6575	6310707	1	True				
ANR	6311269	ParameterType	CValue *		6310707	0					
ANR	6311270	Identifier	cv		6310707	1					
ANR	6311271	CFGEntryNode	ENTRY		6310707		True				
ANR	6311272	CFGExitNode	EXIT		6310707		True				
ANR	6311273	Symbol	cstr		6310707						
ANR	6311274	Symbol	* v		6310707						
ANR	6311275	Symbol	table_ident [ v - TOK_IDENT ] -> str		6310707						
ANR	6311276	Symbol	cstr_buf		6310707						
ANR	6311277	Symbol	tok_two_chars		6310707						
ANR	6311278	Symbol	& cstr_buf		6310707						
ANR	6311279	Symbol	cstr -> data		6310707						
ANR	6311280	Symbol	* table_ident		6310707						
ANR	6311281	Symbol	cstr -> size		6310707						
ANR	6311282	Symbol	strcpy		6310707						
ANR	6311283	Symbol	* * cstr		6310707						
ANR	6311284	Symbol	* TOK_IDENT		6310707						
ANR	6311285	Symbol	cv -> ui		6310707						
ANR	6311286	Symbol	len		6310707						
ANR	6311287	Symbol	* * v		6310707						
ANR	6311288	Symbol	* * TOK_IDENT		6310707						
ANR	6311289	Symbol	cv -> cstr		6310707						
ANR	6311290	Symbol	cstr_buf . size_allocated		6310707						
ANR	6311291	Symbol	SYM_FIRST_ANOM		6310707						
ANR	6311292	Symbol	NULL		6310707						
ANR	6311293	Symbol	TOK_IDENT		6310707						
ANR	6311294	Symbol	TOK_STR		6310707						
ANR	6311295	Symbol	* p ++		6310707						
ANR	6311296	Symbol	* * table_ident		6310707						
ANR	6311297	Symbol	i		6310707						
ANR	6311298	Symbol	* cstr -> data		6310707						
ANR	6311299	Symbol	p		6310707						
ANR	6311300	Symbol	q		6310707						
ANR	6311301	Symbol	table_ident		6310707						
ANR	6311302	Symbol	buf		6310707						
ANR	6311303	Symbol	cstr_buf . data		6310707						
ANR	6311304	Symbol	cv		6310707						
ANR	6311305	Symbol	* i		6310707						
ANR	6311306	Symbol	tok_ident		6310707						
ANR	6311307	Symbol	v		6310707						
ANR	6311308	Symbol	* cstr		6310707						
ANR	6311309	Symbol	* cv		6310707						
ANR	6311310	Symbol	cv -> i		6310707						
ANR	6311311	Symbol	* p		6310707						
ANR	6311312	Symbol	* q		6310707						
ANR	6311313	Function	tcc_peekc_slow	374:0:8943:9512							
ANR	6311314	FunctionDef	tcc_peekc_slow (BufferedFile * bf)		6311313	0					
ANR	6311315	CompoundStatement		375:0:8987:9512	6311313	0					
ANR	6311316	IdentifierDeclStatement	int len ;	376:1:8990:8997	6311313	0	True				
ANR	6311317	IdentifierDecl	len		6311313	0					
ANR	6311318	IdentifierDeclType	int		6311313	0					
ANR	6311319	Identifier	len		6311313	1					
ANR	6311320	IfStatement	if ( bf -> buf_ptr >= bf -> buf_end )		6311313	1					
ANR	6311321	Condition	bf -> buf_ptr >= bf -> buf_end	378:5:9054:9079	6311313	0	True				
ANR	6311322	RelationalExpression	bf -> buf_ptr >= bf -> buf_end		6311313	0		>=			
ANR	6311323	PtrMemberAccess	bf -> buf_ptr		6311313	0					
ANR	6311324	Identifier	bf		6311313	0					
ANR	6311325	Identifier	buf_ptr		6311313	1					
ANR	6311326	PtrMemberAccess	bf -> buf_end		6311313	1					
ANR	6311327	Identifier	bf		6311313	0					
ANR	6311328	Identifier	buf_end		6311313	1					
ANR	6311329	CompoundStatement		4:33:94:94	6311313	1					
ANR	6311330	IfStatement	if ( bf -> fd != - 1 )		6311313	0					
ANR	6311331	Condition	bf -> fd != - 1	379:6:9090:9101	6311313	0	True				
ANR	6311332	EqualityExpression	bf -> fd != - 1		6311313	0		!=			
ANR	6311333	PtrMemberAccess	bf -> fd		6311313	0					
ANR	6311334	Identifier	bf		6311313	0					
ANR	6311335	Identifier	fd		6311313	1					
ANR	6311336	UnaryOperationExpression	- 1		6311313	1					
ANR	6311337	UnaryOperator	-		6311313	0					
ANR	6311338	PrimaryExpression	1		6311313	1					
ANR	6311339	CompoundStatement		5:20:116:116	6311313	1					
ANR	6311340	ExpressionStatement	len = 8	381:3:9134:9141	6311313	0	True				
ANR	6311341	AssignmentExpression	len = 8		6311313	0		=			
ANR	6311342	Identifier	len		6311313	0					
ANR	6311343	PrimaryExpression	8		6311313	1					
ANR	6311344	ExpressionStatement	"len = read ( bf -> fd , bf -> buffer , len )"	385:3:9181:9217	6311313	1	True				
ANR	6311345	AssignmentExpression	"len = read ( bf -> fd , bf -> buffer , len )"		6311313	0		=			
ANR	6311346	Identifier	len		6311313	0					
ANR	6311347	CallExpression	"read ( bf -> fd , bf -> buffer , len )"		6311313	1					
ANR	6311348	Callee	read		6311313	0					
ANR	6311349	Identifier	read		6311313	0					
ANR	6311350	ArgumentList	bf -> fd		6311313	1					
ANR	6311351	Argument	bf -> fd		6311313	0					
ANR	6311352	PtrMemberAccess	bf -> fd		6311313	0					
ANR	6311353	Identifier	bf		6311313	0					
ANR	6311354	Identifier	fd		6311313	1					
ANR	6311355	Argument	bf -> buffer		6311313	1					
ANR	6311356	PtrMemberAccess	bf -> buffer		6311313	0					
ANR	6311357	Identifier	bf		6311313	0					
ANR	6311358	Identifier	buffer		6311313	1					
ANR	6311359	Argument	len		6311313	2					
ANR	6311360	Identifier	len		6311313	0					
ANR	6311361	IfStatement	if ( len < 0 )		6311313	2					
ANR	6311362	Condition	len < 0	386:7:9226:9232	6311313	0	True				
ANR	6311363	RelationalExpression	len < 0		6311313	0		<			
ANR	6311364	Identifier	len		6311313	0					
ANR	6311365	PrimaryExpression	0		6311313	1					
ANR	6311366	CompoundStatement		12:16:247:247	6311313	1					
ANR	6311367	ExpressionStatement	len = 0	387:4:9241:9248	6311313	0	True				
ANR	6311368	AssignmentExpression	len = 0		6311313	0		=			
ANR	6311369	Identifier	len		6311313	0					
ANR	6311370	PrimaryExpression	0		6311313	1					
ANR	6311371	ElseStatement	else		6311313	0					
ANR	6311372	CompoundStatement		15:9:276:276	6311313	0					
ANR	6311373	ExpressionStatement	len = 0	390:3:9269:9276	6311313	0	True				
ANR	6311374	AssignmentExpression	len = 0		6311313	0		=			
ANR	6311375	Identifier	len		6311313	0					
ANR	6311376	PrimaryExpression	0		6311313	1					
ANR	6311377	ExpressionStatement	total_bytes += len	392:2:9284:9302	6311313	1	True				
ANR	6311378	AssignmentExpression	total_bytes += len		6311313	0		+=			
ANR	6311379	Identifier	total_bytes		6311313	0					
ANR	6311380	Identifier	len		6311313	1					
ANR	6311381	ExpressionStatement	bf -> buf_ptr = bf -> buffer	393:2:9306:9330	6311313	2	True				
ANR	6311382	AssignmentExpression	bf -> buf_ptr = bf -> buffer		6311313	0		=			
ANR	6311383	PtrMemberAccess	bf -> buf_ptr		6311313	0					
ANR	6311384	Identifier	bf		6311313	0					
ANR	6311385	Identifier	buf_ptr		6311313	1					
ANR	6311386	PtrMemberAccess	bf -> buffer		6311313	1					
ANR	6311387	Identifier	bf		6311313	0					
ANR	6311388	Identifier	buffer		6311313	1					
ANR	6311389	ExpressionStatement	bf -> buf_end = bf -> buffer + len	394:2:9334:9364	6311313	3	True				
ANR	6311390	AssignmentExpression	bf -> buf_end = bf -> buffer + len		6311313	0		=			
ANR	6311391	PtrMemberAccess	bf -> buf_end		6311313	0					
ANR	6311392	Identifier	bf		6311313	0					
ANR	6311393	Identifier	buf_end		6311313	1					
ANR	6311394	AdditiveExpression	bf -> buffer + len		6311313	1		+			
ANR	6311395	PtrMemberAccess	bf -> buffer		6311313	0					
ANR	6311396	Identifier	bf		6311313	0					
ANR	6311397	Identifier	buffer		6311313	1					
ANR	6311398	Identifier	len		6311313	1					
ANR	6311399	ExpressionStatement	* bf -> buf_end = CH_EOB	395:2:9368:9389	6311313	4	True				
ANR	6311400	AssignmentExpression	* bf -> buf_end = CH_EOB		6311313	0		=			
ANR	6311401	UnaryOperationExpression	* bf -> buf_end		6311313	0					
ANR	6311402	UnaryOperator	*		6311313	0					
ANR	6311403	PtrMemberAccess	bf -> buf_end		6311313	1					
ANR	6311404	Identifier	bf		6311313	0					
ANR	6311405	Identifier	buf_end		6311313	1					
ANR	6311406	Identifier	CH_EOB		6311313	1					
ANR	6311407	IfStatement	if ( bf -> buf_ptr < bf -> buf_end )		6311313	2					
ANR	6311408	Condition	bf -> buf_ptr < bf -> buf_end	397:5:9399:9423	6311313	0	True				
ANR	6311409	RelationalExpression	bf -> buf_ptr < bf -> buf_end		6311313	0		<			
ANR	6311410	PtrMemberAccess	bf -> buf_ptr		6311313	0					
ANR	6311411	Identifier	bf		6311313	0					
ANR	6311412	Identifier	buf_ptr		6311313	1					
ANR	6311413	PtrMemberAccess	bf -> buf_end		6311313	1					
ANR	6311414	Identifier	bf		6311313	0					
ANR	6311415	Identifier	buf_end		6311313	1					
ANR	6311416	CompoundStatement		23:32:438:438	6311313	1					
ANR	6311417	ReturnStatement	return bf -> buf_ptr [ 0 ] ;	398:2:9430:9451	6311313	0	True				
ANR	6311418	ArrayIndexing	bf -> buf_ptr [ 0 ]		6311313	0					
ANR	6311419	PtrMemberAccess	bf -> buf_ptr		6311313	0					
ANR	6311420	Identifier	bf		6311313	0					
ANR	6311421	Identifier	buf_ptr		6311313	1					
ANR	6311422	PrimaryExpression	0		6311313	1					
ANR	6311423	ElseStatement	else		6311313	0					
ANR	6311424	CompoundStatement		25:8:473:473	6311313	0					
ANR	6311425	ExpressionStatement	bf -> buf_ptr = bf -> buf_end	400:2:9465:9490	6311313	0	True				
ANR	6311426	AssignmentExpression	bf -> buf_ptr = bf -> buf_end		6311313	0		=			
ANR	6311427	PtrMemberAccess	bf -> buf_ptr		6311313	0					
ANR	6311428	Identifier	bf		6311313	0					
ANR	6311429	Identifier	buf_ptr		6311313	1					
ANR	6311430	PtrMemberAccess	bf -> buf_end		6311313	1					
ANR	6311431	Identifier	bf		6311313	0					
ANR	6311432	Identifier	buf_end		6311313	1					
ANR	6311433	ReturnStatement	return CH_EOF ;	401:2:9494:9507	6311313	1	True				
ANR	6311434	Identifier	CH_EOF		6311313	0					
ANR	6311435	ReturnType	static int		6311313	1					
ANR	6311436	Identifier	tcc_peekc_slow		6311313	2					
ANR	6311437	ParameterList	BufferedFile * bf		6311313	3					
ANR	6311438	Parameter	BufferedFile * bf	374:26:8969:8984	6311313	0	True				
ANR	6311439	ParameterType	BufferedFile *		6311313	0					
ANR	6311440	Identifier	bf		6311313	1					
ANR	6311441	CFGEntryNode	ENTRY		6311313		True				
ANR	6311442	CFGExitNode	EXIT		6311313		True				
ANR	6311443	Symbol	read		6311313						
ANR	6311444	Symbol	bf		6311313						
ANR	6311445	Symbol	bf -> buf_end		6311313						
ANR	6311446	Symbol	* bf		6311313						
ANR	6311447	Symbol	CH_EOB		6311313						
ANR	6311448	Symbol	* bf -> buf_ptr		6311313						
ANR	6311449	Symbol	bf -> fd		6311313						
ANR	6311450	Symbol	bf -> buffer		6311313						
ANR	6311451	Symbol	* * bf		6311313						
ANR	6311452	Symbol	* bf -> buf_end		6311313						
ANR	6311453	Symbol	bf -> buf_ptr		6311313						
ANR	6311454	Symbol	len		6311313						
ANR	6311455	Symbol	CH_EOF		6311313						
ANR	6311456	Symbol	total_bytes		6311313						
ANR	6311457	Function	handle_eob	407:0:9605:9667							
ANR	6311458	FunctionDef	handle_eob ()		6311457	0					
ANR	6311459	CompoundStatement		408:0:9634:9667	6311457	0					
ANR	6311460	ReturnStatement	return tcc_peekc_slow ( file ) ;	409:1:9637:9665	6311457	0	True				
ANR	6311461	CallExpression	tcc_peekc_slow ( file )		6311457	0					
ANR	6311462	Callee	tcc_peekc_slow		6311457	0					
ANR	6311463	Identifier	tcc_peekc_slow		6311457	0					
ANR	6311464	ArgumentList	file		6311457	1					
ANR	6311465	Argument	file		6311457	0					
ANR	6311466	Identifier	file		6311457	0					
ANR	6311467	ReturnType	ST_FUNC int		6311457	1					
ANR	6311468	Identifier	handle_eob		6311457	2					
ANR	6311469	ParameterList			6311457	3					
ANR	6311470	CFGEntryNode	ENTRY		6311457		True				
ANR	6311471	CFGExitNode	EXIT		6311457		True				
ANR	6311472	Symbol	file		6311457						
ANR	6311473	Symbol	tcc_peekc_slow		6311457						
ANR	6311474	Function	inp	413:0:9746:9880							
ANR	6311475	FunctionDef	inp ()		6311474	0					
ANR	6311476	CompoundStatement		414:0:9769:9880	6311474	0					
ANR	6311477	ExpressionStatement	ch = * ( ++ ( file -> buf_ptr ) )	415:1:9772:9797	6311474	0	True				
ANR	6311478	AssignmentExpression	ch = * ( ++ ( file -> buf_ptr ) )		6311474	0		=			
ANR	6311479	Identifier	ch		6311474	0					
ANR	6311480	UnaryOperationExpression	* ( ++ ( file -> buf_ptr ) )		6311474	1					
ANR	6311481	UnaryOperator	*		6311474	0					
ANR	6311482	UnaryExpression	++ ( file -> buf_ptr )		6311474	1					
ANR	6311483	IncDec	++		6311474	0					
ANR	6311484	PtrMemberAccess	file -> buf_ptr		6311474	1					
ANR	6311485	Identifier	file		6311474	0					
ANR	6311486	Identifier	buf_ptr		6311474	1					
ANR	6311487	IfStatement	if ( ch == CH_EOB )		6311474	1					
ANR	6311488	Condition	ch == CH_EOB	417:5:9839:9850	6311474	0	True				
ANR	6311489	EqualityExpression	ch == CH_EOB		6311474	0		==			
ANR	6311490	Identifier	ch		6311474	0					
ANR	6311491	Identifier	CH_EOB		6311474	1					
ANR	6311492	CompoundStatement		4:19:83:83	6311474	1					
ANR	6311493	ExpressionStatement	ch = handle_eob ( )	418:2:9857:9875	6311474	0	True				
ANR	6311494	AssignmentExpression	ch = handle_eob ( )		6311474	0		=			
ANR	6311495	Identifier	ch		6311474	0					
ANR	6311496	CallExpression	handle_eob ( )		6311474	1					
ANR	6311497	Callee	handle_eob		6311474	0					
ANR	6311498	Identifier	handle_eob		6311474	0					
ANR	6311499	ArgumentList			6311474	1					
ANR	6311500	ReturnType	ST_INLN void		6311474	1					
ANR	6311501	Identifier	inp		6311474	2					
ANR	6311502	ParameterList			6311474	3					
ANR	6311503	CFGEntryNode	ENTRY		6311474		True				
ANR	6311504	CFGExitNode	EXIT		6311474		True				
ANR	6311505	Symbol	file		6311474						
ANR	6311506	Symbol	ch		6311474						
ANR	6311507	Symbol	* file -> buf_ptr		6311474						
ANR	6311508	Symbol	* ( ++ ( file -> buf_ptr ) )		6311474						
ANR	6311509	Symbol	CH_EOB		6311474						
ANR	6311510	Symbol	handle_eob		6311474						
ANR	6311511	Symbol	file -> buf_ptr		6311474						
ANR	6311512	Symbol	* file		6311474						
ANR	6311513	Symbol	* * file		6311474						
ANR	6311514	Function	handle_stray_noerror	423:0:9906:10189							
ANR	6311515	FunctionDef	handle_stray_noerror ()		6311514	0					
ANR	6311516	CompoundStatement		424:0:9944:10189	6311514	0					
ANR	6311517	WhileStatement	while ( ch == '\\\\' )		6311514	0					
ANR	6311518	Condition	ch == '\\\\'	425:8:9954:9963	6311514	0	True				
ANR	6311519	EqualityExpression	ch == '\\\\'		6311514	0		==			
ANR	6311520	Identifier	ch		6311514	0					
ANR	6311521	PrimaryExpression	'\\\\'		6311514	1					
ANR	6311522	CompoundStatement		2:20:21:21	6311514	1					
ANR	6311523	ExpressionStatement	inp ( )	426:2:9970:9976	6311514	0	True				
ANR	6311524	CallExpression	inp ( )		6311514	0					
ANR	6311525	Callee	inp		6311514	0					
ANR	6311526	Identifier	inp		6311514	0					
ANR	6311527	ArgumentList			6311514	1					
ANR	6311528	IfStatement	if ( ch == '\\n' )		6311514	1					
ANR	6311529	Condition	ch == '\\n'	427:6:9984:9993	6311514	0	True				
ANR	6311530	EqualityExpression	ch == '\\n'		6311514	0		==			
ANR	6311531	Identifier	ch		6311514	0					
ANR	6311532	PrimaryExpression	'\\n'		6311514	1					
ANR	6311533	CompoundStatement		4:18:51:51	6311514	1					
ANR	6311534	ExpressionStatement	file -> line_num ++	428:3:10001:10017	6311514	0	True				
ANR	6311535	PostIncDecOperationExpression	file -> line_num ++		6311514	0					
ANR	6311536	PtrMemberAccess	file -> line_num		6311514	0					
ANR	6311537	Identifier	file		6311514	0					
ANR	6311538	Identifier	line_num		6311514	1					
ANR	6311539	IncDec	++		6311514	1					
ANR	6311540	ExpressionStatement	inp ( )	429:3:10022:10028	6311514	1	True				
ANR	6311541	CallExpression	inp ( )		6311514	0					
ANR	6311542	Callee	inp		6311514	0					
ANR	6311543	Identifier	inp		6311514	0					
ANR	6311544	ArgumentList			6311514	1					
ANR	6311545	ElseStatement	else		6311514	0					
ANR	6311546	IfStatement	if ( ch == '\\r' )		6311514	0					
ANR	6311547	Condition	ch == '\\r'	430:13:10043:10052	6311514	0	True				
ANR	6311548	EqualityExpression	ch == '\\r'		6311514	0		==			
ANR	6311549	Identifier	ch		6311514	0					
ANR	6311550	PrimaryExpression	'\\r'		6311514	1					
ANR	6311551	CompoundStatement		7:25:110:110	6311514	1					
ANR	6311552	ExpressionStatement	inp ( )	431:3:10060:10066	6311514	0	True				
ANR	6311553	CallExpression	inp ( )		6311514	0					
ANR	6311554	Callee	inp		6311514	0					
ANR	6311555	Identifier	inp		6311514	0					
ANR	6311556	ArgumentList			6311514	1					
ANR	6311557	IfStatement	if ( ch != '\\n' )		6311514	1					
ANR	6311558	Condition	ch != '\\n'	432:7:10075:10084	6311514	0	True				
ANR	6311559	EqualityExpression	ch != '\\n'		6311514	0		!=			
ANR	6311560	Identifier	ch		6311514	0					
ANR	6311561	PrimaryExpression	'\\n'		6311514	1					
ANR	6311562	CompoundStatement		9:19:142:142	6311514	1					
ANR	6311563	GotoStatement	goto fail ;	433:4:10093:10102	6311514	0	True				
ANR	6311564	Identifier	fail		6311514	0					
ANR	6311565	ExpressionStatement	file -> line_num ++	435:3:10112:10128	6311514	2	True				
ANR	6311566	PostIncDecOperationExpression	file -> line_num ++		6311514	0					
ANR	6311567	PtrMemberAccess	file -> line_num		6311514	0					
ANR	6311568	Identifier	file		6311514	0					
ANR	6311569	Identifier	line_num		6311514	1					
ANR	6311570	IncDec	++		6311514	1					
ANR	6311571	ExpressionStatement	inp ( )	436:3:10133:10139	6311514	3	True				
ANR	6311572	CallExpression	inp ( )		6311514	0					
ANR	6311573	Callee	inp		6311514	0					
ANR	6311574	Identifier	inp		6311514	0					
ANR	6311575	ArgumentList			6311514	1					
ANR	6311576	ElseStatement	else		6311514	0					
ANR	6311577	CompoundStatement		14:9:205:205	6311514	0					
ANR	6311578	Label	fail :	438:0:10152:10156	6311514	0	True				
ANR	6311579	Identifier	fail		6311514	0					
ANR	6311580	ReturnStatement	return 1 ;	439:3:10161:10169	6311514	1	True				
ANR	6311581	PrimaryExpression	1		6311514	0					
ANR	6311582	ReturnStatement	return 0 ;	442:1:10179:10187	6311514	1	True				
ANR	6311583	PrimaryExpression	0		6311514	0					
ANR	6311584	ReturnType	static int		6311514	1					
ANR	6311585	Identifier	handle_stray_noerror		6311514	2					
ANR	6311586	ParameterList			6311514	3					
ANR	6311587	CFGEntryNode	ENTRY		6311514		True				
ANR	6311588	CFGExitNode	EXIT		6311514		True				
ANR	6311589	Symbol	file		6311514						
ANR	6311590	Symbol	ch		6311514						
ANR	6311591	Symbol	file -> line_num		6311514						
ANR	6311592	Symbol	* file		6311514						
ANR	6311593	Function	handle_stray	445:0:10192:10299							
ANR	6311594	FunctionDef	handle_stray ()		6311593	0					
ANR	6311595	CompoundStatement		446:0:10223:10299	6311593	0					
ANR	6311596	IfStatement	if ( handle_stray_noerror ( ) )		6311593	0					
ANR	6311597	Condition	handle_stray_noerror ( )	447:5:10230:10252	6311593	0	True				
ANR	6311598	CallExpression	handle_stray_noerror ( )		6311593	0					
ANR	6311599	Callee	handle_stray_noerror		6311593	0					
ANR	6311600	Identifier	handle_stray_noerror		6311593	0					
ANR	6311601	ArgumentList			6311593	1					
ANR	6311602	CompoundStatement		2:30:31:31	6311593	1					
ANR	6311603	ExpressionStatement	"tcc_error ( ""stray '\\\\' in program"" )"	448:2:10259:10294	6311593	0	True				
ANR	6311604	CallExpression	"tcc_error ( ""stray '\\\\' in program"" )"		6311593	0					
ANR	6311605	Callee	tcc_error		6311593	0					
ANR	6311606	Identifier	tcc_error		6311593	0					
ANR	6311607	ArgumentList	"""stray '\\\\' in program"""		6311593	1					
ANR	6311608	Argument	"""stray '\\\\' in program"""		6311593	0					
ANR	6311609	PrimaryExpression	"""stray '\\\\' in program"""		6311593	0					
ANR	6311610	ReturnType	static void		6311593	1					
ANR	6311611	Identifier	handle_stray		6311593	2					
ANR	6311612	ParameterList			6311593	3					
ANR	6311613	CFGEntryNode	ENTRY		6311593		True				
ANR	6311614	CFGExitNode	EXIT		6311593		True				
ANR	6311615	Symbol	handle_stray_noerror		6311593						
ANR	6311616	Function	handle_stray1	454:0:10401:10702							
ANR	6311617	FunctionDef	handle_stray1 (uint8_t * p)		6311616	0					
ANR	6311618	CompoundStatement		455:0:10438:10702	6311616	0					
ANR	6311619	IdentifierDeclStatement	int c ;	456:1:10441:10446	6311616	0	True				
ANR	6311620	IdentifierDecl	c		6311616	0					
ANR	6311621	IdentifierDeclType	int		6311616	0					
ANR	6311622	Identifier	c		6311616	1					
ANR	6311623	IfStatement	if ( p >= file -> buf_end )		6311616	1					
ANR	6311624	Condition	p >= file -> buf_end	458:5:10454:10471	6311616	0	True				
ANR	6311625	RelationalExpression	p >= file -> buf_end		6311616	0		>=			
ANR	6311626	Identifier	p		6311616	0					
ANR	6311627	PtrMemberAccess	file -> buf_end		6311616	1					
ANR	6311628	Identifier	file		6311616	0					
ANR	6311629	Identifier	buf_end		6311616	1					
ANR	6311630	CompoundStatement		4:25:35:35	6311616	1					
ANR	6311631	ExpressionStatement	file -> buf_ptr = p	459:2:10478:10495	6311616	0	True				
ANR	6311632	AssignmentExpression	file -> buf_ptr = p		6311616	0		=			
ANR	6311633	PtrMemberAccess	file -> buf_ptr		6311616	0					
ANR	6311634	Identifier	file		6311616	0					
ANR	6311635	Identifier	buf_ptr		6311616	1					
ANR	6311636	Identifier	p		6311616	1					
ANR	6311637	ExpressionStatement	c = handle_eob ( )	460:2:10499:10516	6311616	1	True				
ANR	6311638	AssignmentExpression	c = handle_eob ( )		6311616	0		=			
ANR	6311639	Identifier	c		6311616	0					
ANR	6311640	CallExpression	handle_eob ( )		6311616	1					
ANR	6311641	Callee	handle_eob		6311616	0					
ANR	6311642	Identifier	handle_eob		6311616	0					
ANR	6311643	ArgumentList			6311616	1					
ANR	6311644	ExpressionStatement	p = file -> buf_ptr	461:2:10520:10537	6311616	2	True				
ANR	6311645	AssignmentExpression	p = file -> buf_ptr		6311616	0		=			
ANR	6311646	Identifier	p		6311616	0					
ANR	6311647	PtrMemberAccess	file -> buf_ptr		6311616	1					
ANR	6311648	Identifier	file		6311616	0					
ANR	6311649	Identifier	buf_ptr		6311616	1					
ANR	6311650	IfStatement	if ( c == '\\\\' )		6311616	3					
ANR	6311651	Condition	c == '\\\\'	462:6:10545:10553	6311616	0	True				
ANR	6311652	EqualityExpression	c == '\\\\'		6311616	0		==			
ANR	6311653	Identifier	c		6311616	0					
ANR	6311654	PrimaryExpression	'\\\\'		6311616	1					
ANR	6311655	CompoundStatement		8:17:117:117	6311616	1					
ANR	6311656	GotoStatement	goto parse_stray ;	463:3:10561:10577	6311616	0	True				
ANR	6311657	Identifier	parse_stray		6311616	0					
ANR	6311658	ElseStatement	else		6311616	0					
ANR	6311659	CompoundStatement		11:8:152:152	6311616	0					
ANR	6311660	Label	parse_stray :	466:0:10593:10604	6311616	0	True				
ANR	6311661	Identifier	parse_stray		6311616	0					
ANR	6311662	ExpressionStatement	file -> buf_ptr = p	467:2:10608:10625	6311616	1	True				
ANR	6311663	AssignmentExpression	file -> buf_ptr = p		6311616	0		=			
ANR	6311664	PtrMemberAccess	file -> buf_ptr		6311616	0					
ANR	6311665	Identifier	file		6311616	0					
ANR	6311666	Identifier	buf_ptr		6311616	1					
ANR	6311667	Identifier	p		6311616	1					
ANR	6311668	ExpressionStatement	ch = * p	468:2:10629:10636	6311616	2	True				
ANR	6311669	AssignmentExpression	ch = * p		6311616	0		=			
ANR	6311670	Identifier	ch		6311616	0					
ANR	6311671	UnaryOperationExpression	* p		6311616	1					
ANR	6311672	UnaryOperator	*		6311616	0					
ANR	6311673	Identifier	p		6311616	1					
ANR	6311674	ExpressionStatement	handle_stray ( )	469:2:10640:10655	6311616	3	True				
ANR	6311675	CallExpression	handle_stray ( )		6311616	0					
ANR	6311676	Callee	handle_stray		6311616	0					
ANR	6311677	Identifier	handle_stray		6311616	0					
ANR	6311678	ArgumentList			6311616	1					
ANR	6311679	ExpressionStatement	p = file -> buf_ptr	470:2:10659:10676	6311616	4	True				
ANR	6311680	AssignmentExpression	p = file -> buf_ptr		6311616	0		=			
ANR	6311681	Identifier	p		6311616	0					
ANR	6311682	PtrMemberAccess	file -> buf_ptr		6311616	1					
ANR	6311683	Identifier	file		6311616	0					
ANR	6311684	Identifier	buf_ptr		6311616	1					
ANR	6311685	ExpressionStatement	c = * p	471:2:10680:10686	6311616	5	True				
ANR	6311686	AssignmentExpression	c = * p		6311616	0		=			
ANR	6311687	Identifier	c		6311616	0					
ANR	6311688	UnaryOperationExpression	* p		6311616	1					
ANR	6311689	UnaryOperator	*		6311616	0					
ANR	6311690	Identifier	p		6311616	1					
ANR	6311691	ReturnStatement	return c ;	473:1:10692:10700	6311616	2	True				
ANR	6311692	Identifier	c		6311616	0					
ANR	6311693	ReturnType	static int		6311616	1					
ANR	6311694	Identifier	handle_stray1		6311616	2					
ANR	6311695	ParameterList	uint8_t * p		6311616	3					
ANR	6311696	Parameter	uint8_t * p	454:25:10426:10435	6311616	0	True				
ANR	6311697	ParameterType	uint8_t *		6311616	0					
ANR	6311698	Identifier	p		6311616	1					
ANR	6311699	CFGEntryNode	ENTRY		6311616		True				
ANR	6311700	CFGExitNode	EXIT		6311616		True				
ANR	6311701	Symbol	p		6311616						
ANR	6311702	Symbol	c		6311616						
ANR	6311703	Symbol	file		6311616						
ANR	6311704	Symbol	ch		6311616						
ANR	6311705	Symbol	file -> buf_end		6311616						
ANR	6311706	Symbol	handle_eob		6311616						
ANR	6311707	Symbol	* p		6311616						
ANR	6311708	Symbol	file -> buf_ptr		6311616						
ANR	6311709	Symbol	* file		6311616						
ANR	6311710	Function	minp	502:0:11252:11328							
ANR	6311711	FunctionDef	minp ()		6311710	0					
ANR	6311712	CompoundStatement		503:0:11276:11328	6311710	0					
ANR	6311713	ExpressionStatement	inp ( )	504:1:11279:11285	6311710	0	True				
ANR	6311714	CallExpression	inp ( )		6311710	0					
ANR	6311715	Callee	inp		6311710	0					
ANR	6311716	Identifier	inp		6311710	0					
ANR	6311717	ArgumentList			6311710	1					
ANR	6311718	IfStatement	if ( ch == '\\\\' )		6311710	1					
ANR	6311719	Condition	ch == '\\\\'	505:5:11292:11301	6311710	0	True				
ANR	6311720	EqualityExpression	ch == '\\\\'		6311710	0		==			
ANR	6311721	Identifier	ch		6311710	0					
ANR	6311722	PrimaryExpression	'\\\\'		6311710	1					
ANR	6311723	CompoundStatement		3:17:27:27	6311710	1					
ANR	6311724	ExpressionStatement	handle_stray ( )	506:2:11308:11323	6311710	0	True				
ANR	6311725	CallExpression	handle_stray ( )		6311710	0					
ANR	6311726	Callee	handle_stray		6311710	0					
ANR	6311727	Identifier	handle_stray		6311710	0					
ANR	6311728	ArgumentList			6311710	1					
ANR	6311729	ReturnType	ST_FUNC void		6311710	1					
ANR	6311730	Identifier	minp		6311710	2					
ANR	6311731	ParameterList			6311710	3					
ANR	6311732	CFGEntryNode	ENTRY		6311710		True				
ANR	6311733	CFGExitNode	EXIT		6311710		True				
ANR	6311734	Symbol	ch		6311710						
ANR	6311735	Function	parse_line_comment	512:0:11363:11903							
ANR	6311736	FunctionDef	parse_line_comment (uint8_t * p)		6311735	0					
ANR	6311737	CompoundStatement		513:0:11410:11903	6311735	0					
ANR	6311738	IdentifierDeclStatement	int c ;	514:1:11413:11418	6311735	0	True				
ANR	6311739	IdentifierDecl	c		6311735	0					
ANR	6311740	IdentifierDeclType	int		6311735	0					
ANR	6311741	Identifier	c		6311735	1					
ANR	6311742	ExpressionStatement	p ++	516:1:11422:11425	6311735	1	True				
ANR	6311743	PostIncDecOperationExpression	p ++		6311735	0					
ANR	6311744	Identifier	p		6311735	0					
ANR	6311745	IncDec	++		6311735	1					
ANR	6311746	ForStatement	for ( ; ; )		6311735	2					
ANR	6311747	CompoundStatement		5:10:26:26	6311735	0					
ANR	6311748	ExpressionStatement	c = * p	518:2:11441:11447	6311735	0	True				
ANR	6311749	AssignmentExpression	c = * p		6311735	0		=			
ANR	6311750	Identifier	c		6311735	0					
ANR	6311751	UnaryOperationExpression	* p		6311735	1					
ANR	6311752	UnaryOperator	*		6311735	0					
ANR	6311753	Identifier	p		6311735	1					
ANR	6311754	Label	redo :	519:0:11449:11453	6311735	1	True				
ANR	6311755	Identifier	redo		6311735	0					
ANR	6311756	IfStatement	if ( c == '\\n' || c == CH_EOF )		6311735	2					
ANR	6311757	Condition	c == '\\n' || c == CH_EOF	520:6:11461:11484	6311735	0	True				
ANR	6311758	OrExpression	c == '\\n' || c == CH_EOF		6311735	0		||			
ANR	6311759	EqualityExpression	c == '\\n'		6311735	0		==			
ANR	6311760	Identifier	c		6311735	0					
ANR	6311761	PrimaryExpression	'\\n'		6311735	1					
ANR	6311762	EqualityExpression	c == CH_EOF		6311735	1		==			
ANR	6311763	Identifier	c		6311735	0					
ANR	6311764	Identifier	CH_EOF		6311735	1					
ANR	6311765	CompoundStatement		8:32:76:76	6311735	1					
ANR	6311766	BreakStatement	break ;	521:3:11492:11497	6311735	0	True				
ANR	6311767	ElseStatement	else		6311735	0					
ANR	6311768	IfStatement	if ( c == '\\\\' )		6311735	0					
ANR	6311769	Condition	c == '\\\\'	522:13:11512:11520	6311735	0	True				
ANR	6311770	EqualityExpression	c == '\\\\'		6311735	0		==			
ANR	6311771	Identifier	c		6311735	0					
ANR	6311772	PrimaryExpression	'\\\\'		6311735	1					
ANR	6311773	CompoundStatement		10:24:112:112	6311735	1					
ANR	6311774	ExpressionStatement	file -> buf_ptr = p	523:3:11528:11545	6311735	0	True				
ANR	6311775	AssignmentExpression	file -> buf_ptr = p		6311735	0		=			
ANR	6311776	PtrMemberAccess	file -> buf_ptr		6311735	0					
ANR	6311777	Identifier	file		6311735	0					
ANR	6311778	Identifier	buf_ptr		6311735	1					
ANR	6311779	Identifier	p		6311735	1					
ANR	6311780	ExpressionStatement	c = handle_eob ( )	524:3:11550:11567	6311735	1	True				
ANR	6311781	AssignmentExpression	c = handle_eob ( )		6311735	0		=			
ANR	6311782	Identifier	c		6311735	0					
ANR	6311783	CallExpression	handle_eob ( )		6311735	1					
ANR	6311784	Callee	handle_eob		6311735	0					
ANR	6311785	Identifier	handle_eob		6311735	0					
ANR	6311786	ArgumentList			6311735	1					
ANR	6311787	ExpressionStatement	p = file -> buf_ptr	525:3:11572:11589	6311735	2	True				
ANR	6311788	AssignmentExpression	p = file -> buf_ptr		6311735	0		=			
ANR	6311789	Identifier	p		6311735	0					
ANR	6311790	PtrMemberAccess	file -> buf_ptr		6311735	1					
ANR	6311791	Identifier	file		6311735	0					
ANR	6311792	Identifier	buf_ptr		6311735	1					
ANR	6311793	IfStatement	if ( c == '\\\\' )		6311735	3					
ANR	6311794	Condition	c == '\\\\'	526:7:11598:11606	6311735	0	True				
ANR	6311795	EqualityExpression	c == '\\\\'		6311735	0		==			
ANR	6311796	Identifier	c		6311735	0					
ANR	6311797	PrimaryExpression	'\\\\'		6311735	1					
ANR	6311798	CompoundStatement		14:18:198:198	6311735	1					
ANR	6311799	ExpressionStatement	"PEEKC_EOB ( c , p )"	527:4:11615:11631	6311735	0	True				
ANR	6311800	CallExpression	"PEEKC_EOB ( c , p )"		6311735	0					
ANR	6311801	Callee	PEEKC_EOB		6311735	0					
ANR	6311802	Identifier	PEEKC_EOB		6311735	0					
ANR	6311803	ArgumentList	c		6311735	1					
ANR	6311804	Argument	c		6311735	0					
ANR	6311805	Identifier	c		6311735	0					
ANR	6311806	Argument	p		6311735	1					
ANR	6311807	Identifier	p		6311735	0					
ANR	6311808	IfStatement	if ( c == '\\n' )		6311735	1					
ANR	6311809	Condition	c == '\\n'	528:8:11641:11649	6311735	0	True				
ANR	6311810	EqualityExpression	c == '\\n'		6311735	0		==			
ANR	6311811	Identifier	c		6311735	0					
ANR	6311812	PrimaryExpression	'\\n'		6311735	1					
ANR	6311813	CompoundStatement		16:19:241:241	6311735	1					
ANR	6311814	ExpressionStatement	file -> line_num ++	529:5:11659:11675	6311735	0	True				
ANR	6311815	PostIncDecOperationExpression	file -> line_num ++		6311735	0					
ANR	6311816	PtrMemberAccess	file -> line_num		6311735	0					
ANR	6311817	Identifier	file		6311735	0					
ANR	6311818	Identifier	line_num		6311735	1					
ANR	6311819	IncDec	++		6311735	1					
ANR	6311820	ExpressionStatement	"PEEKC_EOB ( c , p )"	530:5:11682:11698	6311735	1	True				
ANR	6311821	CallExpression	"PEEKC_EOB ( c , p )"		6311735	0					
ANR	6311822	Callee	PEEKC_EOB		6311735	0					
ANR	6311823	Identifier	PEEKC_EOB		6311735	0					
ANR	6311824	ArgumentList	c		6311735	1					
ANR	6311825	Argument	c		6311735	0					
ANR	6311826	Identifier	c		6311735	0					
ANR	6311827	Argument	p		6311735	1					
ANR	6311828	Identifier	p		6311735	0					
ANR	6311829	ElseStatement	else		6311735	0					
ANR	6311830	IfStatement	if ( c == '\\r' )		6311735	0					
ANR	6311831	Condition	c == '\\r'	531:15:11715:11723	6311735	0	True				
ANR	6311832	EqualityExpression	c == '\\r'		6311735	0		==			
ANR	6311833	Identifier	c		6311735	0					
ANR	6311834	PrimaryExpression	'\\r'		6311735	1					
ANR	6311835	CompoundStatement		19:26:315:315	6311735	1					
ANR	6311836	ExpressionStatement	"PEEKC_EOB ( c , p )"	532:5:11733:11749	6311735	0	True				
ANR	6311837	CallExpression	"PEEKC_EOB ( c , p )"		6311735	0					
ANR	6311838	Callee	PEEKC_EOB		6311735	0					
ANR	6311839	Identifier	PEEKC_EOB		6311735	0					
ANR	6311840	ArgumentList	c		6311735	1					
ANR	6311841	Argument	c		6311735	0					
ANR	6311842	Identifier	c		6311735	0					
ANR	6311843	Argument	p		6311735	1					
ANR	6311844	Identifier	p		6311735	0					
ANR	6311845	IfStatement	if ( c == '\\n' )		6311735	1					
ANR	6311846	Condition	c == '\\n'	533:9:11760:11768	6311735	0	True				
ANR	6311847	EqualityExpression	c == '\\n'		6311735	0		==			
ANR	6311848	Identifier	c		6311735	0					
ANR	6311849	PrimaryExpression	'\\n'		6311735	1					
ANR	6311850	CompoundStatement		21:20:360:360	6311735	1					
ANR	6311851	ExpressionStatement	file -> line_num ++	534:6:11779:11795	6311735	0	True				
ANR	6311852	PostIncDecOperationExpression	file -> line_num ++		6311735	0					
ANR	6311853	PtrMemberAccess	file -> line_num		6311735	0					
ANR	6311854	Identifier	file		6311735	0					
ANR	6311855	Identifier	line_num		6311735	1					
ANR	6311856	IncDec	++		6311735	1					
ANR	6311857	ExpressionStatement	"PEEKC_EOB ( c , p )"	535:6:11803:11819	6311735	1	True				
ANR	6311858	CallExpression	"PEEKC_EOB ( c , p )"		6311735	0					
ANR	6311859	Callee	PEEKC_EOB		6311735	0					
ANR	6311860	Identifier	PEEKC_EOB		6311735	0					
ANR	6311861	ArgumentList	c		6311735	1					
ANR	6311862	Argument	c		6311735	0					
ANR	6311863	Identifier	c		6311735	0					
ANR	6311864	Argument	p		6311735	1					
ANR	6311865	Identifier	p		6311735	0					
ANR	6311866	ElseStatement	else		6311735	0					
ANR	6311867	CompoundStatement		26:10:433:433	6311735	0					
ANR	6311868	GotoStatement	goto redo ;	539:4:11850:11859	6311735	0	True				
ANR	6311869	Identifier	redo		6311735	0					
ANR	6311870	ElseStatement	else		6311735	0					
ANR	6311871	CompoundStatement		29:9:464:464	6311735	0					
ANR	6311872	ExpressionStatement	p ++	542:3:11880:11883	6311735	0	True				
ANR	6311873	PostIncDecOperationExpression	p ++		6311735	0					
ANR	6311874	Identifier	p		6311735	0					
ANR	6311875	IncDec	++		6311735	1					
ANR	6311876	ReturnStatement	return p ;	545:1:11893:11901	6311735	3	True				
ANR	6311877	Identifier	p		6311735	0					
ANR	6311878	ReturnType	static uint8_t *		6311735	1					
ANR	6311879	Identifier	parse_line_comment		6311735	2					
ANR	6311880	ParameterList	uint8_t * p		6311735	3					
ANR	6311881	Parameter	uint8_t * p	512:35:11398:11407	6311735	0	True				
ANR	6311882	ParameterType	uint8_t *		6311735	0					
ANR	6311883	Identifier	p		6311735	1					
ANR	6311884	CFGEntryNode	ENTRY		6311735		True				
ANR	6311885	CFGExitNode	EXIT		6311735		True				
ANR	6311886	InfiniteForNode	true		6311735		True				
ANR	6311887	Symbol	p		6311735						
ANR	6311888	Symbol	c		6311735						
ANR	6311889	Symbol	file		6311735						
ANR	6311890	Symbol	CH_EOF		6311735						
ANR	6311891	Symbol	* p		6311735						
ANR	6311892	Symbol	handle_eob		6311735						
ANR	6311893	Symbol	file -> buf_ptr		6311735						
ANR	6311894	Symbol	file -> line_num		6311735						
ANR	6311895	Symbol	* file		6311735						
ANR	6311896	Function	parse_comment	549:0:11923:13256							
ANR	6311897	FunctionDef	parse_comment (uint8_t * p)		6311896	0					
ANR	6311898	CompoundStatement		550:0:11966:13256	6311896	0					
ANR	6311899	IdentifierDeclStatement	int c ;	551:1:11969:11974	6311896	0	True				
ANR	6311900	IdentifierDecl	c		6311896	0					
ANR	6311901	IdentifierDeclType	int		6311896	0					
ANR	6311902	Identifier	c		6311896	1					
ANR	6311903	ExpressionStatement	p ++	553:1:11978:11981	6311896	1	True				
ANR	6311904	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6311905	Identifier	p		6311896	0					
ANR	6311906	IncDec	++		6311896	1					
ANR	6311907	ForStatement	for ( ; ; )		6311896	2					
ANR	6311908	CompoundStatement		5:10:26:26	6311896	0					
ANR	6311909	ForStatement	for ( ; ; )		6311896	0					
ANR	6311910	CompoundStatement		7:11:62:62	6311896	0					
ANR	6311911	ExpressionStatement	c = * p	557:3:12034:12040	6311896	0	True				
ANR	6311912	AssignmentExpression	c = * p		6311896	0		=			
ANR	6311913	Identifier	c		6311896	0					
ANR	6311914	UnaryOperationExpression	* p		6311896	1					
ANR	6311915	UnaryOperator	*		6311896	0					
ANR	6311916	Identifier	p		6311896	1					
ANR	6311917	IfStatement	if ( c == '\\n' || c == '*' || c == '\\\\' )		6311896	1					
ANR	6311918	Condition	c == '\\n' || c == '*' || c == '\\\\'	558:7:12049:12082	6311896	0	True				
ANR	6311919	OrExpression	c == '\\n' || c == '*' || c == '\\\\'		6311896	0		||			
ANR	6311920	EqualityExpression	c == '\\n'		6311896	0		==			
ANR	6311921	Identifier	c		6311896	0					
ANR	6311922	PrimaryExpression	'\\n'		6311896	1					
ANR	6311923	OrExpression	c == '*' || c == '\\\\'		6311896	1		||			
ANR	6311924	EqualityExpression	c == '*'		6311896	0		==			
ANR	6311925	Identifier	c		6311896	0					
ANR	6311926	PrimaryExpression	'*'		6311896	1					
ANR	6311927	EqualityExpression	c == '\\\\'		6311896	1		==			
ANR	6311928	Identifier	c		6311896	0					
ANR	6311929	PrimaryExpression	'\\\\'		6311896	1					
ANR	6311930	CompoundStatement		9:43:118:118	6311896	1					
ANR	6311931	BreakStatement	break ;	559:4:12091:12096	6311896	0	True				
ANR	6311932	ExpressionStatement	p ++	561:3:12106:12109	6311896	2	True				
ANR	6311933	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6311934	Identifier	p		6311896	0					
ANR	6311935	IncDec	++		6311896	1					
ANR	6311936	ExpressionStatement	c = * p	562:3:12114:12120	6311896	3	True				
ANR	6311937	AssignmentExpression	c = * p		6311896	0		=			
ANR	6311938	Identifier	c		6311896	0					
ANR	6311939	UnaryOperationExpression	* p		6311896	1					
ANR	6311940	UnaryOperator	*		6311896	0					
ANR	6311941	Identifier	p		6311896	1					
ANR	6311942	IfStatement	if ( c == '\\n' || c == '*' || c == '\\\\' )		6311896	4					
ANR	6311943	Condition	c == '\\n' || c == '*' || c == '\\\\'	563:7:12129:12162	6311896	0	True				
ANR	6311944	OrExpression	c == '\\n' || c == '*' || c == '\\\\'		6311896	0		||			
ANR	6311945	EqualityExpression	c == '\\n'		6311896	0		==			
ANR	6311946	Identifier	c		6311896	0					
ANR	6311947	PrimaryExpression	'\\n'		6311896	1					
ANR	6311948	OrExpression	c == '*' || c == '\\\\'		6311896	1		||			
ANR	6311949	EqualityExpression	c == '*'		6311896	0		==			
ANR	6311950	Identifier	c		6311896	0					
ANR	6311951	PrimaryExpression	'*'		6311896	1					
ANR	6311952	EqualityExpression	c == '\\\\'		6311896	1		==			
ANR	6311953	Identifier	c		6311896	0					
ANR	6311954	PrimaryExpression	'\\\\'		6311896	1					
ANR	6311955	CompoundStatement		14:43:198:198	6311896	1					
ANR	6311956	BreakStatement	break ;	564:4:12171:12176	6311896	0	True				
ANR	6311957	ExpressionStatement	p ++	566:3:12186:12189	6311896	5	True				
ANR	6311958	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6311959	Identifier	p		6311896	0					
ANR	6311960	IncDec	++		6311896	1					
ANR	6311961	IfStatement	if ( c == '\\n' )		6311896	1					
ANR	6311962	Condition	c == '\\n'	569:6:12241:12249	6311896	0	True				
ANR	6311963	EqualityExpression	c == '\\n'		6311896	0		==			
ANR	6311964	Identifier	c		6311896	0					
ANR	6311965	PrimaryExpression	'\\n'		6311896	1					
ANR	6311966	CompoundStatement		20:17:285:285	6311896	1					
ANR	6311967	ExpressionStatement	file -> line_num ++	570:3:12257:12273	6311896	0	True				
ANR	6311968	PostIncDecOperationExpression	file -> line_num ++		6311896	0					
ANR	6311969	PtrMemberAccess	file -> line_num		6311896	0					
ANR	6311970	Identifier	file		6311896	0					
ANR	6311971	Identifier	line_num		6311896	1					
ANR	6311972	IncDec	++		6311896	1					
ANR	6311973	ExpressionStatement	p ++	571:3:12278:12281	6311896	1	True				
ANR	6311974	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6311975	Identifier	p		6311896	0					
ANR	6311976	IncDec	++		6311896	1					
ANR	6311977	ElseStatement	else		6311896	0					
ANR	6311978	IfStatement	if ( c == '*' )		6311896	0					
ANR	6311979	Condition	c == '*'	572:13:12296:12303	6311896	0	True				
ANR	6311980	EqualityExpression	c == '*'		6311896	0		==			
ANR	6311981	Identifier	c		6311896	0					
ANR	6311982	PrimaryExpression	'*'		6311896	1					
ANR	6311983	CompoundStatement		23:23:339:339	6311896	1					
ANR	6311984	ExpressionStatement	p ++	573:3:12311:12314	6311896	0	True				
ANR	6311985	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6311986	Identifier	p		6311896	0					
ANR	6311987	IncDec	++		6311896	1					
ANR	6311988	ForStatement	for ( ; ; )		6311896	1					
ANR	6311989	CompoundStatement		25:12:361:361	6311896	0					
ANR	6311990	ExpressionStatement	c = * p	575:4:12334:12340	6311896	0	True				
ANR	6311991	AssignmentExpression	c = * p		6311896	0		=			
ANR	6311992	Identifier	c		6311896	0					
ANR	6311993	UnaryOperationExpression	* p		6311896	1					
ANR	6311994	UnaryOperator	*		6311896	0					
ANR	6311995	Identifier	p		6311896	1					
ANR	6311996	IfStatement	if ( c == '*' )		6311896	1					
ANR	6311997	Condition	c == '*'	576:8:12350:12357	6311896	0	True				
ANR	6311998	EqualityExpression	c == '*'		6311896	0		==			
ANR	6311999	Identifier	c		6311896	0					
ANR	6312000	PrimaryExpression	'*'		6311896	1					
ANR	6312001	CompoundStatement		27:18:393:393	6311896	1					
ANR	6312002	ExpressionStatement	p ++	577:5:12367:12370	6311896	0	True				
ANR	6312003	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6312004	Identifier	p		6311896	0					
ANR	6312005	IncDec	++		6311896	1					
ANR	6312006	ElseStatement	else		6311896	0					
ANR	6312007	IfStatement	if ( c == '/' )		6311896	0					
ANR	6312008	Condition	c == '/'	578:15:12387:12394	6311896	0	True				
ANR	6312009	EqualityExpression	c == '/'		6311896	0		==			
ANR	6312010	Identifier	c		6311896	0					
ANR	6312011	PrimaryExpression	'/'		6311896	1					
ANR	6312012	CompoundStatement		29:25:430:430	6311896	1					
ANR	6312013	GotoStatement	goto end_of_comment ;	579:5:12404:12423	6311896	0	True				
ANR	6312014	Identifier	end_of_comment		6311896	0					
ANR	6312015	ElseStatement	else		6311896	0					
ANR	6312016	IfStatement	if ( c == '\\\\' )		6311896	0					
ANR	6312017	Condition	c == '\\\\'	580:15:12440:12448	6311896	0	True				
ANR	6312018	EqualityExpression	c == '\\\\'		6311896	0		==			
ANR	6312019	Identifier	c		6311896	0					
ANR	6312020	PrimaryExpression	'\\\\'		6311896	1					
ANR	6312021	CompoundStatement		31:26:484:484	6311896	1					
ANR	6312022	ExpressionStatement	file -> buf_ptr = p	581:5:12458:12475	6311896	0	True				
ANR	6312023	AssignmentExpression	file -> buf_ptr = p		6311896	0		=			
ANR	6312024	PtrMemberAccess	file -> buf_ptr		6311896	0					
ANR	6312025	Identifier	file		6311896	0					
ANR	6312026	Identifier	buf_ptr		6311896	1					
ANR	6312027	Identifier	p		6311896	1					
ANR	6312028	ExpressionStatement	c = handle_eob ( )	582:5:12482:12499	6311896	1	True				
ANR	6312029	AssignmentExpression	c = handle_eob ( )		6311896	0		=			
ANR	6312030	Identifier	c		6311896	0					
ANR	6312031	CallExpression	handle_eob ( )		6311896	1					
ANR	6312032	Callee	handle_eob		6311896	0					
ANR	6312033	Identifier	handle_eob		6311896	0					
ANR	6312034	ArgumentList			6311896	1					
ANR	6312035	ExpressionStatement	p = file -> buf_ptr	583:5:12506:12523	6311896	2	True				
ANR	6312036	AssignmentExpression	p = file -> buf_ptr		6311896	0		=			
ANR	6312037	Identifier	p		6311896	0					
ANR	6312038	PtrMemberAccess	file -> buf_ptr		6311896	1					
ANR	6312039	Identifier	file		6311896	0					
ANR	6312040	Identifier	buf_ptr		6311896	1					
ANR	6312041	IfStatement	if ( c == '\\\\' )		6311896	3					
ANR	6312042	Condition	c == '\\\\'	584:9:12534:12542	6311896	0	True				
ANR	6312043	EqualityExpression	c == '\\\\'		6311896	0		==			
ANR	6312044	Identifier	c		6311896	0					
ANR	6312045	PrimaryExpression	'\\\\'		6311896	1					
ANR	6312046	CompoundStatement		35:20:578:578	6311896	1					
ANR	6312047	WhileStatement	while ( c == '\\\\' )		6311896	0					
ANR	6312048	Condition	c == '\\\\'	586:13:12618:12626	6311896	0	True				
ANR	6312049	EqualityExpression	c == '\\\\'		6311896	0		==			
ANR	6312050	Identifier	c		6311896	0					
ANR	6312051	PrimaryExpression	'\\\\'		6311896	1					
ANR	6312052	CompoundStatement		37:24:662:662	6311896	1					
ANR	6312053	ExpressionStatement	"PEEKC_EOB ( c , p )"	587:7:12638:12654	6311896	0	True				
ANR	6312054	CallExpression	"PEEKC_EOB ( c , p )"		6311896	0					
ANR	6312055	Callee	PEEKC_EOB		6311896	0					
ANR	6312056	Identifier	PEEKC_EOB		6311896	0					
ANR	6312057	ArgumentList	c		6311896	1					
ANR	6312058	Argument	c		6311896	0					
ANR	6312059	Identifier	c		6311896	0					
ANR	6312060	Argument	p		6311896	1					
ANR	6312061	Identifier	p		6311896	0					
ANR	6312062	IfStatement	if ( c == '\\n' )		6311896	1					
ANR	6312063	Condition	c == '\\n'	588:11:12667:12675	6311896	0	True				
ANR	6312064	EqualityExpression	c == '\\n'		6311896	0		==			
ANR	6312065	Identifier	c		6311896	0					
ANR	6312066	PrimaryExpression	'\\n'		6311896	1					
ANR	6312067	CompoundStatement		39:22:711:711	6311896	1					
ANR	6312068	ExpressionStatement	file -> line_num ++	589:8:12688:12704	6311896	0	True				
ANR	6312069	PostIncDecOperationExpression	file -> line_num ++		6311896	0					
ANR	6312070	PtrMemberAccess	file -> line_num		6311896	0					
ANR	6312071	Identifier	file		6311896	0					
ANR	6312072	Identifier	line_num		6311896	1					
ANR	6312073	IncDec	++		6311896	1					
ANR	6312074	ExpressionStatement	"PEEKC_EOB ( c , p )"	590:8:12714:12730	6311896	1	True				
ANR	6312075	CallExpression	"PEEKC_EOB ( c , p )"		6311896	0					
ANR	6312076	Callee	PEEKC_EOB		6311896	0					
ANR	6312077	Identifier	PEEKC_EOB		6311896	0					
ANR	6312078	ArgumentList	c		6311896	1					
ANR	6312079	Argument	c		6311896	0					
ANR	6312080	Identifier	c		6311896	0					
ANR	6312081	Argument	p		6311896	1					
ANR	6312082	Identifier	p		6311896	0					
ANR	6312083	ElseStatement	else		6311896	0					
ANR	6312084	IfStatement	if ( c == '\\r' )		6311896	0					
ANR	6312085	Condition	c == '\\r'	591:18:12750:12758	6311896	0	True				
ANR	6312086	EqualityExpression	c == '\\r'		6311896	0		==			
ANR	6312087	Identifier	c		6311896	0					
ANR	6312088	PrimaryExpression	'\\r'		6311896	1					
ANR	6312089	CompoundStatement		42:29:794:794	6311896	1					
ANR	6312090	ExpressionStatement	"PEEKC_EOB ( c , p )"	592:8:12771:12787	6311896	0	True				
ANR	6312091	CallExpression	"PEEKC_EOB ( c , p )"		6311896	0					
ANR	6312092	Callee	PEEKC_EOB		6311896	0					
ANR	6312093	Identifier	PEEKC_EOB		6311896	0					
ANR	6312094	ArgumentList	c		6311896	1					
ANR	6312095	Argument	c		6311896	0					
ANR	6312096	Identifier	c		6311896	0					
ANR	6312097	Argument	p		6311896	1					
ANR	6312098	Identifier	p		6311896	0					
ANR	6312099	IfStatement	if ( c == '\\n' )		6311896	1					
ANR	6312100	Condition	c == '\\n'	593:12:12801:12809	6311896	0	True				
ANR	6312101	EqualityExpression	c == '\\n'		6311896	0		==			
ANR	6312102	Identifier	c		6311896	0					
ANR	6312103	PrimaryExpression	'\\n'		6311896	1					
ANR	6312104	CompoundStatement		44:23:845:845	6311896	1					
ANR	6312105	ExpressionStatement	file -> line_num ++	594:9:12823:12839	6311896	0	True				
ANR	6312106	PostIncDecOperationExpression	file -> line_num ++		6311896	0					
ANR	6312107	PtrMemberAccess	file -> line_num		6311896	0					
ANR	6312108	Identifier	file		6311896	0					
ANR	6312109	Identifier	line_num		6311896	1					
ANR	6312110	IncDec	++		6311896	1					
ANR	6312111	ExpressionStatement	"PEEKC_EOB ( c , p )"	595:9:12850:12866	6311896	1	True				
ANR	6312112	CallExpression	"PEEKC_EOB ( c , p )"		6311896	0					
ANR	6312113	Callee	PEEKC_EOB		6311896	0					
ANR	6312114	Identifier	PEEKC_EOB		6311896	0					
ANR	6312115	ArgumentList	c		6311896	1					
ANR	6312116	Argument	c		6311896	0					
ANR	6312117	Identifier	c		6311896	0					
ANR	6312118	Argument	p		6311896	1					
ANR	6312119	Identifier	p		6311896	0					
ANR	6312120	ElseStatement	else		6311896	0					
ANR	6312121	CompoundStatement		48:14:925:925	6311896	0					
ANR	6312122	GotoStatement	goto after_star ;	598:8:12902:12917	6311896	0	True				
ANR	6312123	Identifier	after_star		6311896	0					
ANR	6312124	ElseStatement	else		6311896	0					
ANR	6312125	CompoundStatement		53:11:987:987	6311896	0					
ANR	6312126	BreakStatement	break ;	603:5:12961:12966	6311896	0	True				
ANR	6312127	Label	after_star :	606:0:12979:12989	6311896	2	True				
ANR	6312128	Identifier	after_star		6311896	0					
ANR	6312129	ExpressionStatement		607:3:12994:12994	6311896	3	True				
ANR	6312130	ElseStatement	else		6311896	0					
ANR	6312131	CompoundStatement		59:9:1038:1038	6311896	0					
ANR	6312132	ExpressionStatement	file -> buf_ptr = p	610:3:13037:13054	6311896	0	True				
ANR	6312133	AssignmentExpression	file -> buf_ptr = p		6311896	0		=			
ANR	6312134	PtrMemberAccess	file -> buf_ptr		6311896	0					
ANR	6312135	Identifier	file		6311896	0					
ANR	6312136	Identifier	buf_ptr		6311896	1					
ANR	6312137	Identifier	p		6311896	1					
ANR	6312138	ExpressionStatement	c = handle_eob ( )	611:3:13059:13076	6311896	1	True				
ANR	6312139	AssignmentExpression	c = handle_eob ( )		6311896	0		=			
ANR	6312140	Identifier	c		6311896	0					
ANR	6312141	CallExpression	handle_eob ( )		6311896	1					
ANR	6312142	Callee	handle_eob		6311896	0					
ANR	6312143	Identifier	handle_eob		6311896	0					
ANR	6312144	ArgumentList			6311896	1					
ANR	6312145	ExpressionStatement	p = file -> buf_ptr	612:3:13081:13098	6311896	2	True				
ANR	6312146	AssignmentExpression	p = file -> buf_ptr		6311896	0		=			
ANR	6312147	Identifier	p		6311896	0					
ANR	6312148	PtrMemberAccess	file -> buf_ptr		6311896	1					
ANR	6312149	Identifier	file		6311896	0					
ANR	6312150	Identifier	buf_ptr		6311896	1					
ANR	6312151	IfStatement	if ( c == CH_EOF )		6311896	3					
ANR	6312152	Condition	c == CH_EOF	613:7:13107:13117	6311896	0	True				
ANR	6312153	EqualityExpression	c == CH_EOF		6311896	0		==			
ANR	6312154	Identifier	c		6311896	0					
ANR	6312155	Identifier	CH_EOF		6311896	1					
ANR	6312156	CompoundStatement		64:20:1153:1153	6311896	1					
ANR	6312157	ExpressionStatement	"tcc_error ( ""unexpected end of file in comment"" )"	614:4:13126:13173	6311896	0	True				
ANR	6312158	CallExpression	"tcc_error ( ""unexpected end of file in comment"" )"		6311896	0					
ANR	6312159	Callee	tcc_error		6311896	0					
ANR	6312160	Identifier	tcc_error		6311896	0					
ANR	6312161	ArgumentList	"""unexpected end of file in comment"""		6311896	1					
ANR	6312162	Argument	"""unexpected end of file in comment"""		6311896	0					
ANR	6312163	PrimaryExpression	"""unexpected end of file in comment"""		6311896	0					
ANR	6312164	ElseStatement	else		6311896	0					
ANR	6312165	IfStatement	if ( c == '\\\\' )		6311896	0					
ANR	6312166	Condition	c == '\\\\'	615:14:13189:13197	6311896	0	True				
ANR	6312167	EqualityExpression	c == '\\\\'		6311896	0		==			
ANR	6312168	Identifier	c		6311896	0					
ANR	6312169	PrimaryExpression	'\\\\'		6311896	1					
ANR	6312170	CompoundStatement		66:25:1233:1233	6311896	1					
ANR	6312171	ExpressionStatement	p ++	616:4:13206:13209	6311896	0	True				
ANR	6312172	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6312173	Identifier	p		6311896	0					
ANR	6312174	IncDec	++		6311896	1					
ANR	6312175	Label	end_of_comment :	620:0:13223:13237	6311896	3	True				
ANR	6312176	Identifier	end_of_comment		6311896	0					
ANR	6312177	ExpressionStatement	p ++	621:1:13240:13243	6311896	4	True				
ANR	6312178	PostIncDecOperationExpression	p ++		6311896	0					
ANR	6312179	Identifier	p		6311896	0					
ANR	6312180	IncDec	++		6311896	1					
ANR	6312181	ReturnStatement	return p ;	622:1:13246:13254	6311896	5	True				
ANR	6312182	Identifier	p		6311896	0					
ANR	6312183	ReturnType	ST_FUNC uint8_t *		6311896	1					
ANR	6312184	Identifier	parse_comment		6311896	2					
ANR	6312185	ParameterList	uint8_t * p		6311896	3					
ANR	6312186	Parameter	uint8_t * p	549:31:11954:11963	6311896	0	True				
ANR	6312187	ParameterType	uint8_t *		6311896	0					
ANR	6312188	Identifier	p		6311896	1					
ANR	6312189	CFGEntryNode	ENTRY		6311896		True				
ANR	6312190	CFGExitNode	EXIT		6311896		True				
ANR	6312191	InfiniteForNode	true		6311896		True				
ANR	6312192	InfiniteForNode	true		6311896		True				
ANR	6312193	InfiniteForNode	true		6311896		True				
ANR	6312194	Symbol	p		6311896						
ANR	6312195	Symbol	c		6311896						
ANR	6312196	Symbol	file		6311896						
ANR	6312197	Symbol	CH_EOF		6311896						
ANR	6312198	Symbol	* p		6311896						
ANR	6312199	Symbol	handle_eob		6311896						
ANR	6312200	Symbol	file -> line_num		6311896						
ANR	6312201	Symbol	file -> buf_ptr		6311896						
ANR	6312202	Symbol	* file		6311896						
ANR	6312203	Function	skip_spaces	627:0:13278:13351							
ANR	6312204	FunctionDef	skip_spaces ()		6312203	0					
ANR	6312205	CompoundStatement		628:0:13315:13351	6312203	0					
ANR	6312206	WhileStatement	while ( is_space ( ch ) )		6312203	0					
ANR	6312207	Condition	is_space ( ch )	629:8:13325:13337	6312203	0	True				
ANR	6312208	CallExpression	is_space ( ch )		6312203	0					
ANR	6312209	Callee	is_space		6312203	0					
ANR	6312210	Identifier	is_space		6312203	0					
ANR	6312211	ArgumentList	ch		6312203	1					
ANR	6312212	Argument	ch		6312203	0					
ANR	6312213	Identifier	ch		6312203	0					
ANR	6312214	ExpressionStatement	cinp ( )	630:2:13342:13349	6312203	1	True				
ANR	6312215	CallExpression	cinp ( )		6312203	0					
ANR	6312216	Callee	cinp		6312203	0					
ANR	6312217	Identifier	cinp		6312203	0					
ANR	6312218	ArgumentList			6312203	1					
ANR	6312219	ReturnType	static inline void		6312203	1					
ANR	6312220	Identifier	skip_spaces		6312203	2					
ANR	6312221	ParameterList			6312203	3					
ANR	6312222	CFGEntryNode	ENTRY		6312203		True				
ANR	6312223	CFGExitNode	EXIT		6312203		True				
ANR	6312224	Symbol	ch		6312203						
ANR	6312225	Symbol	is_space		6312203						
ANR	6312226	Function	check_space	633:0:13354:13503							
ANR	6312227	FunctionDef	"check_space (int t , int * spc)"		6312226	0					
ANR	6312228	CompoundStatement		634:0:13401:13503	6312226	0					
ANR	6312229	IfStatement	if ( is_space ( t ) )		6312226	0					
ANR	6312230	Condition	is_space ( t )	635:5:13408:13419	6312226	0	True				
ANR	6312231	CallExpression	is_space ( t )		6312226	0					
ANR	6312232	Callee	is_space		6312226	0					
ANR	6312233	Identifier	is_space		6312226	0					
ANR	6312234	ArgumentList	t		6312226	1					
ANR	6312235	Argument	t		6312226	0					
ANR	6312236	Identifier	t		6312226	0					
ANR	6312237	CompoundStatement		2:19:20:20	6312226	1					
ANR	6312238	IfStatement	if ( * spc )		6312226	0					
ANR	6312239	Condition	* spc	636:6:13430:13433	6312226	0	True				
ANR	6312240	UnaryOperationExpression	* spc		6312226	0					
ANR	6312241	UnaryOperator	*		6312226	0					
ANR	6312242	Identifier	spc		6312226	1					
ANR	6312243	CompoundStatement		3:12:34:34	6312226	1					
ANR	6312244	ReturnStatement	return 1 ;	637:3:13441:13449	6312226	0	True				
ANR	6312245	PrimaryExpression	1		6312226	0					
ANR	6312246	ExpressionStatement	* spc = 1	639:2:13457:13465	6312226	1	True				
ANR	6312247	AssignmentExpression	* spc = 1		6312226	0		=			
ANR	6312248	UnaryOperationExpression	* spc		6312226	0					
ANR	6312249	UnaryOperator	*		6312226	0					
ANR	6312250	Identifier	spc		6312226	1					
ANR	6312251	PrimaryExpression	1		6312226	1					
ANR	6312252	ElseStatement	else		6312226	0					
ANR	6312253	CompoundStatement		7:8:73:73	6312226	0					
ANR	6312254	ExpressionStatement	* spc = 0	641:2:13479:13487	6312226	0	True				
ANR	6312255	AssignmentExpression	* spc = 0		6312226	0		=			
ANR	6312256	UnaryOperationExpression	* spc		6312226	0					
ANR	6312257	UnaryOperator	*		6312226	0					
ANR	6312258	Identifier	spc		6312226	1					
ANR	6312259	PrimaryExpression	0		6312226	1					
ANR	6312260	ReturnStatement	return 0 ;	643:1:13493:13501	6312226	1	True				
ANR	6312261	PrimaryExpression	0		6312226	0					
ANR	6312262	ReturnType	static inline int		6312226	1					
ANR	6312263	Identifier	check_space		6312226	2					
ANR	6312264	ParameterList	"int t , int * spc"		6312226	3					
ANR	6312265	Parameter	int t	633:30:13384:13388	6312226	0	True				
ANR	6312266	ParameterType	int		6312226	0					
ANR	6312267	Identifier	t		6312226	1					
ANR	6312268	Parameter	int * spc	633:37:13391:13398	6312226	1	True				
ANR	6312269	ParameterType	int *		6312226	0					
ANR	6312270	Identifier	spc		6312226	1					
ANR	6312271	CFGEntryNode	ENTRY		6312226		True				
ANR	6312272	CFGExitNode	EXIT		6312226		True				
ANR	6312273	Symbol	* spc		6312226						
ANR	6312274	Symbol	t		6312226						
ANR	6312275	Symbol	spc		6312226						
ANR	6312276	Symbol	is_space		6312226						
ANR	6312277	Function	parse_pp_string	647:0:13556:14787							
ANR	6312278	FunctionDef	"parse_pp_string (uint8_t * p , int sep , CString * str)"		6312277	0					
ANR	6312279	CompoundStatement		649:0:13627:14787	6312277	0					
ANR	6312280	IdentifierDeclStatement	int c ;	650:1:13630:13635	6312277	0	True				
ANR	6312281	IdentifierDecl	c		6312277	0					
ANR	6312282	IdentifierDeclType	int		6312277	0					
ANR	6312283	Identifier	c		6312277	1					
ANR	6312284	ExpressionStatement	p ++	651:1:13638:13641	6312277	1	True				
ANR	6312285	PostIncDecOperationExpression	p ++		6312277	0					
ANR	6312286	Identifier	p		6312277	0					
ANR	6312287	IncDec	++		6312277	1					
ANR	6312288	WhileStatement	while ( tcc_nerr ( ) == 0 )		6312277	2					
ANR	6312289	Condition	tcc_nerr ( ) == 0	652:8:13651:13666	6312277	0	True				
ANR	6312290	EqualityExpression	tcc_nerr ( ) == 0		6312277	0		==			
ANR	6312291	CallExpression	tcc_nerr ( )		6312277	0					
ANR	6312292	Callee	tcc_nerr		6312277	0					
ANR	6312293	Identifier	tcc_nerr		6312277	0					
ANR	6312294	ArgumentList			6312277	1					
ANR	6312295	PrimaryExpression	0		6312277	1					
ANR	6312296	CompoundStatement		4:26:41:41	6312277	1					
ANR	6312297	ExpressionStatement	c = * p	653:2:13673:13679	6312277	0	True				
ANR	6312298	AssignmentExpression	c = * p		6312277	0		=			
ANR	6312299	Identifier	c		6312277	0					
ANR	6312300	UnaryOperationExpression	* p		6312277	1					
ANR	6312301	UnaryOperator	*		6312277	0					
ANR	6312302	Identifier	p		6312277	1					
ANR	6312303	IfStatement	if ( c == sep )		6312277	1					
ANR	6312304	Condition	c == sep	654:6:13687:13694	6312277	0	True				
ANR	6312305	EqualityExpression	c == sep		6312277	0		==			
ANR	6312306	Identifier	c		6312277	0					
ANR	6312307	Identifier	sep		6312277	1					
ANR	6312308	CompoundStatement		6:16:69:69	6312277	1					
ANR	6312309	BreakStatement	break ;	655:3:13702:13707	6312277	0	True				
ANR	6312310	ElseStatement	else		6312277	0					
ANR	6312311	IfStatement	if ( c == '\\\\' )		6312277	0					
ANR	6312312	Condition	c == '\\\\'	656:13:13722:13730	6312277	0	True				
ANR	6312313	EqualityExpression	c == '\\\\'		6312277	0		==			
ANR	6312314	Identifier	c		6312277	0					
ANR	6312315	PrimaryExpression	'\\\\'		6312277	1					
ANR	6312316	CompoundStatement		8:24:105:105	6312277	1					
ANR	6312317	ExpressionStatement	file -> buf_ptr = p	657:3:13738:13755	6312277	0	True				
ANR	6312318	AssignmentExpression	file -> buf_ptr = p		6312277	0		=			
ANR	6312319	PtrMemberAccess	file -> buf_ptr		6312277	0					
ANR	6312320	Identifier	file		6312277	0					
ANR	6312321	Identifier	buf_ptr		6312277	1					
ANR	6312322	Identifier	p		6312277	1					
ANR	6312323	ExpressionStatement	c = handle_eob ( )	658:3:13760:13777	6312277	1	True				
ANR	6312324	AssignmentExpression	c = handle_eob ( )		6312277	0		=			
ANR	6312325	Identifier	c		6312277	0					
ANR	6312326	CallExpression	handle_eob ( )		6312277	1					
ANR	6312327	Callee	handle_eob		6312277	0					
ANR	6312328	Identifier	handle_eob		6312277	0					
ANR	6312329	ArgumentList			6312277	1					
ANR	6312330	ExpressionStatement	p = file -> buf_ptr	659:3:13782:13799	6312277	2	True				
ANR	6312331	AssignmentExpression	p = file -> buf_ptr		6312277	0		=			
ANR	6312332	Identifier	p		6312277	0					
ANR	6312333	PtrMemberAccess	file -> buf_ptr		6312277	1					
ANR	6312334	Identifier	file		6312277	0					
ANR	6312335	Identifier	buf_ptr		6312277	1					
ANR	6312336	IfStatement	if ( c == CH_EOF )		6312277	3					
ANR	6312337	Condition	c == CH_EOF	660:7:13808:13818	6312277	0	True				
ANR	6312338	EqualityExpression	c == CH_EOF		6312277	0		==			
ANR	6312339	Identifier	c		6312277	0					
ANR	6312340	Identifier	CH_EOF		6312277	1					
ANR	6312341	CompoundStatement		12:20:193:193	6312277	1					
ANR	6312342	Label	unterminated_string :	661:0:13823:13842	6312277	0	True				
ANR	6312343	Identifier	unterminated_string		6312277	0					
ANR	6312344	ExpressionStatement	"tcc_error ( ""missing terminating %c character"" , sep )"	663:4:13903:13954	6312277	1	True				
ANR	6312345	CallExpression	"tcc_error ( ""missing terminating %c character"" , sep )"		6312277	0					
ANR	6312346	Callee	tcc_error		6312277	0					
ANR	6312347	Identifier	tcc_error		6312277	0					
ANR	6312348	ArgumentList	"""missing terminating %c character"""		6312277	1					
ANR	6312349	Argument	"""missing terminating %c character"""		6312277	0					
ANR	6312350	PrimaryExpression	"""missing terminating %c character"""		6312277	0					
ANR	6312351	Argument	sep		6312277	1					
ANR	6312352	Identifier	sep		6312277	0					
ANR	6312353	ReturnStatement	return NULL ;	664:4:13960:13971	6312277	2	True				
ANR	6312354	Identifier	NULL		6312277	0					
ANR	6312355	ElseStatement	else		6312277	0					
ANR	6312356	IfStatement	if ( c == '\\\\' )		6312277	0					
ANR	6312357	Condition	c == '\\\\'	665:14:13987:13995	6312277	0	True				
ANR	6312358	EqualityExpression	c == '\\\\'		6312277	0		==			
ANR	6312359	Identifier	c		6312277	0					
ANR	6312360	PrimaryExpression	'\\\\'		6312277	1					
ANR	6312361	CompoundStatement		17:25:370:370	6312277	1					
ANR	6312362	ExpressionStatement	"PEEKC_EOB ( c , p )"	667:4:14041:14057	6312277	0	True				
ANR	6312363	CallExpression	"PEEKC_EOB ( c , p )"		6312277	0					
ANR	6312364	Callee	PEEKC_EOB		6312277	0					
ANR	6312365	Identifier	PEEKC_EOB		6312277	0					
ANR	6312366	ArgumentList	c		6312277	1					
ANR	6312367	Argument	c		6312277	0					
ANR	6312368	Identifier	c		6312277	0					
ANR	6312369	Argument	p		6312277	1					
ANR	6312370	Identifier	p		6312277	0					
ANR	6312371	IfStatement	if ( c == '\\n' )		6312277	1					
ANR	6312372	Condition	c == '\\n'	668:8:14067:14075	6312277	0	True				
ANR	6312373	EqualityExpression	c == '\\n'		6312277	0		==			
ANR	6312374	Identifier	c		6312277	0					
ANR	6312375	PrimaryExpression	'\\n'		6312277	1					
ANR	6312376	CompoundStatement		20:19:450:450	6312277	1					
ANR	6312377	ExpressionStatement	file -> line_num ++	669:5:14085:14101	6312277	0	True				
ANR	6312378	PostIncDecOperationExpression	file -> line_num ++		6312277	0					
ANR	6312379	PtrMemberAccess	file -> line_num		6312277	0					
ANR	6312380	Identifier	file		6312277	0					
ANR	6312381	Identifier	line_num		6312277	1					
ANR	6312382	IncDec	++		6312277	1					
ANR	6312383	ExpressionStatement	p ++	670:5:14108:14111	6312277	1	True				
ANR	6312384	PostIncDecOperationExpression	p ++		6312277	0					
ANR	6312385	Identifier	p		6312277	0					
ANR	6312386	IncDec	++		6312277	1					
ANR	6312387	ElseStatement	else		6312277	0					
ANR	6312388	IfStatement	if ( c == '\\r' )		6312277	0					
ANR	6312389	Condition	c == '\\r'	671:15:14128:14136	6312277	0	True				
ANR	6312390	EqualityExpression	c == '\\r'		6312277	0		==			
ANR	6312391	Identifier	c		6312277	0					
ANR	6312392	PrimaryExpression	'\\r'		6312277	1					
ANR	6312393	CompoundStatement		23:26:511:511	6312277	1					
ANR	6312394	ExpressionStatement	"PEEKC_EOB ( c , p )"	672:5:14146:14162	6312277	0	True				
ANR	6312395	CallExpression	"PEEKC_EOB ( c , p )"		6312277	0					
ANR	6312396	Callee	PEEKC_EOB		6312277	0					
ANR	6312397	Identifier	PEEKC_EOB		6312277	0					
ANR	6312398	ArgumentList	c		6312277	1					
ANR	6312399	Argument	c		6312277	0					
ANR	6312400	Identifier	c		6312277	0					
ANR	6312401	Argument	p		6312277	1					
ANR	6312402	Identifier	p		6312277	0					
ANR	6312403	IfStatement	if ( c != '\\n' )		6312277	1					
ANR	6312404	Condition	c != '\\n'	673:9:14173:14181	6312277	0	True				
ANR	6312405	EqualityExpression	c != '\\n'		6312277	0		!=			
ANR	6312406	Identifier	c		6312277	0					
ANR	6312407	PrimaryExpression	'\\n'		6312277	1					
ANR	6312408	CompoundStatement		25:20:556:556	6312277	1					
ANR	6312409	ExpressionStatement	"expect ( ""'\\n' after '\\r'"" )"	674:6:14192:14218	6312277	0	True				
ANR	6312410	CallExpression	"expect ( ""'\\n' after '\\r'"" )"		6312277	0					
ANR	6312411	Callee	expect		6312277	0					
ANR	6312412	Identifier	expect		6312277	0					
ANR	6312413	ArgumentList	"""'\\n' after '\\r'"""		6312277	1					
ANR	6312414	Argument	"""'\\n' after '\\r'"""		6312277	0					
ANR	6312415	PrimaryExpression	"""'\\n' after '\\r'"""		6312277	0					
ANR	6312416	ReturnStatement	return NULL ;	675:6:14226:14237	6312277	1	True				
ANR	6312417	Identifier	NULL		6312277	0					
ANR	6312418	ExpressionStatement	file -> line_num ++	677:5:14251:14267	6312277	2	True				
ANR	6312419	PostIncDecOperationExpression	file -> line_num ++		6312277	0					
ANR	6312420	PtrMemberAccess	file -> line_num		6312277	0					
ANR	6312421	Identifier	file		6312277	0					
ANR	6312422	Identifier	line_num		6312277	1					
ANR	6312423	IncDec	++		6312277	1					
ANR	6312424	ExpressionStatement	p ++	678:5:14274:14277	6312277	3	True				
ANR	6312425	PostIncDecOperationExpression	p ++		6312277	0					
ANR	6312426	Identifier	p		6312277	0					
ANR	6312427	IncDec	++		6312277	1					
ANR	6312428	ElseStatement	else		6312277	0					
ANR	6312429	IfStatement	if ( c == CH_EOF )		6312277	0					
ANR	6312430	Condition	c == CH_EOF	679:15:14294:14304	6312277	0	True				
ANR	6312431	EqualityExpression	c == CH_EOF		6312277	0		==			
ANR	6312432	Identifier	c		6312277	0					
ANR	6312433	Identifier	CH_EOF		6312277	1					
ANR	6312434	CompoundStatement		31:28:679:679	6312277	1					
ANR	6312435	GotoStatement	goto unterminated_string ;	680:5:14314:14338	6312277	0	True				
ANR	6312436	Identifier	unterminated_string		6312277	0					
ANR	6312437	ElseStatement	else		6312277	0					
ANR	6312438	CompoundStatement		33:11:723:723	6312277	0					
ANR	6312439	IfStatement	if ( str )		6312277	0					
ANR	6312440	Condition	str	682:9:14362:14364	6312277	0	True				
ANR	6312441	Identifier	str		6312277	0					
ANR	6312442	CompoundStatement		34:14:739:739	6312277	1					
ANR	6312443	ExpressionStatement	"cstr_ccat ( str , '\\\\' )"	683:6:14375:14396	6312277	0	True				
ANR	6312444	CallExpression	"cstr_ccat ( str , '\\\\' )"		6312277	0					
ANR	6312445	Callee	cstr_ccat		6312277	0					
ANR	6312446	Identifier	cstr_ccat		6312277	0					
ANR	6312447	ArgumentList	str		6312277	1					
ANR	6312448	Argument	str		6312277	0					
ANR	6312449	Identifier	str		6312277	0					
ANR	6312450	Argument	'\\\\'		6312277	1					
ANR	6312451	PrimaryExpression	'\\\\'		6312277	0					
ANR	6312452	ExpressionStatement	"cstr_ccat ( str , c )"	684:6:14404:14422	6312277	1	True				
ANR	6312453	CallExpression	"cstr_ccat ( str , c )"		6312277	0					
ANR	6312454	Callee	cstr_ccat		6312277	0					
ANR	6312455	Identifier	cstr_ccat		6312277	0					
ANR	6312456	ArgumentList	str		6312277	1					
ANR	6312457	Argument	str		6312277	0					
ANR	6312458	Identifier	str		6312277	0					
ANR	6312459	Argument	c		6312277	1					
ANR	6312460	Identifier	c		6312277	0					
ANR	6312461	ExpressionStatement	p ++	686:5:14436:14439	6312277	1	True				
ANR	6312462	PostIncDecOperationExpression	p ++		6312277	0					
ANR	6312463	Identifier	p		6312277	0					
ANR	6312464	IncDec	++		6312277	1					
ANR	6312465	ElseStatement	else		6312277	0					
ANR	6312466	IfStatement	if ( c == '\\n' )		6312277	0					
ANR	6312467	Condition	c == '\\n'	689:13:14465:14473	6312277	0	True				
ANR	6312468	EqualityExpression	c == '\\n'		6312277	0		==			
ANR	6312469	Identifier	c		6312277	0					
ANR	6312470	PrimaryExpression	'\\n'		6312277	1					
ANR	6312471	CompoundStatement		41:24:848:848	6312277	1					
ANR	6312472	ExpressionStatement	file -> line_num ++	690:3:14481:14497	6312277	0	True				
ANR	6312473	PostIncDecOperationExpression	file -> line_num ++		6312277	0					
ANR	6312474	PtrMemberAccess	file -> line_num		6312277	0					
ANR	6312475	Identifier	file		6312277	0					
ANR	6312476	Identifier	line_num		6312277	1					
ANR	6312477	IncDec	++		6312277	1					
ANR	6312478	GotoStatement	goto add_char ;	691:3:14502:14515	6312277	1	True				
ANR	6312479	Identifier	add_char		6312277	0					
ANR	6312480	ElseStatement	else		6312277	0					
ANR	6312481	IfStatement	if ( c == '\\r' )		6312277	0					
ANR	6312482	Condition	c == '\\r'	692:13:14530:14538	6312277	0	True				
ANR	6312483	EqualityExpression	c == '\\r'		6312277	0		==			
ANR	6312484	Identifier	c		6312277	0					
ANR	6312485	PrimaryExpression	'\\r'		6312277	1					
ANR	6312486	CompoundStatement		44:24:913:913	6312277	1					
ANR	6312487	ExpressionStatement	"PEEKC_EOB ( c , p )"	693:3:14546:14562	6312277	0	True				
ANR	6312488	CallExpression	"PEEKC_EOB ( c , p )"		6312277	0					
ANR	6312489	Callee	PEEKC_EOB		6312277	0					
ANR	6312490	Identifier	PEEKC_EOB		6312277	0					
ANR	6312491	ArgumentList	c		6312277	1					
ANR	6312492	Argument	c		6312277	0					
ANR	6312493	Identifier	c		6312277	0					
ANR	6312494	Argument	p		6312277	1					
ANR	6312495	Identifier	p		6312277	0					
ANR	6312496	IfStatement	if ( c != '\\n' )		6312277	1					
ANR	6312497	Condition	c != '\\n'	694:7:14571:14579	6312277	0	True				
ANR	6312498	EqualityExpression	c != '\\n'		6312277	0		!=			
ANR	6312499	Identifier	c		6312277	0					
ANR	6312500	PrimaryExpression	'\\n'		6312277	1					
ANR	6312501	CompoundStatement		46:18:954:954	6312277	1					
ANR	6312502	IfStatement	if ( str )		6312277	0					
ANR	6312503	Condition	str	695:8:14592:14594	6312277	0	True				
ANR	6312504	Identifier	str		6312277	0					
ANR	6312505	CompoundStatement		47:13:969:969	6312277	1					
ANR	6312506	ExpressionStatement	"cstr_ccat ( str , '\\r' )"	696:5:14604:14625	6312277	0	True				
ANR	6312507	CallExpression	"cstr_ccat ( str , '\\r' )"		6312277	0					
ANR	6312508	Callee	cstr_ccat		6312277	0					
ANR	6312509	Identifier	cstr_ccat		6312277	0					
ANR	6312510	ArgumentList	str		6312277	1					
ANR	6312511	Argument	str		6312277	0					
ANR	6312512	Identifier	str		6312277	0					
ANR	6312513	Argument	'\\r'		6312277	1					
ANR	6312514	PrimaryExpression	'\\r'		6312277	0					
ANR	6312515	ElseStatement	else		6312277	0					
ANR	6312516	CompoundStatement		50:10:1015:1015	6312277	0					
ANR	6312517	ExpressionStatement	file -> line_num ++	699:4:14649:14665	6312277	0	True				
ANR	6312518	PostIncDecOperationExpression	file -> line_num ++		6312277	0					
ANR	6312519	PtrMemberAccess	file -> line_num		6312277	0					
ANR	6312520	Identifier	file		6312277	0					
ANR	6312521	Identifier	line_num		6312277	1					
ANR	6312522	IncDec	++		6312277	1					
ANR	6312523	GotoStatement	goto add_char ;	700:4:14671:14684	6312277	1	True				
ANR	6312524	Identifier	add_char		6312277	0					
ANR	6312525	ElseStatement	else		6312277	0					
ANR	6312526	CompoundStatement		54:9:1072:1072	6312277	0					
ANR	6312527	Label	add_char :	703:0:14702:14710	6312277	0	True				
ANR	6312528	Identifier	add_char		6312277	0					
ANR	6312529	IfStatement	if ( str )		6312277	1					
ANR	6312530	Condition	str	704:7:14719:14721	6312277	0	True				
ANR	6312531	Identifier	str		6312277	0					
ANR	6312532	CompoundStatement		56:12:1096:1096	6312277	1					
ANR	6312533	ExpressionStatement	"cstr_ccat ( str , c )"	705:4:14730:14748	6312277	0	True				
ANR	6312534	CallExpression	"cstr_ccat ( str , c )"		6312277	0					
ANR	6312535	Callee	cstr_ccat		6312277	0					
ANR	6312536	Identifier	cstr_ccat		6312277	0					
ANR	6312537	ArgumentList	str		6312277	1					
ANR	6312538	Argument	str		6312277	0					
ANR	6312539	Identifier	str		6312277	0					
ANR	6312540	Argument	c		6312277	1					
ANR	6312541	Identifier	c		6312277	0					
ANR	6312542	ExpressionStatement	p ++	707:3:14758:14761	6312277	2	True				
ANR	6312543	PostIncDecOperationExpression	p ++		6312277	0					
ANR	6312544	Identifier	p		6312277	0					
ANR	6312545	IncDec	++		6312277	1					
ANR	6312546	ExpressionStatement	p ++	710:1:14771:14774	6312277	3	True				
ANR	6312547	PostIncDecOperationExpression	p ++		6312277	0					
ANR	6312548	Identifier	p		6312277	0					
ANR	6312549	IncDec	++		6312277	1					
ANR	6312550	ReturnStatement	return p ;	711:1:14777:14785	6312277	4	True				
ANR	6312551	Identifier	p		6312277	0					
ANR	6312552	ReturnType	static uint8_t *		6312277	1					
ANR	6312553	Identifier	parse_pp_string		6312277	2					
ANR	6312554	ParameterList	"uint8_t * p , int sep , CString * str"		6312277	3					
ANR	6312555	Parameter	uint8_t * p	647:32:13588:13597	6312277	0	True				
ANR	6312556	ParameterType	uint8_t *		6312277	0					
ANR	6312557	Identifier	p		6312277	1					
ANR	6312558	Parameter	int sep	648:4:13604:13610	6312277	1	True				
ANR	6312559	ParameterType	int		6312277	0					
ANR	6312560	Identifier	sep		6312277	1					
ANR	6312561	Parameter	CString * str	648:13:13613:13624	6312277	2	True				
ANR	6312562	ParameterType	CString *		6312277	0					
ANR	6312563	Identifier	str		6312277	1					
ANR	6312564	CFGEntryNode	ENTRY		6312277		True				
ANR	6312565	CFGExitNode	EXIT		6312277		True				
ANR	6312566	Symbol	c		6312277						
ANR	6312567	Symbol	NULL		6312277						
ANR	6312568	Symbol	* file		6312277						
ANR	6312569	Symbol	tcc_nerr		6312277						
ANR	6312570	Symbol	p		6312277						
ANR	6312571	Symbol	str		6312277						
ANR	6312572	Symbol	file		6312277						
ANR	6312573	Symbol	CH_EOF		6312277						
ANR	6312574	Symbol	* p		6312277						
ANR	6312575	Symbol	handle_eob		6312277						
ANR	6312576	Symbol	file -> buf_ptr		6312277						
ANR	6312577	Symbol	file -> line_num		6312277						
ANR	6312578	Symbol	sep		6312277						
ANR	6312579	Function	preprocess_skip	716:0:14878:16590							
ANR	6312580	FunctionDef	preprocess_skip ()		6312579	0					
ANR	6312581	CompoundStatement		717:0:14912:16590	6312579	0					
ANR	6312582	IdentifierDeclStatement	"int a , start_of_line , c , in_warn_or_error ;"	718:1:14915:14956	6312579	0	True				
ANR	6312583	IdentifierDecl	a		6312579	0					
ANR	6312584	IdentifierDeclType	int		6312579	0					
ANR	6312585	Identifier	a		6312579	1					
ANR	6312586	IdentifierDecl	start_of_line		6312579	1					
ANR	6312587	IdentifierDeclType	int		6312579	0					
ANR	6312588	Identifier	start_of_line		6312579	1					
ANR	6312589	IdentifierDecl	c		6312579	2					
ANR	6312590	IdentifierDeclType	int		6312579	0					
ANR	6312591	Identifier	c		6312579	1					
ANR	6312592	IdentifierDecl	in_warn_or_error		6312579	3					
ANR	6312593	IdentifierDeclType	int		6312579	0					
ANR	6312594	Identifier	in_warn_or_error		6312579	1					
ANR	6312595	IdentifierDeclStatement	uint8_t * p ;	719:1:14959:14969	6312579	1	True				
ANR	6312596	IdentifierDecl	* p		6312579	0					
ANR	6312597	IdentifierDeclType	uint8_t *		6312579	0					
ANR	6312598	Identifier	p		6312579	1					
ANR	6312599	ExpressionStatement	p = file -> buf_ptr	721:1:14973:14990	6312579	2	True				
ANR	6312600	AssignmentExpression	p = file -> buf_ptr		6312579	0		=			
ANR	6312601	Identifier	p		6312579	0					
ANR	6312602	PtrMemberAccess	file -> buf_ptr		6312579	1					
ANR	6312603	Identifier	file		6312579	0					
ANR	6312604	Identifier	buf_ptr		6312579	1					
ANR	6312605	ExpressionStatement	a = 0	722:1:14993:14998	6312579	3	True				
ANR	6312606	AssignmentExpression	a = 0		6312579	0		=			
ANR	6312607	Identifier	a		6312579	0					
ANR	6312608	PrimaryExpression	0		6312579	1					
ANR	6312609	Label	redo_start :	723:0:15000:15010	6312579	4	True				
ANR	6312610	Identifier	redo_start		6312579	0					
ANR	6312611	ExpressionStatement	start_of_line = 1	724:1:15013:15030	6312579	5	True				
ANR	6312612	AssignmentExpression	start_of_line = 1		6312579	0		=			
ANR	6312613	Identifier	start_of_line		6312579	0					
ANR	6312614	PrimaryExpression	1		6312579	1					
ANR	6312615	ExpressionStatement	in_warn_or_error = 0	725:1:15033:15053	6312579	6	True				
ANR	6312616	AssignmentExpression	in_warn_or_error = 0		6312579	0		=			
ANR	6312617	Identifier	in_warn_or_error		6312579	0					
ANR	6312618	PrimaryExpression	0		6312579	1					
ANR	6312619	WhileStatement	while ( tcc_nerr ( ) == 0 )		6312579	7					
ANR	6312620	Condition	tcc_nerr ( ) == 0	726:8:15063:15078	6312579	0	True				
ANR	6312621	EqualityExpression	tcc_nerr ( ) == 0		6312579	0		==			
ANR	6312622	CallExpression	tcc_nerr ( )		6312579	0					
ANR	6312623	Callee	tcc_nerr		6312579	0					
ANR	6312624	Identifier	tcc_nerr		6312579	0					
ANR	6312625	ArgumentList			6312579	1					
ANR	6312626	PrimaryExpression	0		6312579	1					
ANR	6312627	CompoundStatement		10:26:168:168	6312579	1					
ANR	6312628	Label	redo_no_start :	727:0:15083:15096	6312579	0	True				
ANR	6312629	Identifier	redo_no_start		6312579	0					
ANR	6312630	ExpressionStatement	c = * p	728:2:15100:15106	6312579	1	True				
ANR	6312631	AssignmentExpression	c = * p		6312579	0		=			
ANR	6312632	Identifier	c		6312579	0					
ANR	6312633	UnaryOperationExpression	* p		6312579	1					
ANR	6312634	UnaryOperator	*		6312579	0					
ANR	6312635	Identifier	p		6312579	1					
ANR	6312636	SwitchStatement	switch ( c )		6312579	2					
ANR	6312637	Condition	c	729:10:15118:15118	6312579	0	True				
ANR	6312638	Identifier	c		6312579	0					
ANR	6312639	CompoundStatement		13:13:208:208	6312579	1					
ANR	6312640	Label	case ' ' :	730:2:15125:15133	6312579	0	True				
ANR	6312641	Label	case '\\t' :	731:2:15137:15146	6312579	1	True				
ANR	6312642	Label	case '\\f' :	732:2:15150:15159	6312579	2	True				
ANR	6312643	Label	case '\\v' :	733:2:15163:15172	6312579	3	True				
ANR	6312644	Label	case '\\r' :	734:2:15176:15185	6312579	4	True				
ANR	6312645	ExpressionStatement	p ++	735:3:15190:15193	6312579	5	True				
ANR	6312646	PostIncDecOperationExpression	p ++		6312579	0					
ANR	6312647	Identifier	p		6312579	0					
ANR	6312648	IncDec	++		6312579	1					
ANR	6312649	GotoStatement	goto redo_no_start ;	736:3:15198:15216	6312579	6	True				
ANR	6312650	Identifier	redo_no_start		6312579	0					
ANR	6312651	Label	case '\\n' :	737:2:15220:15229	6312579	7	True				
ANR	6312652	ExpressionStatement	file -> line_num ++	738:3:15234:15250	6312579	8	True				
ANR	6312653	PostIncDecOperationExpression	file -> line_num ++		6312579	0					
ANR	6312654	PtrMemberAccess	file -> line_num		6312579	0					
ANR	6312655	Identifier	file		6312579	0					
ANR	6312656	Identifier	line_num		6312579	1					
ANR	6312657	IncDec	++		6312579	1					
ANR	6312658	ExpressionStatement	p ++	739:3:15255:15258	6312579	9	True				
ANR	6312659	PostIncDecOperationExpression	p ++		6312579	0					
ANR	6312660	Identifier	p		6312579	0					
ANR	6312661	IncDec	++		6312579	1					
ANR	6312662	GotoStatement	goto redo_start ;	740:3:15263:15278	6312579	10	True				
ANR	6312663	Identifier	redo_start		6312579	0					
ANR	6312664	Label	case '\\\\' :	741:2:15282:15291	6312579	11	True				
ANR	6312665	ExpressionStatement	file -> buf_ptr = p	742:3:15296:15313	6312579	12	True				
ANR	6312666	AssignmentExpression	file -> buf_ptr = p		6312579	0		=			
ANR	6312667	PtrMemberAccess	file -> buf_ptr		6312579	0					
ANR	6312668	Identifier	file		6312579	0					
ANR	6312669	Identifier	buf_ptr		6312579	1					
ANR	6312670	Identifier	p		6312579	1					
ANR	6312671	ExpressionStatement	c = handle_eob ( )	743:3:15318:15335	6312579	13	True				
ANR	6312672	AssignmentExpression	c = handle_eob ( )		6312579	0		=			
ANR	6312673	Identifier	c		6312579	0					
ANR	6312674	CallExpression	handle_eob ( )		6312579	1					
ANR	6312675	Callee	handle_eob		6312579	0					
ANR	6312676	Identifier	handle_eob		6312579	0					
ANR	6312677	ArgumentList			6312579	1					
ANR	6312678	IfStatement	if ( c == CH_EOF )		6312579	14					
ANR	6312679	Condition	c == CH_EOF	744:7:15344:15354	6312579	0	True				
ANR	6312680	EqualityExpression	c == CH_EOF		6312579	0		==			
ANR	6312681	Identifier	c		6312579	0					
ANR	6312682	Identifier	CH_EOF		6312579	1					
ANR	6312683	CompoundStatement		28:20:444:444	6312579	1					
ANR	6312684	ExpressionStatement	"expect ( ""#endif"" )"	745:4:15363:15380	6312579	0	True				
ANR	6312685	CallExpression	"expect ( ""#endif"" )"		6312579	0					
ANR	6312686	Callee	expect		6312579	0					
ANR	6312687	Identifier	expect		6312579	0					
ANR	6312688	ArgumentList	"""#endif"""		6312579	1					
ANR	6312689	Argument	"""#endif"""		6312579	0					
ANR	6312690	PrimaryExpression	"""#endif"""		6312579	0					
ANR	6312691	ReturnStatement	return ;	746:4:15386:15392	6312579	1	True				
ANR	6312692	ElseStatement	else		6312579	0					
ANR	6312693	IfStatement	if ( c == '\\\\' )		6312579	0					
ANR	6312694	Condition	c == '\\\\'	747:14:15408:15416	6312579	0	True				
ANR	6312695	EqualityExpression	c == '\\\\'		6312579	0		==			
ANR	6312696	Identifier	c		6312579	0					
ANR	6312697	PrimaryExpression	'\\\\'		6312579	1					
ANR	6312698	CompoundStatement		31:25:506:506	6312579	1					
ANR	6312699	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	748:4:15425:15446	6312579	0	True				
ANR	6312700	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6312579	0		=			
ANR	6312701	Identifier	ch		6312579	0					
ANR	6312702	ArrayIndexing	file -> buf_ptr [ 0 ]		6312579	1					
ANR	6312703	PtrMemberAccess	file -> buf_ptr		6312579	0					
ANR	6312704	Identifier	file		6312579	0					
ANR	6312705	Identifier	buf_ptr		6312579	1					
ANR	6312706	PrimaryExpression	0		6312579	1					
ANR	6312707	ExpressionStatement	handle_stray_noerror ( )	749:4:15452:15475	6312579	1	True				
ANR	6312708	CallExpression	handle_stray_noerror ( )		6312579	0					
ANR	6312709	Callee	handle_stray_noerror		6312579	0					
ANR	6312710	Identifier	handle_stray_noerror		6312579	0					
ANR	6312711	ArgumentList			6312579	1					
ANR	6312712	ExpressionStatement	p = file -> buf_ptr	751:3:15485:15502	6312579	15	True				
ANR	6312713	AssignmentExpression	p = file -> buf_ptr		6312579	0		=			
ANR	6312714	Identifier	p		6312579	0					
ANR	6312715	PtrMemberAccess	file -> buf_ptr		6312579	1					
ANR	6312716	Identifier	file		6312579	0					
ANR	6312717	Identifier	buf_ptr		6312579	1					
ANR	6312718	GotoStatement	goto redo_no_start ;	752:3:15507:15525	6312579	16	True				
ANR	6312719	Identifier	redo_no_start		6312579	0					
ANR	6312720	Label	"case '\\""' :"	754:2:15550:15559	6312579	17	True				
ANR	6312721	Label	case '\\'' :	755:2:15563:15572	6312579	18	True				
ANR	6312722	IfStatement	if ( in_warn_or_error )		6312579	19					
ANR	6312723	Condition	in_warn_or_error	756:7:15581:15596	6312579	0	True				
ANR	6312724	Identifier	in_warn_or_error		6312579	0					
ANR	6312725	CompoundStatement		40:25:686:686	6312579	1					
ANR	6312726	GotoStatement	goto _default ;	757:4:15605:15618	6312579	0	True				
ANR	6312727	Identifier	_default		6312579	0					
ANR	6312728	ExpressionStatement	"p = parse_pp_string ( p , c , NULL )"	759:3:15628:15660	6312579	20	True				
ANR	6312729	AssignmentExpression	"p = parse_pp_string ( p , c , NULL )"		6312579	0		=			
ANR	6312730	Identifier	p		6312579	0					
ANR	6312731	CallExpression	"parse_pp_string ( p , c , NULL )"		6312579	1					
ANR	6312732	Callee	parse_pp_string		6312579	0					
ANR	6312733	Identifier	parse_pp_string		6312579	0					
ANR	6312734	ArgumentList	p		6312579	1					
ANR	6312735	Argument	p		6312579	0					
ANR	6312736	Identifier	p		6312579	0					
ANR	6312737	Argument	c		6312579	1					
ANR	6312738	Identifier	c		6312579	0					
ANR	6312739	Argument	NULL		6312579	2					
ANR	6312740	Identifier	NULL		6312579	0					
ANR	6312741	IfStatement	if ( p == NULL )		6312579	21					
ANR	6312742	Condition	p == NULL	760:7:15669:15677	6312579	0	True				
ANR	6312743	EqualityExpression	p == NULL		6312579	0		==			
ANR	6312744	Identifier	p		6312579	0					
ANR	6312745	Identifier	NULL		6312579	1					
ANR	6312746	CompoundStatement		44:18:767:767	6312579	1					
ANR	6312747	ReturnStatement	return ;	761:4:15686:15692	6312579	0	True				
ANR	6312748	BreakStatement	break ;	763:3:15702:15707	6312579	22	True				
ANR	6312749	Label	case '/' :	765:2:15733:15741	6312579	23	True				
ANR	6312750	IfStatement	if ( in_warn_or_error )		6312579	24					
ANR	6312751	Condition	in_warn_or_error	766:7:15750:15765	6312579	0	True				
ANR	6312752	Identifier	in_warn_or_error		6312579	0					
ANR	6312753	CompoundStatement		50:25:855:855	6312579	1					
ANR	6312754	GotoStatement	goto _default ;	767:4:15774:15787	6312579	0	True				
ANR	6312755	Identifier	_default		6312579	0					
ANR	6312756	ExpressionStatement	file -> buf_ptr = p	769:3:15797:15814	6312579	25	True				
ANR	6312757	AssignmentExpression	file -> buf_ptr = p		6312579	0		=			
ANR	6312758	PtrMemberAccess	file -> buf_ptr		6312579	0					
ANR	6312759	Identifier	file		6312579	0					
ANR	6312760	Identifier	buf_ptr		6312579	1					
ANR	6312761	Identifier	p		6312579	1					
ANR	6312762	ExpressionStatement	ch = * p	770:3:15819:15826	6312579	26	True				
ANR	6312763	AssignmentExpression	ch = * p		6312579	0		=			
ANR	6312764	Identifier	ch		6312579	0					
ANR	6312765	UnaryOperationExpression	* p		6312579	1					
ANR	6312766	UnaryOperator	*		6312579	0					
ANR	6312767	Identifier	p		6312579	1					
ANR	6312768	ExpressionStatement	minp ( )	771:3:15831:15838	6312579	27	True				
ANR	6312769	CallExpression	minp ( )		6312579	0					
ANR	6312770	Callee	minp		6312579	0					
ANR	6312771	Identifier	minp		6312579	0					
ANR	6312772	ArgumentList			6312579	1					
ANR	6312773	ExpressionStatement	p = file -> buf_ptr	772:3:15843:15860	6312579	28	True				
ANR	6312774	AssignmentExpression	p = file -> buf_ptr		6312579	0		=			
ANR	6312775	Identifier	p		6312579	0					
ANR	6312776	PtrMemberAccess	file -> buf_ptr		6312579	1					
ANR	6312777	Identifier	file		6312579	0					
ANR	6312778	Identifier	buf_ptr		6312579	1					
ANR	6312779	IfStatement	if ( ch == '*' )		6312579	29					
ANR	6312780	Condition	ch == '*'	773:7:15869:15877	6312579	0	True				
ANR	6312781	EqualityExpression	ch == '*'		6312579	0		==			
ANR	6312782	Identifier	ch		6312579	0					
ANR	6312783	PrimaryExpression	'*'		6312579	1					
ANR	6312784	CompoundStatement		57:18:967:967	6312579	1					
ANR	6312785	ExpressionStatement	p = parse_comment ( p )	774:4:15886:15907	6312579	0	True				
ANR	6312786	AssignmentExpression	p = parse_comment ( p )		6312579	0		=			
ANR	6312787	Identifier	p		6312579	0					
ANR	6312788	CallExpression	parse_comment ( p )		6312579	1					
ANR	6312789	Callee	parse_comment		6312579	0					
ANR	6312790	Identifier	parse_comment		6312579	0					
ANR	6312791	ArgumentList	p		6312579	1					
ANR	6312792	Argument	p		6312579	0					
ANR	6312793	Identifier	p		6312579	0					
ANR	6312794	ElseStatement	else		6312579	0					
ANR	6312795	IfStatement	if ( ch == '/' )		6312579	0					
ANR	6312796	Condition	ch == '/'	775:14:15923:15931	6312579	0	True				
ANR	6312797	EqualityExpression	ch == '/'		6312579	0		==			
ANR	6312798	Identifier	ch		6312579	0					
ANR	6312799	PrimaryExpression	'/'		6312579	1					
ANR	6312800	CompoundStatement		59:25:1021:1021	6312579	1					
ANR	6312801	ExpressionStatement	p = parse_line_comment ( p )	776:4:15940:15966	6312579	0	True				
ANR	6312802	AssignmentExpression	p = parse_line_comment ( p )		6312579	0		=			
ANR	6312803	Identifier	p		6312579	0					
ANR	6312804	CallExpression	parse_line_comment ( p )		6312579	1					
ANR	6312805	Callee	parse_line_comment		6312579	0					
ANR	6312806	Identifier	parse_line_comment		6312579	0					
ANR	6312807	ArgumentList	p		6312579	1					
ANR	6312808	Argument	p		6312579	0					
ANR	6312809	Identifier	p		6312579	0					
ANR	6312810	BreakStatement	break ;	778:3:15976:15981	6312579	30	True				
ANR	6312811	Label	case '#' :	779:2:15985:15993	6312579	31	True				
ANR	6312812	ExpressionStatement	p ++	780:3:15998:16001	6312579	32	True				
ANR	6312813	PostIncDecOperationExpression	p ++		6312579	0					
ANR	6312814	Identifier	p		6312579	0					
ANR	6312815	IncDec	++		6312579	1					
ANR	6312816	IfStatement	if ( start_of_line )		6312579	33					
ANR	6312817	Condition	start_of_line	781:7:16010:16022	6312579	0	True				
ANR	6312818	Identifier	start_of_line		6312579	0					
ANR	6312819	CompoundStatement		65:22:1112:1112	6312579	1					
ANR	6312820	ExpressionStatement	file -> buf_ptr = p	782:4:16031:16048	6312579	0	True				
ANR	6312821	AssignmentExpression	file -> buf_ptr = p		6312579	0		=			
ANR	6312822	PtrMemberAccess	file -> buf_ptr		6312579	0					
ANR	6312823	Identifier	file		6312579	0					
ANR	6312824	Identifier	buf_ptr		6312579	1					
ANR	6312825	Identifier	p		6312579	1					
ANR	6312826	ExpressionStatement	next_nomacro ( )	783:4:16054:16069	6312579	1	True				
ANR	6312827	CallExpression	next_nomacro ( )		6312579	0					
ANR	6312828	Callee	next_nomacro		6312579	0					
ANR	6312829	Identifier	next_nomacro		6312579	0					
ANR	6312830	ArgumentList			6312579	1					
ANR	6312831	ExpressionStatement	p = file -> buf_ptr	784:4:16075:16092	6312579	2	True				
ANR	6312832	AssignmentExpression	p = file -> buf_ptr		6312579	0		=			
ANR	6312833	Identifier	p		6312579	0					
ANR	6312834	PtrMemberAccess	file -> buf_ptr		6312579	1					
ANR	6312835	Identifier	file		6312579	0					
ANR	6312836	Identifier	buf_ptr		6312579	1					
ANR	6312837	IfStatement	if ( a == 0 && ( tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF ) )		6312579	3					
ANR	6312838	Condition	a == 0 && ( tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF )	785:8:16102:16175	6312579	0	True				
ANR	6312839	AndExpression	a == 0 && ( tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF )		6312579	0		&&			
ANR	6312840	EqualityExpression	a == 0		6312579	0		==			
ANR	6312841	Identifier	a		6312579	0					
ANR	6312842	PrimaryExpression	0		6312579	1					
ANR	6312843	OrExpression	tok == TOK_ELSE || tok == TOK_ELIF || tok == TOK_ENDIF		6312579	1		||			
ANR	6312844	EqualityExpression	tok == TOK_ELSE		6312579	0		==			
ANR	6312845	Identifier	tok		6312579	0					
ANR	6312846	Identifier	TOK_ELSE		6312579	1					
ANR	6312847	OrExpression	tok == TOK_ELIF || tok == TOK_ENDIF		6312579	1		||			
ANR	6312848	EqualityExpression	tok == TOK_ELIF		6312579	0		==			
ANR	6312849	Identifier	tok		6312579	0					
ANR	6312850	Identifier	TOK_ELIF		6312579	1					
ANR	6312851	EqualityExpression	tok == TOK_ENDIF		6312579	1		==			
ANR	6312852	Identifier	tok		6312579	0					
ANR	6312853	Identifier	TOK_ENDIF		6312579	1					
ANR	6312854	CompoundStatement		70:66:1265:1265	6312579	1					
ANR	6312855	GotoStatement	goto the_end ;	787:5:16185:16197	6312579	0	True				
ANR	6312856	Identifier	the_end		6312579	0					
ANR	6312857	IfStatement	if ( tok == TOK_IF || tok == TOK_IFDEF || tok == TOK_IFNDEF )		6312579	4					
ANR	6312858	Condition	tok == TOK_IF || tok == TOK_IFDEF || tok == TOK_IFNDEF	789:8:16213:16266	6312579	0	True				
ANR	6312859	OrExpression	tok == TOK_IF || tok == TOK_IFDEF || tok == TOK_IFNDEF		6312579	0		||			
ANR	6312860	EqualityExpression	tok == TOK_IF		6312579	0		==			
ANR	6312861	Identifier	tok		6312579	0					
ANR	6312862	Identifier	TOK_IF		6312579	1					
ANR	6312863	OrExpression	tok == TOK_IFDEF || tok == TOK_IFNDEF		6312579	1		||			
ANR	6312864	EqualityExpression	tok == TOK_IFDEF		6312579	0		==			
ANR	6312865	Identifier	tok		6312579	0					
ANR	6312866	Identifier	TOK_IFDEF		6312579	1					
ANR	6312867	EqualityExpression	tok == TOK_IFNDEF		6312579	1		==			
ANR	6312868	Identifier	tok		6312579	0					
ANR	6312869	Identifier	TOK_IFNDEF		6312579	1					
ANR	6312870	CompoundStatement		73:64:1356:1356	6312579	1					
ANR	6312871	ExpressionStatement	a ++	790:5:16276:16279	6312579	0	True				
ANR	6312872	PostIncDecOperationExpression	a ++		6312579	0					
ANR	6312873	Identifier	a		6312579	0					
ANR	6312874	IncDec	++		6312579	1					
ANR	6312875	ElseStatement	else		6312579	0					
ANR	6312876	IfStatement	if ( tok == TOK_ENDIF )		6312579	0					
ANR	6312877	Condition	tok == TOK_ENDIF	791:15:16296:16311	6312579	0	True				
ANR	6312878	EqualityExpression	tok == TOK_ENDIF		6312579	0		==			
ANR	6312879	Identifier	tok		6312579	0					
ANR	6312880	Identifier	TOK_ENDIF		6312579	1					
ANR	6312881	CompoundStatement		75:33:1401:1401	6312579	1					
ANR	6312882	ExpressionStatement	a --	792:5:16321:16324	6312579	0	True				
ANR	6312883	PostIncDecOperationExpression	a --		6312579	0					
ANR	6312884	Identifier	a		6312579	0					
ANR	6312885	IncDec	--		6312579	1					
ANR	6312886	ElseStatement	else		6312579	0					
ANR	6312887	IfStatement	if ( tok == TOK_ERROR || tok == TOK_WARNING )		6312579	0					
ANR	6312888	Condition	tok == TOK_ERROR || tok == TOK_WARNING	793:15:16341:16378	6312579	0	True				
ANR	6312889	OrExpression	tok == TOK_ERROR || tok == TOK_WARNING		6312579	0		||			
ANR	6312890	EqualityExpression	tok == TOK_ERROR		6312579	0		==			
ANR	6312891	Identifier	tok		6312579	0					
ANR	6312892	Identifier	TOK_ERROR		6312579	1					
ANR	6312893	EqualityExpression	tok == TOK_WARNING		6312579	1		==			
ANR	6312894	Identifier	tok		6312579	0					
ANR	6312895	Identifier	TOK_WARNING		6312579	1					
ANR	6312896	CompoundStatement		77:55:1468:1468	6312579	1					
ANR	6312897	ExpressionStatement	in_warn_or_error = 1	794:5:16388:16408	6312579	0	True				
ANR	6312898	AssignmentExpression	in_warn_or_error = 1		6312579	0		=			
ANR	6312899	Identifier	in_warn_or_error		6312579	0					
ANR	6312900	PrimaryExpression	1		6312579	1					
ANR	6312901	ElseStatement	else		6312579	0					
ANR	6312902	IfStatement	if ( tok == TOK_LINEFEED )		6312579	0					
ANR	6312903	Condition	tok == TOK_LINEFEED	795:15:16425:16443	6312579	0	True				
ANR	6312904	EqualityExpression	tok == TOK_LINEFEED		6312579	0		==			
ANR	6312905	Identifier	tok		6312579	0					
ANR	6312906	Identifier	TOK_LINEFEED		6312579	1					
ANR	6312907	CompoundStatement		79:36:1533:1533	6312579	1					
ANR	6312908	GotoStatement	goto redo_start ;	796:5:16453:16468	6312579	0	True				
ANR	6312909	Identifier	redo_start		6312579	0					
ANR	6312910	BreakStatement	break ;	799:3:16484:16489	6312579	34	True				
ANR	6312911	Label	_default :	800:0:16491:16499	6312579	35	True				
ANR	6312912	Identifier	_default		6312579	0					
ANR	6312913	Label	default :	801:2:16503:16510	6312579	36	True				
ANR	6312914	Identifier	default		6312579	0					
ANR	6312915	ExpressionStatement	p ++	802:3:16515:16518	6312579	37	True				
ANR	6312916	PostIncDecOperationExpression	p ++		6312579	0					
ANR	6312917	Identifier	p		6312579	0					
ANR	6312918	IncDec	++		6312579	1					
ANR	6312919	BreakStatement	break ;	803:3:16523:16528	6312579	38	True				
ANR	6312920	ExpressionStatement	start_of_line = 0	805:2:16536:16553	6312579	3	True				
ANR	6312921	AssignmentExpression	start_of_line = 0		6312579	0		=			
ANR	6312922	Identifier	start_of_line		6312579	0					
ANR	6312923	PrimaryExpression	0		6312579	1					
ANR	6312924	Label	the_end :	807:0:16558:16565	6312579	8	True				
ANR	6312925	Identifier	the_end		6312579	0					
ANR	6312926	ExpressionStatement		808:1:16568:16568	6312579	9	True				
ANR	6312927	ExpressionStatement	file -> buf_ptr = p	809:1:16571:16588	6312579	10	True				
ANR	6312928	AssignmentExpression	file -> buf_ptr = p		6312579	0		=			
ANR	6312929	PtrMemberAccess	file -> buf_ptr		6312579	0					
ANR	6312930	Identifier	file		6312579	0					
ANR	6312931	Identifier	buf_ptr		6312579	1					
ANR	6312932	Identifier	p		6312579	1					
ANR	6312933	ReturnType	static void		6312579	1					
ANR	6312934	Identifier	preprocess_skip		6312579	2					
ANR	6312935	ParameterList			6312579	3					
ANR	6312936	CFGEntryNode	ENTRY		6312579		True				
ANR	6312937	CFGExitNode	EXIT		6312579		True				
ANR	6312938	Symbol	* file -> buf_ptr		6312579						
ANR	6312939	Symbol	parse_pp_string		6312579						
ANR	6312940	Symbol	TOK_WARNING		6312579						
ANR	6312941	Symbol	TOK_LINEFEED		6312579						
ANR	6312942	Symbol	tok		6312579						
ANR	6312943	Symbol	file		6312579						
ANR	6312944	Symbol	TOK_IFNDEF		6312579						
ANR	6312945	Symbol	handle_eob		6312579						
ANR	6312946	Symbol	file -> buf_ptr		6312579						
ANR	6312947	Symbol	file -> line_num		6312579						
ANR	6312948	Symbol	in_warn_or_error		6312579						
ANR	6312949	Symbol	TOK_IF		6312579						
ANR	6312950	Symbol	a		6312579						
ANR	6312951	Symbol	c		6312579						
ANR	6312952	Symbol	NULL		6312579						
ANR	6312953	Symbol	ch		6312579						
ANR	6312954	Symbol	start_of_line		6312579						
ANR	6312955	Symbol	TOK_ERROR		6312579						
ANR	6312956	Symbol	* file		6312579						
ANR	6312957	Symbol	tcc_nerr		6312579						
ANR	6312958	Symbol	TOK_ELSE		6312579						
ANR	6312959	Symbol	p		6312579						
ANR	6312960	Symbol	CH_EOF		6312579						
ANR	6312961	Symbol	TOK_ELIF		6312579						
ANR	6312962	Symbol	parse_line_comment		6312579						
ANR	6312963	Symbol	TOK_ENDIF		6312579						
ANR	6312964	Symbol	* p		6312579						
ANR	6312965	Symbol	parse_comment		6312579						
ANR	6312966	Symbol	* * file		6312579						
ANR	6312967	Symbol	TOK_IFDEF		6312579						
ANR	6312968	Function	save_parse_state	819:0:16817:16954							
ANR	6312969	FunctionDef	save_parse_state (ParseState * s)		6312968	0					
ANR	6312970	CompoundStatement		820:0:16862:16954	6312968	0					
ANR	6312971	ExpressionStatement	s -> line_num = file -> line_num	821:1:16865:16893	6312968	0	True				
ANR	6312972	AssignmentExpression	s -> line_num = file -> line_num		6312968	0		=			
ANR	6312973	PtrMemberAccess	s -> line_num		6312968	0					
ANR	6312974	Identifier	s		6312968	0					
ANR	6312975	Identifier	line_num		6312968	1					
ANR	6312976	PtrMemberAccess	file -> line_num		6312968	1					
ANR	6312977	Identifier	file		6312968	0					
ANR	6312978	Identifier	line_num		6312968	1					
ANR	6312979	ExpressionStatement	s -> macro_ptr = macro_ptr	822:1:16896:16920	6312968	1	True				
ANR	6312980	AssignmentExpression	s -> macro_ptr = macro_ptr		6312968	0		=			
ANR	6312981	PtrMemberAccess	s -> macro_ptr		6312968	0					
ANR	6312982	Identifier	s		6312968	0					
ANR	6312983	Identifier	macro_ptr		6312968	1					
ANR	6312984	Identifier	macro_ptr		6312968	1					
ANR	6312985	ExpressionStatement	s -> tok = tok	823:1:16923:16935	6312968	2	True				
ANR	6312986	AssignmentExpression	s -> tok = tok		6312968	0		=			
ANR	6312987	PtrMemberAccess	s -> tok		6312968	0					
ANR	6312988	Identifier	s		6312968	0					
ANR	6312989	Identifier	tok		6312968	1					
ANR	6312990	Identifier	tok		6312968	1					
ANR	6312991	ExpressionStatement	s -> tokc = tokc	824:1:16938:16952	6312968	3	True				
ANR	6312992	AssignmentExpression	s -> tokc = tokc		6312968	0		=			
ANR	6312993	PtrMemberAccess	s -> tokc		6312968	0					
ANR	6312994	Identifier	s		6312968	0					
ANR	6312995	Identifier	tokc		6312968	1					
ANR	6312996	Identifier	tokc		6312968	1					
ANR	6312997	ReturnType	ST_FUNC void		6312968	1					
ANR	6312998	Identifier	save_parse_state		6312968	2					
ANR	6312999	ParameterList	ParseState * s		6312968	3					
ANR	6313000	Parameter	ParseState * s	819:30:16847:16859	6312968	0	True				
ANR	6313001	ParameterType	ParseState *		6312968	0					
ANR	6313002	Identifier	s		6312968	1					
ANR	6313003	CFGEntryNode	ENTRY		6312968		True				
ANR	6313004	CFGExitNode	EXIT		6312968		True				
ANR	6313005	Symbol	tok		6312968						
ANR	6313006	Symbol	s		6312968						
ANR	6313007	Symbol	file		6312968						
ANR	6313008	Symbol	s -> line_num		6312968						
ANR	6313009	Symbol	s -> macro_ptr		6312968						
ANR	6313010	Symbol	macro_ptr		6312968						
ANR	6313011	Symbol	s -> tokc		6312968						
ANR	6313012	Symbol	tokc		6312968						
ANR	6313013	Symbol	file -> line_num		6312968						
ANR	6313014	Symbol	* file		6312968						
ANR	6313015	Symbol	s -> tok		6312968						
ANR	6313016	Symbol	* s		6312968						
ANR	6313017	Function	restore_parse_state	828:0:16992:17132							
ANR	6313018	FunctionDef	restore_parse_state (ParseState * s)		6313017	0					
ANR	6313019	CompoundStatement		829:0:17040:17132	6313017	0					
ANR	6313020	ExpressionStatement	file -> line_num = s -> line_num	830:1:17043:17071	6313017	0	True				
ANR	6313021	AssignmentExpression	file -> line_num = s -> line_num		6313017	0		=			
ANR	6313022	PtrMemberAccess	file -> line_num		6313017	0					
ANR	6313023	Identifier	file		6313017	0					
ANR	6313024	Identifier	line_num		6313017	1					
ANR	6313025	PtrMemberAccess	s -> line_num		6313017	1					
ANR	6313026	Identifier	s		6313017	0					
ANR	6313027	Identifier	line_num		6313017	1					
ANR	6313028	ExpressionStatement	macro_ptr = s -> macro_ptr	831:1:17074:17098	6313017	1	True				
ANR	6313029	AssignmentExpression	macro_ptr = s -> macro_ptr		6313017	0		=			
ANR	6313030	Identifier	macro_ptr		6313017	0					
ANR	6313031	PtrMemberAccess	s -> macro_ptr		6313017	1					
ANR	6313032	Identifier	s		6313017	0					
ANR	6313033	Identifier	macro_ptr		6313017	1					
ANR	6313034	ExpressionStatement	tok = s -> tok	832:1:17101:17113	6313017	2	True				
ANR	6313035	AssignmentExpression	tok = s -> tok		6313017	0		=			
ANR	6313036	Identifier	tok		6313017	0					
ANR	6313037	PtrMemberAccess	s -> tok		6313017	1					
ANR	6313038	Identifier	s		6313017	0					
ANR	6313039	Identifier	tok		6313017	1					
ANR	6313040	ExpressionStatement	tokc = s -> tokc	833:1:17116:17130	6313017	3	True				
ANR	6313041	AssignmentExpression	tokc = s -> tokc		6313017	0		=			
ANR	6313042	Identifier	tokc		6313017	0					
ANR	6313043	PtrMemberAccess	s -> tokc		6313017	1					
ANR	6313044	Identifier	s		6313017	0					
ANR	6313045	Identifier	tokc		6313017	1					
ANR	6313046	ReturnType	ST_FUNC void		6313017	1					
ANR	6313047	Identifier	restore_parse_state		6313017	2					
ANR	6313048	ParameterList	ParseState * s		6313017	3					
ANR	6313049	Parameter	ParseState * s	828:33:17025:17037	6313017	0	True				
ANR	6313050	ParameterType	ParseState *		6313017	0					
ANR	6313051	Identifier	s		6313017	1					
ANR	6313052	CFGEntryNode	ENTRY		6313017		True				
ANR	6313053	CFGExitNode	EXIT		6313017		True				
ANR	6313054	Symbol	tok		6313017						
ANR	6313055	Symbol	s		6313017						
ANR	6313056	Symbol	file		6313017						
ANR	6313057	Symbol	s -> line_num		6313017						
ANR	6313058	Symbol	macro_ptr		6313017						
ANR	6313059	Symbol	s -> macro_ptr		6313017						
ANR	6313060	Symbol	s -> tokc		6313017						
ANR	6313061	Symbol	tokc		6313017						
ANR	6313062	Symbol	file -> line_num		6313017						
ANR	6313063	Symbol	* file		6313017						
ANR	6313064	Symbol	s -> tok		6313017						
ANR	6313065	Symbol	* s		6313017						
ANR	6313066	Function	tok_ext_size	838:0:17212:17632							
ANR	6313067	FunctionDef	tok_ext_size (int t)		6313066	0					
ANR	6313068	CompoundStatement		839:0:17250:17632	6313066	0					
ANR	6313069	SwitchStatement	switch ( t )		6313066	0					
ANR	6313070	Condition	t	840:9:17261:17261	6313066	0	True				
ANR	6313071	Identifier	t		6313066	0					
ANR	6313072	CompoundStatement		2:12:13:13	6313066	1					
ANR	6313073	Label	case TOK_CINT :	842:1:17282:17295	6313066	0	True				
ANR	6313074	Identifier	TOK_CINT		6313066	0					
ANR	6313075	Label	case TOK_CUINT :	843:1:17298:17312	6313066	1	True				
ANR	6313076	Identifier	TOK_CUINT		6313066	0					
ANR	6313077	Label	case TOK_CCHAR :	844:1:17315:17329	6313066	2	True				
ANR	6313078	Identifier	TOK_CCHAR		6313066	0					
ANR	6313079	Label	case TOK_LCHAR :	845:1:17332:17346	6313066	3	True				
ANR	6313080	Identifier	TOK_LCHAR		6313066	0					
ANR	6313081	Label	case TOK_CFLOAT :	846:1:17349:17364	6313066	4	True				
ANR	6313082	Identifier	TOK_CFLOAT		6313066	0					
ANR	6313083	Label	case TOK_LINENUM :	847:1:17367:17383	6313066	5	True				
ANR	6313084	Identifier	TOK_LINENUM		6313066	0					
ANR	6313085	ReturnStatement	return 1 ;	848:2:17387:17395	6313066	6	True				
ANR	6313086	PrimaryExpression	1		6313066	0					
ANR	6313087	Label	case TOK_STR :	849:1:17398:17410	6313066	7	True				
ANR	6313088	Identifier	TOK_STR		6313066	0					
ANR	6313089	Label	case TOK_LSTR :	850:1:17413:17426	6313066	8	True				
ANR	6313090	Identifier	TOK_LSTR		6313066	0					
ANR	6313091	Label	case TOK_PPNUM :	851:1:17429:17443	6313066	9	True				
ANR	6313092	Identifier	TOK_PPNUM		6313066	0					
ANR	6313093	ExpressionStatement	"tcc_error ( ""unsupported token"" )"	852:2:17447:17478	6313066	10	True				
ANR	6313094	CallExpression	"tcc_error ( ""unsupported token"" )"		6313066	0					
ANR	6313095	Callee	tcc_error		6313066	0					
ANR	6313096	Identifier	tcc_error		6313066	0					
ANR	6313097	ArgumentList	"""unsupported token"""		6313066	1					
ANR	6313098	Argument	"""unsupported token"""		6313066	0					
ANR	6313099	PrimaryExpression	"""unsupported token"""		6313066	0					
ANR	6313100	ReturnStatement	return 1 ;	853:2:17482:17490	6313066	11	True				
ANR	6313101	PrimaryExpression	1		6313066	0					
ANR	6313102	Label	case TOK_CDOUBLE :	854:1:17493:17509	6313066	12	True				
ANR	6313103	Identifier	TOK_CDOUBLE		6313066	0					
ANR	6313104	Label	case TOK_CLLONG :	855:1:17512:17527	6313066	13	True				
ANR	6313105	Identifier	TOK_CLLONG		6313066	0					
ANR	6313106	Label	case TOK_CULLONG :	856:1:17530:17546	6313066	14	True				
ANR	6313107	Identifier	TOK_CULLONG		6313066	0					
ANR	6313108	ReturnStatement	return 2 ;	857:2:17550:17558	6313066	15	True				
ANR	6313109	PrimaryExpression	2		6313066	0					
ANR	6313110	Label	case TOK_CLDOUBLE :	858:1:17561:17578	6313066	16	True				
ANR	6313111	Identifier	TOK_CLDOUBLE		6313066	0					
ANR	6313112	ReturnStatement	return LDOUBLE_SIZE / 4 ;	859:2:17582:17605	6313066	17	True				
ANR	6313113	MultiplicativeExpression	LDOUBLE_SIZE / 4		6313066	0		/			
ANR	6313114	Identifier	LDOUBLE_SIZE		6313066	0					
ANR	6313115	PrimaryExpression	4		6313066	1					
ANR	6313116	Label	default :	860:1:17608:17615	6313066	18	True				
ANR	6313117	Identifier	default		6313066	0					
ANR	6313118	ReturnStatement	return 0 ;	861:2:17619:17627	6313066	19	True				
ANR	6313119	PrimaryExpression	0		6313066	0					
ANR	6313120	ReturnType	static inline int		6313066	1					
ANR	6313121	Identifier	tok_ext_size		6313066	2					
ANR	6313122	ParameterList	int t		6313066	3					
ANR	6313123	Parameter	int t	838:31:17243:17247	6313066	0	True				
ANR	6313124	ParameterType	int		6313066	0					
ANR	6313125	Identifier	t		6313066	1					
ANR	6313126	CFGEntryNode	ENTRY		6313066		True				
ANR	6313127	CFGExitNode	EXIT		6313066		True				
ANR	6313128	Symbol	t		6313066						
ANR	6313129	Symbol	LDOUBLE_SIZE		6313066						
ANR	6313130	Function	tok_str_new	867:0:17664:17783							
ANR	6313131	FunctionDef	tok_str_new (TokenString * s)		6313130	0					
ANR	6313132	CompoundStatement		868:0:17705:17783	6313130	0					
ANR	6313133	ExpressionStatement	s -> str = NULL	869:1:17708:17721	6313130	0	True				
ANR	6313134	AssignmentExpression	s -> str = NULL		6313130	0		=			
ANR	6313135	PtrMemberAccess	s -> str		6313130	0					
ANR	6313136	Identifier	s		6313130	0					
ANR	6313137	Identifier	str		6313130	1					
ANR	6313138	Identifier	NULL		6313130	1					
ANR	6313139	ExpressionStatement	s -> len = 0	870:1:17724:17734	6313130	1	True				
ANR	6313140	AssignmentExpression	s -> len = 0		6313130	0		=			
ANR	6313141	PtrMemberAccess	s -> len		6313130	0					
ANR	6313142	Identifier	s		6313130	0					
ANR	6313143	Identifier	len		6313130	1					
ANR	6313144	PrimaryExpression	0		6313130	1					
ANR	6313145	ExpressionStatement	s -> allocated_len = 0	871:1:17737:17757	6313130	2	True				
ANR	6313146	AssignmentExpression	s -> allocated_len = 0		6313130	0		=			
ANR	6313147	PtrMemberAccess	s -> allocated_len		6313130	0					
ANR	6313148	Identifier	s		6313130	0					
ANR	6313149	Identifier	allocated_len		6313130	1					
ANR	6313150	PrimaryExpression	0		6313130	1					
ANR	6313151	ExpressionStatement	s -> last_line_num = - 1	872:1:17760:17781	6313130	3	True				
ANR	6313152	AssignmentExpression	s -> last_line_num = - 1		6313130	0		=			
ANR	6313153	PtrMemberAccess	s -> last_line_num		6313130	0					
ANR	6313154	Identifier	s		6313130	0					
ANR	6313155	Identifier	last_line_num		6313130	1					
ANR	6313156	UnaryOperationExpression	- 1		6313130	1					
ANR	6313157	UnaryOperator	-		6313130	0					
ANR	6313158	PrimaryExpression	1		6313130	1					
ANR	6313159	ReturnType	ST_INLN void		6313130	1					
ANR	6313160	Identifier	tok_str_new		6313130	2					
ANR	6313161	ParameterList	TokenString * s		6313130	3					
ANR	6313162	Parameter	TokenString * s	867:25:17689:17702	6313130	0	True				
ANR	6313163	ParameterType	TokenString *		6313130	0					
ANR	6313164	Identifier	s		6313130	1					
ANR	6313165	CFGEntryNode	ENTRY		6313130		True				
ANR	6313166	CFGExitNode	EXIT		6313130		True				
ANR	6313167	Symbol	s -> last_line_num		6313130						
ANR	6313168	Symbol	s -> len		6313130						
ANR	6313169	Symbol	s		6313130						
ANR	6313170	Symbol	NULL		6313130						
ANR	6313171	Symbol	s -> allocated_len		6313130						
ANR	6313172	Symbol	s -> str		6313130						
ANR	6313173	Symbol	* s		6313130						
ANR	6313174	Function	tok_str_free	875:0:17786:17837							
ANR	6313175	FunctionDef	tok_str_free (int * str)		6313174	0					
ANR	6313176	CompoundStatement		876:0:17822:17837	6313174	0					
ANR	6313177	ExpressionStatement	free ( str )	877:1:17825:17835	6313174	0	True				
ANR	6313178	CallExpression	free ( str )		6313174	0					
ANR	6313179	Callee	free		6313174	0					
ANR	6313180	Identifier	free		6313174	0					
ANR	6313181	ArgumentList	str		6313174	1					
ANR	6313182	Argument	str		6313174	0					
ANR	6313183	Identifier	str		6313174	0					
ANR	6313184	ReturnType	ST_FUNC void		6313174	1					
ANR	6313185	Identifier	tok_str_free		6313174	2					
ANR	6313186	ParameterList	int * str		6313174	3					
ANR	6313187	Parameter	int * str	875:26:17812:17819	6313174	0	True				
ANR	6313188	ParameterType	int *		6313174	0					
ANR	6313189	Identifier	str		6313174	1					
ANR	6313190	CFGEntryNode	ENTRY		6313174		True				
ANR	6313191	CFGExitNode	EXIT		6313174		True				
ANR	6313192	Symbol	str		6313174						
ANR	6313193	Function	tok_str_realloc	880:0:17840:18084							
ANR	6313194	FunctionDef	tok_str_realloc (TokenString * s)		6313193	0					
ANR	6313195	CompoundStatement		881:0:17884:18084	6313193	0					
ANR	6313196	IdentifierDeclStatement	"int * str , len ;"	882:1:17887:17900	6313193	0	True				
ANR	6313197	IdentifierDecl	* str		6313193	0					
ANR	6313198	IdentifierDeclType	int *		6313193	0					
ANR	6313199	Identifier	str		6313193	1					
ANR	6313200	IdentifierDecl	len		6313193	1					
ANR	6313201	IdentifierDeclType	int		6313193	0					
ANR	6313202	Identifier	len		6313193	1					
ANR	6313203	IfStatement	if ( s -> allocated_len == 0 )		6313193	1					
ANR	6313204	Condition	s -> allocated_len == 0	884:5:17908:17928	6313193	0	True				
ANR	6313205	EqualityExpression	s -> allocated_len == 0		6313193	0		==			
ANR	6313206	PtrMemberAccess	s -> allocated_len		6313193	0					
ANR	6313207	Identifier	s		6313193	0					
ANR	6313208	Identifier	allocated_len		6313193	1					
ANR	6313209	PrimaryExpression	0		6313193	1					
ANR	6313210	CompoundStatement		4:28:46:46	6313193	1					
ANR	6313211	ExpressionStatement	len = 8	885:2:17935:17942	6313193	0	True				
ANR	6313212	AssignmentExpression	len = 8		6313193	0		=			
ANR	6313213	Identifier	len		6313193	0					
ANR	6313214	PrimaryExpression	8		6313193	1					
ANR	6313215	ElseStatement	else		6313193	0					
ANR	6313216	CompoundStatement		6:8:67:67	6313193	0					
ANR	6313217	ExpressionStatement	len = s -> allocated_len * 2	887:2:17956:17982	6313193	0	True				
ANR	6313218	AssignmentExpression	len = s -> allocated_len * 2		6313193	0		=			
ANR	6313219	Identifier	len		6313193	0					
ANR	6313220	MultiplicativeExpression	s -> allocated_len * 2		6313193	1		*			
ANR	6313221	PtrMemberAccess	s -> allocated_len		6313193	0					
ANR	6313222	Identifier	s		6313193	0					
ANR	6313223	Identifier	allocated_len		6313193	1					
ANR	6313224	PrimaryExpression	2		6313193	1					
ANR	6313225	ExpressionStatement	"str = realloc ( s -> str , len * sizeof ( int ) )"	889:1:17988:18029	6313193	2	True				
ANR	6313226	AssignmentExpression	"str = realloc ( s -> str , len * sizeof ( int ) )"		6313193	0		=			
ANR	6313227	Identifier	str		6313193	0					
ANR	6313228	CallExpression	"realloc ( s -> str , len * sizeof ( int ) )"		6313193	1					
ANR	6313229	Callee	realloc		6313193	0					
ANR	6313230	Identifier	realloc		6313193	0					
ANR	6313231	ArgumentList	s -> str		6313193	1					
ANR	6313232	Argument	s -> str		6313193	0					
ANR	6313233	PtrMemberAccess	s -> str		6313193	0					
ANR	6313234	Identifier	s		6313193	0					
ANR	6313235	Identifier	str		6313193	1					
ANR	6313236	Argument	len * sizeof ( int )		6313193	1					
ANR	6313237	MultiplicativeExpression	len * sizeof ( int )		6313193	0		*			
ANR	6313238	Identifier	len		6313193	0					
ANR	6313239	SizeofExpression	sizeof ( int )		6313193	1					
ANR	6313240	Sizeof	sizeof		6313193	0					
ANR	6313241	SizeofOperand	int		6313193	1					
ANR	6313242	ExpressionStatement	s -> allocated_len = len	890:1:18032:18054	6313193	3	True				
ANR	6313243	AssignmentExpression	s -> allocated_len = len		6313193	0		=			
ANR	6313244	PtrMemberAccess	s -> allocated_len		6313193	0					
ANR	6313245	Identifier	s		6313193	0					
ANR	6313246	Identifier	allocated_len		6313193	1					
ANR	6313247	Identifier	len		6313193	1					
ANR	6313248	ExpressionStatement	s -> str = str	891:1:18057:18069	6313193	4	True				
ANR	6313249	AssignmentExpression	s -> str = str		6313193	0		=			
ANR	6313250	PtrMemberAccess	s -> str		6313193	0					
ANR	6313251	Identifier	s		6313193	0					
ANR	6313252	Identifier	str		6313193	1					
ANR	6313253	Identifier	str		6313193	1					
ANR	6313254	ReturnStatement	return str ;	892:1:18072:18082	6313193	5	True				
ANR	6313255	Identifier	str		6313193	0					
ANR	6313256	ReturnType	static int *		6313193	1					
ANR	6313257	Identifier	tok_str_realloc		6313193	2					
ANR	6313258	ParameterList	TokenString * s		6313193	3					
ANR	6313259	Parameter	TokenString * s	880:28:17868:17881	6313193	0	True				
ANR	6313260	ParameterType	TokenString *		6313193	0					
ANR	6313261	Identifier	s		6313193	1					
ANR	6313262	CFGEntryNode	ENTRY		6313193		True				
ANR	6313263	CFGExitNode	EXIT		6313193		True				
ANR	6313264	Symbol	str		6313193						
ANR	6313265	Symbol	s		6313193						
ANR	6313266	Symbol	len		6313193						
ANR	6313267	Symbol	s -> allocated_len		6313193						
ANR	6313268	Symbol	realloc		6313193						
ANR	6313269	Symbol	* s		6313193						
ANR	6313270	Symbol	s -> str		6313193						
ANR	6313271	Function	tok_str_add	895:0:18087:18280							
ANR	6313272	FunctionDef	"tok_str_add (TokenString * s , int t)"		6313271	0					
ANR	6313273	CompoundStatement		896:0:18135:18280	6313271	0					
ANR	6313274	IdentifierDeclStatement	"int len , * str ;"	897:1:18138:18151	6313271	0	True				
ANR	6313275	IdentifierDecl	len		6313271	0					
ANR	6313276	IdentifierDeclType	int		6313271	0					
ANR	6313277	Identifier	len		6313271	1					
ANR	6313278	IdentifierDecl	* str		6313271	1					
ANR	6313279	IdentifierDeclType	int *		6313271	0					
ANR	6313280	Identifier	str		6313271	1					
ANR	6313281	ExpressionStatement	len = s -> len	899:1:18155:18167	6313271	1	True				
ANR	6313282	AssignmentExpression	len = s -> len		6313271	0		=			
ANR	6313283	Identifier	len		6313271	0					
ANR	6313284	PtrMemberAccess	s -> len		6313271	1					
ANR	6313285	Identifier	s		6313271	0					
ANR	6313286	Identifier	len		6313271	1					
ANR	6313287	ExpressionStatement	str = s -> str	900:1:18170:18182	6313271	2	True				
ANR	6313288	AssignmentExpression	str = s -> str		6313271	0		=			
ANR	6313289	Identifier	str		6313271	0					
ANR	6313290	PtrMemberAccess	s -> str		6313271	1					
ANR	6313291	Identifier	s		6313271	0					
ANR	6313292	Identifier	str		6313271	1					
ANR	6313293	IfStatement	if ( len >= s -> allocated_len )		6313271	3					
ANR	6313294	Condition	len >= s -> allocated_len	901:5:18189:18211	6313271	0	True				
ANR	6313295	RelationalExpression	len >= s -> allocated_len		6313271	0		>=			
ANR	6313296	Identifier	len		6313271	0					
ANR	6313297	PtrMemberAccess	s -> allocated_len		6313271	1					
ANR	6313298	Identifier	s		6313271	0					
ANR	6313299	Identifier	allocated_len		6313271	1					
ANR	6313300	CompoundStatement		6:30:78:78	6313271	1					
ANR	6313301	ExpressionStatement	str = tok_str_realloc ( s )	902:2:18218:18243	6313271	0	True				
ANR	6313302	AssignmentExpression	str = tok_str_realloc ( s )		6313271	0		=			
ANR	6313303	Identifier	str		6313271	0					
ANR	6313304	CallExpression	tok_str_realloc ( s )		6313271	1					
ANR	6313305	Callee	tok_str_realloc		6313271	0					
ANR	6313306	Identifier	tok_str_realloc		6313271	0					
ANR	6313307	ArgumentList	s		6313271	1					
ANR	6313308	Argument	s		6313271	0					
ANR	6313309	Identifier	s		6313271	0					
ANR	6313310	ExpressionStatement	str [ len ++ ] = t	904:1:18249:18263	6313271	4	True				
ANR	6313311	AssignmentExpression	str [ len ++ ] = t		6313271	0		=			
ANR	6313312	ArrayIndexing	str [ len ++ ]		6313271	0					
ANR	6313313	Identifier	str		6313271	0					
ANR	6313314	PostIncDecOperationExpression	len ++		6313271	1					
ANR	6313315	Identifier	len		6313271	0					
ANR	6313316	IncDec	++		6313271	1					
ANR	6313317	Identifier	t		6313271	1					
ANR	6313318	ExpressionStatement	s -> len = len	905:1:18266:18278	6313271	5	True				
ANR	6313319	AssignmentExpression	s -> len = len		6313271	0		=			
ANR	6313320	PtrMemberAccess	s -> len		6313271	0					
ANR	6313321	Identifier	s		6313271	0					
ANR	6313322	Identifier	len		6313271	1					
ANR	6313323	Identifier	len		6313271	1					
ANR	6313324	ReturnType	ST_FUNC void		6313271	1					
ANR	6313325	Identifier	tok_str_add		6313271	2					
ANR	6313326	ParameterList	"TokenString * s , int t"		6313271	3					
ANR	6313327	Parameter	TokenString * s	895:25:18112:18125	6313271	0	True				
ANR	6313328	ParameterType	TokenString *		6313271	0					
ANR	6313329	Identifier	s		6313271	1					
ANR	6313330	Parameter	int t	895:41:18128:18132	6313271	1	True				
ANR	6313331	ParameterType	int		6313271	0					
ANR	6313332	Identifier	t		6313271	1					
ANR	6313333	CFGEntryNode	ENTRY		6313271		True				
ANR	6313334	CFGExitNode	EXIT		6313271		True				
ANR	6313335	Symbol	str		6313271						
ANR	6313336	Symbol	s -> len		6313271						
ANR	6313337	Symbol	s		6313271						
ANR	6313338	Symbol	t		6313271						
ANR	6313339	Symbol	len		6313271						
ANR	6313340	Symbol	s -> allocated_len		6313271						
ANR	6313341	Symbol	tok_str_realloc		6313271						
ANR	6313342	Symbol	* str		6313271						
ANR	6313343	Symbol	* s		6313271						
ANR	6313344	Symbol	s -> str		6313271						
ANR	6313345	Function	tok_str_add2	908:0:18283:19745							
ANR	6313346	FunctionDef	"tok_str_add2 (TokenString * s , int t , CValue * cv)"		6313345	0					
ANR	6313347	CompoundStatement		909:0:18343:19745	6313345	0					
ANR	6313348	IdentifierDeclStatement	"int len , * str ;"	910:1:18346:18359	6313345	0	True				
ANR	6313349	IdentifierDecl	len		6313345	0					
ANR	6313350	IdentifierDeclType	int		6313345	0					
ANR	6313351	Identifier	len		6313345	1					
ANR	6313352	IdentifierDecl	* str		6313345	1					
ANR	6313353	IdentifierDeclType	int *		6313345	0					
ANR	6313354	Identifier	str		6313345	1					
ANR	6313355	ExpressionStatement	len = s -> len	912:1:18363:18375	6313345	1	True				
ANR	6313356	AssignmentExpression	len = s -> len		6313345	0		=			
ANR	6313357	Identifier	len		6313345	0					
ANR	6313358	PtrMemberAccess	s -> len		6313345	1					
ANR	6313359	Identifier	s		6313345	0					
ANR	6313360	Identifier	len		6313345	1					
ANR	6313361	ExpressionStatement	str = s -> str	913:1:18378:18390	6313345	2	True				
ANR	6313362	AssignmentExpression	str = s -> str		6313345	0		=			
ANR	6313363	Identifier	str		6313345	0					
ANR	6313364	PtrMemberAccess	s -> str		6313345	1					
ANR	6313365	Identifier	s		6313345	0					
ANR	6313366	Identifier	str		6313345	1					
ANR	6313367	IfStatement	if ( len + TOK_MAX_SIZE > s -> allocated_len )		6313345	3					
ANR	6313368	Condition	len + TOK_MAX_SIZE > s -> allocated_len	916:5:18435:18471	6313345	0	True				
ANR	6313369	RelationalExpression	len + TOK_MAX_SIZE > s -> allocated_len		6313345	0		>			
ANR	6313370	AdditiveExpression	len + TOK_MAX_SIZE		6313345	0		+			
ANR	6313371	Identifier	len		6313345	0					
ANR	6313372	Identifier	TOK_MAX_SIZE		6313345	1					
ANR	6313373	PtrMemberAccess	s -> allocated_len		6313345	1					
ANR	6313374	Identifier	s		6313345	0					
ANR	6313375	Identifier	allocated_len		6313345	1					
ANR	6313376	CompoundStatement		8:44:130:130	6313345	1					
ANR	6313377	ExpressionStatement	str = tok_str_realloc ( s )	917:2:18478:18503	6313345	0	True				
ANR	6313378	AssignmentExpression	str = tok_str_realloc ( s )		6313345	0		=			
ANR	6313379	Identifier	str		6313345	0					
ANR	6313380	CallExpression	tok_str_realloc ( s )		6313345	1					
ANR	6313381	Callee	tok_str_realloc		6313345	0					
ANR	6313382	Identifier	tok_str_realloc		6313345	0					
ANR	6313383	ArgumentList	s		6313345	1					
ANR	6313384	Argument	s		6313345	0					
ANR	6313385	Identifier	s		6313345	0					
ANR	6313386	ExpressionStatement	str [ len ++ ] = t	919:1:18509:18523	6313345	4	True				
ANR	6313387	AssignmentExpression	str [ len ++ ] = t		6313345	0		=			
ANR	6313388	ArrayIndexing	str [ len ++ ]		6313345	0					
ANR	6313389	Identifier	str		6313345	0					
ANR	6313390	PostIncDecOperationExpression	len ++		6313345	1					
ANR	6313391	Identifier	len		6313345	0					
ANR	6313392	IncDec	++		6313345	1					
ANR	6313393	Identifier	t		6313345	1					
ANR	6313394	SwitchStatement	switch ( t )		6313345	5					
ANR	6313395	Condition	t	920:9:18534:18534	6313345	0	True				
ANR	6313396	Identifier	t		6313345	0					
ANR	6313397	CompoundStatement		12:12:193:193	6313345	1					
ANR	6313398	Label	case TOK_CINT :	921:1:18540:18553	6313345	0	True				
ANR	6313399	Identifier	TOK_CINT		6313345	0					
ANR	6313400	Label	case TOK_CUINT :	922:1:18556:18570	6313345	1	True				
ANR	6313401	Identifier	TOK_CUINT		6313345	0					
ANR	6313402	Label	case TOK_CCHAR :	923:1:18573:18587	6313345	2	True				
ANR	6313403	Identifier	TOK_CCHAR		6313345	0					
ANR	6313404	Label	case TOK_LCHAR :	924:1:18590:18604	6313345	3	True				
ANR	6313405	Identifier	TOK_LCHAR		6313345	0					
ANR	6313406	Label	case TOK_CFLOAT :	925:1:18607:18622	6313345	4	True				
ANR	6313407	Identifier	TOK_CFLOAT		6313345	0					
ANR	6313408	Label	case TOK_LINENUM :	926:1:18625:18641	6313345	5	True				
ANR	6313409	Identifier	TOK_LINENUM		6313345	0					
ANR	6313410	ExpressionStatement	str [ len ++ ] = cv -> tab [ 0 ]	927:2:18645:18668	6313345	6	True				
ANR	6313411	AssignmentExpression	str [ len ++ ] = cv -> tab [ 0 ]		6313345	0		=			
ANR	6313412	ArrayIndexing	str [ len ++ ]		6313345	0					
ANR	6313413	Identifier	str		6313345	0					
ANR	6313414	PostIncDecOperationExpression	len ++		6313345	1					
ANR	6313415	Identifier	len		6313345	0					
ANR	6313416	IncDec	++		6313345	1					
ANR	6313417	ArrayIndexing	cv -> tab [ 0 ]		6313345	1					
ANR	6313418	PtrMemberAccess	cv -> tab		6313345	0					
ANR	6313419	Identifier	cv		6313345	0					
ANR	6313420	Identifier	tab		6313345	1					
ANR	6313421	PrimaryExpression	0		6313345	1					
ANR	6313422	BreakStatement	break ;	928:2:18672:18677	6313345	7	True				
ANR	6313423	Label	case TOK_PPNUM :	929:1:18680:18694	6313345	8	True				
ANR	6313424	Identifier	TOK_PPNUM		6313345	0					
ANR	6313425	Label	case TOK_STR :	930:1:18697:18709	6313345	9	True				
ANR	6313426	Identifier	TOK_STR		6313345	0					
ANR	6313427	Label	case TOK_LSTR :	931:1:18712:18725	6313345	10	True				
ANR	6313428	Identifier	TOK_LSTR		6313345	0					
ANR	6313429	CompoundStatement		37:2:683:709	6313345	11					
ANR	6313430	IdentifierDeclStatement	int nb_words ;	933:2:18732:18744	6313345	0	True				
ANR	6313431	IdentifierDecl	nb_words		6313345	0					
ANR	6313432	IdentifierDeclType	int		6313345	0					
ANR	6313433	Identifier	nb_words		6313345	1					
ANR	6313434	ExpressionStatement	nb_words = ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2	935:2:18749:18803	6313345	1	True				
ANR	6313435	AssignmentExpression	nb_words = ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6313345	0		=			
ANR	6313436	Identifier	nb_words		6313345	0					
ANR	6313437	ShiftExpression	( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6313345	1		>>			
ANR	6313438	AdditiveExpression	sizeof ( CString ) + cv -> cstr -> size + 3		6313345	0		+			
ANR	6313439	SizeofExpression	sizeof ( CString )		6313345	0					
ANR	6313440	Sizeof	sizeof		6313345	0					
ANR	6313441	SizeofOperand	CString		6313345	1					
ANR	6313442	AdditiveExpression	cv -> cstr -> size + 3		6313345	1		+			
ANR	6313443	PtrMemberAccess	cv -> cstr -> size		6313345	0					
ANR	6313444	PtrMemberAccess	cv -> cstr		6313345	0					
ANR	6313445	Identifier	cv		6313345	0					
ANR	6313446	Identifier	cstr		6313345	1					
ANR	6313447	Identifier	size		6313345	1					
ANR	6313448	PrimaryExpression	3		6313345	1					
ANR	6313449	PrimaryExpression	2		6313345	1					
ANR	6313450	WhileStatement	while ( ( len + nb_words ) > s -> allocated_len )		6313345	2					
ANR	6313451	Condition	( len + nb_words ) > s -> allocated_len	936:9:18814:18848	6313345	0	True				
ANR	6313452	RelationalExpression	( len + nb_words ) > s -> allocated_len		6313345	0		>			
ANR	6313453	AdditiveExpression	len + nb_words		6313345	0		+			
ANR	6313454	Identifier	len		6313345	0					
ANR	6313455	Identifier	nb_words		6313345	1					
ANR	6313456	PtrMemberAccess	s -> allocated_len		6313345	1					
ANR	6313457	Identifier	s		6313345	0					
ANR	6313458	Identifier	allocated_len		6313345	1					
ANR	6313459	CompoundStatement		28:46:507:507	6313345	1					
ANR	6313460	ExpressionStatement	str = tok_str_realloc ( s )	937:3:18856:18881	6313345	0	True				
ANR	6313461	AssignmentExpression	str = tok_str_realloc ( s )		6313345	0		=			
ANR	6313462	Identifier	str		6313345	0					
ANR	6313463	CallExpression	tok_str_realloc ( s )		6313345	1					
ANR	6313464	Callee	tok_str_realloc		6313345	0					
ANR	6313465	Identifier	tok_str_realloc		6313345	0					
ANR	6313466	ArgumentList	s		6313345	1					
ANR	6313467	Argument	s		6313345	0					
ANR	6313468	Identifier	s		6313345	0					
ANR	6313469	IdentifierDeclStatement	CString cstr = { 0 } ;	939:2:18889:18907	6313345	3	True				
ANR	6313470	IdentifierDecl	cstr = { 0 }		6313345	0					
ANR	6313471	IdentifierDeclType	CString		6313345	0					
ANR	6313472	Identifier	cstr		6313345	1					
ANR	6313473	AssignmentExpression	cstr = { 0 }		6313345	2		=			
ANR	6313474	Identifier	cstr		6313345	0					
ANR	6313475	InitializerList	0		6313345	1					
ANR	6313476	PrimaryExpression	0		6313345	0					
ANR	6313477	ExpressionStatement	cstr . data = NULL	940:2:18911:18927	6313345	4	True				
ANR	6313478	AssignmentExpression	cstr . data = NULL		6313345	0		=			
ANR	6313479	MemberAccess	cstr . data		6313345	0					
ANR	6313480	Identifier	cstr		6313345	0					
ANR	6313481	Identifier	data		6313345	1					
ANR	6313482	Identifier	NULL		6313345	1					
ANR	6313483	ExpressionStatement	cstr . size = cv -> cstr -> size	941:2:18931:18957	6313345	5	True				
ANR	6313484	AssignmentExpression	cstr . size = cv -> cstr -> size		6313345	0		=			
ANR	6313485	MemberAccess	cstr . size		6313345	0					
ANR	6313486	Identifier	cstr		6313345	0					
ANR	6313487	Identifier	size		6313345	1					
ANR	6313488	PtrMemberAccess	cv -> cstr -> size		6313345	1					
ANR	6313489	PtrMemberAccess	cv -> cstr		6313345	0					
ANR	6313490	Identifier	cv		6313345	0					
ANR	6313491	Identifier	cstr		6313345	1					
ANR	6313492	Identifier	size		6313345	1					
ANR	6313493	ExpressionStatement	cstr . data_allocated = NULL	942:2:18961:18987	6313345	6	True				
ANR	6313494	AssignmentExpression	cstr . data_allocated = NULL		6313345	0		=			
ANR	6313495	MemberAccess	cstr . data_allocated		6313345	0					
ANR	6313496	Identifier	cstr		6313345	0					
ANR	6313497	Identifier	data_allocated		6313345	1					
ANR	6313498	Identifier	NULL		6313345	1					
ANR	6313499	ExpressionStatement	cstr . size_allocated = cstr . size	943:2:18991:19022	6313345	7	True				
ANR	6313500	AssignmentExpression	cstr . size_allocated = cstr . size		6313345	0		=			
ANR	6313501	MemberAccess	cstr . size_allocated		6313345	0					
ANR	6313502	Identifier	cstr		6313345	0					
ANR	6313503	Identifier	size_allocated		6313345	1					
ANR	6313504	MemberAccess	cstr . size		6313345	1					
ANR	6313505	Identifier	cstr		6313345	0					
ANR	6313506	Identifier	size		6313345	1					
ANR	6313507	IdentifierDeclStatement	ut8 * p = ( ut8 * ) ( str + len ) ;	945:2:19027:19053	6313345	8	True				
ANR	6313508	IdentifierDecl	* p = ( ut8 * ) ( str + len )		6313345	0					
ANR	6313509	IdentifierDeclType	ut8 *		6313345	0					
ANR	6313510	Identifier	p		6313345	1					
ANR	6313511	AssignmentExpression	* p = ( ut8 * ) ( str + len )		6313345	2		=			
ANR	6313512	Identifier	p		6313345	0					
ANR	6313513	CastExpression	( ut8 * ) ( str + len )		6313345	1					
ANR	6313514	CastTarget	ut8 *		6313345	0					
ANR	6313515	AdditiveExpression	str + len		6313345	1		+			
ANR	6313516	Identifier	str		6313345	0					
ANR	6313517	Identifier	len		6313345	1					
ANR	6313518	ExpressionStatement	"memcpy ( p , & cstr , sizeof ( CString ) )"	946:2:19057:19092	6313345	9	True				
ANR	6313519	CallExpression	"memcpy ( p , & cstr , sizeof ( CString ) )"		6313345	0					
ANR	6313520	Callee	memcpy		6313345	0					
ANR	6313521	Identifier	memcpy		6313345	0					
ANR	6313522	ArgumentList	p		6313345	1					
ANR	6313523	Argument	p		6313345	0					
ANR	6313524	Identifier	p		6313345	0					
ANR	6313525	Argument	& cstr		6313345	1					
ANR	6313526	UnaryOperationExpression	& cstr		6313345	0					
ANR	6313527	UnaryOperator	&		6313345	0					
ANR	6313528	Identifier	cstr		6313345	1					
ANR	6313529	Argument	sizeof ( CString )		6313345	2					
ANR	6313530	SizeofExpression	sizeof ( CString )		6313345	0					
ANR	6313531	Sizeof	sizeof		6313345	0					
ANR	6313532	SizeofOperand	CString		6313345	1					
ANR	6313533	ExpressionStatement	"memcpy ( p + sizeof ( CString ) , cv -> cstr -> data , cstr . size )"	947:2:19096:19155	6313345	10	True				
ANR	6313534	CallExpression	"memcpy ( p + sizeof ( CString ) , cv -> cstr -> data , cstr . size )"		6313345	0					
ANR	6313535	Callee	memcpy		6313345	0					
ANR	6313536	Identifier	memcpy		6313345	0					
ANR	6313537	ArgumentList	p + sizeof ( CString )		6313345	1					
ANR	6313538	Argument	p + sizeof ( CString )		6313345	0					
ANR	6313539	AdditiveExpression	p + sizeof ( CString )		6313345	0		+			
ANR	6313540	Identifier	p		6313345	0					
ANR	6313541	SizeofExpression	sizeof ( CString )		6313345	1					
ANR	6313542	Sizeof	sizeof		6313345	0					
ANR	6313543	SizeofOperand	CString		6313345	1					
ANR	6313544	Argument	cv -> cstr -> data		6313345	1					
ANR	6313545	PtrMemberAccess	cv -> cstr -> data		6313345	0					
ANR	6313546	PtrMemberAccess	cv -> cstr		6313345	0					
ANR	6313547	Identifier	cv		6313345	0					
ANR	6313548	Identifier	cstr		6313345	1					
ANR	6313549	Identifier	data		6313345	1					
ANR	6313550	Argument	cstr . size		6313345	2					
ANR	6313551	MemberAccess	cstr . size		6313345	0					
ANR	6313552	Identifier	cstr		6313345	0					
ANR	6313553	Identifier	size		6313345	1					
ANR	6313554	ExpressionStatement	len += nb_words	949:2:19159:19174	6313345	11	True				
ANR	6313555	AssignmentExpression	len += nb_words		6313345	0		+=			
ANR	6313556	Identifier	len		6313345	0					
ANR	6313557	Identifier	nb_words		6313345	1					
ANR	6313558	BreakStatement	break ;	951:1:19180:19185	6313345	12	True				
ANR	6313559	Label	case TOK_CDOUBLE :	952:1:19188:19204	6313345	13	True				
ANR	6313560	Identifier	TOK_CDOUBLE		6313345	0					
ANR	6313561	Label	case TOK_CLLONG :	953:1:19207:19222	6313345	14	True				
ANR	6313562	Identifier	TOK_CLLONG		6313345	0					
ANR	6313563	Label	case TOK_CULLONG :	954:1:19225:19241	6313345	15	True				
ANR	6313564	Identifier	TOK_CULLONG		6313345	0					
ANR	6313565	Label	case TOK_CLDOUBLE :	956:1:19266:19283	6313345	16	True				
ANR	6313566	Identifier	TOK_CLDOUBLE		6313345	0					
ANR	6313567	ExpressionStatement	str [ len ++ ] = cv -> tab [ 0 ]	958:2:19294:19317	6313345	17	True				
ANR	6313568	AssignmentExpression	str [ len ++ ] = cv -> tab [ 0 ]		6313345	0		=			
ANR	6313569	ArrayIndexing	str [ len ++ ]		6313345	0					
ANR	6313570	Identifier	str		6313345	0					
ANR	6313571	PostIncDecOperationExpression	len ++		6313345	1					
ANR	6313572	Identifier	len		6313345	0					
ANR	6313573	IncDec	++		6313345	1					
ANR	6313574	ArrayIndexing	cv -> tab [ 0 ]		6313345	1					
ANR	6313575	PtrMemberAccess	cv -> tab		6313345	0					
ANR	6313576	Identifier	cv		6313345	0					
ANR	6313577	Identifier	tab		6313345	1					
ANR	6313578	PrimaryExpression	0		6313345	1					
ANR	6313579	ExpressionStatement	str [ len ++ ] = cv -> tab [ 1 ]	959:2:19321:19344	6313345	18	True				
ANR	6313580	AssignmentExpression	str [ len ++ ] = cv -> tab [ 1 ]		6313345	0		=			
ANR	6313581	ArrayIndexing	str [ len ++ ]		6313345	0					
ANR	6313582	Identifier	str		6313345	0					
ANR	6313583	PostIncDecOperationExpression	len ++		6313345	1					
ANR	6313584	Identifier	len		6313345	0					
ANR	6313585	IncDec	++		6313345	1					
ANR	6313586	ArrayIndexing	cv -> tab [ 1 ]		6313345	1					
ANR	6313587	PtrMemberAccess	cv -> tab		6313345	0					
ANR	6313588	Identifier	cv		6313345	0					
ANR	6313589	Identifier	tab		6313345	1					
ANR	6313590	PrimaryExpression	1		6313345	1					
ANR	6313591	BreakStatement	break ;	960:2:19348:19353	6313345	19	True				
ANR	6313592	Label	case TOK_CLDOUBLE :	962:1:19379:19396	6313345	20	True				
ANR	6313593	Identifier	TOK_CLDOUBLE		6313345	0					
ANR	6313594	ExpressionStatement	str [ len ++ ] = cv -> tab [ 0 ]	963:2:19400:19423	6313345	21	True				
ANR	6313595	AssignmentExpression	str [ len ++ ] = cv -> tab [ 0 ]		6313345	0		=			
ANR	6313596	ArrayIndexing	str [ len ++ ]		6313345	0					
ANR	6313597	Identifier	str		6313345	0					
ANR	6313598	PostIncDecOperationExpression	len ++		6313345	1					
ANR	6313599	Identifier	len		6313345	0					
ANR	6313600	IncDec	++		6313345	1					
ANR	6313601	ArrayIndexing	cv -> tab [ 0 ]		6313345	1					
ANR	6313602	PtrMemberAccess	cv -> tab		6313345	0					
ANR	6313603	Identifier	cv		6313345	0					
ANR	6313604	Identifier	tab		6313345	1					
ANR	6313605	PrimaryExpression	0		6313345	1					
ANR	6313606	ExpressionStatement	str [ len ++ ] = cv -> tab [ 1 ]	964:2:19427:19450	6313345	22	True				
ANR	6313607	AssignmentExpression	str [ len ++ ] = cv -> tab [ 1 ]		6313345	0		=			
ANR	6313608	ArrayIndexing	str [ len ++ ]		6313345	0					
ANR	6313609	Identifier	str		6313345	0					
ANR	6313610	PostIncDecOperationExpression	len ++		6313345	1					
ANR	6313611	Identifier	len		6313345	0					
ANR	6313612	IncDec	++		6313345	1					
ANR	6313613	ArrayIndexing	cv -> tab [ 1 ]		6313345	1					
ANR	6313614	PtrMemberAccess	cv -> tab		6313345	0					
ANR	6313615	Identifier	cv		6313345	0					
ANR	6313616	Identifier	tab		6313345	1					
ANR	6313617	PrimaryExpression	1		6313345	1					
ANR	6313618	ExpressionStatement	str [ len ++ ] = cv -> tab [ 2 ]	965:2:19454:19477	6313345	23	True				
ANR	6313619	AssignmentExpression	str [ len ++ ] = cv -> tab [ 2 ]		6313345	0		=			
ANR	6313620	ArrayIndexing	str [ len ++ ]		6313345	0					
ANR	6313621	Identifier	str		6313345	0					
ANR	6313622	PostIncDecOperationExpression	len ++		6313345	1					
ANR	6313623	Identifier	len		6313345	0					
ANR	6313624	IncDec	++		6313345	1					
ANR	6313625	ArrayIndexing	cv -> tab [ 2 ]		6313345	1					
ANR	6313626	PtrMemberAccess	cv -> tab		6313345	0					
ANR	6313627	Identifier	cv		6313345	0					
ANR	6313628	Identifier	tab		6313345	1					
ANR	6313629	PrimaryExpression	2		6313345	1					
ANR	6313630	BreakStatement	break ;	975:2:19701:19706	6313345	24	True				
ANR	6313631	Label	default :	976:1:19709:19716	6313345	25	True				
ANR	6313632	Identifier	default		6313345	0					
ANR	6313633	BreakStatement	break ;	977:2:19720:19725	6313345	26	True				
ANR	6313634	ExpressionStatement	s -> len = len	979:1:19731:19743	6313345	6	True				
ANR	6313635	AssignmentExpression	s -> len = len		6313345	0		=			
ANR	6313636	PtrMemberAccess	s -> len		6313345	0					
ANR	6313637	Identifier	s		6313345	0					
ANR	6313638	Identifier	len		6313345	1					
ANR	6313639	Identifier	len		6313345	1					
ANR	6313640	ReturnType	static void		6313345	1					
ANR	6313641	Identifier	tok_str_add2		6313345	2					
ANR	6313642	ParameterList	"TokenString * s , int t , CValue * cv"		6313345	3					
ANR	6313643	Parameter	TokenString * s	908:25:18308:18321	6313345	0	True				
ANR	6313644	ParameterType	TokenString *		6313345	0					
ANR	6313645	Identifier	s		6313345	1					
ANR	6313646	Parameter	int t	908:41:18324:18328	6313345	1	True				
ANR	6313647	ParameterType	int		6313345	0					
ANR	6313648	Identifier	t		6313345	1					
ANR	6313649	Parameter	CValue * cv	908:48:18331:18340	6313345	2	True				
ANR	6313650	ParameterType	CValue *		6313345	0					
ANR	6313651	Identifier	cv		6313345	1					
ANR	6313652	CFGEntryNode	ENTRY		6313345		True				
ANR	6313653	CFGExitNode	EXIT		6313345		True				
ANR	6313654	Symbol	cstr		6313345						
ANR	6313655	Symbol	s -> len		6313345						
ANR	6313656	Symbol	cv -> cstr -> data		6313345						
ANR	6313657	Symbol	TOK_MAX_SIZE		6313345						
ANR	6313658	Symbol	* cv -> cstr		6313345						
ANR	6313659	Symbol	cstr . size		6313345						
ANR	6313660	Symbol	len		6313345						
ANR	6313661	Symbol	tok_str_realloc		6313345						
ANR	6313662	Symbol	* str		6313345						
ANR	6313663	Symbol	* * cv		6313345						
ANR	6313664	Symbol	cv -> cstr		6313345						
ANR	6313665	Symbol	nb_words		6313345						
ANR	6313666	Symbol	cstr . data		6313345						
ANR	6313667	Symbol	& cstr		6313345						
ANR	6313668	Symbol	NULL		6313345						
ANR	6313669	Symbol	s -> allocated_len		6313345						
ANR	6313670	Symbol	cstr . size_allocated		6313345						
ANR	6313671	Symbol	cv -> cstr -> size		6313345						
ANR	6313672	Symbol	str		6313345						
ANR	6313673	Symbol	p		6313345						
ANR	6313674	Symbol	s		6313345						
ANR	6313675	Symbol	cv		6313345						
ANR	6313676	Symbol	t		6313345						
ANR	6313677	Symbol	* cv		6313345						
ANR	6313678	Symbol	cstr . data_allocated		6313345						
ANR	6313679	Symbol	* s		6313345						
ANR	6313680	Symbol	s -> str		6313345						
ANR	6313681	Symbol	* cv -> tab		6313345						
ANR	6313682	Symbol	cv -> tab		6313345						
ANR	6313683	Function	tok_str_add_tok	983:0:19802:20076							
ANR	6313684	FunctionDef	tok_str_add_tok (TokenString * s)		6313683	0					
ANR	6313685	CompoundStatement		984:0:19847:20076	6313683	0					
ANR	6313686	IdentifierDeclStatement	CValue cval ;	985:1:19850:19861	6313683	0	True				
ANR	6313687	IdentifierDecl	cval		6313683	0					
ANR	6313688	IdentifierDeclType	CValue		6313683	0					
ANR	6313689	Identifier	cval		6313683	1					
ANR	6313690	IfStatement	if ( file -> line_num != s -> last_line_num )		6313683	1					
ANR	6313691	Condition	file -> line_num != s -> last_line_num	988:5:19898:19931	6313683	0	True				
ANR	6313692	EqualityExpression	file -> line_num != s -> last_line_num		6313683	0		!=			
ANR	6313693	PtrMemberAccess	file -> line_num		6313683	0					
ANR	6313694	Identifier	file		6313683	0					
ANR	6313695	Identifier	line_num		6313683	1					
ANR	6313696	PtrMemberAccess	s -> last_line_num		6313683	1					
ANR	6313697	Identifier	s		6313683	0					
ANR	6313698	Identifier	last_line_num		6313683	1					
ANR	6313699	CompoundStatement		5:41:86:86	6313683	1					
ANR	6313700	ExpressionStatement	s -> last_line_num = file -> line_num	989:2:19938:19971	6313683	0	True				
ANR	6313701	AssignmentExpression	s -> last_line_num = file -> line_num		6313683	0		=			
ANR	6313702	PtrMemberAccess	s -> last_line_num		6313683	0					
ANR	6313703	Identifier	s		6313683	0					
ANR	6313704	Identifier	last_line_num		6313683	1					
ANR	6313705	PtrMemberAccess	file -> line_num		6313683	1					
ANR	6313706	Identifier	file		6313683	0					
ANR	6313707	Identifier	line_num		6313683	1					
ANR	6313708	ExpressionStatement	cval . i = s -> last_line_num	990:2:19975:20000	6313683	1	True				
ANR	6313709	AssignmentExpression	cval . i = s -> last_line_num		6313683	0		=			
ANR	6313710	MemberAccess	cval . i		6313683	0					
ANR	6313711	Identifier	cval		6313683	0					
ANR	6313712	Identifier	i		6313683	1					
ANR	6313713	PtrMemberAccess	s -> last_line_num		6313683	1					
ANR	6313714	Identifier	s		6313683	0					
ANR	6313715	Identifier	last_line_num		6313683	1					
ANR	6313716	ExpressionStatement	"tok_str_add2 ( s , TOK_LINENUM , & cval )"	991:2:20004:20040	6313683	2	True				
ANR	6313717	CallExpression	"tok_str_add2 ( s , TOK_LINENUM , & cval )"		6313683	0					
ANR	6313718	Callee	tok_str_add2		6313683	0					
ANR	6313719	Identifier	tok_str_add2		6313683	0					
ANR	6313720	ArgumentList	s		6313683	1					
ANR	6313721	Argument	s		6313683	0					
ANR	6313722	Identifier	s		6313683	0					
ANR	6313723	Argument	TOK_LINENUM		6313683	1					
ANR	6313724	Identifier	TOK_LINENUM		6313683	0					
ANR	6313725	Argument	& cval		6313683	2					
ANR	6313726	UnaryOperationExpression	& cval		6313683	0					
ANR	6313727	UnaryOperator	&		6313683	0					
ANR	6313728	Identifier	cval		6313683	1					
ANR	6313729	ExpressionStatement	"tok_str_add2 ( s , tok , & tokc )"	993:1:20046:20074	6313683	2	True				
ANR	6313730	CallExpression	"tok_str_add2 ( s , tok , & tokc )"		6313683	0					
ANR	6313731	Callee	tok_str_add2		6313683	0					
ANR	6313732	Identifier	tok_str_add2		6313683	0					
ANR	6313733	ArgumentList	s		6313683	1					
ANR	6313734	Argument	s		6313683	0					
ANR	6313735	Identifier	s		6313683	0					
ANR	6313736	Argument	tok		6313683	1					
ANR	6313737	Identifier	tok		6313683	0					
ANR	6313738	Argument	& tokc		6313683	2					
ANR	6313739	UnaryOperationExpression	& tokc		6313683	0					
ANR	6313740	UnaryOperator	&		6313683	0					
ANR	6313741	Identifier	tokc		6313683	1					
ANR	6313742	ReturnType	ST_FUNC void		6313683	1					
ANR	6313743	Identifier	tok_str_add_tok		6313683	2					
ANR	6313744	ParameterList	TokenString * s		6313683	3					
ANR	6313745	Parameter	TokenString * s	983:29:19831:19844	6313683	0	True				
ANR	6313746	ParameterType	TokenString *		6313683	0					
ANR	6313747	Identifier	s		6313683	1					
ANR	6313748	CFGEntryNode	ENTRY		6313683		True				
ANR	6313749	CFGExitNode	EXIT		6313683		True				
ANR	6313750	Symbol	cval		6313683						
ANR	6313751	Symbol	s -> last_line_num		6313683						
ANR	6313752	Symbol	& cval		6313683						
ANR	6313753	Symbol	tok		6313683						
ANR	6313754	Symbol	s		6313683						
ANR	6313755	Symbol	file		6313683						
ANR	6313756	Symbol	TOK_LINENUM		6313683						
ANR	6313757	Symbol	file -> line_num		6313683						
ANR	6313758	Symbol	* file		6313683						
ANR	6313759	Symbol	& tokc		6313683						
ANR	6313760	Symbol	* s		6313683						
ANR	6313761	Symbol	cval . i		6313683						
ANR	6313762	Function	TOK_GET	998:0:20206:20996							
ANR	6313763	FunctionDef	"TOK_GET (int * t , const int * * pp , CValue * cv)"		6313762	0					
ANR	6313764	CompoundStatement		999:0:20269:20996	6313762	0					
ANR	6313765	IdentifierDeclStatement	const int * p = * pp ;	1000:1:20272:20290	6313762	0	True				
ANR	6313766	IdentifierDecl	* p = * pp		6313762	0					
ANR	6313767	IdentifierDeclType	const int *		6313762	0					
ANR	6313768	Identifier	p		6313762	1					
ANR	6313769	AssignmentExpression	* p = * pp		6313762	2		=			
ANR	6313770	Identifier	p		6313762	0					
ANR	6313771	UnaryOperationExpression	* pp		6313762	1					
ANR	6313772	UnaryOperator	*		6313762	0					
ANR	6313773	Identifier	pp		6313762	1					
ANR	6313774	IdentifierDeclStatement	"int n , * tab ;"	1001:1:20293:20304	6313762	1	True				
ANR	6313775	IdentifierDecl	n		6313762	0					
ANR	6313776	IdentifierDeclType	int		6313762	0					
ANR	6313777	Identifier	n		6313762	1					
ANR	6313778	IdentifierDecl	* tab		6313762	1					
ANR	6313779	IdentifierDeclType	int *		6313762	0					
ANR	6313780	Identifier	tab		6313762	1					
ANR	6313781	ExpressionStatement	tab = cv -> tab	1003:1:20308:20321	6313762	2	True				
ANR	6313782	AssignmentExpression	tab = cv -> tab		6313762	0		=			
ANR	6313783	Identifier	tab		6313762	0					
ANR	6313784	PtrMemberAccess	cv -> tab		6313762	1					
ANR	6313785	Identifier	cv		6313762	0					
ANR	6313786	Identifier	tab		6313762	1					
ANR	6313787	SwitchStatement	switch ( * t = * p ++ )		6313762	3					
ANR	6313788	Condition	* t = * p ++	1004:9:20332:20340	6313762	0	True				
ANR	6313789	AssignmentExpression	* t = * p ++		6313762	0		=			
ANR	6313790	UnaryOperationExpression	* t		6313762	0					
ANR	6313791	UnaryOperator	*		6313762	0					
ANR	6313792	Identifier	t		6313762	1					
ANR	6313793	UnaryOperationExpression	* p ++		6313762	1					
ANR	6313794	UnaryOperator	*		6313762	0					
ANR	6313795	PostIncDecOperationExpression	p ++		6313762	1					
ANR	6313796	Identifier	p		6313762	0					
ANR	6313797	IncDec	++		6313762	1					
ANR	6313798	CompoundStatement		6:20:73:73	6313762	1					
ANR	6313799	Label	case TOK_CINT :	1005:1:20346:20359	6313762	0	True				
ANR	6313800	Identifier	TOK_CINT		6313762	0					
ANR	6313801	Label	case TOK_CUINT :	1006:1:20362:20376	6313762	1	True				
ANR	6313802	Identifier	TOK_CUINT		6313762	0					
ANR	6313803	Label	case TOK_CCHAR :	1007:1:20379:20393	6313762	2	True				
ANR	6313804	Identifier	TOK_CCHAR		6313762	0					
ANR	6313805	Label	case TOK_LCHAR :	1008:1:20396:20410	6313762	3	True				
ANR	6313806	Identifier	TOK_LCHAR		6313762	0					
ANR	6313807	Label	case TOK_CFLOAT :	1009:1:20413:20428	6313762	4	True				
ANR	6313808	Identifier	TOK_CFLOAT		6313762	0					
ANR	6313809	Label	case TOK_LINENUM :	1010:1:20431:20447	6313762	5	True				
ANR	6313810	Identifier	TOK_LINENUM		6313762	0					
ANR	6313811	ExpressionStatement	tab [ 0 ] = * p ++	1011:2:20451:20464	6313762	6	True				
ANR	6313812	AssignmentExpression	tab [ 0 ] = * p ++		6313762	0		=			
ANR	6313813	ArrayIndexing	tab [ 0 ]		6313762	0					
ANR	6313814	Identifier	tab		6313762	0					
ANR	6313815	PrimaryExpression	0		6313762	1					
ANR	6313816	UnaryOperationExpression	* p ++		6313762	1					
ANR	6313817	UnaryOperator	*		6313762	0					
ANR	6313818	PostIncDecOperationExpression	p ++		6313762	1					
ANR	6313819	Identifier	p		6313762	0					
ANR	6313820	IncDec	++		6313762	1					
ANR	6313821	BreakStatement	break ;	1012:2:20468:20473	6313762	7	True				
ANR	6313822	Label	case TOK_STR :	1013:1:20476:20488	6313762	8	True				
ANR	6313823	Identifier	TOK_STR		6313762	0					
ANR	6313824	Label	case TOK_LSTR :	1014:1:20491:20504	6313762	9	True				
ANR	6313825	Identifier	TOK_LSTR		6313762	0					
ANR	6313826	Label	case TOK_PPNUM :	1015:1:20507:20521	6313762	10	True				
ANR	6313827	Identifier	TOK_PPNUM		6313762	0					
ANR	6313828	ExpressionStatement	cv -> cstr = ( CString * ) p	1016:2:20525:20549	6313762	11	True				
ANR	6313829	AssignmentExpression	cv -> cstr = ( CString * ) p		6313762	0		=			
ANR	6313830	PtrMemberAccess	cv -> cstr		6313762	0					
ANR	6313831	Identifier	cv		6313762	0					
ANR	6313832	Identifier	cstr		6313762	1					
ANR	6313833	CastExpression	( CString * ) p		6313762	1					
ANR	6313834	CastTarget	CString *		6313762	0					
ANR	6313835	Identifier	p		6313762	1					
ANR	6313836	ExpressionStatement	cv -> cstr -> data = ( char * ) p + sizeof ( CString )	1017:2:20553:20598	6313762	12	True				
ANR	6313837	AssignmentExpression	cv -> cstr -> data = ( char * ) p + sizeof ( CString )		6313762	0		=			
ANR	6313838	PtrMemberAccess	cv -> cstr -> data		6313762	0					
ANR	6313839	PtrMemberAccess	cv -> cstr		6313762	0					
ANR	6313840	Identifier	cv		6313762	0					
ANR	6313841	Identifier	cstr		6313762	1					
ANR	6313842	Identifier	data		6313762	1					
ANR	6313843	AdditiveExpression	( char * ) p + sizeof ( CString )		6313762	1		+			
ANR	6313844	CastExpression	( char * ) p		6313762	0					
ANR	6313845	CastTarget	char *		6313762	0					
ANR	6313846	Identifier	p		6313762	1					
ANR	6313847	SizeofExpression	sizeof ( CString )		6313762	1					
ANR	6313848	Sizeof	sizeof		6313762	0					
ANR	6313849	SizeofOperand	CString		6313762	1					
ANR	6313850	ExpressionStatement	p += ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2	1018:2:20602:20650	6313762	13	True				
ANR	6313851	AssignmentExpression	p += ( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6313762	0		+=			
ANR	6313852	Identifier	p		6313762	0					
ANR	6313853	ShiftExpression	( sizeof ( CString ) + cv -> cstr -> size + 3 ) >> 2		6313762	1		>>			
ANR	6313854	AdditiveExpression	sizeof ( CString ) + cv -> cstr -> size + 3		6313762	0		+			
ANR	6313855	SizeofExpression	sizeof ( CString )		6313762	0					
ANR	6313856	Sizeof	sizeof		6313762	0					
ANR	6313857	SizeofOperand	CString		6313762	1					
ANR	6313858	AdditiveExpression	cv -> cstr -> size + 3		6313762	1		+			
ANR	6313859	PtrMemberAccess	cv -> cstr -> size		6313762	0					
ANR	6313860	PtrMemberAccess	cv -> cstr		6313762	0					
ANR	6313861	Identifier	cv		6313762	0					
ANR	6313862	Identifier	cstr		6313762	1					
ANR	6313863	Identifier	size		6313762	1					
ANR	6313864	PrimaryExpression	3		6313762	1					
ANR	6313865	PrimaryExpression	2		6313762	1					
ANR	6313866	BreakStatement	break ;	1019:2:20654:20659	6313762	14	True				
ANR	6313867	Label	case TOK_CDOUBLE :	1020:1:20662:20678	6313762	15	True				
ANR	6313868	Identifier	TOK_CDOUBLE		6313762	0					
ANR	6313869	Label	case TOK_CLLONG :	1021:1:20681:20696	6313762	16	True				
ANR	6313870	Identifier	TOK_CLLONG		6313762	0					
ANR	6313871	Label	case TOK_CULLONG :	1022:1:20699:20715	6313762	17	True				
ANR	6313872	Identifier	TOK_CULLONG		6313762	0					
ANR	6313873	ExpressionStatement	n = 2	1023:2:20719:20724	6313762	18	True				
ANR	6313874	AssignmentExpression	n = 2		6313762	0		=			
ANR	6313875	Identifier	n		6313762	0					
ANR	6313876	PrimaryExpression	2		6313762	1					
ANR	6313877	GotoStatement	goto copy ;	1024:2:20728:20737	6313762	19	True				
ANR	6313878	Identifier	copy		6313762	0					
ANR	6313879	Label	case TOK_CLDOUBLE :	1025:1:20740:20757	6313762	20	True				
ANR	6313880	Identifier	TOK_CLDOUBLE		6313762	0					
ANR	6313881	ExpressionStatement	n = 4	1027:2:20784:20789	6313762	21	True				
ANR	6313882	AssignmentExpression	n = 4		6313762	0		=			
ANR	6313883	Identifier	n		6313762	0					
ANR	6313884	PrimaryExpression	4		6313762	1					
ANR	6313885	Label	copy :	1035:0:20907:20911	6313762	22	True				
ANR	6313886	Identifier	copy		6313762	0					
ANR	6313887	DoStatement	do		6313762	23					
ANR	6313888	CompoundStatement		38:5:648:648	6313762	0					
ANR	6313889	ExpressionStatement	* tab ++ = * p ++	1037:3:20923:20936	6313762	0	True				
ANR	6313890	AssignmentExpression	* tab ++ = * p ++		6313762	0		=			
ANR	6313891	UnaryOperationExpression	* tab ++		6313762	0					
ANR	6313892	UnaryOperator	*		6313762	0					
ANR	6313893	PostIncDecOperationExpression	tab ++		6313762	1					
ANR	6313894	Identifier	tab		6313762	0					
ANR	6313895	IncDec	++		6313762	1					
ANR	6313896	UnaryOperationExpression	* p ++		6313762	1					
ANR	6313897	UnaryOperator	*		6313762	0					
ANR	6313898	PostIncDecOperationExpression	p ++		6313762	1					
ANR	6313899	Identifier	p		6313762	0					
ANR	6313900	IncDec	++		6313762	1					
ANR	6313901	Condition	-- n	1038:11:20949:20951	6313762	1	True				
ANR	6313902	UnaryExpression	-- n		6313762	0					
ANR	6313903	IncDec	--		6313762	0					
ANR	6313904	Identifier	n		6313762	1					
ANR	6313905	BreakStatement	break ;	1039:2:20957:20962	6313762	24	True				
ANR	6313906	Label	default :	1040:1:20965:20972	6313762	25	True				
ANR	6313907	Identifier	default		6313762	0					
ANR	6313908	BreakStatement	break ;	1041:2:20976:20981	6313762	26	True				
ANR	6313909	ExpressionStatement	* pp = p	1043:1:20987:20994	6313762	4	True				
ANR	6313910	AssignmentExpression	* pp = p		6313762	0		=			
ANR	6313911	UnaryOperationExpression	* pp		6313762	0					
ANR	6313912	UnaryOperator	*		6313762	0					
ANR	6313913	Identifier	pp		6313762	1					
ANR	6313914	Identifier	p		6313762	1					
ANR	6313915	ReturnType	static inline void		6313762	1					
ANR	6313916	Identifier	TOK_GET		6313762	2					
ANR	6313917	ParameterList	"int * t , const int * * pp , CValue * cv"		6313762	3					
ANR	6313918	Parameter	int * t	998:27:20233:20238	6313762	0	True				
ANR	6313919	ParameterType	int *		6313762	0					
ANR	6313920	Identifier	t		6313762	1					
ANR	6313921	Parameter	const int * * pp	998:35:20241:20254	6313762	1	True				
ANR	6313922	ParameterType	const int * *		6313762	0					
ANR	6313923	Identifier	pp		6313762	1					
ANR	6313924	Parameter	CValue * cv	998:51:20257:20266	6313762	2	True				
ANR	6313925	ParameterType	CValue *		6313762	0					
ANR	6313926	Identifier	cv		6313762	1					
ANR	6313927	CFGEntryNode	ENTRY		6313762		True				
ANR	6313928	CFGExitNode	EXIT		6313762		True				
ANR	6313929	Symbol	pp		6313762						
ANR	6313930	Symbol	cv -> cstr -> data		6313762						
ANR	6313931	Symbol	* pp		6313762						
ANR	6313932	Symbol	* p ++		6313762						
ANR	6313933	Symbol	n		6313762						
ANR	6313934	Symbol	* cv -> cstr		6313762						
ANR	6313935	Symbol	cv -> cstr -> size		6313762						
ANR	6313936	Symbol	* tab ++		6313762						
ANR	6313937	Symbol	p		6313762						
ANR	6313938	Symbol	cv		6313762						
ANR	6313939	Symbol	t		6313762						
ANR	6313940	Symbol	tab		6313762						
ANR	6313941	Symbol	* cv		6313762						
ANR	6313942	Symbol	* * cv		6313762						
ANR	6313943	Symbol	cv -> tab		6313762						
ANR	6313944	Symbol	* t		6313762						
ANR	6313945	Symbol	cv -> cstr		6313762						
ANR	6313946	Symbol	* tab		6313762						
ANR	6313947	Function	macro_is_equal	1046:0:20999:21313							
ANR	6313948	FunctionDef	"macro_is_equal (const int * a , const int * b)"		6313947	0					
ANR	6313949	CompoundStatement		1047:0:21053:21313	6313947	0					
ANR	6313950	IdentifierDeclStatement	char buf [ STRING_MAX_SIZE + 1 ] ;	1048:1:21056:21085	6313947	0	True				
ANR	6313951	IdentifierDecl	buf [ STRING_MAX_SIZE + 1 ]		6313947	0					
ANR	6313952	IdentifierDeclType	char [ STRING_MAX_SIZE + 1 ]		6313947	0					
ANR	6313953	Identifier	buf		6313947	1					
ANR	6313954	AdditiveExpression	STRING_MAX_SIZE + 1		6313947	2		+			
ANR	6313955	Identifier	STRING_MAX_SIZE		6313947	0					
ANR	6313956	PrimaryExpression	1		6313947	1					
ANR	6313957	IdentifierDeclStatement	CValue cv ;	1049:1:21088:21097	6313947	1	True				
ANR	6313958	IdentifierDecl	cv		6313947	0					
ANR	6313959	IdentifierDeclType	CValue		6313947	0					
ANR	6313960	Identifier	cv		6313947	1					
ANR	6313961	IdentifierDeclStatement	int t ;	1050:1:21100:21105	6313947	2	True				
ANR	6313962	IdentifierDecl	t		6313947	0					
ANR	6313963	IdentifierDeclType	int		6313947	0					
ANR	6313964	Identifier	t		6313947	1					
ANR	6313965	WhileStatement	while ( * a && * b )		6313947	3					
ANR	6313966	Condition	* a && * b	1051:8:21115:21122	6313947	0	True				
ANR	6313967	AndExpression	* a && * b		6313947	0		&&			
ANR	6313968	UnaryOperationExpression	* a		6313947	0					
ANR	6313969	UnaryOperator	*		6313947	0					
ANR	6313970	Identifier	a		6313947	1					
ANR	6313971	UnaryOperationExpression	* b		6313947	1					
ANR	6313972	UnaryOperator	*		6313947	0					
ANR	6313973	Identifier	b		6313947	1					
ANR	6313974	CompoundStatement		5:18:71:71	6313947	1					
ANR	6313975	ExpressionStatement	"TOK_GET ( & t , & a , & cv )"	1052:2:21129:21150	6313947	0	True				
ANR	6313976	CallExpression	"TOK_GET ( & t , & a , & cv )"		6313947	0					
ANR	6313977	Callee	TOK_GET		6313947	0					
ANR	6313978	Identifier	TOK_GET		6313947	0					
ANR	6313979	ArgumentList	& t		6313947	1					
ANR	6313980	Argument	& t		6313947	0					
ANR	6313981	UnaryOperationExpression	& t		6313947	0					
ANR	6313982	UnaryOperator	&		6313947	0					
ANR	6313983	Identifier	t		6313947	1					
ANR	6313984	Argument	& a		6313947	1					
ANR	6313985	UnaryOperationExpression	& a		6313947	0					
ANR	6313986	UnaryOperator	&		6313947	0					
ANR	6313987	Identifier	a		6313947	1					
ANR	6313988	Argument	& cv		6313947	2					
ANR	6313989	UnaryOperationExpression	& cv		6313947	0					
ANR	6313990	UnaryOperator	&		6313947	0					
ANR	6313991	Identifier	cv		6313947	1					
ANR	6313992	ExpressionStatement	"pstrcpy ( buf , sizeof buf , get_tok_str ( t , & cv ) )"	1053:2:21154:21201	6313947	1	True				
ANR	6313993	CallExpression	"pstrcpy ( buf , sizeof buf , get_tok_str ( t , & cv ) )"		6313947	0					
ANR	6313994	Callee	pstrcpy		6313947	0					
ANR	6313995	Identifier	pstrcpy		6313947	0					
ANR	6313996	ArgumentList	buf		6313947	1					
ANR	6313997	Argument	buf		6313947	0					
ANR	6313998	Identifier	buf		6313947	0					
ANR	6313999	Argument	sizeof buf		6313947	1					
ANR	6314000	SizeofExpression	sizeof buf		6313947	0					
ANR	6314001	Sizeof	sizeof		6313947	0					
ANR	6314002	Identifier	buf		6313947	1					
ANR	6314003	Argument	"get_tok_str ( t , & cv )"		6313947	2					
ANR	6314004	CallExpression	"get_tok_str ( t , & cv )"		6313947	0					
ANR	6314005	Callee	get_tok_str		6313947	0					
ANR	6314006	Identifier	get_tok_str		6313947	0					
ANR	6314007	ArgumentList	t		6313947	1					
ANR	6314008	Argument	t		6313947	0					
ANR	6314009	Identifier	t		6313947	0					
ANR	6314010	Argument	& cv		6313947	1					
ANR	6314011	UnaryOperationExpression	& cv		6313947	0					
ANR	6314012	UnaryOperator	&		6313947	0					
ANR	6314013	Identifier	cv		6313947	1					
ANR	6314014	ExpressionStatement	"TOK_GET ( & t , & b , & cv )"	1054:2:21205:21226	6313947	2	True				
ANR	6314015	CallExpression	"TOK_GET ( & t , & b , & cv )"		6313947	0					
ANR	6314016	Callee	TOK_GET		6313947	0					
ANR	6314017	Identifier	TOK_GET		6313947	0					
ANR	6314018	ArgumentList	& t		6313947	1					
ANR	6314019	Argument	& t		6313947	0					
ANR	6314020	UnaryOperationExpression	& t		6313947	0					
ANR	6314021	UnaryOperator	&		6313947	0					
ANR	6314022	Identifier	t		6313947	1					
ANR	6314023	Argument	& b		6313947	1					
ANR	6314024	UnaryOperationExpression	& b		6313947	0					
ANR	6314025	UnaryOperator	&		6313947	0					
ANR	6314026	Identifier	b		6313947	1					
ANR	6314027	Argument	& cv		6313947	2					
ANR	6314028	UnaryOperationExpression	& cv		6313947	0					
ANR	6314029	UnaryOperator	&		6313947	0					
ANR	6314030	Identifier	cv		6313947	1					
ANR	6314031	IfStatement	"if ( strcmp ( buf , get_tok_str ( t , & cv ) ) )"		6313947	3					
ANR	6314032	Condition	"strcmp ( buf , get_tok_str ( t , & cv ) )"	1055:6:21234:21267	6313947	0	True				
ANR	6314033	CallExpression	"strcmp ( buf , get_tok_str ( t , & cv ) )"		6313947	0					
ANR	6314034	Callee	strcmp		6313947	0					
ANR	6314035	Identifier	strcmp		6313947	0					
ANR	6314036	ArgumentList	buf		6313947	1					
ANR	6314037	Argument	buf		6313947	0					
ANR	6314038	Identifier	buf		6313947	0					
ANR	6314039	Argument	"get_tok_str ( t , & cv )"		6313947	1					
ANR	6314040	CallExpression	"get_tok_str ( t , & cv )"		6313947	0					
ANR	6314041	Callee	get_tok_str		6313947	0					
ANR	6314042	Identifier	get_tok_str		6313947	0					
ANR	6314043	ArgumentList	t		6313947	1					
ANR	6314044	Argument	t		6313947	0					
ANR	6314045	Identifier	t		6313947	0					
ANR	6314046	Argument	& cv		6313947	1					
ANR	6314047	UnaryOperationExpression	& cv		6313947	0					
ANR	6314048	UnaryOperator	&		6313947	0					
ANR	6314049	Identifier	cv		6313947	1					
ANR	6314050	CompoundStatement		9:42:216:216	6313947	1					
ANR	6314051	ReturnStatement	return 0 ;	1056:3:21275:21283	6313947	0	True				
ANR	6314052	PrimaryExpression	0		6313947	0					
ANR	6314053	ReturnStatement	return ! ( * a || * b ) ;	1059:1:21293:21311	6313947	4	True				
ANR	6314054	UnaryOperationExpression	! ( * a || * b )		6313947	0					
ANR	6314055	UnaryOperator	!		6313947	0					
ANR	6314056	OrExpression	* a || * b		6313947	1		||			
ANR	6314057	UnaryOperationExpression	* a		6313947	0					
ANR	6314058	UnaryOperator	*		6313947	0					
ANR	6314059	Identifier	a		6313947	1					
ANR	6314060	UnaryOperationExpression	* b		6313947	1					
ANR	6314061	UnaryOperator	*		6313947	0					
ANR	6314062	Identifier	b		6313947	1					
ANR	6314063	ReturnType	static int		6313947	1					
ANR	6314064	Identifier	macro_is_equal		6313947	2					
ANR	6314065	ParameterList	"const int * a , const int * b"		6313947	3					
ANR	6314066	Parameter	const int * a	1046:26:21025:21036	6313947	0	True				
ANR	6314067	ParameterType	const int *		6313947	0					
ANR	6314068	Identifier	a		6313947	1					
ANR	6314069	Parameter	const int * b	1046:40:21039:21050	6313947	1	True				
ANR	6314070	ParameterType	const int *		6313947	0					
ANR	6314071	Identifier	b		6313947	1					
ANR	6314072	CFGEntryNode	ENTRY		6313947		True				
ANR	6314073	CFGExitNode	EXIT		6313947		True				
ANR	6314074	Symbol	strcmp		6313947						
ANR	6314075	Symbol	a		6313947						
ANR	6314076	Symbol	b		6313947						
ANR	6314077	Symbol	get_tok_str		6313947						
ANR	6314078	Symbol	& a		6313947						
ANR	6314079	Symbol	& b		6313947						
ANR	6314080	Symbol	* a		6313947						
ANR	6314081	Symbol	* b		6313947						
ANR	6314082	Symbol	buf		6313947						
ANR	6314083	Symbol	cv		6313947						
ANR	6314084	Symbol	t		6313947						
ANR	6314085	Symbol	& t		6313947						
ANR	6314086	Symbol	& cv		6313947						
ANR	6314087	Function	define_push	1063:0:21339:21728							
ANR	6314088	FunctionDef	"define_push (int v , int macro_type , int * str , Sym * first_arg)"		6314087	0					
ANR	6314089	CompoundStatement		1064:0:21413:21728	6314087	0					
ANR	6314090	IdentifierDeclStatement	Sym * s ;	1065:1:21416:21422	6314087	0	True				
ANR	6314091	IdentifierDecl	* s		6314087	0					
ANR	6314092	IdentifierDeclType	Sym *		6314087	0					
ANR	6314093	Identifier	s		6314087	1					
ANR	6314094	ExpressionStatement	s = define_find ( v )	1067:1:21426:21445	6314087	1	True				
ANR	6314095	AssignmentExpression	s = define_find ( v )		6314087	0		=			
ANR	6314096	Identifier	s		6314087	0					
ANR	6314097	CallExpression	define_find ( v )		6314087	1					
ANR	6314098	Callee	define_find		6314087	0					
ANR	6314099	Identifier	define_find		6314087	0					
ANR	6314100	ArgumentList	v		6314087	1					
ANR	6314101	Argument	v		6314087	0					
ANR	6314102	Identifier	v		6314087	0					
ANR	6314103	IfStatement	"if ( s && ! macro_is_equal ( s -> d , str ) )"		6314087	2					
ANR	6314104	Condition	"s && ! macro_is_equal ( s -> d , str )"	1068:5:21452:21483	6314087	0	True				
ANR	6314105	AndExpression	"s && ! macro_is_equal ( s -> d , str )"		6314087	0		&&			
ANR	6314106	Identifier	s		6314087	0					
ANR	6314107	UnaryOperationExpression	"! macro_is_equal ( s -> d , str )"		6314087	1					
ANR	6314108	UnaryOperator	!		6314087	0					
ANR	6314109	CallExpression	"macro_is_equal ( s -> d , str )"		6314087	1					
ANR	6314110	Callee	macro_is_equal		6314087	0					
ANR	6314111	Identifier	macro_is_equal		6314087	0					
ANR	6314112	ArgumentList	s -> d		6314087	1					
ANR	6314113	Argument	s -> d		6314087	0					
ANR	6314114	PtrMemberAccess	s -> d		6314087	0					
ANR	6314115	Identifier	s		6314087	0					
ANR	6314116	Identifier	d		6314087	1					
ANR	6314117	Argument	str		6314087	1					
ANR	6314118	Identifier	str		6314087	0					
ANR	6314119	CompoundStatement		5:39:72:72	6314087	1					
ANR	6314120	ExpressionStatement	"tcc_warning ( ""%s redefined"" , get_tok_str ( v , NULL ) )"	1069:2:21490:21541	6314087	0	True				
ANR	6314121	CallExpression	"tcc_warning ( ""%s redefined"" , get_tok_str ( v , NULL ) )"		6314087	0					
ANR	6314122	Callee	tcc_warning		6314087	0					
ANR	6314123	Identifier	tcc_warning		6314087	0					
ANR	6314124	ArgumentList	"""%s redefined"""		6314087	1					
ANR	6314125	Argument	"""%s redefined"""		6314087	0					
ANR	6314126	PrimaryExpression	"""%s redefined"""		6314087	0					
ANR	6314127	Argument	"get_tok_str ( v , NULL )"		6314087	1					
ANR	6314128	CallExpression	"get_tok_str ( v , NULL )"		6314087	0					
ANR	6314129	Callee	get_tok_str		6314087	0					
ANR	6314130	Identifier	get_tok_str		6314087	0					
ANR	6314131	ArgumentList	v		6314087	1					
ANR	6314132	Argument	v		6314087	0					
ANR	6314133	Identifier	v		6314087	0					
ANR	6314134	Argument	NULL		6314087	1					
ANR	6314135	Identifier	NULL		6314087	0					
ANR	6314136	ExpressionStatement	"s = sym_push2 ( & define_stack , v , macro_type , 0 )"	1072:1:21548:21595	6314087	3	True				
ANR	6314137	AssignmentExpression	"s = sym_push2 ( & define_stack , v , macro_type , 0 )"		6314087	0		=			
ANR	6314138	Identifier	s		6314087	0					
ANR	6314139	CallExpression	"sym_push2 ( & define_stack , v , macro_type , 0 )"		6314087	1					
ANR	6314140	Callee	sym_push2		6314087	0					
ANR	6314141	Identifier	sym_push2		6314087	0					
ANR	6314142	ArgumentList	& define_stack		6314087	1					
ANR	6314143	Argument	& define_stack		6314087	0					
ANR	6314144	UnaryOperationExpression	& define_stack		6314087	0					
ANR	6314145	UnaryOperator	&		6314087	0					
ANR	6314146	Identifier	define_stack		6314087	1					
ANR	6314147	Argument	v		6314087	1					
ANR	6314148	Identifier	v		6314087	0					
ANR	6314149	Argument	macro_type		6314087	2					
ANR	6314150	Identifier	macro_type		6314087	0					
ANR	6314151	Argument	0		6314087	3					
ANR	6314152	PrimaryExpression	0		6314087	0					
ANR	6314153	IfStatement	if ( ! s )		6314087	4					
ANR	6314154	Condition	! s	1073:5:21602:21603	6314087	0	True				
ANR	6314155	UnaryOperationExpression	! s		6314087	0					
ANR	6314156	UnaryOperator	!		6314087	0					
ANR	6314157	Identifier	s		6314087	1					
ANR	6314158	CompoundStatement		10:9:192:192	6314087	1					
ANR	6314159	ReturnStatement	return ;	1074:2:21610:21616	6314087	0	True				
ANR	6314160	ExpressionStatement	s -> d = str	1076:1:21622:21632	6314087	5	True				
ANR	6314161	AssignmentExpression	s -> d = str		6314087	0		=			
ANR	6314162	PtrMemberAccess	s -> d		6314087	0					
ANR	6314163	Identifier	s		6314087	0					
ANR	6314164	Identifier	d		6314087	1					
ANR	6314165	Identifier	str		6314087	1					
ANR	6314166	ExpressionStatement	s -> next = first_arg	1077:1:21635:21654	6314087	6	True				
ANR	6314167	AssignmentExpression	s -> next = first_arg		6314087	0		=			
ANR	6314168	PtrMemberAccess	s -> next		6314087	0					
ANR	6314169	Identifier	s		6314087	0					
ANR	6314170	Identifier	next		6314087	1					
ANR	6314171	Identifier	first_arg		6314087	1					
ANR	6314172	IfStatement	if ( v >= TOK_IDENT )		6314087	7					
ANR	6314173	Condition	v >= TOK_IDENT	1078:5:21661:21674	6314087	0	True				
ANR	6314174	RelationalExpression	v >= TOK_IDENT		6314087	0		>=			
ANR	6314175	Identifier	v		6314087	0					
ANR	6314176	Identifier	TOK_IDENT		6314087	1					
ANR	6314177	CompoundStatement		15:21:263:263	6314087	1					
ANR	6314178	ExpressionStatement	table_ident [ v - TOK_IDENT ] -> sym_define = s	1079:2:21681:21723	6314087	0	True				
ANR	6314179	AssignmentExpression	table_ident [ v - TOK_IDENT ] -> sym_define = s		6314087	0		=			
ANR	6314180	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_define		6314087	0					
ANR	6314181	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6314087	0					
ANR	6314182	Identifier	table_ident		6314087	0					
ANR	6314183	AdditiveExpression	v - TOK_IDENT		6314087	1		-			
ANR	6314184	Identifier	v		6314087	0					
ANR	6314185	Identifier	TOK_IDENT		6314087	1					
ANR	6314186	Identifier	sym_define		6314087	1					
ANR	6314187	Identifier	s		6314087	1					
ANR	6314188	ReturnType	ST_INLN void		6314087	1					
ANR	6314189	Identifier	define_push		6314087	2					
ANR	6314190	ParameterList	"int v , int macro_type , int * str , Sym * first_arg"		6314087	3					
ANR	6314191	Parameter	int v	1063:25:21364:21368	6314087	0	True				
ANR	6314192	ParameterType	int		6314087	0					
ANR	6314193	Identifier	v		6314087	1					
ANR	6314194	Parameter	int macro_type	1063:32:21371:21384	6314087	1	True				
ANR	6314195	ParameterType	int		6314087	0					
ANR	6314196	Identifier	macro_type		6314087	1					
ANR	6314197	Parameter	int * str	1063:48:21387:21394	6314087	2	True				
ANR	6314198	ParameterType	int *		6314087	0					
ANR	6314199	Identifier	str		6314087	1					
ANR	6314200	Parameter	Sym * first_arg	1063:58:21397:21410	6314087	3	True				
ANR	6314201	ParameterType	Sym *		6314087	0					
ANR	6314202	Identifier	first_arg		6314087	1					
ANR	6314203	CFGEntryNode	ENTRY		6314087		True				
ANR	6314204	CFGExitNode	EXIT		6314087		True				
ANR	6314205	Symbol	& define_stack		6314087						
ANR	6314206	Symbol	* v		6314087						
ANR	6314207	Symbol	NULL		6314087						
ANR	6314208	Symbol	macro_type		6314087						
ANR	6314209	Symbol	get_tok_str		6314087						
ANR	6314210	Symbol	TOK_IDENT		6314087						
ANR	6314211	Symbol	* * table_ident		6314087						
ANR	6314212	Symbol	table_ident [ v - TOK_IDENT ] -> sym_define		6314087						
ANR	6314213	Symbol	s -> next		6314087						
ANR	6314214	Symbol	* table_ident		6314087						
ANR	6314215	Symbol	str		6314087						
ANR	6314216	Symbol	sym_push2		6314087						
ANR	6314217	Symbol	table_ident		6314087						
ANR	6314218	Symbol	* TOK_IDENT		6314087						
ANR	6314219	Symbol	s		6314087						
ANR	6314220	Symbol	first_arg		6314087						
ANR	6314221	Symbol	* * v		6314087						
ANR	6314222	Symbol	v		6314087						
ANR	6314223	Symbol	macro_is_equal		6314087						
ANR	6314224	Symbol	s -> d		6314087						
ANR	6314225	Symbol	* * TOK_IDENT		6314087						
ANR	6314226	Symbol	define_find		6314087						
ANR	6314227	Symbol	* s		6314087						
ANR	6314228	Function	define_undef	1084:0:21793:21951							
ANR	6314229	FunctionDef	define_undef (Sym * s)		6314228	0					
ANR	6314230	CompoundStatement		1085:0:21827:21951	6314228	0					
ANR	6314231	IdentifierDeclStatement	int v ;	1086:1:21830:21835	6314228	0	True				
ANR	6314232	IdentifierDecl	v		6314228	0					
ANR	6314233	IdentifierDeclType	int		6314228	0					
ANR	6314234	Identifier	v		6314228	1					
ANR	6314235	ExpressionStatement	v = s -> v	1087:1:21838:21846	6314228	1	True				
ANR	6314236	AssignmentExpression	v = s -> v		6314228	0		=			
ANR	6314237	Identifier	v		6314228	0					
ANR	6314238	PtrMemberAccess	s -> v		6314228	1					
ANR	6314239	Identifier	s		6314228	0					
ANR	6314240	Identifier	v		6314228	1					
ANR	6314241	IfStatement	if ( v >= TOK_IDENT && v < tok_ident )		6314228	2					
ANR	6314242	Condition	v >= TOK_IDENT && v < tok_ident	1088:5:21853:21883	6314228	0	True				
ANR	6314243	AndExpression	v >= TOK_IDENT && v < tok_ident		6314228	0		&&			
ANR	6314244	RelationalExpression	v >= TOK_IDENT		6314228	0		>=			
ANR	6314245	Identifier	v		6314228	0					
ANR	6314246	Identifier	TOK_IDENT		6314228	1					
ANR	6314247	RelationalExpression	v < tok_ident		6314228	1		<			
ANR	6314248	Identifier	v		6314228	0					
ANR	6314249	Identifier	tok_ident		6314228	1					
ANR	6314250	CompoundStatement		4:38:58:58	6314228	1					
ANR	6314251	ExpressionStatement	table_ident [ v - TOK_IDENT ] -> sym_define = NULL	1089:2:21890:21935	6314228	0	True				
ANR	6314252	AssignmentExpression	table_ident [ v - TOK_IDENT ] -> sym_define = NULL		6314228	0		=			
ANR	6314253	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_define		6314228	0					
ANR	6314254	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6314228	0					
ANR	6314255	Identifier	table_ident		6314228	0					
ANR	6314256	AdditiveExpression	v - TOK_IDENT		6314228	1		-			
ANR	6314257	Identifier	v		6314228	0					
ANR	6314258	Identifier	TOK_IDENT		6314228	1					
ANR	6314259	Identifier	sym_define		6314228	1					
ANR	6314260	Identifier	NULL		6314228	1					
ANR	6314261	ExpressionStatement	s -> v = 0	1091:1:21941:21949	6314228	3	True				
ANR	6314262	AssignmentExpression	s -> v = 0		6314228	0		=			
ANR	6314263	PtrMemberAccess	s -> v		6314228	0					
ANR	6314264	Identifier	s		6314228	0					
ANR	6314265	Identifier	v		6314228	1					
ANR	6314266	PrimaryExpression	0		6314228	1					
ANR	6314267	ReturnType	ST_FUNC void		6314228	1					
ANR	6314268	Identifier	define_undef		6314228	2					
ANR	6314269	ParameterList	Sym * s		6314228	3					
ANR	6314270	Parameter	Sym * s	1084:26:21819:21824	6314228	0	True				
ANR	6314271	ParameterType	Sym *		6314228	0					
ANR	6314272	Identifier	s		6314228	1					
ANR	6314273	CFGEntryNode	ENTRY		6314228		True				
ANR	6314274	CFGExitNode	EXIT		6314228		True				
ANR	6314275	Symbol	* v		6314228						
ANR	6314276	Symbol	s -> v		6314228						
ANR	6314277	Symbol	NULL		6314228						
ANR	6314278	Symbol	TOK_IDENT		6314228						
ANR	6314279	Symbol	table_ident [ v - TOK_IDENT ] -> sym_define		6314228						
ANR	6314280	Symbol	* * table_ident		6314228						
ANR	6314281	Symbol	* table_ident		6314228						
ANR	6314282	Symbol	table_ident		6314228						
ANR	6314283	Symbol	* TOK_IDENT		6314228						
ANR	6314284	Symbol	s		6314228						
ANR	6314285	Symbol	tok_ident		6314228						
ANR	6314286	Symbol	* * v		6314228						
ANR	6314287	Symbol	v		6314228						
ANR	6314288	Symbol	* * TOK_IDENT		6314228						
ANR	6314289	Symbol	* s		6314228						
ANR	6314290	Function	define_find	1094:0:21954:22118							
ANR	6314291	FunctionDef	define_find (int v)		6314290	0					
ANR	6314292	CompoundStatement		1095:0:21986:22118	6314290	0					
ANR	6314293	ExpressionStatement	v -= TOK_IDENT	1096:1:21989:22003	6314290	0	True				
ANR	6314294	AssignmentExpression	v -= TOK_IDENT		6314290	0		-=			
ANR	6314295	Identifier	v		6314290	0					
ANR	6314296	Identifier	TOK_IDENT		6314290	1					
ANR	6314297	IfStatement	if ( ( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT ) )		6314290	1					
ANR	6314298	Condition	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )	1097:5:22010:22059	6314290	0	True				
ANR	6314299	RelationalExpression	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )		6314290	0		>=			
ANR	6314300	CastExpression	( unsigned ) v		6314290	0					
ANR	6314301	CastTarget	unsigned		6314290	0					
ANR	6314302	Identifier	v		6314290	1					
ANR	6314303	CastExpression	( unsigned ) ( tok_ident - TOK_IDENT )		6314290	1					
ANR	6314304	CastTarget	unsigned		6314290	0					
ANR	6314305	AdditiveExpression	tok_ident - TOK_IDENT		6314290	1		-			
ANR	6314306	Identifier	tok_ident		6314290	0					
ANR	6314307	Identifier	TOK_IDENT		6314290	1					
ANR	6314308	CompoundStatement		3:57:75:75	6314290	1					
ANR	6314309	ReturnStatement	return NULL ;	1098:2:22066:22077	6314290	0	True				
ANR	6314310	Identifier	NULL		6314290	0					
ANR	6314311	ReturnStatement	return table_ident [ v ] -> sym_define ;	1100:1:22083:22116	6314290	2	True				
ANR	6314312	PtrMemberAccess	table_ident [ v ] -> sym_define		6314290	0					
ANR	6314313	ArrayIndexing	table_ident [ v ]		6314290	0					
ANR	6314314	Identifier	table_ident		6314290	0					
ANR	6314315	Identifier	v		6314290	1					
ANR	6314316	Identifier	sym_define		6314290	1					
ANR	6314317	ReturnType	ST_INLN Sym *		6314290	1					
ANR	6314318	Identifier	define_find		6314290	2					
ANR	6314319	ParameterList	int v		6314290	3					
ANR	6314320	Parameter	int v	1094:25:21979:21983	6314290	0	True				
ANR	6314321	ParameterType	int		6314290	0					
ANR	6314322	Identifier	v		6314290	1					
ANR	6314323	CFGEntryNode	ENTRY		6314290		True				
ANR	6314324	CFGExitNode	EXIT		6314290		True				
ANR	6314325	Symbol	* v		6314290						
ANR	6314326	Symbol	table_ident		6314290						
ANR	6314327	Symbol	table_ident [ v ] -> sym_define		6314290						
ANR	6314328	Symbol	tok_ident		6314290						
ANR	6314329	Symbol	NULL		6314290						
ANR	6314330	Symbol	TOK_IDENT		6314290						
ANR	6314331	Symbol	* * v		6314290						
ANR	6314332	Symbol	v		6314290						
ANR	6314333	Symbol	* * table_ident		6314290						
ANR	6314334	Symbol	* table_ident		6314290						
ANR	6314335	Function	free_defines	1104:0:22167:22547							
ANR	6314336	FunctionDef	free_defines (Sym * b)		6314335	0					
ANR	6314337	CompoundStatement		1105:0:22201:22547	6314335	0					
ANR	6314338	IdentifierDeclStatement	"Sym * top , * top1 ;"	1106:1:22204:22219	6314335	0	True				
ANR	6314339	IdentifierDecl	* top		6314335	0					
ANR	6314340	IdentifierDeclType	Sym *		6314335	0					
ANR	6314341	Identifier	top		6314335	1					
ANR	6314342	IdentifierDecl	* top1		6314335	1					
ANR	6314343	IdentifierDeclType	Sym *		6314335	0					
ANR	6314344	Identifier	top1		6314335	1					
ANR	6314345	IdentifierDeclStatement	int v ;	1107:1:22222:22227	6314335	1	True				
ANR	6314346	IdentifierDecl	v		6314335	0					
ANR	6314347	IdentifierDeclType	int		6314335	0					
ANR	6314348	Identifier	v		6314335	1					
ANR	6314349	ExpressionStatement	top = define_stack	1109:1:22231:22249	6314335	2	True				
ANR	6314350	AssignmentExpression	top = define_stack		6314335	0		=			
ANR	6314351	Identifier	top		6314335	0					
ANR	6314352	Identifier	define_stack		6314335	1					
ANR	6314353	WhileStatement	while ( top != b )		6314335	3					
ANR	6314354	Condition	top != b	1110:8:22259:22266	6314335	0	True				
ANR	6314355	EqualityExpression	top != b		6314335	0		!=			
ANR	6314356	Identifier	top		6314335	0					
ANR	6314357	Identifier	b		6314335	1					
ANR	6314358	CompoundStatement		6:18:67:67	6314335	1					
ANR	6314359	ExpressionStatement	top1 = top -> prev	1111:2:22273:22289	6314335	0	True				
ANR	6314360	AssignmentExpression	top1 = top -> prev		6314335	0		=			
ANR	6314361	Identifier	top1		6314335	0					
ANR	6314362	PtrMemberAccess	top -> prev		6314335	1					
ANR	6314363	Identifier	top		6314335	0					
ANR	6314364	Identifier	prev		6314335	1					
ANR	6314365	IfStatement	if ( top -> d )		6314335	1					
ANR	6314366	Condition	top -> d	1113:6:22344:22349	6314335	0	True				
ANR	6314367	PtrMemberAccess	top -> d		6314335	0					
ANR	6314368	Identifier	top		6314335	0					
ANR	6314369	Identifier	d		6314335	1					
ANR	6314370	CompoundStatement		9:14:150:150	6314335	1					
ANR	6314371	ExpressionStatement	tok_str_free ( top -> d )	1114:3:22357:22378	6314335	0	True				
ANR	6314372	CallExpression	tok_str_free ( top -> d )		6314335	0					
ANR	6314373	Callee	tok_str_free		6314335	0					
ANR	6314374	Identifier	tok_str_free		6314335	0					
ANR	6314375	ArgumentList	top -> d		6314335	1					
ANR	6314376	Argument	top -> d		6314335	0					
ANR	6314377	PtrMemberAccess	top -> d		6314335	0					
ANR	6314378	Identifier	top		6314335	0					
ANR	6314379	Identifier	d		6314335	1					
ANR	6314380	ExpressionStatement	v = top -> v	1116:2:22386:22396	6314335	2	True				
ANR	6314381	AssignmentExpression	v = top -> v		6314335	0		=			
ANR	6314382	Identifier	v		6314335	0					
ANR	6314383	PtrMemberAccess	top -> v		6314335	1					
ANR	6314384	Identifier	top		6314335	0					
ANR	6314385	Identifier	v		6314335	1					
ANR	6314386	IfStatement	if ( v >= TOK_IDENT && v < tok_ident )		6314335	3					
ANR	6314387	Condition	v >= TOK_IDENT && v < tok_ident	1117:6:22404:22434	6314335	0	True				
ANR	6314388	AndExpression	v >= TOK_IDENT && v < tok_ident		6314335	0		&&			
ANR	6314389	RelationalExpression	v >= TOK_IDENT		6314335	0		>=			
ANR	6314390	Identifier	v		6314335	0					
ANR	6314391	Identifier	TOK_IDENT		6314335	1					
ANR	6314392	RelationalExpression	v < tok_ident		6314335	1		<			
ANR	6314393	Identifier	v		6314335	0					
ANR	6314394	Identifier	tok_ident		6314335	1					
ANR	6314395	CompoundStatement		13:39:235:235	6314335	1					
ANR	6314396	ExpressionStatement	table_ident [ v - TOK_IDENT ] -> sym_define = NULL	1118:3:22442:22487	6314335	0	True				
ANR	6314397	AssignmentExpression	table_ident [ v - TOK_IDENT ] -> sym_define = NULL		6314335	0		=			
ANR	6314398	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_define		6314335	0					
ANR	6314399	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6314335	0					
ANR	6314400	Identifier	table_ident		6314335	0					
ANR	6314401	AdditiveExpression	v - TOK_IDENT		6314335	1		-			
ANR	6314402	Identifier	v		6314335	0					
ANR	6314403	Identifier	TOK_IDENT		6314335	1					
ANR	6314404	Identifier	sym_define		6314335	1					
ANR	6314405	Identifier	NULL		6314335	1					
ANR	6314406	ExpressionStatement	sym_free ( top )	1120:2:22495:22509	6314335	4	True				
ANR	6314407	CallExpression	sym_free ( top )		6314335	0					
ANR	6314408	Callee	sym_free		6314335	0					
ANR	6314409	Identifier	sym_free		6314335	0					
ANR	6314410	ArgumentList	top		6314335	1					
ANR	6314411	Argument	top		6314335	0					
ANR	6314412	Identifier	top		6314335	0					
ANR	6314413	ExpressionStatement	top = top1	1121:2:22513:22523	6314335	5	True				
ANR	6314414	AssignmentExpression	top = top1		6314335	0		=			
ANR	6314415	Identifier	top		6314335	0					
ANR	6314416	Identifier	top1		6314335	1					
ANR	6314417	ExpressionStatement	define_stack = b	1123:1:22529:22545	6314335	4	True				
ANR	6314418	AssignmentExpression	define_stack = b		6314335	0		=			
ANR	6314419	Identifier	define_stack		6314335	0					
ANR	6314420	Identifier	b		6314335	1					
ANR	6314421	ReturnType	ST_FUNC void		6314335	1					
ANR	6314422	Identifier	free_defines		6314335	2					
ANR	6314423	ParameterList	Sym * b		6314335	3					
ANR	6314424	Parameter	Sym * b	1104:26:22193:22198	6314335	0	True				
ANR	6314425	ParameterType	Sym *		6314335	0					
ANR	6314426	Identifier	b		6314335	1					
ANR	6314427	CFGEntryNode	ENTRY		6314335		True				
ANR	6314428	CFGExitNode	EXIT		6314335		True				
ANR	6314429	Symbol	* v		6314335						
ANR	6314430	Symbol	top -> v		6314335						
ANR	6314431	Symbol	b		6314335						
ANR	6314432	Symbol	NULL		6314335						
ANR	6314433	Symbol	TOK_IDENT		6314335						
ANR	6314434	Symbol	* * table_ident		6314335						
ANR	6314435	Symbol	table_ident [ v - TOK_IDENT ] -> sym_define		6314335						
ANR	6314436	Symbol	top1		6314335						
ANR	6314437	Symbol	* table_ident		6314335						
ANR	6314438	Symbol	table_ident		6314335						
ANR	6314439	Symbol	* TOK_IDENT		6314335						
ANR	6314440	Symbol	top -> d		6314335						
ANR	6314441	Symbol	tok_ident		6314335						
ANR	6314442	Symbol	top		6314335						
ANR	6314443	Symbol	define_stack		6314335						
ANR	6314444	Symbol	* * v		6314335						
ANR	6314445	Symbol	v		6314335						
ANR	6314446	Symbol	* * TOK_IDENT		6314335						
ANR	6314447	Symbol	top -> prev		6314335						
ANR	6314448	Symbol	* top		6314335						
ANR	6314449	Function	label_find	1127:0:22569:22731							
ANR	6314450	FunctionDef	label_find (int v)		6314449	0					
ANR	6314451	CompoundStatement		1128:0:22600:22731	6314449	0					
ANR	6314452	ExpressionStatement	v -= TOK_IDENT	1129:1:22603:22617	6314449	0	True				
ANR	6314453	AssignmentExpression	v -= TOK_IDENT		6314449	0		-=			
ANR	6314454	Identifier	v		6314449	0					
ANR	6314455	Identifier	TOK_IDENT		6314449	1					
ANR	6314456	IfStatement	if ( ( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT ) )		6314449	1					
ANR	6314457	Condition	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )	1130:5:22624:22673	6314449	0	True				
ANR	6314458	RelationalExpression	( unsigned ) v >= ( unsigned ) ( tok_ident - TOK_IDENT )		6314449	0		>=			
ANR	6314459	CastExpression	( unsigned ) v		6314449	0					
ANR	6314460	CastTarget	unsigned		6314449	0					
ANR	6314461	Identifier	v		6314449	1					
ANR	6314462	CastExpression	( unsigned ) ( tok_ident - TOK_IDENT )		6314449	1					
ANR	6314463	CastTarget	unsigned		6314449	0					
ANR	6314464	AdditiveExpression	tok_ident - TOK_IDENT		6314449	1		-			
ANR	6314465	Identifier	tok_ident		6314449	0					
ANR	6314466	Identifier	TOK_IDENT		6314449	1					
ANR	6314467	CompoundStatement		3:57:75:75	6314449	1					
ANR	6314468	ReturnStatement	return NULL ;	1131:2:22680:22691	6314449	0	True				
ANR	6314469	Identifier	NULL		6314449	0					
ANR	6314470	ReturnStatement	return table_ident [ v ] -> sym_label ;	1133:1:22697:22729	6314449	2	True				
ANR	6314471	PtrMemberAccess	table_ident [ v ] -> sym_label		6314449	0					
ANR	6314472	ArrayIndexing	table_ident [ v ]		6314449	0					
ANR	6314473	Identifier	table_ident		6314449	0					
ANR	6314474	Identifier	v		6314449	1					
ANR	6314475	Identifier	sym_label		6314449	1					
ANR	6314476	ReturnType	ST_FUNC Sym *		6314449	1					
ANR	6314477	Identifier	label_find		6314449	2					
ANR	6314478	ParameterList	int v		6314449	3					
ANR	6314479	Parameter	int v	1127:24:22593:22597	6314449	0	True				
ANR	6314480	ParameterType	int		6314449	0					
ANR	6314481	Identifier	v		6314449	1					
ANR	6314482	CFGEntryNode	ENTRY		6314449		True				
ANR	6314483	CFGExitNode	EXIT		6314449		True				
ANR	6314484	Symbol	* v		6314449						
ANR	6314485	Symbol	table_ident		6314449						
ANR	6314486	Symbol	tok_ident		6314449						
ANR	6314487	Symbol	NULL		6314449						
ANR	6314488	Symbol	TOK_IDENT		6314449						
ANR	6314489	Symbol	table_ident [ v ] -> sym_label		6314449						
ANR	6314490	Symbol	* * v		6314449						
ANR	6314491	Symbol	v		6314449						
ANR	6314492	Symbol	* * table_ident		6314449						
ANR	6314493	Symbol	* table_ident		6314449						
ANR	6314494	Function	label_push	1136:0:22734:23156							
ANR	6314495	FunctionDef	"label_push (Sym * * ptop , int v , int flags)"		6314494	0					
ANR	6314496	CompoundStatement		1137:0:22788:23156	6314494	0					
ANR	6314497	IdentifierDeclStatement	"Sym * s , * * ps ;"	1138:1:22791:22803	6314494	0	True				
ANR	6314498	IdentifierDecl	* s		6314494	0					
ANR	6314499	IdentifierDeclType	Sym *		6314494	0					
ANR	6314500	Identifier	s		6314494	1					
ANR	6314501	IdentifierDecl	* * ps		6314494	1					
ANR	6314502	IdentifierDeclType	Sym * *		6314494	0					
ANR	6314503	Identifier	ps		6314494	1					
ANR	6314504	ExpressionStatement	"s = sym_push2 ( ptop , v , 0 , 0 )"	1139:1:22806:22835	6314494	1	True				
ANR	6314505	AssignmentExpression	"s = sym_push2 ( ptop , v , 0 , 0 )"		6314494	0		=			
ANR	6314506	Identifier	s		6314494	0					
ANR	6314507	CallExpression	"sym_push2 ( ptop , v , 0 , 0 )"		6314494	1					
ANR	6314508	Callee	sym_push2		6314494	0					
ANR	6314509	Identifier	sym_push2		6314494	0					
ANR	6314510	ArgumentList	ptop		6314494	1					
ANR	6314511	Argument	ptop		6314494	0					
ANR	6314512	Identifier	ptop		6314494	0					
ANR	6314513	Argument	v		6314494	1					
ANR	6314514	Identifier	v		6314494	0					
ANR	6314515	Argument	0		6314494	2					
ANR	6314516	PrimaryExpression	0		6314494	0					
ANR	6314517	Argument	0		6314494	3					
ANR	6314518	PrimaryExpression	0		6314494	0					
ANR	6314519	IfStatement	if ( ! s )		6314494	2					
ANR	6314520	Condition	! s	1140:5:22842:22843	6314494	0	True				
ANR	6314521	UnaryOperationExpression	! s		6314494	0					
ANR	6314522	UnaryOperator	!		6314494	0					
ANR	6314523	Identifier	s		6314494	1					
ANR	6314524	CompoundStatement		4:9:57:57	6314494	1					
ANR	6314525	ReturnStatement	return s ;	1141:2:22850:22858	6314494	0	True				
ANR	6314526	Identifier	s		6314494	0					
ANR	6314527	ExpressionStatement	s -> r = flags	1143:1:22864:22876	6314494	3	True				
ANR	6314528	AssignmentExpression	s -> r = flags		6314494	0		=			
ANR	6314529	PtrMemberAccess	s -> r		6314494	0					
ANR	6314530	Identifier	s		6314494	0					
ANR	6314531	Identifier	r		6314494	1					
ANR	6314532	Identifier	flags		6314494	1					
ANR	6314533	ExpressionStatement	ps = & table_ident [ v - TOK_IDENT ] -> sym_label	1144:1:22879:22922	6314494	4	True				
ANR	6314534	AssignmentExpression	ps = & table_ident [ v - TOK_IDENT ] -> sym_label		6314494	0		=			
ANR	6314535	Identifier	ps		6314494	0					
ANR	6314536	UnaryOperationExpression	& table_ident [ v - TOK_IDENT ] -> sym_label		6314494	1					
ANR	6314537	UnaryOperator	&		6314494	0					
ANR	6314538	PtrMemberAccess	table_ident [ v - TOK_IDENT ] -> sym_label		6314494	1					
ANR	6314539	ArrayIndexing	table_ident [ v - TOK_IDENT ]		6314494	0					
ANR	6314540	Identifier	table_ident		6314494	0					
ANR	6314541	AdditiveExpression	v - TOK_IDENT		6314494	1		-			
ANR	6314542	Identifier	v		6314494	0					
ANR	6314543	Identifier	TOK_IDENT		6314494	1					
ANR	6314544	Identifier	sym_label		6314494	1					
ANR	6314545	IfStatement	if ( ptop == & global_label_stack )		6314494	5					
ANR	6314546	Condition	ptop == & global_label_stack	1145:5:22929:22955	6314494	0	True				
ANR	6314547	EqualityExpression	ptop == & global_label_stack		6314494	0		==			
ANR	6314548	Identifier	ptop		6314494	0					
ANR	6314549	UnaryOperationExpression	& global_label_stack		6314494	1					
ANR	6314550	UnaryOperator	&		6314494	0					
ANR	6314551	Identifier	global_label_stack		6314494	1					
ANR	6314552	CompoundStatement		9:34:169:169	6314494	1					
ANR	6314553	WhileStatement	while ( * ps != NULL )		6314494	0					
ANR	6314554	Condition	* ps != NULL	1148:9:23073:23083	6314494	0	True				
ANR	6314555	EqualityExpression	* ps != NULL		6314494	0		!=			
ANR	6314556	UnaryOperationExpression	* ps		6314494	0					
ANR	6314557	UnaryOperator	*		6314494	0					
ANR	6314558	Identifier	ps		6314494	1					
ANR	6314559	Identifier	NULL		6314494	1					
ANR	6314560	ExpressionStatement	ps = & ( * ps ) -> prev_tok	1149:3:23089:23110	6314494	1	True				
ANR	6314561	AssignmentExpression	ps = & ( * ps ) -> prev_tok		6314494	0		=			
ANR	6314562	Identifier	ps		6314494	0					
ANR	6314563	UnaryOperationExpression	& ( * ps ) -> prev_tok		6314494	1					
ANR	6314564	UnaryOperator	&		6314494	0					
ANR	6314565	PtrMemberAccess	( * ps ) -> prev_tok		6314494	1					
ANR	6314566	UnaryOperationExpression	* ps		6314494	0					
ANR	6314567	UnaryOperator	*		6314494	0					
ANR	6314568	Identifier	ps		6314494	1					
ANR	6314569	Identifier	prev_tok		6314494	1					
ANR	6314570	ExpressionStatement	s -> prev_tok = * ps	1151:1:23116:23133	6314494	6	True				
ANR	6314571	AssignmentExpression	s -> prev_tok = * ps		6314494	0		=			
ANR	6314572	PtrMemberAccess	s -> prev_tok		6314494	0					
ANR	6314573	Identifier	s		6314494	0					
ANR	6314574	Identifier	prev_tok		6314494	1					
ANR	6314575	UnaryOperationExpression	* ps		6314494	1					
ANR	6314576	UnaryOperator	*		6314494	0					
ANR	6314577	Identifier	ps		6314494	1					
ANR	6314578	ExpressionStatement	* ps = s	1152:1:23136:23143	6314494	7	True				
ANR	6314579	AssignmentExpression	* ps = s		6314494	0		=			
ANR	6314580	UnaryOperationExpression	* ps		6314494	0					
ANR	6314581	UnaryOperator	*		6314494	0					
ANR	6314582	Identifier	ps		6314494	1					
ANR	6314583	Identifier	s		6314494	1					
ANR	6314584	ReturnStatement	return s ;	1153:1:23146:23154	6314494	8	True				
ANR	6314585	Identifier	s		6314494	0					
ANR	6314586	ReturnType	ST_FUNC Sym *		6314494	1					
ANR	6314587	Identifier	label_push		6314494	2					
ANR	6314588	ParameterList	"Sym * * ptop , int v , int flags"		6314494	3					
ANR	6314589	Parameter	Sym * * ptop	1136:24:22758:22767	6314494	0	True				
ANR	6314590	ParameterType	Sym * *		6314494	0					
ANR	6314591	Identifier	ptop		6314494	1					
ANR	6314592	Parameter	int v	1136:36:22770:22774	6314494	1	True				
ANR	6314593	ParameterType	int		6314494	0					
ANR	6314594	Identifier	v		6314494	1					
ANR	6314595	Parameter	int flags	1136:43:22777:22785	6314494	2	True				
ANR	6314596	ParameterType	int		6314494	0					
ANR	6314597	Identifier	flags		6314494	1					
ANR	6314598	CFGEntryNode	ENTRY		6314494		True				
ANR	6314599	CFGExitNode	EXIT		6314494		True				
ANR	6314600	Symbol	* v		6314494						
ANR	6314601	Symbol	ps		6314494						
ANR	6314602	Symbol	NULL		6314494						
ANR	6314603	Symbol	TOK_IDENT		6314494						
ANR	6314604	Symbol	s -> r		6314494						
ANR	6314605	Symbol	flags		6314494						
ANR	6314606	Symbol	& table_ident [ v - TOK_IDENT ] -> sym_label		6314494						
ANR	6314607	Symbol	* ps		6314494						
ANR	6314608	Symbol	* table_ident		6314494						
ANR	6314609	Symbol	s -> prev_tok		6314494						
ANR	6314610	Symbol	sym_push2		6314494						
ANR	6314611	Symbol	ptop		6314494						
ANR	6314612	Symbol	table_ident		6314494						
ANR	6314613	Symbol	* TOK_IDENT		6314494						
ANR	6314614	Symbol	s		6314494						
ANR	6314615	Symbol	& global_label_stack		6314494						
ANR	6314616	Symbol	v		6314494						
ANR	6314617	Symbol	& ( * ps ) -> prev_tok		6314494						
ANR	6314618	Symbol	* s		6314494						
ANR	6314619	Function	label_pop	1158:0:23282:23747							
ANR	6314620	FunctionDef	"label_pop (Sym * * ptop , Sym * slast)"		6314619	0					
ANR	6314621	CompoundStatement		1159:0:23329:23747	6314619	0					
ANR	6314622	IdentifierDeclStatement	"Sym * s , * s1 ;"	1160:1:23332:23343	6314619	0	True				
ANR	6314623	IdentifierDecl	* s		6314619	0					
ANR	6314624	IdentifierDeclType	Sym *		6314619	0					
ANR	6314625	Identifier	s		6314619	1					
ANR	6314626	IdentifierDecl	* s1		6314619	1					
ANR	6314627	IdentifierDeclType	Sym *		6314619	0					
ANR	6314628	Identifier	s1		6314619	1					
ANR	6314629	ForStatement	for ( s = * ptop ; s != slast ; s = s1 )		6314619	1					
ANR	6314630	ForInit	s = * ptop ;	1161:6:23351:23360	6314619	0	True				
ANR	6314631	AssignmentExpression	s = * ptop		6314619	0		=			
ANR	6314632	Identifier	s		6314619	0					
ANR	6314633	UnaryOperationExpression	* ptop		6314619	1					
ANR	6314634	UnaryOperator	*		6314619	0					
ANR	6314635	Identifier	ptop		6314619	1					
ANR	6314636	Condition	s != slast	1161:17:23362:23371	6314619	1	True				
ANR	6314637	EqualityExpression	s != slast		6314619	0		!=			
ANR	6314638	Identifier	s		6314619	0					
ANR	6314639	Identifier	slast		6314619	1					
ANR	6314640	AssignmentExpression	s = s1	1161:29:23374:23379	6314619	2	True	=			
ANR	6314641	Identifier	s		6314619	0					
ANR	6314642	Identifier	s1		6314619	1					
ANR	6314643	CompoundStatement		3:37:52:52	6314619	3					
ANR	6314644	ExpressionStatement	s1 = s -> prev	1162:2:23386:23398	6314619	0	True				
ANR	6314645	AssignmentExpression	s1 = s -> prev		6314619	0		=			
ANR	6314646	Identifier	s1		6314619	0					
ANR	6314647	PtrMemberAccess	s -> prev		6314619	1					
ANR	6314648	Identifier	s		6314619	0					
ANR	6314649	Identifier	prev		6314619	1					
ANR	6314650	IfStatement	if ( s -> r == LABEL_DECLARED )		6314619	1					
ANR	6314651	Condition	s -> r == LABEL_DECLARED	1163:6:23406:23427	6314619	0	True				
ANR	6314652	EqualityExpression	s -> r == LABEL_DECLARED		6314619	0		==			
ANR	6314653	PtrMemberAccess	s -> r		6314619	0					
ANR	6314654	Identifier	s		6314619	0					
ANR	6314655	Identifier	r		6314619	1					
ANR	6314656	Identifier	LABEL_DECLARED		6314619	1					
ANR	6314657	CompoundStatement		5:30:100:100	6314619	1					
ANR	6314658	ExpressionStatement	"tcc_warning ( ""label '%s' declared but not used"" , get_tok_str ( s -> v , NULL ) )"	1164:3:23435:23509	6314619	0	True				
ANR	6314659	CallExpression	"tcc_warning ( ""label '%s' declared but not used"" , get_tok_str ( s -> v , NULL ) )"		6314619	0					
ANR	6314660	Callee	tcc_warning		6314619	0					
ANR	6314661	Identifier	tcc_warning		6314619	0					
ANR	6314662	ArgumentList	"""label '%s' declared but not used"""		6314619	1					
ANR	6314663	Argument	"""label '%s' declared but not used"""		6314619	0					
ANR	6314664	PrimaryExpression	"""label '%s' declared but not used"""		6314619	0					
ANR	6314665	Argument	"get_tok_str ( s -> v , NULL )"		6314619	1					
ANR	6314666	CallExpression	"get_tok_str ( s -> v , NULL )"		6314619	0					
ANR	6314667	Callee	get_tok_str		6314619	0					
ANR	6314668	Identifier	get_tok_str		6314619	0					
ANR	6314669	ArgumentList	s -> v		6314619	1					
ANR	6314670	Argument	s -> v		6314619	0					
ANR	6314671	PtrMemberAccess	s -> v		6314619	0					
ANR	6314672	Identifier	s		6314619	0					
ANR	6314673	Identifier	v		6314619	1					
ANR	6314674	Argument	NULL		6314619	1					
ANR	6314675	Identifier	NULL		6314619	0					
ANR	6314676	ElseStatement	else		6314619	0					
ANR	6314677	IfStatement	if ( s -> r == LABEL_FORWARD )		6314619	0					
ANR	6314678	Condition	s -> r == LABEL_FORWARD	1165:13:23524:23544	6314619	0	True				
ANR	6314679	EqualityExpression	s -> r == LABEL_FORWARD		6314619	0		==			
ANR	6314680	PtrMemberAccess	s -> r		6314619	0					
ANR	6314681	Identifier	s		6314619	0					
ANR	6314682	Identifier	r		6314619	1					
ANR	6314683	Identifier	LABEL_FORWARD		6314619	1					
ANR	6314684	CompoundStatement		7:36:217:217	6314619	1					
ANR	6314685	ExpressionStatement	"tcc_error ( ""label '%s' used but not defined"" , get_tok_str ( s -> v , NULL ) )"	1166:3:23552:23627	6314619	0	True				
ANR	6314686	CallExpression	"tcc_error ( ""label '%s' used but not defined"" , get_tok_str ( s -> v , NULL ) )"		6314619	0					
ANR	6314687	Callee	tcc_error		6314619	0					
ANR	6314688	Identifier	tcc_error		6314619	0					
ANR	6314689	ArgumentList	"""label '%s' used but not defined"""		6314619	1					
ANR	6314690	Argument	"""label '%s' used but not defined"""		6314619	0					
ANR	6314691	PrimaryExpression	"""label '%s' used but not defined"""		6314619	0					
ANR	6314692	Argument	"get_tok_str ( s -> v , NULL )"		6314619	1					
ANR	6314693	CallExpression	"get_tok_str ( s -> v , NULL )"		6314619	0					
ANR	6314694	Callee	get_tok_str		6314619	0					
ANR	6314695	Identifier	get_tok_str		6314619	0					
ANR	6314696	ArgumentList	s -> v		6314619	1					
ANR	6314697	Argument	s -> v		6314619	0					
ANR	6314698	PtrMemberAccess	s -> v		6314619	0					
ANR	6314699	Identifier	s		6314619	0					
ANR	6314700	Identifier	v		6314619	1					
ANR	6314701	Argument	NULL		6314619	1					
ANR	6314702	Identifier	NULL		6314619	0					
ANR	6314703	ExpressionStatement	table_ident [ s -> v - TOK_IDENT ] -> sym_label = s -> prev_tok	1170:2:23656:23710	6314619	2	True				
ANR	6314704	AssignmentExpression	table_ident [ s -> v - TOK_IDENT ] -> sym_label = s -> prev_tok		6314619	0		=			
ANR	6314705	PtrMemberAccess	table_ident [ s -> v - TOK_IDENT ] -> sym_label		6314619	0					
ANR	6314706	ArrayIndexing	table_ident [ s -> v - TOK_IDENT ]		6314619	0					
ANR	6314707	Identifier	table_ident		6314619	0					
ANR	6314708	AdditiveExpression	s -> v - TOK_IDENT		6314619	1		-			
ANR	6314709	PtrMemberAccess	s -> v		6314619	0					
ANR	6314710	Identifier	s		6314619	0					
ANR	6314711	Identifier	v		6314619	1					
ANR	6314712	Identifier	TOK_IDENT		6314619	1					
ANR	6314713	Identifier	sym_label		6314619	1					
ANR	6314714	PtrMemberAccess	s -> prev_tok		6314619	1					
ANR	6314715	Identifier	s		6314619	0					
ANR	6314716	Identifier	prev_tok		6314619	1					
ANR	6314717	ExpressionStatement	sym_free ( s )	1171:2:23714:23726	6314619	3	True				
ANR	6314718	CallExpression	sym_free ( s )		6314619	0					
ANR	6314719	Callee	sym_free		6314619	0					
ANR	6314720	Identifier	sym_free		6314619	0					
ANR	6314721	ArgumentList	s		6314619	1					
ANR	6314722	Argument	s		6314619	0					
ANR	6314723	Identifier	s		6314619	0					
ANR	6314724	ExpressionStatement	* ptop = slast	1173:1:23732:23745	6314619	2	True				
ANR	6314725	AssignmentExpression	* ptop = slast		6314619	0		=			
ANR	6314726	UnaryOperationExpression	* ptop		6314619	0					
ANR	6314727	UnaryOperator	*		6314619	0					
ANR	6314728	Identifier	ptop		6314619	1					
ANR	6314729	Identifier	slast		6314619	1					
ANR	6314730	ReturnType	ST_FUNC void		6314619	1					
ANR	6314731	Identifier	label_pop		6314619	2					
ANR	6314732	ParameterList	"Sym * * ptop , Sym * slast"		6314619	3					
ANR	6314733	Parameter	Sym * * ptop	1158:23:23305:23314	6314619	0	True				
ANR	6314734	ParameterType	Sym * *		6314619	0					
ANR	6314735	Identifier	ptop		6314619	1					
ANR	6314736	Parameter	Sym * slast	1158:35:23317:23326	6314619	1	True				
ANR	6314737	ParameterType	Sym *		6314619	0					
ANR	6314738	Identifier	slast		6314619	1					
ANR	6314739	CFGEntryNode	ENTRY		6314619		True				
ANR	6314740	CFGExitNode	EXIT		6314619		True				
ANR	6314741	Symbol	s -> v		6314619						
ANR	6314742	Symbol	get_tok_str		6314619						
ANR	6314743	Symbol	* s -> v		6314619						
ANR	6314744	Symbol	LABEL_DECLARED		6314619						
ANR	6314745	Symbol	s -> r		6314619						
ANR	6314746	Symbol	table_ident [ s -> v - TOK_IDENT ] -> sym_label		6314619						
ANR	6314747	Symbol	s -> prev		6314619						
ANR	6314748	Symbol	* table_ident		6314619						
ANR	6314749	Symbol	s -> prev_tok		6314619						
ANR	6314750	Symbol	slast		6314619						
ANR	6314751	Symbol	ptop		6314619						
ANR	6314752	Symbol	* TOK_IDENT		6314619						
ANR	6314753	Symbol	* * s		6314619						
ANR	6314754	Symbol	* * TOK_IDENT		6314619						
ANR	6314755	Symbol	s1		6314619						
ANR	6314756	Symbol	NULL		6314619						
ANR	6314757	Symbol	TOK_IDENT		6314619						
ANR	6314758	Symbol	LABEL_FORWARD		6314619						
ANR	6314759	Symbol	* * s -> v		6314619						
ANR	6314760	Symbol	* * table_ident		6314619						
ANR	6314761	Symbol	* * * s		6314619						
ANR	6314762	Symbol	table_ident		6314619						
ANR	6314763	Symbol	s		6314619						
ANR	6314764	Symbol	* ptop		6314619						
ANR	6314765	Symbol	* s		6314619						
ANR	6314766	Function	expr_preprocess	1177:0:23789:24528							
ANR	6314767	FunctionDef	expr_preprocess ()		6314766	0					
ANR	6314768	CompoundStatement		1178:0:23822:24528	6314766	0					
ANR	6314769	IdentifierDeclStatement	"int c , t ;"	1179:1:23825:23833	6314766	0	True				
ANR	6314770	IdentifierDecl	c		6314766	0					
ANR	6314771	IdentifierDeclType	int		6314766	0					
ANR	6314772	Identifier	c		6314766	1					
ANR	6314773	IdentifierDecl	t		6314766	1					
ANR	6314774	IdentifierDeclType	int		6314766	0					
ANR	6314775	Identifier	t		6314766	1					
ANR	6314776	IdentifierDeclStatement	TokenString str ;	1180:1:23836:23851	6314766	1	True				
ANR	6314777	IdentifierDecl	str		6314766	0					
ANR	6314778	IdentifierDeclType	TokenString		6314766	0					
ANR	6314779	Identifier	str		6314766	1					
ANR	6314780	ExpressionStatement	tok_str_new ( & str )	1182:1:23855:23873	6314766	2	True				
ANR	6314781	CallExpression	tok_str_new ( & str )		6314766	0					
ANR	6314782	Callee	tok_str_new		6314766	0					
ANR	6314783	Identifier	tok_str_new		6314766	0					
ANR	6314784	ArgumentList	& str		6314766	1					
ANR	6314785	Argument	& str		6314766	0					
ANR	6314786	UnaryOperationExpression	& str		6314766	0					
ANR	6314787	UnaryOperator	&		6314766	0					
ANR	6314788	Identifier	str		6314766	1					
ANR	6314789	WhileStatement	while ( tok != TOK_LINEFEED && tok != TOK_EOF )		6314766	3					
ANR	6314790	Condition	tok != TOK_LINEFEED && tok != TOK_EOF	1183:8:23883:23919	6314766	0	True				
ANR	6314791	AndExpression	tok != TOK_LINEFEED && tok != TOK_EOF		6314766	0		&&			
ANR	6314792	EqualityExpression	tok != TOK_LINEFEED		6314766	0		!=			
ANR	6314793	Identifier	tok		6314766	0					
ANR	6314794	Identifier	TOK_LINEFEED		6314766	1					
ANR	6314795	EqualityExpression	tok != TOK_EOF		6314766	1		!=			
ANR	6314796	Identifier	tok		6314766	0					
ANR	6314797	Identifier	TOK_EOF		6314766	1					
ANR	6314798	CompoundStatement		6:47:99:99	6314766	1					
ANR	6314799	ExpressionStatement	next ( )	1184:2:23926:23933	6314766	0	True				
ANR	6314800	CallExpression	next ( )		6314766	0					
ANR	6314801	Callee	next		6314766	0					
ANR	6314802	Identifier	next		6314766	0					
ANR	6314803	ArgumentList			6314766	1					
ANR	6314804	IfStatement	if ( tok == TOK_DEFINED )		6314766	1					
ANR	6314805	Condition	tok == TOK_DEFINED	1185:6:23961:23978	6314766	0	True				
ANR	6314806	EqualityExpression	tok == TOK_DEFINED		6314766	0		==			
ANR	6314807	Identifier	tok		6314766	0					
ANR	6314808	Identifier	TOK_DEFINED		6314766	1					
ANR	6314809	CompoundStatement		8:26:158:158	6314766	1					
ANR	6314810	ExpressionStatement	next_nomacro ( )	1186:3:23986:24001	6314766	0	True				
ANR	6314811	CallExpression	next_nomacro ( )		6314766	0					
ANR	6314812	Callee	next_nomacro		6314766	0					
ANR	6314813	Identifier	next_nomacro		6314766	0					
ANR	6314814	ArgumentList			6314766	1					
ANR	6314815	ExpressionStatement	t = tok	1187:3:24006:24013	6314766	1	True				
ANR	6314816	AssignmentExpression	t = tok		6314766	0		=			
ANR	6314817	Identifier	t		6314766	0					
ANR	6314818	Identifier	tok		6314766	1					
ANR	6314819	IfStatement	if ( t == '(' )		6314766	2					
ANR	6314820	Condition	t == '('	1188:7:24022:24029	6314766	0	True				
ANR	6314821	EqualityExpression	t == '('		6314766	0		==			
ANR	6314822	Identifier	t		6314766	0					
ANR	6314823	PrimaryExpression	'('		6314766	1					
ANR	6314824	CompoundStatement		11:17:209:209	6314766	1					
ANR	6314825	ExpressionStatement	next_nomacro ( )	1189:4:24038:24053	6314766	0	True				
ANR	6314826	CallExpression	next_nomacro ( )		6314766	0					
ANR	6314827	Callee	next_nomacro		6314766	0					
ANR	6314828	Identifier	next_nomacro		6314766	0					
ANR	6314829	ArgumentList			6314766	1					
ANR	6314830	ExpressionStatement	c = define_find ( tok ) != 0	1191:3:24063:24089	6314766	3	True				
ANR	6314831	AssignmentExpression	c = define_find ( tok ) != 0		6314766	0		=			
ANR	6314832	Identifier	c		6314766	0					
ANR	6314833	EqualityExpression	define_find ( tok ) != 0		6314766	1		!=			
ANR	6314834	CallExpression	define_find ( tok )		6314766	0					
ANR	6314835	Callee	define_find		6314766	0					
ANR	6314836	Identifier	define_find		6314766	0					
ANR	6314837	ArgumentList	tok		6314766	1					
ANR	6314838	Argument	tok		6314766	0					
ANR	6314839	Identifier	tok		6314766	0					
ANR	6314840	PrimaryExpression	0		6314766	1					
ANR	6314841	IfStatement	if ( t == '(' )		6314766	4					
ANR	6314842	Condition	t == '('	1192:7:24098:24105	6314766	0	True				
ANR	6314843	EqualityExpression	t == '('		6314766	0		==			
ANR	6314844	Identifier	t		6314766	0					
ANR	6314845	PrimaryExpression	'('		6314766	1					
ANR	6314846	CompoundStatement		15:17:285:285	6314766	1					
ANR	6314847	ExpressionStatement	next_nomacro ( )	1193:4:24114:24129	6314766	0	True				
ANR	6314848	CallExpression	next_nomacro ( )		6314766	0					
ANR	6314849	Callee	next_nomacro		6314766	0					
ANR	6314850	Identifier	next_nomacro		6314766	0					
ANR	6314851	ArgumentList			6314766	1					
ANR	6314852	ExpressionStatement	tok = TOK_CINT	1195:3:24139:24153	6314766	5	True				
ANR	6314853	AssignmentExpression	tok = TOK_CINT		6314766	0		=			
ANR	6314854	Identifier	tok		6314766	0					
ANR	6314855	Identifier	TOK_CINT		6314766	1					
ANR	6314856	ExpressionStatement	tokc . i = c	1196:3:24158:24168	6314766	6	True				
ANR	6314857	AssignmentExpression	tokc . i = c		6314766	0		=			
ANR	6314858	MemberAccess	tokc . i		6314766	0					
ANR	6314859	Identifier	tokc		6314766	0					
ANR	6314860	Identifier	i		6314766	1					
ANR	6314861	Identifier	c		6314766	1					
ANR	6314862	ElseStatement	else		6314766	0					
ANR	6314863	IfStatement	if ( tok >= TOK_IDENT )		6314766	0					
ANR	6314864	Condition	tok >= TOK_IDENT	1197:13:24183:24198	6314766	0	True				
ANR	6314865	RelationalExpression	tok >= TOK_IDENT		6314766	0		>=			
ANR	6314866	Identifier	tok		6314766	0					
ANR	6314867	Identifier	TOK_IDENT		6314766	1					
ANR	6314868	CompoundStatement		20:31:378:378	6314766	1					
ANR	6314869	ExpressionStatement	tok = TOK_CINT	1199:3:24234:24248	6314766	0	True				
ANR	6314870	AssignmentExpression	tok = TOK_CINT		6314766	0		=			
ANR	6314871	Identifier	tok		6314766	0					
ANR	6314872	Identifier	TOK_CINT		6314766	1					
ANR	6314873	ExpressionStatement	tokc . i = 0	1200:3:24253:24263	6314766	1	True				
ANR	6314874	AssignmentExpression	tokc . i = 0		6314766	0		=			
ANR	6314875	MemberAccess	tokc . i		6314766	0					
ANR	6314876	Identifier	tokc		6314766	0					
ANR	6314877	Identifier	i		6314766	1					
ANR	6314878	PrimaryExpression	0		6314766	1					
ANR	6314879	ExpressionStatement	tok_str_add_tok ( & str )	1202:2:24271:24293	6314766	2	True				
ANR	6314880	CallExpression	tok_str_add_tok ( & str )		6314766	0					
ANR	6314881	Callee	tok_str_add_tok		6314766	0					
ANR	6314882	Identifier	tok_str_add_tok		6314766	0					
ANR	6314883	ArgumentList	& str		6314766	1					
ANR	6314884	Argument	& str		6314766	0					
ANR	6314885	UnaryOperationExpression	& str		6314766	0					
ANR	6314886	UnaryOperator	&		6314766	0					
ANR	6314887	Identifier	str		6314766	1					
ANR	6314888	ExpressionStatement	"tok_str_add ( & str , - 1 )"	1204:1:24299:24321	6314766	4	True				
ANR	6314889	CallExpression	"tok_str_add ( & str , - 1 )"		6314766	0					
ANR	6314890	Callee	tok_str_add		6314766	0					
ANR	6314891	Identifier	tok_str_add		6314766	0					
ANR	6314892	ArgumentList	& str		6314766	1					
ANR	6314893	Argument	& str		6314766	0					
ANR	6314894	UnaryOperationExpression	& str		6314766	0					
ANR	6314895	UnaryOperator	&		6314766	0					
ANR	6314896	Identifier	str		6314766	1					
ANR	6314897	Argument	- 1		6314766	1					
ANR	6314898	UnaryOperationExpression	- 1		6314766	0					
ANR	6314899	UnaryOperator	-		6314766	0					
ANR	6314900	PrimaryExpression	1		6314766	1					
ANR	6314901	ExpressionStatement	"tok_str_add ( & str , 0 )"	1205:1:24351:24372	6314766	5	True				
ANR	6314902	CallExpression	"tok_str_add ( & str , 0 )"		6314766	0					
ANR	6314903	Callee	tok_str_add		6314766	0					
ANR	6314904	Identifier	tok_str_add		6314766	0					
ANR	6314905	ArgumentList	& str		6314766	1					
ANR	6314906	Argument	& str		6314766	0					
ANR	6314907	UnaryOperationExpression	& str		6314766	0					
ANR	6314908	UnaryOperator	&		6314766	0					
ANR	6314909	Identifier	str		6314766	1					
ANR	6314910	Argument	0		6314766	1					
ANR	6314911	PrimaryExpression	0		6314766	0					
ANR	6314912	ExpressionStatement	macro_ptr = str . str	1207:1:24417:24436	6314766	6	True				
ANR	6314913	AssignmentExpression	macro_ptr = str . str		6314766	0		=			
ANR	6314914	Identifier	macro_ptr		6314766	0					
ANR	6314915	MemberAccess	str . str		6314766	1					
ANR	6314916	Identifier	str		6314766	0					
ANR	6314917	Identifier	str		6314766	1					
ANR	6314918	ExpressionStatement	next ( )	1208:1:24439:24446	6314766	7	True				
ANR	6314919	CallExpression	next ( )		6314766	0					
ANR	6314920	Callee	next		6314766	0					
ANR	6314921	Identifier	next		6314766	0					
ANR	6314922	ArgumentList			6314766	1					
ANR	6314923	ExpressionStatement	c = expr_const ( )	1209:1:24449:24466	6314766	8	True				
ANR	6314924	AssignmentExpression	c = expr_const ( )		6314766	0		=			
ANR	6314925	Identifier	c		6314766	0					
ANR	6314926	CallExpression	expr_const ( )		6314766	1					
ANR	6314927	Callee	expr_const		6314766	0					
ANR	6314928	Identifier	expr_const		6314766	0					
ANR	6314929	ArgumentList			6314766	1					
ANR	6314930	ExpressionStatement	macro_ptr = NULL	1210:1:24469:24485	6314766	9	True				
ANR	6314931	AssignmentExpression	macro_ptr = NULL		6314766	0		=			
ANR	6314932	Identifier	macro_ptr		6314766	0					
ANR	6314933	Identifier	NULL		6314766	1					
ANR	6314934	ExpressionStatement	tok_str_free ( str . str )	1211:1:24488:24510	6314766	10	True				
ANR	6314935	CallExpression	tok_str_free ( str . str )		6314766	0					
ANR	6314936	Callee	tok_str_free		6314766	0					
ANR	6314937	Identifier	tok_str_free		6314766	0					
ANR	6314938	ArgumentList	str . str		6314766	1					
ANR	6314939	Argument	str . str		6314766	0					
ANR	6314940	MemberAccess	str . str		6314766	0					
ANR	6314941	Identifier	str		6314766	0					
ANR	6314942	Identifier	str		6314766	1					
ANR	6314943	ReturnStatement	return c != 0 ;	1212:1:24513:24526	6314766	11	True				
ANR	6314944	EqualityExpression	c != 0		6314766	0		!=			
ANR	6314945	Identifier	c		6314766	0					
ANR	6314946	PrimaryExpression	0		6314766	1					
ANR	6314947	ReturnType	static int		6314766	1					
ANR	6314948	Identifier	expr_preprocess		6314766	2					
ANR	6314949	ParameterList			6314766	3					
ANR	6314950	CFGEntryNode	ENTRY		6314766		True				
ANR	6314951	CFGExitNode	EXIT		6314766		True				
ANR	6314952	Symbol	expr_const		6314766						
ANR	6314953	Symbol	c		6314766						
ANR	6314954	Symbol	NULL		6314766						
ANR	6314955	Symbol	TOK_IDENT		6314766						
ANR	6314956	Symbol	tokc		6314766						
ANR	6314957	Symbol	TOK_DEFINED		6314766						
ANR	6314958	Symbol	TOK_EOF		6314766						
ANR	6314959	Symbol	TOK_LINEFEED		6314766						
ANR	6314960	Symbol	str		6314766						
ANR	6314961	Symbol	& str		6314766						
ANR	6314962	Symbol	str . str		6314766						
ANR	6314963	Symbol	tok		6314766						
ANR	6314964	Symbol	t		6314766						
ANR	6314965	Symbol	macro_ptr		6314766						
ANR	6314966	Symbol	define_find		6314766						
ANR	6314967	Symbol	tokc . i		6314766						
ANR	6314968	Symbol	TOK_CINT		6314766						
ANR	6314969	Function	tok_print	1216:0:24577:24778							
ANR	6314970	FunctionDef	tok_print (int * str)		6314969	0					
ANR	6314971	CompoundStatement		1217:0:24609:24778	6314969	0					
ANR	6314972	IdentifierDeclStatement	int t ;	1218:1:24612:24617	6314969	0	True				
ANR	6314973	IdentifierDecl	t		6314969	0					
ANR	6314974	IdentifierDeclType	int		6314969	0					
ANR	6314975	Identifier	t		6314969	1					
ANR	6314976	IdentifierDeclStatement	CValue cval ;	1219:1:24620:24631	6314969	1	True				
ANR	6314977	IdentifierDecl	cval		6314969	0					
ANR	6314978	IdentifierDeclType	CValue		6314969	0					
ANR	6314979	Identifier	cval		6314969	1					
ANR	6314980	ExpressionStatement	"printf ( ""<"" )"	1221:1:24635:24647	6314969	2	True				
ANR	6314981	CallExpression	"printf ( ""<"" )"		6314969	0					
ANR	6314982	Callee	printf		6314969	0					
ANR	6314983	Identifier	printf		6314969	0					
ANR	6314984	ArgumentList	"""<"""		6314969	1					
ANR	6314985	Argument	"""<"""		6314969	0					
ANR	6314986	PrimaryExpression	"""<"""		6314969	0					
ANR	6314987	WhileStatement	while ( 1 )		6314969	3					
ANR	6314988	Condition	1	1222:8:24657:24657	6314969	0	True				
ANR	6314989	PrimaryExpression	1		6314969	0					
ANR	6314990	CompoundStatement		6:11:50:50	6314969	1					
ANR	6314991	ExpressionStatement	"TOK_GET ( & t , & str , & cval )"	1223:2:24664:24689	6314969	0	True				
ANR	6314992	CallExpression	"TOK_GET ( & t , & str , & cval )"		6314969	0					
ANR	6314993	Callee	TOK_GET		6314969	0					
ANR	6314994	Identifier	TOK_GET		6314969	0					
ANR	6314995	ArgumentList	& t		6314969	1					
ANR	6314996	Argument	& t		6314969	0					
ANR	6314997	UnaryOperationExpression	& t		6314969	0					
ANR	6314998	UnaryOperator	&		6314969	0					
ANR	6314999	Identifier	t		6314969	1					
ANR	6315000	Argument	& str		6314969	1					
ANR	6315001	UnaryOperationExpression	& str		6314969	0					
ANR	6315002	UnaryOperator	&		6314969	0					
ANR	6315003	Identifier	str		6314969	1					
ANR	6315004	Argument	& cval		6314969	2					
ANR	6315005	UnaryOperationExpression	& cval		6314969	0					
ANR	6315006	UnaryOperator	&		6314969	0					
ANR	6315007	Identifier	cval		6314969	1					
ANR	6315008	IfStatement	if ( ! t )		6314969	1					
ANR	6315009	Condition	! t	1224:6:24697:24698	6314969	0	True				
ANR	6315010	UnaryOperationExpression	! t		6314969	0					
ANR	6315011	UnaryOperator	!		6314969	0					
ANR	6315012	Identifier	t		6314969	1					
ANR	6315013	CompoundStatement		8:10:91:91	6314969	1					
ANR	6315014	BreakStatement	break ;	1225:3:24706:24711	6314969	0	True				
ANR	6315015	ExpressionStatement	"printf ( ""%s"" , get_tok_str ( t , & cval ) )"	1227:2:24719:24756	6314969	2	True				
ANR	6315016	CallExpression	"printf ( ""%s"" , get_tok_str ( t , & cval ) )"		6314969	0					
ANR	6315017	Callee	printf		6314969	0					
ANR	6315018	Identifier	printf		6314969	0					
ANR	6315019	ArgumentList	"""%s"""		6314969	1					
ANR	6315020	Argument	"""%s"""		6314969	0					
ANR	6315021	PrimaryExpression	"""%s"""		6314969	0					
ANR	6315022	Argument	"get_tok_str ( t , & cval )"		6314969	1					
ANR	6315023	CallExpression	"get_tok_str ( t , & cval )"		6314969	0					
ANR	6315024	Callee	get_tok_str		6314969	0					
ANR	6315025	Identifier	get_tok_str		6314969	0					
ANR	6315026	ArgumentList	t		6314969	1					
ANR	6315027	Argument	t		6314969	0					
ANR	6315028	Identifier	t		6314969	0					
ANR	6315029	Argument	& cval		6314969	1					
ANR	6315030	UnaryOperationExpression	& cval		6314969	0					
ANR	6315031	UnaryOperator	&		6314969	0					
ANR	6315032	Identifier	cval		6314969	1					
ANR	6315033	ExpressionStatement	"printf ( "">\\n"" )"	1229:1:24762:24776	6314969	4	True				
ANR	6315034	CallExpression	"printf ( "">\\n"" )"		6314969	0					
ANR	6315035	Callee	printf		6314969	0					
ANR	6315036	Identifier	printf		6314969	0					
ANR	6315037	ArgumentList	""">\\n"""		6314969	1					
ANR	6315038	Argument	""">\\n"""		6314969	0					
ANR	6315039	PrimaryExpression	""">\\n"""		6314969	0					
ANR	6315040	ReturnType	static void		6314969	1					
ANR	6315041	Identifier	tok_print		6314969	2					
ANR	6315042	ParameterList	int * str		6314969	3					
ANR	6315043	Parameter	int * str	1216:22:24599:24606	6314969	0	True				
ANR	6315044	ParameterType	int *		6314969	0					
ANR	6315045	Identifier	str		6314969	1					
ANR	6315046	CFGEntryNode	ENTRY		6314969		True				
ANR	6315047	CFGExitNode	EXIT		6314969		True				
ANR	6315048	Symbol	str		6314969						
ANR	6315049	Symbol	cval		6314969						
ANR	6315050	Symbol	& str		6314969						
ANR	6315051	Symbol	& cval		6314969						
ANR	6315052	Symbol	t		6314969						
ANR	6315053	Symbol	get_tok_str		6314969						
ANR	6315054	Symbol	& t		6314969						
ANR	6315055	Function	parse_define	1234:0:24814:26456							
ANR	6315056	FunctionDef	parse_define ()		6315055	0					
ANR	6315057	CompoundStatement		1235:0:24846:26456	6315055	0					
ANR	6315058	IdentifierDeclStatement	"Sym * s , * first , * * ps ;"	1236:1:24849:24869	6315055	0	True				
ANR	6315059	IdentifierDecl	* s		6315055	0					
ANR	6315060	IdentifierDeclType	Sym *		6315055	0					
ANR	6315061	Identifier	s		6315055	1					
ANR	6315062	IdentifierDecl	* first		6315055	1					
ANR	6315063	IdentifierDeclType	Sym *		6315055	0					
ANR	6315064	Identifier	first		6315055	1					
ANR	6315065	IdentifierDecl	* * ps		6315055	2					
ANR	6315066	IdentifierDeclType	Sym * *		6315055	0					
ANR	6315067	Identifier	ps		6315055	1					
ANR	6315068	IdentifierDeclStatement	"int v , t , varg , is_vaargs , spc ;"	1237:1:24872:24902	6315055	1	True				
ANR	6315069	IdentifierDecl	v		6315055	0					
ANR	6315070	IdentifierDeclType	int		6315055	0					
ANR	6315071	Identifier	v		6315055	1					
ANR	6315072	IdentifierDecl	t		6315055	1					
ANR	6315073	IdentifierDeclType	int		6315055	0					
ANR	6315074	Identifier	t		6315055	1					
ANR	6315075	IdentifierDecl	varg		6315055	2					
ANR	6315076	IdentifierDeclType	int		6315055	0					
ANR	6315077	Identifier	varg		6315055	1					
ANR	6315078	IdentifierDecl	is_vaargs		6315055	3					
ANR	6315079	IdentifierDeclType	int		6315055	0					
ANR	6315080	Identifier	is_vaargs		6315055	1					
ANR	6315081	IdentifierDecl	spc		6315055	4					
ANR	6315082	IdentifierDeclType	int		6315055	0					
ANR	6315083	Identifier	spc		6315055	1					
ANR	6315084	IdentifierDeclStatement	TokenString str ;	1238:1:24905:24920	6315055	2	True				
ANR	6315085	IdentifierDecl	str		6315055	0					
ANR	6315086	IdentifierDeclType	TokenString		6315055	0					
ANR	6315087	Identifier	str		6315055	1					
ANR	6315088	ExpressionStatement	v = tok	1240:1:24924:24931	6315055	3	True				
ANR	6315089	AssignmentExpression	v = tok		6315055	0		=			
ANR	6315090	Identifier	v		6315055	0					
ANR	6315091	Identifier	tok		6315055	1					
ANR	6315092	IfStatement	if ( v < TOK_IDENT )		6315055	4					
ANR	6315093	Condition	v < TOK_IDENT	1241:5:24938:24950	6315055	0	True				
ANR	6315094	RelationalExpression	v < TOK_IDENT		6315055	0		<			
ANR	6315095	Identifier	v		6315055	0					
ANR	6315096	Identifier	TOK_IDENT		6315055	1					
ANR	6315097	CompoundStatement		7:20:106:106	6315055	1					
ANR	6315098	ExpressionStatement	"tcc_error ( ""invalid macro name '%s'"" , get_tok_str ( tok , & tokc ) )"	1242:2:24957:25020	6315055	0	True				
ANR	6315099	CallExpression	"tcc_error ( ""invalid macro name '%s'"" , get_tok_str ( tok , & tokc ) )"		6315055	0					
ANR	6315100	Callee	tcc_error		6315055	0					
ANR	6315101	Identifier	tcc_error		6315055	0					
ANR	6315102	ArgumentList	"""invalid macro name '%s'"""		6315055	1					
ANR	6315103	Argument	"""invalid macro name '%s'"""		6315055	0					
ANR	6315104	PrimaryExpression	"""invalid macro name '%s'"""		6315055	0					
ANR	6315105	Argument	"get_tok_str ( tok , & tokc )"		6315055	1					
ANR	6315106	CallExpression	"get_tok_str ( tok , & tokc )"		6315055	0					
ANR	6315107	Callee	get_tok_str		6315055	0					
ANR	6315108	Identifier	get_tok_str		6315055	0					
ANR	6315109	ArgumentList	tok		6315055	1					
ANR	6315110	Argument	tok		6315055	0					
ANR	6315111	Identifier	tok		6315055	0					
ANR	6315112	Argument	& tokc		6315055	1					
ANR	6315113	UnaryOperationExpression	& tokc		6315055	0					
ANR	6315114	UnaryOperator	&		6315055	0					
ANR	6315115	Identifier	tokc		6315055	1					
ANR	6315116	ExpressionStatement	first = NULL	1245:1:25072:25084	6315055	5	True				
ANR	6315117	AssignmentExpression	first = NULL		6315055	0		=			
ANR	6315118	Identifier	first		6315055	0					
ANR	6315119	Identifier	NULL		6315055	1					
ANR	6315120	ExpressionStatement	t = MACRO_OBJ	1246:1:25087:25100	6315055	6	True				
ANR	6315121	AssignmentExpression	t = MACRO_OBJ		6315055	0		=			
ANR	6315122	Identifier	t		6315055	0					
ANR	6315123	Identifier	MACRO_OBJ		6315055	1					
ANR	6315124	ExpressionStatement	next_nomacro_spc ( )	1248:1:25165:25184	6315055	7	True				
ANR	6315125	CallExpression	next_nomacro_spc ( )		6315055	0					
ANR	6315126	Callee	next_nomacro_spc		6315055	0					
ANR	6315127	Identifier	next_nomacro_spc		6315055	0					
ANR	6315128	ArgumentList			6315055	1					
ANR	6315129	IfStatement	if ( tok == '(' )		6315055	8					
ANR	6315130	Condition	tok == '('	1249:5:25191:25200	6315055	0	True				
ANR	6315131	EqualityExpression	tok == '('		6315055	0		==			
ANR	6315132	Identifier	tok		6315055	0					
ANR	6315133	PrimaryExpression	'('		6315055	1					
ANR	6315134	CompoundStatement		15:17:356:356	6315055	1					
ANR	6315135	ExpressionStatement	next_nomacro ( )	1250:2:25207:25222	6315055	0	True				
ANR	6315136	CallExpression	next_nomacro ( )		6315055	0					
ANR	6315137	Callee	next_nomacro		6315055	0					
ANR	6315138	Identifier	next_nomacro		6315055	0					
ANR	6315139	ArgumentList			6315055	1					
ANR	6315140	ExpressionStatement	ps = & first	1251:2:25226:25237	6315055	1	True				
ANR	6315141	AssignmentExpression	ps = & first		6315055	0		=			
ANR	6315142	Identifier	ps		6315055	0					
ANR	6315143	UnaryOperationExpression	& first		6315055	1					
ANR	6315144	UnaryOperator	&		6315055	0					
ANR	6315145	Identifier	first		6315055	1					
ANR	6315146	WhileStatement	while ( tok != ')' )		6315055	2					
ANR	6315147	Condition	tok != ')'	1252:9:25248:25257	6315055	0	True				
ANR	6315148	EqualityExpression	tok != ')'		6315055	0		!=			
ANR	6315149	Identifier	tok		6315055	0					
ANR	6315150	PrimaryExpression	')'		6315055	1					
ANR	6315151	CompoundStatement		18:21:413:413	6315055	1					
ANR	6315152	ExpressionStatement	varg = tok	1253:3:25265:25275	6315055	0	True				
ANR	6315153	AssignmentExpression	varg = tok		6315055	0		=			
ANR	6315154	Identifier	varg		6315055	0					
ANR	6315155	Identifier	tok		6315055	1					
ANR	6315156	ExpressionStatement	next_nomacro ( )	1254:3:25280:25295	6315055	1	True				
ANR	6315157	CallExpression	next_nomacro ( )		6315055	0					
ANR	6315158	Callee	next_nomacro		6315055	0					
ANR	6315159	Identifier	next_nomacro		6315055	0					
ANR	6315160	ArgumentList			6315055	1					
ANR	6315161	ExpressionStatement	is_vaargs = 0	1255:3:25300:25313	6315055	2	True				
ANR	6315162	AssignmentExpression	is_vaargs = 0		6315055	0		=			
ANR	6315163	Identifier	is_vaargs		6315055	0					
ANR	6315164	PrimaryExpression	0		6315055	1					
ANR	6315165	IfStatement	if ( varg == TOK_DOTS )		6315055	3					
ANR	6315166	Condition	varg == TOK_DOTS	1256:7:25322:25337	6315055	0	True				
ANR	6315167	EqualityExpression	varg == TOK_DOTS		6315055	0		==			
ANR	6315168	Identifier	varg		6315055	0					
ANR	6315169	Identifier	TOK_DOTS		6315055	1					
ANR	6315170	CompoundStatement		22:25:493:493	6315055	1					
ANR	6315171	ExpressionStatement	varg = TOK___VA_ARGS__	1257:4:25346:25368	6315055	0	True				
ANR	6315172	AssignmentExpression	varg = TOK___VA_ARGS__		6315055	0		=			
ANR	6315173	Identifier	varg		6315055	0					
ANR	6315174	Identifier	TOK___VA_ARGS__		6315055	1					
ANR	6315175	ExpressionStatement	is_vaargs = 1	1258:4:25374:25387	6315055	1	True				
ANR	6315176	AssignmentExpression	is_vaargs = 1		6315055	0		=			
ANR	6315177	Identifier	is_vaargs		6315055	0					
ANR	6315178	PrimaryExpression	1		6315055	1					
ANR	6315179	ElseStatement	else		6315055	0					
ANR	6315180	IfStatement	if ( tok == TOK_DOTS && gnu_ext )		6315055	0					
ANR	6315181	Condition	tok == TOK_DOTS && gnu_ext	1259:14:25403:25428	6315055	0	True				
ANR	6315182	AndExpression	tok == TOK_DOTS && gnu_ext		6315055	0		&&			
ANR	6315183	EqualityExpression	tok == TOK_DOTS		6315055	0		==			
ANR	6315184	Identifier	tok		6315055	0					
ANR	6315185	Identifier	TOK_DOTS		6315055	1					
ANR	6315186	Identifier	gnu_ext		6315055	1					
ANR	6315187	CompoundStatement		25:42:584:584	6315055	1					
ANR	6315188	ExpressionStatement	is_vaargs = 1	1260:4:25437:25450	6315055	0	True				
ANR	6315189	AssignmentExpression	is_vaargs = 1		6315055	0		=			
ANR	6315190	Identifier	is_vaargs		6315055	0					
ANR	6315191	PrimaryExpression	1		6315055	1					
ANR	6315192	ExpressionStatement	next_nomacro ( )	1261:4:25456:25471	6315055	1	True				
ANR	6315193	CallExpression	next_nomacro ( )		6315055	0					
ANR	6315194	Callee	next_nomacro		6315055	0					
ANR	6315195	Identifier	next_nomacro		6315055	0					
ANR	6315196	ArgumentList			6315055	1					
ANR	6315197	IfStatement	if ( varg < TOK_IDENT )		6315055	4					
ANR	6315198	Condition	varg < TOK_IDENT	1263:7:25485:25500	6315055	0	True				
ANR	6315199	RelationalExpression	varg < TOK_IDENT		6315055	0		<			
ANR	6315200	Identifier	varg		6315055	0					
ANR	6315201	Identifier	TOK_IDENT		6315055	1					
ANR	6315202	CompoundStatement		29:25:656:656	6315055	1					
ANR	6315203	ExpressionStatement	"tcc_error ( ""badly punctuated parameter list"" )"	1264:4:25509:25554	6315055	0	True				
ANR	6315204	CallExpression	"tcc_error ( ""badly punctuated parameter list"" )"		6315055	0					
ANR	6315205	Callee	tcc_error		6315055	0					
ANR	6315206	Identifier	tcc_error		6315055	0					
ANR	6315207	ArgumentList	"""badly punctuated parameter list"""		6315055	1					
ANR	6315208	Argument	"""badly punctuated parameter list"""		6315055	0					
ANR	6315209	PrimaryExpression	"""badly punctuated parameter list"""		6315055	0					
ANR	6315210	ExpressionStatement	"s = sym_push2 ( & define_stack , varg | SYM_FIELD , is_vaargs , 0 )"	1266:3:25564:25625	6315055	5	True				
ANR	6315211	AssignmentExpression	"s = sym_push2 ( & define_stack , varg | SYM_FIELD , is_vaargs , 0 )"		6315055	0		=			
ANR	6315212	Identifier	s		6315055	0					
ANR	6315213	CallExpression	"sym_push2 ( & define_stack , varg | SYM_FIELD , is_vaargs , 0 )"		6315055	1					
ANR	6315214	Callee	sym_push2		6315055	0					
ANR	6315215	Identifier	sym_push2		6315055	0					
ANR	6315216	ArgumentList	& define_stack		6315055	1					
ANR	6315217	Argument	& define_stack		6315055	0					
ANR	6315218	UnaryOperationExpression	& define_stack		6315055	0					
ANR	6315219	UnaryOperator	&		6315055	0					
ANR	6315220	Identifier	define_stack		6315055	1					
ANR	6315221	Argument	varg | SYM_FIELD		6315055	1					
ANR	6315222	InclusiveOrExpression	varg | SYM_FIELD		6315055	0		|			
ANR	6315223	Identifier	varg		6315055	0					
ANR	6315224	Identifier	SYM_FIELD		6315055	1					
ANR	6315225	Argument	is_vaargs		6315055	2					
ANR	6315226	Identifier	is_vaargs		6315055	0					
ANR	6315227	Argument	0		6315055	3					
ANR	6315228	PrimaryExpression	0		6315055	0					
ANR	6315229	IfStatement	if ( ! s )		6315055	6					
ANR	6315230	Condition	! s	1267:7:25634:25635	6315055	0	True				
ANR	6315231	UnaryOperationExpression	! s		6315055	0					
ANR	6315232	UnaryOperator	!		6315055	0					
ANR	6315233	Identifier	s		6315055	1					
ANR	6315234	CompoundStatement		33:11:791:791	6315055	1					
ANR	6315235	ReturnStatement	return ;	1268:4:25644:25650	6315055	0	True				
ANR	6315236	ExpressionStatement	* ps = s	1270:3:25660:25667	6315055	7	True				
ANR	6315237	AssignmentExpression	* ps = s		6315055	0		=			
ANR	6315238	UnaryOperationExpression	* ps		6315055	0					
ANR	6315239	UnaryOperator	*		6315055	0					
ANR	6315240	Identifier	ps		6315055	1					
ANR	6315241	Identifier	s		6315055	1					
ANR	6315242	ExpressionStatement	ps = & s -> next	1271:3:25672:25685	6315055	8	True				
ANR	6315243	AssignmentExpression	ps = & s -> next		6315055	0		=			
ANR	6315244	Identifier	ps		6315055	0					
ANR	6315245	UnaryOperationExpression	& s -> next		6315055	1					
ANR	6315246	UnaryOperator	&		6315055	0					
ANR	6315247	PtrMemberAccess	s -> next		6315055	1					
ANR	6315248	Identifier	s		6315055	0					
ANR	6315249	Identifier	next		6315055	1					
ANR	6315250	IfStatement	"if ( tok != ',' )"		6315055	9					
ANR	6315251	Condition	"tok != ','"	1272:7:25694:25703	6315055	0	True				
ANR	6315252	EqualityExpression	"tok != ','"		6315055	0		!=			
ANR	6315253	Identifier	tok		6315055	0					
ANR	6315254	PrimaryExpression	"','"		6315055	1					
ANR	6315255	CompoundStatement		38:19:859:859	6315055	1					
ANR	6315256	BreakStatement	break ;	1273:4:25712:25717	6315055	0	True				
ANR	6315257	ExpressionStatement	next_nomacro ( )	1275:3:25727:25742	6315055	10	True				
ANR	6315258	CallExpression	next_nomacro ( )		6315055	0					
ANR	6315259	Callee	next_nomacro		6315055	0					
ANR	6315260	Identifier	next_nomacro		6315055	0					
ANR	6315261	ArgumentList			6315055	1					
ANR	6315262	IfStatement	if ( tok == ')' )		6315055	3					
ANR	6315263	Condition	tok == ')'	1277:6:25754:25763	6315055	0	True				
ANR	6315264	EqualityExpression	tok == ')'		6315055	0		==			
ANR	6315265	Identifier	tok		6315055	0					
ANR	6315266	PrimaryExpression	')'		6315055	1					
ANR	6315267	CompoundStatement		43:18:919:919	6315055	1					
ANR	6315268	ExpressionStatement	next_nomacro_spc ( )	1278:3:25771:25790	6315055	0	True				
ANR	6315269	CallExpression	next_nomacro_spc ( )		6315055	0					
ANR	6315270	Callee	next_nomacro_spc		6315055	0					
ANR	6315271	Identifier	next_nomacro_spc		6315055	0					
ANR	6315272	ArgumentList			6315055	1					
ANR	6315273	ExpressionStatement	t = MACRO_FUNC	1280:2:25798:25812	6315055	4	True				
ANR	6315274	AssignmentExpression	t = MACRO_FUNC		6315055	0		=			
ANR	6315275	Identifier	t		6315055	0					
ANR	6315276	Identifier	MACRO_FUNC		6315055	1					
ANR	6315277	ExpressionStatement	tok_str_new ( & str )	1282:1:25818:25836	6315055	9	True				
ANR	6315278	CallExpression	tok_str_new ( & str )		6315055	0					
ANR	6315279	Callee	tok_str_new		6315055	0					
ANR	6315280	Identifier	tok_str_new		6315055	0					
ANR	6315281	ArgumentList	& str		6315055	1					
ANR	6315282	Argument	& str		6315055	0					
ANR	6315283	UnaryOperationExpression	& str		6315055	0					
ANR	6315284	UnaryOperator	&		6315055	0					
ANR	6315285	Identifier	str		6315055	1					
ANR	6315286	ExpressionStatement	spc = 2	1283:1:25839:25846	6315055	10	True				
ANR	6315287	AssignmentExpression	spc = 2		6315055	0		=			
ANR	6315288	Identifier	spc		6315055	0					
ANR	6315289	PrimaryExpression	2		6315055	1					
ANR	6315290	WhileStatement	while ( tok != TOK_LINEFEED && tok != TOK_EOF )		6315055	11					
ANR	6315291	Condition	tok != TOK_LINEFEED && tok != TOK_EOF	1285:8:25903:25939	6315055	0	True				
ANR	6315292	AndExpression	tok != TOK_LINEFEED && tok != TOK_EOF		6315055	0		&&			
ANR	6315293	EqualityExpression	tok != TOK_LINEFEED		6315055	0		!=			
ANR	6315294	Identifier	tok		6315055	0					
ANR	6315295	Identifier	TOK_LINEFEED		6315055	1					
ANR	6315296	EqualityExpression	tok != TOK_EOF		6315055	1		!=			
ANR	6315297	Identifier	tok		6315055	0					
ANR	6315298	Identifier	TOK_EOF		6315055	1					
ANR	6315299	CompoundStatement		51:47:1095:1095	6315055	1					
ANR	6315300	IfStatement	if ( TOK_TWOSHARPS == tok )		6315055	0					
ANR	6315301	Condition	TOK_TWOSHARPS == tok	1287:6:25996:26015	6315055	0	True				
ANR	6315302	EqualityExpression	TOK_TWOSHARPS == tok		6315055	0		==			
ANR	6315303	Identifier	TOK_TWOSHARPS		6315055	0					
ANR	6315304	Identifier	tok		6315055	1					
ANR	6315305	CompoundStatement		53:28:1171:1171	6315055	1					
ANR	6315306	IfStatement	if ( 1 == spc )		6315055	0					
ANR	6315307	Condition	1 == spc	1288:7:26027:26034	6315055	0	True				
ANR	6315308	EqualityExpression	1 == spc		6315055	0		==			
ANR	6315309	PrimaryExpression	1		6315055	0					
ANR	6315310	Identifier	spc		6315055	1					
ANR	6315311	CompoundStatement		54:17:1190:1190	6315055	1					
ANR	6315312	ExpressionStatement	-- str . len	1289:4:26043:26052	6315055	0	True				
ANR	6315313	UnaryExpression	-- str . len		6315055	0					
ANR	6315314	IncDec	--		6315055	0					
ANR	6315315	MemberAccess	str . len		6315055	1					
ANR	6315316	Identifier	str		6315055	0					
ANR	6315317	Identifier	len		6315055	1					
ANR	6315318	ExpressionStatement	spc = 2	1291:3:26062:26069	6315055	1	True				
ANR	6315319	AssignmentExpression	spc = 2		6315055	0		=			
ANR	6315320	Identifier	spc		6315055	0					
ANR	6315321	PrimaryExpression	2		6315055	1					
ANR	6315322	ElseStatement	else		6315055	0					
ANR	6315323	IfStatement	if ( '#' == tok )		6315055	0					
ANR	6315324	Condition	'#' == tok	1292:13:26084:26093	6315055	0	True				
ANR	6315325	EqualityExpression	'#' == tok		6315055	0		==			
ANR	6315326	PrimaryExpression	'#'		6315055	0					
ANR	6315327	Identifier	tok		6315055	1					
ANR	6315328	CompoundStatement		58:25:1249:1249	6315055	1					
ANR	6315329	ExpressionStatement	spc = 2	1293:3:26101:26108	6315055	0	True				
ANR	6315330	AssignmentExpression	spc = 2		6315055	0		=			
ANR	6315331	Identifier	spc		6315055	0					
ANR	6315332	PrimaryExpression	2		6315055	1					
ANR	6315333	ElseStatement	else		6315055	0					
ANR	6315334	IfStatement	"if ( check_space ( tok , & spc ) )"		6315055	0					
ANR	6315335	Condition	"check_space ( tok , & spc )"	1294:13:26123:26145	6315055	0	True				
ANR	6315336	CallExpression	"check_space ( tok , & spc )"		6315055	0					
ANR	6315337	Callee	check_space		6315055	0					
ANR	6315338	Identifier	check_space		6315055	0					
ANR	6315339	ArgumentList	tok		6315055	1					
ANR	6315340	Argument	tok		6315055	0					
ANR	6315341	Identifier	tok		6315055	0					
ANR	6315342	Argument	& spc		6315055	1					
ANR	6315343	UnaryOperationExpression	& spc		6315055	0					
ANR	6315344	UnaryOperator	&		6315055	0					
ANR	6315345	Identifier	spc		6315055	1					
ANR	6315346	CompoundStatement		60:38:1301:1301	6315055	1					
ANR	6315347	GotoStatement	goto skip ;	1295:3:26153:26162	6315055	0	True				
ANR	6315348	Identifier	skip		6315055	0					
ANR	6315349	ExpressionStatement	"tok_str_add2 ( & str , tok , & tokc )"	1297:2:26170:26201	6315055	1	True				
ANR	6315350	CallExpression	"tok_str_add2 ( & str , tok , & tokc )"		6315055	0					
ANR	6315351	Callee	tok_str_add2		6315055	0					
ANR	6315352	Identifier	tok_str_add2		6315055	0					
ANR	6315353	ArgumentList	& str		6315055	1					
ANR	6315354	Argument	& str		6315055	0					
ANR	6315355	UnaryOperationExpression	& str		6315055	0					
ANR	6315356	UnaryOperator	&		6315055	0					
ANR	6315357	Identifier	str		6315055	1					
ANR	6315358	Argument	tok		6315055	1					
ANR	6315359	Identifier	tok		6315055	0					
ANR	6315360	Argument	& tokc		6315055	2					
ANR	6315361	UnaryOperationExpression	& tokc		6315055	0					
ANR	6315362	UnaryOperator	&		6315055	0					
ANR	6315363	Identifier	tokc		6315055	1					
ANR	6315364	Label	skip :	1298:0:26203:26207	6315055	2	True				
ANR	6315365	Identifier	skip		6315055	0					
ANR	6315366	ExpressionStatement	next_nomacro_spc ( )	1299:2:26211:26230	6315055	3	True				
ANR	6315367	CallExpression	next_nomacro_spc ( )		6315055	0					
ANR	6315368	Callee	next_nomacro_spc		6315055	0					
ANR	6315369	Identifier	next_nomacro_spc		6315055	0					
ANR	6315370	ArgumentList			6315055	1					
ANR	6315371	IfStatement	if ( spc == 1 )		6315055	12					
ANR	6315372	Condition	spc == 1	1301:5:26240:26247	6315055	0	True				
ANR	6315373	EqualityExpression	spc == 1		6315055	0		==			
ANR	6315374	Identifier	spc		6315055	0					
ANR	6315375	PrimaryExpression	1		6315055	1					
ANR	6315376	CompoundStatement		67:15:1403:1403	6315055	1					
ANR	6315377	ExpressionStatement	-- str . len	1302:2:26254:26263	6315055	0	True				
ANR	6315378	UnaryExpression	-- str . len		6315055	0					
ANR	6315379	IncDec	--		6315055	0					
ANR	6315380	MemberAccess	str . len		6315055	1					
ANR	6315381	Identifier	str		6315055	0					
ANR	6315382	Identifier	len		6315055	1					
ANR	6315383	ExpressionStatement	"tok_str_add ( & str , 0 )"	1304:1:26297:26318	6315055	13	True				
ANR	6315384	CallExpression	"tok_str_add ( & str , 0 )"		6315055	0					
ANR	6315385	Callee	tok_str_add		6315055	0					
ANR	6315386	Identifier	tok_str_add		6315055	0					
ANR	6315387	ArgumentList	& str		6315055	1					
ANR	6315388	Argument	& str		6315055	0					
ANR	6315389	UnaryOperationExpression	& str		6315055	0					
ANR	6315390	UnaryOperator	&		6315055	0					
ANR	6315391	Identifier	str		6315055	1					
ANR	6315392	Argument	0		6315055	1					
ANR	6315393	PrimaryExpression	0		6315055	0					
ANR	6315394	ExpressionStatement	"printf ( ""define %s %d: "" , get_tok_str ( v , NULL ) , t )"	1306:1:26337:26388	6315055	14	True				
ANR	6315395	CallExpression	"printf ( ""define %s %d: "" , get_tok_str ( v , NULL ) , t )"		6315055	0					
ANR	6315396	Callee	printf		6315055	0					
ANR	6315397	Identifier	printf		6315055	0					
ANR	6315398	ArgumentList	"""define %s %d: """		6315055	1					
ANR	6315399	Argument	"""define %s %d: """		6315055	0					
ANR	6315400	PrimaryExpression	"""define %s %d: """		6315055	0					
ANR	6315401	Argument	"get_tok_str ( v , NULL )"		6315055	1					
ANR	6315402	CallExpression	"get_tok_str ( v , NULL )"		6315055	0					
ANR	6315403	Callee	get_tok_str		6315055	0					
ANR	6315404	Identifier	get_tok_str		6315055	0					
ANR	6315405	ArgumentList	v		6315055	1					
ANR	6315406	Argument	v		6315055	0					
ANR	6315407	Identifier	v		6315055	0					
ANR	6315408	Argument	NULL		6315055	1					
ANR	6315409	Identifier	NULL		6315055	0					
ANR	6315410	Argument	t		6315055	2					
ANR	6315411	Identifier	t		6315055	0					
ANR	6315412	ExpressionStatement	tok_print ( str . str )	1307:1:26391:26410	6315055	15	True				
ANR	6315413	CallExpression	tok_print ( str . str )		6315055	0					
ANR	6315414	Callee	tok_print		6315055	0					
ANR	6315415	Identifier	tok_print		6315055	0					
ANR	6315416	ArgumentList	str . str		6315055	1					
ANR	6315417	Argument	str . str		6315055	0					
ANR	6315418	MemberAccess	str . str		6315055	0					
ANR	6315419	Identifier	str		6315055	0					
ANR	6315420	Identifier	str		6315055	1					
ANR	6315421	ExpressionStatement	"define_push ( v , t , str . str , first )"	1309:1:26420:26454	6315055	16	True				
ANR	6315422	CallExpression	"define_push ( v , t , str . str , first )"		6315055	0					
ANR	6315423	Callee	define_push		6315055	0					
ANR	6315424	Identifier	define_push		6315055	0					
ANR	6315425	ArgumentList	v		6315055	1					
ANR	6315426	Argument	v		6315055	0					
ANR	6315427	Identifier	v		6315055	0					
ANR	6315428	Argument	t		6315055	1					
ANR	6315429	Identifier	t		6315055	0					
ANR	6315430	Argument	str . str		6315055	2					
ANR	6315431	MemberAccess	str . str		6315055	0					
ANR	6315432	Identifier	str		6315055	0					
ANR	6315433	Identifier	str		6315055	1					
ANR	6315434	Argument	first		6315055	3					
ANR	6315435	Identifier	first		6315055	0					
ANR	6315436	ReturnType	ST_FUNC void		6315055	1					
ANR	6315437	Identifier	parse_define		6315055	2					
ANR	6315438	ParameterList			6315055	3					
ANR	6315439	CFGEntryNode	ENTRY		6315055		True				
ANR	6315440	CFGExitNode	EXIT		6315055		True				
ANR	6315441	Symbol	& define_stack		6315055						
ANR	6315442	Symbol	ps		6315055						
ANR	6315443	Symbol	get_tok_str		6315055						
ANR	6315444	Symbol	& spc		6315055						
ANR	6315445	Symbol	TOK_LINEFEED		6315055						
ANR	6315446	Symbol	sym_push2		6315055						
ANR	6315447	Symbol	& str		6315055						
ANR	6315448	Symbol	str . str		6315055						
ANR	6315449	Symbol	tok		6315055						
ANR	6315450	Symbol	SYM_FIELD		6315055						
ANR	6315451	Symbol	varg		6315055						
ANR	6315452	Symbol	& tokc		6315055						
ANR	6315453	Symbol	& first		6315055						
ANR	6315454	Symbol	NULL		6315055						
ANR	6315455	Symbol	TOK_IDENT		6315055						
ANR	6315456	Symbol	gnu_ext		6315055						
ANR	6315457	Symbol	& s -> next		6315055						
ANR	6315458	Symbol	spc		6315055						
ANR	6315459	Symbol	TOK___VA_ARGS__		6315055						
ANR	6315460	Symbol	* ps		6315055						
ANR	6315461	Symbol	TOK_EOF		6315055						
ANR	6315462	Symbol	str		6315055						
ANR	6315463	Symbol	MACRO_OBJ		6315055						
ANR	6315464	Symbol	s		6315055						
ANR	6315465	Symbol	t		6315055						
ANR	6315466	Symbol	is_vaargs		6315055						
ANR	6315467	Symbol	check_space		6315055						
ANR	6315468	Symbol	v		6315055						
ANR	6315469	Symbol	TOK_TWOSHARPS		6315055						
ANR	6315470	Symbol	MACRO_FUNC		6315055						
ANR	6315471	Symbol	TOK_DOTS		6315055						
ANR	6315472	Symbol	first		6315055						
ANR	6315473	Function	hash_cached_include	1312:0:26459:26726							
ANR	6315474	FunctionDef	hash_cached_include (const char * filename)		6315473	0					
ANR	6315475	CompoundStatement		1313:0:26519:26726	6315473	0					
ANR	6315476	IdentifierDeclStatement	const unsigned char * s ;	1314:1:26522:26544	6315473	0	True				
ANR	6315477	IdentifierDecl	* s		6315473	0					
ANR	6315478	IdentifierDeclType	const unsigned char *		6315473	0					
ANR	6315479	Identifier	s		6315473	1					
ANR	6315480	IdentifierDeclStatement	unsigned int h ;	1315:1:26547:26561	6315473	1	True				
ANR	6315481	IdentifierDecl	h		6315473	0					
ANR	6315482	IdentifierDeclType	unsigned int		6315473	0					
ANR	6315483	Identifier	h		6315473	1					
ANR	6315484	ExpressionStatement	h = TOK_HASH_INIT	1317:1:26565:26582	6315473	2	True				
ANR	6315485	AssignmentExpression	h = TOK_HASH_INIT		6315473	0		=			
ANR	6315486	Identifier	h		6315473	0					
ANR	6315487	Identifier	TOK_HASH_INIT		6315473	1					
ANR	6315488	ExpressionStatement	s = ( const unsigned char * ) filename	1318:1:26585:26621	6315473	3	True				
ANR	6315489	AssignmentExpression	s = ( const unsigned char * ) filename		6315473	0		=			
ANR	6315490	Identifier	s		6315473	0					
ANR	6315491	CastExpression	( const unsigned char * ) filename		6315473	1					
ANR	6315492	CastTarget	const unsigned char *		6315473	0					
ANR	6315493	Identifier	filename		6315473	1					
ANR	6315494	WhileStatement	while ( * s )		6315473	4					
ANR	6315495	Condition	* s	1319:8:26631:26632	6315473	0	True				
ANR	6315496	UnaryOperationExpression	* s		6315473	0					
ANR	6315497	UnaryOperator	*		6315473	0					
ANR	6315498	Identifier	s		6315473	1					
ANR	6315499	CompoundStatement		7:12:115:115	6315473	1					
ANR	6315500	ExpressionStatement	"h = TOK_HASH_FUNC ( h , * s )"	1320:2:26639:26664	6315473	0	True				
ANR	6315501	AssignmentExpression	"h = TOK_HASH_FUNC ( h , * s )"		6315473	0		=			
ANR	6315502	Identifier	h		6315473	0					
ANR	6315503	CallExpression	"TOK_HASH_FUNC ( h , * s )"		6315473	1					
ANR	6315504	Callee	TOK_HASH_FUNC		6315473	0					
ANR	6315505	Identifier	TOK_HASH_FUNC		6315473	0					
ANR	6315506	ArgumentList	h		6315473	1					
ANR	6315507	Argument	h		6315473	0					
ANR	6315508	Identifier	h		6315473	0					
ANR	6315509	Argument	* s		6315473	1					
ANR	6315510	UnaryOperationExpression	* s		6315473	0					
ANR	6315511	UnaryOperator	*		6315473	0					
ANR	6315512	Identifier	s		6315473	1					
ANR	6315513	ExpressionStatement	s ++	1321:2:26668:26671	6315473	1	True				
ANR	6315514	PostIncDecOperationExpression	s ++		6315473	0					
ANR	6315515	Identifier	s		6315473	0					
ANR	6315516	IncDec	++		6315473	1					
ANR	6315517	ExpressionStatement	h &= ( CACHED_INCLUDES_HASH_SIZE - 1 )	1323:1:26677:26713	6315473	5	True				
ANR	6315518	AssignmentExpression	h &= ( CACHED_INCLUDES_HASH_SIZE - 1 )		6315473	0		&=			
ANR	6315519	Identifier	h		6315473	0					
ANR	6315520	AdditiveExpression	CACHED_INCLUDES_HASH_SIZE - 1		6315473	1		-			
ANR	6315521	Identifier	CACHED_INCLUDES_HASH_SIZE		6315473	0					
ANR	6315522	PrimaryExpression	1		6315473	1					
ANR	6315523	ReturnStatement	return h ;	1324:1:26716:26724	6315473	6	True				
ANR	6315524	Identifier	h		6315473	0					
ANR	6315525	ReturnType	static inline int		6315473	1					
ANR	6315526	Identifier	hash_cached_include		6315473	2					
ANR	6315527	ParameterList	const char * filename		6315473	3					
ANR	6315528	Parameter	const char * filename	1312:38:26497:26516	6315473	0	True				
ANR	6315529	ParameterType	const char *		6315473	0					
ANR	6315530	Identifier	filename		6315473	1					
ANR	6315531	CFGEntryNode	ENTRY		6315473		True				
ANR	6315532	CFGExitNode	EXIT		6315473		True				
ANR	6315533	Symbol	filename		6315473						
ANR	6315534	Symbol	s		6315473						
ANR	6315535	Symbol	h		6315473						
ANR	6315536	Symbol	CACHED_INCLUDES_HASH_SIZE		6315473						
ANR	6315537	Symbol	* s		6315473						
ANR	6315538	Symbol	TOK_HASH_FUNC		6315473						
ANR	6315539	Symbol	TOK_HASH_INIT		6315473						
ANR	6315540	Function	search_cached_include	1327:0:26729:27088							
ANR	6315541	FunctionDef	"search_cached_include (TCCState * s1 , const char * filename)"		6315540	0					
ANR	6315542	CompoundStatement		1328:0:26809:27088	6315540	0					
ANR	6315543	IdentifierDeclStatement	CachedInclude * e ;	1329:1:26812:26828	6315540	0	True				
ANR	6315544	IdentifierDecl	* e		6315540	0					
ANR	6315545	IdentifierDeclType	CachedInclude *		6315540	0					
ANR	6315546	Identifier	e		6315540	1					
ANR	6315547	IdentifierDeclStatement	"int i , h ;"	1330:1:26831:26839	6315540	1	True				
ANR	6315548	IdentifierDecl	i		6315540	0					
ANR	6315549	IdentifierDeclType	int		6315540	0					
ANR	6315550	Identifier	i		6315540	1					
ANR	6315551	IdentifierDecl	h		6315540	1					
ANR	6315552	IdentifierDeclType	int		6315540	0					
ANR	6315553	Identifier	h		6315540	1					
ANR	6315554	ExpressionStatement	h = hash_cached_include ( filename )	1331:1:26842:26876	6315540	2	True				
ANR	6315555	AssignmentExpression	h = hash_cached_include ( filename )		6315540	0		=			
ANR	6315556	Identifier	h		6315540	0					
ANR	6315557	CallExpression	hash_cached_include ( filename )		6315540	1					
ANR	6315558	Callee	hash_cached_include		6315540	0					
ANR	6315559	Identifier	hash_cached_include		6315540	0					
ANR	6315560	ArgumentList	filename		6315540	1					
ANR	6315561	Argument	filename		6315540	0					
ANR	6315562	Identifier	filename		6315540	0					
ANR	6315563	ExpressionStatement	i = s1 -> cached_includes_hash [ h ]	1332:1:26879:26910	6315540	3	True				
ANR	6315564	AssignmentExpression	i = s1 -> cached_includes_hash [ h ]		6315540	0		=			
ANR	6315565	Identifier	i		6315540	0					
ANR	6315566	ArrayIndexing	s1 -> cached_includes_hash [ h ]		6315540	1					
ANR	6315567	PtrMemberAccess	s1 -> cached_includes_hash		6315540	0					
ANR	6315568	Identifier	s1		6315540	0					
ANR	6315569	Identifier	cached_includes_hash		6315540	1					
ANR	6315570	Identifier	h		6315540	1					
ANR	6315571	ForStatement	for ( ; ; )		6315540	4					
ANR	6315572	CompoundStatement		6:10:112:112	6315540	0					
ANR	6315573	IfStatement	if ( i == 0 )		6315540	0					
ANR	6315574	Condition	i == 0	1334:6:26930:26935	6315540	0	True				
ANR	6315575	EqualityExpression	i == 0		6315540	0		==			
ANR	6315576	Identifier	i		6315540	0					
ANR	6315577	PrimaryExpression	0		6315540	1					
ANR	6315578	CompoundStatement		7:14:128:128	6315540	1					
ANR	6315579	BreakStatement	break ;	1335:3:26943:26948	6315540	0	True				
ANR	6315580	ExpressionStatement	e = s1 -> cached_includes [ i - 1 ]	1337:2:26956:26986	6315540	1	True				
ANR	6315581	AssignmentExpression	e = s1 -> cached_includes [ i - 1 ]		6315540	0		=			
ANR	6315582	Identifier	e		6315540	0					
ANR	6315583	ArrayIndexing	s1 -> cached_includes [ i - 1 ]		6315540	1					
ANR	6315584	PtrMemberAccess	s1 -> cached_includes		6315540	0					
ANR	6315585	Identifier	s1		6315540	0					
ANR	6315586	Identifier	cached_includes		6315540	1					
ANR	6315587	AdditiveExpression	i - 1		6315540	1		-			
ANR	6315588	Identifier	i		6315540	0					
ANR	6315589	PrimaryExpression	1		6315540	1					
ANR	6315590	IfStatement	"if ( 0 == PATHCMP ( e -> filename , filename ) )"		6315540	2					
ANR	6315591	Condition	"0 == PATHCMP ( e -> filename , filename )"	1338:6:26994:27029	6315540	0	True				
ANR	6315592	EqualityExpression	"0 == PATHCMP ( e -> filename , filename )"		6315540	0		==			
ANR	6315593	PrimaryExpression	0		6315540	0					
ANR	6315594	CallExpression	"PATHCMP ( e -> filename , filename )"		6315540	1					
ANR	6315595	Callee	PATHCMP		6315540	0					
ANR	6315596	Identifier	PATHCMP		6315540	0					
ANR	6315597	ArgumentList	e -> filename		6315540	1					
ANR	6315598	Argument	e -> filename		6315540	0					
ANR	6315599	PtrMemberAccess	e -> filename		6315540	0					
ANR	6315600	Identifier	e		6315540	0					
ANR	6315601	Identifier	filename		6315540	1					
ANR	6315602	Argument	filename		6315540	1					
ANR	6315603	Identifier	filename		6315540	0					
ANR	6315604	CompoundStatement		11:44:222:222	6315540	1					
ANR	6315605	ReturnStatement	return e ;	1339:3:27037:27045	6315540	0	True				
ANR	6315606	Identifier	e		6315540	0					
ANR	6315607	ExpressionStatement	i = e -> hash_next	1341:2:27053:27069	6315540	3	True				
ANR	6315608	AssignmentExpression	i = e -> hash_next		6315540	0		=			
ANR	6315609	Identifier	i		6315540	0					
ANR	6315610	PtrMemberAccess	e -> hash_next		6315540	1					
ANR	6315611	Identifier	e		6315540	0					
ANR	6315612	Identifier	hash_next		6315540	1					
ANR	6315613	ReturnStatement	return NULL ;	1343:1:27075:27086	6315540	5	True				
ANR	6315614	Identifier	NULL		6315540	0					
ANR	6315615	ReturnType	static CachedInclude *		6315540	1					
ANR	6315616	Identifier	search_cached_include		6315540	2					
ANR	6315617	ParameterList	"TCCState * s1 , const char * filename"		6315540	3					
ANR	6315618	Parameter	TCCState * s1	1327:44:26773:26784	6315540	0	True				
ANR	6315619	ParameterType	TCCState *		6315540	0					
ANR	6315620	Identifier	s1		6315540	1					
ANR	6315621	Parameter	const char * filename	1327:58:26787:26806	6315540	1	True				
ANR	6315622	ParameterType	const char *		6315540	0					
ANR	6315623	Identifier	filename		6315540	1					
ANR	6315624	CFGEntryNode	ENTRY		6315540		True				
ANR	6315625	CFGExitNode	EXIT		6315540		True				
ANR	6315626	InfiniteForNode	true		6315540		True				
ANR	6315627	Symbol	* s1 -> cached_includes		6315540						
ANR	6315628	Symbol	NULL		6315540						
ANR	6315629	Symbol	e		6315540						
ANR	6315630	Symbol	* s1		6315540						
ANR	6315631	Symbol	h		6315540						
ANR	6315632	Symbol	* * s1		6315540						
ANR	6315633	Symbol	i		6315540						
ANR	6315634	Symbol	e -> hash_next		6315540						
ANR	6315635	Symbol	* e		6315540						
ANR	6315636	Symbol	* h		6315540						
ANR	6315637	Symbol	filename		6315540						
ANR	6315638	Symbol	hash_cached_include		6315540						
ANR	6315639	Symbol	* i		6315540						
ANR	6315640	Symbol	s1 -> cached_includes_hash		6315540						
ANR	6315641	Symbol	s1 -> cached_includes		6315540						
ANR	6315642	Symbol	* s1 -> cached_includes_hash		6315540						
ANR	6315643	Symbol	s1		6315540						
ANR	6315644	Symbol	e -> filename		6315540						
ANR	6315645	Symbol	PATHCMP		6315540						
ANR	6315646	Function	add_cached_include	1346:0:27091:27738							
ANR	6315647	FunctionDef	"add_cached_include (TCCState * s1 , const char * filename , int ifndef_macro)"		6315646	0					
ANR	6315648	CompoundStatement		1347:0:27183:27738	6315646	0					
ANR	6315649	IdentifierDeclStatement	CachedInclude * e ;	1348:1:27186:27202	6315646	0	True				
ANR	6315650	IdentifierDecl	* e		6315646	0					
ANR	6315651	IdentifierDeclType	CachedInclude *		6315646	0					
ANR	6315652	Identifier	e		6315646	1					
ANR	6315653	IdentifierDeclStatement	int h ;	1349:1:27205:27210	6315646	1	True				
ANR	6315654	IdentifierDecl	h		6315646	0					
ANR	6315655	IdentifierDeclType	int		6315646	0					
ANR	6315656	Identifier	h		6315646	1					
ANR	6315657	IfStatement	"if ( search_cached_include ( s1 , filename ) )"		6315646	2					
ANR	6315658	Condition	"search_cached_include ( s1 , filename )"	1351:5:27218:27253	6315646	0	True				
ANR	6315659	CallExpression	"search_cached_include ( s1 , filename )"		6315646	0					
ANR	6315660	Callee	search_cached_include		6315646	0					
ANR	6315661	Identifier	search_cached_include		6315646	0					
ANR	6315662	ArgumentList	s1		6315646	1					
ANR	6315663	Argument	s1		6315646	0					
ANR	6315664	Identifier	s1		6315646	0					
ANR	6315665	Argument	filename		6315646	1					
ANR	6315666	Identifier	filename		6315646	0					
ANR	6315667	CompoundStatement		5:43:72:72	6315646	1					
ANR	6315668	ReturnStatement	return ;	1352:2:27260:27266	6315646	0	True				
ANR	6315669	ExpressionStatement	"printf ( ""adding cached '%s' %s\\n"" , filename , get_tok_str ( ifndef_macro , NULL ) )"	1355:1:27289:27367	6315646	3	True				
ANR	6315670	CallExpression	"printf ( ""adding cached '%s' %s\\n"" , filename , get_tok_str ( ifndef_macro , NULL ) )"		6315646	0					
ANR	6315671	Callee	printf		6315646	0					
ANR	6315672	Identifier	printf		6315646	0					
ANR	6315673	ArgumentList	"""adding cached '%s' %s\\n"""		6315646	1					
ANR	6315674	Argument	"""adding cached '%s' %s\\n"""		6315646	0					
ANR	6315675	PrimaryExpression	"""adding cached '%s' %s\\n"""		6315646	0					
ANR	6315676	Argument	filename		6315646	1					
ANR	6315677	Identifier	filename		6315646	0					
ANR	6315678	Argument	"get_tok_str ( ifndef_macro , NULL )"		6315646	2					
ANR	6315679	CallExpression	"get_tok_str ( ifndef_macro , NULL )"		6315646	0					
ANR	6315680	Callee	get_tok_str		6315646	0					
ANR	6315681	Identifier	get_tok_str		6315646	0					
ANR	6315682	ArgumentList	ifndef_macro		6315646	1					
ANR	6315683	Argument	ifndef_macro		6315646	0					
ANR	6315684	Identifier	ifndef_macro		6315646	0					
ANR	6315685	Argument	NULL		6315646	1					
ANR	6315686	Identifier	NULL		6315646	0					
ANR	6315687	ExpressionStatement	e = malloc ( sizeof ( CachedInclude ) + strlen ( filename ) )	1357:1:27377:27431	6315646	4	True				
ANR	6315688	AssignmentExpression	e = malloc ( sizeof ( CachedInclude ) + strlen ( filename ) )		6315646	0		=			
ANR	6315689	Identifier	e		6315646	0					
ANR	6315690	CallExpression	malloc ( sizeof ( CachedInclude ) + strlen ( filename ) )		6315646	1					
ANR	6315691	Callee	malloc		6315646	0					
ANR	6315692	Identifier	malloc		6315646	0					
ANR	6315693	ArgumentList	sizeof ( CachedInclude ) + strlen ( filename )		6315646	1					
ANR	6315694	Argument	sizeof ( CachedInclude ) + strlen ( filename )		6315646	0					
ANR	6315695	AdditiveExpression	sizeof ( CachedInclude ) + strlen ( filename )		6315646	0		+			
ANR	6315696	SizeofExpression	sizeof ( CachedInclude )		6315646	0					
ANR	6315697	Sizeof	sizeof		6315646	0					
ANR	6315698	SizeofOperand	CachedInclude		6315646	1					
ANR	6315699	CallExpression	strlen ( filename )		6315646	1					
ANR	6315700	Callee	strlen		6315646	0					
ANR	6315701	Identifier	strlen		6315646	0					
ANR	6315702	ArgumentList	filename		6315646	1					
ANR	6315703	Argument	filename		6315646	0					
ANR	6315704	Identifier	filename		6315646	0					
ANR	6315705	ExpressionStatement	"strcpy ( e -> filename , filename )"	1358:1:27434:27464	6315646	5	True				
ANR	6315706	CallExpression	"strcpy ( e -> filename , filename )"		6315646	0					
ANR	6315707	Callee	strcpy		6315646	0					
ANR	6315708	Identifier	strcpy		6315646	0					
ANR	6315709	ArgumentList	e -> filename		6315646	1					
ANR	6315710	Argument	e -> filename		6315646	0					
ANR	6315711	PtrMemberAccess	e -> filename		6315646	0					
ANR	6315712	Identifier	e		6315646	0					
ANR	6315713	Identifier	filename		6315646	1					
ANR	6315714	Argument	filename		6315646	1					
ANR	6315715	Identifier	filename		6315646	0					
ANR	6315716	ExpressionStatement	e -> ifndef_macro = ifndef_macro	1359:1:27467:27497	6315646	6	True				
ANR	6315717	AssignmentExpression	e -> ifndef_macro = ifndef_macro		6315646	0		=			
ANR	6315718	PtrMemberAccess	e -> ifndef_macro		6315646	0					
ANR	6315719	Identifier	e		6315646	0					
ANR	6315720	Identifier	ifndef_macro		6315646	1					
ANR	6315721	Identifier	ifndef_macro		6315646	1					
ANR	6315722	ExpressionStatement	"dynarray_add ( ( void * * * ) & s1 -> cached_includes , & s1 -> nb_cached_includes , e )"	1360:1:27500:27574	6315646	7	True				
ANR	6315723	CallExpression	"dynarray_add ( ( void * * * ) & s1 -> cached_includes , & s1 -> nb_cached_includes , e )"		6315646	0					
ANR	6315724	Callee	dynarray_add		6315646	0					
ANR	6315725	Identifier	dynarray_add		6315646	0					
ANR	6315726	ArgumentList	( void * * * ) & s1 -> cached_includes		6315646	1					
ANR	6315727	Argument	( void * * * ) & s1 -> cached_includes		6315646	0					
ANR	6315728	CastExpression	( void * * * ) & s1 -> cached_includes		6315646	0					
ANR	6315729	CastTarget	void * * *		6315646	0					
ANR	6315730	UnaryOperationExpression	& s1 -> cached_includes		6315646	1					
ANR	6315731	UnaryOperator	&		6315646	0					
ANR	6315732	PtrMemberAccess	s1 -> cached_includes		6315646	1					
ANR	6315733	Identifier	s1		6315646	0					
ANR	6315734	Identifier	cached_includes		6315646	1					
ANR	6315735	Argument	& s1 -> nb_cached_includes		6315646	1					
ANR	6315736	UnaryOperationExpression	& s1 -> nb_cached_includes		6315646	0					
ANR	6315737	UnaryOperator	&		6315646	0					
ANR	6315738	PtrMemberAccess	s1 -> nb_cached_includes		6315646	1					
ANR	6315739	Identifier	s1		6315646	0					
ANR	6315740	Identifier	nb_cached_includes		6315646	1					
ANR	6315741	Argument	e		6315646	2					
ANR	6315742	Identifier	e		6315646	0					
ANR	6315743	ExpressionStatement	h = hash_cached_include ( filename )	1362:1:27602:27636	6315646	8	True				
ANR	6315744	AssignmentExpression	h = hash_cached_include ( filename )		6315646	0		=			
ANR	6315745	Identifier	h		6315646	0					
ANR	6315746	CallExpression	hash_cached_include ( filename )		6315646	1					
ANR	6315747	Callee	hash_cached_include		6315646	0					
ANR	6315748	Identifier	hash_cached_include		6315646	0					
ANR	6315749	ArgumentList	filename		6315646	1					
ANR	6315750	Argument	filename		6315646	0					
ANR	6315751	Identifier	filename		6315646	0					
ANR	6315752	ExpressionStatement	e -> hash_next = s1 -> cached_includes_hash [ h ]	1363:1:27639:27681	6315646	9	True				
ANR	6315753	AssignmentExpression	e -> hash_next = s1 -> cached_includes_hash [ h ]		6315646	0		=			
ANR	6315754	PtrMemberAccess	e -> hash_next		6315646	0					
ANR	6315755	Identifier	e		6315646	0					
ANR	6315756	Identifier	hash_next		6315646	1					
ANR	6315757	ArrayIndexing	s1 -> cached_includes_hash [ h ]		6315646	1					
ANR	6315758	PtrMemberAccess	s1 -> cached_includes_hash		6315646	0					
ANR	6315759	Identifier	s1		6315646	0					
ANR	6315760	Identifier	cached_includes_hash		6315646	1					
ANR	6315761	Identifier	h		6315646	1					
ANR	6315762	ExpressionStatement	s1 -> cached_includes_hash [ h ] = s1 -> nb_cached_includes	1364:1:27684:27736	6315646	10	True				
ANR	6315763	AssignmentExpression	s1 -> cached_includes_hash [ h ] = s1 -> nb_cached_includes		6315646	0		=			
ANR	6315764	ArrayIndexing	s1 -> cached_includes_hash [ h ]		6315646	0					
ANR	6315765	PtrMemberAccess	s1 -> cached_includes_hash		6315646	0					
ANR	6315766	Identifier	s1		6315646	0					
ANR	6315767	Identifier	cached_includes_hash		6315646	1					
ANR	6315768	Identifier	h		6315646	1					
ANR	6315769	PtrMemberAccess	s1 -> nb_cached_includes		6315646	1					
ANR	6315770	Identifier	s1		6315646	0					
ANR	6315771	Identifier	nb_cached_includes		6315646	1					
ANR	6315772	ReturnType	static inline void		6315646	1					
ANR	6315773	Identifier	add_cached_include		6315646	2					
ANR	6315774	ParameterList	"TCCState * s1 , const char * filename , int ifndef_macro"		6315646	3					
ANR	6315775	Parameter	TCCState * s1	1346:38:27129:27140	6315646	0	True				
ANR	6315776	ParameterType	TCCState *		6315646	0					
ANR	6315777	Identifier	s1		6315646	1					
ANR	6315778	Parameter	const char * filename	1346:52:27143:27162	6315646	1	True				
ANR	6315779	ParameterType	const char *		6315646	0					
ANR	6315780	Identifier	filename		6315646	1					
ANR	6315781	Parameter	int ifndef_macro	1346:74:27165:27180	6315646	2	True				
ANR	6315782	ParameterType	int		6315646	0					
ANR	6315783	Identifier	ifndef_macro		6315646	1					
ANR	6315784	CFGEntryNode	ENTRY		6315646		True				
ANR	6315785	CFGExitNode	EXIT		6315646		True				
ANR	6315786	Symbol	malloc		6315646						
ANR	6315787	Symbol	& s1 -> cached_includes		6315646						
ANR	6315788	Symbol	ifndef_macro		6315646						
ANR	6315789	Symbol	NULL		6315646						
ANR	6315790	Symbol	get_tok_str		6315646						
ANR	6315791	Symbol	e		6315646						
ANR	6315792	Symbol	s1 -> nb_cached_includes		6315646						
ANR	6315793	Symbol	* s1		6315646						
ANR	6315794	Symbol	h		6315646						
ANR	6315795	Symbol	* * s1		6315646						
ANR	6315796	Symbol	search_cached_include		6315646						
ANR	6315797	Symbol	e -> hash_next		6315646						
ANR	6315798	Symbol	* e		6315646						
ANR	6315799	Symbol	strlen		6315646						
ANR	6315800	Symbol	* h		6315646						
ANR	6315801	Symbol	filename		6315646						
ANR	6315802	Symbol	hash_cached_include		6315646						
ANR	6315803	Symbol	s1 -> cached_includes_hash		6315646						
ANR	6315804	Symbol	* s1 -> cached_includes_hash		6315646						
ANR	6315805	Symbol	& s1 -> nb_cached_includes		6315646						
ANR	6315806	Symbol	s1		6315646						
ANR	6315807	Symbol	e -> filename		6315646						
ANR	6315808	Symbol	e -> ifndef_macro		6315646						
ANR	6315809	Function	pragma_parse	1367:0:27741:28688							
ANR	6315810	FunctionDef	pragma_parse (TCCState * s1)		6315809	0					
ANR	6315811	CompoundStatement		1368:0:27780:28688	6315809	0					
ANR	6315812	IdentifierDeclStatement	int val ;	1369:1:27783:27790	6315809	0	True				
ANR	6315813	IdentifierDecl	val		6315809	0					
ANR	6315814	IdentifierDeclType	int		6315809	0					
ANR	6315815	Identifier	val		6315809	1					
ANR	6315816	ExpressionStatement	next ( )	1371:1:27794:27801	6315809	1	True				
ANR	6315817	CallExpression	next ( )		6315809	0					
ANR	6315818	Callee	next		6315809	0					
ANR	6315819	Identifier	next		6315809	0					
ANR	6315820	ArgumentList			6315809	1					
ANR	6315821	IfStatement	if ( tok == TOK_pack )		6315809	2					
ANR	6315822	Condition	tok == TOK_pack	1372:5:27808:27822	6315809	0	True				
ANR	6315823	EqualityExpression	tok == TOK_pack		6315809	0		==			
ANR	6315824	Identifier	tok		6315809	0					
ANR	6315825	Identifier	TOK_pack		6315809	1					
ANR	6315826	CompoundStatement		5:22:44:44	6315809	1					
ANR	6315827	ExpressionStatement	next ( )	1380:2:28003:28010	6315809	0	True				
ANR	6315828	CallExpression	next ( )		6315809	0					
ANR	6315829	Callee	next		6315809	0					
ANR	6315830	Identifier	next		6315809	0					
ANR	6315831	ArgumentList			6315809	1					
ANR	6315832	ExpressionStatement	skip ( '(' )	1381:2:28014:28024	6315809	1	True				
ANR	6315833	CallExpression	skip ( '(' )		6315809	0					
ANR	6315834	Callee	skip		6315809	0					
ANR	6315835	Identifier	skip		6315809	0					
ANR	6315836	ArgumentList	'('		6315809	1					
ANR	6315837	Argument	'('		6315809	0					
ANR	6315838	PrimaryExpression	'('		6315809	0					
ANR	6315839	IfStatement	if ( tok == TOK_ASM_pop )		6315809	2					
ANR	6315840	Condition	tok == TOK_ASM_pop	1382:6:28032:28049	6315809	0	True				
ANR	6315841	EqualityExpression	tok == TOK_ASM_pop		6315809	0		==			
ANR	6315842	Identifier	tok		6315809	0					
ANR	6315843	Identifier	TOK_ASM_pop		6315809	1					
ANR	6315844	CompoundStatement		15:26:271:271	6315809	1					
ANR	6315845	ExpressionStatement	next ( )	1383:3:28057:28064	6315809	0	True				
ANR	6315846	CallExpression	next ( )		6315809	0					
ANR	6315847	Callee	next		6315809	0					
ANR	6315848	Identifier	next		6315809	0					
ANR	6315849	ArgumentList			6315809	1					
ANR	6315850	IfStatement	if ( s1 -> pack_stack_ptr <= s1 -> pack_stack )		6315809	1					
ANR	6315851	Condition	s1 -> pack_stack_ptr <= s1 -> pack_stack	1384:7:28073:28108	6315809	0	True				
ANR	6315852	RelationalExpression	s1 -> pack_stack_ptr <= s1 -> pack_stack		6315809	0		<=			
ANR	6315853	PtrMemberAccess	s1 -> pack_stack_ptr		6315809	0					
ANR	6315854	Identifier	s1		6315809	0					
ANR	6315855	Identifier	pack_stack_ptr		6315809	1					
ANR	6315856	PtrMemberAccess	s1 -> pack_stack		6315809	1					
ANR	6315857	Identifier	s1		6315809	0					
ANR	6315858	Identifier	pack_stack		6315809	1					
ANR	6315859	CompoundStatement		17:45:330:330	6315809	1					
ANR	6315860	Label	stk_error :	1385:0:28113:28122	6315809	0	True				
ANR	6315861	Identifier	stk_error		6315809	0					
ANR	6315862	ExpressionStatement	"tcc_error ( ""out of pack stack"" )"	1386:4:28128:28159	6315809	1	True				
ANR	6315863	CallExpression	"tcc_error ( ""out of pack stack"" )"		6315809	0					
ANR	6315864	Callee	tcc_error		6315809	0					
ANR	6315865	Identifier	tcc_error		6315809	0					
ANR	6315866	ArgumentList	"""out of pack stack"""		6315809	1					
ANR	6315867	Argument	"""out of pack stack"""		6315809	0					
ANR	6315868	PrimaryExpression	"""out of pack stack"""		6315809	0					
ANR	6315869	ExpressionStatement	s1 -> pack_stack_ptr --	1388:3:28169:28189	6315809	2	True				
ANR	6315870	PostIncDecOperationExpression	s1 -> pack_stack_ptr --		6315809	0					
ANR	6315871	PtrMemberAccess	s1 -> pack_stack_ptr		6315809	0					
ANR	6315872	Identifier	s1		6315809	0					
ANR	6315873	Identifier	pack_stack_ptr		6315809	1					
ANR	6315874	IncDec	--		6315809	1					
ANR	6315875	ElseStatement	else		6315809	0					
ANR	6315876	CompoundStatement		22:9:419:419	6315809	0					
ANR	6315877	ExpressionStatement	val = 0	1390:3:28205:28212	6315809	0	True				
ANR	6315878	AssignmentExpression	val = 0		6315809	0		=			
ANR	6315879	Identifier	val		6315809	0					
ANR	6315880	PrimaryExpression	0		6315809	1					
ANR	6315881	IfStatement	if ( tok != ')' )		6315809	1					
ANR	6315882	Condition	tok != ')'	1391:7:28221:28230	6315809	0	True				
ANR	6315883	EqualityExpression	tok != ')'		6315809	0		!=			
ANR	6315884	Identifier	tok		6315809	0					
ANR	6315885	PrimaryExpression	')'		6315809	1					
ANR	6315886	CompoundStatement		24:19:452:452	6315809	1					
ANR	6315887	IfStatement	if ( tok == TOK_ASM_push )		6315809	0					
ANR	6315888	Condition	tok == TOK_ASM_push	1392:8:28243:28261	6315809	0	True				
ANR	6315889	EqualityExpression	tok == TOK_ASM_push		6315809	0		==			
ANR	6315890	Identifier	tok		6315809	0					
ANR	6315891	Identifier	TOK_ASM_push		6315809	1					
ANR	6315892	CompoundStatement		25:29:483:483	6315809	1					
ANR	6315893	ExpressionStatement	next ( )	1393:5:28271:28278	6315809	0	True				
ANR	6315894	CallExpression	next ( )		6315809	0					
ANR	6315895	Callee	next		6315809	0					
ANR	6315896	Identifier	next		6315809	0					
ANR	6315897	ArgumentList			6315809	1					
ANR	6315898	IfStatement	if ( s1 -> pack_stack_ptr >= s1 -> pack_stack + PACK_STACK_SIZE - 1 )		6315809	1					
ANR	6315899	Condition	s1 -> pack_stack_ptr >= s1 -> pack_stack + PACK_STACK_SIZE - 1	1394:9:28289:28346	6315809	0	True				
ANR	6315900	RelationalExpression	s1 -> pack_stack_ptr >= s1 -> pack_stack + PACK_STACK_SIZE - 1		6315809	0		>=			
ANR	6315901	PtrMemberAccess	s1 -> pack_stack_ptr		6315809	0					
ANR	6315902	Identifier	s1		6315809	0					
ANR	6315903	Identifier	pack_stack_ptr		6315809	1					
ANR	6315904	AdditiveExpression	s1 -> pack_stack + PACK_STACK_SIZE - 1		6315809	1		+			
ANR	6315905	PtrMemberAccess	s1 -> pack_stack		6315809	0					
ANR	6315906	Identifier	s1		6315809	0					
ANR	6315907	Identifier	pack_stack		6315809	1					
ANR	6315908	AdditiveExpression	PACK_STACK_SIZE - 1		6315809	1		-			
ANR	6315909	Identifier	PACK_STACK_SIZE		6315809	0					
ANR	6315910	PrimaryExpression	1		6315809	1					
ANR	6315911	CompoundStatement		27:69:568:568	6315809	1					
ANR	6315912	GotoStatement	goto stk_error ;	1395:6:28357:28371	6315809	0	True				
ANR	6315913	Identifier	stk_error		6315809	0					
ANR	6315914	ExpressionStatement	s1 -> pack_stack_ptr ++	1397:5:28385:28405	6315809	2	True				
ANR	6315915	PostIncDecOperationExpression	s1 -> pack_stack_ptr ++		6315809	0					
ANR	6315916	PtrMemberAccess	s1 -> pack_stack_ptr		6315809	0					
ANR	6315917	Identifier	s1		6315809	0					
ANR	6315918	Identifier	pack_stack_ptr		6315809	1					
ANR	6315919	IncDec	++		6315809	1					
ANR	6315920	ExpressionStatement	"skip ( ',' )"	1398:5:28412:28422	6315809	3	True				
ANR	6315921	CallExpression	"skip ( ',' )"		6315809	0					
ANR	6315922	Callee	skip		6315809	0					
ANR	6315923	Identifier	skip		6315809	0					
ANR	6315924	ArgumentList	"','"		6315809	1					
ANR	6315925	Argument	"','"		6315809	0					
ANR	6315926	PrimaryExpression	"','"		6315809	0					
ANR	6315927	IfStatement	if ( tok != TOK_CINT )		6315809	1					
ANR	6315928	Condition	tok != TOK_CINT	1400:8:28438:28452	6315809	0	True				
ANR	6315929	EqualityExpression	tok != TOK_CINT		6315809	0		!=			
ANR	6315930	Identifier	tok		6315809	0					
ANR	6315931	Identifier	TOK_CINT		6315809	1					
ANR	6315932	CompoundStatement		33:25:674:674	6315809	1					
ANR	6315933	Label	pack_error :	1401:0:28457:28467	6315809	0	True				
ANR	6315934	Identifier	pack_error		6315809	0					
ANR	6315935	ExpressionStatement	"tcc_error ( ""invalid pack pragma"" )"	1402:5:28474:28507	6315809	1	True				
ANR	6315936	CallExpression	"tcc_error ( ""invalid pack pragma"" )"		6315809	0					
ANR	6315937	Callee	tcc_error		6315809	0					
ANR	6315938	Identifier	tcc_error		6315809	0					
ANR	6315939	ArgumentList	"""invalid pack pragma"""		6315809	1					
ANR	6315940	Argument	"""invalid pack pragma"""		6315809	0					
ANR	6315941	PrimaryExpression	"""invalid pack pragma"""		6315809	0					
ANR	6315942	ExpressionStatement	val = tokc . i	1404:4:28519:28531	6315809	2	True				
ANR	6315943	AssignmentExpression	val = tokc . i		6315809	0		=			
ANR	6315944	Identifier	val		6315809	0					
ANR	6315945	MemberAccess	tokc . i		6315809	1					
ANR	6315946	Identifier	tokc		6315809	0					
ANR	6315947	Identifier	i		6315809	1					
ANR	6315948	IfStatement	if ( val < 1 || val > 16 || ( val & ( val - 1 ) ) != 0 )		6315809	3					
ANR	6315949	Condition	val < 1 || val > 16 || ( val & ( val - 1 ) ) != 0	1405:8:28541:28585	6315809	0	True				
ANR	6315950	OrExpression	val < 1 || val > 16 || ( val & ( val - 1 ) ) != 0		6315809	0		||			
ANR	6315951	RelationalExpression	val < 1		6315809	0		<			
ANR	6315952	Identifier	val		6315809	0					
ANR	6315953	PrimaryExpression	1		6315809	1					
ANR	6315954	OrExpression	val > 16 || ( val & ( val - 1 ) ) != 0		6315809	1		||			
ANR	6315955	RelationalExpression	val > 16		6315809	0		>			
ANR	6315956	Identifier	val		6315809	0					
ANR	6315957	PrimaryExpression	16		6315809	1					
ANR	6315958	EqualityExpression	( val & ( val - 1 ) ) != 0		6315809	1		!=			
ANR	6315959	BitAndExpression	val & ( val - 1 )		6315809	0		&			
ANR	6315960	Identifier	val		6315809	0					
ANR	6315961	AdditiveExpression	val - 1		6315809	1		-			
ANR	6315962	Identifier	val		6315809	0					
ANR	6315963	PrimaryExpression	1		6315809	1					
ANR	6315964	PrimaryExpression	0		6315809	1					
ANR	6315965	CompoundStatement		38:55:807:807	6315809	1					
ANR	6315966	GotoStatement	goto pack_error ;	1406:5:28595:28610	6315809	0	True				
ANR	6315967	Identifier	pack_error		6315809	0					
ANR	6315968	ExpressionStatement	next ( )	1408:4:28622:28629	6315809	4	True				
ANR	6315969	CallExpression	next ( )		6315809	0					
ANR	6315970	Callee	next		6315809	0					
ANR	6315971	Identifier	next		6315809	0					
ANR	6315972	ArgumentList			6315809	1					
ANR	6315973	ExpressionStatement	* s1 -> pack_stack_ptr = val	1410:3:28639:28664	6315809	2	True				
ANR	6315974	AssignmentExpression	* s1 -> pack_stack_ptr = val		6315809	0		=			
ANR	6315975	UnaryOperationExpression	* s1 -> pack_stack_ptr		6315809	0					
ANR	6315976	UnaryOperator	*		6315809	0					
ANR	6315977	PtrMemberAccess	s1 -> pack_stack_ptr		6315809	1					
ANR	6315978	Identifier	s1		6315809	0					
ANR	6315979	Identifier	pack_stack_ptr		6315809	1					
ANR	6315980	Identifier	val		6315809	1					
ANR	6315981	ExpressionStatement	skip ( ')' )	1411:3:28669:28679	6315809	3	True				
ANR	6315982	CallExpression	skip ( ')' )		6315809	0					
ANR	6315983	Callee	skip		6315809	0					
ANR	6315984	Identifier	skip		6315809	0					
ANR	6315985	ArgumentList	')'		6315809	1					
ANR	6315986	Argument	')'		6315809	0					
ANR	6315987	PrimaryExpression	')'		6315809	0					
ANR	6315988	ReturnType	static void		6315809	1					
ANR	6315989	Identifier	pragma_parse		6315809	2					
ANR	6315990	ParameterList	TCCState * s1		6315809	3					
ANR	6315991	Parameter	TCCState * s1	1367:25:27766:27777	6315809	0	True				
ANR	6315992	ParameterType	TCCState *		6315809	0					
ANR	6315993	Identifier	s1		6315809	1					
ANR	6315994	CFGEntryNode	ENTRY		6315809		True				
ANR	6315995	CFGExitNode	EXIT		6315809		True				
ANR	6315996	Symbol	val		6315809						
ANR	6315997	Symbol	* s1 -> pack_stack_ptr		6315809						
ANR	6315998	Symbol	TOK_ASM_push		6315809						
ANR	6315999	Symbol	tokc		6315809						
ANR	6316000	Symbol	s1 -> pack_stack		6315809						
ANR	6316001	Symbol	* s1		6315809						
ANR	6316002	Symbol	* * s1		6315809						
ANR	6316003	Symbol	TOK_ASM_pop		6315809						
ANR	6316004	Symbol	TOK_pack		6315809						
ANR	6316005	Symbol	tok		6315809						
ANR	6316006	Symbol	s1 -> pack_stack_ptr		6315809						
ANR	6316007	Symbol	PACK_STACK_SIZE		6315809						
ANR	6316008	Symbol	s1		6315809						
ANR	6316009	Symbol	tokc . i		6315809						
ANR	6316010	Symbol	TOK_CINT		6315809						
ANR	6316011	Function	preprocess	1417:0:28758:37489							
ANR	6316012	FunctionDef	preprocess (int is_bof)		6316011	0					
ANR	6316013	CompoundStatement		1418:0:28794:37489	6316011	0					
ANR	6316014	IdentifierDeclStatement	TCCState * s1 = tcc_state ;	1419:1:28797:28821	6316011	0	True				
ANR	6316015	IdentifierDecl	* s1 = tcc_state		6316011	0					
ANR	6316016	IdentifierDeclType	TCCState *		6316011	0					
ANR	6316017	Identifier	s1		6316011	1					
ANR	6316018	AssignmentExpression	* s1 = tcc_state		6316011	2		=			
ANR	6316019	Identifier	tcc_state		6316011	0					
ANR	6316020	Identifier	tcc_state		6316011	1					
ANR	6316021	IdentifierDeclStatement	"int i , c , n , saved_parse_flags ;"	1420:1:28824:28854	6316011	1	True				
ANR	6316022	IdentifierDecl	i		6316011	0					
ANR	6316023	IdentifierDeclType	int		6316011	0					
ANR	6316024	Identifier	i		6316011	1					
ANR	6316025	IdentifierDecl	c		6316011	1					
ANR	6316026	IdentifierDeclType	int		6316011	0					
ANR	6316027	Identifier	c		6316011	1					
ANR	6316028	IdentifierDecl	n		6316011	2					
ANR	6316029	IdentifierDeclType	int		6316011	0					
ANR	6316030	Identifier	n		6316011	1					
ANR	6316031	IdentifierDecl	saved_parse_flags		6316011	3					
ANR	6316032	IdentifierDeclType	int		6316011	0					
ANR	6316033	Identifier	saved_parse_flags		6316011	1					
ANR	6316034	IdentifierDeclStatement	"char buf [ 1024 ] , * q ;"	1421:1:28857:28875	6316011	2	True				
ANR	6316035	IdentifierDecl	buf [ 1024 ]		6316011	0					
ANR	6316036	IdentifierDeclType	char [ 1024 ]		6316011	0					
ANR	6316037	Identifier	buf		6316011	1					
ANR	6316038	PrimaryExpression	1024		6316011	2					
ANR	6316039	IdentifierDecl	* q		6316011	1					
ANR	6316040	IdentifierDeclType	char *		6316011	0					
ANR	6316041	Identifier	q		6316011	1					
ANR	6316042	IdentifierDeclStatement	Sym * s ;	1422:1:28878:28884	6316011	3	True				
ANR	6316043	IdentifierDecl	* s		6316011	0					
ANR	6316044	IdentifierDeclType	Sym *		6316011	0					
ANR	6316045	Identifier	s		6316011	1					
ANR	6316046	ExpressionStatement	saved_parse_flags = parse_flags	1424:1:28888:28919	6316011	4	True				
ANR	6316047	AssignmentExpression	saved_parse_flags = parse_flags		6316011	0		=			
ANR	6316048	Identifier	saved_parse_flags		6316011	0					
ANR	6316049	Identifier	parse_flags		6316011	1					
ANR	6316050	ExpressionStatement	parse_flags = PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED	1425:1:28922:29008	6316011	5	True				
ANR	6316051	AssignmentExpression	parse_flags = PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED		6316011	0		=			
ANR	6316052	Identifier	parse_flags		6316011	0					
ANR	6316053	InclusiveOrExpression	PARSE_FLAG_PREPROCESS | PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED		6316011	1		|			
ANR	6316054	Identifier	PARSE_FLAG_PREPROCESS		6316011	0					
ANR	6316055	InclusiveOrExpression	PARSE_FLAG_TOK_NUM | PARSE_FLAG_LINEFEED		6316011	1		|			
ANR	6316056	Identifier	PARSE_FLAG_TOK_NUM		6316011	0					
ANR	6316057	Identifier	PARSE_FLAG_LINEFEED		6316011	1					
ANR	6316058	ExpressionStatement	next_nomacro ( )	1427:1:29011:29026	6316011	6	True				
ANR	6316059	CallExpression	next_nomacro ( )		6316011	0					
ANR	6316060	Callee	next_nomacro		6316011	0					
ANR	6316061	Identifier	next_nomacro		6316011	0					
ANR	6316062	ArgumentList			6316011	1					
ANR	6316063	Label	redo :	1428:0:29028:29032	6316011	7	True				
ANR	6316064	Identifier	redo		6316011	0					
ANR	6316065	SwitchStatement	switch ( tok )		6316011	8					
ANR	6316066	Condition	tok	1429:9:29043:29045	6316011	0	True				
ANR	6316067	Identifier	tok		6316011	0					
ANR	6316068	CompoundStatement		12:14:253:253	6316011	1					
ANR	6316069	Label	case TOK_DEFINE :	1430:1:29051:29066	6316011	0	True				
ANR	6316070	Identifier	TOK_DEFINE		6316011	0					
ANR	6316071	ExpressionStatement	next_nomacro ( )	1431:2:29070:29085	6316011	1	True				
ANR	6316072	CallExpression	next_nomacro ( )		6316011	0					
ANR	6316073	Callee	next_nomacro		6316011	0					
ANR	6316074	Identifier	next_nomacro		6316011	0					
ANR	6316075	ArgumentList			6316011	1					
ANR	6316076	ExpressionStatement	parse_define ( )	1432:2:29089:29104	6316011	2	True				
ANR	6316077	CallExpression	parse_define ( )		6316011	0					
ANR	6316078	Callee	parse_define		6316011	0					
ANR	6316079	Identifier	parse_define		6316011	0					
ANR	6316080	ArgumentList			6316011	1					
ANR	6316081	BreakStatement	break ;	1433:2:29108:29113	6316011	3	True				
ANR	6316082	Label	case TOK_UNDEF :	1434:1:29116:29130	6316011	4	True				
ANR	6316083	Identifier	TOK_UNDEF		6316011	0					
ANR	6316084	ExpressionStatement	next_nomacro ( )	1435:2:29134:29149	6316011	5	True				
ANR	6316085	CallExpression	next_nomacro ( )		6316011	0					
ANR	6316086	Callee	next_nomacro		6316011	0					
ANR	6316087	Identifier	next_nomacro		6316011	0					
ANR	6316088	ArgumentList			6316011	1					
ANR	6316089	ExpressionStatement	s = define_find ( tok )	1436:2:29153:29174	6316011	6	True				
ANR	6316090	AssignmentExpression	s = define_find ( tok )		6316011	0		=			
ANR	6316091	Identifier	s		6316011	0					
ANR	6316092	CallExpression	define_find ( tok )		6316011	1					
ANR	6316093	Callee	define_find		6316011	0					
ANR	6316094	Identifier	define_find		6316011	0					
ANR	6316095	ArgumentList	tok		6316011	1					
ANR	6316096	Argument	tok		6316011	0					
ANR	6316097	Identifier	tok		6316011	0					
ANR	6316098	IfStatement	if ( s )		6316011	7					
ANR	6316099	Condition	s	1438:6:29233:29233	6316011	0	True				
ANR	6316100	Identifier	s		6316011	0					
ANR	6316101	CompoundStatement		21:9:441:441	6316011	1					
ANR	6316102	ExpressionStatement	define_undef ( s )	1439:3:29241:29257	6316011	0	True				
ANR	6316103	CallExpression	define_undef ( s )		6316011	0					
ANR	6316104	Callee	define_undef		6316011	0					
ANR	6316105	Identifier	define_undef		6316011	0					
ANR	6316106	ArgumentList	s		6316011	1					
ANR	6316107	Argument	s		6316011	0					
ANR	6316108	Identifier	s		6316011	0					
ANR	6316109	BreakStatement	break ;	1441:2:29265:29270	6316011	8	True				
ANR	6316110	Label	case TOK_INCLUDE :	1442:1:29273:29289	6316011	9	True				
ANR	6316111	Identifier	TOK_INCLUDE		6316011	0					
ANR	6316112	Label	case TOK_INCLUDE_NEXT :	1443:1:29292:29313	6316011	10	True				
ANR	6316113	Identifier	TOK_INCLUDE_NEXT		6316011	0					
ANR	6316114	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1444:2:29317:29338	6316011	11	True				
ANR	6316115	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6316011	0		=			
ANR	6316116	Identifier	ch		6316011	0					
ANR	6316117	ArrayIndexing	file -> buf_ptr [ 0 ]		6316011	1					
ANR	6316118	PtrMemberAccess	file -> buf_ptr		6316011	0					
ANR	6316119	Identifier	file		6316011	0					
ANR	6316120	Identifier	buf_ptr		6316011	1					
ANR	6316121	PrimaryExpression	0		6316011	1					
ANR	6316122	ExpressionStatement	skip_spaces ( )	1446:2:29416:29430	6316011	12	True				
ANR	6316123	CallExpression	skip_spaces ( )		6316011	0					
ANR	6316124	Callee	skip_spaces		6316011	0					
ANR	6316125	Identifier	skip_spaces		6316011	0					
ANR	6316126	ArgumentList			6316011	1					
ANR	6316127	IfStatement	if ( ch == '<' )		6316011	13					
ANR	6316128	Condition	ch == '<'	1447:6:29438:29446	6316011	0	True				
ANR	6316129	EqualityExpression	ch == '<'		6316011	0		==			
ANR	6316130	Identifier	ch		6316011	0					
ANR	6316131	PrimaryExpression	'<'		6316011	1					
ANR	6316132	CompoundStatement		30:17:654:654	6316011	1					
ANR	6316133	ExpressionStatement	c = '>'	1448:3:29454:29461	6316011	0	True				
ANR	6316134	AssignmentExpression	c = '>'		6316011	0		=			
ANR	6316135	Identifier	c		6316011	0					
ANR	6316136	PrimaryExpression	'>'		6316011	1					
ANR	6316137	GotoStatement	goto read_name ;	1449:3:29466:29480	6316011	1	True				
ANR	6316138	Identifier	read_name		6316011	0					
ANR	6316139	ElseStatement	else		6316011	0					
ANR	6316140	IfStatement	"if ( ch == '\\""' )"		6316011	0					
ANR	6316141	Condition	"ch == '\\""'"	1450:13:29495:29504	6316011	0	True				
ANR	6316142	EqualityExpression	"ch == '\\""'"		6316011	0		==			
ANR	6316143	Identifier	ch		6316011	0					
ANR	6316144	PrimaryExpression	"'\\""'"		6316011	1					
ANR	6316145	CompoundStatement		33:25:712:712	6316011	1					
ANR	6316146	ExpressionStatement	c = ch	1451:3:29512:29518	6316011	0	True				
ANR	6316147	AssignmentExpression	c = ch		6316011	0		=			
ANR	6316148	Identifier	c		6316011	0					
ANR	6316149	Identifier	ch		6316011	1					
ANR	6316150	Label	read_name :	1452:0:29520:29529	6316011	1	True				
ANR	6316151	Identifier	read_name		6316011	0					
ANR	6316152	ExpressionStatement	inp ( )	1453:3:29534:29540	6316011	2	True				
ANR	6316153	CallExpression	inp ( )		6316011	0					
ANR	6316154	Callee	inp		6316011	0					
ANR	6316155	Identifier	inp		6316011	0					
ANR	6316156	ArgumentList			6316011	1					
ANR	6316157	ExpressionStatement	q = buf	1454:3:29545:29552	6316011	3	True				
ANR	6316158	AssignmentExpression	q = buf		6316011	0		=			
ANR	6316159	Identifier	q		6316011	0					
ANR	6316160	Identifier	buf		6316011	1					
ANR	6316161	WhileStatement	while ( ch != c && ch != '\\n' && ch != CH_EOF )		6316011	4					
ANR	6316162	Condition	ch != c && ch != '\\n' && ch != CH_EOF	1455:10:29564:29600	6316011	0	True				
ANR	6316163	AndExpression	ch != c && ch != '\\n' && ch != CH_EOF		6316011	0		&&			
ANR	6316164	EqualityExpression	ch != c		6316011	0		!=			
ANR	6316165	Identifier	ch		6316011	0					
ANR	6316166	Identifier	c		6316011	1					
ANR	6316167	AndExpression	ch != '\\n' && ch != CH_EOF		6316011	1		&&			
ANR	6316168	EqualityExpression	ch != '\\n'		6316011	0		!=			
ANR	6316169	Identifier	ch		6316011	0					
ANR	6316170	PrimaryExpression	'\\n'		6316011	1					
ANR	6316171	EqualityExpression	ch != CH_EOF		6316011	1		!=			
ANR	6316172	Identifier	ch		6316011	0					
ANR	6316173	Identifier	CH_EOF		6316011	1					
ANR	6316174	CompoundStatement		38:49:808:808	6316011	1					
ANR	6316175	IfStatement	if ( ( q - buf ) < sizeof ( buf ) - 1 )		6316011	0					
ANR	6316176	Condition	( q - buf ) < sizeof ( buf ) - 1	1456:8:29613:29639	6316011	0	True				
ANR	6316177	RelationalExpression	( q - buf ) < sizeof ( buf ) - 1		6316011	0		<			
ANR	6316178	AdditiveExpression	q - buf		6316011	0		-			
ANR	6316179	Identifier	q		6316011	0					
ANR	6316180	Identifier	buf		6316011	1					
ANR	6316181	AdditiveExpression	sizeof ( buf ) - 1		6316011	1		-			
ANR	6316182	SizeofExpression	sizeof ( buf )		6316011	0					
ANR	6316183	Sizeof	sizeof		6316011	0					
ANR	6316184	SizeofOperand	buf		6316011	1					
ANR	6316185	PrimaryExpression	1		6316011	1					
ANR	6316186	CompoundStatement		39:37:847:847	6316011	1					
ANR	6316187	ExpressionStatement	* q ++ = ch	1457:5:29649:29658	6316011	0	True				
ANR	6316188	AssignmentExpression	* q ++ = ch		6316011	0		=			
ANR	6316189	UnaryOperationExpression	* q ++		6316011	0					
ANR	6316190	UnaryOperator	*		6316011	0					
ANR	6316191	PostIncDecOperationExpression	q ++		6316011	1					
ANR	6316192	Identifier	q		6316011	0					
ANR	6316193	IncDec	++		6316011	1					
ANR	6316194	Identifier	ch		6316011	1					
ANR	6316195	IfStatement	if ( ch == '\\\\' )		6316011	1					
ANR	6316196	Condition	ch == '\\\\'	1459:8:29674:29683	6316011	0	True				
ANR	6316197	EqualityExpression	ch == '\\\\'		6316011	0		==			
ANR	6316198	Identifier	ch		6316011	0					
ANR	6316199	PrimaryExpression	'\\\\'		6316011	1					
ANR	6316200	CompoundStatement		42:20:891:891	6316011	1					
ANR	6316201	IfStatement	if ( handle_stray_noerror ( ) == 0 )		6316011	0					
ANR	6316202	Condition	handle_stray_noerror ( ) == 0	1460:9:29697:29724	6316011	0	True				
ANR	6316203	EqualityExpression	handle_stray_noerror ( ) == 0		6316011	0		==			
ANR	6316204	CallExpression	handle_stray_noerror ( )		6316011	0					
ANR	6316205	Callee	handle_stray_noerror		6316011	0					
ANR	6316206	Identifier	handle_stray_noerror		6316011	0					
ANR	6316207	ArgumentList			6316011	1					
ANR	6316208	PrimaryExpression	0		6316011	1					
ANR	6316209	CompoundStatement		43:39:932:932	6316011	1					
ANR	6316210	ExpressionStatement	-- q	1461:6:29735:29738	6316011	0	True				
ANR	6316211	UnaryExpression	-- q		6316011	0					
ANR	6316212	IncDec	--		6316011	0					
ANR	6316213	Identifier	q		6316011	1					
ANR	6316214	ElseStatement	else		6316011	0					
ANR	6316215	CompoundStatement		46:11:963:963	6316011	0					
ANR	6316216	ExpressionStatement	inp ( )	1464:5:29765:29771	6316011	0	True				
ANR	6316217	CallExpression	inp ( )		6316011	0					
ANR	6316218	Callee	inp		6316011	0					
ANR	6316219	Identifier	inp		6316011	0					
ANR	6316220	ArgumentList			6316011	1					
ANR	6316221	ExpressionStatement	* q = '\\0'	1467:3:29787:29796	6316011	5	True				
ANR	6316222	AssignmentExpression	* q = '\\0'		6316011	0		=			
ANR	6316223	UnaryOperationExpression	* q		6316011	0					
ANR	6316224	UnaryOperator	*		6316011	0					
ANR	6316225	Identifier	q		6316011	1					
ANR	6316226	PrimaryExpression	'\\0'		6316011	1					
ANR	6316227	ExpressionStatement	minp ( )	1468:3:29801:29808	6316011	6	True				
ANR	6316228	CallExpression	minp ( )		6316011	0					
ANR	6316229	Callee	minp		6316011	0					
ANR	6316230	Identifier	minp		6316011	0					
ANR	6316231	ArgumentList			6316011	1					
ANR	6316232	WhileStatement	while ( ch1 != '\\n' && ch1 != CH_EOF )		6316011	7					
ANR	6316233	Condition	ch1 != '\\n' && ch1 != CH_EOF	1472:10:29910:29937	6316011	0	True				
ANR	6316234	AndExpression	ch1 != '\\n' && ch1 != CH_EOF		6316011	0		&&			
ANR	6316235	EqualityExpression	ch1 != '\\n'		6316011	0		!=			
ANR	6316236	Identifier	ch1		6316011	0					
ANR	6316237	PrimaryExpression	'\\n'		6316011	1					
ANR	6316238	EqualityExpression	ch1 != CH_EOF		6316011	1		!=			
ANR	6316239	Identifier	ch1		6316011	0					
ANR	6316240	Identifier	CH_EOF		6316011	1					
ANR	6316241	ExpressionStatement	inp ( )	1473:4:29944:29950	6316011	1	True				
ANR	6316242	CallExpression	inp ( )		6316011	0					
ANR	6316243	Callee	inp		6316011	0					
ANR	6316244	Identifier	inp		6316011	0					
ANR	6316245	ArgumentList			6316011	1					
ANR	6316246	ElseStatement	else		6316011	0					
ANR	6316247	CompoundStatement		58:9:1173:1173	6316011	0					
ANR	6316248	ExpressionStatement	next ( )	1478:3:30073:30080	6316011	0	True				
ANR	6316249	CallExpression	next ( )		6316011	0					
ANR	6316250	Callee	next		6316011	0					
ANR	6316251	Identifier	next		6316011	0					
ANR	6316252	ArgumentList			6316011	1					
ANR	6316253	ExpressionStatement	buf [ 0 ] = '\\0'	1479:3:30085:30098	6316011	1	True				
ANR	6316254	AssignmentExpression	buf [ 0 ] = '\\0'		6316011	0		=			
ANR	6316255	ArrayIndexing	buf [ 0 ]		6316011	0					
ANR	6316256	Identifier	buf		6316011	0					
ANR	6316257	PrimaryExpression	0		6316011	1					
ANR	6316258	PrimaryExpression	'\\0'		6316011	1					
ANR	6316259	IfStatement	if ( tok == TOK_STR )		6316011	2					
ANR	6316260	Condition	tok == TOK_STR	1480:7:30107:30120	6316011	0	True				
ANR	6316261	EqualityExpression	tok == TOK_STR		6316011	0		==			
ANR	6316262	Identifier	tok		6316011	0					
ANR	6316263	Identifier	TOK_STR		6316011	1					
ANR	6316264	CompoundStatement		63:23:1328:1328	6316011	1					
ANR	6316265	WhileStatement	while ( tok != TOK_LINEFEED )		6316011	0					
ANR	6316266	Condition	tok != TOK_LINEFEED	1481:11:30136:30154	6316011	0	True				
ANR	6316267	EqualityExpression	tok != TOK_LINEFEED		6316011	0		!=			
ANR	6316268	Identifier	tok		6316011	0					
ANR	6316269	Identifier	TOK_LINEFEED		6316011	1					
ANR	6316270	CompoundStatement		64:32:1362:1362	6316011	1					
ANR	6316271	IfStatement	if ( tok != TOK_STR )		6316011	0					
ANR	6316272	Condition	tok != TOK_STR	1482:9:30168:30181	6316011	0	True				
ANR	6316273	EqualityExpression	tok != TOK_STR		6316011	0		!=			
ANR	6316274	Identifier	tok		6316011	0					
ANR	6316275	Identifier	TOK_STR		6316011	1					
ANR	6316276	CompoundStatement		65:25:1389:1389	6316011	1					
ANR	6316277	Label	include_syntax :	1483:0:30186:30200	6316011	0	True				
ANR	6316278	Identifier	include_syntax		6316011	0					
ANR	6316279	ExpressionStatement	"tcc_error ( ""'#include' expects \\""FILENAME\\"" or <FILENAME>"" )"	1484:6:30208:30267	6316011	1	True				
ANR	6316280	CallExpression	"tcc_error ( ""'#include' expects \\""FILENAME\\"" or <FILENAME>"" )"		6316011	0					
ANR	6316281	Callee	tcc_error		6316011	0					
ANR	6316282	Identifier	tcc_error		6316011	0					
ANR	6316283	ArgumentList	"""'#include' expects \\""FILENAME\\"" or <FILENAME>"""		6316011	1					
ANR	6316284	Argument	"""'#include' expects \\""FILENAME\\"" or <FILENAME>"""		6316011	0					
ANR	6316285	PrimaryExpression	"""'#include' expects \\""FILENAME\\"" or <FILENAME>"""		6316011	0					
ANR	6316286	ExpressionStatement	"pstrcat ( buf , sizeof ( buf ) , ( char * ) tokc . cstr -> data )"	1486:5:30281:30333	6316011	1	True				
ANR	6316287	CallExpression	"pstrcat ( buf , sizeof ( buf ) , ( char * ) tokc . cstr -> data )"		6316011	0					
ANR	6316288	Callee	pstrcat		6316011	0					
ANR	6316289	Identifier	pstrcat		6316011	0					
ANR	6316290	ArgumentList	buf		6316011	1					
ANR	6316291	Argument	buf		6316011	0					
ANR	6316292	Identifier	buf		6316011	0					
ANR	6316293	Argument	sizeof ( buf )		6316011	1					
ANR	6316294	SizeofExpression	sizeof ( buf )		6316011	0					
ANR	6316295	Sizeof	sizeof		6316011	0					
ANR	6316296	SizeofOperand	buf		6316011	1					
ANR	6316297	Argument	( char * ) tokc . cstr -> data		6316011	2					
ANR	6316298	CastExpression	( char * ) tokc . cstr -> data		6316011	0					
ANR	6316299	CastTarget	char *		6316011	0					
ANR	6316300	PtrMemberAccess	tokc . cstr -> data		6316011	1					
ANR	6316301	MemberAccess	tokc . cstr		6316011	0					
ANR	6316302	Identifier	tokc		6316011	0					
ANR	6316303	Identifier	cstr		6316011	1					
ANR	6316304	Identifier	data		6316011	1					
ANR	6316305	ExpressionStatement	next ( )	1487:5:30340:30347	6316011	2	True				
ANR	6316306	CallExpression	next ( )		6316011	0					
ANR	6316307	Callee	next		6316011	0					
ANR	6316308	Identifier	next		6316011	0					
ANR	6316309	ArgumentList			6316011	1					
ANR	6316310	ExpressionStatement	"c = '\\""'"	1489:4:30359:30367	6316011	1	True				
ANR	6316311	AssignmentExpression	"c = '\\""'"		6316011	0		=			
ANR	6316312	Identifier	c		6316011	0					
ANR	6316313	PrimaryExpression	"'\\""'"		6316011	1					
ANR	6316314	ElseStatement	else		6316011	0					
ANR	6316315	CompoundStatement		74:4:1590:1597	6316011	0					
ANR	6316316	IdentifierDeclStatement	int len ;	1491:4:30385:30392	6316011	0	True				
ANR	6316317	IdentifierDecl	len		6316011	0					
ANR	6316318	IdentifierDeclType	int		6316011	0					
ANR	6316319	Identifier	len		6316011	1					
ANR	6316320	WhileStatement	while ( tok != TOK_LINEFEED )		6316011	1					
ANR	6316321	Condition	tok != TOK_LINEFEED	1492:11:30405:30423	6316011	0	True				
ANR	6316322	EqualityExpression	tok != TOK_LINEFEED		6316011	0		!=			
ANR	6316323	Identifier	tok		6316011	0					
ANR	6316324	Identifier	TOK_LINEFEED		6316011	1					
ANR	6316325	CompoundStatement		75:32:1631:1631	6316011	1					
ANR	6316326	ExpressionStatement	"pstrcat ( buf , sizeof ( buf ) , get_tok_str ( tok , & tokc ) )"	1493:5:30433:30485	6316011	0	True				
ANR	6316327	CallExpression	"pstrcat ( buf , sizeof ( buf ) , get_tok_str ( tok , & tokc ) )"		6316011	0					
ANR	6316328	Callee	pstrcat		6316011	0					
ANR	6316329	Identifier	pstrcat		6316011	0					
ANR	6316330	ArgumentList	buf		6316011	1					
ANR	6316331	Argument	buf		6316011	0					
ANR	6316332	Identifier	buf		6316011	0					
ANR	6316333	Argument	sizeof ( buf )		6316011	1					
ANR	6316334	SizeofExpression	sizeof ( buf )		6316011	0					
ANR	6316335	Sizeof	sizeof		6316011	0					
ANR	6316336	SizeofOperand	buf		6316011	1					
ANR	6316337	Argument	"get_tok_str ( tok , & tokc )"		6316011	2					
ANR	6316338	CallExpression	"get_tok_str ( tok , & tokc )"		6316011	0					
ANR	6316339	Callee	get_tok_str		6316011	0					
ANR	6316340	Identifier	get_tok_str		6316011	0					
ANR	6316341	ArgumentList	tok		6316011	1					
ANR	6316342	Argument	tok		6316011	0					
ANR	6316343	Identifier	tok		6316011	0					
ANR	6316344	Argument	& tokc		6316011	1					
ANR	6316345	UnaryOperationExpression	& tokc		6316011	0					
ANR	6316346	UnaryOperator	&		6316011	0					
ANR	6316347	Identifier	tokc		6316011	1					
ANR	6316348	ExpressionStatement	next ( )	1494:5:30492:30499	6316011	1	True				
ANR	6316349	CallExpression	next ( )		6316011	0					
ANR	6316350	Callee	next		6316011	0					
ANR	6316351	Identifier	next		6316011	0					
ANR	6316352	ArgumentList			6316011	1					
ANR	6316353	ExpressionStatement	len = strlen ( buf )	1496:4:30511:30529	6316011	2	True				
ANR	6316354	AssignmentExpression	len = strlen ( buf )		6316011	0		=			
ANR	6316355	Identifier	len		6316011	0					
ANR	6316356	CallExpression	strlen ( buf )		6316011	1					
ANR	6316357	Callee	strlen		6316011	0					
ANR	6316358	Identifier	strlen		6316011	0					
ANR	6316359	ArgumentList	buf		6316011	1					
ANR	6316360	Argument	buf		6316011	0					
ANR	6316361	Identifier	buf		6316011	0					
ANR	6316362	IfStatement	if ( len < 2 || buf [ 0 ] != '<' || buf [ len - 1 ] != '>' )		6316011	3					
ANR	6316363	Condition	len < 2 || buf [ 0 ] != '<' || buf [ len - 1 ] != '>'	1498:8:30578:30624	6316011	0	True				
ANR	6316364	OrExpression	len < 2 || buf [ 0 ] != '<' || buf [ len - 1 ] != '>'		6316011	0		||			
ANR	6316365	RelationalExpression	len < 2		6316011	0		<			
ANR	6316366	Identifier	len		6316011	0					
ANR	6316367	PrimaryExpression	2		6316011	1					
ANR	6316368	OrExpression	buf [ 0 ] != '<' || buf [ len - 1 ] != '>'		6316011	1		||			
ANR	6316369	EqualityExpression	buf [ 0 ] != '<'		6316011	0		!=			
ANR	6316370	ArrayIndexing	buf [ 0 ]		6316011	0					
ANR	6316371	Identifier	buf		6316011	0					
ANR	6316372	PrimaryExpression	0		6316011	1					
ANR	6316373	PrimaryExpression	'<'		6316011	1					
ANR	6316374	EqualityExpression	buf [ len - 1 ] != '>'		6316011	1		!=			
ANR	6316375	ArrayIndexing	buf [ len - 1 ]		6316011	0					
ANR	6316376	Identifier	buf		6316011	0					
ANR	6316377	AdditiveExpression	len - 1		6316011	1		-			
ANR	6316378	Identifier	len		6316011	0					
ANR	6316379	PrimaryExpression	1		6316011	1					
ANR	6316380	PrimaryExpression	'>'		6316011	1					
ANR	6316381	CompoundStatement		81:57:1832:1832	6316011	1					
ANR	6316382	GotoStatement	goto include_syntax ;	1499:5:30634:30653	6316011	0	True				
ANR	6316383	Identifier	include_syntax		6316011	0					
ANR	6316384	ExpressionStatement	"memmove ( buf , buf + 1 , len - 2 )"	1501:4:30665:30696	6316011	4	True				
ANR	6316385	CallExpression	"memmove ( buf , buf + 1 , len - 2 )"		6316011	0					
ANR	6316386	Callee	memmove		6316011	0					
ANR	6316387	Identifier	memmove		6316011	0					
ANR	6316388	ArgumentList	buf		6316011	1					
ANR	6316389	Argument	buf		6316011	0					
ANR	6316390	Identifier	buf		6316011	0					
ANR	6316391	Argument	buf + 1		6316011	1					
ANR	6316392	AdditiveExpression	buf + 1		6316011	0		+			
ANR	6316393	Identifier	buf		6316011	0					
ANR	6316394	PrimaryExpression	1		6316011	1					
ANR	6316395	Argument	len - 2		6316011	2					
ANR	6316396	AdditiveExpression	len - 2		6316011	0		-			
ANR	6316397	Identifier	len		6316011	0					
ANR	6316398	PrimaryExpression	2		6316011	1					
ANR	6316399	ExpressionStatement	buf [ len - 2 ] = '\\0'	1502:4:30702:30721	6316011	5	True				
ANR	6316400	AssignmentExpression	buf [ len - 2 ] = '\\0'		6316011	0		=			
ANR	6316401	ArrayIndexing	buf [ len - 2 ]		6316011	0					
ANR	6316402	Identifier	buf		6316011	0					
ANR	6316403	AdditiveExpression	len - 2		6316011	1		-			
ANR	6316404	Identifier	len		6316011	0					
ANR	6316405	PrimaryExpression	2		6316011	1					
ANR	6316406	PrimaryExpression	'\\0'		6316011	1					
ANR	6316407	ExpressionStatement	c = '>'	1503:4:30727:30734	6316011	6	True				
ANR	6316408	AssignmentExpression	c = '>'		6316011	0		=			
ANR	6316409	Identifier	c		6316011	0					
ANR	6316410	PrimaryExpression	'>'		6316011	1					
ANR	6316411	IfStatement	if ( s1 -> include_stack_ptr >= s1 -> include_stack + INCLUDE_STACK_SIZE )		6316011	14					
ANR	6316412	Condition	s1 -> include_stack_ptr >= s1 -> include_stack + INCLUDE_STACK_SIZE	1507:6:30752:30814	6316011	0	True				
ANR	6316413	RelationalExpression	s1 -> include_stack_ptr >= s1 -> include_stack + INCLUDE_STACK_SIZE		6316011	0		>=			
ANR	6316414	PtrMemberAccess	s1 -> include_stack_ptr		6316011	0					
ANR	6316415	Identifier	s1		6316011	0					
ANR	6316416	Identifier	include_stack_ptr		6316011	1					
ANR	6316417	AdditiveExpression	s1 -> include_stack + INCLUDE_STACK_SIZE		6316011	1		+			
ANR	6316418	PtrMemberAccess	s1 -> include_stack		6316011	0					
ANR	6316419	Identifier	s1		6316011	0					
ANR	6316420	Identifier	include_stack		6316011	1					
ANR	6316421	Identifier	INCLUDE_STACK_SIZE		6316011	1					
ANR	6316422	CompoundStatement		90:71:2022:2022	6316011	1					
ANR	6316423	ExpressionStatement	"tcc_error ( ""#include recursion too deep"" )"	1508:3:30822:30863	6316011	0	True				
ANR	6316424	CallExpression	"tcc_error ( ""#include recursion too deep"" )"		6316011	0					
ANR	6316425	Callee	tcc_error		6316011	0					
ANR	6316426	Identifier	tcc_error		6316011	0					
ANR	6316427	ArgumentList	"""#include recursion too deep"""		6316011	1					
ANR	6316428	Argument	"""#include recursion too deep"""		6316011	0					
ANR	6316429	PrimaryExpression	"""#include recursion too deep"""		6316011	0					
ANR	6316430	ExpressionStatement	* s1 -> include_stack_ptr = file	1511:2:30940:30969	6316011	15	True				
ANR	6316431	AssignmentExpression	* s1 -> include_stack_ptr = file		6316011	0		=			
ANR	6316432	UnaryOperationExpression	* s1 -> include_stack_ptr		6316011	0					
ANR	6316433	UnaryOperator	*		6316011	0					
ANR	6316434	PtrMemberAccess	s1 -> include_stack_ptr		6316011	1					
ANR	6316435	Identifier	s1		6316011	0					
ANR	6316436	Identifier	include_stack_ptr		6316011	1					
ANR	6316437	Identifier	file		6316011	1					
ANR	6316438	ExpressionStatement	n = s1 -> nb_include_paths + s1 -> nb_sysinclude_paths	1513:2:30974:31024	6316011	16	True				
ANR	6316439	AssignmentExpression	n = s1 -> nb_include_paths + s1 -> nb_sysinclude_paths		6316011	0		=			
ANR	6316440	Identifier	n		6316011	0					
ANR	6316441	AdditiveExpression	s1 -> nb_include_paths + s1 -> nb_sysinclude_paths		6316011	1		+			
ANR	6316442	PtrMemberAccess	s1 -> nb_include_paths		6316011	0					
ANR	6316443	Identifier	s1		6316011	0					
ANR	6316444	Identifier	nb_include_paths		6316011	1					
ANR	6316445	PtrMemberAccess	s1 -> nb_sysinclude_paths		6316011	1					
ANR	6316446	Identifier	s1		6316011	0					
ANR	6316447	Identifier	nb_sysinclude_paths		6316011	1					
ANR	6316448	ForStatement	for ( i = - 2 ; i < n ; ++ i )		6316011	17					
ANR	6316449	ForInit	i = - 2 ;	1514:7:31033:31039	6316011	0	True				
ANR	6316450	AssignmentExpression	i = - 2		6316011	0		=			
ANR	6316451	Identifier	i		6316011	0					
ANR	6316452	UnaryOperationExpression	- 2		6316011	1					
ANR	6316453	UnaryOperator	-		6316011	0					
ANR	6316454	PrimaryExpression	2		6316011	1					
ANR	6316455	Condition	i < n	1514:15:31041:31045	6316011	1	True				
ANR	6316456	RelationalExpression	i < n		6316011	0		<			
ANR	6316457	Identifier	i		6316011	0					
ANR	6316458	Identifier	n		6316011	1					
ANR	6316459	UnaryExpression	++ i	1514:22:31048:31050	6316011	2	True				
ANR	6316460	IncDec	++		6316011	0					
ANR	6316461	Identifier	i		6316011	1					
ANR	6316462	CompoundStatement		101:3:2342:2358	6316011	3					
ANR	6316463	IdentifierDeclStatement	char buf1 [ sizeof file -> filename ] ;	1515:3:31058:31090	6316011	0	True				
ANR	6316464	IdentifierDecl	buf1 [ sizeof file -> filename ]		6316011	0					
ANR	6316465	IdentifierDeclType	char [ sizeof file -> filename ]		6316011	0					
ANR	6316466	Identifier	buf1		6316011	1					
ANR	6316467	SizeofExpression	sizeof file -> filename		6316011	2					
ANR	6316468	Sizeof	sizeof		6316011	0					
ANR	6316469	PtrMemberAccess	file -> filename		6316011	1					
ANR	6316470	Identifier	file		6316011	0					
ANR	6316471	Identifier	filename		6316011	1					
ANR	6316472	IdentifierDeclStatement	CachedInclude * e ;	1516:3:31095:31111	6316011	1	True				
ANR	6316473	IdentifierDecl	* e		6316011	0					
ANR	6316474	IdentifierDeclType	CachedInclude *		6316011	0					
ANR	6316475	Identifier	e		6316011	1					
ANR	6316476	IdentifierDeclStatement	BufferedFile * * f ;	1517:3:31116:31132	6316011	2	True				
ANR	6316477	IdentifierDecl	* * f		6316011	0					
ANR	6316478	IdentifierDeclType	BufferedFile * *		6316011	0					
ANR	6316479	Identifier	f		6316011	1					
ANR	6316480	IdentifierDeclStatement	const char * path ;	1518:3:31137:31153	6316011	3	True				
ANR	6316481	IdentifierDecl	* path		6316011	0					
ANR	6316482	IdentifierDeclType	const char *		6316011	0					
ANR	6316483	Identifier	path		6316011	1					
ANR	6316484	IfStatement	if ( i == - 2 )		6316011	4					
ANR	6316485	Condition	i == - 2	1520:7:31163:31169	6316011	0	True				
ANR	6316486	EqualityExpression	i == - 2		6316011	0		==			
ANR	6316487	Identifier	i		6316011	0					
ANR	6316488	UnaryOperationExpression	- 2		6316011	1					
ANR	6316489	UnaryOperator	-		6316011	0					
ANR	6316490	PrimaryExpression	2		6316011	1					
ANR	6316491	CompoundStatement		103:16:2377:2377	6316011	1					
ANR	6316492	IfStatement	if ( ! IS_ABSPATH ( buf ) )		6316011	0					
ANR	6316493	Condition	! IS_ABSPATH ( buf )	1522:8:31220:31236	6316011	0	True				
ANR	6316494	UnaryOperationExpression	! IS_ABSPATH ( buf )		6316011	0					
ANR	6316495	UnaryOperator	!		6316011	0					
ANR	6316496	CallExpression	IS_ABSPATH ( buf )		6316011	1					
ANR	6316497	Callee	IS_ABSPATH		6316011	0					
ANR	6316498	Identifier	IS_ABSPATH		6316011	0					
ANR	6316499	ArgumentList	buf		6316011	1					
ANR	6316500	Argument	buf		6316011	0					
ANR	6316501	Identifier	buf		6316011	0					
ANR	6316502	CompoundStatement		105:27:2444:2444	6316011	1					
ANR	6316503	ContinueStatement	continue ;	1523:5:31246:31254	6316011	0	True				
ANR	6316504	ExpressionStatement	buf1 [ 0 ] = 0	1525:4:31266:31277	6316011	1	True				
ANR	6316505	AssignmentExpression	buf1 [ 0 ] = 0		6316011	0		=			
ANR	6316506	ArrayIndexing	buf1 [ 0 ]		6316011	0					
ANR	6316507	Identifier	buf1		6316011	0					
ANR	6316508	PrimaryExpression	0		6316011	1					
ANR	6316509	PrimaryExpression	0		6316011	1					
ANR	6316510	ExpressionStatement	i = n	1526:4:31283:31288	6316011	2	True				
ANR	6316511	AssignmentExpression	i = n		6316011	0		=			
ANR	6316512	Identifier	i		6316011	0					
ANR	6316513	Identifier	n		6316011	1					
ANR	6316514	ElseStatement	else		6316011	0					
ANR	6316515	IfStatement	if ( i == - 1 )		6316011	0					
ANR	6316516	Condition	i == - 1	1528:14:31326:31332	6316011	0	True				
ANR	6316517	EqualityExpression	i == - 1		6316011	0		==			
ANR	6316518	Identifier	i		6316011	0					
ANR	6316519	UnaryOperationExpression	- 1		6316011	1					
ANR	6316520	UnaryOperator	-		6316011	0					
ANR	6316521	PrimaryExpression	1		6316011	1					
ANR	6316522	CompoundStatement		111:23:2540:2540	6316011	1					
ANR	6316523	IfStatement	"if ( c != '\\""' )"		6316011	0					
ANR	6316524	Condition	"c != '\\""'"	1530:8:31391:31399	6316011	0	True				
ANR	6316525	EqualityExpression	"c != '\\""'"		6316011	0		!=			
ANR	6316526	Identifier	c		6316011	0					
ANR	6316527	PrimaryExpression	"'\\""'"		6316011	1					
ANR	6316528	CompoundStatement		113:19:2607:2607	6316011	1					
ANR	6316529	ContinueStatement	continue ;	1531:5:31409:31417	6316011	0	True				
ANR	6316530	ExpressionStatement	path = file -> filename	1533:4:31429:31450	6316011	1	True				
ANR	6316531	AssignmentExpression	path = file -> filename		6316011	0		=			
ANR	6316532	Identifier	path		6316011	0					
ANR	6316533	PtrMemberAccess	file -> filename		6316011	1					
ANR	6316534	Identifier	file		6316011	0					
ANR	6316535	Identifier	filename		6316011	1					
ANR	6316536	ExpressionStatement	"pstrncpy ( buf1 , path , tcc_basename ( path ) - path )"	1534:4:31456:31505	6316011	2	True				
ANR	6316537	CallExpression	"pstrncpy ( buf1 , path , tcc_basename ( path ) - path )"		6316011	0					
ANR	6316538	Callee	pstrncpy		6316011	0					
ANR	6316539	Identifier	pstrncpy		6316011	0					
ANR	6316540	ArgumentList	buf1		6316011	1					
ANR	6316541	Argument	buf1		6316011	0					
ANR	6316542	Identifier	buf1		6316011	0					
ANR	6316543	Argument	path		6316011	1					
ANR	6316544	Identifier	path		6316011	0					
ANR	6316545	Argument	tcc_basename ( path ) - path		6316011	2					
ANR	6316546	AdditiveExpression	tcc_basename ( path ) - path		6316011	0		-			
ANR	6316547	CallExpression	tcc_basename ( path )		6316011	0					
ANR	6316548	Callee	tcc_basename		6316011	0					
ANR	6316549	Identifier	tcc_basename		6316011	0					
ANR	6316550	ArgumentList	path		6316011	1					
ANR	6316551	Argument	path		6316011	0					
ANR	6316552	Identifier	path		6316011	0					
ANR	6316553	Identifier	path		6316011	1					
ANR	6316554	ElseStatement	else		6316011	0					
ANR	6316555	CompoundStatement		119:10:2723:2723	6316011	0					
ANR	6316556	IfStatement	if ( i < s1 -> nb_include_paths )		6316011	0					
ANR	6316557	Condition	i < s1 -> nb_include_paths	1538:8:31570:31593	6316011	0	True				
ANR	6316558	RelationalExpression	i < s1 -> nb_include_paths		6316011	0		<			
ANR	6316559	Identifier	i		6316011	0					
ANR	6316560	PtrMemberAccess	s1 -> nb_include_paths		6316011	1					
ANR	6316561	Identifier	s1		6316011	0					
ANR	6316562	Identifier	nb_include_paths		6316011	1					
ANR	6316563	CompoundStatement		121:34:2801:2801	6316011	1					
ANR	6316564	ExpressionStatement	path = s1 -> include_paths [ i ]	1539:5:31603:31630	6316011	0	True				
ANR	6316565	AssignmentExpression	path = s1 -> include_paths [ i ]		6316011	0		=			
ANR	6316566	Identifier	path		6316011	0					
ANR	6316567	ArrayIndexing	s1 -> include_paths [ i ]		6316011	1					
ANR	6316568	PtrMemberAccess	s1 -> include_paths		6316011	0					
ANR	6316569	Identifier	s1		6316011	0					
ANR	6316570	Identifier	include_paths		6316011	1					
ANR	6316571	Identifier	i		6316011	1					
ANR	6316572	ElseStatement	else		6316011	0					
ANR	6316573	CompoundStatement		123:11:2848:2848	6316011	0					
ANR	6316574	ExpressionStatement	path = s1 -> sysinclude_paths [ i - s1 -> nb_include_paths ]	1541:5:31650:31703	6316011	0	True				
ANR	6316575	AssignmentExpression	path = s1 -> sysinclude_paths [ i - s1 -> nb_include_paths ]		6316011	0		=			
ANR	6316576	Identifier	path		6316011	0					
ANR	6316577	ArrayIndexing	s1 -> sysinclude_paths [ i - s1 -> nb_include_paths ]		6316011	1					
ANR	6316578	PtrMemberAccess	s1 -> sysinclude_paths		6316011	0					
ANR	6316579	Identifier	s1		6316011	0					
ANR	6316580	Identifier	sysinclude_paths		6316011	1					
ANR	6316581	AdditiveExpression	i - s1 -> nb_include_paths		6316011	1		-			
ANR	6316582	Identifier	i		6316011	0					
ANR	6316583	PtrMemberAccess	s1 -> nb_include_paths		6316011	1					
ANR	6316584	Identifier	s1		6316011	0					
ANR	6316585	Identifier	nb_include_paths		6316011	1					
ANR	6316586	ExpressionStatement	"pstrcpy ( buf1 , sizeof ( buf1 ) , path )"	1543:4:31715:31749	6316011	1	True				
ANR	6316587	CallExpression	"pstrcpy ( buf1 , sizeof ( buf1 ) , path )"		6316011	0					
ANR	6316588	Callee	pstrcpy		6316011	0					
ANR	6316589	Identifier	pstrcpy		6316011	0					
ANR	6316590	ArgumentList	buf1		6316011	1					
ANR	6316591	Argument	buf1		6316011	0					
ANR	6316592	Identifier	buf1		6316011	0					
ANR	6316593	Argument	sizeof ( buf1 )		6316011	1					
ANR	6316594	SizeofExpression	sizeof ( buf1 )		6316011	0					
ANR	6316595	Sizeof	sizeof		6316011	0					
ANR	6316596	SizeofOperand	buf1		6316011	1					
ANR	6316597	Argument	path		6316011	2					
ANR	6316598	Identifier	path		6316011	0					
ANR	6316599	ExpressionStatement	"pstrcat ( buf1 , sizeof ( buf1 ) , ""/"" )"	1544:4:31755:31788	6316011	2	True				
ANR	6316600	CallExpression	"pstrcat ( buf1 , sizeof ( buf1 ) , ""/"" )"		6316011	0					
ANR	6316601	Callee	pstrcat		6316011	0					
ANR	6316602	Identifier	pstrcat		6316011	0					
ANR	6316603	ArgumentList	buf1		6316011	1					
ANR	6316604	Argument	buf1		6316011	0					
ANR	6316605	Identifier	buf1		6316011	0					
ANR	6316606	Argument	sizeof ( buf1 )		6316011	1					
ANR	6316607	SizeofExpression	sizeof ( buf1 )		6316011	0					
ANR	6316608	Sizeof	sizeof		6316011	0					
ANR	6316609	SizeofOperand	buf1		6316011	1					
ANR	6316610	Argument	"""/"""		6316011	2					
ANR	6316611	PrimaryExpression	"""/"""		6316011	0					
ANR	6316612	ExpressionStatement	"pstrcat ( buf1 , sizeof ( buf1 ) , buf )"	1547:3:31799:31832	6316011	5	True				
ANR	6316613	CallExpression	"pstrcat ( buf1 , sizeof ( buf1 ) , buf )"		6316011	0					
ANR	6316614	Callee	pstrcat		6316011	0					
ANR	6316615	Identifier	pstrcat		6316011	0					
ANR	6316616	ArgumentList	buf1		6316011	1					
ANR	6316617	Argument	buf1		6316011	0					
ANR	6316618	Identifier	buf1		6316011	0					
ANR	6316619	Argument	sizeof ( buf1 )		6316011	1					
ANR	6316620	SizeofExpression	sizeof ( buf1 )		6316011	0					
ANR	6316621	Sizeof	sizeof		6316011	0					
ANR	6316622	SizeofOperand	buf1		6316011	1					
ANR	6316623	Argument	buf		6316011	2					
ANR	6316624	Identifier	buf		6316011	0					
ANR	6316625	IfStatement	if ( tok == TOK_INCLUDE_NEXT )		6316011	6					
ANR	6316626	Condition	tok == TOK_INCLUDE_NEXT	1549:7:31842:31864	6316011	0	True				
ANR	6316627	EqualityExpression	tok == TOK_INCLUDE_NEXT		6316011	0		==			
ANR	6316628	Identifier	tok		6316011	0					
ANR	6316629	Identifier	TOK_INCLUDE_NEXT		6316011	1					
ANR	6316630	CompoundStatement		132:32:3072:3072	6316011	1					
ANR	6316631	ForStatement	for ( f = s1 -> include_stack_ptr ; f >= s1 -> include_stack ; -- f )		6316011	0					
ANR	6316632	ForInit	f = s1 -> include_stack_ptr ;	1550:9:31878:31903	6316011	0	True				
ANR	6316633	AssignmentExpression	f = s1 -> include_stack_ptr		6316011	0		=			
ANR	6316634	Identifier	f		6316011	0					
ANR	6316635	PtrMemberAccess	s1 -> include_stack_ptr		6316011	1					
ANR	6316636	Identifier	s1		6316011	0					
ANR	6316637	Identifier	include_stack_ptr		6316011	1					
ANR	6316638	Condition	f >= s1 -> include_stack	1550:36:31905:31926	6316011	1	True				
ANR	6316639	RelationalExpression	f >= s1 -> include_stack		6316011	0		>=			
ANR	6316640	Identifier	f		6316011	0					
ANR	6316641	PtrMemberAccess	s1 -> include_stack		6316011	1					
ANR	6316642	Identifier	s1		6316011	0					
ANR	6316643	Identifier	include_stack		6316011	1					
ANR	6316644	UnaryExpression	-- f	1550:60:31929:31931	6316011	2	True				
ANR	6316645	IncDec	--		6316011	0					
ANR	6316646	Identifier	f		6316011	1					
ANR	6316647	CompoundStatement		133:65:3139:3139	6316011	3					
ANR	6316648	IfStatement	"if ( 0 == PATHCMP ( ( * f ) -> filename , buf1 ) )"		6316011	0					
ANR	6316649	Condition	"0 == PATHCMP ( ( * f ) -> filename , buf1 )"	1551:9:31945:31979	6316011	0	True				
ANR	6316650	EqualityExpression	"0 == PATHCMP ( ( * f ) -> filename , buf1 )"		6316011	0		==			
ANR	6316651	PrimaryExpression	0		6316011	0					
ANR	6316652	CallExpression	"PATHCMP ( ( * f ) -> filename , buf1 )"		6316011	1					
ANR	6316653	Callee	PATHCMP		6316011	0					
ANR	6316654	Identifier	PATHCMP		6316011	0					
ANR	6316655	ArgumentList	( * f ) -> filename		6316011	1					
ANR	6316656	Argument	( * f ) -> filename		6316011	0					
ANR	6316657	PtrMemberAccess	( * f ) -> filename		6316011	0					
ANR	6316658	UnaryOperationExpression	* f		6316011	0					
ANR	6316659	UnaryOperator	*		6316011	0					
ANR	6316660	Identifier	f		6316011	1					
ANR	6316661	Identifier	filename		6316011	1					
ANR	6316662	Argument	buf1		6316011	1					
ANR	6316663	Identifier	buf1		6316011	0					
ANR	6316664	CompoundStatement		134:46:3187:3187	6316011	1					
ANR	6316665	ExpressionStatement	"printf ( ""%s: #include_next skipping %s\\n"" , file -> filename , buf1 )"	1553:6:32007:32071	6316011	0	True				
ANR	6316666	CallExpression	"printf ( ""%s: #include_next skipping %s\\n"" , file -> filename , buf1 )"		6316011	0					
ANR	6316667	Callee	printf		6316011	0					
ANR	6316668	Identifier	printf		6316011	0					
ANR	6316669	ArgumentList	"""%s: #include_next skipping %s\\n"""		6316011	1					
ANR	6316670	Argument	"""%s: #include_next skipping %s\\n"""		6316011	0					
ANR	6316671	PrimaryExpression	"""%s: #include_next skipping %s\\n"""		6316011	0					
ANR	6316672	Argument	file -> filename		6316011	1					
ANR	6316673	PtrMemberAccess	file -> filename		6316011	0					
ANR	6316674	Identifier	file		6316011	0					
ANR	6316675	Identifier	filename		6316011	1					
ANR	6316676	Argument	buf1		6316011	2					
ANR	6316677	Identifier	buf1		6316011	0					
ANR	6316678	GotoStatement	goto include_trynext ;	1555:6:32086:32106	6316011	1	True				
ANR	6316679	Identifier	include_trynext		6316011	0					
ANR	6316680	ExpressionStatement	"e = search_cached_include ( s1 , buf1 )"	1560:3:32130:32166	6316011	7	True				
ANR	6316681	AssignmentExpression	"e = search_cached_include ( s1 , buf1 )"		6316011	0		=			
ANR	6316682	Identifier	e		6316011	0					
ANR	6316683	CallExpression	"search_cached_include ( s1 , buf1 )"		6316011	1					
ANR	6316684	Callee	search_cached_include		6316011	0					
ANR	6316685	Identifier	search_cached_include		6316011	0					
ANR	6316686	ArgumentList	s1		6316011	1					
ANR	6316687	Argument	s1		6316011	0					
ANR	6316688	Identifier	s1		6316011	0					
ANR	6316689	Argument	buf1		6316011	1					
ANR	6316690	Identifier	buf1		6316011	0					
ANR	6316691	IfStatement	if ( e && define_find ( e -> ifndef_macro ) )		6316011	8					
ANR	6316692	Condition	e && define_find ( e -> ifndef_macro )	1561:7:32175:32208	6316011	0	True				
ANR	6316693	AndExpression	e && define_find ( e -> ifndef_macro )		6316011	0		&&			
ANR	6316694	Identifier	e		6316011	0					
ANR	6316695	CallExpression	define_find ( e -> ifndef_macro )		6316011	1					
ANR	6316696	Callee	define_find		6316011	0					
ANR	6316697	Identifier	define_find		6316011	0					
ANR	6316698	ArgumentList	e -> ifndef_macro		6316011	1					
ANR	6316699	Argument	e -> ifndef_macro		6316011	0					
ANR	6316700	PtrMemberAccess	e -> ifndef_macro		6316011	0					
ANR	6316701	Identifier	e		6316011	0					
ANR	6316702	Identifier	ifndef_macro		6316011	1					
ANR	6316703	CompoundStatement		144:43:3416:3416	6316011	1					
ANR	6316704	ExpressionStatement	"printf ( ""%s: skipping cached %s\\n"" , file -> filename , buf1 )"	1565:4:32318:32375	6316011	0	True				
ANR	6316705	CallExpression	"printf ( ""%s: skipping cached %s\\n"" , file -> filename , buf1 )"		6316011	0					
ANR	6316706	Callee	printf		6316011	0					
ANR	6316707	Identifier	printf		6316011	0					
ANR	6316708	ArgumentList	"""%s: skipping cached %s\\n"""		6316011	1					
ANR	6316709	Argument	"""%s: skipping cached %s\\n"""		6316011	0					
ANR	6316710	PrimaryExpression	"""%s: skipping cached %s\\n"""		6316011	0					
ANR	6316711	Argument	file -> filename		6316011	1					
ANR	6316712	PtrMemberAccess	file -> filename		6316011	0					
ANR	6316713	Identifier	file		6316011	0					
ANR	6316714	Identifier	filename		6316011	1					
ANR	6316715	Argument	buf1		6316011	2					
ANR	6316716	Identifier	buf1		6316011	0					
ANR	6316717	GotoStatement	goto include_done ;	1567:4:32388:32405	6316011	1	True				
ANR	6316718	Identifier	include_done		6316011	0					
ANR	6316719	IfStatement	"if ( tcc_open ( s1 , buf1 ) < 0 )"		6316011	9					
ANR	6316720	Condition	"tcc_open ( s1 , buf1 ) < 0"	1570:7:32420:32442	6316011	0	True				
ANR	6316721	RelationalExpression	"tcc_open ( s1 , buf1 ) < 0"		6316011	0		<			
ANR	6316722	CallExpression	"tcc_open ( s1 , buf1 )"		6316011	0					
ANR	6316723	Callee	tcc_open		6316011	0					
ANR	6316724	Identifier	tcc_open		6316011	0					
ANR	6316725	ArgumentList	s1		6316011	1					
ANR	6316726	Argument	s1		6316011	0					
ANR	6316727	Identifier	s1		6316011	0					
ANR	6316728	Argument	buf1		6316011	1					
ANR	6316729	Identifier	buf1		6316011	0					
ANR	6316730	PrimaryExpression	0		6316011	1					
ANR	6316731	CompoundStatement		153:32:3650:3650	6316011	1					
ANR	6316732	Label	include_trynext :	1571:0:32447:32462	6316011	0	True				
ANR	6316733	Identifier	include_trynext		6316011	0					
ANR	6316734	ContinueStatement	continue ;	1572:4:32468:32476	6316011	1	True				
ANR	6316735	ExpressionStatement	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , buf1 )"	1574:3:32486:32529	6316011	10	True				
ANR	6316736	CallExpression	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , buf1 )"		6316011	0					
ANR	6316737	Callee	fprintf		6316011	0					
ANR	6316738	Identifier	fprintf		6316011	0					
ANR	6316739	ArgumentList	stderr		6316011	1					
ANR	6316740	Argument	stderr		6316011	0					
ANR	6316741	Identifier	stderr		6316011	0					
ANR	6316742	Argument	"""#include \\""%s\\""\\n"""		6316011	1					
ANR	6316743	PrimaryExpression	"""#include \\""%s\\""\\n"""		6316011	0					
ANR	6316744	Argument	buf1		6316011	2					
ANR	6316745	Identifier	buf1		6316011	0					
ANR	6316746	ExpressionStatement	"fprintf ( stderr , ""%s: including %s\\n"" , file -> prev -> filename , file -> filename )"	1577:3:32552:32628	6316011	11	True				
ANR	6316747	CallExpression	"fprintf ( stderr , ""%s: including %s\\n"" , file -> prev -> filename , file -> filename )"		6316011	0					
ANR	6316748	Callee	fprintf		6316011	0					
ANR	6316749	Identifier	fprintf		6316011	0					
ANR	6316750	ArgumentList	stderr		6316011	1					
ANR	6316751	Argument	stderr		6316011	0					
ANR	6316752	Identifier	stderr		6316011	0					
ANR	6316753	Argument	"""%s: including %s\\n"""		6316011	1					
ANR	6316754	PrimaryExpression	"""%s: including %s\\n"""		6316011	0					
ANR	6316755	Argument	file -> prev -> filename		6316011	2					
ANR	6316756	PtrMemberAccess	file -> prev -> filename		6316011	0					
ANR	6316757	PtrMemberAccess	file -> prev		6316011	0					
ANR	6316758	Identifier	file		6316011	0					
ANR	6316759	Identifier	prev		6316011	1					
ANR	6316760	Identifier	filename		6316011	1					
ANR	6316761	Argument	file -> filename		6316011	3					
ANR	6316762	PtrMemberAccess	file -> filename		6316011	0					
ANR	6316763	Identifier	file		6316011	0					
ANR	6316764	Identifier	filename		6316011	1					
ANR	6316765	ExpressionStatement	"dynarray_add ( ( void * * * ) & s1 -> target_deps , & s1 -> nb_target_deps , strdup ( buf1 ) )"	1580:3:32668:32750	6316011	12	True				
ANR	6316766	CallExpression	"dynarray_add ( ( void * * * ) & s1 -> target_deps , & s1 -> nb_target_deps , strdup ( buf1 ) )"		6316011	0					
ANR	6316767	Callee	dynarray_add		6316011	0					
ANR	6316768	Identifier	dynarray_add		6316011	0					
ANR	6316769	ArgumentList	( void * * * ) & s1 -> target_deps		6316011	1					
ANR	6316770	Argument	( void * * * ) & s1 -> target_deps		6316011	0					
ANR	6316771	CastExpression	( void * * * ) & s1 -> target_deps		6316011	0					
ANR	6316772	CastTarget	void * * *		6316011	0					
ANR	6316773	UnaryOperationExpression	& s1 -> target_deps		6316011	1					
ANR	6316774	UnaryOperator	&		6316011	0					
ANR	6316775	PtrMemberAccess	s1 -> target_deps		6316011	1					
ANR	6316776	Identifier	s1		6316011	0					
ANR	6316777	Identifier	target_deps		6316011	1					
ANR	6316778	Argument	& s1 -> nb_target_deps		6316011	1					
ANR	6316779	UnaryOperationExpression	& s1 -> nb_target_deps		6316011	0					
ANR	6316780	UnaryOperator	&		6316011	0					
ANR	6316781	PtrMemberAccess	s1 -> nb_target_deps		6316011	1					
ANR	6316782	Identifier	s1		6316011	0					
ANR	6316783	Identifier	nb_target_deps		6316011	1					
ANR	6316784	Argument	strdup ( buf1 )		6316011	2					
ANR	6316785	CallExpression	strdup ( buf1 )		6316011	0					
ANR	6316786	Callee	strdup		6316011	0					
ANR	6316787	Identifier	strdup		6316011	0					
ANR	6316788	ArgumentList	buf1		6316011	1					
ANR	6316789	Argument	buf1		6316011	0					
ANR	6316790	Identifier	buf1		6316011	0					
ANR	6316791	ExpressionStatement	++ s1 -> include_stack_ptr	1583:3:32791:32814	6316011	13	True				
ANR	6316792	UnaryExpression	++ s1 -> include_stack_ptr		6316011	0					
ANR	6316793	IncDec	++		6316011	0					
ANR	6316794	PtrMemberAccess	s1 -> include_stack_ptr		6316011	1					
ANR	6316795	Identifier	s1		6316011	0					
ANR	6316796	Identifier	include_stack_ptr		6316011	1					
ANR	6316797	ExpressionStatement	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL	1584:3:32819:32859	6316011	14	True				
ANR	6316798	AssignmentExpression	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL		6316011	0		|=			
ANR	6316799	Identifier	tok_flags		6316011	0					
ANR	6316800	InclusiveOrExpression	TOK_FLAG_BOF | TOK_FLAG_BOL		6316011	1		|			
ANR	6316801	Identifier	TOK_FLAG_BOF		6316011	0					
ANR	6316802	Identifier	TOK_FLAG_BOL		6316011	1					
ANR	6316803	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1585:3:32864:32885	6316011	15	True				
ANR	6316804	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6316011	0		=			
ANR	6316805	Identifier	ch		6316011	0					
ANR	6316806	ArrayIndexing	file -> buf_ptr [ 0 ]		6316011	1					
ANR	6316807	PtrMemberAccess	file -> buf_ptr		6316011	0					
ANR	6316808	Identifier	file		6316011	0					
ANR	6316809	Identifier	buf_ptr		6316011	1					
ANR	6316810	PrimaryExpression	0		6316011	1					
ANR	6316811	GotoStatement	goto the_end ;	1586:3:32890:32902	6316011	16	True				
ANR	6316812	Identifier	the_end		6316011	0					
ANR	6316813	CompoundStatement		175:3:4229:4279	6316011	18					
ANR	6316814	IdentifierDeclStatement	char filepath [ 1024 ] ;	1590:3:32979:32998	6316011	0	True				
ANR	6316815	IdentifierDecl	filepath [ 1024 ]		6316011	0					
ANR	6316816	IdentifierDeclType	char [ 1024 ]		6316011	0					
ANR	6316817	Identifier	filepath		6316011	1					
ANR	6316818	PrimaryExpression	1024		6316011	2					
ANR	6316819	IdentifierDeclStatement	int filepath_len ;	1591:3:33003:33019	6316011	1	True				
ANR	6316820	IdentifierDecl	filepath_len		6316011	0					
ANR	6316821	IdentifierDeclType	int		6316011	0					
ANR	6316822	Identifier	filepath_len		6316011	1					
ANR	6316823	IdentifierDeclStatement	char * e = file -> filename + strlen ( file -> filename ) ;	1592:3:33024:33074	6316011	2	True				
ANR	6316824	IdentifierDecl	* e = file -> filename + strlen ( file -> filename )		6316011	0					
ANR	6316825	IdentifierDeclType	char *		6316011	0					
ANR	6316826	Identifier	e		6316011	1					
ANR	6316827	AssignmentExpression	* e = file -> filename + strlen ( file -> filename )		6316011	2		=			
ANR	6316828	Identifier	e		6316011	0					
ANR	6316829	AdditiveExpression	file -> filename + strlen ( file -> filename )		6316011	1		+			
ANR	6316830	PtrMemberAccess	file -> filename		6316011	0					
ANR	6316831	Identifier	file		6316011	0					
ANR	6316832	Identifier	filename		6316011	1					
ANR	6316833	CallExpression	strlen ( file -> filename )		6316011	1					
ANR	6316834	Callee	strlen		6316011	0					
ANR	6316835	Identifier	strlen		6316011	0					
ANR	6316836	ArgumentList	file -> filename		6316011	1					
ANR	6316837	Argument	file -> filename		6316011	0					
ANR	6316838	PtrMemberAccess	file -> filename		6316011	0					
ANR	6316839	Identifier	file		6316011	0					
ANR	6316840	Identifier	filename		6316011	1					
ANR	6316841	WhileStatement	while ( e > file -> filename )		6316011	3					
ANR	6316842	Condition	e > file -> filename	1593:10:33086:33103	6316011	0	True				
ANR	6316843	RelationalExpression	e > file -> filename		6316011	0		>			
ANR	6316844	Identifier	e		6316011	0					
ANR	6316845	PtrMemberAccess	file -> filename		6316011	1					
ANR	6316846	Identifier	file		6316011	0					
ANR	6316847	Identifier	filename		6316011	1					
ANR	6316848	CompoundStatement		176:30:4311:4311	6316011	1					
ANR	6316849	IfStatement	if ( * e == R_SYS_DIR [ 0 ] )		6316011	0					
ANR	6316850	Condition	* e == R_SYS_DIR [ 0 ]	1594:8:33116:33133	6316011	0	True				
ANR	6316851	EqualityExpression	* e == R_SYS_DIR [ 0 ]		6316011	0		==			
ANR	6316852	UnaryOperationExpression	* e		6316011	0					
ANR	6316853	UnaryOperator	*		6316011	0					
ANR	6316854	Identifier	e		6316011	1					
ANR	6316855	ArrayIndexing	R_SYS_DIR [ 0 ]		6316011	1					
ANR	6316856	Identifier	R_SYS_DIR		6316011	0					
ANR	6316857	PrimaryExpression	0		6316011	1					
ANR	6316858	CompoundStatement		177:28:4341:4341	6316011	1					
ANR	6316859	BreakStatement	break ;	1595:5:33143:33148	6316011	0	True				
ANR	6316860	ExpressionStatement	e --	1597:4:33160:33163	6316011	1	True				
ANR	6316861	PostIncDecOperationExpression	e --		6316011	0					
ANR	6316862	Identifier	e		6316011	0					
ANR	6316863	IncDec	--		6316011	1					
ANR	6316864	ExpressionStatement	"filepath_len = R_MIN ( ( size_t ) ( e - file -> filename ) + 1 , sizeof ( filepath ) - 1 )"	1599:3:33173:33252	6316011	4	True				
ANR	6316865	AssignmentExpression	"filepath_len = R_MIN ( ( size_t ) ( e - file -> filename ) + 1 , sizeof ( filepath ) - 1 )"		6316011	0		=			
ANR	6316866	Identifier	filepath_len		6316011	0					
ANR	6316867	CallExpression	"R_MIN ( ( size_t ) ( e - file -> filename ) + 1 , sizeof ( filepath ) - 1 )"		6316011	1					
ANR	6316868	Callee	R_MIN		6316011	0					
ANR	6316869	Identifier	R_MIN		6316011	0					
ANR	6316870	ArgumentList	( size_t ) ( e - file -> filename ) + 1		6316011	1					
ANR	6316871	Argument	( size_t ) ( e - file -> filename ) + 1		6316011	0					
ANR	6316872	AdditiveExpression	( size_t ) ( e - file -> filename ) + 1		6316011	0		+			
ANR	6316873	CastExpression	( size_t ) ( e - file -> filename )		6316011	0					
ANR	6316874	CastTarget	size_t		6316011	0					
ANR	6316875	AdditiveExpression	e - file -> filename		6316011	1		-			
ANR	6316876	Identifier	e		6316011	0					
ANR	6316877	PtrMemberAccess	file -> filename		6316011	1					
ANR	6316878	Identifier	file		6316011	0					
ANR	6316879	Identifier	filename		6316011	1					
ANR	6316880	PrimaryExpression	1		6316011	1					
ANR	6316881	Argument	sizeof ( filepath ) - 1		6316011	1					
ANR	6316882	AdditiveExpression	sizeof ( filepath ) - 1		6316011	0		-			
ANR	6316883	SizeofExpression	sizeof ( filepath )		6316011	0					
ANR	6316884	Sizeof	sizeof		6316011	0					
ANR	6316885	SizeofOperand	filepath		6316011	1					
ANR	6316886	PrimaryExpression	1		6316011	1					
ANR	6316887	ExpressionStatement	"memcpy ( filepath , file -> filename , filepath_len )"	1600:3:33257:33304	6316011	5	True				
ANR	6316888	CallExpression	"memcpy ( filepath , file -> filename , filepath_len )"		6316011	0					
ANR	6316889	Callee	memcpy		6316011	0					
ANR	6316890	Identifier	memcpy		6316011	0					
ANR	6316891	ArgumentList	filepath		6316011	1					
ANR	6316892	Argument	filepath		6316011	0					
ANR	6316893	Identifier	filepath		6316011	0					
ANR	6316894	Argument	file -> filename		6316011	1					
ANR	6316895	PtrMemberAccess	file -> filename		6316011	0					
ANR	6316896	Identifier	file		6316011	0					
ANR	6316897	Identifier	filename		6316011	1					
ANR	6316898	Argument	filepath_len		6316011	2					
ANR	6316899	Identifier	filepath_len		6316011	0					
ANR	6316900	ExpressionStatement	"strcpy ( filepath + filepath_len , buf )"	1601:3:33309:33346	6316011	6	True				
ANR	6316901	CallExpression	"strcpy ( filepath + filepath_len , buf )"		6316011	0					
ANR	6316902	Callee	strcpy		6316011	0					
ANR	6316903	Identifier	strcpy		6316011	0					
ANR	6316904	ArgumentList	filepath + filepath_len		6316011	1					
ANR	6316905	Argument	filepath + filepath_len		6316011	0					
ANR	6316906	AdditiveExpression	filepath + filepath_len		6316011	0		+			
ANR	6316907	Identifier	filepath		6316011	0					
ANR	6316908	Identifier	filepath_len		6316011	1					
ANR	6316909	Argument	buf		6316011	1					
ANR	6316910	Identifier	buf		6316011	0					
ANR	6316911	IfStatement	"if ( tcc_open ( s1 , filepath ) < 0 )"		6316011	7					
ANR	6316912	Condition	"tcc_open ( s1 , filepath ) < 0"	1602:7:33355:33381	6316011	0	True				
ANR	6316913	RelationalExpression	"tcc_open ( s1 , filepath ) < 0"		6316011	0		<			
ANR	6316914	CallExpression	"tcc_open ( s1 , filepath )"		6316011	0					
ANR	6316915	Callee	tcc_open		6316011	0					
ANR	6316916	Identifier	tcc_open		6316011	0					
ANR	6316917	ArgumentList	s1		6316011	1					
ANR	6316918	Argument	s1		6316011	0					
ANR	6316919	Identifier	s1		6316011	0					
ANR	6316920	Argument	filepath		6316011	1					
ANR	6316921	Identifier	filepath		6316011	0					
ANR	6316922	PrimaryExpression	0		6316011	1					
ANR	6316923	CompoundStatement		189:4:4652:4723	6316011	1					
ANR	6316924	IfStatement	if ( ! dirname )		6316011	0					
ANR	6316925	Condition	! dirname	1603:8:33394:33401	6316011	0	True				
ANR	6316926	UnaryOperationExpression	! dirname		6316011	0					
ANR	6316927	UnaryOperator	!		6316011	0					
ANR	6316928	Identifier	dirname		6316011	1					
ANR	6316929	CompoundStatement		186:18:4609:4609	6316011	1					
ANR	6316930	ExpressionStatement	"dirname = ""/usr/include"""	1604:5:33411:33435	6316011	0	True				
ANR	6316931	AssignmentExpression	"dirname = ""/usr/include"""		6316011	0		=			
ANR	6316932	Identifier	dirname		6316011	0					
ANR	6316933	PrimaryExpression	"""/usr/include"""		6316011	1					
ANR	6316934	IdentifierDeclStatement	"int len = snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf ) ;"	1606:4:33447:33518	6316011	1	True				
ANR	6316935	IdentifierDecl	"len = snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf )"		6316011	0					
ANR	6316936	IdentifierDeclType	int		6316011	0					
ANR	6316937	Identifier	len		6316011	1					
ANR	6316938	AssignmentExpression	"len = snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf )"		6316011	2		=			
ANR	6316939	Identifier	len		6316011	0					
ANR	6316940	CallExpression	"snprintf ( filepath , sizeof ( filepath ) , ""%s/%s"" , dirname , buf )"		6316011	1					
ANR	6316941	Callee	snprintf		6316011	0					
ANR	6316942	Identifier	snprintf		6316011	0					
ANR	6316943	ArgumentList	filepath		6316011	1					
ANR	6316944	Argument	filepath		6316011	0					
ANR	6316945	Identifier	filepath		6316011	0					
ANR	6316946	Argument	sizeof ( filepath )		6316011	1					
ANR	6316947	SizeofExpression	sizeof ( filepath )		6316011	0					
ANR	6316948	Sizeof	sizeof		6316011	0					
ANR	6316949	SizeofOperand	filepath		6316011	1					
ANR	6316950	Argument	"""%s/%s"""		6316011	2					
ANR	6316951	PrimaryExpression	"""%s/%s"""		6316011	0					
ANR	6316952	Argument	dirname		6316011	3					
ANR	6316953	Identifier	dirname		6316011	0					
ANR	6316954	Argument	buf		6316011	4					
ANR	6316955	Identifier	buf		6316011	0					
ANR	6316956	IfStatement	"if ( len >= sizeof ( filepath ) || tcc_open ( s1 , filepath ) < 0 )"		6316011	2					
ANR	6316957	Condition	"len >= sizeof ( filepath ) || tcc_open ( s1 , filepath ) < 0"	1607:8:33528:33582	6316011	0	True				
ANR	6316958	OrExpression	"len >= sizeof ( filepath ) || tcc_open ( s1 , filepath ) < 0"		6316011	0		||			
ANR	6316959	RelationalExpression	len >= sizeof ( filepath )		6316011	0		>=			
ANR	6316960	Identifier	len		6316011	0					
ANR	6316961	SizeofExpression	sizeof ( filepath )		6316011	1					
ANR	6316962	Sizeof	sizeof		6316011	0					
ANR	6316963	SizeofOperand	filepath		6316011	1					
ANR	6316964	RelationalExpression	"tcc_open ( s1 , filepath ) < 0"		6316011	1		<			
ANR	6316965	CallExpression	"tcc_open ( s1 , filepath )"		6316011	0					
ANR	6316966	Callee	tcc_open		6316011	0					
ANR	6316967	Identifier	tcc_open		6316011	0					
ANR	6316968	ArgumentList	s1		6316011	1					
ANR	6316969	Argument	s1		6316011	0					
ANR	6316970	Identifier	s1		6316011	0					
ANR	6316971	Argument	filepath		6316011	1					
ANR	6316972	Identifier	filepath		6316011	0					
ANR	6316973	PrimaryExpression	0		6316011	1					
ANR	6316974	CompoundStatement		190:65:4790:4790	6316011	1					
ANR	6316975	ExpressionStatement	"tcc_error ( ""include file '%s' not found"" , filepath )"	1608:5:33592:33643	6316011	0	True				
ANR	6316976	CallExpression	"tcc_error ( ""include file '%s' not found"" , filepath )"		6316011	0					
ANR	6316977	Callee	tcc_error		6316011	0					
ANR	6316978	Identifier	tcc_error		6316011	0					
ANR	6316979	ArgumentList	"""include file '%s' not found"""		6316011	1					
ANR	6316980	Argument	"""include file '%s' not found"""		6316011	0					
ANR	6316981	PrimaryExpression	"""include file '%s' not found"""		6316011	0					
ANR	6316982	Argument	filepath		6316011	1					
ANR	6316983	Identifier	filepath		6316011	0					
ANR	6316984	ElseStatement	else		6316011	0					
ANR	6316985	CompoundStatement		192:11:4861:4861	6316011	0					
ANR	6316986	ExpressionStatement	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"	1610:5:33663:33710	6316011	0	True				
ANR	6316987	CallExpression	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"		6316011	0					
ANR	6316988	Callee	fprintf		6316011	0					
ANR	6316989	Identifier	fprintf		6316011	0					
ANR	6316990	ArgumentList	stderr		6316011	1					
ANR	6316991	Argument	stderr		6316011	0					
ANR	6316992	Identifier	stderr		6316011	0					
ANR	6316993	Argument	"""#include \\""%s\\""\\n"""		6316011	1					
ANR	6316994	PrimaryExpression	"""#include \\""%s\\""\\n"""		6316011	0					
ANR	6316995	Argument	filepath		6316011	2					
ANR	6316996	Identifier	filepath		6316011	0					
ANR	6316997	ExpressionStatement	++ s1 -> include_stack_ptr	1611:5:33717:33740	6316011	1	True				
ANR	6316998	UnaryExpression	++ s1 -> include_stack_ptr		6316011	0					
ANR	6316999	IncDec	++		6316011	0					
ANR	6317000	PtrMemberAccess	s1 -> include_stack_ptr		6316011	1					
ANR	6317001	Identifier	s1		6316011	0					
ANR	6317002	Identifier	include_stack_ptr		6316011	1					
ANR	6317003	ExpressionStatement	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL	1612:5:33747:33787	6316011	2	True				
ANR	6317004	AssignmentExpression	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL		6316011	0		|=			
ANR	6317005	Identifier	tok_flags		6316011	0					
ANR	6317006	InclusiveOrExpression	TOK_FLAG_BOF | TOK_FLAG_BOL		6316011	1		|			
ANR	6317007	Identifier	TOK_FLAG_BOF		6316011	0					
ANR	6317008	Identifier	TOK_FLAG_BOL		6316011	1					
ANR	6317009	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1613:5:33794:33815	6316011	3	True				
ANR	6317010	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6316011	0		=			
ANR	6317011	Identifier	ch		6316011	0					
ANR	6317012	ArrayIndexing	file -> buf_ptr [ 0 ]		6316011	1					
ANR	6317013	PtrMemberAccess	file -> buf_ptr		6316011	0					
ANR	6317014	Identifier	file		6316011	0					
ANR	6317015	Identifier	buf_ptr		6316011	1					
ANR	6317016	PrimaryExpression	0		6316011	1					
ANR	6317017	GotoStatement	goto the_end ;	1614:5:33822:33834	6316011	4	True				
ANR	6317018	Identifier	the_end		6316011	0					
ANR	6317019	ElseStatement	else		6316011	0					
ANR	6317020	CompoundStatement		199:10:5057:5057	6316011	0					
ANR	6317021	ExpressionStatement	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"	1617:4:33858:33905	6316011	0	True				
ANR	6317022	CallExpression	"fprintf ( stderr , ""#include \\""%s\\""\\n"" , filepath )"		6316011	0					
ANR	6317023	Callee	fprintf		6316011	0					
ANR	6317024	Identifier	fprintf		6316011	0					
ANR	6317025	ArgumentList	stderr		6316011	1					
ANR	6317026	Argument	stderr		6316011	0					
ANR	6317027	Identifier	stderr		6316011	0					
ANR	6317028	Argument	"""#include \\""%s\\""\\n"""		6316011	1					
ANR	6317029	PrimaryExpression	"""#include \\""%s\\""\\n"""		6316011	0					
ANR	6317030	Argument	filepath		6316011	2					
ANR	6317031	Identifier	filepath		6316011	0					
ANR	6317032	ExpressionStatement	++ s1 -> include_stack_ptr	1618:4:33911:33934	6316011	1	True				
ANR	6317033	UnaryExpression	++ s1 -> include_stack_ptr		6316011	0					
ANR	6317034	IncDec	++		6316011	0					
ANR	6317035	PtrMemberAccess	s1 -> include_stack_ptr		6316011	1					
ANR	6317036	Identifier	s1		6316011	0					
ANR	6317037	Identifier	include_stack_ptr		6316011	1					
ANR	6317038	ExpressionStatement	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL	1619:4:33940:33980	6316011	2	True				
ANR	6317039	AssignmentExpression	tok_flags |= TOK_FLAG_BOF | TOK_FLAG_BOL		6316011	0		|=			
ANR	6317040	Identifier	tok_flags		6316011	0					
ANR	6317041	InclusiveOrExpression	TOK_FLAG_BOF | TOK_FLAG_BOL		6316011	1		|			
ANR	6317042	Identifier	TOK_FLAG_BOF		6316011	0					
ANR	6317043	Identifier	TOK_FLAG_BOL		6316011	1					
ANR	6317044	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1620:4:33986:34007	6316011	3	True				
ANR	6317045	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6316011	0		=			
ANR	6317046	Identifier	ch		6316011	0					
ANR	6317047	ArrayIndexing	file -> buf_ptr [ 0 ]		6316011	1					
ANR	6317048	PtrMemberAccess	file -> buf_ptr		6316011	0					
ANR	6317049	Identifier	file		6316011	0					
ANR	6317050	Identifier	buf_ptr		6316011	1					
ANR	6317051	PrimaryExpression	0		6316011	1					
ANR	6317052	GotoStatement	goto the_end ;	1621:4:34013:34025	6316011	4	True				
ANR	6317053	Identifier	the_end		6316011	0					
ANR	6317054	Label	include_done :	1624:0:34036:34048	6316011	19	True				
ANR	6317055	Identifier	include_done		6316011	0					
ANR	6317056	BreakStatement	break ;	1625:2:34052:34057	6316011	20	True				
ANR	6317057	Label	case TOK_IFNDEF :	1626:1:34060:34075	6316011	21	True				
ANR	6317058	Identifier	TOK_IFNDEF		6316011	0					
ANR	6317059	ExpressionStatement	c = 1	1627:2:34079:34084	6316011	22	True				
ANR	6317060	AssignmentExpression	c = 1		6316011	0		=			
ANR	6317061	Identifier	c		6316011	0					
ANR	6317062	PrimaryExpression	1		6316011	1					
ANR	6317063	GotoStatement	goto do_ifdef ;	1628:2:34088:34101	6316011	23	True				
ANR	6317064	Identifier	do_ifdef		6316011	0					
ANR	6317065	Label	case TOK_IF :	1629:1:34104:34115	6316011	24	True				
ANR	6317066	Identifier	TOK_IF		6316011	0					
ANR	6317067	ExpressionStatement	c = expr_preprocess ( )	1630:2:34119:34141	6316011	25	True				
ANR	6317068	AssignmentExpression	c = expr_preprocess ( )		6316011	0		=			
ANR	6317069	Identifier	c		6316011	0					
ANR	6317070	CallExpression	expr_preprocess ( )		6316011	1					
ANR	6317071	Callee	expr_preprocess		6316011	0					
ANR	6317072	Identifier	expr_preprocess		6316011	0					
ANR	6317073	ArgumentList			6316011	1					
ANR	6317074	GotoStatement	goto do_if ;	1631:2:34145:34155	6316011	26	True				
ANR	6317075	Identifier	do_if		6316011	0					
ANR	6317076	Label	case TOK_IFDEF :	1632:1:34158:34172	6316011	27	True				
ANR	6317077	Identifier	TOK_IFDEF		6316011	0					
ANR	6317078	ExpressionStatement	c = 0	1633:2:34176:34181	6316011	28	True				
ANR	6317079	AssignmentExpression	c = 0		6316011	0		=			
ANR	6317080	Identifier	c		6316011	0					
ANR	6317081	PrimaryExpression	0		6316011	1					
ANR	6317082	Label	do_ifdef :	1634:0:34183:34191	6316011	29	True				
ANR	6317083	Identifier	do_ifdef		6316011	0					
ANR	6317084	ExpressionStatement	next_nomacro ( )	1635:2:34195:34210	6316011	30	True				
ANR	6317085	CallExpression	next_nomacro ( )		6316011	0					
ANR	6317086	Callee	next_nomacro		6316011	0					
ANR	6317087	Identifier	next_nomacro		6316011	0					
ANR	6317088	ArgumentList			6316011	1					
ANR	6317089	IfStatement	if ( tok < TOK_IDENT )		6316011	31					
ANR	6317090	Condition	tok < TOK_IDENT	1636:6:34218:34232	6316011	0	True				
ANR	6317091	RelationalExpression	tok < TOK_IDENT		6316011	0		<			
ANR	6317092	Identifier	tok		6316011	0					
ANR	6317093	Identifier	TOK_IDENT		6316011	1					
ANR	6317094	CompoundStatement		219:23:5440:5440	6316011	1					
ANR	6317095	ExpressionStatement	"tcc_error ( ""invalid argument for '#if%sdef'"" , c ? ""n"" : """" )"	1637:3:34240:34297	6316011	0	True				
ANR	6317096	CallExpression	"tcc_error ( ""invalid argument for '#if%sdef'"" , c ? ""n"" : """" )"		6316011	0					
ANR	6317097	Callee	tcc_error		6316011	0					
ANR	6317098	Identifier	tcc_error		6316011	0					
ANR	6317099	ArgumentList	"""invalid argument for '#if%sdef'"""		6316011	1					
ANR	6317100	Argument	"""invalid argument for '#if%sdef'"""		6316011	0					
ANR	6317101	PrimaryExpression	"""invalid argument for '#if%sdef'"""		6316011	0					
ANR	6317102	Argument	"c ? ""n"" : """""		6316011	1					
ANR	6317103	ConditionalExpression	"c ? ""n"" : """""		6316011	0					
ANR	6317104	Condition	c		6316011	0					
ANR	6317105	Identifier	c		6316011	0					
ANR	6317106	PrimaryExpression	"""n"""		6316011	1					
ANR	6317107	PrimaryExpression	""""""		6316011	2					
ANR	6317108	IfStatement	if ( is_bof )		6316011	32					
ANR	6317109	Condition	is_bof	1639:6:34309:34314	6316011	0	True				
ANR	6317110	Identifier	is_bof		6316011	0					
ANR	6317111	CompoundStatement		222:14:5522:5522	6316011	1					
ANR	6317112	IfStatement	if ( c )		6316011	0					
ANR	6317113	Condition	c	1640:7:34326:34326	6316011	0	True				
ANR	6317114	Identifier	c		6316011	0					
ANR	6317115	CompoundStatement		223:10:5534:5534	6316011	1					
ANR	6317116	ExpressionStatement	"printf ( ""#ifndef %s\\n"" , get_tok_str ( tok , NULL ) )"	1642:4:34352:34400	6316011	0	True				
ANR	6317117	CallExpression	"printf ( ""#ifndef %s\\n"" , get_tok_str ( tok , NULL ) )"		6316011	0					
ANR	6317118	Callee	printf		6316011	0					
ANR	6317119	Identifier	printf		6316011	0					
ANR	6317120	ArgumentList	"""#ifndef %s\\n"""		6316011	1					
ANR	6317121	Argument	"""#ifndef %s\\n"""		6316011	0					
ANR	6317122	PrimaryExpression	"""#ifndef %s\\n"""		6316011	0					
ANR	6317123	Argument	"get_tok_str ( tok , NULL )"		6316011	1					
ANR	6317124	CallExpression	"get_tok_str ( tok , NULL )"		6316011	0					
ANR	6317125	Callee	get_tok_str		6316011	0					
ANR	6317126	Identifier	get_tok_str		6316011	0					
ANR	6317127	ArgumentList	tok		6316011	1					
ANR	6317128	Argument	tok		6316011	0					
ANR	6317129	Identifier	tok		6316011	0					
ANR	6317130	Argument	NULL		6316011	1					
ANR	6317131	Identifier	NULL		6316011	0					
ANR	6317132	ExpressionStatement	file -> ifndef_macro = tok	1644:4:34413:34437	6316011	1	True				
ANR	6317133	AssignmentExpression	file -> ifndef_macro = tok		6316011	0		=			
ANR	6317134	PtrMemberAccess	file -> ifndef_macro		6316011	0					
ANR	6317135	Identifier	file		6316011	0					
ANR	6317136	Identifier	ifndef_macro		6316011	1					
ANR	6317137	Identifier	tok		6316011	1					
ANR	6317138	ExpressionStatement	c = ( define_find ( tok ) != 0 ) ^ c	1647:2:34450:34482	6316011	33	True				
ANR	6317139	AssignmentExpression	c = ( define_find ( tok ) != 0 ) ^ c		6316011	0		=			
ANR	6317140	Identifier	c		6316011	0					
ANR	6317141	ExclusiveOrExpression	( define_find ( tok ) != 0 ) ^ c		6316011	1		^			
ANR	6317142	EqualityExpression	define_find ( tok ) != 0		6316011	0		!=			
ANR	6317143	CallExpression	define_find ( tok )		6316011	0					
ANR	6317144	Callee	define_find		6316011	0					
ANR	6317145	Identifier	define_find		6316011	0					
ANR	6317146	ArgumentList	tok		6316011	1					
ANR	6317147	Argument	tok		6316011	0					
ANR	6317148	Identifier	tok		6316011	0					
ANR	6317149	PrimaryExpression	0		6316011	1					
ANR	6317150	Identifier	c		6316011	1					
ANR	6317151	Label	do_if :	1648:0:34484:34489	6316011	34	True				
ANR	6317152	Identifier	do_if		6316011	0					
ANR	6317153	IfStatement	if ( s1 -> ifdef_stack_ptr >= s1 -> ifdef_stack + IFDEF_STACK_SIZE )		6316011	35					
ANR	6317154	Condition	s1 -> ifdef_stack_ptr >= s1 -> ifdef_stack + IFDEF_STACK_SIZE	1649:6:34497:34553	6316011	0	True				
ANR	6317155	RelationalExpression	s1 -> ifdef_stack_ptr >= s1 -> ifdef_stack + IFDEF_STACK_SIZE		6316011	0		>=			
ANR	6317156	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317157	Identifier	s1		6316011	0					
ANR	6317158	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317159	AdditiveExpression	s1 -> ifdef_stack + IFDEF_STACK_SIZE		6316011	1		+			
ANR	6317160	PtrMemberAccess	s1 -> ifdef_stack		6316011	0					
ANR	6317161	Identifier	s1		6316011	0					
ANR	6317162	Identifier	ifdef_stack		6316011	1					
ANR	6317163	Identifier	IFDEF_STACK_SIZE		6316011	1					
ANR	6317164	CompoundStatement		232:65:5761:5761	6316011	1					
ANR	6317165	ExpressionStatement	"tcc_error ( ""memory full"" )"	1650:3:34561:34586	6316011	0	True				
ANR	6317166	CallExpression	"tcc_error ( ""memory full"" )"		6316011	0					
ANR	6317167	Callee	tcc_error		6316011	0					
ANR	6317168	Identifier	tcc_error		6316011	0					
ANR	6317169	ArgumentList	"""memory full"""		6316011	1					
ANR	6317170	Argument	"""memory full"""		6316011	0					
ANR	6317171	PrimaryExpression	"""memory full"""		6316011	0					
ANR	6317172	ExpressionStatement	* s1 -> ifdef_stack_ptr ++ = c	1652:2:34594:34620	6316011	36	True				
ANR	6317173	AssignmentExpression	* s1 -> ifdef_stack_ptr ++ = c		6316011	0		=			
ANR	6317174	UnaryOperationExpression	* s1 -> ifdef_stack_ptr ++		6316011	0					
ANR	6317175	UnaryOperator	*		6316011	0					
ANR	6317176	PostIncDecOperationExpression	s1 -> ifdef_stack_ptr ++		6316011	1					
ANR	6317177	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317178	Identifier	s1		6316011	0					
ANR	6317179	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317180	IncDec	++		6316011	1					
ANR	6317181	Identifier	c		6316011	1					
ANR	6317182	GotoStatement	goto test_skip ;	1653:2:34624:34638	6316011	37	True				
ANR	6317183	Identifier	test_skip		6316011	0					
ANR	6317184	Label	case TOK_ELSE :	1654:1:34641:34654	6316011	38	True				
ANR	6317185	Identifier	TOK_ELSE		6316011	0					
ANR	6317186	IfStatement	if ( s1 -> ifdef_stack_ptr == s1 -> ifdef_stack )		6316011	39					
ANR	6317187	Condition	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack	1655:6:34662:34699	6316011	0	True				
ANR	6317188	EqualityExpression	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack		6316011	0		==			
ANR	6317189	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317190	Identifier	s1		6316011	0					
ANR	6317191	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317192	PtrMemberAccess	s1 -> ifdef_stack		6316011	1					
ANR	6317193	Identifier	s1		6316011	0					
ANR	6317194	Identifier	ifdef_stack		6316011	1					
ANR	6317195	CompoundStatement		238:46:5907:5907	6316011	1					
ANR	6317196	ExpressionStatement	"tcc_error ( ""#else without matching #if"" )"	1656:3:34707:34747	6316011	0	True				
ANR	6317197	CallExpression	"tcc_error ( ""#else without matching #if"" )"		6316011	0					
ANR	6317198	Callee	tcc_error		6316011	0					
ANR	6317199	Identifier	tcc_error		6316011	0					
ANR	6317200	ArgumentList	"""#else without matching #if"""		6316011	1					
ANR	6317201	Argument	"""#else without matching #if"""		6316011	0					
ANR	6317202	PrimaryExpression	"""#else without matching #if"""		6316011	0					
ANR	6317203	IfStatement	if ( s1 -> ifdef_stack_ptr [ - 1 ] & 2 )		6316011	40					
ANR	6317204	Condition	s1 -> ifdef_stack_ptr [ - 1 ] & 2	1658:6:34759:34785	6316011	0	True				
ANR	6317205	BitAndExpression	s1 -> ifdef_stack_ptr [ - 1 ] & 2		6316011	0		&			
ANR	6317206	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6316011	0					
ANR	6317207	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317208	Identifier	s1		6316011	0					
ANR	6317209	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317210	UnaryOperationExpression	- 1		6316011	1					
ANR	6317211	UnaryOperator	-		6316011	0					
ANR	6317212	PrimaryExpression	1		6316011	1					
ANR	6317213	PrimaryExpression	2		6316011	1					
ANR	6317214	CompoundStatement		241:35:5993:5993	6316011	1					
ANR	6317215	ExpressionStatement	"tcc_error ( ""#else after #else"" )"	1659:3:34793:34824	6316011	0	True				
ANR	6317216	CallExpression	"tcc_error ( ""#else after #else"" )"		6316011	0					
ANR	6317217	Callee	tcc_error		6316011	0					
ANR	6317218	Identifier	tcc_error		6316011	0					
ANR	6317219	ArgumentList	"""#else after #else"""		6316011	1					
ANR	6317220	Argument	"""#else after #else"""		6316011	0					
ANR	6317221	PrimaryExpression	"""#else after #else"""		6316011	0					
ANR	6317222	ExpressionStatement	c = ( s1 -> ifdef_stack_ptr [ - 1 ] ^= 3 )	1661:2:34832:34866	6316011	41	True				
ANR	6317223	AssignmentExpression	c = ( s1 -> ifdef_stack_ptr [ - 1 ] ^= 3 )		6316011	0		=			
ANR	6317224	Identifier	c		6316011	0					
ANR	6317225	AssignmentExpression	s1 -> ifdef_stack_ptr [ - 1 ] ^= 3		6316011	1		^=			
ANR	6317226	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6316011	0					
ANR	6317227	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317228	Identifier	s1		6316011	0					
ANR	6317229	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317230	UnaryOperationExpression	- 1		6316011	1					
ANR	6317231	UnaryOperator	-		6316011	0					
ANR	6317232	PrimaryExpression	1		6316011	1					
ANR	6317233	PrimaryExpression	3		6316011	1					
ANR	6317234	GotoStatement	goto test_else ;	1662:2:34870:34884	6316011	42	True				
ANR	6317235	Identifier	test_else		6316011	0					
ANR	6317236	Label	case TOK_ELIF :	1663:1:34887:34900	6316011	43	True				
ANR	6317237	Identifier	TOK_ELIF		6316011	0					
ANR	6317238	IfStatement	if ( s1 -> ifdef_stack_ptr == s1 -> ifdef_stack )		6316011	44					
ANR	6317239	Condition	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack	1664:6:34908:34945	6316011	0	True				
ANR	6317240	EqualityExpression	s1 -> ifdef_stack_ptr == s1 -> ifdef_stack		6316011	0		==			
ANR	6317241	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317242	Identifier	s1		6316011	0					
ANR	6317243	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317244	PtrMemberAccess	s1 -> ifdef_stack		6316011	1					
ANR	6317245	Identifier	s1		6316011	0					
ANR	6317246	Identifier	ifdef_stack		6316011	1					
ANR	6317247	CompoundStatement		247:46:6153:6153	6316011	1					
ANR	6317248	ExpressionStatement	"tcc_error ( ""#elif without matching #if"" )"	1665:3:34953:34993	6316011	0	True				
ANR	6317249	CallExpression	"tcc_error ( ""#elif without matching #if"" )"		6316011	0					
ANR	6317250	Callee	tcc_error		6316011	0					
ANR	6317251	Identifier	tcc_error		6316011	0					
ANR	6317252	ArgumentList	"""#elif without matching #if"""		6316011	1					
ANR	6317253	Argument	"""#elif without matching #if"""		6316011	0					
ANR	6317254	PrimaryExpression	"""#elif without matching #if"""		6316011	0					
ANR	6317255	ExpressionStatement	c = s1 -> ifdef_stack_ptr [ - 1 ]	1667:2:35001:35028	6316011	45	True				
ANR	6317256	AssignmentExpression	c = s1 -> ifdef_stack_ptr [ - 1 ]		6316011	0		=			
ANR	6317257	Identifier	c		6316011	0					
ANR	6317258	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6316011	1					
ANR	6317259	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317260	Identifier	s1		6316011	0					
ANR	6317261	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317262	UnaryOperationExpression	- 1		6316011	1					
ANR	6317263	UnaryOperator	-		6316011	0					
ANR	6317264	PrimaryExpression	1		6316011	1					
ANR	6317265	IfStatement	if ( c > 1 )		6316011	46					
ANR	6317266	Condition	c > 1	1668:6:35036:35040	6316011	0	True				
ANR	6317267	RelationalExpression	c > 1		6316011	0		>			
ANR	6317268	Identifier	c		6316011	0					
ANR	6317269	PrimaryExpression	1		6316011	1					
ANR	6317270	CompoundStatement		251:13:6248:6248	6316011	1					
ANR	6317271	ExpressionStatement	"tcc_error ( ""#elif after #else"" )"	1669:3:35048:35079	6316011	0	True				
ANR	6317272	CallExpression	"tcc_error ( ""#elif after #else"" )"		6316011	0					
ANR	6317273	Callee	tcc_error		6316011	0					
ANR	6317274	Identifier	tcc_error		6316011	0					
ANR	6317275	ArgumentList	"""#elif after #else"""		6316011	1					
ANR	6317276	Argument	"""#elif after #else"""		6316011	0					
ANR	6317277	PrimaryExpression	"""#elif after #else"""		6316011	0					
ANR	6317278	IfStatement	if ( c == 1 )		6316011	47					
ANR	6317279	Condition	c == 1	1672:6:35143:35148	6316011	0	True				
ANR	6317280	EqualityExpression	c == 1		6316011	0		==			
ANR	6317281	Identifier	c		6316011	0					
ANR	6317282	PrimaryExpression	1		6316011	1					
ANR	6317283	CompoundStatement		255:14:6356:6356	6316011	1					
ANR	6317284	GotoStatement	goto skip ;	1673:3:35156:35165	6316011	0	True				
ANR	6317285	Identifier	skip		6316011	0					
ANR	6317286	ExpressionStatement	c = expr_preprocess ( )	1675:2:35173:35195	6316011	48	True				
ANR	6317287	AssignmentExpression	c = expr_preprocess ( )		6316011	0		=			
ANR	6317288	Identifier	c		6316011	0					
ANR	6317289	CallExpression	expr_preprocess ( )		6316011	1					
ANR	6317290	Callee	expr_preprocess		6316011	0					
ANR	6317291	Identifier	expr_preprocess		6316011	0					
ANR	6317292	ArgumentList			6316011	1					
ANR	6317293	ExpressionStatement	s1 -> ifdef_stack_ptr [ - 1 ] = c	1676:2:35199:35226	6316011	49	True				
ANR	6317294	AssignmentExpression	s1 -> ifdef_stack_ptr [ - 1 ] = c		6316011	0		=			
ANR	6317295	ArrayIndexing	s1 -> ifdef_stack_ptr [ - 1 ]		6316011	0					
ANR	6317296	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317297	Identifier	s1		6316011	0					
ANR	6317298	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317299	UnaryOperationExpression	- 1		6316011	1					
ANR	6317300	UnaryOperator	-		6316011	0					
ANR	6317301	PrimaryExpression	1		6316011	1					
ANR	6317302	Identifier	c		6316011	1					
ANR	6317303	Label	test_else :	1677:0:35228:35237	6316011	50	True				
ANR	6317304	Identifier	test_else		6316011	0					
ANR	6317305	IfStatement	if ( s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr + 1 )		6316011	51					
ANR	6317306	Condition	s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr + 1	1678:6:35245:35292	6316011	0	True				
ANR	6317307	EqualityExpression	s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr + 1		6316011	0		==			
ANR	6317308	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317309	Identifier	s1		6316011	0					
ANR	6317310	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317311	AdditiveExpression	file -> ifdef_stack_ptr + 1		6316011	1		+			
ANR	6317312	PtrMemberAccess	file -> ifdef_stack_ptr		6316011	0					
ANR	6317313	Identifier	file		6316011	0					
ANR	6317314	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317315	PrimaryExpression	1		6316011	1					
ANR	6317316	CompoundStatement		261:56:6500:6500	6316011	1					
ANR	6317317	ExpressionStatement	file -> ifndef_macro = 0	1679:3:35300:35322	6316011	0	True				
ANR	6317318	AssignmentExpression	file -> ifndef_macro = 0		6316011	0		=			
ANR	6317319	PtrMemberAccess	file -> ifndef_macro		6316011	0					
ANR	6317320	Identifier	file		6316011	0					
ANR	6317321	Identifier	ifndef_macro		6316011	1					
ANR	6317322	PrimaryExpression	0		6316011	1					
ANR	6317323	Label	test_skip :	1681:0:35328:35337	6316011	52	True				
ANR	6317324	Identifier	test_skip		6316011	0					
ANR	6317325	IfStatement	if ( ! ( c & 1 ) )		6316011	53					
ANR	6317326	Condition	! ( c & 1 )	1682:6:35345:35352	6316011	0	True				
ANR	6317327	UnaryOperationExpression	! ( c & 1 )		6316011	0					
ANR	6317328	UnaryOperator	!		6316011	0					
ANR	6317329	BitAndExpression	c & 1		6316011	1		&			
ANR	6317330	Identifier	c		6316011	0					
ANR	6317331	PrimaryExpression	1		6316011	1					
ANR	6317332	CompoundStatement		265:16:6560:6560	6316011	1					
ANR	6317333	Label	skip :	1683:0:35357:35361	6316011	0	True				
ANR	6317334	Identifier	skip		6316011	0					
ANR	6317335	ExpressionStatement	preprocess_skip ( )	1684:3:35366:35384	6316011	1	True				
ANR	6317336	CallExpression	preprocess_skip ( )		6316011	0					
ANR	6317337	Callee	preprocess_skip		6316011	0					
ANR	6317338	Identifier	preprocess_skip		6316011	0					
ANR	6317339	ArgumentList			6316011	1					
ANR	6317340	ExpressionStatement	is_bof = 0	1685:3:35389:35399	6316011	2	True				
ANR	6317341	AssignmentExpression	is_bof = 0		6316011	0		=			
ANR	6317342	Identifier	is_bof		6316011	0					
ANR	6317343	PrimaryExpression	0		6316011	1					
ANR	6317344	GotoStatement	goto redo ;	1686:3:35404:35413	6316011	3	True				
ANR	6317345	Identifier	redo		6316011	0					
ANR	6317346	BreakStatement	break ;	1688:2:35421:35426	6316011	54	True				
ANR	6317347	Label	case TOK_ENDIF :	1689:1:35429:35443	6316011	55	True				
ANR	6317348	Identifier	TOK_ENDIF		6316011	0					
ANR	6317349	IfStatement	if ( s1 -> ifdef_stack_ptr <= file -> ifdef_stack_ptr )		6316011	56					
ANR	6317350	Condition	s1 -> ifdef_stack_ptr <= file -> ifdef_stack_ptr	1690:6:35451:35494	6316011	0	True				
ANR	6317351	RelationalExpression	s1 -> ifdef_stack_ptr <= file -> ifdef_stack_ptr		6316011	0		<=			
ANR	6317352	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317353	Identifier	s1		6316011	0					
ANR	6317354	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317355	PtrMemberAccess	file -> ifdef_stack_ptr		6316011	1					
ANR	6317356	Identifier	file		6316011	0					
ANR	6317357	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317358	CompoundStatement		273:52:6702:6702	6316011	1					
ANR	6317359	ExpressionStatement	"tcc_error ( ""#endif without matching #if"" )"	1691:3:35502:35543	6316011	0	True				
ANR	6317360	CallExpression	"tcc_error ( ""#endif without matching #if"" )"		6316011	0					
ANR	6317361	Callee	tcc_error		6316011	0					
ANR	6317362	Identifier	tcc_error		6316011	0					
ANR	6317363	ArgumentList	"""#endif without matching #if"""		6316011	1					
ANR	6317364	Argument	"""#endif without matching #if"""		6316011	0					
ANR	6317365	PrimaryExpression	"""#endif without matching #if"""		6316011	0					
ANR	6317366	ExpressionStatement	s1 -> ifdef_stack_ptr --	1693:2:35551:35572	6316011	57	True				
ANR	6317367	PostIncDecOperationExpression	s1 -> ifdef_stack_ptr --		6316011	0					
ANR	6317368	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317369	Identifier	s1		6316011	0					
ANR	6317370	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317371	IncDec	--		6316011	1					
ANR	6317372	IfStatement	if ( file -> ifndef_macro && s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr )		6316011	58					
ANR	6317373	Condition	file -> ifndef_macro && s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr	1696:6:35693:35764	6316011	0	True				
ANR	6317374	AndExpression	file -> ifndef_macro && s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr		6316011	0		&&			
ANR	6317375	PtrMemberAccess	file -> ifndef_macro		6316011	0					
ANR	6317376	Identifier	file		6316011	0					
ANR	6317377	Identifier	ifndef_macro		6316011	1					
ANR	6317378	EqualityExpression	s1 -> ifdef_stack_ptr == file -> ifdef_stack_ptr		6316011	1		==			
ANR	6317379	PtrMemberAccess	s1 -> ifdef_stack_ptr		6316011	0					
ANR	6317380	Identifier	s1		6316011	0					
ANR	6317381	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317382	PtrMemberAccess	file -> ifdef_stack_ptr		6316011	1					
ANR	6317383	Identifier	file		6316011	0					
ANR	6317384	Identifier	ifdef_stack_ptr		6316011	1					
ANR	6317385	CompoundStatement		280:52:6972:6972	6316011	1					
ANR	6317386	ExpressionStatement	file -> ifndef_macro_saved = file -> ifndef_macro	1698:3:35772:35817	6316011	0	True				
ANR	6317387	AssignmentExpression	file -> ifndef_macro_saved = file -> ifndef_macro		6316011	0		=			
ANR	6317388	PtrMemberAccess	file -> ifndef_macro_saved		6316011	0					
ANR	6317389	Identifier	file		6316011	0					
ANR	6317390	Identifier	ifndef_macro_saved		6316011	1					
ANR	6317391	PtrMemberAccess	file -> ifndef_macro		6316011	1					
ANR	6317392	Identifier	file		6316011	0					
ANR	6317393	Identifier	ifndef_macro		6316011	1					
ANR	6317394	ExpressionStatement	file -> ifndef_macro = 0	1701:3:35917:35939	6316011	1	True				
ANR	6317395	AssignmentExpression	file -> ifndef_macro = 0		6316011	0		=			
ANR	6317396	PtrMemberAccess	file -> ifndef_macro		6316011	0					
ANR	6317397	Identifier	file		6316011	0					
ANR	6317398	Identifier	ifndef_macro		6316011	1					
ANR	6317399	PrimaryExpression	0		6316011	1					
ANR	6317400	WhileStatement	while ( tok != TOK_LINEFEED )		6316011	2					
ANR	6317401	Condition	tok != TOK_LINEFEED	1702:10:35951:35969	6316011	0	True				
ANR	6317402	EqualityExpression	tok != TOK_LINEFEED		6316011	0		!=			
ANR	6317403	Identifier	tok		6316011	0					
ANR	6317404	Identifier	TOK_LINEFEED		6316011	1					
ANR	6317405	ExpressionStatement	next_nomacro ( )	1703:4:35976:35991	6316011	1	True				
ANR	6317406	CallExpression	next_nomacro ( )		6316011	0					
ANR	6317407	Callee	next_nomacro		6316011	0					
ANR	6317408	Identifier	next_nomacro		6316011	0					
ANR	6317409	ArgumentList			6316011	1					
ANR	6317410	ExpressionStatement	tok_flags |= TOK_FLAG_ENDIF	1704:3:35996:36023	6316011	3	True				
ANR	6317411	AssignmentExpression	tok_flags |= TOK_FLAG_ENDIF		6316011	0		|=			
ANR	6317412	Identifier	tok_flags		6316011	0					
ANR	6317413	Identifier	TOK_FLAG_ENDIF		6316011	1					
ANR	6317414	GotoStatement	goto the_end ;	1705:3:36028:36040	6316011	4	True				
ANR	6317415	Identifier	the_end		6316011	0					
ANR	6317416	BreakStatement	break ;	1707:2:36048:36053	6316011	59	True				
ANR	6317417	Label	case TOK_LINE :	1708:1:36056:36069	6316011	60	True				
ANR	6317418	Identifier	TOK_LINE		6316011	0					
ANR	6317419	ExpressionStatement	next ( )	1709:2:36073:36080	6316011	61	True				
ANR	6317420	CallExpression	next ( )		6316011	0					
ANR	6317421	Callee	next		6316011	0					
ANR	6317422	Identifier	next		6316011	0					
ANR	6317423	ArgumentList			6316011	1					
ANR	6317424	IfStatement	if ( tok != TOK_CINT )		6316011	62					
ANR	6317425	Condition	tok != TOK_CINT	1710:6:36088:36102	6316011	0	True				
ANR	6317426	EqualityExpression	tok != TOK_CINT		6316011	0		!=			
ANR	6317427	Identifier	tok		6316011	0					
ANR	6317428	Identifier	TOK_CINT		6316011	1					
ANR	6317429	CompoundStatement		293:23:7310:7310	6316011	1					
ANR	6317430	ExpressionStatement	"tcc_error ( ""#line"" )"	1711:3:36110:36129	6316011	0	True				
ANR	6317431	CallExpression	"tcc_error ( ""#line"" )"		6316011	0					
ANR	6317432	Callee	tcc_error		6316011	0					
ANR	6317433	Identifier	tcc_error		6316011	0					
ANR	6317434	ArgumentList	"""#line"""		6316011	1					
ANR	6317435	Argument	"""#line"""		6316011	0					
ANR	6317436	PrimaryExpression	"""#line"""		6316011	0					
ANR	6317437	ExpressionStatement	file -> line_num = tokc . i - 1	1713:2:36137:36164	6316011	63	True				
ANR	6317438	AssignmentExpression	file -> line_num = tokc . i - 1		6316011	0		=			
ANR	6317439	PtrMemberAccess	file -> line_num		6316011	0					
ANR	6317440	Identifier	file		6316011	0					
ANR	6317441	Identifier	line_num		6316011	1					
ANR	6317442	AdditiveExpression	tokc . i - 1		6316011	1		-			
ANR	6317443	MemberAccess	tokc . i		6316011	0					
ANR	6317444	Identifier	tokc		6316011	0					
ANR	6317445	Identifier	i		6316011	1					
ANR	6317446	PrimaryExpression	1		6316011	1					
ANR	6317447	ExpressionStatement	next ( )	1714:2:36216:36223	6316011	64	True				
ANR	6317448	CallExpression	next ( )		6316011	0					
ANR	6317449	Callee	next		6316011	0					
ANR	6317450	Identifier	next		6316011	0					
ANR	6317451	ArgumentList			6316011	1					
ANR	6317452	IfStatement	if ( tok != TOK_LINEFEED )		6316011	65					
ANR	6317453	Condition	tok != TOK_LINEFEED	1715:6:36231:36249	6316011	0	True				
ANR	6317454	EqualityExpression	tok != TOK_LINEFEED		6316011	0		!=			
ANR	6317455	Identifier	tok		6316011	0					
ANR	6317456	Identifier	TOK_LINEFEED		6316011	1					
ANR	6317457	CompoundStatement		298:27:7457:7457	6316011	1					
ANR	6317458	IfStatement	if ( tok != TOK_STR )		6316011	0					
ANR	6317459	Condition	tok != TOK_STR	1716:7:36261:36274	6316011	0	True				
ANR	6317460	EqualityExpression	tok != TOK_STR		6316011	0		!=			
ANR	6317461	Identifier	tok		6316011	0					
ANR	6317462	Identifier	TOK_STR		6316011	1					
ANR	6317463	CompoundStatement		299:23:7482:7482	6316011	1					
ANR	6317464	ExpressionStatement	"tcc_error ( ""#line"" )"	1717:4:36283:36302	6316011	0	True				
ANR	6317465	CallExpression	"tcc_error ( ""#line"" )"		6316011	0					
ANR	6317466	Callee	tcc_error		6316011	0					
ANR	6317467	Identifier	tcc_error		6316011	0					
ANR	6317468	ArgumentList	"""#line"""		6316011	1					
ANR	6317469	Argument	"""#line"""		6316011	0					
ANR	6317470	PrimaryExpression	"""#line"""		6316011	0					
ANR	6317471	ExpressionStatement	"pstrcpy ( file -> filename , sizeof ( file -> filename ) , ( char * ) tokc . cstr -> data )"	1719:3:36312:36390	6316011	1	True				
ANR	6317472	CallExpression	"pstrcpy ( file -> filename , sizeof ( file -> filename ) , ( char * ) tokc . cstr -> data )"		6316011	0					
ANR	6317473	Callee	pstrcpy		6316011	0					
ANR	6317474	Identifier	pstrcpy		6316011	0					
ANR	6317475	ArgumentList	file -> filename		6316011	1					
ANR	6317476	Argument	file -> filename		6316011	0					
ANR	6317477	PtrMemberAccess	file -> filename		6316011	0					
ANR	6317478	Identifier	file		6316011	0					
ANR	6317479	Identifier	filename		6316011	1					
ANR	6317480	Argument	sizeof ( file -> filename )		6316011	1					
ANR	6317481	SizeofExpression	sizeof ( file -> filename )		6316011	0					
ANR	6317482	Sizeof	sizeof		6316011	0					
ANR	6317483	PtrMemberAccess	file -> filename		6316011	1					
ANR	6317484	Identifier	file		6316011	0					
ANR	6317485	Identifier	filename		6316011	1					
ANR	6317486	Argument	( char * ) tokc . cstr -> data		6316011	2					
ANR	6317487	CastExpression	( char * ) tokc . cstr -> data		6316011	0					
ANR	6317488	CastTarget	char *		6316011	0					
ANR	6317489	PtrMemberAccess	tokc . cstr -> data		6316011	1					
ANR	6317490	MemberAccess	tokc . cstr		6316011	0					
ANR	6317491	Identifier	tokc		6316011	0					
ANR	6317492	Identifier	cstr		6316011	1					
ANR	6317493	Identifier	data		6316011	1					
ANR	6317494	BreakStatement	break ;	1722:2:36398:36403	6316011	66	True				
ANR	6317495	Label	case TOK_ERROR :	1723:1:36406:36420	6316011	67	True				
ANR	6317496	Identifier	TOK_ERROR		6316011	0					
ANR	6317497	Label	case TOK_WARNING :	1724:1:36423:36439	6316011	68	True				
ANR	6317498	Identifier	TOK_WARNING		6316011	0					
ANR	6317499	ExpressionStatement	c = tok	1725:2:36443:36450	6316011	69	True				
ANR	6317500	AssignmentExpression	c = tok		6316011	0		=			
ANR	6317501	Identifier	c		6316011	0					
ANR	6317502	Identifier	tok		6316011	1					
ANR	6317503	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	1726:2:36454:36475	6316011	70	True				
ANR	6317504	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6316011	0		=			
ANR	6317505	Identifier	ch		6316011	0					
ANR	6317506	ArrayIndexing	file -> buf_ptr [ 0 ]		6316011	1					
ANR	6317507	PtrMemberAccess	file -> buf_ptr		6316011	0					
ANR	6317508	Identifier	file		6316011	0					
ANR	6317509	Identifier	buf_ptr		6316011	1					
ANR	6317510	PrimaryExpression	0		6316011	1					
ANR	6317511	ExpressionStatement	skip_spaces ( )	1727:2:36479:36493	6316011	71	True				
ANR	6317512	CallExpression	skip_spaces ( )		6316011	0					
ANR	6317513	Callee	skip_spaces		6316011	0					
ANR	6317514	Identifier	skip_spaces		6316011	0					
ANR	6317515	ArgumentList			6316011	1					
ANR	6317516	ExpressionStatement	q = buf	1728:2:36497:36504	6316011	72	True				
ANR	6317517	AssignmentExpression	q = buf		6316011	0		=			
ANR	6317518	Identifier	q		6316011	0					
ANR	6317519	Identifier	buf		6316011	1					
ANR	6317520	WhileStatement	while ( ch != '\\n' && ch != CH_EOF )		6316011	73					
ANR	6317521	Condition	ch != '\\n' && ch != CH_EOF	1729:9:36515:36540	6316011	0	True				
ANR	6317522	AndExpression	ch != '\\n' && ch != CH_EOF		6316011	0		&&			
ANR	6317523	EqualityExpression	ch != '\\n'		6316011	0		!=			
ANR	6317524	Identifier	ch		6316011	0					
ANR	6317525	PrimaryExpression	'\\n'		6316011	1					
ANR	6317526	EqualityExpression	ch != CH_EOF		6316011	1		!=			
ANR	6317527	Identifier	ch		6316011	0					
ANR	6317528	Identifier	CH_EOF		6316011	1					
ANR	6317529	CompoundStatement		312:37:7748:7748	6316011	1					
ANR	6317530	IfStatement	if ( ( q - buf ) < sizeof ( buf ) - 1 )		6316011	0					
ANR	6317531	Condition	( q - buf ) < sizeof ( buf ) - 1	1730:7:36552:36578	6316011	0	True				
ANR	6317532	RelationalExpression	( q - buf ) < sizeof ( buf ) - 1		6316011	0		<			
ANR	6317533	AdditiveExpression	q - buf		6316011	0		-			
ANR	6317534	Identifier	q		6316011	0					
ANR	6317535	Identifier	buf		6316011	1					
ANR	6317536	AdditiveExpression	sizeof ( buf ) - 1		6316011	1		-			
ANR	6317537	SizeofExpression	sizeof ( buf )		6316011	0					
ANR	6317538	Sizeof	sizeof		6316011	0					
ANR	6317539	SizeofOperand	buf		6316011	1					
ANR	6317540	PrimaryExpression	1		6316011	1					
ANR	6317541	CompoundStatement		313:36:7786:7786	6316011	1					
ANR	6317542	ExpressionStatement	* q ++ = ch	1731:4:36587:36596	6316011	0	True				
ANR	6317543	AssignmentExpression	* q ++ = ch		6316011	0		=			
ANR	6317544	UnaryOperationExpression	* q ++		6316011	0					
ANR	6317545	UnaryOperator	*		6316011	0					
ANR	6317546	PostIncDecOperationExpression	q ++		6316011	1					
ANR	6317547	Identifier	q		6316011	0					
ANR	6317548	IncDec	++		6316011	1					
ANR	6317549	Identifier	ch		6316011	1					
ANR	6317550	IfStatement	if ( ch == '\\\\' )		6316011	1					
ANR	6317551	Condition	ch == '\\\\'	1733:7:36610:36619	6316011	0	True				
ANR	6317552	EqualityExpression	ch == '\\\\'		6316011	0		==			
ANR	6317553	Identifier	ch		6316011	0					
ANR	6317554	PrimaryExpression	'\\\\'		6316011	1					
ANR	6317555	CompoundStatement		316:19:7827:7827	6316011	1					
ANR	6317556	IfStatement	if ( handle_stray_noerror ( ) == 0 )		6316011	0					
ANR	6317557	Condition	handle_stray_noerror ( ) == 0	1734:8:36632:36659	6316011	0	True				
ANR	6317558	EqualityExpression	handle_stray_noerror ( ) == 0		6316011	0		==			
ANR	6317559	CallExpression	handle_stray_noerror ( )		6316011	0					
ANR	6317560	Callee	handle_stray_noerror		6316011	0					
ANR	6317561	Identifier	handle_stray_noerror		6316011	0					
ANR	6317562	ArgumentList			6316011	1					
ANR	6317563	PrimaryExpression	0		6316011	1					
ANR	6317564	CompoundStatement		317:38:7867:7867	6316011	1					
ANR	6317565	ExpressionStatement	-- q	1735:5:36669:36672	6316011	0	True				
ANR	6317566	UnaryExpression	-- q		6316011	0					
ANR	6317567	IncDec	--		6316011	0					
ANR	6317568	Identifier	q		6316011	1					
ANR	6317569	ElseStatement	else		6316011	0					
ANR	6317570	CompoundStatement		320:10:7895:7895	6316011	0					
ANR	6317571	ExpressionStatement	inp ( )	1738:4:36696:36702	6316011	0	True				
ANR	6317572	CallExpression	inp ( )		6316011	0					
ANR	6317573	Callee	inp		6316011	0					
ANR	6317574	Identifier	inp		6316011	0					
ANR	6317575	ArgumentList			6316011	1					
ANR	6317576	ExpressionStatement	* q = '\\0'	1741:2:36715:36724	6316011	74	True				
ANR	6317577	AssignmentExpression	* q = '\\0'		6316011	0		=			
ANR	6317578	UnaryOperationExpression	* q		6316011	0					
ANR	6317579	UnaryOperator	*		6316011	0					
ANR	6317580	Identifier	q		6316011	1					
ANR	6317581	PrimaryExpression	'\\0'		6316011	1					
ANR	6317582	ExpressionStatement	"tcc_warning ( ""#%s %s"" , c == TOK_ERROR ? ""error"" : ""warning"" , buf )"	1742:2:36728:36791	6316011	75	True				
ANR	6317583	CallExpression	"tcc_warning ( ""#%s %s"" , c == TOK_ERROR ? ""error"" : ""warning"" , buf )"		6316011	0					
ANR	6317584	Callee	tcc_warning		6316011	0					
ANR	6317585	Identifier	tcc_warning		6316011	0					
ANR	6317586	ArgumentList	"""#%s %s"""		6316011	1					
ANR	6317587	Argument	"""#%s %s"""		6316011	0					
ANR	6317588	PrimaryExpression	"""#%s %s"""		6316011	0					
ANR	6317589	Argument	"c == TOK_ERROR ? ""error"" : ""warning"""		6316011	1					
ANR	6317590	ConditionalExpression	"c == TOK_ERROR ? ""error"" : ""warning"""		6316011	0					
ANR	6317591	Condition	c == TOK_ERROR		6316011	0					
ANR	6317592	EqualityExpression	c == TOK_ERROR		6316011	0		==			
ANR	6317593	Identifier	c		6316011	0					
ANR	6317594	Identifier	TOK_ERROR		6316011	1					
ANR	6317595	PrimaryExpression	"""error"""		6316011	1					
ANR	6317596	PrimaryExpression	"""warning"""		6316011	2					
ANR	6317597	Argument	buf		6316011	2					
ANR	6317598	Identifier	buf		6316011	0					
ANR	6317599	BreakStatement	break ;	1743:2:36795:36800	6316011	76	True				
ANR	6317600	Label	case TOK_PRAGMA :	1744:1:36803:36818	6316011	77	True				
ANR	6317601	Identifier	TOK_PRAGMA		6316011	0					
ANR	6317602	ExpressionStatement	pragma_parse ( s1 )	1745:2:36822:36839	6316011	78	True				
ANR	6317603	CallExpression	pragma_parse ( s1 )		6316011	0					
ANR	6317604	Callee	pragma_parse		6316011	0					
ANR	6317605	Identifier	pragma_parse		6316011	0					
ANR	6317606	ArgumentList	s1		6316011	1					
ANR	6317607	Argument	s1		6316011	0					
ANR	6317608	Identifier	s1		6316011	0					
ANR	6317609	BreakStatement	break ;	1746:2:36843:36848	6316011	79	True				
ANR	6317610	Label	default :	1747:1:36851:36858	6316011	80	True				
ANR	6317611	Identifier	default		6316011	0					
ANR	6317612	IfStatement	if ( tok == TOK_LINEFEED || tok == '!' || tok == TOK_PPNUM )		6316011	81					
ANR	6317613	Condition	tok == TOK_LINEFEED || tok == '!' || tok == TOK_PPNUM	1748:6:36866:36918	6316011	0	True				
ANR	6317614	OrExpression	tok == TOK_LINEFEED || tok == '!' || tok == TOK_PPNUM		6316011	0		||			
ANR	6317615	EqualityExpression	tok == TOK_LINEFEED		6316011	0		==			
ANR	6317616	Identifier	tok		6316011	0					
ANR	6317617	Identifier	TOK_LINEFEED		6316011	1					
ANR	6317618	OrExpression	tok == '!' || tok == TOK_PPNUM		6316011	1		||			
ANR	6317619	EqualityExpression	tok == '!'		6316011	0		==			
ANR	6317620	Identifier	tok		6316011	0					
ANR	6317621	PrimaryExpression	'!'		6316011	1					
ANR	6317622	EqualityExpression	tok == TOK_PPNUM		6316011	1		==			
ANR	6317623	Identifier	tok		6316011	0					
ANR	6317624	Identifier	TOK_PPNUM		6316011	1					
ANR	6317625	CompoundStatement		331:61:8126:8126	6316011	1					
ANR	6317626	ElseStatement	else		6316011	0					
ANR	6317627	CompoundStatement		334:9:8232:8232	6316011	0					
ANR	6317628	IfStatement	if ( ! ( saved_parse_flags & PARSE_FLAG_ASM_COMMENTS ) )		6316011	0					
ANR	6317629	Condition	! ( saved_parse_flags & PARSE_FLAG_ASM_COMMENTS )	1752:7:37036:37081	6316011	0	True				
ANR	6317630	UnaryOperationExpression	! ( saved_parse_flags & PARSE_FLAG_ASM_COMMENTS )		6316011	0					
ANR	6317631	UnaryOperator	!		6316011	0					
ANR	6317632	BitAndExpression	saved_parse_flags & PARSE_FLAG_ASM_COMMENTS		6316011	1		&			
ANR	6317633	Identifier	saved_parse_flags		6316011	0					
ANR	6317634	Identifier	PARSE_FLAG_ASM_COMMENTS		6316011	1					
ANR	6317635	CompoundStatement		335:55:8289:8289	6316011	1					
ANR	6317636	ExpressionStatement	"tcc_warning ( ""Ignoring unknown preprocessing directive #%s"" , get_tok_str ( tok , & tokc ) )"	1753:4:37090:37176	6316011	0	True				
ANR	6317637	CallExpression	"tcc_warning ( ""Ignoring unknown preprocessing directive #%s"" , get_tok_str ( tok , & tokc ) )"		6316011	0					
ANR	6317638	Callee	tcc_warning		6316011	0					
ANR	6317639	Identifier	tcc_warning		6316011	0					
ANR	6317640	ArgumentList	"""Ignoring unknown preprocessing directive #%s"""		6316011	1					
ANR	6317641	Argument	"""Ignoring unknown preprocessing directive #%s"""		6316011	0					
ANR	6317642	PrimaryExpression	"""Ignoring unknown preprocessing directive #%s"""		6316011	0					
ANR	6317643	Argument	"get_tok_str ( tok , & tokc )"		6316011	1					
ANR	6317644	CallExpression	"get_tok_str ( tok , & tokc )"		6316011	0					
ANR	6317645	Callee	get_tok_str		6316011	0					
ANR	6317646	Identifier	get_tok_str		6316011	0					
ANR	6317647	ArgumentList	tok		6316011	1					
ANR	6317648	Argument	tok		6316011	0					
ANR	6317649	Identifier	tok		6316011	0					
ANR	6317650	Argument	& tokc		6316011	1					
ANR	6317651	UnaryOperationExpression	& tokc		6316011	0					
ANR	6317652	UnaryOperator	&		6316011	0					
ANR	6317653	Identifier	tokc		6316011	1					
ANR	6317654	ElseStatement	else		6316011	0					
ANR	6317655	CompoundStatement		337:10:8393:8393	6316011	0					
ANR	6317656	ExpressionStatement	file -> buf_ptr = parse_line_comment ( file -> buf_ptr )	1756:4:37247:37297	6316011	0	True				
ANR	6317657	AssignmentExpression	file -> buf_ptr = parse_line_comment ( file -> buf_ptr )		6316011	0		=			
ANR	6317658	PtrMemberAccess	file -> buf_ptr		6316011	0					
ANR	6317659	Identifier	file		6316011	0					
ANR	6317660	Identifier	buf_ptr		6316011	1					
ANR	6317661	CallExpression	parse_line_comment ( file -> buf_ptr )		6316011	1					
ANR	6317662	Callee	parse_line_comment		6316011	0					
ANR	6317663	Identifier	parse_line_comment		6316011	0					
ANR	6317664	ArgumentList	file -> buf_ptr		6316011	1					
ANR	6317665	Argument	file -> buf_ptr		6316011	0					
ANR	6317666	PtrMemberAccess	file -> buf_ptr		6316011	0					
ANR	6317667	Identifier	file		6316011	0					
ANR	6317668	Identifier	buf_ptr		6316011	1					
ANR	6317669	GotoStatement	goto the_end ;	1757:4:37303:37315	6316011	1	True				
ANR	6317670	Identifier	the_end		6316011	0					
ANR	6317671	BreakStatement	break ;	1760:2:37328:37333	6316011	82	True				
ANR	6317672	WhileStatement	while ( tok != TOK_LINEFEED )		6316011	9					
ANR	6317673	Condition	tok != TOK_LINEFEED	1763:8:37406:37424	6316011	0	True				
ANR	6317674	EqualityExpression	tok != TOK_LINEFEED		6316011	0		!=			
ANR	6317675	Identifier	tok		6316011	0					
ANR	6317676	Identifier	TOK_LINEFEED		6316011	1					
ANR	6317677	ExpressionStatement	next_nomacro ( )	1764:2:37429:37444	6316011	1	True				
ANR	6317678	CallExpression	next_nomacro ( )		6316011	0					
ANR	6317679	Callee	next_nomacro		6316011	0					
ANR	6317680	Identifier	next_nomacro		6316011	0					
ANR	6317681	ArgumentList			6316011	1					
ANR	6317682	Label	the_end :	1765:0:37446:37453	6316011	10	True				
ANR	6317683	Identifier	the_end		6316011	0					
ANR	6317684	ExpressionStatement	parse_flags = saved_parse_flags	1766:1:37456:37487	6316011	11	True				
ANR	6317685	AssignmentExpression	parse_flags = saved_parse_flags		6316011	0		=			
ANR	6317686	Identifier	parse_flags		6316011	0					
ANR	6317687	Identifier	saved_parse_flags		6316011	1					
ANR	6317688	ReturnType	ST_FUNC void		6316011	1					
ANR	6317689	Identifier	preprocess		6316011	2					
ANR	6317690	ParameterList	int is_bof		6316011	3					
ANR	6317691	Parameter	int is_bof	1417:24:28782:28791	6316011	0	True				
ANR	6317692	ParameterType	int		6316011	0					
ANR	6317693	Identifier	is_bof		6316011	1					
ANR	6317694	CFGEntryNode	ENTRY		6316011		True				
ANR	6317695	CFGExitNode	EXIT		6316011		True				
ANR	6317696	Symbol	PARSE_FLAG_LINEFEED		6316011						
ANR	6317697	Symbol	* s1 -> nb_include_paths		6316011						
ANR	6317698	Symbol	* s1 -> ifdef_stack_ptr ++		6316011						
ANR	6317699	Symbol	* q ++		6316011						
ANR	6317700	Symbol	* R_SYS_DIR		6316011						
ANR	6317701	Symbol	dirname		6316011						
ANR	6317702	Symbol	path		6316011						
ANR	6317703	Symbol	tokc . cstr		6316011						
ANR	6317704	Symbol	s1 -> include_paths		6316011						
ANR	6317705	Symbol	tok_flags		6316011						
ANR	6317706	Symbol	len		6316011						
ANR	6317707	Symbol	& tokc		6316011						
ANR	6317708	Symbol	define_find		6316011						
ANR	6317709	Symbol	s1		6316011						
ANR	6317710	Symbol	IS_ABSPATH		6316011						
ANR	6317711	Symbol	TOK_CINT		6316011						
ANR	6317712	Symbol	* buf		6316011						
ANR	6317713	Symbol	expr_preprocess		6316011						
ANR	6317714	Symbol	TOK_STR		6316011						
ANR	6317715	Symbol	tokc		6316011						
ANR	6317716	Symbol	* file		6316011						
ANR	6317717	Symbol	handle_stray_noerror		6316011						
ANR	6317718	Symbol	buf1		6316011						
ANR	6317719	Symbol	IFDEF_STACK_SIZE		6316011						
ANR	6317720	Symbol	s1 -> ifdef_stack		6316011						
ANR	6317721	Symbol	* * file		6316011						
ANR	6317722	Symbol	* tokc . cstr		6316011						
ANR	6317723	Symbol	* file -> buf_ptr		6316011						
ANR	6317724	Symbol	tok		6316011						
ANR	6317725	Symbol	file		6316011						
ANR	6317726	Symbol	R_SYS_DIR		6316011						
ANR	6317727	Symbol	file -> ifndef_macro		6316011						
ANR	6317728	Symbol	file -> buf_ptr		6316011						
ANR	6317729	Symbol	file -> line_num		6316011						
ANR	6317730	Symbol	* s1 -> sysinclude_paths		6316011						
ANR	6317731	Symbol	filepath_len		6316011						
ANR	6317732	Symbol	* file -> prev		6316011						
ANR	6317733	Symbol	c		6316011						
ANR	6317734	Symbol	INCLUDE_STACK_SIZE		6316011						
ANR	6317735	Symbol	ch		6316011						
ANR	6317736	Symbol	e		6316011						
ANR	6317737	Symbol	f		6316011						
ANR	6317738	Symbol	* s1 -> include_stack_ptr		6316011						
ANR	6317739	Symbol	i		6316011						
ANR	6317740	Symbol	R_MIN		6316011						
ANR	6317741	Symbol	TOK_ERROR		6316011						
ANR	6317742	Symbol	file -> prev		6316011						
ANR	6317743	Symbol	TOK_FLAG_ENDIF		6316011						
ANR	6317744	Symbol	ch1		6316011						
ANR	6317745	Symbol	n		6316011						
ANR	6317746	Symbol	q		6316011						
ANR	6317747	Symbol	buf		6316011						
ANR	6317748	Symbol	s		6316011						
ANR	6317749	Symbol	CH_EOF		6316011						
ANR	6317750	Symbol	parse_line_comment		6316011						
ANR	6317751	Symbol	PARSE_FLAG_TOK_NUM		6316011						
ANR	6317752	Symbol	* len		6316011						
ANR	6317753	Symbol	PATHCMP		6316011						
ANR	6317754	Symbol	get_tok_str		6316011						
ANR	6317755	Symbol	s1 -> include_stack_ptr		6316011						
ANR	6317756	Symbol	* * s1		6316011						
ANR	6317757	Symbol	is_bof		6316011						
ANR	6317758	Symbol	search_cached_include		6316011						
ANR	6317759	Symbol	s1 -> sysinclude_paths		6316011						
ANR	6317760	Symbol	TOK_LINEFEED		6316011						
ANR	6317761	Symbol	file -> ifndef_macro_saved		6316011						
ANR	6317762	Symbol	strlen		6316011						
ANR	6317763	Symbol	PARSE_FLAG_ASM_COMMENTS		6316011						
ANR	6317764	Symbol	filepath		6316011						
ANR	6317765	Symbol	& s1 -> nb_target_deps		6316011						
ANR	6317766	Symbol	TOK_PPNUM		6316011						
ANR	6317767	Symbol	s1 -> nb_sysinclude_paths		6316011						
ANR	6317768	Symbol	e -> ifndef_macro		6316011						
ANR	6317769	Symbol	tokc . i		6316011						
ANR	6317770	Symbol	tcc_state		6316011						
ANR	6317771	Symbol	file -> filename		6316011						
ANR	6317772	Symbol	NULL		6316011						
ANR	6317773	Symbol	TOK_IDENT		6316011						
ANR	6317774	Symbol	* * f		6316011						
ANR	6317775	Symbol	PARSE_FLAG_PREPROCESS		6316011						
ANR	6317776	Symbol	stderr		6316011						
ANR	6317777	Symbol	s1 -> include_stack		6316011						
ANR	6317778	Symbol	tcc_open		6316011						
ANR	6317779	Symbol	* s1 -> ifdef_stack_ptr		6316011						
ANR	6317780	Symbol	parse_flags		6316011						
ANR	6317781	Symbol	* s1 -> include_paths		6316011						
ANR	6317782	Symbol	* s1		6316011						
ANR	6317783	Symbol	TOK_FLAG_BOF		6316011						
ANR	6317784	Symbol	* buf1		6316011						
ANR	6317785	Symbol	TOK_FLAG_BOL		6316011						
ANR	6317786	Symbol	tcc_basename		6316011						
ANR	6317787	Symbol	file -> prev -> filename		6316011						
ANR	6317788	Symbol	s1 -> nb_include_paths		6316011						
ANR	6317789	Symbol	saved_parse_flags		6316011						
ANR	6317790	Symbol	s1 -> ifdef_stack_ptr		6316011						
ANR	6317791	Symbol	& s1 -> target_deps		6316011						
ANR	6317792	Symbol	snprintf		6316011						
ANR	6317793	Symbol	file -> ifdef_stack_ptr		6316011						
ANR	6317794	Symbol	TOK_INCLUDE_NEXT		6316011						
ANR	6317795	Symbol	* tokc		6316011						
ANR	6317796	Symbol	* e		6316011						
ANR	6317797	Symbol	* f		6316011						
ANR	6317798	Symbol	* i		6316011						
ANR	6317799	Symbol	tokc . cstr -> data		6316011						
ANR	6317800	Symbol	* q		6316011						
ANR	6317801	Symbol	strdup		6316011						
ANR	6317802	Symbol	( * f ) -> filename		6316011						
ANR	6317803	Function	parse_escape_string	1770:0:37533:39353							
ANR	6317804	FunctionDef	"parse_escape_string (CString * outstr , const uint8_t * buf , int is_long)"		6317803	0					
ANR	6317805	CompoundStatement		1771:0:37615:39353	6317803	0					
ANR	6317806	IdentifierDeclStatement	"int c , n ;"	1772:1:37618:37626	6317803	0	True				
ANR	6317807	IdentifierDecl	c		6317803	0					
ANR	6317808	IdentifierDeclType	int		6317803	0					
ANR	6317809	Identifier	c		6317803	1					
ANR	6317810	IdentifierDecl	n		6317803	1					
ANR	6317811	IdentifierDeclType	int		6317803	0					
ANR	6317812	Identifier	n		6317803	1					
ANR	6317813	IdentifierDeclStatement	const uint8_t * p ;	1773:1:37629:37645	6317803	1	True				
ANR	6317814	IdentifierDecl	* p		6317803	0					
ANR	6317815	IdentifierDeclType	const uint8_t *		6317803	0					
ANR	6317816	Identifier	p		6317803	1					
ANR	6317817	ExpressionStatement	p = buf	1775:1:37649:37656	6317803	2	True				
ANR	6317818	AssignmentExpression	p = buf		6317803	0		=			
ANR	6317819	Identifier	p		6317803	0					
ANR	6317820	Identifier	buf		6317803	1					
ANR	6317821	ForStatement	for ( ; ; )		6317803	3					
ANR	6317822	CompoundStatement		6:10:52:52	6317803	0					
ANR	6317823	ExpressionStatement	c = * p	1777:2:37672:37678	6317803	0	True				
ANR	6317824	AssignmentExpression	c = * p		6317803	0		=			
ANR	6317825	Identifier	c		6317803	0					
ANR	6317826	UnaryOperationExpression	* p		6317803	1					
ANR	6317827	UnaryOperator	*		6317803	0					
ANR	6317828	Identifier	p		6317803	1					
ANR	6317829	IfStatement	if ( c == '\\0' )		6317803	1					
ANR	6317830	Condition	c == '\\0'	1778:6:37686:37694	6317803	0	True				
ANR	6317831	EqualityExpression	c == '\\0'		6317803	0		==			
ANR	6317832	Identifier	c		6317803	0					
ANR	6317833	PrimaryExpression	'\\0'		6317803	1					
ANR	6317834	CompoundStatement		8:17:81:81	6317803	1					
ANR	6317835	BreakStatement	break ;	1779:3:37702:37707	6317803	0	True				
ANR	6317836	IfStatement	if ( c == '\\\\' )		6317803	2					
ANR	6317837	Condition	c == '\\\\'	1781:6:37719:37727	6317803	0	True				
ANR	6317838	EqualityExpression	c == '\\\\'		6317803	0		==			
ANR	6317839	Identifier	c		6317803	0					
ANR	6317840	PrimaryExpression	'\\\\'		6317803	1					
ANR	6317841	CompoundStatement		11:17:114:114	6317803	1					
ANR	6317842	ExpressionStatement	p ++	1782:3:37735:37738	6317803	0	True				
ANR	6317843	PostIncDecOperationExpression	p ++		6317803	0					
ANR	6317844	Identifier	p		6317803	0					
ANR	6317845	IncDec	++		6317803	1					
ANR	6317846	ExpressionStatement	c = * p	1784:3:37759:37765	6317803	1	True				
ANR	6317847	AssignmentExpression	c = * p		6317803	0		=			
ANR	6317848	Identifier	c		6317803	0					
ANR	6317849	UnaryOperationExpression	* p		6317803	1					
ANR	6317850	UnaryOperator	*		6317803	0					
ANR	6317851	Identifier	p		6317803	1					
ANR	6317852	SwitchStatement	switch ( c )		6317803	2					
ANR	6317853	Condition	c	1785:11:37778:37778	6317803	0	True				
ANR	6317854	Identifier	c		6317803	0					
ANR	6317855	CompoundStatement		15:14:165:165	6317803	1					
ANR	6317856	Label	case '0' :	1786:3:37786:37794	6317803	0	True				
ANR	6317857	Label	case '1' :	1786:13:37796:37804	6317803	1	True				
ANR	6317858	Label	case '2' :	1786:23:37806:37814	6317803	2	True				
ANR	6317859	Label	case '3' :	1786:33:37816:37824	6317803	3	True				
ANR	6317860	Label	case '4' :	1787:3:37829:37837	6317803	4	True				
ANR	6317861	Label	case '5' :	1787:13:37839:37847	6317803	5	True				
ANR	6317862	Label	case '6' :	1787:23:37849:37857	6317803	6	True				
ANR	6317863	Label	case '7' :	1787:33:37859:37867	6317803	7	True				
ANR	6317864	ExpressionStatement	n = c - '0'	1789:4:37910:37921	6317803	8	True				
ANR	6317865	AssignmentExpression	n = c - '0'		6317803	0		=			
ANR	6317866	Identifier	n		6317803	0					
ANR	6317867	AdditiveExpression	c - '0'		6317803	1		-			
ANR	6317868	Identifier	c		6317803	0					
ANR	6317869	PrimaryExpression	'0'		6317803	1					
ANR	6317870	ExpressionStatement	p ++	1790:4:37927:37930	6317803	9	True				
ANR	6317871	PostIncDecOperationExpression	p ++		6317803	0					
ANR	6317872	Identifier	p		6317803	0					
ANR	6317873	IncDec	++		6317803	1					
ANR	6317874	ExpressionStatement	c = * p	1791:4:37936:37942	6317803	10	True				
ANR	6317875	AssignmentExpression	c = * p		6317803	0		=			
ANR	6317876	Identifier	c		6317803	0					
ANR	6317877	UnaryOperationExpression	* p		6317803	1					
ANR	6317878	UnaryOperator	*		6317803	0					
ANR	6317879	Identifier	p		6317803	1					
ANR	6317880	IfStatement	if ( isoct ( c ) )		6317803	11					
ANR	6317881	Condition	isoct ( c )	1792:8:37952:37960	6317803	0	True				
ANR	6317882	CallExpression	isoct ( c )		6317803	0					
ANR	6317883	Callee	isoct		6317803	0					
ANR	6317884	Identifier	isoct		6317803	0					
ANR	6317885	ArgumentList	c		6317803	1					
ANR	6317886	Argument	c		6317803	0					
ANR	6317887	Identifier	c		6317803	0					
ANR	6317888	CompoundStatement		22:19:347:347	6317803	1					
ANR	6317889	ExpressionStatement	n = n * 8 + c - '0'	1793:5:37970:37989	6317803	0	True				
ANR	6317890	AssignmentExpression	n = n * 8 + c - '0'		6317803	0		=			
ANR	6317891	Identifier	n		6317803	0					
ANR	6317892	AdditiveExpression	n * 8 + c - '0'		6317803	1		+			
ANR	6317893	MultiplicativeExpression	n * 8		6317803	0		*			
ANR	6317894	Identifier	n		6317803	0					
ANR	6317895	PrimaryExpression	8		6317803	1					
ANR	6317896	AdditiveExpression	c - '0'		6317803	1		-			
ANR	6317897	Identifier	c		6317803	0					
ANR	6317898	PrimaryExpression	'0'		6317803	1					
ANR	6317899	ExpressionStatement	p ++	1794:5:37996:37999	6317803	1	True				
ANR	6317900	PostIncDecOperationExpression	p ++		6317803	0					
ANR	6317901	Identifier	p		6317803	0					
ANR	6317902	IncDec	++		6317803	1					
ANR	6317903	ExpressionStatement	c = * p	1795:5:38006:38012	6317803	2	True				
ANR	6317904	AssignmentExpression	c = * p		6317803	0		=			
ANR	6317905	Identifier	c		6317803	0					
ANR	6317906	UnaryOperationExpression	* p		6317803	1					
ANR	6317907	UnaryOperator	*		6317803	0					
ANR	6317908	Identifier	p		6317803	1					
ANR	6317909	IfStatement	if ( isoct ( c ) )		6317803	3					
ANR	6317910	Condition	isoct ( c )	1796:9:38023:38031	6317803	0	True				
ANR	6317911	CallExpression	isoct ( c )		6317803	0					
ANR	6317912	Callee	isoct		6317803	0					
ANR	6317913	Identifier	isoct		6317803	0					
ANR	6317914	ArgumentList	c		6317803	1					
ANR	6317915	Argument	c		6317803	0					
ANR	6317916	Identifier	c		6317803	0					
ANR	6317917	CompoundStatement		26:20:418:418	6317803	1					
ANR	6317918	ExpressionStatement	n = n * 8 + c - '0'	1797:6:38042:38061	6317803	0	True				
ANR	6317919	AssignmentExpression	n = n * 8 + c - '0'		6317803	0		=			
ANR	6317920	Identifier	n		6317803	0					
ANR	6317921	AdditiveExpression	n * 8 + c - '0'		6317803	1		+			
ANR	6317922	MultiplicativeExpression	n * 8		6317803	0		*			
ANR	6317923	Identifier	n		6317803	0					
ANR	6317924	PrimaryExpression	8		6317803	1					
ANR	6317925	AdditiveExpression	c - '0'		6317803	1		-			
ANR	6317926	Identifier	c		6317803	0					
ANR	6317927	PrimaryExpression	'0'		6317803	1					
ANR	6317928	ExpressionStatement	p ++	1798:6:38069:38072	6317803	1	True				
ANR	6317929	PostIncDecOperationExpression	p ++		6317803	0					
ANR	6317930	Identifier	p		6317803	0					
ANR	6317931	IncDec	++		6317803	1					
ANR	6317932	ExpressionStatement	c = n	1801:4:38091:38096	6317803	12	True				
ANR	6317933	AssignmentExpression	c = n		6317803	0		=			
ANR	6317934	Identifier	c		6317803	0					
ANR	6317935	Identifier	n		6317803	1					
ANR	6317936	GotoStatement	goto add_char_nonext ;	1802:4:38102:38122	6317803	13	True				
ANR	6317937	Identifier	add_char_nonext		6317803	0					
ANR	6317938	Label	case 'x' :	1803:3:38127:38135	6317803	14	True				
ANR	6317939	Label	case 'u' :	1804:3:38140:38148	6317803	15	True				
ANR	6317940	Label	case 'U' :	1805:3:38153:38161	6317803	16	True				
ANR	6317941	ExpressionStatement	p ++	1806:4:38167:38170	6317803	17	True				
ANR	6317942	PostIncDecOperationExpression	p ++		6317803	0					
ANR	6317943	Identifier	p		6317803	0					
ANR	6317944	IncDec	++		6317803	1					
ANR	6317945	ExpressionStatement	n = 0	1807:4:38176:38181	6317803	18	True				
ANR	6317946	AssignmentExpression	n = 0		6317803	0		=			
ANR	6317947	Identifier	n		6317803	0					
ANR	6317948	PrimaryExpression	0		6317803	1					
ANR	6317949	ForStatement	for ( ; ; )		6317803	19					
ANR	6317950	CompoundStatement		38:13:580:580	6317803	0					
ANR	6317951	ExpressionStatement	c = * p	1809:5:38203:38209	6317803	0	True				
ANR	6317952	AssignmentExpression	c = * p		6317803	0		=			
ANR	6317953	Identifier	c		6317803	0					
ANR	6317954	UnaryOperationExpression	* p		6317803	1					
ANR	6317955	UnaryOperator	*		6317803	0					
ANR	6317956	Identifier	p		6317803	1					
ANR	6317957	IfStatement	if ( c >= 'a' && c <= 'f' )		6317803	1					
ANR	6317958	Condition	c >= 'a' && c <= 'f'	1810:9:38220:38239	6317803	0	True				
ANR	6317959	AndExpression	c >= 'a' && c <= 'f'		6317803	0		&&			
ANR	6317960	RelationalExpression	c >= 'a'		6317803	0		>=			
ANR	6317961	Identifier	c		6317803	0					
ANR	6317962	PrimaryExpression	'a'		6317803	1					
ANR	6317963	RelationalExpression	c <= 'f'		6317803	1		<=			
ANR	6317964	Identifier	c		6317803	0					
ANR	6317965	PrimaryExpression	'f'		6317803	1					
ANR	6317966	CompoundStatement		40:31:626:626	6317803	1					
ANR	6317967	ExpressionStatement	c = c - 'a' + 10	1811:6:38250:38266	6317803	0	True				
ANR	6317968	AssignmentExpression	c = c - 'a' + 10		6317803	0		=			
ANR	6317969	Identifier	c		6317803	0					
ANR	6317970	AdditiveExpression	c - 'a' + 10		6317803	1		-			
ANR	6317971	Identifier	c		6317803	0					
ANR	6317972	AdditiveExpression	'a' + 10		6317803	1		+			
ANR	6317973	PrimaryExpression	'a'		6317803	0					
ANR	6317974	PrimaryExpression	10		6317803	1					
ANR	6317975	ElseStatement	else		6317803	0					
ANR	6317976	IfStatement	if ( c >= 'A' && c <= 'F' )		6317803	0					
ANR	6317977	Condition	c >= 'A' && c <= 'F'	1812:16:38284:38303	6317803	0	True				
ANR	6317978	AndExpression	c >= 'A' && c <= 'F'		6317803	0		&&			
ANR	6317979	RelationalExpression	c >= 'A'		6317803	0		>=			
ANR	6317980	Identifier	c		6317803	0					
ANR	6317981	PrimaryExpression	'A'		6317803	1					
ANR	6317982	RelationalExpression	c <= 'F'		6317803	1		<=			
ANR	6317983	Identifier	c		6317803	0					
ANR	6317984	PrimaryExpression	'F'		6317803	1					
ANR	6317985	CompoundStatement		42:38:690:690	6317803	1					
ANR	6317986	ExpressionStatement	c = c - 'A' + 10	1813:6:38314:38330	6317803	0	True				
ANR	6317987	AssignmentExpression	c = c - 'A' + 10		6317803	0		=			
ANR	6317988	Identifier	c		6317803	0					
ANR	6317989	AdditiveExpression	c - 'A' + 10		6317803	1		-			
ANR	6317990	Identifier	c		6317803	0					
ANR	6317991	AdditiveExpression	'A' + 10		6317803	1		+			
ANR	6317992	PrimaryExpression	'A'		6317803	0					
ANR	6317993	PrimaryExpression	10		6317803	1					
ANR	6317994	ElseStatement	else		6317803	0					
ANR	6317995	IfStatement	if ( isnum ( c ) )		6317803	0					
ANR	6317996	Condition	isnum ( c )	1814:16:38348:38356	6317803	0	True				
ANR	6317997	CallExpression	isnum ( c )		6317803	0					
ANR	6317998	Callee	isnum		6317803	0					
ANR	6317999	Identifier	isnum		6317803	0					
ANR	6318000	ArgumentList	c		6317803	1					
ANR	6318001	Argument	c		6317803	0					
ANR	6318002	Identifier	c		6317803	0					
ANR	6318003	CompoundStatement		44:27:743:743	6317803	1					
ANR	6318004	ExpressionStatement	c = c - '0'	1815:6:38367:38378	6317803	0	True				
ANR	6318005	AssignmentExpression	c = c - '0'		6317803	0		=			
ANR	6318006	Identifier	c		6317803	0					
ANR	6318007	AdditiveExpression	c - '0'		6317803	1		-			
ANR	6318008	Identifier	c		6317803	0					
ANR	6318009	PrimaryExpression	'0'		6317803	1					
ANR	6318010	ElseStatement	else		6317803	0					
ANR	6318011	CompoundStatement		46:12:776:776	6317803	0					
ANR	6318012	BreakStatement	break ;	1817:6:38400:38405	6317803	0	True				
ANR	6318013	ExpressionStatement	n = n * 16 + c	1819:5:38419:38433	6317803	2	True				
ANR	6318014	AssignmentExpression	n = n * 16 + c		6317803	0		=			
ANR	6318015	Identifier	n		6317803	0					
ANR	6318016	AdditiveExpression	n * 16 + c		6317803	1		+			
ANR	6318017	MultiplicativeExpression	n * 16		6317803	0		*			
ANR	6318018	Identifier	n		6317803	0					
ANR	6318019	PrimaryExpression	16		6317803	1					
ANR	6318020	Identifier	c		6317803	1					
ANR	6318021	ExpressionStatement	p ++	1820:5:38440:38443	6317803	3	True				
ANR	6318022	PostIncDecOperationExpression	p ++		6317803	0					
ANR	6318023	Identifier	p		6317803	0					
ANR	6318024	IncDec	++		6317803	1					
ANR	6318025	ExpressionStatement	c = n	1822:4:38455:38460	6317803	20	True				
ANR	6318026	AssignmentExpression	c = n		6317803	0		=			
ANR	6318027	Identifier	c		6317803	0					
ANR	6318028	Identifier	n		6317803	1					
ANR	6318029	GotoStatement	goto add_char_nonext ;	1823:4:38466:38486	6317803	21	True				
ANR	6318030	Identifier	add_char_nonext		6317803	0					
ANR	6318031	Label	case 'a' :	1824:3:38491:38499	6317803	22	True				
ANR	6318032	ExpressionStatement	c = '\\a'	1825:4:38505:38513	6317803	23	True				
ANR	6318033	AssignmentExpression	c = '\\a'		6317803	0		=			
ANR	6318034	Identifier	c		6317803	0					
ANR	6318035	PrimaryExpression	'\\a'		6317803	1					
ANR	6318036	BreakStatement	break ;	1826:4:38519:38524	6317803	24	True				
ANR	6318037	Label	case 'b' :	1827:3:38529:38537	6317803	25	True				
ANR	6318038	ExpressionStatement	c = '\\b'	1828:4:38543:38551	6317803	26	True				
ANR	6318039	AssignmentExpression	c = '\\b'		6317803	0		=			
ANR	6318040	Identifier	c		6317803	0					
ANR	6318041	PrimaryExpression	'\\b'		6317803	1					
ANR	6318042	BreakStatement	break ;	1829:4:38557:38562	6317803	27	True				
ANR	6318043	Label	case 'f' :	1830:3:38567:38575	6317803	28	True				
ANR	6318044	ExpressionStatement	c = '\\f'	1831:4:38581:38589	6317803	29	True				
ANR	6318045	AssignmentExpression	c = '\\f'		6317803	0		=			
ANR	6318046	Identifier	c		6317803	0					
ANR	6318047	PrimaryExpression	'\\f'		6317803	1					
ANR	6318048	BreakStatement	break ;	1832:4:38595:38600	6317803	30	True				
ANR	6318049	Label	case 'n' :	1833:3:38605:38613	6317803	31	True				
ANR	6318050	ExpressionStatement	c = '\\n'	1834:4:38619:38627	6317803	32	True				
ANR	6318051	AssignmentExpression	c = '\\n'		6317803	0		=			
ANR	6318052	Identifier	c		6317803	0					
ANR	6318053	PrimaryExpression	'\\n'		6317803	1					
ANR	6318054	BreakStatement	break ;	1835:4:38633:38638	6317803	33	True				
ANR	6318055	Label	case 'r' :	1836:3:38643:38651	6317803	34	True				
ANR	6318056	ExpressionStatement	c = '\\r'	1837:4:38657:38665	6317803	35	True				
ANR	6318057	AssignmentExpression	c = '\\r'		6317803	0		=			
ANR	6318058	Identifier	c		6317803	0					
ANR	6318059	PrimaryExpression	'\\r'		6317803	1					
ANR	6318060	BreakStatement	break ;	1838:4:38671:38676	6317803	36	True				
ANR	6318061	Label	case 't' :	1839:3:38681:38689	6317803	37	True				
ANR	6318062	ExpressionStatement	c = '\\t'	1840:4:38695:38703	6317803	38	True				
ANR	6318063	AssignmentExpression	c = '\\t'		6317803	0		=			
ANR	6318064	Identifier	c		6317803	0					
ANR	6318065	PrimaryExpression	'\\t'		6317803	1					
ANR	6318066	BreakStatement	break ;	1841:4:38709:38714	6317803	39	True				
ANR	6318067	Label	case 'v' :	1842:3:38719:38727	6317803	40	True				
ANR	6318068	ExpressionStatement	c = '\\v'	1843:4:38733:38741	6317803	41	True				
ANR	6318069	AssignmentExpression	c = '\\v'		6317803	0		=			
ANR	6318070	Identifier	c		6317803	0					
ANR	6318071	PrimaryExpression	'\\v'		6317803	1					
ANR	6318072	BreakStatement	break ;	1844:4:38747:38752	6317803	42	True				
ANR	6318073	Label	case 'e' :	1845:3:38757:38765	6317803	43	True				
ANR	6318074	IfStatement	if ( ! gnu_ext )		6317803	44					
ANR	6318075	Condition	! gnu_ext	1846:8:38775:38782	6317803	0	True				
ANR	6318076	UnaryOperationExpression	! gnu_ext		6317803	0					
ANR	6318077	UnaryOperator	!		6317803	0					
ANR	6318078	Identifier	gnu_ext		6317803	1					
ANR	6318079	CompoundStatement		76:18:1169:1169	6317803	1					
ANR	6318080	GotoStatement	goto invalid_escape ;	1847:5:38792:38811	6317803	0	True				
ANR	6318081	Identifier	invalid_escape		6317803	0					
ANR	6318082	ExpressionStatement	c = 27	1849:4:38823:38829	6317803	45	True				
ANR	6318083	AssignmentExpression	c = 27		6317803	0		=			
ANR	6318084	Identifier	c		6317803	0					
ANR	6318085	PrimaryExpression	27		6317803	1					
ANR	6318086	BreakStatement	break ;	1850:4:38835:38840	6317803	46	True				
ANR	6318087	Label	case '\\'' :	1851:3:38845:38854	6317803	47	True				
ANR	6318088	Label	"case '\\""' :"	1852:3:38859:38868	6317803	48	True				
ANR	6318089	Label	case '\\\\' :	1853:3:38873:38882	6317803	49	True				
ANR	6318090	Label	case '?' :	1854:3:38887:38895	6317803	50	True				
ANR	6318091	BreakStatement	break ;	1855:4:38901:38906	6317803	51	True				
ANR	6318092	Label	default :	1856:3:38911:38918	6317803	52	True				
ANR	6318093	Identifier	default		6317803	0					
ANR	6318094	Label	invalid_escape :	1857:0:38920:38934	6317803	53	True				
ANR	6318095	Identifier	invalid_escape		6317803	0					
ANR	6318096	IfStatement	if ( c >= '!' && c <= '~' )		6317803	54					
ANR	6318097	Condition	c >= '!' && c <= '~'	1858:8:38944:38963	6317803	0	True				
ANR	6318098	AndExpression	c >= '!' && c <= '~'		6317803	0		&&			
ANR	6318099	RelationalExpression	c >= '!'		6317803	0		>=			
ANR	6318100	Identifier	c		6317803	0					
ANR	6318101	PrimaryExpression	'!'		6317803	1					
ANR	6318102	RelationalExpression	c <= '~'		6317803	1		<=			
ANR	6318103	Identifier	c		6317803	0					
ANR	6318104	PrimaryExpression	'~'		6317803	1					
ANR	6318105	CompoundStatement		88:30:1350:1350	6317803	1					
ANR	6318106	ExpressionStatement	"tcc_warning ( ""unknown escape sequence: \\'\\\\%c\\'"" , c )"	1859:5:38973:39025	6317803	0	True				
ANR	6318107	CallExpression	"tcc_warning ( ""unknown escape sequence: \\'\\\\%c\\'"" , c )"		6317803	0					
ANR	6318108	Callee	tcc_warning		6317803	0					
ANR	6318109	Identifier	tcc_warning		6317803	0					
ANR	6318110	ArgumentList	"""unknown escape sequence: \\'\\\\%c\\'"""		6317803	1					
ANR	6318111	Argument	"""unknown escape sequence: \\'\\\\%c\\'"""		6317803	0					
ANR	6318112	PrimaryExpression	"""unknown escape sequence: \\'\\\\%c\\'"""		6317803	0					
ANR	6318113	Argument	c		6317803	1					
ANR	6318114	Identifier	c		6317803	0					
ANR	6318115	ElseStatement	else		6317803	0					
ANR	6318116	CompoundStatement		90:11:1422:1422	6317803	0					
ANR	6318117	ExpressionStatement	"tcc_warning ( ""unknown escape sequence: \\'\\\\x%x\\'"" , c )"	1861:5:39045:39098	6317803	0	True				
ANR	6318118	CallExpression	"tcc_warning ( ""unknown escape sequence: \\'\\\\x%x\\'"" , c )"		6317803	0					
ANR	6318119	Callee	tcc_warning		6317803	0					
ANR	6318120	Identifier	tcc_warning		6317803	0					
ANR	6318121	ArgumentList	"""unknown escape sequence: \\'\\\\x%x\\'"""		6317803	1					
ANR	6318122	Argument	"""unknown escape sequence: \\'\\\\x%x\\'"""		6317803	0					
ANR	6318123	PrimaryExpression	"""unknown escape sequence: \\'\\\\x%x\\'"""		6317803	0					
ANR	6318124	Argument	c		6317803	1					
ANR	6318125	Identifier	c		6317803	0					
ANR	6318126	BreakStatement	break ;	1863:4:39110:39115	6317803	55	True				
ANR	6318127	ExpressionStatement	p ++	1866:2:39128:39131	6317803	3	True				
ANR	6318128	PostIncDecOperationExpression	p ++		6317803	0					
ANR	6318129	Identifier	p		6317803	0					
ANR	6318130	IncDec	++		6317803	1					
ANR	6318131	Label	add_char_nonext :	1867:0:39133:39148	6317803	4	True				
ANR	6318132	Identifier	add_char_nonext		6317803	0					
ANR	6318133	IfStatement	if ( ! is_long )		6317803	5					
ANR	6318134	Condition	! is_long	1868:6:39156:39163	6317803	0	True				
ANR	6318135	UnaryOperationExpression	! is_long		6317803	0					
ANR	6318136	UnaryOperator	!		6317803	0					
ANR	6318137	Identifier	is_long		6317803	1					
ANR	6318138	CompoundStatement		98:16:1550:1550	6317803	1					
ANR	6318139	ExpressionStatement	"cstr_ccat ( outstr , c )"	1869:3:39171:39192	6317803	0	True				
ANR	6318140	CallExpression	"cstr_ccat ( outstr , c )"		6317803	0					
ANR	6318141	Callee	cstr_ccat		6317803	0					
ANR	6318142	Identifier	cstr_ccat		6317803	0					
ANR	6318143	ArgumentList	outstr		6317803	1					
ANR	6318144	Argument	outstr		6317803	0					
ANR	6318145	Identifier	outstr		6317803	0					
ANR	6318146	Argument	c		6317803	1					
ANR	6318147	Identifier	c		6317803	0					
ANR	6318148	ElseStatement	else		6317803	0					
ANR	6318149	CompoundStatement		100:9:1587:1587	6317803	0					
ANR	6318150	ExpressionStatement	"cstr_wccat ( outstr , c )"	1871:3:39208:39230	6317803	0	True				
ANR	6318151	CallExpression	"cstr_wccat ( outstr , c )"		6317803	0					
ANR	6318152	Callee	cstr_wccat		6317803	0					
ANR	6318153	Identifier	cstr_wccat		6317803	0					
ANR	6318154	ArgumentList	outstr		6317803	1					
ANR	6318155	Argument	outstr		6317803	0					
ANR	6318156	Identifier	outstr		6317803	0					
ANR	6318157	Argument	c		6317803	1					
ANR	6318158	Identifier	c		6317803	0					
ANR	6318159	IfStatement	if ( ! is_long )		6317803	4					
ANR	6318160	Condition	! is_long	1875:5:39271:39278	6317803	0	True				
ANR	6318161	UnaryOperationExpression	! is_long		6317803	0					
ANR	6318162	UnaryOperator	!		6317803	0					
ANR	6318163	Identifier	is_long		6317803	1					
ANR	6318164	CompoundStatement		105:15:1665:1665	6317803	1					
ANR	6318165	ExpressionStatement	"cstr_ccat ( outstr , '\\0' )"	1876:2:39285:39309	6317803	0	True				
ANR	6318166	CallExpression	"cstr_ccat ( outstr , '\\0' )"		6317803	0					
ANR	6318167	Callee	cstr_ccat		6317803	0					
ANR	6318168	Identifier	cstr_ccat		6317803	0					
ANR	6318169	ArgumentList	outstr		6317803	1					
ANR	6318170	Argument	outstr		6317803	0					
ANR	6318171	Identifier	outstr		6317803	0					
ANR	6318172	Argument	'\\0'		6317803	1					
ANR	6318173	PrimaryExpression	'\\0'		6317803	0					
ANR	6318174	ElseStatement	else		6317803	0					
ANR	6318175	CompoundStatement		107:8:1703:1703	6317803	0					
ANR	6318176	ExpressionStatement	"cstr_wccat ( outstr , '\\0' )"	1878:2:39323:39348	6317803	0	True				
ANR	6318177	CallExpression	"cstr_wccat ( outstr , '\\0' )"		6317803	0					
ANR	6318178	Callee	cstr_wccat		6317803	0					
ANR	6318179	Identifier	cstr_wccat		6317803	0					
ANR	6318180	ArgumentList	outstr		6317803	1					
ANR	6318181	Argument	outstr		6317803	0					
ANR	6318182	Identifier	outstr		6317803	0					
ANR	6318183	Argument	'\\0'		6317803	1					
ANR	6318184	PrimaryExpression	'\\0'		6317803	0					
ANR	6318185	ReturnType	static void		6317803	1					
ANR	6318186	Identifier	parse_escape_string		6317803	2					
ANR	6318187	ParameterList	"CString * outstr , const uint8_t * buf , int is_long"		6317803	3					
ANR	6318188	Parameter	CString * outstr	1770:32:37565:37579	6317803	0	True				
ANR	6318189	ParameterType	CString *		6317803	0					
ANR	6318190	Identifier	outstr		6317803	1					
ANR	6318191	Parameter	const uint8_t * buf	1770:49:37582:37599	6317803	1	True				
ANR	6318192	ParameterType	const uint8_t *		6317803	0					
ANR	6318193	Identifier	buf		6317803	1					
ANR	6318194	Parameter	int is_long	1770:69:37602:37612	6317803	2	True				
ANR	6318195	ParameterType	int		6317803	0					
ANR	6318196	Identifier	is_long		6317803	1					
ANR	6318197	CFGEntryNode	ENTRY		6317803		True				
ANR	6318198	CFGExitNode	EXIT		6317803		True				
ANR	6318199	InfiniteForNode	true		6317803		True				
ANR	6318200	InfiniteForNode	true		6317803		True				
ANR	6318201	Symbol	p		6317803						
ANR	6318202	Symbol	isnum		6317803						
ANR	6318203	Symbol	outstr		6317803						
ANR	6318204	Symbol	buf		6317803						
ANR	6318205	Symbol	c		6317803						
ANR	6318206	Symbol	gnu_ext		6317803						
ANR	6318207	Symbol	is_long		6317803						
ANR	6318208	Symbol	* p		6317803						
ANR	6318209	Symbol	isoct		6317803						
ANR	6318210	Symbol	n		6317803						
ANR	6318211	Function	bn_lshift	1886:0:39437:39639							
ANR	6318212	FunctionDef	"bn_lshift (unsigned int * bn , int shift , int or_val)"		6318211	0					
ANR	6318213	CompoundStatement		1887:0:39500:39639	6318211	0					
ANR	6318214	IdentifierDeclStatement	int i ;	1888:1:39503:39508	6318211	0	True				
ANR	6318215	IdentifierDecl	i		6318211	0					
ANR	6318216	IdentifierDeclType	int		6318211	0					
ANR	6318217	Identifier	i		6318211	1					
ANR	6318218	IdentifierDeclStatement	unsigned int v ;	1889:1:39511:39525	6318211	1	True				
ANR	6318219	IdentifierDecl	v		6318211	0					
ANR	6318220	IdentifierDeclType	unsigned int		6318211	0					
ANR	6318221	Identifier	v		6318211	1					
ANR	6318222	ForStatement	for ( i = 0 ; i < BN_SIZE ; i ++ )		6318211	2					
ANR	6318223	ForInit	i = 0 ;	1890:6:39533:39538	6318211	0	True				
ANR	6318224	AssignmentExpression	i = 0		6318211	0		=			
ANR	6318225	Identifier	i		6318211	0					
ANR	6318226	PrimaryExpression	0		6318211	1					
ANR	6318227	Condition	i < BN_SIZE	1890:13:39540:39550	6318211	1	True				
ANR	6318228	RelationalExpression	i < BN_SIZE		6318211	0		<			
ANR	6318229	Identifier	i		6318211	0					
ANR	6318230	Identifier	BN_SIZE		6318211	1					
ANR	6318231	PostIncDecOperationExpression	i ++	1890:26:39553:39555	6318211	2	True				
ANR	6318232	Identifier	i		6318211	0					
ANR	6318233	IncDec	++		6318211	1					
ANR	6318234	CompoundStatement		4:31:57:57	6318211	3					
ANR	6318235	ExpressionStatement	v = bn [ i ]	1891:2:39562:39571	6318211	0	True				
ANR	6318236	AssignmentExpression	v = bn [ i ]		6318211	0		=			
ANR	6318237	Identifier	v		6318211	0					
ANR	6318238	ArrayIndexing	bn [ i ]		6318211	1					
ANR	6318239	Identifier	bn		6318211	0					
ANR	6318240	Identifier	i		6318211	1					
ANR	6318241	ExpressionStatement	bn [ i ] = ( v << shift ) | or_val	1892:2:39575:39604	6318211	1	True				
ANR	6318242	AssignmentExpression	bn [ i ] = ( v << shift ) | or_val		6318211	0		=			
ANR	6318243	ArrayIndexing	bn [ i ]		6318211	0					
ANR	6318244	Identifier	bn		6318211	0					
ANR	6318245	Identifier	i		6318211	1					
ANR	6318246	InclusiveOrExpression	( v << shift ) | or_val		6318211	1		|			
ANR	6318247	ShiftExpression	v << shift		6318211	0		<<			
ANR	6318248	Identifier	v		6318211	0					
ANR	6318249	Identifier	shift		6318211	1					
ANR	6318250	Identifier	or_val		6318211	1					
ANR	6318251	ExpressionStatement	or_val = v >> ( 32 - shift )	1893:2:39608:39634	6318211	2	True				
ANR	6318252	AssignmentExpression	or_val = v >> ( 32 - shift )		6318211	0		=			
ANR	6318253	Identifier	or_val		6318211	0					
ANR	6318254	ShiftExpression	v >> ( 32 - shift )		6318211	1		>>			
ANR	6318255	Identifier	v		6318211	0					
ANR	6318256	AdditiveExpression	32 - shift		6318211	1		-			
ANR	6318257	PrimaryExpression	32		6318211	0					
ANR	6318258	Identifier	shift		6318211	1					
ANR	6318259	ReturnType	static void		6318211	1					
ANR	6318260	Identifier	bn_lshift		6318211	2					
ANR	6318261	ParameterList	"unsigned int * bn , int shift , int or_val"		6318211	3					
ANR	6318262	Parameter	unsigned int * bn	1886:22:39459:39474	6318211	0	True				
ANR	6318263	ParameterType	unsigned int *		6318211	0					
ANR	6318264	Identifier	bn		6318211	1					
ANR	6318265	Parameter	int shift	1886:40:39477:39485	6318211	1	True				
ANR	6318266	ParameterType	int		6318211	0					
ANR	6318267	Identifier	shift		6318211	1					
ANR	6318268	Parameter	int or_val	1886:51:39488:39497	6318211	2	True				
ANR	6318269	ParameterType	int		6318211	0					
ANR	6318270	Identifier	or_val		6318211	1					
ANR	6318271	CFGEntryNode	ENTRY		6318211		True				
ANR	6318272	CFGExitNode	EXIT		6318211		True				
ANR	6318273	Symbol	* bn		6318211						
ANR	6318274	Symbol	BN_SIZE		6318211						
ANR	6318275	Symbol	* i		6318211						
ANR	6318276	Symbol	v		6318211						
ANR	6318277	Symbol	shift		6318211						
ANR	6318278	Symbol	or_val		6318211						
ANR	6318279	Symbol	i		6318211						
ANR	6318280	Symbol	bn		6318211						
ANR	6318281	Function	bn_zero	1897:0:39642:39739							
ANR	6318282	FunctionDef	bn_zero (unsigned int * bn)		6318281	0					
ANR	6318283	CompoundStatement		1898:0:39680:39739	6318281	0					
ANR	6318284	IdentifierDeclStatement	int i ;	1899:1:39683:39688	6318281	0	True				
ANR	6318285	IdentifierDecl	i		6318281	0					
ANR	6318286	IdentifierDeclType	int		6318281	0					
ANR	6318287	Identifier	i		6318281	1					
ANR	6318288	ForStatement	for ( i = 0 ; i < BN_SIZE ; i ++ )		6318281	1					
ANR	6318289	ForInit	i = 0 ;	1900:6:39696:39701	6318281	0	True				
ANR	6318290	AssignmentExpression	i = 0		6318281	0		=			
ANR	6318291	Identifier	i		6318281	0					
ANR	6318292	PrimaryExpression	0		6318281	1					
ANR	6318293	Condition	i < BN_SIZE	1900:13:39703:39713	6318281	1	True				
ANR	6318294	RelationalExpression	i < BN_SIZE		6318281	0		<			
ANR	6318295	Identifier	i		6318281	0					
ANR	6318296	Identifier	BN_SIZE		6318281	1					
ANR	6318297	PostIncDecOperationExpression	i ++	1900:26:39716:39718	6318281	2	True				
ANR	6318298	Identifier	i		6318281	0					
ANR	6318299	IncDec	++		6318281	1					
ANR	6318300	CompoundStatement		3:31:40:40	6318281	3					
ANR	6318301	ExpressionStatement	bn [ i ] = 0	1901:2:39725:39734	6318281	0	True				
ANR	6318302	AssignmentExpression	bn [ i ] = 0		6318281	0		=			
ANR	6318303	ArrayIndexing	bn [ i ]		6318281	0					
ANR	6318304	Identifier	bn		6318281	0					
ANR	6318305	Identifier	i		6318281	1					
ANR	6318306	PrimaryExpression	0		6318281	1					
ANR	6318307	ReturnType	static void		6318281	1					
ANR	6318308	Identifier	bn_zero		6318281	2					
ANR	6318309	ParameterList	unsigned int * bn		6318281	3					
ANR	6318310	Parameter	unsigned int * bn	1897:20:39662:39677	6318281	0	True				
ANR	6318311	ParameterType	unsigned int *		6318281	0					
ANR	6318312	Identifier	bn		6318281	1					
ANR	6318313	CFGEntryNode	ENTRY		6318281		True				
ANR	6318314	CFGExitNode	EXIT		6318281		True				
ANR	6318315	Symbol	* bn		6318281						
ANR	6318316	Symbol	BN_SIZE		6318281						
ANR	6318317	Symbol	* i		6318281						
ANR	6318318	Symbol	i		6318281						
ANR	6318319	Symbol	bn		6318281						
ANR	6318320	Function	parse_number	1907:0:39829:45994							
ANR	6318321	FunctionDef	parse_number (const char * p)		6318320	0					
ANR	6318322	CompoundStatement		1908:0:39869:45994	6318320	0					
ANR	6318323	IdentifierDeclStatement	"int b , t , shift , frac_bits , s , exp_val , ch ;"	1909:1:39872:39914	6318320	0	True				
ANR	6318324	IdentifierDecl	b		6318320	0					
ANR	6318325	IdentifierDeclType	int		6318320	0					
ANR	6318326	Identifier	b		6318320	1					
ANR	6318327	IdentifierDecl	t		6318320	1					
ANR	6318328	IdentifierDeclType	int		6318320	0					
ANR	6318329	Identifier	t		6318320	1					
ANR	6318330	IdentifierDecl	shift		6318320	2					
ANR	6318331	IdentifierDeclType	int		6318320	0					
ANR	6318332	Identifier	shift		6318320	1					
ANR	6318333	IdentifierDecl	frac_bits		6318320	3					
ANR	6318334	IdentifierDeclType	int		6318320	0					
ANR	6318335	Identifier	frac_bits		6318320	1					
ANR	6318336	IdentifierDecl	s		6318320	4					
ANR	6318337	IdentifierDeclType	int		6318320	0					
ANR	6318338	Identifier	s		6318320	1					
ANR	6318339	IdentifierDecl	exp_val		6318320	5					
ANR	6318340	IdentifierDeclType	int		6318320	0					
ANR	6318341	Identifier	exp_val		6318320	1					
ANR	6318342	IdentifierDecl	ch		6318320	6					
ANR	6318343	IdentifierDeclType	int		6318320	0					
ANR	6318344	Identifier	ch		6318320	1					
ANR	6318345	IdentifierDeclStatement	char * q ;	1910:1:39917:39924	6318320	1	True				
ANR	6318346	IdentifierDecl	* q		6318320	0					
ANR	6318347	IdentifierDeclType	char *		6318320	0					
ANR	6318348	Identifier	q		6318320	1					
ANR	6318349	IdentifierDeclStatement	unsigned int bn [ BN_SIZE ] ;	1911:1:39927:39951	6318320	2	True				
ANR	6318350	IdentifierDecl	bn [ BN_SIZE ]		6318320	0					
ANR	6318351	IdentifierDeclType	unsigned int [ BN_SIZE ]		6318320	0					
ANR	6318352	Identifier	bn		6318320	1					
ANR	6318353	Identifier	BN_SIZE		6318320	2					
ANR	6318354	IdentifierDeclStatement	double d ;	1912:1:39954:39962	6318320	3	True				
ANR	6318355	IdentifierDecl	d		6318320	0					
ANR	6318356	IdentifierDeclType	double		6318320	0					
ANR	6318357	Identifier	d		6318320	1					
ANR	6318358	ExpressionStatement	q = token_buf	1915:1:39980:39993	6318320	4	True				
ANR	6318359	AssignmentExpression	q = token_buf		6318320	0		=			
ANR	6318360	Identifier	q		6318320	0					
ANR	6318361	Identifier	token_buf		6318320	1					
ANR	6318362	ExpressionStatement	ch = * p ++	1916:1:39996:40005	6318320	5	True				
ANR	6318363	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318364	Identifier	ch		6318320	0					
ANR	6318365	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318366	UnaryOperator	*		6318320	0					
ANR	6318367	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318368	Identifier	p		6318320	0					
ANR	6318369	IncDec	++		6318320	1					
ANR	6318370	ExpressionStatement	t = ch	1917:1:40008:40014	6318320	6	True				
ANR	6318371	AssignmentExpression	t = ch		6318320	0		=			
ANR	6318372	Identifier	t		6318320	0					
ANR	6318373	Identifier	ch		6318320	1					
ANR	6318374	ExpressionStatement	ch = * p ++	1918:1:40017:40026	6318320	7	True				
ANR	6318375	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318376	Identifier	ch		6318320	0					
ANR	6318377	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318378	UnaryOperator	*		6318320	0					
ANR	6318379	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318380	Identifier	p		6318320	0					
ANR	6318381	IncDec	++		6318320	1					
ANR	6318382	ExpressionStatement	* q ++ = t	1919:1:40029:40037	6318320	8	True				
ANR	6318383	AssignmentExpression	* q ++ = t		6318320	0		=			
ANR	6318384	UnaryOperationExpression	* q ++		6318320	0					
ANR	6318385	UnaryOperator	*		6318320	0					
ANR	6318386	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6318387	Identifier	q		6318320	0					
ANR	6318388	IncDec	++		6318320	1					
ANR	6318389	Identifier	t		6318320	1					
ANR	6318390	ExpressionStatement	b = 10	1920:1:40040:40046	6318320	9	True				
ANR	6318391	AssignmentExpression	b = 10		6318320	0		=			
ANR	6318392	Identifier	b		6318320	0					
ANR	6318393	PrimaryExpression	10		6318320	1					
ANR	6318394	IfStatement	if ( t == '.' )		6318320	10					
ANR	6318395	Condition	t == '.'	1921:5:40053:40060	6318320	0	True				
ANR	6318396	EqualityExpression	t == '.'		6318320	0		==			
ANR	6318397	Identifier	t		6318320	0					
ANR	6318398	PrimaryExpression	'.'		6318320	1					
ANR	6318399	CompoundStatement		14:15:193:193	6318320	1					
ANR	6318400	GotoStatement	goto float_frac_parse ;	1922:2:40067:40088	6318320	0	True				
ANR	6318401	Identifier	float_frac_parse		6318320	0					
ANR	6318402	ElseStatement	else		6318320	0					
ANR	6318403	IfStatement	if ( t == '0' )		6318320	0					
ANR	6318404	Condition	t == '0'	1923:12:40102:40109	6318320	0	True				
ANR	6318405	EqualityExpression	t == '0'		6318320	0		==			
ANR	6318406	Identifier	t		6318320	0					
ANR	6318407	PrimaryExpression	'0'		6318320	1					
ANR	6318408	CompoundStatement		16:22:242:242	6318320	1					
ANR	6318409	IfStatement	if ( ch == 'x' || ch == 'X' )		6318320	0					
ANR	6318410	Condition	ch == 'x' || ch == 'X'	1924:6:40120:40141	6318320	0	True				
ANR	6318411	OrExpression	ch == 'x' || ch == 'X'		6318320	0		||			
ANR	6318412	EqualityExpression	ch == 'x'		6318320	0		==			
ANR	6318413	Identifier	ch		6318320	0					
ANR	6318414	PrimaryExpression	'x'		6318320	1					
ANR	6318415	EqualityExpression	ch == 'X'		6318320	1		==			
ANR	6318416	Identifier	ch		6318320	0					
ANR	6318417	PrimaryExpression	'X'		6318320	1					
ANR	6318418	CompoundStatement		17:30:274:274	6318320	1					
ANR	6318419	ExpressionStatement	q --	1925:3:40149:40152	6318320	0	True				
ANR	6318420	PostIncDecOperationExpression	q --		6318320	0					
ANR	6318421	Identifier	q		6318320	0					
ANR	6318422	IncDec	--		6318320	1					
ANR	6318423	ExpressionStatement	ch = * p ++	1926:3:40157:40166	6318320	1	True				
ANR	6318424	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318425	Identifier	ch		6318320	0					
ANR	6318426	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318427	UnaryOperator	*		6318320	0					
ANR	6318428	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318429	Identifier	p		6318320	0					
ANR	6318430	IncDec	++		6318320	1					
ANR	6318431	ExpressionStatement	b = 16	1927:3:40171:40177	6318320	2	True				
ANR	6318432	AssignmentExpression	b = 16		6318320	0		=			
ANR	6318433	Identifier	b		6318320	0					
ANR	6318434	PrimaryExpression	16		6318320	1					
ANR	6318435	ElseStatement	else		6318320	0					
ANR	6318436	IfStatement	if ( tcc_ext && ( ch == 'b' || ch == 'B' ) )		6318320	0					
ANR	6318437	Condition	tcc_ext && ( ch == 'b' || ch == 'B' )	1928:13:40192:40226	6318320	0	True				
ANR	6318438	AndExpression	tcc_ext && ( ch == 'b' || ch == 'B' )		6318320	0		&&			
ANR	6318439	Identifier	tcc_ext		6318320	0					
ANR	6318440	OrExpression	ch == 'b' || ch == 'B'		6318320	1		||			
ANR	6318441	EqualityExpression	ch == 'b'		6318320	0		==			
ANR	6318442	Identifier	ch		6318320	0					
ANR	6318443	PrimaryExpression	'b'		6318320	1					
ANR	6318444	EqualityExpression	ch == 'B'		6318320	1		==			
ANR	6318445	Identifier	ch		6318320	0					
ANR	6318446	PrimaryExpression	'B'		6318320	1					
ANR	6318447	CompoundStatement		21:50:359:359	6318320	1					
ANR	6318448	ExpressionStatement	q --	1929:3:40234:40237	6318320	0	True				
ANR	6318449	PostIncDecOperationExpression	q --		6318320	0					
ANR	6318450	Identifier	q		6318320	0					
ANR	6318451	IncDec	--		6318320	1					
ANR	6318452	ExpressionStatement	ch = * p ++	1930:3:40242:40251	6318320	1	True				
ANR	6318453	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318454	Identifier	ch		6318320	0					
ANR	6318455	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318456	UnaryOperator	*		6318320	0					
ANR	6318457	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318458	Identifier	p		6318320	0					
ANR	6318459	IncDec	++		6318320	1					
ANR	6318460	ExpressionStatement	b = 2	1931:3:40256:40261	6318320	2	True				
ANR	6318461	AssignmentExpression	b = 2		6318320	0		=			
ANR	6318462	Identifier	b		6318320	0					
ANR	6318463	PrimaryExpression	2		6318320	1					
ANR	6318464	WhileStatement	while ( 1 )		6318320	11					
ANR	6318465	Condition	1	1936:8:40384:40384	6318320	0	True				
ANR	6318466	PrimaryExpression	1		6318320	0					
ANR	6318467	CompoundStatement		29:11:517:517	6318320	1					
ANR	6318468	IfStatement	if ( ch >= 'a' && ch <= 'f' )		6318320	0					
ANR	6318469	Condition	ch >= 'a' && ch <= 'f'	1937:6:40395:40416	6318320	0	True				
ANR	6318470	AndExpression	ch >= 'a' && ch <= 'f'		6318320	0		&&			
ANR	6318471	RelationalExpression	ch >= 'a'		6318320	0		>=			
ANR	6318472	Identifier	ch		6318320	0					
ANR	6318473	PrimaryExpression	'a'		6318320	1					
ANR	6318474	RelationalExpression	ch <= 'f'		6318320	1		<=			
ANR	6318475	Identifier	ch		6318320	0					
ANR	6318476	PrimaryExpression	'f'		6318320	1					
ANR	6318477	CompoundStatement		30:30:549:549	6318320	1					
ANR	6318478	ExpressionStatement	t = ch - 'a' + 10	1938:3:40424:40441	6318320	0	True				
ANR	6318479	AssignmentExpression	t = ch - 'a' + 10		6318320	0		=			
ANR	6318480	Identifier	t		6318320	0					
ANR	6318481	AdditiveExpression	ch - 'a' + 10		6318320	1		-			
ANR	6318482	Identifier	ch		6318320	0					
ANR	6318483	AdditiveExpression	'a' + 10		6318320	1		+			
ANR	6318484	PrimaryExpression	'a'		6318320	0					
ANR	6318485	PrimaryExpression	10		6318320	1					
ANR	6318486	ElseStatement	else		6318320	0					
ANR	6318487	IfStatement	if ( ch >= 'A' && ch <= 'F' )		6318320	0					
ANR	6318488	Condition	ch >= 'A' && ch <= 'F'	1939:13:40456:40477	6318320	0	True				
ANR	6318489	AndExpression	ch >= 'A' && ch <= 'F'		6318320	0		&&			
ANR	6318490	RelationalExpression	ch >= 'A'		6318320	0		>=			
ANR	6318491	Identifier	ch		6318320	0					
ANR	6318492	PrimaryExpression	'A'		6318320	1					
ANR	6318493	RelationalExpression	ch <= 'F'		6318320	1		<=			
ANR	6318494	Identifier	ch		6318320	0					
ANR	6318495	PrimaryExpression	'F'		6318320	1					
ANR	6318496	CompoundStatement		32:37:610:610	6318320	1					
ANR	6318497	ExpressionStatement	t = ch - 'A' + 10	1940:3:40485:40502	6318320	0	True				
ANR	6318498	AssignmentExpression	t = ch - 'A' + 10		6318320	0		=			
ANR	6318499	Identifier	t		6318320	0					
ANR	6318500	AdditiveExpression	ch - 'A' + 10		6318320	1		-			
ANR	6318501	Identifier	ch		6318320	0					
ANR	6318502	AdditiveExpression	'A' + 10		6318320	1		+			
ANR	6318503	PrimaryExpression	'A'		6318320	0					
ANR	6318504	PrimaryExpression	10		6318320	1					
ANR	6318505	ElseStatement	else		6318320	0					
ANR	6318506	IfStatement	if ( isnum ( ch ) )		6318320	0					
ANR	6318507	Condition	isnum ( ch )	1941:13:40517:40526	6318320	0	True				
ANR	6318508	CallExpression	isnum ( ch )		6318320	0					
ANR	6318509	Callee	isnum		6318320	0					
ANR	6318510	Identifier	isnum		6318320	0					
ANR	6318511	ArgumentList	ch		6318320	1					
ANR	6318512	Argument	ch		6318320	0					
ANR	6318513	Identifier	ch		6318320	0					
ANR	6318514	CompoundStatement		34:25:659:659	6318320	1					
ANR	6318515	ExpressionStatement	t = ch - '0'	1942:3:40534:40546	6318320	0	True				
ANR	6318516	AssignmentExpression	t = ch - '0'		6318320	0		=			
ANR	6318517	Identifier	t		6318320	0					
ANR	6318518	AdditiveExpression	ch - '0'		6318320	1		-			
ANR	6318519	Identifier	ch		6318320	0					
ANR	6318520	PrimaryExpression	'0'		6318320	1					
ANR	6318521	ElseStatement	else		6318320	0					
ANR	6318522	CompoundStatement		36:9:687:687	6318320	0					
ANR	6318523	BreakStatement	break ;	1944:3:40562:40567	6318320	0	True				
ANR	6318524	IfStatement	if ( t >= b )		6318320	1					
ANR	6318525	Condition	t >= b	1946:6:40579:40584	6318320	0	True				
ANR	6318526	RelationalExpression	t >= b		6318320	0		>=			
ANR	6318527	Identifier	t		6318320	0					
ANR	6318528	Identifier	b		6318320	1					
ANR	6318529	CompoundStatement		39:14:717:717	6318320	1					
ANR	6318530	BreakStatement	break ;	1947:3:40592:40597	6318320	0	True				
ANR	6318531	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6318320	2					
ANR	6318532	Condition	q >= token_buf + STRING_MAX_SIZE	1949:6:40609:40640	6318320	0	True				
ANR	6318533	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6318320	0		>=			
ANR	6318534	Identifier	q		6318320	0					
ANR	6318535	AdditiveExpression	token_buf + STRING_MAX_SIZE		6318320	1		+			
ANR	6318536	Identifier	token_buf		6318320	0					
ANR	6318537	Identifier	STRING_MAX_SIZE		6318320	1					
ANR	6318538	CompoundStatement		42:40:773:773	6318320	1					
ANR	6318539	Label	num_too_long :	1950:0:40645:40657	6318320	0	True				
ANR	6318540	Identifier	num_too_long		6318320	0					
ANR	6318541	ExpressionStatement	"tcc_error ( ""number too long"" )"	1951:3:40662:40691	6318320	1	True				
ANR	6318542	CallExpression	"tcc_error ( ""number too long"" )"		6318320	0					
ANR	6318543	Callee	tcc_error		6318320	0					
ANR	6318544	Identifier	tcc_error		6318320	0					
ANR	6318545	ArgumentList	"""number too long"""		6318320	1					
ANR	6318546	Argument	"""number too long"""		6318320	0					
ANR	6318547	PrimaryExpression	"""number too long"""		6318320	0					
ANR	6318548	ExpressionStatement	* q ++ = ch	1953:2:40699:40708	6318320	3	True				
ANR	6318549	AssignmentExpression	* q ++ = ch		6318320	0		=			
ANR	6318550	UnaryOperationExpression	* q ++		6318320	0					
ANR	6318551	UnaryOperator	*		6318320	0					
ANR	6318552	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6318553	Identifier	q		6318320	0					
ANR	6318554	IncDec	++		6318320	1					
ANR	6318555	Identifier	ch		6318320	1					
ANR	6318556	ExpressionStatement	ch = * p ++	1954:2:40712:40721	6318320	4	True				
ANR	6318557	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318558	Identifier	ch		6318320	0					
ANR	6318559	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318560	UnaryOperator	*		6318320	0					
ANR	6318561	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318562	Identifier	p		6318320	0					
ANR	6318563	IncDec	++		6318320	1					
ANR	6318564	IfStatement	if ( ch == '.' || ( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) ) )		6318320	12					
ANR	6318565	Condition	ch == '.' || ( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) )	1956:5:40731:40843	6318320	0	True				
ANR	6318566	OrExpression	ch == '.' || ( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) )		6318320	0		||			
ANR	6318567	EqualityExpression	ch == '.'		6318320	0		==			
ANR	6318568	Identifier	ch		6318320	0					
ANR	6318569	PrimaryExpression	'.'		6318320	1					
ANR	6318570	OrExpression	( ( ch == 'e' || ch == 'E' ) && b == 10 ) || ( ( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 ) )		6318320	1		||			
ANR	6318571	AndExpression	( ch == 'e' || ch == 'E' ) && b == 10		6318320	0		&&			
ANR	6318572	OrExpression	ch == 'e' || ch == 'E'		6318320	0		||			
ANR	6318573	EqualityExpression	ch == 'e'		6318320	0		==			
ANR	6318574	Identifier	ch		6318320	0					
ANR	6318575	PrimaryExpression	'e'		6318320	1					
ANR	6318576	EqualityExpression	ch == 'E'		6318320	1		==			
ANR	6318577	Identifier	ch		6318320	0					
ANR	6318578	PrimaryExpression	'E'		6318320	1					
ANR	6318579	EqualityExpression	b == 10		6318320	1		==			
ANR	6318580	Identifier	b		6318320	0					
ANR	6318581	PrimaryExpression	10		6318320	1					
ANR	6318582	AndExpression	( ch == 'p' || ch == 'P' ) && ( b == 16 || b == 2 )		6318320	1		&&			
ANR	6318583	OrExpression	ch == 'p' || ch == 'P'		6318320	0		||			
ANR	6318584	EqualityExpression	ch == 'p'		6318320	0		==			
ANR	6318585	Identifier	ch		6318320	0					
ANR	6318586	PrimaryExpression	'p'		6318320	1					
ANR	6318587	EqualityExpression	ch == 'P'		6318320	1		==			
ANR	6318588	Identifier	ch		6318320	0					
ANR	6318589	PrimaryExpression	'P'		6318320	1					
ANR	6318590	OrExpression	b == 16 || b == 2		6318320	1		||			
ANR	6318591	EqualityExpression	b == 16		6318320	0		==			
ANR	6318592	Identifier	b		6318320	0					
ANR	6318593	PrimaryExpression	16		6318320	1					
ANR	6318594	EqualityExpression	b == 2		6318320	1		==			
ANR	6318595	Identifier	b		6318320	0					
ANR	6318596	PrimaryExpression	2		6318320	1					
ANR	6318597	CompoundStatement		51:56:976:976	6318320	1					
ANR	6318598	IfStatement	if ( b != 10 )		6318320	0					
ANR	6318599	Condition	b != 10	1959:6:40854:40860	6318320	0	True				
ANR	6318600	EqualityExpression	b != 10		6318320	0		!=			
ANR	6318601	Identifier	b		6318320	0					
ANR	6318602	PrimaryExpression	10		6318320	1					
ANR	6318603	CompoundStatement		52:15:993:993	6318320	1					
ANR	6318604	ExpressionStatement	* q = '\\0'	1965:3:41079:41088	6318320	0	True				
ANR	6318605	AssignmentExpression	* q = '\\0'		6318320	0		=			
ANR	6318606	UnaryOperationExpression	* q		6318320	0					
ANR	6318607	UnaryOperator	*		6318320	0					
ANR	6318608	Identifier	q		6318320	1					
ANR	6318609	PrimaryExpression	'\\0'		6318320	1					
ANR	6318610	IfStatement	if ( b == 16 )		6318320	1					
ANR	6318611	Condition	b == 16	1966:7:41097:41103	6318320	0	True				
ANR	6318612	EqualityExpression	b == 16		6318320	0		==			
ANR	6318613	Identifier	b		6318320	0					
ANR	6318614	PrimaryExpression	16		6318320	1					
ANR	6318615	CompoundStatement		59:16:1236:1236	6318320	1					
ANR	6318616	ExpressionStatement	shift = 4	1967:4:41112:41121	6318320	0	True				
ANR	6318617	AssignmentExpression	shift = 4		6318320	0		=			
ANR	6318618	Identifier	shift		6318320	0					
ANR	6318619	PrimaryExpression	4		6318320	1					
ANR	6318620	ElseStatement	else		6318320	0					
ANR	6318621	CompoundStatement		61:10:1263:1263	6318320	0					
ANR	6318622	ExpressionStatement	shift = 2	1969:4:41139:41148	6318320	0	True				
ANR	6318623	AssignmentExpression	shift = 2		6318320	0		=			
ANR	6318624	Identifier	shift		6318320	0					
ANR	6318625	PrimaryExpression	2		6318320	1					
ANR	6318626	ExpressionStatement	bn_zero ( bn )	1971:3:41158:41170	6318320	2	True				
ANR	6318627	CallExpression	bn_zero ( bn )		6318320	0					
ANR	6318628	Callee	bn_zero		6318320	0					
ANR	6318629	Identifier	bn_zero		6318320	0					
ANR	6318630	ArgumentList	bn		6318320	1					
ANR	6318631	Argument	bn		6318320	0					
ANR	6318632	Identifier	bn		6318320	0					
ANR	6318633	ExpressionStatement	q = token_buf	1972:3:41175:41188	6318320	3	True				
ANR	6318634	AssignmentExpression	q = token_buf		6318320	0		=			
ANR	6318635	Identifier	q		6318320	0					
ANR	6318636	Identifier	token_buf		6318320	1					
ANR	6318637	WhileStatement	while ( 1 )		6318320	4					
ANR	6318638	Condition	1	1973:10:41200:41200	6318320	0	True				
ANR	6318639	PrimaryExpression	1		6318320	0					
ANR	6318640	CompoundStatement		66:13:1333:1333	6318320	1					
ANR	6318641	ExpressionStatement	t = * q ++	1974:4:41209:41217	6318320	0	True				
ANR	6318642	AssignmentExpression	t = * q ++		6318320	0		=			
ANR	6318643	Identifier	t		6318320	0					
ANR	6318644	UnaryOperationExpression	* q ++		6318320	1					
ANR	6318645	UnaryOperator	*		6318320	0					
ANR	6318646	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6318647	Identifier	q		6318320	0					
ANR	6318648	IncDec	++		6318320	1					
ANR	6318649	IfStatement	if ( t == '\\0' )		6318320	1					
ANR	6318650	Condition	t == '\\0'	1975:8:41227:41235	6318320	0	True				
ANR	6318651	EqualityExpression	t == '\\0'		6318320	0		==			
ANR	6318652	Identifier	t		6318320	0					
ANR	6318653	PrimaryExpression	'\\0'		6318320	1					
ANR	6318654	CompoundStatement		68:19:1368:1368	6318320	1					
ANR	6318655	BreakStatement	break ;	1976:5:41245:41250	6318320	0	True				
ANR	6318656	ElseStatement	else		6318320	0					
ANR	6318657	IfStatement	if ( t >= 'a' )		6318320	0					
ANR	6318658	Condition	t >= 'a'	1977:15:41267:41274	6318320	0	True				
ANR	6318659	RelationalExpression	t >= 'a'		6318320	0		>=			
ANR	6318660	Identifier	t		6318320	0					
ANR	6318661	PrimaryExpression	'a'		6318320	1					
ANR	6318662	CompoundStatement		70:25:1407:1407	6318320	1					
ANR	6318663	ExpressionStatement	t = t - 'a' + 10	1978:5:41284:41300	6318320	0	True				
ANR	6318664	AssignmentExpression	t = t - 'a' + 10		6318320	0		=			
ANR	6318665	Identifier	t		6318320	0					
ANR	6318666	AdditiveExpression	t - 'a' + 10		6318320	1		-			
ANR	6318667	Identifier	t		6318320	0					
ANR	6318668	AdditiveExpression	'a' + 10		6318320	1		+			
ANR	6318669	PrimaryExpression	'a'		6318320	0					
ANR	6318670	PrimaryExpression	10		6318320	1					
ANR	6318671	ElseStatement	else		6318320	0					
ANR	6318672	IfStatement	if ( t >= 'A' )		6318320	0					
ANR	6318673	Condition	t >= 'A'	1979:15:41317:41324	6318320	0	True				
ANR	6318674	RelationalExpression	t >= 'A'		6318320	0		>=			
ANR	6318675	Identifier	t		6318320	0					
ANR	6318676	PrimaryExpression	'A'		6318320	1					
ANR	6318677	CompoundStatement		72:25:1457:1457	6318320	1					
ANR	6318678	ExpressionStatement	t = t - 'A' + 10	1980:5:41334:41350	6318320	0	True				
ANR	6318679	AssignmentExpression	t = t - 'A' + 10		6318320	0		=			
ANR	6318680	Identifier	t		6318320	0					
ANR	6318681	AdditiveExpression	t - 'A' + 10		6318320	1		-			
ANR	6318682	Identifier	t		6318320	0					
ANR	6318683	AdditiveExpression	'A' + 10		6318320	1		+			
ANR	6318684	PrimaryExpression	'A'		6318320	0					
ANR	6318685	PrimaryExpression	10		6318320	1					
ANR	6318686	ElseStatement	else		6318320	0					
ANR	6318687	CompoundStatement		74:11:1493:1493	6318320	0					
ANR	6318688	ExpressionStatement	t = t - '0'	1982:5:41370:41381	6318320	0	True				
ANR	6318689	AssignmentExpression	t = t - '0'		6318320	0		=			
ANR	6318690	Identifier	t		6318320	0					
ANR	6318691	AdditiveExpression	t - '0'		6318320	1		-			
ANR	6318692	Identifier	t		6318320	0					
ANR	6318693	PrimaryExpression	'0'		6318320	1					
ANR	6318694	ExpressionStatement	"bn_lshift ( bn , shift , t )"	1984:4:41393:41417	6318320	2	True				
ANR	6318695	CallExpression	"bn_lshift ( bn , shift , t )"		6318320	0					
ANR	6318696	Callee	bn_lshift		6318320	0					
ANR	6318697	Identifier	bn_lshift		6318320	0					
ANR	6318698	ArgumentList	bn		6318320	1					
ANR	6318699	Argument	bn		6318320	0					
ANR	6318700	Identifier	bn		6318320	0					
ANR	6318701	Argument	shift		6318320	1					
ANR	6318702	Identifier	shift		6318320	0					
ANR	6318703	Argument	t		6318320	2					
ANR	6318704	Identifier	t		6318320	0					
ANR	6318705	ExpressionStatement	frac_bits = 0	1986:3:41427:41440	6318320	5	True				
ANR	6318706	AssignmentExpression	frac_bits = 0		6318320	0		=			
ANR	6318707	Identifier	frac_bits		6318320	0					
ANR	6318708	PrimaryExpression	0		6318320	1					
ANR	6318709	IfStatement	if ( ch == '.' )		6318320	6					
ANR	6318710	Condition	ch == '.'	1987:7:41449:41457	6318320	0	True				
ANR	6318711	EqualityExpression	ch == '.'		6318320	0		==			
ANR	6318712	Identifier	ch		6318320	0					
ANR	6318713	PrimaryExpression	'.'		6318320	1					
ANR	6318714	CompoundStatement		80:18:1590:1590	6318320	1					
ANR	6318715	ExpressionStatement	ch = * p ++	1988:4:41466:41475	6318320	0	True				
ANR	6318716	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318717	Identifier	ch		6318320	0					
ANR	6318718	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318719	UnaryOperator	*		6318320	0					
ANR	6318720	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318721	Identifier	p		6318320	0					
ANR	6318722	IncDec	++		6318320	1					
ANR	6318723	WhileStatement	while ( 1 )		6318320	1					
ANR	6318724	Condition	1	1989:11:41488:41488	6318320	0	True				
ANR	6318725	PrimaryExpression	1		6318320	0					
ANR	6318726	CompoundStatement		82:14:1621:1621	6318320	1					
ANR	6318727	ExpressionStatement	t = ch	1990:5:41498:41504	6318320	0	True				
ANR	6318728	AssignmentExpression	t = ch		6318320	0		=			
ANR	6318729	Identifier	t		6318320	0					
ANR	6318730	Identifier	ch		6318320	1					
ANR	6318731	IfStatement	if ( t >= 'a' && t <= 'f' )		6318320	1					
ANR	6318732	Condition	t >= 'a' && t <= 'f'	1991:9:41515:41534	6318320	0	True				
ANR	6318733	AndExpression	t >= 'a' && t <= 'f'		6318320	0		&&			
ANR	6318734	RelationalExpression	t >= 'a'		6318320	0		>=			
ANR	6318735	Identifier	t		6318320	0					
ANR	6318736	PrimaryExpression	'a'		6318320	1					
ANR	6318737	RelationalExpression	t <= 'f'		6318320	1		<=			
ANR	6318738	Identifier	t		6318320	0					
ANR	6318739	PrimaryExpression	'f'		6318320	1					
ANR	6318740	CompoundStatement		84:31:1667:1667	6318320	1					
ANR	6318741	ExpressionStatement	t = t - 'a' + 10	1992:6:41545:41561	6318320	0	True				
ANR	6318742	AssignmentExpression	t = t - 'a' + 10		6318320	0		=			
ANR	6318743	Identifier	t		6318320	0					
ANR	6318744	AdditiveExpression	t - 'a' + 10		6318320	1		-			
ANR	6318745	Identifier	t		6318320	0					
ANR	6318746	AdditiveExpression	'a' + 10		6318320	1		+			
ANR	6318747	PrimaryExpression	'a'		6318320	0					
ANR	6318748	PrimaryExpression	10		6318320	1					
ANR	6318749	ElseStatement	else		6318320	0					
ANR	6318750	IfStatement	if ( t >= 'A' && t <= 'F' )		6318320	0					
ANR	6318751	Condition	t >= 'A' && t <= 'F'	1993:16:41579:41598	6318320	0	True				
ANR	6318752	AndExpression	t >= 'A' && t <= 'F'		6318320	0		&&			
ANR	6318753	RelationalExpression	t >= 'A'		6318320	0		>=			
ANR	6318754	Identifier	t		6318320	0					
ANR	6318755	PrimaryExpression	'A'		6318320	1					
ANR	6318756	RelationalExpression	t <= 'F'		6318320	1		<=			
ANR	6318757	Identifier	t		6318320	0					
ANR	6318758	PrimaryExpression	'F'		6318320	1					
ANR	6318759	CompoundStatement		86:38:1731:1731	6318320	1					
ANR	6318760	ExpressionStatement	t = t - 'A' + 10	1994:6:41609:41625	6318320	0	True				
ANR	6318761	AssignmentExpression	t = t - 'A' + 10		6318320	0		=			
ANR	6318762	Identifier	t		6318320	0					
ANR	6318763	AdditiveExpression	t - 'A' + 10		6318320	1		-			
ANR	6318764	Identifier	t		6318320	0					
ANR	6318765	AdditiveExpression	'A' + 10		6318320	1		+			
ANR	6318766	PrimaryExpression	'A'		6318320	0					
ANR	6318767	PrimaryExpression	10		6318320	1					
ANR	6318768	ElseStatement	else		6318320	0					
ANR	6318769	IfStatement	if ( t >= '0' && t <= '9' )		6318320	0					
ANR	6318770	Condition	t >= '0' && t <= '9'	1995:16:41643:41662	6318320	0	True				
ANR	6318771	AndExpression	t >= '0' && t <= '9'		6318320	0		&&			
ANR	6318772	RelationalExpression	t >= '0'		6318320	0		>=			
ANR	6318773	Identifier	t		6318320	0					
ANR	6318774	PrimaryExpression	'0'		6318320	1					
ANR	6318775	RelationalExpression	t <= '9'		6318320	1		<=			
ANR	6318776	Identifier	t		6318320	0					
ANR	6318777	PrimaryExpression	'9'		6318320	1					
ANR	6318778	CompoundStatement		88:38:1795:1795	6318320	1					
ANR	6318779	ExpressionStatement	t = t - '0'	1996:6:41673:41684	6318320	0	True				
ANR	6318780	AssignmentExpression	t = t - '0'		6318320	0		=			
ANR	6318781	Identifier	t		6318320	0					
ANR	6318782	AdditiveExpression	t - '0'		6318320	1		-			
ANR	6318783	Identifier	t		6318320	0					
ANR	6318784	PrimaryExpression	'0'		6318320	1					
ANR	6318785	ElseStatement	else		6318320	0					
ANR	6318786	CompoundStatement		90:12:1828:1828	6318320	0					
ANR	6318787	BreakStatement	break ;	1998:6:41706:41711	6318320	0	True				
ANR	6318788	IfStatement	if ( t >= b )		6318320	2					
ANR	6318789	Condition	t >= b	2000:9:41729:41734	6318320	0	True				
ANR	6318790	RelationalExpression	t >= b		6318320	0		>=			
ANR	6318791	Identifier	t		6318320	0					
ANR	6318792	Identifier	b		6318320	1					
ANR	6318793	CompoundStatement		93:17:1867:1867	6318320	1					
ANR	6318794	ExpressionStatement	"tcc_error ( ""invalid digit"" )"	2001:6:41745:41772	6318320	0	True				
ANR	6318795	CallExpression	"tcc_error ( ""invalid digit"" )"		6318320	0					
ANR	6318796	Callee	tcc_error		6318320	0					
ANR	6318797	Identifier	tcc_error		6318320	0					
ANR	6318798	ArgumentList	"""invalid digit"""		6318320	1					
ANR	6318799	Argument	"""invalid digit"""		6318320	0					
ANR	6318800	PrimaryExpression	"""invalid digit"""		6318320	0					
ANR	6318801	ExpressionStatement	"bn_lshift ( bn , shift , t )"	2003:5:41786:41810	6318320	3	True				
ANR	6318802	CallExpression	"bn_lshift ( bn , shift , t )"		6318320	0					
ANR	6318803	Callee	bn_lshift		6318320	0					
ANR	6318804	Identifier	bn_lshift		6318320	0					
ANR	6318805	ArgumentList	bn		6318320	1					
ANR	6318806	Argument	bn		6318320	0					
ANR	6318807	Identifier	bn		6318320	0					
ANR	6318808	Argument	shift		6318320	1					
ANR	6318809	Identifier	shift		6318320	0					
ANR	6318810	Argument	t		6318320	2					
ANR	6318811	Identifier	t		6318320	0					
ANR	6318812	ExpressionStatement	frac_bits += shift	2004:5:41817:41835	6318320	4	True				
ANR	6318813	AssignmentExpression	frac_bits += shift		6318320	0		+=			
ANR	6318814	Identifier	frac_bits		6318320	0					
ANR	6318815	Identifier	shift		6318320	1					
ANR	6318816	ExpressionStatement	ch = * p ++	2005:5:41842:41851	6318320	5	True				
ANR	6318817	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318818	Identifier	ch		6318320	0					
ANR	6318819	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318820	UnaryOperator	*		6318320	0					
ANR	6318821	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318822	Identifier	p		6318320	0					
ANR	6318823	IncDec	++		6318320	1					
ANR	6318824	IfStatement	if ( ch != 'p' && ch != 'P' )		6318320	7					
ANR	6318825	Condition	ch != 'p' && ch != 'P'	2008:7:41871:41892	6318320	0	True				
ANR	6318826	AndExpression	ch != 'p' && ch != 'P'		6318320	0		&&			
ANR	6318827	EqualityExpression	ch != 'p'		6318320	0		!=			
ANR	6318828	Identifier	ch		6318320	0					
ANR	6318829	PrimaryExpression	'p'		6318320	1					
ANR	6318830	EqualityExpression	ch != 'P'		6318320	1		!=			
ANR	6318831	Identifier	ch		6318320	0					
ANR	6318832	PrimaryExpression	'P'		6318320	1					
ANR	6318833	CompoundStatement		101:31:2025:2025	6318320	1					
ANR	6318834	ExpressionStatement	"expect ( ""exponent"" )"	2009:4:41901:41920	6318320	0	True				
ANR	6318835	CallExpression	"expect ( ""exponent"" )"		6318320	0					
ANR	6318836	Callee	expect		6318320	0					
ANR	6318837	Identifier	expect		6318320	0					
ANR	6318838	ArgumentList	"""exponent"""		6318320	1					
ANR	6318839	Argument	"""exponent"""		6318320	0					
ANR	6318840	PrimaryExpression	"""exponent"""		6318320	0					
ANR	6318841	ReturnStatement	return ;	2010:4:41926:41932	6318320	1	True				
ANR	6318842	ExpressionStatement	ch = * p ++	2012:3:41942:41951	6318320	8	True				
ANR	6318843	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318844	Identifier	ch		6318320	0					
ANR	6318845	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318846	UnaryOperator	*		6318320	0					
ANR	6318847	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318848	Identifier	p		6318320	0					
ANR	6318849	IncDec	++		6318320	1					
ANR	6318850	ExpressionStatement	s = 1	2013:3:41956:41961	6318320	9	True				
ANR	6318851	AssignmentExpression	s = 1		6318320	0		=			
ANR	6318852	Identifier	s		6318320	0					
ANR	6318853	PrimaryExpression	1		6318320	1					
ANR	6318854	ExpressionStatement	exp_val = 0	2014:3:41966:41977	6318320	10	True				
ANR	6318855	AssignmentExpression	exp_val = 0		6318320	0		=			
ANR	6318856	Identifier	exp_val		6318320	0					
ANR	6318857	PrimaryExpression	0		6318320	1					
ANR	6318858	IfStatement	if ( ch == '+' )		6318320	11					
ANR	6318859	Condition	ch == '+'	2015:7:41986:41994	6318320	0	True				
ANR	6318860	EqualityExpression	ch == '+'		6318320	0		==			
ANR	6318861	Identifier	ch		6318320	0					
ANR	6318862	PrimaryExpression	'+'		6318320	1					
ANR	6318863	CompoundStatement		108:18:2127:2127	6318320	1					
ANR	6318864	ExpressionStatement	ch = * p ++	2016:4:42003:42012	6318320	0	True				
ANR	6318865	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318866	Identifier	ch		6318320	0					
ANR	6318867	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318868	UnaryOperator	*		6318320	0					
ANR	6318869	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318870	Identifier	p		6318320	0					
ANR	6318871	IncDec	++		6318320	1					
ANR	6318872	ElseStatement	else		6318320	0					
ANR	6318873	IfStatement	if ( ch == '-' )		6318320	0					
ANR	6318874	Condition	ch == '-'	2017:14:42028:42036	6318320	0	True				
ANR	6318875	EqualityExpression	ch == '-'		6318320	0		==			
ANR	6318876	Identifier	ch		6318320	0					
ANR	6318877	PrimaryExpression	'-'		6318320	1					
ANR	6318878	CompoundStatement		110:25:2169:2169	6318320	1					
ANR	6318879	ExpressionStatement	s = - 1	2018:4:42045:42051	6318320	0	True				
ANR	6318880	AssignmentExpression	s = - 1		6318320	0		=			
ANR	6318881	Identifier	s		6318320	0					
ANR	6318882	UnaryOperationExpression	- 1		6318320	1					
ANR	6318883	UnaryOperator	-		6318320	0					
ANR	6318884	PrimaryExpression	1		6318320	1					
ANR	6318885	ExpressionStatement	ch = * p ++	2019:4:42057:42066	6318320	1	True				
ANR	6318886	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318887	Identifier	ch		6318320	0					
ANR	6318888	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318889	UnaryOperator	*		6318320	0					
ANR	6318890	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318891	Identifier	p		6318320	0					
ANR	6318892	IncDec	++		6318320	1					
ANR	6318893	IfStatement	if ( ch < '0' || ch > '9' )		6318320	12					
ANR	6318894	Condition	ch < '0' || ch > '9'	2021:7:42080:42099	6318320	0	True				
ANR	6318895	OrExpression	ch < '0' || ch > '9'		6318320	0		||			
ANR	6318896	RelationalExpression	ch < '0'		6318320	0		<			
ANR	6318897	Identifier	ch		6318320	0					
ANR	6318898	PrimaryExpression	'0'		6318320	1					
ANR	6318899	RelationalExpression	ch > '9'		6318320	1		>			
ANR	6318900	Identifier	ch		6318320	0					
ANR	6318901	PrimaryExpression	'9'		6318320	1					
ANR	6318902	CompoundStatement		114:29:2232:2232	6318320	1					
ANR	6318903	ExpressionStatement	"expect ( ""exponent digits"" )"	2022:4:42108:42134	6318320	0	True				
ANR	6318904	CallExpression	"expect ( ""exponent digits"" )"		6318320	0					
ANR	6318905	Callee	expect		6318320	0					
ANR	6318906	Identifier	expect		6318320	0					
ANR	6318907	ArgumentList	"""exponent digits"""		6318320	1					
ANR	6318908	Argument	"""exponent digits"""		6318320	0					
ANR	6318909	PrimaryExpression	"""exponent digits"""		6318320	0					
ANR	6318910	ReturnStatement	return ;	2023:4:42140:42146	6318320	1	True				
ANR	6318911	WhileStatement	while ( ch >= '0' && ch <= '9' )		6318320	13					
ANR	6318912	Condition	ch >= '0' && ch <= '9'	2025:10:42163:42184	6318320	0	True				
ANR	6318913	AndExpression	ch >= '0' && ch <= '9'		6318320	0		&&			
ANR	6318914	RelationalExpression	ch >= '0'		6318320	0		>=			
ANR	6318915	Identifier	ch		6318320	0					
ANR	6318916	PrimaryExpression	'0'		6318320	1					
ANR	6318917	RelationalExpression	ch <= '9'		6318320	1		<=			
ANR	6318918	Identifier	ch		6318320	0					
ANR	6318919	PrimaryExpression	'9'		6318320	1					
ANR	6318920	CompoundStatement		118:34:2317:2317	6318320	1					
ANR	6318921	ExpressionStatement	exp_val = exp_val * 10 + ch - '0'	2026:4:42193:42226	6318320	0	True				
ANR	6318922	AssignmentExpression	exp_val = exp_val * 10 + ch - '0'		6318320	0		=			
ANR	6318923	Identifier	exp_val		6318320	0					
ANR	6318924	AdditiveExpression	exp_val * 10 + ch - '0'		6318320	1		+			
ANR	6318925	MultiplicativeExpression	exp_val * 10		6318320	0		*			
ANR	6318926	Identifier	exp_val		6318320	0					
ANR	6318927	PrimaryExpression	10		6318320	1					
ANR	6318928	AdditiveExpression	ch - '0'		6318320	1		-			
ANR	6318929	Identifier	ch		6318320	0					
ANR	6318930	PrimaryExpression	'0'		6318320	1					
ANR	6318931	ExpressionStatement	ch = * p ++	2027:4:42232:42241	6318320	1	True				
ANR	6318932	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318933	Identifier	ch		6318320	0					
ANR	6318934	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318935	UnaryOperator	*		6318320	0					
ANR	6318936	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318937	Identifier	p		6318320	0					
ANR	6318938	IncDec	++		6318320	1					
ANR	6318939	ExpressionStatement	exp_val = exp_val * s	2029:3:42251:42272	6318320	14	True				
ANR	6318940	AssignmentExpression	exp_val = exp_val * s		6318320	0		=			
ANR	6318941	Identifier	exp_val		6318320	0					
ANR	6318942	MultiplicativeExpression	exp_val * s		6318320	1		*			
ANR	6318943	Identifier	exp_val		6318320	0					
ANR	6318944	Identifier	s		6318320	1					
ANR	6318945	ExpressionStatement	d = ( double ) bn [ 1 ] * 4294967296.0 + ( double ) bn [ 0 ]	2033:3:42367:42417	6318320	15	True				
ANR	6318946	AssignmentExpression	d = ( double ) bn [ 1 ] * 4294967296.0 + ( double ) bn [ 0 ]		6318320	0		=			
ANR	6318947	Identifier	d		6318320	0					
ANR	6318948	AdditiveExpression	( double ) bn [ 1 ] * 4294967296.0 + ( double ) bn [ 0 ]		6318320	1		+			
ANR	6318949	MultiplicativeExpression	( double ) bn [ 1 ] * 4294967296.0		6318320	0		*			
ANR	6318950	CastExpression	( double ) bn [ 1 ]		6318320	0					
ANR	6318951	CastTarget	double		6318320	0					
ANR	6318952	ArrayIndexing	bn [ 1 ]		6318320	1					
ANR	6318953	Identifier	bn		6318320	0					
ANR	6318954	PrimaryExpression	1		6318320	1					
ANR	6318955	PrimaryExpression	4294967296.0		6318320	1					
ANR	6318956	CastExpression	( double ) bn [ 0 ]		6318320	1					
ANR	6318957	CastTarget	double		6318320	0					
ANR	6318958	ArrayIndexing	bn [ 0 ]		6318320	1					
ANR	6318959	Identifier	bn		6318320	0					
ANR	6318960	PrimaryExpression	0		6318320	1					
ANR	6318961	ExpressionStatement	"d = ldexp ( d , exp_val - frac_bits )"	2034:3:42422:42456	6318320	16	True				
ANR	6318962	AssignmentExpression	"d = ldexp ( d , exp_val - frac_bits )"		6318320	0		=			
ANR	6318963	Identifier	d		6318320	0					
ANR	6318964	CallExpression	"ldexp ( d , exp_val - frac_bits )"		6318320	1					
ANR	6318965	Callee	ldexp		6318320	0					
ANR	6318966	Identifier	ldexp		6318320	0					
ANR	6318967	ArgumentList	d		6318320	1					
ANR	6318968	Argument	d		6318320	0					
ANR	6318969	Identifier	d		6318320	0					
ANR	6318970	Argument	exp_val - frac_bits		6318320	1					
ANR	6318971	AdditiveExpression	exp_val - frac_bits		6318320	0		-			
ANR	6318972	Identifier	exp_val		6318320	0					
ANR	6318973	Identifier	frac_bits		6318320	1					
ANR	6318974	ExpressionStatement	t = toup ( ch )	2035:3:42461:42474	6318320	17	True				
ANR	6318975	AssignmentExpression	t = toup ( ch )		6318320	0		=			
ANR	6318976	Identifier	t		6318320	0					
ANR	6318977	CallExpression	toup ( ch )		6318320	1					
ANR	6318978	Callee	toup		6318320	0					
ANR	6318979	Identifier	toup		6318320	0					
ANR	6318980	ArgumentList	ch		6318320	1					
ANR	6318981	Argument	ch		6318320	0					
ANR	6318982	Identifier	ch		6318320	0					
ANR	6318983	IfStatement	if ( t == 'F' )		6318320	18					
ANR	6318984	Condition	t == 'F'	2036:7:42483:42490	6318320	0	True				
ANR	6318985	EqualityExpression	t == 'F'		6318320	0		==			
ANR	6318986	Identifier	t		6318320	0					
ANR	6318987	PrimaryExpression	'F'		6318320	1					
ANR	6318988	CompoundStatement		129:17:2623:2623	6318320	1					
ANR	6318989	ExpressionStatement	ch = * p ++	2037:4:42499:42508	6318320	0	True				
ANR	6318990	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6318991	Identifier	ch		6318320	0					
ANR	6318992	UnaryOperationExpression	* p ++		6318320	1					
ANR	6318993	UnaryOperator	*		6318320	0					
ANR	6318994	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6318995	Identifier	p		6318320	0					
ANR	6318996	IncDec	++		6318320	1					
ANR	6318997	ExpressionStatement	tok = TOK_CFLOAT	2038:4:42514:42530	6318320	1	True				
ANR	6318998	AssignmentExpression	tok = TOK_CFLOAT		6318320	0		=			
ANR	6318999	Identifier	tok		6318320	0					
ANR	6319000	Identifier	TOK_CFLOAT		6318320	1					
ANR	6319001	ExpressionStatement	tokc . f = ( float ) d	2040:4:42577:42595	6318320	2	True				
ANR	6319002	AssignmentExpression	tokc . f = ( float ) d		6318320	0		=			
ANR	6319003	MemberAccess	tokc . f		6318320	0					
ANR	6319004	Identifier	tokc		6318320	0					
ANR	6319005	Identifier	f		6318320	1					
ANR	6319006	CastExpression	( float ) d		6318320	1					
ANR	6319007	CastTarget	float		6318320	0					
ANR	6319008	Identifier	d		6318320	1					
ANR	6319009	ElseStatement	else		6318320	0					
ANR	6319010	IfStatement	if ( t == 'L' )		6318320	0					
ANR	6319011	Condition	t == 'L'	2041:14:42611:42618	6318320	0	True				
ANR	6319012	EqualityExpression	t == 'L'		6318320	0		==			
ANR	6319013	Identifier	t		6318320	0					
ANR	6319014	PrimaryExpression	'L'		6318320	1					
ANR	6319015	CompoundStatement		134:24:2751:2751	6318320	1					
ANR	6319016	ExpressionStatement	ch = * p ++	2042:4:42627:42636	6318320	0	True				
ANR	6319017	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319018	Identifier	ch		6318320	0					
ANR	6319019	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319020	UnaryOperator	*		6318320	0					
ANR	6319021	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319022	Identifier	p		6318320	0					
ANR	6319023	IncDec	++		6318320	1					
ANR	6319024	ExpressionStatement	tok = TOK_CDOUBLE	2044:4:42663:42680	6318320	1	True				
ANR	6319025	AssignmentExpression	tok = TOK_CDOUBLE		6318320	0		=			
ANR	6319026	Identifier	tok		6318320	0					
ANR	6319027	Identifier	TOK_CDOUBLE		6318320	1					
ANR	6319028	ExpressionStatement	tokc . d = d	2045:4:42686:42696	6318320	2	True				
ANR	6319029	AssignmentExpression	tokc . d = d		6318320	0		=			
ANR	6319030	MemberAccess	tokc . d		6318320	0					
ANR	6319031	Identifier	tokc		6318320	0					
ANR	6319032	Identifier	d		6318320	1					
ANR	6319033	Identifier	d		6318320	1					
ANR	6319034	ElseStatement	else		6318320	0					
ANR	6319035	CompoundStatement		144:10:2938:2938	6318320	0					
ANR	6319036	ExpressionStatement	tok = TOK_CDOUBLE	2052:4:42814:42831	6318320	0	True				
ANR	6319037	AssignmentExpression	tok = TOK_CDOUBLE		6318320	0		=			
ANR	6319038	Identifier	tok		6318320	0					
ANR	6319039	Identifier	TOK_CDOUBLE		6318320	1					
ANR	6319040	ExpressionStatement	tokc . d = d	2053:4:42837:42847	6318320	1	True				
ANR	6319041	AssignmentExpression	tokc . d = d		6318320	0		=			
ANR	6319042	MemberAccess	tokc . d		6318320	0					
ANR	6319043	Identifier	tokc		6318320	0					
ANR	6319044	Identifier	d		6318320	1					
ANR	6319045	Identifier	d		6318320	1					
ANR	6319046	ElseStatement	else		6318320	0					
ANR	6319047	CompoundStatement		148:9:2993:2993	6318320	0					
ANR	6319048	IfStatement	if ( ch == '.' )		6318320	0					
ANR	6319049	Condition	ch == '.'	2057:7:42896:42904	6318320	0	True				
ANR	6319050	EqualityExpression	ch == '.'		6318320	0		==			
ANR	6319051	Identifier	ch		6318320	0					
ANR	6319052	PrimaryExpression	'.'		6318320	1					
ANR	6319053	CompoundStatement		150:18:3037:3037	6318320	1					
ANR	6319054	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6318320	0					
ANR	6319055	Condition	q >= token_buf + STRING_MAX_SIZE	2058:8:42917:42948	6318320	0	True				
ANR	6319056	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6318320	0		>=			
ANR	6319057	Identifier	q		6318320	0					
ANR	6319058	AdditiveExpression	token_buf + STRING_MAX_SIZE		6318320	1		+			
ANR	6319059	Identifier	token_buf		6318320	0					
ANR	6319060	Identifier	STRING_MAX_SIZE		6318320	1					
ANR	6319061	CompoundStatement		151:42:3081:3081	6318320	1					
ANR	6319062	GotoStatement	goto num_too_long ;	2059:5:42958:42975	6318320	0	True				
ANR	6319063	Identifier	num_too_long		6318320	0					
ANR	6319064	ExpressionStatement	* q ++ = ch	2061:4:42987:42996	6318320	1	True				
ANR	6319065	AssignmentExpression	* q ++ = ch		6318320	0		=			
ANR	6319066	UnaryOperationExpression	* q ++		6318320	0					
ANR	6319067	UnaryOperator	*		6318320	0					
ANR	6319068	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6319069	Identifier	q		6318320	0					
ANR	6319070	IncDec	++		6318320	1					
ANR	6319071	Identifier	ch		6318320	1					
ANR	6319072	ExpressionStatement	ch = * p ++	2062:4:43002:43011	6318320	2	True				
ANR	6319073	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319074	Identifier	ch		6318320	0					
ANR	6319075	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319076	UnaryOperator	*		6318320	0					
ANR	6319077	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319078	Identifier	p		6318320	0					
ANR	6319079	IncDec	++		6318320	1					
ANR	6319080	Label	float_frac_parse :	2063:0:43013:43029	6318320	3	True				
ANR	6319081	Identifier	float_frac_parse		6318320	0					
ANR	6319082	WhileStatement	while ( ch >= '0' && ch <= '9' )		6318320	4					
ANR	6319083	Condition	ch >= '0' && ch <= '9'	2064:11:43042:43063	6318320	0	True				
ANR	6319084	AndExpression	ch >= '0' && ch <= '9'		6318320	0		&&			
ANR	6319085	RelationalExpression	ch >= '0'		6318320	0		>=			
ANR	6319086	Identifier	ch		6318320	0					
ANR	6319087	PrimaryExpression	'0'		6318320	1					
ANR	6319088	RelationalExpression	ch <= '9'		6318320	1		<=			
ANR	6319089	Identifier	ch		6318320	0					
ANR	6319090	PrimaryExpression	'9'		6318320	1					
ANR	6319091	CompoundStatement		157:35:3196:3196	6318320	1					
ANR	6319092	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6318320	0					
ANR	6319093	Condition	q >= token_buf + STRING_MAX_SIZE	2065:9:43077:43108	6318320	0	True				
ANR	6319094	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6318320	0		>=			
ANR	6319095	Identifier	q		6318320	0					
ANR	6319096	AdditiveExpression	token_buf + STRING_MAX_SIZE		6318320	1		+			
ANR	6319097	Identifier	token_buf		6318320	0					
ANR	6319098	Identifier	STRING_MAX_SIZE		6318320	1					
ANR	6319099	CompoundStatement		158:43:3241:3241	6318320	1					
ANR	6319100	GotoStatement	goto num_too_long ;	2066:6:43119:43136	6318320	0	True				
ANR	6319101	Identifier	num_too_long		6318320	0					
ANR	6319102	ExpressionStatement	* q ++ = ch	2068:5:43150:43159	6318320	1	True				
ANR	6319103	AssignmentExpression	* q ++ = ch		6318320	0		=			
ANR	6319104	UnaryOperationExpression	* q ++		6318320	0					
ANR	6319105	UnaryOperator	*		6318320	0					
ANR	6319106	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6319107	Identifier	q		6318320	0					
ANR	6319108	IncDec	++		6318320	1					
ANR	6319109	Identifier	ch		6318320	1					
ANR	6319110	ExpressionStatement	ch = * p ++	2069:5:43166:43175	6318320	2	True				
ANR	6319111	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319112	Identifier	ch		6318320	0					
ANR	6319113	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319114	UnaryOperator	*		6318320	0					
ANR	6319115	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319116	Identifier	p		6318320	0					
ANR	6319117	IncDec	++		6318320	1					
ANR	6319118	IfStatement	if ( ch == 'e' || ch == 'E' )		6318320	1					
ANR	6319119	Condition	ch == 'e' || ch == 'E'	2072:7:43195:43216	6318320	0	True				
ANR	6319120	OrExpression	ch == 'e' || ch == 'E'		6318320	0		||			
ANR	6319121	EqualityExpression	ch == 'e'		6318320	0		==			
ANR	6319122	Identifier	ch		6318320	0					
ANR	6319123	PrimaryExpression	'e'		6318320	1					
ANR	6319124	EqualityExpression	ch == 'E'		6318320	1		==			
ANR	6319125	Identifier	ch		6318320	0					
ANR	6319126	PrimaryExpression	'E'		6318320	1					
ANR	6319127	CompoundStatement		165:31:3349:3349	6318320	1					
ANR	6319128	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6318320	0					
ANR	6319129	Condition	q >= token_buf + STRING_MAX_SIZE	2073:8:43229:43260	6318320	0	True				
ANR	6319130	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6318320	0		>=			
ANR	6319131	Identifier	q		6318320	0					
ANR	6319132	AdditiveExpression	token_buf + STRING_MAX_SIZE		6318320	1		+			
ANR	6319133	Identifier	token_buf		6318320	0					
ANR	6319134	Identifier	STRING_MAX_SIZE		6318320	1					
ANR	6319135	CompoundStatement		166:42:3393:3393	6318320	1					
ANR	6319136	GotoStatement	goto num_too_long ;	2074:5:43270:43287	6318320	0	True				
ANR	6319137	Identifier	num_too_long		6318320	0					
ANR	6319138	ExpressionStatement	* q ++ = ch	2076:4:43299:43308	6318320	1	True				
ANR	6319139	AssignmentExpression	* q ++ = ch		6318320	0		=			
ANR	6319140	UnaryOperationExpression	* q ++		6318320	0					
ANR	6319141	UnaryOperator	*		6318320	0					
ANR	6319142	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6319143	Identifier	q		6318320	0					
ANR	6319144	IncDec	++		6318320	1					
ANR	6319145	Identifier	ch		6318320	1					
ANR	6319146	ExpressionStatement	ch = * p ++	2077:4:43314:43323	6318320	2	True				
ANR	6319147	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319148	Identifier	ch		6318320	0					
ANR	6319149	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319150	UnaryOperator	*		6318320	0					
ANR	6319151	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319152	Identifier	p		6318320	0					
ANR	6319153	IncDec	++		6318320	1					
ANR	6319154	IfStatement	if ( ch == '-' || ch == '+' )		6318320	3					
ANR	6319155	Condition	ch == '-' || ch == '+'	2078:8:43333:43354	6318320	0	True				
ANR	6319156	OrExpression	ch == '-' || ch == '+'		6318320	0		||			
ANR	6319157	EqualityExpression	ch == '-'		6318320	0		==			
ANR	6319158	Identifier	ch		6318320	0					
ANR	6319159	PrimaryExpression	'-'		6318320	1					
ANR	6319160	EqualityExpression	ch == '+'		6318320	1		==			
ANR	6319161	Identifier	ch		6318320	0					
ANR	6319162	PrimaryExpression	'+'		6318320	1					
ANR	6319163	CompoundStatement		171:32:3487:3487	6318320	1					
ANR	6319164	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6318320	0					
ANR	6319165	Condition	q >= token_buf + STRING_MAX_SIZE	2079:9:43368:43399	6318320	0	True				
ANR	6319166	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6318320	0		>=			
ANR	6319167	Identifier	q		6318320	0					
ANR	6319168	AdditiveExpression	token_buf + STRING_MAX_SIZE		6318320	1		+			
ANR	6319169	Identifier	token_buf		6318320	0					
ANR	6319170	Identifier	STRING_MAX_SIZE		6318320	1					
ANR	6319171	CompoundStatement		172:43:3532:3532	6318320	1					
ANR	6319172	GotoStatement	goto num_too_long ;	2080:6:43410:43427	6318320	0	True				
ANR	6319173	Identifier	num_too_long		6318320	0					
ANR	6319174	ExpressionStatement	* q ++ = ch	2082:5:43441:43450	6318320	1	True				
ANR	6319175	AssignmentExpression	* q ++ = ch		6318320	0		=			
ANR	6319176	UnaryOperationExpression	* q ++		6318320	0					
ANR	6319177	UnaryOperator	*		6318320	0					
ANR	6319178	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6319179	Identifier	q		6318320	0					
ANR	6319180	IncDec	++		6318320	1					
ANR	6319181	Identifier	ch		6318320	1					
ANR	6319182	ExpressionStatement	ch = * p ++	2083:5:43457:43466	6318320	2	True				
ANR	6319183	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319184	Identifier	ch		6318320	0					
ANR	6319185	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319186	UnaryOperator	*		6318320	0					
ANR	6319187	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319188	Identifier	p		6318320	0					
ANR	6319189	IncDec	++		6318320	1					
ANR	6319190	IfStatement	if ( ch < '0' || ch > '9' )		6318320	4					
ANR	6319191	Condition	ch < '0' || ch > '9'	2085:8:43482:43501	6318320	0	True				
ANR	6319192	OrExpression	ch < '0' || ch > '9'		6318320	0		||			
ANR	6319193	RelationalExpression	ch < '0'		6318320	0		<			
ANR	6319194	Identifier	ch		6318320	0					
ANR	6319195	PrimaryExpression	'0'		6318320	1					
ANR	6319196	RelationalExpression	ch > '9'		6318320	1		>			
ANR	6319197	Identifier	ch		6318320	0					
ANR	6319198	PrimaryExpression	'9'		6318320	1					
ANR	6319199	CompoundStatement		178:30:3634:3634	6318320	1					
ANR	6319200	ExpressionStatement	"expect ( ""exponent digits"" )"	2086:5:43511:43537	6318320	0	True				
ANR	6319201	CallExpression	"expect ( ""exponent digits"" )"		6318320	0					
ANR	6319202	Callee	expect		6318320	0					
ANR	6319203	Identifier	expect		6318320	0					
ANR	6319204	ArgumentList	"""exponent digits"""		6318320	1					
ANR	6319205	Argument	"""exponent digits"""		6318320	0					
ANR	6319206	PrimaryExpression	"""exponent digits"""		6318320	0					
ANR	6319207	ReturnStatement	return ;	2087:5:43544:43550	6318320	1	True				
ANR	6319208	WhileStatement	while ( ch >= '0' && ch <= '9' )		6318320	5					
ANR	6319209	Condition	ch >= '0' && ch <= '9'	2089:11:43569:43590	6318320	0	True				
ANR	6319210	AndExpression	ch >= '0' && ch <= '9'		6318320	0		&&			
ANR	6319211	RelationalExpression	ch >= '0'		6318320	0		>=			
ANR	6319212	Identifier	ch		6318320	0					
ANR	6319213	PrimaryExpression	'0'		6318320	1					
ANR	6319214	RelationalExpression	ch <= '9'		6318320	1		<=			
ANR	6319215	Identifier	ch		6318320	0					
ANR	6319216	PrimaryExpression	'9'		6318320	1					
ANR	6319217	CompoundStatement		182:35:3723:3723	6318320	1					
ANR	6319218	IfStatement	if ( q >= token_buf + STRING_MAX_SIZE )		6318320	0					
ANR	6319219	Condition	q >= token_buf + STRING_MAX_SIZE	2090:9:43604:43635	6318320	0	True				
ANR	6319220	RelationalExpression	q >= token_buf + STRING_MAX_SIZE		6318320	0		>=			
ANR	6319221	Identifier	q		6318320	0					
ANR	6319222	AdditiveExpression	token_buf + STRING_MAX_SIZE		6318320	1		+			
ANR	6319223	Identifier	token_buf		6318320	0					
ANR	6319224	Identifier	STRING_MAX_SIZE		6318320	1					
ANR	6319225	CompoundStatement		183:43:3768:3768	6318320	1					
ANR	6319226	GotoStatement	goto num_too_long ;	2091:6:43646:43663	6318320	0	True				
ANR	6319227	Identifier	num_too_long		6318320	0					
ANR	6319228	ExpressionStatement	* q ++ = ch	2093:5:43677:43686	6318320	1	True				
ANR	6319229	AssignmentExpression	* q ++ = ch		6318320	0		=			
ANR	6319230	UnaryOperationExpression	* q ++		6318320	0					
ANR	6319231	UnaryOperator	*		6318320	0					
ANR	6319232	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6319233	Identifier	q		6318320	0					
ANR	6319234	IncDec	++		6318320	1					
ANR	6319235	Identifier	ch		6318320	1					
ANR	6319236	ExpressionStatement	ch = * p ++	2094:5:43693:43702	6318320	2	True				
ANR	6319237	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319238	Identifier	ch		6318320	0					
ANR	6319239	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319240	UnaryOperator	*		6318320	0					
ANR	6319241	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319242	Identifier	p		6318320	0					
ANR	6319243	IncDec	++		6318320	1					
ANR	6319244	ExpressionStatement	* q = '\\0'	2097:3:43718:43727	6318320	2	True				
ANR	6319245	AssignmentExpression	* q = '\\0'		6318320	0		=			
ANR	6319246	UnaryOperationExpression	* q		6318320	0					
ANR	6319247	UnaryOperator	*		6318320	0					
ANR	6319248	Identifier	q		6318320	1					
ANR	6319249	PrimaryExpression	'\\0'		6318320	1					
ANR	6319250	ExpressionStatement	t = toup ( ch )	2098:3:43732:43745	6318320	3	True				
ANR	6319251	AssignmentExpression	t = toup ( ch )		6318320	0		=			
ANR	6319252	Identifier	t		6318320	0					
ANR	6319253	CallExpression	toup ( ch )		6318320	1					
ANR	6319254	Callee	toup		6318320	0					
ANR	6319255	Identifier	toup		6318320	0					
ANR	6319256	ArgumentList	ch		6318320	1					
ANR	6319257	Argument	ch		6318320	0					
ANR	6319258	Identifier	ch		6318320	0					
ANR	6319259	ExpressionStatement	errno = 0	2099:3:43750:43759	6318320	4	True				
ANR	6319260	AssignmentExpression	errno = 0		6318320	0		=			
ANR	6319261	Identifier	errno		6318320	0					
ANR	6319262	PrimaryExpression	0		6318320	1					
ANR	6319263	IfStatement	if ( t == 'F' )		6318320	5					
ANR	6319264	Condition	t == 'F'	2100:7:43768:43775	6318320	0	True				
ANR	6319265	EqualityExpression	t == 'F'		6318320	0		==			
ANR	6319266	Identifier	t		6318320	0					
ANR	6319267	PrimaryExpression	'F'		6318320	1					
ANR	6319268	CompoundStatement		193:17:3908:3908	6318320	1					
ANR	6319269	ExpressionStatement	ch = * p ++	2101:4:43784:43793	6318320	0	True				
ANR	6319270	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319271	Identifier	ch		6318320	0					
ANR	6319272	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319273	UnaryOperator	*		6318320	0					
ANR	6319274	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319275	Identifier	p		6318320	0					
ANR	6319276	IncDec	++		6318320	1					
ANR	6319277	ExpressionStatement	tok = TOK_CFLOAT	2102:4:43799:43815	6318320	1	True				
ANR	6319278	AssignmentExpression	tok = TOK_CFLOAT		6318320	0		=			
ANR	6319279	Identifier	tok		6318320	0					
ANR	6319280	Identifier	TOK_CFLOAT		6318320	1					
ANR	6319281	ExpressionStatement	"tokc . f = strtof ( token_buf , NULL )"	2103:4:43821:43854	6318320	2	True				
ANR	6319282	AssignmentExpression	"tokc . f = strtof ( token_buf , NULL )"		6318320	0		=			
ANR	6319283	MemberAccess	tokc . f		6318320	0					
ANR	6319284	Identifier	tokc		6318320	0					
ANR	6319285	Identifier	f		6318320	1					
ANR	6319286	CallExpression	"strtof ( token_buf , NULL )"		6318320	1					
ANR	6319287	Callee	strtof		6318320	0					
ANR	6319288	Identifier	strtof		6318320	0					
ANR	6319289	ArgumentList	token_buf		6318320	1					
ANR	6319290	Argument	token_buf		6318320	0					
ANR	6319291	Identifier	token_buf		6318320	0					
ANR	6319292	Argument	NULL		6318320	1					
ANR	6319293	Identifier	NULL		6318320	0					
ANR	6319294	ElseStatement	else		6318320	0					
ANR	6319295	IfStatement	if ( t == 'L' )		6318320	0					
ANR	6319296	Condition	t == 'L'	2104:14:43870:43877	6318320	0	True				
ANR	6319297	EqualityExpression	t == 'L'		6318320	0		==			
ANR	6319298	Identifier	t		6318320	0					
ANR	6319299	PrimaryExpression	'L'		6318320	1					
ANR	6319300	CompoundStatement		197:24:4010:4010	6318320	1					
ANR	6319301	ExpressionStatement	ch = * p ++	2105:4:43886:43895	6318320	0	True				
ANR	6319302	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319303	Identifier	ch		6318320	0					
ANR	6319304	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319305	UnaryOperator	*		6318320	0					
ANR	6319306	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319307	Identifier	p		6318320	0					
ANR	6319308	IncDec	++		6318320	1					
ANR	6319309	ExpressionStatement	tok = TOK_CDOUBLE	2106:4:43901:43918	6318320	1	True				
ANR	6319310	AssignmentExpression	tok = TOK_CDOUBLE		6318320	0		=			
ANR	6319311	Identifier	tok		6318320	0					
ANR	6319312	Identifier	TOK_CDOUBLE		6318320	1					
ANR	6319313	ExpressionStatement	"tokc . d = strtod ( token_buf , NULL )"	2107:4:43924:43957	6318320	2	True				
ANR	6319314	AssignmentExpression	"tokc . d = strtod ( token_buf , NULL )"		6318320	0		=			
ANR	6319315	MemberAccess	tokc . d		6318320	0					
ANR	6319316	Identifier	tokc		6318320	0					
ANR	6319317	Identifier	d		6318320	1					
ANR	6319318	CallExpression	"strtod ( token_buf , NULL )"		6318320	1					
ANR	6319319	Callee	strtod		6318320	0					
ANR	6319320	Identifier	strtod		6318320	0					
ANR	6319321	ArgumentList	token_buf		6318320	1					
ANR	6319322	Argument	token_buf		6318320	0					
ANR	6319323	Identifier	token_buf		6318320	0					
ANR	6319324	Argument	NULL		6318320	1					
ANR	6319325	Identifier	NULL		6318320	0					
ANR	6319326	ExpressionStatement	tok = TOK_CDOUBLE	2110:4:43990:44007	6318320	3	True				
ANR	6319327	AssignmentExpression	tok = TOK_CDOUBLE		6318320	0		=			
ANR	6319328	Identifier	tok		6318320	0					
ANR	6319329	Identifier	TOK_CDOUBLE		6318320	1					
ANR	6319330	ExpressionStatement	"tokc . d = strtod ( token_buf , NULL )"	2111:4:44013:44046	6318320	4	True				
ANR	6319331	AssignmentExpression	"tokc . d = strtod ( token_buf , NULL )"		6318320	0		=			
ANR	6319332	MemberAccess	tokc . d		6318320	0					
ANR	6319333	Identifier	tokc		6318320	0					
ANR	6319334	Identifier	d		6318320	1					
ANR	6319335	CallExpression	"strtod ( token_buf , NULL )"		6318320	1					
ANR	6319336	Callee	strtod		6318320	0					
ANR	6319337	Identifier	strtod		6318320	0					
ANR	6319338	ArgumentList	token_buf		6318320	1					
ANR	6319339	Argument	token_buf		6318320	0					
ANR	6319340	Identifier	token_buf		6318320	0					
ANR	6319341	Argument	NULL		6318320	1					
ANR	6319342	Identifier	NULL		6318320	0					
ANR	6319343	ElseStatement	else		6318320	0					
ANR	6319344	CompoundStatement		210:10:4273:4273	6318320	0					
ANR	6319345	ExpressionStatement	tok = TOK_CDOUBLE	2118:4:44149:44166	6318320	0	True				
ANR	6319346	AssignmentExpression	tok = TOK_CDOUBLE		6318320	0		=			
ANR	6319347	Identifier	tok		6318320	0					
ANR	6319348	Identifier	TOK_CDOUBLE		6318320	1					
ANR	6319349	ExpressionStatement	"tokc . d = strtod ( token_buf , NULL )"	2119:4:44172:44205	6318320	1	True				
ANR	6319350	AssignmentExpression	"tokc . d = strtod ( token_buf , NULL )"		6318320	0		=			
ANR	6319351	MemberAccess	tokc . d		6318320	0					
ANR	6319352	Identifier	tokc		6318320	0					
ANR	6319353	Identifier	d		6318320	1					
ANR	6319354	CallExpression	"strtod ( token_buf , NULL )"		6318320	1					
ANR	6319355	Callee	strtod		6318320	0					
ANR	6319356	Identifier	strtod		6318320	0					
ANR	6319357	ArgumentList	token_buf		6318320	1					
ANR	6319358	Argument	token_buf		6318320	0					
ANR	6319359	Identifier	token_buf		6318320	0					
ANR	6319360	Argument	NULL		6318320	1					
ANR	6319361	Identifier	NULL		6318320	0					
ANR	6319362	ElseStatement	else		6318320	0					
ANR	6319363	CompoundStatement		217:2:4386:4404	6318320	0					
ANR	6319364	IdentifierDeclStatement	"unsigned long long n , n1 ;"	2123:2:44228:44252	6318320	0	True				
ANR	6319365	IdentifierDecl	n		6318320	0					
ANR	6319366	IdentifierDeclType	unsigned long long		6318320	0					
ANR	6319367	Identifier	n		6318320	1					
ANR	6319368	IdentifierDecl	n1		6318320	1					
ANR	6319369	IdentifierDeclType	unsigned long long		6318320	0					
ANR	6319370	Identifier	n1		6318320	1					
ANR	6319371	IdentifierDeclStatement	"int lcount , ucount ;"	2124:2:44256:44274	6318320	1	True				
ANR	6319372	IdentifierDecl	lcount		6318320	0					
ANR	6319373	IdentifierDeclType	int		6318320	0					
ANR	6319374	Identifier	lcount		6318320	1					
ANR	6319375	IdentifierDecl	ucount		6318320	1					
ANR	6319376	IdentifierDeclType	int		6318320	0					
ANR	6319377	Identifier	ucount		6318320	1					
ANR	6319378	ExpressionStatement	* q = '\\0'	2127:2:44302:44311	6318320	2	True				
ANR	6319379	AssignmentExpression	* q = '\\0'		6318320	0		=			
ANR	6319380	UnaryOperationExpression	* q		6318320	0					
ANR	6319381	UnaryOperator	*		6318320	0					
ANR	6319382	Identifier	q		6318320	1					
ANR	6319383	PrimaryExpression	'\\0'		6318320	1					
ANR	6319384	ExpressionStatement	q = token_buf	2128:2:44315:44328	6318320	3	True				
ANR	6319385	AssignmentExpression	q = token_buf		6318320	0		=			
ANR	6319386	Identifier	q		6318320	0					
ANR	6319387	Identifier	token_buf		6318320	1					
ANR	6319388	IfStatement	if ( b == 10 && * q == '0' )		6318320	4					
ANR	6319389	Condition	b == 10 && * q == '0'	2129:6:44336:44355	6318320	0	True				
ANR	6319390	AndExpression	b == 10 && * q == '0'		6318320	0		&&			
ANR	6319391	EqualityExpression	b == 10		6318320	0		==			
ANR	6319392	Identifier	b		6318320	0					
ANR	6319393	PrimaryExpression	10		6318320	1					
ANR	6319394	EqualityExpression	* q == '0'		6318320	1		==			
ANR	6319395	UnaryOperationExpression	* q		6318320	0					
ANR	6319396	UnaryOperator	*		6318320	0					
ANR	6319397	Identifier	q		6318320	1					
ANR	6319398	PrimaryExpression	'0'		6318320	1					
ANR	6319399	CompoundStatement		222:28:4488:4488	6318320	1					
ANR	6319400	ExpressionStatement	b = 8	2130:3:44363:44368	6318320	0	True				
ANR	6319401	AssignmentExpression	b = 8		6318320	0		=			
ANR	6319402	Identifier	b		6318320	0					
ANR	6319403	PrimaryExpression	8		6318320	1					
ANR	6319404	ExpressionStatement	q ++	2131:3:44373:44376	6318320	1	True				
ANR	6319405	PostIncDecOperationExpression	q ++		6318320	0					
ANR	6319406	Identifier	q		6318320	0					
ANR	6319407	IncDec	++		6318320	1					
ANR	6319408	ElseStatement	else		6318320	0					
ANR	6319409	IfStatement	if ( n > 0x7fffffff )		6318320	0					
ANR	6319410	Condition	n > 0x7fffffff	2165:13:45042:45055	6318320	0	True				
ANR	6319411	RelationalExpression	n > 0x7fffffff		6318320	0		>			
ANR	6319412	Identifier	n		6318320	0					
ANR	6319413	PrimaryExpression	0x7fffffff		6318320	1					
ANR	6319414	CompoundStatement		258:29:5188:5188	6318320	1					
ANR	6319415	ExpressionStatement	tok = TOK_CUINT	2166:3:45063:45078	6318320	0	True				
ANR	6319416	AssignmentExpression	tok = TOK_CUINT		6318320	0		=			
ANR	6319417	Identifier	tok		6318320	0					
ANR	6319418	Identifier	TOK_CUINT		6318320	1					
ANR	6319419	ElseStatement	else		6318320	0					
ANR	6319420	CompoundStatement		260:9:5219:5219	6318320	0					
ANR	6319421	ExpressionStatement	tok = TOK_CINT	2168:3:45094:45108	6318320	0	True				
ANR	6319422	AssignmentExpression	tok = TOK_CINT		6318320	0		=			
ANR	6319423	Identifier	tok		6318320	0					
ANR	6319424	Identifier	TOK_CINT		6318320	1					
ANR	6319425	ExpressionStatement	n = 0	2133:2:44384:44389	6318320	5	True				
ANR	6319426	AssignmentExpression	n = 0		6318320	0		=			
ANR	6319427	Identifier	n		6318320	0					
ANR	6319428	PrimaryExpression	0		6318320	1					
ANR	6319429	WhileStatement	while ( 1 )		6318320	6					
ANR	6319430	Condition	1	2134:9:44400:44400	6318320	0	True				
ANR	6319431	PrimaryExpression	1		6318320	0					
ANR	6319432	CompoundStatement		227:12:4533:4533	6318320	1					
ANR	6319433	ExpressionStatement	t = * q ++	2135:3:44408:44416	6318320	0	True				
ANR	6319434	AssignmentExpression	t = * q ++		6318320	0		=			
ANR	6319435	Identifier	t		6318320	0					
ANR	6319436	UnaryOperationExpression	* q ++		6318320	1					
ANR	6319437	UnaryOperator	*		6318320	0					
ANR	6319438	PostIncDecOperationExpression	q ++		6318320	1					
ANR	6319439	Identifier	q		6318320	0					
ANR	6319440	IncDec	++		6318320	1					
ANR	6319441	IfStatement	if ( t == '\\0' )		6318320	1					
ANR	6319442	Condition	t == '\\0'	2137:7:44483:44491	6318320	0	True				
ANR	6319443	EqualityExpression	t == '\\0'		6318320	0		==			
ANR	6319444	Identifier	t		6318320	0					
ANR	6319445	PrimaryExpression	'\\0'		6318320	1					
ANR	6319446	CompoundStatement		230:18:4624:4624	6318320	1					
ANR	6319447	BreakStatement	break ;	2138:4:44500:44505	6318320	0	True				
ANR	6319448	ElseStatement	else		6318320	0					
ANR	6319449	IfStatement	if ( t >= 'a' )		6318320	0					
ANR	6319450	Condition	t >= 'a'	2139:14:44521:44528	6318320	0	True				
ANR	6319451	RelationalExpression	t >= 'a'		6318320	0		>=			
ANR	6319452	Identifier	t		6318320	0					
ANR	6319453	PrimaryExpression	'a'		6318320	1					
ANR	6319454	CompoundStatement		232:24:4661:4661	6318320	1					
ANR	6319455	ExpressionStatement	t = t - 'a' + 10	2140:4:44537:44553	6318320	0	True				
ANR	6319456	AssignmentExpression	t = t - 'a' + 10		6318320	0		=			
ANR	6319457	Identifier	t		6318320	0					
ANR	6319458	AdditiveExpression	t - 'a' + 10		6318320	1		-			
ANR	6319459	Identifier	t		6318320	0					
ANR	6319460	AdditiveExpression	'a' + 10		6318320	1		+			
ANR	6319461	PrimaryExpression	'a'		6318320	0					
ANR	6319462	PrimaryExpression	10		6318320	1					
ANR	6319463	ElseStatement	else		6318320	0					
ANR	6319464	IfStatement	if ( t >= 'A' )		6318320	0					
ANR	6319465	Condition	t >= 'A'	2141:14:44569:44576	6318320	0	True				
ANR	6319466	RelationalExpression	t >= 'A'		6318320	0		>=			
ANR	6319467	Identifier	t		6318320	0					
ANR	6319468	PrimaryExpression	'A'		6318320	1					
ANR	6319469	CompoundStatement		234:24:4709:4709	6318320	1					
ANR	6319470	ExpressionStatement	t = t - 'A' + 10	2142:4:44585:44601	6318320	0	True				
ANR	6319471	AssignmentExpression	t = t - 'A' + 10		6318320	0		=			
ANR	6319472	Identifier	t		6318320	0					
ANR	6319473	AdditiveExpression	t - 'A' + 10		6318320	1		-			
ANR	6319474	Identifier	t		6318320	0					
ANR	6319475	AdditiveExpression	'A' + 10		6318320	1		+			
ANR	6319476	PrimaryExpression	'A'		6318320	0					
ANR	6319477	PrimaryExpression	10		6318320	1					
ANR	6319478	ElseStatement	else		6318320	0					
ANR	6319479	CompoundStatement		236:10:4743:4743	6318320	0					
ANR	6319480	ExpressionStatement	t = t - '0'	2144:4:44619:44630	6318320	0	True				
ANR	6319481	AssignmentExpression	t = t - '0'		6318320	0		=			
ANR	6319482	Identifier	t		6318320	0					
ANR	6319483	AdditiveExpression	t - '0'		6318320	1		-			
ANR	6319484	Identifier	t		6318320	0					
ANR	6319485	PrimaryExpression	'0'		6318320	1					
ANR	6319486	IfStatement	if ( t >= b )		6318320	1					
ANR	6319487	Condition	t >= b	2145:8:44640:44645	6318320	0	True				
ANR	6319488	RelationalExpression	t >= b		6318320	0		>=			
ANR	6319489	Identifier	t		6318320	0					
ANR	6319490	Identifier	b		6318320	1					
ANR	6319491	CompoundStatement		238:16:4778:4778	6318320	1					
ANR	6319492	ExpressionStatement	"tcc_error ( ""invalid digit"" )"	2146:5:44655:44682	6318320	0	True				
ANR	6319493	CallExpression	"tcc_error ( ""invalid digit"" )"		6318320	0					
ANR	6319494	Callee	tcc_error		6318320	0					
ANR	6319495	Identifier	tcc_error		6318320	0					
ANR	6319496	ArgumentList	"""invalid digit"""		6318320	1					
ANR	6319497	Argument	"""invalid digit"""		6318320	0					
ANR	6319498	PrimaryExpression	"""invalid digit"""		6318320	0					
ANR	6319499	ExpressionStatement	n1 = n	2149:3:44698:44704	6318320	2	True				
ANR	6319500	AssignmentExpression	n1 = n		6318320	0		=			
ANR	6319501	Identifier	n1		6318320	0					
ANR	6319502	Identifier	n		6318320	1					
ANR	6319503	ExpressionStatement	n = n * b + t	2150:3:44709:44722	6318320	3	True				
ANR	6319504	AssignmentExpression	n = n * b + t		6318320	0		=			
ANR	6319505	Identifier	n		6318320	0					
ANR	6319506	AdditiveExpression	n * b + t		6318320	1		+			
ANR	6319507	MultiplicativeExpression	n * b		6318320	0		*			
ANR	6319508	Identifier	n		6318320	0					
ANR	6319509	Identifier	b		6318320	1					
ANR	6319510	Identifier	t		6318320	1					
ANR	6319511	IfStatement	if ( n < n1 )		6318320	4					
ANR	6319512	Condition	n < n1	2153:7:44796:44801	6318320	0	True				
ANR	6319513	RelationalExpression	n < n1		6318320	0		<			
ANR	6319514	Identifier	n		6318320	0					
ANR	6319515	Identifier	n1		6318320	1					
ANR	6319516	CompoundStatement		246:15:4934:4934	6318320	1					
ANR	6319517	ExpressionStatement	"tcc_error ( ""integer constant overflow"" )"	2154:4:44810:44849	6318320	0	True				
ANR	6319518	CallExpression	"tcc_error ( ""integer constant overflow"" )"		6318320	0					
ANR	6319519	Callee	tcc_error		6318320	0					
ANR	6319520	Identifier	tcc_error		6318320	0					
ANR	6319521	ArgumentList	"""integer constant overflow"""		6318320	1					
ANR	6319522	Argument	"""integer constant overflow"""		6318320	0					
ANR	6319523	PrimaryExpression	"""integer constant overflow"""		6318320	0					
ANR	6319524	Statement	if	2159:2:44903:44904	6318320	7	True				
ANR	6319525	Statement	(	2159:5:44906:44906	6318320	8	True				
ANR	6319526	Statement	(	2159:6:44907:44907	6318320	9	True				
ANR	6319527	Statement	n	2159:7:44908:44908	6318320	10	True				
ANR	6319528	Statement	&	2159:9:44910:44910	6318320	11	True				
ANR	6319529	Statement	0xffffffff00000000L	2159:11:44912:44930	6318320	12	True				
ANR	6319530	Statement	L	2159:30:44931:44931	6318320	13	True				
ANR	6319531	Statement	)	2159:31:44932:44932	6318320	14	True				
ANR	6319532	Statement	!=	2159:33:44934:44935	6318320	15	True				
ANR	6319533	Statement	0	2159:36:44937:44937	6318320	16	True				
ANR	6319534	Statement	)	2159:37:44938:44938	6318320	17	True				
ANR	6319535	CompoundStatement		252:39:5070:5070	6318320	18					
ANR	6319536	IfStatement	if ( ( n >> 63 ) != 0 )		6318320	0					
ANR	6319537	Condition	( n >> 63 ) != 0	2160:7:44949:44962	6318320	0	True				
ANR	6319538	EqualityExpression	( n >> 63 ) != 0		6318320	0		!=			
ANR	6319539	ShiftExpression	n >> 63		6318320	0		>>			
ANR	6319540	Identifier	n		6318320	0					
ANR	6319541	PrimaryExpression	63		6318320	1					
ANR	6319542	PrimaryExpression	0		6318320	1					
ANR	6319543	CompoundStatement		253:23:5095:5095	6318320	1					
ANR	6319544	ExpressionStatement	tok = TOK_CULLONG	2161:4:44971:44988	6318320	0	True				
ANR	6319545	AssignmentExpression	tok = TOK_CULLONG		6318320	0		=			
ANR	6319546	Identifier	tok		6318320	0					
ANR	6319547	Identifier	TOK_CULLONG		6318320	1					
ANR	6319548	ElseStatement	else		6318320	0					
ANR	6319549	CompoundStatement		255:10:5130:5130	6318320	0					
ANR	6319550	ExpressionStatement	tok = TOK_CLLONG	2163:4:45006:45022	6318320	0	True				
ANR	6319551	AssignmentExpression	tok = TOK_CLLONG		6318320	0		=			
ANR	6319552	Identifier	tok		6318320	0					
ANR	6319553	Identifier	TOK_CLLONG		6318320	1					
ANR	6319554	ExpressionStatement	lcount = 0	2170:2:45116:45126	6318320	19	True				
ANR	6319555	AssignmentExpression	lcount = 0		6318320	0		=			
ANR	6319556	Identifier	lcount		6318320	0					
ANR	6319557	PrimaryExpression	0		6318320	1					
ANR	6319558	ExpressionStatement	ucount = 0	2171:2:45130:45140	6318320	20	True				
ANR	6319559	AssignmentExpression	ucount = 0		6318320	0		=			
ANR	6319560	Identifier	ucount		6318320	0					
ANR	6319561	PrimaryExpression	0		6318320	1					
ANR	6319562	ForStatement	for ( ; ; )		6318320	21					
ANR	6319563	CompoundStatement		265:11:5283:5283	6318320	0					
ANR	6319564	ExpressionStatement	t = toup ( ch )	2173:3:45158:45171	6318320	0	True				
ANR	6319565	AssignmentExpression	t = toup ( ch )		6318320	0		=			
ANR	6319566	Identifier	t		6318320	0					
ANR	6319567	CallExpression	toup ( ch )		6318320	1					
ANR	6319568	Callee	toup		6318320	0					
ANR	6319569	Identifier	toup		6318320	0					
ANR	6319570	ArgumentList	ch		6318320	1					
ANR	6319571	Argument	ch		6318320	0					
ANR	6319572	Identifier	ch		6318320	0					
ANR	6319573	IfStatement	if ( t == 'L' )		6318320	1					
ANR	6319574	Condition	t == 'L'	2174:7:45180:45187	6318320	0	True				
ANR	6319575	EqualityExpression	t == 'L'		6318320	0		==			
ANR	6319576	Identifier	t		6318320	0					
ANR	6319577	PrimaryExpression	'L'		6318320	1					
ANR	6319578	CompoundStatement		267:17:5320:5320	6318320	1					
ANR	6319579	IfStatement	if ( lcount >= 2 )		6318320	0					
ANR	6319580	Condition	lcount >= 2	2175:8:45200:45210	6318320	0	True				
ANR	6319581	RelationalExpression	lcount >= 2		6318320	0		>=			
ANR	6319582	Identifier	lcount		6318320	0					
ANR	6319583	PrimaryExpression	2		6318320	1					
ANR	6319584	CompoundStatement		268:21:5343:5343	6318320	1					
ANR	6319585	ExpressionStatement	"tcc_error ( ""three 'l's in integer constant"" )"	2176:5:45220:45264	6318320	0	True				
ANR	6319586	CallExpression	"tcc_error ( ""three 'l's in integer constant"" )"		6318320	0					
ANR	6319587	Callee	tcc_error		6318320	0					
ANR	6319588	Identifier	tcc_error		6318320	0					
ANR	6319589	ArgumentList	"""three 'l's in integer constant"""		6318320	1					
ANR	6319590	Argument	"""three 'l's in integer constant"""		6318320	0					
ANR	6319591	PrimaryExpression	"""three 'l's in integer constant"""		6318320	0					
ANR	6319592	ExpressionStatement	lcount ++	2178:4:45276:45284	6318320	1	True				
ANR	6319593	PostIncDecOperationExpression	lcount ++		6318320	0					
ANR	6319594	Identifier	lcount		6318320	0					
ANR	6319595	IncDec	++		6318320	1					
ANR	6319596	IfStatement	if ( lcount == 2 )		6318320	2					
ANR	6319597	Condition	lcount == 2	2180:8:45350:45360	6318320	0	True				
ANR	6319598	EqualityExpression	lcount == 2		6318320	0		==			
ANR	6319599	Identifier	lcount		6318320	0					
ANR	6319600	PrimaryExpression	2		6318320	1					
ANR	6319601	CompoundStatement		273:21:5493:5493	6318320	1					
ANR	6319602	IfStatement	if ( tok == TOK_CINT )		6318320	0					
ANR	6319603	Condition	tok == TOK_CINT	2182:8:45380:45394	6318320	0	True				
ANR	6319604	EqualityExpression	tok == TOK_CINT		6318320	0		==			
ANR	6319605	Identifier	tok		6318320	0					
ANR	6319606	Identifier	TOK_CINT		6318320	1					
ANR	6319607	CompoundStatement		275:25:5527:5527	6318320	1					
ANR	6319608	ExpressionStatement	tok = TOK_CLLONG	2183:5:45404:45420	6318320	0	True				
ANR	6319609	AssignmentExpression	tok = TOK_CLLONG		6318320	0		=			
ANR	6319610	Identifier	tok		6318320	0					
ANR	6319611	Identifier	TOK_CLLONG		6318320	1					
ANR	6319612	ElseStatement	else		6318320	0					
ANR	6319613	IfStatement	if ( tok == TOK_CUINT )		6318320	0					
ANR	6319614	Condition	tok == TOK_CUINT	2184:15:45437:45452	6318320	0	True				
ANR	6319615	EqualityExpression	tok == TOK_CUINT		6318320	0		==			
ANR	6319616	Identifier	tok		6318320	0					
ANR	6319617	Identifier	TOK_CUINT		6318320	1					
ANR	6319618	CompoundStatement		277:33:5585:5585	6318320	1					
ANR	6319619	ExpressionStatement	tok = TOK_CULLONG	2185:5:45462:45479	6318320	0	True				
ANR	6319620	AssignmentExpression	tok = TOK_CULLONG		6318320	0		=			
ANR	6319621	Identifier	tok		6318320	0					
ANR	6319622	Identifier	TOK_CULLONG		6318320	1					
ANR	6319623	ExpressionStatement	ch = * p ++	2190:4:45559:45568	6318320	3	True				
ANR	6319624	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319625	Identifier	ch		6318320	0					
ANR	6319626	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319627	UnaryOperator	*		6318320	0					
ANR	6319628	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319629	Identifier	p		6318320	0					
ANR	6319630	IncDec	++		6318320	1					
ANR	6319631	ElseStatement	else		6318320	0					
ANR	6319632	IfStatement	if ( t == 'U' )		6318320	0					
ANR	6319633	Condition	t == 'U'	2191:14:45584:45591	6318320	0	True				
ANR	6319634	EqualityExpression	t == 'U'		6318320	0		==			
ANR	6319635	Identifier	t		6318320	0					
ANR	6319636	PrimaryExpression	'U'		6318320	1					
ANR	6319637	CompoundStatement		284:24:5724:5724	6318320	1					
ANR	6319638	IfStatement	if ( ucount >= 1 )		6318320	0					
ANR	6319639	Condition	ucount >= 1	2192:8:45604:45614	6318320	0	True				
ANR	6319640	RelationalExpression	ucount >= 1		6318320	0		>=			
ANR	6319641	Identifier	ucount		6318320	0					
ANR	6319642	PrimaryExpression	1		6318320	1					
ANR	6319643	CompoundStatement		285:21:5747:5747	6318320	1					
ANR	6319644	ExpressionStatement	"tcc_error ( ""two 'u's in integer constant"" )"	2193:5:45624:45666	6318320	0	True				
ANR	6319645	CallExpression	"tcc_error ( ""two 'u's in integer constant"" )"		6318320	0					
ANR	6319646	Callee	tcc_error		6318320	0					
ANR	6319647	Identifier	tcc_error		6318320	0					
ANR	6319648	ArgumentList	"""two 'u's in integer constant"""		6318320	1					
ANR	6319649	Argument	"""two 'u's in integer constant"""		6318320	0					
ANR	6319650	PrimaryExpression	"""two 'u's in integer constant"""		6318320	0					
ANR	6319651	ExpressionStatement	ucount ++	2195:4:45678:45686	6318320	1	True				
ANR	6319652	PostIncDecOperationExpression	ucount ++		6318320	0					
ANR	6319653	Identifier	ucount		6318320	0					
ANR	6319654	IncDec	++		6318320	1					
ANR	6319655	IfStatement	if ( tok == TOK_CINT )		6318320	2					
ANR	6319656	Condition	tok == TOK_CINT	2196:8:45696:45710	6318320	0	True				
ANR	6319657	EqualityExpression	tok == TOK_CINT		6318320	0		==			
ANR	6319658	Identifier	tok		6318320	0					
ANR	6319659	Identifier	TOK_CINT		6318320	1					
ANR	6319660	CompoundStatement		289:25:5843:5843	6318320	1					
ANR	6319661	ExpressionStatement	tok = TOK_CUINT	2197:5:45720:45735	6318320	0	True				
ANR	6319662	AssignmentExpression	tok = TOK_CUINT		6318320	0		=			
ANR	6319663	Identifier	tok		6318320	0					
ANR	6319664	Identifier	TOK_CUINT		6318320	1					
ANR	6319665	ElseStatement	else		6318320	0					
ANR	6319666	IfStatement	if ( tok == TOK_CLLONG )		6318320	0					
ANR	6319667	Condition	tok == TOK_CLLONG	2198:15:45752:45768	6318320	0	True				
ANR	6319668	EqualityExpression	tok == TOK_CLLONG		6318320	0		==			
ANR	6319669	Identifier	tok		6318320	0					
ANR	6319670	Identifier	TOK_CLLONG		6318320	1					
ANR	6319671	CompoundStatement		291:34:5901:5901	6318320	1					
ANR	6319672	ExpressionStatement	tok = TOK_CULLONG	2199:5:45778:45795	6318320	0	True				
ANR	6319673	AssignmentExpression	tok = TOK_CULLONG		6318320	0		=			
ANR	6319674	Identifier	tok		6318320	0					
ANR	6319675	Identifier	TOK_CULLONG		6318320	1					
ANR	6319676	ExpressionStatement	ch = * p ++	2201:4:45807:45816	6318320	3	True				
ANR	6319677	AssignmentExpression	ch = * p ++		6318320	0		=			
ANR	6319678	Identifier	ch		6318320	0					
ANR	6319679	UnaryOperationExpression	* p ++		6318320	1					
ANR	6319680	UnaryOperator	*		6318320	0					
ANR	6319681	PostIncDecOperationExpression	p ++		6318320	1					
ANR	6319682	Identifier	p		6318320	0					
ANR	6319683	IncDec	++		6318320	1					
ANR	6319684	ElseStatement	else		6318320	0					
ANR	6319685	CompoundStatement		295:10:5958:5958	6318320	0					
ANR	6319686	BreakStatement	break ;	2203:4:45834:45839	6318320	0	True				
ANR	6319687	IfStatement	if ( tok == TOK_CINT || tok == TOK_CUINT )		6318320	22					
ANR	6319688	Condition	tok == TOK_CINT || tok == TOK_CUINT	2206:6:45856:45890	6318320	0	True				
ANR	6319689	OrExpression	tok == TOK_CINT || tok == TOK_CUINT		6318320	0		||			
ANR	6319690	EqualityExpression	tok == TOK_CINT		6318320	0		==			
ANR	6319691	Identifier	tok		6318320	0					
ANR	6319692	Identifier	TOK_CINT		6318320	1					
ANR	6319693	EqualityExpression	tok == TOK_CUINT		6318320	1		==			
ANR	6319694	Identifier	tok		6318320	0					
ANR	6319695	Identifier	TOK_CUINT		6318320	1					
ANR	6319696	CompoundStatement		299:43:6023:6023	6318320	1					
ANR	6319697	ExpressionStatement	tokc . ui = n	2207:3:45898:45909	6318320	0	True				
ANR	6319698	AssignmentExpression	tokc . ui = n		6318320	0		=			
ANR	6319699	MemberAccess	tokc . ui		6318320	0					
ANR	6319700	Identifier	tokc		6318320	0					
ANR	6319701	Identifier	ui		6318320	1					
ANR	6319702	Identifier	n		6318320	1					
ANR	6319703	ElseStatement	else		6318320	0					
ANR	6319704	CompoundStatement		301:9:6050:6050	6318320	0					
ANR	6319705	ExpressionStatement	tokc . ull = n	2209:3:45925:45937	6318320	0	True				
ANR	6319706	AssignmentExpression	tokc . ull = n		6318320	0		=			
ANR	6319707	MemberAccess	tokc . ull		6318320	0					
ANR	6319708	Identifier	tokc		6318320	0					
ANR	6319709	Identifier	ull		6318320	1					
ANR	6319710	Identifier	n		6318320	1					
ANR	6319711	IfStatement	if ( ch )		6318320	13					
ANR	6319712	Condition	ch	2212:5:45951:45952	6318320	0	True				
ANR	6319713	Identifier	ch		6318320	0					
ANR	6319714	CompoundStatement		305:9:6085:6085	6318320	1					
ANR	6319715	ExpressionStatement	"tcc_error ( ""invalid number\\n"" )"	2213:2:45959:45989	6318320	0	True				
ANR	6319716	CallExpression	"tcc_error ( ""invalid number\\n"" )"		6318320	0					
ANR	6319717	Callee	tcc_error		6318320	0					
ANR	6319718	Identifier	tcc_error		6318320	0					
ANR	6319719	ArgumentList	"""invalid number\\n"""		6318320	1					
ANR	6319720	Argument	"""invalid number\\n"""		6318320	0					
ANR	6319721	PrimaryExpression	"""invalid number\\n"""		6318320	0					
ANR	6319722	ReturnType	static void		6318320	1					
ANR	6319723	Identifier	parse_number		6318320	2					
ANR	6319724	ParameterList	const char * p		6318320	3					
ANR	6319725	Parameter	const char * p	1907:25:39854:39866	6318320	0	True				
ANR	6319726	ParameterType	const char *		6318320	0					
ANR	6319727	Identifier	p		6318320	1					
ANR	6319728	CFGEntryNode	ENTRY		6318320		True				
ANR	6319729	CFGExitNode	EXIT		6318320		True				
ANR	6319730	InfiniteForNode	true		6318320		True				
ANR	6319731	Symbol	n1		6318320						
ANR	6319732	Symbol	ldexp		6318320						
ANR	6319733	Symbol	shift		6318320						
ANR	6319734	Symbol	* q ++		6318320						
ANR	6319735	Symbol	bn		6318320						
ANR	6319736	Symbol	exp_val		6318320						
ANR	6319737	Symbol	* bn		6318320						
ANR	6319738	Symbol	tok		6318320						
ANR	6319739	Symbol	tokc . d		6318320						
ANR	6319740	Symbol	lcount		6318320						
ANR	6319741	Symbol	TOK_CLLONG		6318320						
ANR	6319742	Symbol	tokc . f		6318320						
ANR	6319743	Symbol	tcc_ext		6318320						
ANR	6319744	Symbol	tokc . ui		6318320						
ANR	6319745	Symbol	TOK_CUINT		6318320						
ANR	6319746	Symbol	TOK_CDOUBLE		6318320						
ANR	6319747	Symbol	token_buf		6318320						
ANR	6319748	Symbol	TOK_CINT		6318320						
ANR	6319749	Symbol	toup		6318320						
ANR	6319750	Symbol	isnum		6318320						
ANR	6319751	Symbol	b		6318320						
ANR	6319752	Symbol	errno		6318320						
ANR	6319753	Symbol	NULL		6318320						
ANR	6319754	Symbol	d		6318320						
ANR	6319755	Symbol	ch		6318320						
ANR	6319756	Symbol	tokc		6318320						
ANR	6319757	Symbol	* p ++		6318320						
ANR	6319758	Symbol	frac_bits		6318320						
ANR	6319759	Symbol	strtod		6318320						
ANR	6319760	Symbol	n		6318320						
ANR	6319761	Symbol	strtof		6318320						
ANR	6319762	Symbol	p		6318320						
ANR	6319763	Symbol	q		6318320						
ANR	6319764	Symbol	s		6318320						
ANR	6319765	Symbol	t		6318320						
ANR	6319766	Symbol	ucount		6318320						
ANR	6319767	Symbol	TOK_CULLONG		6318320						
ANR	6319768	Symbol	TOK_CFLOAT		6318320						
ANR	6319769	Symbol	* q		6318320						
ANR	6319770	Symbol	tokc . ull		6318320						
ANR	6319771	Symbol	STRING_MAX_SIZE		6318320						
ANR	6319772	Function	next_nomacro1	2230:0:46206:54649							
ANR	6319773	FunctionDef	next_nomacro1 ()		6319772	0					
ANR	6319774	CompoundStatement		2231:0:46245:54649	6319772	0					
ANR	6319775	IdentifierDeclStatement	"int t , c , is_long ;"	2232:1:46248:46265	6319772	0	True				
ANR	6319776	IdentifierDecl	t		6319772	0					
ANR	6319777	IdentifierDeclType	int		6319772	0					
ANR	6319778	Identifier	t		6319772	1					
ANR	6319779	IdentifierDecl	c		6319772	1					
ANR	6319780	IdentifierDeclType	int		6319772	0					
ANR	6319781	Identifier	c		6319772	1					
ANR	6319782	IdentifierDecl	is_long		6319772	2					
ANR	6319783	IdentifierDeclType	int		6319772	0					
ANR	6319784	Identifier	is_long		6319772	1					
ANR	6319785	IdentifierDeclStatement	TokenSym * ts ;	2233:1:46268:46280	6319772	1	True				
ANR	6319786	IdentifierDecl	* ts		6319772	0					
ANR	6319787	IdentifierDeclType	TokenSym *		6319772	0					
ANR	6319788	Identifier	ts		6319772	1					
ANR	6319789	IdentifierDeclStatement	"uint8_t * p , * p1 ;"	2234:1:46283:46298	6319772	2	True				
ANR	6319790	IdentifierDecl	* p		6319772	0					
ANR	6319791	IdentifierDeclType	uint8_t *		6319772	0					
ANR	6319792	Identifier	p		6319772	1					
ANR	6319793	IdentifierDecl	* p1		6319772	1					
ANR	6319794	IdentifierDeclType	uint8_t *		6319772	0					
ANR	6319795	Identifier	p1		6319772	1					
ANR	6319796	IdentifierDeclStatement	unsigned int h ;	2235:1:46301:46315	6319772	3	True				
ANR	6319797	IdentifierDecl	h		6319772	0					
ANR	6319798	IdentifierDeclType	unsigned int		6319772	0					
ANR	6319799	Identifier	h		6319772	1					
ANR	6319800	ExpressionStatement	p = file -> buf_ptr	2237:1:46319:46336	6319772	4	True				
ANR	6319801	AssignmentExpression	p = file -> buf_ptr		6319772	0		=			
ANR	6319802	Identifier	p		6319772	0					
ANR	6319803	PtrMemberAccess	file -> buf_ptr		6319772	1					
ANR	6319804	Identifier	file		6319772	0					
ANR	6319805	Identifier	buf_ptr		6319772	1					
ANR	6319806	Label	redo_no_start :	2238:0:46338:46351	6319772	5	True				
ANR	6319807	Identifier	redo_no_start		6319772	0					
ANR	6319808	ExpressionStatement	c = * p	2239:1:46354:46360	6319772	6	True				
ANR	6319809	AssignmentExpression	c = * p		6319772	0		=			
ANR	6319810	Identifier	c		6319772	0					
ANR	6319811	UnaryOperationExpression	* p		6319772	1					
ANR	6319812	UnaryOperator	*		6319772	0					
ANR	6319813	Identifier	p		6319772	1					
ANR	6319814	SwitchStatement	switch ( c )		6319772	7					
ANR	6319815	Condition	c	2240:9:46371:46371	6319772	0	True				
ANR	6319816	Identifier	c		6319772	0					
ANR	6319817	CompoundStatement		10:12:128:128	6319772	1					
ANR	6319818	Label	case ' ' :	2241:1:46377:46385	6319772	0	True				
ANR	6319819	Label	case '\\t' :	2242:1:46388:46397	6319772	1	True				
ANR	6319820	ExpressionStatement	tok = c	2243:2:46401:46408	6319772	2	True				
ANR	6319821	AssignmentExpression	tok = c		6319772	0		=			
ANR	6319822	Identifier	tok		6319772	0					
ANR	6319823	Identifier	c		6319772	1					
ANR	6319824	ExpressionStatement	p ++	2244:2:46412:46415	6319772	3	True				
ANR	6319825	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6319826	Identifier	p		6319772	0					
ANR	6319827	IncDec	++		6319772	1					
ANR	6319828	GotoStatement	goto keep_tok_flags ;	2245:2:46419:46438	6319772	4	True				
ANR	6319829	Identifier	keep_tok_flags		6319772	0					
ANR	6319830	Label	case '\\f' :	2246:1:46441:46450	6319772	5	True				
ANR	6319831	Label	case '\\v' :	2247:1:46453:46462	6319772	6	True				
ANR	6319832	Label	case '\\r' :	2248:1:46465:46474	6319772	7	True				
ANR	6319833	ExpressionStatement	p ++	2249:2:46478:46481	6319772	8	True				
ANR	6319834	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6319835	Identifier	p		6319772	0					
ANR	6319836	IncDec	++		6319772	1					
ANR	6319837	GotoStatement	goto redo_no_start ;	2250:2:46485:46503	6319772	9	True				
ANR	6319838	Identifier	redo_no_start		6319772	0					
ANR	6319839	Label	case '\\\\' :	2251:1:46506:46515	6319772	10	True				
ANR	6319840	IfStatement	if ( p >= file -> buf_end )		6319772	11					
ANR	6319841	Condition	p >= file -> buf_end	2253:6:46576:46593	6319772	0	True				
ANR	6319842	RelationalExpression	p >= file -> buf_end		6319772	0		>=			
ANR	6319843	Identifier	p		6319772	0					
ANR	6319844	PtrMemberAccess	file -> buf_end		6319772	1					
ANR	6319845	Identifier	file		6319772	0					
ANR	6319846	Identifier	buf_end		6319772	1					
ANR	6319847	CompoundStatement		23:26:350:350	6319772	1					
ANR	6319848	ExpressionStatement	file -> buf_ptr = p	2254:3:46601:46618	6319772	0	True				
ANR	6319849	AssignmentExpression	file -> buf_ptr = p		6319772	0		=			
ANR	6319850	PtrMemberAccess	file -> buf_ptr		6319772	0					
ANR	6319851	Identifier	file		6319772	0					
ANR	6319852	Identifier	buf_ptr		6319772	1					
ANR	6319853	Identifier	p		6319772	1					
ANR	6319854	ExpressionStatement	handle_eob ( )	2255:3:46623:46636	6319772	1	True				
ANR	6319855	CallExpression	handle_eob ( )		6319772	0					
ANR	6319856	Callee	handle_eob		6319772	0					
ANR	6319857	Identifier	handle_eob		6319772	0					
ANR	6319858	ArgumentList			6319772	1					
ANR	6319859	ExpressionStatement	p = file -> buf_ptr	2256:3:46641:46658	6319772	2	True				
ANR	6319860	AssignmentExpression	p = file -> buf_ptr		6319772	0		=			
ANR	6319861	Identifier	p		6319772	0					
ANR	6319862	PtrMemberAccess	file -> buf_ptr		6319772	1					
ANR	6319863	Identifier	file		6319772	0					
ANR	6319864	Identifier	buf_ptr		6319772	1					
ANR	6319865	IfStatement	if ( p >= file -> buf_end )		6319772	3					
ANR	6319866	Condition	p >= file -> buf_end	2257:7:46667:46684	6319772	0	True				
ANR	6319867	RelationalExpression	p >= file -> buf_end		6319772	0		>=			
ANR	6319868	Identifier	p		6319772	0					
ANR	6319869	PtrMemberAccess	file -> buf_end		6319772	1					
ANR	6319870	Identifier	file		6319772	0					
ANR	6319871	Identifier	buf_end		6319772	1					
ANR	6319872	CompoundStatement		27:27:441:441	6319772	1					
ANR	6319873	GotoStatement	goto parse_eof ;	2258:4:46693:46707	6319772	0	True				
ANR	6319874	Identifier	parse_eof		6319772	0					
ANR	6319875	ElseStatement	else		6319772	0					
ANR	6319876	CompoundStatement		29:10:473:473	6319772	0					
ANR	6319877	GotoStatement	goto redo_no_start ;	2260:4:46725:46743	6319772	0	True				
ANR	6319878	Identifier	redo_no_start		6319772	0					
ANR	6319879	ElseStatement	else		6319772	0					
ANR	6319880	CompoundStatement		32:9:513:513	6319772	0					
ANR	6319881	ExpressionStatement	file -> buf_ptr = p	2263:3:46764:46781	6319772	0	True				
ANR	6319882	AssignmentExpression	file -> buf_ptr = p		6319772	0		=			
ANR	6319883	PtrMemberAccess	file -> buf_ptr		6319772	0					
ANR	6319884	Identifier	file		6319772	0					
ANR	6319885	Identifier	buf_ptr		6319772	1					
ANR	6319886	Identifier	p		6319772	1					
ANR	6319887	ExpressionStatement	ch = * p	2264:3:46786:46793	6319772	1	True				
ANR	6319888	AssignmentExpression	ch = * p		6319772	0		=			
ANR	6319889	Identifier	ch		6319772	0					
ANR	6319890	UnaryOperationExpression	* p		6319772	1					
ANR	6319891	UnaryOperator	*		6319772	0					
ANR	6319892	Identifier	p		6319772	1					
ANR	6319893	ExpressionStatement	handle_stray ( )	2265:3:46798:46813	6319772	2	True				
ANR	6319894	CallExpression	handle_stray ( )		6319772	0					
ANR	6319895	Callee	handle_stray		6319772	0					
ANR	6319896	Identifier	handle_stray		6319772	0					
ANR	6319897	ArgumentList			6319772	1					
ANR	6319898	ExpressionStatement	p = file -> buf_ptr	2266:3:46818:46835	6319772	3	True				
ANR	6319899	AssignmentExpression	p = file -> buf_ptr		6319772	0		=			
ANR	6319900	Identifier	p		6319772	0					
ANR	6319901	PtrMemberAccess	file -> buf_ptr		6319772	1					
ANR	6319902	Identifier	file		6319772	0					
ANR	6319903	Identifier	buf_ptr		6319772	1					
ANR	6319904	GotoStatement	goto redo_no_start ;	2267:3:46840:46858	6319772	4	True				
ANR	6319905	Identifier	redo_no_start		6319772	0					
ANR	6319906	Label	parse_eof :	2269:0:46864:46873	6319772	12	True				
ANR	6319907	Identifier	parse_eof		6319772	0					
ANR	6319908	CompoundStatement		41:3:636:660	6319772	13					
ANR	6319909	IdentifierDeclStatement	TCCState * s1 = tcc_state ;	2271:3:46882:46906	6319772	0	True				
ANR	6319910	IdentifierDecl	* s1 = tcc_state		6319772	0					
ANR	6319911	IdentifierDeclType	TCCState *		6319772	0					
ANR	6319912	Identifier	s1		6319772	1					
ANR	6319913	AssignmentExpression	* s1 = tcc_state		6319772	2		=			
ANR	6319914	Identifier	tcc_state		6319772	0					
ANR	6319915	Identifier	tcc_state		6319772	1					
ANR	6319916	IfStatement	if ( ( parse_flags & PARSE_FLAG_LINEFEED ) && ! ( tok_flags & TOK_FLAG_EOF ) )		6319772	1					
ANR	6319917	Condition	( parse_flags & PARSE_FLAG_LINEFEED ) && ! ( tok_flags & TOK_FLAG_EOF )	2272:7:46915:46987	6319772	0	True				
ANR	6319918	AndExpression	( parse_flags & PARSE_FLAG_LINEFEED ) && ! ( tok_flags & TOK_FLAG_EOF )		6319772	0		&&			
ANR	6319919	BitAndExpression	parse_flags & PARSE_FLAG_LINEFEED		6319772	0		&			
ANR	6319920	Identifier	parse_flags		6319772	0					
ANR	6319921	Identifier	PARSE_FLAG_LINEFEED		6319772	1					
ANR	6319922	UnaryOperationExpression	! ( tok_flags & TOK_FLAG_EOF )		6319772	1					
ANR	6319923	UnaryOperator	!		6319772	0					
ANR	6319924	BitAndExpression	tok_flags & TOK_FLAG_EOF		6319772	1		&			
ANR	6319925	Identifier	tok_flags		6319772	0					
ANR	6319926	Identifier	TOK_FLAG_EOF		6319772	1					
ANR	6319927	CompoundStatement		43:39:744:744	6319772	1					
ANR	6319928	ExpressionStatement	tok_flags |= TOK_FLAG_EOF	2274:4:46996:47021	6319772	0	True				
ANR	6319929	AssignmentExpression	tok_flags |= TOK_FLAG_EOF		6319772	0		|=			
ANR	6319930	Identifier	tok_flags		6319772	0					
ANR	6319931	Identifier	TOK_FLAG_EOF		6319772	1					
ANR	6319932	ExpressionStatement	tok = TOK_LINEFEED	2275:4:47027:47045	6319772	1	True				
ANR	6319933	AssignmentExpression	tok = TOK_LINEFEED		6319772	0		=			
ANR	6319934	Identifier	tok		6319772	0					
ANR	6319935	Identifier	TOK_LINEFEED		6319772	1					
ANR	6319936	GotoStatement	goto keep_tok_flags ;	2276:4:47051:47070	6319772	2	True				
ANR	6319937	Identifier	keep_tok_flags		6319772	0					
ANR	6319938	ElseStatement	else		6319772	0					
ANR	6319939	IfStatement	if ( ! ( parse_flags & PARSE_FLAG_PREPROCESS ) )		6319772	0					
ANR	6319940	Condition	! ( parse_flags & PARSE_FLAG_PREPROCESS )	2277:14:47086:47123	6319772	0	True				
ANR	6319941	UnaryOperationExpression	! ( parse_flags & PARSE_FLAG_PREPROCESS )		6319772	0					
ANR	6319942	UnaryOperator	!		6319772	0					
ANR	6319943	BitAndExpression	parse_flags & PARSE_FLAG_PREPROCESS		6319772	1		&			
ANR	6319944	Identifier	parse_flags		6319772	0					
ANR	6319945	Identifier	PARSE_FLAG_PREPROCESS		6319772	1					
ANR	6319946	CompoundStatement		47:54:880:880	6319772	1					
ANR	6319947	ExpressionStatement	tok = TOK_EOF	2278:4:47132:47145	6319772	0	True				
ANR	6319948	AssignmentExpression	tok = TOK_EOF		6319772	0		=			
ANR	6319949	Identifier	tok		6319772	0					
ANR	6319950	Identifier	TOK_EOF		6319772	1					
ANR	6319951	ElseStatement	else		6319772	0					
ANR	6319952	IfStatement	if ( s1 -> ifdef_stack_ptr != file -> ifdef_stack_ptr )		6319772	0					
ANR	6319953	Condition	s1 -> ifdef_stack_ptr != file -> ifdef_stack_ptr	2279:14:47161:47204	6319772	0	True				
ANR	6319954	EqualityExpression	s1 -> ifdef_stack_ptr != file -> ifdef_stack_ptr		6319772	0		!=			
ANR	6319955	PtrMemberAccess	s1 -> ifdef_stack_ptr		6319772	0					
ANR	6319956	Identifier	s1		6319772	0					
ANR	6319957	Identifier	ifdef_stack_ptr		6319772	1					
ANR	6319958	PtrMemberAccess	file -> ifdef_stack_ptr		6319772	1					
ANR	6319959	Identifier	file		6319772	0					
ANR	6319960	Identifier	ifdef_stack_ptr		6319772	1					
ANR	6319961	CompoundStatement		49:60:961:961	6319772	1					
ANR	6319962	ExpressionStatement	"tcc_error ( ""missing #endif"" )"	2280:4:47213:47241	6319772	0	True				
ANR	6319963	CallExpression	"tcc_error ( ""missing #endif"" )"		6319772	0					
ANR	6319964	Callee	tcc_error		6319772	0					
ANR	6319965	Identifier	tcc_error		6319772	0					
ANR	6319966	ArgumentList	"""missing #endif"""		6319772	1					
ANR	6319967	Argument	"""missing #endif"""		6319772	0					
ANR	6319968	PrimaryExpression	"""missing #endif"""		6319772	0					
ANR	6319969	ElseStatement	else		6319772	0					
ANR	6319970	IfStatement	if ( s1 -> include_stack_ptr == s1 -> include_stack )		6319772	0					
ANR	6319971	Condition	s1 -> include_stack_ptr == s1 -> include_stack	2281:14:47257:47298	6319772	0	True				
ANR	6319972	EqualityExpression	s1 -> include_stack_ptr == s1 -> include_stack		6319772	0		==			
ANR	6319973	PtrMemberAccess	s1 -> include_stack_ptr		6319772	0					
ANR	6319974	Identifier	s1		6319772	0					
ANR	6319975	Identifier	include_stack_ptr		6319772	1					
ANR	6319976	PtrMemberAccess	s1 -> include_stack		6319772	1					
ANR	6319977	Identifier	s1		6319772	0					
ANR	6319978	Identifier	include_stack		6319772	1					
ANR	6319979	CompoundStatement		51:58:1055:1055	6319772	1					
ANR	6319980	ExpressionStatement	tok = TOK_EOF	2283:4:47348:47361	6319772	0	True				
ANR	6319981	AssignmentExpression	tok = TOK_EOF		6319772	0		=			
ANR	6319982	Identifier	tok		6319772	0					
ANR	6319983	Identifier	TOK_EOF		6319772	1					
ANR	6319984	ElseStatement	else		6319772	0					
ANR	6319985	CompoundStatement		54:10:1127:1127	6319772	0					
ANR	6319986	ExpressionStatement	tok_flags &= ~TOK_FLAG_EOF	2285:4:47379:47405	6319772	0	True				
ANR	6319987	AssignmentExpression	tok_flags &= ~TOK_FLAG_EOF		6319772	0		&=			
ANR	6319988	Identifier	tok_flags		6319772	0					
ANR	6319989	Identifier	~TOK_FLAG_EOF		6319772	1					
ANR	6319990	IfStatement	if ( tok_flags & TOK_FLAG_ENDIF )		6319772	1					
ANR	6319991	Condition	tok_flags & TOK_FLAG_ENDIF	2290:8:47522:47547	6319772	0	True				
ANR	6319992	BitAndExpression	tok_flags & TOK_FLAG_ENDIF		6319772	0		&			
ANR	6319993	Identifier	tok_flags		6319772	0					
ANR	6319994	Identifier	TOK_FLAG_ENDIF		6319772	1					
ANR	6319995	CompoundStatement		60:36:1304:1304	6319772	1					
ANR	6319996	ExpressionStatement	"printf ( ""#endif %s\\n"" , get_tok_str ( file -> ifndef_macro_saved , NULL ) )"	2292:5:47574:47642	6319772	0	True				
ANR	6319997	CallExpression	"printf ( ""#endif %s\\n"" , get_tok_str ( file -> ifndef_macro_saved , NULL ) )"		6319772	0					
ANR	6319998	Callee	printf		6319772	0					
ANR	6319999	Identifier	printf		6319772	0					
ANR	6320000	ArgumentList	"""#endif %s\\n"""		6319772	1					
ANR	6320001	Argument	"""#endif %s\\n"""		6319772	0					
ANR	6320002	PrimaryExpression	"""#endif %s\\n"""		6319772	0					
ANR	6320003	Argument	"get_tok_str ( file -> ifndef_macro_saved , NULL )"		6319772	1					
ANR	6320004	CallExpression	"get_tok_str ( file -> ifndef_macro_saved , NULL )"		6319772	0					
ANR	6320005	Callee	get_tok_str		6319772	0					
ANR	6320006	Identifier	get_tok_str		6319772	0					
ANR	6320007	ArgumentList	file -> ifndef_macro_saved		6319772	1					
ANR	6320008	Argument	file -> ifndef_macro_saved		6319772	0					
ANR	6320009	PtrMemberAccess	file -> ifndef_macro_saved		6319772	0					
ANR	6320010	Identifier	file		6319772	0					
ANR	6320011	Identifier	ifndef_macro_saved		6319772	1					
ANR	6320012	Argument	NULL		6319772	1					
ANR	6320013	Identifier	NULL		6319772	0					
ANR	6320014	ExpressionStatement	"add_cached_include ( s1 , file -> filename , file -> ifndef_macro_saved )"	2294:5:47656:47721	6319772	1	True				
ANR	6320015	CallExpression	"add_cached_include ( s1 , file -> filename , file -> ifndef_macro_saved )"		6319772	0					
ANR	6320016	Callee	add_cached_include		6319772	0					
ANR	6320017	Identifier	add_cached_include		6319772	0					
ANR	6320018	ArgumentList	s1		6319772	1					
ANR	6320019	Argument	s1		6319772	0					
ANR	6320020	Identifier	s1		6319772	0					
ANR	6320021	Argument	file -> filename		6319772	1					
ANR	6320022	PtrMemberAccess	file -> filename		6319772	0					
ANR	6320023	Identifier	file		6319772	0					
ANR	6320024	Identifier	filename		6319772	1					
ANR	6320025	Argument	file -> ifndef_macro_saved		6319772	2					
ANR	6320026	PtrMemberAccess	file -> ifndef_macro_saved		6319772	0					
ANR	6320027	Identifier	file		6319772	0					
ANR	6320028	Identifier	ifndef_macro_saved		6319772	1					
ANR	6320029	ExpressionStatement	tok_flags &= ~TOK_FLAG_ENDIF	2295:5:47728:47756	6319772	2	True				
ANR	6320030	AssignmentExpression	tok_flags &= ~TOK_FLAG_ENDIF		6319772	0		&=			
ANR	6320031	Identifier	tok_flags		6319772	0					
ANR	6320032	Identifier	~TOK_FLAG_ENDIF		6319772	1					
ANR	6320033	ExpressionStatement	tcc_close ( )	2299:4:47797:47809	6319772	2	True				
ANR	6320034	CallExpression	tcc_close ( )		6319772	0					
ANR	6320035	Callee	tcc_close		6319772	0					
ANR	6320036	Identifier	tcc_close		6319772	0					
ANR	6320037	ArgumentList			6319772	1					
ANR	6320038	ExpressionStatement	s1 -> include_stack_ptr --	2300:4:47815:47838	6319772	3	True				
ANR	6320039	PostIncDecOperationExpression	s1 -> include_stack_ptr --		6319772	0					
ANR	6320040	PtrMemberAccess	s1 -> include_stack_ptr		6319772	0					
ANR	6320041	Identifier	s1		6319772	0					
ANR	6320042	Identifier	include_stack_ptr		6319772	1					
ANR	6320043	IncDec	--		6319772	1					
ANR	6320044	ExpressionStatement	p = file -> buf_ptr	2301:4:47844:47861	6319772	4	True				
ANR	6320045	AssignmentExpression	p = file -> buf_ptr		6319772	0		=			
ANR	6320046	Identifier	p		6319772	0					
ANR	6320047	PtrMemberAccess	file -> buf_ptr		6319772	1					
ANR	6320048	Identifier	file		6319772	0					
ANR	6320049	Identifier	buf_ptr		6319772	1					
ANR	6320050	GotoStatement	goto redo_no_start ;	2302:4:47867:47885	6319772	5	True				
ANR	6320051	Identifier	redo_no_start		6319772	0					
ANR	6320052	BreakStatement	break ;	2305:2:47898:47903	6319772	14	True				
ANR	6320053	Label	case '\\n' :	2307:1:47907:47916	6319772	15	True				
ANR	6320054	ExpressionStatement	file -> line_num ++	2308:2:47920:47936	6319772	16	True				
ANR	6320055	PostIncDecOperationExpression	file -> line_num ++		6319772	0					
ANR	6320056	PtrMemberAccess	file -> line_num		6319772	0					
ANR	6320057	Identifier	file		6319772	0					
ANR	6320058	Identifier	line_num		6319772	1					
ANR	6320059	IncDec	++		6319772	1					
ANR	6320060	ExpressionStatement	tok_flags |= TOK_FLAG_BOL	2309:2:47940:47965	6319772	17	True				
ANR	6320061	AssignmentExpression	tok_flags |= TOK_FLAG_BOL		6319772	0		|=			
ANR	6320062	Identifier	tok_flags		6319772	0					
ANR	6320063	Identifier	TOK_FLAG_BOL		6319772	1					
ANR	6320064	ExpressionStatement	p ++	2310:2:47969:47972	6319772	18	True				
ANR	6320065	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6320066	Identifier	p		6319772	0					
ANR	6320067	IncDec	++		6319772	1					
ANR	6320068	Label	maybe_newline :	2311:0:47974:47987	6319772	19	True				
ANR	6320069	Identifier	maybe_newline		6319772	0					
ANR	6320070	IfStatement	if ( 0 == ( parse_flags & PARSE_FLAG_LINEFEED ) )		6319772	20					
ANR	6320071	Condition	0 == ( parse_flags & PARSE_FLAG_LINEFEED )	2312:6:47995:48034	6319772	0	True				
ANR	6320072	EqualityExpression	0 == ( parse_flags & PARSE_FLAG_LINEFEED )		6319772	0		==			
ANR	6320073	PrimaryExpression	0		6319772	0					
ANR	6320074	BitAndExpression	parse_flags & PARSE_FLAG_LINEFEED		6319772	1		&			
ANR	6320075	Identifier	parse_flags		6319772	0					
ANR	6320076	Identifier	PARSE_FLAG_LINEFEED		6319772	1					
ANR	6320077	CompoundStatement		82:48:1791:1791	6319772	1					
ANR	6320078	GotoStatement	goto redo_no_start ;	2313:3:48042:48060	6319772	0	True				
ANR	6320079	Identifier	redo_no_start		6319772	0					
ANR	6320080	ExpressionStatement	tok = TOK_LINEFEED	2315:2:48068:48086	6319772	21	True				
ANR	6320081	AssignmentExpression	tok = TOK_LINEFEED		6319772	0		=			
ANR	6320082	Identifier	tok		6319772	0					
ANR	6320083	Identifier	TOK_LINEFEED		6319772	1					
ANR	6320084	GotoStatement	goto keep_tok_flags ;	2316:2:48090:48109	6319772	22	True				
ANR	6320085	Identifier	keep_tok_flags		6319772	0					
ANR	6320086	Label	case '#' :	2318:1:48113:48121	6319772	23	True				
ANR	6320087	ExpressionStatement	"PEEKC ( c , p )"	2320:2:48147:48159	6319772	24	True				
ANR	6320088	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320089	Callee	PEEKC		6319772	0					
ANR	6320090	Identifier	PEEKC		6319772	0					
ANR	6320091	ArgumentList	c		6319772	1					
ANR	6320092	Argument	c		6319772	0					
ANR	6320093	Identifier	c		6319772	0					
ANR	6320094	Argument	p		6319772	1					
ANR	6320095	Identifier	p		6319772	0					
ANR	6320096	IfStatement	if ( ( tok_flags & TOK_FLAG_BOL ) && ( parse_flags & PARSE_FLAG_PREPROCESS ) )		6319772	25					
ANR	6320097	Condition	( tok_flags & TOK_FLAG_BOL ) && ( parse_flags & PARSE_FLAG_PREPROCESS )	2321:6:48167:48239	6319772	0	True				
ANR	6320098	AndExpression	( tok_flags & TOK_FLAG_BOL ) && ( parse_flags & PARSE_FLAG_PREPROCESS )		6319772	0		&&			
ANR	6320099	BitAndExpression	tok_flags & TOK_FLAG_BOL		6319772	0		&			
ANR	6320100	Identifier	tok_flags		6319772	0					
ANR	6320101	Identifier	TOK_FLAG_BOL		6319772	1					
ANR	6320102	BitAndExpression	parse_flags & PARSE_FLAG_PREPROCESS		6319772	1		&			
ANR	6320103	Identifier	parse_flags		6319772	0					
ANR	6320104	Identifier	PARSE_FLAG_PREPROCESS		6319772	1					
ANR	6320105	CompoundStatement		92:45:1996:1996	6319772	1					
ANR	6320106	ExpressionStatement	file -> buf_ptr = p	2323:3:48247:48264	6319772	0	True				
ANR	6320107	AssignmentExpression	file -> buf_ptr = p		6319772	0		=			
ANR	6320108	PtrMemberAccess	file -> buf_ptr		6319772	0					
ANR	6320109	Identifier	file		6319772	0					
ANR	6320110	Identifier	buf_ptr		6319772	1					
ANR	6320111	Identifier	p		6319772	1					
ANR	6320112	ExpressionStatement	preprocess ( tok_flags & TOK_FLAG_BOF )	2324:3:48269:48306	6319772	1	True				
ANR	6320113	CallExpression	preprocess ( tok_flags & TOK_FLAG_BOF )		6319772	0					
ANR	6320114	Callee	preprocess		6319772	0					
ANR	6320115	Identifier	preprocess		6319772	0					
ANR	6320116	ArgumentList	tok_flags & TOK_FLAG_BOF		6319772	1					
ANR	6320117	Argument	tok_flags & TOK_FLAG_BOF		6319772	0					
ANR	6320118	BitAndExpression	tok_flags & TOK_FLAG_BOF		6319772	0		&			
ANR	6320119	Identifier	tok_flags		6319772	0					
ANR	6320120	Identifier	TOK_FLAG_BOF		6319772	1					
ANR	6320121	ExpressionStatement	p = file -> buf_ptr	2325:3:48311:48328	6319772	2	True				
ANR	6320122	AssignmentExpression	p = file -> buf_ptr		6319772	0		=			
ANR	6320123	Identifier	p		6319772	0					
ANR	6320124	PtrMemberAccess	file -> buf_ptr		6319772	1					
ANR	6320125	Identifier	file		6319772	0					
ANR	6320126	Identifier	buf_ptr		6319772	1					
ANR	6320127	GotoStatement	goto maybe_newline ;	2326:3:48333:48351	6319772	3	True				
ANR	6320128	Identifier	maybe_newline		6319772	0					
ANR	6320129	ElseStatement	else		6319772	0					
ANR	6320130	CompoundStatement		97:9:2116:2116	6319772	0					
ANR	6320131	IfStatement	if ( c == '#' )		6319772	0					
ANR	6320132	Condition	c == '#'	2328:7:48371:48378	6319772	0	True				
ANR	6320133	EqualityExpression	c == '#'		6319772	0		==			
ANR	6320134	Identifier	c		6319772	0					
ANR	6320135	PrimaryExpression	'#'		6319772	1					
ANR	6320136	CompoundStatement		98:17:2135:2135	6319772	1					
ANR	6320137	ExpressionStatement	p ++	2329:4:48387:48390	6319772	0	True				
ANR	6320138	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6320139	Identifier	p		6319772	0					
ANR	6320140	IncDec	++		6319772	1					
ANR	6320141	ExpressionStatement	tok = TOK_TWOSHARPS	2330:4:48396:48415	6319772	1	True				
ANR	6320142	AssignmentExpression	tok = TOK_TWOSHARPS		6319772	0		=			
ANR	6320143	Identifier	tok		6319772	0					
ANR	6320144	Identifier	TOK_TWOSHARPS		6319772	1					
ANR	6320145	ElseStatement	else		6319772	0					
ANR	6320146	CompoundStatement		101:10:2181:2181	6319772	0					
ANR	6320147	IfStatement	if ( parse_flags & PARSE_FLAG_ASM_COMMENTS )		6319772	0					
ANR	6320148	Condition	parse_flags & PARSE_FLAG_ASM_COMMENTS	2332:8:48437:48473	6319772	0	True				
ANR	6320149	BitAndExpression	parse_flags & PARSE_FLAG_ASM_COMMENTS		6319772	0		&			
ANR	6320150	Identifier	parse_flags		6319772	0					
ANR	6320151	Identifier	PARSE_FLAG_ASM_COMMENTS		6319772	1					
ANR	6320152	CompoundStatement		102:47:2230:2230	6319772	1					
ANR	6320153	ExpressionStatement	p = parse_line_comment ( p - 1 )	2333:5:48483:48513	6319772	0	True				
ANR	6320154	AssignmentExpression	p = parse_line_comment ( p - 1 )		6319772	0		=			
ANR	6320155	Identifier	p		6319772	0					
ANR	6320156	CallExpression	parse_line_comment ( p - 1 )		6319772	1					
ANR	6320157	Callee	parse_line_comment		6319772	0					
ANR	6320158	Identifier	parse_line_comment		6319772	0					
ANR	6320159	ArgumentList	p - 1		6319772	1					
ANR	6320160	Argument	p - 1		6319772	0					
ANR	6320161	AdditiveExpression	p - 1		6319772	0		-			
ANR	6320162	Identifier	p		6319772	0					
ANR	6320163	PrimaryExpression	1		6319772	1					
ANR	6320164	GotoStatement	goto redo_no_start ;	2334:5:48520:48538	6319772	1	True				
ANR	6320165	Identifier	redo_no_start		6319772	0					
ANR	6320166	ElseStatement	else		6319772	0					
ANR	6320167	CompoundStatement		105:11:2305:2305	6319772	0					
ANR	6320168	ExpressionStatement	tok = '#'	2336:5:48558:48567	6319772	0	True				
ANR	6320169	AssignmentExpression	tok = '#'		6319772	0		=			
ANR	6320170	Identifier	tok		6319772	0					
ANR	6320171	PrimaryExpression	'#'		6319772	1					
ANR	6320172	BreakStatement	break ;	2340:2:48586:48591	6319772	26	True				
ANR	6320173	Label	case 'a' :	2342:1:48595:48603	6319772	27	True				
ANR	6320174	Label	case 'b' :	2342:11:48605:48613	6319772	28	True				
ANR	6320175	Label	case 'c' :	2342:21:48615:48623	6319772	29	True				
ANR	6320176	Label	case 'd' :	2342:31:48625:48633	6319772	30	True				
ANR	6320177	Label	case 'e' :	2343:1:48636:48644	6319772	31	True				
ANR	6320178	Label	case 'f' :	2343:11:48646:48654	6319772	32	True				
ANR	6320179	Label	case 'g' :	2343:21:48656:48664	6319772	33	True				
ANR	6320180	Label	case 'h' :	2343:31:48666:48674	6319772	34	True				
ANR	6320181	Label	case 'i' :	2344:1:48677:48685	6319772	35	True				
ANR	6320182	Label	case 'j' :	2344:11:48687:48695	6319772	36	True				
ANR	6320183	Label	case 'k' :	2344:21:48697:48705	6319772	37	True				
ANR	6320184	Label	case 'l' :	2344:31:48707:48715	6319772	38	True				
ANR	6320185	Label	case 'm' :	2345:1:48718:48726	6319772	39	True				
ANR	6320186	Label	case 'n' :	2345:11:48728:48736	6319772	40	True				
ANR	6320187	Label	case 'o' :	2345:21:48738:48746	6319772	41	True				
ANR	6320188	Label	case 'p' :	2345:31:48748:48756	6319772	42	True				
ANR	6320189	Label	case 'q' :	2346:1:48759:48767	6319772	43	True				
ANR	6320190	Label	case 'r' :	2346:11:48769:48777	6319772	44	True				
ANR	6320191	Label	case 's' :	2346:21:48779:48787	6319772	45	True				
ANR	6320192	Label	case 't' :	2346:31:48789:48797	6319772	46	True				
ANR	6320193	Label	case 'u' :	2347:1:48800:48808	6319772	47	True				
ANR	6320194	Label	case 'v' :	2347:11:48810:48818	6319772	48	True				
ANR	6320195	Label	case 'w' :	2347:21:48820:48828	6319772	49	True				
ANR	6320196	Label	case 'x' :	2347:31:48830:48838	6319772	50	True				
ANR	6320197	Label	case 'y' :	2348:1:48841:48849	6319772	51	True				
ANR	6320198	Label	case 'z' :	2348:11:48851:48859	6319772	52	True				
ANR	6320199	Label	case 'A' :	2349:1:48862:48870	6319772	53	True				
ANR	6320200	Label	case 'B' :	2349:11:48872:48880	6319772	54	True				
ANR	6320201	Label	case 'C' :	2349:21:48882:48890	6319772	55	True				
ANR	6320202	Label	case 'D' :	2349:31:48892:48900	6319772	56	True				
ANR	6320203	Label	case 'E' :	2350:1:48903:48911	6319772	57	True				
ANR	6320204	Label	case 'F' :	2350:11:48913:48921	6319772	58	True				
ANR	6320205	Label	case 'G' :	2350:21:48923:48931	6319772	59	True				
ANR	6320206	Label	case 'H' :	2350:31:48933:48941	6319772	60	True				
ANR	6320207	Label	case 'I' :	2351:1:48944:48952	6319772	61	True				
ANR	6320208	Label	case 'J' :	2351:11:48954:48962	6319772	62	True				
ANR	6320209	Label	case 'K' :	2351:21:48964:48972	6319772	63	True				
ANR	6320210	Label	case 'M' :	2352:1:48975:48983	6319772	64	True				
ANR	6320211	Label	case 'N' :	2352:11:48985:48993	6319772	65	True				
ANR	6320212	Label	case 'O' :	2352:21:48995:49003	6319772	66	True				
ANR	6320213	Label	case 'P' :	2352:31:49005:49013	6319772	67	True				
ANR	6320214	Label	case 'Q' :	2353:1:49016:49024	6319772	68	True				
ANR	6320215	Label	case 'R' :	2353:11:49026:49034	6319772	69	True				
ANR	6320216	Label	case 'S' :	2353:21:49036:49044	6319772	70	True				
ANR	6320217	Label	case 'T' :	2353:31:49046:49054	6319772	71	True				
ANR	6320218	Label	case 'U' :	2354:1:49057:49065	6319772	72	True				
ANR	6320219	Label	case 'V' :	2354:11:49067:49075	6319772	73	True				
ANR	6320220	Label	case 'W' :	2354:21:49077:49085	6319772	74	True				
ANR	6320221	Label	case 'X' :	2354:31:49087:49095	6319772	75	True				
ANR	6320222	Label	case 'Y' :	2355:1:49098:49106	6319772	76	True				
ANR	6320223	Label	case 'Z' :	2355:11:49108:49116	6319772	77	True				
ANR	6320224	Label	case '_' :	2356:1:49119:49127	6319772	78	True				
ANR	6320225	Label	parse_ident_fast :	2357:0:49129:49145	6319772	79	True				
ANR	6320226	Identifier	parse_ident_fast		6319772	0					
ANR	6320227	ExpressionStatement	p1 = p	2358:2:49149:49155	6319772	80	True				
ANR	6320228	AssignmentExpression	p1 = p		6319772	0		=			
ANR	6320229	Identifier	p1		6319772	0					
ANR	6320230	Identifier	p		6319772	1					
ANR	6320231	ExpressionStatement	h = TOK_HASH_INIT	2359:2:49159:49176	6319772	81	True				
ANR	6320232	AssignmentExpression	h = TOK_HASH_INIT		6319772	0		=			
ANR	6320233	Identifier	h		6319772	0					
ANR	6320234	Identifier	TOK_HASH_INIT		6319772	1					
ANR	6320235	ExpressionStatement	"h = TOK_HASH_FUNC ( h , c )"	2360:2:49180:49204	6319772	82	True				
ANR	6320236	AssignmentExpression	"h = TOK_HASH_FUNC ( h , c )"		6319772	0		=			
ANR	6320237	Identifier	h		6319772	0					
ANR	6320238	CallExpression	"TOK_HASH_FUNC ( h , c )"		6319772	1					
ANR	6320239	Callee	TOK_HASH_FUNC		6319772	0					
ANR	6320240	Identifier	TOK_HASH_FUNC		6319772	0					
ANR	6320241	ArgumentList	h		6319772	1					
ANR	6320242	Argument	h		6319772	0					
ANR	6320243	Identifier	h		6319772	0					
ANR	6320244	Argument	c		6319772	1					
ANR	6320245	Identifier	c		6319772	0					
ANR	6320246	ExpressionStatement	p ++	2361:2:49208:49211	6319772	83	True				
ANR	6320247	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6320248	Identifier	p		6319772	0					
ANR	6320249	IncDec	++		6319772	1					
ANR	6320250	ForStatement	for ( ; ; )		6319772	84					
ANR	6320251	CompoundStatement		132:11:2978:2978	6319772	0					
ANR	6320252	ExpressionStatement	c = * p	2363:3:49229:49235	6319772	0	True				
ANR	6320253	AssignmentExpression	c = * p		6319772	0		=			
ANR	6320254	Identifier	c		6319772	0					
ANR	6320255	UnaryOperationExpression	* p		6319772	1					
ANR	6320256	UnaryOperator	*		6319772	0					
ANR	6320257	Identifier	p		6319772	1					
ANR	6320258	IfStatement	if ( ! isidnum_table [ c - CH_EOF ] )		6319772	1					
ANR	6320259	Condition	! isidnum_table [ c - CH_EOF ]	2364:7:49244:49269	6319772	0	True				
ANR	6320260	UnaryOperationExpression	! isidnum_table [ c - CH_EOF ]		6319772	0					
ANR	6320261	UnaryOperator	!		6319772	0					
ANR	6320262	ArrayIndexing	isidnum_table [ c - CH_EOF ]		6319772	1					
ANR	6320263	Identifier	isidnum_table		6319772	0					
ANR	6320264	AdditiveExpression	c - CH_EOF		6319772	1		-			
ANR	6320265	Identifier	c		6319772	0					
ANR	6320266	Identifier	CH_EOF		6319772	1					
ANR	6320267	CompoundStatement		134:35:3026:3026	6319772	1					
ANR	6320268	BreakStatement	break ;	2365:4:49278:49283	6319772	0	True				
ANR	6320269	ExpressionStatement	"h = TOK_HASH_FUNC ( h , c )"	2367:3:49293:49317	6319772	2	True				
ANR	6320270	AssignmentExpression	"h = TOK_HASH_FUNC ( h , c )"		6319772	0		=			
ANR	6320271	Identifier	h		6319772	0					
ANR	6320272	CallExpression	"TOK_HASH_FUNC ( h , c )"		6319772	1					
ANR	6320273	Callee	TOK_HASH_FUNC		6319772	0					
ANR	6320274	Identifier	TOK_HASH_FUNC		6319772	0					
ANR	6320275	ArgumentList	h		6319772	1					
ANR	6320276	Argument	h		6319772	0					
ANR	6320277	Identifier	h		6319772	0					
ANR	6320278	Argument	c		6319772	1					
ANR	6320279	Identifier	c		6319772	0					
ANR	6320280	ExpressionStatement	p ++	2368:3:49322:49325	6319772	3	True				
ANR	6320281	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6320282	Identifier	p		6319772	0					
ANR	6320283	IncDec	++		6319772	1					
ANR	6320284	IfStatement	if ( c != '\\\\' )		6319772	85					
ANR	6320285	Condition	c != '\\\\'	2370:6:49337:49345	6319772	0	True				
ANR	6320286	EqualityExpression	c != '\\\\'		6319772	0		!=			
ANR	6320287	Identifier	c		6319772	0					
ANR	6320288	PrimaryExpression	'\\\\'		6319772	1					
ANR	6320289	CompoundStatement		142:3:3126:3133	6319772	1					
ANR	6320290	IdentifierDeclStatement	TokenSym * * pts ;	2371:3:49353:49367	6319772	0	True				
ANR	6320291	IdentifierDecl	* * pts		6319772	0					
ANR	6320292	IdentifierDeclType	TokenSym * *		6319772	0					
ANR	6320293	Identifier	pts		6319772	1					
ANR	6320294	IdentifierDeclStatement	int len ;	2372:3:49372:49379	6319772	1	True				
ANR	6320295	IdentifierDecl	len		6319772	0					
ANR	6320296	IdentifierDeclType	int		6319772	0					
ANR	6320297	Identifier	len		6319772	1					
ANR	6320298	ExpressionStatement	len = p - p1	2376:3:49484:49496	6319772	2	True				
ANR	6320299	AssignmentExpression	len = p - p1		6319772	0		=			
ANR	6320300	Identifier	len		6319772	0					
ANR	6320301	AdditiveExpression	p - p1		6319772	1		-			
ANR	6320302	Identifier	p		6319772	0					
ANR	6320303	Identifier	p1		6319772	1					
ANR	6320304	ExpressionStatement	h &= ( TOK_HASH_SIZE - 1 )	2377:3:49501:49525	6319772	3	True				
ANR	6320305	AssignmentExpression	h &= ( TOK_HASH_SIZE - 1 )		6319772	0		&=			
ANR	6320306	Identifier	h		6319772	0					
ANR	6320307	AdditiveExpression	TOK_HASH_SIZE - 1		6319772	1		-			
ANR	6320308	Identifier	TOK_HASH_SIZE		6319772	0					
ANR	6320309	PrimaryExpression	1		6319772	1					
ANR	6320310	ExpressionStatement	pts = & hash_ident [ h ]	2378:3:49530:49550	6319772	4	True				
ANR	6320311	AssignmentExpression	pts = & hash_ident [ h ]		6319772	0		=			
ANR	6320312	Identifier	pts		6319772	0					
ANR	6320313	UnaryOperationExpression	& hash_ident [ h ]		6319772	1					
ANR	6320314	UnaryOperator	&		6319772	0					
ANR	6320315	ArrayIndexing	hash_ident [ h ]		6319772	1					
ANR	6320316	Identifier	hash_ident		6319772	0					
ANR	6320317	Identifier	h		6319772	1					
ANR	6320318	ForStatement	for ( ; ; )		6319772	5					
ANR	6320319	CompoundStatement		149:12:3318:3318	6319772	0					
ANR	6320320	ExpressionStatement	ts = * pts	2380:4:49570:49579	6319772	0	True				
ANR	6320321	AssignmentExpression	ts = * pts		6319772	0		=			
ANR	6320322	Identifier	ts		6319772	0					
ANR	6320323	UnaryOperationExpression	* pts		6319772	1					
ANR	6320324	UnaryOperator	*		6319772	0					
ANR	6320325	Identifier	pts		6319772	1					
ANR	6320326	IfStatement	if ( ! ts )		6319772	1					
ANR	6320327	Condition	! ts	2381:8:49589:49591	6319772	0	True				
ANR	6320328	UnaryOperationExpression	! ts		6319772	0					
ANR	6320329	UnaryOperator	!		6319772	0					
ANR	6320330	Identifier	ts		6319772	1					
ANR	6320331	CompoundStatement		151:13:3348:3348	6319772	1					
ANR	6320332	BreakStatement	break ;	2382:5:49601:49606	6319772	0	True				
ANR	6320333	IfStatement	"if ( ts -> len == len && ! memcmp ( ts -> str , p1 , len ) )"		6319772	2					
ANR	6320334	Condition	"ts -> len == len && ! memcmp ( ts -> str , p1 , len )"	2384:8:49622:49665	6319772	0	True				
ANR	6320335	AndExpression	"ts -> len == len && ! memcmp ( ts -> str , p1 , len )"		6319772	0		&&			
ANR	6320336	EqualityExpression	ts -> len == len		6319772	0		==			
ANR	6320337	PtrMemberAccess	ts -> len		6319772	0					
ANR	6320338	Identifier	ts		6319772	0					
ANR	6320339	Identifier	len		6319772	1					
ANR	6320340	Identifier	len		6319772	1					
ANR	6320341	UnaryOperationExpression	"! memcmp ( ts -> str , p1 , len )"		6319772	1					
ANR	6320342	UnaryOperator	!		6319772	0					
ANR	6320343	CallExpression	"memcmp ( ts -> str , p1 , len )"		6319772	1					
ANR	6320344	Callee	memcmp		6319772	0					
ANR	6320345	Identifier	memcmp		6319772	0					
ANR	6320346	ArgumentList	ts -> str		6319772	1					
ANR	6320347	Argument	ts -> str		6319772	0					
ANR	6320348	PtrMemberAccess	ts -> str		6319772	0					
ANR	6320349	Identifier	ts		6319772	0					
ANR	6320350	Identifier	str		6319772	1					
ANR	6320351	Argument	p1		6319772	1					
ANR	6320352	Identifier	p1		6319772	0					
ANR	6320353	Argument	len		6319772	2					
ANR	6320354	Identifier	len		6319772	0					
ANR	6320355	CompoundStatement		154:54:3422:3422	6319772	1					
ANR	6320356	GotoStatement	goto token_found ;	2385:5:49675:49691	6319772	0	True				
ANR	6320357	Identifier	token_found		6319772	0					
ANR	6320358	ExpressionStatement	pts = & ( ts -> hash_next )	2387:4:49703:49725	6319772	3	True				
ANR	6320359	AssignmentExpression	pts = & ( ts -> hash_next )		6319772	0		=			
ANR	6320360	Identifier	pts		6319772	0					
ANR	6320361	UnaryOperationExpression	& ( ts -> hash_next )		6319772	1					
ANR	6320362	UnaryOperator	&		6319772	0					
ANR	6320363	PtrMemberAccess	ts -> hash_next		6319772	1					
ANR	6320364	Identifier	ts		6319772	0					
ANR	6320365	Identifier	hash_next		6319772	1					
ANR	6320366	ExpressionStatement	"ts = tok_alloc_new ( pts , ( const char * ) p1 , len )"	2389:3:49735:49783	6319772	6	True				
ANR	6320367	AssignmentExpression	"ts = tok_alloc_new ( pts , ( const char * ) p1 , len )"		6319772	0		=			
ANR	6320368	Identifier	ts		6319772	0					
ANR	6320369	CallExpression	"tok_alloc_new ( pts , ( const char * ) p1 , len )"		6319772	1					
ANR	6320370	Callee	tok_alloc_new		6319772	0					
ANR	6320371	Identifier	tok_alloc_new		6319772	0					
ANR	6320372	ArgumentList	pts		6319772	1					
ANR	6320373	Argument	pts		6319772	0					
ANR	6320374	Identifier	pts		6319772	0					
ANR	6320375	Argument	( const char * ) p1		6319772	1					
ANR	6320376	CastExpression	( const char * ) p1		6319772	0					
ANR	6320377	CastTarget	const char *		6319772	0					
ANR	6320378	Identifier	p1		6319772	1					
ANR	6320379	Argument	len		6319772	2					
ANR	6320380	Identifier	len		6319772	0					
ANR	6320381	Label	token_found :	2390:0:49785:49796	6319772	7	True				
ANR	6320382	Identifier	token_found		6319772	0					
ANR	6320383	ExpressionStatement		2391:3:49801:49801	6319772	8	True				
ANR	6320384	ElseStatement	else		6319772	0					
ANR	6320385	CompoundStatement		162:9:3566:3566	6319772	0					
ANR	6320386	ExpressionStatement	cstr_reset ( & tokcstr )	2394:3:49838:49859	6319772	0	True				
ANR	6320387	CallExpression	cstr_reset ( & tokcstr )		6319772	0					
ANR	6320388	Callee	cstr_reset		6319772	0					
ANR	6320389	Identifier	cstr_reset		6319772	0					
ANR	6320390	ArgumentList	& tokcstr		6319772	1					
ANR	6320391	Argument	& tokcstr		6319772	0					
ANR	6320392	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320393	UnaryOperator	&		6319772	0					
ANR	6320394	Identifier	tokcstr		6319772	1					
ANR	6320395	WhileStatement	while ( p1 < p )		6319772	1					
ANR	6320396	Condition	p1 < p	2396:10:49872:49877	6319772	0	True				
ANR	6320397	RelationalExpression	p1 < p		6319772	0		<			
ANR	6320398	Identifier	p1		6319772	0					
ANR	6320399	Identifier	p		6319772	1					
ANR	6320400	CompoundStatement		166:18:3634:3634	6319772	1					
ANR	6320401	ExpressionStatement	"cstr_ccat ( & tokcstr , * p1 )"	2397:4:49886:49911	6319772	0	True				
ANR	6320402	CallExpression	"cstr_ccat ( & tokcstr , * p1 )"		6319772	0					
ANR	6320403	Callee	cstr_ccat		6319772	0					
ANR	6320404	Identifier	cstr_ccat		6319772	0					
ANR	6320405	ArgumentList	& tokcstr		6319772	1					
ANR	6320406	Argument	& tokcstr		6319772	0					
ANR	6320407	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320408	UnaryOperator	&		6319772	0					
ANR	6320409	Identifier	tokcstr		6319772	1					
ANR	6320410	Argument	* p1		6319772	1					
ANR	6320411	UnaryOperationExpression	* p1		6319772	0					
ANR	6320412	UnaryOperator	*		6319772	0					
ANR	6320413	Identifier	p1		6319772	1					
ANR	6320414	ExpressionStatement	p1 ++	2398:4:49917:49921	6319772	1	True				
ANR	6320415	PostIncDecOperationExpression	p1 ++		6319772	0					
ANR	6320416	Identifier	p1		6319772	0					
ANR	6320417	IncDec	++		6319772	1					
ANR	6320418	ExpressionStatement	p --	2400:3:49931:49934	6319772	2	True				
ANR	6320419	PostIncDecOperationExpression	p --		6319772	0					
ANR	6320420	Identifier	p		6319772	0					
ANR	6320421	IncDec	--		6319772	1					
ANR	6320422	ExpressionStatement	"PEEKC ( c , p )"	2401:3:49939:49951	6319772	3	True				
ANR	6320423	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320424	Callee	PEEKC		6319772	0					
ANR	6320425	Identifier	PEEKC		6319772	0					
ANR	6320426	ArgumentList	c		6319772	1					
ANR	6320427	Argument	c		6319772	0					
ANR	6320428	Identifier	c		6319772	0					
ANR	6320429	Argument	p		6319772	1					
ANR	6320430	Identifier	p		6319772	0					
ANR	6320431	Label	parse_ident_slow :	2402:0:49953:49969	6319772	4	True				
ANR	6320432	Identifier	parse_ident_slow		6319772	0					
ANR	6320433	WhileStatement	while ( isidnum_table [ ( ( c > 255 ) ? 255 : c ) - CH_EOF ] )		6319772	5					
ANR	6320434	Condition	isidnum_table [ ( ( c > 255 ) ? 255 : c ) - CH_EOF ]	2403:10:49981:50023	6319772	0	True				
ANR	6320435	ArrayIndexing	isidnum_table [ ( ( c > 255 ) ? 255 : c ) - CH_EOF ]		6319772	0					
ANR	6320436	Identifier	isidnum_table		6319772	0					
ANR	6320437	AdditiveExpression	( ( c > 255 ) ? 255 : c ) - CH_EOF		6319772	1		-			
ANR	6320438	ConditionalExpression	( c > 255 ) ? 255 : c		6319772	0					
ANR	6320439	Condition	c > 255		6319772	0					
ANR	6320440	RelationalExpression	c > 255		6319772	0		>			
ANR	6320441	Identifier	c		6319772	0					
ANR	6320442	PrimaryExpression	255		6319772	1					
ANR	6320443	PrimaryExpression	255		6319772	1					
ANR	6320444	Identifier	c		6319772	2					
ANR	6320445	Identifier	CH_EOF		6319772	1					
ANR	6320446	CompoundStatement		173:55:3780:3780	6319772	1					
ANR	6320447	ExpressionStatement	"cstr_ccat ( & tokcstr , c )"	2404:4:50032:50055	6319772	0	True				
ANR	6320448	CallExpression	"cstr_ccat ( & tokcstr , c )"		6319772	0					
ANR	6320449	Callee	cstr_ccat		6319772	0					
ANR	6320450	Identifier	cstr_ccat		6319772	0					
ANR	6320451	ArgumentList	& tokcstr		6319772	1					
ANR	6320452	Argument	& tokcstr		6319772	0					
ANR	6320453	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320454	UnaryOperator	&		6319772	0					
ANR	6320455	Identifier	tokcstr		6319772	1					
ANR	6320456	Argument	c		6319772	1					
ANR	6320457	Identifier	c		6319772	0					
ANR	6320458	ExpressionStatement	"PEEKC ( c , p )"	2405:4:50061:50073	6319772	1	True				
ANR	6320459	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320460	Callee	PEEKC		6319772	0					
ANR	6320461	Identifier	PEEKC		6319772	0					
ANR	6320462	ArgumentList	c		6319772	1					
ANR	6320463	Argument	c		6319772	0					
ANR	6320464	Identifier	c		6319772	0					
ANR	6320465	Argument	p		6319772	1					
ANR	6320466	Identifier	p		6319772	0					
ANR	6320467	ExpressionStatement	"ts = tok_alloc ( tokcstr . data , tokcstr . size )"	2407:3:50083:50126	6319772	6	True				
ANR	6320468	AssignmentExpression	"ts = tok_alloc ( tokcstr . data , tokcstr . size )"		6319772	0		=			
ANR	6320469	Identifier	ts		6319772	0					
ANR	6320470	CallExpression	"tok_alloc ( tokcstr . data , tokcstr . size )"		6319772	1					
ANR	6320471	Callee	tok_alloc		6319772	0					
ANR	6320472	Identifier	tok_alloc		6319772	0					
ANR	6320473	ArgumentList	tokcstr . data		6319772	1					
ANR	6320474	Argument	tokcstr . data		6319772	0					
ANR	6320475	MemberAccess	tokcstr . data		6319772	0					
ANR	6320476	Identifier	tokcstr		6319772	0					
ANR	6320477	Identifier	data		6319772	1					
ANR	6320478	Argument	tokcstr . size		6319772	1					
ANR	6320479	MemberAccess	tokcstr . size		6319772	0					
ANR	6320480	Identifier	tokcstr		6319772	0					
ANR	6320481	Identifier	size		6319772	1					
ANR	6320482	ExpressionStatement	tok = ts -> tok	2409:2:50134:50147	6319772	86	True				
ANR	6320483	AssignmentExpression	tok = ts -> tok		6319772	0		=			
ANR	6320484	Identifier	tok		6319772	0					
ANR	6320485	PtrMemberAccess	ts -> tok		6319772	1					
ANR	6320486	Identifier	ts		6319772	0					
ANR	6320487	Identifier	tok		6319772	1					
ANR	6320488	BreakStatement	break ;	2410:2:50151:50156	6319772	87	True				
ANR	6320489	Label	case 'L' :	2411:1:50159:50167	6319772	88	True				
ANR	6320490	ExpressionStatement	t = p [ 1 ]	2412:2:50171:50179	6319772	89	True				
ANR	6320491	AssignmentExpression	t = p [ 1 ]		6319772	0		=			
ANR	6320492	Identifier	t		6319772	0					
ANR	6320493	ArrayIndexing	p [ 1 ]		6319772	1					
ANR	6320494	Identifier	p		6319772	0					
ANR	6320495	PrimaryExpression	1		6319772	1					
ANR	6320496	IfStatement	"if ( t != '\\\\' && t != '\\'' && t != '\\""' )"		6319772	90					
ANR	6320497	Condition	"t != '\\\\' && t != '\\'' && t != '\\""'"	2413:6:50187:50221	6319772	0	True				
ANR	6320498	AndExpression	"t != '\\\\' && t != '\\'' && t != '\\""'"		6319772	0		&&			
ANR	6320499	EqualityExpression	t != '\\\\'		6319772	0		!=			
ANR	6320500	Identifier	t		6319772	0					
ANR	6320501	PrimaryExpression	'\\\\'		6319772	1					
ANR	6320502	AndExpression	"t != '\\'' && t != '\\""'"		6319772	1		&&			
ANR	6320503	EqualityExpression	t != '\\''		6319772	0		!=			
ANR	6320504	Identifier	t		6319772	0					
ANR	6320505	PrimaryExpression	'\\''		6319772	1					
ANR	6320506	EqualityExpression	"t != '\\""'"		6319772	1		!=			
ANR	6320507	Identifier	t		6319772	0					
ANR	6320508	PrimaryExpression	"'\\""'"		6319772	1					
ANR	6320509	CompoundStatement		183:43:3978:3978	6319772	1					
ANR	6320510	GotoStatement	goto parse_ident_fast ;	2415:3:50248:50269	6319772	0	True				
ANR	6320511	Identifier	parse_ident_fast		6319772	0					
ANR	6320512	ElseStatement	else		6319772	0					
ANR	6320513	CompoundStatement		186:9:4034:4034	6319772	0					
ANR	6320514	ExpressionStatement	"PEEKC ( c , p )"	2417:3:50285:50297	6319772	0	True				
ANR	6320515	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320516	Callee	PEEKC		6319772	0					
ANR	6320517	Identifier	PEEKC		6319772	0					
ANR	6320518	ArgumentList	c		6319772	1					
ANR	6320519	Argument	c		6319772	0					
ANR	6320520	Identifier	c		6319772	0					
ANR	6320521	Argument	p		6319772	1					
ANR	6320522	Identifier	p		6319772	0					
ANR	6320523	IfStatement	"if ( c == '\\'' || c == '\\""' )"		6319772	1					
ANR	6320524	Condition	"c == '\\'' || c == '\\""'"	2418:7:50306:50327	6319772	0	True				
ANR	6320525	OrExpression	"c == '\\'' || c == '\\""'"		6319772	0		||			
ANR	6320526	EqualityExpression	c == '\\''		6319772	0		==			
ANR	6320527	Identifier	c		6319772	0					
ANR	6320528	PrimaryExpression	'\\''		6319772	1					
ANR	6320529	EqualityExpression	"c == '\\""'"		6319772	1		==			
ANR	6320530	Identifier	c		6319772	0					
ANR	6320531	PrimaryExpression	"'\\""'"		6319772	1					
ANR	6320532	CompoundStatement		188:31:4084:4084	6319772	1					
ANR	6320533	ExpressionStatement	is_long = 1	2419:4:50336:50347	6319772	0	True				
ANR	6320534	AssignmentExpression	is_long = 1		6319772	0		=			
ANR	6320535	Identifier	is_long		6319772	0					
ANR	6320536	PrimaryExpression	1		6319772	1					
ANR	6320537	GotoStatement	goto str_const ;	2420:4:50353:50367	6319772	1	True				
ANR	6320538	Identifier	str_const		6319772	0					
ANR	6320539	ElseStatement	else		6319772	0					
ANR	6320540	CompoundStatement		191:10:4133:4133	6319772	0					
ANR	6320541	ExpressionStatement	cstr_reset ( & tokcstr )	2422:4:50385:50406	6319772	0	True				
ANR	6320542	CallExpression	cstr_reset ( & tokcstr )		6319772	0					
ANR	6320543	Callee	cstr_reset		6319772	0					
ANR	6320544	Identifier	cstr_reset		6319772	0					
ANR	6320545	ArgumentList	& tokcstr		6319772	1					
ANR	6320546	Argument	& tokcstr		6319772	0					
ANR	6320547	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320548	UnaryOperator	&		6319772	0					
ANR	6320549	Identifier	tokcstr		6319772	1					
ANR	6320550	ExpressionStatement	"cstr_ccat ( & tokcstr , 'L' )"	2423:4:50412:50437	6319772	1	True				
ANR	6320551	CallExpression	"cstr_ccat ( & tokcstr , 'L' )"		6319772	0					
ANR	6320552	Callee	cstr_ccat		6319772	0					
ANR	6320553	Identifier	cstr_ccat		6319772	0					
ANR	6320554	ArgumentList	& tokcstr		6319772	1					
ANR	6320555	Argument	& tokcstr		6319772	0					
ANR	6320556	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320557	UnaryOperator	&		6319772	0					
ANR	6320558	Identifier	tokcstr		6319772	1					
ANR	6320559	Argument	'L'		6319772	1					
ANR	6320560	PrimaryExpression	'L'		6319772	0					
ANR	6320561	GotoStatement	goto parse_ident_slow ;	2424:4:50443:50464	6319772	2	True				
ANR	6320562	Identifier	parse_ident_slow		6319772	0					
ANR	6320563	BreakStatement	break ;	2427:2:50477:50482	6319772	91	True				
ANR	6320564	Label	case '0' :	2428:1:50485:50493	6319772	92	True				
ANR	6320565	Label	case '1' :	2428:11:50495:50503	6319772	93	True				
ANR	6320566	Label	case '2' :	2428:21:50505:50513	6319772	94	True				
ANR	6320567	Label	case '3' :	2428:31:50515:50523	6319772	95	True				
ANR	6320568	Label	case '4' :	2429:1:50526:50534	6319772	96	True				
ANR	6320569	Label	case '5' :	2429:11:50536:50544	6319772	97	True				
ANR	6320570	Label	case '6' :	2429:21:50546:50554	6319772	98	True				
ANR	6320571	Label	case '7' :	2429:31:50556:50564	6319772	99	True				
ANR	6320572	Label	case '8' :	2430:1:50567:50575	6319772	100	True				
ANR	6320573	Label	case '9' :	2430:11:50577:50585	6319772	101	True				
ANR	6320574	ExpressionStatement	cstr_reset ( & tokcstr )	2432:2:50590:50611	6319772	102	True				
ANR	6320575	CallExpression	cstr_reset ( & tokcstr )		6319772	0					
ANR	6320576	Callee	cstr_reset		6319772	0					
ANR	6320577	Identifier	cstr_reset		6319772	0					
ANR	6320578	ArgumentList	& tokcstr		6319772	1					
ANR	6320579	Argument	& tokcstr		6319772	0					
ANR	6320580	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320581	UnaryOperator	&		6319772	0					
ANR	6320582	Identifier	tokcstr		6319772	1					
ANR	6320583	Label	parse_num :	2435:0:50705:50714	6319772	103	True				
ANR	6320584	Identifier	parse_num		6319772	0					
ANR	6320585	ForStatement	for ( ; ; )		6319772	104					
ANR	6320586	CompoundStatement		206:11:4481:4481	6319772	0					
ANR	6320587	ExpressionStatement	t = c	2437:3:50732:50737	6319772	0	True				
ANR	6320588	AssignmentExpression	t = c		6319772	0		=			
ANR	6320589	Identifier	t		6319772	0					
ANR	6320590	Identifier	c		6319772	1					
ANR	6320591	ExpressionStatement	"cstr_ccat ( & tokcstr , c )"	2438:3:50742:50765	6319772	1	True				
ANR	6320592	CallExpression	"cstr_ccat ( & tokcstr , c )"		6319772	0					
ANR	6320593	Callee	cstr_ccat		6319772	0					
ANR	6320594	Identifier	cstr_ccat		6319772	0					
ANR	6320595	ArgumentList	& tokcstr		6319772	1					
ANR	6320596	Argument	& tokcstr		6319772	0					
ANR	6320597	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320598	UnaryOperator	&		6319772	0					
ANR	6320599	Identifier	tokcstr		6319772	1					
ANR	6320600	Argument	c		6319772	1					
ANR	6320601	Identifier	c		6319772	0					
ANR	6320602	ExpressionStatement	"PEEKC ( c , p )"	2439:3:50770:50782	6319772	2	True				
ANR	6320603	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320604	Callee	PEEKC		6319772	0					
ANR	6320605	Identifier	PEEKC		6319772	0					
ANR	6320606	ArgumentList	c		6319772	1					
ANR	6320607	Argument	c		6319772	0					
ANR	6320608	Identifier	c		6319772	0					
ANR	6320609	Argument	p		6319772	1					
ANR	6320610	Identifier	p		6319772	0					
ANR	6320611	IfStatement	if ( ! ( isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) ) ) )		6319772	3					
ANR	6320612	Condition	! ( isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) ) )	2440:7:50791:50923	6319772	0	True				
ANR	6320613	UnaryOperationExpression	! ( isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) ) )		6319772	0					
ANR	6320614	UnaryOperator	!		6319772	0					
ANR	6320615	OrExpression	isnum ( c ) || isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) )		6319772	1		||			
ANR	6320616	CallExpression	isnum ( c )		6319772	0					
ANR	6320617	Callee	isnum		6319772	0					
ANR	6320618	Identifier	isnum		6319772	0					
ANR	6320619	ArgumentList	c		6319772	1					
ANR	6320620	Argument	c		6319772	0					
ANR	6320621	Identifier	c		6319772	0					
ANR	6320622	OrExpression	isid ( c ) || c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) )		6319772	1		||			
ANR	6320623	CallExpression	isid ( c )		6319772	0					
ANR	6320624	Callee	isid		6319772	0					
ANR	6320625	Identifier	isid		6319772	0					
ANR	6320626	ArgumentList	c		6319772	1					
ANR	6320627	Argument	c		6319772	0					
ANR	6320628	Identifier	c		6319772	0					
ANR	6320629	OrExpression	c == '.' || ( ( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' ) )		6319772	1		||			
ANR	6320630	EqualityExpression	c == '.'		6319772	0		==			
ANR	6320631	Identifier	c		6319772	0					
ANR	6320632	PrimaryExpression	'.'		6319772	1					
ANR	6320633	AndExpression	( c == '+' || c == '-' ) && ( t == 'e' || t == 'E' || t == 'p' || t == 'P' )		6319772	1		&&			
ANR	6320634	OrExpression	c == '+' || c == '-'		6319772	0		||			
ANR	6320635	EqualityExpression	c == '+'		6319772	0		==			
ANR	6320636	Identifier	c		6319772	0					
ANR	6320637	PrimaryExpression	'+'		6319772	1					
ANR	6320638	EqualityExpression	c == '-'		6319772	1		==			
ANR	6320639	Identifier	c		6319772	0					
ANR	6320640	PrimaryExpression	'-'		6319772	1					
ANR	6320641	OrExpression	t == 'e' || t == 'E' || t == 'p' || t == 'P'		6319772	1		||			
ANR	6320642	EqualityExpression	t == 'e'		6319772	0		==			
ANR	6320643	Identifier	t		6319772	0					
ANR	6320644	PrimaryExpression	'e'		6319772	1					
ANR	6320645	OrExpression	t == 'E' || t == 'p' || t == 'P'		6319772	1		||			
ANR	6320646	EqualityExpression	t == 'E'		6319772	0		==			
ANR	6320647	Identifier	t		6319772	0					
ANR	6320648	PrimaryExpression	'E'		6319772	1					
ANR	6320649	OrExpression	t == 'p' || t == 'P'		6319772	1		||			
ANR	6320650	EqualityExpression	t == 'p'		6319772	0		==			
ANR	6320651	Identifier	t		6319772	0					
ANR	6320652	PrimaryExpression	'p'		6319772	1					
ANR	6320653	EqualityExpression	t == 'P'		6319772	1		==			
ANR	6320654	Identifier	t		6319772	0					
ANR	6320655	PrimaryExpression	'P'		6319772	1					
ANR	6320656	CompoundStatement		212:60:4680:4680	6319772	1					
ANR	6320657	BreakStatement	break ;	2443:4:50932:50937	6319772	0	True				
ANR	6320658	ExpressionStatement	"cstr_ccat ( & tokcstr , '\\0' )"	2447:2:50997:51023	6319772	105	True				
ANR	6320659	CallExpression	"cstr_ccat ( & tokcstr , '\\0' )"		6319772	0					
ANR	6320660	Callee	cstr_ccat		6319772	0					
ANR	6320661	Identifier	cstr_ccat		6319772	0					
ANR	6320662	ArgumentList	& tokcstr		6319772	1					
ANR	6320663	Argument	& tokcstr		6319772	0					
ANR	6320664	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320665	UnaryOperator	&		6319772	0					
ANR	6320666	Identifier	tokcstr		6319772	1					
ANR	6320667	Argument	'\\0'		6319772	1					
ANR	6320668	PrimaryExpression	'\\0'		6319772	0					
ANR	6320669	ExpressionStatement	tokc . cstr = & tokcstr	2448:2:51027:51047	6319772	106	True				
ANR	6320670	AssignmentExpression	tokc . cstr = & tokcstr		6319772	0		=			
ANR	6320671	MemberAccess	tokc . cstr		6319772	0					
ANR	6320672	Identifier	tokc		6319772	0					
ANR	6320673	Identifier	cstr		6319772	1					
ANR	6320674	UnaryOperationExpression	& tokcstr		6319772	1					
ANR	6320675	UnaryOperator	&		6319772	0					
ANR	6320676	Identifier	tokcstr		6319772	1					
ANR	6320677	ExpressionStatement	tok = TOK_PPNUM	2449:2:51051:51066	6319772	107	True				
ANR	6320678	AssignmentExpression	tok = TOK_PPNUM		6319772	0		=			
ANR	6320679	Identifier	tok		6319772	0					
ANR	6320680	Identifier	TOK_PPNUM		6319772	1					
ANR	6320681	BreakStatement	break ;	2450:2:51070:51075	6319772	108	True				
ANR	6320682	Label	case '.' :	2451:1:51078:51086	6319772	109	True				
ANR	6320683	ExpressionStatement	"PEEKC ( c , p )"	2453:2:51154:51166	6319772	110	True				
ANR	6320684	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320685	Callee	PEEKC		6319772	0					
ANR	6320686	Identifier	PEEKC		6319772	0					
ANR	6320687	ArgumentList	c		6319772	1					
ANR	6320688	Argument	c		6319772	0					
ANR	6320689	Identifier	c		6319772	0					
ANR	6320690	Argument	p		6319772	1					
ANR	6320691	Identifier	p		6319772	0					
ANR	6320692	IfStatement	if ( isnum ( c ) )		6319772	111					
ANR	6320693	Condition	isnum ( c )	2454:6:51174:51182	6319772	0	True				
ANR	6320694	CallExpression	isnum ( c )		6319772	0					
ANR	6320695	Callee	isnum		6319772	0					
ANR	6320696	Identifier	isnum		6319772	0					
ANR	6320697	ArgumentList	c		6319772	1					
ANR	6320698	Argument	c		6319772	0					
ANR	6320699	Identifier	c		6319772	0					
ANR	6320700	CompoundStatement		224:17:4939:4939	6319772	1					
ANR	6320701	ExpressionStatement	cstr_reset ( & tokcstr )	2455:3:51190:51211	6319772	0	True				
ANR	6320702	CallExpression	cstr_reset ( & tokcstr )		6319772	0					
ANR	6320703	Callee	cstr_reset		6319772	0					
ANR	6320704	Identifier	cstr_reset		6319772	0					
ANR	6320705	ArgumentList	& tokcstr		6319772	1					
ANR	6320706	Argument	& tokcstr		6319772	0					
ANR	6320707	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320708	UnaryOperator	&		6319772	0					
ANR	6320709	Identifier	tokcstr		6319772	1					
ANR	6320710	ExpressionStatement	"cstr_ccat ( & tokcstr , '.' )"	2456:3:51216:51241	6319772	1	True				
ANR	6320711	CallExpression	"cstr_ccat ( & tokcstr , '.' )"		6319772	0					
ANR	6320712	Callee	cstr_ccat		6319772	0					
ANR	6320713	Identifier	cstr_ccat		6319772	0					
ANR	6320714	ArgumentList	& tokcstr		6319772	1					
ANR	6320715	Argument	& tokcstr		6319772	0					
ANR	6320716	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320717	UnaryOperator	&		6319772	0					
ANR	6320718	Identifier	tokcstr		6319772	1					
ANR	6320719	Argument	'.'		6319772	1					
ANR	6320720	PrimaryExpression	'.'		6319772	0					
ANR	6320721	GotoStatement	goto parse_num ;	2457:3:51246:51260	6319772	2	True				
ANR	6320722	Identifier	parse_num		6319772	0					
ANR	6320723	ElseStatement	else		6319772	0					
ANR	6320724	IfStatement	if ( c == '.' )		6319772	0					
ANR	6320725	Condition	c == '.'	2458:13:51275:51282	6319772	0	True				
ANR	6320726	EqualityExpression	c == '.'		6319772	0		==			
ANR	6320727	Identifier	c		6319772	0					
ANR	6320728	PrimaryExpression	'.'		6319772	1					
ANR	6320729	CompoundStatement		228:23:5039:5039	6319772	1					
ANR	6320730	ExpressionStatement	"PEEKC ( c , p )"	2459:3:51290:51302	6319772	0	True				
ANR	6320731	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320732	Callee	PEEKC		6319772	0					
ANR	6320733	Identifier	PEEKC		6319772	0					
ANR	6320734	ArgumentList	c		6319772	1					
ANR	6320735	Argument	c		6319772	0					
ANR	6320736	Identifier	c		6319772	0					
ANR	6320737	Argument	p		6319772	1					
ANR	6320738	Identifier	p		6319772	0					
ANR	6320739	IfStatement	if ( c != '.' )		6319772	1					
ANR	6320740	Condition	c != '.'	2460:7:51311:51318	6319772	0	True				
ANR	6320741	EqualityExpression	c != '.'		6319772	0		!=			
ANR	6320742	Identifier	c		6319772	0					
ANR	6320743	PrimaryExpression	'.'		6319772	1					
ANR	6320744	CompoundStatement		230:17:5075:5075	6319772	1					
ANR	6320745	ExpressionStatement	"expect ( ""'.'"" )"	2461:4:51327:51341	6319772	0	True				
ANR	6320746	CallExpression	"expect ( ""'.'"" )"		6319772	0					
ANR	6320747	Callee	expect		6319772	0					
ANR	6320748	Identifier	expect		6319772	0					
ANR	6320749	ArgumentList	"""'.'"""		6319772	1					
ANR	6320750	Argument	"""'.'"""		6319772	0					
ANR	6320751	PrimaryExpression	"""'.'"""		6319772	0					
ANR	6320752	ReturnStatement	return ;	2462:4:51347:51353	6319772	1	True				
ANR	6320753	ExpressionStatement	"PEEKC ( c , p )"	2464:3:51363:51375	6319772	2	True				
ANR	6320754	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320755	Callee	PEEKC		6319772	0					
ANR	6320756	Identifier	PEEKC		6319772	0					
ANR	6320757	ArgumentList	c		6319772	1					
ANR	6320758	Argument	c		6319772	0					
ANR	6320759	Identifier	c		6319772	0					
ANR	6320760	Argument	p		6319772	1					
ANR	6320761	Identifier	p		6319772	0					
ANR	6320762	ExpressionStatement	tok = TOK_DOTS	2465:3:51380:51394	6319772	3	True				
ANR	6320763	AssignmentExpression	tok = TOK_DOTS		6319772	0		=			
ANR	6320764	Identifier	tok		6319772	0					
ANR	6320765	Identifier	TOK_DOTS		6319772	1					
ANR	6320766	ElseStatement	else		6319772	0					
ANR	6320767	CompoundStatement		236:9:5159:5159	6319772	0					
ANR	6320768	ExpressionStatement	tok = '.'	2467:3:51410:51419	6319772	0	True				
ANR	6320769	AssignmentExpression	tok = '.'		6319772	0		=			
ANR	6320770	Identifier	tok		6319772	0					
ANR	6320771	PrimaryExpression	'.'		6319772	1					
ANR	6320772	BreakStatement	break ;	2469:2:51427:51432	6319772	112	True				
ANR	6320773	Label	case '\\'' :	2470:1:51435:51444	6319772	113	True				
ANR	6320774	Label	"case '\\""' :"	2471:1:51447:51456	6319772	114	True				
ANR	6320775	ExpressionStatement	is_long = 0	2472:2:51460:51471	6319772	115	True				
ANR	6320776	AssignmentExpression	is_long = 0		6319772	0		=			
ANR	6320777	Identifier	is_long		6319772	0					
ANR	6320778	PrimaryExpression	0		6319772	1					
ANR	6320779	Label	str_const :	2473:0:51473:51482	6319772	116	True				
ANR	6320780	Identifier	str_const		6319772	0					
ANR	6320781	CompoundStatement		246:3:5261:5268	6319772	117					
ANR	6320782	IdentifierDeclStatement	CString str ;	2475:3:51491:51502	6319772	0	True				
ANR	6320783	IdentifierDecl	str		6319772	0					
ANR	6320784	IdentifierDeclType	CString		6319772	0					
ANR	6320785	Identifier	str		6319772	1					
ANR	6320786	IdentifierDeclStatement	int sep ;	2476:3:51507:51514	6319772	1	True				
ANR	6320787	IdentifierDecl	sep		6319772	0					
ANR	6320788	IdentifierDeclType	int		6319772	0					
ANR	6320789	Identifier	sep		6319772	1					
ANR	6320790	ExpressionStatement	sep = c	2478:3:51520:51527	6319772	2	True				
ANR	6320791	AssignmentExpression	sep = c		6319772	0		=			
ANR	6320792	Identifier	sep		6319772	0					
ANR	6320793	Identifier	c		6319772	1					
ANR	6320794	ExpressionStatement	cstr_new ( & str )	2481:3:51559:51574	6319772	3	True				
ANR	6320795	CallExpression	cstr_new ( & str )		6319772	0					
ANR	6320796	Callee	cstr_new		6319772	0					
ANR	6320797	Identifier	cstr_new		6319772	0					
ANR	6320798	ArgumentList	& str		6319772	1					
ANR	6320799	Argument	& str		6319772	0					
ANR	6320800	UnaryOperationExpression	& str		6319772	0					
ANR	6320801	UnaryOperator	&		6319772	0					
ANR	6320802	Identifier	str		6319772	1					
ANR	6320803	ExpressionStatement	"p = parse_pp_string ( p , sep , & str )"	2482:3:51579:51613	6319772	4	True				
ANR	6320804	AssignmentExpression	"p = parse_pp_string ( p , sep , & str )"		6319772	0		=			
ANR	6320805	Identifier	p		6319772	0					
ANR	6320806	CallExpression	"parse_pp_string ( p , sep , & str )"		6319772	1					
ANR	6320807	Callee	parse_pp_string		6319772	0					
ANR	6320808	Identifier	parse_pp_string		6319772	0					
ANR	6320809	ArgumentList	p		6319772	1					
ANR	6320810	Argument	p		6319772	0					
ANR	6320811	Identifier	p		6319772	0					
ANR	6320812	Argument	sep		6319772	1					
ANR	6320813	Identifier	sep		6319772	0					
ANR	6320814	Argument	& str		6319772	2					
ANR	6320815	UnaryOperationExpression	& str		6319772	0					
ANR	6320816	UnaryOperator	&		6319772	0					
ANR	6320817	Identifier	str		6319772	1					
ANR	6320818	IfStatement	if ( ! p )		6319772	5					
ANR	6320819	Condition	! p	2483:7:51622:51623	6319772	0	True				
ANR	6320820	UnaryOperationExpression	! p		6319772	0					
ANR	6320821	UnaryOperator	!		6319772	0					
ANR	6320822	Identifier	p		6319772	1					
ANR	6320823	CompoundStatement		253:11:5380:5380	6319772	1					
ANR	6320824	ReturnStatement	return ;	2484:4:51632:51638	6319772	0	True				
ANR	6320825	ExpressionStatement	"cstr_ccat ( & str , '\\0' )"	2486:3:51648:51670	6319772	6	True				
ANR	6320826	CallExpression	"cstr_ccat ( & str , '\\0' )"		6319772	0					
ANR	6320827	Callee	cstr_ccat		6319772	0					
ANR	6320828	Identifier	cstr_ccat		6319772	0					
ANR	6320829	ArgumentList	& str		6319772	1					
ANR	6320830	Argument	& str		6319772	0					
ANR	6320831	UnaryOperationExpression	& str		6319772	0					
ANR	6320832	UnaryOperator	&		6319772	0					
ANR	6320833	Identifier	str		6319772	1					
ANR	6320834	Argument	'\\0'		6319772	1					
ANR	6320835	PrimaryExpression	'\\0'		6319772	0					
ANR	6320836	ExpressionStatement	cstr_reset ( & tokcstr )	2489:3:51731:51752	6319772	7	True				
ANR	6320837	CallExpression	cstr_reset ( & tokcstr )		6319772	0					
ANR	6320838	Callee	cstr_reset		6319772	0					
ANR	6320839	Identifier	cstr_reset		6319772	0					
ANR	6320840	ArgumentList	& tokcstr		6319772	1					
ANR	6320841	Argument	& tokcstr		6319772	0					
ANR	6320842	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320843	UnaryOperator	&		6319772	0					
ANR	6320844	Identifier	tokcstr		6319772	1					
ANR	6320845	ExpressionStatement	"parse_escape_string ( & tokcstr , str . data , is_long )"	2490:3:51757:51806	6319772	8	True				
ANR	6320846	CallExpression	"parse_escape_string ( & tokcstr , str . data , is_long )"		6319772	0					
ANR	6320847	Callee	parse_escape_string		6319772	0					
ANR	6320848	Identifier	parse_escape_string		6319772	0					
ANR	6320849	ArgumentList	& tokcstr		6319772	1					
ANR	6320850	Argument	& tokcstr		6319772	0					
ANR	6320851	UnaryOperationExpression	& tokcstr		6319772	0					
ANR	6320852	UnaryOperator	&		6319772	0					
ANR	6320853	Identifier	tokcstr		6319772	1					
ANR	6320854	Argument	str . data		6319772	1					
ANR	6320855	MemberAccess	str . data		6319772	0					
ANR	6320856	Identifier	str		6319772	0					
ANR	6320857	Identifier	data		6319772	1					
ANR	6320858	Argument	is_long		6319772	2					
ANR	6320859	Identifier	is_long		6319772	0					
ANR	6320860	ExpressionStatement	cstr_free ( & str )	2491:3:51811:51827	6319772	9	True				
ANR	6320861	CallExpression	cstr_free ( & str )		6319772	0					
ANR	6320862	Callee	cstr_free		6319772	0					
ANR	6320863	Identifier	cstr_free		6319772	0					
ANR	6320864	ArgumentList	& str		6319772	1					
ANR	6320865	Argument	& str		6319772	0					
ANR	6320866	UnaryOperationExpression	& str		6319772	0					
ANR	6320867	UnaryOperator	&		6319772	0					
ANR	6320868	Identifier	str		6319772	1					
ANR	6320869	IfStatement	if ( sep == '\\'' )		6319772	10					
ANR	6320870	Condition	sep == '\\''	2493:7:51837:51847	6319772	0	True				
ANR	6320871	EqualityExpression	sep == '\\''		6319772	0		==			
ANR	6320872	Identifier	sep		6319772	0					
ANR	6320873	PrimaryExpression	'\\''		6319772	1					
ANR	6320874	CompoundStatement		264:4:5610:5623	6319772	1					
ANR	6320875	IdentifierDeclStatement	int char_size ;	2494:4:51856:51869	6319772	0	True				
ANR	6320876	IdentifierDecl	char_size		6319772	0					
ANR	6320877	IdentifierDeclType	int		6319772	0					
ANR	6320878	Identifier	char_size		6319772	1					
ANR	6320879	IfStatement	if ( ! is_long )		6319772	1					
ANR	6320880	Condition	! is_long	2496:8:51911:51918	6319772	0	True				
ANR	6320881	UnaryOperationExpression	! is_long		6319772	0					
ANR	6320882	UnaryOperator	!		6319772	0					
ANR	6320883	Identifier	is_long		6319772	1					
ANR	6320884	CompoundStatement		266:18:5675:5675	6319772	1					
ANR	6320885	ExpressionStatement	char_size = 1	2497:5:51928:51941	6319772	0	True				
ANR	6320886	AssignmentExpression	char_size = 1		6319772	0		=			
ANR	6320887	Identifier	char_size		6319772	0					
ANR	6320888	PrimaryExpression	1		6319772	1					
ANR	6320889	ElseStatement	else		6319772	0					
ANR	6320890	CompoundStatement		268:11:5708:5708	6319772	0					
ANR	6320891	ExpressionStatement	char_size = sizeof ( nwchar_t )	2499:5:51961:51989	6319772	0	True				
ANR	6320892	AssignmentExpression	char_size = sizeof ( nwchar_t )		6319772	0		=			
ANR	6320893	Identifier	char_size		6319772	0					
ANR	6320894	SizeofExpression	sizeof ( nwchar_t )		6319772	1					
ANR	6320895	Sizeof	sizeof		6319772	0					
ANR	6320896	SizeofOperand	nwchar_t		6319772	1					
ANR	6320897	IfStatement	if ( tokcstr . size <= char_size )		6319772	2					
ANR	6320898	Condition	tokcstr . size <= char_size	2501:8:52005:52029	6319772	0	True				
ANR	6320899	RelationalExpression	tokcstr . size <= char_size		6319772	0		<=			
ANR	6320900	MemberAccess	tokcstr . size		6319772	0					
ANR	6320901	Identifier	tokcstr		6319772	0					
ANR	6320902	Identifier	size		6319772	1					
ANR	6320903	Identifier	char_size		6319772	1					
ANR	6320904	CompoundStatement		271:35:5786:5786	6319772	1					
ANR	6320905	ExpressionStatement	"tcc_error ( ""empty character constant"" )"	2502:5:52039:52077	6319772	0	True				
ANR	6320906	CallExpression	"tcc_error ( ""empty character constant"" )"		6319772	0					
ANR	6320907	Callee	tcc_error		6319772	0					
ANR	6320908	Identifier	tcc_error		6319772	0					
ANR	6320909	ArgumentList	"""empty character constant"""		6319772	1					
ANR	6320910	Argument	"""empty character constant"""		6319772	0					
ANR	6320911	PrimaryExpression	"""empty character constant"""		6319772	0					
ANR	6320912	IfStatement	if ( tokcstr . size > 2 * char_size )		6319772	3					
ANR	6320913	Condition	tokcstr . size > 2 * char_size	2504:8:52093:52120	6319772	0	True				
ANR	6320914	RelationalExpression	tokcstr . size > 2 * char_size		6319772	0		>			
ANR	6320915	MemberAccess	tokcstr . size		6319772	0					
ANR	6320916	Identifier	tokcstr		6319772	0					
ANR	6320917	Identifier	size		6319772	1					
ANR	6320918	MultiplicativeExpression	2 * char_size		6319772	1		*			
ANR	6320919	PrimaryExpression	2		6319772	0					
ANR	6320920	Identifier	char_size		6319772	1					
ANR	6320921	CompoundStatement		274:38:5877:5877	6319772	1					
ANR	6320922	ExpressionStatement	"tcc_warning ( ""multi-character character constant"" )"	2505:5:52130:52180	6319772	0	True				
ANR	6320923	CallExpression	"tcc_warning ( ""multi-character character constant"" )"		6319772	0					
ANR	6320924	Callee	tcc_warning		6319772	0					
ANR	6320925	Identifier	tcc_warning		6319772	0					
ANR	6320926	ArgumentList	"""multi-character character constant"""		6319772	1					
ANR	6320927	Argument	"""multi-character character constant"""		6319772	0					
ANR	6320928	PrimaryExpression	"""multi-character character constant"""		6319772	0					
ANR	6320929	IfStatement	if ( ! is_long )		6319772	4					
ANR	6320930	Condition	! is_long	2507:8:52196:52203	6319772	0	True				
ANR	6320931	UnaryOperationExpression	! is_long		6319772	0					
ANR	6320932	UnaryOperator	!		6319772	0					
ANR	6320933	Identifier	is_long		6319772	1					
ANR	6320934	CompoundStatement		277:18:5960:5960	6319772	1					
ANR	6320935	ExpressionStatement	tokc . i = * ( int8_t * ) tokcstr . data	2508:5:52213:52246	6319772	0	True				
ANR	6320936	AssignmentExpression	tokc . i = * ( int8_t * ) tokcstr . data		6319772	0		=			
ANR	6320937	MemberAccess	tokc . i		6319772	0					
ANR	6320938	Identifier	tokc		6319772	0					
ANR	6320939	Identifier	i		6319772	1					
ANR	6320940	UnaryOperationExpression	* ( int8_t * ) tokcstr . data		6319772	1					
ANR	6320941	UnaryOperator	*		6319772	0					
ANR	6320942	CastExpression	( int8_t * ) tokcstr . data		6319772	1					
ANR	6320943	CastTarget	int8_t *		6319772	0					
ANR	6320944	MemberAccess	tokcstr . data		6319772	1					
ANR	6320945	Identifier	tokcstr		6319772	0					
ANR	6320946	Identifier	data		6319772	1					
ANR	6320947	ExpressionStatement	tok = TOK_CCHAR	2509:5:52253:52268	6319772	1	True				
ANR	6320948	AssignmentExpression	tok = TOK_CCHAR		6319772	0		=			
ANR	6320949	Identifier	tok		6319772	0					
ANR	6320950	Identifier	TOK_CCHAR		6319772	1					
ANR	6320951	ElseStatement	else		6319772	0					
ANR	6320952	CompoundStatement		280:11:6035:6035	6319772	0					
ANR	6320953	ExpressionStatement	tokc . i = * ( nwchar_t * ) tokcstr . data	2511:5:52288:52323	6319772	0	True				
ANR	6320954	AssignmentExpression	tokc . i = * ( nwchar_t * ) tokcstr . data		6319772	0		=			
ANR	6320955	MemberAccess	tokc . i		6319772	0					
ANR	6320956	Identifier	tokc		6319772	0					
ANR	6320957	Identifier	i		6319772	1					
ANR	6320958	UnaryOperationExpression	* ( nwchar_t * ) tokcstr . data		6319772	1					
ANR	6320959	UnaryOperator	*		6319772	0					
ANR	6320960	CastExpression	( nwchar_t * ) tokcstr . data		6319772	1					
ANR	6320961	CastTarget	nwchar_t *		6319772	0					
ANR	6320962	MemberAccess	tokcstr . data		6319772	1					
ANR	6320963	Identifier	tokcstr		6319772	0					
ANR	6320964	Identifier	data		6319772	1					
ANR	6320965	ExpressionStatement	tok = TOK_LCHAR	2512:5:52330:52345	6319772	1	True				
ANR	6320966	AssignmentExpression	tok = TOK_LCHAR		6319772	0		=			
ANR	6320967	Identifier	tok		6319772	0					
ANR	6320968	Identifier	TOK_LCHAR		6319772	1					
ANR	6320969	ElseStatement	else		6319772	0					
ANR	6320970	CompoundStatement		284:10:6117:6117	6319772	0					
ANR	6320971	ExpressionStatement	tokc . cstr = & tokcstr	2515:4:52369:52389	6319772	0	True				
ANR	6320972	AssignmentExpression	tokc . cstr = & tokcstr		6319772	0		=			
ANR	6320973	MemberAccess	tokc . cstr		6319772	0					
ANR	6320974	Identifier	tokc		6319772	0					
ANR	6320975	Identifier	cstr		6319772	1					
ANR	6320976	UnaryOperationExpression	& tokcstr		6319772	1					
ANR	6320977	UnaryOperator	&		6319772	0					
ANR	6320978	Identifier	tokcstr		6319772	1					
ANR	6320979	IfStatement	if ( ! is_long )		6319772	1					
ANR	6320980	Condition	! is_long	2516:8:52399:52406	6319772	0	True				
ANR	6320981	UnaryOperationExpression	! is_long		6319772	0					
ANR	6320982	UnaryOperator	!		6319772	0					
ANR	6320983	Identifier	is_long		6319772	1					
ANR	6320984	CompoundStatement		286:18:6163:6163	6319772	1					
ANR	6320985	ExpressionStatement	tok = TOK_STR	2517:5:52416:52429	6319772	0	True				
ANR	6320986	AssignmentExpression	tok = TOK_STR		6319772	0		=			
ANR	6320987	Identifier	tok		6319772	0					
ANR	6320988	Identifier	TOK_STR		6319772	1					
ANR	6320989	ElseStatement	else		6319772	0					
ANR	6320990	CompoundStatement		288:11:6196:6196	6319772	0					
ANR	6320991	ExpressionStatement	tok = TOK_LSTR	2519:5:52449:52463	6319772	0	True				
ANR	6320992	AssignmentExpression	tok = TOK_LSTR		6319772	0		=			
ANR	6320993	Identifier	tok		6319772	0					
ANR	6320994	Identifier	TOK_LSTR		6319772	1					
ANR	6320995	BreakStatement	break ;	2523:2:52482:52487	6319772	118	True				
ANR	6320996	Label	case '<' :	2525:1:52491:52499	6319772	119	True				
ANR	6320997	ExpressionStatement	"PEEKC ( c , p )"	2526:2:52503:52515	6319772	120	True				
ANR	6320998	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6320999	Callee	PEEKC		6319772	0					
ANR	6321000	Identifier	PEEKC		6319772	0					
ANR	6321001	ArgumentList	c		6319772	1					
ANR	6321002	Argument	c		6319772	0					
ANR	6321003	Identifier	c		6319772	0					
ANR	6321004	Argument	p		6319772	1					
ANR	6321005	Identifier	p		6319772	0					
ANR	6321006	IfStatement	if ( c == '=' )		6319772	121					
ANR	6321007	Condition	c == '='	2527:6:52523:52530	6319772	0	True				
ANR	6321008	EqualityExpression	c == '='		6319772	0		==			
ANR	6321009	Identifier	c		6319772	0					
ANR	6321010	PrimaryExpression	'='		6319772	1					
ANR	6321011	CompoundStatement		297:16:6287:6287	6319772	1					
ANR	6321012	ExpressionStatement	p ++	2528:3:52538:52541	6319772	0	True				
ANR	6321013	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321014	Identifier	p		6319772	0					
ANR	6321015	IncDec	++		6319772	1					
ANR	6321016	ExpressionStatement	tok = TOK_LE	2529:3:52546:52558	6319772	1	True				
ANR	6321017	AssignmentExpression	tok = TOK_LE		6319772	0		=			
ANR	6321018	Identifier	tok		6319772	0					
ANR	6321019	Identifier	TOK_LE		6319772	1					
ANR	6321020	ElseStatement	else		6319772	0					
ANR	6321021	IfStatement	if ( c == '<' )		6319772	0					
ANR	6321022	Condition	c == '<'	2530:13:52573:52580	6319772	0	True				
ANR	6321023	EqualityExpression	c == '<'		6319772	0		==			
ANR	6321024	Identifier	c		6319772	0					
ANR	6321025	PrimaryExpression	'<'		6319772	1					
ANR	6321026	CompoundStatement		300:23:6337:6337	6319772	1					
ANR	6321027	ExpressionStatement	"PEEKC ( c , p )"	2531:3:52588:52600	6319772	0	True				
ANR	6321028	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321029	Callee	PEEKC		6319772	0					
ANR	6321030	Identifier	PEEKC		6319772	0					
ANR	6321031	ArgumentList	c		6319772	1					
ANR	6321032	Argument	c		6319772	0					
ANR	6321033	Identifier	c		6319772	0					
ANR	6321034	Argument	p		6319772	1					
ANR	6321035	Identifier	p		6319772	0					
ANR	6321036	IfStatement	if ( c == '=' )		6319772	1					
ANR	6321037	Condition	c == '='	2532:7:52609:52616	6319772	0	True				
ANR	6321038	EqualityExpression	c == '='		6319772	0		==			
ANR	6321039	Identifier	c		6319772	0					
ANR	6321040	PrimaryExpression	'='		6319772	1					
ANR	6321041	CompoundStatement		302:17:6373:6373	6319772	1					
ANR	6321042	ExpressionStatement	p ++	2533:4:52625:52628	6319772	0	True				
ANR	6321043	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321044	Identifier	p		6319772	0					
ANR	6321045	IncDec	++		6319772	1					
ANR	6321046	ExpressionStatement	tok = TOK_A_SHL	2534:4:52634:52649	6319772	1	True				
ANR	6321047	AssignmentExpression	tok = TOK_A_SHL		6319772	0		=			
ANR	6321048	Identifier	tok		6319772	0					
ANR	6321049	Identifier	TOK_A_SHL		6319772	1					
ANR	6321050	ElseStatement	else		6319772	0					
ANR	6321051	CompoundStatement		305:10:6415:6415	6319772	0					
ANR	6321052	ExpressionStatement	tok = TOK_SHL	2536:4:52667:52680	6319772	0	True				
ANR	6321053	AssignmentExpression	tok = TOK_SHL		6319772	0		=			
ANR	6321054	Identifier	tok		6319772	0					
ANR	6321055	Identifier	TOK_SHL		6319772	1					
ANR	6321056	ElseStatement	else		6319772	0					
ANR	6321057	CompoundStatement		308:9:6450:6450	6319772	0					
ANR	6321058	ExpressionStatement	tok = TOK_LT	2539:3:52701:52713	6319772	0	True				
ANR	6321059	AssignmentExpression	tok = TOK_LT		6319772	0		=			
ANR	6321060	Identifier	tok		6319772	0					
ANR	6321061	Identifier	TOK_LT		6319772	1					
ANR	6321062	BreakStatement	break ;	2541:2:52721:52726	6319772	122	True				
ANR	6321063	Label	case '>' :	2543:1:52730:52738	6319772	123	True				
ANR	6321064	ExpressionStatement	"PEEKC ( c , p )"	2544:2:52742:52754	6319772	124	True				
ANR	6321065	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321066	Callee	PEEKC		6319772	0					
ANR	6321067	Identifier	PEEKC		6319772	0					
ANR	6321068	ArgumentList	c		6319772	1					
ANR	6321069	Argument	c		6319772	0					
ANR	6321070	Identifier	c		6319772	0					
ANR	6321071	Argument	p		6319772	1					
ANR	6321072	Identifier	p		6319772	0					
ANR	6321073	IfStatement	if ( c == '=' )		6319772	125					
ANR	6321074	Condition	c == '='	2545:6:52762:52769	6319772	0	True				
ANR	6321075	EqualityExpression	c == '='		6319772	0		==			
ANR	6321076	Identifier	c		6319772	0					
ANR	6321077	PrimaryExpression	'='		6319772	1					
ANR	6321078	CompoundStatement		315:16:6526:6526	6319772	1					
ANR	6321079	ExpressionStatement	p ++	2546:3:52777:52780	6319772	0	True				
ANR	6321080	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321081	Identifier	p		6319772	0					
ANR	6321082	IncDec	++		6319772	1					
ANR	6321083	ExpressionStatement	tok = TOK_GE	2547:3:52785:52797	6319772	1	True				
ANR	6321084	AssignmentExpression	tok = TOK_GE		6319772	0		=			
ANR	6321085	Identifier	tok		6319772	0					
ANR	6321086	Identifier	TOK_GE		6319772	1					
ANR	6321087	ElseStatement	else		6319772	0					
ANR	6321088	IfStatement	if ( c == '>' )		6319772	0					
ANR	6321089	Condition	c == '>'	2548:13:52812:52819	6319772	0	True				
ANR	6321090	EqualityExpression	c == '>'		6319772	0		==			
ANR	6321091	Identifier	c		6319772	0					
ANR	6321092	PrimaryExpression	'>'		6319772	1					
ANR	6321093	CompoundStatement		318:23:6576:6576	6319772	1					
ANR	6321094	ExpressionStatement	"PEEKC ( c , p )"	2549:3:52827:52839	6319772	0	True				
ANR	6321095	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321096	Callee	PEEKC		6319772	0					
ANR	6321097	Identifier	PEEKC		6319772	0					
ANR	6321098	ArgumentList	c		6319772	1					
ANR	6321099	Argument	c		6319772	0					
ANR	6321100	Identifier	c		6319772	0					
ANR	6321101	Argument	p		6319772	1					
ANR	6321102	Identifier	p		6319772	0					
ANR	6321103	IfStatement	if ( c == '=' )		6319772	1					
ANR	6321104	Condition	c == '='	2550:7:52848:52855	6319772	0	True				
ANR	6321105	EqualityExpression	c == '='		6319772	0		==			
ANR	6321106	Identifier	c		6319772	0					
ANR	6321107	PrimaryExpression	'='		6319772	1					
ANR	6321108	CompoundStatement		320:17:6612:6612	6319772	1					
ANR	6321109	ExpressionStatement	p ++	2551:4:52864:52867	6319772	0	True				
ANR	6321110	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321111	Identifier	p		6319772	0					
ANR	6321112	IncDec	++		6319772	1					
ANR	6321113	ExpressionStatement	tok = TOK_A_SAR	2552:4:52873:52888	6319772	1	True				
ANR	6321114	AssignmentExpression	tok = TOK_A_SAR		6319772	0		=			
ANR	6321115	Identifier	tok		6319772	0					
ANR	6321116	Identifier	TOK_A_SAR		6319772	1					
ANR	6321117	ElseStatement	else		6319772	0					
ANR	6321118	CompoundStatement		323:10:6654:6654	6319772	0					
ANR	6321119	ExpressionStatement	tok = TOK_SAR	2554:4:52906:52919	6319772	0	True				
ANR	6321120	AssignmentExpression	tok = TOK_SAR		6319772	0		=			
ANR	6321121	Identifier	tok		6319772	0					
ANR	6321122	Identifier	TOK_SAR		6319772	1					
ANR	6321123	ElseStatement	else		6319772	0					
ANR	6321124	CompoundStatement		326:9:6689:6689	6319772	0					
ANR	6321125	ExpressionStatement	tok = TOK_GT	2557:3:52940:52952	6319772	0	True				
ANR	6321126	AssignmentExpression	tok = TOK_GT		6319772	0		=			
ANR	6321127	Identifier	tok		6319772	0					
ANR	6321128	Identifier	TOK_GT		6319772	1					
ANR	6321129	BreakStatement	break ;	2559:2:52960:52965	6319772	126	True				
ANR	6321130	Label	case '&' :	2561:1:52969:52977	6319772	127	True				
ANR	6321131	ExpressionStatement	"PEEKC ( c , p )"	2562:2:52981:52993	6319772	128	True				
ANR	6321132	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321133	Callee	PEEKC		6319772	0					
ANR	6321134	Identifier	PEEKC		6319772	0					
ANR	6321135	ArgumentList	c		6319772	1					
ANR	6321136	Argument	c		6319772	0					
ANR	6321137	Identifier	c		6319772	0					
ANR	6321138	Argument	p		6319772	1					
ANR	6321139	Identifier	p		6319772	0					
ANR	6321140	IfStatement	if ( c == '&' )		6319772	129					
ANR	6321141	Condition	c == '&'	2563:6:53001:53008	6319772	0	True				
ANR	6321142	EqualityExpression	c == '&'		6319772	0		==			
ANR	6321143	Identifier	c		6319772	0					
ANR	6321144	PrimaryExpression	'&'		6319772	1					
ANR	6321145	CompoundStatement		333:16:6765:6765	6319772	1					
ANR	6321146	ExpressionStatement	p ++	2564:3:53016:53019	6319772	0	True				
ANR	6321147	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321148	Identifier	p		6319772	0					
ANR	6321149	IncDec	++		6319772	1					
ANR	6321150	ExpressionStatement	tok = TOK_LAND	2565:3:53024:53038	6319772	1	True				
ANR	6321151	AssignmentExpression	tok = TOK_LAND		6319772	0		=			
ANR	6321152	Identifier	tok		6319772	0					
ANR	6321153	Identifier	TOK_LAND		6319772	1					
ANR	6321154	ElseStatement	else		6319772	0					
ANR	6321155	IfStatement	if ( c == '=' )		6319772	0					
ANR	6321156	Condition	c == '='	2566:13:53053:53060	6319772	0	True				
ANR	6321157	EqualityExpression	c == '='		6319772	0		==			
ANR	6321158	Identifier	c		6319772	0					
ANR	6321159	PrimaryExpression	'='		6319772	1					
ANR	6321160	CompoundStatement		336:23:6817:6817	6319772	1					
ANR	6321161	ExpressionStatement	p ++	2567:3:53068:53071	6319772	0	True				
ANR	6321162	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321163	Identifier	p		6319772	0					
ANR	6321164	IncDec	++		6319772	1					
ANR	6321165	ExpressionStatement	tok = TOK_A_AND	2568:3:53076:53091	6319772	1	True				
ANR	6321166	AssignmentExpression	tok = TOK_A_AND		6319772	0		=			
ANR	6321167	Identifier	tok		6319772	0					
ANR	6321168	Identifier	TOK_A_AND		6319772	1					
ANR	6321169	ElseStatement	else		6319772	0					
ANR	6321170	CompoundStatement		339:9:6856:6856	6319772	0					
ANR	6321171	ExpressionStatement	tok = '&'	2570:3:53107:53116	6319772	0	True				
ANR	6321172	AssignmentExpression	tok = '&'		6319772	0		=			
ANR	6321173	Identifier	tok		6319772	0					
ANR	6321174	PrimaryExpression	'&'		6319772	1					
ANR	6321175	BreakStatement	break ;	2572:2:53124:53129	6319772	130	True				
ANR	6321176	Label	case '|' :	2574:1:53133:53141	6319772	131	True				
ANR	6321177	ExpressionStatement	"PEEKC ( c , p )"	2575:2:53145:53157	6319772	132	True				
ANR	6321178	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321179	Callee	PEEKC		6319772	0					
ANR	6321180	Identifier	PEEKC		6319772	0					
ANR	6321181	ArgumentList	c		6319772	1					
ANR	6321182	Argument	c		6319772	0					
ANR	6321183	Identifier	c		6319772	0					
ANR	6321184	Argument	p		6319772	1					
ANR	6321185	Identifier	p		6319772	0					
ANR	6321186	IfStatement	if ( c == '|' )		6319772	133					
ANR	6321187	Condition	c == '|'	2576:6:53165:53172	6319772	0	True				
ANR	6321188	EqualityExpression	c == '|'		6319772	0		==			
ANR	6321189	Identifier	c		6319772	0					
ANR	6321190	PrimaryExpression	'|'		6319772	1					
ANR	6321191	CompoundStatement		346:16:6929:6929	6319772	1					
ANR	6321192	ExpressionStatement	p ++	2577:3:53180:53183	6319772	0	True				
ANR	6321193	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321194	Identifier	p		6319772	0					
ANR	6321195	IncDec	++		6319772	1					
ANR	6321196	ExpressionStatement	tok = TOK_LOR	2578:3:53188:53201	6319772	1	True				
ANR	6321197	AssignmentExpression	tok = TOK_LOR		6319772	0		=			
ANR	6321198	Identifier	tok		6319772	0					
ANR	6321199	Identifier	TOK_LOR		6319772	1					
ANR	6321200	ElseStatement	else		6319772	0					
ANR	6321201	IfStatement	if ( c == '=' )		6319772	0					
ANR	6321202	Condition	c == '='	2579:13:53216:53223	6319772	0	True				
ANR	6321203	EqualityExpression	c == '='		6319772	0		==			
ANR	6321204	Identifier	c		6319772	0					
ANR	6321205	PrimaryExpression	'='		6319772	1					
ANR	6321206	CompoundStatement		349:23:6980:6980	6319772	1					
ANR	6321207	ExpressionStatement	p ++	2580:3:53231:53234	6319772	0	True				
ANR	6321208	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321209	Identifier	p		6319772	0					
ANR	6321210	IncDec	++		6319772	1					
ANR	6321211	ExpressionStatement	tok = TOK_A_OR	2581:3:53239:53253	6319772	1	True				
ANR	6321212	AssignmentExpression	tok = TOK_A_OR		6319772	0		=			
ANR	6321213	Identifier	tok		6319772	0					
ANR	6321214	Identifier	TOK_A_OR		6319772	1					
ANR	6321215	ElseStatement	else		6319772	0					
ANR	6321216	CompoundStatement		352:9:7018:7018	6319772	0					
ANR	6321217	ExpressionStatement	tok = '|'	2583:3:53269:53278	6319772	0	True				
ANR	6321218	AssignmentExpression	tok = '|'		6319772	0		=			
ANR	6321219	Identifier	tok		6319772	0					
ANR	6321220	PrimaryExpression	'|'		6319772	1					
ANR	6321221	BreakStatement	break ;	2585:2:53286:53291	6319772	134	True				
ANR	6321222	Label	case '+' :	2587:1:53295:53303	6319772	135	True				
ANR	6321223	ExpressionStatement	"PEEKC ( c , p )"	2588:2:53307:53319	6319772	136	True				
ANR	6321224	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321225	Callee	PEEKC		6319772	0					
ANR	6321226	Identifier	PEEKC		6319772	0					
ANR	6321227	ArgumentList	c		6319772	1					
ANR	6321228	Argument	c		6319772	0					
ANR	6321229	Identifier	c		6319772	0					
ANR	6321230	Argument	p		6319772	1					
ANR	6321231	Identifier	p		6319772	0					
ANR	6321232	IfStatement	if ( c == '+' )		6319772	137					
ANR	6321233	Condition	c == '+'	2589:6:53327:53334	6319772	0	True				
ANR	6321234	EqualityExpression	c == '+'		6319772	0		==			
ANR	6321235	Identifier	c		6319772	0					
ANR	6321236	PrimaryExpression	'+'		6319772	1					
ANR	6321237	CompoundStatement		359:16:7091:7091	6319772	1					
ANR	6321238	ExpressionStatement	p ++	2590:3:53342:53345	6319772	0	True				
ANR	6321239	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321240	Identifier	p		6319772	0					
ANR	6321241	IncDec	++		6319772	1					
ANR	6321242	ExpressionStatement	tok = TOK_INC	2591:3:53350:53363	6319772	1	True				
ANR	6321243	AssignmentExpression	tok = TOK_INC		6319772	0		=			
ANR	6321244	Identifier	tok		6319772	0					
ANR	6321245	Identifier	TOK_INC		6319772	1					
ANR	6321246	ElseStatement	else		6319772	0					
ANR	6321247	IfStatement	if ( c == '=' )		6319772	0					
ANR	6321248	Condition	c == '='	2592:13:53378:53385	6319772	0	True				
ANR	6321249	EqualityExpression	c == '='		6319772	0		==			
ANR	6321250	Identifier	c		6319772	0					
ANR	6321251	PrimaryExpression	'='		6319772	1					
ANR	6321252	CompoundStatement		362:23:7142:7142	6319772	1					
ANR	6321253	ExpressionStatement	p ++	2593:3:53393:53396	6319772	0	True				
ANR	6321254	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321255	Identifier	p		6319772	0					
ANR	6321256	IncDec	++		6319772	1					
ANR	6321257	ExpressionStatement	tok = TOK_A_ADD	2594:3:53401:53416	6319772	1	True				
ANR	6321258	AssignmentExpression	tok = TOK_A_ADD		6319772	0		=			
ANR	6321259	Identifier	tok		6319772	0					
ANR	6321260	Identifier	TOK_A_ADD		6319772	1					
ANR	6321261	ElseStatement	else		6319772	0					
ANR	6321262	CompoundStatement		365:9:7181:7181	6319772	0					
ANR	6321263	ExpressionStatement	tok = '+'	2596:3:53432:53441	6319772	0	True				
ANR	6321264	AssignmentExpression	tok = '+'		6319772	0		=			
ANR	6321265	Identifier	tok		6319772	0					
ANR	6321266	PrimaryExpression	'+'		6319772	1					
ANR	6321267	BreakStatement	break ;	2598:2:53449:53454	6319772	138	True				
ANR	6321268	Label	case '-' :	2600:1:53458:53466	6319772	139	True				
ANR	6321269	ExpressionStatement	"PEEKC ( c , p )"	2601:2:53470:53482	6319772	140	True				
ANR	6321270	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321271	Callee	PEEKC		6319772	0					
ANR	6321272	Identifier	PEEKC		6319772	0					
ANR	6321273	ArgumentList	c		6319772	1					
ANR	6321274	Argument	c		6319772	0					
ANR	6321275	Identifier	c		6319772	0					
ANR	6321276	Argument	p		6319772	1					
ANR	6321277	Identifier	p		6319772	0					
ANR	6321278	IfStatement	if ( c == '-' )		6319772	141					
ANR	6321279	Condition	c == '-'	2602:6:53490:53497	6319772	0	True				
ANR	6321280	EqualityExpression	c == '-'		6319772	0		==			
ANR	6321281	Identifier	c		6319772	0					
ANR	6321282	PrimaryExpression	'-'		6319772	1					
ANR	6321283	CompoundStatement		372:16:7254:7254	6319772	1					
ANR	6321284	ExpressionStatement	p ++	2603:3:53505:53508	6319772	0	True				
ANR	6321285	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321286	Identifier	p		6319772	0					
ANR	6321287	IncDec	++		6319772	1					
ANR	6321288	ExpressionStatement	tok = TOK_DEC	2604:3:53513:53526	6319772	1	True				
ANR	6321289	AssignmentExpression	tok = TOK_DEC		6319772	0		=			
ANR	6321290	Identifier	tok		6319772	0					
ANR	6321291	Identifier	TOK_DEC		6319772	1					
ANR	6321292	ElseStatement	else		6319772	0					
ANR	6321293	IfStatement	if ( c == '=' )		6319772	0					
ANR	6321294	Condition	c == '='	2605:13:53541:53548	6319772	0	True				
ANR	6321295	EqualityExpression	c == '='		6319772	0		==			
ANR	6321296	Identifier	c		6319772	0					
ANR	6321297	PrimaryExpression	'='		6319772	1					
ANR	6321298	CompoundStatement		375:23:7305:7305	6319772	1					
ANR	6321299	ExpressionStatement	p ++	2606:3:53556:53559	6319772	0	True				
ANR	6321300	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321301	Identifier	p		6319772	0					
ANR	6321302	IncDec	++		6319772	1					
ANR	6321303	ExpressionStatement	tok = TOK_A_SUB	2607:3:53564:53579	6319772	1	True				
ANR	6321304	AssignmentExpression	tok = TOK_A_SUB		6319772	0		=			
ANR	6321305	Identifier	tok		6319772	0					
ANR	6321306	Identifier	TOK_A_SUB		6319772	1					
ANR	6321307	ElseStatement	else		6319772	0					
ANR	6321308	IfStatement	if ( c == '>' )		6319772	0					
ANR	6321309	Condition	c == '>'	2608:13:53594:53601	6319772	0	True				
ANR	6321310	EqualityExpression	c == '>'		6319772	0		==			
ANR	6321311	Identifier	c		6319772	0					
ANR	6321312	PrimaryExpression	'>'		6319772	1					
ANR	6321313	CompoundStatement		378:23:7358:7358	6319772	1					
ANR	6321314	ExpressionStatement	p ++	2609:3:53609:53612	6319772	0	True				
ANR	6321315	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321316	Identifier	p		6319772	0					
ANR	6321317	IncDec	++		6319772	1					
ANR	6321318	ExpressionStatement	tok = TOK_ARROW	2610:3:53617:53632	6319772	1	True				
ANR	6321319	AssignmentExpression	tok = TOK_ARROW		6319772	0		=			
ANR	6321320	Identifier	tok		6319772	0					
ANR	6321321	Identifier	TOK_ARROW		6319772	1					
ANR	6321322	ElseStatement	else		6319772	0					
ANR	6321323	CompoundStatement		381:9:7397:7397	6319772	0					
ANR	6321324	ExpressionStatement	tok = '-'	2612:3:53648:53657	6319772	0	True				
ANR	6321325	AssignmentExpression	tok = '-'		6319772	0		=			
ANR	6321326	Identifier	tok		6319772	0					
ANR	6321327	PrimaryExpression	'-'		6319772	1					
ANR	6321328	BreakStatement	break ;	2614:2:53665:53670	6319772	142	True				
ANR	6321329	Statement	PARSE2	2616:2:53675:53680	6319772	143	True				
ANR	6321330	Statement	(	2616:9:53682:53682	6319772	144	True				
ANR	6321331	Statement	'!'	2616:10:53683:53685	6319772	145	True				
ANR	6321332	Statement	","	2616:13:53686:53686	6319772	146	True				
ANR	6321333	Statement	'!'	2616:15:53688:53690	6319772	147	True				
ANR	6321334	Statement	","	2616:18:53691:53691	6319772	148	True				
ANR	6321335	Statement	'='	2616:20:53693:53695	6319772	149	True				
ANR	6321336	Statement	","	2616:23:53696:53696	6319772	150	True				
ANR	6321337	Statement	TOK_NE	2616:25:53698:53703	6319772	151	True				
ANR	6321338	Statement	)	2616:31:53704:53704	6319772	152	True				
ANR	6321339	Statement	PARSE2	2617:2:53708:53713	6319772	153	True				
ANR	6321340	Statement	(	2617:9:53715:53715	6319772	154	True				
ANR	6321341	Statement	'='	2617:10:53716:53718	6319772	155	True				
ANR	6321342	Statement	","	2617:13:53719:53719	6319772	156	True				
ANR	6321343	Statement	'='	2617:15:53721:53723	6319772	157	True				
ANR	6321344	Statement	","	2617:18:53724:53724	6319772	158	True				
ANR	6321345	Statement	'='	2617:20:53726:53728	6319772	159	True				
ANR	6321346	Statement	","	2617:23:53729:53729	6319772	160	True				
ANR	6321347	Statement	TOK_EQ	2617:25:53731:53736	6319772	161	True				
ANR	6321348	Statement	)	2617:31:53737:53737	6319772	162	True				
ANR	6321349	Statement	PARSE2	2618:2:53741:53746	6319772	163	True				
ANR	6321350	Statement	(	2618:9:53748:53748	6319772	164	True				
ANR	6321351	Statement	'*'	2618:10:53749:53751	6319772	165	True				
ANR	6321352	Statement	","	2618:13:53752:53752	6319772	166	True				
ANR	6321353	Statement	'*'	2618:15:53754:53756	6319772	167	True				
ANR	6321354	Statement	","	2618:18:53757:53757	6319772	168	True				
ANR	6321355	Statement	'='	2618:20:53759:53761	6319772	169	True				
ANR	6321356	Statement	","	2618:23:53762:53762	6319772	170	True				
ANR	6321357	Statement	TOK_A_MUL	2618:25:53764:53772	6319772	171	True				
ANR	6321358	Statement	)	2618:34:53773:53773	6319772	172	True				
ANR	6321359	Statement	PARSE2	2619:2:53777:53782	6319772	173	True				
ANR	6321360	Statement	(	2619:9:53784:53784	6319772	174	True				
ANR	6321361	Statement	'%'	2619:10:53785:53787	6319772	175	True				
ANR	6321362	Statement	","	2619:13:53788:53788	6319772	176	True				
ANR	6321363	Statement	'%'	2619:15:53790:53792	6319772	177	True				
ANR	6321364	Statement	","	2619:18:53793:53793	6319772	178	True				
ANR	6321365	Statement	'='	2619:20:53795:53797	6319772	179	True				
ANR	6321366	Statement	","	2619:23:53798:53798	6319772	180	True				
ANR	6321367	Statement	TOK_A_MOD	2619:25:53800:53808	6319772	181	True				
ANR	6321368	Statement	)	2619:34:53809:53809	6319772	182	True				
ANR	6321369	Statement	PARSE2	2620:2:53813:53818	6319772	183	True				
ANR	6321370	Statement	(	2620:9:53820:53820	6319772	184	True				
ANR	6321371	Statement	'^'	2620:10:53821:53823	6319772	185	True				
ANR	6321372	Statement	","	2620:13:53824:53824	6319772	186	True				
ANR	6321373	Statement	'^'	2620:15:53826:53828	6319772	187	True				
ANR	6321374	Statement	","	2620:18:53829:53829	6319772	188	True				
ANR	6321375	Statement	'='	2620:20:53831:53833	6319772	189	True				
ANR	6321376	Statement	","	2620:23:53834:53834	6319772	190	True				
ANR	6321377	Statement	TOK_A_XOR	2620:25:53836:53844	6319772	191	True				
ANR	6321378	Statement	)	2620:34:53845:53845	6319772	192	True				
ANR	6321379	Label	case '/' :	2623:1:53877:53885	6319772	193	True				
ANR	6321380	ExpressionStatement	"PEEKC ( c , p )"	2624:2:53889:53901	6319772	194	True				
ANR	6321381	CallExpression	"PEEKC ( c , p )"		6319772	0					
ANR	6321382	Callee	PEEKC		6319772	0					
ANR	6321383	Identifier	PEEKC		6319772	0					
ANR	6321384	ArgumentList	c		6319772	1					
ANR	6321385	Argument	c		6319772	0					
ANR	6321386	Identifier	c		6319772	0					
ANR	6321387	Argument	p		6319772	1					
ANR	6321388	Identifier	p		6319772	0					
ANR	6321389	IfStatement	if ( c == '*' )		6319772	195					
ANR	6321390	Condition	c == '*'	2625:6:53909:53916	6319772	0	True				
ANR	6321391	EqualityExpression	c == '*'		6319772	0		==			
ANR	6321392	Identifier	c		6319772	0					
ANR	6321393	PrimaryExpression	'*'		6319772	1					
ANR	6321394	CompoundStatement		395:16:7673:7673	6319772	1					
ANR	6321395	ExpressionStatement	p = parse_comment ( p )	2626:3:53924:53945	6319772	0	True				
ANR	6321396	AssignmentExpression	p = parse_comment ( p )		6319772	0		=			
ANR	6321397	Identifier	p		6319772	0					
ANR	6321398	CallExpression	parse_comment ( p )		6319772	1					
ANR	6321399	Callee	parse_comment		6319772	0					
ANR	6321400	Identifier	parse_comment		6319772	0					
ANR	6321401	ArgumentList	p		6319772	1					
ANR	6321402	Argument	p		6319772	0					
ANR	6321403	Identifier	p		6319772	0					
ANR	6321404	ExpressionStatement	tok = ' '	2628:3:53988:53997	6319772	1	True				
ANR	6321405	AssignmentExpression	tok = ' '		6319772	0		=			
ANR	6321406	Identifier	tok		6319772	0					
ANR	6321407	PrimaryExpression	' '		6319772	1					
ANR	6321408	GotoStatement	goto keep_tok_flags ;	2629:3:54002:54021	6319772	2	True				
ANR	6321409	Identifier	keep_tok_flags		6319772	0					
ANR	6321410	ElseStatement	else		6319772	0					
ANR	6321411	IfStatement	if ( c == '/' )		6319772	0					
ANR	6321412	Condition	c == '/'	2630:13:54036:54043	6319772	0	True				
ANR	6321413	EqualityExpression	c == '/'		6319772	0		==			
ANR	6321414	Identifier	c		6319772	0					
ANR	6321415	PrimaryExpression	'/'		6319772	1					
ANR	6321416	CompoundStatement		400:23:7800:7800	6319772	1					
ANR	6321417	ExpressionStatement	p = parse_line_comment ( p )	2631:3:54051:54077	6319772	0	True				
ANR	6321418	AssignmentExpression	p = parse_line_comment ( p )		6319772	0		=			
ANR	6321419	Identifier	p		6319772	0					
ANR	6321420	CallExpression	parse_line_comment ( p )		6319772	1					
ANR	6321421	Callee	parse_line_comment		6319772	0					
ANR	6321422	Identifier	parse_line_comment		6319772	0					
ANR	6321423	ArgumentList	p		6319772	1					
ANR	6321424	Argument	p		6319772	0					
ANR	6321425	Identifier	p		6319772	0					
ANR	6321426	ExpressionStatement	tok = ' '	2632:3:54082:54091	6319772	1	True				
ANR	6321427	AssignmentExpression	tok = ' '		6319772	0		=			
ANR	6321428	Identifier	tok		6319772	0					
ANR	6321429	PrimaryExpression	' '		6319772	1					
ANR	6321430	GotoStatement	goto keep_tok_flags ;	2633:3:54096:54115	6319772	2	True				
ANR	6321431	Identifier	keep_tok_flags		6319772	0					
ANR	6321432	ElseStatement	else		6319772	0					
ANR	6321433	IfStatement	if ( c == '=' )		6319772	0					
ANR	6321434	Condition	c == '='	2634:13:54130:54137	6319772	0	True				
ANR	6321435	EqualityExpression	c == '='		6319772	0		==			
ANR	6321436	Identifier	c		6319772	0					
ANR	6321437	PrimaryExpression	'='		6319772	1					
ANR	6321438	CompoundStatement		404:23:7894:7894	6319772	1					
ANR	6321439	ExpressionStatement	p ++	2635:3:54145:54148	6319772	0	True				
ANR	6321440	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321441	Identifier	p		6319772	0					
ANR	6321442	IncDec	++		6319772	1					
ANR	6321443	ExpressionStatement	tok = TOK_A_DIV	2636:3:54153:54168	6319772	1	True				
ANR	6321444	AssignmentExpression	tok = TOK_A_DIV		6319772	0		=			
ANR	6321445	Identifier	tok		6319772	0					
ANR	6321446	Identifier	TOK_A_DIV		6319772	1					
ANR	6321447	ElseStatement	else		6319772	0					
ANR	6321448	CompoundStatement		407:9:7933:7933	6319772	0					
ANR	6321449	ExpressionStatement	tok = '/'	2638:3:54184:54193	6319772	0	True				
ANR	6321450	AssignmentExpression	tok = '/'		6319772	0		=			
ANR	6321451	Identifier	tok		6319772	0					
ANR	6321452	PrimaryExpression	'/'		6319772	1					
ANR	6321453	BreakStatement	break ;	2640:2:54201:54206	6319772	196	True				
ANR	6321454	Label	case '(' :	2643:1:54231:54239	6319772	197	True				
ANR	6321455	Label	case ')' :	2644:1:54242:54250	6319772	198	True				
ANR	6321456	Label	case '[' :	2645:1:54253:54261	6319772	199	True				
ANR	6321457	Label	case ']' :	2646:1:54264:54272	6319772	200	True				
ANR	6321458	Label	case '{' :	2647:1:54275:54283	6319772	201	True				
ANR	6321459	Label	case '}' :	2648:1:54286:54294	6319772	202	True				
ANR	6321460	Label	"case ',' :"	2649:1:54297:54305	6319772	203	True				
ANR	6321461	Label	case ';' :	2650:1:54308:54316	6319772	204	True				
ANR	6321462	Label	case ':' :	2651:1:54319:54327	6319772	205	True				
ANR	6321463	Label	case '?' :	2652:1:54330:54338	6319772	206	True				
ANR	6321464	Label	case '~' :	2653:1:54341:54349	6319772	207	True				
ANR	6321465	Label	case '$' :	2654:1:54352:54360	6319772	208	True				
ANR	6321466	Label	case '@' :	2655:1:54392:54400	6319772	209	True				
ANR	6321467	ExpressionStatement	tok = c	2656:2:54415:54422	6319772	210	True				
ANR	6321468	AssignmentExpression	tok = c		6319772	0		=			
ANR	6321469	Identifier	tok		6319772	0					
ANR	6321470	Identifier	c		6319772	1					
ANR	6321471	ExpressionStatement	p ++	2657:2:54426:54429	6319772	211	True				
ANR	6321472	PostIncDecOperationExpression	p ++		6319772	0					
ANR	6321473	Identifier	p		6319772	0					
ANR	6321474	IncDec	++		6319772	1					
ANR	6321475	BreakStatement	break ;	2658:2:54433:54438	6319772	212	True				
ANR	6321476	Label	default :	2659:1:54441:54448	6319772	213	True				
ANR	6321477	Identifier	default		6319772	0					
ANR	6321478	ExpressionStatement	"tcc_error ( ""unrecognized character \\\\x%02x"" , c )"	2660:2:54452:54499	6319772	214	True				
ANR	6321479	CallExpression	"tcc_error ( ""unrecognized character \\\\x%02x"" , c )"		6319772	0					
ANR	6321480	Callee	tcc_error		6319772	0					
ANR	6321481	Identifier	tcc_error		6319772	0					
ANR	6321482	ArgumentList	"""unrecognized character \\\\x%02x"""		6319772	1					
ANR	6321483	Argument	"""unrecognized character \\\\x%02x"""		6319772	0					
ANR	6321484	PrimaryExpression	"""unrecognized character \\\\x%02x"""		6319772	0					
ANR	6321485	Argument	c		6319772	1					
ANR	6321486	Identifier	c		6319772	0					
ANR	6321487	BreakStatement	break ;	2661:2:54503:54508	6319772	215	True				
ANR	6321488	ExpressionStatement	tok_flags = 0	2663:1:54514:54527	6319772	8	True				
ANR	6321489	AssignmentExpression	tok_flags = 0		6319772	0		=			
ANR	6321490	Identifier	tok_flags		6319772	0					
ANR	6321491	PrimaryExpression	0		6319772	1					
ANR	6321492	Label	keep_tok_flags :	2664:0:54529:54543	6319772	9	True				
ANR	6321493	Identifier	keep_tok_flags		6319772	0					
ANR	6321494	ExpressionStatement	file -> buf_ptr = p	2665:1:54546:54563	6319772	10	True				
ANR	6321495	AssignmentExpression	file -> buf_ptr = p		6319772	0		=			
ANR	6321496	PtrMemberAccess	file -> buf_ptr		6319772	0					
ANR	6321497	Identifier	file		6319772	0					
ANR	6321498	Identifier	buf_ptr		6319772	1					
ANR	6321499	Identifier	p		6319772	1					
ANR	6321500	ExpressionStatement	"printf ( ""token = %s\\n"" , get_tok_str ( tok , & tokc ) )"	2667:1:54591:54640	6319772	11	True				
ANR	6321501	CallExpression	"printf ( ""token = %s\\n"" , get_tok_str ( tok , & tokc ) )"		6319772	0					
ANR	6321502	Callee	printf		6319772	0					
ANR	6321503	Identifier	printf		6319772	0					
ANR	6321504	ArgumentList	"""token = %s\\n"""		6319772	1					
ANR	6321505	Argument	"""token = %s\\n"""		6319772	0					
ANR	6321506	PrimaryExpression	"""token = %s\\n"""		6319772	0					
ANR	6321507	Argument	"get_tok_str ( tok , & tokc )"		6319772	1					
ANR	6321508	CallExpression	"get_tok_str ( tok , & tokc )"		6319772	0					
ANR	6321509	Callee	get_tok_str		6319772	0					
ANR	6321510	Identifier	get_tok_str		6319772	0					
ANR	6321511	ArgumentList	tok		6319772	1					
ANR	6321512	Argument	tok		6319772	0					
ANR	6321513	Identifier	tok		6319772	0					
ANR	6321514	Argument	& tokc		6319772	1					
ANR	6321515	UnaryOperationExpression	& tokc		6319772	0					
ANR	6321516	UnaryOperator	&		6319772	0					
ANR	6321517	Identifier	tokc		6319772	1					
ANR	6321518	ReturnType	static inline void		6319772	1					
ANR	6321519	Identifier	next_nomacro1		6319772	2					
ANR	6321520	ParameterList			6319772	3					
ANR	6321521	CFGEntryNode	ENTRY		6319772		True				
ANR	6321522	CFGExitNode	EXIT		6319772		True				
ANR	6321523	InfiniteForNode	true		6319772		True				
ANR	6321524	InfiniteForNode	true		6319772		True				
ANR	6321525	InfiniteForNode	true		6319772		True				
ANR	6321526	Symbol	tokcstr . data		6319772						
ANR	6321527	Symbol	* ( int8_t * ) tokcstr . data		6319772						
ANR	6321528	Symbol	PARSE_FLAG_LINEFEED		6319772						
ANR	6321529	Symbol	tok_alloc		6319772						
ANR	6321530	Symbol	TOK_LOR		6319772						
ANR	6321531	Symbol	TOK_FLAG_EOF		6319772						
ANR	6321532	Symbol	TOK_HASH_INIT		6319772						
ANR	6321533	Symbol	& str		6319772						
ANR	6321534	Symbol	tokc . cstr		6319772						
ANR	6321535	Symbol	TOK_A_SUB		6319772						
ANR	6321536	Symbol	tok_flags		6319772						
ANR	6321537	Symbol	len		6319772						
ANR	6321538	Symbol	TOK_A_OR		6319772						
ANR	6321539	Symbol	ts -> tok		6319772						
ANR	6321540	Symbol	~TOK_FLAG_EOF		6319772						
ANR	6321541	Symbol	TOK_CCHAR		6319772						
ANR	6321542	Symbol	TOK_LCHAR		6319772						
ANR	6321543	Symbol	& tokc		6319772						
ANR	6321544	Symbol	s1		6319772						
ANR	6321545	Symbol	TOK_ARROW		6319772						
ANR	6321546	Symbol	TOK_HASH_SIZE		6319772						
ANR	6321547	Symbol	TOK_LT		6319772						
ANR	6321548	Symbol	tokc		6319772						
ANR	6321549	Symbol	TOK_STR		6319772						
ANR	6321550	Symbol	* ts		6319772						
ANR	6321551	Symbol	* file		6319772						
ANR	6321552	Symbol	str		6319772						
ANR	6321553	Symbol	tok_alloc_new		6319772						
ANR	6321554	Symbol	ts -> str		6319772						
ANR	6321555	Symbol	TOK_LE		6319772						
ANR	6321556	Symbol	file -> buf_end		6319772						
ANR	6321557	Symbol	tokcstr . size		6319772						
ANR	6321558	Symbol	tok		6319772						
ANR	6321559	Symbol	file		6319772						
ANR	6321560	Symbol	* ( nwchar_t * ) tokcstr . data		6319772						
ANR	6321561	Symbol	str . data		6319772						
ANR	6321562	Symbol	& tokcstr		6319772						
ANR	6321563	Symbol	file -> buf_ptr		6319772						
ANR	6321564	Symbol	file -> line_num		6319772						
ANR	6321565	Symbol	TOK_HASH_FUNC		6319772						
ANR	6321566	Symbol	sep		6319772						
ANR	6321567	Symbol	c		6319772						
ANR	6321568	Symbol	* p1		6319772						
ANR	6321569	Symbol	ch		6319772						
ANR	6321570	Symbol	~TOK_FLAG_ENDIF		6319772						
ANR	6321571	Symbol	* tokcstr		6319772						
ANR	6321572	Symbol	is_long		6319772						
ANR	6321573	Symbol	h		6319772						
ANR	6321574	Symbol	TOK_FLAG_ENDIF		6319772						
ANR	6321575	Symbol	char_size		6319772						
ANR	6321576	Symbol	p		6319772						
ANR	6321577	Symbol	t		6319772						
ANR	6321578	Symbol	CH_EOF		6319772						
ANR	6321579	Symbol	TOK_TWOSHARPS		6319772						
ANR	6321580	Symbol	parse_line_comment		6319772						
ANR	6321581	Symbol	parse_comment		6319772						
ANR	6321582	Symbol	ts		6319772						
ANR	6321583	Symbol	get_tok_str		6319772						
ANR	6321584	Symbol	s1 -> include_stack_ptr		6319772						
ANR	6321585	Symbol	* CH_EOF		6319772						
ANR	6321586	Symbol	TOK_INC		6319772						
ANR	6321587	Symbol	TOK_A_SHL		6319772						
ANR	6321588	Symbol	TOK_LINEFEED		6319772						
ANR	6321589	Symbol	TOK_GT		6319772						
ANR	6321590	Symbol	file -> ifndef_macro_saved		6319772						
ANR	6321591	Symbol	PARSE_FLAG_ASM_COMMENTS		6319772						
ANR	6321592	Symbol	TOK_SAR		6319772						
ANR	6321593	Symbol	memcmp		6319772						
ANR	6321594	Symbol	* pts		6319772						
ANR	6321595	Symbol	TOK_PPNUM		6319772						
ANR	6321596	Symbol	tokc . i		6319772						
ANR	6321597	Symbol	TOK_GE		6319772						
ANR	6321598	Symbol	tcc_state		6319772						
ANR	6321599	Symbol	file -> filename		6319772						
ANR	6321600	Symbol	NULL		6319772						
ANR	6321601	Symbol	PARSE_FLAG_PREPROCESS		6319772						
ANR	6321602	Symbol	TOK_A_AND		6319772						
ANR	6321603	Symbol	s1 -> include_stack		6319772						
ANR	6321604	Symbol	TOK_SHL		6319772						
ANR	6321605	Symbol	TOK_A_SAR		6319772						
ANR	6321606	Symbol	TOK_DOTS		6319772						
ANR	6321607	Symbol	TOK_LSTR		6319772						
ANR	6321608	Symbol	isidnum_table		6319772						
ANR	6321609	Symbol	parse_flags		6319772						
ANR	6321610	Symbol	p1		6319772						
ANR	6321611	Symbol	& ts -> hash_next		6319772						
ANR	6321612	Symbol	* s1		6319772						
ANR	6321613	Symbol	TOK_FLAG_BOF		6319772						
ANR	6321614	Symbol	parse_pp_string		6319772						
ANR	6321615	Symbol	TOK_FLAG_BOL		6319772						
ANR	6321616	Symbol	TOK_LAND		6319772						
ANR	6321617	Symbol	ts -> len		6319772						
ANR	6321618	Symbol	s1 -> ifdef_stack_ptr		6319772						
ANR	6321619	Symbol	isnum		6319772						
ANR	6321620	Symbol	TOK_A_DIV		6319772						
ANR	6321621	Symbol	file -> ifdef_stack_ptr		6319772						
ANR	6321622	Symbol	TOK_EOF		6319772						
ANR	6321623	Symbol	* c		6319772						
ANR	6321624	Symbol	pts		6319772						
ANR	6321625	Symbol	* tokcstr . data		6319772						
ANR	6321626	Symbol	tokcstr		6319772						
ANR	6321627	Symbol	isid		6319772						
ANR	6321628	Symbol	TOK_DEC		6319772						
ANR	6321629	Symbol	TOK_A_ADD		6319772						
ANR	6321630	Symbol	hash_ident		6319772						
ANR	6321631	Symbol	* p		6319772						
ANR	6321632	Symbol	* isidnum_table		6319772						
ANR	6321633	Function	next_nomacro_spc	2673:0:54744:54991							
ANR	6321634	FunctionDef	next_nomacro_spc ()		6321633	0					
ANR	6321635	CompoundStatement		2674:0:54779:54991	6321633	0					
ANR	6321636	IfStatement	if ( macro_ptr )		6321633	0					
ANR	6321637	Condition	macro_ptr	2675:5:54786:54794	6321633	0	True				
ANR	6321638	Identifier	macro_ptr		6321633	0					
ANR	6321639	CompoundStatement		2:16:17:17	6321633	1					
ANR	6321640	Label	redo :	2676:0:54799:54803	6321633	0	True				
ANR	6321641	Identifier	redo		6321633	0					
ANR	6321642	ExpressionStatement	tok = * macro_ptr	2677:2:54807:54823	6321633	1	True				
ANR	6321643	AssignmentExpression	tok = * macro_ptr		6321633	0		=			
ANR	6321644	Identifier	tok		6321633	0					
ANR	6321645	UnaryOperationExpression	* macro_ptr		6321633	1					
ANR	6321646	UnaryOperator	*		6321633	0					
ANR	6321647	Identifier	macro_ptr		6321633	1					
ANR	6321648	IfStatement	if ( tok )		6321633	2					
ANR	6321649	Condition	tok	2678:6:54831:54833	6321633	0	True				
ANR	6321650	Identifier	tok		6321633	0					
ANR	6321651	CompoundStatement		5:11:56:56	6321633	1					
ANR	6321652	ExpressionStatement	"TOK_GET ( & tok , & macro_ptr , & tokc )"	2679:3:54841:54874	6321633	0	True				
ANR	6321653	CallExpression	"TOK_GET ( & tok , & macro_ptr , & tokc )"		6321633	0					
ANR	6321654	Callee	TOK_GET		6321633	0					
ANR	6321655	Identifier	TOK_GET		6321633	0					
ANR	6321656	ArgumentList	& tok		6321633	1					
ANR	6321657	Argument	& tok		6321633	0					
ANR	6321658	UnaryOperationExpression	& tok		6321633	0					
ANR	6321659	UnaryOperator	&		6321633	0					
ANR	6321660	Identifier	tok		6321633	1					
ANR	6321661	Argument	& macro_ptr		6321633	1					
ANR	6321662	UnaryOperationExpression	& macro_ptr		6321633	0					
ANR	6321663	UnaryOperator	&		6321633	0					
ANR	6321664	Identifier	macro_ptr		6321633	1					
ANR	6321665	Argument	& tokc		6321633	2					
ANR	6321666	UnaryOperationExpression	& tokc		6321633	0					
ANR	6321667	UnaryOperator	&		6321633	0					
ANR	6321668	Identifier	tokc		6321633	1					
ANR	6321669	IfStatement	if ( tok == TOK_LINENUM )		6321633	1					
ANR	6321670	Condition	tok == TOK_LINENUM	2680:7:54883:54900	6321633	0	True				
ANR	6321671	EqualityExpression	tok == TOK_LINENUM		6321633	0		==			
ANR	6321672	Identifier	tok		6321633	0					
ANR	6321673	Identifier	TOK_LINENUM		6321633	1					
ANR	6321674	CompoundStatement		7:27:123:123	6321633	1					
ANR	6321675	ExpressionStatement	file -> line_num = tokc . i	2681:4:54909:54932	6321633	0	True				
ANR	6321676	AssignmentExpression	file -> line_num = tokc . i		6321633	0		=			
ANR	6321677	PtrMemberAccess	file -> line_num		6321633	0					
ANR	6321678	Identifier	file		6321633	0					
ANR	6321679	Identifier	line_num		6321633	1					
ANR	6321680	MemberAccess	tokc . i		6321633	1					
ANR	6321681	Identifier	tokc		6321633	0					
ANR	6321682	Identifier	i		6321633	1					
ANR	6321683	GotoStatement	goto redo ;	2682:4:54938:54947	6321633	1	True				
ANR	6321684	Identifier	redo		6321633	0					
ANR	6321685	ElseStatement	else		6321633	0					
ANR	6321686	CompoundStatement		12:8:186:186	6321633	0					
ANR	6321687	ExpressionStatement	next_nomacro1 ( )	2686:2:54970:54986	6321633	0	True				
ANR	6321688	CallExpression	next_nomacro1 ( )		6321633	0					
ANR	6321689	Callee	next_nomacro1		6321633	0					
ANR	6321690	Identifier	next_nomacro1		6321633	0					
ANR	6321691	ArgumentList			6321633	1					
ANR	6321692	ReturnType	static void		6321633	1					
ANR	6321693	Identifier	next_nomacro_spc		6321633	2					
ANR	6321694	ParameterList			6321633	3					
ANR	6321695	CFGEntryNode	ENTRY		6321633		True				
ANR	6321696	CFGExitNode	EXIT		6321633		True				
ANR	6321697	Symbol	tok		6321633						
ANR	6321698	Symbol	& macro_ptr		6321633						
ANR	6321699	Symbol	& tok		6321633						
ANR	6321700	Symbol	file		6321633						
ANR	6321701	Symbol	macro_ptr		6321633						
ANR	6321702	Symbol	TOK_LINENUM		6321633						
ANR	6321703	Symbol	tokc		6321633						
ANR	6321704	Symbol	* macro_ptr		6321633						
ANR	6321705	Symbol	file -> line_num		6321633						
ANR	6321706	Symbol	& tokc		6321633						
ANR	6321707	Symbol	* file		6321633						
ANR	6321708	Symbol	tokc . i		6321633						
ANR	6321709	Function	next_nomacro	2690:0:54994:55104							
ANR	6321710	FunctionDef	next_nomacro ()		6321709	0					
ANR	6321711	CompoundStatement		2691:0:55026:55104	6321709	0					
ANR	6321712	DoStatement	do		6321709	0					
ANR	6321713	CompoundStatement		2:4:5:5	6321709	0					
ANR	6321714	ExpressionStatement	next_nomacro_spc ( )	2693:2:55036:55055	6321709	0	True				
ANR	6321715	CallExpression	next_nomacro_spc ( )		6321709	0					
ANR	6321716	Callee	next_nomacro_spc		6321709	0					
ANR	6321717	Identifier	next_nomacro_spc		6321709	0					
ANR	6321718	ArgumentList			6321709	1					
ANR	6321719	Condition	tcc_nerr ( ) == 0 && is_space ( tok )	2694:10:55067:55100	6321709	1	True				
ANR	6321720	AndExpression	tcc_nerr ( ) == 0 && is_space ( tok )		6321709	0		&&			
ANR	6321721	EqualityExpression	tcc_nerr ( ) == 0		6321709	0		==			
ANR	6321722	CallExpression	tcc_nerr ( )		6321709	0					
ANR	6321723	Callee	tcc_nerr		6321709	0					
ANR	6321724	Identifier	tcc_nerr		6321709	0					
ANR	6321725	ArgumentList			6321709	1					
ANR	6321726	PrimaryExpression	0		6321709	1					
ANR	6321727	CallExpression	is_space ( tok )		6321709	1					
ANR	6321728	Callee	is_space		6321709	0					
ANR	6321729	Identifier	is_space		6321709	0					
ANR	6321730	ArgumentList	tok		6321709	1					
ANR	6321731	Argument	tok		6321709	0					
ANR	6321732	Identifier	tok		6321709	0					
ANR	6321733	ReturnType	ST_FUNC void		6321709	1					
ANR	6321734	Identifier	next_nomacro		6321709	2					
ANR	6321735	ParameterList			6321709	3					
ANR	6321736	CFGEntryNode	ENTRY		6321709		True				
ANR	6321737	CFGExitNode	EXIT		6321709		True				
ANR	6321738	Symbol	tok		6321709						
ANR	6321739	Symbol	is_space		6321709						
ANR	6321740	Symbol	tcc_nerr		6321709						
ANR	6321741	Function	macro_arg_subst	2698:0:55170:57320							
ANR	6321742	FunctionDef	"macro_arg_subst (Sym * * nested_list , const int * macro_str , Sym * args)"		6321741	0					
ANR	6321743	CompoundStatement		2699:0:55250:57320	6321741	0					
ANR	6321744	IdentifierDeclStatement	"int last_tok , t , spc ;"	2700:1:55253:55273	6321741	0	True				
ANR	6321745	IdentifierDecl	last_tok		6321741	0					
ANR	6321746	IdentifierDeclType	int		6321741	0					
ANR	6321747	Identifier	last_tok		6321741	1					
ANR	6321748	IdentifierDecl	t		6321741	1					
ANR	6321749	IdentifierDeclType	int		6321741	0					
ANR	6321750	Identifier	t		6321741	1					
ANR	6321751	IdentifierDecl	spc		6321741	2					
ANR	6321752	IdentifierDeclType	int		6321741	0					
ANR	6321753	Identifier	spc		6321741	1					
ANR	6321754	IdentifierDeclStatement	const int * st ;	2701:1:55276:55289	6321741	1	True				
ANR	6321755	IdentifierDecl	* st		6321741	0					
ANR	6321756	IdentifierDeclType	const int *		6321741	0					
ANR	6321757	Identifier	st		6321741	1					
ANR	6321758	IdentifierDeclStatement	Sym * s ;	2702:1:55292:55298	6321741	2	True				
ANR	6321759	IdentifierDecl	* s		6321741	0					
ANR	6321760	IdentifierDeclType	Sym *		6321741	0					
ANR	6321761	Identifier	s		6321741	1					
ANR	6321762	IdentifierDeclStatement	CValue cval ;	2703:1:55301:55312	6321741	3	True				
ANR	6321763	IdentifierDecl	cval		6321741	0					
ANR	6321764	IdentifierDeclType	CValue		6321741	0					
ANR	6321765	Identifier	cval		6321741	1					
ANR	6321766	IdentifierDeclStatement	TokenString str ;	2704:1:55315:55330	6321741	4	True				
ANR	6321767	IdentifierDecl	str		6321741	0					
ANR	6321768	IdentifierDeclType	TokenString		6321741	0					
ANR	6321769	Identifier	str		6321741	1					
ANR	6321770	IdentifierDeclStatement	CString cstr ;	2705:1:55333:55345	6321741	5	True				
ANR	6321771	IdentifierDecl	cstr		6321741	0					
ANR	6321772	IdentifierDeclType	CString		6321741	0					
ANR	6321773	Identifier	cstr		6321741	1					
ANR	6321774	ExpressionStatement	tok_str_new ( & str )	2707:1:55349:55367	6321741	6	True				
ANR	6321775	CallExpression	tok_str_new ( & str )		6321741	0					
ANR	6321776	Callee	tok_str_new		6321741	0					
ANR	6321777	Identifier	tok_str_new		6321741	0					
ANR	6321778	ArgumentList	& str		6321741	1					
ANR	6321779	Argument	& str		6321741	0					
ANR	6321780	UnaryOperationExpression	& str		6321741	0					
ANR	6321781	UnaryOperator	&		6321741	0					
ANR	6321782	Identifier	str		6321741	1					
ANR	6321783	ExpressionStatement	last_tok = 0	2708:1:55370:55382	6321741	7	True				
ANR	6321784	AssignmentExpression	last_tok = 0		6321741	0		=			
ANR	6321785	Identifier	last_tok		6321741	0					
ANR	6321786	PrimaryExpression	0		6321741	1					
ANR	6321787	WhileStatement	while ( tcc_nerr ( ) == 0 )		6321741	8					
ANR	6321788	Condition	tcc_nerr ( ) == 0	2709:8:55392:55407	6321741	0	True				
ANR	6321789	EqualityExpression	tcc_nerr ( ) == 0		6321741	0		==			
ANR	6321790	CallExpression	tcc_nerr ( )		6321741	0					
ANR	6321791	Callee	tcc_nerr		6321741	0					
ANR	6321792	Identifier	tcc_nerr		6321741	0					
ANR	6321793	ArgumentList			6321741	1					
ANR	6321794	PrimaryExpression	0		6321741	1					
ANR	6321795	CompoundStatement		11:26:159:159	6321741	1					
ANR	6321796	ExpressionStatement	"TOK_GET ( & t , & macro_str , & cval )"	2710:2:55414:55445	6321741	0	True				
ANR	6321797	CallExpression	"TOK_GET ( & t , & macro_str , & cval )"		6321741	0					
ANR	6321798	Callee	TOK_GET		6321741	0					
ANR	6321799	Identifier	TOK_GET		6321741	0					
ANR	6321800	ArgumentList	& t		6321741	1					
ANR	6321801	Argument	& t		6321741	0					
ANR	6321802	UnaryOperationExpression	& t		6321741	0					
ANR	6321803	UnaryOperator	&		6321741	0					
ANR	6321804	Identifier	t		6321741	1					
ANR	6321805	Argument	& macro_str		6321741	1					
ANR	6321806	UnaryOperationExpression	& macro_str		6321741	0					
ANR	6321807	UnaryOperator	&		6321741	0					
ANR	6321808	Identifier	macro_str		6321741	1					
ANR	6321809	Argument	& cval		6321741	2					
ANR	6321810	UnaryOperationExpression	& cval		6321741	0					
ANR	6321811	UnaryOperator	&		6321741	0					
ANR	6321812	Identifier	cval		6321741	1					
ANR	6321813	IfStatement	if ( ! t )		6321741	1					
ANR	6321814	Condition	! t	2711:6:55453:55454	6321741	0	True				
ANR	6321815	UnaryOperationExpression	! t		6321741	0					
ANR	6321816	UnaryOperator	!		6321741	0					
ANR	6321817	Identifier	t		6321741	1					
ANR	6321818	CompoundStatement		13:10:206:206	6321741	1					
ANR	6321819	BreakStatement	break ;	2712:3:55462:55467	6321741	0	True				
ANR	6321820	IfStatement	if ( t == '#' )		6321741	2					
ANR	6321821	Condition	t == '#'	2714:6:55479:55486	6321741	0	True				
ANR	6321822	EqualityExpression	t == '#'		6321741	0		==			
ANR	6321823	Identifier	t		6321741	0					
ANR	6321824	PrimaryExpression	'#'		6321741	1					
ANR	6321825	CompoundStatement		16:16:238:238	6321741	1					
ANR	6321826	ExpressionStatement	"TOK_GET ( & t , & macro_str , & cval )"	2716:3:55513:55544	6321741	0	True				
ANR	6321827	CallExpression	"TOK_GET ( & t , & macro_str , & cval )"		6321741	0					
ANR	6321828	Callee	TOK_GET		6321741	0					
ANR	6321829	Identifier	TOK_GET		6321741	0					
ANR	6321830	ArgumentList	& t		6321741	1					
ANR	6321831	Argument	& t		6321741	0					
ANR	6321832	UnaryOperationExpression	& t		6321741	0					
ANR	6321833	UnaryOperator	&		6321741	0					
ANR	6321834	Identifier	t		6321741	1					
ANR	6321835	Argument	& macro_str		6321741	1					
ANR	6321836	UnaryOperationExpression	& macro_str		6321741	0					
ANR	6321837	UnaryOperator	&		6321741	0					
ANR	6321838	Identifier	macro_str		6321741	1					
ANR	6321839	Argument	& cval		6321741	2					
ANR	6321840	UnaryOperationExpression	& cval		6321741	0					
ANR	6321841	UnaryOperator	&		6321741	0					
ANR	6321842	Identifier	cval		6321741	1					
ANR	6321843	IfStatement	if ( ! t )		6321741	1					
ANR	6321844	Condition	! t	2717:7:55553:55554	6321741	0	True				
ANR	6321845	UnaryOperationExpression	! t		6321741	0					
ANR	6321846	UnaryOperator	!		6321741	0					
ANR	6321847	Identifier	t		6321741	1					
ANR	6321848	CompoundStatement		19:11:306:306	6321741	1					
ANR	6321849	BreakStatement	break ;	2718:4:55563:55568	6321741	0	True				
ANR	6321850	ExpressionStatement	"s = sym_find2 ( args , t )"	2720:3:55578:55601	6321741	2	True				
ANR	6321851	AssignmentExpression	"s = sym_find2 ( args , t )"		6321741	0		=			
ANR	6321852	Identifier	s		6321741	0					
ANR	6321853	CallExpression	"sym_find2 ( args , t )"		6321741	1					
ANR	6321854	Callee	sym_find2		6321741	0					
ANR	6321855	Identifier	sym_find2		6321741	0					
ANR	6321856	ArgumentList	args		6321741	1					
ANR	6321857	Argument	args		6321741	0					
ANR	6321858	Identifier	args		6321741	0					
ANR	6321859	Argument	t		6321741	1					
ANR	6321860	Identifier	t		6321741	0					
ANR	6321861	IfStatement	if ( s )		6321741	3					
ANR	6321862	Condition	s	2721:7:55610:55610	6321741	0	True				
ANR	6321863	Identifier	s		6321741	0					
ANR	6321864	CompoundStatement		23:10:362:362	6321741	1					
ANR	6321865	ExpressionStatement	cstr_new ( & cstr )	2722:4:55619:55635	6321741	0	True				
ANR	6321866	CallExpression	cstr_new ( & cstr )		6321741	0					
ANR	6321867	Callee	cstr_new		6321741	0					
ANR	6321868	Identifier	cstr_new		6321741	0					
ANR	6321869	ArgumentList	& cstr		6321741	1					
ANR	6321870	Argument	& cstr		6321741	0					
ANR	6321871	UnaryOperationExpression	& cstr		6321741	0					
ANR	6321872	UnaryOperator	&		6321741	0					
ANR	6321873	Identifier	cstr		6321741	1					
ANR	6321874	ExpressionStatement	st = s -> d	2723:4:55641:55650	6321741	1	True				
ANR	6321875	AssignmentExpression	st = s -> d		6321741	0		=			
ANR	6321876	Identifier	st		6321741	0					
ANR	6321877	PtrMemberAccess	s -> d		6321741	1					
ANR	6321878	Identifier	s		6321741	0					
ANR	6321879	Identifier	d		6321741	1					
ANR	6321880	ExpressionStatement	spc = 0	2724:4:55656:55663	6321741	2	True				
ANR	6321881	AssignmentExpression	spc = 0		6321741	0		=			
ANR	6321882	Identifier	spc		6321741	0					
ANR	6321883	PrimaryExpression	0		6321741	1					
ANR	6321884	WhileStatement	while ( * st )		6321741	3					
ANR	6321885	Condition	* st	2725:11:55676:55678	6321741	0	True				
ANR	6321886	UnaryOperationExpression	* st		6321741	0					
ANR	6321887	UnaryOperator	*		6321741	0					
ANR	6321888	Identifier	st		6321741	1					
ANR	6321889	CompoundStatement		27:16:430:430	6321741	1					
ANR	6321890	ExpressionStatement	"TOK_GET ( & t , & st , & cval )"	2726:5:55688:55712	6321741	0	True				
ANR	6321891	CallExpression	"TOK_GET ( & t , & st , & cval )"		6321741	0					
ANR	6321892	Callee	TOK_GET		6321741	0					
ANR	6321893	Identifier	TOK_GET		6321741	0					
ANR	6321894	ArgumentList	& t		6321741	1					
ANR	6321895	Argument	& t		6321741	0					
ANR	6321896	UnaryOperationExpression	& t		6321741	0					
ANR	6321897	UnaryOperator	&		6321741	0					
ANR	6321898	Identifier	t		6321741	1					
ANR	6321899	Argument	& st		6321741	1					
ANR	6321900	UnaryOperationExpression	& st		6321741	0					
ANR	6321901	UnaryOperator	&		6321741	0					
ANR	6321902	Identifier	st		6321741	1					
ANR	6321903	Argument	& cval		6321741	2					
ANR	6321904	UnaryOperationExpression	& cval		6321741	0					
ANR	6321905	UnaryOperator	&		6321741	0					
ANR	6321906	Identifier	cval		6321741	1					
ANR	6321907	IfStatement	"if ( ! check_space ( t , & spc ) )"		6321741	1					
ANR	6321908	Condition	"! check_space ( t , & spc )"	2727:9:55723:55744	6321741	0	True				
ANR	6321909	UnaryOperationExpression	"! check_space ( t , & spc )"		6321741	0					
ANR	6321910	UnaryOperator	!		6321741	0					
ANR	6321911	CallExpression	"check_space ( t , & spc )"		6321741	1					
ANR	6321912	Callee	check_space		6321741	0					
ANR	6321913	Identifier	check_space		6321741	0					
ANR	6321914	ArgumentList	t		6321741	1					
ANR	6321915	Argument	t		6321741	0					
ANR	6321916	Identifier	t		6321741	0					
ANR	6321917	Argument	& spc		6321741	1					
ANR	6321918	UnaryOperationExpression	& spc		6321741	0					
ANR	6321919	UnaryOperator	&		6321741	0					
ANR	6321920	Identifier	spc		6321741	1					
ANR	6321921	CompoundStatement		29:33:496:496	6321741	1					
ANR	6321922	ExpressionStatement	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"	2728:6:55755:55795	6321741	0	True				
ANR	6321923	CallExpression	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"		6321741	0					
ANR	6321924	Callee	cstr_cat		6321741	0					
ANR	6321925	Identifier	cstr_cat		6321741	0					
ANR	6321926	ArgumentList	& cstr		6321741	1					
ANR	6321927	Argument	& cstr		6321741	0					
ANR	6321928	UnaryOperationExpression	& cstr		6321741	0					
ANR	6321929	UnaryOperator	&		6321741	0					
ANR	6321930	Identifier	cstr		6321741	1					
ANR	6321931	Argument	"get_tok_str ( t , & cval )"		6321741	1					
ANR	6321932	CallExpression	"get_tok_str ( t , & cval )"		6321741	0					
ANR	6321933	Callee	get_tok_str		6321741	0					
ANR	6321934	Identifier	get_tok_str		6321741	0					
ANR	6321935	ArgumentList	t		6321741	1					
ANR	6321936	Argument	t		6321741	0					
ANR	6321937	Identifier	t		6321741	0					
ANR	6321938	Argument	& cval		6321741	1					
ANR	6321939	UnaryOperationExpression	& cval		6321741	0					
ANR	6321940	UnaryOperator	&		6321741	0					
ANR	6321941	Identifier	cval		6321741	1					
ANR	6321942	ExpressionStatement	cstr . size -= spc	2731:4:55814:55830	6321741	4	True				
ANR	6321943	AssignmentExpression	cstr . size -= spc		6321741	0		-=			
ANR	6321944	MemberAccess	cstr . size		6321741	0					
ANR	6321945	Identifier	cstr		6321741	0					
ANR	6321946	Identifier	size		6321741	1					
ANR	6321947	Identifier	spc		6321741	1					
ANR	6321948	ExpressionStatement	"cstr_ccat ( & cstr , '\\0' )"	2732:4:55836:55859	6321741	5	True				
ANR	6321949	CallExpression	"cstr_ccat ( & cstr , '\\0' )"		6321741	0					
ANR	6321950	Callee	cstr_ccat		6321741	0					
ANR	6321951	Identifier	cstr_ccat		6321741	0					
ANR	6321952	ArgumentList	& cstr		6321741	1					
ANR	6321953	Argument	& cstr		6321741	0					
ANR	6321954	UnaryOperationExpression	& cstr		6321741	0					
ANR	6321955	UnaryOperator	&		6321741	0					
ANR	6321956	Identifier	cstr		6321741	1					
ANR	6321957	Argument	'\\0'		6321741	1					
ANR	6321958	PrimaryExpression	'\\0'		6321741	0					
ANR	6321959	ExpressionStatement	"printf ( ""stringize: %s\\n"" , ( char * ) cstr . data )"	2734:4:55881:55927	6321741	6	True				
ANR	6321960	CallExpression	"printf ( ""stringize: %s\\n"" , ( char * ) cstr . data )"		6321741	0					
ANR	6321961	Callee	printf		6321741	0					
ANR	6321962	Identifier	printf		6321741	0					
ANR	6321963	ArgumentList	"""stringize: %s\\n"""		6321741	1					
ANR	6321964	Argument	"""stringize: %s\\n"""		6321741	0					
ANR	6321965	PrimaryExpression	"""stringize: %s\\n"""		6321741	0					
ANR	6321966	Argument	( char * ) cstr . data		6321741	1					
ANR	6321967	CastExpression	( char * ) cstr . data		6321741	0					
ANR	6321968	CastTarget	char *		6321741	0					
ANR	6321969	MemberAccess	cstr . data		6321741	1					
ANR	6321970	Identifier	cstr		6321741	0					
ANR	6321971	Identifier	data		6321741	1					
ANR	6321972	ExpressionStatement	cval . cstr = & cstr	2737:4:55961:55978	6321741	7	True				
ANR	6321973	AssignmentExpression	cval . cstr = & cstr		6321741	0		=			
ANR	6321974	MemberAccess	cval . cstr		6321741	0					
ANR	6321975	Identifier	cval		6321741	0					
ANR	6321976	Identifier	cstr		6321741	1					
ANR	6321977	UnaryOperationExpression	& cstr		6321741	1					
ANR	6321978	UnaryOperator	&		6321741	0					
ANR	6321979	Identifier	cstr		6321741	1					
ANR	6321980	ExpressionStatement	"tok_str_add2 ( & str , TOK_STR , & cval )"	2738:4:55984:56019	6321741	8	True				
ANR	6321981	CallExpression	"tok_str_add2 ( & str , TOK_STR , & cval )"		6321741	0					
ANR	6321982	Callee	tok_str_add2		6321741	0					
ANR	6321983	Identifier	tok_str_add2		6321741	0					
ANR	6321984	ArgumentList	& str		6321741	1					
ANR	6321985	Argument	& str		6321741	0					
ANR	6321986	UnaryOperationExpression	& str		6321741	0					
ANR	6321987	UnaryOperator	&		6321741	0					
ANR	6321988	Identifier	str		6321741	1					
ANR	6321989	Argument	TOK_STR		6321741	1					
ANR	6321990	Identifier	TOK_STR		6321741	0					
ANR	6321991	Argument	& cval		6321741	2					
ANR	6321992	UnaryOperationExpression	& cval		6321741	0					
ANR	6321993	UnaryOperator	&		6321741	0					
ANR	6321994	Identifier	cval		6321741	1					
ANR	6321995	ExpressionStatement	cstr_free ( & cstr )	2739:4:56025:56042	6321741	9	True				
ANR	6321996	CallExpression	cstr_free ( & cstr )		6321741	0					
ANR	6321997	Callee	cstr_free		6321741	0					
ANR	6321998	Identifier	cstr_free		6321741	0					
ANR	6321999	ArgumentList	& cstr		6321741	1					
ANR	6322000	Argument	& cstr		6321741	0					
ANR	6322001	UnaryOperationExpression	& cstr		6321741	0					
ANR	6322002	UnaryOperator	&		6321741	0					
ANR	6322003	Identifier	cstr		6321741	1					
ANR	6322004	ElseStatement	else		6321741	0					
ANR	6322005	CompoundStatement		42:10:803:803	6321741	0					
ANR	6322006	ExpressionStatement	"tok_str_add2 ( & str , t , & cval )"	2741:4:56060:56089	6321741	0	True				
ANR	6322007	CallExpression	"tok_str_add2 ( & str , t , & cval )"		6321741	0					
ANR	6322008	Callee	tok_str_add2		6321741	0					
ANR	6322009	Identifier	tok_str_add2		6321741	0					
ANR	6322010	ArgumentList	& str		6321741	1					
ANR	6322011	Argument	& str		6321741	0					
ANR	6322012	UnaryOperationExpression	& str		6321741	0					
ANR	6322013	UnaryOperator	&		6321741	0					
ANR	6322014	Identifier	str		6321741	1					
ANR	6322015	Argument	t		6321741	1					
ANR	6322016	Identifier	t		6321741	0					
ANR	6322017	Argument	& cval		6321741	2					
ANR	6322018	UnaryOperationExpression	& cval		6321741	0					
ANR	6322019	UnaryOperator	&		6321741	0					
ANR	6322020	Identifier	cval		6321741	1					
ANR	6322021	ElseStatement	else		6321741	0					
ANR	6322022	IfStatement	if ( t >= TOK_IDENT )		6321741	0					
ANR	6322023	Condition	t >= TOK_IDENT	2743:13:56109:56122	6321741	0	True				
ANR	6322024	RelationalExpression	t >= TOK_IDENT		6321741	0		>=			
ANR	6322025	Identifier	t		6321741	0					
ANR	6322026	Identifier	TOK_IDENT		6321741	1					
ANR	6322027	CompoundStatement		45:29:874:874	6321741	1					
ANR	6322028	ExpressionStatement	"s = sym_find2 ( args , t )"	2744:3:56130:56153	6321741	0	True				
ANR	6322029	AssignmentExpression	"s = sym_find2 ( args , t )"		6321741	0		=			
ANR	6322030	Identifier	s		6321741	0					
ANR	6322031	CallExpression	"sym_find2 ( args , t )"		6321741	1					
ANR	6322032	Callee	sym_find2		6321741	0					
ANR	6322033	Identifier	sym_find2		6321741	0					
ANR	6322034	ArgumentList	args		6321741	1					
ANR	6322035	Argument	args		6321741	0					
ANR	6322036	Identifier	args		6321741	0					
ANR	6322037	Argument	t		6321741	1					
ANR	6322038	Identifier	t		6321741	0					
ANR	6322039	IfStatement	if ( s )		6321741	1					
ANR	6322040	Condition	s	2745:7:56162:56162	6321741	0	True				
ANR	6322041	Identifier	s		6321741	0					
ANR	6322042	CompoundStatement		47:10:914:914	6321741	1					
ANR	6322043	ExpressionStatement	st = s -> d	2746:4:56171:56180	6321741	0	True				
ANR	6322044	AssignmentExpression	st = s -> d		6321741	0		=			
ANR	6322045	Identifier	st		6321741	0					
ANR	6322046	PtrMemberAccess	s -> d		6321741	1					
ANR	6322047	Identifier	s		6321741	0					
ANR	6322048	Identifier	d		6321741	1					
ANR	6322049	IfStatement	if ( * macro_str == TOK_TWOSHARPS || last_tok == TOK_TWOSHARPS )		6321741	1					
ANR	6322050	Condition	* macro_str == TOK_TWOSHARPS || last_tok == TOK_TWOSHARPS	2748:8:56256:56311	6321741	0	True				
ANR	6322051	OrExpression	* macro_str == TOK_TWOSHARPS || last_tok == TOK_TWOSHARPS		6321741	0		||			
ANR	6322052	EqualityExpression	* macro_str == TOK_TWOSHARPS		6321741	0		==			
ANR	6322053	UnaryOperationExpression	* macro_str		6321741	0					
ANR	6322054	UnaryOperator	*		6321741	0					
ANR	6322055	Identifier	macro_str		6321741	1					
ANR	6322056	Identifier	TOK_TWOSHARPS		6321741	1					
ANR	6322057	EqualityExpression	last_tok == TOK_TWOSHARPS		6321741	1		==			
ANR	6322058	Identifier	last_tok		6321741	0					
ANR	6322059	Identifier	TOK_TWOSHARPS		6321741	1					
ANR	6322060	CompoundStatement		50:66:1063:1063	6321741	1					
ANR	6322061	IfStatement	"if ( gnu_ext && s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ',' )"		6321741	0					
ANR	6322062	Condition	"gnu_ext && s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"	2754:9:56532:56645	6321741	0	True				
ANR	6322063	AndExpression	"gnu_ext && s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"		6321741	0		&&			
ANR	6322064	Identifier	gnu_ext		6321741	0					
ANR	6322065	AndExpression	"s -> type . t && last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"		6321741	1		&&			
ANR	6322066	MemberAccess	s -> type . t		6321741	0					
ANR	6322067	PtrMemberAccess	s -> type		6321741	0					
ANR	6322068	Identifier	s		6321741	0					
ANR	6322069	Identifier	type		6321741	1					
ANR	6322070	Identifier	t		6321741	1					
ANR	6322071	AndExpression	"last_tok == TOK_TWOSHARPS && str . len >= 2 && str . str [ str . len - 2 ] == ','"		6321741	1		&&			
ANR	6322072	EqualityExpression	last_tok == TOK_TWOSHARPS		6321741	0		==			
ANR	6322073	Identifier	last_tok		6321741	0					
ANR	6322074	Identifier	TOK_TWOSHARPS		6321741	1					
ANR	6322075	AndExpression	"str . len >= 2 && str . str [ str . len - 2 ] == ','"		6321741	1		&&			
ANR	6322076	RelationalExpression	str . len >= 2		6321741	0		>=			
ANR	6322077	MemberAccess	str . len		6321741	0					
ANR	6322078	Identifier	str		6321741	0					
ANR	6322079	Identifier	len		6321741	1					
ANR	6322080	PrimaryExpression	2		6321741	1					
ANR	6322081	EqualityExpression	"str . str [ str . len - 2 ] == ','"		6321741	1		==			
ANR	6322082	ArrayIndexing	str . str [ str . len - 2 ]		6321741	0					
ANR	6322083	MemberAccess	str . str		6321741	0					
ANR	6322084	Identifier	str		6321741	0					
ANR	6322085	Identifier	str		6321741	1					
ANR	6322086	AdditiveExpression	str . len - 2		6321741	1		-			
ANR	6322087	MemberAccess	str . len		6321741	0					
ANR	6322088	Identifier	str		6321741	0					
ANR	6322089	Identifier	len		6321741	1					
ANR	6322090	PrimaryExpression	2		6321741	1					
ANR	6322091	PrimaryExpression	"','"		6321741	1					
ANR	6322092	CompoundStatement		58:54:1397:1397	6321741	1					
ANR	6322093	IfStatement	if ( * st == 0 )		6321741	0					
ANR	6322094	Condition	* st == 0	2757:10:56660:56667	6321741	0	True				
ANR	6322095	EqualityExpression	* st == 0		6321741	0		==			
ANR	6322096	UnaryOperationExpression	* st		6321741	0					
ANR	6322097	UnaryOperator	*		6321741	0					
ANR	6322098	Identifier	st		6321741	1					
ANR	6322099	PrimaryExpression	0		6321741	1					
ANR	6322100	CompoundStatement		59:20:1419:1419	6321741	1					
ANR	6322101	ExpressionStatement	str . len -= 2	2759:7:56710:56722	6321741	0	True				
ANR	6322102	AssignmentExpression	str . len -= 2		6321741	0		-=			
ANR	6322103	MemberAccess	str . len		6321741	0					
ANR	6322104	Identifier	str		6321741	0					
ANR	6322105	Identifier	len		6321741	1					
ANR	6322106	PrimaryExpression	2		6321741	1					
ANR	6322107	ElseStatement	else		6321741	0					
ANR	6322108	CompoundStatement		62:13:1486:1486	6321741	0					
ANR	6322109	ExpressionStatement	str . len --	2762:7:56790:56799	6321741	0	True				
ANR	6322110	PostIncDecOperationExpression	str . len --		6321741	0					
ANR	6322111	MemberAccess	str . len		6321741	0					
ANR	6322112	Identifier	str		6321741	0					
ANR	6322113	Identifier	len		6321741	1					
ANR	6322114	IncDec	--		6321741	1					
ANR	6322115	GotoStatement	goto add_var ;	2763:7:56808:56820	6321741	1	True				
ANR	6322116	Identifier	add_var		6321741	0					
ANR	6322117	ElseStatement	else		6321741	0					
ANR	6322118	CompoundStatement		68:6:1599:1605	6321741	0					
ANR	6322119	IdentifierDeclStatement	int t1 ;	2766:6:56850:56856	6321741	0	True				
ANR	6322120	IdentifierDecl	t1		6321741	0					
ANR	6322121	IdentifierDeclType	int		6321741	0					
ANR	6322122	Identifier	t1		6321741	1					
ANR	6322123	Label	add_var :	2767:0:56858:56865	6321741	1	True				
ANR	6322124	Identifier	add_var		6321741	0					
ANR	6322125	ForStatement	for ( ; ; )		6321741	2					
ANR	6322126	CompoundStatement		70:15:1631:1631	6321741	0					
ANR	6322127	ExpressionStatement	"TOK_GET ( & t1 , & st , & cval )"	2769:7:56891:56916	6321741	0	True				
ANR	6322128	CallExpression	"TOK_GET ( & t1 , & st , & cval )"		6321741	0					
ANR	6322129	Callee	TOK_GET		6321741	0					
ANR	6322130	Identifier	TOK_GET		6321741	0					
ANR	6322131	ArgumentList	& t1		6321741	1					
ANR	6322132	Argument	& t1		6321741	0					
ANR	6322133	UnaryOperationExpression	& t1		6321741	0					
ANR	6322134	UnaryOperator	&		6321741	0					
ANR	6322135	Identifier	t1		6321741	1					
ANR	6322136	Argument	& st		6321741	1					
ANR	6322137	UnaryOperationExpression	& st		6321741	0					
ANR	6322138	UnaryOperator	&		6321741	0					
ANR	6322139	Identifier	st		6321741	1					
ANR	6322140	Argument	& cval		6321741	2					
ANR	6322141	UnaryOperationExpression	& cval		6321741	0					
ANR	6322142	UnaryOperator	&		6321741	0					
ANR	6322143	Identifier	cval		6321741	1					
ANR	6322144	IfStatement	if ( ! t1 )		6321741	1					
ANR	6322145	Condition	! t1	2770:11:56929:56931	6321741	0	True				
ANR	6322146	UnaryOperationExpression	! t1		6321741	0					
ANR	6322147	UnaryOperator	!		6321741	0					
ANR	6322148	Identifier	t1		6321741	1					
ANR	6322149	CompoundStatement		72:16:1683:1683	6321741	1					
ANR	6322150	BreakStatement	break ;	2771:8:56944:56949	6321741	0	True				
ANR	6322151	ExpressionStatement	"tok_str_add2 ( & str , t1 , & cval )"	2773:7:56967:56997	6321741	2	True				
ANR	6322152	CallExpression	"tok_str_add2 ( & str , t1 , & cval )"		6321741	0					
ANR	6322153	Callee	tok_str_add2		6321741	0					
ANR	6322154	Identifier	tok_str_add2		6321741	0					
ANR	6322155	ArgumentList	& str		6321741	1					
ANR	6322156	Argument	& str		6321741	0					
ANR	6322157	UnaryOperationExpression	& str		6321741	0					
ANR	6322158	UnaryOperator	&		6321741	0					
ANR	6322159	Identifier	str		6321741	1					
ANR	6322160	Argument	t1		6321741	1					
ANR	6322161	Identifier	t1		6321741	0					
ANR	6322162	Argument	& cval		6321741	2					
ANR	6322163	UnaryOperationExpression	& cval		6321741	0					
ANR	6322164	UnaryOperator	&		6321741	0					
ANR	6322165	Identifier	cval		6321741	1					
ANR	6322166	ElseStatement	else		6321741	0					
ANR	6322167	CompoundStatement		78:11:1774:1774	6321741	0					
ANR	6322168	ExpressionStatement	"macro_subst ( & str , nested_list , st , NULL )"	2779:5:57118:57159	6321741	0	True				
ANR	6322169	CallExpression	"macro_subst ( & str , nested_list , st , NULL )"		6321741	0					
ANR	6322170	Callee	macro_subst		6321741	0					
ANR	6322171	Identifier	macro_subst		6321741	0					
ANR	6322172	ArgumentList	& str		6321741	1					
ANR	6322173	Argument	& str		6321741	0					
ANR	6322174	UnaryOperationExpression	& str		6321741	0					
ANR	6322175	UnaryOperator	&		6321741	0					
ANR	6322176	Identifier	str		6321741	1					
ANR	6322177	Argument	nested_list		6321741	1					
ANR	6322178	Identifier	nested_list		6321741	0					
ANR	6322179	Argument	st		6321741	2					
ANR	6322180	Identifier	st		6321741	0					
ANR	6322181	Argument	NULL		6321741	3					
ANR	6322182	Identifier	NULL		6321741	0					
ANR	6322183	ElseStatement	else		6321741	0					
ANR	6322184	CompoundStatement		83:10:1926:1926	6321741	0					
ANR	6322185	ExpressionStatement	"tok_str_add ( & str , t )"	2782:4:57183:57204	6321741	0	True				
ANR	6322186	CallExpression	"tok_str_add ( & str , t )"		6321741	0					
ANR	6322187	Callee	tok_str_add		6321741	0					
ANR	6322188	Identifier	tok_str_add		6321741	0					
ANR	6322189	ArgumentList	& str		6321741	1					
ANR	6322190	Argument	& str		6321741	0					
ANR	6322191	UnaryOperationExpression	& str		6321741	0					
ANR	6322192	UnaryOperator	&		6321741	0					
ANR	6322193	Identifier	str		6321741	1					
ANR	6322194	Argument	t		6321741	1					
ANR	6322195	Identifier	t		6321741	0					
ANR	6322196	ElseStatement	else		6321741	0					
ANR	6322197	CompoundStatement		86:9:1969:1969	6321741	0					
ANR	6322198	ExpressionStatement	"tok_str_add2 ( & str , t , & cval )"	2785:3:57225:57254	6321741	0	True				
ANR	6322199	CallExpression	"tok_str_add2 ( & str , t , & cval )"		6321741	0					
ANR	6322200	Callee	tok_str_add2		6321741	0					
ANR	6322201	Identifier	tok_str_add2		6321741	0					
ANR	6322202	ArgumentList	& str		6321741	1					
ANR	6322203	Argument	& str		6321741	0					
ANR	6322204	UnaryOperationExpression	& str		6321741	0					
ANR	6322205	UnaryOperator	&		6321741	0					
ANR	6322206	Identifier	str		6321741	1					
ANR	6322207	Argument	t		6321741	1					
ANR	6322208	Identifier	t		6321741	0					
ANR	6322209	Argument	& cval		6321741	2					
ANR	6322210	UnaryOperationExpression	& cval		6321741	0					
ANR	6322211	UnaryOperator	&		6321741	0					
ANR	6322212	Identifier	cval		6321741	1					
ANR	6322213	ExpressionStatement	last_tok = t	2787:2:57262:57274	6321741	3	True				
ANR	6322214	AssignmentExpression	last_tok = t		6321741	0		=			
ANR	6322215	Identifier	last_tok		6321741	0					
ANR	6322216	Identifier	t		6321741	1					
ANR	6322217	ExpressionStatement	"tok_str_add ( & str , 0 )"	2789:1:57280:57301	6321741	9	True				
ANR	6322218	CallExpression	"tok_str_add ( & str , 0 )"		6321741	0					
ANR	6322219	Callee	tok_str_add		6321741	0					
ANR	6322220	Identifier	tok_str_add		6321741	0					
ANR	6322221	ArgumentList	& str		6321741	1					
ANR	6322222	Argument	& str		6321741	0					
ANR	6322223	UnaryOperationExpression	& str		6321741	0					
ANR	6322224	UnaryOperator	&		6321741	0					
ANR	6322225	Identifier	str		6321741	1					
ANR	6322226	Argument	0		6321741	1					
ANR	6322227	PrimaryExpression	0		6321741	0					
ANR	6322228	ReturnStatement	return str . str ;	2790:1:57304:57318	6321741	10	True				
ANR	6322229	MemberAccess	str . str		6321741	0					
ANR	6322230	Identifier	str		6321741	0					
ANR	6322231	Identifier	str		6321741	1					
ANR	6322232	ReturnType	static int *		6321741	1					
ANR	6322233	Identifier	macro_arg_subst		6321741	2					
ANR	6322234	ParameterList	"Sym * * nested_list , const int * macro_str , Sym * args"		6321741	3					
ANR	6322235	Parameter	Sym * * nested_list	2698:28:55198:55214	6321741	0	True				
ANR	6322236	ParameterType	Sym * *		6321741	0					
ANR	6322237	Identifier	nested_list		6321741	1					
ANR	6322238	Parameter	const int * macro_str	2698:47:55217:55236	6321741	1	True				
ANR	6322239	ParameterType	const int *		6321741	0					
ANR	6322240	Identifier	macro_str		6321741	1					
ANR	6322241	Parameter	Sym * args	2698:69:55239:55247	6321741	2	True				
ANR	6322242	ParameterType	Sym *		6321741	0					
ANR	6322243	Identifier	args		6321741	1					
ANR	6322244	CFGEntryNode	ENTRY		6321741		True				
ANR	6322245	CFGExitNode	EXIT		6321741		True				
ANR	6322246	InfiniteForNode	true		6321741		True				
ANR	6322247	Symbol	cstr		6321741						
ANR	6322248	Symbol	* st		6321741						
ANR	6322249	Symbol	get_tok_str		6321741						
ANR	6322250	Symbol	nested_list		6321741						
ANR	6322251	Symbol	& st		6321741						
ANR	6322252	Symbol	& spc		6321741						
ANR	6322253	Symbol	* macro_str		6321741						
ANR	6322254	Symbol	s -> type . t		6321741						
ANR	6322255	Symbol	* str . len		6321741						
ANR	6322256	Symbol	& str		6321741						
ANR	6322257	Symbol	str . str		6321741						
ANR	6322258	Symbol	& cval		6321741						
ANR	6322259	Symbol	cval . cstr		6321741						
ANR	6322260	Symbol	cstr . size		6321741						
ANR	6322261	Symbol	s -> d		6321741						
ANR	6322262	Symbol	* str		6321741						
ANR	6322263	Symbol	st		6321741						
ANR	6322264	Symbol	& cstr		6321741						
ANR	6322265	Symbol	cstr . data		6321741						
ANR	6322266	Symbol	NULL		6321741						
ANR	6322267	Symbol	TOK_IDENT		6321741						
ANR	6322268	Symbol	gnu_ext		6321741						
ANR	6322269	Symbol	TOK_STR		6321741						
ANR	6322270	Symbol	& t1		6321741						
ANR	6322271	Symbol	spc		6321741						
ANR	6322272	Symbol	* str . str		6321741						
ANR	6322273	Symbol	tcc_nerr		6321741						
ANR	6322274	Symbol	last_tok		6321741						
ANR	6322275	Symbol	args		6321741						
ANR	6322276	Symbol	cval		6321741						
ANR	6322277	Symbol	str		6321741						
ANR	6322278	Symbol	macro_str		6321741						
ANR	6322279	Symbol	s		6321741						
ANR	6322280	Symbol	t		6321741						
ANR	6322281	Symbol	& macro_str		6321741						
ANR	6322282	Symbol	check_space		6321741						
ANR	6322283	Symbol	str . len		6321741						
ANR	6322284	Symbol	TOK_TWOSHARPS		6321741						
ANR	6322285	Symbol	& t		6321741						
ANR	6322286	Symbol	* s		6321741						
ANR	6322287	Symbol	s -> type		6321741						
ANR	6322288	Symbol	t1		6321741						
ANR	6322289	Symbol	sym_find2		6321741						
ANR	6322290	Function	macro_subst_tok	2803:0:57687:62035							
ANR	6322291	FunctionDef	"macro_subst_tok (TokenString * tok_str , Sym * * nested_list , Sym * s , struct macro_level * * can_read_stream)"		6322290	0					
ANR	6322292	CompoundStatement		2805:0:57807:62035	6322290	0					
ANR	6322293	IdentifierDeclStatement	"Sym * args , * sa , * sa1 ;"	2806:1:57810:57830	6322290	0	True				
ANR	6322294	IdentifierDecl	* args		6322290	0					
ANR	6322295	IdentifierDeclType	Sym *		6322290	0					
ANR	6322296	Identifier	args		6322290	1					
ANR	6322297	IdentifierDecl	* sa		6322290	1					
ANR	6322298	IdentifierDeclType	Sym *		6322290	0					
ANR	6322299	Identifier	sa		6322290	1					
ANR	6322300	IdentifierDecl	* sa1		6322290	2					
ANR	6322301	IdentifierDeclType	Sym *		6322290	0					
ANR	6322302	Identifier	sa1		6322290	1					
ANR	6322303	IdentifierDeclStatement	"int mstr_allocated , parlevel , * mstr , t , t1 , spc ;"	2807:1:57833:57880	6322290	1	True				
ANR	6322304	IdentifierDecl	mstr_allocated		6322290	0					
ANR	6322305	IdentifierDeclType	int		6322290	0					
ANR	6322306	Identifier	mstr_allocated		6322290	1					
ANR	6322307	IdentifierDecl	parlevel		6322290	1					
ANR	6322308	IdentifierDeclType	int		6322290	0					
ANR	6322309	Identifier	parlevel		6322290	1					
ANR	6322310	IdentifierDecl	* mstr		6322290	2					
ANR	6322311	IdentifierDeclType	int *		6322290	0					
ANR	6322312	Identifier	mstr		6322290	1					
ANR	6322313	IdentifierDecl	t		6322290	3					
ANR	6322314	IdentifierDeclType	int		6322290	0					
ANR	6322315	Identifier	t		6322290	1					
ANR	6322316	IdentifierDecl	t1		6322290	4					
ANR	6322317	IdentifierDeclType	int		6322290	0					
ANR	6322318	Identifier	t1		6322290	1					
ANR	6322319	IdentifierDecl	spc		6322290	5					
ANR	6322320	IdentifierDeclType	int		6322290	0					
ANR	6322321	Identifier	spc		6322290	1					
ANR	6322322	IdentifierDeclStatement	const int * p ;	2808:1:57883:57895	6322290	2	True				
ANR	6322323	IdentifierDecl	* p		6322290	0					
ANR	6322324	IdentifierDeclType	const int *		6322290	0					
ANR	6322325	Identifier	p		6322290	1					
ANR	6322326	IdentifierDeclStatement	TokenString str ;	2809:1:57898:57913	6322290	3	True				
ANR	6322327	IdentifierDecl	str		6322290	0					
ANR	6322328	IdentifierDeclType	TokenString		6322290	0					
ANR	6322329	Identifier	str		6322290	1					
ANR	6322330	IdentifierDeclStatement	char * cstrval ;	2810:1:57916:57929	6322290	4	True				
ANR	6322331	IdentifierDecl	* cstrval		6322290	0					
ANR	6322332	IdentifierDeclType	char *		6322290	0					
ANR	6322333	Identifier	cstrval		6322290	1					
ANR	6322334	IdentifierDeclStatement	CValue cval ;	2811:1:57932:57943	6322290	5	True				
ANR	6322335	IdentifierDecl	cval		6322290	0					
ANR	6322336	IdentifierDeclType	CValue		6322290	0					
ANR	6322337	Identifier	cval		6322290	1					
ANR	6322338	IdentifierDeclStatement	CString cstr ;	2812:1:57946:57958	6322290	6	True				
ANR	6322339	IdentifierDecl	cstr		6322290	0					
ANR	6322340	IdentifierDeclType	CString		6322290	0					
ANR	6322341	Identifier	cstr		6322290	1					
ANR	6322342	IdentifierDeclStatement	char buf [ 32 ] ;	2813:1:57961:57973	6322290	7	True				
ANR	6322343	IdentifierDecl	buf [ 32 ]		6322290	0					
ANR	6322344	IdentifierDeclType	char [ 32 ]		6322290	0					
ANR	6322345	Identifier	buf		6322290	1					
ANR	6322346	PrimaryExpression	32		6322290	2					
ANR	6322347	IfStatement	if ( tok == TOK___LINE__ )		6322290	8					
ANR	6322348	Condition	tok == TOK___LINE__	2817:5:58053:58071	6322290	0	True				
ANR	6322349	EqualityExpression	tok == TOK___LINE__		6322290	0		==			
ANR	6322350	Identifier	tok		6322290	0					
ANR	6322351	Identifier	TOK___LINE__		6322290	1					
ANR	6322352	CompoundStatement		13:26:266:266	6322290	1					
ANR	6322353	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%d"" , file -> line_num )"	2818:2:58078:58127	6322290	0	True				
ANR	6322354	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%d"" , file -> line_num )"		6322290	0					
ANR	6322355	Callee	snprintf		6322290	0					
ANR	6322356	Identifier	snprintf		6322290	0					
ANR	6322357	ArgumentList	buf		6322290	1					
ANR	6322358	Argument	buf		6322290	0					
ANR	6322359	Identifier	buf		6322290	0					
ANR	6322360	Argument	sizeof ( buf )		6322290	1					
ANR	6322361	SizeofExpression	sizeof ( buf )		6322290	0					
ANR	6322362	Sizeof	sizeof		6322290	0					
ANR	6322363	SizeofOperand	buf		6322290	1					
ANR	6322364	Argument	"""%d"""		6322290	2					
ANR	6322365	PrimaryExpression	"""%d"""		6322290	0					
ANR	6322366	Argument	file -> line_num		6322290	3					
ANR	6322367	PtrMemberAccess	file -> line_num		6322290	0					
ANR	6322368	Identifier	file		6322290	0					
ANR	6322369	Identifier	line_num		6322290	1					
ANR	6322370	ExpressionStatement	cstrval = buf	2819:2:58131:58144	6322290	1	True				
ANR	6322371	AssignmentExpression	cstrval = buf		6322290	0		=			
ANR	6322372	Identifier	cstrval		6322290	0					
ANR	6322373	Identifier	buf		6322290	1					
ANR	6322374	ExpressionStatement	t1 = TOK_PPNUM	2820:2:58148:58162	6322290	2	True				
ANR	6322375	AssignmentExpression	t1 = TOK_PPNUM		6322290	0		=			
ANR	6322376	Identifier	t1		6322290	0					
ANR	6322377	Identifier	TOK_PPNUM		6322290	1					
ANR	6322378	GotoStatement	goto add_cstr1 ;	2821:2:58166:58180	6322290	3	True				
ANR	6322379	Identifier	add_cstr1		6322290	0					
ANR	6322380	ElseStatement	else		6322290	0					
ANR	6322381	IfStatement	if ( tok == TOK___FILE__ )		6322290	0					
ANR	6322382	Condition	tok == TOK___FILE__	2822:12:58194:58212	6322290	0	True				
ANR	6322383	EqualityExpression	tok == TOK___FILE__		6322290	0		==			
ANR	6322384	Identifier	tok		6322290	0					
ANR	6322385	Identifier	TOK___FILE__		6322290	1					
ANR	6322386	CompoundStatement		18:33:407:407	6322290	1					
ANR	6322387	ExpressionStatement	cstrval = file -> filename	2823:2:58219:58243	6322290	0	True				
ANR	6322388	AssignmentExpression	cstrval = file -> filename		6322290	0		=			
ANR	6322389	Identifier	cstrval		6322290	0					
ANR	6322390	PtrMemberAccess	file -> filename		6322290	1					
ANR	6322391	Identifier	file		6322290	0					
ANR	6322392	Identifier	filename		6322290	1					
ANR	6322393	GotoStatement	goto add_cstr ;	2824:2:58247:58260	6322290	1	True				
ANR	6322394	Identifier	add_cstr		6322290	0					
ANR	6322395	ElseStatement	else		6322290	0					
ANR	6322396	IfStatement	if ( tok == TOK___DATE__ || tok == TOK___TIME__ )		6322290	0					
ANR	6322397	Condition	tok == TOK___DATE__ || tok == TOK___TIME__	2825:12:58274:58315	6322290	0	True				
ANR	6322398	OrExpression	tok == TOK___DATE__ || tok == TOK___TIME__		6322290	0		||			
ANR	6322399	EqualityExpression	tok == TOK___DATE__		6322290	0		==			
ANR	6322400	Identifier	tok		6322290	0					
ANR	6322401	Identifier	TOK___DATE__		6322290	1					
ANR	6322402	EqualityExpression	tok == TOK___TIME__		6322290	1		==			
ANR	6322403	Identifier	tok		6322290	0					
ANR	6322404	Identifier	TOK___TIME__		6322290	1					
ANR	6322405	CompoundStatement		23:2:527:540	6322290	1					
ANR	6322406	IdentifierDeclStatement	time_t ti ;	2826:2:58322:58331	6322290	0	True				
ANR	6322407	IdentifierDecl	ti		6322290	0					
ANR	6322408	IdentifierDeclType	time_t		6322290	0					
ANR	6322409	Identifier	ti		6322290	1					
ANR	6322410	IdentifierDeclStatement	struct tm * tm ;	2827:2:58335:58348	6322290	1	True				
ANR	6322411	IdentifierDecl	* tm		6322290	0					
ANR	6322412	IdentifierDeclType	struct tm *		6322290	0					
ANR	6322413	Identifier	tm		6322290	1					
ANR	6322414	ExpressionStatement	time ( & ti )	2829:2:58353:58363	6322290	2	True				
ANR	6322415	CallExpression	time ( & ti )		6322290	0					
ANR	6322416	Callee	time		6322290	0					
ANR	6322417	Identifier	time		6322290	0					
ANR	6322418	ArgumentList	& ti		6322290	1					
ANR	6322419	Argument	& ti		6322290	0					
ANR	6322420	UnaryOperationExpression	& ti		6322290	0					
ANR	6322421	UnaryOperator	&		6322290	0					
ANR	6322422	Identifier	ti		6322290	1					
ANR	6322423	ExpressionStatement	tm = localtime ( & ti )	2830:2:58367:58387	6322290	3	True				
ANR	6322424	AssignmentExpression	tm = localtime ( & ti )		6322290	0		=			
ANR	6322425	Identifier	tm		6322290	0					
ANR	6322426	CallExpression	localtime ( & ti )		6322290	1					
ANR	6322427	Callee	localtime		6322290	0					
ANR	6322428	Identifier	localtime		6322290	0					
ANR	6322429	ArgumentList	& ti		6322290	1					
ANR	6322430	Argument	& ti		6322290	0					
ANR	6322431	UnaryOperationExpression	& ti		6322290	0					
ANR	6322432	UnaryOperator	&		6322290	0					
ANR	6322433	Identifier	ti		6322290	1					
ANR	6322434	IfStatement	if ( tok == TOK___DATE__ )		6322290	4					
ANR	6322435	Condition	tok == TOK___DATE__	2831:6:58395:58413	6322290	0	True				
ANR	6322436	EqualityExpression	tok == TOK___DATE__		6322290	0		==			
ANR	6322437	Identifier	tok		6322290	0					
ANR	6322438	Identifier	TOK___DATE__		6322290	1					
ANR	6322439	CompoundStatement		27:27:608:608	6322290	1					
ANR	6322440	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%s %2d %d"" , ab_month_name [ tm -> tm_mon ] , tm -> tm_mday , tm -> tm_year + 1900 )"	2832:3:58421:58525	6322290	0	True				
ANR	6322441	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s %2d %d"" , ab_month_name [ tm -> tm_mon ] , tm -> tm_mday , tm -> tm_year + 1900 )"		6322290	0					
ANR	6322442	Callee	snprintf		6322290	0					
ANR	6322443	Identifier	snprintf		6322290	0					
ANR	6322444	ArgumentList	buf		6322290	1					
ANR	6322445	Argument	buf		6322290	0					
ANR	6322446	Identifier	buf		6322290	0					
ANR	6322447	Argument	sizeof ( buf )		6322290	1					
ANR	6322448	SizeofExpression	sizeof ( buf )		6322290	0					
ANR	6322449	Sizeof	sizeof		6322290	0					
ANR	6322450	SizeofOperand	buf		6322290	1					
ANR	6322451	Argument	"""%s %2d %d"""		6322290	2					
ANR	6322452	PrimaryExpression	"""%s %2d %d"""		6322290	0					
ANR	6322453	Argument	ab_month_name [ tm -> tm_mon ]		6322290	3					
ANR	6322454	ArrayIndexing	ab_month_name [ tm -> tm_mon ]		6322290	0					
ANR	6322455	Identifier	ab_month_name		6322290	0					
ANR	6322456	PtrMemberAccess	tm -> tm_mon		6322290	1					
ANR	6322457	Identifier	tm		6322290	0					
ANR	6322458	Identifier	tm_mon		6322290	1					
ANR	6322459	Argument	tm -> tm_mday		6322290	4					
ANR	6322460	PtrMemberAccess	tm -> tm_mday		6322290	0					
ANR	6322461	Identifier	tm		6322290	0					
ANR	6322462	Identifier	tm_mday		6322290	1					
ANR	6322463	Argument	tm -> tm_year + 1900		6322290	5					
ANR	6322464	AdditiveExpression	tm -> tm_year + 1900		6322290	0		+			
ANR	6322465	PtrMemberAccess	tm -> tm_year		6322290	0					
ANR	6322466	Identifier	tm		6322290	0					
ANR	6322467	Identifier	tm_year		6322290	1					
ANR	6322468	PrimaryExpression	1900		6322290	1					
ANR	6322469	ElseStatement	else		6322290	0					
ANR	6322470	CompoundStatement		30:9:728:728	6322290	0					
ANR	6322471	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%02d:%02d:%02d"" , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"	2835:3:58541:58627	6322290	0	True				
ANR	6322472	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%02d:%02d:%02d"" , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"		6322290	0					
ANR	6322473	Callee	snprintf		6322290	0					
ANR	6322474	Identifier	snprintf		6322290	0					
ANR	6322475	ArgumentList	buf		6322290	1					
ANR	6322476	Argument	buf		6322290	0					
ANR	6322477	Identifier	buf		6322290	0					
ANR	6322478	Argument	sizeof ( buf )		6322290	1					
ANR	6322479	SizeofExpression	sizeof ( buf )		6322290	0					
ANR	6322480	Sizeof	sizeof		6322290	0					
ANR	6322481	SizeofOperand	buf		6322290	1					
ANR	6322482	Argument	"""%02d:%02d:%02d"""		6322290	2					
ANR	6322483	PrimaryExpression	"""%02d:%02d:%02d"""		6322290	0					
ANR	6322484	Argument	tm -> tm_hour		6322290	3					
ANR	6322485	PtrMemberAccess	tm -> tm_hour		6322290	0					
ANR	6322486	Identifier	tm		6322290	0					
ANR	6322487	Identifier	tm_hour		6322290	1					
ANR	6322488	Argument	tm -> tm_min		6322290	4					
ANR	6322489	PtrMemberAccess	tm -> tm_min		6322290	0					
ANR	6322490	Identifier	tm		6322290	0					
ANR	6322491	Identifier	tm_min		6322290	1					
ANR	6322492	Argument	tm -> tm_sec		6322290	5					
ANR	6322493	PtrMemberAccess	tm -> tm_sec		6322290	0					
ANR	6322494	Identifier	tm		6322290	0					
ANR	6322495	Identifier	tm_sec		6322290	1					
ANR	6322496	ExpressionStatement	cstrval = buf	2838:2:58635:58648	6322290	5	True				
ANR	6322497	AssignmentExpression	cstrval = buf		6322290	0		=			
ANR	6322498	Identifier	cstrval		6322290	0					
ANR	6322499	Identifier	buf		6322290	1					
ANR	6322500	Label	add_cstr :	2839:0:58650:58658	6322290	6	True				
ANR	6322501	Identifier	add_cstr		6322290	0					
ANR	6322502	ExpressionStatement	t1 = TOK_STR	2840:2:58662:58674	6322290	7	True				
ANR	6322503	AssignmentExpression	t1 = TOK_STR		6322290	0		=			
ANR	6322504	Identifier	t1		6322290	0					
ANR	6322505	Identifier	TOK_STR		6322290	1					
ANR	6322506	Label	add_cstr1 :	2841:0:58676:58685	6322290	8	True				
ANR	6322507	Identifier	add_cstr1		6322290	0					
ANR	6322508	ExpressionStatement	cstr_new ( & cstr )	2842:2:58689:58705	6322290	9	True				
ANR	6322509	CallExpression	cstr_new ( & cstr )		6322290	0					
ANR	6322510	Callee	cstr_new		6322290	0					
ANR	6322511	Identifier	cstr_new		6322290	0					
ANR	6322512	ArgumentList	& cstr		6322290	1					
ANR	6322513	Argument	& cstr		6322290	0					
ANR	6322514	UnaryOperationExpression	& cstr		6322290	0					
ANR	6322515	UnaryOperator	&		6322290	0					
ANR	6322516	Identifier	cstr		6322290	1					
ANR	6322517	ExpressionStatement	"cstr_cat ( & cstr , cstrval )"	2843:2:58709:58734	6322290	10	True				
ANR	6322518	CallExpression	"cstr_cat ( & cstr , cstrval )"		6322290	0					
ANR	6322519	Callee	cstr_cat		6322290	0					
ANR	6322520	Identifier	cstr_cat		6322290	0					
ANR	6322521	ArgumentList	& cstr		6322290	1					
ANR	6322522	Argument	& cstr		6322290	0					
ANR	6322523	UnaryOperationExpression	& cstr		6322290	0					
ANR	6322524	UnaryOperator	&		6322290	0					
ANR	6322525	Identifier	cstr		6322290	1					
ANR	6322526	Argument	cstrval		6322290	1					
ANR	6322527	Identifier	cstrval		6322290	0					
ANR	6322528	ExpressionStatement	"cstr_ccat ( & cstr , '\\0' )"	2844:2:58738:58761	6322290	11	True				
ANR	6322529	CallExpression	"cstr_ccat ( & cstr , '\\0' )"		6322290	0					
ANR	6322530	Callee	cstr_ccat		6322290	0					
ANR	6322531	Identifier	cstr_ccat		6322290	0					
ANR	6322532	ArgumentList	& cstr		6322290	1					
ANR	6322533	Argument	& cstr		6322290	0					
ANR	6322534	UnaryOperationExpression	& cstr		6322290	0					
ANR	6322535	UnaryOperator	&		6322290	0					
ANR	6322536	Identifier	cstr		6322290	1					
ANR	6322537	Argument	'\\0'		6322290	1					
ANR	6322538	PrimaryExpression	'\\0'		6322290	0					
ANR	6322539	ExpressionStatement	cval . cstr = & cstr	2845:2:58765:58782	6322290	12	True				
ANR	6322540	AssignmentExpression	cval . cstr = & cstr		6322290	0		=			
ANR	6322541	MemberAccess	cval . cstr		6322290	0					
ANR	6322542	Identifier	cval		6322290	0					
ANR	6322543	Identifier	cstr		6322290	1					
ANR	6322544	UnaryOperationExpression	& cstr		6322290	1					
ANR	6322545	UnaryOperator	&		6322290	0					
ANR	6322546	Identifier	cstr		6322290	1					
ANR	6322547	ExpressionStatement	"tok_str_add2 ( tok_str , t1 , & cval )"	2846:2:58786:58819	6322290	13	True				
ANR	6322548	CallExpression	"tok_str_add2 ( tok_str , t1 , & cval )"		6322290	0					
ANR	6322549	Callee	tok_str_add2		6322290	0					
ANR	6322550	Identifier	tok_str_add2		6322290	0					
ANR	6322551	ArgumentList	tok_str		6322290	1					
ANR	6322552	Argument	tok_str		6322290	0					
ANR	6322553	Identifier	tok_str		6322290	0					
ANR	6322554	Argument	t1		6322290	1					
ANR	6322555	Identifier	t1		6322290	0					
ANR	6322556	Argument	& cval		6322290	2					
ANR	6322557	UnaryOperationExpression	& cval		6322290	0					
ANR	6322558	UnaryOperator	&		6322290	0					
ANR	6322559	Identifier	cval		6322290	1					
ANR	6322560	ExpressionStatement	cstr_free ( & cstr )	2847:2:58823:58840	6322290	14	True				
ANR	6322561	CallExpression	cstr_free ( & cstr )		6322290	0					
ANR	6322562	Callee	cstr_free		6322290	0					
ANR	6322563	Identifier	cstr_free		6322290	0					
ANR	6322564	ArgumentList	& cstr		6322290	1					
ANR	6322565	Argument	& cstr		6322290	0					
ANR	6322566	UnaryOperationExpression	& cstr		6322290	0					
ANR	6322567	UnaryOperator	&		6322290	0					
ANR	6322568	Identifier	cstr		6322290	1					
ANR	6322569	ElseStatement	else		6322290	0					
ANR	6322570	CompoundStatement		44:8:1042:1042	6322290	0					
ANR	6322571	ExpressionStatement	mstr = s -> d	2849:2:58854:58865	6322290	0	True				
ANR	6322572	AssignmentExpression	mstr = s -> d		6322290	0		=			
ANR	6322573	Identifier	mstr		6322290	0					
ANR	6322574	PtrMemberAccess	s -> d		6322290	1					
ANR	6322575	Identifier	s		6322290	0					
ANR	6322576	Identifier	d		6322290	1					
ANR	6322577	ExpressionStatement	mstr_allocated = 0	2850:2:58869:58887	6322290	1	True				
ANR	6322578	AssignmentExpression	mstr_allocated = 0		6322290	0		=			
ANR	6322579	Identifier	mstr_allocated		6322290	0					
ANR	6322580	PrimaryExpression	0		6322290	1					
ANR	6322581	IfStatement	if ( s -> type . t == MACRO_FUNC )		6322290	2					
ANR	6322582	Condition	s -> type . t == MACRO_FUNC	2851:6:58895:58917	6322290	0	True				
ANR	6322583	EqualityExpression	s -> type . t == MACRO_FUNC		6322290	0		==			
ANR	6322584	MemberAccess	s -> type . t		6322290	0					
ANR	6322585	PtrMemberAccess	s -> type		6322290	0					
ANR	6322586	Identifier	s		6322290	0					
ANR	6322587	Identifier	type		6322290	1					
ANR	6322588	Identifier	t		6322290	1					
ANR	6322589	Identifier	MACRO_FUNC		6322290	1					
ANR	6322590	CompoundStatement		47:31:1112:1112	6322290	1					
ANR	6322591	Label	redo :	2854:0:59028:59032	6322290	0	True				
ANR	6322592	Identifier	redo		6322290	0					
ANR	6322593	IfStatement	if ( macro_ptr )		6322290	1					
ANR	6322594	Condition	macro_ptr	2855:7:59041:59049	6322290	0	True				
ANR	6322595	Identifier	macro_ptr		6322290	0					
ANR	6322596	CompoundStatement		51:18:1244:1244	6322290	1					
ANR	6322597	ExpressionStatement	p = macro_ptr	2856:4:59058:59071	6322290	0	True				
ANR	6322598	AssignmentExpression	p = macro_ptr		6322290	0		=			
ANR	6322599	Identifier	p		6322290	0					
ANR	6322600	Identifier	macro_ptr		6322290	1					
ANR	6322601	WhileStatement	while ( is_space ( t = * p ) || TOK_LINEFEED == t )		6322290	1					
ANR	6322602	Condition	is_space ( t = * p ) || TOK_LINEFEED == t	2857:11:59084:59121	6322290	0	True				
ANR	6322603	OrExpression	is_space ( t = * p ) || TOK_LINEFEED == t		6322290	0		||			
ANR	6322604	CallExpression	is_space ( t = * p )		6322290	0					
ANR	6322605	Callee	is_space		6322290	0					
ANR	6322606	Identifier	is_space		6322290	0					
ANR	6322607	ArgumentList	t = * p		6322290	1					
ANR	6322608	Argument	t = * p		6322290	0					
ANR	6322609	AssignmentExpression	t = * p		6322290	0		=			
ANR	6322610	Identifier	t		6322290	0					
ANR	6322611	UnaryOperationExpression	* p		6322290	1					
ANR	6322612	UnaryOperator	*		6322290	0					
ANR	6322613	Identifier	p		6322290	1					
ANR	6322614	EqualityExpression	TOK_LINEFEED == t		6322290	1		==			
ANR	6322615	Identifier	TOK_LINEFEED		6322290	0					
ANR	6322616	Identifier	t		6322290	1					
ANR	6322617	ExpressionStatement	++ p	2858:5:59129:59132	6322290	1	True				
ANR	6322618	UnaryExpression	++ p		6322290	0					
ANR	6322619	IncDec	++		6322290	0					
ANR	6322620	Identifier	p		6322290	1					
ANR	6322621	IfStatement	if ( t == 0 && can_read_stream )		6322290	2					
ANR	6322622	Condition	t == 0 && can_read_stream	2859:8:59142:59166	6322290	0	True				
ANR	6322623	AndExpression	t == 0 && can_read_stream		6322290	0		&&			
ANR	6322624	EqualityExpression	t == 0		6322290	0		==			
ANR	6322625	Identifier	t		6322290	0					
ANR	6322626	PrimaryExpression	0		6322290	1					
ANR	6322627	Identifier	can_read_stream		6322290	1					
ANR	6322628	CompoundStatement		58:5:1452:1493	6322290	1					
ANR	6322629	IdentifierDeclStatement	struct macro_level * ml = * can_read_stream ;	2862:5:59260:59301	6322290	0	True				
ANR	6322630	IdentifierDecl	* ml = * can_read_stream		6322290	0					
ANR	6322631	IdentifierDeclType	struct macro_level *		6322290	0					
ANR	6322632	Identifier	ml		6322290	1					
ANR	6322633	AssignmentExpression	* ml = * can_read_stream		6322290	2		=			
ANR	6322634	Identifier	ml		6322290	0					
ANR	6322635	UnaryOperationExpression	* can_read_stream		6322290	1					
ANR	6322636	UnaryOperator	*		6322290	0					
ANR	6322637	Identifier	can_read_stream		6322290	1					
ANR	6322638	ExpressionStatement	macro_ptr = NULL	2863:5:59308:59324	6322290	1	True				
ANR	6322639	AssignmentExpression	macro_ptr = NULL		6322290	0		=			
ANR	6322640	Identifier	macro_ptr		6322290	0					
ANR	6322641	Identifier	NULL		6322290	1					
ANR	6322642	IfStatement	if ( ml )		6322290	2					
ANR	6322643	Condition	ml	2864:9:59335:59336	6322290	0	True				
ANR	6322644	Identifier	ml		6322290	0					
ANR	6322645	CompoundStatement		60:13:1531:1531	6322290	1					
ANR	6322646	ExpressionStatement	macro_ptr = ml -> p	2865:6:59347:59364	6322290	0	True				
ANR	6322647	AssignmentExpression	macro_ptr = ml -> p		6322290	0		=			
ANR	6322648	Identifier	macro_ptr		6322290	0					
ANR	6322649	PtrMemberAccess	ml -> p		6322290	1					
ANR	6322650	Identifier	ml		6322290	0					
ANR	6322651	Identifier	p		6322290	1					
ANR	6322652	ExpressionStatement	ml -> p = NULL	2866:6:59372:59384	6322290	1	True				
ANR	6322653	AssignmentExpression	ml -> p = NULL		6322290	0		=			
ANR	6322654	PtrMemberAccess	ml -> p		6322290	0					
ANR	6322655	Identifier	ml		6322290	0					
ANR	6322656	Identifier	p		6322290	1					
ANR	6322657	Identifier	NULL		6322290	1					
ANR	6322658	ExpressionStatement	* can_read_stream = ml -> prev	2867:6:59392:59419	6322290	2	True				
ANR	6322659	AssignmentExpression	* can_read_stream = ml -> prev		6322290	0		=			
ANR	6322660	UnaryOperationExpression	* can_read_stream		6322290	0					
ANR	6322661	UnaryOperator	*		6322290	0					
ANR	6322662	Identifier	can_read_stream		6322290	1					
ANR	6322663	PtrMemberAccess	ml -> prev		6322290	1					
ANR	6322664	Identifier	ml		6322290	0					
ANR	6322665	Identifier	prev		6322290	1					
ANR	6322666	ExpressionStatement	( * nested_list ) -> v = - 1	2870:5:59489:59511	6322290	3	True				
ANR	6322667	AssignmentExpression	( * nested_list ) -> v = - 1		6322290	0		=			
ANR	6322668	PtrMemberAccess	( * nested_list ) -> v		6322290	0					
ANR	6322669	UnaryOperationExpression	* nested_list		6322290	0					
ANR	6322670	UnaryOperator	*		6322290	0					
ANR	6322671	Identifier	nested_list		6322290	1					
ANR	6322672	Identifier	v		6322290	1					
ANR	6322673	UnaryOperationExpression	- 1		6322290	1					
ANR	6322674	UnaryOperator	-		6322290	0					
ANR	6322675	PrimaryExpression	1		6322290	1					
ANR	6322676	GotoStatement	goto redo ;	2871:5:59518:59527	6322290	4	True				
ANR	6322677	Identifier	redo		6322290	0					
ANR	6322678	ElseStatement	else		6322290	0					
ANR	6322679	CompoundStatement		69:10:1737:1737	6322290	0					
ANR	6322680	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	2874:4:59551:59572	6322290	0	True				
ANR	6322681	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6322290	0		=			
ANR	6322682	Identifier	ch		6322290	0					
ANR	6322683	ArrayIndexing	file -> buf_ptr [ 0 ]		6322290	1					
ANR	6322684	PtrMemberAccess	file -> buf_ptr		6322290	0					
ANR	6322685	Identifier	file		6322290	0					
ANR	6322686	Identifier	buf_ptr		6322290	1					
ANR	6322687	PrimaryExpression	0		6322290	1					
ANR	6322688	WhileStatement	while ( is_space ( ch ) || ch == '\\n' || ch == '/' )		6322290	1					
ANR	6322689	Condition	is_space ( ch ) || ch == '\\n' || ch == '/'	2875:11:59585:59624	6322290	0	True				
ANR	6322690	OrExpression	is_space ( ch ) || ch == '\\n' || ch == '/'		6322290	0		||			
ANR	6322691	CallExpression	is_space ( ch )		6322290	0					
ANR	6322692	Callee	is_space		6322290	0					
ANR	6322693	Identifier	is_space		6322290	0					
ANR	6322694	ArgumentList	ch		6322290	1					
ANR	6322695	Argument	ch		6322290	0					
ANR	6322696	Identifier	ch		6322290	0					
ANR	6322697	OrExpression	ch == '\\n' || ch == '/'		6322290	1		||			
ANR	6322698	EqualityExpression	ch == '\\n'		6322290	0		==			
ANR	6322699	Identifier	ch		6322290	0					
ANR	6322700	PrimaryExpression	'\\n'		6322290	1					
ANR	6322701	EqualityExpression	ch == '/'		6322290	1		==			
ANR	6322702	Identifier	ch		6322290	0					
ANR	6322703	PrimaryExpression	'/'		6322290	1					
ANR	6322704	CompoundStatement		71:53:1819:1819	6322290	1					
ANR	6322705	IfStatement	if ( ch == '/' )		6322290	0					
ANR	6322706	Condition	ch == '/'	2876:9:59638:59646	6322290	0	True				
ANR	6322707	EqualityExpression	ch == '/'		6322290	0		==			
ANR	6322708	Identifier	ch		6322290	0					
ANR	6322709	PrimaryExpression	'/'		6322290	1					
ANR	6322710	CompoundStatement		74:6:1862:1888	6322290	1					
ANR	6322711	IdentifierDeclStatement	int c ;	2877:6:59657:59662	6322290	0	True				
ANR	6322712	IdentifierDecl	c		6322290	0					
ANR	6322713	IdentifierDeclType	int		6322290	0					
ANR	6322714	Identifier	c		6322290	1					
ANR	6322715	IdentifierDeclStatement	uint8_t * p = file -> buf_ptr ;	2878:6:59670:59696	6322290	1	True				
ANR	6322716	IdentifierDecl	* p = file -> buf_ptr		6322290	0					
ANR	6322717	IdentifierDeclType	uint8_t *		6322290	0					
ANR	6322718	Identifier	p		6322290	1					
ANR	6322719	AssignmentExpression	* p = file -> buf_ptr		6322290	2		=			
ANR	6322720	Identifier	p		6322290	0					
ANR	6322721	PtrMemberAccess	file -> buf_ptr		6322290	1					
ANR	6322722	Identifier	file		6322290	0					
ANR	6322723	Identifier	buf_ptr		6322290	1					
ANR	6322724	ExpressionStatement	"PEEKC ( c , p )"	2879:6:59704:59716	6322290	2	True				
ANR	6322725	CallExpression	"PEEKC ( c , p )"		6322290	0					
ANR	6322726	Callee	PEEKC		6322290	0					
ANR	6322727	Identifier	PEEKC		6322290	0					
ANR	6322728	ArgumentList	c		6322290	1					
ANR	6322729	Argument	c		6322290	0					
ANR	6322730	Identifier	c		6322290	0					
ANR	6322731	Argument	p		6322290	1					
ANR	6322732	Identifier	p		6322290	0					
ANR	6322733	IfStatement	if ( c == '*' )		6322290	3					
ANR	6322734	Condition	c == '*'	2880:10:59728:59735	6322290	0	True				
ANR	6322735	EqualityExpression	c == '*'		6322290	0		==			
ANR	6322736	Identifier	c		6322290	0					
ANR	6322737	PrimaryExpression	'*'		6322290	1					
ANR	6322738	CompoundStatement		76:20:1930:1930	6322290	1					
ANR	6322739	ExpressionStatement	p = parse_comment ( p )	2881:7:59747:59768	6322290	0	True				
ANR	6322740	AssignmentExpression	p = parse_comment ( p )		6322290	0		=			
ANR	6322741	Identifier	p		6322290	0					
ANR	6322742	CallExpression	parse_comment ( p )		6322290	1					
ANR	6322743	Callee	parse_comment		6322290	0					
ANR	6322744	Identifier	parse_comment		6322290	0					
ANR	6322745	ArgumentList	p		6322290	1					
ANR	6322746	Argument	p		6322290	0					
ANR	6322747	Identifier	p		6322290	0					
ANR	6322748	ExpressionStatement	file -> buf_ptr = p - 1	2882:7:59777:59798	6322290	1	True				
ANR	6322749	AssignmentExpression	file -> buf_ptr = p - 1		6322290	0		=			
ANR	6322750	PtrMemberAccess	file -> buf_ptr		6322290	0					
ANR	6322751	Identifier	file		6322290	0					
ANR	6322752	Identifier	buf_ptr		6322290	1					
ANR	6322753	AdditiveExpression	p - 1		6322290	1		-			
ANR	6322754	Identifier	p		6322290	0					
ANR	6322755	PrimaryExpression	1		6322290	1					
ANR	6322756	ElseStatement	else		6322290	0					
ANR	6322757	IfStatement	if ( c == '/' )		6322290	0					
ANR	6322758	Condition	c == '/'	2883:17:59817:59824	6322290	0	True				
ANR	6322759	EqualityExpression	c == '/'		6322290	0		==			
ANR	6322760	Identifier	c		6322290	0					
ANR	6322761	PrimaryExpression	'/'		6322290	1					
ANR	6322762	CompoundStatement		79:27:2019:2019	6322290	1					
ANR	6322763	ExpressionStatement	p = parse_line_comment ( p )	2884:7:59836:59862	6322290	0	True				
ANR	6322764	AssignmentExpression	p = parse_line_comment ( p )		6322290	0		=			
ANR	6322765	Identifier	p		6322290	0					
ANR	6322766	CallExpression	parse_line_comment ( p )		6322290	1					
ANR	6322767	Callee	parse_line_comment		6322290	0					
ANR	6322768	Identifier	parse_line_comment		6322290	0					
ANR	6322769	ArgumentList	p		6322290	1					
ANR	6322770	Argument	p		6322290	0					
ANR	6322771	Identifier	p		6322290	0					
ANR	6322772	ExpressionStatement	file -> buf_ptr = p - 1	2885:7:59871:59892	6322290	1	True				
ANR	6322773	AssignmentExpression	file -> buf_ptr = p - 1		6322290	0		=			
ANR	6322774	PtrMemberAccess	file -> buf_ptr		6322290	0					
ANR	6322775	Identifier	file		6322290	0					
ANR	6322776	Identifier	buf_ptr		6322290	1					
ANR	6322777	AdditiveExpression	p - 1		6322290	1		-			
ANR	6322778	Identifier	p		6322290	0					
ANR	6322779	PrimaryExpression	1		6322290	1					
ANR	6322780	ElseStatement	else		6322290	0					
ANR	6322781	CompoundStatement		82:13:2099:2099	6322290	0					
ANR	6322782	BreakStatement	break ;	2887:7:59916:59921	6322290	0	True				
ANR	6322783	ExpressionStatement	cinp ( )	2890:5:59943:59950	6322290	1	True				
ANR	6322784	CallExpression	cinp ( )		6322290	0					
ANR	6322785	Callee	cinp		6322290	0					
ANR	6322786	Identifier	cinp		6322290	0					
ANR	6322787	ArgumentList			6322290	1					
ANR	6322788	ExpressionStatement	t = ch	2892:4:59962:59968	6322290	2	True				
ANR	6322789	AssignmentExpression	t = ch		6322290	0		=			
ANR	6322790	Identifier	t		6322290	0					
ANR	6322791	Identifier	ch		6322290	1					
ANR	6322792	IfStatement	if ( t != '(' )		6322290	2					
ANR	6322793	Condition	t != '('	2894:7:59982:59989	6322290	0	True				
ANR	6322794	EqualityExpression	t != '('		6322290	0		!=			
ANR	6322795	Identifier	t		6322290	0					
ANR	6322796	PrimaryExpression	'('		6322290	1					
ANR	6322797	CompoundStatement		90:17:2184:2184	6322290	1					
ANR	6322798	ReturnStatement	return - 1 ;	2895:4:60019:60028	6322290	0	True				
ANR	6322799	UnaryOperationExpression	- 1		6322290	0					
ANR	6322800	UnaryOperator	-		6322290	0					
ANR	6322801	PrimaryExpression	1		6322290	1					
ANR	6322802	ExpressionStatement	next_nomacro ( )	2899:3:60063:60078	6322290	3	True				
ANR	6322803	CallExpression	next_nomacro ( )		6322290	0					
ANR	6322804	Callee	next_nomacro		6322290	0					
ANR	6322805	Identifier	next_nomacro		6322290	0					
ANR	6322806	ArgumentList			6322290	1					
ANR	6322807	ExpressionStatement	next_nomacro ( )	2900:3:60083:60098	6322290	4	True				
ANR	6322808	CallExpression	next_nomacro ( )		6322290	0					
ANR	6322809	Callee	next_nomacro		6322290	0					
ANR	6322810	Identifier	next_nomacro		6322290	0					
ANR	6322811	ArgumentList			6322290	1					
ANR	6322812	ExpressionStatement	args = NULL	2901:3:60103:60114	6322290	5	True				
ANR	6322813	AssignmentExpression	args = NULL		6322290	0		=			
ANR	6322814	Identifier	args		6322290	0					
ANR	6322815	Identifier	NULL		6322290	1					
ANR	6322816	ExpressionStatement	sa = s -> next	2902:3:60119:60131	6322290	6	True				
ANR	6322817	AssignmentExpression	sa = s -> next		6322290	0		=			
ANR	6322818	Identifier	sa		6322290	0					
ANR	6322819	PtrMemberAccess	s -> next		6322290	1					
ANR	6322820	Identifier	s		6322290	0					
ANR	6322821	Identifier	next		6322290	1					
ANR	6322822	WhileStatement	while ( tcc_nerr ( ) == 0 )		6322290	7					
ANR	6322823	Condition	tcc_nerr ( ) == 0	2904:10:60200:60215	6322290	0	True				
ANR	6322824	EqualityExpression	tcc_nerr ( ) == 0		6322290	0		==			
ANR	6322825	CallExpression	tcc_nerr ( )		6322290	0					
ANR	6322826	Callee	tcc_nerr		6322290	0					
ANR	6322827	Identifier	tcc_nerr		6322290	0					
ANR	6322828	ArgumentList			6322290	1					
ANR	6322829	PrimaryExpression	0		6322290	1					
ANR	6322830	CompoundStatement		100:28:2410:2410	6322290	1					
ANR	6322831	IfStatement	if ( ! args && ! sa && tok == ')' )		6322290	0					
ANR	6322832	Condition	! args && ! sa && tok == ')'	2906:8:60255:60280	6322290	0	True				
ANR	6322833	AndExpression	! args && ! sa && tok == ')'		6322290	0		&&			
ANR	6322834	UnaryOperationExpression	! args		6322290	0					
ANR	6322835	UnaryOperator	!		6322290	0					
ANR	6322836	Identifier	args		6322290	1					
ANR	6322837	AndExpression	! sa && tok == ')'		6322290	1		&&			
ANR	6322838	UnaryOperationExpression	! sa		6322290	0					
ANR	6322839	UnaryOperator	!		6322290	0					
ANR	6322840	Identifier	sa		6322290	1					
ANR	6322841	EqualityExpression	tok == ')'		6322290	1		==			
ANR	6322842	Identifier	tok		6322290	0					
ANR	6322843	PrimaryExpression	')'		6322290	1					
ANR	6322844	CompoundStatement		102:36:2475:2475	6322290	1					
ANR	6322845	BreakStatement	break ;	2907:5:60290:60295	6322290	0	True				
ANR	6322846	IfStatement	if ( ! sa )		6322290	1					
ANR	6322847	Condition	! sa	2909:8:60311:60313	6322290	0	True				
ANR	6322848	UnaryOperationExpression	! sa		6322290	0					
ANR	6322849	UnaryOperator	!		6322290	0					
ANR	6322850	Identifier	sa		6322290	1					
ANR	6322851	CompoundStatement		105:13:2508:2508	6322290	1					
ANR	6322852	ExpressionStatement	"tcc_error ( ""macro '%s' used with too many args"" , get_tok_str ( s -> v , 0 ) )"	2910:5:60323:60400	6322290	0	True				
ANR	6322853	CallExpression	"tcc_error ( ""macro '%s' used with too many args"" , get_tok_str ( s -> v , 0 ) )"		6322290	0					
ANR	6322854	Callee	tcc_error		6322290	0					
ANR	6322855	Identifier	tcc_error		6322290	0					
ANR	6322856	ArgumentList	"""macro '%s' used with too many args"""		6322290	1					
ANR	6322857	Argument	"""macro '%s' used with too many args"""		6322290	0					
ANR	6322858	PrimaryExpression	"""macro '%s' used with too many args"""		6322290	0					
ANR	6322859	Argument	"get_tok_str ( s -> v , 0 )"		6322290	1					
ANR	6322860	CallExpression	"get_tok_str ( s -> v , 0 )"		6322290	0					
ANR	6322861	Callee	get_tok_str		6322290	0					
ANR	6322862	Identifier	get_tok_str		6322290	0					
ANR	6322863	ArgumentList	s -> v		6322290	1					
ANR	6322864	Argument	s -> v		6322290	0					
ANR	6322865	PtrMemberAccess	s -> v		6322290	0					
ANR	6322866	Identifier	s		6322290	0					
ANR	6322867	Identifier	v		6322290	1					
ANR	6322868	Argument	0		6322290	1					
ANR	6322869	PrimaryExpression	0		6322290	0					
ANR	6322870	ExpressionStatement	tok_str_new ( & str )	2913:4:60412:60430	6322290	2	True				
ANR	6322871	CallExpression	tok_str_new ( & str )		6322290	0					
ANR	6322872	Callee	tok_str_new		6322290	0					
ANR	6322873	Identifier	tok_str_new		6322290	0					
ANR	6322874	ArgumentList	& str		6322290	1					
ANR	6322875	Argument	& str		6322290	0					
ANR	6322876	UnaryOperationExpression	& str		6322290	0					
ANR	6322877	UnaryOperator	&		6322290	0					
ANR	6322878	Identifier	str		6322290	1					
ANR	6322879	ExpressionStatement	parlevel = spc = 0	2914:4:60436:60454	6322290	3	True				
ANR	6322880	AssignmentExpression	parlevel = spc = 0		6322290	0		=			
ANR	6322881	Identifier	parlevel		6322290	0					
ANR	6322882	AssignmentExpression	spc = 0		6322290	1		=			
ANR	6322883	Identifier	spc		6322290	0					
ANR	6322884	PrimaryExpression	0		6322290	1					
ANR	6322885	WhileStatement	"while ( ( parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) ) ) && tok != - 1 )"		6322290	4					
ANR	6322886	Condition	"( parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) ) ) && tok != - 1"	2916:11:60516:60618	6322290	0	True				
ANR	6322887	AndExpression	"( parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) ) ) && tok != - 1"		6322290	0		&&			
ANR	6322888	OrExpression	"parlevel > 0 || ( tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) ) )"		6322290	0		||			
ANR	6322889	RelationalExpression	parlevel > 0		6322290	0		>			
ANR	6322890	Identifier	parlevel		6322290	0					
ANR	6322891	PrimaryExpression	0		6322290	1					
ANR	6322892	AndExpression	"tok != ')' && ( tok != ',' || ( sa && sa -> type . t ) )"		6322290	1		&&			
ANR	6322893	EqualityExpression	tok != ')'		6322290	0		!=			
ANR	6322894	Identifier	tok		6322290	0					
ANR	6322895	PrimaryExpression	')'		6322290	1					
ANR	6322896	OrExpression	"tok != ',' || ( sa && sa -> type . t )"		6322290	1		||			
ANR	6322897	EqualityExpression	"tok != ','"		6322290	0		!=			
ANR	6322898	Identifier	tok		6322290	0					
ANR	6322899	PrimaryExpression	"','"		6322290	1					
ANR	6322900	AndExpression	sa && sa -> type . t		6322290	1		&&			
ANR	6322901	Identifier	sa		6322290	0					
ANR	6322902	MemberAccess	sa -> type . t		6322290	1					
ANR	6322903	PtrMemberAccess	sa -> type		6322290	0					
ANR	6322904	Identifier	sa		6322290	0					
ANR	6322905	Identifier	type		6322290	1					
ANR	6322906	Identifier	t		6322290	1					
ANR	6322907	EqualityExpression	tok != - 1		6322290	1		!=			
ANR	6322908	Identifier	tok		6322290	0					
ANR	6322909	UnaryOperationExpression	- 1		6322290	1					
ANR	6322910	UnaryOperator	-		6322290	0					
ANR	6322911	PrimaryExpression	1		6322290	1					
ANR	6322912	CompoundStatement		115:22:2813:2813	6322290	1					
ANR	6322913	IfStatement	if ( tok == '(' )		6322290	0					
ANR	6322914	Condition	tok == '('	2920:9:60632:60641	6322290	0	True				
ANR	6322915	EqualityExpression	tok == '('		6322290	0		==			
ANR	6322916	Identifier	tok		6322290	0					
ANR	6322917	PrimaryExpression	'('		6322290	1					
ANR	6322918	CompoundStatement		116:21:2836:2836	6322290	1					
ANR	6322919	ExpressionStatement	parlevel ++	2921:6:60652:60662	6322290	0	True				
ANR	6322920	PostIncDecOperationExpression	parlevel ++		6322290	0					
ANR	6322921	Identifier	parlevel		6322290	0					
ANR	6322922	IncDec	++		6322290	1					
ANR	6322923	ElseStatement	else		6322290	0					
ANR	6322924	IfStatement	if ( tok == ')' )		6322290	0					
ANR	6322925	Condition	tok == ')'	2922:16:60680:60689	6322290	0	True				
ANR	6322926	EqualityExpression	tok == ')'		6322290	0		==			
ANR	6322927	Identifier	tok		6322290	0					
ANR	6322928	PrimaryExpression	')'		6322290	1					
ANR	6322929	CompoundStatement		118:28:2884:2884	6322290	1					
ANR	6322930	ExpressionStatement	parlevel --	2923:6:60700:60710	6322290	0	True				
ANR	6322931	PostIncDecOperationExpression	parlevel --		6322290	0					
ANR	6322932	Identifier	parlevel		6322290	0					
ANR	6322933	IncDec	--		6322290	1					
ANR	6322934	IfStatement	if ( tok == TOK_LINEFEED )		6322290	1					
ANR	6322935	Condition	tok == TOK_LINEFEED	2925:9:60728:60746	6322290	0	True				
ANR	6322936	EqualityExpression	tok == TOK_LINEFEED		6322290	0		==			
ANR	6322937	Identifier	tok		6322290	0					
ANR	6322938	Identifier	TOK_LINEFEED		6322290	1					
ANR	6322939	CompoundStatement		121:30:2941:2941	6322290	1					
ANR	6322940	ExpressionStatement	tok = ' '	2926:6:60757:60766	6322290	0	True				
ANR	6322941	AssignmentExpression	tok = ' '		6322290	0		=			
ANR	6322942	Identifier	tok		6322290	0					
ANR	6322943	PrimaryExpression	' '		6322290	1					
ANR	6322944	IfStatement	"if ( ! check_space ( tok , & spc ) )"		6322290	2					
ANR	6322945	Condition	"! check_space ( tok , & spc )"	2928:9:60784:60807	6322290	0	True				
ANR	6322946	UnaryOperationExpression	"! check_space ( tok , & spc )"		6322290	0					
ANR	6322947	UnaryOperator	!		6322290	0					
ANR	6322948	CallExpression	"check_space ( tok , & spc )"		6322290	1					
ANR	6322949	Callee	check_space		6322290	0					
ANR	6322950	Identifier	check_space		6322290	0					
ANR	6322951	ArgumentList	tok		6322290	1					
ANR	6322952	Argument	tok		6322290	0					
ANR	6322953	Identifier	tok		6322290	0					
ANR	6322954	Argument	& spc		6322290	1					
ANR	6322955	UnaryOperationExpression	& spc		6322290	0					
ANR	6322956	UnaryOperator	&		6322290	0					
ANR	6322957	Identifier	spc		6322290	1					
ANR	6322958	CompoundStatement		124:35:3002:3002	6322290	1					
ANR	6322959	ExpressionStatement	"tok_str_add2 ( & str , tok , & tokc )"	2929:6:60818:60849	6322290	0	True				
ANR	6322960	CallExpression	"tok_str_add2 ( & str , tok , & tokc )"		6322290	0					
ANR	6322961	Callee	tok_str_add2		6322290	0					
ANR	6322962	Identifier	tok_str_add2		6322290	0					
ANR	6322963	ArgumentList	& str		6322290	1					
ANR	6322964	Argument	& str		6322290	0					
ANR	6322965	UnaryOperationExpression	& str		6322290	0					
ANR	6322966	UnaryOperator	&		6322290	0					
ANR	6322967	Identifier	str		6322290	1					
ANR	6322968	Argument	tok		6322290	1					
ANR	6322969	Identifier	tok		6322290	0					
ANR	6322970	Argument	& tokc		6322290	2					
ANR	6322971	UnaryOperationExpression	& tokc		6322290	0					
ANR	6322972	UnaryOperator	&		6322290	0					
ANR	6322973	Identifier	tokc		6322290	1					
ANR	6322974	ExpressionStatement	next_nomacro_spc ( )	2931:5:60863:60882	6322290	3	True				
ANR	6322975	CallExpression	next_nomacro_spc ( )		6322290	0					
ANR	6322976	Callee	next_nomacro_spc		6322290	0					
ANR	6322977	Identifier	next_nomacro_spc		6322290	0					
ANR	6322978	ArgumentList			6322290	1					
ANR	6322979	ExpressionStatement	str . len -= spc	2933:4:60894:60908	6322290	5	True				
ANR	6322980	AssignmentExpression	str . len -= spc		6322290	0		-=			
ANR	6322981	MemberAccess	str . len		6322290	0					
ANR	6322982	Identifier	str		6322290	0					
ANR	6322983	Identifier	len		6322290	1					
ANR	6322984	Identifier	spc		6322290	1					
ANR	6322985	ExpressionStatement	"tok_str_add ( & str , 0 )"	2934:4:60914:60935	6322290	6	True				
ANR	6322986	CallExpression	"tok_str_add ( & str , 0 )"		6322290	0					
ANR	6322987	Callee	tok_str_add		6322290	0					
ANR	6322988	Identifier	tok_str_add		6322290	0					
ANR	6322989	ArgumentList	& str		6322290	1					
ANR	6322990	Argument	& str		6322290	0					
ANR	6322991	UnaryOperationExpression	& str		6322290	0					
ANR	6322992	UnaryOperator	&		6322290	0					
ANR	6322993	Identifier	str		6322290	1					
ANR	6322994	Argument	0		6322290	1					
ANR	6322995	PrimaryExpression	0		6322290	0					
ANR	6322996	ExpressionStatement	"sa1 = sa ? sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 ) : NULL"	2935:4:60941:61011	6322290	7	True				
ANR	6322997	AssignmentExpression	"sa1 = sa ? sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 ) : NULL"		6322290	0		=			
ANR	6322998	Identifier	sa1		6322290	0					
ANR	6322999	ConditionalExpression	"sa ? sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 ) : NULL"		6322290	1					
ANR	6323000	Condition	sa		6322290	0					
ANR	6323001	Identifier	sa		6322290	0					
ANR	6323002	CallExpression	"sym_push2 ( & args , sa -> v & ~SYM_FIELD , sa -> type . t , 0 )"		6322290	1					
ANR	6323003	Callee	sym_push2		6322290	0					
ANR	6323004	Identifier	sym_push2		6322290	0					
ANR	6323005	ArgumentList	& args		6322290	1					
ANR	6323006	Argument	& args		6322290	0					
ANR	6323007	UnaryOperationExpression	& args		6322290	0					
ANR	6323008	UnaryOperator	&		6322290	0					
ANR	6323009	Identifier	args		6322290	1					
ANR	6323010	Argument	sa -> v & ~SYM_FIELD		6322290	1					
ANR	6323011	BitAndExpression	sa -> v & ~SYM_FIELD		6322290	0		&			
ANR	6323012	PtrMemberAccess	sa -> v		6322290	0					
ANR	6323013	Identifier	sa		6322290	0					
ANR	6323014	Identifier	v		6322290	1					
ANR	6323015	Identifier	~SYM_FIELD		6322290	1					
ANR	6323016	Argument	sa -> type . t		6322290	2					
ANR	6323017	MemberAccess	sa -> type . t		6322290	0					
ANR	6323018	PtrMemberAccess	sa -> type		6322290	0					
ANR	6323019	Identifier	sa		6322290	0					
ANR	6323020	Identifier	type		6322290	1					
ANR	6323021	Identifier	t		6322290	1					
ANR	6323022	Argument	0		6322290	3					
ANR	6323023	PrimaryExpression	0		6322290	0					
ANR	6323024	Identifier	NULL		6322290	2					
ANR	6323025	IfStatement	if ( ! sa1 )		6322290	8					
ANR	6323026	Condition	! sa1	2936:8:61021:61024	6322290	0	True				
ANR	6323027	UnaryOperationExpression	! sa1		6322290	0					
ANR	6323028	UnaryOperator	!		6322290	0					
ANR	6323029	Identifier	sa1		6322290	1					
ANR	6323030	CompoundStatement		132:14:3219:3219	6322290	1					
ANR	6323031	ReturnStatement	return - 1 ;	2937:5:61034:61043	6322290	0	True				
ANR	6323032	UnaryOperationExpression	- 1		6322290	0					
ANR	6323033	UnaryOperator	-		6322290	0					
ANR	6323034	PrimaryExpression	1		6322290	1					
ANR	6323035	ExpressionStatement	sa1 -> d = str . str	2939:4:61055:61071	6322290	9	True				
ANR	6323036	AssignmentExpression	sa1 -> d = str . str		6322290	0		=			
ANR	6323037	PtrMemberAccess	sa1 -> d		6322290	0					
ANR	6323038	Identifier	sa1		6322290	0					
ANR	6323039	Identifier	d		6322290	1					
ANR	6323040	MemberAccess	str . str		6322290	1					
ANR	6323041	Identifier	str		6322290	0					
ANR	6323042	Identifier	str		6322290	1					
ANR	6323043	ExpressionStatement	sa = sa -> next	2940:4:61077:61090	6322290	10	True				
ANR	6323044	AssignmentExpression	sa = sa -> next		6322290	0		=			
ANR	6323045	Identifier	sa		6322290	0					
ANR	6323046	PtrMemberAccess	sa -> next		6322290	1					
ANR	6323047	Identifier	sa		6322290	0					
ANR	6323048	Identifier	next		6322290	1					
ANR	6323049	IfStatement	if ( tok == ')' )		6322290	11					
ANR	6323050	Condition	tok == ')'	2941:8:61100:61109	6322290	0	True				
ANR	6323051	EqualityExpression	tok == ')'		6322290	0		==			
ANR	6323052	Identifier	tok		6322290	0					
ANR	6323053	PrimaryExpression	')'		6322290	1					
ANR	6323054	CompoundStatement		137:20:3304:3304	6322290	1					
ANR	6323055	IfStatement	if ( sa && sa -> type . t && gnu_ext )		6322290	0					
ANR	6323056	Condition	sa && sa -> type . t && gnu_ext	2944:9:61220:61246	6322290	0	True				
ANR	6323057	AndExpression	sa && sa -> type . t && gnu_ext		6322290	0		&&			
ANR	6323058	Identifier	sa		6322290	0					
ANR	6323059	AndExpression	sa -> type . t && gnu_ext		6322290	1		&&			
ANR	6323060	MemberAccess	sa -> type . t		6322290	0					
ANR	6323061	PtrMemberAccess	sa -> type		6322290	0					
ANR	6323062	Identifier	sa		6322290	0					
ANR	6323063	Identifier	type		6322290	1					
ANR	6323064	Identifier	t		6322290	1					
ANR	6323065	Identifier	gnu_ext		6322290	1					
ANR	6323066	CompoundStatement		140:38:3441:3441	6322290	1					
ANR	6323067	ContinueStatement	continue ;	2945:6:61257:61265	6322290	0	True				
ANR	6323068	ElseStatement	else		6322290	0					
ANR	6323069	CompoundStatement		142:12:3471:3471	6322290	0					
ANR	6323070	BreakStatement	break ;	2947:6:61287:61292	6322290	0	True				
ANR	6323071	IfStatement	"if ( tok != ',' )"		6322290	12					
ANR	6323072	Condition	"tok != ','"	2950:8:61315:61324	6322290	0	True				
ANR	6323073	EqualityExpression	"tok != ','"		6322290	0		!=			
ANR	6323074	Identifier	tok		6322290	0					
ANR	6323075	PrimaryExpression	"','"		6322290	1					
ANR	6323076	CompoundStatement		146:20:3519:3519	6322290	1					
ANR	6323077	ExpressionStatement	"expect ( "","" )"	2951:5:61334:61346	6322290	0	True				
ANR	6323078	CallExpression	"expect ( "","" )"		6322290	0					
ANR	6323079	Callee	expect		6322290	0					
ANR	6323080	Identifier	expect		6322290	0					
ANR	6323081	ArgumentList	""","""		6322290	1					
ANR	6323082	Argument	""","""		6322290	0					
ANR	6323083	PrimaryExpression	""","""		6322290	0					
ANR	6323084	ReturnStatement	return 1 ;	2952:5:61353:61361	6322290	1	True				
ANR	6323085	PrimaryExpression	1		6322290	0					
ANR	6323086	ExpressionStatement	next_nomacro ( )	2954:4:61373:61388	6322290	13	True				
ANR	6323087	CallExpression	next_nomacro ( )		6322290	0					
ANR	6323088	Callee	next_nomacro		6322290	0					
ANR	6323089	Identifier	next_nomacro		6322290	0					
ANR	6323090	ArgumentList			6322290	1					
ANR	6323091	IfStatement	if ( sa )		6322290	8					
ANR	6323092	Condition	sa	2956:7:61402:61403	6322290	0	True				
ANR	6323093	Identifier	sa		6322290	0					
ANR	6323094	CompoundStatement		152:11:3598:3598	6322290	1					
ANR	6323095	ExpressionStatement	"tcc_error ( ""macro '%s' used with too few args"" , get_tok_str ( s -> v , 0 ) )"	2957:4:61412:61487	6322290	0	True				
ANR	6323096	CallExpression	"tcc_error ( ""macro '%s' used with too few args"" , get_tok_str ( s -> v , 0 ) )"		6322290	0					
ANR	6323097	Callee	tcc_error		6322290	0					
ANR	6323098	Identifier	tcc_error		6322290	0					
ANR	6323099	ArgumentList	"""macro '%s' used with too few args"""		6322290	1					
ANR	6323100	Argument	"""macro '%s' used with too few args"""		6322290	0					
ANR	6323101	PrimaryExpression	"""macro '%s' used with too few args"""		6322290	0					
ANR	6323102	Argument	"get_tok_str ( s -> v , 0 )"		6322290	1					
ANR	6323103	CallExpression	"get_tok_str ( s -> v , 0 )"		6322290	0					
ANR	6323104	Callee	get_tok_str		6322290	0					
ANR	6323105	Identifier	get_tok_str		6322290	0					
ANR	6323106	ArgumentList	s -> v		6322290	1					
ANR	6323107	Argument	s -> v		6322290	0					
ANR	6323108	PtrMemberAccess	s -> v		6322290	0					
ANR	6323109	Identifier	s		6322290	0					
ANR	6323110	Identifier	v		6322290	1					
ANR	6323111	Argument	0		6322290	1					
ANR	6323112	PrimaryExpression	0		6322290	0					
ANR	6323113	ExpressionStatement	"mstr = macro_arg_subst ( nested_list , mstr , args )"	2962:3:61526:61574	6322290	9	True				
ANR	6323114	AssignmentExpression	"mstr = macro_arg_subst ( nested_list , mstr , args )"		6322290	0		=			
ANR	6323115	Identifier	mstr		6322290	0					
ANR	6323116	CallExpression	"macro_arg_subst ( nested_list , mstr , args )"		6322290	1					
ANR	6323117	Callee	macro_arg_subst		6322290	0					
ANR	6323118	Identifier	macro_arg_subst		6322290	0					
ANR	6323119	ArgumentList	nested_list		6322290	1					
ANR	6323120	Argument	nested_list		6322290	0					
ANR	6323121	Identifier	nested_list		6322290	0					
ANR	6323122	Argument	mstr		6322290	1					
ANR	6323123	Identifier	mstr		6322290	0					
ANR	6323124	Argument	args		6322290	2					
ANR	6323125	Identifier	args		6322290	0					
ANR	6323126	ExpressionStatement	sa = args	2964:3:61600:61609	6322290	10	True				
ANR	6323127	AssignmentExpression	sa = args		6322290	0		=			
ANR	6323128	Identifier	sa		6322290	0					
ANR	6323129	Identifier	args		6322290	1					
ANR	6323130	WhileStatement	while ( sa )		6322290	11					
ANR	6323131	Condition	sa	2965:10:61621:61622	6322290	0	True				
ANR	6323132	Identifier	sa		6322290	0					
ANR	6323133	CompoundStatement		161:14:3817:3817	6322290	1					
ANR	6323134	ExpressionStatement	sa1 = sa -> prev	2966:4:61631:61645	6322290	0	True				
ANR	6323135	AssignmentExpression	sa1 = sa -> prev		6322290	0		=			
ANR	6323136	Identifier	sa1		6322290	0					
ANR	6323137	PtrMemberAccess	sa -> prev		6322290	1					
ANR	6323138	Identifier	sa		6322290	0					
ANR	6323139	Identifier	prev		6322290	1					
ANR	6323140	ExpressionStatement	tok_str_free ( sa -> d )	2967:4:61651:61671	6322290	1	True				
ANR	6323141	CallExpression	tok_str_free ( sa -> d )		6322290	0					
ANR	6323142	Callee	tok_str_free		6322290	0					
ANR	6323143	Identifier	tok_str_free		6322290	0					
ANR	6323144	ArgumentList	sa -> d		6322290	1					
ANR	6323145	Argument	sa -> d		6322290	0					
ANR	6323146	PtrMemberAccess	sa -> d		6322290	0					
ANR	6323147	Identifier	sa		6322290	0					
ANR	6323148	Identifier	d		6322290	1					
ANR	6323149	ExpressionStatement	sym_free ( sa )	2968:4:61677:61690	6322290	2	True				
ANR	6323150	CallExpression	sym_free ( sa )		6322290	0					
ANR	6323151	Callee	sym_free		6322290	0					
ANR	6323152	Identifier	sym_free		6322290	0					
ANR	6323153	ArgumentList	sa		6322290	1					
ANR	6323154	Argument	sa		6322290	0					
ANR	6323155	Identifier	sa		6322290	0					
ANR	6323156	ExpressionStatement	sa = sa1	2969:4:61696:61704	6322290	3	True				
ANR	6323157	AssignmentExpression	sa = sa1		6322290	0		=			
ANR	6323158	Identifier	sa		6322290	0					
ANR	6323159	Identifier	sa1		6322290	1					
ANR	6323160	ExpressionStatement	mstr_allocated = 1	2971:3:61714:61732	6322290	12	True				
ANR	6323161	AssignmentExpression	mstr_allocated = 1		6322290	0		=			
ANR	6323162	Identifier	mstr_allocated		6322290	0					
ANR	6323163	PrimaryExpression	1		6322290	1					
ANR	6323164	IfStatement	"if ( sym_push2 ( nested_list , s -> v , 0 , 0 ) == 0 )"		6322290	3					
ANR	6323165	Condition	"sym_push2 ( nested_list , s -> v , 0 , 0 ) == 0"	2973:6:61744:61783	6322290	0	True				
ANR	6323166	EqualityExpression	"sym_push2 ( nested_list , s -> v , 0 , 0 ) == 0"		6322290	0		==			
ANR	6323167	CallExpression	"sym_push2 ( nested_list , s -> v , 0 , 0 )"		6322290	0					
ANR	6323168	Callee	sym_push2		6322290	0					
ANR	6323169	Identifier	sym_push2		6322290	0					
ANR	6323170	ArgumentList	nested_list		6322290	1					
ANR	6323171	Argument	nested_list		6322290	0					
ANR	6323172	Identifier	nested_list		6322290	0					
ANR	6323173	Argument	s -> v		6322290	1					
ANR	6323174	PtrMemberAccess	s -> v		6322290	0					
ANR	6323175	Identifier	s		6322290	0					
ANR	6323176	Identifier	v		6322290	1					
ANR	6323177	Argument	0		6322290	2					
ANR	6323178	PrimaryExpression	0		6322290	0					
ANR	6323179	Argument	0		6322290	3					
ANR	6323180	PrimaryExpression	0		6322290	0					
ANR	6323181	PrimaryExpression	0		6322290	1					
ANR	6323182	CompoundStatement		169:48:3978:3978	6322290	1					
ANR	6323183	ReturnStatement	return - 1 ;	2974:3:61791:61800	6322290	0	True				
ANR	6323184	UnaryOperationExpression	- 1		6322290	0					
ANR	6323185	UnaryOperator	-		6322290	0					
ANR	6323186	PrimaryExpression	1		6322290	1					
ANR	6323187	ExpressionStatement	"macro_subst ( tok_str , nested_list , mstr , can_read_stream )"	2976:2:61808:61865	6322290	4	True				
ANR	6323188	CallExpression	"macro_subst ( tok_str , nested_list , mstr , can_read_stream )"		6322290	0					
ANR	6323189	Callee	macro_subst		6322290	0					
ANR	6323190	Identifier	macro_subst		6322290	0					
ANR	6323191	ArgumentList	tok_str		6322290	1					
ANR	6323192	Argument	tok_str		6322290	0					
ANR	6323193	Identifier	tok_str		6322290	0					
ANR	6323194	Argument	nested_list		6322290	1					
ANR	6323195	Identifier	nested_list		6322290	0					
ANR	6323196	Argument	mstr		6322290	2					
ANR	6323197	Identifier	mstr		6322290	0					
ANR	6323198	Argument	can_read_stream		6322290	3					
ANR	6323199	Identifier	can_read_stream		6322290	0					
ANR	6323200	ExpressionStatement	sa1 = * nested_list	2978:2:61903:61921	6322290	5	True				
ANR	6323201	AssignmentExpression	sa1 = * nested_list		6322290	0		=			
ANR	6323202	Identifier	sa1		6322290	0					
ANR	6323203	UnaryOperationExpression	* nested_list		6322290	1					
ANR	6323204	UnaryOperator	*		6322290	0					
ANR	6323205	Identifier	nested_list		6322290	1					
ANR	6323206	ExpressionStatement	* nested_list = sa1 -> prev	2979:2:61925:61949	6322290	6	True				
ANR	6323207	AssignmentExpression	* nested_list = sa1 -> prev		6322290	0		=			
ANR	6323208	UnaryOperationExpression	* nested_list		6322290	0					
ANR	6323209	UnaryOperator	*		6322290	0					
ANR	6323210	Identifier	nested_list		6322290	1					
ANR	6323211	PtrMemberAccess	sa1 -> prev		6322290	1					
ANR	6323212	Identifier	sa1		6322290	0					
ANR	6323213	Identifier	prev		6322290	1					
ANR	6323214	ExpressionStatement	sym_free ( sa1 )	2980:2:61953:61967	6322290	7	True				
ANR	6323215	CallExpression	sym_free ( sa1 )		6322290	0					
ANR	6323216	Callee	sym_free		6322290	0					
ANR	6323217	Identifier	sym_free		6322290	0					
ANR	6323218	ArgumentList	sa1		6322290	1					
ANR	6323219	Argument	sa1		6322290	0					
ANR	6323220	Identifier	sa1		6322290	0					
ANR	6323221	IfStatement	if ( mstr_allocated )		6322290	8					
ANR	6323222	Condition	mstr_allocated	2981:6:61975:61988	6322290	0	True				
ANR	6323223	Identifier	mstr_allocated		6322290	0					
ANR	6323224	CompoundStatement		177:22:4183:4183	6322290	1					
ANR	6323225	ExpressionStatement	tok_str_free ( mstr )	2982:3:61996:62015	6322290	0	True				
ANR	6323226	CallExpression	tok_str_free ( mstr )		6322290	0					
ANR	6323227	Callee	tok_str_free		6322290	0					
ANR	6323228	Identifier	tok_str_free		6322290	0					
ANR	6323229	ArgumentList	mstr		6322290	1					
ANR	6323230	Argument	mstr		6322290	0					
ANR	6323231	Identifier	mstr		6322290	0					
ANR	6323232	ReturnStatement	return 0 ;	2985:1:62025:62033	6322290	9	True				
ANR	6323233	PrimaryExpression	0		6322290	0					
ANR	6323234	ReturnType	static int		6322290	1					
ANR	6323235	Identifier	macro_subst_tok		6322290	2					
ANR	6323236	ParameterList	"TokenString * tok_str , Sym * * nested_list , Sym * s , struct macro_level * * can_read_stream"		6322290	3					
ANR	6323237	Parameter	TokenString * tok_str	2803:27:57714:57733	6322290	0	True				
ANR	6323238	ParameterType	TokenString *		6322290	0					
ANR	6323239	Identifier	tok_str		6322290	1					
ANR	6323240	Parameter	Sym * * nested_list	2804:6:57742:57758	6322290	1	True				
ANR	6323241	ParameterType	Sym * *		6322290	0					
ANR	6323242	Identifier	nested_list		6322290	1					
ANR	6323243	Parameter	Sym * s	2804:25:57761:57766	6322290	2	True				
ANR	6323244	ParameterType	Sym *		6322290	0					
ANR	6323245	Identifier	s		6322290	1					
ANR	6323246	Parameter	struct macro_level * * can_read_stream	2804:33:57769:57804	6322290	3	True				
ANR	6323247	ParameterType	struct macro_level * *		6322290	0					
ANR	6323248	Identifier	can_read_stream		6322290	1					
ANR	6323249	CFGEntryNode	ENTRY		6322290		True				
ANR	6323250	CFGExitNode	EXIT		6322290		True				
ANR	6323251	Symbol	nested_list		6322290						
ANR	6323252	Symbol	TOK___FILE__		6322290						
ANR	6323253	Symbol	tok_str		6322290						
ANR	6323254	Symbol	& str		6322290						
ANR	6323255	Symbol	str . str		6322290						
ANR	6323256	Symbol	mstr_allocated		6322290						
ANR	6323257	Symbol	* sa		6322290						
ANR	6323258	Symbol	& tokc		6322290						
ANR	6323259	Symbol	* * nested_list		6322290						
ANR	6323260	Symbol	gnu_ext		6322290						
ANR	6323261	Symbol	TOK_STR		6322290						
ANR	6323262	Symbol	* file		6322290						
ANR	6323263	Symbol	tm -> tm_mon		6322290						
ANR	6323264	Symbol	str		6322290						
ANR	6323265	Symbol	check_space		6322290						
ANR	6323266	Symbol	MACRO_FUNC		6322290						
ANR	6323267	Symbol	sa -> type		6322290						
ANR	6323268	Symbol	TOK___TIME__		6322290						
ANR	6323269	Symbol	* tm		6322290						
ANR	6323270	Symbol	t1		6322290						
ANR	6323271	Symbol	sa -> prev		6322290						
ANR	6323272	Symbol	* * file		6322290						
ANR	6323273	Symbol	s -> v		6322290						
ANR	6323274	Symbol	* ml		6322290						
ANR	6323275	Symbol	ml -> prev		6322290						
ANR	6323276	Symbol	* file -> buf_ptr		6322290						
ANR	6323277	Symbol	sa -> type . t		6322290						
ANR	6323278	Symbol	s -> next		6322290						
ANR	6323279	Symbol	can_read_stream		6322290						
ANR	6323280	Symbol	s -> type . t		6322290						
ANR	6323281	Symbol	sa		6322290						
ANR	6323282	Symbol	sym_push2		6322290						
ANR	6323283	Symbol	tok		6322290						
ANR	6323284	Symbol	& cval		6322290						
ANR	6323285	Symbol	cval . cstr		6322290						
ANR	6323286	Symbol	file		6322290						
ANR	6323287	Symbol	* can_read_stream		6322290						
ANR	6323288	Symbol	tm -> tm_mday		6322290						
ANR	6323289	Symbol	s -> d		6322290						
ANR	6323290	Symbol	file -> line_num		6322290						
ANR	6323291	Symbol	file -> buf_ptr		6322290						
ANR	6323292	Symbol	& args		6322290						
ANR	6323293	Symbol	& cstr		6322290						
ANR	6323294	Symbol	c		6322290						
ANR	6323295	Symbol	ch		6322290						
ANR	6323296	Symbol	* nested_list		6322290						
ANR	6323297	Symbol	p		6322290						
ANR	6323298	Symbol	buf		6322290						
ANR	6323299	Symbol	s		6322290						
ANR	6323300	Symbol	~SYM_FIELD		6322290						
ANR	6323301	Symbol	t		6322290						
ANR	6323302	Symbol	ti		6322290						
ANR	6323303	Symbol	tm -> tm_sec		6322290						
ANR	6323304	Symbol	tm -> tm_min		6322290						
ANR	6323305	Symbol	parse_line_comment		6322290						
ANR	6323306	Symbol	tm		6322290						
ANR	6323307	Symbol	tm -> tm_hour		6322290						
ANR	6323308	Symbol	* ab_month_name		6322290						
ANR	6323309	Symbol	TOK___LINE__		6322290						
ANR	6323310	Symbol	sa -> next		6322290						
ANR	6323311	Symbol	parse_comment		6322290						
ANR	6323312	Symbol	localtime		6322290						
ANR	6323313	Symbol	get_tok_str		6322290						
ANR	6323314	Symbol	ml -> p		6322290						
ANR	6323315	Symbol	& spc		6322290						
ANR	6323316	Symbol	sa -> d		6322290						
ANR	6323317	Symbol	TOK_LINEFEED		6322290						
ANR	6323318	Symbol	( * nested_list ) -> v		6322290						
ANR	6323319	Symbol	sa -> v		6322290						
ANR	6323320	Symbol	TOK___DATE__		6322290						
ANR	6323321	Symbol	mstr		6322290						
ANR	6323322	Symbol	TOK_PPNUM		6322290						
ANR	6323323	Symbol	ml		6322290						
ANR	6323324	Symbol	file -> filename		6322290						
ANR	6323325	Symbol	sa1		6322290						
ANR	6323326	Symbol	* tm -> tm_mon		6322290						
ANR	6323327	Symbol	NULL		6322290						
ANR	6323328	Symbol	spc		6322290						
ANR	6323329	Symbol	cstrval		6322290						
ANR	6323330	Symbol	tcc_nerr		6322290						
ANR	6323331	Symbol	macro_ptr		6322290						
ANR	6323332	Symbol	ab_month_name		6322290						
ANR	6323333	Symbol	s -> type		6322290						
ANR	6323334	Symbol	& ti		6322290						
ANR	6323335	Symbol	cstr		6322290						
ANR	6323336	Symbol	sa1 -> d		6322290						
ANR	6323337	Symbol	* sa1		6322290						
ANR	6323338	Symbol	sa1 -> prev		6322290						
ANR	6323339	Symbol	tm -> tm_year		6322290						
ANR	6323340	Symbol	is_space		6322290						
ANR	6323341	Symbol	macro_arg_subst		6322290						
ANR	6323342	Symbol	* * tm		6322290						
ANR	6323343	Symbol	parlevel		6322290						
ANR	6323344	Symbol	args		6322290						
ANR	6323345	Symbol	cval		6322290						
ANR	6323346	Symbol	str . len		6322290						
ANR	6323347	Symbol	* p		6322290						
ANR	6323348	Symbol	* s		6322290						
ANR	6323349	Function	macro_twosharps	2990:0:62163:64098							
ANR	6323350	FunctionDef	macro_twosharps (const int * macro_str)		6323349	0					
ANR	6323351	CompoundStatement		2991:0:62220:64098	6323349	0					
ANR	6323352	IdentifierDeclStatement	const int * ptr ;	2992:1:62223:62237	6323349	0	True				
ANR	6323353	IdentifierDecl	* ptr		6323349	0					
ANR	6323354	IdentifierDeclType	const int *		6323349	0					
ANR	6323355	Identifier	ptr		6323349	1					
ANR	6323356	IdentifierDeclStatement	int t ;	2993:1:62240:62245	6323349	1	True				
ANR	6323357	IdentifierDecl	t		6323349	0					
ANR	6323358	IdentifierDeclType	int		6323349	0					
ANR	6323359	Identifier	t		6323349	1					
ANR	6323360	IdentifierDeclStatement	TokenString macro_str1 ;	2994:1:62248:62270	6323349	2	True				
ANR	6323361	IdentifierDecl	macro_str1		6323349	0					
ANR	6323362	IdentifierDeclType	TokenString		6323349	0					
ANR	6323363	Identifier	macro_str1		6323349	1					
ANR	6323364	IdentifierDeclStatement	CString cstr ;	2995:1:62273:62285	6323349	3	True				
ANR	6323365	IdentifierDecl	cstr		6323349	0					
ANR	6323366	IdentifierDeclType	CString		6323349	0					
ANR	6323367	Identifier	cstr		6323349	1					
ANR	6323368	IdentifierDeclStatement	"int n , start_of_nosubsts ;"	2996:1:62288:62312	6323349	4	True				
ANR	6323369	IdentifierDecl	n		6323349	0					
ANR	6323370	IdentifierDeclType	int		6323349	0					
ANR	6323371	Identifier	n		6323349	1					
ANR	6323372	IdentifierDecl	start_of_nosubsts		6323349	1					
ANR	6323373	IdentifierDeclType	int		6323349	0					
ANR	6323374	Identifier	start_of_nosubsts		6323349	1					
ANR	6323375	ForStatement	for ( ptr = macro_str ; ; )		6323349	5					
ANR	6323376	ForInit	ptr = macro_str ;	2999:6:62353:62368	6323349	0	True				
ANR	6323377	AssignmentExpression	ptr = macro_str		6323349	0		=			
ANR	6323378	Identifier	ptr		6323349	0					
ANR	6323379	Identifier	macro_str		6323349	1					
ANR	6323380	CompoundStatement		10:2:155:166	6323349	1					
ANR	6323381	IdentifierDeclStatement	CValue cval ;	3000:2:62376:62387	6323349	0	True				
ANR	6323382	IdentifierDecl	cval		6323349	0					
ANR	6323383	IdentifierDeclType	CValue		6323349	0					
ANR	6323384	Identifier	cval		6323349	1					
ANR	6323385	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3001:2:62391:62416	6323349	1	True				
ANR	6323386	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6323349	0					
ANR	6323387	Callee	TOK_GET		6323349	0					
ANR	6323388	Identifier	TOK_GET		6323349	0					
ANR	6323389	ArgumentList	& t		6323349	1					
ANR	6323390	Argument	& t		6323349	0					
ANR	6323391	UnaryOperationExpression	& t		6323349	0					
ANR	6323392	UnaryOperator	&		6323349	0					
ANR	6323393	Identifier	t		6323349	1					
ANR	6323394	Argument	& ptr		6323349	1					
ANR	6323395	UnaryOperationExpression	& ptr		6323349	0					
ANR	6323396	UnaryOperator	&		6323349	0					
ANR	6323397	Identifier	ptr		6323349	1					
ANR	6323398	Argument	& cval		6323349	2					
ANR	6323399	UnaryOperationExpression	& cval		6323349	0					
ANR	6323400	UnaryOperator	&		6323349	0					
ANR	6323401	Identifier	cval		6323349	1					
ANR	6323402	IfStatement	if ( t == TOK_TWOSHARPS )		6323349	2					
ANR	6323403	Condition	t == TOK_TWOSHARPS	3002:6:62424:62441	6323349	0	True				
ANR	6323404	EqualityExpression	t == TOK_TWOSHARPS		6323349	0		==			
ANR	6323405	Identifier	t		6323349	0					
ANR	6323406	Identifier	TOK_TWOSHARPS		6323349	1					
ANR	6323407	CompoundStatement		12:26:223:223	6323349	1					
ANR	6323408	BreakStatement	break ;	3003:3:62449:62454	6323349	0	True				
ANR	6323409	IfStatement	if ( t == 0 )		6323349	3					
ANR	6323410	Condition	t == 0	3006:6:62510:62515	6323349	0	True				
ANR	6323411	EqualityExpression	t == 0		6323349	0		==			
ANR	6323412	Identifier	t		6323349	0					
ANR	6323413	PrimaryExpression	0		6323349	1					
ANR	6323414	CompoundStatement		16:14:297:297	6323349	1					
ANR	6323415	ReturnStatement	return NULL ;	3007:3:62523:62534	6323349	0	True				
ANR	6323416	Identifier	NULL		6323349	0					
ANR	6323417	ExpressionStatement	start_of_nosubsts = - 1	3012:1:62605:62627	6323349	6	True				
ANR	6323418	AssignmentExpression	start_of_nosubsts = - 1		6323349	0		=			
ANR	6323419	Identifier	start_of_nosubsts		6323349	0					
ANR	6323420	UnaryOperationExpression	- 1		6323349	1					
ANR	6323421	UnaryOperator	-		6323349	0					
ANR	6323422	PrimaryExpression	1		6323349	1					
ANR	6323423	ExpressionStatement	tok_str_new ( & macro_str1 )	3013:1:62630:62655	6323349	7	True				
ANR	6323424	CallExpression	tok_str_new ( & macro_str1 )		6323349	0					
ANR	6323425	Callee	tok_str_new		6323349	0					
ANR	6323426	Identifier	tok_str_new		6323349	0					
ANR	6323427	ArgumentList	& macro_str1		6323349	1					
ANR	6323428	Argument	& macro_str1		6323349	0					
ANR	6323429	UnaryOperationExpression	& macro_str1		6323349	0					
ANR	6323430	UnaryOperator	&		6323349	0					
ANR	6323431	Identifier	macro_str1		6323349	1					
ANR	6323432	ForStatement	for ( ptr = macro_str ; ; )		6323349	8					
ANR	6323433	ForInit	ptr = macro_str ;	3014:6:62663:62678	6323349	0	True				
ANR	6323434	AssignmentExpression	ptr = macro_str		6323349	0		=			
ANR	6323435	Identifier	ptr		6323349	0					
ANR	6323436	Identifier	macro_str		6323349	1					
ANR	6323437	CompoundStatement		24:25:461:461	6323349	1					
ANR	6323438	ExpressionStatement	"TOK_GET ( & tok , & ptr , & tokc )"	3015:2:62686:62713	6323349	0	True				
ANR	6323439	CallExpression	"TOK_GET ( & tok , & ptr , & tokc )"		6323349	0					
ANR	6323440	Callee	TOK_GET		6323349	0					
ANR	6323441	Identifier	TOK_GET		6323349	0					
ANR	6323442	ArgumentList	& tok		6323349	1					
ANR	6323443	Argument	& tok		6323349	0					
ANR	6323444	UnaryOperationExpression	& tok		6323349	0					
ANR	6323445	UnaryOperator	&		6323349	0					
ANR	6323446	Identifier	tok		6323349	1					
ANR	6323447	Argument	& ptr		6323349	1					
ANR	6323448	UnaryOperationExpression	& ptr		6323349	0					
ANR	6323449	UnaryOperator	&		6323349	0					
ANR	6323450	Identifier	ptr		6323349	1					
ANR	6323451	Argument	& tokc		6323349	2					
ANR	6323452	UnaryOperationExpression	& tokc		6323349	0					
ANR	6323453	UnaryOperator	&		6323349	0					
ANR	6323454	Identifier	tokc		6323349	1					
ANR	6323455	IfStatement	if ( tok == 0 )		6323349	1					
ANR	6323456	Condition	tok == 0	3016:6:62721:62728	6323349	0	True				
ANR	6323457	EqualityExpression	tok == 0		6323349	0		==			
ANR	6323458	Identifier	tok		6323349	0					
ANR	6323459	PrimaryExpression	0		6323349	1					
ANR	6323460	CompoundStatement		26:16:510:510	6323349	1					
ANR	6323461	BreakStatement	break ;	3017:3:62736:62741	6323349	0	True				
ANR	6323462	IfStatement	if ( tok == TOK_TWOSHARPS )		6323349	2					
ANR	6323463	Condition	tok == TOK_TWOSHARPS	3019:6:62753:62772	6323349	0	True				
ANR	6323464	EqualityExpression	tok == TOK_TWOSHARPS		6323349	0		==			
ANR	6323465	Identifier	tok		6323349	0					
ANR	6323466	Identifier	TOK_TWOSHARPS		6323349	1					
ANR	6323467	CompoundStatement		29:28:554:554	6323349	1					
ANR	6323468	ContinueStatement	continue ;	3020:3:62780:62788	6323349	0	True				
ANR	6323469	IfStatement	if ( tok == TOK_NOSUBST && start_of_nosubsts < 0 )		6323349	3					
ANR	6323470	Condition	tok == TOK_NOSUBST && start_of_nosubsts < 0	3022:6:62800:62842	6323349	0	True				
ANR	6323471	AndExpression	tok == TOK_NOSUBST && start_of_nosubsts < 0		6323349	0		&&			
ANR	6323472	EqualityExpression	tok == TOK_NOSUBST		6323349	0		==			
ANR	6323473	Identifier	tok		6323349	0					
ANR	6323474	Identifier	TOK_NOSUBST		6323349	1					
ANR	6323475	RelationalExpression	start_of_nosubsts < 0		6323349	1		<			
ANR	6323476	Identifier	start_of_nosubsts		6323349	0					
ANR	6323477	PrimaryExpression	0		6323349	1					
ANR	6323478	CompoundStatement		32:51:624:624	6323349	1					
ANR	6323479	ExpressionStatement	start_of_nosubsts = macro_str1 . len	3023:3:62850:62884	6323349	0	True				
ANR	6323480	AssignmentExpression	start_of_nosubsts = macro_str1 . len		6323349	0		=			
ANR	6323481	Identifier	start_of_nosubsts		6323349	0					
ANR	6323482	MemberAccess	macro_str1 . len		6323349	1					
ANR	6323483	Identifier	macro_str1		6323349	0					
ANR	6323484	Identifier	len		6323349	1					
ANR	6323485	WhileStatement	while ( * ptr == TOK_TWOSHARPS )		6323349	4					
ANR	6323486	Condition	* ptr == TOK_TWOSHARPS	3025:9:62899:62919	6323349	0	True				
ANR	6323487	EqualityExpression	* ptr == TOK_TWOSHARPS		6323349	0		==			
ANR	6323488	UnaryOperationExpression	* ptr		6323349	0					
ANR	6323489	UnaryOperator	*		6323349	0					
ANR	6323490	Identifier	ptr		6323349	1					
ANR	6323491	Identifier	TOK_TWOSHARPS		6323349	1					
ANR	6323492	CompoundStatement		35:32:701:701	6323349	1					
ANR	6323493	IfStatement	if ( start_of_nosubsts >= 0 )		6323349	0					
ANR	6323494	Condition	start_of_nosubsts >= 0	3027:7:62984:63005	6323349	0	True				
ANR	6323495	RelationalExpression	start_of_nosubsts >= 0		6323349	0		>=			
ANR	6323496	Identifier	start_of_nosubsts		6323349	0					
ANR	6323497	PrimaryExpression	0		6323349	1					
ANR	6323498	CompoundStatement		37:31:787:787	6323349	1					
ANR	6323499	ExpressionStatement	macro_str1 . len = start_of_nosubsts	3028:4:63014:63048	6323349	0	True				
ANR	6323500	AssignmentExpression	macro_str1 . len = start_of_nosubsts		6323349	0		=			
ANR	6323501	MemberAccess	macro_str1 . len		6323349	0					
ANR	6323502	Identifier	macro_str1		6323349	0					
ANR	6323503	Identifier	len		6323349	1					
ANR	6323504	Identifier	start_of_nosubsts		6323349	1					
ANR	6323505	ExpressionStatement	t = * ++ ptr	3031:3:63091:63101	6323349	1	True				
ANR	6323506	AssignmentExpression	t = * ++ ptr		6323349	0		=			
ANR	6323507	Identifier	t		6323349	0					
ANR	6323508	UnaryOperationExpression	* ++ ptr		6323349	1					
ANR	6323509	UnaryOperator	*		6323349	0					
ANR	6323510	UnaryExpression	++ ptr		6323349	1					
ANR	6323511	IncDec	++		6323349	0					
ANR	6323512	Identifier	ptr		6323349	1					
ANR	6323513	WhileStatement	while ( t == TOK_NOSUBST )		6323349	2					
ANR	6323514	Condition	t == TOK_NOSUBST	3033:10:63166:63181	6323349	0	True				
ANR	6323515	EqualityExpression	t == TOK_NOSUBST		6323349	0		==			
ANR	6323516	Identifier	t		6323349	0					
ANR	6323517	Identifier	TOK_NOSUBST		6323349	1					
ANR	6323518	ExpressionStatement	t = * ++ ptr	3034:4:63188:63198	6323349	1	True				
ANR	6323519	AssignmentExpression	t = * ++ ptr		6323349	0		=			
ANR	6323520	Identifier	t		6323349	0					
ANR	6323521	UnaryOperationExpression	* ++ ptr		6323349	1					
ANR	6323522	UnaryOperator	*		6323349	0					
ANR	6323523	UnaryExpression	++ ptr		6323349	1					
ANR	6323524	IncDec	++		6323349	0					
ANR	6323525	Identifier	ptr		6323349	1					
ANR	6323526	IfStatement	if ( t && t != TOK_TWOSHARPS )		6323349	3					
ANR	6323527	Condition	t && t != TOK_TWOSHARPS	3035:7:63207:63229	6323349	0	True				
ANR	6323528	AndExpression	t && t != TOK_TWOSHARPS		6323349	0		&&			
ANR	6323529	Identifier	t		6323349	0					
ANR	6323530	EqualityExpression	t != TOK_TWOSHARPS		6323349	1		!=			
ANR	6323531	Identifier	t		6323349	0					
ANR	6323532	Identifier	TOK_TWOSHARPS		6323349	1					
ANR	6323533	CompoundStatement		46:4:1017:1028	6323349	1					
ANR	6323534	IdentifierDeclStatement	CValue cval ;	3036:4:63238:63249	6323349	0	True				
ANR	6323535	IdentifierDecl	cval		6323349	0					
ANR	6323536	IdentifierDeclType	CValue		6323349	0					
ANR	6323537	Identifier	cval		6323349	1					
ANR	6323538	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3037:4:63255:63280	6323349	1	True				
ANR	6323539	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6323349	0					
ANR	6323540	Callee	TOK_GET		6323349	0					
ANR	6323541	Identifier	TOK_GET		6323349	0					
ANR	6323542	ArgumentList	& t		6323349	1					
ANR	6323543	Argument	& t		6323349	0					
ANR	6323544	UnaryOperationExpression	& t		6323349	0					
ANR	6323545	UnaryOperator	&		6323349	0					
ANR	6323546	Identifier	t		6323349	1					
ANR	6323547	Argument	& ptr		6323349	1					
ANR	6323548	UnaryOperationExpression	& ptr		6323349	0					
ANR	6323549	UnaryOperator	&		6323349	0					
ANR	6323550	Identifier	ptr		6323349	1					
ANR	6323551	Argument	& cval		6323349	2					
ANR	6323552	UnaryOperationExpression	& cval		6323349	0					
ANR	6323553	UnaryOperator	&		6323349	0					
ANR	6323554	Identifier	cval		6323349	1					
ANR	6323555	ExpressionStatement	cstr_new ( & cstr )	3039:4:63326:63342	6323349	2	True				
ANR	6323556	CallExpression	cstr_new ( & cstr )		6323349	0					
ANR	6323557	Callee	cstr_new		6323349	0					
ANR	6323558	Identifier	cstr_new		6323349	0					
ANR	6323559	ArgumentList	& cstr		6323349	1					
ANR	6323560	Argument	& cstr		6323349	0					
ANR	6323561	UnaryOperationExpression	& cstr		6323349	0					
ANR	6323562	UnaryOperator	&		6323349	0					
ANR	6323563	Identifier	cstr		6323349	1					
ANR	6323564	ExpressionStatement	"cstr_cat ( & cstr , get_tok_str ( tok , & tokc ) )"	3040:4:63348:63390	6323349	3	True				
ANR	6323565	CallExpression	"cstr_cat ( & cstr , get_tok_str ( tok , & tokc ) )"		6323349	0					
ANR	6323566	Callee	cstr_cat		6323349	0					
ANR	6323567	Identifier	cstr_cat		6323349	0					
ANR	6323568	ArgumentList	& cstr		6323349	1					
ANR	6323569	Argument	& cstr		6323349	0					
ANR	6323570	UnaryOperationExpression	& cstr		6323349	0					
ANR	6323571	UnaryOperator	&		6323349	0					
ANR	6323572	Identifier	cstr		6323349	1					
ANR	6323573	Argument	"get_tok_str ( tok , & tokc )"		6323349	1					
ANR	6323574	CallExpression	"get_tok_str ( tok , & tokc )"		6323349	0					
ANR	6323575	Callee	get_tok_str		6323349	0					
ANR	6323576	Identifier	get_tok_str		6323349	0					
ANR	6323577	ArgumentList	tok		6323349	1					
ANR	6323578	Argument	tok		6323349	0					
ANR	6323579	Identifier	tok		6323349	0					
ANR	6323580	Argument	& tokc		6323349	1					
ANR	6323581	UnaryOperationExpression	& tokc		6323349	0					
ANR	6323582	UnaryOperator	&		6323349	0					
ANR	6323583	Identifier	tokc		6323349	1					
ANR	6323584	ExpressionStatement	n = cstr . size	3041:4:63396:63409	6323349	4	True				
ANR	6323585	AssignmentExpression	n = cstr . size		6323349	0		=			
ANR	6323586	Identifier	n		6323349	0					
ANR	6323587	MemberAccess	cstr . size		6323349	1					
ANR	6323588	Identifier	cstr		6323349	0					
ANR	6323589	Identifier	size		6323349	1					
ANR	6323590	ExpressionStatement	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"	3042:4:63415:63455	6323349	5	True				
ANR	6323591	CallExpression	"cstr_cat ( & cstr , get_tok_str ( t , & cval ) )"		6323349	0					
ANR	6323592	Callee	cstr_cat		6323349	0					
ANR	6323593	Identifier	cstr_cat		6323349	0					
ANR	6323594	ArgumentList	& cstr		6323349	1					
ANR	6323595	Argument	& cstr		6323349	0					
ANR	6323596	UnaryOperationExpression	& cstr		6323349	0					
ANR	6323597	UnaryOperator	&		6323349	0					
ANR	6323598	Identifier	cstr		6323349	1					
ANR	6323599	Argument	"get_tok_str ( t , & cval )"		6323349	1					
ANR	6323600	CallExpression	"get_tok_str ( t , & cval )"		6323349	0					
ANR	6323601	Callee	get_tok_str		6323349	0					
ANR	6323602	Identifier	get_tok_str		6323349	0					
ANR	6323603	ArgumentList	t		6323349	1					
ANR	6323604	Argument	t		6323349	0					
ANR	6323605	Identifier	t		6323349	0					
ANR	6323606	Argument	& cval		6323349	1					
ANR	6323607	UnaryOperationExpression	& cval		6323349	0					
ANR	6323608	UnaryOperator	&		6323349	0					
ANR	6323609	Identifier	cval		6323349	1					
ANR	6323610	ExpressionStatement	"cstr_ccat ( & cstr , '\\0' )"	3043:4:63461:63484	6323349	6	True				
ANR	6323611	CallExpression	"cstr_ccat ( & cstr , '\\0' )"		6323349	0					
ANR	6323612	Callee	cstr_ccat		6323349	0					
ANR	6323613	Identifier	cstr_ccat		6323349	0					
ANR	6323614	ArgumentList	& cstr		6323349	1					
ANR	6323615	Argument	& cstr		6323349	0					
ANR	6323616	UnaryOperationExpression	& cstr		6323349	0					
ANR	6323617	UnaryOperator	&		6323349	0					
ANR	6323618	Identifier	cstr		6323349	1					
ANR	6323619	Argument	'\\0'		6323349	1					
ANR	6323620	PrimaryExpression	'\\0'		6323349	0					
ANR	6323621	ExpressionStatement	"tcc_open_bf ( tcc_state , "":paste:"" , cstr . size )"	3045:4:63491:63536	6323349	7	True				
ANR	6323622	CallExpression	"tcc_open_bf ( tcc_state , "":paste:"" , cstr . size )"		6323349	0					
ANR	6323623	Callee	tcc_open_bf		6323349	0					
ANR	6323624	Identifier	tcc_open_bf		6323349	0					
ANR	6323625	ArgumentList	tcc_state		6323349	1					
ANR	6323626	Argument	tcc_state		6323349	0					
ANR	6323627	Identifier	tcc_state		6323349	0					
ANR	6323628	Argument	""":paste:"""		6323349	1					
ANR	6323629	PrimaryExpression	""":paste:"""		6323349	0					
ANR	6323630	Argument	cstr . size		6323349	2					
ANR	6323631	MemberAccess	cstr . size		6323349	0					
ANR	6323632	Identifier	cstr		6323349	0					
ANR	6323633	Identifier	size		6323349	1					
ANR	6323634	ExpressionStatement	"memcpy ( file -> buffer , cstr . data , cstr . size )"	3046:4:63542:63585	6323349	8	True				
ANR	6323635	CallExpression	"memcpy ( file -> buffer , cstr . data , cstr . size )"		6323349	0					
ANR	6323636	Callee	memcpy		6323349	0					
ANR	6323637	Identifier	memcpy		6323349	0					
ANR	6323638	ArgumentList	file -> buffer		6323349	1					
ANR	6323639	Argument	file -> buffer		6323349	0					
ANR	6323640	PtrMemberAccess	file -> buffer		6323349	0					
ANR	6323641	Identifier	file		6323349	0					
ANR	6323642	Identifier	buffer		6323349	1					
ANR	6323643	Argument	cstr . data		6323349	1					
ANR	6323644	MemberAccess	cstr . data		6323349	0					
ANR	6323645	Identifier	cstr		6323349	0					
ANR	6323646	Identifier	data		6323349	1					
ANR	6323647	Argument	cstr . size		6323349	2					
ANR	6323648	MemberAccess	cstr . size		6323349	0					
ANR	6323649	Identifier	cstr		6323349	0					
ANR	6323650	Identifier	size		6323349	1					
ANR	6323651	WhileStatement	while ( tcc_nerr ( ) == 0 )		6323349	9					
ANR	6323652	Condition	tcc_nerr ( ) == 0	3047:11:63598:63613	6323349	0	True				
ANR	6323653	EqualityExpression	tcc_nerr ( ) == 0		6323349	0		==			
ANR	6323654	CallExpression	tcc_nerr ( )		6323349	0					
ANR	6323655	Callee	tcc_nerr		6323349	0					
ANR	6323656	Identifier	tcc_nerr		6323349	0					
ANR	6323657	ArgumentList			6323349	1					
ANR	6323658	PrimaryExpression	0		6323349	1					
ANR	6323659	CompoundStatement		57:29:1395:1395	6323349	1					
ANR	6323660	ExpressionStatement	next_nomacro1 ( )	3048:5:63623:63639	6323349	0	True				
ANR	6323661	CallExpression	next_nomacro1 ( )		6323349	0					
ANR	6323662	Callee	next_nomacro1		6323349	0					
ANR	6323663	Identifier	next_nomacro1		6323349	0					
ANR	6323664	ArgumentList			6323349	1					
ANR	6323665	IfStatement	if ( 0 == * file -> buf_ptr )		6323349	1					
ANR	6323666	Condition	0 == * file -> buf_ptr	3049:9:63650:63668	6323349	0	True				
ANR	6323667	EqualityExpression	0 == * file -> buf_ptr		6323349	0		==			
ANR	6323668	PrimaryExpression	0		6323349	0					
ANR	6323669	UnaryOperationExpression	* file -> buf_ptr		6323349	1					
ANR	6323670	UnaryOperator	*		6323349	0					
ANR	6323671	PtrMemberAccess	file -> buf_ptr		6323349	1					
ANR	6323672	Identifier	file		6323349	0					
ANR	6323673	Identifier	buf_ptr		6323349	1					
ANR	6323674	CompoundStatement		59:30:1450:1450	6323349	1					
ANR	6323675	BreakStatement	break ;	3050:6:63679:63684	6323349	0	True				
ANR	6323676	ExpressionStatement	"tok_str_add2 ( & macro_str1 , tok , & tokc )"	3052:5:63698:63736	6323349	2	True				
ANR	6323677	CallExpression	"tok_str_add2 ( & macro_str1 , tok , & tokc )"		6323349	0					
ANR	6323678	Callee	tok_str_add2		6323349	0					
ANR	6323679	Identifier	tok_str_add2		6323349	0					
ANR	6323680	ArgumentList	& macro_str1		6323349	1					
ANR	6323681	Argument	& macro_str1		6323349	0					
ANR	6323682	UnaryOperationExpression	& macro_str1		6323349	0					
ANR	6323683	UnaryOperator	&		6323349	0					
ANR	6323684	Identifier	macro_str1		6323349	1					
ANR	6323685	Argument	tok		6323349	1					
ANR	6323686	Identifier	tok		6323349	0					
ANR	6323687	Argument	& tokc		6323349	2					
ANR	6323688	UnaryOperationExpression	& tokc		6323349	0					
ANR	6323689	UnaryOperator	&		6323349	0					
ANR	6323690	Identifier	tokc		6323349	1					
ANR	6323691	ExpressionStatement	"tcc_warning ( ""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"" , n , ( char * ) cstr . data , ( char * ) cstr . data + n )"	3053:5:63743:63881	6323349	3	True				
ANR	6323692	CallExpression	"tcc_warning ( ""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"" , n , ( char * ) cstr . data , ( char * ) cstr . data + n )"		6323349	0					
ANR	6323693	Callee	tcc_warning		6323349	0					
ANR	6323694	Identifier	tcc_warning		6323349	0					
ANR	6323695	ArgumentList	"""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"""		6323349	1					
ANR	6323696	Argument	"""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"""		6323349	0					
ANR	6323697	PrimaryExpression	"""pasting \\""%.*s\\"" and \\""%s\\"" does not give a valid preprocessing token"""		6323349	0					
ANR	6323698	Argument	n		6323349	1					
ANR	6323699	Identifier	n		6323349	0					
ANR	6323700	Argument	( char * ) cstr . data		6323349	2					
ANR	6323701	CastExpression	( char * ) cstr . data		6323349	0					
ANR	6323702	CastTarget	char *		6323349	0					
ANR	6323703	MemberAccess	cstr . data		6323349	1					
ANR	6323704	Identifier	cstr		6323349	0					
ANR	6323705	Identifier	data		6323349	1					
ANR	6323706	Argument	( char * ) cstr . data + n		6323349	3					
ANR	6323707	AdditiveExpression	( char * ) cstr . data + n		6323349	0		+			
ANR	6323708	CastExpression	( char * ) cstr . data		6323349	0					
ANR	6323709	CastTarget	char *		6323349	0					
ANR	6323710	MemberAccess	cstr . data		6323349	1					
ANR	6323711	Identifier	cstr		6323349	0					
ANR	6323712	Identifier	data		6323349	1					
ANR	6323713	Identifier	n		6323349	1					
ANR	6323714	ExpressionStatement	tcc_close ( )	3056:4:63893:63905	6323349	10	True				
ANR	6323715	CallExpression	tcc_close ( )		6323349	0					
ANR	6323716	Callee	tcc_close		6323349	0					
ANR	6323717	Identifier	tcc_close		6323349	0					
ANR	6323718	ArgumentList			6323349	1					
ANR	6323719	ExpressionStatement	cstr_free ( & cstr )	3057:4:63911:63928	6323349	11	True				
ANR	6323720	CallExpression	cstr_free ( & cstr )		6323349	0					
ANR	6323721	Callee	cstr_free		6323349	0					
ANR	6323722	Identifier	cstr_free		6323349	0					
ANR	6323723	ArgumentList	& cstr		6323349	1					
ANR	6323724	Argument	& cstr		6323349	0					
ANR	6323725	UnaryOperationExpression	& cstr		6323349	0					
ANR	6323726	UnaryOperator	&		6323349	0					
ANR	6323727	Identifier	cstr		6323349	1					
ANR	6323728	IfStatement	if ( tok != TOK_NOSUBST )		6323349	5					
ANR	6323729	Condition	tok != TOK_NOSUBST	3060:6:63945:63962	6323349	0	True				
ANR	6323730	EqualityExpression	tok != TOK_NOSUBST		6323349	0		!=			
ANR	6323731	Identifier	tok		6323349	0					
ANR	6323732	Identifier	TOK_NOSUBST		6323349	1					
ANR	6323733	CompoundStatement		70:26:1744:1744	6323349	1					
ANR	6323734	ExpressionStatement	start_of_nosubsts = - 1	3061:3:63970:63992	6323349	0	True				
ANR	6323735	AssignmentExpression	start_of_nosubsts = - 1		6323349	0		=			
ANR	6323736	Identifier	start_of_nosubsts		6323349	0					
ANR	6323737	UnaryOperationExpression	- 1		6323349	1					
ANR	6323738	UnaryOperator	-		6323349	0					
ANR	6323739	PrimaryExpression	1		6323349	1					
ANR	6323740	ExpressionStatement	"tok_str_add2 ( & macro_str1 , tok , & tokc )"	3063:2:64000:64038	6323349	6	True				
ANR	6323741	CallExpression	"tok_str_add2 ( & macro_str1 , tok , & tokc )"		6323349	0					
ANR	6323742	Callee	tok_str_add2		6323349	0					
ANR	6323743	Identifier	tok_str_add2		6323349	0					
ANR	6323744	ArgumentList	& macro_str1		6323349	1					
ANR	6323745	Argument	& macro_str1		6323349	0					
ANR	6323746	UnaryOperationExpression	& macro_str1		6323349	0					
ANR	6323747	UnaryOperator	&		6323349	0					
ANR	6323748	Identifier	macro_str1		6323349	1					
ANR	6323749	Argument	tok		6323349	1					
ANR	6323750	Identifier	tok		6323349	0					
ANR	6323751	Argument	& tokc		6323349	2					
ANR	6323752	UnaryOperationExpression	& tokc		6323349	0					
ANR	6323753	UnaryOperator	&		6323349	0					
ANR	6323754	Identifier	tokc		6323349	1					
ANR	6323755	ExpressionStatement	"tok_str_add ( & macro_str1 , 0 )"	3065:1:64044:64072	6323349	9	True				
ANR	6323756	CallExpression	"tok_str_add ( & macro_str1 , 0 )"		6323349	0					
ANR	6323757	Callee	tok_str_add		6323349	0					
ANR	6323758	Identifier	tok_str_add		6323349	0					
ANR	6323759	ArgumentList	& macro_str1		6323349	1					
ANR	6323760	Argument	& macro_str1		6323349	0					
ANR	6323761	UnaryOperationExpression	& macro_str1		6323349	0					
ANR	6323762	UnaryOperator	&		6323349	0					
ANR	6323763	Identifier	macro_str1		6323349	1					
ANR	6323764	Argument	0		6323349	1					
ANR	6323765	PrimaryExpression	0		6323349	0					
ANR	6323766	ReturnStatement	return macro_str1 . str ;	3066:1:64075:64096	6323349	10	True				
ANR	6323767	MemberAccess	macro_str1 . str		6323349	0					
ANR	6323768	Identifier	macro_str1		6323349	0					
ANR	6323769	Identifier	str		6323349	1					
ANR	6323770	ReturnType	static inline int *		6323349	1					
ANR	6323771	Identifier	macro_twosharps		6323349	2					
ANR	6323772	ParameterList	const int * macro_str		6323349	3					
ANR	6323773	Parameter	const int * macro_str	2990:35:62198:62217	6323349	0	True				
ANR	6323774	ParameterType	const int *		6323349	0					
ANR	6323775	Identifier	macro_str		6323349	1					
ANR	6323776	CFGEntryNode	ENTRY		6323349		True				
ANR	6323777	CFGExitNode	EXIT		6323349		True				
ANR	6323778	InfiniteForNode	true		6323349		True				
ANR	6323779	InfiniteForNode	true		6323349		True				
ANR	6323780	Symbol	cstr		6323349						
ANR	6323781	Symbol	file -> buffer		6323349						
ANR	6323782	Symbol	get_tok_str		6323349						
ANR	6323783	Symbol	* file -> buf_ptr		6323349						
ANR	6323784	Symbol	& cval		6323349						
ANR	6323785	Symbol	tok		6323349						
ANR	6323786	Symbol	& ptr		6323349						
ANR	6323787	Symbol	cstr . size		6323349						
ANR	6323788	Symbol	file		6323349						
ANR	6323789	Symbol	* ptr		6323349						
ANR	6323790	Symbol	macro_str1		6323349						
ANR	6323791	Symbol	file -> buf_ptr		6323349						
ANR	6323792	Symbol	& tokc		6323349						
ANR	6323793	Symbol	macro_str1 . str		6323349						
ANR	6323794	Symbol	tcc_state		6323349						
ANR	6323795	Symbol	& cstr		6323349						
ANR	6323796	Symbol	cstr . data		6323349						
ANR	6323797	Symbol	start_of_nosubsts		6323349						
ANR	6323798	Symbol	NULL		6323349						
ANR	6323799	Symbol	* ++ ptr		6323349						
ANR	6323800	Symbol	* file		6323349						
ANR	6323801	Symbol	tcc_nerr		6323349						
ANR	6323802	Symbol	n		6323349						
ANR	6323803	Symbol	ptr		6323349						
ANR	6323804	Symbol	TOK_NOSUBST		6323349						
ANR	6323805	Symbol	cval		6323349						
ANR	6323806	Symbol	& macro_str1		6323349						
ANR	6323807	Symbol	macro_str		6323349						
ANR	6323808	Symbol	& tok		6323349						
ANR	6323809	Symbol	t		6323349						
ANR	6323810	Symbol	TOK_TWOSHARPS		6323349						
ANR	6323811	Symbol	& t		6323349						
ANR	6323812	Symbol	macro_str1 . len		6323349						
ANR	6323813	Symbol	* * file		6323349						
ANR	6323814	Function	macro_subst	3073:0:64260:66086							
ANR	6323815	FunctionDef	"macro_subst (TokenString * tok_str , Sym * * nested_list , const int * macro_str , struct macro_level * * can_read_stream)"		6323814	0					
ANR	6323816	CompoundStatement		3075:0:64388:66086	6323814	0					
ANR	6323817	IdentifierDeclStatement	Sym * s ;	3076:1:64391:64397	6323814	0	True				
ANR	6323818	IdentifierDecl	* s		6323814	0					
ANR	6323819	IdentifierDeclType	Sym *		6323814	0					
ANR	6323820	Identifier	s		6323814	1					
ANR	6323821	IdentifierDeclStatement	int * macro_str1 ;	3077:1:64400:64415	6323814	1	True				
ANR	6323822	IdentifierDecl	* macro_str1		6323814	0					
ANR	6323823	IdentifierDeclType	int *		6323814	0					
ANR	6323824	Identifier	macro_str1		6323814	1					
ANR	6323825	IdentifierDeclStatement	const int * ptr ;	3078:1:64418:64432	6323814	2	True				
ANR	6323826	IdentifierDecl	* ptr		6323814	0					
ANR	6323827	IdentifierDeclType	const int *		6323814	0					
ANR	6323828	Identifier	ptr		6323814	1					
ANR	6323829	IdentifierDeclStatement	"int t , ret , spc ;"	3079:1:64435:64450	6323814	3	True				
ANR	6323830	IdentifierDecl	t		6323814	0					
ANR	6323831	IdentifierDeclType	int		6323814	0					
ANR	6323832	Identifier	t		6323814	1					
ANR	6323833	IdentifierDecl	ret		6323814	1					
ANR	6323834	IdentifierDeclType	int		6323814	0					
ANR	6323835	Identifier	ret		6323814	1					
ANR	6323836	IdentifierDecl	spc		6323814	2					
ANR	6323837	IdentifierDeclType	int		6323814	0					
ANR	6323838	Identifier	spc		6323814	1					
ANR	6323839	IdentifierDeclStatement	CValue cval ;	3080:1:64453:64464	6323814	4	True				
ANR	6323840	IdentifierDecl	cval		6323814	0					
ANR	6323841	IdentifierDeclType	CValue		6323814	0					
ANR	6323842	Identifier	cval		6323814	1					
ANR	6323843	IdentifierDeclStatement	struct macro_level ml ;	3081:1:64467:64488	6323814	5	True				
ANR	6323844	IdentifierDecl	ml		6323814	0					
ANR	6323845	IdentifierDeclType	struct macro_level		6323814	0					
ANR	6323846	Identifier	ml		6323814	1					
ANR	6323847	IdentifierDeclStatement	int force_blank ;	3082:1:64491:64506	6323814	6	True				
ANR	6323848	IdentifierDecl	force_blank		6323814	0					
ANR	6323849	IdentifierDeclType	int		6323814	0					
ANR	6323850	Identifier	force_blank		6323814	1					
ANR	6323851	ExpressionStatement	ptr = macro_str	3085:1:64555:64570	6323814	7	True				
ANR	6323852	AssignmentExpression	ptr = macro_str		6323814	0		=			
ANR	6323853	Identifier	ptr		6323814	0					
ANR	6323854	Identifier	macro_str		6323814	1					
ANR	6323855	ExpressionStatement	macro_str1 = macro_twosharps ( ptr )	3086:1:64573:64607	6323814	8	True				
ANR	6323856	AssignmentExpression	macro_str1 = macro_twosharps ( ptr )		6323814	0		=			
ANR	6323857	Identifier	macro_str1		6323814	0					
ANR	6323858	CallExpression	macro_twosharps ( ptr )		6323814	1					
ANR	6323859	Callee	macro_twosharps		6323814	0					
ANR	6323860	Identifier	macro_twosharps		6323814	0					
ANR	6323861	ArgumentList	ptr		6323814	1					
ANR	6323862	Argument	ptr		6323814	0					
ANR	6323863	Identifier	ptr		6323814	0					
ANR	6323864	IfStatement	if ( macro_str1 )		6323814	9					
ANR	6323865	Condition	macro_str1	3088:5:64615:64624	6323814	0	True				
ANR	6323866	Identifier	macro_str1		6323814	0					
ANR	6323867	CompoundStatement		14:17:238:238	6323814	1					
ANR	6323868	ExpressionStatement	ptr = macro_str1	3089:2:64631:64647	6323814	0	True				
ANR	6323869	AssignmentExpression	ptr = macro_str1		6323814	0		=			
ANR	6323870	Identifier	ptr		6323814	0					
ANR	6323871	Identifier	macro_str1		6323814	1					
ANR	6323872	ExpressionStatement	spc = 0	3091:1:64653:64660	6323814	10	True				
ANR	6323873	AssignmentExpression	spc = 0		6323814	0		=			
ANR	6323874	Identifier	spc		6323814	0					
ANR	6323875	PrimaryExpression	0		6323814	1					
ANR	6323876	ExpressionStatement	force_blank = 0	3092:1:64663:64678	6323814	11	True				
ANR	6323877	AssignmentExpression	force_blank = 0		6323814	0		=			
ANR	6323878	Identifier	force_blank		6323814	0					
ANR	6323879	PrimaryExpression	0		6323814	1					
ANR	6323880	WhileStatement	while ( tcc_nerr ( ) == 0 )		6323814	12					
ANR	6323881	Condition	tcc_nerr ( ) == 0	3094:8:64689:64704	6323814	0	True				
ANR	6323882	EqualityExpression	tcc_nerr ( ) == 0		6323814	0		==			
ANR	6323883	CallExpression	tcc_nerr ( )		6323814	0					
ANR	6323884	Callee	tcc_nerr		6323814	0					
ANR	6323885	Identifier	tcc_nerr		6323814	0					
ANR	6323886	ArgumentList			6323814	1					
ANR	6323887	PrimaryExpression	0		6323814	1					
ANR	6323888	CompoundStatement		20:26:318:318	6323814	1					
ANR	6323889	IfStatement	if ( ptr == NULL )		6323814	0					
ANR	6323890	Condition	ptr == NULL	3097:6:64827:64837	6323814	0	True				
ANR	6323891	EqualityExpression	ptr == NULL		6323814	0		==			
ANR	6323892	Identifier	ptr		6323814	0					
ANR	6323893	Identifier	NULL		6323814	1					
ANR	6323894	CompoundStatement		23:19:451:451	6323814	1					
ANR	6323895	BreakStatement	break ;	3098:3:64845:64850	6323814	0	True				
ANR	6323896	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3100:2:64858:64883	6323814	1	True				
ANR	6323897	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6323814	0					
ANR	6323898	Callee	TOK_GET		6323814	0					
ANR	6323899	Identifier	TOK_GET		6323814	0					
ANR	6323900	ArgumentList	& t		6323814	1					
ANR	6323901	Argument	& t		6323814	0					
ANR	6323902	UnaryOperationExpression	& t		6323814	0					
ANR	6323903	UnaryOperator	&		6323814	0					
ANR	6323904	Identifier	t		6323814	1					
ANR	6323905	Argument	& ptr		6323814	1					
ANR	6323906	UnaryOperationExpression	& ptr		6323814	0					
ANR	6323907	UnaryOperator	&		6323814	0					
ANR	6323908	Identifier	ptr		6323814	1					
ANR	6323909	Argument	& cval		6323814	2					
ANR	6323910	UnaryOperationExpression	& cval		6323814	0					
ANR	6323911	UnaryOperator	&		6323814	0					
ANR	6323912	Identifier	cval		6323814	1					
ANR	6323913	IfStatement	if ( t == 0 )		6323814	2					
ANR	6323914	Condition	t == 0	3101:6:64891:64896	6323814	0	True				
ANR	6323915	EqualityExpression	t == 0		6323814	0		==			
ANR	6323916	Identifier	t		6323814	0					
ANR	6323917	PrimaryExpression	0		6323814	1					
ANR	6323918	CompoundStatement		27:14:510:510	6323814	1					
ANR	6323919	BreakStatement	break ;	3102:3:64904:64909	6323814	0	True				
ANR	6323920	IfStatement	if ( t == TOK_NOSUBST )		6323814	3					
ANR	6323921	Condition	t == TOK_NOSUBST	3104:6:64921:64936	6323814	0	True				
ANR	6323922	EqualityExpression	t == TOK_NOSUBST		6323814	0		==			
ANR	6323923	Identifier	t		6323814	0					
ANR	6323924	Identifier	TOK_NOSUBST		6323814	1					
ANR	6323925	CompoundStatement		30:24:550:550	6323814	1					
ANR	6323926	ExpressionStatement	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"	3106:3:65011:65052	6323814	0	True				
ANR	6323927	CallExpression	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"		6323814	0					
ANR	6323928	Callee	tok_str_add2		6323814	0					
ANR	6323929	Identifier	tok_str_add2		6323814	0					
ANR	6323930	ArgumentList	tok_str		6323814	1					
ANR	6323931	Argument	tok_str		6323814	0					
ANR	6323932	Identifier	tok_str		6323814	0					
ANR	6323933	Argument	TOK_NOSUBST		6323814	1					
ANR	6323934	Identifier	TOK_NOSUBST		6323814	0					
ANR	6323935	Argument	NULL		6323814	2					
ANR	6323936	Identifier	NULL		6323814	0					
ANR	6323937	ExpressionStatement	"TOK_GET ( & t , & ptr , & cval )"	3107:3:65057:65082	6323814	1	True				
ANR	6323938	CallExpression	"TOK_GET ( & t , & ptr , & cval )"		6323814	0					
ANR	6323939	Callee	TOK_GET		6323814	0					
ANR	6323940	Identifier	TOK_GET		6323814	0					
ANR	6323941	ArgumentList	& t		6323814	1					
ANR	6323942	Argument	& t		6323814	0					
ANR	6323943	UnaryOperationExpression	& t		6323814	0					
ANR	6323944	UnaryOperator	&		6323814	0					
ANR	6323945	Identifier	t		6323814	1					
ANR	6323946	Argument	& ptr		6323814	1					
ANR	6323947	UnaryOperationExpression	& ptr		6323814	0					
ANR	6323948	UnaryOperator	&		6323814	0					
ANR	6323949	Identifier	ptr		6323814	1					
ANR	6323950	Argument	& cval		6323814	2					
ANR	6323951	UnaryOperationExpression	& cval		6323814	0					
ANR	6323952	UnaryOperator	&		6323814	0					
ANR	6323953	Identifier	cval		6323814	1					
ANR	6323954	GotoStatement	goto no_subst ;	3108:3:65087:65100	6323814	2	True				
ANR	6323955	Identifier	no_subst		6323814	0					
ANR	6323956	ExpressionStatement	s = define_find ( t )	3110:2:65108:65127	6323814	4	True				
ANR	6323957	AssignmentExpression	s = define_find ( t )		6323814	0		=			
ANR	6323958	Identifier	s		6323814	0					
ANR	6323959	CallExpression	define_find ( t )		6323814	1					
ANR	6323960	Callee	define_find		6323814	0					
ANR	6323961	Identifier	define_find		6323814	0					
ANR	6323962	ArgumentList	t		6323814	1					
ANR	6323963	Argument	t		6323814	0					
ANR	6323964	Identifier	t		6323814	0					
ANR	6323965	IfStatement	if ( s != NULL )		6323814	5					
ANR	6323966	Condition	s != NULL	3111:6:65135:65143	6323814	0	True				
ANR	6323967	EqualityExpression	s != NULL		6323814	0		!=			
ANR	6323968	Identifier	s		6323814	0					
ANR	6323969	Identifier	NULL		6323814	1					
ANR	6323970	CompoundStatement		37:17:757:757	6323814	1					
ANR	6323971	IfStatement	"if ( sym_find2 ( * nested_list , t ) )"		6323814	0					
ANR	6323972	Condition	"sym_find2 ( * nested_list , t )"	3113:7:65199:65225	6323814	0	True				
ANR	6323973	CallExpression	"sym_find2 ( * nested_list , t )"		6323814	0					
ANR	6323974	Callee	sym_find2		6323814	0					
ANR	6323975	Identifier	sym_find2		6323814	0					
ANR	6323976	ArgumentList	* nested_list		6323814	1					
ANR	6323977	Argument	* nested_list		6323814	0					
ANR	6323978	UnaryOperationExpression	* nested_list		6323814	0					
ANR	6323979	UnaryOperator	*		6323814	0					
ANR	6323980	Identifier	nested_list		6323814	1					
ANR	6323981	Argument	t		6323814	1					
ANR	6323982	Identifier	t		6323814	0					
ANR	6323983	CompoundStatement		39:36:839:839	6323814	1					
ANR	6323984	ExpressionStatement	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"	3115:4:65304:65345	6323814	0	True				
ANR	6323985	CallExpression	"tok_str_add2 ( tok_str , TOK_NOSUBST , NULL )"		6323814	0					
ANR	6323986	Callee	tok_str_add2		6323814	0					
ANR	6323987	Identifier	tok_str_add2		6323814	0					
ANR	6323988	ArgumentList	tok_str		6323814	1					
ANR	6323989	Argument	tok_str		6323814	0					
ANR	6323990	Identifier	tok_str		6323814	0					
ANR	6323991	Argument	TOK_NOSUBST		6323814	1					
ANR	6323992	Identifier	TOK_NOSUBST		6323814	0					
ANR	6323993	Argument	NULL		6323814	2					
ANR	6323994	Identifier	NULL		6323814	0					
ANR	6323995	GotoStatement	goto no_subst ;	3116:4:65351:65364	6323814	1	True				
ANR	6323996	Identifier	no_subst		6323814	0					
ANR	6323997	ExpressionStatement	ml . p = macro_ptr	3118:3:65374:65390	6323814	1	True				
ANR	6323998	AssignmentExpression	ml . p = macro_ptr		6323814	0		=			
ANR	6323999	MemberAccess	ml . p		6323814	0					
ANR	6324000	Identifier	ml		6323814	0					
ANR	6324001	Identifier	p		6323814	1					
ANR	6324002	Identifier	macro_ptr		6323814	1					
ANR	6324003	IfStatement	if ( can_read_stream )		6323814	2					
ANR	6324004	Condition	can_read_stream	3119:7:65399:65413	6323814	0	True				
ANR	6324005	Identifier	can_read_stream		6323814	0					
ANR	6324006	CompoundStatement		45:24:1027:1027	6323814	1					
ANR	6324007	ExpressionStatement	"ml . prev = * can_read_stream , * can_read_stream = & ml"	3120:4:65422:65472	6323814	0	True				
ANR	6324008	Expression	"ml . prev = * can_read_stream , * can_read_stream = & ml"		6323814	0					
ANR	6324009	AssignmentExpression	ml . prev = * can_read_stream		6323814	0		=			
ANR	6324010	MemberAccess	ml . prev		6323814	0					
ANR	6324011	Identifier	ml		6323814	0					
ANR	6324012	Identifier	prev		6323814	1					
ANR	6324013	UnaryOperationExpression	* can_read_stream		6323814	1					
ANR	6324014	UnaryOperator	*		6323814	0					
ANR	6324015	Identifier	can_read_stream		6323814	1					
ANR	6324016	AssignmentExpression	* can_read_stream = & ml		6323814	1		=			
ANR	6324017	UnaryOperationExpression	* can_read_stream		6323814	0					
ANR	6324018	UnaryOperator	*		6323814	0					
ANR	6324019	Identifier	can_read_stream		6323814	1					
ANR	6324020	UnaryOperationExpression	& ml		6323814	1					
ANR	6324021	UnaryOperator	&		6323814	0					
ANR	6324022	Identifier	ml		6323814	1					
ANR	6324023	ExpressionStatement	macro_ptr = ( int * ) ptr	3122:3:65482:65505	6323814	3	True				
ANR	6324024	AssignmentExpression	macro_ptr = ( int * ) ptr		6323814	0		=			
ANR	6324025	Identifier	macro_ptr		6323814	0					
ANR	6324026	CastExpression	( int * ) ptr		6323814	1					
ANR	6324027	CastTarget	int *		6323814	0					
ANR	6324028	Identifier	ptr		6323814	1					
ANR	6324029	ExpressionStatement	tok = t	3123:3:65510:65517	6323814	4	True				
ANR	6324030	AssignmentExpression	tok = t		6323814	0		=			
ANR	6324031	Identifier	tok		6323814	0					
ANR	6324032	Identifier	t		6323814	1					
ANR	6324033	ExpressionStatement	"ret = macro_subst_tok ( tok_str , nested_list , s , can_read_stream )"	3124:3:65522:65586	6323814	5	True				
ANR	6324034	AssignmentExpression	"ret = macro_subst_tok ( tok_str , nested_list , s , can_read_stream )"		6323814	0		=			
ANR	6324035	Identifier	ret		6323814	0					
ANR	6324036	CallExpression	"macro_subst_tok ( tok_str , nested_list , s , can_read_stream )"		6323814	1					
ANR	6324037	Callee	macro_subst_tok		6323814	0					
ANR	6324038	Identifier	macro_subst_tok		6323814	0					
ANR	6324039	ArgumentList	tok_str		6323814	1					
ANR	6324040	Argument	tok_str		6323814	0					
ANR	6324041	Identifier	tok_str		6323814	0					
ANR	6324042	Argument	nested_list		6323814	1					
ANR	6324043	Identifier	nested_list		6323814	0					
ANR	6324044	Argument	s		6323814	2					
ANR	6324045	Identifier	s		6323814	0					
ANR	6324046	Argument	can_read_stream		6323814	3					
ANR	6324047	Identifier	can_read_stream		6323814	0					
ANR	6324048	ExpressionStatement	ptr = ( int * ) macro_ptr	3125:3:65591:65614	6323814	6	True				
ANR	6324049	AssignmentExpression	ptr = ( int * ) macro_ptr		6323814	0		=			
ANR	6324050	Identifier	ptr		6323814	0					
ANR	6324051	CastExpression	( int * ) macro_ptr		6323814	1					
ANR	6324052	CastTarget	int *		6323814	0					
ANR	6324053	Identifier	macro_ptr		6323814	1					
ANR	6324054	ExpressionStatement	macro_ptr = ml . p	3126:3:65619:65635	6323814	7	True				
ANR	6324055	AssignmentExpression	macro_ptr = ml . p		6323814	0		=			
ANR	6324056	Identifier	macro_ptr		6323814	0					
ANR	6324057	MemberAccess	ml . p		6323814	1					
ANR	6324058	Identifier	ml		6323814	0					
ANR	6324059	Identifier	p		6323814	1					
ANR	6324060	IfStatement	if ( can_read_stream && * can_read_stream == & ml )		6323814	8					
ANR	6324061	Condition	can_read_stream && * can_read_stream == & ml	3127:7:65644:65685	6323814	0	True				
ANR	6324062	AndExpression	can_read_stream && * can_read_stream == & ml		6323814	0		&&			
ANR	6324063	Identifier	can_read_stream		6323814	0					
ANR	6324064	EqualityExpression	* can_read_stream == & ml		6323814	1		==			
ANR	6324065	UnaryOperationExpression	* can_read_stream		6323814	0					
ANR	6324066	UnaryOperator	*		6323814	0					
ANR	6324067	Identifier	can_read_stream		6323814	1					
ANR	6324068	UnaryOperationExpression	& ml		6323814	1					
ANR	6324069	UnaryOperator	&		6323814	0					
ANR	6324070	Identifier	ml		6323814	1					
ANR	6324071	CompoundStatement		53:51:1299:1299	6323814	1					
ANR	6324072	ExpressionStatement	* can_read_stream = ml . prev	3128:4:65694:65720	6323814	0	True				
ANR	6324073	AssignmentExpression	* can_read_stream = ml . prev		6323814	0		=			
ANR	6324074	UnaryOperationExpression	* can_read_stream		6323814	0					
ANR	6324075	UnaryOperator	*		6323814	0					
ANR	6324076	Identifier	can_read_stream		6323814	1					
ANR	6324077	MemberAccess	ml . prev		6323814	1					
ANR	6324078	Identifier	ml		6323814	0					
ANR	6324079	Identifier	prev		6323814	1					
ANR	6324080	IfStatement	if ( ret != 0 )		6323814	9					
ANR	6324081	Condition	ret != 0	3130:7:65734:65741	6323814	0	True				
ANR	6324082	EqualityExpression	ret != 0		6323814	0		!=			
ANR	6324083	Identifier	ret		6323814	0					
ANR	6324084	PrimaryExpression	0		6323814	1					
ANR	6324085	CompoundStatement		56:17:1355:1355	6323814	1					
ANR	6324086	GotoStatement	goto no_subst ;	3131:4:65750:65763	6323814	0	True				
ANR	6324087	Identifier	no_subst		6323814	0					
ANR	6324088	IfStatement	if ( parse_flags & PARSE_FLAG_SPACES )		6323814	10					
ANR	6324089	Condition	parse_flags & PARSE_FLAG_SPACES	3133:7:65777:65807	6323814	0	True				
ANR	6324090	BitAndExpression	parse_flags & PARSE_FLAG_SPACES		6323814	0		&			
ANR	6324091	Identifier	parse_flags		6323814	0					
ANR	6324092	Identifier	PARSE_FLAG_SPACES		6323814	1					
ANR	6324093	CompoundStatement		59:40:1421:1421	6323814	1					
ANR	6324094	ExpressionStatement	force_blank = 1	3134:4:65816:65831	6323814	0	True				
ANR	6324095	AssignmentExpression	force_blank = 1		6323814	0		=			
ANR	6324096	Identifier	force_blank		6323814	0					
ANR	6324097	PrimaryExpression	1		6323814	1					
ANR	6324098	ElseStatement	else		6323814	0					
ANR	6324099	CompoundStatement		62:9:1458:1458	6323814	0					
ANR	6324100	Label	no_subst :	3137:0:65849:65857	6323814	0	True				
ANR	6324101	Identifier	no_subst		6323814	0					
ANR	6324102	IfStatement	if ( force_blank )		6323814	1					
ANR	6324103	Condition	force_blank	3138:7:65866:65876	6323814	0	True				
ANR	6324104	Identifier	force_blank		6323814	0					
ANR	6324105	CompoundStatement		64:20:1490:1490	6323814	1					
ANR	6324106	ExpressionStatement	"tok_str_add ( tok_str , ' ' )"	3139:4:65885:65911	6323814	0	True				
ANR	6324107	CallExpression	"tok_str_add ( tok_str , ' ' )"		6323814	0					
ANR	6324108	Callee	tok_str_add		6323814	0					
ANR	6324109	Identifier	tok_str_add		6323814	0					
ANR	6324110	ArgumentList	tok_str		6323814	1					
ANR	6324111	Argument	tok_str		6323814	0					
ANR	6324112	Identifier	tok_str		6323814	0					
ANR	6324113	Argument	' '		6323814	1					
ANR	6324114	PrimaryExpression	' '		6323814	0					
ANR	6324115	ExpressionStatement	spc = 1	3140:4:65917:65924	6323814	1	True				
ANR	6324116	AssignmentExpression	spc = 1		6323814	0		=			
ANR	6324117	Identifier	spc		6323814	0					
ANR	6324118	PrimaryExpression	1		6323814	1					
ANR	6324119	ExpressionStatement	force_blank = 0	3141:4:65930:65945	6323814	2	True				
ANR	6324120	AssignmentExpression	force_blank = 0		6323814	0		=			
ANR	6324121	Identifier	force_blank		6323814	0					
ANR	6324122	PrimaryExpression	0		6323814	1					
ANR	6324123	IfStatement	"if ( ! check_space ( t , & spc ) )"		6323814	2					
ANR	6324124	Condition	"! check_space ( t , & spc )"	3143:7:65959:65980	6323814	0	True				
ANR	6324125	UnaryOperationExpression	"! check_space ( t , & spc )"		6323814	0					
ANR	6324126	UnaryOperator	!		6323814	0					
ANR	6324127	CallExpression	"check_space ( t , & spc )"		6323814	1					
ANR	6324128	Callee	check_space		6323814	0					
ANR	6324129	Identifier	check_space		6323814	0					
ANR	6324130	ArgumentList	t		6323814	1					
ANR	6324131	Argument	t		6323814	0					
ANR	6324132	Identifier	t		6323814	0					
ANR	6324133	Argument	& spc		6323814	1					
ANR	6324134	UnaryOperationExpression	& spc		6323814	0					
ANR	6324135	UnaryOperator	&		6323814	0					
ANR	6324136	Identifier	spc		6323814	1					
ANR	6324137	CompoundStatement		69:31:1594:1594	6323814	1					
ANR	6324138	ExpressionStatement	"tok_str_add2 ( tok_str , t , & cval )"	3144:4:65989:66021	6323814	0	True				
ANR	6324139	CallExpression	"tok_str_add2 ( tok_str , t , & cval )"		6323814	0					
ANR	6324140	Callee	tok_str_add2		6323814	0					
ANR	6324141	Identifier	tok_str_add2		6323814	0					
ANR	6324142	ArgumentList	tok_str		6323814	1					
ANR	6324143	Argument	tok_str		6323814	0					
ANR	6324144	Identifier	tok_str		6323814	0					
ANR	6324145	Argument	t		6323814	1					
ANR	6324146	Identifier	t		6323814	0					
ANR	6324147	Argument	& cval		6323814	2					
ANR	6324148	UnaryOperationExpression	& cval		6323814	0					
ANR	6324149	UnaryOperator	&		6323814	0					
ANR	6324150	Identifier	cval		6323814	1					
ANR	6324151	IfStatement	if ( macro_str1 )		6323814	13					
ANR	6324152	Condition	macro_str1	3148:5:66040:66049	6323814	0	True				
ANR	6324153	Identifier	macro_str1		6323814	0					
ANR	6324154	CompoundStatement		74:17:1663:1663	6323814	1					
ANR	6324155	ExpressionStatement	tok_str_free ( macro_str1 )	3149:2:66056:66081	6323814	0	True				
ANR	6324156	CallExpression	tok_str_free ( macro_str1 )		6323814	0					
ANR	6324157	Callee	tok_str_free		6323814	0					
ANR	6324158	Identifier	tok_str_free		6323814	0					
ANR	6324159	ArgumentList	macro_str1		6323814	1					
ANR	6324160	Argument	macro_str1		6323814	0					
ANR	6324161	Identifier	macro_str1		6323814	0					
ANR	6324162	ReturnType	static void		6323814	1					
ANR	6324163	Identifier	macro_subst		6323814	2					
ANR	6324164	ParameterList	"TokenString * tok_str , Sym * * nested_list , const int * macro_str , struct macro_level * * can_read_stream"		6323814	3					
ANR	6324165	Parameter	TokenString * tok_str	3073:24:64284:64303	6323814	0	True				
ANR	6324166	ParameterType	TokenString *		6323814	0					
ANR	6324167	Identifier	tok_str		6323814	1					
ANR	6324168	Parameter	Sym * * nested_list	3073:46:64306:64322	6323814	1	True				
ANR	6324169	ParameterType	Sym * *		6323814	0					
ANR	6324170	Identifier	nested_list		6323814	1					
ANR	6324171	Parameter	const int * macro_str	3074:3:64328:64347	6323814	2	True				
ANR	6324172	ParameterType	const int *		6323814	0					
ANR	6324173	Identifier	macro_str		6323814	1					
ANR	6324174	Parameter	struct macro_level * * can_read_stream	3074:25:64350:64385	6323814	3	True				
ANR	6324175	ParameterType	struct macro_level * *		6323814	0					
ANR	6324176	Identifier	can_read_stream		6323814	1					
ANR	6324177	CFGEntryNode	ENTRY		6323814		True				
ANR	6324178	CFGExitNode	EXIT		6323814		True				
ANR	6324179	Symbol	macro_subst_tok		6323814						
ANR	6324180	Symbol	& ml		6323814						
ANR	6324181	Symbol	nested_list		6323814						
ANR	6324182	Symbol	& spc		6323814						
ANR	6324183	Symbol	can_read_stream		6323814						
ANR	6324184	Symbol	force_blank		6323814						
ANR	6324185	Symbol	tok_str		6323814						
ANR	6324186	Symbol	& cval		6323814						
ANR	6324187	Symbol	tok		6323814						
ANR	6324188	Symbol	& ptr		6323814						
ANR	6324189	Symbol	* can_read_stream		6323814						
ANR	6324190	Symbol	macro_str1		6323814						
ANR	6324191	Symbol	define_find		6323814						
ANR	6324192	Symbol	ml		6323814						
ANR	6324193	Symbol	ret		6323814						
ANR	6324194	Symbol	NULL		6323814						
ANR	6324195	Symbol	ml . prev		6323814						
ANR	6324196	Symbol	spc		6323814						
ANR	6324197	Symbol	tcc_nerr		6323814						
ANR	6324198	Symbol	ptr		6323814						
ANR	6324199	Symbol	macro_twosharps		6323814						
ANR	6324200	Symbol	TOK_NOSUBST		6323814						
ANR	6324201	Symbol	* nested_list		6323814						
ANR	6324202	Symbol	cval		6323814						
ANR	6324203	Symbol	macro_str		6323814						
ANR	6324204	Symbol	s		6323814						
ANR	6324205	Symbol	t		6323814						
ANR	6324206	Symbol	macro_ptr		6323814						
ANR	6324207	Symbol	check_space		6323814						
ANR	6324208	Symbol	& t		6323814						
ANR	6324209	Symbol	PARSE_FLAG_SPACES		6323814						
ANR	6324210	Symbol	ml . p		6323814						
ANR	6324211	Symbol	sym_find2		6323814						
ANR	6324212	Symbol	parse_flags		6323814						
ANR	6324213	Function	next	3154:0:66137:67496							
ANR	6324214	FunctionDef	next ()		6324213	0					
ANR	6324215	CompoundStatement		3155:0:66161:67496	6324213	0					
ANR	6324216	IdentifierDeclStatement	"Sym * nested_list , * s ;"	3156:1:66164:66184	6324213	0	True				
ANR	6324217	IdentifierDecl	* nested_list		6324213	0					
ANR	6324218	IdentifierDeclType	Sym *		6324213	0					
ANR	6324219	Identifier	nested_list		6324213	1					
ANR	6324220	IdentifierDecl	* s		6324213	1					
ANR	6324221	IdentifierDeclType	Sym *		6324213	0					
ANR	6324222	Identifier	s		6324213	1					
ANR	6324223	IdentifierDeclStatement	TokenString str ;	3157:1:66187:66202	6324213	1	True				
ANR	6324224	IdentifierDecl	str		6324213	0					
ANR	6324225	IdentifierDeclType	TokenString		6324213	0					
ANR	6324226	Identifier	str		6324213	1					
ANR	6324227	IdentifierDeclStatement	struct macro_level * ml ;	3158:1:66205:66227	6324213	2	True				
ANR	6324228	IdentifierDecl	* ml		6324213	0					
ANR	6324229	IdentifierDeclType	struct macro_level *		6324213	0					
ANR	6324230	Identifier	ml		6324213	1					
ANR	6324231	Label	redo :	3160:0:66230:66234	6324213	3	True				
ANR	6324232	Identifier	redo		6324213	0					
ANR	6324233	IfStatement	if ( parse_flags & PARSE_FLAG_SPACES )		6324213	4					
ANR	6324234	Condition	parse_flags & PARSE_FLAG_SPACES	3161:5:66241:66271	6324213	0	True				
ANR	6324235	BitAndExpression	parse_flags & PARSE_FLAG_SPACES		6324213	0		&			
ANR	6324236	Identifier	parse_flags		6324213	0					
ANR	6324237	Identifier	PARSE_FLAG_SPACES		6324213	1					
ANR	6324238	CompoundStatement		7:38:112:112	6324213	1					
ANR	6324239	ExpressionStatement	next_nomacro_spc ( )	3162:2:66278:66297	6324213	0	True				
ANR	6324240	CallExpression	next_nomacro_spc ( )		6324213	0					
ANR	6324241	Callee	next_nomacro_spc		6324213	0					
ANR	6324242	Identifier	next_nomacro_spc		6324213	0					
ANR	6324243	ArgumentList			6324213	1					
ANR	6324244	ElseStatement	else		6324213	0					
ANR	6324245	CompoundStatement		9:8:145:145	6324213	0					
ANR	6324246	ExpressionStatement	next_nomacro ( )	3164:2:66311:66326	6324213	0	True				
ANR	6324247	CallExpression	next_nomacro ( )		6324213	0					
ANR	6324248	Callee	next_nomacro		6324213	0					
ANR	6324249	Identifier	next_nomacro		6324213	0					
ANR	6324250	ArgumentList			6324213	1					
ANR	6324251	IfStatement	if ( ! macro_ptr )		6324213	5					
ANR	6324252	Condition	! macro_ptr	3166:5:66336:66345	6324213	0	True				
ANR	6324253	UnaryOperationExpression	! macro_ptr		6324213	0					
ANR	6324254	UnaryOperator	!		6324213	0					
ANR	6324255	Identifier	macro_ptr		6324213	1					
ANR	6324256	CompoundStatement		12:17:186:186	6324213	1					
ANR	6324257	IfStatement	if ( tok >= TOK_IDENT && ( parse_flags & PARSE_FLAG_PREPROCESS ) )		6324213	0					
ANR	6324258	Condition	tok >= TOK_IDENT && ( parse_flags & PARSE_FLAG_PREPROCESS )	3169:6:66445:66507	6324213	0	True				
ANR	6324259	AndExpression	tok >= TOK_IDENT && ( parse_flags & PARSE_FLAG_PREPROCESS )		6324213	0		&&			
ANR	6324260	RelationalExpression	tok >= TOK_IDENT		6324213	0		>=			
ANR	6324261	Identifier	tok		6324213	0					
ANR	6324262	Identifier	TOK_IDENT		6324213	1					
ANR	6324263	BitAndExpression	parse_flags & PARSE_FLAG_PREPROCESS		6324213	1		&			
ANR	6324264	Identifier	parse_flags		6324213	0					
ANR	6324265	Identifier	PARSE_FLAG_PREPROCESS		6324213	1					
ANR	6324266	CompoundStatement		16:45:348:348	6324213	1					
ANR	6324267	ExpressionStatement	s = define_find ( tok )	3171:3:66515:66536	6324213	0	True				
ANR	6324268	AssignmentExpression	s = define_find ( tok )		6324213	0		=			
ANR	6324269	Identifier	s		6324213	0					
ANR	6324270	CallExpression	define_find ( tok )		6324213	1					
ANR	6324271	Callee	define_find		6324213	0					
ANR	6324272	Identifier	define_find		6324213	0					
ANR	6324273	ArgumentList	tok		6324213	1					
ANR	6324274	Argument	tok		6324213	0					
ANR	6324275	Identifier	tok		6324213	0					
ANR	6324276	IfStatement	if ( s )		6324213	1					
ANR	6324277	Condition	s	3172:7:66545:66545	6324213	0	True				
ANR	6324278	Identifier	s		6324213	0					
ANR	6324279	CompoundStatement		18:10:386:386	6324213	1					
ANR	6324280	ExpressionStatement	tok_str_new ( & str )	3174:4:66602:66620	6324213	0	True				
ANR	6324281	CallExpression	tok_str_new ( & str )		6324213	0					
ANR	6324282	Callee	tok_str_new		6324213	0					
ANR	6324283	Identifier	tok_str_new		6324213	0					
ANR	6324284	ArgumentList	& str		6324213	1					
ANR	6324285	Argument	& str		6324213	0					
ANR	6324286	UnaryOperationExpression	& str		6324213	0					
ANR	6324287	UnaryOperator	&		6324213	0					
ANR	6324288	Identifier	str		6324213	1					
ANR	6324289	ExpressionStatement	nested_list = NULL	3175:4:66626:66644	6324213	1	True				
ANR	6324290	AssignmentExpression	nested_list = NULL		6324213	0		=			
ANR	6324291	Identifier	nested_list		6324213	0					
ANR	6324292	Identifier	NULL		6324213	1					
ANR	6324293	ExpressionStatement	ml = NULL	3176:4:66650:66659	6324213	2	True				
ANR	6324294	AssignmentExpression	ml = NULL		6324213	0		=			
ANR	6324295	Identifier	ml		6324213	0					
ANR	6324296	Identifier	NULL		6324213	1					
ANR	6324297	IfStatement	"if ( macro_subst_tok ( & str , & nested_list , s , & ml ) == 0 )"		6324213	3					
ANR	6324298	Condition	"macro_subst_tok ( & str , & nested_list , s , & ml ) == 0"	3177:8:66669:66717	6324213	0	True				
ANR	6324299	EqualityExpression	"macro_subst_tok ( & str , & nested_list , s , & ml ) == 0"		6324213	0		==			
ANR	6324300	CallExpression	"macro_subst_tok ( & str , & nested_list , s , & ml )"		6324213	0					
ANR	6324301	Callee	macro_subst_tok		6324213	0					
ANR	6324302	Identifier	macro_subst_tok		6324213	0					
ANR	6324303	ArgumentList	& str		6324213	1					
ANR	6324304	Argument	& str		6324213	0					
ANR	6324305	UnaryOperationExpression	& str		6324213	0					
ANR	6324306	UnaryOperator	&		6324213	0					
ANR	6324307	Identifier	str		6324213	1					
ANR	6324308	Argument	& nested_list		6324213	1					
ANR	6324309	UnaryOperationExpression	& nested_list		6324213	0					
ANR	6324310	UnaryOperator	&		6324213	0					
ANR	6324311	Identifier	nested_list		6324213	1					
ANR	6324312	Argument	s		6324213	2					
ANR	6324313	Identifier	s		6324213	0					
ANR	6324314	Argument	& ml		6324213	3					
ANR	6324315	UnaryOperationExpression	& ml		6324213	0					
ANR	6324316	UnaryOperator	&		6324213	0					
ANR	6324317	Identifier	ml		6324213	1					
ANR	6324318	PrimaryExpression	0		6324213	1					
ANR	6324319	CompoundStatement		23:59:558:558	6324213	1					
ANR	6324320	ExpressionStatement	"tok_str_add ( & str , 0 )"	3179:5:66775:66796	6324213	0	True				
ANR	6324321	CallExpression	"tok_str_add ( & str , 0 )"		6324213	0					
ANR	6324322	Callee	tok_str_add		6324213	0					
ANR	6324323	Identifier	tok_str_add		6324213	0					
ANR	6324324	ArgumentList	& str		6324213	1					
ANR	6324325	Argument	& str		6324213	0					
ANR	6324326	UnaryOperationExpression	& str		6324213	0					
ANR	6324327	UnaryOperator	&		6324213	0					
ANR	6324328	Identifier	str		6324213	1					
ANR	6324329	Argument	0		6324213	1					
ANR	6324330	PrimaryExpression	0		6324213	0					
ANR	6324331	ExpressionStatement	macro_ptr = str . str	3180:5:66803:66822	6324213	1	True				
ANR	6324332	AssignmentExpression	macro_ptr = str . str		6324213	0		=			
ANR	6324333	Identifier	macro_ptr		6324213	0					
ANR	6324334	MemberAccess	str . str		6324213	1					
ANR	6324335	Identifier	str		6324213	0					
ANR	6324336	Identifier	str		6324213	1					
ANR	6324337	ExpressionStatement	macro_ptr_allocated = str . str	3181:5:66829:66858	6324213	2	True				
ANR	6324338	AssignmentExpression	macro_ptr_allocated = str . str		6324213	0		=			
ANR	6324339	Identifier	macro_ptr_allocated		6324213	0					
ANR	6324340	MemberAccess	str . str		6324213	1					
ANR	6324341	Identifier	str		6324213	0					
ANR	6324342	Identifier	str		6324213	1					
ANR	6324343	GotoStatement	goto redo ;	3182:5:66865:66874	6324213	3	True				
ANR	6324344	Identifier	redo		6324213	0					
ANR	6324345	ElseStatement	else		6324213	0					
ANR	6324346	CompoundStatement		32:8:737:737	6324213	0					
ANR	6324347	IfStatement	if ( tok == 0 )		6324213	0					
ANR	6324348	Condition	tok == 0	3187:6:66907:66914	6324213	0	True				
ANR	6324349	EqualityExpression	tok == 0		6324213	0		==			
ANR	6324350	Identifier	tok		6324213	0					
ANR	6324351	PrimaryExpression	0		6324213	1					
ANR	6324352	CompoundStatement		33:16:755:755	6324213	1					
ANR	6324353	IfStatement	if ( unget_buffer_enabled )		6324213	0					
ANR	6324354	Condition	unget_buffer_enabled	3189:7:66971:66990	6324213	0	True				
ANR	6324355	Identifier	unget_buffer_enabled		6324213	0					
ANR	6324356	CompoundStatement		35:29:831:831	6324213	1					
ANR	6324357	ExpressionStatement	macro_ptr = unget_saved_macro_ptr	3190:4:66999:67032	6324213	0	True				
ANR	6324358	AssignmentExpression	macro_ptr = unget_saved_macro_ptr		6324213	0		=			
ANR	6324359	Identifier	macro_ptr		6324213	0					
ANR	6324360	Identifier	unget_saved_macro_ptr		6324213	1					
ANR	6324361	ExpressionStatement	unget_buffer_enabled = 0	3191:4:67038:67062	6324213	1	True				
ANR	6324362	AssignmentExpression	unget_buffer_enabled = 0		6324213	0		=			
ANR	6324363	Identifier	unget_buffer_enabled		6324213	0					
ANR	6324364	PrimaryExpression	0		6324213	1					
ANR	6324365	ElseStatement	else		6324213	0					
ANR	6324366	CompoundStatement		38:10:912:912	6324213	0					
ANR	6324367	ExpressionStatement	tok_str_free ( macro_ptr_allocated )	3194:4:67119:67153	6324213	0	True				
ANR	6324368	CallExpression	tok_str_free ( macro_ptr_allocated )		6324213	0					
ANR	6324369	Callee	tok_str_free		6324213	0					
ANR	6324370	Identifier	tok_str_free		6324213	0					
ANR	6324371	ArgumentList	macro_ptr_allocated		6324213	1					
ANR	6324372	Argument	macro_ptr_allocated		6324213	0					
ANR	6324373	Identifier	macro_ptr_allocated		6324213	0					
ANR	6324374	ExpressionStatement	macro_ptr_allocated = NULL	3195:4:67159:67185	6324213	1	True				
ANR	6324375	AssignmentExpression	macro_ptr_allocated = NULL		6324213	0		=			
ANR	6324376	Identifier	macro_ptr_allocated		6324213	0					
ANR	6324377	Identifier	NULL		6324213	1					
ANR	6324378	ExpressionStatement	macro_ptr = NULL	3196:4:67191:67207	6324213	2	True				
ANR	6324379	AssignmentExpression	macro_ptr = NULL		6324213	0		=			
ANR	6324380	Identifier	macro_ptr		6324213	0					
ANR	6324381	Identifier	NULL		6324213	1					
ANR	6324382	GotoStatement	goto redo ;	3198:3:67217:67226	6324213	1	True				
ANR	6324383	Identifier	redo		6324213	0					
ANR	6324384	ElseStatement	else		6324213	0					
ANR	6324385	IfStatement	if ( tok == TOK_NOSUBST )		6324213	0					
ANR	6324386	Condition	tok == TOK_NOSUBST	3199:13:67241:67258	6324213	0	True				
ANR	6324387	EqualityExpression	tok == TOK_NOSUBST		6324213	0		==			
ANR	6324388	Identifier	tok		6324213	0					
ANR	6324389	Identifier	TOK_NOSUBST		6324213	1					
ANR	6324390	CompoundStatement		45:33:1099:1099	6324213	1					
ANR	6324391	GotoStatement	goto redo ;	3201:3:67314:67323	6324213	0	True				
ANR	6324392	Identifier	redo		6324213	0					
ANR	6324393	IfStatement	if ( tok == TOK_PPNUM && ( parse_flags & PARSE_FLAG_TOK_NUM ) )		6324213	6					
ANR	6324394	Condition	tok == TOK_PPNUM && ( parse_flags & PARSE_FLAG_TOK_NUM )	3206:5:67387:67445	6324213	0	True				
ANR	6324395	AndExpression	tok == TOK_PPNUM && ( parse_flags & PARSE_FLAG_TOK_NUM )		6324213	0		&&			
ANR	6324396	EqualityExpression	tok == TOK_PPNUM		6324213	0		==			
ANR	6324397	Identifier	tok		6324213	0					
ANR	6324398	Identifier	TOK_PPNUM		6324213	1					
ANR	6324399	BitAndExpression	parse_flags & PARSE_FLAG_TOK_NUM		6324213	1		&			
ANR	6324400	Identifier	parse_flags		6324213	0					
ANR	6324401	Identifier	PARSE_FLAG_TOK_NUM		6324213	1					
ANR	6324402	CompoundStatement		53:41:1286:1286	6324213	1					
ANR	6324403	ExpressionStatement	parse_number ( ( char * ) tokc . cstr -> data )	3208:2:67452:67491	6324213	0	True				
ANR	6324404	CallExpression	parse_number ( ( char * ) tokc . cstr -> data )		6324213	0					
ANR	6324405	Callee	parse_number		6324213	0					
ANR	6324406	Identifier	parse_number		6324213	0					
ANR	6324407	ArgumentList	( char * ) tokc . cstr -> data		6324213	1					
ANR	6324408	Argument	( char * ) tokc . cstr -> data		6324213	0					
ANR	6324409	CastExpression	( char * ) tokc . cstr -> data		6324213	0					
ANR	6324410	CastTarget	char *		6324213	0					
ANR	6324411	PtrMemberAccess	tokc . cstr -> data		6324213	1					
ANR	6324412	MemberAccess	tokc . cstr		6324213	0					
ANR	6324413	Identifier	tokc		6324213	0					
ANR	6324414	Identifier	cstr		6324213	1					
ANR	6324415	Identifier	data		6324213	1					
ANR	6324416	ReturnType	ST_FUNC void		6324213	1					
ANR	6324417	Identifier	next		6324213	2					
ANR	6324418	ParameterList			6324213	3					
ANR	6324419	CFGEntryNode	ENTRY		6324213		True				
ANR	6324420	CFGExitNode	EXIT		6324213		True				
ANR	6324421	Symbol	macro_subst_tok		6324213						
ANR	6324422	Symbol	unget_saved_macro_ptr		6324213						
ANR	6324423	Symbol	* tokc . cstr		6324213						
ANR	6324424	Symbol	& ml		6324213						
ANR	6324425	Symbol	nested_list		6324213						
ANR	6324426	Symbol	unget_buffer_enabled		6324213						
ANR	6324427	Symbol	& str		6324213						
ANR	6324428	Symbol	str . str		6324213						
ANR	6324429	Symbol	tok		6324213						
ANR	6324430	Symbol	tokc . cstr		6324213						
ANR	6324431	Symbol	TOK_PPNUM		6324213						
ANR	6324432	Symbol	define_find		6324213						
ANR	6324433	Symbol	ml		6324213						
ANR	6324434	Symbol	NULL		6324213						
ANR	6324435	Symbol	TOK_IDENT		6324213						
ANR	6324436	Symbol	tokc		6324213						
ANR	6324437	Symbol	PARSE_FLAG_PREPROCESS		6324213						
ANR	6324438	Symbol	* tokc		6324213						
ANR	6324439	Symbol	macro_ptr_allocated		6324213						
ANR	6324440	Symbol	TOK_NOSUBST		6324213						
ANR	6324441	Symbol	str		6324213						
ANR	6324442	Symbol	s		6324213						
ANR	6324443	Symbol	macro_ptr		6324213						
ANR	6324444	Symbol	tokc . cstr -> data		6324213						
ANR	6324445	Symbol	PARSE_FLAG_SPACES		6324213						
ANR	6324446	Symbol	PARSE_FLAG_TOK_NUM		6324213						
ANR	6324447	Symbol	parse_flags		6324213						
ANR	6324448	Symbol	& nested_list		6324213						
ANR	6324449	Function	unget_tok	3214:0:67610:68047							
ANR	6324450	FunctionDef	unget_tok (int last_tok)		6324449	0					
ANR	6324451	CompoundStatement		3215:0:67647:68047	6324449	0					
ANR	6324452	IdentifierDeclStatement	"int i , n ;"	3216:1:67650:67658	6324449	0	True				
ANR	6324453	IdentifierDecl	i		6324449	0					
ANR	6324454	IdentifierDeclType	int		6324449	0					
ANR	6324455	Identifier	i		6324449	1					
ANR	6324456	IdentifierDecl	n		6324449	1					
ANR	6324457	IdentifierDeclType	int		6324449	0					
ANR	6324458	Identifier	n		6324449	1					
ANR	6324459	IdentifierDeclStatement	int * q ;	3217:1:67661:67667	6324449	1	True				
ANR	6324460	IdentifierDecl	* q		6324449	0					
ANR	6324461	IdentifierDeclType	int *		6324449	0					
ANR	6324462	Identifier	q		6324449	1					
ANR	6324463	IfStatement	if ( unget_buffer_enabled )		6324449	2					
ANR	6324464	Condition	unget_buffer_enabled	3218:5:67674:67693	6324449	0	True				
ANR	6324465	Identifier	unget_buffer_enabled		6324449	0					
ANR	6324466	CompoundStatement		4:27:48:48	6324449	1					
ANR	6324467	ElseStatement	else		6324449	0					
ANR	6324468	CompoundStatement		7:8:142:142	6324449	0					
ANR	6324469	ExpressionStatement	unget_saved_macro_ptr = macro_ptr	3222:2:67794:67827	6324449	0	True				
ANR	6324470	AssignmentExpression	unget_saved_macro_ptr = macro_ptr		6324449	0		=			
ANR	6324471	Identifier	unget_saved_macro_ptr		6324449	0					
ANR	6324472	Identifier	macro_ptr		6324449	1					
ANR	6324473	ExpressionStatement	unget_buffer_enabled = 1	3223:2:67831:67855	6324449	1	True				
ANR	6324474	AssignmentExpression	unget_buffer_enabled = 1		6324449	0		=			
ANR	6324475	Identifier	unget_buffer_enabled		6324449	0					
ANR	6324476	PrimaryExpression	1		6324449	1					
ANR	6324477	ExpressionStatement	q = unget_saved_buffer	3225:1:67861:67883	6324449	3	True				
ANR	6324478	AssignmentExpression	q = unget_saved_buffer		6324449	0		=			
ANR	6324479	Identifier	q		6324449	0					
ANR	6324480	Identifier	unget_saved_buffer		6324449	1					
ANR	6324481	ExpressionStatement	macro_ptr = q	3226:1:67886:67899	6324449	4	True				
ANR	6324482	AssignmentExpression	macro_ptr = q		6324449	0		=			
ANR	6324483	Identifier	macro_ptr		6324449	0					
ANR	6324484	Identifier	q		6324449	1					
ANR	6324485	ExpressionStatement	* q ++ = tok	3227:1:67902:67912	6324449	5	True				
ANR	6324486	AssignmentExpression	* q ++ = tok		6324449	0		=			
ANR	6324487	UnaryOperationExpression	* q ++		6324449	0					
ANR	6324488	UnaryOperator	*		6324449	0					
ANR	6324489	PostIncDecOperationExpression	q ++		6324449	1					
ANR	6324490	Identifier	q		6324449	0					
ANR	6324491	IncDec	++		6324449	1					
ANR	6324492	Identifier	tok		6324449	1					
ANR	6324493	ExpressionStatement	n = tok_ext_size ( tok ) - 1	3228:1:67915:67941	6324449	6	True				
ANR	6324494	AssignmentExpression	n = tok_ext_size ( tok ) - 1		6324449	0		=			
ANR	6324495	Identifier	n		6324449	0					
ANR	6324496	AdditiveExpression	tok_ext_size ( tok ) - 1		6324449	1		-			
ANR	6324497	CallExpression	tok_ext_size ( tok )		6324449	0					
ANR	6324498	Callee	tok_ext_size		6324449	0					
ANR	6324499	Identifier	tok_ext_size		6324449	0					
ANR	6324500	ArgumentList	tok		6324449	1					
ANR	6324501	Argument	tok		6324449	0					
ANR	6324502	Identifier	tok		6324449	0					
ANR	6324503	PrimaryExpression	1		6324449	1					
ANR	6324504	ForStatement	for ( i = 0 ; i < n ; i ++ )		6324449	7					
ANR	6324505	ForInit	i = 0 ;	3229:6:67949:67954	6324449	0	True				
ANR	6324506	AssignmentExpression	i = 0		6324449	0		=			
ANR	6324507	Identifier	i		6324449	0					
ANR	6324508	PrimaryExpression	0		6324449	1					
ANR	6324509	Condition	i < n	3229:13:67956:67960	6324449	1	True				
ANR	6324510	RelationalExpression	i < n		6324449	0		<			
ANR	6324511	Identifier	i		6324449	0					
ANR	6324512	Identifier	n		6324449	1					
ANR	6324513	PostIncDecOperationExpression	i ++	3229:20:67963:67965	6324449	2	True				
ANR	6324514	Identifier	i		6324449	0					
ANR	6324515	IncDec	++		6324449	1					
ANR	6324516	CompoundStatement		15:25:320:320	6324449	3					
ANR	6324517	ExpressionStatement	* q ++ = tokc . tab [ i ]	3230:2:67972:67990	6324449	0	True				
ANR	6324518	AssignmentExpression	* q ++ = tokc . tab [ i ]		6324449	0		=			
ANR	6324519	UnaryOperationExpression	* q ++		6324449	0					
ANR	6324520	UnaryOperator	*		6324449	0					
ANR	6324521	PostIncDecOperationExpression	q ++		6324449	1					
ANR	6324522	Identifier	q		6324449	0					
ANR	6324523	IncDec	++		6324449	1					
ANR	6324524	ArrayIndexing	tokc . tab [ i ]		6324449	1					
ANR	6324525	MemberAccess	tokc . tab		6324449	0					
ANR	6324526	Identifier	tokc		6324449	0					
ANR	6324527	Identifier	tab		6324449	1					
ANR	6324528	Identifier	i		6324449	1					
ANR	6324529	ExpressionStatement	* q = 0	3232:1:67996:68002	6324449	8	True				
ANR	6324530	AssignmentExpression	* q = 0		6324449	0		=			
ANR	6324531	UnaryOperationExpression	* q		6324449	0					
ANR	6324532	UnaryOperator	*		6324449	0					
ANR	6324533	Identifier	q		6324449	1					
ANR	6324534	PrimaryExpression	0		6324449	1					
ANR	6324535	ExpressionStatement	tok = last_tok	3233:1:68031:68045	6324449	9	True				
ANR	6324536	AssignmentExpression	tok = last_tok		6324449	0		=			
ANR	6324537	Identifier	tok		6324449	0					
ANR	6324538	Identifier	last_tok		6324449	1					
ANR	6324539	ReturnType	ST_INLN void		6324449	1					
ANR	6324540	Identifier	unget_tok		6324449	2					
ANR	6324541	ParameterList	int last_tok		6324449	3					
ANR	6324542	Parameter	int last_tok	3214:23:67633:67644	6324449	0	True				
ANR	6324543	ParameterType	int		6324449	0					
ANR	6324544	Identifier	last_tok		6324449	1					
ANR	6324545	CFGEntryNode	ENTRY		6324449		True				
ANR	6324546	CFGExitNode	EXIT		6324449		True				
ANR	6324547	Symbol	unget_saved_macro_ptr		6324449						
ANR	6324548	Symbol	unget_saved_buffer		6324449						
ANR	6324549	Symbol	tokc		6324449						
ANR	6324550	Symbol	* tokc . tab		6324449						
ANR	6324551	Symbol	* q ++		6324449						
ANR	6324552	Symbol	i		6324449						
ANR	6324553	Symbol	tok_ext_size		6324449						
ANR	6324554	Symbol	* tokc		6324449						
ANR	6324555	Symbol	n		6324449						
ANR	6324556	Symbol	last_tok		6324449						
ANR	6324557	Symbol	unget_buffer_enabled		6324449						
ANR	6324558	Symbol	q		6324449						
ANR	6324559	Symbol	tok		6324449						
ANR	6324560	Symbol	* i		6324449						
ANR	6324561	Symbol	macro_ptr		6324449						
ANR	6324562	Symbol	tokc . tab		6324449						
ANR	6324563	Symbol	* q		6324449						
ANR	6324564	Function	preprocess_init	3239:0:68137:68482							
ANR	6324565	FunctionDef	preprocess_init (TCCState * s1)		6324564	0					
ANR	6324566	CompoundStatement		3240:0:68180:68482	6324564	0					
ANR	6324567	ExpressionStatement	s1 -> include_stack_ptr = s1 -> include_stack	3241:1:68183:68224	6324564	0	True				
ANR	6324568	AssignmentExpression	s1 -> include_stack_ptr = s1 -> include_stack		6324564	0		=			
ANR	6324569	PtrMemberAccess	s1 -> include_stack_ptr		6324564	0					
ANR	6324570	Identifier	s1		6324564	0					
ANR	6324571	Identifier	include_stack_ptr		6324564	1					
ANR	6324572	PtrMemberAccess	s1 -> include_stack		6324564	1					
ANR	6324573	Identifier	s1		6324564	0					
ANR	6324574	Identifier	include_stack		6324564	1					
ANR	6324575	ExpressionStatement	s1 -> ifdef_stack_ptr = s1 -> ifdef_stack	3244:1:68314:68351	6324564	1	True				
ANR	6324576	AssignmentExpression	s1 -> ifdef_stack_ptr = s1 -> ifdef_stack		6324564	0		=			
ANR	6324577	PtrMemberAccess	s1 -> ifdef_stack_ptr		6324564	0					
ANR	6324578	Identifier	s1		6324564	0					
ANR	6324579	Identifier	ifdef_stack_ptr		6324564	1					
ANR	6324580	PtrMemberAccess	s1 -> ifdef_stack		6324564	1					
ANR	6324581	Identifier	s1		6324564	0					
ANR	6324582	Identifier	ifdef_stack		6324564	1					
ANR	6324583	ExpressionStatement	file -> ifdef_stack_ptr = s1 -> ifdef_stack_ptr	3245:1:68354:68397	6324564	2	True				
ANR	6324584	AssignmentExpression	file -> ifdef_stack_ptr = s1 -> ifdef_stack_ptr		6324564	0		=			
ANR	6324585	PtrMemberAccess	file -> ifdef_stack_ptr		6324564	0					
ANR	6324586	Identifier	file		6324564	0					
ANR	6324587	Identifier	ifdef_stack_ptr		6324564	1					
ANR	6324588	PtrMemberAccess	s1 -> ifdef_stack_ptr		6324564	1					
ANR	6324589	Identifier	s1		6324564	0					
ANR	6324590	Identifier	ifdef_stack_ptr		6324564	1					
ANR	6324591	ExpressionStatement	vtop = vstack - 1	3247:1:68401:68418	6324564	3	True				
ANR	6324592	AssignmentExpression	vtop = vstack - 1		6324564	0		=			
ANR	6324593	Identifier	vtop		6324564	0					
ANR	6324594	AdditiveExpression	vstack - 1		6324564	1		-			
ANR	6324595	Identifier	vstack		6324564	0					
ANR	6324596	PrimaryExpression	1		6324564	1					
ANR	6324597	ExpressionStatement	s1 -> pack_stack [ 0 ] = 0	3248:1:68421:68442	6324564	4	True				
ANR	6324598	AssignmentExpression	s1 -> pack_stack [ 0 ] = 0		6324564	0		=			
ANR	6324599	ArrayIndexing	s1 -> pack_stack [ 0 ]		6324564	0					
ANR	6324600	PtrMemberAccess	s1 -> pack_stack		6324564	0					
ANR	6324601	Identifier	s1		6324564	0					
ANR	6324602	Identifier	pack_stack		6324564	1					
ANR	6324603	PrimaryExpression	0		6324564	1					
ANR	6324604	PrimaryExpression	0		6324564	1					
ANR	6324605	ExpressionStatement	s1 -> pack_stack_ptr = s1 -> pack_stack	3249:1:68445:68480	6324564	5	True				
ANR	6324606	AssignmentExpression	s1 -> pack_stack_ptr = s1 -> pack_stack		6324564	0		=			
ANR	6324607	PtrMemberAccess	s1 -> pack_stack_ptr		6324564	0					
ANR	6324608	Identifier	s1		6324564	0					
ANR	6324609	Identifier	pack_stack_ptr		6324564	1					
ANR	6324610	PtrMemberAccess	s1 -> pack_stack		6324564	1					
ANR	6324611	Identifier	s1		6324564	0					
ANR	6324612	Identifier	pack_stack		6324564	1					
ANR	6324613	ReturnType	ST_FUNC void		6324564	1					
ANR	6324614	Identifier	preprocess_init		6324564	2					
ANR	6324615	ParameterList	TCCState * s1		6324564	3					
ANR	6324616	Parameter	TCCState * s1	3239:29:68166:68177	6324564	0	True				
ANR	6324617	ParameterType	TCCState *		6324564	0					
ANR	6324618	Identifier	s1		6324564	1					
ANR	6324619	CFGEntryNode	ENTRY		6324564		True				
ANR	6324620	CFGExitNode	EXIT		6324564		True				
ANR	6324621	Symbol	file -> ifdef_stack_ptr		6324564						
ANR	6324622	Symbol	s1 -> pack_stack		6324564						
ANR	6324623	Symbol	* s1		6324564						
ANR	6324624	Symbol	s1 -> include_stack_ptr		6324564						
ANR	6324625	Symbol	vtop		6324564						
ANR	6324626	Symbol	* * s1		6324564						
ANR	6324627	Symbol	* file		6324564						
ANR	6324628	Symbol	s1 -> include_stack		6324564						
ANR	6324629	Symbol	* s1 -> pack_stack		6324564						
ANR	6324630	Symbol	file		6324564						
ANR	6324631	Symbol	vstack		6324564						
ANR	6324632	Symbol	s1 -> ifdef_stack_ptr		6324564						
ANR	6324633	Symbol	s1 -> pack_stack_ptr		6324564						
ANR	6324634	Symbol	s1 -> ifdef_stack		6324564						
ANR	6324635	Symbol	s1		6324564						
ANR	6324636	Function	preprocess_new	3252:0:68485:68944							
ANR	6324637	FunctionDef	preprocess_new ()		6324636	0					
ANR	6324638	CompoundStatement		3253:0:68519:68944	6324636	0					
ANR	6324639	IdentifierDeclStatement	"int i , c ;"	3254:1:68522:68530	6324636	0	True				
ANR	6324640	IdentifierDecl	i		6324636	0					
ANR	6324641	IdentifierDeclType	int		6324636	0					
ANR	6324642	Identifier	i		6324636	1					
ANR	6324643	IdentifierDecl	c		6324636	1					
ANR	6324644	IdentifierDeclType	int		6324636	0					
ANR	6324645	Identifier	c		6324636	1					
ANR	6324646	IdentifierDeclStatement	"const char * p , * r ;"	3255:1:68533:68550	6324636	1	True				
ANR	6324647	IdentifierDecl	* p		6324636	0					
ANR	6324648	IdentifierDeclType	const char *		6324636	0					
ANR	6324649	Identifier	p		6324636	1					
ANR	6324650	IdentifierDecl	* r		6324636	1					
ANR	6324651	IdentifierDeclType	const char *		6324636	0					
ANR	6324652	Identifier	r		6324636	1					
ANR	6324653	ForStatement	for ( i = CH_EOF ; i < 256 ; i ++ )		6324636	2					
ANR	6324654	ForInit	i = CH_EOF ;	3258:6:68582:68592	6324636	0	True				
ANR	6324655	AssignmentExpression	i = CH_EOF		6324636	0		=			
ANR	6324656	Identifier	i		6324636	0					
ANR	6324657	Identifier	CH_EOF		6324636	1					
ANR	6324658	Condition	i < 256	3258:18:68594:68600	6324636	1	True				
ANR	6324659	RelationalExpression	i < 256		6324636	0		<			
ANR	6324660	Identifier	i		6324636	0					
ANR	6324661	PrimaryExpression	256		6324636	1					
ANR	6324662	PostIncDecOperationExpression	i ++	3258:27:68603:68605	6324636	2	True				
ANR	6324663	Identifier	i		6324636	0					
ANR	6324664	IncDec	++		6324636	1					
ANR	6324665	CompoundStatement		6:32:88:88	6324636	3					
ANR	6324666	ExpressionStatement	isidnum_table [ i - CH_EOF ] = isid ( i ) || isnum ( i )	3259:2:68612:68661	6324636	0	True				
ANR	6324667	AssignmentExpression	isidnum_table [ i - CH_EOF ] = isid ( i ) || isnum ( i )		6324636	0		=			
ANR	6324668	ArrayIndexing	isidnum_table [ i - CH_EOF ]		6324636	0					
ANR	6324669	Identifier	isidnum_table		6324636	0					
ANR	6324670	AdditiveExpression	i - CH_EOF		6324636	1		-			
ANR	6324671	Identifier	i		6324636	0					
ANR	6324672	Identifier	CH_EOF		6324636	1					
ANR	6324673	OrExpression	isid ( i ) || isnum ( i )		6324636	1		||			
ANR	6324674	CallExpression	isid ( i )		6324636	0					
ANR	6324675	Callee	isid		6324636	0					
ANR	6324676	Identifier	isid		6324636	0					
ANR	6324677	ArgumentList	i		6324636	1					
ANR	6324678	Argument	i		6324636	0					
ANR	6324679	Identifier	i		6324636	0					
ANR	6324680	CallExpression	isnum ( i )		6324636	1					
ANR	6324681	Callee	isnum		6324636	0					
ANR	6324682	Identifier	isnum		6324636	0					
ANR	6324683	ArgumentList	i		6324636	1					
ANR	6324684	Argument	i		6324636	0					
ANR	6324685	Identifier	i		6324636	0					
ANR	6324686	ExpressionStatement	table_ident = NULL	3263:1:68690:68708	6324636	3	True				
ANR	6324687	AssignmentExpression	table_ident = NULL		6324636	0		=			
ANR	6324688	Identifier	table_ident		6324636	0					
ANR	6324689	Identifier	NULL		6324636	1					
ANR	6324690	ExpressionStatement	"memset ( hash_ident , 0 , TOK_HASH_SIZE * sizeof ( TokenSym * ) )"	3264:1:68711:68769	6324636	4	True				
ANR	6324691	CallExpression	"memset ( hash_ident , 0 , TOK_HASH_SIZE * sizeof ( TokenSym * ) )"		6324636	0					
ANR	6324692	Callee	memset		6324636	0					
ANR	6324693	Identifier	memset		6324636	0					
ANR	6324694	ArgumentList	hash_ident		6324636	1					
ANR	6324695	Argument	hash_ident		6324636	0					
ANR	6324696	Identifier	hash_ident		6324636	0					
ANR	6324697	Argument	0		6324636	1					
ANR	6324698	PrimaryExpression	0		6324636	0					
ANR	6324699	Argument	TOK_HASH_SIZE * sizeof ( TokenSym * )		6324636	2					
ANR	6324700	MultiplicativeExpression	TOK_HASH_SIZE * sizeof ( TokenSym * )		6324636	0		*			
ANR	6324701	Identifier	TOK_HASH_SIZE		6324636	0					
ANR	6324702	SizeofExpression	sizeof ( TokenSym * )		6324636	1					
ANR	6324703	Sizeof	sizeof		6324636	0					
ANR	6324704	SizeofOperand	TokenSym *		6324636	1					
ANR	6324705	ExpressionStatement	tok_ident = TOK_IDENT	3266:1:68773:68794	6324636	5	True				
ANR	6324706	AssignmentExpression	tok_ident = TOK_IDENT		6324636	0		=			
ANR	6324707	Identifier	tok_ident		6324636	0					
ANR	6324708	Identifier	TOK_IDENT		6324636	1					
ANR	6324709	ExpressionStatement	p = tcc_keywords	3267:1:68797:68813	6324636	6	True				
ANR	6324710	AssignmentExpression	p = tcc_keywords		6324636	0		=			
ANR	6324711	Identifier	p		6324636	0					
ANR	6324712	Identifier	tcc_keywords		6324636	1					
ANR	6324713	WhileStatement	while ( * p )		6324636	7					
ANR	6324714	Condition	* p	3268:8:68823:68824	6324636	0	True				
ANR	6324715	UnaryOperationExpression	* p		6324636	0					
ANR	6324716	UnaryOperator	*		6324636	0					
ANR	6324717	Identifier	p		6324636	1					
ANR	6324718	CompoundStatement		16:12:307:307	6324636	1					
ANR	6324719	ExpressionStatement	r = p	3269:2:68831:68836	6324636	0	True				
ANR	6324720	AssignmentExpression	r = p		6324636	0		=			
ANR	6324721	Identifier	r		6324636	0					
ANR	6324722	Identifier	p		6324636	1					
ANR	6324723	ForStatement	for ( ; ; )		6324636	1					
ANR	6324724	CompoundStatement		18:11:329:329	6324636	0					
ANR	6324725	ExpressionStatement	c = * r ++	3271:3:68854:68862	6324636	0	True				
ANR	6324726	AssignmentExpression	c = * r ++		6324636	0		=			
ANR	6324727	Identifier	c		6324636	0					
ANR	6324728	UnaryOperationExpression	* r ++		6324636	1					
ANR	6324729	UnaryOperator	*		6324636	0					
ANR	6324730	PostIncDecOperationExpression	r ++		6324636	1					
ANR	6324731	Identifier	r		6324636	0					
ANR	6324732	IncDec	++		6324636	1					
ANR	6324733	IfStatement	if ( c == '\\0' )		6324636	1					
ANR	6324734	Condition	c == '\\0'	3272:7:68871:68879	6324636	0	True				
ANR	6324735	EqualityExpression	c == '\\0'		6324636	0		==			
ANR	6324736	Identifier	c		6324636	0					
ANR	6324737	PrimaryExpression	'\\0'		6324636	1					
ANR	6324738	CompoundStatement		20:18:362:362	6324636	1					
ANR	6324739	BreakStatement	break ;	3273:4:68888:68893	6324636	0	True				
ANR	6324740	ExpressionStatement	"tok_alloc ( p , r - p - 1 )"	3276:2:68906:68930	6324636	2	True				
ANR	6324741	CallExpression	"tok_alloc ( p , r - p - 1 )"		6324636	0					
ANR	6324742	Callee	tok_alloc		6324636	0					
ANR	6324743	Identifier	tok_alloc		6324636	0					
ANR	6324744	ArgumentList	p		6324636	1					
ANR	6324745	Argument	p		6324636	0					
ANR	6324746	Identifier	p		6324636	0					
ANR	6324747	Argument	r - p - 1		6324636	1					
ANR	6324748	AdditiveExpression	r - p - 1		6324636	0		-			
ANR	6324749	Identifier	r		6324636	0					
ANR	6324750	AdditiveExpression	p - 1		6324636	1		-			
ANR	6324751	Identifier	p		6324636	0					
ANR	6324752	PrimaryExpression	1		6324636	1					
ANR	6324753	ExpressionStatement	p = r	3277:2:68934:68939	6324636	3	True				
ANR	6324754	AssignmentExpression	p = r		6324636	0		=			
ANR	6324755	Identifier	p		6324636	0					
ANR	6324756	Identifier	r		6324636	1					
ANR	6324757	ReturnType	ST_FUNC void		6324636	1					
ANR	6324758	Identifier	preprocess_new		6324636	2					
ANR	6324759	ParameterList			6324636	3					
ANR	6324760	CFGEntryNode	ENTRY		6324636		True				
ANR	6324761	CFGExitNode	EXIT		6324636		True				
ANR	6324762	InfiniteForNode	true		6324636		True				
ANR	6324763	Symbol	isnum		6324636						
ANR	6324764	Symbol	c		6324636						
ANR	6324765	Symbol	NULL		6324636						
ANR	6324766	Symbol	TOK_HASH_SIZE		6324636						
ANR	6324767	Symbol	TOK_IDENT		6324636						
ANR	6324768	Symbol	* r ++		6324636						
ANR	6324769	Symbol	* CH_EOF		6324636						
ANR	6324770	Symbol	i		6324636						
ANR	6324771	Symbol	p		6324636						
ANR	6324772	Symbol	table_ident		6324636						
ANR	6324773	Symbol	r		6324636						
ANR	6324774	Symbol	* i		6324636						
ANR	6324775	Symbol	tok_ident		6324636						
ANR	6324776	Symbol	isid		6324636						
ANR	6324777	Symbol	CH_EOF		6324636						
ANR	6324778	Symbol	hash_ident		6324636						
ANR	6324779	Symbol	* p		6324636						
ANR	6324780	Symbol	* isidnum_table		6324636						
ANR	6324781	Symbol	isidnum_table		6324636						
ANR	6324782	Symbol	tcc_keywords		6324636						
ANR	6324783	Function	tcc_preprocess	3282:0:68981:70352							
ANR	6324784	FunctionDef	tcc_preprocess (TCCState * s1)		6324783	0					
ANR	6324785	CompoundStatement		3283:0:69022:70352	6324783	0					
ANR	6324786	IdentifierDeclStatement	Sym * define_start ;	3284:1:69025:69042	6324783	0	True				
ANR	6324787	IdentifierDecl	* define_start		6324783	0					
ANR	6324788	IdentifierDeclType	Sym *		6324783	0					
ANR	6324789	Identifier	define_start		6324783	1					
ANR	6324790	IdentifierDeclStatement	"BufferedFile * file_ref , * * iptr , * * iptr_new ;"	3286:1:69046:69088	6324783	1	True				
ANR	6324791	IdentifierDecl	* file_ref		6324783	0					
ANR	6324792	IdentifierDeclType	BufferedFile *		6324783	0					
ANR	6324793	Identifier	file_ref		6324783	1					
ANR	6324794	IdentifierDecl	* * iptr		6324783	1					
ANR	6324795	IdentifierDeclType	BufferedFile * *		6324783	0					
ANR	6324796	Identifier	iptr		6324783	1					
ANR	6324797	IdentifierDecl	* * iptr_new		6324783	2					
ANR	6324798	IdentifierDeclType	BufferedFile * *		6324783	0					
ANR	6324799	Identifier	iptr_new		6324783	1					
ANR	6324800	IdentifierDeclStatement	"int token_seen , line_ref , d ;"	3287:1:69091:69118	6324783	2	True				
ANR	6324801	IdentifierDecl	token_seen		6324783	0					
ANR	6324802	IdentifierDeclType	int		6324783	0					
ANR	6324803	Identifier	token_seen		6324783	1					
ANR	6324804	IdentifierDecl	line_ref		6324783	1					
ANR	6324805	IdentifierDeclType	int		6324783	0					
ANR	6324806	Identifier	line_ref		6324783	1					
ANR	6324807	IdentifierDecl	d		6324783	2					
ANR	6324808	IdentifierDeclType	int		6324783	0					
ANR	6324809	Identifier	d		6324783	1					
ANR	6324810	IdentifierDeclStatement	const char * s ;	3288:1:69121:69134	6324783	3	True				
ANR	6324811	IdentifierDecl	* s		6324783	0					
ANR	6324812	IdentifierDeclType	const char *		6324783	0					
ANR	6324813	Identifier	s		6324783	1					
ANR	6324814	ExpressionStatement	preprocess_init ( s1 )	3290:1:69138:69158	6324783	4	True				
ANR	6324815	CallExpression	preprocess_init ( s1 )		6324783	0					
ANR	6324816	Callee	preprocess_init		6324783	0					
ANR	6324817	Identifier	preprocess_init		6324783	0					
ANR	6324818	ArgumentList	s1		6324783	1					
ANR	6324819	Argument	s1		6324783	0					
ANR	6324820	Identifier	s1		6324783	0					
ANR	6324821	ExpressionStatement	define_start = define_stack	3291:1:69161:69188	6324783	5	True				
ANR	6324822	AssignmentExpression	define_start = define_stack		6324783	0		=			
ANR	6324823	Identifier	define_start		6324783	0					
ANR	6324824	Identifier	define_stack		6324783	1					
ANR	6324825	ExpressionStatement	ch = file -> buf_ptr [ 0 ]	3292:1:69191:69212	6324783	6	True				
ANR	6324826	AssignmentExpression	ch = file -> buf_ptr [ 0 ]		6324783	0		=			
ANR	6324827	Identifier	ch		6324783	0					
ANR	6324828	ArrayIndexing	file -> buf_ptr [ 0 ]		6324783	1					
ANR	6324829	PtrMemberAccess	file -> buf_ptr		6324783	0					
ANR	6324830	Identifier	file		6324783	0					
ANR	6324831	Identifier	buf_ptr		6324783	1					
ANR	6324832	PrimaryExpression	0		6324783	1					
ANR	6324833	ExpressionStatement	tok_flags = TOK_FLAG_BOL | TOK_FLAG_BOF	3293:1:69215:69254	6324783	7	True				
ANR	6324834	AssignmentExpression	tok_flags = TOK_FLAG_BOL | TOK_FLAG_BOF		6324783	0		=			
ANR	6324835	Identifier	tok_flags		6324783	0					
ANR	6324836	InclusiveOrExpression	TOK_FLAG_BOL | TOK_FLAG_BOF		6324783	1		|			
ANR	6324837	Identifier	TOK_FLAG_BOL		6324783	0					
ANR	6324838	Identifier	TOK_FLAG_BOF		6324783	1					
ANR	6324839	ExpressionStatement	parse_flags = PARSE_FLAG_ASM_COMMENTS | PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES	3294:1:69257:69368	6324783	8	True				
ANR	6324840	AssignmentExpression	parse_flags = PARSE_FLAG_ASM_COMMENTS | PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6324783	0		=			
ANR	6324841	Identifier	parse_flags		6324783	0					
ANR	6324842	InclusiveOrExpression	PARSE_FLAG_ASM_COMMENTS | PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6324783	1		|			
ANR	6324843	Identifier	PARSE_FLAG_ASM_COMMENTS		6324783	0					
ANR	6324844	InclusiveOrExpression	PARSE_FLAG_PREPROCESS | PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6324783	1		|			
ANR	6324845	Identifier	PARSE_FLAG_PREPROCESS		6324783	0					
ANR	6324846	InclusiveOrExpression	PARSE_FLAG_LINEFEED | PARSE_FLAG_SPACES		6324783	1		|			
ANR	6324847	Identifier	PARSE_FLAG_LINEFEED		6324783	0					
ANR	6324848	Identifier	PARSE_FLAG_SPACES		6324783	1					
ANR	6324849	ExpressionStatement	token_seen = 0	3296:1:69371:69385	6324783	9	True				
ANR	6324850	AssignmentExpression	token_seen = 0		6324783	0		=			
ANR	6324851	Identifier	token_seen		6324783	0					
ANR	6324852	PrimaryExpression	0		6324783	1					
ANR	6324853	ExpressionStatement	line_ref = 0	3297:1:69388:69400	6324783	10	True				
ANR	6324854	AssignmentExpression	line_ref = 0		6324783	0		=			
ANR	6324855	Identifier	line_ref		6324783	0					
ANR	6324856	PrimaryExpression	0		6324783	1					
ANR	6324857	ExpressionStatement	file_ref = NULL	3298:1:69403:69418	6324783	11	True				
ANR	6324858	AssignmentExpression	file_ref = NULL		6324783	0		=			
ANR	6324859	Identifier	file_ref		6324783	0					
ANR	6324860	Identifier	NULL		6324783	1					
ANR	6324861	ExpressionStatement	iptr = s1 -> include_stack_ptr	3299:1:69421:69449	6324783	12	True				
ANR	6324862	AssignmentExpression	iptr = s1 -> include_stack_ptr		6324783	0		=			
ANR	6324863	Identifier	iptr		6324783	0					
ANR	6324864	PtrMemberAccess	s1 -> include_stack_ptr		6324783	1					
ANR	6324865	Identifier	s1		6324783	0					
ANR	6324866	Identifier	include_stack_ptr		6324783	1					
ANR	6324867	WhileStatement	while ( tcc_nerr ( ) == 0 )		6324783	13					
ANR	6324868	Condition	tcc_nerr ( ) == 0	3301:8:69460:69475	6324783	0	True				
ANR	6324869	EqualityExpression	tcc_nerr ( ) == 0		6324783	0		==			
ANR	6324870	CallExpression	tcc_nerr ( )		6324783	0					
ANR	6324871	Callee	tcc_nerr		6324783	0					
ANR	6324872	Identifier	tcc_nerr		6324783	0					
ANR	6324873	ArgumentList			6324783	1					
ANR	6324874	PrimaryExpression	0		6324783	1					
ANR	6324875	CompoundStatement		19:26:455:455	6324783	1					
ANR	6324876	ExpressionStatement	next ( )	3302:2:69482:69489	6324783	0	True				
ANR	6324877	CallExpression	next ( )		6324783	0					
ANR	6324878	Callee	next		6324783	0					
ANR	6324879	Identifier	next		6324783	0					
ANR	6324880	ArgumentList			6324783	1					
ANR	6324881	IfStatement	if ( tok == TOK_EOF )		6324783	1					
ANR	6324882	Condition	tok == TOK_EOF	3303:6:69497:69510	6324783	0	True				
ANR	6324883	EqualityExpression	tok == TOK_EOF		6324783	0		==			
ANR	6324884	Identifier	tok		6324783	0					
ANR	6324885	Identifier	TOK_EOF		6324783	1					
ANR	6324886	CompoundStatement		21:22:490:490	6324783	1					
ANR	6324887	BreakStatement	break ;	3304:3:69518:69523	6324783	0	True				
ANR	6324888	ElseStatement	else		6324783	0					
ANR	6324889	IfStatement	if ( file != file_ref )		6324783	0					
ANR	6324890	Condition	file != file_ref	3305:13:69538:69553	6324783	0	True				
ANR	6324891	EqualityExpression	file != file_ref		6324783	0		!=			
ANR	6324892	Identifier	file		6324783	0					
ANR	6324893	Identifier	file_ref		6324783	1					
ANR	6324894	CompoundStatement		23:31:533:533	6324783	1					
ANR	6324895	GotoStatement	goto print_line ;	3306:3:69561:69576	6324783	0	True				
ANR	6324896	Identifier	print_line		6324783	0					
ANR	6324897	ElseStatement	else		6324783	0					
ANR	6324898	IfStatement	if ( tok == TOK_LINEFEED )		6324783	0					
ANR	6324899	Condition	tok == TOK_LINEFEED	3307:13:69591:69609	6324783	0	True				
ANR	6324900	EqualityExpression	tok == TOK_LINEFEED		6324783	0		==			
ANR	6324901	Identifier	tok		6324783	0					
ANR	6324902	Identifier	TOK_LINEFEED		6324783	1					
ANR	6324903	CompoundStatement		25:34:589:589	6324783	1					
ANR	6324904	IfStatement	if ( ! token_seen )		6324783	0					
ANR	6324905	Condition	! token_seen	3308:7:69621:69631	6324783	0	True				
ANR	6324906	UnaryOperationExpression	! token_seen		6324783	0					
ANR	6324907	UnaryOperator	!		6324783	0					
ANR	6324908	Identifier	token_seen		6324783	1					
ANR	6324909	CompoundStatement		26:20:611:611	6324783	1					
ANR	6324910	ContinueStatement	continue ;	3309:4:69640:69648	6324783	0	True				
ANR	6324911	ExpressionStatement	++ line_ref	3311:3:69658:69668	6324783	1	True				
ANR	6324912	UnaryExpression	++ line_ref		6324783	0					
ANR	6324913	IncDec	++		6324783	0					
ANR	6324914	Identifier	line_ref		6324783	1					
ANR	6324915	ExpressionStatement	token_seen = 0	3312:3:69673:69687	6324783	2	True				
ANR	6324916	AssignmentExpression	token_seen = 0		6324783	0		=			
ANR	6324917	Identifier	token_seen		6324783	0					
ANR	6324918	PrimaryExpression	0		6324783	1					
ANR	6324919	ElseStatement	else		6324783	0					
ANR	6324920	IfStatement	if ( ! token_seen )		6324783	0					
ANR	6324921	Condition	! token_seen	3313:13:69702:69712	6324783	0	True				
ANR	6324922	UnaryOperationExpression	! token_seen		6324783	0					
ANR	6324923	UnaryOperator	!		6324783	0					
ANR	6324924	Identifier	token_seen		6324783	1					
ANR	6324925	CompoundStatement		31:26:692:692	6324783	1					
ANR	6324926	ExpressionStatement	d = file -> line_num - line_ref	3314:3:69720:69749	6324783	0	True				
ANR	6324927	AssignmentExpression	d = file -> line_num - line_ref		6324783	0		=			
ANR	6324928	Identifier	d		6324783	0					
ANR	6324929	AdditiveExpression	file -> line_num - line_ref		6324783	1		-			
ANR	6324930	PtrMemberAccess	file -> line_num		6324783	0					
ANR	6324931	Identifier	file		6324783	0					
ANR	6324932	Identifier	line_num		6324783	1					
ANR	6324933	Identifier	line_ref		6324783	1					
ANR	6324934	IfStatement	if ( file != file_ref || d < 0 || d >= 8 )		6324783	1					
ANR	6324935	Condition	file != file_ref || d < 0 || d >= 8	3315:7:69758:69792	6324783	0	True				
ANR	6324936	OrExpression	file != file_ref || d < 0 || d >= 8		6324783	0		||			
ANR	6324937	EqualityExpression	file != file_ref		6324783	0		!=			
ANR	6324938	Identifier	file		6324783	0					
ANR	6324939	Identifier	file_ref		6324783	1					
ANR	6324940	OrExpression	d < 0 || d >= 8		6324783	1		||			
ANR	6324941	RelationalExpression	d < 0		6324783	0		<			
ANR	6324942	Identifier	d		6324783	0					
ANR	6324943	PrimaryExpression	0		6324783	1					
ANR	6324944	RelationalExpression	d >= 8		6324783	1		>=			
ANR	6324945	Identifier	d		6324783	0					
ANR	6324946	PrimaryExpression	8		6324783	1					
ANR	6324947	CompoundStatement		33:44:772:772	6324783	1					
ANR	6324948	Label	print_line :	3316:0:69797:69807	6324783	0	True				
ANR	6324949	Identifier	print_line		6324783	0					
ANR	6324950	ExpressionStatement	iptr_new = s1 -> include_stack_ptr	3317:4:69813:69845	6324783	1	True				
ANR	6324951	AssignmentExpression	iptr_new = s1 -> include_stack_ptr		6324783	0		=			
ANR	6324952	Identifier	iptr_new		6324783	0					
ANR	6324953	PtrMemberAccess	s1 -> include_stack_ptr		6324783	1					
ANR	6324954	Identifier	s1		6324783	0					
ANR	6324955	Identifier	include_stack_ptr		6324783	1					
ANR	6324956	ExpressionStatement	"s = iptr_new > iptr ? "" 1"" : iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""	3318:4:69851:69971	6324783	2	True				
ANR	6324957	AssignmentExpression	"s = iptr_new > iptr ? "" 1"" : iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""		6324783	0		=			
ANR	6324958	Identifier	s		6324783	0					
ANR	6324959	ConditionalExpression	"iptr_new > iptr ? "" 1"" : iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""		6324783	1					
ANR	6324960	Condition	iptr_new > iptr		6324783	0					
ANR	6324961	RelationalExpression	iptr_new > iptr		6324783	0		>			
ANR	6324962	Identifier	iptr_new		6324783	0					
ANR	6324963	Identifier	iptr		6324783	1					
ANR	6324964	PrimaryExpression	""" 1"""		6324783	1					
ANR	6324965	ConditionalExpression	"iptr_new < iptr ? "" 2"" : iptr_new > s1 -> include_stack ? "" 3"" : """""		6324783	2					
ANR	6324966	Condition	iptr_new < iptr		6324783	0					
ANR	6324967	RelationalExpression	iptr_new < iptr		6324783	0		<			
ANR	6324968	Identifier	iptr_new		6324783	0					
ANR	6324969	Identifier	iptr		6324783	1					
ANR	6324970	PrimaryExpression	""" 2"""		6324783	1					
ANR	6324971	ConditionalExpression	"iptr_new > s1 -> include_stack ? "" 3"" : """""		6324783	2					
ANR	6324972	Condition	iptr_new > s1 -> include_stack		6324783	0					
ANR	6324973	RelationalExpression	iptr_new > s1 -> include_stack		6324783	0		>			
ANR	6324974	Identifier	iptr_new		6324783	0					
ANR	6324975	PtrMemberAccess	s1 -> include_stack		6324783	1					
ANR	6324976	Identifier	s1		6324783	0					
ANR	6324977	Identifier	include_stack		6324783	1					
ANR	6324978	PrimaryExpression	""" 3"""		6324783	1					
ANR	6324979	PrimaryExpression	""""""		6324783	2					
ANR	6324980	ExpressionStatement	iptr = iptr_new	3323:4:69977:69992	6324783	3	True				
ANR	6324981	AssignmentExpression	iptr = iptr_new		6324783	0		=			
ANR	6324982	Identifier	iptr		6324783	0					
ANR	6324983	Identifier	iptr_new		6324783	1					
ANR	6324984	ExpressionStatement	"fprintf ( s1 -> ppfp , ""# %d \\""%s\\""%s\\n"" , file -> line_num , file -> filename , s )"	3324:4:69998:70070	6324783	4	True				
ANR	6324985	CallExpression	"fprintf ( s1 -> ppfp , ""# %d \\""%s\\""%s\\n"" , file -> line_num , file -> filename , s )"		6324783	0					
ANR	6324986	Callee	fprintf		6324783	0					
ANR	6324987	Identifier	fprintf		6324783	0					
ANR	6324988	ArgumentList	s1 -> ppfp		6324783	1					
ANR	6324989	Argument	s1 -> ppfp		6324783	0					
ANR	6324990	PtrMemberAccess	s1 -> ppfp		6324783	0					
ANR	6324991	Identifier	s1		6324783	0					
ANR	6324992	Identifier	ppfp		6324783	1					
ANR	6324993	Argument	"""# %d \\""%s\\""%s\\n"""		6324783	1					
ANR	6324994	PrimaryExpression	"""# %d \\""%s\\""%s\\n"""		6324783	0					
ANR	6324995	Argument	file -> line_num		6324783	2					
ANR	6324996	PtrMemberAccess	file -> line_num		6324783	0					
ANR	6324997	Identifier	file		6324783	0					
ANR	6324998	Identifier	line_num		6324783	1					
ANR	6324999	Argument	file -> filename		6324783	3					
ANR	6325000	PtrMemberAccess	file -> filename		6324783	0					
ANR	6325001	Identifier	file		6324783	0					
ANR	6325002	Identifier	filename		6324783	1					
ANR	6325003	Argument	s		6324783	4					
ANR	6325004	Identifier	s		6324783	0					
ANR	6325005	ElseStatement	else		6324783	0					
ANR	6325006	CompoundStatement		43:10:1059:1059	6324783	0					
ANR	6325007	WhileStatement	while ( d )		6324783	0					
ANR	6325008	Condition	d	3326:11:70095:70095	6324783	0	True				
ANR	6325009	Identifier	d		6324783	0					
ANR	6325010	ExpressionStatement	"fputs ( ""\\n"" , s1 -> ppfp ) , -- d"	3327:5:70103:70130	6324783	1	True				
ANR	6325011	Expression	"fputs ( ""\\n"" , s1 -> ppfp ) , -- d"		6324783	0					
ANR	6325012	CallExpression	"fputs ( ""\\n"" , s1 -> ppfp )"		6324783	0					
ANR	6325013	Callee	fputs		6324783	0					
ANR	6325014	Identifier	fputs		6324783	0					
ANR	6325015	ArgumentList	"""\\n"""		6324783	1					
ANR	6325016	Argument	"""\\n"""		6324783	0					
ANR	6325017	PrimaryExpression	"""\\n"""		6324783	0					
ANR	6325018	Argument	s1 -> ppfp		6324783	1					
ANR	6325019	PtrMemberAccess	s1 -> ppfp		6324783	0					
ANR	6325020	Identifier	s1		6324783	0					
ANR	6325021	Identifier	ppfp		6324783	1					
ANR	6325022	UnaryExpression	-- d		6324783	1					
ANR	6325023	IncDec	--		6324783	0					
ANR	6325024	Identifier	d		6324783	1					
ANR	6325025	ExpressionStatement	line_ref = ( file_ref = file ) -> line_num	3329:3:70140:70178	6324783	2	True				
ANR	6325026	AssignmentExpression	line_ref = ( file_ref = file ) -> line_num		6324783	0		=			
ANR	6325027	Identifier	line_ref		6324783	0					
ANR	6325028	PtrMemberAccess	( file_ref = file ) -> line_num		6324783	1					
ANR	6325029	AssignmentExpression	file_ref = file		6324783	0		=			
ANR	6325030	Identifier	file_ref		6324783	0					
ANR	6325031	Identifier	file		6324783	1					
ANR	6325032	Identifier	line_num		6324783	1					
ANR	6325033	ExpressionStatement	token_seen = tok != TOK_LINEFEED	3330:3:70183:70215	6324783	3	True				
ANR	6325034	AssignmentExpression	token_seen = tok != TOK_LINEFEED		6324783	0		=			
ANR	6325035	Identifier	token_seen		6324783	0					
ANR	6325036	EqualityExpression	tok != TOK_LINEFEED		6324783	1		!=			
ANR	6325037	Identifier	tok		6324783	0					
ANR	6325038	Identifier	TOK_LINEFEED		6324783	1					
ANR	6325039	IfStatement	if ( ! token_seen )		6324783	4					
ANR	6325040	Condition	! token_seen	3331:7:70224:70234	6324783	0	True				
ANR	6325041	UnaryOperationExpression	! token_seen		6324783	0					
ANR	6325042	UnaryOperator	!		6324783	0					
ANR	6325043	Identifier	token_seen		6324783	1					
ANR	6325044	CompoundStatement		49:20:1214:1214	6324783	1					
ANR	6325045	ContinueStatement	continue ;	3332:4:70243:70251	6324783	0	True				
ANR	6325046	ExpressionStatement	"fputs ( get_tok_str ( tok , & tokc ) , s1 -> ppfp )"	3335:2:70264:70306	6324783	2	True				
ANR	6325047	CallExpression	"fputs ( get_tok_str ( tok , & tokc ) , s1 -> ppfp )"		6324783	0					
ANR	6325048	Callee	fputs		6324783	0					
ANR	6325049	Identifier	fputs		6324783	0					
ANR	6325050	ArgumentList	"get_tok_str ( tok , & tokc )"		6324783	1					
ANR	6325051	Argument	"get_tok_str ( tok , & tokc )"		6324783	0					
ANR	6325052	CallExpression	"get_tok_str ( tok , & tokc )"		6324783	0					
ANR	6325053	Callee	get_tok_str		6324783	0					
ANR	6325054	Identifier	get_tok_str		6324783	0					
ANR	6325055	ArgumentList	tok		6324783	1					
ANR	6325056	Argument	tok		6324783	0					
ANR	6325057	Identifier	tok		6324783	0					
ANR	6325058	Argument	& tokc		6324783	1					
ANR	6325059	UnaryOperationExpression	& tokc		6324783	0					
ANR	6325060	UnaryOperator	&		6324783	0					
ANR	6325061	Identifier	tokc		6324783	1					
ANR	6325062	Argument	s1 -> ppfp		6324783	1					
ANR	6325063	PtrMemberAccess	s1 -> ppfp		6324783	0					
ANR	6325064	Identifier	s1		6324783	0					
ANR	6325065	Identifier	ppfp		6324783	1					
ANR	6325066	ExpressionStatement	free_defines ( define_start )	3337:1:70312:70339	6324783	14	True				
ANR	6325067	CallExpression	free_defines ( define_start )		6324783	0					
ANR	6325068	Callee	free_defines		6324783	0					
ANR	6325069	Identifier	free_defines		6324783	0					
ANR	6325070	ArgumentList	define_start		6324783	1					
ANR	6325071	Argument	define_start		6324783	0					
ANR	6325072	Identifier	define_start		6324783	0					
ANR	6325073	ReturnStatement	return 0 ;	3338:1:70342:70350	6324783	15	True				
ANR	6325074	PrimaryExpression	0		6324783	0					
ANR	6325075	ReturnType	ST_FUNC int		6324783	1					
ANR	6325076	Identifier	tcc_preprocess		6324783	2					
ANR	6325077	ParameterList	TCCState * s1		6324783	3					
ANR	6325078	Parameter	TCCState * s1	3282:27:69008:69019	6324783	0	True				
ANR	6325079	ParameterType	TCCState *		6324783	0					
ANR	6325080	Identifier	s1		6324783	1					
ANR	6325081	CFGEntryNode	ENTRY		6324783		True				
ANR	6325082	CFGExitNode	EXIT		6324783		True				
ANR	6325083	Symbol	PARSE_FLAG_LINEFEED		6324783						
ANR	6325084	Symbol	get_tok_str		6324783						
ANR	6325085	Symbol	* file -> buf_ptr		6324783						
ANR	6325086	Symbol	TOK_FLAG_BOF		6324783						
ANR	6325087	Symbol	* s1		6324783						
ANR	6325088	Symbol	s1 -> include_stack_ptr		6324783						
ANR	6325089	Symbol	TOK_FLAG_BOL		6324783						
ANR	6325090	Symbol	token_seen		6324783						
ANR	6325091	Symbol	TOK_LINEFEED		6324783						
ANR	6325092	Symbol	PARSE_FLAG_ASM_COMMENTS		6324783						
ANR	6325093	Symbol	tok		6324783						
ANR	6325094	Symbol	file		6324783						
ANR	6325095	Symbol	tok_flags		6324783						
ANR	6325096	Symbol	iptr		6324783						
ANR	6325097	Symbol	line_ref		6324783						
ANR	6325098	Symbol	file -> buf_ptr		6324783						
ANR	6325099	Symbol	file -> line_num		6324783						
ANR	6325100	Symbol	& tokc		6324783						
ANR	6325101	Symbol	s1		6324783						
ANR	6325102	Symbol	file -> filename		6324783						
ANR	6325103	Symbol	NULL		6324783						
ANR	6325104	Symbol	d		6324783						
ANR	6325105	Symbol	ch		6324783						
ANR	6325106	Symbol	PARSE_FLAG_PREPROCESS		6324783						
ANR	6325107	Symbol	( file_ref = file ) -> line_num		6324783						
ANR	6325108	Symbol	TOK_EOF		6324783						
ANR	6325109	Symbol	* file		6324783						
ANR	6325110	Symbol	tcc_nerr		6324783						
ANR	6325111	Symbol	s1 -> ppfp		6324783						
ANR	6325112	Symbol	define_start		6324783						
ANR	6325113	Symbol	s1 -> include_stack		6324783						
ANR	6325114	Symbol	s		6324783						
ANR	6325115	Symbol	define_stack		6324783						
ANR	6325116	Symbol	PARSE_FLAG_SPACES		6324783						
ANR	6325117	Symbol	iptr_new		6324783						
ANR	6325118	Symbol	file_ref		6324783						
ANR	6325119	Symbol	* * file		6324783						
ANR	6325120	Symbol	parse_flags		6324783						
