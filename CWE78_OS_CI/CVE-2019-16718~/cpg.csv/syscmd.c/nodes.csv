command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6280665	File	data/converged/CVE-2019-16718~_radare2/syscmd.c								
ANR	6280666	DeclStmt									
ANR	6280667	Decl							int	int	needs_newline
ANR	6280668	Function	showfile	12:0:182:2840							
ANR	6280669	FunctionDef	"showfile (char * res , const int nth , const char * fpath , const char * name , int printfmt)"		6280668	0					
ANR	6280670	CompoundStatement		12:99:281:2840	6280668	0					
ANR	6280671	IdentifierDeclStatement	struct stat sb ;	14:1:297:311	6280668	0	True				
ANR	6280672	IdentifierDecl	sb		6280668	0					
ANR	6280673	IdentifierDeclType	struct stat		6280668	0					
ANR	6280674	Identifier	sb		6280668	1					
ANR	6280675	IdentifierDeclStatement	const char * n = fpath ;	16:1:321:342	6280668	1	True				
ANR	6280676	IdentifierDecl	* n = fpath		6280668	0					
ANR	6280677	IdentifierDeclType	const char *		6280668	0					
ANR	6280678	Identifier	n		6280668	1					
ANR	6280679	AssignmentExpression	* n = fpath		6280668	2		=			
ANR	6280680	Identifier	fpath		6280668	0					
ANR	6280681	Identifier	fpath		6280668	1					
ANR	6280682	IdentifierDeclStatement	"char * nn , * u_rwx = NULL ;"	17:1:345:368	6280668	2	True				
ANR	6280683	IdentifierDecl	* nn		6280668	0					
ANR	6280684	IdentifierDeclType	char *		6280668	0					
ANR	6280685	Identifier	nn		6280668	1					
ANR	6280686	IdentifierDecl	* u_rwx = NULL		6280668	1					
ANR	6280687	IdentifierDeclType	char *		6280668	0					
ANR	6280688	Identifier	u_rwx		6280668	1					
ANR	6280689	AssignmentExpression	* u_rwx = NULL		6280668	2		=			
ANR	6280690	Identifier	NULL		6280668	0					
ANR	6280691	Identifier	NULL		6280668	1					
ANR	6280692	IdentifierDeclStatement	int sz = r_file_size ( n ) ;	18:1:371:395	6280668	3	True				
ANR	6280693	IdentifierDecl	sz = r_file_size ( n )		6280668	0					
ANR	6280694	IdentifierDeclType	int		6280668	0					
ANR	6280695	Identifier	sz		6280668	1					
ANR	6280696	AssignmentExpression	sz = r_file_size ( n )		6280668	2		=			
ANR	6280697	Identifier	sz		6280668	0					
ANR	6280698	CallExpression	r_file_size ( n )		6280668	1					
ANR	6280699	Callee	r_file_size		6280668	0					
ANR	6280700	Identifier	r_file_size		6280668	0					
ANR	6280701	ArgumentList	n		6280668	1					
ANR	6280702	Argument	n		6280668	0					
ANR	6280703	Identifier	n		6280668	0					
ANR	6280704	IdentifierDeclStatement	"int perm , uid = 0 , gid = 0 ;"	19:1:398:424	6280668	4	True				
ANR	6280705	IdentifierDecl	perm		6280668	0					
ANR	6280706	IdentifierDeclType	int		6280668	0					
ANR	6280707	Identifier	perm		6280668	1					
ANR	6280708	IdentifierDecl	uid = 0		6280668	1					
ANR	6280709	IdentifierDeclType	int		6280668	0					
ANR	6280710	Identifier	uid		6280668	1					
ANR	6280711	AssignmentExpression	uid = 0		6280668	2		=			
ANR	6280712	Identifier	uid		6280668	0					
ANR	6280713	PrimaryExpression	0		6280668	1					
ANR	6280714	IdentifierDecl	gid = 0		6280668	2					
ANR	6280715	IdentifierDeclType	int		6280668	0					
ANR	6280716	Identifier	gid		6280668	1					
ANR	6280717	AssignmentExpression	gid = 0		6280668	2		=			
ANR	6280718	Identifier	gid		6280668	0					
ANR	6280719	PrimaryExpression	0		6280668	1					
ANR	6280720	IdentifierDeclStatement	int fch = '-' ;	20:1:427:440	6280668	5	True				
ANR	6280721	IdentifierDecl	fch = '-'		6280668	0					
ANR	6280722	IdentifierDeclType	int		6280668	0					
ANR	6280723	Identifier	fch		6280668	1					
ANR	6280724	AssignmentExpression	fch = '-'		6280668	2		=			
ANR	6280725	Identifier	fch		6280668	0					
ANR	6280726	PrimaryExpression	'-'		6280668	1					
ANR	6280727	IfStatement	"if ( ! strncmp ( fpath , ""./"" , 2 ) )"		6280668	6					
ANR	6280728	Condition	"! strncmp ( fpath , ""./"" , 2 )"	21:5:447:471	6280668	0	True				
ANR	6280729	UnaryOperationExpression	"! strncmp ( fpath , ""./"" , 2 )"		6280668	0					
ANR	6280730	UnaryOperator	!		6280668	0					
ANR	6280731	CallExpression	"strncmp ( fpath , ""./"" , 2 )"		6280668	1					
ANR	6280732	Callee	strncmp		6280668	0					
ANR	6280733	Identifier	strncmp		6280668	0					
ANR	6280734	ArgumentList	fpath		6280668	1					
ANR	6280735	Argument	fpath		6280668	0					
ANR	6280736	Identifier	fpath		6280668	0					
ANR	6280737	Argument	"""./"""		6280668	1					
ANR	6280738	PrimaryExpression	"""./"""		6280668	0					
ANR	6280739	Argument	2		6280668	2					
ANR	6280740	PrimaryExpression	2		6280668	0					
ANR	6280741	CompoundStatement		10:32:192:192	6280668	1					
ANR	6280742	ExpressionStatement	fpath = fpath + 2	22:2:478:495	6280668	0	True				
ANR	6280743	AssignmentExpression	fpath = fpath + 2		6280668	0		=			
ANR	6280744	Identifier	fpath		6280668	0					
ANR	6280745	AdditiveExpression	fpath + 2		6280668	1		+			
ANR	6280746	Identifier	fpath		6280668	0					
ANR	6280747	PrimaryExpression	2		6280668	1					
ANR	6280748	IdentifierDeclStatement	const bool isdir = r_file_is_directory ( n ) ;	24:1:501:543	6280668	7	True				
ANR	6280749	IdentifierDecl	isdir = r_file_is_directory ( n )		6280668	0					
ANR	6280750	IdentifierDeclType	const bool		6280668	0					
ANR	6280751	Identifier	isdir		6280668	1					
ANR	6280752	AssignmentExpression	isdir = r_file_is_directory ( n )		6280668	2		=			
ANR	6280753	Identifier	isdir		6280668	0					
ANR	6280754	CallExpression	r_file_is_directory ( n )		6280668	1					
ANR	6280755	Callee	r_file_is_directory		6280668	0					
ANR	6280756	Identifier	r_file_is_directory		6280668	0					
ANR	6280757	ArgumentList	n		6280668	1					
ANR	6280758	Argument	n		6280668	0					
ANR	6280759	Identifier	n		6280668	0					
ANR	6280760	IfStatement	if ( isdir )		6280668	8					
ANR	6280761	Condition	isdir	25:5:550:554	6280668	0	True				
ANR	6280762	Identifier	isdir		6280668	0					
ANR	6280763	CompoundStatement		14:12:275:275	6280668	1					
ANR	6280764	ExpressionStatement	"nn = r_str_append ( strdup ( fpath ) , ""/"" )"	26:2:561:600	6280668	0	True				
ANR	6280765	AssignmentExpression	"nn = r_str_append ( strdup ( fpath ) , ""/"" )"		6280668	0		=			
ANR	6280766	Identifier	nn		6280668	0					
ANR	6280767	CallExpression	"r_str_append ( strdup ( fpath ) , ""/"" )"		6280668	1					
ANR	6280768	Callee	r_str_append		6280668	0					
ANR	6280769	Identifier	r_str_append		6280668	0					
ANR	6280770	ArgumentList	strdup ( fpath )		6280668	1					
ANR	6280771	Argument	strdup ( fpath )		6280668	0					
ANR	6280772	CallExpression	strdup ( fpath )		6280668	0					
ANR	6280773	Callee	strdup		6280668	0					
ANR	6280774	Identifier	strdup		6280668	0					
ANR	6280775	ArgumentList	fpath		6280668	1					
ANR	6280776	Argument	fpath		6280668	0					
ANR	6280777	Identifier	fpath		6280668	0					
ANR	6280778	Argument	"""/"""		6280668	1					
ANR	6280779	PrimaryExpression	"""/"""		6280668	0					
ANR	6280780	ElseStatement	else		6280668	0					
ANR	6280781	CompoundStatement		16:8:328:328	6280668	0					
ANR	6280782	ExpressionStatement	nn = strdup ( fpath )	28:2:614:633	6280668	0	True				
ANR	6280783	AssignmentExpression	nn = strdup ( fpath )		6280668	0		=			
ANR	6280784	Identifier	nn		6280668	0					
ANR	6280785	CallExpression	strdup ( fpath )		6280668	1					
ANR	6280786	Callee	strdup		6280668	0					
ANR	6280787	Identifier	strdup		6280668	0					
ANR	6280788	ArgumentList	fpath		6280668	1					
ANR	6280789	Argument	fpath		6280668	0					
ANR	6280790	Identifier	fpath		6280668	0					
ANR	6280791	IfStatement	if ( ! * nn )		6280668	9					
ANR	6280792	Condition	! * nn	30:5:643:646	6280668	0	True				
ANR	6280793	UnaryOperationExpression	! * nn		6280668	0					
ANR	6280794	UnaryOperator	!		6280668	0					
ANR	6280795	UnaryOperationExpression	* nn		6280668	1					
ANR	6280796	UnaryOperator	*		6280668	0					
ANR	6280797	Identifier	nn		6280668	1					
ANR	6280798	CompoundStatement		19:11:367:367	6280668	1					
ANR	6280799	ExpressionStatement	free ( nn )	31:2:653:662	6280668	0	True				
ANR	6280800	CallExpression	free ( nn )		6280668	0					
ANR	6280801	Callee	free		6280668	0					
ANR	6280802	Identifier	free		6280668	0					
ANR	6280803	ArgumentList	nn		6280668	1					
ANR	6280804	Argument	nn		6280668	0					
ANR	6280805	Identifier	nn		6280668	0					
ANR	6280806	ReturnStatement	return res ;	32:2:666:676	6280668	1	True				
ANR	6280807	Identifier	res		6280668	0					
ANR	6280808	ExpressionStatement	perm = isdir ? 0755 : 0644	34:1:682:706	6280668	10	True				
ANR	6280809	AssignmentExpression	perm = isdir ? 0755 : 0644		6280668	0		=			
ANR	6280810	Identifier	perm		6280668	0					
ANR	6280811	ConditionalExpression	isdir ? 0755 : 0644		6280668	1					
ANR	6280812	Condition	isdir		6280668	0					
ANR	6280813	Identifier	isdir		6280668	0					
ANR	6280814	PrimaryExpression	0755		6280668	1					
ANR	6280815	PrimaryExpression	0644		6280668	2					
ANR	6280816	IfStatement	if ( ! printfmt )		6280668	11					
ANR	6280817	Condition	! printfmt	35:5:713:721	6280668	0	True				
ANR	6280818	UnaryOperationExpression	! printfmt		6280668	0					
ANR	6280819	UnaryOperator	!		6280668	0					
ANR	6280820	Identifier	printfmt		6280668	1					
ANR	6280821	CompoundStatement		24:16:442:442	6280668	1					
ANR	6280822	ExpressionStatement	needs_newline = ( ( nth + 1 ) % 4 ) ? 1 : 0	36:2:728:765	6280668	0	True				
ANR	6280823	AssignmentExpression	needs_newline = ( ( nth + 1 ) % 4 ) ? 1 : 0		6280668	0		=			
ANR	6280824	Identifier	needs_newline		6280668	0					
ANR	6280825	ConditionalExpression	( ( nth + 1 ) % 4 ) ? 1 : 0		6280668	1					
ANR	6280826	Condition	( nth + 1 ) % 4		6280668	0					
ANR	6280827	MultiplicativeExpression	( nth + 1 ) % 4		6280668	0		%			
ANR	6280828	AdditiveExpression	nth + 1		6280668	0		+			
ANR	6280829	Identifier	nth		6280668	0					
ANR	6280830	PrimaryExpression	1		6280668	1					
ANR	6280831	PrimaryExpression	4		6280668	1					
ANR	6280832	PrimaryExpression	1		6280668	1					
ANR	6280833	PrimaryExpression	0		6280668	2					
ANR	6280834	ExpressionStatement	"res = r_str_appendf ( res , ""%18s%s"" , nn , needs_newline ? ""  "" : ""\\n"" )"	37:2:769:835	6280668	1	True				
ANR	6280835	AssignmentExpression	"res = r_str_appendf ( res , ""%18s%s"" , nn , needs_newline ? ""  "" : ""\\n"" )"		6280668	0		=			
ANR	6280836	Identifier	res		6280668	0					
ANR	6280837	CallExpression	"r_str_appendf ( res , ""%18s%s"" , nn , needs_newline ? ""  "" : ""\\n"" )"		6280668	1					
ANR	6280838	Callee	r_str_appendf		6280668	0					
ANR	6280839	Identifier	r_str_appendf		6280668	0					
ANR	6280840	ArgumentList	res		6280668	1					
ANR	6280841	Argument	res		6280668	0					
ANR	6280842	Identifier	res		6280668	0					
ANR	6280843	Argument	"""%18s%s"""		6280668	1					
ANR	6280844	PrimaryExpression	"""%18s%s"""		6280668	0					
ANR	6280845	Argument	nn		6280668	2					
ANR	6280846	Identifier	nn		6280668	0					
ANR	6280847	Argument	"needs_newline ? ""  "" : ""\\n"""		6280668	3					
ANR	6280848	ConditionalExpression	"needs_newline ? ""  "" : ""\\n"""		6280668	0					
ANR	6280849	Condition	needs_newline		6280668	0					
ANR	6280850	Identifier	needs_newline		6280668	0					
ANR	6280851	PrimaryExpression	"""  """		6280668	1					
ANR	6280852	PrimaryExpression	"""\\n"""		6280668	2					
ANR	6280853	ExpressionStatement	free ( nn )	38:2:839:848	6280668	2	True				
ANR	6280854	CallExpression	free ( nn )		6280668	0					
ANR	6280855	Callee	free		6280668	0					
ANR	6280856	Identifier	free		6280668	0					
ANR	6280857	ArgumentList	nn		6280668	1					
ANR	6280858	Argument	nn		6280668	0					
ANR	6280859	Identifier	nn		6280668	0					
ANR	6280860	ReturnStatement	return res ;	39:2:852:862	6280668	3	True				
ANR	6280861	Identifier	res		6280668	0					
ANR	6280862	IfStatement	"if ( lstat ( n , & sb ) != - 1 )"		6280668	12					
ANR	6280863	Condition	"lstat ( n , & sb ) != - 1"	45:5:1001:1020	6280668	0	True				
ANR	6280864	EqualityExpression	"lstat ( n , & sb ) != - 1"		6280668	0		!=			
ANR	6280865	CallExpression	"lstat ( n , & sb )"		6280668	0					
ANR	6280866	Callee	lstat		6280668	0					
ANR	6280867	Identifier	lstat		6280668	0					
ANR	6280868	ArgumentList	n		6280668	1					
ANR	6280869	Argument	n		6280668	0					
ANR	6280870	Identifier	n		6280668	0					
ANR	6280871	Argument	& sb		6280668	1					
ANR	6280872	UnaryOperationExpression	& sb		6280668	0					
ANR	6280873	UnaryOperator	&		6280668	0					
ANR	6280874	Identifier	sb		6280668	1					
ANR	6280875	UnaryOperationExpression	- 1		6280668	1					
ANR	6280876	UnaryOperator	-		6280668	0					
ANR	6280877	PrimaryExpression	1		6280668	1					
ANR	6280878	CompoundStatement		35:2:745:776	6280668	1					
ANR	6280879	IdentifierDeclStatement	ut32 ifmt = sb . st_mode & S_IFMT ;	46:2:1027:1058	6280668	0	True				
ANR	6280880	IdentifierDecl	ifmt = sb . st_mode & S_IFMT		6280668	0					
ANR	6280881	IdentifierDeclType	ut32		6280668	0					
ANR	6280882	Identifier	ifmt		6280668	1					
ANR	6280883	AssignmentExpression	ifmt = sb . st_mode & S_IFMT		6280668	2		=			
ANR	6280884	Identifier	ifmt		6280668	0					
ANR	6280885	BitAndExpression	sb . st_mode & S_IFMT		6280668	1		&			
ANR	6280886	MemberAccess	sb . st_mode		6280668	0					
ANR	6280887	Identifier	sb		6280668	0					
ANR	6280888	Identifier	st_mode		6280668	1					
ANR	6280889	Identifier	S_IFMT		6280668	1					
ANR	6280890	ExpressionStatement	uid = sb . st_uid	47:2:1062:1077	6280668	1	True				
ANR	6280891	AssignmentExpression	uid = sb . st_uid		6280668	0		=			
ANR	6280892	Identifier	uid		6280668	0					
ANR	6280893	MemberAccess	sb . st_uid		6280668	1					
ANR	6280894	Identifier	sb		6280668	0					
ANR	6280895	Identifier	st_uid		6280668	1					
ANR	6280896	ExpressionStatement	gid = sb . st_gid	48:2:1081:1096	6280668	2	True				
ANR	6280897	AssignmentExpression	gid = sb . st_gid		6280668	0		=			
ANR	6280898	Identifier	gid		6280668	0					
ANR	6280899	MemberAccess	sb . st_gid		6280668	1					
ANR	6280900	Identifier	sb		6280668	0					
ANR	6280901	Identifier	st_gid		6280668	1					
ANR	6280902	ExpressionStatement	perm = sb . st_mode & 0777	49:2:1100:1124	6280668	3	True				
ANR	6280903	AssignmentExpression	perm = sb . st_mode & 0777		6280668	0		=			
ANR	6280904	Identifier	perm		6280668	0					
ANR	6280905	BitAndExpression	sb . st_mode & 0777		6280668	1		&			
ANR	6280906	MemberAccess	sb . st_mode		6280668	0					
ANR	6280907	Identifier	sb		6280668	0					
ANR	6280908	Identifier	st_mode		6280668	1					
ANR	6280909	PrimaryExpression	0777		6280668	1					
ANR	6280910	IfStatement	if ( ! ( u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) ) ) )		6280668	4					
ANR	6280911	Condition	! ( u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) ) )	50:6:1132:1174	6280668	0	True				
ANR	6280912	UnaryOperationExpression	! ( u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) ) )		6280668	0					
ANR	6280913	UnaryOperator	!		6280668	0					
ANR	6280914	AssignmentExpression	u_rwx = strdup ( r_str_rwx_i ( perm >> 6 ) )		6280668	1		=			
ANR	6280915	Identifier	u_rwx		6280668	0					
ANR	6280916	CallExpression	strdup ( r_str_rwx_i ( perm >> 6 ) )		6280668	1					
ANR	6280917	Callee	strdup		6280668	0					
ANR	6280918	Identifier	strdup		6280668	0					
ANR	6280919	ArgumentList	r_str_rwx_i ( perm >> 6 )		6280668	1					
ANR	6280920	Argument	r_str_rwx_i ( perm >> 6 )		6280668	0					
ANR	6280921	CallExpression	r_str_rwx_i ( perm >> 6 )		6280668	0					
ANR	6280922	Callee	r_str_rwx_i		6280668	0					
ANR	6280923	Identifier	r_str_rwx_i		6280668	0					
ANR	6280924	ArgumentList	perm >> 6		6280668	1					
ANR	6280925	Argument	perm >> 6		6280668	0					
ANR	6280926	ShiftExpression	perm >> 6		6280668	0		>>			
ANR	6280927	Identifier	perm		6280668	0					
ANR	6280928	PrimaryExpression	6		6280668	1					
ANR	6280929	CompoundStatement		39:51:895:895	6280668	1					
ANR	6280930	ExpressionStatement	free ( nn )	51:3:1182:1191	6280668	0	True				
ANR	6280931	CallExpression	free ( nn )		6280668	0					
ANR	6280932	Callee	free		6280668	0					
ANR	6280933	Identifier	free		6280668	0					
ANR	6280934	ArgumentList	nn		6280668	1					
ANR	6280935	Argument	nn		6280668	0					
ANR	6280936	Identifier	nn		6280668	0					
ANR	6280937	ReturnStatement	return res ;	52:3:1196:1206	6280668	1	True				
ANR	6280938	Identifier	res		6280668	0					
ANR	6280939	IfStatement	if ( sb . st_mode & S_ISUID )		6280668	5					
ANR	6280940	Condition	sb . st_mode & S_ISUID	54:6:1218:1237	6280668	0	True				
ANR	6280941	BitAndExpression	sb . st_mode & S_ISUID		6280668	0		&			
ANR	6280942	MemberAccess	sb . st_mode		6280668	0					
ANR	6280943	Identifier	sb		6280668	0					
ANR	6280944	Identifier	st_mode		6280668	1					
ANR	6280945	Identifier	S_ISUID		6280668	1					
ANR	6280946	CompoundStatement		43:28:958:958	6280668	1					
ANR	6280947	ExpressionStatement	u_rwx [ 2 ] = ( sb . st_mode & S_IXUSR ) ? 's' : 'S'	55:3:1245:1290	6280668	0	True				
ANR	6280948	AssignmentExpression	u_rwx [ 2 ] = ( sb . st_mode & S_IXUSR ) ? 's' : 'S'		6280668	0		=			
ANR	6280949	ArrayIndexing	u_rwx [ 2 ]		6280668	0					
ANR	6280950	Identifier	u_rwx		6280668	0					
ANR	6280951	PrimaryExpression	2		6280668	1					
ANR	6280952	ConditionalExpression	( sb . st_mode & S_IXUSR ) ? 's' : 'S'		6280668	1					
ANR	6280953	Condition	sb . st_mode & S_IXUSR		6280668	0					
ANR	6280954	BitAndExpression	sb . st_mode & S_IXUSR		6280668	0		&			
ANR	6280955	MemberAccess	sb . st_mode		6280668	0					
ANR	6280956	Identifier	sb		6280668	0					
ANR	6280957	Identifier	st_mode		6280668	1					
ANR	6280958	Identifier	S_IXUSR		6280668	1					
ANR	6280959	PrimaryExpression	's'		6280668	1					
ANR	6280960	PrimaryExpression	'S'		6280668	2					
ANR	6280961	IfStatement	if ( isdir )		6280668	6					
ANR	6280962	Condition	isdir	57:6:1302:1306	6280668	0	True				
ANR	6280963	Identifier	isdir		6280668	0					
ANR	6280964	CompoundStatement		46:13:1027:1027	6280668	1					
ANR	6280965	ExpressionStatement	fch = 'd'	58:3:1314:1323	6280668	0	True				
ANR	6280966	AssignmentExpression	fch = 'd'		6280668	0		=			
ANR	6280967	Identifier	fch		6280668	0					
ANR	6280968	PrimaryExpression	'd'		6280668	1					
ANR	6280969	ElseStatement	else		6280668	0					
ANR	6280970	CompoundStatement		48:9:1052:1052	6280668	0					
ANR	6280971	SwitchStatement	switch ( ifmt )		6280668	0					
ANR	6280972	Condition	ifmt	60:11:1347:1350	6280668	0	True				
ANR	6280973	Identifier	ifmt		6280668	0					
ANR	6280974	CompoundStatement		49:17:1071:1071	6280668	1					
ANR	6280975	Label	case S_IFCHR :	61:3:1358:1370	6280668	0	True				
ANR	6280976	Identifier	S_IFCHR		6280668	0					
ANR	6280977	ExpressionStatement	fch = 'c'	61:17:1372:1381	6280668	1	True				
ANR	6280978	AssignmentExpression	fch = 'c'		6280668	0		=			
ANR	6280979	Identifier	fch		6280668	0					
ANR	6280980	PrimaryExpression	'c'		6280668	1					
ANR	6280981	BreakStatement	break ;	61:28:1383:1388	6280668	2	True				
ANR	6280982	Label	case S_IFBLK :	62:3:1393:1405	6280668	3	True				
ANR	6280983	Identifier	S_IFBLK		6280668	0					
ANR	6280984	ExpressionStatement	fch = 'b'	62:17:1407:1416	6280668	4	True				
ANR	6280985	AssignmentExpression	fch = 'b'		6280668	0		=			
ANR	6280986	Identifier	fch		6280668	0					
ANR	6280987	PrimaryExpression	'b'		6280668	1					
ANR	6280988	BreakStatement	break ;	62:28:1418:1423	6280668	5	True				
ANR	6280989	Label	case S_IFLNK :	63:3:1428:1440	6280668	6	True				
ANR	6280990	Identifier	S_IFLNK		6280668	0					
ANR	6280991	ExpressionStatement	fch = 'l'	63:17:1442:1451	6280668	7	True				
ANR	6280992	AssignmentExpression	fch = 'l'		6280668	0		=			
ANR	6280993	Identifier	fch		6280668	0					
ANR	6280994	PrimaryExpression	'l'		6280668	1					
ANR	6280995	BreakStatement	break ;	63:28:1453:1458	6280668	8	True				
ANR	6280996	Label	case S_IFIFO :	64:3:1463:1475	6280668	9	True				
ANR	6280997	Identifier	S_IFIFO		6280668	0					
ANR	6280998	ExpressionStatement	fch = 'p'	64:17:1477:1486	6280668	10	True				
ANR	6280999	AssignmentExpression	fch = 'p'		6280668	0		=			
ANR	6281000	Identifier	fch		6280668	0					
ANR	6281001	PrimaryExpression	'p'		6280668	1					
ANR	6281002	BreakStatement	break ;	64:28:1488:1493	6280668	11	True				
ANR	6281003	Label	case S_IFSOCK :	66:3:1514:1527	6280668	12	True				
ANR	6281004	Identifier	S_IFSOCK		6280668	0					
ANR	6281005	ExpressionStatement	fch = 's'	66:18:1529:1538	6280668	13	True				
ANR	6281006	AssignmentExpression	fch = 's'		6280668	0		=			
ANR	6281007	Identifier	fch		6280668	0					
ANR	6281008	PrimaryExpression	's'		6280668	1					
ANR	6281009	BreakStatement	break ;	66:29:1540:1545	6280668	14	True				
ANR	6281010	IfStatement	if ( printfmt == 'q' )		6280668	13					
ANR	6281011	Condition	printfmt == 'q'	75:5:1631:1645	6280668	0	True				
ANR	6281012	EqualityExpression	printfmt == 'q'		6280668	0		==			
ANR	6281013	Identifier	printfmt		6280668	0					
ANR	6281014	PrimaryExpression	'q'		6280668	1					
ANR	6281015	CompoundStatement		64:22:1366:1366	6280668	1					
ANR	6281016	ExpressionStatement	"res = r_str_appendf ( res , ""%s\\n"" , nn )"	76:2:1652:1689	6280668	0	True				
ANR	6281017	AssignmentExpression	"res = r_str_appendf ( res , ""%s\\n"" , nn )"		6280668	0		=			
ANR	6281018	Identifier	res		6280668	0					
ANR	6281019	CallExpression	"r_str_appendf ( res , ""%s\\n"" , nn )"		6280668	1					
ANR	6281020	Callee	r_str_appendf		6280668	0					
ANR	6281021	Identifier	r_str_appendf		6280668	0					
ANR	6281022	ArgumentList	res		6280668	1					
ANR	6281023	Argument	res		6280668	0					
ANR	6281024	Identifier	res		6280668	0					
ANR	6281025	Argument	"""%s\\n"""		6280668	1					
ANR	6281026	PrimaryExpression	"""%s\\n"""		6280668	0					
ANR	6281027	Argument	nn		6280668	2					
ANR	6281028	Identifier	nn		6280668	0					
ANR	6281029	ElseStatement	else		6280668	0					
ANR	6281030	IfStatement	if ( printfmt == 'e' )		6280668	0					
ANR	6281031	Condition	printfmt == 'e'	77:12:1703:1717	6280668	0	True				
ANR	6281032	EqualityExpression	printfmt == 'e'		6280668	0		==			
ANR	6281033	Identifier	printfmt		6280668	0					
ANR	6281034	PrimaryExpression	'e'		6280668	1					
ANR	6281035	CompoundStatement		74:2:1622:1645	6280668	1					
ANR	6281036	IdentifierDeclStatement	"const char * eDIR = ""????"" ;"	78:2:1724:1749	6280668	0	True				
ANR	6281037	IdentifierDecl	"* eDIR = ""????"""		6280668	0					
ANR	6281038	IdentifierDeclType	const char *		6280668	0					
ANR	6281039	Identifier	eDIR		6280668	1					
ANR	6281040	AssignmentExpression	"* eDIR = ""????"""		6280668	2		=			
ANR	6281041	Identifier	eDIR		6280668	0					
ANR	6281042	PrimaryExpression	"""????"""		6280668	1					
ANR	6281043	IdentifierDeclStatement	"const char * eLNK = ""????"" ;"	79:2:1753:1778	6280668	1	True				
ANR	6281044	IdentifierDecl	"* eLNK = ""????"""		6280668	0					
ANR	6281045	IdentifierDeclType	const char *		6280668	0					
ANR	6281046	Identifier	eLNK		6280668	1					
ANR	6281047	AssignmentExpression	"* eLNK = ""????"""		6280668	2		=			
ANR	6281048	Identifier	eLNK		6280668	0					
ANR	6281049	PrimaryExpression	"""????"""		6280668	1					
ANR	6281050	IdentifierDeclStatement	"const char * eIMG = ""????"" ;"	80:2:1782:1807	6280668	2	True				
ANR	6281051	IdentifierDecl	"* eIMG = ""????"""		6280668	0					
ANR	6281052	IdentifierDeclType	const char *		6280668	0					
ANR	6281053	Identifier	eIMG		6280668	1					
ANR	6281054	AssignmentExpression	"* eIMG = ""????"""		6280668	2		=			
ANR	6281055	Identifier	eIMG		6280668	0					
ANR	6281056	PrimaryExpression	"""????"""		6280668	1					
ANR	6281057	IdentifierDeclStatement	"const char * eUID = ""????"" ;"	81:2:1811:1836	6280668	3	True				
ANR	6281058	IdentifierDecl	"* eUID = ""????"""		6280668	0					
ANR	6281059	IdentifierDeclType	const char *		6280668	0					
ANR	6281060	Identifier	eUID		6280668	1					
ANR	6281061	AssignmentExpression	"* eUID = ""????"""		6280668	2		=			
ANR	6281062	Identifier	eUID		6280668	0					
ANR	6281063	PrimaryExpression	"""????"""		6280668	1					
ANR	6281064	IdentifierDeclStatement	"const char * eHID = ""????"" ;"	82:2:1840:1865	6280668	4	True				
ANR	6281065	IdentifierDecl	"* eHID = ""????"""		6280668	0					
ANR	6281066	IdentifierDeclType	const char *		6280668	0					
ANR	6281067	Identifier	eHID		6280668	1					
ANR	6281068	AssignmentExpression	"* eHID = ""????"""		6280668	2		=			
ANR	6281069	Identifier	eHID		6280668	0					
ANR	6281070	PrimaryExpression	"""????"""		6280668	1					
ANR	6281071	IdentifierDeclStatement	"const char * eANY = ""  "" ;"	83:2:1869:1892	6280668	5	True				
ANR	6281072	IdentifierDecl	"* eANY = ""  """		6280668	0					
ANR	6281073	IdentifierDeclType	const char *		6280668	0					
ANR	6281074	Identifier	eANY		6280668	1					
ANR	6281075	AssignmentExpression	"* eANY = ""  """		6280668	2		=			
ANR	6281076	Identifier	eANY		6280668	0					
ANR	6281077	PrimaryExpression	"""  """		6280668	1					
ANR	6281078	IdentifierDeclStatement	const char * icon = eANY ;	85:2:1904:1927	6280668	6	True				
ANR	6281079	IdentifierDecl	* icon = eANY		6280668	0					
ANR	6281080	IdentifierDeclType	const char *		6280668	0					
ANR	6281081	Identifier	icon		6280668	1					
ANR	6281082	AssignmentExpression	* icon = eANY		6280668	2		=			
ANR	6281083	Identifier	eANY		6280668	0					
ANR	6281084	Identifier	eANY		6280668	1					
ANR	6281085	IfStatement	if ( isdir )		6280668	7					
ANR	6281086	Condition	isdir	86:6:1935:1939	6280668	0	True				
ANR	6281087	Identifier	isdir		6280668	0					
ANR	6281088	CompoundStatement		75:13:1660:1660	6280668	1					
ANR	6281089	ExpressionStatement	icon = eDIR	87:3:1947:1958	6280668	0	True				
ANR	6281090	AssignmentExpression	icon = eDIR		6280668	0		=			
ANR	6281091	Identifier	icon		6280668	0					
ANR	6281092	Identifier	eDIR		6280668	1					
ANR	6281093	ElseStatement	else		6280668	0					
ANR	6281094	IfStatement	if ( ( sb . st_mode & S_IFMT ) == S_IFLNK )		6280668	0					
ANR	6281095	Condition	( sb . st_mode & S_IFMT ) == S_IFLNK	89:13:1986:2017	6280668	0	True				
ANR	6281096	EqualityExpression	( sb . st_mode & S_IFMT ) == S_IFLNK		6280668	0		==			
ANR	6281097	BitAndExpression	sb . st_mode & S_IFMT		6280668	0		&			
ANR	6281098	MemberAccess	sb . st_mode		6280668	0					
ANR	6281099	Identifier	sb		6280668	0					
ANR	6281100	Identifier	st_mode		6280668	1					
ANR	6281101	Identifier	S_IFMT		6280668	1					
ANR	6281102	Identifier	S_IFLNK		6280668	1					
ANR	6281103	CompoundStatement		78:47:1738:1738	6280668	1					
ANR	6281104	ExpressionStatement	icon = eLNK	90:3:2025:2036	6280668	0	True				
ANR	6281105	AssignmentExpression	icon = eLNK		6280668	0		=			
ANR	6281106	Identifier	icon		6280668	0					
ANR	6281107	Identifier	eLNK		6280668	1					
ANR	6281108	ElseStatement	else		6280668	0					
ANR	6281109	IfStatement	if ( sb . st_mode & S_ISUID )		6280668	0					
ANR	6281110	Condition	sb . st_mode & S_ISUID	91:13:2051:2070	6280668	0	True				
ANR	6281111	BitAndExpression	sb . st_mode & S_ISUID		6280668	0		&			
ANR	6281112	MemberAccess	sb . st_mode		6280668	0					
ANR	6281113	Identifier	sb		6280668	0					
ANR	6281114	Identifier	st_mode		6280668	1					
ANR	6281115	Identifier	S_ISUID		6280668	1					
ANR	6281116	CompoundStatement		80:35:1791:1791	6280668	1					
ANR	6281117	ExpressionStatement	icon = eUID	92:3:2078:2089	6280668	0	True				
ANR	6281118	AssignmentExpression	icon = eUID		6280668	0		=			
ANR	6281119	Identifier	icon		6280668	0					
ANR	6281120	Identifier	eUID		6280668	1					
ANR	6281121	ElseStatement	else		6280668	0					
ANR	6281122	IfStatement	"if ( r_str_casestr ( nn , "".jpg"" ) || r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" ) )"		6280668	0					
ANR	6281123	Condition	"r_str_casestr ( nn , "".jpg"" ) || r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" )"	94:13:2111:2196	6280668	0	True				
ANR	6281124	OrExpression	"r_str_casestr ( nn , "".jpg"" ) || r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" )"		6280668	0		||			
ANR	6281125	CallExpression	"r_str_casestr ( nn , "".jpg"" )"		6280668	0					
ANR	6281126	Callee	r_str_casestr		6280668	0					
ANR	6281127	Identifier	r_str_casestr		6280668	0					
ANR	6281128	ArgumentList	nn		6280668	1					
ANR	6281129	Argument	nn		6280668	0					
ANR	6281130	Identifier	nn		6280668	0					
ANR	6281131	Argument	""".jpg"""		6280668	1					
ANR	6281132	PrimaryExpression	""".jpg"""		6280668	0					
ANR	6281133	OrExpression	"r_str_casestr ( nn , "".png"" ) || r_str_casestr ( nn , "".gif"" )"		6280668	1		||			
ANR	6281134	CallExpression	"r_str_casestr ( nn , "".png"" )"		6280668	0					
ANR	6281135	Callee	r_str_casestr		6280668	0					
ANR	6281136	Identifier	r_str_casestr		6280668	0					
ANR	6281137	ArgumentList	nn		6280668	1					
ANR	6281138	Argument	nn		6280668	0					
ANR	6281139	Identifier	nn		6280668	0					
ANR	6281140	Argument	""".png"""		6280668	1					
ANR	6281141	PrimaryExpression	""".png"""		6280668	0					
ANR	6281142	CallExpression	"r_str_casestr ( nn , "".gif"" )"		6280668	1					
ANR	6281143	Callee	r_str_casestr		6280668	0					
ANR	6281144	Identifier	r_str_casestr		6280668	0					
ANR	6281145	ArgumentList	nn		6280668	1					
ANR	6281146	Argument	nn		6280668	0					
ANR	6281147	Identifier	nn		6280668	0					
ANR	6281148	Argument	""".gif"""		6280668	1					
ANR	6281149	PrimaryExpression	""".gif"""		6280668	0					
ANR	6281150	CompoundStatement		83:101:1917:1917	6280668	1					
ANR	6281151	ExpressionStatement	icon = eIMG	95:3:2204:2215	6280668	0	True				
ANR	6281152	AssignmentExpression	icon = eIMG		6280668	0		=			
ANR	6281153	Identifier	icon		6280668	0					
ANR	6281154	Identifier	eIMG		6280668	1					
ANR	6281155	ElseStatement	else		6280668	0					
ANR	6281156	IfStatement	if ( * nn == '.' )		6280668	0					
ANR	6281157	Condition	* nn == '.'	96:13:2230:2239	6280668	0	True				
ANR	6281158	EqualityExpression	* nn == '.'		6280668	0		==			
ANR	6281159	UnaryOperationExpression	* nn		6280668	0					
ANR	6281160	UnaryOperator	*		6280668	0					
ANR	6281161	Identifier	nn		6280668	1					
ANR	6281162	PrimaryExpression	'.'		6280668	1					
ANR	6281163	CompoundStatement		85:25:1960:1960	6280668	1					
ANR	6281164	ExpressionStatement	icon = eHID	97:3:2247:2258	6280668	0	True				
ANR	6281165	AssignmentExpression	icon = eHID		6280668	0		=			
ANR	6281166	Identifier	icon		6280668	0					
ANR	6281167	Identifier	eHID		6280668	1					
ANR	6281168	ExpressionStatement	"res = r_str_appendf ( res , ""%s %s\\n"" , icon , nn )"	99:2:2266:2312	6280668	8	True				
ANR	6281169	AssignmentExpression	"res = r_str_appendf ( res , ""%s %s\\n"" , icon , nn )"		6280668	0		=			
ANR	6281170	Identifier	res		6280668	0					
ANR	6281171	CallExpression	"r_str_appendf ( res , ""%s %s\\n"" , icon , nn )"		6280668	1					
ANR	6281172	Callee	r_str_appendf		6280668	0					
ANR	6281173	Identifier	r_str_appendf		6280668	0					
ANR	6281174	ArgumentList	res		6280668	1					
ANR	6281175	Argument	res		6280668	0					
ANR	6281176	Identifier	res		6280668	0					
ANR	6281177	Argument	"""%s %s\\n"""		6280668	1					
ANR	6281178	PrimaryExpression	"""%s %s\\n"""		6280668	0					
ANR	6281179	Argument	icon		6280668	2					
ANR	6281180	Identifier	icon		6280668	0					
ANR	6281181	Argument	nn		6280668	3					
ANR	6281182	Identifier	nn		6280668	0					
ANR	6281183	ElseStatement	else		6280668	0					
ANR	6281184	IfStatement	if ( printfmt == FMT_RAW )		6280668	0					
ANR	6281185	Condition	printfmt == FMT_RAW	100:12:2326:2344	6280668	0	True				
ANR	6281186	EqualityExpression	printfmt == FMT_RAW		6280668	0		==			
ANR	6281187	Identifier	printfmt		6280668	0					
ANR	6281188	Identifier	FMT_RAW		6280668	1					
ANR	6281189	CompoundStatement		89:33:2065:2065	6280668	1					
ANR	6281190	ExpressionStatement	"res = r_str_appendf ( res , ""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"" , isdir ? 'd' : fch , u_rwx ? u_rwx : ""-"" , r_str_rwx_i ( ( perm >> 3 ) & 7 ) , r_str_rwx_i ( perm & 7 ) , uid , gid , sz , nn )"	101:2:2351:2536	6280668	0	True				
ANR	6281191	AssignmentExpression	"res = r_str_appendf ( res , ""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"" , isdir ? 'd' : fch , u_rwx ? u_rwx : ""-"" , r_str_rwx_i ( ( perm >> 3 ) & 7 ) , r_str_rwx_i ( perm & 7 ) , uid , gid , sz , nn )"		6280668	0		=			
ANR	6281192	Identifier	res		6280668	0					
ANR	6281193	CallExpression	"r_str_appendf ( res , ""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"" , isdir ? 'd' : fch , u_rwx ? u_rwx : ""-"" , r_str_rwx_i ( ( perm >> 3 ) & 7 ) , r_str_rwx_i ( perm & 7 ) , uid , gid , sz , nn )"		6280668	1					
ANR	6281194	Callee	r_str_appendf		6280668	0					
ANR	6281195	Identifier	r_str_appendf		6280668	0					
ANR	6281196	ArgumentList	res		6280668	1					
ANR	6281197	Argument	res		6280668	0					
ANR	6281198	Identifier	res		6280668	0					
ANR	6281199	Argument	"""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"""		6280668	1					
ANR	6281200	PrimaryExpression	"""%c%s%s%s  1 %4d:%-4d  %-10d  %s\\n"""		6280668	0					
ANR	6281201	Argument	isdir ? 'd' : fch		6280668	2					
ANR	6281202	ConditionalExpression	isdir ? 'd' : fch		6280668	0					
ANR	6281203	Condition	isdir		6280668	0					
ANR	6281204	Identifier	isdir		6280668	0					
ANR	6281205	PrimaryExpression	'd'		6280668	1					
ANR	6281206	Identifier	fch		6280668	2					
ANR	6281207	Argument	"u_rwx ? u_rwx : ""-"""		6280668	3					
ANR	6281208	ConditionalExpression	"u_rwx ? u_rwx : ""-"""		6280668	0					
ANR	6281209	Condition	u_rwx		6280668	0					
ANR	6281210	Identifier	u_rwx		6280668	0					
ANR	6281211	Identifier	u_rwx		6280668	1					
ANR	6281212	PrimaryExpression	"""-"""		6280668	2					
ANR	6281213	Argument	r_str_rwx_i ( ( perm >> 3 ) & 7 )		6280668	4					
ANR	6281214	CallExpression	r_str_rwx_i ( ( perm >> 3 ) & 7 )		6280668	0					
ANR	6281215	Callee	r_str_rwx_i		6280668	0					
ANR	6281216	Identifier	r_str_rwx_i		6280668	0					
ANR	6281217	ArgumentList	( perm >> 3 ) & 7		6280668	1					
ANR	6281218	Argument	( perm >> 3 ) & 7		6280668	0					
ANR	6281219	BitAndExpression	( perm >> 3 ) & 7		6280668	0		&			
ANR	6281220	ShiftExpression	perm >> 3		6280668	0		>>			
ANR	6281221	Identifier	perm		6280668	0					
ANR	6281222	PrimaryExpression	3		6280668	1					
ANR	6281223	PrimaryExpression	7		6280668	1					
ANR	6281224	Argument	r_str_rwx_i ( perm & 7 )		6280668	5					
ANR	6281225	CallExpression	r_str_rwx_i ( perm & 7 )		6280668	0					
ANR	6281226	Callee	r_str_rwx_i		6280668	0					
ANR	6281227	Identifier	r_str_rwx_i		6280668	0					
ANR	6281228	ArgumentList	perm & 7		6280668	1					
ANR	6281229	Argument	perm & 7		6280668	0					
ANR	6281230	BitAndExpression	perm & 7		6280668	0		&			
ANR	6281231	Identifier	perm		6280668	0					
ANR	6281232	PrimaryExpression	7		6280668	1					
ANR	6281233	Argument	uid		6280668	6					
ANR	6281234	Identifier	uid		6280668	0					
ANR	6281235	Argument	gid		6280668	7					
ANR	6281236	Identifier	gid		6280668	0					
ANR	6281237	Argument	sz		6280668	8					
ANR	6281238	Identifier	sz		6280668	0					
ANR	6281239	Argument	nn		6280668	9					
ANR	6281240	Identifier	nn		6280668	0					
ANR	6281241	ElseStatement	else		6280668	0					
ANR	6281242	IfStatement	if ( printfmt == FMT_JSON )		6280668	0					
ANR	6281243	Condition	printfmt == FMT_JSON	107:12:2550:2569	6280668	0	True				
ANR	6281244	EqualityExpression	printfmt == FMT_JSON		6280668	0		==			
ANR	6281245	Identifier	printfmt		6280668	0					
ANR	6281246	Identifier	FMT_JSON		6280668	1					
ANR	6281247	CompoundStatement		96:34:2290:2290	6280668	1					
ANR	6281248	IfStatement	if ( nth > 0 )		6280668	0					
ANR	6281249	Condition	nth > 0	108:6:2580:2586	6280668	0	True				
ANR	6281250	RelationalExpression	nth > 0		6280668	0		>			
ANR	6281251	Identifier	nth		6280668	0					
ANR	6281252	PrimaryExpression	0		6280668	1					
ANR	6281253	CompoundStatement		97:15:2307:2307	6280668	1					
ANR	6281254	ExpressionStatement	"res = r_str_append ( res , "","" )"	109:3:2594:2623	6280668	0	True				
ANR	6281255	AssignmentExpression	"res = r_str_append ( res , "","" )"		6280668	0		=			
ANR	6281256	Identifier	res		6280668	0					
ANR	6281257	CallExpression	"r_str_append ( res , "","" )"		6280668	1					
ANR	6281258	Callee	r_str_append		6280668	0					
ANR	6281259	Identifier	r_str_append		6280668	0					
ANR	6281260	ArgumentList	res		6280668	1					
ANR	6281261	Argument	res		6280668	0					
ANR	6281262	Identifier	res		6280668	0					
ANR	6281263	Argument	""","""		6280668	1					
ANR	6281264	PrimaryExpression	""","""		6280668	0					
ANR	6281265	Statement	res	111:2:2631:2633	6280668	1	True				
ANR	6281266	Statement	=	111:6:2635:2635	6280668	2	True				
ANR	6281267	Statement	r_str_appendf	111:8:2637:2649	6280668	3	True				
ANR	6281268	Statement	(	111:22:2651:2651	6280668	4	True				
ANR	6281269	Statement	res	111:23:2652:2654	6280668	5	True				
ANR	6281270	Statement	","	111:26:2655:2655	6280668	6	True				
ANR	6281271	Statement	"""{\\""name\\"":\\""%s\\"",\\""size\\"":%d,\\""uid\\"":%d,"""	111:28:2657:2698	6280668	7	True				
ANR	6281272	Statement	"""\\""gid\\"":%d,\\""perm\\"":%d,\\""isdir\\"":%s}"""	112:3:2703:2740	6280668	8	True				
ANR	6281273	Statement	","	112:41:2741:2741	6280668	9	True				
ANR	6281274	Statement	name	113:3:2746:2749	6280668	10	True				
ANR	6281275	Statement	","	113:7:2750:2750	6280668	11	True				
ANR	6281276	Statement	sz	113:9:2752:2753	6280668	12	True				
ANR	6281277	Statement	","	113:11:2754:2754	6280668	13	True				
ANR	6281278	Statement	uid	113:13:2756:2758	6280668	14	True				
ANR	6281279	Statement	","	113:16:2759:2759	6280668	15	True				
ANR	6281280	Statement	gid	113:18:2761:2763	6280668	16	True				
ANR	6281281	Statement	","	113:21:2764:2764	6280668	17	True				
ANR	6281282	Statement	perm	113:23:2766:2769	6280668	18	True				
ANR	6281283	Statement	","	113:27:2770:2770	6280668	19	True				
ANR	6281284	Statement	isdir	113:29:2772:2776	6280668	20	True				
ANR	6281285	Statement	?	113:34:2777:2777	6280668	21	True				
ANR	6281286	Statement	"""true"""	113:36:2779:2784	6280668	22	True				
ANR	6281287	Statement	:	113:42:2785:2785	6280668	23	True				
ANR	6281288	Statement	"""false"""	113:44:2787:2793	6280668	24	True				
ANR	6281289	Statement	)	113:51:2794:2794	6280668	25	True				
ANR	6281290	ExpressionStatement		113:52:2795:2795	6280668	26	True				
ANR	6281291	ExpressionStatement	free ( nn )	115:1:2801:2810	6280668	14	True				
ANR	6281292	CallExpression	free ( nn )		6280668	0					
ANR	6281293	Callee	free		6280668	0					
ANR	6281294	Identifier	free		6280668	0					
ANR	6281295	ArgumentList	nn		6280668	1					
ANR	6281296	Argument	nn		6280668	0					
ANR	6281297	Identifier	nn		6280668	0					
ANR	6281298	ExpressionStatement	free ( u_rwx )	116:1:2813:2825	6280668	15	True				
ANR	6281299	CallExpression	free ( u_rwx )		6280668	0					
ANR	6281300	Callee	free		6280668	0					
ANR	6281301	Identifier	free		6280668	0					
ANR	6281302	ArgumentList	u_rwx		6280668	1					
ANR	6281303	Argument	u_rwx		6280668	0					
ANR	6281304	Identifier	u_rwx		6280668	0					
ANR	6281305	ReturnStatement	return res ;	117:1:2828:2838	6280668	16	True				
ANR	6281306	Identifier	res		6280668	0					
ANR	6281307	ReturnType	static char *		6280668	1					
ANR	6281308	Identifier	showfile		6280668	2					
ANR	6281309	ParameterList	"char * res , const int nth , const char * fpath , const char * name , int printfmt"		6280668	3					
ANR	6281310	Parameter	char * res	12:22:204:212	6280668	0	True				
ANR	6281311	ParameterType	char *		6280668	0					
ANR	6281312	Identifier	res		6280668	1					
ANR	6281313	Parameter	const int nth	12:33:215:227	6280668	1	True				
ANR	6281314	ParameterType	const int		6280668	0					
ANR	6281315	Identifier	nth		6280668	1					
ANR	6281316	Parameter	const char * fpath	12:48:230:246	6280668	2	True				
ANR	6281317	ParameterType	const char *		6280668	0					
ANR	6281318	Identifier	fpath		6280668	1					
ANR	6281319	Parameter	const char * name	12:67:249:264	6280668	3	True				
ANR	6281320	ParameterType	const char *		6280668	0					
ANR	6281321	Identifier	name		6280668	1					
ANR	6281322	Parameter	int printfmt	12:85:267:278	6280668	4	True				
ANR	6281323	ParameterType	int		6280668	0					
ANR	6281324	Identifier	printfmt		6280668	1					
ANR	6281325	CFGEntryNode	ENTRY		6280668		True				
ANR	6281326	CFGExitNode	EXIT		6280668		True				
ANR	6281327	Symbol	nn		6280668						
ANR	6281328	Symbol	r_file_is_directory		6280668						
ANR	6281329	Symbol	r_str_append		6280668						
ANR	6281330	Symbol	gid		6280668						
ANR	6281331	Symbol	r_str_casestr		6280668						
ANR	6281332	Symbol	perm		6280668						
ANR	6281333	Symbol	eUID		6280668						
ANR	6281334	Symbol	eDIR		6280668						
ANR	6281335	Symbol	S_IFLNK		6280668						
ANR	6281336	Symbol	icon		6280668						
ANR	6281337	Symbol	fch		6280668						
ANR	6281338	Symbol	sb		6280668						
ANR	6281339	Symbol	S_IFMT		6280668						
ANR	6281340	Symbol	uid		6280668						
ANR	6281341	Symbol	strncmp		6280668						
ANR	6281342	Symbol	needs_newline		6280668						
ANR	6281343	Symbol	FMT_RAW		6280668						
ANR	6281344	Symbol	u_rwx		6280668						
ANR	6281345	Symbol	S_IXUSR		6280668						
ANR	6281346	Symbol	& sb		6280668						
ANR	6281347	Symbol	fpath		6280668						
ANR	6281348	Symbol	r_str_rwx_i		6280668						
ANR	6281349	Symbol	isdir		6280668						
ANR	6281350	Symbol	res		6280668						
ANR	6281351	Symbol	nth		6280668						
ANR	6281352	Symbol	NULL		6280668						
ANR	6281353	Symbol	sb . st_uid		6280668						
ANR	6281354	Symbol	* nn		6280668						
ANR	6281355	Symbol	sz		6280668						
ANR	6281356	Symbol	lstat		6280668						
ANR	6281357	Symbol	eANY		6280668						
ANR	6281358	Symbol	eLNK		6280668						
ANR	6281359	Symbol	* u_rwx		6280668						
ANR	6281360	Symbol	n		6280668						
ANR	6281361	Symbol	eIMG		6280668						
ANR	6281362	Symbol	eHID		6280668						
ANR	6281363	Symbol	r_file_size		6280668						
ANR	6281364	Symbol	ifmt		6280668						
ANR	6281365	Symbol	sb . st_gid		6280668						
ANR	6281366	Symbol	r_str_appendf		6280668						
ANR	6281367	Symbol	S_ISUID		6280668						
ANR	6281368	Symbol	name		6280668						
ANR	6281369	Symbol	sb . st_mode		6280668						
ANR	6281370	Symbol	printfmt		6280668						
ANR	6281371	Symbol	strdup		6280668						
ANR	6281372	Symbol	FMT_JSON		6280668						
ANR	6281373	Function	r_syscmd_ls	121:0:2910:5671							
ANR	6281374	FunctionDef	r_syscmd_ls (const char * input)		6281373	0					
ANR	6281375	CompoundStatement		121:43:2953:5671	6281373	0					
ANR	6281376	IdentifierDeclStatement	char * res = NULL ;	122:1:2956:2972	6281373	0	True				
ANR	6281377	IdentifierDecl	* res = NULL		6281373	0					
ANR	6281378	IdentifierDeclType	char *		6281373	0					
ANR	6281379	Identifier	res		6281373	1					
ANR	6281380	AssignmentExpression	* res = NULL		6281373	2		=			
ANR	6281381	Identifier	NULL		6281373	0					
ANR	6281382	Identifier	NULL		6281373	1					
ANR	6281383	IdentifierDeclStatement	"const char * path = ""."" ;"	123:1:2975:2997	6281373	1	True				
ANR	6281384	IdentifierDecl	"* path = ""."""		6281373	0					
ANR	6281385	IdentifierDeclType	const char *		6281373	0					
ANR	6281386	Identifier	path		6281373	1					
ANR	6281387	AssignmentExpression	"* path = ""."""		6281373	2		=			
ANR	6281388	Identifier	path		6281373	0					
ANR	6281389	PrimaryExpression	"""."""		6281373	1					
ANR	6281390	IdentifierDeclStatement	char * d = NULL ;	124:1:3000:3014	6281373	2	True				
ANR	6281391	IdentifierDecl	* d = NULL		6281373	0					
ANR	6281392	IdentifierDeclType	char *		6281373	0					
ANR	6281393	Identifier	d		6281373	1					
ANR	6281394	AssignmentExpression	* d = NULL		6281373	2		=			
ANR	6281395	Identifier	NULL		6281373	0					
ANR	6281396	Identifier	NULL		6281373	1					
ANR	6281397	IdentifierDeclStatement	char * p = NULL ;	125:1:3017:3031	6281373	3	True				
ANR	6281398	IdentifierDecl	* p = NULL		6281373	0					
ANR	6281399	IdentifierDeclType	char *		6281373	0					
ANR	6281400	Identifier	p		6281373	1					
ANR	6281401	AssignmentExpression	* p = NULL		6281373	2		=			
ANR	6281402	Identifier	NULL		6281373	0					
ANR	6281403	Identifier	NULL		6281373	1					
ANR	6281404	IdentifierDeclStatement	char * homepath = NULL ;	126:1:3034:3055	6281373	4	True				
ANR	6281405	IdentifierDecl	* homepath = NULL		6281373	0					
ANR	6281406	IdentifierDeclType	char *		6281373	0					
ANR	6281407	Identifier	homepath		6281373	1					
ANR	6281408	AssignmentExpression	* homepath = NULL		6281373	2		=			
ANR	6281409	Identifier	NULL		6281373	0					
ANR	6281410	Identifier	NULL		6281373	1					
ANR	6281411	IdentifierDeclStatement	char * pattern = NULL ;	127:1:3058:3078	6281373	5	True				
ANR	6281412	IdentifierDecl	* pattern = NULL		6281373	0					
ANR	6281413	IdentifierDeclType	char *		6281373	0					
ANR	6281414	Identifier	pattern		6281373	1					
ANR	6281415	AssignmentExpression	* pattern = NULL		6281373	2		=			
ANR	6281416	Identifier	NULL		6281373	0					
ANR	6281417	Identifier	NULL		6281373	1					
ANR	6281418	IdentifierDeclStatement	int printfmt = 0 ;	128:1:3081:3097	6281373	6	True				
ANR	6281419	IdentifierDecl	printfmt = 0		6281373	0					
ANR	6281420	IdentifierDeclType	int		6281373	0					
ANR	6281421	Identifier	printfmt		6281373	1					
ANR	6281422	AssignmentExpression	printfmt = 0		6281373	2		=			
ANR	6281423	Identifier	printfmt		6281373	0					
ANR	6281424	PrimaryExpression	0		6281373	1					
ANR	6281425	IdentifierDeclStatement	RListIter * iter ;	129:1:3100:3115	6281373	7	True				
ANR	6281426	IdentifierDecl	* iter		6281373	0					
ANR	6281427	IdentifierDeclType	RListIter *		6281373	0					
ANR	6281428	Identifier	iter		6281373	1					
ANR	6281429	IdentifierDeclStatement	RList * files ;	130:1:3118:3130	6281373	8	True				
ANR	6281430	IdentifierDecl	* files		6281373	0					
ANR	6281431	IdentifierDeclType	RList *		6281373	0					
ANR	6281432	Identifier	files		6281373	1					
ANR	6281433	IdentifierDeclStatement	char * name ;	131:1:3133:3143	6281373	9	True				
ANR	6281434	IdentifierDecl	* name		6281373	0					
ANR	6281435	IdentifierDeclType	char *		6281373	0					
ANR	6281436	Identifier	name		6281373	1					
ANR	6281437	IdentifierDeclStatement	char * dir ;	132:1:3146:3155	6281373	10	True				
ANR	6281438	IdentifierDecl	* dir		6281373	0					
ANR	6281439	IdentifierDeclType	char *		6281373	0					
ANR	6281440	Identifier	dir		6281373	1					
ANR	6281441	IdentifierDeclStatement	int off ;	133:1:3158:3165	6281373	11	True				
ANR	6281442	IdentifierDecl	off		6281373	0					
ANR	6281443	IdentifierDeclType	int		6281373	0					
ANR	6281444	Identifier	off		6281373	1					
ANR	6281445	IfStatement	if ( ! input )		6281373	12					
ANR	6281446	Condition	! input	134:5:3172:3177	6281373	0	True				
ANR	6281447	UnaryOperationExpression	! input		6281373	0					
ANR	6281448	UnaryOperator	!		6281373	0					
ANR	6281449	Identifier	input		6281373	1					
ANR	6281450	CompoundStatement		14:13:226:226	6281373	1					
ANR	6281451	ExpressionStatement	"input = """""	135:2:3184:3194	6281373	0	True				
ANR	6281452	AssignmentExpression	"input = """""		6281373	0		=			
ANR	6281453	Identifier	input		6281373	0					
ANR	6281454	PrimaryExpression	""""""		6281373	1					
ANR	6281455	ExpressionStatement	"path = ""."""	136:2:3198:3208	6281373	1	True				
ANR	6281456	AssignmentExpression	"path = ""."""		6281373	0		=			
ANR	6281457	Identifier	path		6281373	0					
ANR	6281458	PrimaryExpression	"""."""		6281373	1					
ANR	6281459	IfStatement	if ( * input == 'q' )		6281373	13					
ANR	6281460	Condition	* input == 'q'	138:5:3218:3230	6281373	0	True				
ANR	6281461	EqualityExpression	* input == 'q'		6281373	0		==			
ANR	6281462	UnaryOperationExpression	* input		6281373	0					
ANR	6281463	UnaryOperator	*		6281373	0					
ANR	6281464	Identifier	input		6281373	1					
ANR	6281465	PrimaryExpression	'q'		6281373	1					
ANR	6281466	CompoundStatement		18:20:279:279	6281373	1					
ANR	6281467	ExpressionStatement	printfmt = 'q'	139:2:3237:3251	6281373	0	True				
ANR	6281468	AssignmentExpression	printfmt = 'q'		6281373	0		=			
ANR	6281469	Identifier	printfmt		6281373	0					
ANR	6281470	PrimaryExpression	'q'		6281373	1					
ANR	6281471	ExpressionStatement	input ++	140:2:3255:3262	6281373	1	True				
ANR	6281472	PostIncDecOperationExpression	input ++		6281373	0					
ANR	6281473	Identifier	input		6281373	0					
ANR	6281474	IncDec	++		6281373	1					
ANR	6281475	IfStatement	if ( r_sandbox_enable ( 0 ) )		6281373	14					
ANR	6281476	Condition	r_sandbox_enable ( 0 )	142:5:3272:3291	6281373	0	True				
ANR	6281477	CallExpression	r_sandbox_enable ( 0 )		6281373	0					
ANR	6281478	Callee	r_sandbox_enable		6281373	0					
ANR	6281479	Identifier	r_sandbox_enable		6281373	0					
ANR	6281480	ArgumentList	0		6281373	1					
ANR	6281481	Argument	0		6281373	0					
ANR	6281482	PrimaryExpression	0		6281373	0					
ANR	6281483	CompoundStatement		22:27:340:340	6281373	1					
ANR	6281484	ExpressionStatement	"eprintf ( ""Sandbox forbids listing directories\\n"" )"	143:2:3298:3347	6281373	0	True				
ANR	6281485	CallExpression	"eprintf ( ""Sandbox forbids listing directories\\n"" )"		6281373	0					
ANR	6281486	Callee	eprintf		6281373	0					
ANR	6281487	Identifier	eprintf		6281373	0					
ANR	6281488	ArgumentList	"""Sandbox forbids listing directories\\n"""		6281373	1					
ANR	6281489	Argument	"""Sandbox forbids listing directories\\n"""		6281373	0					
ANR	6281490	PrimaryExpression	"""Sandbox forbids listing directories\\n"""		6281373	0					
ANR	6281491	ReturnStatement	return NULL ;	144:2:3351:3362	6281373	1	True				
ANR	6281492	Identifier	NULL		6281373	0					
ANR	6281493	IfStatement	if ( * input && input [ 0 ] == ' ' )		6281373	15					
ANR	6281494	Condition	* input && input [ 0 ] == ' '	146:5:3372:3396	6281373	0	True				
ANR	6281495	AndExpression	* input && input [ 0 ] == ' '		6281373	0		&&			
ANR	6281496	UnaryOperationExpression	* input		6281373	0					
ANR	6281497	UnaryOperator	*		6281373	0					
ANR	6281498	Identifier	input		6281373	1					
ANR	6281499	EqualityExpression	input [ 0 ] == ' '		6281373	1		==			
ANR	6281500	ArrayIndexing	input [ 0 ]		6281373	0					
ANR	6281501	Identifier	input		6281373	0					
ANR	6281502	PrimaryExpression	0		6281373	1					
ANR	6281503	PrimaryExpression	' '		6281373	1					
ANR	6281504	CompoundStatement		26:32:445:445	6281373	1					
ANR	6281505	ExpressionStatement	input ++	147:2:3403:3410	6281373	0	True				
ANR	6281506	PostIncDecOperationExpression	input ++		6281373	0					
ANR	6281507	Identifier	input		6281373	0					
ANR	6281508	IncDec	++		6281373	1					
ANR	6281509	IfStatement	if ( * input )		6281373	16					
ANR	6281510	Condition	* input	149:5:3420:3425	6281373	0	True				
ANR	6281511	UnaryOperationExpression	* input		6281373	0					
ANR	6281512	UnaryOperator	*		6281373	0					
ANR	6281513	Identifier	input		6281373	1					
ANR	6281514	CompoundStatement		29:13:474:474	6281373	1					
ANR	6281515	IfStatement	"if ( ( ! strncmp ( input , ""-h"" , 2 ) ) )"		6281373	0					
ANR	6281516	Condition	"! strncmp ( input , ""-h"" , 2 )"	150:6:3436:3462	6281373	0	True				
ANR	6281517	UnaryOperationExpression	"! strncmp ( input , ""-h"" , 2 )"		6281373	0					
ANR	6281518	UnaryOperator	!		6281373	0					
ANR	6281519	CallExpression	"strncmp ( input , ""-h"" , 2 )"		6281373	1					
ANR	6281520	Callee	strncmp		6281373	0					
ANR	6281521	Identifier	strncmp		6281373	0					
ANR	6281522	ArgumentList	input		6281373	1					
ANR	6281523	Argument	input		6281373	0					
ANR	6281524	Identifier	input		6281373	0					
ANR	6281525	Argument	"""-h"""		6281373	1					
ANR	6281526	PrimaryExpression	"""-h"""		6281373	0					
ANR	6281527	Argument	2		6281373	2					
ANR	6281528	PrimaryExpression	2		6281373	0					
ANR	6281529	CompoundStatement		30:35:511:511	6281373	1					
ANR	6281530	ExpressionStatement	"eprintf ( ""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"" )"	151:3:3470:3538	6281373	0	True				
ANR	6281531	CallExpression	"eprintf ( ""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"" )"		6281373	0					
ANR	6281532	Callee	eprintf		6281373	0					
ANR	6281533	Identifier	eprintf		6281373	0					
ANR	6281534	ArgumentList	"""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"""		6281373	1					
ANR	6281535	Argument	"""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"""		6281373	0					
ANR	6281536	PrimaryExpression	"""Usage: ls ([-e,-l,-j,-q]) ([path]) # long, json, quiet\\n"""		6281373	0					
ANR	6281537	ElseStatement	else		6281373	0					
ANR	6281538	IfStatement	"if ( ( ! strncmp ( input , ""-e"" , 2 ) ) )"		6281373	0					
ANR	6281539	Condition	"! strncmp ( input , ""-e"" , 2 )"	152:13:3553:3579	6281373	0	True				
ANR	6281540	UnaryOperationExpression	"! strncmp ( input , ""-e"" , 2 )"		6281373	0					
ANR	6281541	UnaryOperator	!		6281373	0					
ANR	6281542	CallExpression	"strncmp ( input , ""-e"" , 2 )"		6281373	1					
ANR	6281543	Callee	strncmp		6281373	0					
ANR	6281544	Identifier	strncmp		6281373	0					
ANR	6281545	ArgumentList	input		6281373	1					
ANR	6281546	Argument	input		6281373	0					
ANR	6281547	Identifier	input		6281373	0					
ANR	6281548	Argument	"""-e"""		6281373	1					
ANR	6281549	PrimaryExpression	"""-e"""		6281373	0					
ANR	6281550	Argument	2		6281373	2					
ANR	6281551	PrimaryExpression	2		6281373	0					
ANR	6281552	CompoundStatement		32:42:628:628	6281373	1					
ANR	6281553	ExpressionStatement	printfmt = 'e'	153:3:3587:3601	6281373	0	True				
ANR	6281554	AssignmentExpression	printfmt = 'e'		6281373	0		=			
ANR	6281555	Identifier	printfmt		6281373	0					
ANR	6281556	PrimaryExpression	'e'		6281373	1					
ANR	6281557	ExpressionStatement	path = r_str_trim_ro ( path + 1 )	154:3:3606:3637	6281373	1	True				
ANR	6281558	AssignmentExpression	path = r_str_trim_ro ( path + 1 )		6281373	0		=			
ANR	6281559	Identifier	path		6281373	0					
ANR	6281560	CallExpression	r_str_trim_ro ( path + 1 )		6281373	1					
ANR	6281561	Callee	r_str_trim_ro		6281373	0					
ANR	6281562	Identifier	r_str_trim_ro		6281373	0					
ANR	6281563	ArgumentList	path + 1		6281373	1					
ANR	6281564	Argument	path + 1		6281373	0					
ANR	6281565	AdditiveExpression	path + 1		6281373	0		+			
ANR	6281566	Identifier	path		6281373	0					
ANR	6281567	PrimaryExpression	1		6281373	1					
ANR	6281568	ElseStatement	else		6281373	0					
ANR	6281569	IfStatement	"if ( ( ! strncmp ( input , ""-q"" , 2 ) ) )"		6281373	0					
ANR	6281570	Condition	"! strncmp ( input , ""-q"" , 2 )"	155:13:3652:3678	6281373	0	True				
ANR	6281571	UnaryOperationExpression	"! strncmp ( input , ""-q"" , 2 )"		6281373	0					
ANR	6281572	UnaryOperator	!		6281373	0					
ANR	6281573	CallExpression	"strncmp ( input , ""-q"" , 2 )"		6281373	1					
ANR	6281574	Callee	strncmp		6281373	0					
ANR	6281575	Identifier	strncmp		6281373	0					
ANR	6281576	ArgumentList	input		6281373	1					
ANR	6281577	Argument	input		6281373	0					
ANR	6281578	Identifier	input		6281373	0					
ANR	6281579	Argument	"""-q"""		6281373	1					
ANR	6281580	PrimaryExpression	"""-q"""		6281373	0					
ANR	6281581	Argument	2		6281373	2					
ANR	6281582	PrimaryExpression	2		6281373	0					
ANR	6281583	CompoundStatement		35:42:727:727	6281373	1					
ANR	6281584	ExpressionStatement	printfmt = 'q'	156:3:3686:3700	6281373	0	True				
ANR	6281585	AssignmentExpression	printfmt = 'q'		6281373	0		=			
ANR	6281586	Identifier	printfmt		6281373	0					
ANR	6281587	PrimaryExpression	'q'		6281373	1					
ANR	6281588	ExpressionStatement	path = r_str_trim_ro ( path + 1 )	157:3:3705:3736	6281373	1	True				
ANR	6281589	AssignmentExpression	path = r_str_trim_ro ( path + 1 )		6281373	0		=			
ANR	6281590	Identifier	path		6281373	0					
ANR	6281591	CallExpression	r_str_trim_ro ( path + 1 )		6281373	1					
ANR	6281592	Callee	r_str_trim_ro		6281373	0					
ANR	6281593	Identifier	r_str_trim_ro		6281373	0					
ANR	6281594	ArgumentList	path + 1		6281373	1					
ANR	6281595	Argument	path + 1		6281373	0					
ANR	6281596	AdditiveExpression	path + 1		6281373	0		+			
ANR	6281597	Identifier	path		6281373	0					
ANR	6281598	PrimaryExpression	1		6281373	1					
ANR	6281599	ElseStatement	else		6281373	0					
ANR	6281600	IfStatement	"if ( ( ! strncmp ( input , ""-l"" , 2 ) ) || ( ! strncmp ( input , ""-j"" , 2 ) ) )"		6281373	0					
ANR	6281601	Condition	"( ! strncmp ( input , ""-l"" , 2 ) ) || ( ! strncmp ( input , ""-j"" , 2 ) )"	158:13:3751:3808	6281373	0	True				
ANR	6281602	OrExpression	"( ! strncmp ( input , ""-l"" , 2 ) ) || ( ! strncmp ( input , ""-j"" , 2 ) )"		6281373	0		||			
ANR	6281603	UnaryOperationExpression	"! strncmp ( input , ""-l"" , 2 )"		6281373	0					
ANR	6281604	UnaryOperator	!		6281373	0					
ANR	6281605	CallExpression	"strncmp ( input , ""-l"" , 2 )"		6281373	1					
ANR	6281606	Callee	strncmp		6281373	0					
ANR	6281607	Identifier	strncmp		6281373	0					
ANR	6281608	ArgumentList	input		6281373	1					
ANR	6281609	Argument	input		6281373	0					
ANR	6281610	Identifier	input		6281373	0					
ANR	6281611	Argument	"""-l"""		6281373	1					
ANR	6281612	PrimaryExpression	"""-l"""		6281373	0					
ANR	6281613	Argument	2		6281373	2					
ANR	6281614	PrimaryExpression	2		6281373	0					
ANR	6281615	UnaryOperationExpression	"! strncmp ( input , ""-j"" , 2 )"		6281373	1					
ANR	6281616	UnaryOperator	!		6281373	0					
ANR	6281617	CallExpression	"strncmp ( input , ""-j"" , 2 )"		6281373	1					
ANR	6281618	Callee	strncmp		6281373	0					
ANR	6281619	Identifier	strncmp		6281373	0					
ANR	6281620	ArgumentList	input		6281373	1					
ANR	6281621	Argument	input		6281373	0					
ANR	6281622	Identifier	input		6281373	0					
ANR	6281623	Argument	"""-j"""		6281373	1					
ANR	6281624	PrimaryExpression	"""-j"""		6281373	0					
ANR	6281625	Argument	2		6281373	2					
ANR	6281626	PrimaryExpression	2		6281373	0					
ANR	6281627	CompoundStatement		38:73:857:857	6281373	1					
ANR	6281628	IfStatement	if ( input [ 2 ] )		6281373	0					
ANR	6281629	Condition	input [ 2 ]	160:7:3838:3845	6281373	0	True				
ANR	6281630	ArrayIndexing	input [ 2 ]		6281373	0					
ANR	6281631	Identifier	input		6281373	0					
ANR	6281632	PrimaryExpression	2		6281373	1					
ANR	6281633	CompoundStatement		40:17:894:894	6281373	1					
ANR	6281634	ExpressionStatement	printfmt = ( input [ 2 ] == 'j' ) ? FMT_JSON : FMT_RAW	161:4:3854:3903	6281373	0	True				
ANR	6281635	AssignmentExpression	printfmt = ( input [ 2 ] == 'j' ) ? FMT_JSON : FMT_RAW		6281373	0		=			
ANR	6281636	Identifier	printfmt		6281373	0					
ANR	6281637	ConditionalExpression	( input [ 2 ] == 'j' ) ? FMT_JSON : FMT_RAW		6281373	1					
ANR	6281638	Condition	input [ 2 ] == 'j'		6281373	0					
ANR	6281639	EqualityExpression	input [ 2 ] == 'j'		6281373	0		==			
ANR	6281640	ArrayIndexing	input [ 2 ]		6281373	0					
ANR	6281641	Identifier	input		6281373	0					
ANR	6281642	PrimaryExpression	2		6281373	1					
ANR	6281643	PrimaryExpression	'j'		6281373	1					
ANR	6281644	Identifier	FMT_JSON		6281373	1					
ANR	6281645	Identifier	FMT_RAW		6281373	2					
ANR	6281646	ExpressionStatement	path = r_str_trim_ro ( input + 2 )	162:4:3909:3941	6281373	1	True				
ANR	6281647	AssignmentExpression	path = r_str_trim_ro ( input + 2 )		6281373	0		=			
ANR	6281648	Identifier	path		6281373	0					
ANR	6281649	CallExpression	r_str_trim_ro ( input + 2 )		6281373	1					
ANR	6281650	Callee	r_str_trim_ro		6281373	0					
ANR	6281651	Identifier	r_str_trim_ro		6281373	0					
ANR	6281652	ArgumentList	input + 2		6281373	1					
ANR	6281653	Argument	input + 2		6281373	0					
ANR	6281654	AdditiveExpression	input + 2		6281373	0		+			
ANR	6281655	Identifier	input		6281373	0					
ANR	6281656	PrimaryExpression	2		6281373	1					
ANR	6281657	IfStatement	if ( ! * path )		6281373	2					
ANR	6281658	Condition	! * path	163:8:3951:3956	6281373	0	True				
ANR	6281659	UnaryOperationExpression	! * path		6281373	0					
ANR	6281660	UnaryOperator	!		6281373	0					
ANR	6281661	UnaryOperationExpression	* path		6281373	1					
ANR	6281662	UnaryOperator	*		6281373	0					
ANR	6281663	Identifier	path		6281373	1					
ANR	6281664	CompoundStatement		43:16:1005:1005	6281373	1					
ANR	6281665	ExpressionStatement	"path = ""."""	164:5:3966:3976	6281373	0	True				
ANR	6281666	AssignmentExpression	"path = ""."""		6281373	0		=			
ANR	6281667	Identifier	path		6281373	0					
ANR	6281668	PrimaryExpression	"""."""		6281373	1					
ANR	6281669	ElseStatement	else		6281373	0					
ANR	6281670	CompoundStatement		46:10:1040:1040	6281373	0					
ANR	6281671	ExpressionStatement	printfmt = FMT_RAW	167:4:4000:4018	6281373	0	True				
ANR	6281672	AssignmentExpression	printfmt = FMT_RAW		6281373	0		=			
ANR	6281673	Identifier	printfmt		6281373	0					
ANR	6281674	Identifier	FMT_RAW		6281373	1					
ANR	6281675	ElseStatement	else		6281373	0					
ANR	6281676	CompoundStatement		49:9:1080:1080	6281373	0					
ANR	6281677	ExpressionStatement	path = input	170:3:4039:4051	6281373	0	True				
ANR	6281678	AssignmentExpression	path = input		6281373	0		=			
ANR	6281679	Identifier	path		6281373	0					
ANR	6281680	Identifier	input		6281373	1					
ANR	6281681	IfStatement	if ( ! path || ! * path )		6281373	17					
ANR	6281682	Condition	! path || ! * path	173:5:4065:4079	6281373	0	True				
ANR	6281683	OrExpression	! path || ! * path		6281373	0		||			
ANR	6281684	UnaryOperationExpression	! path		6281373	0					
ANR	6281685	UnaryOperator	!		6281373	0					
ANR	6281686	Identifier	path		6281373	1					
ANR	6281687	UnaryOperationExpression	! * path		6281373	1					
ANR	6281688	UnaryOperator	!		6281373	0					
ANR	6281689	UnaryOperationExpression	* path		6281373	1					
ANR	6281690	UnaryOperator	*		6281373	0					
ANR	6281691	Identifier	path		6281373	1					
ANR	6281692	CompoundStatement		53:22:1128:1128	6281373	1					
ANR	6281693	ExpressionStatement	"path = ""."""	174:2:4086:4096	6281373	0	True				
ANR	6281694	AssignmentExpression	"path = ""."""		6281373	0		=			
ANR	6281695	Identifier	path		6281373	0					
ANR	6281696	PrimaryExpression	"""."""		6281373	1					
ANR	6281697	ElseStatement	else		6281373	0					
ANR	6281698	IfStatement	"if ( ! strncmp ( path , ""~/"" , 2 ) )"		6281373	0					
ANR	6281699	Condition	"! strncmp ( path , ""~/"" , 2 )"	175:12:4110:4133	6281373	0	True				
ANR	6281700	UnaryOperationExpression	"! strncmp ( path , ""~/"" , 2 )"		6281373	0					
ANR	6281701	UnaryOperator	!		6281373	0					
ANR	6281702	CallExpression	"strncmp ( path , ""~/"" , 2 )"		6281373	1					
ANR	6281703	Callee	strncmp		6281373	0					
ANR	6281704	Identifier	strncmp		6281373	0					
ANR	6281705	ArgumentList	path		6281373	1					
ANR	6281706	Argument	path		6281373	0					
ANR	6281707	Identifier	path		6281373	0					
ANR	6281708	Argument	"""~/"""		6281373	1					
ANR	6281709	PrimaryExpression	"""~/"""		6281373	0					
ANR	6281710	Argument	2		6281373	2					
ANR	6281711	PrimaryExpression	2		6281373	0					
ANR	6281712	CompoundStatement		55:38:1182:1182	6281373	1					
ANR	6281713	ExpressionStatement	homepath = r_str_home ( path + 2 )	176:2:4140:4172	6281373	0	True				
ANR	6281714	AssignmentExpression	homepath = r_str_home ( path + 2 )		6281373	0		=			
ANR	6281715	Identifier	homepath		6281373	0					
ANR	6281716	CallExpression	r_str_home ( path + 2 )		6281373	1					
ANR	6281717	Callee	r_str_home		6281373	0					
ANR	6281718	Identifier	r_str_home		6281373	0					
ANR	6281719	ArgumentList	path + 2		6281373	1					
ANR	6281720	Argument	path + 2		6281373	0					
ANR	6281721	AdditiveExpression	path + 2		6281373	0		+			
ANR	6281722	Identifier	path		6281373	0					
ANR	6281723	PrimaryExpression	2		6281373	1					
ANR	6281724	IfStatement	if ( homepath )		6281373	1					
ANR	6281725	Condition	homepath	177:6:4180:4187	6281373	0	True				
ANR	6281726	Identifier	homepath		6281373	0					
ANR	6281727	CompoundStatement		57:16:1236:1236	6281373	1					
ANR	6281728	ExpressionStatement	path = ( const char * ) homepath	178:3:4195:4224	6281373	0	True				
ANR	6281729	AssignmentExpression	path = ( const char * ) homepath		6281373	0		=			
ANR	6281730	Identifier	path		6281373	0					
ANR	6281731	CastExpression	( const char * ) homepath		6281373	1					
ANR	6281732	CastTarget	const char *		6281373	0					
ANR	6281733	Identifier	homepath		6281373	1					
ANR	6281734	ElseStatement	else		6281373	0					
ANR	6281735	IfStatement	if ( * path == '$' )		6281373	0					
ANR	6281736	Condition	* path == '$'	180:12:4242:4253	6281373	0	True				
ANR	6281737	EqualityExpression	* path == '$'		6281373	0		==			
ANR	6281738	UnaryOperationExpression	* path		6281373	0					
ANR	6281739	UnaryOperator	*		6281373	0					
ANR	6281740	Identifier	path		6281373	1					
ANR	6281741	PrimaryExpression	'$'		6281373	1					
ANR	6281742	CompoundStatement		60:26:1302:1302	6281373	1					
ANR	6281743	IfStatement	"if ( ! strncmp ( path + 1 , ""home"" , 4 ) || ! strncmp ( path + 1 , ""HOME"" , 4 ) )"		6281373	0					
ANR	6281744	Condition	"! strncmp ( path + 1 , ""home"" , 4 ) || ! strncmp ( path + 1 , ""HOME"" , 4 )"	181:6:4264:4327	6281373	0	True				
ANR	6281745	OrExpression	"! strncmp ( path + 1 , ""home"" , 4 ) || ! strncmp ( path + 1 , ""HOME"" , 4 )"		6281373	0		||			
ANR	6281746	UnaryOperationExpression	"! strncmp ( path + 1 , ""home"" , 4 )"		6281373	0					
ANR	6281747	UnaryOperator	!		6281373	0					
ANR	6281748	CallExpression	"strncmp ( path + 1 , ""home"" , 4 )"		6281373	1					
ANR	6281749	Callee	strncmp		6281373	0					
ANR	6281750	Identifier	strncmp		6281373	0					
ANR	6281751	ArgumentList	path + 1		6281373	1					
ANR	6281752	Argument	path + 1		6281373	0					
ANR	6281753	AdditiveExpression	path + 1		6281373	0		+			
ANR	6281754	Identifier	path		6281373	0					
ANR	6281755	PrimaryExpression	1		6281373	1					
ANR	6281756	Argument	"""home"""		6281373	1					
ANR	6281757	PrimaryExpression	"""home"""		6281373	0					
ANR	6281758	Argument	4		6281373	2					
ANR	6281759	PrimaryExpression	4		6281373	0					
ANR	6281760	UnaryOperationExpression	"! strncmp ( path + 1 , ""HOME"" , 4 )"		6281373	1					
ANR	6281761	UnaryOperator	!		6281373	0					
ANR	6281762	CallExpression	"strncmp ( path + 1 , ""HOME"" , 4 )"		6281373	1					
ANR	6281763	Callee	strncmp		6281373	0					
ANR	6281764	Identifier	strncmp		6281373	0					
ANR	6281765	ArgumentList	path + 1		6281373	1					
ANR	6281766	Argument	path + 1		6281373	0					
ANR	6281767	AdditiveExpression	path + 1		6281373	0		+			
ANR	6281768	Identifier	path		6281373	0					
ANR	6281769	PrimaryExpression	1		6281373	1					
ANR	6281770	Argument	"""HOME"""		6281373	1					
ANR	6281771	PrimaryExpression	"""HOME"""		6281373	0					
ANR	6281772	Argument	4		6281373	2					
ANR	6281773	PrimaryExpression	4		6281373	0					
ANR	6281774	CompoundStatement		61:72:1376:1376	6281373	1					
ANR	6281775	ExpressionStatement	homepath = r_str_home ( ( strlen ( path ) > 5 ) ? path + 6 : NULL )	182:3:4335:4394	6281373	0	True				
ANR	6281776	AssignmentExpression	homepath = r_str_home ( ( strlen ( path ) > 5 ) ? path + 6 : NULL )		6281373	0		=			
ANR	6281777	Identifier	homepath		6281373	0					
ANR	6281778	CallExpression	r_str_home ( ( strlen ( path ) > 5 ) ? path + 6 : NULL )		6281373	1					
ANR	6281779	Callee	r_str_home		6281373	0					
ANR	6281780	Identifier	r_str_home		6281373	0					
ANR	6281781	ArgumentList	( strlen ( path ) > 5 ) ? path + 6 : NULL		6281373	1					
ANR	6281782	Argument	( strlen ( path ) > 5 ) ? path + 6 : NULL		6281373	0					
ANR	6281783	ConditionalExpression	( strlen ( path ) > 5 ) ? path + 6 : NULL		6281373	0					
ANR	6281784	Condition	strlen ( path ) > 5		6281373	0					
ANR	6281785	RelationalExpression	strlen ( path ) > 5		6281373	0		>			
ANR	6281786	CallExpression	strlen ( path )		6281373	0					
ANR	6281787	Callee	strlen		6281373	0					
ANR	6281788	Identifier	strlen		6281373	0					
ANR	6281789	ArgumentList	path		6281373	1					
ANR	6281790	Argument	path		6281373	0					
ANR	6281791	Identifier	path		6281373	0					
ANR	6281792	PrimaryExpression	5		6281373	1					
ANR	6281793	AdditiveExpression	path + 6		6281373	1		+			
ANR	6281794	Identifier	path		6281373	0					
ANR	6281795	PrimaryExpression	6		6281373	1					
ANR	6281796	Identifier	NULL		6281373	2					
ANR	6281797	IfStatement	if ( homepath )		6281373	1					
ANR	6281798	Condition	homepath	183:7:4403:4410	6281373	0	True				
ANR	6281799	Identifier	homepath		6281373	0					
ANR	6281800	CompoundStatement		63:17:1459:1459	6281373	1					
ANR	6281801	ExpressionStatement	path = ( const char * ) homepath	184:4:4419:4448	6281373	0	True				
ANR	6281802	AssignmentExpression	path = ( const char * ) homepath		6281373	0		=			
ANR	6281803	Identifier	path		6281373	0					
ANR	6281804	CastExpression	( const char * ) homepath		6281373	1					
ANR	6281805	CastTarget	const char *		6281373	0					
ANR	6281806	Identifier	homepath		6281373	1					
ANR	6281807	IfStatement	if ( ! r_file_is_directory ( path ) )		6281373	18					
ANR	6281808	Condition	! r_file_is_directory ( path )	188:5:4467:4493	6281373	0	True				
ANR	6281809	UnaryOperationExpression	! r_file_is_directory ( path )		6281373	0					
ANR	6281810	UnaryOperator	!		6281373	0					
ANR	6281811	CallExpression	r_file_is_directory ( path )		6281373	1					
ANR	6281812	Callee	r_file_is_directory		6281373	0					
ANR	6281813	Identifier	r_file_is_directory		6281373	0					
ANR	6281814	ArgumentList	path		6281373	1					
ANR	6281815	Argument	path		6281373	0					
ANR	6281816	Identifier	path		6281373	0					
ANR	6281817	CompoundStatement		68:34:1542:1542	6281373	1					
ANR	6281818	ExpressionStatement	"p = strrchr ( path , '/' )"	189:2:4500:4523	6281373	0	True				
ANR	6281819	AssignmentExpression	"p = strrchr ( path , '/' )"		6281373	0		=			
ANR	6281820	Identifier	p		6281373	0					
ANR	6281821	CallExpression	"strrchr ( path , '/' )"		6281373	1					
ANR	6281822	Callee	strrchr		6281373	0					
ANR	6281823	Identifier	strrchr		6281373	0					
ANR	6281824	ArgumentList	path		6281373	1					
ANR	6281825	Argument	path		6281373	0					
ANR	6281826	Identifier	path		6281373	0					
ANR	6281827	Argument	'/'		6281373	1					
ANR	6281828	PrimaryExpression	'/'		6281373	0					
ANR	6281829	IfStatement	if ( p )		6281373	1					
ANR	6281830	Condition	p	190:6:4531:4531	6281373	0	True				
ANR	6281831	Identifier	p		6281373	0					
ANR	6281832	CompoundStatement		70:9:1580:1580	6281373	1					
ANR	6281833	ExpressionStatement	off = p - path	191:3:4539:4553	6281373	0	True				
ANR	6281834	AssignmentExpression	off = p - path		6281373	0		=			
ANR	6281835	Identifier	off		6281373	0					
ANR	6281836	AdditiveExpression	p - path		6281373	1		-			
ANR	6281837	Identifier	p		6281373	0					
ANR	6281838	Identifier	path		6281373	1					
ANR	6281839	ExpressionStatement	"d = ( char * ) calloc ( 1 , off + 1 )"	192:3:4558:4590	6281373	1	True				
ANR	6281840	AssignmentExpression	"d = ( char * ) calloc ( 1 , off + 1 )"		6281373	0		=			
ANR	6281841	Identifier	d		6281373	0					
ANR	6281842	CastExpression	"( char * ) calloc ( 1 , off + 1 )"		6281373	1					
ANR	6281843	CastTarget	char *		6281373	0					
ANR	6281844	CallExpression	"calloc ( 1 , off + 1 )"		6281373	1					
ANR	6281845	Callee	calloc		6281373	0					
ANR	6281846	Identifier	calloc		6281373	0					
ANR	6281847	ArgumentList	1		6281373	1					
ANR	6281848	Argument	1		6281373	0					
ANR	6281849	PrimaryExpression	1		6281373	0					
ANR	6281850	Argument	off + 1		6281373	1					
ANR	6281851	AdditiveExpression	off + 1		6281373	0		+			
ANR	6281852	Identifier	off		6281373	0					
ANR	6281853	PrimaryExpression	1		6281373	1					
ANR	6281854	IfStatement	if ( ! d )		6281373	2					
ANR	6281855	Condition	! d	193:7:4599:4600	6281373	0	True				
ANR	6281856	UnaryOperationExpression	! d		6281373	0					
ANR	6281857	UnaryOperator	!		6281373	0					
ANR	6281858	Identifier	d		6281373	1					
ANR	6281859	CompoundStatement		73:11:1649:1649	6281373	1					
ANR	6281860	ExpressionStatement	free ( homepath )	194:4:4609:4624	6281373	0	True				
ANR	6281861	CallExpression	free ( homepath )		6281373	0					
ANR	6281862	Callee	free		6281373	0					
ANR	6281863	Identifier	free		6281373	0					
ANR	6281864	ArgumentList	homepath		6281373	1					
ANR	6281865	Argument	homepath		6281373	0					
ANR	6281866	Identifier	homepath		6281373	0					
ANR	6281867	ReturnStatement	return NULL ;	195:4:4630:4641	6281373	1	True				
ANR	6281868	Identifier	NULL		6281373	0					
ANR	6281869	ExpressionStatement	"memcpy ( d , path , off )"	197:3:4651:4672	6281373	3	True				
ANR	6281870	CallExpression	"memcpy ( d , path , off )"		6281373	0					
ANR	6281871	Callee	memcpy		6281373	0					
ANR	6281872	Identifier	memcpy		6281373	0					
ANR	6281873	ArgumentList	d		6281373	1					
ANR	6281874	Argument	d		6281373	0					
ANR	6281875	Identifier	d		6281373	0					
ANR	6281876	Argument	path		6281373	1					
ANR	6281877	Identifier	path		6281373	0					
ANR	6281878	Argument	off		6281373	2					
ANR	6281879	Identifier	off		6281373	0					
ANR	6281880	ExpressionStatement	path = ( const char * ) d	198:3:4677:4699	6281373	4	True				
ANR	6281881	AssignmentExpression	path = ( const char * ) d		6281373	0		=			
ANR	6281882	Identifier	path		6281373	0					
ANR	6281883	CastExpression	( const char * ) d		6281373	1					
ANR	6281884	CastTarget	const char *		6281373	0					
ANR	6281885	Identifier	d		6281373	1					
ANR	6281886	ExpressionStatement	pattern = strdup ( p + 1 )	199:3:4704:4728	6281373	5	True				
ANR	6281887	AssignmentExpression	pattern = strdup ( p + 1 )		6281373	0		=			
ANR	6281888	Identifier	pattern		6281373	0					
ANR	6281889	CallExpression	strdup ( p + 1 )		6281373	1					
ANR	6281890	Callee	strdup		6281373	0					
ANR	6281891	Identifier	strdup		6281373	0					
ANR	6281892	ArgumentList	p + 1		6281373	1					
ANR	6281893	Argument	p + 1		6281373	0					
ANR	6281894	AdditiveExpression	p + 1		6281373	0		+			
ANR	6281895	Identifier	p		6281373	0					
ANR	6281896	PrimaryExpression	1		6281373	1					
ANR	6281897	ElseStatement	else		6281373	0					
ANR	6281898	CompoundStatement		80:9:1785:1785	6281373	0					
ANR	6281899	ExpressionStatement	pattern = strdup ( path )	201:3:4744:4767	6281373	0	True				
ANR	6281900	AssignmentExpression	pattern = strdup ( path )		6281373	0		=			
ANR	6281901	Identifier	pattern		6281373	0					
ANR	6281902	CallExpression	strdup ( path )		6281373	1					
ANR	6281903	Callee	strdup		6281373	0					
ANR	6281904	Identifier	strdup		6281373	0					
ANR	6281905	ArgumentList	path		6281373	1					
ANR	6281906	Argument	path		6281373	0					
ANR	6281907	Identifier	path		6281373	0					
ANR	6281908	ExpressionStatement	"path = ""."""	202:3:4772:4782	6281373	1	True				
ANR	6281909	AssignmentExpression	"path = ""."""		6281373	0		=			
ANR	6281910	Identifier	path		6281373	0					
ANR	6281911	PrimaryExpression	"""."""		6281373	1					
ANR	6281912	ElseStatement	else		6281373	0					
ANR	6281913	CompoundStatement		84:8:1842:1842	6281373	0					
ANR	6281914	ExpressionStatement	"pattern = strdup ( ""*"" )"	205:2:4800:4822	6281373	0	True				
ANR	6281915	AssignmentExpression	"pattern = strdup ( ""*"" )"		6281373	0		=			
ANR	6281916	Identifier	pattern		6281373	0					
ANR	6281917	CallExpression	"strdup ( ""*"" )"		6281373	1					
ANR	6281918	Callee	strdup		6281373	0					
ANR	6281919	Identifier	strdup		6281373	0					
ANR	6281920	ArgumentList	"""*"""		6281373	1					
ANR	6281921	Argument	"""*"""		6281373	0					
ANR	6281922	PrimaryExpression	"""*"""		6281373	0					
ANR	6281923	IfStatement	if ( r_file_is_regular ( path ) )		6281373	19					
ANR	6281924	Condition	r_file_is_regular ( path )	207:5:4832:4855	6281373	0	True				
ANR	6281925	CallExpression	r_file_is_regular ( path )		6281373	0					
ANR	6281926	Callee	r_file_is_regular		6281373	0					
ANR	6281927	Identifier	r_file_is_regular		6281373	0					
ANR	6281928	ArgumentList	path		6281373	1					
ANR	6281929	Argument	path		6281373	0					
ANR	6281930	Identifier	path		6281373	0					
ANR	6281931	CompoundStatement		87:31:1904:1904	6281373	1					
ANR	6281932	ExpressionStatement	"res = showfile ( res , 0 , path , path , printfmt )"	208:2:4862:4907	6281373	0	True				
ANR	6281933	AssignmentExpression	"res = showfile ( res , 0 , path , path , printfmt )"		6281373	0		=			
ANR	6281934	Identifier	res		6281373	0					
ANR	6281935	CallExpression	"showfile ( res , 0 , path , path , printfmt )"		6281373	1					
ANR	6281936	Callee	showfile		6281373	0					
ANR	6281937	Identifier	showfile		6281373	0					
ANR	6281938	ArgumentList	res		6281373	1					
ANR	6281939	Argument	res		6281373	0					
ANR	6281940	Identifier	res		6281373	0					
ANR	6281941	Argument	0		6281373	1					
ANR	6281942	PrimaryExpression	0		6281373	0					
ANR	6281943	Argument	path		6281373	2					
ANR	6281944	Identifier	path		6281373	0					
ANR	6281945	Argument	path		6281373	3					
ANR	6281946	Identifier	path		6281373	0					
ANR	6281947	Argument	printfmt		6281373	4					
ANR	6281948	Identifier	printfmt		6281373	0					
ANR	6281949	ExpressionStatement	free ( homepath )	209:2:4911:4926	6281373	1	True				
ANR	6281950	CallExpression	free ( homepath )		6281373	0					
ANR	6281951	Callee	free		6281373	0					
ANR	6281952	Identifier	free		6281373	0					
ANR	6281953	ArgumentList	homepath		6281373	1					
ANR	6281954	Argument	homepath		6281373	0					
ANR	6281955	Identifier	homepath		6281373	0					
ANR	6281956	ExpressionStatement	free ( pattern )	210:2:4930:4944	6281373	2	True				
ANR	6281957	CallExpression	free ( pattern )		6281373	0					
ANR	6281958	Callee	free		6281373	0					
ANR	6281959	Identifier	free		6281373	0					
ANR	6281960	ArgumentList	pattern		6281373	1					
ANR	6281961	Argument	pattern		6281373	0					
ANR	6281962	Identifier	pattern		6281373	0					
ANR	6281963	ExpressionStatement	free ( d )	211:2:4948:4956	6281373	3	True				
ANR	6281964	CallExpression	free ( d )		6281373	0					
ANR	6281965	Callee	free		6281373	0					
ANR	6281966	Identifier	free		6281373	0					
ANR	6281967	ArgumentList	d		6281373	1					
ANR	6281968	Argument	d		6281373	0					
ANR	6281969	Identifier	d		6281373	0					
ANR	6281970	ReturnStatement	return res ;	212:2:4960:4970	6281373	4	True				
ANR	6281971	Identifier	res		6281373	0					
ANR	6281972	ExpressionStatement	files = r_sys_dir ( path )	214:1:4976:5000	6281373	20	True				
ANR	6281973	AssignmentExpression	files = r_sys_dir ( path )		6281373	0		=			
ANR	6281974	Identifier	files		6281373	0					
ANR	6281975	CallExpression	r_sys_dir ( path )		6281373	1					
ANR	6281976	Callee	r_sys_dir		6281373	0					
ANR	6281977	Identifier	r_sys_dir		6281373	0					
ANR	6281978	ArgumentList	path		6281373	1					
ANR	6281979	Argument	path		6281373	0					
ANR	6281980	Identifier	path		6281373	0					
ANR	6281981	IfStatement	if ( path [ strlen ( path ) - 1 ] == '/' )		6281373	21					
ANR	6281982	Condition	path [ strlen ( path ) - 1 ] == '/'	216:5:5008:5037	6281373	0	True				
ANR	6281983	EqualityExpression	path [ strlen ( path ) - 1 ] == '/'		6281373	0		==			
ANR	6281984	ArrayIndexing	path [ strlen ( path ) - 1 ]		6281373	0					
ANR	6281985	Identifier	path		6281373	0					
ANR	6281986	AdditiveExpression	strlen ( path ) - 1		6281373	1		-			
ANR	6281987	CallExpression	strlen ( path )		6281373	0					
ANR	6281988	Callee	strlen		6281373	0					
ANR	6281989	Identifier	strlen		6281373	0					
ANR	6281990	ArgumentList	path		6281373	1					
ANR	6281991	Argument	path		6281373	0					
ANR	6281992	Identifier	path		6281373	0					
ANR	6281993	PrimaryExpression	1		6281373	1					
ANR	6281994	PrimaryExpression	'/'		6281373	1					
ANR	6281995	CompoundStatement		96:37:2086:2086	6281373	1					
ANR	6281996	ExpressionStatement	dir = strdup ( path )	217:2:5044:5063	6281373	0	True				
ANR	6281997	AssignmentExpression	dir = strdup ( path )		6281373	0		=			
ANR	6281998	Identifier	dir		6281373	0					
ANR	6281999	CallExpression	strdup ( path )		6281373	1					
ANR	6282000	Callee	strdup		6281373	0					
ANR	6282001	Identifier	strdup		6281373	0					
ANR	6282002	ArgumentList	path		6281373	1					
ANR	6282003	Argument	path		6281373	0					
ANR	6282004	Identifier	path		6281373	0					
ANR	6282005	ElseStatement	else		6281373	0					
ANR	6282006	CompoundStatement		98:8:2119:2119	6281373	0					
ANR	6282007	ExpressionStatement	"dir = r_str_append ( strdup ( path ) , ""/"" )"	219:2:5077:5116	6281373	0	True				
ANR	6282008	AssignmentExpression	"dir = r_str_append ( strdup ( path ) , ""/"" )"		6281373	0		=			
ANR	6282009	Identifier	dir		6281373	0					
ANR	6282010	CallExpression	"r_str_append ( strdup ( path ) , ""/"" )"		6281373	1					
ANR	6282011	Callee	r_str_append		6281373	0					
ANR	6282012	Identifier	r_str_append		6281373	0					
ANR	6282013	ArgumentList	strdup ( path )		6281373	1					
ANR	6282014	Argument	strdup ( path )		6281373	0					
ANR	6282015	CallExpression	strdup ( path )		6281373	0					
ANR	6282016	Callee	strdup		6281373	0					
ANR	6282017	Identifier	strdup		6281373	0					
ANR	6282018	ArgumentList	path		6281373	1					
ANR	6282019	Argument	path		6281373	0					
ANR	6282020	Identifier	path		6281373	0					
ANR	6282021	Argument	"""/"""		6281373	1					
ANR	6282022	PrimaryExpression	"""/"""		6281373	0					
ANR	6282023	IdentifierDeclStatement	int nth = 0 ;	221:1:5122:5133	6281373	22	True				
ANR	6282024	IdentifierDecl	nth = 0		6281373	0					
ANR	6282025	IdentifierDeclType	int		6281373	0					
ANR	6282026	Identifier	nth		6281373	1					
ANR	6282027	AssignmentExpression	nth = 0		6281373	2		=			
ANR	6282028	Identifier	nth		6281373	0					
ANR	6282029	PrimaryExpression	0		6281373	1					
ANR	6282030	IfStatement	if ( printfmt == FMT_JSON )		6281373	23					
ANR	6282031	Condition	printfmt == FMT_JSON	222:5:5140:5159	6281373	0	True				
ANR	6282032	EqualityExpression	printfmt == FMT_JSON		6281373	0		==			
ANR	6282033	Identifier	printfmt		6281373	0					
ANR	6282034	Identifier	FMT_JSON		6281373	1					
ANR	6282035	CompoundStatement		102:27:2208:2208	6281373	1					
ANR	6282036	ExpressionStatement	"res = strdup ( ""["" )"	223:2:5166:5184	6281373	0	True				
ANR	6282037	AssignmentExpression	"res = strdup ( ""["" )"		6281373	0		=			
ANR	6282038	Identifier	res		6281373	0					
ANR	6282039	CallExpression	"strdup ( ""["" )"		6281373	1					
ANR	6282040	Callee	strdup		6281373	0					
ANR	6282041	Identifier	strdup		6281373	0					
ANR	6282042	ArgumentList	"""["""		6281373	1					
ANR	6282043	Argument	"""["""		6281373	0					
ANR	6282044	PrimaryExpression	"""["""		6281373	0					
ANR	6282045	ExpressionStatement	needs_newline = 0	225:1:5190:5207	6281373	24	True				
ANR	6282046	AssignmentExpression	needs_newline = 0		6281373	0		=			
ANR	6282047	Identifier	needs_newline		6281373	0					
ANR	6282048	PrimaryExpression	0		6281373	1					
ANR	6282049	Statement	r_list_foreach	226:1:5210:5223	6281373	25	True				
ANR	6282050	Statement	(	226:16:5225:5225	6281373	26	True				
ANR	6282051	Statement	files	226:17:5226:5230	6281373	27	True				
ANR	6282052	Statement	","	226:22:5231:5231	6281373	28	True				
ANR	6282053	Statement	iter	226:24:5233:5236	6281373	29	True				
ANR	6282054	Statement	","	226:28:5237:5237	6281373	30	True				
ANR	6282055	Statement	name	226:30:5239:5242	6281373	31	True				
ANR	6282056	Statement	)	226:34:5243:5243	6281373	32	True				
ANR	6282057	CompoundStatement		107:2:2295:2338	6281373	33					
ANR	6282058	IdentifierDeclStatement	"char * n = r_str_append ( strdup ( dir ) , name ) ;"	227:2:5249:5292	6281373	0	True				
ANR	6282059	IdentifierDecl	"* n = r_str_append ( strdup ( dir ) , name )"		6281373	0					
ANR	6282060	IdentifierDeclType	char *		6281373	0					
ANR	6282061	Identifier	n		6281373	1					
ANR	6282062	AssignmentExpression	"* n = r_str_append ( strdup ( dir ) , name )"		6281373	2		=			
ANR	6282063	Identifier	n		6281373	0					
ANR	6282064	CallExpression	"r_str_append ( strdup ( dir ) , name )"		6281373	1					
ANR	6282065	Callee	r_str_append		6281373	0					
ANR	6282066	Identifier	r_str_append		6281373	0					
ANR	6282067	ArgumentList	strdup ( dir )		6281373	1					
ANR	6282068	Argument	strdup ( dir )		6281373	0					
ANR	6282069	CallExpression	strdup ( dir )		6281373	0					
ANR	6282070	Callee	strdup		6281373	0					
ANR	6282071	Identifier	strdup		6281373	0					
ANR	6282072	ArgumentList	dir		6281373	1					
ANR	6282073	Argument	dir		6281373	0					
ANR	6282074	Identifier	dir		6281373	0					
ANR	6282075	Argument	name		6281373	1					
ANR	6282076	Identifier	name		6281373	0					
ANR	6282077	IfStatement	if ( ! n )		6281373	1					
ANR	6282078	Condition	! n	228:6:5300:5301	6281373	0	True				
ANR	6282079	UnaryOperationExpression	! n		6281373	0					
ANR	6282080	UnaryOperator	!		6281373	0					
ANR	6282081	Identifier	n		6281373	1					
ANR	6282082	CompoundStatement		108:10:2350:2350	6281373	1					
ANR	6282083	BreakStatement	break ;	229:3:5309:5314	6281373	0	True				
ANR	6282084	IfStatement	"if ( r_str_glob ( name , pattern ) )"		6281373	2					
ANR	6282085	Condition	"r_str_glob ( name , pattern )"	231:6:5326:5351	6281373	0	True				
ANR	6282086	CallExpression	"r_str_glob ( name , pattern )"		6281373	0					
ANR	6282087	Callee	r_str_glob		6281373	0					
ANR	6282088	Identifier	r_str_glob		6281373	0					
ANR	6282089	ArgumentList	name		6281373	1					
ANR	6282090	Argument	name		6281373	0					
ANR	6282091	Identifier	name		6281373	0					
ANR	6282092	Argument	pattern		6281373	1					
ANR	6282093	Identifier	pattern		6281373	0					
ANR	6282094	CompoundStatement		111:34:2400:2400	6281373	1					
ANR	6282095	IfStatement	if ( * n )		6281373	0					
ANR	6282096	Condition	* n	232:7:5363:5364	6281373	0	True				
ANR	6282097	UnaryOperationExpression	* n		6281373	0					
ANR	6282098	UnaryOperator	*		6281373	0					
ANR	6282099	Identifier	n		6281373	1					
ANR	6282100	CompoundStatement		112:11:2413:2413	6281373	1					
ANR	6282101	ExpressionStatement	"res = showfile ( res , nth , n , name , printfmt )"	233:4:5373:5417	6281373	0	True				
ANR	6282102	AssignmentExpression	"res = showfile ( res , nth , n , name , printfmt )"		6281373	0		=			
ANR	6282103	Identifier	res		6281373	0					
ANR	6282104	CallExpression	"showfile ( res , nth , n , name , printfmt )"		6281373	1					
ANR	6282105	Callee	showfile		6281373	0					
ANR	6282106	Identifier	showfile		6281373	0					
ANR	6282107	ArgumentList	res		6281373	1					
ANR	6282108	Argument	res		6281373	0					
ANR	6282109	Identifier	res		6281373	0					
ANR	6282110	Argument	nth		6281373	1					
ANR	6282111	Identifier	nth		6281373	0					
ANR	6282112	Argument	n		6281373	2					
ANR	6282113	Identifier	n		6281373	0					
ANR	6282114	Argument	name		6281373	3					
ANR	6282115	Identifier	name		6281373	0					
ANR	6282116	Argument	printfmt		6281373	4					
ANR	6282117	Identifier	printfmt		6281373	0					
ANR	6282118	ExpressionStatement	nth ++	235:3:5427:5432	6281373	1	True				
ANR	6282119	PostIncDecOperationExpression	nth ++		6281373	0					
ANR	6282120	Identifier	nth		6281373	0					
ANR	6282121	IncDec	++		6281373	1					
ANR	6282122	ExpressionStatement	free ( n )	237:2:5440:5448	6281373	3	True				
ANR	6282123	CallExpression	free ( n )		6281373	0					
ANR	6282124	Callee	free		6281373	0					
ANR	6282125	Identifier	free		6281373	0					
ANR	6282126	ArgumentList	n		6281373	1					
ANR	6282127	Argument	n		6281373	0					
ANR	6282128	Identifier	n		6281373	0					
ANR	6282129	IfStatement	if ( printfmt == FMT_JSON )		6281373	34					
ANR	6282130	Condition	printfmt == FMT_JSON	239:5:5458:5477	6281373	0	True				
ANR	6282131	EqualityExpression	printfmt == FMT_JSON		6281373	0		==			
ANR	6282132	Identifier	printfmt		6281373	0					
ANR	6282133	Identifier	FMT_JSON		6281373	1					
ANR	6282134	CompoundStatement		119:27:2526:2526	6281373	1					
ANR	6282135	ExpressionStatement	"res = r_str_append ( res , ""]"" )"	240:2:5484:5513	6281373	0	True				
ANR	6282136	AssignmentExpression	"res = r_str_append ( res , ""]"" )"		6281373	0		=			
ANR	6282137	Identifier	res		6281373	0					
ANR	6282138	CallExpression	"r_str_append ( res , ""]"" )"		6281373	1					
ANR	6282139	Callee	r_str_append		6281373	0					
ANR	6282140	Identifier	r_str_append		6281373	0					
ANR	6282141	ArgumentList	res		6281373	1					
ANR	6282142	Argument	res		6281373	0					
ANR	6282143	Identifier	res		6281373	0					
ANR	6282144	Argument	"""]"""		6281373	1					
ANR	6282145	PrimaryExpression	"""]"""		6281373	0					
ANR	6282146	IfStatement	if ( needs_newline )		6281373	35					
ANR	6282147	Condition	needs_newline	242:5:5523:5535	6281373	0	True				
ANR	6282148	Identifier	needs_newline		6281373	0					
ANR	6282149	CompoundStatement		122:20:2584:2584	6281373	1					
ANR	6282150	ExpressionStatement	"res = r_str_append ( res , ""\\n"" )"	243:2:5542:5572	6281373	0	True				
ANR	6282151	AssignmentExpression	"res = r_str_append ( res , ""\\n"" )"		6281373	0		=			
ANR	6282152	Identifier	res		6281373	0					
ANR	6282153	CallExpression	"r_str_append ( res , ""\\n"" )"		6281373	1					
ANR	6282154	Callee	r_str_append		6281373	0					
ANR	6282155	Identifier	r_str_append		6281373	0					
ANR	6282156	ArgumentList	res		6281373	1					
ANR	6282157	Argument	res		6281373	0					
ANR	6282158	Identifier	res		6281373	0					
ANR	6282159	Argument	"""\\n"""		6281373	1					
ANR	6282160	PrimaryExpression	"""\\n"""		6281373	0					
ANR	6282161	ExpressionStatement	free ( dir )	245:1:5578:5588	6281373	36	True				
ANR	6282162	CallExpression	free ( dir )		6281373	0					
ANR	6282163	Callee	free		6281373	0					
ANR	6282164	Identifier	free		6281373	0					
ANR	6282165	ArgumentList	dir		6281373	1					
ANR	6282166	Argument	dir		6281373	0					
ANR	6282167	Identifier	dir		6281373	0					
ANR	6282168	ExpressionStatement	free ( d )	246:1:5591:5599	6281373	37	True				
ANR	6282169	CallExpression	free ( d )		6281373	0					
ANR	6282170	Callee	free		6281373	0					
ANR	6282171	Identifier	free		6281373	0					
ANR	6282172	ArgumentList	d		6281373	1					
ANR	6282173	Argument	d		6281373	0					
ANR	6282174	Identifier	d		6281373	0					
ANR	6282175	ExpressionStatement	free ( homepath )	247:1:5602:5617	6281373	38	True				
ANR	6282176	CallExpression	free ( homepath )		6281373	0					
ANR	6282177	Callee	free		6281373	0					
ANR	6282178	Identifier	free		6281373	0					
ANR	6282179	ArgumentList	homepath		6281373	1					
ANR	6282180	Argument	homepath		6281373	0					
ANR	6282181	Identifier	homepath		6281373	0					
ANR	6282182	ExpressionStatement	free ( pattern )	248:1:5620:5634	6281373	39	True				
ANR	6282183	CallExpression	free ( pattern )		6281373	0					
ANR	6282184	Callee	free		6281373	0					
ANR	6282185	Identifier	free		6281373	0					
ANR	6282186	ArgumentList	pattern		6281373	1					
ANR	6282187	Argument	pattern		6281373	0					
ANR	6282188	Identifier	pattern		6281373	0					
ANR	6282189	ExpressionStatement	r_list_free ( files )	249:1:5637:5656	6281373	40	True				
ANR	6282190	CallExpression	r_list_free ( files )		6281373	0					
ANR	6282191	Callee	r_list_free		6281373	0					
ANR	6282192	Identifier	r_list_free		6281373	0					
ANR	6282193	ArgumentList	files		6281373	1					
ANR	6282194	Argument	files		6281373	0					
ANR	6282195	Identifier	files		6281373	0					
ANR	6282196	ReturnStatement	return res ;	250:1:5659:5669	6281373	41	True				
ANR	6282197	Identifier	res		6281373	0					
ANR	6282198	ReturnType	R_API char *		6281373	1					
ANR	6282199	Identifier	r_syscmd_ls		6281373	2					
ANR	6282200	ParameterList	const char * input		6281373	3					
ANR	6282201	Parameter	const char * input	121:24:2934:2950	6281373	0	True				
ANR	6282202	ParameterType	const char *		6281373	0					
ANR	6282203	Identifier	input		6281373	1					
ANR	6282204	CFGEntryNode	ENTRY		6281373		True				
ANR	6282205	CFGExitNode	EXIT		6281373		True				
ANR	6282206	CFGErrorNode	ERROR		6281373		True				
ANR	6282207	Symbol	r_file_is_directory		6281373						
ANR	6282208	Symbol	r_str_append		6281373						
ANR	6282209	Symbol	r_sandbox_enable		6281373						
ANR	6282210	Symbol	pattern		6281373						
ANR	6282211	Symbol	* input		6281373						
ANR	6282212	Symbol	r_file_is_regular		6281373						
ANR	6282213	Symbol	calloc		6281373						
ANR	6282214	Symbol	dir		6281373						
ANR	6282215	Symbol	path		6281373						
ANR	6282216	Symbol	strncmp		6281373						
ANR	6282217	Symbol	strlen		6281373						
ANR	6282218	Symbol	FMT_RAW		6281373						
ANR	6282219	Symbol	needs_newline		6281373						
ANR	6282220	Symbol	homepath		6281373						
ANR	6282221	Symbol	r_str_home		6281373						
ANR	6282222	Symbol	res		6281373						
ANR	6282223	Symbol	NULL		6281373						
ANR	6282224	Symbol	nth		6281373						
ANR	6282225	Symbol	d		6281373						
ANR	6282226	Symbol	iter		6281373						
ANR	6282227	Symbol	off		6281373						
ANR	6282228	Symbol	n		6281373						
ANR	6282229	Symbol	showfile		6281373						
ANR	6282230	Symbol	p		6281373						
ANR	6282231	Symbol	input		6281373						
ANR	6282232	Symbol	* strlen		6281373						
ANR	6282233	Symbol	r_str_glob		6281373						
ANR	6282234	Symbol	strrchr		6281373						
ANR	6282235	Symbol	name		6281373						
ANR	6282236	Symbol	r_str_trim_ro		6281373						
ANR	6282237	Symbol	* n		6281373						
ANR	6282238	Symbol	files		6281373						
ANR	6282239	Symbol	* path		6281373						
ANR	6282240	Symbol	printfmt		6281373						
ANR	6282241	Symbol	strdup		6281373						
ANR	6282242	Symbol	FMT_JSON		6281373						
ANR	6282243	Symbol	r_sys_dir		6281373						
ANR	6282244	Function	cmpstr	253:0:5674:5785							
ANR	6282245	FunctionDef	"cmpstr (const void * _a , const void * _b)"		6282244	0					
ANR	6282246	CompoundStatement		253:51:5725:5785	6282244	0					
ANR	6282247	IdentifierDeclStatement	"const char * a = _a , * b = _b ;"	254:1:5728:5755	6282244	0	True				
ANR	6282248	IdentifierDecl	* a = _a		6282244	0					
ANR	6282249	IdentifierDeclType	const char *		6282244	0					
ANR	6282250	Identifier	a		6282244	1					
ANR	6282251	AssignmentExpression	* a = _a		6282244	2		=			
ANR	6282252	Identifier	_a		6282244	0					
ANR	6282253	Identifier	_a		6282244	1					
ANR	6282254	IdentifierDecl	* b = _b		6282244	1					
ANR	6282255	IdentifierDeclType	const char *		6282244	0					
ANR	6282256	Identifier	b		6282244	1					
ANR	6282257	AssignmentExpression	* b = _b		6282244	2		=			
ANR	6282258	Identifier	_b		6282244	0					
ANR	6282259	Identifier	_b		6282244	1					
ANR	6282260	ReturnStatement	"return ( int ) strcmp ( a , b ) ;"	255:1:5758:5783	6282244	1	True				
ANR	6282261	CastExpression	"( int ) strcmp ( a , b )"		6282244	0					
ANR	6282262	CastTarget	int		6282244	0					
ANR	6282263	CallExpression	"strcmp ( a , b )"		6282244	1					
ANR	6282264	Callee	strcmp		6282244	0					
ANR	6282265	Identifier	strcmp		6282244	0					
ANR	6282266	ArgumentList	a		6282244	1					
ANR	6282267	Argument	a		6282244	0					
ANR	6282268	Identifier	a		6282244	0					
ANR	6282269	Argument	b		6282244	1					
ANR	6282270	Identifier	b		6282244	0					
ANR	6282271	ReturnType	static int		6282244	1					
ANR	6282272	Identifier	cmpstr		6282244	2					
ANR	6282273	ParameterList	"const void * _a , const void * _b"		6282244	3					
ANR	6282274	Parameter	const void * _a	253:19:5693:5706	6282244	0	True				
ANR	6282275	ParameterType	const void *		6282244	0					
ANR	6282276	Identifier	_a		6282244	1					
ANR	6282277	Parameter	const void * _b	253:35:5709:5722	6282244	1	True				
ANR	6282278	ParameterType	const void *		6282244	0					
ANR	6282279	Identifier	_b		6282244	1					
ANR	6282280	CFGEntryNode	ENTRY		6282244		True				
ANR	6282281	CFGExitNode	EXIT		6282244		True				
ANR	6282282	Symbol	strcmp		6282244						
ANR	6282283	Symbol	a		6282244						
ANR	6282284	Symbol	_a		6282244						
ANR	6282285	Symbol	b		6282244						
ANR	6282286	Symbol	_b		6282244						
ANR	6282287	Function	r_syscmd_sort	258:0:5788:6403							
ANR	6282288	FunctionDef	r_syscmd_sort (const char * file)		6282287	0					
ANR	6282289	CompoundStatement		258:44:5832:6403	6282287	0					
ANR	6282290	IdentifierDeclStatement	int sz ;	259:1:5835:5841	6282287	0	True				
ANR	6282291	IdentifierDecl	sz		6282287	0					
ANR	6282292	IdentifierDeclType	int		6282287	0					
ANR	6282293	Identifier	sz		6282287	1					
ANR	6282294	IdentifierDeclStatement	const char * p = NULL ;	260:1:5844:5864	6282287	1	True				
ANR	6282295	IdentifierDecl	* p = NULL		6282287	0					
ANR	6282296	IdentifierDeclType	const char *		6282287	0					
ANR	6282297	Identifier	p		6282287	1					
ANR	6282298	AssignmentExpression	* p = NULL		6282287	2		=			
ANR	6282299	Identifier	NULL		6282287	0					
ANR	6282300	Identifier	NULL		6282287	1					
ANR	6282301	IdentifierDeclStatement	RList * list = NULL ;	261:1:5867:5885	6282287	2	True				
ANR	6282302	IdentifierDecl	* list = NULL		6282287	0					
ANR	6282303	IdentifierDeclType	RList *		6282287	0					
ANR	6282304	Identifier	list		6282287	1					
ANR	6282305	AssignmentExpression	* list = NULL		6282287	2		=			
ANR	6282306	Identifier	NULL		6282287	0					
ANR	6282307	Identifier	NULL		6282287	1					
ANR	6282308	IfStatement	if ( file )		6282287	3					
ANR	6282309	Condition	file	262:5:5892:5895	6282287	0	True				
ANR	6282310	Identifier	file		6282287	0					
ANR	6282311	CompoundStatement		5:11:65:65	6282287	1					
ANR	6282312	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		6282287	0					
ANR	6282313	Condition	"p = strchr ( file , ' ' )"	263:6:5906:5929	6282287	0	True				
ANR	6282314	AssignmentExpression	"p = strchr ( file , ' ' )"		6282287	0		=			
ANR	6282315	Identifier	p		6282287	0					
ANR	6282316	CallExpression	"strchr ( file , ' ' )"		6282287	1					
ANR	6282317	Callee	strchr		6282287	0					
ANR	6282318	Identifier	strchr		6282287	0					
ANR	6282319	ArgumentList	file		6282287	1					
ANR	6282320	Argument	file		6282287	0					
ANR	6282321	Identifier	file		6282287	0					
ANR	6282322	Argument	' '		6282287	1					
ANR	6282323	PrimaryExpression	' '		6282287	0					
ANR	6282324	CompoundStatement		6:32:99:99	6282287	1					
ANR	6282325	ExpressionStatement	p = p + 1	264:3:5937:5946	6282287	0	True				
ANR	6282326	AssignmentExpression	p = p + 1		6282287	0		=			
ANR	6282327	Identifier	p		6282287	0					
ANR	6282328	AdditiveExpression	p + 1		6282287	1		+			
ANR	6282329	Identifier	p		6282287	0					
ANR	6282330	PrimaryExpression	1		6282287	1					
ANR	6282331	ElseStatement	else		6282287	0					
ANR	6282332	CompoundStatement		8:9:124:124	6282287	0					
ANR	6282333	ExpressionStatement	p = file	266:3:5962:5970	6282287	0	True				
ANR	6282334	AssignmentExpression	p = file		6282287	0		=			
ANR	6282335	Identifier	p		6282287	0					
ANR	6282336	Identifier	file		6282287	1					
ANR	6282337	IfStatement	if ( p && * p )		6282287	4					
ANR	6282338	Condition	p && * p	269:5:5984:5990	6282287	0	True				
ANR	6282339	AndExpression	p && * p		6282287	0		&&			
ANR	6282340	Identifier	p		6282287	0					
ANR	6282341	UnaryOperationExpression	* p		6282287	1					
ANR	6282342	UnaryOperator	*		6282287	0					
ANR	6282343	Identifier	p		6282287	1					
ANR	6282344	CompoundStatement		15:2:220:261	6282287	1					
ANR	6282345	IdentifierDeclStatement	char * filename = strdup ( p ) ;	270:2:5997:6024	6282287	0	True				
ANR	6282346	IdentifierDecl	* filename = strdup ( p )		6282287	0					
ANR	6282347	IdentifierDeclType	char *		6282287	0					
ANR	6282348	Identifier	filename		6282287	1					
ANR	6282349	AssignmentExpression	* filename = strdup ( p )		6282287	2		=			
ANR	6282350	Identifier	filename		6282287	0					
ANR	6282351	CallExpression	strdup ( p )		6282287	1					
ANR	6282352	Callee	strdup		6282287	0					
ANR	6282353	Identifier	strdup		6282287	0					
ANR	6282354	ArgumentList	p		6282287	1					
ANR	6282355	Argument	p		6282287	0					
ANR	6282356	Identifier	p		6282287	0					
ANR	6282357	ExpressionStatement	r_str_trim ( filename )	271:2:6028:6049	6282287	1	True				
ANR	6282358	CallExpression	r_str_trim ( filename )		6282287	0					
ANR	6282359	Callee	r_str_trim		6282287	0					
ANR	6282360	Identifier	r_str_trim		6282287	0					
ANR	6282361	ArgumentList	filename		6282287	1					
ANR	6282362	Argument	filename		6282287	0					
ANR	6282363	Identifier	filename		6282287	0					
ANR	6282364	IdentifierDeclStatement	"char * data = r_file_slurp ( filename , & sz ) ;"	272:2:6053:6094	6282287	2	True				
ANR	6282365	IdentifierDecl	"* data = r_file_slurp ( filename , & sz )"		6282287	0					
ANR	6282366	IdentifierDeclType	char *		6282287	0					
ANR	6282367	Identifier	data		6282287	1					
ANR	6282368	AssignmentExpression	"* data = r_file_slurp ( filename , & sz )"		6282287	2		=			
ANR	6282369	Identifier	data		6282287	0					
ANR	6282370	CallExpression	"r_file_slurp ( filename , & sz )"		6282287	1					
ANR	6282371	Callee	r_file_slurp		6282287	0					
ANR	6282372	Identifier	r_file_slurp		6282287	0					
ANR	6282373	ArgumentList	filename		6282287	1					
ANR	6282374	Argument	filename		6282287	0					
ANR	6282375	Identifier	filename		6282287	0					
ANR	6282376	Argument	& sz		6282287	1					
ANR	6282377	UnaryOperationExpression	& sz		6282287	0					
ANR	6282378	UnaryOperator	&		6282287	0					
ANR	6282379	Identifier	sz		6282287	1					
ANR	6282380	IfStatement	if ( ! data )		6282287	3					
ANR	6282381	Condition	! data	273:6:6102:6106	6282287	0	True				
ANR	6282382	UnaryOperationExpression	! data		6282287	0					
ANR	6282383	UnaryOperator	!		6282287	0					
ANR	6282384	Identifier	data		6282287	1					
ANR	6282385	CompoundStatement		16:13:276:276	6282287	1					
ANR	6282386	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	274:3:6114:6153	6282287	0	True				
ANR	6282387	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		6282287	0					
ANR	6282388	Callee	eprintf		6282287	0					
ANR	6282389	Identifier	eprintf		6282287	0					
ANR	6282390	ArgumentList	"""No such file or directory\\n"""		6282287	1					
ANR	6282391	Argument	"""No such file or directory\\n"""		6282287	0					
ANR	6282392	PrimaryExpression	"""No such file or directory\\n"""		6282287	0					
ANR	6282393	ElseStatement	else		6282287	0					
ANR	6282394	CompoundStatement		18:9:331:331	6282287	0					
ANR	6282395	ExpressionStatement	"list = r_str_split_list ( data , ""\\n"" , 0 )"	276:3:6169:6208	6282287	0	True				
ANR	6282396	AssignmentExpression	"list = r_str_split_list ( data , ""\\n"" , 0 )"		6282287	0		=			
ANR	6282397	Identifier	list		6282287	0					
ANR	6282398	CallExpression	"r_str_split_list ( data , ""\\n"" , 0 )"		6282287	1					
ANR	6282399	Callee	r_str_split_list		6282287	0					
ANR	6282400	Identifier	r_str_split_list		6282287	0					
ANR	6282401	ArgumentList	data		6282287	1					
ANR	6282402	Argument	data		6282287	0					
ANR	6282403	Identifier	data		6282287	0					
ANR	6282404	Argument	"""\\n"""		6282287	1					
ANR	6282405	PrimaryExpression	"""\\n"""		6282287	0					
ANR	6282406	Argument	0		6282287	2					
ANR	6282407	PrimaryExpression	0		6282287	0					
ANR	6282408	ExpressionStatement	"r_list_sort ( list , cmpstr )"	277:3:6213:6239	6282287	1	True				
ANR	6282409	CallExpression	"r_list_sort ( list , cmpstr )"		6282287	0					
ANR	6282410	Callee	r_list_sort		6282287	0					
ANR	6282411	Identifier	r_list_sort		6282287	0					
ANR	6282412	ArgumentList	list		6282287	1					
ANR	6282413	Argument	list		6282287	0					
ANR	6282414	Identifier	list		6282287	0					
ANR	6282415	Argument	cmpstr		6282287	1					
ANR	6282416	Identifier	cmpstr		6282287	0					
ANR	6282417	ExpressionStatement	"data = r_list_to_str ( list , '\\n' )"	278:3:6244:6277	6282287	2	True				
ANR	6282418	AssignmentExpression	"data = r_list_to_str ( list , '\\n' )"		6282287	0		=			
ANR	6282419	Identifier	data		6282287	0					
ANR	6282420	CallExpression	"r_list_to_str ( list , '\\n' )"		6282287	1					
ANR	6282421	Callee	r_list_to_str		6282287	0					
ANR	6282422	Identifier	r_list_to_str		6282287	0					
ANR	6282423	ArgumentList	list		6282287	1					
ANR	6282424	Argument	list		6282287	0					
ANR	6282425	Identifier	list		6282287	0					
ANR	6282426	Argument	'\\n'		6282287	1					
ANR	6282427	PrimaryExpression	'\\n'		6282287	0					
ANR	6282428	ExpressionStatement	r_list_free ( list )	279:3:6282:6300	6282287	3	True				
ANR	6282429	CallExpression	r_list_free ( list )		6282287	0					
ANR	6282430	Callee	r_list_free		6282287	0					
ANR	6282431	Identifier	r_list_free		6282287	0					
ANR	6282432	ArgumentList	list		6282287	1					
ANR	6282433	Argument	list		6282287	0					
ANR	6282434	Identifier	list		6282287	0					
ANR	6282435	ExpressionStatement	free ( filename )	281:2:6308:6323	6282287	4	True				
ANR	6282436	CallExpression	free ( filename )		6282287	0					
ANR	6282437	Callee	free		6282287	0					
ANR	6282438	Identifier	free		6282287	0					
ANR	6282439	ArgumentList	filename		6282287	1					
ANR	6282440	Argument	filename		6282287	0					
ANR	6282441	Identifier	filename		6282287	0					
ANR	6282442	ReturnStatement	return data ;	282:2:6327:6338	6282287	5	True				
ANR	6282443	Identifier	data		6282287	0					
ANR	6282444	ElseStatement	else		6282287	0					
ANR	6282445	CompoundStatement		26:8:515:515	6282287	0					
ANR	6282446	ExpressionStatement	"eprintf ( ""Usage: sort [file]\\n"" )"	284:2:6352:6384	6282287	0	True				
ANR	6282447	CallExpression	"eprintf ( ""Usage: sort [file]\\n"" )"		6282287	0					
ANR	6282448	Callee	eprintf		6282287	0					
ANR	6282449	Identifier	eprintf		6282287	0					
ANR	6282450	ArgumentList	"""Usage: sort [file]\\n"""		6282287	1					
ANR	6282451	Argument	"""Usage: sort [file]\\n"""		6282287	0					
ANR	6282452	PrimaryExpression	"""Usage: sort [file]\\n"""		6282287	0					
ANR	6282453	ReturnStatement	return NULL ;	286:1:6390:6401	6282287	5	True				
ANR	6282454	Identifier	NULL		6282287	0					
ANR	6282455	ReturnType	R_API char *		6282287	1					
ANR	6282456	Identifier	r_syscmd_sort		6282287	2					
ANR	6282457	ParameterList	const char * file		6282287	3					
ANR	6282458	Parameter	const char * file	258:26:5814:5829	6282287	0	True				
ANR	6282459	ParameterType	const char *		6282287	0					
ANR	6282460	Identifier	file		6282287	1					
ANR	6282461	CFGEntryNode	ENTRY		6282287		True				
ANR	6282462	CFGExitNode	EXIT		6282287		True				
ANR	6282463	Symbol	r_file_slurp		6282287						
ANR	6282464	Symbol	NULL		6282287						
ANR	6282465	Symbol	data		6282287						
ANR	6282466	Symbol	sz		6282287						
ANR	6282467	Symbol	r_str_split_list		6282287						
ANR	6282468	Symbol	strchr		6282287						
ANR	6282469	Symbol	list		6282287						
ANR	6282470	Symbol	cmpstr		6282287						
ANR	6282471	Symbol	p		6282287						
ANR	6282472	Symbol	& sz		6282287						
ANR	6282473	Symbol	r_list_to_str		6282287						
ANR	6282474	Symbol	file		6282287						
ANR	6282475	Symbol	filename		6282287						
ANR	6282476	Symbol	* p		6282287						
ANR	6282477	Symbol	strdup		6282287						
ANR	6282478	Function	r_syscmd_head	289:0:6406:6869							
ANR	6282479	FunctionDef	"r_syscmd_head (const char * file , int count)"		6282478	0					
ANR	6282480	CompoundStatement		289:55:6461:6869	6282478	0					
ANR	6282481	IdentifierDeclStatement	const char * p = NULL ;	290:1:6464:6484	6282478	0	True				
ANR	6282482	IdentifierDecl	* p = NULL		6282478	0					
ANR	6282483	IdentifierDeclType	const char *		6282478	0					
ANR	6282484	Identifier	p		6282478	1					
ANR	6282485	AssignmentExpression	* p = NULL		6282478	2		=			
ANR	6282486	Identifier	NULL		6282478	0					
ANR	6282487	Identifier	NULL		6282478	1					
ANR	6282488	IfStatement	if ( file )		6282478	1					
ANR	6282489	Condition	file	291:5:6491:6494	6282478	0	True				
ANR	6282490	Identifier	file		6282478	0					
ANR	6282491	CompoundStatement		3:11:35:35	6282478	1					
ANR	6282492	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		6282478	0					
ANR	6282493	Condition	"p = strchr ( file , ' ' )"	292:6:6505:6528	6282478	0	True				
ANR	6282494	AssignmentExpression	"p = strchr ( file , ' ' )"		6282478	0		=			
ANR	6282495	Identifier	p		6282478	0					
ANR	6282496	CallExpression	"strchr ( file , ' ' )"		6282478	1					
ANR	6282497	Callee	strchr		6282478	0					
ANR	6282498	Identifier	strchr		6282478	0					
ANR	6282499	ArgumentList	file		6282478	1					
ANR	6282500	Argument	file		6282478	0					
ANR	6282501	Identifier	file		6282478	0					
ANR	6282502	Argument	' '		6282478	1					
ANR	6282503	PrimaryExpression	' '		6282478	0					
ANR	6282504	CompoundStatement		4:32:69:69	6282478	1					
ANR	6282505	ExpressionStatement	p = p + 1	293:3:6536:6545	6282478	0	True				
ANR	6282506	AssignmentExpression	p = p + 1		6282478	0		=			
ANR	6282507	Identifier	p		6282478	0					
ANR	6282508	AdditiveExpression	p + 1		6282478	1		+			
ANR	6282509	Identifier	p		6282478	0					
ANR	6282510	PrimaryExpression	1		6282478	1					
ANR	6282511	ElseStatement	else		6282478	0					
ANR	6282512	CompoundStatement		6:9:94:94	6282478	0					
ANR	6282513	ExpressionStatement	p = file	295:3:6561:6569	6282478	0	True				
ANR	6282514	AssignmentExpression	p = file		6282478	0		=			
ANR	6282515	Identifier	p		6282478	0					
ANR	6282516	Identifier	file		6282478	1					
ANR	6282517	IfStatement	if ( p && * p )		6282478	2					
ANR	6282518	Condition	p && * p	298:5:6584:6590	6282478	0	True				
ANR	6282519	AndExpression	p && * p		6282478	0		&&			
ANR	6282520	Identifier	p		6282478	0					
ANR	6282521	UnaryOperationExpression	* p		6282478	1					
ANR	6282522	UnaryOperator	*		6282478	0					
ANR	6282523	Identifier	p		6282478	1					
ANR	6282524	CompoundStatement		13:2:191:243	6282478	1					
ANR	6282525	IdentifierDeclStatement	char * filename = strdup ( p ) ;	299:2:6597:6624	6282478	0	True				
ANR	6282526	IdentifierDecl	* filename = strdup ( p )		6282478	0					
ANR	6282527	IdentifierDeclType	char *		6282478	0					
ANR	6282528	Identifier	filename		6282478	1					
ANR	6282529	AssignmentExpression	* filename = strdup ( p )		6282478	2		=			
ANR	6282530	Identifier	filename		6282478	0					
ANR	6282531	CallExpression	strdup ( p )		6282478	1					
ANR	6282532	Callee	strdup		6282478	0					
ANR	6282533	Identifier	strdup		6282478	0					
ANR	6282534	ArgumentList	p		6282478	1					
ANR	6282535	Argument	p		6282478	0					
ANR	6282536	Identifier	p		6282478	0					
ANR	6282537	ExpressionStatement	r_str_trim ( filename )	300:2:6628:6649	6282478	1	True				
ANR	6282538	CallExpression	r_str_trim ( filename )		6282478	0					
ANR	6282539	Callee	r_str_trim		6282478	0					
ANR	6282540	Identifier	r_str_trim		6282478	0					
ANR	6282541	ArgumentList	filename		6282478	1					
ANR	6282542	Argument	filename		6282478	0					
ANR	6282543	Identifier	filename		6282478	0					
ANR	6282544	IdentifierDeclStatement	"char * data = r_file_slurp_lines ( filename , 1 , count ) ;"	301:2:6653:6705	6282478	2	True				
ANR	6282545	IdentifierDecl	"* data = r_file_slurp_lines ( filename , 1 , count )"		6282478	0					
ANR	6282546	IdentifierDeclType	char *		6282478	0					
ANR	6282547	Identifier	data		6282478	1					
ANR	6282548	AssignmentExpression	"* data = r_file_slurp_lines ( filename , 1 , count )"		6282478	2		=			
ANR	6282549	Identifier	data		6282478	0					
ANR	6282550	CallExpression	"r_file_slurp_lines ( filename , 1 , count )"		6282478	1					
ANR	6282551	Callee	r_file_slurp_lines		6282478	0					
ANR	6282552	Identifier	r_file_slurp_lines		6282478	0					
ANR	6282553	ArgumentList	filename		6282478	1					
ANR	6282554	Argument	filename		6282478	0					
ANR	6282555	Identifier	filename		6282478	0					
ANR	6282556	Argument	1		6282478	1					
ANR	6282557	PrimaryExpression	1		6282478	0					
ANR	6282558	Argument	count		6282478	2					
ANR	6282559	Identifier	count		6282478	0					
ANR	6282560	IfStatement	if ( ! data )		6282478	3					
ANR	6282561	Condition	! data	302:6:6713:6717	6282478	0	True				
ANR	6282562	UnaryOperationExpression	! data		6282478	0					
ANR	6282563	UnaryOperator	!		6282478	0					
ANR	6282564	Identifier	data		6282478	1					
ANR	6282565	CompoundStatement		14:13:258:258	6282478	1					
ANR	6282566	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	303:3:6725:6764	6282478	0	True				
ANR	6282567	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		6282478	0					
ANR	6282568	Callee	eprintf		6282478	0					
ANR	6282569	Identifier	eprintf		6282478	0					
ANR	6282570	ArgumentList	"""No such file or directory\\n"""		6282478	1					
ANR	6282571	Argument	"""No such file or directory\\n"""		6282478	0					
ANR	6282572	PrimaryExpression	"""No such file or directory\\n"""		6282478	0					
ANR	6282573	ExpressionStatement	free ( filename )	305:2:6772:6787	6282478	4	True				
ANR	6282574	CallExpression	free ( filename )		6282478	0					
ANR	6282575	Callee	free		6282478	0					
ANR	6282576	Identifier	free		6282478	0					
ANR	6282577	ArgumentList	filename		6282478	1					
ANR	6282578	Argument	filename		6282478	0					
ANR	6282579	Identifier	filename		6282478	0					
ANR	6282580	ReturnStatement	return data ;	306:2:6791:6802	6282478	5	True				
ANR	6282581	Identifier	data		6282478	0					
ANR	6282582	ElseStatement	else		6282478	0					
ANR	6282583	CompoundStatement		19:8:350:350	6282478	0					
ANR	6282584	ExpressionStatement	"eprintf ( ""Usage: head 7 [file]\\n"" )"	308:2:6816:6850	6282478	0	True				
ANR	6282585	CallExpression	"eprintf ( ""Usage: head 7 [file]\\n"" )"		6282478	0					
ANR	6282586	Callee	eprintf		6282478	0					
ANR	6282587	Identifier	eprintf		6282478	0					
ANR	6282588	ArgumentList	"""Usage: head 7 [file]\\n"""		6282478	1					
ANR	6282589	Argument	"""Usage: head 7 [file]\\n"""		6282478	0					
ANR	6282590	PrimaryExpression	"""Usage: head 7 [file]\\n"""		6282478	0					
ANR	6282591	ReturnStatement	return NULL ;	310:1:6856:6867	6282478	3	True				
ANR	6282592	Identifier	NULL		6282478	0					
ANR	6282593	ReturnType	R_API char *		6282478	1					
ANR	6282594	Identifier	r_syscmd_head		6282478	2					
ANR	6282595	ParameterList	"const char * file , int count"		6282478	3					
ANR	6282596	Parameter	const char * file	289:26:6432:6447	6282478	0	True				
ANR	6282597	ParameterType	const char *		6282478	0					
ANR	6282598	Identifier	file		6282478	1					
ANR	6282599	Parameter	int count	289:44:6450:6458	6282478	1	True				
ANR	6282600	ParameterType	int		6282478	0					
ANR	6282601	Identifier	count		6282478	1					
ANR	6282602	CFGEntryNode	ENTRY		6282478		True				
ANR	6282603	CFGExitNode	EXIT		6282478		True				
ANR	6282604	Symbol	p		6282478						
ANR	6282605	Symbol	file		6282478						
ANR	6282606	Symbol	NULL		6282478						
ANR	6282607	Symbol	filename		6282478						
ANR	6282608	Symbol	data		6282478						
ANR	6282609	Symbol	count		6282478						
ANR	6282610	Symbol	strchr		6282478						
ANR	6282611	Symbol	* p		6282478						
ANR	6282612	Symbol	strdup		6282478						
ANR	6282613	Symbol	r_file_slurp_lines		6282478						
ANR	6282614	Function	r_syscmd_tail	313:0:6872:7343							
ANR	6282615	FunctionDef	"r_syscmd_tail (const char * file , int count)"		6282614	0					
ANR	6282616	CompoundStatement		313:55:6927:7343	6282614	0					
ANR	6282617	IdentifierDeclStatement	const char * p = NULL ;	314:1:6930:6950	6282614	0	True				
ANR	6282618	IdentifierDecl	* p = NULL		6282614	0					
ANR	6282619	IdentifierDeclType	const char *		6282614	0					
ANR	6282620	Identifier	p		6282614	1					
ANR	6282621	AssignmentExpression	* p = NULL		6282614	2		=			
ANR	6282622	Identifier	NULL		6282614	0					
ANR	6282623	Identifier	NULL		6282614	1					
ANR	6282624	IfStatement	if ( file )		6282614	1					
ANR	6282625	Condition	file	315:5:6957:6960	6282614	0	True				
ANR	6282626	Identifier	file		6282614	0					
ANR	6282627	CompoundStatement		3:11:35:35	6282614	1					
ANR	6282628	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		6282614	0					
ANR	6282629	Condition	"p = strchr ( file , ' ' )"	316:6:6971:6994	6282614	0	True				
ANR	6282630	AssignmentExpression	"p = strchr ( file , ' ' )"		6282614	0		=			
ANR	6282631	Identifier	p		6282614	0					
ANR	6282632	CallExpression	"strchr ( file , ' ' )"		6282614	1					
ANR	6282633	Callee	strchr		6282614	0					
ANR	6282634	Identifier	strchr		6282614	0					
ANR	6282635	ArgumentList	file		6282614	1					
ANR	6282636	Argument	file		6282614	0					
ANR	6282637	Identifier	file		6282614	0					
ANR	6282638	Argument	' '		6282614	1					
ANR	6282639	PrimaryExpression	' '		6282614	0					
ANR	6282640	CompoundStatement		4:32:69:69	6282614	1					
ANR	6282641	ExpressionStatement	p = p + 1	317:3:7002:7011	6282614	0	True				
ANR	6282642	AssignmentExpression	p = p + 1		6282614	0		=			
ANR	6282643	Identifier	p		6282614	0					
ANR	6282644	AdditiveExpression	p + 1		6282614	1		+			
ANR	6282645	Identifier	p		6282614	0					
ANR	6282646	PrimaryExpression	1		6282614	1					
ANR	6282647	ElseStatement	else		6282614	0					
ANR	6282648	CompoundStatement		6:9:94:94	6282614	0					
ANR	6282649	ExpressionStatement	p = file	319:3:7027:7035	6282614	0	True				
ANR	6282650	AssignmentExpression	p = file		6282614	0		=			
ANR	6282651	Identifier	p		6282614	0					
ANR	6282652	Identifier	file		6282614	1					
ANR	6282653	IfStatement	if ( p && * p )		6282614	2					
ANR	6282654	Condition	p && * p	322:5:7049:7055	6282614	0	True				
ANR	6282655	AndExpression	p && * p		6282614	0		&&			
ANR	6282656	Identifier	p		6282614	0					
ANR	6282657	UnaryOperationExpression	* p		6282614	1					
ANR	6282658	UnaryOperator	*		6282614	0					
ANR	6282659	Identifier	p		6282614	1					
ANR	6282660	CompoundStatement		13:2:190:251	6282614	1					
ANR	6282661	IdentifierDeclStatement	char * filename = strdup ( p ) ;	323:2:7062:7089	6282614	0	True				
ANR	6282662	IdentifierDecl	* filename = strdup ( p )		6282614	0					
ANR	6282663	IdentifierDeclType	char *		6282614	0					
ANR	6282664	Identifier	filename		6282614	1					
ANR	6282665	AssignmentExpression	* filename = strdup ( p )		6282614	2		=			
ANR	6282666	Identifier	filename		6282614	0					
ANR	6282667	CallExpression	strdup ( p )		6282614	1					
ANR	6282668	Callee	strdup		6282614	0					
ANR	6282669	Identifier	strdup		6282614	0					
ANR	6282670	ArgumentList	p		6282614	1					
ANR	6282671	Argument	p		6282614	0					
ANR	6282672	Identifier	p		6282614	0					
ANR	6282673	ExpressionStatement	r_str_trim ( filename )	324:2:7093:7114	6282614	1	True				
ANR	6282674	CallExpression	r_str_trim ( filename )		6282614	0					
ANR	6282675	Callee	r_str_trim		6282614	0					
ANR	6282676	Identifier	r_str_trim		6282614	0					
ANR	6282677	ArgumentList	filename		6282614	1					
ANR	6282678	Argument	filename		6282614	0					
ANR	6282679	Identifier	filename		6282614	0					
ANR	6282680	IdentifierDeclStatement	"char * data = r_file_slurp_lines_from_bottom ( filename , count ) ;"	325:2:7118:7179	6282614	2	True				
ANR	6282681	IdentifierDecl	"* data = r_file_slurp_lines_from_bottom ( filename , count )"		6282614	0					
ANR	6282682	IdentifierDeclType	char *		6282614	0					
ANR	6282683	Identifier	data		6282614	1					
ANR	6282684	AssignmentExpression	"* data = r_file_slurp_lines_from_bottom ( filename , count )"		6282614	2		=			
ANR	6282685	Identifier	data		6282614	0					
ANR	6282686	CallExpression	"r_file_slurp_lines_from_bottom ( filename , count )"		6282614	1					
ANR	6282687	Callee	r_file_slurp_lines_from_bottom		6282614	0					
ANR	6282688	Identifier	r_file_slurp_lines_from_bottom		6282614	0					
ANR	6282689	ArgumentList	filename		6282614	1					
ANR	6282690	Argument	filename		6282614	0					
ANR	6282691	Identifier	filename		6282614	0					
ANR	6282692	Argument	count		6282614	1					
ANR	6282693	Identifier	count		6282614	0					
ANR	6282694	IfStatement	if ( ! data )		6282614	3					
ANR	6282695	Condition	! data	326:6:7187:7191	6282614	0	True				
ANR	6282696	UnaryOperationExpression	! data		6282614	0					
ANR	6282697	UnaryOperator	!		6282614	0					
ANR	6282698	Identifier	data		6282614	1					
ANR	6282699	CompoundStatement		14:13:266:266	6282614	1					
ANR	6282700	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	327:3:7199:7238	6282614	0	True				
ANR	6282701	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		6282614	0					
ANR	6282702	Callee	eprintf		6282614	0					
ANR	6282703	Identifier	eprintf		6282614	0					
ANR	6282704	ArgumentList	"""No such file or directory\\n"""		6282614	1					
ANR	6282705	Argument	"""No such file or directory\\n"""		6282614	0					
ANR	6282706	PrimaryExpression	"""No such file or directory\\n"""		6282614	0					
ANR	6282707	ExpressionStatement	free ( filename )	329:2:7246:7261	6282614	4	True				
ANR	6282708	CallExpression	free ( filename )		6282614	0					
ANR	6282709	Callee	free		6282614	0					
ANR	6282710	Identifier	free		6282614	0					
ANR	6282711	ArgumentList	filename		6282614	1					
ANR	6282712	Argument	filename		6282614	0					
ANR	6282713	Identifier	filename		6282614	0					
ANR	6282714	ReturnStatement	return data ;	330:2:7265:7276	6282614	5	True				
ANR	6282715	Identifier	data		6282614	0					
ANR	6282716	ElseStatement	else		6282614	0					
ANR	6282717	CompoundStatement		19:8:358:358	6282614	0					
ANR	6282718	ExpressionStatement	"eprintf ( ""Usage: tail 7 [file]\\n"" )"	332:2:7290:7324	6282614	0	True				
ANR	6282719	CallExpression	"eprintf ( ""Usage: tail 7 [file]\\n"" )"		6282614	0					
ANR	6282720	Callee	eprintf		6282614	0					
ANR	6282721	Identifier	eprintf		6282614	0					
ANR	6282722	ArgumentList	"""Usage: tail 7 [file]\\n"""		6282614	1					
ANR	6282723	Argument	"""Usage: tail 7 [file]\\n"""		6282614	0					
ANR	6282724	PrimaryExpression	"""Usage: tail 7 [file]\\n"""		6282614	0					
ANR	6282725	ReturnStatement	return NULL ;	334:1:7330:7341	6282614	3	True				
ANR	6282726	Identifier	NULL		6282614	0					
ANR	6282727	ReturnType	R_API char *		6282614	1					
ANR	6282728	Identifier	r_syscmd_tail		6282614	2					
ANR	6282729	ParameterList	"const char * file , int count"		6282614	3					
ANR	6282730	Parameter	const char * file	313:26:6898:6913	6282614	0	True				
ANR	6282731	ParameterType	const char *		6282614	0					
ANR	6282732	Identifier	file		6282614	1					
ANR	6282733	Parameter	int count	313:44:6916:6924	6282614	1	True				
ANR	6282734	ParameterType	int		6282614	0					
ANR	6282735	Identifier	count		6282614	1					
ANR	6282736	CFGEntryNode	ENTRY		6282614		True				
ANR	6282737	CFGExitNode	EXIT		6282614		True				
ANR	6282738	Symbol	p		6282614						
ANR	6282739	Symbol	file		6282614						
ANR	6282740	Symbol	NULL		6282614						
ANR	6282741	Symbol	filename		6282614						
ANR	6282742	Symbol	data		6282614						
ANR	6282743	Symbol	count		6282614						
ANR	6282744	Symbol	strchr		6282614						
ANR	6282745	Symbol	* p		6282614						
ANR	6282746	Symbol	strdup		6282614						
ANR	6282747	Symbol	r_file_slurp_lines_from_bottom		6282614						
ANR	6282748	Function	r_syscmd_uniq	337:0:7346:8013							
ANR	6282749	FunctionDef	r_syscmd_uniq (const char * file)		6282748	0					
ANR	6282750	CompoundStatement		337:44:7390:8013	6282748	0					
ANR	6282751	IdentifierDeclStatement	int sz ;	338:1:7393:7399	6282748	0	True				
ANR	6282752	IdentifierDecl	sz		6282748	0					
ANR	6282753	IdentifierDeclType	int		6282748	0					
ANR	6282754	Identifier	sz		6282748	1					
ANR	6282755	IdentifierDeclStatement	const char * p = NULL ;	339:1:7402:7422	6282748	1	True				
ANR	6282756	IdentifierDecl	* p = NULL		6282748	0					
ANR	6282757	IdentifierDeclType	const char *		6282748	0					
ANR	6282758	Identifier	p		6282748	1					
ANR	6282759	AssignmentExpression	* p = NULL		6282748	2		=			
ANR	6282760	Identifier	NULL		6282748	0					
ANR	6282761	Identifier	NULL		6282748	1					
ANR	6282762	IdentifierDeclStatement	RList * list = NULL ;	340:1:7425:7443	6282748	2	True				
ANR	6282763	IdentifierDecl	* list = NULL		6282748	0					
ANR	6282764	IdentifierDeclType	RList *		6282748	0					
ANR	6282765	Identifier	list		6282748	1					
ANR	6282766	AssignmentExpression	* list = NULL		6282748	2		=			
ANR	6282767	Identifier	NULL		6282748	0					
ANR	6282768	Identifier	NULL		6282748	1					
ANR	6282769	IfStatement	if ( file )		6282748	3					
ANR	6282770	Condition	file	341:5:7450:7453	6282748	0	True				
ANR	6282771	Identifier	file		6282748	0					
ANR	6282772	CompoundStatement		5:11:65:65	6282748	1					
ANR	6282773	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		6282748	0					
ANR	6282774	Condition	"p = strchr ( file , ' ' )"	342:6:7464:7487	6282748	0	True				
ANR	6282775	AssignmentExpression	"p = strchr ( file , ' ' )"		6282748	0		=			
ANR	6282776	Identifier	p		6282748	0					
ANR	6282777	CallExpression	"strchr ( file , ' ' )"		6282748	1					
ANR	6282778	Callee	strchr		6282748	0					
ANR	6282779	Identifier	strchr		6282748	0					
ANR	6282780	ArgumentList	file		6282748	1					
ANR	6282781	Argument	file		6282748	0					
ANR	6282782	Identifier	file		6282748	0					
ANR	6282783	Argument	' '		6282748	1					
ANR	6282784	PrimaryExpression	' '		6282748	0					
ANR	6282785	CompoundStatement		6:32:99:99	6282748	1					
ANR	6282786	ExpressionStatement	p = p + 1	343:3:7495:7504	6282748	0	True				
ANR	6282787	AssignmentExpression	p = p + 1		6282748	0		=			
ANR	6282788	Identifier	p		6282748	0					
ANR	6282789	AdditiveExpression	p + 1		6282748	1		+			
ANR	6282790	Identifier	p		6282748	0					
ANR	6282791	PrimaryExpression	1		6282748	1					
ANR	6282792	ElseStatement	else		6282748	0					
ANR	6282793	CompoundStatement		8:9:124:124	6282748	0					
ANR	6282794	ExpressionStatement	p = file	345:3:7520:7528	6282748	0	True				
ANR	6282795	AssignmentExpression	p = file		6282748	0		=			
ANR	6282796	Identifier	p		6282748	0					
ANR	6282797	Identifier	file		6282748	1					
ANR	6282798	IfStatement	if ( p && * p )		6282748	4					
ANR	6282799	Condition	p && * p	348:5:7542:7548	6282748	0	True				
ANR	6282800	AndExpression	p && * p		6282748	0		&&			
ANR	6282801	Identifier	p		6282748	0					
ANR	6282802	UnaryOperationExpression	* p		6282748	1					
ANR	6282803	UnaryOperator	*		6282748	0					
ANR	6282804	Identifier	p		6282748	1					
ANR	6282805	CompoundStatement		15:2:220:261	6282748	1					
ANR	6282806	IdentifierDeclStatement	char * filename = strdup ( p ) ;	349:2:7555:7582	6282748	0	True				
ANR	6282807	IdentifierDecl	* filename = strdup ( p )		6282748	0					
ANR	6282808	IdentifierDeclType	char *		6282748	0					
ANR	6282809	Identifier	filename		6282748	1					
ANR	6282810	AssignmentExpression	* filename = strdup ( p )		6282748	2		=			
ANR	6282811	Identifier	filename		6282748	0					
ANR	6282812	CallExpression	strdup ( p )		6282748	1					
ANR	6282813	Callee	strdup		6282748	0					
ANR	6282814	Identifier	strdup		6282748	0					
ANR	6282815	ArgumentList	p		6282748	1					
ANR	6282816	Argument	p		6282748	0					
ANR	6282817	Identifier	p		6282748	0					
ANR	6282818	ExpressionStatement	r_str_trim ( filename )	350:2:7586:7607	6282748	1	True				
ANR	6282819	CallExpression	r_str_trim ( filename )		6282748	0					
ANR	6282820	Callee	r_str_trim		6282748	0					
ANR	6282821	Identifier	r_str_trim		6282748	0					
ANR	6282822	ArgumentList	filename		6282748	1					
ANR	6282823	Argument	filename		6282748	0					
ANR	6282824	Identifier	filename		6282748	0					
ANR	6282825	IdentifierDeclStatement	"char * data = r_file_slurp ( filename , & sz ) ;"	351:2:7611:7652	6282748	2	True				
ANR	6282826	IdentifierDecl	"* data = r_file_slurp ( filename , & sz )"		6282748	0					
ANR	6282827	IdentifierDeclType	char *		6282748	0					
ANR	6282828	Identifier	data		6282748	1					
ANR	6282829	AssignmentExpression	"* data = r_file_slurp ( filename , & sz )"		6282748	2		=			
ANR	6282830	Identifier	data		6282748	0					
ANR	6282831	CallExpression	"r_file_slurp ( filename , & sz )"		6282748	1					
ANR	6282832	Callee	r_file_slurp		6282748	0					
ANR	6282833	Identifier	r_file_slurp		6282748	0					
ANR	6282834	ArgumentList	filename		6282748	1					
ANR	6282835	Argument	filename		6282748	0					
ANR	6282836	Identifier	filename		6282748	0					
ANR	6282837	Argument	& sz		6282748	1					
ANR	6282838	UnaryOperationExpression	& sz		6282748	0					
ANR	6282839	UnaryOperator	&		6282748	0					
ANR	6282840	Identifier	sz		6282748	1					
ANR	6282841	IfStatement	if ( ! data )		6282748	3					
ANR	6282842	Condition	! data	352:6:7660:7664	6282748	0	True				
ANR	6282843	UnaryOperationExpression	! data		6282748	0					
ANR	6282844	UnaryOperator	!		6282748	0					
ANR	6282845	Identifier	data		6282748	1					
ANR	6282846	CompoundStatement		16:13:276:276	6282748	1					
ANR	6282847	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	353:3:7672:7711	6282748	0	True				
ANR	6282848	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		6282748	0					
ANR	6282849	Callee	eprintf		6282748	0					
ANR	6282850	Identifier	eprintf		6282748	0					
ANR	6282851	ArgumentList	"""No such file or directory\\n"""		6282748	1					
ANR	6282852	Argument	"""No such file or directory\\n"""		6282748	0					
ANR	6282853	PrimaryExpression	"""No such file or directory\\n"""		6282748	0					
ANR	6282854	ElseStatement	else		6282748	0					
ANR	6282855	CompoundStatement		20:3:380:425	6282748	0					
ANR	6282856	ExpressionStatement	"list = r_str_split_list ( data , ""\\n"" , 0 )"	355:3:7727:7766	6282748	0	True				
ANR	6282857	AssignmentExpression	"list = r_str_split_list ( data , ""\\n"" , 0 )"		6282748	0		=			
ANR	6282858	Identifier	list		6282748	0					
ANR	6282859	CallExpression	"r_str_split_list ( data , ""\\n"" , 0 )"		6282748	1					
ANR	6282860	Callee	r_str_split_list		6282748	0					
ANR	6282861	Identifier	r_str_split_list		6282748	0					
ANR	6282862	ArgumentList	data		6282748	1					
ANR	6282863	Argument	data		6282748	0					
ANR	6282864	Identifier	data		6282748	0					
ANR	6282865	Argument	"""\\n"""		6282748	1					
ANR	6282866	PrimaryExpression	"""\\n"""		6282748	0					
ANR	6282867	Argument	0		6282748	2					
ANR	6282868	PrimaryExpression	0		6282748	0					
ANR	6282869	IdentifierDeclStatement	"RList * uniq_list = r_list_uniq ( list , cmpstr ) ;"	356:3:7771:7816	6282748	1	True				
ANR	6282870	IdentifierDecl	"* uniq_list = r_list_uniq ( list , cmpstr )"		6282748	0					
ANR	6282871	IdentifierDeclType	RList *		6282748	0					
ANR	6282872	Identifier	uniq_list		6282748	1					
ANR	6282873	AssignmentExpression	"* uniq_list = r_list_uniq ( list , cmpstr )"		6282748	2		=			
ANR	6282874	Identifier	uniq_list		6282748	0					
ANR	6282875	CallExpression	"r_list_uniq ( list , cmpstr )"		6282748	1					
ANR	6282876	Callee	r_list_uniq		6282748	0					
ANR	6282877	Identifier	r_list_uniq		6282748	0					
ANR	6282878	ArgumentList	list		6282748	1					
ANR	6282879	Argument	list		6282748	0					
ANR	6282880	Identifier	list		6282748	0					
ANR	6282881	Argument	cmpstr		6282748	1					
ANR	6282882	Identifier	cmpstr		6282748	0					
ANR	6282883	ExpressionStatement	"data = r_list_to_str ( uniq_list , '\\n' )"	357:3:7821:7859	6282748	2	True				
ANR	6282884	AssignmentExpression	"data = r_list_to_str ( uniq_list , '\\n' )"		6282748	0		=			
ANR	6282885	Identifier	data		6282748	0					
ANR	6282886	CallExpression	"r_list_to_str ( uniq_list , '\\n' )"		6282748	1					
ANR	6282887	Callee	r_list_to_str		6282748	0					
ANR	6282888	Identifier	r_list_to_str		6282748	0					
ANR	6282889	ArgumentList	uniq_list		6282748	1					
ANR	6282890	Argument	uniq_list		6282748	0					
ANR	6282891	Identifier	uniq_list		6282748	0					
ANR	6282892	Argument	'\\n'		6282748	1					
ANR	6282893	PrimaryExpression	'\\n'		6282748	0					
ANR	6282894	ExpressionStatement	r_list_free ( uniq_list )	358:3:7864:7887	6282748	3	True				
ANR	6282895	CallExpression	r_list_free ( uniq_list )		6282748	0					
ANR	6282896	Callee	r_list_free		6282748	0					
ANR	6282897	Identifier	r_list_free		6282748	0					
ANR	6282898	ArgumentList	uniq_list		6282748	1					
ANR	6282899	Argument	uniq_list		6282748	0					
ANR	6282900	Identifier	uniq_list		6282748	0					
ANR	6282901	ExpressionStatement	r_list_free ( list )	359:3:7892:7910	6282748	4	True				
ANR	6282902	CallExpression	r_list_free ( list )		6282748	0					
ANR	6282903	Callee	r_list_free		6282748	0					
ANR	6282904	Identifier	r_list_free		6282748	0					
ANR	6282905	ArgumentList	list		6282748	1					
ANR	6282906	Argument	list		6282748	0					
ANR	6282907	Identifier	list		6282748	0					
ANR	6282908	ExpressionStatement	free ( filename )	361:2:7918:7933	6282748	4	True				
ANR	6282909	CallExpression	free ( filename )		6282748	0					
ANR	6282910	Callee	free		6282748	0					
ANR	6282911	Identifier	free		6282748	0					
ANR	6282912	ArgumentList	filename		6282748	1					
ANR	6282913	Argument	filename		6282748	0					
ANR	6282914	Identifier	filename		6282748	0					
ANR	6282915	ReturnStatement	return data ;	362:2:7937:7948	6282748	5	True				
ANR	6282916	Identifier	data		6282748	0					
ANR	6282917	ElseStatement	else		6282748	0					
ANR	6282918	CompoundStatement		27:8:567:567	6282748	0					
ANR	6282919	ExpressionStatement	"eprintf ( ""Usage: uniq [file]\\n"" )"	364:2:7962:7994	6282748	0	True				
ANR	6282920	CallExpression	"eprintf ( ""Usage: uniq [file]\\n"" )"		6282748	0					
ANR	6282921	Callee	eprintf		6282748	0					
ANR	6282922	Identifier	eprintf		6282748	0					
ANR	6282923	ArgumentList	"""Usage: uniq [file]\\n"""		6282748	1					
ANR	6282924	Argument	"""Usage: uniq [file]\\n"""		6282748	0					
ANR	6282925	PrimaryExpression	"""Usage: uniq [file]\\n"""		6282748	0					
ANR	6282926	ReturnStatement	return NULL ;	366:1:8000:8011	6282748	5	True				
ANR	6282927	Identifier	NULL		6282748	0					
ANR	6282928	ReturnType	R_API char *		6282748	1					
ANR	6282929	Identifier	r_syscmd_uniq		6282748	2					
ANR	6282930	ParameterList	const char * file		6282748	3					
ANR	6282931	Parameter	const char * file	337:26:7372:7387	6282748	0	True				
ANR	6282932	ParameterType	const char *		6282748	0					
ANR	6282933	Identifier	file		6282748	1					
ANR	6282934	CFGEntryNode	ENTRY		6282748		True				
ANR	6282935	CFGExitNode	EXIT		6282748		True				
ANR	6282936	Symbol	r_file_slurp		6282748						
ANR	6282937	Symbol	NULL		6282748						
ANR	6282938	Symbol	data		6282748						
ANR	6282939	Symbol	sz		6282748						
ANR	6282940	Symbol	r_str_split_list		6282748						
ANR	6282941	Symbol	strchr		6282748						
ANR	6282942	Symbol	uniq_list		6282748						
ANR	6282943	Symbol	list		6282748						
ANR	6282944	Symbol	cmpstr		6282748						
ANR	6282945	Symbol	p		6282748						
ANR	6282946	Symbol	& sz		6282748						
ANR	6282947	Symbol	r_list_to_str		6282748						
ANR	6282948	Symbol	file		6282748						
ANR	6282949	Symbol	filename		6282748						
ANR	6282950	Symbol	r_list_uniq		6282748						
ANR	6282951	Symbol	* p		6282748						
ANR	6282952	Symbol	strdup		6282748						
ANR	6282953	Function	r_syscmd_join	369:0:8016:9697							
ANR	6282954	FunctionDef	"r_syscmd_join (const char * file1 , const char * file2)"		6282953	0					
ANR	6282955	CompoundStatement		369:64:8080:9697	6282953	0					
ANR	6282956	IdentifierDeclStatement	"int sz1 , sz2 ;"	370:1:8083:8095	6282953	0	True				
ANR	6282957	IdentifierDecl	sz1		6282953	0					
ANR	6282958	IdentifierDeclType	int		6282953	0					
ANR	6282959	Identifier	sz1		6282953	1					
ANR	6282960	IdentifierDecl	sz2		6282953	1					
ANR	6282961	IdentifierDeclType	int		6282953	0					
ANR	6282962	Identifier	sz2		6282953	1					
ANR	6282963	IdentifierDeclStatement	"const char * p1 = NULL , * p2 = NULL ;"	371:1:8098:8131	6282953	1	True				
ANR	6282964	IdentifierDecl	* p1 = NULL		6282953	0					
ANR	6282965	IdentifierDeclType	const char *		6282953	0					
ANR	6282966	Identifier	p1		6282953	1					
ANR	6282967	AssignmentExpression	* p1 = NULL		6282953	2		=			
ANR	6282968	Identifier	NULL		6282953	0					
ANR	6282969	Identifier	NULL		6282953	1					
ANR	6282970	IdentifierDecl	* p2 = NULL		6282953	1					
ANR	6282971	IdentifierDeclType	const char *		6282953	0					
ANR	6282972	Identifier	p2		6282953	1					
ANR	6282973	AssignmentExpression	* p2 = NULL		6282953	2		=			
ANR	6282974	Identifier	NULL		6282953	0					
ANR	6282975	Identifier	NULL		6282953	1					
ANR	6282976	IdentifierDeclStatement	"RList * list1 , * list2 , * list = r_list_newf ( NULL ) ;"	372:1:8134:8182	6282953	2	True				
ANR	6282977	IdentifierDecl	* list1		6282953	0					
ANR	6282978	IdentifierDeclType	RList *		6282953	0					
ANR	6282979	Identifier	list1		6282953	1					
ANR	6282980	IdentifierDecl	* list2		6282953	1					
ANR	6282981	IdentifierDeclType	RList *		6282953	0					
ANR	6282982	Identifier	list2		6282953	1					
ANR	6282983	IdentifierDecl	* list = r_list_newf ( NULL )		6282953	2					
ANR	6282984	IdentifierDeclType	RList *		6282953	0					
ANR	6282985	Identifier	list		6282953	1					
ANR	6282986	AssignmentExpression	* list = r_list_newf ( NULL )		6282953	2		=			
ANR	6282987	Identifier	list		6282953	0					
ANR	6282988	CallExpression	r_list_newf ( NULL )		6282953	1					
ANR	6282989	Callee	r_list_newf		6282953	0					
ANR	6282990	Identifier	r_list_newf		6282953	0					
ANR	6282991	ArgumentList	NULL		6282953	1					
ANR	6282992	Argument	NULL		6282953	0					
ANR	6282993	Identifier	NULL		6282953	0					
ANR	6282994	IfStatement	if ( ! list )		6282953	3					
ANR	6282995	Condition	! list	373:5:8189:8193	6282953	0	True				
ANR	6282996	UnaryOperationExpression	! list		6282953	0					
ANR	6282997	UnaryOperator	!		6282953	0					
ANR	6282998	Identifier	list		6282953	1					
ANR	6282999	CompoundStatement		5:12:115:115	6282953	1					
ANR	6283000	ReturnStatement	return NULL ;	374:2:8200:8211	6282953	0	True				
ANR	6283001	Identifier	NULL		6282953	0					
ANR	6283002	IfStatement	if ( file1 )		6282953	4					
ANR	6283003	Condition	file1	376:5:8221:8225	6282953	0	True				
ANR	6283004	Identifier	file1		6282953	0					
ANR	6283005	CompoundStatement		8:12:147:147	6282953	1					
ANR	6283006	IfStatement	"if ( ( p1 = strchr ( file1 , ' ' ) ) )"		6282953	0					
ANR	6283007	Condition	"p1 = strchr ( file1 , ' ' )"	377:6:8236:8261	6282953	0	True				
ANR	6283008	AssignmentExpression	"p1 = strchr ( file1 , ' ' )"		6282953	0		=			
ANR	6283009	Identifier	p1		6282953	0					
ANR	6283010	CallExpression	"strchr ( file1 , ' ' )"		6282953	1					
ANR	6283011	Callee	strchr		6282953	0					
ANR	6283012	Identifier	strchr		6282953	0					
ANR	6283013	ArgumentList	file1		6282953	1					
ANR	6283014	Argument	file1		6282953	0					
ANR	6283015	Identifier	file1		6282953	0					
ANR	6283016	Argument	' '		6282953	1					
ANR	6283017	PrimaryExpression	' '		6282953	0					
ANR	6283018	CompoundStatement		9:34:183:183	6282953	1					
ANR	6283019	ExpressionStatement	p1 = p1 + 1	378:3:8269:8280	6282953	0	True				
ANR	6283020	AssignmentExpression	p1 = p1 + 1		6282953	0		=			
ANR	6283021	Identifier	p1		6282953	0					
ANR	6283022	AdditiveExpression	p1 + 1		6282953	1		+			
ANR	6283023	Identifier	p1		6282953	0					
ANR	6283024	PrimaryExpression	1		6282953	1					
ANR	6283025	ElseStatement	else		6282953	0					
ANR	6283026	CompoundStatement		11:9:210:210	6282953	0					
ANR	6283027	ExpressionStatement	p1 = file1	380:3:8296:8306	6282953	0	True				
ANR	6283028	AssignmentExpression	p1 = file1		6282953	0		=			
ANR	6283029	Identifier	p1		6282953	0					
ANR	6283030	Identifier	file1		6282953	1					
ANR	6283031	IfStatement	if ( file2 )		6282953	5					
ANR	6283032	Condition	file2	383:5:8320:8324	6282953	0	True				
ANR	6283033	Identifier	file2		6282953	0					
ANR	6283034	CompoundStatement		15:12:246:246	6282953	1					
ANR	6283035	IfStatement	"if ( ( p2 = strchr ( file2 , ' ' ) ) )"		6282953	0					
ANR	6283036	Condition	"p2 = strchr ( file2 , ' ' )"	384:6:8335:8360	6282953	0	True				
ANR	6283037	AssignmentExpression	"p2 = strchr ( file2 , ' ' )"		6282953	0		=			
ANR	6283038	Identifier	p2		6282953	0					
ANR	6283039	CallExpression	"strchr ( file2 , ' ' )"		6282953	1					
ANR	6283040	Callee	strchr		6282953	0					
ANR	6283041	Identifier	strchr		6282953	0					
ANR	6283042	ArgumentList	file2		6282953	1					
ANR	6283043	Argument	file2		6282953	0					
ANR	6283044	Identifier	file2		6282953	0					
ANR	6283045	Argument	' '		6282953	1					
ANR	6283046	PrimaryExpression	' '		6282953	0					
ANR	6283047	CompoundStatement		16:34:282:282	6282953	1					
ANR	6283048	ExpressionStatement	p2 = p2 + 1	385:3:8368:8379	6282953	0	True				
ANR	6283049	AssignmentExpression	p2 = p2 + 1		6282953	0		=			
ANR	6283050	Identifier	p2		6282953	0					
ANR	6283051	AdditiveExpression	p2 + 1		6282953	1		+			
ANR	6283052	Identifier	p2		6282953	0					
ANR	6283053	PrimaryExpression	1		6282953	1					
ANR	6283054	ElseStatement	else		6282953	0					
ANR	6283055	CompoundStatement		18:9:309:309	6282953	0					
ANR	6283056	ExpressionStatement	p2 = file2	387:3:8395:8405	6282953	0	True				
ANR	6283057	AssignmentExpression	p2 = file2		6282953	0		=			
ANR	6283058	Identifier	p2		6282953	0					
ANR	6283059	Identifier	file2		6282953	1					
ANR	6283060	IfStatement	if ( p1 && * p1 && p2 && * p2 )		6282953	6					
ANR	6283061	Condition	p1 && * p1 && p2 && * p2	390:5:8419:8440	6282953	0	True				
ANR	6283062	AndExpression	p1 && * p1 && p2 && * p2		6282953	0		&&			
ANR	6283063	Identifier	p1		6282953	0					
ANR	6283064	AndExpression	* p1 && p2 && * p2		6282953	1		&&			
ANR	6283065	UnaryOperationExpression	* p1		6282953	0					
ANR	6283066	UnaryOperator	*		6282953	0					
ANR	6283067	Identifier	p1		6282953	1					
ANR	6283068	AndExpression	p2 && * p2		6282953	1		&&			
ANR	6283069	Identifier	p2		6282953	0					
ANR	6283070	UnaryOperationExpression	* p2		6282953	1					
ANR	6283071	UnaryOperator	*		6282953	0					
ANR	6283072	Identifier	p2		6282953	1					
ANR	6283073	CompoundStatement		30:2:602:626	6282953	1					
ANR	6283074	IdentifierDeclStatement	char * filename1 = strdup ( p1 ) ;	391:2:8448:8477	6282953	0	True				
ANR	6283075	IdentifierDecl	* filename1 = strdup ( p1 )		6282953	0					
ANR	6283076	IdentifierDeclType	char *		6282953	0					
ANR	6283077	Identifier	filename1		6282953	1					
ANR	6283078	AssignmentExpression	* filename1 = strdup ( p1 )		6282953	2		=			
ANR	6283079	Identifier	filename1		6282953	0					
ANR	6283080	CallExpression	strdup ( p1 )		6282953	1					
ANR	6283081	Callee	strdup		6282953	0					
ANR	6283082	Identifier	strdup		6282953	0					
ANR	6283083	ArgumentList	p1		6282953	1					
ANR	6283084	Argument	p1		6282953	0					
ANR	6283085	Identifier	p1		6282953	0					
ANR	6283086	IdentifierDeclStatement	char * filename2 = strdup ( p2 ) ;	392:2:8481:8510	6282953	1	True				
ANR	6283087	IdentifierDecl	* filename2 = strdup ( p2 )		6282953	0					
ANR	6283088	IdentifierDeclType	char *		6282953	0					
ANR	6283089	Identifier	filename2		6282953	1					
ANR	6283090	AssignmentExpression	* filename2 = strdup ( p2 )		6282953	2		=			
ANR	6283091	Identifier	filename2		6282953	0					
ANR	6283092	CallExpression	strdup ( p2 )		6282953	1					
ANR	6283093	Callee	strdup		6282953	0					
ANR	6283094	Identifier	strdup		6282953	0					
ANR	6283095	ArgumentList	p2		6282953	1					
ANR	6283096	Argument	p2		6282953	0					
ANR	6283097	Identifier	p2		6282953	0					
ANR	6283098	ExpressionStatement	r_str_trim ( filename1 )	393:2:8514:8536	6282953	2	True				
ANR	6283099	CallExpression	r_str_trim ( filename1 )		6282953	0					
ANR	6283100	Callee	r_str_trim		6282953	0					
ANR	6283101	Identifier	r_str_trim		6282953	0					
ANR	6283102	ArgumentList	filename1		6282953	1					
ANR	6283103	Argument	filename1		6282953	0					
ANR	6283104	Identifier	filename1		6282953	0					
ANR	6283105	ExpressionStatement	r_str_trim ( filename2 )	394:2:8540:8562	6282953	3	True				
ANR	6283106	CallExpression	r_str_trim ( filename2 )		6282953	0					
ANR	6283107	Callee	r_str_trim		6282953	0					
ANR	6283108	Identifier	r_str_trim		6282953	0					
ANR	6283109	ArgumentList	filename2		6282953	1					
ANR	6283110	Argument	filename2		6282953	0					
ANR	6283111	Identifier	filename2		6282953	0					
ANR	6283112	IdentifierDeclStatement	"char * data1 = r_file_slurp ( filename1 , & sz1 ) ;"	395:2:8566:8610	6282953	4	True				
ANR	6283113	IdentifierDecl	"* data1 = r_file_slurp ( filename1 , & sz1 )"		6282953	0					
ANR	6283114	IdentifierDeclType	char *		6282953	0					
ANR	6283115	Identifier	data1		6282953	1					
ANR	6283116	AssignmentExpression	"* data1 = r_file_slurp ( filename1 , & sz1 )"		6282953	2		=			
ANR	6283117	Identifier	data1		6282953	0					
ANR	6283118	CallExpression	"r_file_slurp ( filename1 , & sz1 )"		6282953	1					
ANR	6283119	Callee	r_file_slurp		6282953	0					
ANR	6283120	Identifier	r_file_slurp		6282953	0					
ANR	6283121	ArgumentList	filename1		6282953	1					
ANR	6283122	Argument	filename1		6282953	0					
ANR	6283123	Identifier	filename1		6282953	0					
ANR	6283124	Argument	& sz1		6282953	1					
ANR	6283125	UnaryOperationExpression	& sz1		6282953	0					
ANR	6283126	UnaryOperator	&		6282953	0					
ANR	6283127	Identifier	sz1		6282953	1					
ANR	6283128	IdentifierDeclStatement	"char * data2 = r_file_slurp ( filename2 , & sz2 ) ;"	396:2:8614:8658	6282953	5	True				
ANR	6283129	IdentifierDecl	"* data2 = r_file_slurp ( filename2 , & sz2 )"		6282953	0					
ANR	6283130	IdentifierDeclType	char *		6282953	0					
ANR	6283131	Identifier	data2		6282953	1					
ANR	6283132	AssignmentExpression	"* data2 = r_file_slurp ( filename2 , & sz2 )"		6282953	2		=			
ANR	6283133	Identifier	data2		6282953	0					
ANR	6283134	CallExpression	"r_file_slurp ( filename2 , & sz2 )"		6282953	1					
ANR	6283135	Callee	r_file_slurp		6282953	0					
ANR	6283136	Identifier	r_file_slurp		6282953	0					
ANR	6283137	ArgumentList	filename2		6282953	1					
ANR	6283138	Argument	filename2		6282953	0					
ANR	6283139	Identifier	filename2		6282953	0					
ANR	6283140	Argument	& sz2		6282953	1					
ANR	6283141	UnaryOperationExpression	& sz2		6282953	0					
ANR	6283142	UnaryOperator	&		6282953	0					
ANR	6283143	Identifier	sz2		6282953	1					
ANR	6283144	IdentifierDeclStatement	char * data = NULL ;	397:2:8662:8679	6282953	6	True				
ANR	6283145	IdentifierDecl	* data = NULL		6282953	0					
ANR	6283146	IdentifierDeclType	char *		6282953	0					
ANR	6283147	Identifier	data		6282953	1					
ANR	6283148	AssignmentExpression	* data = NULL		6282953	2		=			
ANR	6283149	Identifier	NULL		6282953	0					
ANR	6283150	Identifier	NULL		6282953	1					
ANR	6283151	IdentifierDeclStatement	"RListIter * iter1 , * iter2 ;"	398:2:8683:8707	6282953	7	True				
ANR	6283152	IdentifierDecl	* iter1		6282953	0					
ANR	6283153	IdentifierDeclType	RListIter *		6282953	0					
ANR	6283154	Identifier	iter1		6282953	1					
ANR	6283155	IdentifierDecl	* iter2		6282953	1					
ANR	6283156	IdentifierDeclType	RListIter *		6282953	0					
ANR	6283157	Identifier	iter2		6282953	1					
ANR	6283158	IfStatement	if ( ! data1 && ! data2 )		6282953	8					
ANR	6283159	Condition	! data1 && ! data2	399:6:8715:8730	6282953	0	True				
ANR	6283160	AndExpression	! data1 && ! data2		6282953	0		&&			
ANR	6283161	UnaryOperationExpression	! data1		6282953	0					
ANR	6283162	UnaryOperator	!		6282953	0					
ANR	6283163	Identifier	data1		6282953	1					
ANR	6283164	UnaryOperationExpression	! data2		6282953	1					
ANR	6283165	UnaryOperator	!		6282953	0					
ANR	6283166	Identifier	data2		6282953	1					
ANR	6283167	CompoundStatement		31:24:652:652	6282953	1					
ANR	6283168	ExpressionStatement	"eprintf ( ""No such files or directory\\n"" )"	400:3:8738:8778	6282953	0	True				
ANR	6283169	CallExpression	"eprintf ( ""No such files or directory\\n"" )"		6282953	0					
ANR	6283170	Callee	eprintf		6282953	0					
ANR	6283171	Identifier	eprintf		6282953	0					
ANR	6283172	ArgumentList	"""No such files or directory\\n"""		6282953	1					
ANR	6283173	Argument	"""No such files or directory\\n"""		6282953	0					
ANR	6283174	PrimaryExpression	"""No such files or directory\\n"""		6282953	0					
ANR	6283175	ElseStatement	else		6282953	0					
ANR	6283176	CompoundStatement		37:3:807:824	6282953	0					
ANR	6283177	ExpressionStatement	"list1 = r_str_split_list ( data1 , ""\\n"" , 0 )"	402:3:8794:8836	6282953	0	True				
ANR	6283178	AssignmentExpression	"list1 = r_str_split_list ( data1 , ""\\n"" , 0 )"		6282953	0		=			
ANR	6283179	Identifier	list1		6282953	0					
ANR	6283180	CallExpression	"r_str_split_list ( data1 , ""\\n"" , 0 )"		6282953	1					
ANR	6283181	Callee	r_str_split_list		6282953	0					
ANR	6283182	Identifier	r_str_split_list		6282953	0					
ANR	6283183	ArgumentList	data1		6282953	1					
ANR	6283184	Argument	data1		6282953	0					
ANR	6283185	Identifier	data1		6282953	0					
ANR	6283186	Argument	"""\\n"""		6282953	1					
ANR	6283187	PrimaryExpression	"""\\n"""		6282953	0					
ANR	6283188	Argument	0		6282953	2					
ANR	6283189	PrimaryExpression	0		6282953	0					
ANR	6283190	ExpressionStatement	"list2 = r_str_split_list ( data2 , ""\\n"" , 0 )"	403:3:8841:8882	6282953	1	True				
ANR	6283191	AssignmentExpression	"list2 = r_str_split_list ( data2 , ""\\n"" , 0 )"		6282953	0		=			
ANR	6283192	Identifier	list2		6282953	0					
ANR	6283193	CallExpression	"r_str_split_list ( data2 , ""\\n"" , 0 )"		6282953	1					
ANR	6283194	Callee	r_str_split_list		6282953	0					
ANR	6283195	Identifier	r_str_split_list		6282953	0					
ANR	6283196	ArgumentList	data2		6282953	1					
ANR	6283197	Argument	data2		6282953	0					
ANR	6283198	Identifier	data2		6282953	0					
ANR	6283199	Argument	"""\\n"""		6282953	1					
ANR	6283200	PrimaryExpression	"""\\n"""		6282953	0					
ANR	6283201	Argument	0		6282953	2					
ANR	6283202	PrimaryExpression	0		6282953	0					
ANR	6283203	IdentifierDeclStatement	"char * str1 , * str2 ;"	405:3:8888:8905	6282953	2	True				
ANR	6283204	IdentifierDecl	* str1		6282953	0					
ANR	6283205	IdentifierDeclType	char *		6282953	0					
ANR	6283206	Identifier	str1		6282953	1					
ANR	6283207	IdentifierDecl	* str2		6282953	1					
ANR	6283208	IdentifierDeclType	char *		6282953	0					
ANR	6283209	Identifier	str2		6282953	1					
ANR	6283210	Statement	r_list_foreach	406:3:8910:8923	6282953	3	True				
ANR	6283211	Statement	(	406:18:8925:8925	6282953	4	True				
ANR	6283212	Statement	list1	406:19:8926:8930	6282953	5	True				
ANR	6283213	Statement	","	406:24:8931:8931	6282953	6	True				
ANR	6283214	Statement	iter1	406:26:8933:8937	6282953	7	True				
ANR	6283215	Statement	","	406:31:8938:8938	6282953	8	True				
ANR	6283216	Statement	str1	406:33:8940:8943	6282953	9	True				
ANR	6283217	Statement	)	406:37:8944:8944	6282953	10	True				
ANR	6283218	CompoundStatement		40:4:930:961	6282953	11					
ANR	6283219	IdentifierDeclStatement	char * field = strdup ( str1 ) ;	407:4:8952:8979	6282953	0	True				
ANR	6283220	IdentifierDecl	* field = strdup ( str1 )		6282953	0					
ANR	6283221	IdentifierDeclType	char *		6282953	0					
ANR	6283222	Identifier	field		6282953	1					
ANR	6283223	AssignmentExpression	* field = strdup ( str1 )		6282953	2		=			
ANR	6283224	Identifier	field		6282953	0					
ANR	6283225	CallExpression	strdup ( str1 )		6282953	1					
ANR	6283226	Callee	strdup		6282953	0					
ANR	6283227	Identifier	strdup		6282953	0					
ANR	6283228	ArgumentList	str1		6282953	1					
ANR	6283229	Argument	str1		6282953	0					
ANR	6283230	Identifier	str1		6282953	0					
ANR	6283231	IdentifierDeclStatement	"char * end = strchr ( field , ' ' ) ;"	408:4:9011:9042	6282953	1	True				
ANR	6283232	IdentifierDecl	"* end = strchr ( field , ' ' )"		6282953	0					
ANR	6283233	IdentifierDeclType	char *		6282953	0					
ANR	6283234	Identifier	end		6282953	1					
ANR	6283235	AssignmentExpression	"* end = strchr ( field , ' ' )"		6282953	2		=			
ANR	6283236	Identifier	end		6282953	0					
ANR	6283237	CallExpression	"strchr ( field , ' ' )"		6282953	1					
ANR	6283238	Callee	strchr		6282953	0					
ANR	6283239	Identifier	strchr		6282953	0					
ANR	6283240	ArgumentList	field		6282953	1					
ANR	6283241	Argument	field		6282953	0					
ANR	6283242	Identifier	field		6282953	0					
ANR	6283243	Argument	' '		6282953	1					
ANR	6283244	PrimaryExpression	' '		6282953	0					
ANR	6283245	IfStatement	if ( end )		6282953	2					
ANR	6283246	Condition	end	409:8:9052:9054	6282953	0	True				
ANR	6283247	Identifier	end		6282953	0					
ANR	6283248	CompoundStatement		41:13:976:976	6282953	1					
ANR	6283249	ExpressionStatement	* end = '\\0'	410:5:9064:9075	6282953	0	True				
ANR	6283250	AssignmentExpression	* end = '\\0'		6282953	0		=			
ANR	6283251	UnaryOperationExpression	* end		6282953	0					
ANR	6283252	UnaryOperator	*		6282953	0					
ANR	6283253	Identifier	end		6282953	1					
ANR	6283254	PrimaryExpression	'\\0'		6282953	1					
ANR	6283255	ElseStatement	else		6282953	0					
ANR	6283256	CompoundStatement		43:11:1007:1007	6282953	0					
ANR	6283257	ContinueStatement	continue ;	412:5:9095:9103	6282953	0	True				
ANR	6283258	Statement	r_list_foreach	414:4:9115:9128	6282953	3	True				
ANR	6283259	Statement	(	414:19:9130:9130	6282953	4	True				
ANR	6283260	Statement	list2	414:20:9131:9135	6282953	5	True				
ANR	6283261	Statement	","	414:25:9136:9136	6282953	6	True				
ANR	6283262	Statement	iter2	414:27:9138:9142	6282953	7	True				
ANR	6283263	Statement	","	414:32:9143:9143	6282953	8	True				
ANR	6283264	Statement	str2	414:34:9145:9148	6282953	9	True				
ANR	6283265	Statement	)	414:38:9149:9149	6282953	10	True				
ANR	6283266	CompoundStatement		46:40:1070:1070	6282953	11					
ANR	6283267	IfStatement	"if ( r_str_startswith ( str2 , field ) )"		6282953	0					
ANR	6283268	Condition	"r_str_startswith ( str2 , field )"	415:9:9162:9191	6282953	0	True				
ANR	6283269	CallExpression	"r_str_startswith ( str2 , field )"		6282953	0					
ANR	6283270	Callee	r_str_startswith		6282953	0					
ANR	6283271	Identifier	r_str_startswith		6282953	0					
ANR	6283272	ArgumentList	str2		6282953	1					
ANR	6283273	Argument	str2		6282953	0					
ANR	6283274	Identifier	str2		6282953	0					
ANR	6283275	Argument	field		6282953	1					
ANR	6283276	Identifier	field		6282953	0					
ANR	6283277	CompoundStatement		50:6:1198:1231	6282953	1					
ANR	6283278	IdentifierDeclStatement	char * out = r_str_new ( field ) ;	416:6:9202:9231	6282953	0	True				
ANR	6283279	IdentifierDecl	* out = r_str_new ( field )		6282953	0					
ANR	6283280	IdentifierDeclType	char *		6282953	0					
ANR	6283281	Identifier	out		6282953	1					
ANR	6283282	AssignmentExpression	* out = r_str_new ( field )		6282953	2		=			
ANR	6283283	Identifier	out		6282953	0					
ANR	6283284	CallExpression	r_str_new ( field )		6282953	1					
ANR	6283285	Callee	r_str_new		6282953	0					
ANR	6283286	Identifier	r_str_new		6282953	0					
ANR	6283287	ArgumentList	field		6282953	1					
ANR	6283288	Argument	field		6282953	0					
ANR	6283289	Identifier	field		6282953	0					
ANR	6283290	IdentifierDeclStatement	"char * first = strchr ( str1 , ' ' ) ;"	417:6:9239:9271	6282953	1	True				
ANR	6283291	IdentifierDecl	"* first = strchr ( str1 , ' ' )"		6282953	0					
ANR	6283292	IdentifierDeclType	char *		6282953	0					
ANR	6283293	Identifier	first		6282953	1					
ANR	6283294	AssignmentExpression	"* first = strchr ( str1 , ' ' )"		6282953	2		=			
ANR	6283295	Identifier	first		6282953	0					
ANR	6283296	CallExpression	"strchr ( str1 , ' ' )"		6282953	1					
ANR	6283297	Callee	strchr		6282953	0					
ANR	6283298	Identifier	strchr		6282953	0					
ANR	6283299	ArgumentList	str1		6282953	1					
ANR	6283300	Argument	str1		6282953	0					
ANR	6283301	Identifier	str1		6282953	0					
ANR	6283302	Argument	' '		6282953	1					
ANR	6283303	PrimaryExpression	' '		6282953	0					
ANR	6283304	IdentifierDeclStatement	"char * second = strchr ( str2 , ' ' ) ;"	418:6:9279:9312	6282953	2	True				
ANR	6283305	IdentifierDecl	"* second = strchr ( str2 , ' ' )"		6282953	0					
ANR	6283306	IdentifierDeclType	char *		6282953	0					
ANR	6283307	Identifier	second		6282953	1					
ANR	6283308	AssignmentExpression	"* second = strchr ( str2 , ' ' )"		6282953	2		=			
ANR	6283309	Identifier	second		6282953	0					
ANR	6283310	CallExpression	"strchr ( str2 , ' ' )"		6282953	1					
ANR	6283311	Callee	strchr		6282953	0					
ANR	6283312	Identifier	strchr		6282953	0					
ANR	6283313	ArgumentList	str2		6282953	1					
ANR	6283314	Argument	str2		6282953	0					
ANR	6283315	Identifier	str2		6282953	0					
ANR	6283316	Argument	' '		6282953	1					
ANR	6283317	PrimaryExpression	' '		6282953	0					
ANR	6283318	ExpressionStatement	"r_str_append ( out , first ? first : "" "" )"	419:6:9320:9359	6282953	3	True				
ANR	6283319	CallExpression	"r_str_append ( out , first ? first : "" "" )"		6282953	0					
ANR	6283320	Callee	r_str_append		6282953	0					
ANR	6283321	Identifier	r_str_append		6282953	0					
ANR	6283322	ArgumentList	out		6282953	1					
ANR	6283323	Argument	out		6282953	0					
ANR	6283324	Identifier	out		6282953	0					
ANR	6283325	Argument	"first ? first : "" """		6282953	1					
ANR	6283326	ConditionalExpression	"first ? first : "" """		6282953	0					
ANR	6283327	Condition	first		6282953	0					
ANR	6283328	Identifier	first		6282953	0					
ANR	6283329	Identifier	first		6282953	1					
ANR	6283330	PrimaryExpression	""" """		6282953	2					
ANR	6283331	ExpressionStatement	"r_str_append ( out , second ? second : "" "" )"	420:6:9367:9408	6282953	4	True				
ANR	6283332	CallExpression	"r_str_append ( out , second ? second : "" "" )"		6282953	0					
ANR	6283333	Callee	r_str_append		6282953	0					
ANR	6283334	Identifier	r_str_append		6282953	0					
ANR	6283335	ArgumentList	out		6282953	1					
ANR	6283336	Argument	out		6282953	0					
ANR	6283337	Identifier	out		6282953	0					
ANR	6283338	Argument	"second ? second : "" """		6282953	1					
ANR	6283339	ConditionalExpression	"second ? second : "" """		6282953	0					
ANR	6283340	Condition	second		6282953	0					
ANR	6283341	Identifier	second		6282953	0					
ANR	6283342	Identifier	second		6282953	1					
ANR	6283343	PrimaryExpression	""" """		6282953	2					
ANR	6283344	ExpressionStatement	"r_list_append ( list , out )"	421:6:9416:9441	6282953	5	True				
ANR	6283345	CallExpression	"r_list_append ( list , out )"		6282953	0					
ANR	6283346	Callee	r_list_append		6282953	0					
ANR	6283347	Identifier	r_list_append		6282953	0					
ANR	6283348	ArgumentList	list		6282953	1					
ANR	6283349	Argument	list		6282953	0					
ANR	6283350	Identifier	list		6282953	0					
ANR	6283351	Argument	out		6282953	1					
ANR	6283352	Identifier	out		6282953	0					
ANR	6283353	ExpressionStatement	"data = r_list_to_str ( list , '\\n' )"	425:3:9464:9497	6282953	12	True				
ANR	6283354	AssignmentExpression	"data = r_list_to_str ( list , '\\n' )"		6282953	0		=			
ANR	6283355	Identifier	data		6282953	0					
ANR	6283356	CallExpression	"r_list_to_str ( list , '\\n' )"		6282953	1					
ANR	6283357	Callee	r_list_to_str		6282953	0					
ANR	6283358	Identifier	r_list_to_str		6282953	0					
ANR	6283359	ArgumentList	list		6282953	1					
ANR	6283360	Argument	list		6282953	0					
ANR	6283361	Identifier	list		6282953	0					
ANR	6283362	Argument	'\\n'		6282953	1					
ANR	6283363	PrimaryExpression	'\\n'		6282953	0					
ANR	6283364	ExpressionStatement	r_list_free ( list )	426:3:9502:9520	6282953	13	True				
ANR	6283365	CallExpression	r_list_free ( list )		6282953	0					
ANR	6283366	Callee	r_list_free		6282953	0					
ANR	6283367	Identifier	r_list_free		6282953	0					
ANR	6283368	ArgumentList	list		6282953	1					
ANR	6283369	Argument	list		6282953	0					
ANR	6283370	Identifier	list		6282953	0					
ANR	6283371	ExpressionStatement	r_list_free ( list1 )	427:3:9525:9544	6282953	14	True				
ANR	6283372	CallExpression	r_list_free ( list1 )		6282953	0					
ANR	6283373	Callee	r_list_free		6282953	0					
ANR	6283374	Identifier	r_list_free		6282953	0					
ANR	6283375	ArgumentList	list1		6282953	1					
ANR	6283376	Argument	list1		6282953	0					
ANR	6283377	Identifier	list1		6282953	0					
ANR	6283378	ExpressionStatement	r_list_free ( list2 )	428:3:9549:9568	6282953	15	True				
ANR	6283379	CallExpression	r_list_free ( list2 )		6282953	0					
ANR	6283380	Callee	r_list_free		6282953	0					
ANR	6283381	Identifier	r_list_free		6282953	0					
ANR	6283382	ArgumentList	list2		6282953	1					
ANR	6283383	Argument	list2		6282953	0					
ANR	6283384	Identifier	list2		6282953	0					
ANR	6283385	ExpressionStatement	free ( filename1 )	430:2:9576:9592	6282953	9	True				
ANR	6283386	CallExpression	free ( filename1 )		6282953	0					
ANR	6283387	Callee	free		6282953	0					
ANR	6283388	Identifier	free		6282953	0					
ANR	6283389	ArgumentList	filename1		6282953	1					
ANR	6283390	Argument	filename1		6282953	0					
ANR	6283391	Identifier	filename1		6282953	0					
ANR	6283392	ExpressionStatement	free ( filename2 )	431:2:9596:9612	6282953	10	True				
ANR	6283393	CallExpression	free ( filename2 )		6282953	0					
ANR	6283394	Callee	free		6282953	0					
ANR	6283395	Identifier	free		6282953	0					
ANR	6283396	ArgumentList	filename2		6282953	1					
ANR	6283397	Argument	filename2		6282953	0					
ANR	6283398	Identifier	filename2		6282953	0					
ANR	6283399	ReturnStatement	return data ;	432:2:9616:9627	6282953	11	True				
ANR	6283400	Identifier	data		6282953	0					
ANR	6283401	ElseStatement	else		6282953	0					
ANR	6283402	CompoundStatement		65:8:1556:1556	6282953	0					
ANR	6283403	ExpressionStatement	"eprintf ( ""Usage: join file1 file2\\n"" )"	434:2:9641:9678	6282953	0	True				
ANR	6283404	CallExpression	"eprintf ( ""Usage: join file1 file2\\n"" )"		6282953	0					
ANR	6283405	Callee	eprintf		6282953	0					
ANR	6283406	Identifier	eprintf		6282953	0					
ANR	6283407	ArgumentList	"""Usage: join file1 file2\\n"""		6282953	1					
ANR	6283408	Argument	"""Usage: join file1 file2\\n"""		6282953	0					
ANR	6283409	PrimaryExpression	"""Usage: join file1 file2\\n"""		6282953	0					
ANR	6283410	ReturnStatement	return NULL ;	436:1:9684:9695	6282953	7	True				
ANR	6283411	Identifier	NULL		6282953	0					
ANR	6283412	ReturnType	R_API char *		6282953	1					
ANR	6283413	Identifier	r_syscmd_join		6282953	2					
ANR	6283414	ParameterList	"const char * file1 , const char * file2"		6282953	3					
ANR	6283415	Parameter	const char * file1	369:26:8042:8058	6282953	0	True				
ANR	6283416	ParameterType	const char *		6282953	0					
ANR	6283417	Identifier	file1		6282953	1					
ANR	6283418	Parameter	const char * file2	369:45:8061:8077	6282953	1	True				
ANR	6283419	ParameterType	const char *		6282953	0					
ANR	6283420	Identifier	file2		6282953	1					
ANR	6283421	CFGEntryNode	ENTRY		6282953		True				
ANR	6283422	CFGExitNode	EXIT		6282953		True				
ANR	6283423	CFGErrorNode	ERROR		6282953		True				
ANR	6283424	Symbol	p1		6282953						
ANR	6283425	Symbol	p2		6282953						
ANR	6283426	Symbol	data		6282953						
ANR	6283427	Symbol	r_str_split_list		6282953						
ANR	6283428	Symbol	strchr		6282953						
ANR	6283429	Symbol	out		6282953						
ANR	6283430	Symbol	second		6282953						
ANR	6283431	Symbol	& sz2		6282953						
ANR	6283432	Symbol	str1		6282953						
ANR	6283433	Symbol	& sz1		6282953						
ANR	6283434	Symbol	str2		6282953						
ANR	6283435	Symbol	end		6282953						
ANR	6283436	Symbol	filename2		6282953						
ANR	6283437	Symbol	r_str_new		6282953						
ANR	6283438	Symbol	filename1		6282953						
ANR	6283439	Symbol	r_str_startswith		6282953						
ANR	6283440	Symbol	r_file_slurp		6282953						
ANR	6283441	Symbol	NULL		6282953						
ANR	6283442	Symbol	* p1		6282953						
ANR	6283443	Symbol	iter1		6282953						
ANR	6283444	Symbol	r_list_newf		6282953						
ANR	6283445	Symbol	data2		6282953						
ANR	6283446	Symbol	iter2		6282953						
ANR	6283447	Symbol	data1		6282953						
ANR	6283448	Symbol	sz2		6282953						
ANR	6283449	Symbol	sz1		6282953						
ANR	6283450	Symbol	* p2		6282953						
ANR	6283451	Symbol	list		6282953						
ANR	6283452	Symbol	list1		6282953						
ANR	6283453	Symbol	r_list_to_str		6282953						
ANR	6283454	Symbol	field		6282953						
ANR	6283455	Symbol	list2		6282953						
ANR	6283456	Symbol	file2		6282953						
ANR	6283457	Symbol	* end		6282953						
ANR	6283458	Symbol	file1		6282953						
ANR	6283459	Symbol	strdup		6282953						
ANR	6283460	Symbol	first		6282953						
ANR	6283461	Function	r_syscmd_cat	439:0:9700:10145							
ANR	6283462	FunctionDef	r_syscmd_cat (const char * file)		6283461	0					
ANR	6283463	CompoundStatement		439:43:9743:10145	6283461	0					
ANR	6283464	IdentifierDeclStatement	int sz ;	440:1:9746:9752	6283461	0	True				
ANR	6283465	IdentifierDecl	sz		6283461	0					
ANR	6283466	IdentifierDeclType	int		6283461	0					
ANR	6283467	Identifier	sz		6283461	1					
ANR	6283468	IdentifierDeclStatement	const char * p = NULL ;	441:1:9755:9775	6283461	1	True				
ANR	6283469	IdentifierDecl	* p = NULL		6283461	0					
ANR	6283470	IdentifierDeclType	const char *		6283461	0					
ANR	6283471	Identifier	p		6283461	1					
ANR	6283472	AssignmentExpression	* p = NULL		6283461	2		=			
ANR	6283473	Identifier	NULL		6283461	0					
ANR	6283474	Identifier	NULL		6283461	1					
ANR	6283475	IfStatement	if ( file )		6283461	2					
ANR	6283476	Condition	file	442:5:9782:9785	6283461	0	True				
ANR	6283477	Identifier	file		6283461	0					
ANR	6283478	CompoundStatement		4:11:44:44	6283461	1					
ANR	6283479	IfStatement	"if ( ( p = strchr ( file , ' ' ) ) )"		6283461	0					
ANR	6283480	Condition	"p = strchr ( file , ' ' )"	443:6:9796:9819	6283461	0	True				
ANR	6283481	AssignmentExpression	"p = strchr ( file , ' ' )"		6283461	0		=			
ANR	6283482	Identifier	p		6283461	0					
ANR	6283483	CallExpression	"strchr ( file , ' ' )"		6283461	1					
ANR	6283484	Callee	strchr		6283461	0					
ANR	6283485	Identifier	strchr		6283461	0					
ANR	6283486	ArgumentList	file		6283461	1					
ANR	6283487	Argument	file		6283461	0					
ANR	6283488	Identifier	file		6283461	0					
ANR	6283489	Argument	' '		6283461	1					
ANR	6283490	PrimaryExpression	' '		6283461	0					
ANR	6283491	CompoundStatement		5:32:78:78	6283461	1					
ANR	6283492	ExpressionStatement	p = p + 1	444:3:9827:9836	6283461	0	True				
ANR	6283493	AssignmentExpression	p = p + 1		6283461	0		=			
ANR	6283494	Identifier	p		6283461	0					
ANR	6283495	AdditiveExpression	p + 1		6283461	1		+			
ANR	6283496	Identifier	p		6283461	0					
ANR	6283497	PrimaryExpression	1		6283461	1					
ANR	6283498	ElseStatement	else		6283461	0					
ANR	6283499	CompoundStatement		7:9:103:103	6283461	0					
ANR	6283500	ExpressionStatement	p = file	446:3:9852:9860	6283461	0	True				
ANR	6283501	AssignmentExpression	p = file		6283461	0		=			
ANR	6283502	Identifier	p		6283461	0					
ANR	6283503	Identifier	file		6283461	1					
ANR	6283504	IfStatement	if ( p && * p )		6283461	3					
ANR	6283505	Condition	p && * p	449:5:9874:9880	6283461	0	True				
ANR	6283506	AndExpression	p && * p		6283461	0		&&			
ANR	6283507	Identifier	p		6283461	0					
ANR	6283508	UnaryOperationExpression	* p		6283461	1					
ANR	6283509	UnaryOperator	*		6283461	0					
ANR	6283510	Identifier	p		6283461	1					
ANR	6283511	CompoundStatement		14:2:199:240	6283461	1					
ANR	6283512	IdentifierDeclStatement	char * filename = strdup ( p ) ;	450:2:9887:9914	6283461	0	True				
ANR	6283513	IdentifierDecl	* filename = strdup ( p )		6283461	0					
ANR	6283514	IdentifierDeclType	char *		6283461	0					
ANR	6283515	Identifier	filename		6283461	1					
ANR	6283516	AssignmentExpression	* filename = strdup ( p )		6283461	2		=			
ANR	6283517	Identifier	filename		6283461	0					
ANR	6283518	CallExpression	strdup ( p )		6283461	1					
ANR	6283519	Callee	strdup		6283461	0					
ANR	6283520	Identifier	strdup		6283461	0					
ANR	6283521	ArgumentList	p		6283461	1					
ANR	6283522	Argument	p		6283461	0					
ANR	6283523	Identifier	p		6283461	0					
ANR	6283524	ExpressionStatement	r_str_trim ( filename )	451:2:9918:9939	6283461	1	True				
ANR	6283525	CallExpression	r_str_trim ( filename )		6283461	0					
ANR	6283526	Callee	r_str_trim		6283461	0					
ANR	6283527	Identifier	r_str_trim		6283461	0					
ANR	6283528	ArgumentList	filename		6283461	1					
ANR	6283529	Argument	filename		6283461	0					
ANR	6283530	Identifier	filename		6283461	0					
ANR	6283531	IdentifierDeclStatement	"char * data = r_file_slurp ( filename , & sz ) ;"	452:2:9943:9984	6283461	2	True				
ANR	6283532	IdentifierDecl	"* data = r_file_slurp ( filename , & sz )"		6283461	0					
ANR	6283533	IdentifierDeclType	char *		6283461	0					
ANR	6283534	Identifier	data		6283461	1					
ANR	6283535	AssignmentExpression	"* data = r_file_slurp ( filename , & sz )"		6283461	2		=			
ANR	6283536	Identifier	data		6283461	0					
ANR	6283537	CallExpression	"r_file_slurp ( filename , & sz )"		6283461	1					
ANR	6283538	Callee	r_file_slurp		6283461	0					
ANR	6283539	Identifier	r_file_slurp		6283461	0					
ANR	6283540	ArgumentList	filename		6283461	1					
ANR	6283541	Argument	filename		6283461	0					
ANR	6283542	Identifier	filename		6283461	0					
ANR	6283543	Argument	& sz		6283461	1					
ANR	6283544	UnaryOperationExpression	& sz		6283461	0					
ANR	6283545	UnaryOperator	&		6283461	0					
ANR	6283546	Identifier	sz		6283461	1					
ANR	6283547	IfStatement	if ( ! data )		6283461	3					
ANR	6283548	Condition	! data	453:6:9992:9996	6283461	0	True				
ANR	6283549	UnaryOperationExpression	! data		6283461	0					
ANR	6283550	UnaryOperator	!		6283461	0					
ANR	6283551	Identifier	data		6283461	1					
ANR	6283552	CompoundStatement		15:13:255:255	6283461	1					
ANR	6283553	ExpressionStatement	"eprintf ( ""No such file or directory\\n"" )"	454:3:10004:10043	6283461	0	True				
ANR	6283554	CallExpression	"eprintf ( ""No such file or directory\\n"" )"		6283461	0					
ANR	6283555	Callee	eprintf		6283461	0					
ANR	6283556	Identifier	eprintf		6283461	0					
ANR	6283557	ArgumentList	"""No such file or directory\\n"""		6283461	1					
ANR	6283558	Argument	"""No such file or directory\\n"""		6283461	0					
ANR	6283559	PrimaryExpression	"""No such file or directory\\n"""		6283461	0					
ANR	6283560	ExpressionStatement	free ( filename )	456:2:10051:10066	6283461	4	True				
ANR	6283561	CallExpression	free ( filename )		6283461	0					
ANR	6283562	Callee	free		6283461	0					
ANR	6283563	Identifier	free		6283461	0					
ANR	6283564	ArgumentList	filename		6283461	1					
ANR	6283565	Argument	filename		6283461	0					
ANR	6283566	Identifier	filename		6283461	0					
ANR	6283567	ReturnStatement	return data ;	457:2:10070:10081	6283461	5	True				
ANR	6283568	Identifier	data		6283461	0					
ANR	6283569	ElseStatement	else		6283461	0					
ANR	6283570	CompoundStatement		20:8:347:347	6283461	0					
ANR	6283571	ExpressionStatement	"eprintf ( ""Usage: cat [file]\\n"" )"	459:2:10095:10126	6283461	0	True				
ANR	6283572	CallExpression	"eprintf ( ""Usage: cat [file]\\n"" )"		6283461	0					
ANR	6283573	Callee	eprintf		6283461	0					
ANR	6283574	Identifier	eprintf		6283461	0					
ANR	6283575	ArgumentList	"""Usage: cat [file]\\n"""		6283461	1					
ANR	6283576	Argument	"""Usage: cat [file]\\n"""		6283461	0					
ANR	6283577	PrimaryExpression	"""Usage: cat [file]\\n"""		6283461	0					
ANR	6283578	ReturnStatement	return NULL ;	461:1:10132:10143	6283461	4	True				
ANR	6283579	Identifier	NULL		6283461	0					
ANR	6283580	ReturnType	R_API char *		6283461	1					
ANR	6283581	Identifier	r_syscmd_cat		6283461	2					
ANR	6283582	ParameterList	const char * file		6283461	3					
ANR	6283583	Parameter	const char * file	439:25:9725:9740	6283461	0	True				
ANR	6283584	ParameterType	const char *		6283461	0					
ANR	6283585	Identifier	file		6283461	1					
ANR	6283586	CFGEntryNode	ENTRY		6283461		True				
ANR	6283587	CFGExitNode	EXIT		6283461		True				
ANR	6283588	Symbol	p		6283461						
ANR	6283589	Symbol	& sz		6283461						
ANR	6283590	Symbol	r_file_slurp		6283461						
ANR	6283591	Symbol	file		6283461						
ANR	6283592	Symbol	NULL		6283461						
ANR	6283593	Symbol	filename		6283461						
ANR	6283594	Symbol	data		6283461						
ANR	6283595	Symbol	sz		6283461						
ANR	6283596	Symbol	strchr		6283461						
ANR	6283597	Symbol	* p		6283461						
ANR	6283598	Symbol	strdup		6283461						
ANR	6283599	Function	r_syscmd_mkdir	464:0:10148:10694							
ANR	6283600	FunctionDef	r_syscmd_mkdir (const char * dir)		6283599	0					
ANR	6283601	CompoundStatement		464:44:10192:10694	6283599	0					
ANR	6283602	IdentifierDeclStatement	"const char * suffix = r_str_trim_ro ( strchr ( dir , ' ' ) ) ;"	465:1:10195:10249	6283599	0	True				
ANR	6283603	IdentifierDecl	"* suffix = r_str_trim_ro ( strchr ( dir , ' ' ) )"		6283599	0					
ANR	6283604	IdentifierDeclType	const char *		6283599	0					
ANR	6283605	Identifier	suffix		6283599	1					
ANR	6283606	AssignmentExpression	"* suffix = r_str_trim_ro ( strchr ( dir , ' ' ) )"		6283599	2		=			
ANR	6283607	Identifier	suffix		6283599	0					
ANR	6283608	CallExpression	"r_str_trim_ro ( strchr ( dir , ' ' ) )"		6283599	1					
ANR	6283609	Callee	r_str_trim_ro		6283599	0					
ANR	6283610	Identifier	r_str_trim_ro		6283599	0					
ANR	6283611	ArgumentList	"strchr ( dir , ' ' )"		6283599	1					
ANR	6283612	Argument	"strchr ( dir , ' ' )"		6283599	0					
ANR	6283613	CallExpression	"strchr ( dir , ' ' )"		6283599	0					
ANR	6283614	Callee	strchr		6283599	0					
ANR	6283615	Identifier	strchr		6283599	0					
ANR	6283616	ArgumentList	dir		6283599	1					
ANR	6283617	Argument	dir		6283599	0					
ANR	6283618	Identifier	dir		6283599	0					
ANR	6283619	Argument	' '		6283599	1					
ANR	6283620	PrimaryExpression	' '		6283599	0					
ANR	6283621	IfStatement	"if ( ! suffix || ! strncmp ( suffix , ""-p"" , 3 ) )"		6283599	1					
ANR	6283622	Condition	"! suffix || ! strncmp ( suffix , ""-p"" , 3 )"	466:5:10256:10292	6283599	0	True				
ANR	6283623	OrExpression	"! suffix || ! strncmp ( suffix , ""-p"" , 3 )"		6283599	0		||			
ANR	6283624	UnaryOperationExpression	! suffix		6283599	0					
ANR	6283625	UnaryOperator	!		6283599	0					
ANR	6283626	Identifier	suffix		6283599	1					
ANR	6283627	UnaryOperationExpression	"! strncmp ( suffix , ""-p"" , 3 )"		6283599	1					
ANR	6283628	UnaryOperator	!		6283599	0					
ANR	6283629	CallExpression	"strncmp ( suffix , ""-p"" , 3 )"		6283599	1					
ANR	6283630	Callee	strncmp		6283599	0					
ANR	6283631	Identifier	strncmp		6283599	0					
ANR	6283632	ArgumentList	suffix		6283599	1					
ANR	6283633	Argument	suffix		6283599	0					
ANR	6283634	Identifier	suffix		6283599	0					
ANR	6283635	Argument	"""-p"""		6283599	1					
ANR	6283636	PrimaryExpression	"""-p"""		6283599	0					
ANR	6283637	Argument	3		6283599	2					
ANR	6283638	PrimaryExpression	3		6283599	0					
ANR	6283639	CompoundStatement		3:44:102:102	6283599	1					
ANR	6283640	ReturnStatement	"return r_str_dup ( NULL , ""Usage: mkdir [-p] [directory]\\n"" ) ;"	467:2:10299:10357	6283599	0	True				
ANR	6283641	CallExpression	"r_str_dup ( NULL , ""Usage: mkdir [-p] [directory]\\n"" )"		6283599	0					
ANR	6283642	Callee	r_str_dup		6283599	0					
ANR	6283643	Identifier	r_str_dup		6283599	0					
ANR	6283644	ArgumentList	NULL		6283599	1					
ANR	6283645	Argument	NULL		6283599	0					
ANR	6283646	Identifier	NULL		6283599	0					
ANR	6283647	Argument	"""Usage: mkdir [-p] [directory]\\n"""		6283599	1					
ANR	6283648	PrimaryExpression	"""Usage: mkdir [-p] [directory]\\n"""		6283599	0					
ANR	6283649	IdentifierDeclStatement	int ret ;	469:1:10363:10370	6283599	2	True				
ANR	6283650	IdentifierDecl	ret		6283599	0					
ANR	6283651	IdentifierDeclType	int		6283599	0					
ANR	6283652	Identifier	ret		6283599	1					
ANR	6283653	IdentifierDeclStatement	"char * dirname = ( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix ) ;"	470:1:10373:10459	6283599	3	True				
ANR	6283654	IdentifierDecl	"* dirname = ( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix )"		6283599	0					
ANR	6283655	IdentifierDeclType	char *		6283599	0					
ANR	6283656	Identifier	dirname		6283599	1					
ANR	6283657	AssignmentExpression	"* dirname = ( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix )"		6283599	2		=			
ANR	6283658	Identifier	dirname		6283599	0					
ANR	6283659	ConditionalExpression	"( ! strncmp ( suffix , ""-p "" , 3 ) ) ? strdup ( suffix + 3 ) : strdup ( suffix )"		6283599	1					
ANR	6283660	Condition	"! strncmp ( suffix , ""-p "" , 3 )"		6283599	0					
ANR	6283661	UnaryOperationExpression	"! strncmp ( suffix , ""-p "" , 3 )"		6283599	0					
ANR	6283662	UnaryOperator	!		6283599	0					
ANR	6283663	CallExpression	"strncmp ( suffix , ""-p "" , 3 )"		6283599	1					
ANR	6283664	Callee	strncmp		6283599	0					
ANR	6283665	Identifier	strncmp		6283599	0					
ANR	6283666	ArgumentList	suffix		6283599	1					
ANR	6283667	Argument	suffix		6283599	0					
ANR	6283668	Identifier	suffix		6283599	0					
ANR	6283669	Argument	"""-p """		6283599	1					
ANR	6283670	PrimaryExpression	"""-p """		6283599	0					
ANR	6283671	Argument	3		6283599	2					
ANR	6283672	PrimaryExpression	3		6283599	0					
ANR	6283673	CallExpression	strdup ( suffix + 3 )		6283599	1					
ANR	6283674	Callee	strdup		6283599	0					
ANR	6283675	Identifier	strdup		6283599	0					
ANR	6283676	ArgumentList	suffix + 3		6283599	1					
ANR	6283677	Argument	suffix + 3		6283599	0					
ANR	6283678	AdditiveExpression	suffix + 3		6283599	0		+			
ANR	6283679	Identifier	suffix		6283599	0					
ANR	6283680	PrimaryExpression	3		6283599	1					
ANR	6283681	CallExpression	strdup ( suffix )		6283599	2					
ANR	6283682	Callee	strdup		6283599	0					
ANR	6283683	Identifier	strdup		6283599	0					
ANR	6283684	ArgumentList	suffix		6283599	1					
ANR	6283685	Argument	suffix		6283599	0					
ANR	6283686	Identifier	suffix		6283599	0					
ANR	6283687	ExpressionStatement	r_str_trim ( dirname )	472:1:10462:10482	6283599	4	True				
ANR	6283688	CallExpression	r_str_trim ( dirname )		6283599	0					
ANR	6283689	Callee	r_str_trim		6283599	0					
ANR	6283690	Identifier	r_str_trim		6283599	0					
ANR	6283691	ArgumentList	dirname		6283599	1					
ANR	6283692	Argument	dirname		6283599	0					
ANR	6283693	Identifier	dirname		6283599	0					
ANR	6283694	ExpressionStatement	ret = r_sys_mkdirp ( dirname )	473:1:10485:10513	6283599	5	True				
ANR	6283695	AssignmentExpression	ret = r_sys_mkdirp ( dirname )		6283599	0		=			
ANR	6283696	Identifier	ret		6283599	0					
ANR	6283697	CallExpression	r_sys_mkdirp ( dirname )		6283599	1					
ANR	6283698	Callee	r_sys_mkdirp		6283599	0					
ANR	6283699	Identifier	r_sys_mkdirp		6283599	0					
ANR	6283700	ArgumentList	dirname		6283599	1					
ANR	6283701	Argument	dirname		6283599	0					
ANR	6283702	Identifier	dirname		6283599	0					
ANR	6283703	IfStatement	if ( ! ret )		6283599	6					
ANR	6283704	Condition	! ret	474:5:10520:10523	6283599	0	True				
ANR	6283705	UnaryOperationExpression	! ret		6283599	0					
ANR	6283706	UnaryOperator	!		6283599	0					
ANR	6283707	Identifier	ret		6283599	1					
ANR	6283708	CompoundStatement		11:11:333:333	6283599	1					
ANR	6283709	IfStatement	if ( r_sys_mkdir_failed ( ) )		6283599	0					
ANR	6283710	Condition	r_sys_mkdir_failed ( )	475:6:10534:10554	6283599	0	True				
ANR	6283711	CallExpression	r_sys_mkdir_failed ( )		6283599	0					
ANR	6283712	Callee	r_sys_mkdir_failed		6283599	0					
ANR	6283713	Identifier	r_sys_mkdir_failed		6283599	0					
ANR	6283714	ArgumentList			6283599	1					
ANR	6283715	CompoundStatement		13:3:369:427	6283599	1					
ANR	6283716	IdentifierDeclStatement	"char * res = r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname ) ;"	476:3:10562:10620	6283599	0	True				
ANR	6283717	IdentifierDecl	"* res = r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname )"		6283599	0					
ANR	6283718	IdentifierDeclType	char *		6283599	0					
ANR	6283719	Identifier	res		6283599	1					
ANR	6283720	AssignmentExpression	"* res = r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname )"		6283599	2		=			
ANR	6283721	Identifier	res		6283599	0					
ANR	6283722	CallExpression	"r_str_newf ( ""Cannot create \\""%s\\""\\n"" , dirname )"		6283599	1					
ANR	6283723	Callee	r_str_newf		6283599	0					
ANR	6283724	Identifier	r_str_newf		6283599	0					
ANR	6283725	ArgumentList	"""Cannot create \\""%s\\""\\n"""		6283599	1					
ANR	6283726	Argument	"""Cannot create \\""%s\\""\\n"""		6283599	0					
ANR	6283727	PrimaryExpression	"""Cannot create \\""%s\\""\\n"""		6283599	0					
ANR	6283728	Argument	dirname		6283599	1					
ANR	6283729	Identifier	dirname		6283599	0					
ANR	6283730	ExpressionStatement	free ( dirname )	477:3:10625:10639	6283599	1	True				
ANR	6283731	CallExpression	free ( dirname )		6283599	0					
ANR	6283732	Callee	free		6283599	0					
ANR	6283733	Identifier	free		6283599	0					
ANR	6283734	ArgumentList	dirname		6283599	1					
ANR	6283735	Argument	dirname		6283599	0					
ANR	6283736	Identifier	dirname		6283599	0					
ANR	6283737	ReturnStatement	return res ;	478:3:10644:10654	6283599	2	True				
ANR	6283738	Identifier	res		6283599	0					
ANR	6283739	ExpressionStatement	free ( dirname )	481:1:10664:10678	6283599	7	True				
ANR	6283740	CallExpression	free ( dirname )		6283599	0					
ANR	6283741	Callee	free		6283599	0					
ANR	6283742	Identifier	free		6283599	0					
ANR	6283743	ArgumentList	dirname		6283599	1					
ANR	6283744	Argument	dirname		6283599	0					
ANR	6283745	Identifier	dirname		6283599	0					
ANR	6283746	ReturnStatement	return NULL ;	482:1:10681:10692	6283599	8	True				
ANR	6283747	Identifier	NULL		6283599	0					
ANR	6283748	ReturnType	R_API char *		6283599	1					
ANR	6283749	Identifier	r_syscmd_mkdir		6283599	2					
ANR	6283750	ParameterList	const char * dir		6283599	3					
ANR	6283751	Parameter	const char * dir	464:27:10175:10189	6283599	0	True				
ANR	6283752	ParameterType	const char *		6283599	0					
ANR	6283753	Identifier	dir		6283599	1					
ANR	6283754	CFGEntryNode	ENTRY		6283599		True				
ANR	6283755	CFGExitNode	EXIT		6283599		True				
ANR	6283756	Symbol	ret		6283599						
ANR	6283757	Symbol	res		6283599						
ANR	6283758	Symbol	NULL		6283599						
ANR	6283759	Symbol	strchr		6283599						
ANR	6283760	Symbol	r_sys_mkdir_failed		6283599						
ANR	6283761	Symbol	r_str_newf		6283599						
ANR	6283762	Symbol	dir		6283599						
ANR	6283763	Symbol	suffix		6283599						
ANR	6283764	Symbol	dirname		6283599						
ANR	6283765	Symbol	strncmp		6283599						
ANR	6283766	Symbol	r_str_trim_ro		6283599						
ANR	6283767	Symbol	r_sys_mkdirp		6283599						
ANR	6283768	Symbol	strdup		6283599						
ANR	6283769	Symbol	r_str_dup		6283599						
ANR	6283770	Function	r_syscmd_mv	485:0:10697:10983							
ANR	6283771	FunctionDef	r_syscmd_mv (const char * input)		6283770	0					
ANR	6283772	CompoundStatement		485:42:10739:10983	6283770	0					
ANR	6283773	IfStatement	if ( strlen ( input ) < 3 )		6283770	0					
ANR	6283774	Condition	strlen ( input ) < 3	486:5:10746:10763	6283770	0	True				
ANR	6283775	RelationalExpression	strlen ( input ) < 3		6283770	0		<			
ANR	6283776	CallExpression	strlen ( input )		6283770	0					
ANR	6283777	Callee	strlen		6283770	0					
ANR	6283778	Identifier	strlen		6283770	0					
ANR	6283779	ArgumentList	input		6283770	1					
ANR	6283780	Argument	input		6283770	0					
ANR	6283781	Identifier	input		6283770	0					
ANR	6283782	PrimaryExpression	3		6283770	1					
ANR	6283783	CompoundStatement		2:25:26:26	6283770	1					
ANR	6283784	ExpressionStatement	"eprintf ( ""Usage: mv src dst\\n"" )"	487:2:10770:10801	6283770	0	True				
ANR	6283785	CallExpression	"eprintf ( ""Usage: mv src dst\\n"" )"		6283770	0					
ANR	6283786	Callee	eprintf		6283770	0					
ANR	6283787	Identifier	eprintf		6283770	0					
ANR	6283788	ArgumentList	"""Usage: mv src dst\\n"""		6283770	1					
ANR	6283789	Argument	"""Usage: mv src dst\\n"""		6283770	0					
ANR	6283790	PrimaryExpression	"""Usage: mv src dst\\n"""		6283770	0					
ANR	6283791	ReturnStatement	return false ;	488:2:10805:10817	6283770	1	True				
ANR	6283792	Identifier	false		6283770	0					
ANR	6283793	ExpressionStatement	input = input + 2	490:1:10823:10840	6283770	1	True				
ANR	6283794	AssignmentExpression	input = input + 2		6283770	0		=			
ANR	6283795	Identifier	input		6283770	0					
ANR	6283796	AdditiveExpression	input + 2		6283770	1		+			
ANR	6283797	Identifier	input		6283770	0					
ANR	6283798	PrimaryExpression	2		6283770	1					
ANR	6283799	IfStatement	if ( ! r_sandbox_enable ( 0 ) )		6283770	2					
ANR	6283800	Condition	! r_sandbox_enable ( 0 )	491:5:10847:10867	6283770	0	True				
ANR	6283801	UnaryOperationExpression	! r_sandbox_enable ( 0 )		6283770	0					
ANR	6283802	UnaryOperator	!		6283770	0					
ANR	6283803	CallExpression	r_sandbox_enable ( 0 )		6283770	1					
ANR	6283804	Callee	r_sandbox_enable		6283770	0					
ANR	6283805	Identifier	r_sandbox_enable		6283770	0					
ANR	6283806	ArgumentList	0		6283770	1					
ANR	6283807	Argument	0		6283770	0					
ANR	6283808	PrimaryExpression	0		6283770	0					
ANR	6283809	CompoundStatement		7:28:130:130	6283770	1					
ANR	6283810	ExpressionStatement	"r_sys_cmdf ( ""move %s"" , input )"	493:2:10890:10919	6283770	0	True				
ANR	6283811	CallExpression	"r_sys_cmdf ( ""move %s"" , input )"		6283770	0					
ANR	6283812	Callee	r_sys_cmdf		6283770	0					
ANR	6283813	Identifier	r_sys_cmdf		6283770	0					
ANR	6283814	ArgumentList	"""move %s"""		6283770	1					
ANR	6283815	Argument	"""move %s"""		6283770	0					
ANR	6283816	PrimaryExpression	"""move %s"""		6283770	0					
ANR	6283817	Argument	input		6283770	1					
ANR	6283818	Identifier	input		6283770	0					
ANR	6283819	ReturnStatement	return false ;	498:1:10969:10981	6283770	3	True				
ANR	6283820	Identifier	false		6283770	0					
ANR	6283821	ReturnType	R_API bool		6283770	1					
ANR	6283822	Identifier	r_syscmd_mv		6283770	2					
ANR	6283823	ParameterList	const char * input		6283770	3					
ANR	6283824	Parameter	const char * input	485:23:10720:10736	6283770	0	True				
ANR	6283825	ParameterType	const char *		6283770	0					
ANR	6283826	Identifier	input		6283770	1					
ANR	6283827	CFGEntryNode	ENTRY		6283770		True				
ANR	6283828	CFGExitNode	EXIT		6283770		True				
ANR	6283829	Symbol	input		6283770						
ANR	6283830	Symbol	strlen		6283770						
ANR	6283831	Symbol	r_sandbox_enable		6283770						
ANR	6283832	Symbol	false		6283770						
