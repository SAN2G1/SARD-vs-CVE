command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	635473	File	data/converged/CVE-2019-16718~_radare2/c55plus_decode.c								
ANR	635474	DeclStmt									
ANR	635475	Decl							extern char	extern char * [ ]	ins_str
ANR	635476	DeclStmt									
ANR	635477	Decl							extern ut32	extern ut32	ins_buff_len
ANR	635478	Function	get_q_bits	19:0:326:1339							
ANR	635479	FunctionDef	"get_q_bits (ut32 val , char * ins , ut32 ins_len , int * err_code)"		635478	0					
ANR	635480	CompoundStatement		19:73:399:1339	635478	0					
ANR	635481	IdentifierDeclStatement	ut32 res = 0 ;	20:1:402:414	635478	0	True				
ANR	635482	IdentifierDecl	res = 0		635478	0					
ANR	635483	IdentifierDeclType	ut32		635478	0					
ANR	635484	Identifier	res		635478	1					
ANR	635485	AssignmentExpression	res = 0		635478	2		=			
ANR	635486	Identifier	res		635478	0					
ANR	635487	PrimaryExpression	0		635478	1					
ANR	635488	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_MMAP"" , 6 ) )"		635478	1					
ANR	635489	Condition	"! r_str_ncasecmp ( ins , ""q_MMAP"" , 6 )"	22:5:422:454	635478	0	True				
ANR	635490	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_MMAP"" , 6 )"		635478	0					
ANR	635491	UnaryOperator	!		635478	0					
ANR	635492	CallExpression	"r_str_ncasecmp ( ins , ""q_MMAP"" , 6 )"		635478	1					
ANR	635493	Callee	r_str_ncasecmp		635478	0					
ANR	635494	Identifier	r_str_ncasecmp		635478	0					
ANR	635495	ArgumentList	ins		635478	1					
ANR	635496	Argument	ins		635478	0					
ANR	635497	Identifier	ins		635478	0					
ANR	635498	Argument	"""q_MMAP"""		635478	1					
ANR	635499	PrimaryExpression	"""q_MMAP"""		635478	0					
ANR	635500	Argument	6		635478	2					
ANR	635501	PrimaryExpression	6		635478	0					
ANR	635502	CompoundStatement		4:40:57:57	635478	1					
ANR	635503	ExpressionStatement	res = val & 1	23:2:461:474	635478	0	True				
ANR	635504	AssignmentExpression	res = val & 1		635478	0		=			
ANR	635505	Identifier	res		635478	0					
ANR	635506	BitAndExpression	val & 1		635478	1		&			
ANR	635507	Identifier	val		635478	0					
ANR	635508	PrimaryExpression	1		635478	1					
ANR	635509	ElseStatement	else		635478	0					
ANR	635510	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_LOCK"" , 6 ) )"		635478	0					
ANR	635511	Condition	"! r_str_ncasecmp ( ins , ""q_LOCK"" , 6 )"	24:12:488:520	635478	0	True				
ANR	635512	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_LOCK"" , 6 )"		635478	0					
ANR	635513	UnaryOperator	!		635478	0					
ANR	635514	CallExpression	"r_str_ncasecmp ( ins , ""q_LOCK"" , 6 )"		635478	1					
ANR	635515	Callee	r_str_ncasecmp		635478	0					
ANR	635516	Identifier	r_str_ncasecmp		635478	0					
ANR	635517	ArgumentList	ins		635478	1					
ANR	635518	Argument	ins		635478	0					
ANR	635519	Identifier	ins		635478	0					
ANR	635520	Argument	"""q_LOCK"""		635478	1					
ANR	635521	PrimaryExpression	"""q_LOCK"""		635478	0					
ANR	635522	Argument	6		635478	2					
ANR	635523	PrimaryExpression	6		635478	0					
ANR	635524	CompoundStatement		6:47:123:123	635478	1					
ANR	635525	ExpressionStatement	res = val & 1	25:2:527:540	635478	0	True				
ANR	635526	AssignmentExpression	res = val & 1		635478	0		=			
ANR	635527	Identifier	res		635478	0					
ANR	635528	BitAndExpression	val & 1		635478	1		&			
ANR	635529	Identifier	val		635478	0					
ANR	635530	PrimaryExpression	1		635478	1					
ANR	635531	ElseStatement	else		635478	0					
ANR	635532	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_LINR"" , 6 ) )"		635478	0					
ANR	635533	Condition	"! r_str_ncasecmp ( ins , ""q_LINR"" , 6 )"	26:12:554:586	635478	0	True				
ANR	635534	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_LINR"" , 6 )"		635478	0					
ANR	635535	UnaryOperator	!		635478	0					
ANR	635536	CallExpression	"r_str_ncasecmp ( ins , ""q_LINR"" , 6 )"		635478	1					
ANR	635537	Callee	r_str_ncasecmp		635478	0					
ANR	635538	Identifier	r_str_ncasecmp		635478	0					
ANR	635539	ArgumentList	ins		635478	1					
ANR	635540	Argument	ins		635478	0					
ANR	635541	Identifier	ins		635478	0					
ANR	635542	Argument	"""q_LINR"""		635478	1					
ANR	635543	PrimaryExpression	"""q_LINR"""		635478	0					
ANR	635544	Argument	6		635478	2					
ANR	635545	PrimaryExpression	6		635478	0					
ANR	635546	CompoundStatement		8:47:189:189	635478	1					
ANR	635547	ExpressionStatement	res = ( val >> 2 ) & 1	27:2:593:613	635478	0	True				
ANR	635548	AssignmentExpression	res = ( val >> 2 ) & 1		635478	0		=			
ANR	635549	Identifier	res		635478	0					
ANR	635550	BitAndExpression	( val >> 2 ) & 1		635478	1		&			
ANR	635551	ShiftExpression	val >> 2		635478	0		>>			
ANR	635552	Identifier	val		635478	0					
ANR	635553	PrimaryExpression	2		635478	1					
ANR	635554	PrimaryExpression	1		635478	1					
ANR	635555	ElseStatement	else		635478	0					
ANR	635556	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_CIRC"" , 6 ) )"		635478	0					
ANR	635557	Condition	"! r_str_ncasecmp ( ins , ""q_CIRC"" , 6 )"	28:12:627:659	635478	0	True				
ANR	635558	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_CIRC"" , 6 )"		635478	0					
ANR	635559	UnaryOperator	!		635478	0					
ANR	635560	CallExpression	"r_str_ncasecmp ( ins , ""q_CIRC"" , 6 )"		635478	1					
ANR	635561	Callee	r_str_ncasecmp		635478	0					
ANR	635562	Identifier	r_str_ncasecmp		635478	0					
ANR	635563	ArgumentList	ins		635478	1					
ANR	635564	Argument	ins		635478	0					
ANR	635565	Identifier	ins		635478	0					
ANR	635566	Argument	"""q_CIRC"""		635478	1					
ANR	635567	PrimaryExpression	"""q_CIRC"""		635478	0					
ANR	635568	Argument	6		635478	2					
ANR	635569	PrimaryExpression	6		635478	0					
ANR	635570	CompoundStatement		10:47:262:262	635478	1					
ANR	635571	ExpressionStatement	res = ( val >> 3 ) & 1	29:2:666:686	635478	0	True				
ANR	635572	AssignmentExpression	res = ( val >> 3 ) & 1		635478	0		=			
ANR	635573	Identifier	res		635478	0					
ANR	635574	BitAndExpression	( val >> 3 ) & 1		635478	1		&			
ANR	635575	ShiftExpression	val >> 3		635478	0		>>			
ANR	635576	Identifier	val		635478	0					
ANR	635577	PrimaryExpression	3		635478	1					
ANR	635578	PrimaryExpression	1		635478	1					
ANR	635579	ElseStatement	else		635478	0					
ANR	635580	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_PORT_READ"" , 11 ) )"		635478	0					
ANR	635581	Condition	"! r_str_ncasecmp ( ins , ""q_PORT_READ"" , 11 )"	30:12:700:738	635478	0	True				
ANR	635582	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_PORT_READ"" , 11 )"		635478	0					
ANR	635583	UnaryOperator	!		635478	0					
ANR	635584	CallExpression	"r_str_ncasecmp ( ins , ""q_PORT_READ"" , 11 )"		635478	1					
ANR	635585	Callee	r_str_ncasecmp		635478	0					
ANR	635586	Identifier	r_str_ncasecmp		635478	0					
ANR	635587	ArgumentList	ins		635478	1					
ANR	635588	Argument	ins		635478	0					
ANR	635589	Identifier	ins		635478	0					
ANR	635590	Argument	"""q_PORT_READ"""		635478	1					
ANR	635591	PrimaryExpression	"""q_PORT_READ"""		635478	0					
ANR	635592	Argument	11		635478	2					
ANR	635593	PrimaryExpression	11		635478	0					
ANR	635594	CompoundStatement		12:53:341:341	635478	1					
ANR	635595	ExpressionStatement	res = ( val >> 4 ) & 1	31:2:745:765	635478	0	True				
ANR	635596	AssignmentExpression	res = ( val >> 4 ) & 1		635478	0		=			
ANR	635597	Identifier	res		635478	0					
ANR	635598	BitAndExpression	( val >> 4 ) & 1		635478	1		&			
ANR	635599	ShiftExpression	val >> 4		635478	0		>>			
ANR	635600	Identifier	val		635478	0					
ANR	635601	PrimaryExpression	4		635478	1					
ANR	635602	PrimaryExpression	1		635478	1					
ANR	635603	ElseStatement	else		635478	0					
ANR	635604	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_PORT_WRITE"" , 12 ) )"		635478	0					
ANR	635605	Condition	"! r_str_ncasecmp ( ins , ""q_PORT_WRITE"" , 12 )"	32:12:779:818	635478	0	True				
ANR	635606	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_PORT_WRITE"" , 12 )"		635478	0					
ANR	635607	UnaryOperator	!		635478	0					
ANR	635608	CallExpression	"r_str_ncasecmp ( ins , ""q_PORT_WRITE"" , 12 )"		635478	1					
ANR	635609	Callee	r_str_ncasecmp		635478	0					
ANR	635610	Identifier	r_str_ncasecmp		635478	0					
ANR	635611	ArgumentList	ins		635478	1					
ANR	635612	Argument	ins		635478	0					
ANR	635613	Identifier	ins		635478	0					
ANR	635614	Argument	"""q_PORT_WRITE"""		635478	1					
ANR	635615	PrimaryExpression	"""q_PORT_WRITE"""		635478	0					
ANR	635616	Argument	12		635478	2					
ANR	635617	PrimaryExpression	12		635478	0					
ANR	635618	CompoundStatement		14:54:421:421	635478	1					
ANR	635619	ExpressionStatement	res = ( val >> 5 ) & 1	33:2:825:845	635478	0	True				
ANR	635620	AssignmentExpression	res = ( val >> 5 ) & 1		635478	0		=			
ANR	635621	Identifier	res		635478	0					
ANR	635622	BitAndExpression	( val >> 5 ) & 1		635478	1		&			
ANR	635623	ShiftExpression	val >> 5		635478	0		>>			
ANR	635624	Identifier	val		635478	0					
ANR	635625	PrimaryExpression	5		635478	1					
ANR	635626	PrimaryExpression	1		635478	1					
ANR	635627	ElseStatement	else		635478	0					
ANR	635628	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_XPORT_READ"" , 12 ) )"		635478	0					
ANR	635629	Condition	"! r_str_ncasecmp ( ins , ""q_XPORT_READ"" , 12 )"	34:12:859:898	635478	0	True				
ANR	635630	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_XPORT_READ"" , 12 )"		635478	0					
ANR	635631	UnaryOperator	!		635478	0					
ANR	635632	CallExpression	"r_str_ncasecmp ( ins , ""q_XPORT_READ"" , 12 )"		635478	1					
ANR	635633	Callee	r_str_ncasecmp		635478	0					
ANR	635634	Identifier	r_str_ncasecmp		635478	0					
ANR	635635	ArgumentList	ins		635478	1					
ANR	635636	Argument	ins		635478	0					
ANR	635637	Identifier	ins		635478	0					
ANR	635638	Argument	"""q_XPORT_READ"""		635478	1					
ANR	635639	PrimaryExpression	"""q_XPORT_READ"""		635478	0					
ANR	635640	Argument	12		635478	2					
ANR	635641	PrimaryExpression	12		635478	0					
ANR	635642	CompoundStatement		16:54:501:501	635478	1					
ANR	635643	ExpressionStatement	res = ( val >> 6 ) & 1	35:2:905:925	635478	0	True				
ANR	635644	AssignmentExpression	res = ( val >> 6 ) & 1		635478	0		=			
ANR	635645	Identifier	res		635478	0					
ANR	635646	BitAndExpression	( val >> 6 ) & 1		635478	1		&			
ANR	635647	ShiftExpression	val >> 6		635478	0		>>			
ANR	635648	Identifier	val		635478	0					
ANR	635649	PrimaryExpression	6		635478	1					
ANR	635650	PrimaryExpression	1		635478	1					
ANR	635651	ElseStatement	else		635478	0					
ANR	635652	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_XPORT_WRITE"" , 13 ) )"		635478	0					
ANR	635653	Condition	"! r_str_ncasecmp ( ins , ""q_XPORT_WRITE"" , 13 )"	36:12:939:979	635478	0	True				
ANR	635654	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_XPORT_WRITE"" , 13 )"		635478	0					
ANR	635655	UnaryOperator	!		635478	0					
ANR	635656	CallExpression	"r_str_ncasecmp ( ins , ""q_XPORT_WRITE"" , 13 )"		635478	1					
ANR	635657	Callee	r_str_ncasecmp		635478	0					
ANR	635658	Identifier	r_str_ncasecmp		635478	0					
ANR	635659	ArgumentList	ins		635478	1					
ANR	635660	Argument	ins		635478	0					
ANR	635661	Identifier	ins		635478	0					
ANR	635662	Argument	"""q_XPORT_WRITE"""		635478	1					
ANR	635663	PrimaryExpression	"""q_XPORT_WRITE"""		635478	0					
ANR	635664	Argument	13		635478	2					
ANR	635665	PrimaryExpression	13		635478	0					
ANR	635666	CompoundStatement		18:55:582:582	635478	1					
ANR	635667	ExpressionStatement	res = ( val >> 7 ) & 1	37:2:986:1006	635478	0	True				
ANR	635668	AssignmentExpression	res = ( val >> 7 ) & 1		635478	0		=			
ANR	635669	Identifier	res		635478	0					
ANR	635670	BitAndExpression	( val >> 7 ) & 1		635478	1		&			
ANR	635671	ShiftExpression	val >> 7		635478	0		>>			
ANR	635672	Identifier	val		635478	0					
ANR	635673	PrimaryExpression	7		635478	1					
ANR	635674	PrimaryExpression	1		635478	1					
ANR	635675	ElseStatement	else		635478	0					
ANR	635676	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_SAT"" , 5 ) )"		635478	0					
ANR	635677	Condition	"! r_str_ncasecmp ( ins , ""q_SAT"" , 5 )"	38:12:1020:1051	635478	0	True				
ANR	635678	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_SAT"" , 5 )"		635478	0					
ANR	635679	UnaryOperator	!		635478	0					
ANR	635680	CallExpression	"r_str_ncasecmp ( ins , ""q_SAT"" , 5 )"		635478	1					
ANR	635681	Callee	r_str_ncasecmp		635478	0					
ANR	635682	Identifier	r_str_ncasecmp		635478	0					
ANR	635683	ArgumentList	ins		635478	1					
ANR	635684	Argument	ins		635478	0					
ANR	635685	Identifier	ins		635478	0					
ANR	635686	Argument	"""q_SAT"""		635478	1					
ANR	635687	PrimaryExpression	"""q_SAT"""		635478	0					
ANR	635688	Argument	5		635478	2					
ANR	635689	PrimaryExpression	5		635478	0					
ANR	635690	CompoundStatement		20:46:654:654	635478	1					
ANR	635691	ExpressionStatement	res = ( val >> 8 ) & 1	39:2:1058:1078	635478	0	True				
ANR	635692	AssignmentExpression	res = ( val >> 8 ) & 1		635478	0		=			
ANR	635693	Identifier	res		635478	0					
ANR	635694	BitAndExpression	( val >> 8 ) & 1		635478	1		&			
ANR	635695	ShiftExpression	val >> 8		635478	0		>>			
ANR	635696	Identifier	val		635478	0					
ANR	635697	PrimaryExpression	8		635478	1					
ANR	635698	PrimaryExpression	1		635478	1					
ANR	635699	ElseStatement	else		635478	0					
ANR	635700	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_XC0"" , 5 ) )"		635478	0					
ANR	635701	Condition	"! r_str_ncasecmp ( ins , ""q_XC0"" , 5 )"	40:12:1092:1123	635478	0	True				
ANR	635702	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_XC0"" , 5 )"		635478	0					
ANR	635703	UnaryOperator	!		635478	0					
ANR	635704	CallExpression	"r_str_ncasecmp ( ins , ""q_XC0"" , 5 )"		635478	1					
ANR	635705	Callee	r_str_ncasecmp		635478	0					
ANR	635706	Identifier	r_str_ncasecmp		635478	0					
ANR	635707	ArgumentList	ins		635478	1					
ANR	635708	Argument	ins		635478	0					
ANR	635709	Identifier	ins		635478	0					
ANR	635710	Argument	"""q_XC0"""		635478	1					
ANR	635711	PrimaryExpression	"""q_XC0"""		635478	0					
ANR	635712	Argument	5		635478	2					
ANR	635713	PrimaryExpression	5		635478	0					
ANR	635714	CompoundStatement		22:46:726:726	635478	1					
ANR	635715	ExpressionStatement	res = ( val >> 9 ) & 1	41:2:1130:1150	635478	0	True				
ANR	635716	AssignmentExpression	res = ( val >> 9 ) & 1		635478	0		=			
ANR	635717	Identifier	res		635478	0					
ANR	635718	BitAndExpression	( val >> 9 ) & 1		635478	1		&			
ANR	635719	ShiftExpression	val >> 9		635478	0		>>			
ANR	635720	Identifier	val		635478	0					
ANR	635721	PrimaryExpression	9		635478	1					
ANR	635722	PrimaryExpression	1		635478	1					
ANR	635723	ElseStatement	else		635478	0					
ANR	635724	IfStatement	"if ( ! r_str_ncasecmp ( ins , ""q_XC1"" , 5 ) )"		635478	0					
ANR	635725	Condition	"! r_str_ncasecmp ( ins , ""q_XC1"" , 5 )"	42:12:1164:1195	635478	0	True				
ANR	635726	UnaryOperationExpression	"! r_str_ncasecmp ( ins , ""q_XC1"" , 5 )"		635478	0					
ANR	635727	UnaryOperator	!		635478	0					
ANR	635728	CallExpression	"r_str_ncasecmp ( ins , ""q_XC1"" , 5 )"		635478	1					
ANR	635729	Callee	r_str_ncasecmp		635478	0					
ANR	635730	Identifier	r_str_ncasecmp		635478	0					
ANR	635731	ArgumentList	ins		635478	1					
ANR	635732	Argument	ins		635478	0					
ANR	635733	Identifier	ins		635478	0					
ANR	635734	Argument	"""q_XC1"""		635478	1					
ANR	635735	PrimaryExpression	"""q_XC1"""		635478	0					
ANR	635736	Argument	5		635478	2					
ANR	635737	PrimaryExpression	5		635478	0					
ANR	635738	CompoundStatement		24:46:798:798	635478	1					
ANR	635739	ExpressionStatement	res = ( val >> 10 ) & 1	43:2:1202:1223	635478	0	True				
ANR	635740	AssignmentExpression	res = ( val >> 10 ) & 1		635478	0		=			
ANR	635741	Identifier	res		635478	0					
ANR	635742	BitAndExpression	( val >> 10 ) & 1		635478	1		&			
ANR	635743	ShiftExpression	val >> 10		635478	0		>>			
ANR	635744	Identifier	val		635478	0					
ANR	635745	PrimaryExpression	10		635478	1					
ANR	635746	PrimaryExpression	1		635478	1					
ANR	635747	ElseStatement	else		635478	0					
ANR	635748	CompoundStatement		26:8:833:833	635478	0					
ANR	635749	ExpressionStatement	"fprintf ( stderr , ""Invalid token %s\\n"" , ins )"	46:2:1263:1305	635478	0	True				
ANR	635750	CallExpression	"fprintf ( stderr , ""Invalid token %s\\n"" , ins )"		635478	0					
ANR	635751	Callee	fprintf		635478	0					
ANR	635752	Identifier	fprintf		635478	0					
ANR	635753	ArgumentList	stderr		635478	1					
ANR	635754	Argument	stderr		635478	0					
ANR	635755	Identifier	stderr		635478	0					
ANR	635756	Argument	"""Invalid token %s\\n"""		635478	1					
ANR	635757	PrimaryExpression	"""Invalid token %s\\n"""		635478	0					
ANR	635758	Argument	ins		635478	2					
ANR	635759	Identifier	ins		635478	0					
ANR	635760	ExpressionStatement	* err_code = - 1	46:46:1307:1321	635478	1	True				
ANR	635761	AssignmentExpression	* err_code = - 1		635478	0		=			
ANR	635762	UnaryOperationExpression	* err_code		635478	0					
ANR	635763	UnaryOperator	*		635478	0					
ANR	635764	Identifier	err_code		635478	1					
ANR	635765	UnaryOperationExpression	- 1		635478	1					
ANR	635766	UnaryOperator	-		635478	0					
ANR	635767	PrimaryExpression	1		635478	1					
ANR	635768	ReturnStatement	return res ;	48:1:1327:1337	635478	2	True				
ANR	635769	Identifier	res		635478	0					
ANR	635770	ReturnType	static ut32		635478	1					
ANR	635771	Identifier	get_q_bits		635478	2					
ANR	635772	ParameterList	"ut32 val , char * ins , ut32 ins_len , int * err_code"		635478	3					
ANR	635773	Parameter	ut32 val	19:23:349:356	635478	0	True				
ANR	635774	ParameterType	ut32		635478	0					
ANR	635775	Identifier	val		635478	1					
ANR	635776	Parameter	char * ins	19:33:359:367	635478	1	True				
ANR	635777	ParameterType	char *		635478	0					
ANR	635778	Identifier	ins		635478	1					
ANR	635779	Parameter	ut32 ins_len	19:44:370:381	635478	2	True				
ANR	635780	ParameterType	ut32		635478	0					
ANR	635781	Identifier	ins_len		635478	1					
ANR	635782	Parameter	int * err_code	19:58:384:396	635478	3	True				
ANR	635783	ParameterType	int *		635478	0					
ANR	635784	Identifier	err_code		635478	1					
ANR	635785	CFGEntryNode	ENTRY		635478		True				
ANR	635786	CFGExitNode	EXIT		635478		True				
ANR	635787	Symbol	val		635478						
ANR	635788	Symbol	ins_len		635478						
ANR	635789	Symbol	res		635478						
ANR	635790	Symbol	* err_code		635478						
ANR	635791	Symbol	err_code		635478						
ANR	635792	Symbol	r_str_ncasecmp		635478						
ANR	635793	Symbol	stderr		635478						
ANR	635794	Symbol	ins		635478						
ANR	635795	Function	get_ins_bits	55:0:1423:2365							
ANR	635796	FunctionDef	"get_ins_bits (ut32 hash_code , ut32 ins_pos , char * ins , ut32 ins_len , ut32 magic_value , int * err_code)"		635795	0					
ANR	635797	CompoundStatement		57:0:1537:2365	635795	0					
ANR	635798	IdentifierDeclStatement	ut32 res = 0 ;	58:1:1540:1552	635795	0	True				
ANR	635799	IdentifierDecl	res = 0		635795	0					
ANR	635800	IdentifierDeclType	ut32		635795	0					
ANR	635801	Identifier	res		635795	1					
ANR	635802	AssignmentExpression	res = 0		635795	2		=			
ANR	635803	Identifier	res		635795	0					
ANR	635804	PrimaryExpression	0		635795	1					
ANR	635805	IdentifierDeclStatement	ut8 op_b ;	59:1:1555:1563	635795	1	True				
ANR	635806	IdentifierDecl	op_b		635795	0					
ANR	635807	IdentifierDeclType	ut8		635795	0					
ANR	635808	Identifier	op_b		635795	1					
ANR	635809	IdentifierDeclStatement	"ut32 len , x , i ;"	60:1:1566:1580	635795	2	True				
ANR	635810	IdentifierDecl	len		635795	0					
ANR	635811	IdentifierDeclType	ut32		635795	0					
ANR	635812	Identifier	len		635795	1					
ANR	635813	IdentifierDecl	x		635795	1					
ANR	635814	IdentifierDeclType	ut32		635795	0					
ANR	635815	Identifier	x		635795	1					
ANR	635816	IdentifierDecl	i		635795	2					
ANR	635817	IdentifierDeclType	ut32		635795	0					
ANR	635818	Identifier	i		635795	1					
ANR	635819	IdentifierDeclStatement	"char * op_str , * aux ;"	61:1:1583:1601	635795	3	True				
ANR	635820	IdentifierDecl	* op_str		635795	0					
ANR	635821	IdentifierDeclType	char *		635795	0					
ANR	635822	Identifier	op_str		635795	1					
ANR	635823	IdentifierDecl	* aux		635795	1					
ANR	635824	IdentifierDeclType	char *		635795	0					
ANR	635825	Identifier	aux		635795	1					
ANR	635826	IfStatement	if ( ins [ 0 ] == 'q' )		635795	4					
ANR	635827	Condition	ins [ 0 ] == 'q'	63:5:1609:1621	635795	0	True				
ANR	635828	EqualityExpression	ins [ 0 ] == 'q'		635795	0		==			
ANR	635829	ArrayIndexing	ins [ 0 ]		635795	0					
ANR	635830	Identifier	ins		635795	0					
ANR	635831	PrimaryExpression	0		635795	1					
ANR	635832	PrimaryExpression	'q'		635795	1					
ANR	635833	CompoundStatement		7:20:86:86	635795	1					
ANR	635834	ReturnStatement	"return get_q_bits ( magic_value , ins , ins_len , err_code ) ;"	64:2:1628:1683	635795	0	True				
ANR	635835	CallExpression	"get_q_bits ( magic_value , ins , ins_len , err_code )"		635795	0					
ANR	635836	Callee	get_q_bits		635795	0					
ANR	635837	Identifier	get_q_bits		635795	0					
ANR	635838	ArgumentList	magic_value		635795	1					
ANR	635839	Argument	magic_value		635795	0					
ANR	635840	Identifier	magic_value		635795	0					
ANR	635841	Argument	ins		635795	1					
ANR	635842	Identifier	ins		635795	0					
ANR	635843	Argument	ins_len		635795	2					
ANR	635844	Identifier	ins_len		635795	0					
ANR	635845	Argument	err_code		635795	3					
ANR	635846	Identifier	err_code		635795	0					
ANR	635847	ExpressionStatement	op_str = ins_str [ 1 + hash_code * 4 ]	67:1:1690:1725	635795	5	True				
ANR	635848	AssignmentExpression	op_str = ins_str [ 1 + hash_code * 4 ]		635795	0		=			
ANR	635849	Identifier	op_str		635795	0					
ANR	635850	ArrayIndexing	ins_str [ 1 + hash_code * 4 ]		635795	1					
ANR	635851	Identifier	ins_str		635795	0					
ANR	635852	AdditiveExpression	1 + hash_code * 4		635795	1		+			
ANR	635853	PrimaryExpression	1		635795	0					
ANR	635854	MultiplicativeExpression	hash_code * 4		635795	1		*			
ANR	635855	Identifier	hash_code		635795	0					
ANR	635856	PrimaryExpression	4		635795	1					
ANR	635857	ExpressionStatement	x = 0	70:1:1774:1779	635795	6	True				
ANR	635858	AssignmentExpression	x = 0		635795	0		=			
ANR	635859	Identifier	x		635795	0					
ANR	635860	PrimaryExpression	0		635795	1					
ANR	635861	ForStatement	for ( i = 0 ; i < ins_len ; i ++ )		635795	7					
ANR	635862	ForInit	i = 0 ;	71:6:1787:1792	635795	0	True				
ANR	635863	AssignmentExpression	i = 0		635795	0		=			
ANR	635864	Identifier	i		635795	0					
ANR	635865	PrimaryExpression	0		635795	1					
ANR	635866	Condition	i < ins_len	71:13:1794:1804	635795	1	True				
ANR	635867	RelationalExpression	i < ins_len		635795	0		<			
ANR	635868	Identifier	i		635795	0					
ANR	635869	Identifier	ins_len		635795	1					
ANR	635870	PostIncDecOperationExpression	i ++	71:26:1807:1809	635795	2	True				
ANR	635871	Identifier	i		635795	0					
ANR	635872	IncDec	++		635795	1					
ANR	635873	CompoundStatement		15:31:274:274	635795	3					
ANR	635874	ExpressionStatement	"aux = strchr ( & op_str [ x ] , ins [ i ] )"	72:2:1816:1848	635795	0	True				
ANR	635875	AssignmentExpression	"aux = strchr ( & op_str [ x ] , ins [ i ] )"		635795	0		=			
ANR	635876	Identifier	aux		635795	0					
ANR	635877	CallExpression	"strchr ( & op_str [ x ] , ins [ i ] )"		635795	1					
ANR	635878	Callee	strchr		635795	0					
ANR	635879	Identifier	strchr		635795	0					
ANR	635880	ArgumentList	& op_str [ x ]		635795	1					
ANR	635881	Argument	& op_str [ x ]		635795	0					
ANR	635882	UnaryOperationExpression	& op_str [ x ]		635795	0					
ANR	635883	UnaryOperator	&		635795	0					
ANR	635884	ArrayIndexing	op_str [ x ]		635795	1					
ANR	635885	Identifier	op_str		635795	0					
ANR	635886	Identifier	x		635795	1					
ANR	635887	Argument	ins [ i ]		635795	1					
ANR	635888	ArrayIndexing	ins [ i ]		635795	0					
ANR	635889	Identifier	ins		635795	0					
ANR	635890	Identifier	i		635795	1					
ANR	635891	IfStatement	if ( ! aux )		635795	1					
ANR	635892	Condition	! aux	73:6:1856:1859	635795	0	True				
ANR	635893	UnaryOperationExpression	! aux		635795	0					
ANR	635894	UnaryOperator	!		635795	0					
ANR	635895	Identifier	aux		635795	1					
ANR	635896	CompoundStatement		17:12:324:324	635795	1					
ANR	635897	ExpressionStatement	"aux = strchr ( op_str , ins [ i ] )"	74:3:1867:1895	635795	0	True				
ANR	635898	AssignmentExpression	"aux = strchr ( op_str , ins [ i ] )"		635795	0		=			
ANR	635899	Identifier	aux		635795	0					
ANR	635900	CallExpression	"strchr ( op_str , ins [ i ] )"		635795	1					
ANR	635901	Callee	strchr		635795	0					
ANR	635902	Identifier	strchr		635795	0					
ANR	635903	ArgumentList	op_str		635795	1					
ANR	635904	Argument	op_str		635795	0					
ANR	635905	Identifier	op_str		635795	0					
ANR	635906	Argument	ins [ i ]		635795	1					
ANR	635907	ArrayIndexing	ins [ i ]		635795	0					
ANR	635908	Identifier	ins		635795	0					
ANR	635909	Identifier	i		635795	1					
ANR	635910	IfStatement	if ( ! aux )		635795	1					
ANR	635911	Condition	! aux	75:7:1904:1907	635795	0	True				
ANR	635912	UnaryOperationExpression	! aux		635795	0					
ANR	635913	UnaryOperator	!		635795	0					
ANR	635914	Identifier	aux		635795	1					
ANR	635915	CompoundStatement		19:13:372:372	635795	1					
ANR	635916	ExpressionStatement	"fprintf ( stderr , ""Invalid token %s\\n"" , ins )"	76:4:1916:1958	635795	0	True				
ANR	635917	CallExpression	"fprintf ( stderr , ""Invalid token %s\\n"" , ins )"		635795	0					
ANR	635918	Callee	fprintf		635795	0					
ANR	635919	Identifier	fprintf		635795	0					
ANR	635920	ArgumentList	stderr		635795	1					
ANR	635921	Argument	stderr		635795	0					
ANR	635922	Identifier	stderr		635795	0					
ANR	635923	Argument	"""Invalid token %s\\n"""		635795	1					
ANR	635924	PrimaryExpression	"""Invalid token %s\\n"""		635795	0					
ANR	635925	Argument	ins		635795	2					
ANR	635926	Identifier	ins		635795	0					
ANR	635927	ExpressionStatement	* err_code = - 1	76:48:1960:1974	635795	1	True				
ANR	635928	AssignmentExpression	* err_code = - 1		635795	0		=			
ANR	635929	UnaryOperationExpression	* err_code		635795	0					
ANR	635930	UnaryOperator	*		635795	0					
ANR	635931	Identifier	err_code		635795	1					
ANR	635932	UnaryOperationExpression	- 1		635795	1					
ANR	635933	UnaryOperator	-		635795	0					
ANR	635934	PrimaryExpression	1		635795	1					
ANR	635935	ReturnStatement	return 0 ;	76:64:1976:1984	635795	2	True				
ANR	635936	PrimaryExpression	0		635795	0					
ANR	635937	ExpressionStatement	len = ( unsigned int ) ( aux - op_str )	80:2:1998:2032	635795	2	True				
ANR	635938	AssignmentExpression	len = ( unsigned int ) ( aux - op_str )		635795	0		=			
ANR	635939	Identifier	len		635795	0					
ANR	635940	CastExpression	( unsigned int ) ( aux - op_str )		635795	1					
ANR	635941	CastTarget	unsigned int		635795	0					
ANR	635942	AdditiveExpression	aux - op_str		635795	1		-			
ANR	635943	Identifier	aux		635795	0					
ANR	635944	Identifier	op_str		635795	1					
ANR	635945	ExpressionStatement	"op_b = get_ins_part ( ins_pos + len / 8 , 1 )"	82:2:2092:2133	635795	3	True				
ANR	635946	AssignmentExpression	"op_b = get_ins_part ( ins_pos + len / 8 , 1 )"		635795	0		=			
ANR	635947	Identifier	op_b		635795	0					
ANR	635948	CallExpression	"get_ins_part ( ins_pos + len / 8 , 1 )"		635795	1					
ANR	635949	Callee	get_ins_part		635795	0					
ANR	635950	Identifier	get_ins_part		635795	0					
ANR	635951	ArgumentList	ins_pos + len / 8		635795	1					
ANR	635952	Argument	ins_pos + len / 8		635795	0					
ANR	635953	AdditiveExpression	ins_pos + len / 8		635795	0		+			
ANR	635954	Identifier	ins_pos		635795	0					
ANR	635955	MultiplicativeExpression	len / 8		635795	1		/			
ANR	635956	Identifier	len		635795	0					
ANR	635957	PrimaryExpression	8		635795	1					
ANR	635958	Argument	1		635795	1					
ANR	635959	PrimaryExpression	1		635795	0					
ANR	635960	ExpressionStatement	x = len + 1	85:2:2169:2180	635795	4	True				
ANR	635961	AssignmentExpression	x = len + 1		635795	0		=			
ANR	635962	Identifier	x		635795	0					
ANR	635963	AdditiveExpression	len + 1		635795	1		+			
ANR	635964	Identifier	len		635795	0					
ANR	635965	PrimaryExpression	1		635795	1					
ANR	635966	ExpressionStatement	res = ( res * 2 ) | ( ( op_b >> ( ( 1023 - len ) % 8 ) ) & 1 )	86:2:2184:2236	635795	5	True				
ANR	635967	AssignmentExpression	res = ( res * 2 ) | ( ( op_b >> ( ( 1023 - len ) % 8 ) ) & 1 )		635795	0		=			
ANR	635968	Identifier	res		635795	0					
ANR	635969	InclusiveOrExpression	( res * 2 ) | ( ( op_b >> ( ( 1023 - len ) % 8 ) ) & 1 )		635795	1		|			
ANR	635970	MultiplicativeExpression	res * 2		635795	0		*			
ANR	635971	Identifier	res		635795	0					
ANR	635972	PrimaryExpression	2		635795	1					
ANR	635973	BitAndExpression	( op_b >> ( ( 1023 - len ) % 8 ) ) & 1		635795	1		&			
ANR	635974	ShiftExpression	op_b >> ( ( 1023 - len ) % 8 )		635795	0		>>			
ANR	635975	Identifier	op_b		635795	0					
ANR	635976	MultiplicativeExpression	( 1023 - len ) % 8		635795	1		%			
ANR	635977	AdditiveExpression	1023 - len		635795	0		-			
ANR	635978	PrimaryExpression	1023		635795	0					
ANR	635979	Identifier	len		635795	1					
ANR	635980	PrimaryExpression	8		635795	1					
ANR	635981	PrimaryExpression	1		635795	1					
ANR	635982	IfStatement	if ( ! op_str [ x ] )		635795	6					
ANR	635983	Condition	! op_str [ x ]	87:6:2244:2253	635795	0	True				
ANR	635984	UnaryOperationExpression	! op_str [ x ]		635795	0					
ANR	635985	UnaryOperator	!		635795	0					
ANR	635986	ArrayIndexing	op_str [ x ]		635795	1					
ANR	635987	Identifier	op_str		635795	0					
ANR	635988	Identifier	x		635795	1					
ANR	635989	CompoundStatement		31:18:718:718	635795	1					
ANR	635990	ExpressionStatement	x = 0	88:3:2261:2266	635795	0	True				
ANR	635991	AssignmentExpression	x = 0		635795	0		=			
ANR	635992	Identifier	x		635795	0					
ANR	635993	PrimaryExpression	0		635795	1					
ANR	635994	IfStatement	if ( C55PLUS_DEBUG )		635795	8					
ANR	635995	Condition	C55PLUS_DEBUG	92:5:2281:2293	635795	0	True				
ANR	635996	Identifier	C55PLUS_DEBUG		635795	0					
ANR	635997	CompoundStatement		36:20:758:758	635795	1					
ANR	635998	ExpressionStatement	"printf ( ""INS_BITS => 0x%x\\n"" , res )"	93:2:2300:2333	635795	0	True				
ANR	635999	CallExpression	"printf ( ""INS_BITS => 0x%x\\n"" , res )"		635795	0					
ANR	636000	Callee	printf		635795	0					
ANR	636001	Identifier	printf		635795	0					
ANR	636002	ArgumentList	"""INS_BITS => 0x%x\\n"""		635795	1					
ANR	636003	Argument	"""INS_BITS => 0x%x\\n"""		635795	0					
ANR	636004	PrimaryExpression	"""INS_BITS => 0x%x\\n"""		635795	0					
ANR	636005	Argument	res		635795	1					
ANR	636006	Identifier	res		635795	0					
ANR	636007	ExpressionStatement	getchar ( )	94:2:2337:2346	635795	1	True				
ANR	636008	CallExpression	getchar ( )		635795	0					
ANR	636009	Callee	getchar		635795	0					
ANR	636010	Identifier	getchar		635795	0					
ANR	636011	ArgumentList			635795	1					
ANR	636012	ReturnStatement	return res ;	97:1:2353:2363	635795	9	True				
ANR	636013	Identifier	res		635795	0					
ANR	636014	ReturnType	static ut32		635795	1					
ANR	636015	Identifier	get_ins_bits		635795	2					
ANR	636016	ParameterList	"ut32 hash_code , ut32 ins_pos , char * ins , ut32 ins_len , ut32 magic_value , int * err_code"		635795	3					
ANR	636017	Parameter	ut32 hash_code	55:25:1448:1461	635795	0	True				
ANR	636018	ParameterType	ut32		635795	0					
ANR	636019	Identifier	hash_code		635795	1					
ANR	636020	Parameter	ut32 ins_pos	55:41:1464:1475	635795	1	True				
ANR	636021	ParameterType	ut32		635795	0					
ANR	636022	Identifier	ins_pos		635795	1					
ANR	636023	Parameter	char * ins	55:55:1478:1486	635795	2	True				
ANR	636024	ParameterType	char *		635795	0					
ANR	636025	Identifier	ins		635795	1					
ANR	636026	Parameter	ut32 ins_len	56:1:1490:1501	635795	3	True				
ANR	636027	ParameterType	ut32		635795	0					
ANR	636028	Identifier	ins_len		635795	1					
ANR	636029	Parameter	ut32 magic_value	56:15:1504:1519	635795	4	True				
ANR	636030	ParameterType	ut32		635795	0					
ANR	636031	Identifier	magic_value		635795	1					
ANR	636032	Parameter	int * err_code	56:33:1522:1534	635795	5	True				
ANR	636033	ParameterType	int *		635795	0					
ANR	636034	Identifier	err_code		635795	1					
ANR	636035	CFGEntryNode	ENTRY		635795		True				
ANR	636036	CFGExitNode	EXIT		635795		True				
ANR	636037	Symbol	* x		635795						
ANR	636038	Symbol	ins_str		635795						
ANR	636039	Symbol	aux		635795						
ANR	636040	Symbol	err_code		635795						
ANR	636041	Symbol	strchr		635795						
ANR	636042	Symbol	op_str		635795						
ANR	636043	Symbol	hash_code		635795						
ANR	636044	Symbol	len		635795						
ANR	636045	Symbol	* err_code		635795						
ANR	636046	Symbol	get_q_bits		635795						
ANR	636047	Symbol	ins_len		635795						
ANR	636048	Symbol	res		635795						
ANR	636049	Symbol	C55PLUS_DEBUG		635795						
ANR	636050	Symbol	ins_pos		635795						
ANR	636051	Symbol	* ins		635795						
ANR	636052	Symbol	* hash_code		635795						
ANR	636053	Symbol	i		635795						
ANR	636054	Symbol	stderr		635795						
ANR	636055	Symbol	* ins_str		635795						
ANR	636056	Symbol	ins		635795						
ANR	636057	Symbol	op_b		635795						
ANR	636058	Symbol	* op_str		635795						
ANR	636059	Symbol	* i		635795						
ANR	636060	Symbol	magic_value		635795						
ANR	636061	Symbol	x		635795						
ANR	636062	Symbol	get_ins_part		635795						
ANR	636063	Function	check_arg	100:0:2368:2678							
ANR	636064	FunctionDef	"check_arg (ut32 ins_bits , int * err_code)"		636063	0					
ANR	636065	CompoundStatement		100:52:2420:2678	636063	0					
ANR	636066	IdentifierDeclStatement	bool res = false ;	101:1:2423:2439	636063	0	True				
ANR	636067	IdentifierDecl	res = false		636063	0					
ANR	636068	IdentifierDeclType	bool		636063	0					
ANR	636069	Identifier	res		636063	1					
ANR	636070	AssignmentExpression	res = false		636063	2		=			
ANR	636071	Identifier	false		636063	0					
ANR	636072	Identifier	false		636063	1					
ANR	636073	IfStatement	if ( ( ins_bits <= 31 ) | ( ins_bits >= 128 && ins_bits < 160 ) )		636063	1					
ANR	636074	Condition	( ins_bits <= 31 ) | ( ins_bits >= 128 && ins_bits < 160 )	103:5:2447:2500	636063	0	True				
ANR	636075	InclusiveOrExpression	( ins_bits <= 31 ) | ( ins_bits >= 128 && ins_bits < 160 )		636063	0		|			
ANR	636076	RelationalExpression	ins_bits <= 31		636063	0		<=			
ANR	636077	Identifier	ins_bits		636063	0					
ANR	636078	PrimaryExpression	31		636063	1					
ANR	636079	AndExpression	ins_bits >= 128 && ins_bits < 160		636063	1		&&			
ANR	636080	RelationalExpression	ins_bits >= 128		636063	0		>=			
ANR	636081	Identifier	ins_bits		636063	0					
ANR	636082	PrimaryExpression	128		636063	1					
ANR	636083	RelationalExpression	ins_bits < 160		636063	1		<			
ANR	636084	Identifier	ins_bits		636063	0					
ANR	636085	PrimaryExpression	160		636063	1					
ANR	636086	CompoundStatement		4:61:82:82	636063	1					
ANR	636087	ExpressionStatement	res = true	104:2:2507:2517	636063	0	True				
ANR	636088	AssignmentExpression	res = true		636063	0		=			
ANR	636089	Identifier	res		636063	0					
ANR	636090	Identifier	true		636063	1					
ANR	636091	ElseStatement	else		636063	0					
ANR	636092	IfStatement	if ( ins_bits >= 32 && ins_bits <= 252 )		636063	0					
ANR	636093	Condition	ins_bits >= 32 && ins_bits <= 252	105:12:2531:2563	636063	0	True				
ANR	636094	AndExpression	ins_bits >= 32 && ins_bits <= 252		636063	0		&&			
ANR	636095	RelationalExpression	ins_bits >= 32		636063	0		>=			
ANR	636096	Identifier	ins_bits		636063	0					
ANR	636097	PrimaryExpression	32		636063	1					
ANR	636098	RelationalExpression	ins_bits <= 252		636063	1		<=			
ANR	636099	Identifier	ins_bits		636063	0					
ANR	636100	PrimaryExpression	252		636063	1					
ANR	636101	CompoundStatement		6:47:145:145	636063	1					
ANR	636102	ExpressionStatement	res = false	106:2:2570:2581	636063	0	True				
ANR	636103	AssignmentExpression	res = false		636063	0		=			
ANR	636104	Identifier	res		636063	0					
ANR	636105	Identifier	false		636063	1					
ANR	636106	ElseStatement	else		636063	0					
ANR	636107	CompoundStatement		8:8:170:170	636063	0					
ANR	636108	ExpressionStatement	"fprintf ( stderr , ""Invalid arg: %u\\n"" , ins_bits )"	108:2:2595:2641	636063	0	True				
ANR	636109	CallExpression	"fprintf ( stderr , ""Invalid arg: %u\\n"" , ins_bits )"		636063	0					
ANR	636110	Callee	fprintf		636063	0					
ANR	636111	Identifier	fprintf		636063	0					
ANR	636112	ArgumentList	stderr		636063	1					
ANR	636113	Argument	stderr		636063	0					
ANR	636114	Identifier	stderr		636063	0					
ANR	636115	Argument	"""Invalid arg: %u\\n"""		636063	1					
ANR	636116	PrimaryExpression	"""Invalid arg: %u\\n"""		636063	0					
ANR	636117	Argument	ins_bits		636063	2					
ANR	636118	Identifier	ins_bits		636063	0					
ANR	636119	ExpressionStatement	* err_code = - 1	109:2:2645:2659	636063	1	True				
ANR	636120	AssignmentExpression	* err_code = - 1		636063	0		=			
ANR	636121	UnaryOperationExpression	* err_code		636063	0					
ANR	636122	UnaryOperator	*		636063	0					
ANR	636123	Identifier	err_code		636063	1					
ANR	636124	UnaryOperationExpression	- 1		636063	1					
ANR	636125	UnaryOperator	-		636063	0					
ANR	636126	PrimaryExpression	1		636063	1					
ANR	636127	ReturnStatement	return res ;	112:1:2666:2676	636063	2	True				
ANR	636128	Identifier	res		636063	0					
ANR	636129	ReturnType	static bool		636063	1					
ANR	636130	Identifier	check_arg		636063	2					
ANR	636131	ParameterList	"ut32 ins_bits , int * err_code"		636063	3					
ANR	636132	Parameter	ut32 ins_bits	100:22:2390:2402	636063	0	True				
ANR	636133	ParameterType	ut32		636063	0					
ANR	636134	Identifier	ins_bits		636063	1					
ANR	636135	Parameter	int * err_code	100:37:2405:2417	636063	1	True				
ANR	636136	ParameterType	int *		636063	0					
ANR	636137	Identifier	err_code		636063	1					
ANR	636138	CFGEntryNode	ENTRY		636063		True				
ANR	636139	CFGExitNode	EXIT		636063		True				
ANR	636140	Symbol	res		636063						
ANR	636141	Symbol	* err_code		636063						
ANR	636142	Symbol	ins_bits		636063						
ANR	636143	Symbol	false		636063						
ANR	636144	Symbol	true		636063						
ANR	636145	Symbol	err_code		636063						
ANR	636146	Symbol	stderr		636063						
ANR	636147	Function	decode_regis	115:0:2681:5381							
ANR	636148	FunctionDef	"decode_regis (char * reg_arg , st32 hash_code , ut32 ins_bits , ut32 * ret_ins_bits , int * err_code)"		636147	0					
ANR	636149	CompoundStatement		116:36:2789:5381	636147	0					
ANR	636150	IdentifierDeclStatement	char reg_type ;	117:1:2792:2805	636147	0	True				
ANR	636151	IdentifierDecl	reg_type		636147	0					
ANR	636152	IdentifierDeclType	char		636147	0					
ANR	636153	Identifier	reg_type		636147	1					
ANR	636154	IdentifierDeclStatement	char * res ;	118:1:2808:2817	636147	1	True				
ANR	636155	IdentifierDecl	* res		636147	0					
ANR	636156	IdentifierDeclType	char *		636147	0					
ANR	636157	Identifier	res		636147	1					
ANR	636158	ExpressionStatement	reg_type = * reg_arg	120:1:2821:2840	636147	2	True				
ANR	636159	AssignmentExpression	reg_type = * reg_arg		636147	0		=			
ANR	636160	Identifier	reg_type		636147	0					
ANR	636161	UnaryOperationExpression	* reg_arg		636147	1					
ANR	636162	UnaryOperator	*		636147	0					
ANR	636163	Identifier	reg_arg		636147	1					
ANR	636164	ExpressionStatement	res = NULL	121:1:2843:2853	636147	3	True				
ANR	636165	AssignmentExpression	res = NULL		636147	0		=			
ANR	636166	Identifier	res		636147	0					
ANR	636167	Identifier	NULL		636147	1					
ANR	636168	SwitchStatement	switch ( reg_type )		636147	4					
ANR	636169	Condition	reg_type	125:9:2917:2924	636147	0	True				
ANR	636170	Identifier	reg_type		636147	0					
ANR	636171	CompoundStatement		10:19:137:137	636147	1					
ANR	636172	Label	case 33 :	126:2:2931:2938	636147	0	True				
ANR	636173	ExpressionStatement	res = get_reg_name_1 ( ( ins_bits >> 1 ) | ( ( ins_bits & 1 ) << 6 ) )	127:3:2943:3015	636147	1	True				
ANR	636174	AssignmentExpression	res = get_reg_name_1 ( ( ins_bits >> 1 ) | ( ( ins_bits & 1 ) << 6 ) )		636147	0		=			
ANR	636175	Identifier	res		636147	0					
ANR	636176	CallExpression	get_reg_name_1 ( ( ins_bits >> 1 ) | ( ( ins_bits & 1 ) << 6 ) )		636147	1					
ANR	636177	Callee	get_reg_name_1		636147	0					
ANR	636178	Identifier	get_reg_name_1		636147	0					
ANR	636179	ArgumentList	( ins_bits >> 1 ) | ( ( ins_bits & 1 ) << 6 )		636147	1					
ANR	636180	Argument	( ins_bits >> 1 ) | ( ( ins_bits & 1 ) << 6 )		636147	0					
ANR	636181	InclusiveOrExpression	( ins_bits >> 1 ) | ( ( ins_bits & 1 ) << 6 )		636147	0		|			
ANR	636182	ShiftExpression	ins_bits >> 1		636147	0		>>			
ANR	636183	Identifier	ins_bits		636147	0					
ANR	636184	PrimaryExpression	1		636147	1					
ANR	636185	ShiftExpression	( ins_bits & 1 ) << 6		636147	1		<<			
ANR	636186	BitAndExpression	ins_bits & 1		636147	0		&			
ANR	636187	Identifier	ins_bits		636147	0					
ANR	636188	PrimaryExpression	1		636147	1					
ANR	636189	PrimaryExpression	6		636147	1					
ANR	636190	BreakStatement	break ;	129:3:3020:3025	636147	2	True				
ANR	636191	Label	case 100 :	130:2:3029:3037	636147	3	True				
ANR	636192	IfStatement	"if ( r_str_ncasecmp ( reg_arg , ""d(ALLx"" , 6 ) )"		636147	4					
ANR	636193	Condition	"r_str_ncasecmp ( reg_arg , ""d(ALLx"" , 6 )"	131:7:3046:3081	636147	0	True				
ANR	636194	CallExpression	"r_str_ncasecmp ( reg_arg , ""d(ALLx"" , 6 )"		636147	0					
ANR	636195	Callee	r_str_ncasecmp		636147	0					
ANR	636196	Identifier	r_str_ncasecmp		636147	0					
ANR	636197	ArgumentList	reg_arg		636147	1					
ANR	636198	Argument	reg_arg		636147	0					
ANR	636199	Identifier	reg_arg		636147	0					
ANR	636200	Argument	"""d(ALLx"""		636147	1					
ANR	636201	PrimaryExpression	"""d(ALLx"""		636147	0					
ANR	636202	Argument	6		636147	2					
ANR	636203	PrimaryExpression	6		636147	0					
ANR	636204	CompoundStatement		16:45:294:294	636147	1					
ANR	636205	ExpressionStatement	"fprintf ( stderr , ""invalid register! %s\\n"" , reg_arg )"	132:4:3090:3140	636147	0	True				
ANR	636206	CallExpression	"fprintf ( stderr , ""invalid register! %s\\n"" , reg_arg )"		636147	0					
ANR	636207	Callee	fprintf		636147	0					
ANR	636208	Identifier	fprintf		636147	0					
ANR	636209	ArgumentList	stderr		636147	1					
ANR	636210	Argument	stderr		636147	0					
ANR	636211	Identifier	stderr		636147	0					
ANR	636212	Argument	"""invalid register! %s\\n"""		636147	1					
ANR	636213	PrimaryExpression	"""invalid register! %s\\n"""		636147	0					
ANR	636214	Argument	reg_arg		636147	2					
ANR	636215	Identifier	reg_arg		636147	0					
ANR	636216	ExpressionStatement	* err_code = - 1	133:4:3146:3160	636147	1	True				
ANR	636217	AssignmentExpression	* err_code = - 1		636147	0		=			
ANR	636218	UnaryOperationExpression	* err_code		636147	0					
ANR	636219	UnaryOperator	*		636147	0					
ANR	636220	Identifier	err_code		636147	1					
ANR	636221	UnaryOperationExpression	- 1		636147	1					
ANR	636222	UnaryOperator	-		636147	0					
ANR	636223	PrimaryExpression	1		636147	1					
ANR	636224	ReturnStatement	return NULL ;	134:4:3166:3177	636147	2	True				
ANR	636225	Identifier	NULL		636147	0					
ANR	636226	ExpressionStatement	"res = ( check_arg ( ins_bits , err_code ) != 0 && * err_code == 0 ) ? strdup ( ""dbl("" ) : NULL"	136:3:3187:3270	636147	5	True				
ANR	636227	AssignmentExpression	"res = ( check_arg ( ins_bits , err_code ) != 0 && * err_code == 0 ) ? strdup ( ""dbl("" ) : NULL"		636147	0		=			
ANR	636228	Identifier	res		636147	0					
ANR	636229	ConditionalExpression	"( check_arg ( ins_bits , err_code ) != 0 && * err_code == 0 ) ? strdup ( ""dbl("" ) : NULL"		636147	1					
ANR	636230	Condition	"check_arg ( ins_bits , err_code ) != 0 && * err_code == 0"		636147	0					
ANR	636231	AndExpression	"check_arg ( ins_bits , err_code ) != 0 && * err_code == 0"		636147	0		&&			
ANR	636232	EqualityExpression	"check_arg ( ins_bits , err_code ) != 0"		636147	0		!=			
ANR	636233	CallExpression	"check_arg ( ins_bits , err_code )"		636147	0					
ANR	636234	Callee	check_arg		636147	0					
ANR	636235	Identifier	check_arg		636147	0					
ANR	636236	ArgumentList	ins_bits		636147	1					
ANR	636237	Argument	ins_bits		636147	0					
ANR	636238	Identifier	ins_bits		636147	0					
ANR	636239	Argument	err_code		636147	1					
ANR	636240	Identifier	err_code		636147	0					
ANR	636241	PrimaryExpression	0		636147	1					
ANR	636242	EqualityExpression	* err_code == 0		636147	1		==			
ANR	636243	UnaryOperationExpression	* err_code		636147	0					
ANR	636244	UnaryOperator	*		636147	0					
ANR	636245	Identifier	err_code		636147	1					
ANR	636246	PrimaryExpression	0		636147	1					
ANR	636247	CallExpression	"strdup ( ""dbl("" )"		636147	1					
ANR	636248	Callee	strdup		636147	0					
ANR	636249	Identifier	strdup		636147	0					
ANR	636250	ArgumentList	"""dbl("""		636147	1					
ANR	636251	Argument	"""dbl("""		636147	0					
ANR	636252	PrimaryExpression	"""dbl("""		636147	0					
ANR	636253	Identifier	NULL		636147	2					
ANR	636254	IfStatement	if ( * err_code < 0 )		636147	6					
ANR	636255	Condition	* err_code < 0	137:7:3279:3291	636147	0	True				
ANR	636256	RelationalExpression	* err_code < 0		636147	0		<			
ANR	636257	UnaryOperationExpression	* err_code		636147	0					
ANR	636258	UnaryOperator	*		636147	0					
ANR	636259	Identifier	err_code		636147	1					
ANR	636260	PrimaryExpression	0		636147	1					
ANR	636261	CompoundStatement		22:22:504:504	636147	1					
ANR	636262	ReturnStatement	return NULL ;	138:4:3300:3311	636147	0	True				
ANR	636263	Identifier	NULL		636147	0					
ANR	636264	BreakStatement	break ;	140:3:3321:3326	636147	7	True				
ANR	636265	Label	case 41 :	141:2:3330:3337	636147	8	True				
ANR	636266	IfStatement	"if ( r_str_ncasecmp ( reg_arg , "")ALLx"" , 5 ) )"		636147	9					
ANR	636267	Condition	"r_str_ncasecmp ( reg_arg , "")ALLx"" , 5 )"	142:7:3346:3380	636147	0	True				
ANR	636268	CallExpression	"r_str_ncasecmp ( reg_arg , "")ALLx"" , 5 )"		636147	0					
ANR	636269	Callee	r_str_ncasecmp		636147	0					
ANR	636270	Identifier	r_str_ncasecmp		636147	0					
ANR	636271	ArgumentList	reg_arg		636147	1					
ANR	636272	Argument	reg_arg		636147	0					
ANR	636273	Identifier	reg_arg		636147	0					
ANR	636274	Argument	""")ALLx"""		636147	1					
ANR	636275	PrimaryExpression	""")ALLx"""		636147	0					
ANR	636276	Argument	5		636147	2					
ANR	636277	PrimaryExpression	5		636147	0					
ANR	636278	CompoundStatement		27:44:593:593	636147	1					
ANR	636279	ExpressionStatement	"fprintf ( stderr , ""invalid register! %s\\n"" , reg_arg )"	143:4:3389:3439	636147	0	True				
ANR	636280	CallExpression	"fprintf ( stderr , ""invalid register! %s\\n"" , reg_arg )"		636147	0					
ANR	636281	Callee	fprintf		636147	0					
ANR	636282	Identifier	fprintf		636147	0					
ANR	636283	ArgumentList	stderr		636147	1					
ANR	636284	Argument	stderr		636147	0					
ANR	636285	Identifier	stderr		636147	0					
ANR	636286	Argument	"""invalid register! %s\\n"""		636147	1					
ANR	636287	PrimaryExpression	"""invalid register! %s\\n"""		636147	0					
ANR	636288	Argument	reg_arg		636147	2					
ANR	636289	Identifier	reg_arg		636147	0					
ANR	636290	ExpressionStatement	* err_code = - 1	144:4:3445:3459	636147	1	True				
ANR	636291	AssignmentExpression	* err_code = - 1		636147	0		=			
ANR	636292	UnaryOperationExpression	* err_code		636147	0					
ANR	636293	UnaryOperator	*		636147	0					
ANR	636294	Identifier	err_code		636147	1					
ANR	636295	UnaryOperationExpression	- 1		636147	1					
ANR	636296	UnaryOperator	-		636147	0					
ANR	636297	PrimaryExpression	1		636147	1					
ANR	636298	ReturnStatement	return NULL ;	145:4:3465:3476	636147	2	True				
ANR	636299	Identifier	NULL		636147	0					
ANR	636300	ExpressionStatement	"res = ( check_arg ( ins_bits , err_code ) && * err_code == 0 ) ? strdup ( "")"" ) : NULL"	147:3:3486:3561	636147	10	True				
ANR	636301	AssignmentExpression	"res = ( check_arg ( ins_bits , err_code ) && * err_code == 0 ) ? strdup ( "")"" ) : NULL"		636147	0		=			
ANR	636302	Identifier	res		636147	0					
ANR	636303	ConditionalExpression	"( check_arg ( ins_bits , err_code ) && * err_code == 0 ) ? strdup ( "")"" ) : NULL"		636147	1					
ANR	636304	Condition	"check_arg ( ins_bits , err_code ) && * err_code == 0"		636147	0					
ANR	636305	AndExpression	"check_arg ( ins_bits , err_code ) && * err_code == 0"		636147	0		&&			
ANR	636306	CallExpression	"check_arg ( ins_bits , err_code )"		636147	0					
ANR	636307	Callee	check_arg		636147	0					
ANR	636308	Identifier	check_arg		636147	0					
ANR	636309	ArgumentList	ins_bits		636147	1					
ANR	636310	Argument	ins_bits		636147	0					
ANR	636311	Identifier	ins_bits		636147	0					
ANR	636312	Argument	err_code		636147	1					
ANR	636313	Identifier	err_code		636147	0					
ANR	636314	EqualityExpression	* err_code == 0		636147	1		==			
ANR	636315	UnaryOperationExpression	* err_code		636147	0					
ANR	636316	UnaryOperator	*		636147	0					
ANR	636317	Identifier	err_code		636147	1					
ANR	636318	PrimaryExpression	0		636147	1					
ANR	636319	CallExpression	"strdup ( "")"" )"		636147	1					
ANR	636320	Callee	strdup		636147	0					
ANR	636321	Identifier	strdup		636147	0					
ANR	636322	ArgumentList	""")"""		636147	1					
ANR	636323	Argument	""")"""		636147	0					
ANR	636324	PrimaryExpression	""")"""		636147	0					
ANR	636325	Identifier	NULL		636147	2					
ANR	636326	IfStatement	if ( * err_code < 0 )		636147	11					
ANR	636327	Condition	* err_code < 0	148:7:3570:3582	636147	0	True				
ANR	636328	RelationalExpression	* err_code < 0		636147	0		<			
ANR	636329	UnaryOperationExpression	* err_code		636147	0					
ANR	636330	UnaryOperator	*		636147	0					
ANR	636331	Identifier	err_code		636147	1					
ANR	636332	PrimaryExpression	0		636147	1					
ANR	636333	CompoundStatement		33:22:795:795	636147	1					
ANR	636334	ReturnStatement	return NULL ;	149:4:3591:3602	636147	0	True				
ANR	636335	Identifier	NULL		636147	0					
ANR	636336	BreakStatement	break ;	151:3:3612:3617	636147	12	True				
ANR	636337	Label	case 65 :	152:2:3621:3628	636147	13	True				
ANR	636338	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""ACLH"" , 4 ) )"		636147	14					
ANR	636339	Condition	"! r_str_ncasecmp ( reg_arg , ""ACLH"" , 4 )"	153:7:3637:3671	636147	0	True				
ANR	636340	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""ACLH"" , 4 )"		636147	0					
ANR	636341	UnaryOperator	!		636147	0					
ANR	636342	CallExpression	"r_str_ncasecmp ( reg_arg , ""ACLH"" , 4 )"		636147	1					
ANR	636343	Callee	r_str_ncasecmp		636147	0					
ANR	636344	Identifier	r_str_ncasecmp		636147	0					
ANR	636345	ArgumentList	reg_arg		636147	1					
ANR	636346	Argument	reg_arg		636147	0					
ANR	636347	Identifier	reg_arg		636147	0					
ANR	636348	Argument	"""ACLH"""		636147	1					
ANR	636349	PrimaryExpression	"""ACLH"""		636147	0					
ANR	636350	Argument	4		636147	2					
ANR	636351	PrimaryExpression	4		636147	0					
ANR	636352	CompoundStatement		38:44:884:884	636147	1					
ANR	636353	ExpressionStatement	res = get_reg_name_1 ( ins_bits + 64 )	154:4:3680:3715	636147	0	True				
ANR	636354	AssignmentExpression	res = get_reg_name_1 ( ins_bits + 64 )		636147	0		=			
ANR	636355	Identifier	res		636147	0					
ANR	636356	CallExpression	get_reg_name_1 ( ins_bits + 64 )		636147	1					
ANR	636357	Callee	get_reg_name_1		636147	0					
ANR	636358	Identifier	get_reg_name_1		636147	0					
ANR	636359	ArgumentList	ins_bits + 64		636147	1					
ANR	636360	Argument	ins_bits + 64		636147	0					
ANR	636361	AdditiveExpression	ins_bits + 64		636147	0		+			
ANR	636362	Identifier	ins_bits		636147	0					
ANR	636363	PrimaryExpression	64		636147	1					
ANR	636364	ElseStatement	else		636147	0					
ANR	636365	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""ACxP"" , 4 ) )"		636147	0					
ANR	636366	Condition	"! r_str_ncasecmp ( reg_arg , ""ACxP"" , 4 )"	155:14:3731:3765	636147	0	True				
ANR	636367	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""ACxP"" , 4 )"		636147	0					
ANR	636368	UnaryOperator	!		636147	0					
ANR	636369	CallExpression	"r_str_ncasecmp ( reg_arg , ""ACxP"" , 4 )"		636147	1					
ANR	636370	Callee	r_str_ncasecmp		636147	0					
ANR	636371	Identifier	r_str_ncasecmp		636147	0					
ANR	636372	ArgumentList	reg_arg		636147	1					
ANR	636373	Argument	reg_arg		636147	0					
ANR	636374	Identifier	reg_arg		636147	0					
ANR	636375	Argument	"""ACxP"""		636147	1					
ANR	636376	PrimaryExpression	"""ACxP"""		636147	0					
ANR	636377	Argument	4		636147	2					
ANR	636378	PrimaryExpression	4		636147	0					
ANR	636379	CompoundStatement		40:51:978:978	636147	1					
ANR	636380	ExpressionStatement	res = get_reg_name_1 ( ins_bits + 1 )	156:4:3774:3808	636147	0	True				
ANR	636381	AssignmentExpression	res = get_reg_name_1 ( ins_bits + 1 )		636147	0		=			
ANR	636382	Identifier	res		636147	0					
ANR	636383	CallExpression	get_reg_name_1 ( ins_bits + 1 )		636147	1					
ANR	636384	Callee	get_reg_name_1		636147	0					
ANR	636385	Identifier	get_reg_name_1		636147	0					
ANR	636386	ArgumentList	ins_bits + 1		636147	1					
ANR	636387	Argument	ins_bits + 1		636147	0					
ANR	636388	AdditiveExpression	ins_bits + 1		636147	0		+			
ANR	636389	Identifier	ins_bits		636147	0					
ANR	636390	PrimaryExpression	1		636147	1					
ANR	636391	ElseStatement	else		636147	0					
ANR	636392	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""ACx"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""ADR"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""ALL"" , 3 ) )"		636147	0					
ANR	636393	Condition	"! r_str_ncasecmp ( reg_arg , ""ACx"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""ADR"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""ALL"" , 3 )"	157:14:3824:3945	636147	0	True				
ANR	636394	OrExpression	"! r_str_ncasecmp ( reg_arg , ""ACx"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""ADR"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""ALL"" , 3 )"		636147	0		||			
ANR	636395	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""ACx"" , 3 )"		636147	0					
ANR	636396	UnaryOperator	!		636147	0					
ANR	636397	CallExpression	"r_str_ncasecmp ( reg_arg , ""ACx"" , 3 )"		636147	1					
ANR	636398	Callee	r_str_ncasecmp		636147	0					
ANR	636399	Identifier	r_str_ncasecmp		636147	0					
ANR	636400	ArgumentList	reg_arg		636147	1					
ANR	636401	Argument	reg_arg		636147	0					
ANR	636402	Identifier	reg_arg		636147	0					
ANR	636403	Argument	"""ACx"""		636147	1					
ANR	636404	PrimaryExpression	"""ACx"""		636147	0					
ANR	636405	Argument	3		636147	2					
ANR	636406	PrimaryExpression	3		636147	0					
ANR	636407	OrExpression	"! r_str_ncasecmp ( reg_arg , ""ADR"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""ALL"" , 3 )"		636147	1		||			
ANR	636408	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""ADR"" , 3 )"		636147	0					
ANR	636409	UnaryOperator	!		636147	0					
ANR	636410	CallExpression	"r_str_ncasecmp ( reg_arg , ""ADR"" , 3 )"		636147	1					
ANR	636411	Callee	r_str_ncasecmp		636147	0					
ANR	636412	Identifier	r_str_ncasecmp		636147	0					
ANR	636413	ArgumentList	reg_arg		636147	1					
ANR	636414	Argument	reg_arg		636147	0					
ANR	636415	Identifier	reg_arg		636147	0					
ANR	636416	Argument	"""ADR"""		636147	1					
ANR	636417	PrimaryExpression	"""ADR"""		636147	0					
ANR	636418	Argument	3		636147	2					
ANR	636419	PrimaryExpression	3		636147	0					
ANR	636420	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""ALL"" , 3 )"		636147	1					
ANR	636421	UnaryOperator	!		636147	0					
ANR	636422	CallExpression	"r_str_ncasecmp ( reg_arg , ""ALL"" , 3 )"		636147	1					
ANR	636423	Callee	r_str_ncasecmp		636147	0					
ANR	636424	Identifier	r_str_ncasecmp		636147	0					
ANR	636425	ArgumentList	reg_arg		636147	1					
ANR	636426	Argument	reg_arg		636147	0					
ANR	636427	Identifier	reg_arg		636147	0					
ANR	636428	Argument	"""ALL"""		636147	1					
ANR	636429	PrimaryExpression	"""ALL"""		636147	0					
ANR	636430	Argument	3		636147	2					
ANR	636431	PrimaryExpression	3		636147	0					
ANR	636432	CompoundStatement		45:7:1177:1177	636147	1					
ANR	636433	ExpressionStatement	res = get_reg_name_1 ( ins_bits )	161:4:3973:4003	636147	0	True				
ANR	636434	AssignmentExpression	res = get_reg_name_1 ( ins_bits )		636147	0		=			
ANR	636435	Identifier	res		636147	0					
ANR	636436	CallExpression	get_reg_name_1 ( ins_bits )		636147	1					
ANR	636437	Callee	get_reg_name_1		636147	0					
ANR	636438	Identifier	get_reg_name_1		636147	0					
ANR	636439	ArgumentList	ins_bits		636147	1					
ANR	636440	Argument	ins_bits		636147	0					
ANR	636441	Identifier	ins_bits		636147	0					
ANR	636442	IfStatement	if ( hash_code == 0xDF || hash_code == 0xE0 )		636147	15					
ANR	636443	Condition	hash_code == 0xDF || hash_code == 0xE0	163:7:4017:4054	636147	0	True				
ANR	636444	OrExpression	hash_code == 0xDF || hash_code == 0xE0		636147	0		||			
ANR	636445	EqualityExpression	hash_code == 0xDF		636147	0		==			
ANR	636446	Identifier	hash_code		636147	0					
ANR	636447	PrimaryExpression	0xDF		636147	1					
ANR	636448	EqualityExpression	hash_code == 0xE0		636147	1		==			
ANR	636449	Identifier	hash_code		636147	0					
ANR	636450	PrimaryExpression	0xE0		636147	1					
ANR	636451	CompoundStatement		48:47:1267:1267	636147	1					
ANR	636452	ExpressionStatement	* ret_ins_bits = ins_bits	164:4:4063:4087	636147	0	True				
ANR	636453	AssignmentExpression	* ret_ins_bits = ins_bits		636147	0		=			
ANR	636454	UnaryOperationExpression	* ret_ins_bits		636147	0					
ANR	636455	UnaryOperator	*		636147	0					
ANR	636456	Identifier	ret_ins_bits		636147	1					
ANR	636457	Identifier	ins_bits		636147	1					
ANR	636458	BreakStatement	break ;	166:3:4097:4102	636147	16	True				
ANR	636459	Label	case 68 :	167:2:4106:4113	636147	17	True				
ANR	636460	ExpressionStatement	res = get_reg_name_1 ( ins_bits + 32 )	168:3:4118:4153	636147	18	True				
ANR	636461	AssignmentExpression	res = get_reg_name_1 ( ins_bits + 32 )		636147	0		=			
ANR	636462	Identifier	res		636147	0					
ANR	636463	CallExpression	get_reg_name_1 ( ins_bits + 32 )		636147	1					
ANR	636464	Callee	get_reg_name_1		636147	0					
ANR	636465	Identifier	get_reg_name_1		636147	0					
ANR	636466	ArgumentList	ins_bits + 32		636147	1					
ANR	636467	Argument	ins_bits + 32		636147	0					
ANR	636468	AdditiveExpression	ins_bits + 32		636147	0		+			
ANR	636469	Identifier	ins_bits		636147	0					
ANR	636470	PrimaryExpression	32		636147	1					
ANR	636471	BreakStatement	break ;	169:3:4158:4163	636147	19	True				
ANR	636472	Label	case 77 :	170:2:4167:4174	636147	20	True				
ANR	636473	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""MA"" , 2 ) || ! r_str_ncasecmp ( reg_arg , ""MR"" , 2 ) )"		636147	21					
ANR	636474	Condition	"! r_str_ncasecmp ( reg_arg , ""MA"" , 2 ) || ! r_str_ncasecmp ( reg_arg , ""MR"" , 2 )"	171:7:4183:4252	636147	0	True				
ANR	636475	OrExpression	"! r_str_ncasecmp ( reg_arg , ""MA"" , 2 ) || ! r_str_ncasecmp ( reg_arg , ""MR"" , 2 )"		636147	0		||			
ANR	636476	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""MA"" , 2 )"		636147	0					
ANR	636477	UnaryOperator	!		636147	0					
ANR	636478	CallExpression	"r_str_ncasecmp ( reg_arg , ""MA"" , 2 )"		636147	1					
ANR	636479	Callee	r_str_ncasecmp		636147	0					
ANR	636480	Identifier	r_str_ncasecmp		636147	0					
ANR	636481	ArgumentList	reg_arg		636147	1					
ANR	636482	Argument	reg_arg		636147	0					
ANR	636483	Identifier	reg_arg		636147	0					
ANR	636484	Argument	"""MA"""		636147	1					
ANR	636485	PrimaryExpression	"""MA"""		636147	0					
ANR	636486	Argument	2		636147	2					
ANR	636487	PrimaryExpression	2		636147	0					
ANR	636488	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""MR"" , 2 )"		636147	1					
ANR	636489	UnaryOperator	!		636147	0					
ANR	636490	CallExpression	"r_str_ncasecmp ( reg_arg , ""MR"" , 2 )"		636147	1					
ANR	636491	Callee	r_str_ncasecmp		636147	0					
ANR	636492	Identifier	r_str_ncasecmp		636147	0					
ANR	636493	ArgumentList	reg_arg		636147	1					
ANR	636494	Argument	reg_arg		636147	0					
ANR	636495	Identifier	reg_arg		636147	0					
ANR	636496	Argument	"""MR"""		636147	1					
ANR	636497	PrimaryExpression	"""MR"""		636147	0					
ANR	636498	Argument	2		636147	2					
ANR	636499	PrimaryExpression	2		636147	0					
ANR	636500	CompoundStatement		56:79:1465:1465	636147	1					
ANR	636501	ExpressionStatement	res = get_reg_name_1 ( ins_bits )	172:4:4261:4291	636147	0	True				
ANR	636502	AssignmentExpression	res = get_reg_name_1 ( ins_bits )		636147	0		=			
ANR	636503	Identifier	res		636147	0					
ANR	636504	CallExpression	get_reg_name_1 ( ins_bits )		636147	1					
ANR	636505	Callee	get_reg_name_1		636147	0					
ANR	636506	Identifier	get_reg_name_1		636147	0					
ANR	636507	ArgumentList	ins_bits		636147	1					
ANR	636508	Argument	ins_bits		636147	0					
ANR	636509	Identifier	ins_bits		636147	0					
ANR	636510	ElseStatement	else		636147	0					
ANR	636511	CompoundStatement		58:10:1513:1513	636147	0					
ANR	636512	ExpressionStatement	res = get_reg_name_2 ( ins_bits )	174:4:4309:4339	636147	0	True				
ANR	636513	AssignmentExpression	res = get_reg_name_2 ( ins_bits )		636147	0		=			
ANR	636514	Identifier	res		636147	0					
ANR	636515	CallExpression	get_reg_name_2 ( ins_bits )		636147	1					
ANR	636516	Callee	get_reg_name_2		636147	0					
ANR	636517	Identifier	get_reg_name_2		636147	0					
ANR	636518	ArgumentList	ins_bits		636147	1					
ANR	636519	Argument	ins_bits		636147	0					
ANR	636520	Identifier	ins_bits		636147	0					
ANR	636521	BreakStatement	break ;	176:3:4349:4354	636147	22	True				
ANR	636522	Label	case 83 :	177:2:4358:4365	636147	23	True				
ANR	636523	ExpressionStatement	res = get_reg_name_1 ( ins_bits )	178:3:4370:4400	636147	24	True				
ANR	636524	AssignmentExpression	res = get_reg_name_1 ( ins_bits )		636147	0		=			
ANR	636525	Identifier	res		636147	0					
ANR	636526	CallExpression	get_reg_name_1 ( ins_bits )		636147	1					
ANR	636527	Callee	get_reg_name_1		636147	0					
ANR	636528	Identifier	get_reg_name_1		636147	0					
ANR	636529	ArgumentList	ins_bits		636147	1					
ANR	636530	Argument	ins_bits		636147	0					
ANR	636531	Identifier	ins_bits		636147	0					
ANR	636532	BreakStatement	break ;	179:3:4405:4410	636147	25	True				
ANR	636533	Label	case 82 :	180:2:4414:4421	636147	26	True				
ANR	636534	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""RA"" , 2 ) || ! r_str_ncasecmp ( reg_arg , ""RL"" , 2 ) )"		636147	27					
ANR	636535	Condition	"! r_str_ncasecmp ( reg_arg , ""RA"" , 2 ) || ! r_str_ncasecmp ( reg_arg , ""RL"" , 2 )"	181:7:4430:4499	636147	0	True				
ANR	636536	OrExpression	"! r_str_ncasecmp ( reg_arg , ""RA"" , 2 ) || ! r_str_ncasecmp ( reg_arg , ""RL"" , 2 )"		636147	0		||			
ANR	636537	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""RA"" , 2 )"		636147	0					
ANR	636538	UnaryOperator	!		636147	0					
ANR	636539	CallExpression	"r_str_ncasecmp ( reg_arg , ""RA"" , 2 )"		636147	1					
ANR	636540	Callee	r_str_ncasecmp		636147	0					
ANR	636541	Identifier	r_str_ncasecmp		636147	0					
ANR	636542	ArgumentList	reg_arg		636147	1					
ANR	636543	Argument	reg_arg		636147	0					
ANR	636544	Identifier	reg_arg		636147	0					
ANR	636545	Argument	"""RA"""		636147	1					
ANR	636546	PrimaryExpression	"""RA"""		636147	0					
ANR	636547	Argument	2		636147	2					
ANR	636548	PrimaryExpression	2		636147	0					
ANR	636549	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""RL"" , 2 )"		636147	1					
ANR	636550	UnaryOperator	!		636147	0					
ANR	636551	CallExpression	"r_str_ncasecmp ( reg_arg , ""RL"" , 2 )"		636147	1					
ANR	636552	Callee	r_str_ncasecmp		636147	0					
ANR	636553	Identifier	r_str_ncasecmp		636147	0					
ANR	636554	ArgumentList	reg_arg		636147	1					
ANR	636555	Argument	reg_arg		636147	0					
ANR	636556	Identifier	reg_arg		636147	0					
ANR	636557	Argument	"""RL"""		636147	1					
ANR	636558	PrimaryExpression	"""RL"""		636147	0					
ANR	636559	Argument	2		636147	2					
ANR	636560	PrimaryExpression	2		636147	0					
ANR	636561	CompoundStatement		66:79:1712:1712	636147	1					
ANR	636562	ExpressionStatement	res = get_reg_name_1 ( ins_bits )	182:4:4508:4538	636147	0	True				
ANR	636563	AssignmentExpression	res = get_reg_name_1 ( ins_bits )		636147	0		=			
ANR	636564	Identifier	res		636147	0					
ANR	636565	CallExpression	get_reg_name_1 ( ins_bits )		636147	1					
ANR	636566	Callee	get_reg_name_1		636147	0					
ANR	636567	Identifier	get_reg_name_1		636147	0					
ANR	636568	ArgumentList	ins_bits		636147	1					
ANR	636569	Argument	ins_bits		636147	0					
ANR	636570	Identifier	ins_bits		636147	0					
ANR	636571	ElseStatement	else		636147	0					
ANR	636572	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""RLP"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""RxP"" , 3 ) )"		636147	0					
ANR	636573	Condition	"! r_str_ncasecmp ( reg_arg , ""RLP"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""RxP"" , 3 )"	183:14:4554:4625	636147	0	True				
ANR	636574	OrExpression	"! r_str_ncasecmp ( reg_arg , ""RLP"" , 3 ) || ! r_str_ncasecmp ( reg_arg , ""RxP"" , 3 )"		636147	0		||			
ANR	636575	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""RLP"" , 3 )"		636147	0					
ANR	636576	UnaryOperator	!		636147	0					
ANR	636577	CallExpression	"r_str_ncasecmp ( reg_arg , ""RLP"" , 3 )"		636147	1					
ANR	636578	Callee	r_str_ncasecmp		636147	0					
ANR	636579	Identifier	r_str_ncasecmp		636147	0					
ANR	636580	ArgumentList	reg_arg		636147	1					
ANR	636581	Argument	reg_arg		636147	0					
ANR	636582	Identifier	reg_arg		636147	0					
ANR	636583	Argument	"""RLP"""		636147	1					
ANR	636584	PrimaryExpression	"""RLP"""		636147	0					
ANR	636585	Argument	3		636147	2					
ANR	636586	PrimaryExpression	3		636147	0					
ANR	636587	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""RxP"" , 3 )"		636147	1					
ANR	636588	UnaryOperator	!		636147	0					
ANR	636589	CallExpression	"r_str_ncasecmp ( reg_arg , ""RxP"" , 3 )"		636147	1					
ANR	636590	Callee	r_str_ncasecmp		636147	0					
ANR	636591	Identifier	r_str_ncasecmp		636147	0					
ANR	636592	ArgumentList	reg_arg		636147	1					
ANR	636593	Argument	reg_arg		636147	0					
ANR	636594	Identifier	reg_arg		636147	0					
ANR	636595	Argument	"""RxP"""		636147	1					
ANR	636596	PrimaryExpression	"""RxP"""		636147	0					
ANR	636597	Argument	3		636147	2					
ANR	636598	PrimaryExpression	3		636147	0					
ANR	636599	CompoundStatement		68:88:1838:1838	636147	1					
ANR	636600	ExpressionStatement	res = get_reg_name_1 ( ins_bits + 1 )	184:4:4634:4668	636147	0	True				
ANR	636601	AssignmentExpression	res = get_reg_name_1 ( ins_bits + 1 )		636147	0		=			
ANR	636602	Identifier	res		636147	0					
ANR	636603	CallExpression	get_reg_name_1 ( ins_bits + 1 )		636147	1					
ANR	636604	Callee	get_reg_name_1		636147	0					
ANR	636605	Identifier	get_reg_name_1		636147	0					
ANR	636606	ArgumentList	ins_bits + 1		636147	1					
ANR	636607	Argument	ins_bits + 1		636147	0					
ANR	636608	AdditiveExpression	ins_bits + 1		636147	0		+			
ANR	636609	Identifier	ins_bits		636147	0					
ANR	636610	PrimaryExpression	1		636147	1					
ANR	636611	ElseStatement	else		636147	0					
ANR	636612	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""RX"" , 2 ) )"		636147	0					
ANR	636613	Condition	"! r_str_ncasecmp ( reg_arg , ""RX"" , 2 )"	185:14:4684:4716	636147	0	True				
ANR	636614	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""RX"" , 2 )"		636147	0					
ANR	636615	UnaryOperator	!		636147	0					
ANR	636616	CallExpression	"r_str_ncasecmp ( reg_arg , ""RX"" , 2 )"		636147	1					
ANR	636617	Callee	r_str_ncasecmp		636147	0					
ANR	636618	Identifier	r_str_ncasecmp		636147	0					
ANR	636619	ArgumentList	reg_arg		636147	1					
ANR	636620	Argument	reg_arg		636147	0					
ANR	636621	Identifier	reg_arg		636147	0					
ANR	636622	Argument	"""RX"""		636147	1					
ANR	636623	PrimaryExpression	"""RX"""		636147	0					
ANR	636624	Argument	2		636147	2					
ANR	636625	PrimaryExpression	2		636147	0					
ANR	636626	CompoundStatement		70:49:1929:1929	636147	1					
ANR	636627	ExpressionStatement	res = get_reg_name_1 ( ins_bits )	186:4:4725:4755	636147	0	True				
ANR	636628	AssignmentExpression	res = get_reg_name_1 ( ins_bits )		636147	0		=			
ANR	636629	Identifier	res		636147	0					
ANR	636630	CallExpression	get_reg_name_1 ( ins_bits )		636147	1					
ANR	636631	Callee	get_reg_name_1		636147	0					
ANR	636632	Identifier	get_reg_name_1		636147	0					
ANR	636633	ArgumentList	ins_bits		636147	1					
ANR	636634	Argument	ins_bits		636147	0					
ANR	636635	Identifier	ins_bits		636147	0					
ANR	636636	ElseStatement	else		636147	0					
ANR	636637	CompoundStatement		72:10:1977:1977	636147	0					
ANR	636638	ExpressionStatement	res = get_reg_name_2 ( ins_bits )	188:4:4773:4803	636147	0	True				
ANR	636639	AssignmentExpression	res = get_reg_name_2 ( ins_bits )		636147	0		=			
ANR	636640	Identifier	res		636147	0					
ANR	636641	CallExpression	get_reg_name_2 ( ins_bits )		636147	1					
ANR	636642	Callee	get_reg_name_2		636147	0					
ANR	636643	Identifier	get_reg_name_2		636147	0					
ANR	636644	ArgumentList	ins_bits		636147	1					
ANR	636645	Argument	ins_bits		636147	0					
ANR	636646	Identifier	ins_bits		636147	0					
ANR	636647	BreakStatement	break ;	190:3:4813:4818	636147	28	True				
ANR	636648	Label	case 84 :	191:2:4822:4829	636147	29	True				
ANR	636649	ExpressionStatement	res = get_reg_name_1 ( ins_bits + 48 )	192:3:4834:4869	636147	30	True				
ANR	636650	AssignmentExpression	res = get_reg_name_1 ( ins_bits + 48 )		636147	0		=			
ANR	636651	Identifier	res		636147	0					
ANR	636652	CallExpression	get_reg_name_1 ( ins_bits + 48 )		636147	1					
ANR	636653	Callee	get_reg_name_1		636147	0					
ANR	636654	Identifier	get_reg_name_1		636147	0					
ANR	636655	ArgumentList	ins_bits + 48		636147	1					
ANR	636656	Argument	ins_bits + 48		636147	0					
ANR	636657	AdditiveExpression	ins_bits + 48		636147	0		+			
ANR	636658	Identifier	ins_bits		636147	0					
ANR	636659	PrimaryExpression	48		636147	1					
ANR	636660	BreakStatement	break ;	193:3:4874:4879	636147	31	True				
ANR	636661	Label	case 87 :	194:2:4883:4890	636147	32	True				
ANR	636662	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""WD"" , 2 ) )"		636147	33					
ANR	636663	Condition	"! r_str_ncasecmp ( reg_arg , ""WD"" , 2 )"	195:7:4899:4931	636147	0	True				
ANR	636664	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""WD"" , 2 )"		636147	0					
ANR	636665	UnaryOperator	!		636147	0					
ANR	636666	CallExpression	"r_str_ncasecmp ( reg_arg , ""WD"" , 2 )"		636147	1					
ANR	636667	Callee	r_str_ncasecmp		636147	0					
ANR	636668	Identifier	r_str_ncasecmp		636147	0					
ANR	636669	ArgumentList	reg_arg		636147	1					
ANR	636670	Argument	reg_arg		636147	0					
ANR	636671	Identifier	reg_arg		636147	0					
ANR	636672	Argument	"""WD"""		636147	1					
ANR	636673	PrimaryExpression	"""WD"""		636147	0					
ANR	636674	Argument	2		636147	2					
ANR	636675	PrimaryExpression	2		636147	0					
ANR	636676	CompoundStatement		80:42:2144:2144	636147	1					
ANR	636677	ExpressionStatement	res = get_reg_name_2 ( ins_bits )	196:4:4940:4970	636147	0	True				
ANR	636678	AssignmentExpression	res = get_reg_name_2 ( ins_bits )		636147	0		=			
ANR	636679	Identifier	res		636147	0					
ANR	636680	CallExpression	get_reg_name_2 ( ins_bits )		636147	1					
ANR	636681	Callee	get_reg_name_2		636147	0					
ANR	636682	Identifier	get_reg_name_2		636147	0					
ANR	636683	ArgumentList	ins_bits		636147	1					
ANR	636684	Argument	ins_bits		636147	0					
ANR	636685	Identifier	ins_bits		636147	0					
ANR	636686	ElseStatement	else		636147	0					
ANR	636687	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""WA"" , 2 ) )"		636147	0					
ANR	636688	Condition	"! r_str_ncasecmp ( reg_arg , ""WA"" , 2 )"	197:14:4986:5018	636147	0	True				
ANR	636689	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""WA"" , 2 )"		636147	0					
ANR	636690	UnaryOperator	!		636147	0					
ANR	636691	CallExpression	"r_str_ncasecmp ( reg_arg , ""WA"" , 2 )"		636147	1					
ANR	636692	Callee	r_str_ncasecmp		636147	0					
ANR	636693	Identifier	r_str_ncasecmp		636147	0					
ANR	636694	ArgumentList	reg_arg		636147	1					
ANR	636695	Argument	reg_arg		636147	0					
ANR	636696	Identifier	reg_arg		636147	0					
ANR	636697	Argument	"""WA"""		636147	1					
ANR	636698	PrimaryExpression	"""WA"""		636147	0					
ANR	636699	Argument	2		636147	2					
ANR	636700	PrimaryExpression	2		636147	0					
ANR	636701	CompoundStatement		82:49:2231:2231	636147	1					
ANR	636702	ExpressionStatement	res = get_reg_name_1 ( ins_bits )	198:4:5027:5057	636147	0	True				
ANR	636703	AssignmentExpression	res = get_reg_name_1 ( ins_bits )		636147	0		=			
ANR	636704	Identifier	res		636147	0					
ANR	636705	CallExpression	get_reg_name_1 ( ins_bits )		636147	1					
ANR	636706	Callee	get_reg_name_1		636147	0					
ANR	636707	Identifier	get_reg_name_1		636147	0					
ANR	636708	ArgumentList	ins_bits		636147	1					
ANR	636709	Argument	ins_bits		636147	0					
ANR	636710	Identifier	ins_bits		636147	0					
ANR	636711	ElseStatement	else		636147	0					
ANR	636712	CompoundStatement		84:10:2279:2279	636147	0					
ANR	636713	ExpressionStatement	res = NULL	200:4:5075:5085	636147	0	True				
ANR	636714	AssignmentExpression	res = NULL		636147	0		=			
ANR	636715	Identifier	res		636147	0					
ANR	636716	Identifier	NULL		636147	1					
ANR	636717	BreakStatement	break ;	202:3:5095:5100	636147	34	True				
ANR	636718	Label	case 88 :	203:2:5104:5111	636147	35	True				
ANR	636719	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""XR"" , 2 ) )"		636147	36					
ANR	636720	Condition	"! r_str_ncasecmp ( reg_arg , ""XR"" , 2 )"	204:7:5120:5152	636147	0	True				
ANR	636721	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""XR"" , 2 )"		636147	0					
ANR	636722	UnaryOperator	!		636147	0					
ANR	636723	CallExpression	"r_str_ncasecmp ( reg_arg , ""XR"" , 2 )"		636147	1					
ANR	636724	Callee	r_str_ncasecmp		636147	0					
ANR	636725	Identifier	r_str_ncasecmp		636147	0					
ANR	636726	ArgumentList	reg_arg		636147	1					
ANR	636727	Argument	reg_arg		636147	0					
ANR	636728	Identifier	reg_arg		636147	0					
ANR	636729	Argument	"""XR"""		636147	1					
ANR	636730	PrimaryExpression	"""XR"""		636147	0					
ANR	636731	Argument	2		636147	2					
ANR	636732	PrimaryExpression	2		636147	0					
ANR	636733	CompoundStatement		89:42:2365:2365	636147	1					
ANR	636734	ExpressionStatement	res = get_reg_name_3 ( ins_bits )	205:4:5161:5191	636147	0	True				
ANR	636735	AssignmentExpression	res = get_reg_name_3 ( ins_bits )		636147	0		=			
ANR	636736	Identifier	res		636147	0					
ANR	636737	CallExpression	get_reg_name_3 ( ins_bits )		636147	1					
ANR	636738	Callee	get_reg_name_3		636147	0					
ANR	636739	Identifier	get_reg_name_3		636147	0					
ANR	636740	ArgumentList	ins_bits		636147	1					
ANR	636741	Argument	ins_bits		636147	0					
ANR	636742	Identifier	ins_bits		636147	0					
ANR	636743	ElseStatement	else		636147	0					
ANR	636744	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""XD"" , 2 ) )"		636147	0					
ANR	636745	Condition	"! r_str_ncasecmp ( reg_arg , ""XD"" , 2 )"	206:14:5207:5239	636147	0	True				
ANR	636746	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""XD"" , 2 )"		636147	0					
ANR	636747	UnaryOperator	!		636147	0					
ANR	636748	CallExpression	"r_str_ncasecmp ( reg_arg , ""XD"" , 2 )"		636147	1					
ANR	636749	Callee	r_str_ncasecmp		636147	0					
ANR	636750	Identifier	r_str_ncasecmp		636147	0					
ANR	636751	ArgumentList	reg_arg		636147	1					
ANR	636752	Argument	reg_arg		636147	0					
ANR	636753	Identifier	reg_arg		636147	0					
ANR	636754	Argument	"""XD"""		636147	1					
ANR	636755	PrimaryExpression	"""XD"""		636147	0					
ANR	636756	Argument	2		636147	2					
ANR	636757	PrimaryExpression	2		636147	0					
ANR	636758	CompoundStatement		91:49:2452:2452	636147	1					
ANR	636759	ExpressionStatement	res = get_reg_name_2 ( ins_bits + 32 )	207:4:5248:5283	636147	0	True				
ANR	636760	AssignmentExpression	res = get_reg_name_2 ( ins_bits + 32 )		636147	0		=			
ANR	636761	Identifier	res		636147	0					
ANR	636762	CallExpression	get_reg_name_2 ( ins_bits + 32 )		636147	1					
ANR	636763	Callee	get_reg_name_2		636147	0					
ANR	636764	Identifier	get_reg_name_2		636147	0					
ANR	636765	ArgumentList	ins_bits + 32		636147	1					
ANR	636766	Argument	ins_bits + 32		636147	0					
ANR	636767	AdditiveExpression	ins_bits + 32		636147	0		+			
ANR	636768	Identifier	ins_bits		636147	0					
ANR	636769	PrimaryExpression	32		636147	1					
ANR	636770	ElseStatement	else		636147	0					
ANR	636771	CompoundStatement		93:10:2505:2505	636147	0					
ANR	636772	ExpressionStatement	res = NULL	209:4:5301:5311	636147	0	True				
ANR	636773	AssignmentExpression	res = NULL		636147	0		=			
ANR	636774	Identifier	res		636147	0					
ANR	636775	Identifier	NULL		636147	1					
ANR	636776	BreakStatement	break ;	211:3:5321:5326	636147	37	True				
ANR	636777	Label	default :	212:2:5330:5337	636147	38	True				
ANR	636778	Identifier	default		636147	0					
ANR	636779	ExpressionStatement	res = NULL	213:3:5342:5352	636147	39	True				
ANR	636780	AssignmentExpression	res = NULL		636147	0		=			
ANR	636781	Identifier	res		636147	0					
ANR	636782	Identifier	NULL		636147	1					
ANR	636783	BreakStatement	break ;	214:3:5357:5362	636147	40	True				
ANR	636784	ReturnStatement	return res ;	217:1:5369:5379	636147	5	True				
ANR	636785	Identifier	res		636147	0					
ANR	636786	ReturnType	static char *		636147	1					
ANR	636787	Identifier	decode_regis		636147	2					
ANR	636788	ParameterList	"char * reg_arg , st32 hash_code , ut32 ins_bits , ut32 * ret_ins_bits , int * err_code"		636147	3					
ANR	636789	Parameter	char * reg_arg	115:26:2707:2719	636147	0	True				
ANR	636790	ParameterType	char *		636147	0					
ANR	636791	Identifier	reg_arg		636147	1					
ANR	636792	Parameter	st32 hash_code	115:41:2722:2735	636147	1	True				
ANR	636793	ParameterType	st32		636147	0					
ANR	636794	Identifier	hash_code		636147	1					
ANR	636795	Parameter	ut32 ins_bits	115:57:2738:2750	636147	2	True				
ANR	636796	ParameterType	ut32		636147	0					
ANR	636797	Identifier	ins_bits		636147	1					
ANR	636798	Parameter	ut32 * ret_ins_bits	116:1:2754:2771	636147	3	True				
ANR	636799	ParameterType	ut32 *		636147	0					
ANR	636800	Identifier	ret_ins_bits		636147	1					
ANR	636801	Parameter	int * err_code	116:21:2774:2786	636147	4	True				
ANR	636802	ParameterType	int *		636147	0					
ANR	636803	Identifier	err_code		636147	1					
ANR	636804	CFGEntryNode	ENTRY		636147		True				
ANR	636805	CFGExitNode	EXIT		636147		True				
ANR	636806	Symbol	res		636147						
ANR	636807	Symbol	* reg_arg		636147						
ANR	636808	Symbol	NULL		636147						
ANR	636809	Symbol	ret_ins_bits		636147						
ANR	636810	Symbol	err_code		636147						
ANR	636811	Symbol	reg_type		636147						
ANR	636812	Symbol	stderr		636147						
ANR	636813	Symbol	hash_code		636147						
ANR	636814	Symbol	* err_code		636147						
ANR	636815	Symbol	get_reg_name_3		636147						
ANR	636816	Symbol	get_reg_name_2		636147						
ANR	636817	Symbol	get_reg_name_1		636147						
ANR	636818	Symbol	ins_bits		636147						
ANR	636819	Symbol	check_arg		636147						
ANR	636820	Symbol	strdup		636147						
ANR	636821	Symbol	reg_arg		636147						
ANR	636822	Symbol	r_str_ncasecmp		636147						
ANR	636823	Symbol	* ret_ins_bits		636147						
ANR	636824	Function	decode_ins	222:0:5386:7700							
ANR	636825	FunctionDef	"decode_ins (st32 hash_code , ut32 ins_pos , ut32 ins_off , ut32 * ins_len_dec , ut32 * reg_len_dec , ut32 * ret_ins_bits , ut32 magic_value , ut8 two_ins , int * err_code)"		636824	0					
ANR	636826	CompoundStatement		224:0:5559:7700	636824	0					
ANR	636827	IdentifierDeclStatement	ut32 ins_len ;	225:1:5562:5574	636824	0	True				
ANR	636828	IdentifierDecl	ins_len		636824	0					
ANR	636829	IdentifierDeclType	ut32		636824	0					
ANR	636830	Identifier	ins_len		636824	1					
ANR	636831	IdentifierDeclStatement	"char * ins , * pos ;"	226:1:5577:5592	636824	1	True				
ANR	636832	IdentifierDecl	* ins		636824	0					
ANR	636833	IdentifierDeclType	char *		636824	0					
ANR	636834	Identifier	ins		636824	1					
ANR	636835	IdentifierDecl	* pos		636824	1					
ANR	636836	IdentifierDeclType	char *		636824	0					
ANR	636837	Identifier	pos		636824	1					
ANR	636838	IdentifierDeclStatement	char token_aux [ 80 ] ;	227:1:5595:5613	636824	2	True				
ANR	636839	IdentifierDecl	token_aux [ 80 ]		636824	0					
ANR	636840	IdentifierDeclType	char [ 80 ]		636824	0					
ANR	636841	Identifier	token_aux		636824	1					
ANR	636842	PrimaryExpression	80		636824	2					
ANR	636843	IdentifierDeclStatement	"ut32 i , len ;"	228:1:5616:5627	636824	3	True				
ANR	636844	IdentifierDecl	i		636824	0					
ANR	636845	IdentifierDeclType	ut32		636824	0					
ANR	636846	Identifier	i		636824	1					
ANR	636847	IdentifierDecl	len		636824	1					
ANR	636848	IdentifierDeclType	ut32		636824	0					
ANR	636849	Identifier	len		636824	1					
ANR	636850	IdentifierDeclStatement	char * reg = NULL ;	229:1:5630:5646	636824	4	True				
ANR	636851	IdentifierDecl	* reg = NULL		636824	0					
ANR	636852	IdentifierDeclType	char *		636824	0					
ANR	636853	Identifier	reg		636824	1					
ANR	636854	AssignmentExpression	* reg = NULL		636824	2		=			
ANR	636855	Identifier	NULL		636824	0					
ANR	636856	Identifier	NULL		636824	1					
ANR	636857	IdentifierDeclStatement	char * res_decode = NULL ;	230:1:5649:5672	636824	5	True				
ANR	636858	IdentifierDecl	* res_decode = NULL		636824	0					
ANR	636859	IdentifierDeclType	char *		636824	0					
ANR	636860	Identifier	res_decode		636824	1					
ANR	636861	AssignmentExpression	* res_decode = NULL		636824	2		=			
ANR	636862	Identifier	NULL		636824	0					
ANR	636863	Identifier	NULL		636824	1					
ANR	636864	IdentifierDeclStatement	char * aux = NULL ;	231:1:5675:5691	636824	6	True				
ANR	636865	IdentifierDecl	* aux = NULL		636824	0					
ANR	636866	IdentifierDeclType	char *		636824	0					
ANR	636867	Identifier	aux		636824	1					
ANR	636868	AssignmentExpression	* aux = NULL		636824	2		=			
ANR	636869	Identifier	NULL		636824	0					
ANR	636870	Identifier	NULL		636824	1					
ANR	636871	ExpressionStatement	"ins_len = get_ins_len ( get_ins_part ( ins_pos + ins_off , 1 ) )"	234:1:5722:5779	636824	7	True				
ANR	636872	AssignmentExpression	"ins_len = get_ins_len ( get_ins_part ( ins_pos + ins_off , 1 ) )"		636824	0		=			
ANR	636873	Identifier	ins_len		636824	0					
ANR	636874	CallExpression	"get_ins_len ( get_ins_part ( ins_pos + ins_off , 1 ) )"		636824	1					
ANR	636875	Callee	get_ins_len		636824	0					
ANR	636876	Identifier	get_ins_len		636824	0					
ANR	636877	ArgumentList	"get_ins_part ( ins_pos + ins_off , 1 )"		636824	1					
ANR	636878	Argument	"get_ins_part ( ins_pos + ins_off , 1 )"		636824	0					
ANR	636879	CallExpression	"get_ins_part ( ins_pos + ins_off , 1 )"		636824	0					
ANR	636880	Callee	get_ins_part		636824	0					
ANR	636881	Identifier	get_ins_part		636824	0					
ANR	636882	ArgumentList	ins_pos + ins_off		636824	1					
ANR	636883	Argument	ins_pos + ins_off		636824	0					
ANR	636884	AdditiveExpression	ins_pos + ins_off		636824	0		+			
ANR	636885	Identifier	ins_pos		636824	0					
ANR	636886	Identifier	ins_off		636824	1					
ANR	636887	Argument	1		636824	1					
ANR	636888	PrimaryExpression	1		636824	0					
ANR	636889	ExpressionStatement	ins = ins_str [ 1 + 2 + hash_code * 4 ]	236:1:5809:5845	636824	8	True				
ANR	636890	AssignmentExpression	ins = ins_str [ 1 + 2 + hash_code * 4 ]		636824	0		=			
ANR	636891	Identifier	ins		636824	0					
ANR	636892	ArrayIndexing	ins_str [ 1 + 2 + hash_code * 4 ]		636824	1					
ANR	636893	Identifier	ins_str		636824	0					
ANR	636894	AdditiveExpression	1 + 2 + hash_code * 4		636824	1		+			
ANR	636895	PrimaryExpression	1		636824	0					
ANR	636896	AdditiveExpression	2 + hash_code * 4		636824	1		+			
ANR	636897	PrimaryExpression	2		636824	0					
ANR	636898	MultiplicativeExpression	hash_code * 4		636824	1		*			
ANR	636899	Identifier	hash_code		636824	0					
ANR	636900	PrimaryExpression	4		636824	1					
ANR	636901	IfStatement	if ( ! ins )		636824	9					
ANR	636902	Condition	! ins	237:5:5852:5855	636824	0	True				
ANR	636903	UnaryOperationExpression	! ins		636824	0					
ANR	636904	UnaryOperator	!		636824	0					
ANR	636905	Identifier	ins		636824	1					
ANR	636906	CompoundStatement		14:46:333:333	636824	1					
ANR	636907	ExpressionStatement	"fprintf ( stderr , ""Invalid instruction %s /hash %x\\n"" , ins , hash_code )"	238:2:5897:5965	636824	0	True				
ANR	636908	CallExpression	"fprintf ( stderr , ""Invalid instruction %s /hash %x\\n"" , ins , hash_code )"		636824	0					
ANR	636909	Callee	fprintf		636824	0					
ANR	636910	Identifier	fprintf		636824	0					
ANR	636911	ArgumentList	stderr		636824	1					
ANR	636912	Argument	stderr		636824	0					
ANR	636913	Identifier	stderr		636824	0					
ANR	636914	Argument	"""Invalid instruction %s /hash %x\\n"""		636824	1					
ANR	636915	PrimaryExpression	"""Invalid instruction %s /hash %x\\n"""		636824	0					
ANR	636916	Argument	ins		636824	2					
ANR	636917	Identifier	ins		636824	0					
ANR	636918	Argument	hash_code		636824	3					
ANR	636919	Identifier	hash_code		636824	0					
ANR	636920	ExpressionStatement	* err_code = - 1	239:2:5969:5983	636824	1	True				
ANR	636921	AssignmentExpression	* err_code = - 1		636824	0		=			
ANR	636922	UnaryOperationExpression	* err_code		636824	0					
ANR	636923	UnaryOperator	*		636824	0					
ANR	636924	Identifier	err_code		636824	1					
ANR	636925	UnaryOperationExpression	- 1		636824	1					
ANR	636926	UnaryOperator	-		636824	0					
ANR	636927	PrimaryExpression	1		636824	1					
ANR	636928	ReturnStatement	return NULL ;	240:2:5987:5998	636824	2	True				
ANR	636929	Identifier	NULL		636824	0					
ANR	636930	IfStatement	if ( hash_code == 0x19C )		636824	10					
ANR	636931	Condition	hash_code == 0x19C	242:5:6008:6025	636824	0	True				
ANR	636932	EqualityExpression	hash_code == 0x19C		636824	0		==			
ANR	636933	Identifier	hash_code		636824	0					
ANR	636934	PrimaryExpression	0x19C		636824	1					
ANR	636935	CompoundStatement		19:25:468:468	636824	1					
ANR	636936	ExpressionStatement	"res_decode = get_token_decoded ( hash_code , ""MMMMxxxxmm"" , 10 , NULL , ret_ins_bits , reg_len_dec , magic_value , ins_pos + ins_off , ins_len , two_ins , err_code )"	243:2:6032:6187	636824	0	True				
ANR	636937	AssignmentExpression	"res_decode = get_token_decoded ( hash_code , ""MMMMxxxxmm"" , 10 , NULL , ret_ins_bits , reg_len_dec , magic_value , ins_pos + ins_off , ins_len , two_ins , err_code )"		636824	0		=			
ANR	636938	Identifier	res_decode		636824	0					
ANR	636939	CallExpression	"get_token_decoded ( hash_code , ""MMMMxxxxmm"" , 10 , NULL , ret_ins_bits , reg_len_dec , magic_value , ins_pos + ins_off , ins_len , two_ins , err_code )"		636824	1					
ANR	636940	Callee	get_token_decoded		636824	0					
ANR	636941	Identifier	get_token_decoded		636824	0					
ANR	636942	ArgumentList	hash_code		636824	1					
ANR	636943	Argument	hash_code		636824	0					
ANR	636944	Identifier	hash_code		636824	0					
ANR	636945	Argument	"""MMMMxxxxmm"""		636824	1					
ANR	636946	PrimaryExpression	"""MMMMxxxxmm"""		636824	0					
ANR	636947	Argument	10		636824	2					
ANR	636948	PrimaryExpression	10		636824	0					
ANR	636949	Argument	NULL		636824	3					
ANR	636950	Identifier	NULL		636824	0					
ANR	636951	Argument	ret_ins_bits		636824	4					
ANR	636952	Identifier	ret_ins_bits		636824	0					
ANR	636953	Argument	reg_len_dec		636824	5					
ANR	636954	Identifier	reg_len_dec		636824	0					
ANR	636955	Argument	magic_value		636824	6					
ANR	636956	Identifier	magic_value		636824	0					
ANR	636957	Argument	ins_pos + ins_off		636824	7					
ANR	636958	AdditiveExpression	ins_pos + ins_off		636824	0		+			
ANR	636959	Identifier	ins_pos		636824	0					
ANR	636960	Identifier	ins_off		636824	1					
ANR	636961	Argument	ins_len		636824	8					
ANR	636962	Identifier	ins_len		636824	0					
ANR	636963	Argument	two_ins		636824	9					
ANR	636964	Identifier	two_ins		636824	0					
ANR	636965	Argument	err_code		636824	10					
ANR	636966	Identifier	err_code		636824	0					
ANR	636967	IfStatement	if ( * err_code < 0 )		636824	1					
ANR	636968	Condition	* err_code < 0	245:6:6195:6207	636824	0	True				
ANR	636969	RelationalExpression	* err_code < 0		636824	0		<			
ANR	636970	UnaryOperationExpression	* err_code		636824	0					
ANR	636971	UnaryOperator	*		636824	0					
ANR	636972	Identifier	err_code		636824	1					
ANR	636973	PrimaryExpression	0		636824	1					
ANR	636974	CompoundStatement		22:21:650:650	636824	1					
ANR	636975	ReturnStatement	return NULL ;	246:3:6215:6226	636824	0	True				
ANR	636976	Identifier	NULL		636824	0					
ANR	636977	IfStatement	if ( C55PLUS_DEBUG )		636824	11					
ANR	636978	Condition	C55PLUS_DEBUG	250:5:6241:6253	636824	0	True				
ANR	636979	Identifier	C55PLUS_DEBUG		636824	0					
ANR	636980	CompoundStatement		27:20:696:696	636824	1					
ANR	636981	ExpressionStatement	"printf ( ""PSEUDO INS %s\\n"" , ins )"	251:2:6260:6291	636824	0	True				
ANR	636982	CallExpression	"printf ( ""PSEUDO INS %s\\n"" , ins )"		636824	0					
ANR	636983	Callee	printf		636824	0					
ANR	636984	Identifier	printf		636824	0					
ANR	636985	ArgumentList	"""PSEUDO INS %s\\n"""		636824	1					
ANR	636986	Argument	"""PSEUDO INS %s\\n"""		636824	0					
ANR	636987	PrimaryExpression	"""PSEUDO INS %s\\n"""		636824	0					
ANR	636988	Argument	ins		636824	1					
ANR	636989	Identifier	ins		636824	0					
ANR	636990	ExpressionStatement	pos = ins	254:1:6298:6307	636824	12	True				
ANR	636991	AssignmentExpression	pos = ins		636824	0		=			
ANR	636992	Identifier	pos		636824	0					
ANR	636993	Identifier	ins		636824	1					
ANR	636994	ExpressionStatement	* ins_len_dec = ins_len	256:1:6333:6355	636824	13	True				
ANR	636995	AssignmentExpression	* ins_len_dec = ins_len		636824	0		=			
ANR	636996	UnaryOperationExpression	* ins_len_dec		636824	0					
ANR	636997	UnaryOperator	*		636824	0					
ANR	636998	Identifier	ins_len_dec		636824	1					
ANR	636999	Identifier	ins_len		636824	1					
ANR	637000	WhileStatement	while ( * pos )		636824	14					
ANR	637001	Condition	* pos	258:8:6366:6369	636824	0	True				
ANR	637002	UnaryOperationExpression	* pos		636824	0					
ANR	637003	UnaryOperator	*		636824	0					
ANR	637004	Identifier	pos		636824	1					
ANR	637005	CompoundStatement		35:14:812:812	636824	1					
ANR	637006	IfStatement	if ( * pos == '`' )		636824	0					
ANR	637007	Condition	* pos == '`'	259:6:6380:6390	636824	0	True				
ANR	637008	EqualityExpression	* pos == '`'		636824	0		==			
ANR	637009	UnaryOperationExpression	* pos		636824	0					
ANR	637010	UnaryOperator	*		636824	0					
ANR	637011	Identifier	pos		636824	1					
ANR	637012	PrimaryExpression	'`'		636824	1					
ANR	637013	CompoundStatement		36:19:833:833	636824	1					
ANR	637014	ExpressionStatement	pos ++	260:3:6398:6403	636824	0	True				
ANR	637015	PostIncDecOperationExpression	pos ++		636824	0					
ANR	637016	Identifier	pos		636824	0					
ANR	637017	IncDec	++		636824	1					
ANR	637018	ExpressionStatement	"aux = strchr ( pos , '`' )"	261:3:6408:6430	636824	1	True				
ANR	637019	AssignmentExpression	"aux = strchr ( pos , '`' )"		636824	0		=			
ANR	637020	Identifier	aux		636824	0					
ANR	637021	CallExpression	"strchr ( pos , '`' )"		636824	1					
ANR	637022	Callee	strchr		636824	0					
ANR	637023	Identifier	strchr		636824	0					
ANR	637024	ArgumentList	pos		636824	1					
ANR	637025	Argument	pos		636824	0					
ANR	637026	Identifier	pos		636824	0					
ANR	637027	Argument	'`'		636824	1					
ANR	637028	PrimaryExpression	'`'		636824	0					
ANR	637029	IfStatement	if ( ! aux || pos == aux )		636824	2					
ANR	637030	Condition	! aux || pos == aux	262:7:6439:6456	636824	0	True				
ANR	637031	OrExpression	! aux || pos == aux		636824	0		||			
ANR	637032	UnaryOperationExpression	! aux		636824	0					
ANR	637033	UnaryOperator	!		636824	0					
ANR	637034	Identifier	aux		636824	1					
ANR	637035	EqualityExpression	pos == aux		636824	1		==			
ANR	637036	Identifier	pos		636824	0					
ANR	637037	Identifier	aux		636824	1					
ANR	637038	CompoundStatement		39:27:899:899	636824	1					
ANR	637039	ExpressionStatement	"fprintf ( stderr , ""Invalid instruction %s\\n"" , ins )"	263:4:6465:6513	636824	0	True				
ANR	637040	CallExpression	"fprintf ( stderr , ""Invalid instruction %s\\n"" , ins )"		636824	0					
ANR	637041	Callee	fprintf		636824	0					
ANR	637042	Identifier	fprintf		636824	0					
ANR	637043	ArgumentList	stderr		636824	1					
ANR	637044	Argument	stderr		636824	0					
ANR	637045	Identifier	stderr		636824	0					
ANR	637046	Argument	"""Invalid instruction %s\\n"""		636824	1					
ANR	637047	PrimaryExpression	"""Invalid instruction %s\\n"""		636824	0					
ANR	637048	Argument	ins		636824	2					
ANR	637049	Identifier	ins		636824	0					
ANR	637050	ExpressionStatement	free ( res_decode )	264:4:6519:6536	636824	1	True				
ANR	637051	CallExpression	free ( res_decode )		636824	0					
ANR	637052	Callee	free		636824	0					
ANR	637053	Identifier	free		636824	0					
ANR	637054	ArgumentList	res_decode		636824	1					
ANR	637055	Argument	res_decode		636824	0					
ANR	637056	Identifier	res_decode		636824	0					
ANR	637057	ExpressionStatement	* err_code = - 1	265:4:6542:6556	636824	2	True				
ANR	637058	AssignmentExpression	* err_code = - 1		636824	0		=			
ANR	637059	UnaryOperationExpression	* err_code		636824	0					
ANR	637060	UnaryOperator	*		636824	0					
ANR	637061	Identifier	err_code		636824	1					
ANR	637062	UnaryOperationExpression	- 1		636824	1					
ANR	637063	UnaryOperator	-		636824	0					
ANR	637064	PrimaryExpression	1		636824	1					
ANR	637065	ReturnStatement	return NULL ;	266:4:6562:6573	636824	3	True				
ANR	637066	Identifier	NULL		636824	0					
ANR	637067	ExpressionStatement	len = ( ut32 ) ( size_t ) ( aux - pos )	268:3:6583:6612	636824	3	True				
ANR	637068	AssignmentExpression	len = ( ut32 ) ( size_t ) ( aux - pos )		636824	0		=			
ANR	637069	Identifier	len		636824	0					
ANR	637070	CastExpression	( ut32 ) ( size_t ) ( aux - pos )		636824	1					
ANR	637071	CastTarget	ut32		636824	0					
ANR	637072	CastExpression	( size_t ) ( aux - pos )		636824	1					
ANR	637073	CastTarget	size_t		636824	0					
ANR	637074	AdditiveExpression	aux - pos		636824	1		-			
ANR	637075	Identifier	aux		636824	0					
ANR	637076	Identifier	pos		636824	1					
ANR	637077	IfStatement	if ( len >= 80 )		636824	4					
ANR	637078	Condition	len >= 80	269:7:6621:6629	636824	0	True				
ANR	637079	RelationalExpression	len >= 80		636824	0		>=			
ANR	637080	Identifier	len		636824	0					
ANR	637081	PrimaryExpression	80		636824	1					
ANR	637082	CompoundStatement		46:18:1072:1072	636824	1					
ANR	637083	ExpressionStatement	"fprintf ( stderr , ""Invalid length token %d\\n"" , len )"	270:4:6638:6687	636824	0	True				
ANR	637084	CallExpression	"fprintf ( stderr , ""Invalid length token %d\\n"" , len )"		636824	0					
ANR	637085	Callee	fprintf		636824	0					
ANR	637086	Identifier	fprintf		636824	0					
ANR	637087	ArgumentList	stderr		636824	1					
ANR	637088	Argument	stderr		636824	0					
ANR	637089	Identifier	stderr		636824	0					
ANR	637090	Argument	"""Invalid length token %d\\n"""		636824	1					
ANR	637091	PrimaryExpression	"""Invalid length token %d\\n"""		636824	0					
ANR	637092	Argument	len		636824	2					
ANR	637093	Identifier	len		636824	0					
ANR	637094	ExpressionStatement	free ( res_decode )	271:4:6693:6710	636824	1	True				
ANR	637095	CallExpression	free ( res_decode )		636824	0					
ANR	637096	Callee	free		636824	0					
ANR	637097	Identifier	free		636824	0					
ANR	637098	ArgumentList	res_decode		636824	1					
ANR	637099	Argument	res_decode		636824	0					
ANR	637100	Identifier	res_decode		636824	0					
ANR	637101	ExpressionStatement	* err_code = - 1	272:4:6716:6730	636824	2	True				
ANR	637102	AssignmentExpression	* err_code = - 1		636824	0		=			
ANR	637103	UnaryOperationExpression	* err_code		636824	0					
ANR	637104	UnaryOperator	*		636824	0					
ANR	637105	Identifier	err_code		636824	1					
ANR	637106	UnaryOperationExpression	- 1		636824	1					
ANR	637107	UnaryOperator	-		636824	0					
ANR	637108	PrimaryExpression	1		636824	1					
ANR	637109	ReturnStatement	return NULL ;	273:4:6736:6747	636824	3	True				
ANR	637110	Identifier	NULL		636824	0					
ANR	637111	ExpressionStatement	"memcpy ( token_aux , pos , len )"	276:3:6758:6785	636824	5	True				
ANR	637112	CallExpression	"memcpy ( token_aux , pos , len )"		636824	0					
ANR	637113	Callee	memcpy		636824	0					
ANR	637114	Identifier	memcpy		636824	0					
ANR	637115	ArgumentList	token_aux		636824	1					
ANR	637116	Argument	token_aux		636824	0					
ANR	637117	Identifier	token_aux		636824	0					
ANR	637118	Argument	pos		636824	1					
ANR	637119	Identifier	pos		636824	0					
ANR	637120	Argument	len		636824	2					
ANR	637121	Identifier	len		636824	0					
ANR	637122	ExpressionStatement	token_aux [ len ] = '\\0'	277:3:6790:6811	636824	6	True				
ANR	637123	AssignmentExpression	token_aux [ len ] = '\\0'		636824	0		=			
ANR	637124	ArrayIndexing	token_aux [ len ]		636824	0					
ANR	637125	Identifier	token_aux		636824	0					
ANR	637126	Identifier	len		636824	1					
ANR	637127	PrimaryExpression	'\\0'		636824	1					
ANR	637128	ExpressionStatement	pos = aux	278:3:6816:6825	636824	7	True				
ANR	637129	AssignmentExpression	pos = aux		636824	0		=			
ANR	637130	Identifier	pos		636824	0					
ANR	637131	Identifier	aux		636824	1					
ANR	637132	IfStatement	if ( C55PLUS_DEBUG )		636824	8					
ANR	637133	Condition	C55PLUS_DEBUG	280:7:6835:6847	636824	0	True				
ANR	637134	Identifier	C55PLUS_DEBUG		636824	0					
ANR	637135	CompoundStatement		57:22:1290:1290	636824	1					
ANR	637136	ExpressionStatement	"printf ( ""TOKEN AUX: %s\\n"" , token_aux )"	281:4:6856:6893	636824	0	True				
ANR	637137	CallExpression	"printf ( ""TOKEN AUX: %s\\n"" , token_aux )"		636824	0					
ANR	637138	Callee	printf		636824	0					
ANR	637139	Identifier	printf		636824	0					
ANR	637140	ArgumentList	"""TOKEN AUX: %s\\n"""		636824	1					
ANR	637141	Argument	"""TOKEN AUX: %s\\n"""		636824	0					
ANR	637142	PrimaryExpression	"""TOKEN AUX: %s\\n"""		636824	0					
ANR	637143	Argument	token_aux		636824	1					
ANR	637144	Identifier	token_aux		636824	0					
ANR	637145	ExpressionStatement	reg = NULL	284:3:6904:6914	636824	9	True				
ANR	637146	AssignmentExpression	reg = NULL		636824	0		=			
ANR	637147	Identifier	reg		636824	0					
ANR	637148	Identifier	NULL		636824	1					
ANR	637149	ForStatement	for ( i = 0 ; i < len ; i ++ )		636824	10					
ANR	637150	ForInit	i = 0 ;	285:8:6924:6929	636824	0	True				
ANR	637151	AssignmentExpression	i = 0		636824	0		=			
ANR	637152	Identifier	i		636824	0					
ANR	637153	PrimaryExpression	0		636824	1					
ANR	637154	Condition	i < len	285:15:6931:6937	636824	1	True				
ANR	637155	RelationalExpression	i < len		636824	0		<			
ANR	637156	Identifier	i		636824	0					
ANR	637157	Identifier	len		636824	1					
ANR	637158	PostIncDecOperationExpression	i ++	285:24:6940:6942	636824	2	True				
ANR	637159	Identifier	i		636824	0					
ANR	637160	IncDec	++		636824	1					
ANR	637161	CompoundStatement		62:29:1385:1385	636824	3					
ANR	637162	IfStatement	"if ( token_aux [ i ] == ',' )"		636824	0					
ANR	637163	Condition	"token_aux [ i ] == ','"	286:8:6955:6973	636824	0	True				
ANR	637164	EqualityExpression	"token_aux [ i ] == ','"		636824	0		==			
ANR	637165	ArrayIndexing	token_aux [ i ]		636824	0					
ANR	637166	Identifier	token_aux		636824	0					
ANR	637167	Identifier	i		636824	1					
ANR	637168	PrimaryExpression	"','"		636824	1					
ANR	637169	CompoundStatement		63:29:1416:1416	636824	1					
ANR	637170	ExpressionStatement	len = ( unsigned int ) ( size_t ) ( & token_aux [ i ] - token_aux )	287:5:6983:7038	636824	0	True				
ANR	637171	AssignmentExpression	len = ( unsigned int ) ( size_t ) ( & token_aux [ i ] - token_aux )		636824	0		=			
ANR	637172	Identifier	len		636824	0					
ANR	637173	CastExpression	( unsigned int ) ( size_t ) ( & token_aux [ i ] - token_aux )		636824	1					
ANR	637174	CastTarget	unsigned int		636824	0					
ANR	637175	CastExpression	( size_t ) ( & token_aux [ i ] - token_aux )		636824	1					
ANR	637176	CastTarget	size_t		636824	0					
ANR	637177	AdditiveExpression	& token_aux [ i ] - token_aux		636824	1		-			
ANR	637178	UnaryOperationExpression	& token_aux [ i ]		636824	0					
ANR	637179	UnaryOperator	&		636824	0					
ANR	637180	ArrayIndexing	token_aux [ i ]		636824	1					
ANR	637181	Identifier	token_aux		636824	0					
ANR	637182	Identifier	i		636824	1					
ANR	637183	Identifier	token_aux		636824	1					
ANR	637184	ExpressionStatement	reg = & token_aux [ i + 1 ]	288:5:7045:7068	636824	1	True				
ANR	637185	AssignmentExpression	reg = & token_aux [ i + 1 ]		636824	0		=			
ANR	637186	Identifier	reg		636824	0					
ANR	637187	UnaryOperationExpression	& token_aux [ i + 1 ]		636824	1					
ANR	637188	UnaryOperator	&		636824	0					
ANR	637189	ArrayIndexing	token_aux [ i + 1 ]		636824	1					
ANR	637190	Identifier	token_aux		636824	0					
ANR	637191	AdditiveExpression	i + 1		636824	1		+			
ANR	637192	Identifier	i		636824	0					
ANR	637193	PrimaryExpression	1		636824	1					
ANR	637194	IfStatement	if ( C55PLUS_DEBUG )		636824	2					
ANR	637195	Condition	C55PLUS_DEBUG	290:9:7080:7092	636824	0	True				
ANR	637196	Identifier	C55PLUS_DEBUG		636824	0					
ANR	637197	CompoundStatement		67:24:1535:1535	636824	1					
ANR	637198	ExpressionStatement	"printf ( ""REG : %s\\n"" , reg )"	291:6:7103:7129	636824	0	True				
ANR	637199	CallExpression	"printf ( ""REG : %s\\n"" , reg )"		636824	0					
ANR	637200	Callee	printf		636824	0					
ANR	637201	Identifier	printf		636824	0					
ANR	637202	ArgumentList	"""REG : %s\\n"""		636824	1					
ANR	637203	Argument	"""REG : %s\\n"""		636824	0					
ANR	637204	PrimaryExpression	"""REG : %s\\n"""		636824	0					
ANR	637205	Argument	reg		636824	1					
ANR	637206	Identifier	reg		636824	0					
ANR	637207	BreakStatement	break ;	293:5:7143:7148	636824	3	True				
ANR	637208	ExpressionStatement	"aux = get_token_decoded ( hash_code , token_aux , len , reg , ret_ins_bits , reg_len_dec , magic_value , ins_pos + ins_off , ins_len , two_ins , err_code )"	297:3:7165:7311	636824	11	True				
ANR	637209	AssignmentExpression	"aux = get_token_decoded ( hash_code , token_aux , len , reg , ret_ins_bits , reg_len_dec , magic_value , ins_pos + ins_off , ins_len , two_ins , err_code )"		636824	0		=			
ANR	637210	Identifier	aux		636824	0					
ANR	637211	CallExpression	"get_token_decoded ( hash_code , token_aux , len , reg , ret_ins_bits , reg_len_dec , magic_value , ins_pos + ins_off , ins_len , two_ins , err_code )"		636824	1					
ANR	637212	Callee	get_token_decoded		636824	0					
ANR	637213	Identifier	get_token_decoded		636824	0					
ANR	637214	ArgumentList	hash_code		636824	1					
ANR	637215	Argument	hash_code		636824	0					
ANR	637216	Identifier	hash_code		636824	0					
ANR	637217	Argument	token_aux		636824	1					
ANR	637218	Identifier	token_aux		636824	0					
ANR	637219	Argument	len		636824	2					
ANR	637220	Identifier	len		636824	0					
ANR	637221	Argument	reg		636824	3					
ANR	637222	Identifier	reg		636824	0					
ANR	637223	Argument	ret_ins_bits		636824	4					
ANR	637224	Identifier	ret_ins_bits		636824	0					
ANR	637225	Argument	reg_len_dec		636824	5					
ANR	637226	Identifier	reg_len_dec		636824	0					
ANR	637227	Argument	magic_value		636824	6					
ANR	637228	Identifier	magic_value		636824	0					
ANR	637229	Argument	ins_pos + ins_off		636824	7					
ANR	637230	AdditiveExpression	ins_pos + ins_off		636824	0		+			
ANR	637231	Identifier	ins_pos		636824	0					
ANR	637232	Identifier	ins_off		636824	1					
ANR	637233	Argument	ins_len		636824	8					
ANR	637234	Identifier	ins_len		636824	0					
ANR	637235	Argument	two_ins		636824	9					
ANR	637236	Identifier	two_ins		636824	0					
ANR	637237	Argument	err_code		636824	10					
ANR	637238	Identifier	err_code		636824	0					
ANR	637239	IfStatement	if ( * err_code < 0 )		636824	12					
ANR	637240	Condition	* err_code < 0	299:7:7320:7332	636824	0	True				
ANR	637241	RelationalExpression	* err_code < 0		636824	0		<			
ANR	637242	UnaryOperationExpression	* err_code		636824	0					
ANR	637243	UnaryOperator	*		636824	0					
ANR	637244	Identifier	err_code		636824	1					
ANR	637245	PrimaryExpression	0		636824	1					
ANR	637246	CompoundStatement		76:22:1775:1775	636824	1					
ANR	637247	ReturnStatement	return NULL ;	300:4:7341:7352	636824	0	True				
ANR	637248	Identifier	NULL		636824	0					
ANR	637249	ExpressionStatement	"res_decode = strcat_dup ( res_decode , aux , 3 )"	302:3:7362:7405	636824	13	True				
ANR	637250	AssignmentExpression	"res_decode = strcat_dup ( res_decode , aux , 3 )"		636824	0		=			
ANR	637251	Identifier	res_decode		636824	0					
ANR	637252	CallExpression	"strcat_dup ( res_decode , aux , 3 )"		636824	1					
ANR	637253	Callee	strcat_dup		636824	0					
ANR	637254	Identifier	strcat_dup		636824	0					
ANR	637255	ArgumentList	res_decode		636824	1					
ANR	637256	Argument	res_decode		636824	0					
ANR	637257	Identifier	res_decode		636824	0					
ANR	637258	Argument	aux		636824	1					
ANR	637259	Identifier	aux		636824	0					
ANR	637260	Argument	3		636824	2					
ANR	637261	PrimaryExpression	3		636824	0					
ANR	637262	IfStatement	if ( C55PLUS_DEBUG )		636824	14					
ANR	637263	Condition	C55PLUS_DEBUG	303:7:7414:7426	636824	0	True				
ANR	637264	Identifier	C55PLUS_DEBUG		636824	0					
ANR	637265	CompoundStatement		80:22:1869:1869	636824	1					
ANR	637266	ExpressionStatement	"printf ( ""RET TOKEN %s\\n"" , res_decode )"	304:4:7435:7471	636824	0	True				
ANR	637267	CallExpression	"printf ( ""RET TOKEN %s\\n"" , res_decode )"		636824	0					
ANR	637268	Callee	printf		636824	0					
ANR	637269	Identifier	printf		636824	0					
ANR	637270	ArgumentList	"""RET TOKEN %s\\n"""		636824	1					
ANR	637271	Argument	"""RET TOKEN %s\\n"""		636824	0					
ANR	637272	PrimaryExpression	"""RET TOKEN %s\\n"""		636824	0					
ANR	637273	Argument	res_decode		636824	1					
ANR	637274	Identifier	res_decode		636824	0					
ANR	637275	ElseStatement	else		636824	0					
ANR	637276	CompoundStatement		83:9:1927:1927	636824	0					
ANR	637277	ExpressionStatement	token_aux [ 0 ] = * pos	307:3:7492:7511	636824	0	True				
ANR	637278	AssignmentExpression	token_aux [ 0 ] = * pos		636824	0		=			
ANR	637279	ArrayIndexing	token_aux [ 0 ]		636824	0					
ANR	637280	Identifier	token_aux		636824	0					
ANR	637281	PrimaryExpression	0		636824	1					
ANR	637282	UnaryOperationExpression	* pos		636824	1					
ANR	637283	UnaryOperator	*		636824	0					
ANR	637284	Identifier	pos		636824	1					
ANR	637285	ExpressionStatement	token_aux [ 1 ] = '\\0'	308:3:7516:7535	636824	1	True				
ANR	637286	AssignmentExpression	token_aux [ 1 ] = '\\0'		636824	0		=			
ANR	637287	ArrayIndexing	token_aux [ 1 ]		636824	0					
ANR	637288	Identifier	token_aux		636824	0					
ANR	637289	PrimaryExpression	1		636824	1					
ANR	637290	PrimaryExpression	'\\0'		636824	1					
ANR	637291	ExpressionStatement	"res_decode = strcat_dup ( res_decode , token_aux , 1 )"	309:3:7540:7589	636824	2	True				
ANR	637292	AssignmentExpression	"res_decode = strcat_dup ( res_decode , token_aux , 1 )"		636824	0		=			
ANR	637293	Identifier	res_decode		636824	0					
ANR	637294	CallExpression	"strcat_dup ( res_decode , token_aux , 1 )"		636824	1					
ANR	637295	Callee	strcat_dup		636824	0					
ANR	637296	Identifier	strcat_dup		636824	0					
ANR	637297	ArgumentList	res_decode		636824	1					
ANR	637298	Argument	res_decode		636824	0					
ANR	637299	Identifier	res_decode		636824	0					
ANR	637300	Argument	token_aux		636824	1					
ANR	637301	Identifier	token_aux		636824	0					
ANR	637302	Argument	1		636824	2					
ANR	637303	PrimaryExpression	1		636824	0					
ANR	637304	ExpressionStatement	pos ++	311:2:7597:7602	636824	1	True				
ANR	637305	PostIncDecOperationExpression	pos ++		636824	0					
ANR	637306	Identifier	pos		636824	0					
ANR	637307	IncDec	++		636824	1					
ANR	637308	IfStatement	if ( C55PLUS_DEBUG )		636824	15					
ANR	637309	Condition	C55PLUS_DEBUG	314:5:7613:7625	636824	0	True				
ANR	637310	Identifier	C55PLUS_DEBUG		636824	0					
ANR	637311	CompoundStatement		91:20:2068:2068	636824	1					
ANR	637312	ExpressionStatement	"printf ( ""RESULT DECODE: %s\\n"" , res_decode )"	315:2:7632:7674	636824	0	True				
ANR	637313	CallExpression	"printf ( ""RESULT DECODE: %s\\n"" , res_decode )"		636824	0					
ANR	637314	Callee	printf		636824	0					
ANR	637315	Identifier	printf		636824	0					
ANR	637316	ArgumentList	"""RESULT DECODE: %s\\n"""		636824	1					
ANR	637317	Argument	"""RESULT DECODE: %s\\n"""		636824	0					
ANR	637318	PrimaryExpression	"""RESULT DECODE: %s\\n"""		636824	0					
ANR	637319	Argument	res_decode		636824	1					
ANR	637320	Identifier	res_decode		636824	0					
ANR	637321	ReturnStatement	return res_decode ;	318:1:7681:7698	636824	16	True				
ANR	637322	Identifier	res_decode		636824	0					
ANR	637323	ReturnType	static char *		636824	1					
ANR	637324	Identifier	decode_ins		636824	2					
ANR	637325	ParameterList	"st32 hash_code , ut32 ins_pos , ut32 ins_off , ut32 * ins_len_dec , ut32 * reg_len_dec , ut32 * ret_ins_bits , ut32 magic_value , ut8 two_ins , int * err_code"		636824	3					
ANR	637326	Parameter	st32 hash_code	222:24:5410:5423	636824	0	True				
ANR	637327	ParameterType	st32		636824	0					
ANR	637328	Identifier	hash_code		636824	1					
ANR	637329	Parameter	ut32 ins_pos	222:40:5426:5437	636824	1	True				
ANR	637330	ParameterType	ut32		636824	0					
ANR	637331	Identifier	ins_pos		636824	1					
ANR	637332	Parameter	ut32 ins_off	222:54:5440:5451	636824	2	True				
ANR	637333	ParameterType	ut32		636824	0					
ANR	637334	Identifier	ins_off		636824	1					
ANR	637335	Parameter	ut32 * ins_len_dec	222:68:5454:5470	636824	3	True				
ANR	637336	ParameterType	ut32 *		636824	0					
ANR	637337	Identifier	ins_len_dec		636824	1					
ANR	637338	Parameter	ut32 * reg_len_dec	223:1:5474:5490	636824	4	True				
ANR	637339	ParameterType	ut32 *		636824	0					
ANR	637340	Identifier	reg_len_dec		636824	1					
ANR	637341	Parameter	ut32 * ret_ins_bits	223:20:5493:5510	636824	5	True				
ANR	637342	ParameterType	ut32 *		636824	0					
ANR	637343	Identifier	ret_ins_bits		636824	1					
ANR	637344	Parameter	ut32 magic_value	223:40:5513:5528	636824	6	True				
ANR	637345	ParameterType	ut32		636824	0					
ANR	637346	Identifier	magic_value		636824	1					
ANR	637347	Parameter	ut8 two_ins	223:58:5531:5541	636824	7	True				
ANR	637348	ParameterType	ut8		636824	0					
ANR	637349	Identifier	two_ins		636824	1					
ANR	637350	Parameter	int * err_code	223:71:5544:5556	636824	8	True				
ANR	637351	ParameterType	int *		636824	0					
ANR	637352	Identifier	err_code		636824	1					
ANR	637353	CFGEntryNode	ENTRY		636824		True				
ANR	637354	CFGExitNode	EXIT		636824		True				
ANR	637355	Symbol	res_decode		636824						
ANR	637356	Symbol	* ins_len_dec		636824						
ANR	637357	Symbol	ins_str		636824						
ANR	637358	Symbol	aux		636824						
ANR	637359	Symbol	err_code		636824						
ANR	637360	Symbol	strchr		636824						
ANR	637361	Symbol	token_aux		636824						
ANR	637362	Symbol	hash_code		636824						
ANR	637363	Symbol	len		636824						
ANR	637364	Symbol	* err_code		636824						
ANR	637365	Symbol	pos		636824						
ANR	637366	Symbol	reg		636824						
ANR	637367	Symbol	two_ins		636824						
ANR	637368	Symbol	ins_len_dec		636824						
ANR	637369	Symbol	ins_len		636824						
ANR	637370	Symbol	strcat_dup		636824						
ANR	637371	Symbol	C55PLUS_DEBUG		636824						
ANR	637372	Symbol	NULL		636824						
ANR	637373	Symbol	ret_ins_bits		636824						
ANR	637374	Symbol	ins_pos		636824						
ANR	637375	Symbol	* hash_code		636824						
ANR	637376	Symbol	i		636824						
ANR	637377	Symbol	stderr		636824						
ANR	637378	Symbol	* ins_str		636824						
ANR	637379	Symbol	ins		636824						
ANR	637380	Symbol	get_ins_len		636824						
ANR	637381	Symbol	* token_aux		636824						
ANR	637382	Symbol	reg_len_dec		636824						
ANR	637383	Symbol	* i		636824						
ANR	637384	Symbol	magic_value		636824						
ANR	637385	Symbol	get_ins_part		636824						
ANR	637386	Symbol	ins_off		636824						
ANR	637387	Symbol	get_token_decoded		636824						
ANR	637388	Symbol	* pos		636824						
ANR	637389	Symbol	* len		636824						
ANR	637390	Function	is_hash	321:0:7703:7971							
ANR	637391	FunctionDef	is_hash (st32 hash_code)		637390	0					
ANR	637392	CompoundStatement		322:0:7739:7971	637390	0					
ANR	637393	IdentifierDeclStatement	bool ret ;	323:1:7742:7750	637390	0	True				
ANR	637394	IdentifierDecl	ret		637390	0					
ANR	637395	IdentifierDeclType	bool		637390	0					
ANR	637396	Identifier	ret		637390	1					
ANR	637397	SwitchStatement	switch ( hash_code )		637390	1					
ANR	637398	Condition	hash_code	325:8:7761:7769	637390	0	True				
ANR	637399	Identifier	hash_code		637390	0					
ANR	637400	CompoundStatement		4:19:32:32	637390	1					
ANR	637401	Label	case 0xE8 :	326:2:7776:7785	637390	0	True				
ANR	637402	Label	case 0xE9 :	327:2:7789:7798	637390	1	True				
ANR	637403	Label	case 0xEA :	328:2:7802:7811	637390	2	True				
ANR	637404	Label	case 0xEC :	329:2:7815:7824	637390	3	True				
ANR	637405	Label	case 0x1A8 :	330:2:7828:7838	637390	4	True				
ANR	637406	Label	case 0x1DC :	331:2:7842:7852	637390	5	True				
ANR	637407	Label	case 0x1E1 :	332:2:7856:7866	637390	6	True				
ANR	637408	Label	case 0x1E2 :	333:2:7870:7880	637390	7	True				
ANR	637409	Label	case 0x1E3 :	334:2:7884:7894	637390	8	True				
ANR	637410	Label	case 0x1E4 :	335:2:7898:7908	637390	9	True				
ANR	637411	ExpressionStatement	ret = 1	336:3:7913:7920	637390	10	True				
ANR	637412	AssignmentExpression	ret = 1		637390	0		=			
ANR	637413	Identifier	ret		637390	0					
ANR	637414	PrimaryExpression	1		637390	1					
ANR	637415	BreakStatement	break ;	337:3:7925:7930	637390	11	True				
ANR	637416	Label	default :	338:2:7934:7941	637390	12	True				
ANR	637417	Identifier	default		637390	0					
ANR	637418	ExpressionStatement	ret = 0	339:2:7945:7952	637390	13	True				
ANR	637419	AssignmentExpression	ret = 0		637390	0		=			
ANR	637420	Identifier	ret		637390	0					
ANR	637421	PrimaryExpression	0		637390	1					
ANR	637422	ReturnStatement	return ret ;	342:1:7959:7969	637390	2	True				
ANR	637423	Identifier	ret		637390	0					
ANR	637424	ReturnType	static bool		637390	1					
ANR	637425	Identifier	is_hash		637390	2					
ANR	637426	ParameterList	st32 hash_code		637390	3					
ANR	637427	Parameter	st32 hash_code	321:20:7723:7736	637390	0	True				
ANR	637428	ParameterType	st32		637390	0					
ANR	637429	Identifier	hash_code		637390	1					
ANR	637430	CFGEntryNode	ENTRY		637390		True				
ANR	637431	CFGExitNode	EXIT		637390		True				
ANR	637432	Symbol	ret		637390						
ANR	637433	Symbol	hash_code		637390						
ANR	637434	Function	set_magic_value	345:0:7974:8659							
ANR	637435	FunctionDef	"set_magic_value (ut32 * magic_value , st32 hash_code , int * err_code)"		637434	0					
ANR	637436	CompoundStatement		346:0:8045:8659	637434	0					
ANR	637437	SwitchStatement	switch ( hash_code )		637434	0					
ANR	637438	Condition	hash_code	347:8:8055:8063	637434	0	True				
ANR	637439	Identifier	hash_code		637434	0					
ANR	637440	CompoundStatement		2:19:20:20	637434	1					
ANR	637441	Label	case 232 :	348:2:8070:8078	637434	0	True				
ANR	637442	ExpressionStatement	* magic_value |= 1	349:3:8083:8100	637434	1	True				
ANR	637443	AssignmentExpression	* magic_value |= 1		637434	0		|=			
ANR	637444	UnaryOperationExpression	* magic_value		637434	0					
ANR	637445	UnaryOperator	*		637434	0					
ANR	637446	Identifier	magic_value		637434	1					
ANR	637447	PrimaryExpression	1		637434	1					
ANR	637448	BreakStatement	break ;	350:3:8105:8110	637434	2	True				
ANR	637449	Label	case 424 :	351:2:8114:8122	637434	3	True				
ANR	637450	ExpressionStatement	* magic_value |= 2	352:3:8127:8144	637434	4	True				
ANR	637451	AssignmentExpression	* magic_value |= 2		637434	0		|=			
ANR	637452	UnaryOperationExpression	* magic_value		637434	0					
ANR	637453	UnaryOperator	*		637434	0					
ANR	637454	Identifier	magic_value		637434	1					
ANR	637455	PrimaryExpression	2		637434	1					
ANR	637456	BreakStatement	break ;	353:3:8149:8154	637434	5	True				
ANR	637457	Label	case 236 :	354:2:8158:8166	637434	6	True				
ANR	637458	ExpressionStatement	* magic_value |= 4	355:3:8171:8188	637434	7	True				
ANR	637459	AssignmentExpression	* magic_value |= 4		637434	0		|=			
ANR	637460	UnaryOperationExpression	* magic_value		637434	0					
ANR	637461	UnaryOperator	*		637434	0					
ANR	637462	Identifier	magic_value		637434	1					
ANR	637463	PrimaryExpression	4		637434	1					
ANR	637464	BreakStatement	break ;	356:3:8193:8198	637434	8	True				
ANR	637465	Label	case 233 :	357:2:8202:8210	637434	9	True				
ANR	637466	ExpressionStatement	* magic_value |= 0x10	358:3:8215:8235	637434	10	True				
ANR	637467	AssignmentExpression	* magic_value |= 0x10		637434	0		|=			
ANR	637468	UnaryOperationExpression	* magic_value		637434	0					
ANR	637469	UnaryOperator	*		637434	0					
ANR	637470	Identifier	magic_value		637434	1					
ANR	637471	PrimaryExpression	0x10		637434	1					
ANR	637472	BreakStatement	break ;	359:3:8240:8245	637434	11	True				
ANR	637473	Label	case 234 :	360:2:8249:8257	637434	12	True				
ANR	637474	ExpressionStatement	* magic_value |= 0x20	361:3:8262:8282	637434	13	True				
ANR	637475	AssignmentExpression	* magic_value |= 0x20		637434	0		|=			
ANR	637476	UnaryOperationExpression	* magic_value		637434	0					
ANR	637477	UnaryOperator	*		637434	0					
ANR	637478	Identifier	magic_value		637434	1					
ANR	637479	PrimaryExpression	0x20		637434	1					
ANR	637480	BreakStatement	break ;	362:3:8287:8292	637434	14	True				
ANR	637481	Label	case 483 :	363:2:8296:8304	637434	15	True				
ANR	637482	ExpressionStatement	* magic_value |= 0x40	364:3:8309:8329	637434	16	True				
ANR	637483	AssignmentExpression	* magic_value |= 0x40		637434	0		|=			
ANR	637484	UnaryOperationExpression	* magic_value		637434	0					
ANR	637485	UnaryOperator	*		637434	0					
ANR	637486	Identifier	magic_value		637434	1					
ANR	637487	PrimaryExpression	0x40		637434	1					
ANR	637488	BreakStatement	break ;	365:3:8334:8339	637434	17	True				
ANR	637489	Label	case 484 :	366:2:8343:8351	637434	18	True				
ANR	637490	ExpressionStatement	* magic_value |= 0x80	367:3:8356:8376	637434	19	True				
ANR	637491	AssignmentExpression	* magic_value |= 0x80		637434	0		|=			
ANR	637492	UnaryOperationExpression	* magic_value		637434	0					
ANR	637493	UnaryOperator	*		637434	0					
ANR	637494	Identifier	magic_value		637434	1					
ANR	637495	PrimaryExpression	0x80		637434	1					
ANR	637496	BreakStatement	break ;	368:3:8381:8386	637434	20	True				
ANR	637497	Label	case 476 :	369:2:8390:8398	637434	21	True				
ANR	637498	ExpressionStatement	* magic_value |= 0x100	370:3:8403:8424	637434	22	True				
ANR	637499	AssignmentExpression	* magic_value |= 0x100		637434	0		|=			
ANR	637500	UnaryOperationExpression	* magic_value		637434	0					
ANR	637501	UnaryOperator	*		637434	0					
ANR	637502	Identifier	magic_value		637434	1					
ANR	637503	PrimaryExpression	0x100		637434	1					
ANR	637504	BreakStatement	break ;	371:3:8429:8434	637434	23	True				
ANR	637505	Label	case 481 :	372:2:8438:8446	637434	24	True				
ANR	637506	ExpressionStatement	* magic_value |= 0x200	373:3:8451:8472	637434	25	True				
ANR	637507	AssignmentExpression	* magic_value |= 0x200		637434	0		|=			
ANR	637508	UnaryOperationExpression	* magic_value		637434	0					
ANR	637509	UnaryOperator	*		637434	0					
ANR	637510	Identifier	magic_value		637434	1					
ANR	637511	PrimaryExpression	0x200		637434	1					
ANR	637512	BreakStatement	break ;	374:3:8477:8482	637434	26	True				
ANR	637513	Label	case 482 :	375:2:8486:8494	637434	27	True				
ANR	637514	ExpressionStatement	* magic_value |= 0x400	376:3:8499:8520	637434	28	True				
ANR	637515	AssignmentExpression	* magic_value |= 0x400		637434	0		|=			
ANR	637516	UnaryOperationExpression	* magic_value		637434	0					
ANR	637517	UnaryOperator	*		637434	0					
ANR	637518	Identifier	magic_value		637434	1					
ANR	637519	PrimaryExpression	0x400		637434	1					
ANR	637520	BreakStatement	break ;	377:3:8525:8530	637434	29	True				
ANR	637521	Label	default :	378:2:8534:8541	637434	30	True				
ANR	637522	Identifier	default		637434	0					
ANR	637523	ExpressionStatement	"fprintf ( stderr , ""invalid hash code 0x%x for magic value 0x%x\\n"" , hash_code , * magic_value )"	379:3:8546:8635	637434	31	True				
ANR	637524	CallExpression	"fprintf ( stderr , ""invalid hash code 0x%x for magic value 0x%x\\n"" , hash_code , * magic_value )"		637434	0					
ANR	637525	Callee	fprintf		637434	0					
ANR	637526	Identifier	fprintf		637434	0					
ANR	637527	ArgumentList	stderr		637434	1					
ANR	637528	Argument	stderr		637434	0					
ANR	637529	Identifier	stderr		637434	0					
ANR	637530	Argument	"""invalid hash code 0x%x for magic value 0x%x\\n"""		637434	1					
ANR	637531	PrimaryExpression	"""invalid hash code 0x%x for magic value 0x%x\\n"""		637434	0					
ANR	637532	Argument	hash_code		637434	2					
ANR	637533	Identifier	hash_code		637434	0					
ANR	637534	Argument	* magic_value		637434	3					
ANR	637535	UnaryOperationExpression	* magic_value		637434	0					
ANR	637536	UnaryOperator	*		637434	0					
ANR	637537	Identifier	magic_value		637434	1					
ANR	637538	ExpressionStatement	* err_code = - 1	380:3:8640:8654	637434	32	True				
ANR	637539	AssignmentExpression	* err_code = - 1		637434	0		=			
ANR	637540	UnaryOperationExpression	* err_code		637434	0					
ANR	637541	UnaryOperator	*		637434	0					
ANR	637542	Identifier	err_code		637434	1					
ANR	637543	UnaryOperationExpression	- 1		637434	1					
ANR	637544	UnaryOperator	-		637434	0					
ANR	637545	PrimaryExpression	1		637434	1					
ANR	637546	ReturnType	void		637434	1					
ANR	637547	Identifier	set_magic_value		637434	2					
ANR	637548	ParameterList	"ut32 * magic_value , st32 hash_code , int * err_code"		637434	3					
ANR	637549	Parameter	ut32 * magic_value	345:21:7995:8011	637434	0	True				
ANR	637550	ParameterType	ut32 *		637434	0					
ANR	637551	Identifier	magic_value		637434	1					
ANR	637552	Parameter	st32 hash_code	345:40:8014:8027	637434	1	True				
ANR	637553	ParameterType	st32		637434	0					
ANR	637554	Identifier	hash_code		637434	1					
ANR	637555	Parameter	int * err_code	345:56:8030:8042	637434	2	True				
ANR	637556	ParameterType	int *		637434	0					
ANR	637557	Identifier	err_code		637434	1					
ANR	637558	CFGEntryNode	ENTRY		637434		True				
ANR	637559	CFGExitNode	EXIT		637434		True				
ANR	637560	Symbol	hash_code		637434						
ANR	637561	Symbol	* magic_value		637434						
ANR	637562	Symbol	* err_code		637434						
ANR	637563	Symbol	magic_value		637434						
ANR	637564	Symbol	err_code		637434						
ANR	637565	Symbol	stderr		637434						
ANR	637566	Function	do_decode	385:0:8663:10325							
ANR	637567	FunctionDef	"do_decode (ut32 ins_off , ut32 ins_pos , ut32 two_ins , ut32 * next_ins_pos , st32 * ins_hash_code , int * err_code)"		637566	0					
ANR	637568	CompoundStatement		387:0:8785:10325	637566	0					
ANR	637569	IdentifierDeclStatement	"st32 hash_code , hash_aux ;"	388:1:8788:8812	637566	0	True				
ANR	637570	IdentifierDecl	hash_code		637566	0					
ANR	637571	IdentifierDeclType	st32		637566	0					
ANR	637572	Identifier	hash_code		637566	1					
ANR	637573	IdentifierDecl	hash_aux		637566	1					
ANR	637574	IdentifierDeclType	st32		637566	0					
ANR	637575	Identifier	hash_aux		637566	1					
ANR	637576	IdentifierDeclStatement	"ut32 reg_len_dec , ins_len_dec , ret_ins_bits ;"	389:1:8815:8858	637566	1	True				
ANR	637577	IdentifierDecl	reg_len_dec		637566	0					
ANR	637578	IdentifierDeclType	ut32		637566	0					
ANR	637579	Identifier	reg_len_dec		637566	1					
ANR	637580	IdentifierDecl	ins_len_dec		637566	1					
ANR	637581	IdentifierDeclType	ut32		637566	0					
ANR	637582	Identifier	ins_len_dec		637566	1					
ANR	637583	IdentifierDecl	ret_ins_bits		637566	2					
ANR	637584	IdentifierDeclType	ut32		637566	0					
ANR	637585	Identifier	ret_ins_bits		637566	1					
ANR	637586	IdentifierDeclStatement	"char * ins_res = NULL , * ins_aux = NULL ;"	390:1:8861:8898	637566	2	True				
ANR	637587	IdentifierDecl	* ins_res = NULL		637566	0					
ANR	637588	IdentifierDeclType	char *		637566	0					
ANR	637589	Identifier	ins_res		637566	1					
ANR	637590	AssignmentExpression	* ins_res = NULL		637566	2		=			
ANR	637591	Identifier	NULL		637566	0					
ANR	637592	Identifier	NULL		637566	1					
ANR	637593	IdentifierDecl	* ins_aux = NULL		637566	1					
ANR	637594	IdentifierDeclType	char *		637566	0					
ANR	637595	Identifier	ins_aux		637566	1					
ANR	637596	AssignmentExpression	* ins_aux = NULL		637566	2		=			
ANR	637597	Identifier	NULL		637566	0					
ANR	637598	Identifier	NULL		637566	1					
ANR	637599	IdentifierDeclStatement	ut32 magic_value = 0x800 ;	391:1:8901:8925	637566	3	True				
ANR	637600	IdentifierDecl	magic_value = 0x800		637566	0					
ANR	637601	IdentifierDeclType	ut32		637566	0					
ANR	637602	Identifier	magic_value		637566	1					
ANR	637603	AssignmentExpression	magic_value = 0x800		637566	2		=			
ANR	637604	Identifier	magic_value		637566	0					
ANR	637605	PrimaryExpression	0x800		637566	1					
ANR	637606	ExpressionStatement	* next_ins_pos = 0	393:1:8929:8946	637566	4	True				
ANR	637607	AssignmentExpression	* next_ins_pos = 0		637566	0		=			
ANR	637608	UnaryOperationExpression	* next_ins_pos		637566	0					
ANR	637609	UnaryOperator	*		637566	0					
ANR	637610	Identifier	next_ins_pos		637566	1					
ANR	637611	PrimaryExpression	0		637566	1					
ANR	637612	ExpressionStatement	reg_len_dec = 0	395:1:8950:8965	637566	5	True				
ANR	637613	AssignmentExpression	reg_len_dec = 0		637566	0		=			
ANR	637614	Identifier	reg_len_dec		637566	0					
ANR	637615	PrimaryExpression	0		637566	1					
ANR	637616	ExpressionStatement	ret_ins_bits = 0	396:1:8968:8984	637566	6	True				
ANR	637617	AssignmentExpression	ret_ins_bits = 0		637566	0		=			
ANR	637618	Identifier	ret_ins_bits		637566	0					
ANR	637619	PrimaryExpression	0		637566	1					
ANR	637620	ExpressionStatement	ins_len_dec = 0	397:1:8987:9002	637566	7	True				
ANR	637621	AssignmentExpression	ins_len_dec = 0		637566	0		=			
ANR	637622	Identifier	ins_len_dec		637566	0					
ANR	637623	PrimaryExpression	0		637566	1					
ANR	637624	ExpressionStatement	hash_code = get_hash_code ( ins_pos + ins_off )	399:1:9006:9050	637566	8	True				
ANR	637625	AssignmentExpression	hash_code = get_hash_code ( ins_pos + ins_off )		637566	0		=			
ANR	637626	Identifier	hash_code		637566	0					
ANR	637627	CallExpression	get_hash_code ( ins_pos + ins_off )		637566	1					
ANR	637628	Callee	get_hash_code		637566	0					
ANR	637629	Identifier	get_hash_code		637566	0					
ANR	637630	ArgumentList	ins_pos + ins_off		637566	1					
ANR	637631	Argument	ins_pos + ins_off		637566	0					
ANR	637632	AdditiveExpression	ins_pos + ins_off		637566	0		+			
ANR	637633	Identifier	ins_pos		637566	0					
ANR	637634	Identifier	ins_off		637566	1					
ANR	637635	IfStatement	if ( is_hash ( hash_code ) )		637566	9					
ANR	637636	Condition	is_hash ( hash_code )	400:5:9057:9074	637566	0	True				
ANR	637637	CallExpression	is_hash ( hash_code )		637566	0					
ANR	637638	Callee	is_hash		637566	0					
ANR	637639	Identifier	is_hash		637566	0					
ANR	637640	ArgumentList	hash_code		637566	1					
ANR	637641	Argument	hash_code		637566	0					
ANR	637642	Identifier	hash_code		637566	0					
ANR	637643	CompoundStatement		14:25:291:291	637566	1					
ANR	637644	ExpressionStatement	hash_aux = hash_code	401:2:9081:9101	637566	0	True				
ANR	637645	AssignmentExpression	hash_aux = hash_code		637566	0		=			
ANR	637646	Identifier	hash_aux		637566	0					
ANR	637647	Identifier	hash_code		637566	1					
ANR	637648	ExpressionStatement	ins_off ++	402:2:9105:9114	637566	1	True				
ANR	637649	PostIncDecOperationExpression	ins_off ++		637566	0					
ANR	637650	Identifier	ins_off		637566	0					
ANR	637651	IncDec	++		637566	1					
ANR	637652	ExpressionStatement	"set_magic_value ( & magic_value , hash_code , err_code )"	403:2:9118:9168	637566	2	True				
ANR	637653	CallExpression	"set_magic_value ( & magic_value , hash_code , err_code )"		637566	0					
ANR	637654	Callee	set_magic_value		637566	0					
ANR	637655	Identifier	set_magic_value		637566	0					
ANR	637656	ArgumentList	& magic_value		637566	1					
ANR	637657	Argument	& magic_value		637566	0					
ANR	637658	UnaryOperationExpression	& magic_value		637566	0					
ANR	637659	UnaryOperator	&		637566	0					
ANR	637660	Identifier	magic_value		637566	1					
ANR	637661	Argument	hash_code		637566	1					
ANR	637662	Identifier	hash_code		637566	0					
ANR	637663	Argument	err_code		637566	2					
ANR	637664	Identifier	err_code		637566	0					
ANR	637665	IfStatement	if ( * err_code < 0 )		637566	3					
ANR	637666	Condition	* err_code < 0	404:6:9176:9188	637566	0	True				
ANR	637667	RelationalExpression	* err_code < 0		637566	0		<			
ANR	637668	UnaryOperationExpression	* err_code		637566	0					
ANR	637669	UnaryOperator	*		637566	0					
ANR	637670	Identifier	err_code		637566	1					
ANR	637671	PrimaryExpression	0		637566	1					
ANR	637672	CompoundStatement		18:21:405:405	637566	1					
ANR	637673	ReturnStatement	return NULL ;	405:3:9196:9207	637566	0	True				
ANR	637674	Identifier	NULL		637566	0					
ANR	637675	ExpressionStatement	hash_code = get_hash_code ( ins_pos + ins_off )	407:2:9215:9259	637566	4	True				
ANR	637676	AssignmentExpression	hash_code = get_hash_code ( ins_pos + ins_off )		637566	0		=			
ANR	637677	Identifier	hash_code		637566	0					
ANR	637678	CallExpression	get_hash_code ( ins_pos + ins_off )		637566	1					
ANR	637679	Callee	get_hash_code		637566	0					
ANR	637680	Identifier	get_hash_code		637566	0					
ANR	637681	ArgumentList	ins_pos + ins_off		637566	1					
ANR	637682	Argument	ins_pos + ins_off		637566	0					
ANR	637683	AdditiveExpression	ins_pos + ins_off		637566	0		+			
ANR	637684	Identifier	ins_pos		637566	0					
ANR	637685	Identifier	ins_off		637566	1					
ANR	637686	ExpressionStatement	* next_ins_pos = 1	408:2:9263:9280	637566	5	True				
ANR	637687	AssignmentExpression	* next_ins_pos = 1		637566	0		=			
ANR	637688	UnaryOperationExpression	* next_ins_pos		637566	0					
ANR	637689	UnaryOperator	*		637566	0					
ANR	637690	Identifier	next_ins_pos		637566	1					
ANR	637691	PrimaryExpression	1		637566	1					
ANR	637692	ElseStatement	else		637566	0					
ANR	637693	CompoundStatement		23:8:504:504	637566	0					
ANR	637694	ExpressionStatement	hash_aux = 0x223	410:2:9294:9310	637566	0	True				
ANR	637695	AssignmentExpression	hash_aux = 0x223		637566	0		=			
ANR	637696	Identifier	hash_aux		637566	0					
ANR	637697	PrimaryExpression	0x223		637566	1					
ANR	637698	IfStatement	if ( ins_hash_code != NULL )		637566	10					
ANR	637699	Condition	ins_hash_code != NULL	413:5:9321:9341	637566	0	True				
ANR	637700	EqualityExpression	ins_hash_code != NULL		637566	0		!=			
ANR	637701	Identifier	ins_hash_code		637566	0					
ANR	637702	Identifier	NULL		637566	1					
ANR	637703	CompoundStatement		27:28:558:558	637566	1					
ANR	637704	ExpressionStatement	* ins_hash_code = hash_code	414:2:9348:9374	637566	0	True				
ANR	637705	AssignmentExpression	* ins_hash_code = hash_code		637566	0		=			
ANR	637706	UnaryOperationExpression	* ins_hash_code		637566	0					
ANR	637707	UnaryOperator	*		637566	0					
ANR	637708	Identifier	ins_hash_code		637566	1					
ANR	637709	Identifier	hash_code		637566	1					
ANR	637710	IfStatement	if ( C55PLUS_DEBUG )		637566	11					
ANR	637711	Condition	C55PLUS_DEBUG	417:5:9385:9397	637566	0	True				
ANR	637712	Identifier	C55PLUS_DEBUG		637566	0					
ANR	637713	CompoundStatement		31:20:614:614	637566	1					
ANR	637714	ExpressionStatement	"printf ( ""MAGIC VALUE 0x%x\\n"" , 0x800 )"	418:2:9404:9439	637566	0	True				
ANR	637715	CallExpression	"printf ( ""MAGIC VALUE 0x%x\\n"" , 0x800 )"		637566	0					
ANR	637716	Callee	printf		637566	0					
ANR	637717	Identifier	printf		637566	0					
ANR	637718	ArgumentList	"""MAGIC VALUE 0x%x\\n"""		637566	1					
ANR	637719	Argument	"""MAGIC VALUE 0x%x\\n"""		637566	0					
ANR	637720	PrimaryExpression	"""MAGIC VALUE 0x%x\\n"""		637566	0					
ANR	637721	Argument	0x800		637566	1					
ANR	637722	PrimaryExpression	0x800		637566	0					
ANR	637723	IfStatement	if ( hash_aux == 0x1E1 || hash_aux == 0x1E2 )		637566	12					
ANR	637724	Condition	hash_aux == 0x1E1 || hash_aux == 0x1E2	421:5:9450:9487	637566	0	True				
ANR	637725	OrExpression	hash_aux == 0x1E1 || hash_aux == 0x1E2		637566	0		||			
ANR	637726	EqualityExpression	hash_aux == 0x1E1		637566	0		==			
ANR	637727	Identifier	hash_aux		637566	0					
ANR	637728	PrimaryExpression	0x1E1		637566	1					
ANR	637729	EqualityExpression	hash_aux == 0x1E2		637566	1		==			
ANR	637730	Identifier	hash_aux		637566	0					
ANR	637731	PrimaryExpression	0x1E2		637566	1					
ANR	637732	CompoundStatement		35:45:704:704	637566	1					
ANR	637733	ExpressionStatement	"ins_aux = decode_ins ( hash_aux , ins_pos , ins_off , & ins_len_dec , & reg_len_dec , & ret_ins_bits , magic_value , two_ins , err_code )"	422:2:9494:9620	637566	0	True				
ANR	637734	AssignmentExpression	"ins_aux = decode_ins ( hash_aux , ins_pos , ins_off , & ins_len_dec , & reg_len_dec , & ret_ins_bits , magic_value , two_ins , err_code )"		637566	0		=			
ANR	637735	Identifier	ins_aux		637566	0					
ANR	637736	CallExpression	"decode_ins ( hash_aux , ins_pos , ins_off , & ins_len_dec , & reg_len_dec , & ret_ins_bits , magic_value , two_ins , err_code )"		637566	1					
ANR	637737	Callee	decode_ins		637566	0					
ANR	637738	Identifier	decode_ins		637566	0					
ANR	637739	ArgumentList	hash_aux		637566	1					
ANR	637740	Argument	hash_aux		637566	0					
ANR	637741	Identifier	hash_aux		637566	0					
ANR	637742	Argument	ins_pos		637566	1					
ANR	637743	Identifier	ins_pos		637566	0					
ANR	637744	Argument	ins_off		637566	2					
ANR	637745	Identifier	ins_off		637566	0					
ANR	637746	Argument	& ins_len_dec		637566	3					
ANR	637747	UnaryOperationExpression	& ins_len_dec		637566	0					
ANR	637748	UnaryOperator	&		637566	0					
ANR	637749	Identifier	ins_len_dec		637566	1					
ANR	637750	Argument	& reg_len_dec		637566	4					
ANR	637751	UnaryOperationExpression	& reg_len_dec		637566	0					
ANR	637752	UnaryOperator	&		637566	0					
ANR	637753	Identifier	reg_len_dec		637566	1					
ANR	637754	Argument	& ret_ins_bits		637566	5					
ANR	637755	UnaryOperationExpression	& ret_ins_bits		637566	0					
ANR	637756	UnaryOperator	&		637566	0					
ANR	637757	Identifier	ret_ins_bits		637566	1					
ANR	637758	Argument	magic_value		637566	6					
ANR	637759	Identifier	magic_value		637566	0					
ANR	637760	Argument	two_ins		637566	7					
ANR	637761	Identifier	two_ins		637566	0					
ANR	637762	Argument	err_code		637566	8					
ANR	637763	Identifier	err_code		637566	0					
ANR	637764	IfStatement	if ( * err_code < 0 )		637566	1					
ANR	637765	Condition	* err_code < 0	424:5:9627:9639	637566	0	True				
ANR	637766	RelationalExpression	* err_code < 0		637566	0		<			
ANR	637767	UnaryOperationExpression	* err_code		637566	0					
ANR	637768	UnaryOperator	*		637566	0					
ANR	637769	Identifier	err_code		637566	1					
ANR	637770	PrimaryExpression	0		637566	1					
ANR	637771	CompoundStatement		38:20:856:856	637566	1					
ANR	637772	ReturnStatement	return NULL ;	425:3:9647:9658	637566	0	True				
ANR	637773	Identifier	NULL		637566	0					
ANR	637774	ExpressionStatement	"ins_aux = strcat_dup ( ins_aux , "" "" , 1 )"	427:2:9666:9703	637566	2	True				
ANR	637775	AssignmentExpression	"ins_aux = strcat_dup ( ins_aux , "" "" , 1 )"		637566	0		=			
ANR	637776	Identifier	ins_aux		637566	0					
ANR	637777	CallExpression	"strcat_dup ( ins_aux , "" "" , 1 )"		637566	1					
ANR	637778	Callee	strcat_dup		637566	0					
ANR	637779	Identifier	strcat_dup		637566	0					
ANR	637780	ArgumentList	ins_aux		637566	1					
ANR	637781	Argument	ins_aux		637566	0					
ANR	637782	Identifier	ins_aux		637566	0					
ANR	637783	Argument	""" """		637566	1					
ANR	637784	PrimaryExpression	""" """		637566	0					
ANR	637785	Argument	1		637566	2					
ANR	637786	PrimaryExpression	1		637566	0					
ANR	637787	IfStatement	if ( hash_code == 0x223 )		637566	13					
ANR	637788	Condition	hash_code == 0x223	430:5:9714:9731	637566	0	True				
ANR	637789	EqualityExpression	hash_code == 0x223		637566	0		==			
ANR	637790	Identifier	hash_code		637566	0					
ANR	637791	PrimaryExpression	0x223		637566	1					
ANR	637792	CompoundStatement		44:25:948:948	637566	1					
ANR	637793	ExpressionStatement	"ins_res = strcat_dup ( ins_aux , "".byte 0x"" , 1 )"	431:2:9738:9782	637566	0	True				
ANR	637794	AssignmentExpression	"ins_res = strcat_dup ( ins_aux , "".byte 0x"" , 1 )"		637566	0		=			
ANR	637795	Identifier	ins_res		637566	0					
ANR	637796	CallExpression	"strcat_dup ( ins_aux , "".byte 0x"" , 1 )"		637566	1					
ANR	637797	Callee	strcat_dup		637566	0					
ANR	637798	Identifier	strcat_dup		637566	0					
ANR	637799	ArgumentList	ins_aux		637566	1					
ANR	637800	Argument	ins_aux		637566	0					
ANR	637801	Identifier	ins_aux		637566	0					
ANR	637802	Argument	""".byte 0x"""		637566	1					
ANR	637803	PrimaryExpression	""".byte 0x"""		637566	0					
ANR	637804	Argument	1		637566	2					
ANR	637805	PrimaryExpression	1		637566	0					
ANR	637806	ExpressionStatement	"ins_aux = get_hex_str ( get_ins_part ( ins_pos , 1 ) )"	432:2:9786:9833	637566	1	True				
ANR	637807	AssignmentExpression	"ins_aux = get_hex_str ( get_ins_part ( ins_pos , 1 ) )"		637566	0		=			
ANR	637808	Identifier	ins_aux		637566	0					
ANR	637809	CallExpression	"get_hex_str ( get_ins_part ( ins_pos , 1 ) )"		637566	1					
ANR	637810	Callee	get_hex_str		637566	0					
ANR	637811	Identifier	get_hex_str		637566	0					
ANR	637812	ArgumentList	"get_ins_part ( ins_pos , 1 )"		637566	1					
ANR	637813	Argument	"get_ins_part ( ins_pos , 1 )"		637566	0					
ANR	637814	CallExpression	"get_ins_part ( ins_pos , 1 )"		637566	0					
ANR	637815	Callee	get_ins_part		637566	0					
ANR	637816	Identifier	get_ins_part		637566	0					
ANR	637817	ArgumentList	ins_pos		637566	1					
ANR	637818	Argument	ins_pos		637566	0					
ANR	637819	Identifier	ins_pos		637566	0					
ANR	637820	Argument	1		637566	1					
ANR	637821	PrimaryExpression	1		637566	0					
ANR	637822	ExpressionStatement	"ins_res = strcat_dup ( ins_res , ins_aux , 2 )"	433:2:9837:9878	637566	2	True				
ANR	637823	AssignmentExpression	"ins_res = strcat_dup ( ins_res , ins_aux , 2 )"		637566	0		=			
ANR	637824	Identifier	ins_res		637566	0					
ANR	637825	CallExpression	"strcat_dup ( ins_res , ins_aux , 2 )"		637566	1					
ANR	637826	Callee	strcat_dup		637566	0					
ANR	637827	Identifier	strcat_dup		637566	0					
ANR	637828	ArgumentList	ins_res		637566	1					
ANR	637829	Argument	ins_res		637566	0					
ANR	637830	Identifier	ins_res		637566	0					
ANR	637831	Argument	ins_aux		637566	1					
ANR	637832	Identifier	ins_aux		637566	0					
ANR	637833	Argument	2		637566	2					
ANR	637834	PrimaryExpression	2		637566	0					
ANR	637835	ExpressionStatement	* next_ins_pos = * next_ins_pos + 1	434:2:9882:9915	637566	3	True				
ANR	637836	AssignmentExpression	* next_ins_pos = * next_ins_pos + 1		637566	0		=			
ANR	637837	UnaryOperationExpression	* next_ins_pos		637566	0					
ANR	637838	UnaryOperator	*		637566	0					
ANR	637839	Identifier	next_ins_pos		637566	1					
ANR	637840	AdditiveExpression	* next_ins_pos + 1		637566	1		+			
ANR	637841	UnaryOperationExpression	* next_ins_pos		637566	0					
ANR	637842	UnaryOperator	*		637566	0					
ANR	637843	Identifier	next_ins_pos		637566	1					
ANR	637844	PrimaryExpression	1		637566	1					
ANR	637845	ElseStatement	else		637566	0					
ANR	637846	CompoundStatement		49:8:1139:1139	637566	0					
ANR	637847	ExpressionStatement	free ( ins_aux )	436:2:9929:9943	637566	0	True				
ANR	637848	CallExpression	free ( ins_aux )		637566	0					
ANR	637849	Callee	free		637566	0					
ANR	637850	Identifier	free		637566	0					
ANR	637851	ArgumentList	ins_aux		637566	1					
ANR	637852	Argument	ins_aux		637566	0					
ANR	637853	Identifier	ins_aux		637566	0					
ANR	637854	ExpressionStatement	"ins_aux = decode_ins ( hash_code , ins_pos , ins_off , & ins_len_dec , & reg_len_dec , & ret_ins_bits , magic_value , two_ins , err_code )"	437:2:9947:10074	637566	1	True				
ANR	637855	AssignmentExpression	"ins_aux = decode_ins ( hash_code , ins_pos , ins_off , & ins_len_dec , & reg_len_dec , & ret_ins_bits , magic_value , two_ins , err_code )"		637566	0		=			
ANR	637856	Identifier	ins_aux		637566	0					
ANR	637857	CallExpression	"decode_ins ( hash_code , ins_pos , ins_off , & ins_len_dec , & reg_len_dec , & ret_ins_bits , magic_value , two_ins , err_code )"		637566	1					
ANR	637858	Callee	decode_ins		637566	0					
ANR	637859	Identifier	decode_ins		637566	0					
ANR	637860	ArgumentList	hash_code		637566	1					
ANR	637861	Argument	hash_code		637566	0					
ANR	637862	Identifier	hash_code		637566	0					
ANR	637863	Argument	ins_pos		637566	1					
ANR	637864	Identifier	ins_pos		637566	0					
ANR	637865	Argument	ins_off		637566	2					
ANR	637866	Identifier	ins_off		637566	0					
ANR	637867	Argument	& ins_len_dec		637566	3					
ANR	637868	UnaryOperationExpression	& ins_len_dec		637566	0					
ANR	637869	UnaryOperator	&		637566	0					
ANR	637870	Identifier	ins_len_dec		637566	1					
ANR	637871	Argument	& reg_len_dec		637566	4					
ANR	637872	UnaryOperationExpression	& reg_len_dec		637566	0					
ANR	637873	UnaryOperator	&		637566	0					
ANR	637874	Identifier	reg_len_dec		637566	1					
ANR	637875	Argument	& ret_ins_bits		637566	5					
ANR	637876	UnaryOperationExpression	& ret_ins_bits		637566	0					
ANR	637877	UnaryOperator	&		637566	0					
ANR	637878	Identifier	ret_ins_bits		637566	1					
ANR	637879	Argument	magic_value		637566	6					
ANR	637880	Identifier	magic_value		637566	0					
ANR	637881	Argument	two_ins		637566	7					
ANR	637882	Identifier	two_ins		637566	0					
ANR	637883	Argument	err_code		637566	8					
ANR	637884	Identifier	err_code		637566	0					
ANR	637885	IfStatement	if ( * err_code < 0 )		637566	2					
ANR	637886	Condition	* err_code < 0	439:6:10082:10094	637566	0	True				
ANR	637887	RelationalExpression	* err_code < 0		637566	0		<			
ANR	637888	UnaryOperationExpression	* err_code		637566	0					
ANR	637889	UnaryOperator	*		637566	0					
ANR	637890	Identifier	err_code		637566	1					
ANR	637891	PrimaryExpression	0		637566	1					
ANR	637892	CompoundStatement		53:21:1311:1311	637566	1					
ANR	637893	ExpressionStatement	free ( ins_aux )	440:3:10102:10116	637566	0	True				
ANR	637894	CallExpression	free ( ins_aux )		637566	0					
ANR	637895	Callee	free		637566	0					
ANR	637896	Identifier	free		637566	0					
ANR	637897	ArgumentList	ins_aux		637566	1					
ANR	637898	Argument	ins_aux		637566	0					
ANR	637899	Identifier	ins_aux		637566	0					
ANR	637900	ReturnStatement	return NULL ;	441:3:10121:10132	637566	1	True				
ANR	637901	Identifier	NULL		637566	0					
ANR	637902	ExpressionStatement	"ins_res = strcat_dup ( ins_aux , ins_res , 1 )"	443:2:10140:10181	637566	3	True				
ANR	637903	AssignmentExpression	"ins_res = strcat_dup ( ins_aux , ins_res , 1 )"		637566	0		=			
ANR	637904	Identifier	ins_res		637566	0					
ANR	637905	CallExpression	"strcat_dup ( ins_aux , ins_res , 1 )"		637566	1					
ANR	637906	Callee	strcat_dup		637566	0					
ANR	637907	Identifier	strcat_dup		637566	0					
ANR	637908	ArgumentList	ins_aux		637566	1					
ANR	637909	Argument	ins_aux		637566	0					
ANR	637910	Identifier	ins_aux		637566	0					
ANR	637911	Argument	ins_res		637566	1					
ANR	637912	Identifier	ins_res		637566	0					
ANR	637913	Argument	1		637566	2					
ANR	637914	PrimaryExpression	1		637566	0					
ANR	637915	ExpressionStatement	* next_ins_pos += ins_len_dec	446:2:10258:10286	637566	4	True				
ANR	637916	AssignmentExpression	* next_ins_pos += ins_len_dec		637566	0		+=			
ANR	637917	UnaryOperationExpression	* next_ins_pos		637566	0					
ANR	637918	UnaryOperator	*		637566	0					
ANR	637919	Identifier	next_ins_pos		637566	1					
ANR	637920	Identifier	ins_len_dec		637566	1					
ANR	637921	ReturnStatement	return ins_res ;	449:1:10309:10323	637566	14	True				
ANR	637922	Identifier	ins_res		637566	0					
ANR	637923	ReturnType	static char *		637566	1					
ANR	637924	Identifier	do_decode		637566	2					
ANR	637925	ParameterList	"ut32 ins_off , ut32 ins_pos , ut32 two_ins , ut32 * next_ins_pos , st32 * ins_hash_code , int * err_code"		637566	3					
ANR	637926	Parameter	ut32 ins_off	385:23:8686:8697	637566	0	True				
ANR	637927	ParameterType	ut32		637566	0					
ANR	637928	Identifier	ins_off		637566	1					
ANR	637929	Parameter	ut32 ins_pos	385:37:8700:8711	637566	1	True				
ANR	637930	ParameterType	ut32		637566	0					
ANR	637931	Identifier	ins_pos		637566	1					
ANR	637932	Parameter	ut32 two_ins	385:51:8714:8725	637566	2	True				
ANR	637933	ParameterType	ut32		637566	0					
ANR	637934	Identifier	two_ins		637566	1					
ANR	637935	Parameter	ut32 * next_ins_pos	385:65:8728:8745	637566	3	True				
ANR	637936	ParameterType	ut32 *		637566	0					
ANR	637937	Identifier	next_ins_pos		637566	1					
ANR	637938	Parameter	st32 * ins_hash_code	386:1:8749:8767	637566	4	True				
ANR	637939	ParameterType	st32 *		637566	0					
ANR	637940	Identifier	ins_hash_code		637566	1					
ANR	637941	Parameter	int * err_code	386:22:8770:8782	637566	5	True				
ANR	637942	ParameterType	int *		637566	0					
ANR	637943	Identifier	err_code		637566	1					
ANR	637944	CFGEntryNode	ENTRY		637566		True				
ANR	637945	CFGExitNode	EXIT		637566		True				
ANR	637946	Symbol	* ins_hash_code		637566						
ANR	637947	Symbol	next_ins_pos		637566						
ANR	637948	Symbol	err_code		637566						
ANR	637949	Symbol	hash_aux		637566						
ANR	637950	Symbol	get_hash_code		637566						
ANR	637951	Symbol	& ins_len_dec		637566						
ANR	637952	Symbol	ins_hash_code		637566						
ANR	637953	Symbol	hash_code		637566						
ANR	637954	Symbol	is_hash		637566						
ANR	637955	Symbol	* err_code		637566						
ANR	637956	Symbol	two_ins		637566						
ANR	637957	Symbol	ins_aux		637566						
ANR	637958	Symbol	ins_len_dec		637566						
ANR	637959	Symbol	* next_ins_pos		637566						
ANR	637960	Symbol	get_hex_str		637566						
ANR	637961	Symbol	strcat_dup		637566						
ANR	637962	Symbol	C55PLUS_DEBUG		637566						
ANR	637963	Symbol	NULL		637566						
ANR	637964	Symbol	ret_ins_bits		637566						
ANR	637965	Symbol	decode_ins		637566						
ANR	637966	Symbol	ins_pos		637566						
ANR	637967	Symbol	ins_res		637566						
ANR	637968	Symbol	& ret_ins_bits		637566						
ANR	637969	Symbol	reg_len_dec		637566						
ANR	637970	Symbol	& magic_value		637566						
ANR	637971	Symbol	& reg_len_dec		637566						
ANR	637972	Symbol	magic_value		637566						
ANR	637973	Symbol	get_ins_part		637566						
ANR	637974	Symbol	ins_off		637566						
ANR	637975	Function	c55plus_decode	452:0:10328:11804							
ANR	637976	FunctionDef	"c55plus_decode (ut32 ins_pos , ut32 * next_ins_pos)"		637975	0					
ANR	637977	CompoundStatement		452:55:10383:11804	637975	0					
ANR	637978	IdentifierDeclStatement	"ut8 opcode , two_ins = 0 ;"	453:1:10386:10409	637975	0	True				
ANR	637979	IdentifierDecl	opcode		637975	0					
ANR	637980	IdentifierDeclType	ut8		637975	0					
ANR	637981	Identifier	opcode		637975	1					
ANR	637982	IdentifierDecl	two_ins = 0		637975	1					
ANR	637983	IdentifierDeclType	ut8		637975	0					
ANR	637984	Identifier	two_ins		637975	1					
ANR	637985	AssignmentExpression	two_ins = 0		637975	2		=			
ANR	637986	Identifier	two_ins		637975	0					
ANR	637987	PrimaryExpression	0		637975	1					
ANR	637988	IdentifierDeclStatement	"ut32 next_ins1_pos , next_ins2_pos ;"	454:1:10412:10445	637975	1	True				
ANR	637989	IdentifierDecl	next_ins1_pos		637975	0					
ANR	637990	IdentifierDeclType	ut32		637975	0					
ANR	637991	Identifier	next_ins1_pos		637975	1					
ANR	637992	IdentifierDecl	next_ins2_pos		637975	1					
ANR	637993	IdentifierDeclType	ut32		637975	0					
ANR	637994	Identifier	next_ins2_pos		637975	1					
ANR	637995	IdentifierDeclStatement	st32 hash_code ;	455:1:10448:10462	637975	2	True				
ANR	637996	IdentifierDecl	hash_code		637975	0					
ANR	637997	IdentifierDeclType	st32		637975	0					
ANR	637998	Identifier	hash_code		637975	1					
ANR	637999	IdentifierDeclStatement	"char * ins1 , * ins2 , * aux , * ins_res ;"	456:1:10465:10498	637975	3	True				
ANR	638000	IdentifierDecl	* ins1		637975	0					
ANR	638001	IdentifierDeclType	char *		637975	0					
ANR	638002	Identifier	ins1		637975	1					
ANR	638003	IdentifierDecl	* ins2		637975	1					
ANR	638004	IdentifierDeclType	char *		637975	0					
ANR	638005	Identifier	ins2		637975	1					
ANR	638006	IdentifierDecl	* aux		637975	2					
ANR	638007	IdentifierDeclType	char *		637975	0					
ANR	638008	Identifier	aux		637975	1					
ANR	638009	IdentifierDecl	* ins_res		637975	3					
ANR	638010	IdentifierDeclType	char *		637975	0					
ANR	638011	Identifier	ins_res		637975	1					
ANR	638012	IdentifierDeclStatement	int err_code ;	457:1:10501:10513	637975	4	True				
ANR	638013	IdentifierDecl	err_code		637975	0					
ANR	638014	IdentifierDeclType	int		637975	0					
ANR	638015	Identifier	err_code		637975	1					
ANR	638016	IfStatement	if ( ins_pos >= ins_buff_len )		637975	5					
ANR	638017	Condition	ins_pos >= ins_buff_len	459:5:10521:10543	637975	0	True				
ANR	638018	RelationalExpression	ins_pos >= ins_buff_len		637975	0		>=			
ANR	638019	Identifier	ins_pos		637975	0					
ANR	638020	Identifier	ins_buff_len		637975	1					
ANR	638021	CompoundStatement		8:30:162:162	637975	1					
ANR	638022	ReturnStatement	return NULL ;	460:2:10550:10561	637975	0	True				
ANR	638023	Identifier	NULL		637975	0					
ANR	638024	ExpressionStatement	ins_res = NULL	462:1:10567:10581	637975	6	True				
ANR	638025	AssignmentExpression	ins_res = NULL		637975	0		=			
ANR	638026	Identifier	ins_res		637975	0					
ANR	638027	Identifier	NULL		637975	1					
ANR	638028	ExpressionStatement	err_code = 0	463:1:10584:10596	637975	7	True				
ANR	638029	AssignmentExpression	err_code = 0		637975	0		=			
ANR	638030	Identifier	err_code		637975	0					
ANR	638031	PrimaryExpression	0		637975	1					
ANR	638032	ExpressionStatement	"opcode = get_ins_part ( ins_pos , 1 )"	465:1:10600:10633	637975	8	True				
ANR	638033	AssignmentExpression	"opcode = get_ins_part ( ins_pos , 1 )"		637975	0		=			
ANR	638034	Identifier	opcode		637975	0					
ANR	638035	CallExpression	"get_ins_part ( ins_pos , 1 )"		637975	1					
ANR	638036	Callee	get_ins_part		637975	0					
ANR	638037	Identifier	get_ins_part		637975	0					
ANR	638038	ArgumentList	ins_pos		637975	1					
ANR	638039	Argument	ins_pos		637975	0					
ANR	638040	Identifier	ins_pos		637975	0					
ANR	638041	Argument	1		637975	1					
ANR	638042	PrimaryExpression	1		637975	0					
ANR	638043	IfStatement	if ( ( opcode & 0xF0 ) == 0x30 )		637975	9					
ANR	638044	Condition	( opcode & 0xF0 ) == 0x30	466:5:10640:10662	637975	0	True				
ANR	638045	EqualityExpression	( opcode & 0xF0 ) == 0x30		637975	0		==			
ANR	638046	BitAndExpression	opcode & 0xF0		637975	0		&			
ANR	638047	Identifier	opcode		637975	0					
ANR	638048	PrimaryExpression	0xF0		637975	1					
ANR	638049	PrimaryExpression	0x30		637975	1					
ANR	638050	CompoundStatement		15:30:281:281	637975	1					
ANR	638051	ExpressionStatement	two_ins = opcode & 0x0F	467:2:10669:10692	637975	0	True				
ANR	638052	AssignmentExpression	two_ins = opcode & 0x0F		637975	0		=			
ANR	638053	Identifier	two_ins		637975	0					
ANR	638054	BitAndExpression	opcode & 0x0F		637975	1		&			
ANR	638055	Identifier	opcode		637975	0					
ANR	638056	PrimaryExpression	0x0F		637975	1					
ANR	638057	IfStatement	if ( two_ins < 4 )		637975	1					
ANR	638058	Condition	two_ins < 4	468:5:10699:10709	637975	0	True				
ANR	638059	RelationalExpression	two_ins < 4		637975	0		<			
ANR	638060	Identifier	two_ins		637975	0					
ANR	638061	PrimaryExpression	4		637975	1					
ANR	638062	CompoundStatement		17:18:328:328	637975	1					
ANR	638063	ExpressionStatement	two_ins += 0xF	469:3:10717:10731	637975	0	True				
ANR	638064	AssignmentExpression	two_ins += 0xF		637975	0		+=			
ANR	638065	Identifier	two_ins		637975	0					
ANR	638066	PrimaryExpression	0xF		637975	1					
ANR	638067	ElseStatement	else		637975	0					
ANR	638068	CompoundStatement		20:8:361:361	637975	0					
ANR	638069	ExpressionStatement	two_ins = 0	472:2:10749:10760	637975	0	True				
ANR	638070	AssignmentExpression	two_ins = 0		637975	0		=			
ANR	638071	Identifier	two_ins		637975	0					
ANR	638072	PrimaryExpression	0		637975	1					
ANR	638073	IfStatement	if ( two_ins )		637975	10					
ANR	638074	Condition	two_ins	476:5:10802:10808	637975	0	True				
ANR	638075	Identifier	two_ins		637975	0					
ANR	638076	CompoundStatement		25:14:427:427	637975	1					
ANR	638077	ExpressionStatement	"ins1 = do_decode ( 1 , ins_pos , two_ins , & next_ins1_pos , & hash_code , & err_code )"	477:2:10815:10891	637975	0	True				
ANR	638078	AssignmentExpression	"ins1 = do_decode ( 1 , ins_pos , two_ins , & next_ins1_pos , & hash_code , & err_code )"		637975	0		=			
ANR	638079	Identifier	ins1		637975	0					
ANR	638080	CallExpression	"do_decode ( 1 , ins_pos , two_ins , & next_ins1_pos , & hash_code , & err_code )"		637975	1					
ANR	638081	Callee	do_decode		637975	0					
ANR	638082	Identifier	do_decode		637975	0					
ANR	638083	ArgumentList	1		637975	1					
ANR	638084	Argument	1		637975	0					
ANR	638085	PrimaryExpression	1		637975	0					
ANR	638086	Argument	ins_pos		637975	1					
ANR	638087	Identifier	ins_pos		637975	0					
ANR	638088	Argument	two_ins		637975	2					
ANR	638089	Identifier	two_ins		637975	0					
ANR	638090	Argument	& next_ins1_pos		637975	3					
ANR	638091	UnaryOperationExpression	& next_ins1_pos		637975	0					
ANR	638092	UnaryOperator	&		637975	0					
ANR	638093	Identifier	next_ins1_pos		637975	1					
ANR	638094	Argument	& hash_code		637975	4					
ANR	638095	UnaryOperationExpression	& hash_code		637975	0					
ANR	638096	UnaryOperator	&		637975	0					
ANR	638097	Identifier	hash_code		637975	1					
ANR	638098	Argument	& err_code		637975	5					
ANR	638099	UnaryOperationExpression	& err_code		637975	0					
ANR	638100	UnaryOperator	&		637975	0					
ANR	638101	Identifier	err_code		637975	1					
ANR	638102	IfStatement	if ( err_code < 0 )		637975	1					
ANR	638103	Condition	err_code < 0	478:6:10899:10910	637975	0	True				
ANR	638104	RelationalExpression	err_code < 0		637975	0		<			
ANR	638105	Identifier	err_code		637975	0					
ANR	638106	PrimaryExpression	0		637975	1					
ANR	638107	CompoundStatement		27:20:529:529	637975	1					
ANR	638108	ExpressionStatement	free ( ins1 )	479:3:10918:10929	637975	0	True				
ANR	638109	CallExpression	free ( ins1 )		637975	0					
ANR	638110	Callee	free		637975	0					
ANR	638111	Identifier	free		637975	0					
ANR	638112	ArgumentList	ins1		637975	1					
ANR	638113	Argument	ins1		637975	0					
ANR	638114	Identifier	ins1		637975	0					
ANR	638115	ReturnStatement	return NULL ;	480:3:10934:10945	637975	1	True				
ANR	638116	Identifier	NULL		637975	0					
ANR	638117	ExpressionStatement	"ins2 = do_decode ( next_ins1_pos + 1 , ins_pos , two_ins , & next_ins2_pos , NULL , & err_code )"	482:2:10953:11039	637975	2	True				
ANR	638118	AssignmentExpression	"ins2 = do_decode ( next_ins1_pos + 1 , ins_pos , two_ins , & next_ins2_pos , NULL , & err_code )"		637975	0		=			
ANR	638119	Identifier	ins2		637975	0					
ANR	638120	CallExpression	"do_decode ( next_ins1_pos + 1 , ins_pos , two_ins , & next_ins2_pos , NULL , & err_code )"		637975	1					
ANR	638121	Callee	do_decode		637975	0					
ANR	638122	Identifier	do_decode		637975	0					
ANR	638123	ArgumentList	next_ins1_pos + 1		637975	1					
ANR	638124	Argument	next_ins1_pos + 1		637975	0					
ANR	638125	AdditiveExpression	next_ins1_pos + 1		637975	0		+			
ANR	638126	Identifier	next_ins1_pos		637975	0					
ANR	638127	PrimaryExpression	1		637975	1					
ANR	638128	Argument	ins_pos		637975	1					
ANR	638129	Identifier	ins_pos		637975	0					
ANR	638130	Argument	two_ins		637975	2					
ANR	638131	Identifier	two_ins		637975	0					
ANR	638132	Argument	& next_ins2_pos		637975	3					
ANR	638133	UnaryOperationExpression	& next_ins2_pos		637975	0					
ANR	638134	UnaryOperator	&		637975	0					
ANR	638135	Identifier	next_ins2_pos		637975	1					
ANR	638136	Argument	NULL		637975	4					
ANR	638137	Identifier	NULL		637975	0					
ANR	638138	Argument	& err_code		637975	5					
ANR	638139	UnaryOperationExpression	& err_code		637975	0					
ANR	638140	UnaryOperator	&		637975	0					
ANR	638141	Identifier	err_code		637975	1					
ANR	638142	IfStatement	if ( err_code < 0 )		637975	3					
ANR	638143	Condition	err_code < 0	483:6:11047:11058	637975	0	True				
ANR	638144	RelationalExpression	err_code < 0		637975	0		<			
ANR	638145	Identifier	err_code		637975	0					
ANR	638146	PrimaryExpression	0		637975	1					
ANR	638147	CompoundStatement		32:20:677:677	637975	1					
ANR	638148	ExpressionStatement	free ( ins1 )	484:3:11066:11077	637975	0	True				
ANR	638149	CallExpression	free ( ins1 )		637975	0					
ANR	638150	Callee	free		637975	0					
ANR	638151	Identifier	free		637975	0					
ANR	638152	ArgumentList	ins1		637975	1					
ANR	638153	Argument	ins1		637975	0					
ANR	638154	Identifier	ins1		637975	0					
ANR	638155	ExpressionStatement	free ( ins2 )	485:3:11082:11093	637975	1	True				
ANR	638156	CallExpression	free ( ins2 )		637975	0					
ANR	638157	Callee	free		637975	0					
ANR	638158	Identifier	free		637975	0					
ANR	638159	ArgumentList	ins2		637975	1					
ANR	638160	Argument	ins2		637975	0					
ANR	638161	Identifier	ins2		637975	0					
ANR	638162	ReturnStatement	return NULL ;	486:3:11098:11109	637975	2	True				
ANR	638163	Identifier	NULL		637975	0					
ANR	638164	ExpressionStatement	* next_ins_pos = next_ins2_pos	488:2:11117:11146	637975	4	True				
ANR	638165	AssignmentExpression	* next_ins_pos = next_ins2_pos		637975	0		=			
ANR	638166	UnaryOperationExpression	* next_ins_pos		637975	0					
ANR	638167	UnaryOperator	*		637975	0					
ANR	638168	Identifier	next_ins_pos		637975	1					
ANR	638169	Identifier	next_ins2_pos		637975	1					
ANR	638170	IfStatement	if ( hash_code == 0xF0 || hash_code == 0xF1 )		637975	5					
ANR	638171	Condition	hash_code == 0xF0 || hash_code == 0xF1	490:6:11155:11192	637975	0	True				
ANR	638172	OrExpression	hash_code == 0xF0 || hash_code == 0xF1		637975	0		||			
ANR	638173	EqualityExpression	hash_code == 0xF0		637975	0		==			
ANR	638174	Identifier	hash_code		637975	0					
ANR	638175	PrimaryExpression	0xF0		637975	1					
ANR	638176	EqualityExpression	hash_code == 0xF1		637975	1		==			
ANR	638177	Identifier	hash_code		637975	0					
ANR	638178	PrimaryExpression	0xF1		637975	1					
ANR	638179	CompoundStatement		39:46:811:811	637975	1					
ANR	638180	ExpressionStatement	"aux = strcat_dup ( ins2 , "" || "" , 1 )"	491:3:11200:11233	637975	0	True				
ANR	638181	AssignmentExpression	"aux = strcat_dup ( ins2 , "" || "" , 1 )"		637975	0		=			
ANR	638182	Identifier	aux		637975	0					
ANR	638183	CallExpression	"strcat_dup ( ins2 , "" || "" , 1 )"		637975	1					
ANR	638184	Callee	strcat_dup		637975	0					
ANR	638185	Identifier	strcat_dup		637975	0					
ANR	638186	ArgumentList	ins2		637975	1					
ANR	638187	Argument	ins2		637975	0					
ANR	638188	Identifier	ins2		637975	0					
ANR	638189	Argument	""" || """		637975	1					
ANR	638190	PrimaryExpression	""" || """		637975	0					
ANR	638191	Argument	1		637975	2					
ANR	638192	PrimaryExpression	1		637975	0					
ANR	638193	ExpressionStatement	"ins_res = strcat_dup ( aux , ins1 , 1 )"	492:3:11238:11272	637975	1	True				
ANR	638194	AssignmentExpression	"ins_res = strcat_dup ( aux , ins1 , 1 )"		637975	0		=			
ANR	638195	Identifier	ins_res		637975	0					
ANR	638196	CallExpression	"strcat_dup ( aux , ins1 , 1 )"		637975	1					
ANR	638197	Callee	strcat_dup		637975	0					
ANR	638198	Identifier	strcat_dup		637975	0					
ANR	638199	ArgumentList	aux		637975	1					
ANR	638200	Argument	aux		637975	0					
ANR	638201	Identifier	aux		637975	0					
ANR	638202	Argument	ins1		637975	1					
ANR	638203	Identifier	ins1		637975	0					
ANR	638204	Argument	1		637975	2					
ANR	638205	PrimaryExpression	1		637975	0					
ANR	638206	ExpressionStatement	free ( ins1 )	493:3:11277:11287	637975	2	True				
ANR	638207	CallExpression	free ( ins1 )		637975	0					
ANR	638208	Callee	free		637975	0					
ANR	638209	Identifier	free		637975	0					
ANR	638210	ArgumentList	ins1		637975	1					
ANR	638211	Argument	ins1		637975	0					
ANR	638212	Identifier	ins1		637975	0					
ANR	638213	ElseStatement	else		637975	0					
ANR	638214	CompoundStatement		43:9:914:914	637975	0					
ANR	638215	ExpressionStatement	"aux = strcat_dup ( ins1 , "" || "" , 1 )"	495:3:11303:11336	637975	0	True				
ANR	638216	AssignmentExpression	"aux = strcat_dup ( ins1 , "" || "" , 1 )"		637975	0		=			
ANR	638217	Identifier	aux		637975	0					
ANR	638218	CallExpression	"strcat_dup ( ins1 , "" || "" , 1 )"		637975	1					
ANR	638219	Callee	strcat_dup		637975	0					
ANR	638220	Identifier	strcat_dup		637975	0					
ANR	638221	ArgumentList	ins1		637975	1					
ANR	638222	Argument	ins1		637975	0					
ANR	638223	Identifier	ins1		637975	0					
ANR	638224	Argument	""" || """		637975	1					
ANR	638225	PrimaryExpression	""" || """		637975	0					
ANR	638226	Argument	1		637975	2					
ANR	638227	PrimaryExpression	1		637975	0					
ANR	638228	ExpressionStatement	"ins_res = strcat_dup ( aux , ins2 , 1 )"	496:3:11341:11375	637975	1	True				
ANR	638229	AssignmentExpression	"ins_res = strcat_dup ( aux , ins2 , 1 )"		637975	0		=			
ANR	638230	Identifier	ins_res		637975	0					
ANR	638231	CallExpression	"strcat_dup ( aux , ins2 , 1 )"		637975	1					
ANR	638232	Callee	strcat_dup		637975	0					
ANR	638233	Identifier	strcat_dup		637975	0					
ANR	638234	ArgumentList	aux		637975	1					
ANR	638235	Argument	aux		637975	0					
ANR	638236	Identifier	aux		637975	0					
ANR	638237	Argument	ins2		637975	1					
ANR	638238	Identifier	ins2		637975	0					
ANR	638239	Argument	1		637975	2					
ANR	638240	PrimaryExpression	1		637975	0					
ANR	638241	ExpressionStatement	free ( ins2 )	497:3:11380:11390	637975	2	True				
ANR	638242	CallExpression	free ( ins2 )		637975	0					
ANR	638243	Callee	free		637975	0					
ANR	638244	Identifier	free		637975	0					
ANR	638245	ArgumentList	ins2		637975	1					
ANR	638246	Argument	ins2		637975	0					
ANR	638247	Identifier	ins2		637975	0					
ANR	638248	ExpressionStatement	* next_ins_pos = next_ins1_pos + next_ins2_pos + 1	499:2:11398:11447	637975	6	True				
ANR	638249	AssignmentExpression	* next_ins_pos = next_ins1_pos + next_ins2_pos + 1		637975	0		=			
ANR	638250	UnaryOperationExpression	* next_ins_pos		637975	0					
ANR	638251	UnaryOperator	*		637975	0					
ANR	638252	Identifier	next_ins_pos		637975	1					
ANR	638253	AdditiveExpression	next_ins1_pos + next_ins2_pos + 1		637975	1		+			
ANR	638254	Identifier	next_ins1_pos		637975	0					
ANR	638255	AdditiveExpression	next_ins2_pos + 1		637975	1		+			
ANR	638256	Identifier	next_ins2_pos		637975	0					
ANR	638257	PrimaryExpression	1		637975	1					
ANR	638258	IfStatement	if ( * next_ins_pos != two_ins )		637975	7					
ANR	638259	Condition	* next_ins_pos != two_ins	500:5:11454:11477	637975	0	True				
ANR	638260	EqualityExpression	* next_ins_pos != two_ins		637975	0		!=			
ANR	638261	UnaryOperationExpression	* next_ins_pos		637975	0					
ANR	638262	UnaryOperator	*		637975	0					
ANR	638263	Identifier	next_ins_pos		637975	1					
ANR	638264	Identifier	two_ins		637975	1					
ANR	638265	CompoundStatement		49:31:1096:1096	637975	1					
ANR	638266	ExpressionStatement	err_code = - 1	502:3:11542:11555	637975	0	True				
ANR	638267	AssignmentExpression	err_code = - 1		637975	0		=			
ANR	638268	Identifier	err_code		637975	0					
ANR	638269	UnaryOperationExpression	- 1		637975	1					
ANR	638270	UnaryOperator	-		637975	0					
ANR	638271	PrimaryExpression	1		637975	1					
ANR	638272	ExpressionStatement	free ( ins_res )	503:3:11560:11574	637975	1	True				
ANR	638273	CallExpression	free ( ins_res )		637975	0					
ANR	638274	Callee	free		637975	0					
ANR	638275	Identifier	free		637975	0					
ANR	638276	ArgumentList	ins_res		637975	1					
ANR	638277	Argument	ins_res		637975	0					
ANR	638278	Identifier	ins_res		637975	0					
ANR	638279	ReturnStatement	return NULL ;	504:3:11579:11590	637975	2	True				
ANR	638280	Identifier	NULL		637975	0					
ANR	638281	ElseStatement	else		637975	0					
ANR	638282	CompoundStatement		55:8:1220:1220	637975	0					
ANR	638283	ExpressionStatement	"ins_res = do_decode ( 0 , ins_pos , two_ins , & next_ins1_pos , & hash_code , & err_code )"	507:2:11608:11687	637975	0	True				
ANR	638284	AssignmentExpression	"ins_res = do_decode ( 0 , ins_pos , two_ins , & next_ins1_pos , & hash_code , & err_code )"		637975	0		=			
ANR	638285	Identifier	ins_res		637975	0					
ANR	638286	CallExpression	"do_decode ( 0 , ins_pos , two_ins , & next_ins1_pos , & hash_code , & err_code )"		637975	1					
ANR	638287	Callee	do_decode		637975	0					
ANR	638288	Identifier	do_decode		637975	0					
ANR	638289	ArgumentList	0		637975	1					
ANR	638290	Argument	0		637975	0					
ANR	638291	PrimaryExpression	0		637975	0					
ANR	638292	Argument	ins_pos		637975	1					
ANR	638293	Identifier	ins_pos		637975	0					
ANR	638294	Argument	two_ins		637975	2					
ANR	638295	Identifier	two_ins		637975	0					
ANR	638296	Argument	& next_ins1_pos		637975	3					
ANR	638297	UnaryOperationExpression	& next_ins1_pos		637975	0					
ANR	638298	UnaryOperator	&		637975	0					
ANR	638299	Identifier	next_ins1_pos		637975	1					
ANR	638300	Argument	& hash_code		637975	4					
ANR	638301	UnaryOperationExpression	& hash_code		637975	0					
ANR	638302	UnaryOperator	&		637975	0					
ANR	638303	Identifier	hash_code		637975	1					
ANR	638304	Argument	& err_code		637975	5					
ANR	638305	UnaryOperationExpression	& err_code		637975	0					
ANR	638306	UnaryOperator	&		637975	0					
ANR	638307	Identifier	err_code		637975	1					
ANR	638308	IfStatement	if ( err_code < 0 )		637975	1					
ANR	638309	Condition	err_code < 0	508:6:11695:11706	637975	0	True				
ANR	638310	RelationalExpression	err_code < 0		637975	0		<			
ANR	638311	Identifier	err_code		637975	0					
ANR	638312	PrimaryExpression	0		637975	1					
ANR	638313	CompoundStatement		57:20:1325:1325	637975	1					
ANR	638314	ExpressionStatement	free ( ins_res )	509:3:11714:11728	637975	0	True				
ANR	638315	CallExpression	free ( ins_res )		637975	0					
ANR	638316	Callee	free		637975	0					
ANR	638317	Identifier	free		637975	0					
ANR	638318	ArgumentList	ins_res		637975	1					
ANR	638319	Argument	ins_res		637975	0					
ANR	638320	Identifier	ins_res		637975	0					
ANR	638321	ReturnStatement	return NULL ;	510:3:11733:11744	637975	1	True				
ANR	638322	Identifier	NULL		637975	0					
ANR	638323	ExpressionStatement	* next_ins_pos = next_ins1_pos	512:2:11752:11781	637975	2	True				
ANR	638324	AssignmentExpression	* next_ins_pos = next_ins1_pos		637975	0		=			
ANR	638325	UnaryOperationExpression	* next_ins_pos		637975	0					
ANR	638326	UnaryOperator	*		637975	0					
ANR	638327	Identifier	next_ins_pos		637975	1					
ANR	638328	Identifier	next_ins1_pos		637975	1					
ANR	638329	ReturnStatement	return ins_res ;	515:1:11788:11802	637975	11	True				
ANR	638330	Identifier	ins_res		637975	0					
ANR	638331	ReturnType	char *		637975	1					
ANR	638332	Identifier	c55plus_decode		637975	2					
ANR	638333	ParameterList	"ut32 ins_pos , ut32 * next_ins_pos"		637975	3					
ANR	638334	Parameter	ut32 ins_pos	452:21:10349:10360	637975	0	True				
ANR	638335	ParameterType	ut32		637975	0					
ANR	638336	Identifier	ins_pos		637975	1					
ANR	638337	Parameter	ut32 * next_ins_pos	452:35:10363:10380	637975	1	True				
ANR	638338	ParameterType	ut32 *		637975	0					
ANR	638339	Identifier	next_ins_pos		637975	1					
ANR	638340	CFGEntryNode	ENTRY		637975		True				
ANR	638341	CFGExitNode	EXIT		637975		True				
ANR	638342	Symbol	strcat_dup		637975						
ANR	638343	Symbol	& err_code		637975						
ANR	638344	Symbol	NULL		637975						
ANR	638345	Symbol	next_ins_pos		637975						
ANR	638346	Symbol	aux		637975						
ANR	638347	Symbol	ins_pos		637975						
ANR	638348	Symbol	err_code		637975						
ANR	638349	Symbol	& hash_code		637975						
ANR	638350	Symbol	& next_ins2_pos		637975						
ANR	638351	Symbol	ins_res		637975						
ANR	638352	Symbol	opcode		637975						
ANR	638353	Symbol	next_ins1_pos		637975						
ANR	638354	Symbol	ins1		637975						
ANR	638355	Symbol	do_decode		637975						
ANR	638356	Symbol	next_ins2_pos		637975						
ANR	638357	Symbol	hash_code		637975						
ANR	638358	Symbol	ins_buff_len		637975						
ANR	638359	Symbol	ins2		637975						
ANR	638360	Symbol	two_ins		637975						
ANR	638361	Symbol	get_ins_part		637975						
ANR	638362	Symbol	& next_ins1_pos		637975						
ANR	638363	Symbol	* next_ins_pos		637975						
ANR	638364	Function	is_linear_circular	518:0:11807:12025							
ANR	638365	FunctionDef	is_linear_circular (ut32 ins_bits)		638364	0					
ANR	638366	CompoundStatement		518:46:11853:12025	638364	0					
ANR	638367	IdentifierDeclStatement	"ut8 op , op2 , op3 ;"	519:1:11856:11872	638364	0	True				
ANR	638368	IdentifierDecl	op		638364	0					
ANR	638369	IdentifierDeclType	ut8		638364	0					
ANR	638370	Identifier	op		638364	1					
ANR	638371	IdentifierDecl	op2		638364	1					
ANR	638372	IdentifierDeclType	ut8		638364	0					
ANR	638373	Identifier	op2		638364	1					
ANR	638374	IdentifierDecl	op3		638364	2					
ANR	638375	IdentifierDeclType	ut8		638364	0					
ANR	638376	Identifier	op3		638364	1					
ANR	638377	ExpressionStatement	op = ( ins_bits >> 6 ) | 16 * ( ins_bits & 3 )	520:1:11875:11917	638364	1	True				
ANR	638378	AssignmentExpression	op = ( ins_bits >> 6 ) | 16 * ( ins_bits & 3 )		638364	0		=			
ANR	638379	Identifier	op		638364	0					
ANR	638380	InclusiveOrExpression	( ins_bits >> 6 ) | 16 * ( ins_bits & 3 )		638364	1		|			
ANR	638381	ShiftExpression	ins_bits >> 6		638364	0		>>			
ANR	638382	Identifier	ins_bits		638364	0					
ANR	638383	PrimaryExpression	6		638364	1					
ANR	638384	MultiplicativeExpression	16 * ( ins_bits & 3 )		638364	1		*			
ANR	638385	PrimaryExpression	16		638364	0					
ANR	638386	BitAndExpression	ins_bits & 3		638364	1		&			
ANR	638387	Identifier	ins_bits		638364	0					
ANR	638388	PrimaryExpression	3		638364	1					
ANR	638389	ExpressionStatement	op2 = ( ins_bits >> 2 ) & 0xF	521:1:11920:11947	638364	2	True				
ANR	638390	AssignmentExpression	op2 = ( ins_bits >> 2 ) & 0xF		638364	0		=			
ANR	638391	Identifier	op2		638364	0					
ANR	638392	BitAndExpression	( ins_bits >> 2 ) & 0xF		638364	1		&			
ANR	638393	ShiftExpression	ins_bits >> 2		638364	0		>>			
ANR	638394	Identifier	ins_bits		638364	0					
ANR	638395	PrimaryExpression	2		638364	1					
ANR	638396	PrimaryExpression	0xF		638364	1					
ANR	638397	ExpressionStatement	op3 = op2 & 0xF	522:1:11950:11965	638364	3	True				
ANR	638398	AssignmentExpression	op3 = op2 & 0xF		638364	0		=			
ANR	638399	Identifier	op3		638364	0					
ANR	638400	BitAndExpression	op2 & 0xF		638364	1		&			
ANR	638401	Identifier	op2		638364	0					
ANR	638402	PrimaryExpression	0xF		638364	1					
ANR	638403	ReturnStatement	return ( op == 26 || op == 30 || ( op3 > 7 && op3 != 15 ) ) ;	523:1:11968:12023	638364	4	True				
ANR	638404	OrExpression	op == 26 || op == 30 || ( op3 > 7 && op3 != 15 )		638364	0		||			
ANR	638405	EqualityExpression	op == 26		638364	0		==			
ANR	638406	Identifier	op		638364	0					
ANR	638407	PrimaryExpression	26		638364	1					
ANR	638408	OrExpression	op == 30 || ( op3 > 7 && op3 != 15 )		638364	1		||			
ANR	638409	EqualityExpression	op == 30		638364	0		==			
ANR	638410	Identifier	op		638364	0					
ANR	638411	PrimaryExpression	30		638364	1					
ANR	638412	AndExpression	op3 > 7 && op3 != 15		638364	1		&&			
ANR	638413	RelationalExpression	op3 > 7		638364	0		>			
ANR	638414	Identifier	op3		638364	0					
ANR	638415	PrimaryExpression	7		638364	1					
ANR	638416	EqualityExpression	op3 != 15		638364	1		!=			
ANR	638417	Identifier	op3		638364	0					
ANR	638418	PrimaryExpression	15		638364	1					
ANR	638419	ReturnType	static bool		638364	1					
ANR	638420	Identifier	is_linear_circular		638364	2					
ANR	638421	ParameterList	ut32 ins_bits		638364	3					
ANR	638422	Parameter	ut32 ins_bits	518:31:11838:11850	638364	0	True				
ANR	638423	ParameterType	ut32		638364	0					
ANR	638424	Identifier	ins_bits		638364	1					
ANR	638425	CFGEntryNode	ENTRY		638364		True				
ANR	638426	CFGExitNode	EXIT		638364		True				
ANR	638427	Symbol	op2		638364						
ANR	638428	Symbol	op		638364						
ANR	638429	Symbol	op3		638364						
ANR	638430	Symbol	ins_bits		638364						
ANR	638431	Function	get_token_decoded	526:0:12028:20292							
ANR	638432	FunctionDef	"get_token_decoded (st32 hash_code , char * ins_token , ut32 ins_token_len , char * reg_arg , ut32 * ret_ins_bits , ut32 * ret_reg_len , ut32 magic_value , ut32 ins_pos , ut32 ins_len , ut8 two_ins , int * err_code)"		638431	0					
ANR	638433	CompoundStatement		528:57:12242:20292	638431	0					
ANR	638434	IdentifierDeclStatement	"ut32 tok_op , ins_bits ;"	529:1:12245:12266	638431	0	True				
ANR	638435	IdentifierDecl	tok_op		638431	0					
ANR	638436	IdentifierDeclType	ut32		638431	0					
ANR	638437	Identifier	tok_op		638431	1					
ANR	638438	IdentifierDecl	ins_bits		638431	1					
ANR	638439	IdentifierDeclType	ut32		638431	0					
ANR	638440	Identifier	ins_bits		638431	1					
ANR	638441	IdentifierDeclStatement	char * res = NULL ;	530:1:12269:12285	638431	1	True				
ANR	638442	IdentifierDecl	* res = NULL		638431	0					
ANR	638443	IdentifierDeclType	char *		638431	0					
ANR	638444	Identifier	res		638431	1					
ANR	638445	AssignmentExpression	* res = NULL		638431	2		=			
ANR	638446	Identifier	NULL		638431	0					
ANR	638447	Identifier	NULL		638431	1					
ANR	638448	IdentifierDeclStatement	char buff_aux [ 512 ] ;	531:1:12288:12306	638431	2	True				
ANR	638449	IdentifierDecl	buff_aux [ 512 ]		638431	0					
ANR	638450	IdentifierDeclType	char [ 512 ]		638431	0					
ANR	638451	Identifier	buff_aux		638431	1					
ANR	638452	PrimaryExpression	512		638431	2					
ANR	638453	IdentifierDeclStatement	char * aux = NULL ;	532:1:12309:12325	638431	3	True				
ANR	638454	IdentifierDecl	* aux = NULL		638431	0					
ANR	638455	IdentifierDeclType	char *		638431	0					
ANR	638456	Identifier	aux		638431	1					
ANR	638457	AssignmentExpression	* aux = NULL		638431	2		=			
ANR	638458	Identifier	NULL		638431	0					
ANR	638459	Identifier	NULL		638431	1					
ANR	638460	IdentifierDeclStatement	"ut32 ret_len = 0 , flag ;"	533:1:12328:12350	638431	4	True				
ANR	638461	IdentifierDecl	ret_len = 0		638431	0					
ANR	638462	IdentifierDeclType	ut32		638431	0					
ANR	638463	Identifier	ret_len		638431	1					
ANR	638464	AssignmentExpression	ret_len = 0		638431	2		=			
ANR	638465	Identifier	ret_len		638431	0					
ANR	638466	PrimaryExpression	0		638431	1					
ANR	638467	IdentifierDecl	flag		638431	1					
ANR	638468	IdentifierDeclType	ut32		638431	0					
ANR	638469	Identifier	flag		638431	1					
ANR	638470	ExpressionStatement	* ret_ins_bits = 0	535:1:12354:12371	638431	5	True				
ANR	638471	AssignmentExpression	* ret_ins_bits = 0		638431	0		=			
ANR	638472	UnaryOperationExpression	* ret_ins_bits		638431	0					
ANR	638473	UnaryOperator	*		638431	0					
ANR	638474	Identifier	ret_ins_bits		638431	1					
ANR	638475	PrimaryExpression	0		638431	1					
ANR	638476	ExpressionStatement	* ret_reg_len = 0	536:1:12374:12390	638431	6	True				
ANR	638477	AssignmentExpression	* ret_reg_len = 0		638431	0		=			
ANR	638478	UnaryOperationExpression	* ret_reg_len		638431	0					
ANR	638479	UnaryOperator	*		638431	0					
ANR	638480	Identifier	ret_reg_len		638431	1					
ANR	638481	PrimaryExpression	0		638431	1					
ANR	638482	ExpressionStatement	"ins_bits = get_ins_bits ( hash_code , ins_pos , ins_token , ins_token_len , magic_value , err_code )"	538:1:12394:12486	638431	7	True				
ANR	638483	AssignmentExpression	"ins_bits = get_ins_bits ( hash_code , ins_pos , ins_token , ins_token_len , magic_value , err_code )"		638431	0		=			
ANR	638484	Identifier	ins_bits		638431	0					
ANR	638485	CallExpression	"get_ins_bits ( hash_code , ins_pos , ins_token , ins_token_len , magic_value , err_code )"		638431	1					
ANR	638486	Callee	get_ins_bits		638431	0					
ANR	638487	Identifier	get_ins_bits		638431	0					
ANR	638488	ArgumentList	hash_code		638431	1					
ANR	638489	Argument	hash_code		638431	0					
ANR	638490	Identifier	hash_code		638431	0					
ANR	638491	Argument	ins_pos		638431	1					
ANR	638492	Identifier	ins_pos		638431	0					
ANR	638493	Argument	ins_token		638431	2					
ANR	638494	Identifier	ins_token		638431	0					
ANR	638495	Argument	ins_token_len		638431	3					
ANR	638496	Identifier	ins_token_len		638431	0					
ANR	638497	Argument	magic_value		638431	4					
ANR	638498	Identifier	magic_value		638431	0					
ANR	638499	Argument	err_code		638431	5					
ANR	638500	Identifier	err_code		638431	0					
ANR	638501	IfStatement	if ( * err_code < 0 )		638431	8					
ANR	638502	Condition	* err_code < 0	539:5:12493:12505	638431	0	True				
ANR	638503	RelationalExpression	* err_code < 0		638431	0		<			
ANR	638504	UnaryOperationExpression	* err_code		638431	0					
ANR	638505	UnaryOperator	*		638431	0					
ANR	638506	Identifier	err_code		638431	1					
ANR	638507	PrimaryExpression	0		638431	1					
ANR	638508	CompoundStatement		12:20:265:265	638431	1					
ANR	638509	ReturnStatement	return NULL ;	540:2:12512:12523	638431	0	True				
ANR	638510	Identifier	NULL		638431	0					
ANR	638511	ExpressionStatement	tok_op = * ins_token - 0x23	542:1:12529:12555	638431	9	True				
ANR	638512	AssignmentExpression	tok_op = * ins_token - 0x23		638431	0		=			
ANR	638513	Identifier	tok_op		638431	0					
ANR	638514	AdditiveExpression	* ins_token - 0x23		638431	1		-			
ANR	638515	UnaryOperationExpression	* ins_token		638431	0					
ANR	638516	UnaryOperator	*		638431	0					
ANR	638517	Identifier	ins_token		638431	1					
ANR	638518	PrimaryExpression	0x23		638431	1					
ANR	638519	IfStatement	if ( C55PLUS_DEBUG )		638431	10					
ANR	638520	Condition	C55PLUS_DEBUG	544:5:12563:12575	638431	0	True				
ANR	638521	Identifier	C55PLUS_DEBUG		638431	0					
ANR	638522	CompoundStatement		17:20:335:335	638431	1					
ANR	638523	ExpressionStatement	"printf ( ""WAY ins_bits: OP = %d 0x%x %s %d %d\\n"" , tok_op , ins_bits , ins_token , ins_token_len , ins_pos )"	545:2:12582:12682	638431	0	True				
ANR	638524	CallExpression	"printf ( ""WAY ins_bits: OP = %d 0x%x %s %d %d\\n"" , tok_op , ins_bits , ins_token , ins_token_len , ins_pos )"		638431	0					
ANR	638525	Callee	printf		638431	0					
ANR	638526	Identifier	printf		638431	0					
ANR	638527	ArgumentList	"""WAY ins_bits: OP = %d 0x%x %s %d %d\\n"""		638431	1					
ANR	638528	Argument	"""WAY ins_bits: OP = %d 0x%x %s %d %d\\n"""		638431	0					
ANR	638529	PrimaryExpression	"""WAY ins_bits: OP = %d 0x%x %s %d %d\\n"""		638431	0					
ANR	638530	Argument	tok_op		638431	1					
ANR	638531	Identifier	tok_op		638431	0					
ANR	638532	Argument	ins_bits		638431	2					
ANR	638533	Identifier	ins_bits		638431	0					
ANR	638534	Argument	ins_token		638431	3					
ANR	638535	Identifier	ins_token		638431	0					
ANR	638536	Argument	ins_token_len		638431	4					
ANR	638537	Identifier	ins_token_len		638431	0					
ANR	638538	Argument	ins_pos		638431	5					
ANR	638539	Identifier	ins_pos		638431	0					
ANR	638540	ExpressionStatement	getchar ( )	546:2:12686:12695	638431	1	True				
ANR	638541	CallExpression	getchar ( )		638431	0					
ANR	638542	Callee	getchar		638431	0					
ANR	638543	Identifier	getchar		638431	0					
ANR	638544	ArgumentList			638431	1					
ANR	638545	SwitchStatement	switch ( tok_op )		638431	11					
ANR	638546	Condition	tok_op	549:9:12710:12715	638431	0	True				
ANR	638547	Identifier	tok_op		638431	0					
ANR	638548	CompoundStatement		22:17:475:475	638431	1					
ANR	638549	Label	case 30 :	550:1:12721:12728	638431	0	True				
ANR	638550	Label	case 31 :	551:1:12731:12738	638431	1	True				
ANR	638551	Label	case 32 :	552:1:12741:12748	638431	2	True				
ANR	638552	Label	case 33 :	553:1:12751:12758	638431	3	True				
ANR	638553	Label	case 43 :	554:1:12761:12768	638431	4	True				
ANR	638554	Label	case 62 :	555:1:12771:12778	638431	5	True				
ANR	638555	Label	case 63 :	556:1:12781:12788	638431	6	True				
ANR	638556	Label	case 64 :	557:1:12791:12798	638431	7	True				
ANR	638557	Label	case 65 :	558:1:12801:12808	638431	8	True				
ANR	638558	IfStatement	if ( ! reg_arg || * reg_arg == '\\0' )		638431	9					
ANR	638559	Condition	! reg_arg || * reg_arg == '\\0'	559:6:12816:12843	638431	0	True				
ANR	638560	OrExpression	! reg_arg || * reg_arg == '\\0'		638431	0		||			
ANR	638561	UnaryOperationExpression	! reg_arg		638431	0					
ANR	638562	UnaryOperator	!		638431	0					
ANR	638563	Identifier	reg_arg		638431	1					
ANR	638564	EqualityExpression	* reg_arg == '\\0'		638431	1		==			
ANR	638565	UnaryOperationExpression	* reg_arg		638431	0					
ANR	638566	UnaryOperator	*		638431	0					
ANR	638567	Identifier	reg_arg		638431	1					
ANR	638568	PrimaryExpression	'\\0'		638431	1					
ANR	638569	CompoundStatement		32:36:603:603	638431	1					
ANR	638570	ExpressionStatement	"res = strdup ( ""<register>"" )"	560:3:12851:12877	638431	0	True				
ANR	638571	AssignmentExpression	"res = strdup ( ""<register>"" )"		638431	0		=			
ANR	638572	Identifier	res		638431	0					
ANR	638573	CallExpression	"strdup ( ""<register>"" )"		638431	1					
ANR	638574	Callee	strdup		638431	0					
ANR	638575	Identifier	strdup		638431	0					
ANR	638576	ArgumentList	"""<register>"""		638431	1					
ANR	638577	Argument	"""<register>"""		638431	0					
ANR	638578	PrimaryExpression	"""<register>"""		638431	0					
ANR	638579	GotoStatement	goto ret_decode ;	561:3:12882:12897	638431	1	True				
ANR	638580	Identifier	ret_decode		638431	0					
ANR	638581	ExpressionStatement	"res = decode_regis ( reg_arg , hash_code , ins_bits , ret_ins_bits , err_code )"	563:2:12905:12977	638431	10	True				
ANR	638582	AssignmentExpression	"res = decode_regis ( reg_arg , hash_code , ins_bits , ret_ins_bits , err_code )"		638431	0		=			
ANR	638583	Identifier	res		638431	0					
ANR	638584	CallExpression	"decode_regis ( reg_arg , hash_code , ins_bits , ret_ins_bits , err_code )"		638431	1					
ANR	638585	Callee	decode_regis		638431	0					
ANR	638586	Identifier	decode_regis		638431	0					
ANR	638587	ArgumentList	reg_arg		638431	1					
ANR	638588	Argument	reg_arg		638431	0					
ANR	638589	Identifier	reg_arg		638431	0					
ANR	638590	Argument	hash_code		638431	1					
ANR	638591	Identifier	hash_code		638431	0					
ANR	638592	Argument	ins_bits		638431	2					
ANR	638593	Identifier	ins_bits		638431	0					
ANR	638594	Argument	ret_ins_bits		638431	3					
ANR	638595	Identifier	ret_ins_bits		638431	0					
ANR	638596	Argument	err_code		638431	4					
ANR	638597	Identifier	err_code		638431	0					
ANR	638598	IfStatement	if ( * err_code < 0 )		638431	11					
ANR	638599	Condition	* err_code < 0	564:6:12985:12997	638431	0	True				
ANR	638600	RelationalExpression	* err_code < 0		638431	0		<			
ANR	638601	UnaryOperationExpression	* err_code		638431	0					
ANR	638602	UnaryOperator	*		638431	0					
ANR	638603	Identifier	err_code		638431	1					
ANR	638604	PrimaryExpression	0		638431	1					
ANR	638605	CompoundStatement		37:21:757:757	638431	1					
ANR	638606	ReturnStatement	return NULL ;	565:3:13005:13016	638431	0	True				
ANR	638607	Identifier	NULL		638431	0					
ANR	638608	BreakStatement	break ;	567:2:13024:13029	638431	12	True				
ANR	638609	Label	case 35 :	568:1:13032:13039	638431	13	True				
ANR	638610	ExpressionStatement	"res = ins_bits ? strdup ( "" || far()"" ) : NULL"	568:10:13041:13083	638431	14	True				
ANR	638611	AssignmentExpression	"res = ins_bits ? strdup ( "" || far()"" ) : NULL"		638431	0		=			
ANR	638612	Identifier	res		638431	0					
ANR	638613	ConditionalExpression	"ins_bits ? strdup ( "" || far()"" ) : NULL"		638431	1					
ANR	638614	Condition	ins_bits		638431	0					
ANR	638615	Identifier	ins_bits		638431	0					
ANR	638616	CallExpression	"strdup ( "" || far()"" )"		638431	1					
ANR	638617	Callee	strdup		638431	0					
ANR	638618	Identifier	strdup		638431	0					
ANR	638619	ArgumentList	""" || far()"""		638431	1					
ANR	638620	Argument	""" || far()"""		638431	0					
ANR	638621	PrimaryExpression	""" || far()"""		638431	0					
ANR	638622	Identifier	NULL		638431	2					
ANR	638623	BreakStatement	break ;	568:54:13085:13090	638431	15	True				
ANR	638624	Label	case 36 :	569:1:13093:13100	638431	16	True				
ANR	638625	ExpressionStatement	"res = ins_bits ? strdup ( "" || local()"" ) : NULL"	569:10:13102:13146	638431	17	True				
ANR	638626	AssignmentExpression	"res = ins_bits ? strdup ( "" || local()"" ) : NULL"		638431	0		=			
ANR	638627	Identifier	res		638431	0					
ANR	638628	ConditionalExpression	"ins_bits ? strdup ( "" || local()"" ) : NULL"		638431	1					
ANR	638629	Condition	ins_bits		638431	0					
ANR	638630	Identifier	ins_bits		638431	0					
ANR	638631	CallExpression	"strdup ( "" || local()"" )"		638431	1					
ANR	638632	Callee	strdup		638431	0					
ANR	638633	Identifier	strdup		638431	0					
ANR	638634	ArgumentList	""" || local()"""		638431	1					
ANR	638635	Argument	""" || local()"""		638431	0					
ANR	638636	PrimaryExpression	""" || local()"""		638431	0					
ANR	638637	Identifier	NULL		638431	2					
ANR	638638	BreakStatement	break ;	569:56:13148:13153	638431	18	True				
ANR	638639	Label	case 37 :	570:1:13156:13163	638431	19	True				
ANR	638640	ExpressionStatement	res = get_opers ( ins_bits )	570:10:13165:13190	638431	20	True				
ANR	638641	AssignmentExpression	res = get_opers ( ins_bits )		638431	0		=			
ANR	638642	Identifier	res		638431	0					
ANR	638643	CallExpression	get_opers ( ins_bits )		638431	1					
ANR	638644	Callee	get_opers		638431	0					
ANR	638645	Identifier	get_opers		638431	0					
ANR	638646	ArgumentList	ins_bits		638431	1					
ANR	638647	Argument	ins_bits		638431	0					
ANR	638648	Identifier	ins_bits		638431	0					
ANR	638649	BreakStatement	break ;	570:37:13192:13197	638431	21	True				
ANR	638650	Label	case 38 :	571:1:13200:13207	638431	22	True				
ANR	638651	ExpressionStatement	"res = ins_bits ? ""lo"" : ""hi"""	572:2:13211:13238	638431	23	True				
ANR	638652	AssignmentExpression	"res = ins_bits ? ""lo"" : ""hi"""		638431	0		=			
ANR	638653	Identifier	res		638431	0					
ANR	638654	ConditionalExpression	"ins_bits ? ""lo"" : ""hi"""		638431	1					
ANR	638655	Condition	ins_bits		638431	0					
ANR	638656	Identifier	ins_bits		638431	0					
ANR	638657	PrimaryExpression	"""lo"""		638431	1					
ANR	638658	PrimaryExpression	"""hi"""		638431	2					
ANR	638659	ExpressionStatement	res = strdup ( res )	573:2:13242:13259	638431	24	True				
ANR	638660	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	638661	Identifier	res		638431	0					
ANR	638662	CallExpression	strdup ( res )		638431	1					
ANR	638663	Callee	strdup		638431	0					
ANR	638664	Identifier	strdup		638431	0					
ANR	638665	ArgumentList	res		638431	1					
ANR	638666	Argument	res		638431	0					
ANR	638667	Identifier	res		638431	0					
ANR	638668	BreakStatement	break ;	574:2:13263:13268	638431	25	True				
ANR	638669	Label	case 39 :	575:1:13271:13278	638431	26	True				
ANR	638670	ExpressionStatement	res = get_cmp_op ( ins_bits )	575:10:13280:13306	638431	27	True				
ANR	638671	AssignmentExpression	res = get_cmp_op ( ins_bits )		638431	0		=			
ANR	638672	Identifier	res		638431	0					
ANR	638673	CallExpression	get_cmp_op ( ins_bits )		638431	1					
ANR	638674	Callee	get_cmp_op		638431	0					
ANR	638675	Identifier	get_cmp_op		638431	0					
ANR	638676	ArgumentList	ins_bits		638431	1					
ANR	638677	Argument	ins_bits		638431	0					
ANR	638678	Identifier	ins_bits		638431	0					
ANR	638679	BreakStatement	break ;	575:38:13308:13313	638431	28	True				
ANR	638680	Label	case 40 :	576:1:13316:13323	638431	29	True				
ANR	638681	Label	case 48 :	577:1:13326:13333	638431	30	True				
ANR	638682	ExpressionStatement	"sprintf ( buff_aux , ""#0x%x"" , ( ins_bits << ( 32 - ins_token_len ) >> ( 32 - ins_token_len ) ) )"	578:2:13337:13423	638431	31	True				
ANR	638683	CallExpression	"sprintf ( buff_aux , ""#0x%x"" , ( ins_bits << ( 32 - ins_token_len ) >> ( 32 - ins_token_len ) ) )"		638431	0					
ANR	638684	Callee	sprintf		638431	0					
ANR	638685	Identifier	sprintf		638431	0					
ANR	638686	ArgumentList	buff_aux		638431	1					
ANR	638687	Argument	buff_aux		638431	0					
ANR	638688	Identifier	buff_aux		638431	0					
ANR	638689	Argument	"""#0x%x"""		638431	1					
ANR	638690	PrimaryExpression	"""#0x%x"""		638431	0					
ANR	638691	Argument	ins_bits << ( 32 - ins_token_len ) >> ( 32 - ins_token_len )		638431	2					
ANR	638692	ShiftExpression	ins_bits << ( 32 - ins_token_len ) >> ( 32 - ins_token_len )		638431	0		<<			
ANR	638693	Identifier	ins_bits		638431	0					
ANR	638694	ShiftExpression	( 32 - ins_token_len ) >> ( 32 - ins_token_len )		638431	1		>>			
ANR	638695	AdditiveExpression	32 - ins_token_len		638431	0		-			
ANR	638696	PrimaryExpression	32		638431	0					
ANR	638697	Identifier	ins_token_len		638431	1					
ANR	638698	AdditiveExpression	32 - ins_token_len		638431	1		-			
ANR	638699	PrimaryExpression	32		638431	0					
ANR	638700	Identifier	ins_token_len		638431	1					
ANR	638701	ExpressionStatement	res = strdup ( buff_aux )	579:2:13427:13449	638431	32	True				
ANR	638702	AssignmentExpression	res = strdup ( buff_aux )		638431	0		=			
ANR	638703	Identifier	res		638431	0					
ANR	638704	CallExpression	strdup ( buff_aux )		638431	1					
ANR	638705	Callee	strdup		638431	0					
ANR	638706	Identifier	strdup		638431	0					
ANR	638707	ArgumentList	buff_aux		638431	1					
ANR	638708	Argument	buff_aux		638431	0					
ANR	638709	Identifier	buff_aux		638431	0					
ANR	638710	BreakStatement	break ;	580:2:13453:13458	638431	33	True				
ANR	638711	Label	case 70 :	581:1:13461:13468	638431	34	True				
ANR	638712	Label	case 72 :	582:1:13471:13478	638431	35	True				
ANR	638713	Label	case 80 :	583:1:13481:13488	638431	36	True				
ANR	638714	IfStatement	if ( reg_arg )		638431	37					
ANR	638715	Condition	reg_arg	584:6:13496:13502	638431	0	True				
ANR	638716	Identifier	reg_arg		638431	0					
ANR	638717	CompoundStatement		57:15:1262:1262	638431	1					
ANR	638718	IfStatement	if ( * reg_arg == '!' )		638431	0					
ANR	638719	Condition	* reg_arg == '!'	585:7:13514:13528	638431	0	True				
ANR	638720	EqualityExpression	* reg_arg == '!'		638431	0		==			
ANR	638721	UnaryOperationExpression	* reg_arg		638431	0					
ANR	638722	UnaryOperator	*		638431	0					
ANR	638723	Identifier	reg_arg		638431	1					
ANR	638724	PrimaryExpression	'!'		638431	1					
ANR	638725	CompoundStatement		58:24:1288:1288	638431	1					
ANR	638726	ExpressionStatement	res = get_reg_pair ( ins_bits )	586:4:13537:13565	638431	0	True				
ANR	638727	AssignmentExpression	res = get_reg_pair ( ins_bits )		638431	0		=			
ANR	638728	Identifier	res		638431	0					
ANR	638729	CallExpression	get_reg_pair ( ins_bits )		638431	1					
ANR	638730	Callee	get_reg_pair		638431	0					
ANR	638731	Identifier	get_reg_pair		638431	0					
ANR	638732	ArgumentList	ins_bits		638431	1					
ANR	638733	Argument	ins_bits		638431	0					
ANR	638734	Identifier	ins_bits		638431	0					
ANR	638735	BreakStatement	break ;	587:4:13571:13576	638431	1	True				
ANR	638736	ElseStatement	else		638431	0					
ANR	638737	IfStatement	"if ( ! r_str_ncasecmp ( reg_arg , ""ST"" , 2 ) )"		638431	0					
ANR	638738	Condition	"! r_str_ncasecmp ( reg_arg , ""ST"" , 2 )"	588:14:13592:13624	638431	0	True				
ANR	638739	UnaryOperationExpression	"! r_str_ncasecmp ( reg_arg , ""ST"" , 2 )"		638431	0					
ANR	638740	UnaryOperator	!		638431	0					
ANR	638741	CallExpression	"r_str_ncasecmp ( reg_arg , ""ST"" , 2 )"		638431	1					
ANR	638742	Callee	r_str_ncasecmp		638431	0					
ANR	638743	Identifier	r_str_ncasecmp		638431	0					
ANR	638744	ArgumentList	reg_arg		638431	1					
ANR	638745	Argument	reg_arg		638431	0					
ANR	638746	Identifier	reg_arg		638431	0					
ANR	638747	Argument	"""ST"""		638431	1					
ANR	638748	PrimaryExpression	"""ST"""		638431	0					
ANR	638749	Argument	2		638431	2					
ANR	638750	PrimaryExpression	2		638431	0					
ANR	638751	CompoundStatement		61:49:1384:1384	638431	1					
ANR	638752	ExpressionStatement	"res = get_status_regs_and_bits ( reg_arg , ins_bits )"	589:4:13633:13682	638431	0	True				
ANR	638753	AssignmentExpression	"res = get_status_regs_and_bits ( reg_arg , ins_bits )"		638431	0		=			
ANR	638754	Identifier	res		638431	0					
ANR	638755	CallExpression	"get_status_regs_and_bits ( reg_arg , ins_bits )"		638431	1					
ANR	638756	Callee	get_status_regs_and_bits		638431	0					
ANR	638757	Identifier	get_status_regs_and_bits		638431	0					
ANR	638758	ArgumentList	reg_arg		638431	1					
ANR	638759	Argument	reg_arg		638431	0					
ANR	638760	Identifier	reg_arg		638431	0					
ANR	638761	Argument	ins_bits		638431	1					
ANR	638762	Identifier	ins_bits		638431	0					
ANR	638763	BreakStatement	break ;	590:4:13688:13693	638431	1	True				
ANR	638764	IfStatement	if ( hash_code == 0xDF || hash_code == 0xE0 )		638431	38					
ANR	638765	Condition	hash_code == 0xDF || hash_code == 0xE0	593:6:13710:13747	638431	0	True				
ANR	638766	OrExpression	hash_code == 0xDF || hash_code == 0xE0		638431	0		||			
ANR	638767	EqualityExpression	hash_code == 0xDF		638431	0		==			
ANR	638768	Identifier	hash_code		638431	0					
ANR	638769	PrimaryExpression	0xDF		638431	1					
ANR	638770	EqualityExpression	hash_code == 0xE0		638431	1		==			
ANR	638771	Identifier	hash_code		638431	0					
ANR	638772	PrimaryExpression	0xE0		638431	1					
ANR	638773	CompoundStatement		66:46:1507:1507	638431	1					
ANR	638774	ExpressionStatement	* ret_ins_bits = ins_bits	594:3:13755:13779	638431	0	True				
ANR	638775	AssignmentExpression	* ret_ins_bits = ins_bits		638431	0		=			
ANR	638776	UnaryOperationExpression	* ret_ins_bits		638431	0					
ANR	638777	UnaryOperator	*		638431	0					
ANR	638778	Identifier	ret_ins_bits		638431	1					
ANR	638779	Identifier	ins_bits		638431	1					
ANR	638780	IfStatement	if ( ! reg_arg || * reg_arg != '-' )		638431	39					
ANR	638781	Condition	! reg_arg || * reg_arg != '-'	596:6:13791:13817	638431	0	True				
ANR	638782	OrExpression	! reg_arg || * reg_arg != '-'		638431	0		||			
ANR	638783	UnaryOperationExpression	! reg_arg		638431	0					
ANR	638784	UnaryOperator	!		638431	0					
ANR	638785	Identifier	reg_arg		638431	1					
ANR	638786	EqualityExpression	* reg_arg != '-'		638431	1		!=			
ANR	638787	UnaryOperationExpression	* reg_arg		638431	0					
ANR	638788	UnaryOperator	*		638431	0					
ANR	638789	Identifier	reg_arg		638431	1					
ANR	638790	PrimaryExpression	'-'		638431	1					
ANR	638791	CompoundStatement		69:35:1577:1577	638431	1					
ANR	638792	Statement	sprintf	597:3:13825:13831	638431	0	True				
ANR	638793	Statement	(	597:10:13832:13832	638431	1	True				
ANR	638794	Statement	buff_aux	597:11:13833:13840	638431	2	True				
ANR	638795	Statement	","	597:19:13841:13841	638431	3	True				
ANR	638796	Statement	"""#0x%lx"""	597:21:13843:13850	638431	4	True				
ANR	638797	Statement	","	597:29:13851:13851	638431	5	True				
ANR	638798	Statement	(	597:31:13853:13853	638431	6	True				
ANR	638799	Statement	long	597:32:13854:13857	638431	7	True				
ANR	638800	Statement	unsigned	597:37:13859:13866	638431	8	True				
ANR	638801	Statement	int	597:46:13868:13870	638431	9	True				
ANR	638802	Statement	)	597:49:13871:13871	638431	10	True				
ANR	638803	Statement	ins_bits	597:50:13872:13879	638431	11	True				
ANR	638804	Statement	)	597:58:13880:13880	638431	12	True				
ANR	638805	ExpressionStatement		597:59:13881:13881	638431	13	True				
ANR	638806	ElseStatement	else		638431	0					
ANR	638807	CompoundStatement		71:9:1649:1649	638431	0					
ANR	638808	Statement	sprintf	599:3:13897:13903	638431	0	True				
ANR	638809	Statement	(	599:10:13904:13904	638431	1	True				
ANR	638810	Statement	buff_aux	599:11:13905:13912	638431	2	True				
ANR	638811	Statement	","	599:19:13913:13913	638431	3	True				
ANR	638812	Statement	"""-#0x%lx"""	599:21:13915:13923	638431	4	True				
ANR	638813	Statement	","	599:30:13924:13924	638431	5	True				
ANR	638814	Statement	(	599:32:13926:13926	638431	6	True				
ANR	638815	Statement	long	599:33:13927:13930	638431	7	True				
ANR	638816	Statement	unsigned	599:38:13932:13939	638431	8	True				
ANR	638817	Statement	int	599:47:13941:13943	638431	9	True				
ANR	638818	Statement	)	599:50:13944:13944	638431	10	True				
ANR	638819	Statement	ins_bits	599:51:13945:13952	638431	11	True				
ANR	638820	Statement	)	599:59:13953:13953	638431	12	True				
ANR	638821	ExpressionStatement		599:60:13954:13954	638431	13	True				
ANR	638822	ExpressionStatement	res = strdup ( buff_aux )	601:2:13962:13984	638431	40	True				
ANR	638823	AssignmentExpression	res = strdup ( buff_aux )		638431	0		=			
ANR	638824	Identifier	res		638431	0					
ANR	638825	CallExpression	strdup ( buff_aux )		638431	1					
ANR	638826	Callee	strdup		638431	0					
ANR	638827	Identifier	strdup		638431	0					
ANR	638828	ArgumentList	buff_aux		638431	1					
ANR	638829	Argument	buff_aux		638431	0					
ANR	638830	Identifier	buff_aux		638431	0					
ANR	638831	IfStatement	if ( ! reg_arg || * reg_arg != 'm' )		638431	41					
ANR	638832	Condition	! reg_arg || * reg_arg != 'm'	602:6:13992:14018	638431	0	True				
ANR	638833	OrExpression	! reg_arg || * reg_arg != 'm'		638431	0		||			
ANR	638834	UnaryOperationExpression	! reg_arg		638431	0					
ANR	638835	UnaryOperator	!		638431	0					
ANR	638836	Identifier	reg_arg		638431	1					
ANR	638837	EqualityExpression	* reg_arg != 'm'		638431	1		!=			
ANR	638838	UnaryOperationExpression	* reg_arg		638431	0					
ANR	638839	UnaryOperator	*		638431	0					
ANR	638840	Identifier	reg_arg		638431	1					
ANR	638841	PrimaryExpression	'm'		638431	1					
ANR	638842	CompoundStatement		75:35:1778:1778	638431	1					
ANR	638843	BreakStatement	break ;	603:3:14026:14031	638431	0	True				
ANR	638844	ExpressionStatement	"res = strcat_dup ( res , "")"" , 1 )"	606:2:14040:14069	638431	42	True				
ANR	638845	AssignmentExpression	"res = strcat_dup ( res , "")"" , 1 )"		638431	0		=			
ANR	638846	Identifier	res		638431	0					
ANR	638847	CallExpression	"strcat_dup ( res , "")"" , 1 )"		638431	1					
ANR	638848	Callee	strcat_dup		638431	0					
ANR	638849	Identifier	strcat_dup		638431	0					
ANR	638850	ArgumentList	res		638431	1					
ANR	638851	Argument	res		638431	0					
ANR	638852	Identifier	res		638431	0					
ANR	638853	Argument	""")"""		638431	1					
ANR	638854	PrimaryExpression	""")"""		638431	0					
ANR	638855	Argument	1		638431	2					
ANR	638856	PrimaryExpression	1		638431	0					
ANR	638857	ExpressionStatement	"res = strcat_dup ( ""*("" , res , 2 )"	607:2:14073:14103	638431	43	True				
ANR	638858	AssignmentExpression	"res = strcat_dup ( ""*("" , res , 2 )"		638431	0		=			
ANR	638859	Identifier	res		638431	0					
ANR	638860	CallExpression	"strcat_dup ( ""*("" , res , 2 )"		638431	1					
ANR	638861	Callee	strcat_dup		638431	0					
ANR	638862	Identifier	strcat_dup		638431	0					
ANR	638863	ArgumentList	"""*("""		638431	1					
ANR	638864	Argument	"""*("""		638431	0					
ANR	638865	PrimaryExpression	"""*("""		638431	0					
ANR	638866	Argument	res		638431	1					
ANR	638867	Identifier	res		638431	0					
ANR	638868	Argument	2		638431	2					
ANR	638869	PrimaryExpression	2		638431	0					
ANR	638870	IfStatement	if ( magic_value & 0xC0 )		638431	44					
ANR	638871	Condition	magic_value & 0xC0	609:6:14112:14129	638431	0	True				
ANR	638872	BitAndExpression	magic_value & 0xC0		638431	0		&			
ANR	638873	Identifier	magic_value		638431	0					
ANR	638874	PrimaryExpression	0xC0		638431	1					
ANR	638875	CompoundStatement		82:26:1889:1889	638431	1					
ANR	638876	ExpressionStatement	"res = strcat_dup ( res , "")"" , 1 )"	610:3:14137:14166	638431	0	True				
ANR	638877	AssignmentExpression	"res = strcat_dup ( res , "")"" , 1 )"		638431	0		=			
ANR	638878	Identifier	res		638431	0					
ANR	638879	CallExpression	"strcat_dup ( res , "")"" , 1 )"		638431	1					
ANR	638880	Callee	strcat_dup		638431	0					
ANR	638881	Identifier	strcat_dup		638431	0					
ANR	638882	ArgumentList	res		638431	1					
ANR	638883	Argument	res		638431	0					
ANR	638884	Identifier	res		638431	0					
ANR	638885	Argument	""")"""		638431	1					
ANR	638886	PrimaryExpression	""")"""		638431	0					
ANR	638887	Argument	1		638431	2					
ANR	638888	PrimaryExpression	1		638431	0					
ANR	638889	ExpressionStatement	"res = strcat_dup ( ""volatile("" , res , 2 )"	611:3:14171:14208	638431	1	True				
ANR	638890	AssignmentExpression	"res = strcat_dup ( ""volatile("" , res , 2 )"		638431	0		=			
ANR	638891	Identifier	res		638431	0					
ANR	638892	CallExpression	"strcat_dup ( ""volatile("" , res , 2 )"		638431	1					
ANR	638893	Callee	strcat_dup		638431	0					
ANR	638894	Identifier	strcat_dup		638431	0					
ANR	638895	ArgumentList	"""volatile("""		638431	1					
ANR	638896	Argument	"""volatile("""		638431	0					
ANR	638897	PrimaryExpression	"""volatile("""		638431	0					
ANR	638898	Argument	res		638431	1					
ANR	638899	Identifier	res		638431	0					
ANR	638900	Argument	2		638431	2					
ANR	638901	PrimaryExpression	2		638431	0					
ANR	638902	ElseStatement	else		638431	0					
ANR	638903	IfStatement	if ( magic_value & 0x30 )		638431	0					
ANR	638904	Condition	magic_value & 0x30	612:13:14223:14240	638431	0	True				
ANR	638905	BitAndExpression	magic_value & 0x30		638431	0		&			
ANR	638906	Identifier	magic_value		638431	0					
ANR	638907	PrimaryExpression	0x30		638431	1					
ANR	638908	CompoundStatement		85:33:2000:2000	638431	1					
ANR	638909	ExpressionStatement	"res = strcat_dup ( res , "")"" , 1 )"	613:3:14248:14277	638431	0	True				
ANR	638910	AssignmentExpression	"res = strcat_dup ( res , "")"" , 1 )"		638431	0		=			
ANR	638911	Identifier	res		638431	0					
ANR	638912	CallExpression	"strcat_dup ( res , "")"" , 1 )"		638431	1					
ANR	638913	Callee	strcat_dup		638431	0					
ANR	638914	Identifier	strcat_dup		638431	0					
ANR	638915	ArgumentList	res		638431	1					
ANR	638916	Argument	res		638431	0					
ANR	638917	Identifier	res		638431	0					
ANR	638918	Argument	""")"""		638431	1					
ANR	638919	PrimaryExpression	""")"""		638431	0					
ANR	638920	Argument	1		638431	2					
ANR	638921	PrimaryExpression	1		638431	0					
ANR	638922	ExpressionStatement	"res = strcat_dup ( ""port("" , res , 2 )"	614:3:14282:14315	638431	1	True				
ANR	638923	AssignmentExpression	"res = strcat_dup ( ""port("" , res , 2 )"		638431	0		=			
ANR	638924	Identifier	res		638431	0					
ANR	638925	CallExpression	"strcat_dup ( ""port("" , res , 2 )"		638431	1					
ANR	638926	Callee	strcat_dup		638431	0					
ANR	638927	Identifier	strcat_dup		638431	0					
ANR	638928	ArgumentList	"""port("""		638431	1					
ANR	638929	Argument	"""port("""		638431	0					
ANR	638930	PrimaryExpression	"""port("""		638431	0					
ANR	638931	Argument	res		638431	1					
ANR	638932	Identifier	res		638431	0					
ANR	638933	Argument	2		638431	2					
ANR	638934	PrimaryExpression	2		638431	0					
ANR	638935	BreakStatement	break ;	616:2:14323:14328	638431	45	True				
ANR	638936	Label	case 41 :	617:1:14331:14338	638431	46	True				
ANR	638937	Label	case 73 :	618:1:14341:14348	638431	47	True				
ANR	638938	IfStatement	if ( ( reg_arg && * reg_arg == 'L' ) || hash_code == 105 || hash_code == 7 )		638431	48					
ANR	638939	Condition	( reg_arg && * reg_arg == 'L' ) || hash_code == 105 || hash_code == 7	619:6:14356:14421	638431	0	True				
ANR	638940	OrExpression	( reg_arg && * reg_arg == 'L' ) || hash_code == 105 || hash_code == 7		638431	0		||			
ANR	638941	AndExpression	reg_arg && * reg_arg == 'L'		638431	0		&&			
ANR	638942	Identifier	reg_arg		638431	0					
ANR	638943	EqualityExpression	* reg_arg == 'L'		638431	1		==			
ANR	638944	UnaryOperationExpression	* reg_arg		638431	0					
ANR	638945	UnaryOperator	*		638431	0					
ANR	638946	Identifier	reg_arg		638431	1					
ANR	638947	PrimaryExpression	'L'		638431	1					
ANR	638948	OrExpression	hash_code == 105 || hash_code == 7		638431	1		||			
ANR	638949	EqualityExpression	hash_code == 105		638431	0		==			
ANR	638950	Identifier	hash_code		638431	0					
ANR	638951	PrimaryExpression	105		638431	1					
ANR	638952	EqualityExpression	hash_code == 7		638431	1		==			
ANR	638953	Identifier	hash_code		638431	0					
ANR	638954	PrimaryExpression	7		638431	1					
ANR	638955	CompoundStatement		92:74:2181:2181	638431	1					
ANR	638956	IfStatement	if ( C55PLUS_DEBUG )		638431	0					
ANR	638957	Condition	C55PLUS_DEBUG	620:7:14433:14445	638431	0	True				
ANR	638958	Identifier	C55PLUS_DEBUG		638431	0					
ANR	638959	CompoundStatement		93:22:2205:2205	638431	1					
ANR	638960	ExpressionStatement	"fprintf ( stderr , ""Ooops!!! look up address in sections!! %d"" , hash_code )"	621:4:14454:14526	638431	0	True				
ANR	638961	CallExpression	"fprintf ( stderr , ""Ooops!!! look up address in sections!! %d"" , hash_code )"		638431	0					
ANR	638962	Callee	fprintf		638431	0					
ANR	638963	Identifier	fprintf		638431	0					
ANR	638964	ArgumentList	stderr		638431	1					
ANR	638965	Argument	stderr		638431	0					
ANR	638966	Identifier	stderr		638431	0					
ANR	638967	Argument	"""Ooops!!! look up address in sections!! %d"""		638431	1					
ANR	638968	PrimaryExpression	"""Ooops!!! look up address in sections!! %d"""		638431	0					
ANR	638969	Argument	hash_code		638431	2					
ANR	638970	Identifier	hash_code		638431	0					
ANR	638971	IfStatement	if ( reg_arg && * reg_arg == 'L' )		638431	49					
ANR	638972	Condition	reg_arg && * reg_arg == 'L'	624:6:14543:14568	638431	0	True				
ANR	638973	AndExpression	reg_arg && * reg_arg == 'L'		638431	0		&&			
ANR	638974	Identifier	reg_arg		638431	0					
ANR	638975	EqualityExpression	* reg_arg == 'L'		638431	1		==			
ANR	638976	UnaryOperationExpression	* reg_arg		638431	0					
ANR	638977	UnaryOperator	*		638431	0					
ANR	638978	Identifier	reg_arg		638431	1					
ANR	638979	PrimaryExpression	'L'		638431	1					
ANR	638980	CompoundStatement		97:34:2328:2328	638431	1					
ANR	638981	ExpressionStatement	ins_bits = ins_bits << ( 32 - ins_token_len ) >> ( 32 - ins_token_len )	625:3:14576:14643	638431	0	True				
ANR	638982	AssignmentExpression	ins_bits = ins_bits << ( 32 - ins_token_len ) >> ( 32 - ins_token_len )		638431	0		=			
ANR	638983	Identifier	ins_bits		638431	0					
ANR	638984	ShiftExpression	ins_bits << ( 32 - ins_token_len ) >> ( 32 - ins_token_len )		638431	1		<<			
ANR	638985	Identifier	ins_bits		638431	0					
ANR	638986	ShiftExpression	( 32 - ins_token_len ) >> ( 32 - ins_token_len )		638431	1		>>			
ANR	638987	AdditiveExpression	32 - ins_token_len		638431	0		-			
ANR	638988	PrimaryExpression	32		638431	0					
ANR	638989	Identifier	ins_token_len		638431	1					
ANR	638990	AdditiveExpression	32 - ins_token_len		638431	1		-			
ANR	638991	PrimaryExpression	32		638431	0					
ANR	638992	Identifier	ins_token_len		638431	1					
ANR	638993	IfStatement	if ( reg_arg && * reg_arg == 'i' )		638431	50					
ANR	638994	Condition	reg_arg && * reg_arg == 'i'	627:6:14655:14680	638431	0	True				
ANR	638995	AndExpression	reg_arg && * reg_arg == 'i'		638431	0		&&			
ANR	638996	Identifier	reg_arg		638431	0					
ANR	638997	EqualityExpression	* reg_arg == 'i'		638431	1		==			
ANR	638998	UnaryOperationExpression	* reg_arg		638431	0					
ANR	638999	UnaryOperator	*		638431	0					
ANR	639000	Identifier	reg_arg		638431	1					
ANR	639001	PrimaryExpression	'i'		638431	1					
ANR	639002	CompoundStatement		100:34:2440:2440	638431	1					
ANR	639003	ExpressionStatement	"res = strdup ( """" )"	628:3:14688:14705	638431	0	True				
ANR	639004	AssignmentExpression	"res = strdup ( """" )"		638431	0		=			
ANR	639005	Identifier	res		638431	0					
ANR	639006	CallExpression	"strdup ( """" )"		638431	1					
ANR	639007	Callee	strdup		638431	0					
ANR	639008	Identifier	strdup		638431	0					
ANR	639009	ArgumentList	""""""		638431	1					
ANR	639010	Argument	""""""		638431	0					
ANR	639011	PrimaryExpression	""""""		638431	0					
ANR	639012	ElseStatement	else		638431	0					
ANR	639013	CompoundStatement		102:9:2473:2473	638431	0					
ANR	639014	Statement	sprintf	630:3:14721:14727	638431	0	True				
ANR	639015	Statement	(	630:10:14728:14728	638431	1	True				
ANR	639016	Statement	buff_aux	630:11:14729:14736	638431	2	True				
ANR	639017	Statement	","	630:19:14737:14737	638431	3	True				
ANR	639018	Statement	"""#0x%06lx"""	630:21:14739:14748	638431	4	True				
ANR	639019	Statement	","	630:31:14749:14749	638431	5	True				
ANR	639020	Statement	(	630:33:14751:14751	638431	6	True				
ANR	639021	Statement	long	630:34:14752:14755	638431	7	True				
ANR	639022	Statement	unsigned	630:39:14757:14764	638431	8	True				
ANR	639023	Statement	int	630:48:14766:14768	638431	9	True				
ANR	639024	Statement	)	630:51:14769:14769	638431	10	True				
ANR	639025	Statement	ins_bits	630:52:14770:14777	638431	11	True				
ANR	639026	Statement	)	630:60:14778:14778	638431	12	True				
ANR	639027	ExpressionStatement		630:61:14779:14779	638431	13	True				
ANR	639028	ExpressionStatement	res = strdup ( buff_aux )	631:3:14784:14806	638431	14	True				
ANR	639029	AssignmentExpression	res = strdup ( buff_aux )		638431	0		=			
ANR	639030	Identifier	res		638431	0					
ANR	639031	CallExpression	strdup ( buff_aux )		638431	1					
ANR	639032	Callee	strdup		638431	0					
ANR	639033	Identifier	strdup		638431	0					
ANR	639034	ArgumentList	buff_aux		638431	1					
ANR	639035	Argument	buff_aux		638431	0					
ANR	639036	Identifier	buff_aux		638431	0					
ANR	639037	BreakStatement	break ;	633:2:14814:14819	638431	51	True				
ANR	639038	Label	case 42 :	634:1:14822:14829	638431	52	True				
ANR	639039	ExpressionStatement	flag = 0	635:2:14833:14841	638431	53	True				
ANR	639040	AssignmentExpression	flag = 0		638431	0		=			
ANR	639041	Identifier	flag		638431	0					
ANR	639042	PrimaryExpression	0		638431	1					
ANR	639043	IfStatement	if ( reg_arg && * reg_arg == '3' )		638431	54					
ANR	639044	Condition	reg_arg && * reg_arg == '3'	636:6:14849:14874	638431	0	True				
ANR	639045	AndExpression	reg_arg && * reg_arg == '3'		638431	0		&&			
ANR	639046	Identifier	reg_arg		638431	0					
ANR	639047	EqualityExpression	* reg_arg == '3'		638431	1		==			
ANR	639048	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639049	UnaryOperator	*		638431	0					
ANR	639050	Identifier	reg_arg		638431	1					
ANR	639051	PrimaryExpression	'3'		638431	1					
ANR	639052	CompoundStatement		109:34:2634:2634	638431	1					
ANR	639053	ExpressionStatement	flag = ins_bits & 1	637:3:14882:14901	638431	0	True				
ANR	639054	AssignmentExpression	flag = ins_bits & 1		638431	0		=			
ANR	639055	Identifier	flag		638431	0					
ANR	639056	BitAndExpression	ins_bits & 1		638431	1		&			
ANR	639057	Identifier	ins_bits		638431	0					
ANR	639058	PrimaryExpression	1		638431	1					
ANR	639059	ExpressionStatement	ins_bits = ins_bits >> 1	638:3:14906:14930	638431	1	True				
ANR	639060	AssignmentExpression	ins_bits = ins_bits >> 1		638431	0		=			
ANR	639061	Identifier	ins_bits		638431	0					
ANR	639062	ShiftExpression	ins_bits >> 1		638431	1		>>			
ANR	639063	Identifier	ins_bits		638431	0					
ANR	639064	PrimaryExpression	1		638431	1					
ANR	639065	ExpressionStatement	reg_arg ++	639:3:14935:14944	638431	2	True				
ANR	639066	PostIncDecOperationExpression	reg_arg ++		638431	0					
ANR	639067	Identifier	reg_arg		638431	0					
ANR	639068	IncDec	++		638431	1					
ANR	639069	IfStatement	if ( magic_value & 1 )		638431	55					
ANR	639070	Condition	magic_value & 1	641:6:14956:14970	638431	0	True				
ANR	639071	BitAndExpression	magic_value & 1		638431	0		&			
ANR	639072	Identifier	magic_value		638431	0					
ANR	639073	PrimaryExpression	1		638431	1					
ANR	639074	CompoundStatement		114:23:2730:2730	638431	1					
ANR	639075	ExpressionStatement	"aux = get_sim_reg ( reg_arg , ins_bits )"	642:3:14978:15014	638431	0	True				
ANR	639076	AssignmentExpression	"aux = get_sim_reg ( reg_arg , ins_bits )"		638431	0		=			
ANR	639077	Identifier	aux		638431	0					
ANR	639078	CallExpression	"get_sim_reg ( reg_arg , ins_bits )"		638431	1					
ANR	639079	Callee	get_sim_reg		638431	0					
ANR	639080	Identifier	get_sim_reg		638431	0					
ANR	639081	ArgumentList	reg_arg		638431	1					
ANR	639082	Argument	reg_arg		638431	0					
ANR	639083	Identifier	reg_arg		638431	0					
ANR	639084	Argument	ins_bits		638431	1					
ANR	639085	Identifier	ins_bits		638431	0					
ANR	639086	ElseStatement	else		638431	0					
ANR	639087	IfStatement	if ( reg_arg )		638431	0					
ANR	639088	Condition	reg_arg	643:13:15029:15035	638431	0	True				
ANR	639089	Identifier	reg_arg		638431	0					
ANR	639090	CompoundStatement		116:22:2795:2795	638431	1					
ANR	639091	SwitchStatement	switch ( * reg_arg )		638431	0					
ANR	639092	Condition	* reg_arg	644:11:15051:15058	638431	0	True				
ANR	639093	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639094	UnaryOperator	*		638431	0					
ANR	639095	Identifier	reg_arg		638431	1					
ANR	639096	CompoundStatement		117:21:2818:2818	638431	1					
ANR	639097	Label	case 'b' :	645:3:15066:15074	638431	0	True				
ANR	639098	Label	case 'd' :	646:3:15079:15087	638431	1	True				
ANR	639099	ExpressionStatement	reg_arg ++	647:4:15093:15102	638431	2	True				
ANR	639100	PostIncDecOperationExpression	reg_arg ++		638431	0					
ANR	639101	Identifier	reg_arg		638431	0					
ANR	639102	IncDec	++		638431	1					
ANR	639103	BreakStatement	break ;	648:4:15108:15113	638431	3	True				
ANR	639104	Label	case '!' :	649:3:15118:15126	638431	4	True				
ANR	639105	ExpressionStatement	reg_arg += 10	651:4:15173:15184	638431	5	True				
ANR	639106	AssignmentExpression	reg_arg += 10		638431	0		+=			
ANR	639107	Identifier	reg_arg		638431	0					
ANR	639108	PrimaryExpression	10		638431	1					
ANR	639109	BreakStatement	break ;	653:4:15255:15260	638431	6	True				
ANR	639110	ExpressionStatement	"aux = get_AR_regs_class2 ( ins_bits , & ret_len , ins_len + ins_pos , 1 )"	655:3:15270:15336	638431	1	True				
ANR	639111	AssignmentExpression	"aux = get_AR_regs_class2 ( ins_bits , & ret_len , ins_len + ins_pos , 1 )"		638431	0		=			
ANR	639112	Identifier	aux		638431	0					
ANR	639113	CallExpression	"get_AR_regs_class2 ( ins_bits , & ret_len , ins_len + ins_pos , 1 )"		638431	1					
ANR	639114	Callee	get_AR_regs_class2		638431	0					
ANR	639115	Identifier	get_AR_regs_class2		638431	0					
ANR	639116	ArgumentList	ins_bits		638431	1					
ANR	639117	Argument	ins_bits		638431	0					
ANR	639118	Identifier	ins_bits		638431	0					
ANR	639119	Argument	& ret_len		638431	1					
ANR	639120	UnaryOperationExpression	& ret_len		638431	0					
ANR	639121	UnaryOperator	&		638431	0					
ANR	639122	Identifier	ret_len		638431	1					
ANR	639123	Argument	ins_len + ins_pos		638431	2					
ANR	639124	AdditiveExpression	ins_len + ins_pos		638431	0		+			
ANR	639125	Identifier	ins_len		638431	0					
ANR	639126	Identifier	ins_pos		638431	1					
ANR	639127	Argument	1		638431	3					
ANR	639128	PrimaryExpression	1		638431	0					
ANR	639129	IfStatement	if ( magic_value & 1 )		638431	56					
ANR	639130	Condition	magic_value & 1	657:6:15348:15362	638431	0	True				
ANR	639131	BitAndExpression	magic_value & 1		638431	0		&			
ANR	639132	Identifier	magic_value		638431	0					
ANR	639133	PrimaryExpression	1		638431	1					
ANR	639134	CompoundStatement		130:23:3122:3122	638431	1					
ANR	639135	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	658:3:15370:15399	638431	0	True				
ANR	639136	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639137	Identifier	aux		638431	0					
ANR	639138	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639139	Callee	strcat_dup		638431	0					
ANR	639140	Identifier	strcat_dup		638431	0					
ANR	639141	ArgumentList	aux		638431	1					
ANR	639142	Argument	aux		638431	0					
ANR	639143	Identifier	aux		638431	0					
ANR	639144	Argument	""")"""		638431	1					
ANR	639145	PrimaryExpression	""")"""		638431	0					
ANR	639146	Argument	1		638431	2					
ANR	639147	PrimaryExpression	1		638431	0					
ANR	639148	ExpressionStatement	"aux = strcat_dup ( ""mmap("" , aux , 2 )"	659:3:15404:15437	638431	1	True				
ANR	639149	AssignmentExpression	"aux = strcat_dup ( ""mmap("" , aux , 2 )"		638431	0		=			
ANR	639150	Identifier	aux		638431	0					
ANR	639151	CallExpression	"strcat_dup ( ""mmap("" , aux , 2 )"		638431	1					
ANR	639152	Callee	strcat_dup		638431	0					
ANR	639153	Identifier	strcat_dup		638431	0					
ANR	639154	ArgumentList	"""mmap("""		638431	1					
ANR	639155	Argument	"""mmap("""		638431	0					
ANR	639156	PrimaryExpression	"""mmap("""		638431	0					
ANR	639157	Argument	aux		638431	1					
ANR	639158	Identifier	aux		638431	0					
ANR	639159	Argument	2		638431	2					
ANR	639160	PrimaryExpression	2		638431	0					
ANR	639161	ElseStatement	else		638431	0					
ANR	639162	IfStatement	if ( ( magic_value & 4 ) && is_linear_circular ( ins_bits ) )		638431	0					
ANR	639163	Condition	( magic_value & 4 ) && is_linear_circular ( ins_bits )	660:13:15452:15500	638431	0	True				
ANR	639164	AndExpression	( magic_value & 4 ) && is_linear_circular ( ins_bits )		638431	0		&&			
ANR	639165	BitAndExpression	magic_value & 4		638431	0		&			
ANR	639166	Identifier	magic_value		638431	0					
ANR	639167	PrimaryExpression	4		638431	1					
ANR	639168	CallExpression	is_linear_circular ( ins_bits )		638431	1					
ANR	639169	Callee	is_linear_circular		638431	0					
ANR	639170	Identifier	is_linear_circular		638431	0					
ANR	639171	ArgumentList	ins_bits		638431	1					
ANR	639172	Argument	ins_bits		638431	0					
ANR	639173	Identifier	ins_bits		638431	0					
ANR	639174	CompoundStatement		133:64:3260:3260	638431	1					
ANR	639175	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	661:3:15508:15537	638431	0	True				
ANR	639176	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639177	Identifier	aux		638431	0					
ANR	639178	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639179	Callee	strcat_dup		638431	0					
ANR	639180	Identifier	strcat_dup		638431	0					
ANR	639181	ArgumentList	aux		638431	1					
ANR	639182	Argument	aux		638431	0					
ANR	639183	Identifier	aux		638431	0					
ANR	639184	Argument	""")"""		638431	1					
ANR	639185	PrimaryExpression	""")"""		638431	0					
ANR	639186	Argument	1		638431	2					
ANR	639187	PrimaryExpression	1		638431	0					
ANR	639188	ExpressionStatement	"aux = strcat_dup ( ""linear("" , aux , 2 )"	662:3:15542:15577	638431	1	True				
ANR	639189	AssignmentExpression	"aux = strcat_dup ( ""linear("" , aux , 2 )"		638431	0		=			
ANR	639190	Identifier	aux		638431	0					
ANR	639191	CallExpression	"strcat_dup ( ""linear("" , aux , 2 )"		638431	1					
ANR	639192	Callee	strcat_dup		638431	0					
ANR	639193	Identifier	strcat_dup		638431	0					
ANR	639194	ArgumentList	"""linear("""		638431	1					
ANR	639195	Argument	"""linear("""		638431	0					
ANR	639196	PrimaryExpression	"""linear("""		638431	0					
ANR	639197	Argument	aux		638431	1					
ANR	639198	Identifier	aux		638431	0					
ANR	639199	Argument	2		638431	2					
ANR	639200	PrimaryExpression	2		638431	0					
ANR	639201	ElseStatement	else		638431	0					
ANR	639202	IfStatement	if ( ( magic_value & 8 ) && is_linear_circular ( ins_bits ) )		638431	0					
ANR	639203	Condition	( magic_value & 8 ) && is_linear_circular ( ins_bits )	663:13:15592:15640	638431	0	True				
ANR	639204	AndExpression	( magic_value & 8 ) && is_linear_circular ( ins_bits )		638431	0		&&			
ANR	639205	BitAndExpression	magic_value & 8		638431	0		&			
ANR	639206	Identifier	magic_value		638431	0					
ANR	639207	PrimaryExpression	8		638431	1					
ANR	639208	CallExpression	is_linear_circular ( ins_bits )		638431	1					
ANR	639209	Callee	is_linear_circular		638431	0					
ANR	639210	Identifier	is_linear_circular		638431	0					
ANR	639211	ArgumentList	ins_bits		638431	1					
ANR	639212	Argument	ins_bits		638431	0					
ANR	639213	Identifier	ins_bits		638431	0					
ANR	639214	CompoundStatement		136:64:3400:3400	638431	1					
ANR	639215	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	664:3:15648:15677	638431	0	True				
ANR	639216	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639217	Identifier	aux		638431	0					
ANR	639218	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639219	Callee	strcat_dup		638431	0					
ANR	639220	Identifier	strcat_dup		638431	0					
ANR	639221	ArgumentList	aux		638431	1					
ANR	639222	Argument	aux		638431	0					
ANR	639223	Identifier	aux		638431	0					
ANR	639224	Argument	""")"""		638431	1					
ANR	639225	PrimaryExpression	""")"""		638431	0					
ANR	639226	Argument	1		638431	2					
ANR	639227	PrimaryExpression	1		638431	0					
ANR	639228	ExpressionStatement	"aux = strcat_dup ( ""circular("" , aux , 2 )"	665:3:15682:15719	638431	1	True				
ANR	639229	AssignmentExpression	"aux = strcat_dup ( ""circular("" , aux , 2 )"		638431	0		=			
ANR	639230	Identifier	aux		638431	0					
ANR	639231	CallExpression	"strcat_dup ( ""circular("" , aux , 2 )"		638431	1					
ANR	639232	Callee	strcat_dup		638431	0					
ANR	639233	Identifier	strcat_dup		638431	0					
ANR	639234	ArgumentList	"""circular("""		638431	1					
ANR	639235	Argument	"""circular("""		638431	0					
ANR	639236	PrimaryExpression	"""circular("""		638431	0					
ANR	639237	Argument	aux		638431	1					
ANR	639238	Identifier	aux		638431	0					
ANR	639239	Argument	2		638431	2					
ANR	639240	PrimaryExpression	2		638431	0					
ANR	639241	ElseStatement	else		638431	0					
ANR	639242	IfStatement	if ( magic_value & 2 )		638431	0					
ANR	639243	Condition	magic_value & 2	666:13:15734:15748	638431	0	True				
ANR	639244	BitAndExpression	magic_value & 2		638431	0		&			
ANR	639245	Identifier	magic_value		638431	0					
ANR	639246	PrimaryExpression	2		638431	1					
ANR	639247	CompoundStatement		139:30:3508:3508	638431	1					
ANR	639248	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	667:3:15756:15785	638431	0	True				
ANR	639249	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639250	Identifier	aux		638431	0					
ANR	639251	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639252	Callee	strcat_dup		638431	0					
ANR	639253	Identifier	strcat_dup		638431	0					
ANR	639254	ArgumentList	aux		638431	1					
ANR	639255	Argument	aux		638431	0					
ANR	639256	Identifier	aux		638431	0					
ANR	639257	Argument	""")"""		638431	1					
ANR	639258	PrimaryExpression	""")"""		638431	0					
ANR	639259	Argument	1		638431	2					
ANR	639260	PrimaryExpression	1		638431	0					
ANR	639261	ExpressionStatement	"aux = strcat_dup ( ""lock("" , aux , 2 )"	668:3:15790:15823	638431	1	True				
ANR	639262	AssignmentExpression	"aux = strcat_dup ( ""lock("" , aux , 2 )"		638431	0		=			
ANR	639263	Identifier	aux		638431	0					
ANR	639264	CallExpression	"strcat_dup ( ""lock("" , aux , 2 )"		638431	1					
ANR	639265	Callee	strcat_dup		638431	0					
ANR	639266	Identifier	strcat_dup		638431	0					
ANR	639267	ArgumentList	"""lock("""		638431	1					
ANR	639268	Argument	"""lock("""		638431	0					
ANR	639269	PrimaryExpression	"""lock("""		638431	0					
ANR	639270	Argument	aux		638431	1					
ANR	639271	Identifier	aux		638431	0					
ANR	639272	Argument	2		638431	2					
ANR	639273	PrimaryExpression	2		638431	0					
ANR	639274	ElseStatement	else		638431	0					
ANR	639275	IfStatement	if ( reg_arg )		638431	0					
ANR	639276	Condition	reg_arg	669:13:15838:15844	638431	0	True				
ANR	639277	Identifier	reg_arg		638431	0					
ANR	639278	CompoundStatement		142:22:3604:3604	638431	1					
ANR	639279	IfStatement	"if ( ( ( magic_value & 0x10 ) && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x20 ) && strchr ( reg_arg , 'w' ) ) )"		638431	0					
ANR	639280	Condition	"( ( magic_value & 0x10 ) && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x20 ) && strchr ( reg_arg , 'w' ) )"	670:7:15856:15957	638431	0	True				
ANR	639281	OrExpression	"( ( magic_value & 0x10 ) && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x20 ) && strchr ( reg_arg , 'w' ) )"		638431	0		||			
ANR	639282	AndExpression	"( magic_value & 0x10 ) && strchr ( reg_arg , 'r' )"		638431	0		&&			
ANR	639283	BitAndExpression	magic_value & 0x10		638431	0		&			
ANR	639284	Identifier	magic_value		638431	0					
ANR	639285	PrimaryExpression	0x10		638431	1					
ANR	639286	CallExpression	"strchr ( reg_arg , 'r' )"		638431	1					
ANR	639287	Callee	strchr		638431	0					
ANR	639288	Identifier	strchr		638431	0					
ANR	639289	ArgumentList	reg_arg		638431	1					
ANR	639290	Argument	reg_arg		638431	0					
ANR	639291	Identifier	reg_arg		638431	0					
ANR	639292	Argument	'r'		638431	1					
ANR	639293	PrimaryExpression	'r'		638431	0					
ANR	639294	AndExpression	"( magic_value & 0x20 ) && strchr ( reg_arg , 'w' )"		638431	1		&&			
ANR	639295	BitAndExpression	magic_value & 0x20		638431	0		&			
ANR	639296	Identifier	magic_value		638431	0					
ANR	639297	PrimaryExpression	0x20		638431	1					
ANR	639298	CallExpression	"strchr ( reg_arg , 'w' )"		638431	1					
ANR	639299	Callee	strchr		638431	0					
ANR	639300	Identifier	strchr		638431	0					
ANR	639301	ArgumentList	reg_arg		638431	1					
ANR	639302	Argument	reg_arg		638431	0					
ANR	639303	Identifier	reg_arg		638431	0					
ANR	639304	Argument	'w'		638431	1					
ANR	639305	PrimaryExpression	'w'		638431	0					
ANR	639306	CompoundStatement		144:54:3717:3717	638431	1					
ANR	639307	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	673:4:15967:15996	638431	0	True				
ANR	639308	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639309	Identifier	aux		638431	0					
ANR	639310	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639311	Callee	strcat_dup		638431	0					
ANR	639312	Identifier	strcat_dup		638431	0					
ANR	639313	ArgumentList	aux		638431	1					
ANR	639314	Argument	aux		638431	0					
ANR	639315	Identifier	aux		638431	0					
ANR	639316	Argument	""")"""		638431	1					
ANR	639317	PrimaryExpression	""")"""		638431	0					
ANR	639318	Argument	1		638431	2					
ANR	639319	PrimaryExpression	1		638431	0					
ANR	639320	ExpressionStatement	"aux = strcat_dup ( ""port("" , aux , 2 )"	674:4:16002:16035	638431	1	True				
ANR	639321	AssignmentExpression	"aux = strcat_dup ( ""port("" , aux , 2 )"		638431	0		=			
ANR	639322	Identifier	aux		638431	0					
ANR	639323	CallExpression	"strcat_dup ( ""port("" , aux , 2 )"		638431	1					
ANR	639324	Callee	strcat_dup		638431	0					
ANR	639325	Identifier	strcat_dup		638431	0					
ANR	639326	ArgumentList	"""port("""		638431	1					
ANR	639327	Argument	"""port("""		638431	0					
ANR	639328	PrimaryExpression	"""port("""		638431	0					
ANR	639329	Argument	aux		638431	1					
ANR	639330	Identifier	aux		638431	0					
ANR	639331	Argument	2		638431	2					
ANR	639332	PrimaryExpression	2		638431	0					
ANR	639333	ElseStatement	else		638431	0					
ANR	639334	IfStatement	"if ( ( ( magic_value & 0x40 ) && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x80000000 ) && strchr ( reg_arg , 'w' ) ) )"		638431	0					
ANR	639335	Condition	"( ( magic_value & 0x40 ) && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x80000000 ) && strchr ( reg_arg , 'w' ) )"	676:3:16055:16159	638431	0	True				
ANR	639336	OrExpression	"( ( magic_value & 0x40 ) && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x80000000 ) && strchr ( reg_arg , 'w' ) )"		638431	0		||			
ANR	639337	AndExpression	"( magic_value & 0x40 ) && strchr ( reg_arg , 'r' )"		638431	0		&&			
ANR	639338	BitAndExpression	magic_value & 0x40		638431	0		&			
ANR	639339	Identifier	magic_value		638431	0					
ANR	639340	PrimaryExpression	0x40		638431	1					
ANR	639341	CallExpression	"strchr ( reg_arg , 'r' )"		638431	1					
ANR	639342	Callee	strchr		638431	0					
ANR	639343	Identifier	strchr		638431	0					
ANR	639344	ArgumentList	reg_arg		638431	1					
ANR	639345	Argument	reg_arg		638431	0					
ANR	639346	Identifier	reg_arg		638431	0					
ANR	639347	Argument	'r'		638431	1					
ANR	639348	PrimaryExpression	'r'		638431	0					
ANR	639349	AndExpression	"( magic_value & 0x80000000 ) && strchr ( reg_arg , 'w' )"		638431	1		&&			
ANR	639350	BitAndExpression	magic_value & 0x80000000		638431	0		&			
ANR	639351	Identifier	magic_value		638431	0					
ANR	639352	PrimaryExpression	0x80000000		638431	1					
ANR	639353	CallExpression	"strchr ( reg_arg , 'w' )"		638431	1					
ANR	639354	Callee	strchr		638431	0					
ANR	639355	Identifier	strchr		638431	0					
ANR	639356	ArgumentList	reg_arg		638431	1					
ANR	639357	Argument	reg_arg		638431	0					
ANR	639358	Identifier	reg_arg		638431	0					
ANR	639359	Argument	'w'		638431	1					
ANR	639360	PrimaryExpression	'w'		638431	0					
ANR	639361	CompoundStatement		150:57:3919:3919	638431	1					
ANR	639362	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	679:4:16169:16198	638431	0	True				
ANR	639363	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639364	Identifier	aux		638431	0					
ANR	639365	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639366	Callee	strcat_dup		638431	0					
ANR	639367	Identifier	strcat_dup		638431	0					
ANR	639368	ArgumentList	aux		638431	1					
ANR	639369	Argument	aux		638431	0					
ANR	639370	Identifier	aux		638431	0					
ANR	639371	Argument	""")"""		638431	1					
ANR	639372	PrimaryExpression	""")"""		638431	0					
ANR	639373	Argument	1		638431	2					
ANR	639374	PrimaryExpression	1		638431	0					
ANR	639375	ExpressionStatement	"aux = strcat_dup ( ""volatile("" , aux , 2 )"	680:4:16204:16241	638431	1	True				
ANR	639376	AssignmentExpression	"aux = strcat_dup ( ""volatile("" , aux , 2 )"		638431	0		=			
ANR	639377	Identifier	aux		638431	0					
ANR	639378	CallExpression	"strcat_dup ( ""volatile("" , aux , 2 )"		638431	1					
ANR	639379	Callee	strcat_dup		638431	0					
ANR	639380	Identifier	strcat_dup		638431	0					
ANR	639381	ArgumentList	"""volatile("""		638431	1					
ANR	639382	Argument	"""volatile("""		638431	0					
ANR	639383	PrimaryExpression	"""volatile("""		638431	0					
ANR	639384	Argument	aux		638431	1					
ANR	639385	Identifier	aux		638431	0					
ANR	639386	Argument	2		638431	2					
ANR	639387	PrimaryExpression	2		638431	0					
ANR	639388	IfStatement	if ( flag )		638431	57					
ANR	639389	Condition	flag	684:6:16259:16262	638431	0	True				
ANR	639390	Identifier	flag		638431	0					
ANR	639391	CompoundStatement		157:12:4022:4022	638431	1					
ANR	639392	ExpressionStatement	"res = strcat_dup ( ""t3 = "" , aux , 2 )"	685:3:16270:16303	638431	0	True				
ANR	639393	AssignmentExpression	"res = strcat_dup ( ""t3 = "" , aux , 2 )"		638431	0		=			
ANR	639394	Identifier	res		638431	0					
ANR	639395	CallExpression	"strcat_dup ( ""t3 = "" , aux , 2 )"		638431	1					
ANR	639396	Callee	strcat_dup		638431	0					
ANR	639397	Identifier	strcat_dup		638431	0					
ANR	639398	ArgumentList	"""t3 = """		638431	1					
ANR	639399	Argument	"""t3 = """		638431	0					
ANR	639400	PrimaryExpression	"""t3 = """		638431	0					
ANR	639401	Argument	aux		638431	1					
ANR	639402	Identifier	aux		638431	0					
ANR	639403	Argument	2		638431	2					
ANR	639404	PrimaryExpression	2		638431	0					
ANR	639405	ElseStatement	else		638431	0					
ANR	639406	CompoundStatement		159:9:4071:4071	638431	0					
ANR	639407	ExpressionStatement	res = aux	687:3:16319:16328	638431	0	True				
ANR	639408	AssignmentExpression	res = aux		638431	0		=			
ANR	639409	Identifier	res		638431	0					
ANR	639410	Identifier	aux		638431	1					
ANR	639411	ExpressionStatement	* ret_reg_len = ret_len	688:3:16333:16355	638431	1	True				
ANR	639412	AssignmentExpression	* ret_reg_len = ret_len		638431	0		=			
ANR	639413	UnaryOperationExpression	* ret_reg_len		638431	0					
ANR	639414	UnaryOperator	*		638431	0					
ANR	639415	Identifier	ret_reg_len		638431	1					
ANR	639416	Identifier	ret_len		638431	1					
ANR	639417	BreakStatement	break ;	690:2:16363:16368	638431	58	True				
ANR	639418	Label	case 79 :	691:1:16371:16378	638431	59	True				
ANR	639419	ExpressionStatement	res = get_trans_reg ( ins_bits )	692:2:16382:16411	638431	60	True				
ANR	639420	AssignmentExpression	res = get_trans_reg ( ins_bits )		638431	0		=			
ANR	639421	Identifier	res		638431	0					
ANR	639422	CallExpression	get_trans_reg ( ins_bits )		638431	1					
ANR	639423	Callee	get_trans_reg		638431	0					
ANR	639424	Identifier	get_trans_reg		638431	0					
ANR	639425	ArgumentList	ins_bits		638431	1					
ANR	639426	Argument	ins_bits		638431	0					
ANR	639427	Identifier	ins_bits		638431	0					
ANR	639428	IfStatement	if ( ! res )		638431	61					
ANR	639429	Condition	! res	693:6:16419:16422	638431	0	True				
ANR	639430	UnaryOperationExpression	! res		638431	0					
ANR	639431	UnaryOperator	!		638431	0					
ANR	639432	Identifier	res		638431	1					
ANR	639433	CompoundStatement		166:12:4182:4182	638431	1					
ANR	639434	ExpressionStatement	* err_code = - 1	694:3:16430:16444	638431	0	True				
ANR	639435	AssignmentExpression	* err_code = - 1		638431	0		=			
ANR	639436	UnaryOperationExpression	* err_code		638431	0					
ANR	639437	UnaryOperator	*		638431	0					
ANR	639438	Identifier	err_code		638431	1					
ANR	639439	UnaryOperationExpression	- 1		638431	1					
ANR	639440	UnaryOperator	-		638431	0					
ANR	639441	PrimaryExpression	1		638431	1					
ANR	639442	BreakStatement	break ;	696:2:16452:16457	638431	62	True				
ANR	639443	Label	case 49 :	697:1:16460:16467	638431	63	True				
ANR	639444	IfStatement	if ( reg_arg )		638431	64					
ANR	639445	Condition	reg_arg	698:6:16475:16481	638431	0	True				
ANR	639446	Identifier	reg_arg		638431	0					
ANR	639447	CompoundStatement		171:15:4241:4241	638431	1					
ANR	639448	IfStatement	if ( * reg_arg == '1' )		638431	0					
ANR	639449	Condition	* reg_arg == '1'	699:7:16493:16507	638431	0	True				
ANR	639450	EqualityExpression	* reg_arg == '1'		638431	0		==			
ANR	639451	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639452	UnaryOperator	*		638431	0					
ANR	639453	Identifier	reg_arg		638431	1					
ANR	639454	PrimaryExpression	'1'		638431	1					
ANR	639455	CompoundStatement		172:24:4267:4267	638431	1					
ANR	639456	ExpressionStatement	res = get_tc2_tc1 ( ins_bits >> 1 )	700:4:16516:16548	638431	0	True				
ANR	639457	AssignmentExpression	res = get_tc2_tc1 ( ins_bits >> 1 )		638431	0		=			
ANR	639458	Identifier	res		638431	0					
ANR	639459	CallExpression	get_tc2_tc1 ( ins_bits >> 1 )		638431	1					
ANR	639460	Callee	get_tc2_tc1		638431	0					
ANR	639461	Identifier	get_tc2_tc1		638431	0					
ANR	639462	ArgumentList	ins_bits >> 1		638431	1					
ANR	639463	Argument	ins_bits >> 1		638431	0					
ANR	639464	ShiftExpression	ins_bits >> 1		638431	0		>>			
ANR	639465	Identifier	ins_bits		638431	0					
ANR	639466	PrimaryExpression	1		638431	1					
ANR	639467	ElseStatement	else		638431	0					
ANR	639468	IfStatement	if ( * reg_arg == '2' )		638431	0					
ANR	639469	Condition	* reg_arg == '2'	701:14:16564:16578	638431	0	True				
ANR	639470	EqualityExpression	* reg_arg == '2'		638431	0		==			
ANR	639471	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639472	UnaryOperator	*		638431	0					
ANR	639473	Identifier	reg_arg		638431	1					
ANR	639474	PrimaryExpression	'2'		638431	1					
ANR	639475	CompoundStatement		174:31:4338:4338	638431	1					
ANR	639476	ExpressionStatement	res = get_tc2_tc1 ( ins_bits & 1 )	702:4:16587:16619	638431	0	True				
ANR	639477	AssignmentExpression	res = get_tc2_tc1 ( ins_bits & 1 )		638431	0		=			
ANR	639478	Identifier	res		638431	0					
ANR	639479	CallExpression	get_tc2_tc1 ( ins_bits & 1 )		638431	1					
ANR	639480	Callee	get_tc2_tc1		638431	0					
ANR	639481	Identifier	get_tc2_tc1		638431	0					
ANR	639482	ArgumentList	ins_bits & 1		638431	1					
ANR	639483	Argument	ins_bits & 1		638431	0					
ANR	639484	BitAndExpression	ins_bits & 1		638431	0		&			
ANR	639485	Identifier	ins_bits		638431	0					
ANR	639486	PrimaryExpression	1		638431	1					
ANR	639487	ElseStatement	else		638431	0					
ANR	639488	CompoundStatement		177:9:4392:4392	638431	0					
ANR	639489	ExpressionStatement	res = get_tc2_tc1 ( ins_bits )	705:3:16640:16668	638431	0	True				
ANR	639490	AssignmentExpression	res = get_tc2_tc1 ( ins_bits )		638431	0		=			
ANR	639491	Identifier	res		638431	0					
ANR	639492	CallExpression	get_tc2_tc1 ( ins_bits )		638431	1					
ANR	639493	Callee	get_tc2_tc1		638431	0					
ANR	639494	Identifier	get_tc2_tc1		638431	0					
ANR	639495	ArgumentList	ins_bits		638431	1					
ANR	639496	Argument	ins_bits		638431	0					
ANR	639497	Identifier	ins_bits		638431	0					
ANR	639498	IfStatement	if ( ! res )		638431	65					
ANR	639499	Condition	! res	707:6:16680:16683	638431	0	True				
ANR	639500	UnaryOperationExpression	! res		638431	0					
ANR	639501	UnaryOperator	!		638431	0					
ANR	639502	Identifier	res		638431	1					
ANR	639503	CompoundStatement		180:12:4443:4443	638431	1					
ANR	639504	ExpressionStatement	* err_code = - 1	708:3:16691:16705	638431	0	True				
ANR	639505	AssignmentExpression	* err_code = - 1		638431	0		=			
ANR	639506	UnaryOperationExpression	* err_code		638431	0					
ANR	639507	UnaryOperator	*		638431	0					
ANR	639508	Identifier	err_code		638431	1					
ANR	639509	UnaryOperationExpression	- 1		638431	1					
ANR	639510	UnaryOperator	-		638431	0					
ANR	639511	PrimaryExpression	1		638431	1					
ANR	639512	ReturnStatement	return NULL ;	709:3:16710:16721	638431	1	True				
ANR	639513	Identifier	NULL		638431	0					
ANR	639514	BreakStatement	break ;	711:2:16729:16734	638431	66	True				
ANR	639515	Label	case 52 :	712:1:16737:16744	638431	67	True				
ANR	639516	IfStatement	if ( ins_bits == 0 )		638431	68					
ANR	639517	Condition	ins_bits == 0	713:6:16752:16764	638431	0	True				
ANR	639518	EqualityExpression	ins_bits == 0		638431	0		==			
ANR	639519	Identifier	ins_bits		638431	0					
ANR	639520	PrimaryExpression	0		638431	1					
ANR	639521	CompoundStatement		186:21:4524:4524	638431	1					
ANR	639522	BreakStatement	break ;	714:3:16772:16777	638431	0	True				
ANR	639523	IfStatement	if ( reg_arg )		638431	69					
ANR	639524	Condition	reg_arg	716:6:16789:16795	638431	0	True				
ANR	639525	Identifier	reg_arg		638431	0					
ANR	639526	CompoundStatement		189:15:4555:4555	638431	1					
ANR	639527	IfStatement	if ( * reg_arg == 'H' )		638431	0					
ANR	639528	Condition	* reg_arg == 'H'	717:7:16807:16821	638431	0	True				
ANR	639529	EqualityExpression	* reg_arg == 'H'		638431	0		==			
ANR	639530	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639531	UnaryOperator	*		638431	0					
ANR	639532	Identifier	reg_arg		638431	1					
ANR	639533	PrimaryExpression	'H'		638431	1					
ANR	639534	CompoundStatement		190:24:4581:4581	638431	1					
ANR	639535	ExpressionStatement	"res = ""hi("""	718:4:16830:16841	638431	0	True				
ANR	639536	AssignmentExpression	"res = ""hi("""		638431	0		=			
ANR	639537	Identifier	res		638431	0					
ANR	639538	PrimaryExpression	"""hi("""		638431	1					
ANR	639539	ElseStatement	else		638431	0					
ANR	639540	IfStatement	if ( * reg_arg == 'L' )		638431	0					
ANR	639541	Condition	* reg_arg == 'L'	719:14:16857:16871	638431	0	True				
ANR	639542	EqualityExpression	* reg_arg == 'L'		638431	0		==			
ANR	639543	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639544	UnaryOperator	*		638431	0					
ANR	639545	Identifier	reg_arg		638431	1					
ANR	639546	PrimaryExpression	'L'		638431	1					
ANR	639547	CompoundStatement		192:31:4631:4631	638431	1					
ANR	639548	ExpressionStatement	"res = ""lo("""	720:4:16880:16891	638431	0	True				
ANR	639549	AssignmentExpression	"res = ""lo("""		638431	0		=			
ANR	639550	Identifier	res		638431	0					
ANR	639551	PrimaryExpression	"""lo("""		638431	1					
ANR	639552	ElseStatement	else		638431	0					
ANR	639553	IfStatement	if ( * reg_arg == 'd' )		638431	0					
ANR	639554	Condition	* reg_arg == 'd'	721:14:16907:16921	638431	0	True				
ANR	639555	EqualityExpression	* reg_arg == 'd'		638431	0		==			
ANR	639556	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639557	UnaryOperator	*		638431	0					
ANR	639558	Identifier	reg_arg		638431	1					
ANR	639559	PrimaryExpression	'd'		638431	1					
ANR	639560	CompoundStatement		194:31:4681:4681	638431	1					
ANR	639561	ExpressionStatement	"res = ""dbl("""	722:4:16930:16942	638431	0	True				
ANR	639562	AssignmentExpression	"res = ""dbl("""		638431	0		=			
ANR	639563	Identifier	res		638431	0					
ANR	639564	PrimaryExpression	"""dbl("""		638431	1					
ANR	639565	ElseStatement	else		638431	0					
ANR	639566	IfStatement	if ( * reg_arg == ')' )		638431	0					
ANR	639567	Condition	* reg_arg == ')'	723:14:16958:16972	638431	0	True				
ANR	639568	EqualityExpression	* reg_arg == ')'		638431	0		==			
ANR	639569	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639570	UnaryOperator	*		638431	0					
ANR	639571	Identifier	reg_arg		638431	1					
ANR	639572	PrimaryExpression	')'		638431	1					
ANR	639573	CompoundStatement		196:31:4732:4732	638431	1					
ANR	639574	ExpressionStatement	"res = "")"""	724:4:16981:16990	638431	0	True				
ANR	639575	AssignmentExpression	"res = "")"""		638431	0		=			
ANR	639576	Identifier	res		638431	0					
ANR	639577	PrimaryExpression	""")"""		638431	1					
ANR	639578	ElseStatement	else		638431	0					
ANR	639579	CompoundStatement		198:10:4759:4759	638431	0					
ANR	639580	ExpressionStatement	"res = ""<W>"""	726:4:17008:17019	638431	0	True				
ANR	639581	AssignmentExpression	"res = ""<W>"""		638431	0		=			
ANR	639582	Identifier	res		638431	0					
ANR	639583	PrimaryExpression	"""<W>"""		638431	1					
ANR	639584	ElseStatement	else		638431	0					
ANR	639585	CompoundStatement		201:9:4792:4792	638431	0					
ANR	639586	ExpressionStatement	"res = ""<W !flags>"""	729:3:17040:17058	638431	0	True				
ANR	639587	AssignmentExpression	"res = ""<W !flags>"""		638431	0		=			
ANR	639588	Identifier	res		638431	0					
ANR	639589	PrimaryExpression	"""<W !flags>"""		638431	1					
ANR	639590	ExpressionStatement	res = strdup ( res )	731:2:17066:17083	638431	70	True				
ANR	639591	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	639592	Identifier	res		638431	0					
ANR	639593	CallExpression	strdup ( res )		638431	1					
ANR	639594	Callee	strdup		638431	0					
ANR	639595	Identifier	strdup		638431	0					
ANR	639596	ArgumentList	res		638431	1					
ANR	639597	Argument	res		638431	0					
ANR	639598	Identifier	res		638431	0					
ANR	639599	BreakStatement	break ;	732:2:17087:17092	638431	71	True				
ANR	639600	Label	case 53 :	733:1:17095:17102	638431	72	True				
ANR	639601	Label	case 54 :	734:1:17105:17112	638431	73	True				
ANR	639602	Label	case 55 :	735:1:17115:17122	638431	74	True				
ANR	639603	ExpressionStatement	flag = 0	736:2:17126:17134	638431	75	True				
ANR	639604	AssignmentExpression	flag = 0		638431	0		=			
ANR	639605	Identifier	flag		638431	0					
ANR	639606	PrimaryExpression	0		638431	1					
ANR	639607	IfStatement	if ( reg_arg && * reg_arg == '3' )		638431	76					
ANR	639608	Condition	reg_arg && * reg_arg == '3'	737:6:17142:17167	638431	0	True				
ANR	639609	AndExpression	reg_arg && * reg_arg == '3'		638431	0		&&			
ANR	639610	Identifier	reg_arg		638431	0					
ANR	639611	EqualityExpression	* reg_arg == '3'		638431	1		==			
ANR	639612	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639613	UnaryOperator	*		638431	0					
ANR	639614	Identifier	reg_arg		638431	1					
ANR	639615	PrimaryExpression	'3'		638431	1					
ANR	639616	CompoundStatement		210:34:4927:4927	638431	1					
ANR	639617	ExpressionStatement	flag = ins_bits & 1	738:3:17175:17194	638431	0	True				
ANR	639618	AssignmentExpression	flag = ins_bits & 1		638431	0		=			
ANR	639619	Identifier	flag		638431	0					
ANR	639620	BitAndExpression	ins_bits & 1		638431	1		&			
ANR	639621	Identifier	ins_bits		638431	0					
ANR	639622	PrimaryExpression	1		638431	1					
ANR	639623	ExpressionStatement	ins_bits = ins_bits >> 1	739:3:17199:17223	638431	1	True				
ANR	639624	AssignmentExpression	ins_bits = ins_bits >> 1		638431	0		=			
ANR	639625	Identifier	ins_bits		638431	0					
ANR	639626	ShiftExpression	ins_bits >> 1		638431	1		>>			
ANR	639627	Identifier	ins_bits		638431	0					
ANR	639628	PrimaryExpression	1		638431	1					
ANR	639629	ExpressionStatement	reg_arg ++	740:3:17228:17237	638431	2	True				
ANR	639630	PostIncDecOperationExpression	reg_arg ++		638431	0					
ANR	639631	Identifier	reg_arg		638431	0					
ANR	639632	IncDec	++		638431	1					
ANR	639633	ExpressionStatement	aux = get_AR_regs_class1 ( ins_bits )	742:2:17245:17279	638431	77	True				
ANR	639634	AssignmentExpression	aux = get_AR_regs_class1 ( ins_bits )		638431	0		=			
ANR	639635	Identifier	aux		638431	0					
ANR	639636	CallExpression	get_AR_regs_class1 ( ins_bits )		638431	1					
ANR	639637	Callee	get_AR_regs_class1		638431	0					
ANR	639638	Identifier	get_AR_regs_class1		638431	0					
ANR	639639	ArgumentList	ins_bits		638431	1					
ANR	639640	Argument	ins_bits		638431	0					
ANR	639641	Identifier	ins_bits		638431	0					
ANR	639642	ExpressionStatement	tok_op = ins_bits & 0xF	743:2:17283:17306	638431	78	True				
ANR	639643	AssignmentExpression	tok_op = ins_bits & 0xF		638431	0		=			
ANR	639644	Identifier	tok_op		638431	0					
ANR	639645	BitAndExpression	ins_bits & 0xF		638431	1		&			
ANR	639646	Identifier	ins_bits		638431	0					
ANR	639647	PrimaryExpression	0xF		638431	1					
ANR	639648	IfStatement	if ( magic_value & 4 )		638431	79					
ANR	639649	Condition	magic_value & 4	744:6:17314:17328	638431	0	True				
ANR	639650	BitAndExpression	magic_value & 4		638431	0		&			
ANR	639651	Identifier	magic_value		638431	0					
ANR	639652	PrimaryExpression	4		638431	1					
ANR	639653	CompoundStatement		217:23:5088:5088	638431	1					
ANR	639654	IfStatement	if ( tok_op <= 7 || tok_op == 0xF )		638431	0					
ANR	639655	Condition	tok_op <= 7 || tok_op == 0xF	745:7:17340:17367	638431	0	True				
ANR	639656	OrExpression	tok_op <= 7 || tok_op == 0xF		638431	0		||			
ANR	639657	RelationalExpression	tok_op <= 7		638431	0		<=			
ANR	639658	Identifier	tok_op		638431	0					
ANR	639659	PrimaryExpression	7		638431	1					
ANR	639660	EqualityExpression	tok_op == 0xF		638431	1		==			
ANR	639661	Identifier	tok_op		638431	0					
ANR	639662	PrimaryExpression	0xF		638431	1					
ANR	639663	CompoundStatement		218:37:5127:5127	638431	1					
ANR	639664	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	746:4:17376:17405	638431	0	True				
ANR	639665	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639666	Identifier	aux		638431	0					
ANR	639667	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639668	Callee	strcat_dup		638431	0					
ANR	639669	Identifier	strcat_dup		638431	0					
ANR	639670	ArgumentList	aux		638431	1					
ANR	639671	Argument	aux		638431	0					
ANR	639672	Identifier	aux		638431	0					
ANR	639673	Argument	""")"""		638431	1					
ANR	639674	PrimaryExpression	""")"""		638431	0					
ANR	639675	Argument	1		638431	2					
ANR	639676	PrimaryExpression	1		638431	0					
ANR	639677	ExpressionStatement	"aux = strcat_dup ( ""linear("" , aux , 2 )"	747:4:17411:17446	638431	1	True				
ANR	639678	AssignmentExpression	"aux = strcat_dup ( ""linear("" , aux , 2 )"		638431	0		=			
ANR	639679	Identifier	aux		638431	0					
ANR	639680	CallExpression	"strcat_dup ( ""linear("" , aux , 2 )"		638431	1					
ANR	639681	Callee	strcat_dup		638431	0					
ANR	639682	Identifier	strcat_dup		638431	0					
ANR	639683	ArgumentList	"""linear("""		638431	1					
ANR	639684	Argument	"""linear("""		638431	0					
ANR	639685	PrimaryExpression	"""linear("""		638431	0					
ANR	639686	Argument	aux		638431	1					
ANR	639687	Identifier	aux		638431	0					
ANR	639688	Argument	2		638431	2					
ANR	639689	PrimaryExpression	2		638431	0					
ANR	639690	ElseStatement	else		638431	0					
ANR	639691	IfStatement	if ( magic_value & 8 )		638431	0					
ANR	639692	Condition	magic_value & 8	749:13:17466:17480	638431	0	True				
ANR	639693	BitAndExpression	magic_value & 8		638431	0		&			
ANR	639694	Identifier	magic_value		638431	0					
ANR	639695	PrimaryExpression	8		638431	1					
ANR	639696	CompoundStatement		222:30:5240:5240	638431	1					
ANR	639697	IfStatement	if ( tok_op <= 7 || tok_op == 0xF )		638431	0					
ANR	639698	Condition	tok_op <= 7 || tok_op == 0xF	750:7:17492:17519	638431	0	True				
ANR	639699	OrExpression	tok_op <= 7 || tok_op == 0xF		638431	0		||			
ANR	639700	RelationalExpression	tok_op <= 7		638431	0		<=			
ANR	639701	Identifier	tok_op		638431	0					
ANR	639702	PrimaryExpression	7		638431	1					
ANR	639703	EqualityExpression	tok_op == 0xF		638431	1		==			
ANR	639704	Identifier	tok_op		638431	0					
ANR	639705	PrimaryExpression	0xF		638431	1					
ANR	639706	CompoundStatement		223:37:5279:5279	638431	1					
ANR	639707	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	751:4:17528:17557	638431	0	True				
ANR	639708	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639709	Identifier	aux		638431	0					
ANR	639710	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639711	Callee	strcat_dup		638431	0					
ANR	639712	Identifier	strcat_dup		638431	0					
ANR	639713	ArgumentList	aux		638431	1					
ANR	639714	Argument	aux		638431	0					
ANR	639715	Identifier	aux		638431	0					
ANR	639716	Argument	""")"""		638431	1					
ANR	639717	PrimaryExpression	""")"""		638431	0					
ANR	639718	Argument	1		638431	2					
ANR	639719	PrimaryExpression	1		638431	0					
ANR	639720	ExpressionStatement	"aux = strcat_dup ( ""circular("" , aux , 2 )"	752:4:17563:17600	638431	1	True				
ANR	639721	AssignmentExpression	"aux = strcat_dup ( ""circular("" , aux , 2 )"		638431	0		=			
ANR	639722	Identifier	aux		638431	0					
ANR	639723	CallExpression	"strcat_dup ( ""circular("" , aux , 2 )"		638431	1					
ANR	639724	Callee	strcat_dup		638431	0					
ANR	639725	Identifier	strcat_dup		638431	0					
ANR	639726	ArgumentList	"""circular("""		638431	1					
ANR	639727	Argument	"""circular("""		638431	0					
ANR	639728	PrimaryExpression	"""circular("""		638431	0					
ANR	639729	Argument	aux		638431	1					
ANR	639730	Identifier	aux		638431	0					
ANR	639731	Argument	2		638431	2					
ANR	639732	PrimaryExpression	2		638431	0					
ANR	639733	ElseStatement	else		638431	0					
ANR	639734	IfStatement	if ( magic_value & 2 )		638431	0					
ANR	639735	Condition	magic_value & 2	754:13:17620:17634	638431	0	True				
ANR	639736	BitAndExpression	magic_value & 2		638431	0		&			
ANR	639737	Identifier	magic_value		638431	0					
ANR	639738	PrimaryExpression	2		638431	1					
ANR	639739	CompoundStatement		227:30:5394:5394	638431	1					
ANR	639740	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	755:3:17642:17671	638431	0	True				
ANR	639741	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639742	Identifier	aux		638431	0					
ANR	639743	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639744	Callee	strcat_dup		638431	0					
ANR	639745	Identifier	strcat_dup		638431	0					
ANR	639746	ArgumentList	aux		638431	1					
ANR	639747	Argument	aux		638431	0					
ANR	639748	Identifier	aux		638431	0					
ANR	639749	Argument	""")"""		638431	1					
ANR	639750	PrimaryExpression	""")"""		638431	0					
ANR	639751	Argument	1		638431	2					
ANR	639752	PrimaryExpression	1		638431	0					
ANR	639753	ExpressionStatement	"aux = strcat_dup ( ""lock("" , aux , 2 )"	756:3:17676:17709	638431	1	True				
ANR	639754	AssignmentExpression	"aux = strcat_dup ( ""lock("" , aux , 2 )"		638431	0		=			
ANR	639755	Identifier	aux		638431	0					
ANR	639756	CallExpression	"strcat_dup ( ""lock("" , aux , 2 )"		638431	1					
ANR	639757	Callee	strcat_dup		638431	0					
ANR	639758	Identifier	strcat_dup		638431	0					
ANR	639759	ArgumentList	"""lock("""		638431	1					
ANR	639760	Argument	"""lock("""		638431	0					
ANR	639761	PrimaryExpression	"""lock("""		638431	0					
ANR	639762	Argument	aux		638431	1					
ANR	639763	Identifier	aux		638431	0					
ANR	639764	Argument	2		638431	2					
ANR	639765	PrimaryExpression	2		638431	0					
ANR	639766	ElseStatement	else		638431	0					
ANR	639767	IfStatement	if ( reg_arg )		638431	0					
ANR	639768	Condition	reg_arg	757:13:17724:17730	638431	0	True				
ANR	639769	Identifier	reg_arg		638431	0					
ANR	639770	CompoundStatement		230:22:5490:5490	638431	1					
ANR	639771	IfStatement	"if ( ( ( magic_value & 0x10 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x20 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' ) ) )"		638431	0					
ANR	639772	Condition	"( ( magic_value & 0x10 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x20 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' ) )"	759:6:17749:17899	638431	0	True				
ANR	639773	OrExpression	"( ( magic_value & 0x10 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x20 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' ) )"		638431	0		||			
ANR	639774	AndExpression	"( magic_value & 0x10 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' )"		638431	0		&&			
ANR	639775	BitAndExpression	magic_value & 0x10		638431	0		&			
ANR	639776	Identifier	magic_value		638431	0					
ANR	639777	PrimaryExpression	0x10		638431	1					
ANR	639778	AndExpression	"* ins_token == 'X' && strchr ( reg_arg , 'r' )"		638431	1		&&			
ANR	639779	EqualityExpression	* ins_token == 'X'		638431	0		==			
ANR	639780	UnaryOperationExpression	* ins_token		638431	0					
ANR	639781	UnaryOperator	*		638431	0					
ANR	639782	Identifier	ins_token		638431	1					
ANR	639783	PrimaryExpression	'X'		638431	1					
ANR	639784	CallExpression	"strchr ( reg_arg , 'r' )"		638431	1					
ANR	639785	Callee	strchr		638431	0					
ANR	639786	Identifier	strchr		638431	0					
ANR	639787	ArgumentList	reg_arg		638431	1					
ANR	639788	Argument	reg_arg		638431	0					
ANR	639789	Identifier	reg_arg		638431	0					
ANR	639790	Argument	'r'		638431	1					
ANR	639791	PrimaryExpression	'r'		638431	0					
ANR	639792	AndExpression	"( magic_value & 0x20 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' )"		638431	1		&&			
ANR	639793	BitAndExpression	magic_value & 0x20		638431	0		&			
ANR	639794	Identifier	magic_value		638431	0					
ANR	639795	PrimaryExpression	0x20		638431	1					
ANR	639796	AndExpression	"* ins_token == 'Y' && strchr ( reg_arg , 'w' )"		638431	1		&&			
ANR	639797	EqualityExpression	* ins_token == 'Y'		638431	0		==			
ANR	639798	UnaryOperationExpression	* ins_token		638431	0					
ANR	639799	UnaryOperator	*		638431	0					
ANR	639800	Identifier	ins_token		638431	1					
ANR	639801	PrimaryExpression	'Y'		638431	1					
ANR	639802	CallExpression	"strchr ( reg_arg , 'w' )"		638431	1					
ANR	639803	Callee	strchr		638431	0					
ANR	639804	Identifier	strchr		638431	0					
ANR	639805	ArgumentList	reg_arg		638431	1					
ANR	639806	Argument	reg_arg		638431	0					
ANR	639807	Identifier	reg_arg		638431	0					
ANR	639808	Argument	'w'		638431	1					
ANR	639809	PrimaryExpression	'w'		638431	0					
ANR	639810	CompoundStatement		235:7:5665:5665	638431	1					
ANR	639811	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	764:4:17915:17944	638431	0	True				
ANR	639812	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639813	Identifier	aux		638431	0					
ANR	639814	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639815	Callee	strcat_dup		638431	0					
ANR	639816	Identifier	strcat_dup		638431	0					
ANR	639817	ArgumentList	aux		638431	1					
ANR	639818	Argument	aux		638431	0					
ANR	639819	Identifier	aux		638431	0					
ANR	639820	Argument	""")"""		638431	1					
ANR	639821	PrimaryExpression	""")"""		638431	0					
ANR	639822	Argument	1		638431	2					
ANR	639823	PrimaryExpression	1		638431	0					
ANR	639824	ExpressionStatement	"aux = strcat_dup ( ""port("" , aux , 2 )"	765:4:17950:17983	638431	1	True				
ANR	639825	AssignmentExpression	"aux = strcat_dup ( ""port("" , aux , 2 )"		638431	0		=			
ANR	639826	Identifier	aux		638431	0					
ANR	639827	CallExpression	"strcat_dup ( ""port("" , aux , 2 )"		638431	1					
ANR	639828	Callee	strcat_dup		638431	0					
ANR	639829	Identifier	strcat_dup		638431	0					
ANR	639830	ArgumentList	"""port("""		638431	1					
ANR	639831	Argument	"""port("""		638431	0					
ANR	639832	PrimaryExpression	"""port("""		638431	0					
ANR	639833	Argument	aux		638431	1					
ANR	639834	Identifier	aux		638431	0					
ANR	639835	Argument	2		638431	2					
ANR	639836	PrimaryExpression	2		638431	0					
ANR	639837	ElseStatement	else		638431	0					
ANR	639838	IfStatement	"if ( ( ( magic_value & 0x40 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x80000000 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' ) ) )"		638431	0					
ANR	639839	Condition	"( ( magic_value & 0x40 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x80000000 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' ) )"	767:3:18003:18159	638431	0	True				
ANR	639840	OrExpression	"( ( magic_value & 0x40 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' ) ) || ( ( magic_value & 0x80000000 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' ) )"		638431	0		||			
ANR	639841	AndExpression	"( magic_value & 0x40 ) && * ins_token == 'X' && strchr ( reg_arg , 'r' )"		638431	0		&&			
ANR	639842	BitAndExpression	magic_value & 0x40		638431	0		&			
ANR	639843	Identifier	magic_value		638431	0					
ANR	639844	PrimaryExpression	0x40		638431	1					
ANR	639845	AndExpression	"* ins_token == 'X' && strchr ( reg_arg , 'r' )"		638431	1		&&			
ANR	639846	EqualityExpression	* ins_token == 'X'		638431	0		==			
ANR	639847	UnaryOperationExpression	* ins_token		638431	0					
ANR	639848	UnaryOperator	*		638431	0					
ANR	639849	Identifier	ins_token		638431	1					
ANR	639850	PrimaryExpression	'X'		638431	1					
ANR	639851	CallExpression	"strchr ( reg_arg , 'r' )"		638431	1					
ANR	639852	Callee	strchr		638431	0					
ANR	639853	Identifier	strchr		638431	0					
ANR	639854	ArgumentList	reg_arg		638431	1					
ANR	639855	Argument	reg_arg		638431	0					
ANR	639856	Identifier	reg_arg		638431	0					
ANR	639857	Argument	'r'		638431	1					
ANR	639858	PrimaryExpression	'r'		638431	0					
ANR	639859	AndExpression	"( magic_value & 0x80000000 ) && * ins_token == 'Y' && strchr ( reg_arg , 'w' )"		638431	1		&&			
ANR	639860	BitAndExpression	magic_value & 0x80000000		638431	0		&			
ANR	639861	Identifier	magic_value		638431	0					
ANR	639862	PrimaryExpression	0x80000000		638431	1					
ANR	639863	AndExpression	"* ins_token == 'Y' && strchr ( reg_arg , 'w' )"		638431	1		&&			
ANR	639864	EqualityExpression	* ins_token == 'Y'		638431	0		==			
ANR	639865	UnaryOperationExpression	* ins_token		638431	0					
ANR	639866	UnaryOperator	*		638431	0					
ANR	639867	Identifier	ins_token		638431	1					
ANR	639868	PrimaryExpression	'Y'		638431	1					
ANR	639869	CallExpression	"strchr ( reg_arg , 'w' )"		638431	1					
ANR	639870	Callee	strchr		638431	0					
ANR	639871	Identifier	strchr		638431	0					
ANR	639872	ArgumentList	reg_arg		638431	1					
ANR	639873	Argument	reg_arg		638431	0					
ANR	639874	Identifier	reg_arg		638431	0					
ANR	639875	Argument	'w'		638431	1					
ANR	639876	PrimaryExpression	'w'		638431	0					
ANR	639877	CompoundStatement		244:5:5924:5924	638431	1					
ANR	639878	ExpressionStatement	"aux = strcat_dup ( aux , "")"" , 1 )"	772:4:18173:18202	638431	0	True				
ANR	639879	AssignmentExpression	"aux = strcat_dup ( aux , "")"" , 1 )"		638431	0		=			
ANR	639880	Identifier	aux		638431	0					
ANR	639881	CallExpression	"strcat_dup ( aux , "")"" , 1 )"		638431	1					
ANR	639882	Callee	strcat_dup		638431	0					
ANR	639883	Identifier	strcat_dup		638431	0					
ANR	639884	ArgumentList	aux		638431	1					
ANR	639885	Argument	aux		638431	0					
ANR	639886	Identifier	aux		638431	0					
ANR	639887	Argument	""")"""		638431	1					
ANR	639888	PrimaryExpression	""")"""		638431	0					
ANR	639889	Argument	1		638431	2					
ANR	639890	PrimaryExpression	1		638431	0					
ANR	639891	ExpressionStatement	"aux = strcat_dup ( ""volatile("" , aux , 2 )"	773:4:18208:18245	638431	1	True				
ANR	639892	AssignmentExpression	"aux = strcat_dup ( ""volatile("" , aux , 2 )"		638431	0		=			
ANR	639893	Identifier	aux		638431	0					
ANR	639894	CallExpression	"strcat_dup ( ""volatile("" , aux , 2 )"		638431	1					
ANR	639895	Callee	strcat_dup		638431	0					
ANR	639896	Identifier	strcat_dup		638431	0					
ANR	639897	ArgumentList	"""volatile("""		638431	1					
ANR	639898	Argument	"""volatile("""		638431	0					
ANR	639899	PrimaryExpression	"""volatile("""		638431	0					
ANR	639900	Argument	aux		638431	1					
ANR	639901	Identifier	aux		638431	0					
ANR	639902	Argument	2		638431	2					
ANR	639903	PrimaryExpression	2		638431	0					
ANR	639904	ExpressionStatement	"res = flag ? strcat_dup ( ""t3 = "" , aux , 2 ) : aux"	776:2:18258:18303	638431	80	True				
ANR	639905	AssignmentExpression	"res = flag ? strcat_dup ( ""t3 = "" , aux , 2 ) : aux"		638431	0		=			
ANR	639906	Identifier	res		638431	0					
ANR	639907	ConditionalExpression	"flag ? strcat_dup ( ""t3 = "" , aux , 2 ) : aux"		638431	1					
ANR	639908	Condition	flag		638431	0					
ANR	639909	Identifier	flag		638431	0					
ANR	639910	CallExpression	"strcat_dup ( ""t3 = "" , aux , 2 )"		638431	1					
ANR	639911	Callee	strcat_dup		638431	0					
ANR	639912	Identifier	strcat_dup		638431	0					
ANR	639913	ArgumentList	"""t3 = """		638431	1					
ANR	639914	Argument	"""t3 = """		638431	0					
ANR	639915	PrimaryExpression	"""t3 = """		638431	0					
ANR	639916	Argument	aux		638431	1					
ANR	639917	Identifier	aux		638431	0					
ANR	639918	Argument	2		638431	2					
ANR	639919	PrimaryExpression	2		638431	0					
ANR	639920	Identifier	aux		638431	2					
ANR	639921	BreakStatement	break ;	777:2:18307:18312	638431	81	True				
ANR	639922	Label	case 0 :	778:1:18315:18321	638431	82	True				
ANR	639923	Label	case 1 :	779:1:18324:18330	638431	83	True				
ANR	639924	IfStatement	if ( ! ins_bits )		638431	84					
ANR	639925	Condition	! ins_bits	780:6:18338:18346	638431	0	True				
ANR	639926	UnaryOperationExpression	! ins_bits		638431	0					
ANR	639927	UnaryOperator	!		638431	0					
ANR	639928	Identifier	ins_bits		638431	1					
ANR	639929	CompoundStatement		253:17:6106:6106	638431	1					
ANR	639930	BreakStatement	break ;	781:3:18354:18359	638431	0	True				
ANR	639931	IfStatement	if ( ! reg_arg )		638431	85					
ANR	639932	Condition	! reg_arg	783:6:18371:18378	638431	0	True				
ANR	639933	UnaryOperationExpression	! reg_arg		638431	0					
ANR	639934	UnaryOperator	!		638431	0					
ANR	639935	Identifier	reg_arg		638431	1					
ANR	639936	CompoundStatement		256:16:6138:6138	638431	1					
ANR	639937	ExpressionStatement	"res = ""U"""	784:3:18386:18395	638431	0	True				
ANR	639938	AssignmentExpression	"res = ""U"""		638431	0		=			
ANR	639939	Identifier	res		638431	0					
ANR	639940	PrimaryExpression	"""U"""		638431	1					
ANR	639941	ElseStatement	else		638431	0					
ANR	639942	CompoundStatement		258:9:6163:6163	638431	0					
ANR	639943	IfStatement	if ( * reg_arg == '(' )		638431	0					
ANR	639944	Condition	* reg_arg == '('	786:7:18415:18429	638431	0	True				
ANR	639945	EqualityExpression	* reg_arg == '('		638431	0		==			
ANR	639946	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639947	UnaryOperator	*		638431	0					
ANR	639948	Identifier	reg_arg		638431	1					
ANR	639949	PrimaryExpression	'('		638431	1					
ANR	639950	CompoundStatement		259:24:6189:6189	638431	1					
ANR	639951	ExpressionStatement	"res = ""uns("""	787:4:18438:18450	638431	0	True				
ANR	639952	AssignmentExpression	"res = ""uns("""		638431	0		=			
ANR	639953	Identifier	res		638431	0					
ANR	639954	PrimaryExpression	"""uns("""		638431	1					
ANR	639955	ElseStatement	else		638431	0					
ANR	639956	IfStatement	if ( * reg_arg == ')' )		638431	0					
ANR	639957	Condition	* reg_arg == ')'	788:14:18466:18480	638431	0	True				
ANR	639958	EqualityExpression	* reg_arg == ')'		638431	0		==			
ANR	639959	UnaryOperationExpression	* reg_arg		638431	0					
ANR	639960	UnaryOperator	*		638431	0					
ANR	639961	Identifier	reg_arg		638431	1					
ANR	639962	PrimaryExpression	')'		638431	1					
ANR	639963	CompoundStatement		261:31:6240:6240	638431	1					
ANR	639964	ExpressionStatement	"res = "")"""	789:4:18489:18498	638431	0	True				
ANR	639965	AssignmentExpression	"res = "")"""		638431	0		=			
ANR	639966	Identifier	res		638431	0					
ANR	639967	PrimaryExpression	""")"""		638431	1					
ANR	639968	ElseStatement	else		638431	0					
ANR	639969	CompoundStatement		263:10:6267:6267	638431	0					
ANR	639970	ExpressionStatement	"res = ""<$/#>"""	791:4:18516:18529	638431	0	True				
ANR	639971	AssignmentExpression	"res = ""<$/#>"""		638431	0		=			
ANR	639972	Identifier	res		638431	0					
ANR	639973	PrimaryExpression	"""<$/#>"""		638431	1					
ANR	639974	ExpressionStatement	res = strdup ( res )	794:2:18542:18559	638431	86	True				
ANR	639975	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	639976	Identifier	res		638431	0					
ANR	639977	CallExpression	strdup ( res )		638431	1					
ANR	639978	Callee	strdup		638431	0					
ANR	639979	Identifier	strdup		638431	0					
ANR	639980	ArgumentList	res		638431	1					
ANR	639981	Argument	res		638431	0					
ANR	639982	Identifier	res		638431	0					
ANR	639983	BreakStatement	break ;	795:2:18563:18568	638431	87	True				
ANR	639984	Label	case 2 :	796:1:18571:18577	638431	88	True				
ANR	639985	IfStatement	if ( ! ins_bits )		638431	89					
ANR	639986	Condition	! ins_bits	797:6:18585:18593	638431	0	True				
ANR	639987	UnaryOperationExpression	! ins_bits		638431	0					
ANR	639988	UnaryOperator	!		638431	0					
ANR	639989	Identifier	ins_bits		638431	1					
ANR	639990	CompoundStatement		270:17:6353:6353	638431	1					
ANR	639991	BreakStatement	break ;	798:3:18601:18606	638431	0	True				
ANR	639992	IfStatement	if ( ! reg_arg )		638431	90					
ANR	639993	Condition	! reg_arg	800:6:18618:18625	638431	0	True				
ANR	639994	UnaryOperationExpression	! reg_arg		638431	0					
ANR	639995	UnaryOperator	!		638431	0					
ANR	639996	Identifier	reg_arg		638431	1					
ANR	639997	CompoundStatement		273:16:6385:6385	638431	1					
ANR	639998	ExpressionStatement	"res = ""R"""	801:3:18633:18642	638431	0	True				
ANR	639999	AssignmentExpression	"res = ""R"""		638431	0		=			
ANR	640000	Identifier	res		638431	0					
ANR	640001	PrimaryExpression	"""R"""		638431	1					
ANR	640002	ElseStatement	else		638431	0					
ANR	640003	CompoundStatement		275:9:6410:6410	638431	0					
ANR	640004	IfStatement	if ( * reg_arg == '(' )		638431	0					
ANR	640005	Condition	* reg_arg == '('	803:7:18662:18676	638431	0	True				
ANR	640006	EqualityExpression	* reg_arg == '('		638431	0		==			
ANR	640007	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640008	UnaryOperator	*		638431	0					
ANR	640009	Identifier	reg_arg		638431	1					
ANR	640010	PrimaryExpression	'('		638431	1					
ANR	640011	CompoundStatement		276:24:6436:6436	638431	1					
ANR	640012	ExpressionStatement	"res = ""rnd("""	804:4:18685:18697	638431	0	True				
ANR	640013	AssignmentExpression	"res = ""rnd("""		638431	0		=			
ANR	640014	Identifier	res		638431	0					
ANR	640015	PrimaryExpression	"""rnd("""		638431	1					
ANR	640016	ElseStatement	else		638431	0					
ANR	640017	IfStatement	if ( * reg_arg == ')' )		638431	0					
ANR	640018	Condition	* reg_arg == ')'	805:14:18713:18727	638431	0	True				
ANR	640019	EqualityExpression	* reg_arg == ')'		638431	0		==			
ANR	640020	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640021	UnaryOperator	*		638431	0					
ANR	640022	Identifier	reg_arg		638431	1					
ANR	640023	PrimaryExpression	')'		638431	1					
ANR	640024	CompoundStatement		278:31:6487:6487	638431	1					
ANR	640025	ExpressionStatement	"res = "")"""	806:4:18736:18745	638431	0	True				
ANR	640026	AssignmentExpression	"res = "")"""		638431	0		=			
ANR	640027	Identifier	res		638431	0					
ANR	640028	PrimaryExpression	""")"""		638431	1					
ANR	640029	ElseStatement	else		638431	0					
ANR	640030	CompoundStatement		280:10:6514:6514	638431	0					
ANR	640031	ExpressionStatement	"res = ""<%>"""	808:4:18763:18774	638431	0	True				
ANR	640032	AssignmentExpression	"res = ""<%>"""		638431	0		=			
ANR	640033	Identifier	res		638431	0					
ANR	640034	PrimaryExpression	"""<%>"""		638431	1					
ANR	640035	ExpressionStatement	res = strdup ( res )	811:2:18787:18804	638431	91	True				
ANR	640036	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	640037	Identifier	res		638431	0					
ANR	640038	CallExpression	strdup ( res )		638431	1					
ANR	640039	Callee	strdup		638431	0					
ANR	640040	Identifier	strdup		638431	0					
ANR	640041	ArgumentList	res		638431	1					
ANR	640042	Argument	res		638431	0					
ANR	640043	Identifier	res		638431	0					
ANR	640044	BreakStatement	break ;	812:2:18808:18813	638431	92	True				
ANR	640045	Label	case 12 :	813:1:18816:18823	638431	93	True				
ANR	640046	IfStatement	if ( ! ins_bits )		638431	94					
ANR	640047	Condition	! ins_bits	814:6:18831:18839	638431	0	True				
ANR	640048	UnaryOperationExpression	! ins_bits		638431	0					
ANR	640049	UnaryOperator	!		638431	0					
ANR	640050	Identifier	ins_bits		638431	1					
ANR	640051	CompoundStatement		287:17:6599:6599	638431	1					
ANR	640052	BreakStatement	break ;	815:3:18847:18852	638431	0	True				
ANR	640053	IfStatement	if ( ! reg_arg )		638431	95					
ANR	640054	Condition	! reg_arg	817:5:18863:18870	638431	0	True				
ANR	640055	UnaryOperationExpression	! reg_arg		638431	0					
ANR	640056	UnaryOperator	!		638431	0					
ANR	640057	Identifier	reg_arg		638431	1					
ANR	640058	CompoundStatement		290:15:6630:6630	638431	1					
ANR	640059	ExpressionStatement	"res = ""F"""	818:3:18878:18887	638431	0	True				
ANR	640060	AssignmentExpression	"res = ""F"""		638431	0		=			
ANR	640061	Identifier	res		638431	0					
ANR	640062	PrimaryExpression	"""F"""		638431	1					
ANR	640063	ElseStatement	else		638431	0					
ANR	640064	CompoundStatement		292:9:6655:6655	638431	0					
ANR	640065	IfStatement	if ( * reg_arg == '(' )		638431	0					
ANR	640066	Condition	* reg_arg == '('	820:7:18907:18921	638431	0	True				
ANR	640067	EqualityExpression	* reg_arg == '('		638431	0		==			
ANR	640068	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640069	UnaryOperator	*		638431	0					
ANR	640070	Identifier	reg_arg		638431	1					
ANR	640071	PrimaryExpression	'('		638431	1					
ANR	640072	CompoundStatement		293:24:6681:6681	638431	1					
ANR	640073	ExpressionStatement	"res = ""frct("""	821:4:18930:18943	638431	0	True				
ANR	640074	AssignmentExpression	"res = ""frct("""		638431	0		=			
ANR	640075	Identifier	res		638431	0					
ANR	640076	PrimaryExpression	"""frct("""		638431	1					
ANR	640077	ElseStatement	else		638431	0					
ANR	640078	IfStatement	if ( * reg_arg == ')' )		638431	0					
ANR	640079	Condition	* reg_arg == ')'	822:14:18959:18973	638431	0	True				
ANR	640080	EqualityExpression	* reg_arg == ')'		638431	0		==			
ANR	640081	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640082	UnaryOperator	*		638431	0					
ANR	640083	Identifier	reg_arg		638431	1					
ANR	640084	PrimaryExpression	')'		638431	1					
ANR	640085	CompoundStatement		295:31:6733:6733	638431	1					
ANR	640086	ExpressionStatement	"res = "")"""	823:4:18982:18991	638431	0	True				
ANR	640087	AssignmentExpression	"res = "")"""		638431	0		=			
ANR	640088	Identifier	res		638431	0					
ANR	640089	PrimaryExpression	""")"""		638431	1					
ANR	640090	ElseStatement	else		638431	0					
ANR	640091	IfStatement	if ( * reg_arg == 'a' )		638431	0					
ANR	640092	Condition	* reg_arg == 'a'	824:14:19007:19021	638431	0	True				
ANR	640093	EqualityExpression	* reg_arg == 'a'		638431	0		==			
ANR	640094	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640095	UnaryOperator	*		638431	0					
ANR	640096	Identifier	reg_arg		638431	1					
ANR	640097	PrimaryExpression	'a'		638431	1					
ANR	640098	CompoundStatement		297:31:6781:6781	638431	1					
ANR	640099	ExpressionStatement	"res = ""<%>"""	825:4:19030:19041	638431	0	True				
ANR	640100	AssignmentExpression	"res = ""<%>"""		638431	0		=			
ANR	640101	Identifier	res		638431	0					
ANR	640102	PrimaryExpression	"""<%>"""		638431	1					
ANR	640103	ElseStatement	else		638431	0					
ANR	640104	CompoundStatement		299:10:6810:6810	638431	0					
ANR	640105	ExpressionStatement	"res = ""</>"""	827:4:19059:19070	638431	0	True				
ANR	640106	AssignmentExpression	"res = ""</>"""		638431	0		=			
ANR	640107	Identifier	res		638431	0					
ANR	640108	PrimaryExpression	"""</>"""		638431	1					
ANR	640109	ExpressionStatement	res = strdup ( res )	830:2:19083:19100	638431	96	True				
ANR	640110	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	640111	Identifier	res		638431	0					
ANR	640112	CallExpression	strdup ( res )		638431	1					
ANR	640113	Callee	strdup		638431	0					
ANR	640114	Identifier	strdup		638431	0					
ANR	640115	ArgumentList	res		638431	1					
ANR	640116	Argument	res		638431	0					
ANR	640117	Identifier	res		638431	0					
ANR	640118	BreakStatement	break ;	831:2:19104:19109	638431	97	True				
ANR	640119	Label	case 29 :	832:1:19112:19119	638431	98	True				
ANR	640120	IfStatement	if ( ! ins_bits )		638431	99					
ANR	640121	Condition	! ins_bits	833:6:19127:19135	638431	0	True				
ANR	640122	UnaryOperationExpression	! ins_bits		638431	0					
ANR	640123	UnaryOperator	!		638431	0					
ANR	640124	Identifier	ins_bits		638431	1					
ANR	640125	CompoundStatement		306:17:6895:6895	638431	1					
ANR	640126	BreakStatement	break ;	834:3:19143:19148	638431	0	True				
ANR	640127	IfStatement	if ( ! reg_arg )		638431	100					
ANR	640128	Condition	! reg_arg	836:6:19160:19167	638431	0	True				
ANR	640129	UnaryOperationExpression	! reg_arg		638431	0					
ANR	640130	UnaryOperator	!		638431	0					
ANR	640131	Identifier	reg_arg		638431	1					
ANR	640132	CompoundStatement		309:16:6927:6927	638431	1					
ANR	640133	ExpressionStatement	"res = ""saturate"""	837:3:19175:19191	638431	0	True				
ANR	640134	AssignmentExpression	"res = ""saturate"""		638431	0		=			
ANR	640135	Identifier	res		638431	0					
ANR	640136	PrimaryExpression	"""saturate"""		638431	1					
ANR	640137	ElseStatement	else		638431	0					
ANR	640138	CompoundStatement		311:9:6959:6959	638431	0					
ANR	640139	IfStatement	if ( * reg_arg == '(' )		638431	0					
ANR	640140	Condition	* reg_arg == '('	839:7:19211:19225	638431	0	True				
ANR	640141	EqualityExpression	* reg_arg == '('		638431	0		==			
ANR	640142	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640143	UnaryOperator	*		638431	0					
ANR	640144	Identifier	reg_arg		638431	1					
ANR	640145	PrimaryExpression	'('		638431	1					
ANR	640146	CompoundStatement		312:25:6986:6986	638431	1					
ANR	640147	ExpressionStatement	"res = ""saturate("""	840:4:19235:19252	638431	0	True				
ANR	640148	AssignmentExpression	"res = ""saturate("""		638431	0		=			
ANR	640149	Identifier	res		638431	0					
ANR	640150	PrimaryExpression	"""saturate("""		638431	1					
ANR	640151	ElseStatement	else		638431	0					
ANR	640152	IfStatement	if ( * reg_arg == ')' )		638431	0					
ANR	640153	Condition	* reg_arg == ')'	841:14:19268:19282	638431	0	True				
ANR	640154	EqualityExpression	* reg_arg == ')'		638431	0		==			
ANR	640155	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640156	UnaryOperator	*		638431	0					
ANR	640157	Identifier	reg_arg		638431	1					
ANR	640158	PrimaryExpression	')'		638431	1					
ANR	640159	CompoundStatement		314:31:7042:7042	638431	1					
ANR	640160	ExpressionStatement	"res = "")"""	842:4:19291:19300	638431	0	True				
ANR	640161	AssignmentExpression	"res = "")"""		638431	0		=			
ANR	640162	Identifier	res		638431	0					
ANR	640163	PrimaryExpression	""")"""		638431	1					
ANR	640164	ElseStatement	else		638431	0					
ANR	640165	CompoundStatement		316:10:7069:7069	638431	0					
ANR	640166	ExpressionStatement	"res = ""<saturate>"""	844:4:19318:19336	638431	0	True				
ANR	640167	AssignmentExpression	"res = ""<saturate>"""		638431	0		=			
ANR	640168	Identifier	res		638431	0					
ANR	640169	PrimaryExpression	"""<saturate>"""		638431	1					
ANR	640170	ExpressionStatement	res = strdup ( res )	847:2:19349:19366	638431	101	True				
ANR	640171	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	640172	Identifier	res		638431	0					
ANR	640173	CallExpression	strdup ( res )		638431	1					
ANR	640174	Callee	strdup		638431	0					
ANR	640175	Identifier	strdup		638431	0					
ANR	640176	ArgumentList	res		638431	1					
ANR	640177	Argument	res		638431	0					
ANR	640178	Identifier	res		638431	0					
ANR	640179	BreakStatement	break ;	848:2:19370:19375	638431	102	True				
ANR	640180	Label	case 16 :	849:1:19378:19385	638431	103	True				
ANR	640181	ExpressionStatement	"res = ( ins_bits != 0 ) ? strdup ( ""t3 = "" ) : NULL"	850:2:19389:19434	638431	104	True				
ANR	640182	AssignmentExpression	"res = ( ins_bits != 0 ) ? strdup ( ""t3 = "" ) : NULL"		638431	0		=			
ANR	640183	Identifier	res		638431	0					
ANR	640184	ConditionalExpression	"( ins_bits != 0 ) ? strdup ( ""t3 = "" ) : NULL"		638431	1					
ANR	640185	Condition	ins_bits != 0		638431	0					
ANR	640186	EqualityExpression	ins_bits != 0		638431	0		!=			
ANR	640187	Identifier	ins_bits		638431	0					
ANR	640188	PrimaryExpression	0		638431	1					
ANR	640189	CallExpression	"strdup ( ""t3 = "" )"		638431	1					
ANR	640190	Callee	strdup		638431	0					
ANR	640191	Identifier	strdup		638431	0					
ANR	640192	ArgumentList	"""t3 = """		638431	1					
ANR	640193	Argument	"""t3 = """		638431	0					
ANR	640194	PrimaryExpression	"""t3 = """		638431	0					
ANR	640195	Identifier	NULL		638431	2					
ANR	640196	BreakStatement	break ;	851:2:19438:19443	638431	105	True				
ANR	640197	Label	case 17 :	852:1:19446:19453	638431	106	True				
ANR	640198	IfStatement	if ( ! ins_bits )		638431	107					
ANR	640199	Condition	! ins_bits	853:6:19461:19469	638431	0	True				
ANR	640200	UnaryOperationExpression	! ins_bits		638431	0					
ANR	640201	UnaryOperator	!		638431	0					
ANR	640202	Identifier	ins_bits		638431	1					
ANR	640203	CompoundStatement		326:17:7229:7229	638431	1					
ANR	640204	BreakStatement	break ;	854:3:19477:19482	638431	0	True				
ANR	640205	IfStatement	if ( ! reg_arg )		638431	108					
ANR	640206	Condition	! reg_arg	856:6:19494:19501	638431	0	True				
ANR	640207	UnaryOperationExpression	! reg_arg		638431	0					
ANR	640208	UnaryOperator	!		638431	0					
ANR	640209	Identifier	reg_arg		638431	1					
ANR	640210	CompoundStatement		329:16:7261:7261	638431	1					
ANR	640211	ExpressionStatement	"res = ""40"""	857:3:19509:19519	638431	0	True				
ANR	640212	AssignmentExpression	"res = ""40"""		638431	0		=			
ANR	640213	Identifier	res		638431	0					
ANR	640214	PrimaryExpression	"""40"""		638431	1					
ANR	640215	ElseStatement	else		638431	0					
ANR	640216	CompoundStatement		331:9:7287:7287	638431	0					
ANR	640217	IfStatement	if ( * reg_arg == '(' )		638431	0					
ANR	640218	Condition	* reg_arg == '('	859:7:19539:19553	638431	0	True				
ANR	640219	EqualityExpression	* reg_arg == '('		638431	0		==			
ANR	640220	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640221	UnaryOperator	*		638431	0					
ANR	640222	Identifier	reg_arg		638431	1					
ANR	640223	PrimaryExpression	'('		638431	1					
ANR	640224	CompoundStatement		332:24:7313:7313	638431	1					
ANR	640225	ExpressionStatement	"res = ""m40("""	860:4:19562:19574	638431	0	True				
ANR	640226	AssignmentExpression	"res = ""m40("""		638431	0		=			
ANR	640227	Identifier	res		638431	0					
ANR	640228	PrimaryExpression	"""m40("""		638431	1					
ANR	640229	ElseStatement	else		638431	0					
ANR	640230	IfStatement	if ( * reg_arg == ')' )		638431	0					
ANR	640231	Condition	* reg_arg == ')'	861:14:19590:19604	638431	0	True				
ANR	640232	EqualityExpression	* reg_arg == ')'		638431	0		==			
ANR	640233	UnaryOperationExpression	* reg_arg		638431	0					
ANR	640234	UnaryOperator	*		638431	0					
ANR	640235	Identifier	reg_arg		638431	1					
ANR	640236	PrimaryExpression	')'		638431	1					
ANR	640237	CompoundStatement		334:31:7364:7364	638431	1					
ANR	640238	ExpressionStatement	"res = "")"""	862:4:19613:19622	638431	0	True				
ANR	640239	AssignmentExpression	"res = "")"""		638431	0		=			
ANR	640240	Identifier	res		638431	0					
ANR	640241	PrimaryExpression	""")"""		638431	1					
ANR	640242	ElseStatement	else		638431	0					
ANR	640243	CompoundStatement		336:10:7391:7391	638431	0					
ANR	640244	ExpressionStatement	"res = ""<4>"""	864:4:19640:19651	638431	0	True				
ANR	640245	AssignmentExpression	"res = ""<4>"""		638431	0		=			
ANR	640246	Identifier	res		638431	0					
ANR	640247	PrimaryExpression	"""<4>"""		638431	1					
ANR	640248	ExpressionStatement	res = strdup ( res )	867:2:19664:19681	638431	109	True				
ANR	640249	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	640250	Identifier	res		638431	0					
ANR	640251	CallExpression	strdup ( res )		638431	1					
ANR	640252	Callee	strdup		638431	0					
ANR	640253	Identifier	strdup		638431	0					
ANR	640254	ArgumentList	res		638431	1					
ANR	640255	Argument	res		638431	0					
ANR	640256	Identifier	res		638431	0					
ANR	640257	BreakStatement	break ;	868:2:19685:19690	638431	110	True				
ANR	640258	Label	case 78 :	869:1:19693:19700	638431	111	True				
ANR	640259	IfStatement	"if ( ! r_str_ncasecmp ( ins_token , ""q_SAT"" , 5 ) )"		638431	112					
ANR	640260	Condition	"! r_str_ncasecmp ( ins_token , ""q_SAT"" , 5 )"	870:6:19708:19746	638431	0	True				
ANR	640261	UnaryOperationExpression	"! r_str_ncasecmp ( ins_token , ""q_SAT"" , 5 )"		638431	0					
ANR	640262	UnaryOperator	!		638431	0					
ANR	640263	CallExpression	"r_str_ncasecmp ( ins_token , ""q_SAT"" , 5 )"		638431	1					
ANR	640264	Callee	r_str_ncasecmp		638431	0					
ANR	640265	Identifier	r_str_ncasecmp		638431	0					
ANR	640266	ArgumentList	ins_token		638431	1					
ANR	640267	Argument	ins_token		638431	0					
ANR	640268	Identifier	ins_token		638431	0					
ANR	640269	Argument	"""q_SAT"""		638431	1					
ANR	640270	PrimaryExpression	"""q_SAT"""		638431	0					
ANR	640271	Argument	5		638431	2					
ANR	640272	PrimaryExpression	5		638431	0					
ANR	640273	CompoundStatement		343:47:7506:7506	638431	1					
ANR	640274	ExpressionStatement	"res = ins_bits ? ""s"" : NULL"	871:3:19754:19779	638431	0	True				
ANR	640275	AssignmentExpression	"res = ins_bits ? ""s"" : NULL"		638431	0		=			
ANR	640276	Identifier	res		638431	0					
ANR	640277	ConditionalExpression	"ins_bits ? ""s"" : NULL"		638431	1					
ANR	640278	Condition	ins_bits		638431	0					
ANR	640279	Identifier	ins_bits		638431	0					
ANR	640280	PrimaryExpression	"""s"""		638431	1					
ANR	640281	Identifier	NULL		638431	2					
ANR	640282	ElseStatement	else		638431	0					
ANR	640283	IfStatement	"if ( ! r_str_ncasecmp ( ins_token , ""q_CIRC"" , 6 ) )"		638431	0					
ANR	640284	Condition	"! r_str_ncasecmp ( ins_token , ""q_CIRC"" , 6 )"	872:13:19794:19832	638431	0	True				
ANR	640285	UnaryOperationExpression	"! r_str_ncasecmp ( ins_token , ""q_CIRC"" , 6 )"		638431	0					
ANR	640286	UnaryOperator	!		638431	0					
ANR	640287	CallExpression	"r_str_ncasecmp ( ins_token , ""q_CIRC"" , 6 )"		638431	1					
ANR	640288	Callee	r_str_ncasecmp		638431	0					
ANR	640289	Identifier	r_str_ncasecmp		638431	0					
ANR	640290	ArgumentList	ins_token		638431	1					
ANR	640291	Argument	ins_token		638431	0					
ANR	640292	Identifier	ins_token		638431	0					
ANR	640293	Argument	"""q_CIRC"""		638431	1					
ANR	640294	PrimaryExpression	"""q_CIRC"""		638431	0					
ANR	640295	Argument	6		638431	2					
ANR	640296	PrimaryExpression	6		638431	0					
ANR	640297	CompoundStatement		345:54:7592:7592	638431	1					
ANR	640298	ExpressionStatement	"res = ins_bits ? "".cr"" : NULL"	873:3:19840:19867	638431	0	True				
ANR	640299	AssignmentExpression	"res = ins_bits ? "".cr"" : NULL"		638431	0		=			
ANR	640300	Identifier	res		638431	0					
ANR	640301	ConditionalExpression	"ins_bits ? "".cr"" : NULL"		638431	1					
ANR	640302	Condition	ins_bits		638431	0					
ANR	640303	Identifier	ins_bits		638431	0					
ANR	640304	PrimaryExpression	""".cr"""		638431	1					
ANR	640305	Identifier	NULL		638431	2					
ANR	640306	ElseStatement	else		638431	0					
ANR	640307	IfStatement	"if ( ! r_str_ncasecmp ( ins_token , ""q_LINR"" , 6 ) )"		638431	0					
ANR	640308	Condition	"! r_str_ncasecmp ( ins_token , ""q_LINR"" , 6 )"	874:13:19882:19920	638431	0	True				
ANR	640309	UnaryOperationExpression	"! r_str_ncasecmp ( ins_token , ""q_LINR"" , 6 )"		638431	0					
ANR	640310	UnaryOperator	!		638431	0					
ANR	640311	CallExpression	"r_str_ncasecmp ( ins_token , ""q_LINR"" , 6 )"		638431	1					
ANR	640312	Callee	r_str_ncasecmp		638431	0					
ANR	640313	Identifier	r_str_ncasecmp		638431	0					
ANR	640314	ArgumentList	ins_token		638431	1					
ANR	640315	Argument	ins_token		638431	0					
ANR	640316	Identifier	ins_token		638431	0					
ANR	640317	Argument	"""q_LINR"""		638431	1					
ANR	640318	PrimaryExpression	"""q_LINR"""		638431	0					
ANR	640319	Argument	6		638431	2					
ANR	640320	PrimaryExpression	6		638431	0					
ANR	640321	CompoundStatement		347:54:7680:7680	638431	1					
ANR	640322	ExpressionStatement	"res = ins_bits ? "".lr"" : NULL"	875:3:19928:19955	638431	0	True				
ANR	640323	AssignmentExpression	"res = ins_bits ? "".lr"" : NULL"		638431	0		=			
ANR	640324	Identifier	res		638431	0					
ANR	640325	ConditionalExpression	"ins_bits ? "".lr"" : NULL"		638431	1					
ANR	640326	Condition	ins_bits		638431	0					
ANR	640327	Identifier	ins_bits		638431	0					
ANR	640328	PrimaryExpression	""".lr"""		638431	1					
ANR	640329	Identifier	NULL		638431	2					
ANR	640330	ElseStatement	else		638431	0					
ANR	640331	CompoundStatement		349:9:7723:7723	638431	0					
ANR	640332	ExpressionStatement	"fprintf ( stderr , ""Invalid instruction %s\\n!"" , ins_token )"	877:3:19971:20027	638431	0	True				
ANR	640333	CallExpression	"fprintf ( stderr , ""Invalid instruction %s\\n!"" , ins_token )"		638431	0					
ANR	640334	Callee	fprintf		638431	0					
ANR	640335	Identifier	fprintf		638431	0					
ANR	640336	ArgumentList	stderr		638431	1					
ANR	640337	Argument	stderr		638431	0					
ANR	640338	Identifier	stderr		638431	0					
ANR	640339	Argument	"""Invalid instruction %s\\n!"""		638431	1					
ANR	640340	PrimaryExpression	"""Invalid instruction %s\\n!"""		638431	0					
ANR	640341	Argument	ins_token		638431	2					
ANR	640342	Identifier	ins_token		638431	0					
ANR	640343	ExpressionStatement	* err_code = - 1	878:3:20032:20046	638431	1	True				
ANR	640344	AssignmentExpression	* err_code = - 1		638431	0		=			
ANR	640345	UnaryOperationExpression	* err_code		638431	0					
ANR	640346	UnaryOperator	*		638431	0					
ANR	640347	Identifier	err_code		638431	1					
ANR	640348	UnaryOperationExpression	- 1		638431	1					
ANR	640349	UnaryOperator	-		638431	0					
ANR	640350	PrimaryExpression	1		638431	1					
ANR	640351	ReturnStatement	return NULL ;	879:3:20051:20062	638431	2	True				
ANR	640352	Identifier	NULL		638431	0					
ANR	640353	IfStatement	if ( res != NULL )		638431	113					
ANR	640354	Condition	res != NULL	881:6:20074:20084	638431	0	True				
ANR	640355	EqualityExpression	res != NULL		638431	0		!=			
ANR	640356	Identifier	res		638431	0					
ANR	640357	Identifier	NULL		638431	1					
ANR	640358	CompoundStatement		354:19:7844:7844	638431	1					
ANR	640359	IfStatement	if ( C55PLUS_DEBUG )		638431	0					
ANR	640360	Condition	C55PLUS_DEBUG	882:7:20096:20108	638431	0	True				
ANR	640361	Identifier	C55PLUS_DEBUG		638431	0					
ANR	640362	CompoundStatement		355:22:7868:7868	638431	1					
ANR	640363	ExpressionStatement	"printf ( ""OP(78): TOKEN=%s\\n"" , res )"	883:4:20117:20150	638431	0	True				
ANR	640364	CallExpression	"printf ( ""OP(78): TOKEN=%s\\n"" , res )"		638431	0					
ANR	640365	Callee	printf		638431	0					
ANR	640366	Identifier	printf		638431	0					
ANR	640367	ArgumentList	"""OP(78): TOKEN=%s\\n"""		638431	1					
ANR	640368	Argument	"""OP(78): TOKEN=%s\\n"""		638431	0					
ANR	640369	PrimaryExpression	"""OP(78): TOKEN=%s\\n"""		638431	0					
ANR	640370	Argument	res		638431	1					
ANR	640371	Identifier	res		638431	0					
ANR	640372	ExpressionStatement	res = strdup ( res )	885:3:20160:20177	638431	1	True				
ANR	640373	AssignmentExpression	res = strdup ( res )		638431	0		=			
ANR	640374	Identifier	res		638431	0					
ANR	640375	CallExpression	strdup ( res )		638431	1					
ANR	640376	Callee	strdup		638431	0					
ANR	640377	Identifier	strdup		638431	0					
ANR	640378	ArgumentList	res		638431	1					
ANR	640379	Argument	res		638431	0					
ANR	640380	Identifier	res		638431	0					
ANR	640381	BreakStatement	break ;	887:2:20185:20190	638431	114	True				
ANR	640382	Label	ret_decode :	890:0:20196:20206	638431	12	True				
ANR	640383	Identifier	ret_decode		638431	0					
ANR	640384	IfStatement	if ( C55PLUS_DEBUG )		638431	13					
ANR	640385	Condition	C55PLUS_DEBUG	891:5:20213:20225	638431	0	True				
ANR	640386	Identifier	C55PLUS_DEBUG		638431	0					
ANR	640387	CompoundStatement		364:20:7985:7985	638431	1					
ANR	640388	ExpressionStatement	"printf ( ""RES = %s\\n"" , ( res ) ? res : ""NULL"" )"	892:2:20232:20274	638431	0	True				
ANR	640389	CallExpression	"printf ( ""RES = %s\\n"" , ( res ) ? res : ""NULL"" )"		638431	0					
ANR	640390	Callee	printf		638431	0					
ANR	640391	Identifier	printf		638431	0					
ANR	640392	ArgumentList	"""RES = %s\\n"""		638431	1					
ANR	640393	Argument	"""RES = %s\\n"""		638431	0					
ANR	640394	PrimaryExpression	"""RES = %s\\n"""		638431	0					
ANR	640395	Argument	"( res ) ? res : ""NULL"""		638431	1					
ANR	640396	ConditionalExpression	"( res ) ? res : ""NULL"""		638431	0					
ANR	640397	Condition	res		638431	0					
ANR	640398	Identifier	res		638431	0					
ANR	640399	Identifier	res		638431	1					
ANR	640400	PrimaryExpression	"""NULL"""		638431	2					
ANR	640401	ReturnStatement	return res ;	894:1:20280:20290	638431	14	True				
ANR	640402	Identifier	res		638431	0					
ANR	640403	ReturnType	static char *		638431	1					
ANR	640404	Identifier	get_token_decoded		638431	2					
ANR	640405	ParameterList	"st32 hash_code , char * ins_token , ut32 ins_token_len , char * reg_arg , ut32 * ret_ins_bits , ut32 * ret_reg_len , ut32 magic_value , ut32 ins_pos , ut32 ins_len , ut8 two_ins , int * err_code"		638431	3					
ANR	640406	Parameter	st32 hash_code	526:31:12059:12072	638431	0	True				
ANR	640407	ParameterType	st32		638431	0					
ANR	640408	Identifier	hash_code		638431	1					
ANR	640409	Parameter	char * ins_token	526:47:12075:12089	638431	1	True				
ANR	640410	ParameterType	char *		638431	0					
ANR	640411	Identifier	ins_token		638431	1					
ANR	640412	Parameter	ut32 ins_token_len	526:64:12092:12109	638431	2	True				
ANR	640413	ParameterType	ut32		638431	0					
ANR	640414	Identifier	ins_token_len		638431	1					
ANR	640415	Parameter	char * reg_arg	527:1:12113:12125	638431	3	True				
ANR	640416	ParameterType	char *		638431	0					
ANR	640417	Identifier	reg_arg		638431	1					
ANR	640418	Parameter	ut32 * ret_ins_bits	527:16:12128:12145	638431	4	True				
ANR	640419	ParameterType	ut32 *		638431	0					
ANR	640420	Identifier	ret_ins_bits		638431	1					
ANR	640421	Parameter	ut32 * ret_reg_len	527:36:12148:12164	638431	5	True				
ANR	640422	ParameterType	ut32 *		638431	0					
ANR	640423	Identifier	ret_reg_len		638431	1					
ANR	640424	Parameter	ut32 magic_value	527:55:12167:12182	638431	6	True				
ANR	640425	ParameterType	ut32		638431	0					
ANR	640426	Identifier	magic_value		638431	1					
ANR	640427	Parameter	ut32 ins_pos	528:1:12186:12197	638431	7	True				
ANR	640428	ParameterType	ut32		638431	0					
ANR	640429	Identifier	ins_pos		638431	1					
ANR	640430	Parameter	ut32 ins_len	528:15:12200:12211	638431	8	True				
ANR	640431	ParameterType	ut32		638431	0					
ANR	640432	Identifier	ins_len		638431	1					
ANR	640433	Parameter	ut8 two_ins	528:29:12214:12224	638431	9	True				
ANR	640434	ParameterType	ut8		638431	0					
ANR	640435	Identifier	two_ins		638431	1					
ANR	640436	Parameter	int * err_code	528:42:12227:12239	638431	10	True				
ANR	640437	ParameterType	int *		638431	0					
ANR	640438	Identifier	err_code		638431	1					
ANR	640439	CFGEntryNode	ENTRY		638431		True				
ANR	640440	CFGExitNode	EXIT		638431		True				
ANR	640441	Symbol	get_reg_pair		638431						
ANR	640442	Symbol	& ret_len		638431						
ANR	640443	Symbol	flag		638431						
ANR	640444	Symbol	is_linear_circular		638431						
ANR	640445	Symbol	aux		638431						
ANR	640446	Symbol	err_code		638431						
ANR	640447	Symbol	strchr		638431						
ANR	640448	Symbol	get_ins_bits		638431						
ANR	640449	Symbol	hash_code		638431						
ANR	640450	Symbol	* err_code		638431						
ANR	640451	Symbol	* ins_token		638431						
ANR	640452	Symbol	get_sim_reg		638431						
ANR	640453	Symbol	ret_reg_len		638431						
ANR	640454	Symbol	two_ins		638431						
ANR	640455	Symbol	ins_bits		638431						
ANR	640456	Symbol	ret_len		638431						
ANR	640457	Symbol	* ret_reg_len		638431						
ANR	640458	Symbol	ins_token		638431						
ANR	640459	Symbol	reg_arg		638431						
ANR	640460	Symbol	buff_aux		638431						
ANR	640461	Symbol	r_str_ncasecmp		638431						
ANR	640462	Symbol	ins_len		638431						
ANR	640463	Symbol	res		638431						
ANR	640464	Symbol	strcat_dup		638431						
ANR	640465	Symbol	C55PLUS_DEBUG		638431						
ANR	640466	Symbol	* reg_arg		638431						
ANR	640467	Symbol	decode_regis		638431						
ANR	640468	Symbol	get_tc2_tc1		638431						
ANR	640469	Symbol	NULL		638431						
ANR	640470	Symbol	get_opers		638431						
ANR	640471	Symbol	ret_ins_bits		638431						
ANR	640472	Symbol	get_AR_regs_class1		638431						
ANR	640473	Symbol	get_AR_regs_class2		638431						
ANR	640474	Symbol	ins_pos		638431						
ANR	640475	Symbol	get_status_regs_and_bits		638431						
ANR	640476	Symbol	get_cmp_op		638431						
ANR	640477	Symbol	stderr		638431						
ANR	640478	Symbol	tok_op		638431						
ANR	640479	Symbol	magic_value		638431						
ANR	640480	Symbol	strdup		638431						
ANR	640481	Symbol	ins_token_len		638431						
ANR	640482	Symbol	* ret_ins_bits		638431						
ANR	640483	Symbol	get_trans_reg		638431						
