command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	555982	File	data/converged/CVE-2019-16718~_radare2/bin_nro.c								
ANR	555983	ClassDef	<unnamed>	14:8:359:647							
ANR	555984	DeclStmt									
ANR	555985	Decl							ut32	ut32	magic
ANR	555986	DeclStmt									
ANR	555987	Decl							ut32	ut32	unknown
ANR	555988	DeclStmt									
ANR	555989	Decl							ut32	ut32	size
ANR	555990	DeclStmt									
ANR	555991	Decl							ut32	ut32	unknown2
ANR	555992	DeclStmt									
ANR	555993	Decl							ut32	ut32	text_memoffset
ANR	555994	DeclStmt									
ANR	555995	Decl							ut32	ut32	text_size
ANR	555996	DeclStmt									
ANR	555997	Decl							ut32	ut32	ro_memoffset
ANR	555998	DeclStmt									
ANR	555999	Decl							ut32	ut32	ro_size
ANR	556000	DeclStmt									
ANR	556001	Decl							ut32	ut32	data_memoffset
ANR	556002	DeclStmt									
ANR	556003	Decl							ut32	ut32	data_size
ANR	556004	DeclStmt									
ANR	556005	Decl							ut32	ut32	bss_size
ANR	556006	DeclStmt									
ANR	556007	Decl							ut32	ut32	unknown3
ANR	556008	DeclStmt									
ANR	556009	Decl									NROHeader
ANR	556010	Function	baddr	29:0:650:741							
ANR	556011	FunctionDef	baddr (RBinFile * bf)		556010	0					
ANR	556012	CompoundStatement		29:32:682:741	556010	0					
ANR	556013	ReturnStatement	"return bf ? readLE32 ( bf -> buf , NRO_OFFSET_MODMEMOFF ) : 0 ;"	30:1:685:739	556010	0	True				
ANR	556014	ConditionalExpression	"bf ? readLE32 ( bf -> buf , NRO_OFFSET_MODMEMOFF ) : 0"		556010	0					
ANR	556015	Condition	bf		556010	0					
ANR	556016	Identifier	bf		556010	0					
ANR	556017	CallExpression	"readLE32 ( bf -> buf , NRO_OFFSET_MODMEMOFF )"		556010	1					
ANR	556018	Callee	readLE32		556010	0					
ANR	556019	Identifier	readLE32		556010	0					
ANR	556020	ArgumentList	bf -> buf		556010	1					
ANR	556021	Argument	bf -> buf		556010	0					
ANR	556022	PtrMemberAccess	bf -> buf		556010	0					
ANR	556023	Identifier	bf		556010	0					
ANR	556024	Identifier	buf		556010	1					
ANR	556025	Argument	NRO_OFFSET_MODMEMOFF		556010	1					
ANR	556026	Identifier	NRO_OFFSET_MODMEMOFF		556010	0					
ANR	556027	PrimaryExpression	0		556010	2					
ANR	556028	ReturnType	static ut64		556010	1					
ANR	556029	Identifier	baddr		556010	2					
ANR	556030	ParameterList	RBinFile * bf		556010	3					
ANR	556031	Parameter	RBinFile * bf	29:18:668:679	556010	0	True				
ANR	556032	ParameterType	RBinFile *		556010	0					
ANR	556033	Identifier	bf		556010	1					
ANR	556034	CFGEntryNode	ENTRY		556010		True				
ANR	556035	CFGExitNode	EXIT		556010		True				
ANR	556036	Symbol	bf		556010						
ANR	556037	Symbol	NRO_OFFSET_MODMEMOFF		556010						
ANR	556038	Symbol	bf -> buf		556010						
ANR	556039	Symbol	readLE32		556010						
ANR	556040	Symbol	* bf		556010						
ANR	556041	Function	check_buffer	33:0:744:922							
ANR	556042	FunctionDef	check_buffer (RBuffer * b)		556041	0					
ANR	556043	CompoundStatement		33:37:781:922	556041	0					
ANR	556044	IdentifierDeclStatement	ut8 magic [ 4 ] ;	34:1:784:796	556041	0	True				
ANR	556045	IdentifierDecl	magic [ 4 ]		556041	0					
ANR	556046	IdentifierDeclType	ut8 [ 4 ]		556041	0					
ANR	556047	Identifier	magic		556041	1					
ANR	556048	PrimaryExpression	4		556041	2					
ANR	556049	IfStatement	"if ( r_buf_read_at ( b , NRO_OFF ( magic ) , magic , sizeof ( magic ) ) == 4 )"		556041	1					
ANR	556050	Condition	"r_buf_read_at ( b , NRO_OFF ( magic ) , magic , sizeof ( magic ) ) == 4"	35:5:803:864	556041	0	True				
ANR	556051	EqualityExpression	"r_buf_read_at ( b , NRO_OFF ( magic ) , magic , sizeof ( magic ) ) == 4"		556041	0		==			
ANR	556052	CallExpression	"r_buf_read_at ( b , NRO_OFF ( magic ) , magic , sizeof ( magic ) )"		556041	0					
ANR	556053	Callee	r_buf_read_at		556041	0					
ANR	556054	Identifier	r_buf_read_at		556041	0					
ANR	556055	ArgumentList	b		556041	1					
ANR	556056	Argument	b		556041	0					
ANR	556057	Identifier	b		556041	0					
ANR	556058	Argument	NRO_OFF ( magic )		556041	1					
ANR	556059	CallExpression	NRO_OFF ( magic )		556041	0					
ANR	556060	Callee	NRO_OFF		556041	0					
ANR	556061	Identifier	NRO_OFF		556041	0					
ANR	556062	ArgumentList	magic		556041	1					
ANR	556063	Argument	magic		556041	0					
ANR	556064	Identifier	magic		556041	0					
ANR	556065	Argument	magic		556041	2					
ANR	556066	Identifier	magic		556041	0					
ANR	556067	Argument	sizeof ( magic )		556041	3					
ANR	556068	SizeofExpression	sizeof ( magic )		556041	0					
ANR	556069	Sizeof	sizeof		556041	0					
ANR	556070	SizeofOperand	magic		556041	1					
ANR	556071	PrimaryExpression	4		556041	1					
ANR	556072	CompoundStatement		3:69:85:85	556041	1					
ANR	556073	ReturnStatement	return fileType ( magic ) != NULL ;	36:2:871:902	556041	0	True				
ANR	556074	EqualityExpression	fileType ( magic ) != NULL		556041	0		!=			
ANR	556075	CallExpression	fileType ( magic )		556041	0					
ANR	556076	Callee	fileType		556041	0					
ANR	556077	Identifier	fileType		556041	0					
ANR	556078	ArgumentList	magic		556041	1					
ANR	556079	Argument	magic		556041	0					
ANR	556080	Identifier	magic		556041	0					
ANR	556081	Identifier	NULL		556041	1					
ANR	556082	ReturnStatement	return false ;	38:1:908:920	556041	2	True				
ANR	556083	Identifier	false		556041	0					
ANR	556084	ReturnType	static bool		556041	1					
ANR	556085	Identifier	check_buffer		556041	2					
ANR	556086	ParameterList	RBuffer * b		556041	3					
ANR	556087	Parameter	RBuffer * b	33:25:769:778	556041	0	True				
ANR	556088	ParameterType	RBuffer *		556041	0					
ANR	556089	Identifier	b		556041	1					
ANR	556090	CFGEntryNode	ENTRY		556041		True				
ANR	556091	CFGExitNode	EXIT		556041		True				
ANR	556092	Symbol	magic		556041						
ANR	556093	Symbol	b		556041						
ANR	556094	Symbol	NRO_OFF		556041						
ANR	556095	Symbol	NULL		556041						
ANR	556096	Symbol	r_buf_read_at		556041						
ANR	556097	Symbol	false		556041						
ANR	556098	Symbol	fileType		556041						
ANR	556099	Function	load_buffer	41:0:925:1404							
ANR	556100	FunctionDef	"load_buffer (RBinFile * bf , void * * bin_obj , RBuffer * b , ut64 loadaddr , Sdb * sdb)"		556099	0					
ANR	556101	CompoundStatement		41:91:1016:1404	556099	0					
ANR	556102	IdentifierDeclStatement	RBinNXOObj * bin = R_NEW0 ( RBinNXOObj ) ;	43:1:1054:1091	556099	0	True				
ANR	556103	IdentifierDecl	* bin = R_NEW0 ( RBinNXOObj )		556099	0					
ANR	556104	IdentifierDeclType	RBinNXOObj *		556099	0					
ANR	556105	Identifier	bin		556099	1					
ANR	556106	AssignmentExpression	* bin = R_NEW0 ( RBinNXOObj )		556099	2		=			
ANR	556107	Identifier	bin		556099	0					
ANR	556108	CallExpression	R_NEW0 ( RBinNXOObj )		556099	1					
ANR	556109	Callee	R_NEW0		556099	0					
ANR	556110	Identifier	R_NEW0		556099	0					
ANR	556111	ArgumentList	RBinNXOObj		556099	1					
ANR	556112	Argument	RBinNXOObj		556099	0					
ANR	556113	Identifier	RBinNXOObj		556099	0					
ANR	556114	IfStatement	if ( bin )		556099	1					
ANR	556115	Condition	bin	44:5:1098:1100	556099	0	True				
ANR	556116	Identifier	bin		556099	0					
ANR	556117	CompoundStatement		9:2:273:319	556099	1					
ANR	556118	IdentifierDeclStatement	ut64 ba = baddr ( bf ) ;	45:2:1107:1127	556099	0	True				
ANR	556119	IdentifierDecl	ba = baddr ( bf )		556099	0					
ANR	556120	IdentifierDeclType	ut64		556099	0					
ANR	556121	Identifier	ba		556099	1					
ANR	556122	AssignmentExpression	ba = baddr ( bf )		556099	2		=			
ANR	556123	Identifier	ba		556099	0					
ANR	556124	CallExpression	baddr ( bf )		556099	1					
ANR	556125	Callee	baddr		556099	0					
ANR	556126	Identifier	baddr		556099	0					
ANR	556127	ArgumentList	bf		556099	1					
ANR	556128	Argument	bf		556099	0					
ANR	556129	Identifier	bf		556099	0					
ANR	556130	ExpressionStatement	bin -> methods_list = r_list_newf ( ( RListFree ) free )	46:2:1131:1180	556099	1	True				
ANR	556131	AssignmentExpression	bin -> methods_list = r_list_newf ( ( RListFree ) free )		556099	0		=			
ANR	556132	PtrMemberAccess	bin -> methods_list		556099	0					
ANR	556133	Identifier	bin		556099	0					
ANR	556134	Identifier	methods_list		556099	1					
ANR	556135	CallExpression	r_list_newf ( ( RListFree ) free )		556099	1					
ANR	556136	Callee	r_list_newf		556099	0					
ANR	556137	Identifier	r_list_newf		556099	0					
ANR	556138	ArgumentList	( RListFree ) free		556099	1					
ANR	556139	Argument	( RListFree ) free		556099	0					
ANR	556140	CastExpression	( RListFree ) free		556099	0					
ANR	556141	CastTarget	RListFree		556099	0					
ANR	556142	Identifier	free		556099	1					
ANR	556143	ExpressionStatement	bin -> imports_list = r_list_newf ( ( RListFree ) free )	47:2:1184:1233	556099	2	True				
ANR	556144	AssignmentExpression	bin -> imports_list = r_list_newf ( ( RListFree ) free )		556099	0		=			
ANR	556145	PtrMemberAccess	bin -> imports_list		556099	0					
ANR	556146	Identifier	bin		556099	0					
ANR	556147	Identifier	imports_list		556099	1					
ANR	556148	CallExpression	r_list_newf ( ( RListFree ) free )		556099	1					
ANR	556149	Callee	r_list_newf		556099	0					
ANR	556150	Identifier	r_list_newf		556099	0					
ANR	556151	ArgumentList	( RListFree ) free		556099	1					
ANR	556152	Argument	( RListFree ) free		556099	0					
ANR	556153	CastExpression	( RListFree ) free		556099	0					
ANR	556154	CastTarget	RListFree		556099	0					
ANR	556155	Identifier	free		556099	1					
ANR	556156	ExpressionStatement	bin -> classes_list = r_list_newf ( ( RListFree ) free )	48:2:1237:1286	556099	3	True				
ANR	556157	AssignmentExpression	bin -> classes_list = r_list_newf ( ( RListFree ) free )		556099	0		=			
ANR	556158	PtrMemberAccess	bin -> classes_list		556099	0					
ANR	556159	Identifier	bin		556099	0					
ANR	556160	Identifier	classes_list		556099	1					
ANR	556161	CallExpression	r_list_newf ( ( RListFree ) free )		556099	1					
ANR	556162	Callee	r_list_newf		556099	0					
ANR	556163	Identifier	r_list_newf		556099	0					
ANR	556164	ArgumentList	( RListFree ) free		556099	1					
ANR	556165	Argument	( RListFree ) free		556099	0					
ANR	556166	CastExpression	( RListFree ) free		556099	0					
ANR	556167	CastTarget	RListFree		556099	0					
ANR	556168	Identifier	free		556099	1					
ANR	556169	IdentifierDeclStatement	"ut32 mod0 = readLE32 ( b , NRO_OFFSET_MODMEMOFF ) ;"	49:2:1290:1336	556099	4	True				
ANR	556170	IdentifierDecl	"mod0 = readLE32 ( b , NRO_OFFSET_MODMEMOFF )"		556099	0					
ANR	556171	IdentifierDeclType	ut32		556099	0					
ANR	556172	Identifier	mod0		556099	1					
ANR	556173	AssignmentExpression	"mod0 = readLE32 ( b , NRO_OFFSET_MODMEMOFF )"		556099	2		=			
ANR	556174	Identifier	mod0		556099	0					
ANR	556175	CallExpression	"readLE32 ( b , NRO_OFFSET_MODMEMOFF )"		556099	1					
ANR	556176	Callee	readLE32		556099	0					
ANR	556177	Identifier	readLE32		556099	0					
ANR	556178	ArgumentList	b		556099	1					
ANR	556179	Argument	b		556099	0					
ANR	556180	Identifier	b		556099	0					
ANR	556181	Argument	NRO_OFFSET_MODMEMOFF		556099	1					
ANR	556182	Identifier	NRO_OFFSET_MODMEMOFF		556099	0					
ANR	556183	ExpressionStatement	"parseMod ( b , bin , mod0 , ba )"	50:2:1340:1367	556099	5	True				
ANR	556184	CallExpression	"parseMod ( b , bin , mod0 , ba )"		556099	0					
ANR	556185	Callee	parseMod		556099	0					
ANR	556186	Identifier	parseMod		556099	0					
ANR	556187	ArgumentList	b		556099	1					
ANR	556188	Argument	b		556099	0					
ANR	556189	Identifier	b		556099	0					
ANR	556190	Argument	bin		556099	1					
ANR	556191	Identifier	bin		556099	0					
ANR	556192	Argument	mod0		556099	2					
ANR	556193	Identifier	mod0		556099	0					
ANR	556194	Argument	ba		556099	3					
ANR	556195	Identifier	ba		556099	0					
ANR	556196	ExpressionStatement	* bin_obj = bin	51:2:1371:1385	556099	6	True				
ANR	556197	AssignmentExpression	* bin_obj = bin		556099	0		=			
ANR	556198	UnaryOperationExpression	* bin_obj		556099	0					
ANR	556199	UnaryOperator	*		556099	0					
ANR	556200	Identifier	bin_obj		556099	1					
ANR	556201	Identifier	bin		556099	1					
ANR	556202	ReturnStatement	return true ;	53:1:1391:1402	556099	2	True				
ANR	556203	Identifier	true		556099	0					
ANR	556204	ReturnType	static bool		556099	1					
ANR	556205	Identifier	load_buffer		556099	2					
ANR	556206	ParameterList	"RBinFile * bf , void * * bin_obj , RBuffer * b , ut64 loadaddr , Sdb * sdb"		556099	3					
ANR	556207	Parameter	RBinFile * bf	41:24:949:960	556099	0	True				
ANR	556208	ParameterType	RBinFile *		556099	0					
ANR	556209	Identifier	bf		556099	1					
ANR	556210	Parameter	void * * bin_obj	41:38:963:976	556099	1	True				
ANR	556211	ParameterType	void * *		556099	0					
ANR	556212	Identifier	bin_obj		556099	1					
ANR	556213	Parameter	RBuffer * b	41:54:979:988	556099	2	True				
ANR	556214	ParameterType	RBuffer *		556099	0					
ANR	556215	Identifier	b		556099	1					
ANR	556216	Parameter	ut64 loadaddr	41:66:991:1003	556099	3	True				
ANR	556217	ParameterType	ut64		556099	0					
ANR	556218	Identifier	loadaddr		556099	1					
ANR	556219	Parameter	Sdb * sdb	41:81:1006:1013	556099	4	True				
ANR	556220	ParameterType	Sdb *		556099	0					
ANR	556221	Identifier	sdb		556099	1					
ANR	556222	CFGEntryNode	ENTRY		556099		True				
ANR	556223	CFGExitNode	EXIT		556099		True				
ANR	556224	Symbol	baddr		556099						
ANR	556225	Symbol	bin -> methods_list		556099						
ANR	556226	Symbol	b		556099						
ANR	556227	Symbol	* bin_obj		556099						
ANR	556228	Symbol	bf		556099						
ANR	556229	Symbol	r_list_newf		556099						
ANR	556230	Symbol	bin		556099						
ANR	556231	Symbol	readLE32		556099						
ANR	556232	Symbol	RBinNXOObj		556099						
ANR	556233	Symbol	* bin		556099						
ANR	556234	Symbol	loadaddr		556099						
ANR	556235	Symbol	sdb		556099						
ANR	556236	Symbol	R_NEW0		556099						
ANR	556237	Symbol	NRO_OFFSET_MODMEMOFF		556099						
ANR	556238	Symbol	bin_obj		556099						
ANR	556239	Symbol	bin -> classes_list		556099						
ANR	556240	Symbol	true		556099						
ANR	556241	Symbol	bin -> imports_list		556099						
ANR	556242	Symbol	free		556099						
ANR	556243	Symbol	mod0		556099						
ANR	556244	Symbol	ba		556099						
ANR	556245	Function	binsym	56:0:1407:1479							
ANR	556246	FunctionDef	"binsym (RBinFile * bf , int type)"		556245	0					
ANR	556247	CompoundStatement		56:48:1455:1479	556245	0					
ANR	556248	ReturnStatement	return NULL ;	57:1:1458:1469	556245	0	True				
ANR	556249	Identifier	NULL		556245	0					
ANR	556250	ReturnType	static RBinAddr *		556245	1					
ANR	556251	Identifier	binsym		556245	2					
ANR	556252	ParameterList	"RBinFile * bf , int type"		556245	3					
ANR	556253	Parameter	RBinFile * bf	56:24:1431:1442	556245	0	True				
ANR	556254	ParameterType	RBinFile *		556245	0					
ANR	556255	Identifier	bf		556245	1					
ANR	556256	Parameter	int type	56:38:1445:1452	556245	1	True				
ANR	556257	ParameterType	int		556245	0					
ANR	556258	Identifier	type		556245	1					
ANR	556259	CFGEntryNode	ENTRY		556245		True				
ANR	556260	CFGExitNode	EXIT		556245		True				
ANR	556261	Symbol	NULL		556245						
ANR	556262	Symbol	bf		556245						
ANR	556263	Symbol	type		556245						
ANR	556264	Function	entries	60:0:1482:1763							
ANR	556265	FunctionDef	entries (RBinFile * bf)		556264	0					
ANR	556266	CompoundStatement		60:36:1518:1763	556264	0					
ANR	556267	IdentifierDeclStatement	RList * ret ;	61:1:1521:1531	556264	0	True				
ANR	556268	IdentifierDecl	* ret		556264	0					
ANR	556269	IdentifierDeclType	RList *		556264	0					
ANR	556270	Identifier	ret		556264	1					
ANR	556271	IdentifierDeclStatement	RBinAddr * ptr = NULL ;	62:1:1534:1554	556264	1	True				
ANR	556272	IdentifierDecl	* ptr = NULL		556264	0					
ANR	556273	IdentifierDeclType	RBinAddr *		556264	0					
ANR	556274	Identifier	ptr		556264	1					
ANR	556275	AssignmentExpression	* ptr = NULL		556264	2		=			
ANR	556276	Identifier	NULL		556264	0					
ANR	556277	Identifier	NULL		556264	1					
ANR	556278	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		556264	2					
ANR	556279	Condition	! ( ret = r_list_new ( ) )	63:5:1561:1582	556264	0	True				
ANR	556280	UnaryOperationExpression	! ( ret = r_list_new ( ) )		556264	0					
ANR	556281	UnaryOperator	!		556264	0					
ANR	556282	AssignmentExpression	ret = r_list_new ( )		556264	1		=			
ANR	556283	Identifier	ret		556264	0					
ANR	556284	CallExpression	r_list_new ( )		556264	1					
ANR	556285	Callee	r_list_new		556264	0					
ANR	556286	Identifier	r_list_new		556264	0					
ANR	556287	ArgumentList			556264	1					
ANR	556288	CompoundStatement		4:29:66:66	556264	1					
ANR	556289	ReturnStatement	return NULL ;	64:2:1589:1600	556264	0	True				
ANR	556290	Identifier	NULL		556264	0					
ANR	556291	ExpressionStatement	ret -> free = free	66:1:1606:1622	556264	3	True				
ANR	556292	AssignmentExpression	ret -> free = free		556264	0		=			
ANR	556293	PtrMemberAccess	ret -> free		556264	0					
ANR	556294	Identifier	ret		556264	0					
ANR	556295	Identifier	free		556264	1					
ANR	556296	Identifier	free		556264	1					
ANR	556297	IfStatement	if ( ( ptr = R_NEW0 ( RBinAddr ) ) )		556264	4					
ANR	556298	Condition	ptr = R_NEW0 ( RBinAddr )	67:5:1629:1653	556264	0	True				
ANR	556299	AssignmentExpression	ptr = R_NEW0 ( RBinAddr )		556264	0		=			
ANR	556300	Identifier	ptr		556264	0					
ANR	556301	CallExpression	R_NEW0 ( RBinAddr )		556264	1					
ANR	556302	Callee	R_NEW0		556264	0					
ANR	556303	Identifier	R_NEW0		556264	0					
ANR	556304	ArgumentList	RBinAddr		556264	1					
ANR	556305	Argument	RBinAddr		556264	0					
ANR	556306	Identifier	RBinAddr		556264	0					
ANR	556307	CompoundStatement		8:32:137:137	556264	1					
ANR	556308	ExpressionStatement	ptr -> paddr = 0x80	68:2:1660:1677	556264	0	True				
ANR	556309	AssignmentExpression	ptr -> paddr = 0x80		556264	0		=			
ANR	556310	PtrMemberAccess	ptr -> paddr		556264	0					
ANR	556311	Identifier	ptr		556264	0					
ANR	556312	Identifier	paddr		556264	1					
ANR	556313	PrimaryExpression	0x80		556264	1					
ANR	556314	ExpressionStatement	ptr -> vaddr = ptr -> paddr + baddr ( bf )	69:2:1681:1717	556264	1	True				
ANR	556315	AssignmentExpression	ptr -> vaddr = ptr -> paddr + baddr ( bf )		556264	0		=			
ANR	556316	PtrMemberAccess	ptr -> vaddr		556264	0					
ANR	556317	Identifier	ptr		556264	0					
ANR	556318	Identifier	vaddr		556264	1					
ANR	556319	AdditiveExpression	ptr -> paddr + baddr ( bf )		556264	1		+			
ANR	556320	PtrMemberAccess	ptr -> paddr		556264	0					
ANR	556321	Identifier	ptr		556264	0					
ANR	556322	Identifier	paddr		556264	1					
ANR	556323	CallExpression	baddr ( bf )		556264	1					
ANR	556324	Callee	baddr		556264	0					
ANR	556325	Identifier	baddr		556264	0					
ANR	556326	ArgumentList	bf		556264	1					
ANR	556327	Argument	bf		556264	0					
ANR	556328	Identifier	bf		556264	0					
ANR	556329	ExpressionStatement	"r_list_append ( ret , ptr )"	70:2:1721:1745	556264	2	True				
ANR	556330	CallExpression	"r_list_append ( ret , ptr )"		556264	0					
ANR	556331	Callee	r_list_append		556264	0					
ANR	556332	Identifier	r_list_append		556264	0					
ANR	556333	ArgumentList	ret		556264	1					
ANR	556334	Argument	ret		556264	0					
ANR	556335	Identifier	ret		556264	0					
ANR	556336	Argument	ptr		556264	1					
ANR	556337	Identifier	ptr		556264	0					
ANR	556338	ReturnStatement	return ret ;	72:1:1751:1761	556264	5	True				
ANR	556339	Identifier	ret		556264	0					
ANR	556340	ReturnType	static RList *		556264	1					
ANR	556341	Identifier	entries		556264	2					
ANR	556342	ParameterList	RBinFile * bf		556264	3					
ANR	556343	Parameter	RBinFile * bf	60:22:1504:1515	556264	0	True				
ANR	556344	ParameterType	RBinFile *		556264	0					
ANR	556345	Identifier	bf		556264	1					
ANR	556346	CFGEntryNode	ENTRY		556264		True				
ANR	556347	CFGExitNode	EXIT		556264		True				
ANR	556348	Symbol	ret		556264						
ANR	556349	Symbol	ptr -> paddr		556264						
ANR	556350	Symbol	baddr		556264						
ANR	556351	Symbol	NULL		556264						
ANR	556352	Symbol	bf		556264						
ANR	556353	Symbol	* ret		556264						
ANR	556354	Symbol	ret -> free		556264						
ANR	556355	Symbol	ptr		556264						
ANR	556356	Symbol	ptr -> vaddr		556264						
ANR	556357	Symbol	R_NEW0		556264						
ANR	556358	Symbol	RBinAddr		556264						
ANR	556359	Symbol	* ptr		556264						
ANR	556360	Symbol	free		556264						
ANR	556361	Symbol	r_list_new		556264						
ANR	556362	Function	get_sdb	75:0:1766:2281							
ANR	556363	FunctionDef	get_sdb (RBinFile * bf)		556362	0					
ANR	556364	CompoundStatement		75:34:1800:2281	556362	0					
ANR	556365	IdentifierDeclStatement	Sdb * kv = sdb_new0 ( ) ;	76:1:1803:1824	556362	0	True				
ANR	556366	IdentifierDecl	* kv = sdb_new0 ( )		556362	0					
ANR	556367	IdentifierDeclType	Sdb *		556362	0					
ANR	556368	Identifier	kv		556362	1					
ANR	556369	AssignmentExpression	* kv = sdb_new0 ( )		556362	2		=			
ANR	556370	Identifier	kv		556362	0					
ANR	556371	CallExpression	sdb_new0 ( )		556362	1					
ANR	556372	Callee	sdb_new0		556362	0					
ANR	556373	Identifier	sdb_new0		556362	0					
ANR	556374	ArgumentList			556362	1					
ANR	556375	ExpressionStatement	"sdb_num_set ( kv , ""nro_start.offset"" , 0 , 0 )"	77:1:1827:1869	556362	1	True				
ANR	556376	CallExpression	"sdb_num_set ( kv , ""nro_start.offset"" , 0 , 0 )"		556362	0					
ANR	556377	Callee	sdb_num_set		556362	0					
ANR	556378	Identifier	sdb_num_set		556362	0					
ANR	556379	ArgumentList	kv		556362	1					
ANR	556380	Argument	kv		556362	0					
ANR	556381	Identifier	kv		556362	0					
ANR	556382	Argument	"""nro_start.offset"""		556362	1					
ANR	556383	PrimaryExpression	"""nro_start.offset"""		556362	0					
ANR	556384	Argument	0		556362	2					
ANR	556385	PrimaryExpression	0		556362	0					
ANR	556386	Argument	0		556362	3					
ANR	556387	PrimaryExpression	0		556362	0					
ANR	556388	ExpressionStatement	"sdb_num_set ( kv , ""nro_start.size"" , 16 , 0 )"	78:1:1872:1913	556362	2	True				
ANR	556389	CallExpression	"sdb_num_set ( kv , ""nro_start.size"" , 16 , 0 )"		556362	0					
ANR	556390	Callee	sdb_num_set		556362	0					
ANR	556391	Identifier	sdb_num_set		556362	0					
ANR	556392	ArgumentList	kv		556362	1					
ANR	556393	Argument	kv		556362	0					
ANR	556394	Identifier	kv		556362	0					
ANR	556395	Argument	"""nro_start.size"""		556362	1					
ANR	556396	PrimaryExpression	"""nro_start.size"""		556362	0					
ANR	556397	Argument	16		556362	2					
ANR	556398	PrimaryExpression	16		556362	0					
ANR	556399	Argument	0		556362	3					
ANR	556400	PrimaryExpression	0		556362	0					
ANR	556401	ExpressionStatement	"sdb_set ( kv , ""nro_start.format"" , ""xxq unused mod_memoffset padding"" , 0 )"	79:1:1916:1987	556362	3	True				
ANR	556402	CallExpression	"sdb_set ( kv , ""nro_start.format"" , ""xxq unused mod_memoffset padding"" , 0 )"		556362	0					
ANR	556403	Callee	sdb_set		556362	0					
ANR	556404	Identifier	sdb_set		556362	0					
ANR	556405	ArgumentList	kv		556362	1					
ANR	556406	Argument	kv		556362	0					
ANR	556407	Identifier	kv		556362	0					
ANR	556408	Argument	"""nro_start.format"""		556362	1					
ANR	556409	PrimaryExpression	"""nro_start.format"""		556362	0					
ANR	556410	Argument	"""xxq unused mod_memoffset padding"""		556362	2					
ANR	556411	PrimaryExpression	"""xxq unused mod_memoffset padding"""		556362	0					
ANR	556412	Argument	0		556362	3					
ANR	556413	PrimaryExpression	0		556362	0					
ANR	556414	ExpressionStatement	"sdb_num_set ( kv , ""nro_header.offset"" , 16 , 0 )"	80:1:1990:2034	556362	4	True				
ANR	556415	CallExpression	"sdb_num_set ( kv , ""nro_header.offset"" , 16 , 0 )"		556362	0					
ANR	556416	Callee	sdb_num_set		556362	0					
ANR	556417	Identifier	sdb_num_set		556362	0					
ANR	556418	ArgumentList	kv		556362	1					
ANR	556419	Argument	kv		556362	0					
ANR	556420	Identifier	kv		556362	0					
ANR	556421	Argument	"""nro_header.offset"""		556362	1					
ANR	556422	PrimaryExpression	"""nro_header.offset"""		556362	0					
ANR	556423	Argument	16		556362	2					
ANR	556424	PrimaryExpression	16		556362	0					
ANR	556425	Argument	0		556362	3					
ANR	556426	PrimaryExpression	0		556362	0					
ANR	556427	ExpressionStatement	"sdb_num_set ( kv , ""nro_header.size"" , 0x70 , 0 )"	81:1:2037:2081	556362	5	True				
ANR	556428	CallExpression	"sdb_num_set ( kv , ""nro_header.size"" , 0x70 , 0 )"		556362	0					
ANR	556429	Callee	sdb_num_set		556362	0					
ANR	556430	Identifier	sdb_num_set		556362	0					
ANR	556431	ArgumentList	kv		556362	1					
ANR	556432	Argument	kv		556362	0					
ANR	556433	Identifier	kv		556362	0					
ANR	556434	Argument	"""nro_header.size"""		556362	1					
ANR	556435	PrimaryExpression	"""nro_header.size"""		556362	0					
ANR	556436	Argument	0x70		556362	2					
ANR	556437	PrimaryExpression	0x70		556362	0					
ANR	556438	Argument	0		556362	3					
ANR	556439	PrimaryExpression	0		556362	0					
ANR	556440	ExpressionStatement	"sdb_set ( kv , ""nro_header.format"" , ""xxxxxxxxxxxx magic unk size unk2 text_offset text_size ro_offset ro_size data_offset data_size bss_size unk3"" , 0 )"	82:1:2084:2232	556362	6	True				
ANR	556441	CallExpression	"sdb_set ( kv , ""nro_header.format"" , ""xxxxxxxxxxxx magic unk size unk2 text_offset text_size ro_offset ro_size data_offset data_size bss_size unk3"" , 0 )"		556362	0					
ANR	556442	Callee	sdb_set		556362	0					
ANR	556443	Identifier	sdb_set		556362	0					
ANR	556444	ArgumentList	kv		556362	1					
ANR	556445	Argument	kv		556362	0					
ANR	556446	Identifier	kv		556362	0					
ANR	556447	Argument	"""nro_header.format"""		556362	1					
ANR	556448	PrimaryExpression	"""nro_header.format"""		556362	0					
ANR	556449	Argument	"""xxxxxxxxxxxx magic unk size unk2 text_offset text_size ro_offset ro_size data_offset data_size bss_size unk3"""		556362	2					
ANR	556450	PrimaryExpression	"""xxxxxxxxxxxx magic unk size unk2 text_offset text_size ro_offset ro_size data_offset data_size bss_size unk3"""		556362	0					
ANR	556451	Argument	0		556362	3					
ANR	556452	PrimaryExpression	0		556362	0					
ANR	556453	ExpressionStatement	"sdb_ns_set ( bf -> sdb , ""info"" , kv )"	83:1:2235:2267	556362	7	True				
ANR	556454	CallExpression	"sdb_ns_set ( bf -> sdb , ""info"" , kv )"		556362	0					
ANR	556455	Callee	sdb_ns_set		556362	0					
ANR	556456	Identifier	sdb_ns_set		556362	0					
ANR	556457	ArgumentList	bf -> sdb		556362	1					
ANR	556458	Argument	bf -> sdb		556362	0					
ANR	556459	PtrMemberAccess	bf -> sdb		556362	0					
ANR	556460	Identifier	bf		556362	0					
ANR	556461	Identifier	sdb		556362	1					
ANR	556462	Argument	"""info"""		556362	1					
ANR	556463	PrimaryExpression	"""info"""		556362	0					
ANR	556464	Argument	kv		556362	2					
ANR	556465	Identifier	kv		556362	0					
ANR	556466	ReturnStatement	return kv ;	84:1:2270:2279	556362	8	True				
ANR	556467	Identifier	kv		556362	0					
ANR	556468	ReturnType	static Sdb *		556362	1					
ANR	556469	Identifier	get_sdb		556362	2					
ANR	556470	ParameterList	RBinFile * bf		556362	3					
ANR	556471	Parameter	RBinFile * bf	75:20:1786:1797	556362	0	True				
ANR	556472	ParameterType	RBinFile *		556362	0					
ANR	556473	Identifier	bf		556362	1					
ANR	556474	CFGEntryNode	ENTRY		556362		True				
ANR	556475	CFGExitNode	EXIT		556362		True				
ANR	556476	Symbol	sdb_new0		556362						
ANR	556477	Symbol	bf		556362						
ANR	556478	Symbol	* bf		556362						
ANR	556479	Symbol	kv		556362						
ANR	556480	Symbol	bf -> sdb		556362						
ANR	556481	Function	sections	87:0:2284:4827							
ANR	556482	FunctionDef	sections (RBinFile * bf)		556481	0					
ANR	556483	CompoundStatement		87:37:2321:4827	556481	0					
ANR	556484	IdentifierDeclStatement	RList * ret = NULL ;	88:1:2324:2341	556481	0	True				
ANR	556485	IdentifierDecl	* ret = NULL		556481	0					
ANR	556486	IdentifierDeclType	RList *		556481	0					
ANR	556487	Identifier	ret		556481	1					
ANR	556488	AssignmentExpression	* ret = NULL		556481	2		=			
ANR	556489	Identifier	NULL		556481	0					
ANR	556490	Identifier	NULL		556481	1					
ANR	556491	IdentifierDeclStatement	RBinSection * ptr = NULL ;	89:1:2344:2367	556481	1	True				
ANR	556492	IdentifierDecl	* ptr = NULL		556481	0					
ANR	556493	IdentifierDeclType	RBinSection *		556481	0					
ANR	556494	Identifier	ptr		556481	1					
ANR	556495	AssignmentExpression	* ptr = NULL		556481	2		=			
ANR	556496	Identifier	NULL		556481	0					
ANR	556497	Identifier	NULL		556481	1					
ANR	556498	IdentifierDeclStatement	RBuffer * b = bf -> buf ;	90:1:2370:2390	556481	2	True				
ANR	556499	IdentifierDecl	* b = bf -> buf		556481	0					
ANR	556500	IdentifierDeclType	RBuffer *		556481	0					
ANR	556501	Identifier	b		556481	1					
ANR	556502	AssignmentExpression	* b = bf -> buf		556481	2		=			
ANR	556503	Identifier	b		556481	0					
ANR	556504	PtrMemberAccess	bf -> buf		556481	1					
ANR	556505	Identifier	bf		556481	0					
ANR	556506	Identifier	buf		556481	1					
ANR	556507	IfStatement	if ( ! bf -> o -> info )		556481	3					
ANR	556508	Condition	! bf -> o -> info	91:5:2397:2408	556481	0	True				
ANR	556509	UnaryOperationExpression	! bf -> o -> info		556481	0					
ANR	556510	UnaryOperator	!		556481	0					
ANR	556511	PtrMemberAccess	bf -> o -> info		556481	1					
ANR	556512	PtrMemberAccess	bf -> o		556481	0					
ANR	556513	Identifier	bf		556481	0					
ANR	556514	Identifier	o		556481	1					
ANR	556515	Identifier	info		556481	1					
ANR	556516	CompoundStatement		5:19:89:89	556481	1					
ANR	556517	ReturnStatement	return NULL ;	92:2:2415:2426	556481	0	True				
ANR	556518	Identifier	NULL		556481	0					
ANR	556519	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		556481	4					
ANR	556520	Condition	! ( ret = r_list_new ( ) )	94:5:2436:2457	556481	0	True				
ANR	556521	UnaryOperationExpression	! ( ret = r_list_new ( ) )		556481	0					
ANR	556522	UnaryOperator	!		556481	0					
ANR	556523	AssignmentExpression	ret = r_list_new ( )		556481	1		=			
ANR	556524	Identifier	ret		556481	0					
ANR	556525	CallExpression	r_list_new ( )		556481	1					
ANR	556526	Callee	r_list_new		556481	0					
ANR	556527	Identifier	r_list_new		556481	0					
ANR	556528	ArgumentList			556481	1					
ANR	556529	CompoundStatement		8:29:138:138	556481	1					
ANR	556530	ReturnStatement	return NULL ;	95:2:2464:2475	556481	0	True				
ANR	556531	Identifier	NULL		556481	0					
ANR	556532	ExpressionStatement	ret -> free = free	97:1:2481:2497	556481	5	True				
ANR	556533	AssignmentExpression	ret -> free = free		556481	0		=			
ANR	556534	PtrMemberAccess	ret -> free		556481	0					
ANR	556535	Identifier	ret		556481	0					
ANR	556536	Identifier	free		556481	1					
ANR	556537	Identifier	free		556481	1					
ANR	556538	IdentifierDeclStatement	ut64 ba = baddr ( bf ) ;	99:1:2501:2521	556481	6	True				
ANR	556539	IdentifierDecl	ba = baddr ( bf )		556481	0					
ANR	556540	IdentifierDeclType	ut64		556481	0					
ANR	556541	Identifier	ba		556481	1					
ANR	556542	AssignmentExpression	ba = baddr ( bf )		556481	2		=			
ANR	556543	Identifier	ba		556481	0					
ANR	556544	CallExpression	baddr ( bf )		556481	1					
ANR	556545	Callee	baddr		556481	0					
ANR	556546	Identifier	baddr		556481	0					
ANR	556547	ArgumentList	bf		556481	1					
ANR	556548	Argument	bf		556481	0					
ANR	556549	Identifier	bf		556481	0					
ANR	556550	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		556481	7					
ANR	556551	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	101:5:2529:2557	556481	0	True				
ANR	556552	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		556481	0					
ANR	556553	UnaryOperator	!		556481	0					
ANR	556554	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		556481	1		=			
ANR	556555	Identifier	ptr		556481	0					
ANR	556556	CallExpression	R_NEW0 ( RBinSection )		556481	1					
ANR	556557	Callee	R_NEW0		556481	0					
ANR	556558	Identifier	R_NEW0		556481	0					
ANR	556559	ArgumentList	RBinSection		556481	1					
ANR	556560	Argument	RBinSection		556481	0					
ANR	556561	Identifier	RBinSection		556481	0					
ANR	556562	CompoundStatement		15:36:238:238	556481	1					
ANR	556563	ReturnStatement	return ret ;	102:2:2564:2574	556481	0	True				
ANR	556564	Identifier	ret		556481	0					
ANR	556565	ExpressionStatement	"ptr -> name = strdup ( ""header"" )"	104:1:2580:2609	556481	8	True				
ANR	556566	AssignmentExpression	"ptr -> name = strdup ( ""header"" )"		556481	0		=			
ANR	556567	PtrMemberAccess	ptr -> name		556481	0					
ANR	556568	Identifier	ptr		556481	0					
ANR	556569	Identifier	name		556481	1					
ANR	556570	CallExpression	"strdup ( ""header"" )"		556481	1					
ANR	556571	Callee	strdup		556481	0					
ANR	556572	Identifier	strdup		556481	0					
ANR	556573	ArgumentList	"""header"""		556481	1					
ANR	556574	Argument	"""header"""		556481	0					
ANR	556575	PrimaryExpression	"""header"""		556481	0					
ANR	556576	ExpressionStatement	ptr -> size = 0x80	105:1:2612:2628	556481	9	True				
ANR	556577	AssignmentExpression	ptr -> size = 0x80		556481	0		=			
ANR	556578	PtrMemberAccess	ptr -> size		556481	0					
ANR	556579	Identifier	ptr		556481	0					
ANR	556580	Identifier	size		556481	1					
ANR	556581	PrimaryExpression	0x80		556481	1					
ANR	556582	ExpressionStatement	ptr -> vsize = 0x80	106:1:2631:2648	556481	10	True				
ANR	556583	AssignmentExpression	ptr -> vsize = 0x80		556481	0		=			
ANR	556584	PtrMemberAccess	ptr -> vsize		556481	0					
ANR	556585	Identifier	ptr		556481	0					
ANR	556586	Identifier	vsize		556481	1					
ANR	556587	PrimaryExpression	0x80		556481	1					
ANR	556588	ExpressionStatement	ptr -> paddr = 0	107:1:2651:2665	556481	11	True				
ANR	556589	AssignmentExpression	ptr -> paddr = 0		556481	0		=			
ANR	556590	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	556591	Identifier	ptr		556481	0					
ANR	556592	Identifier	paddr		556481	1					
ANR	556593	PrimaryExpression	0		556481	1					
ANR	556594	ExpressionStatement	ptr -> vaddr = 0	108:1:2668:2682	556481	12	True				
ANR	556595	AssignmentExpression	ptr -> vaddr = 0		556481	0		=			
ANR	556596	PtrMemberAccess	ptr -> vaddr		556481	0					
ANR	556597	Identifier	ptr		556481	0					
ANR	556598	Identifier	vaddr		556481	1					
ANR	556599	PrimaryExpression	0		556481	1					
ANR	556600	ExpressionStatement	ptr -> perm = R_PERM_R	109:1:2685:2705	556481	13	True				
ANR	556601	AssignmentExpression	ptr -> perm = R_PERM_R		556481	0		=			
ANR	556602	PtrMemberAccess	ptr -> perm		556481	0					
ANR	556603	Identifier	ptr		556481	0					
ANR	556604	Identifier	perm		556481	1					
ANR	556605	Identifier	R_PERM_R		556481	1					
ANR	556606	ExpressionStatement	ptr -> add = false	110:1:2708:2724	556481	14	True				
ANR	556607	AssignmentExpression	ptr -> add = false		556481	0		=			
ANR	556608	PtrMemberAccess	ptr -> add		556481	0					
ANR	556609	Identifier	ptr		556481	0					
ANR	556610	Identifier	add		556481	1					
ANR	556611	Identifier	false		556481	1					
ANR	556612	ExpressionStatement	"r_list_append ( ret , ptr )"	111:1:2727:2751	556481	15	True				
ANR	556613	CallExpression	"r_list_append ( ret , ptr )"		556481	0					
ANR	556614	Callee	r_list_append		556481	0					
ANR	556615	Identifier	r_list_append		556481	0					
ANR	556616	ArgumentList	ret		556481	1					
ANR	556617	Argument	ret		556481	0					
ANR	556618	Identifier	ret		556481	0					
ANR	556619	Argument	ptr		556481	1					
ANR	556620	Identifier	ptr		556481	0					
ANR	556621	IdentifierDeclStatement	int bufsz = r_buf_size ( bf -> buf ) ;	113:1:2755:2787	556481	16	True				
ANR	556622	IdentifierDecl	bufsz = r_buf_size ( bf -> buf )		556481	0					
ANR	556623	IdentifierDeclType	int		556481	0					
ANR	556624	Identifier	bufsz		556481	1					
ANR	556625	AssignmentExpression	bufsz = r_buf_size ( bf -> buf )		556481	2		=			
ANR	556626	Identifier	bufsz		556481	0					
ANR	556627	CallExpression	r_buf_size ( bf -> buf )		556481	1					
ANR	556628	Callee	r_buf_size		556481	0					
ANR	556629	Identifier	r_buf_size		556481	0					
ANR	556630	ArgumentList	bf -> buf		556481	1					
ANR	556631	Argument	bf -> buf		556481	0					
ANR	556632	PtrMemberAccess	bf -> buf		556481	0					
ANR	556633	Identifier	bf		556481	0					
ANR	556634	Identifier	buf		556481	1					
ANR	556635	IdentifierDeclStatement	"ut32 mod0 = readLE32 ( bf -> buf , NRO_OFFSET_MODMEMOFF ) ;"	115:1:2791:2843	556481	17	True				
ANR	556636	IdentifierDecl	"mod0 = readLE32 ( bf -> buf , NRO_OFFSET_MODMEMOFF )"		556481	0					
ANR	556637	IdentifierDeclType	ut32		556481	0					
ANR	556638	Identifier	mod0		556481	1					
ANR	556639	AssignmentExpression	"mod0 = readLE32 ( bf -> buf , NRO_OFFSET_MODMEMOFF )"		556481	2		=			
ANR	556640	Identifier	mod0		556481	0					
ANR	556641	CallExpression	"readLE32 ( bf -> buf , NRO_OFFSET_MODMEMOFF )"		556481	1					
ANR	556642	Callee	readLE32		556481	0					
ANR	556643	Identifier	readLE32		556481	0					
ANR	556644	ArgumentList	bf -> buf		556481	1					
ANR	556645	Argument	bf -> buf		556481	0					
ANR	556646	PtrMemberAccess	bf -> buf		556481	0					
ANR	556647	Identifier	bf		556481	0					
ANR	556648	Identifier	buf		556481	1					
ANR	556649	Argument	NRO_OFFSET_MODMEMOFF		556481	1					
ANR	556650	Identifier	NRO_OFFSET_MODMEMOFF		556481	0					
ANR	556651	IfStatement	if ( mod0 && mod0 + 8 < bufsz )		556481	18					
ANR	556652	Condition	mod0 && mod0 + 8 < bufsz	116:5:2850:2873	556481	0	True				
ANR	556653	AndExpression	mod0 && mod0 + 8 < bufsz		556481	0		&&			
ANR	556654	Identifier	mod0		556481	0					
ANR	556655	RelationalExpression	mod0 + 8 < bufsz		556481	1		<			
ANR	556656	AdditiveExpression	mod0 + 8		556481	0		+			
ANR	556657	Identifier	mod0		556481	0					
ANR	556658	PrimaryExpression	8		556481	1					
ANR	556659	Identifier	bufsz		556481	1					
ANR	556660	CompoundStatement		34:2:616:658	556481	1					
ANR	556661	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		556481	0					
ANR	556662	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	117:6:2884:2912	556481	0	True				
ANR	556663	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		556481	0					
ANR	556664	UnaryOperator	!		556481	0					
ANR	556665	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		556481	1		=			
ANR	556666	Identifier	ptr		556481	0					
ANR	556667	CallExpression	R_NEW0 ( RBinSection )		556481	1					
ANR	556668	Callee	R_NEW0		556481	0					
ANR	556669	Identifier	R_NEW0		556481	0					
ANR	556670	ArgumentList	RBinSection		556481	1					
ANR	556671	Argument	RBinSection		556481	0					
ANR	556672	Identifier	RBinSection		556481	0					
ANR	556673	CompoundStatement		31:37:593:593	556481	1					
ANR	556674	ReturnStatement	return ret ;	118:3:2920:2930	556481	0	True				
ANR	556675	Identifier	ret		556481	0					
ANR	556676	IdentifierDeclStatement	"ut32 mod0sz = readLE32 ( bf -> buf , mod0 + 4 ) ;"	120:2:2938:2980	556481	1	True				
ANR	556677	IdentifierDecl	"mod0sz = readLE32 ( bf -> buf , mod0 + 4 )"		556481	0					
ANR	556678	IdentifierDeclType	ut32		556481	0					
ANR	556679	Identifier	mod0sz		556481	1					
ANR	556680	AssignmentExpression	"mod0sz = readLE32 ( bf -> buf , mod0 + 4 )"		556481	2		=			
ANR	556681	Identifier	mod0sz		556481	0					
ANR	556682	CallExpression	"readLE32 ( bf -> buf , mod0 + 4 )"		556481	1					
ANR	556683	Callee	readLE32		556481	0					
ANR	556684	Identifier	readLE32		556481	0					
ANR	556685	ArgumentList	bf -> buf		556481	1					
ANR	556686	Argument	bf -> buf		556481	0					
ANR	556687	PtrMemberAccess	bf -> buf		556481	0					
ANR	556688	Identifier	bf		556481	0					
ANR	556689	Identifier	buf		556481	1					
ANR	556690	Argument	mod0 + 4		556481	1					
ANR	556691	AdditiveExpression	mod0 + 4		556481	0		+			
ANR	556692	Identifier	mod0		556481	0					
ANR	556693	PrimaryExpression	4		556481	1					
ANR	556694	ExpressionStatement	"ptr -> name = strdup ( ""mod0"" )"	121:2:2984:3011	556481	2	True				
ANR	556695	AssignmentExpression	"ptr -> name = strdup ( ""mod0"" )"		556481	0		=			
ANR	556696	PtrMemberAccess	ptr -> name		556481	0					
ANR	556697	Identifier	ptr		556481	0					
ANR	556698	Identifier	name		556481	1					
ANR	556699	CallExpression	"strdup ( ""mod0"" )"		556481	1					
ANR	556700	Callee	strdup		556481	0					
ANR	556701	Identifier	strdup		556481	0					
ANR	556702	ArgumentList	"""mod0"""		556481	1					
ANR	556703	Argument	"""mod0"""		556481	0					
ANR	556704	PrimaryExpression	"""mod0"""		556481	0					
ANR	556705	ExpressionStatement	ptr -> size = mod0sz	122:2:3015:3033	556481	3	True				
ANR	556706	AssignmentExpression	ptr -> size = mod0sz		556481	0		=			
ANR	556707	PtrMemberAccess	ptr -> size		556481	0					
ANR	556708	Identifier	ptr		556481	0					
ANR	556709	Identifier	size		556481	1					
ANR	556710	Identifier	mod0sz		556481	1					
ANR	556711	ExpressionStatement	ptr -> vsize = mod0sz	123:2:3037:3056	556481	4	True				
ANR	556712	AssignmentExpression	ptr -> vsize = mod0sz		556481	0		=			
ANR	556713	PtrMemberAccess	ptr -> vsize		556481	0					
ANR	556714	Identifier	ptr		556481	0					
ANR	556715	Identifier	vsize		556481	1					
ANR	556716	Identifier	mod0sz		556481	1					
ANR	556717	ExpressionStatement	ptr -> paddr = mod0	124:2:3060:3077	556481	5	True				
ANR	556718	AssignmentExpression	ptr -> paddr = mod0		556481	0		=			
ANR	556719	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	556720	Identifier	ptr		556481	0					
ANR	556721	Identifier	paddr		556481	1					
ANR	556722	Identifier	mod0		556481	1					
ANR	556723	ExpressionStatement	ptr -> vaddr = mod0 + ba	125:2:3081:3103	556481	6	True				
ANR	556724	AssignmentExpression	ptr -> vaddr = mod0 + ba		556481	0		=			
ANR	556725	PtrMemberAccess	ptr -> vaddr		556481	0					
ANR	556726	Identifier	ptr		556481	0					
ANR	556727	Identifier	vaddr		556481	1					
ANR	556728	AdditiveExpression	mod0 + ba		556481	1		+			
ANR	556729	Identifier	mod0		556481	0					
ANR	556730	Identifier	ba		556481	1					
ANR	556731	ExpressionStatement	ptr -> perm = R_PERM_R	126:2:3107:3127	556481	7	True				
ANR	556732	AssignmentExpression	ptr -> perm = R_PERM_R		556481	0		=			
ANR	556733	PtrMemberAccess	ptr -> perm		556481	0					
ANR	556734	Identifier	ptr		556481	0					
ANR	556735	Identifier	perm		556481	1					
ANR	556736	Identifier	R_PERM_R		556481	1					
ANR	556737	ExpressionStatement	ptr -> add = false	127:2:3138:3154	556481	8	True				
ANR	556738	AssignmentExpression	ptr -> add = false		556481	0		=			
ANR	556739	PtrMemberAccess	ptr -> add		556481	0					
ANR	556740	Identifier	ptr		556481	0					
ANR	556741	Identifier	add		556481	1					
ANR	556742	Identifier	false		556481	1					
ANR	556743	ExpressionStatement	"r_list_append ( ret , ptr )"	128:2:3158:3182	556481	9	True				
ANR	556744	CallExpression	"r_list_append ( ret , ptr )"		556481	0					
ANR	556745	Callee	r_list_append		556481	0					
ANR	556746	Identifier	r_list_append		556481	0					
ANR	556747	ArgumentList	ret		556481	1					
ANR	556748	Argument	ret		556481	0					
ANR	556749	Identifier	ret		556481	0					
ANR	556750	Argument	ptr		556481	1					
ANR	556751	Identifier	ptr		556481	0					
ANR	556752	ElseStatement	else		556481	0					
ANR	556753	CompoundStatement		43:8:870:870	556481	0					
ANR	556754	ExpressionStatement	"eprintf ( ""Invalid MOD0 address\\n"" )"	130:2:3196:3230	556481	0	True				
ANR	556755	CallExpression	"eprintf ( ""Invalid MOD0 address\\n"" )"		556481	0					
ANR	556756	Callee	eprintf		556481	0					
ANR	556757	Identifier	eprintf		556481	0					
ANR	556758	ArgumentList	"""Invalid MOD0 address\\n"""		556481	1					
ANR	556759	Argument	"""Invalid MOD0 address\\n"""		556481	0					
ANR	556760	PrimaryExpression	"""Invalid MOD0 address\\n"""		556481	0					
ANR	556761	IdentifierDeclStatement	"ut32 sig0 = readLE32 ( bf -> buf , 0x18 ) ;"	133:1:3237:3273	556481	19	True				
ANR	556762	IdentifierDecl	"sig0 = readLE32 ( bf -> buf , 0x18 )"		556481	0					
ANR	556763	IdentifierDeclType	ut32		556481	0					
ANR	556764	Identifier	sig0		556481	1					
ANR	556765	AssignmentExpression	"sig0 = readLE32 ( bf -> buf , 0x18 )"		556481	2		=			
ANR	556766	Identifier	sig0		556481	0					
ANR	556767	CallExpression	"readLE32 ( bf -> buf , 0x18 )"		556481	1					
ANR	556768	Callee	readLE32		556481	0					
ANR	556769	Identifier	readLE32		556481	0					
ANR	556770	ArgumentList	bf -> buf		556481	1					
ANR	556771	Argument	bf -> buf		556481	0					
ANR	556772	PtrMemberAccess	bf -> buf		556481	0					
ANR	556773	Identifier	bf		556481	0					
ANR	556774	Identifier	buf		556481	1					
ANR	556775	Argument	0x18		556481	1					
ANR	556776	PrimaryExpression	0x18		556481	0					
ANR	556777	IfStatement	if ( sig0 && sig0 + 8 < bufsz )		556481	20					
ANR	556778	Condition	sig0 && sig0 + 8 < bufsz	134:5:3280:3303	556481	0	True				
ANR	556779	AndExpression	sig0 && sig0 + 8 < bufsz		556481	0		&&			
ANR	556780	Identifier	sig0		556481	0					
ANR	556781	RelationalExpression	sig0 + 8 < bufsz		556481	1		<			
ANR	556782	AdditiveExpression	sig0 + 8		556481	0		+			
ANR	556783	Identifier	sig0		556481	0					
ANR	556784	PrimaryExpression	8		556481	1					
ANR	556785	Identifier	bufsz		556481	1					
ANR	556786	CompoundStatement		52:2:1046:1088	556481	1					
ANR	556787	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		556481	0					
ANR	556788	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	135:6:3314:3342	556481	0	True				
ANR	556789	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		556481	0					
ANR	556790	UnaryOperator	!		556481	0					
ANR	556791	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		556481	1		=			
ANR	556792	Identifier	ptr		556481	0					
ANR	556793	CallExpression	R_NEW0 ( RBinSection )		556481	1					
ANR	556794	Callee	R_NEW0		556481	0					
ANR	556795	Identifier	R_NEW0		556481	0					
ANR	556796	ArgumentList	RBinSection		556481	1					
ANR	556797	Argument	RBinSection		556481	0					
ANR	556798	Identifier	RBinSection		556481	0					
ANR	556799	CompoundStatement		49:37:1023:1023	556481	1					
ANR	556800	ReturnStatement	return ret ;	136:3:3350:3360	556481	0	True				
ANR	556801	Identifier	ret		556481	0					
ANR	556802	IdentifierDeclStatement	"ut32 sig0sz = readLE32 ( bf -> buf , sig0 + 4 ) ;"	138:2:3368:3410	556481	1	True				
ANR	556803	IdentifierDecl	"sig0sz = readLE32 ( bf -> buf , sig0 + 4 )"		556481	0					
ANR	556804	IdentifierDeclType	ut32		556481	0					
ANR	556805	Identifier	sig0sz		556481	1					
ANR	556806	AssignmentExpression	"sig0sz = readLE32 ( bf -> buf , sig0 + 4 )"		556481	2		=			
ANR	556807	Identifier	sig0sz		556481	0					
ANR	556808	CallExpression	"readLE32 ( bf -> buf , sig0 + 4 )"		556481	1					
ANR	556809	Callee	readLE32		556481	0					
ANR	556810	Identifier	readLE32		556481	0					
ANR	556811	ArgumentList	bf -> buf		556481	1					
ANR	556812	Argument	bf -> buf		556481	0					
ANR	556813	PtrMemberAccess	bf -> buf		556481	0					
ANR	556814	Identifier	bf		556481	0					
ANR	556815	Identifier	buf		556481	1					
ANR	556816	Argument	sig0 + 4		556481	1					
ANR	556817	AdditiveExpression	sig0 + 4		556481	0		+			
ANR	556818	Identifier	sig0		556481	0					
ANR	556819	PrimaryExpression	4		556481	1					
ANR	556820	ExpressionStatement	"ptr -> name = strdup ( ""sig0"" )"	139:2:3414:3441	556481	2	True				
ANR	556821	AssignmentExpression	"ptr -> name = strdup ( ""sig0"" )"		556481	0		=			
ANR	556822	PtrMemberAccess	ptr -> name		556481	0					
ANR	556823	Identifier	ptr		556481	0					
ANR	556824	Identifier	name		556481	1					
ANR	556825	CallExpression	"strdup ( ""sig0"" )"		556481	1					
ANR	556826	Callee	strdup		556481	0					
ANR	556827	Identifier	strdup		556481	0					
ANR	556828	ArgumentList	"""sig0"""		556481	1					
ANR	556829	Argument	"""sig0"""		556481	0					
ANR	556830	PrimaryExpression	"""sig0"""		556481	0					
ANR	556831	ExpressionStatement	ptr -> size = sig0sz	140:2:3445:3463	556481	3	True				
ANR	556832	AssignmentExpression	ptr -> size = sig0sz		556481	0		=			
ANR	556833	PtrMemberAccess	ptr -> size		556481	0					
ANR	556834	Identifier	ptr		556481	0					
ANR	556835	Identifier	size		556481	1					
ANR	556836	Identifier	sig0sz		556481	1					
ANR	556837	ExpressionStatement	ptr -> vsize = sig0sz	141:2:3467:3486	556481	4	True				
ANR	556838	AssignmentExpression	ptr -> vsize = sig0sz		556481	0		=			
ANR	556839	PtrMemberAccess	ptr -> vsize		556481	0					
ANR	556840	Identifier	ptr		556481	0					
ANR	556841	Identifier	vsize		556481	1					
ANR	556842	Identifier	sig0sz		556481	1					
ANR	556843	ExpressionStatement	ptr -> paddr = sig0	142:2:3490:3507	556481	5	True				
ANR	556844	AssignmentExpression	ptr -> paddr = sig0		556481	0		=			
ANR	556845	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	556846	Identifier	ptr		556481	0					
ANR	556847	Identifier	paddr		556481	1					
ANR	556848	Identifier	sig0		556481	1					
ANR	556849	ExpressionStatement	ptr -> vaddr = sig0 + ba	143:2:3511:3533	556481	6	True				
ANR	556850	AssignmentExpression	ptr -> vaddr = sig0 + ba		556481	0		=			
ANR	556851	PtrMemberAccess	ptr -> vaddr		556481	0					
ANR	556852	Identifier	ptr		556481	0					
ANR	556853	Identifier	vaddr		556481	1					
ANR	556854	AdditiveExpression	sig0 + ba		556481	1		+			
ANR	556855	Identifier	sig0		556481	0					
ANR	556856	Identifier	ba		556481	1					
ANR	556857	ExpressionStatement	ptr -> perm = R_PERM_R	144:2:3537:3557	556481	7	True				
ANR	556858	AssignmentExpression	ptr -> perm = R_PERM_R		556481	0		=			
ANR	556859	PtrMemberAccess	ptr -> perm		556481	0					
ANR	556860	Identifier	ptr		556481	0					
ANR	556861	Identifier	perm		556481	1					
ANR	556862	Identifier	R_PERM_R		556481	1					
ANR	556863	ExpressionStatement	ptr -> add = true	145:2:3568:3583	556481	8	True				
ANR	556864	AssignmentExpression	ptr -> add = true		556481	0		=			
ANR	556865	PtrMemberAccess	ptr -> add		556481	0					
ANR	556866	Identifier	ptr		556481	0					
ANR	556867	Identifier	add		556481	1					
ANR	556868	Identifier	true		556481	1					
ANR	556869	ExpressionStatement	"r_list_append ( ret , ptr )"	146:2:3587:3611	556481	9	True				
ANR	556870	CallExpression	"r_list_append ( ret , ptr )"		556481	0					
ANR	556871	Callee	r_list_append		556481	0					
ANR	556872	Identifier	r_list_append		556481	0					
ANR	556873	ArgumentList	ret		556481	1					
ANR	556874	Argument	ret		556481	0					
ANR	556875	Identifier	ret		556481	0					
ANR	556876	Argument	ptr		556481	1					
ANR	556877	Identifier	ptr		556481	0					
ANR	556878	ElseStatement	else		556481	0					
ANR	556879	CompoundStatement		61:8:1299:1299	556481	0					
ANR	556880	ExpressionStatement	"eprintf ( ""Invalid SIG0 address\\n"" )"	148:2:3625:3659	556481	0	True				
ANR	556881	CallExpression	"eprintf ( ""Invalid SIG0 address\\n"" )"		556481	0					
ANR	556882	Callee	eprintf		556481	0					
ANR	556883	Identifier	eprintf		556481	0					
ANR	556884	ArgumentList	"""Invalid SIG0 address\\n"""		556481	1					
ANR	556885	Argument	"""Invalid SIG0 address\\n"""		556481	0					
ANR	556886	PrimaryExpression	"""Invalid SIG0 address\\n"""		556481	0					
ANR	556887	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		556481	21					
ANR	556888	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	152:5:3691:3719	556481	0	True				
ANR	556889	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		556481	0					
ANR	556890	UnaryOperator	!		556481	0					
ANR	556891	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		556481	1		=			
ANR	556892	Identifier	ptr		556481	0					
ANR	556893	CallExpression	R_NEW0 ( RBinSection )		556481	1					
ANR	556894	Callee	R_NEW0		556481	0					
ANR	556895	Identifier	R_NEW0		556481	0					
ANR	556896	ArgumentList	RBinSection		556481	1					
ANR	556897	Argument	RBinSection		556481	0					
ANR	556898	Identifier	RBinSection		556481	0					
ANR	556899	CompoundStatement		66:36:1400:1400	556481	1					
ANR	556900	ReturnStatement	return ret ;	153:2:3726:3736	556481	0	True				
ANR	556901	Identifier	ret		556481	0					
ANR	556902	ExpressionStatement	"ptr -> name = strdup ( ""text"" )"	155:1:3742:3769	556481	22	True				
ANR	556903	AssignmentExpression	"ptr -> name = strdup ( ""text"" )"		556481	0		=			
ANR	556904	PtrMemberAccess	ptr -> name		556481	0					
ANR	556905	Identifier	ptr		556481	0					
ANR	556906	Identifier	name		556481	1					
ANR	556907	CallExpression	"strdup ( ""text"" )"		556481	1					
ANR	556908	Callee	strdup		556481	0					
ANR	556909	Identifier	strdup		556481	0					
ANR	556910	ArgumentList	"""text"""		556481	1					
ANR	556911	Argument	"""text"""		556481	0					
ANR	556912	PrimaryExpression	"""text"""		556481	0					
ANR	556913	ExpressionStatement	"ptr -> vsize = readLE32 ( b , NRO_OFF ( text_size ) )"	156:1:3772:3818	556481	23	True				
ANR	556914	AssignmentExpression	"ptr -> vsize = readLE32 ( b , NRO_OFF ( text_size ) )"		556481	0		=			
ANR	556915	PtrMemberAccess	ptr -> vsize		556481	0					
ANR	556916	Identifier	ptr		556481	0					
ANR	556917	Identifier	vsize		556481	1					
ANR	556918	CallExpression	"readLE32 ( b , NRO_OFF ( text_size ) )"		556481	1					
ANR	556919	Callee	readLE32		556481	0					
ANR	556920	Identifier	readLE32		556481	0					
ANR	556921	ArgumentList	b		556481	1					
ANR	556922	Argument	b		556481	0					
ANR	556923	Identifier	b		556481	0					
ANR	556924	Argument	NRO_OFF ( text_size )		556481	1					
ANR	556925	CallExpression	NRO_OFF ( text_size )		556481	0					
ANR	556926	Callee	NRO_OFF		556481	0					
ANR	556927	Identifier	NRO_OFF		556481	0					
ANR	556928	ArgumentList	text_size		556481	1					
ANR	556929	Argument	text_size		556481	0					
ANR	556930	Identifier	text_size		556481	0					
ANR	556931	ExpressionStatement	ptr -> size = ptr -> vsize	157:1:3821:3843	556481	24	True				
ANR	556932	AssignmentExpression	ptr -> size = ptr -> vsize		556481	0		=			
ANR	556933	PtrMemberAccess	ptr -> size		556481	0					
ANR	556934	Identifier	ptr		556481	0					
ANR	556935	Identifier	size		556481	1					
ANR	556936	PtrMemberAccess	ptr -> vsize		556481	1					
ANR	556937	Identifier	ptr		556481	0					
ANR	556938	Identifier	vsize		556481	1					
ANR	556939	ExpressionStatement	"ptr -> paddr = readLE32 ( b , NRO_OFF ( text_memoffset ) )"	158:1:3846:3897	556481	25	True				
ANR	556940	AssignmentExpression	"ptr -> paddr = readLE32 ( b , NRO_OFF ( text_memoffset ) )"		556481	0		=			
ANR	556941	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	556942	Identifier	ptr		556481	0					
ANR	556943	Identifier	paddr		556481	1					
ANR	556944	CallExpression	"readLE32 ( b , NRO_OFF ( text_memoffset ) )"		556481	1					
ANR	556945	Callee	readLE32		556481	0					
ANR	556946	Identifier	readLE32		556481	0					
ANR	556947	ArgumentList	b		556481	1					
ANR	556948	Argument	b		556481	0					
ANR	556949	Identifier	b		556481	0					
ANR	556950	Argument	NRO_OFF ( text_memoffset )		556481	1					
ANR	556951	CallExpression	NRO_OFF ( text_memoffset )		556481	0					
ANR	556952	Callee	NRO_OFF		556481	0					
ANR	556953	Identifier	NRO_OFF		556481	0					
ANR	556954	ArgumentList	text_memoffset		556481	1					
ANR	556955	Argument	text_memoffset		556481	0					
ANR	556956	Identifier	text_memoffset		556481	0					
ANR	556957	ExpressionStatement	ptr -> vaddr = ptr -> paddr + ba	159:1:3900:3928	556481	26	True				
ANR	556958	AssignmentExpression	ptr -> vaddr = ptr -> paddr + ba		556481	0		=			
ANR	556959	PtrMemberAccess	ptr -> vaddr		556481	0					
ANR	556960	Identifier	ptr		556481	0					
ANR	556961	Identifier	vaddr		556481	1					
ANR	556962	AdditiveExpression	ptr -> paddr + ba		556481	1		+			
ANR	556963	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	556964	Identifier	ptr		556481	0					
ANR	556965	Identifier	paddr		556481	1					
ANR	556966	Identifier	ba		556481	1					
ANR	556967	ExpressionStatement	ptr -> perm = R_PERM_RX	160:1:3931:3952	556481	27	True				
ANR	556968	AssignmentExpression	ptr -> perm = R_PERM_RX		556481	0		=			
ANR	556969	PtrMemberAccess	ptr -> perm		556481	0					
ANR	556970	Identifier	ptr		556481	0					
ANR	556971	Identifier	perm		556481	1					
ANR	556972	Identifier	R_PERM_RX		556481	1					
ANR	556973	ExpressionStatement	ptr -> add = true	161:1:3962:3977	556481	28	True				
ANR	556974	AssignmentExpression	ptr -> add = true		556481	0		=			
ANR	556975	PtrMemberAccess	ptr -> add		556481	0					
ANR	556976	Identifier	ptr		556481	0					
ANR	556977	Identifier	add		556481	1					
ANR	556978	Identifier	true		556481	1					
ANR	556979	ExpressionStatement	"r_list_append ( ret , ptr )"	162:1:3980:4004	556481	29	True				
ANR	556980	CallExpression	"r_list_append ( ret , ptr )"		556481	0					
ANR	556981	Callee	r_list_append		556481	0					
ANR	556982	Identifier	r_list_append		556481	0					
ANR	556983	ArgumentList	ret		556481	1					
ANR	556984	Argument	ret		556481	0					
ANR	556985	Identifier	ret		556481	0					
ANR	556986	Argument	ptr		556481	1					
ANR	556987	Identifier	ptr		556481	0					
ANR	556988	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		556481	30					
ANR	556989	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	165:5:4031:4059	556481	0	True				
ANR	556990	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		556481	0					
ANR	556991	UnaryOperator	!		556481	0					
ANR	556992	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		556481	1		=			
ANR	556993	Identifier	ptr		556481	0					
ANR	556994	CallExpression	R_NEW0 ( RBinSection )		556481	1					
ANR	556995	Callee	R_NEW0		556481	0					
ANR	556996	Identifier	R_NEW0		556481	0					
ANR	556997	ArgumentList	RBinSection		556481	1					
ANR	556998	Argument	RBinSection		556481	0					
ANR	556999	Identifier	RBinSection		556481	0					
ANR	557000	CompoundStatement		79:36:1740:1740	556481	1					
ANR	557001	ReturnStatement	return ret ;	166:2:4066:4076	556481	0	True				
ANR	557002	Identifier	ret		556481	0					
ANR	557003	ExpressionStatement	"ptr -> name = strdup ( ""ro"" )"	168:1:4082:4107	556481	31	True				
ANR	557004	AssignmentExpression	"ptr -> name = strdup ( ""ro"" )"		556481	0		=			
ANR	557005	PtrMemberAccess	ptr -> name		556481	0					
ANR	557006	Identifier	ptr		556481	0					
ANR	557007	Identifier	name		556481	1					
ANR	557008	CallExpression	"strdup ( ""ro"" )"		556481	1					
ANR	557009	Callee	strdup		556481	0					
ANR	557010	Identifier	strdup		556481	0					
ANR	557011	ArgumentList	"""ro"""		556481	1					
ANR	557012	Argument	"""ro"""		556481	0					
ANR	557013	PrimaryExpression	"""ro"""		556481	0					
ANR	557014	ExpressionStatement	"ptr -> vsize = readLE32 ( b , NRO_OFF ( ro_size ) )"	169:1:4110:4154	556481	32	True				
ANR	557015	AssignmentExpression	"ptr -> vsize = readLE32 ( b , NRO_OFF ( ro_size ) )"		556481	0		=			
ANR	557016	PtrMemberAccess	ptr -> vsize		556481	0					
ANR	557017	Identifier	ptr		556481	0					
ANR	557018	Identifier	vsize		556481	1					
ANR	557019	CallExpression	"readLE32 ( b , NRO_OFF ( ro_size ) )"		556481	1					
ANR	557020	Callee	readLE32		556481	0					
ANR	557021	Identifier	readLE32		556481	0					
ANR	557022	ArgumentList	b		556481	1					
ANR	557023	Argument	b		556481	0					
ANR	557024	Identifier	b		556481	0					
ANR	557025	Argument	NRO_OFF ( ro_size )		556481	1					
ANR	557026	CallExpression	NRO_OFF ( ro_size )		556481	0					
ANR	557027	Callee	NRO_OFF		556481	0					
ANR	557028	Identifier	NRO_OFF		556481	0					
ANR	557029	ArgumentList	ro_size		556481	1					
ANR	557030	Argument	ro_size		556481	0					
ANR	557031	Identifier	ro_size		556481	0					
ANR	557032	ExpressionStatement	ptr -> size = ptr -> vsize	170:1:4157:4179	556481	33	True				
ANR	557033	AssignmentExpression	ptr -> size = ptr -> vsize		556481	0		=			
ANR	557034	PtrMemberAccess	ptr -> size		556481	0					
ANR	557035	Identifier	ptr		556481	0					
ANR	557036	Identifier	size		556481	1					
ANR	557037	PtrMemberAccess	ptr -> vsize		556481	1					
ANR	557038	Identifier	ptr		556481	0					
ANR	557039	Identifier	vsize		556481	1					
ANR	557040	ExpressionStatement	"ptr -> paddr = readLE32 ( b , NRO_OFF ( ro_memoffset ) )"	171:1:4182:4231	556481	34	True				
ANR	557041	AssignmentExpression	"ptr -> paddr = readLE32 ( b , NRO_OFF ( ro_memoffset ) )"		556481	0		=			
ANR	557042	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	557043	Identifier	ptr		556481	0					
ANR	557044	Identifier	paddr		556481	1					
ANR	557045	CallExpression	"readLE32 ( b , NRO_OFF ( ro_memoffset ) )"		556481	1					
ANR	557046	Callee	readLE32		556481	0					
ANR	557047	Identifier	readLE32		556481	0					
ANR	557048	ArgumentList	b		556481	1					
ANR	557049	Argument	b		556481	0					
ANR	557050	Identifier	b		556481	0					
ANR	557051	Argument	NRO_OFF ( ro_memoffset )		556481	1					
ANR	557052	CallExpression	NRO_OFF ( ro_memoffset )		556481	0					
ANR	557053	Callee	NRO_OFF		556481	0					
ANR	557054	Identifier	NRO_OFF		556481	0					
ANR	557055	ArgumentList	ro_memoffset		556481	1					
ANR	557056	Argument	ro_memoffset		556481	0					
ANR	557057	Identifier	ro_memoffset		556481	0					
ANR	557058	ExpressionStatement	ptr -> vaddr = ptr -> paddr + ba	172:1:4234:4262	556481	35	True				
ANR	557059	AssignmentExpression	ptr -> vaddr = ptr -> paddr + ba		556481	0		=			
ANR	557060	PtrMemberAccess	ptr -> vaddr		556481	0					
ANR	557061	Identifier	ptr		556481	0					
ANR	557062	Identifier	vaddr		556481	1					
ANR	557063	AdditiveExpression	ptr -> paddr + ba		556481	1		+			
ANR	557064	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	557065	Identifier	ptr		556481	0					
ANR	557066	Identifier	paddr		556481	1					
ANR	557067	Identifier	ba		556481	1					
ANR	557068	ExpressionStatement	ptr -> perm = R_PERM_R	173:1:4265:4285	556481	36	True				
ANR	557069	AssignmentExpression	ptr -> perm = R_PERM_R		556481	0		=			
ANR	557070	PtrMemberAccess	ptr -> perm		556481	0					
ANR	557071	Identifier	ptr		556481	0					
ANR	557072	Identifier	perm		556481	1					
ANR	557073	Identifier	R_PERM_R		556481	1					
ANR	557074	ExpressionStatement	ptr -> add = true	174:1:4295:4310	556481	37	True				
ANR	557075	AssignmentExpression	ptr -> add = true		556481	0		=			
ANR	557076	PtrMemberAccess	ptr -> add		556481	0					
ANR	557077	Identifier	ptr		556481	0					
ANR	557078	Identifier	add		556481	1					
ANR	557079	Identifier	true		556481	1					
ANR	557080	ExpressionStatement	"r_list_append ( ret , ptr )"	175:1:4313:4337	556481	38	True				
ANR	557081	CallExpression	"r_list_append ( ret , ptr )"		556481	0					
ANR	557082	Callee	r_list_append		556481	0					
ANR	557083	Identifier	r_list_append		556481	0					
ANR	557084	ArgumentList	ret		556481	1					
ANR	557085	Argument	ret		556481	0					
ANR	557086	Identifier	ret		556481	0					
ANR	557087	Argument	ptr		556481	1					
ANR	557088	Identifier	ptr		556481	0					
ANR	557089	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		556481	39					
ANR	557090	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	178:5:4366:4394	556481	0	True				
ANR	557091	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		556481	0					
ANR	557092	UnaryOperator	!		556481	0					
ANR	557093	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		556481	1		=			
ANR	557094	Identifier	ptr		556481	0					
ANR	557095	CallExpression	R_NEW0 ( RBinSection )		556481	1					
ANR	557096	Callee	R_NEW0		556481	0					
ANR	557097	Identifier	R_NEW0		556481	0					
ANR	557098	ArgumentList	RBinSection		556481	1					
ANR	557099	Argument	RBinSection		556481	0					
ANR	557100	Identifier	RBinSection		556481	0					
ANR	557101	CompoundStatement		92:36:2075:2075	556481	1					
ANR	557102	ReturnStatement	return ret ;	179:2:4401:4411	556481	0	True				
ANR	557103	Identifier	ret		556481	0					
ANR	557104	ExpressionStatement	"ptr -> name = strdup ( ""data"" )"	181:1:4417:4444	556481	40	True				
ANR	557105	AssignmentExpression	"ptr -> name = strdup ( ""data"" )"		556481	0		=			
ANR	557106	PtrMemberAccess	ptr -> name		556481	0					
ANR	557107	Identifier	ptr		556481	0					
ANR	557108	Identifier	name		556481	1					
ANR	557109	CallExpression	"strdup ( ""data"" )"		556481	1					
ANR	557110	Callee	strdup		556481	0					
ANR	557111	Identifier	strdup		556481	0					
ANR	557112	ArgumentList	"""data"""		556481	1					
ANR	557113	Argument	"""data"""		556481	0					
ANR	557114	PrimaryExpression	"""data"""		556481	0					
ANR	557115	ExpressionStatement	"ptr -> vsize = readLE32 ( b , NRO_OFF ( data_size ) )"	182:1:4447:4493	556481	41	True				
ANR	557116	AssignmentExpression	"ptr -> vsize = readLE32 ( b , NRO_OFF ( data_size ) )"		556481	0		=			
ANR	557117	PtrMemberAccess	ptr -> vsize		556481	0					
ANR	557118	Identifier	ptr		556481	0					
ANR	557119	Identifier	vsize		556481	1					
ANR	557120	CallExpression	"readLE32 ( b , NRO_OFF ( data_size ) )"		556481	1					
ANR	557121	Callee	readLE32		556481	0					
ANR	557122	Identifier	readLE32		556481	0					
ANR	557123	ArgumentList	b		556481	1					
ANR	557124	Argument	b		556481	0					
ANR	557125	Identifier	b		556481	0					
ANR	557126	Argument	NRO_OFF ( data_size )		556481	1					
ANR	557127	CallExpression	NRO_OFF ( data_size )		556481	0					
ANR	557128	Callee	NRO_OFF		556481	0					
ANR	557129	Identifier	NRO_OFF		556481	0					
ANR	557130	ArgumentList	data_size		556481	1					
ANR	557131	Argument	data_size		556481	0					
ANR	557132	Identifier	data_size		556481	0					
ANR	557133	ExpressionStatement	ptr -> size = ptr -> vsize	183:1:4496:4518	556481	42	True				
ANR	557134	AssignmentExpression	ptr -> size = ptr -> vsize		556481	0		=			
ANR	557135	PtrMemberAccess	ptr -> size		556481	0					
ANR	557136	Identifier	ptr		556481	0					
ANR	557137	Identifier	size		556481	1					
ANR	557138	PtrMemberAccess	ptr -> vsize		556481	1					
ANR	557139	Identifier	ptr		556481	0					
ANR	557140	Identifier	vsize		556481	1					
ANR	557141	ExpressionStatement	"ptr -> paddr = readLE32 ( b , NRO_OFF ( data_memoffset ) )"	184:1:4521:4572	556481	43	True				
ANR	557142	AssignmentExpression	"ptr -> paddr = readLE32 ( b , NRO_OFF ( data_memoffset ) )"		556481	0		=			
ANR	557143	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	557144	Identifier	ptr		556481	0					
ANR	557145	Identifier	paddr		556481	1					
ANR	557146	CallExpression	"readLE32 ( b , NRO_OFF ( data_memoffset ) )"		556481	1					
ANR	557147	Callee	readLE32		556481	0					
ANR	557148	Identifier	readLE32		556481	0					
ANR	557149	ArgumentList	b		556481	1					
ANR	557150	Argument	b		556481	0					
ANR	557151	Identifier	b		556481	0					
ANR	557152	Argument	NRO_OFF ( data_memoffset )		556481	1					
ANR	557153	CallExpression	NRO_OFF ( data_memoffset )		556481	0					
ANR	557154	Callee	NRO_OFF		556481	0					
ANR	557155	Identifier	NRO_OFF		556481	0					
ANR	557156	ArgumentList	data_memoffset		556481	1					
ANR	557157	Argument	data_memoffset		556481	0					
ANR	557158	Identifier	data_memoffset		556481	0					
ANR	557159	ExpressionStatement	ptr -> vaddr = ptr -> paddr + ba	185:1:4575:4603	556481	44	True				
ANR	557160	AssignmentExpression	ptr -> vaddr = ptr -> paddr + ba		556481	0		=			
ANR	557161	PtrMemberAccess	ptr -> vaddr		556481	0					
ANR	557162	Identifier	ptr		556481	0					
ANR	557163	Identifier	vaddr		556481	1					
ANR	557164	AdditiveExpression	ptr -> paddr + ba		556481	1		+			
ANR	557165	PtrMemberAccess	ptr -> paddr		556481	0					
ANR	557166	Identifier	ptr		556481	0					
ANR	557167	Identifier	paddr		556481	1					
ANR	557168	Identifier	ba		556481	1					
ANR	557169	ExpressionStatement	ptr -> perm = R_PERM_RW	186:1:4606:4627	556481	45	True				
ANR	557170	AssignmentExpression	ptr -> perm = R_PERM_RW		556481	0		=			
ANR	557171	PtrMemberAccess	ptr -> perm		556481	0					
ANR	557172	Identifier	ptr		556481	0					
ANR	557173	Identifier	perm		556481	1					
ANR	557174	Identifier	R_PERM_RW		556481	1					
ANR	557175	ExpressionStatement	ptr -> add = true	187:1:4630:4645	556481	46	True				
ANR	557176	AssignmentExpression	ptr -> add = true		556481	0		=			
ANR	557177	PtrMemberAccess	ptr -> add		556481	0					
ANR	557178	Identifier	ptr		556481	0					
ANR	557179	Identifier	add		556481	1					
ANR	557180	Identifier	true		556481	1					
ANR	557181	Statement	eprintf	188:1:4648:4654	556481	47	True				
ANR	557182	Statement	(	188:9:4656:4656	556481	48	True				
ANR	557183	Statement	"""Base Address 0x%08"""	188:10:4657:4676	556481	49	True				
ANR	557184	Statement	PFMT64x	188:30:4677:4683	556481	50	True				
ANR	557185	Statement	"""\\n"""	188:38:4685:4688	556481	51	True				
ANR	557186	Statement	","	188:42:4689:4689	556481	52	True				
ANR	557187	Statement	ba	188:44:4691:4692	556481	53	True				
ANR	557188	Statement	)	188:46:4693:4693	556481	54	True				
ANR	557189	ExpressionStatement		188:47:4694:4694	556481	55	True				
ANR	557190	Statement	eprintf	189:1:4697:4703	556481	56	True				
ANR	557191	Statement	(	189:9:4705:4705	556481	57	True				
ANR	557192	Statement	"""BSS Size 0x%08"""	189:10:4706:4721	556481	58	True				
ANR	557193	Statement	PFMT64x	189:26:4722:4728	556481	59	True				
ANR	557194	Statement	"""\\n"""	189:34:4730:4733	556481	60	True				
ANR	557195	Statement	","	189:38:4734:4734	556481	61	True				
ANR	557196	Statement	(	189:40:4736:4736	556481	62	True				
ANR	557197	Statement	ut64	189:41:4737:4740	556481	63	True				
ANR	557198	Statement	)	189:45:4741:4741	556481	64	True				
ANR	557199	Statement	readLE32	190:3:4746:4753	556481	65	True				
ANR	557200	Statement	(	190:12:4755:4755	556481	66	True				
ANR	557201	Statement	bf	190:13:4756:4757	556481	67	True				
ANR	557202	Statement	->	190:15:4758:4759	556481	68	True				
ANR	557203	Statement	buf	190:17:4760:4762	556481	69	True				
ANR	557204	Statement	","	190:20:4763:4763	556481	70	True				
ANR	557205	Statement	NRO_OFF	190:22:4765:4771	556481	71	True				
ANR	557206	Statement	(	190:30:4773:4773	556481	72	True				
ANR	557207	Statement	bss_size	190:31:4774:4781	556481	73	True				
ANR	557208	Statement	)	190:39:4782:4782	556481	74	True				
ANR	557209	Statement	)	190:40:4783:4783	556481	75	True				
ANR	557210	Statement	)	190:41:4784:4784	556481	76	True				
ANR	557211	ExpressionStatement		190:42:4785:4785	556481	77	True				
ANR	557212	ExpressionStatement	"r_list_append ( ret , ptr )"	191:1:4788:4812	556481	78	True				
ANR	557213	CallExpression	"r_list_append ( ret , ptr )"		556481	0					
ANR	557214	Callee	r_list_append		556481	0					
ANR	557215	Identifier	r_list_append		556481	0					
ANR	557216	ArgumentList	ret		556481	1					
ANR	557217	Argument	ret		556481	0					
ANR	557218	Identifier	ret		556481	0					
ANR	557219	Argument	ptr		556481	1					
ANR	557220	Identifier	ptr		556481	0					
ANR	557221	ReturnStatement	return ret ;	192:1:4815:4825	556481	79	True				
ANR	557222	Identifier	ret		556481	0					
ANR	557223	ReturnType	static RList *		556481	1					
ANR	557224	Identifier	sections		556481	2					
ANR	557225	ParameterList	RBinFile * bf		556481	3					
ANR	557226	Parameter	RBinFile * bf	87:23:2307:2318	556481	0	True				
ANR	557227	ParameterType	RBinFile *		556481	0					
ANR	557228	Identifier	bf		556481	1					
ANR	557229	CFGEntryNode	ENTRY		556481		True				
ANR	557230	CFGExitNode	EXIT		556481		True				
ANR	557231	Symbol	baddr		556481						
ANR	557232	Symbol	ptr -> paddr		556481						
ANR	557233	Symbol	bufsz		556481						
ANR	557234	Symbol	NRO_OFF		556481						
ANR	557235	Symbol	bf		556481						
ANR	557236	Symbol	ptr -> name		556481						
ANR	557237	Symbol	text_memoffset		556481						
ANR	557238	Symbol	sig0		556481						
ANR	557239	Symbol	* ret		556481						
ANR	557240	Symbol	ret -> free		556481						
ANR	557241	Symbol	* bf -> o		556481						
ANR	557242	Symbol	ptr -> vaddr		556481						
ANR	557243	Symbol	ptr -> add		556481						
ANR	557244	Symbol	sig0sz		556481						
ANR	557245	Symbol	R_PERM_RW		556481						
ANR	557246	Symbol	bf -> buf		556481						
ANR	557247	Symbol	bf -> o		556481						
ANR	557248	Symbol	R_PERM_R		556481						
ANR	557249	Symbol	* ptr		556481						
ANR	557250	Symbol	ro_memoffset		556481						
ANR	557251	Symbol	free		556481						
ANR	557252	Symbol	R_PERM_RX		556481						
ANR	557253	Symbol	mod0		556481						
ANR	557254	Symbol	mod0sz		556481						
ANR	557255	Symbol	ret		556481						
ANR	557256	Symbol	data_size		556481						
ANR	557257	Symbol	b		556481						
ANR	557258	Symbol	NULL		556481						
ANR	557259	Symbol	ro_size		556481						
ANR	557260	Symbol	false		556481						
ANR	557261	Symbol	readLE32		556481						
ANR	557262	Symbol	* bf		556481						
ANR	557263	Symbol	ptr -> size		556481						
ANR	557264	Symbol	bf -> o -> info		556481						
ANR	557265	Symbol	ptr		556481						
ANR	557266	Symbol	R_NEW0		556481						
ANR	557267	Symbol	* * bf		556481						
ANR	557268	Symbol	NRO_OFFSET_MODMEMOFF		556481						
ANR	557269	Symbol	text_size		556481						
ANR	557270	Symbol	ptr -> vsize		556481						
ANR	557271	Symbol	true		556481						
ANR	557272	Symbol	RBinSection		556481						
ANR	557273	Symbol	strdup		556481						
ANR	557274	Symbol	data_memoffset		556481						
ANR	557275	Symbol	ptr -> perm		556481						
ANR	557276	Symbol	r_buf_size		556481						
ANR	557277	Symbol	r_list_new		556481						
ANR	557278	Symbol	ba		556481						
ANR	557279	Function	symbols	195:0:4830:5009							
ANR	557280	FunctionDef	symbols (RBinFile * bf)		557279	0					
ANR	557281	CompoundStatement		195:36:4866:5009	557279	0					
ANR	557282	IdentifierDeclStatement	RBinNXOObj * bin ;	196:1:4869:4884	557279	0	True				
ANR	557283	IdentifierDecl	* bin		557279	0					
ANR	557284	IdentifierDeclType	RBinNXOObj *		557279	0					
ANR	557285	Identifier	bin		557279	1					
ANR	557286	IfStatement	if ( ! bf || ! bf -> o || ! bf -> o -> bin_obj )		557279	1					
ANR	557287	Condition	! bf || ! bf -> o || ! bf -> o -> bin_obj	197:5:4891:4922	557279	0	True				
ANR	557288	OrExpression	! bf || ! bf -> o || ! bf -> o -> bin_obj		557279	0		||			
ANR	557289	UnaryOperationExpression	! bf		557279	0					
ANR	557290	UnaryOperator	!		557279	0					
ANR	557291	Identifier	bf		557279	1					
ANR	557292	OrExpression	! bf -> o || ! bf -> o -> bin_obj		557279	1		||			
ANR	557293	UnaryOperationExpression	! bf -> o		557279	0					
ANR	557294	UnaryOperator	!		557279	0					
ANR	557295	PtrMemberAccess	bf -> o		557279	1					
ANR	557296	Identifier	bf		557279	0					
ANR	557297	Identifier	o		557279	1					
ANR	557298	UnaryOperationExpression	! bf -> o -> bin_obj		557279	1					
ANR	557299	UnaryOperator	!		557279	0					
ANR	557300	PtrMemberAccess	bf -> o -> bin_obj		557279	1					
ANR	557301	PtrMemberAccess	bf -> o		557279	0					
ANR	557302	Identifier	bf		557279	0					
ANR	557303	Identifier	o		557279	1					
ANR	557304	Identifier	bin_obj		557279	1					
ANR	557305	CompoundStatement		3:39:58:58	557279	1					
ANR	557306	ReturnStatement	return NULL ;	198:2:4929:4940	557279	0	True				
ANR	557307	Identifier	NULL		557279	0					
ANR	557308	ExpressionStatement	bin = ( RBinNXOObj * ) bf -> o -> bin_obj	200:1:4946:4980	557279	2	True				
ANR	557309	AssignmentExpression	bin = ( RBinNXOObj * ) bf -> o -> bin_obj		557279	0		=			
ANR	557310	Identifier	bin		557279	0					
ANR	557311	CastExpression	( RBinNXOObj * ) bf -> o -> bin_obj		557279	1					
ANR	557312	CastTarget	RBinNXOObj *		557279	0					
ANR	557313	PtrMemberAccess	bf -> o -> bin_obj		557279	1					
ANR	557314	PtrMemberAccess	bf -> o		557279	0					
ANR	557315	Identifier	bf		557279	0					
ANR	557316	Identifier	o		557279	1					
ANR	557317	Identifier	bin_obj		557279	1					
ANR	557318	ReturnStatement	return bin -> methods_list ;	201:1:4983:5007	557279	3	True				
ANR	557319	PtrMemberAccess	bin -> methods_list		557279	0					
ANR	557320	Identifier	bin		557279	0					
ANR	557321	Identifier	methods_list		557279	1					
ANR	557322	ReturnType	static RList *		557279	1					
ANR	557323	Identifier	symbols		557279	2					
ANR	557324	ParameterList	RBinFile * bf		557279	3					
ANR	557325	Parameter	RBinFile * bf	195:22:4852:4863	557279	0	True				
ANR	557326	ParameterType	RBinFile *		557279	0					
ANR	557327	Identifier	bf		557279	1					
ANR	557328	CFGEntryNode	ENTRY		557279		True				
ANR	557329	CFGExitNode	EXIT		557279		True				
ANR	557330	Symbol	bf -> o -> bin_obj		557279						
ANR	557331	Symbol	bin -> methods_list		557279						
ANR	557332	Symbol	* * bf		557279						
ANR	557333	Symbol	NULL		557279						
ANR	557334	Symbol	bf		557279						
ANR	557335	Symbol	bf -> o		557279						
ANR	557336	Symbol	bin		557279						
ANR	557337	Symbol	* bf		557279						
ANR	557338	Symbol	* bin		557279						
ANR	557339	Symbol	* bf -> o		557279						
ANR	557340	Function	imports	204:0:5012:5191							
ANR	557341	FunctionDef	imports (RBinFile * bf)		557340	0					
ANR	557342	CompoundStatement		204:36:5048:5191	557340	0					
ANR	557343	IdentifierDeclStatement	RBinNXOObj * bin ;	205:1:5051:5066	557340	0	True				
ANR	557344	IdentifierDecl	* bin		557340	0					
ANR	557345	IdentifierDeclType	RBinNXOObj *		557340	0					
ANR	557346	Identifier	bin		557340	1					
ANR	557347	IfStatement	if ( ! bf || ! bf -> o || ! bf -> o -> bin_obj )		557340	1					
ANR	557348	Condition	! bf || ! bf -> o || ! bf -> o -> bin_obj	206:5:5073:5104	557340	0	True				
ANR	557349	OrExpression	! bf || ! bf -> o || ! bf -> o -> bin_obj		557340	0		||			
ANR	557350	UnaryOperationExpression	! bf		557340	0					
ANR	557351	UnaryOperator	!		557340	0					
ANR	557352	Identifier	bf		557340	1					
ANR	557353	OrExpression	! bf -> o || ! bf -> o -> bin_obj		557340	1		||			
ANR	557354	UnaryOperationExpression	! bf -> o		557340	0					
ANR	557355	UnaryOperator	!		557340	0					
ANR	557356	PtrMemberAccess	bf -> o		557340	1					
ANR	557357	Identifier	bf		557340	0					
ANR	557358	Identifier	o		557340	1					
ANR	557359	UnaryOperationExpression	! bf -> o -> bin_obj		557340	1					
ANR	557360	UnaryOperator	!		557340	0					
ANR	557361	PtrMemberAccess	bf -> o -> bin_obj		557340	1					
ANR	557362	PtrMemberAccess	bf -> o		557340	0					
ANR	557363	Identifier	bf		557340	0					
ANR	557364	Identifier	o		557340	1					
ANR	557365	Identifier	bin_obj		557340	1					
ANR	557366	CompoundStatement		3:39:58:58	557340	1					
ANR	557367	ReturnStatement	return NULL ;	207:2:5111:5122	557340	0	True				
ANR	557368	Identifier	NULL		557340	0					
ANR	557369	ExpressionStatement	bin = ( RBinNXOObj * ) bf -> o -> bin_obj	209:1:5128:5162	557340	2	True				
ANR	557370	AssignmentExpression	bin = ( RBinNXOObj * ) bf -> o -> bin_obj		557340	0		=			
ANR	557371	Identifier	bin		557340	0					
ANR	557372	CastExpression	( RBinNXOObj * ) bf -> o -> bin_obj		557340	1					
ANR	557373	CastTarget	RBinNXOObj *		557340	0					
ANR	557374	PtrMemberAccess	bf -> o -> bin_obj		557340	1					
ANR	557375	PtrMemberAccess	bf -> o		557340	0					
ANR	557376	Identifier	bf		557340	0					
ANR	557377	Identifier	o		557340	1					
ANR	557378	Identifier	bin_obj		557340	1					
ANR	557379	ReturnStatement	return bin -> imports_list ;	210:1:5165:5189	557340	3	True				
ANR	557380	PtrMemberAccess	bin -> imports_list		557340	0					
ANR	557381	Identifier	bin		557340	0					
ANR	557382	Identifier	imports_list		557340	1					
ANR	557383	ReturnType	static RList *		557340	1					
ANR	557384	Identifier	imports		557340	2					
ANR	557385	ParameterList	RBinFile * bf		557340	3					
ANR	557386	Parameter	RBinFile * bf	204:22:5034:5045	557340	0	True				
ANR	557387	ParameterType	RBinFile *		557340	0					
ANR	557388	Identifier	bf		557340	1					
ANR	557389	CFGEntryNode	ENTRY		557340		True				
ANR	557390	CFGExitNode	EXIT		557340		True				
ANR	557391	Symbol	bf -> o -> bin_obj		557340						
ANR	557392	Symbol	* * bf		557340						
ANR	557393	Symbol	NULL		557340						
ANR	557394	Symbol	bf		557340						
ANR	557395	Symbol	bf -> o		557340						
ANR	557396	Symbol	bin		557340						
ANR	557397	Symbol	* bf		557340						
ANR	557398	Symbol	bin -> imports_list		557340						
ANR	557399	Symbol	* bin		557340						
ANR	557400	Symbol	* bf -> o		557340						
ANR	557401	Function	libs	213:0:5194:5243							
ANR	557402	FunctionDef	libs (RBinFile * bf)		557401	0					
ANR	557403	CompoundStatement		213:33:5227:5243	557401	0					
ANR	557404	ReturnStatement	return NULL ;	214:1:5230:5241	557401	0	True				
ANR	557405	Identifier	NULL		557401	0					
ANR	557406	ReturnType	static RList *		557401	1					
ANR	557407	Identifier	libs		557401	2					
ANR	557408	ParameterList	RBinFile * bf		557401	3					
ANR	557409	Parameter	RBinFile * bf	213:19:5213:5224	557401	0	True				
ANR	557410	ParameterType	RBinFile *		557401	0					
ANR	557411	Identifier	bf		557401	1					
ANR	557412	CFGEntryNode	ENTRY		557401		True				
ANR	557413	CFGExitNode	EXIT		557401		True				
ANR	557414	Symbol	NULL		557401						
ANR	557415	Symbol	bf		557401						
ANR	557416	Function	info	217:0:5246:6179							
ANR	557417	FunctionDef	info (RBinFile * bf)		557416	0					
ANR	557418	CompoundStatement		217:36:5282:6179	557416	0					
ANR	557419	IdentifierDeclStatement	RBinInfo * ret = R_NEW0 ( RBinInfo ) ;	218:1:5285:5318	557416	0	True				
ANR	557420	IdentifierDecl	* ret = R_NEW0 ( RBinInfo )		557416	0					
ANR	557421	IdentifierDeclType	RBinInfo *		557416	0					
ANR	557422	Identifier	ret		557416	1					
ANR	557423	AssignmentExpression	* ret = R_NEW0 ( RBinInfo )		557416	2		=			
ANR	557424	Identifier	ret		557416	0					
ANR	557425	CallExpression	R_NEW0 ( RBinInfo )		557416	1					
ANR	557426	Callee	R_NEW0		557416	0					
ANR	557427	Identifier	R_NEW0		557416	0					
ANR	557428	ArgumentList	RBinInfo		557416	1					
ANR	557429	Argument	RBinInfo		557416	0					
ANR	557430	Identifier	RBinInfo		557416	0					
ANR	557431	IfStatement	if ( ! ret )		557416	1					
ANR	557432	Condition	! ret	219:5:5325:5328	557416	0	True				
ANR	557433	UnaryOperationExpression	! ret		557416	0					
ANR	557434	UnaryOperator	!		557416	0					
ANR	557435	Identifier	ret		557416	1					
ANR	557436	CompoundStatement		3:11:48:48	557416	1					
ANR	557437	ReturnStatement	return NULL ;	220:2:5335:5346	557416	0	True				
ANR	557438	Identifier	NULL		557416	0					
ANR	557439	IdentifierDeclStatement	ut8 magic [ 4 ] ;	222:1:5352:5364	557416	2	True				
ANR	557440	IdentifierDecl	magic [ 4 ]		557416	0					
ANR	557441	IdentifierDeclType	ut8 [ 4 ]		557416	0					
ANR	557442	Identifier	magic		557416	1					
ANR	557443	PrimaryExpression	4		557416	2					
ANR	557444	ExpressionStatement	"r_buf_read_at ( bf -> buf , NRO_OFF ( magic ) , magic , sizeof ( magic ) )"	223:1:5367:5430	557416	3	True				
ANR	557445	CallExpression	"r_buf_read_at ( bf -> buf , NRO_OFF ( magic ) , magic , sizeof ( magic ) )"		557416	0					
ANR	557446	Callee	r_buf_read_at		557416	0					
ANR	557447	Identifier	r_buf_read_at		557416	0					
ANR	557448	ArgumentList	bf -> buf		557416	1					
ANR	557449	Argument	bf -> buf		557416	0					
ANR	557450	PtrMemberAccess	bf -> buf		557416	0					
ANR	557451	Identifier	bf		557416	0					
ANR	557452	Identifier	buf		557416	1					
ANR	557453	Argument	NRO_OFF ( magic )		557416	1					
ANR	557454	CallExpression	NRO_OFF ( magic )		557416	0					
ANR	557455	Callee	NRO_OFF		557416	0					
ANR	557456	Identifier	NRO_OFF		557416	0					
ANR	557457	ArgumentList	magic		557416	1					
ANR	557458	Argument	magic		557416	0					
ANR	557459	Identifier	magic		557416	0					
ANR	557460	Argument	magic		557416	2					
ANR	557461	Identifier	magic		557416	0					
ANR	557462	Argument	sizeof ( magic )		557416	3					
ANR	557463	SizeofExpression	sizeof ( magic )		557416	0					
ANR	557464	Sizeof	sizeof		557416	0					
ANR	557465	SizeofOperand	magic		557416	1					
ANR	557466	IdentifierDeclStatement	const char * ft = fileType ( magic ) ;	224:1:5433:5466	557416	4	True				
ANR	557467	IdentifierDecl	* ft = fileType ( magic )		557416	0					
ANR	557468	IdentifierDeclType	const char *		557416	0					
ANR	557469	Identifier	ft		557416	1					
ANR	557470	AssignmentExpression	* ft = fileType ( magic )		557416	2		=			
ANR	557471	Identifier	ft		557416	0					
ANR	557472	CallExpression	fileType ( magic )		557416	1					
ANR	557473	Callee	fileType		557416	0					
ANR	557474	Identifier	fileType		557416	0					
ANR	557475	ArgumentList	magic		557416	1					
ANR	557476	Argument	magic		557416	0					
ANR	557477	Identifier	magic		557416	0					
ANR	557478	IfStatement	if ( ! ft )		557416	5					
ANR	557479	Condition	! ft	225:5:5473:5475	557416	0	True				
ANR	557480	UnaryOperationExpression	! ft		557416	0					
ANR	557481	UnaryOperator	!		557416	0					
ANR	557482	Identifier	ft		557416	1					
ANR	557483	CompoundStatement		9:10:195:195	557416	1					
ANR	557484	ExpressionStatement	"ft = ""nro"""	226:2:5482:5492	557416	0	True				
ANR	557485	AssignmentExpression	"ft = ""nro"""		557416	0		=			
ANR	557486	Identifier	ft		557416	0					
ANR	557487	PrimaryExpression	"""nro"""		557416	1					
ANR	557488	ExpressionStatement	ret -> file = strdup ( bf -> file )	228:1:5498:5527	557416	6	True				
ANR	557489	AssignmentExpression	ret -> file = strdup ( bf -> file )		557416	0		=			
ANR	557490	PtrMemberAccess	ret -> file		557416	0					
ANR	557491	Identifier	ret		557416	0					
ANR	557492	Identifier	file		557416	1					
ANR	557493	CallExpression	strdup ( bf -> file )		557416	1					
ANR	557494	Callee	strdup		557416	0					
ANR	557495	Identifier	strdup		557416	0					
ANR	557496	ArgumentList	bf -> file		557416	1					
ANR	557497	Argument	bf -> file		557416	0					
ANR	557498	PtrMemberAccess	bf -> file		557416	0					
ANR	557499	Identifier	bf		557416	0					
ANR	557500	Identifier	file		557416	1					
ANR	557501	ExpressionStatement	ret -> rclass = strdup ( ft )	229:1:5530:5555	557416	7	True				
ANR	557502	AssignmentExpression	ret -> rclass = strdup ( ft )		557416	0		=			
ANR	557503	PtrMemberAccess	ret -> rclass		557416	0					
ANR	557504	Identifier	ret		557416	0					
ANR	557505	Identifier	rclass		557416	1					
ANR	557506	CallExpression	strdup ( ft )		557416	1					
ANR	557507	Callee	strdup		557416	0					
ANR	557508	Identifier	strdup		557416	0					
ANR	557509	ArgumentList	ft		557416	1					
ANR	557510	Argument	ft		557416	0					
ANR	557511	Identifier	ft		557416	0					
ANR	557512	ExpressionStatement	"ret -> os = strdup ( ""switch"" )"	230:1:5558:5585	557416	8	True				
ANR	557513	AssignmentExpression	"ret -> os = strdup ( ""switch"" )"		557416	0		=			
ANR	557514	PtrMemberAccess	ret -> os		557416	0					
ANR	557515	Identifier	ret		557416	0					
ANR	557516	Identifier	os		557416	1					
ANR	557517	CallExpression	"strdup ( ""switch"" )"		557416	1					
ANR	557518	Callee	strdup		557416	0					
ANR	557519	Identifier	strdup		557416	0					
ANR	557520	ArgumentList	"""switch"""		557416	1					
ANR	557521	Argument	"""switch"""		557416	0					
ANR	557522	PrimaryExpression	"""switch"""		557416	0					
ANR	557523	ExpressionStatement	"ret -> arch = strdup ( ""arm"" )"	231:1:5588:5614	557416	9	True				
ANR	557524	AssignmentExpression	"ret -> arch = strdup ( ""arm"" )"		557416	0		=			
ANR	557525	PtrMemberAccess	ret -> arch		557416	0					
ANR	557526	Identifier	ret		557416	0					
ANR	557527	Identifier	arch		557416	1					
ANR	557528	CallExpression	"strdup ( ""arm"" )"		557416	1					
ANR	557529	Callee	strdup		557416	0					
ANR	557530	Identifier	strdup		557416	0					
ANR	557531	ArgumentList	"""arm"""		557416	1					
ANR	557532	Argument	"""arm"""		557416	0					
ANR	557533	PrimaryExpression	"""arm"""		557416	0					
ANR	557534	ExpressionStatement	"ret -> machine = strdup ( ""Nintendo Switch"" )"	232:1:5617:5658	557416	10	True				
ANR	557535	AssignmentExpression	"ret -> machine = strdup ( ""Nintendo Switch"" )"		557416	0		=			
ANR	557536	PtrMemberAccess	ret -> machine		557416	0					
ANR	557537	Identifier	ret		557416	0					
ANR	557538	Identifier	machine		557416	1					
ANR	557539	CallExpression	"strdup ( ""Nintendo Switch"" )"		557416	1					
ANR	557540	Callee	strdup		557416	0					
ANR	557541	Identifier	strdup		557416	0					
ANR	557542	ArgumentList	"""Nintendo Switch"""		557416	1					
ANR	557543	Argument	"""Nintendo Switch"""		557416	0					
ANR	557544	PrimaryExpression	"""Nintendo Switch"""		557416	0					
ANR	557545	ExpressionStatement	ret -> subsystem = strdup ( ft )	233:1:5661:5689	557416	11	True				
ANR	557546	AssignmentExpression	ret -> subsystem = strdup ( ft )		557416	0		=			
ANR	557547	PtrMemberAccess	ret -> subsystem		557416	0					
ANR	557548	Identifier	ret		557416	0					
ANR	557549	Identifier	subsystem		557416	1					
ANR	557550	CallExpression	strdup ( ft )		557416	1					
ANR	557551	Callee	strdup		557416	0					
ANR	557552	Identifier	strdup		557416	0					
ANR	557553	ArgumentList	ft		557416	1					
ANR	557554	Argument	ft		557416	0					
ANR	557555	Identifier	ft		557416	0					
ANR	557556	IfStatement	"if ( ! strncmp ( ft , ""nrr"" , 3 ) )"		557416	12					
ANR	557557	Condition	"! strncmp ( ft , ""nrr"" , 3 )"	234:5:5696:5718	557416	0	True				
ANR	557558	UnaryOperationExpression	"! strncmp ( ft , ""nrr"" , 3 )"		557416	0					
ANR	557559	UnaryOperator	!		557416	0					
ANR	557560	CallExpression	"strncmp ( ft , ""nrr"" , 3 )"		557416	1					
ANR	557561	Callee	strncmp		557416	0					
ANR	557562	Identifier	strncmp		557416	0					
ANR	557563	ArgumentList	ft		557416	1					
ANR	557564	Argument	ft		557416	0					
ANR	557565	Identifier	ft		557416	0					
ANR	557566	Argument	"""nrr"""		557416	1					
ANR	557567	PrimaryExpression	"""nrr"""		557416	0					
ANR	557568	Argument	3		557416	2					
ANR	557569	PrimaryExpression	3		557416	0					
ANR	557570	CompoundStatement		18:30:438:438	557416	1					
ANR	557571	ExpressionStatement	"ret -> bclass = strdup ( ""program"" )"	235:2:5725:5757	557416	0	True				
ANR	557572	AssignmentExpression	"ret -> bclass = strdup ( ""program"" )"		557416	0		=			
ANR	557573	PtrMemberAccess	ret -> bclass		557416	0					
ANR	557574	Identifier	ret		557416	0					
ANR	557575	Identifier	bclass		557416	1					
ANR	557576	CallExpression	"strdup ( ""program"" )"		557416	1					
ANR	557577	Callee	strdup		557416	0					
ANR	557578	Identifier	strdup		557416	0					
ANR	557579	ArgumentList	"""program"""		557416	1					
ANR	557580	Argument	"""program"""		557416	0					
ANR	557581	PrimaryExpression	"""program"""		557416	0					
ANR	557582	ExpressionStatement	"ret -> type = strdup ( ""EXEC (executable file)"" )"	236:2:5761:5806	557416	1	True				
ANR	557583	AssignmentExpression	"ret -> type = strdup ( ""EXEC (executable file)"" )"		557416	0		=			
ANR	557584	PtrMemberAccess	ret -> type		557416	0					
ANR	557585	Identifier	ret		557416	0					
ANR	557586	Identifier	type		557416	1					
ANR	557587	CallExpression	"strdup ( ""EXEC (executable file)"" )"		557416	1					
ANR	557588	Callee	strdup		557416	0					
ANR	557589	Identifier	strdup		557416	0					
ANR	557590	ArgumentList	"""EXEC (executable file)"""		557416	1					
ANR	557591	Argument	"""EXEC (executable file)"""		557416	0					
ANR	557592	PrimaryExpression	"""EXEC (executable file)"""		557416	0					
ANR	557593	ElseStatement	else		557416	0					
ANR	557594	IfStatement	"if ( ! strncmp ( ft , ""nro"" , 3 ) )"		557416	0					
ANR	557595	Condition	"! strncmp ( ft , ""nro"" , 3 )"	237:12:5820:5842	557416	0	True				
ANR	557596	UnaryOperationExpression	"! strncmp ( ft , ""nro"" , 3 )"		557416	0					
ANR	557597	UnaryOperator	!		557416	0					
ANR	557598	CallExpression	"strncmp ( ft , ""nro"" , 3 )"		557416	1					
ANR	557599	Callee	strncmp		557416	0					
ANR	557600	Identifier	strncmp		557416	0					
ANR	557601	ArgumentList	ft		557416	1					
ANR	557602	Argument	ft		557416	0					
ANR	557603	Identifier	ft		557416	0					
ANR	557604	Argument	"""nro"""		557416	1					
ANR	557605	PrimaryExpression	"""nro"""		557416	0					
ANR	557606	Argument	3		557416	2					
ANR	557607	PrimaryExpression	3		557416	0					
ANR	557608	CompoundStatement		21:37:562:562	557416	1					
ANR	557609	ExpressionStatement	"ret -> bclass = strdup ( ""object"" )"	238:2:5849:5880	557416	0	True				
ANR	557610	AssignmentExpression	"ret -> bclass = strdup ( ""object"" )"		557416	0		=			
ANR	557611	PtrMemberAccess	ret -> bclass		557416	0					
ANR	557612	Identifier	ret		557416	0					
ANR	557613	Identifier	bclass		557416	1					
ANR	557614	CallExpression	"strdup ( ""object"" )"		557416	1					
ANR	557615	Callee	strdup		557416	0					
ANR	557616	Identifier	strdup		557416	0					
ANR	557617	ArgumentList	"""object"""		557416	1					
ANR	557618	Argument	"""object"""		557416	0					
ANR	557619	PrimaryExpression	"""object"""		557416	0					
ANR	557620	ExpressionStatement	"ret -> type = strdup ( ""OBJECT (executable code)"" )"	239:2:5884:5931	557416	1	True				
ANR	557621	AssignmentExpression	"ret -> type = strdup ( ""OBJECT (executable code)"" )"		557416	0		=			
ANR	557622	PtrMemberAccess	ret -> type		557416	0					
ANR	557623	Identifier	ret		557416	0					
ANR	557624	Identifier	type		557416	1					
ANR	557625	CallExpression	"strdup ( ""OBJECT (executable code)"" )"		557416	1					
ANR	557626	Callee	strdup		557416	0					
ANR	557627	Identifier	strdup		557416	0					
ANR	557628	ArgumentList	"""OBJECT (executable code)"""		557416	1					
ANR	557629	Argument	"""OBJECT (executable code)"""		557416	0					
ANR	557630	PrimaryExpression	"""OBJECT (executable code)"""		557416	0					
ANR	557631	ElseStatement	else		557416	0					
ANR	557632	CompoundStatement		24:8:658:658	557416	0					
ANR	557633	ExpressionStatement	"ret -> bclass = strdup ( ""library"" )"	241:2:5952:5984	557416	0	True				
ANR	557634	AssignmentExpression	"ret -> bclass = strdup ( ""library"" )"		557416	0		=			
ANR	557635	PtrMemberAccess	ret -> bclass		557416	0					
ANR	557636	Identifier	ret		557416	0					
ANR	557637	Identifier	bclass		557416	1					
ANR	557638	CallExpression	"strdup ( ""library"" )"		557416	1					
ANR	557639	Callee	strdup		557416	0					
ANR	557640	Identifier	strdup		557416	0					
ANR	557641	ArgumentList	"""library"""		557416	1					
ANR	557642	Argument	"""library"""		557416	0					
ANR	557643	PrimaryExpression	"""library"""		557416	0					
ANR	557644	ExpressionStatement	"ret -> type = strdup ( ""MOD (executable library)"" )"	242:2:5988:6035	557416	1	True				
ANR	557645	AssignmentExpression	"ret -> type = strdup ( ""MOD (executable library)"" )"		557416	0		=			
ANR	557646	PtrMemberAccess	ret -> type		557416	0					
ANR	557647	Identifier	ret		557416	0					
ANR	557648	Identifier	type		557416	1					
ANR	557649	CallExpression	"strdup ( ""MOD (executable library)"" )"		557416	1					
ANR	557650	Callee	strdup		557416	0					
ANR	557651	Identifier	strdup		557416	0					
ANR	557652	ArgumentList	"""MOD (executable library)"""		557416	1					
ANR	557653	Argument	"""MOD (executable library)"""		557416	0					
ANR	557654	PrimaryExpression	"""MOD (executable library)"""		557416	0					
ANR	557655	ExpressionStatement	ret -> bits = 64	244:1:6041:6055	557416	13	True				
ANR	557656	AssignmentExpression	ret -> bits = 64		557416	0		=			
ANR	557657	PtrMemberAccess	ret -> bits		557416	0					
ANR	557658	Identifier	ret		557416	0					
ANR	557659	Identifier	bits		557416	1					
ANR	557660	PrimaryExpression	64		557416	1					
ANR	557661	ExpressionStatement	ret -> has_va = true	245:1:6058:6076	557416	14	True				
ANR	557662	AssignmentExpression	ret -> has_va = true		557416	0		=			
ANR	557663	PtrMemberAccess	ret -> has_va		557416	0					
ANR	557664	Identifier	ret		557416	0					
ANR	557665	Identifier	has_va		557416	1					
ANR	557666	Identifier	true		557416	1					
ANR	557667	ExpressionStatement	ret -> has_lit = true	246:1:6079:6098	557416	15	True				
ANR	557668	AssignmentExpression	ret -> has_lit = true		557416	0		=			
ANR	557669	PtrMemberAccess	ret -> has_lit		557416	0					
ANR	557670	Identifier	ret		557416	0					
ANR	557671	Identifier	has_lit		557416	1					
ANR	557672	Identifier	true		557416	1					
ANR	557673	ExpressionStatement	ret -> big_endian = false	247:1:6101:6124	557416	16	True				
ANR	557674	AssignmentExpression	ret -> big_endian = false		557416	0		=			
ANR	557675	PtrMemberAccess	ret -> big_endian		557416	0					
ANR	557676	Identifier	ret		557416	0					
ANR	557677	Identifier	big_endian		557416	1					
ANR	557678	Identifier	false		557416	1					
ANR	557679	ExpressionStatement	ret -> dbg_info = 0	248:1:6127:6144	557416	17	True				
ANR	557680	AssignmentExpression	ret -> dbg_info = 0		557416	0		=			
ANR	557681	PtrMemberAccess	ret -> dbg_info		557416	0					
ANR	557682	Identifier	ret		557416	0					
ANR	557683	Identifier	dbg_info		557416	1					
ANR	557684	PrimaryExpression	0		557416	1					
ANR	557685	ExpressionStatement	ret -> dbg_info = 0	249:1:6147:6164	557416	18	True				
ANR	557686	AssignmentExpression	ret -> dbg_info = 0		557416	0		=			
ANR	557687	PtrMemberAccess	ret -> dbg_info		557416	0					
ANR	557688	Identifier	ret		557416	0					
ANR	557689	Identifier	dbg_info		557416	1					
ANR	557690	PrimaryExpression	0		557416	1					
ANR	557691	ReturnStatement	return ret ;	250:1:6167:6177	557416	19	True				
ANR	557692	Identifier	ret		557416	0					
ANR	557693	ReturnType	static RBinInfo *		557416	1					
ANR	557694	Identifier	info		557416	2					
ANR	557695	ParameterList	RBinFile * bf		557416	3					
ANR	557696	Parameter	RBinFile * bf	217:22:5268:5279	557416	0	True				
ANR	557697	ParameterType	RBinFile *		557416	0					
ANR	557698	Identifier	bf		557416	1					
ANR	557699	CFGEntryNode	ENTRY		557416		True				
ANR	557700	CFGExitNode	EXIT		557416		True				
ANR	557701	Symbol	magic		557416						
ANR	557702	Symbol	NRO_OFF		557416						
ANR	557703	Symbol	ret -> big_endian		557416						
ANR	557704	Symbol	bf		557416						
ANR	557705	Symbol	ret -> arch		557416						
ANR	557706	Symbol	ret -> subsystem		557416						
ANR	557707	Symbol	* ret		557416						
ANR	557708	Symbol	ft		557416						
ANR	557709	Symbol	ret -> dbg_info		557416						
ANR	557710	Symbol	ret -> bclass		557416						
ANR	557711	Symbol	bf -> file		557416						
ANR	557712	Symbol	strncmp		557416						
ANR	557713	Symbol	ret -> rclass		557416						
ANR	557714	Symbol	bf -> buf		557416						
ANR	557715	Symbol	ret -> has_lit		557416						
ANR	557716	Symbol	ret -> has_va		557416						
ANR	557717	Symbol	ret		557416						
ANR	557718	Symbol	ret -> os		557416						
ANR	557719	Symbol	NULL		557416						
ANR	557720	Symbol	false		557416						
ANR	557721	Symbol	* bf		557416						
ANR	557722	Symbol	ret -> machine		557416						
ANR	557723	Symbol	R_NEW0		557416						
ANR	557724	Symbol	true		557416						
ANR	557725	Symbol	ret -> bits		557416						
ANR	557726	Symbol	RBinInfo		557416						
ANR	557727	Symbol	strdup		557416						
ANR	557728	Symbol	ret -> file		557416						
ANR	557729	Symbol	ret -> type		557416						
ANR	557730	Symbol	fileType		557416						
ANR	557731	DeclStmt									
ANR	557732	Decl							RBinPlugin	RBinPlugin	r_bin_plugin_nro
ANR	557733	DeclStmt									
ANR	557734	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
