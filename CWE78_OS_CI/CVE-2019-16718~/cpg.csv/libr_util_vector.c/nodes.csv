command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5269949	File	data/converged/CVE-2019-16718~_radare2/libr_util_vector.c								
ANR	5269950	DeclStmt									
ANR	5269951	Decl							size_t	size_t	new_capacity
ANR	5269952	DeclStmt									
ANR	5269953	Decl							void	void * *	new_a
ANR	5269954	Function	r_vector_init	30:0:837:1055							
ANR	5269955	FunctionDef	"r_vector_init (RVector * vec , size_t elem_size , RVectorFree free , void * free_user)"		5269954	0					
ANR	5269956	CompoundStatement		30:92:929:1055	5269954	0					
ANR	5269957	ExpressionStatement	vec -> a = NULL	31:1:932:945	5269954	0	True				
ANR	5269958	AssignmentExpression	vec -> a = NULL		5269954	0		=			
ANR	5269959	PtrMemberAccess	vec -> a		5269954	0					
ANR	5269960	Identifier	vec		5269954	0					
ANR	5269961	Identifier	a		5269954	1					
ANR	5269962	Identifier	NULL		5269954	1					
ANR	5269963	ExpressionStatement	vec -> capacity = vec -> len = 0	32:1:948:976	5269954	1	True				
ANR	5269964	AssignmentExpression	vec -> capacity = vec -> len = 0		5269954	0		=			
ANR	5269965	PtrMemberAccess	vec -> capacity		5269954	0					
ANR	5269966	Identifier	vec		5269954	0					
ANR	5269967	Identifier	capacity		5269954	1					
ANR	5269968	AssignmentExpression	vec -> len = 0		5269954	1		=			
ANR	5269969	PtrMemberAccess	vec -> len		5269954	0					
ANR	5269970	Identifier	vec		5269954	0					
ANR	5269971	Identifier	len		5269954	1					
ANR	5269972	PrimaryExpression	0		5269954	1					
ANR	5269973	ExpressionStatement	vec -> elem_size = elem_size	33:1:979:1005	5269954	2	True				
ANR	5269974	AssignmentExpression	vec -> elem_size = elem_size		5269954	0		=			
ANR	5269975	PtrMemberAccess	vec -> elem_size		5269954	0					
ANR	5269976	Identifier	vec		5269954	0					
ANR	5269977	Identifier	elem_size		5269954	1					
ANR	5269978	Identifier	elem_size		5269954	1					
ANR	5269979	ExpressionStatement	vec -> free = free	34:1:1008:1024	5269954	3	True				
ANR	5269980	AssignmentExpression	vec -> free = free		5269954	0		=			
ANR	5269981	PtrMemberAccess	vec -> free		5269954	0					
ANR	5269982	Identifier	vec		5269954	0					
ANR	5269983	Identifier	free		5269954	1					
ANR	5269984	Identifier	free		5269954	1					
ANR	5269985	ExpressionStatement	vec -> free_user = free_user	35:1:1027:1053	5269954	4	True				
ANR	5269986	AssignmentExpression	vec -> free_user = free_user		5269954	0		=			
ANR	5269987	PtrMemberAccess	vec -> free_user		5269954	0					
ANR	5269988	Identifier	vec		5269954	0					
ANR	5269989	Identifier	free_user		5269954	1					
ANR	5269990	Identifier	free_user		5269954	1					
ANR	5269991	ReturnType	R_API void		5269954	1					
ANR	5269992	Identifier	r_vector_init		5269954	2					
ANR	5269993	ParameterList	"RVector * vec , size_t elem_size , RVectorFree free , void * free_user"		5269954	3					
ANR	5269994	Parameter	RVector * vec	30:25:862:873	5269954	0	True				
ANR	5269995	ParameterType	RVector *		5269954	0					
ANR	5269996	Identifier	vec		5269954	1					
ANR	5269997	Parameter	size_t elem_size	30:39:876:891	5269954	1	True				
ANR	5269998	ParameterType	size_t		5269954	0					
ANR	5269999	Identifier	elem_size		5269954	1					
ANR	5270000	Parameter	RVectorFree free	30:57:894:909	5269954	2	True				
ANR	5270001	ParameterType	RVectorFree		5269954	0					
ANR	5270002	Identifier	free		5269954	1					
ANR	5270003	Parameter	void * free_user	30:75:912:926	5269954	3	True				
ANR	5270004	ParameterType	void *		5269954	0					
ANR	5270005	Identifier	free_user		5269954	1					
ANR	5270006	CFGEntryNode	ENTRY		5269954		True				
ANR	5270007	CFGExitNode	EXIT		5269954		True				
ANR	5270008	Symbol	vec -> free_user		5269954						
ANR	5270009	Symbol	NULL		5269954						
ANR	5270010	Symbol	free_user		5269954						
ANR	5270011	Symbol	vec		5269954						
ANR	5270012	Symbol	elem_size		5269954						
ANR	5270013	Symbol	vec -> a		5269954						
ANR	5270014	Symbol	vec -> free		5269954						
ANR	5270015	Symbol	vec -> len		5269954						
ANR	5270016	Symbol	free		5269954						
ANR	5270017	Symbol	vec -> elem_size		5269954						
ANR	5270018	Symbol	* vec		5269954						
ANR	5270019	Symbol	vec -> capacity		5269954						
ANR	5270020	Function	r_vector_new	38:0:1058:1268							
ANR	5270021	FunctionDef	"r_vector_new (size_t elem_size , RVectorFree free , void * free_user)"		5270020	0					
ANR	5270022	CompoundStatement		38:81:1139:1268	5270020	0					
ANR	5270023	IdentifierDeclStatement	RVector * vec = R_NEW ( RVector ) ;	39:1:1142:1172	5270020	0	True				
ANR	5270024	IdentifierDecl	* vec = R_NEW ( RVector )		5270020	0					
ANR	5270025	IdentifierDeclType	RVector *		5270020	0					
ANR	5270026	Identifier	vec		5270020	1					
ANR	5270027	AssignmentExpression	* vec = R_NEW ( RVector )		5270020	2		=			
ANR	5270028	Identifier	vec		5270020	0					
ANR	5270029	CallExpression	R_NEW ( RVector )		5270020	1					
ANR	5270030	Callee	R_NEW		5270020	0					
ANR	5270031	Identifier	R_NEW		5270020	0					
ANR	5270032	ArgumentList	RVector		5270020	1					
ANR	5270033	Argument	RVector		5270020	0					
ANR	5270034	Identifier	RVector		5270020	0					
ANR	5270035	IfStatement	if ( ! vec )		5270020	1					
ANR	5270036	Condition	! vec	40:5:1179:1182	5270020	0	True				
ANR	5270037	UnaryOperationExpression	! vec		5270020	0					
ANR	5270038	UnaryOperator	!		5270020	0					
ANR	5270039	Identifier	vec		5270020	1					
ANR	5270040	CompoundStatement		3:11:45:45	5270020	1					
ANR	5270041	ReturnStatement	return NULL ;	41:2:1189:1200	5270020	0	True				
ANR	5270042	Identifier	NULL		5270020	0					
ANR	5270043	ExpressionStatement	"r_vector_init ( vec , elem_size , free , free_user )"	43:1:1206:1253	5270020	2	True				
ANR	5270044	CallExpression	"r_vector_init ( vec , elem_size , free , free_user )"		5270020	0					
ANR	5270045	Callee	r_vector_init		5270020	0					
ANR	5270046	Identifier	r_vector_init		5270020	0					
ANR	5270047	ArgumentList	vec		5270020	1					
ANR	5270048	Argument	vec		5270020	0					
ANR	5270049	Identifier	vec		5270020	0					
ANR	5270050	Argument	elem_size		5270020	1					
ANR	5270051	Identifier	elem_size		5270020	0					
ANR	5270052	Argument	free		5270020	2					
ANR	5270053	Identifier	free		5270020	0					
ANR	5270054	Argument	free_user		5270020	3					
ANR	5270055	Identifier	free_user		5270020	0					
ANR	5270056	ReturnStatement	return vec ;	44:1:1256:1266	5270020	3	True				
ANR	5270057	Identifier	vec		5270020	0					
ANR	5270058	ReturnType	R_API RVector *		5270020	1					
ANR	5270059	Identifier	r_vector_new		5270020	2					
ANR	5270060	ParameterList	"size_t elem_size , RVectorFree free , void * free_user"		5270020	3					
ANR	5270061	Parameter	size_t elem_size	38:28:1086:1101	5270020	0	True				
ANR	5270062	ParameterType	size_t		5270020	0					
ANR	5270063	Identifier	elem_size		5270020	1					
ANR	5270064	Parameter	RVectorFree free	38:46:1104:1119	5270020	1	True				
ANR	5270065	ParameterType	RVectorFree		5270020	0					
ANR	5270066	Identifier	free		5270020	1					
ANR	5270067	Parameter	void * free_user	38:64:1122:1136	5270020	2	True				
ANR	5270068	ParameterType	void *		5270020	0					
ANR	5270069	Identifier	free_user		5270020	1					
ANR	5270070	CFGEntryNode	ENTRY		5270020		True				
ANR	5270071	CFGExitNode	EXIT		5270020		True				
ANR	5270072	Symbol	NULL		5270020						
ANR	5270073	Symbol	free_user		5270020						
ANR	5270074	Symbol	elem_size		5270020						
ANR	5270075	Symbol	vec		5270020						
ANR	5270076	Symbol	RVector		5270020						
ANR	5270077	Symbol	free		5270020						
ANR	5270078	Symbol	R_NEW		5270020						
ANR	5270079	Function	vector_free_elems	47:0:1271:1462							
ANR	5270080	FunctionDef	vector_free_elems (RVector * vec)		5270079	0					
ANR	5270081	CompoundStatement		47:44:1315:1462	5270079	0					
ANR	5270082	IfStatement	if ( vec -> free )		5270079	0					
ANR	5270083	Condition	vec -> free	48:5:1322:1330	5270079	0	True				
ANR	5270084	PtrMemberAccess	vec -> free		5270079	0					
ANR	5270085	Identifier	vec		5270079	0					
ANR	5270086	Identifier	free		5270079	1					
ANR	5270087	CompoundStatement		2:16:17:17	5270079	1					
ANR	5270088	WhileStatement	while ( vec -> len > 0 )		5270079	0					
ANR	5270089	Condition	vec -> len > 0	49:9:1344:1355	5270079	0	True				
ANR	5270090	RelationalExpression	vec -> len > 0		5270079	0		>			
ANR	5270091	PtrMemberAccess	vec -> len		5270079	0					
ANR	5270092	Identifier	vec		5270079	0					
ANR	5270093	Identifier	len		5270079	1					
ANR	5270094	PrimaryExpression	0		5270079	1					
ANR	5270095	CompoundStatement		3:23:42:42	5270079	1					
ANR	5270096	ExpressionStatement	"vec -> free ( r_vector_index_ptr ( vec , -- vec -> len ) , vec -> free_user )"	50:3:1363:1427	5270079	0	True				
ANR	5270097	CallExpression	"vec -> free ( r_vector_index_ptr ( vec , -- vec -> len ) , vec -> free_user )"		5270079	0					
ANR	5270098	Callee	vec -> free		5270079	0					
ANR	5270099	PtrMemberAccess	vec -> free		5270079	0					
ANR	5270100	Identifier	vec		5270079	0					
ANR	5270101	Identifier	free		5270079	1					
ANR	5270102	ArgumentList	"r_vector_index_ptr ( vec , -- vec -> len )"		5270079	1					
ANR	5270103	Argument	"r_vector_index_ptr ( vec , -- vec -> len )"		5270079	0					
ANR	5270104	CallExpression	"r_vector_index_ptr ( vec , -- vec -> len )"		5270079	0					
ANR	5270105	Callee	r_vector_index_ptr		5270079	0					
ANR	5270106	Identifier	r_vector_index_ptr		5270079	0					
ANR	5270107	ArgumentList	vec		5270079	1					
ANR	5270108	Argument	vec		5270079	0					
ANR	5270109	Identifier	vec		5270079	0					
ANR	5270110	Argument	-- vec -> len		5270079	1					
ANR	5270111	UnaryExpression	-- vec -> len		5270079	0					
ANR	5270112	IncDec	--		5270079	0					
ANR	5270113	PtrMemberAccess	vec -> len		5270079	1					
ANR	5270114	Identifier	vec		5270079	0					
ANR	5270115	Identifier	len		5270079	1					
ANR	5270116	Argument	vec -> free_user		5270079	1					
ANR	5270117	PtrMemberAccess	vec -> free_user		5270079	0					
ANR	5270118	Identifier	vec		5270079	0					
ANR	5270119	Identifier	free_user		5270079	1					
ANR	5270120	ElseStatement	else		5270079	0					
ANR	5270121	CompoundStatement		6:8:125:125	5270079	0					
ANR	5270122	ExpressionStatement	vec -> len = 0	53:2:1445:1457	5270079	0	True				
ANR	5270123	AssignmentExpression	vec -> len = 0		5270079	0		=			
ANR	5270124	PtrMemberAccess	vec -> len		5270079	0					
ANR	5270125	Identifier	vec		5270079	0					
ANR	5270126	Identifier	len		5270079	1					
ANR	5270127	PrimaryExpression	0		5270079	1					
ANR	5270128	ReturnType	static void		5270079	1					
ANR	5270129	Identifier	vector_free_elems		5270079	2					
ANR	5270130	ParameterList	RVector * vec		5270079	3					
ANR	5270131	Parameter	RVector * vec	47:30:1301:1312	5270079	0	True				
ANR	5270132	ParameterType	RVector *		5270079	0					
ANR	5270133	Identifier	vec		5270079	1					
ANR	5270134	CFGEntryNode	ENTRY		5270079		True				
ANR	5270135	CFGExitNode	EXIT		5270079		True				
ANR	5270136	Symbol	r_vector_index_ptr		5270079						
ANR	5270137	Symbol	vec -> free_user		5270079						
ANR	5270138	Symbol	vec		5270079						
ANR	5270139	Symbol	vec -> free		5270079						
ANR	5270140	Symbol	vec -> len		5270079						
ANR	5270141	Symbol	* vec		5270079						
ANR	5270142	Function	r_vector_clear	57:0:1465:1571							
ANR	5270143	FunctionDef	r_vector_clear (RVector * vec)		5270142	0					
ANR	5270144	CompoundStatement		57:40:1505:1571	5270142	0					
ANR	5270145	ExpressionStatement	vector_free_elems ( vec )	58:1:1508:1531	5270142	0	True				
ANR	5270146	CallExpression	vector_free_elems ( vec )		5270142	0					
ANR	5270147	Callee	vector_free_elems		5270142	0					
ANR	5270148	Identifier	vector_free_elems		5270142	0					
ANR	5270149	ArgumentList	vec		5270142	1					
ANR	5270150	Argument	vec		5270142	0					
ANR	5270151	Identifier	vec		5270142	0					
ANR	5270152	ExpressionStatement	R_FREE ( vec -> a )	59:1:1534:1549	5270142	1	True				
ANR	5270153	CallExpression	R_FREE ( vec -> a )		5270142	0					
ANR	5270154	Callee	R_FREE		5270142	0					
ANR	5270155	Identifier	R_FREE		5270142	0					
ANR	5270156	ArgumentList	vec -> a		5270142	1					
ANR	5270157	Argument	vec -> a		5270142	0					
ANR	5270158	PtrMemberAccess	vec -> a		5270142	0					
ANR	5270159	Identifier	vec		5270142	0					
ANR	5270160	Identifier	a		5270142	1					
ANR	5270161	ExpressionStatement	vec -> capacity = 0	60:1:1552:1569	5270142	2	True				
ANR	5270162	AssignmentExpression	vec -> capacity = 0		5270142	0		=			
ANR	5270163	PtrMemberAccess	vec -> capacity		5270142	0					
ANR	5270164	Identifier	vec		5270142	0					
ANR	5270165	Identifier	capacity		5270142	1					
ANR	5270166	PrimaryExpression	0		5270142	1					
ANR	5270167	ReturnType	R_API void		5270142	1					
ANR	5270168	Identifier	r_vector_clear		5270142	2					
ANR	5270169	ParameterList	RVector * vec		5270142	3					
ANR	5270170	Parameter	RVector * vec	57:26:1491:1502	5270142	0	True				
ANR	5270171	ParameterType	RVector *		5270142	0					
ANR	5270172	Identifier	vec		5270142	1					
ANR	5270173	CFGEntryNode	ENTRY		5270142		True				
ANR	5270174	CFGExitNode	EXIT		5270142		True				
ANR	5270175	Symbol	vec		5270142						
ANR	5270176	Symbol	vec -> a		5270142						
ANR	5270177	Symbol	* vec		5270142						
ANR	5270178	Symbol	vec -> capacity		5270142						
ANR	5270179	Function	r_vector_free	63:0:1574:1670							
ANR	5270180	FunctionDef	r_vector_free (RVector * vec)		5270179	0					
ANR	5270181	CompoundStatement		63:39:1613:1670	5270179	0					
ANR	5270182	ExpressionStatement	vector_free_elems ( vec )	64:1:1616:1639	5270179	0	True				
ANR	5270183	CallExpression	vector_free_elems ( vec )		5270179	0					
ANR	5270184	Callee	vector_free_elems		5270179	0					
ANR	5270185	Identifier	vector_free_elems		5270179	0					
ANR	5270186	ArgumentList	vec		5270179	1					
ANR	5270187	Argument	vec		5270179	0					
ANR	5270188	Identifier	vec		5270179	0					
ANR	5270189	ExpressionStatement	free ( vec -> a )	65:1:1642:1655	5270179	1	True				
ANR	5270190	CallExpression	free ( vec -> a )		5270179	0					
ANR	5270191	Callee	free		5270179	0					
ANR	5270192	Identifier	free		5270179	0					
ANR	5270193	ArgumentList	vec -> a		5270179	1					
ANR	5270194	Argument	vec -> a		5270179	0					
ANR	5270195	PtrMemberAccess	vec -> a		5270179	0					
ANR	5270196	Identifier	vec		5270179	0					
ANR	5270197	Identifier	a		5270179	1					
ANR	5270198	ExpressionStatement	free ( vec )	66:1:1658:1668	5270179	2	True				
ANR	5270199	CallExpression	free ( vec )		5270179	0					
ANR	5270200	Callee	free		5270179	0					
ANR	5270201	Identifier	free		5270179	0					
ANR	5270202	ArgumentList	vec		5270179	1					
ANR	5270203	Argument	vec		5270179	0					
ANR	5270204	Identifier	vec		5270179	0					
ANR	5270205	ReturnType	R_API void		5270179	1					
ANR	5270206	Identifier	r_vector_free		5270179	2					
ANR	5270207	ParameterList	RVector * vec		5270179	3					
ANR	5270208	Parameter	RVector * vec	63:25:1599:1610	5270179	0	True				
ANR	5270209	ParameterType	RVector *		5270179	0					
ANR	5270210	Identifier	vec		5270179	1					
ANR	5270211	CFGEntryNode	ENTRY		5270179		True				
ANR	5270212	CFGExitNode	EXIT		5270179		True				
ANR	5270213	Symbol	vec		5270179						
ANR	5270214	Symbol	vec -> a		5270179						
ANR	5270215	Symbol	* vec		5270179						
ANR	5270216	Function	vector_clone	69:0:1673:2080							
ANR	5270217	FunctionDef	"vector_clone (RVector * dst , RVector * src)"		5270216	0					
ANR	5270218	CompoundStatement		69:53:1726:2080	5270216	0					
ANR	5270219	ExpressionStatement	dst -> capacity = src -> capacity	70:1:1729:1758	5270216	0	True				
ANR	5270220	AssignmentExpression	dst -> capacity = src -> capacity		5270216	0		=			
ANR	5270221	PtrMemberAccess	dst -> capacity		5270216	0					
ANR	5270222	Identifier	dst		5270216	0					
ANR	5270223	Identifier	capacity		5270216	1					
ANR	5270224	PtrMemberAccess	src -> capacity		5270216	1					
ANR	5270225	Identifier	src		5270216	0					
ANR	5270226	Identifier	capacity		5270216	1					
ANR	5270227	ExpressionStatement	dst -> len = src -> len	71:1:1761:1780	5270216	1	True				
ANR	5270228	AssignmentExpression	dst -> len = src -> len		5270216	0		=			
ANR	5270229	PtrMemberAccess	dst -> len		5270216	0					
ANR	5270230	Identifier	dst		5270216	0					
ANR	5270231	Identifier	len		5270216	1					
ANR	5270232	PtrMemberAccess	src -> len		5270216	1					
ANR	5270233	Identifier	src		5270216	0					
ANR	5270234	Identifier	len		5270216	1					
ANR	5270235	ExpressionStatement	dst -> elem_size = src -> elem_size	72:1:1783:1814	5270216	2	True				
ANR	5270236	AssignmentExpression	dst -> elem_size = src -> elem_size		5270216	0		=			
ANR	5270237	PtrMemberAccess	dst -> elem_size		5270216	0					
ANR	5270238	Identifier	dst		5270216	0					
ANR	5270239	Identifier	elem_size		5270216	1					
ANR	5270240	PtrMemberAccess	src -> elem_size		5270216	1					
ANR	5270241	Identifier	src		5270216	0					
ANR	5270242	Identifier	elem_size		5270216	1					
ANR	5270243	ExpressionStatement	dst -> free = src -> free	73:1:1817:1838	5270216	3	True				
ANR	5270244	AssignmentExpression	dst -> free = src -> free		5270216	0		=			
ANR	5270245	PtrMemberAccess	dst -> free		5270216	0					
ANR	5270246	Identifier	dst		5270216	0					
ANR	5270247	Identifier	free		5270216	1					
ANR	5270248	PtrMemberAccess	src -> free		5270216	1					
ANR	5270249	Identifier	src		5270216	0					
ANR	5270250	Identifier	free		5270216	1					
ANR	5270251	ExpressionStatement	dst -> free_user = src -> free_user	74:1:1841:1872	5270216	4	True				
ANR	5270252	AssignmentExpression	dst -> free_user = src -> free_user		5270216	0		=			
ANR	5270253	PtrMemberAccess	dst -> free_user		5270216	0					
ANR	5270254	Identifier	dst		5270216	0					
ANR	5270255	Identifier	free_user		5270216	1					
ANR	5270256	PtrMemberAccess	src -> free_user		5270216	1					
ANR	5270257	Identifier	src		5270216	0					
ANR	5270258	Identifier	free_user		5270216	1					
ANR	5270259	IfStatement	if ( ! dst -> len )		5270216	5					
ANR	5270260	Condition	! dst -> len	75:5:1879:1887	5270216	0	True				
ANR	5270261	UnaryOperationExpression	! dst -> len		5270216	0					
ANR	5270262	UnaryOperator	!		5270216	0					
ANR	5270263	PtrMemberAccess	dst -> len		5270216	1					
ANR	5270264	Identifier	dst		5270216	0					
ANR	5270265	Identifier	len		5270216	1					
ANR	5270266	CompoundStatement		7:16:163:163	5270216	1					
ANR	5270267	ExpressionStatement	dst -> a = NULL	76:2:1894:1907	5270216	0	True				
ANR	5270268	AssignmentExpression	dst -> a = NULL		5270216	0		=			
ANR	5270269	PtrMemberAccess	dst -> a		5270216	0					
ANR	5270270	Identifier	dst		5270216	0					
ANR	5270271	Identifier	a		5270216	1					
ANR	5270272	Identifier	NULL		5270216	1					
ANR	5270273	ElseStatement	else		5270216	0					
ANR	5270274	CompoundStatement		9:8:190:190	5270216	0					
ANR	5270275	ExpressionStatement	dst -> a = malloc ( src -> elem_size * src -> capacity )	78:2:1921:1969	5270216	0	True				
ANR	5270276	AssignmentExpression	dst -> a = malloc ( src -> elem_size * src -> capacity )		5270216	0		=			
ANR	5270277	PtrMemberAccess	dst -> a		5270216	0					
ANR	5270278	Identifier	dst		5270216	0					
ANR	5270279	Identifier	a		5270216	1					
ANR	5270280	CallExpression	malloc ( src -> elem_size * src -> capacity )		5270216	1					
ANR	5270281	Callee	malloc		5270216	0					
ANR	5270282	Identifier	malloc		5270216	0					
ANR	5270283	ArgumentList	src -> elem_size * src -> capacity		5270216	1					
ANR	5270284	Argument	src -> elem_size * src -> capacity		5270216	0					
ANR	5270285	MultiplicativeExpression	src -> elem_size * src -> capacity		5270216	0		*			
ANR	5270286	PtrMemberAccess	src -> elem_size		5270216	0					
ANR	5270287	Identifier	src		5270216	0					
ANR	5270288	Identifier	elem_size		5270216	1					
ANR	5270289	PtrMemberAccess	src -> capacity		5270216	1					
ANR	5270290	Identifier	src		5270216	0					
ANR	5270291	Identifier	capacity		5270216	1					
ANR	5270292	IfStatement	if ( ! dst -> a )		5270216	1					
ANR	5270293	Condition	! dst -> a	79:6:1977:1983	5270216	0	True				
ANR	5270294	UnaryOperationExpression	! dst -> a		5270216	0					
ANR	5270295	UnaryOperator	!		5270216	0					
ANR	5270296	PtrMemberAccess	dst -> a		5270216	1					
ANR	5270297	Identifier	dst		5270216	0					
ANR	5270298	Identifier	a		5270216	1					
ANR	5270299	CompoundStatement		11:15:259:259	5270216	1					
ANR	5270300	ReturnStatement	return false ;	80:3:1991:2003	5270216	0	True				
ANR	5270301	Identifier	false		5270216	0					
ANR	5270302	ExpressionStatement	"memcpy ( dst -> a , src -> a , src -> elem_size * src -> len )"	82:2:2011:2061	5270216	2	True				
ANR	5270303	CallExpression	"memcpy ( dst -> a , src -> a , src -> elem_size * src -> len )"		5270216	0					
ANR	5270304	Callee	memcpy		5270216	0					
ANR	5270305	Identifier	memcpy		5270216	0					
ANR	5270306	ArgumentList	dst -> a		5270216	1					
ANR	5270307	Argument	dst -> a		5270216	0					
ANR	5270308	PtrMemberAccess	dst -> a		5270216	0					
ANR	5270309	Identifier	dst		5270216	0					
ANR	5270310	Identifier	a		5270216	1					
ANR	5270311	Argument	src -> a		5270216	1					
ANR	5270312	PtrMemberAccess	src -> a		5270216	0					
ANR	5270313	Identifier	src		5270216	0					
ANR	5270314	Identifier	a		5270216	1					
ANR	5270315	Argument	src -> elem_size * src -> len		5270216	2					
ANR	5270316	MultiplicativeExpression	src -> elem_size * src -> len		5270216	0		*			
ANR	5270317	PtrMemberAccess	src -> elem_size		5270216	0					
ANR	5270318	Identifier	src		5270216	0					
ANR	5270319	Identifier	elem_size		5270216	1					
ANR	5270320	PtrMemberAccess	src -> len		5270216	1					
ANR	5270321	Identifier	src		5270216	0					
ANR	5270322	Identifier	len		5270216	1					
ANR	5270323	ReturnStatement	return true ;	84:1:2067:2078	5270216	6	True				
ANR	5270324	Identifier	true		5270216	0					
ANR	5270325	ReturnType	static bool		5270216	1					
ANR	5270326	Identifier	vector_clone		5270216	2					
ANR	5270327	ParameterList	"RVector * dst , RVector * src"		5270216	3					
ANR	5270328	Parameter	RVector * dst	69:25:1698:1709	5270216	0	True				
ANR	5270329	ParameterType	RVector *		5270216	0					
ANR	5270330	Identifier	dst		5270216	1					
ANR	5270331	Parameter	RVector * src	69:39:1712:1723	5270216	1	True				
ANR	5270332	ParameterType	RVector *		5270216	0					
ANR	5270333	Identifier	src		5270216	1					
ANR	5270334	CFGEntryNode	ENTRY		5270216		True				
ANR	5270335	CFGExitNode	EXIT		5270216		True				
ANR	5270336	Symbol	dst -> len		5270216						
ANR	5270337	Symbol	dst -> elem_size		5270216						
ANR	5270338	Symbol	dst -> a		5270216						
ANR	5270339	Symbol	malloc		5270216						
ANR	5270340	Symbol	NULL		5270216						
ANR	5270341	Symbol	dst		5270216						
ANR	5270342	Symbol	dst -> capacity		5270216						
ANR	5270343	Symbol	src		5270216						
ANR	5270344	Symbol	false		5270216						
ANR	5270345	Symbol	dst -> free_user		5270216						
ANR	5270346	Symbol	src -> elem_size		5270216						
ANR	5270347	Symbol	* src		5270216						
ANR	5270348	Symbol	* dst		5270216						
ANR	5270349	Symbol	dst -> free		5270216						
ANR	5270350	Symbol	src -> len		5270216						
ANR	5270351	Symbol	true		5270216						
ANR	5270352	Symbol	src -> capacity		5270216						
ANR	5270353	Symbol	src -> free		5270216						
ANR	5270354	Symbol	src -> a		5270216						
ANR	5270355	Symbol	src -> free_user		5270216						
ANR	5270356	Function	r_vector_clone	87:0:2083:2271							
ANR	5270357	FunctionDef	r_vector_clone (RVector * vec)		5270356	0					
ANR	5270358	CompoundStatement		87:44:2127:2271	5270356	0					
ANR	5270359	IdentifierDeclStatement	RVector * ret = R_NEW ( RVector ) ;	88:1:2130:2160	5270356	0	True				
ANR	5270360	IdentifierDecl	* ret = R_NEW ( RVector )		5270356	0					
ANR	5270361	IdentifierDeclType	RVector *		5270356	0					
ANR	5270362	Identifier	ret		5270356	1					
ANR	5270363	AssignmentExpression	* ret = R_NEW ( RVector )		5270356	2		=			
ANR	5270364	Identifier	ret		5270356	0					
ANR	5270365	CallExpression	R_NEW ( RVector )		5270356	1					
ANR	5270366	Callee	R_NEW		5270356	0					
ANR	5270367	Identifier	R_NEW		5270356	0					
ANR	5270368	ArgumentList	RVector		5270356	1					
ANR	5270369	Argument	RVector		5270356	0					
ANR	5270370	Identifier	RVector		5270356	0					
ANR	5270371	IfStatement	if ( ! ret )		5270356	1					
ANR	5270372	Condition	! ret	89:5:2167:2170	5270356	0	True				
ANR	5270373	UnaryOperationExpression	! ret		5270356	0					
ANR	5270374	UnaryOperator	!		5270356	0					
ANR	5270375	Identifier	ret		5270356	1					
ANR	5270376	CompoundStatement		3:11:45:45	5270356	1					
ANR	5270377	ReturnStatement	return NULL ;	90:2:2177:2188	5270356	0	True				
ANR	5270378	Identifier	NULL		5270356	0					
ANR	5270379	IfStatement	"if ( ! vector_clone ( ret , vec ) )"		5270356	2					
ANR	5270380	Condition	"! vector_clone ( ret , vec )"	92:5:2198:2221	5270356	0	True				
ANR	5270381	UnaryOperationExpression	"! vector_clone ( ret , vec )"		5270356	0					
ANR	5270382	UnaryOperator	!		5270356	0					
ANR	5270383	CallExpression	"vector_clone ( ret , vec )"		5270356	1					
ANR	5270384	Callee	vector_clone		5270356	0					
ANR	5270385	Identifier	vector_clone		5270356	0					
ANR	5270386	ArgumentList	ret		5270356	1					
ANR	5270387	Argument	ret		5270356	0					
ANR	5270388	Identifier	ret		5270356	0					
ANR	5270389	Argument	vec		5270356	1					
ANR	5270390	Identifier	vec		5270356	0					
ANR	5270391	CompoundStatement		6:31:96:96	5270356	1					
ANR	5270392	ExpressionStatement	free ( ret )	93:2:2228:2238	5270356	0	True				
ANR	5270393	CallExpression	free ( ret )		5270356	0					
ANR	5270394	Callee	free		5270356	0					
ANR	5270395	Identifier	free		5270356	0					
ANR	5270396	ArgumentList	ret		5270356	1					
ANR	5270397	Argument	ret		5270356	0					
ANR	5270398	Identifier	ret		5270356	0					
ANR	5270399	ReturnStatement	return NULL ;	94:2:2242:2253	5270356	1	True				
ANR	5270400	Identifier	NULL		5270356	0					
ANR	5270401	ReturnStatement	return ret ;	96:1:2259:2269	5270356	3	True				
ANR	5270402	Identifier	ret		5270356	0					
ANR	5270403	ReturnType	R_API RVector *		5270356	1					
ANR	5270404	Identifier	r_vector_clone		5270356	2					
ANR	5270405	ParameterList	RVector * vec		5270356	3					
ANR	5270406	Parameter	RVector * vec	87:30:2113:2124	5270356	0	True				
ANR	5270407	ParameterType	RVector *		5270356	0					
ANR	5270408	Identifier	vec		5270356	1					
ANR	5270409	CFGEntryNode	ENTRY		5270356		True				
ANR	5270410	CFGExitNode	EXIT		5270356		True				
ANR	5270411	Symbol	ret		5270356						
ANR	5270412	Symbol	vector_clone		5270356						
ANR	5270413	Symbol	NULL		5270356						
ANR	5270414	Symbol	vec		5270356						
ANR	5270415	Symbol	RVector		5270356						
ANR	5270416	Symbol	R_NEW		5270356						
ANR	5270417	Function	r_vector_index_ptr	99:0:2274:2384							
ANR	5270418	FunctionDef	"r_vector_index_ptr (RVector * vec , size_t index)"		5270417	0					
ANR	5270419	CompoundStatement		99:59:2333:2384	5270417	0					
ANR	5270420	ReturnStatement	return ( char * ) vec -> a + vec -> elem_size * index ;	100:1:2336:2382	5270417	0	True				
ANR	5270421	AdditiveExpression	( char * ) vec -> a + vec -> elem_size * index		5270417	0		+			
ANR	5270422	CastExpression	( char * ) vec -> a		5270417	0					
ANR	5270423	CastTarget	char *		5270417	0					
ANR	5270424	PtrMemberAccess	vec -> a		5270417	1					
ANR	5270425	Identifier	vec		5270417	0					
ANR	5270426	Identifier	a		5270417	1					
ANR	5270427	MultiplicativeExpression	vec -> elem_size * index		5270417	1		*			
ANR	5270428	PtrMemberAccess	vec -> elem_size		5270417	0					
ANR	5270429	Identifier	vec		5270417	0					
ANR	5270430	Identifier	elem_size		5270417	1					
ANR	5270431	Identifier	index		5270417	1					
ANR	5270432	ReturnType	R_API void *		5270417	1					
ANR	5270433	Identifier	r_vector_index_ptr		5270417	2					
ANR	5270434	ParameterList	"RVector * vec , size_t index"		5270417	3					
ANR	5270435	Parameter	RVector * vec	99:31:2305:2316	5270417	0	True				
ANR	5270436	ParameterType	RVector *		5270417	0					
ANR	5270437	Identifier	vec		5270417	1					
ANR	5270438	Parameter	size_t index	99:45:2319:2330	5270417	1	True				
ANR	5270439	ParameterType	size_t		5270417	0					
ANR	5270440	Identifier	index		5270417	1					
ANR	5270441	CFGEntryNode	ENTRY		5270417		True				
ANR	5270442	CFGExitNode	EXIT		5270417		True				
ANR	5270443	Symbol	vec		5270417						
ANR	5270444	Symbol	vec -> a		5270417						
ANR	5270445	Symbol	index		5270417						
ANR	5270446	Symbol	vec -> elem_size		5270417						
ANR	5270447	Symbol	* vec		5270417						
ANR	5270448	Function	r_vector_assign	103:0:2387:2486							
ANR	5270449	FunctionDef	"r_vector_assign (RVector * vec , void * p , void * elem)"		5270448	0					
ANR	5270450	CompoundStatement		103:62:2449:2486	5270448	0					
ANR	5270451	ExpressionStatement	"memcpy ( p , elem , vec -> elem_size )"	104:1:2452:2484	5270448	0	True				
ANR	5270452	CallExpression	"memcpy ( p , elem , vec -> elem_size )"		5270448	0					
ANR	5270453	Callee	memcpy		5270448	0					
ANR	5270454	Identifier	memcpy		5270448	0					
ANR	5270455	ArgumentList	p		5270448	1					
ANR	5270456	Argument	p		5270448	0					
ANR	5270457	Identifier	p		5270448	0					
ANR	5270458	Argument	elem		5270448	1					
ANR	5270459	Identifier	elem		5270448	0					
ANR	5270460	Argument	vec -> elem_size		5270448	2					
ANR	5270461	PtrMemberAccess	vec -> elem_size		5270448	0					
ANR	5270462	Identifier	vec		5270448	0					
ANR	5270463	Identifier	elem_size		5270448	1					
ANR	5270464	ReturnType	R_API void		5270448	1					
ANR	5270465	Identifier	r_vector_assign		5270448	2					
ANR	5270466	ParameterList	"RVector * vec , void * p , void * elem"		5270448	3					
ANR	5270467	Parameter	RVector * vec	103:27:2414:2425	5270448	0	True				
ANR	5270468	ParameterType	RVector *		5270448	0					
ANR	5270469	Identifier	vec		5270448	1					
ANR	5270470	Parameter	void * p	103:41:2428:2434	5270448	1	True				
ANR	5270471	ParameterType	void *		5270448	0					
ANR	5270472	Identifier	p		5270448	1					
ANR	5270473	Parameter	void * elem	103:50:2437:2446	5270448	2	True				
ANR	5270474	ParameterType	void *		5270448	0					
ANR	5270475	Identifier	elem		5270448	1					
ANR	5270476	CFGEntryNode	ENTRY		5270448		True				
ANR	5270477	CFGExitNode	EXIT		5270448		True				
ANR	5270478	Symbol	p		5270448						
ANR	5270479	Symbol	elem		5270448						
ANR	5270480	Symbol	vec		5270448						
ANR	5270481	Symbol	vec -> elem_size		5270448						
ANR	5270482	Symbol	* vec		5270448						
ANR	5270483	Function	r_vector_assign_at	107:0:2489:2667							
ANR	5270484	FunctionDef	"r_vector_assign_at (RVector * vec , size_t index , void * elem)"		5270483	0					
ANR	5270485	CompoundStatement		107:71:2560:2667	5270483	0					
ANR	5270486	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	108:1:2563:2604	5270483	0	True				
ANR	5270487	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		5270483	0					
ANR	5270488	IdentifierDeclType	void *		5270483	0					
ANR	5270489	Identifier	p		5270483	1					
ANR	5270490	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		5270483	2		=			
ANR	5270491	Identifier	p		5270483	0					
ANR	5270492	CallExpression	"r_vector_index_ptr ( vec , index )"		5270483	1					
ANR	5270493	Callee	r_vector_index_ptr		5270483	0					
ANR	5270494	Identifier	r_vector_index_ptr		5270483	0					
ANR	5270495	ArgumentList	vec		5270483	1					
ANR	5270496	Argument	vec		5270483	0					
ANR	5270497	Identifier	vec		5270483	0					
ANR	5270498	Argument	index		5270483	1					
ANR	5270499	Identifier	index		5270483	0					
ANR	5270500	IfStatement	if ( elem )		5270483	1					
ANR	5270501	Condition	elem	109:5:2611:2614	5270483	0	True				
ANR	5270502	Identifier	elem		5270483	0					
ANR	5270503	CompoundStatement		3:11:56:56	5270483	1					
ANR	5270504	ExpressionStatement	"r_vector_assign ( vec , p , elem )"	110:2:2621:2651	5270483	0	True				
ANR	5270505	CallExpression	"r_vector_assign ( vec , p , elem )"		5270483	0					
ANR	5270506	Callee	r_vector_assign		5270483	0					
ANR	5270507	Identifier	r_vector_assign		5270483	0					
ANR	5270508	ArgumentList	vec		5270483	1					
ANR	5270509	Argument	vec		5270483	0					
ANR	5270510	Identifier	vec		5270483	0					
ANR	5270511	Argument	p		5270483	1					
ANR	5270512	Identifier	p		5270483	0					
ANR	5270513	Argument	elem		5270483	2					
ANR	5270514	Identifier	elem		5270483	0					
ANR	5270515	ReturnStatement	return p ;	112:1:2657:2665	5270483	2	True				
ANR	5270516	Identifier	p		5270483	0					
ANR	5270517	ReturnType	R_API void *		5270483	1					
ANR	5270518	Identifier	r_vector_assign_at		5270483	2					
ANR	5270519	ParameterList	"RVector * vec , size_t index , void * elem"		5270483	3					
ANR	5270520	Parameter	RVector * vec	107:31:2520:2531	5270483	0	True				
ANR	5270521	ParameterType	RVector *		5270483	0					
ANR	5270522	Identifier	vec		5270483	1					
ANR	5270523	Parameter	size_t index	107:45:2534:2545	5270483	1	True				
ANR	5270524	ParameterType	size_t		5270483	0					
ANR	5270525	Identifier	index		5270483	1					
ANR	5270526	Parameter	void * elem	107:59:2548:2557	5270483	2	True				
ANR	5270527	ParameterType	void *		5270483	0					
ANR	5270528	Identifier	elem		5270483	1					
ANR	5270529	CFGEntryNode	ENTRY		5270483		True				
ANR	5270530	CFGExitNode	EXIT		5270483		True				
ANR	5270531	Symbol	elem		5270483						
ANR	5270532	Symbol	p		5270483						
ANR	5270533	Symbol	r_vector_index_ptr		5270483						
ANR	5270534	Symbol	vec		5270483						
ANR	5270535	Symbol	index		5270483						
ANR	5270536	Function	r_vector_remove_at	115:0:2670:2957							
ANR	5270537	FunctionDef	"r_vector_remove_at (RVector * vec , size_t index , void * into)"		5270536	0					
ANR	5270538	CompoundStatement		115:70:2740:2957	5270536	0					
ANR	5270539	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	116:1:2743:2784	5270536	0	True				
ANR	5270540	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		5270536	0					
ANR	5270541	IdentifierDeclType	void *		5270536	0					
ANR	5270542	Identifier	p		5270536	1					
ANR	5270543	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		5270536	2		=			
ANR	5270544	Identifier	p		5270536	0					
ANR	5270545	CallExpression	"r_vector_index_ptr ( vec , index )"		5270536	1					
ANR	5270546	Callee	r_vector_index_ptr		5270536	0					
ANR	5270547	Identifier	r_vector_index_ptr		5270536	0					
ANR	5270548	ArgumentList	vec		5270536	1					
ANR	5270549	Argument	vec		5270536	0					
ANR	5270550	Identifier	vec		5270536	0					
ANR	5270551	Argument	index		5270536	1					
ANR	5270552	Identifier	index		5270536	0					
ANR	5270553	IfStatement	if ( into )		5270536	1					
ANR	5270554	Condition	into	117:5:2791:2794	5270536	0	True				
ANR	5270555	Identifier	into		5270536	0					
ANR	5270556	CompoundStatement		3:11:56:56	5270536	1					
ANR	5270557	ExpressionStatement	"r_vector_assign ( vec , into , p )"	118:2:2801:2831	5270536	0	True				
ANR	5270558	CallExpression	"r_vector_assign ( vec , into , p )"		5270536	0					
ANR	5270559	Callee	r_vector_assign		5270536	0					
ANR	5270560	Identifier	r_vector_assign		5270536	0					
ANR	5270561	ArgumentList	vec		5270536	1					
ANR	5270562	Argument	vec		5270536	0					
ANR	5270563	Identifier	vec		5270536	0					
ANR	5270564	Argument	into		5270536	1					
ANR	5270565	Identifier	into		5270536	0					
ANR	5270566	Argument	p		5270536	2					
ANR	5270567	Identifier	p		5270536	0					
ANR	5270568	ExpressionStatement	vec -> len --	120:1:2837:2847	5270536	2	True				
ANR	5270569	PostIncDecOperationExpression	vec -> len --		5270536	0					
ANR	5270570	PtrMemberAccess	vec -> len		5270536	0					
ANR	5270571	Identifier	vec		5270536	0					
ANR	5270572	Identifier	len		5270536	1					
ANR	5270573	IncDec	--		5270536	1					
ANR	5270574	IfStatement	if ( index < vec -> len )		5270536	3					
ANR	5270575	Condition	index < vec -> len	121:5:2854:2869	5270536	0	True				
ANR	5270576	RelationalExpression	index < vec -> len		5270536	0		<			
ANR	5270577	Identifier	index		5270536	0					
ANR	5270578	PtrMemberAccess	vec -> len		5270536	1					
ANR	5270579	Identifier	vec		5270536	0					
ANR	5270580	Identifier	len		5270536	1					
ANR	5270581	CompoundStatement		7:23:131:131	5270536	1					
ANR	5270582	ExpressionStatement	"memmove ( p , ( char * ) p + vec -> elem_size , vec -> elem_size * ( vec -> len - index ) )"	122:2:2876:2952	5270536	0	True				
ANR	5270583	CallExpression	"memmove ( p , ( char * ) p + vec -> elem_size , vec -> elem_size * ( vec -> len - index ) )"		5270536	0					
ANR	5270584	Callee	memmove		5270536	0					
ANR	5270585	Identifier	memmove		5270536	0					
ANR	5270586	ArgumentList	p		5270536	1					
ANR	5270587	Argument	p		5270536	0					
ANR	5270588	Identifier	p		5270536	0					
ANR	5270589	Argument	( char * ) p + vec -> elem_size		5270536	1					
ANR	5270590	AdditiveExpression	( char * ) p + vec -> elem_size		5270536	0		+			
ANR	5270591	CastExpression	( char * ) p		5270536	0					
ANR	5270592	CastTarget	char *		5270536	0					
ANR	5270593	Identifier	p		5270536	1					
ANR	5270594	PtrMemberAccess	vec -> elem_size		5270536	1					
ANR	5270595	Identifier	vec		5270536	0					
ANR	5270596	Identifier	elem_size		5270536	1					
ANR	5270597	Argument	vec -> elem_size * ( vec -> len - index )		5270536	2					
ANR	5270598	MultiplicativeExpression	vec -> elem_size * ( vec -> len - index )		5270536	0		*			
ANR	5270599	PtrMemberAccess	vec -> elem_size		5270536	0					
ANR	5270600	Identifier	vec		5270536	0					
ANR	5270601	Identifier	elem_size		5270536	1					
ANR	5270602	AdditiveExpression	vec -> len - index		5270536	1		-			
ANR	5270603	PtrMemberAccess	vec -> len		5270536	0					
ANR	5270604	Identifier	vec		5270536	0					
ANR	5270605	Identifier	len		5270536	1					
ANR	5270606	Identifier	index		5270536	1					
ANR	5270607	ReturnType	R_API void		5270536	1					
ANR	5270608	Identifier	r_vector_remove_at		5270536	2					
ANR	5270609	ParameterList	"RVector * vec , size_t index , void * into"		5270536	3					
ANR	5270610	Parameter	RVector * vec	115:30:2700:2711	5270536	0	True				
ANR	5270611	ParameterType	RVector *		5270536	0					
ANR	5270612	Identifier	vec		5270536	1					
ANR	5270613	Parameter	size_t index	115:44:2714:2725	5270536	1	True				
ANR	5270614	ParameterType	size_t		5270536	0					
ANR	5270615	Identifier	index		5270536	1					
ANR	5270616	Parameter	void * into	115:58:2728:2737	5270536	2	True				
ANR	5270617	ParameterType	void *		5270536	0					
ANR	5270618	Identifier	into		5270536	1					
ANR	5270619	CFGEntryNode	ENTRY		5270536		True				
ANR	5270620	CFGExitNode	EXIT		5270536		True				
ANR	5270621	Symbol	p		5270536						
ANR	5270622	Symbol	into		5270536						
ANR	5270623	Symbol	r_vector_index_ptr		5270536						
ANR	5270624	Symbol	vec		5270536						
ANR	5270625	Symbol	index		5270536						
ANR	5270626	Symbol	vec -> len		5270536						
ANR	5270627	Symbol	vec -> elem_size		5270536						
ANR	5270628	Symbol	* vec		5270536						
ANR	5270629	Function	r_vector_insert	126:0:2960:3332							
ANR	5270630	FunctionDef	"r_vector_insert (RVector * vec , size_t index , void * x)"		5270629	0					
ANR	5270631	CompoundStatement		126:65:3025:3332	5270629	0					
ANR	5270632	IfStatement	if ( vec -> len >= vec -> capacity )		5270629	0					
ANR	5270633	Condition	vec -> len >= vec -> capacity	127:5:3032:3056	5270629	0	True				
ANR	5270634	RelationalExpression	vec -> len >= vec -> capacity		5270629	0		>=			
ANR	5270635	PtrMemberAccess	vec -> len		5270629	0					
ANR	5270636	Identifier	vec		5270629	0					
ANR	5270637	Identifier	len		5270629	1					
ANR	5270638	PtrMemberAccess	vec -> capacity		5270629	1					
ANR	5270639	Identifier	vec		5270629	0					
ANR	5270640	Identifier	capacity		5270629	1					
ANR	5270641	CompoundStatement		2:32:33:33	5270629	1					
ANR	5270642	ExpressionStatement	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )	128:2:3063:3107	5270629	0	True				
ANR	5270643	CallExpression	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )		5270629	0					
ANR	5270644	Callee	RESIZE_OR_RETURN_NULL		5270629	0					
ANR	5270645	Identifier	RESIZE_OR_RETURN_NULL		5270629	0					
ANR	5270646	ArgumentList	NEXT_VECTOR_CAPACITY		5270629	1					
ANR	5270647	Argument	NEXT_VECTOR_CAPACITY		5270629	0					
ANR	5270648	Identifier	NEXT_VECTOR_CAPACITY		5270629	0					
ANR	5270649	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	130:1:3113:3154	5270629	1	True				
ANR	5270650	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		5270629	0					
ANR	5270651	IdentifierDeclType	void *		5270629	0					
ANR	5270652	Identifier	p		5270629	1					
ANR	5270653	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		5270629	2		=			
ANR	5270654	Identifier	p		5270629	0					
ANR	5270655	CallExpression	"r_vector_index_ptr ( vec , index )"		5270629	1					
ANR	5270656	Callee	r_vector_index_ptr		5270629	0					
ANR	5270657	Identifier	r_vector_index_ptr		5270629	0					
ANR	5270658	ArgumentList	vec		5270629	1					
ANR	5270659	Argument	vec		5270629	0					
ANR	5270660	Identifier	vec		5270629	0					
ANR	5270661	Argument	index		5270629	1					
ANR	5270662	Identifier	index		5270629	0					
ANR	5270663	IfStatement	if ( index < vec -> len )		5270629	2					
ANR	5270664	Condition	index < vec -> len	131:5:3161:3176	5270629	0	True				
ANR	5270665	RelationalExpression	index < vec -> len		5270629	0		<			
ANR	5270666	Identifier	index		5270629	0					
ANR	5270667	PtrMemberAccess	vec -> len		5270629	1					
ANR	5270668	Identifier	vec		5270629	0					
ANR	5270669	Identifier	len		5270629	1					
ANR	5270670	CompoundStatement		6:23:153:153	5270629	1					
ANR	5270671	ExpressionStatement	"memmove ( ( char * ) p + vec -> elem_size , p , vec -> elem_size * ( vec -> len - index ) )"	132:2:3183:3259	5270629	0	True				
ANR	5270672	CallExpression	"memmove ( ( char * ) p + vec -> elem_size , p , vec -> elem_size * ( vec -> len - index ) )"		5270629	0					
ANR	5270673	Callee	memmove		5270629	0					
ANR	5270674	Identifier	memmove		5270629	0					
ANR	5270675	ArgumentList	( char * ) p + vec -> elem_size		5270629	1					
ANR	5270676	Argument	( char * ) p + vec -> elem_size		5270629	0					
ANR	5270677	AdditiveExpression	( char * ) p + vec -> elem_size		5270629	0		+			
ANR	5270678	CastExpression	( char * ) p		5270629	0					
ANR	5270679	CastTarget	char *		5270629	0					
ANR	5270680	Identifier	p		5270629	1					
ANR	5270681	PtrMemberAccess	vec -> elem_size		5270629	1					
ANR	5270682	Identifier	vec		5270629	0					
ANR	5270683	Identifier	elem_size		5270629	1					
ANR	5270684	Argument	p		5270629	1					
ANR	5270685	Identifier	p		5270629	0					
ANR	5270686	Argument	vec -> elem_size * ( vec -> len - index )		5270629	2					
ANR	5270687	MultiplicativeExpression	vec -> elem_size * ( vec -> len - index )		5270629	0		*			
ANR	5270688	PtrMemberAccess	vec -> elem_size		5270629	0					
ANR	5270689	Identifier	vec		5270629	0					
ANR	5270690	Identifier	elem_size		5270629	1					
ANR	5270691	AdditiveExpression	vec -> len - index		5270629	1		-			
ANR	5270692	PtrMemberAccess	vec -> len		5270629	0					
ANR	5270693	Identifier	vec		5270629	0					
ANR	5270694	Identifier	len		5270629	1					
ANR	5270695	Identifier	index		5270629	1					
ANR	5270696	ExpressionStatement	vec -> len ++	134:1:3265:3275	5270629	3	True				
ANR	5270697	PostIncDecOperationExpression	vec -> len ++		5270629	0					
ANR	5270698	PtrMemberAccess	vec -> len		5270629	0					
ANR	5270699	Identifier	vec		5270629	0					
ANR	5270700	Identifier	len		5270629	1					
ANR	5270701	IncDec	++		5270629	1					
ANR	5270702	IfStatement	if ( x )		5270629	4					
ANR	5270703	Condition	x	135:5:3282:3282	5270629	0	True				
ANR	5270704	Identifier	x		5270629	0					
ANR	5270705	CompoundStatement		10:8:259:259	5270629	1					
ANR	5270706	ExpressionStatement	"r_vector_assign ( vec , p , x )"	136:2:3289:3316	5270629	0	True				
ANR	5270707	CallExpression	"r_vector_assign ( vec , p , x )"		5270629	0					
ANR	5270708	Callee	r_vector_assign		5270629	0					
ANR	5270709	Identifier	r_vector_assign		5270629	0					
ANR	5270710	ArgumentList	vec		5270629	1					
ANR	5270711	Argument	vec		5270629	0					
ANR	5270712	Identifier	vec		5270629	0					
ANR	5270713	Argument	p		5270629	1					
ANR	5270714	Identifier	p		5270629	0					
ANR	5270715	Argument	x		5270629	2					
ANR	5270716	Identifier	x		5270629	0					
ANR	5270717	ReturnStatement	return p ;	138:1:3322:3330	5270629	5	True				
ANR	5270718	Identifier	p		5270629	0					
ANR	5270719	ReturnType	R_API void *		5270629	1					
ANR	5270720	Identifier	r_vector_insert		5270629	2					
ANR	5270721	ParameterList	"RVector * vec , size_t index , void * x"		5270629	3					
ANR	5270722	Parameter	RVector * vec	126:28:2988:2999	5270629	0	True				
ANR	5270723	ParameterType	RVector *		5270629	0					
ANR	5270724	Identifier	vec		5270629	1					
ANR	5270725	Parameter	size_t index	126:42:3002:3013	5270629	1	True				
ANR	5270726	ParameterType	size_t		5270629	0					
ANR	5270727	Identifier	index		5270629	1					
ANR	5270728	Parameter	void * x	126:56:3016:3022	5270629	2	True				
ANR	5270729	ParameterType	void *		5270629	0					
ANR	5270730	Identifier	x		5270629	1					
ANR	5270731	CFGEntryNode	ENTRY		5270629		True				
ANR	5270732	CFGExitNode	EXIT		5270629		True				
ANR	5270733	Symbol	p		5270629						
ANR	5270734	Symbol	NEXT_VECTOR_CAPACITY		5270629						
ANR	5270735	Symbol	r_vector_index_ptr		5270629						
ANR	5270736	Symbol	vec		5270629						
ANR	5270737	Symbol	x		5270629						
ANR	5270738	Symbol	index		5270629						
ANR	5270739	Symbol	vec -> len		5270629						
ANR	5270740	Symbol	vec -> elem_size		5270629						
ANR	5270741	Symbol	* vec		5270629						
ANR	5270742	Symbol	vec -> capacity		5270629						
ANR	5270743	Function	r_vector_insert_range	141:0:3335:3794							
ANR	5270744	FunctionDef	"r_vector_insert_range (RVector * vec , size_t index , void * first , size_t count)"		5270743	0					
ANR	5270745	CompoundStatement		141:89:3424:3794	5270743	0					
ANR	5270746	IfStatement	if ( vec -> len + count > vec -> capacity )		5270743	0					
ANR	5270747	Condition	vec -> len + count > vec -> capacity	142:5:3431:3462	5270743	0	True				
ANR	5270748	RelationalExpression	vec -> len + count > vec -> capacity		5270743	0		>			
ANR	5270749	AdditiveExpression	vec -> len + count		5270743	0		+			
ANR	5270750	PtrMemberAccess	vec -> len		5270743	0					
ANR	5270751	Identifier	vec		5270743	0					
ANR	5270752	Identifier	len		5270743	1					
ANR	5270753	Identifier	count		5270743	1					
ANR	5270754	PtrMemberAccess	vec -> capacity		5270743	1					
ANR	5270755	Identifier	vec		5270743	0					
ANR	5270756	Identifier	capacity		5270743	1					
ANR	5270757	CompoundStatement		2:39:40:40	5270743	1					
ANR	5270758	ExpressionStatement	"RESIZE_OR_RETURN_NULL ( R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count ) )"	143:2:3469:3539	5270743	0	True				
ANR	5270759	CallExpression	"RESIZE_OR_RETURN_NULL ( R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count ) )"		5270743	0					
ANR	5270760	Callee	RESIZE_OR_RETURN_NULL		5270743	0					
ANR	5270761	Identifier	RESIZE_OR_RETURN_NULL		5270743	0					
ANR	5270762	ArgumentList	"R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count )"		5270743	1					
ANR	5270763	Argument	"R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count )"		5270743	0					
ANR	5270764	CallExpression	"R_MAX ( NEXT_VECTOR_CAPACITY , vec -> len + count )"		5270743	0					
ANR	5270765	Callee	R_MAX		5270743	0					
ANR	5270766	Identifier	R_MAX		5270743	0					
ANR	5270767	ArgumentList	NEXT_VECTOR_CAPACITY		5270743	1					
ANR	5270768	Argument	NEXT_VECTOR_CAPACITY		5270743	0					
ANR	5270769	Identifier	NEXT_VECTOR_CAPACITY		5270743	0					
ANR	5270770	Argument	vec -> len + count		5270743	1					
ANR	5270771	AdditiveExpression	vec -> len + count		5270743	0		+			
ANR	5270772	PtrMemberAccess	vec -> len		5270743	0					
ANR	5270773	Identifier	vec		5270743	0					
ANR	5270774	Identifier	len		5270743	1					
ANR	5270775	Identifier	count		5270743	1					
ANR	5270776	IdentifierDeclStatement	size_t sz = count * vec -> elem_size ;	145:1:3545:3579	5270743	1	True				
ANR	5270777	IdentifierDecl	sz = count * vec -> elem_size		5270743	0					
ANR	5270778	IdentifierDeclType	size_t		5270743	0					
ANR	5270779	Identifier	sz		5270743	1					
ANR	5270780	AssignmentExpression	sz = count * vec -> elem_size		5270743	2		=			
ANR	5270781	Identifier	sz		5270743	0					
ANR	5270782	MultiplicativeExpression	count * vec -> elem_size		5270743	1		*			
ANR	5270783	Identifier	count		5270743	0					
ANR	5270784	PtrMemberAccess	vec -> elem_size		5270743	1					
ANR	5270785	Identifier	vec		5270743	0					
ANR	5270786	Identifier	elem_size		5270743	1					
ANR	5270787	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , index ) ;"	146:1:3582:3623	5270743	2	True				
ANR	5270788	IdentifierDecl	"* p = r_vector_index_ptr ( vec , index )"		5270743	0					
ANR	5270789	IdentifierDeclType	void *		5270743	0					
ANR	5270790	Identifier	p		5270743	1					
ANR	5270791	AssignmentExpression	"* p = r_vector_index_ptr ( vec , index )"		5270743	2		=			
ANR	5270792	Identifier	p		5270743	0					
ANR	5270793	CallExpression	"r_vector_index_ptr ( vec , index )"		5270743	1					
ANR	5270794	Callee	r_vector_index_ptr		5270743	0					
ANR	5270795	Identifier	r_vector_index_ptr		5270743	0					
ANR	5270796	ArgumentList	vec		5270743	1					
ANR	5270797	Argument	vec		5270743	0					
ANR	5270798	Identifier	vec		5270743	0					
ANR	5270799	Argument	index		5270743	1					
ANR	5270800	Identifier	index		5270743	0					
ANR	5270801	IfStatement	if ( index < vec -> len )		5270743	3					
ANR	5270802	Condition	index < vec -> len	147:5:3630:3645	5270743	0	True				
ANR	5270803	RelationalExpression	index < vec -> len		5270743	0		<			
ANR	5270804	Identifier	index		5270743	0					
ANR	5270805	PtrMemberAccess	vec -> len		5270743	1					
ANR	5270806	Identifier	vec		5270743	0					
ANR	5270807	Identifier	len		5270743	1					
ANR	5270808	CompoundStatement		7:23:223:223	5270743	1					
ANR	5270809	ExpressionStatement	"memmove ( ( char * ) p + sz , p , vec -> elem_size * ( vec -> len - index ) )"	148:2:3652:3716	5270743	0	True				
ANR	5270810	CallExpression	"memmove ( ( char * ) p + sz , p , vec -> elem_size * ( vec -> len - index ) )"		5270743	0					
ANR	5270811	Callee	memmove		5270743	0					
ANR	5270812	Identifier	memmove		5270743	0					
ANR	5270813	ArgumentList	( char * ) p + sz		5270743	1					
ANR	5270814	Argument	( char * ) p + sz		5270743	0					
ANR	5270815	AdditiveExpression	( char * ) p + sz		5270743	0		+			
ANR	5270816	CastExpression	( char * ) p		5270743	0					
ANR	5270817	CastTarget	char *		5270743	0					
ANR	5270818	Identifier	p		5270743	1					
ANR	5270819	Identifier	sz		5270743	1					
ANR	5270820	Argument	p		5270743	1					
ANR	5270821	Identifier	p		5270743	0					
ANR	5270822	Argument	vec -> elem_size * ( vec -> len - index )		5270743	2					
ANR	5270823	MultiplicativeExpression	vec -> elem_size * ( vec -> len - index )		5270743	0		*			
ANR	5270824	PtrMemberAccess	vec -> elem_size		5270743	0					
ANR	5270825	Identifier	vec		5270743	0					
ANR	5270826	Identifier	elem_size		5270743	1					
ANR	5270827	AdditiveExpression	vec -> len - index		5270743	1		-			
ANR	5270828	PtrMemberAccess	vec -> len		5270743	0					
ANR	5270829	Identifier	vec		5270743	0					
ANR	5270830	Identifier	len		5270743	1					
ANR	5270831	Identifier	index		5270743	1					
ANR	5270832	ExpressionStatement	vec -> len += count	150:1:3722:3739	5270743	4	True				
ANR	5270833	AssignmentExpression	vec -> len += count		5270743	0		+=			
ANR	5270834	PtrMemberAccess	vec -> len		5270743	0					
ANR	5270835	Identifier	vec		5270743	0					
ANR	5270836	Identifier	len		5270743	1					
ANR	5270837	Identifier	count		5270743	1					
ANR	5270838	IfStatement	if ( first )		5270743	5					
ANR	5270839	Condition	first	151:5:3746:3750	5270743	0	True				
ANR	5270840	Identifier	first		5270743	0					
ANR	5270841	CompoundStatement		11:12:328:328	5270743	1					
ANR	5270842	ExpressionStatement	"memcpy ( p , first , sz )"	152:2:3757:3778	5270743	0	True				
ANR	5270843	CallExpression	"memcpy ( p , first , sz )"		5270743	0					
ANR	5270844	Callee	memcpy		5270743	0					
ANR	5270845	Identifier	memcpy		5270743	0					
ANR	5270846	ArgumentList	p		5270743	1					
ANR	5270847	Argument	p		5270743	0					
ANR	5270848	Identifier	p		5270743	0					
ANR	5270849	Argument	first		5270743	1					
ANR	5270850	Identifier	first		5270743	0					
ANR	5270851	Argument	sz		5270743	2					
ANR	5270852	Identifier	sz		5270743	0					
ANR	5270853	ReturnStatement	return p ;	154:1:3784:3792	5270743	6	True				
ANR	5270854	Identifier	p		5270743	0					
ANR	5270855	ReturnType	R_API void *		5270743	1					
ANR	5270856	Identifier	r_vector_insert_range		5270743	2					
ANR	5270857	ParameterList	"RVector * vec , size_t index , void * first , size_t count"		5270743	3					
ANR	5270858	Parameter	RVector * vec	141:34:3369:3380	5270743	0	True				
ANR	5270859	ParameterType	RVector *		5270743	0					
ANR	5270860	Identifier	vec		5270743	1					
ANR	5270861	Parameter	size_t index	141:48:3383:3394	5270743	1	True				
ANR	5270862	ParameterType	size_t		5270743	0					
ANR	5270863	Identifier	index		5270743	1					
ANR	5270864	Parameter	void * first	141:62:3397:3407	5270743	2	True				
ANR	5270865	ParameterType	void *		5270743	0					
ANR	5270866	Identifier	first		5270743	1					
ANR	5270867	Parameter	size_t count	141:75:3410:3421	5270743	3	True				
ANR	5270868	ParameterType	size_t		5270743	0					
ANR	5270869	Identifier	count		5270743	1					
ANR	5270870	CFGEntryNode	ENTRY		5270743		True				
ANR	5270871	CFGExitNode	EXIT		5270743		True				
ANR	5270872	Symbol	NEXT_VECTOR_CAPACITY		5270743						
ANR	5270873	Symbol	r_vector_index_ptr		5270743						
ANR	5270874	Symbol	sz		5270743						
ANR	5270875	Symbol	count		5270743						
ANR	5270876	Symbol	index		5270743						
ANR	5270877	Symbol	vec -> len		5270743						
ANR	5270878	Symbol	vec -> elem_size		5270743						
ANR	5270879	Symbol	p		5270743						
ANR	5270880	Symbol	vec		5270743						
ANR	5270881	Symbol	R_MAX		5270743						
ANR	5270882	Symbol	first		5270743						
ANR	5270883	Symbol	* vec		5270743						
ANR	5270884	Symbol	vec -> capacity		5270743						
ANR	5270885	Function	r_vector_pop	157:0:3797:3949							
ANR	5270886	FunctionDef	"r_vector_pop (RVector * vec , void * into)"		5270885	0					
ANR	5270887	CompoundStatement		157:50:3847:3949	5270885	0					
ANR	5270888	IfStatement	if ( into )		5270885	0					
ANR	5270889	Condition	into	158:5:3854:3857	5270885	0	True				
ANR	5270890	Identifier	into		5270885	0					
ANR	5270891	CompoundStatement		2:11:12:12	5270885	1					
ANR	5270892	ExpressionStatement	"r_vector_assign ( vec , into , r_vector_index_ptr ( vec , vec -> len - 1 ) )"	159:2:3864:3931	5270885	0	True				
ANR	5270893	CallExpression	"r_vector_assign ( vec , into , r_vector_index_ptr ( vec , vec -> len - 1 ) )"		5270885	0					
ANR	5270894	Callee	r_vector_assign		5270885	0					
ANR	5270895	Identifier	r_vector_assign		5270885	0					
ANR	5270896	ArgumentList	vec		5270885	1					
ANR	5270897	Argument	vec		5270885	0					
ANR	5270898	Identifier	vec		5270885	0					
ANR	5270899	Argument	into		5270885	1					
ANR	5270900	Identifier	into		5270885	0					
ANR	5270901	Argument	"r_vector_index_ptr ( vec , vec -> len - 1 )"		5270885	2					
ANR	5270902	CallExpression	"r_vector_index_ptr ( vec , vec -> len - 1 )"		5270885	0					
ANR	5270903	Callee	r_vector_index_ptr		5270885	0					
ANR	5270904	Identifier	r_vector_index_ptr		5270885	0					
ANR	5270905	ArgumentList	vec		5270885	1					
ANR	5270906	Argument	vec		5270885	0					
ANR	5270907	Identifier	vec		5270885	0					
ANR	5270908	Argument	vec -> len - 1		5270885	1					
ANR	5270909	AdditiveExpression	vec -> len - 1		5270885	0		-			
ANR	5270910	PtrMemberAccess	vec -> len		5270885	0					
ANR	5270911	Identifier	vec		5270885	0					
ANR	5270912	Identifier	len		5270885	1					
ANR	5270913	PrimaryExpression	1		5270885	1					
ANR	5270914	ExpressionStatement	vec -> len --	161:1:3937:3947	5270885	1	True				
ANR	5270915	PostIncDecOperationExpression	vec -> len --		5270885	0					
ANR	5270916	PtrMemberAccess	vec -> len		5270885	0					
ANR	5270917	Identifier	vec		5270885	0					
ANR	5270918	Identifier	len		5270885	1					
ANR	5270919	IncDec	--		5270885	1					
ANR	5270920	ReturnType	R_API void		5270885	1					
ANR	5270921	Identifier	r_vector_pop		5270885	2					
ANR	5270922	ParameterList	"RVector * vec , void * into"		5270885	3					
ANR	5270923	Parameter	RVector * vec	157:24:3821:3832	5270885	0	True				
ANR	5270924	ParameterType	RVector *		5270885	0					
ANR	5270925	Identifier	vec		5270885	1					
ANR	5270926	Parameter	void * into	157:38:3835:3844	5270885	1	True				
ANR	5270927	ParameterType	void *		5270885	0					
ANR	5270928	Identifier	into		5270885	1					
ANR	5270929	CFGEntryNode	ENTRY		5270885		True				
ANR	5270930	CFGExitNode	EXIT		5270885		True				
ANR	5270931	Symbol	into		5270885						
ANR	5270932	Symbol	r_vector_index_ptr		5270885						
ANR	5270933	Symbol	vec		5270885						
ANR	5270934	Symbol	vec -> len		5270885						
ANR	5270935	Symbol	* vec		5270885						
ANR	5270936	Function	r_vector_pop_front	164:0:3952:4046							
ANR	5270937	FunctionDef	"r_vector_pop_front (RVector * vec , void * into)"		5270936	0					
ANR	5270938	CompoundStatement		164:56:4008:4046	5270936	0					
ANR	5270939	ExpressionStatement	"r_vector_remove_at ( vec , 0 , into )"	165:1:4011:4044	5270936	0	True				
ANR	5270940	CallExpression	"r_vector_remove_at ( vec , 0 , into )"		5270936	0					
ANR	5270941	Callee	r_vector_remove_at		5270936	0					
ANR	5270942	Identifier	r_vector_remove_at		5270936	0					
ANR	5270943	ArgumentList	vec		5270936	1					
ANR	5270944	Argument	vec		5270936	0					
ANR	5270945	Identifier	vec		5270936	0					
ANR	5270946	Argument	0		5270936	1					
ANR	5270947	PrimaryExpression	0		5270936	0					
ANR	5270948	Argument	into		5270936	2					
ANR	5270949	Identifier	into		5270936	0					
ANR	5270950	ReturnType	R_API void		5270936	1					
ANR	5270951	Identifier	r_vector_pop_front		5270936	2					
ANR	5270952	ParameterList	"RVector * vec , void * into"		5270936	3					
ANR	5270953	Parameter	RVector * vec	164:30:3982:3993	5270936	0	True				
ANR	5270954	ParameterType	RVector *		5270936	0					
ANR	5270955	Identifier	vec		5270936	1					
ANR	5270956	Parameter	void * into	164:44:3996:4005	5270936	1	True				
ANR	5270957	ParameterType	void *		5270936	0					
ANR	5270958	Identifier	into		5270936	1					
ANR	5270959	CFGEntryNode	ENTRY		5270936		True				
ANR	5270960	CFGExitNode	EXIT		5270936		True				
ANR	5270961	Symbol	into		5270936						
ANR	5270962	Symbol	vec		5270936						
ANR	5270963	Function	r_vector_push	168:0:4049:4289							
ANR	5270964	FunctionDef	"r_vector_push (RVector * vec , void * x)"		5270963	0					
ANR	5270965	CompoundStatement		168:49:4098:4289	5270963	0					
ANR	5270966	IfStatement	if ( vec -> len >= vec -> capacity )		5270963	0					
ANR	5270967	Condition	vec -> len >= vec -> capacity	169:5:4105:4129	5270963	0	True				
ANR	5270968	RelationalExpression	vec -> len >= vec -> capacity		5270963	0		>=			
ANR	5270969	PtrMemberAccess	vec -> len		5270963	0					
ANR	5270970	Identifier	vec		5270963	0					
ANR	5270971	Identifier	len		5270963	1					
ANR	5270972	PtrMemberAccess	vec -> capacity		5270963	1					
ANR	5270973	Identifier	vec		5270963	0					
ANR	5270974	Identifier	capacity		5270963	1					
ANR	5270975	CompoundStatement		2:32:33:33	5270963	1					
ANR	5270976	ExpressionStatement	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )	170:2:4136:4180	5270963	0	True				
ANR	5270977	CallExpression	RESIZE_OR_RETURN_NULL ( NEXT_VECTOR_CAPACITY )		5270963	0					
ANR	5270978	Callee	RESIZE_OR_RETURN_NULL		5270963	0					
ANR	5270979	Identifier	RESIZE_OR_RETURN_NULL		5270963	0					
ANR	5270980	ArgumentList	NEXT_VECTOR_CAPACITY		5270963	1					
ANR	5270981	Argument	NEXT_VECTOR_CAPACITY		5270963	0					
ANR	5270982	Identifier	NEXT_VECTOR_CAPACITY		5270963	0					
ANR	5270983	IdentifierDeclStatement	"void * p = r_vector_index_ptr ( vec , vec -> len ++ ) ;"	172:1:4186:4232	5270963	1	True				
ANR	5270984	IdentifierDecl	"* p = r_vector_index_ptr ( vec , vec -> len ++ )"		5270963	0					
ANR	5270985	IdentifierDeclType	void *		5270963	0					
ANR	5270986	Identifier	p		5270963	1					
ANR	5270987	AssignmentExpression	"* p = r_vector_index_ptr ( vec , vec -> len ++ )"		5270963	2		=			
ANR	5270988	Identifier	p		5270963	0					
ANR	5270989	CallExpression	"r_vector_index_ptr ( vec , vec -> len ++ )"		5270963	1					
ANR	5270990	Callee	r_vector_index_ptr		5270963	0					
ANR	5270991	Identifier	r_vector_index_ptr		5270963	0					
ANR	5270992	ArgumentList	vec		5270963	1					
ANR	5270993	Argument	vec		5270963	0					
ANR	5270994	Identifier	vec		5270963	0					
ANR	5270995	Argument	vec -> len ++		5270963	1					
ANR	5270996	PostIncDecOperationExpression	vec -> len ++		5270963	0					
ANR	5270997	PtrMemberAccess	vec -> len		5270963	0					
ANR	5270998	Identifier	vec		5270963	0					
ANR	5270999	Identifier	len		5270963	1					
ANR	5271000	IncDec	++		5270963	1					
ANR	5271001	IfStatement	if ( x )		5270963	2					
ANR	5271002	Condition	x	173:5:4239:4239	5270963	0	True				
ANR	5271003	Identifier	x		5270963	0					
ANR	5271004	CompoundStatement		6:8:143:143	5270963	1					
ANR	5271005	ExpressionStatement	"r_vector_assign ( vec , p , x )"	174:2:4246:4273	5270963	0	True				
ANR	5271006	CallExpression	"r_vector_assign ( vec , p , x )"		5270963	0					
ANR	5271007	Callee	r_vector_assign		5270963	0					
ANR	5271008	Identifier	r_vector_assign		5270963	0					
ANR	5271009	ArgumentList	vec		5270963	1					
ANR	5271010	Argument	vec		5270963	0					
ANR	5271011	Identifier	vec		5270963	0					
ANR	5271012	Argument	p		5270963	1					
ANR	5271013	Identifier	p		5270963	0					
ANR	5271014	Argument	x		5270963	2					
ANR	5271015	Identifier	x		5270963	0					
ANR	5271016	ReturnStatement	return p ;	176:1:4279:4287	5270963	3	True				
ANR	5271017	Identifier	p		5270963	0					
ANR	5271018	ReturnType	R_API void *		5270963	1					
ANR	5271019	Identifier	r_vector_push		5270963	2					
ANR	5271020	ParameterList	"RVector * vec , void * x"		5270963	3					
ANR	5271021	Parameter	RVector * vec	168:26:4075:4086	5270963	0	True				
ANR	5271022	ParameterType	RVector *		5270963	0					
ANR	5271023	Identifier	vec		5270963	1					
ANR	5271024	Parameter	void * x	168:40:4089:4095	5270963	1	True				
ANR	5271025	ParameterType	void *		5270963	0					
ANR	5271026	Identifier	x		5270963	1					
ANR	5271027	CFGEntryNode	ENTRY		5270963		True				
ANR	5271028	CFGExitNode	EXIT		5270963		True				
ANR	5271029	Symbol	p		5270963						
ANR	5271030	Symbol	NEXT_VECTOR_CAPACITY		5270963						
ANR	5271031	Symbol	r_vector_index_ptr		5270963						
ANR	5271032	Symbol	vec		5270963						
ANR	5271033	Symbol	x		5270963						
ANR	5271034	Symbol	vec -> len		5270963						
ANR	5271035	Symbol	vec -> capacity		5270963						
ANR	5271036	Symbol	* vec		5270963						
ANR	5271037	Function	r_vector_push_front	179:0:4292:4386							
ANR	5271038	FunctionDef	"r_vector_push_front (RVector * vec , void * x)"		5271037	0					
ANR	5271039	CompoundStatement		179:55:4347:4386	5271037	0					
ANR	5271040	ReturnStatement	"return r_vector_insert ( vec , 0 , x ) ;"	180:1:4350:4384	5271037	0	True				
ANR	5271041	CallExpression	"r_vector_insert ( vec , 0 , x )"		5271037	0					
ANR	5271042	Callee	r_vector_insert		5271037	0					
ANR	5271043	Identifier	r_vector_insert		5271037	0					
ANR	5271044	ArgumentList	vec		5271037	1					
ANR	5271045	Argument	vec		5271037	0					
ANR	5271046	Identifier	vec		5271037	0					
ANR	5271047	Argument	0		5271037	1					
ANR	5271048	PrimaryExpression	0		5271037	0					
ANR	5271049	Argument	x		5271037	2					
ANR	5271050	Identifier	x		5271037	0					
ANR	5271051	ReturnType	R_API void *		5271037	1					
ANR	5271052	Identifier	r_vector_push_front		5271037	2					
ANR	5271053	ParameterList	"RVector * vec , void * x"		5271037	3					
ANR	5271054	Parameter	RVector * vec	179:32:4324:4335	5271037	0	True				
ANR	5271055	ParameterType	RVector *		5271037	0					
ANR	5271056	Identifier	vec		5271037	1					
ANR	5271057	Parameter	void * x	179:46:4338:4344	5271037	1	True				
ANR	5271058	ParameterType	void *		5271037	0					
ANR	5271059	Identifier	x		5271037	1					
ANR	5271060	CFGEntryNode	ENTRY		5271037		True				
ANR	5271061	CFGExitNode	EXIT		5271037		True				
ANR	5271062	Symbol	r_vector_insert		5271037						
ANR	5271063	Symbol	vec		5271037						
ANR	5271064	Symbol	x		5271037						
ANR	5271065	Function	r_vector_reserve	183:0:4389:4539							
ANR	5271066	FunctionDef	"r_vector_reserve (RVector * vec , size_t capacity)"		5271065	0					
ANR	5271067	CompoundStatement		183:60:4449:4539	5271065	0					
ANR	5271068	IfStatement	if ( vec -> capacity < capacity )		5271065	0					
ANR	5271069	Condition	vec -> capacity < capacity	184:5:4456:4479	5271065	0	True				
ANR	5271070	RelationalExpression	vec -> capacity < capacity		5271065	0		<			
ANR	5271071	PtrMemberAccess	vec -> capacity		5271065	0					
ANR	5271072	Identifier	vec		5271065	0					
ANR	5271073	Identifier	capacity		5271065	1					
ANR	5271074	Identifier	capacity		5271065	1					
ANR	5271075	CompoundStatement		2:31:32:32	5271065	1					
ANR	5271076	ExpressionStatement	RESIZE_OR_RETURN_NULL ( capacity )	185:2:4486:4518	5271065	0	True				
ANR	5271077	CallExpression	RESIZE_OR_RETURN_NULL ( capacity )		5271065	0					
ANR	5271078	Callee	RESIZE_OR_RETURN_NULL		5271065	0					
ANR	5271079	Identifier	RESIZE_OR_RETURN_NULL		5271065	0					
ANR	5271080	ArgumentList	capacity		5271065	1					
ANR	5271081	Argument	capacity		5271065	0					
ANR	5271082	Identifier	capacity		5271065	0					
ANR	5271083	ReturnStatement	return vec -> a ;	187:1:4524:4537	5271065	1	True				
ANR	5271084	PtrMemberAccess	vec -> a		5271065	0					
ANR	5271085	Identifier	vec		5271065	0					
ANR	5271086	Identifier	a		5271065	1					
ANR	5271087	ReturnType	R_API void *		5271065	1					
ANR	5271088	Identifier	r_vector_reserve		5271065	2					
ANR	5271089	ParameterList	"RVector * vec , size_t capacity"		5271065	3					
ANR	5271090	Parameter	RVector * vec	183:29:4418:4429	5271065	0	True				
ANR	5271091	ParameterType	RVector *		5271065	0					
ANR	5271092	Identifier	vec		5271065	1					
ANR	5271093	Parameter	size_t capacity	183:43:4432:4446	5271065	1	True				
ANR	5271094	ParameterType	size_t		5271065	0					
ANR	5271095	Identifier	capacity		5271065	1					
ANR	5271096	CFGEntryNode	ENTRY		5271065		True				
ANR	5271097	CFGExitNode	EXIT		5271065		True				
ANR	5271098	Symbol	vec		5271065						
ANR	5271099	Symbol	vec -> a		5271065						
ANR	5271100	Symbol	* vec		5271065						
ANR	5271101	Symbol	vec -> capacity		5271065						
ANR	5271102	Symbol	capacity		5271065						
ANR	5271103	Function	r_vector_shrink	190:0:4542:4674							
ANR	5271104	FunctionDef	r_vector_shrink (RVector * vec)		5271103	0					
ANR	5271105	CompoundStatement		190:42:4584:4674	5271103	0					
ANR	5271106	IfStatement	if ( vec -> len < vec -> capacity )		5271103	0					
ANR	5271107	Condition	vec -> len < vec -> capacity	191:5:4591:4614	5271103	0	True				
ANR	5271108	RelationalExpression	vec -> len < vec -> capacity		5271103	0		<			
ANR	5271109	PtrMemberAccess	vec -> len		5271103	0					
ANR	5271110	Identifier	vec		5271103	0					
ANR	5271111	Identifier	len		5271103	1					
ANR	5271112	PtrMemberAccess	vec -> capacity		5271103	1					
ANR	5271113	Identifier	vec		5271103	0					
ANR	5271114	Identifier	capacity		5271103	1					
ANR	5271115	CompoundStatement		2:31:32:32	5271103	1					
ANR	5271116	ExpressionStatement	RESIZE_OR_RETURN_NULL ( vec -> len )	192:2:4621:4653	5271103	0	True				
ANR	5271117	CallExpression	RESIZE_OR_RETURN_NULL ( vec -> len )		5271103	0					
ANR	5271118	Callee	RESIZE_OR_RETURN_NULL		5271103	0					
ANR	5271119	Identifier	RESIZE_OR_RETURN_NULL		5271103	0					
ANR	5271120	ArgumentList	vec -> len		5271103	1					
ANR	5271121	Argument	vec -> len		5271103	0					
ANR	5271122	PtrMemberAccess	vec -> len		5271103	0					
ANR	5271123	Identifier	vec		5271103	0					
ANR	5271124	Identifier	len		5271103	1					
ANR	5271125	ReturnStatement	return vec -> a ;	194:1:4659:4672	5271103	1	True				
ANR	5271126	PtrMemberAccess	vec -> a		5271103	0					
ANR	5271127	Identifier	vec		5271103	0					
ANR	5271128	Identifier	a		5271103	1					
ANR	5271129	ReturnType	R_API void *		5271103	1					
ANR	5271130	Identifier	r_vector_shrink		5271103	2					
ANR	5271131	ParameterList	RVector * vec		5271103	3					
ANR	5271132	Parameter	RVector * vec	190:28:4570:4581	5271103	0	True				
ANR	5271133	ParameterType	RVector *		5271103	0					
ANR	5271134	Identifier	vec		5271103	1					
ANR	5271135	CFGEntryNode	ENTRY		5271103		True				
ANR	5271136	CFGExitNode	EXIT		5271103		True				
ANR	5271137	Symbol	vec		5271103						
ANR	5271138	Symbol	vec -> a		5271103						
ANR	5271139	Symbol	vec -> len		5271103						
ANR	5271140	Symbol	* vec		5271103						
ANR	5271141	Symbol	vec -> capacity		5271103						
ANR	5271142	Function	pvector_free_elem	201:0:4681:4822							
ANR	5271143	FunctionDef	"pvector_free_elem (void * e , void * user)"		5271142	0					
ANR	5271144	CompoundStatement		201:51:4732:4822	5271142	0					
ANR	5271145	IdentifierDeclStatement	void * p = * ( ( void * * ) e ) ;	202:1:4735:4758	5271142	0	True				
ANR	5271146	IdentifierDecl	* p = * ( ( void * * ) e )		5271142	0					
ANR	5271147	IdentifierDeclType	void *		5271142	0					
ANR	5271148	Identifier	p		5271142	1					
ANR	5271149	AssignmentExpression	* p = * ( ( void * * ) e )		5271142	2		=			
ANR	5271150	Identifier	p		5271142	0					
ANR	5271151	UnaryOperationExpression	* ( ( void * * ) e )		5271142	1					
ANR	5271152	UnaryOperator	*		5271142	0					
ANR	5271153	CastExpression	( void * * ) e		5271142	1					
ANR	5271154	CastTarget	void * *		5271142	0					
ANR	5271155	Identifier	e		5271142	1					
ANR	5271156	IdentifierDeclStatement	RPVectorFree elem_free = ( RPVectorFree ) user ;	203:1:4761:4804	5271142	1	True				
ANR	5271157	IdentifierDecl	elem_free = ( RPVectorFree ) user		5271142	0					
ANR	5271158	IdentifierDeclType	RPVectorFree		5271142	0					
ANR	5271159	Identifier	elem_free		5271142	1					
ANR	5271160	AssignmentExpression	elem_free = ( RPVectorFree ) user		5271142	2		=			
ANR	5271161	Identifier	elem_free		5271142	0					
ANR	5271162	CastExpression	( RPVectorFree ) user		5271142	1					
ANR	5271163	CastTarget	RPVectorFree		5271142	0					
ANR	5271164	Identifier	user		5271142	1					
ANR	5271165	ExpressionStatement	elem_free ( p )	204:1:4807:4820	5271142	2	True				
ANR	5271166	CallExpression	elem_free ( p )		5271142	0					
ANR	5271167	Callee	elem_free		5271142	0					
ANR	5271168	Identifier	elem_free		5271142	0					
ANR	5271169	ArgumentList	p		5271142	1					
ANR	5271170	Argument	p		5271142	0					
ANR	5271171	Identifier	p		5271142	0					
ANR	5271172	ReturnType	static void		5271142	1					
ANR	5271173	Identifier	pvector_free_elem		5271142	2					
ANR	5271174	ParameterList	"void * e , void * user"		5271142	3					
ANR	5271175	Parameter	void * e	201:30:4711:4717	5271142	0	True				
ANR	5271176	ParameterType	void *		5271142	0					
ANR	5271177	Identifier	e		5271142	1					
ANR	5271178	Parameter	void * user	201:39:4720:4729	5271142	1	True				
ANR	5271179	ParameterType	void *		5271142	0					
ANR	5271180	Identifier	user		5271142	1					
ANR	5271181	CFGEntryNode	ENTRY		5271142		True				
ANR	5271182	CFGExitNode	EXIT		5271142		True				
ANR	5271183	Symbol	p		5271142						
ANR	5271184	Symbol	* ( ( void * * ) e )		5271142						
ANR	5271185	Symbol	elem_free		5271142						
ANR	5271186	Symbol	e		5271142						
ANR	5271187	Symbol	user		5271142						
ANR	5271188	Symbol	* e		5271142						
ANR	5271189	Function	r_pvector_init	208:0:4826:4970							
ANR	5271190	FunctionDef	"r_pvector_init (RPVector * vec , RPVectorFree free)"		5271189	0					
ANR	5271191	CompoundStatement		208:60:4886:4970	5271189	0					
ANR	5271192	ExpressionStatement	"r_vector_init ( & vec -> v , sizeof ( void * ) , free ? pvector_free_elem : NULL , free )"	209:1:4889:4968	5271189	0	True				
ANR	5271193	CallExpression	"r_vector_init ( & vec -> v , sizeof ( void * ) , free ? pvector_free_elem : NULL , free )"		5271189	0					
ANR	5271194	Callee	r_vector_init		5271189	0					
ANR	5271195	Identifier	r_vector_init		5271189	0					
ANR	5271196	ArgumentList	& vec -> v		5271189	1					
ANR	5271197	Argument	& vec -> v		5271189	0					
ANR	5271198	UnaryOperationExpression	& vec -> v		5271189	0					
ANR	5271199	UnaryOperator	&		5271189	0					
ANR	5271200	PtrMemberAccess	vec -> v		5271189	1					
ANR	5271201	Identifier	vec		5271189	0					
ANR	5271202	Identifier	v		5271189	1					
ANR	5271203	Argument	sizeof ( void * )		5271189	1					
ANR	5271204	SizeofExpression	sizeof ( void * )		5271189	0					
ANR	5271205	Sizeof	sizeof		5271189	0					
ANR	5271206	SizeofOperand	void *		5271189	1					
ANR	5271207	Argument	free ? pvector_free_elem : NULL		5271189	2					
ANR	5271208	ConditionalExpression	free ? pvector_free_elem : NULL		5271189	0					
ANR	5271209	Condition	free		5271189	0					
ANR	5271210	Identifier	free		5271189	0					
ANR	5271211	Identifier	pvector_free_elem		5271189	1					
ANR	5271212	Identifier	NULL		5271189	2					
ANR	5271213	Argument	free		5271189	3					
ANR	5271214	Identifier	free		5271189	0					
ANR	5271215	ReturnType	R_API void		5271189	1					
ANR	5271216	Identifier	r_pvector_init		5271189	2					
ANR	5271217	ParameterList	"RPVector * vec , RPVectorFree free"		5271189	3					
ANR	5271218	Parameter	RPVector * vec	208:26:4852:4864	5271189	0	True				
ANR	5271219	ParameterType	RPVector *		5271189	0					
ANR	5271220	Identifier	vec		5271189	1					
ANR	5271221	Parameter	RPVectorFree free	208:41:4867:4883	5271189	1	True				
ANR	5271222	ParameterType	RPVectorFree		5271189	0					
ANR	5271223	Identifier	free		5271189	1					
ANR	5271224	CFGEntryNode	ENTRY		5271189		True				
ANR	5271225	CFGExitNode	EXIT		5271189		True				
ANR	5271226	Symbol	& vec -> v		5271189						
ANR	5271227	Symbol	pvector_free_elem		5271189						
ANR	5271228	Symbol	NULL		5271189						
ANR	5271229	Symbol	vec		5271189						
ANR	5271230	Symbol	free		5271189						
ANR	5271231	Function	r_pvector_new	212:0:4973:5124							
ANR	5271232	FunctionDef	r_pvector_new (RPVectorFree free)		5271231	0					
ANR	5271233	CompoundStatement		212:49:5022:5124	5271231	0					
ANR	5271234	IdentifierDeclStatement	RPVector * v = R_NEW ( RPVector ) ;	213:1:5025:5055	5271231	0	True				
ANR	5271235	IdentifierDecl	* v = R_NEW ( RPVector )		5271231	0					
ANR	5271236	IdentifierDeclType	RPVector *		5271231	0					
ANR	5271237	Identifier	v		5271231	1					
ANR	5271238	AssignmentExpression	* v = R_NEW ( RPVector )		5271231	2		=			
ANR	5271239	Identifier	v		5271231	0					
ANR	5271240	CallExpression	R_NEW ( RPVector )		5271231	1					
ANR	5271241	Callee	R_NEW		5271231	0					
ANR	5271242	Identifier	R_NEW		5271231	0					
ANR	5271243	ArgumentList	RPVector		5271231	1					
ANR	5271244	Argument	RPVector		5271231	0					
ANR	5271245	Identifier	RPVector		5271231	0					
ANR	5271246	IfStatement	if ( ! v )		5271231	1					
ANR	5271247	Condition	! v	214:5:5062:5063	5271231	0	True				
ANR	5271248	UnaryOperationExpression	! v		5271231	0					
ANR	5271249	UnaryOperator	!		5271231	0					
ANR	5271250	Identifier	v		5271231	1					
ANR	5271251	CompoundStatement		3:9:43:43	5271231	1					
ANR	5271252	ReturnStatement	return NULL ;	215:2:5070:5081	5271231	0	True				
ANR	5271253	Identifier	NULL		5271231	0					
ANR	5271254	ExpressionStatement	"r_pvector_init ( v , free )"	217:1:5087:5111	5271231	2	True				
ANR	5271255	CallExpression	"r_pvector_init ( v , free )"		5271231	0					
ANR	5271256	Callee	r_pvector_init		5271231	0					
ANR	5271257	Identifier	r_pvector_init		5271231	0					
ANR	5271258	ArgumentList	v		5271231	1					
ANR	5271259	Argument	v		5271231	0					
ANR	5271260	Identifier	v		5271231	0					
ANR	5271261	Argument	free		5271231	1					
ANR	5271262	Identifier	free		5271231	0					
ANR	5271263	ReturnStatement	return v ;	218:1:5114:5122	5271231	3	True				
ANR	5271264	Identifier	v		5271231	0					
ANR	5271265	ReturnType	R_API RPVector *		5271231	1					
ANR	5271266	Identifier	r_pvector_new		5271231	2					
ANR	5271267	ParameterList	RPVectorFree free		5271231	3					
ANR	5271268	Parameter	RPVectorFree free	212:30:5003:5019	5271231	0	True				
ANR	5271269	ParameterType	RPVectorFree		5271231	0					
ANR	5271270	Identifier	free		5271231	1					
ANR	5271271	CFGEntryNode	ENTRY		5271231		True				
ANR	5271272	CFGExitNode	EXIT		5271231		True				
ANR	5271273	Symbol	RPVector		5271231						
ANR	5271274	Symbol	NULL		5271231						
ANR	5271275	Symbol	v		5271231						
ANR	5271276	Symbol	free		5271231						
ANR	5271277	Symbol	R_NEW		5271231						
ANR	5271278	Function	r_pvector_clear	221:0:5127:5198							
ANR	5271279	FunctionDef	r_pvector_clear (RPVector * vec)		5271278	0					
ANR	5271280	CompoundStatement		221:42:5169:5198	5271278	0					
ANR	5271281	ExpressionStatement	r_vector_clear ( & vec -> v )	222:1:5172:5196	5271278	0	True				
ANR	5271282	CallExpression	r_vector_clear ( & vec -> v )		5271278	0					
ANR	5271283	Callee	r_vector_clear		5271278	0					
ANR	5271284	Identifier	r_vector_clear		5271278	0					
ANR	5271285	ArgumentList	& vec -> v		5271278	1					
ANR	5271286	Argument	& vec -> v		5271278	0					
ANR	5271287	UnaryOperationExpression	& vec -> v		5271278	0					
ANR	5271288	UnaryOperator	&		5271278	0					
ANR	5271289	PtrMemberAccess	vec -> v		5271278	1					
ANR	5271290	Identifier	vec		5271278	0					
ANR	5271291	Identifier	v		5271278	1					
ANR	5271292	ReturnType	R_API void		5271278	1					
ANR	5271293	Identifier	r_pvector_clear		5271278	2					
ANR	5271294	ParameterList	RPVector * vec		5271278	3					
ANR	5271295	Parameter	RPVector * vec	221:27:5154:5166	5271278	0	True				
ANR	5271296	ParameterType	RPVector *		5271278	0					
ANR	5271297	Identifier	vec		5271278	1					
ANR	5271298	CFGEntryNode	ENTRY		5271278		True				
ANR	5271299	CFGExitNode	EXIT		5271278		True				
ANR	5271300	Symbol	& vec -> v		5271278						
ANR	5271301	Symbol	vec		5271278						
ANR	5271302	Function	r_pvector_free	225:0:5201:5310							
ANR	5271303	FunctionDef	r_pvector_free (RPVector * vec)		5271302	0					
ANR	5271304	CompoundStatement		225:41:5242:5310	5271302	0					
ANR	5271305	IfStatement	if ( ! vec )		5271302	0					
ANR	5271306	Condition	! vec	226:5:5249:5252	5271302	0	True				
ANR	5271307	UnaryOperationExpression	! vec		5271302	0					
ANR	5271308	UnaryOperator	!		5271302	0					
ANR	5271309	Identifier	vec		5271302	1					
ANR	5271310	CompoundStatement		2:11:12:12	5271302	1					
ANR	5271311	ReturnStatement	return ;	227:2:5259:5265	5271302	0	True				
ANR	5271312	ExpressionStatement	r_vector_clear ( & vec -> v )	229:1:5271:5295	5271302	1	True				
ANR	5271313	CallExpression	r_vector_clear ( & vec -> v )		5271302	0					
ANR	5271314	Callee	r_vector_clear		5271302	0					
ANR	5271315	Identifier	r_vector_clear		5271302	0					
ANR	5271316	ArgumentList	& vec -> v		5271302	1					
ANR	5271317	Argument	& vec -> v		5271302	0					
ANR	5271318	UnaryOperationExpression	& vec -> v		5271302	0					
ANR	5271319	UnaryOperator	&		5271302	0					
ANR	5271320	PtrMemberAccess	vec -> v		5271302	1					
ANR	5271321	Identifier	vec		5271302	0					
ANR	5271322	Identifier	v		5271302	1					
ANR	5271323	ExpressionStatement	free ( vec )	230:1:5298:5308	5271302	2	True				
ANR	5271324	CallExpression	free ( vec )		5271302	0					
ANR	5271325	Callee	free		5271302	0					
ANR	5271326	Identifier	free		5271302	0					
ANR	5271327	ArgumentList	vec		5271302	1					
ANR	5271328	Argument	vec		5271302	0					
ANR	5271329	Identifier	vec		5271302	0					
ANR	5271330	ReturnType	R_API void		5271302	1					
ANR	5271331	Identifier	r_pvector_free		5271302	2					
ANR	5271332	ParameterList	RPVector * vec		5271302	3					
ANR	5271333	Parameter	RPVector * vec	225:26:5227:5239	5271302	0	True				
ANR	5271334	ParameterType	RPVector *		5271302	0					
ANR	5271335	Identifier	vec		5271302	1					
ANR	5271336	CFGEntryNode	ENTRY		5271302		True				
ANR	5271337	CFGExitNode	EXIT		5271302		True				
ANR	5271338	Symbol	& vec -> v		5271302						
ANR	5271339	Symbol	vec		5271302						
ANR	5271340	Function	r_pvector_contains	233:0:5313:5511							
ANR	5271341	FunctionDef	"r_pvector_contains (RPVector * vec , void * x)"		5271340	0					
ANR	5271342	CompoundStatement		233:56:5369:5511	5271340	0					
ANR	5271343	IdentifierDeclStatement	size_t i ;	234:1:5372:5380	5271340	0	True				
ANR	5271344	IdentifierDecl	i		5271340	0					
ANR	5271345	IdentifierDeclType	size_t		5271340	0					
ANR	5271346	Identifier	i		5271340	1					
ANR	5271347	ForStatement	for ( i = 0 ; i < vec -> v . len ; i ++ )		5271340	1					
ANR	5271348	ForInit	i = 0 ;	235:6:5388:5393	5271340	0	True				
ANR	5271349	AssignmentExpression	i = 0		5271340	0		=			
ANR	5271350	Identifier	i		5271340	0					
ANR	5271351	PrimaryExpression	0		5271340	1					
ANR	5271352	Condition	i < vec -> v . len	235:13:5395:5408	5271340	1	True				
ANR	5271353	RelationalExpression	i < vec -> v . len		5271340	0		<			
ANR	5271354	Identifier	i		5271340	0					
ANR	5271355	MemberAccess	vec -> v . len		5271340	1					
ANR	5271356	PtrMemberAccess	vec -> v		5271340	0					
ANR	5271357	Identifier	vec		5271340	0					
ANR	5271358	Identifier	v		5271340	1					
ANR	5271359	Identifier	len		5271340	1					
ANR	5271360	PostIncDecOperationExpression	i ++	235:29:5411:5413	5271340	2	True				
ANR	5271361	Identifier	i		5271340	0					
ANR	5271362	IncDec	++		5271340	1					
ANR	5271363	CompoundStatement		3:34:46:46	5271340	3					
ANR	5271364	IfStatement	if ( ( ( void * * ) vec -> v . a ) [ i ] == x )		5271340	0					
ANR	5271365	Condition	( ( void * * ) vec -> v . a ) [ i ] == x	236:6:5424:5450	5271340	0	True				
ANR	5271366	EqualityExpression	( ( void * * ) vec -> v . a ) [ i ] == x		5271340	0		==			
ANR	5271367	ArrayIndexing	( ( void * * ) vec -> v . a ) [ i ]		5271340	0					
ANR	5271368	CastExpression	( void * * ) vec -> v . a		5271340	0					
ANR	5271369	CastTarget	void * *		5271340	0					
ANR	5271370	MemberAccess	vec -> v . a		5271340	1					
ANR	5271371	PtrMemberAccess	vec -> v		5271340	0					
ANR	5271372	Identifier	vec		5271340	0					
ANR	5271373	Identifier	v		5271340	1					
ANR	5271374	Identifier	a		5271340	1					
ANR	5271375	Identifier	i		5271340	1					
ANR	5271376	Identifier	x		5271340	1					
ANR	5271377	CompoundStatement		4:35:83:83	5271340	1					
ANR	5271378	ReturnStatement	return & ( ( void * * ) vec -> v . a ) [ i ] ;	237:3:5458:5488	5271340	0	True				
ANR	5271379	UnaryOperationExpression	& ( ( void * * ) vec -> v . a ) [ i ]		5271340	0					
ANR	5271380	UnaryOperator	&		5271340	0					
ANR	5271381	ArrayIndexing	( ( void * * ) vec -> v . a ) [ i ]		5271340	1					
ANR	5271382	CastExpression	( void * * ) vec -> v . a		5271340	0					
ANR	5271383	CastTarget	void * *		5271340	0					
ANR	5271384	MemberAccess	vec -> v . a		5271340	1					
ANR	5271385	PtrMemberAccess	vec -> v		5271340	0					
ANR	5271386	Identifier	vec		5271340	0					
ANR	5271387	Identifier	v		5271340	1					
ANR	5271388	Identifier	a		5271340	1					
ANR	5271389	Identifier	i		5271340	1					
ANR	5271390	ReturnStatement	return NULL ;	240:1:5498:5509	5271340	2	True				
ANR	5271391	Identifier	NULL		5271340	0					
ANR	5271392	ReturnType	R_API void * *		5271340	1					
ANR	5271393	Identifier	r_pvector_contains		5271340	2					
ANR	5271394	ParameterList	"RPVector * vec , void * x"		5271340	3					
ANR	5271395	Parameter	RPVector * vec	233:32:5345:5357	5271340	0	True				
ANR	5271396	ParameterType	RPVector *		5271340	0					
ANR	5271397	Identifier	vec		5271340	1					
ANR	5271398	Parameter	void * x	233:47:5360:5366	5271340	1	True				
ANR	5271399	ParameterType	void *		5271340	0					
ANR	5271400	Identifier	x		5271340	1					
ANR	5271401	CFGEntryNode	ENTRY		5271340		True				
ANR	5271402	CFGExitNode	EXIT		5271340		True				
ANR	5271403	Symbol	vec -> v . a		5271340						
ANR	5271404	Symbol	* i		5271340						
ANR	5271405	Symbol	NULL		5271340						
ANR	5271406	Symbol	vec		5271340						
ANR	5271407	Symbol	x		5271340						
ANR	5271408	Symbol	* * vec		5271340						
ANR	5271409	Symbol	i		5271340						
ANR	5271410	Symbol	vec -> v		5271340						
ANR	5271411	Symbol	* vec -> v		5271340						
ANR	5271412	Symbol	* vec -> v . a		5271340						
ANR	5271413	Symbol	* vec		5271340						
ANR	5271414	Symbol	vec -> v . len		5271340						
ANR	5271415	Function	r_pvector_remove_at	243:0:5514:5670							
ANR	5271416	FunctionDef	"r_pvector_remove_at (RPVector * vec , size_t index)"		5271415	0					
ANR	5271417	CompoundStatement		243:61:5575:5670	5271415	0					
ANR	5271418	IdentifierDeclStatement	"void * r = r_pvector_at ( vec , index ) ;"	244:1:5578:5613	5271415	0	True				
ANR	5271419	IdentifierDecl	"* r = r_pvector_at ( vec , index )"		5271415	0					
ANR	5271420	IdentifierDeclType	void *		5271415	0					
ANR	5271421	Identifier	r		5271415	1					
ANR	5271422	AssignmentExpression	"* r = r_pvector_at ( vec , index )"		5271415	2		=			
ANR	5271423	Identifier	r		5271415	0					
ANR	5271424	CallExpression	"r_pvector_at ( vec , index )"		5271415	1					
ANR	5271425	Callee	r_pvector_at		5271415	0					
ANR	5271426	Identifier	r_pvector_at		5271415	0					
ANR	5271427	ArgumentList	vec		5271415	1					
ANR	5271428	Argument	vec		5271415	0					
ANR	5271429	Identifier	vec		5271415	0					
ANR	5271430	Argument	index		5271415	1					
ANR	5271431	Identifier	index		5271415	0					
ANR	5271432	ExpressionStatement	"r_vector_remove_at ( & vec -> v , index , NULL )"	245:1:5616:5657	5271415	1	True				
ANR	5271433	CallExpression	"r_vector_remove_at ( & vec -> v , index , NULL )"		5271415	0					
ANR	5271434	Callee	r_vector_remove_at		5271415	0					
ANR	5271435	Identifier	r_vector_remove_at		5271415	0					
ANR	5271436	ArgumentList	& vec -> v		5271415	1					
ANR	5271437	Argument	& vec -> v		5271415	0					
ANR	5271438	UnaryOperationExpression	& vec -> v		5271415	0					
ANR	5271439	UnaryOperator	&		5271415	0					
ANR	5271440	PtrMemberAccess	vec -> v		5271415	1					
ANR	5271441	Identifier	vec		5271415	0					
ANR	5271442	Identifier	v		5271415	1					
ANR	5271443	Argument	index		5271415	1					
ANR	5271444	Identifier	index		5271415	0					
ANR	5271445	Argument	NULL		5271415	2					
ANR	5271446	Identifier	NULL		5271415	0					
ANR	5271447	ReturnStatement	return r ;	246:1:5660:5668	5271415	2	True				
ANR	5271448	Identifier	r		5271415	0					
ANR	5271449	ReturnType	R_API void *		5271415	1					
ANR	5271450	Identifier	r_pvector_remove_at		5271415	2					
ANR	5271451	ParameterList	"RPVector * vec , size_t index"		5271415	3					
ANR	5271452	Parameter	RPVector * vec	243:32:5546:5558	5271415	0	True				
ANR	5271453	ParameterType	RPVector *		5271415	0					
ANR	5271454	Identifier	vec		5271415	1					
ANR	5271455	Parameter	size_t index	243:47:5561:5572	5271415	1	True				
ANR	5271456	ParameterType	size_t		5271415	0					
ANR	5271457	Identifier	index		5271415	1					
ANR	5271458	CFGEntryNode	ENTRY		5271415		True				
ANR	5271459	CFGExitNode	EXIT		5271415		True				
ANR	5271460	Symbol	& vec -> v		5271415						
ANR	5271461	Symbol	r		5271415						
ANR	5271462	Symbol	NULL		5271415						
ANR	5271463	Symbol	vec		5271415						
ANR	5271464	Symbol	r_pvector_at		5271415						
ANR	5271465	Symbol	index		5271415						
ANR	5271466	Function	r_pvector_remove_data	249:0:5673:5884							
ANR	5271467	FunctionDef	"r_pvector_remove_data (RPVector * vec , void * x)"		5271466	0					
ANR	5271468	CompoundStatement		249:57:5730:5884	5271466	0					
ANR	5271469	IdentifierDeclStatement	"void * * el = r_pvector_contains ( vec , x ) ;"	250:1:5733:5772	5271466	0	True				
ANR	5271470	IdentifierDecl	"* * el = r_pvector_contains ( vec , x )"		5271466	0					
ANR	5271471	IdentifierDeclType	void * *		5271466	0					
ANR	5271472	Identifier	el		5271466	1					
ANR	5271473	AssignmentExpression	"* * el = r_pvector_contains ( vec , x )"		5271466	2		=			
ANR	5271474	Identifier	el		5271466	0					
ANR	5271475	CallExpression	"r_pvector_contains ( vec , x )"		5271466	1					
ANR	5271476	Callee	r_pvector_contains		5271466	0					
ANR	5271477	Identifier	r_pvector_contains		5271466	0					
ANR	5271478	ArgumentList	vec		5271466	1					
ANR	5271479	Argument	vec		5271466	0					
ANR	5271480	Identifier	vec		5271466	0					
ANR	5271481	Argument	x		5271466	1					
ANR	5271482	Identifier	x		5271466	0					
ANR	5271483	IfStatement	if ( ! el )		5271466	1					
ANR	5271484	Condition	! el	251:5:5779:5781	5271466	0	True				
ANR	5271485	UnaryOperationExpression	! el		5271466	0					
ANR	5271486	UnaryOperator	!		5271466	0					
ANR	5271487	Identifier	el		5271466	1					
ANR	5271488	CompoundStatement		3:10:53:53	5271466	1					
ANR	5271489	ReturnStatement	return ;	252:2:5788:5794	5271466	0	True				
ANR	5271490	IdentifierDeclStatement	size_t index = el - ( void * * ) vec -> v . a ;	255:1:5801:5838	5271466	2	True				
ANR	5271491	IdentifierDecl	index = el - ( void * * ) vec -> v . a		5271466	0					
ANR	5271492	IdentifierDeclType	size_t		5271466	0					
ANR	5271493	Identifier	index		5271466	1					
ANR	5271494	AssignmentExpression	index = el - ( void * * ) vec -> v . a		5271466	2		=			
ANR	5271495	Identifier	index		5271466	0					
ANR	5271496	AdditiveExpression	el - ( void * * ) vec -> v . a		5271466	1		-			
ANR	5271497	Identifier	el		5271466	0					
ANR	5271498	CastExpression	( void * * ) vec -> v . a		5271466	1					
ANR	5271499	CastTarget	void * *		5271466	0					
ANR	5271500	MemberAccess	vec -> v . a		5271466	1					
ANR	5271501	PtrMemberAccess	vec -> v		5271466	0					
ANR	5271502	Identifier	vec		5271466	0					
ANR	5271503	Identifier	v		5271466	1					
ANR	5271504	Identifier	a		5271466	1					
ANR	5271505	ExpressionStatement	"r_vector_remove_at ( & vec -> v , index , NULL )"	256:1:5841:5882	5271466	3	True				
ANR	5271506	CallExpression	"r_vector_remove_at ( & vec -> v , index , NULL )"		5271466	0					
ANR	5271507	Callee	r_vector_remove_at		5271466	0					
ANR	5271508	Identifier	r_vector_remove_at		5271466	0					
ANR	5271509	ArgumentList	& vec -> v		5271466	1					
ANR	5271510	Argument	& vec -> v		5271466	0					
ANR	5271511	UnaryOperationExpression	& vec -> v		5271466	0					
ANR	5271512	UnaryOperator	&		5271466	0					
ANR	5271513	PtrMemberAccess	vec -> v		5271466	1					
ANR	5271514	Identifier	vec		5271466	0					
ANR	5271515	Identifier	v		5271466	1					
ANR	5271516	Argument	index		5271466	1					
ANR	5271517	Identifier	index		5271466	0					
ANR	5271518	Argument	NULL		5271466	2					
ANR	5271519	Identifier	NULL		5271466	0					
ANR	5271520	ReturnType	R_API void		5271466	1					
ANR	5271521	Identifier	r_pvector_remove_data		5271466	2					
ANR	5271522	ParameterList	"RPVector * vec , void * x"		5271466	3					
ANR	5271523	Parameter	RPVector * vec	249:33:5706:5718	5271466	0	True				
ANR	5271524	ParameterType	RPVector *		5271466	0					
ANR	5271525	Identifier	vec		5271466	1					
ANR	5271526	Parameter	void * x	249:48:5721:5727	5271466	1	True				
ANR	5271527	ParameterType	void *		5271466	0					
ANR	5271528	Identifier	x		5271466	1					
ANR	5271529	CFGEntryNode	ENTRY		5271466		True				
ANR	5271530	CFGExitNode	EXIT		5271466		True				
ANR	5271531	Symbol	& vec -> v		5271466						
ANR	5271532	Symbol	vec -> v . a		5271466						
ANR	5271533	Symbol	NULL		5271466						
ANR	5271534	Symbol	vec		5271466						
ANR	5271535	Symbol	el		5271466						
ANR	5271536	Symbol	r_pvector_contains		5271466						
ANR	5271537	Symbol	x		5271466						
ANR	5271538	Symbol	index		5271466						
ANR	5271539	Symbol	vec -> v		5271466						
ANR	5271540	Symbol	* vec		5271466						
ANR	5271541	Function	r_pvector_pop	259:0:5887:6019							
ANR	5271542	FunctionDef	r_pvector_pop (RPVector * vec)		5271541	0					
ANR	5271543	CompoundStatement		259:41:5928:6019	5271541	0					
ANR	5271544	IdentifierDeclStatement	"void * r = r_pvector_at ( vec , vec -> v . len - 1 ) ;"	260:1:5931:5975	5271541	0	True				
ANR	5271545	IdentifierDecl	"* r = r_pvector_at ( vec , vec -> v . len - 1 )"		5271541	0					
ANR	5271546	IdentifierDeclType	void *		5271541	0					
ANR	5271547	Identifier	r		5271541	1					
ANR	5271548	AssignmentExpression	"* r = r_pvector_at ( vec , vec -> v . len - 1 )"		5271541	2		=			
ANR	5271549	Identifier	r		5271541	0					
ANR	5271550	CallExpression	"r_pvector_at ( vec , vec -> v . len - 1 )"		5271541	1					
ANR	5271551	Callee	r_pvector_at		5271541	0					
ANR	5271552	Identifier	r_pvector_at		5271541	0					
ANR	5271553	ArgumentList	vec		5271541	1					
ANR	5271554	Argument	vec		5271541	0					
ANR	5271555	Identifier	vec		5271541	0					
ANR	5271556	Argument	vec -> v . len - 1		5271541	1					
ANR	5271557	AdditiveExpression	vec -> v . len - 1		5271541	0		-			
ANR	5271558	MemberAccess	vec -> v . len		5271541	0					
ANR	5271559	PtrMemberAccess	vec -> v		5271541	0					
ANR	5271560	Identifier	vec		5271541	0					
ANR	5271561	Identifier	v		5271541	1					
ANR	5271562	Identifier	len		5271541	1					
ANR	5271563	PrimaryExpression	1		5271541	1					
ANR	5271564	ExpressionStatement	"r_vector_pop ( & vec -> v , NULL )"	261:1:5978:6006	5271541	1	True				
ANR	5271565	CallExpression	"r_vector_pop ( & vec -> v , NULL )"		5271541	0					
ANR	5271566	Callee	r_vector_pop		5271541	0					
ANR	5271567	Identifier	r_vector_pop		5271541	0					
ANR	5271568	ArgumentList	& vec -> v		5271541	1					
ANR	5271569	Argument	& vec -> v		5271541	0					
ANR	5271570	UnaryOperationExpression	& vec -> v		5271541	0					
ANR	5271571	UnaryOperator	&		5271541	0					
ANR	5271572	PtrMemberAccess	vec -> v		5271541	1					
ANR	5271573	Identifier	vec		5271541	0					
ANR	5271574	Identifier	v		5271541	1					
ANR	5271575	Argument	NULL		5271541	1					
ANR	5271576	Identifier	NULL		5271541	0					
ANR	5271577	ReturnStatement	return r ;	262:1:6009:6017	5271541	2	True				
ANR	5271578	Identifier	r		5271541	0					
ANR	5271579	ReturnType	R_API void *		5271541	1					
ANR	5271580	Identifier	r_pvector_pop		5271541	2					
ANR	5271581	ParameterList	RPVector * vec		5271541	3					
ANR	5271582	Parameter	RPVector * vec	259:26:5913:5925	5271541	0	True				
ANR	5271583	ParameterType	RPVector *		5271541	0					
ANR	5271584	Identifier	vec		5271541	1					
ANR	5271585	CFGEntryNode	ENTRY		5271541		True				
ANR	5271586	CFGExitNode	EXIT		5271541		True				
ANR	5271587	Symbol	& vec -> v		5271541						
ANR	5271588	Symbol	r		5271541						
ANR	5271589	Symbol	NULL		5271541						
ANR	5271590	Symbol	vec		5271541						
ANR	5271591	Symbol	r_pvector_at		5271541						
ANR	5271592	Symbol	vec -> v		5271541						
ANR	5271593	Symbol	* vec		5271541						
ANR	5271594	Symbol	vec -> v . len		5271541						
ANR	5271595	Function	r_pvector_pop_front	265:0:6022:6153							
ANR	5271596	FunctionDef	r_pvector_pop_front (RPVector * vec)		5271595	0					
ANR	5271597	CompoundStatement		265:47:6069:6153	5271595	0					
ANR	5271598	IdentifierDeclStatement	"void * r = r_pvector_at ( vec , 0 ) ;"	266:1:6072:6103	5271595	0	True				
ANR	5271599	IdentifierDecl	"* r = r_pvector_at ( vec , 0 )"		5271595	0					
ANR	5271600	IdentifierDeclType	void *		5271595	0					
ANR	5271601	Identifier	r		5271595	1					
ANR	5271602	AssignmentExpression	"* r = r_pvector_at ( vec , 0 )"		5271595	2		=			
ANR	5271603	Identifier	r		5271595	0					
ANR	5271604	CallExpression	"r_pvector_at ( vec , 0 )"		5271595	1					
ANR	5271605	Callee	r_pvector_at		5271595	0					
ANR	5271606	Identifier	r_pvector_at		5271595	0					
ANR	5271607	ArgumentList	vec		5271595	1					
ANR	5271608	Argument	vec		5271595	0					
ANR	5271609	Identifier	vec		5271595	0					
ANR	5271610	Argument	0		5271595	1					
ANR	5271611	PrimaryExpression	0		5271595	0					
ANR	5271612	ExpressionStatement	"r_vector_pop_front ( & vec -> v , NULL )"	267:1:6106:6140	5271595	1	True				
ANR	5271613	CallExpression	"r_vector_pop_front ( & vec -> v , NULL )"		5271595	0					
ANR	5271614	Callee	r_vector_pop_front		5271595	0					
ANR	5271615	Identifier	r_vector_pop_front		5271595	0					
ANR	5271616	ArgumentList	& vec -> v		5271595	1					
ANR	5271617	Argument	& vec -> v		5271595	0					
ANR	5271618	UnaryOperationExpression	& vec -> v		5271595	0					
ANR	5271619	UnaryOperator	&		5271595	0					
ANR	5271620	PtrMemberAccess	vec -> v		5271595	1					
ANR	5271621	Identifier	vec		5271595	0					
ANR	5271622	Identifier	v		5271595	1					
ANR	5271623	Argument	NULL		5271595	1					
ANR	5271624	Identifier	NULL		5271595	0					
ANR	5271625	ReturnStatement	return r ;	268:1:6143:6151	5271595	2	True				
ANR	5271626	Identifier	r		5271595	0					
ANR	5271627	ReturnType	R_API void *		5271595	1					
ANR	5271628	Identifier	r_pvector_pop_front		5271595	2					
ANR	5271629	ParameterList	RPVector * vec		5271595	3					
ANR	5271630	Parameter	RPVector * vec	265:32:6054:6066	5271595	0	True				
ANR	5271631	ParameterType	RPVector *		5271595	0					
ANR	5271632	Identifier	vec		5271595	1					
ANR	5271633	CFGEntryNode	ENTRY		5271595		True				
ANR	5271634	CFGExitNode	EXIT		5271595		True				
ANR	5271635	Symbol	& vec -> v		5271595						
ANR	5271636	Symbol	r		5271595						
ANR	5271637	Symbol	NULL		5271595						
ANR	5271638	Symbol	vec		5271595						
ANR	5271639	Symbol	r_pvector_at		5271595						
ANR	5271640	Function	quick_sort	272:0:6199:6585							
ANR	5271641	FunctionDef	"quick_sort (void * * a , size_t n , RPVectorComparator cmp)"		5271640	0					
ANR	5271642	CompoundStatement		272:67:6266:6585	5271640	0					
ANR	5271643	IfStatement	if ( n <= 1 )		5271640	0					
ANR	5271644	Condition	n <= 1	273:5:6273:6278	5271640	0	True				
ANR	5271645	RelationalExpression	n <= 1		5271640	0		<=			
ANR	5271646	Identifier	n		5271640	0					
ANR	5271647	PrimaryExpression	1		5271640	1					
ANR	5271648	CompoundStatement		2:13:14:14	5271640	1					
ANR	5271649	ReturnStatement	return ;	274:2:6285:6291	5271640	0	True				
ANR	5271650	IdentifierDeclStatement	"int i = rand ( ) % n , j = 0 ;"	276:1:6297:6322	5271640	1	True				
ANR	5271651	IdentifierDecl	i = rand ( ) % n		5271640	0					
ANR	5271652	IdentifierDeclType	int		5271640	0					
ANR	5271653	Identifier	i		5271640	1					
ANR	5271654	AssignmentExpression	i = rand ( ) % n		5271640	2		=			
ANR	5271655	Identifier	i		5271640	0					
ANR	5271656	MultiplicativeExpression	rand ( ) % n		5271640	1		%			
ANR	5271657	CallExpression	rand ( )		5271640	0					
ANR	5271658	Callee	rand		5271640	0					
ANR	5271659	Identifier	rand		5271640	0					
ANR	5271660	ArgumentList			5271640	1					
ANR	5271661	Identifier	n		5271640	1					
ANR	5271662	IdentifierDecl	j = 0		5271640	1					
ANR	5271663	IdentifierDeclType	int		5271640	0					
ANR	5271664	Identifier	j		5271640	1					
ANR	5271665	AssignmentExpression	j = 0		5271640	2		=			
ANR	5271666	Identifier	j		5271640	0					
ANR	5271667	PrimaryExpression	0		5271640	1					
ANR	5271668	IdentifierDeclStatement	"void * t , * pivot = a [ i ] ;"	277:1:6325:6347	5271640	2	True				
ANR	5271669	IdentifierDecl	* t		5271640	0					
ANR	5271670	IdentifierDeclType	void *		5271640	0					
ANR	5271671	Identifier	t		5271640	1					
ANR	5271672	IdentifierDecl	* pivot = a [ i ]		5271640	1					
ANR	5271673	IdentifierDeclType	void *		5271640	0					
ANR	5271674	Identifier	pivot		5271640	1					
ANR	5271675	AssignmentExpression	* pivot = a [ i ]		5271640	2		=			
ANR	5271676	Identifier	pivot		5271640	0					
ANR	5271677	ArrayIndexing	a [ i ]		5271640	1					
ANR	5271678	Identifier	a		5271640	0					
ANR	5271679	Identifier	i		5271640	1					
ANR	5271680	ExpressionStatement	a [ i ] = a [ n - 1 ]	278:1:6350:6365	5271640	3	True				
ANR	5271681	AssignmentExpression	a [ i ] = a [ n - 1 ]		5271640	0		=			
ANR	5271682	ArrayIndexing	a [ i ]		5271640	0					
ANR	5271683	Identifier	a		5271640	0					
ANR	5271684	Identifier	i		5271640	1					
ANR	5271685	ArrayIndexing	a [ n - 1 ]		5271640	1					
ANR	5271686	Identifier	a		5271640	0					
ANR	5271687	AdditiveExpression	n - 1		5271640	1		-			
ANR	5271688	Identifier	n		5271640	0					
ANR	5271689	PrimaryExpression	1		5271640	1					
ANR	5271690	ForStatement	for ( i = 0 ; i < n - 1 ; i ++ )		5271640	4					
ANR	5271691	ForInit	i = 0 ;	279:6:6373:6378	5271640	0	True				
ANR	5271692	AssignmentExpression	i = 0		5271640	0		=			
ANR	5271693	Identifier	i		5271640	0					
ANR	5271694	PrimaryExpression	0		5271640	1					
ANR	5271695	Condition	i < n - 1	279:13:6380:6388	5271640	1	True				
ANR	5271696	RelationalExpression	i < n - 1		5271640	0		<			
ANR	5271697	Identifier	i		5271640	0					
ANR	5271698	AdditiveExpression	n - 1		5271640	1		-			
ANR	5271699	Identifier	n		5271640	0					
ANR	5271700	PrimaryExpression	1		5271640	1					
ANR	5271701	PostIncDecOperationExpression	i ++	279:24:6391:6393	5271640	2	True				
ANR	5271702	Identifier	i		5271640	0					
ANR	5271703	IncDec	++		5271640	1					
ANR	5271704	CompoundStatement		8:29:129:129	5271640	3					
ANR	5271705	IfStatement	"if ( cmp ( a [ i ] , pivot ) < 0 )"		5271640	0					
ANR	5271706	Condition	"cmp ( a [ i ] , pivot ) < 0"	280:6:6404:6424	5271640	0	True				
ANR	5271707	RelationalExpression	"cmp ( a [ i ] , pivot ) < 0"		5271640	0		<			
ANR	5271708	CallExpression	"cmp ( a [ i ] , pivot )"		5271640	0					
ANR	5271709	Callee	cmp		5271640	0					
ANR	5271710	Identifier	cmp		5271640	0					
ANR	5271711	ArgumentList	a [ i ]		5271640	1					
ANR	5271712	Argument	a [ i ]		5271640	0					
ANR	5271713	ArrayIndexing	a [ i ]		5271640	0					
ANR	5271714	Identifier	a		5271640	0					
ANR	5271715	Identifier	i		5271640	1					
ANR	5271716	Argument	pivot		5271640	1					
ANR	5271717	Identifier	pivot		5271640	0					
ANR	5271718	PrimaryExpression	0		5271640	1					
ANR	5271719	CompoundStatement		9:29:160:160	5271640	1					
ANR	5271720	ExpressionStatement	t = a [ i ]	281:3:6432:6440	5271640	0	True				
ANR	5271721	AssignmentExpression	t = a [ i ]		5271640	0		=			
ANR	5271722	Identifier	t		5271640	0					
ANR	5271723	ArrayIndexing	a [ i ]		5271640	1					
ANR	5271724	Identifier	a		5271640	0					
ANR	5271725	Identifier	i		5271640	1					
ANR	5271726	ExpressionStatement	a [ i ] = a [ j ]	282:3:6445:6456	5271640	1	True				
ANR	5271727	AssignmentExpression	a [ i ] = a [ j ]		5271640	0		=			
ANR	5271728	ArrayIndexing	a [ i ]		5271640	0					
ANR	5271729	Identifier	a		5271640	0					
ANR	5271730	Identifier	i		5271640	1					
ANR	5271731	ArrayIndexing	a [ j ]		5271640	1					
ANR	5271732	Identifier	a		5271640	0					
ANR	5271733	Identifier	j		5271640	1					
ANR	5271734	ExpressionStatement	a [ j ] = t	283:3:6461:6469	5271640	2	True				
ANR	5271735	AssignmentExpression	a [ j ] = t		5271640	0		=			
ANR	5271736	ArrayIndexing	a [ j ]		5271640	0					
ANR	5271737	Identifier	a		5271640	0					
ANR	5271738	Identifier	j		5271640	1					
ANR	5271739	Identifier	t		5271640	1					
ANR	5271740	ExpressionStatement	j ++	284:3:6474:6477	5271640	3	True				
ANR	5271741	PostIncDecOperationExpression	j ++		5271640	0					
ANR	5271742	Identifier	j		5271640	0					
ANR	5271743	IncDec	++		5271640	1					
ANR	5271744	ExpressionStatement	a [ n - 1 ] = a [ j ]	287:1:6487:6502	5271640	5	True				
ANR	5271745	AssignmentExpression	a [ n - 1 ] = a [ j ]		5271640	0		=			
ANR	5271746	ArrayIndexing	a [ n - 1 ]		5271640	0					
ANR	5271747	Identifier	a		5271640	0					
ANR	5271748	AdditiveExpression	n - 1		5271640	1		-			
ANR	5271749	Identifier	n		5271640	0					
ANR	5271750	PrimaryExpression	1		5271640	1					
ANR	5271751	ArrayIndexing	a [ j ]		5271640	1					
ANR	5271752	Identifier	a		5271640	0					
ANR	5271753	Identifier	j		5271640	1					
ANR	5271754	ExpressionStatement	a [ j ] = pivot	288:1:6505:6517	5271640	6	True				
ANR	5271755	AssignmentExpression	a [ j ] = pivot		5271640	0		=			
ANR	5271756	ArrayIndexing	a [ j ]		5271640	0					
ANR	5271757	Identifier	a		5271640	0					
ANR	5271758	Identifier	j		5271640	1					
ANR	5271759	Identifier	pivot		5271640	1					
ANR	5271760	ExpressionStatement	"quick_sort ( a , j , cmp )"	289:1:6520:6542	5271640	7	True				
ANR	5271761	CallExpression	"quick_sort ( a , j , cmp )"		5271640	0					
ANR	5271762	Callee	quick_sort		5271640	0					
ANR	5271763	Identifier	quick_sort		5271640	0					
ANR	5271764	ArgumentList	a		5271640	1					
ANR	5271765	Argument	a		5271640	0					
ANR	5271766	Identifier	a		5271640	0					
ANR	5271767	Argument	j		5271640	1					
ANR	5271768	Identifier	j		5271640	0					
ANR	5271769	Argument	cmp		5271640	2					
ANR	5271770	Identifier	cmp		5271640	0					
ANR	5271771	ExpressionStatement	"quick_sort ( a + j + 1 , n - j - 1 , cmp )"	290:1:6545:6583	5271640	8	True				
ANR	5271772	CallExpression	"quick_sort ( a + j + 1 , n - j - 1 , cmp )"		5271640	0					
ANR	5271773	Callee	quick_sort		5271640	0					
ANR	5271774	Identifier	quick_sort		5271640	0					
ANR	5271775	ArgumentList	a + j + 1		5271640	1					
ANR	5271776	Argument	a + j + 1		5271640	0					
ANR	5271777	AdditiveExpression	a + j + 1		5271640	0		+			
ANR	5271778	Identifier	a		5271640	0					
ANR	5271779	AdditiveExpression	j + 1		5271640	1		+			
ANR	5271780	Identifier	j		5271640	0					
ANR	5271781	PrimaryExpression	1		5271640	1					
ANR	5271782	Argument	n - j - 1		5271640	1					
ANR	5271783	AdditiveExpression	n - j - 1		5271640	0		-			
ANR	5271784	Identifier	n		5271640	0					
ANR	5271785	AdditiveExpression	j - 1		5271640	1		-			
ANR	5271786	Identifier	j		5271640	0					
ANR	5271787	PrimaryExpression	1		5271640	1					
ANR	5271788	Argument	cmp		5271640	2					
ANR	5271789	Identifier	cmp		5271640	0					
ANR	5271790	ReturnType	static void		5271640	1					
ANR	5271791	Identifier	quick_sort		5271640	2					
ANR	5271792	ParameterList	"void * * a , size_t n , RPVectorComparator cmp"		5271640	3					
ANR	5271793	Parameter	void * * a	272:23:6222:6229	5271640	0	True				
ANR	5271794	ParameterType	void * *		5271640	0					
ANR	5271795	Identifier	a		5271640	1					
ANR	5271796	Parameter	size_t n	272:33:6232:6239	5271640	1	True				
ANR	5271797	ParameterType	size_t		5271640	0					
ANR	5271798	Identifier	n		5271640	1					
ANR	5271799	Parameter	RPVectorComparator cmp	272:43:6242:6263	5271640	2	True				
ANR	5271800	ParameterType	RPVectorComparator		5271640	0					
ANR	5271801	Identifier	cmp		5271640	1					
ANR	5271802	CFGEntryNode	ENTRY		5271640		True				
ANR	5271803	CFGExitNode	EXIT		5271640		True				
ANR	5271804	Symbol	rand		5271640						
ANR	5271805	Symbol	a		5271640						
ANR	5271806	Symbol	* i		5271640						
ANR	5271807	Symbol	t		5271640						
ANR	5271808	Symbol	* j		5271640						
ANR	5271809	Symbol	cmp		5271640						
ANR	5271810	Symbol	* n		5271640						
ANR	5271811	Symbol	i		5271640						
ANR	5271812	Symbol	pivot		5271640						
ANR	5271813	Symbol	j		5271640						
ANR	5271814	Symbol	* a		5271640						
ANR	5271815	Symbol	n		5271640						
ANR	5271816	Function	r_pvector_sort	293:0:6588:6696							
ANR	5271817	FunctionDef	"r_pvector_sort (RPVector * vec , RPVectorComparator cmp)"		5271816	0					
ANR	5271818	CompoundStatement		293:65:6653:6696	5271816	0					
ANR	5271819	ExpressionStatement	"quick_sort ( vec -> v . a , vec -> v . len , cmp )"	294:1:6656:6694	5271816	0	True				
ANR	5271820	CallExpression	"quick_sort ( vec -> v . a , vec -> v . len , cmp )"		5271816	0					
ANR	5271821	Callee	quick_sort		5271816	0					
ANR	5271822	Identifier	quick_sort		5271816	0					
ANR	5271823	ArgumentList	vec -> v . a		5271816	1					
ANR	5271824	Argument	vec -> v . a		5271816	0					
ANR	5271825	MemberAccess	vec -> v . a		5271816	0					
ANR	5271826	PtrMemberAccess	vec -> v		5271816	0					
ANR	5271827	Identifier	vec		5271816	0					
ANR	5271828	Identifier	v		5271816	1					
ANR	5271829	Identifier	a		5271816	1					
ANR	5271830	Argument	vec -> v . len		5271816	1					
ANR	5271831	MemberAccess	vec -> v . len		5271816	0					
ANR	5271832	PtrMemberAccess	vec -> v		5271816	0					
ANR	5271833	Identifier	vec		5271816	0					
ANR	5271834	Identifier	v		5271816	1					
ANR	5271835	Identifier	len		5271816	1					
ANR	5271836	Argument	cmp		5271816	2					
ANR	5271837	Identifier	cmp		5271816	0					
ANR	5271838	ReturnType	R_API void		5271816	1					
ANR	5271839	Identifier	r_pvector_sort		5271816	2					
ANR	5271840	ParameterList	"RPVector * vec , RPVectorComparator cmp"		5271816	3					
ANR	5271841	Parameter	RPVector * vec	293:26:6614:6626	5271816	0	True				
ANR	5271842	ParameterType	RPVector *		5271816	0					
ANR	5271843	Identifier	vec		5271816	1					
ANR	5271844	Parameter	RPVectorComparator cmp	293:41:6629:6650	5271816	1	True				
ANR	5271845	ParameterType	RPVectorComparator		5271816	0					
ANR	5271846	Identifier	cmp		5271816	1					
ANR	5271847	CFGEntryNode	ENTRY		5271816		True				
ANR	5271848	CFGExitNode	EXIT		5271816		True				
ANR	5271849	Symbol	vec -> v . a		5271816						
ANR	5271850	Symbol	vec		5271816						
ANR	5271851	Symbol	cmp		5271816						
ANR	5271852	Symbol	vec -> v		5271816						
ANR	5271853	Symbol	* vec		5271816						
ANR	5271854	Symbol	vec -> v . len		5271816						
