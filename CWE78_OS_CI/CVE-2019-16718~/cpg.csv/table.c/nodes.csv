command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6283834	File	data/converged/CVE-2019-16718~_radare2/table.c								
ANR	6283835	DeclStmt									
ANR	6283836	Decl							bool	bool	Ginc
ANR	6283837	DeclStmt									
ANR	6283838	Decl							int	int	Gnth
ANR	6283839	DeclStmt									
ANR	6283840	Decl							RListComparator	RListComparator	Gcmp
ANR	6283841	Function	sortString	10:0:233:310							
ANR	6283842	FunctionDef	"sortString (const void * a , const void * b)"		6283841	0					
ANR	6283843	CompoundStatement		10:52:285:310	6283841	0					
ANR	6283844	ReturnStatement	"return strcmp ( a , b ) ;"	11:1:288:308	6283841	0	True				
ANR	6283845	CallExpression	"strcmp ( a , b )"		6283841	0					
ANR	6283846	Callee	strcmp		6283841	0					
ANR	6283847	Identifier	strcmp		6283841	0					
ANR	6283848	ArgumentList	a		6283841	1					
ANR	6283849	Argument	a		6283841	0					
ANR	6283850	Identifier	a		6283841	0					
ANR	6283851	Argument	b		6283841	1					
ANR	6283852	Identifier	b		6283841	0					
ANR	6283853	ReturnType	static int		6283841	1					
ANR	6283854	Identifier	sortString		6283841	2					
ANR	6283855	ParameterList	"const void * a , const void * b"		6283841	3					
ANR	6283856	Parameter	const void * a	10:22:255:267	6283841	0	True				
ANR	6283857	ParameterType	const void *		6283841	0					
ANR	6283858	Identifier	a		6283841	1					
ANR	6283859	Parameter	const void * b	10:37:270:282	6283841	1	True				
ANR	6283860	ParameterType	const void *		6283841	0					
ANR	6283861	Identifier	b		6283841	1					
ANR	6283862	CFGEntryNode	ENTRY		6283841		True				
ANR	6283863	CFGExitNode	EXIT		6283841		True				
ANR	6283864	Symbol	strcmp		6283841						
ANR	6283865	Symbol	a		6283841						
ANR	6283866	Symbol	b		6283841						
ANR	6283867	Function	sortNumber	14:0:313:418							
ANR	6283868	FunctionDef	"sortNumber (const void * a , const void * b)"		6283867	0					
ANR	6283869	CompoundStatement		14:52:365:418	6283867	0					
ANR	6283870	ReturnStatement	"return r_num_get ( NULL , a ) - r_num_get ( NULL , b ) ;"	15:1:368:416	6283867	0	True				
ANR	6283871	AdditiveExpression	"r_num_get ( NULL , a ) - r_num_get ( NULL , b )"		6283867	0		-			
ANR	6283872	CallExpression	"r_num_get ( NULL , a )"		6283867	0					
ANR	6283873	Callee	r_num_get		6283867	0					
ANR	6283874	Identifier	r_num_get		6283867	0					
ANR	6283875	ArgumentList	NULL		6283867	1					
ANR	6283876	Argument	NULL		6283867	0					
ANR	6283877	Identifier	NULL		6283867	0					
ANR	6283878	Argument	a		6283867	1					
ANR	6283879	Identifier	a		6283867	0					
ANR	6283880	CallExpression	"r_num_get ( NULL , b )"		6283867	1					
ANR	6283881	Callee	r_num_get		6283867	0					
ANR	6283882	Identifier	r_num_get		6283867	0					
ANR	6283883	ArgumentList	NULL		6283867	1					
ANR	6283884	Argument	NULL		6283867	0					
ANR	6283885	Identifier	NULL		6283867	0					
ANR	6283886	Argument	b		6283867	1					
ANR	6283887	Identifier	b		6283867	0					
ANR	6283888	ReturnType	static int		6283867	1					
ANR	6283889	Identifier	sortNumber		6283867	2					
ANR	6283890	ParameterList	"const void * a , const void * b"		6283867	3					
ANR	6283891	Parameter	const void * a	14:22:335:347	6283867	0	True				
ANR	6283892	ParameterType	const void *		6283867	0					
ANR	6283893	Identifier	a		6283867	1					
ANR	6283894	Parameter	const void * b	14:37:350:362	6283867	1	True				
ANR	6283895	ParameterType	const void *		6283867	0					
ANR	6283896	Identifier	b		6283867	1					
ANR	6283897	CFGEntryNode	ENTRY		6283867		True				
ANR	6283898	CFGExitNode	EXIT		6283867		True				
ANR	6283899	Symbol	a		6283867						
ANR	6283900	Symbol	b		6283867						
ANR	6283901	Symbol	NULL		6283867						
ANR	6283902	Symbol	r_num_get		6283867						
ANR	6283903	DeclStmt									
ANR	6283904	Decl							RTableColumnType	RTableColumnType	r_table_type_string
ANR	6283905	DeclStmt									
ANR	6283906	Decl							RTableColumnType	RTableColumnType	r_table_type_number
ANR	6283907	Function	r_table_type	22:0:638:844							
ANR	6283908	FunctionDef	r_table_type (const char * name)		6283907	0					
ANR	6283909	CompoundStatement		22:56:694:844	6283907	0					
ANR	6283910	IfStatement	"if ( ! strcmp ( name , ""string"" ) )"		6283907	0					
ANR	6283911	Condition	"! strcmp ( name , ""string"" )"	23:5:701:724	6283907	0	True				
ANR	6283912	UnaryOperationExpression	"! strcmp ( name , ""string"" )"		6283907	0					
ANR	6283913	UnaryOperator	!		6283907	0					
ANR	6283914	CallExpression	"strcmp ( name , ""string"" )"		6283907	1					
ANR	6283915	Callee	strcmp		6283907	0					
ANR	6283916	Identifier	strcmp		6283907	0					
ANR	6283917	ArgumentList	name		6283907	1					
ANR	6283918	Argument	name		6283907	0					
ANR	6283919	Identifier	name		6283907	0					
ANR	6283920	Argument	"""string"""		6283907	1					
ANR	6283921	PrimaryExpression	"""string"""		6283907	0					
ANR	6283922	CompoundStatement		2:31:32:32	6283907	1					
ANR	6283923	ReturnStatement	return & r_table_type_string ;	24:2:731:758	6283907	0	True				
ANR	6283924	UnaryOperationExpression	& r_table_type_string		6283907	0					
ANR	6283925	UnaryOperator	&		6283907	0					
ANR	6283926	Identifier	r_table_type_string		6283907	1					
ANR	6283927	IfStatement	"if ( ! strcmp ( name , ""number"" ) )"		6283907	1					
ANR	6283928	Condition	"! strcmp ( name , ""number"" )"	26:5:768:791	6283907	0	True				
ANR	6283929	UnaryOperationExpression	"! strcmp ( name , ""number"" )"		6283907	0					
ANR	6283930	UnaryOperator	!		6283907	0					
ANR	6283931	CallExpression	"strcmp ( name , ""number"" )"		6283907	1					
ANR	6283932	Callee	strcmp		6283907	0					
ANR	6283933	Identifier	strcmp		6283907	0					
ANR	6283934	ArgumentList	name		6283907	1					
ANR	6283935	Argument	name		6283907	0					
ANR	6283936	Identifier	name		6283907	0					
ANR	6283937	Argument	"""number"""		6283907	1					
ANR	6283938	PrimaryExpression	"""number"""		6283907	0					
ANR	6283939	CompoundStatement		5:31:99:99	6283907	1					
ANR	6283940	ReturnStatement	return & r_table_type_number ;	27:2:798:825	6283907	0	True				
ANR	6283941	UnaryOperationExpression	& r_table_type_number		6283907	0					
ANR	6283942	UnaryOperator	&		6283907	0					
ANR	6283943	Identifier	r_table_type_number		6283907	1					
ANR	6283944	ReturnStatement	return NULL ;	29:1:831:842	6283907	2	True				
ANR	6283945	Identifier	NULL		6283907	0					
ANR	6283946	ReturnType	R_API RTableColumnType *		6283907	1					
ANR	6283947	Identifier	r_table_type		6283907	2					
ANR	6283948	ParameterList	const char * name		6283907	3					
ANR	6283949	Parameter	const char * name	22:38:676:691	6283907	0	True				
ANR	6283950	ParameterType	const char *		6283907	0					
ANR	6283951	Identifier	name		6283907	1					
ANR	6283952	CFGEntryNode	ENTRY		6283907		True				
ANR	6283953	CFGExitNode	EXIT		6283907		True				
ANR	6283954	Symbol	strcmp		6283907						
ANR	6283955	Symbol	& r_table_type_number		6283907						
ANR	6283956	Symbol	NULL		6283907						
ANR	6283957	Symbol	name		6283907						
ANR	6283958	Symbol	& r_table_type_string		6283907						
ANR	6283959	Function	__table_adjust	34:0:908:1431							
ANR	6283960	FunctionDef	__table_adjust (RTable * t)		6283959	0					
ANR	6283961	CompoundStatement		34:38:946:1431	6283959	0					
ANR	6283962	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	35:1:949:972	6283959	0	True				
ANR	6283963	IdentifierDecl	* iter		6283959	0					
ANR	6283964	IdentifierDeclType	RListIter *		6283959	0					
ANR	6283965	Identifier	iter		6283959	1					
ANR	6283966	IdentifierDecl	* iter2		6283959	1					
ANR	6283967	IdentifierDeclType	RListIter *		6283959	0					
ANR	6283968	Identifier	iter2		6283959	1					
ANR	6283969	IdentifierDeclStatement	RTableColumn * col ;	36:1:975:992	6283959	1	True				
ANR	6283970	IdentifierDecl	* col		6283959	0					
ANR	6283971	IdentifierDeclType	RTableColumn *		6283959	0					
ANR	6283972	Identifier	col		6283959	1					
ANR	6283973	IdentifierDeclStatement	RTableRow * row ;	37:1:995:1010	6283959	2	True				
ANR	6283974	IdentifierDecl	* row		6283959	0					
ANR	6283975	IdentifierDeclType	RTableRow *		6283959	0					
ANR	6283976	Identifier	row		6283959	1					
ANR	6283977	Statement	r_list_foreach	38:1:1013:1026	6283959	3	True				
ANR	6283978	Statement	(	38:16:1028:1028	6283959	4	True				
ANR	6283979	Statement	t	38:17:1029:1029	6283959	5	True				
ANR	6283980	Statement	->	38:18:1030:1031	6283959	6	True				
ANR	6283981	Statement	cols	38:20:1032:1035	6283959	7	True				
ANR	6283982	Statement	","	38:24:1036:1036	6283959	8	True				
ANR	6283983	Statement	iter	38:26:1038:1041	6283959	9	True				
ANR	6283984	Statement	","	38:30:1042:1042	6283959	10	True				
ANR	6283985	Statement	col	38:32:1044:1046	6283959	11	True				
ANR	6283986	Statement	)	38:35:1047:1047	6283959	12	True				
ANR	6283987	CompoundStatement		6:2:106:153	6283959	13					
ANR	6283988	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( col -> name ) + 1 ;	39:2:1053:1100	6283959	0	True				
ANR	6283989	IdentifierDecl	itemLength = r_str_len_utf8 ( col -> name ) + 1		6283959	0					
ANR	6283990	IdentifierDeclType	int		6283959	0					
ANR	6283991	Identifier	itemLength		6283959	1					
ANR	6283992	AssignmentExpression	itemLength = r_str_len_utf8 ( col -> name ) + 1		6283959	2		=			
ANR	6283993	Identifier	itemLength		6283959	0					
ANR	6283994	AdditiveExpression	r_str_len_utf8 ( col -> name ) + 1		6283959	1		+			
ANR	6283995	CallExpression	r_str_len_utf8 ( col -> name )		6283959	0					
ANR	6283996	Callee	r_str_len_utf8		6283959	0					
ANR	6283997	Identifier	r_str_len_utf8		6283959	0					
ANR	6283998	ArgumentList	col -> name		6283959	1					
ANR	6283999	Argument	col -> name		6283959	0					
ANR	6284000	PtrMemberAccess	col -> name		6283959	0					
ANR	6284001	Identifier	col		6283959	0					
ANR	6284002	Identifier	name		6283959	1					
ANR	6284003	PrimaryExpression	1		6283959	1					
ANR	6284004	ExpressionStatement	col -> width = itemLength	40:2:1104:1127	6283959	1	True				
ANR	6284005	AssignmentExpression	col -> width = itemLength		6283959	0		=			
ANR	6284006	PtrMemberAccess	col -> width		6283959	0					
ANR	6284007	Identifier	col		6283959	0					
ANR	6284008	Identifier	width		6283959	1					
ANR	6284009	Identifier	itemLength		6283959	1					
ANR	6284010	Statement	r_list_foreach	42:1:1133:1146	6283959	14	True				
ANR	6284011	Statement	(	42:16:1148:1148	6283959	15	True				
ANR	6284012	Statement	t	42:17:1149:1149	6283959	16	True				
ANR	6284013	Statement	->	42:18:1150:1151	6283959	17	True				
ANR	6284014	Statement	rows	42:20:1152:1155	6283959	18	True				
ANR	6284015	Statement	","	42:24:1156:1156	6283959	19	True				
ANR	6284016	Statement	iter	42:26:1158:1161	6283959	20	True				
ANR	6284017	Statement	","	42:30:1162:1162	6283959	21	True				
ANR	6284018	Statement	row	42:32:1164:1166	6283959	22	True				
ANR	6284019	Statement	)	42:35:1167:1167	6283959	23	True				
ANR	6284020	CompoundStatement		11:2:246:258	6283959	24					
ANR	6284021	IdentifierDeclStatement	const char * item ;	43:2:1173:1189	6283959	0	True				
ANR	6284022	IdentifierDecl	* item		6283959	0					
ANR	6284023	IdentifierDeclType	const char *		6283959	0					
ANR	6284024	Identifier	item		6283959	1					
ANR	6284025	IdentifierDeclStatement	int ncol = 0 ;	44:2:1193:1205	6283959	1	True				
ANR	6284026	IdentifierDecl	ncol = 0		6283959	0					
ANR	6284027	IdentifierDeclType	int		6283959	0					
ANR	6284028	Identifier	ncol		6283959	1					
ANR	6284029	AssignmentExpression	ncol = 0		6283959	2		=			
ANR	6284030	Identifier	ncol		6283959	0					
ANR	6284031	PrimaryExpression	0		6283959	1					
ANR	6284032	Statement	r_list_foreach	45:2:1209:1222	6283959	2	True				
ANR	6284033	Statement	(	45:17:1224:1224	6283959	3	True				
ANR	6284034	Statement	row	45:18:1225:1227	6283959	4	True				
ANR	6284035	Statement	->	45:21:1228:1229	6283959	5	True				
ANR	6284036	Statement	items	45:23:1230:1234	6283959	6	True				
ANR	6284037	Statement	","	45:28:1235:1235	6283959	7	True				
ANR	6284038	Statement	iter2	45:30:1237:1241	6283959	8	True				
ANR	6284039	Statement	","	45:35:1242:1242	6283959	9	True				
ANR	6284040	Statement	item	45:37:1244:1247	6283959	10	True				
ANR	6284041	Statement	)	45:41:1248:1248	6283959	11	True				
ANR	6284042	CompoundStatement		14:3:355:401	6283959	12					
ANR	6284043	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( item ) + 1 ;	46:3:1255:1297	6283959	0	True				
ANR	6284044	IdentifierDecl	itemLength = r_str_len_utf8 ( item ) + 1		6283959	0					
ANR	6284045	IdentifierDeclType	int		6283959	0					
ANR	6284046	Identifier	itemLength		6283959	1					
ANR	6284047	AssignmentExpression	itemLength = r_str_len_utf8 ( item ) + 1		6283959	2		=			
ANR	6284048	Identifier	itemLength		6283959	0					
ANR	6284049	AdditiveExpression	r_str_len_utf8 ( item ) + 1		6283959	1		+			
ANR	6284050	CallExpression	r_str_len_utf8 ( item )		6283959	0					
ANR	6284051	Callee	r_str_len_utf8		6283959	0					
ANR	6284052	Identifier	r_str_len_utf8		6283959	0					
ANR	6284053	ArgumentList	item		6283959	1					
ANR	6284054	Argument	item		6283959	0					
ANR	6284055	Identifier	item		6283959	0					
ANR	6284056	PrimaryExpression	1		6283959	1					
ANR	6284057	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( t -> cols , ncol ) ;"	47:3:1302:1348	6283959	1	True				
ANR	6284058	IdentifierDecl	"* c = r_list_get_n ( t -> cols , ncol )"		6283959	0					
ANR	6284059	IdentifierDeclType	RTableColumn *		6283959	0					
ANR	6284060	Identifier	c		6283959	1					
ANR	6284061	AssignmentExpression	"* c = r_list_get_n ( t -> cols , ncol )"		6283959	2		=			
ANR	6284062	Identifier	c		6283959	0					
ANR	6284063	CallExpression	"r_list_get_n ( t -> cols , ncol )"		6283959	1					
ANR	6284064	Callee	r_list_get_n		6283959	0					
ANR	6284065	Identifier	r_list_get_n		6283959	0					
ANR	6284066	ArgumentList	t -> cols		6283959	1					
ANR	6284067	Argument	t -> cols		6283959	0					
ANR	6284068	PtrMemberAccess	t -> cols		6283959	0					
ANR	6284069	Identifier	t		6283959	0					
ANR	6284070	Identifier	cols		6283959	1					
ANR	6284071	Argument	ncol		6283959	1					
ANR	6284072	Identifier	ncol		6283959	0					
ANR	6284073	IfStatement	if ( c )		6283959	2					
ANR	6284074	Condition	c	48:7:1357:1357	6283959	0	True				
ANR	6284075	Identifier	c		6283959	0					
ANR	6284076	CompoundStatement		15:10:413:413	6283959	1					
ANR	6284077	ExpressionStatement	"c -> width = R_MAX ( c -> width , itemLength )"	49:4:1366:1405	6283959	0	True				
ANR	6284078	AssignmentExpression	"c -> width = R_MAX ( c -> width , itemLength )"		6283959	0		=			
ANR	6284079	PtrMemberAccess	c -> width		6283959	0					
ANR	6284080	Identifier	c		6283959	0					
ANR	6284081	Identifier	width		6283959	1					
ANR	6284082	CallExpression	"R_MAX ( c -> width , itemLength )"		6283959	1					
ANR	6284083	Callee	R_MAX		6283959	0					
ANR	6284084	Identifier	R_MAX		6283959	0					
ANR	6284085	ArgumentList	c -> width		6283959	1					
ANR	6284086	Argument	c -> width		6283959	0					
ANR	6284087	PtrMemberAccess	c -> width		6283959	0					
ANR	6284088	Identifier	c		6283959	0					
ANR	6284089	Identifier	width		6283959	1					
ANR	6284090	Argument	itemLength		6283959	1					
ANR	6284091	Identifier	itemLength		6283959	0					
ANR	6284092	ExpressionStatement	ncol ++	51:3:1415:1422	6283959	3	True				
ANR	6284093	PostIncDecOperationExpression	ncol ++		6283959	0					
ANR	6284094	Identifier	ncol		6283959	0					
ANR	6284095	IncDec	++		6283959	1					
ANR	6284096	ReturnType	static void		6283959	1					
ANR	6284097	Identifier	__table_adjust		6283959	2					
ANR	6284098	ParameterList	RTable * t		6283959	3					
ANR	6284099	Parameter	RTable * t	34:27:935:943	6283959	0	True				
ANR	6284100	ParameterType	RTable *		6283959	0					
ANR	6284101	Identifier	t		6283959	1					
ANR	6284102	CFGEntryNode	ENTRY		6283959		True				
ANR	6284103	CFGExitNode	EXIT		6283959		True				
ANR	6284104	Symbol	col		6283959						
ANR	6284105	Symbol	col -> width		6283959						
ANR	6284106	Symbol	ncol		6283959						
ANR	6284107	Symbol	item		6283959						
ANR	6284108	Symbol	c		6283959						
ANR	6284109	Symbol	iter2		6283959						
ANR	6284110	Symbol	t -> cols		6283959						
ANR	6284111	Symbol	iter		6283959						
ANR	6284112	Symbol	r_list_get_n		6283959						
ANR	6284113	Symbol	itemLength		6283959						
ANR	6284114	Symbol	* c		6283959						
ANR	6284115	Symbol	r_str_len_utf8		6283959						
ANR	6284116	Symbol	c -> width		6283959						
ANR	6284117	Symbol	col -> name		6283959						
ANR	6284118	Symbol	t		6283959						
ANR	6284119	Symbol	* col		6283959						
ANR	6284120	Symbol	R_MAX		6283959						
ANR	6284121	Symbol	row		6283959						
ANR	6284122	Symbol	* t		6283959						
ANR	6284123	Function	r_table_row_free	56:0:1434:1513							
ANR	6284124	FunctionDef	r_table_row_free (void * _row)		6284123	0					
ANR	6284125	CompoundStatement		56:40:1474:1513	6284123	0					
ANR	6284126	IdentifierDeclStatement	RTableRow * row = _row ;	57:1:1477:1498	6284123	0	True				
ANR	6284127	IdentifierDecl	* row = _row		6284123	0					
ANR	6284128	IdentifierDeclType	RTableRow *		6284123	0					
ANR	6284129	Identifier	row		6284123	1					
ANR	6284130	AssignmentExpression	* row = _row		6284123	2		=			
ANR	6284131	Identifier	_row		6284123	0					
ANR	6284132	Identifier	_row		6284123	1					
ANR	6284133	ExpressionStatement	free ( row )	58:1:1501:1511	6284123	1	True				
ANR	6284134	CallExpression	free ( row )		6284123	0					
ANR	6284135	Callee	free		6284123	0					
ANR	6284136	Identifier	free		6284123	0					
ANR	6284137	ArgumentList	row		6284123	1					
ANR	6284138	Argument	row		6284123	0					
ANR	6284139	Identifier	row		6284123	0					
ANR	6284140	ReturnType	R_API void		6284123	1					
ANR	6284141	Identifier	r_table_row_free		6284123	2					
ANR	6284142	ParameterList	void * _row		6284123	3					
ANR	6284143	Parameter	void * _row	56:28:1462:1471	6284123	0	True				
ANR	6284144	ParameterType	void *		6284123	0					
ANR	6284145	Identifier	_row		6284123	1					
ANR	6284146	CFGEntryNode	ENTRY		6284123		True				
ANR	6284147	CFGExitNode	EXIT		6284123		True				
ANR	6284148	Symbol	_row		6284123						
ANR	6284149	Symbol	row		6284123						
ANR	6284150	Function	r_table_column_free	61:0:1516:1620							
ANR	6284151	FunctionDef	r_table_column_free (void * _col)		6284150	0					
ANR	6284152	CompoundStatement		61:43:1559:1620	6284150	0					
ANR	6284153	IdentifierDeclStatement	RTableColumn * col = _col ;	62:1:1562:1586	6284150	0	True				
ANR	6284154	IdentifierDecl	* col = _col		6284150	0					
ANR	6284155	IdentifierDeclType	RTableColumn *		6284150	0					
ANR	6284156	Identifier	col		6284150	1					
ANR	6284157	AssignmentExpression	* col = _col		6284150	2		=			
ANR	6284158	Identifier	_col		6284150	0					
ANR	6284159	Identifier	_col		6284150	1					
ANR	6284160	ExpressionStatement	free ( col -> name )	63:1:1589:1605	6284150	1	True				
ANR	6284161	CallExpression	free ( col -> name )		6284150	0					
ANR	6284162	Callee	free		6284150	0					
ANR	6284163	Identifier	free		6284150	0					
ANR	6284164	ArgumentList	col -> name		6284150	1					
ANR	6284165	Argument	col -> name		6284150	0					
ANR	6284166	PtrMemberAccess	col -> name		6284150	0					
ANR	6284167	Identifier	col		6284150	0					
ANR	6284168	Identifier	name		6284150	1					
ANR	6284169	ExpressionStatement	free ( col )	64:1:1608:1618	6284150	2	True				
ANR	6284170	CallExpression	free ( col )		6284150	0					
ANR	6284171	Callee	free		6284150	0					
ANR	6284172	Identifier	free		6284150	0					
ANR	6284173	ArgumentList	col		6284150	1					
ANR	6284174	Argument	col		6284150	0					
ANR	6284175	Identifier	col		6284150	0					
ANR	6284176	ReturnType	R_API void		6284150	1					
ANR	6284177	Identifier	r_table_column_free		6284150	2					
ANR	6284178	ParameterList	void * _col		6284150	3					
ANR	6284179	Parameter	void * _col	61:31:1547:1556	6284150	0	True				
ANR	6284180	ParameterType	void *		6284150	0					
ANR	6284181	Identifier	_col		6284150	1					
ANR	6284182	CFGEntryNode	ENTRY		6284150		True				
ANR	6284183	CFGExitNode	EXIT		6284150		True				
ANR	6284184	Symbol	col		6284150						
ANR	6284185	Symbol	col -> name		6284150						
ANR	6284186	Symbol	* col		6284150						
ANR	6284187	Symbol	_col		6284150						
ANR	6284188	Function	r_table_new	67:0:1623:1822							
ANR	6284189	FunctionDef	r_table_new ()		6284188	0					
ANR	6284190	CompoundStatement		67:28:1651:1822	6284188	0					
ANR	6284191	IdentifierDeclStatement	RTable * t = R_NEW0 ( RTable ) ;	68:1:1654:1681	6284188	0	True				
ANR	6284192	IdentifierDecl	* t = R_NEW0 ( RTable )		6284188	0					
ANR	6284193	IdentifierDeclType	RTable *		6284188	0					
ANR	6284194	Identifier	t		6284188	1					
ANR	6284195	AssignmentExpression	* t = R_NEW0 ( RTable )		6284188	2		=			
ANR	6284196	Identifier	t		6284188	0					
ANR	6284197	CallExpression	R_NEW0 ( RTable )		6284188	1					
ANR	6284198	Callee	R_NEW0		6284188	0					
ANR	6284199	Identifier	R_NEW0		6284188	0					
ANR	6284200	ArgumentList	RTable		6284188	1					
ANR	6284201	Argument	RTable		6284188	0					
ANR	6284202	Identifier	RTable		6284188	0					
ANR	6284203	IfStatement	if ( t )		6284188	1					
ANR	6284204	Condition	t	69:5:1688:1688	6284188	0	True				
ANR	6284205	Identifier	t		6284188	0					
ANR	6284206	CompoundStatement		3:8:39:39	6284188	1					
ANR	6284207	ExpressionStatement	t -> showHeader = true	70:2:1695:1715	6284188	0	True				
ANR	6284208	AssignmentExpression	t -> showHeader = true		6284188	0		=			
ANR	6284209	PtrMemberAccess	t -> showHeader		6284188	0					
ANR	6284210	Identifier	t		6284188	0					
ANR	6284211	Identifier	showHeader		6284188	1					
ANR	6284212	Identifier	true		6284188	1					
ANR	6284213	ExpressionStatement	t -> cols = r_list_newf ( r_table_column_free )	71:2:1719:1762	6284188	1	True				
ANR	6284214	AssignmentExpression	t -> cols = r_list_newf ( r_table_column_free )		6284188	0		=			
ANR	6284215	PtrMemberAccess	t -> cols		6284188	0					
ANR	6284216	Identifier	t		6284188	0					
ANR	6284217	Identifier	cols		6284188	1					
ANR	6284218	CallExpression	r_list_newf ( r_table_column_free )		6284188	1					
ANR	6284219	Callee	r_list_newf		6284188	0					
ANR	6284220	Identifier	r_list_newf		6284188	0					
ANR	6284221	ArgumentList	r_table_column_free		6284188	1					
ANR	6284222	Argument	r_table_column_free		6284188	0					
ANR	6284223	Identifier	r_table_column_free		6284188	0					
ANR	6284224	ExpressionStatement	t -> rows = r_list_newf ( r_table_row_free )	72:2:1766:1806	6284188	2	True				
ANR	6284225	AssignmentExpression	t -> rows = r_list_newf ( r_table_row_free )		6284188	0		=			
ANR	6284226	PtrMemberAccess	t -> rows		6284188	0					
ANR	6284227	Identifier	t		6284188	0					
ANR	6284228	Identifier	rows		6284188	1					
ANR	6284229	CallExpression	r_list_newf ( r_table_row_free )		6284188	1					
ANR	6284230	Callee	r_list_newf		6284188	0					
ANR	6284231	Identifier	r_list_newf		6284188	0					
ANR	6284232	ArgumentList	r_table_row_free		6284188	1					
ANR	6284233	Argument	r_table_row_free		6284188	0					
ANR	6284234	Identifier	r_table_row_free		6284188	0					
ANR	6284235	ReturnStatement	return t ;	74:1:1812:1820	6284188	2	True				
ANR	6284236	Identifier	t		6284188	0					
ANR	6284237	ReturnType	R_API RTable *		6284188	1					
ANR	6284238	Identifier	r_table_new		6284188	2					
ANR	6284239	ParameterList			6284188	3					
ANR	6284240	CFGEntryNode	ENTRY		6284188		True				
ANR	6284241	CFGExitNode	EXIT		6284188		True				
ANR	6284242	Symbol	R_NEW0		6284188						
ANR	6284243	Symbol	r_table_column_free		6284188						
ANR	6284244	Symbol	t		6284188						
ANR	6284245	Symbol	r_list_newf		6284188						
ANR	6284246	Symbol	RTable		6284188						
ANR	6284247	Symbol	true		6284188						
ANR	6284248	Symbol	t -> cols		6284188						
ANR	6284249	Symbol	t -> rows		6284188						
ANR	6284250	Symbol	r_table_row_free		6284188						
ANR	6284251	Symbol	t -> showHeader		6284188						
ANR	6284252	Symbol	* t		6284188						
ANR	6284253	Function	r_table_free	77:0:1825:1921							
ANR	6284254	FunctionDef	r_table_free (RTable * t)		6284253	0					
ANR	6284255	CompoundStatement		77:35:1860:1921	6284253	0					
ANR	6284256	ExpressionStatement	r_list_free ( t -> cols )	78:1:1863:1884	6284253	0	True				
ANR	6284257	CallExpression	r_list_free ( t -> cols )		6284253	0					
ANR	6284258	Callee	r_list_free		6284253	0					
ANR	6284259	Identifier	r_list_free		6284253	0					
ANR	6284260	ArgumentList	t -> cols		6284253	1					
ANR	6284261	Argument	t -> cols		6284253	0					
ANR	6284262	PtrMemberAccess	t -> cols		6284253	0					
ANR	6284263	Identifier	t		6284253	0					
ANR	6284264	Identifier	cols		6284253	1					
ANR	6284265	ExpressionStatement	r_list_free ( t -> rows )	79:1:1887:1908	6284253	1	True				
ANR	6284266	CallExpression	r_list_free ( t -> rows )		6284253	0					
ANR	6284267	Callee	r_list_free		6284253	0					
ANR	6284268	Identifier	r_list_free		6284253	0					
ANR	6284269	ArgumentList	t -> rows		6284253	1					
ANR	6284270	Argument	t -> rows		6284253	0					
ANR	6284271	PtrMemberAccess	t -> rows		6284253	0					
ANR	6284272	Identifier	t		6284253	0					
ANR	6284273	Identifier	rows		6284253	1					
ANR	6284274	ExpressionStatement	free ( t )	80:1:1911:1919	6284253	2	True				
ANR	6284275	CallExpression	free ( t )		6284253	0					
ANR	6284276	Callee	free		6284253	0					
ANR	6284277	Identifier	free		6284253	0					
ANR	6284278	ArgumentList	t		6284253	1					
ANR	6284279	Argument	t		6284253	0					
ANR	6284280	Identifier	t		6284253	0					
ANR	6284281	ReturnType	R_API void		6284253	1					
ANR	6284282	Identifier	r_table_free		6284253	2					
ANR	6284283	ParameterList	RTable * t		6284253	3					
ANR	6284284	Parameter	RTable * t	77:24:1849:1857	6284253	0	True				
ANR	6284285	ParameterType	RTable *		6284253	0					
ANR	6284286	Identifier	t		6284253	1					
ANR	6284287	CFGEntryNode	ENTRY		6284253		True				
ANR	6284288	CFGExitNode	EXIT		6284253		True				
ANR	6284289	Symbol	t		6284253						
ANR	6284290	Symbol	t -> cols		6284253						
ANR	6284291	Symbol	t -> rows		6284253						
ANR	6284292	Symbol	* t		6284253						
ANR	6284293	Function	r_table_add_column	83:0:1924:2250							
ANR	6284294	FunctionDef	"r_table_add_column (RTable * t , RTableColumnType * type , const char * name , int maxWidth)"		6284293	0					
ANR	6284295	CompoundStatement		83:97:2021:2250	6284293	0					
ANR	6284296	IdentifierDeclStatement	RTableColumn * c = R_NEW0 ( RTableColumn ) ;	84:1:2024:2063	6284293	0	True				
ANR	6284297	IdentifierDecl	* c = R_NEW0 ( RTableColumn )		6284293	0					
ANR	6284298	IdentifierDeclType	RTableColumn *		6284293	0					
ANR	6284299	Identifier	c		6284293	1					
ANR	6284300	AssignmentExpression	* c = R_NEW0 ( RTableColumn )		6284293	2		=			
ANR	6284301	Identifier	c		6284293	0					
ANR	6284302	CallExpression	R_NEW0 ( RTableColumn )		6284293	1					
ANR	6284303	Callee	R_NEW0		6284293	0					
ANR	6284304	Identifier	R_NEW0		6284293	0					
ANR	6284305	ArgumentList	RTableColumn		6284293	1					
ANR	6284306	Argument	RTableColumn		6284293	0					
ANR	6284307	Identifier	RTableColumn		6284293	0					
ANR	6284308	IfStatement	if ( c )		6284293	1					
ANR	6284309	Condition	c	85:5:2070:2070	6284293	0	True				
ANR	6284310	Identifier	c		6284293	0					
ANR	6284311	CompoundStatement		7:2:126:168	6284293	1					
ANR	6284312	ExpressionStatement	c -> name = strdup ( name )	86:2:2077:2100	6284293	0	True				
ANR	6284313	AssignmentExpression	c -> name = strdup ( name )		6284293	0		=			
ANR	6284314	PtrMemberAccess	c -> name		6284293	0					
ANR	6284315	Identifier	c		6284293	0					
ANR	6284316	Identifier	name		6284293	1					
ANR	6284317	CallExpression	strdup ( name )		6284293	1					
ANR	6284318	Callee	strdup		6284293	0					
ANR	6284319	Identifier	strdup		6284293	0					
ANR	6284320	ArgumentList	name		6284293	1					
ANR	6284321	Argument	name		6284293	0					
ANR	6284322	Identifier	name		6284293	0					
ANR	6284323	ExpressionStatement	c -> maxWidth = maxWidth	87:2:2104:2126	6284293	1	True				
ANR	6284324	AssignmentExpression	c -> maxWidth = maxWidth		6284293	0		=			
ANR	6284325	PtrMemberAccess	c -> maxWidth		6284293	0					
ANR	6284326	Identifier	c		6284293	0					
ANR	6284327	Identifier	maxWidth		6284293	1					
ANR	6284328	Identifier	maxWidth		6284293	1					
ANR	6284329	ExpressionStatement	c -> type = type	88:2:2130:2144	6284293	2	True				
ANR	6284330	AssignmentExpression	c -> type = type		6284293	0		=			
ANR	6284331	PtrMemberAccess	c -> type		6284293	0					
ANR	6284332	Identifier	c		6284293	0					
ANR	6284333	Identifier	type		6284293	1					
ANR	6284334	Identifier	type		6284293	1					
ANR	6284335	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( name ) + 1 ;	89:2:2148:2190	6284293	3	True				
ANR	6284336	IdentifierDecl	itemLength = r_str_len_utf8 ( name ) + 1		6284293	0					
ANR	6284337	IdentifierDeclType	int		6284293	0					
ANR	6284338	Identifier	itemLength		6284293	1					
ANR	6284339	AssignmentExpression	itemLength = r_str_len_utf8 ( name ) + 1		6284293	2		=			
ANR	6284340	Identifier	itemLength		6284293	0					
ANR	6284341	AdditiveExpression	r_str_len_utf8 ( name ) + 1		6284293	1		+			
ANR	6284342	CallExpression	r_str_len_utf8 ( name )		6284293	0					
ANR	6284343	Callee	r_str_len_utf8		6284293	0					
ANR	6284344	Identifier	r_str_len_utf8		6284293	0					
ANR	6284345	ArgumentList	name		6284293	1					
ANR	6284346	Argument	name		6284293	0					
ANR	6284347	Identifier	name		6284293	0					
ANR	6284348	PrimaryExpression	1		6284293	1					
ANR	6284349	ExpressionStatement	c -> width = itemLength	90:2:2194:2215	6284293	4	True				
ANR	6284350	AssignmentExpression	c -> width = itemLength		6284293	0		=			
ANR	6284351	PtrMemberAccess	c -> width		6284293	0					
ANR	6284352	Identifier	c		6284293	0					
ANR	6284353	Identifier	width		6284293	1					
ANR	6284354	Identifier	itemLength		6284293	1					
ANR	6284355	ExpressionStatement	"r_list_append ( t -> cols , c )"	91:2:2219:2245	6284293	5	True				
ANR	6284356	CallExpression	"r_list_append ( t -> cols , c )"		6284293	0					
ANR	6284357	Callee	r_list_append		6284293	0					
ANR	6284358	Identifier	r_list_append		6284293	0					
ANR	6284359	ArgumentList	t -> cols		6284293	1					
ANR	6284360	Argument	t -> cols		6284293	0					
ANR	6284361	PtrMemberAccess	t -> cols		6284293	0					
ANR	6284362	Identifier	t		6284293	0					
ANR	6284363	Identifier	cols		6284293	1					
ANR	6284364	Argument	c		6284293	1					
ANR	6284365	Identifier	c		6284293	0					
ANR	6284366	ReturnType	R_API void		6284293	1					
ANR	6284367	Identifier	r_table_add_column		6284293	2					
ANR	6284368	ParameterList	"RTable * t , RTableColumnType * type , const char * name , int maxWidth"		6284293	3					
ANR	6284369	Parameter	RTable * t	83:30:1954:1962	6284293	0	True				
ANR	6284370	ParameterType	RTable *		6284293	0					
ANR	6284371	Identifier	t		6284293	1					
ANR	6284372	Parameter	RTableColumnType * type	83:41:1965:1986	6284293	1	True				
ANR	6284373	ParameterType	RTableColumnType *		6284293	0					
ANR	6284374	Identifier	type		6284293	1					
ANR	6284375	Parameter	const char * name	83:65:1989:2004	6284293	2	True				
ANR	6284376	ParameterType	const char *		6284293	0					
ANR	6284377	Identifier	name		6284293	1					
ANR	6284378	Parameter	int maxWidth	83:83:2007:2018	6284293	3	True				
ANR	6284379	ParameterType	int		6284293	0					
ANR	6284380	Identifier	maxWidth		6284293	1					
ANR	6284381	CFGEntryNode	ENTRY		6284293		True				
ANR	6284382	CFGExitNode	EXIT		6284293		True				
ANR	6284383	Symbol	RTableColumn		6284293						
ANR	6284384	Symbol	c		6284293						
ANR	6284385	Symbol	t -> cols		6284293						
ANR	6284386	Symbol	c -> name		6284293						
ANR	6284387	Symbol	itemLength		6284293						
ANR	6284388	Symbol	type		6284293						
ANR	6284389	Symbol	* c		6284293						
ANR	6284390	Symbol	r_str_len_utf8		6284293						
ANR	6284391	Symbol	R_NEW0		6284293						
ANR	6284392	Symbol	c -> width		6284293						
ANR	6284393	Symbol	t		6284293						
ANR	6284394	Symbol	c -> type		6284293						
ANR	6284395	Symbol	name		6284293						
ANR	6284396	Symbol	strdup		6284293						
ANR	6284397	Symbol	c -> maxWidth		6284293						
ANR	6284398	Symbol	* t		6284293						
ANR	6284399	Symbol	maxWidth		6284293						
ANR	6284400	Function	r_table_row_new	95:0:2253:2373							
ANR	6284401	FunctionDef	r_table_row_new (RList * items)		6284400	0					
ANR	6284402	CompoundStatement		95:47:2300:2373	6284400	0					
ANR	6284403	IdentifierDeclStatement	RTableRow * row = R_NEW ( RTableRow ) ;	96:1:2303:2337	6284400	0	True				
ANR	6284404	IdentifierDecl	* row = R_NEW ( RTableRow )		6284400	0					
ANR	6284405	IdentifierDeclType	RTableRow *		6284400	0					
ANR	6284406	Identifier	row		6284400	1					
ANR	6284407	AssignmentExpression	* row = R_NEW ( RTableRow )		6284400	2		=			
ANR	6284408	Identifier	row		6284400	0					
ANR	6284409	CallExpression	R_NEW ( RTableRow )		6284400	1					
ANR	6284410	Callee	R_NEW		6284400	0					
ANR	6284411	Identifier	R_NEW		6284400	0					
ANR	6284412	ArgumentList	RTableRow		6284400	1					
ANR	6284413	Argument	RTableRow		6284400	0					
ANR	6284414	Identifier	RTableRow		6284400	0					
ANR	6284415	ExpressionStatement	row -> items = items	97:1:2340:2358	6284400	1	True				
ANR	6284416	AssignmentExpression	row -> items = items		6284400	0		=			
ANR	6284417	PtrMemberAccess	row -> items		6284400	0					
ANR	6284418	Identifier	row		6284400	0					
ANR	6284419	Identifier	items		6284400	1					
ANR	6284420	Identifier	items		6284400	1					
ANR	6284421	ReturnStatement	return row ;	98:1:2361:2371	6284400	2	True				
ANR	6284422	Identifier	row		6284400	0					
ANR	6284423	ReturnType	R_API RTableRow *		6284400	1					
ANR	6284424	Identifier	r_table_row_new		6284400	2					
ANR	6284425	ParameterList	RList * items		6284400	3					
ANR	6284426	Parameter	RList * items	95:33:2286:2297	6284400	0	True				
ANR	6284427	ParameterType	RList *		6284400	0					
ANR	6284428	Identifier	items		6284400	1					
ANR	6284429	CFGEntryNode	ENTRY		6284400		True				
ANR	6284430	CFGExitNode	EXIT		6284400		True				
ANR	6284431	Symbol	row -> items		6284400						
ANR	6284432	Symbol	* row		6284400						
ANR	6284433	Symbol	RTableRow		6284400						
ANR	6284434	Symbol	row		6284400						
ANR	6284435	Symbol	R_NEW		6284400						
ANR	6284436	Symbol	items		6284400						
ANR	6284437	Function	addRow	101:0:2376:2666							
ANR	6284438	FunctionDef	"addRow (RTable * t , RList * items , const char * arg , int col)"		6284437	0					
ANR	6284439	CompoundStatement		101:71:2447:2666	6284437	0					
ANR	6284440	IdentifierDeclStatement	int itemLength = r_str_len_utf8 ( arg ) + 1 ;	102:1:2450:2491	6284437	0	True				
ANR	6284441	IdentifierDecl	itemLength = r_str_len_utf8 ( arg ) + 1		6284437	0					
ANR	6284442	IdentifierDeclType	int		6284437	0					
ANR	6284443	Identifier	itemLength		6284437	1					
ANR	6284444	AssignmentExpression	itemLength = r_str_len_utf8 ( arg ) + 1		6284437	2		=			
ANR	6284445	Identifier	itemLength		6284437	0					
ANR	6284446	AdditiveExpression	r_str_len_utf8 ( arg ) + 1		6284437	1		+			
ANR	6284447	CallExpression	r_str_len_utf8 ( arg )		6284437	0					
ANR	6284448	Callee	r_str_len_utf8		6284437	0					
ANR	6284449	Identifier	r_str_len_utf8		6284437	0					
ANR	6284450	ArgumentList	arg		6284437	1					
ANR	6284451	Argument	arg		6284437	0					
ANR	6284452	Identifier	arg		6284437	0					
ANR	6284453	PrimaryExpression	1		6284437	1					
ANR	6284454	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( t -> cols , col ) ;"	103:1:2494:2539	6284437	1	True				
ANR	6284455	IdentifierDecl	"* c = r_list_get_n ( t -> cols , col )"		6284437	0					
ANR	6284456	IdentifierDeclType	RTableColumn *		6284437	0					
ANR	6284457	Identifier	c		6284437	1					
ANR	6284458	AssignmentExpression	"* c = r_list_get_n ( t -> cols , col )"		6284437	2		=			
ANR	6284459	Identifier	c		6284437	0					
ANR	6284460	CallExpression	"r_list_get_n ( t -> cols , col )"		6284437	1					
ANR	6284461	Callee	r_list_get_n		6284437	0					
ANR	6284462	Identifier	r_list_get_n		6284437	0					
ANR	6284463	ArgumentList	t -> cols		6284437	1					
ANR	6284464	Argument	t -> cols		6284437	0					
ANR	6284465	PtrMemberAccess	t -> cols		6284437	0					
ANR	6284466	Identifier	t		6284437	0					
ANR	6284467	Identifier	cols		6284437	1					
ANR	6284468	Argument	col		6284437	1					
ANR	6284469	Identifier	col		6284437	0					
ANR	6284470	IfStatement	if ( c )		6284437	2					
ANR	6284471	Condition	c	104:5:2546:2546	6284437	0	True				
ANR	6284472	Identifier	c		6284437	0					
ANR	6284473	CompoundStatement		4:8:101:101	6284437	1					
ANR	6284474	ExpressionStatement	"c -> width = R_MAX ( c -> width , itemLength )"	105:2:2553:2592	6284437	0	True				
ANR	6284475	AssignmentExpression	"c -> width = R_MAX ( c -> width , itemLength )"		6284437	0		=			
ANR	6284476	PtrMemberAccess	c -> width		6284437	0					
ANR	6284477	Identifier	c		6284437	0					
ANR	6284478	Identifier	width		6284437	1					
ANR	6284479	CallExpression	"R_MAX ( c -> width , itemLength )"		6284437	1					
ANR	6284480	Callee	R_MAX		6284437	0					
ANR	6284481	Identifier	R_MAX		6284437	0					
ANR	6284482	ArgumentList	c -> width		6284437	1					
ANR	6284483	Argument	c -> width		6284437	0					
ANR	6284484	PtrMemberAccess	c -> width		6284437	0					
ANR	6284485	Identifier	c		6284437	0					
ANR	6284486	Identifier	width		6284437	1					
ANR	6284487	Argument	itemLength		6284437	1					
ANR	6284488	Identifier	itemLength		6284437	0					
ANR	6284489	ExpressionStatement	"r_list_append ( items , strdup ( arg ) )"	106:2:2596:2631	6284437	1	True				
ANR	6284490	CallExpression	"r_list_append ( items , strdup ( arg ) )"		6284437	0					
ANR	6284491	Callee	r_list_append		6284437	0					
ANR	6284492	Identifier	r_list_append		6284437	0					
ANR	6284493	ArgumentList	items		6284437	1					
ANR	6284494	Argument	items		6284437	0					
ANR	6284495	Identifier	items		6284437	0					
ANR	6284496	Argument	strdup ( arg )		6284437	1					
ANR	6284497	CallExpression	strdup ( arg )		6284437	0					
ANR	6284498	Callee	strdup		6284437	0					
ANR	6284499	Identifier	strdup		6284437	0					
ANR	6284500	ArgumentList	arg		6284437	1					
ANR	6284501	Argument	arg		6284437	0					
ANR	6284502	Identifier	arg		6284437	0					
ANR	6284503	ReturnStatement	return true ;	107:2:2635:2646	6284437	2	True				
ANR	6284504	Identifier	true		6284437	0					
ANR	6284505	ReturnStatement	return false ;	109:1:2652:2664	6284437	3	True				
ANR	6284506	Identifier	false		6284437	0					
ANR	6284507	ReturnType	static bool		6284437	1					
ANR	6284508	Identifier	addRow		6284437	2					
ANR	6284509	ParameterList	"RTable * t , RList * items , const char * arg , int col"		6284437	3					
ANR	6284510	Parameter	RTable * t	101:20:2396:2404	6284437	0	True				
ANR	6284511	ParameterType	RTable *		6284437	0					
ANR	6284512	Identifier	t		6284437	1					
ANR	6284513	Parameter	RList * items	101:31:2407:2418	6284437	1	True				
ANR	6284514	ParameterType	RList *		6284437	0					
ANR	6284515	Identifier	items		6284437	1					
ANR	6284516	Parameter	const char * arg	101:45:2421:2435	6284437	2	True				
ANR	6284517	ParameterType	const char *		6284437	0					
ANR	6284518	Identifier	arg		6284437	1					
ANR	6284519	Parameter	int col	101:62:2438:2444	6284437	3	True				
ANR	6284520	ParameterType	int		6284437	0					
ANR	6284521	Identifier	col		6284437	1					
ANR	6284522	CFGEntryNode	ENTRY		6284437		True				
ANR	6284523	CFGExitNode	EXIT		6284437		True				
ANR	6284524	Symbol	col		6284437						
ANR	6284525	Symbol	c		6284437						
ANR	6284526	Symbol	t -> cols		6284437						
ANR	6284527	Symbol	false		6284437						
ANR	6284528	Symbol	r_list_get_n		6284437						
ANR	6284529	Symbol	itemLength		6284437						
ANR	6284530	Symbol	* c		6284437						
ANR	6284531	Symbol	r_str_len_utf8		6284437						
ANR	6284532	Symbol	c -> width		6284437						
ANR	6284533	Symbol	t		6284437						
ANR	6284534	Symbol	arg		6284437						
ANR	6284535	Symbol	R_MAX		6284437						
ANR	6284536	Symbol	true		6284437						
ANR	6284537	Symbol	strdup		6284437						
ANR	6284538	Symbol	items		6284437						
ANR	6284539	Symbol	* t		6284437						
ANR	6284540	Function	r_table_add_row_list	112:0:2669:2921							
ANR	6284541	FunctionDef	"r_table_add_row_list (RTable * t , RList * items)"		6284540	0					
ANR	6284542	CompoundStatement		112:57:2726:2921	6284540	0					
ANR	6284543	IdentifierDeclStatement	RTableRow * row = r_table_row_new ( items ) ;	113:1:2729:2769	6284540	0	True				
ANR	6284544	IdentifierDecl	* row = r_table_row_new ( items )		6284540	0					
ANR	6284545	IdentifierDeclType	RTableRow *		6284540	0					
ANR	6284546	Identifier	row		6284540	1					
ANR	6284547	AssignmentExpression	* row = r_table_row_new ( items )		6284540	2		=			
ANR	6284548	Identifier	row		6284540	0					
ANR	6284549	CallExpression	r_table_row_new ( items )		6284540	1					
ANR	6284550	Callee	r_table_row_new		6284540	0					
ANR	6284551	Identifier	r_table_row_new		6284540	0					
ANR	6284552	ArgumentList	items		6284540	1					
ANR	6284553	Argument	items		6284540	0					
ANR	6284554	Identifier	items		6284540	0					
ANR	6284555	ExpressionStatement	"r_list_append ( t -> rows , row )"	114:1:2772:2800	6284540	1	True				
ANR	6284556	CallExpression	"r_list_append ( t -> rows , row )"		6284540	0					
ANR	6284557	Callee	r_list_append		6284540	0					
ANR	6284558	Identifier	r_list_append		6284540	0					
ANR	6284559	ArgumentList	t -> rows		6284540	1					
ANR	6284560	Argument	t -> rows		6284540	0					
ANR	6284561	PtrMemberAccess	t -> rows		6284540	0					
ANR	6284562	Identifier	t		6284540	0					
ANR	6284563	Identifier	rows		6284540	1					
ANR	6284564	Argument	row		6284540	1					
ANR	6284565	Identifier	row		6284540	0					
ANR	6284566	ExpressionStatement	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"	116:1:2861:2919	6284540	2	True				
ANR	6284567	AssignmentExpression	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"		6284540	0		=			
ANR	6284568	PtrMemberAccess	t -> totalCols		6284540	0					
ANR	6284569	Identifier	t		6284540	0					
ANR	6284570	Identifier	totalCols		6284540	1					
ANR	6284571	CallExpression	"R_MAX ( t -> totalCols , r_list_length ( items ) )"		6284540	1					
ANR	6284572	Callee	R_MAX		6284540	0					
ANR	6284573	Identifier	R_MAX		6284540	0					
ANR	6284574	ArgumentList	t -> totalCols		6284540	1					
ANR	6284575	Argument	t -> totalCols		6284540	0					
ANR	6284576	PtrMemberAccess	t -> totalCols		6284540	0					
ANR	6284577	Identifier	t		6284540	0					
ANR	6284578	Identifier	totalCols		6284540	1					
ANR	6284579	Argument	r_list_length ( items )		6284540	1					
ANR	6284580	CallExpression	r_list_length ( items )		6284540	0					
ANR	6284581	Callee	r_list_length		6284540	0					
ANR	6284582	Identifier	r_list_length		6284540	0					
ANR	6284583	ArgumentList	items		6284540	1					
ANR	6284584	Argument	items		6284540	0					
ANR	6284585	Identifier	items		6284540	0					
ANR	6284586	ReturnType	R_API void		6284540	1					
ANR	6284587	Identifier	r_table_add_row_list		6284540	2					
ANR	6284588	ParameterList	"RTable * t , RList * items"		6284540	3					
ANR	6284589	Parameter	RTable * t	112:32:2701:2709	6284540	0	True				
ANR	6284590	ParameterType	RTable *		6284540	0					
ANR	6284591	Identifier	t		6284540	1					
ANR	6284592	Parameter	RList * items	112:43:2712:2723	6284540	1	True				
ANR	6284593	ParameterType	RList *		6284540	0					
ANR	6284594	Identifier	items		6284540	1					
ANR	6284595	CFGEntryNode	ENTRY		6284540		True				
ANR	6284596	CFGExitNode	EXIT		6284540		True				
ANR	6284597	Symbol	t		6284540						
ANR	6284598	Symbol	R_MAX		6284540						
ANR	6284599	Symbol	t -> rows		6284540						
ANR	6284600	Symbol	row		6284540						
ANR	6284601	Symbol	items		6284540						
ANR	6284602	Symbol	r_table_row_new		6284540						
ANR	6284603	Symbol	* t		6284540						
ANR	6284604	Symbol	r_list_length		6284540						
ANR	6284605	Symbol	t -> totalCols		6284540						
ANR	6284606	Function	r_table_add_row	119:0:2924:3502							
ANR	6284607	FunctionDef	"r_table_add_row (RTable * t , const char * name)"		6284606	0					
ANR	6284608	CompoundStatement		119:61:2985:3502	6284606	0					
ANR	6284609	IdentifierDeclStatement	va_list ap ;	120:1:2988:2998	6284606	0	True				
ANR	6284610	IdentifierDecl	ap		6284606	0					
ANR	6284611	IdentifierDeclType	va_list		6284606	0					
ANR	6284612	Identifier	ap		6284606	1					
ANR	6284613	ExpressionStatement	"va_start ( ap , name )"	121:1:3001:3020	6284606	1	True				
ANR	6284614	CallExpression	"va_start ( ap , name )"		6284606	0					
ANR	6284615	Callee	va_start		6284606	0					
ANR	6284616	Identifier	va_start		6284606	0					
ANR	6284617	ArgumentList	ap		6284606	1					
ANR	6284618	Argument	ap		6284606	0					
ANR	6284619	Identifier	ap		6284606	0					
ANR	6284620	Argument	name		6284606	1					
ANR	6284621	Identifier	name		6284606	0					
ANR	6284622	IdentifierDeclStatement	int col = 0 ;	122:1:3023:3034	6284606	2	True				
ANR	6284623	IdentifierDecl	col = 0		6284606	0					
ANR	6284624	IdentifierDeclType	int		6284606	0					
ANR	6284625	Identifier	col		6284606	1					
ANR	6284626	AssignmentExpression	col = 0		6284606	2		=			
ANR	6284627	Identifier	col		6284606	0					
ANR	6284628	PrimaryExpression	0		6284606	1					
ANR	6284629	IdentifierDeclStatement	RList * items = r_list_newf ( free ) ;	123:1:3037:3070	6284606	3	True				
ANR	6284630	IdentifierDecl	* items = r_list_newf ( free )		6284606	0					
ANR	6284631	IdentifierDeclType	RList *		6284606	0					
ANR	6284632	Identifier	items		6284606	1					
ANR	6284633	AssignmentExpression	* items = r_list_newf ( free )		6284606	2		=			
ANR	6284634	Identifier	items		6284606	0					
ANR	6284635	CallExpression	r_list_newf ( free )		6284606	1					
ANR	6284636	Callee	r_list_newf		6284606	0					
ANR	6284637	Identifier	r_list_newf		6284606	0					
ANR	6284638	ArgumentList	free		6284606	1					
ANR	6284639	Argument	free		6284606	0					
ANR	6284640	Identifier	free		6284606	0					
ANR	6284641	ExpressionStatement	"addRow ( t , items , name , col ++ )"	124:1:3073:3103	6284606	4	True				
ANR	6284642	CallExpression	"addRow ( t , items , name , col ++ )"		6284606	0					
ANR	6284643	Callee	addRow		6284606	0					
ANR	6284644	Identifier	addRow		6284606	0					
ANR	6284645	ArgumentList	t		6284606	1					
ANR	6284646	Argument	t		6284606	0					
ANR	6284647	Identifier	t		6284606	0					
ANR	6284648	Argument	items		6284606	1					
ANR	6284649	Identifier	items		6284606	0					
ANR	6284650	Argument	name		6284606	2					
ANR	6284651	Identifier	name		6284606	0					
ANR	6284652	Argument	col ++		6284606	3					
ANR	6284653	PostIncDecOperationExpression	col ++		6284606	0					
ANR	6284654	Identifier	col		6284606	0					
ANR	6284655	IncDec	++		6284606	1					
ANR	6284656	ForStatement	for ( ; ; )		6284606	5					
ANR	6284657	CompoundStatement		7:10:129:129	6284606	0					
ANR	6284658	Statement	const	126:2:3119:3123	6284606	0	True				
ANR	6284659	Statement	char	126:8:3125:3128	6284606	1	True				
ANR	6284660	Statement	*	126:13:3130:3130	6284606	2	True				
ANR	6284661	Statement	arg	126:14:3131:3133	6284606	3	True				
ANR	6284662	Statement	=	126:18:3135:3135	6284606	4	True				
ANR	6284663	Statement	va_arg	126:20:3137:3142	6284606	5	True				
ANR	6284664	Statement	(	126:27:3144:3144	6284606	6	True				
ANR	6284665	Statement	ap	126:28:3145:3146	6284606	7	True				
ANR	6284666	Statement	","	126:30:3147:3147	6284606	8	True				
ANR	6284667	Statement	const	126:32:3149:3153	6284606	9	True				
ANR	6284668	Statement	char	126:38:3155:3158	6284606	10	True				
ANR	6284669	Statement	*	126:43:3160:3160	6284606	11	True				
ANR	6284670	Statement	)	126:44:3161:3161	6284606	12	True				
ANR	6284671	ExpressionStatement		126:45:3162:3162	6284606	13	True				
ANR	6284672	IfStatement	if ( ! arg )		6284606	14					
ANR	6284673	Condition	! arg	127:6:3170:3173	6284606	0	True				
ANR	6284674	UnaryOperationExpression	! arg		6284606	0					
ANR	6284675	UnaryOperator	!		6284606	0					
ANR	6284676	Identifier	arg		6284606	1					
ANR	6284677	CompoundStatement		9:12:190:190	6284606	1					
ANR	6284678	BreakStatement	break ;	128:3:3181:3186	6284606	0	True				
ANR	6284679	ExpressionStatement	"addRow ( t , items , arg , col )"	130:2:3194:3221	6284606	15	True				
ANR	6284680	CallExpression	"addRow ( t , items , arg , col )"		6284606	0					
ANR	6284681	Callee	addRow		6284606	0					
ANR	6284682	Identifier	addRow		6284606	0					
ANR	6284683	ArgumentList	t		6284606	1					
ANR	6284684	Argument	t		6284606	0					
ANR	6284685	Identifier	t		6284606	0					
ANR	6284686	Argument	items		6284606	1					
ANR	6284687	Identifier	items		6284606	0					
ANR	6284688	Argument	arg		6284606	2					
ANR	6284689	Identifier	arg		6284606	0					
ANR	6284690	Argument	col		6284606	3					
ANR	6284691	Identifier	col		6284606	0					
ANR	6284692	ExpressionStatement	col ++	132:2:3285:3290	6284606	16	True				
ANR	6284693	PostIncDecOperationExpression	col ++		6284606	0					
ANR	6284694	Identifier	col		6284606	0					
ANR	6284695	IncDec	++		6284606	1					
ANR	6284696	ExpressionStatement	va_end ( ap )	134:1:3296:3307	6284606	6	True				
ANR	6284697	CallExpression	va_end ( ap )		6284606	0					
ANR	6284698	Callee	va_end		6284606	0					
ANR	6284699	Identifier	va_end		6284606	0					
ANR	6284700	ArgumentList	ap		6284606	1					
ANR	6284701	Argument	ap		6284606	0					
ANR	6284702	Identifier	ap		6284606	0					
ANR	6284703	IdentifierDeclStatement	RTableRow * row = r_table_row_new ( items ) ;	135:1:3310:3350	6284606	7	True				
ANR	6284704	IdentifierDecl	* row = r_table_row_new ( items )		6284606	0					
ANR	6284705	IdentifierDeclType	RTableRow *		6284606	0					
ANR	6284706	Identifier	row		6284606	1					
ANR	6284707	AssignmentExpression	* row = r_table_row_new ( items )		6284606	2		=			
ANR	6284708	Identifier	row		6284606	0					
ANR	6284709	CallExpression	r_table_row_new ( items )		6284606	1					
ANR	6284710	Callee	r_table_row_new		6284606	0					
ANR	6284711	Identifier	r_table_row_new		6284606	0					
ANR	6284712	ArgumentList	items		6284606	1					
ANR	6284713	Argument	items		6284606	0					
ANR	6284714	Identifier	items		6284606	0					
ANR	6284715	ExpressionStatement	"r_list_append ( t -> rows , row )"	136:1:3353:3381	6284606	8	True				
ANR	6284716	CallExpression	"r_list_append ( t -> rows , row )"		6284606	0					
ANR	6284717	Callee	r_list_append		6284606	0					
ANR	6284718	Identifier	r_list_append		6284606	0					
ANR	6284719	ArgumentList	t -> rows		6284606	1					
ANR	6284720	Argument	t -> rows		6284606	0					
ANR	6284721	PtrMemberAccess	t -> rows		6284606	0					
ANR	6284722	Identifier	t		6284606	0					
ANR	6284723	Identifier	rows		6284606	1					
ANR	6284724	Argument	row		6284606	1					
ANR	6284725	Identifier	row		6284606	0					
ANR	6284726	ExpressionStatement	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"	138:1:3442:3500	6284606	9	True				
ANR	6284727	AssignmentExpression	"t -> totalCols = R_MAX ( t -> totalCols , r_list_length ( items ) )"		6284606	0		=			
ANR	6284728	PtrMemberAccess	t -> totalCols		6284606	0					
ANR	6284729	Identifier	t		6284606	0					
ANR	6284730	Identifier	totalCols		6284606	1					
ANR	6284731	CallExpression	"R_MAX ( t -> totalCols , r_list_length ( items ) )"		6284606	1					
ANR	6284732	Callee	R_MAX		6284606	0					
ANR	6284733	Identifier	R_MAX		6284606	0					
ANR	6284734	ArgumentList	t -> totalCols		6284606	1					
ANR	6284735	Argument	t -> totalCols		6284606	0					
ANR	6284736	PtrMemberAccess	t -> totalCols		6284606	0					
ANR	6284737	Identifier	t		6284606	0					
ANR	6284738	Identifier	totalCols		6284606	1					
ANR	6284739	Argument	r_list_length ( items )		6284606	1					
ANR	6284740	CallExpression	r_list_length ( items )		6284606	0					
ANR	6284741	Callee	r_list_length		6284606	0					
ANR	6284742	Identifier	r_list_length		6284606	0					
ANR	6284743	ArgumentList	items		6284606	1					
ANR	6284744	Argument	items		6284606	0					
ANR	6284745	Identifier	items		6284606	0					
ANR	6284746	ReturnType	R_API void		6284606	1					
ANR	6284747	Identifier	r_table_add_row		6284606	2					
ANR	6284748	ParameterList	"RTable * t , const char * name"		6284606	3					
ANR	6284749	Parameter	RTable * t	119:27:2951:2959	6284606	0	True				
ANR	6284750	ParameterType	RTable *		6284606	0					
ANR	6284751	Identifier	t		6284606	1					
ANR	6284752	Parameter	const char * name	119:38:2962:2977	6284606	1	True				
ANR	6284753	ParameterType	const char *		6284606	0					
ANR	6284754	Identifier	name		6284606	1					
ANR	6284755	CFGEntryNode	ENTRY		6284606		True				
ANR	6284756	CFGExitNode	EXIT		6284606		True				
ANR	6284757	InfiniteForNode	true		6284606		True				
ANR	6284758	Symbol	col		6284606						
ANR	6284759	Symbol	r_list_newf		6284606						
ANR	6284760	Symbol	r_table_row_new		6284606						
ANR	6284761	Symbol	ap		6284606						
ANR	6284762	Symbol	t -> totalCols		6284606						
ANR	6284763	Symbol	t		6284606						
ANR	6284764	Symbol	arg		6284606						
ANR	6284765	Symbol	name		6284606						
ANR	6284766	Symbol	R_MAX		6284606						
ANR	6284767	Symbol	t -> rows		6284606						
ANR	6284768	Symbol	row		6284606						
ANR	6284769	Symbol	free		6284606						
ANR	6284770	Symbol	items		6284606						
ANR	6284771	Symbol	* t		6284606						
ANR	6284772	Symbol	r_list_length		6284606						
ANR	6284773	Function	__strbuf_append_col_aligned_fancy	143:0:3525:4079							
ANR	6284774	FunctionDef	"__strbuf_append_col_aligned_fancy (RStrBuf * sb , RTableColumn * col , char * str)"		6284773	0					
ANR	6284775	CompoundStatement		143:89:3614:4079	6284773	0					
ANR	6284776	SwitchStatement	switch ( col -> align )		6284773	0					
ANR	6284777	Condition	col -> align	144:9:3625:3634	6284773	0	True				
ANR	6284778	PtrMemberAccess	col -> align		6284773	0					
ANR	6284779	Identifier	col		6284773	0					
ANR	6284780	Identifier	align		6284773	1					
ANR	6284781	CompoundStatement		2:21:22:22	6284773	1					
ANR	6284782	Label	case R_TABLE_ALIGN_LEFT :	145:1:3640:3663	6284773	0	True				
ANR	6284783	Identifier	R_TABLE_ALIGN_LEFT		6284773	0					
ANR	6284784	ExpressionStatement	"r_strbuf_appendf ( sb , ""| %-*s "" , col -> width , str )"	146:2:3667:3716	6284773	1	True				
ANR	6284785	CallExpression	"r_strbuf_appendf ( sb , ""| %-*s "" , col -> width , str )"		6284773	0					
ANR	6284786	Callee	r_strbuf_appendf		6284773	0					
ANR	6284787	Identifier	r_strbuf_appendf		6284773	0					
ANR	6284788	ArgumentList	sb		6284773	1					
ANR	6284789	Argument	sb		6284773	0					
ANR	6284790	Identifier	sb		6284773	0					
ANR	6284791	Argument	"""| %-*s """		6284773	1					
ANR	6284792	PrimaryExpression	"""| %-*s """		6284773	0					
ANR	6284793	Argument	col -> width		6284773	2					
ANR	6284794	PtrMemberAccess	col -> width		6284773	0					
ANR	6284795	Identifier	col		6284773	0					
ANR	6284796	Identifier	width		6284773	1					
ANR	6284797	Argument	str		6284773	3					
ANR	6284798	Identifier	str		6284773	0					
ANR	6284799	BreakStatement	break ;	147:2:3720:3725	6284773	2	True				
ANR	6284800	Label	case R_TABLE_ALIGN_RIGHT :	148:1:3728:3752	6284773	3	True				
ANR	6284801	Identifier	R_TABLE_ALIGN_RIGHT		6284773	0					
ANR	6284802	ExpressionStatement	"r_strbuf_appendf ( sb , ""| %*s "" , col -> width , str )"	149:2:3756:3804	6284773	4	True				
ANR	6284803	CallExpression	"r_strbuf_appendf ( sb , ""| %*s "" , col -> width , str )"		6284773	0					
ANR	6284804	Callee	r_strbuf_appendf		6284773	0					
ANR	6284805	Identifier	r_strbuf_appendf		6284773	0					
ANR	6284806	ArgumentList	sb		6284773	1					
ANR	6284807	Argument	sb		6284773	0					
ANR	6284808	Identifier	sb		6284773	0					
ANR	6284809	Argument	"""| %*s """		6284773	1					
ANR	6284810	PrimaryExpression	"""| %*s """		6284773	0					
ANR	6284811	Argument	col -> width		6284773	2					
ANR	6284812	PtrMemberAccess	col -> width		6284773	0					
ANR	6284813	Identifier	col		6284773	0					
ANR	6284814	Identifier	width		6284773	1					
ANR	6284815	Argument	str		6284773	3					
ANR	6284816	Identifier	str		6284773	0					
ANR	6284817	BreakStatement	break ;	150:2:3808:3813	6284773	5	True				
ANR	6284818	Label	case R_TABLE_ALIGN_CENTER :	151:1:3816:3841	6284773	6	True				
ANR	6284819	Identifier	R_TABLE_ALIGN_CENTER		6284773	0					
ANR	6284820	CompoundStatement		13:3:307:346	6284773	7					
ANR	6284821	IdentifierDeclStatement	int len = r_str_len_utf8 ( str ) ;	153:3:3850:3880	6284773	0	True				
ANR	6284822	IdentifierDecl	len = r_str_len_utf8 ( str )		6284773	0					
ANR	6284823	IdentifierDeclType	int		6284773	0					
ANR	6284824	Identifier	len		6284773	1					
ANR	6284825	AssignmentExpression	len = r_str_len_utf8 ( str )		6284773	2		=			
ANR	6284826	Identifier	len		6284773	0					
ANR	6284827	CallExpression	r_str_len_utf8 ( str )		6284773	1					
ANR	6284828	Callee	r_str_len_utf8		6284773	0					
ANR	6284829	Identifier	r_str_len_utf8		6284773	0					
ANR	6284830	ArgumentList	str		6284773	1					
ANR	6284831	Argument	str		6284773	0					
ANR	6284832	Identifier	str		6284773	0					
ANR	6284833	IdentifierDeclStatement	int pad = ( col -> width - len ) / 2 ;	154:3:3885:3917	6284773	1	True				
ANR	6284834	IdentifierDecl	pad = ( col -> width - len ) / 2		6284773	0					
ANR	6284835	IdentifierDeclType	int		6284773	0					
ANR	6284836	Identifier	pad		6284773	1					
ANR	6284837	AssignmentExpression	pad = ( col -> width - len ) / 2		6284773	2		=			
ANR	6284838	Identifier	pad		6284773	0					
ANR	6284839	MultiplicativeExpression	( col -> width - len ) / 2		6284773	1		/			
ANR	6284840	AdditiveExpression	col -> width - len		6284773	0		-			
ANR	6284841	PtrMemberAccess	col -> width		6284773	0					
ANR	6284842	Identifier	col		6284773	0					
ANR	6284843	Identifier	width		6284773	1					
ANR	6284844	Identifier	len		6284773	1					
ANR	6284845	PrimaryExpression	2		6284773	1					
ANR	6284846	IdentifierDeclStatement	int left = col -> width - ( pad * 2 + len ) ;	155:3:3922:3961	6284773	2	True				
ANR	6284847	IdentifierDecl	left = col -> width - ( pad * 2 + len )		6284773	0					
ANR	6284848	IdentifierDeclType	int		6284773	0					
ANR	6284849	Identifier	left		6284773	1					
ANR	6284850	AssignmentExpression	left = col -> width - ( pad * 2 + len )		6284773	2		=			
ANR	6284851	Identifier	left		6284773	0					
ANR	6284852	AdditiveExpression	col -> width - ( pad * 2 + len )		6284773	1		-			
ANR	6284853	PtrMemberAccess	col -> width		6284773	0					
ANR	6284854	Identifier	col		6284773	0					
ANR	6284855	Identifier	width		6284773	1					
ANR	6284856	AdditiveExpression	pad * 2 + len		6284773	1		+			
ANR	6284857	MultiplicativeExpression	pad * 2		6284773	0		*			
ANR	6284858	Identifier	pad		6284773	0					
ANR	6284859	PrimaryExpression	2		6284773	1					
ANR	6284860	Identifier	len		6284773	1					
ANR	6284861	ExpressionStatement	"r_strbuf_appendf ( sb , ""| %-*s "" , pad , "" "" )"	156:3:3966:4008	6284773	3	True				
ANR	6284862	CallExpression	"r_strbuf_appendf ( sb , ""| %-*s "" , pad , "" "" )"		6284773	0					
ANR	6284863	Callee	r_strbuf_appendf		6284773	0					
ANR	6284864	Identifier	r_strbuf_appendf		6284773	0					
ANR	6284865	ArgumentList	sb		6284773	1					
ANR	6284866	Argument	sb		6284773	0					
ANR	6284867	Identifier	sb		6284773	0					
ANR	6284868	Argument	"""| %-*s """		6284773	1					
ANR	6284869	PrimaryExpression	"""| %-*s """		6284773	0					
ANR	6284870	Argument	pad		6284773	2					
ANR	6284871	Identifier	pad		6284773	0					
ANR	6284872	Argument	""" """		6284773	3					
ANR	6284873	PrimaryExpression	""" """		6284773	0					
ANR	6284874	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s "" , pad + left , str )"	157:3:4013:4060	6284773	4	True				
ANR	6284875	CallExpression	"r_strbuf_appendf ( sb , ""%-*s "" , pad + left , str )"		6284773	0					
ANR	6284876	Callee	r_strbuf_appendf		6284773	0					
ANR	6284877	Identifier	r_strbuf_appendf		6284773	0					
ANR	6284878	ArgumentList	sb		6284773	1					
ANR	6284879	Argument	sb		6284773	0					
ANR	6284880	Identifier	sb		6284773	0					
ANR	6284881	Argument	"""%-*s """		6284773	1					
ANR	6284882	PrimaryExpression	"""%-*s """		6284773	0					
ANR	6284883	Argument	pad + left		6284773	2					
ANR	6284884	AdditiveExpression	pad + left		6284773	0		+			
ANR	6284885	Identifier	pad		6284773	0					
ANR	6284886	Identifier	left		6284773	1					
ANR	6284887	Argument	str		6284773	3					
ANR	6284888	Identifier	str		6284773	0					
ANR	6284889	BreakStatement	break ;	158:3:4065:4070	6284773	5	True				
ANR	6284890	ReturnType	static void		6284773	1					
ANR	6284891	Identifier	__strbuf_append_col_aligned_fancy		6284773	2					
ANR	6284892	ParameterList	"RStrBuf * sb , RTableColumn * col , char * str"		6284773	3					
ANR	6284893	Parameter	RStrBuf * sb	143:46:3571:3581	6284773	0	True				
ANR	6284894	ParameterType	RStrBuf *		6284773	0					
ANR	6284895	Identifier	sb		6284773	1					
ANR	6284896	Parameter	RTableColumn * col	143:59:3584:3600	6284773	1	True				
ANR	6284897	ParameterType	RTableColumn *		6284773	0					
ANR	6284898	Identifier	col		6284773	1					
ANR	6284899	Parameter	char * str	143:78:3603:3611	6284773	2	True				
ANR	6284900	ParameterType	char *		6284773	0					
ANR	6284901	Identifier	str		6284773	1					
ANR	6284902	CFGEntryNode	ENTRY		6284773		True				
ANR	6284903	CFGExitNode	EXIT		6284773		True				
ANR	6284904	Symbol	str		6284773						
ANR	6284905	Symbol	r_str_len_utf8		6284773						
ANR	6284906	Symbol	col		6284773						
ANR	6284907	Symbol	col -> width		6284773						
ANR	6284908	Symbol	pad		6284773						
ANR	6284909	Symbol	len		6284773						
ANR	6284910	Symbol	* col		6284773						
ANR	6284911	Symbol	left		6284773						
ANR	6284912	Symbol	col -> align		6284773						
ANR	6284913	Symbol	sb		6284773						
ANR	6284914	Function	r_table_tofancystring	163:0:4082:4893							
ANR	6284915	FunctionDef	r_table_tofancystring (RTable * t)		6284914	0					
ANR	6284916	CompoundStatement		163:45:4127:4893	6284914	0					
ANR	6284917	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	164:1:4130:4161	6284914	0	True				
ANR	6284918	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		6284914	0					
ANR	6284919	IdentifierDeclType	RStrBuf *		6284914	0					
ANR	6284920	Identifier	sb		6284914	1					
ANR	6284921	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		6284914	2		=			
ANR	6284922	Identifier	sb		6284914	0					
ANR	6284923	CallExpression	"r_strbuf_new ( """" )"		6284914	1					
ANR	6284924	Callee	r_strbuf_new		6284914	0					
ANR	6284925	Identifier	r_strbuf_new		6284914	0					
ANR	6284926	ArgumentList	""""""		6284914	1					
ANR	6284927	Argument	""""""		6284914	0					
ANR	6284928	PrimaryExpression	""""""		6284914	0					
ANR	6284929	IdentifierDeclStatement	RTableRow * row ;	165:1:4164:4178	6284914	1	True				
ANR	6284930	IdentifierDecl	* row		6284914	0					
ANR	6284931	IdentifierDeclType	RTableRow *		6284914	0					
ANR	6284932	Identifier	row		6284914	1					
ANR	6284933	IdentifierDeclStatement	RTableColumn * col ;	166:1:4181:4198	6284914	2	True				
ANR	6284934	IdentifierDecl	* col		6284914	0					
ANR	6284935	IdentifierDeclType	RTableColumn *		6284914	0					
ANR	6284936	Identifier	col		6284914	1					
ANR	6284937	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	167:1:4201:4224	6284914	3	True				
ANR	6284938	IdentifierDecl	* iter		6284914	0					
ANR	6284939	IdentifierDeclType	RListIter *		6284914	0					
ANR	6284940	Identifier	iter		6284914	1					
ANR	6284941	IdentifierDecl	* iter2		6284914	1					
ANR	6284942	IdentifierDeclType	RListIter *		6284914	0					
ANR	6284943	Identifier	iter2		6284914	1					
ANR	6284944	Statement	r_list_foreach	169:1:4229:4242	6284914	4	True				
ANR	6284945	Statement	(	169:16:4244:4244	6284914	5	True				
ANR	6284946	Statement	t	169:17:4245:4245	6284914	6	True				
ANR	6284947	Statement	->	169:18:4246:4247	6284914	7	True				
ANR	6284948	Statement	cols	169:20:4248:4251	6284914	8	True				
ANR	6284949	Statement	","	169:24:4252:4252	6284914	9	True				
ANR	6284950	Statement	iter	169:26:4254:4257	6284914	10	True				
ANR	6284951	Statement	","	169:30:4258:4258	6284914	11	True				
ANR	6284952	Statement	col	169:32:4260:4262	6284914	12	True				
ANR	6284953	Statement	)	169:35:4263:4263	6284914	13	True				
ANR	6284954	CompoundStatement		7:37:137:137	6284914	14					
ANR	6284955	ExpressionStatement	"__strbuf_append_col_aligned_fancy ( sb , col , col -> name )"	170:2:4269:4322	6284914	0	True				
ANR	6284956	CallExpression	"__strbuf_append_col_aligned_fancy ( sb , col , col -> name )"		6284914	0					
ANR	6284957	Callee	__strbuf_append_col_aligned_fancy		6284914	0					
ANR	6284958	Identifier	__strbuf_append_col_aligned_fancy		6284914	0					
ANR	6284959	ArgumentList	sb		6284914	1					
ANR	6284960	Argument	sb		6284914	0					
ANR	6284961	Identifier	sb		6284914	0					
ANR	6284962	Argument	col		6284914	1					
ANR	6284963	Identifier	col		6284914	0					
ANR	6284964	Argument	col -> name		6284914	2					
ANR	6284965	PtrMemberAccess	col -> name		6284914	0					
ANR	6284966	Identifier	col		6284914	0					
ANR	6284967	Identifier	name		6284914	1					
ANR	6284968	IdentifierDeclStatement	int len = r_strbuf_length ( sb ) - 1 ;	172:1:4328:4362	6284914	15	True				
ANR	6284969	IdentifierDecl	len = r_strbuf_length ( sb ) - 1		6284914	0					
ANR	6284970	IdentifierDeclType	int		6284914	0					
ANR	6284971	Identifier	len		6284914	1					
ANR	6284972	AssignmentExpression	len = r_strbuf_length ( sb ) - 1		6284914	2		=			
ANR	6284973	Identifier	len		6284914	0					
ANR	6284974	AdditiveExpression	r_strbuf_length ( sb ) - 1		6284914	1		-			
ANR	6284975	CallExpression	r_strbuf_length ( sb )		6284914	0					
ANR	6284976	Callee	r_strbuf_length		6284914	0					
ANR	6284977	Identifier	r_strbuf_length		6284914	0					
ANR	6284978	ArgumentList	sb		6284914	1					
ANR	6284979	Argument	sb		6284914	0					
ANR	6284980	Identifier	sb		6284914	0					
ANR	6284981	PrimaryExpression	1		6284914	1					
ANR	6284982	CompoundStatement		12:2:241:294	6284914	16					
ANR	6284983	IdentifierDeclStatement	"char * s = r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) ) ;"	174:2:4369:4422	6284914	0	True				
ANR	6284984	IdentifierDecl	"* s = r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) )"		6284914	0					
ANR	6284985	IdentifierDeclType	char *		6284914	0					
ANR	6284986	Identifier	s		6284914	1					
ANR	6284987	AssignmentExpression	"* s = r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) )"		6284914	2		=			
ANR	6284988	Identifier	s		6284914	0					
ANR	6284989	CallExpression	"r_str_newf ( "".%s.\\n"" , r_str_pad ( '-' , len ) )"		6284914	1					
ANR	6284990	Callee	r_str_newf		6284914	0					
ANR	6284991	Identifier	r_str_newf		6284914	0					
ANR	6284992	ArgumentList	""".%s.\\n"""		6284914	1					
ANR	6284993	Argument	""".%s.\\n"""		6284914	0					
ANR	6284994	PrimaryExpression	""".%s.\\n"""		6284914	0					
ANR	6284995	Argument	"r_str_pad ( '-' , len )"		6284914	1					
ANR	6284996	CallExpression	"r_str_pad ( '-' , len )"		6284914	0					
ANR	6284997	Callee	r_str_pad		6284914	0					
ANR	6284998	Identifier	r_str_pad		6284914	0					
ANR	6284999	ArgumentList	'-'		6284914	1					
ANR	6285000	Argument	'-'		6284914	0					
ANR	6285001	PrimaryExpression	'-'		6284914	0					
ANR	6285002	Argument	len		6284914	1					
ANR	6285003	Identifier	len		6284914	0					
ANR	6285004	ExpressionStatement	"r_strbuf_prepend ( sb , s )"	175:2:4426:4450	6284914	1	True				
ANR	6285005	CallExpression	"r_strbuf_prepend ( sb , s )"		6284914	0					
ANR	6285006	Callee	r_strbuf_prepend		6284914	0					
ANR	6285007	Identifier	r_strbuf_prepend		6284914	0					
ANR	6285008	ArgumentList	sb		6284914	1					
ANR	6285009	Argument	sb		6284914	0					
ANR	6285010	Identifier	sb		6284914	0					
ANR	6285011	Argument	s		6284914	1					
ANR	6285012	Identifier	s		6284914	0					
ANR	6285013	ExpressionStatement	free ( s )	176:2:4454:4462	6284914	2	True				
ANR	6285014	CallExpression	free ( s )		6284914	0					
ANR	6285015	Callee	free		6284914	0					
ANR	6285016	Identifier	free		6284914	0					
ANR	6285017	ArgumentList	s		6284914	1					
ANR	6285018	Argument	s		6284914	0					
ANR	6285019	Identifier	s		6284914	0					
ANR	6285020	ExpressionStatement	"r_strbuf_appendf ( sb , ""|\\n)%s(\\n"" , r_str_pad ( '-' , len ) )"	179:1:4469:4525	6284914	17	True				
ANR	6285021	CallExpression	"r_strbuf_appendf ( sb , ""|\\n)%s(\\n"" , r_str_pad ( '-' , len ) )"		6284914	0					
ANR	6285022	Callee	r_strbuf_appendf		6284914	0					
ANR	6285023	Identifier	r_strbuf_appendf		6284914	0					
ANR	6285024	ArgumentList	sb		6284914	1					
ANR	6285025	Argument	sb		6284914	0					
ANR	6285026	Identifier	sb		6284914	0					
ANR	6285027	Argument	"""|\\n)%s(\\n"""		6284914	1					
ANR	6285028	PrimaryExpression	"""|\\n)%s(\\n"""		6284914	0					
ANR	6285029	Argument	"r_str_pad ( '-' , len )"		6284914	2					
ANR	6285030	CallExpression	"r_str_pad ( '-' , len )"		6284914	0					
ANR	6285031	Callee	r_str_pad		6284914	0					
ANR	6285032	Identifier	r_str_pad		6284914	0					
ANR	6285033	ArgumentList	'-'		6284914	1					
ANR	6285034	Argument	'-'		6284914	0					
ANR	6285035	PrimaryExpression	'-'		6284914	0					
ANR	6285036	Argument	len		6284914	1					
ANR	6285037	Identifier	len		6284914	0					
ANR	6285038	Statement	r_list_foreach	180:1:4528:4541	6284914	18	True				
ANR	6285039	Statement	(	180:16:4543:4543	6284914	19	True				
ANR	6285040	Statement	t	180:17:4544:4544	6284914	20	True				
ANR	6285041	Statement	->	180:18:4545:4546	6284914	21	True				
ANR	6285042	Statement	rows	180:20:4547:4550	6284914	22	True				
ANR	6285043	Statement	","	180:24:4551:4551	6284914	23	True				
ANR	6285044	Statement	iter	180:26:4553:4556	6284914	24	True				
ANR	6285045	Statement	","	180:30:4557:4557	6284914	25	True				
ANR	6285046	Statement	row	180:32:4559:4561	6284914	26	True				
ANR	6285047	Statement	)	180:35:4562:4562	6284914	27	True				
ANR	6285048	CompoundStatement		20:2:454:463	6284914	28					
ANR	6285049	IdentifierDeclStatement	char * item ;	181:2:4568:4578	6284914	0	True				
ANR	6285050	IdentifierDecl	* item		6284914	0					
ANR	6285051	IdentifierDeclType	char *		6284914	0					
ANR	6285052	Identifier	item		6284914	1					
ANR	6285053	IdentifierDeclStatement	int c = 0 ;	182:2:4582:4591	6284914	1	True				
ANR	6285054	IdentifierDecl	c = 0		6284914	0					
ANR	6285055	IdentifierDeclType	int		6284914	0					
ANR	6285056	Identifier	c		6284914	1					
ANR	6285057	AssignmentExpression	c = 0		6284914	2		=			
ANR	6285058	Identifier	c		6284914	0					
ANR	6285059	PrimaryExpression	0		6284914	1					
ANR	6285060	Statement	r_list_foreach	183:2:4595:4608	6284914	2	True				
ANR	6285061	Statement	(	183:17:4610:4610	6284914	3	True				
ANR	6285062	Statement	row	183:18:4611:4613	6284914	4	True				
ANR	6285063	Statement	->	183:21:4614:4615	6284914	5	True				
ANR	6285064	Statement	items	183:23:4616:4620	6284914	6	True				
ANR	6285065	Statement	","	183:28:4621:4621	6284914	7	True				
ANR	6285066	Statement	iter2	183:30:4623:4627	6284914	8	True				
ANR	6285067	Statement	","	183:35:4628:4628	6284914	9	True				
ANR	6285068	Statement	item	183:37:4630:4633	6284914	10	True				
ANR	6285069	Statement	)	183:41:4634:4634	6284914	11	True				
ANR	6285070	CompoundStatement		22:3:513:558	6284914	12					
ANR	6285071	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	184:3:4641:4686	6284914	0	True				
ANR	6285072	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		6284914	0					
ANR	6285073	IdentifierDeclType	RTableColumn *		6284914	0					
ANR	6285074	Identifier	col		6284914	1					
ANR	6285075	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		6284914	2		=			
ANR	6285076	Identifier	col		6284914	0					
ANR	6285077	CallExpression	"r_list_get_n ( t -> cols , c )"		6284914	1					
ANR	6285078	Callee	r_list_get_n		6284914	0					
ANR	6285079	Identifier	r_list_get_n		6284914	0					
ANR	6285080	ArgumentList	t -> cols		6284914	1					
ANR	6285081	Argument	t -> cols		6284914	0					
ANR	6285082	PtrMemberAccess	t -> cols		6284914	0					
ANR	6285083	Identifier	t		6284914	0					
ANR	6285084	Identifier	cols		6284914	1					
ANR	6285085	Argument	c		6284914	1					
ANR	6285086	Identifier	c		6284914	0					
ANR	6285087	IfStatement	if ( col )		6284914	1					
ANR	6285088	Condition	col	185:7:4695:4697	6284914	0	True				
ANR	6285089	Identifier	col		6284914	0					
ANR	6285090	CompoundStatement		23:12:572:572	6284914	1					
ANR	6285091	ExpressionStatement	"__strbuf_append_col_aligned_fancy ( sb , col , item )"	186:4:4706:4755	6284914	0	True				
ANR	6285092	CallExpression	"__strbuf_append_col_aligned_fancy ( sb , col , item )"		6284914	0					
ANR	6285093	Callee	__strbuf_append_col_aligned_fancy		6284914	0					
ANR	6285094	Identifier	__strbuf_append_col_aligned_fancy		6284914	0					
ANR	6285095	ArgumentList	sb		6284914	1					
ANR	6285096	Argument	sb		6284914	0					
ANR	6285097	Identifier	sb		6284914	0					
ANR	6285098	Argument	col		6284914	1					
ANR	6285099	Identifier	col		6284914	0					
ANR	6285100	Argument	item		6284914	2					
ANR	6285101	Identifier	item		6284914	0					
ANR	6285102	ExpressionStatement	c ++	188:3:4765:4768	6284914	2	True				
ANR	6285103	PostIncDecOperationExpression	c ++		6284914	0					
ANR	6285104	Identifier	c		6284914	0					
ANR	6285105	IncDec	++		6284914	1					
ANR	6285106	ExpressionStatement	"r_strbuf_append ( sb , ""|\\n"" )"	190:2:4776:4803	6284914	13	True				
ANR	6285107	CallExpression	"r_strbuf_append ( sb , ""|\\n"" )"		6284914	0					
ANR	6285108	Callee	r_strbuf_append		6284914	0					
ANR	6285109	Identifier	r_strbuf_append		6284914	0					
ANR	6285110	ArgumentList	sb		6284914	1					
ANR	6285111	Argument	sb		6284914	0					
ANR	6285112	Identifier	sb		6284914	0					
ANR	6285113	Argument	"""|\\n"""		6284914	1					
ANR	6285114	PrimaryExpression	"""|\\n"""		6284914	0					
ANR	6285115	ExpressionStatement	"r_strbuf_appendf ( sb , ""`%s'\\n"" , r_str_pad ( '-' , len ) )"	192:1:4809:4862	6284914	29	True				
ANR	6285116	CallExpression	"r_strbuf_appendf ( sb , ""`%s'\\n"" , r_str_pad ( '-' , len ) )"		6284914	0					
ANR	6285117	Callee	r_strbuf_appendf		6284914	0					
ANR	6285118	Identifier	r_strbuf_appendf		6284914	0					
ANR	6285119	ArgumentList	sb		6284914	1					
ANR	6285120	Argument	sb		6284914	0					
ANR	6285121	Identifier	sb		6284914	0					
ANR	6285122	Argument	"""`%s'\\n"""		6284914	1					
ANR	6285123	PrimaryExpression	"""`%s'\\n"""		6284914	0					
ANR	6285124	Argument	"r_str_pad ( '-' , len )"		6284914	2					
ANR	6285125	CallExpression	"r_str_pad ( '-' , len )"		6284914	0					
ANR	6285126	Callee	r_str_pad		6284914	0					
ANR	6285127	Identifier	r_str_pad		6284914	0					
ANR	6285128	ArgumentList	'-'		6284914	1					
ANR	6285129	Argument	'-'		6284914	0					
ANR	6285130	PrimaryExpression	'-'		6284914	0					
ANR	6285131	Argument	len		6284914	1					
ANR	6285132	Identifier	len		6284914	0					
ANR	6285133	ReturnStatement	return r_strbuf_drain ( sb ) ;	193:1:4865:4891	6284914	30	True				
ANR	6285134	CallExpression	r_strbuf_drain ( sb )		6284914	0					
ANR	6285135	Callee	r_strbuf_drain		6284914	0					
ANR	6285136	Identifier	r_strbuf_drain		6284914	0					
ANR	6285137	ArgumentList	sb		6284914	1					
ANR	6285138	Argument	sb		6284914	0					
ANR	6285139	Identifier	sb		6284914	0					
ANR	6285140	ReturnType	R_API char *		6284914	1					
ANR	6285141	Identifier	r_table_tofancystring		6284914	2					
ANR	6285142	ParameterList	RTable * t		6284914	3					
ANR	6285143	Parameter	RTable * t	163:34:4116:4124	6284914	0	True				
ANR	6285144	ParameterType	RTable *		6284914	0					
ANR	6285145	Identifier	t		6284914	1					
ANR	6285146	CFGEntryNode	ENTRY		6284914		True				
ANR	6285147	CFGExitNode	EXIT		6284914		True				
ANR	6285148	Symbol	col		6284914						
ANR	6285149	Symbol	item		6284914						
ANR	6285150	Symbol	r_strbuf_new		6284914						
ANR	6285151	Symbol	r_str_pad		6284914						
ANR	6285152	Symbol	c		6284914						
ANR	6285153	Symbol	iter2		6284914						
ANR	6285154	Symbol	t -> cols		6284914						
ANR	6285155	Symbol	iter		6284914						
ANR	6285156	Symbol	r_list_get_n		6284914						
ANR	6285157	Symbol	r_str_newf		6284914						
ANR	6285158	Symbol	sb		6284914						
ANR	6285159	Symbol	col -> name		6284914						
ANR	6285160	Symbol	s		6284914						
ANR	6285161	Symbol	t		6284914						
ANR	6285162	Symbol	len		6284914						
ANR	6285163	Symbol	* col		6284914						
ANR	6285164	Symbol	r_strbuf_drain		6284914						
ANR	6285165	Symbol	r_strbuf_length		6284914						
ANR	6285166	Symbol	row		6284914						
ANR	6285167	Symbol	* t		6284914						
ANR	6285168	Function	__strbuf_append_col_aligned	196:0:4896:5434							
ANR	6285169	FunctionDef	"__strbuf_append_col_aligned (RStrBuf * sb , RTableColumn * col , char * str)"		6285168	0					
ANR	6285170	CompoundStatement		196:83:4979:5434	6285168	0					
ANR	6285171	SwitchStatement	switch ( col -> align )		6285168	0					
ANR	6285172	Condition	col -> align	197:9:4990:4999	6285168	0	True				
ANR	6285173	PtrMemberAccess	col -> align		6285168	0					
ANR	6285174	Identifier	col		6285168	0					
ANR	6285175	Identifier	align		6285168	1					
ANR	6285176	CompoundStatement		2:21:22:22	6285168	1					
ANR	6285177	Label	case R_TABLE_ALIGN_LEFT :	198:1:5005:5028	6285168	0	True				
ANR	6285178	Identifier	R_TABLE_ALIGN_LEFT		6285168	0					
ANR	6285179	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s"" , col -> width , str )"	199:2:5032:5078	6285168	1	True				
ANR	6285180	CallExpression	"r_strbuf_appendf ( sb , ""%-*s"" , col -> width , str )"		6285168	0					
ANR	6285181	Callee	r_strbuf_appendf		6285168	0					
ANR	6285182	Identifier	r_strbuf_appendf		6285168	0					
ANR	6285183	ArgumentList	sb		6285168	1					
ANR	6285184	Argument	sb		6285168	0					
ANR	6285185	Identifier	sb		6285168	0					
ANR	6285186	Argument	"""%-*s"""		6285168	1					
ANR	6285187	PrimaryExpression	"""%-*s"""		6285168	0					
ANR	6285188	Argument	col -> width		6285168	2					
ANR	6285189	PtrMemberAccess	col -> width		6285168	0					
ANR	6285190	Identifier	col		6285168	0					
ANR	6285191	Identifier	width		6285168	1					
ANR	6285192	Argument	str		6285168	3					
ANR	6285193	Identifier	str		6285168	0					
ANR	6285194	BreakStatement	break ;	200:2:5082:5087	6285168	2	True				
ANR	6285195	Label	case R_TABLE_ALIGN_RIGHT :	201:1:5090:5114	6285168	3	True				
ANR	6285196	Identifier	R_TABLE_ALIGN_RIGHT		6285168	0					
ANR	6285197	ExpressionStatement	"r_strbuf_appendf ( sb , ""%*s"" , col -> width , str )"	202:2:5118:5163	6285168	4	True				
ANR	6285198	CallExpression	"r_strbuf_appendf ( sb , ""%*s"" , col -> width , str )"		6285168	0					
ANR	6285199	Callee	r_strbuf_appendf		6285168	0					
ANR	6285200	Identifier	r_strbuf_appendf		6285168	0					
ANR	6285201	ArgumentList	sb		6285168	1					
ANR	6285202	Argument	sb		6285168	0					
ANR	6285203	Identifier	sb		6285168	0					
ANR	6285204	Argument	"""%*s"""		6285168	1					
ANR	6285205	PrimaryExpression	"""%*s"""		6285168	0					
ANR	6285206	Argument	col -> width		6285168	2					
ANR	6285207	PtrMemberAccess	col -> width		6285168	0					
ANR	6285208	Identifier	col		6285168	0					
ANR	6285209	Identifier	width		6285168	1					
ANR	6285210	Argument	str		6285168	3					
ANR	6285211	Identifier	str		6285168	0					
ANR	6285212	BreakStatement	break ;	203:2:5167:5172	6285168	5	True				
ANR	6285213	Label	case R_TABLE_ALIGN_CENTER :	204:1:5175:5200	6285168	6	True				
ANR	6285214	Identifier	R_TABLE_ALIGN_CENTER		6285168	0					
ANR	6285215	CompoundStatement		13:3:301:340	6285168	7					
ANR	6285216	IdentifierDeclStatement	int len = r_str_len_utf8 ( str ) ;	206:3:5209:5239	6285168	0	True				
ANR	6285217	IdentifierDecl	len = r_str_len_utf8 ( str )		6285168	0					
ANR	6285218	IdentifierDeclType	int		6285168	0					
ANR	6285219	Identifier	len		6285168	1					
ANR	6285220	AssignmentExpression	len = r_str_len_utf8 ( str )		6285168	2		=			
ANR	6285221	Identifier	len		6285168	0					
ANR	6285222	CallExpression	r_str_len_utf8 ( str )		6285168	1					
ANR	6285223	Callee	r_str_len_utf8		6285168	0					
ANR	6285224	Identifier	r_str_len_utf8		6285168	0					
ANR	6285225	ArgumentList	str		6285168	1					
ANR	6285226	Argument	str		6285168	0					
ANR	6285227	Identifier	str		6285168	0					
ANR	6285228	IdentifierDeclStatement	int pad = ( col -> width - len ) / 2 ;	207:3:5244:5276	6285168	1	True				
ANR	6285229	IdentifierDecl	pad = ( col -> width - len ) / 2		6285168	0					
ANR	6285230	IdentifierDeclType	int		6285168	0					
ANR	6285231	Identifier	pad		6285168	1					
ANR	6285232	AssignmentExpression	pad = ( col -> width - len ) / 2		6285168	2		=			
ANR	6285233	Identifier	pad		6285168	0					
ANR	6285234	MultiplicativeExpression	( col -> width - len ) / 2		6285168	1		/			
ANR	6285235	AdditiveExpression	col -> width - len		6285168	0		-			
ANR	6285236	PtrMemberAccess	col -> width		6285168	0					
ANR	6285237	Identifier	col		6285168	0					
ANR	6285238	Identifier	width		6285168	1					
ANR	6285239	Identifier	len		6285168	1					
ANR	6285240	PrimaryExpression	2		6285168	1					
ANR	6285241	IdentifierDeclStatement	int left = col -> width - ( pad * 2 + len ) ;	208:3:5281:5320	6285168	2	True				
ANR	6285242	IdentifierDecl	left = col -> width - ( pad * 2 + len )		6285168	0					
ANR	6285243	IdentifierDeclType	int		6285168	0					
ANR	6285244	Identifier	left		6285168	1					
ANR	6285245	AssignmentExpression	left = col -> width - ( pad * 2 + len )		6285168	2		=			
ANR	6285246	Identifier	left		6285168	0					
ANR	6285247	AdditiveExpression	col -> width - ( pad * 2 + len )		6285168	1		-			
ANR	6285248	PtrMemberAccess	col -> width		6285168	0					
ANR	6285249	Identifier	col		6285168	0					
ANR	6285250	Identifier	width		6285168	1					
ANR	6285251	AdditiveExpression	pad * 2 + len		6285168	1		+			
ANR	6285252	MultiplicativeExpression	pad * 2		6285168	0		*			
ANR	6285253	Identifier	pad		6285168	0					
ANR	6285254	PrimaryExpression	2		6285168	1					
ANR	6285255	Identifier	len		6285168	1					
ANR	6285256	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s"" , pad , "" "" )"	209:3:5325:5364	6285168	3	True				
ANR	6285257	CallExpression	"r_strbuf_appendf ( sb , ""%-*s"" , pad , "" "" )"		6285168	0					
ANR	6285258	Callee	r_strbuf_appendf		6285168	0					
ANR	6285259	Identifier	r_strbuf_appendf		6285168	0					
ANR	6285260	ArgumentList	sb		6285168	1					
ANR	6285261	Argument	sb		6285168	0					
ANR	6285262	Identifier	sb		6285168	0					
ANR	6285263	Argument	"""%-*s"""		6285168	1					
ANR	6285264	PrimaryExpression	"""%-*s"""		6285168	0					
ANR	6285265	Argument	pad		6285168	2					
ANR	6285266	Identifier	pad		6285168	0					
ANR	6285267	Argument	""" """		6285168	3					
ANR	6285268	PrimaryExpression	""" """		6285168	0					
ANR	6285269	ExpressionStatement	"r_strbuf_appendf ( sb , ""%-*s"" , pad + left , str )"	210:3:5369:5415	6285168	4	True				
ANR	6285270	CallExpression	"r_strbuf_appendf ( sb , ""%-*s"" , pad + left , str )"		6285168	0					
ANR	6285271	Callee	r_strbuf_appendf		6285168	0					
ANR	6285272	Identifier	r_strbuf_appendf		6285168	0					
ANR	6285273	ArgumentList	sb		6285168	1					
ANR	6285274	Argument	sb		6285168	0					
ANR	6285275	Identifier	sb		6285168	0					
ANR	6285276	Argument	"""%-*s"""		6285168	1					
ANR	6285277	PrimaryExpression	"""%-*s"""		6285168	0					
ANR	6285278	Argument	pad + left		6285168	2					
ANR	6285279	AdditiveExpression	pad + left		6285168	0		+			
ANR	6285280	Identifier	pad		6285168	0					
ANR	6285281	Identifier	left		6285168	1					
ANR	6285282	Argument	str		6285168	3					
ANR	6285283	Identifier	str		6285168	0					
ANR	6285284	BreakStatement	break ;	211:3:5420:5425	6285168	5	True				
ANR	6285285	ReturnType	static void		6285168	1					
ANR	6285286	Identifier	__strbuf_append_col_aligned		6285168	2					
ANR	6285287	ParameterList	"RStrBuf * sb , RTableColumn * col , char * str"		6285168	3					
ANR	6285288	Parameter	RStrBuf * sb	196:40:4936:4946	6285168	0	True				
ANR	6285289	ParameterType	RStrBuf *		6285168	0					
ANR	6285290	Identifier	sb		6285168	1					
ANR	6285291	Parameter	RTableColumn * col	196:53:4949:4965	6285168	1	True				
ANR	6285292	ParameterType	RTableColumn *		6285168	0					
ANR	6285293	Identifier	col		6285168	1					
ANR	6285294	Parameter	char * str	196:72:4968:4976	6285168	2	True				
ANR	6285295	ParameterType	char *		6285168	0					
ANR	6285296	Identifier	str		6285168	1					
ANR	6285297	CFGEntryNode	ENTRY		6285168		True				
ANR	6285298	CFGExitNode	EXIT		6285168		True				
ANR	6285299	Symbol	str		6285168						
ANR	6285300	Symbol	r_str_len_utf8		6285168						
ANR	6285301	Symbol	col		6285168						
ANR	6285302	Symbol	col -> width		6285168						
ANR	6285303	Symbol	pad		6285168						
ANR	6285304	Symbol	len		6285168						
ANR	6285305	Symbol	* col		6285168						
ANR	6285306	Symbol	left		6285168						
ANR	6285307	Symbol	col -> align		6285168						
ANR	6285308	Symbol	sb		6285168						
ANR	6285309	Function	r_table_tostring	216:0:5437:6092							
ANR	6285310	FunctionDef	r_table_tostring (RTable * t)		6285309	0					
ANR	6285311	CompoundStatement		216:40:5477:6092	6285309	0					
ANR	6285312	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	217:1:5480:5511	6285309	0	True				
ANR	6285313	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		6285309	0					
ANR	6285314	IdentifierDeclType	RStrBuf *		6285309	0					
ANR	6285315	Identifier	sb		6285309	1					
ANR	6285316	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		6285309	2		=			
ANR	6285317	Identifier	sb		6285309	0					
ANR	6285318	CallExpression	"r_strbuf_new ( """" )"		6285309	1					
ANR	6285319	Callee	r_strbuf_new		6285309	0					
ANR	6285320	Identifier	r_strbuf_new		6285309	0					
ANR	6285321	ArgumentList	""""""		6285309	1					
ANR	6285322	Argument	""""""		6285309	0					
ANR	6285323	PrimaryExpression	""""""		6285309	0					
ANR	6285324	IdentifierDeclStatement	RTableRow * row ;	218:1:5514:5528	6285309	1	True				
ANR	6285325	IdentifierDecl	* row		6285309	0					
ANR	6285326	IdentifierDeclType	RTableRow *		6285309	0					
ANR	6285327	Identifier	row		6285309	1					
ANR	6285328	IdentifierDeclStatement	RTableColumn * col ;	219:1:5531:5548	6285309	2	True				
ANR	6285329	IdentifierDecl	* col		6285309	0					
ANR	6285330	IdentifierDeclType	RTableColumn *		6285309	0					
ANR	6285331	Identifier	col		6285309	1					
ANR	6285332	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	220:1:5551:5574	6285309	3	True				
ANR	6285333	IdentifierDecl	* iter		6285309	0					
ANR	6285334	IdentifierDeclType	RListIter *		6285309	0					
ANR	6285335	Identifier	iter		6285309	1					
ANR	6285336	IdentifierDecl	* iter2		6285309	1					
ANR	6285337	IdentifierDeclType	RListIter *		6285309	0					
ANR	6285338	Identifier	iter2		6285309	1					
ANR	6285339	IfStatement	if ( t -> showHeader )		6285309	4					
ANR	6285340	Condition	t -> showHeader	221:5:5581:5593	6285309	0	True				
ANR	6285341	PtrMemberAccess	t -> showHeader		6285309	0					
ANR	6285342	Identifier	t		6285309	0					
ANR	6285343	Identifier	showHeader		6285309	1					
ANR	6285344	CompoundStatement		10:2:219:249	6285309	1					
ANR	6285345	Statement	r_list_foreach	222:2:5600:5613	6285309	0	True				
ANR	6285346	Statement	(	222:17:5615:5615	6285309	1	True				
ANR	6285347	Statement	t	222:18:5616:5616	6285309	2	True				
ANR	6285348	Statement	->	222:19:5617:5618	6285309	3	True				
ANR	6285349	Statement	cols	222:21:5619:5622	6285309	4	True				
ANR	6285350	Statement	","	222:25:5623:5623	6285309	5	True				
ANR	6285351	Statement	iter	222:27:5625:5628	6285309	6	True				
ANR	6285352	Statement	","	222:31:5629:5629	6285309	7	True				
ANR	6285353	Statement	col	222:33:5631:5633	6285309	8	True				
ANR	6285354	Statement	)	222:36:5634:5634	6285309	9	True				
ANR	6285355	CompoundStatement		7:38:158:158	6285309	10					
ANR	6285356	ExpressionStatement	"__strbuf_append_col_aligned ( sb , col , col -> name )"	223:3:5641:5689	6285309	0	True				
ANR	6285357	CallExpression	"__strbuf_append_col_aligned ( sb , col , col -> name )"		6285309	0					
ANR	6285358	Callee	__strbuf_append_col_aligned		6285309	0					
ANR	6285359	Identifier	__strbuf_append_col_aligned		6285309	0					
ANR	6285360	ArgumentList	sb		6285309	1					
ANR	6285361	Argument	sb		6285309	0					
ANR	6285362	Identifier	sb		6285309	0					
ANR	6285363	Argument	col		6285309	1					
ANR	6285364	Identifier	col		6285309	0					
ANR	6285365	Argument	col -> name		6285309	2					
ANR	6285366	PtrMemberAccess	col -> name		6285309	0					
ANR	6285367	Identifier	col		6285309	0					
ANR	6285368	Identifier	name		6285309	1					
ANR	6285369	IdentifierDeclStatement	int len = r_strbuf_length ( sb ) ;	225:2:5697:5727	6285309	11	True				
ANR	6285370	IdentifierDecl	len = r_strbuf_length ( sb )		6285309	0					
ANR	6285371	IdentifierDeclType	int		6285309	0					
ANR	6285372	Identifier	len		6285309	1					
ANR	6285373	AssignmentExpression	len = r_strbuf_length ( sb )		6285309	2		=			
ANR	6285374	Identifier	len		6285309	0					
ANR	6285375	CallExpression	r_strbuf_length ( sb )		6285309	1					
ANR	6285376	Callee	r_strbuf_length		6285309	0					
ANR	6285377	Identifier	r_strbuf_length		6285309	0					
ANR	6285378	ArgumentList	sb		6285309	1					
ANR	6285379	Argument	sb		6285309	0					
ANR	6285380	Identifier	sb		6285309	0					
ANR	6285381	ExpressionStatement	"r_strbuf_appendf ( sb , ""\\n%s\\n"" , r_str_pad ( '-' , len ) )"	226:2:5731:5784	6285309	12	True				
ANR	6285382	CallExpression	"r_strbuf_appendf ( sb , ""\\n%s\\n"" , r_str_pad ( '-' , len ) )"		6285309	0					
ANR	6285383	Callee	r_strbuf_appendf		6285309	0					
ANR	6285384	Identifier	r_strbuf_appendf		6285309	0					
ANR	6285385	ArgumentList	sb		6285309	1					
ANR	6285386	Argument	sb		6285309	0					
ANR	6285387	Identifier	sb		6285309	0					
ANR	6285388	Argument	"""\\n%s\\n"""		6285309	1					
ANR	6285389	PrimaryExpression	"""\\n%s\\n"""		6285309	0					
ANR	6285390	Argument	"r_str_pad ( '-' , len )"		6285309	2					
ANR	6285391	CallExpression	"r_str_pad ( '-' , len )"		6285309	0					
ANR	6285392	Callee	r_str_pad		6285309	0					
ANR	6285393	Identifier	r_str_pad		6285309	0					
ANR	6285394	ArgumentList	'-'		6285309	1					
ANR	6285395	Argument	'-'		6285309	0					
ANR	6285396	PrimaryExpression	'-'		6285309	0					
ANR	6285397	Argument	len		6285309	1					
ANR	6285398	Identifier	len		6285309	0					
ANR	6285399	Statement	r_list_foreach	228:1:5790:5803	6285309	5	True				
ANR	6285400	Statement	(	228:16:5805:5805	6285309	6	True				
ANR	6285401	Statement	t	228:17:5806:5806	6285309	7	True				
ANR	6285402	Statement	->	228:18:5807:5808	6285309	8	True				
ANR	6285403	Statement	rows	228:20:5809:5812	6285309	9	True				
ANR	6285404	Statement	","	228:24:5813:5813	6285309	10	True				
ANR	6285405	Statement	iter	228:26:5815:5818	6285309	11	True				
ANR	6285406	Statement	","	228:30:5819:5819	6285309	12	True				
ANR	6285407	Statement	row	228:32:5821:5823	6285309	13	True				
ANR	6285408	Statement	)	228:35:5824:5824	6285309	14	True				
ANR	6285409	CompoundStatement		15:2:366:375	6285309	15					
ANR	6285410	IdentifierDeclStatement	char * item ;	229:2:5830:5840	6285309	0	True				
ANR	6285411	IdentifierDecl	* item		6285309	0					
ANR	6285412	IdentifierDeclType	char *		6285309	0					
ANR	6285413	Identifier	item		6285309	1					
ANR	6285414	IdentifierDeclStatement	int c = 0 ;	230:2:5844:5853	6285309	1	True				
ANR	6285415	IdentifierDecl	c = 0		6285309	0					
ANR	6285416	IdentifierDeclType	int		6285309	0					
ANR	6285417	Identifier	c		6285309	1					
ANR	6285418	AssignmentExpression	c = 0		6285309	2		=			
ANR	6285419	Identifier	c		6285309	0					
ANR	6285420	PrimaryExpression	0		6285309	1					
ANR	6285421	Statement	r_list_foreach	231:2:5857:5870	6285309	2	True				
ANR	6285422	Statement	(	231:17:5872:5872	6285309	3	True				
ANR	6285423	Statement	row	231:18:5873:5875	6285309	4	True				
ANR	6285424	Statement	->	231:21:5876:5877	6285309	5	True				
ANR	6285425	Statement	items	231:23:5878:5882	6285309	6	True				
ANR	6285426	Statement	","	231:28:5883:5883	6285309	7	True				
ANR	6285427	Statement	iter2	231:30:5885:5889	6285309	8	True				
ANR	6285428	Statement	","	231:35:5890:5890	6285309	9	True				
ANR	6285429	Statement	item	231:37:5892:5895	6285309	10	True				
ANR	6285430	Statement	)	231:41:5896:5896	6285309	11	True				
ANR	6285431	CompoundStatement		17:3:425:470	6285309	12					
ANR	6285432	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	232:3:5903:5948	6285309	0	True				
ANR	6285433	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		6285309	0					
ANR	6285434	IdentifierDeclType	RTableColumn *		6285309	0					
ANR	6285435	Identifier	col		6285309	1					
ANR	6285436	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		6285309	2		=			
ANR	6285437	Identifier	col		6285309	0					
ANR	6285438	CallExpression	"r_list_get_n ( t -> cols , c )"		6285309	1					
ANR	6285439	Callee	r_list_get_n		6285309	0					
ANR	6285440	Identifier	r_list_get_n		6285309	0					
ANR	6285441	ArgumentList	t -> cols		6285309	1					
ANR	6285442	Argument	t -> cols		6285309	0					
ANR	6285443	PtrMemberAccess	t -> cols		6285309	0					
ANR	6285444	Identifier	t		6285309	0					
ANR	6285445	Identifier	cols		6285309	1					
ANR	6285446	Argument	c		6285309	1					
ANR	6285447	Identifier	c		6285309	0					
ANR	6285448	IfStatement	if ( col )		6285309	1					
ANR	6285449	Condition	col	233:7:5957:5959	6285309	0	True				
ANR	6285450	Identifier	col		6285309	0					
ANR	6285451	CompoundStatement		18:12:484:484	6285309	1					
ANR	6285452	ExpressionStatement	"__strbuf_append_col_aligned ( sb , col , item )"	234:4:5968:6011	6285309	0	True				
ANR	6285453	CallExpression	"__strbuf_append_col_aligned ( sb , col , item )"		6285309	0					
ANR	6285454	Callee	__strbuf_append_col_aligned		6285309	0					
ANR	6285455	Identifier	__strbuf_append_col_aligned		6285309	0					
ANR	6285456	ArgumentList	sb		6285309	1					
ANR	6285457	Argument	sb		6285309	0					
ANR	6285458	Identifier	sb		6285309	0					
ANR	6285459	Argument	col		6285309	1					
ANR	6285460	Identifier	col		6285309	0					
ANR	6285461	Argument	item		6285309	2					
ANR	6285462	Identifier	item		6285309	0					
ANR	6285463	ExpressionStatement	c ++	236:3:6021:6024	6285309	2	True				
ANR	6285464	PostIncDecOperationExpression	c ++		6285309	0					
ANR	6285465	Identifier	c		6285309	0					
ANR	6285466	IncDec	++		6285309	1					
ANR	6285467	ExpressionStatement	"r_strbuf_append ( sb , ""\\n"" )"	238:2:6032:6058	6285309	13	True				
ANR	6285468	CallExpression	"r_strbuf_append ( sb , ""\\n"" )"		6285309	0					
ANR	6285469	Callee	r_strbuf_append		6285309	0					
ANR	6285470	Identifier	r_strbuf_append		6285309	0					
ANR	6285471	ArgumentList	sb		6285309	1					
ANR	6285472	Argument	sb		6285309	0					
ANR	6285473	Identifier	sb		6285309	0					
ANR	6285474	Argument	"""\\n"""		6285309	1					
ANR	6285475	PrimaryExpression	"""\\n"""		6285309	0					
ANR	6285476	ReturnStatement	return r_strbuf_drain ( sb ) ;	240:1:6064:6090	6285309	16	True				
ANR	6285477	CallExpression	r_strbuf_drain ( sb )		6285309	0					
ANR	6285478	Callee	r_strbuf_drain		6285309	0					
ANR	6285479	Identifier	r_strbuf_drain		6285309	0					
ANR	6285480	ArgumentList	sb		6285309	1					
ANR	6285481	Argument	sb		6285309	0					
ANR	6285482	Identifier	sb		6285309	0					
ANR	6285483	ReturnType	R_API char *		6285309	1					
ANR	6285484	Identifier	r_table_tostring		6285309	2					
ANR	6285485	ParameterList	RTable * t		6285309	3					
ANR	6285486	Parameter	RTable * t	216:29:5466:5474	6285309	0	True				
ANR	6285487	ParameterType	RTable *		6285309	0					
ANR	6285488	Identifier	t		6285309	1					
ANR	6285489	CFGEntryNode	ENTRY		6285309		True				
ANR	6285490	CFGExitNode	EXIT		6285309		True				
ANR	6285491	Symbol	col		6285309						
ANR	6285492	Symbol	item		6285309						
ANR	6285493	Symbol	r_strbuf_new		6285309						
ANR	6285494	Symbol	r_str_pad		6285309						
ANR	6285495	Symbol	c		6285309						
ANR	6285496	Symbol	iter2		6285309						
ANR	6285497	Symbol	t -> cols		6285309						
ANR	6285498	Symbol	iter		6285309						
ANR	6285499	Symbol	r_list_get_n		6285309						
ANR	6285500	Symbol	sb		6285309						
ANR	6285501	Symbol	col -> name		6285309						
ANR	6285502	Symbol	t		6285309						
ANR	6285503	Symbol	len		6285309						
ANR	6285504	Symbol	* col		6285309						
ANR	6285505	Symbol	r_strbuf_drain		6285309						
ANR	6285506	Symbol	r_strbuf_length		6285309						
ANR	6285507	Symbol	row		6285309						
ANR	6285508	Symbol	t -> showHeader		6285309						
ANR	6285509	Symbol	* t		6285309						
ANR	6285510	Function	r_table_tocsv	243:0:6095:7020							
ANR	6285511	FunctionDef	r_table_tocsv (RTable * t)		6285510	0					
ANR	6285512	CompoundStatement		243:37:6132:7020	6285510	0					
ANR	6285513	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	244:1:6135:6166	6285510	0	True				
ANR	6285514	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		6285510	0					
ANR	6285515	IdentifierDeclType	RStrBuf *		6285510	0					
ANR	6285516	Identifier	sb		6285510	1					
ANR	6285517	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		6285510	2		=			
ANR	6285518	Identifier	sb		6285510	0					
ANR	6285519	CallExpression	"r_strbuf_new ( """" )"		6285510	1					
ANR	6285520	Callee	r_strbuf_new		6285510	0					
ANR	6285521	Identifier	r_strbuf_new		6285510	0					
ANR	6285522	ArgumentList	""""""		6285510	1					
ANR	6285523	Argument	""""""		6285510	0					
ANR	6285524	PrimaryExpression	""""""		6285510	0					
ANR	6285525	IdentifierDeclStatement	RTableRow * row ;	245:1:6169:6183	6285510	1	True				
ANR	6285526	IdentifierDecl	* row		6285510	0					
ANR	6285527	IdentifierDeclType	RTableRow *		6285510	0					
ANR	6285528	Identifier	row		6285510	1					
ANR	6285529	IdentifierDeclStatement	RTableColumn * col ;	246:1:6186:6203	6285510	2	True				
ANR	6285530	IdentifierDecl	* col		6285510	0					
ANR	6285531	IdentifierDeclType	RTableColumn *		6285510	0					
ANR	6285532	Identifier	col		6285510	1					
ANR	6285533	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	247:1:6206:6229	6285510	3	True				
ANR	6285534	IdentifierDecl	* iter		6285510	0					
ANR	6285535	IdentifierDeclType	RListIter *		6285510	0					
ANR	6285536	Identifier	iter		6285510	1					
ANR	6285537	IdentifierDecl	* iter2		6285510	1					
ANR	6285538	IdentifierDeclType	RListIter *		6285510	0					
ANR	6285539	Identifier	iter2		6285510	1					
ANR	6285540	IfStatement	if ( t -> showHeader )		6285510	4					
ANR	6285541	Condition	t -> showHeader	248:5:6236:6248	6285510	0	True				
ANR	6285542	PtrMemberAccess	t -> showHeader		6285510	0					
ANR	6285543	Identifier	t		6285510	0					
ANR	6285544	Identifier	showHeader		6285510	1					
ANR	6285545	CompoundStatement		7:2:122:144	6285510	1					
ANR	6285546	IdentifierDeclStatement	"const char * comma = """" ;"	249:2:6255:6277	6285510	0	True				
ANR	6285547	IdentifierDecl	"* comma = """""		6285510	0					
ANR	6285548	IdentifierDeclType	const char *		6285510	0					
ANR	6285549	Identifier	comma		6285510	1					
ANR	6285550	AssignmentExpression	"* comma = """""		6285510	2		=			
ANR	6285551	Identifier	comma		6285510	0					
ANR	6285552	PrimaryExpression	""""""		6285510	1					
ANR	6285553	Statement	r_list_foreach	250:2:6281:6294	6285510	1	True				
ANR	6285554	Statement	(	250:17:6296:6296	6285510	2	True				
ANR	6285555	Statement	t	250:18:6297:6297	6285510	3	True				
ANR	6285556	Statement	->	250:19:6298:6299	6285510	4	True				
ANR	6285557	Statement	cols	250:21:6300:6303	6285510	5	True				
ANR	6285558	Statement	","	250:25:6304:6304	6285510	6	True				
ANR	6285559	Statement	iter	250:27:6306:6309	6285510	7	True				
ANR	6285560	Statement	","	250:31:6310:6310	6285510	8	True				
ANR	6285561	Statement	col	250:33:6312:6314	6285510	9	True				
ANR	6285562	Statement	)	250:36:6315:6315	6285510	10	True				
ANR	6285563	CompoundStatement		8:38:184:184	6285510	11					
ANR	6285564	IfStatement	"if ( strchr ( col -> name , ',' ) )"		6285510	0					
ANR	6285565	Condition	"strchr ( col -> name , ',' )"	251:7:6326:6348	6285510	0	True				
ANR	6285566	CallExpression	"strchr ( col -> name , ',' )"		6285510	0					
ANR	6285567	Callee	strchr		6285510	0					
ANR	6285568	Identifier	strchr		6285510	0					
ANR	6285569	ArgumentList	col -> name		6285510	1					
ANR	6285570	Argument	col -> name		6285510	0					
ANR	6285571	PtrMemberAccess	col -> name		6285510	0					
ANR	6285572	Identifier	col		6285510	0					
ANR	6285573	Identifier	name		6285510	1					
ANR	6285574	Argument	"','"		6285510	1					
ANR	6285575	PrimaryExpression	"','"		6285510	0					
ANR	6285576	CompoundStatement		9:32:218:218	6285510	1					
ANR	6285577	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"	253:4:6386:6437	6285510	0	True				
ANR	6285578	CallExpression	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"		6285510	0					
ANR	6285579	Callee	r_strbuf_appendf		6285510	0					
ANR	6285580	Identifier	r_strbuf_appendf		6285510	0					
ANR	6285581	ArgumentList	sb		6285510	1					
ANR	6285582	Argument	sb		6285510	0					
ANR	6285583	Identifier	sb		6285510	0					
ANR	6285584	Argument	"""%s\\""%s\\"""""		6285510	1					
ANR	6285585	PrimaryExpression	"""%s\\""%s\\"""""		6285510	0					
ANR	6285586	Argument	comma		6285510	2					
ANR	6285587	Identifier	comma		6285510	0					
ANR	6285588	Argument	col -> name		6285510	3					
ANR	6285589	PtrMemberAccess	col -> name		6285510	0					
ANR	6285590	Identifier	col		6285510	0					
ANR	6285591	Identifier	name		6285510	1					
ANR	6285592	ElseStatement	else		6285510	0					
ANR	6285593	CompoundStatement		12:10:316:316	6285510	0					
ANR	6285594	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s%s"" , comma , col -> name )"	255:4:6455:6502	6285510	0	True				
ANR	6285595	CallExpression	"r_strbuf_appendf ( sb , ""%s%s"" , comma , col -> name )"		6285510	0					
ANR	6285596	Callee	r_strbuf_appendf		6285510	0					
ANR	6285597	Identifier	r_strbuf_appendf		6285510	0					
ANR	6285598	ArgumentList	sb		6285510	1					
ANR	6285599	Argument	sb		6285510	0					
ANR	6285600	Identifier	sb		6285510	0					
ANR	6285601	Argument	"""%s%s"""		6285510	1					
ANR	6285602	PrimaryExpression	"""%s%s"""		6285510	0					
ANR	6285603	Argument	comma		6285510	2					
ANR	6285604	Identifier	comma		6285510	0					
ANR	6285605	Argument	col -> name		6285510	3					
ANR	6285606	PtrMemberAccess	col -> name		6285510	0					
ANR	6285607	Identifier	col		6285510	0					
ANR	6285608	Identifier	name		6285510	1					
ANR	6285609	ExpressionStatement	"comma = "","""	257:3:6512:6523	6285510	1	True				
ANR	6285610	AssignmentExpression	"comma = "","""		6285510	0		=			
ANR	6285611	Identifier	comma		6285510	0					
ANR	6285612	PrimaryExpression	""","""		6285510	1					
ANR	6285613	ExpressionStatement	"r_strbuf_append ( sb , ""\\n"" )"	259:2:6531:6557	6285510	12	True				
ANR	6285614	CallExpression	"r_strbuf_append ( sb , ""\\n"" )"		6285510	0					
ANR	6285615	Callee	r_strbuf_append		6285510	0					
ANR	6285616	Identifier	r_strbuf_append		6285510	0					
ANR	6285617	ArgumentList	sb		6285510	1					
ANR	6285618	Argument	sb		6285510	0					
ANR	6285619	Identifier	sb		6285510	0					
ANR	6285620	Argument	"""\\n"""		6285510	1					
ANR	6285621	PrimaryExpression	"""\\n"""		6285510	0					
ANR	6285622	Statement	r_list_foreach	261:1:6563:6576	6285510	5	True				
ANR	6285623	Statement	(	261:16:6578:6578	6285510	6	True				
ANR	6285624	Statement	t	261:17:6579:6579	6285510	7	True				
ANR	6285625	Statement	->	261:18:6580:6581	6285510	8	True				
ANR	6285626	Statement	rows	261:20:6582:6585	6285510	9	True				
ANR	6285627	Statement	","	261:24:6586:6586	6285510	10	True				
ANR	6285628	Statement	iter	261:26:6588:6591	6285510	11	True				
ANR	6285629	Statement	","	261:30:6592:6592	6285510	12	True				
ANR	6285630	Statement	row	261:32:6594:6596	6285510	13	True				
ANR	6285631	Statement	)	261:35:6597:6597	6285510	14	True				
ANR	6285632	CompoundStatement		22:2:497:519	6285510	15					
ANR	6285633	IdentifierDeclStatement	char * item ;	262:2:6603:6613	6285510	0	True				
ANR	6285634	IdentifierDecl	* item		6285510	0					
ANR	6285635	IdentifierDeclType	char *		6285510	0					
ANR	6285636	Identifier	item		6285510	1					
ANR	6285637	IdentifierDeclStatement	int c = 0 ;	263:2:6617:6626	6285510	1	True				
ANR	6285638	IdentifierDecl	c = 0		6285510	0					
ANR	6285639	IdentifierDeclType	int		6285510	0					
ANR	6285640	Identifier	c		6285510	1					
ANR	6285641	AssignmentExpression	c = 0		6285510	2		=			
ANR	6285642	Identifier	c		6285510	0					
ANR	6285643	PrimaryExpression	0		6285510	1					
ANR	6285644	IdentifierDeclStatement	"const char * comma = """" ;"	264:2:6630:6652	6285510	2	True				
ANR	6285645	IdentifierDecl	"* comma = """""		6285510	0					
ANR	6285646	IdentifierDeclType	const char *		6285510	0					
ANR	6285647	Identifier	comma		6285510	1					
ANR	6285648	AssignmentExpression	"* comma = """""		6285510	2		=			
ANR	6285649	Identifier	comma		6285510	0					
ANR	6285650	PrimaryExpression	""""""		6285510	1					
ANR	6285651	Statement	r_list_foreach	265:2:6656:6669	6285510	3	True				
ANR	6285652	Statement	(	265:17:6671:6671	6285510	4	True				
ANR	6285653	Statement	row	265:18:6672:6674	6285510	5	True				
ANR	6285654	Statement	->	265:21:6675:6676	6285510	6	True				
ANR	6285655	Statement	items	265:23:6677:6681	6285510	7	True				
ANR	6285656	Statement	","	265:28:6682:6682	6285510	8	True				
ANR	6285657	Statement	iter2	265:30:6684:6688	6285510	9	True				
ANR	6285658	Statement	","	265:35:6689:6689	6285510	10	True				
ANR	6285659	Statement	item	265:37:6691:6694	6285510	11	True				
ANR	6285660	Statement	)	265:41:6695:6695	6285510	12	True				
ANR	6285661	CompoundStatement		24:3:569:614	6285510	13					
ANR	6285662	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	266:3:6702:6747	6285510	0	True				
ANR	6285663	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		6285510	0					
ANR	6285664	IdentifierDeclType	RTableColumn *		6285510	0					
ANR	6285665	Identifier	col		6285510	1					
ANR	6285666	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		6285510	2		=			
ANR	6285667	Identifier	col		6285510	0					
ANR	6285668	CallExpression	"r_list_get_n ( t -> cols , c )"		6285510	1					
ANR	6285669	Callee	r_list_get_n		6285510	0					
ANR	6285670	Identifier	r_list_get_n		6285510	0					
ANR	6285671	ArgumentList	t -> cols		6285510	1					
ANR	6285672	Argument	t -> cols		6285510	0					
ANR	6285673	PtrMemberAccess	t -> cols		6285510	0					
ANR	6285674	Identifier	t		6285510	0					
ANR	6285675	Identifier	cols		6285510	1					
ANR	6285676	Argument	c		6285510	1					
ANR	6285677	Identifier	c		6285510	0					
ANR	6285678	IfStatement	if ( col )		6285510	1					
ANR	6285679	Condition	col	267:7:6756:6758	6285510	0	True				
ANR	6285680	Identifier	col		6285510	0					
ANR	6285681	CompoundStatement		25:12:628:628	6285510	1					
ANR	6285682	IfStatement	"if ( strchr ( col -> name , ',' ) )"		6285510	0					
ANR	6285683	Condition	"strchr ( col -> name , ',' )"	268:8:6771:6793	6285510	0	True				
ANR	6285684	CallExpression	"strchr ( col -> name , ',' )"		6285510	0					
ANR	6285685	Callee	strchr		6285510	0					
ANR	6285686	Identifier	strchr		6285510	0					
ANR	6285687	ArgumentList	col -> name		6285510	1					
ANR	6285688	Argument	col -> name		6285510	0					
ANR	6285689	PtrMemberAccess	col -> name		6285510	0					
ANR	6285690	Identifier	col		6285510	0					
ANR	6285691	Identifier	name		6285510	1					
ANR	6285692	Argument	"','"		6285510	1					
ANR	6285693	PrimaryExpression	"','"		6285510	0					
ANR	6285694	CompoundStatement		26:33:663:663	6285510	1					
ANR	6285695	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"	269:5:6803:6854	6285510	0	True				
ANR	6285696	CallExpression	"r_strbuf_appendf ( sb , ""%s\\""%s\\"""" , comma , col -> name )"		6285510	0					
ANR	6285697	Callee	r_strbuf_appendf		6285510	0					
ANR	6285698	Identifier	r_strbuf_appendf		6285510	0					
ANR	6285699	ArgumentList	sb		6285510	1					
ANR	6285700	Argument	sb		6285510	0					
ANR	6285701	Identifier	sb		6285510	0					
ANR	6285702	Argument	"""%s\\""%s\\"""""		6285510	1					
ANR	6285703	PrimaryExpression	"""%s\\""%s\\"""""		6285510	0					
ANR	6285704	Argument	comma		6285510	2					
ANR	6285705	Identifier	comma		6285510	0					
ANR	6285706	Argument	col -> name		6285510	3					
ANR	6285707	PtrMemberAccess	col -> name		6285510	0					
ANR	6285708	Identifier	col		6285510	0					
ANR	6285709	Identifier	name		6285510	1					
ANR	6285710	ElseStatement	else		6285510	0					
ANR	6285711	CompoundStatement		28:11:734:734	6285510	0					
ANR	6285712	ExpressionStatement	"r_strbuf_appendf ( sb , ""%s%s"" , comma , item )"	271:5:6874:6916	6285510	0	True				
ANR	6285713	CallExpression	"r_strbuf_appendf ( sb , ""%s%s"" , comma , item )"		6285510	0					
ANR	6285714	Callee	r_strbuf_appendf		6285510	0					
ANR	6285715	Identifier	r_strbuf_appendf		6285510	0					
ANR	6285716	ArgumentList	sb		6285510	1					
ANR	6285717	Argument	sb		6285510	0					
ANR	6285718	Identifier	sb		6285510	0					
ANR	6285719	Argument	"""%s%s"""		6285510	1					
ANR	6285720	PrimaryExpression	"""%s%s"""		6285510	0					
ANR	6285721	Argument	comma		6285510	2					
ANR	6285722	Identifier	comma		6285510	0					
ANR	6285723	Argument	item		6285510	3					
ANR	6285724	Identifier	item		6285510	0					
ANR	6285725	ExpressionStatement	"comma = "","""	273:4:6928:6939	6285510	1	True				
ANR	6285726	AssignmentExpression	"comma = "","""		6285510	0		=			
ANR	6285727	Identifier	comma		6285510	0					
ANR	6285728	PrimaryExpression	""","""		6285510	1					
ANR	6285729	ExpressionStatement	c ++	275:3:6949:6952	6285510	2	True				
ANR	6285730	PostIncDecOperationExpression	c ++		6285510	0					
ANR	6285731	Identifier	c		6285510	0					
ANR	6285732	IncDec	++		6285510	1					
ANR	6285733	ExpressionStatement	"r_strbuf_append ( sb , ""\\n"" )"	277:2:6960:6986	6285510	14	True				
ANR	6285734	CallExpression	"r_strbuf_append ( sb , ""\\n"" )"		6285510	0					
ANR	6285735	Callee	r_strbuf_append		6285510	0					
ANR	6285736	Identifier	r_strbuf_append		6285510	0					
ANR	6285737	ArgumentList	sb		6285510	1					
ANR	6285738	Argument	sb		6285510	0					
ANR	6285739	Identifier	sb		6285510	0					
ANR	6285740	Argument	"""\\n"""		6285510	1					
ANR	6285741	PrimaryExpression	"""\\n"""		6285510	0					
ANR	6285742	ReturnStatement	return r_strbuf_drain ( sb ) ;	279:1:6992:7018	6285510	16	True				
ANR	6285743	CallExpression	r_strbuf_drain ( sb )		6285510	0					
ANR	6285744	Callee	r_strbuf_drain		6285510	0					
ANR	6285745	Identifier	r_strbuf_drain		6285510	0					
ANR	6285746	ArgumentList	sb		6285510	1					
ANR	6285747	Argument	sb		6285510	0					
ANR	6285748	Identifier	sb		6285510	0					
ANR	6285749	ReturnType	R_API char *		6285510	1					
ANR	6285750	Identifier	r_table_tocsv		6285510	2					
ANR	6285751	ParameterList	RTable * t		6285510	3					
ANR	6285752	Parameter	RTable * t	243:26:6121:6129	6285510	0	True				
ANR	6285753	ParameterType	RTable *		6285510	0					
ANR	6285754	Identifier	t		6285510	1					
ANR	6285755	CFGEntryNode	ENTRY		6285510		True				
ANR	6285756	CFGExitNode	EXIT		6285510		True				
ANR	6285757	Symbol	col		6285510						
ANR	6285758	Symbol	item		6285510						
ANR	6285759	Symbol	r_strbuf_new		6285510						
ANR	6285760	Symbol	c		6285510						
ANR	6285761	Symbol	iter2		6285510						
ANR	6285762	Symbol	t -> cols		6285510						
ANR	6285763	Symbol	iter		6285510						
ANR	6285764	Symbol	strchr		6285510						
ANR	6285765	Symbol	r_list_get_n		6285510						
ANR	6285766	Symbol	sb		6285510						
ANR	6285767	Symbol	comma		6285510						
ANR	6285768	Symbol	col -> name		6285510						
ANR	6285769	Symbol	t		6285510						
ANR	6285770	Symbol	* col		6285510						
ANR	6285771	Symbol	r_strbuf_drain		6285510						
ANR	6285772	Symbol	row		6285510						
ANR	6285773	Symbol	t -> showHeader		6285510						
ANR	6285774	Symbol	* t		6285510						
ANR	6285775	Function	r_table_tojson	282:0:7023:7664							
ANR	6285776	FunctionDef	r_table_tojson (RTable * t)		6285775	0					
ANR	6285777	CompoundStatement		282:38:7061:7664	6285775	0					
ANR	6285778	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	283:1:7064:7082	6285775	0	True				
ANR	6285779	IdentifierDecl	* pj = pj_new ( )		6285775	0					
ANR	6285780	IdentifierDeclType	PJ *		6285775	0					
ANR	6285781	Identifier	pj		6285775	1					
ANR	6285782	AssignmentExpression	* pj = pj_new ( )		6285775	2		=			
ANR	6285783	Identifier	pj		6285775	0					
ANR	6285784	CallExpression	pj_new ( )		6285775	1					
ANR	6285785	Callee	pj_new		6285775	0					
ANR	6285786	Identifier	pj_new		6285775	0					
ANR	6285787	ArgumentList			6285775	1					
ANR	6285788	IdentifierDeclStatement	RTableRow * row ;	284:1:7085:7099	6285775	1	True				
ANR	6285789	IdentifierDecl	* row		6285775	0					
ANR	6285790	IdentifierDeclType	RTableRow *		6285775	0					
ANR	6285791	Identifier	row		6285775	1					
ANR	6285792	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	285:1:7102:7125	6285775	2	True				
ANR	6285793	IdentifierDecl	* iter		6285775	0					
ANR	6285794	IdentifierDeclType	RListIter *		6285775	0					
ANR	6285795	Identifier	iter		6285775	1					
ANR	6285796	IdentifierDecl	* iter2		6285775	1					
ANR	6285797	IdentifierDeclType	RListIter *		6285775	0					
ANR	6285798	Identifier	iter2		6285775	1					
ANR	6285799	ExpressionStatement	pj_a ( pj )	286:1:7128:7137	6285775	3	True				
ANR	6285800	CallExpression	pj_a ( pj )		6285775	0					
ANR	6285801	Callee	pj_a		6285775	0					
ANR	6285802	Identifier	pj_a		6285775	0					
ANR	6285803	ArgumentList	pj		6285775	1					
ANR	6285804	Argument	pj		6285775	0					
ANR	6285805	Identifier	pj		6285775	0					
ANR	6285806	Statement	r_list_foreach	287:1:7140:7153	6285775	4	True				
ANR	6285807	Statement	(	287:16:7155:7155	6285775	5	True				
ANR	6285808	Statement	t	287:17:7156:7156	6285775	6	True				
ANR	6285809	Statement	->	287:18:7157:7158	6285775	7	True				
ANR	6285810	Statement	rows	287:20:7159:7162	6285775	8	True				
ANR	6285811	Statement	","	287:24:7163:7163	6285775	9	True				
ANR	6285812	Statement	iter	287:26:7165:7168	6285775	10	True				
ANR	6285813	Statement	","	287:30:7169:7169	6285775	11	True				
ANR	6285814	Statement	row	287:32:7171:7173	6285775	12	True				
ANR	6285815	Statement	)	287:35:7174:7174	6285775	13	True				
ANR	6285816	CompoundStatement		8:2:132:141	6285775	14					
ANR	6285817	IdentifierDeclStatement	char * item ;	288:2:7180:7190	6285775	0	True				
ANR	6285818	IdentifierDecl	* item		6285775	0					
ANR	6285819	IdentifierDeclType	char *		6285775	0					
ANR	6285820	Identifier	item		6285775	1					
ANR	6285821	IdentifierDeclStatement	int c = 0 ;	289:2:7194:7203	6285775	1	True				
ANR	6285822	IdentifierDecl	c = 0		6285775	0					
ANR	6285823	IdentifierDeclType	int		6285775	0					
ANR	6285824	Identifier	c		6285775	1					
ANR	6285825	AssignmentExpression	c = 0		6285775	2		=			
ANR	6285826	Identifier	c		6285775	0					
ANR	6285827	PrimaryExpression	0		6285775	1					
ANR	6285828	ExpressionStatement	pj_o ( pj )	290:2:7207:7216	6285775	2	True				
ANR	6285829	CallExpression	pj_o ( pj )		6285775	0					
ANR	6285830	Callee	pj_o		6285775	0					
ANR	6285831	Identifier	pj_o		6285775	0					
ANR	6285832	ArgumentList	pj		6285775	1					
ANR	6285833	Argument	pj		6285775	0					
ANR	6285834	Identifier	pj		6285775	0					
ANR	6285835	Statement	r_list_foreach	291:2:7220:7233	6285775	3	True				
ANR	6285836	Statement	(	291:17:7235:7235	6285775	4	True				
ANR	6285837	Statement	row	291:18:7236:7238	6285775	5	True				
ANR	6285838	Statement	->	291:21:7239:7240	6285775	6	True				
ANR	6285839	Statement	items	291:23:7241:7245	6285775	7	True				
ANR	6285840	Statement	","	291:28:7246:7246	6285775	8	True				
ANR	6285841	Statement	iter2	291:30:7248:7252	6285775	9	True				
ANR	6285842	Statement	","	291:35:7253:7253	6285775	10	True				
ANR	6285843	Statement	item	291:37:7255:7258	6285775	11	True				
ANR	6285844	Statement	)	291:41:7259:7259	6285775	12	True				
ANR	6285845	CompoundStatement		11:3:204:249	6285775	13					
ANR	6285846	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , c ) ;"	292:3:7266:7311	6285775	0	True				
ANR	6285847	IdentifierDecl	"* col = r_list_get_n ( t -> cols , c )"		6285775	0					
ANR	6285848	IdentifierDeclType	RTableColumn *		6285775	0					
ANR	6285849	Identifier	col		6285775	1					
ANR	6285850	AssignmentExpression	"* col = r_list_get_n ( t -> cols , c )"		6285775	2		=			
ANR	6285851	Identifier	col		6285775	0					
ANR	6285852	CallExpression	"r_list_get_n ( t -> cols , c )"		6285775	1					
ANR	6285853	Callee	r_list_get_n		6285775	0					
ANR	6285854	Identifier	r_list_get_n		6285775	0					
ANR	6285855	ArgumentList	t -> cols		6285775	1					
ANR	6285856	Argument	t -> cols		6285775	0					
ANR	6285857	PtrMemberAccess	t -> cols		6285775	0					
ANR	6285858	Identifier	t		6285775	0					
ANR	6285859	Identifier	cols		6285775	1					
ANR	6285860	Argument	c		6285775	1					
ANR	6285861	Identifier	c		6285775	0					
ANR	6285862	IfStatement	if ( col )		6285775	1					
ANR	6285863	Condition	col	293:7:7320:7322	6285775	0	True				
ANR	6285864	Identifier	col		6285775	0					
ANR	6285865	CompoundStatement		12:12:263:263	6285775	1					
ANR	6285866	IfStatement	if ( col -> type == & r_table_type_number )		6285775	0					
ANR	6285867	Condition	col -> type == & r_table_type_number	294:8:7335:7367	6285775	0	True				
ANR	6285868	EqualityExpression	col -> type == & r_table_type_number		6285775	0		==			
ANR	6285869	PtrMemberAccess	col -> type		6285775	0					
ANR	6285870	Identifier	col		6285775	0					
ANR	6285871	Identifier	type		6285775	1					
ANR	6285872	UnaryOperationExpression	& r_table_type_number		6285775	1					
ANR	6285873	UnaryOperator	&		6285775	0					
ANR	6285874	Identifier	r_table_type_number		6285775	1					
ANR	6285875	CompoundStatement		14:5:315:346	6285775	1					
ANR	6285876	IdentifierDeclStatement	"ut64 n = r_num_get ( NULL , item ) ;"	295:5:7377:7408	6285775	0	True				
ANR	6285877	IdentifierDecl	"n = r_num_get ( NULL , item )"		6285775	0					
ANR	6285878	IdentifierDeclType	ut64		6285775	0					
ANR	6285879	Identifier	n		6285775	1					
ANR	6285880	AssignmentExpression	"n = r_num_get ( NULL , item )"		6285775	2		=			
ANR	6285881	Identifier	n		6285775	0					
ANR	6285882	CallExpression	"r_num_get ( NULL , item )"		6285775	1					
ANR	6285883	Callee	r_num_get		6285775	0					
ANR	6285884	Identifier	r_num_get		6285775	0					
ANR	6285885	ArgumentList	NULL		6285775	1					
ANR	6285886	Argument	NULL		6285775	0					
ANR	6285887	Identifier	NULL		6285775	0					
ANR	6285888	Argument	item		6285775	1					
ANR	6285889	Identifier	item		6285775	0					
ANR	6285890	IfStatement	if ( n )		6285775	1					
ANR	6285891	Condition	n	296:9:7419:7419	6285775	0	True				
ANR	6285892	Identifier	n		6285775	0					
ANR	6285893	CompoundStatement		15:12:360:360	6285775	1					
ANR	6285894	ExpressionStatement	"pj_kn ( pj , col -> name , n )"	297:6:7430:7454	6285775	0	True				
ANR	6285895	CallExpression	"pj_kn ( pj , col -> name , n )"		6285775	0					
ANR	6285896	Callee	pj_kn		6285775	0					
ANR	6285897	Identifier	pj_kn		6285775	0					
ANR	6285898	ArgumentList	pj		6285775	1					
ANR	6285899	Argument	pj		6285775	0					
ANR	6285900	Identifier	pj		6285775	0					
ANR	6285901	Argument	col -> name		6285775	1					
ANR	6285902	PtrMemberAccess	col -> name		6285775	0					
ANR	6285903	Identifier	col		6285775	0					
ANR	6285904	Identifier	name		6285775	1					
ANR	6285905	Argument	n		6285775	2					
ANR	6285906	Identifier	n		6285775	0					
ANR	6285907	ElseStatement	else		6285775	0					
ANR	6285908	IfStatement	if ( * item && * item != '0' )		6285775	0					
ANR	6285909	Condition	* item && * item != '0'	298:16:7472:7492	6285775	0	True				
ANR	6285910	AndExpression	* item && * item != '0'		6285775	0		&&			
ANR	6285911	UnaryOperationExpression	* item		6285775	0					
ANR	6285912	UnaryOperator	*		6285775	0					
ANR	6285913	Identifier	item		6285775	1					
ANR	6285914	EqualityExpression	* item != '0'		6285775	1		!=			
ANR	6285915	UnaryOperationExpression	* item		6285775	0					
ANR	6285916	UnaryOperator	*		6285775	0					
ANR	6285917	Identifier	item		6285775	1					
ANR	6285918	PrimaryExpression	'0'		6285775	1					
ANR	6285919	CompoundStatement		17:39:433:433	6285775	1					
ANR	6285920	ExpressionStatement	"pj_ks ( pj , col -> name , item )"	299:6:7503:7530	6285775	0	True				
ANR	6285921	CallExpression	"pj_ks ( pj , col -> name , item )"		6285775	0					
ANR	6285922	Callee	pj_ks		6285775	0					
ANR	6285923	Identifier	pj_ks		6285775	0					
ANR	6285924	ArgumentList	pj		6285775	1					
ANR	6285925	Argument	pj		6285775	0					
ANR	6285926	Identifier	pj		6285775	0					
ANR	6285927	Argument	col -> name		6285775	1					
ANR	6285928	PtrMemberAccess	col -> name		6285775	0					
ANR	6285929	Identifier	col		6285775	0					
ANR	6285930	Identifier	name		6285775	1					
ANR	6285931	Argument	item		6285775	2					
ANR	6285932	Identifier	item		6285775	0					
ANR	6285933	ElseStatement	else		6285775	0					
ANR	6285934	CompoundStatement		20:11:488:488	6285775	0					
ANR	6285935	ExpressionStatement	"pj_ks ( pj , col -> name , item )"	302:5:7557:7584	6285775	0	True				
ANR	6285936	CallExpression	"pj_ks ( pj , col -> name , item )"		6285775	0					
ANR	6285937	Callee	pj_ks		6285775	0					
ANR	6285938	Identifier	pj_ks		6285775	0					
ANR	6285939	ArgumentList	pj		6285775	1					
ANR	6285940	Argument	pj		6285775	0					
ANR	6285941	Identifier	pj		6285775	0					
ANR	6285942	Argument	col -> name		6285775	1					
ANR	6285943	PtrMemberAccess	col -> name		6285775	0					
ANR	6285944	Identifier	col		6285775	0					
ANR	6285945	Identifier	name		6285775	1					
ANR	6285946	Argument	item		6285775	2					
ANR	6285947	Identifier	item		6285775	0					
ANR	6285948	ExpressionStatement	c ++	305:3:7600:7603	6285775	2	True				
ANR	6285949	PostIncDecOperationExpression	c ++		6285775	0					
ANR	6285950	Identifier	c		6285775	0					
ANR	6285951	IncDec	++		6285775	1					
ANR	6285952	ExpressionStatement	pj_end ( pj )	307:2:7611:7622	6285775	14	True				
ANR	6285953	CallExpression	pj_end ( pj )		6285775	0					
ANR	6285954	Callee	pj_end		6285775	0					
ANR	6285955	Identifier	pj_end		6285775	0					
ANR	6285956	ArgumentList	pj		6285775	1					
ANR	6285957	Argument	pj		6285775	0					
ANR	6285958	Identifier	pj		6285775	0					
ANR	6285959	ExpressionStatement	pj_end ( pj )	309:1:7628:7639	6285775	15	True				
ANR	6285960	CallExpression	pj_end ( pj )		6285775	0					
ANR	6285961	Callee	pj_end		6285775	0					
ANR	6285962	Identifier	pj_end		6285775	0					
ANR	6285963	ArgumentList	pj		6285775	1					
ANR	6285964	Argument	pj		6285775	0					
ANR	6285965	Identifier	pj		6285775	0					
ANR	6285966	ReturnStatement	return pj_drain ( pj ) ;	310:1:7642:7662	6285775	16	True				
ANR	6285967	CallExpression	pj_drain ( pj )		6285775	0					
ANR	6285968	Callee	pj_drain		6285775	0					
ANR	6285969	Identifier	pj_drain		6285775	0					
ANR	6285970	ArgumentList	pj		6285775	1					
ANR	6285971	Argument	pj		6285775	0					
ANR	6285972	Identifier	pj		6285775	0					
ANR	6285973	ReturnType	R_API char *		6285775	1					
ANR	6285974	Identifier	r_table_tojson		6285775	2					
ANR	6285975	ParameterList	RTable * t		6285775	3					
ANR	6285976	Parameter	RTable * t	282:27:7050:7058	6285775	0	True				
ANR	6285977	ParameterType	RTable *		6285775	0					
ANR	6285978	Identifier	t		6285775	1					
ANR	6285979	CFGEntryNode	ENTRY		6285775		True				
ANR	6285980	CFGExitNode	EXIT		6285775		True				
ANR	6285981	Symbol	col		6285775						
ANR	6285982	Symbol	item		6285775						
ANR	6285983	Symbol	col -> type		6285775						
ANR	6285984	Symbol	c		6285775						
ANR	6285985	Symbol	NULL		6285775						
ANR	6285986	Symbol	iter2		6285775						
ANR	6285987	Symbol	t -> cols		6285775						
ANR	6285988	Symbol	iter		6285775						
ANR	6285989	Symbol	r_list_get_n		6285775						
ANR	6285990	Symbol	n		6285775						
ANR	6285991	Symbol	& r_table_type_number		6285775						
ANR	6285992	Symbol	col -> name		6285775						
ANR	6285993	Symbol	t		6285775						
ANR	6285994	Symbol	* col		6285775						
ANR	6285995	Symbol	* item		6285775						
ANR	6285996	Symbol	pj_drain		6285775						
ANR	6285997	Symbol	pj_new		6285775						
ANR	6285998	Symbol	pj		6285775						
ANR	6285999	Symbol	r_num_get		6285775						
ANR	6286000	Symbol	row		6285775						
ANR	6286001	Symbol	* t		6285775						
ANR	6286002	Function	r_table_filter	313:0:7667:8298							
ANR	6286003	FunctionDef	"r_table_filter (RTable * t , int nth , int op , const char * un)"		6286002	0					
ANR	6286004	CompoundStatement		313:70:7737:8298	6286002	0					
ANR	6286005	IdentifierDeclStatement	RTableRow * row ;	314:1:7740:7754	6286002	0	True				
ANR	6286006	IdentifierDecl	* row		6286002	0					
ANR	6286007	IdentifierDeclType	RTableRow *		6286002	0					
ANR	6286008	Identifier	row		6286002	1					
ANR	6286009	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	315:1:7757:7780	6286002	1	True				
ANR	6286010	IdentifierDecl	* iter		6286002	0					
ANR	6286011	IdentifierDeclType	RListIter *		6286002	0					
ANR	6286012	Identifier	iter		6286002	1					
ANR	6286013	IdentifierDecl	* iter2		6286002	1					
ANR	6286014	IdentifierDeclType	RListIter *		6286002	0					
ANR	6286015	Identifier	iter2		6286002	1					
ANR	6286016	IdentifierDeclStatement	"ut64 uv = r_num_get ( NULL , un ) ;"	316:1:7783:7813	6286002	2	True				
ANR	6286017	IdentifierDecl	"uv = r_num_get ( NULL , un )"		6286002	0					
ANR	6286018	IdentifierDeclType	ut64		6286002	0					
ANR	6286019	Identifier	uv		6286002	1					
ANR	6286020	AssignmentExpression	"uv = r_num_get ( NULL , un )"		6286002	2		=			
ANR	6286021	Identifier	uv		6286002	0					
ANR	6286022	CallExpression	"r_num_get ( NULL , un )"		6286002	1					
ANR	6286023	Callee	r_num_get		6286002	0					
ANR	6286024	Identifier	r_num_get		6286002	0					
ANR	6286025	ArgumentList	NULL		6286002	1					
ANR	6286026	Argument	NULL		6286002	0					
ANR	6286027	Identifier	NULL		6286002	0					
ANR	6286028	Argument	un		6286002	1					
ANR	6286029	Identifier	un		6286002	0					
ANR	6286030	Statement	r_list_foreach_safe	317:1:7816:7834	6286002	3	True				
ANR	6286031	Statement	(	317:21:7836:7836	6286002	4	True				
ANR	6286032	Statement	t	317:22:7837:7837	6286002	5	True				
ANR	6286033	Statement	->	317:23:7838:7839	6286002	6	True				
ANR	6286034	Statement	rows	317:25:7840:7843	6286002	7	True				
ANR	6286035	Statement	","	317:29:7844:7844	6286002	8	True				
ANR	6286036	Statement	iter	317:31:7846:7849	6286002	9	True				
ANR	6286037	Statement	","	317:35:7850:7850	6286002	10	True				
ANR	6286038	Statement	iter2	317:37:7852:7856	6286002	11	True				
ANR	6286039	Statement	","	317:42:7857:7857	6286002	12	True				
ANR	6286040	Statement	row	317:44:7859:7861	6286002	13	True				
ANR	6286041	Statement	)	317:47:7862:7862	6286002	14	True				
ANR	6286042	CompoundStatement		8:2:215:232	6286002	15					
ANR	6286043	IdentifierDeclStatement	"const char * nn = r_list_get_n ( row -> items , nth ) ;"	318:2:7868:7915	6286002	0	True				
ANR	6286044	IdentifierDecl	"* nn = r_list_get_n ( row -> items , nth )"		6286002	0					
ANR	6286045	IdentifierDeclType	const char *		6286002	0					
ANR	6286046	Identifier	nn		6286002	1					
ANR	6286047	AssignmentExpression	"* nn = r_list_get_n ( row -> items , nth )"		6286002	2		=			
ANR	6286048	Identifier	nn		6286002	0					
ANR	6286049	CallExpression	"r_list_get_n ( row -> items , nth )"		6286002	1					
ANR	6286050	Callee	r_list_get_n		6286002	0					
ANR	6286051	Identifier	r_list_get_n		6286002	0					
ANR	6286052	ArgumentList	row -> items		6286002	1					
ANR	6286053	Argument	row -> items		6286002	0					
ANR	6286054	PtrMemberAccess	row -> items		6286002	0					
ANR	6286055	Identifier	row		6286002	0					
ANR	6286056	Identifier	items		6286002	1					
ANR	6286057	Argument	nth		6286002	1					
ANR	6286058	Identifier	nth		6286002	0					
ANR	6286059	IdentifierDeclStatement	"ut64 nv = r_num_get ( NULL , nn ) ;"	319:2:7919:7949	6286002	1	True				
ANR	6286060	IdentifierDecl	"nv = r_num_get ( NULL , nn )"		6286002	0					
ANR	6286061	IdentifierDeclType	ut64		6286002	0					
ANR	6286062	Identifier	nv		6286002	1					
ANR	6286063	AssignmentExpression	"nv = r_num_get ( NULL , nn )"		6286002	2		=			
ANR	6286064	Identifier	nv		6286002	0					
ANR	6286065	CallExpression	"r_num_get ( NULL , nn )"		6286002	1					
ANR	6286066	Callee	r_num_get		6286002	0					
ANR	6286067	Identifier	r_num_get		6286002	0					
ANR	6286068	ArgumentList	NULL		6286002	1					
ANR	6286069	Argument	NULL		6286002	0					
ANR	6286070	Identifier	NULL		6286002	0					
ANR	6286071	Argument	nn		6286002	1					
ANR	6286072	Identifier	nn		6286002	0					
ANR	6286073	IdentifierDeclStatement	bool match = true ;	320:2:7953:7970	6286002	2	True				
ANR	6286074	IdentifierDecl	match = true		6286002	0					
ANR	6286075	IdentifierDeclType	bool		6286002	0					
ANR	6286076	Identifier	match		6286002	1					
ANR	6286077	AssignmentExpression	match = true		6286002	2		=			
ANR	6286078	Identifier	true		6286002	0					
ANR	6286079	Identifier	true		6286002	1					
ANR	6286080	SwitchStatement	switch ( op )		6286002	3					
ANR	6286081	Condition	op	321:10:7982:7983	6286002	0	True				
ANR	6286082	Identifier	op		6286002	0					
ANR	6286083	CompoundStatement		9:14:248:248	6286002	1					
ANR	6286084	Label	case '>' :	322:2:7990:7998	6286002	0	True				
ANR	6286085	ExpressionStatement	match = ( nv > uv )	323:3:8003:8020	6286002	1	True				
ANR	6286086	AssignmentExpression	match = ( nv > uv )		6286002	0		=			
ANR	6286087	Identifier	match		6286002	0					
ANR	6286088	RelationalExpression	nv > uv		6286002	1		>			
ANR	6286089	Identifier	nv		6286002	0					
ANR	6286090	Identifier	uv		6286002	1					
ANR	6286091	BreakStatement	break ;	324:3:8025:8030	6286002	2	True				
ANR	6286092	Label	case '<' :	325:2:8034:8042	6286002	3	True				
ANR	6286093	ExpressionStatement	match = ( nv < uv )	326:3:8047:8064	6286002	4	True				
ANR	6286094	AssignmentExpression	match = ( nv < uv )		6286002	0		=			
ANR	6286095	Identifier	match		6286002	0					
ANR	6286096	RelationalExpression	nv < uv		6286002	1		<			
ANR	6286097	Identifier	nv		6286002	0					
ANR	6286098	Identifier	uv		6286002	1					
ANR	6286099	BreakStatement	break ;	327:3:8069:8074	6286002	5	True				
ANR	6286100	Label	case '=' :	328:2:8078:8086	6286002	6	True				
ANR	6286101	ExpressionStatement	match = ( nv == uv )	329:3:8091:8109	6286002	7	True				
ANR	6286102	AssignmentExpression	match = ( nv == uv )		6286002	0		=			
ANR	6286103	Identifier	match		6286002	0					
ANR	6286104	EqualityExpression	nv == uv		6286002	1		==			
ANR	6286105	Identifier	nv		6286002	0					
ANR	6286106	Identifier	uv		6286002	1					
ANR	6286107	BreakStatement	break ;	330:3:8114:8119	6286002	8	True				
ANR	6286108	Label	case '!' :	331:2:8123:8131	6286002	9	True				
ANR	6286109	ExpressionStatement	match = ( nv == uv )	332:3:8136:8154	6286002	10	True				
ANR	6286110	AssignmentExpression	match = ( nv == uv )		6286002	0		=			
ANR	6286111	Identifier	match		6286002	0					
ANR	6286112	EqualityExpression	nv == uv		6286002	1		==			
ANR	6286113	Identifier	nv		6286002	0					
ANR	6286114	Identifier	uv		6286002	1					
ANR	6286115	BreakStatement	break ;	333:3:8159:8164	6286002	11	True				
ANR	6286116	Label	case '~' :	334:2:8168:8176	6286002	12	True				
ANR	6286117	ExpressionStatement	"match = strstr ( nn , un ) != NULL"	335:3:8181:8212	6286002	13	True				
ANR	6286118	AssignmentExpression	"match = strstr ( nn , un ) != NULL"		6286002	0		=			
ANR	6286119	Identifier	match		6286002	0					
ANR	6286120	EqualityExpression	"strstr ( nn , un ) != NULL"		6286002	1		!=			
ANR	6286121	CallExpression	"strstr ( nn , un )"		6286002	0					
ANR	6286122	Callee	strstr		6286002	0					
ANR	6286123	Identifier	strstr		6286002	0					
ANR	6286124	ArgumentList	nn		6286002	1					
ANR	6286125	Argument	nn		6286002	0					
ANR	6286126	Identifier	nn		6286002	0					
ANR	6286127	Argument	un		6286002	1					
ANR	6286128	Identifier	un		6286002	0					
ANR	6286129	Identifier	NULL		6286002	1					
ANR	6286130	Label	case '\\0' :	336:2:8216:8225	6286002	14	True				
ANR	6286131	BreakStatement	break ;	337:3:8230:8235	6286002	15	True				
ANR	6286132	IfStatement	if ( ! match )		6286002	4					
ANR	6286133	Condition	! match	339:6:8247:8252	6286002	0	True				
ANR	6286134	UnaryOperationExpression	! match		6286002	0					
ANR	6286135	UnaryOperator	!		6286002	0					
ANR	6286136	Identifier	match		6286002	1					
ANR	6286137	CompoundStatement		27:14:517:517	6286002	1					
ANR	6286138	ExpressionStatement	"r_list_delete ( t -> rows , iter )"	340:3:8260:8289	6286002	0	True				
ANR	6286139	CallExpression	"r_list_delete ( t -> rows , iter )"		6286002	0					
ANR	6286140	Callee	r_list_delete		6286002	0					
ANR	6286141	Identifier	r_list_delete		6286002	0					
ANR	6286142	ArgumentList	t -> rows		6286002	1					
ANR	6286143	Argument	t -> rows		6286002	0					
ANR	6286144	PtrMemberAccess	t -> rows		6286002	0					
ANR	6286145	Identifier	t		6286002	0					
ANR	6286146	Identifier	rows		6286002	1					
ANR	6286147	Argument	iter		6286002	1					
ANR	6286148	Identifier	iter		6286002	0					
ANR	6286149	ReturnType	R_API void		6286002	1					
ANR	6286150	Identifier	r_table_filter		6286002	2					
ANR	6286151	ParameterList	"RTable * t , int nth , int op , const char * un"		6286002	3					
ANR	6286152	Parameter	RTable * t	313:26:7693:7701	6286002	0	True				
ANR	6286153	ParameterType	RTable *		6286002	0					
ANR	6286154	Identifier	t		6286002	1					
ANR	6286155	Parameter	int nth	313:37:7704:7710	6286002	1	True				
ANR	6286156	ParameterType	int		6286002	0					
ANR	6286157	Identifier	nth		6286002	1					
ANR	6286158	Parameter	int op	313:46:7713:7718	6286002	2	True				
ANR	6286159	ParameterType	int		6286002	0					
ANR	6286160	Identifier	op		6286002	1					
ANR	6286161	Parameter	const char * un	313:54:7721:7734	6286002	3	True				
ANR	6286162	ParameterType	const char *		6286002	0					
ANR	6286163	Identifier	un		6286002	1					
ANR	6286164	CFGEntryNode	ENTRY		6286002		True				
ANR	6286165	CFGExitNode	EXIT		6286002		True				
ANR	6286166	Symbol	nn		6286002						
ANR	6286167	Symbol	op		6286002						
ANR	6286168	Symbol	uv		6286002						
ANR	6286169	Symbol	nth		6286002						
ANR	6286170	Symbol	NULL		6286002						
ANR	6286171	Symbol	* row		6286002						
ANR	6286172	Symbol	iter2		6286002						
ANR	6286173	Symbol	nv		6286002						
ANR	6286174	Symbol	match		6286002						
ANR	6286175	Symbol	iter		6286002						
ANR	6286176	Symbol	r_list_get_n		6286002						
ANR	6286177	Symbol	row -> items		6286002						
ANR	6286178	Symbol	t		6286002						
ANR	6286179	Symbol	strstr		6286002						
ANR	6286180	Symbol	true		6286002						
ANR	6286181	Symbol	un		6286002						
ANR	6286182	Symbol	t -> rows		6286002						
ANR	6286183	Symbol	r_num_get		6286002						
ANR	6286184	Symbol	row		6286002						
ANR	6286185	Symbol	* t		6286002						
ANR	6286186	Function	cmp	345:0:8301:8581							
ANR	6286187	FunctionDef	"cmp (const void * _a , const void * _b)"		6286186	0					
ANR	6286188	CompoundStatement		345:47:8348:8581	6286186	0					
ANR	6286189	IdentifierDeclStatement	RTableRow * a = ( RTableRow * ) _a ;	346:1:8351:8380	6286186	0	True				
ANR	6286190	IdentifierDecl	* a = ( RTableRow * ) _a		6286186	0					
ANR	6286191	IdentifierDeclType	RTableRow *		6286186	0					
ANR	6286192	Identifier	a		6286186	1					
ANR	6286193	AssignmentExpression	* a = ( RTableRow * ) _a		6286186	2		=			
ANR	6286194	Identifier	a		6286186	0					
ANR	6286195	CastExpression	( RTableRow * ) _a		6286186	1					
ANR	6286196	CastTarget	RTableRow *		6286186	0					
ANR	6286197	Identifier	_a		6286186	1					
ANR	6286198	IdentifierDeclStatement	RTableRow * b = ( RTableRow * ) _b ;	347:1:8383:8412	6286186	1	True				
ANR	6286199	IdentifierDecl	* b = ( RTableRow * ) _b		6286186	0					
ANR	6286200	IdentifierDeclType	RTableRow *		6286186	0					
ANR	6286201	Identifier	b		6286186	1					
ANR	6286202	AssignmentExpression	* b = ( RTableRow * ) _b		6286186	2		=			
ANR	6286203	Identifier	b		6286186	0					
ANR	6286204	CastExpression	( RTableRow * ) _b		6286186	1					
ANR	6286205	CastTarget	RTableRow *		6286186	0					
ANR	6286206	Identifier	_b		6286186	1					
ANR	6286207	IdentifierDeclStatement	"const char * wa = r_list_get_n ( a -> items , Gnth ) ;"	348:1:8415:8461	6286186	2	True				
ANR	6286208	IdentifierDecl	"* wa = r_list_get_n ( a -> items , Gnth )"		6286186	0					
ANR	6286209	IdentifierDeclType	const char *		6286186	0					
ANR	6286210	Identifier	wa		6286186	1					
ANR	6286211	AssignmentExpression	"* wa = r_list_get_n ( a -> items , Gnth )"		6286186	2		=			
ANR	6286212	Identifier	wa		6286186	0					
ANR	6286213	CallExpression	"r_list_get_n ( a -> items , Gnth )"		6286186	1					
ANR	6286214	Callee	r_list_get_n		6286186	0					
ANR	6286215	Identifier	r_list_get_n		6286186	0					
ANR	6286216	ArgumentList	a -> items		6286186	1					
ANR	6286217	Argument	a -> items		6286186	0					
ANR	6286218	PtrMemberAccess	a -> items		6286186	0					
ANR	6286219	Identifier	a		6286186	0					
ANR	6286220	Identifier	items		6286186	1					
ANR	6286221	Argument	Gnth		6286186	1					
ANR	6286222	Identifier	Gnth		6286186	0					
ANR	6286223	IdentifierDeclStatement	"const char * wb = r_list_get_n ( b -> items , Gnth ) ;"	349:1:8464:8510	6286186	3	True				
ANR	6286224	IdentifierDecl	"* wb = r_list_get_n ( b -> items , Gnth )"		6286186	0					
ANR	6286225	IdentifierDeclType	const char *		6286186	0					
ANR	6286226	Identifier	wb		6286186	1					
ANR	6286227	AssignmentExpression	"* wb = r_list_get_n ( b -> items , Gnth )"		6286186	2		=			
ANR	6286228	Identifier	wb		6286186	0					
ANR	6286229	CallExpression	"r_list_get_n ( b -> items , Gnth )"		6286186	1					
ANR	6286230	Callee	r_list_get_n		6286186	0					
ANR	6286231	Identifier	r_list_get_n		6286186	0					
ANR	6286232	ArgumentList	b -> items		6286186	1					
ANR	6286233	Argument	b -> items		6286186	0					
ANR	6286234	PtrMemberAccess	b -> items		6286186	0					
ANR	6286235	Identifier	b		6286186	0					
ANR	6286236	Identifier	items		6286186	1					
ANR	6286237	Argument	Gnth		6286186	1					
ANR	6286238	Identifier	Gnth		6286186	0					
ANR	6286239	IdentifierDeclStatement	"int res = Gcmp ( wa , wb ) ;"	350:1:8513:8536	6286186	4	True				
ANR	6286240	IdentifierDecl	"res = Gcmp ( wa , wb )"		6286186	0					
ANR	6286241	IdentifierDeclType	int		6286186	0					
ANR	6286242	Identifier	res		6286186	1					
ANR	6286243	AssignmentExpression	"res = Gcmp ( wa , wb )"		6286186	2		=			
ANR	6286244	Identifier	res		6286186	0					
ANR	6286245	CallExpression	"Gcmp ( wa , wb )"		6286186	1					
ANR	6286246	Callee	Gcmp		6286186	0					
ANR	6286247	Identifier	Gcmp		6286186	0					
ANR	6286248	ArgumentList	wa		6286186	1					
ANR	6286249	Argument	wa		6286186	0					
ANR	6286250	Identifier	wa		6286186	0					
ANR	6286251	Argument	wb		6286186	1					
ANR	6286252	Identifier	wb		6286186	0					
ANR	6286253	IfStatement	if ( Ginc )		6286186	5					
ANR	6286254	Condition	Ginc	351:5:8543:8546	6286186	0	True				
ANR	6286255	Identifier	Ginc		6286186	0					
ANR	6286256	CompoundStatement		7:11:200:200	6286186	1					
ANR	6286257	ExpressionStatement	res = - res	352:2:8553:8563	6286186	0	True				
ANR	6286258	AssignmentExpression	res = - res		6286186	0		=			
ANR	6286259	Identifier	res		6286186	0					
ANR	6286260	UnaryOperationExpression	- res		6286186	1					
ANR	6286261	UnaryOperator	-		6286186	0					
ANR	6286262	Identifier	res		6286186	1					
ANR	6286263	ReturnStatement	return res ;	354:1:8569:8579	6286186	6	True				
ANR	6286264	Identifier	res		6286186	0					
ANR	6286265	ReturnType	static int		6286186	1					
ANR	6286266	Identifier	cmp		6286186	2					
ANR	6286267	ParameterList	"const void * _a , const void * _b"		6286186	3					
ANR	6286268	Parameter	const void * _a	345:15:8316:8329	6286186	0	True				
ANR	6286269	ParameterType	const void *		6286186	0					
ANR	6286270	Identifier	_a		6286186	1					
ANR	6286271	Parameter	const void * _b	345:31:8332:8345	6286186	1	True				
ANR	6286272	ParameterType	const void *		6286186	0					
ANR	6286273	Identifier	_b		6286186	1					
ANR	6286274	CFGEntryNode	ENTRY		6286186		True				
ANR	6286275	CFGExitNode	EXIT		6286186		True				
ANR	6286276	Symbol	a		6286186						
ANR	6286277	Symbol	a -> items		6286186						
ANR	6286278	Symbol	res		6286186						
ANR	6286279	Symbol	_a		6286186						
ANR	6286280	Symbol	b		6286186						
ANR	6286281	Symbol	_b		6286186						
ANR	6286282	Symbol	r_list_get_n		6286186						
ANR	6286283	Symbol	wa		6286186						
ANR	6286284	Symbol	* a		6286186						
ANR	6286285	Symbol	wb		6286186						
ANR	6286286	Symbol	* b		6286186						
ANR	6286287	Symbol	b -> items		6286186						
ANR	6286288	Symbol	Ginc		6286186						
ANR	6286289	Symbol	Gnth		6286186						
ANR	6286290	Symbol	Gcmp		6286186						
ANR	6286291	Function	r_table_sort	357:0:8584:8822							
ANR	6286292	FunctionDef	"r_table_sort (RTable * t , int nth , bool inc)"		6286291	0					
ANR	6286293	CompoundStatement		357:54:8638:8822	6286291	0					
ANR	6286294	IdentifierDeclStatement	"RTableColumn * col = r_list_get_n ( t -> cols , nth ) ;"	358:1:8641:8688	6286291	0	True				
ANR	6286295	IdentifierDecl	"* col = r_list_get_n ( t -> cols , nth )"		6286291	0					
ANR	6286296	IdentifierDeclType	RTableColumn *		6286291	0					
ANR	6286297	Identifier	col		6286291	1					
ANR	6286298	AssignmentExpression	"* col = r_list_get_n ( t -> cols , nth )"		6286291	2		=			
ANR	6286299	Identifier	col		6286291	0					
ANR	6286300	CallExpression	"r_list_get_n ( t -> cols , nth )"		6286291	1					
ANR	6286301	Callee	r_list_get_n		6286291	0					
ANR	6286302	Identifier	r_list_get_n		6286291	0					
ANR	6286303	ArgumentList	t -> cols		6286291	1					
ANR	6286304	Argument	t -> cols		6286291	0					
ANR	6286305	PtrMemberAccess	t -> cols		6286291	0					
ANR	6286306	Identifier	t		6286291	0					
ANR	6286307	Identifier	cols		6286291	1					
ANR	6286308	Argument	nth		6286291	1					
ANR	6286309	Identifier	nth		6286291	0					
ANR	6286310	IfStatement	if ( col )		6286291	1					
ANR	6286311	Condition	col	359:5:8695:8697	6286291	0	True				
ANR	6286312	Identifier	col		6286291	0					
ANR	6286313	CompoundStatement		3:10:61:61	6286291	1					
ANR	6286314	ExpressionStatement	Ginc = inc	360:2:8704:8714	6286291	0	True				
ANR	6286315	AssignmentExpression	Ginc = inc		6286291	0		=			
ANR	6286316	Identifier	Ginc		6286291	0					
ANR	6286317	Identifier	inc		6286291	1					
ANR	6286318	ExpressionStatement	Gnth = nth	361:2:8718:8728	6286291	1	True				
ANR	6286319	AssignmentExpression	Gnth = nth		6286291	0		=			
ANR	6286320	Identifier	Gnth		6286291	0					
ANR	6286321	Identifier	nth		6286291	1					
ANR	6286322	ExpressionStatement	Gcmp = col -> type -> cmp	362:2:8732:8753	6286291	2	True				
ANR	6286323	AssignmentExpression	Gcmp = col -> type -> cmp		6286291	0		=			
ANR	6286324	Identifier	Gcmp		6286291	0					
ANR	6286325	PtrMemberAccess	col -> type -> cmp		6286291	1					
ANR	6286326	PtrMemberAccess	col -> type		6286291	0					
ANR	6286327	Identifier	col		6286291	0					
ANR	6286328	Identifier	type		6286291	1					
ANR	6286329	Identifier	cmp		6286291	1					
ANR	6286330	ExpressionStatement	"r_list_sort ( t -> rows , cmp )"	363:2:8757:8783	6286291	3	True				
ANR	6286331	CallExpression	"r_list_sort ( t -> rows , cmp )"		6286291	0					
ANR	6286332	Callee	r_list_sort		6286291	0					
ANR	6286333	Identifier	r_list_sort		6286291	0					
ANR	6286334	ArgumentList	t -> rows		6286291	1					
ANR	6286335	Argument	t -> rows		6286291	0					
ANR	6286336	PtrMemberAccess	t -> rows		6286291	0					
ANR	6286337	Identifier	t		6286291	0					
ANR	6286338	Identifier	rows		6286291	1					
ANR	6286339	Argument	cmp		6286291	1					
ANR	6286340	Identifier	cmp		6286291	0					
ANR	6286341	ExpressionStatement	Gnth = Ginc = 0	364:2:8787:8802	6286291	4	True				
ANR	6286342	AssignmentExpression	Gnth = Ginc = 0		6286291	0		=			
ANR	6286343	Identifier	Gnth		6286291	0					
ANR	6286344	AssignmentExpression	Ginc = 0		6286291	1		=			
ANR	6286345	Identifier	Ginc		6286291	0					
ANR	6286346	PrimaryExpression	0		6286291	1					
ANR	6286347	ExpressionStatement	Gcmp = NULL	365:2:8806:8817	6286291	5	True				
ANR	6286348	AssignmentExpression	Gcmp = NULL		6286291	0		=			
ANR	6286349	Identifier	Gcmp		6286291	0					
ANR	6286350	Identifier	NULL		6286291	1					
ANR	6286351	ReturnType	R_API void		6286291	1					
ANR	6286352	Identifier	r_table_sort		6286291	2					
ANR	6286353	ParameterList	"RTable * t , int nth , bool inc"		6286291	3					
ANR	6286354	Parameter	RTable * t	357:24:8608:8616	6286291	0	True				
ANR	6286355	ParameterType	RTable *		6286291	0					
ANR	6286356	Identifier	t		6286291	1					
ANR	6286357	Parameter	int nth	357:35:8619:8625	6286291	1	True				
ANR	6286358	ParameterType	int		6286291	0					
ANR	6286359	Identifier	nth		6286291	1					
ANR	6286360	Parameter	bool inc	357:44:8628:8635	6286291	2	True				
ANR	6286361	ParameterType	bool		6286291	0					
ANR	6286362	Identifier	inc		6286291	1					
ANR	6286363	CFGEntryNode	ENTRY		6286291		True				
ANR	6286364	CFGExitNode	EXIT		6286291		True				
ANR	6286365	Symbol	col		6286291						
ANR	6286366	Symbol	col -> type		6286291						
ANR	6286367	Symbol	nth		6286291						
ANR	6286368	Symbol	NULL		6286291						
ANR	6286369	Symbol	cmp		6286291						
ANR	6286370	Symbol	t -> cols		6286291						
ANR	6286371	Symbol	r_list_get_n		6286291						
ANR	6286372	Symbol	* col -> type		6286291						
ANR	6286373	Symbol	col -> type -> cmp		6286291						
ANR	6286374	Symbol	t		6286291						
ANR	6286375	Symbol	* * col		6286291						
ANR	6286376	Symbol	* col		6286291						
ANR	6286377	Symbol	Ginc		6286291						
ANR	6286378	Symbol	t -> rows		6286291						
ANR	6286379	Symbol	Gnth		6286291						
ANR	6286380	Symbol	* t		6286291						
ANR	6286381	Symbol	Gcmp		6286291						
ANR	6286382	Symbol	inc		6286291						
ANR	6286383	Function	r_table_column_nth	369:0:8825:9048							
ANR	6286384	FunctionDef	"r_table_column_nth (RTable * t , const char * name)"		6286383	0					
ANR	6286385	CompoundStatement		369:58:8883:9048	6286383	0					
ANR	6286386	IdentifierDeclStatement	RListIter * iter ;	370:1:8886:8901	6286383	0	True				
ANR	6286387	IdentifierDecl	* iter		6286383	0					
ANR	6286388	IdentifierDeclType	RListIter *		6286383	0					
ANR	6286389	Identifier	iter		6286383	1					
ANR	6286390	IdentifierDeclStatement	RTableColumn * col ;	371:1:8904:8921	6286383	1	True				
ANR	6286391	IdentifierDecl	* col		6286383	0					
ANR	6286392	IdentifierDeclType	RTableColumn *		6286383	0					
ANR	6286393	Identifier	col		6286383	1					
ANR	6286394	IdentifierDeclStatement	int n = 0 ;	372:1:8924:8933	6286383	2	True				
ANR	6286395	IdentifierDecl	n = 0		6286383	0					
ANR	6286396	IdentifierDeclType	int		6286383	0					
ANR	6286397	Identifier	n		6286383	1					
ANR	6286398	AssignmentExpression	n = 0		6286383	2		=			
ANR	6286399	Identifier	n		6286383	0					
ANR	6286400	PrimaryExpression	0		6286383	1					
ANR	6286401	Statement	r_list_foreach	373:1:8936:8949	6286383	3	True				
ANR	6286402	Statement	(	373:16:8951:8951	6286383	4	True				
ANR	6286403	Statement	t	373:17:8952:8952	6286383	5	True				
ANR	6286404	Statement	->	373:18:8953:8954	6286383	6	True				
ANR	6286405	Statement	cols	373:20:8955:8958	6286383	7	True				
ANR	6286406	Statement	","	373:24:8959:8959	6286383	8	True				
ANR	6286407	Statement	iter	373:26:8961:8964	6286383	9	True				
ANR	6286408	Statement	","	373:30:8965:8965	6286383	10	True				
ANR	6286409	Statement	col	373:32:8967:8969	6286383	11	True				
ANR	6286410	Statement	)	373:35:8970:8970	6286383	12	True				
ANR	6286411	CompoundStatement		5:37:88:88	6286383	13					
ANR	6286412	IfStatement	"if ( ! strcmp ( name , col -> name ) )"		6286383	0					
ANR	6286413	Condition	"! strcmp ( name , col -> name )"	374:6:8980:9004	6286383	0	True				
ANR	6286414	UnaryOperationExpression	"! strcmp ( name , col -> name )"		6286383	0					
ANR	6286415	UnaryOperator	!		6286383	0					
ANR	6286416	CallExpression	"strcmp ( name , col -> name )"		6286383	1					
ANR	6286417	Callee	strcmp		6286383	0					
ANR	6286418	Identifier	strcmp		6286383	0					
ANR	6286419	ArgumentList	name		6286383	1					
ANR	6286420	Argument	name		6286383	0					
ANR	6286421	Identifier	name		6286383	0					
ANR	6286422	Argument	col -> name		6286383	1					
ANR	6286423	PtrMemberAccess	col -> name		6286383	0					
ANR	6286424	Identifier	col		6286383	0					
ANR	6286425	Identifier	name		6286383	1					
ANR	6286426	CompoundStatement		6:33:123:123	6286383	1					
ANR	6286427	ReturnStatement	return n ;	375:3:9012:9020	6286383	0	True				
ANR	6286428	Identifier	n		6286383	0					
ANR	6286429	ExpressionStatement	n ++	377:2:9028:9031	6286383	1	True				
ANR	6286430	PostIncDecOperationExpression	n ++		6286383	0					
ANR	6286431	Identifier	n		6286383	0					
ANR	6286432	IncDec	++		6286383	1					
ANR	6286433	ReturnStatement	return - 1 ;	379:1:9037:9046	6286383	14	True				
ANR	6286434	UnaryOperationExpression	- 1		6286383	0					
ANR	6286435	UnaryOperator	-		6286383	0					
ANR	6286436	PrimaryExpression	1		6286383	1					
ANR	6286437	ReturnType	R_API int		6286383	1					
ANR	6286438	Identifier	r_table_column_nth		6286383	2					
ANR	6286439	ParameterList	"RTable * t , const char * name"		6286383	3					
ANR	6286440	Parameter	RTable * t	369:29:8854:8862	6286383	0	True				
ANR	6286441	ParameterType	RTable *		6286383	0					
ANR	6286442	Identifier	t		6286383	1					
ANR	6286443	Parameter	const char * name	369:40:8865:8880	6286383	1	True				
ANR	6286444	ParameterType	const char *		6286383	0					
ANR	6286445	Identifier	name		6286383	1					
ANR	6286446	CFGEntryNode	ENTRY		6286383		True				
ANR	6286447	CFGExitNode	EXIT		6286383		True				
ANR	6286448	Symbol	strcmp		6286383						
ANR	6286449	Symbol	col		6286383						
ANR	6286450	Symbol	col -> name		6286383						
ANR	6286451	Symbol	t		6286383						
ANR	6286452	Symbol	* col		6286383						
ANR	6286453	Symbol	name		6286383						
ANR	6286454	Symbol	iter		6286383						
ANR	6286455	Symbol	n		6286383						
ANR	6286456	Function	__resolveOperation	382:0:9051:9287							
ANR	6286457	FunctionDef	__resolveOperation (const char * op)		6286456	0					
ANR	6286458	CompoundStatement		382:46:9097:9287	6286456	0					
ANR	6286459	IfStatement	"if ( ! strcmp ( op , ""gt"" ) )"		6286456	0					
ANR	6286460	Condition	"! strcmp ( op , ""gt"" )"	383:5:9104:9121	6286456	0	True				
ANR	6286461	UnaryOperationExpression	"! strcmp ( op , ""gt"" )"		6286456	0					
ANR	6286462	UnaryOperator	!		6286456	0					
ANR	6286463	CallExpression	"strcmp ( op , ""gt"" )"		6286456	1					
ANR	6286464	Callee	strcmp		6286456	0					
ANR	6286465	Identifier	strcmp		6286456	0					
ANR	6286466	ArgumentList	op		6286456	1					
ANR	6286467	Argument	op		6286456	0					
ANR	6286468	Identifier	op		6286456	0					
ANR	6286469	Argument	"""gt"""		6286456	1					
ANR	6286470	PrimaryExpression	"""gt"""		6286456	0					
ANR	6286471	CompoundStatement		2:25:26:26	6286456	1					
ANR	6286472	ReturnStatement	return '>' ;	384:2:9128:9138	6286456	0	True				
ANR	6286473	PrimaryExpression	'>'		6286456	0					
ANR	6286474	IfStatement	"if ( ! strcmp ( op , ""lt"" ) )"		6286456	1					
ANR	6286475	Condition	"! strcmp ( op , ""lt"" )"	386:5:9148:9165	6286456	0	True				
ANR	6286476	UnaryOperationExpression	"! strcmp ( op , ""lt"" )"		6286456	0					
ANR	6286477	UnaryOperator	!		6286456	0					
ANR	6286478	CallExpression	"strcmp ( op , ""lt"" )"		6286456	1					
ANR	6286479	Callee	strcmp		6286456	0					
ANR	6286480	Identifier	strcmp		6286456	0					
ANR	6286481	ArgumentList	op		6286456	1					
ANR	6286482	Argument	op		6286456	0					
ANR	6286483	Identifier	op		6286456	0					
ANR	6286484	Argument	"""lt"""		6286456	1					
ANR	6286485	PrimaryExpression	"""lt"""		6286456	0					
ANR	6286486	CompoundStatement		5:25:70:70	6286456	1					
ANR	6286487	ReturnStatement	return '<' ;	387:2:9172:9182	6286456	0	True				
ANR	6286488	PrimaryExpression	'<'		6286456	0					
ANR	6286489	IfStatement	"if ( ! strcmp ( op , ""eq"" ) )"		6286456	2					
ANR	6286490	Condition	"! strcmp ( op , ""eq"" )"	389:5:9192:9209	6286456	0	True				
ANR	6286491	UnaryOperationExpression	"! strcmp ( op , ""eq"" )"		6286456	0					
ANR	6286492	UnaryOperator	!		6286456	0					
ANR	6286493	CallExpression	"strcmp ( op , ""eq"" )"		6286456	1					
ANR	6286494	Callee	strcmp		6286456	0					
ANR	6286495	Identifier	strcmp		6286456	0					
ANR	6286496	ArgumentList	op		6286456	1					
ANR	6286497	Argument	op		6286456	0					
ANR	6286498	Identifier	op		6286456	0					
ANR	6286499	Argument	"""eq"""		6286456	1					
ANR	6286500	PrimaryExpression	"""eq"""		6286456	0					
ANR	6286501	CompoundStatement		8:25:114:114	6286456	1					
ANR	6286502	ReturnStatement	return '=' ;	390:2:9216:9226	6286456	0	True				
ANR	6286503	PrimaryExpression	'='		6286456	0					
ANR	6286504	IfStatement	"if ( ! strcmp ( op , ""ne"" ) )"		6286456	3					
ANR	6286505	Condition	"! strcmp ( op , ""ne"" )"	392:5:9236:9253	6286456	0	True				
ANR	6286506	UnaryOperationExpression	"! strcmp ( op , ""ne"" )"		6286456	0					
ANR	6286507	UnaryOperator	!		6286456	0					
ANR	6286508	CallExpression	"strcmp ( op , ""ne"" )"		6286456	1					
ANR	6286509	Callee	strcmp		6286456	0					
ANR	6286510	Identifier	strcmp		6286456	0					
ANR	6286511	ArgumentList	op		6286456	1					
ANR	6286512	Argument	op		6286456	0					
ANR	6286513	Identifier	op		6286456	0					
ANR	6286514	Argument	"""ne"""		6286456	1					
ANR	6286515	PrimaryExpression	"""ne"""		6286456	0					
ANR	6286516	CompoundStatement		11:25:158:158	6286456	1					
ANR	6286517	ReturnStatement	return '!' ;	393:2:9260:9270	6286456	0	True				
ANR	6286518	PrimaryExpression	'!'		6286456	0					
ANR	6286519	ReturnStatement	return - 1 ;	395:1:9276:9285	6286456	4	True				
ANR	6286520	UnaryOperationExpression	- 1		6286456	0					
ANR	6286521	UnaryOperator	-		6286456	0					
ANR	6286522	PrimaryExpression	1		6286456	1					
ANR	6286523	ReturnType	static int		6286456	1					
ANR	6286524	Identifier	__resolveOperation		6286456	2					
ANR	6286525	ParameterList	const char * op		6286456	3					
ANR	6286526	Parameter	const char * op	382:30:9081:9094	6286456	0	True				
ANR	6286527	ParameterType	const char *		6286456	0					
ANR	6286528	Identifier	op		6286456	1					
ANR	6286529	CFGEntryNode	ENTRY		6286456		True				
ANR	6286530	CFGExitNode	EXIT		6286456		True				
ANR	6286531	Symbol	strcmp		6286456						
ANR	6286532	Symbol	op		6286456						
ANR	6286533	Function	__table_column_free	398:0:9290:9391							
ANR	6286534	FunctionDef	__table_column_free (void * _col)		6286533	0					
ANR	6286535	CompoundStatement		398:44:9334:9391	6286533	0					
ANR	6286536	IdentifierDeclStatement	RTableColumn * col = ( RTableColumn * ) _col ;	399:1:9337:9376	6286533	0	True				
ANR	6286537	IdentifierDecl	* col = ( RTableColumn * ) _col		6286533	0					
ANR	6286538	IdentifierDeclType	RTableColumn *		6286533	0					
ANR	6286539	Identifier	col		6286533	1					
ANR	6286540	AssignmentExpression	* col = ( RTableColumn * ) _col		6286533	2		=			
ANR	6286541	Identifier	col		6286533	0					
ANR	6286542	CastExpression	( RTableColumn * ) _col		6286533	1					
ANR	6286543	CastTarget	RTableColumn *		6286533	0					
ANR	6286544	Identifier	_col		6286533	1					
ANR	6286545	ExpressionStatement	free ( col )	400:1:9379:9389	6286533	1	True				
ANR	6286546	CallExpression	free ( col )		6286533	0					
ANR	6286547	Callee	free		6286533	0					
ANR	6286548	Identifier	free		6286533	0					
ANR	6286549	ArgumentList	col		6286533	1					
ANR	6286550	Argument	col		6286533	0					
ANR	6286551	Identifier	col		6286533	0					
ANR	6286552	ReturnType	static void		6286533	1					
ANR	6286553	Identifier	__table_column_free		6286533	2					
ANR	6286554	ParameterList	void * _col		6286533	3					
ANR	6286555	Parameter	void * _col	398:32:9322:9331	6286533	0	True				
ANR	6286556	ParameterType	void *		6286533	0					
ANR	6286557	Identifier	_col		6286533	1					
ANR	6286558	CFGEntryNode	ENTRY		6286533		True				
ANR	6286559	CFGExitNode	EXIT		6286533		True				
ANR	6286560	Symbol	col		6286533						
ANR	6286561	Symbol	_col		6286533						
ANR	6286562	Function	r_table_columns	403:0:9394:10067							
ANR	6286563	FunctionDef	"r_table_columns (RTable * t , RList * colNames)"		6286562	0					
ANR	6286564	CompoundStatement		403:55:9449:10067	6286562	0					
ANR	6286565	IdentifierDeclStatement	"RListIter * iter , * iterCol ;"	404:1:9452:9478	6286562	0	True				
ANR	6286566	IdentifierDecl	* iter		6286562	0					
ANR	6286567	IdentifierDeclType	RListIter *		6286562	0					
ANR	6286568	Identifier	iter		6286562	1					
ANR	6286569	IdentifierDecl	* iterCol		6286562	1					
ANR	6286570	IdentifierDeclType	RListIter *		6286562	0					
ANR	6286571	Identifier	iterCol		6286562	1					
ANR	6286572	IdentifierDeclStatement	char * colName ;	405:1:9481:9495	6286562	1	True				
ANR	6286573	IdentifierDecl	* colName		6286562	0					
ANR	6286574	IdentifierDeclType	char *		6286562	0					
ANR	6286575	Identifier	colName		6286562	1					
ANR	6286576	IdentifierDeclStatement	RTableRow * row ;	406:1:9498:9512	6286562	2	True				
ANR	6286577	IdentifierDecl	* row		6286562	0					
ANR	6286578	IdentifierDeclType	RTableRow *		6286562	0					
ANR	6286579	Identifier	row		6286562	1					
ANR	6286580	Statement	r_list_foreach	407:1:9515:9528	6286562	3	True				
ANR	6286581	Statement	(	407:16:9530:9530	6286562	4	True				
ANR	6286582	Statement	t	407:17:9531:9531	6286562	5	True				
ANR	6286583	Statement	->	407:18:9532:9533	6286562	6	True				
ANR	6286584	Statement	rows	407:20:9534:9537	6286562	7	True				
ANR	6286585	Statement	","	407:24:9538:9538	6286562	8	True				
ANR	6286586	Statement	iter	407:26:9540:9543	6286562	9	True				
ANR	6286587	Statement	","	407:30:9544:9544	6286562	10	True				
ANR	6286588	Statement	row	407:32:9546:9548	6286562	11	True				
ANR	6286589	Statement	)	407:35:9549:9549	6286562	12	True				
ANR	6286590	CompoundStatement		6:2:105:150	6286562	13					
ANR	6286591	IdentifierDeclStatement	RList * items = r_list_newf ( r_table_row_free ) ;	408:2:9555:9600	6286562	0	True				
ANR	6286592	IdentifierDecl	* items = r_list_newf ( r_table_row_free )		6286562	0					
ANR	6286593	IdentifierDeclType	RList *		6286562	0					
ANR	6286594	Identifier	items		6286562	1					
ANR	6286595	AssignmentExpression	* items = r_list_newf ( r_table_row_free )		6286562	2		=			
ANR	6286596	Identifier	items		6286562	0					
ANR	6286597	CallExpression	r_list_newf ( r_table_row_free )		6286562	1					
ANR	6286598	Callee	r_list_newf		6286562	0					
ANR	6286599	Identifier	r_list_newf		6286562	0					
ANR	6286600	ArgumentList	r_table_row_free		6286562	1					
ANR	6286601	Argument	r_table_row_free		6286562	0					
ANR	6286602	Identifier	r_table_row_free		6286562	0					
ANR	6286603	Statement	r_list_foreach	409:2:9604:9617	6286562	1	True				
ANR	6286604	Statement	(	409:17:9619:9619	6286562	2	True				
ANR	6286605	Statement	colNames	409:18:9620:9627	6286562	3	True				
ANR	6286606	Statement	","	409:26:9628:9628	6286562	4	True				
ANR	6286607	Statement	iterCol	409:28:9630:9636	6286562	5	True				
ANR	6286608	Statement	","	409:35:9637:9637	6286562	6	True				
ANR	6286609	Statement	colName	409:37:9639:9645	6286562	7	True				
ANR	6286610	Statement	)	409:44:9646:9646	6286562	8	True				
ANR	6286611	CompoundStatement		9:3:248:295	6286562	9					
ANR	6286612	IdentifierDeclStatement	"int fc = r_table_column_nth ( t , colName ) ;"	410:3:9653:9693	6286562	0	True				
ANR	6286613	IdentifierDecl	"fc = r_table_column_nth ( t , colName )"		6286562	0					
ANR	6286614	IdentifierDeclType	int		6286562	0					
ANR	6286615	Identifier	fc		6286562	1					
ANR	6286616	AssignmentExpression	"fc = r_table_column_nth ( t , colName )"		6286562	2		=			
ANR	6286617	Identifier	fc		6286562	0					
ANR	6286618	CallExpression	"r_table_column_nth ( t , colName )"		6286562	1					
ANR	6286619	Callee	r_table_column_nth		6286562	0					
ANR	6286620	Identifier	r_table_column_nth		6286562	0					
ANR	6286621	ArgumentList	t		6286562	1					
ANR	6286622	Argument	t		6286562	0					
ANR	6286623	Identifier	t		6286562	0					
ANR	6286624	Argument	colName		6286562	1					
ANR	6286625	Identifier	colName		6286562	0					
ANR	6286626	IdentifierDeclStatement	"RTableRow * item = r_list_get_n ( row -> items , fc ) ;"	411:3:9698:9745	6286562	1	True				
ANR	6286627	IdentifierDecl	"* item = r_list_get_n ( row -> items , fc )"		6286562	0					
ANR	6286628	IdentifierDeclType	RTableRow *		6286562	0					
ANR	6286629	Identifier	item		6286562	1					
ANR	6286630	AssignmentExpression	"* item = r_list_get_n ( row -> items , fc )"		6286562	2		=			
ANR	6286631	Identifier	item		6286562	0					
ANR	6286632	CallExpression	"r_list_get_n ( row -> items , fc )"		6286562	1					
ANR	6286633	Callee	r_list_get_n		6286562	0					
ANR	6286634	Identifier	r_list_get_n		6286562	0					
ANR	6286635	ArgumentList	row -> items		6286562	1					
ANR	6286636	Argument	row -> items		6286562	0					
ANR	6286637	PtrMemberAccess	row -> items		6286562	0					
ANR	6286638	Identifier	row		6286562	0					
ANR	6286639	Identifier	items		6286562	1					
ANR	6286640	Argument	fc		6286562	1					
ANR	6286641	Identifier	fc		6286562	0					
ANR	6286642	ExpressionStatement	"r_list_append ( items , item )"	412:3:9750:9777	6286562	2	True				
ANR	6286643	CallExpression	"r_list_append ( items , item )"		6286562	0					
ANR	6286644	Callee	r_list_append		6286562	0					
ANR	6286645	Identifier	r_list_append		6286562	0					
ANR	6286646	ArgumentList	items		6286562	1					
ANR	6286647	Argument	items		6286562	0					
ANR	6286648	Identifier	items		6286562	0					
ANR	6286649	Argument	item		6286562	1					
ANR	6286650	Identifier	item		6286562	0					
ANR	6286651	ExpressionStatement	row -> items = items	414:2:9785:9803	6286562	10	True				
ANR	6286652	AssignmentExpression	row -> items = items		6286562	0		=			
ANR	6286653	PtrMemberAccess	row -> items		6286562	0					
ANR	6286654	Identifier	row		6286562	0					
ANR	6286655	Identifier	items		6286562	1					
ANR	6286656	Identifier	items		6286562	1					
ANR	6286657	IdentifierDeclStatement	RList * cols = r_list_newf ( r_table_column_free ) ;	416:1:9809:9856	6286562	14	True				
ANR	6286658	IdentifierDecl	* cols = r_list_newf ( r_table_column_free )		6286562	0					
ANR	6286659	IdentifierDeclType	RList *		6286562	0					
ANR	6286660	Identifier	cols		6286562	1					
ANR	6286661	AssignmentExpression	* cols = r_list_newf ( r_table_column_free )		6286562	2		=			
ANR	6286662	Identifier	cols		6286562	0					
ANR	6286663	CallExpression	r_list_newf ( r_table_column_free )		6286562	1					
ANR	6286664	Callee	r_list_newf		6286562	0					
ANR	6286665	Identifier	r_list_newf		6286562	0					
ANR	6286666	ArgumentList	r_table_column_free		6286562	1					
ANR	6286667	Argument	r_table_column_free		6286562	0					
ANR	6286668	Identifier	r_table_column_free		6286562	0					
ANR	6286669	Statement	r_list_foreach	417:1:9859:9872	6286562	15	True				
ANR	6286670	Statement	(	417:16:9874:9874	6286562	16	True				
ANR	6286671	Statement	colNames	417:17:9875:9882	6286562	17	True				
ANR	6286672	Statement	","	417:25:9883:9883	6286562	18	True				
ANR	6286673	Statement	iterCol	417:27:9885:9891	6286562	19	True				
ANR	6286674	Statement	","	417:34:9892:9892	6286562	20	True				
ANR	6286675	Statement	colName	417:36:9894:9900	6286562	21	True				
ANR	6286676	Statement	)	417:43:9901:9901	6286562	22	True				
ANR	6286677	CompoundStatement		16:2:457:497	6286562	23					
ANR	6286678	IdentifierDeclStatement	"int fc = r_table_column_nth ( t , colName ) ;"	418:2:9907:9947	6286562	0	True				
ANR	6286679	IdentifierDecl	"fc = r_table_column_nth ( t , colName )"		6286562	0					
ANR	6286680	IdentifierDeclType	int		6286562	0					
ANR	6286681	Identifier	fc		6286562	1					
ANR	6286682	AssignmentExpression	"fc = r_table_column_nth ( t , colName )"		6286562	2		=			
ANR	6286683	Identifier	fc		6286562	0					
ANR	6286684	CallExpression	"r_table_column_nth ( t , colName )"		6286562	1					
ANR	6286685	Callee	r_table_column_nth		6286562	0					
ANR	6286686	Identifier	r_table_column_nth		6286562	0					
ANR	6286687	ArgumentList	t		6286562	1					
ANR	6286688	Argument	t		6286562	0					
ANR	6286689	Identifier	t		6286562	0					
ANR	6286690	Argument	colName		6286562	1					
ANR	6286691	Identifier	colName		6286562	0					
ANR	6286692	IfStatement	if ( fc >= 0 )		6286562	1					
ANR	6286693	Condition	fc >= 0	419:6:9955:9961	6286562	0	True				
ANR	6286694	RelationalExpression	fc >= 0		6286562	0		>=			
ANR	6286695	Identifier	fc		6286562	0					
ANR	6286696	PrimaryExpression	0		6286562	1					
ANR	6286697	CompoundStatement		18:3:519:563	6286562	1					
ANR	6286698	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( t -> cols , fc ) ;"	420:3:9969:10013	6286562	0	True				
ANR	6286699	IdentifierDecl	"* c = r_list_get_n ( t -> cols , fc )"		6286562	0					
ANR	6286700	IdentifierDeclType	RTableColumn *		6286562	0					
ANR	6286701	Identifier	c		6286562	1					
ANR	6286702	AssignmentExpression	"* c = r_list_get_n ( t -> cols , fc )"		6286562	2		=			
ANR	6286703	Identifier	c		6286562	0					
ANR	6286704	CallExpression	"r_list_get_n ( t -> cols , fc )"		6286562	1					
ANR	6286705	Callee	r_list_get_n		6286562	0					
ANR	6286706	Identifier	r_list_get_n		6286562	0					
ANR	6286707	ArgumentList	t -> cols		6286562	1					
ANR	6286708	Argument	t -> cols		6286562	0					
ANR	6286709	PtrMemberAccess	t -> cols		6286562	0					
ANR	6286710	Identifier	t		6286562	0					
ANR	6286711	Identifier	cols		6286562	1					
ANR	6286712	Argument	fc		6286562	1					
ANR	6286713	Identifier	fc		6286562	0					
ANR	6286714	ExpressionStatement	"r_list_append ( cols , c )"	421:3:10018:10041	6286562	1	True				
ANR	6286715	CallExpression	"r_list_append ( cols , c )"		6286562	0					
ANR	6286716	Callee	r_list_append		6286562	0					
ANR	6286717	Identifier	r_list_append		6286562	0					
ANR	6286718	ArgumentList	cols		6286562	1					
ANR	6286719	Argument	cols		6286562	0					
ANR	6286720	Identifier	cols		6286562	0					
ANR	6286721	Argument	c		6286562	1					
ANR	6286722	Identifier	c		6286562	0					
ANR	6286723	ExpressionStatement	t -> cols = cols	424:1:10051:10065	6286562	24	True				
ANR	6286724	AssignmentExpression	t -> cols = cols		6286562	0		=			
ANR	6286725	PtrMemberAccess	t -> cols		6286562	0					
ANR	6286726	Identifier	t		6286562	0					
ANR	6286727	Identifier	cols		6286562	1					
ANR	6286728	Identifier	cols		6286562	1					
ANR	6286729	ReturnType	R_API void		6286562	1					
ANR	6286730	Identifier	r_table_columns		6286562	2					
ANR	6286731	ParameterList	"RTable * t , RList * colNames"		6286562	3					
ANR	6286732	Parameter	RTable * t	403:27:9421:9429	6286562	0	True				
ANR	6286733	ParameterType	RTable *		6286562	0					
ANR	6286734	Identifier	t		6286562	1					
ANR	6286735	Parameter	RList * colNames	403:38:9432:9446	6286562	1	True				
ANR	6286736	ParameterType	RList *		6286562	0					
ANR	6286737	Identifier	colNames		6286562	1					
ANR	6286738	CFGEntryNode	ENTRY		6286562		True				
ANR	6286739	CFGExitNode	EXIT		6286562		True				
ANR	6286740	Symbol	colName		6286562						
ANR	6286741	Symbol	item		6286562						
ANR	6286742	Symbol	c		6286562						
ANR	6286743	Symbol	colNames		6286562						
ANR	6286744	Symbol	* row		6286562						
ANR	6286745	Symbol	r_list_newf		6286562						
ANR	6286746	Symbol	t -> cols		6286562						
ANR	6286747	Symbol	iter		6286562						
ANR	6286748	Symbol	r_list_get_n		6286562						
ANR	6286749	Symbol	iterCol		6286562						
ANR	6286750	Symbol	row -> items		6286562						
ANR	6286751	Symbol	r_table_column_free		6286562						
ANR	6286752	Symbol	r_table_column_nth		6286562						
ANR	6286753	Symbol	t		6286562						
ANR	6286754	Symbol	r_table_row_free		6286562						
ANR	6286755	Symbol	row		6286562						
ANR	6286756	Symbol	items		6286562						
ANR	6286757	Symbol	fc		6286562						
ANR	6286758	Symbol	cols		6286562						
ANR	6286759	Symbol	* t		6286562						
ANR	6286760	Function	r_table_filter_columns	427:0:10070:10498							
ANR	6286761	FunctionDef	"r_table_filter_columns (RTable * t , RList * list)"		6286760	0					
ANR	6286762	CompoundStatement		427:58:10128:10498	6286760	0					
ANR	6286763	IdentifierDeclStatement	const char * col ;	428:1:10131:10146	6286760	0	True				
ANR	6286764	IdentifierDecl	* col		6286760	0					
ANR	6286765	IdentifierDeclType	const char *		6286760	0					
ANR	6286766	Identifier	col		6286760	1					
ANR	6286767	IdentifierDeclStatement	RListIter * iter ;	429:1:10149:10164	6286760	1	True				
ANR	6286768	IdentifierDecl	* iter		6286760	0					
ANR	6286769	IdentifierDeclType	RListIter *		6286760	0					
ANR	6286770	Identifier	iter		6286760	1					
ANR	6286771	IdentifierDeclStatement	RList * cols = t -> cols ;	430:1:10167:10188	6286760	2	True				
ANR	6286772	IdentifierDecl	* cols = t -> cols		6286760	0					
ANR	6286773	IdentifierDeclType	RList *		6286760	0					
ANR	6286774	Identifier	cols		6286760	1					
ANR	6286775	AssignmentExpression	* cols = t -> cols		6286760	2		=			
ANR	6286776	Identifier	cols		6286760	0					
ANR	6286777	PtrMemberAccess	t -> cols		6286760	1					
ANR	6286778	Identifier	t		6286760	0					
ANR	6286779	Identifier	cols		6286760	1					
ANR	6286780	ExpressionStatement	t -> cols = r_list_newf ( __table_column_free )	431:1:10191:10234	6286760	3	True				
ANR	6286781	AssignmentExpression	t -> cols = r_list_newf ( __table_column_free )		6286760	0		=			
ANR	6286782	PtrMemberAccess	t -> cols		6286760	0					
ANR	6286783	Identifier	t		6286760	0					
ANR	6286784	Identifier	cols		6286760	1					
ANR	6286785	CallExpression	r_list_newf ( __table_column_free )		6286760	1					
ANR	6286786	Callee	r_list_newf		6286760	0					
ANR	6286787	Identifier	r_list_newf		6286760	0					
ANR	6286788	ArgumentList	__table_column_free		6286760	1					
ANR	6286789	Argument	__table_column_free		6286760	0					
ANR	6286790	Identifier	__table_column_free		6286760	0					
ANR	6286791	Statement	r_list_foreach	432:1:10237:10250	6286760	4	True				
ANR	6286792	Statement	(	432:16:10252:10252	6286760	5	True				
ANR	6286793	Statement	list	432:17:10253:10256	6286760	6	True				
ANR	6286794	Statement	","	432:21:10257:10257	6286760	7	True				
ANR	6286795	Statement	iter	432:23:10259:10262	6286760	8	True				
ANR	6286796	Statement	","	432:27:10263:10263	6286760	9	True				
ANR	6286797	Statement	col	432:29:10265:10267	6286760	10	True				
ANR	6286798	Statement	)	432:32:10268:10268	6286760	11	True				
ANR	6286799	CompoundStatement		7:2:145:183	6286760	12					
ANR	6286800	IdentifierDeclStatement	"int ncol = r_table_column_nth ( t , col ) ;"	433:2:10274:10312	6286760	0	True				
ANR	6286801	IdentifierDecl	"ncol = r_table_column_nth ( t , col )"		6286760	0					
ANR	6286802	IdentifierDeclType	int		6286760	0					
ANR	6286803	Identifier	ncol		6286760	1					
ANR	6286804	AssignmentExpression	"ncol = r_table_column_nth ( t , col )"		6286760	2		=			
ANR	6286805	Identifier	ncol		6286760	0					
ANR	6286806	CallExpression	"r_table_column_nth ( t , col )"		6286760	1					
ANR	6286807	Callee	r_table_column_nth		6286760	0					
ANR	6286808	Identifier	r_table_column_nth		6286760	0					
ANR	6286809	ArgumentList	t		6286760	1					
ANR	6286810	Argument	t		6286760	0					
ANR	6286811	Identifier	t		6286760	0					
ANR	6286812	Argument	col		6286760	1					
ANR	6286813	Identifier	col		6286760	0					
ANR	6286814	IfStatement	if ( ncol != - 1 )		6286760	1					
ANR	6286815	Condition	ncol != - 1	434:6:10320:10329	6286760	0	True				
ANR	6286816	EqualityExpression	ncol != - 1		6286760	0		!=			
ANR	6286817	Identifier	ncol		6286760	0					
ANR	6286818	UnaryOperationExpression	- 1		6286760	1					
ANR	6286819	UnaryOperator	-		6286760	0					
ANR	6286820	PrimaryExpression	1		6286760	1					
ANR	6286821	CompoundStatement		9:3:208:251	6286760	1					
ANR	6286822	IdentifierDeclStatement	"RTableColumn * c = r_list_get_n ( cols , ncol ) ;"	435:3:10337:10380	6286760	0	True				
ANR	6286823	IdentifierDecl	"* c = r_list_get_n ( cols , ncol )"		6286760	0					
ANR	6286824	IdentifierDeclType	RTableColumn *		6286760	0					
ANR	6286825	Identifier	c		6286760	1					
ANR	6286826	AssignmentExpression	"* c = r_list_get_n ( cols , ncol )"		6286760	2		=			
ANR	6286827	Identifier	c		6286760	0					
ANR	6286828	CallExpression	"r_list_get_n ( cols , ncol )"		6286760	1					
ANR	6286829	Callee	r_list_get_n		6286760	0					
ANR	6286830	Identifier	r_list_get_n		6286760	0					
ANR	6286831	ArgumentList	cols		6286760	1					
ANR	6286832	Argument	cols		6286760	0					
ANR	6286833	Identifier	cols		6286760	0					
ANR	6286834	Argument	ncol		6286760	1					
ANR	6286835	Identifier	ncol		6286760	0					
ANR	6286836	IfStatement	if ( c )		6286760	1					
ANR	6286837	Condition	c	436:7:10389:10389	6286760	0	True				
ANR	6286838	Identifier	c		6286760	0					
ANR	6286839	CompoundStatement		10:10:263:263	6286760	1					
ANR	6286840	ExpressionStatement	"r_table_add_column ( t , c -> type , col , 0 )"	438:4:10445:10484	6286760	0	True				
ANR	6286841	CallExpression	"r_table_add_column ( t , c -> type , col , 0 )"		6286760	0					
ANR	6286842	Callee	r_table_add_column		6286760	0					
ANR	6286843	Identifier	r_table_add_column		6286760	0					
ANR	6286844	ArgumentList	t		6286760	1					
ANR	6286845	Argument	t		6286760	0					
ANR	6286846	Identifier	t		6286760	0					
ANR	6286847	Argument	c -> type		6286760	1					
ANR	6286848	PtrMemberAccess	c -> type		6286760	0					
ANR	6286849	Identifier	c		6286760	0					
ANR	6286850	Identifier	type		6286760	1					
ANR	6286851	Argument	col		6286760	2					
ANR	6286852	Identifier	col		6286760	0					
ANR	6286853	Argument	0		6286760	3					
ANR	6286854	PrimaryExpression	0		6286760	0					
ANR	6286855	ReturnType	R_API void		6286760	1					
ANR	6286856	Identifier	r_table_filter_columns		6286760	2					
ANR	6286857	ParameterList	"RTable * t , RList * list"		6286760	3					
ANR	6286858	Parameter	RTable * t	427:34:10104:10112	6286760	0	True				
ANR	6286859	ParameterType	RTable *		6286760	0					
ANR	6286860	Identifier	t		6286760	1					
ANR	6286861	Parameter	RList * list	427:45:10115:10125	6286760	1	True				
ANR	6286862	ParameterType	RList *		6286760	0					
ANR	6286863	Identifier	list		6286760	1					
ANR	6286864	CFGEntryNode	ENTRY		6286760		True				
ANR	6286865	CFGExitNode	EXIT		6286760		True				
ANR	6286866	Symbol	col		6286760						
ANR	6286867	Symbol	ncol		6286760						
ANR	6286868	Symbol	c		6286760						
ANR	6286869	Symbol	__table_column_free		6286760						
ANR	6286870	Symbol	r_list_newf		6286760						
ANR	6286871	Symbol	t -> cols		6286760						
ANR	6286872	Symbol	iter		6286760						
ANR	6286873	Symbol	r_list_get_n		6286760						
ANR	6286874	Symbol	list		6286760						
ANR	6286875	Symbol	* c		6286760						
ANR	6286876	Symbol	r_table_column_nth		6286760						
ANR	6286877	Symbol	t		6286760						
ANR	6286878	Symbol	c -> type		6286760						
ANR	6286879	Symbol	cols		6286760						
ANR	6286880	Symbol	* t		6286760						
ANR	6286881	Function	r_table_query	444:0:10501:12121							
ANR	6286882	FunctionDef	"r_table_query (RTable * t , const char * q)"		6286881	0					
ANR	6286883	CompoundStatement		444:51:10552:12121	6286881	0					
ANR	6286884	IdentifierDeclStatement	RListIter * iter ;	448:1:10705:10720	6286881	0	True				
ANR	6286885	IdentifierDecl	* iter		6286881	0					
ANR	6286886	IdentifierDeclType	RListIter *		6286881	0					
ANR	6286887	Identifier	iter		6286881	1					
ANR	6286888	IdentifierDeclStatement	char * qq = strdup ( q ) ;	449:1:10723:10744	6286881	1	True				
ANR	6286889	IdentifierDecl	* qq = strdup ( q )		6286881	0					
ANR	6286890	IdentifierDeclType	char *		6286881	0					
ANR	6286891	Identifier	qq		6286881	1					
ANR	6286892	AssignmentExpression	* qq = strdup ( q )		6286881	2		=			
ANR	6286893	Identifier	qq		6286881	0					
ANR	6286894	CallExpression	strdup ( q )		6286881	1					
ANR	6286895	Callee	strdup		6286881	0					
ANR	6286896	Identifier	strdup		6286881	0					
ANR	6286897	ArgumentList	q		6286881	1					
ANR	6286898	Argument	q		6286881	0					
ANR	6286899	Identifier	q		6286881	0					
ANR	6286900	IdentifierDeclStatement	"RList * queries = r_str_split_list ( qq , "","" , 0 ) ;"	450:1:10747:10794	6286881	2	True				
ANR	6286901	IdentifierDecl	"* queries = r_str_split_list ( qq , "","" , 0 )"		6286881	0					
ANR	6286902	IdentifierDeclType	RList *		6286881	0					
ANR	6286903	Identifier	queries		6286881	1					
ANR	6286904	AssignmentExpression	"* queries = r_str_split_list ( qq , "","" , 0 )"		6286881	2		=			
ANR	6286905	Identifier	queries		6286881	0					
ANR	6286906	CallExpression	"r_str_split_list ( qq , "","" , 0 )"		6286881	1					
ANR	6286907	Callee	r_str_split_list		6286881	0					
ANR	6286908	Identifier	r_str_split_list		6286881	0					
ANR	6286909	ArgumentList	qq		6286881	1					
ANR	6286910	Argument	qq		6286881	0					
ANR	6286911	Identifier	qq		6286881	0					
ANR	6286912	Argument	""","""		6286881	1					
ANR	6286913	PrimaryExpression	""","""		6286881	0					
ANR	6286914	Argument	0		6286881	2					
ANR	6286915	PrimaryExpression	0		6286881	0					
ANR	6286916	IdentifierDeclStatement	char * query ;	451:1:10797:10808	6286881	3	True				
ANR	6286917	IdentifierDecl	* query		6286881	0					
ANR	6286918	IdentifierDeclType	char *		6286881	0					
ANR	6286919	Identifier	query		6286881	1					
ANR	6286920	Statement	r_list_foreach	452:1:10811:10824	6286881	4	True				
ANR	6286921	Statement	(	452:16:10826:10826	6286881	5	True				
ANR	6286922	Statement	queries	452:17:10827:10833	6286881	6	True				
ANR	6286923	Statement	","	452:24:10834:10834	6286881	7	True				
ANR	6286924	Statement	iter	452:26:10836:10839	6286881	8	True				
ANR	6286925	Statement	","	452:30:10840:10840	6286881	9	True				
ANR	6286926	Statement	query	452:32:10842:10846	6286881	10	True				
ANR	6286927	Statement	)	452:37:10847:10847	6286881	11	True				
ANR	6286928	CompoundStatement		14:2:487:531	6286881	12					
ANR	6286929	IdentifierDeclStatement	"RList * q = r_str_split_list ( query , ""/"" , 2 ) ;"	453:2:10853:10896	6286881	0	True				
ANR	6286930	IdentifierDecl	"* q = r_str_split_list ( query , ""/"" , 2 )"		6286881	0					
ANR	6286931	IdentifierDeclType	RList *		6286881	0					
ANR	6286932	Identifier	q		6286881	1					
ANR	6286933	AssignmentExpression	"* q = r_str_split_list ( query , ""/"" , 2 )"		6286881	2		=			
ANR	6286934	Identifier	q		6286881	0					
ANR	6286935	CallExpression	"r_str_split_list ( query , ""/"" , 2 )"		6286881	1					
ANR	6286936	Callee	r_str_split_list		6286881	0					
ANR	6286937	Identifier	r_str_split_list		6286881	0					
ANR	6286938	ArgumentList	query		6286881	1					
ANR	6286939	Argument	query		6286881	0					
ANR	6286940	Identifier	query		6286881	0					
ANR	6286941	Argument	"""/"""		6286881	1					
ANR	6286942	PrimaryExpression	"""/"""		6286881	0					
ANR	6286943	Argument	2		6286881	2					
ANR	6286944	PrimaryExpression	2		6286881	0					
ANR	6286945	IdentifierDeclStatement	"const char * columnName = r_list_get_n ( q , 0 ) ;"	454:2:10900:10944	6286881	1	True				
ANR	6286946	IdentifierDecl	"* columnName = r_list_get_n ( q , 0 )"		6286881	0					
ANR	6286947	IdentifierDeclType	const char *		6286881	0					
ANR	6286948	Identifier	columnName		6286881	1					
ANR	6286949	AssignmentExpression	"* columnName = r_list_get_n ( q , 0 )"		6286881	2		=			
ANR	6286950	Identifier	columnName		6286881	0					
ANR	6286951	CallExpression	"r_list_get_n ( q , 0 )"		6286881	1					
ANR	6286952	Callee	r_list_get_n		6286881	0					
ANR	6286953	Identifier	r_list_get_n		6286881	0					
ANR	6286954	ArgumentList	q		6286881	1					
ANR	6286955	Argument	q		6286881	0					
ANR	6286956	Identifier	q		6286881	0					
ANR	6286957	Argument	0		6286881	1					
ANR	6286958	PrimaryExpression	0		6286881	0					
ANR	6286959	IdentifierDeclStatement	"const char * operation = r_list_get_n ( q , 1 ) ;"	455:2:10948:10991	6286881	2	True				
ANR	6286960	IdentifierDecl	"* operation = r_list_get_n ( q , 1 )"		6286881	0					
ANR	6286961	IdentifierDeclType	const char *		6286881	0					
ANR	6286962	Identifier	operation		6286881	1					
ANR	6286963	AssignmentExpression	"* operation = r_list_get_n ( q , 1 )"		6286881	2		=			
ANR	6286964	Identifier	operation		6286881	0					
ANR	6286965	CallExpression	"r_list_get_n ( q , 1 )"		6286881	1					
ANR	6286966	Callee	r_list_get_n		6286881	0					
ANR	6286967	Identifier	r_list_get_n		6286881	0					
ANR	6286968	ArgumentList	q		6286881	1					
ANR	6286969	Argument	q		6286881	0					
ANR	6286970	Identifier	q		6286881	0					
ANR	6286971	Argument	1		6286881	1					
ANR	6286972	PrimaryExpression	1		6286881	0					
ANR	6286973	IdentifierDeclStatement	"const char * operand = r_list_get_n ( q , 2 ) ;"	456:2:10995:11036	6286881	3	True				
ANR	6286974	IdentifierDecl	"* operand = r_list_get_n ( q , 2 )"		6286881	0					
ANR	6286975	IdentifierDeclType	const char *		6286881	0					
ANR	6286976	Identifier	operand		6286881	1					
ANR	6286977	AssignmentExpression	"* operand = r_list_get_n ( q , 2 )"		6286881	2		=			
ANR	6286978	Identifier	operand		6286881	0					
ANR	6286979	CallExpression	"r_list_get_n ( q , 2 )"		6286881	1					
ANR	6286980	Callee	r_list_get_n		6286881	0					
ANR	6286981	Identifier	r_list_get_n		6286881	0					
ANR	6286982	ArgumentList	q		6286881	1					
ANR	6286983	Argument	q		6286881	0					
ANR	6286984	Identifier	q		6286881	0					
ANR	6286985	Argument	2		6286881	1					
ANR	6286986	PrimaryExpression	2		6286881	0					
ANR	6286987	IdentifierDeclStatement	"int col = r_table_column_nth ( t , columnName ) ;"	457:2:11040:11084	6286881	4	True				
ANR	6286988	IdentifierDecl	"col = r_table_column_nth ( t , columnName )"		6286881	0					
ANR	6286989	IdentifierDeclType	int		6286881	0					
ANR	6286990	Identifier	col		6286881	1					
ANR	6286991	AssignmentExpression	"col = r_table_column_nth ( t , columnName )"		6286881	2		=			
ANR	6286992	Identifier	col		6286881	0					
ANR	6286993	CallExpression	"r_table_column_nth ( t , columnName )"		6286881	1					
ANR	6286994	Callee	r_table_column_nth		6286881	0					
ANR	6286995	Identifier	r_table_column_nth		6286881	0					
ANR	6286996	ArgumentList	t		6286881	1					
ANR	6286997	Argument	t		6286881	0					
ANR	6286998	Identifier	t		6286881	0					
ANR	6286999	Argument	columnName		6286881	1					
ANR	6287000	Identifier	columnName		6286881	0					
ANR	6287001	IfStatement	if ( col == - 1 )		6286881	5					
ANR	6287002	Condition	col == - 1	458:6:11092:11100	6286881	0	True				
ANR	6287003	EqualityExpression	col == - 1		6286881	0		==			
ANR	6287004	Identifier	col		6286881	0					
ANR	6287005	UnaryOperationExpression	- 1		6286881	1					
ANR	6287006	UnaryOperator	-		6286881	0					
ANR	6287007	PrimaryExpression	1		6286881	1					
ANR	6287008	CompoundStatement		15:17:550:550	6286881	1					
ANR	6287009	IfStatement	if ( * columnName == '[' )		6286881	0					
ANR	6287010	Condition	* columnName == '['	459:7:11112:11129	6286881	0	True				
ANR	6287011	EqualityExpression	* columnName == '['		6286881	0		==			
ANR	6287012	UnaryOperationExpression	* columnName		6286881	0					
ANR	6287013	UnaryOperator	*		6286881	0					
ANR	6287014	Identifier	columnName		6286881	1					
ANR	6287015	PrimaryExpression	'['		6286881	1					
ANR	6287016	CompoundStatement		16:27:579:579	6286881	1					
ANR	6287017	ExpressionStatement	col = atoi ( columnName + 1 )	460:4:11138:11165	6286881	0	True				
ANR	6287018	AssignmentExpression	col = atoi ( columnName + 1 )		6286881	0		=			
ANR	6287019	Identifier	col		6286881	0					
ANR	6287020	CallExpression	atoi ( columnName + 1 )		6286881	1					
ANR	6287021	Callee	atoi		6286881	0					
ANR	6287022	Identifier	atoi		6286881	0					
ANR	6287023	ArgumentList	columnName + 1		6286881	1					
ANR	6287024	Argument	columnName + 1		6286881	0					
ANR	6287025	AdditiveExpression	columnName + 1		6286881	0		+			
ANR	6287026	Identifier	columnName		6286881	0					
ANR	6287027	PrimaryExpression	1		6286881	1					
ANR	6287028	ElseStatement	else		6286881	0					
ANR	6287029	CompoundStatement		18:10:624:624	6286881	0					
ANR	6287030	ExpressionStatement	"eprintf ( ""Invalid column name (%s) for (%s)\\n"" , columnName , query )"	462:4:11183:11249	6286881	0	True				
ANR	6287031	CallExpression	"eprintf ( ""Invalid column name (%s) for (%s)\\n"" , columnName , query )"		6286881	0					
ANR	6287032	Callee	eprintf		6286881	0					
ANR	6287033	Identifier	eprintf		6286881	0					
ANR	6287034	ArgumentList	"""Invalid column name (%s) for (%s)\\n"""		6286881	1					
ANR	6287035	Argument	"""Invalid column name (%s) for (%s)\\n"""		6286881	0					
ANR	6287036	PrimaryExpression	"""Invalid column name (%s) for (%s)\\n"""		6286881	0					
ANR	6287037	Argument	columnName		6286881	1					
ANR	6287038	Identifier	columnName		6286881	0					
ANR	6287039	Argument	query		6286881	2					
ANR	6287040	Identifier	query		6286881	0					
ANR	6287041	IfStatement	if ( ! operation )		6286881	6					
ANR	6287042	Condition	! operation	465:6:11266:11275	6286881	0	True				
ANR	6287043	UnaryOperationExpression	! operation		6286881	0					
ANR	6287044	UnaryOperator	!		6286881	0					
ANR	6287045	Identifier	operation		6286881	1					
ANR	6287046	CompoundStatement		22:18:725:725	6286881	1					
ANR	6287047	BreakStatement	break ;	466:3:11283:11288	6286881	0	True				
ANR	6287048	IfStatement	"if ( ! strcmp ( operation , ""sort"" ) )"		6286881	7					
ANR	6287049	Condition	"! strcmp ( operation , ""sort"" )"	468:6:11300:11326	6286881	0	True				
ANR	6287050	UnaryOperationExpression	"! strcmp ( operation , ""sort"" )"		6286881	0					
ANR	6287051	UnaryOperator	!		6286881	0					
ANR	6287052	CallExpression	"strcmp ( operation , ""sort"" )"		6286881	1					
ANR	6287053	Callee	strcmp		6286881	0					
ANR	6287054	Identifier	strcmp		6286881	0					
ANR	6287055	ArgumentList	operation		6286881	1					
ANR	6287056	Argument	operation		6286881	0					
ANR	6287057	Identifier	operation		6286881	0					
ANR	6287058	Argument	"""sort"""		6286881	1					
ANR	6287059	PrimaryExpression	"""sort"""		6286881	0					
ANR	6287060	CompoundStatement		25:35:776:776	6286881	1					
ANR	6287061	ExpressionStatement	"r_table_sort ( t , col , operand && ! strcmp ( operand , ""dec"" ) )"	469:3:11334:11392	6286881	0	True				
ANR	6287062	CallExpression	"r_table_sort ( t , col , operand && ! strcmp ( operand , ""dec"" ) )"		6286881	0					
ANR	6287063	Callee	r_table_sort		6286881	0					
ANR	6287064	Identifier	r_table_sort		6286881	0					
ANR	6287065	ArgumentList	t		6286881	1					
ANR	6287066	Argument	t		6286881	0					
ANR	6287067	Identifier	t		6286881	0					
ANR	6287068	Argument	col		6286881	1					
ANR	6287069	Identifier	col		6286881	0					
ANR	6287070	Argument	"operand && ! strcmp ( operand , ""dec"" )"		6286881	2					
ANR	6287071	AndExpression	"operand && ! strcmp ( operand , ""dec"" )"		6286881	0		&&			
ANR	6287072	Identifier	operand		6286881	0					
ANR	6287073	UnaryOperationExpression	"! strcmp ( operand , ""dec"" )"		6286881	1					
ANR	6287074	UnaryOperator	!		6286881	0					
ANR	6287075	CallExpression	"strcmp ( operand , ""dec"" )"		6286881	1					
ANR	6287076	Callee	strcmp		6286881	0					
ANR	6287077	Identifier	strcmp		6286881	0					
ANR	6287078	ArgumentList	operand		6286881	1					
ANR	6287079	Argument	operand		6286881	0					
ANR	6287080	Identifier	operand		6286881	0					
ANR	6287081	Argument	"""dec"""		6286881	1					
ANR	6287082	PrimaryExpression	"""dec"""		6286881	0					
ANR	6287083	ElseStatement	else		6286881	0					
ANR	6287084	IfStatement	"if ( ! strcmp ( operation , ""cols"" ) )"		6286881	0					
ANR	6287085	Condition	"! strcmp ( operation , ""cols"" )"	470:13:11407:11433	6286881	0	True				
ANR	6287086	UnaryOperationExpression	"! strcmp ( operation , ""cols"" )"		6286881	0					
ANR	6287087	UnaryOperator	!		6286881	0					
ANR	6287088	CallExpression	"strcmp ( operation , ""cols"" )"		6286881	1					
ANR	6287089	Callee	strcmp		6286881	0					
ANR	6287090	Identifier	strcmp		6286881	0					
ANR	6287091	ArgumentList	operation		6286881	1					
ANR	6287092	Argument	operation		6286881	0					
ANR	6287093	Identifier	operation		6286881	0					
ANR	6287094	Argument	"""cols"""		6286881	1					
ANR	6287095	PrimaryExpression	"""cols"""		6286881	0					
ANR	6287096	CompoundStatement		29:3:920:963	6286881	1					
ANR	6287097	IdentifierDeclStatement	char * op = strdup ( operand ) ;	471:3:11441:11468	6286881	0	True				
ANR	6287098	IdentifierDecl	* op = strdup ( operand )		6286881	0					
ANR	6287099	IdentifierDeclType	char *		6286881	0					
ANR	6287100	Identifier	op		6286881	1					
ANR	6287101	AssignmentExpression	* op = strdup ( operand )		6286881	2		=			
ANR	6287102	Identifier	op		6286881	0					
ANR	6287103	CallExpression	strdup ( operand )		6286881	1					
ANR	6287104	Callee	strdup		6286881	0					
ANR	6287105	Identifier	strdup		6286881	0					
ANR	6287106	ArgumentList	operand		6286881	1					
ANR	6287107	Argument	operand		6286881	0					
ANR	6287108	Identifier	operand		6286881	0					
ANR	6287109	IdentifierDeclStatement	"RList * list = r_str_split_list ( op , ""/"" , 0 ) ;"	472:3:11473:11516	6286881	1	True				
ANR	6287110	IdentifierDecl	"* list = r_str_split_list ( op , ""/"" , 0 )"		6286881	0					
ANR	6287111	IdentifierDeclType	RList *		6286881	0					
ANR	6287112	Identifier	list		6286881	1					
ANR	6287113	AssignmentExpression	"* list = r_str_split_list ( op , ""/"" , 0 )"		6286881	2		=			
ANR	6287114	Identifier	list		6286881	0					
ANR	6287115	CallExpression	"r_str_split_list ( op , ""/"" , 0 )"		6286881	1					
ANR	6287116	Callee	r_str_split_list		6286881	0					
ANR	6287117	Identifier	r_str_split_list		6286881	0					
ANR	6287118	ArgumentList	op		6286881	1					
ANR	6287119	Argument	op		6286881	0					
ANR	6287120	Identifier	op		6286881	0					
ANR	6287121	Argument	"""/"""		6286881	1					
ANR	6287122	PrimaryExpression	"""/"""		6286881	0					
ANR	6287123	Argument	0		6286881	2					
ANR	6287124	PrimaryExpression	0		6286881	0					
ANR	6287125	ExpressionStatement	"r_list_prepend ( list , strdup ( columnName ) )"	473:3:11521:11563	6286881	2	True				
ANR	6287126	CallExpression	"r_list_prepend ( list , strdup ( columnName ) )"		6286881	0					
ANR	6287127	Callee	r_list_prepend		6286881	0					
ANR	6287128	Identifier	r_list_prepend		6286881	0					
ANR	6287129	ArgumentList	list		6286881	1					
ANR	6287130	Argument	list		6286881	0					
ANR	6287131	Identifier	list		6286881	0					
ANR	6287132	Argument	strdup ( columnName )		6286881	1					
ANR	6287133	CallExpression	strdup ( columnName )		6286881	0					
ANR	6287134	Callee	strdup		6286881	0					
ANR	6287135	Identifier	strdup		6286881	0					
ANR	6287136	ArgumentList	columnName		6286881	1					
ANR	6287137	Argument	columnName		6286881	0					
ANR	6287138	Identifier	columnName		6286881	0					
ANR	6287139	ExpressionStatement	"r_table_columns ( t , list )"	474:3:11568:11593	6286881	3	True				
ANR	6287140	CallExpression	"r_table_columns ( t , list )"		6286881	0					
ANR	6287141	Callee	r_table_columns		6286881	0					
ANR	6287142	Identifier	r_table_columns		6286881	0					
ANR	6287143	ArgumentList	t		6286881	1					
ANR	6287144	Argument	t		6286881	0					
ANR	6287145	Identifier	t		6286881	0					
ANR	6287146	Argument	list		6286881	1					
ANR	6287147	Identifier	list		6286881	0					
ANR	6287148	ExpressionStatement	r_list_free ( list )	475:3:11624:11642	6286881	4	True				
ANR	6287149	CallExpression	r_list_free ( list )		6286881	0					
ANR	6287150	Callee	r_list_free		6286881	0					
ANR	6287151	Identifier	r_list_free		6286881	0					
ANR	6287152	ArgumentList	list		6286881	1					
ANR	6287153	Argument	list		6286881	0					
ANR	6287154	Identifier	list		6286881	0					
ANR	6287155	ExpressionStatement	free ( op )	476:3:11647:11656	6286881	5	True				
ANR	6287156	CallExpression	free ( op )		6286881	0					
ANR	6287157	Callee	free		6286881	0					
ANR	6287158	Identifier	free		6286881	0					
ANR	6287159	ArgumentList	op		6286881	1					
ANR	6287160	Argument	op		6286881	0					
ANR	6287161	Identifier	op		6286881	0					
ANR	6287162	ElseStatement	else		6286881	0					
ANR	6287163	IfStatement	"if ( ! strcmp ( operation , ""quiet"" ) )"		6286881	0					
ANR	6287164	Condition	"! strcmp ( operation , ""quiet"" )"	478:13:11712:11739	6286881	0	True				
ANR	6287165	UnaryOperationExpression	"! strcmp ( operation , ""quiet"" )"		6286881	0					
ANR	6287166	UnaryOperator	!		6286881	0					
ANR	6287167	CallExpression	"strcmp ( operation , ""quiet"" )"		6286881	1					
ANR	6287168	Callee	strcmp		6286881	0					
ANR	6287169	Identifier	strcmp		6286881	0					
ANR	6287170	ArgumentList	operation		6286881	1					
ANR	6287171	Argument	operation		6286881	0					
ANR	6287172	Identifier	operation		6286881	0					
ANR	6287173	Argument	"""quiet"""		6286881	1					
ANR	6287174	PrimaryExpression	"""quiet"""		6286881	0					
ANR	6287175	CompoundStatement		35:43:1189:1189	6286881	1					
ANR	6287176	ExpressionStatement	t -> showHeader = false	479:3:11747:11768	6286881	0	True				
ANR	6287177	AssignmentExpression	t -> showHeader = false		6286881	0		=			
ANR	6287178	PtrMemberAccess	t -> showHeader		6286881	0					
ANR	6287179	Identifier	t		6286881	0					
ANR	6287180	Identifier	showHeader		6286881	1					
ANR	6287181	Identifier	false		6286881	1					
ANR	6287182	ElseStatement	else		6286881	0					
ANR	6287183	IfStatement	"if ( ! strcmp ( operation , ""graph"" ) )"		6286881	0					
ANR	6287184	Condition	"! strcmp ( operation , ""graph"" )"	480:13:11783:11810	6286881	0	True				
ANR	6287185	UnaryOperationExpression	"! strcmp ( operation , ""graph"" )"		6286881	0					
ANR	6287186	UnaryOperator	!		6286881	0					
ANR	6287187	CallExpression	"strcmp ( operation , ""graph"" )"		6286881	1					
ANR	6287188	Callee	strcmp		6286881	0					
ANR	6287189	Identifier	strcmp		6286881	0					
ANR	6287190	ArgumentList	operation		6286881	1					
ANR	6287191	Argument	operation		6286881	0					
ANR	6287192	Identifier	operation		6286881	0					
ANR	6287193	Argument	"""graph"""		6286881	1					
ANR	6287194	PrimaryExpression	"""graph"""		6286881	0					
ANR	6287195	CompoundStatement		37:43:1260:1260	6286881	1					
ANR	6287196	ElseStatement	else		6286881	0					
ANR	6287197	CompoundStatement		40:3:1313:1352	6286881	0					
ANR	6287198	IdentifierDeclStatement	int op = __resolveOperation ( operation ) ;	483:3:11866:11905	6286881	0	True				
ANR	6287199	IdentifierDecl	op = __resolveOperation ( operation )		6286881	0					
ANR	6287200	IdentifierDeclType	int		6286881	0					
ANR	6287201	Identifier	op		6286881	1					
ANR	6287202	AssignmentExpression	op = __resolveOperation ( operation )		6286881	2		=			
ANR	6287203	Identifier	op		6286881	0					
ANR	6287204	CallExpression	__resolveOperation ( operation )		6286881	1					
ANR	6287205	Callee	__resolveOperation		6286881	0					
ANR	6287206	Identifier	__resolveOperation		6286881	0					
ANR	6287207	ArgumentList	operation		6286881	1					
ANR	6287208	Argument	operation		6286881	0					
ANR	6287209	Identifier	operation		6286881	0					
ANR	6287210	IfStatement	if ( op == - 1 )		6286881	1					
ANR	6287211	Condition	op == - 1	484:7:11914:11921	6286881	0	True				
ANR	6287212	EqualityExpression	op == - 1		6286881	0		==			
ANR	6287213	Identifier	op		6286881	0					
ANR	6287214	UnaryOperationExpression	- 1		6286881	1					
ANR	6287215	UnaryOperator	-		6286881	0					
ANR	6287216	PrimaryExpression	1		6286881	1					
ANR	6287217	CompoundStatement		41:17:1371:1371	6286881	1					
ANR	6287218	ExpressionStatement	"eprintf ( ""Invalid operation (%s)\\n"" , operation )"	485:4:11930:11977	6286881	0	True				
ANR	6287219	CallExpression	"eprintf ( ""Invalid operation (%s)\\n"" , operation )"		6286881	0					
ANR	6287220	Callee	eprintf		6286881	0					
ANR	6287221	Identifier	eprintf		6286881	0					
ANR	6287222	ArgumentList	"""Invalid operation (%s)\\n"""		6286881	1					
ANR	6287223	Argument	"""Invalid operation (%s)\\n"""		6286881	0					
ANR	6287224	PrimaryExpression	"""Invalid operation (%s)\\n"""		6286881	0					
ANR	6287225	Argument	operation		6286881	1					
ANR	6287226	Identifier	operation		6286881	0					
ANR	6287227	ElseStatement	else		6286881	0					
ANR	6287228	CompoundStatement		43:10:1436:1436	6286881	0					
ANR	6287229	ExpressionStatement	"r_table_filter ( t , col , op , operand )"	487:4:11995:12031	6286881	0	True				
ANR	6287230	CallExpression	"r_table_filter ( t , col , op , operand )"		6286881	0					
ANR	6287231	Callee	r_table_filter		6286881	0					
ANR	6287232	Identifier	r_table_filter		6286881	0					
ANR	6287233	ArgumentList	t		6286881	1					
ANR	6287234	Argument	t		6286881	0					
ANR	6287235	Identifier	t		6286881	0					
ANR	6287236	Argument	col		6286881	1					
ANR	6287237	Identifier	col		6286881	0					
ANR	6287238	Argument	op		6286881	2					
ANR	6287239	Identifier	op		6286881	0					
ANR	6287240	Argument	operand		6286881	3					
ANR	6287241	Identifier	operand		6286881	0					
ANR	6287242	ExpressionStatement	r_list_free ( q )	490:2:12044:12059	6286881	8	True				
ANR	6287243	CallExpression	r_list_free ( q )		6286881	0					
ANR	6287244	Callee	r_list_free		6286881	0					
ANR	6287245	Identifier	r_list_free		6286881	0					
ANR	6287246	ArgumentList	q		6286881	1					
ANR	6287247	Argument	q		6286881	0					
ANR	6287248	Identifier	q		6286881	0					
ANR	6287249	ExpressionStatement	r_list_free ( queries )	492:1:12065:12086	6286881	13	True				
ANR	6287250	CallExpression	r_list_free ( queries )		6286881	0					
ANR	6287251	Callee	r_list_free		6286881	0					
ANR	6287252	Identifier	r_list_free		6286881	0					
ANR	6287253	ArgumentList	queries		6286881	1					
ANR	6287254	Argument	queries		6286881	0					
ANR	6287255	Identifier	queries		6286881	0					
ANR	6287256	ExpressionStatement	free ( qq )	493:1:12089:12098	6286881	14	True				
ANR	6287257	CallExpression	free ( qq )		6286881	0					
ANR	6287258	Callee	free		6286881	0					
ANR	6287259	Identifier	free		6286881	0					
ANR	6287260	ArgumentList	qq		6286881	1					
ANR	6287261	Argument	qq		6286881	0					
ANR	6287262	Identifier	qq		6286881	0					
ANR	6287263	ExpressionStatement	__table_adjust ( t )	494:1:12101:12119	6286881	15	True				
ANR	6287264	CallExpression	__table_adjust ( t )		6286881	0					
ANR	6287265	Callee	__table_adjust		6286881	0					
ANR	6287266	Identifier	__table_adjust		6286881	0					
ANR	6287267	ArgumentList	t		6286881	1					
ANR	6287268	Argument	t		6286881	0					
ANR	6287269	Identifier	t		6286881	0					
ANR	6287270	ReturnType	R_API void		6286881	1					
ANR	6287271	Identifier	r_table_query		6286881	2					
ANR	6287272	ParameterList	"RTable * t , const char * q"		6286881	3					
ANR	6287273	Parameter	RTable * t	444:25:10526:10534	6286881	0	True				
ANR	6287274	ParameterType	RTable *		6286881	0					
ANR	6287275	Identifier	t		6286881	1					
ANR	6287276	Parameter	const char * q	444:36:10537:10549	6286881	1	True				
ANR	6287277	ParameterType	const char *		6286881	0					
ANR	6287278	Identifier	q		6286881	1					
ANR	6287279	CFGEntryNode	ENTRY		6286881		True				
ANR	6287280	CFGExitNode	EXIT		6286881		True				
ANR	6287281	CFGErrorNode	ERROR		6286881		True				
ANR	6287282	Symbol	qq		6286881						
ANR	6287283	Symbol	atoi		6286881						
ANR	6287284	Symbol	strcmp		6286881						
ANR	6287285	Symbol	col		6286881						
ANR	6287286	Symbol	op		6286881						
ANR	6287287	Symbol	query		6286881						
ANR	6287288	Symbol	r_str_split_list		6286881						
ANR	6287289	Symbol	false		6286881						
ANR	6287290	Symbol	iter		6286881						
ANR	6287291	Symbol	r_list_get_n		6286881						
ANR	6287292	Symbol	list		6286881						
ANR	6287293	Symbol	queries		6286881						
ANR	6287294	Symbol	* columnName		6286881						
ANR	6287295	Symbol	q		6286881						
ANR	6287296	Symbol	r_table_column_nth		6286881						
ANR	6287297	Symbol	t		6286881						
ANR	6287298	Symbol	strdup		6286881						
ANR	6287299	Symbol	t -> showHeader		6286881						
ANR	6287300	Symbol	operation		6286881						
ANR	6287301	Symbol	__resolveOperation		6286881						
ANR	6287302	Symbol	operand		6286881						
ANR	6287303	Symbol	* t		6286881						
ANR	6287304	Symbol	columnName		6286881						
ANR	6287305	Function	r_table_clone	499:0:12157:12232							
ANR	6287306	FunctionDef	r_table_clone (RTable * t)		6287305	0					
ANR	6287307	CompoundStatement		499:39:12196:12232	6287305	0					
ANR	6287308	ReturnStatement	return NULL ;	501:1:12219:12230	6287305	0	True				
ANR	6287309	Identifier	NULL		6287305	0					
ANR	6287310	ReturnType	R_API RTable *		6287305	1					
ANR	6287311	Identifier	r_table_clone		6287305	2					
ANR	6287312	ParameterList	RTable * t		6287305	3					
ANR	6287313	Parameter	RTable * t	499:28:12185:12193	6287305	0	True				
ANR	6287314	ParameterType	RTable *		6287305	0					
ANR	6287315	Identifier	t		6287305	1					
ANR	6287316	CFGEntryNode	ENTRY		6287305		True				
ANR	6287317	CFGExitNode	EXIT		6287305		True				
ANR	6287318	Symbol	NULL		6287305						
ANR	6287319	Symbol	t		6287305						
ANR	6287320	Function	r_table_push	504:0:12235:12309							
ANR	6287321	FunctionDef	r_table_push (RTable * t)		6287320	0					
ANR	6287322	CompoundStatement		504:38:12273:12309	6287320	0					
ANR	6287323	ReturnStatement	return NULL ;	506:1:12296:12307	6287320	0	True				
ANR	6287324	Identifier	NULL		6287320	0					
ANR	6287325	ReturnType	R_API RTable *		6287320	1					
ANR	6287326	Identifier	r_table_push		6287320	2					
ANR	6287327	ParameterList	RTable * t		6287320	3					
ANR	6287328	Parameter	RTable * t	504:27:12262:12270	6287320	0	True				
ANR	6287329	ParameterType	RTable *		6287320	0					
ANR	6287330	Identifier	t		6287320	1					
ANR	6287331	CFGEntryNode	ENTRY		6287320		True				
ANR	6287332	CFGExitNode	EXIT		6287320		True				
ANR	6287333	Symbol	NULL		6287320						
ANR	6287334	Symbol	t		6287320						
ANR	6287335	Function	r_table_pop	509:0:12312:12385							
ANR	6287336	FunctionDef	r_table_pop (RTable * t)		6287335	0					
ANR	6287337	CompoundStatement		509:37:12349:12385	6287335	0					
ANR	6287338	ReturnStatement	return NULL ;	511:1:12372:12383	6287335	0	True				
ANR	6287339	Identifier	NULL		6287335	0					
ANR	6287340	ReturnType	R_API RTable *		6287335	1					
ANR	6287341	Identifier	r_table_pop		6287335	2					
ANR	6287342	ParameterList	RTable * t		6287335	3					
ANR	6287343	Parameter	RTable * t	509:26:12338:12346	6287335	0	True				
ANR	6287344	ParameterType	RTable *		6287335	0					
ANR	6287345	Identifier	t		6287335	1					
ANR	6287346	CFGEntryNode	ENTRY		6287335		True				
ANR	6287347	CFGExitNode	EXIT		6287335		True				
ANR	6287348	Symbol	NULL		6287335						
ANR	6287349	Symbol	t		6287335						
ANR	6287350	Function	r_table_fromjson	514:0:12388:12456							
ANR	6287351	FunctionDef	"r_table_fromjson (RTable * t , const char * csv)"		6287350	0					
ANR	6287352	CompoundStatement		514:56:12444:12456	6287350	0					
ANR	6287353	ReturnType	R_API void		6287350	1					
ANR	6287354	Identifier	r_table_fromjson		6287350	2					
ANR	6287355	ParameterList	"RTable * t , const char * csv"		6287350	3					
ANR	6287356	Parameter	RTable * t	514:28:12416:12424	6287350	0	True				
ANR	6287357	ParameterType	RTable *		6287350	0					
ANR	6287358	Identifier	t		6287350	1					
ANR	6287359	Parameter	const char * csv	514:39:12427:12441	6287350	1	True				
ANR	6287360	ParameterType	const char *		6287350	0					
ANR	6287361	Identifier	csv		6287350	1					
ANR	6287362	CFGEntryNode	ENTRY		6287350		True				
ANR	6287363	CFGExitNode	EXIT		6287350		True				
ANR	6287364	Symbol	t		6287350						
ANR	6287365	Symbol	csv		6287350						
ANR	6287366	Function	r_table_fromcsv	518:0:12459:12526							
ANR	6287367	FunctionDef	"r_table_fromcsv (RTable * t , const char * csv)"		6287366	0					
ANR	6287368	CompoundStatement		518:55:12514:12526	6287366	0					
ANR	6287369	ReturnType	R_API void		6287366	1					
ANR	6287370	Identifier	r_table_fromcsv		6287366	2					
ANR	6287371	ParameterList	"RTable * t , const char * csv"		6287366	3					
ANR	6287372	Parameter	RTable * t	518:27:12486:12494	6287366	0	True				
ANR	6287373	ParameterType	RTable *		6287366	0					
ANR	6287374	Identifier	t		6287366	1					
ANR	6287375	Parameter	const char * csv	518:38:12497:12511	6287366	1	True				
ANR	6287376	ParameterType	const char *		6287366	0					
ANR	6287377	Identifier	csv		6287366	1					
ANR	6287378	CFGEntryNode	ENTRY		6287366		True				
ANR	6287379	CFGExitNode	EXIT		6287366		True				
ANR	6287380	Symbol	t		6287366						
ANR	6287381	Symbol	csv		6287366						
ANR	6287382	Function	r_table_tohtml	522:0:12529:12592							
ANR	6287383	FunctionDef	r_table_tohtml (RTable * t)		6287382	0					
ANR	6287384	CompoundStatement		522:38:12567:12592	6287382	0					
ANR	6287385	ReturnStatement	return NULL ;	524:1:12579:12590	6287382	0	True				
ANR	6287386	Identifier	NULL		6287382	0					
ANR	6287387	ReturnType	R_API char *		6287382	1					
ANR	6287388	Identifier	r_table_tohtml		6287382	2					
ANR	6287389	ParameterList	RTable * t		6287382	3					
ANR	6287390	Parameter	RTable * t	522:27:12556:12564	6287382	0	True				
ANR	6287391	ParameterType	RTable *		6287382	0					
ANR	6287392	Identifier	t		6287382	1					
ANR	6287393	CFGEntryNode	ENTRY		6287382		True				
ANR	6287394	CFGExitNode	EXIT		6287382		True				
ANR	6287395	Symbol	NULL		6287382						
ANR	6287396	Symbol	t		6287382						
ANR	6287397	Function	r_table_transpose	527:0:12595:12698							
ANR	6287398	FunctionDef	r_table_transpose (RTable * t)		6287397	0					
ANR	6287399	CompoundStatement		527:40:12635:12698	6287397	0					
ANR	6287400	ReturnType	R_API void		6287397	1					
ANR	6287401	Identifier	r_table_transpose		6287397	2					
ANR	6287402	ParameterList	RTable * t		6287397	3					
ANR	6287403	Parameter	RTable * t	527:29:12624:12632	6287397	0	True				
ANR	6287404	ParameterType	RTable *		6287397	0					
ANR	6287405	Identifier	t		6287397	1					
ANR	6287406	CFGEntryNode	ENTRY		6287397		True				
ANR	6287407	CFGExitNode	EXIT		6287397		True				
ANR	6287408	Symbol	t		6287397						
ANR	6287409	Function	r_table_format	531:0:12701:12861							
ANR	6287410	FunctionDef	"r_table_format (RTable * t , int nth , RTableColumnType * type)"		6287409	0					
ANR	6287411	CompoundStatement		531:70:12771:12861	6287409	0					
ANR	6287412	ReturnType	R_API void		6287409	1					
ANR	6287413	Identifier	r_table_format		6287409	2					
ANR	6287414	ParameterList	"RTable * t , int nth , RTableColumnType * type"		6287409	3					
ANR	6287415	Parameter	RTable * t	531:26:12727:12735	6287409	0	True				
ANR	6287416	ParameterType	RTable *		6287409	0					
ANR	6287417	Identifier	t		6287409	1					
ANR	6287418	Parameter	int nth	531:37:12738:12744	6287409	1	True				
ANR	6287419	ParameterType	int		6287409	0					
ANR	6287420	Identifier	nth		6287409	1					
ANR	6287421	Parameter	RTableColumnType * type	531:46:12747:12768	6287409	2	True				
ANR	6287422	ParameterType	RTableColumnType *		6287409	0					
ANR	6287423	Identifier	type		6287409	1					
ANR	6287424	CFGEntryNode	ENTRY		6287409		True				
ANR	6287425	CFGExitNode	EXIT		6287409		True				
ANR	6287426	Symbol	nth		6287409						
ANR	6287427	Symbol	t		6287409						
ANR	6287428	Symbol	type		6287409						
ANR	6287429	Function	r_table_reduce	537:0:12921:13041							
ANR	6287430	FunctionDef	"r_table_reduce (RTable * t , int nth)"		6287429	0					
ANR	6287431	CompoundStatement		537:46:12967:13041	6287429	0					
ANR	6287432	ReturnStatement	return 0 ;	539:1:13031:13039	6287429	0	True				
ANR	6287433	PrimaryExpression	0		6287429	0					
ANR	6287434	ReturnType	R_API ut64		6287429	1					
ANR	6287435	Identifier	r_table_reduce		6287429	2					
ANR	6287436	ParameterList	"RTable * t , int nth"		6287429	3					
ANR	6287437	Parameter	RTable * t	537:26:12947:12955	6287429	0	True				
ANR	6287438	ParameterType	RTable *		6287429	0					
ANR	6287439	Identifier	t		6287429	1					
ANR	6287440	Parameter	int nth	537:37:12958:12964	6287429	1	True				
ANR	6287441	ParameterType	int		6287429	0					
ANR	6287442	Identifier	nth		6287429	1					
ANR	6287443	CFGEntryNode	ENTRY		6287429		True				
ANR	6287444	CFGExitNode	EXIT		6287429		True				
ANR	6287445	Symbol	nth		6287429						
ANR	6287446	Symbol	t		6287429						
ANR	6287447	Function	r_table_columns	542:0:13044:13318							
ANR	6287448	FunctionDef	"r_table_columns (RTable * t , const char * name)"		6287447	0					
ANR	6287449	CompoundStatement		542:61:13105:13318	6287447	0					
ANR	6287450	IdentifierDeclStatement	va_list ap ;	543:1:13108:13118	6287447	0	True				
ANR	6287451	IdentifierDecl	ap		6287447	0					
ANR	6287452	IdentifierDeclType	va_list		6287447	0					
ANR	6287453	Identifier	ap		6287447	1					
ANR	6287454	ExpressionStatement	"va_start ( ap , fmt )"	544:1:13121:13139	6287447	1	True				
ANR	6287455	CallExpression	"va_start ( ap , fmt )"		6287447	0					
ANR	6287456	Callee	va_start		6287447	0					
ANR	6287457	Identifier	va_start		6287447	0					
ANR	6287458	ArgumentList	ap		6287447	1					
ANR	6287459	Argument	ap		6287447	0					
ANR	6287460	Identifier	ap		6287447	0					
ANR	6287461	Argument	fmt		6287447	1					
ANR	6287462	Identifier	fmt		6287447	0					
ANR	6287463	ExpressionStatement	r_list_free ( t -> cols )	545:1:13142:13163	6287447	2	True				
ANR	6287464	CallExpression	r_list_free ( t -> cols )		6287447	0					
ANR	6287465	Callee	r_list_free		6287447	0					
ANR	6287466	Identifier	r_list_free		6287447	0					
ANR	6287467	ArgumentList	t -> cols		6287447	1					
ANR	6287468	Argument	t -> cols		6287447	0					
ANR	6287469	PtrMemberAccess	t -> cols		6287447	0					
ANR	6287470	Identifier	t		6287447	0					
ANR	6287471	Identifier	cols		6287447	1					
ANR	6287472	ExpressionStatement	t -> cols = r_list_newf ( __table_column_free )	546:1:13166:13209	6287447	3	True				
ANR	6287473	AssignmentExpression	t -> cols = r_list_newf ( __table_column_free )		6287447	0		=			
ANR	6287474	PtrMemberAccess	t -> cols		6287447	0					
ANR	6287475	Identifier	t		6287447	0					
ANR	6287476	Identifier	cols		6287447	1					
ANR	6287477	CallExpression	r_list_newf ( __table_column_free )		6287447	1					
ANR	6287478	Callee	r_list_newf		6287447	0					
ANR	6287479	Identifier	r_list_newf		6287447	0					
ANR	6287480	ArgumentList	__table_column_free		6287447	1					
ANR	6287481	Argument	__table_column_free		6287447	0					
ANR	6287482	Identifier	__table_column_free		6287447	0					
ANR	6287483	ForStatement	for ( ; ; )		6287447	4					
ANR	6287484	CompoundStatement		6:10:115:115	6287447	0					
ANR	6287485	Statement	const	548:2:13225:13229	6287447	0	True				
ANR	6287486	Statement	char	548:8:13231:13234	6287447	1	True				
ANR	6287487	Statement	*	548:13:13236:13236	6287447	2	True				
ANR	6287488	Statement	n	548:14:13237:13237	6287447	3	True				
ANR	6287489	Statement	=	548:16:13239:13239	6287447	4	True				
ANR	6287490	Statement	va_arg	548:18:13241:13246	6287447	5	True				
ANR	6287491	Statement	(	548:25:13248:13248	6287447	6	True				
ANR	6287492	Statement	ap	548:26:13249:13250	6287447	7	True				
ANR	6287493	Statement	","	548:28:13251:13251	6287447	8	True				
ANR	6287494	Statement	const	548:30:13253:13257	6287447	9	True				
ANR	6287495	Statement	char	548:36:13259:13262	6287447	10	True				
ANR	6287496	Statement	*	548:41:13264:13264	6287447	11	True				
ANR	6287497	Statement	)	548:42:13265:13265	6287447	12	True				
ANR	6287498	ExpressionStatement		548:43:13266:13266	6287447	13	True				
ANR	6287499	IfStatement	if ( ! n )		6287447	14					
ANR	6287500	Condition	! n	549:6:13274:13275	6287447	0	True				
ANR	6287501	UnaryOperationExpression	! n		6287447	0					
ANR	6287502	UnaryOperator	!		6287447	0					
ANR	6287503	Identifier	n		6287447	1					
ANR	6287504	CompoundStatement		8:10:172:172	6287447	1					
ANR	6287505	BreakStatement	break ;	550:3:13283:13288	6287447	0	True				
ANR	6287506	ExpressionStatement	va_end ( ap )	553:8:13305:13316	6287447	5	True				
ANR	6287507	CallExpression	va_end ( ap )		6287447	0					
ANR	6287508	Callee	va_end		6287447	0					
ANR	6287509	Identifier	va_end		6287447	0					
ANR	6287510	ArgumentList	ap		6287447	1					
ANR	6287511	Argument	ap		6287447	0					
ANR	6287512	Identifier	ap		6287447	0					
ANR	6287513	ReturnType	R_API void		6287447	1					
ANR	6287514	Identifier	r_table_columns		6287447	2					
ANR	6287515	ParameterList	"RTable * t , const char * name"		6287447	3					
ANR	6287516	Parameter	RTable * t	542:27:13071:13079	6287447	0	True				
ANR	6287517	ParameterType	RTable *		6287447	0					
ANR	6287518	Identifier	t		6287447	1					
ANR	6287519	Parameter	const char * name	542:38:13082:13097	6287447	1	True				
ANR	6287520	ParameterType	const char *		6287447	0					
ANR	6287521	Identifier	name		6287447	1					
ANR	6287522	CFGEntryNode	ENTRY		6287447		True				
ANR	6287523	CFGExitNode	EXIT		6287447		True				
ANR	6287524	InfiniteForNode	true		6287447		True				
ANR	6287525	Symbol	t		6287447						
ANR	6287526	Symbol	r_list_newf		6287447						
ANR	6287527	Symbol	__table_column_free		6287447						
ANR	6287528	Symbol	name		6287447						
ANR	6287529	Symbol	t -> cols		6287447						
ANR	6287530	Symbol	fmt		6287447						
ANR	6287531	Symbol	* t		6287447						
ANR	6287532	Symbol	n		6287447						
ANR	6287533	Symbol	ap		6287447						
