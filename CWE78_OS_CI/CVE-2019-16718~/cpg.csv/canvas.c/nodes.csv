command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	682446	File	data/converged/CVE-2019-16718~_radare2/canvas.c								
ANR	682447	Function	__isAnsiSequence	12:0:299:393							
ANR	682448	FunctionDef	__isAnsiSequence (const char * s)		682447	0					
ANR	682449	CompoundStatement		12:51:350:393	682447	0					
ANR	682450	ReturnStatement	return s && s [ 0 ] == 033 && s [ 1 ] == '[' ;	13:1:353:391	682447	0	True				
ANR	682451	AndExpression	s && s [ 0 ] == 033 && s [ 1 ] == '['		682447	0		&&			
ANR	682452	Identifier	s		682447	0					
ANR	682453	AndExpression	s [ 0 ] == 033 && s [ 1 ] == '['		682447	1		&&			
ANR	682454	EqualityExpression	s [ 0 ] == 033		682447	0		==			
ANR	682455	ArrayIndexing	s [ 0 ]		682447	0					
ANR	682456	Identifier	s		682447	0					
ANR	682457	PrimaryExpression	0		682447	1					
ANR	682458	PrimaryExpression	033		682447	1					
ANR	682459	EqualityExpression	s [ 1 ] == '['		682447	1		==			
ANR	682460	ArrayIndexing	s [ 1 ]		682447	0					
ANR	682461	Identifier	s		682447	0					
ANR	682462	PrimaryExpression	1		682447	1					
ANR	682463	PrimaryExpression	'['		682447	1					
ANR	682464	ReturnType	static inline bool		682447	1					
ANR	682465	Identifier	__isAnsiSequence		682447	2					
ANR	682466	ParameterList	const char * s		682447	3					
ANR	682467	Parameter	const char * s	12:36:335:347	682447	0	True				
ANR	682468	ParameterType	const char *		682447	0					
ANR	682469	Identifier	s		682447	1					
ANR	682470	CFGEntryNode	ENTRY		682447		True				
ANR	682471	CFGExitNode	EXIT		682447		True				
ANR	682472	Symbol	s		682447						
ANR	682473	Symbol	* s		682447						
ANR	682474	Function	__getAnsiPiece	16:0:396:608							
ANR	682475	FunctionDef	"__getAnsiPiece (const char * p , char * chr)"		682474	0					
ANR	682476	CompoundStatement		16:52:448:608	682474	0					
ANR	682477	IdentifierDeclStatement	const char * q = p ;	17:1:451:468	682474	0	True				
ANR	682478	IdentifierDecl	* q = p		682474	0					
ANR	682479	IdentifierDeclType	const char *		682474	0					
ANR	682480	Identifier	q		682474	1					
ANR	682481	AssignmentExpression	* q = p		682474	2		=			
ANR	682482	Identifier	p		682474	0					
ANR	682483	Identifier	p		682474	1					
ANR	682484	IfStatement	if ( ! p )		682474	1					
ANR	682485	Condition	! p	18:5:475:476	682474	0	True				
ANR	682486	UnaryOperationExpression	! p		682474	0					
ANR	682487	UnaryOperator	!		682474	0					
ANR	682488	Identifier	p		682474	1					
ANR	682489	CompoundStatement		3:9:30:30	682474	1					
ANR	682490	ReturnStatement	return 0 ;	19:2:483:491	682474	0	True				
ANR	682491	PrimaryExpression	0		682474	0					
ANR	682492	WhileStatement	while ( p && * p && * p != '\\n' && ! __isAnsiSequence ( p ) )		682474	2					
ANR	682493	Condition	p && * p && * p != '\\n' && ! __isAnsiSequence ( p )	21:8:504:550	682474	0	True				
ANR	682494	AndExpression	p && * p && * p != '\\n' && ! __isAnsiSequence ( p )		682474	0		&&			
ANR	682495	Identifier	p		682474	0					
ANR	682496	AndExpression	* p && * p != '\\n' && ! __isAnsiSequence ( p )		682474	1		&&			
ANR	682497	UnaryOperationExpression	* p		682474	0					
ANR	682498	UnaryOperator	*		682474	0					
ANR	682499	Identifier	p		682474	1					
ANR	682500	AndExpression	* p != '\\n' && ! __isAnsiSequence ( p )		682474	1		&&			
ANR	682501	EqualityExpression	* p != '\\n'		682474	0		!=			
ANR	682502	UnaryOperationExpression	* p		682474	0					
ANR	682503	UnaryOperator	*		682474	0					
ANR	682504	Identifier	p		682474	1					
ANR	682505	PrimaryExpression	'\\n'		682474	1					
ANR	682506	UnaryOperationExpression	! __isAnsiSequence ( p )		682474	1					
ANR	682507	UnaryOperator	!		682474	0					
ANR	682508	CallExpression	__isAnsiSequence ( p )		682474	1					
ANR	682509	Callee	__isAnsiSequence		682474	0					
ANR	682510	Identifier	__isAnsiSequence		682474	0					
ANR	682511	ArgumentList	p		682474	1					
ANR	682512	Argument	p		682474	0					
ANR	682513	Identifier	p		682474	0					
ANR	682514	CompoundStatement		6:57:104:104	682474	1					
ANR	682515	ExpressionStatement	p ++	22:2:557:560	682474	0	True				
ANR	682516	PostIncDecOperationExpression	p ++		682474	0					
ANR	682517	Identifier	p		682474	0					
ANR	682518	IncDec	++		682474	1					
ANR	682519	IfStatement	if ( chr )		682474	3					
ANR	682520	Condition	chr	24:5:570:572	682474	0	True				
ANR	682521	Identifier	chr		682474	0					
ANR	682522	CompoundStatement		9:10:126:126	682474	1					
ANR	682523	ExpressionStatement	* chr = * p	25:2:579:588	682474	0	True				
ANR	682524	AssignmentExpression	* chr = * p		682474	0		=			
ANR	682525	UnaryOperationExpression	* chr		682474	0					
ANR	682526	UnaryOperator	*		682474	0					
ANR	682527	Identifier	chr		682474	1					
ANR	682528	UnaryOperationExpression	* p		682474	1					
ANR	682529	UnaryOperator	*		682474	0					
ANR	682530	Identifier	p		682474	1					
ANR	682531	ReturnStatement	return p - q ;	27:1:594:606	682474	4	True				
ANR	682532	AdditiveExpression	p - q		682474	0		-			
ANR	682533	Identifier	p		682474	0					
ANR	682534	Identifier	q		682474	1					
ANR	682535	ReturnType	static int		682474	1					
ANR	682536	Identifier	__getAnsiPiece		682474	2					
ANR	682537	ParameterList	"const char * p , char * chr"		682474	3					
ANR	682538	Parameter	const char * p	16:26:422:434	682474	0	True				
ANR	682539	ParameterType	const char *		682474	0					
ANR	682540	Identifier	p		682474	1					
ANR	682541	Parameter	char * chr	16:41:437:445	682474	1	True				
ANR	682542	ParameterType	char *		682474	0					
ANR	682543	Identifier	chr		682474	1					
ANR	682544	CFGEntryNode	ENTRY		682474		True				
ANR	682545	CFGExitNode	EXIT		682474		True				
ANR	682546	Symbol	p		682474						
ANR	682547	Symbol	q		682474						
ANR	682548	Symbol	__isAnsiSequence		682474						
ANR	682549	Symbol	* chr		682474						
ANR	682550	Symbol	* p		682474						
ANR	682551	Symbol	chr		682474						
ANR	682552	Function	attribute_free_kv	30:0:611:674							
ANR	682553	FunctionDef	attribute_free_kv (HtUPKv * kv)		682552	0					
ANR	682554	CompoundStatement		30:42:653:674	682552	0					
ANR	682555	ExpressionStatement	free ( kv -> value )	31:1:656:672	682552	0	True				
ANR	682556	CallExpression	free ( kv -> value )		682552	0					
ANR	682557	Callee	free		682552	0					
ANR	682558	Identifier	free		682552	0					
ANR	682559	ArgumentList	kv -> value		682552	1					
ANR	682560	Argument	kv -> value		682552	0					
ANR	682561	PtrMemberAccess	kv -> value		682552	0					
ANR	682562	Identifier	kv		682552	0					
ANR	682563	Identifier	value		682552	1					
ANR	682564	ReturnType	static void		682552	1					
ANR	682565	Identifier	attribute_free_kv		682552	2					
ANR	682566	ParameterList	HtUPKv * kv		682552	3					
ANR	682567	Parameter	HtUPKv * kv	30:30:641:650	682552	0	True				
ANR	682568	ParameterType	HtUPKv *		682552	0					
ANR	682569	Identifier	kv		682552	1					
ANR	682570	CFGEntryNode	ENTRY		682552		True				
ANR	682571	CFGExitNode	EXIT		682552		True				
ANR	682572	Symbol	* kv		682552						
ANR	682573	Symbol	kv -> value		682552						
ANR	682574	Symbol	kv		682552						
ANR	682575	Function	__attributeAt	34:0:677:815							
ANR	682576	FunctionDef	"__attributeAt (RConsCanvas * c , int loc)"		682575	0					
ANR	682577	CompoundStatement		34:58:735:815	682575	0					
ANR	682578	IfStatement	if ( ! c -> color )		682575	0					
ANR	682579	Condition	! c -> color	35:5:742:750	682575	0	True				
ANR	682580	UnaryOperationExpression	! c -> color		682575	0					
ANR	682581	UnaryOperator	!		682575	0					
ANR	682582	PtrMemberAccess	c -> color		682575	1					
ANR	682583	Identifier	c		682575	0					
ANR	682584	Identifier	color		682575	1					
ANR	682585	CompoundStatement		2:16:17:17	682575	1					
ANR	682586	ReturnStatement	return NULL ;	36:2:757:768	682575	0	True				
ANR	682587	Identifier	NULL		682575	0					
ANR	682588	ReturnStatement	"return ht_up_find ( c -> attrs , loc , NULL ) ;"	38:1:774:813	682575	1	True				
ANR	682589	CallExpression	"ht_up_find ( c -> attrs , loc , NULL )"		682575	0					
ANR	682590	Callee	ht_up_find		682575	0					
ANR	682591	Identifier	ht_up_find		682575	0					
ANR	682592	ArgumentList	c -> attrs		682575	1					
ANR	682593	Argument	c -> attrs		682575	0					
ANR	682594	PtrMemberAccess	c -> attrs		682575	0					
ANR	682595	Identifier	c		682575	0					
ANR	682596	Identifier	attrs		682575	1					
ANR	682597	Argument	loc		682575	1					
ANR	682598	Identifier	loc		682575	0					
ANR	682599	Argument	NULL		682575	2					
ANR	682600	Identifier	NULL		682575	0					
ANR	682601	ReturnType	static const char *		682575	1					
ANR	682602	Identifier	__attributeAt		682575	2					
ANR	682603	ParameterList	"RConsCanvas * c , int loc"		682575	3					
ANR	682604	Parameter	RConsCanvas * c	34:33:710:723	682575	0	True				
ANR	682605	ParameterType	RConsCanvas *		682575	0					
ANR	682606	Identifier	c		682575	1					
ANR	682607	Parameter	int loc	34:49:726:732	682575	1	True				
ANR	682608	ParameterType	int		682575	0					
ANR	682609	Identifier	loc		682575	1					
ANR	682610	CFGEntryNode	ENTRY		682575		True				
ANR	682611	CFGExitNode	EXIT		682575		True				
ANR	682612	Symbol	ht_up_find		682575						
ANR	682613	Symbol	loc		682575						
ANR	682614	Symbol	c		682575						
ANR	682615	Symbol	NULL		682575						
ANR	682616	Symbol	c -> attrs		682575						
ANR	682617	Symbol	* c		682575						
ANR	682618	Symbol	c -> color		682575						
ANR	682619	Function	__stampAttribute	41:0:818:1044							
ANR	682620	FunctionDef	"__stampAttribute (RConsCanvas * c , int loc , int length)"		682619	0					
ANR	682621	CompoundStatement		41:66:884:1044	682619	0					
ANR	682622	IfStatement	if ( ! c -> color )		682619	0					
ANR	682623	Condition	! c -> color	42:5:891:899	682619	0	True				
ANR	682624	UnaryOperationExpression	! c -> color		682619	0					
ANR	682625	UnaryOperator	!		682619	0					
ANR	682626	PtrMemberAccess	c -> color		682619	1					
ANR	682627	Identifier	c		682619	0					
ANR	682628	Identifier	color		682619	1					
ANR	682629	CompoundStatement		2:16:17:17	682619	1					
ANR	682630	ReturnStatement	return ;	43:2:906:912	682619	0	True				
ANR	682631	IdentifierDeclStatement	int i ;	45:1:918:923	682619	1	True				
ANR	682632	IdentifierDecl	i		682619	0					
ANR	682633	IdentifierDeclType	int		682619	0					
ANR	682634	Identifier	i		682619	1					
ANR	682635	ExpressionStatement	"ht_up_update ( c -> attrs , loc , ( void * ) c -> attr )"	46:1:926:971	682619	2	True				
ANR	682636	CallExpression	"ht_up_update ( c -> attrs , loc , ( void * ) c -> attr )"		682619	0					
ANR	682637	Callee	ht_up_update		682619	0					
ANR	682638	Identifier	ht_up_update		682619	0					
ANR	682639	ArgumentList	c -> attrs		682619	1					
ANR	682640	Argument	c -> attrs		682619	0					
ANR	682641	PtrMemberAccess	c -> attrs		682619	0					
ANR	682642	Identifier	c		682619	0					
ANR	682643	Identifier	attrs		682619	1					
ANR	682644	Argument	loc		682619	1					
ANR	682645	Identifier	loc		682619	0					
ANR	682646	Argument	( void * ) c -> attr		682619	2					
ANR	682647	CastExpression	( void * ) c -> attr		682619	0					
ANR	682648	CastTarget	void *		682619	0					
ANR	682649	PtrMemberAccess	c -> attr		682619	1					
ANR	682650	Identifier	c		682619	0					
ANR	682651	Identifier	attr		682619	1					
ANR	682652	ForStatement	for ( i = 1 ; i < length ; i ++ )		682619	3					
ANR	682653	ForInit	i = 1 ;	47:6:979:984	682619	0	True				
ANR	682654	AssignmentExpression	i = 1		682619	0		=			
ANR	682655	Identifier	i		682619	0					
ANR	682656	PrimaryExpression	1		682619	1					
ANR	682657	Condition	i < length	47:13:986:995	682619	1	True				
ANR	682658	RelationalExpression	i < length		682619	0		<			
ANR	682659	Identifier	i		682619	0					
ANR	682660	Identifier	length		682619	1					
ANR	682661	PostIncDecOperationExpression	i ++	47:25:998:1000	682619	2	True				
ANR	682662	Identifier	i		682619	0					
ANR	682663	IncDec	++		682619	1					
ANR	682664	CompoundStatement		7:30:118:118	682619	3					
ANR	682665	ExpressionStatement	"ht_up_delete ( c -> attrs , loc + i )"	48:2:1007:1039	682619	0	True				
ANR	682666	CallExpression	"ht_up_delete ( c -> attrs , loc + i )"		682619	0					
ANR	682667	Callee	ht_up_delete		682619	0					
ANR	682668	Identifier	ht_up_delete		682619	0					
ANR	682669	ArgumentList	c -> attrs		682619	1					
ANR	682670	Argument	c -> attrs		682619	0					
ANR	682671	PtrMemberAccess	c -> attrs		682619	0					
ANR	682672	Identifier	c		682619	0					
ANR	682673	Identifier	attrs		682619	1					
ANR	682674	Argument	loc + i		682619	1					
ANR	682675	AdditiveExpression	loc + i		682619	0		+			
ANR	682676	Identifier	loc		682619	0					
ANR	682677	Identifier	i		682619	1					
ANR	682678	ReturnType	static void		682619	1					
ANR	682679	Identifier	__stampAttribute		682619	2					
ANR	682680	ParameterList	"RConsCanvas * c , int loc , int length"		682619	3					
ANR	682681	Parameter	RConsCanvas * c	41:29:847:860	682619	0	True				
ANR	682682	ParameterType	RConsCanvas *		682619	0					
ANR	682683	Identifier	c		682619	1					
ANR	682684	Parameter	int loc	41:45:863:869	682619	1	True				
ANR	682685	ParameterType	int		682619	0					
ANR	682686	Identifier	loc		682619	1					
ANR	682687	Parameter	int length	41:54:872:881	682619	2	True				
ANR	682688	ParameterType	int		682619	0					
ANR	682689	Identifier	length		682619	1					
ANR	682690	CFGEntryNode	ENTRY		682619		True				
ANR	682691	CFGExitNode	EXIT		682619		True				
ANR	682692	Symbol	loc		682619						
ANR	682693	Symbol	c -> attr		682619						
ANR	682694	Symbol	c		682619						
ANR	682695	Symbol	c -> attrs		682619						
ANR	682696	Symbol	length		682619						
ANR	682697	Symbol	i		682619						
ANR	682698	Symbol	* c		682619						
ANR	682699	Symbol	c -> color		682619						
ANR	682700	Function	set_attr	53:0:1099:1570							
ANR	682701	FunctionDef	"set_attr (RConsCanvas * c , const char * s)"		682700	0					
ANR	682702	CompoundStatement		53:59:1158:1570	682700	0					
ANR	682703	IfStatement	if ( ! c || ! s )		682700	0					
ANR	682704	Condition	! c || ! s	54:5:1165:1172	682700	0	True				
ANR	682705	OrExpression	! c || ! s		682700	0		||			
ANR	682706	UnaryOperationExpression	! c		682700	0					
ANR	682707	UnaryOperator	!		682700	0					
ANR	682708	Identifier	c		682700	1					
ANR	682709	UnaryOperationExpression	! s		682700	1					
ANR	682710	UnaryOperator	!		682700	0					
ANR	682711	Identifier	s		682700	1					
ANR	682712	CompoundStatement		2:15:16:16	682700	1					
ANR	682713	ReturnStatement	return NULL ;	55:2:1179:1190	682700	0	True				
ANR	682714	Identifier	NULL		682700	0					
ANR	682715	IdentifierDeclStatement	const char * p = s ;	57:1:1196:1213	682700	1	True				
ANR	682716	IdentifierDecl	* p = s		682700	0					
ANR	682717	IdentifierDeclType	const char *		682700	0					
ANR	682718	Identifier	p		682700	1					
ANR	682719	AssignmentExpression	* p = s		682700	2		=			
ANR	682720	Identifier	s		682700	0					
ANR	682721	Identifier	s		682700	1					
ANR	682722	WhileStatement	while ( __isAnsiSequence ( p ) )		682700	2					
ANR	682723	Condition	__isAnsiSequence ( p )	59:8:1224:1243	682700	0	True				
ANR	682724	CallExpression	__isAnsiSequence ( p )		682700	0					
ANR	682725	Callee	__isAnsiSequence		682700	0					
ANR	682726	Identifier	__isAnsiSequence		682700	0					
ANR	682727	ArgumentList	p		682700	1					
ANR	682728	Argument	p		682700	0					
ANR	682729	Identifier	p		682700	0					
ANR	682730	CompoundStatement		7:30:87:87	682700	1					
ANR	682731	ExpressionStatement	p += 2	60:2:1250:1256	682700	0	True				
ANR	682732	AssignmentExpression	p += 2		682700	0		+=			
ANR	682733	Identifier	p		682700	0					
ANR	682734	PrimaryExpression	2		682700	1					
ANR	682735	WhileStatement	while ( * p && * p != 'J' && * p != 'm' && * p != 'H' )		682700	1					
ANR	682736	Condition	* p && * p != 'J' && * p != 'm' && * p != 'H'	61:9:1267:1307	682700	0	True				
ANR	682737	AndExpression	* p && * p != 'J' && * p != 'm' && * p != 'H'		682700	0		&&			
ANR	682738	UnaryOperationExpression	* p		682700	0					
ANR	682739	UnaryOperator	*		682700	0					
ANR	682740	Identifier	p		682700	1					
ANR	682741	AndExpression	* p != 'J' && * p != 'm' && * p != 'H'		682700	1		&&			
ANR	682742	EqualityExpression	* p != 'J'		682700	0		!=			
ANR	682743	UnaryOperationExpression	* p		682700	0					
ANR	682744	UnaryOperator	*		682700	0					
ANR	682745	Identifier	p		682700	1					
ANR	682746	PrimaryExpression	'J'		682700	1					
ANR	682747	AndExpression	* p != 'm' && * p != 'H'		682700	1		&&			
ANR	682748	EqualityExpression	* p != 'm'		682700	0		!=			
ANR	682749	UnaryOperationExpression	* p		682700	0					
ANR	682750	UnaryOperator	*		682700	0					
ANR	682751	Identifier	p		682700	1					
ANR	682752	PrimaryExpression	'm'		682700	1					
ANR	682753	EqualityExpression	* p != 'H'		682700	1		!=			
ANR	682754	UnaryOperationExpression	* p		682700	0					
ANR	682755	UnaryOperator	*		682700	0					
ANR	682756	Identifier	p		682700	1					
ANR	682757	PrimaryExpression	'H'		682700	1					
ANR	682758	CompoundStatement		9:52:151:151	682700	1					
ANR	682759	ExpressionStatement	p ++	62:3:1315:1318	682700	0	True				
ANR	682760	PostIncDecOperationExpression	p ++		682700	0					
ANR	682761	Identifier	p		682700	0					
ANR	682762	IncDec	++		682700	1					
ANR	682763	ExpressionStatement	p ++	64:2:1326:1329	682700	2	True				
ANR	682764	PostIncDecOperationExpression	p ++		682700	0					
ANR	682765	Identifier	p		682700	0					
ANR	682766	IncDec	++		682700	1					
ANR	682767	IfStatement	if ( p != s )		682700	3					
ANR	682768	Condition	p != s	67:5:1340:1345	682700	0	True				
ANR	682769	EqualityExpression	p != s		682700	0		!=			
ANR	682770	Identifier	p		682700	0					
ANR	682771	Identifier	s		682700	1					
ANR	682772	CompoundStatement		20:2:265:287	682700	1					
ANR	682773	IdentifierDeclStatement	RStrBuf * tmp = r_strbuf_new ( NULL ) ;	68:2:1352:1386	682700	0	True				
ANR	682774	IdentifierDecl	* tmp = r_strbuf_new ( NULL )		682700	0					
ANR	682775	IdentifierDeclType	RStrBuf *		682700	0					
ANR	682776	Identifier	tmp		682700	1					
ANR	682777	AssignmentExpression	* tmp = r_strbuf_new ( NULL )		682700	2		=			
ANR	682778	Identifier	tmp		682700	0					
ANR	682779	CallExpression	r_strbuf_new ( NULL )		682700	1					
ANR	682780	Callee	r_strbuf_new		682700	0					
ANR	682781	Identifier	r_strbuf_new		682700	0					
ANR	682782	ArgumentList	NULL		682700	1					
ANR	682783	Argument	NULL		682700	0					
ANR	682784	Identifier	NULL		682700	0					
ANR	682785	IfStatement	if ( ! tmp )		682700	1					
ANR	682786	Condition	! tmp	69:6:1394:1397	682700	0	True				
ANR	682787	UnaryOperationExpression	! tmp		682700	0					
ANR	682788	UnaryOperator	!		682700	0					
ANR	682789	Identifier	tmp		682700	1					
ANR	682790	CompoundStatement		17:12:241:241	682700	1					
ANR	682791	ReturnStatement	return NULL ;	70:3:1405:1416	682700	0	True				
ANR	682792	Identifier	NULL		682700	0					
ANR	682793	IdentifierDeclStatement	const int slen = p - s ;	72:2:1424:1446	682700	2	True				
ANR	682794	IdentifierDecl	slen = p - s		682700	0					
ANR	682795	IdentifierDeclType	const int		682700	0					
ANR	682796	Identifier	slen		682700	1					
ANR	682797	AssignmentExpression	slen = p - s		682700	2		=			
ANR	682798	Identifier	slen		682700	0					
ANR	682799	AdditiveExpression	p - s		682700	1		-			
ANR	682800	Identifier	p		682700	0					
ANR	682801	Identifier	s		682700	1					
ANR	682802	IfStatement	if ( slen > 0 )		682700	3					
ANR	682803	Condition	slen > 0	73:6:1454:1461	682700	0	True				
ANR	682804	RelationalExpression	slen > 0		682700	0		>			
ANR	682805	Identifier	slen		682700	0					
ANR	682806	PrimaryExpression	0		682700	1					
ANR	682807	CompoundStatement		21:16:305:305	682700	1					
ANR	682808	ExpressionStatement	"r_strbuf_append_n ( tmp , s , slen )"	74:3:1469:1501	682700	0	True				
ANR	682809	CallExpression	"r_strbuf_append_n ( tmp , s , slen )"		682700	0					
ANR	682810	Callee	r_strbuf_append_n		682700	0					
ANR	682811	Identifier	r_strbuf_append_n		682700	0					
ANR	682812	ArgumentList	tmp		682700	1					
ANR	682813	Argument	tmp		682700	0					
ANR	682814	Identifier	tmp		682700	0					
ANR	682815	Argument	s		682700	1					
ANR	682816	Identifier	s		682700	0					
ANR	682817	Argument	slen		682700	2					
ANR	682818	Identifier	slen		682700	0					
ANR	682819	ExpressionStatement	c -> attr = r_str_const ( r_strbuf_drain ( tmp ) )	75:3:1506:1550	682700	1	True				
ANR	682820	AssignmentExpression	c -> attr = r_str_const ( r_strbuf_drain ( tmp ) )		682700	0		=			
ANR	682821	PtrMemberAccess	c -> attr		682700	0					
ANR	682822	Identifier	c		682700	0					
ANR	682823	Identifier	attr		682700	1					
ANR	682824	CallExpression	r_str_const ( r_strbuf_drain ( tmp ) )		682700	1					
ANR	682825	Callee	r_str_const		682700	0					
ANR	682826	Identifier	r_str_const		682700	0					
ANR	682827	ArgumentList	r_strbuf_drain ( tmp )		682700	1					
ANR	682828	Argument	r_strbuf_drain ( tmp )		682700	0					
ANR	682829	CallExpression	r_strbuf_drain ( tmp )		682700	0					
ANR	682830	Callee	r_strbuf_drain		682700	0					
ANR	682831	Identifier	r_strbuf_drain		682700	0					
ANR	682832	ArgumentList	tmp		682700	1					
ANR	682833	Argument	tmp		682700	0					
ANR	682834	Identifier	tmp		682700	0					
ANR	682835	ReturnStatement	return p ;	78:1:1560:1568	682700	4	True				
ANR	682836	Identifier	p		682700	0					
ANR	682837	ReturnType	static const char *		682700	1					
ANR	682838	Identifier	set_attr		682700	2					
ANR	682839	ParameterList	"RConsCanvas * c , const char * s"		682700	3					
ANR	682840	Parameter	RConsCanvas * c	53:28:1127:1140	682700	0	True				
ANR	682841	ParameterType	RConsCanvas *		682700	0					
ANR	682842	Identifier	c		682700	1					
ANR	682843	Parameter	const char * s	53:44:1143:1155	682700	1	True				
ANR	682844	ParameterType	const char *		682700	0					
ANR	682845	Identifier	s		682700	1					
ANR	682846	CFGEntryNode	ENTRY		682700		True				
ANR	682847	CFGExitNode	EXIT		682700		True				
ANR	682848	Symbol	r_str_const		682700						
ANR	682849	Symbol	c		682700						
ANR	682850	Symbol	NULL		682700						
ANR	682851	Symbol	r_strbuf_new		682700						
ANR	682852	Symbol	* c		682700						
ANR	682853	Symbol	p		682700						
ANR	682854	Symbol	c -> attr		682700						
ANR	682855	Symbol	s		682700						
ANR	682856	Symbol	__isAnsiSequence		682700						
ANR	682857	Symbol	tmp		682700						
ANR	682858	Symbol	slen		682700						
ANR	682859	Symbol	r_strbuf_drain		682700						
ANR	682860	Symbol	* p		682700						
ANR	682861	Function	__getUtf8Length	81:0:1573:1833							
ANR	682862	FunctionDef	"__getUtf8Length (const char * s , int n)"		682861	0					
ANR	682863	CompoundStatement		81:49:1622:1833	682861	0					
ANR	682864	IdentifierDeclStatement	"int i = 0 , j = 0 , fullwidths = 0 ;"	82:1:1625:1657	682861	0	True				
ANR	682865	IdentifierDecl	i = 0		682861	0					
ANR	682866	IdentifierDeclType	int		682861	0					
ANR	682867	Identifier	i		682861	1					
ANR	682868	AssignmentExpression	i = 0		682861	2		=			
ANR	682869	Identifier	i		682861	0					
ANR	682870	PrimaryExpression	0		682861	1					
ANR	682871	IdentifierDecl	j = 0		682861	1					
ANR	682872	IdentifierDeclType	int		682861	0					
ANR	682873	Identifier	j		682861	1					
ANR	682874	AssignmentExpression	j = 0		682861	2		=			
ANR	682875	Identifier	j		682861	0					
ANR	682876	PrimaryExpression	0		682861	1					
ANR	682877	IdentifierDecl	fullwidths = 0		682861	2					
ANR	682878	IdentifierDeclType	int		682861	0					
ANR	682879	Identifier	fullwidths		682861	1					
ANR	682880	AssignmentExpression	fullwidths = 0		682861	2		=			
ANR	682881	Identifier	fullwidths		682861	0					
ANR	682882	PrimaryExpression	0		682861	1					
ANR	682883	WhileStatement	while ( s [ i ] && n > 0 )		682861	1					
ANR	682884	Condition	s [ i ] && n > 0	83:8:1667:1679	682861	0	True				
ANR	682885	AndExpression	s [ i ] && n > 0		682861	0		&&			
ANR	682886	ArrayIndexing	s [ i ]		682861	0					
ANR	682887	Identifier	s		682861	0					
ANR	682888	Identifier	i		682861	1					
ANR	682889	RelationalExpression	n > 0		682861	1		>			
ANR	682890	Identifier	n		682861	0					
ANR	682891	PrimaryExpression	0		682861	1					
ANR	682892	CompoundStatement		3:23:59:59	682861	1					
ANR	682893	IfStatement	if ( ( s [ i ] & 0xc0 ) != 0x80 )		682861	0					
ANR	682894	Condition	( s [ i ] & 0xc0 ) != 0x80	84:6:1690:1710	682861	0	True				
ANR	682895	EqualityExpression	( s [ i ] & 0xc0 ) != 0x80		682861	0		!=			
ANR	682896	BitAndExpression	s [ i ] & 0xc0		682861	0		&			
ANR	682897	ArrayIndexing	s [ i ]		682861	0					
ANR	682898	Identifier	s		682861	0					
ANR	682899	Identifier	i		682861	1					
ANR	682900	PrimaryExpression	0xc0		682861	1					
ANR	682901	PrimaryExpression	0x80		682861	1					
ANR	682902	CompoundStatement		4:29:90:90	682861	1					
ANR	682903	ExpressionStatement	j ++	85:3:1718:1721	682861	0	True				
ANR	682904	PostIncDecOperationExpression	j ++		682861	0					
ANR	682905	Identifier	j		682861	0					
ANR	682906	IncDec	++		682861	1					
ANR	682907	IfStatement	"if ( r_str_char_fullwidth ( s + i , n ) )"		682861	1					
ANR	682908	Condition	"r_str_char_fullwidth ( s + i , n )"	86:7:1730:1760	682861	0	True				
ANR	682909	CallExpression	"r_str_char_fullwidth ( s + i , n )"		682861	0					
ANR	682910	Callee	r_str_char_fullwidth		682861	0					
ANR	682911	Identifier	r_str_char_fullwidth		682861	0					
ANR	682912	ArgumentList	s + i		682861	1					
ANR	682913	Argument	s + i		682861	0					
ANR	682914	AdditiveExpression	s + i		682861	0		+			
ANR	682915	Identifier	s		682861	0					
ANR	682916	Identifier	i		682861	1					
ANR	682917	Argument	n		682861	1					
ANR	682918	Identifier	n		682861	0					
ANR	682919	CompoundStatement		6:40:140:140	682861	1					
ANR	682920	ExpressionStatement	fullwidths ++	87:4:1769:1781	682861	0	True				
ANR	682921	PostIncDecOperationExpression	fullwidths ++		682861	0					
ANR	682922	Identifier	fullwidths		682861	0					
ANR	682923	IncDec	++		682861	1					
ANR	682924	ExpressionStatement	n --	90:2:1794:1797	682861	1	True				
ANR	682925	PostIncDecOperationExpression	n --		682861	0					
ANR	682926	Identifier	n		682861	0					
ANR	682927	IncDec	--		682861	1					
ANR	682928	ExpressionStatement	i ++	91:2:1801:1804	682861	2	True				
ANR	682929	PostIncDecOperationExpression	i ++		682861	0					
ANR	682930	Identifier	i		682861	0					
ANR	682931	IncDec	++		682861	1					
ANR	682932	ReturnStatement	return j + fullwidths ;	93:1:1810:1831	682861	2	True				
ANR	682933	AdditiveExpression	j + fullwidths		682861	0		+			
ANR	682934	Identifier	j		682861	0					
ANR	682935	Identifier	fullwidths		682861	1					
ANR	682936	ReturnType	static int		682861	1					
ANR	682937	Identifier	__getUtf8Length		682861	2					
ANR	682938	ParameterList	"const char * s , int n"		682861	3					
ANR	682939	Parameter	const char * s	81:27:1600:1612	682861	0	True				
ANR	682940	ParameterType	const char *		682861	0					
ANR	682941	Identifier	s		682861	1					
ANR	682942	Parameter	int n	81:42:1615:1619	682861	1	True				
ANR	682943	ParameterType	int		682861	0					
ANR	682944	Identifier	n		682861	1					
ANR	682945	CFGEntryNode	ENTRY		682861		True				
ANR	682946	CFGExitNode	EXIT		682861		True				
ANR	682947	Symbol	s		682861						
ANR	682948	Symbol	* i		682861						
ANR	682949	Symbol	r_str_char_fullwidth		682861						
ANR	682950	Symbol	i		682861						
ANR	682951	Symbol	j		682861						
ANR	682952	Symbol	fullwidths		682861						
ANR	682953	Symbol	* s		682861						
ANR	682954	Symbol	n		682861						
ANR	682955	Function	__getUtf8Length2	96:0:1836:2133							
ANR	682956	FunctionDef	"__getUtf8Length2 (const char * s , int n , int left)"		682955	0					
ANR	682957	CompoundStatement		96:60:1896:2133	682955	0					
ANR	682958	IdentifierDeclStatement	"int i = 0 , fullwidths = 0 ;"	97:1:1899:1924	682955	0	True				
ANR	682959	IdentifierDecl	i = 0		682955	0					
ANR	682960	IdentifierDeclType	int		682955	0					
ANR	682961	Identifier	i		682955	1					
ANR	682962	AssignmentExpression	i = 0		682955	2		=			
ANR	682963	Identifier	i		682955	0					
ANR	682964	PrimaryExpression	0		682955	1					
ANR	682965	IdentifierDecl	fullwidths = 0		682955	1					
ANR	682966	IdentifierDeclType	int		682955	0					
ANR	682967	Identifier	fullwidths		682955	1					
ANR	682968	AssignmentExpression	fullwidths = 0		682955	2		=			
ANR	682969	Identifier	fullwidths		682955	0					
ANR	682970	PrimaryExpression	0		682955	1					
ANR	682971	WhileStatement	while ( n > - 1 && i < left && s [ i ] )		682955	1					
ANR	682972	Condition	n > - 1 && i < left && s [ i ]	98:8:1934:1959	682955	0	True				
ANR	682973	AndExpression	n > - 1 && i < left && s [ i ]		682955	0		&&			
ANR	682974	RelationalExpression	n > - 1		682955	0		>			
ANR	682975	Identifier	n		682955	0					
ANR	682976	UnaryOperationExpression	- 1		682955	1					
ANR	682977	UnaryOperator	-		682955	0					
ANR	682978	PrimaryExpression	1		682955	1					
ANR	682979	AndExpression	i < left && s [ i ]		682955	1		&&			
ANR	682980	RelationalExpression	i < left		682955	0		<			
ANR	682981	Identifier	i		682955	0					
ANR	682982	Identifier	left		682955	1					
ANR	682983	ArrayIndexing	s [ i ]		682955	1					
ANR	682984	Identifier	s		682955	0					
ANR	682985	Identifier	i		682955	1					
ANR	682986	CompoundStatement		3:36:65:65	682955	1					
ANR	682987	IfStatement	"if ( r_str_char_fullwidth ( s + i , left - i ) )"		682955	0					
ANR	682988	Condition	"r_str_char_fullwidth ( s + i , left - i )"	99:6:1970:2007	682955	0	True				
ANR	682989	CallExpression	"r_str_char_fullwidth ( s + i , left - i )"		682955	0					
ANR	682990	Callee	r_str_char_fullwidth		682955	0					
ANR	682991	Identifier	r_str_char_fullwidth		682955	0					
ANR	682992	ArgumentList	s + i		682955	1					
ANR	682993	Argument	s + i		682955	0					
ANR	682994	AdditiveExpression	s + i		682955	0		+			
ANR	682995	Identifier	s		682955	0					
ANR	682996	Identifier	i		682955	1					
ANR	682997	Argument	left - i		682955	1					
ANR	682998	AdditiveExpression	left - i		682955	0		-			
ANR	682999	Identifier	left		682955	0					
ANR	683000	Identifier	i		682955	1					
ANR	683001	CompoundStatement		4:46:113:113	682955	1					
ANR	683002	ExpressionStatement	fullwidths ++	100:3:2015:2027	682955	0	True				
ANR	683003	PostIncDecOperationExpression	fullwidths ++		682955	0					
ANR	683004	Identifier	fullwidths		682955	0					
ANR	683005	IncDec	++		682955	1					
ANR	683006	IfStatement	if ( ( s [ i ] & 0xc0 ) != 0x80 )		682955	1					
ANR	683007	Condition	( s [ i ] & 0xc0 ) != 0x80	102:6:2039:2059	682955	0	True				
ANR	683008	EqualityExpression	( s [ i ] & 0xc0 ) != 0x80		682955	0		!=			
ANR	683009	BitAndExpression	s [ i ] & 0xc0		682955	0		&			
ANR	683010	ArrayIndexing	s [ i ]		682955	0					
ANR	683011	Identifier	s		682955	0					
ANR	683012	Identifier	i		682955	1					
ANR	683013	PrimaryExpression	0xc0		682955	1					
ANR	683014	PrimaryExpression	0x80		682955	1					
ANR	683015	CompoundStatement		7:29:165:165	682955	1					
ANR	683016	ExpressionStatement	n --	103:3:2067:2070	682955	0	True				
ANR	683017	PostIncDecOperationExpression	n --		682955	0					
ANR	683018	Identifier	n		682955	0					
ANR	683019	IncDec	--		682955	1					
ANR	683020	ExpressionStatement	i ++	105:2:2078:2081	682955	2	True				
ANR	683021	PostIncDecOperationExpression	i ++		682955	0					
ANR	683022	Identifier	i		682955	0					
ANR	683023	IncDec	++		682955	1					
ANR	683024	ExpressionStatement	i -= fullwidths	107:1:2087:2102	682955	2	True				
ANR	683025	AssignmentExpression	i -= fullwidths		682955	0		-=			
ANR	683026	Identifier	i		682955	0					
ANR	683027	Identifier	fullwidths		682955	1					
ANR	683028	ReturnStatement	return n == - 1 ? i - 1 : i ;	108:1:2105:2131	682955	3	True				
ANR	683029	ConditionalExpression	n == - 1 ? i - 1 : i		682955	0					
ANR	683030	Condition	n == - 1		682955	0					
ANR	683031	EqualityExpression	n == - 1		682955	0		==			
ANR	683032	Identifier	n		682955	0					
ANR	683033	UnaryOperationExpression	- 1		682955	1					
ANR	683034	UnaryOperator	-		682955	0					
ANR	683035	PrimaryExpression	1		682955	1					
ANR	683036	AdditiveExpression	i - 1		682955	1		-			
ANR	683037	Identifier	i		682955	0					
ANR	683038	PrimaryExpression	1		682955	1					
ANR	683039	Identifier	i		682955	2					
ANR	683040	ReturnType	static int		682955	1					
ANR	683041	Identifier	__getUtf8Length2		682955	2					
ANR	683042	ParameterList	"const char * s , int n , int left"		682955	3					
ANR	683043	Parameter	const char * s	96:28:1864:1876	682955	0	True				
ANR	683044	ParameterType	const char *		682955	0					
ANR	683045	Identifier	s		682955	1					
ANR	683046	Parameter	int n	96:43:1879:1883	682955	1	True				
ANR	683047	ParameterType	int		682955	0					
ANR	683048	Identifier	n		682955	1					
ANR	683049	Parameter	int left	96:50:1886:1893	682955	2	True				
ANR	683050	ParameterType	int		682955	0					
ANR	683051	Identifier	left		682955	1					
ANR	683052	CFGEntryNode	ENTRY		682955		True				
ANR	683053	CFGExitNode	EXIT		682955		True				
ANR	683054	Symbol	s		682955						
ANR	683055	Symbol	* i		682955						
ANR	683056	Symbol	left		682955						
ANR	683057	Symbol	r_str_char_fullwidth		682955						
ANR	683058	Symbol	i		682955						
ANR	683059	Symbol	fullwidths		682955						
ANR	683060	Symbol	* s		682955						
ANR	683061	Symbol	n		682955						
ANR	683062	Function	__expandLine	111:0:2136:3321							
ANR	683063	FunctionDef	"__expandLine (RConsCanvas * c , int real_len , int utf8_len)"		683062	0					
ANR	683064	CompoundStatement		111:69:2205:3321	683062	0					
ANR	683065	IfStatement	if ( real_len == 0 )		683062	0					
ANR	683066	Condition	real_len == 0	112:5:2212:2224	683062	0	True				
ANR	683067	EqualityExpression	real_len == 0		683062	0		==			
ANR	683068	Identifier	real_len		683062	0					
ANR	683069	PrimaryExpression	0		683062	1					
ANR	683070	CompoundStatement		2:20:21:21	683062	1					
ANR	683071	ReturnStatement	return true ;	113:2:2231:2242	683062	0	True				
ANR	683072	Identifier	true		683062	0					
ANR	683073	IdentifierDeclStatement	"int buf_utf8_len = __getUtf8Length2 ( c -> b [ c -> y ] + c -> x , utf8_len , c -> blen [ c -> y ] - c -> x ) ;"	115:1:2248:2335	683062	1	True				
ANR	683074	IdentifierDecl	"buf_utf8_len = __getUtf8Length2 ( c -> b [ c -> y ] + c -> x , utf8_len , c -> blen [ c -> y ] - c -> x )"		683062	0					
ANR	683075	IdentifierDeclType	int		683062	0					
ANR	683076	Identifier	buf_utf8_len		683062	1					
ANR	683077	AssignmentExpression	"buf_utf8_len = __getUtf8Length2 ( c -> b [ c -> y ] + c -> x , utf8_len , c -> blen [ c -> y ] - c -> x )"		683062	2		=			
ANR	683078	Identifier	buf_utf8_len		683062	0					
ANR	683079	CallExpression	"__getUtf8Length2 ( c -> b [ c -> y ] + c -> x , utf8_len , c -> blen [ c -> y ] - c -> x )"		683062	1					
ANR	683080	Callee	__getUtf8Length2		683062	0					
ANR	683081	Identifier	__getUtf8Length2		683062	0					
ANR	683082	ArgumentList	c -> b [ c -> y ] + c -> x		683062	1					
ANR	683083	Argument	c -> b [ c -> y ] + c -> x		683062	0					
ANR	683084	AdditiveExpression	c -> b [ c -> y ] + c -> x		683062	0		+			
ANR	683085	ArrayIndexing	c -> b [ c -> y ]		683062	0					
ANR	683086	PtrMemberAccess	c -> b		683062	0					
ANR	683087	Identifier	c		683062	0					
ANR	683088	Identifier	b		683062	1					
ANR	683089	PtrMemberAccess	c -> y		683062	1					
ANR	683090	Identifier	c		683062	0					
ANR	683091	Identifier	y		683062	1					
ANR	683092	PtrMemberAccess	c -> x		683062	1					
ANR	683093	Identifier	c		683062	0					
ANR	683094	Identifier	x		683062	1					
ANR	683095	Argument	utf8_len		683062	1					
ANR	683096	Identifier	utf8_len		683062	0					
ANR	683097	Argument	c -> blen [ c -> y ] - c -> x		683062	2					
ANR	683098	AdditiveExpression	c -> blen [ c -> y ] - c -> x		683062	0		-			
ANR	683099	ArrayIndexing	c -> blen [ c -> y ]		683062	0					
ANR	683100	PtrMemberAccess	c -> blen		683062	0					
ANR	683101	Identifier	c		683062	0					
ANR	683102	Identifier	blen		683062	1					
ANR	683103	PtrMemberAccess	c -> y		683062	1					
ANR	683104	Identifier	c		683062	0					
ANR	683105	Identifier	y		683062	1					
ANR	683106	PtrMemberAccess	c -> x		683062	1					
ANR	683107	Identifier	c		683062	0					
ANR	683108	Identifier	x		683062	1					
ANR	683109	IdentifierDeclStatement	"int goback = R_MAX ( 0 , ( buf_utf8_len - utf8_len ) ) ;"	116:1:2338:2387	683062	2	True				
ANR	683110	IdentifierDecl	"goback = R_MAX ( 0 , ( buf_utf8_len - utf8_len ) )"		683062	0					
ANR	683111	IdentifierDeclType	int		683062	0					
ANR	683112	Identifier	goback		683062	1					
ANR	683113	AssignmentExpression	"goback = R_MAX ( 0 , ( buf_utf8_len - utf8_len ) )"		683062	2		=			
ANR	683114	Identifier	goback		683062	0					
ANR	683115	CallExpression	"R_MAX ( 0 , ( buf_utf8_len - utf8_len ) )"		683062	1					
ANR	683116	Callee	R_MAX		683062	0					
ANR	683117	Identifier	R_MAX		683062	0					
ANR	683118	ArgumentList	0		683062	1					
ANR	683119	Argument	0		683062	0					
ANR	683120	PrimaryExpression	0		683062	0					
ANR	683121	Argument	buf_utf8_len - utf8_len		683062	1					
ANR	683122	AdditiveExpression	buf_utf8_len - utf8_len		683062	0		-			
ANR	683123	Identifier	buf_utf8_len		683062	0					
ANR	683124	Identifier	utf8_len		683062	1					
ANR	683125	IdentifierDeclStatement	int padding = ( real_len - utf8_len ) - goback ;	117:1:2390:2434	683062	3	True				
ANR	683126	IdentifierDecl	padding = ( real_len - utf8_len ) - goback		683062	0					
ANR	683127	IdentifierDeclType	int		683062	0					
ANR	683128	Identifier	padding		683062	1					
ANR	683129	AssignmentExpression	padding = ( real_len - utf8_len ) - goback		683062	2		=			
ANR	683130	Identifier	padding		683062	0					
ANR	683131	AdditiveExpression	( real_len - utf8_len ) - goback		683062	1		-			
ANR	683132	AdditiveExpression	real_len - utf8_len		683062	0		-			
ANR	683133	Identifier	real_len		683062	0					
ANR	683134	Identifier	utf8_len		683062	1					
ANR	683135	Identifier	goback		683062	1					
ANR	683136	IfStatement	if ( padding )		683062	4					
ANR	683137	Condition	padding	119:5:2442:2448	683062	0	True				
ANR	683138	Identifier	padding		683062	0					
ANR	683139	CompoundStatement		22:2:726:751	683062	1					
ANR	683140	IfStatement	if ( padding > 0 && c -> blen [ c -> y ] + padding > c -> bsize [ c -> y ] )		683062	0					
ANR	683141	Condition	padding > 0 && c -> blen [ c -> y ] + padding > c -> bsize [ c -> y ]	120:6:2459:2513	683062	0	True				
ANR	683142	AndExpression	padding > 0 && c -> blen [ c -> y ] + padding > c -> bsize [ c -> y ]		683062	0		&&			
ANR	683143	RelationalExpression	padding > 0		683062	0		>			
ANR	683144	Identifier	padding		683062	0					
ANR	683145	PrimaryExpression	0		683062	1					
ANR	683146	RelationalExpression	c -> blen [ c -> y ] + padding > c -> bsize [ c -> y ]		683062	1		>			
ANR	683147	AdditiveExpression	c -> blen [ c -> y ] + padding		683062	0		+			
ANR	683148	ArrayIndexing	c -> blen [ c -> y ]		683062	0					
ANR	683149	PtrMemberAccess	c -> blen		683062	0					
ANR	683150	Identifier	c		683062	0					
ANR	683151	Identifier	blen		683062	1					
ANR	683152	PtrMemberAccess	c -> y		683062	1					
ANR	683153	Identifier	c		683062	0					
ANR	683154	Identifier	y		683062	1					
ANR	683155	Identifier	padding		683062	1					
ANR	683156	ArrayIndexing	c -> bsize [ c -> y ]		683062	1					
ANR	683157	PtrMemberAccess	c -> bsize		683062	0					
ANR	683158	Identifier	c		683062	0					
ANR	683159	Identifier	bsize		683062	1					
ANR	683160	PtrMemberAccess	c -> y		683062	1					
ANR	683161	Identifier	c		683062	0					
ANR	683162	Identifier	y		683062	1					
ANR	683163	CompoundStatement		12:3:387:456	683062	1					
ANR	683164	IdentifierDeclStatement	"int newsize = R_MAX ( c -> bsize [ c -> y ] * 1.5 , c -> blen [ c -> y ] + padding ) ;"	121:3:2521:2588	683062	0	True				
ANR	683165	IdentifierDecl	"newsize = R_MAX ( c -> bsize [ c -> y ] * 1.5 , c -> blen [ c -> y ] + padding )"		683062	0					
ANR	683166	IdentifierDeclType	int		683062	0					
ANR	683167	Identifier	newsize		683062	1					
ANR	683168	AssignmentExpression	"newsize = R_MAX ( c -> bsize [ c -> y ] * 1.5 , c -> blen [ c -> y ] + padding )"		683062	2		=			
ANR	683169	Identifier	newsize		683062	0					
ANR	683170	CallExpression	"R_MAX ( c -> bsize [ c -> y ] * 1.5 , c -> blen [ c -> y ] + padding )"		683062	1					
ANR	683171	Callee	R_MAX		683062	0					
ANR	683172	Identifier	R_MAX		683062	0					
ANR	683173	ArgumentList	c -> bsize [ c -> y ] * 1.5		683062	1					
ANR	683174	Argument	c -> bsize [ c -> y ] * 1.5		683062	0					
ANR	683175	MultiplicativeExpression	c -> bsize [ c -> y ] * 1.5		683062	0		*			
ANR	683176	ArrayIndexing	c -> bsize [ c -> y ]		683062	0					
ANR	683177	PtrMemberAccess	c -> bsize		683062	0					
ANR	683178	Identifier	c		683062	0					
ANR	683179	Identifier	bsize		683062	1					
ANR	683180	PtrMemberAccess	c -> y		683062	1					
ANR	683181	Identifier	c		683062	0					
ANR	683182	Identifier	y		683062	1					
ANR	683183	PrimaryExpression	1.5		683062	1					
ANR	683184	Argument	c -> blen [ c -> y ] + padding		683062	1					
ANR	683185	AdditiveExpression	c -> blen [ c -> y ] + padding		683062	0		+			
ANR	683186	ArrayIndexing	c -> blen [ c -> y ]		683062	0					
ANR	683187	PtrMemberAccess	c -> blen		683062	0					
ANR	683188	Identifier	c		683062	0					
ANR	683189	Identifier	blen		683062	1					
ANR	683190	PtrMemberAccess	c -> y		683062	1					
ANR	683191	Identifier	c		683062	0					
ANR	683192	Identifier	y		683062	1					
ANR	683193	Identifier	padding		683062	1					
ANR	683194	IdentifierDeclStatement	"char * newline = realloc ( c -> b [ c -> y ] , sizeof ( * c -> b [ c -> y ] ) * ( newsize ) ) ;"	122:3:2593:2662	683062	1	True				
ANR	683195	IdentifierDecl	"* newline = realloc ( c -> b [ c -> y ] , sizeof ( * c -> b [ c -> y ] ) * ( newsize ) )"		683062	0					
ANR	683196	IdentifierDeclType	char *		683062	0					
ANR	683197	Identifier	newline		683062	1					
ANR	683198	AssignmentExpression	"* newline = realloc ( c -> b [ c -> y ] , sizeof ( * c -> b [ c -> y ] ) * ( newsize ) )"		683062	2		=			
ANR	683199	Identifier	newline		683062	0					
ANR	683200	CallExpression	"realloc ( c -> b [ c -> y ] , sizeof ( * c -> b [ c -> y ] ) * ( newsize ) )"		683062	1					
ANR	683201	Callee	realloc		683062	0					
ANR	683202	Identifier	realloc		683062	0					
ANR	683203	ArgumentList	c -> b [ c -> y ]		683062	1					
ANR	683204	Argument	c -> b [ c -> y ]		683062	0					
ANR	683205	ArrayIndexing	c -> b [ c -> y ]		683062	0					
ANR	683206	PtrMemberAccess	c -> b		683062	0					
ANR	683207	Identifier	c		683062	0					
ANR	683208	Identifier	b		683062	1					
ANR	683209	PtrMemberAccess	c -> y		683062	1					
ANR	683210	Identifier	c		683062	0					
ANR	683211	Identifier	y		683062	1					
ANR	683212	Argument	sizeof ( * c -> b [ c -> y ] ) * ( newsize )		683062	1					
ANR	683213	MultiplicativeExpression	sizeof ( * c -> b [ c -> y ] ) * ( newsize )		683062	0		*			
ANR	683214	SizeofExpression	sizeof ( * c -> b [ c -> y ] )		683062	0					
ANR	683215	Sizeof	sizeof		683062	0					
ANR	683216	UnaryOperationExpression	* c -> b [ c -> y ]		683062	1					
ANR	683217	UnaryOperator	*		683062	0					
ANR	683218	ArrayIndexing	c -> b [ c -> y ]		683062	1					
ANR	683219	PtrMemberAccess	c -> b		683062	0					
ANR	683220	Identifier	c		683062	0					
ANR	683221	Identifier	b		683062	1					
ANR	683222	PtrMemberAccess	c -> y		683062	1					
ANR	683223	Identifier	c		683062	0					
ANR	683224	Identifier	y		683062	1					
ANR	683225	Identifier	newsize		683062	1					
ANR	683226	IfStatement	if ( ! newline )		683062	2					
ANR	683227	Condition	! newline	123:7:2671:2678	683062	0	True				
ANR	683228	UnaryOperationExpression	! newline		683062	0					
ANR	683229	UnaryOperator	!		683062	0					
ANR	683230	Identifier	newline		683062	1					
ANR	683231	CompoundStatement		13:17:475:475	683062	1					
ANR	683232	ReturnStatement	return false ;	124:4:2687:2699	683062	0	True				
ANR	683233	Identifier	false		683062	0					
ANR	683234	ExpressionStatement	"memset ( newline + c -> bsize [ c -> y ] , 0 , newsize - c -> bsize [ c -> y ] )"	126:3:2709:2771	683062	3	True				
ANR	683235	CallExpression	"memset ( newline + c -> bsize [ c -> y ] , 0 , newsize - c -> bsize [ c -> y ] )"		683062	0					
ANR	683236	Callee	memset		683062	0					
ANR	683237	Identifier	memset		683062	0					
ANR	683238	ArgumentList	newline + c -> bsize [ c -> y ]		683062	1					
ANR	683239	Argument	newline + c -> bsize [ c -> y ]		683062	0					
ANR	683240	AdditiveExpression	newline + c -> bsize [ c -> y ]		683062	0		+			
ANR	683241	Identifier	newline		683062	0					
ANR	683242	ArrayIndexing	c -> bsize [ c -> y ]		683062	1					
ANR	683243	PtrMemberAccess	c -> bsize		683062	0					
ANR	683244	Identifier	c		683062	0					
ANR	683245	Identifier	bsize		683062	1					
ANR	683246	PtrMemberAccess	c -> y		683062	1					
ANR	683247	Identifier	c		683062	0					
ANR	683248	Identifier	y		683062	1					
ANR	683249	Argument	0		683062	1					
ANR	683250	PrimaryExpression	0		683062	0					
ANR	683251	Argument	newsize - c -> bsize [ c -> y ]		683062	2					
ANR	683252	AdditiveExpression	newsize - c -> bsize [ c -> y ]		683062	0		-			
ANR	683253	Identifier	newsize		683062	0					
ANR	683254	ArrayIndexing	c -> bsize [ c -> y ]		683062	1					
ANR	683255	PtrMemberAccess	c -> bsize		683062	0					
ANR	683256	Identifier	c		683062	0					
ANR	683257	Identifier	bsize		683062	1					
ANR	683258	PtrMemberAccess	c -> y		683062	1					
ANR	683259	Identifier	c		683062	0					
ANR	683260	Identifier	y		683062	1					
ANR	683261	ExpressionStatement	c -> b [ c -> y ] = newline	127:3:2776:2796	683062	4	True				
ANR	683262	AssignmentExpression	c -> b [ c -> y ] = newline		683062	0		=			
ANR	683263	ArrayIndexing	c -> b [ c -> y ]		683062	0					
ANR	683264	PtrMemberAccess	c -> b		683062	0					
ANR	683265	Identifier	c		683062	0					
ANR	683266	Identifier	b		683062	1					
ANR	683267	PtrMemberAccess	c -> y		683062	1					
ANR	683268	Identifier	c		683062	0					
ANR	683269	Identifier	y		683062	1					
ANR	683270	Identifier	newline		683062	1					
ANR	683271	ExpressionStatement	c -> bsize [ c -> y ] = newsize	128:3:2801:2825	683062	5	True				
ANR	683272	AssignmentExpression	c -> bsize [ c -> y ] = newsize		683062	0		=			
ANR	683273	ArrayIndexing	c -> bsize [ c -> y ]		683062	0					
ANR	683274	PtrMemberAccess	c -> bsize		683062	0					
ANR	683275	Identifier	c		683062	0					
ANR	683276	Identifier	bsize		683062	1					
ANR	683277	PtrMemberAccess	c -> y		683062	1					
ANR	683278	Identifier	c		683062	0					
ANR	683279	Identifier	y		683062	1					
ANR	683280	Identifier	newsize		683062	1					
ANR	683281	IdentifierDeclStatement	"int size = R_MAX ( c -> blen [ c -> y ] - c -> x - goback , 0 ) ;"	130:2:2833:2884	683062	1	True				
ANR	683282	IdentifierDecl	"size = R_MAX ( c -> blen [ c -> y ] - c -> x - goback , 0 )"		683062	0					
ANR	683283	IdentifierDeclType	int		683062	0					
ANR	683284	Identifier	size		683062	1					
ANR	683285	AssignmentExpression	"size = R_MAX ( c -> blen [ c -> y ] - c -> x - goback , 0 )"		683062	2		=			
ANR	683286	Identifier	size		683062	0					
ANR	683287	CallExpression	"R_MAX ( c -> blen [ c -> y ] - c -> x - goback , 0 )"		683062	1					
ANR	683288	Callee	R_MAX		683062	0					
ANR	683289	Identifier	R_MAX		683062	0					
ANR	683290	ArgumentList	c -> blen [ c -> y ] - c -> x - goback		683062	1					
ANR	683291	Argument	c -> blen [ c -> y ] - c -> x - goback		683062	0					
ANR	683292	AdditiveExpression	c -> blen [ c -> y ] - c -> x - goback		683062	0		-			
ANR	683293	ArrayIndexing	c -> blen [ c -> y ]		683062	0					
ANR	683294	PtrMemberAccess	c -> blen		683062	0					
ANR	683295	Identifier	c		683062	0					
ANR	683296	Identifier	blen		683062	1					
ANR	683297	PtrMemberAccess	c -> y		683062	1					
ANR	683298	Identifier	c		683062	0					
ANR	683299	Identifier	y		683062	1					
ANR	683300	AdditiveExpression	c -> x - goback		683062	1		-			
ANR	683301	PtrMemberAccess	c -> x		683062	0					
ANR	683302	Identifier	c		683062	0					
ANR	683303	Identifier	x		683062	1					
ANR	683304	Identifier	goback		683062	1					
ANR	683305	Argument	0		683062	1					
ANR	683306	PrimaryExpression	0		683062	0					
ANR	683307	IdentifierDeclStatement	char * start = c -> b [ c -> y ] + c -> x + goback ;	131:2:2888:2928	683062	2	True				
ANR	683308	IdentifierDecl	* start = c -> b [ c -> y ] + c -> x + goback		683062	0					
ANR	683309	IdentifierDeclType	char *		683062	0					
ANR	683310	Identifier	start		683062	1					
ANR	683311	AssignmentExpression	* start = c -> b [ c -> y ] + c -> x + goback		683062	2		=			
ANR	683312	Identifier	start		683062	0					
ANR	683313	AdditiveExpression	c -> b [ c -> y ] + c -> x + goback		683062	1		+			
ANR	683314	ArrayIndexing	c -> b [ c -> y ]		683062	0					
ANR	683315	PtrMemberAccess	c -> b		683062	0					
ANR	683316	Identifier	c		683062	0					
ANR	683317	Identifier	b		683062	1					
ANR	683318	PtrMemberAccess	c -> y		683062	1					
ANR	683319	Identifier	c		683062	0					
ANR	683320	Identifier	y		683062	1					
ANR	683321	AdditiveExpression	c -> x + goback		683062	1		+			
ANR	683322	PtrMemberAccess	c -> x		683062	0					
ANR	683323	Identifier	c		683062	0					
ANR	683324	Identifier	x		683062	1					
ANR	683325	Identifier	goback		683062	1					
ANR	683326	IdentifierDeclStatement	char * tmp = malloc ( size ) ;	132:2:2932:2957	683062	3	True				
ANR	683327	IdentifierDecl	* tmp = malloc ( size )		683062	0					
ANR	683328	IdentifierDeclType	char *		683062	0					
ANR	683329	Identifier	tmp		683062	1					
ANR	683330	AssignmentExpression	* tmp = malloc ( size )		683062	2		=			
ANR	683331	Identifier	tmp		683062	0					
ANR	683332	CallExpression	malloc ( size )		683062	1					
ANR	683333	Callee	malloc		683062	0					
ANR	683334	Identifier	malloc		683062	0					
ANR	683335	ArgumentList	size		683062	1					
ANR	683336	Argument	size		683062	0					
ANR	683337	Identifier	size		683062	0					
ANR	683338	IfStatement	if ( ! tmp )		683062	4					
ANR	683339	Condition	! tmp	133:6:2965:2968	683062	0	True				
ANR	683340	UnaryOperationExpression	! tmp		683062	0					
ANR	683341	UnaryOperator	!		683062	0					
ANR	683342	Identifier	tmp		683062	1					
ANR	683343	CompoundStatement		23:12:765:765	683062	1					
ANR	683344	ReturnStatement	return false ;	134:3:2976:2988	683062	0	True				
ANR	683345	Identifier	false		683062	0					
ANR	683346	ExpressionStatement	"memcpy ( tmp , start , size )"	136:2:2996:3021	683062	5	True				
ANR	683347	CallExpression	"memcpy ( tmp , start , size )"		683062	0					
ANR	683348	Callee	memcpy		683062	0					
ANR	683349	Identifier	memcpy		683062	0					
ANR	683350	ArgumentList	tmp		683062	1					
ANR	683351	Argument	tmp		683062	0					
ANR	683352	Identifier	tmp		683062	0					
ANR	683353	Argument	start		683062	1					
ANR	683354	Identifier	start		683062	0					
ANR	683355	Argument	size		683062	2					
ANR	683356	Identifier	size		683062	0					
ANR	683357	IfStatement	if ( padding < 0 )		683062	6					
ANR	683358	Condition	padding < 0	137:6:3029:3039	683062	0	True				
ANR	683359	RelationalExpression	padding < 0		683062	0		<			
ANR	683360	Identifier	padding		683062	0					
ANR	683361	PrimaryExpression	0		683062	1					
ANR	683362	CompoundStatement		28:3:841:892	683062	1					
ANR	683363	IdentifierDeclStatement	"int lap = R_MAX ( 0 , c -> b [ c -> y ] - ( start + padding ) ) ;"	138:3:3047:3098	683062	0	True				
ANR	683364	IdentifierDecl	"lap = R_MAX ( 0 , c -> b [ c -> y ] - ( start + padding ) )"		683062	0					
ANR	683365	IdentifierDeclType	int		683062	0					
ANR	683366	Identifier	lap		683062	1					
ANR	683367	AssignmentExpression	"lap = R_MAX ( 0 , c -> b [ c -> y ] - ( start + padding ) )"		683062	2		=			
ANR	683368	Identifier	lap		683062	0					
ANR	683369	CallExpression	"R_MAX ( 0 , c -> b [ c -> y ] - ( start + padding ) )"		683062	1					
ANR	683370	Callee	R_MAX		683062	0					
ANR	683371	Identifier	R_MAX		683062	0					
ANR	683372	ArgumentList	0		683062	1					
ANR	683373	Argument	0		683062	0					
ANR	683374	PrimaryExpression	0		683062	0					
ANR	683375	Argument	c -> b [ c -> y ] - ( start + padding )		683062	1					
ANR	683376	AdditiveExpression	c -> b [ c -> y ] - ( start + padding )		683062	0		-			
ANR	683377	ArrayIndexing	c -> b [ c -> y ]		683062	0					
ANR	683378	PtrMemberAccess	c -> b		683062	0					
ANR	683379	Identifier	c		683062	0					
ANR	683380	Identifier	b		683062	1					
ANR	683381	PtrMemberAccess	c -> y		683062	1					
ANR	683382	Identifier	c		683062	0					
ANR	683383	Identifier	y		683062	1					
ANR	683384	AdditiveExpression	start + padding		683062	1		+			
ANR	683385	Identifier	start		683062	0					
ANR	683386	Identifier	padding		683062	1					
ANR	683387	ExpressionStatement	"memcpy ( start + padding + lap , tmp + lap , size - lap )"	139:3:3103:3157	683062	1	True				
ANR	683388	CallExpression	"memcpy ( start + padding + lap , tmp + lap , size - lap )"		683062	0					
ANR	683389	Callee	memcpy		683062	0					
ANR	683390	Identifier	memcpy		683062	0					
ANR	683391	ArgumentList	start + padding + lap		683062	1					
ANR	683392	Argument	start + padding + lap		683062	0					
ANR	683393	AdditiveExpression	start + padding + lap		683062	0		+			
ANR	683394	Identifier	start		683062	0					
ANR	683395	AdditiveExpression	padding + lap		683062	1		+			
ANR	683396	Identifier	padding		683062	0					
ANR	683397	Identifier	lap		683062	1					
ANR	683398	Argument	tmp + lap		683062	1					
ANR	683399	AdditiveExpression	tmp + lap		683062	0		+			
ANR	683400	Identifier	tmp		683062	0					
ANR	683401	Identifier	lap		683062	1					
ANR	683402	Argument	size - lap		683062	2					
ANR	683403	AdditiveExpression	size - lap		683062	0		-			
ANR	683404	Identifier	size		683062	0					
ANR	683405	Identifier	lap		683062	1					
ANR	683406	ExpressionStatement	free ( tmp )	140:3:3162:3172	683062	2	True				
ANR	683407	CallExpression	free ( tmp )		683062	0					
ANR	683408	Callee	free		683062	0					
ANR	683409	Identifier	free		683062	0					
ANR	683410	ArgumentList	tmp		683062	1					
ANR	683411	Argument	tmp		683062	0					
ANR	683412	Identifier	tmp		683062	0					
ANR	683413	ExpressionStatement	c -> blen [ c -> y ] += padding	141:3:3177:3201	683062	3	True				
ANR	683414	AssignmentExpression	c -> blen [ c -> y ] += padding		683062	0		+=			
ANR	683415	ArrayIndexing	c -> blen [ c -> y ]		683062	0					
ANR	683416	PtrMemberAccess	c -> blen		683062	0					
ANR	683417	Identifier	c		683062	0					
ANR	683418	Identifier	blen		683062	1					
ANR	683419	PtrMemberAccess	c -> y		683062	1					
ANR	683420	Identifier	c		683062	0					
ANR	683421	Identifier	y		683062	1					
ANR	683422	Identifier	padding		683062	1					
ANR	683423	ReturnStatement	return true ;	142:3:3206:3217	683062	4	True				
ANR	683424	Identifier	true		683062	0					
ANR	683425	ExpressionStatement	"memcpy ( start + padding , tmp , size )"	144:2:3225:3260	683062	7	True				
ANR	683426	CallExpression	"memcpy ( start + padding , tmp , size )"		683062	0					
ANR	683427	Callee	memcpy		683062	0					
ANR	683428	Identifier	memcpy		683062	0					
ANR	683429	ArgumentList	start + padding		683062	1					
ANR	683430	Argument	start + padding		683062	0					
ANR	683431	AdditiveExpression	start + padding		683062	0		+			
ANR	683432	Identifier	start		683062	0					
ANR	683433	Identifier	padding		683062	1					
ANR	683434	Argument	tmp		683062	1					
ANR	683435	Identifier	tmp		683062	0					
ANR	683436	Argument	size		683062	2					
ANR	683437	Identifier	size		683062	0					
ANR	683438	ExpressionStatement	free ( tmp )	145:2:3264:3274	683062	8	True				
ANR	683439	CallExpression	free ( tmp )		683062	0					
ANR	683440	Callee	free		683062	0					
ANR	683441	Identifier	free		683062	0					
ANR	683442	ArgumentList	tmp		683062	1					
ANR	683443	Argument	tmp		683062	0					
ANR	683444	Identifier	tmp		683062	0					
ANR	683445	ExpressionStatement	c -> blen [ c -> y ] += padding	146:2:3278:3302	683062	9	True				
ANR	683446	AssignmentExpression	c -> blen [ c -> y ] += padding		683062	0		+=			
ANR	683447	ArrayIndexing	c -> blen [ c -> y ]		683062	0					
ANR	683448	PtrMemberAccess	c -> blen		683062	0					
ANR	683449	Identifier	c		683062	0					
ANR	683450	Identifier	blen		683062	1					
ANR	683451	PtrMemberAccess	c -> y		683062	1					
ANR	683452	Identifier	c		683062	0					
ANR	683453	Identifier	y		683062	1					
ANR	683454	Identifier	padding		683062	1					
ANR	683455	ReturnStatement	return true ;	148:1:3308:3319	683062	5	True				
ANR	683456	Identifier	true		683062	0					
ANR	683457	ReturnType	static bool		683062	1					
ANR	683458	Identifier	__expandLine		683062	2					
ANR	683459	ParameterList	"RConsCanvas * c , int real_len , int utf8_len"		683062	3					
ANR	683460	Parameter	RConsCanvas * c	111:25:2161:2174	683062	0	True				
ANR	683461	ParameterType	RConsCanvas *		683062	0					
ANR	683462	Identifier	c		683062	1					
ANR	683463	Parameter	int real_len	111:41:2177:2188	683062	1	True				
ANR	683464	ParameterType	int		683062	0					
ANR	683465	Identifier	real_len		683062	1					
ANR	683466	Parameter	int utf8_len	111:55:2191:2202	683062	2	True				
ANR	683467	ParameterType	int		683062	0					
ANR	683468	Identifier	utf8_len		683062	1					
ANR	683469	CFGEntryNode	ENTRY		683062		True				
ANR	683470	CFGExitNode	EXIT		683062		True				
ANR	683471	Symbol	goback		683062						
ANR	683472	Symbol	* c -> b [ c -> y ]		683062						
ANR	683473	Symbol	* c -> b		683062						
ANR	683474	Symbol	* * c -> y		683062						
ANR	683475	Symbol	* c -> blen		683062						
ANR	683476	Symbol	utf8_len		683062						
ANR	683477	Symbol	realloc		683062						
ANR	683478	Symbol	c -> bsize		683062						
ANR	683479	Symbol	newline		683062						
ANR	683480	Symbol	tmp		683062						
ANR	683481	Symbol	c -> blen		683062						
ANR	683482	Symbol	c -> b		683062						
ANR	683483	Symbol	lap		683062						
ANR	683484	Symbol	* c -> y		683062						
ANR	683485	Symbol	padding		683062						
ANR	683486	Symbol	malloc		683062						
ANR	683487	Symbol	c		683062						
ANR	683488	Symbol	* * c -> b		683062						
ANR	683489	Symbol	* * c		683062						
ANR	683490	Symbol	buf_utf8_len		683062						
ANR	683491	Symbol	newsize		683062						
ANR	683492	Symbol	false		683062						
ANR	683493	Symbol	start		683062						
ANR	683494	Symbol	* c		683062						
ANR	683495	Symbol	__getUtf8Length2		683062						
ANR	683496	Symbol	c -> x		683062						
ANR	683497	Symbol	c -> y		683062						
ANR	683498	Symbol	real_len		683062						
ANR	683499	Symbol	size		683062						
ANR	683500	Symbol	true		683062						
ANR	683501	Symbol	R_MAX		683062						
ANR	683502	Symbol	* c -> bsize		683062						
ANR	683503	Symbol	* * * c		683062						
ANR	683504	Function	r_cons_canvas_free	151:0:3324:3560							
ANR	683505	FunctionDef	r_cons_canvas_free (RConsCanvas * c)		683504	0					
ANR	683506	CompoundStatement		151:46:3370:3560	683504	0					
ANR	683507	IfStatement	if ( c )		683504	0					
ANR	683508	Condition	c	152:5:3377:3377	683504	0	True				
ANR	683509	Identifier	c		683504	0					
ANR	683510	CompoundStatement		2:8:9:9	683504	1					
ANR	683511	IfStatement	if ( c -> b )		683504	0					
ANR	683512	Condition	c -> b	153:6:3388:3391	683504	0	True				
ANR	683513	PtrMemberAccess	c -> b		683504	0					
ANR	683514	Identifier	c		683504	0					
ANR	683515	Identifier	b		683504	1					
ANR	683516	CompoundStatement		4:3:28:33	683504	1					
ANR	683517	IdentifierDeclStatement	int y ;	154:3:3399:3404	683504	0	True				
ANR	683518	IdentifierDecl	y		683504	0					
ANR	683519	IdentifierDeclType	int		683504	0					
ANR	683520	Identifier	y		683504	1					
ANR	683521	ForStatement	for ( y = 0 ; y < c -> h ; y ++ )		683504	1					
ANR	683522	ForInit	y = 0 ;	155:8:3414:3419	683504	0	True				
ANR	683523	AssignmentExpression	y = 0		683504	0		=			
ANR	683524	Identifier	y		683504	0					
ANR	683525	PrimaryExpression	0		683504	1					
ANR	683526	Condition	y < c -> h	155:15:3421:3428	683504	1	True				
ANR	683527	RelationalExpression	y < c -> h		683504	0		<			
ANR	683528	Identifier	y		683504	0					
ANR	683529	PtrMemberAccess	c -> h		683504	1					
ANR	683530	Identifier	c		683504	0					
ANR	683531	Identifier	h		683504	1					
ANR	683532	PostIncDecOperationExpression	y ++	155:25:3431:3433	683504	2	True				
ANR	683533	Identifier	y		683504	0					
ANR	683534	IncDec	++		683504	1					
ANR	683535	CompoundStatement		5:30:65:65	683504	3					
ANR	683536	ExpressionStatement	free ( c -> b [ y ] )	156:4:3442:3456	683504	0	True				
ANR	683537	CallExpression	free ( c -> b [ y ] )		683504	0					
ANR	683538	Callee	free		683504	0					
ANR	683539	Identifier	free		683504	0					
ANR	683540	ArgumentList	c -> b [ y ]		683504	1					
ANR	683541	Argument	c -> b [ y ]		683504	0					
ANR	683542	ArrayIndexing	c -> b [ y ]		683504	0					
ANR	683543	PtrMemberAccess	c -> b		683504	0					
ANR	683544	Identifier	c		683504	0					
ANR	683545	Identifier	b		683504	1					
ANR	683546	Identifier	y		683504	1					
ANR	683547	ExpressionStatement	free ( c -> b )	158:3:3466:3477	683504	2	True				
ANR	683548	CallExpression	free ( c -> b )		683504	0					
ANR	683549	Callee	free		683504	0					
ANR	683550	Identifier	free		683504	0					
ANR	683551	ArgumentList	c -> b		683504	1					
ANR	683552	Argument	c -> b		683504	0					
ANR	683553	PtrMemberAccess	c -> b		683504	0					
ANR	683554	Identifier	c		683504	0					
ANR	683555	Identifier	b		683504	1					
ANR	683556	ExpressionStatement	free ( c -> bsize )	160:2:3485:3500	683504	1	True				
ANR	683557	CallExpression	free ( c -> bsize )		683504	0					
ANR	683558	Callee	free		683504	0					
ANR	683559	Identifier	free		683504	0					
ANR	683560	ArgumentList	c -> bsize		683504	1					
ANR	683561	Argument	c -> bsize		683504	0					
ANR	683562	PtrMemberAccess	c -> bsize		683504	0					
ANR	683563	Identifier	c		683504	0					
ANR	683564	Identifier	bsize		683504	1					
ANR	683565	ExpressionStatement	free ( c -> blen )	161:2:3504:3518	683504	2	True				
ANR	683566	CallExpression	free ( c -> blen )		683504	0					
ANR	683567	Callee	free		683504	0					
ANR	683568	Identifier	free		683504	0					
ANR	683569	ArgumentList	c -> blen		683504	1					
ANR	683570	Argument	c -> blen		683504	0					
ANR	683571	PtrMemberAccess	c -> blen		683504	0					
ANR	683572	Identifier	c		683504	0					
ANR	683573	Identifier	blen		683504	1					
ANR	683574	ExpressionStatement	ht_up_free ( c -> attrs )	162:2:3522:3543	683504	3	True				
ANR	683575	CallExpression	ht_up_free ( c -> attrs )		683504	0					
ANR	683576	Callee	ht_up_free		683504	0					
ANR	683577	Identifier	ht_up_free		683504	0					
ANR	683578	ArgumentList	c -> attrs		683504	1					
ANR	683579	Argument	c -> attrs		683504	0					
ANR	683580	PtrMemberAccess	c -> attrs		683504	0					
ANR	683581	Identifier	c		683504	0					
ANR	683582	Identifier	attrs		683504	1					
ANR	683583	ExpressionStatement	free ( c )	163:2:3547:3555	683504	4	True				
ANR	683584	CallExpression	free ( c )		683504	0					
ANR	683585	Callee	free		683504	0					
ANR	683586	Identifier	free		683504	0					
ANR	683587	ArgumentList	c		683504	1					
ANR	683588	Argument	c		683504	0					
ANR	683589	Identifier	c		683504	0					
ANR	683590	ReturnType	R_API void		683504	1					
ANR	683591	Identifier	r_cons_canvas_free		683504	2					
ANR	683592	ParameterList	RConsCanvas * c		683504	3					
ANR	683593	Parameter	RConsCanvas * c	151:30:3354:3367	683504	0	True				
ANR	683594	ParameterType	RConsCanvas *		683504	0					
ANR	683595	Identifier	c		683504	1					
ANR	683596	CFGEntryNode	ENTRY		683504		True				
ANR	683597	CFGExitNode	EXIT		683504		True				
ANR	683598	Symbol	c -> bsize		683504						
ANR	683599	Symbol	c		683504						
ANR	683600	Symbol	* y		683504						
ANR	683601	Symbol	c -> attrs		683504						
ANR	683602	Symbol	* c -> b		683504						
ANR	683603	Symbol	c -> blen		683504						
ANR	683604	Symbol	c -> b		683504						
ANR	683605	Symbol	* * c		683504						
ANR	683606	Symbol	y		683504						
ANR	683607	Symbol	* c		683504						
ANR	683608	Symbol	c -> h		683504						
ANR	683609	Function	attribute_delete_cb	167:0:3563:3709							
ANR	683610	FunctionDef	"attribute_delete_cb (void * user , const ut64 key , const void * value)"		683609	0					
ANR	683611	CompoundStatement		167:79:3642:3709	683609	0					
ANR	683612	IdentifierDeclStatement	HtUP * ht = ( HtUP * ) user ;	168:1:3645:3668	683609	0	True				
ANR	683613	IdentifierDecl	* ht = ( HtUP * ) user		683609	0					
ANR	683614	IdentifierDeclType	HtUP *		683609	0					
ANR	683615	Identifier	ht		683609	1					
ANR	683616	AssignmentExpression	* ht = ( HtUP * ) user		683609	2		=			
ANR	683617	Identifier	ht		683609	0					
ANR	683618	CastExpression	( HtUP * ) user		683609	1					
ANR	683619	CastTarget	HtUP *		683609	0					
ANR	683620	Identifier	user		683609	1					
ANR	683621	ExpressionStatement	"ht_up_delete ( ht , key )"	169:1:3671:3693	683609	1	True				
ANR	683622	CallExpression	"ht_up_delete ( ht , key )"		683609	0					
ANR	683623	Callee	ht_up_delete		683609	0					
ANR	683624	Identifier	ht_up_delete		683609	0					
ANR	683625	ArgumentList	ht		683609	1					
ANR	683626	Argument	ht		683609	0					
ANR	683627	Identifier	ht		683609	0					
ANR	683628	Argument	key		683609	1					
ANR	683629	Identifier	key		683609	0					
ANR	683630	ReturnStatement	return true ;	170:1:3696:3707	683609	2	True				
ANR	683631	Identifier	true		683609	0					
ANR	683632	ReturnType	static bool		683609	1					
ANR	683633	Identifier	attribute_delete_cb		683609	2					
ANR	683634	ParameterList	"void * user , const ut64 key , const void * value"		683609	3					
ANR	683635	Parameter	void * user	167:32:3595:3604	683609	0	True				
ANR	683636	ParameterType	void *		683609	0					
ANR	683637	Identifier	user		683609	1					
ANR	683638	Parameter	const ut64 key	167:44:3607:3620	683609	1	True				
ANR	683639	ParameterType	const ut64		683609	0					
ANR	683640	Identifier	key		683609	1					
ANR	683641	Parameter	const void * value	167:60:3623:3639	683609	2	True				
ANR	683642	ParameterType	const void *		683609	0					
ANR	683643	Identifier	value		683609	1					
ANR	683644	CFGEntryNode	ENTRY		683609		True				
ANR	683645	CFGExitNode	EXIT		683609		True				
ANR	683646	Symbol	true		683609						
ANR	683647	Symbol	ht		683609						
ANR	683648	Symbol	user		683609						
ANR	683649	Symbol	value		683609						
ANR	683650	Symbol	key		683609						
ANR	683651	Function	r_cons_canvas_clear	173:0:3712:3931							
ANR	683652	FunctionDef	r_cons_canvas_clear (RConsCanvas * c)		683651	0					
ANR	683653	CompoundStatement		173:47:3759:3931	683651	0					
ANR	683654	ExpressionStatement	r_return_if_fail ( c && c -> b )	174:1:3762:3790	683651	0	True				
ANR	683655	CallExpression	r_return_if_fail ( c && c -> b )		683651	0					
ANR	683656	Callee	r_return_if_fail		683651	0					
ANR	683657	Identifier	r_return_if_fail		683651	0					
ANR	683658	ArgumentList	c && c -> b		683651	1					
ANR	683659	Argument	c && c -> b		683651	0					
ANR	683660	AndExpression	c && c -> b		683651	0		&&			
ANR	683661	Identifier	c		683651	0					
ANR	683662	PtrMemberAccess	c -> b		683651	1					
ANR	683663	Identifier	c		683651	0					
ANR	683664	Identifier	b		683651	1					
ANR	683665	IdentifierDeclStatement	int y ;	175:1:3793:3798	683651	1	True				
ANR	683666	IdentifierDecl	y		683651	0					
ANR	683667	IdentifierDeclType	int		683651	0					
ANR	683668	Identifier	y		683651	1					
ANR	683669	ForStatement	for ( y = 0 ; y < c -> h ; y ++ )		683651	2					
ANR	683670	ForInit	y = 0 ;	176:6:3806:3811	683651	0	True				
ANR	683671	AssignmentExpression	y = 0		683651	0		=			
ANR	683672	Identifier	y		683651	0					
ANR	683673	PrimaryExpression	0		683651	1					
ANR	683674	Condition	y < c -> h	176:13:3813:3820	683651	1	True				
ANR	683675	RelationalExpression	y < c -> h		683651	0		<			
ANR	683676	Identifier	y		683651	0					
ANR	683677	PtrMemberAccess	c -> h		683651	1					
ANR	683678	Identifier	c		683651	0					
ANR	683679	Identifier	h		683651	1					
ANR	683680	PostIncDecOperationExpression	y ++	176:23:3823:3825	683651	2	True				
ANR	683681	Identifier	y		683651	0					
ANR	683682	IncDec	++		683651	1					
ANR	683683	CompoundStatement		4:28:68:68	683651	3					
ANR	683684	ExpressionStatement	"memset ( c -> b [ y ] , '\\n' , c -> bsize [ y ] )"	177:2:3832:3867	683651	0	True				
ANR	683685	CallExpression	"memset ( c -> b [ y ] , '\\n' , c -> bsize [ y ] )"		683651	0					
ANR	683686	Callee	memset		683651	0					
ANR	683687	Identifier	memset		683651	0					
ANR	683688	ArgumentList	c -> b [ y ]		683651	1					
ANR	683689	Argument	c -> b [ y ]		683651	0					
ANR	683690	ArrayIndexing	c -> b [ y ]		683651	0					
ANR	683691	PtrMemberAccess	c -> b		683651	0					
ANR	683692	Identifier	c		683651	0					
ANR	683693	Identifier	b		683651	1					
ANR	683694	Identifier	y		683651	1					
ANR	683695	Argument	'\\n'		683651	1					
ANR	683696	PrimaryExpression	'\\n'		683651	0					
ANR	683697	Argument	c -> bsize [ y ]		683651	2					
ANR	683698	ArrayIndexing	c -> bsize [ y ]		683651	0					
ANR	683699	PtrMemberAccess	c -> bsize		683651	0					
ANR	683700	Identifier	c		683651	0					
ANR	683701	Identifier	bsize		683651	1					
ANR	683702	Identifier	y		683651	1					
ANR	683703	ExpressionStatement	"ht_up_foreach ( c -> attrs , attribute_delete_cb , c -> attrs )"	180:1:3874:3929	683651	3	True				
ANR	683704	CallExpression	"ht_up_foreach ( c -> attrs , attribute_delete_cb , c -> attrs )"		683651	0					
ANR	683705	Callee	ht_up_foreach		683651	0					
ANR	683706	Identifier	ht_up_foreach		683651	0					
ANR	683707	ArgumentList	c -> attrs		683651	1					
ANR	683708	Argument	c -> attrs		683651	0					
ANR	683709	PtrMemberAccess	c -> attrs		683651	0					
ANR	683710	Identifier	c		683651	0					
ANR	683711	Identifier	attrs		683651	1					
ANR	683712	Argument	attribute_delete_cb		683651	1					
ANR	683713	Identifier	attribute_delete_cb		683651	0					
ANR	683714	Argument	c -> attrs		683651	2					
ANR	683715	PtrMemberAccess	c -> attrs		683651	0					
ANR	683716	Identifier	c		683651	0					
ANR	683717	Identifier	attrs		683651	1					
ANR	683718	ReturnType	R_API void		683651	1					
ANR	683719	Identifier	r_cons_canvas_clear		683651	2					
ANR	683720	ParameterList	RConsCanvas * c		683651	3					
ANR	683721	Parameter	RConsCanvas * c	173:31:3743:3756	683651	0	True				
ANR	683722	ParameterType	RConsCanvas *		683651	0					
ANR	683723	Identifier	c		683651	1					
ANR	683724	CFGEntryNode	ENTRY		683651		True				
ANR	683725	CFGExitNode	EXIT		683651		True				
ANR	683726	Symbol	c -> bsize		683651						
ANR	683727	Symbol	c		683651						
ANR	683728	Symbol	* y		683651						
ANR	683729	Symbol	c -> attrs		683651						
ANR	683730	Symbol	* c -> b		683651						
ANR	683731	Symbol	attribute_delete_cb		683651						
ANR	683732	Symbol	c -> b		683651						
ANR	683733	Symbol	* * c		683651						
ANR	683734	Symbol	y		683651						
ANR	683735	Symbol	* c -> bsize		683651						
ANR	683736	Symbol	* c		683651						
ANR	683737	Symbol	c -> h		683651						
ANR	683738	Function	r_cons_canvas_gotoxy	183:0:3934:4460							
ANR	683739	FunctionDef	"r_cons_canvas_gotoxy (RConsCanvas * c , int x , int y)"		683738	0					
ANR	683740	CompoundStatement		183:62:3996:4460	683738	0					
ANR	683741	IdentifierDeclStatement	bool ret = true ;	184:1:3999:4014	683738	0	True				
ANR	683742	IdentifierDecl	ret = true		683738	0					
ANR	683743	IdentifierDeclType	bool		683738	0					
ANR	683744	Identifier	ret		683738	1					
ANR	683745	AssignmentExpression	ret = true		683738	2		=			
ANR	683746	Identifier	true		683738	0					
ANR	683747	Identifier	true		683738	1					
ANR	683748	IfStatement	if ( ! c )		683738	1					
ANR	683749	Condition	! c	185:5:4021:4022	683738	0	True				
ANR	683750	UnaryOperationExpression	! c		683738	0					
ANR	683751	UnaryOperator	!		683738	0					
ANR	683752	Identifier	c		683738	1					
ANR	683753	CompoundStatement		3:9:28:28	683738	1					
ANR	683754	ReturnStatement	return 0 ;	186:2:4029:4037	683738	0	True				
ANR	683755	PrimaryExpression	0		683738	0					
ANR	683756	ExpressionStatement	y += c -> sy	188:1:4043:4053	683738	2	True				
ANR	683757	AssignmentExpression	y += c -> sy		683738	0		+=			
ANR	683758	Identifier	y		683738	0					
ANR	683759	PtrMemberAccess	c -> sy		683738	1					
ANR	683760	Identifier	c		683738	0					
ANR	683761	Identifier	sy		683738	1					
ANR	683762	ExpressionStatement	x += c -> sx	189:1:4056:4066	683738	3	True				
ANR	683763	AssignmentExpression	x += c -> sx		683738	0		+=			
ANR	683764	Identifier	x		683738	0					
ANR	683765	PtrMemberAccess	c -> sx		683738	1					
ANR	683766	Identifier	c		683738	0					
ANR	683767	Identifier	sx		683738	1					
ANR	683768	IfStatement	if ( y > c -> h * 2 )		683738	4					
ANR	683769	Condition	y > c -> h * 2	191:5:4074:4085	683738	0	True				
ANR	683770	RelationalExpression	y > c -> h * 2		683738	0		>			
ANR	683771	Identifier	y		683738	0					
ANR	683772	MultiplicativeExpression	c -> h * 2		683738	1		*			
ANR	683773	PtrMemberAccess	c -> h		683738	0					
ANR	683774	Identifier	c		683738	0					
ANR	683775	Identifier	h		683738	1					
ANR	683776	PrimaryExpression	2		683738	1					
ANR	683777	CompoundStatement		9:19:91:91	683738	1					
ANR	683778	ReturnStatement	return false ;	192:2:4092:4104	683738	0	True				
ANR	683779	Identifier	false		683738	0					
ANR	683780	IfStatement	if ( y >= c -> h )		683738	5					
ANR	683781	Condition	y >= c -> h	194:5:4114:4122	683738	0	True				
ANR	683782	RelationalExpression	y >= c -> h		683738	0		>=			
ANR	683783	Identifier	y		683738	0					
ANR	683784	PtrMemberAccess	c -> h		683738	1					
ANR	683785	Identifier	c		683738	0					
ANR	683786	Identifier	h		683738	1					
ANR	683787	CompoundStatement		12:16:128:128	683738	1					
ANR	683788	ExpressionStatement	y = c -> h - 1	195:2:4129:4141	683738	0	True				
ANR	683789	AssignmentExpression	y = c -> h - 1		683738	0		=			
ANR	683790	Identifier	y		683738	0					
ANR	683791	AdditiveExpression	c -> h - 1		683738	1		-			
ANR	683792	PtrMemberAccess	c -> h		683738	0					
ANR	683793	Identifier	c		683738	0					
ANR	683794	Identifier	h		683738	1					
ANR	683795	PrimaryExpression	1		683738	1					
ANR	683796	ExpressionStatement	ret = false	196:2:4145:4156	683738	1	True				
ANR	683797	AssignmentExpression	ret = false		683738	0		=			
ANR	683798	Identifier	ret		683738	0					
ANR	683799	Identifier	false		683738	1					
ANR	683800	IfStatement	if ( y < 0 )		683738	6					
ANR	683801	Condition	y < 0	198:5:4166:4170	683738	0	True				
ANR	683802	RelationalExpression	y < 0		683738	0		<			
ANR	683803	Identifier	y		683738	0					
ANR	683804	PrimaryExpression	0		683738	1					
ANR	683805	CompoundStatement		16:12:176:176	683738	1					
ANR	683806	ExpressionStatement	y = 0	199:2:4177:4182	683738	0	True				
ANR	683807	AssignmentExpression	y = 0		683738	0		=			
ANR	683808	Identifier	y		683738	0					
ANR	683809	PrimaryExpression	0		683738	1					
ANR	683810	ExpressionStatement	ret = false	200:2:4186:4197	683738	1	True				
ANR	683811	AssignmentExpression	ret = false		683738	0		=			
ANR	683812	Identifier	ret		683738	0					
ANR	683813	Identifier	false		683738	1					
ANR	683814	IfStatement	if ( x < 0 )		683738	7					
ANR	683815	Condition	x < 0	202:5:4207:4211	683738	0	True				
ANR	683816	RelationalExpression	x < 0		683738	0		<			
ANR	683817	Identifier	x		683738	0					
ANR	683818	PrimaryExpression	0		683738	1					
ANR	683819	CompoundStatement		20:12:217:217	683738	1					
ANR	683820	ExpressionStatement	ret = false	204:2:4232:4243	683738	0	True				
ANR	683821	AssignmentExpression	ret = false		683738	0		=			
ANR	683822	Identifier	ret		683738	0					
ANR	683823	Identifier	false		683738	1					
ANR	683824	IfStatement	if ( x > c -> blen [ y ] * 2 )		683738	8					
ANR	683825	Condition	x > c -> blen [ y ] * 2	206:5:4253:4270	683738	0	True				
ANR	683826	RelationalExpression	x > c -> blen [ y ] * 2		683738	0		>			
ANR	683827	Identifier	x		683738	0					
ANR	683828	MultiplicativeExpression	c -> blen [ y ] * 2		683738	1		*			
ANR	683829	ArrayIndexing	c -> blen [ y ]		683738	0					
ANR	683830	PtrMemberAccess	c -> blen		683738	0					
ANR	683831	Identifier	c		683738	0					
ANR	683832	Identifier	blen		683738	1					
ANR	683833	Identifier	y		683738	1					
ANR	683834	PrimaryExpression	2		683738	1					
ANR	683835	CompoundStatement		24:25:276:276	683738	1					
ANR	683836	ReturnStatement	return false ;	207:2:4277:4289	683738	0	True				
ANR	683837	Identifier	false		683738	0					
ANR	683838	IfStatement	if ( x >= c -> blen [ y ] )		683738	9					
ANR	683839	Condition	x >= c -> blen [ y ]	209:5:4299:4313	683738	0	True				
ANR	683840	RelationalExpression	x >= c -> blen [ y ]		683738	0		>=			
ANR	683841	Identifier	x		683738	0					
ANR	683842	ArrayIndexing	c -> blen [ y ]		683738	1					
ANR	683843	PtrMemberAccess	c -> blen		683738	0					
ANR	683844	Identifier	c		683738	0					
ANR	683845	Identifier	blen		683738	1					
ANR	683846	Identifier	y		683738	1					
ANR	683847	CompoundStatement		27:22:319:319	683738	1					
ANR	683848	ExpressionStatement	c -> x = c -> blen [ y ]	210:2:4320:4337	683738	0	True				
ANR	683849	AssignmentExpression	c -> x = c -> blen [ y ]		683738	0		=			
ANR	683850	PtrMemberAccess	c -> x		683738	0					
ANR	683851	Identifier	c		683738	0					
ANR	683852	Identifier	x		683738	1					
ANR	683853	ArrayIndexing	c -> blen [ y ]		683738	1					
ANR	683854	PtrMemberAccess	c -> blen		683738	0					
ANR	683855	Identifier	c		683738	0					
ANR	683856	Identifier	blen		683738	1					
ANR	683857	Identifier	y		683738	1					
ANR	683858	ExpressionStatement	ret = false	211:2:4341:4352	683738	1	True				
ANR	683859	AssignmentExpression	ret = false		683738	0		=			
ANR	683860	Identifier	ret		683738	0					
ANR	683861	Identifier	false		683738	1					
ANR	683862	IfStatement	if ( x < c -> blen [ y ] && x >= 0 )		683738	10					
ANR	683863	Condition	x < c -> blen [ y ] && x >= 0	213:5:4362:4385	683738	0	True				
ANR	683864	AndExpression	x < c -> blen [ y ] && x >= 0		683738	0		&&			
ANR	683865	RelationalExpression	x < c -> blen [ y ]		683738	0		<			
ANR	683866	Identifier	x		683738	0					
ANR	683867	ArrayIndexing	c -> blen [ y ]		683738	1					
ANR	683868	PtrMemberAccess	c -> blen		683738	0					
ANR	683869	Identifier	c		683738	0					
ANR	683870	Identifier	blen		683738	1					
ANR	683871	Identifier	y		683738	1					
ANR	683872	RelationalExpression	x >= 0		683738	1		>=			
ANR	683873	Identifier	x		683738	0					
ANR	683874	PrimaryExpression	0		683738	1					
ANR	683875	CompoundStatement		31:31:391:391	683738	1					
ANR	683876	ExpressionStatement	c -> x = x	214:2:4392:4400	683738	0	True				
ANR	683877	AssignmentExpression	c -> x = x		683738	0		=			
ANR	683878	PtrMemberAccess	c -> x		683738	0					
ANR	683879	Identifier	c		683738	0					
ANR	683880	Identifier	x		683738	1					
ANR	683881	Identifier	x		683738	1					
ANR	683882	IfStatement	if ( y < c -> h && y >= 0 )		683738	11					
ANR	683883	Condition	y < c -> h && y >= 0	216:5:4410:4427	683738	0	True				
ANR	683884	AndExpression	y < c -> h && y >= 0		683738	0		&&			
ANR	683885	RelationalExpression	y < c -> h		683738	0		<			
ANR	683886	Identifier	y		683738	0					
ANR	683887	PtrMemberAccess	c -> h		683738	1					
ANR	683888	Identifier	c		683738	0					
ANR	683889	Identifier	h		683738	1					
ANR	683890	RelationalExpression	y >= 0		683738	1		>=			
ANR	683891	Identifier	y		683738	0					
ANR	683892	PrimaryExpression	0		683738	1					
ANR	683893	CompoundStatement		34:25:433:433	683738	1					
ANR	683894	ExpressionStatement	c -> y = y	217:2:4434:4442	683738	0	True				
ANR	683895	AssignmentExpression	c -> y = y		683738	0		=			
ANR	683896	PtrMemberAccess	c -> y		683738	0					
ANR	683897	Identifier	c		683738	0					
ANR	683898	Identifier	y		683738	1					
ANR	683899	Identifier	y		683738	1					
ANR	683900	ReturnStatement	return ret ;	219:1:4448:4458	683738	12	True				
ANR	683901	Identifier	ret		683738	0					
ANR	683902	ReturnType	R_API bool		683738	1					
ANR	683903	Identifier	r_cons_canvas_gotoxy		683738	2					
ANR	683904	ParameterList	"RConsCanvas * c , int x , int y"		683738	3					
ANR	683905	Parameter	RConsCanvas * c	183:32:3966:3979	683738	0	True				
ANR	683906	ParameterType	RConsCanvas *		683738	0					
ANR	683907	Identifier	c		683738	1					
ANR	683908	Parameter	int x	183:48:3982:3986	683738	1	True				
ANR	683909	ParameterType	int		683738	0					
ANR	683910	Identifier	x		683738	1					
ANR	683911	Parameter	int y	183:55:3989:3993	683738	2	True				
ANR	683912	ParameterType	int		683738	0					
ANR	683913	Identifier	y		683738	1					
ANR	683914	CFGEntryNode	ENTRY		683738		True				
ANR	683915	CFGExitNode	EXIT		683738		True				
ANR	683916	Symbol	ret		683738						
ANR	683917	Symbol	c -> sy		683738						
ANR	683918	Symbol	c		683738						
ANR	683919	Symbol	* y		683738						
ANR	683920	Symbol	false		683738						
ANR	683921	Symbol	* * c		683738						
ANR	683922	Symbol	* c -> blen		683738						
ANR	683923	Symbol	* c		683738						
ANR	683924	Symbol	c -> sx		683738						
ANR	683925	Symbol	c -> x		683738						
ANR	683926	Symbol	c -> y		683738						
ANR	683927	Symbol	c -> blen		683738						
ANR	683928	Symbol	x		683738						
ANR	683929	Symbol	true		683738						
ANR	683930	Symbol	y		683738						
ANR	683931	Symbol	c -> h		683738						
ANR	683932	Function	r_cons_canvas_new	222:0:4463:5422							
ANR	683933	FunctionDef	"r_cons_canvas_new (int w , int h)"		683932	0					
ANR	683934	CompoundStatement		222:51:4514:5422	683932	0					
ANR	683935	IfStatement	if ( w < 1 || h < 1 )		683932	0					
ANR	683936	Condition	w < 1 || h < 1	223:5:4521:4534	683932	0	True				
ANR	683937	OrExpression	w < 1 || h < 1		683932	0		||			
ANR	683938	RelationalExpression	w < 1		683932	0		<			
ANR	683939	Identifier	w		683932	0					
ANR	683940	PrimaryExpression	1		683932	1					
ANR	683941	RelationalExpression	h < 1		683932	1		<			
ANR	683942	Identifier	h		683932	0					
ANR	683943	PrimaryExpression	1		683932	1					
ANR	683944	CompoundStatement		2:21:22:22	683932	1					
ANR	683945	ReturnStatement	return NULL ;	224:2:4541:4552	683932	0	True				
ANR	683946	Identifier	NULL		683932	0					
ANR	683947	IdentifierDeclStatement	RConsCanvas * c = R_NEW0 ( RConsCanvas ) ;	226:1:4558:4595	683932	1	True				
ANR	683948	IdentifierDecl	* c = R_NEW0 ( RConsCanvas )		683932	0					
ANR	683949	IdentifierDeclType	RConsCanvas *		683932	0					
ANR	683950	Identifier	c		683932	1					
ANR	683951	AssignmentExpression	* c = R_NEW0 ( RConsCanvas )		683932	2		=			
ANR	683952	Identifier	c		683932	0					
ANR	683953	CallExpression	R_NEW0 ( RConsCanvas )		683932	1					
ANR	683954	Callee	R_NEW0		683932	0					
ANR	683955	Identifier	R_NEW0		683932	0					
ANR	683956	ArgumentList	RConsCanvas		683932	1					
ANR	683957	Argument	RConsCanvas		683932	0					
ANR	683958	Identifier	RConsCanvas		683932	0					
ANR	683959	IfStatement	if ( ! c )		683932	2					
ANR	683960	Condition	! c	227:5:4602:4603	683932	0	True				
ANR	683961	UnaryOperationExpression	! c		683932	0					
ANR	683962	UnaryOperator	!		683932	0					
ANR	683963	Identifier	c		683932	1					
ANR	683964	CompoundStatement		6:9:91:91	683932	1					
ANR	683965	ReturnStatement	return NULL ;	228:2:4610:4621	683932	0	True				
ANR	683966	Identifier	NULL		683932	0					
ANR	683967	ExpressionStatement	c -> bsize = NULL	230:1:4627:4642	683932	3	True				
ANR	683968	AssignmentExpression	c -> bsize = NULL		683932	0		=			
ANR	683969	PtrMemberAccess	c -> bsize		683932	0					
ANR	683970	Identifier	c		683932	0					
ANR	683971	Identifier	bsize		683932	1					
ANR	683972	Identifier	NULL		683932	1					
ANR	683973	ExpressionStatement	c -> blen = NULL	231:1:4645:4659	683932	4	True				
ANR	683974	AssignmentExpression	c -> blen = NULL		683932	0		=			
ANR	683975	PtrMemberAccess	c -> blen		683932	0					
ANR	683976	Identifier	c		683932	0					
ANR	683977	Identifier	blen		683932	1					
ANR	683978	Identifier	NULL		683932	1					
ANR	683979	IdentifierDeclStatement	int i = 0 ;	232:1:4662:4671	683932	5	True				
ANR	683980	IdentifierDecl	i = 0		683932	0					
ANR	683981	IdentifierDeclType	int		683932	0					
ANR	683982	Identifier	i		683932	1					
ANR	683983	AssignmentExpression	i = 0		683932	2		=			
ANR	683984	Identifier	i		683932	0					
ANR	683985	PrimaryExpression	0		683932	1					
ANR	683986	ExpressionStatement	c -> color = 0	233:1:4674:4686	683932	6	True				
ANR	683987	AssignmentExpression	c -> color = 0		683932	0		=			
ANR	683988	PtrMemberAccess	c -> color		683932	0					
ANR	683989	Identifier	c		683932	0					
ANR	683990	Identifier	color		683932	1					
ANR	683991	PrimaryExpression	0		683932	1					
ANR	683992	ExpressionStatement	c -> sx = 0	234:1:4689:4698	683932	7	True				
ANR	683993	AssignmentExpression	c -> sx = 0		683932	0		=			
ANR	683994	PtrMemberAccess	c -> sx		683932	0					
ANR	683995	Identifier	c		683932	0					
ANR	683996	Identifier	sx		683932	1					
ANR	683997	PrimaryExpression	0		683932	1					
ANR	683998	ExpressionStatement	c -> sy = 0	235:1:4701:4710	683932	8	True				
ANR	683999	AssignmentExpression	c -> sy = 0		683932	0		=			
ANR	684000	PtrMemberAccess	c -> sy		683932	0					
ANR	684001	Identifier	c		683932	0					
ANR	684002	Identifier	sy		683932	1					
ANR	684003	PrimaryExpression	0		683932	1					
ANR	684004	ExpressionStatement	c -> b = malloc ( sizeof * c -> b * h )	236:1:4713:4745	683932	9	True				
ANR	684005	AssignmentExpression	c -> b = malloc ( sizeof * c -> b * h )		683932	0		=			
ANR	684006	PtrMemberAccess	c -> b		683932	0					
ANR	684007	Identifier	c		683932	0					
ANR	684008	Identifier	b		683932	1					
ANR	684009	CallExpression	malloc ( sizeof * c -> b * h )		683932	1					
ANR	684010	Callee	malloc		683932	0					
ANR	684011	Identifier	malloc		683932	0					
ANR	684012	ArgumentList	sizeof * c -> b * h		683932	1					
ANR	684013	Argument	sizeof * c -> b * h		683932	0					
ANR	684014	MultiplicativeExpression	sizeof * c -> b * h		683932	0		*			
ANR	684015	SizeofExpression	sizeof * c -> b		683932	0					
ANR	684016	Sizeof	sizeof		683932	0					
ANR	684017	UnaryOperationExpression	* c -> b		683932	1					
ANR	684018	UnaryOperator	*		683932	0					
ANR	684019	PtrMemberAccess	c -> b		683932	1					
ANR	684020	Identifier	c		683932	0					
ANR	684021	Identifier	b		683932	1					
ANR	684022	Identifier	h		683932	1					
ANR	684023	IfStatement	if ( ! c -> b )		683932	10					
ANR	684024	Condition	! c -> b	237:5:4752:4756	683932	0	True				
ANR	684025	UnaryOperationExpression	! c -> b		683932	0					
ANR	684026	UnaryOperator	!		683932	0					
ANR	684027	PtrMemberAccess	c -> b		683932	1					
ANR	684028	Identifier	c		683932	0					
ANR	684029	Identifier	b		683932	1					
ANR	684030	CompoundStatement		16:12:244:244	683932	1					
ANR	684031	GotoStatement	goto beach ;	238:2:4763:4773	683932	0	True				
ANR	684032	Identifier	beach		683932	0					
ANR	684033	ExpressionStatement	c -> blen = malloc ( sizeof * c -> blen * h )	240:1:4779:4817	683932	11	True				
ANR	684034	AssignmentExpression	c -> blen = malloc ( sizeof * c -> blen * h )		683932	0		=			
ANR	684035	PtrMemberAccess	c -> blen		683932	0					
ANR	684036	Identifier	c		683932	0					
ANR	684037	Identifier	blen		683932	1					
ANR	684038	CallExpression	malloc ( sizeof * c -> blen * h )		683932	1					
ANR	684039	Callee	malloc		683932	0					
ANR	684040	Identifier	malloc		683932	0					
ANR	684041	ArgumentList	sizeof * c -> blen * h		683932	1					
ANR	684042	Argument	sizeof * c -> blen * h		683932	0					
ANR	684043	MultiplicativeExpression	sizeof * c -> blen * h		683932	0		*			
ANR	684044	SizeofExpression	sizeof * c -> blen		683932	0					
ANR	684045	Sizeof	sizeof		683932	0					
ANR	684046	UnaryOperationExpression	* c -> blen		683932	1					
ANR	684047	UnaryOperator	*		683932	0					
ANR	684048	PtrMemberAccess	c -> blen		683932	1					
ANR	684049	Identifier	c		683932	0					
ANR	684050	Identifier	blen		683932	1					
ANR	684051	Identifier	h		683932	1					
ANR	684052	IfStatement	if ( ! c -> blen )		683932	12					
ANR	684053	Condition	! c -> blen	241:5:4824:4831	683932	0	True				
ANR	684054	UnaryOperationExpression	! c -> blen		683932	0					
ANR	684055	UnaryOperator	!		683932	0					
ANR	684056	PtrMemberAccess	c -> blen		683932	1					
ANR	684057	Identifier	c		683932	0					
ANR	684058	Identifier	blen		683932	1					
ANR	684059	CompoundStatement		20:15:319:319	683932	1					
ANR	684060	GotoStatement	goto beach ;	242:2:4838:4848	683932	0	True				
ANR	684061	Identifier	beach		683932	0					
ANR	684062	ExpressionStatement	c -> bsize = malloc ( sizeof * c -> bsize * h )	244:1:4854:4894	683932	13	True				
ANR	684063	AssignmentExpression	c -> bsize = malloc ( sizeof * c -> bsize * h )		683932	0		=			
ANR	684064	PtrMemberAccess	c -> bsize		683932	0					
ANR	684065	Identifier	c		683932	0					
ANR	684066	Identifier	bsize		683932	1					
ANR	684067	CallExpression	malloc ( sizeof * c -> bsize * h )		683932	1					
ANR	684068	Callee	malloc		683932	0					
ANR	684069	Identifier	malloc		683932	0					
ANR	684070	ArgumentList	sizeof * c -> bsize * h		683932	1					
ANR	684071	Argument	sizeof * c -> bsize * h		683932	0					
ANR	684072	MultiplicativeExpression	sizeof * c -> bsize * h		683932	0		*			
ANR	684073	SizeofExpression	sizeof * c -> bsize		683932	0					
ANR	684074	Sizeof	sizeof		683932	0					
ANR	684075	UnaryOperationExpression	* c -> bsize		683932	1					
ANR	684076	UnaryOperator	*		683932	0					
ANR	684077	PtrMemberAccess	c -> bsize		683932	1					
ANR	684078	Identifier	c		683932	0					
ANR	684079	Identifier	bsize		683932	1					
ANR	684080	Identifier	h		683932	1					
ANR	684081	IfStatement	if ( ! c -> bsize )		683932	14					
ANR	684082	Condition	! c -> bsize	245:5:4901:4909	683932	0	True				
ANR	684083	UnaryOperationExpression	! c -> bsize		683932	0					
ANR	684084	UnaryOperator	!		683932	0					
ANR	684085	PtrMemberAccess	c -> bsize		683932	1					
ANR	684086	Identifier	c		683932	0					
ANR	684087	Identifier	bsize		683932	1					
ANR	684088	CompoundStatement		24:16:397:397	683932	1					
ANR	684089	GotoStatement	goto beach ;	246:2:4916:4926	683932	0	True				
ANR	684090	Identifier	beach		683932	0					
ANR	684091	ForStatement	for ( i = 0 ; i < h ; i ++ )		683932	15					
ANR	684092	ForInit	i = 0 ;	248:6:4937:4942	683932	0	True				
ANR	684093	AssignmentExpression	i = 0		683932	0		=			
ANR	684094	Identifier	i		683932	0					
ANR	684095	PrimaryExpression	0		683932	1					
ANR	684096	Condition	i < h	248:13:4944:4948	683932	1	True				
ANR	684097	RelationalExpression	i < h		683932	0		<			
ANR	684098	Identifier	i		683932	0					
ANR	684099	Identifier	h		683932	1					
ANR	684100	PostIncDecOperationExpression	i ++	248:20:4951:4953	683932	2	True				
ANR	684101	Identifier	i		683932	0					
ANR	684102	IncDec	++		683932	1					
ANR	684103	CompoundStatement		27:25:441:441	683932	3					
ANR	684104	ExpressionStatement	c -> b [ i ] = malloc ( w + 1 )	249:2:4960:4984	683932	0	True				
ANR	684105	AssignmentExpression	c -> b [ i ] = malloc ( w + 1 )		683932	0		=			
ANR	684106	ArrayIndexing	c -> b [ i ]		683932	0					
ANR	684107	PtrMemberAccess	c -> b		683932	0					
ANR	684108	Identifier	c		683932	0					
ANR	684109	Identifier	b		683932	1					
ANR	684110	Identifier	i		683932	1					
ANR	684111	CallExpression	malloc ( w + 1 )		683932	1					
ANR	684112	Callee	malloc		683932	0					
ANR	684113	Identifier	malloc		683932	0					
ANR	684114	ArgumentList	w + 1		683932	1					
ANR	684115	Argument	w + 1		683932	0					
ANR	684116	AdditiveExpression	w + 1		683932	0		+			
ANR	684117	Identifier	w		683932	0					
ANR	684118	PrimaryExpression	1		683932	1					
ANR	684119	ExpressionStatement	c -> blen [ i ] = w	250:2:4988:5002	683932	1	True				
ANR	684120	AssignmentExpression	c -> blen [ i ] = w		683932	0		=			
ANR	684121	ArrayIndexing	c -> blen [ i ]		683932	0					
ANR	684122	PtrMemberAccess	c -> blen		683932	0					
ANR	684123	Identifier	c		683932	0					
ANR	684124	Identifier	blen		683932	1					
ANR	684125	Identifier	i		683932	1					
ANR	684126	Identifier	w		683932	1					
ANR	684127	ExpressionStatement	c -> bsize [ i ] = w + 1	251:2:5006:5025	683932	2	True				
ANR	684128	AssignmentExpression	c -> bsize [ i ] = w + 1		683932	0		=			
ANR	684129	ArrayIndexing	c -> bsize [ i ]		683932	0					
ANR	684130	PtrMemberAccess	c -> bsize		683932	0					
ANR	684131	Identifier	c		683932	0					
ANR	684132	Identifier	bsize		683932	1					
ANR	684133	Identifier	i		683932	1					
ANR	684134	AdditiveExpression	w + 1		683932	1		+			
ANR	684135	Identifier	w		683932	0					
ANR	684136	PrimaryExpression	1		683932	1					
ANR	684137	IfStatement	if ( ! c -> b [ i ] )		683932	3					
ANR	684138	Condition	! c -> b [ i ]	252:6:5033:5040	683932	0	True				
ANR	684139	UnaryOperationExpression	! c -> b [ i ]		683932	0					
ANR	684140	UnaryOperator	!		683932	0					
ANR	684141	ArrayIndexing	c -> b [ i ]		683932	1					
ANR	684142	PtrMemberAccess	c -> b		683932	0					
ANR	684143	Identifier	c		683932	0					
ANR	684144	Identifier	b		683932	1					
ANR	684145	Identifier	i		683932	1					
ANR	684146	CompoundStatement		31:16:528:528	683932	1					
ANR	684147	GotoStatement	goto beach ;	253:3:5048:5058	683932	0	True				
ANR	684148	Identifier	beach		683932	0					
ANR	684149	ExpressionStatement	c -> w = w	256:1:5068:5076	683932	16	True				
ANR	684150	AssignmentExpression	c -> w = w		683932	0		=			
ANR	684151	PtrMemberAccess	c -> w		683932	0					
ANR	684152	Identifier	c		683932	0					
ANR	684153	Identifier	w		683932	1					
ANR	684154	Identifier	w		683932	1					
ANR	684155	ExpressionStatement	c -> h = h	257:1:5079:5087	683932	17	True				
ANR	684156	AssignmentExpression	c -> h = h		683932	0		=			
ANR	684157	PtrMemberAccess	c -> h		683932	0					
ANR	684158	Identifier	c		683932	0					
ANR	684159	Identifier	h		683932	1					
ANR	684160	Identifier	h		683932	1					
ANR	684161	ExpressionStatement	c -> x = c -> y = 0	258:1:5090:5105	683932	18	True				
ANR	684162	AssignmentExpression	c -> x = c -> y = 0		683932	0		=			
ANR	684163	PtrMemberAccess	c -> x		683932	0					
ANR	684164	Identifier	c		683932	0					
ANR	684165	Identifier	x		683932	1					
ANR	684166	AssignmentExpression	c -> y = 0		683932	1		=			
ANR	684167	PtrMemberAccess	c -> y		683932	0					
ANR	684168	Identifier	c		683932	0					
ANR	684169	Identifier	y		683932	1					
ANR	684170	PrimaryExpression	0		683932	1					
ANR	684171	ExpressionStatement	"c -> attrs = ht_up_new ( ( HtUPDupValue ) strdup , attribute_free_kv , NULL )"	259:1:5108:5176	683932	19	True				
ANR	684172	AssignmentExpression	"c -> attrs = ht_up_new ( ( HtUPDupValue ) strdup , attribute_free_kv , NULL )"		683932	0		=			
ANR	684173	PtrMemberAccess	c -> attrs		683932	0					
ANR	684174	Identifier	c		683932	0					
ANR	684175	Identifier	attrs		683932	1					
ANR	684176	CallExpression	"ht_up_new ( ( HtUPDupValue ) strdup , attribute_free_kv , NULL )"		683932	1					
ANR	684177	Callee	ht_up_new		683932	0					
ANR	684178	Identifier	ht_up_new		683932	0					
ANR	684179	ArgumentList	( HtUPDupValue ) strdup		683932	1					
ANR	684180	Argument	( HtUPDupValue ) strdup		683932	0					
ANR	684181	CastExpression	( HtUPDupValue ) strdup		683932	0					
ANR	684182	CastTarget	HtUPDupValue		683932	0					
ANR	684183	Identifier	strdup		683932	1					
ANR	684184	Argument	attribute_free_kv		683932	1					
ANR	684185	Identifier	attribute_free_kv		683932	0					
ANR	684186	Argument	NULL		683932	2					
ANR	684187	Identifier	NULL		683932	0					
ANR	684188	IfStatement	if ( ! c -> attrs )		683932	20					
ANR	684189	Condition	! c -> attrs	260:5:5183:5191	683932	0	True				
ANR	684190	UnaryOperationExpression	! c -> attrs		683932	0					
ANR	684191	UnaryOperator	!		683932	0					
ANR	684192	PtrMemberAccess	c -> attrs		683932	1					
ANR	684193	Identifier	c		683932	0					
ANR	684194	Identifier	attrs		683932	1					
ANR	684195	CompoundStatement		39:16:679:679	683932	1					
ANR	684196	GotoStatement	goto beach ;	261:2:5198:5208	683932	0	True				
ANR	684197	Identifier	beach		683932	0					
ANR	684198	ExpressionStatement	c -> attr = Color_RESET	263:1:5214:5235	683932	21	True				
ANR	684199	AssignmentExpression	c -> attr = Color_RESET		683932	0		=			
ANR	684200	PtrMemberAccess	c -> attr		683932	0					
ANR	684201	Identifier	c		683932	0					
ANR	684202	Identifier	attr		683932	1					
ANR	684203	Identifier	Color_RESET		683932	1					
ANR	684204	ExpressionStatement	r_cons_canvas_clear ( c )	264:1:5238:5261	683932	22	True				
ANR	684205	CallExpression	r_cons_canvas_clear ( c )		683932	0					
ANR	684206	Callee	r_cons_canvas_clear		683932	0					
ANR	684207	Identifier	r_cons_canvas_clear		683932	0					
ANR	684208	ArgumentList	c		683932	1					
ANR	684209	Argument	c		683932	0					
ANR	684210	Identifier	c		683932	0					
ANR	684211	ReturnStatement	return c ;	265:1:5264:5272	683932	23	True				
ANR	684212	Identifier	c		683932	0					
ANR	684213	Label	beach :	266:0:5274:5279	683932	24	True				
ANR	684214	Identifier	beach		683932	0					
ANR	684215	CompoundStatement		46:1:769:774	683932	25					
ANR	684216	IdentifierDeclStatement	int j ;	267:1:5284:5289	683932	0	True				
ANR	684217	IdentifierDecl	j		683932	0					
ANR	684218	IdentifierDeclType	int		683932	0					
ANR	684219	Identifier	j		683932	1					
ANR	684220	ForStatement	for ( j = 0 ; j < i ; j ++ )		683932	1					
ANR	684221	ForInit	j = 0 ;	268:6:5297:5302	683932	0	True				
ANR	684222	AssignmentExpression	j = 0		683932	0		=			
ANR	684223	Identifier	j		683932	0					
ANR	684224	PrimaryExpression	0		683932	1					
ANR	684225	Condition	j < i	268:13:5304:5308	683932	1	True				
ANR	684226	RelationalExpression	j < i		683932	0		<			
ANR	684227	Identifier	j		683932	0					
ANR	684228	Identifier	i		683932	1					
ANR	684229	PostIncDecOperationExpression	j ++	268:20:5311:5313	683932	2	True				
ANR	684230	Identifier	j		683932	0					
ANR	684231	IncDec	++		683932	1					
ANR	684232	CompoundStatement		47:25:801:801	683932	3					
ANR	684233	ExpressionStatement	free ( c -> b [ j ] )	269:2:5320:5334	683932	0	True				
ANR	684234	CallExpression	free ( c -> b [ j ] )		683932	0					
ANR	684235	Callee	free		683932	0					
ANR	684236	Identifier	free		683932	0					
ANR	684237	ArgumentList	c -> b [ j ]		683932	1					
ANR	684238	Argument	c -> b [ j ]		683932	0					
ANR	684239	ArrayIndexing	c -> b [ j ]		683932	0					
ANR	684240	PtrMemberAccess	c -> b		683932	0					
ANR	684241	Identifier	c		683932	0					
ANR	684242	Identifier	b		683932	1					
ANR	684243	Identifier	j		683932	1					
ANR	684244	ExpressionStatement	free ( c -> bsize )	271:1:5340:5355	683932	2	True				
ANR	684245	CallExpression	free ( c -> bsize )		683932	0					
ANR	684246	Callee	free		683932	0					
ANR	684247	Identifier	free		683932	0					
ANR	684248	ArgumentList	c -> bsize		683932	1					
ANR	684249	Argument	c -> bsize		683932	0					
ANR	684250	PtrMemberAccess	c -> bsize		683932	0					
ANR	684251	Identifier	c		683932	0					
ANR	684252	Identifier	bsize		683932	1					
ANR	684253	ExpressionStatement	free ( c -> blen )	272:1:5358:5372	683932	3	True				
ANR	684254	CallExpression	free ( c -> blen )		683932	0					
ANR	684255	Callee	free		683932	0					
ANR	684256	Identifier	free		683932	0					
ANR	684257	ArgumentList	c -> blen		683932	1					
ANR	684258	Argument	c -> blen		683932	0					
ANR	684259	PtrMemberAccess	c -> blen		683932	0					
ANR	684260	Identifier	c		683932	0					
ANR	684261	Identifier	blen		683932	1					
ANR	684262	ExpressionStatement	free ( c -> b )	273:1:5375:5386	683932	4	True				
ANR	684263	CallExpression	free ( c -> b )		683932	0					
ANR	684264	Callee	free		683932	0					
ANR	684265	Identifier	free		683932	0					
ANR	684266	ArgumentList	c -> b		683932	1					
ANR	684267	Argument	c -> b		683932	0					
ANR	684268	PtrMemberAccess	c -> b		683932	0					
ANR	684269	Identifier	c		683932	0					
ANR	684270	Identifier	b		683932	1					
ANR	684271	ExpressionStatement	free ( c )	274:1:5389:5397	683932	5	True				
ANR	684272	CallExpression	free ( c )		683932	0					
ANR	684273	Callee	free		683932	0					
ANR	684274	Identifier	free		683932	0					
ANR	684275	ArgumentList	c		683932	1					
ANR	684276	Argument	c		683932	0					
ANR	684277	Identifier	c		683932	0					
ANR	684278	ReturnStatement	return NULL ;	275:1:5400:5411	683932	6	True				
ANR	684279	Identifier	NULL		683932	0					
ANR	684280	ReturnType	R_API RConsCanvas *		683932	1					
ANR	684281	Identifier	r_cons_canvas_new		683932	2					
ANR	684282	ParameterList	"int w , int h"		683932	3					
ANR	684283	Parameter	int w	222:37:4500:4504	683932	0	True				
ANR	684284	ParameterType	int		683932	0					
ANR	684285	Identifier	w		683932	1					
ANR	684286	Parameter	int h	222:44:4507:4511	683932	1	True				
ANR	684287	ParameterType	int		683932	0					
ANR	684288	Identifier	h		683932	1					
ANR	684289	CFGEntryNode	ENTRY		683932		True				
ANR	684290	CFGExitNode	EXIT		683932		True				
ANR	684291	Symbol	c -> sy		683932						
ANR	684292	Symbol	* c -> b		683932						
ANR	684293	Symbol	Color_RESET		683932						
ANR	684294	Symbol	* c -> blen		683932						
ANR	684295	Symbol	ht_up_new		683932						
ANR	684296	Symbol	c -> sx		683932						
ANR	684297	Symbol	c -> bsize		683932						
ANR	684298	Symbol	c -> attr		683932						
ANR	684299	Symbol	c -> blen		683932						
ANR	684300	Symbol	c -> b		683932						
ANR	684301	Symbol	c -> h		683932						
ANR	684302	Symbol	c -> color		683932						
ANR	684303	Symbol	malloc		683932						
ANR	684304	Symbol	NULL		683932						
ANR	684305	Symbol	c		683932						
ANR	684306	Symbol	c -> attrs		683932						
ANR	684307	Symbol	h		683932						
ANR	684308	Symbol	RConsCanvas		683932						
ANR	684309	Symbol	* * c		683932						
ANR	684310	Symbol	i		683932						
ANR	684311	Symbol	j		683932						
ANR	684312	Symbol	* c		683932						
ANR	684313	Symbol	c -> w		683932						
ANR	684314	Symbol	c -> x		683932						
ANR	684315	Symbol	c -> y		683932						
ANR	684316	Symbol	R_NEW0		683932						
ANR	684317	Symbol	* i		683932						
ANR	684318	Symbol	* j		683932						
ANR	684319	Symbol	w		683932						
ANR	684320	Symbol	attribute_free_kv		683932						
ANR	684321	Symbol	* c -> bsize		683932						
ANR	684322	Symbol	strdup		683932						
ANR	684323	Function	r_cons_canvas_write	279:0:5425:7103							
ANR	684324	FunctionDef	"r_cons_canvas_write (RConsCanvas * c , const char * s)"		684323	0					
ANR	684325	CompoundStatement		279:62:5487:7103	684323	0					
ANR	684326	IfStatement	"if ( ! c || ! s || ! * s || ! R_BETWEEN ( 0 , c -> y , c -> h - 1 ) || ! R_BETWEEN ( 0 , c -> x , c -> w - 1 ) )"		684323	0					
ANR	684327	Condition	"! c || ! s || ! * s || ! R_BETWEEN ( 0 , c -> y , c -> h - 1 ) || ! R_BETWEEN ( 0 , c -> x , c -> w - 1 )"	280:5:5494:5576	684323	0	True				
ANR	684328	OrExpression	"! c || ! s || ! * s || ! R_BETWEEN ( 0 , c -> y , c -> h - 1 ) || ! R_BETWEEN ( 0 , c -> x , c -> w - 1 )"		684323	0		||			
ANR	684329	UnaryOperationExpression	! c		684323	0					
ANR	684330	UnaryOperator	!		684323	0					
ANR	684331	Identifier	c		684323	1					
ANR	684332	OrExpression	"! s || ! * s || ! R_BETWEEN ( 0 , c -> y , c -> h - 1 ) || ! R_BETWEEN ( 0 , c -> x , c -> w - 1 )"		684323	1		||			
ANR	684333	UnaryOperationExpression	! s		684323	0					
ANR	684334	UnaryOperator	!		684323	0					
ANR	684335	Identifier	s		684323	1					
ANR	684336	OrExpression	"! * s || ! R_BETWEEN ( 0 , c -> y , c -> h - 1 ) || ! R_BETWEEN ( 0 , c -> x , c -> w - 1 )"		684323	1		||			
ANR	684337	UnaryOperationExpression	! * s		684323	0					
ANR	684338	UnaryOperator	!		684323	0					
ANR	684339	UnaryOperationExpression	* s		684323	1					
ANR	684340	UnaryOperator	*		684323	0					
ANR	684341	Identifier	s		684323	1					
ANR	684342	OrExpression	"! R_BETWEEN ( 0 , c -> y , c -> h - 1 ) || ! R_BETWEEN ( 0 , c -> x , c -> w - 1 )"		684323	1		||			
ANR	684343	UnaryOperationExpression	"! R_BETWEEN ( 0 , c -> y , c -> h - 1 )"		684323	0					
ANR	684344	UnaryOperator	!		684323	0					
ANR	684345	CallExpression	"R_BETWEEN ( 0 , c -> y , c -> h - 1 )"		684323	1					
ANR	684346	Callee	R_BETWEEN		684323	0					
ANR	684347	Identifier	R_BETWEEN		684323	0					
ANR	684348	ArgumentList	0		684323	1					
ANR	684349	Argument	0		684323	0					
ANR	684350	PrimaryExpression	0		684323	0					
ANR	684351	Argument	c -> y		684323	1					
ANR	684352	PtrMemberAccess	c -> y		684323	0					
ANR	684353	Identifier	c		684323	0					
ANR	684354	Identifier	y		684323	1					
ANR	684355	Argument	c -> h - 1		684323	2					
ANR	684356	AdditiveExpression	c -> h - 1		684323	0		-			
ANR	684357	PtrMemberAccess	c -> h		684323	0					
ANR	684358	Identifier	c		684323	0					
ANR	684359	Identifier	h		684323	1					
ANR	684360	PrimaryExpression	1		684323	1					
ANR	684361	UnaryOperationExpression	"! R_BETWEEN ( 0 , c -> x , c -> w - 1 )"		684323	1					
ANR	684362	UnaryOperator	!		684323	0					
ANR	684363	CallExpression	"R_BETWEEN ( 0 , c -> x , c -> w - 1 )"		684323	1					
ANR	684364	Callee	R_BETWEEN		684323	0					
ANR	684365	Identifier	R_BETWEEN		684323	0					
ANR	684366	ArgumentList	0		684323	1					
ANR	684367	Argument	0		684323	0					
ANR	684368	PrimaryExpression	0		684323	0					
ANR	684369	Argument	c -> x		684323	1					
ANR	684370	PtrMemberAccess	c -> x		684323	0					
ANR	684371	Identifier	c		684323	0					
ANR	684372	Identifier	x		684323	1					
ANR	684373	Argument	c -> w - 1		684323	2					
ANR	684374	AdditiveExpression	c -> w - 1		684323	0		-			
ANR	684375	PtrMemberAccess	c -> w		684323	0					
ANR	684376	Identifier	c		684323	0					
ANR	684377	Identifier	w		684323	1					
ANR	684378	PrimaryExpression	1		684323	1					
ANR	684379	CompoundStatement		2:90:91:91	684323	1					
ANR	684380	ReturnStatement	return ;	281:2:5583:5589	684323	0	True				
ANR	684381	IdentifierDeclStatement	char ch ;	284:1:5596:5603	684323	1	True				
ANR	684382	IdentifierDecl	ch		684323	0					
ANR	684383	IdentifierDeclType	char		684323	0					
ANR	684384	Identifier	ch		684323	1					
ANR	684385	IdentifierDeclStatement	"int left , slen , attr_len , piece_len ;"	285:1:5606:5641	684323	2	True				
ANR	684386	IdentifierDecl	left		684323	0					
ANR	684387	IdentifierDeclType	int		684323	0					
ANR	684388	Identifier	left		684323	1					
ANR	684389	IdentifierDecl	slen		684323	1					
ANR	684390	IdentifierDeclType	int		684323	0					
ANR	684391	Identifier	slen		684323	1					
ANR	684392	IdentifierDecl	attr_len		684323	2					
ANR	684393	IdentifierDeclType	int		684323	0					
ANR	684394	Identifier	attr_len		684323	1					
ANR	684395	IdentifierDecl	piece_len		684323	3					
ANR	684396	IdentifierDeclType	int		684323	0					
ANR	684397	Identifier	piece_len		684323	1					
ANR	684398	IdentifierDeclStatement	"int orig_x = c -> x , attr_x = c -> x ;"	286:1:5644:5676	684323	3	True				
ANR	684399	IdentifierDecl	orig_x = c -> x		684323	0					
ANR	684400	IdentifierDeclType	int		684323	0					
ANR	684401	Identifier	orig_x		684323	1					
ANR	684402	AssignmentExpression	orig_x = c -> x		684323	2		=			
ANR	684403	Identifier	orig_x		684323	0					
ANR	684404	PtrMemberAccess	c -> x		684323	1					
ANR	684405	Identifier	c		684323	0					
ANR	684406	Identifier	x		684323	1					
ANR	684407	IdentifierDecl	attr_x = c -> x		684323	1					
ANR	684408	IdentifierDeclType	int		684323	0					
ANR	684409	Identifier	attr_x		684323	1					
ANR	684410	AssignmentExpression	attr_x = c -> x		684323	2		=			
ANR	684411	Identifier	attr_x		684323	0					
ANR	684412	PtrMemberAccess	c -> x		684323	1					
ANR	684413	Identifier	c		684323	0					
ANR	684414	Identifier	x		684323	1					
ANR	684415	ExpressionStatement	"c -> x = __getUtf8Length2 ( c -> b [ c -> y ] , c -> x , c -> blen [ c -> y ] )"	288:1:5680:5737	684323	4	True				
ANR	684416	AssignmentExpression	"c -> x = __getUtf8Length2 ( c -> b [ c -> y ] , c -> x , c -> blen [ c -> y ] )"		684323	0		=			
ANR	684417	PtrMemberAccess	c -> x		684323	0					
ANR	684418	Identifier	c		684323	0					
ANR	684419	Identifier	x		684323	1					
ANR	684420	CallExpression	"__getUtf8Length2 ( c -> b [ c -> y ] , c -> x , c -> blen [ c -> y ] )"		684323	1					
ANR	684421	Callee	__getUtf8Length2		684323	0					
ANR	684422	Identifier	__getUtf8Length2		684323	0					
ANR	684423	ArgumentList	c -> b [ c -> y ]		684323	1					
ANR	684424	Argument	c -> b [ c -> y ]		684323	0					
ANR	684425	ArrayIndexing	c -> b [ c -> y ]		684323	0					
ANR	684426	PtrMemberAccess	c -> b		684323	0					
ANR	684427	Identifier	c		684323	0					
ANR	684428	Identifier	b		684323	1					
ANR	684429	PtrMemberAccess	c -> y		684323	1					
ANR	684430	Identifier	c		684323	0					
ANR	684431	Identifier	y		684323	1					
ANR	684432	Argument	c -> x		684323	1					
ANR	684433	PtrMemberAccess	c -> x		684323	0					
ANR	684434	Identifier	c		684323	0					
ANR	684435	Identifier	x		684323	1					
ANR	684436	Argument	c -> blen [ c -> y ]		684323	2					
ANR	684437	ArrayIndexing	c -> blen [ c -> y ]		684323	0					
ANR	684438	PtrMemberAccess	c -> blen		684323	0					
ANR	684439	Identifier	c		684323	0					
ANR	684440	Identifier	blen		684323	1					
ANR	684441	PtrMemberAccess	c -> y		684323	1					
ANR	684442	Identifier	c		684323	0					
ANR	684443	Identifier	y		684323	1					
ANR	684444	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	292:1:5875:5905	684323	5	True				
ANR	684445	CallExpression	"r_cons_break_push ( NULL , NULL )"		684323	0					
ANR	684446	Callee	r_cons_break_push		684323	0					
ANR	684447	Identifier	r_cons_break_push		684323	0					
ANR	684448	ArgumentList	NULL		684323	1					
ANR	684449	Argument	NULL		684323	0					
ANR	684450	Identifier	NULL		684323	0					
ANR	684451	Argument	NULL		684323	1					
ANR	684452	Identifier	NULL		684323	0					
ANR	684453	DoStatement	do		684323	6					
ANR	684454	CompoundStatement		33:2:839:884	684323	0					
ANR	684455	IdentifierDeclStatement	"const char * s_part = set_attr ( c , s ) ;"	294:2:5915:5951	684323	0	True				
ANR	684456	IdentifierDecl	"* s_part = set_attr ( c , s )"		684323	0					
ANR	684457	IdentifierDeclType	const char *		684323	0					
ANR	684458	Identifier	s_part		684323	1					
ANR	684459	AssignmentExpression	"* s_part = set_attr ( c , s )"		684323	2		=			
ANR	684460	Identifier	s_part		684323	0					
ANR	684461	CallExpression	"set_attr ( c , s )"		684323	1					
ANR	684462	Callee	set_attr		684323	0					
ANR	684463	Identifier	set_attr		684323	0					
ANR	684464	ArgumentList	c		684323	1					
ANR	684465	Argument	c		684323	0					
ANR	684466	Identifier	c		684323	0					
ANR	684467	Argument	s		684323	1					
ANR	684468	Identifier	s		684323	0					
ANR	684469	ExpressionStatement	ch = 0	295:2:5955:5961	684323	1	True				
ANR	684470	AssignmentExpression	ch = 0		684323	0		=			
ANR	684471	Identifier	ch		684323	0					
ANR	684472	PrimaryExpression	0		684323	1					
ANR	684473	ExpressionStatement	"piece_len = __getAnsiPiece ( s_part , & ch )"	296:2:5965:6005	684323	2	True				
ANR	684474	AssignmentExpression	"piece_len = __getAnsiPiece ( s_part , & ch )"		684323	0		=			
ANR	684475	Identifier	piece_len		684323	0					
ANR	684476	CallExpression	"__getAnsiPiece ( s_part , & ch )"		684323	1					
ANR	684477	Callee	__getAnsiPiece		684323	0					
ANR	684478	Identifier	__getAnsiPiece		684323	0					
ANR	684479	ArgumentList	s_part		684323	1					
ANR	684480	Argument	s_part		684323	0					
ANR	684481	Identifier	s_part		684323	0					
ANR	684482	Argument	& ch		684323	1					
ANR	684483	UnaryOperationExpression	& ch		684323	0					
ANR	684484	UnaryOperator	&		684323	0					
ANR	684485	Identifier	ch		684323	1					
ANR	684486	IfStatement	if ( piece_len == 0 && ch == '\\0' && s_part == s )		684323	3					
ANR	684487	Condition	piece_len == 0 && ch == '\\0' && s_part == s	297:6:6013:6055	684323	0	True				
ANR	684488	AndExpression	piece_len == 0 && ch == '\\0' && s_part == s		684323	0		&&			
ANR	684489	EqualityExpression	piece_len == 0		684323	0		==			
ANR	684490	Identifier	piece_len		684323	0					
ANR	684491	PrimaryExpression	0		684323	1					
ANR	684492	AndExpression	ch == '\\0' && s_part == s		684323	1		&&			
ANR	684493	EqualityExpression	ch == '\\0'		684323	0		==			
ANR	684494	Identifier	ch		684323	0					
ANR	684495	PrimaryExpression	'\\0'		684323	1					
ANR	684496	EqualityExpression	s_part == s		684323	1		==			
ANR	684497	Identifier	s_part		684323	0					
ANR	684498	Identifier	s		684323	1					
ANR	684499	CompoundStatement		19:51:570:570	684323	1					
ANR	684500	BreakStatement	break ;	298:3:6063:6068	684323	0	True				
ANR	684501	ExpressionStatement	left = c -> blen [ c -> y ] - c -> x	300:2:6076:6103	684323	4	True				
ANR	684502	AssignmentExpression	left = c -> blen [ c -> y ] - c -> x		684323	0		=			
ANR	684503	Identifier	left		684323	0					
ANR	684504	AdditiveExpression	c -> blen [ c -> y ] - c -> x		684323	1		-			
ANR	684505	ArrayIndexing	c -> blen [ c -> y ]		684323	0					
ANR	684506	PtrMemberAccess	c -> blen		684323	0					
ANR	684507	Identifier	c		684323	0					
ANR	684508	Identifier	blen		684323	1					
ANR	684509	PtrMemberAccess	c -> y		684323	1					
ANR	684510	Identifier	c		684323	0					
ANR	684511	Identifier	y		684323	1					
ANR	684512	PtrMemberAccess	c -> x		684323	1					
ANR	684513	Identifier	c		684323	0					
ANR	684514	Identifier	x		684323	1					
ANR	684515	ExpressionStatement	slen = piece_len	301:2:6107:6123	684323	5	True				
ANR	684516	AssignmentExpression	slen = piece_len		684323	0		=			
ANR	684517	Identifier	slen		684323	0					
ANR	684518	Identifier	piece_len		684323	1					
ANR	684519	IfStatement	if ( piece_len > left )		684323	6					
ANR	684520	Condition	piece_len > left	303:6:6132:6147	684323	0	True				
ANR	684521	RelationalExpression	piece_len > left		684323	0		>			
ANR	684522	Identifier	piece_len		684323	0					
ANR	684523	Identifier	left		684323	1					
ANR	684524	CompoundStatement		26:3:667:723	684323	1					
ANR	684525	IdentifierDeclStatement	"int utf8_piece_len = __getUtf8Length ( s_part , piece_len ) ;"	304:3:6155:6211	684323	0	True				
ANR	684526	IdentifierDecl	"utf8_piece_len = __getUtf8Length ( s_part , piece_len )"		684323	0					
ANR	684527	IdentifierDeclType	int		684323	0					
ANR	684528	Identifier	utf8_piece_len		684323	1					
ANR	684529	AssignmentExpression	"utf8_piece_len = __getUtf8Length ( s_part , piece_len )"		684323	2		=			
ANR	684530	Identifier	utf8_piece_len		684323	0					
ANR	684531	CallExpression	"__getUtf8Length ( s_part , piece_len )"		684323	1					
ANR	684532	Callee	__getUtf8Length		684323	0					
ANR	684533	Identifier	__getUtf8Length		684323	0					
ANR	684534	ArgumentList	s_part		684323	1					
ANR	684535	Argument	s_part		684323	0					
ANR	684536	Identifier	s_part		684323	0					
ANR	684537	Argument	piece_len		684323	1					
ANR	684538	Identifier	piece_len		684323	0					
ANR	684539	IfStatement	if ( utf8_piece_len > c -> w - attr_x )		684323	1					
ANR	684540	Condition	utf8_piece_len > c -> w - attr_x	305:7:6220:6249	684323	0	True				
ANR	684541	RelationalExpression	utf8_piece_len > c -> w - attr_x		684323	0		>			
ANR	684542	Identifier	utf8_piece_len		684323	0					
ANR	684543	AdditiveExpression	c -> w - attr_x		684323	1		-			
ANR	684544	PtrMemberAccess	c -> w		684323	0					
ANR	684545	Identifier	c		684323	0					
ANR	684546	Identifier	w		684323	1					
ANR	684547	Identifier	attr_x		684323	1					
ANR	684548	CompoundStatement		27:39:764:764	684323	1					
ANR	684549	ExpressionStatement	slen = left	306:4:6258:6269	684323	0	True				
ANR	684550	AssignmentExpression	slen = left		684323	0		=			
ANR	684551	Identifier	slen		684323	0					
ANR	684552	Identifier	left		684323	1					
ANR	684553	IdentifierDeclStatement	"int real_len = r_str_nlen ( s_part , slen ) ;"	310:2:6283:6323	684323	7	True				
ANR	684554	IdentifierDecl	"real_len = r_str_nlen ( s_part , slen )"		684323	0					
ANR	684555	IdentifierDeclType	int		684323	0					
ANR	684556	Identifier	real_len		684323	1					
ANR	684557	AssignmentExpression	"real_len = r_str_nlen ( s_part , slen )"		684323	2		=			
ANR	684558	Identifier	real_len		684323	0					
ANR	684559	CallExpression	"r_str_nlen ( s_part , slen )"		684323	1					
ANR	684560	Callee	r_str_nlen		684323	0					
ANR	684561	Identifier	r_str_nlen		684323	0					
ANR	684562	ArgumentList	s_part		684323	1					
ANR	684563	Argument	s_part		684323	0					
ANR	684564	Identifier	s_part		684323	0					
ANR	684565	Argument	slen		684323	1					
ANR	684566	Identifier	slen		684323	0					
ANR	684567	IdentifierDeclStatement	"int utf8_len = __getUtf8Length ( s_part , slen ) ;"	311:2:6327:6372	684323	8	True				
ANR	684568	IdentifierDecl	"utf8_len = __getUtf8Length ( s_part , slen )"		684323	0					
ANR	684569	IdentifierDeclType	int		684323	0					
ANR	684570	Identifier	utf8_len		684323	1					
ANR	684571	AssignmentExpression	"utf8_len = __getUtf8Length ( s_part , slen )"		684323	2		=			
ANR	684572	Identifier	utf8_len		684323	0					
ANR	684573	CallExpression	"__getUtf8Length ( s_part , slen )"		684323	1					
ANR	684574	Callee	__getUtf8Length		684323	0					
ANR	684575	Identifier	__getUtf8Length		684323	0					
ANR	684576	ArgumentList	s_part		684323	1					
ANR	684577	Argument	s_part		684323	0					
ANR	684578	Identifier	s_part		684323	0					
ANR	684579	Argument	slen		684323	1					
ANR	684580	Identifier	slen		684323	0					
ANR	684581	IfStatement	"if ( ! __expandLine ( c , real_len , utf8_len ) )"		684323	9					
ANR	684582	Condition	"! __expandLine ( c , real_len , utf8_len )"	313:6:6381:6417	684323	0	True				
ANR	684583	UnaryOperationExpression	"! __expandLine ( c , real_len , utf8_len )"		684323	0					
ANR	684584	UnaryOperator	!		684323	0					
ANR	684585	CallExpression	"__expandLine ( c , real_len , utf8_len )"		684323	1					
ANR	684586	Callee	__expandLine		684323	0					
ANR	684587	Identifier	__expandLine		684323	0					
ANR	684588	ArgumentList	c		684323	1					
ANR	684589	Argument	c		684323	0					
ANR	684590	Identifier	c		684323	0					
ANR	684591	Argument	real_len		684323	1					
ANR	684592	Identifier	real_len		684323	0					
ANR	684593	Argument	utf8_len		684323	2					
ANR	684594	Identifier	utf8_len		684323	0					
ANR	684595	CompoundStatement		35:45:932:932	684323	1					
ANR	684596	BreakStatement	break ;	314:3:6425:6430	684323	0	True				
ANR	684597	IfStatement	"if ( G ( c -> x - c -> sx , c -> y - c -> sy ) )"		684323	10					
ANR	684598	Condition	"G ( c -> x - c -> sx , c -> y - c -> sy )"	317:6:6443:6472	684323	0	True				
ANR	684599	CallExpression	"G ( c -> x - c -> sx , c -> y - c -> sy )"		684323	0					
ANR	684600	Callee	G		684323	0					
ANR	684601	Identifier	G		684323	0					
ANR	684602	ArgumentList	c -> x - c -> sx		684323	1					
ANR	684603	Argument	c -> x - c -> sx		684323	0					
ANR	684604	AdditiveExpression	c -> x - c -> sx		684323	0		-			
ANR	684605	PtrMemberAccess	c -> x		684323	0					
ANR	684606	Identifier	c		684323	0					
ANR	684607	Identifier	x		684323	1					
ANR	684608	PtrMemberAccess	c -> sx		684323	1					
ANR	684609	Identifier	c		684323	0					
ANR	684610	Identifier	sx		684323	1					
ANR	684611	Argument	c -> y - c -> sy		684323	1					
ANR	684612	AdditiveExpression	c -> y - c -> sy		684323	0		-			
ANR	684613	PtrMemberAccess	c -> y		684323	0					
ANR	684614	Identifier	c		684323	0					
ANR	684615	Identifier	y		684323	1					
ANR	684616	PtrMemberAccess	c -> sy		684323	1					
ANR	684617	Identifier	c		684323	0					
ANR	684618	Identifier	sy		684323	1					
ANR	684619	CompoundStatement		39:38:987:987	684323	1					
ANR	684620	ExpressionStatement	"memcpy ( c -> b [ c -> y ] + c -> x , s_part , slen )"	318:3:6480:6520	684323	0	True				
ANR	684621	CallExpression	"memcpy ( c -> b [ c -> y ] + c -> x , s_part , slen )"		684323	0					
ANR	684622	Callee	memcpy		684323	0					
ANR	684623	Identifier	memcpy		684323	0					
ANR	684624	ArgumentList	c -> b [ c -> y ] + c -> x		684323	1					
ANR	684625	Argument	c -> b [ c -> y ] + c -> x		684323	0					
ANR	684626	AdditiveExpression	c -> b [ c -> y ] + c -> x		684323	0		+			
ANR	684627	ArrayIndexing	c -> b [ c -> y ]		684323	0					
ANR	684628	PtrMemberAccess	c -> b		684323	0					
ANR	684629	Identifier	c		684323	0					
ANR	684630	Identifier	b		684323	1					
ANR	684631	PtrMemberAccess	c -> y		684323	1					
ANR	684632	Identifier	c		684323	0					
ANR	684633	Identifier	y		684323	1					
ANR	684634	PtrMemberAccess	c -> x		684323	1					
ANR	684635	Identifier	c		684323	0					
ANR	684636	Identifier	x		684323	1					
ANR	684637	Argument	s_part		684323	1					
ANR	684638	Identifier	s_part		684323	0					
ANR	684639	Argument	slen		684323	2					
ANR	684640	Identifier	slen		684323	0					
ANR	684641	ExpressionStatement	attr_len = slen <= 0 && s_part != s ? 1 : utf8_len	321:2:6529:6577	684323	11	True				
ANR	684642	AssignmentExpression	attr_len = slen <= 0 && s_part != s ? 1 : utf8_len		684323	0		=			
ANR	684643	Identifier	attr_len		684323	0					
ANR	684644	ConditionalExpression	slen <= 0 && s_part != s ? 1 : utf8_len		684323	1					
ANR	684645	Condition	slen <= 0 && s_part != s		684323	0					
ANR	684646	AndExpression	slen <= 0 && s_part != s		684323	0		&&			
ANR	684647	RelationalExpression	slen <= 0		684323	0		<=			
ANR	684648	Identifier	slen		684323	0					
ANR	684649	PrimaryExpression	0		684323	1					
ANR	684650	EqualityExpression	s_part != s		684323	1		!=			
ANR	684651	Identifier	s_part		684323	0					
ANR	684652	Identifier	s		684323	1					
ANR	684653	PrimaryExpression	1		684323	1					
ANR	684654	Identifier	utf8_len		684323	2					
ANR	684655	IfStatement	if ( attr_len > 0 && attr_x < c -> blen [ c -> y ] )		684323	12					
ANR	684656	Condition	attr_len > 0 && attr_x < c -> blen [ c -> y ]	322:6:6585:6622	684323	0	True				
ANR	684657	AndExpression	attr_len > 0 && attr_x < c -> blen [ c -> y ]		684323	0		&&			
ANR	684658	RelationalExpression	attr_len > 0		684323	0		>			
ANR	684659	Identifier	attr_len		684323	0					
ANR	684660	PrimaryExpression	0		684323	1					
ANR	684661	RelationalExpression	attr_x < c -> blen [ c -> y ]		684323	1		<			
ANR	684662	Identifier	attr_x		684323	0					
ANR	684663	ArrayIndexing	c -> blen [ c -> y ]		684323	1					
ANR	684664	PtrMemberAccess	c -> blen		684323	0					
ANR	684665	Identifier	c		684323	0					
ANR	684666	Identifier	blen		684323	1					
ANR	684667	PtrMemberAccess	c -> y		684323	1					
ANR	684668	Identifier	c		684323	0					
ANR	684669	Identifier	y		684323	1					
ANR	684670	CompoundStatement		44:46:1137:1137	684323	1					
ANR	684671	ExpressionStatement	"__stampAttribute ( c , c -> y * c -> w + attr_x , attr_len )"	323:3:6630:6680	684323	0	True				
ANR	684672	CallExpression	"__stampAttribute ( c , c -> y * c -> w + attr_x , attr_len )"		684323	0					
ANR	684673	Callee	__stampAttribute		684323	0					
ANR	684674	Identifier	__stampAttribute		684323	0					
ANR	684675	ArgumentList	c		684323	1					
ANR	684676	Argument	c		684323	0					
ANR	684677	Identifier	c		684323	0					
ANR	684678	Argument	c -> y * c -> w + attr_x		684323	1					
ANR	684679	AdditiveExpression	c -> y * c -> w + attr_x		684323	0		+			
ANR	684680	MultiplicativeExpression	c -> y * c -> w		684323	0		*			
ANR	684681	PtrMemberAccess	c -> y		684323	0					
ANR	684682	Identifier	c		684323	0					
ANR	684683	Identifier	y		684323	1					
ANR	684684	PtrMemberAccess	c -> w		684323	1					
ANR	684685	Identifier	c		684323	0					
ANR	684686	Identifier	w		684323	1					
ANR	684687	Identifier	attr_x		684323	1					
ANR	684688	Argument	attr_len		684323	2					
ANR	684689	Identifier	attr_len		684323	0					
ANR	684690	ExpressionStatement	s = s_part	326:2:6689:6699	684323	13	True				
ANR	684691	AssignmentExpression	s = s_part		684323	0		=			
ANR	684692	Identifier	s		684323	0					
ANR	684693	Identifier	s_part		684323	1					
ANR	684694	IfStatement	if ( ch == '\\n' )		684323	14					
ANR	684695	Condition	ch == '\\n'	327:6:6707:6716	684323	0	True				
ANR	684696	EqualityExpression	ch == '\\n'		684323	0		==			
ANR	684697	Identifier	ch		684323	0					
ANR	684698	PrimaryExpression	'\\n'		684323	1					
ANR	684699	CompoundStatement		49:18:1231:1231	684323	1					
ANR	684700	ExpressionStatement	c -> attr = Color_RESET	328:3:6724:6745	684323	0	True				
ANR	684701	AssignmentExpression	c -> attr = Color_RESET		684323	0		=			
ANR	684702	PtrMemberAccess	c -> attr		684323	0					
ANR	684703	Identifier	c		684323	0					
ANR	684704	Identifier	attr		684323	1					
ANR	684705	Identifier	Color_RESET		684323	1					
ANR	684706	ExpressionStatement	"__stampAttribute ( c , c -> y * c -> w + attr_x , 0 )"	329:3:6750:6793	684323	1	True				
ANR	684707	CallExpression	"__stampAttribute ( c , c -> y * c -> w + attr_x , 0 )"		684323	0					
ANR	684708	Callee	__stampAttribute		684323	0					
ANR	684709	Identifier	__stampAttribute		684323	0					
ANR	684710	ArgumentList	c		684323	1					
ANR	684711	Argument	c		684323	0					
ANR	684712	Identifier	c		684323	0					
ANR	684713	Argument	c -> y * c -> w + attr_x		684323	1					
ANR	684714	AdditiveExpression	c -> y * c -> w + attr_x		684323	0		+			
ANR	684715	MultiplicativeExpression	c -> y * c -> w		684323	0		*			
ANR	684716	PtrMemberAccess	c -> y		684323	0					
ANR	684717	Identifier	c		684323	0					
ANR	684718	Identifier	y		684323	1					
ANR	684719	PtrMemberAccess	c -> w		684323	1					
ANR	684720	Identifier	c		684323	0					
ANR	684721	Identifier	w		684323	1					
ANR	684722	Identifier	attr_x		684323	1					
ANR	684723	Argument	0		684323	2					
ANR	684724	PrimaryExpression	0		684323	0					
ANR	684725	ExpressionStatement	c -> y ++	330:3:6798:6804	684323	2	True				
ANR	684726	PostIncDecOperationExpression	c -> y ++		684323	0					
ANR	684727	PtrMemberAccess	c -> y		684323	0					
ANR	684728	Identifier	c		684323	0					
ANR	684729	Identifier	y		684323	1					
ANR	684730	IncDec	++		684323	1					
ANR	684731	ExpressionStatement	s ++	331:3:6809:6812	684323	3	True				
ANR	684732	PostIncDecOperationExpression	s ++		684323	0					
ANR	684733	Identifier	s		684323	0					
ANR	684734	IncDec	++		684323	1					
ANR	684735	IfStatement	if ( * s == '\\0' || c -> y >= c -> h )		684323	4					
ANR	684736	Condition	* s == '\\0' || c -> y >= c -> h	332:7:6821:6847	684323	0	True				
ANR	684737	OrExpression	* s == '\\0' || c -> y >= c -> h		684323	0		||			
ANR	684738	EqualityExpression	* s == '\\0'		684323	0		==			
ANR	684739	UnaryOperationExpression	* s		684323	0					
ANR	684740	UnaryOperator	*		684323	0					
ANR	684741	Identifier	s		684323	1					
ANR	684742	PrimaryExpression	'\\0'		684323	1					
ANR	684743	RelationalExpression	c -> y >= c -> h		684323	1		>=			
ANR	684744	PtrMemberAccess	c -> y		684323	0					
ANR	684745	Identifier	c		684323	0					
ANR	684746	Identifier	y		684323	1					
ANR	684747	PtrMemberAccess	c -> h		684323	1					
ANR	684748	Identifier	c		684323	0					
ANR	684749	Identifier	h		684323	1					
ANR	684750	CompoundStatement		54:36:1362:1362	684323	1					
ANR	684751	BreakStatement	break ;	333:4:6856:6861	684323	0	True				
ANR	684752	ExpressionStatement	"c -> x = __getUtf8Length2 ( c -> b [ c -> y ] , orig_x , c -> blen [ c -> y ] )"	335:3:6871:6930	684323	5	True				
ANR	684753	AssignmentExpression	"c -> x = __getUtf8Length2 ( c -> b [ c -> y ] , orig_x , c -> blen [ c -> y ] )"		684323	0		=			
ANR	684754	PtrMemberAccess	c -> x		684323	0					
ANR	684755	Identifier	c		684323	0					
ANR	684756	Identifier	x		684323	1					
ANR	684757	CallExpression	"__getUtf8Length2 ( c -> b [ c -> y ] , orig_x , c -> blen [ c -> y ] )"		684323	1					
ANR	684758	Callee	__getUtf8Length2		684323	0					
ANR	684759	Identifier	__getUtf8Length2		684323	0					
ANR	684760	ArgumentList	c -> b [ c -> y ]		684323	1					
ANR	684761	Argument	c -> b [ c -> y ]		684323	0					
ANR	684762	ArrayIndexing	c -> b [ c -> y ]		684323	0					
ANR	684763	PtrMemberAccess	c -> b		684323	0					
ANR	684764	Identifier	c		684323	0					
ANR	684765	Identifier	b		684323	1					
ANR	684766	PtrMemberAccess	c -> y		684323	1					
ANR	684767	Identifier	c		684323	0					
ANR	684768	Identifier	y		684323	1					
ANR	684769	Argument	orig_x		684323	1					
ANR	684770	Identifier	orig_x		684323	0					
ANR	684771	Argument	c -> blen [ c -> y ]		684323	2					
ANR	684772	ArrayIndexing	c -> blen [ c -> y ]		684323	0					
ANR	684773	PtrMemberAccess	c -> blen		684323	0					
ANR	684774	Identifier	c		684323	0					
ANR	684775	Identifier	blen		684323	1					
ANR	684776	PtrMemberAccess	c -> y		684323	1					
ANR	684777	Identifier	c		684323	0					
ANR	684778	Identifier	y		684323	1					
ANR	684779	ExpressionStatement	attr_x = orig_x	336:3:6935:6950	684323	6	True				
ANR	684780	AssignmentExpression	attr_x = orig_x		684323	0		=			
ANR	684781	Identifier	attr_x		684323	0					
ANR	684782	Identifier	orig_x		684323	1					
ANR	684783	ElseStatement	else		684323	0					
ANR	684784	CompoundStatement		59:9:1473:1473	684323	0					
ANR	684785	ExpressionStatement	c -> x += slen	338:3:6966:6978	684323	0	True				
ANR	684786	AssignmentExpression	c -> x += slen		684323	0		+=			
ANR	684787	PtrMemberAccess	c -> x		684323	0					
ANR	684788	Identifier	c		684323	0					
ANR	684789	Identifier	x		684323	1					
ANR	684790	Identifier	slen		684323	1					
ANR	684791	ExpressionStatement	attr_x += utf8_len	339:3:6983:7001	684323	1	True				
ANR	684792	AssignmentExpression	attr_x += utf8_len		684323	0		+=			
ANR	684793	Identifier	attr_x		684323	0					
ANR	684794	Identifier	utf8_len		684323	1					
ANR	684795	ExpressionStatement	s += piece_len	341:2:7009:7023	684323	15	True				
ANR	684796	AssignmentExpression	s += piece_len		684323	0		+=			
ANR	684797	Identifier	s		684323	0					
ANR	684798	Identifier	piece_len		684323	1					
ANR	684799	Condition	* s && ! r_cons_is_breaked ( )	342:10:7035:7061	684323	1	True				
ANR	684800	AndExpression	* s && ! r_cons_is_breaked ( )		684323	0		&&			
ANR	684801	UnaryOperationExpression	* s		684323	0					
ANR	684802	UnaryOperator	*		684323	0					
ANR	684803	Identifier	s		684323	1					
ANR	684804	UnaryOperationExpression	! r_cons_is_breaked ( )		684323	1					
ANR	684805	UnaryOperator	!		684323	0					
ANR	684806	CallExpression	r_cons_is_breaked ( )		684323	1					
ANR	684807	Callee	r_cons_is_breaked		684323	0					
ANR	684808	Identifier	r_cons_is_breaked		684323	0					
ANR	684809	ArgumentList			684323	1					
ANR	684810	ExpressionStatement	r_cons_break_pop ( )	343:1:7066:7085	684323	7	True				
ANR	684811	CallExpression	r_cons_break_pop ( )		684323	0					
ANR	684812	Callee	r_cons_break_pop		684323	0					
ANR	684813	Identifier	r_cons_break_pop		684323	0					
ANR	684814	ArgumentList			684323	1					
ANR	684815	ExpressionStatement	c -> x = orig_x	344:1:7088:7101	684323	8	True				
ANR	684816	AssignmentExpression	c -> x = orig_x		684323	0		=			
ANR	684817	PtrMemberAccess	c -> x		684323	0					
ANR	684818	Identifier	c		684323	0					
ANR	684819	Identifier	x		684323	1					
ANR	684820	Identifier	orig_x		684323	1					
ANR	684821	ReturnType	R_API void		684323	1					
ANR	684822	Identifier	r_cons_canvas_write		684323	2					
ANR	684823	ParameterList	"RConsCanvas * c , const char * s"		684323	3					
ANR	684824	Parameter	RConsCanvas * c	279:31:5456:5469	684323	0	True				
ANR	684825	ParameterType	RConsCanvas *		684323	0					
ANR	684826	Identifier	c		684323	1					
ANR	684827	Parameter	const char * s	279:47:5472:5484	684323	1	True				
ANR	684828	ParameterType	const char *		684323	0					
ANR	684829	Identifier	s		684323	1					
ANR	684830	CFGEntryNode	ENTRY		684323		True				
ANR	684831	CFGExitNode	EXIT		684323		True				
ANR	684832	Symbol	c -> sy		684323						
ANR	684833	Symbol	* c -> b		684323						
ANR	684834	Symbol	G		684323						
ANR	684835	Symbol	Color_RESET		684323						
ANR	684836	Symbol	piece_len		684323						
ANR	684837	Symbol	* c -> blen		684323						
ANR	684838	Symbol	utf8_len		684323						
ANR	684839	Symbol	attr_len		684323						
ANR	684840	Symbol	c -> sx		684323						
ANR	684841	Symbol	& ch		684323						
ANR	684842	Symbol	c -> attr		684323						
ANR	684843	Symbol	r_cons_is_breaked		684323						
ANR	684844	Symbol	s_part		684323						
ANR	684845	Symbol	c -> blen		684323						
ANR	684846	Symbol	c -> b		684323						
ANR	684847	Symbol	__getUtf8Length		684323						
ANR	684848	Symbol	orig_x		684323						
ANR	684849	Symbol	* c -> y		684323						
ANR	684850	Symbol	c -> h		684323						
ANR	684851	Symbol	c		684323						
ANR	684852	Symbol	NULL		684323						
ANR	684853	Symbol	ch		684323						
ANR	684854	Symbol	R_BETWEEN		684323						
ANR	684855	Symbol	* * c		684323						
ANR	684856	Symbol	r_str_nlen		684323						
ANR	684857	Symbol	__getAnsiPiece		684323						
ANR	684858	Symbol	* c		684323						
ANR	684859	Symbol	c -> w		684323						
ANR	684860	Symbol	__getUtf8Length2		684323						
ANR	684861	Symbol	c -> x		684323						
ANR	684862	Symbol	c -> y		684323						
ANR	684863	Symbol	utf8_piece_len		684323						
ANR	684864	Symbol	s		684323						
ANR	684865	Symbol	real_len		684323						
ANR	684866	Symbol	left		684323						
ANR	684867	Symbol	attr_x		684323						
ANR	684868	Symbol	slen		684323						
ANR	684869	Symbol	set_attr		684323						
ANR	684870	Symbol	__expandLine		684323						
ANR	684871	Symbol	* s		684323						
ANR	684872	Function	r_cons_canvas_to_string	347:0:7106:8259							
ANR	684873	FunctionDef	r_cons_canvas_to_string (RConsCanvas * c)		684872	0					
ANR	684874	CompoundStatement		347:52:7158:8259	684872	0					
ANR	684875	ExpressionStatement	"r_return_val_if_fail ( c , NULL )"	348:1:7161:7191	684872	0	True				
ANR	684876	CallExpression	"r_return_val_if_fail ( c , NULL )"		684872	0					
ANR	684877	Callee	r_return_val_if_fail		684872	0					
ANR	684878	Identifier	r_return_val_if_fail		684872	0					
ANR	684879	ArgumentList	c		684872	1					
ANR	684880	Argument	c		684872	0					
ANR	684881	Identifier	c		684872	0					
ANR	684882	Argument	NULL		684872	1					
ANR	684883	Identifier	NULL		684872	0					
ANR	684884	IdentifierDeclStatement	"int x , y , olen = 0 , attr_x = 0 ;"	350:1:7195:7225	684872	1	True				
ANR	684885	IdentifierDecl	x		684872	0					
ANR	684886	IdentifierDeclType	int		684872	0					
ANR	684887	Identifier	x		684872	1					
ANR	684888	IdentifierDecl	y		684872	1					
ANR	684889	IdentifierDeclType	int		684872	0					
ANR	684890	Identifier	y		684872	1					
ANR	684891	IdentifierDecl	olen = 0		684872	2					
ANR	684892	IdentifierDeclType	int		684872	0					
ANR	684893	Identifier	olen		684872	1					
ANR	684894	AssignmentExpression	olen = 0		684872	2		=			
ANR	684895	Identifier	olen		684872	0					
ANR	684896	PrimaryExpression	0		684872	1					
ANR	684897	IdentifierDecl	attr_x = 0		684872	3					
ANR	684898	IdentifierDeclType	int		684872	0					
ANR	684899	Identifier	attr_x		684872	1					
ANR	684900	AssignmentExpression	attr_x = 0		684872	2		=			
ANR	684901	Identifier	attr_x		684872	0					
ANR	684902	PrimaryExpression	0		684872	1					
ANR	684903	IdentifierDeclStatement	int is_first = true ;	351:1:7228:7247	684872	2	True				
ANR	684904	IdentifierDecl	is_first = true		684872	0					
ANR	684905	IdentifierDeclType	int		684872	0					
ANR	684906	Identifier	is_first		684872	1					
ANR	684907	AssignmentExpression	is_first = true		684872	2		=			
ANR	684908	Identifier	true		684872	0					
ANR	684909	Identifier	true		684872	1					
ANR	684910	ForStatement	for ( y = 0 ; y < c -> h ; y ++ )		684872	3					
ANR	684911	ForInit	y = 0 ;	353:6:7256:7261	684872	0	True				
ANR	684912	AssignmentExpression	y = 0		684872	0		=			
ANR	684913	Identifier	y		684872	0					
ANR	684914	PrimaryExpression	0		684872	1					
ANR	684915	Condition	y < c -> h	353:13:7263:7270	684872	1	True				
ANR	684916	RelationalExpression	y < c -> h		684872	0		<			
ANR	684917	Identifier	y		684872	0					
ANR	684918	PtrMemberAccess	c -> h		684872	1					
ANR	684919	Identifier	c		684872	0					
ANR	684920	Identifier	h		684872	1					
ANR	684921	PostIncDecOperationExpression	y ++	353:23:7273:7275	684872	2	True				
ANR	684922	Identifier	y		684872	0					
ANR	684923	IncDec	++		684872	1					
ANR	684924	CompoundStatement		7:28:119:119	684872	3					
ANR	684925	ExpressionStatement	olen += c -> blen [ y ] + 1	354:2:7282:7304	684872	0	True				
ANR	684926	AssignmentExpression	olen += c -> blen [ y ] + 1		684872	0		+=			
ANR	684927	Identifier	olen		684872	0					
ANR	684928	AdditiveExpression	c -> blen [ y ] + 1		684872	1		+			
ANR	684929	ArrayIndexing	c -> blen [ y ]		684872	0					
ANR	684930	PtrMemberAccess	c -> blen		684872	0					
ANR	684931	Identifier	c		684872	0					
ANR	684932	Identifier	blen		684872	1					
ANR	684933	Identifier	y		684872	1					
ANR	684934	PrimaryExpression	1		684872	1					
ANR	684935	IdentifierDeclStatement	"char * o = calloc ( 1 , olen * 4 * CONS_MAX_ATTR_SZ ) ;"	356:1:7310:7359	684872	4	True				
ANR	684936	IdentifierDecl	"* o = calloc ( 1 , olen * 4 * CONS_MAX_ATTR_SZ )"		684872	0					
ANR	684937	IdentifierDeclType	char *		684872	0					
ANR	684938	Identifier	o		684872	1					
ANR	684939	AssignmentExpression	"* o = calloc ( 1 , olen * 4 * CONS_MAX_ATTR_SZ )"		684872	2		=			
ANR	684940	Identifier	o		684872	0					
ANR	684941	CallExpression	"calloc ( 1 , olen * 4 * CONS_MAX_ATTR_SZ )"		684872	1					
ANR	684942	Callee	calloc		684872	0					
ANR	684943	Identifier	calloc		684872	0					
ANR	684944	ArgumentList	1		684872	1					
ANR	684945	Argument	1		684872	0					
ANR	684946	PrimaryExpression	1		684872	0					
ANR	684947	Argument	olen * 4 * CONS_MAX_ATTR_SZ		684872	1					
ANR	684948	MultiplicativeExpression	olen * 4 * CONS_MAX_ATTR_SZ		684872	0		*			
ANR	684949	Identifier	olen		684872	0					
ANR	684950	MultiplicativeExpression	4 * CONS_MAX_ATTR_SZ		684872	1		*			
ANR	684951	PrimaryExpression	4		684872	0					
ANR	684952	Identifier	CONS_MAX_ATTR_SZ		684872	1					
ANR	684953	IfStatement	if ( ! o )		684872	5					
ANR	684954	Condition	! o	357:5:7366:7367	684872	0	True				
ANR	684955	UnaryOperationExpression	! o		684872	0					
ANR	684956	UnaryOperator	!		684872	0					
ANR	684957	Identifier	o		684872	1					
ANR	684958	CompoundStatement		11:9:211:211	684872	1					
ANR	684959	ReturnStatement	return NULL ;	358:2:7374:7385	684872	0	True				
ANR	684960	Identifier	NULL		684872	0					
ANR	684961	IfStatement	if ( ! olen )		684872	6					
ANR	684962	Condition	! olen	360:5:7395:7399	684872	0	True				
ANR	684963	UnaryOperationExpression	! olen		684872	0					
ANR	684964	UnaryOperator	!		684872	0					
ANR	684965	Identifier	olen		684872	1					
ANR	684966	CompoundStatement		14:12:243:243	684872	1					
ANR	684967	ExpressionStatement	free ( o )	361:2:7406:7414	684872	0	True				
ANR	684968	CallExpression	free ( o )		684872	0					
ANR	684969	Callee	free		684872	0					
ANR	684970	Identifier	free		684872	0					
ANR	684971	ArgumentList	o		684872	1					
ANR	684972	Argument	o		684872	0					
ANR	684973	Identifier	o		684872	0					
ANR	684974	ReturnStatement	return NULL ;	362:2:7418:7429	684872	1	True				
ANR	684975	Identifier	NULL		684872	0					
ANR	684976	ExpressionStatement	olen = 0	365:1:7436:7444	684872	7	True				
ANR	684977	AssignmentExpression	olen = 0		684872	0		=			
ANR	684978	Identifier	olen		684872	0					
ANR	684979	PrimaryExpression	0		684872	1					
ANR	684980	ForStatement	for ( y = 0 ; y < c -> h ; y ++ )		684872	8					
ANR	684981	ForInit	y = 0 ;	366:6:7452:7457	684872	0	True				
ANR	684982	AssignmentExpression	y = 0		684872	0		=			
ANR	684983	Identifier	y		684872	0					
ANR	684984	PrimaryExpression	0		684872	1					
ANR	684985	Condition	y < c -> h	366:13:7459:7466	684872	1	True				
ANR	684986	RelationalExpression	y < c -> h		684872	0		<			
ANR	684987	Identifier	y		684872	0					
ANR	684988	PtrMemberAccess	c -> h		684872	1					
ANR	684989	Identifier	c		684872	0					
ANR	684990	Identifier	h		684872	1					
ANR	684991	PostIncDecOperationExpression	y ++	366:23:7469:7471	684872	2	True				
ANR	684992	Identifier	y		684872	0					
ANR	684993	IncDec	++		684872	1					
ANR	684994	CompoundStatement		20:28:315:315	684872	3					
ANR	684995	IfStatement	if ( ! is_first )		684872	0					
ANR	684996	Condition	! is_first	367:6:7482:7490	684872	0	True				
ANR	684997	UnaryOperationExpression	! is_first		684872	0					
ANR	684998	UnaryOperator	!		684872	0					
ANR	684999	Identifier	is_first		684872	1					
ANR	685000	CompoundStatement		21:17:334:334	684872	1					
ANR	685001	ExpressionStatement	o [ olen ++ ] = '\\n'	368:3:7498:7514	684872	0	True				
ANR	685002	AssignmentExpression	o [ olen ++ ] = '\\n'		684872	0		=			
ANR	685003	ArrayIndexing	o [ olen ++ ]		684872	0					
ANR	685004	Identifier	o		684872	0					
ANR	685005	PostIncDecOperationExpression	olen ++		684872	1					
ANR	685006	Identifier	olen		684872	0					
ANR	685007	IncDec	++		684872	1					
ANR	685008	PrimaryExpression	'\\n'		684872	1					
ANR	685009	ExpressionStatement	is_first = false	370:2:7522:7538	684872	1	True				
ANR	685010	AssignmentExpression	is_first = false		684872	0		=			
ANR	685011	Identifier	is_first		684872	0					
ANR	685012	Identifier	false		684872	1					
ANR	685013	ExpressionStatement	attr_x = 0	371:2:7542:7552	684872	2	True				
ANR	685014	AssignmentExpression	attr_x = 0		684872	0		=			
ANR	685015	Identifier	attr_x		684872	0					
ANR	685016	PrimaryExpression	0		684872	1					
ANR	685017	ForStatement	for ( x = 0 ; x < c -> blen [ y ] ; x ++ )		684872	3					
ANR	685018	ForInit	x = 0 ;	372:7:7561:7566	684872	0	True				
ANR	685019	AssignmentExpression	x = 0		684872	0		=			
ANR	685020	Identifier	x		684872	0					
ANR	685021	PrimaryExpression	0		684872	1					
ANR	685022	Condition	x < c -> blen [ y ]	372:14:7568:7581	684872	1	True				
ANR	685023	RelationalExpression	x < c -> blen [ y ]		684872	0		<			
ANR	685024	Identifier	x		684872	0					
ANR	685025	ArrayIndexing	c -> blen [ y ]		684872	1					
ANR	685026	PtrMemberAccess	c -> blen		684872	0					
ANR	685027	Identifier	c		684872	0					
ANR	685028	Identifier	blen		684872	1					
ANR	685029	Identifier	y		684872	1					
ANR	685030	PostIncDecOperationExpression	x ++	372:30:7584:7586	684872	2	True				
ANR	685031	Identifier	x		684872	0					
ANR	685032	IncDec	++		684872	1					
ANR	685033	CompoundStatement		43:3:821:879	684872	3					
ANR	685034	IfStatement	if ( ( c -> b [ y ] [ x ] & 0xc0 ) != 0x80 )		684872	0					
ANR	685035	Condition	( c -> b [ y ] [ x ] & 0xc0 ) != 0x80	373:7:7598:7624	684872	0	True				
ANR	685036	EqualityExpression	( c -> b [ y ] [ x ] & 0xc0 ) != 0x80		684872	0		!=			
ANR	685037	BitAndExpression	c -> b [ y ] [ x ] & 0xc0		684872	0		&			
ANR	685038	ArrayIndexing	c -> b [ y ] [ x ]		684872	0					
ANR	685039	ArrayIndexing	c -> b [ y ]		684872	0					
ANR	685040	PtrMemberAccess	c -> b		684872	0					
ANR	685041	Identifier	c		684872	0					
ANR	685042	Identifier	b		684872	1					
ANR	685043	Identifier	y		684872	1					
ANR	685044	Identifier	x		684872	1					
ANR	685045	PrimaryExpression	0xc0		684872	1					
ANR	685046	PrimaryExpression	0x80		684872	1					
ANR	685047	CompoundStatement		28:4:474:528	684872	1					
ANR	685048	IdentifierDeclStatement	"const char * atr = __attributeAt ( c , y * c -> w + attr_x ) ;"	374:4:7633:7687	684872	0	True				
ANR	685049	IdentifierDecl	"* atr = __attributeAt ( c , y * c -> w + attr_x )"		684872	0					
ANR	685050	IdentifierDeclType	const char *		684872	0					
ANR	685051	Identifier	atr		684872	1					
ANR	685052	AssignmentExpression	"* atr = __attributeAt ( c , y * c -> w + attr_x )"		684872	2		=			
ANR	685053	Identifier	atr		684872	0					
ANR	685054	CallExpression	"__attributeAt ( c , y * c -> w + attr_x )"		684872	1					
ANR	685055	Callee	__attributeAt		684872	0					
ANR	685056	Identifier	__attributeAt		684872	0					
ANR	685057	ArgumentList	c		684872	1					
ANR	685058	Argument	c		684872	0					
ANR	685059	Identifier	c		684872	0					
ANR	685060	Argument	y * c -> w + attr_x		684872	1					
ANR	685061	AdditiveExpression	y * c -> w + attr_x		684872	0		+			
ANR	685062	MultiplicativeExpression	y * c -> w		684872	0		*			
ANR	685063	Identifier	y		684872	0					
ANR	685064	PtrMemberAccess	c -> w		684872	1					
ANR	685065	Identifier	c		684872	0					
ANR	685066	Identifier	w		684872	1					
ANR	685067	Identifier	attr_x		684872	1					
ANR	685068	IfStatement	if ( atr )		684872	1					
ANR	685069	Condition	atr	375:8:7697:7699	684872	0	True				
ANR	685070	Identifier	atr		684872	0					
ANR	685071	CompoundStatement		30:5:550:572	684872	1					
ANR	685072	IdentifierDeclStatement	int len = strlen ( atr ) ;	376:5:7709:7731	684872	0	True				
ANR	685073	IdentifierDecl	len = strlen ( atr )		684872	0					
ANR	685074	IdentifierDeclType	int		684872	0					
ANR	685075	Identifier	len		684872	1					
ANR	685076	AssignmentExpression	len = strlen ( atr )		684872	2		=			
ANR	685077	Identifier	len		684872	0					
ANR	685078	CallExpression	strlen ( atr )		684872	1					
ANR	685079	Callee	strlen		684872	0					
ANR	685080	Identifier	strlen		684872	0					
ANR	685081	ArgumentList	atr		684872	1					
ANR	685082	Argument	atr		684872	0					
ANR	685083	Identifier	atr		684872	0					
ANR	685084	ExpressionStatement	"memcpy ( o + olen , atr , len )"	377:5:7738:7765	684872	1	True				
ANR	685085	CallExpression	"memcpy ( o + olen , atr , len )"		684872	0					
ANR	685086	Callee	memcpy		684872	0					
ANR	685087	Identifier	memcpy		684872	0					
ANR	685088	ArgumentList	o + olen		684872	1					
ANR	685089	Argument	o + olen		684872	0					
ANR	685090	AdditiveExpression	o + olen		684872	0		+			
ANR	685091	Identifier	o		684872	0					
ANR	685092	Identifier	olen		684872	1					
ANR	685093	Argument	atr		684872	1					
ANR	685094	Identifier	atr		684872	0					
ANR	685095	Argument	len		684872	2					
ANR	685096	Identifier	len		684872	0					
ANR	685097	ExpressionStatement	olen += len	378:5:7772:7783	684872	2	True				
ANR	685098	AssignmentExpression	olen += len		684872	0		+=			
ANR	685099	Identifier	olen		684872	0					
ANR	685100	Identifier	len		684872	1					
ANR	685101	ExpressionStatement	attr_x ++	380:4:7795:7803	684872	2	True				
ANR	685102	PostIncDecOperationExpression	attr_x ++		684872	0					
ANR	685103	Identifier	attr_x		684872	0					
ANR	685104	IncDec	++		684872	1					
ANR	685105	IfStatement	"if ( r_str_char_fullwidth ( c -> b [ y ] + x , c -> blen [ y ] - x ) )"		684872	3					
ANR	685106	Condition	"r_str_char_fullwidth ( c -> b [ y ] + x , c -> blen [ y ] - x )"	381:8:7813:7862	684872	0	True				
ANR	685107	CallExpression	"r_str_char_fullwidth ( c -> b [ y ] + x , c -> blen [ y ] - x )"		684872	0					
ANR	685108	Callee	r_str_char_fullwidth		684872	0					
ANR	685109	Identifier	r_str_char_fullwidth		684872	0					
ANR	685110	ArgumentList	c -> b [ y ] + x		684872	1					
ANR	685111	Argument	c -> b [ y ] + x		684872	0					
ANR	685112	AdditiveExpression	c -> b [ y ] + x		684872	0		+			
ANR	685113	ArrayIndexing	c -> b [ y ]		684872	0					
ANR	685114	PtrMemberAccess	c -> b		684872	0					
ANR	685115	Identifier	c		684872	0					
ANR	685116	Identifier	b		684872	1					
ANR	685117	Identifier	y		684872	1					
ANR	685118	Identifier	x		684872	1					
ANR	685119	Argument	c -> blen [ y ] - x		684872	1					
ANR	685120	AdditiveExpression	c -> blen [ y ] - x		684872	0		-			
ANR	685121	ArrayIndexing	c -> blen [ y ]		684872	0					
ANR	685122	PtrMemberAccess	c -> blen		684872	0					
ANR	685123	Identifier	c		684872	0					
ANR	685124	Identifier	blen		684872	1					
ANR	685125	Identifier	y		684872	1					
ANR	685126	Identifier	x		684872	1					
ANR	685127	CompoundStatement		35:60:706:706	684872	1					
ANR	685128	ExpressionStatement	attr_x ++	382:5:7872:7880	684872	0	True				
ANR	685129	PostIncDecOperationExpression	attr_x ++		684872	0					
ANR	685130	Identifier	attr_x		684872	0					
ANR	685131	IncDec	++		684872	1					
ANR	685132	IfStatement	if ( ! c -> b [ y ] [ x ] || c -> b [ y ] [ x ] == '\\n' )		684872	1					
ANR	685133	Condition	! c -> b [ y ] [ x ] || c -> b [ y ] [ x ] == '\\n'	385:7:7900:7932	684872	0	True				
ANR	685134	OrExpression	! c -> b [ y ] [ x ] || c -> b [ y ] [ x ] == '\\n'		684872	0		||			
ANR	685135	UnaryOperationExpression	! c -> b [ y ] [ x ]		684872	0					
ANR	685136	UnaryOperator	!		684872	0					
ANR	685137	ArrayIndexing	c -> b [ y ] [ x ]		684872	1					
ANR	685138	ArrayIndexing	c -> b [ y ]		684872	0					
ANR	685139	PtrMemberAccess	c -> b		684872	0					
ANR	685140	Identifier	c		684872	0					
ANR	685141	Identifier	b		684872	1					
ANR	685142	Identifier	y		684872	1					
ANR	685143	Identifier	x		684872	1					
ANR	685144	EqualityExpression	c -> b [ y ] [ x ] == '\\n'		684872	1		==			
ANR	685145	ArrayIndexing	c -> b [ y ] [ x ]		684872	0					
ANR	685146	ArrayIndexing	c -> b [ y ]		684872	0					
ANR	685147	PtrMemberAccess	c -> b		684872	0					
ANR	685148	Identifier	c		684872	0					
ANR	685149	Identifier	b		684872	1					
ANR	685150	Identifier	y		684872	1					
ANR	685151	Identifier	x		684872	1					
ANR	685152	PrimaryExpression	'\\n'		684872	1					
ANR	685153	CompoundStatement		39:42:776:776	684872	1					
ANR	685154	ExpressionStatement	o [ olen ++ ] = ' '	386:4:7941:7956	684872	0	True				
ANR	685155	AssignmentExpression	o [ olen ++ ] = ' '		684872	0		=			
ANR	685156	ArrayIndexing	o [ olen ++ ]		684872	0					
ANR	685157	Identifier	o		684872	0					
ANR	685158	PostIncDecOperationExpression	olen ++		684872	1					
ANR	685159	Identifier	olen		684872	0					
ANR	685160	IncDec	++		684872	1					
ANR	685161	PrimaryExpression	' '		684872	1					
ANR	685162	ContinueStatement	continue ;	387:4:7962:7970	684872	1	True				
ANR	685163	IdentifierDeclStatement	const char * rune = r_cons_get_rune ( ( const ut8 ) c -> b [ y ] [ x ] ) ;	389:3:7980:8038	684872	2	True				
ANR	685164	IdentifierDecl	* rune = r_cons_get_rune ( ( const ut8 ) c -> b [ y ] [ x ] )		684872	0					
ANR	685165	IdentifierDeclType	const char *		684872	0					
ANR	685166	Identifier	rune		684872	1					
ANR	685167	AssignmentExpression	* rune = r_cons_get_rune ( ( const ut8 ) c -> b [ y ] [ x ] )		684872	2		=			
ANR	685168	Identifier	rune		684872	0					
ANR	685169	CallExpression	r_cons_get_rune ( ( const ut8 ) c -> b [ y ] [ x ] )		684872	1					
ANR	685170	Callee	r_cons_get_rune		684872	0					
ANR	685171	Identifier	r_cons_get_rune		684872	0					
ANR	685172	ArgumentList	( const ut8 ) c -> b [ y ] [ x ]		684872	1					
ANR	685173	Argument	( const ut8 ) c -> b [ y ] [ x ]		684872	0					
ANR	685174	CastExpression	( const ut8 ) c -> b [ y ] [ x ]		684872	0					
ANR	685175	CastTarget	const ut8		684872	0					
ANR	685176	ArrayIndexing	c -> b [ y ] [ x ]		684872	1					
ANR	685177	ArrayIndexing	c -> b [ y ]		684872	0					
ANR	685178	PtrMemberAccess	c -> b		684872	0					
ANR	685179	Identifier	c		684872	0					
ANR	685180	Identifier	b		684872	1					
ANR	685181	Identifier	y		684872	1					
ANR	685182	Identifier	x		684872	1					
ANR	685183	IfStatement	if ( rune )		684872	3					
ANR	685184	Condition	rune	390:7:8047:8050	684872	0	True				
ANR	685185	Identifier	rune		684872	0					
ANR	685186	CompoundStatement		44:13:894:894	684872	1					
ANR	685187	ExpressionStatement	"strcpy ( o + olen , rune )"	391:4:8059:8082	684872	0	True				
ANR	685188	CallExpression	"strcpy ( o + olen , rune )"		684872	0					
ANR	685189	Callee	strcpy		684872	0					
ANR	685190	Identifier	strcpy		684872	0					
ANR	685191	ArgumentList	o + olen		684872	1					
ANR	685192	Argument	o + olen		684872	0					
ANR	685193	AdditiveExpression	o + olen		684872	0		+			
ANR	685194	Identifier	o		684872	0					
ANR	685195	Identifier	olen		684872	1					
ANR	685196	Argument	rune		684872	1					
ANR	685197	Identifier	rune		684872	0					
ANR	685198	ExpressionStatement	olen += strlen ( rune )	392:4:8088:8109	684872	1	True				
ANR	685199	AssignmentExpression	olen += strlen ( rune )		684872	0		+=			
ANR	685200	Identifier	olen		684872	0					
ANR	685201	CallExpression	strlen ( rune )		684872	1					
ANR	685202	Callee	strlen		684872	0					
ANR	685203	Identifier	strlen		684872	0					
ANR	685204	ArgumentList	rune		684872	1					
ANR	685205	Argument	rune		684872	0					
ANR	685206	Identifier	rune		684872	0					
ANR	685207	ElseStatement	else		684872	0					
ANR	685208	CompoundStatement		47:10:962:962	684872	0					
ANR	685209	ExpressionStatement	o [ olen ++ ] = c -> b [ y ] [ x ]	394:4:8127:8149	684872	0	True				
ANR	685210	AssignmentExpression	o [ olen ++ ] = c -> b [ y ] [ x ]		684872	0		=			
ANR	685211	ArrayIndexing	o [ olen ++ ]		684872	0					
ANR	685212	Identifier	o		684872	0					
ANR	685213	PostIncDecOperationExpression	olen ++		684872	1					
ANR	685214	Identifier	olen		684872	0					
ANR	685215	IncDec	++		684872	1					
ANR	685216	ArrayIndexing	c -> b [ y ] [ x ]		684872	1					
ANR	685217	ArrayIndexing	c -> b [ y ]		684872	0					
ANR	685218	PtrMemberAccess	c -> b		684872	0					
ANR	685219	Identifier	c		684872	0					
ANR	685220	Identifier	b		684872	1					
ANR	685221	Identifier	y		684872	1					
ANR	685222	Identifier	x		684872	1					
ANR	685223	WhileStatement	while ( olen > 0 && o [ olen - 1 ] == ' ' )		684872	4					
ANR	685224	Condition	olen > 0 && o [ olen - 1 ] == ' '	397:9:8169:8198	684872	0	True				
ANR	685225	AndExpression	olen > 0 && o [ olen - 1 ] == ' '		684872	0		&&			
ANR	685226	RelationalExpression	olen > 0		684872	0		>			
ANR	685227	Identifier	olen		684872	0					
ANR	685228	PrimaryExpression	0		684872	1					
ANR	685229	EqualityExpression	o [ olen - 1 ] == ' '		684872	1		==			
ANR	685230	ArrayIndexing	o [ olen - 1 ]		684872	0					
ANR	685231	Identifier	o		684872	0					
ANR	685232	AdditiveExpression	olen - 1		684872	1		-			
ANR	685233	Identifier	olen		684872	0					
ANR	685234	PrimaryExpression	1		684872	1					
ANR	685235	PrimaryExpression	' '		684872	1					
ANR	685236	CompoundStatement		51:41:1042:1042	684872	1					
ANR	685237	ExpressionStatement	o [ -- olen ] = '\\0'	398:3:8206:8222	684872	0	True				
ANR	685238	AssignmentExpression	o [ -- olen ] = '\\0'		684872	0		=			
ANR	685239	ArrayIndexing	o [ -- olen ]		684872	0					
ANR	685240	Identifier	o		684872	0					
ANR	685241	UnaryExpression	-- olen		684872	1					
ANR	685242	IncDec	--		684872	0					
ANR	685243	Identifier	olen		684872	1					
ANR	685244	PrimaryExpression	'\\0'		684872	1					
ANR	685245	ExpressionStatement	o [ olen ] = '\\0'	401:1:8232:8246	684872	9	True				
ANR	685246	AssignmentExpression	o [ olen ] = '\\0'		684872	0		=			
ANR	685247	ArrayIndexing	o [ olen ]		684872	0					
ANR	685248	Identifier	o		684872	0					
ANR	685249	Identifier	olen		684872	1					
ANR	685250	PrimaryExpression	'\\0'		684872	1					
ANR	685251	ReturnStatement	return o ;	402:1:8249:8257	684872	10	True				
ANR	685252	Identifier	o		684872	0					
ANR	685253	ReturnType	R_API char *		684872	1					
ANR	685254	Identifier	r_cons_canvas_to_string		684872	2					
ANR	685255	ParameterList	RConsCanvas * c		684872	3					
ANR	685256	Parameter	RConsCanvas * c	347:36:7142:7155	684872	0	True				
ANR	685257	ParameterType	RConsCanvas *		684872	0					
ANR	685258	Identifier	c		684872	1					
ANR	685259	CFGEntryNode	ENTRY		684872		True				
ANR	685260	CFGExitNode	EXIT		684872		True				
ANR	685261	Symbol	* x		684872						
ANR	685262	Symbol	* y		684872						
ANR	685263	Symbol	* c -> b		684872						
ANR	685264	Symbol	r_str_char_fullwidth		684872						
ANR	685265	Symbol	* c -> blen		684872						
ANR	685266	Symbol	calloc		684872						
ANR	685267	Symbol	rune		684872						
ANR	685268	Symbol	strlen		684872						
ANR	685269	Symbol	* * y		684872						
ANR	685270	Symbol	len		684872						
ANR	685271	Symbol	c -> blen		684872						
ANR	685272	Symbol	c -> b		684872						
ANR	685273	Symbol	CONS_MAX_ATTR_SZ		684872						
ANR	685274	Symbol	__attributeAt		684872						
ANR	685275	Symbol	c -> h		684872						
ANR	685276	Symbol	atr		684872						
ANR	685277	Symbol	* olen		684872						
ANR	685278	Symbol	c		684872						
ANR	685279	Symbol	NULL		684872						
ANR	685280	Symbol	* * c -> b		684872						
ANR	685281	Symbol	is_first		684872						
ANR	685282	Symbol	* * c		684872						
ANR	685283	Symbol	false		684872						
ANR	685284	Symbol	r_cons_get_rune		684872						
ANR	685285	Symbol	* c		684872						
ANR	685286	Symbol	c -> w		684872						
ANR	685287	Symbol	o		684872						
ANR	685288	Symbol	olen		684872						
ANR	685289	Symbol	attr_x		684872						
ANR	685290	Symbol	x		684872						
ANR	685291	Symbol	true		684872						
ANR	685292	Symbol	y		684872						
ANR	685293	Symbol	* o		684872						
ANR	685294	Symbol	* * * c		684872						
ANR	685295	Function	r_cons_canvas_print_region	405:0:8262:8444							
ANR	685296	FunctionDef	r_cons_canvas_print_region (RConsCanvas * c)		685295	0					
ANR	685297	CompoundStatement		405:54:8316:8444	685295	0					
ANR	685298	IdentifierDeclStatement	char * o = r_cons_canvas_to_string ( c ) ;	406:1:8319:8356	685295	0	True				
ANR	685299	IdentifierDecl	* o = r_cons_canvas_to_string ( c )		685295	0					
ANR	685300	IdentifierDeclType	char *		685295	0					
ANR	685301	Identifier	o		685295	1					
ANR	685302	AssignmentExpression	* o = r_cons_canvas_to_string ( c )		685295	2		=			
ANR	685303	Identifier	o		685295	0					
ANR	685304	CallExpression	r_cons_canvas_to_string ( c )		685295	1					
ANR	685305	Callee	r_cons_canvas_to_string		685295	0					
ANR	685306	Identifier	r_cons_canvas_to_string		685295	0					
ANR	685307	ArgumentList	c		685295	1					
ANR	685308	Argument	c		685295	0					
ANR	685309	Identifier	c		685295	0					
ANR	685310	IfStatement	if ( o )		685295	1					
ANR	685311	Condition	o	407:5:8363:8363	685295	0	True				
ANR	685312	Identifier	o		685295	0					
ANR	685313	CompoundStatement		3:8:49:49	685295	1					
ANR	685314	ExpressionStatement	r_str_trim_tail ( o )	408:2:8370:8389	685295	0	True				
ANR	685315	CallExpression	r_str_trim_tail ( o )		685295	0					
ANR	685316	Callee	r_str_trim_tail		685295	0					
ANR	685317	Identifier	r_str_trim_tail		685295	0					
ANR	685318	ArgumentList	o		685295	1					
ANR	685319	Argument	o		685295	0					
ANR	685320	Identifier	o		685295	0					
ANR	685321	IfStatement	if ( * o )		685295	1					
ANR	685322	Condition	* o	409:6:8397:8398	685295	0	True				
ANR	685323	UnaryOperationExpression	* o		685295	0					
ANR	685324	UnaryOperator	*		685295	0					
ANR	685325	Identifier	o		685295	1					
ANR	685326	CompoundStatement		5:10:84:84	685295	1					
ANR	685327	ExpressionStatement	r_cons_strcat ( o )	410:3:8406:8423	685295	0	True				
ANR	685328	CallExpression	r_cons_strcat ( o )		685295	0					
ANR	685329	Callee	r_cons_strcat		685295	0					
ANR	685330	Identifier	r_cons_strcat		685295	0					
ANR	685331	ArgumentList	o		685295	1					
ANR	685332	Argument	o		685295	0					
ANR	685333	Identifier	o		685295	0					
ANR	685334	ExpressionStatement	free ( o )	412:2:8431:8439	685295	2	True				
ANR	685335	CallExpression	free ( o )		685295	0					
ANR	685336	Callee	free		685295	0					
ANR	685337	Identifier	free		685295	0					
ANR	685338	ArgumentList	o		685295	1					
ANR	685339	Argument	o		685295	0					
ANR	685340	Identifier	o		685295	0					
ANR	685341	ReturnType	R_API void		685295	1					
ANR	685342	Identifier	r_cons_canvas_print_region		685295	2					
ANR	685343	ParameterList	RConsCanvas * c		685295	3					
ANR	685344	Parameter	RConsCanvas * c	405:38:8300:8313	685295	0	True				
ANR	685345	ParameterType	RConsCanvas *		685295	0					
ANR	685346	Identifier	c		685295	1					
ANR	685347	CFGEntryNode	ENTRY		685295		True				
ANR	685348	CFGExitNode	EXIT		685295		True				
ANR	685349	Symbol	c		685295						
ANR	685350	Symbol	r_cons_canvas_to_string		685295						
ANR	685351	Symbol	* o		685295						
ANR	685352	Symbol	o		685295						
ANR	685353	Function	r_cons_canvas_print	416:0:8447:8582							
ANR	685354	FunctionDef	r_cons_canvas_print (RConsCanvas * c)		685353	0					
ANR	685355	CompoundStatement		416:47:8494:8582	685353	0					
ANR	685356	IdentifierDeclStatement	char * o = r_cons_canvas_to_string ( c ) ;	417:1:8497:8534	685353	0	True				
ANR	685357	IdentifierDecl	* o = r_cons_canvas_to_string ( c )		685353	0					
ANR	685358	IdentifierDeclType	char *		685353	0					
ANR	685359	Identifier	o		685353	1					
ANR	685360	AssignmentExpression	* o = r_cons_canvas_to_string ( c )		685353	2		=			
ANR	685361	Identifier	o		685353	0					
ANR	685362	CallExpression	r_cons_canvas_to_string ( c )		685353	1					
ANR	685363	Callee	r_cons_canvas_to_string		685353	0					
ANR	685364	Identifier	r_cons_canvas_to_string		685353	0					
ANR	685365	ArgumentList	c		685353	1					
ANR	685366	Argument	c		685353	0					
ANR	685367	Identifier	c		685353	0					
ANR	685368	IfStatement	if ( o )		685353	1					
ANR	685369	Condition	o	418:5:8541:8541	685353	0	True				
ANR	685370	Identifier	o		685353	0					
ANR	685371	CompoundStatement		3:8:49:49	685353	1					
ANR	685372	ExpressionStatement	r_cons_strcat ( o )	419:2:8548:8565	685353	0	True				
ANR	685373	CallExpression	r_cons_strcat ( o )		685353	0					
ANR	685374	Callee	r_cons_strcat		685353	0					
ANR	685375	Identifier	r_cons_strcat		685353	0					
ANR	685376	ArgumentList	o		685353	1					
ANR	685377	Argument	o		685353	0					
ANR	685378	Identifier	o		685353	0					
ANR	685379	ExpressionStatement	free ( o )	420:2:8569:8577	685353	1	True				
ANR	685380	CallExpression	free ( o )		685353	0					
ANR	685381	Callee	free		685353	0					
ANR	685382	Identifier	free		685353	0					
ANR	685383	ArgumentList	o		685353	1					
ANR	685384	Argument	o		685353	0					
ANR	685385	Identifier	o		685353	0					
ANR	685386	ReturnType	R_API void		685353	1					
ANR	685387	Identifier	r_cons_canvas_print		685353	2					
ANR	685388	ParameterList	RConsCanvas * c		685353	3					
ANR	685389	Parameter	RConsCanvas * c	416:31:8478:8491	685353	0	True				
ANR	685390	ParameterType	RConsCanvas *		685353	0					
ANR	685391	Identifier	c		685353	1					
ANR	685392	CFGEntryNode	ENTRY		685353		True				
ANR	685393	CFGExitNode	EXIT		685353		True				
ANR	685394	Symbol	c		685353						
ANR	685395	Symbol	r_cons_canvas_to_string		685353						
ANR	685396	Symbol	o		685353						
ANR	685397	Function	r_cons_canvas_resize	424:0:8585:9619							
ANR	685398	FunctionDef	"r_cons_canvas_resize (RConsCanvas * c , int w , int h)"		685397	0					
ANR	685399	CompoundStatement		424:61:8646:9619	685397	0					
ANR	685400	IfStatement	if ( ! c || w < 0 )		685397	0					
ANR	685401	Condition	! c || w < 0	425:5:8653:8663	685397	0	True				
ANR	685402	OrExpression	! c || w < 0		685397	0		||			
ANR	685403	UnaryOperationExpression	! c		685397	0					
ANR	685404	UnaryOperator	!		685397	0					
ANR	685405	Identifier	c		685397	1					
ANR	685406	RelationalExpression	w < 0		685397	1		<			
ANR	685407	Identifier	w		685397	0					
ANR	685408	PrimaryExpression	0		685397	1					
ANR	685409	CompoundStatement		2:18:19:19	685397	1					
ANR	685410	ReturnStatement	return false ;	426:2:8670:8682	685397	0	True				
ANR	685411	Identifier	false		685397	0					
ANR	685412	IdentifierDeclStatement	"int * newblen = realloc ( c -> blen , sizeof * c -> blen * h ) ;"	428:1:8688:8741	685397	1	True				
ANR	685413	IdentifierDecl	"* newblen = realloc ( c -> blen , sizeof * c -> blen * h )"		685397	0					
ANR	685414	IdentifierDeclType	int *		685397	0					
ANR	685415	Identifier	newblen		685397	1					
ANR	685416	AssignmentExpression	"* newblen = realloc ( c -> blen , sizeof * c -> blen * h )"		685397	2		=			
ANR	685417	Identifier	newblen		685397	0					
ANR	685418	CallExpression	"realloc ( c -> blen , sizeof * c -> blen * h )"		685397	1					
ANR	685419	Callee	realloc		685397	0					
ANR	685420	Identifier	realloc		685397	0					
ANR	685421	ArgumentList	c -> blen		685397	1					
ANR	685422	Argument	c -> blen		685397	0					
ANR	685423	PtrMemberAccess	c -> blen		685397	0					
ANR	685424	Identifier	c		685397	0					
ANR	685425	Identifier	blen		685397	1					
ANR	685426	Argument	sizeof * c -> blen * h		685397	1					
ANR	685427	MultiplicativeExpression	sizeof * c -> blen * h		685397	0		*			
ANR	685428	SizeofExpression	sizeof * c -> blen		685397	0					
ANR	685429	Sizeof	sizeof		685397	0					
ANR	685430	UnaryOperationExpression	* c -> blen		685397	1					
ANR	685431	UnaryOperator	*		685397	0					
ANR	685432	PtrMemberAccess	c -> blen		685397	1					
ANR	685433	Identifier	c		685397	0					
ANR	685434	Identifier	blen		685397	1					
ANR	685435	Identifier	h		685397	1					
ANR	685436	IfStatement	if ( ! newblen )		685397	2					
ANR	685437	Condition	! newblen	429:5:8748:8755	685397	0	True				
ANR	685438	UnaryOperationExpression	! newblen		685397	0					
ANR	685439	UnaryOperator	!		685397	0					
ANR	685440	Identifier	newblen		685397	1					
ANR	685441	CompoundStatement		6:15:111:111	685397	1					
ANR	685442	ExpressionStatement	r_cons_canvas_free ( c )	430:2:8762:8784	685397	0	True				
ANR	685443	CallExpression	r_cons_canvas_free ( c )		685397	0					
ANR	685444	Callee	r_cons_canvas_free		685397	0					
ANR	685445	Identifier	r_cons_canvas_free		685397	0					
ANR	685446	ArgumentList	c		685397	1					
ANR	685447	Argument	c		685397	0					
ANR	685448	Identifier	c		685397	0					
ANR	685449	ReturnStatement	return false ;	431:2:8788:8800	685397	1	True				
ANR	685450	Identifier	false		685397	0					
ANR	685451	ExpressionStatement	c -> blen = newblen	433:1:8806:8823	685397	3	True				
ANR	685452	AssignmentExpression	c -> blen = newblen		685397	0		=			
ANR	685453	PtrMemberAccess	c -> blen		685397	0					
ANR	685454	Identifier	c		685397	0					
ANR	685455	Identifier	blen		685397	1					
ANR	685456	Identifier	newblen		685397	1					
ANR	685457	IdentifierDeclStatement	"int * newbsize = realloc ( c -> bsize , sizeof * c -> bsize * h ) ;"	434:1:8826:8882	685397	4	True				
ANR	685458	IdentifierDecl	"* newbsize = realloc ( c -> bsize , sizeof * c -> bsize * h )"		685397	0					
ANR	685459	IdentifierDeclType	int *		685397	0					
ANR	685460	Identifier	newbsize		685397	1					
ANR	685461	AssignmentExpression	"* newbsize = realloc ( c -> bsize , sizeof * c -> bsize * h )"		685397	2		=			
ANR	685462	Identifier	newbsize		685397	0					
ANR	685463	CallExpression	"realloc ( c -> bsize , sizeof * c -> bsize * h )"		685397	1					
ANR	685464	Callee	realloc		685397	0					
ANR	685465	Identifier	realloc		685397	0					
ANR	685466	ArgumentList	c -> bsize		685397	1					
ANR	685467	Argument	c -> bsize		685397	0					
ANR	685468	PtrMemberAccess	c -> bsize		685397	0					
ANR	685469	Identifier	c		685397	0					
ANR	685470	Identifier	bsize		685397	1					
ANR	685471	Argument	sizeof * c -> bsize * h		685397	1					
ANR	685472	MultiplicativeExpression	sizeof * c -> bsize * h		685397	0		*			
ANR	685473	SizeofExpression	sizeof * c -> bsize		685397	0					
ANR	685474	Sizeof	sizeof		685397	0					
ANR	685475	UnaryOperationExpression	* c -> bsize		685397	1					
ANR	685476	UnaryOperator	*		685397	0					
ANR	685477	PtrMemberAccess	c -> bsize		685397	1					
ANR	685478	Identifier	c		685397	0					
ANR	685479	Identifier	bsize		685397	1					
ANR	685480	Identifier	h		685397	1					
ANR	685481	IfStatement	if ( ! newbsize )		685397	5					
ANR	685482	Condition	! newbsize	435:5:8889:8897	685397	0	True				
ANR	685483	UnaryOperationExpression	! newbsize		685397	0					
ANR	685484	UnaryOperator	!		685397	0					
ANR	685485	Identifier	newbsize		685397	1					
ANR	685486	CompoundStatement		12:16:253:253	685397	1					
ANR	685487	ExpressionStatement	r_cons_canvas_free ( c )	436:2:8904:8926	685397	0	True				
ANR	685488	CallExpression	r_cons_canvas_free ( c )		685397	0					
ANR	685489	Callee	r_cons_canvas_free		685397	0					
ANR	685490	Identifier	r_cons_canvas_free		685397	0					
ANR	685491	ArgumentList	c		685397	1					
ANR	685492	Argument	c		685397	0					
ANR	685493	Identifier	c		685397	0					
ANR	685494	ReturnStatement	return false ;	437:2:8930:8942	685397	1	True				
ANR	685495	Identifier	false		685397	0					
ANR	685496	ExpressionStatement	c -> bsize = newbsize	439:1:8948:8967	685397	6	True				
ANR	685497	AssignmentExpression	c -> bsize = newbsize		685397	0		=			
ANR	685498	PtrMemberAccess	c -> bsize		685397	0					
ANR	685499	Identifier	c		685397	0					
ANR	685500	Identifier	bsize		685397	1					
ANR	685501	Identifier	newbsize		685397	1					
ANR	685502	IdentifierDeclStatement	"char * * newb = realloc ( c -> b , sizeof * c -> b * h ) ;"	440:1:8970:9016	685397	7	True				
ANR	685503	IdentifierDecl	"* * newb = realloc ( c -> b , sizeof * c -> b * h )"		685397	0					
ANR	685504	IdentifierDeclType	char * *		685397	0					
ANR	685505	Identifier	newb		685397	1					
ANR	685506	AssignmentExpression	"* * newb = realloc ( c -> b , sizeof * c -> b * h )"		685397	2		=			
ANR	685507	Identifier	newb		685397	0					
ANR	685508	CallExpression	"realloc ( c -> b , sizeof * c -> b * h )"		685397	1					
ANR	685509	Callee	realloc		685397	0					
ANR	685510	Identifier	realloc		685397	0					
ANR	685511	ArgumentList	c -> b		685397	1					
ANR	685512	Argument	c -> b		685397	0					
ANR	685513	PtrMemberAccess	c -> b		685397	0					
ANR	685514	Identifier	c		685397	0					
ANR	685515	Identifier	b		685397	1					
ANR	685516	Argument	sizeof * c -> b * h		685397	1					
ANR	685517	MultiplicativeExpression	sizeof * c -> b * h		685397	0		*			
ANR	685518	SizeofExpression	sizeof * c -> b		685397	0					
ANR	685519	Sizeof	sizeof		685397	0					
ANR	685520	UnaryOperationExpression	* c -> b		685397	1					
ANR	685521	UnaryOperator	*		685397	0					
ANR	685522	PtrMemberAccess	c -> b		685397	1					
ANR	685523	Identifier	c		685397	0					
ANR	685524	Identifier	b		685397	1					
ANR	685525	Identifier	h		685397	1					
ANR	685526	IfStatement	if ( ! newb )		685397	8					
ANR	685527	Condition	! newb	441:5:9023:9027	685397	0	True				
ANR	685528	UnaryOperationExpression	! newb		685397	0					
ANR	685529	UnaryOperator	!		685397	0					
ANR	685530	Identifier	newb		685397	1					
ANR	685531	CompoundStatement		18:12:383:383	685397	1					
ANR	685532	ExpressionStatement	r_cons_canvas_free ( c )	442:2:9034:9056	685397	0	True				
ANR	685533	CallExpression	r_cons_canvas_free ( c )		685397	0					
ANR	685534	Callee	r_cons_canvas_free		685397	0					
ANR	685535	Identifier	r_cons_canvas_free		685397	0					
ANR	685536	ArgumentList	c		685397	1					
ANR	685537	Argument	c		685397	0					
ANR	685538	Identifier	c		685397	0					
ANR	685539	ReturnStatement	return false ;	443:2:9060:9072	685397	1	True				
ANR	685540	Identifier	false		685397	0					
ANR	685541	ExpressionStatement	c -> b = newb	445:1:9078:9089	685397	9	True				
ANR	685542	AssignmentExpression	c -> b = newb		685397	0		=			
ANR	685543	PtrMemberAccess	c -> b		685397	0					
ANR	685544	Identifier	c		685397	0					
ANR	685545	Identifier	b		685397	1					
ANR	685546	Identifier	newb		685397	1					
ANR	685547	IdentifierDeclStatement	int i ;	446:1:9092:9097	685397	10	True				
ANR	685548	IdentifierDecl	i		685397	0					
ANR	685549	IdentifierDeclType	int		685397	0					
ANR	685550	Identifier	i		685397	1					
ANR	685551	IdentifierDeclStatement	char * newline = NULL ;	447:1:9100:9120	685397	11	True				
ANR	685552	IdentifierDecl	* newline = NULL		685397	0					
ANR	685553	IdentifierDeclType	char *		685397	0					
ANR	685554	Identifier	newline		685397	1					
ANR	685555	AssignmentExpression	* newline = NULL		685397	2		=			
ANR	685556	Identifier	NULL		685397	0					
ANR	685557	Identifier	NULL		685397	1					
ANR	685558	ForStatement	for ( i = 0 ; i < h ; i ++ )		685397	12					
ANR	685559	ForInit	i = 0 ;	448:6:9128:9133	685397	0	True				
ANR	685560	AssignmentExpression	i = 0		685397	0		=			
ANR	685561	Identifier	i		685397	0					
ANR	685562	PrimaryExpression	0		685397	1					
ANR	685563	Condition	i < h	448:13:9135:9139	685397	1	True				
ANR	685564	RelationalExpression	i < h		685397	0		<			
ANR	685565	Identifier	i		685397	0					
ANR	685566	Identifier	h		685397	1					
ANR	685567	PostIncDecOperationExpression	i ++	448:20:9142:9144	685397	2	True				
ANR	685568	Identifier	i		685397	0					
ANR	685569	IncDec	++		685397	1					
ANR	685570	CompoundStatement		25:25:500:500	685397	3					
ANR	685571	IfStatement	if ( i < c -> h )		685397	0					
ANR	685572	Condition	i < c -> h	449:6:9155:9162	685397	0	True				
ANR	685573	RelationalExpression	i < c -> h		685397	0		<			
ANR	685574	Identifier	i		685397	0					
ANR	685575	PtrMemberAccess	c -> h		685397	1					
ANR	685576	Identifier	c		685397	0					
ANR	685577	Identifier	h		685397	1					
ANR	685578	CompoundStatement		26:16:518:518	685397	1					
ANR	685579	ExpressionStatement	"newline = realloc ( c -> b [ i ] , sizeof * c -> b [ i ] * ( w + 1 ) )"	450:3:9170:9224	685397	0	True				
ANR	685580	AssignmentExpression	"newline = realloc ( c -> b [ i ] , sizeof * c -> b [ i ] * ( w + 1 ) )"		685397	0		=			
ANR	685581	Identifier	newline		685397	0					
ANR	685582	CallExpression	"realloc ( c -> b [ i ] , sizeof * c -> b [ i ] * ( w + 1 ) )"		685397	1					
ANR	685583	Callee	realloc		685397	0					
ANR	685584	Identifier	realloc		685397	0					
ANR	685585	ArgumentList	c -> b [ i ]		685397	1					
ANR	685586	Argument	c -> b [ i ]		685397	0					
ANR	685587	ArrayIndexing	c -> b [ i ]		685397	0					
ANR	685588	PtrMemberAccess	c -> b		685397	0					
ANR	685589	Identifier	c		685397	0					
ANR	685590	Identifier	b		685397	1					
ANR	685591	Identifier	i		685397	1					
ANR	685592	Argument	sizeof * c -> b [ i ] * ( w + 1 )		685397	1					
ANR	685593	MultiplicativeExpression	sizeof * c -> b [ i ] * ( w + 1 )		685397	0		*			
ANR	685594	SizeofExpression	sizeof * c -> b [ i ]		685397	0					
ANR	685595	Sizeof	sizeof		685397	0					
ANR	685596	UnaryOperationExpression	* c -> b [ i ]		685397	1					
ANR	685597	UnaryOperator	*		685397	0					
ANR	685598	ArrayIndexing	c -> b [ i ]		685397	1					
ANR	685599	PtrMemberAccess	c -> b		685397	0					
ANR	685600	Identifier	c		685397	0					
ANR	685601	Identifier	b		685397	1					
ANR	685602	Identifier	i		685397	1					
ANR	685603	AdditiveExpression	w + 1		685397	1		+			
ANR	685604	Identifier	w		685397	0					
ANR	685605	PrimaryExpression	1		685397	1					
ANR	685606	ElseStatement	else		685397	0					
ANR	685607	CompoundStatement		28:9:588:588	685397	0					
ANR	685608	ExpressionStatement	newline = malloc ( ( w + 1 ) )	452:3:9240:9266	685397	0	True				
ANR	685609	AssignmentExpression	newline = malloc ( ( w + 1 ) )		685397	0		=			
ANR	685610	Identifier	newline		685397	0					
ANR	685611	CallExpression	malloc ( ( w + 1 ) )		685397	1					
ANR	685612	Callee	malloc		685397	0					
ANR	685613	Identifier	malloc		685397	0					
ANR	685614	ArgumentList	w + 1		685397	1					
ANR	685615	Argument	w + 1		685397	0					
ANR	685616	AdditiveExpression	w + 1		685397	0		+			
ANR	685617	Identifier	w		685397	0					
ANR	685618	PrimaryExpression	1		685397	1					
ANR	685619	ExpressionStatement	c -> blen [ i ] = w	454:2:9274:9288	685397	1	True				
ANR	685620	AssignmentExpression	c -> blen [ i ] = w		685397	0		=			
ANR	685621	ArrayIndexing	c -> blen [ i ]		685397	0					
ANR	685622	PtrMemberAccess	c -> blen		685397	0					
ANR	685623	Identifier	c		685397	0					
ANR	685624	Identifier	blen		685397	1					
ANR	685625	Identifier	i		685397	1					
ANR	685626	Identifier	w		685397	1					
ANR	685627	ExpressionStatement	c -> bsize [ i ] = w + 1	455:2:9292:9311	685397	2	True				
ANR	685628	AssignmentExpression	c -> bsize [ i ] = w + 1		685397	0		=			
ANR	685629	ArrayIndexing	c -> bsize [ i ]		685397	0					
ANR	685630	PtrMemberAccess	c -> bsize		685397	0					
ANR	685631	Identifier	c		685397	0					
ANR	685632	Identifier	bsize		685397	1					
ANR	685633	Identifier	i		685397	1					
ANR	685634	AdditiveExpression	w + 1		685397	1		+			
ANR	685635	Identifier	w		685397	0					
ANR	685636	PrimaryExpression	1		685397	1					
ANR	685637	IfStatement	if ( ! newline )		685397	3					
ANR	685638	Condition	! newline	456:6:9319:9326	685397	0	True				
ANR	685639	UnaryOperationExpression	! newline		685397	0					
ANR	685640	UnaryOperator	!		685397	0					
ANR	685641	Identifier	newline		685397	1					
ANR	685642	CompoundStatement		34:3:687:692	685397	1					
ANR	685643	IdentifierDeclStatement	int j ;	457:3:9334:9339	685397	0	True				
ANR	685644	IdentifierDecl	j		685397	0					
ANR	685645	IdentifierDeclType	int		685397	0					
ANR	685646	Identifier	j		685397	1					
ANR	685647	ForStatement	for ( j = 0 ; j <= i ; j ++ )		685397	1					
ANR	685648	ForInit	j = 0 ;	458:8:9349:9354	685397	0	True				
ANR	685649	AssignmentExpression	j = 0		685397	0		=			
ANR	685650	Identifier	j		685397	0					
ANR	685651	PrimaryExpression	0		685397	1					
ANR	685652	Condition	j <= i	458:15:9356:9361	685397	1	True				
ANR	685653	RelationalExpression	j <= i		685397	0		<=			
ANR	685654	Identifier	j		685397	0					
ANR	685655	Identifier	i		685397	1					
ANR	685656	PostIncDecOperationExpression	j ++	458:23:9364:9366	685397	2	True				
ANR	685657	Identifier	j		685397	0					
ANR	685658	IncDec	++		685397	1					
ANR	685659	CompoundStatement		35:28:722:722	685397	3					
ANR	685660	ExpressionStatement	free ( c -> b [ i ] )	459:4:9375:9389	685397	0	True				
ANR	685661	CallExpression	free ( c -> b [ i ] )		685397	0					
ANR	685662	Callee	free		685397	0					
ANR	685663	Identifier	free		685397	0					
ANR	685664	ArgumentList	c -> b [ i ]		685397	1					
ANR	685665	Argument	c -> b [ i ]		685397	0					
ANR	685666	ArrayIndexing	c -> b [ i ]		685397	0					
ANR	685667	PtrMemberAccess	c -> b		685397	0					
ANR	685668	Identifier	c		685397	0					
ANR	685669	Identifier	b		685397	1					
ANR	685670	Identifier	i		685397	1					
ANR	685671	ExpressionStatement	ht_up_free ( c -> attrs )	461:3:9399:9420	685397	2	True				
ANR	685672	CallExpression	ht_up_free ( c -> attrs )		685397	0					
ANR	685673	Callee	ht_up_free		685397	0					
ANR	685674	Identifier	ht_up_free		685397	0					
ANR	685675	ArgumentList	c -> attrs		685397	1					
ANR	685676	Argument	c -> attrs		685397	0					
ANR	685677	PtrMemberAccess	c -> attrs		685397	0					
ANR	685678	Identifier	c		685397	0					
ANR	685679	Identifier	attrs		685397	1					
ANR	685680	ExpressionStatement	free ( c -> blen )	462:3:9425:9439	685397	3	True				
ANR	685681	CallExpression	free ( c -> blen )		685397	0					
ANR	685682	Callee	free		685397	0					
ANR	685683	Identifier	free		685397	0					
ANR	685684	ArgumentList	c -> blen		685397	1					
ANR	685685	Argument	c -> blen		685397	0					
ANR	685686	PtrMemberAccess	c -> blen		685397	0					
ANR	685687	Identifier	c		685397	0					
ANR	685688	Identifier	blen		685397	1					
ANR	685689	ExpressionStatement	free ( c -> bsize )	463:3:9444:9459	685397	4	True				
ANR	685690	CallExpression	free ( c -> bsize )		685397	0					
ANR	685691	Callee	free		685397	0					
ANR	685692	Identifier	free		685397	0					
ANR	685693	ArgumentList	c -> bsize		685397	1					
ANR	685694	Argument	c -> bsize		685397	0					
ANR	685695	PtrMemberAccess	c -> bsize		685397	0					
ANR	685696	Identifier	c		685397	0					
ANR	685697	Identifier	bsize		685397	1					
ANR	685698	ExpressionStatement	free ( c -> b )	464:3:9464:9475	685397	5	True				
ANR	685699	CallExpression	free ( c -> b )		685397	0					
ANR	685700	Callee	free		685397	0					
ANR	685701	Identifier	free		685397	0					
ANR	685702	ArgumentList	c -> b		685397	1					
ANR	685703	Argument	c -> b		685397	0					
ANR	685704	PtrMemberAccess	c -> b		685397	0					
ANR	685705	Identifier	c		685397	0					
ANR	685706	Identifier	b		685397	1					
ANR	685707	ExpressionStatement	free ( c )	465:3:9480:9488	685397	6	True				
ANR	685708	CallExpression	free ( c )		685397	0					
ANR	685709	Callee	free		685397	0					
ANR	685710	Identifier	free		685397	0					
ANR	685711	ArgumentList	c		685397	1					
ANR	685712	Argument	c		685397	0					
ANR	685713	Identifier	c		685397	0					
ANR	685714	ReturnStatement	return false ;	466:3:9493:9505	685397	7	True				
ANR	685715	Identifier	false		685397	0					
ANR	685716	ExpressionStatement	c -> b [ i ] = newline	468:2:9513:9530	685397	4	True				
ANR	685717	AssignmentExpression	c -> b [ i ] = newline		685397	0		=			
ANR	685718	ArrayIndexing	c -> b [ i ]		685397	0					
ANR	685719	PtrMemberAccess	c -> b		685397	0					
ANR	685720	Identifier	c		685397	0					
ANR	685721	Identifier	b		685397	1					
ANR	685722	Identifier	i		685397	1					
ANR	685723	Identifier	newline		685397	1					
ANR	685724	ExpressionStatement	c -> w = w	470:1:9536:9544	685397	13	True				
ANR	685725	AssignmentExpression	c -> w = w		685397	0		=			
ANR	685726	PtrMemberAccess	c -> w		685397	0					
ANR	685727	Identifier	c		685397	0					
ANR	685728	Identifier	w		685397	1					
ANR	685729	Identifier	w		685397	1					
ANR	685730	ExpressionStatement	c -> h = h	471:1:9547:9555	685397	14	True				
ANR	685731	AssignmentExpression	c -> h = h		685397	0		=			
ANR	685732	PtrMemberAccess	c -> h		685397	0					
ANR	685733	Identifier	c		685397	0					
ANR	685734	Identifier	h		685397	1					
ANR	685735	Identifier	h		685397	1					
ANR	685736	ExpressionStatement	c -> x = 0	472:1:9558:9566	685397	15	True				
ANR	685737	AssignmentExpression	c -> x = 0		685397	0		=			
ANR	685738	PtrMemberAccess	c -> x		685397	0					
ANR	685739	Identifier	c		685397	0					
ANR	685740	Identifier	x		685397	1					
ANR	685741	PrimaryExpression	0		685397	1					
ANR	685742	ExpressionStatement	c -> y = 0	473:1:9569:9577	685397	16	True				
ANR	685743	AssignmentExpression	c -> y = 0		685397	0		=			
ANR	685744	PtrMemberAccess	c -> y		685397	0					
ANR	685745	Identifier	c		685397	0					
ANR	685746	Identifier	y		685397	1					
ANR	685747	PrimaryExpression	0		685397	1					
ANR	685748	ExpressionStatement	r_cons_canvas_clear ( c )	474:1:9580:9603	685397	17	True				
ANR	685749	CallExpression	r_cons_canvas_clear ( c )		685397	0					
ANR	685750	Callee	r_cons_canvas_clear		685397	0					
ANR	685751	Identifier	r_cons_canvas_clear		685397	0					
ANR	685752	ArgumentList	c		685397	1					
ANR	685753	Argument	c		685397	0					
ANR	685754	Identifier	c		685397	0					
ANR	685755	ReturnStatement	return true ;	475:1:9606:9617	685397	18	True				
ANR	685756	Identifier	true		685397	0					
ANR	685757	ReturnType	R_API int		685397	1					
ANR	685758	Identifier	r_cons_canvas_resize		685397	2					
ANR	685759	ParameterList	"RConsCanvas * c , int w , int h"		685397	3					
ANR	685760	Parameter	RConsCanvas * c	424:31:8616:8629	685397	0	True				
ANR	685761	ParameterType	RConsCanvas *		685397	0					
ANR	685762	Identifier	c		685397	1					
ANR	685763	Parameter	int w	424:47:8632:8636	685397	1	True				
ANR	685764	ParameterType	int		685397	0					
ANR	685765	Identifier	w		685397	1					
ANR	685766	Parameter	int h	424:54:8639:8643	685397	2	True				
ANR	685767	ParameterType	int		685397	0					
ANR	685768	Identifier	h		685397	1					
ANR	685769	CFGEntryNode	ENTRY		685397		True				
ANR	685770	CFGExitNode	EXIT		685397		True				
ANR	685771	Symbol	newbsize		685397						
ANR	685772	Symbol	* c -> b		685397						
ANR	685773	Symbol	* c -> blen		685397						
ANR	685774	Symbol	realloc		685397						
ANR	685775	Symbol	c -> bsize		685397						
ANR	685776	Symbol	newblen		685397						
ANR	685777	Symbol	newline		685397						
ANR	685778	Symbol	c -> blen		685397						
ANR	685779	Symbol	c -> b		685397						
ANR	685780	Symbol	c -> h		685397						
ANR	685781	Symbol	malloc		685397						
ANR	685782	Symbol	* * i		685397						
ANR	685783	Symbol	c		685397						
ANR	685784	Symbol	NULL		685397						
ANR	685785	Symbol	c -> attrs		685397						
ANR	685786	Symbol	* * c -> b		685397						
ANR	685787	Symbol	h		685397						
ANR	685788	Symbol	false		685397						
ANR	685789	Symbol	* * c		685397						
ANR	685790	Symbol	i		685397						
ANR	685791	Symbol	j		685397						
ANR	685792	Symbol	* c		685397						
ANR	685793	Symbol	c -> w		685397						
ANR	685794	Symbol	c -> x		685397						
ANR	685795	Symbol	c -> y		685397						
ANR	685796	Symbol	newb		685397						
ANR	685797	Symbol	* i		685397						
ANR	685798	Symbol	w		685397						
ANR	685799	Symbol	true		685397						
ANR	685800	Symbol	* c -> b [ i ]		685397						
ANR	685801	Symbol	* c -> bsize		685397						
ANR	685802	Symbol	* * * c		685397						
ANR	685803	Function	r_cons_canvas_circle	480:0:9658:10256							
ANR	685804	FunctionDef	"r_cons_canvas_circle (RConsCanvas * c , int x , int y , int w , int h , const char * color)"		685803	0					
ANR	685805	CompoundStatement		480:95:9753:10256	685803	0					
ANR	685806	IfStatement	if ( color )		685803	0					
ANR	685807	Condition	color	481:5:9760:9764	685803	0	True				
ANR	685808	Identifier	color		685803	0					
ANR	685809	CompoundStatement		2:12:13:13	685803	1					
ANR	685810	ExpressionStatement	c -> attr = color	482:2:9771:9786	685803	0	True				
ANR	685811	AssignmentExpression	c -> attr = color		685803	0		=			
ANR	685812	PtrMemberAccess	c -> attr		685803	0					
ANR	685813	Identifier	c		685803	0					
ANR	685814	Identifier	attr		685803	1					
ANR	685815	Identifier	color		685803	1					
ANR	685816	IdentifierDeclStatement	double xfactor = 1 ;	484:1:9792:9810	685803	1	True				
ANR	685817	IdentifierDecl	xfactor = 1		685803	0					
ANR	685818	IdentifierDeclType	double		685803	0					
ANR	685819	Identifier	xfactor		685803	1					
ANR	685820	AssignmentExpression	xfactor = 1		685803	2		=			
ANR	685821	Identifier	xfactor		685803	0					
ANR	685822	PrimaryExpression	1		685803	1					
ANR	685823	IdentifierDeclStatement	double yfactor = ( double ) h / 24 ;	485:1:9838:9869	685803	2	True				
ANR	685824	IdentifierDecl	yfactor = ( double ) h / 24		685803	0					
ANR	685825	IdentifierDeclType	double		685803	0					
ANR	685826	Identifier	yfactor		685803	1					
ANR	685827	AssignmentExpression	yfactor = ( double ) h / 24		685803	2		=			
ANR	685828	Identifier	yfactor		685803	0					
ANR	685829	MultiplicativeExpression	( double ) h / 24		685803	1		/			
ANR	685830	CastExpression	( double ) h		685803	0					
ANR	685831	CastTarget	double		685803	0					
ANR	685832	Identifier	h		685803	1					
ANR	685833	PrimaryExpression	24		685803	1					
ANR	685834	IdentifierDeclStatement	double size = w ;	486:1:9890:9905	685803	3	True				
ANR	685835	IdentifierDecl	size = w		685803	0					
ANR	685836	IdentifierDeclType	double		685803	0					
ANR	685837	Identifier	size		685803	1					
ANR	685838	AssignmentExpression	size = w		685803	2		=			
ANR	685839	Identifier	w		685803	0					
ANR	685840	Identifier	w		685803	1					
ANR	685841	IdentifierDeclStatement	float a = 0.0 ;	487:1:9908:9921	685803	4	True				
ANR	685842	IdentifierDecl	a = 0.0		685803	0					
ANR	685843	IdentifierDeclType	float		685803	0					
ANR	685844	Identifier	a		685803	1					
ANR	685845	AssignmentExpression	a = 0.0		685803	2		=			
ANR	685846	Identifier	a		685803	0					
ANR	685847	PrimaryExpression	0.0		685803	1					
ANR	685848	IdentifierDeclStatement	double s = size / 2 ;	488:1:9924:9943	685803	5	True				
ANR	685849	IdentifierDecl	s = size / 2		685803	0					
ANR	685850	IdentifierDeclType	double		685803	0					
ANR	685851	Identifier	s		685803	1					
ANR	685852	AssignmentExpression	s = size / 2		685803	2		=			
ANR	685853	Identifier	s		685803	0					
ANR	685854	MultiplicativeExpression	size / 2		685803	1		/			
ANR	685855	Identifier	size		685803	0					
ANR	685856	PrimaryExpression	2		685803	1					
ANR	685857	WhileStatement	while ( a < ( 2 * PI ) )		685803	6					
ANR	685858	Condition	a < ( 2 * PI )	489:8:9953:9964	685803	0	True				
ANR	685859	RelationalExpression	a < ( 2 * PI )		685803	0		<			
ANR	685860	Identifier	a		685803	0					
ANR	685861	MultiplicativeExpression	2 * PI		685803	1		*			
ANR	685862	PrimaryExpression	2		685803	0					
ANR	685863	Identifier	PI		685803	1					
ANR	685864	CompoundStatement		16:2:379:409	685803	1					
ANR	685865	IdentifierDeclStatement	double sa = r_num_sin ( a ) ;	490:2:9971:9996	685803	0	True				
ANR	685866	IdentifierDecl	sa = r_num_sin ( a )		685803	0					
ANR	685867	IdentifierDeclType	double		685803	0					
ANR	685868	Identifier	sa		685803	1					
ANR	685869	AssignmentExpression	sa = r_num_sin ( a )		685803	2		=			
ANR	685870	Identifier	sa		685803	0					
ANR	685871	CallExpression	r_num_sin ( a )		685803	1					
ANR	685872	Callee	r_num_sin		685803	0					
ANR	685873	Identifier	r_num_sin		685803	0					
ANR	685874	ArgumentList	a		685803	1					
ANR	685875	Argument	a		685803	0					
ANR	685876	Identifier	a		685803	0					
ANR	685877	IdentifierDeclStatement	double ca = r_num_cos ( a ) ;	491:2:10000:10025	685803	1	True				
ANR	685878	IdentifierDecl	ca = r_num_cos ( a )		685803	0					
ANR	685879	IdentifierDeclType	double		685803	0					
ANR	685880	Identifier	ca		685803	1					
ANR	685881	AssignmentExpression	ca = r_num_cos ( a )		685803	2		=			
ANR	685882	Identifier	ca		685803	0					
ANR	685883	CallExpression	r_num_cos ( a )		685803	1					
ANR	685884	Callee	r_num_cos		685803	0					
ANR	685885	Identifier	r_num_cos		685803	0					
ANR	685886	ArgumentList	a		685803	1					
ANR	685887	Argument	a		685803	0					
ANR	685888	Identifier	a		685803	0					
ANR	685889	IdentifierDeclStatement	double cx = s * ca + ( size / 2 ) ;	492:2:10029:10060	685803	2	True				
ANR	685890	IdentifierDecl	cx = s * ca + ( size / 2 )		685803	0					
ANR	685891	IdentifierDeclType	double		685803	0					
ANR	685892	Identifier	cx		685803	1					
ANR	685893	AssignmentExpression	cx = s * ca + ( size / 2 )		685803	2		=			
ANR	685894	Identifier	cx		685803	0					
ANR	685895	AdditiveExpression	s * ca + ( size / 2 )		685803	1		+			
ANR	685896	MultiplicativeExpression	s * ca		685803	0		*			
ANR	685897	Identifier	s		685803	0					
ANR	685898	Identifier	ca		685803	1					
ANR	685899	MultiplicativeExpression	size / 2		685803	1		/			
ANR	685900	Identifier	size		685803	0					
ANR	685901	PrimaryExpression	2		685803	1					
ANR	685902	IdentifierDeclStatement	double cy = s * sa + ( size / 4 ) ;	493:2:10064:10095	685803	3	True				
ANR	685903	IdentifierDecl	cy = s * sa + ( size / 4 )		685803	0					
ANR	685904	IdentifierDeclType	double		685803	0					
ANR	685905	Identifier	cy		685803	1					
ANR	685906	AssignmentExpression	cy = s * sa + ( size / 4 )		685803	2		=			
ANR	685907	Identifier	cy		685803	0					
ANR	685908	AdditiveExpression	s * sa + ( size / 4 )		685803	1		+			
ANR	685909	MultiplicativeExpression	s * sa		685803	0		*			
ANR	685910	Identifier	s		685803	0					
ANR	685911	Identifier	sa		685803	1					
ANR	685912	MultiplicativeExpression	size / 4		685803	1		/			
ANR	685913	Identifier	size		685803	0					
ANR	685914	PrimaryExpression	4		685803	1					
ANR	685915	IdentifierDeclStatement	int X = x + ( xfactor * cx ) - 2 ;	494:2:10099:10129	685803	4	True				
ANR	685916	IdentifierDecl	X = x + ( xfactor * cx ) - 2		685803	0					
ANR	685917	IdentifierDeclType	int		685803	0					
ANR	685918	Identifier	X		685803	1					
ANR	685919	AssignmentExpression	X = x + ( xfactor * cx ) - 2		685803	2		=			
ANR	685920	Identifier	X		685803	0					
ANR	685921	AdditiveExpression	x + ( xfactor * cx ) - 2		685803	1		+			
ANR	685922	Identifier	x		685803	0					
ANR	685923	AdditiveExpression	( xfactor * cx ) - 2		685803	1		-			
ANR	685924	MultiplicativeExpression	xfactor * cx		685803	0		*			
ANR	685925	Identifier	xfactor		685803	0					
ANR	685926	Identifier	cx		685803	1					
ANR	685927	PrimaryExpression	2		685803	1					
ANR	685928	IdentifierDeclStatement	int Y = y + ( ( yfactor / 2 ) * cy ) ;	495:2:10133:10163	685803	5	True				
ANR	685929	IdentifierDecl	Y = y + ( ( yfactor / 2 ) * cy )		685803	0					
ANR	685930	IdentifierDeclType	int		685803	0					
ANR	685931	Identifier	Y		685803	1					
ANR	685932	AssignmentExpression	Y = y + ( ( yfactor / 2 ) * cy )		685803	2		=			
ANR	685933	Identifier	Y		685803	0					
ANR	685934	AdditiveExpression	y + ( ( yfactor / 2 ) * cy )		685803	1		+			
ANR	685935	Identifier	y		685803	0					
ANR	685936	MultiplicativeExpression	( yfactor / 2 ) * cy		685803	1		*			
ANR	685937	MultiplicativeExpression	yfactor / 2		685803	0		/			
ANR	685938	Identifier	yfactor		685803	0					
ANR	685939	PrimaryExpression	2		685803	1					
ANR	685940	Identifier	cy		685803	1					
ANR	685941	IfStatement	"if ( G ( X , Y ) )"		685803	6					
ANR	685942	Condition	"G ( X , Y )"	496:6:10171:10178	685803	0	True				
ANR	685943	CallExpression	"G ( X , Y )"		685803	0					
ANR	685944	Callee	G		685803	0					
ANR	685945	Identifier	G		685803	0					
ANR	685946	ArgumentList	X		685803	1					
ANR	685947	Argument	X		685803	0					
ANR	685948	Identifier	X		685803	0					
ANR	685949	Argument	Y		685803	1					
ANR	685950	Identifier	Y		685803	0					
ANR	685951	CompoundStatement		17:16:427:427	685803	1					
ANR	685952	ExpressionStatement	"W ( ""="" )"	497:3:10186:10193	685803	0	True				
ANR	685953	CallExpression	"W ( ""="" )"		685803	0					
ANR	685954	Callee	W		685803	0					
ANR	685955	Identifier	W		685803	0					
ANR	685956	ArgumentList	"""="""		685803	1					
ANR	685957	Argument	"""="""		685803	0					
ANR	685958	PrimaryExpression	"""="""		685803	0					
ANR	685959	ExpressionStatement	a += 0.1	499:2:10201:10209	685803	7	True				
ANR	685960	AssignmentExpression	a += 0.1		685803	0		+=			
ANR	685961	Identifier	a		685803	0					
ANR	685962	PrimaryExpression	0.1		685803	1					
ANR	685963	IfStatement	if ( color )		685803	7					
ANR	685964	Condition	color	501:5:10219:10223	685803	0	True				
ANR	685965	Identifier	color		685803	0					
ANR	685966	CompoundStatement		22:12:472:472	685803	1					
ANR	685967	ExpressionStatement	c -> attr = Color_RESET	502:2:10230:10251	685803	0	True				
ANR	685968	AssignmentExpression	c -> attr = Color_RESET		685803	0		=			
ANR	685969	PtrMemberAccess	c -> attr		685803	0					
ANR	685970	Identifier	c		685803	0					
ANR	685971	Identifier	attr		685803	1					
ANR	685972	Identifier	Color_RESET		685803	1					
ANR	685973	ReturnType	R_API void		685803	1					
ANR	685974	Identifier	r_cons_canvas_circle		685803	2					
ANR	685975	ParameterList	"RConsCanvas * c , int x , int y , int w , int h , const char * color"		685803	3					
ANR	685976	Parameter	RConsCanvas * c	480:32:9690:9703	685803	0	True				
ANR	685977	ParameterType	RConsCanvas *		685803	0					
ANR	685978	Identifier	c		685803	1					
ANR	685979	Parameter	int x	480:48:9706:9710	685803	1	True				
ANR	685980	ParameterType	int		685803	0					
ANR	685981	Identifier	x		685803	1					
ANR	685982	Parameter	int y	480:55:9713:9717	685803	2	True				
ANR	685983	ParameterType	int		685803	0					
ANR	685984	Identifier	y		685803	1					
ANR	685985	Parameter	int w	480:62:9720:9724	685803	3	True				
ANR	685986	ParameterType	int		685803	0					
ANR	685987	Identifier	w		685803	1					
ANR	685988	Parameter	int h	480:69:9727:9731	685803	4	True				
ANR	685989	ParameterType	int		685803	0					
ANR	685990	Identifier	h		685803	1					
ANR	685991	Parameter	const char * color	480:76:9734:9750	685803	5	True				
ANR	685992	ParameterType	const char *		685803	0					
ANR	685993	Identifier	color		685803	1					
ANR	685994	CFGEntryNode	ENTRY		685803		True				
ANR	685995	CFGExitNode	EXIT		685803		True				
ANR	685996	Symbol	a		685803						
ANR	685997	Symbol	c		685803						
ANR	685998	Symbol	color		685803						
ANR	685999	Symbol	G		685803						
ANR	686000	Symbol	h		685803						
ANR	686001	Symbol	Color_RESET		685803						
ANR	686002	Symbol	r_num_cos		685803						
ANR	686003	Symbol	* c		685803						
ANR	686004	Symbol	yfactor		685803						
ANR	686005	Symbol	sa		685803						
ANR	686006	Symbol	c -> attr		685803						
ANR	686007	Symbol	s		685803						
ANR	686008	Symbol	size		685803						
ANR	686009	Symbol	cx		685803						
ANR	686010	Symbol	cy		685803						
ANR	686011	Symbol	w		685803						
ANR	686012	Symbol	x		685803						
ANR	686013	Symbol	xfactor		685803						
ANR	686014	Symbol	r_num_sin		685803						
ANR	686015	Symbol	X		685803						
ANR	686016	Symbol	y		685803						
ANR	686017	Symbol	PI		685803						
ANR	686018	Symbol	Y		685803						
ANR	686019	Symbol	ca		685803						
ANR	686020	Function	r_cons_canvas_box	506:0:10259:11946							
ANR	686021	FunctionDef	"r_cons_canvas_box (RConsCanvas * c , int x , int y , int w , int h , const char * color)"		686020	0					
ANR	686022	CompoundStatement		506:92:10351:11946	686020	0					
ANR	686023	IdentifierDeclStatement	"const char * hline = useUtf8 ? RUNECODESTR_LINE_HORIZ : ""-"" ;"	507:1:10354:10411	686020	0	True				
ANR	686024	IdentifierDecl	"* hline = useUtf8 ? RUNECODESTR_LINE_HORIZ : ""-"""		686020	0					
ANR	686025	IdentifierDeclType	const char *		686020	0					
ANR	686026	Identifier	hline		686020	1					
ANR	686027	AssignmentExpression	"* hline = useUtf8 ? RUNECODESTR_LINE_HORIZ : ""-"""		686020	2		=			
ANR	686028	Identifier	hline		686020	0					
ANR	686029	ConditionalExpression	"useUtf8 ? RUNECODESTR_LINE_HORIZ : ""-"""		686020	1					
ANR	686030	Condition	useUtf8		686020	0					
ANR	686031	Identifier	useUtf8		686020	0					
ANR	686032	Identifier	RUNECODESTR_LINE_HORIZ		686020	1					
ANR	686033	PrimaryExpression	"""-"""		686020	2					
ANR	686034	IdentifierDeclStatement	"const char * vtmp = useUtf8 ? RUNECODESTR_LINE_VERT : ""|"" ;"	508:1:10414:10469	686020	1	True				
ANR	686035	IdentifierDecl	"* vtmp = useUtf8 ? RUNECODESTR_LINE_VERT : ""|"""		686020	0					
ANR	686036	IdentifierDeclType	const char *		686020	0					
ANR	686037	Identifier	vtmp		686020	1					
ANR	686038	AssignmentExpression	"* vtmp = useUtf8 ? RUNECODESTR_LINE_VERT : ""|"""		686020	2		=			
ANR	686039	Identifier	vtmp		686020	0					
ANR	686040	ConditionalExpression	"useUtf8 ? RUNECODESTR_LINE_VERT : ""|"""		686020	1					
ANR	686041	Condition	useUtf8		686020	0					
ANR	686042	Identifier	useUtf8		686020	0					
ANR	686043	Identifier	RUNECODESTR_LINE_VERT		686020	1					
ANR	686044	PrimaryExpression	"""|"""		686020	2					
ANR	686045	IdentifierDeclStatement	RStrBuf * vline = r_strbuf_new ( NULL ) ;	509:1:10472:10508	686020	2	True				
ANR	686046	IdentifierDecl	* vline = r_strbuf_new ( NULL )		686020	0					
ANR	686047	IdentifierDeclType	RStrBuf *		686020	0					
ANR	686048	Identifier	vline		686020	1					
ANR	686049	AssignmentExpression	* vline = r_strbuf_new ( NULL )		686020	2		=			
ANR	686050	Identifier	vline		686020	0					
ANR	686051	CallExpression	r_strbuf_new ( NULL )		686020	1					
ANR	686052	Callee	r_strbuf_new		686020	0					
ANR	686053	Identifier	r_strbuf_new		686020	0					
ANR	686054	ArgumentList	NULL		686020	1					
ANR	686055	Argument	NULL		686020	0					
ANR	686056	Identifier	NULL		686020	0					
ANR	686057	Statement	r_strbuf_appendf	510:1:10511:10526	686020	3	True				
ANR	686058	Statement	(	510:18:10528:10528	686020	4	True				
ANR	686059	Statement	vline	510:19:10529:10533	686020	5	True				
ANR	686060	Statement	","	510:24:10534:10534	686020	6	True				
ANR	686061	Statement	Color_RESET	510:26:10536:10546	686020	7	True				
ANR	686062	Statement	"""%s%s"""	510:37:10547:10552	686020	8	True				
ANR	686063	Statement	","	510:43:10553:10553	686020	9	True				
ANR	686064	Statement	color	510:45:10555:10559	686020	10	True				
ANR	686065	Statement	","	510:50:10560:10560	686020	11	True				
ANR	686066	Statement	vtmp	510:52:10562:10565	686020	12	True				
ANR	686067	Statement	)	510:56:10566:10566	686020	13	True				
ANR	686068	ExpressionStatement		510:57:10567:10567	686020	14	True				
ANR	686069	IdentifierDeclStatement	"const char * tl_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TL : RUNECODESTR_CORNER_TL ) : ""."" ;"	511:1:10570:10678	686020	15	True				
ANR	686070	IdentifierDecl	"* tl_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TL : RUNECODESTR_CORNER_TL ) : ""."""		686020	0					
ANR	686071	IdentifierDeclType	const char *		686020	0					
ANR	686072	Identifier	tl_corner		686020	1					
ANR	686073	AssignmentExpression	"* tl_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TL : RUNECODESTR_CORNER_TL ) : ""."""		686020	2		=			
ANR	686074	Identifier	tl_corner		686020	0					
ANR	686075	ConditionalExpression	"useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TL : RUNECODESTR_CORNER_TL ) : ""."""		686020	1					
ANR	686076	Condition	useUtf8		686020	0					
ANR	686077	Identifier	useUtf8		686020	0					
ANR	686078	ConditionalExpression	useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TL : RUNECODESTR_CORNER_TL		686020	1					
ANR	686079	Condition	useUtf8Curvy		686020	0					
ANR	686080	Identifier	useUtf8Curvy		686020	0					
ANR	686081	Identifier	RUNECODESTR_CURVE_CORNER_TL		686020	1					
ANR	686082	Identifier	RUNECODESTR_CORNER_TL		686020	2					
ANR	686083	PrimaryExpression	"""."""		686020	2					
ANR	686084	IdentifierDeclStatement	"const char * tr_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TR : RUNECODESTR_CORNER_TR ) : ""."" ;"	512:1:10681:10789	686020	16	True				
ANR	686085	IdentifierDecl	"* tr_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TR : RUNECODESTR_CORNER_TR ) : ""."""		686020	0					
ANR	686086	IdentifierDeclType	const char *		686020	0					
ANR	686087	Identifier	tr_corner		686020	1					
ANR	686088	AssignmentExpression	"* tr_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TR : RUNECODESTR_CORNER_TR ) : ""."""		686020	2		=			
ANR	686089	Identifier	tr_corner		686020	0					
ANR	686090	ConditionalExpression	"useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TR : RUNECODESTR_CORNER_TR ) : ""."""		686020	1					
ANR	686091	Condition	useUtf8		686020	0					
ANR	686092	Identifier	useUtf8		686020	0					
ANR	686093	ConditionalExpression	useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_TR : RUNECODESTR_CORNER_TR		686020	1					
ANR	686094	Condition	useUtf8Curvy		686020	0					
ANR	686095	Identifier	useUtf8Curvy		686020	0					
ANR	686096	Identifier	RUNECODESTR_CURVE_CORNER_TR		686020	1					
ANR	686097	Identifier	RUNECODESTR_CORNER_TR		686020	2					
ANR	686098	PrimaryExpression	"""."""		686020	2					
ANR	686099	IdentifierDeclStatement	"const char * bl_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BL : RUNECODESTR_CORNER_BL ) : ""`"" ;"	513:1:10792:10900	686020	17	True				
ANR	686100	IdentifierDecl	"* bl_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BL : RUNECODESTR_CORNER_BL ) : ""`"""		686020	0					
ANR	686101	IdentifierDeclType	const char *		686020	0					
ANR	686102	Identifier	bl_corner		686020	1					
ANR	686103	AssignmentExpression	"* bl_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BL : RUNECODESTR_CORNER_BL ) : ""`"""		686020	2		=			
ANR	686104	Identifier	bl_corner		686020	0					
ANR	686105	ConditionalExpression	"useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BL : RUNECODESTR_CORNER_BL ) : ""`"""		686020	1					
ANR	686106	Condition	useUtf8		686020	0					
ANR	686107	Identifier	useUtf8		686020	0					
ANR	686108	ConditionalExpression	useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BL : RUNECODESTR_CORNER_BL		686020	1					
ANR	686109	Condition	useUtf8Curvy		686020	0					
ANR	686110	Identifier	useUtf8Curvy		686020	0					
ANR	686111	Identifier	RUNECODESTR_CURVE_CORNER_BL		686020	1					
ANR	686112	Identifier	RUNECODESTR_CORNER_BL		686020	2					
ANR	686113	PrimaryExpression	"""`"""		686020	2					
ANR	686114	IdentifierDeclStatement	"const char * br_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BR : RUNECODESTR_CORNER_BR ) : ""'"" ;"	514:1:10903:11011	686020	18	True				
ANR	686115	IdentifierDecl	"* br_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BR : RUNECODESTR_CORNER_BR ) : ""'"""		686020	0					
ANR	686116	IdentifierDeclType	const char *		686020	0					
ANR	686117	Identifier	br_corner		686020	1					
ANR	686118	AssignmentExpression	"* br_corner = useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BR : RUNECODESTR_CORNER_BR ) : ""'"""		686020	2		=			
ANR	686119	Identifier	br_corner		686020	0					
ANR	686120	ConditionalExpression	"useUtf8 ? ( useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BR : RUNECODESTR_CORNER_BR ) : ""'"""		686020	1					
ANR	686121	Condition	useUtf8		686020	0					
ANR	686122	Identifier	useUtf8		686020	0					
ANR	686123	ConditionalExpression	useUtf8Curvy ? RUNECODESTR_CURVE_CORNER_BR : RUNECODESTR_CORNER_BR		686020	1					
ANR	686124	Condition	useUtf8Curvy		686020	0					
ANR	686125	Identifier	useUtf8Curvy		686020	0					
ANR	686126	Identifier	RUNECODESTR_CURVE_CORNER_BR		686020	1					
ANR	686127	Identifier	RUNECODESTR_CORNER_BR		686020	2					
ANR	686128	PrimaryExpression	"""'"""		686020	2					
ANR	686129	IdentifierDeclStatement	"int i , x_mod ;"	515:1:11014:11026	686020	19	True				
ANR	686130	IdentifierDecl	i		686020	0					
ANR	686131	IdentifierDeclType	int		686020	0					
ANR	686132	Identifier	i		686020	1					
ANR	686133	IdentifierDecl	x_mod		686020	1					
ANR	686134	IdentifierDeclType	int		686020	0					
ANR	686135	Identifier	x_mod		686020	1					
ANR	686136	IdentifierDeclStatement	int roundcorners = 0 ;	516:1:11029:11049	686020	20	True				
ANR	686137	IdentifierDecl	roundcorners = 0		686020	0					
ANR	686138	IdentifierDeclType	int		686020	0					
ANR	686139	Identifier	roundcorners		686020	1					
ANR	686140	AssignmentExpression	roundcorners = 0		686020	2		=			
ANR	686141	Identifier	roundcorners		686020	0					
ANR	686142	PrimaryExpression	0		686020	1					
ANR	686143	IdentifierDeclStatement	"char * row = NULL , * row_ptr ;"	517:1:11052:11078	686020	21	True				
ANR	686144	IdentifierDecl	* row = NULL		686020	0					
ANR	686145	IdentifierDeclType	char *		686020	0					
ANR	686146	Identifier	row		686020	1					
ANR	686147	AssignmentExpression	* row = NULL		686020	2		=			
ANR	686148	Identifier	NULL		686020	0					
ANR	686149	Identifier	NULL		686020	1					
ANR	686150	IdentifierDecl	* row_ptr		686020	1					
ANR	686151	IdentifierDeclType	char *		686020	0					
ANR	686152	Identifier	row_ptr		686020	1					
ANR	686153	IfStatement	if ( w < 1 || h < 1 )		686020	22					
ANR	686154	Condition	w < 1 || h < 1	519:5:11086:11099	686020	0	True				
ANR	686155	OrExpression	w < 1 || h < 1		686020	0		||			
ANR	686156	RelationalExpression	w < 1		686020	0		<			
ANR	686157	Identifier	w		686020	0					
ANR	686158	PrimaryExpression	1		686020	1					
ANR	686159	RelationalExpression	h < 1		686020	1		<			
ANR	686160	Identifier	h		686020	0					
ANR	686161	PrimaryExpression	1		686020	1					
ANR	686162	CompoundStatement		14:21:750:750	686020	1					
ANR	686163	ReturnStatement	return ;	520:2:11106:11112	686020	0	True				
ANR	686164	IfStatement	if ( color )		686020	23					
ANR	686165	Condition	color	522:5:11122:11126	686020	0	True				
ANR	686166	Identifier	color		686020	0					
ANR	686167	CompoundStatement		17:12:777:777	686020	1					
ANR	686168	ExpressionStatement	c -> attr = color	523:2:11133:11148	686020	0	True				
ANR	686169	AssignmentExpression	c -> attr = color		686020	0		=			
ANR	686170	PtrMemberAccess	c -> attr		686020	0					
ANR	686171	Identifier	c		686020	0					
ANR	686172	Identifier	attr		686020	1					
ANR	686173	Identifier	color		686020	1					
ANR	686174	IfStatement	if ( ! c -> color )		686020	24					
ANR	686175	Condition	! c -> color	525:5:11158:11166	686020	0	True				
ANR	686176	UnaryOperationExpression	! c -> color		686020	0					
ANR	686177	UnaryOperator	!		686020	0					
ANR	686178	PtrMemberAccess	c -> color		686020	1					
ANR	686179	Identifier	c		686020	0					
ANR	686180	Identifier	color		686020	1					
ANR	686181	CompoundStatement		20:16:817:817	686020	1					
ANR	686182	ExpressionStatement	c -> attr = Color_RESET	526:2:11173:11194	686020	0	True				
ANR	686183	AssignmentExpression	c -> attr = Color_RESET		686020	0		=			
ANR	686184	PtrMemberAccess	c -> attr		686020	0					
ANR	686185	Identifier	c		686020	0					
ANR	686186	Identifier	attr		686020	1					
ANR	686187	Identifier	Color_RESET		686020	1					
ANR	686188	ExpressionStatement	row = malloc ( w + 1 )	528:1:11200:11220	686020	25	True				
ANR	686189	AssignmentExpression	row = malloc ( w + 1 )		686020	0		=			
ANR	686190	Identifier	row		686020	0					
ANR	686191	CallExpression	malloc ( w + 1 )		686020	1					
ANR	686192	Callee	malloc		686020	0					
ANR	686193	Identifier	malloc		686020	0					
ANR	686194	ArgumentList	w + 1		686020	1					
ANR	686195	Argument	w + 1		686020	0					
ANR	686196	AdditiveExpression	w + 1		686020	0		+			
ANR	686197	Identifier	w		686020	0					
ANR	686198	PrimaryExpression	1		686020	1					
ANR	686199	IfStatement	if ( ! row )		686020	26					
ANR	686200	Condition	! row	529:5:11227:11230	686020	0	True				
ANR	686201	UnaryOperationExpression	! row		686020	0					
ANR	686202	UnaryOperator	!		686020	0					
ANR	686203	Identifier	row		686020	1					
ANR	686204	CompoundStatement		24:11:881:881	686020	1					
ANR	686205	ReturnStatement	return ;	530:2:11237:11243	686020	0	True				
ANR	686206	ExpressionStatement	row [ 0 ] = roundcorners ? '.' : tl_corner [ 0 ]	532:1:11249:11289	686020	27	True				
ANR	686207	AssignmentExpression	row [ 0 ] = roundcorners ? '.' : tl_corner [ 0 ]		686020	0		=			
ANR	686208	ArrayIndexing	row [ 0 ]		686020	0					
ANR	686209	Identifier	row		686020	0					
ANR	686210	PrimaryExpression	0		686020	1					
ANR	686211	ConditionalExpression	roundcorners ? '.' : tl_corner [ 0 ]		686020	1					
ANR	686212	Condition	roundcorners		686020	0					
ANR	686213	Identifier	roundcorners		686020	0					
ANR	686214	PrimaryExpression	'.'		686020	1					
ANR	686215	ArrayIndexing	tl_corner [ 0 ]		686020	2					
ANR	686216	Identifier	tl_corner		686020	0					
ANR	686217	PrimaryExpression	0		686020	1					
ANR	686218	IfStatement	if ( w > 2 )		686020	28					
ANR	686219	Condition	w > 2	533:5:11296:11300	686020	0	True				
ANR	686220	RelationalExpression	w > 2		686020	0		>			
ANR	686221	Identifier	w		686020	0					
ANR	686222	PrimaryExpression	2		686020	1					
ANR	686223	CompoundStatement		28:12:951:951	686020	1					
ANR	686224	ExpressionStatement	"memset ( row + 1 , hline [ 0 ] , w - 2 )"	534:2:11307:11340	686020	0	True				
ANR	686225	CallExpression	"memset ( row + 1 , hline [ 0 ] , w - 2 )"		686020	0					
ANR	686226	Callee	memset		686020	0					
ANR	686227	Identifier	memset		686020	0					
ANR	686228	ArgumentList	row + 1		686020	1					
ANR	686229	Argument	row + 1		686020	0					
ANR	686230	AdditiveExpression	row + 1		686020	0		+			
ANR	686231	Identifier	row		686020	0					
ANR	686232	PrimaryExpression	1		686020	1					
ANR	686233	Argument	hline [ 0 ]		686020	1					
ANR	686234	ArrayIndexing	hline [ 0 ]		686020	0					
ANR	686235	Identifier	hline		686020	0					
ANR	686236	PrimaryExpression	0		686020	1					
ANR	686237	Argument	w - 2		686020	2					
ANR	686238	AdditiveExpression	w - 2		686020	0		-			
ANR	686239	Identifier	w		686020	0					
ANR	686240	PrimaryExpression	2		686020	1					
ANR	686241	IfStatement	if ( w > 1 )		686020	29					
ANR	686242	Condition	w > 1	536:5:11350:11354	686020	0	True				
ANR	686243	RelationalExpression	w > 1		686020	0		>			
ANR	686244	Identifier	w		686020	0					
ANR	686245	PrimaryExpression	1		686020	1					
ANR	686246	CompoundStatement		31:12:1005:1005	686020	1					
ANR	686247	ExpressionStatement	row [ w - 1 ] = roundcorners ? '.' : tr_corner [ 0 ]	537:2:11361:11405	686020	0	True				
ANR	686248	AssignmentExpression	row [ w - 1 ] = roundcorners ? '.' : tr_corner [ 0 ]		686020	0		=			
ANR	686249	ArrayIndexing	row [ w - 1 ]		686020	0					
ANR	686250	Identifier	row		686020	0					
ANR	686251	AdditiveExpression	w - 1		686020	1		-			
ANR	686252	Identifier	w		686020	0					
ANR	686253	PrimaryExpression	1		686020	1					
ANR	686254	ConditionalExpression	roundcorners ? '.' : tr_corner [ 0 ]		686020	1					
ANR	686255	Condition	roundcorners		686020	0					
ANR	686256	Identifier	roundcorners		686020	0					
ANR	686257	PrimaryExpression	'.'		686020	1					
ANR	686258	ArrayIndexing	tr_corner [ 0 ]		686020	2					
ANR	686259	Identifier	tr_corner		686020	0					
ANR	686260	PrimaryExpression	0		686020	1					
ANR	686261	ExpressionStatement	row [ w ] = 0	539:1:11411:11421	686020	30	True				
ANR	686262	AssignmentExpression	row [ w ] = 0		686020	0		=			
ANR	686263	ArrayIndexing	row [ w ]		686020	0					
ANR	686264	Identifier	row		686020	0					
ANR	686265	Identifier	w		686020	1					
ANR	686266	PrimaryExpression	0		686020	1					
ANR	686267	ExpressionStatement	row_ptr = row	541:1:11425:11438	686020	31	True				
ANR	686268	AssignmentExpression	row_ptr = row		686020	0		=			
ANR	686269	Identifier	row_ptr		686020	0					
ANR	686270	Identifier	row		686020	1					
ANR	686271	ExpressionStatement	x_mod = x	542:1:11441:11450	686020	32	True				
ANR	686272	AssignmentExpression	x_mod = x		686020	0		=			
ANR	686273	Identifier	x_mod		686020	0					
ANR	686274	Identifier	x		686020	1					
ANR	686275	IfStatement	if ( x < - c -> sx )		686020	33					
ANR	686276	Condition	x < - c -> sx	543:5:11457:11466	686020	0	True				
ANR	686277	RelationalExpression	x < - c -> sx		686020	0		<			
ANR	686278	Identifier	x		686020	0					
ANR	686279	UnaryOperationExpression	- c -> sx		686020	1					
ANR	686280	UnaryOperator	-		686020	0					
ANR	686281	PtrMemberAccess	c -> sx		686020	1					
ANR	686282	Identifier	c		686020	0					
ANR	686283	Identifier	sx		686020	1					
ANR	686284	CompoundStatement		38:17:1117:1117	686020	1					
ANR	686285	ExpressionStatement	"x_mod = R_MIN ( - c -> sx , x_mod + w )"	544:2:11473:11506	686020	0	True				
ANR	686286	AssignmentExpression	"x_mod = R_MIN ( - c -> sx , x_mod + w )"		686020	0		=			
ANR	686287	Identifier	x_mod		686020	0					
ANR	686288	CallExpression	"R_MIN ( - c -> sx , x_mod + w )"		686020	1					
ANR	686289	Callee	R_MIN		686020	0					
ANR	686290	Identifier	R_MIN		686020	0					
ANR	686291	ArgumentList	- c -> sx		686020	1					
ANR	686292	Argument	- c -> sx		686020	0					
ANR	686293	UnaryOperationExpression	- c -> sx		686020	0					
ANR	686294	UnaryOperator	-		686020	0					
ANR	686295	PtrMemberAccess	c -> sx		686020	1					
ANR	686296	Identifier	c		686020	0					
ANR	686297	Identifier	sx		686020	1					
ANR	686298	Argument	x_mod + w		686020	1					
ANR	686299	AdditiveExpression	x_mod + w		686020	0		+			
ANR	686300	Identifier	x_mod		686020	0					
ANR	686301	Identifier	w		686020	1					
ANR	686302	ExpressionStatement	row_ptr += x_mod - x	545:2:11510:11530	686020	1	True				
ANR	686303	AssignmentExpression	row_ptr += x_mod - x		686020	0		+=			
ANR	686304	Identifier	row_ptr		686020	0					
ANR	686305	AdditiveExpression	x_mod - x		686020	1		-			
ANR	686306	Identifier	x_mod		686020	0					
ANR	686307	Identifier	x		686020	1					
ANR	686308	IfStatement	"if ( G ( x_mod , y ) )"		686020	34					
ANR	686309	Condition	"G ( x_mod , y )"	547:5:11540:11551	686020	0	True				
ANR	686310	CallExpression	"G ( x_mod , y )"		686020	0					
ANR	686311	Callee	G		686020	0					
ANR	686312	Identifier	G		686020	0					
ANR	686313	ArgumentList	x_mod		686020	1					
ANR	686314	Argument	x_mod		686020	0					
ANR	686315	Identifier	x_mod		686020	0					
ANR	686316	Argument	y		686020	1					
ANR	686317	Identifier	y		686020	0					
ANR	686318	CompoundStatement		42:19:1202:1202	686020	1					
ANR	686319	ExpressionStatement	W ( row_ptr )	548:2:11558:11569	686020	0	True				
ANR	686320	CallExpression	W ( row_ptr )		686020	0					
ANR	686321	Callee	W		686020	0					
ANR	686322	Identifier	W		686020	0					
ANR	686323	ArgumentList	row_ptr		686020	1					
ANR	686324	Argument	row_ptr		686020	0					
ANR	686325	Identifier	row_ptr		686020	0					
ANR	686326	IfStatement	"if ( G ( x_mod , y + h - 1 ) )"		686020	35					
ANR	686327	Condition	"G ( x_mod , y + h - 1 )"	550:5:11579:11598	686020	0	True				
ANR	686328	CallExpression	"G ( x_mod , y + h - 1 )"		686020	0					
ANR	686329	Callee	G		686020	0					
ANR	686330	Identifier	G		686020	0					
ANR	686331	ArgumentList	x_mod		686020	1					
ANR	686332	Argument	x_mod		686020	0					
ANR	686333	Identifier	x_mod		686020	0					
ANR	686334	Argument	y + h - 1		686020	1					
ANR	686335	AdditiveExpression	y + h - 1		686020	0		+			
ANR	686336	Identifier	y		686020	0					
ANR	686337	AdditiveExpression	h - 1		686020	1		-			
ANR	686338	Identifier	h		686020	0					
ANR	686339	PrimaryExpression	1		686020	1					
ANR	686340	CompoundStatement		45:27:1249:1249	686020	1					
ANR	686341	ExpressionStatement	row [ 0 ] = roundcorners ? '\\'' : bl_corner [ 0 ]	551:2:11605:11646	686020	0	True				
ANR	686342	AssignmentExpression	row [ 0 ] = roundcorners ? '\\'' : bl_corner [ 0 ]		686020	0		=			
ANR	686343	ArrayIndexing	row [ 0 ]		686020	0					
ANR	686344	Identifier	row		686020	0					
ANR	686345	PrimaryExpression	0		686020	1					
ANR	686346	ConditionalExpression	roundcorners ? '\\'' : bl_corner [ 0 ]		686020	1					
ANR	686347	Condition	roundcorners		686020	0					
ANR	686348	Identifier	roundcorners		686020	0					
ANR	686349	PrimaryExpression	'\\''		686020	1					
ANR	686350	ArrayIndexing	bl_corner [ 0 ]		686020	2					
ANR	686351	Identifier	bl_corner		686020	0					
ANR	686352	PrimaryExpression	0		686020	1					
ANR	686353	ExpressionStatement	row [ w - 1 ] = roundcorners ? '\\'' : br_corner [ 0 ]	552:2:11650:11695	686020	1	True				
ANR	686354	AssignmentExpression	row [ w - 1 ] = roundcorners ? '\\'' : br_corner [ 0 ]		686020	0		=			
ANR	686355	ArrayIndexing	row [ w - 1 ]		686020	0					
ANR	686356	Identifier	row		686020	0					
ANR	686357	AdditiveExpression	w - 1		686020	1		-			
ANR	686358	Identifier	w		686020	0					
ANR	686359	PrimaryExpression	1		686020	1					
ANR	686360	ConditionalExpression	roundcorners ? '\\'' : br_corner [ 0 ]		686020	1					
ANR	686361	Condition	roundcorners		686020	0					
ANR	686362	Identifier	roundcorners		686020	0					
ANR	686363	PrimaryExpression	'\\''		686020	1					
ANR	686364	ArrayIndexing	br_corner [ 0 ]		686020	2					
ANR	686365	Identifier	br_corner		686020	0					
ANR	686366	PrimaryExpression	0		686020	1					
ANR	686367	ExpressionStatement	W ( row_ptr )	553:2:11699:11710	686020	2	True				
ANR	686368	CallExpression	W ( row_ptr )		686020	0					
ANR	686369	Callee	W		686020	0					
ANR	686370	Identifier	W		686020	0					
ANR	686371	ArgumentList	row_ptr		686020	1					
ANR	686372	Argument	row_ptr		686020	0					
ANR	686373	Identifier	row_ptr		686020	0					
ANR	686374	ForStatement	for ( i = 1 ; i < h - 1 ; i ++ )		686020	36					
ANR	686375	ForInit	i = 1 ;	555:6:11721:11726	686020	0	True				
ANR	686376	AssignmentExpression	i = 1		686020	0		=			
ANR	686377	Identifier	i		686020	0					
ANR	686378	PrimaryExpression	1		686020	1					
ANR	686379	Condition	i < h - 1	555:13:11728:11736	686020	1	True				
ANR	686380	RelationalExpression	i < h - 1		686020	0		<			
ANR	686381	Identifier	i		686020	0					
ANR	686382	AdditiveExpression	h - 1		686020	1		-			
ANR	686383	Identifier	h		686020	0					
ANR	686384	PrimaryExpression	1		686020	1					
ANR	686385	PostIncDecOperationExpression	i ++	555:24:11739:11741	686020	2	True				
ANR	686386	Identifier	i		686020	0					
ANR	686387	IncDec	++		686020	1					
ANR	686388	CompoundStatement		50:29:1392:1392	686020	3					
ANR	686389	IfStatement	"if ( G ( x , y + i ) )"		686020	0					
ANR	686390	Condition	"G ( x , y + i )"	556:6:11752:11763	686020	0	True				
ANR	686391	CallExpression	"G ( x , y + i )"		686020	0					
ANR	686392	Callee	G		686020	0					
ANR	686393	Identifier	G		686020	0					
ANR	686394	ArgumentList	x		686020	1					
ANR	686395	Argument	x		686020	0					
ANR	686396	Identifier	x		686020	0					
ANR	686397	Argument	y + i		686020	1					
ANR	686398	AdditiveExpression	y + i		686020	0		+			
ANR	686399	Identifier	y		686020	0					
ANR	686400	Identifier	i		686020	1					
ANR	686401	CompoundStatement		51:20:1414:1414	686020	1					
ANR	686402	ExpressionStatement	W ( r_strbuf_get ( vline ) )	557:3:11771:11795	686020	0	True				
ANR	686403	CallExpression	W ( r_strbuf_get ( vline ) )		686020	0					
ANR	686404	Callee	W		686020	0					
ANR	686405	Identifier	W		686020	0					
ANR	686406	ArgumentList	r_strbuf_get ( vline )		686020	1					
ANR	686407	Argument	r_strbuf_get ( vline )		686020	0					
ANR	686408	CallExpression	r_strbuf_get ( vline )		686020	0					
ANR	686409	Callee	r_strbuf_get		686020	0					
ANR	686410	Identifier	r_strbuf_get		686020	0					
ANR	686411	ArgumentList	vline		686020	1					
ANR	686412	Argument	vline		686020	0					
ANR	686413	Identifier	vline		686020	0					
ANR	686414	IfStatement	"if ( G ( x + w - 1 , y + i ) )"		686020	1					
ANR	686415	Condition	"G ( x + w - 1 , y + i )"	559:6:11807:11826	686020	0	True				
ANR	686416	CallExpression	"G ( x + w - 1 , y + i )"		686020	0					
ANR	686417	Callee	G		686020	0					
ANR	686418	Identifier	G		686020	0					
ANR	686419	ArgumentList	x + w - 1		686020	1					
ANR	686420	Argument	x + w - 1		686020	0					
ANR	686421	AdditiveExpression	x + w - 1		686020	0		+			
ANR	686422	Identifier	x		686020	0					
ANR	686423	AdditiveExpression	w - 1		686020	1		-			
ANR	686424	Identifier	w		686020	0					
ANR	686425	PrimaryExpression	1		686020	1					
ANR	686426	Argument	y + i		686020	1					
ANR	686427	AdditiveExpression	y + i		686020	0		+			
ANR	686428	Identifier	y		686020	0					
ANR	686429	Identifier	i		686020	1					
ANR	686430	CompoundStatement		54:28:1477:1477	686020	1					
ANR	686431	ExpressionStatement	W ( r_strbuf_get ( vline ) )	560:3:11834:11858	686020	0	True				
ANR	686432	CallExpression	W ( r_strbuf_get ( vline ) )		686020	0					
ANR	686433	Callee	W		686020	0					
ANR	686434	Identifier	W		686020	0					
ANR	686435	ArgumentList	r_strbuf_get ( vline )		686020	1					
ANR	686436	Argument	r_strbuf_get ( vline )		686020	0					
ANR	686437	CallExpression	r_strbuf_get ( vline )		686020	0					
ANR	686438	Callee	r_strbuf_get		686020	0					
ANR	686439	Identifier	r_strbuf_get		686020	0					
ANR	686440	ArgumentList	vline		686020	1					
ANR	686441	Argument	vline		686020	0					
ANR	686442	Identifier	vline		686020	0					
ANR	686443	ExpressionStatement	free ( row )	563:1:11868:11878	686020	37	True				
ANR	686444	CallExpression	free ( row )		686020	0					
ANR	686445	Callee	free		686020	0					
ANR	686446	Identifier	free		686020	0					
ANR	686447	ArgumentList	row		686020	1					
ANR	686448	Argument	row		686020	0					
ANR	686449	Identifier	row		686020	0					
ANR	686450	ExpressionStatement	r_strbuf_free ( vline )	564:1:11881:11902	686020	38	True				
ANR	686451	CallExpression	r_strbuf_free ( vline )		686020	0					
ANR	686452	Callee	r_strbuf_free		686020	0					
ANR	686453	Identifier	r_strbuf_free		686020	0					
ANR	686454	ArgumentList	vline		686020	1					
ANR	686455	Argument	vline		686020	0					
ANR	686456	Identifier	vline		686020	0					
ANR	686457	IfStatement	if ( color )		686020	39					
ANR	686458	Condition	color	565:5:11909:11913	686020	0	True				
ANR	686459	Identifier	color		686020	0					
ANR	686460	CompoundStatement		60:12:1564:1564	686020	1					
ANR	686461	ExpressionStatement	c -> attr = Color_RESET	566:2:11920:11941	686020	0	True				
ANR	686462	AssignmentExpression	c -> attr = Color_RESET		686020	0		=			
ANR	686463	PtrMemberAccess	c -> attr		686020	0					
ANR	686464	Identifier	c		686020	0					
ANR	686465	Identifier	attr		686020	1					
ANR	686466	Identifier	Color_RESET		686020	1					
ANR	686467	ReturnType	R_API void		686020	1					
ANR	686468	Identifier	r_cons_canvas_box		686020	2					
ANR	686469	ParameterList	"RConsCanvas * c , int x , int y , int w , int h , const char * color"		686020	3					
ANR	686470	Parameter	RConsCanvas * c	506:29:10288:10301	686020	0	True				
ANR	686471	ParameterType	RConsCanvas *		686020	0					
ANR	686472	Identifier	c		686020	1					
ANR	686473	Parameter	int x	506:45:10304:10308	686020	1	True				
ANR	686474	ParameterType	int		686020	0					
ANR	686475	Identifier	x		686020	1					
ANR	686476	Parameter	int y	506:52:10311:10315	686020	2	True				
ANR	686477	ParameterType	int		686020	0					
ANR	686478	Identifier	y		686020	1					
ANR	686479	Parameter	int w	506:59:10318:10322	686020	3	True				
ANR	686480	ParameterType	int		686020	0					
ANR	686481	Identifier	w		686020	1					
ANR	686482	Parameter	int h	506:66:10325:10329	686020	4	True				
ANR	686483	ParameterType	int		686020	0					
ANR	686484	Identifier	h		686020	1					
ANR	686485	Parameter	const char * color	506:73:10332:10348	686020	5	True				
ANR	686486	ParameterType	const char *		686020	0					
ANR	686487	Identifier	color		686020	1					
ANR	686488	CFGEntryNode	ENTRY		686020		True				
ANR	686489	CFGExitNode	EXIT		686020		True				
ANR	686490	Symbol	* w		686020						
ANR	686491	Symbol	color		686020						
ANR	686492	Symbol	* row		686020						
ANR	686493	Symbol	RUNECODESTR_CORNER_BL		686020						
ANR	686494	Symbol	G		686020						
ANR	686495	Symbol	bl_corner		686020						
ANR	686496	Symbol	Color_RESET		686020						
ANR	686497	Symbol	RUNECODESTR_CURVE_CORNER_TL		686020						
ANR	686498	Symbol	RUNECODESTR_CORNER_TR		686020						
ANR	686499	Symbol	br_corner		686020						
ANR	686500	Symbol	c -> sx		686020						
ANR	686501	Symbol	tl_corner		686020						
ANR	686502	Symbol	tr_corner		686020						
ANR	686503	Symbol	RUNECODESTR_LINE_HORIZ		686020						
ANR	686504	Symbol	c -> attr		686020						
ANR	686505	Symbol	useUtf8Curvy		686020						
ANR	686506	Symbol	RUNECODESTR_CORNER_TL		686020						
ANR	686507	Symbol	vtmp		686020						
ANR	686508	Symbol	vline		686020						
ANR	686509	Symbol	row		686020						
ANR	686510	Symbol	c -> color		686020						
ANR	686511	Symbol	* tl_corner		686020						
ANR	686512	Symbol	malloc		686020						
ANR	686513	Symbol	* bl_corner		686020						
ANR	686514	Symbol	c		686020						
ANR	686515	Symbol	NULL		686020						
ANR	686516	Symbol	r_strbuf_new		686020						
ANR	686517	Symbol	RUNECODESTR_CURVE_CORNER_BR		686020						
ANR	686518	Symbol	row_ptr		686020						
ANR	686519	Symbol	h		686020						
ANR	686520	Symbol	i		686020						
ANR	686521	Symbol	R_MIN		686020						
ANR	686522	Symbol	* hline		686020						
ANR	686523	Symbol	* c		686020						
ANR	686524	Symbol	* tr_corner		686020						
ANR	686525	Symbol	roundcorners		686020						
ANR	686526	Symbol	hline		686020						
ANR	686527	Symbol	RUNECODESTR_LINE_VERT		686020						
ANR	686528	Symbol	* br_corner		686020						
ANR	686529	Symbol	RUNECODESTR_CURVE_CORNER_TR		686020						
ANR	686530	Symbol	r_strbuf_get		686020						
ANR	686531	Symbol	useUtf8		686020						
ANR	686532	Symbol	w		686020						
ANR	686533	Symbol	x		686020						
ANR	686534	Symbol	y		686020						
ANR	686535	Symbol	RUNECODESTR_CURVE_CORNER_BL		686020						
ANR	686536	Symbol	x_mod		686020						
ANR	686537	Symbol	RUNECODESTR_CORNER_BR		686020						
ANR	686538	Function	r_cons_canvas_fill	570:0:11949:12240							
ANR	686539	FunctionDef	"r_cons_canvas_fill (RConsCanvas * c , int x , int y , int w , int h , char ch)"		686538	0					
ANR	686540	CompoundStatement		570:83:12032:12240	686538	0					
ANR	686541	IdentifierDeclStatement	int i ;	571:1:12035:12040	686538	0	True				
ANR	686542	IdentifierDecl	i		686538	0					
ANR	686543	IdentifierDeclType	int		686538	0					
ANR	686544	Identifier	i		686538	1					
ANR	686545	IfStatement	if ( w < 0 )		686538	1					
ANR	686546	Condition	w < 0	572:5:12047:12051	686538	0	True				
ANR	686547	RelationalExpression	w < 0		686538	0		<			
ANR	686548	Identifier	w		686538	0					
ANR	686549	PrimaryExpression	0		686538	1					
ANR	686550	CompoundStatement		3:12:21:21	686538	1					
ANR	686551	ReturnStatement	return ;	573:2:12058:12064	686538	0	True				
ANR	686552	IdentifierDeclStatement	char * row = malloc ( w + 1 ) ;	575:1:12070:12096	686538	2	True				
ANR	686553	IdentifierDecl	* row = malloc ( w + 1 )		686538	0					
ANR	686554	IdentifierDeclType	char *		686538	0					
ANR	686555	Identifier	row		686538	1					
ANR	686556	AssignmentExpression	* row = malloc ( w + 1 )		686538	2		=			
ANR	686557	Identifier	row		686538	0					
ANR	686558	CallExpression	malloc ( w + 1 )		686538	1					
ANR	686559	Callee	malloc		686538	0					
ANR	686560	Identifier	malloc		686538	0					
ANR	686561	ArgumentList	w + 1		686538	1					
ANR	686562	Argument	w + 1		686538	0					
ANR	686563	AdditiveExpression	w + 1		686538	0		+			
ANR	686564	Identifier	w		686538	0					
ANR	686565	PrimaryExpression	1		686538	1					
ANR	686566	IfStatement	if ( ! row )		686538	3					
ANR	686567	Condition	! row	576:5:12103:12106	686538	0	True				
ANR	686568	UnaryOperationExpression	! row		686538	0					
ANR	686569	UnaryOperator	!		686538	0					
ANR	686570	Identifier	row		686538	1					
ANR	686571	CompoundStatement		7:11:76:76	686538	1					
ANR	686572	ReturnStatement	return ;	577:2:12113:12119	686538	0	True				
ANR	686573	ExpressionStatement	"memset ( row , ch , w )"	579:1:12125:12144	686538	4	True				
ANR	686574	CallExpression	"memset ( row , ch , w )"		686538	0					
ANR	686575	Callee	memset		686538	0					
ANR	686576	Identifier	memset		686538	0					
ANR	686577	ArgumentList	row		686538	1					
ANR	686578	Argument	row		686538	0					
ANR	686579	Identifier	row		686538	0					
ANR	686580	Argument	ch		686538	1					
ANR	686581	Identifier	ch		686538	0					
ANR	686582	Argument	w		686538	2					
ANR	686583	Identifier	w		686538	0					
ANR	686584	ExpressionStatement	row [ w ] = 0	580:1:12147:12157	686538	5	True				
ANR	686585	AssignmentExpression	row [ w ] = 0		686538	0		=			
ANR	686586	ArrayIndexing	row [ w ]		686538	0					
ANR	686587	Identifier	row		686538	0					
ANR	686588	Identifier	w		686538	1					
ANR	686589	PrimaryExpression	0		686538	1					
ANR	686590	ForStatement	for ( i = 0 ; i < h ; i ++ )		686538	6					
ANR	686591	ForInit	i = 0 ;	581:6:12165:12170	686538	0	True				
ANR	686592	AssignmentExpression	i = 0		686538	0		=			
ANR	686593	Identifier	i		686538	0					
ANR	686594	PrimaryExpression	0		686538	1					
ANR	686595	Condition	i < h	581:13:12172:12176	686538	1	True				
ANR	686596	RelationalExpression	i < h		686538	0		<			
ANR	686597	Identifier	i		686538	0					
ANR	686598	Identifier	h		686538	1					
ANR	686599	PostIncDecOperationExpression	i ++	581:20:12179:12181	686538	2	True				
ANR	686600	Identifier	i		686538	0					
ANR	686601	IncDec	++		686538	1					
ANR	686602	CompoundStatement		12:25:151:151	686538	3					
ANR	686603	IfStatement	"if ( G ( x , y + i ) )"		686538	0					
ANR	686604	Condition	"G ( x , y + i )"	582:6:12192:12203	686538	0	True				
ANR	686605	CallExpression	"G ( x , y + i )"		686538	0					
ANR	686606	Callee	G		686538	0					
ANR	686607	Identifier	G		686538	0					
ANR	686608	ArgumentList	x		686538	1					
ANR	686609	Argument	x		686538	0					
ANR	686610	Identifier	x		686538	0					
ANR	686611	Argument	y + i		686538	1					
ANR	686612	AdditiveExpression	y + i		686538	0		+			
ANR	686613	Identifier	y		686538	0					
ANR	686614	Identifier	i		686538	1					
ANR	686615	CompoundStatement		13:20:173:173	686538	1					
ANR	686616	ExpressionStatement	W ( row )	583:3:12211:12218	686538	0	True				
ANR	686617	CallExpression	W ( row )		686538	0					
ANR	686618	Callee	W		686538	0					
ANR	686619	Identifier	W		686538	0					
ANR	686620	ArgumentList	row		686538	1					
ANR	686621	Argument	row		686538	0					
ANR	686622	Identifier	row		686538	0					
ANR	686623	ExpressionStatement	free ( row )	586:1:12228:12238	686538	7	True				
ANR	686624	CallExpression	free ( row )		686538	0					
ANR	686625	Callee	free		686538	0					
ANR	686626	Identifier	free		686538	0					
ANR	686627	ArgumentList	row		686538	1					
ANR	686628	Argument	row		686538	0					
ANR	686629	Identifier	row		686538	0					
ANR	686630	ReturnType	R_API void		686538	1					
ANR	686631	Identifier	r_cons_canvas_fill		686538	2					
ANR	686632	ParameterList	"RConsCanvas * c , int x , int y , int w , int h , char ch"		686538	3					
ANR	686633	Parameter	RConsCanvas * c	570:30:11979:11992	686538	0	True				
ANR	686634	ParameterType	RConsCanvas *		686538	0					
ANR	686635	Identifier	c		686538	1					
ANR	686636	Parameter	int x	570:46:11995:11999	686538	1	True				
ANR	686637	ParameterType	int		686538	0					
ANR	686638	Identifier	x		686538	1					
ANR	686639	Parameter	int y	570:53:12002:12006	686538	2	True				
ANR	686640	ParameterType	int		686538	0					
ANR	686641	Identifier	y		686538	1					
ANR	686642	Parameter	int w	570:60:12009:12013	686538	3	True				
ANR	686643	ParameterType	int		686538	0					
ANR	686644	Identifier	w		686538	1					
ANR	686645	Parameter	int h	570:67:12016:12020	686538	4	True				
ANR	686646	ParameterType	int		686538	0					
ANR	686647	Identifier	h		686538	1					
ANR	686648	Parameter	char ch	570:74:12023:12029	686538	5	True				
ANR	686649	ParameterType	char		686538	0					
ANR	686650	Identifier	ch		686538	1					
ANR	686651	CFGEntryNode	ENTRY		686538		True				
ANR	686652	CFGExitNode	EXIT		686538		True				
ANR	686653	Symbol	malloc		686538						
ANR	686654	Symbol	* w		686538						
ANR	686655	Symbol	c		686538						
ANR	686656	Symbol	* row		686538						
ANR	686657	Symbol	ch		686538						
ANR	686658	Symbol	w		686538						
ANR	686659	Symbol	G		686538						
ANR	686660	Symbol	x		686538						
ANR	686661	Symbol	h		686538						
ANR	686662	Symbol	y		686538						
ANR	686663	Symbol	i		686538						
ANR	686664	Symbol	row		686538						
ANR	686665	Function	r_cons_canvas_line	589:0:12243:12489							
ANR	686666	FunctionDef	"r_cons_canvas_line (RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style)"		686665	0					
ANR	686667	CompoundStatement		589:101:12344:12489	686665	0					
ANR	686668	IfStatement	if ( c -> linemode )		686665	0					
ANR	686669	Condition	c -> linemode	590:5:12351:12361	686665	0	True				
ANR	686670	PtrMemberAccess	c -> linemode		686665	0					
ANR	686671	Identifier	c		686665	0					
ANR	686672	Identifier	linemode		686665	1					
ANR	686673	CompoundStatement		2:18:19:19	686665	1					
ANR	686674	ExpressionStatement	"r_cons_canvas_line_square ( c , x , y , x2 , y2 , style )"	591:2:12368:12418	686665	0	True				
ANR	686675	CallExpression	"r_cons_canvas_line_square ( c , x , y , x2 , y2 , style )"		686665	0					
ANR	686676	Callee	r_cons_canvas_line_square		686665	0					
ANR	686677	Identifier	r_cons_canvas_line_square		686665	0					
ANR	686678	ArgumentList	c		686665	1					
ANR	686679	Argument	c		686665	0					
ANR	686680	Identifier	c		686665	0					
ANR	686681	Argument	x		686665	1					
ANR	686682	Identifier	x		686665	0					
ANR	686683	Argument	y		686665	2					
ANR	686684	Identifier	y		686665	0					
ANR	686685	Argument	x2		686665	3					
ANR	686686	Identifier	x2		686665	0					
ANR	686687	Argument	y2		686665	4					
ANR	686688	Identifier	y2		686665	0					
ANR	686689	Argument	style		686665	5					
ANR	686690	Identifier	style		686665	0					
ANR	686691	ElseStatement	else		686665	0					
ANR	686692	CompoundStatement		4:8:83:83	686665	0					
ANR	686693	ExpressionStatement	"r_cons_canvas_line_diagonal ( c , x , y , x2 , y2 , style )"	593:2:12432:12484	686665	0	True				
ANR	686694	CallExpression	"r_cons_canvas_line_diagonal ( c , x , y , x2 , y2 , style )"		686665	0					
ANR	686695	Callee	r_cons_canvas_line_diagonal		686665	0					
ANR	686696	Identifier	r_cons_canvas_line_diagonal		686665	0					
ANR	686697	ArgumentList	c		686665	1					
ANR	686698	Argument	c		686665	0					
ANR	686699	Identifier	c		686665	0					
ANR	686700	Argument	x		686665	1					
ANR	686701	Identifier	x		686665	0					
ANR	686702	Argument	y		686665	2					
ANR	686703	Identifier	y		686665	0					
ANR	686704	Argument	x2		686665	3					
ANR	686705	Identifier	x2		686665	0					
ANR	686706	Argument	y2		686665	4					
ANR	686707	Identifier	y2		686665	0					
ANR	686708	Argument	style		686665	5					
ANR	686709	Identifier	style		686665	0					
ANR	686710	ReturnType	R_API void		686665	1					
ANR	686711	Identifier	r_cons_canvas_line		686665	2					
ANR	686712	ParameterList	"RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style"		686665	3					
ANR	686713	Parameter	RConsCanvas * c	589:30:12273:12286	686665	0	True				
ANR	686714	ParameterType	RConsCanvas *		686665	0					
ANR	686715	Identifier	c		686665	1					
ANR	686716	Parameter	int x	589:46:12289:12293	686665	1	True				
ANR	686717	ParameterType	int		686665	0					
ANR	686718	Identifier	x		686665	1					
ANR	686719	Parameter	int y	589:53:12296:12300	686665	2	True				
ANR	686720	ParameterType	int		686665	0					
ANR	686721	Identifier	y		686665	1					
ANR	686722	Parameter	int x2	589:60:12303:12308	686665	3	True				
ANR	686723	ParameterType	int		686665	0					
ANR	686724	Identifier	x2		686665	1					
ANR	686725	Parameter	int y2	589:68:12311:12316	686665	4	True				
ANR	686726	ParameterType	int		686665	0					
ANR	686727	Identifier	y2		686665	1					
ANR	686728	Parameter	RCanvasLineStyle * style	589:76:12319:12341	686665	5	True				
ANR	686729	ParameterType	RCanvasLineStyle *		686665	0					
ANR	686730	Identifier	style		686665	1					
ANR	686731	CFGEntryNode	ENTRY		686665		True				
ANR	686732	CFGExitNode	EXIT		686665		True				
ANR	686733	Symbol	c		686665						
ANR	686734	Symbol	c -> linemode		686665						
ANR	686735	Symbol	x		686665						
ANR	686736	Symbol	y		686665						
ANR	686737	Symbol	y2		686665						
ANR	686738	Symbol	x2		686665						
ANR	686739	Symbol	style		686665						
ANR	686740	Symbol	* c		686665						
