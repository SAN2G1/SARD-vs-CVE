command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3566571	File	data/converged/CVE-2019-16718~_radare2/libr_bin_bobj.c								
ANR	3566572	Function	r_bin_mem_free	7:0:130:339							
ANR	3566573	FunctionDef	r_bin_mem_free (void * data)		3566572	0					
ANR	3566574	CompoundStatement		7:38:168:339	3566572	0					
ANR	3566575	IdentifierDeclStatement	RBinMem * mem = ( RBinMem * ) data ;	8:1:171:201	3566572	0	True				
ANR	3566576	IdentifierDecl	* mem = ( RBinMem * ) data		3566572	0					
ANR	3566577	IdentifierDeclType	RBinMem *		3566572	0					
ANR	3566578	Identifier	mem		3566572	1					
ANR	3566579	AssignmentExpression	* mem = ( RBinMem * ) data		3566572	2		=			
ANR	3566580	Identifier	mem		3566572	0					
ANR	3566581	CastExpression	( RBinMem * ) data		3566572	1					
ANR	3566582	CastTarget	RBinMem *		3566572	0					
ANR	3566583	Identifier	data		3566572	1					
ANR	3566584	IfStatement	if ( mem && mem -> mirrors )		3566572	1					
ANR	3566585	Condition	mem && mem -> mirrors	9:5:208:226	3566572	0	True				
ANR	3566586	AndExpression	mem && mem -> mirrors		3566572	0		&&			
ANR	3566587	Identifier	mem		3566572	0					
ANR	3566588	PtrMemberAccess	mem -> mirrors		3566572	1					
ANR	3566589	Identifier	mem		3566572	0					
ANR	3566590	Identifier	mirrors		3566572	1					
ANR	3566591	CompoundStatement		3:26:60:60	3566572	1					
ANR	3566592	ExpressionStatement	mem -> mirrors -> free = r_bin_mem_free	10:2:233:268	3566572	0	True				
ANR	3566593	AssignmentExpression	mem -> mirrors -> free = r_bin_mem_free		3566572	0		=			
ANR	3566594	PtrMemberAccess	mem -> mirrors -> free		3566572	0					
ANR	3566595	PtrMemberAccess	mem -> mirrors		3566572	0					
ANR	3566596	Identifier	mem		3566572	0					
ANR	3566597	Identifier	mirrors		3566572	1					
ANR	3566598	Identifier	free		3566572	1					
ANR	3566599	Identifier	r_bin_mem_free		3566572	1					
ANR	3566600	ExpressionStatement	r_list_free ( mem -> mirrors )	11:2:272:298	3566572	1	True				
ANR	3566601	CallExpression	r_list_free ( mem -> mirrors )		3566572	0					
ANR	3566602	Callee	r_list_free		3566572	0					
ANR	3566603	Identifier	r_list_free		3566572	0					
ANR	3566604	ArgumentList	mem -> mirrors		3566572	1					
ANR	3566605	Argument	mem -> mirrors		3566572	0					
ANR	3566606	PtrMemberAccess	mem -> mirrors		3566572	0					
ANR	3566607	Identifier	mem		3566572	0					
ANR	3566608	Identifier	mirrors		3566572	1					
ANR	3566609	ExpressionStatement	mem -> mirrors = NULL	12:2:302:321	3566572	2	True				
ANR	3566610	AssignmentExpression	mem -> mirrors = NULL		3566572	0		=			
ANR	3566611	PtrMemberAccess	mem -> mirrors		3566572	0					
ANR	3566612	Identifier	mem		3566572	0					
ANR	3566613	Identifier	mirrors		3566572	1					
ANR	3566614	Identifier	NULL		3566572	1					
ANR	3566615	ExpressionStatement	free ( mem )	14:1:327:337	3566572	2	True				
ANR	3566616	CallExpression	free ( mem )		3566572	0					
ANR	3566617	Callee	free		3566572	0					
ANR	3566618	Identifier	free		3566572	0					
ANR	3566619	ArgumentList	mem		3566572	1					
ANR	3566620	Argument	mem		3566572	0					
ANR	3566621	Identifier	mem		3566572	0					
ANR	3566622	ReturnType	R_API void		3566572	1					
ANR	3566623	Identifier	r_bin_mem_free		3566572	2					
ANR	3566624	ParameterList	void * data		3566572	3					
ANR	3566625	Parameter	void * data	7:26:156:165	3566572	0	True				
ANR	3566626	ParameterType	void *		3566572	0					
ANR	3566627	Identifier	data		3566572	1					
ANR	3566628	CFGEntryNode	ENTRY		3566572		True				
ANR	3566629	CFGExitNode	EXIT		3566572		True				
ANR	3566630	Symbol	* mem -> mirrors		3566572						
ANR	3566631	Symbol	NULL		3566572						
ANR	3566632	Symbol	data		3566572						
ANR	3566633	Symbol	mem		3566572						
ANR	3566634	Symbol	mem -> mirrors -> free		3566572						
ANR	3566635	Symbol	* * mem		3566572						
ANR	3566636	Symbol	mem -> mirrors		3566572						
ANR	3566637	Symbol	r_bin_mem_free		3566572						
ANR	3566638	Symbol	* mem		3566572						
ANR	3566639	Function	reloc_cmp	17:0:342:607							
ANR	3566640	FunctionDef	"reloc_cmp (const void * a , const RBNode * b)"		3566639	0					
ANR	3566641	CompoundStatement		17:53:395:607	3566639	0					
ANR	3566642	IdentifierDeclStatement	const RBinReloc * ar = ( const RBinReloc * ) a ;	18:1:398:440	3566639	0	True				
ANR	3566643	IdentifierDecl	* ar = ( const RBinReloc * ) a		3566639	0					
ANR	3566644	IdentifierDeclType	const RBinReloc *		3566639	0					
ANR	3566645	Identifier	ar		3566639	1					
ANR	3566646	AssignmentExpression	* ar = ( const RBinReloc * ) a		3566639	2		=			
ANR	3566647	Identifier	ar		3566639	0					
ANR	3566648	CastExpression	( const RBinReloc * ) a		3566639	1					
ANR	3566649	CastTarget	const RBinReloc *		3566639	0					
ANR	3566650	Identifier	a		3566639	1					
ANR	3566651	Statement	const	19:1:443:447	3566639	1	True				
ANR	3566652	Statement	RBinReloc	19:7:449:457	3566639	2	True				
ANR	3566653	Statement	*	19:17:459:459	3566639	3	True				
ANR	3566654	Statement	br	19:18:460:461	3566639	4	True				
ANR	3566655	Statement	=	19:21:463:463	3566639	5	True				
ANR	3566656	Statement	container_of	19:23:465:476	3566639	6	True				
ANR	3566657	Statement	(	19:36:478:478	3566639	7	True				
ANR	3566658	Statement	b	19:37:479:479	3566639	8	True				
ANR	3566659	Statement	","	19:38:480:480	3566639	9	True				
ANR	3566660	Statement	const	19:40:482:486	3566639	10	True				
ANR	3566661	Statement	RBinReloc	19:46:488:496	3566639	11	True				
ANR	3566662	Statement	","	19:55:497:497	3566639	12	True				
ANR	3566663	Statement	vrb	19:57:499:501	3566639	13	True				
ANR	3566664	Statement	)	19:60:502:502	3566639	14	True				
ANR	3566665	ExpressionStatement		19:61:503:503	3566639	15	True				
ANR	3566666	IfStatement	if ( ar -> vaddr > br -> vaddr )		3566639	16					
ANR	3566667	Condition	ar -> vaddr > br -> vaddr	20:5:510:530	3566639	0	True				
ANR	3566668	RelationalExpression	ar -> vaddr > br -> vaddr		3566639	0		>			
ANR	3566669	PtrMemberAccess	ar -> vaddr		3566639	0					
ANR	3566670	Identifier	ar		3566639	0					
ANR	3566671	Identifier	vaddr		3566639	1					
ANR	3566672	PtrMemberAccess	br -> vaddr		3566639	1					
ANR	3566673	Identifier	br		3566639	0					
ANR	3566674	Identifier	vaddr		3566639	1					
ANR	3566675	CompoundStatement		4:28:137:137	3566639	1					
ANR	3566676	ReturnStatement	return 1 ;	21:2:537:545	3566639	0	True				
ANR	3566677	PrimaryExpression	1		3566639	0					
ANR	3566678	IfStatement	if ( ar -> vaddr < br -> vaddr )		3566639	17					
ANR	3566679	Condition	ar -> vaddr < br -> vaddr	23:5:555:575	3566639	0	True				
ANR	3566680	RelationalExpression	ar -> vaddr < br -> vaddr		3566639	0		<			
ANR	3566681	PtrMemberAccess	ar -> vaddr		3566639	0					
ANR	3566682	Identifier	ar		3566639	0					
ANR	3566683	Identifier	vaddr		3566639	1					
ANR	3566684	PtrMemberAccess	br -> vaddr		3566639	1					
ANR	3566685	Identifier	br		3566639	0					
ANR	3566686	Identifier	vaddr		3566639	1					
ANR	3566687	CompoundStatement		7:28:182:182	3566639	1					
ANR	3566688	ReturnStatement	return - 1 ;	24:2:582:591	3566639	0	True				
ANR	3566689	UnaryOperationExpression	- 1		3566639	0					
ANR	3566690	UnaryOperator	-		3566639	0					
ANR	3566691	PrimaryExpression	1		3566639	1					
ANR	3566692	ReturnStatement	return 0 ;	26:1:597:605	3566639	18	True				
ANR	3566693	PrimaryExpression	0		3566639	0					
ANR	3566694	ReturnType	static int		3566639	1					
ANR	3566695	Identifier	reloc_cmp		3566639	2					
ANR	3566696	ParameterList	"const void * a , const RBNode * b"		3566639	3					
ANR	3566697	Parameter	const void * a	17:21:363:375	3566639	0	True				
ANR	3566698	ParameterType	const void *		3566639	0					
ANR	3566699	Identifier	a		3566639	1					
ANR	3566700	Parameter	const RBNode * b	17:36:378:392	3566639	1	True				
ANR	3566701	ParameterType	const RBNode *		3566639	0					
ANR	3566702	Identifier	b		3566639	1					
ANR	3566703	CFGEntryNode	ENTRY		3566639		True				
ANR	3566704	CFGExitNode	EXIT		3566639		True				
ANR	3566705	Symbol	br		3566639						
ANR	3566706	Symbol	a		3566639						
ANR	3566707	Symbol	ar		3566639						
ANR	3566708	Symbol	b		3566639						
ANR	3566709	Symbol	* ar		3566639						
ANR	3566710	Symbol	* br		3566639						
ANR	3566711	Symbol	br -> vaddr		3566639						
ANR	3566712	Symbol	ar -> vaddr		3566639						
ANR	3566713	Function	reloc_free	29:0:610:692							
ANR	3566714	FunctionDef	reloc_free (RBNode * rbn)		3566713	0					
ANR	3566715	CompoundStatement		29:36:646:692	3566713	0					
ANR	3566716	ExpressionStatement	"free ( container_of ( rbn , RBinReloc , vrb ) )"	30:1:649:690	3566713	0	True				
ANR	3566717	CallExpression	"free ( container_of ( rbn , RBinReloc , vrb ) )"		3566713	0					
ANR	3566718	Callee	free		3566713	0					
ANR	3566719	Identifier	free		3566713	0					
ANR	3566720	ArgumentList	"container_of ( rbn , RBinReloc , vrb )"		3566713	1					
ANR	3566721	Argument	"container_of ( rbn , RBinReloc , vrb )"		3566713	0					
ANR	3566722	CallExpression	"container_of ( rbn , RBinReloc , vrb )"		3566713	0					
ANR	3566723	Callee	container_of		3566713	0					
ANR	3566724	Identifier	container_of		3566713	0					
ANR	3566725	ArgumentList	rbn		3566713	1					
ANR	3566726	Argument	rbn		3566713	0					
ANR	3566727	Identifier	rbn		3566713	0					
ANR	3566728	Argument	RBinReloc		3566713	1					
ANR	3566729	Identifier	RBinReloc		3566713	0					
ANR	3566730	Argument	vrb		3566713	2					
ANR	3566731	Identifier	vrb		3566713	0					
ANR	3566732	ReturnType	static void		3566713	1					
ANR	3566733	Identifier	reloc_free		3566713	2					
ANR	3566734	ParameterList	RBNode * rbn		3566713	3					
ANR	3566735	Parameter	RBNode * rbn	29:23:633:643	3566713	0	True				
ANR	3566736	ParameterType	RBNode *		3566713	0					
ANR	3566737	Identifier	rbn		3566713	1					
ANR	3566738	CFGEntryNode	ENTRY		3566713		True				
ANR	3566739	CFGExitNode	EXIT		3566713		True				
ANR	3566740	Symbol	container_of		3566713						
ANR	3566741	Symbol	vrb		3566713						
ANR	3566742	Symbol	RBinReloc		3566713						
ANR	3566743	Symbol	rbn		3566713						
ANR	3566744	Function	object_delete_items	33:0:695:1286							
ANR	3566745	FunctionDef	object_delete_items (RBinObject * o)		3566744	0					
ANR	3566746	CompoundStatement		33:47:742:1286	3566744	0					
ANR	3566747	IdentifierDeclStatement	ut32 i = 0 ;	34:1:745:755	3566744	0	True				
ANR	3566748	IdentifierDecl	i = 0		3566744	0					
ANR	3566749	IdentifierDeclType	ut32		3566744	0					
ANR	3566750	Identifier	i		3566744	1					
ANR	3566751	AssignmentExpression	i = 0		3566744	2		=			
ANR	3566752	Identifier	i		3566744	0					
ANR	3566753	PrimaryExpression	0		3566744	1					
ANR	3566754	ExpressionStatement	r_return_if_fail ( o )	35:1:758:778	3566744	1	True				
ANR	3566755	CallExpression	r_return_if_fail ( o )		3566744	0					
ANR	3566756	Callee	r_return_if_fail		3566744	0					
ANR	3566757	Identifier	r_return_if_fail		3566744	0					
ANR	3566758	ArgumentList	o		3566744	1					
ANR	3566759	Argument	o		3566744	0					
ANR	3566760	Identifier	o		3566744	0					
ANR	3566761	ExpressionStatement	sdb_free ( o -> addr2klassmethod )	36:1:781:811	3566744	2	True				
ANR	3566762	CallExpression	sdb_free ( o -> addr2klassmethod )		3566744	0					
ANR	3566763	Callee	sdb_free		3566744	0					
ANR	3566764	Identifier	sdb_free		3566744	0					
ANR	3566765	ArgumentList	o -> addr2klassmethod		3566744	1					
ANR	3566766	Argument	o -> addr2klassmethod		3566744	0					
ANR	3566767	PtrMemberAccess	o -> addr2klassmethod		3566744	0					
ANR	3566768	Identifier	o		3566744	0					
ANR	3566769	Identifier	addr2klassmethod		3566744	1					
ANR	3566770	ExpressionStatement	r_list_free ( o -> entries )	37:1:814:838	3566744	3	True				
ANR	3566771	CallExpression	r_list_free ( o -> entries )		3566744	0					
ANR	3566772	Callee	r_list_free		3566744	0					
ANR	3566773	Identifier	r_list_free		3566744	0					
ANR	3566774	ArgumentList	o -> entries		3566744	1					
ANR	3566775	Argument	o -> entries		3566744	0					
ANR	3566776	PtrMemberAccess	o -> entries		3566744	0					
ANR	3566777	Identifier	o		3566744	0					
ANR	3566778	Identifier	entries		3566744	1					
ANR	3566779	ExpressionStatement	r_list_free ( o -> fields )	38:1:841:864	3566744	4	True				
ANR	3566780	CallExpression	r_list_free ( o -> fields )		3566744	0					
ANR	3566781	Callee	r_list_free		3566744	0					
ANR	3566782	Identifier	r_list_free		3566744	0					
ANR	3566783	ArgumentList	o -> fields		3566744	1					
ANR	3566784	Argument	o -> fields		3566744	0					
ANR	3566785	PtrMemberAccess	o -> fields		3566744	0					
ANR	3566786	Identifier	o		3566744	0					
ANR	3566787	Identifier	fields		3566744	1					
ANR	3566788	ExpressionStatement	r_list_free ( o -> imports )	39:1:867:891	3566744	5	True				
ANR	3566789	CallExpression	r_list_free ( o -> imports )		3566744	0					
ANR	3566790	Callee	r_list_free		3566744	0					
ANR	3566791	Identifier	r_list_free		3566744	0					
ANR	3566792	ArgumentList	o -> imports		3566744	1					
ANR	3566793	Argument	o -> imports		3566744	0					
ANR	3566794	PtrMemberAccess	o -> imports		3566744	0					
ANR	3566795	Identifier	o		3566744	0					
ANR	3566796	Identifier	imports		3566744	1					
ANR	3566797	ExpressionStatement	r_list_free ( o -> libs )	40:1:894:915	3566744	6	True				
ANR	3566798	CallExpression	r_list_free ( o -> libs )		3566744	0					
ANR	3566799	Callee	r_list_free		3566744	0					
ANR	3566800	Identifier	r_list_free		3566744	0					
ANR	3566801	ArgumentList	o -> libs		3566744	1					
ANR	3566802	Argument	o -> libs		3566744	0					
ANR	3566803	PtrMemberAccess	o -> libs		3566744	0					
ANR	3566804	Identifier	o		3566744	0					
ANR	3566805	Identifier	libs		3566744	1					
ANR	3566806	ExpressionStatement	"r_rbtree_free ( o -> relocs , reloc_free )"	41:1:918:955	3566744	7	True				
ANR	3566807	CallExpression	"r_rbtree_free ( o -> relocs , reloc_free )"		3566744	0					
ANR	3566808	Callee	r_rbtree_free		3566744	0					
ANR	3566809	Identifier	r_rbtree_free		3566744	0					
ANR	3566810	ArgumentList	o -> relocs		3566744	1					
ANR	3566811	Argument	o -> relocs		3566744	0					
ANR	3566812	PtrMemberAccess	o -> relocs		3566744	0					
ANR	3566813	Identifier	o		3566744	0					
ANR	3566814	Identifier	relocs		3566744	1					
ANR	3566815	Argument	reloc_free		3566744	1					
ANR	3566816	Identifier	reloc_free		3566744	0					
ANR	3566817	ExpressionStatement	r_list_free ( o -> sections )	42:1:958:983	3566744	8	True				
ANR	3566818	CallExpression	r_list_free ( o -> sections )		3566744	0					
ANR	3566819	Callee	r_list_free		3566744	0					
ANR	3566820	Identifier	r_list_free		3566744	0					
ANR	3566821	ArgumentList	o -> sections		3566744	1					
ANR	3566822	Argument	o -> sections		3566744	0					
ANR	3566823	PtrMemberAccess	o -> sections		3566744	0					
ANR	3566824	Identifier	o		3566744	0					
ANR	3566825	Identifier	sections		3566744	1					
ANR	3566826	ExpressionStatement	r_list_free ( o -> strings )	43:1:986:1010	3566744	9	True				
ANR	3566827	CallExpression	r_list_free ( o -> strings )		3566744	0					
ANR	3566828	Callee	r_list_free		3566744	0					
ANR	3566829	Identifier	r_list_free		3566744	0					
ANR	3566830	ArgumentList	o -> strings		3566744	1					
ANR	3566831	Argument	o -> strings		3566744	0					
ANR	3566832	PtrMemberAccess	o -> strings		3566744	0					
ANR	3566833	Identifier	o		3566744	0					
ANR	3566834	Identifier	strings		3566744	1					
ANR	3566835	ExpressionStatement	ht_up_free ( o -> strings_db )	44:1:1013:1039	3566744	10	True				
ANR	3566836	CallExpression	ht_up_free ( o -> strings_db )		3566744	0					
ANR	3566837	Callee	ht_up_free		3566744	0					
ANR	3566838	Identifier	ht_up_free		3566744	0					
ANR	3566839	ArgumentList	o -> strings_db		3566744	1					
ANR	3566840	Argument	o -> strings_db		3566744	0					
ANR	3566841	PtrMemberAccess	o -> strings_db		3566744	0					
ANR	3566842	Identifier	o		3566744	0					
ANR	3566843	Identifier	strings_db		3566744	1					
ANR	3566844	ExpressionStatement	r_list_free ( o -> symbols )	45:1:1042:1066	3566744	11	True				
ANR	3566845	CallExpression	r_list_free ( o -> symbols )		3566744	0					
ANR	3566846	Callee	r_list_free		3566744	0					
ANR	3566847	Identifier	r_list_free		3566744	0					
ANR	3566848	ArgumentList	o -> symbols		3566744	1					
ANR	3566849	Argument	o -> symbols		3566744	0					
ANR	3566850	PtrMemberAccess	o -> symbols		3566744	0					
ANR	3566851	Identifier	o		3566744	0					
ANR	3566852	Identifier	symbols		3566744	1					
ANR	3566853	ExpressionStatement	r_list_free ( o -> classes )	46:1:1069:1093	3566744	12	True				
ANR	3566854	CallExpression	r_list_free ( o -> classes )		3566744	0					
ANR	3566855	Callee	r_list_free		3566744	0					
ANR	3566856	Identifier	r_list_free		3566744	0					
ANR	3566857	ArgumentList	o -> classes		3566744	1					
ANR	3566858	Argument	o -> classes		3566744	0					
ANR	3566859	PtrMemberAccess	o -> classes		3566744	0					
ANR	3566860	Identifier	o		3566744	0					
ANR	3566861	Identifier	classes		3566744	1					
ANR	3566862	ExpressionStatement	ht_pp_free ( o -> classes_ht )	47:1:1096:1122	3566744	13	True				
ANR	3566863	CallExpression	ht_pp_free ( o -> classes_ht )		3566744	0					
ANR	3566864	Callee	ht_pp_free		3566744	0					
ANR	3566865	Identifier	ht_pp_free		3566744	0					
ANR	3566866	ArgumentList	o -> classes_ht		3566744	1					
ANR	3566867	Argument	o -> classes_ht		3566744	0					
ANR	3566868	PtrMemberAccess	o -> classes_ht		3566744	0					
ANR	3566869	Identifier	o		3566744	0					
ANR	3566870	Identifier	classes_ht		3566744	1					
ANR	3566871	ExpressionStatement	ht_pp_free ( o -> methods_ht )	48:1:1125:1151	3566744	14	True				
ANR	3566872	CallExpression	ht_pp_free ( o -> methods_ht )		3566744	0					
ANR	3566873	Callee	ht_pp_free		3566744	0					
ANR	3566874	Identifier	ht_pp_free		3566744	0					
ANR	3566875	ArgumentList	o -> methods_ht		3566744	1					
ANR	3566876	Argument	o -> methods_ht		3566744	0					
ANR	3566877	PtrMemberAccess	o -> methods_ht		3566744	0					
ANR	3566878	Identifier	o		3566744	0					
ANR	3566879	Identifier	methods_ht		3566744	1					
ANR	3566880	ExpressionStatement	r_list_free ( o -> lines )	49:1:1154:1176	3566744	15	True				
ANR	3566881	CallExpression	r_list_free ( o -> lines )		3566744	0					
ANR	3566882	Callee	r_list_free		3566744	0					
ANR	3566883	Identifier	r_list_free		3566744	0					
ANR	3566884	ArgumentList	o -> lines		3566744	1					
ANR	3566885	Argument	o -> lines		3566744	0					
ANR	3566886	PtrMemberAccess	o -> lines		3566744	0					
ANR	3566887	Identifier	o		3566744	0					
ANR	3566888	Identifier	lines		3566744	1					
ANR	3566889	ExpressionStatement	sdb_free ( o -> kv )	50:1:1179:1195	3566744	16	True				
ANR	3566890	CallExpression	sdb_free ( o -> kv )		3566744	0					
ANR	3566891	Callee	sdb_free		3566744	0					
ANR	3566892	Identifier	sdb_free		3566744	0					
ANR	3566893	ArgumentList	o -> kv		3566744	1					
ANR	3566894	Argument	o -> kv		3566744	0					
ANR	3566895	PtrMemberAccess	o -> kv		3566744	0					
ANR	3566896	Identifier	o		3566744	0					
ANR	3566897	Identifier	kv		3566744	1					
ANR	3566898	ExpressionStatement	r_list_free ( o -> mem )	51:1:1198:1218	3566744	17	True				
ANR	3566899	CallExpression	r_list_free ( o -> mem )		3566744	0					
ANR	3566900	Callee	r_list_free		3566744	0					
ANR	3566901	Identifier	r_list_free		3566744	0					
ANR	3566902	ArgumentList	o -> mem		3566744	1					
ANR	3566903	Argument	o -> mem		3566744	0					
ANR	3566904	PtrMemberAccess	o -> mem		3566744	0					
ANR	3566905	Identifier	o		3566744	0					
ANR	3566906	Identifier	mem		3566744	1					
ANR	3566907	ForStatement	for ( i = 0 ; i < R_BIN_SYM_LAST ; i ++ )		3566744	18					
ANR	3566908	ForInit	i = 0 ;	52:6:1226:1231	3566744	0	True				
ANR	3566909	AssignmentExpression	i = 0		3566744	0		=			
ANR	3566910	Identifier	i		3566744	0					
ANR	3566911	PrimaryExpression	0		3566744	1					
ANR	3566912	Condition	i < R_BIN_SYM_LAST	52:13:1233:1250	3566744	1	True				
ANR	3566913	RelationalExpression	i < R_BIN_SYM_LAST		3566744	0		<			
ANR	3566914	Identifier	i		3566744	0					
ANR	3566915	Identifier	R_BIN_SYM_LAST		3566744	1					
ANR	3566916	PostIncDecOperationExpression	i ++	52:33:1253:1255	3566744	2	True				
ANR	3566917	Identifier	i		3566744	0					
ANR	3566918	IncDec	++		3566744	1					
ANR	3566919	CompoundStatement		20:38:515:515	3566744	3					
ANR	3566920	ExpressionStatement	free ( o -> binsym [ i ] )	53:2:1262:1281	3566744	0	True				
ANR	3566921	CallExpression	free ( o -> binsym [ i ] )		3566744	0					
ANR	3566922	Callee	free		3566744	0					
ANR	3566923	Identifier	free		3566744	0					
ANR	3566924	ArgumentList	o -> binsym [ i ]		3566744	1					
ANR	3566925	Argument	o -> binsym [ i ]		3566744	0					
ANR	3566926	ArrayIndexing	o -> binsym [ i ]		3566744	0					
ANR	3566927	PtrMemberAccess	o -> binsym		3566744	0					
ANR	3566928	Identifier	o		3566744	0					
ANR	3566929	Identifier	binsym		3566744	1					
ANR	3566930	Identifier	i		3566744	1					
ANR	3566931	ReturnType	static void		3566744	1					
ANR	3566932	Identifier	object_delete_items		3566744	2					
ANR	3566933	ParameterList	RBinObject * o		3566744	3					
ANR	3566934	Parameter	RBinObject * o	33:32:727:739	3566744	0	True				
ANR	3566935	ParameterType	RBinObject *		3566744	0					
ANR	3566936	Identifier	o		3566744	1					
ANR	3566937	CFGEntryNode	ENTRY		3566744		True				
ANR	3566938	CFGExitNode	EXIT		3566744		True				
ANR	3566939	Symbol	o -> sections		3566744						
ANR	3566940	Symbol	o -> kv		3566744						
ANR	3566941	Symbol	R_BIN_SYM_LAST		3566744						
ANR	3566942	Symbol	* o -> binsym		3566744						
ANR	3566943	Symbol	o -> entries		3566744						
ANR	3566944	Symbol	o -> classes		3566744						
ANR	3566945	Symbol	o -> lines		3566744						
ANR	3566946	Symbol	o -> mem		3566744						
ANR	3566947	Symbol	o -> imports		3566744						
ANR	3566948	Symbol	o -> binsym		3566744						
ANR	3566949	Symbol	* * o		3566744						
ANR	3566950	Symbol	reloc_free		3566744						
ANR	3566951	Symbol	o -> libs		3566744						
ANR	3566952	Symbol	o -> methods_ht		3566744						
ANR	3566953	Symbol	o -> fields		3566744						
ANR	3566954	Symbol	o -> classes_ht		3566744						
ANR	3566955	Symbol	i		3566744						
ANR	3566956	Symbol	o -> addr2klassmethod		3566744						
ANR	3566957	Symbol	o -> symbols		3566744						
ANR	3566958	Symbol	o		3566744						
ANR	3566959	Symbol	o -> strings		3566744						
ANR	3566960	Symbol	o -> strings_db		3566744						
ANR	3566961	Symbol	* i		3566744						
ANR	3566962	Symbol	* o		3566744						
ANR	3566963	Symbol	o -> relocs		3566744						
ANR	3566964	Function	r_bin_object_free	57:0:1289:1469							
ANR	3566965	FunctionDef	r_bin_object_free (void * o_)		3566964	0					
ANR	3566966	CompoundStatement		57:54:1343:1469	3566964	0					
ANR	3566967	IdentifierDeclStatement	RBinObject * o = o_ ;	58:1:1346:1364	3566964	0	True				
ANR	3566968	IdentifierDecl	* o = o_		3566964	0					
ANR	3566969	IdentifierDeclType	RBinObject *		3566964	0					
ANR	3566970	Identifier	o		3566964	1					
ANR	3566971	AssignmentExpression	* o = o_		3566964	2		=			
ANR	3566972	Identifier	o_		3566964	0					
ANR	3566973	Identifier	o_		3566964	1					
ANR	3566974	IfStatement	if ( o )		3566964	1					
ANR	3566975	Condition	o	59:5:1371:1371	3566964	0	True				
ANR	3566976	Identifier	o		3566964	0					
ANR	3566977	CompoundStatement		3:8:30:30	3566964	1					
ANR	3566978	ExpressionStatement	free ( o -> regstate )	60:2:1378:1396	3566964	0	True				
ANR	3566979	CallExpression	free ( o -> regstate )		3566964	0					
ANR	3566980	Callee	free		3566964	0					
ANR	3566981	Identifier	free		3566964	0					
ANR	3566982	ArgumentList	o -> regstate		3566964	1					
ANR	3566983	Argument	o -> regstate		3566964	0					
ANR	3566984	PtrMemberAccess	o -> regstate		3566964	0					
ANR	3566985	Identifier	o		3566964	0					
ANR	3566986	Identifier	regstate		3566964	1					
ANR	3566987	ExpressionStatement	r_bin_info_free ( o -> info )	61:2:1400:1425	3566964	1	True				
ANR	3566988	CallExpression	r_bin_info_free ( o -> info )		3566964	0					
ANR	3566989	Callee	r_bin_info_free		3566964	0					
ANR	3566990	Identifier	r_bin_info_free		3566964	0					
ANR	3566991	ArgumentList	o -> info		3566964	1					
ANR	3566992	Argument	o -> info		3566964	0					
ANR	3566993	PtrMemberAccess	o -> info		3566964	0					
ANR	3566994	Identifier	o		3566964	0					
ANR	3566995	Identifier	info		3566964	1					
ANR	3566996	ExpressionStatement	object_delete_items ( o )	62:2:1429:1452	3566964	2	True				
ANR	3566997	CallExpression	object_delete_items ( o )		3566964	0					
ANR	3566998	Callee	object_delete_items		3566964	0					
ANR	3566999	Identifier	object_delete_items		3566964	0					
ANR	3567000	ArgumentList	o		3566964	1					
ANR	3567001	Argument	o		3566964	0					
ANR	3567002	Identifier	o		3566964	0					
ANR	3567003	ExpressionStatement	free ( o )	63:2:1456:1464	3566964	3	True				
ANR	3567004	CallExpression	free ( o )		3566964	0					
ANR	3567005	Callee	free		3566964	0					
ANR	3567006	Identifier	free		3566964	0					
ANR	3567007	ArgumentList	o		3566964	1					
ANR	3567008	Argument	o		3566964	0					
ANR	3567009	Identifier	o		3566964	0					
ANR	3567010	ReturnType	R_IPI void		3566964	1					
ANR	3567011	Identifier	r_bin_object_free		3566964	2					
ANR	3567012	ParameterList	void * o_		3566964	3					
ANR	3567013	Parameter	void * o_	57:29:1318:1340	3566964	0	True				
ANR	3567014	ParameterType	void *		3566964	0					
ANR	3567015	Identifier	o_		3566964	1					
ANR	3567016	CFGEntryNode	ENTRY		3566964		True				
ANR	3567017	CFGExitNode	EXIT		3566964		True				
ANR	3567018	Symbol	o_		3566964						
ANR	3567019	Symbol	o -> regstate		3566964						
ANR	3567020	Symbol	o -> info		3566964						
ANR	3567021	Symbol	* o		3566964						
ANR	3567022	Symbol	o		3566964						
ANR	3567023	Function	swiftField	67:0:1472:1902							
ANR	3567024	FunctionDef	"swiftField (const char * dn , const char * cn)"		3567023	0					
ANR	3567025	CompoundStatement		67:56:1528:1902	3567023	0					
ANR	3567026	IfStatement	if ( ! dn || ! cn )		3567023	0					
ANR	3567027	Condition	! dn || ! cn	68:5:1535:1544	3567023	0	True				
ANR	3567028	OrExpression	! dn || ! cn		3567023	0		||			
ANR	3567029	UnaryOperationExpression	! dn		3567023	0					
ANR	3567030	UnaryOperator	!		3567023	0					
ANR	3567031	Identifier	dn		3567023	1					
ANR	3567032	UnaryOperationExpression	! cn		3567023	1					
ANR	3567033	UnaryOperator	!		3567023	0					
ANR	3567034	Identifier	cn		3567023	1					
ANR	3567035	CompoundStatement		2:17:18:18	3567023	1					
ANR	3567036	ReturnStatement	return NULL ;	69:2:1551:1562	3567023	0	True				
ANR	3567037	Identifier	NULL		3567023	0					
ANR	3567038	IdentifierDeclStatement	"char * p = strstr ( dn , "".getter_"" ) ;"	72:1:1569:1602	3567023	1	True				
ANR	3567039	IdentifierDecl	"* p = strstr ( dn , "".getter_"" )"		3567023	0					
ANR	3567040	IdentifierDeclType	char *		3567023	0					
ANR	3567041	Identifier	p		3567023	1					
ANR	3567042	AssignmentExpression	"* p = strstr ( dn , "".getter_"" )"		3567023	2		=			
ANR	3567043	Identifier	p		3567023	0					
ANR	3567044	CallExpression	"strstr ( dn , "".getter_"" )"		3567023	1					
ANR	3567045	Callee	strstr		3567023	0					
ANR	3567046	Identifier	strstr		3567023	0					
ANR	3567047	ArgumentList	dn		3567023	1					
ANR	3567048	Argument	dn		3567023	0					
ANR	3567049	Identifier	dn		3567023	0					
ANR	3567050	Argument	""".getter_"""		3567023	1					
ANR	3567051	PrimaryExpression	""".getter_"""		3567023	0					
ANR	3567052	IfStatement	if ( ! p )		3567023	2					
ANR	3567053	Condition	! p	73:5:1609:1610	3567023	0	True				
ANR	3567054	UnaryOperationExpression	! p		3567023	0					
ANR	3567055	UnaryOperator	!		3567023	0					
ANR	3567056	Identifier	p		3567023	1					
ANR	3567057	CompoundStatement		7:9:84:84	3567023	1					
ANR	3567058	ExpressionStatement	"p = strstr ( dn , "".setter_"" )"	74:2:1617:1644	3567023	0	True				
ANR	3567059	AssignmentExpression	"p = strstr ( dn , "".setter_"" )"		3567023	0		=			
ANR	3567060	Identifier	p		3567023	0					
ANR	3567061	CallExpression	"strstr ( dn , "".setter_"" )"		3567023	1					
ANR	3567062	Callee	strstr		3567023	0					
ANR	3567063	Identifier	strstr		3567023	0					
ANR	3567064	ArgumentList	dn		3567023	1					
ANR	3567065	Argument	dn		3567023	0					
ANR	3567066	Identifier	dn		3567023	0					
ANR	3567067	Argument	""".setter_"""		3567023	1					
ANR	3567068	PrimaryExpression	""".setter_"""		3567023	0					
ANR	3567069	IfStatement	if ( ! p )		3567023	1					
ANR	3567070	Condition	! p	75:6:1652:1653	3567023	0	True				
ANR	3567071	UnaryOperationExpression	! p		3567023	0					
ANR	3567072	UnaryOperator	!		3567023	0					
ANR	3567073	Identifier	p		3567023	1					
ANR	3567074	CompoundStatement		9:10:127:127	3567023	1					
ANR	3567075	ExpressionStatement	"p = strstr ( dn , "".method_"" )"	76:3:1661:1688	3567023	0	True				
ANR	3567076	AssignmentExpression	"p = strstr ( dn , "".method_"" )"		3567023	0		=			
ANR	3567077	Identifier	p		3567023	0					
ANR	3567078	CallExpression	"strstr ( dn , "".method_"" )"		3567023	1					
ANR	3567079	Callee	strstr		3567023	0					
ANR	3567080	Identifier	strstr		3567023	0					
ANR	3567081	ArgumentList	dn		3567023	1					
ANR	3567082	Argument	dn		3567023	0					
ANR	3567083	Identifier	dn		3567023	0					
ANR	3567084	Argument	""".method_"""		3567023	1					
ANR	3567085	PrimaryExpression	""".method_"""		3567023	0					
ANR	3567086	IfStatement	if ( p )		3567023	3					
ANR	3567087	Condition	p	79:5:1702:1702	3567023	0	True				
ANR	3567088	Identifier	p		3567023	0					
ANR	3567089	CompoundStatement		14:2:180:205	3567023	1					
ANR	3567090	IdentifierDeclStatement	"char * q = strstr ( dn , cn ) ;"	80:2:1709:1734	3567023	0	True				
ANR	3567091	IdentifierDecl	"* q = strstr ( dn , cn )"		3567023	0					
ANR	3567092	IdentifierDeclType	char *		3567023	0					
ANR	3567093	Identifier	q		3567023	1					
ANR	3567094	AssignmentExpression	"* q = strstr ( dn , cn )"		3567023	2		=			
ANR	3567095	Identifier	q		3567023	0					
ANR	3567096	CallExpression	"strstr ( dn , cn )"		3567023	1					
ANR	3567097	Callee	strstr		3567023	0					
ANR	3567098	Identifier	strstr		3567023	0					
ANR	3567099	ArgumentList	dn		3567023	1					
ANR	3567100	Argument	dn		3567023	0					
ANR	3567101	Identifier	dn		3567023	0					
ANR	3567102	Argument	cn		3567023	1					
ANR	3567103	Identifier	cn		3567023	0					
ANR	3567104	IfStatement	if ( q && q [ strlen ( cn ) ] == '.' )		3567023	1					
ANR	3567105	Condition	q && q [ strlen ( cn ) ] == '.'	81:6:1742:1767	3567023	0	True				
ANR	3567106	AndExpression	q && q [ strlen ( cn ) ] == '.'		3567023	0		&&			
ANR	3567107	Identifier	q		3567023	0					
ANR	3567108	EqualityExpression	q [ strlen ( cn ) ] == '.'		3567023	1		==			
ANR	3567109	ArrayIndexing	q [ strlen ( cn ) ]		3567023	0					
ANR	3567110	Identifier	q		3567023	0					
ANR	3567111	CallExpression	strlen ( cn )		3567023	1					
ANR	3567112	Callee	strlen		3567023	0					
ANR	3567113	Identifier	strlen		3567023	0					
ANR	3567114	ArgumentList	cn		3567023	1					
ANR	3567115	Argument	cn		3567023	0					
ANR	3567116	Identifier	cn		3567023	0					
ANR	3567117	PrimaryExpression	'.'		3567023	1					
ANR	3567118	CompoundStatement		17:3:283:308	3567023	1					
ANR	3567119	ExpressionStatement	q = strdup ( q + strlen ( cn ) + 1 )	82:3:1775:1807	3567023	0	True				
ANR	3567120	AssignmentExpression	q = strdup ( q + strlen ( cn ) + 1 )		3567023	0		=			
ANR	3567121	Identifier	q		3567023	0					
ANR	3567122	CallExpression	strdup ( q + strlen ( cn ) + 1 )		3567023	1					
ANR	3567123	Callee	strdup		3567023	0					
ANR	3567124	Identifier	strdup		3567023	0					
ANR	3567125	ArgumentList	q + strlen ( cn ) + 1		3567023	1					
ANR	3567126	Argument	q + strlen ( cn ) + 1		3567023	0					
ANR	3567127	AdditiveExpression	q + strlen ( cn ) + 1		3567023	0		+			
ANR	3567128	Identifier	q		3567023	0					
ANR	3567129	AdditiveExpression	strlen ( cn ) + 1		3567023	1		+			
ANR	3567130	CallExpression	strlen ( cn )		3567023	0					
ANR	3567131	Callee	strlen		3567023	0					
ANR	3567132	Identifier	strlen		3567023	0					
ANR	3567133	ArgumentList	cn		3567023	1					
ANR	3567134	Argument	cn		3567023	0					
ANR	3567135	Identifier	cn		3567023	0					
ANR	3567136	PrimaryExpression	1		3567023	1					
ANR	3567137	IdentifierDeclStatement	"char * r = strchr ( q , '.' ) ;"	83:3:1812:1837	3567023	1	True				
ANR	3567138	IdentifierDecl	"* r = strchr ( q , '.' )"		3567023	0					
ANR	3567139	IdentifierDeclType	char *		3567023	0					
ANR	3567140	Identifier	r		3567023	1					
ANR	3567141	AssignmentExpression	"* r = strchr ( q , '.' )"		3567023	2		=			
ANR	3567142	Identifier	r		3567023	0					
ANR	3567143	CallExpression	"strchr ( q , '.' )"		3567023	1					
ANR	3567144	Callee	strchr		3567023	0					
ANR	3567145	Identifier	strchr		3567023	0					
ANR	3567146	ArgumentList	q		3567023	1					
ANR	3567147	Argument	q		3567023	0					
ANR	3567148	Identifier	q		3567023	0					
ANR	3567149	Argument	'.'		3567023	1					
ANR	3567150	PrimaryExpression	'.'		3567023	0					
ANR	3567151	IfStatement	if ( r )		3567023	2					
ANR	3567152	Condition	r	84:7:1846:1846	3567023	0	True				
ANR	3567153	Identifier	r		3567023	0					
ANR	3567154	CompoundStatement		18:10:320:320	3567023	1					
ANR	3567155	ExpressionStatement	* r = 0	85:4:1855:1861	3567023	0	True				
ANR	3567156	AssignmentExpression	* r = 0		3567023	0		=			
ANR	3567157	UnaryOperationExpression	* r		3567023	0					
ANR	3567158	UnaryOperator	*		3567023	0					
ANR	3567159	Identifier	r		3567023	1					
ANR	3567160	PrimaryExpression	0		3567023	1					
ANR	3567161	ReturnStatement	return q ;	87:3:1871:1879	3567023	3	True				
ANR	3567162	Identifier	q		3567023	0					
ANR	3567163	ReturnStatement	return NULL ;	90:1:1889:1900	3567023	4	True				
ANR	3567164	Identifier	NULL		3567023	0					
ANR	3567165	ReturnType	static char *		3567023	1					
ANR	3567166	Identifier	swiftField		3567023	2					
ANR	3567167	ParameterList	"const char * dn , const char * cn"		3567023	3					
ANR	3567168	Parameter	const char * dn	67:24:1496:1509	3567023	0	True				
ANR	3567169	ParameterType	const char *		3567023	0					
ANR	3567170	Identifier	dn		3567023	1					
ANR	3567171	Parameter	const char * cn	67:40:1512:1525	3567023	1	True				
ANR	3567172	ParameterType	const char *		3567023	0					
ANR	3567173	Identifier	cn		3567023	1					
ANR	3567174	CFGEntryNode	ENTRY		3567023		True				
ANR	3567175	CFGExitNode	EXIT		3567023		True				
ANR	3567176	Symbol	NULL		3567023						
ANR	3567177	Symbol	strchr		3567023						
ANR	3567178	Symbol	dn		3567023						
ANR	3567179	Symbol	cn		3567023						
ANR	3567180	Symbol	p		3567023						
ANR	3567181	Symbol	q		3567023						
ANR	3567182	Symbol	strlen		3567023						
ANR	3567183	Symbol	r		3567023						
ANR	3567184	Symbol	* strlen		3567023						
ANR	3567185	Symbol	strstr		3567023						
ANR	3567186	Symbol	* q		3567023						
ANR	3567187	Symbol	strdup		3567023						
ANR	3567188	Symbol	* r		3567023						
ANR	3567189	Function	classes_from_symbols	93:0:1905:2812							
ANR	3567190	FunctionDef	classes_from_symbols (RBinFile * bf)		3567189	0					
ANR	3567191	CompoundStatement		93:49:1954:2812	3567189	0					
ANR	3567192	IdentifierDeclStatement	RBinSymbol * sym ;	94:1:1957:1972	3567189	0	True				
ANR	3567193	IdentifierDecl	* sym		3567189	0					
ANR	3567194	IdentifierDeclType	RBinSymbol *		3567189	0					
ANR	3567195	Identifier	sym		3567189	1					
ANR	3567196	IdentifierDeclStatement	RListIter * iter ;	95:1:1975:1990	3567189	1	True				
ANR	3567197	IdentifierDecl	* iter		3567189	0					
ANR	3567198	IdentifierDeclType	RListIter *		3567189	0					
ANR	3567199	Identifier	iter		3567189	1					
ANR	3567200	Statement	r_list_foreach	96:1:1993:2006	3567189	2	True				
ANR	3567201	Statement	(	96:16:2008:2008	3567189	3	True				
ANR	3567202	Statement	bf	96:17:2009:2010	3567189	4	True				
ANR	3567203	Statement	->	96:19:2011:2012	3567189	5	True				
ANR	3567204	Statement	o	96:21:2013:2013	3567189	6	True				
ANR	3567205	Statement	->	96:22:2014:2015	3567189	7	True				
ANR	3567206	Statement	symbols	96:24:2016:2022	3567189	8	True				
ANR	3567207	Statement	","	96:31:2023:2023	3567189	9	True				
ANR	3567208	Statement	iter	96:33:2025:2028	3567189	10	True				
ANR	3567209	Statement	","	96:37:2029:2029	3567189	11	True				
ANR	3567210	Statement	sym	96:39:2031:2033	3567189	12	True				
ANR	3567211	Statement	)	96:42:2034:2034	3567189	13	True				
ANR	3567212	CompoundStatement		8:2:131:162	3567189	14					
ANR	3567213	IfStatement	if ( sym -> name [ 0 ] != '_' )		3567189	0					
ANR	3567214	Condition	sym -> name [ 0 ] != '_'	97:6:2044:2062	3567189	0	True				
ANR	3567215	EqualityExpression	sym -> name [ 0 ] != '_'		3567189	0		!=			
ANR	3567216	ArrayIndexing	sym -> name [ 0 ]		3567189	0					
ANR	3567217	PtrMemberAccess	sym -> name		3567189	0					
ANR	3567218	Identifier	sym		3567189	0					
ANR	3567219	Identifier	name		3567189	1					
ANR	3567220	PrimaryExpression	0		3567189	1					
ANR	3567221	PrimaryExpression	'_'		3567189	1					
ANR	3567222	CompoundStatement		5:27:110:110	3567189	1					
ANR	3567223	ContinueStatement	continue ;	98:3:2070:2078	3567189	0	True				
ANR	3567224	IdentifierDeclStatement	const char * cn = sym -> classname ;	100:2:2086:2117	3567189	1	True				
ANR	3567225	IdentifierDecl	* cn = sym -> classname		3567189	0					
ANR	3567226	IdentifierDeclType	const char *		3567189	0					
ANR	3567227	Identifier	cn		3567189	1					
ANR	3567228	AssignmentExpression	* cn = sym -> classname		3567189	2		=			
ANR	3567229	Identifier	cn		3567189	0					
ANR	3567230	PtrMemberAccess	sym -> classname		3567189	1					
ANR	3567231	Identifier	sym		3567189	0					
ANR	3567232	Identifier	classname		3567189	1					
ANR	3567233	IfStatement	if ( cn )		3567189	2					
ANR	3567234	Condition	cn	101:6:2125:2126	3567189	0	True				
ANR	3567235	Identifier	cn		3567189	0					
ANR	3567236	CompoundStatement		16:3:328:358	3567189	1					
ANR	3567237	IdentifierDeclStatement	"RBinClass * c = r_bin_file_add_class ( bf , sym -> classname , NULL , 0 ) ;"	102:3:2134:2199	3567189	0	True				
ANR	3567238	IdentifierDecl	"* c = r_bin_file_add_class ( bf , sym -> classname , NULL , 0 )"		3567189	0					
ANR	3567239	IdentifierDeclType	RBinClass *		3567189	0					
ANR	3567240	Identifier	c		3567189	1					
ANR	3567241	AssignmentExpression	"* c = r_bin_file_add_class ( bf , sym -> classname , NULL , 0 )"		3567189	2		=			
ANR	3567242	Identifier	c		3567189	0					
ANR	3567243	CallExpression	"r_bin_file_add_class ( bf , sym -> classname , NULL , 0 )"		3567189	1					
ANR	3567244	Callee	r_bin_file_add_class		3567189	0					
ANR	3567245	Identifier	r_bin_file_add_class		3567189	0					
ANR	3567246	ArgumentList	bf		3567189	1					
ANR	3567247	Argument	bf		3567189	0					
ANR	3567248	Identifier	bf		3567189	0					
ANR	3567249	Argument	sym -> classname		3567189	1					
ANR	3567250	PtrMemberAccess	sym -> classname		3567189	0					
ANR	3567251	Identifier	sym		3567189	0					
ANR	3567252	Identifier	classname		3567189	1					
ANR	3567253	Argument	NULL		3567189	2					
ANR	3567254	Identifier	NULL		3567189	0					
ANR	3567255	Argument	0		3567189	3					
ANR	3567256	PrimaryExpression	0		3567189	0					
ANR	3567257	IfStatement	if ( ! c )		3567189	1					
ANR	3567258	Condition	! c	103:7:2208:2209	3567189	0	True				
ANR	3567259	UnaryOperationExpression	! c		3567189	0					
ANR	3567260	UnaryOperator	!		3567189	0					
ANR	3567261	Identifier	c		3567189	1					
ANR	3567262	CompoundStatement		11:11:257:257	3567189	1					
ANR	3567263	ContinueStatement	continue ;	104:4:2218:2226	3567189	0	True				
ANR	3567264	IdentifierDeclStatement	char * dn = sym -> dname ;	107:3:2257:2278	3567189	2	True				
ANR	3567265	IdentifierDecl	* dn = sym -> dname		3567189	0					
ANR	3567266	IdentifierDeclType	char *		3567189	0					
ANR	3567267	Identifier	dn		3567189	1					
ANR	3567268	AssignmentExpression	* dn = sym -> dname		3567189	2		=			
ANR	3567269	Identifier	dn		3567189	0					
ANR	3567270	PtrMemberAccess	sym -> dname		3567189	1					
ANR	3567271	Identifier	sym		3567189	0					
ANR	3567272	Identifier	dname		3567189	1					
ANR	3567273	IdentifierDeclStatement	"char * fn = swiftField ( dn , cn ) ;"	108:3:2283:2313	3567189	3	True				
ANR	3567274	IdentifierDecl	"* fn = swiftField ( dn , cn )"		3567189	0					
ANR	3567275	IdentifierDeclType	char *		3567189	0					
ANR	3567276	Identifier	fn		3567189	1					
ANR	3567277	AssignmentExpression	"* fn = swiftField ( dn , cn )"		3567189	2		=			
ANR	3567278	Identifier	fn		3567189	0					
ANR	3567279	CallExpression	"swiftField ( dn , cn )"		3567189	1					
ANR	3567280	Callee	swiftField		3567189	0					
ANR	3567281	Identifier	swiftField		3567189	0					
ANR	3567282	ArgumentList	dn		3567189	1					
ANR	3567283	Argument	dn		3567189	0					
ANR	3567284	Identifier	dn		3567189	0					
ANR	3567285	Argument	cn		3567189	1					
ANR	3567286	Identifier	cn		3567189	0					
ANR	3567287	IfStatement	if ( fn )		3567189	4					
ANR	3567288	Condition	fn	109:7:2322:2323	3567189	0	True				
ANR	3567289	Identifier	fn		3567189	0					
ANR	3567290	CompoundStatement		19:4:420:502	3567189	1					
ANR	3567291	IdentifierDeclStatement	"RBinField * f = r_bin_field_new ( sym -> paddr , sym -> vaddr , sym -> size , fn , NULL , NULL ) ;"	111:4:2375:2457	3567189	0	True				
ANR	3567292	IdentifierDecl	"* f = r_bin_field_new ( sym -> paddr , sym -> vaddr , sym -> size , fn , NULL , NULL )"		3567189	0					
ANR	3567293	IdentifierDeclType	RBinField *		3567189	0					
ANR	3567294	Identifier	f		3567189	1					
ANR	3567295	AssignmentExpression	"* f = r_bin_field_new ( sym -> paddr , sym -> vaddr , sym -> size , fn , NULL , NULL )"		3567189	2		=			
ANR	3567296	Identifier	f		3567189	0					
ANR	3567297	CallExpression	"r_bin_field_new ( sym -> paddr , sym -> vaddr , sym -> size , fn , NULL , NULL )"		3567189	1					
ANR	3567298	Callee	r_bin_field_new		3567189	0					
ANR	3567299	Identifier	r_bin_field_new		3567189	0					
ANR	3567300	ArgumentList	sym -> paddr		3567189	1					
ANR	3567301	Argument	sym -> paddr		3567189	0					
ANR	3567302	PtrMemberAccess	sym -> paddr		3567189	0					
ANR	3567303	Identifier	sym		3567189	0					
ANR	3567304	Identifier	paddr		3567189	1					
ANR	3567305	Argument	sym -> vaddr		3567189	1					
ANR	3567306	PtrMemberAccess	sym -> vaddr		3567189	0					
ANR	3567307	Identifier	sym		3567189	0					
ANR	3567308	Identifier	vaddr		3567189	1					
ANR	3567309	Argument	sym -> size		3567189	2					
ANR	3567310	PtrMemberAccess	sym -> size		3567189	0					
ANR	3567311	Identifier	sym		3567189	0					
ANR	3567312	Identifier	size		3567189	1					
ANR	3567313	Argument	fn		3567189	3					
ANR	3567314	Identifier	fn		3567189	0					
ANR	3567315	Argument	NULL		3567189	4					
ANR	3567316	Identifier	NULL		3567189	0					
ANR	3567317	Argument	NULL		3567189	5					
ANR	3567318	Identifier	NULL		3567189	0					
ANR	3567319	ExpressionStatement	"r_list_append ( c -> fields , f )"	112:4:2463:2491	3567189	1	True				
ANR	3567320	CallExpression	"r_list_append ( c -> fields , f )"		3567189	0					
ANR	3567321	Callee	r_list_append		3567189	0					
ANR	3567322	Identifier	r_list_append		3567189	0					
ANR	3567323	ArgumentList	c -> fields		3567189	1					
ANR	3567324	Argument	c -> fields		3567189	0					
ANR	3567325	PtrMemberAccess	c -> fields		3567189	0					
ANR	3567326	Identifier	c		3567189	0					
ANR	3567327	Identifier	fields		3567189	1					
ANR	3567328	Argument	f		3567189	1					
ANR	3567329	Identifier	f		3567189	0					
ANR	3567330	ExpressionStatement	free ( fn )	113:4:2497:2506	3567189	2	True				
ANR	3567331	CallExpression	free ( fn )		3567189	0					
ANR	3567332	Callee	free		3567189	0					
ANR	3567333	Identifier	free		3567189	0					
ANR	3567334	ArgumentList	fn		3567189	1					
ANR	3567335	Argument	fn		3567189	0					
ANR	3567336	Identifier	fn		3567189	0					
ANR	3567337	ElseStatement	else		3567189	0					
ANR	3567338	CompoundStatement		23:4:569:597	3567189	0					
ANR	3567339	IdentifierDeclStatement	"char * mn = strstr ( dn , "".."" ) ;"	115:4:2524:2552	3567189	0	True				
ANR	3567340	IdentifierDecl	"* mn = strstr ( dn , "".."" )"		3567189	0					
ANR	3567341	IdentifierDeclType	char *		3567189	0					
ANR	3567342	Identifier	mn		3567189	1					
ANR	3567343	AssignmentExpression	"* mn = strstr ( dn , "".."" )"		3567189	2		=			
ANR	3567344	Identifier	mn		3567189	0					
ANR	3567345	CallExpression	"strstr ( dn , "".."" )"		3567189	1					
ANR	3567346	Callee	strstr		3567189	0					
ANR	3567347	Identifier	strstr		3567189	0					
ANR	3567348	ArgumentList	dn		3567189	1					
ANR	3567349	Argument	dn		3567189	0					
ANR	3567350	Identifier	dn		3567189	0					
ANR	3567351	Argument	""".."""		3567189	1					
ANR	3567352	PrimaryExpression	""".."""		3567189	0					
ANR	3567353	IfStatement	if ( ! mn )		3567189	1					
ANR	3567354	Condition	! mn	116:8:2562:2564	3567189	0	True				
ANR	3567355	UnaryOperationExpression	! mn		3567189	0					
ANR	3567356	UnaryOperator	!		3567189	0					
ANR	3567357	Identifier	mn		3567189	1					
ANR	3567358	CompoundStatement		24:13:612:612	3567189	1					
ANR	3567359	ExpressionStatement	"mn = strstr ( dn , cn )"	117:5:2574:2594	3567189	0	True				
ANR	3567360	AssignmentExpression	"mn = strstr ( dn , cn )"		3567189	0		=			
ANR	3567361	Identifier	mn		3567189	0					
ANR	3567362	CallExpression	"strstr ( dn , cn )"		3567189	1					
ANR	3567363	Callee	strstr		3567189	0					
ANR	3567364	Identifier	strstr		3567189	0					
ANR	3567365	ArgumentList	dn		3567189	1					
ANR	3567366	Argument	dn		3567189	0					
ANR	3567367	Identifier	dn		3567189	0					
ANR	3567368	Argument	cn		3567189	1					
ANR	3567369	Identifier	cn		3567189	0					
ANR	3567370	IfStatement	if ( mn && mn [ strlen ( cn ) ] == '.' )		3567189	1					
ANR	3567371	Condition	mn && mn [ strlen ( cn ) ] == '.'	118:9:2605:2632	3567189	0	True				
ANR	3567372	AndExpression	mn && mn [ strlen ( cn ) ] == '.'		3567189	0		&&			
ANR	3567373	Identifier	mn		3567189	0					
ANR	3567374	EqualityExpression	mn [ strlen ( cn ) ] == '.'		3567189	1		==			
ANR	3567375	ArrayIndexing	mn [ strlen ( cn ) ]		3567189	0					
ANR	3567376	Identifier	mn		3567189	0					
ANR	3567377	CallExpression	strlen ( cn )		3567189	1					
ANR	3567378	Callee	strlen		3567189	0					
ANR	3567379	Identifier	strlen		3567189	0					
ANR	3567380	ArgumentList	cn		3567189	1					
ANR	3567381	Argument	cn		3567189	0					
ANR	3567382	Identifier	cn		3567189	0					
ANR	3567383	PrimaryExpression	'.'		3567189	1					
ANR	3567384	CompoundStatement		26:39:680:680	3567189	1					
ANR	3567385	ExpressionStatement	mn += strlen ( cn ) + 1	119:6:2643:2664	3567189	0	True				
ANR	3567386	AssignmentExpression	mn += strlen ( cn ) + 1		3567189	0		+=			
ANR	3567387	Identifier	mn		3567189	0					
ANR	3567388	AdditiveExpression	strlen ( cn ) + 1		3567189	1		+			
ANR	3567389	CallExpression	strlen ( cn )		3567189	0					
ANR	3567390	Callee	strlen		3567189	0					
ANR	3567391	Identifier	strlen		3567189	0					
ANR	3567392	ArgumentList	cn		3567189	1					
ANR	3567393	Argument	cn		3567189	0					
ANR	3567394	Identifier	cn		3567189	0					
ANR	3567395	PrimaryExpression	1		3567189	1					
ANR	3567396	ExpressionStatement	"r_list_append ( c -> methods , sym )"	121:6:2730:2761	3567189	1	True				
ANR	3567397	CallExpression	"r_list_append ( c -> methods , sym )"		3567189	0					
ANR	3567398	Callee	r_list_append		3567189	0					
ANR	3567399	Identifier	r_list_append		3567189	0					
ANR	3567400	ArgumentList	c -> methods		3567189	1					
ANR	3567401	Argument	c -> methods		3567189	0					
ANR	3567402	PtrMemberAccess	c -> methods		3567189	0					
ANR	3567403	Identifier	c		3567189	0					
ANR	3567404	Identifier	methods		3567189	1					
ANR	3567405	Argument	sym		3567189	1					
ANR	3567406	Identifier	sym		3567189	0					
ANR	3567407	ReturnStatement	return bf -> o -> classes ;	127:1:2789:2810	3567189	15	True				
ANR	3567408	PtrMemberAccess	bf -> o -> classes		3567189	0					
ANR	3567409	PtrMemberAccess	bf -> o		3567189	0					
ANR	3567410	Identifier	bf		3567189	0					
ANR	3567411	Identifier	o		3567189	1					
ANR	3567412	Identifier	classes		3567189	1					
ANR	3567413	ReturnType	static RList *		3567189	1					
ANR	3567414	Identifier	classes_from_symbols		3567189	2					
ANR	3567415	ParameterList	RBinFile * bf		3567189	3					
ANR	3567416	Parameter	RBinFile * bf	93:35:1940:1951	3567189	0	True				
ANR	3567417	ParameterType	RBinFile *		3567189	0					
ANR	3567418	Identifier	bf		3567189	1					
ANR	3567419	CFGEntryNode	ENTRY		3567189		True				
ANR	3567420	CFGExitNode	EXIT		3567189		True				
ANR	3567421	CFGErrorNode	ERROR		3567189		True				
ANR	3567422	Symbol	sym -> classname		3567189						
ANR	3567423	Symbol	bf		3567189						
ANR	3567424	Symbol	* mn		3567189						
ANR	3567425	Symbol	swiftField		3567189						
ANR	3567426	Symbol	sym		3567189						
ANR	3567427	Symbol	fn		3567189						
ANR	3567428	Symbol	dn		3567189						
ANR	3567429	Symbol	sym -> size		3567189						
ANR	3567430	Symbol	* bf -> o		3567189						
ANR	3567431	Symbol	strlen		3567189						
ANR	3567432	Symbol	bf -> o		3567189						
ANR	3567433	Symbol	* * sym		3567189						
ANR	3567434	Symbol	* sym -> name		3567189						
ANR	3567435	Symbol	mn		3567189						
ANR	3567436	Symbol	c		3567189						
ANR	3567437	Symbol	NULL		3567189						
ANR	3567438	Symbol	sym -> dname		3567189						
ANR	3567439	Symbol	f		3567189						
ANR	3567440	Symbol	sym -> vaddr		3567189						
ANR	3567441	Symbol	sym -> paddr		3567189						
ANR	3567442	Symbol	iter		3567189						
ANR	3567443	Symbol	* bf		3567189						
ANR	3567444	Symbol	r_bin_field_new		3567189						
ANR	3567445	Symbol	cn		3567189						
ANR	3567446	Symbol	* c		3567189						
ANR	3567447	Symbol	bf -> o -> classes		3567189						
ANR	3567448	Symbol	* sym		3567189						
ANR	3567449	Symbol	* * bf		3567189						
ANR	3567450	Symbol	r_bin_file_add_class		3567189						
ANR	3567451	Symbol	* strlen		3567189						
ANR	3567452	Symbol	strstr		3567189						
ANR	3567453	Symbol	sym -> name		3567189						
ANR	3567454	Symbol	c -> fields		3567189						
ANR	3567455	Symbol	c -> methods		3567189						
ANR	3567456	Function	r_bin_object_new	131:0:2895:5277							
ANR	3567457	FunctionDef	"r_bin_object_new (RBinFile * bf , RBinPlugin * plugin , ut64 baseaddr , ut64 loadaddr , ut64 offset , ut64 sz)"		3567456	0					
ANR	3567458	CompoundStatement		131:121:3016:5277	3567456	0					
ANR	3567459	ExpressionStatement	"r_return_val_if_fail ( bf && plugin , NULL )"	132:1:3019:3060	3567456	0	True				
ANR	3567460	CallExpression	"r_return_val_if_fail ( bf && plugin , NULL )"		3567456	0					
ANR	3567461	Callee	r_return_val_if_fail		3567456	0					
ANR	3567462	Identifier	r_return_val_if_fail		3567456	0					
ANR	3567463	ArgumentList	bf && plugin		3567456	1					
ANR	3567464	Argument	bf && plugin		3567456	0					
ANR	3567465	AndExpression	bf && plugin		3567456	0		&&			
ANR	3567466	Identifier	bf		3567456	0					
ANR	3567467	Identifier	plugin		3567456	1					
ANR	3567468	Argument	NULL		3567456	1					
ANR	3567469	Identifier	NULL		3567456	0					
ANR	3567470	IdentifierDeclStatement	ut64 bytes_sz = r_buf_size ( bf -> buf ) ;	133:1:3063:3099	3567456	1	True				
ANR	3567471	IdentifierDecl	bytes_sz = r_buf_size ( bf -> buf )		3567456	0					
ANR	3567472	IdentifierDeclType	ut64		3567456	0					
ANR	3567473	Identifier	bytes_sz		3567456	1					
ANR	3567474	AssignmentExpression	bytes_sz = r_buf_size ( bf -> buf )		3567456	2		=			
ANR	3567475	Identifier	bytes_sz		3567456	0					
ANR	3567476	CallExpression	r_buf_size ( bf -> buf )		3567456	1					
ANR	3567477	Callee	r_buf_size		3567456	0					
ANR	3567478	Identifier	r_buf_size		3567456	0					
ANR	3567479	ArgumentList	bf -> buf		3567456	1					
ANR	3567480	Argument	bf -> buf		3567456	0					
ANR	3567481	PtrMemberAccess	bf -> buf		3567456	0					
ANR	3567482	Identifier	bf		3567456	0					
ANR	3567483	Identifier	buf		3567456	1					
ANR	3567484	IdentifierDeclStatement	Sdb * sdb = bf -> sdb ;	134:1:3102:3120	3567456	2	True				
ANR	3567485	IdentifierDecl	* sdb = bf -> sdb		3567456	0					
ANR	3567486	IdentifierDeclType	Sdb *		3567456	0					
ANR	3567487	Identifier	sdb		3567456	1					
ANR	3567488	AssignmentExpression	* sdb = bf -> sdb		3567456	2		=			
ANR	3567489	Identifier	sdb		3567456	0					
ANR	3567490	PtrMemberAccess	bf -> sdb		3567456	1					
ANR	3567491	Identifier	bf		3567456	0					
ANR	3567492	Identifier	sdb		3567456	1					
ANR	3567493	IdentifierDeclStatement	RBinObject * o = R_NEW0 ( RBinObject ) ;	135:1:3123:3158	3567456	3	True				
ANR	3567494	IdentifierDecl	* o = R_NEW0 ( RBinObject )		3567456	0					
ANR	3567495	IdentifierDeclType	RBinObject *		3567456	0					
ANR	3567496	Identifier	o		3567456	1					
ANR	3567497	AssignmentExpression	* o = R_NEW0 ( RBinObject )		3567456	2		=			
ANR	3567498	Identifier	o		3567456	0					
ANR	3567499	CallExpression	R_NEW0 ( RBinObject )		3567456	1					
ANR	3567500	Callee	R_NEW0		3567456	0					
ANR	3567501	Identifier	R_NEW0		3567456	0					
ANR	3567502	ArgumentList	RBinObject		3567456	1					
ANR	3567503	Argument	RBinObject		3567456	0					
ANR	3567504	Identifier	RBinObject		3567456	0					
ANR	3567505	IfStatement	if ( ! o )		3567456	4					
ANR	3567506	Condition	! o	136:5:3165:3166	3567456	0	True				
ANR	3567507	UnaryOperationExpression	! o		3567456	0					
ANR	3567508	UnaryOperator	!		3567456	0					
ANR	3567509	Identifier	o		3567456	1					
ANR	3567510	CompoundStatement		6:9:152:152	3567456	1					
ANR	3567511	ReturnStatement	return NULL ;	137:2:3173:3184	3567456	0	True				
ANR	3567512	Identifier	NULL		3567456	0					
ANR	3567513	ExpressionStatement	o -> obj_size = ( bytes_sz >= sz + offset ) ? sz : 0	139:1:3190:3236	3567456	5	True				
ANR	3567514	AssignmentExpression	o -> obj_size = ( bytes_sz >= sz + offset ) ? sz : 0		3567456	0		=			
ANR	3567515	PtrMemberAccess	o -> obj_size		3567456	0					
ANR	3567516	Identifier	o		3567456	0					
ANR	3567517	Identifier	obj_size		3567456	1					
ANR	3567518	ConditionalExpression	( bytes_sz >= sz + offset ) ? sz : 0		3567456	1					
ANR	3567519	Condition	bytes_sz >= sz + offset		3567456	0					
ANR	3567520	RelationalExpression	bytes_sz >= sz + offset		3567456	0		>=			
ANR	3567521	Identifier	bytes_sz		3567456	0					
ANR	3567522	AdditiveExpression	sz + offset		3567456	1		+			
ANR	3567523	Identifier	sz		3567456	0					
ANR	3567524	Identifier	offset		3567456	1					
ANR	3567525	Identifier	sz		3567456	1					
ANR	3567526	PrimaryExpression	0		3567456	2					
ANR	3567527	ExpressionStatement	o -> boffset = offset	140:1:3239:3258	3567456	6	True				
ANR	3567528	AssignmentExpression	o -> boffset = offset		3567456	0		=			
ANR	3567529	PtrMemberAccess	o -> boffset		3567456	0					
ANR	3567530	Identifier	o		3567456	0					
ANR	3567531	Identifier	boffset		3567456	1					
ANR	3567532	Identifier	offset		3567456	1					
ANR	3567533	ExpressionStatement	o -> strings_db = ht_up_new0 ( )	141:1:3261:3290	3567456	7	True				
ANR	3567534	AssignmentExpression	o -> strings_db = ht_up_new0 ( )		3567456	0		=			
ANR	3567535	PtrMemberAccess	o -> strings_db		3567456	0					
ANR	3567536	Identifier	o		3567456	0					
ANR	3567537	Identifier	strings_db		3567456	1					
ANR	3567538	CallExpression	ht_up_new0 ( )		3567456	1					
ANR	3567539	Callee	ht_up_new0		3567456	0					
ANR	3567540	Identifier	ht_up_new0		3567456	0					
ANR	3567541	ArgumentList			3567456	1					
ANR	3567542	ExpressionStatement	o -> regstate = NULL	142:1:3293:3311	3567456	8	True				
ANR	3567543	AssignmentExpression	o -> regstate = NULL		3567456	0		=			
ANR	3567544	PtrMemberAccess	o -> regstate		3567456	0					
ANR	3567545	Identifier	o		3567456	0					
ANR	3567546	Identifier	regstate		3567456	1					
ANR	3567547	Identifier	NULL		3567456	1					
ANR	3567548	ExpressionStatement	o -> kv = sdb_new0 ( )	143:1:3314:3333	3567456	9	True				
ANR	3567549	AssignmentExpression	o -> kv = sdb_new0 ( )		3567456	0		=			
ANR	3567550	PtrMemberAccess	o -> kv		3567456	0					
ANR	3567551	Identifier	o		3567456	0					
ANR	3567552	Identifier	kv		3567456	1					
ANR	3567553	CallExpression	sdb_new0 ( )		3567456	1					
ANR	3567554	Callee	sdb_new0		3567456	0					
ANR	3567555	Identifier	sdb_new0		3567456	0					
ANR	3567556	ArgumentList			3567456	1					
ANR	3567557	ExpressionStatement	o -> baddr = baseaddr	144:1:3366:3385	3567456	10	True				
ANR	3567558	AssignmentExpression	o -> baddr = baseaddr		3567456	0		=			
ANR	3567559	PtrMemberAccess	o -> baddr		3567456	0					
ANR	3567560	Identifier	o		3567456	0					
ANR	3567561	Identifier	baddr		3567456	1					
ANR	3567562	Identifier	baseaddr		3567456	1					
ANR	3567563	ExpressionStatement	o -> classes = r_list_newf ( ( RListFree ) r_bin_class_free )	145:1:3388:3442	3567456	11	True				
ANR	3567564	AssignmentExpression	o -> classes = r_list_newf ( ( RListFree ) r_bin_class_free )		3567456	0		=			
ANR	3567565	PtrMemberAccess	o -> classes		3567456	0					
ANR	3567566	Identifier	o		3567456	0					
ANR	3567567	Identifier	classes		3567456	1					
ANR	3567568	CallExpression	r_list_newf ( ( RListFree ) r_bin_class_free )		3567456	1					
ANR	3567569	Callee	r_list_newf		3567456	0					
ANR	3567570	Identifier	r_list_newf		3567456	0					
ANR	3567571	ArgumentList	( RListFree ) r_bin_class_free		3567456	1					
ANR	3567572	Argument	( RListFree ) r_bin_class_free		3567456	0					
ANR	3567573	CastExpression	( RListFree ) r_bin_class_free		3567456	0					
ANR	3567574	CastTarget	RListFree		3567456	0					
ANR	3567575	Identifier	r_bin_class_free		3567456	1					
ANR	3567576	ExpressionStatement	o -> classes_ht = ht_pp_new0 ( )	146:1:3445:3474	3567456	12	True				
ANR	3567577	AssignmentExpression	o -> classes_ht = ht_pp_new0 ( )		3567456	0		=			
ANR	3567578	PtrMemberAccess	o -> classes_ht		3567456	0					
ANR	3567579	Identifier	o		3567456	0					
ANR	3567580	Identifier	classes_ht		3567456	1					
ANR	3567581	CallExpression	ht_pp_new0 ( )		3567456	1					
ANR	3567582	Callee	ht_pp_new0		3567456	0					
ANR	3567583	Identifier	ht_pp_new0		3567456	0					
ANR	3567584	ArgumentList			3567456	1					
ANR	3567585	ExpressionStatement	o -> methods_ht = ht_pp_new0 ( )	147:1:3477:3506	3567456	13	True				
ANR	3567586	AssignmentExpression	o -> methods_ht = ht_pp_new0 ( )		3567456	0		=			
ANR	3567587	PtrMemberAccess	o -> methods_ht		3567456	0					
ANR	3567588	Identifier	o		3567456	0					
ANR	3567589	Identifier	methods_ht		3567456	1					
ANR	3567590	CallExpression	ht_pp_new0 ( )		3567456	1					
ANR	3567591	Callee	ht_pp_new0		3567456	0					
ANR	3567592	Identifier	ht_pp_new0		3567456	0					
ANR	3567593	ArgumentList			3567456	1					
ANR	3567594	ExpressionStatement	o -> baddr_shift = 0	148:1:3509:3527	3567456	14	True				
ANR	3567595	AssignmentExpression	o -> baddr_shift = 0		3567456	0		=			
ANR	3567596	PtrMemberAccess	o -> baddr_shift		3567456	0					
ANR	3567597	Identifier	o		3567456	0					
ANR	3567598	Identifier	baddr_shift		3567456	1					
ANR	3567599	PrimaryExpression	0		3567456	1					
ANR	3567600	ExpressionStatement	o -> plugin = plugin	149:1:3530:3548	3567456	15	True				
ANR	3567601	AssignmentExpression	o -> plugin = plugin		3567456	0		=			
ANR	3567602	PtrMemberAccess	o -> plugin		3567456	0					
ANR	3567603	Identifier	o		3567456	0					
ANR	3567604	Identifier	plugin		3567456	1					
ANR	3567605	Identifier	plugin		3567456	1					
ANR	3567606	ExpressionStatement	o -> loadaddr = loadaddr != UT64_MAX ? loadaddr : 0	150:1:3551:3600	3567456	16	True				
ANR	3567607	AssignmentExpression	o -> loadaddr = loadaddr != UT64_MAX ? loadaddr : 0		3567456	0		=			
ANR	3567608	PtrMemberAccess	o -> loadaddr		3567456	0					
ANR	3567609	Identifier	o		3567456	0					
ANR	3567610	Identifier	loadaddr		3567456	1					
ANR	3567611	ConditionalExpression	loadaddr != UT64_MAX ? loadaddr : 0		3567456	1					
ANR	3567612	Condition	loadaddr != UT64_MAX		3567456	0					
ANR	3567613	EqualityExpression	loadaddr != UT64_MAX		3567456	0		!=			
ANR	3567614	Identifier	loadaddr		3567456	0					
ANR	3567615	Identifier	UT64_MAX		3567456	1					
ANR	3567616	Identifier	loadaddr		3567456	1					
ANR	3567617	PrimaryExpression	0		3567456	2					
ANR	3567618	IfStatement	if ( plugin && plugin -> load_buffer )		3567456	17					
ANR	3567619	Condition	plugin && plugin -> load_buffer	152:5:3608:3636	3567456	0	True				
ANR	3567620	AndExpression	plugin && plugin -> load_buffer		3567456	0		&&			
ANR	3567621	Identifier	plugin		3567456	0					
ANR	3567622	PtrMemberAccess	plugin -> load_buffer		3567456	1					
ANR	3567623	Identifier	plugin		3567456	0					
ANR	3567624	Identifier	load_buffer		3567456	1					
ANR	3567625	CompoundStatement		22:36:622:622	3567456	1					
ANR	3567626	IfStatement	"if ( ! plugin -> load_buffer ( bf , & o -> bin_obj , bf -> buf , loadaddr , sdb ) )"		3567456	0					
ANR	3567627	Condition	"! plugin -> load_buffer ( bf , & o -> bin_obj , bf -> buf , loadaddr , sdb )"	153:6:3647:3708	3567456	0	True				
ANR	3567628	UnaryOperationExpression	"! plugin -> load_buffer ( bf , & o -> bin_obj , bf -> buf , loadaddr , sdb )"		3567456	0					
ANR	3567629	UnaryOperator	!		3567456	0					
ANR	3567630	CallExpression	"plugin -> load_buffer ( bf , & o -> bin_obj , bf -> buf , loadaddr , sdb )"		3567456	1					
ANR	3567631	Callee	plugin -> load_buffer		3567456	0					
ANR	3567632	PtrMemberAccess	plugin -> load_buffer		3567456	0					
ANR	3567633	Identifier	plugin		3567456	0					
ANR	3567634	Identifier	load_buffer		3567456	1					
ANR	3567635	ArgumentList	bf		3567456	1					
ANR	3567636	Argument	bf		3567456	0					
ANR	3567637	Identifier	bf		3567456	0					
ANR	3567638	Argument	& o -> bin_obj		3567456	1					
ANR	3567639	UnaryOperationExpression	& o -> bin_obj		3567456	0					
ANR	3567640	UnaryOperator	&		3567456	0					
ANR	3567641	PtrMemberAccess	o -> bin_obj		3567456	1					
ANR	3567642	Identifier	o		3567456	0					
ANR	3567643	Identifier	bin_obj		3567456	1					
ANR	3567644	Argument	bf -> buf		3567456	2					
ANR	3567645	PtrMemberAccess	bf -> buf		3567456	0					
ANR	3567646	Identifier	bf		3567456	0					
ANR	3567647	Identifier	buf		3567456	1					
ANR	3567648	Argument	loadaddr		3567456	3					
ANR	3567649	Identifier	loadaddr		3567456	0					
ANR	3567650	Argument	sdb		3567456	4					
ANR	3567651	Identifier	sdb		3567456	0					
ANR	3567652	CompoundStatement		23:70:694:694	3567456	1					
ANR	3567653	IfStatement	if ( bf -> rbin -> verbose )		3567456	0					
ANR	3567654	Condition	bf -> rbin -> verbose	154:7:3720:3736	3567456	0	True				
ANR	3567655	PtrMemberAccess	bf -> rbin -> verbose		3567456	0					
ANR	3567656	PtrMemberAccess	bf -> rbin		3567456	0					
ANR	3567657	Identifier	bf		3567456	0					
ANR	3567658	Identifier	rbin		3567456	1					
ANR	3567659	Identifier	verbose		3567456	1					
ANR	3567660	CompoundStatement		24:26:722:722	3567456	1					
ANR	3567661	ExpressionStatement	"eprintf ( ""Error in r_bin_object_new: load_buffer failed for %s plugin\\n"" , plugin -> name )"	155:4:3745:3832	3567456	0	True				
ANR	3567662	CallExpression	"eprintf ( ""Error in r_bin_object_new: load_buffer failed for %s plugin\\n"" , plugin -> name )"		3567456	0					
ANR	3567663	Callee	eprintf		3567456	0					
ANR	3567664	Identifier	eprintf		3567456	0					
ANR	3567665	ArgumentList	"""Error in r_bin_object_new: load_buffer failed for %s plugin\\n"""		3567456	1					
ANR	3567666	Argument	"""Error in r_bin_object_new: load_buffer failed for %s plugin\\n"""		3567456	0					
ANR	3567667	PrimaryExpression	"""Error in r_bin_object_new: load_buffer failed for %s plugin\\n"""		3567456	0					
ANR	3567668	Argument	plugin -> name		3567456	1					
ANR	3567669	PtrMemberAccess	plugin -> name		3567456	0					
ANR	3567670	Identifier	plugin		3567456	0					
ANR	3567671	Identifier	name		3567456	1					
ANR	3567672	ExpressionStatement	sdb_free ( o -> kv )	157:3:3842:3858	3567456	1	True				
ANR	3567673	CallExpression	sdb_free ( o -> kv )		3567456	0					
ANR	3567674	Callee	sdb_free		3567456	0					
ANR	3567675	Identifier	sdb_free		3567456	0					
ANR	3567676	ArgumentList	o -> kv		3567456	1					
ANR	3567677	Argument	o -> kv		3567456	0					
ANR	3567678	PtrMemberAccess	o -> kv		3567456	0					
ANR	3567679	Identifier	o		3567456	0					
ANR	3567680	Identifier	kv		3567456	1					
ANR	3567681	ExpressionStatement	free ( o )	158:3:3863:3871	3567456	2	True				
ANR	3567682	CallExpression	free ( o )		3567456	0					
ANR	3567683	Callee	free		3567456	0					
ANR	3567684	Identifier	free		3567456	0					
ANR	3567685	ArgumentList	o		3567456	1					
ANR	3567686	Argument	o		3567456	0					
ANR	3567687	Identifier	o		3567456	0					
ANR	3567688	ReturnStatement	return NULL ;	159:3:3876:3887	3567456	3	True				
ANR	3567689	Identifier	NULL		3567456	0					
ANR	3567690	ElseStatement	else		3567456	0					
ANR	3567691	CompoundStatement		31:8:884:884	3567456	0					
ANR	3567692	ExpressionStatement	"R_LOG_WARN ( ""Plugin %s should implement load_buffer method.\\n"" , plugin -> name )"	162:2:3905:3982	3567456	0	True				
ANR	3567693	CallExpression	"R_LOG_WARN ( ""Plugin %s should implement load_buffer method.\\n"" , plugin -> name )"		3567456	0					
ANR	3567694	Callee	R_LOG_WARN		3567456	0					
ANR	3567695	Identifier	R_LOG_WARN		3567456	0					
ANR	3567696	ArgumentList	"""Plugin %s should implement load_buffer method.\\n"""		3567456	1					
ANR	3567697	Argument	"""Plugin %s should implement load_buffer method.\\n"""		3567456	0					
ANR	3567698	PrimaryExpression	"""Plugin %s should implement load_buffer method.\\n"""		3567456	0					
ANR	3567699	Argument	plugin -> name		3567456	1					
ANR	3567700	PtrMemberAccess	plugin -> name		3567456	0					
ANR	3567701	Identifier	plugin		3567456	0					
ANR	3567702	Identifier	name		3567456	1					
ANR	3567703	ExpressionStatement	sdb_free ( o -> kv )	163:2:3986:4002	3567456	1	True				
ANR	3567704	CallExpression	sdb_free ( o -> kv )		3567456	0					
ANR	3567705	Callee	sdb_free		3567456	0					
ANR	3567706	Identifier	sdb_free		3567456	0					
ANR	3567707	ArgumentList	o -> kv		3567456	1					
ANR	3567708	Argument	o -> kv		3567456	0					
ANR	3567709	PtrMemberAccess	o -> kv		3567456	0					
ANR	3567710	Identifier	o		3567456	0					
ANR	3567711	Identifier	kv		3567456	1					
ANR	3567712	ExpressionStatement	free ( o )	164:2:4006:4014	3567456	2	True				
ANR	3567713	CallExpression	free ( o )		3567456	0					
ANR	3567714	Callee	free		3567456	0					
ANR	3567715	Identifier	free		3567456	0					
ANR	3567716	ArgumentList	o		3567456	1					
ANR	3567717	Argument	o		3567456	0					
ANR	3567718	Identifier	o		3567456	0					
ANR	3567719	ReturnStatement	return NULL ;	165:2:4018:4029	3567456	3	True				
ANR	3567720	Identifier	NULL		3567456	0					
ANR	3567721	ExpressionStatement	"r_bin_object_set_items ( bf , o )"	172:1:4289:4319	3567456	18	True				
ANR	3567722	CallExpression	"r_bin_object_set_items ( bf , o )"		3567456	0					
ANR	3567723	Callee	r_bin_object_set_items		3567456	0					
ANR	3567724	Identifier	r_bin_object_set_items		3567456	0					
ANR	3567725	ArgumentList	bf		3567456	1					
ANR	3567726	Argument	bf		3567456	0					
ANR	3567727	Identifier	bf		3567456	0					
ANR	3567728	Argument	o		3567456	1					
ANR	3567729	Identifier	o		3567456	0					
ANR	3567730	ExpressionStatement	"r_bin_file_set_obj ( bf -> rbin , bf , o )"	173:1:4322:4358	3567456	19	True				
ANR	3567731	CallExpression	"r_bin_file_set_obj ( bf -> rbin , bf , o )"		3567456	0					
ANR	3567732	Callee	r_bin_file_set_obj		3567456	0					
ANR	3567733	Identifier	r_bin_file_set_obj		3567456	0					
ANR	3567734	ArgumentList	bf -> rbin		3567456	1					
ANR	3567735	Argument	bf -> rbin		3567456	0					
ANR	3567736	PtrMemberAccess	bf -> rbin		3567456	0					
ANR	3567737	Identifier	bf		3567456	0					
ANR	3567738	Identifier	rbin		3567456	1					
ANR	3567739	Argument	bf		3567456	1					
ANR	3567740	Identifier	bf		3567456	0					
ANR	3567741	Argument	o		3567456	2					
ANR	3567742	Identifier	o		3567456	0					
ANR	3567743	ExpressionStatement	"r_bin_set_baddr ( bf -> rbin , o -> baddr )"	174:1:4361:4397	3567456	20	True				
ANR	3567744	CallExpression	"r_bin_set_baddr ( bf -> rbin , o -> baddr )"		3567456	0					
ANR	3567745	Callee	r_bin_set_baddr		3567456	0					
ANR	3567746	Identifier	r_bin_set_baddr		3567456	0					
ANR	3567747	ArgumentList	bf -> rbin		3567456	1					
ANR	3567748	Argument	bf -> rbin		3567456	0					
ANR	3567749	PtrMemberAccess	bf -> rbin		3567456	0					
ANR	3567750	Identifier	bf		3567456	0					
ANR	3567751	Identifier	rbin		3567456	1					
ANR	3567752	Argument	o -> baddr		3567456	1					
ANR	3567753	PtrMemberAccess	o -> baddr		3567456	0					
ANR	3567754	Identifier	o		3567456	0					
ANR	3567755	Identifier	baddr		3567456	1					
ANR	3567756	ExpressionStatement	bf -> sdb_info = o -> kv	176:1:4401:4421	3567456	21	True				
ANR	3567757	AssignmentExpression	bf -> sdb_info = o -> kv		3567456	0		=			
ANR	3567758	PtrMemberAccess	bf -> sdb_info		3567456	0					
ANR	3567759	Identifier	bf		3567456	0					
ANR	3567760	Identifier	sdb_info		3567456	1					
ANR	3567761	PtrMemberAccess	o -> kv		3567456	1					
ANR	3567762	Identifier	o		3567456	0					
ANR	3567763	Identifier	kv		3567456	1					
ANR	3567764	ExpressionStatement	sdb = bf -> rbin -> sdb	177:1:4424:4443	3567456	22	True				
ANR	3567765	AssignmentExpression	sdb = bf -> rbin -> sdb		3567456	0		=			
ANR	3567766	Identifier	sdb		3567456	0					
ANR	3567767	PtrMemberAccess	bf -> rbin -> sdb		3567456	1					
ANR	3567768	PtrMemberAccess	bf -> rbin		3567456	0					
ANR	3567769	Identifier	bf		3567456	0					
ANR	3567770	Identifier	rbin		3567456	1					
ANR	3567771	Identifier	sdb		3567456	1					
ANR	3567772	IfStatement	if ( sdb )		3567456	23					
ANR	3567773	Condition	sdb	178:5:4450:4452	3567456	0	True				
ANR	3567774	Identifier	sdb		3567456	0					
ANR	3567775	CompoundStatement		67:2:2137:2181	3567456	1					
ANR	3567776	IdentifierDeclStatement	Sdb * bdb = bf -> sdb ;	179:2:4459:4477	3567456	0	True				
ANR	3567777	IdentifierDecl	* bdb = bf -> sdb		3567456	0					
ANR	3567778	IdentifierDeclType	Sdb *		3567456	0					
ANR	3567779	Identifier	bdb		3567456	1					
ANR	3567780	AssignmentExpression	* bdb = bf -> sdb		3567456	2		=			
ANR	3567781	Identifier	bdb		3567456	0					
ANR	3567782	PtrMemberAccess	bf -> sdb		3567456	1					
ANR	3567783	Identifier	bf		3567456	0					
ANR	3567784	Identifier	sdb		3567456	1					
ANR	3567785	ExpressionStatement	"sdb_ns_set ( bdb , ""info"" , o -> kv )"	180:2:4497:4528	3567456	1	True				
ANR	3567786	CallExpression	"sdb_ns_set ( bdb , ""info"" , o -> kv )"		3567456	0					
ANR	3567787	Callee	sdb_ns_set		3567456	0					
ANR	3567788	Identifier	sdb_ns_set		3567456	0					
ANR	3567789	ArgumentList	bdb		3567456	1					
ANR	3567790	Argument	bdb		3567456	0					
ANR	3567791	Identifier	bdb		3567456	0					
ANR	3567792	Argument	"""info"""		3567456	1					
ANR	3567793	PrimaryExpression	"""info"""		3567456	0					
ANR	3567794	Argument	o -> kv		3567456	2					
ANR	3567795	PtrMemberAccess	o -> kv		3567456	0					
ANR	3567796	Identifier	o		3567456	0					
ANR	3567797	Identifier	kv		3567456	1					
ANR	3567798	ExpressionStatement	"sdb_ns_set ( bdb , ""addrinfo"" , bf -> sdb_addrinfo )"	181:2:4532:4578	3567456	2	True				
ANR	3567799	CallExpression	"sdb_ns_set ( bdb , ""addrinfo"" , bf -> sdb_addrinfo )"		3567456	0					
ANR	3567800	Callee	sdb_ns_set		3567456	0					
ANR	3567801	Identifier	sdb_ns_set		3567456	0					
ANR	3567802	ArgumentList	bdb		3567456	1					
ANR	3567803	Argument	bdb		3567456	0					
ANR	3567804	Identifier	bdb		3567456	0					
ANR	3567805	Argument	"""addrinfo"""		3567456	1					
ANR	3567806	PrimaryExpression	"""addrinfo"""		3567456	0					
ANR	3567807	Argument	bf -> sdb_addrinfo		3567456	2					
ANR	3567808	PtrMemberAccess	bf -> sdb_addrinfo		3567456	0					
ANR	3567809	Identifier	bf		3567456	0					
ANR	3567810	Identifier	sdb_addrinfo		3567456	1					
ANR	3567811	ExpressionStatement	o -> kv = bdb	182:2:4582:4593	3567456	3	True				
ANR	3567812	AssignmentExpression	o -> kv = bdb		3567456	0		=			
ANR	3567813	PtrMemberAccess	o -> kv		3567456	0					
ANR	3567814	Identifier	o		3567456	0					
ANR	3567815	Identifier	kv		3567456	1					
ANR	3567816	Identifier	bdb		3567456	1					
ANR	3567817	ExpressionStatement	"sdb_set ( bf -> sdb , ""archs"" , ""0:0:x86:32"" , 0 )"	187:2:4736:4779	3567456	4	True				
ANR	3567818	CallExpression	"sdb_set ( bf -> sdb , ""archs"" , ""0:0:x86:32"" , 0 )"		3567456	0					
ANR	3567819	Callee	sdb_set		3567456	0					
ANR	3567820	Identifier	sdb_set		3567456	0					
ANR	3567821	ArgumentList	bf -> sdb		3567456	1					
ANR	3567822	Argument	bf -> sdb		3567456	0					
ANR	3567823	PtrMemberAccess	bf -> sdb		3567456	0					
ANR	3567824	Identifier	bf		3567456	0					
ANR	3567825	Identifier	sdb		3567456	1					
ANR	3567826	Argument	"""archs"""		3567456	1					
ANR	3567827	PrimaryExpression	"""archs"""		3567456	0					
ANR	3567828	Argument	"""0:0:x86:32"""		3567456	2					
ANR	3567829	PrimaryExpression	"""0:0:x86:32"""		3567456	0					
ANR	3567830	Argument	0		3567456	3					
ANR	3567831	PrimaryExpression	0		3567456	0					
ANR	3567832	ExpressionStatement	"sdb_ns_set ( sdb , ""cur"" , bdb )"	196:2:5109:5137	3567456	5	True				
ANR	3567833	CallExpression	"sdb_ns_set ( sdb , ""cur"" , bdb )"		3567456	0					
ANR	3567834	Callee	sdb_ns_set		3567456	0					
ANR	3567835	Identifier	sdb_ns_set		3567456	0					
ANR	3567836	ArgumentList	sdb		3567456	1					
ANR	3567837	Argument	sdb		3567456	0					
ANR	3567838	Identifier	sdb		3567456	0					
ANR	3567839	Argument	"""cur"""		3567456	1					
ANR	3567840	PrimaryExpression	"""cur"""		3567456	0					
ANR	3567841	Argument	bdb		3567456	2					
ANR	3567842	Identifier	bdb		3567456	0					
ANR	3567843	IdentifierDeclStatement	"const char * fdns = sdb_fmt ( ""fd.%d"" , bf -> fd ) ;"	197:2:5154:5198	3567456	6	True				
ANR	3567844	IdentifierDecl	"* fdns = sdb_fmt ( ""fd.%d"" , bf -> fd )"		3567456	0					
ANR	3567845	IdentifierDeclType	const char *		3567456	0					
ANR	3567846	Identifier	fdns		3567456	1					
ANR	3567847	AssignmentExpression	"* fdns = sdb_fmt ( ""fd.%d"" , bf -> fd )"		3567456	2		=			
ANR	3567848	Identifier	fdns		3567456	0					
ANR	3567849	CallExpression	"sdb_fmt ( ""fd.%d"" , bf -> fd )"		3567456	1					
ANR	3567850	Callee	sdb_fmt		3567456	0					
ANR	3567851	Identifier	sdb_fmt		3567456	0					
ANR	3567852	ArgumentList	"""fd.%d"""		3567456	1					
ANR	3567853	Argument	"""fd.%d"""		3567456	0					
ANR	3567854	PrimaryExpression	"""fd.%d"""		3567456	0					
ANR	3567855	Argument	bf -> fd		3567456	1					
ANR	3567856	PtrMemberAccess	bf -> fd		3567456	0					
ANR	3567857	Identifier	bf		3567456	0					
ANR	3567858	Identifier	fd		3567456	1					
ANR	3567859	ExpressionStatement	"sdb_ns_set ( sdb , fdns , bdb )"	198:2:5202:5229	3567456	7	True				
ANR	3567860	CallExpression	"sdb_ns_set ( sdb , fdns , bdb )"		3567456	0					
ANR	3567861	Callee	sdb_ns_set		3567456	0					
ANR	3567862	Identifier	sdb_ns_set		3567456	0					
ANR	3567863	ArgumentList	sdb		3567456	1					
ANR	3567864	Argument	sdb		3567456	0					
ANR	3567865	Identifier	sdb		3567456	0					
ANR	3567866	Argument	fdns		3567456	1					
ANR	3567867	Identifier	fdns		3567456	0					
ANR	3567868	Argument	bdb		3567456	2					
ANR	3567869	Identifier	bdb		3567456	0					
ANR	3567870	ExpressionStatement	bf -> sdb -> refs ++	199:2:5246:5261	3567456	8	True				
ANR	3567871	PostIncDecOperationExpression	bf -> sdb -> refs ++		3567456	0					
ANR	3567872	PtrMemberAccess	bf -> sdb -> refs		3567456	0					
ANR	3567873	PtrMemberAccess	bf -> sdb		3567456	0					
ANR	3567874	Identifier	bf		3567456	0					
ANR	3567875	Identifier	sdb		3567456	1					
ANR	3567876	Identifier	refs		3567456	1					
ANR	3567877	IncDec	++		3567456	1					
ANR	3567878	ReturnStatement	return o ;	201:1:5267:5275	3567456	24	True				
ANR	3567879	Identifier	o		3567456	0					
ANR	3567880	ReturnType	R_IPI RBinObject *		3567456	1					
ANR	3567881	Identifier	r_bin_object_new		3567456	2					
ANR	3567882	ParameterList	"RBinFile * bf , RBinPlugin * plugin , ut64 baseaddr , ut64 loadaddr , ut64 offset , ut64 sz"		3567456	3					
ANR	3567883	Parameter	RBinFile * bf	131:35:2930:2941	3567456	0	True				
ANR	3567884	ParameterType	RBinFile *		3567456	0					
ANR	3567885	Identifier	bf		3567456	1					
ANR	3567886	Parameter	RBinPlugin * plugin	131:49:2944:2961	3567456	1	True				
ANR	3567887	ParameterType	RBinPlugin *		3567456	0					
ANR	3567888	Identifier	plugin		3567456	1					
ANR	3567889	Parameter	ut64 baseaddr	131:69:2964:2976	3567456	2	True				
ANR	3567890	ParameterType	ut64		3567456	0					
ANR	3567891	Identifier	baseaddr		3567456	1					
ANR	3567892	Parameter	ut64 loadaddr	131:84:2979:2991	3567456	3	True				
ANR	3567893	ParameterType	ut64		3567456	0					
ANR	3567894	Identifier	loadaddr		3567456	1					
ANR	3567895	Parameter	ut64 offset	131:99:2994:3004	3567456	4	True				
ANR	3567896	ParameterType	ut64		3567456	0					
ANR	3567897	Identifier	offset		3567456	1					
ANR	3567898	Parameter	ut64 sz	131:112:3007:3013	3567456	5	True				
ANR	3567899	ParameterType	ut64		3567456	0					
ANR	3567900	Identifier	sz		3567456	1					
ANR	3567901	CFGEntryNode	ENTRY		3567456		True				
ANR	3567902	CFGExitNode	EXIT		3567456		True				
ANR	3567903	Symbol	o -> obj_size		3567456						
ANR	3567904	Symbol	* bf -> sdb		3567456						
ANR	3567905	Symbol	bf -> rbin -> verbose		3567456						
ANR	3567906	Symbol	bytes_sz		3567456						
ANR	3567907	Symbol	bf -> rbin -> sdb		3567456						
ANR	3567908	Symbol	bf -> fd		3567456						
ANR	3567909	Symbol	ht_pp_new0		3567456						
ANR	3567910	Symbol	bf -> buf		3567456						
ANR	3567911	Symbol	o -> classes		3567456						
ANR	3567912	Symbol	r_bin_class_free		3567456						
ANR	3567913	Symbol	NULL		3567456						
ANR	3567914	Symbol	o -> regstate		3567456						
ANR	3567915	Symbol	o -> loadaddr		3567456						
ANR	3567916	Symbol	offset		3567456						
ANR	3567917	Symbol	o -> classes_ht		3567456						
ANR	3567918	Symbol	r_list_newf		3567456						
ANR	3567919	Symbol	o -> baddr_shift		3567456						
ANR	3567920	Symbol	baseaddr		3567456						
ANR	3567921	Symbol	fdns		3567456						
ANR	3567922	Symbol	RBinObject		3567456						
ANR	3567923	Symbol	ht_up_new0		3567456						
ANR	3567924	Symbol	plugin -> load_buffer		3567456						
ANR	3567925	Symbol	sdb		3567456						
ANR	3567926	Symbol	R_NEW0		3567456						
ANR	3567927	Symbol	* * bf		3567456						
ANR	3567928	Symbol	bf -> sdb_info		3567456						
ANR	3567929	Symbol	* bf -> rbin		3567456						
ANR	3567930	Symbol	bf		3567456						
ANR	3567931	Symbol	plugin -> name		3567456						
ANR	3567932	Symbol	o -> kv		3567456						
ANR	3567933	Symbol	bf -> rbin		3567456						
ANR	3567934	Symbol	bf -> sdb -> refs		3567456						
ANR	3567935	Symbol	& o -> bin_obj		3567456						
ANR	3567936	Symbol	o -> boffset		3567456						
ANR	3567937	Symbol	bf -> sdb_addrinfo		3567456						
ANR	3567938	Symbol	loadaddr		3567456						
ANR	3567939	Symbol	UT64_MAX		3567456						
ANR	3567940	Symbol	sdb_fmt		3567456						
ANR	3567941	Symbol	o -> baddr		3567456						
ANR	3567942	Symbol	o -> methods_ht		3567456						
ANR	3567943	Symbol	sdb_new0		3567456						
ANR	3567944	Symbol	bdb		3567456						
ANR	3567945	Symbol	sz		3567456						
ANR	3567946	Symbol	o -> plugin		3567456						
ANR	3567947	Symbol	* bf		3567456						
ANR	3567948	Symbol	* plugin		3567456						
ANR	3567949	Symbol	bf -> sdb		3567456						
ANR	3567950	Symbol	o		3567456						
ANR	3567951	Symbol	o -> strings_db		3567456						
ANR	3567952	Symbol	plugin		3567456						
ANR	3567953	Symbol	* o		3567456						
ANR	3567954	Symbol	r_buf_size		3567456						
ANR	3567955	Function	filter_classes	204:0:5280:6041							
ANR	3567956	FunctionDef	"filter_classes (RBinFile * bf , RList * list)"		3567955	0					
ANR	3567957	CompoundStatement		204:54:5334:6041	3567955	0					
ANR	3567958	IdentifierDeclStatement	Sdb * db = sdb_new0 ( ) ;	205:1:5337:5358	3567955	0	True				
ANR	3567959	IdentifierDecl	* db = sdb_new0 ( )		3567955	0					
ANR	3567960	IdentifierDeclType	Sdb *		3567955	0					
ANR	3567961	Identifier	db		3567955	1					
ANR	3567962	AssignmentExpression	* db = sdb_new0 ( )		3567955	2		=			
ANR	3567963	Identifier	db		3567955	0					
ANR	3567964	CallExpression	sdb_new0 ( )		3567955	1					
ANR	3567965	Callee	sdb_new0		3567955	0					
ANR	3567966	Identifier	sdb_new0		3567955	0					
ANR	3567967	ArgumentList			3567955	1					
ANR	3567968	IdentifierDeclStatement	HtPP * ht = ht_pp_new0 ( ) ;	206:1:5361:5385	3567955	1	True				
ANR	3567969	IdentifierDecl	* ht = ht_pp_new0 ( )		3567955	0					
ANR	3567970	IdentifierDeclType	HtPP *		3567955	0					
ANR	3567971	Identifier	ht		3567955	1					
ANR	3567972	AssignmentExpression	* ht = ht_pp_new0 ( )		3567955	2		=			
ANR	3567973	Identifier	ht		3567955	0					
ANR	3567974	CallExpression	ht_pp_new0 ( )		3567955	1					
ANR	3567975	Callee	ht_pp_new0		3567955	0					
ANR	3567976	Identifier	ht_pp_new0		3567955	0					
ANR	3567977	ArgumentList			3567955	1					
ANR	3567978	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	207:1:5388:5411	3567955	2	True				
ANR	3567979	IdentifierDecl	* iter		3567955	0					
ANR	3567980	IdentifierDeclType	RListIter *		3567955	0					
ANR	3567981	Identifier	iter		3567955	1					
ANR	3567982	IdentifierDecl	* iter2		3567955	1					
ANR	3567983	IdentifierDeclType	RListIter *		3567955	0					
ANR	3567984	Identifier	iter2		3567955	1					
ANR	3567985	IdentifierDeclStatement	RBinClass * cls ;	208:1:5414:5428	3567955	3	True				
ANR	3567986	IdentifierDecl	* cls		3567955	0					
ANR	3567987	IdentifierDeclType	RBinClass *		3567955	0					
ANR	3567988	Identifier	cls		3567955	1					
ANR	3567989	IdentifierDeclStatement	RBinSymbol * sym ;	209:1:5431:5446	3567955	4	True				
ANR	3567990	IdentifierDecl	* sym		3567955	0					
ANR	3567991	IdentifierDeclType	RBinSymbol *		3567955	0					
ANR	3567992	Identifier	sym		3567955	1					
ANR	3567993	Statement	r_list_foreach	210:1:5449:5462	3567955	5	True				
ANR	3567994	Statement	(	210:16:5464:5464	3567955	6	True				
ANR	3567995	Statement	list	210:17:5465:5468	3567955	7	True				
ANR	3567996	Statement	","	210:21:5469:5469	3567955	8	True				
ANR	3567997	Statement	iter	210:23:5471:5474	3567955	9	True				
ANR	3567998	Statement	","	210:27:5475:5475	3567955	10	True				
ANR	3567999	Statement	cls	210:29:5477:5479	3567955	11	True				
ANR	3568000	Statement	)	210:32:5480:5480	3567955	12	True				
ANR	3568001	CompoundStatement		12:2:233:273	3567955	13					
ANR	3568002	IfStatement	if ( ! cls -> name )		3567955	0					
ANR	3568003	Condition	! cls -> name	211:6:5490:5499	3567955	0	True				
ANR	3568004	UnaryOperationExpression	! cls -> name		3567955	0					
ANR	3568005	UnaryOperator	!		3567955	0					
ANR	3568006	PtrMemberAccess	cls -> name		3567955	1					
ANR	3568007	Identifier	cls		3567955	0					
ANR	3568008	Identifier	name		3567955	1					
ANR	3568009	CompoundStatement		8:18:167:167	3567955	1					
ANR	3568010	ContinueStatement	continue ;	212:3:5507:5515	3567955	0	True				
ANR	3568011	IdentifierDeclStatement	int namepad_len = strlen ( cls -> name ) + 32 ;	214:2:5523:5564	3567955	1	True				
ANR	3568012	IdentifierDecl	namepad_len = strlen ( cls -> name ) + 32		3567955	0					
ANR	3568013	IdentifierDeclType	int		3567955	0					
ANR	3568014	Identifier	namepad_len		3567955	1					
ANR	3568015	AssignmentExpression	namepad_len = strlen ( cls -> name ) + 32		3567955	2		=			
ANR	3568016	Identifier	namepad_len		3567955	0					
ANR	3568017	AdditiveExpression	strlen ( cls -> name ) + 32		3567955	1		+			
ANR	3568018	CallExpression	strlen ( cls -> name )		3567955	0					
ANR	3568019	Callee	strlen		3567955	0					
ANR	3568020	Identifier	strlen		3567955	0					
ANR	3568021	ArgumentList	cls -> name		3567955	1					
ANR	3568022	Argument	cls -> name		3567955	0					
ANR	3568023	PtrMemberAccess	cls -> name		3567955	0					
ANR	3568024	Identifier	cls		3567955	0					
ANR	3568025	Identifier	name		3567955	1					
ANR	3568026	PrimaryExpression	32		3567955	1					
ANR	3568027	IdentifierDeclStatement	char * namepad = malloc ( namepad_len + 1 ) ;	215:2:5568:5608	3567955	2	True				
ANR	3568028	IdentifierDecl	* namepad = malloc ( namepad_len + 1 )		3567955	0					
ANR	3568029	IdentifierDeclType	char *		3567955	0					
ANR	3568030	Identifier	namepad		3567955	1					
ANR	3568031	AssignmentExpression	* namepad = malloc ( namepad_len + 1 )		3567955	2		=			
ANR	3568032	Identifier	namepad		3567955	0					
ANR	3568033	CallExpression	malloc ( namepad_len + 1 )		3567955	1					
ANR	3568034	Callee	malloc		3567955	0					
ANR	3568035	Identifier	malloc		3567955	0					
ANR	3568036	ArgumentList	namepad_len + 1		3567955	1					
ANR	3568037	Argument	namepad_len + 1		3567955	0					
ANR	3568038	AdditiveExpression	namepad_len + 1		3567955	0		+			
ANR	3568039	Identifier	namepad_len		3567955	0					
ANR	3568040	PrimaryExpression	1		3567955	1					
ANR	3568041	IfStatement	if ( namepad )		3567955	3					
ANR	3568042	Condition	namepad	216:6:5616:5622	3567955	0	True				
ANR	3568043	Identifier	namepad		3567955	0					
ANR	3568044	CompoundStatement		14:3:295:302	3567955	1					
ANR	3568045	IdentifierDeclStatement	char * p ;	217:3:5630:5637	3567955	0	True				
ANR	3568046	IdentifierDecl	* p		3567955	0					
ANR	3568047	IdentifierDeclType	char *		3567955	0					
ANR	3568048	Identifier	p		3567955	1					
ANR	3568049	ExpressionStatement	"strcpy ( namepad , cls -> name )"	218:3:5642:5669	3567955	1	True				
ANR	3568050	CallExpression	"strcpy ( namepad , cls -> name )"		3567955	0					
ANR	3568051	Callee	strcpy		3567955	0					
ANR	3568052	Identifier	strcpy		3567955	0					
ANR	3568053	ArgumentList	namepad		3567955	1					
ANR	3568054	Argument	namepad		3567955	0					
ANR	3568055	Identifier	namepad		3567955	0					
ANR	3568056	Argument	cls -> name		3567955	1					
ANR	3568057	PtrMemberAccess	cls -> name		3567955	0					
ANR	3568058	Identifier	cls		3567955	0					
ANR	3568059	Identifier	name		3567955	1					
ANR	3568060	ExpressionStatement	"p = r_bin_filter_name ( bf , db , cls -> index , namepad )"	219:3:5674:5725	3567955	2	True				
ANR	3568061	AssignmentExpression	"p = r_bin_filter_name ( bf , db , cls -> index , namepad )"		3567955	0		=			
ANR	3568062	Identifier	p		3567955	0					
ANR	3568063	CallExpression	"r_bin_filter_name ( bf , db , cls -> index , namepad )"		3567955	1					
ANR	3568064	Callee	r_bin_filter_name		3567955	0					
ANR	3568065	Identifier	r_bin_filter_name		3567955	0					
ANR	3568066	ArgumentList	bf		3567955	1					
ANR	3568067	Argument	bf		3567955	0					
ANR	3568068	Identifier	bf		3567955	0					
ANR	3568069	Argument	db		3567955	1					
ANR	3568070	Identifier	db		3567955	0					
ANR	3568071	Argument	cls -> index		3567955	2					
ANR	3568072	PtrMemberAccess	cls -> index		3567955	0					
ANR	3568073	Identifier	cls		3567955	0					
ANR	3568074	Identifier	index		3567955	1					
ANR	3568075	Argument	namepad		3567955	3					
ANR	3568076	Identifier	namepad		3567955	0					
ANR	3568077	IfStatement	if ( p )		3567955	3					
ANR	3568078	Condition	p	220:7:5734:5734	3567955	0	True				
ANR	3568079	Identifier	p		3567955	0					
ANR	3568080	CompoundStatement		17:10:402:402	3567955	1					
ANR	3568081	ExpressionStatement	namepad = p	221:4:5743:5754	3567955	0	True				
ANR	3568082	AssignmentExpression	namepad = p		3567955	0		=			
ANR	3568083	Identifier	namepad		3567955	0					
ANR	3568084	Identifier	p		3567955	1					
ANR	3568085	ExpressionStatement	free ( cls -> name )	223:3:5764:5780	3567955	4	True				
ANR	3568086	CallExpression	free ( cls -> name )		3567955	0					
ANR	3568087	Callee	free		3567955	0					
ANR	3568088	Identifier	free		3567955	0					
ANR	3568089	ArgumentList	cls -> name		3567955	1					
ANR	3568090	Argument	cls -> name		3567955	0					
ANR	3568091	PtrMemberAccess	cls -> name		3567955	0					
ANR	3568092	Identifier	cls		3567955	0					
ANR	3568093	Identifier	name		3567955	1					
ANR	3568094	ExpressionStatement	cls -> name = namepad	224:3:5785:5804	3567955	5	True				
ANR	3568095	AssignmentExpression	cls -> name = namepad		3567955	0		=			
ANR	3568096	PtrMemberAccess	cls -> name		3567955	0					
ANR	3568097	Identifier	cls		3567955	0					
ANR	3568098	Identifier	name		3567955	1					
ANR	3568099	Identifier	namepad		3567955	1					
ANR	3568100	Statement	r_list_foreach	225:3:5809:5822	3567955	6	True				
ANR	3568101	Statement	(	225:18:5824:5824	3567955	7	True				
ANR	3568102	Statement	cls	225:19:5825:5827	3567955	8	True				
ANR	3568103	Statement	->	225:22:5828:5829	3567955	9	True				
ANR	3568104	Statement	methods	225:24:5830:5836	3567955	10	True				
ANR	3568105	Statement	","	225:31:5837:5837	3567955	11	True				
ANR	3568106	Statement	iter2	225:33:5839:5843	3567955	12	True				
ANR	3568107	Statement	","	225:38:5844:5844	3567955	13	True				
ANR	3568108	Statement	sym	225:40:5846:5848	3567955	14	True				
ANR	3568109	Statement	)	225:43:5849:5849	3567955	15	True				
ANR	3568110	CompoundStatement		22:45:516:516	3567955	16					
ANR	3568111	IfStatement	if ( sym -> name )		3567955	0					
ANR	3568112	Condition	sym -> name	226:8:5861:5869	3567955	0	True				
ANR	3568113	PtrMemberAccess	sym -> name		3567955	0					
ANR	3568114	Identifier	sym		3567955	0					
ANR	3568115	Identifier	name		3567955	1					
ANR	3568116	CompoundStatement		23:19:537:537	3567955	1					
ANR	3568117	ExpressionStatement	"r_bin_filter_sym ( bf , ht , sym -> vaddr , sym )"	227:5:5879:5921	3567955	0	True				
ANR	3568118	CallExpression	"r_bin_filter_sym ( bf , ht , sym -> vaddr , sym )"		3567955	0					
ANR	3568119	Callee	r_bin_filter_sym		3567955	0					
ANR	3568120	Identifier	r_bin_filter_sym		3567955	0					
ANR	3568121	ArgumentList	bf		3567955	1					
ANR	3568122	Argument	bf		3567955	0					
ANR	3568123	Identifier	bf		3567955	0					
ANR	3568124	Argument	ht		3567955	1					
ANR	3568125	Identifier	ht		3567955	0					
ANR	3568126	Argument	sym -> vaddr		3567955	2					
ANR	3568127	PtrMemberAccess	sym -> vaddr		3567955	0					
ANR	3568128	Identifier	sym		3567955	0					
ANR	3568129	Identifier	vaddr		3567955	1					
ANR	3568130	Argument	sym		3567955	3					
ANR	3568131	Identifier	sym		3567955	0					
ANR	3568132	ElseStatement	else		3567955	0					
ANR	3568133	CompoundStatement		27:9:608:608	3567955	0					
ANR	3568134	ExpressionStatement	"eprintf ( ""Cannot alloc %d byte(s)\\n"" , namepad_len )"	231:3:5948:5998	3567955	0	True				
ANR	3568135	CallExpression	"eprintf ( ""Cannot alloc %d byte(s)\\n"" , namepad_len )"		3567955	0					
ANR	3568136	Callee	eprintf		3567955	0					
ANR	3568137	Identifier	eprintf		3567955	0					
ANR	3568138	ArgumentList	"""Cannot alloc %d byte(s)\\n"""		3567955	1					
ANR	3568139	Argument	"""Cannot alloc %d byte(s)\\n"""		3567955	0					
ANR	3568140	PrimaryExpression	"""Cannot alloc %d byte(s)\\n"""		3567955	0					
ANR	3568141	Argument	namepad_len		3567955	1					
ANR	3568142	Identifier	namepad_len		3567955	0					
ANR	3568143	ExpressionStatement	sdb_free ( db )	234:1:6008:6021	3567955	14	True				
ANR	3568144	CallExpression	sdb_free ( db )		3567955	0					
ANR	3568145	Callee	sdb_free		3567955	0					
ANR	3568146	Identifier	sdb_free		3567955	0					
ANR	3568147	ArgumentList	db		3567955	1					
ANR	3568148	Argument	db		3567955	0					
ANR	3568149	Identifier	db		3567955	0					
ANR	3568150	ExpressionStatement	ht_pp_free ( ht )	235:1:6024:6039	3567955	15	True				
ANR	3568151	CallExpression	ht_pp_free ( ht )		3567955	0					
ANR	3568152	Callee	ht_pp_free		3567955	0					
ANR	3568153	Identifier	ht_pp_free		3567955	0					
ANR	3568154	ArgumentList	ht		3567955	1					
ANR	3568155	Argument	ht		3567955	0					
ANR	3568156	Identifier	ht		3567955	0					
ANR	3568157	ReturnType	static void		3567955	1					
ANR	3568158	Identifier	filter_classes		3567955	2					
ANR	3568159	ParameterList	"RBinFile * bf , RList * list"		3567955	3					
ANR	3568160	Parameter	RBinFile * bf	204:27:5307:5318	3567955	0	True				
ANR	3568161	ParameterType	RBinFile *		3567955	0					
ANR	3568162	Identifier	bf		3567955	1					
ANR	3568163	Parameter	RList * list	204:41:5321:5331	3567955	1	True				
ANR	3568164	ParameterType	RList *		3567955	0					
ANR	3568165	Identifier	list		3567955	1					
ANR	3568166	CFGEntryNode	ENTRY		3567955		True				
ANR	3568167	CFGExitNode	EXIT		3567955		True				
ANR	3568168	CFGErrorNode	ERROR		3567955		True				
ANR	3568169	Symbol	sdb_new0		3567955						
ANR	3568170	Symbol	malloc		3567955						
ANR	3568171	Symbol	bf		3567955						
ANR	3568172	Symbol	sym		3567955						
ANR	3568173	Symbol	sym -> vaddr		3567955						
ANR	3568174	Symbol	iter2		3567955						
ANR	3568175	Symbol	iter		3567955						
ANR	3568176	Symbol	r_bin_filter_name		3567955						
ANR	3568177	Symbol	cls		3567955						
ANR	3568178	Symbol	* cls		3567955						
ANR	3568179	Symbol	namepad		3567955						
ANR	3568180	Symbol	list		3567955						
ANR	3568181	Symbol	ht		3567955						
ANR	3568182	Symbol	cls -> name		3567955						
ANR	3568183	Symbol	p		3567955						
ANR	3568184	Symbol	strlen		3567955						
ANR	3568185	Symbol	* sym		3567955						
ANR	3568186	Symbol	ht_pp_new0		3567955						
ANR	3568187	Symbol	sym -> name		3567955						
ANR	3568188	Symbol	db		3567955						
ANR	3568189	Symbol	namepad_len		3567955						
ANR	3568190	Symbol	cls -> index		3567955						
ANR	3568191	Function	list2rbtree	238:0:6044:6256							
ANR	3568192	FunctionDef	list2rbtree (RList * relocs)		3568191	0					
ANR	3568193	CompoundStatement		238:42:6086:6256	3568191	0					
ANR	3568194	IdentifierDeclStatement	RListIter * it ;	239:1:6089:6102	3568191	0	True				
ANR	3568195	IdentifierDecl	* it		3568191	0					
ANR	3568196	IdentifierDeclType	RListIter *		3568191	0					
ANR	3568197	Identifier	it		3568191	1					
ANR	3568198	IdentifierDeclStatement	RBinReloc * reloc ;	240:1:6105:6121	3568191	1	True				
ANR	3568199	IdentifierDecl	* reloc		3568191	0					
ANR	3568200	IdentifierDeclType	RBinReloc *		3568191	0					
ANR	3568201	Identifier	reloc		3568191	1					
ANR	3568202	IdentifierDeclStatement	RBNode * res = NULL ;	241:1:6124:6142	3568191	2	True				
ANR	3568203	IdentifierDecl	* res = NULL		3568191	0					
ANR	3568204	IdentifierDeclType	RBNode *		3568191	0					
ANR	3568205	Identifier	res		3568191	1					
ANR	3568206	AssignmentExpression	* res = NULL		3568191	2		=			
ANR	3568207	Identifier	NULL		3568191	0					
ANR	3568208	Identifier	NULL		3568191	1					
ANR	3568209	Statement	r_list_foreach	243:1:6146:6159	3568191	3	True				
ANR	3568210	Statement	(	243:16:6161:6161	3568191	4	True				
ANR	3568211	Statement	relocs	243:17:6162:6167	3568191	5	True				
ANR	3568212	Statement	","	243:23:6168:6168	3568191	6	True				
ANR	3568213	Statement	it	243:25:6170:6171	3568191	7	True				
ANR	3568214	Statement	","	243:27:6172:6172	3568191	8	True				
ANR	3568215	Statement	reloc	243:29:6174:6178	3568191	9	True				
ANR	3568216	Statement	)	243:34:6179:6179	3568191	10	True				
ANR	3568217	CompoundStatement		6:36:94:94	3568191	11					
ANR	3568218	ExpressionStatement	"r_rbtree_insert ( & res , reloc , & reloc -> vrb , reloc_cmp )"	244:2:6185:6238	3568191	0	True				
ANR	3568219	CallExpression	"r_rbtree_insert ( & res , reloc , & reloc -> vrb , reloc_cmp )"		3568191	0					
ANR	3568220	Callee	r_rbtree_insert		3568191	0					
ANR	3568221	Identifier	r_rbtree_insert		3568191	0					
ANR	3568222	ArgumentList	& res		3568191	1					
ANR	3568223	Argument	& res		3568191	0					
ANR	3568224	UnaryOperationExpression	& res		3568191	0					
ANR	3568225	UnaryOperator	&		3568191	0					
ANR	3568226	Identifier	res		3568191	1					
ANR	3568227	Argument	reloc		3568191	1					
ANR	3568228	Identifier	reloc		3568191	0					
ANR	3568229	Argument	& reloc -> vrb		3568191	2					
ANR	3568230	UnaryOperationExpression	& reloc -> vrb		3568191	0					
ANR	3568231	UnaryOperator	&		3568191	0					
ANR	3568232	PtrMemberAccess	reloc -> vrb		3568191	1					
ANR	3568233	Identifier	reloc		3568191	0					
ANR	3568234	Identifier	vrb		3568191	1					
ANR	3568235	Argument	reloc_cmp		3568191	3					
ANR	3568236	Identifier	reloc_cmp		3568191	0					
ANR	3568237	ReturnStatement	return res ;	246:1:6244:6254	3568191	12	True				
ANR	3568238	Identifier	res		3568191	0					
ANR	3568239	ReturnType	static RBNode *		3568191	1					
ANR	3568240	Identifier	list2rbtree		3568191	2					
ANR	3568241	ParameterList	RList * relocs		3568191	3					
ANR	3568242	Parameter	RList * relocs	238:27:6071:6083	3568191	0	True				
ANR	3568243	ParameterType	RList *		3568191	0					
ANR	3568244	Identifier	relocs		3568191	1					
ANR	3568245	CFGEntryNode	ENTRY		3568191		True				
ANR	3568246	CFGExitNode	EXIT		3568191		True				
ANR	3568247	Symbol	res		3568191						
ANR	3568248	Symbol	& res		3568191						
ANR	3568249	Symbol	NULL		3568191						
ANR	3568250	Symbol	it		3568191						
ANR	3568251	Symbol	reloc		3568191						
ANR	3568252	Symbol	relocs		3568191						
ANR	3568253	Symbol	& reloc -> vrb		3568191						
ANR	3568254	Symbol	reloc_cmp		3568191						
ANR	3568255	Function	r_bin_object_set_items	249:0:6259:10189							
ANR	3568256	FunctionDef	"r_bin_object_set_items (RBinFile * bf , RBinObject * o)"		3568255	0					
ANR	3568257	CompoundStatement		249:62:6321:10189	3568255	0					
ANR	3568258	ExpressionStatement	"r_return_val_if_fail ( bf && o && o -> plugin , false )"	250:1:6324:6374	3568255	0	True				
ANR	3568259	CallExpression	"r_return_val_if_fail ( bf && o && o -> plugin , false )"		3568255	0					
ANR	3568260	Callee	r_return_val_if_fail		3568255	0					
ANR	3568261	Identifier	r_return_val_if_fail		3568255	0					
ANR	3568262	ArgumentList	bf && o && o -> plugin		3568255	1					
ANR	3568263	Argument	bf && o && o -> plugin		3568255	0					
ANR	3568264	AndExpression	bf && o && o -> plugin		3568255	0		&&			
ANR	3568265	Identifier	bf		3568255	0					
ANR	3568266	AndExpression	o && o -> plugin		3568255	1		&&			
ANR	3568267	Identifier	o		3568255	0					
ANR	3568268	PtrMemberAccess	o -> plugin		3568255	1					
ANR	3568269	Identifier	o		3568255	0					
ANR	3568270	Identifier	plugin		3568255	1					
ANR	3568271	Argument	false		3568255	1					
ANR	3568272	Identifier	false		3568255	0					
ANR	3568273	IdentifierDeclStatement	int i ;	252:1:6378:6383	3568255	1	True				
ANR	3568274	IdentifierDecl	i		3568255	0					
ANR	3568275	IdentifierDeclType	int		3568255	0					
ANR	3568276	Identifier	i		3568255	1					
ANR	3568277	IdentifierDeclStatement	bool isSwift = false ;	253:1:6386:6406	3568255	2	True				
ANR	3568278	IdentifierDecl	isSwift = false		3568255	0					
ANR	3568279	IdentifierDeclType	bool		3568255	0					
ANR	3568280	Identifier	isSwift		3568255	1					
ANR	3568281	AssignmentExpression	isSwift = false		3568255	2		=			
ANR	3568282	Identifier	false		3568255	0					
ANR	3568283	Identifier	false		3568255	1					
ANR	3568284	IdentifierDeclStatement	RBin * bin = bf -> rbin ;	254:1:6409:6429	3568255	3	True				
ANR	3568285	IdentifierDecl	* bin = bf -> rbin		3568255	0					
ANR	3568286	IdentifierDeclType	RBin *		3568255	0					
ANR	3568287	Identifier	bin		3568255	1					
ANR	3568288	AssignmentExpression	* bin = bf -> rbin		3568255	2		=			
ANR	3568289	Identifier	bin		3568255	0					
ANR	3568290	PtrMemberAccess	bf -> rbin		3568255	1					
ANR	3568291	Identifier	bf		3568255	0					
ANR	3568292	Identifier	rbin		3568255	1					
ANR	3568293	IdentifierDeclStatement	RBinPlugin * p = o -> plugin ;	255:1:6432:6457	3568255	4	True				
ANR	3568294	IdentifierDecl	* p = o -> plugin		3568255	0					
ANR	3568295	IdentifierDeclType	RBinPlugin *		3568255	0					
ANR	3568296	Identifier	p		3568255	1					
ANR	3568297	AssignmentExpression	* p = o -> plugin		3568255	2		=			
ANR	3568298	Identifier	p		3568255	0					
ANR	3568299	PtrMemberAccess	o -> plugin		3568255	1					
ANR	3568300	Identifier	o		3568255	0					
ANR	3568301	Identifier	plugin		3568255	1					
ANR	3568302	IdentifierDeclStatement	int minlen = ( bf -> rbin -> minstrlen > 0 ) ? bf -> rbin -> minstrlen : p -> minstrlen ;	256:1:6460:6535	3568255	5	True				
ANR	3568303	IdentifierDecl	minlen = ( bf -> rbin -> minstrlen > 0 ) ? bf -> rbin -> minstrlen : p -> minstrlen		3568255	0					
ANR	3568304	IdentifierDeclType	int		3568255	0					
ANR	3568305	Identifier	minlen		3568255	1					
ANR	3568306	AssignmentExpression	minlen = ( bf -> rbin -> minstrlen > 0 ) ? bf -> rbin -> minstrlen : p -> minstrlen		3568255	2		=			
ANR	3568307	Identifier	minlen		3568255	0					
ANR	3568308	ConditionalExpression	( bf -> rbin -> minstrlen > 0 ) ? bf -> rbin -> minstrlen : p -> minstrlen		3568255	1					
ANR	3568309	Condition	bf -> rbin -> minstrlen > 0		3568255	0					
ANR	3568310	RelationalExpression	bf -> rbin -> minstrlen > 0		3568255	0		>			
ANR	3568311	PtrMemberAccess	bf -> rbin -> minstrlen		3568255	0					
ANR	3568312	PtrMemberAccess	bf -> rbin		3568255	0					
ANR	3568313	Identifier	bf		3568255	0					
ANR	3568314	Identifier	rbin		3568255	1					
ANR	3568315	Identifier	minstrlen		3568255	1					
ANR	3568316	PrimaryExpression	0		3568255	1					
ANR	3568317	PtrMemberAccess	bf -> rbin -> minstrlen		3568255	1					
ANR	3568318	PtrMemberAccess	bf -> rbin		3568255	0					
ANR	3568319	Identifier	bf		3568255	0					
ANR	3568320	Identifier	rbin		3568255	1					
ANR	3568321	Identifier	minstrlen		3568255	1					
ANR	3568322	PtrMemberAccess	p -> minstrlen		3568255	2					
ANR	3568323	Identifier	p		3568255	0					
ANR	3568324	Identifier	minstrlen		3568255	1					
ANR	3568325	ExpressionStatement	bf -> o = o	257:1:6538:6547	3568255	6	True				
ANR	3568326	AssignmentExpression	bf -> o = o		3568255	0		=			
ANR	3568327	PtrMemberAccess	bf -> o		3568255	0					
ANR	3568328	Identifier	bf		3568255	0					
ANR	3568329	Identifier	o		3568255	1					
ANR	3568330	Identifier	o		3568255	1					
ANR	3568331	IfStatement	if ( p -> file_type )		3568255	7					
ANR	3568332	Condition	p -> file_type	259:5:6555:6566	3568255	0	True				
ANR	3568333	PtrMemberAccess	p -> file_type		3568255	0					
ANR	3568334	Identifier	p		3568255	0					
ANR	3568335	Identifier	file_type		3568255	1					
ANR	3568336	CompoundStatement		12:2:251:279	3568255	1					
ANR	3568337	IdentifierDeclStatement	int type = p -> file_type ( bf ) ;	260:2:6573:6601	3568255	0	True				
ANR	3568338	IdentifierDecl	type = p -> file_type ( bf )		3568255	0					
ANR	3568339	IdentifierDeclType	int		3568255	0					
ANR	3568340	Identifier	type		3568255	1					
ANR	3568341	AssignmentExpression	type = p -> file_type ( bf )		3568255	2		=			
ANR	3568342	Identifier	type		3568255	0					
ANR	3568343	CallExpression	p -> file_type ( bf )		3568255	1					
ANR	3568344	Callee	p -> file_type		3568255	0					
ANR	3568345	PtrMemberAccess	p -> file_type		3568255	0					
ANR	3568346	Identifier	p		3568255	0					
ANR	3568347	Identifier	file_type		3568255	1					
ANR	3568348	ArgumentList	bf		3568255	1					
ANR	3568349	Argument	bf		3568255	0					
ANR	3568350	Identifier	bf		3568255	0					
ANR	3568351	IfStatement	if ( type == R_BIN_TYPE_CORE )		3568255	1					
ANR	3568352	Condition	type == R_BIN_TYPE_CORE	261:6:6609:6631	3568255	0	True				
ANR	3568353	EqualityExpression	type == R_BIN_TYPE_CORE		3568255	0		==			
ANR	3568354	Identifier	type		3568255	0					
ANR	3568355	Identifier	R_BIN_TYPE_CORE		3568255	1					
ANR	3568356	CompoundStatement		13:31:312:312	3568255	1					
ANR	3568357	IfStatement	if ( p -> regstate )		3568255	0					
ANR	3568358	Condition	p -> regstate	262:7:6643:6653	3568255	0	True				
ANR	3568359	PtrMemberAccess	p -> regstate		3568255	0					
ANR	3568360	Identifier	p		3568255	0					
ANR	3568361	Identifier	regstate		3568255	1					
ANR	3568362	CompoundStatement		14:20:334:334	3568255	1					
ANR	3568363	ExpressionStatement	o -> regstate = p -> regstate ( bf )	263:4:6662:6692	3568255	0	True				
ANR	3568364	AssignmentExpression	o -> regstate = p -> regstate ( bf )		3568255	0		=			
ANR	3568365	PtrMemberAccess	o -> regstate		3568255	0					
ANR	3568366	Identifier	o		3568255	0					
ANR	3568367	Identifier	regstate		3568255	1					
ANR	3568368	CallExpression	p -> regstate ( bf )		3568255	1					
ANR	3568369	Callee	p -> regstate		3568255	0					
ANR	3568370	PtrMemberAccess	p -> regstate		3568255	0					
ANR	3568371	Identifier	p		3568255	0					
ANR	3568372	Identifier	regstate		3568255	1					
ANR	3568373	ArgumentList	bf		3568255	1					
ANR	3568374	Argument	bf		3568255	0					
ANR	3568375	Identifier	bf		3568255	0					
ANR	3568376	IfStatement	if ( p -> maps )		3568255	1					
ANR	3568377	Condition	p -> maps	265:7:6706:6712	3568255	0	True				
ANR	3568378	PtrMemberAccess	p -> maps		3568255	0					
ANR	3568379	Identifier	p		3568255	0					
ANR	3568380	Identifier	maps		3568255	1					
ANR	3568381	CompoundStatement		17:16:393:393	3568255	1					
ANR	3568382	ExpressionStatement	o -> maps = p -> maps ( bf )	266:4:6721:6743	3568255	0	True				
ANR	3568383	AssignmentExpression	o -> maps = p -> maps ( bf )		3568255	0		=			
ANR	3568384	PtrMemberAccess	o -> maps		3568255	0					
ANR	3568385	Identifier	o		3568255	0					
ANR	3568386	Identifier	maps		3568255	1					
ANR	3568387	CallExpression	p -> maps ( bf )		3568255	1					
ANR	3568388	Callee	p -> maps		3568255	0					
ANR	3568389	PtrMemberAccess	p -> maps		3568255	0					
ANR	3568390	Identifier	p		3568255	0					
ANR	3568391	Identifier	maps		3568255	1					
ANR	3568392	ArgumentList	bf		3568255	1					
ANR	3568393	Argument	bf		3568255	0					
ANR	3568394	Identifier	bf		3568255	0					
ANR	3568395	IfStatement	if ( p -> boffset )		3568255	8					
ANR	3568396	Condition	p -> boffset	271:5:6763:6772	3568255	0	True				
ANR	3568397	PtrMemberAccess	p -> boffset		3568255	0					
ANR	3568398	Identifier	p		3568255	0					
ANR	3568399	Identifier	boffset		3568255	1					
ANR	3568400	CompoundStatement		23:17:453:453	3568255	1					
ANR	3568401	ExpressionStatement	o -> boffset = p -> boffset ( bf )	272:2:6779:6807	3568255	0	True				
ANR	3568402	AssignmentExpression	o -> boffset = p -> boffset ( bf )		3568255	0		=			
ANR	3568403	PtrMemberAccess	o -> boffset		3568255	0					
ANR	3568404	Identifier	o		3568255	0					
ANR	3568405	Identifier	boffset		3568255	1					
ANR	3568406	CallExpression	p -> boffset ( bf )		3568255	1					
ANR	3568407	Callee	p -> boffset		3568255	0					
ANR	3568408	PtrMemberAccess	p -> boffset		3568255	0					
ANR	3568409	Identifier	p		3568255	0					
ANR	3568410	Identifier	boffset		3568255	1					
ANR	3568411	ArgumentList	bf		3568255	1					
ANR	3568412	Argument	bf		3568255	0					
ANR	3568413	Identifier	bf		3568255	0					
ANR	3568414	IfStatement	if ( p -> size )		3568255	9					
ANR	3568415	Condition	p -> size	277:5:6947:6953	3568255	0	True				
ANR	3568416	PtrMemberAccess	p -> size		3568255	0					
ANR	3568417	Identifier	p		3568255	0					
ANR	3568418	Identifier	size		3568255	1					
ANR	3568419	CompoundStatement		29:14:634:634	3568255	1					
ANR	3568420	ExpressionStatement	o -> size = p -> size ( bf )	278:2:6960:6982	3568255	0	True				
ANR	3568421	AssignmentExpression	o -> size = p -> size ( bf )		3568255	0		=			
ANR	3568422	PtrMemberAccess	o -> size		3568255	0					
ANR	3568423	Identifier	o		3568255	0					
ANR	3568424	Identifier	size		3568255	1					
ANR	3568425	CallExpression	p -> size ( bf )		3568255	1					
ANR	3568426	Callee	p -> size		3568255	0					
ANR	3568427	PtrMemberAccess	p -> size		3568255	0					
ANR	3568428	Identifier	p		3568255	0					
ANR	3568429	Identifier	size		3568255	1					
ANR	3568430	ArgumentList	bf		3568255	1					
ANR	3568431	Argument	bf		3568255	0					
ANR	3568432	Identifier	bf		3568255	0					
ANR	3568433	IfStatement	if ( p -> binsym )		3568255	10					
ANR	3568434	Condition	p -> binsym	281:5:7036:7044	3568255	0	True				
ANR	3568435	PtrMemberAccess	p -> binsym		3568255	0					
ANR	3568436	Identifier	p		3568255	0					
ANR	3568437	Identifier	binsym		3568255	1					
ANR	3568438	CompoundStatement		33:16:725:725	3568255	1					
ANR	3568439	ForStatement	for ( i = 0 ; i < R_BIN_SYM_LAST ; i ++ )		3568255	0					
ANR	3568440	ForInit	i = 0 ;	282:7:7056:7061	3568255	0	True				
ANR	3568441	AssignmentExpression	i = 0		3568255	0		=			
ANR	3568442	Identifier	i		3568255	0					
ANR	3568443	PrimaryExpression	0		3568255	1					
ANR	3568444	Condition	i < R_BIN_SYM_LAST	282:14:7063:7080	3568255	1	True				
ANR	3568445	RelationalExpression	i < R_BIN_SYM_LAST		3568255	0		<			
ANR	3568446	Identifier	i		3568255	0					
ANR	3568447	Identifier	R_BIN_SYM_LAST		3568255	1					
ANR	3568448	PostIncDecOperationExpression	i ++	282:34:7083:7085	3568255	2	True				
ANR	3568449	Identifier	i		3568255	0					
ANR	3568450	IncDec	++		3568255	1					
ANR	3568451	CompoundStatement		34:39:766:766	3568255	3					
ANR	3568452	ExpressionStatement	"o -> binsym [ i ] = p -> binsym ( bf , i )"	283:3:7093:7125	3568255	0	True				
ANR	3568453	AssignmentExpression	"o -> binsym [ i ] = p -> binsym ( bf , i )"		3568255	0		=			
ANR	3568454	ArrayIndexing	o -> binsym [ i ]		3568255	0					
ANR	3568455	PtrMemberAccess	o -> binsym		3568255	0					
ANR	3568456	Identifier	o		3568255	0					
ANR	3568457	Identifier	binsym		3568255	1					
ANR	3568458	Identifier	i		3568255	1					
ANR	3568459	CallExpression	"p -> binsym ( bf , i )"		3568255	1					
ANR	3568460	Callee	p -> binsym		3568255	0					
ANR	3568461	PtrMemberAccess	p -> binsym		3568255	0					
ANR	3568462	Identifier	p		3568255	0					
ANR	3568463	Identifier	binsym		3568255	1					
ANR	3568464	ArgumentList	bf		3568255	1					
ANR	3568465	Argument	bf		3568255	0					
ANR	3568466	Identifier	bf		3568255	0					
ANR	3568467	Argument	i		3568255	1					
ANR	3568468	Identifier	i		3568255	0					
ANR	3568469	IfStatement	if ( o -> binsym [ i ] )		3568255	1					
ANR	3568470	Condition	o -> binsym [ i ]	284:7:7134:7145	3568255	0	True				
ANR	3568471	ArrayIndexing	o -> binsym [ i ]		3568255	0					
ANR	3568472	PtrMemberAccess	o -> binsym		3568255	0					
ANR	3568473	Identifier	o		3568255	0					
ANR	3568474	Identifier	binsym		3568255	1					
ANR	3568475	Identifier	i		3568255	1					
ANR	3568476	CompoundStatement		36:21:826:826	3568255	1					
ANR	3568477	ExpressionStatement	o -> binsym [ i ] -> paddr += o -> loadaddr	285:4:7154:7188	3568255	0	True				
ANR	3568478	AssignmentExpression	o -> binsym [ i ] -> paddr += o -> loadaddr		3568255	0		+=			
ANR	3568479	PtrMemberAccess	o -> binsym [ i ] -> paddr		3568255	0					
ANR	3568480	ArrayIndexing	o -> binsym [ i ]		3568255	0					
ANR	3568481	PtrMemberAccess	o -> binsym		3568255	0					
ANR	3568482	Identifier	o		3568255	0					
ANR	3568483	Identifier	binsym		3568255	1					
ANR	3568484	Identifier	i		3568255	1					
ANR	3568485	Identifier	paddr		3568255	1					
ANR	3568486	PtrMemberAccess	o -> loadaddr		3568255	1					
ANR	3568487	Identifier	o		3568255	0					
ANR	3568488	Identifier	loadaddr		3568255	1					
ANR	3568489	IfStatement	if ( p -> entries )		3568255	11					
ANR	3568490	Condition	p -> entries	289:5:7207:7216	3568255	0	True				
ANR	3568491	PtrMemberAccess	p -> entries		3568255	0					
ANR	3568492	Identifier	p		3568255	0					
ANR	3568493	Identifier	entries		3568255	1					
ANR	3568494	CompoundStatement		41:17:897:897	3568255	1					
ANR	3568495	ExpressionStatement	o -> entries = p -> entries ( bf )	290:2:7223:7251	3568255	0	True				
ANR	3568496	AssignmentExpression	o -> entries = p -> entries ( bf )		3568255	0		=			
ANR	3568497	PtrMemberAccess	o -> entries		3568255	0					
ANR	3568498	Identifier	o		3568255	0					
ANR	3568499	Identifier	entries		3568255	1					
ANR	3568500	CallExpression	p -> entries ( bf )		3568255	1					
ANR	3568501	Callee	p -> entries		3568255	0					
ANR	3568502	PtrMemberAccess	p -> entries		3568255	0					
ANR	3568503	Identifier	p		3568255	0					
ANR	3568504	Identifier	entries		3568255	1					
ANR	3568505	ArgumentList	bf		3568255	1					
ANR	3568506	Argument	bf		3568255	0					
ANR	3568507	Identifier	bf		3568255	0					
ANR	3568508	ExpressionStatement	"REBASE_PADDR ( o , o -> entries , RBinAddr )"	291:2:7255:7293	3568255	1	True				
ANR	3568509	CallExpression	"REBASE_PADDR ( o , o -> entries , RBinAddr )"		3568255	0					
ANR	3568510	Callee	REBASE_PADDR		3568255	0					
ANR	3568511	Identifier	REBASE_PADDR		3568255	0					
ANR	3568512	ArgumentList	o		3568255	1					
ANR	3568513	Argument	o		3568255	0					
ANR	3568514	Identifier	o		3568255	0					
ANR	3568515	Argument	o -> entries		3568255	1					
ANR	3568516	PtrMemberAccess	o -> entries		3568255	0					
ANR	3568517	Identifier	o		3568255	0					
ANR	3568518	Identifier	entries		3568255	1					
ANR	3568519	Argument	RBinAddr		3568255	2					
ANR	3568520	Identifier	RBinAddr		3568255	0					
ANR	3568521	IfStatement	if ( p -> fields )		3568255	12					
ANR	3568522	Condition	p -> fields	293:5:7303:7311	3568255	0	True				
ANR	3568523	PtrMemberAccess	p -> fields		3568255	0					
ANR	3568524	Identifier	p		3568255	0					
ANR	3568525	Identifier	fields		3568255	1					
ANR	3568526	CompoundStatement		45:16:992:992	3568255	1					
ANR	3568527	ExpressionStatement	o -> fields = p -> fields ( bf )	294:2:7318:7344	3568255	0	True				
ANR	3568528	AssignmentExpression	o -> fields = p -> fields ( bf )		3568255	0		=			
ANR	3568529	PtrMemberAccess	o -> fields		3568255	0					
ANR	3568530	Identifier	o		3568255	0					
ANR	3568531	Identifier	fields		3568255	1					
ANR	3568532	CallExpression	p -> fields ( bf )		3568255	1					
ANR	3568533	Callee	p -> fields		3568255	0					
ANR	3568534	PtrMemberAccess	p -> fields		3568255	0					
ANR	3568535	Identifier	p		3568255	0					
ANR	3568536	Identifier	fields		3568255	1					
ANR	3568537	ArgumentList	bf		3568255	1					
ANR	3568538	Argument	bf		3568255	0					
ANR	3568539	Identifier	bf		3568255	0					
ANR	3568540	IfStatement	if ( o -> fields )		3568255	1					
ANR	3568541	Condition	o -> fields	295:6:7352:7360	3568255	0	True				
ANR	3568542	PtrMemberAccess	o -> fields		3568255	0					
ANR	3568543	Identifier	o		3568255	0					
ANR	3568544	Identifier	fields		3568255	1					
ANR	3568545	CompoundStatement		47:17:1041:1041	3568255	1					
ANR	3568546	ExpressionStatement	o -> fields -> free = r_bin_field_free	296:3:7368:7402	3568255	0	True				
ANR	3568547	AssignmentExpression	o -> fields -> free = r_bin_field_free		3568255	0		=			
ANR	3568548	PtrMemberAccess	o -> fields -> free		3568255	0					
ANR	3568549	PtrMemberAccess	o -> fields		3568255	0					
ANR	3568550	Identifier	o		3568255	0					
ANR	3568551	Identifier	fields		3568255	1					
ANR	3568552	Identifier	free		3568255	1					
ANR	3568553	Identifier	r_bin_field_free		3568255	1					
ANR	3568554	ExpressionStatement	"REBASE_PADDR ( o , o -> fields , RBinField )"	297:3:7407:7445	3568255	1	True				
ANR	3568555	CallExpression	"REBASE_PADDR ( o , o -> fields , RBinField )"		3568255	0					
ANR	3568556	Callee	REBASE_PADDR		3568255	0					
ANR	3568557	Identifier	REBASE_PADDR		3568255	0					
ANR	3568558	ArgumentList	o		3568255	1					
ANR	3568559	Argument	o		3568255	0					
ANR	3568560	Identifier	o		3568255	0					
ANR	3568561	Argument	o -> fields		3568255	1					
ANR	3568562	PtrMemberAccess	o -> fields		3568255	0					
ANR	3568563	Identifier	o		3568255	0					
ANR	3568564	Identifier	fields		3568255	1					
ANR	3568565	Argument	RBinField		3568255	2					
ANR	3568566	Identifier	RBinField		3568255	0					
ANR	3568567	IfStatement	if ( p -> imports )		3568255	13					
ANR	3568568	Condition	p -> imports	300:5:7459:7468	3568255	0	True				
ANR	3568569	PtrMemberAccess	p -> imports		3568255	0					
ANR	3568570	Identifier	p		3568255	0					
ANR	3568571	Identifier	imports		3568255	1					
ANR	3568572	CompoundStatement		52:17:1149:1149	3568255	1					
ANR	3568573	ExpressionStatement	r_list_free ( o -> imports )	301:2:7475:7499	3568255	0	True				
ANR	3568574	CallExpression	r_list_free ( o -> imports )		3568255	0					
ANR	3568575	Callee	r_list_free		3568255	0					
ANR	3568576	Identifier	r_list_free		3568255	0					
ANR	3568577	ArgumentList	o -> imports		3568255	1					
ANR	3568578	Argument	o -> imports		3568255	0					
ANR	3568579	PtrMemberAccess	o -> imports		3568255	0					
ANR	3568580	Identifier	o		3568255	0					
ANR	3568581	Identifier	imports		3568255	1					
ANR	3568582	ExpressionStatement	o -> imports = p -> imports ( bf )	302:2:7503:7531	3568255	1	True				
ANR	3568583	AssignmentExpression	o -> imports = p -> imports ( bf )		3568255	0		=			
ANR	3568584	PtrMemberAccess	o -> imports		3568255	0					
ANR	3568585	Identifier	o		3568255	0					
ANR	3568586	Identifier	imports		3568255	1					
ANR	3568587	CallExpression	p -> imports ( bf )		3568255	1					
ANR	3568588	Callee	p -> imports		3568255	0					
ANR	3568589	PtrMemberAccess	p -> imports		3568255	0					
ANR	3568590	Identifier	p		3568255	0					
ANR	3568591	Identifier	imports		3568255	1					
ANR	3568592	ArgumentList	bf		3568255	1					
ANR	3568593	Argument	bf		3568255	0					
ANR	3568594	Identifier	bf		3568255	0					
ANR	3568595	IfStatement	if ( o -> imports )		3568255	2					
ANR	3568596	Condition	o -> imports	303:6:7539:7548	3568255	0	True				
ANR	3568597	PtrMemberAccess	o -> imports		3568255	0					
ANR	3568598	Identifier	o		3568255	0					
ANR	3568599	Identifier	imports		3568255	1					
ANR	3568600	CompoundStatement		55:18:1229:1229	3568255	1					
ANR	3568601	ExpressionStatement	o -> imports -> free = r_bin_import_free	304:3:7556:7592	3568255	0	True				
ANR	3568602	AssignmentExpression	o -> imports -> free = r_bin_import_free		3568255	0		=			
ANR	3568603	PtrMemberAccess	o -> imports -> free		3568255	0					
ANR	3568604	PtrMemberAccess	o -> imports		3568255	0					
ANR	3568605	Identifier	o		3568255	0					
ANR	3568606	Identifier	imports		3568255	1					
ANR	3568607	Identifier	free		3568255	1					
ANR	3568608	Identifier	r_bin_import_free		3568255	1					
ANR	3568609	IfStatement	if ( p -> symbols )		3568255	14					
ANR	3568610	Condition	p -> symbols	307:5:7606:7615	3568255	0	True				
ANR	3568611	PtrMemberAccess	p -> symbols		3568255	0					
ANR	3568612	Identifier	p		3568255	0					
ANR	3568613	Identifier	symbols		3568255	1					
ANR	3568614	CompoundStatement		59:17:1296:1296	3568255	1					
ANR	3568615	ExpressionStatement	o -> symbols = p -> symbols ( bf )	308:2:7622:7650	3568255	0	True				
ANR	3568616	AssignmentExpression	o -> symbols = p -> symbols ( bf )		3568255	0		=			
ANR	3568617	PtrMemberAccess	o -> symbols		3568255	0					
ANR	3568618	Identifier	o		3568255	0					
ANR	3568619	Identifier	symbols		3568255	1					
ANR	3568620	CallExpression	p -> symbols ( bf )		3568255	1					
ANR	3568621	Callee	p -> symbols		3568255	0					
ANR	3568622	PtrMemberAccess	p -> symbols		3568255	0					
ANR	3568623	Identifier	p		3568255	0					
ANR	3568624	Identifier	symbols		3568255	1					
ANR	3568625	ArgumentList	bf		3568255	1					
ANR	3568626	Argument	bf		3568255	0					
ANR	3568627	Identifier	bf		3568255	0					
ANR	3568628	IfStatement	if ( o -> symbols )		3568255	1					
ANR	3568629	Condition	o -> symbols	309:6:7664:7673	3568255	0	True				
ANR	3568630	PtrMemberAccess	o -> symbols		3568255	0					
ANR	3568631	Identifier	o		3568255	0					
ANR	3568632	Identifier	symbols		3568255	1					
ANR	3568633	CompoundStatement		61:18:1354:1354	3568255	1					
ANR	3568634	ExpressionStatement	o -> symbols -> free = r_bin_symbol_free	310:3:7681:7717	3568255	0	True				
ANR	3568635	AssignmentExpression	o -> symbols -> free = r_bin_symbol_free		3568255	0		=			
ANR	3568636	PtrMemberAccess	o -> symbols -> free		3568255	0					
ANR	3568637	PtrMemberAccess	o -> symbols		3568255	0					
ANR	3568638	Identifier	o		3568255	0					
ANR	3568639	Identifier	symbols		3568255	1					
ANR	3568640	Identifier	free		3568255	1					
ANR	3568641	Identifier	r_bin_symbol_free		3568255	1					
ANR	3568642	ExpressionStatement	"REBASE_PADDR ( o , o -> symbols , RBinSymbol )"	311:3:7722:7762	3568255	1	True				
ANR	3568643	CallExpression	"REBASE_PADDR ( o , o -> symbols , RBinSymbol )"		3568255	0					
ANR	3568644	Callee	REBASE_PADDR		3568255	0					
ANR	3568645	Identifier	REBASE_PADDR		3568255	0					
ANR	3568646	ArgumentList	o		3568255	1					
ANR	3568647	Argument	o		3568255	0					
ANR	3568648	Identifier	o		3568255	0					
ANR	3568649	Argument	o -> symbols		3568255	1					
ANR	3568650	PtrMemberAccess	o -> symbols		3568255	0					
ANR	3568651	Identifier	o		3568255	0					
ANR	3568652	Identifier	symbols		3568255	1					
ANR	3568653	Argument	RBinSymbol		3568255	2					
ANR	3568654	Identifier	RBinSymbol		3568255	0					
ANR	3568655	IfStatement	if ( bin -> filter )		3568255	2					
ANR	3568656	Condition	bin -> filter	312:7:7771:7781	3568255	0	True				
ANR	3568657	PtrMemberAccess	bin -> filter		3568255	0					
ANR	3568658	Identifier	bin		3568255	0					
ANR	3568659	Identifier	filter		3568255	1					
ANR	3568660	CompoundStatement		64:20:1462:1462	3568255	1					
ANR	3568661	ExpressionStatement	"r_bin_filter_symbols ( bf , o -> symbols )"	313:4:7790:7827	3568255	0	True				
ANR	3568662	CallExpression	"r_bin_filter_symbols ( bf , o -> symbols )"		3568255	0					
ANR	3568663	Callee	r_bin_filter_symbols		3568255	0					
ANR	3568664	Identifier	r_bin_filter_symbols		3568255	0					
ANR	3568665	ArgumentList	bf		3568255	1					
ANR	3568666	Argument	bf		3568255	0					
ANR	3568667	Identifier	bf		3568255	0					
ANR	3568668	Argument	o -> symbols		3568255	1					
ANR	3568669	PtrMemberAccess	o -> symbols		3568255	0					
ANR	3568670	Identifier	o		3568255	0					
ANR	3568671	Identifier	symbols		3568255	1					
ANR	3568672	ExpressionStatement	o -> info = p -> info ? p -> info ( bf ) : NULL	317:1:7848:7885	3568255	15	True				
ANR	3568673	AssignmentExpression	o -> info = p -> info ? p -> info ( bf ) : NULL		3568255	0		=			
ANR	3568674	PtrMemberAccess	o -> info		3568255	0					
ANR	3568675	Identifier	o		3568255	0					
ANR	3568676	Identifier	info		3568255	1					
ANR	3568677	ConditionalExpression	p -> info ? p -> info ( bf ) : NULL		3568255	1					
ANR	3568678	Condition	p -> info		3568255	0					
ANR	3568679	PtrMemberAccess	p -> info		3568255	0					
ANR	3568680	Identifier	p		3568255	0					
ANR	3568681	Identifier	info		3568255	1					
ANR	3568682	CallExpression	p -> info ( bf )		3568255	1					
ANR	3568683	Callee	p -> info		3568255	0					
ANR	3568684	PtrMemberAccess	p -> info		3568255	0					
ANR	3568685	Identifier	p		3568255	0					
ANR	3568686	Identifier	info		3568255	1					
ANR	3568687	ArgumentList	bf		3568255	1					
ANR	3568688	Argument	bf		3568255	0					
ANR	3568689	Identifier	bf		3568255	0					
ANR	3568690	Identifier	NULL		3568255	2					
ANR	3568691	IfStatement	if ( p -> libs )		3568255	16					
ANR	3568692	Condition	p -> libs	318:5:7892:7898	3568255	0	True				
ANR	3568693	PtrMemberAccess	p -> libs		3568255	0					
ANR	3568694	Identifier	p		3568255	0					
ANR	3568695	Identifier	libs		3568255	1					
ANR	3568696	CompoundStatement		70:14:1579:1579	3568255	1					
ANR	3568697	ExpressionStatement	o -> libs = p -> libs ( bf )	319:2:7905:7927	3568255	0	True				
ANR	3568698	AssignmentExpression	o -> libs = p -> libs ( bf )		3568255	0		=			
ANR	3568699	PtrMemberAccess	o -> libs		3568255	0					
ANR	3568700	Identifier	o		3568255	0					
ANR	3568701	Identifier	libs		3568255	1					
ANR	3568702	CallExpression	p -> libs ( bf )		3568255	1					
ANR	3568703	Callee	p -> libs		3568255	0					
ANR	3568704	PtrMemberAccess	p -> libs		3568255	0					
ANR	3568705	Identifier	p		3568255	0					
ANR	3568706	Identifier	libs		3568255	1					
ANR	3568707	ArgumentList	bf		3568255	1					
ANR	3568708	Argument	bf		3568255	0					
ANR	3568709	Identifier	bf		3568255	0					
ANR	3568710	IfStatement	if ( p -> sections )		3568255	17					
ANR	3568711	Condition	p -> sections	321:5:7937:7947	3568255	0	True				
ANR	3568712	PtrMemberAccess	p -> sections		3568255	0					
ANR	3568713	Identifier	p		3568255	0					
ANR	3568714	Identifier	sections		3568255	1					
ANR	3568715	CompoundStatement		73:18:1628:1628	3568255	1					
ANR	3568716	IfStatement	if ( ! o -> sections )		3568255	0					
ANR	3568717	Condition	! o -> sections	323:6:8006:8017	3568255	0	True				
ANR	3568718	UnaryOperationExpression	! o -> sections		3568255	0					
ANR	3568719	UnaryOperator	!		3568255	0					
ANR	3568720	PtrMemberAccess	o -> sections		3568255	1					
ANR	3568721	Identifier	o		3568255	0					
ANR	3568722	Identifier	sections		3568255	1					
ANR	3568723	CompoundStatement		75:20:1698:1698	3568255	1					
ANR	3568724	ExpressionStatement	o -> sections = p -> sections ( bf )	324:3:8025:8055	3568255	0	True				
ANR	3568725	AssignmentExpression	o -> sections = p -> sections ( bf )		3568255	0		=			
ANR	3568726	PtrMemberAccess	o -> sections		3568255	0					
ANR	3568727	Identifier	o		3568255	0					
ANR	3568728	Identifier	sections		3568255	1					
ANR	3568729	CallExpression	p -> sections ( bf )		3568255	1					
ANR	3568730	Callee	p -> sections		3568255	0					
ANR	3568731	PtrMemberAccess	p -> sections		3568255	0					
ANR	3568732	Identifier	p		3568255	0					
ANR	3568733	Identifier	sections		3568255	1					
ANR	3568734	ArgumentList	bf		3568255	1					
ANR	3568735	Argument	bf		3568255	0					
ANR	3568736	Identifier	bf		3568255	0					
ANR	3568737	ExpressionStatement	"REBASE_PADDR ( o , o -> sections , RBinSection )"	326:2:8063:8105	3568255	1	True				
ANR	3568738	CallExpression	"REBASE_PADDR ( o , o -> sections , RBinSection )"		3568255	0					
ANR	3568739	Callee	REBASE_PADDR		3568255	0					
ANR	3568740	Identifier	REBASE_PADDR		3568255	0					
ANR	3568741	ArgumentList	o		3568255	1					
ANR	3568742	Argument	o		3568255	0					
ANR	3568743	Identifier	o		3568255	0					
ANR	3568744	Argument	o -> sections		3568255	1					
ANR	3568745	PtrMemberAccess	o -> sections		3568255	0					
ANR	3568746	Identifier	o		3568255	0					
ANR	3568747	Identifier	sections		3568255	1					
ANR	3568748	Argument	RBinSection		3568255	2					
ANR	3568749	Identifier	RBinSection		3568255	0					
ANR	3568750	IfStatement	if ( bin -> filter )		3568255	2					
ANR	3568751	Condition	bin -> filter	327:6:8113:8123	3568255	0	True				
ANR	3568752	PtrMemberAccess	bin -> filter		3568255	0					
ANR	3568753	Identifier	bin		3568255	0					
ANR	3568754	Identifier	filter		3568255	1					
ANR	3568755	CompoundStatement		79:19:1804:1804	3568255	1					
ANR	3568756	ExpressionStatement	"r_bin_filter_sections ( bf , o -> sections )"	328:3:8131:8170	3568255	0	True				
ANR	3568757	CallExpression	"r_bin_filter_sections ( bf , o -> sections )"		3568255	0					
ANR	3568758	Callee	r_bin_filter_sections		3568255	0					
ANR	3568759	Identifier	r_bin_filter_sections		3568255	0					
ANR	3568760	ArgumentList	bf		3568255	1					
ANR	3568761	Argument	bf		3568255	0					
ANR	3568762	Identifier	bf		3568255	0					
ANR	3568763	Argument	o -> sections		3568255	1					
ANR	3568764	PtrMemberAccess	o -> sections		3568255	0					
ANR	3568765	Identifier	o		3568255	0					
ANR	3568766	Identifier	sections		3568255	1					
ANR	3568767	IfStatement	if ( bin -> filter_rules & ( R_BIN_REQ_RELOCS | R_BIN_REQ_IMPORTS ) )		3568255	18					
ANR	3568768	Condition	bin -> filter_rules & ( R_BIN_REQ_RELOCS | R_BIN_REQ_IMPORTS )	331:5:8184:8241	3568255	0	True				
ANR	3568769	BitAndExpression	bin -> filter_rules & ( R_BIN_REQ_RELOCS | R_BIN_REQ_IMPORTS )		3568255	0		&			
ANR	3568770	PtrMemberAccess	bin -> filter_rules		3568255	0					
ANR	3568771	Identifier	bin		3568255	0					
ANR	3568772	Identifier	filter_rules		3568255	1					
ANR	3568773	InclusiveOrExpression	R_BIN_REQ_RELOCS | R_BIN_REQ_IMPORTS		3568255	1		|			
ANR	3568774	Identifier	R_BIN_REQ_RELOCS		3568255	0					
ANR	3568775	Identifier	R_BIN_REQ_IMPORTS		3568255	1					
ANR	3568776	CompoundStatement		83:65:1922:1922	3568255	1					
ANR	3568777	IfStatement	if ( p -> relocs )		3568255	0					
ANR	3568778	Condition	p -> relocs	332:6:8252:8260	3568255	0	True				
ANR	3568779	PtrMemberAccess	p -> relocs		3568255	0					
ANR	3568780	Identifier	p		3568255	0					
ANR	3568781	Identifier	relocs		3568255	1					
ANR	3568782	CompoundStatement		85:3:1946:1971	3568255	1					
ANR	3568783	IdentifierDeclStatement	RList * l = p -> relocs ( bf ) ;	333:3:8268:8293	3568255	0	True				
ANR	3568784	IdentifierDecl	* l = p -> relocs ( bf )		3568255	0					
ANR	3568785	IdentifierDeclType	RList *		3568255	0					
ANR	3568786	Identifier	l		3568255	1					
ANR	3568787	AssignmentExpression	* l = p -> relocs ( bf )		3568255	2		=			
ANR	3568788	Identifier	l		3568255	0					
ANR	3568789	CallExpression	p -> relocs ( bf )		3568255	1					
ANR	3568790	Callee	p -> relocs		3568255	0					
ANR	3568791	PtrMemberAccess	p -> relocs		3568255	0					
ANR	3568792	Identifier	p		3568255	0					
ANR	3568793	Identifier	relocs		3568255	1					
ANR	3568794	ArgumentList	bf		3568255	1					
ANR	3568795	Argument	bf		3568255	0					
ANR	3568796	Identifier	bf		3568255	0					
ANR	3568797	IfStatement	if ( l )		3568255	1					
ANR	3568798	Condition	l	334:7:8302:8302	3568255	0	True				
ANR	3568799	Identifier	l		3568255	0					
ANR	3568800	CompoundStatement		86:10:1983:1983	3568255	1					
ANR	3568801	ExpressionStatement	"REBASE_PADDR ( o , l , RBinReloc )"	335:4:8311:8341	3568255	0	True				
ANR	3568802	CallExpression	"REBASE_PADDR ( o , l , RBinReloc )"		3568255	0					
ANR	3568803	Callee	REBASE_PADDR		3568255	0					
ANR	3568804	Identifier	REBASE_PADDR		3568255	0					
ANR	3568805	ArgumentList	o		3568255	1					
ANR	3568806	Argument	o		3568255	0					
ANR	3568807	Identifier	o		3568255	0					
ANR	3568808	Argument	l		3568255	1					
ANR	3568809	Identifier	l		3568255	0					
ANR	3568810	Argument	RBinReloc		3568255	2					
ANR	3568811	Identifier	RBinReloc		3568255	0					
ANR	3568812	ExpressionStatement	o -> relocs = list2rbtree ( l )	336:4:8347:8374	3568255	1	True				
ANR	3568813	AssignmentExpression	o -> relocs = list2rbtree ( l )		3568255	0		=			
ANR	3568814	PtrMemberAccess	o -> relocs		3568255	0					
ANR	3568815	Identifier	o		3568255	0					
ANR	3568816	Identifier	relocs		3568255	1					
ANR	3568817	CallExpression	list2rbtree ( l )		3568255	1					
ANR	3568818	Callee	list2rbtree		3568255	0					
ANR	3568819	Identifier	list2rbtree		3568255	0					
ANR	3568820	ArgumentList	l		3568255	1					
ANR	3568821	Argument	l		3568255	0					
ANR	3568822	Identifier	l		3568255	0					
ANR	3568823	ExpressionStatement	l -> free = NULL	337:4:8380:8394	3568255	2	True				
ANR	3568824	AssignmentExpression	l -> free = NULL		3568255	0		=			
ANR	3568825	PtrMemberAccess	l -> free		3568255	0					
ANR	3568826	Identifier	l		3568255	0					
ANR	3568827	Identifier	free		3568255	1					
ANR	3568828	Identifier	NULL		3568255	1					
ANR	3568829	IfStatement	if ( bin -> filter_rules & R_BIN_REQ_STRINGS )		3568255	19					
ANR	3568830	Condition	bin -> filter_rules & R_BIN_REQ_STRINGS	343:5:8462:8498	3568255	0	True				
ANR	3568831	BitAndExpression	bin -> filter_rules & R_BIN_REQ_STRINGS		3568255	0		&			
ANR	3568832	PtrMemberAccess	bin -> filter_rules		3568255	0					
ANR	3568833	Identifier	bin		3568255	0					
ANR	3568834	Identifier	filter_rules		3568255	1					
ANR	3568835	Identifier	R_BIN_REQ_STRINGS		3568255	1					
ANR	3568836	CompoundStatement		95:44:2179:2179	3568255	1					
ANR	3568837	ExpressionStatement	"o -> strings = p -> strings ? p -> strings ( bf ) : r_bin_file_get_strings ( bf , minlen , 0 , bf -> rawstr )"	344:2:8505:8605	3568255	0	True				
ANR	3568838	AssignmentExpression	"o -> strings = p -> strings ? p -> strings ( bf ) : r_bin_file_get_strings ( bf , minlen , 0 , bf -> rawstr )"		3568255	0		=			
ANR	3568839	PtrMemberAccess	o -> strings		3568255	0					
ANR	3568840	Identifier	o		3568255	0					
ANR	3568841	Identifier	strings		3568255	1					
ANR	3568842	ConditionalExpression	"p -> strings ? p -> strings ( bf ) : r_bin_file_get_strings ( bf , minlen , 0 , bf -> rawstr )"		3568255	1					
ANR	3568843	Condition	p -> strings		3568255	0					
ANR	3568844	PtrMemberAccess	p -> strings		3568255	0					
ANR	3568845	Identifier	p		3568255	0					
ANR	3568846	Identifier	strings		3568255	1					
ANR	3568847	CallExpression	p -> strings ( bf )		3568255	1					
ANR	3568848	Callee	p -> strings		3568255	0					
ANR	3568849	PtrMemberAccess	p -> strings		3568255	0					
ANR	3568850	Identifier	p		3568255	0					
ANR	3568851	Identifier	strings		3568255	1					
ANR	3568852	ArgumentList	bf		3568255	1					
ANR	3568853	Argument	bf		3568255	0					
ANR	3568854	Identifier	bf		3568255	0					
ANR	3568855	CallExpression	"r_bin_file_get_strings ( bf , minlen , 0 , bf -> rawstr )"		3568255	2					
ANR	3568856	Callee	r_bin_file_get_strings		3568255	0					
ANR	3568857	Identifier	r_bin_file_get_strings		3568255	0					
ANR	3568858	ArgumentList	bf		3568255	1					
ANR	3568859	Argument	bf		3568255	0					
ANR	3568860	Identifier	bf		3568255	0					
ANR	3568861	Argument	minlen		3568255	1					
ANR	3568862	Identifier	minlen		3568255	0					
ANR	3568863	Argument	0		3568255	2					
ANR	3568864	PrimaryExpression	0		3568255	0					
ANR	3568865	Argument	bf -> rawstr		3568255	3					
ANR	3568866	PtrMemberAccess	bf -> rawstr		3568255	0					
ANR	3568867	Identifier	bf		3568255	0					
ANR	3568868	Identifier	rawstr		3568255	1					
ANR	3568869	IfStatement	if ( bin -> debase64 )		3568255	1					
ANR	3568870	Condition	bin -> debase64	347:6:8613:8625	3568255	0	True				
ANR	3568871	PtrMemberAccess	bin -> debase64		3568255	0					
ANR	3568872	Identifier	bin		3568255	0					
ANR	3568873	Identifier	debase64		3568255	1					
ANR	3568874	CompoundStatement		99:21:2306:2306	3568255	1					
ANR	3568875	ExpressionStatement	r_bin_object_filter_strings ( o )	348:3:8633:8664	3568255	0	True				
ANR	3568876	CallExpression	r_bin_object_filter_strings ( o )		3568255	0					
ANR	3568877	Callee	r_bin_object_filter_strings		3568255	0					
ANR	3568878	Identifier	r_bin_object_filter_strings		3568255	0					
ANR	3568879	ArgumentList	o		3568255	1					
ANR	3568880	Argument	o		3568255	0					
ANR	3568881	Identifier	o		3568255	0					
ANR	3568882	ExpressionStatement	"REBASE_PADDR ( o , o -> strings , RBinString )"	350:2:8672:8712	3568255	2	True				
ANR	3568883	CallExpression	"REBASE_PADDR ( o , o -> strings , RBinString )"		3568255	0					
ANR	3568884	Callee	REBASE_PADDR		3568255	0					
ANR	3568885	Identifier	REBASE_PADDR		3568255	0					
ANR	3568886	ArgumentList	o		3568255	1					
ANR	3568887	Argument	o		3568255	0					
ANR	3568888	Identifier	o		3568255	0					
ANR	3568889	Argument	o -> strings		3568255	1					
ANR	3568890	PtrMemberAccess	o -> strings		3568255	0					
ANR	3568891	Identifier	o		3568255	0					
ANR	3568892	Identifier	strings		3568255	1					
ANR	3568893	Argument	RBinString		3568255	2					
ANR	3568894	Identifier	RBinString		3568255	0					
ANR	3568895	IfStatement	if ( bin -> filter_rules & R_BIN_REQ_CLASSES )		3568255	20					
ANR	3568896	Condition	bin -> filter_rules & R_BIN_REQ_CLASSES	352:5:8722:8758	3568255	0	True				
ANR	3568897	BitAndExpression	bin -> filter_rules & R_BIN_REQ_CLASSES		3568255	0		&			
ANR	3568898	PtrMemberAccess	bin -> filter_rules		3568255	0					
ANR	3568899	Identifier	bin		3568255	0					
ANR	3568900	Identifier	filter_rules		3568255	1					
ANR	3568901	Identifier	R_BIN_REQ_CLASSES		3568255	1					
ANR	3568902	CompoundStatement		104:44:2439:2439	3568255	1					
ANR	3568903	IfStatement	if ( p -> classes )		3568255	0					
ANR	3568904	Condition	p -> classes	353:6:8769:8778	3568255	0	True				
ANR	3568905	PtrMemberAccess	p -> classes		3568255	0					
ANR	3568906	Identifier	p		3568255	0					
ANR	3568907	Identifier	classes		3568255	1					
ANR	3568908	CompoundStatement		106:3:2464:2496	3568255	1					
ANR	3568909	IdentifierDeclStatement	RList * classes = p -> classes ( bf ) ;	354:3:8786:8818	3568255	0	True				
ANR	3568910	IdentifierDecl	* classes = p -> classes ( bf )		3568255	0					
ANR	3568911	IdentifierDeclType	RList *		3568255	0					
ANR	3568912	Identifier	classes		3568255	1					
ANR	3568913	AssignmentExpression	* classes = p -> classes ( bf )		3568255	2		=			
ANR	3568914	Identifier	classes		3568255	0					
ANR	3568915	CallExpression	p -> classes ( bf )		3568255	1					
ANR	3568916	Callee	p -> classes		3568255	0					
ANR	3568917	PtrMemberAccess	p -> classes		3568255	0					
ANR	3568918	Identifier	p		3568255	0					
ANR	3568919	Identifier	classes		3568255	1					
ANR	3568920	ArgumentList	bf		3568255	1					
ANR	3568921	Argument	bf		3568255	0					
ANR	3568922	Identifier	bf		3568255	0					
ANR	3568923	IfStatement	if ( classes )		3568255	1					
ANR	3568924	Condition	classes	355:7:8827:8833	3568255	0	True				
ANR	3568925	Identifier	classes		3568255	0					
ANR	3568926	CompoundStatement		107:16:2514:2514	3568255	1					
ANR	3568927	ExpressionStatement	r_list_free ( o -> classes )	357:4:8891:8915	3568255	0	True				
ANR	3568928	CallExpression	r_list_free ( o -> classes )		3568255	0					
ANR	3568929	Callee	r_list_free		3568255	0					
ANR	3568930	Identifier	r_list_free		3568255	0					
ANR	3568931	ArgumentList	o -> classes		3568255	1					
ANR	3568932	Argument	o -> classes		3568255	0					
ANR	3568933	PtrMemberAccess	o -> classes		3568255	0					
ANR	3568934	Identifier	o		3568255	0					
ANR	3568935	Identifier	classes		3568255	1					
ANR	3568936	ExpressionStatement	o -> classes = classes	358:4:8921:8941	3568255	1	True				
ANR	3568937	AssignmentExpression	o -> classes = classes		3568255	0		=			
ANR	3568938	PtrMemberAccess	o -> classes		3568255	0					
ANR	3568939	Identifier	o		3568255	0					
ANR	3568940	Identifier	classes		3568255	1					
ANR	3568941	Identifier	classes		3568255	1					
ANR	3568942	ExpressionStatement	isSwift = r_bin_lang_swift ( bf )	360:3:8951:8982	3568255	2	True				
ANR	3568943	AssignmentExpression	isSwift = r_bin_lang_swift ( bf )		3568255	0		=			
ANR	3568944	Identifier	isSwift		3568255	0					
ANR	3568945	CallExpression	r_bin_lang_swift ( bf )		3568255	1					
ANR	3568946	Callee	r_bin_lang_swift		3568255	0					
ANR	3568947	Identifier	r_bin_lang_swift		3568255	0					
ANR	3568948	ArgumentList	bf		3568255	1					
ANR	3568949	Argument	bf		3568255	0					
ANR	3568950	Identifier	bf		3568255	0					
ANR	3568951	IfStatement	if ( isSwift )		3568255	3					
ANR	3568952	Condition	isSwift	361:7:8991:8997	3568255	0	True				
ANR	3568953	Identifier	isSwift		3568255	0					
ANR	3568954	CompoundStatement		113:16:2678:2678	3568255	1					
ANR	3568955	ExpressionStatement	o -> classes = classes_from_symbols ( bf )	362:4:9006:9044	3568255	0	True				
ANR	3568956	AssignmentExpression	o -> classes = classes_from_symbols ( bf )		3568255	0		=			
ANR	3568957	PtrMemberAccess	o -> classes		3568255	0					
ANR	3568958	Identifier	o		3568255	0					
ANR	3568959	Identifier	classes		3568255	1					
ANR	3568960	CallExpression	classes_from_symbols ( bf )		3568255	1					
ANR	3568961	Callee	classes_from_symbols		3568255	0					
ANR	3568962	Identifier	classes_from_symbols		3568255	0					
ANR	3568963	ArgumentList	bf		3568255	1					
ANR	3568964	Argument	bf		3568255	0					
ANR	3568965	Identifier	bf		3568255	0					
ANR	3568966	ElseStatement	else		3568255	0					
ANR	3568967	CompoundStatement		117:3:2743:2785	3568255	0					
ANR	3568968	IdentifierDeclStatement	RList * classes = classes_from_symbols ( bf ) ;	365:3:9065:9107	3568255	0	True				
ANR	3568969	IdentifierDecl	* classes = classes_from_symbols ( bf )		3568255	0					
ANR	3568970	IdentifierDeclType	RList *		3568255	0					
ANR	3568971	Identifier	classes		3568255	1					
ANR	3568972	AssignmentExpression	* classes = classes_from_symbols ( bf )		3568255	2		=			
ANR	3568973	Identifier	classes		3568255	0					
ANR	3568974	CallExpression	classes_from_symbols ( bf )		3568255	1					
ANR	3568975	Callee	classes_from_symbols		3568255	0					
ANR	3568976	Identifier	classes_from_symbols		3568255	0					
ANR	3568977	ArgumentList	bf		3568255	1					
ANR	3568978	Argument	bf		3568255	0					
ANR	3568979	Identifier	bf		3568255	0					
ANR	3568980	IfStatement	if ( classes )		3568255	1					
ANR	3568981	Condition	classes	366:7:9116:9122	3568255	0	True				
ANR	3568982	Identifier	classes		3568255	0					
ANR	3568983	CompoundStatement		118:16:2803:2803	3568255	1					
ANR	3568984	ExpressionStatement	o -> classes = classes	367:4:9131:9151	3568255	0	True				
ANR	3568985	AssignmentExpression	o -> classes = classes		3568255	0		=			
ANR	3568986	PtrMemberAccess	o -> classes		3568255	0					
ANR	3568987	Identifier	o		3568255	0					
ANR	3568988	Identifier	classes		3568255	1					
ANR	3568989	Identifier	classes		3568255	1					
ANR	3568990	IfStatement	if ( bin -> filter )		3568255	1					
ANR	3568991	Condition	bin -> filter	370:6:9168:9178	3568255	0	True				
ANR	3568992	PtrMemberAccess	bin -> filter		3568255	0					
ANR	3568993	Identifier	bin		3568255	0					
ANR	3568994	Identifier	filter		3568255	1					
ANR	3568995	CompoundStatement		122:19:2859:2859	3568255	1					
ANR	3568996	ExpressionStatement	"filter_classes ( bf , o -> classes )"	371:3:9186:9217	3568255	0	True				
ANR	3568997	CallExpression	"filter_classes ( bf , o -> classes )"		3568255	0					
ANR	3568998	Callee	filter_classes		3568255	0					
ANR	3568999	Identifier	filter_classes		3568255	0					
ANR	3569000	ArgumentList	bf		3568255	1					
ANR	3569001	Argument	bf		3568255	0					
ANR	3569002	Identifier	bf		3568255	0					
ANR	3569003	Argument	o -> classes		3568255	1					
ANR	3569004	PtrMemberAccess	o -> classes		3568255	0					
ANR	3569005	Identifier	o		3568255	0					
ANR	3569006	Identifier	classes		3568255	1					
ANR	3569007	IfStatement	if ( o -> classes )		3568255	2					
ANR	3569008	Condition	o -> classes	374:6:9258:9267	3568255	0	True				
ANR	3569009	PtrMemberAccess	o -> classes		3568255	0					
ANR	3569010	Identifier	o		3568255	0					
ANR	3569011	Identifier	classes		3568255	1					
ANR	3569012	CompoundStatement		130:3:3034:3052	3568255	1					
ANR	3569013	IdentifierDeclStatement	RList * klasses = o -> classes ;	375:3:9275:9302	3568255	0	True				
ANR	3569014	IdentifierDecl	* klasses = o -> classes		3568255	0					
ANR	3569015	IdentifierDeclType	RList *		3568255	0					
ANR	3569016	Identifier	klasses		3568255	1					
ANR	3569017	AssignmentExpression	* klasses = o -> classes		3568255	2		=			
ANR	3569018	Identifier	klasses		3568255	0					
ANR	3569019	PtrMemberAccess	o -> classes		3568255	1					
ANR	3569020	Identifier	o		3568255	0					
ANR	3569021	Identifier	classes		3568255	1					
ANR	3569022	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	376:3:9307:9330	3568255	1	True				
ANR	3569023	IdentifierDecl	* iter		3568255	0					
ANR	3569024	IdentifierDeclType	RListIter *		3568255	0					
ANR	3569025	Identifier	iter		3568255	1					
ANR	3569026	IdentifierDecl	* iter2		3568255	1					
ANR	3569027	IdentifierDeclType	RListIter *		3568255	0					
ANR	3569028	Identifier	iter2		3568255	1					
ANR	3569029	IdentifierDeclStatement	RBinClass * klass ;	377:3:9335:9351	3568255	2	True				
ANR	3569030	IdentifierDecl	* klass		3568255	0					
ANR	3569031	IdentifierDeclType	RBinClass *		3568255	0					
ANR	3569032	Identifier	klass		3568255	1					
ANR	3569033	IdentifierDeclStatement	RBinSymbol * method ;	378:3:9356:9374	3568255	3	True				
ANR	3569034	IdentifierDecl	* method		3568255	0					
ANR	3569035	IdentifierDeclType	RBinSymbol *		3568255	0					
ANR	3569036	Identifier	method		3568255	1					
ANR	3569037	IfStatement	if ( ! o -> addr2klassmethod )		3568255	4					
ANR	3569038	Condition	! o -> addr2klassmethod	379:7:9383:9402	3568255	0	True				
ANR	3569039	UnaryOperationExpression	! o -> addr2klassmethod		3568255	0					
ANR	3569040	UnaryOperator	!		3568255	0					
ANR	3569041	PtrMemberAccess	o -> addr2klassmethod		3568255	1					
ANR	3569042	Identifier	o		3568255	0					
ANR	3569043	Identifier	addr2klassmethod		3568255	1					
ANR	3569044	CompoundStatement		131:29:3083:3083	3568255	1					
ANR	3569045	ExpressionStatement	o -> addr2klassmethod = sdb_new0 ( )	381:4:9475:9508	3568255	0	True				
ANR	3569046	AssignmentExpression	o -> addr2klassmethod = sdb_new0 ( )		3568255	0		=			
ANR	3569047	PtrMemberAccess	o -> addr2klassmethod		3568255	0					
ANR	3569048	Identifier	o		3568255	0					
ANR	3569049	Identifier	addr2klassmethod		3568255	1					
ANR	3569050	CallExpression	sdb_new0 ( )		3568255	1					
ANR	3569051	Callee	sdb_new0		3568255	0					
ANR	3569052	Identifier	sdb_new0		3568255	0					
ANR	3569053	ArgumentList			3568255	1					
ANR	3569054	Statement	r_list_foreach	382:4:9514:9527	3568255	1	True				
ANR	3569055	Statement	(	382:19:9529:9529	3568255	2	True				
ANR	3569056	Statement	klasses	382:20:9530:9536	3568255	3	True				
ANR	3569057	Statement	","	382:27:9537:9537	3568255	4	True				
ANR	3569058	Statement	iter	382:29:9539:9542	3568255	5	True				
ANR	3569059	Statement	","	382:33:9543:9543	3568255	6	True				
ANR	3569060	Statement	klass	382:35:9545:9549	3568255	7	True				
ANR	3569061	Statement	)	382:40:9550:9550	3568255	8	True				
ANR	3569062	CompoundStatement		134:42:3230:3230	3568255	9					
ANR	3569063	Statement	r_list_foreach	383:5:9559:9572	3568255	0	True				
ANR	3569064	Statement	(	383:20:9574:9574	3568255	1	True				
ANR	3569065	Statement	klass	383:21:9575:9579	3568255	2	True				
ANR	3569066	Statement	->	383:26:9580:9581	3568255	3	True				
ANR	3569067	Statement	methods	383:28:9582:9588	3568255	4	True				
ANR	3569068	Statement	","	383:35:9589:9589	3568255	5	True				
ANR	3569069	Statement	iter2	383:37:9591:9595	3568255	6	True				
ANR	3569070	Statement	","	383:42:9596:9596	3568255	7	True				
ANR	3569071	Statement	method	383:44:9598:9603	3568255	8	True				
ANR	3569072	Statement	)	383:50:9604:9604	3568255	9	True				
ANR	3569073	CompoundStatement		136:6:3292:3354	3568255	10					
ANR	3569074	IdentifierDeclStatement	"char * km = sdb_fmt ( ""method.%s.%s"" , klass -> name , method -> name ) ;"	384:6:9614:9676	3568255	0	True				
ANR	3569075	IdentifierDecl	"* km = sdb_fmt ( ""method.%s.%s"" , klass -> name , method -> name )"		3568255	0					
ANR	3569076	IdentifierDeclType	char *		3568255	0					
ANR	3569077	Identifier	km		3568255	1					
ANR	3569078	AssignmentExpression	"* km = sdb_fmt ( ""method.%s.%s"" , klass -> name , method -> name )"		3568255	2		=			
ANR	3569079	Identifier	km		3568255	0					
ANR	3569080	CallExpression	"sdb_fmt ( ""method.%s.%s"" , klass -> name , method -> name )"		3568255	1					
ANR	3569081	Callee	sdb_fmt		3568255	0					
ANR	3569082	Identifier	sdb_fmt		3568255	0					
ANR	3569083	ArgumentList	"""method.%s.%s"""		3568255	1					
ANR	3569084	Argument	"""method.%s.%s"""		3568255	0					
ANR	3569085	PrimaryExpression	"""method.%s.%s"""		3568255	0					
ANR	3569086	Argument	klass -> name		3568255	1					
ANR	3569087	PtrMemberAccess	klass -> name		3568255	0					
ANR	3569088	Identifier	klass		3568255	0					
ANR	3569089	Identifier	name		3568255	1					
ANR	3569090	Argument	method -> name		3568255	2					
ANR	3569091	PtrMemberAccess	method -> name		3568255	0					
ANR	3569092	Identifier	method		3568255	0					
ANR	3569093	Identifier	name		3568255	1					
ANR	3569094	Statement	char	385:6:9684:9687	3568255	1	True				
ANR	3569095	Statement	*	385:11:9689:9689	3568255	2	True				
ANR	3569096	Statement	at	385:12:9690:9691	3568255	3	True				
ANR	3569097	Statement	=	385:15:9693:9693	3568255	4	True				
ANR	3569098	Statement	sdb_fmt	385:17:9695:9701	3568255	5	True				
ANR	3569099	Statement	(	385:25:9703:9703	3568255	6	True				
ANR	3569100	Statement	"""0x%08"""	385:26:9704:9710	3568255	7	True				
ANR	3569101	Statement	PFMT64x	385:33:9711:9717	3568255	8	True				
ANR	3569102	Statement	","	385:40:9718:9718	3568255	9	True				
ANR	3569103	Statement	method	385:42:9720:9725	3568255	10	True				
ANR	3569104	Statement	->	385:48:9726:9727	3568255	11	True				
ANR	3569105	Statement	vaddr	385:50:9728:9732	3568255	12	True				
ANR	3569106	Statement	)	385:55:9733:9733	3568255	13	True				
ANR	3569107	ExpressionStatement		385:56:9734:9734	3568255	14	True				
ANR	3569108	ExpressionStatement	"sdb_set ( o -> addr2klassmethod , at , km , 0 )"	386:6:9742:9782	3568255	15	True				
ANR	3569109	CallExpression	"sdb_set ( o -> addr2klassmethod , at , km , 0 )"		3568255	0					
ANR	3569110	Callee	sdb_set		3568255	0					
ANR	3569111	Identifier	sdb_set		3568255	0					
ANR	3569112	ArgumentList	o -> addr2klassmethod		3568255	1					
ANR	3569113	Argument	o -> addr2klassmethod		3568255	0					
ANR	3569114	PtrMemberAccess	o -> addr2klassmethod		3568255	0					
ANR	3569115	Identifier	o		3568255	0					
ANR	3569116	Identifier	addr2klassmethod		3568255	1					
ANR	3569117	Argument	at		3568255	1					
ANR	3569118	Identifier	at		3568255	0					
ANR	3569119	Argument	km		3568255	2					
ANR	3569120	Identifier	km		3568255	0					
ANR	3569121	Argument	0		3568255	3					
ANR	3569122	PrimaryExpression	0		3568255	0					
ANR	3569123	IfStatement	if ( p -> lines )		3568255	21					
ANR	3569124	Condition	p -> lines	392:5:9814:9821	3568255	0	True				
ANR	3569125	PtrMemberAccess	p -> lines		3568255	0					
ANR	3569126	Identifier	p		3568255	0					
ANR	3569127	Identifier	lines		3568255	1					
ANR	3569128	CompoundStatement		144:15:3502:3502	3568255	1					
ANR	3569129	ExpressionStatement	o -> lines = p -> lines ( bf )	393:2:9828:9852	3568255	0	True				
ANR	3569130	AssignmentExpression	o -> lines = p -> lines ( bf )		3568255	0		=			
ANR	3569131	PtrMemberAccess	o -> lines		3568255	0					
ANR	3569132	Identifier	o		3568255	0					
ANR	3569133	Identifier	lines		3568255	1					
ANR	3569134	CallExpression	p -> lines ( bf )		3568255	1					
ANR	3569135	Callee	p -> lines		3568255	0					
ANR	3569136	PtrMemberAccess	p -> lines		3568255	0					
ANR	3569137	Identifier	p		3568255	0					
ANR	3569138	Identifier	lines		3568255	1					
ANR	3569139	ArgumentList	bf		3568255	1					
ANR	3569140	Argument	bf		3568255	0					
ANR	3569141	Identifier	bf		3568255	0					
ANR	3569142	IfStatement	if ( p -> get_sdb )		3568255	22					
ANR	3569143	Condition	p -> get_sdb	395:5:9862:9871	3568255	0	True				
ANR	3569144	PtrMemberAccess	p -> get_sdb		3568255	0					
ANR	3569145	Identifier	p		3568255	0					
ANR	3569146	Identifier	get_sdb		3568255	1					
ANR	3569147	CompoundStatement		148:2:3556:3585	3568255	1					
ANR	3569148	IdentifierDeclStatement	Sdb * new_kv = p -> get_sdb ( bf ) ;	396:2:9878:9907	3568255	0	True				
ANR	3569149	IdentifierDecl	* new_kv = p -> get_sdb ( bf )		3568255	0					
ANR	3569150	IdentifierDeclType	Sdb *		3568255	0					
ANR	3569151	Identifier	new_kv		3568255	1					
ANR	3569152	AssignmentExpression	* new_kv = p -> get_sdb ( bf )		3568255	2		=			
ANR	3569153	Identifier	new_kv		3568255	0					
ANR	3569154	CallExpression	p -> get_sdb ( bf )		3568255	1					
ANR	3569155	Callee	p -> get_sdb		3568255	0					
ANR	3569156	PtrMemberAccess	p -> get_sdb		3568255	0					
ANR	3569157	Identifier	p		3568255	0					
ANR	3569158	Identifier	get_sdb		3568255	1					
ANR	3569159	ArgumentList	bf		3568255	1					
ANR	3569160	Argument	bf		3568255	0					
ANR	3569161	Identifier	bf		3568255	0					
ANR	3569162	IfStatement	if ( new_kv != o -> kv )		3568255	1					
ANR	3569163	Condition	new_kv != o -> kv	397:6:9915:9929	3568255	0	True				
ANR	3569164	EqualityExpression	new_kv != o -> kv		3568255	0		!=			
ANR	3569165	Identifier	new_kv		3568255	0					
ANR	3569166	PtrMemberAccess	o -> kv		3568255	1					
ANR	3569167	Identifier	o		3568255	0					
ANR	3569168	Identifier	kv		3568255	1					
ANR	3569169	CompoundStatement		149:23:3610:3610	3568255	1					
ANR	3569170	ExpressionStatement	sdb_free ( o -> kv )	398:3:9937:9953	3568255	0	True				
ANR	3569171	CallExpression	sdb_free ( o -> kv )		3568255	0					
ANR	3569172	Callee	sdb_free		3568255	0					
ANR	3569173	Identifier	sdb_free		3568255	0					
ANR	3569174	ArgumentList	o -> kv		3568255	1					
ANR	3569175	Argument	o -> kv		3568255	0					
ANR	3569176	PtrMemberAccess	o -> kv		3568255	0					
ANR	3569177	Identifier	o		3568255	0					
ANR	3569178	Identifier	kv		3568255	1					
ANR	3569179	ExpressionStatement	o -> kv = new_kv	400:2:9961:9975	3568255	2	True				
ANR	3569180	AssignmentExpression	o -> kv = new_kv		3568255	0		=			
ANR	3569181	PtrMemberAccess	o -> kv		3568255	0					
ANR	3569182	Identifier	o		3568255	0					
ANR	3569183	Identifier	kv		3568255	1					
ANR	3569184	Identifier	new_kv		3568255	1					
ANR	3569185	IfStatement	if ( p -> mem )		3568255	23					
ANR	3569186	Condition	p -> mem	402:5:9985:9990	3568255	0	True				
ANR	3569187	PtrMemberAccess	p -> mem		3568255	0					
ANR	3569188	Identifier	p		3568255	0					
ANR	3569189	Identifier	mem		3568255	1					
ANR	3569190	CompoundStatement		154:14:3672:3672	3568255	1					
ANR	3569191	ExpressionStatement	o -> mem = p -> mem ( bf )	403:2:9998:10018	3568255	0	True				
ANR	3569192	AssignmentExpression	o -> mem = p -> mem ( bf )		3568255	0		=			
ANR	3569193	PtrMemberAccess	o -> mem		3568255	0					
ANR	3569194	Identifier	o		3568255	0					
ANR	3569195	Identifier	mem		3568255	1					
ANR	3569196	CallExpression	p -> mem ( bf )		3568255	1					
ANR	3569197	Callee	p -> mem		3568255	0					
ANR	3569198	PtrMemberAccess	p -> mem		3568255	0					
ANR	3569199	Identifier	p		3568255	0					
ANR	3569200	Identifier	mem		3568255	1					
ANR	3569201	ArgumentList	bf		3568255	1					
ANR	3569202	Argument	bf		3568255	0					
ANR	3569203	Identifier	bf		3568255	0					
ANR	3569204	IfStatement	if ( bin -> filter_rules & ( R_BIN_REQ_INFO | R_BIN_REQ_SYMBOLS | R_BIN_REQ_IMPORTS ) )		3568255	24					
ANR	3569205	Condition	bin -> filter_rules & ( R_BIN_REQ_INFO | R_BIN_REQ_SYMBOLS | R_BIN_REQ_IMPORTS )	405:5:10028:10103	3568255	0	True				
ANR	3569206	BitAndExpression	bin -> filter_rules & ( R_BIN_REQ_INFO | R_BIN_REQ_SYMBOLS | R_BIN_REQ_IMPORTS )		3568255	0		&			
ANR	3569207	PtrMemberAccess	bin -> filter_rules		3568255	0					
ANR	3569208	Identifier	bin		3568255	0					
ANR	3569209	Identifier	filter_rules		3568255	1					
ANR	3569210	InclusiveOrExpression	R_BIN_REQ_INFO | R_BIN_REQ_SYMBOLS | R_BIN_REQ_IMPORTS		3568255	1		|			
ANR	3569211	Identifier	R_BIN_REQ_INFO		3568255	0					
ANR	3569212	InclusiveOrExpression	R_BIN_REQ_SYMBOLS | R_BIN_REQ_IMPORTS		3568255	1		|			
ANR	3569213	Identifier	R_BIN_REQ_SYMBOLS		3568255	0					
ANR	3569214	Identifier	R_BIN_REQ_IMPORTS		3568255	1					
ANR	3569215	CompoundStatement		157:83:3784:3784	3568255	1					
ANR	3569216	ExpressionStatement	o -> lang = isSwift ? R_BIN_NM_SWIFT : r_bin_load_languages ( bf )	406:2:10110:10170	3568255	0	True				
ANR	3569217	AssignmentExpression	o -> lang = isSwift ? R_BIN_NM_SWIFT : r_bin_load_languages ( bf )		3568255	0		=			
ANR	3569218	PtrMemberAccess	o -> lang		3568255	0					
ANR	3569219	Identifier	o		3568255	0					
ANR	3569220	Identifier	lang		3568255	1					
ANR	3569221	ConditionalExpression	isSwift ? R_BIN_NM_SWIFT : r_bin_load_languages ( bf )		3568255	1					
ANR	3569222	Condition	isSwift		3568255	0					
ANR	3569223	Identifier	isSwift		3568255	0					
ANR	3569224	Identifier	R_BIN_NM_SWIFT		3568255	1					
ANR	3569225	CallExpression	r_bin_load_languages ( bf )		3568255	2					
ANR	3569226	Callee	r_bin_load_languages		3568255	0					
ANR	3569227	Identifier	r_bin_load_languages		3568255	0					
ANR	3569228	ArgumentList	bf		3568255	1					
ANR	3569229	Argument	bf		3568255	0					
ANR	3569230	Identifier	bf		3568255	0					
ANR	3569231	ReturnStatement	return true ;	408:1:10176:10187	3568255	25	True				
ANR	3569232	Identifier	true		3568255	0					
ANR	3569233	ReturnType	R_API int		3568255	1					
ANR	3569234	Identifier	r_bin_object_set_items		3568255	2					
ANR	3569235	ParameterList	"RBinFile * bf , RBinObject * o"		3568255	3					
ANR	3569236	Parameter	RBinFile * bf	249:33:6292:6303	3568255	0	True				
ANR	3569237	ParameterType	RBinFile *		3568255	0					
ANR	3569238	Identifier	bf		3568255	1					
ANR	3569239	Parameter	RBinObject * o	249:47:6306:6318	3568255	1	True				
ANR	3569240	ParameterType	RBinObject *		3568255	0					
ANR	3569241	Identifier	o		3568255	1					
ANR	3569242	CFGEntryNode	ENTRY		3568255		True				
ANR	3569243	CFGExitNode	EXIT		3568255		True				
ANR	3569244	Symbol	p -> strings		3568255						
ANR	3569245	Symbol	bin		3568255						
ANR	3569246	Symbol	o -> info		3568255						
ANR	3569247	Symbol	r_bin_lang_swift		3568255						
ANR	3569248	Symbol	type		3568255						
ANR	3569249	Symbol	R_BIN_SYM_LAST		3568255						
ANR	3569250	Symbol	new_kv		3568255						
ANR	3569251	Symbol	o -> entries		3568255						
ANR	3569252	Symbol	p -> imports		3568255						
ANR	3569253	Symbol	bf -> o		3568255						
ANR	3569254	Symbol	RBinReloc		3568255						
ANR	3569255	Symbol	o -> classes		3568255						
ANR	3569256	Symbol	p -> symbols		3568255						
ANR	3569257	Symbol	p -> mem		3568255						
ANR	3569258	Symbol	o -> lines		3568255						
ANR	3569259	Symbol	o -> mem		3568255						
ANR	3569260	Symbol	classes_from_symbols		3568255						
ANR	3569261	Symbol	bin -> filter_rules		3568255						
ANR	3569262	Symbol	R_BIN_REQ_CLASSES		3568255						
ANR	3569263	Symbol	o -> regstate		3568255						
ANR	3569264	Symbol	o -> fields		3568255						
ANR	3569265	Symbol	method		3568255						
ANR	3569266	Symbol	p -> regstate		3568255						
ANR	3569267	Symbol	method -> name		3568255						
ANR	3569268	Symbol	iter		3568255						
ANR	3569269	Symbol	o -> addr2klassmethod		3568255						
ANR	3569270	Symbol	* * * o		3568255						
ANR	3569271	Symbol	p -> size		3568255						
ANR	3569272	Symbol	RBinAddr		3568255						
ANR	3569273	Symbol	at		3568255						
ANR	3569274	Symbol	p -> binsym		3568255						
ANR	3569275	Symbol	bin -> filter		3568255						
ANR	3569276	Symbol	o -> relocs		3568255						
ANR	3569277	Symbol	klasses		3568255						
ANR	3569278	Symbol	o -> lang		3568255						
ANR	3569279	Symbol	* bf -> rbin		3568255						
ANR	3569280	Symbol	R_BIN_TYPE_CORE		3568255						
ANR	3569281	Symbol	p -> info		3568255						
ANR	3569282	Symbol	bf		3568255						
ANR	3569283	Symbol	R_BIN_REQ_STRINGS		3568255						
ANR	3569284	Symbol	p -> lines		3568255						
ANR	3569285	Symbol	R_BIN_REQ_IMPORTS		3568255						
ANR	3569286	Symbol	* o -> imports		3568255						
ANR	3569287	Symbol	bf -> rbin		3568255						
ANR	3569288	Symbol	o -> kv		3568255						
ANR	3569289	Symbol	* bin		3568255						
ANR	3569290	Symbol	o -> size		3568255						
ANR	3569291	Symbol	o -> imports		3568255						
ANR	3569292	Symbol	p -> relocs		3568255						
ANR	3569293	Symbol	* * o		3568255						
ANR	3569294	Symbol	list2rbtree		3568255						
ANR	3569295	Symbol	p -> minstrlen		3568255						
ANR	3569296	Symbol	sdb_new0		3568255						
ANR	3569297	Symbol	km		3568255						
ANR	3569298	Symbol	RBinString		3568255						
ANR	3569299	Symbol	i		3568255						
ANR	3569300	Symbol	l		3568255						
ANR	3569301	Symbol	o		3568255						
ANR	3569302	Symbol	p		3568255						
ANR	3569303	Symbol	o -> strings		3568255						
ANR	3569304	Symbol	p -> get_sdb		3568255						
ANR	3569305	Symbol	bf -> rbin -> minstrlen		3568255						
ANR	3569306	Symbol	minlen		3568255						
ANR	3569307	Symbol	RBinSection		3568255						
ANR	3569308	Symbol	isSwift		3568255						
ANR	3569309	Symbol	* klass		3568255						
ANR	3569310	Symbol	* * o -> binsym		3568255						
ANR	3569311	Symbol	o -> sections		3568255						
ANR	3569312	Symbol	klass -> name		3568255						
ANR	3569313	Symbol	o -> binsym [ i ] -> paddr		3568255						
ANR	3569314	Symbol	RBinField		3568255						
ANR	3569315	Symbol	bin -> debase64		3568255						
ANR	3569316	Symbol	klass		3568255						
ANR	3569317	Symbol	r_bin_load_languages		3568255						
ANR	3569318	Symbol	p -> sections		3568255						
ANR	3569319	Symbol	R_BIN_REQ_RELOCS		3568255						
ANR	3569320	Symbol	p -> file_type		3568255						
ANR	3569321	Symbol	* * i		3568255						
ANR	3569322	Symbol	o -> loadaddr		3568255						
ANR	3569323	Symbol	r_bin_field_free		3568255						
ANR	3569324	Symbol	NULL		3568255						
ANR	3569325	Symbol	p -> maps		3568255						
ANR	3569326	Symbol	r_bin_file_get_strings		3568255						
ANR	3569327	Symbol	* * bf		3568255						
ANR	3569328	Symbol	p -> classes		3568255						
ANR	3569329	Symbol	true		3568255						
ANR	3569330	Symbol	p -> libs		3568255						
ANR	3569331	Symbol	R_BIN_NM_SWIFT		3568255						
ANR	3569332	Symbol	r_bin_import_free		3568255						
ANR	3569333	Symbol	RBinSymbol		3568255						
ANR	3569334	Symbol	o -> fields -> free		3568255						
ANR	3569335	Symbol	p -> fields		3568255						
ANR	3569336	Symbol	bf -> rawstr		3568255						
ANR	3569337	Symbol	p -> entries		3568255						
ANR	3569338	Symbol	R_BIN_REQ_INFO		3568255						
ANR	3569339	Symbol	classes		3568255						
ANR	3569340	Symbol	* o -> fields		3568255						
ANR	3569341	Symbol	o -> boffset		3568255						
ANR	3569342	Symbol	* o -> binsym		3568255						
ANR	3569343	Symbol	o -> imports -> free		3568255						
ANR	3569344	Symbol	o -> binsym		3568255						
ANR	3569345	Symbol	sdb_fmt		3568255						
ANR	3569346	Symbol	o -> libs		3568255						
ANR	3569347	Symbol	R_BIN_REQ_SYMBOLS		3568255						
ANR	3569348	Symbol	* o -> symbols		3568255						
ANR	3569349	Symbol	r_bin_symbol_free		3568255						
ANR	3569350	Symbol	o -> plugin		3568255						
ANR	3569351	Symbol	iter2		3568255						
ANR	3569352	Symbol	false		3568255						
ANR	3569353	Symbol	* bf		3568255						
ANR	3569354	Symbol	* method		3568255						
ANR	3569355	Symbol	o -> symbols		3568255						
ANR	3569356	Symbol	* i		3568255						
ANR	3569357	Symbol	o -> symbols -> free		3568255						
ANR	3569358	Symbol	* l		3568255						
ANR	3569359	Symbol	* o		3568255						
ANR	3569360	Symbol	o -> maps		3568255						
ANR	3569361	Symbol	* p		3568255						
ANR	3569362	Symbol	l -> free		3568255						
ANR	3569363	Symbol	p -> boffset		3568255						
ANR	3569364	Function	r_bin_object_patch_relocs	411:0:10192:10806							
ANR	3569365	FunctionDef	"r_bin_object_patch_relocs (RBin * bin , RBinObject * o)"		3569364	0					
ANR	3569366	CompoundStatement		411:66:10258:10806	3569364	0					
ANR	3569367	ExpressionStatement	"r_return_val_if_fail ( bin && o , NULL )"	412:1:10261:10298	3569364	0	True				
ANR	3569368	CallExpression	"r_return_val_if_fail ( bin && o , NULL )"		3569364	0					
ANR	3569369	Callee	r_return_val_if_fail		3569364	0					
ANR	3569370	Identifier	r_return_val_if_fail		3569364	0					
ANR	3569371	ArgumentList	bin && o		3569364	1					
ANR	3569372	Argument	bin && o		3569364	0					
ANR	3569373	AndExpression	bin && o		3569364	0		&&			
ANR	3569374	Identifier	bin		3569364	0					
ANR	3569375	Identifier	o		3569364	1					
ANR	3569376	Argument	NULL		3569364	1					
ANR	3569377	Identifier	NULL		3569364	0					
ANR	3569378	Statement	static	414:1:10302:10307	3569364	1	True				
ANR	3569379	IdentifierDeclStatement	bool first = true ;	414:8:10309:10326	3569364	2	True				
ANR	3569380	IdentifierDecl	first = true		3569364	0					
ANR	3569381	IdentifierDeclType	bool		3569364	0					
ANR	3569382	Identifier	first		3569364	1					
ANR	3569383	AssignmentExpression	first = true		3569364	2		=			
ANR	3569384	Identifier	true		3569364	0					
ANR	3569385	Identifier	true		3569364	1					
ANR	3569386	IfStatement	if ( first && o -> plugin && o -> plugin -> patch_relocs )		3569364	3					
ANR	3569387	Condition	first && o -> plugin && o -> plugin -> patch_relocs	418:5:10506:10550	3569364	0	True				
ANR	3569388	AndExpression	first && o -> plugin && o -> plugin -> patch_relocs		3569364	0		&&			
ANR	3569389	Identifier	first		3569364	0					
ANR	3569390	AndExpression	o -> plugin && o -> plugin -> patch_relocs		3569364	1		&&			
ANR	3569391	PtrMemberAccess	o -> plugin		3569364	0					
ANR	3569392	Identifier	o		3569364	0					
ANR	3569393	Identifier	plugin		3569364	1					
ANR	3569394	PtrMemberAccess	o -> plugin -> patch_relocs		3569364	1					
ANR	3569395	PtrMemberAccess	o -> plugin		3569364	0					
ANR	3569396	Identifier	o		3569364	0					
ANR	3569397	Identifier	plugin		3569364	1					
ANR	3569398	Identifier	patch_relocs		3569364	1					
ANR	3569399	CompoundStatement		9:2:298:340	3569364	1					
ANR	3569400	IdentifierDeclStatement	RList * tmp = o -> plugin -> patch_relocs ( bin ) ;	419:2:10557:10599	3569364	0	True				
ANR	3569401	IdentifierDecl	* tmp = o -> plugin -> patch_relocs ( bin )		3569364	0					
ANR	3569402	IdentifierDeclType	RList *		3569364	0					
ANR	3569403	Identifier	tmp		3569364	1					
ANR	3569404	AssignmentExpression	* tmp = o -> plugin -> patch_relocs ( bin )		3569364	2		=			
ANR	3569405	Identifier	tmp		3569364	0					
ANR	3569406	CallExpression	o -> plugin -> patch_relocs ( bin )		3569364	1					
ANR	3569407	Callee	o -> plugin -> patch_relocs		3569364	0					
ANR	3569408	PtrMemberAccess	o -> plugin -> patch_relocs		3569364	0					
ANR	3569409	PtrMemberAccess	o -> plugin		3569364	0					
ANR	3569410	Identifier	o		3569364	0					
ANR	3569411	Identifier	plugin		3569364	1					
ANR	3569412	Identifier	patch_relocs		3569364	1					
ANR	3569413	ArgumentList	bin		3569364	1					
ANR	3569414	Argument	bin		3569364	0					
ANR	3569415	Identifier	bin		3569364	0					
ANR	3569416	ExpressionStatement	first = false	420:2:10603:10616	3569364	1	True				
ANR	3569417	AssignmentExpression	first = false		3569364	0		=			
ANR	3569418	Identifier	first		3569364	0					
ANR	3569419	Identifier	false		3569364	1					
ANR	3569420	IfStatement	if ( ! tmp )		3569364	2					
ANR	3569421	Condition	! tmp	421:6:10624:10627	3569364	0	True				
ANR	3569422	UnaryOperationExpression	! tmp		3569364	0					
ANR	3569423	UnaryOperator	!		3569364	0					
ANR	3569424	Identifier	tmp		3569364	1					
ANR	3569425	CompoundStatement		11:12:371:371	3569364	1					
ANR	3569426	ReturnStatement	return o -> relocs ;	422:3:10635:10651	3569364	0	True				
ANR	3569427	PtrMemberAccess	o -> relocs		3569364	0					
ANR	3569428	Identifier	o		3569364	0					
ANR	3569429	Identifier	relocs		3569364	1					
ANR	3569430	ExpressionStatement	"r_rbtree_free ( o -> relocs , reloc_free )"	424:2:10659:10696	3569364	3	True				
ANR	3569431	CallExpression	"r_rbtree_free ( o -> relocs , reloc_free )"		3569364	0					
ANR	3569432	Callee	r_rbtree_free		3569364	0					
ANR	3569433	Identifier	r_rbtree_free		3569364	0					
ANR	3569434	ArgumentList	o -> relocs		3569364	1					
ANR	3569435	Argument	o -> relocs		3569364	0					
ANR	3569436	PtrMemberAccess	o -> relocs		3569364	0					
ANR	3569437	Identifier	o		3569364	0					
ANR	3569438	Identifier	relocs		3569364	1					
ANR	3569439	Argument	reloc_free		3569364	1					
ANR	3569440	Identifier	reloc_free		3569364	0					
ANR	3569441	ExpressionStatement	"REBASE_PADDR ( o , tmp , RBinReloc )"	425:2:10700:10732	3569364	4	True				
ANR	3569442	CallExpression	"REBASE_PADDR ( o , tmp , RBinReloc )"		3569364	0					
ANR	3569443	Callee	REBASE_PADDR		3569364	0					
ANR	3569444	Identifier	REBASE_PADDR		3569364	0					
ANR	3569445	ArgumentList	o		3569364	1					
ANR	3569446	Argument	o		3569364	0					
ANR	3569447	Identifier	o		3569364	0					
ANR	3569448	Argument	tmp		3569364	1					
ANR	3569449	Identifier	tmp		3569364	0					
ANR	3569450	Argument	RBinReloc		3569364	2					
ANR	3569451	Identifier	RBinReloc		3569364	0					
ANR	3569452	ExpressionStatement	o -> relocs = list2rbtree ( tmp )	426:2:10736:10765	3569364	5	True				
ANR	3569453	AssignmentExpression	o -> relocs = list2rbtree ( tmp )		3569364	0		=			
ANR	3569454	PtrMemberAccess	o -> relocs		3569364	0					
ANR	3569455	Identifier	o		3569364	0					
ANR	3569456	Identifier	relocs		3569364	1					
ANR	3569457	CallExpression	list2rbtree ( tmp )		3569364	1					
ANR	3569458	Callee	list2rbtree		3569364	0					
ANR	3569459	Identifier	list2rbtree		3569364	0					
ANR	3569460	ArgumentList	tmp		3569364	1					
ANR	3569461	Argument	tmp		3569364	0					
ANR	3569462	Identifier	tmp		3569364	0					
ANR	3569463	ExpressionStatement	first = false	427:2:10769:10782	3569364	6	True				
ANR	3569464	AssignmentExpression	first = false		3569364	0		=			
ANR	3569465	Identifier	first		3569364	0					
ANR	3569466	Identifier	false		3569364	1					
ANR	3569467	ReturnStatement	return o -> relocs ;	429:1:10788:10804	3569364	4	True				
ANR	3569468	PtrMemberAccess	o -> relocs		3569364	0					
ANR	3569469	Identifier	o		3569364	0					
ANR	3569470	Identifier	relocs		3569364	1					
ANR	3569471	ReturnType	R_IPI RBNode *		3569364	1					
ANR	3569472	Identifier	r_bin_object_patch_relocs		3569364	2					
ANR	3569473	ParameterList	"RBin * bin , RBinObject * o"		3569364	3					
ANR	3569474	Parameter	RBin * bin	411:40:10232:10240	3569364	0	True				
ANR	3569475	ParameterType	RBin *		3569364	0					
ANR	3569476	Identifier	bin		3569364	1					
ANR	3569477	Parameter	RBinObject * o	411:51:10243:10255	3569364	1	True				
ANR	3569478	ParameterType	RBinObject *		3569364	0					
ANR	3569479	Identifier	o		3569364	1					
ANR	3569480	CFGEntryNode	ENTRY		3569364		True				
ANR	3569481	CFGExitNode	EXIT		3569364		True				
ANR	3569482	Symbol	NULL		3569364						
ANR	3569483	Symbol	bin		3569364						
ANR	3569484	Symbol	o -> plugin		3569364						
ANR	3569485	Symbol	o -> plugin -> patch_relocs		3569364						
ANR	3569486	Symbol	false		3569364						
ANR	3569487	Symbol	o		3569364						
ANR	3569488	Symbol	* o -> plugin		3569364						
ANR	3569489	Symbol	tmp		3569364						
ANR	3569490	Symbol	RBinReloc		3569364						
ANR	3569491	Symbol	true		3569364						
ANR	3569492	Symbol	* o		3569364						
ANR	3569493	Symbol	* * o		3569364						
ANR	3569494	Symbol	o -> relocs		3569364						
ANR	3569495	Symbol	first		3569364						
ANR	3569496	Symbol	list2rbtree		3569364						
ANR	3569497	Symbol	reloc_free		3569364						
ANR	3569498	Function	r_bin_object_get_cur	432:0:10809:10929							
ANR	3569499	FunctionDef	r_bin_object_get_cur (RBin * bin)		3569498	0					
ANR	3569500	CompoundStatement		432:50:10859:10929	3569498	0					
ANR	3569501	ExpressionStatement	"r_return_val_if_fail ( bin && bin -> cur , NULL )"	433:1:10862:10906	3569498	0	True				
ANR	3569502	CallExpression	"r_return_val_if_fail ( bin && bin -> cur , NULL )"		3569498	0					
ANR	3569503	Callee	r_return_val_if_fail		3569498	0					
ANR	3569504	Identifier	r_return_val_if_fail		3569498	0					
ANR	3569505	ArgumentList	bin && bin -> cur		3569498	1					
ANR	3569506	Argument	bin && bin -> cur		3569498	0					
ANR	3569507	AndExpression	bin && bin -> cur		3569498	0		&&			
ANR	3569508	Identifier	bin		3569498	0					
ANR	3569509	PtrMemberAccess	bin -> cur		3569498	1					
ANR	3569510	Identifier	bin		3569498	0					
ANR	3569511	Identifier	cur		3569498	1					
ANR	3569512	Argument	NULL		3569498	1					
ANR	3569513	Identifier	NULL		3569498	0					
ANR	3569514	ReturnStatement	return bin -> cur -> o ;	434:1:10909:10927	3569498	1	True				
ANR	3569515	PtrMemberAccess	bin -> cur -> o		3569498	0					
ANR	3569516	PtrMemberAccess	bin -> cur		3569498	0					
ANR	3569517	Identifier	bin		3569498	0					
ANR	3569518	Identifier	cur		3569498	1					
ANR	3569519	Identifier	o		3569498	1					
ANR	3569520	ReturnType	R_IPI RBinObject *		3569498	1					
ANR	3569521	Identifier	r_bin_object_get_cur		3569498	2					
ANR	3569522	ParameterList	RBin * bin		3569498	3					
ANR	3569523	Parameter	RBin * bin	432:39:10848:10856	3569498	0	True				
ANR	3569524	ParameterType	RBin *		3569498	0					
ANR	3569525	Identifier	bin		3569498	1					
ANR	3569526	CFGEntryNode	ENTRY		3569498		True				
ANR	3569527	CFGExitNode	EXIT		3569498		True				
ANR	3569528	Symbol	bin -> cur		3569498						
ANR	3569529	Symbol	NULL		3569498						
ANR	3569530	Symbol	bin		3569498						
ANR	3569531	Symbol	bin -> cur -> o		3569498						
ANR	3569532	Symbol	* bin -> cur		3569498						
ANR	3569533	Symbol	* * bin		3569498						
ANR	3569534	Symbol	* bin		3569498						
ANR	3569535	Function	r_bin_object_find_by_arch_bits	437:0:10932:11315							
ANR	3569536	FunctionDef	"r_bin_object_find_by_arch_bits (RBinFile * bf , const char * arch , int bits , const char * name)"		3569535	0					
ANR	3569537	CompoundStatement		437:109:11041:11315	3569535	0					
ANR	3569538	ExpressionStatement	"r_return_val_if_fail ( bf && arch && name , NULL )"	438:1:11044:11091	3569535	0	True				
ANR	3569539	CallExpression	"r_return_val_if_fail ( bf && arch && name , NULL )"		3569535	0					
ANR	3569540	Callee	r_return_val_if_fail		3569535	0					
ANR	3569541	Identifier	r_return_val_if_fail		3569535	0					
ANR	3569542	ArgumentList	bf && arch && name		3569535	1					
ANR	3569543	Argument	bf && arch && name		3569535	0					
ANR	3569544	AndExpression	bf && arch && name		3569535	0		&&			
ANR	3569545	Identifier	bf		3569535	0					
ANR	3569546	AndExpression	arch && name		3569535	1		&&			
ANR	3569547	Identifier	arch		3569535	0					
ANR	3569548	Identifier	name		3569535	1					
ANR	3569549	Argument	NULL		3569535	1					
ANR	3569550	Identifier	NULL		3569535	0					
ANR	3569551	IfStatement	if ( bf -> o )		3569535	1					
ANR	3569552	Condition	bf -> o	439:5:11098:11102	3569535	0	True				
ANR	3569553	PtrMemberAccess	bf -> o		3569535	0					
ANR	3569554	Identifier	bf		3569535	0					
ANR	3569555	Identifier	o		3569535	1					
ANR	3569556	CompoundStatement		4:2:67:95	3569535	1					
ANR	3569557	IdentifierDeclStatement	RBinInfo * info = bf -> o -> info ;	440:2:11109:11137	3569535	0	True				
ANR	3569558	IdentifierDecl	* info = bf -> o -> info		3569535	0					
ANR	3569559	IdentifierDeclType	RBinInfo *		3569535	0					
ANR	3569560	Identifier	info		3569535	1					
ANR	3569561	AssignmentExpression	* info = bf -> o -> info		3569535	2		=			
ANR	3569562	Identifier	info		3569535	0					
ANR	3569563	PtrMemberAccess	bf -> o -> info		3569535	1					
ANR	3569564	PtrMemberAccess	bf -> o		3569535	0					
ANR	3569565	Identifier	bf		3569535	0					
ANR	3569566	Identifier	o		3569535	1					
ANR	3569567	Identifier	info		3569535	1					
ANR	3569568	IfStatement	"if ( info && info -> arch && info -> file && ( bits == info -> bits ) && ! strcmp ( info -> arch , arch ) && ! strcmp ( info -> file , name ) )"		3569535	1					
ANR	3569569	Condition	"info && info -> arch && info -> file && ( bits == info -> bits ) && ! strcmp ( info -> arch , arch ) && ! strcmp ( info -> file , name )"	441:6:11145:11272	3569535	0	True				
ANR	3569570	AndExpression	"info && info -> arch && info -> file && ( bits == info -> bits ) && ! strcmp ( info -> arch , arch ) && ! strcmp ( info -> file , name )"		3569535	0		&&			
ANR	3569571	Identifier	info		3569535	0					
ANR	3569572	AndExpression	"info -> arch && info -> file && ( bits == info -> bits ) && ! strcmp ( info -> arch , arch ) && ! strcmp ( info -> file , name )"		3569535	1		&&			
ANR	3569573	PtrMemberAccess	info -> arch		3569535	0					
ANR	3569574	Identifier	info		3569535	0					
ANR	3569575	Identifier	arch		3569535	1					
ANR	3569576	AndExpression	"info -> file && ( bits == info -> bits ) && ! strcmp ( info -> arch , arch ) && ! strcmp ( info -> file , name )"		3569535	1		&&			
ANR	3569577	PtrMemberAccess	info -> file		3569535	0					
ANR	3569578	Identifier	info		3569535	0					
ANR	3569579	Identifier	file		3569535	1					
ANR	3569580	AndExpression	"( bits == info -> bits ) && ! strcmp ( info -> arch , arch ) && ! strcmp ( info -> file , name )"		3569535	1		&&			
ANR	3569581	EqualityExpression	bits == info -> bits		3569535	0		==			
ANR	3569582	Identifier	bits		3569535	0					
ANR	3569583	PtrMemberAccess	info -> bits		3569535	1					
ANR	3569584	Identifier	info		3569535	0					
ANR	3569585	Identifier	bits		3569535	1					
ANR	3569586	AndExpression	"! strcmp ( info -> arch , arch ) && ! strcmp ( info -> file , name )"		3569535	1		&&			
ANR	3569587	UnaryOperationExpression	"! strcmp ( info -> arch , arch )"		3569535	0					
ANR	3569588	UnaryOperator	!		3569535	0					
ANR	3569589	CallExpression	"strcmp ( info -> arch , arch )"		3569535	1					
ANR	3569590	Callee	strcmp		3569535	0					
ANR	3569591	Identifier	strcmp		3569535	0					
ANR	3569592	ArgumentList	info -> arch		3569535	1					
ANR	3569593	Argument	info -> arch		3569535	0					
ANR	3569594	PtrMemberAccess	info -> arch		3569535	0					
ANR	3569595	Identifier	info		3569535	0					
ANR	3569596	Identifier	arch		3569535	1					
ANR	3569597	Argument	arch		3569535	1					
ANR	3569598	Identifier	arch		3569535	0					
ANR	3569599	UnaryOperationExpression	"! strcmp ( info -> file , name )"		3569535	1					
ANR	3569600	UnaryOperator	!		3569535	0					
ANR	3569601	CallExpression	"strcmp ( info -> file , name )"		3569535	1					
ANR	3569602	Callee	strcmp		3569535	0					
ANR	3569603	Identifier	strcmp		3569535	0					
ANR	3569604	ArgumentList	info -> file		3569535	1					
ANR	3569605	Argument	info -> file		3569535	0					
ANR	3569606	PtrMemberAccess	info -> file		3569535	0					
ANR	3569607	Identifier	info		3569535	0					
ANR	3569608	Identifier	file		3569535	1					
ANR	3569609	Argument	name		3569535	1					
ANR	3569610	Identifier	name		3569535	0					
ANR	3569611	CompoundStatement		8:32:233:233	3569535	1					
ANR	3569612	ReturnStatement	return bf -> o ;	445:3:11280:11292	3569535	0	True				
ANR	3569613	PtrMemberAccess	bf -> o		3569535	0					
ANR	3569614	Identifier	bf		3569535	0					
ANR	3569615	Identifier	o		3569535	1					
ANR	3569616	ReturnStatement	return NULL ;	448:1:11302:11313	3569535	2	True				
ANR	3569617	Identifier	NULL		3569535	0					
ANR	3569618	ReturnType	R_IPI RBinObject *		3569535	1					
ANR	3569619	Identifier	r_bin_object_find_by_arch_bits		3569535	2					
ANR	3569620	ParameterList	"RBinFile * bf , const char * arch , int bits , const char * name"		3569535	3					
ANR	3569621	Parameter	RBinFile * bf	437:49:10981:10992	3569535	0	True				
ANR	3569622	ParameterType	RBinFile *		3569535	0					
ANR	3569623	Identifier	bf		3569535	1					
ANR	3569624	Parameter	const char * arch	437:63:10995:11010	3569535	1	True				
ANR	3569625	ParameterType	const char *		3569535	0					
ANR	3569626	Identifier	arch		3569535	1					
ANR	3569627	Parameter	int bits	437:81:11013:11020	3569535	2	True				
ANR	3569628	ParameterType	int		3569535	0					
ANR	3569629	Identifier	bits		3569535	1					
ANR	3569630	Parameter	const char * name	437:91:11023:11038	3569535	3	True				
ANR	3569631	ParameterType	const char *		3569535	0					
ANR	3569632	Identifier	name		3569535	1					
ANR	3569633	CFGEntryNode	ENTRY		3569535		True				
ANR	3569634	CFGExitNode	EXIT		3569535		True				
ANR	3569635	Symbol	strcmp		3569535						
ANR	3569636	Symbol	NULL		3569535						
ANR	3569637	Symbol	bf		3569535						
ANR	3569638	Symbol	bits		3569535						
ANR	3569639	Symbol	* bf		3569535						
ANR	3569640	Symbol	bf -> o -> info		3569535						
ANR	3569641	Symbol	* bf -> o		3569535						
ANR	3569642	Symbol	info -> bits		3569535						
ANR	3569643	Symbol	* * bf		3569535						
ANR	3569644	Symbol	bf -> o		3569535						
ANR	3569645	Symbol	info -> file		3569535						
ANR	3569646	Symbol	name		3569535						
ANR	3569647	Symbol	arch		3569535						
ANR	3569648	Symbol	* info		3569535						
ANR	3569649	Symbol	info		3569535						
ANR	3569650	Symbol	info -> arch		3569535						
ANR	3569651	Function	r_bin_object_delete	451:0:11318:11629							
ANR	3569652	FunctionDef	"r_bin_object_delete (RBin * bin , ut32 bf_id)"		3569651	0					
ANR	3569653	CompoundStatement		451:54:11372:11629	3569651	0					
ANR	3569654	ExpressionStatement	"r_return_val_if_fail ( bin , false )"	452:1:11375:11408	3569651	0	True				
ANR	3569655	CallExpression	"r_return_val_if_fail ( bin , false )"		3569651	0					
ANR	3569656	Callee	r_return_val_if_fail		3569651	0					
ANR	3569657	Identifier	r_return_val_if_fail		3569651	0					
ANR	3569658	ArgumentList	bin		3569651	1					
ANR	3569659	Argument	bin		3569651	0					
ANR	3569660	Identifier	bin		3569651	0					
ANR	3569661	Argument	false		3569651	1					
ANR	3569662	Identifier	false		3569651	0					
ANR	3569663	IdentifierDeclStatement	bool res = false ;	454:1:11412:11428	3569651	1	True				
ANR	3569664	IdentifierDecl	res = false		3569651	0					
ANR	3569665	IdentifierDeclType	bool		3569651	0					
ANR	3569666	Identifier	res		3569651	1					
ANR	3569667	AssignmentExpression	res = false		3569651	2		=			
ANR	3569668	Identifier	false		3569651	0					
ANR	3569669	Identifier	false		3569651	1					
ANR	3569670	IdentifierDeclStatement	"RBinFile * bf = r_bin_file_find_by_id ( bin , bf_id ) ;"	455:1:11431:11480	3569651	2	True				
ANR	3569671	IdentifierDecl	"* bf = r_bin_file_find_by_id ( bin , bf_id )"		3569651	0					
ANR	3569672	IdentifierDeclType	RBinFile *		3569651	0					
ANR	3569673	Identifier	bf		3569651	1					
ANR	3569674	AssignmentExpression	"* bf = r_bin_file_find_by_id ( bin , bf_id )"		3569651	2		=			
ANR	3569675	Identifier	bf		3569651	0					
ANR	3569676	CallExpression	"r_bin_file_find_by_id ( bin , bf_id )"		3569651	1					
ANR	3569677	Callee	r_bin_file_find_by_id		3569651	0					
ANR	3569678	Identifier	r_bin_file_find_by_id		3569651	0					
ANR	3569679	ArgumentList	bin		3569651	1					
ANR	3569680	Argument	bin		3569651	0					
ANR	3569681	Identifier	bin		3569651	0					
ANR	3569682	Argument	bf_id		3569651	1					
ANR	3569683	Identifier	bf_id		3569651	0					
ANR	3569684	IfStatement	if ( bf )		3569651	3					
ANR	3569685	Condition	bf	456:5:11487:11488	3569651	0	True				
ANR	3569686	Identifier	bf		3569651	0					
ANR	3569687	CompoundStatement		6:9:118:118	3569651	1					
ANR	3569688	IfStatement	if ( bin -> cur == bf )		3569651	0					
ANR	3569689	Condition	bin -> cur == bf	457:6:11499:11512	3569651	0	True				
ANR	3569690	EqualityExpression	bin -> cur == bf		3569651	0		==			
ANR	3569691	PtrMemberAccess	bin -> cur		3569651	0					
ANR	3569692	Identifier	bin		3569651	0					
ANR	3569693	Identifier	cur		3569651	1					
ANR	3569694	Identifier	bf		3569651	1					
ANR	3569695	CompoundStatement		7:22:142:142	3569651	1					
ANR	3569696	ExpressionStatement	bin -> cur = NULL	458:3:11520:11535	3569651	0	True				
ANR	3569697	AssignmentExpression	bin -> cur = NULL		3569651	0		=			
ANR	3569698	PtrMemberAccess	bin -> cur		3569651	0					
ANR	3569699	Identifier	bin		3569651	0					
ANR	3569700	Identifier	cur		3569651	1					
ANR	3569701	Identifier	NULL		3569651	1					
ANR	3569702	IfStatement	if ( ! bf -> o )		3569651	1					
ANR	3569703	Condition	! bf -> o	461:6:11556:11561	3569651	0	True				
ANR	3569704	UnaryOperationExpression	! bf -> o		3569651	0					
ANR	3569705	UnaryOperator	!		3569651	0					
ANR	3569706	PtrMemberAccess	bf -> o		3569651	1					
ANR	3569707	Identifier	bf		3569651	0					
ANR	3569708	Identifier	o		3569651	1					
ANR	3569709	CompoundStatement		11:14:191:191	3569651	1					
ANR	3569710	ExpressionStatement	"r_list_delete_data ( bin -> binfiles , bf )"	462:3:11569:11607	3569651	0	True				
ANR	3569711	CallExpression	"r_list_delete_data ( bin -> binfiles , bf )"		3569651	0					
ANR	3569712	Callee	r_list_delete_data		3569651	0					
ANR	3569713	Identifier	r_list_delete_data		3569651	0					
ANR	3569714	ArgumentList	bin -> binfiles		3569651	1					
ANR	3569715	Argument	bin -> binfiles		3569651	0					
ANR	3569716	PtrMemberAccess	bin -> binfiles		3569651	0					
ANR	3569717	Identifier	bin		3569651	0					
ANR	3569718	Identifier	binfiles		3569651	1					
ANR	3569719	Argument	bf		3569651	1					
ANR	3569720	Identifier	bf		3569651	0					
ANR	3569721	ReturnStatement	return res ;	465:1:11617:11627	3569651	4	True				
ANR	3569722	Identifier	res		3569651	0					
ANR	3569723	ReturnType	R_API bool		3569651	1					
ANR	3569724	Identifier	r_bin_object_delete		3569651	2					
ANR	3569725	ParameterList	"RBin * bin , ut32 bf_id"		3569651	3					
ANR	3569726	Parameter	RBin * bin	451:31:11349:11357	3569651	0	True				
ANR	3569727	ParameterType	RBin *		3569651	0					
ANR	3569728	Identifier	bin		3569651	1					
ANR	3569729	Parameter	ut32 bf_id	451:42:11360:11369	3569651	1	True				
ANR	3569730	ParameterType	ut32		3569651	0					
ANR	3569731	Identifier	bf_id		3569651	1					
ANR	3569732	CFGEntryNode	ENTRY		3569651		True				
ANR	3569733	CFGExitNode	EXIT		3569651		True				
ANR	3569734	Symbol	res		3569651						
ANR	3569735	Symbol	bin -> cur		3569651						
ANR	3569736	Symbol	bin -> binfiles		3569651						
ANR	3569737	Symbol	bf_id		3569651						
ANR	3569738	Symbol	NULL		3569651						
ANR	3569739	Symbol	bf		3569651						
ANR	3569740	Symbol	bf -> o		3569651						
ANR	3569741	Symbol	bin		3569651						
ANR	3569742	Symbol	false		3569651						
ANR	3569743	Symbol	* bf		3569651						
ANR	3569744	Symbol	r_bin_file_find_by_id		3569651						
ANR	3569745	Symbol	* bin		3569651						
ANR	3569746	Function	r_bin_object_filter_strings	468:0:11632:12333							
ANR	3569747	FunctionDef	r_bin_object_filter_strings (RBinObject * bo)		3569746	0					
ANR	3569748	CompoundStatement		468:55:11687:12333	3569746	0					
ANR	3569749	ExpressionStatement	r_return_if_fail ( bo && bo -> strings )	469:1:11690:11726	3569746	0	True				
ANR	3569750	CallExpression	r_return_if_fail ( bo && bo -> strings )		3569746	0					
ANR	3569751	Callee	r_return_if_fail		3569746	0					
ANR	3569752	Identifier	r_return_if_fail		3569746	0					
ANR	3569753	ArgumentList	bo && bo -> strings		3569746	1					
ANR	3569754	Argument	bo && bo -> strings		3569746	0					
ANR	3569755	AndExpression	bo && bo -> strings		3569746	0		&&			
ANR	3569756	Identifier	bo		3569746	0					
ANR	3569757	PtrMemberAccess	bo -> strings		3569746	1					
ANR	3569758	Identifier	bo		3569746	0					
ANR	3569759	Identifier	strings		3569746	1					
ANR	3569760	IdentifierDeclStatement	RList * strings = bo -> strings ;	471:1:11730:11758	3569746	1	True				
ANR	3569761	IdentifierDecl	* strings = bo -> strings		3569746	0					
ANR	3569762	IdentifierDeclType	RList *		3569746	0					
ANR	3569763	Identifier	strings		3569746	1					
ANR	3569764	AssignmentExpression	* strings = bo -> strings		3569746	2		=			
ANR	3569765	Identifier	strings		3569746	0					
ANR	3569766	PtrMemberAccess	bo -> strings		3569746	1					
ANR	3569767	Identifier	bo		3569746	0					
ANR	3569768	Identifier	strings		3569746	1					
ANR	3569769	IdentifierDeclStatement	RBinString * ptr ;	472:1:11761:11776	3569746	2	True				
ANR	3569770	IdentifierDecl	* ptr		3569746	0					
ANR	3569771	IdentifierDeclType	RBinString *		3569746	0					
ANR	3569772	Identifier	ptr		3569746	1					
ANR	3569773	IdentifierDeclStatement	RListIter * iter ;	473:1:11779:11794	3569746	3	True				
ANR	3569774	IdentifierDecl	* iter		3569746	0					
ANR	3569775	IdentifierDeclType	RListIter *		3569746	0					
ANR	3569776	Identifier	iter		3569746	1					
ANR	3569777	Statement	r_list_foreach	474:1:11797:11810	3569746	4	True				
ANR	3569778	Statement	(	474:16:11812:11812	3569746	5	True				
ANR	3569779	Statement	strings	474:17:11813:11819	3569746	6	True				
ANR	3569780	Statement	","	474:24:11820:11820	3569746	7	True				
ANR	3569781	Statement	iter	474:26:11822:11825	3569746	8	True				
ANR	3569782	Statement	","	474:30:11826:11826	3569746	9	True				
ANR	3569783	Statement	ptr	474:32:11828:11830	3569746	10	True				
ANR	3569784	Statement	)	474:35:11831:11831	3569746	11	True				
ANR	3569785	CompoundStatement		8:2:149:206	3569746	12					
ANR	3569786	IdentifierDeclStatement	"char * dec = ( char * ) r_base64_decode_dyn ( ptr -> string , - 1 ) ;"	475:2:11837:11894	3569746	0	True				
ANR	3569787	IdentifierDecl	"* dec = ( char * ) r_base64_decode_dyn ( ptr -> string , - 1 )"		3569746	0					
ANR	3569788	IdentifierDeclType	char *		3569746	0					
ANR	3569789	Identifier	dec		3569746	1					
ANR	3569790	AssignmentExpression	"* dec = ( char * ) r_base64_decode_dyn ( ptr -> string , - 1 )"		3569746	2		=			
ANR	3569791	Identifier	dec		3569746	0					
ANR	3569792	CastExpression	"( char * ) r_base64_decode_dyn ( ptr -> string , - 1 )"		3569746	1					
ANR	3569793	CastTarget	char *		3569746	0					
ANR	3569794	CallExpression	"r_base64_decode_dyn ( ptr -> string , - 1 )"		3569746	1					
ANR	3569795	Callee	r_base64_decode_dyn		3569746	0					
ANR	3569796	Identifier	r_base64_decode_dyn		3569746	0					
ANR	3569797	ArgumentList	ptr -> string		3569746	1					
ANR	3569798	Argument	ptr -> string		3569746	0					
ANR	3569799	PtrMemberAccess	ptr -> string		3569746	0					
ANR	3569800	Identifier	ptr		3569746	0					
ANR	3569801	Identifier	string		3569746	1					
ANR	3569802	Argument	- 1		3569746	1					
ANR	3569803	UnaryOperationExpression	- 1		3569746	0					
ANR	3569804	UnaryOperator	-		3569746	0					
ANR	3569805	PrimaryExpression	1		3569746	1					
ANR	3569806	IfStatement	if ( dec )		3569746	1					
ANR	3569807	Condition	dec	476:6:11902:11904	3569746	0	True				
ANR	3569808	Identifier	dec		3569746	0					
ANR	3569809	CompoundStatement		10:3:224:245	3569746	1					
ANR	3569810	IdentifierDeclStatement	char * s = ptr -> string ;	477:3:11912:11933	3569746	0	True				
ANR	3569811	IdentifierDecl	* s = ptr -> string		3569746	0					
ANR	3569812	IdentifierDeclType	char *		3569746	0					
ANR	3569813	Identifier	s		3569746	1					
ANR	3569814	AssignmentExpression	* s = ptr -> string		3569746	2		=			
ANR	3569815	Identifier	s		3569746	0					
ANR	3569816	PtrMemberAccess	ptr -> string		3569746	1					
ANR	3569817	Identifier	ptr		3569746	0					
ANR	3569818	Identifier	string		3569746	1					
ANR	3569819	ForStatement	for ( ; ; )		3569746	1					
ANR	3569820	CompoundStatement		12:4:265:313	3569746	0					
ANR	3569821	IdentifierDeclStatement	"char * dec2 = ( char * ) r_base64_decode_dyn ( s , - 1 ) ;"	479:4:11953:12001	3569746	0	True				
ANR	3569822	IdentifierDecl	"* dec2 = ( char * ) r_base64_decode_dyn ( s , - 1 )"		3569746	0					
ANR	3569823	IdentifierDeclType	char *		3569746	0					
ANR	3569824	Identifier	dec2		3569746	1					
ANR	3569825	AssignmentExpression	"* dec2 = ( char * ) r_base64_decode_dyn ( s , - 1 )"		3569746	2		=			
ANR	3569826	Identifier	dec2		3569746	0					
ANR	3569827	CastExpression	"( char * ) r_base64_decode_dyn ( s , - 1 )"		3569746	1					
ANR	3569828	CastTarget	char *		3569746	0					
ANR	3569829	CallExpression	"r_base64_decode_dyn ( s , - 1 )"		3569746	1					
ANR	3569830	Callee	r_base64_decode_dyn		3569746	0					
ANR	3569831	Identifier	r_base64_decode_dyn		3569746	0					
ANR	3569832	ArgumentList	s		3569746	1					
ANR	3569833	Argument	s		3569746	0					
ANR	3569834	Identifier	s		3569746	0					
ANR	3569835	Argument	- 1		3569746	1					
ANR	3569836	UnaryOperationExpression	- 1		3569746	0					
ANR	3569837	UnaryOperator	-		3569746	0					
ANR	3569838	PrimaryExpression	1		3569746	1					
ANR	3569839	IfStatement	if ( ! dec2 )		3569746	1					
ANR	3569840	Condition	! dec2	480:8:12011:12015	3569746	0	True				
ANR	3569841	UnaryOperationExpression	! dec2		3569746	0					
ANR	3569842	UnaryOperator	!		3569746	0					
ANR	3569843	Identifier	dec2		3569746	1					
ANR	3569844	CompoundStatement		13:15:330:330	3569746	1					
ANR	3569845	BreakStatement	break ;	481:5:12025:12030	3569746	0	True				
ANR	3569846	IfStatement	if ( ! r_str_is_printable ( dec2 ) )		3569746	2					
ANR	3569847	Condition	! r_str_is_printable ( dec2 )	483:8:12046:12071	3569746	0	True				
ANR	3569848	UnaryOperationExpression	! r_str_is_printable ( dec2 )		3569746	0					
ANR	3569849	UnaryOperator	!		3569746	0					
ANR	3569850	CallExpression	r_str_is_printable ( dec2 )		3569746	1					
ANR	3569851	Callee	r_str_is_printable		3569746	0					
ANR	3569852	Identifier	r_str_is_printable		3569746	0					
ANR	3569853	ArgumentList	dec2		3569746	1					
ANR	3569854	Argument	dec2		3569746	0					
ANR	3569855	Identifier	dec2		3569746	0					
ANR	3569856	CompoundStatement		16:36:386:386	3569746	1					
ANR	3569857	ExpressionStatement	free ( dec2 )	484:5:12081:12092	3569746	0	True				
ANR	3569858	CallExpression	free ( dec2 )		3569746	0					
ANR	3569859	Callee	free		3569746	0					
ANR	3569860	Identifier	free		3569746	0					
ANR	3569861	ArgumentList	dec2		3569746	1					
ANR	3569862	Argument	dec2		3569746	0					
ANR	3569863	Identifier	dec2		3569746	0					
ANR	3569864	BreakStatement	break ;	485:5:12099:12104	3569746	1	True				
ANR	3569865	ExpressionStatement	free ( dec )	487:4:12116:12126	3569746	3	True				
ANR	3569866	CallExpression	free ( dec )		3569746	0					
ANR	3569867	Callee	free		3569746	0					
ANR	3569868	Identifier	free		3569746	0					
ANR	3569869	ArgumentList	dec		3569746	1					
ANR	3569870	Argument	dec		3569746	0					
ANR	3569871	Identifier	dec		3569746	0					
ANR	3569872	ExpressionStatement	s = dec = dec2	488:4:12132:12146	3569746	4	True				
ANR	3569873	AssignmentExpression	s = dec = dec2		3569746	0		=			
ANR	3569874	Identifier	s		3569746	0					
ANR	3569875	AssignmentExpression	dec = dec2		3569746	1		=			
ANR	3569876	Identifier	dec		3569746	0					
ANR	3569877	Identifier	dec2		3569746	1					
ANR	3569878	IfStatement	if ( r_str_is_printable ( dec ) && strlen ( dec ) > 3 )		3569746	2					
ANR	3569879	Condition	r_str_is_printable ( dec ) && strlen ( dec ) > 3	490:7:12160:12203	3569746	0	True				
ANR	3569880	AndExpression	r_str_is_printable ( dec ) && strlen ( dec ) > 3		3569746	0		&&			
ANR	3569881	CallExpression	r_str_is_printable ( dec )		3569746	0					
ANR	3569882	Callee	r_str_is_printable		3569746	0					
ANR	3569883	Identifier	r_str_is_printable		3569746	0					
ANR	3569884	ArgumentList	dec		3569746	1					
ANR	3569885	Argument	dec		3569746	0					
ANR	3569886	Identifier	dec		3569746	0					
ANR	3569887	RelationalExpression	strlen ( dec ) > 3		3569746	1		>			
ANR	3569888	CallExpression	strlen ( dec )		3569746	0					
ANR	3569889	Callee	strlen		3569746	0					
ANR	3569890	Identifier	strlen		3569746	0					
ANR	3569891	ArgumentList	dec		3569746	1					
ANR	3569892	Argument	dec		3569746	0					
ANR	3569893	Identifier	dec		3569746	0					
ANR	3569894	PrimaryExpression	3		3569746	1					
ANR	3569895	CompoundStatement		23:53:518:518	3569746	1					
ANR	3569896	ExpressionStatement	free ( ptr -> string )	491:4:12212:12230	3569746	0	True				
ANR	3569897	CallExpression	free ( ptr -> string )		3569746	0					
ANR	3569898	Callee	free		3569746	0					
ANR	3569899	Identifier	free		3569746	0					
ANR	3569900	ArgumentList	ptr -> string		3569746	1					
ANR	3569901	Argument	ptr -> string		3569746	0					
ANR	3569902	PtrMemberAccess	ptr -> string		3569746	0					
ANR	3569903	Identifier	ptr		3569746	0					
ANR	3569904	Identifier	string		3569746	1					
ANR	3569905	ExpressionStatement	ptr -> string = dec	492:4:12236:12253	3569746	1	True				
ANR	3569906	AssignmentExpression	ptr -> string = dec		3569746	0		=			
ANR	3569907	PtrMemberAccess	ptr -> string		3569746	0					
ANR	3569908	Identifier	ptr		3569746	0					
ANR	3569909	Identifier	string		3569746	1					
ANR	3569910	Identifier	dec		3569746	1					
ANR	3569911	ExpressionStatement	ptr -> type = R_STRING_TYPE_BASE64	493:4:12259:12291	3569746	2	True				
ANR	3569912	AssignmentExpression	ptr -> type = R_STRING_TYPE_BASE64		3569746	0		=			
ANR	3569913	PtrMemberAccess	ptr -> type		3569746	0					
ANR	3569914	Identifier	ptr		3569746	0					
ANR	3569915	Identifier	type		3569746	1					
ANR	3569916	Identifier	R_STRING_TYPE_BASE64		3569746	1					
ANR	3569917	ElseStatement	else		3569746	0					
ANR	3569918	CompoundStatement		27:10:615:615	3569746	0					
ANR	3569919	ExpressionStatement	free ( dec )	495:4:12309:12319	3569746	0	True				
ANR	3569920	CallExpression	free ( dec )		3569746	0					
ANR	3569921	Callee	free		3569746	0					
ANR	3569922	Identifier	free		3569746	0					
ANR	3569923	ArgumentList	dec		3569746	1					
ANR	3569924	Argument	dec		3569746	0					
ANR	3569925	Identifier	dec		3569746	0					
ANR	3569926	ReturnType	R_IPI void		3569746	1					
ANR	3569927	Identifier	r_bin_object_filter_strings		3569746	2					
ANR	3569928	ParameterList	RBinObject * bo		3569746	3					
ANR	3569929	Parameter	RBinObject * bo	468:39:11671:11684	3569746	0	True				
ANR	3569930	ParameterType	RBinObject *		3569746	0					
ANR	3569931	Identifier	bo		3569746	1					
ANR	3569932	CFGEntryNode	ENTRY		3569746		True				
ANR	3569933	CFGExitNode	EXIT		3569746		True				
ANR	3569934	InfiniteForNode	true		3569746		True				
ANR	3569935	Symbol	dec		3569746						
ANR	3569936	Symbol	r_base64_decode_dyn		3569746						
ANR	3569937	Symbol	ptr -> type		3569746						
ANR	3569938	Symbol	iter		3569746						
ANR	3569939	Symbol	ptr -> string		3569746						
ANR	3569940	Symbol	bo		3569746						
ANR	3569941	Symbol	ptr		3569746						
ANR	3569942	Symbol	* bo		3569746						
ANR	3569943	Symbol	strlen		3569746						
ANR	3569944	Symbol	s		3569746						
ANR	3569945	Symbol	strings		3569746						
ANR	3569946	Symbol	r_str_is_printable		3569746						
ANR	3569947	Symbol	* ptr		3569746						
ANR	3569948	Symbol	bo -> strings		3569746						
ANR	3569949	Symbol	dec2		3569746						
ANR	3569950	Symbol	R_STRING_TYPE_BASE64		3569746						
