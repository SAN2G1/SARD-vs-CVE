command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3588177	File	data/converged/CVE-2019-16718~_radare2/libr_bin_filter.c								
ANR	3588178	Function	__hashify	6:0:91:517							
ANR	3588179	FunctionDef	"__hashify (char * s , ut64 vaddr)"		3588178	0					
ANR	3588180	CompoundStatement		6:44:135:517	3588178	0					
ANR	3588181	ExpressionStatement	"r_return_val_if_fail ( s , NULL )"	7:1:138:168	3588178	0	True				
ANR	3588182	CallExpression	"r_return_val_if_fail ( s , NULL )"		3588178	0					
ANR	3588183	Callee	r_return_val_if_fail		3588178	0					
ANR	3588184	Identifier	r_return_val_if_fail		3588178	0					
ANR	3588185	ArgumentList	s		3588178	1					
ANR	3588186	Argument	s		3588178	0					
ANR	3588187	Identifier	s		3588178	0					
ANR	3588188	Argument	NULL		3588178	1					
ANR	3588189	Identifier	NULL		3588178	0					
ANR	3588190	IdentifierDeclStatement	char * os = s ;	9:1:172:184	3588178	1	True				
ANR	3588191	IdentifierDecl	* os = s		3588178	0					
ANR	3588192	IdentifierDeclType	char *		3588178	0					
ANR	3588193	Identifier	os		3588178	1					
ANR	3588194	AssignmentExpression	* os = s		3588178	2		=			
ANR	3588195	Identifier	s		3588178	0					
ANR	3588196	Identifier	s		3588178	1					
ANR	3588197	WhileStatement	while ( * s )		3588178	2					
ANR	3588198	Condition	* s	10:8:194:195	3588178	0	True				
ANR	3588199	UnaryOperationExpression	* s		3588178	0					
ANR	3588200	UnaryOperator	*		3588178	0					
ANR	3588201	Identifier	s		3588178	1					
ANR	3588202	CompoundStatement		5:12:62:62	3588178	1					
ANR	3588203	IfStatement	if ( ! IS_PRINTABLE ( * s ) )		3588178	0					
ANR	3588204	Condition	! IS_PRINTABLE ( * s )	11:6:206:223	3588178	0	True				
ANR	3588205	UnaryOperationExpression	! IS_PRINTABLE ( * s )		3588178	0					
ANR	3588206	UnaryOperator	!		3588178	0					
ANR	3588207	CallExpression	IS_PRINTABLE ( * s )		3588178	1					
ANR	3588208	Callee	IS_PRINTABLE		3588178	0					
ANR	3588209	Identifier	IS_PRINTABLE		3588178	0					
ANR	3588210	ArgumentList	* s		3588178	1					
ANR	3588211	Argument	* s		3588178	0					
ANR	3588212	UnaryOperationExpression	* s		3588178	0					
ANR	3588213	UnaryOperator	*		3588178	0					
ANR	3588214	Identifier	s		3588178	1					
ANR	3588215	CompoundStatement		15:3:269:304	3588178	1					
ANR	3588216	IfStatement	if ( vaddr && vaddr != UT64_MAX )		3588178	0					
ANR	3588217	Condition	vaddr && vaddr != UT64_MAX	12:7:235:260	3588178	0	True				
ANR	3588218	AndExpression	vaddr && vaddr != UT64_MAX		3588178	0		&&			
ANR	3588219	Identifier	vaddr		3588178	0					
ANR	3588220	EqualityExpression	vaddr != UT64_MAX		3588178	1		!=			
ANR	3588221	Identifier	vaddr		3588178	0					
ANR	3588222	Identifier	UT64_MAX		3588178	1					
ANR	3588223	CompoundStatement		7:35:127:127	3588178	1					
ANR	3588224	Statement	char	13:4:269:272	3588178	0	True				
ANR	3588225	Statement	*	13:9:274:274	3588178	1	True				
ANR	3588226	Statement	ret	13:10:275:277	3588178	2	True				
ANR	3588227	Statement	=	13:14:279:279	3588178	3	True				
ANR	3588228	Statement	r_str_newf	13:16:281:290	3588178	4	True				
ANR	3588229	Statement	(	13:27:292:292	3588178	5	True				
ANR	3588230	Statement	"""_%"""	13:28:293:296	3588178	6	True				
ANR	3588231	Statement	PFMT64d	13:33:298:304	3588178	7	True				
ANR	3588232	Statement	","	13:40:305:305	3588178	8	True				
ANR	3588233	Statement	vaddr	13:42:307:311	3588178	9	True				
ANR	3588234	Statement	)	13:47:312:312	3588178	10	True				
ANR	3588235	ExpressionStatement		13:48:313:313	3588178	11	True				
ANR	3588236	IfStatement	if ( ret )		3588178	12					
ANR	3588237	Condition	ret	14:8:323:325	3588178	0	True				
ANR	3588238	Identifier	ret		3588178	0					
ANR	3588239	CompoundStatement		9:13:192:192	3588178	1					
ANR	3588240	ExpressionStatement	free ( os )	15:5:335:344	3588178	0	True				
ANR	3588241	CallExpression	free ( os )		3588178	0					
ANR	3588242	Callee	free		3588178	0					
ANR	3588243	Identifier	free		3588178	0					
ANR	3588244	ArgumentList	os		3588178	1					
ANR	3588245	Argument	os		3588178	0					
ANR	3588246	Identifier	os		3588178	0					
ANR	3588247	ReturnStatement	return ret ;	17:4:356:366	3588178	13	True				
ANR	3588248	Identifier	ret		3588178	0					
ANR	3588249	IdentifierDeclStatement	ut32 hash = sdb_hash ( s ) ;	19:3:376:400	3588178	1	True				
ANR	3588250	IdentifierDecl	hash = sdb_hash ( s )		3588178	0					
ANR	3588251	IdentifierDeclType	ut32		3588178	0					
ANR	3588252	Identifier	hash		3588178	1					
ANR	3588253	AssignmentExpression	hash = sdb_hash ( s )		3588178	2		=			
ANR	3588254	Identifier	hash		3588178	0					
ANR	3588255	CallExpression	sdb_hash ( s )		3588178	1					
ANR	3588256	Callee	sdb_hash		3588178	0					
ANR	3588257	Identifier	sdb_hash		3588178	0					
ANR	3588258	ArgumentList	s		3588178	1					
ANR	3588259	Argument	s		3588178	0					
ANR	3588260	Identifier	s		3588178	0					
ANR	3588261	IdentifierDeclStatement	"char * ret = r_str_newf ( ""%x"" , hash ) ;"	20:3:405:440	3588178	2	True				
ANR	3588262	IdentifierDecl	"* ret = r_str_newf ( ""%x"" , hash )"		3588178	0					
ANR	3588263	IdentifierDeclType	char *		3588178	0					
ANR	3588264	Identifier	ret		3588178	1					
ANR	3588265	AssignmentExpression	"* ret = r_str_newf ( ""%x"" , hash )"		3588178	2		=			
ANR	3588266	Identifier	ret		3588178	0					
ANR	3588267	CallExpression	"r_str_newf ( ""%x"" , hash )"		3588178	1					
ANR	3588268	Callee	r_str_newf		3588178	0					
ANR	3588269	Identifier	r_str_newf		3588178	0					
ANR	3588270	ArgumentList	"""%x"""		3588178	1					
ANR	3588271	Argument	"""%x"""		3588178	0					
ANR	3588272	PrimaryExpression	"""%x"""		3588178	0					
ANR	3588273	Argument	hash		3588178	1					
ANR	3588274	Identifier	hash		3588178	0					
ANR	3588275	IfStatement	if ( ret )		3588178	3					
ANR	3588276	Condition	ret	21:7:449:451	3588178	0	True				
ANR	3588277	Identifier	ret		3588178	0					
ANR	3588278	CompoundStatement		16:12:318:318	3588178	1					
ANR	3588279	ExpressionStatement	free ( os )	22:4:460:469	3588178	0	True				
ANR	3588280	CallExpression	free ( os )		3588178	0					
ANR	3588281	Callee	free		3588178	0					
ANR	3588282	Identifier	free		3588178	0					
ANR	3588283	ArgumentList	os		3588178	1					
ANR	3588284	Argument	os		3588178	0					
ANR	3588285	Identifier	os		3588178	0					
ANR	3588286	ReturnStatement	return ret ;	24:3:479:489	3588178	4	True				
ANR	3588287	Identifier	ret		3588178	0					
ANR	3588288	ExpressionStatement	s ++	26:2:497:500	3588178	1	True				
ANR	3588289	PostIncDecOperationExpression	s ++		3588178	0					
ANR	3588290	Identifier	s		3588178	0					
ANR	3588291	IncDec	++		3588178	1					
ANR	3588292	ReturnStatement	return os ;	28:1:506:515	3588178	3	True				
ANR	3588293	Identifier	os		3588178	0					
ANR	3588294	ReturnType	static char *		3588178	1					
ANR	3588295	Identifier	__hashify		3588178	2					
ANR	3588296	ParameterList	"char * s , ut64 vaddr"		3588178	3					
ANR	3588297	Parameter	char * s	6:23:114:120	3588178	0	True				
ANR	3588298	ParameterType	char *		3588178	0					
ANR	3588299	Identifier	s		3588178	1					
ANR	3588300	Parameter	ut64 vaddr	6:32:123:132	3588178	1	True				
ANR	3588301	ParameterType	ut64		3588178	0					
ANR	3588302	Identifier	vaddr		3588178	1					
ANR	3588303	CFGEntryNode	ENTRY		3588178		True				
ANR	3588304	CFGExitNode	EXIT		3588178		True				
ANR	3588305	Symbol	ret		3588178						
ANR	3588306	Symbol	sdb_hash		3588178						
ANR	3588307	Symbol	s		3588178						
ANR	3588308	Symbol	NULL		3588178						
ANR	3588309	Symbol	IS_PRINTABLE		3588178						
ANR	3588310	Symbol	os		3588178						
ANR	3588311	Symbol	vaddr		3588178						
ANR	3588312	Symbol	r_str_newf		3588178						
ANR	3588313	Symbol	UT64_MAX		3588178						
ANR	3588314	Symbol	* s		3588178						
ANR	3588315	Symbol	hash		3588178						
ANR	3588316	Function	r_bin_filter_name	32:0:562:1474							
ANR	3588317	FunctionDef	"r_bin_filter_name (RBinFile * bf , Sdb * db , ut64 vaddr , char * name)"		3588316	0					
ANR	3588318	CompoundStatement		32:77:639:1474	3588316	0					
ANR	3588319	ExpressionStatement	"r_return_val_if_fail ( db && name , NULL )"	33:1:642:681	3588316	0	True				
ANR	3588320	CallExpression	"r_return_val_if_fail ( db && name , NULL )"		3588316	0					
ANR	3588321	Callee	r_return_val_if_fail		3588316	0					
ANR	3588322	Identifier	r_return_val_if_fail		3588316	0					
ANR	3588323	ArgumentList	db && name		3588316	1					
ANR	3588324	Argument	db && name		3588316	0					
ANR	3588325	AndExpression	db && name		3588316	0		&&			
ANR	3588326	Identifier	db		3588316	0					
ANR	3588327	Identifier	name		3588316	1					
ANR	3588328	Argument	NULL		3588316	1					
ANR	3588329	Identifier	NULL		3588316	0					
ANR	3588330	IdentifierDeclStatement	char * resname = name ;	35:1:685:705	3588316	1	True				
ANR	3588331	IdentifierDecl	* resname = name		3588316	0					
ANR	3588332	IdentifierDeclType	char *		3588316	0					
ANR	3588333	Identifier	resname		3588316	1					
ANR	3588334	AssignmentExpression	* resname = name		3588316	2		=			
ANR	3588335	Identifier	name		3588316	0					
ANR	3588336	Identifier	name		3588316	1					
ANR	3588337	Statement	const	36:1:708:712	3588316	2	True				
ANR	3588338	Statement	char	36:7:714:717	3588316	3	True				
ANR	3588339	Statement	*	36:12:719:719	3588316	4	True				
ANR	3588340	Statement	uname	36:13:720:724	3588316	5	True				
ANR	3588341	Statement	=	36:19:726:726	3588316	6	True				
ANR	3588342	Statement	sdb_fmt	36:21:728:734	3588316	7	True				
ANR	3588343	Statement	(	36:29:736:736	3588316	8	True				
ANR	3588344	Statement	"""%"""	36:30:737:739	3588316	9	True				
ANR	3588345	Statement	PFMT64x	36:34:741:747	3588316	10	True				
ANR	3588346	Statement	""".%s"""	36:42:749:753	3588316	11	True				
ANR	3588347	Statement	","	36:47:754:754	3588316	12	True				
ANR	3588348	Statement	vaddr	36:49:756:760	3588316	13	True				
ANR	3588349	Statement	","	36:54:761:761	3588316	14	True				
ANR	3588350	Statement	resname	36:56:763:769	3588316	15	True				
ANR	3588351	Statement	)	36:63:770:770	3588316	16	True				
ANR	3588352	ExpressionStatement		36:64:771:771	3588316	17	True				
ANR	3588353	IdentifierDeclStatement	ut32 vhash = sdb_hash ( uname ) ;	37:1:774:803	3588316	18	True				
ANR	3588354	IdentifierDecl	vhash = sdb_hash ( uname )		3588316	0					
ANR	3588355	IdentifierDeclType	ut32		3588316	0					
ANR	3588356	Identifier	vhash		3588316	1					
ANR	3588357	AssignmentExpression	vhash = sdb_hash ( uname )		3588316	2		=			
ANR	3588358	Identifier	vhash		3588316	0					
ANR	3588359	CallExpression	sdb_hash ( uname )		3588316	1					
ANR	3588360	Callee	sdb_hash		3588316	0					
ANR	3588361	Identifier	sdb_hash		3588316	0					
ANR	3588362	ArgumentList	uname		3588316	1					
ANR	3588363	Argument	uname		3588316	0					
ANR	3588364	Identifier	uname		3588316	0					
ANR	3588365	IdentifierDeclStatement	ut32 hash = sdb_hash ( resname ) ;	38:1:829:859	3588316	19	True				
ANR	3588366	IdentifierDecl	hash = sdb_hash ( resname )		3588316	0					
ANR	3588367	IdentifierDeclType	ut32		3588316	0					
ANR	3588368	Identifier	hash		3588316	1					
ANR	3588369	AssignmentExpression	hash = sdb_hash ( resname )		3588316	2		=			
ANR	3588370	Identifier	hash		3588316	0					
ANR	3588371	CallExpression	sdb_hash ( resname )		3588316	1					
ANR	3588372	Callee	sdb_hash		3588316	0					
ANR	3588373	Identifier	sdb_hash		3588316	0					
ANR	3588374	ArgumentList	resname		3588316	1					
ANR	3588375	Argument	resname		3588316	0					
ANR	3588376	Identifier	resname		3588316	0					
ANR	3588377	IdentifierDeclStatement	"int count = sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 ) ;"	39:1:922:978	3588316	20	True				
ANR	3588378	IdentifierDecl	"count = sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 )"		3588316	0					
ANR	3588379	IdentifierDeclType	int		3588316	0					
ANR	3588380	Identifier	count		3588316	1					
ANR	3588381	AssignmentExpression	"count = sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 )"		3588316	2		=			
ANR	3588382	Identifier	count		3588316	0					
ANR	3588383	CallExpression	"sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 )"		3588316	1					
ANR	3588384	Callee	sdb_num_inc		3588316	0					
ANR	3588385	Identifier	sdb_num_inc		3588316	0					
ANR	3588386	ArgumentList	db		3588316	1					
ANR	3588387	Argument	db		3588316	0					
ANR	3588388	Identifier	db		3588316	0					
ANR	3588389	Argument	"sdb_fmt ( ""%x"" , hash )"		3588316	1					
ANR	3588390	CallExpression	"sdb_fmt ( ""%x"" , hash )"		3588316	0					
ANR	3588391	Callee	sdb_fmt		3588316	0					
ANR	3588392	Identifier	sdb_fmt		3588316	0					
ANR	3588393	ArgumentList	"""%x"""		3588316	1					
ANR	3588394	Argument	"""%x"""		3588316	0					
ANR	3588395	PrimaryExpression	"""%x"""		3588316	0					
ANR	3588396	Argument	hash		3588316	1					
ANR	3588397	Identifier	hash		3588316	0					
ANR	3588398	Argument	1		3588316	2					
ANR	3588399	PrimaryExpression	1		3588316	0					
ANR	3588400	Argument	0		3588316	3					
ANR	3588401	PrimaryExpression	0		3588316	0					
ANR	3588402	IfStatement	"if ( sdb_exists ( db , sdb_fmt ( ""%x"" , vhash ) ) )"		3588316	21					
ANR	3588403	Condition	"sdb_exists ( db , sdb_fmt ( ""%x"" , vhash ) )"	41:5:986:1023	3588316	0	True				
ANR	3588404	CallExpression	"sdb_exists ( db , sdb_fmt ( ""%x"" , vhash ) )"		3588316	0					
ANR	3588405	Callee	sdb_exists		3588316	0					
ANR	3588406	Identifier	sdb_exists		3588316	0					
ANR	3588407	ArgumentList	db		3588316	1					
ANR	3588408	Argument	db		3588316	0					
ANR	3588409	Identifier	db		3588316	0					
ANR	3588410	Argument	"sdb_fmt ( ""%x"" , vhash )"		3588316	1					
ANR	3588411	CallExpression	"sdb_fmt ( ""%x"" , vhash )"		3588316	0					
ANR	3588412	Callee	sdb_fmt		3588316	0					
ANR	3588413	Identifier	sdb_fmt		3588316	0					
ANR	3588414	ArgumentList	"""%x"""		3588316	1					
ANR	3588415	Argument	"""%x"""		3588316	0					
ANR	3588416	PrimaryExpression	"""%x"""		3588316	0					
ANR	3588417	Argument	vhash		3588316	1					
ANR	3588418	Identifier	vhash		3588316	0					
ANR	3588419	CompoundStatement		10:45:386:386	3588316	1					
ANR	3588420	ReturnStatement	return resname ;	43:2:1085:1099	3588316	0	True				
ANR	3588421	Identifier	resname		3588316	0					
ANR	3588422	ExpressionStatement	"sdb_num_set ( db , sdb_fmt ( ""%x"" , vhash ) , 1 , 0 )"	45:1:1105:1150	3588316	22	True				
ANR	3588423	CallExpression	"sdb_num_set ( db , sdb_fmt ( ""%x"" , vhash ) , 1 , 0 )"		3588316	0					
ANR	3588424	Callee	sdb_num_set		3588316	0					
ANR	3588425	Identifier	sdb_num_set		3588316	0					
ANR	3588426	ArgumentList	db		3588316	1					
ANR	3588427	Argument	db		3588316	0					
ANR	3588428	Identifier	db		3588316	0					
ANR	3588429	Argument	"sdb_fmt ( ""%x"" , vhash )"		3588316	1					
ANR	3588430	CallExpression	"sdb_fmt ( ""%x"" , vhash )"		3588316	0					
ANR	3588431	Callee	sdb_fmt		3588316	0					
ANR	3588432	Identifier	sdb_fmt		3588316	0					
ANR	3588433	ArgumentList	"""%x"""		3588316	1					
ANR	3588434	Argument	"""%x"""		3588316	0					
ANR	3588435	PrimaryExpression	"""%x"""		3588316	0					
ANR	3588436	Argument	vhash		3588316	1					
ANR	3588437	Identifier	vhash		3588316	0					
ANR	3588438	Argument	1		3588316	2					
ANR	3588439	PrimaryExpression	1		3588316	0					
ANR	3588440	Argument	0		3588316	3					
ANR	3588441	PrimaryExpression	0		3588316	0					
ANR	3588442	IfStatement	if ( vaddr )		3588316	23					
ANR	3588443	Condition	vaddr	46:5:1157:1161	3588316	0	True				
ANR	3588444	Identifier	vaddr		3588316	0					
ANR	3588445	CompoundStatement		16:2:528:564	3588316	1					
ANR	3588446	IdentifierDeclStatement	"char * p = __hashify ( resname , vaddr ) ;"	47:2:1168:1204	3588316	0	True				
ANR	3588447	IdentifierDecl	"* p = __hashify ( resname , vaddr )"		3588316	0					
ANR	3588448	IdentifierDeclType	char *		3588316	0					
ANR	3588449	Identifier	p		3588316	1					
ANR	3588450	AssignmentExpression	"* p = __hashify ( resname , vaddr )"		3588316	2		=			
ANR	3588451	Identifier	p		3588316	0					
ANR	3588452	CallExpression	"__hashify ( resname , vaddr )"		3588316	1					
ANR	3588453	Callee	__hashify		3588316	0					
ANR	3588454	Identifier	__hashify		3588316	0					
ANR	3588455	ArgumentList	resname		3588316	1					
ANR	3588456	Argument	resname		3588316	0					
ANR	3588457	Identifier	resname		3588316	0					
ANR	3588458	Argument	vaddr		3588316	1					
ANR	3588459	Identifier	vaddr		3588316	0					
ANR	3588460	IfStatement	if ( p )		3588316	1					
ANR	3588461	Condition	p	48:6:1212:1212	3588316	0	True				
ANR	3588462	Identifier	p		3588316	0					
ANR	3588463	CompoundStatement		17:9:575:575	3588316	1					
ANR	3588464	ExpressionStatement	resname = p	49:3:1220:1231	3588316	0	True				
ANR	3588465	AssignmentExpression	resname = p		3588316	0		=			
ANR	3588466	Identifier	resname		3588316	0					
ANR	3588467	Identifier	p		3588316	1					
ANR	3588468	IfStatement	if ( count > 1 )		3588316	24					
ANR	3588469	Condition	count > 1	52:5:1245:1253	3588316	0	True				
ANR	3588470	RelationalExpression	count > 1		3588316	0		>			
ANR	3588471	Identifier	count		3588316	0					
ANR	3588472	PrimaryExpression	1		3588316	1					
ANR	3588473	CompoundStatement		22:2:620:671	3588316	1					
ANR	3588474	IdentifierDeclStatement	"char * p = r_str_appendf ( resname , ""_%d"" , count - 1 ) ;"	53:2:1260:1311	3588316	0	True				
ANR	3588475	IdentifierDecl	"* p = r_str_appendf ( resname , ""_%d"" , count - 1 )"		3588316	0					
ANR	3588476	IdentifierDeclType	char *		3588316	0					
ANR	3588477	Identifier	p		3588316	1					
ANR	3588478	AssignmentExpression	"* p = r_str_appendf ( resname , ""_%d"" , count - 1 )"		3588316	2		=			
ANR	3588479	Identifier	p		3588316	0					
ANR	3588480	CallExpression	"r_str_appendf ( resname , ""_%d"" , count - 1 )"		3588316	1					
ANR	3588481	Callee	r_str_appendf		3588316	0					
ANR	3588482	Identifier	r_str_appendf		3588316	0					
ANR	3588483	ArgumentList	resname		3588316	1					
ANR	3588484	Argument	resname		3588316	0					
ANR	3588485	Identifier	resname		3588316	0					
ANR	3588486	Argument	"""_%d"""		3588316	1					
ANR	3588487	PrimaryExpression	"""_%d"""		3588316	0					
ANR	3588488	Argument	count - 1		3588316	2					
ANR	3588489	AdditiveExpression	count - 1		3588316	0		-			
ANR	3588490	Identifier	count		3588316	0					
ANR	3588491	PrimaryExpression	1		3588316	1					
ANR	3588492	IfStatement	if ( p )		3588316	1					
ANR	3588493	Condition	p	54:6:1319:1319	3588316	0	True				
ANR	3588494	Identifier	p		3588316	0					
ANR	3588495	CompoundStatement		23:9:682:682	3588316	1					
ANR	3588496	ExpressionStatement	resname = p	55:3:1327:1338	3588316	0	True				
ANR	3588497	AssignmentExpression	resname = p		3588316	0		=			
ANR	3588498	Identifier	resname		3588316	0					
ANR	3588499	Identifier	p		3588316	1					
ANR	3588500	ReturnStatement	return resname ;	61:1:1458:1472	3588316	25	True				
ANR	3588501	Identifier	resname		3588316	0					
ANR	3588502	ReturnType	R_API char *		3588316	1					
ANR	3588503	Identifier	r_bin_filter_name		3588316	2					
ANR	3588504	ParameterList	"RBinFile * bf , Sdb * db , ut64 vaddr , char * name"		3588316	3					
ANR	3588505	Parameter	RBinFile * bf	32:30:592:603	3588316	0	True				
ANR	3588506	ParameterType	RBinFile *		3588316	0					
ANR	3588507	Identifier	bf		3588316	1					
ANR	3588508	Parameter	Sdb * db	32:44:606:612	3588316	1	True				
ANR	3588509	ParameterType	Sdb *		3588316	0					
ANR	3588510	Identifier	db		3588316	1					
ANR	3588511	Parameter	ut64 vaddr	32:53:615:624	3588316	2	True				
ANR	3588512	ParameterType	ut64		3588316	0					
ANR	3588513	Identifier	vaddr		3588316	1					
ANR	3588514	Parameter	char * name	32:65:627:636	3588316	3	True				
ANR	3588515	ParameterType	char *		3588316	0					
ANR	3588516	Identifier	name		3588316	1					
ANR	3588517	CFGEntryNode	ENTRY		3588316		True				
ANR	3588518	CFGExitNode	EXIT		3588316		True				
ANR	3588519	Symbol	sdb_hash		3588316						
ANR	3588520	Symbol	NULL		3588316						
ANR	3588521	Symbol	bf		3588316						
ANR	3588522	Symbol	uname		3588316						
ANR	3588523	Symbol	__hashify		3588316						
ANR	3588524	Symbol	count		3588316						
ANR	3588525	Symbol	sdb_exists		3588316						
ANR	3588526	Symbol	vaddr		3588316						
ANR	3588527	Symbol	vhash		3588316						
ANR	3588528	Symbol	resname		3588316						
ANR	3588529	Symbol	p		3588316						
ANR	3588530	Symbol	r_str_appendf		3588316						
ANR	3588531	Symbol	name		3588316						
ANR	3588532	Symbol	sdb_num_inc		3588316						
ANR	3588533	Symbol	sdb_fmt		3588316						
ANR	3588534	Symbol	db		3588316						
ANR	3588535	Symbol	hash		3588316						
ANR	3588536	Function	r_bin_filter_sym	64:0:1477:2928							
ANR	3588537	FunctionDef	"r_bin_filter_sym (RBinFile * bf , HtPP * ht , ut64 vaddr , RBinSymbol * sym)"		3588536	0					
ANR	3588538	CompoundStatement		64:81:1558:2928	3588536	0					
ANR	3588539	ExpressionStatement	r_return_if_fail ( ht && sym && sym -> name )	65:1:1561:1602	3588536	0	True				
ANR	3588540	CallExpression	r_return_if_fail ( ht && sym && sym -> name )		3588536	0					
ANR	3588541	Callee	r_return_if_fail		3588536	0					
ANR	3588542	Identifier	r_return_if_fail		3588536	0					
ANR	3588543	ArgumentList	ht && sym && sym -> name		3588536	1					
ANR	3588544	Argument	ht && sym && sym -> name		3588536	0					
ANR	3588545	AndExpression	ht && sym && sym -> name		3588536	0		&&			
ANR	3588546	Identifier	ht		3588536	0					
ANR	3588547	AndExpression	sym && sym -> name		3588536	1		&&			
ANR	3588548	Identifier	sym		3588536	0					
ANR	3588549	PtrMemberAccess	sym -> name		3588536	1					
ANR	3588550	Identifier	sym		3588536	0					
ANR	3588551	Identifier	name		3588536	1					
ANR	3588552	IdentifierDeclStatement	const char * name = sym -> name ;	66:1:1605:1633	3588536	1	True				
ANR	3588553	IdentifierDecl	* name = sym -> name		3588536	0					
ANR	3588554	IdentifierDeclType	const char *		3588536	0					
ANR	3588555	Identifier	name		3588536	1					
ANR	3588556	AssignmentExpression	* name = sym -> name		3588536	2		=			
ANR	3588557	Identifier	name		3588536	0					
ANR	3588558	PtrMemberAccess	sym -> name		3588536	1					
ANR	3588559	Identifier	sym		3588536	0					
ANR	3588560	Identifier	name		3588536	1					
ANR	3588561	IfStatement	if ( bf && bf -> o && bf -> o -> lang )		3588536	2					
ANR	3588562	Condition	bf && bf -> o && bf -> o -> lang	69:5:1747:1772	3588536	0	True				
ANR	3588563	AndExpression	bf && bf -> o && bf -> o -> lang		3588536	0		&&			
ANR	3588564	Identifier	bf		3588536	0					
ANR	3588565	AndExpression	bf -> o && bf -> o -> lang		3588536	1		&&			
ANR	3588566	PtrMemberAccess	bf -> o		3588536	0					
ANR	3588567	Identifier	bf		3588536	0					
ANR	3588568	Identifier	o		3588536	1					
ANR	3588569	PtrMemberAccess	bf -> o -> lang		3588536	1					
ANR	3588570	PtrMemberAccess	bf -> o		3588536	0					
ANR	3588571	Identifier	bf		3588536	0					
ANR	3588572	Identifier	o		3588536	1					
ANR	3588573	Identifier	lang		3588536	1					
ANR	3588574	CompoundStatement		8:2:276:342	3588536	1					
ANR	3588575	IdentifierDeclStatement	const char * lang = r_bin_lang_tostring ( bf -> o -> lang ) ;	70:2:1779:1831	3588536	0	True				
ANR	3588576	IdentifierDecl	* lang = r_bin_lang_tostring ( bf -> o -> lang )		3588536	0					
ANR	3588577	IdentifierDeclType	const char *		3588536	0					
ANR	3588578	Identifier	lang		3588536	1					
ANR	3588579	AssignmentExpression	* lang = r_bin_lang_tostring ( bf -> o -> lang )		3588536	2		=			
ANR	3588580	Identifier	lang		3588536	0					
ANR	3588581	CallExpression	r_bin_lang_tostring ( bf -> o -> lang )		3588536	1					
ANR	3588582	Callee	r_bin_lang_tostring		3588536	0					
ANR	3588583	Identifier	r_bin_lang_tostring		3588536	0					
ANR	3588584	ArgumentList	bf -> o -> lang		3588536	1					
ANR	3588585	Argument	bf -> o -> lang		3588536	0					
ANR	3588586	PtrMemberAccess	bf -> o -> lang		3588536	0					
ANR	3588587	PtrMemberAccess	bf -> o		3588536	0					
ANR	3588588	Identifier	bf		3588536	0					
ANR	3588589	Identifier	o		3588536	1					
ANR	3588590	Identifier	lang		3588536	1					
ANR	3588591	IdentifierDeclStatement	"char * dn = r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false ) ;"	71:2:1835:1901	3588536	1	True				
ANR	3588592	IdentifierDecl	"* dn = r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false )"		3588536	0					
ANR	3588593	IdentifierDeclType	char *		3588536	0					
ANR	3588594	Identifier	dn		3588536	1					
ANR	3588595	AssignmentExpression	"* dn = r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false )"		3588536	2		=			
ANR	3588596	Identifier	dn		3588536	0					
ANR	3588597	CallExpression	"r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false )"		3588536	1					
ANR	3588598	Callee	r_bin_demangle		3588536	0					
ANR	3588599	Identifier	r_bin_demangle		3588536	0					
ANR	3588600	ArgumentList	bf		3588536	1					
ANR	3588601	Argument	bf		3588536	0					
ANR	3588602	Identifier	bf		3588536	0					
ANR	3588603	Argument	lang		3588536	1					
ANR	3588604	Identifier	lang		3588536	0					
ANR	3588605	Argument	sym -> name		3588536	2					
ANR	3588606	PtrMemberAccess	sym -> name		3588536	0					
ANR	3588607	Identifier	sym		3588536	0					
ANR	3588608	Identifier	name		3588536	1					
ANR	3588609	Argument	sym -> vaddr		3588536	3					
ANR	3588610	PtrMemberAccess	sym -> vaddr		3588536	0					
ANR	3588611	Identifier	sym		3588536	0					
ANR	3588612	Identifier	vaddr		3588536	1					
ANR	3588613	Argument	false		3588536	4					
ANR	3588614	Identifier	false		3588536	0					
ANR	3588615	IfStatement	if ( dn && * dn )		3588536	2					
ANR	3588616	Condition	dn && * dn	72:6:1909:1917	3588536	0	True				
ANR	3588617	AndExpression	dn && * dn		3588536	0		&&			
ANR	3588618	Identifier	dn		3588536	0					
ANR	3588619	UnaryOperationExpression	* dn		3588536	1					
ANR	3588620	UnaryOperator	*		3588536	0					
ANR	3588621	Identifier	dn		3588536	1					
ANR	3588622	CompoundStatement		15:3:586:612	3588536	1					
ANR	3588623	ExpressionStatement	sym -> dname = dn	73:3:1925:1940	3588536	0	True				
ANR	3588624	AssignmentExpression	sym -> dname = dn		3588536	0		=			
ANR	3588625	PtrMemberAccess	sym -> dname		3588536	0					
ANR	3588626	Identifier	sym		3588536	0					
ANR	3588627	Identifier	dname		3588536	1					
ANR	3588628	Identifier	dn		3588536	1					
ANR	3588629	ExpressionStatement	sym -> name = dn	76:3:2067:2081	3588536	1	True				
ANR	3588630	AssignmentExpression	sym -> name = dn		3588536	0		=			
ANR	3588631	PtrMemberAccess	sym -> name		3588536	0					
ANR	3588632	Identifier	sym		3588536	0					
ANR	3588633	Identifier	name		3588536	1					
ANR	3588634	Identifier	dn		3588536	1					
ANR	3588635	IdentifierDeclStatement	"char * p = strchr ( dn , '.' ) ;"	78:3:2145:2171	3588536	2	True				
ANR	3588636	IdentifierDecl	"* p = strchr ( dn , '.' )"		3588536	0					
ANR	3588637	IdentifierDeclType	char *		3588536	0					
ANR	3588638	Identifier	p		3588536	1					
ANR	3588639	AssignmentExpression	"* p = strchr ( dn , '.' )"		3588536	2		=			
ANR	3588640	Identifier	p		3588536	0					
ANR	3588641	CallExpression	"strchr ( dn , '.' )"		3588536	1					
ANR	3588642	Callee	strchr		3588536	0					
ANR	3588643	Identifier	strchr		3588536	0					
ANR	3588644	ArgumentList	dn		3588536	1					
ANR	3588645	Argument	dn		3588536	0					
ANR	3588646	Identifier	dn		3588536	0					
ANR	3588647	Argument	'.'		3588536	1					
ANR	3588648	PrimaryExpression	'.'		3588536	0					
ANR	3588649	IfStatement	if ( p )		3588536	3					
ANR	3588650	Condition	p	79:7:2180:2180	3588536	0	True				
ANR	3588651	Identifier	p		3588536	0					
ANR	3588652	CompoundStatement		16:10:624:624	3588536	1					
ANR	3588653	IfStatement	if ( IS_UPPER ( * dn ) )		3588536	0					
ANR	3588654	Condition	IS_UPPER ( * dn )	80:8:2193:2206	3588536	0	True				
ANR	3588655	CallExpression	IS_UPPER ( * dn )		3588536	0					
ANR	3588656	Callee	IS_UPPER		3588536	0					
ANR	3588657	Identifier	IS_UPPER		3588536	0					
ANR	3588658	ArgumentList	* dn		3588536	1					
ANR	3588659	Argument	* dn		3588536	0					
ANR	3588660	UnaryOperationExpression	* dn		3588536	0					
ANR	3588661	UnaryOperator	*		3588536	0					
ANR	3588662	Identifier	dn		3588536	1					
ANR	3588663	CompoundStatement		17:24:650:650	3588536	1					
ANR	3588664	ExpressionStatement	sym -> classname = strdup ( dn )	81:5:2216:2244	3588536	0	True				
ANR	3588665	AssignmentExpression	sym -> classname = strdup ( dn )		3588536	0		=			
ANR	3588666	PtrMemberAccess	sym -> classname		3588536	0					
ANR	3588667	Identifier	sym		3588536	0					
ANR	3588668	Identifier	classname		3588536	1					
ANR	3588669	CallExpression	strdup ( dn )		3588536	1					
ANR	3588670	Callee	strdup		3588536	0					
ANR	3588671	Identifier	strdup		3588536	0					
ANR	3588672	ArgumentList	dn		3588536	1					
ANR	3588673	Argument	dn		3588536	0					
ANR	3588674	Identifier	dn		3588536	0					
ANR	3588675	ExpressionStatement	sym -> classname [ p - dn ] = 0	82:5:2251:2277	3588536	1	True				
ANR	3588676	AssignmentExpression	sym -> classname [ p - dn ] = 0		3588536	0		=			
ANR	3588677	ArrayIndexing	sym -> classname [ p - dn ]		3588536	0					
ANR	3588678	PtrMemberAccess	sym -> classname		3588536	0					
ANR	3588679	Identifier	sym		3588536	0					
ANR	3588680	Identifier	classname		3588536	1					
ANR	3588681	AdditiveExpression	p - dn		3588536	1		-			
ANR	3588682	Identifier	p		3588536	0					
ANR	3588683	Identifier	dn		3588536	1					
ANR	3588684	PrimaryExpression	0		3588536	1					
ANR	3588685	ElseStatement	else		3588536	0					
ANR	3588686	IfStatement	if ( IS_UPPER ( p [ 1 ] ) )		3588536	0					
ANR	3588687	Condition	IS_UPPER ( p [ 1 ] )	83:15:2294:2308	3588536	0	True				
ANR	3588688	CallExpression	IS_UPPER ( p [ 1 ] )		3588536	0					
ANR	3588689	Callee	IS_UPPER		3588536	0					
ANR	3588690	Identifier	IS_UPPER		3588536	0					
ANR	3588691	ArgumentList	p [ 1 ]		3588536	1					
ANR	3588692	Argument	p [ 1 ]		3588536	0					
ANR	3588693	ArrayIndexing	p [ 1 ]		3588536	0					
ANR	3588694	Identifier	p		3588536	0					
ANR	3588695	PrimaryExpression	1		3588536	1					
ANR	3588696	CompoundStatement		20:32:752:752	3588536	1					
ANR	3588697	ExpressionStatement	sym -> classname = strdup ( p + 1 )	84:5:2318:2349	3588536	0	True				
ANR	3588698	AssignmentExpression	sym -> classname = strdup ( p + 1 )		3588536	0		=			
ANR	3588699	PtrMemberAccess	sym -> classname		3588536	0					
ANR	3588700	Identifier	sym		3588536	0					
ANR	3588701	Identifier	classname		3588536	1					
ANR	3588702	CallExpression	strdup ( p + 1 )		3588536	1					
ANR	3588703	Callee	strdup		3588536	0					
ANR	3588704	Identifier	strdup		3588536	0					
ANR	3588705	ArgumentList	p + 1		3588536	1					
ANR	3588706	Argument	p + 1		3588536	0					
ANR	3588707	AdditiveExpression	p + 1		3588536	0		+			
ANR	3588708	Identifier	p		3588536	0					
ANR	3588709	PrimaryExpression	1		3588536	1					
ANR	3588710	ExpressionStatement	"p = strchr ( sym -> classname , '.' )"	85:5:2356:2388	3588536	1	True				
ANR	3588711	AssignmentExpression	"p = strchr ( sym -> classname , '.' )"		3588536	0		=			
ANR	3588712	Identifier	p		3588536	0					
ANR	3588713	CallExpression	"strchr ( sym -> classname , '.' )"		3588536	1					
ANR	3588714	Callee	strchr		3588536	0					
ANR	3588715	Identifier	strchr		3588536	0					
ANR	3588716	ArgumentList	sym -> classname		3588536	1					
ANR	3588717	Argument	sym -> classname		3588536	0					
ANR	3588718	PtrMemberAccess	sym -> classname		3588536	0					
ANR	3588719	Identifier	sym		3588536	0					
ANR	3588720	Identifier	classname		3588536	1					
ANR	3588721	Argument	'.'		3588536	1					
ANR	3588722	PrimaryExpression	'.'		3588536	0					
ANR	3588723	IfStatement	if ( p )		3588536	2					
ANR	3588724	Condition	p	86:9:2399:2399	3588536	0	True				
ANR	3588725	Identifier	p		3588536	0					
ANR	3588726	CompoundStatement		23:12:843:843	3588536	1					
ANR	3588727	ExpressionStatement	* p = 0	87:6:2410:2416	3588536	0	True				
ANR	3588728	AssignmentExpression	* p = 0		3588536	0		=			
ANR	3588729	UnaryOperationExpression	* p		3588536	0					
ANR	3588730	UnaryOperator	*		3588536	0					
ANR	3588731	Identifier	p		3588536	1					
ANR	3588732	PrimaryExpression	0		3588536	1					
ANR	3588733	Statement	const	94:1:2445:2449	3588536	3	True				
ANR	3588734	Statement	char	94:7:2451:2454	3588536	4	True				
ANR	3588735	Statement	*	94:12:2456:2456	3588536	5	True				
ANR	3588736	Statement	uname	94:13:2457:2461	3588536	6	True				
ANR	3588737	Statement	=	94:19:2463:2463	3588536	7	True				
ANR	3588738	Statement	sdb_fmt	94:21:2465:2471	3588536	8	True				
ANR	3588739	Statement	(	94:29:2473:2473	3588536	9	True				
ANR	3588740	Statement	"""%"""	94:30:2474:2476	3588536	10	True				
ANR	3588741	Statement	PFMT64x	94:34:2478:2484	3588536	11	True				
ANR	3588742	Statement	""".%s"""	94:42:2486:2490	3588536	12	True				
ANR	3588743	Statement	","	94:47:2491:2491	3588536	13	True				
ANR	3588744	Statement	vaddr	94:49:2493:2497	3588536	14	True				
ANR	3588745	Statement	","	94:54:2498:2498	3588536	15	True				
ANR	3588746	Statement	name	94:56:2500:2503	3588536	16	True				
ANR	3588747	Statement	)	94:60:2504:2504	3588536	17	True				
ANR	3588748	ExpressionStatement		94:61:2505:2505	3588536	18	True				
ANR	3588749	IdentifierDeclStatement	"bool res = ht_pp_insert ( ht , uname , sym ) ;"	95:1:2508:2548	3588536	19	True				
ANR	3588750	IdentifierDecl	"res = ht_pp_insert ( ht , uname , sym )"		3588536	0					
ANR	3588751	IdentifierDeclType	bool		3588536	0					
ANR	3588752	Identifier	res		3588536	1					
ANR	3588753	AssignmentExpression	"res = ht_pp_insert ( ht , uname , sym )"		3588536	2		=			
ANR	3588754	Identifier	res		3588536	0					
ANR	3588755	CallExpression	"ht_pp_insert ( ht , uname , sym )"		3588536	1					
ANR	3588756	Callee	ht_pp_insert		3588536	0					
ANR	3588757	Identifier	ht_pp_insert		3588536	0					
ANR	3588758	ArgumentList	ht		3588536	1					
ANR	3588759	Argument	ht		3588536	0					
ANR	3588760	Identifier	ht		3588536	0					
ANR	3588761	Argument	uname		3588536	1					
ANR	3588762	Identifier	uname		3588536	0					
ANR	3588763	Argument	sym		3588536	2					
ANR	3588764	Identifier	sym		3588536	0					
ANR	3588765	IfStatement	if ( ! res )		3588536	20					
ANR	3588766	Condition	! res	96:5:2555:2558	3588536	0	True				
ANR	3588767	UnaryOperationExpression	! res		3588536	0					
ANR	3588768	UnaryOperator	!		3588536	0					
ANR	3588769	Identifier	res		3588536	1					
ANR	3588770	CompoundStatement		33:11:1002:1002	3588536	1					
ANR	3588771	ReturnStatement	return ;	97:2:2565:2571	3588536	0	True				
ANR	3588772	ExpressionStatement	sym -> dup_count = 0	99:1:2577:2595	3588536	21	True				
ANR	3588773	AssignmentExpression	sym -> dup_count = 0		3588536	0		=			
ANR	3588774	PtrMemberAccess	sym -> dup_count		3588536	0					
ANR	3588775	Identifier	sym		3588536	0					
ANR	3588776	Identifier	dup_count		3588536	1					
ANR	3588777	PrimaryExpression	0		3588536	1					
ANR	3588778	Statement	const	101:1:2599:2603	3588536	22	True				
ANR	3588779	Statement	char	101:7:2605:2608	3588536	23	True				
ANR	3588780	Statement	*	101:12:2610:2610	3588536	24	True				
ANR	3588781	Statement	oname	101:13:2611:2615	3588536	25	True				
ANR	3588782	Statement	=	101:19:2617:2617	3588536	26	True				
ANR	3588783	Statement	sdb_fmt	101:21:2619:2625	3588536	27	True				
ANR	3588784	Statement	(	101:29:2627:2627	3588536	28	True				
ANR	3588785	Statement	"""o.%"""	101:30:2628:2632	3588536	29	True				
ANR	3588786	Statement	PFMT64x	101:36:2634:2640	3588536	30	True				
ANR	3588787	Statement	""".%s"""	101:44:2642:2646	3588536	31	True				
ANR	3588788	Statement	","	101:49:2647:2647	3588536	32	True				
ANR	3588789	Statement	0	101:51:2649:2649	3588536	33	True				
ANR	3588790	Statement	","	101:52:2650:2650	3588536	34	True				
ANR	3588791	Statement	name	101:54:2652:2655	3588536	35	True				
ANR	3588792	Statement	)	101:58:2656:2656	3588536	36	True				
ANR	3588793	ExpressionStatement		101:59:2657:2657	3588536	37	True				
ANR	3588794	IdentifierDeclStatement	"RBinSymbol * prev_sym = ht_pp_find ( ht , oname , NULL ) ;"	102:1:2660:2711	3588536	38	True				
ANR	3588795	IdentifierDecl	"* prev_sym = ht_pp_find ( ht , oname , NULL )"		3588536	0					
ANR	3588796	IdentifierDeclType	RBinSymbol *		3588536	0					
ANR	3588797	Identifier	prev_sym		3588536	1					
ANR	3588798	AssignmentExpression	"* prev_sym = ht_pp_find ( ht , oname , NULL )"		3588536	2		=			
ANR	3588799	Identifier	prev_sym		3588536	0					
ANR	3588800	CallExpression	"ht_pp_find ( ht , oname , NULL )"		3588536	1					
ANR	3588801	Callee	ht_pp_find		3588536	0					
ANR	3588802	Identifier	ht_pp_find		3588536	0					
ANR	3588803	ArgumentList	ht		3588536	1					
ANR	3588804	Argument	ht		3588536	0					
ANR	3588805	Identifier	ht		3588536	0					
ANR	3588806	Argument	oname		3588536	1					
ANR	3588807	Identifier	oname		3588536	0					
ANR	3588808	Argument	NULL		3588536	2					
ANR	3588809	Identifier	NULL		3588536	0					
ANR	3588810	IfStatement	if ( ! prev_sym )		3588536	39					
ANR	3588811	Condition	! prev_sym	103:5:2718:2726	3588536	0	True				
ANR	3588812	UnaryOperationExpression	! prev_sym		3588536	0					
ANR	3588813	UnaryOperator	!		3588536	0					
ANR	3588814	Identifier	prev_sym		3588536	1					
ANR	3588815	CompoundStatement		40:16:1170:1170	3588536	1					
ANR	3588816	IfStatement	"if ( ! ht_pp_insert ( ht , oname , sym ) )"		3588536	0					
ANR	3588817	Condition	"! ht_pp_insert ( ht , oname , sym )"	104:6:2737:2766	3588536	0	True				
ANR	3588818	UnaryOperationExpression	"! ht_pp_insert ( ht , oname , sym )"		3588536	0					
ANR	3588819	UnaryOperator	!		3588536	0					
ANR	3588820	CallExpression	"ht_pp_insert ( ht , oname , sym )"		3588536	1					
ANR	3588821	Callee	ht_pp_insert		3588536	0					
ANR	3588822	Identifier	ht_pp_insert		3588536	0					
ANR	3588823	ArgumentList	ht		3588536	1					
ANR	3588824	Argument	ht		3588536	0					
ANR	3588825	Identifier	ht		3588536	0					
ANR	3588826	Argument	oname		3588536	1					
ANR	3588827	Identifier	oname		3588536	0					
ANR	3588828	Argument	sym		3588536	2					
ANR	3588829	Identifier	sym		3588536	0					
ANR	3588830	CompoundStatement		41:38:1210:1210	3588536	1					
ANR	3588831	ExpressionStatement	"R_LOG_WARN ( ""Failed to insert dup_count in ht"" )"	105:3:2774:2821	3588536	0	True				
ANR	3588832	CallExpression	"R_LOG_WARN ( ""Failed to insert dup_count in ht"" )"		3588536	0					
ANR	3588833	Callee	R_LOG_WARN		3588536	0					
ANR	3588834	Identifier	R_LOG_WARN		3588536	0					
ANR	3588835	ArgumentList	"""Failed to insert dup_count in ht"""		3588536	1					
ANR	3588836	Argument	"""Failed to insert dup_count in ht"""		3588536	0					
ANR	3588837	PrimaryExpression	"""Failed to insert dup_count in ht"""		3588536	0					
ANR	3588838	ReturnStatement	return ;	106:3:2826:2832	3588536	1	True				
ANR	3588839	ElseStatement	else		3588536	0					
ANR	3588840	CompoundStatement		45:8:1287:1287	3588536	0					
ANR	3588841	ExpressionStatement	sym -> dup_count = prev_sym -> dup_count + 1	109:2:2850:2890	3588536	0	True				
ANR	3588842	AssignmentExpression	sym -> dup_count = prev_sym -> dup_count + 1		3588536	0		=			
ANR	3588843	PtrMemberAccess	sym -> dup_count		3588536	0					
ANR	3588844	Identifier	sym		3588536	0					
ANR	3588845	Identifier	dup_count		3588536	1					
ANR	3588846	AdditiveExpression	prev_sym -> dup_count + 1		3588536	1		+			
ANR	3588847	PtrMemberAccess	prev_sym -> dup_count		3588536	0					
ANR	3588848	Identifier	prev_sym		3588536	0					
ANR	3588849	Identifier	dup_count		3588536	1					
ANR	3588850	PrimaryExpression	1		3588536	1					
ANR	3588851	ExpressionStatement	"ht_pp_update ( ht , oname , sym )"	110:2:2894:2923	3588536	1	True				
ANR	3588852	CallExpression	"ht_pp_update ( ht , oname , sym )"		3588536	0					
ANR	3588853	Callee	ht_pp_update		3588536	0					
ANR	3588854	Identifier	ht_pp_update		3588536	0					
ANR	3588855	ArgumentList	ht		3588536	1					
ANR	3588856	Argument	ht		3588536	0					
ANR	3588857	Identifier	ht		3588536	0					
ANR	3588858	Argument	oname		3588536	1					
ANR	3588859	Identifier	oname		3588536	0					
ANR	3588860	Argument	sym		3588536	2					
ANR	3588861	Identifier	sym		3588536	0					
ANR	3588862	ReturnType	R_API void		3588536	1					
ANR	3588863	Identifier	r_bin_filter_sym		3588536	2					
ANR	3588864	ParameterList	"RBinFile * bf , HtPP * ht , ut64 vaddr , RBinSymbol * sym"		3588536	3					
ANR	3588865	Parameter	RBinFile * bf	64:28:1505:1516	3588536	0	True				
ANR	3588866	ParameterType	RBinFile *		3588536	0					
ANR	3588867	Identifier	bf		3588536	1					
ANR	3588868	Parameter	HtPP * ht	64:42:1519:1526	3588536	1	True				
ANR	3588869	ParameterType	HtPP *		3588536	0					
ANR	3588870	Identifier	ht		3588536	1					
ANR	3588871	Parameter	ut64 vaddr	64:52:1529:1538	3588536	2	True				
ANR	3588872	ParameterType	ut64		3588536	0					
ANR	3588873	Identifier	vaddr		3588536	1					
ANR	3588874	Parameter	RBinSymbol * sym	64:64:1541:1555	3588536	3	True				
ANR	3588875	ParameterType	RBinSymbol *		3588536	0					
ANR	3588876	Identifier	sym		3588536	1					
ANR	3588877	CFGEntryNode	ENTRY		3588536		True				
ANR	3588878	CFGExitNode	EXIT		3588536		True				
ANR	3588879	Symbol	sym -> classname		3588536						
ANR	3588880	Symbol	bf		3588536						
ANR	3588881	Symbol	sym		3588536						
ANR	3588882	Symbol	ht_pp_insert		3588536						
ANR	3588883	Symbol	r_bin_lang_tostring		3588536						
ANR	3588884	Symbol	strchr		3588536						
ANR	3588885	Symbol	dn		3588536						
ANR	3588886	Symbol	vaddr		3588536						
ANR	3588887	Symbol	ht		3588536						
ANR	3588888	Symbol	ht_pp_find		3588536						
ANR	3588889	Symbol	* bf -> o		3588536						
ANR	3588890	Symbol	* dn		3588536						
ANR	3588891	Symbol	prev_sym -> dup_count		3588536						
ANR	3588892	Symbol	bf -> o		3588536						
ANR	3588893	Symbol	r_bin_demangle		3588536						
ANR	3588894	Symbol	* prev_sym		3588536						
ANR	3588895	Symbol	* * sym		3588536						
ANR	3588896	Symbol	lang		3588536						
ANR	3588897	Symbol	sym -> dup_count		3588536						
ANR	3588898	Symbol	res		3588536						
ANR	3588899	Symbol	NULL		3588536						
ANR	3588900	Symbol	uname		3588536						
ANR	3588901	Symbol	sym -> vaddr		3588536						
ANR	3588902	Symbol	sym -> dname		3588536						
ANR	3588903	Symbol	IS_UPPER		3588536						
ANR	3588904	Symbol	false		3588536						
ANR	3588905	Symbol	* bf		3588536						
ANR	3588906	Symbol	bf -> o -> lang		3588536						
ANR	3588907	Symbol	p		3588536						
ANR	3588908	Symbol	* sym		3588536						
ANR	3588909	Symbol	* * bf		3588536						
ANR	3588910	Symbol	prev_sym		3588536						
ANR	3588911	Symbol	oname		3588536						
ANR	3588912	Symbol	sym -> name		3588536						
ANR	3588913	Symbol	name		3588536						
ANR	3588914	Symbol	* p		3588536						
ANR	3588915	Symbol	* sym -> classname		3588536						
ANR	3588916	Symbol	strdup		3588536						
ANR	3588917	Function	r_bin_filter_symbols	114:0:2931:3229							
ANR	3588918	FunctionDef	"r_bin_filter_symbols (RBinFile * bf , RList * list)"		3588917	0					
ANR	3588919	CompoundStatement		114:59:2990:3229	3588917	0					
ANR	3588920	IdentifierDeclStatement	HtPP * ht = ht_pp_new0 ( ) ;	115:1:2993:3017	3588917	0	True				
ANR	3588921	IdentifierDecl	* ht = ht_pp_new0 ( )		3588917	0					
ANR	3588922	IdentifierDeclType	HtPP *		3588917	0					
ANR	3588923	Identifier	ht		3588917	1					
ANR	3588924	AssignmentExpression	* ht = ht_pp_new0 ( )		3588917	2		=			
ANR	3588925	Identifier	ht		3588917	0					
ANR	3588926	CallExpression	ht_pp_new0 ( )		3588917	1					
ANR	3588927	Callee	ht_pp_new0		3588917	0					
ANR	3588928	Identifier	ht_pp_new0		3588917	0					
ANR	3588929	ArgumentList			3588917	1					
ANR	3588930	IfStatement	if ( ! ht )		3588917	1					
ANR	3588931	Condition	! ht	116:5:3024:3026	3588917	0	True				
ANR	3588932	UnaryOperationExpression	! ht		3588917	0					
ANR	3588933	UnaryOperator	!		3588917	0					
ANR	3588934	Identifier	ht		3588917	1					
ANR	3588935	CompoundStatement		3:10:38:38	3588917	1					
ANR	3588936	ReturnStatement	return ;	117:2:3033:3039	3588917	0	True				
ANR	3588937	IdentifierDeclStatement	RListIter * iter ;	120:1:3046:3061	3588917	2	True				
ANR	3588938	IdentifierDecl	* iter		3588917	0					
ANR	3588939	IdentifierDeclType	RListIter *		3588917	0					
ANR	3588940	Identifier	iter		3588917	1					
ANR	3588941	IdentifierDeclStatement	RBinSymbol * sym ;	121:1:3064:3079	3588917	3	True				
ANR	3588942	IdentifierDecl	* sym		3588917	0					
ANR	3588943	IdentifierDeclType	RBinSymbol *		3588917	0					
ANR	3588944	Identifier	sym		3588917	1					
ANR	3588945	Statement	r_list_foreach	122:1:3082:3095	3588917	4	True				
ANR	3588946	Statement	(	122:16:3097:3097	3588917	5	True				
ANR	3588947	Statement	list	122:17:3098:3101	3588917	6	True				
ANR	3588948	Statement	","	122:21:3102:3102	3588917	7	True				
ANR	3588949	Statement	iter	122:23:3104:3107	3588917	8	True				
ANR	3588950	Statement	","	122:27:3108:3108	3588917	9	True				
ANR	3588951	Statement	sym	122:29:3110:3112	3588917	10	True				
ANR	3588952	Statement	)	122:32:3113:3113	3588917	11	True				
ANR	3588953	CompoundStatement		9:34:124:124	3588917	12					
ANR	3588954	IfStatement	if ( sym && sym -> name && * sym -> name )		3588917	0					
ANR	3588955	Condition	sym && sym -> name && * sym -> name	123:6:3123:3152	3588917	0	True				
ANR	3588956	AndExpression	sym && sym -> name && * sym -> name		3588917	0		&&			
ANR	3588957	Identifier	sym		3588917	0					
ANR	3588958	AndExpression	sym -> name && * sym -> name		3588917	1		&&			
ANR	3588959	PtrMemberAccess	sym -> name		3588917	0					
ANR	3588960	Identifier	sym		3588917	0					
ANR	3588961	Identifier	name		3588917	1					
ANR	3588962	UnaryOperationExpression	* sym -> name		3588917	1					
ANR	3588963	UnaryOperator	*		3588917	0					
ANR	3588964	PtrMemberAccess	sym -> name		3588917	1					
ANR	3588965	Identifier	sym		3588917	0					
ANR	3588966	Identifier	name		3588917	1					
ANR	3588967	CompoundStatement		10:38:164:164	3588917	1					
ANR	3588968	ExpressionStatement	"r_bin_filter_sym ( bf , ht , sym -> vaddr , sym )"	124:3:3160:3202	3588917	0	True				
ANR	3588969	CallExpression	"r_bin_filter_sym ( bf , ht , sym -> vaddr , sym )"		3588917	0					
ANR	3588970	Callee	r_bin_filter_sym		3588917	0					
ANR	3588971	Identifier	r_bin_filter_sym		3588917	0					
ANR	3588972	ArgumentList	bf		3588917	1					
ANR	3588973	Argument	bf		3588917	0					
ANR	3588974	Identifier	bf		3588917	0					
ANR	3588975	Argument	ht		3588917	1					
ANR	3588976	Identifier	ht		3588917	0					
ANR	3588977	Argument	sym -> vaddr		3588917	2					
ANR	3588978	PtrMemberAccess	sym -> vaddr		3588917	0					
ANR	3588979	Identifier	sym		3588917	0					
ANR	3588980	Identifier	vaddr		3588917	1					
ANR	3588981	Argument	sym		3588917	3					
ANR	3588982	Identifier	sym		3588917	0					
ANR	3588983	ExpressionStatement	ht_pp_free ( ht )	127:1:3212:3227	3588917	13	True				
ANR	3588984	CallExpression	ht_pp_free ( ht )		3588917	0					
ANR	3588985	Callee	ht_pp_free		3588917	0					
ANR	3588986	Identifier	ht_pp_free		3588917	0					
ANR	3588987	ArgumentList	ht		3588917	1					
ANR	3588988	Argument	ht		3588917	0					
ANR	3588989	Identifier	ht		3588917	0					
ANR	3588990	ReturnType	R_API void		3588917	1					
ANR	3588991	Identifier	r_bin_filter_symbols		3588917	2					
ANR	3588992	ParameterList	"RBinFile * bf , RList * list"		3588917	3					
ANR	3588993	Parameter	RBinFile * bf	114:32:2963:2974	3588917	0	True				
ANR	3588994	ParameterType	RBinFile *		3588917	0					
ANR	3588995	Identifier	bf		3588917	1					
ANR	3588996	Parameter	RList * list	114:46:2977:2987	3588917	1	True				
ANR	3588997	ParameterType	RList *		3588917	0					
ANR	3588998	Identifier	list		3588917	1					
ANR	3588999	CFGEntryNode	ENTRY		3588917		True				
ANR	3589000	CFGExitNode	EXIT		3588917		True				
ANR	3589001	Symbol	* sym -> name		3588917						
ANR	3589002	Symbol	* sym		3588917						
ANR	3589003	Symbol	ht_pp_new0		3588917						
ANR	3589004	Symbol	bf		3588917						
ANR	3589005	Symbol	sym		3588917						
ANR	3589006	Symbol	sym -> vaddr		3588917						
ANR	3589007	Symbol	sym -> name		3588917						
ANR	3589008	Symbol	iter		3588917						
ANR	3589009	Symbol	* * sym		3588917						
ANR	3589010	Symbol	list		3588917						
ANR	3589011	Symbol	ht		3588917						
ANR	3589012	Function	r_bin_filter_sections	130:0:3232:3506							
ANR	3589013	FunctionDef	"r_bin_filter_sections (RBinFile * bf , RList * list)"		3589012	0					
ANR	3589014	CompoundStatement		130:60:3292:3506	3589012	0					
ANR	3589015	IdentifierDeclStatement	RBinSection * sec ;	131:1:3295:3311	3589012	0	True				
ANR	3589016	IdentifierDecl	* sec		3589012	0					
ANR	3589017	IdentifierDeclType	RBinSection *		3589012	0					
ANR	3589018	Identifier	sec		3589012	1					
ANR	3589019	IdentifierDeclStatement	Sdb * db = sdb_new0 ( ) ;	132:1:3314:3335	3589012	1	True				
ANR	3589020	IdentifierDecl	* db = sdb_new0 ( )		3589012	0					
ANR	3589021	IdentifierDeclType	Sdb *		3589012	0					
ANR	3589022	Identifier	db		3589012	1					
ANR	3589023	AssignmentExpression	* db = sdb_new0 ( )		3589012	2		=			
ANR	3589024	Identifier	db		3589012	0					
ANR	3589025	CallExpression	sdb_new0 ( )		3589012	1					
ANR	3589026	Callee	sdb_new0		3589012	0					
ANR	3589027	Identifier	sdb_new0		3589012	0					
ANR	3589028	ArgumentList			3589012	1					
ANR	3589029	IdentifierDeclStatement	RListIter * iter ;	133:1:3338:3353	3589012	2	True				
ANR	3589030	IdentifierDecl	* iter		3589012	0					
ANR	3589031	IdentifierDeclType	RListIter *		3589012	0					
ANR	3589032	Identifier	iter		3589012	1					
ANR	3589033	Statement	r_list_foreach	134:1:3356:3369	3589012	3	True				
ANR	3589034	Statement	(	134:16:3371:3371	3589012	4	True				
ANR	3589035	Statement	list	134:17:3372:3375	3589012	5	True				
ANR	3589036	Statement	","	134:21:3376:3376	3589012	6	True				
ANR	3589037	Statement	iter	134:23:3378:3381	3589012	7	True				
ANR	3589038	Statement	","	134:27:3382:3382	3589012	8	True				
ANR	3589039	Statement	sec	134:29:3384:3386	3589012	9	True				
ANR	3589040	Statement	)	134:32:3387:3387	3589012	10	True				
ANR	3589041	CompoundStatement		6:2:100:159	3589012	11					
ANR	3589042	IdentifierDeclStatement	"char * p = r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name ) ;"	135:2:3393:3452	3589012	0	True				
ANR	3589043	IdentifierDecl	"* p = r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name )"		3589012	0					
ANR	3589044	IdentifierDeclType	char *		3589012	0					
ANR	3589045	Identifier	p		3589012	1					
ANR	3589046	AssignmentExpression	"* p = r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name )"		3589012	2		=			
ANR	3589047	Identifier	p		3589012	0					
ANR	3589048	CallExpression	"r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name )"		3589012	1					
ANR	3589049	Callee	r_bin_filter_name		3589012	0					
ANR	3589050	Identifier	r_bin_filter_name		3589012	0					
ANR	3589051	ArgumentList	bf		3589012	1					
ANR	3589052	Argument	bf		3589012	0					
ANR	3589053	Identifier	bf		3589012	0					
ANR	3589054	Argument	db		3589012	1					
ANR	3589055	Identifier	db		3589012	0					
ANR	3589056	Argument	sec -> vaddr		3589012	2					
ANR	3589057	PtrMemberAccess	sec -> vaddr		3589012	0					
ANR	3589058	Identifier	sec		3589012	0					
ANR	3589059	Identifier	vaddr		3589012	1					
ANR	3589060	Argument	sec -> name		3589012	3					
ANR	3589061	PtrMemberAccess	sec -> name		3589012	0					
ANR	3589062	Identifier	sec		3589012	0					
ANR	3589063	Identifier	name		3589012	1					
ANR	3589064	IfStatement	if ( p )		3589012	1					
ANR	3589065	Condition	p	136:6:3460:3460	3589012	0	True				
ANR	3589066	Identifier	p		3589012	0					
ANR	3589067	CompoundStatement		7:9:170:170	3589012	1					
ANR	3589068	ExpressionStatement	sec -> name = p	137:3:3468:3481	3589012	0	True				
ANR	3589069	AssignmentExpression	sec -> name = p		3589012	0		=			
ANR	3589070	PtrMemberAccess	sec -> name		3589012	0					
ANR	3589071	Identifier	sec		3589012	0					
ANR	3589072	Identifier	name		3589012	1					
ANR	3589073	Identifier	p		3589012	1					
ANR	3589074	ExpressionStatement	sdb_free ( db )	140:1:3491:3504	3589012	12	True				
ANR	3589075	CallExpression	sdb_free ( db )		3589012	0					
ANR	3589076	Callee	sdb_free		3589012	0					
ANR	3589077	Identifier	sdb_free		3589012	0					
ANR	3589078	ArgumentList	db		3589012	1					
ANR	3589079	Argument	db		3589012	0					
ANR	3589080	Identifier	db		3589012	0					
ANR	3589081	ReturnType	R_API void		3589012	1					
ANR	3589082	Identifier	r_bin_filter_sections		3589012	2					
ANR	3589083	ParameterList	"RBinFile * bf , RList * list"		3589012	3					
ANR	3589084	Parameter	RBinFile * bf	130:33:3265:3276	3589012	0	True				
ANR	3589085	ParameterType	RBinFile *		3589012	0					
ANR	3589086	Identifier	bf		3589012	1					
ANR	3589087	Parameter	RList * list	130:47:3279:3289	3589012	1	True				
ANR	3589088	ParameterType	RList *		3589012	0					
ANR	3589089	Identifier	list		3589012	1					
ANR	3589090	CFGEntryNode	ENTRY		3589012		True				
ANR	3589091	CFGExitNode	EXIT		3589012		True				
ANR	3589092	Symbol	sec		3589012						
ANR	3589093	Symbol	p		3589012						
ANR	3589094	Symbol	sdb_new0		3589012						
ANR	3589095	Symbol	bf		3589012						
ANR	3589096	Symbol	sec -> name		3589012						
ANR	3589097	Symbol	iter		3589012						
ANR	3589098	Symbol	r_bin_filter_name		3589012						
ANR	3589099	Symbol	* sec		3589012						
ANR	3589100	Symbol	list		3589012						
ANR	3589101	Symbol	sec -> vaddr		3589012						
ANR	3589102	Symbol	db		3589012						
ANR	3589103	Function	false_positive	143:0:3509:4245							
ANR	3589104	FunctionDef	false_positive (const char * str)		3589103	0					
ANR	3589105	CompoundStatement		143:44:3553:4245	3589103	0					
ANR	3589106	IdentifierDeclStatement	int i ;	144:1:3556:3561	3589103	0	True				
ANR	3589107	IdentifierDecl	i		3589103	0					
ANR	3589108	IdentifierDeclType	int		3589103	0					
ANR	3589109	Identifier	i		3589103	1					
ANR	3589110	IdentifierDeclStatement	ut8 bo [ 0x100 ] ;	145:1:3564:3577	3589103	1	True				
ANR	3589111	IdentifierDecl	bo [ 0x100 ]		3589103	0					
ANR	3589112	IdentifierDeclType	ut8 [ 0x100 ]		3589103	0					
ANR	3589113	Identifier	bo		3589103	1					
ANR	3589114	PrimaryExpression	0x100		3589103	2					
ANR	3589115	IdentifierDeclStatement	int up = 0 ;	146:1:3580:3590	3589103	2	True				
ANR	3589116	IdentifierDecl	up = 0		3589103	0					
ANR	3589117	IdentifierDeclType	int		3589103	0					
ANR	3589118	Identifier	up		3589103	1					
ANR	3589119	AssignmentExpression	up = 0		3589103	2		=			
ANR	3589120	Identifier	up		3589103	0					
ANR	3589121	PrimaryExpression	0		3589103	1					
ANR	3589122	IdentifierDeclStatement	int lo = 0 ;	147:1:3593:3603	3589103	3	True				
ANR	3589123	IdentifierDecl	lo = 0		3589103	0					
ANR	3589124	IdentifierDeclType	int		3589103	0					
ANR	3589125	Identifier	lo		3589103	1					
ANR	3589126	AssignmentExpression	lo = 0		3589103	2		=			
ANR	3589127	Identifier	lo		3589103	0					
ANR	3589128	PrimaryExpression	0		3589103	1					
ANR	3589129	IdentifierDeclStatement	int ot = 0 ;	148:1:3606:3616	3589103	4	True				
ANR	3589130	IdentifierDecl	ot = 0		3589103	0					
ANR	3589131	IdentifierDeclType	int		3589103	0					
ANR	3589132	Identifier	ot		3589103	1					
ANR	3589133	AssignmentExpression	ot = 0		3589103	2		=			
ANR	3589134	Identifier	ot		3589103	0					
ANR	3589135	PrimaryExpression	0		3589103	1					
ANR	3589136	IdentifierDeclStatement	int di = 0 ;	149:1:3619:3629	3589103	5	True				
ANR	3589137	IdentifierDecl	di = 0		3589103	0					
ANR	3589138	IdentifierDeclType	int		3589103	0					
ANR	3589139	Identifier	di		3589103	1					
ANR	3589140	AssignmentExpression	di = 0		3589103	2		=			
ANR	3589141	Identifier	di		3589103	0					
ANR	3589142	PrimaryExpression	0		3589103	1					
ANR	3589143	IdentifierDeclStatement	int ln = 0 ;	150:1:3632:3642	3589103	6	True				
ANR	3589144	IdentifierDecl	ln = 0		3589103	0					
ANR	3589145	IdentifierDeclType	int		3589103	0					
ANR	3589146	Identifier	ln		3589103	1					
ANR	3589147	AssignmentExpression	ln = 0		3589103	2		=			
ANR	3589148	Identifier	ln		3589103	0					
ANR	3589149	PrimaryExpression	0		3589103	1					
ANR	3589150	IdentifierDeclStatement	int sp = 0 ;	151:1:3645:3655	3589103	7	True				
ANR	3589151	IdentifierDecl	sp = 0		3589103	0					
ANR	3589152	IdentifierDeclType	int		3589103	0					
ANR	3589153	Identifier	sp		3589103	1					
ANR	3589154	AssignmentExpression	sp = 0		3589103	2		=			
ANR	3589155	Identifier	sp		3589103	0					
ANR	3589156	PrimaryExpression	0		3589103	1					
ANR	3589157	IdentifierDeclStatement	int nm = 0 ;	152:1:3658:3668	3589103	8	True				
ANR	3589158	IdentifierDecl	nm = 0		3589103	0					
ANR	3589159	IdentifierDeclType	int		3589103	0					
ANR	3589160	Identifier	nm		3589103	1					
ANR	3589161	AssignmentExpression	nm = 0		3589103	2		=			
ANR	3589162	Identifier	nm		3589103	0					
ANR	3589163	PrimaryExpression	0		3589103	1					
ANR	3589164	ForStatement	for ( i = 0 ; i < 0x100 ; i ++ )		3589103	9					
ANR	3589165	ForInit	i = 0 ;	153:6:3676:3681	3589103	0	True				
ANR	3589166	AssignmentExpression	i = 0		3589103	0		=			
ANR	3589167	Identifier	i		3589103	0					
ANR	3589168	PrimaryExpression	0		3589103	1					
ANR	3589169	Condition	i < 0x100	153:13:3683:3691	3589103	1	True				
ANR	3589170	RelationalExpression	i < 0x100		3589103	0		<			
ANR	3589171	Identifier	i		3589103	0					
ANR	3589172	PrimaryExpression	0x100		3589103	1					
ANR	3589173	PostIncDecOperationExpression	i ++	153:24:3694:3696	3589103	2	True				
ANR	3589174	Identifier	i		3589103	0					
ANR	3589175	IncDec	++		3589103	1					
ANR	3589176	CompoundStatement		11:29:145:145	3589103	3					
ANR	3589177	ExpressionStatement	bo [ i ] = 0	154:2:3703:3712	3589103	0	True				
ANR	3589178	AssignmentExpression	bo [ i ] = 0		3589103	0		=			
ANR	3589179	ArrayIndexing	bo [ i ]		3589103	0					
ANR	3589180	Identifier	bo		3589103	0					
ANR	3589181	Identifier	i		3589103	1					
ANR	3589182	PrimaryExpression	0		3589103	1					
ANR	3589183	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		3589103	10					
ANR	3589184	ForInit	i = 0 ;	156:6:3723:3728	3589103	0	True				
ANR	3589185	AssignmentExpression	i = 0		3589103	0		=			
ANR	3589186	Identifier	i		3589103	0					
ANR	3589187	PrimaryExpression	0		3589103	1					
ANR	3589188	Condition	str [ i ]	156:13:3730:3735	3589103	1	True				
ANR	3589189	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589190	Identifier	str		3589103	0					
ANR	3589191	Identifier	i		3589103	1					
ANR	3589192	PostIncDecOperationExpression	i ++	156:21:3738:3740	3589103	2	True				
ANR	3589193	Identifier	i		3589103	0					
ANR	3589194	IncDec	++		3589103	1					
ANR	3589195	CompoundStatement		14:26:189:189	3589103	3					
ANR	3589196	IfStatement	if ( IS_DIGIT ( str [ i ] ) )		3589103	0					
ANR	3589197	Condition	IS_DIGIT ( str [ i ] )	157:6:3751:3767	3589103	0	True				
ANR	3589198	CallExpression	IS_DIGIT ( str [ i ] )		3589103	0					
ANR	3589199	Callee	IS_DIGIT		3589103	0					
ANR	3589200	Identifier	IS_DIGIT		3589103	0					
ANR	3589201	ArgumentList	str [ i ]		3589103	1					
ANR	3589202	Argument	str [ i ]		3589103	0					
ANR	3589203	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589204	Identifier	str		3589103	0					
ANR	3589205	Identifier	i		3589103	1					
ANR	3589206	CompoundStatement		15:25:216:216	3589103	1					
ANR	3589207	ExpressionStatement	nm ++	158:3:3775:3779	3589103	0	True				
ANR	3589208	PostIncDecOperationExpression	nm ++		3589103	0					
ANR	3589209	Identifier	nm		3589103	0					
ANR	3589210	IncDec	++		3589103	1					
ANR	3589211	ElseStatement	else		3589103	0					
ANR	3589212	IfStatement	if ( str [ i ] >= 'a' && str [ i ] <= 'z' )		3589103	0					
ANR	3589213	Condition	str [ i ] >= 'a' && str [ i ] <= 'z'	159:13:3794:3819	3589103	0	True				
ANR	3589214	AndExpression	str [ i ] >= 'a' && str [ i ] <= 'z'		3589103	0		&&			
ANR	3589215	RelationalExpression	str [ i ] >= 'a'		3589103	0		>=			
ANR	3589216	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589217	Identifier	str		3589103	0					
ANR	3589218	Identifier	i		3589103	1					
ANR	3589219	PrimaryExpression	'a'		3589103	1					
ANR	3589220	RelationalExpression	str [ i ] <= 'z'		3589103	1		<=			
ANR	3589221	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589222	Identifier	str		3589103	0					
ANR	3589223	Identifier	i		3589103	1					
ANR	3589224	PrimaryExpression	'z'		3589103	1					
ANR	3589225	CompoundStatement		17:41:268:268	3589103	1					
ANR	3589226	ExpressionStatement	lo ++	160:3:3827:3831	3589103	0	True				
ANR	3589227	PostIncDecOperationExpression	lo ++		3589103	0					
ANR	3589228	Identifier	lo		3589103	0					
ANR	3589229	IncDec	++		3589103	1					
ANR	3589230	ElseStatement	else		3589103	0					
ANR	3589231	IfStatement	if ( str [ i ] >= 'A' && str [ i ] <= 'Z' )		3589103	0					
ANR	3589232	Condition	str [ i ] >= 'A' && str [ i ] <= 'Z'	161:13:3846:3871	3589103	0	True				
ANR	3589233	AndExpression	str [ i ] >= 'A' && str [ i ] <= 'Z'		3589103	0		&&			
ANR	3589234	RelationalExpression	str [ i ] >= 'A'		3589103	0		>=			
ANR	3589235	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589236	Identifier	str		3589103	0					
ANR	3589237	Identifier	i		3589103	1					
ANR	3589238	PrimaryExpression	'A'		3589103	1					
ANR	3589239	RelationalExpression	str [ i ] <= 'Z'		3589103	1		<=			
ANR	3589240	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589241	Identifier	str		3589103	0					
ANR	3589242	Identifier	i		3589103	1					
ANR	3589243	PrimaryExpression	'Z'		3589103	1					
ANR	3589244	CompoundStatement		19:41:320:320	3589103	1					
ANR	3589245	ExpressionStatement	up ++	162:3:3879:3883	3589103	0	True				
ANR	3589246	PostIncDecOperationExpression	up ++		3589103	0					
ANR	3589247	Identifier	up		3589103	0					
ANR	3589248	IncDec	++		3589103	1					
ANR	3589249	ElseStatement	else		3589103	0					
ANR	3589250	CompoundStatement		21:9:340:340	3589103	0					
ANR	3589251	ExpressionStatement	ot ++	164:3:3899:3903	3589103	0	True				
ANR	3589252	PostIncDecOperationExpression	ot ++		3589103	0					
ANR	3589253	Identifier	ot		3589103	0					
ANR	3589254	IncDec	++		3589103	1					
ANR	3589255	IfStatement	if ( str [ i ] == '\\\\' )		3589103	1					
ANR	3589256	Condition	str [ i ] == '\\\\'	166:6:3915:3926	3589103	0	True				
ANR	3589257	EqualityExpression	str [ i ] == '\\\\'		3589103	0		==			
ANR	3589258	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589259	Identifier	str		3589103	0					
ANR	3589260	Identifier	i		3589103	1					
ANR	3589261	PrimaryExpression	'\\\\'		3589103	1					
ANR	3589262	CompoundStatement		24:20:375:375	3589103	1					
ANR	3589263	ExpressionStatement	ot ++	167:3:3934:3938	3589103	0	True				
ANR	3589264	PostIncDecOperationExpression	ot ++		3589103	0					
ANR	3589265	Identifier	ot		3589103	0					
ANR	3589266	IncDec	++		3589103	1					
ANR	3589267	IfStatement	if ( str [ i ] == ' ' )		3589103	2					
ANR	3589268	Condition	str [ i ] == ' '	169:6:3950:3960	3589103	0	True				
ANR	3589269	EqualityExpression	str [ i ] == ' '		3589103	0		==			
ANR	3589270	ArrayIndexing	str [ i ]		3589103	0					
ANR	3589271	Identifier	str		3589103	0					
ANR	3589272	Identifier	i		3589103	1					
ANR	3589273	PrimaryExpression	' '		3589103	1					
ANR	3589274	CompoundStatement		27:19:409:409	3589103	1					
ANR	3589275	ExpressionStatement	sp ++	170:3:3968:3972	3589103	0	True				
ANR	3589276	PostIncDecOperationExpression	sp ++		3589103	0					
ANR	3589277	Identifier	sp		3589103	0					
ANR	3589278	IncDec	++		3589103	1					
ANR	3589279	ExpressionStatement	bo [ ( ut8 ) str [ i ] ] = 1	172:2:3980:3999	3589103	3	True				
ANR	3589280	AssignmentExpression	bo [ ( ut8 ) str [ i ] ] = 1		3589103	0		=			
ANR	3589281	ArrayIndexing	bo [ ( ut8 ) str [ i ] ]		3589103	0					
ANR	3589282	Identifier	bo		3589103	0					
ANR	3589283	CastExpression	( ut8 ) str [ i ]		3589103	1					
ANR	3589284	CastTarget	ut8		3589103	0					
ANR	3589285	ArrayIndexing	str [ i ]		3589103	1					
ANR	3589286	Identifier	str		3589103	0					
ANR	3589287	Identifier	i		3589103	1					
ANR	3589288	PrimaryExpression	1		3589103	1					
ANR	3589289	ExpressionStatement	ln ++	173:2:4003:4007	3589103	4	True				
ANR	3589290	PostIncDecOperationExpression	ln ++		3589103	0					
ANR	3589291	Identifier	ln		3589103	0					
ANR	3589292	IncDec	++		3589103	1					
ANR	3589293	ForStatement	for ( i = 0 ; i < 0x100 ; i ++ )		3589103	11					
ANR	3589294	ForInit	i = 0 ;	175:6:4018:4023	3589103	0	True				
ANR	3589295	AssignmentExpression	i = 0		3589103	0		=			
ANR	3589296	Identifier	i		3589103	0					
ANR	3589297	PrimaryExpression	0		3589103	1					
ANR	3589298	Condition	i < 0x100	175:13:4025:4031	3589103	1	True				
ANR	3589299	RelationalExpression	i < 0x100		3589103	0		<			
ANR	3589300	Identifier	i		3589103	0					
ANR	3589301	PrimaryExpression	0x100		3589103	1					
ANR	3589302	PostIncDecOperationExpression	i ++	175:22:4034:4036	3589103	2	True				
ANR	3589303	Identifier	i		3589103	0					
ANR	3589304	IncDec	++		3589103	1					
ANR	3589305	CompoundStatement		33:27:485:485	3589103	3					
ANR	3589306	IfStatement	if ( bo [ i ] )		3589103	0					
ANR	3589307	Condition	bo [ i ]	176:6:4047:4051	3589103	0	True				
ANR	3589308	ArrayIndexing	bo [ i ]		3589103	0					
ANR	3589309	Identifier	bo		3589103	0					
ANR	3589310	Identifier	i		3589103	1					
ANR	3589311	CompoundStatement		34:13:500:500	3589103	1					
ANR	3589312	ExpressionStatement	di ++	177:3:4059:4063	3589103	0	True				
ANR	3589313	PostIncDecOperationExpression	di ++		3589103	0					
ANR	3589314	Identifier	di		3589103	0					
ANR	3589315	IncDec	++		3589103	1					
ANR	3589316	IfStatement	if ( ln > 2 && str [ 0 ] != '_' )		3589103	12					
ANR	3589317	Condition	ln > 2 && str [ 0 ] != '_'	180:5:4077:4099	3589103	0	True				
ANR	3589318	AndExpression	ln > 2 && str [ 0 ] != '_'		3589103	0		&&			
ANR	3589319	RelationalExpression	ln > 2		3589103	0		>			
ANR	3589320	Identifier	ln		3589103	0					
ANR	3589321	PrimaryExpression	2		3589103	1					
ANR	3589322	EqualityExpression	str [ 0 ] != '_'		3589103	1		!=			
ANR	3589323	ArrayIndexing	str [ 0 ]		3589103	0					
ANR	3589324	Identifier	str		3589103	0					
ANR	3589325	PrimaryExpression	0		3589103	1					
ANR	3589326	PrimaryExpression	'_'		3589103	1					
ANR	3589327	CompoundStatement		38:30:548:548	3589103	1					
ANR	3589328	IfStatement	if ( ln < 10 )		3589103	0					
ANR	3589329	Condition	ln < 10	181:6:4110:4116	3589103	0	True				
ANR	3589330	RelationalExpression	ln < 10		3589103	0		<			
ANR	3589331	Identifier	ln		3589103	0					
ANR	3589332	PrimaryExpression	10		3589103	1					
ANR	3589333	CompoundStatement		39:15:565:565	3589103	1					
ANR	3589334	ReturnStatement	return true ;	182:3:4124:4135	3589103	0	True				
ANR	3589335	Identifier	true		3589103	0					
ANR	3589336	IfStatement	if ( ot >= ( nm + up + lo ) )		3589103	1					
ANR	3589337	Condition	ot >= ( nm + up + lo )	184:6:4147:4166	3589103	0	True				
ANR	3589338	RelationalExpression	ot >= ( nm + up + lo )		3589103	0		>=			
ANR	3589339	Identifier	ot		3589103	0					
ANR	3589340	AdditiveExpression	nm + up + lo		3589103	1		+			
ANR	3589341	Identifier	nm		3589103	0					
ANR	3589342	AdditiveExpression	up + lo		3589103	1		+			
ANR	3589343	Identifier	up		3589103	0					
ANR	3589344	Identifier	lo		3589103	1					
ANR	3589345	CompoundStatement		42:28:615:615	3589103	1					
ANR	3589346	ReturnStatement	return true ;	185:3:4174:4185	3589103	0	True				
ANR	3589347	Identifier	true		3589103	0					
ANR	3589348	IfStatement	if ( lo < 3 )		3589103	2					
ANR	3589349	Condition	lo < 3	187:6:4197:4202	3589103	0	True				
ANR	3589350	RelationalExpression	lo < 3		3589103	0		<			
ANR	3589351	Identifier	lo		3589103	0					
ANR	3589352	PrimaryExpression	3		3589103	1					
ANR	3589353	CompoundStatement		45:14:651:651	3589103	1					
ANR	3589354	ReturnStatement	return true ;	188:3:4210:4221	3589103	0	True				
ANR	3589355	Identifier	true		3589103	0					
ANR	3589356	ReturnStatement	return false ;	191:1:4231:4243	3589103	13	True				
ANR	3589357	Identifier	false		3589103	0					
ANR	3589358	ReturnType	static bool		3589103	1					
ANR	3589359	Identifier	false_positive		3589103	2					
ANR	3589360	ParameterList	const char * str		3589103	3					
ANR	3589361	Parameter	const char * str	143:27:3536:3550	3589103	0	True				
ANR	3589362	ParameterType	const char *		3589103	0					
ANR	3589363	Identifier	str		3589103	1					
ANR	3589364	CFGEntryNode	ENTRY		3589103		True				
ANR	3589365	CFGExitNode	EXIT		3589103		True				
ANR	3589366	Symbol	ln		3589103						
ANR	3589367	Symbol	* * i		3589103						
ANR	3589368	Symbol	lo		3589103						
ANR	3589369	Symbol	ot		3589103						
ANR	3589370	Symbol	di		3589103						
ANR	3589371	Symbol	* * str		3589103						
ANR	3589372	Symbol	false		3589103						
ANR	3589373	Symbol	i		3589103						
ANR	3589374	Symbol	bo		3589103						
ANR	3589375	Symbol	IS_DIGIT		3589103						
ANR	3589376	Symbol	str		3589103						
ANR	3589377	Symbol	* bo		3589103						
ANR	3589378	Symbol	* i		3589103						
ANR	3589379	Symbol	true		3589103						
ANR	3589380	Symbol	up		3589103						
ANR	3589381	Symbol	* str		3589103						
ANR	3589382	Symbol	sp		3589103						
ANR	3589383	Symbol	nm		3589103						
ANR	3589384	Function	r_bin_strpurge	194:0:4248:5308							
ANR	3589385	FunctionDef	"r_bin_strpurge (RBin * bin , const char * str , ut64 refaddr)"		3589384	0					
ANR	3589386	CompoundStatement		194:68:4316:5308	3589384	0					
ANR	3589387	IdentifierDeclStatement	bool purge = false ;	195:1:4319:4337	3589384	0	True				
ANR	3589388	IdentifierDecl	purge = false		3589384	0					
ANR	3589389	IdentifierDeclType	bool		3589384	0					
ANR	3589390	Identifier	purge		3589384	1					
ANR	3589391	AssignmentExpression	purge = false		3589384	2		=			
ANR	3589392	Identifier	false		3589384	0					
ANR	3589393	Identifier	false		3589384	1					
ANR	3589394	IfStatement	if ( bin -> strpurge )		3589384	1					
ANR	3589395	Condition	bin -> strpurge	196:5:4344:4356	3589384	0	True				
ANR	3589396	PtrMemberAccess	bin -> strpurge		3589384	0					
ANR	3589397	Identifier	bin		3589384	0					
ANR	3589398	Identifier	strpurge		3589384	1					
ANR	3589399	CompoundStatement		4:2:46:82	3589384	1					
ANR	3589400	IdentifierDeclStatement	char * addrs = strdup ( bin -> strpurge ) ;	197:2:4363:4399	3589384	0	True				
ANR	3589401	IdentifierDecl	* addrs = strdup ( bin -> strpurge )		3589384	0					
ANR	3589402	IdentifierDeclType	char *		3589384	0					
ANR	3589403	Identifier	addrs		3589384	1					
ANR	3589404	AssignmentExpression	* addrs = strdup ( bin -> strpurge )		3589384	2		=			
ANR	3589405	Identifier	addrs		3589384	0					
ANR	3589406	CallExpression	strdup ( bin -> strpurge )		3589384	1					
ANR	3589407	Callee	strdup		3589384	0					
ANR	3589408	Identifier	strdup		3589384	0					
ANR	3589409	ArgumentList	bin -> strpurge		3589384	1					
ANR	3589410	Argument	bin -> strpurge		3589384	0					
ANR	3589411	PtrMemberAccess	bin -> strpurge		3589384	0					
ANR	3589412	Identifier	bin		3589384	0					
ANR	3589413	Identifier	strpurge		3589384	1					
ANR	3589414	IfStatement	if ( addrs )		3589384	1					
ANR	3589415	Condition	addrs	198:6:4407:4411	3589384	0	True				
ANR	3589416	Identifier	addrs		3589384	0					
ANR	3589417	CompoundStatement		10:3:188:207	3589384	1					
ANR	3589418	IdentifierDeclStatement	"int splits = r_str_split ( addrs , ',' ) ;"	199:3:4419:4456	3589384	0	True				
ANR	3589419	IdentifierDecl	"splits = r_str_split ( addrs , ',' )"		3589384	0					
ANR	3589420	IdentifierDeclType	int		3589384	0					
ANR	3589421	Identifier	splits		3589384	1					
ANR	3589422	AssignmentExpression	"splits = r_str_split ( addrs , ',' )"		3589384	2		=			
ANR	3589423	Identifier	splits		3589384	0					
ANR	3589424	CallExpression	"r_str_split ( addrs , ',' )"		3589384	1					
ANR	3589425	Callee	r_str_split		3589384	0					
ANR	3589426	Identifier	r_str_split		3589384	0					
ANR	3589427	ArgumentList	addrs		3589384	1					
ANR	3589428	Argument	addrs		3589384	0					
ANR	3589429	Identifier	addrs		3589384	0					
ANR	3589430	Argument	"','"		3589384	1					
ANR	3589431	PrimaryExpression	"','"		3589384	0					
ANR	3589432	IdentifierDeclStatement	int i ;	200:3:4461:4466	3589384	1	True				
ANR	3589433	IdentifierDecl	i		3589384	0					
ANR	3589434	IdentifierDeclType	int		3589384	0					
ANR	3589435	Identifier	i		3589384	1					
ANR	3589436	IdentifierDeclStatement	char * ptr ;	201:3:4471:4480	3589384	2	True				
ANR	3589437	IdentifierDecl	* ptr		3589384	0					
ANR	3589438	IdentifierDeclType	char *		3589384	0					
ANR	3589439	Identifier	ptr		3589384	1					
ANR	3589440	IdentifierDeclStatement	char * range_sep ;	202:3:4485:4500	3589384	3	True				
ANR	3589441	IdentifierDecl	* range_sep		3589384	0					
ANR	3589442	IdentifierDeclType	char *		3589384	0					
ANR	3589443	Identifier	range_sep		3589384	1					
ANR	3589444	IdentifierDeclStatement	"ut64 addr , from , to ;"	203:3:4505:4524	3589384	4	True				
ANR	3589445	IdentifierDecl	addr		3589384	0					
ANR	3589446	IdentifierDeclType	ut64		3589384	0					
ANR	3589447	Identifier	addr		3589384	1					
ANR	3589448	IdentifierDecl	from		3589384	1					
ANR	3589449	IdentifierDeclType	ut64		3589384	0					
ANR	3589450	Identifier	from		3589384	1					
ANR	3589451	IdentifierDecl	to		3589384	2					
ANR	3589452	IdentifierDeclType	ut64		3589384	0					
ANR	3589453	Identifier	to		3589384	1					
ANR	3589454	ForStatement	"for ( i = 0 , ptr = addrs ; i < splits ; i ++ , ptr += strlen ( ptr ) + 1 )"		3589384	5					
ANR	3589455	ForInit	"i = 0 , ptr = addrs ;"	204:8:4534:4552	3589384	0	True				
ANR	3589456	Expression	"i = 0 , ptr = addrs"		3589384	0					
ANR	3589457	AssignmentExpression	i = 0		3589384	0		=			
ANR	3589458	Identifier	i		3589384	0					
ANR	3589459	PrimaryExpression	0		3589384	1					
ANR	3589460	AssignmentExpression	ptr = addrs		3589384	1		=			
ANR	3589461	Identifier	ptr		3589384	0					
ANR	3589462	Identifier	addrs		3589384	1					
ANR	3589463	Condition	i < splits	204:28:4554:4563	3589384	1	True				
ANR	3589464	RelationalExpression	i < splits		3589384	0		<			
ANR	3589465	Identifier	i		3589384	0					
ANR	3589466	Identifier	splits		3589384	1					
ANR	3589467	Expression	"i ++ , ptr += strlen ( ptr ) + 1"	204:40:4566:4593	3589384	2	True				
ANR	3589468	PostIncDecOperationExpression	i ++		3589384	0					
ANR	3589469	Identifier	i		3589384	0					
ANR	3589470	IncDec	++		3589384	1					
ANR	3589471	AssignmentExpression	ptr += strlen ( ptr ) + 1		3589384	1		+=			
ANR	3589472	Identifier	ptr		3589384	0					
ANR	3589473	AdditiveExpression	strlen ( ptr ) + 1		3589384	1		+			
ANR	3589474	CallExpression	strlen ( ptr )		3589384	0					
ANR	3589475	Callee	strlen		3589384	0					
ANR	3589476	Identifier	strlen		3589384	0					
ANR	3589477	ArgumentList	ptr		3589384	1					
ANR	3589478	Argument	ptr		3589384	0					
ANR	3589479	Identifier	ptr		3589384	0					
ANR	3589480	PrimaryExpression	1		3589384	1					
ANR	3589481	CompoundStatement		16:4:382:399	3589384	3					
ANR	3589482	IfStatement	"if ( ! strcmp ( ptr , ""true"" ) && false_positive ( str ) )"		3589384	0					
ANR	3589483	Condition	"! strcmp ( ptr , ""true"" ) && false_positive ( str )"	205:8:4606:4650	3589384	0	True				
ANR	3589484	AndExpression	"! strcmp ( ptr , ""true"" ) && false_positive ( str )"		3589384	0		&&			
ANR	3589485	UnaryOperationExpression	"! strcmp ( ptr , ""true"" )"		3589384	0					
ANR	3589486	UnaryOperator	!		3589384	0					
ANR	3589487	CallExpression	"strcmp ( ptr , ""true"" )"		3589384	1					
ANR	3589488	Callee	strcmp		3589384	0					
ANR	3589489	Identifier	strcmp		3589384	0					
ANR	3589490	ArgumentList	ptr		3589384	1					
ANR	3589491	Argument	ptr		3589384	0					
ANR	3589492	Identifier	ptr		3589384	0					
ANR	3589493	Argument	"""true"""		3589384	1					
ANR	3589494	PrimaryExpression	"""true"""		3589384	0					
ANR	3589495	CallExpression	false_positive ( str )		3589384	1					
ANR	3589496	Callee	false_positive		3589384	0					
ANR	3589497	Identifier	false_positive		3589384	0					
ANR	3589498	ArgumentList	str		3589384	1					
ANR	3589499	Argument	str		3589384	0					
ANR	3589500	Identifier	str		3589384	0					
ANR	3589501	CompoundStatement		12:55:336:336	3589384	1					
ANR	3589502	ExpressionStatement	purge = true	206:5:4660:4672	3589384	0	True				
ANR	3589503	AssignmentExpression	purge = true		3589384	0		=			
ANR	3589504	Identifier	purge		3589384	0					
ANR	3589505	Identifier	true		3589384	1					
ANR	3589506	ContinueStatement	continue ;	207:5:4679:4687	3589384	1	True				
ANR	3589507	IdentifierDeclStatement	bool bang = false ;	209:4:4699:4716	3589384	1	True				
ANR	3589508	IdentifierDecl	bang = false		3589384	0					
ANR	3589509	IdentifierDeclType	bool		3589384	0					
ANR	3589510	Identifier	bang		3589384	1					
ANR	3589511	AssignmentExpression	bang = false		3589384	2		=			
ANR	3589512	Identifier	false		3589384	0					
ANR	3589513	Identifier	false		3589384	1					
ANR	3589514	IfStatement	if ( * ptr == '!' )		3589384	2					
ANR	3589515	Condition	* ptr == '!'	210:8:4726:4736	3589384	0	True				
ANR	3589516	EqualityExpression	* ptr == '!'		3589384	0		==			
ANR	3589517	UnaryOperationExpression	* ptr		3589384	0					
ANR	3589518	UnaryOperator	*		3589384	0					
ANR	3589519	Identifier	ptr		3589384	1					
ANR	3589520	PrimaryExpression	'!'		3589384	1					
ANR	3589521	CompoundStatement		17:21:422:422	3589384	1					
ANR	3589522	ExpressionStatement	bang = true	211:5:4746:4757	3589384	0	True				
ANR	3589523	AssignmentExpression	bang = true		3589384	0		=			
ANR	3589524	Identifier	bang		3589384	0					
ANR	3589525	Identifier	true		3589384	1					
ANR	3589526	ExpressionStatement	ptr ++	212:5:4764:4769	3589384	1	True				
ANR	3589527	PostIncDecOperationExpression	ptr ++		3589384	0					
ANR	3589528	Identifier	ptr		3589384	0					
ANR	3589529	IncDec	++		3589384	1					
ANR	3589530	IfStatement	"if ( ! strcmp ( ptr , ""all"" ) )"		3589384	3					
ANR	3589531	Condition	"! strcmp ( ptr , ""all"" )"	214:8:4785:4804	3589384	0	True				
ANR	3589532	UnaryOperationExpression	"! strcmp ( ptr , ""all"" )"		3589384	0					
ANR	3589533	UnaryOperator	!		3589384	0					
ANR	3589534	CallExpression	"strcmp ( ptr , ""all"" )"		3589384	1					
ANR	3589535	Callee	strcmp		3589384	0					
ANR	3589536	Identifier	strcmp		3589384	0					
ANR	3589537	ArgumentList	ptr		3589384	1					
ANR	3589538	Argument	ptr		3589384	0					
ANR	3589539	Identifier	ptr		3589384	0					
ANR	3589540	Argument	"""all"""		3589384	1					
ANR	3589541	PrimaryExpression	"""all"""		3589384	0					
ANR	3589542	CompoundStatement		21:30:490:490	3589384	1					
ANR	3589543	ExpressionStatement	purge = ! bang	215:5:4814:4827	3589384	0	True				
ANR	3589544	AssignmentExpression	purge = ! bang		3589384	0		=			
ANR	3589545	Identifier	purge		3589384	0					
ANR	3589546	UnaryOperationExpression	! bang		3589384	1					
ANR	3589547	UnaryOperator	!		3589384	0					
ANR	3589548	Identifier	bang		3589384	1					
ANR	3589549	ContinueStatement	continue ;	216:5:4834:4842	3589384	1	True				
ANR	3589550	ExpressionStatement	"range_sep = strchr ( ptr , '-' )"	218:4:4854:4883	3589384	4	True				
ANR	3589551	AssignmentExpression	"range_sep = strchr ( ptr , '-' )"		3589384	0		=			
ANR	3589552	Identifier	range_sep		3589384	0					
ANR	3589553	CallExpression	"strchr ( ptr , '-' )"		3589384	1					
ANR	3589554	Callee	strchr		3589384	0					
ANR	3589555	Identifier	strchr		3589384	0					
ANR	3589556	ArgumentList	ptr		3589384	1					
ANR	3589557	Argument	ptr		3589384	0					
ANR	3589558	Identifier	ptr		3589384	0					
ANR	3589559	Argument	'-'		3589384	1					
ANR	3589560	PrimaryExpression	'-'		3589384	0					
ANR	3589561	IfStatement	if ( range_sep )		3589384	5					
ANR	3589562	Condition	range_sep	219:8:4893:4901	3589384	0	True				
ANR	3589563	Identifier	range_sep		3589384	0					
ANR	3589564	CompoundStatement		26:19:587:587	3589384	1					
ANR	3589565	ExpressionStatement	* range_sep = 0	220:5:4911:4925	3589384	0	True				
ANR	3589566	AssignmentExpression	* range_sep = 0		3589384	0		=			
ANR	3589567	UnaryOperationExpression	* range_sep		3589384	0					
ANR	3589568	UnaryOperator	*		3589384	0					
ANR	3589569	Identifier	range_sep		3589384	1					
ANR	3589570	PrimaryExpression	0		3589384	1					
ANR	3589571	ExpressionStatement	"from = r_num_get ( NULL , ptr )"	221:5:4932:4960	3589384	1	True				
ANR	3589572	AssignmentExpression	"from = r_num_get ( NULL , ptr )"		3589384	0		=			
ANR	3589573	Identifier	from		3589384	0					
ANR	3589574	CallExpression	"r_num_get ( NULL , ptr )"		3589384	1					
ANR	3589575	Callee	r_num_get		3589384	0					
ANR	3589576	Identifier	r_num_get		3589384	0					
ANR	3589577	ArgumentList	NULL		3589384	1					
ANR	3589578	Argument	NULL		3589384	0					
ANR	3589579	Identifier	NULL		3589384	0					
ANR	3589580	Argument	ptr		3589384	1					
ANR	3589581	Identifier	ptr		3589384	0					
ANR	3589582	ExpressionStatement	ptr = range_sep + 1	222:5:4967:4986	3589384	2	True				
ANR	3589583	AssignmentExpression	ptr = range_sep + 1		3589384	0		=			
ANR	3589584	Identifier	ptr		3589384	0					
ANR	3589585	AdditiveExpression	range_sep + 1		3589384	1		+			
ANR	3589586	Identifier	range_sep		3589384	0					
ANR	3589587	PrimaryExpression	1		3589384	1					
ANR	3589588	ExpressionStatement	"to = r_num_get ( NULL , ptr )"	223:5:4993:5019	3589384	3	True				
ANR	3589589	AssignmentExpression	"to = r_num_get ( NULL , ptr )"		3589384	0		=			
ANR	3589590	Identifier	to		3589384	0					
ANR	3589591	CallExpression	"r_num_get ( NULL , ptr )"		3589384	1					
ANR	3589592	Callee	r_num_get		3589384	0					
ANR	3589593	Identifier	r_num_get		3589384	0					
ANR	3589594	ArgumentList	NULL		3589384	1					
ANR	3589595	Argument	NULL		3589384	0					
ANR	3589596	Identifier	NULL		3589384	0					
ANR	3589597	Argument	ptr		3589384	1					
ANR	3589598	Identifier	ptr		3589384	0					
ANR	3589599	IfStatement	if ( refaddr >= from && refaddr <= to )		3589384	4					
ANR	3589600	Condition	refaddr >= from && refaddr <= to	224:9:5030:5061	3589384	0	True				
ANR	3589601	AndExpression	refaddr >= from && refaddr <= to		3589384	0		&&			
ANR	3589602	RelationalExpression	refaddr >= from		3589384	0		>=			
ANR	3589603	Identifier	refaddr		3589384	0					
ANR	3589604	Identifier	from		3589384	1					
ANR	3589605	RelationalExpression	refaddr <= to		3589384	1		<=			
ANR	3589606	Identifier	refaddr		3589384	0					
ANR	3589607	Identifier	to		3589384	1					
ANR	3589608	CompoundStatement		31:43:747:747	3589384	1					
ANR	3589609	ExpressionStatement	purge = ! bang	225:6:5072:5085	3589384	0	True				
ANR	3589610	AssignmentExpression	purge = ! bang		3589384	0		=			
ANR	3589611	Identifier	purge		3589384	0					
ANR	3589612	UnaryOperationExpression	! bang		3589384	1					
ANR	3589613	UnaryOperator	!		3589384	0					
ANR	3589614	Identifier	bang		3589384	1					
ANR	3589615	ContinueStatement	continue ;	226:6:5093:5101	3589384	1	True				
ANR	3589616	ExpressionStatement	"addr = r_num_get ( NULL , ptr )"	229:4:5120:5148	3589384	6	True				
ANR	3589617	AssignmentExpression	"addr = r_num_get ( NULL , ptr )"		3589384	0		=			
ANR	3589618	Identifier	addr		3589384	0					
ANR	3589619	CallExpression	"r_num_get ( NULL , ptr )"		3589384	1					
ANR	3589620	Callee	r_num_get		3589384	0					
ANR	3589621	Identifier	r_num_get		3589384	0					
ANR	3589622	ArgumentList	NULL		3589384	1					
ANR	3589623	Argument	NULL		3589384	0					
ANR	3589624	Identifier	NULL		3589384	0					
ANR	3589625	Argument	ptr		3589384	1					
ANR	3589626	Identifier	ptr		3589384	0					
ANR	3589627	IfStatement	if ( addr != 0 || * ptr == '0' )		3589384	7					
ANR	3589628	Condition	addr != 0 || * ptr == '0'	230:8:5158:5181	3589384	0	True				
ANR	3589629	OrExpression	addr != 0 || * ptr == '0'		3589384	0		||			
ANR	3589630	EqualityExpression	addr != 0		3589384	0		!=			
ANR	3589631	Identifier	addr		3589384	0					
ANR	3589632	PrimaryExpression	0		3589384	1					
ANR	3589633	EqualityExpression	* ptr == '0'		3589384	1		==			
ANR	3589634	UnaryOperationExpression	* ptr		3589384	0					
ANR	3589635	UnaryOperator	*		3589384	0					
ANR	3589636	Identifier	ptr		3589384	1					
ANR	3589637	PrimaryExpression	'0'		3589384	1					
ANR	3589638	CompoundStatement		37:34:867:867	3589384	1					
ANR	3589639	IfStatement	if ( refaddr == addr )		3589384	0					
ANR	3589640	Condition	refaddr == addr	231:9:5195:5209	3589384	0	True				
ANR	3589641	EqualityExpression	refaddr == addr		3589384	0		==			
ANR	3589642	Identifier	refaddr		3589384	0					
ANR	3589643	Identifier	addr		3589384	1					
ANR	3589644	CompoundStatement		38:26:895:895	3589384	1					
ANR	3589645	ExpressionStatement	purge = ! bang	232:6:5220:5233	3589384	0	True				
ANR	3589646	AssignmentExpression	purge = ! bang		3589384	0		=			
ANR	3589647	Identifier	purge		3589384	0					
ANR	3589648	UnaryOperationExpression	! bang		3589384	1					
ANR	3589649	UnaryOperator	!		3589384	0					
ANR	3589650	Identifier	bang		3589384	1					
ANR	3589651	ContinueStatement	continue ;	233:6:5241:5249	3589384	1	True				
ANR	3589652	ExpressionStatement	free ( addrs )	237:3:5272:5284	3589384	6	True				
ANR	3589653	CallExpression	free ( addrs )		3589384	0					
ANR	3589654	Callee	free		3589384	0					
ANR	3589655	Identifier	free		3589384	0					
ANR	3589656	ArgumentList	addrs		3589384	1					
ANR	3589657	Argument	addrs		3589384	0					
ANR	3589658	Identifier	addrs		3589384	0					
ANR	3589659	ReturnStatement	return purge ;	240:1:5294:5306	3589384	2	True				
ANR	3589660	Identifier	purge		3589384	0					
ANR	3589661	ReturnType	R_API bool		3589384	1					
ANR	3589662	Identifier	r_bin_strpurge		3589384	2					
ANR	3589663	ParameterList	"RBin * bin , const char * str , ut64 refaddr"		3589384	3					
ANR	3589664	Parameter	RBin * bin	194:26:4274:4282	3589384	0	True				
ANR	3589665	ParameterType	RBin *		3589384	0					
ANR	3589666	Identifier	bin		3589384	1					
ANR	3589667	Parameter	const char * str	194:37:4285:4299	3589384	1	True				
ANR	3589668	ParameterType	const char *		3589384	0					
ANR	3589669	Identifier	str		3589384	1					
ANR	3589670	Parameter	ut64 refaddr	194:54:4302:4313	3589384	2	True				
ANR	3589671	ParameterType	ut64		3589384	0					
ANR	3589672	Identifier	refaddr		3589384	1					
ANR	3589673	CFGEntryNode	ENTRY		3589384		True				
ANR	3589674	CFGExitNode	EXIT		3589384		True				
ANR	3589675	Symbol	splits		3589384						
ANR	3589676	Symbol	bin		3589384						
ANR	3589677	Symbol	strchr		3589384						
ANR	3589678	Symbol	purge		3589384						
ANR	3589679	Symbol	* range_sep		3589384						
ANR	3589680	Symbol	* bin		3589384						
ANR	3589681	Symbol	strlen		3589384						
ANR	3589682	Symbol	bang		3589384						
ANR	3589683	Symbol	* ptr		3589384						
ANR	3589684	Symbol	from		3589384						
ANR	3589685	Symbol	r_num_get		3589384						
ANR	3589686	Symbol	addr		3589384						
ANR	3589687	Symbol	strcmp		3589384						
ANR	3589688	Symbol	NULL		3589384						
ANR	3589689	Symbol	range_sep		3589384						
ANR	3589690	Symbol	addrs		3589384						
ANR	3589691	Symbol	false		3589384						
ANR	3589692	Symbol	i		3589384						
ANR	3589693	Symbol	refaddr		3589384						
ANR	3589694	Symbol	ptr		3589384						
ANR	3589695	Symbol	str		3589384						
ANR	3589696	Symbol	r_str_split		3589384						
ANR	3589697	Symbol	bin -> strpurge		3589384						
ANR	3589698	Symbol	false_positive		3589384						
ANR	3589699	Symbol	true		3589384						
ANR	3589700	Symbol	strdup		3589384						
ANR	3589701	Symbol	to		3589384						
ANR	3589702	Function	bin_strfilter	243:0:5311:7297							
ANR	3589703	FunctionDef	"bin_strfilter (RBin * bin , const char * str)"		3589702	0					
ANR	3589704	CompoundStatement		243:54:5365:7297	3589702	0					
ANR	3589705	IdentifierDeclStatement	int i ;	244:1:5368:5373	3589702	0	True				
ANR	3589706	IdentifierDecl	i		3589702	0					
ANR	3589707	IdentifierDeclType	int		3589702	0					
ANR	3589708	Identifier	i		3589702	1					
ANR	3589709	SwitchStatement	switch ( bin -> strfilter )		3589702	1					
ANR	3589710	Condition	bin -> strfilter	245:9:5384:5397	3589702	0	True				
ANR	3589711	PtrMemberAccess	bin -> strfilter		3589702	0					
ANR	3589712	Identifier	bin		3589702	0					
ANR	3589713	Identifier	strfilter		3589702	1					
ANR	3589714	CompoundStatement		3:25:34:34	3589702	1					
ANR	3589715	Label	case 'U' :	246:1:5403:5411	3589702	0	True				
ANR	3589716	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		3589702	1					
ANR	3589717	ForInit	i = 0 ;	247:7:5446:5451	3589702	0	True				
ANR	3589718	AssignmentExpression	i = 0		3589702	0		=			
ANR	3589719	Identifier	i		3589702	0					
ANR	3589720	PrimaryExpression	0		3589702	1					
ANR	3589721	Condition	str [ i ]	247:14:5453:5458	3589702	1	True				
ANR	3589722	ArrayIndexing	str [ i ]		3589702	0					
ANR	3589723	Identifier	str		3589702	0					
ANR	3589724	Identifier	i		3589702	1					
ANR	3589725	PostIncDecOperationExpression	i ++	247:22:5461:5463	3589702	2	True				
ANR	3589726	Identifier	i		3589702	0					
ANR	3589727	IncDec	++		3589702	1					
ANR	3589728	CompoundStatement		6:3:105:121	3589702	3					
ANR	3589729	IdentifierDeclStatement	char ch = str [ i ] ;	248:3:5471:5487	3589702	0	True				
ANR	3589730	IdentifierDecl	ch = str [ i ]		3589702	0					
ANR	3589731	IdentifierDeclType	char		3589702	0					
ANR	3589732	Identifier	ch		3589702	1					
ANR	3589733	AssignmentExpression	ch = str [ i ]		3589702	2		=			
ANR	3589734	Identifier	ch		3589702	0					
ANR	3589735	ArrayIndexing	str [ i ]		3589702	1					
ANR	3589736	Identifier	str		3589702	0					
ANR	3589737	Identifier	i		3589702	1					
ANR	3589738	IfStatement	if ( ch == ' ' )		3589702	1					
ANR	3589739	Condition	ch == ' '	249:7:5496:5504	3589702	0	True				
ANR	3589740	EqualityExpression	ch == ' '		3589702	0		==			
ANR	3589741	Identifier	ch		3589702	0					
ANR	3589742	PrimaryExpression	' '		3589702	1					
ANR	3589743	CompoundStatement		7:18:141:141	3589702	1					
ANR	3589744	ContinueStatement	continue ;	250:4:5513:5521	3589702	0	True				
ANR	3589745	IfStatement	if ( ch < '@' || ch > 'Z' )		3589702	2					
ANR	3589746	Condition	ch < '@' || ch > 'Z'	252:7:5535:5553	3589702	0	True				
ANR	3589747	OrExpression	ch < '@' || ch > 'Z'		3589702	0		||			
ANR	3589748	RelationalExpression	ch < '@'		3589702	0		<			
ANR	3589749	Identifier	ch		3589702	0					
ANR	3589750	PrimaryExpression	'@'		3589702	1					
ANR	3589751	RelationalExpression	ch > 'Z'		3589702	1		>			
ANR	3589752	Identifier	ch		3589702	0					
ANR	3589753	PrimaryExpression	'Z'		3589702	1					
ANR	3589754	CompoundStatement		10:28:190:190	3589702	1					
ANR	3589755	ReturnStatement	return false ;	253:4:5562:5574	3589702	0	True				
ANR	3589756	Identifier	false		3589702	0					
ANR	3589757	IfStatement	if ( ch < 0 || ! IS_PRINTABLE ( ch ) )		3589702	3					
ANR	3589758	Condition	ch < 0 || ! IS_PRINTABLE ( ch )	255:7:5588:5615	3589702	0	True				
ANR	3589759	OrExpression	ch < 0 || ! IS_PRINTABLE ( ch )		3589702	0		||			
ANR	3589760	RelationalExpression	ch < 0		3589702	0		<			
ANR	3589761	Identifier	ch		3589702	0					
ANR	3589762	PrimaryExpression	0		3589702	1					
ANR	3589763	UnaryOperationExpression	! IS_PRINTABLE ( ch )		3589702	1					
ANR	3589764	UnaryOperator	!		3589702	0					
ANR	3589765	CallExpression	IS_PRINTABLE ( ch )		3589702	1					
ANR	3589766	Callee	IS_PRINTABLE		3589702	0					
ANR	3589767	Identifier	IS_PRINTABLE		3589702	0					
ANR	3589768	ArgumentList	ch		3589702	1					
ANR	3589769	Argument	ch		3589702	0					
ANR	3589770	Identifier	ch		3589702	0					
ANR	3589771	CompoundStatement		13:37:252:252	3589702	1					
ANR	3589772	ReturnStatement	return false ;	256:4:5624:5636	3589702	0	True				
ANR	3589773	Identifier	false		3589702	0					
ANR	3589774	IfStatement	if ( str [ 0 ] && str [ 1 ] )		3589702	2					
ANR	3589775	Condition	str [ 0 ] && str [ 1 ]	259:6:5653:5668	3589702	0	True				
ANR	3589776	AndExpression	str [ 0 ] && str [ 1 ]		3589702	0		&&			
ANR	3589777	ArrayIndexing	str [ 0 ]		3589702	0					
ANR	3589778	Identifier	str		3589702	0					
ANR	3589779	PrimaryExpression	0		3589702	1					
ANR	3589780	ArrayIndexing	str [ 1 ]		3589702	1					
ANR	3589781	Identifier	str		3589702	0					
ANR	3589782	PrimaryExpression	1		3589702	1					
ANR	3589783	CompoundStatement		17:24:305:305	3589702	1					
ANR	3589784	ForStatement	for ( i = 2 ; i < 6 && str [ i ] ; i ++ )		3589702	0					
ANR	3589785	ForInit	i = 2 ;	260:8:5681:5686	3589702	0	True				
ANR	3589786	AssignmentExpression	i = 2		3589702	0		=			
ANR	3589787	Identifier	i		3589702	0					
ANR	3589788	PrimaryExpression	2		3589702	1					
ANR	3589789	Condition	i < 6 && str [ i ]	260:15:5688:5700	3589702	1	True				
ANR	3589790	AndExpression	i < 6 && str [ i ]		3589702	0		&&			
ANR	3589791	RelationalExpression	i < 6		3589702	0		<			
ANR	3589792	Identifier	i		3589702	0					
ANR	3589793	PrimaryExpression	6		3589702	1					
ANR	3589794	ArrayIndexing	str [ i ]		3589702	1					
ANR	3589795	Identifier	str		3589702	0					
ANR	3589796	Identifier	i		3589702	1					
ANR	3589797	PostIncDecOperationExpression	i ++	260:30:5703:5705	3589702	2	True				
ANR	3589798	Identifier	i		3589702	0					
ANR	3589799	IncDec	++		3589702	1					
ANR	3589800	CompoundStatement		18:35:342:342	3589702	3					
ANR	3589801	IfStatement	if ( str [ i ] == str [ 0 ] )		3589702	0					
ANR	3589802	Condition	str [ i ] == str [ 0 ]	261:8:5718:5733	3589702	0	True				
ANR	3589803	EqualityExpression	str [ i ] == str [ 0 ]		3589702	0		==			
ANR	3589804	ArrayIndexing	str [ i ]		3589702	0					
ANR	3589805	Identifier	str		3589702	0					
ANR	3589806	Identifier	i		3589702	1					
ANR	3589807	ArrayIndexing	str [ 0 ]		3589702	1					
ANR	3589808	Identifier	str		3589702	0					
ANR	3589809	PrimaryExpression	0		3589702	1					
ANR	3589810	CompoundStatement		19:26:370:370	3589702	1					
ANR	3589811	ReturnStatement	return false ;	262:5:5743:5755	3589702	0	True				
ANR	3589812	Identifier	false		3589702	0					
ANR	3589813	IfStatement	if ( str [ i ] == str [ 1 ] )		3589702	1					
ANR	3589814	Condition	str [ i ] == str [ 1 ]	264:8:5771:5786	3589702	0	True				
ANR	3589815	EqualityExpression	str [ i ] == str [ 1 ]		3589702	0		==			
ANR	3589816	ArrayIndexing	str [ i ]		3589702	0					
ANR	3589817	Identifier	str		3589702	0					
ANR	3589818	Identifier	i		3589702	1					
ANR	3589819	ArrayIndexing	str [ 1 ]		3589702	1					
ANR	3589820	Identifier	str		3589702	0					
ANR	3589821	PrimaryExpression	1		3589702	1					
ANR	3589822	CompoundStatement		22:26:423:423	3589702	1					
ANR	3589823	ReturnStatement	return false ;	265:5:5796:5808	3589702	0	True				
ANR	3589824	Identifier	false		3589702	0					
ANR	3589825	IfStatement	if ( str [ 0 ] == str [ 2 ] )		3589702	3					
ANR	3589826	Condition	str [ 0 ] == str [ 2 ]	269:6:5831:5846	3589702	0	True				
ANR	3589827	EqualityExpression	str [ 0 ] == str [ 2 ]		3589702	0		==			
ANR	3589828	ArrayIndexing	str [ 0 ]		3589702	0					
ANR	3589829	Identifier	str		3589702	0					
ANR	3589830	PrimaryExpression	0		3589702	1					
ANR	3589831	ArrayIndexing	str [ 2 ]		3589702	1					
ANR	3589832	Identifier	str		3589702	0					
ANR	3589833	PrimaryExpression	2		3589702	1					
ANR	3589834	CompoundStatement		27:24:483:483	3589702	1					
ANR	3589835	ReturnStatement	return false ;	270:3:5854:5866	3589702	0	True				
ANR	3589836	Identifier	false		3589702	0					
ANR	3589837	BreakStatement	break ;	272:2:5896:5901	3589702	4	True				
ANR	3589838	Label	case 'a' :	273:1:5904:5912	3589702	5	True				
ANR	3589839	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		3589702	6					
ANR	3589840	ForInit	i = 0 ;	274:7:5956:5961	3589702	0	True				
ANR	3589841	AssignmentExpression	i = 0		3589702	0		=			
ANR	3589842	Identifier	i		3589702	0					
ANR	3589843	PrimaryExpression	0		3589702	1					
ANR	3589844	Condition	str [ i ]	274:14:5963:5968	3589702	1	True				
ANR	3589845	ArrayIndexing	str [ i ]		3589702	0					
ANR	3589846	Identifier	str		3589702	0					
ANR	3589847	Identifier	i		3589702	1					
ANR	3589848	PostIncDecOperationExpression	i ++	274:22:5971:5973	3589702	2	True				
ANR	3589849	Identifier	i		3589702	0					
ANR	3589850	IncDec	++		3589702	1					
ANR	3589851	CompoundStatement		33:3:615:631	3589702	3					
ANR	3589852	IdentifierDeclStatement	char ch = str [ i ] ;	275:3:5981:5997	3589702	0	True				
ANR	3589853	IdentifierDecl	ch = str [ i ]		3589702	0					
ANR	3589854	IdentifierDeclType	char		3589702	0					
ANR	3589855	Identifier	ch		3589702	1					
ANR	3589856	AssignmentExpression	ch = str [ i ]		3589702	2		=			
ANR	3589857	Identifier	ch		3589702	0					
ANR	3589858	ArrayIndexing	str [ i ]		3589702	1					
ANR	3589859	Identifier	str		3589702	0					
ANR	3589860	Identifier	i		3589702	1					
ANR	3589861	IfStatement	if ( ch < 1 || ! IS_PRINTABLE ( ch ) )		3589702	1					
ANR	3589862	Condition	ch < 1 || ! IS_PRINTABLE ( ch )	276:7:6006:6033	3589702	0	True				
ANR	3589863	OrExpression	ch < 1 || ! IS_PRINTABLE ( ch )		3589702	0		||			
ANR	3589864	RelationalExpression	ch < 1		3589702	0		<			
ANR	3589865	Identifier	ch		3589702	0					
ANR	3589866	PrimaryExpression	1		3589702	1					
ANR	3589867	UnaryOperationExpression	! IS_PRINTABLE ( ch )		3589702	1					
ANR	3589868	UnaryOperator	!		3589702	0					
ANR	3589869	CallExpression	IS_PRINTABLE ( ch )		3589702	1					
ANR	3589870	Callee	IS_PRINTABLE		3589702	0					
ANR	3589871	Identifier	IS_PRINTABLE		3589702	0					
ANR	3589872	ArgumentList	ch		3589702	1					
ANR	3589873	Argument	ch		3589702	0					
ANR	3589874	Identifier	ch		3589702	0					
ANR	3589875	CompoundStatement		34:37:670:670	3589702	1					
ANR	3589876	ReturnStatement	return false ;	277:4:6042:6054	3589702	0	True				
ANR	3589877	Identifier	false		3589702	0					
ANR	3589878	BreakStatement	break ;	280:2:6067:6072	3589702	7	True				
ANR	3589879	Label	case 'e' :	281:1:6075:6083	3589702	8	True				
ANR	3589880	IfStatement	if ( str && * str )		3589702	9					
ANR	3589881	Condition	str && * str	282:6:6101:6111	3589702	0	True				
ANR	3589882	AndExpression	str && * str		3589702	0		&&			
ANR	3589883	Identifier	str		3589702	0					
ANR	3589884	UnaryOperationExpression	* str		3589702	1					
ANR	3589885	UnaryOperator	*		3589702	0					
ANR	3589886	Identifier	str		3589702	1					
ANR	3589887	CompoundStatement		40:19:748:748	3589702	1					
ANR	3589888	IfStatement	"if ( ! strstr ( str + 1 , ""@"" ) )"		3589702	0					
ANR	3589889	Condition	"! strstr ( str + 1 , ""@"" )"	283:7:6123:6144	3589702	0	True				
ANR	3589890	UnaryOperationExpression	"! strstr ( str + 1 , ""@"" )"		3589702	0					
ANR	3589891	UnaryOperator	!		3589702	0					
ANR	3589892	CallExpression	"strstr ( str + 1 , ""@"" )"		3589702	1					
ANR	3589893	Callee	strstr		3589702	0					
ANR	3589894	Identifier	strstr		3589702	0					
ANR	3589895	ArgumentList	str + 1		3589702	1					
ANR	3589896	Argument	str + 1		3589702	0					
ANR	3589897	AdditiveExpression	str + 1		3589702	0		+			
ANR	3589898	Identifier	str		3589702	0					
ANR	3589899	PrimaryExpression	1		3589702	1					
ANR	3589900	Argument	"""@"""		3589702	1					
ANR	3589901	PrimaryExpression	"""@"""		3589702	0					
ANR	3589902	CompoundStatement		41:31:781:781	3589702	1					
ANR	3589903	ReturnStatement	return false ;	284:4:6153:6165	3589702	0	True				
ANR	3589904	Identifier	false		3589702	0					
ANR	3589905	IfStatement	"if ( ! strstr ( str + 1 , ""."" ) )"		3589702	1					
ANR	3589906	Condition	"! strstr ( str + 1 , ""."" )"	286:7:6179:6200	3589702	0	True				
ANR	3589907	UnaryOperationExpression	"! strstr ( str + 1 , ""."" )"		3589702	0					
ANR	3589908	UnaryOperator	!		3589702	0					
ANR	3589909	CallExpression	"strstr ( str + 1 , ""."" )"		3589702	1					
ANR	3589910	Callee	strstr		3589702	0					
ANR	3589911	Identifier	strstr		3589702	0					
ANR	3589912	ArgumentList	str + 1		3589702	1					
ANR	3589913	Argument	str + 1		3589702	0					
ANR	3589914	AdditiveExpression	str + 1		3589702	0		+			
ANR	3589915	Identifier	str		3589702	0					
ANR	3589916	PrimaryExpression	1		3589702	1					
ANR	3589917	Argument	"""."""		3589702	1					
ANR	3589918	PrimaryExpression	"""."""		3589702	0					
ANR	3589919	CompoundStatement		44:31:837:837	3589702	1					
ANR	3589920	ReturnStatement	return false ;	287:4:6209:6221	3589702	0	True				
ANR	3589921	Identifier	false		3589702	0					
ANR	3589922	ElseStatement	else		3589702	0					
ANR	3589923	CompoundStatement		47:9:871:871	3589702	0					
ANR	3589924	ReturnStatement	return false ;	290:3:6242:6254	3589702	0	True				
ANR	3589925	Identifier	false		3589702	0					
ANR	3589926	BreakStatement	break ;	292:2:6262:6267	3589702	10	True				
ANR	3589927	Label	case 'f' :	293:1:6270:6278	3589702	11	True				
ANR	3589928	IfStatement	if ( str && * str )		3589702	12					
ANR	3589929	Condition	str && * str	294:6:6303:6313	3589702	0	True				
ANR	3589930	AndExpression	str && * str		3589702	0		&&			
ANR	3589931	Identifier	str		3589702	0					
ANR	3589932	UnaryOperationExpression	* str		3589702	1					
ANR	3589933	UnaryOperator	*		3589702	0					
ANR	3589934	Identifier	str		3589702	1					
ANR	3589935	CompoundStatement		52:19:950:950	3589702	1					
ANR	3589936	IfStatement	"if ( ! strstr ( str + 1 , ""%"" ) )"		3589702	0					
ANR	3589937	Condition	"! strstr ( str + 1 , ""%"" )"	295:7:6325:6346	3589702	0	True				
ANR	3589938	UnaryOperationExpression	"! strstr ( str + 1 , ""%"" )"		3589702	0					
ANR	3589939	UnaryOperator	!		3589702	0					
ANR	3589940	CallExpression	"strstr ( str + 1 , ""%"" )"		3589702	1					
ANR	3589941	Callee	strstr		3589702	0					
ANR	3589942	Identifier	strstr		3589702	0					
ANR	3589943	ArgumentList	str + 1		3589702	1					
ANR	3589944	Argument	str + 1		3589702	0					
ANR	3589945	AdditiveExpression	str + 1		3589702	0		+			
ANR	3589946	Identifier	str		3589702	0					
ANR	3589947	PrimaryExpression	1		3589702	1					
ANR	3589948	Argument	"""%"""		3589702	1					
ANR	3589949	PrimaryExpression	"""%"""		3589702	0					
ANR	3589950	CompoundStatement		53:31:983:983	3589702	1					
ANR	3589951	ReturnStatement	return false ;	296:4:6355:6367	3589702	0	True				
ANR	3589952	Identifier	false		3589702	0					
ANR	3589953	ElseStatement	else		3589702	0					
ANR	3589954	CompoundStatement		56:9:1017:1017	3589702	0					
ANR	3589955	ReturnStatement	return false ;	299:3:6388:6400	3589702	0	True				
ANR	3589956	Identifier	false		3589702	0					
ANR	3589957	BreakStatement	break ;	301:2:6408:6413	3589702	13	True				
ANR	3589958	Label	case 'u' :	302:1:6416:6424	3589702	14	True				
ANR	3589959	IfStatement	"if ( ! strstr ( str , ""://"" ) )"		3589702	15					
ANR	3589960	Condition	"! strstr ( str , ""://"" )"	303:6:6440:6459	3589702	0	True				
ANR	3589961	UnaryOperationExpression	"! strstr ( str , ""://"" )"		3589702	0					
ANR	3589962	UnaryOperator	!		3589702	0					
ANR	3589963	CallExpression	"strstr ( str , ""://"" )"		3589702	1					
ANR	3589964	Callee	strstr		3589702	0					
ANR	3589965	Identifier	strstr		3589702	0					
ANR	3589966	ArgumentList	str		3589702	1					
ANR	3589967	Argument	str		3589702	0					
ANR	3589968	Identifier	str		3589702	0					
ANR	3589969	Argument	"""://"""		3589702	1					
ANR	3589970	PrimaryExpression	"""://"""		3589702	0					
ANR	3589971	CompoundStatement		61:28:1096:1096	3589702	1					
ANR	3589972	ReturnStatement	return false ;	304:3:6467:6479	3589702	0	True				
ANR	3589973	Identifier	false		3589702	0					
ANR	3589974	BreakStatement	break ;	306:2:6487:6492	3589702	16	True				
ANR	3589975	Label	case 'i' :	307:8:6502:6510	3589702	17	True				
ANR	3589976	CompoundStatement		69:3:1203:1221	3589702	18					
ANR	3589977	IdentifierDeclStatement	int segment = 0 ;	309:3:6526:6541	3589702	0	True				
ANR	3589978	IdentifierDecl	segment = 0		3589702	0					
ANR	3589979	IdentifierDeclType	int		3589702	0					
ANR	3589980	Identifier	segment		3589702	1					
ANR	3589981	AssignmentExpression	segment = 0		3589702	2		=			
ANR	3589982	Identifier	segment		3589702	0					
ANR	3589983	PrimaryExpression	0		3589702	1					
ANR	3589984	IdentifierDeclStatement	int segmentsum = 0 ;	310:3:6546:6564	3589702	1	True				
ANR	3589985	IdentifierDecl	segmentsum = 0		3589702	0					
ANR	3589986	IdentifierDeclType	int		3589702	0					
ANR	3589987	Identifier	segmentsum		3589702	1					
ANR	3589988	AssignmentExpression	segmentsum = 0		3589702	2		=			
ANR	3589989	Identifier	segmentsum		3589702	0					
ANR	3589990	PrimaryExpression	0		3589702	1					
ANR	3589991	IdentifierDeclStatement	bool prevd = false ;	311:3:6569:6587	3589702	2	True				
ANR	3589992	IdentifierDecl	prevd = false		3589702	0					
ANR	3589993	IdentifierDeclType	bool		3589702	0					
ANR	3589994	Identifier	prevd		3589702	1					
ANR	3589995	AssignmentExpression	prevd = false		3589702	2		=			
ANR	3589996	Identifier	false		3589702	0					
ANR	3589997	Identifier	false		3589702	1					
ANR	3589998	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		3589702	3					
ANR	3589999	ForInit	i = 0 ;	312:8:6597:6602	3589702	0	True				
ANR	3590000	AssignmentExpression	i = 0		3589702	0		=			
ANR	3590001	Identifier	i		3589702	0					
ANR	3590002	PrimaryExpression	0		3589702	1					
ANR	3590003	Condition	str [ i ]	312:15:6604:6609	3589702	1	True				
ANR	3590004	ArrayIndexing	str [ i ]		3589702	0					
ANR	3590005	Identifier	str		3589702	0					
ANR	3590006	Identifier	i		3589702	1					
ANR	3590007	PostIncDecOperationExpression	i ++	312:23:6612:6614	3589702	2	True				
ANR	3590008	Identifier	i		3589702	0					
ANR	3590009	IncDec	++		3589702	1					
ANR	3590010	CompoundStatement		71:4:1257:1273	3589702	3					
ANR	3590011	IdentifierDeclStatement	char ch = str [ i ] ;	313:4:6623:6639	3589702	0	True				
ANR	3590012	IdentifierDecl	ch = str [ i ]		3589702	0					
ANR	3590013	IdentifierDeclType	char		3589702	0					
ANR	3590014	Identifier	ch		3589702	1					
ANR	3590015	AssignmentExpression	ch = str [ i ]		3589702	2		=			
ANR	3590016	Identifier	ch		3589702	0					
ANR	3590017	ArrayIndexing	str [ i ]		3589702	1					
ANR	3590018	Identifier	str		3589702	0					
ANR	3590019	Identifier	i		3589702	1					
ANR	3590020	IfStatement	if ( IS_DIGIT ( ch ) )		3589702	1					
ANR	3590021	Condition	IS_DIGIT ( ch )	314:8:6649:6661	3589702	0	True				
ANR	3590022	CallExpression	IS_DIGIT ( ch )		3589702	0					
ANR	3590023	Callee	IS_DIGIT		3589702	0					
ANR	3590024	Identifier	IS_DIGIT		3589702	0					
ANR	3590025	ArgumentList	ch		3589702	1					
ANR	3590026	Argument	ch		3589702	0					
ANR	3590027	Identifier	ch		3589702	0					
ANR	3590028	CompoundStatement		72:23:1298:1298	3589702	1					
ANR	3590029	ExpressionStatement	segmentsum = segmentsum * 10 + ( ch - '0' )	315:5:6671:6710	3589702	0	True				
ANR	3590030	AssignmentExpression	segmentsum = segmentsum * 10 + ( ch - '0' )		3589702	0		=			
ANR	3590031	Identifier	segmentsum		3589702	0					
ANR	3590032	AdditiveExpression	segmentsum * 10 + ( ch - '0' )		3589702	1		+			
ANR	3590033	MultiplicativeExpression	segmentsum * 10		3589702	0		*			
ANR	3590034	Identifier	segmentsum		3589702	0					
ANR	3590035	PrimaryExpression	10		3589702	1					
ANR	3590036	AdditiveExpression	ch - '0'		3589702	1		-			
ANR	3590037	Identifier	ch		3589702	0					
ANR	3590038	PrimaryExpression	'0'		3589702	1					
ANR	3590039	IfStatement	if ( segment == 3 )		3589702	1					
ANR	3590040	Condition	segment == 3	316:9:6721:6732	3589702	0	True				
ANR	3590041	EqualityExpression	segment == 3		3589702	0		==			
ANR	3590042	Identifier	segment		3589702	0					
ANR	3590043	PrimaryExpression	3		3589702	1					
ANR	3590044	CompoundStatement		74:23:1369:1369	3589702	1					
ANR	3590045	ReturnStatement	return true ;	317:6:6743:6754	3589702	0	True				
ANR	3590046	Identifier	true		3589702	0					
ANR	3590047	ExpressionStatement	prevd = true	319:5:6768:6780	3589702	2	True				
ANR	3590048	AssignmentExpression	prevd = true		3589702	0		=			
ANR	3590049	Identifier	prevd		3589702	0					
ANR	3590050	Identifier	true		3589702	1					
ANR	3590051	ElseStatement	else		3589702	0					
ANR	3590052	IfStatement	if ( ch == '.' )		3589702	0					
ANR	3590053	Condition	ch == '.'	320:15:6797:6805	3589702	0	True				
ANR	3590054	EqualityExpression	ch == '.'		3589702	0		==			
ANR	3590055	Identifier	ch		3589702	0					
ANR	3590056	PrimaryExpression	'.'		3589702	1					
ANR	3590057	CompoundStatement		78:26:1442:1442	3589702	1					
ANR	3590058	IfStatement	if ( prevd == true && segmentsum < 256 )		3589702	0					
ANR	3590059	Condition	prevd == true && segmentsum < 256	321:9:6819:6851	3589702	0	True				
ANR	3590060	AndExpression	prevd == true && segmentsum < 256		3589702	0		&&			
ANR	3590061	EqualityExpression	prevd == true		3589702	0		==			
ANR	3590062	Identifier	prevd		3589702	0					
ANR	3590063	Identifier	true		3589702	1					
ANR	3590064	RelationalExpression	segmentsum < 256		3589702	1		<			
ANR	3590065	Identifier	segmentsum		3589702	0					
ANR	3590066	PrimaryExpression	256		3589702	1					
ANR	3590067	CompoundStatement		79:43:1487:1487	3589702	1					
ANR	3590068	ExpressionStatement	segment ++	322:6:6861:6870	3589702	0	True				
ANR	3590069	PostIncDecOperationExpression	segment ++		3589702	0					
ANR	3590070	Identifier	segment		3589702	0					
ANR	3590071	IncDec	++		3589702	1					
ANR	3590072	ExpressionStatement	segmentsum = 0	323:6:6878:6892	3589702	1	True				
ANR	3590073	AssignmentExpression	segmentsum = 0		3589702	0		=			
ANR	3590074	Identifier	segmentsum		3589702	0					
ANR	3590075	PrimaryExpression	0		3589702	1					
ANR	3590076	ElseStatement	else		3589702	0					
ANR	3590077	CompoundStatement		82:12:1540:1540	3589702	0					
ANR	3590078	ExpressionStatement	segmentsum = 0	325:6:6914:6928	3589702	0	True				
ANR	3590079	AssignmentExpression	segmentsum = 0		3589702	0		=			
ANR	3590080	Identifier	segmentsum		3589702	0					
ANR	3590081	PrimaryExpression	0		3589702	1					
ANR	3590082	ExpressionStatement	segment = 0	326:6:6936:6947	3589702	1	True				
ANR	3590083	AssignmentExpression	segment = 0		3589702	0		=			
ANR	3590084	Identifier	segment		3589702	0					
ANR	3590085	PrimaryExpression	0		3589702	1					
ANR	3590086	ExpressionStatement	prevd = false	328:5:6961:6974	3589702	1	True				
ANR	3590087	AssignmentExpression	prevd = false		3589702	0		=			
ANR	3590088	Identifier	prevd		3589702	0					
ANR	3590089	Identifier	false		3589702	1					
ANR	3590090	ElseStatement	else		3589702	0					
ANR	3590091	CompoundStatement		87:11:1621:1621	3589702	0					
ANR	3590092	ExpressionStatement	segmentsum = 0	330:5:6994:7008	3589702	0	True				
ANR	3590093	AssignmentExpression	segmentsum = 0		3589702	0		=			
ANR	3590094	Identifier	segmentsum		3589702	0					
ANR	3590095	PrimaryExpression	0		3589702	1					
ANR	3590096	ExpressionStatement	prevd = false	331:5:7015:7028	3589702	1	True				
ANR	3590097	AssignmentExpression	prevd = false		3589702	0		=			
ANR	3590098	Identifier	prevd		3589702	0					
ANR	3590099	Identifier	false		3589702	1					
ANR	3590100	ExpressionStatement	segment = 0	332:5:7035:7046	3589702	2	True				
ANR	3590101	AssignmentExpression	segment = 0		3589702	0		=			
ANR	3590102	Identifier	segment		3589702	0					
ANR	3590103	PrimaryExpression	0		3589702	1					
ANR	3590104	ReturnStatement	return false ;	335:3:7062:7074	3589702	4	True				
ANR	3590105	Identifier	false		3589702	0					
ANR	3590106	Label	case 'p' :	337:1:7081:7089	3589702	19	True				
ANR	3590107	IfStatement	if ( str [ 0 ] != '/' )		3589702	20					
ANR	3590108	Condition	str [ 0 ] != '/'	338:6:7105:7117	3589702	0	True				
ANR	3590109	EqualityExpression	str [ 0 ] != '/'		3589702	0		!=			
ANR	3590110	ArrayIndexing	str [ 0 ]		3589702	0					
ANR	3590111	Identifier	str		3589702	0					
ANR	3590112	PrimaryExpression	0		3589702	1					
ANR	3590113	PrimaryExpression	'/'		3589702	1					
ANR	3590114	CompoundStatement		96:21:1754:1754	3589702	1					
ANR	3590115	ReturnStatement	return false ;	339:3:7125:7137	3589702	0	True				
ANR	3590116	Identifier	false		3589702	0					
ANR	3590117	BreakStatement	break ;	341:2:7145:7150	3589702	21	True				
ANR	3590118	Label	case '8' :	342:1:7153:7161	3589702	22	True				
ANR	3590119	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		3589702	23					
ANR	3590120	ForInit	i = 0 ;	343:7:7178:7183	3589702	0	True				
ANR	3590121	AssignmentExpression	i = 0		3589702	0		=			
ANR	3590122	Identifier	i		3589702	0					
ANR	3590123	PrimaryExpression	0		3589702	1					
ANR	3590124	Condition	str [ i ]	343:14:7185:7190	3589702	1	True				
ANR	3590125	ArrayIndexing	str [ i ]		3589702	0					
ANR	3590126	Identifier	str		3589702	0					
ANR	3590127	Identifier	i		3589702	1					
ANR	3590128	PostIncDecOperationExpression	i ++	343:22:7193:7195	3589702	2	True				
ANR	3590129	Identifier	i		3589702	0					
ANR	3590130	IncDec	++		3589702	1					
ANR	3590131	CompoundStatement		102:3:1837:1853	3589702	3					
ANR	3590132	IdentifierDeclStatement	char ch = str [ i ] ;	344:3:7203:7219	3589702	0	True				
ANR	3590133	IdentifierDecl	ch = str [ i ]		3589702	0					
ANR	3590134	IdentifierDeclType	char		3589702	0					
ANR	3590135	Identifier	ch		3589702	1					
ANR	3590136	AssignmentExpression	ch = str [ i ]		3589702	2		=			
ANR	3590137	Identifier	ch		3589702	0					
ANR	3590138	ArrayIndexing	str [ i ]		3589702	1					
ANR	3590139	Identifier	str		3589702	0					
ANR	3590140	Identifier	i		3589702	1					
ANR	3590141	IfStatement	if ( ch < 0 )		3589702	1					
ANR	3590142	Condition	ch < 0	345:7:7228:7233	3589702	0	True				
ANR	3590143	RelationalExpression	ch < 0		3589702	0		<			
ANR	3590144	Identifier	ch		3589702	0					
ANR	3590145	PrimaryExpression	0		3589702	1					
ANR	3590146	CompoundStatement		103:15:1870:1870	3589702	1					
ANR	3590147	ReturnStatement	return true ;	346:4:7242:7253	3589702	0	True				
ANR	3590148	Identifier	true		3589702	0					
ANR	3590149	ReturnStatement	return false ;	349:2:7266:7278	3589702	24	True				
ANR	3590150	Identifier	false		3589702	0					
ANR	3590151	ReturnStatement	return true ;	351:1:7284:7295	3589702	2	True				
ANR	3590152	Identifier	true		3589702	0					
ANR	3590153	ReturnType	static bool		3589702	1					
ANR	3590154	Identifier	bin_strfilter		3589702	2					
ANR	3590155	ParameterList	"RBin * bin , const char * str"		3589702	3					
ANR	3590156	Parameter	RBin * bin	243:26:5337:5345	3589702	0	True				
ANR	3590157	ParameterType	RBin *		3589702	0					
ANR	3590158	Identifier	bin		3589702	1					
ANR	3590159	Parameter	const char * str	243:37:5348:5362	3589702	1	True				
ANR	3590160	ParameterType	const char *		3589702	0					
ANR	3590161	Identifier	str		3589702	1					
ANR	3590162	CFGEntryNode	ENTRY		3589702		True				
ANR	3590163	CFGExitNode	EXIT		3589702		True				
ANR	3590164	Symbol	IS_PRINTABLE		3589702						
ANR	3590165	Symbol	segmentsum		3589702						
ANR	3590166	Symbol	ch		3589702						
ANR	3590167	Symbol	bin		3589702						
ANR	3590168	Symbol	false		3589702						
ANR	3590169	Symbol	i		3589702						
ANR	3590170	Symbol	* bin		3589702						
ANR	3590171	Symbol	prevd		3589702						
ANR	3590172	Symbol	IS_DIGIT		3589702						
ANR	3590173	Symbol	str		3589702						
ANR	3590174	Symbol	bin -> strfilter		3589702						
ANR	3590175	Symbol	* i		3589702						
ANR	3590176	Symbol	strstr		3589702						
ANR	3590177	Symbol	segment		3589702						
ANR	3590178	Symbol	true		3589702						
ANR	3590179	Symbol	* str		3589702						
ANR	3590180	Function	r_bin_string_filter	354:0:7300:7474							
ANR	3590181	FunctionDef	"r_bin_string_filter (RBin * bin , const char * str , ut64 addr)"		3590180	0					
ANR	3590182	CompoundStatement		354:70:7370:7474	3590180	0					
ANR	3590183	IfStatement	"if ( r_bin_strpurge ( bin , str , addr ) || ! bin_strfilter ( bin , str ) )"		3590180	0					
ANR	3590184	Condition	"r_bin_strpurge ( bin , str , addr ) || ! bin_strfilter ( bin , str )"	355:5:7377:7436	3590180	0	True				
ANR	3590185	OrExpression	"r_bin_strpurge ( bin , str , addr ) || ! bin_strfilter ( bin , str )"		3590180	0		||			
ANR	3590186	CallExpression	"r_bin_strpurge ( bin , str , addr )"		3590180	0					
ANR	3590187	Callee	r_bin_strpurge		3590180	0					
ANR	3590188	Identifier	r_bin_strpurge		3590180	0					
ANR	3590189	ArgumentList	bin		3590180	1					
ANR	3590190	Argument	bin		3590180	0					
ANR	3590191	Identifier	bin		3590180	0					
ANR	3590192	Argument	str		3590180	1					
ANR	3590193	Identifier	str		3590180	0					
ANR	3590194	Argument	addr		3590180	2					
ANR	3590195	Identifier	addr		3590180	0					
ANR	3590196	UnaryOperationExpression	"! bin_strfilter ( bin , str )"		3590180	1					
ANR	3590197	UnaryOperator	!		3590180	0					
ANR	3590198	CallExpression	"bin_strfilter ( bin , str )"		3590180	1					
ANR	3590199	Callee	bin_strfilter		3590180	0					
ANR	3590200	Identifier	bin_strfilter		3590180	0					
ANR	3590201	ArgumentList	bin		3590180	1					
ANR	3590202	Argument	bin		3590180	0					
ANR	3590203	Identifier	bin		3590180	0					
ANR	3590204	Argument	str		3590180	1					
ANR	3590205	Identifier	str		3590180	0					
ANR	3590206	CompoundStatement		2:67:68:68	3590180	1					
ANR	3590207	ReturnStatement	return false ;	356:2:7443:7455	3590180	0	True				
ANR	3590208	Identifier	false		3590180	0					
ANR	3590209	ReturnStatement	return true ;	358:1:7461:7472	3590180	1	True				
ANR	3590210	Identifier	true		3590180	0					
ANR	3590211	ReturnType	R_API bool		3590180	1					
ANR	3590212	Identifier	r_bin_string_filter		3590180	2					
ANR	3590213	ParameterList	"RBin * bin , const char * str , ut64 addr"		3590180	3					
ANR	3590214	Parameter	RBin * bin	354:31:7331:7339	3590180	0	True				
ANR	3590215	ParameterType	RBin *		3590180	0					
ANR	3590216	Identifier	bin		3590180	1					
ANR	3590217	Parameter	const char * str	354:42:7342:7356	3590180	1	True				
ANR	3590218	ParameterType	const char *		3590180	0					
ANR	3590219	Identifier	str		3590180	1					
ANR	3590220	Parameter	ut64 addr	354:59:7359:7367	3590180	2	True				
ANR	3590221	ParameterType	ut64		3590180	0					
ANR	3590222	Identifier	addr		3590180	1					
ANR	3590223	CFGEntryNode	ENTRY		3590180		True				
ANR	3590224	CFGExitNode	EXIT		3590180		True				
ANR	3590225	Symbol	str		3590180						
ANR	3590226	Symbol	bin_strfilter		3590180						
ANR	3590227	Symbol	bin		3590180						
ANR	3590228	Symbol	r_bin_strpurge		3590180						
ANR	3590229	Symbol	false		3590180						
ANR	3590230	Symbol	true		3590180						
ANR	3590231	Symbol	addr		3590180						
