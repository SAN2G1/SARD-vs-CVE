command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6392139	File	data/converged/CVE-2019-16718~_radare2/value.c								
ANR	6392140	Function	r_anal_value_new	5:0:87:176							
ANR	6392141	FunctionDef	r_anal_value_new ()		6392140	0					
ANR	6392142	CompoundStatement		5:37:124:176	6392140	0					
ANR	6392143	ReturnStatement	return R_NEW0 ( RAnalValue ) ;	6:1:148:174	6392140	0	True				
ANR	6392144	CallExpression	R_NEW0 ( RAnalValue )		6392140	0					
ANR	6392145	Callee	R_NEW0		6392140	0					
ANR	6392146	Identifier	R_NEW0		6392140	0					
ANR	6392147	ArgumentList	RAnalValue		6392140	1					
ANR	6392148	Argument	RAnalValue		6392140	0					
ANR	6392149	Identifier	RAnalValue		6392140	0					
ANR	6392150	ReturnType	R_API RAnalValue *		6392140	1					
ANR	6392151	Identifier	r_anal_value_new		6392140	2					
ANR	6392152	ParameterList			6392140	3					
ANR	6392153	CFGEntryNode	ENTRY		6392140		True				
ANR	6392154	CFGExitNode	EXIT		6392140		True				
ANR	6392155	Symbol	R_NEW0		6392140						
ANR	6392156	Symbol	RAnalValue		6392140						
ANR	6392157	Function	r_anal_value_new_from_string	9:0:179:271							
ANR	6392158	FunctionDef	r_anal_value_new_from_string (const char * str)		6392157	0					
ANR	6392159	CompoundStatement		9:64:243:271	6392157	0					
ANR	6392160	ReturnStatement	return NULL ;	11:1:258:269	6392157	0	True				
ANR	6392161	Identifier	NULL		6392157	0					
ANR	6392162	ReturnType	R_API RAnalValue *		6392157	1					
ANR	6392163	Identifier	r_anal_value_new_from_string		6392157	2					
ANR	6392164	ParameterList	const char * str		6392157	3					
ANR	6392165	Parameter	const char * str	9:47:226:240	6392157	0	True				
ANR	6392166	ParameterType	const char *		6392157	0					
ANR	6392167	Identifier	str		6392157	1					
ANR	6392168	CFGEntryNode	ENTRY		6392157		True				
ANR	6392169	CFGExitNode	EXIT		6392157		True				
ANR	6392170	Symbol	str		6392157						
ANR	6392171	Symbol	NULL		6392157						
ANR	6392172	Function	r_anal_value_copy	14:0:274:493							
ANR	6392173	FunctionDef	r_anal_value_copy (RAnalValue * ov)		6392172	0					
ANR	6392174	CompoundStatement		14:52:326:493	6392172	0					
ANR	6392175	IdentifierDeclStatement	RAnalValue * v = R_NEW0 ( RAnalValue ) ;	15:1:329:364	6392172	0	True				
ANR	6392176	IdentifierDecl	* v = R_NEW0 ( RAnalValue )		6392172	0					
ANR	6392177	IdentifierDeclType	RAnalValue *		6392172	0					
ANR	6392178	Identifier	v		6392172	1					
ANR	6392179	AssignmentExpression	* v = R_NEW0 ( RAnalValue )		6392172	2		=			
ANR	6392180	Identifier	v		6392172	0					
ANR	6392181	CallExpression	R_NEW0 ( RAnalValue )		6392172	1					
ANR	6392182	Callee	R_NEW0		6392172	0					
ANR	6392183	Identifier	R_NEW0		6392172	0					
ANR	6392184	ArgumentList	RAnalValue		6392172	1					
ANR	6392185	Argument	RAnalValue		6392172	0					
ANR	6392186	Identifier	RAnalValue		6392172	0					
ANR	6392187	IfStatement	if ( ! v )		6392172	1					
ANR	6392188	Condition	! v	16:5:371:372	6392172	0	True				
ANR	6392189	UnaryOperationExpression	! v		6392172	0					
ANR	6392190	UnaryOperator	!		6392172	0					
ANR	6392191	Identifier	v		6392172	1					
ANR	6392192	CompoundStatement		3:9:48:48	6392172	1					
ANR	6392193	ReturnStatement	return NULL ;	17:2:379:390	6392172	0	True				
ANR	6392194	Identifier	NULL		6392172	0					
ANR	6392195	ExpressionStatement	"memcpy ( v , ov , sizeof ( RAnalValue ) )"	19:1:396:431	6392172	2	True				
ANR	6392196	CallExpression	"memcpy ( v , ov , sizeof ( RAnalValue ) )"		6392172	0					
ANR	6392197	Callee	memcpy		6392172	0					
ANR	6392198	Identifier	memcpy		6392172	0					
ANR	6392199	ArgumentList	v		6392172	1					
ANR	6392200	Argument	v		6392172	0					
ANR	6392201	Identifier	v		6392172	0					
ANR	6392202	Argument	ov		6392172	1					
ANR	6392203	Identifier	ov		6392172	0					
ANR	6392204	Argument	sizeof ( RAnalValue )		6392172	2					
ANR	6392205	SizeofExpression	sizeof ( RAnalValue )		6392172	0					
ANR	6392206	Sizeof	sizeof		6392172	0					
ANR	6392207	SizeofOperand	RAnalValue		6392172	1					
ANR	6392208	ReturnStatement	return v ;	21:1:483:491	6392172	3	True				
ANR	6392209	Identifier	v		6392172	0					
ANR	6392210	ReturnType	R_API RAnalValue *		6392172	1					
ANR	6392211	Identifier	r_anal_value_copy		6392172	2					
ANR	6392212	ParameterList	RAnalValue * ov		6392172	3					
ANR	6392213	Parameter	RAnalValue * ov	14:36:310:323	6392172	0	True				
ANR	6392214	ParameterType	RAnalValue *		6392172	0					
ANR	6392215	Identifier	ov		6392172	1					
ANR	6392216	CFGEntryNode	ENTRY		6392172		True				
ANR	6392217	CFGExitNode	EXIT		6392172		True				
ANR	6392218	Symbol	R_NEW0		6392172						
ANR	6392219	Symbol	NULL		6392172						
ANR	6392220	Symbol	v		6392172						
ANR	6392221	Symbol	ov		6392172						
ANR	6392222	Symbol	RAnalValue		6392172						
ANR	6392223	Function	r_anal_value_free	25:0:534:735							
ANR	6392224	FunctionDef	r_anal_value_free (RAnalValue * value)		6392223	0					
ANR	6392225	CompoundStatement		25:48:582:735	6392223	0					
ANR	6392226	ExpressionStatement	free ( value )	26:1:585:597	6392223	0	True				
ANR	6392227	CallExpression	free ( value )		6392223	0					
ANR	6392228	Callee	free		6392223	0					
ANR	6392229	Identifier	free		6392223	0					
ANR	6392230	ArgumentList	value		6392223	1					
ANR	6392231	Argument	value		6392223	0					
ANR	6392232	Identifier	value		6392223	0					
ANR	6392233	IdentifierDeclStatement	ut64 pval = ( ut64 ) ( size_t ) value ;	28:1:606:637	6392223	1	True				
ANR	6392234	IdentifierDecl	pval = ( ut64 ) ( size_t ) value		6392223	0					
ANR	6392235	IdentifierDeclType	ut64		6392223	0					
ANR	6392236	Identifier	pval		6392223	1					
ANR	6392237	AssignmentExpression	pval = ( ut64 ) ( size_t ) value		6392223	2		=			
ANR	6392238	Identifier	pval		6392223	0					
ANR	6392239	CastExpression	( ut64 ) ( size_t ) value		6392223	1					
ANR	6392240	CastTarget	ut64		6392223	0					
ANR	6392241	CastExpression	( size_t ) value		6392223	1					
ANR	6392242	CastTarget	size_t		6392223	0					
ANR	6392243	Identifier	value		6392223	1					
ANR	6392244	IfStatement	if ( pval && pval != UT64_MAX )		6392223	2					
ANR	6392245	Condition	pval && pval != UT64_MAX	29:5:644:667	6392223	0	True				
ANR	6392246	AndExpression	pval && pval != UT64_MAX		6392223	0		&&			
ANR	6392247	Identifier	pval		6392223	0					
ANR	6392248	EqualityExpression	pval != UT64_MAX		6392223	1		!=			
ANR	6392249	Identifier	pval		6392223	0					
ANR	6392250	Identifier	UT64_MAX		6392223	1					
ANR	6392251	CompoundStatement		5:31:87:87	6392223	1					
ANR	6392252	ExpressionStatement	free ( value )	31:2:711:723	6392223	0	True				
ANR	6392253	CallExpression	free ( value )		6392223	0					
ANR	6392254	Callee	free		6392223	0					
ANR	6392255	Identifier	free		6392223	0					
ANR	6392256	ArgumentList	value		6392223	1					
ANR	6392257	Argument	value		6392223	0					
ANR	6392258	Identifier	value		6392223	0					
ANR	6392259	ReturnType	R_API void		6392223	1					
ANR	6392260	Identifier	r_anal_value_free		6392223	2					
ANR	6392261	ParameterList	RAnalValue * value		6392223	3					
ANR	6392262	Parameter	RAnalValue * value	25:29:563:579	6392223	0	True				
ANR	6392263	ParameterType	RAnalValue *		6392223	0					
ANR	6392264	Identifier	value		6392223	1					
ANR	6392265	CFGEntryNode	ENTRY		6392223		True				
ANR	6392266	CFGExitNode	EXIT		6392223		True				
ANR	6392267	Symbol	pval		6392223						
ANR	6392268	Symbol	UT64_MAX		6392223						
ANR	6392269	Symbol	value		6392223						
ANR	6392270	Function	r_anal_value_to_ut64	37:0:772:1237							
ANR	6392271	FunctionDef	"r_anal_value_to_ut64 (RAnal * anal , RAnalValue * val)"		6392270	0					
ANR	6392272	CompoundStatement		37:62:834:1237	6392270	0					
ANR	6392273	IdentifierDeclStatement	ut64 num ;	38:1:837:845	6392270	0	True				
ANR	6392274	IdentifierDecl	num		6392270	0					
ANR	6392275	IdentifierDeclType	ut64		6392270	0					
ANR	6392276	Identifier	num		6392270	1					
ANR	6392277	IfStatement	if ( ! val )		6392270	1					
ANR	6392278	Condition	! val	39:5:852:855	6392270	0	True				
ANR	6392279	UnaryOperationExpression	! val		6392270	0					
ANR	6392280	UnaryOperator	!		6392270	0					
ANR	6392281	Identifier	val		6392270	1					
ANR	6392282	CompoundStatement		3:11:23:23	6392270	1					
ANR	6392283	Statement	return	40:2:862:867	6392270	0	True				
ANR	6392284	Statement	0L	40:9:869:870	6392270	1	True				
ANR	6392285	ExpressionStatement	L	40:11:871:872	6392270	2	True				
ANR	6392286	Identifier	L		6392270	0					
ANR	6392287	ExpressionStatement	num = val -> base + ( val -> delta * ( val -> mul ? val -> mul : 1 ) )	42:1:878:930	6392270	2	True				
ANR	6392288	AssignmentExpression	num = val -> base + ( val -> delta * ( val -> mul ? val -> mul : 1 ) )		6392270	0		=			
ANR	6392289	Identifier	num		6392270	0					
ANR	6392290	AdditiveExpression	val -> base + ( val -> delta * ( val -> mul ? val -> mul : 1 ) )		6392270	1		+			
ANR	6392291	PtrMemberAccess	val -> base		6392270	0					
ANR	6392292	Identifier	val		6392270	0					
ANR	6392293	Identifier	base		6392270	1					
ANR	6392294	MultiplicativeExpression	val -> delta * ( val -> mul ? val -> mul : 1 )		6392270	1		*			
ANR	6392295	PtrMemberAccess	val -> delta		6392270	0					
ANR	6392296	Identifier	val		6392270	0					
ANR	6392297	Identifier	delta		6392270	1					
ANR	6392298	ConditionalExpression	val -> mul ? val -> mul : 1		6392270	1					
ANR	6392299	Condition	val -> mul		6392270	0					
ANR	6392300	PtrMemberAccess	val -> mul		6392270	0					
ANR	6392301	Identifier	val		6392270	0					
ANR	6392302	Identifier	mul		6392270	1					
ANR	6392303	PtrMemberAccess	val -> mul		6392270	1					
ANR	6392304	Identifier	val		6392270	0					
ANR	6392305	Identifier	mul		6392270	1					
ANR	6392306	PrimaryExpression	1		6392270	2					
ANR	6392307	IfStatement	if ( val -> reg )		6392270	3					
ANR	6392308	Condition	val -> reg	43:5:937:944	6392270	0	True				
ANR	6392309	PtrMemberAccess	val -> reg		6392270	0					
ANR	6392310	Identifier	val		6392270	0					
ANR	6392311	Identifier	reg		6392270	1					
ANR	6392312	CompoundStatement		7:15:112:112	6392270	1					
ANR	6392313	ExpressionStatement	"num += r_reg_get_value ( anal -> reg , val -> reg )"	44:2:951:995	6392270	0	True				
ANR	6392314	AssignmentExpression	"num += r_reg_get_value ( anal -> reg , val -> reg )"		6392270	0		+=			
ANR	6392315	Identifier	num		6392270	0					
ANR	6392316	CallExpression	"r_reg_get_value ( anal -> reg , val -> reg )"		6392270	1					
ANR	6392317	Callee	r_reg_get_value		6392270	0					
ANR	6392318	Identifier	r_reg_get_value		6392270	0					
ANR	6392319	ArgumentList	anal -> reg		6392270	1					
ANR	6392320	Argument	anal -> reg		6392270	0					
ANR	6392321	PtrMemberAccess	anal -> reg		6392270	0					
ANR	6392322	Identifier	anal		6392270	0					
ANR	6392323	Identifier	reg		6392270	1					
ANR	6392324	Argument	val -> reg		6392270	1					
ANR	6392325	PtrMemberAccess	val -> reg		6392270	0					
ANR	6392326	Identifier	val		6392270	0					
ANR	6392327	Identifier	reg		6392270	1					
ANR	6392328	IfStatement	if ( val -> regdelta )		6392270	4					
ANR	6392329	Condition	val -> regdelta	46:5:1005:1017	6392270	0	True				
ANR	6392330	PtrMemberAccess	val -> regdelta		6392270	0					
ANR	6392331	Identifier	val		6392270	0					
ANR	6392332	Identifier	regdelta		6392270	1					
ANR	6392333	CompoundStatement		10:20:185:185	6392270	1					
ANR	6392334	ExpressionStatement	"num += r_reg_get_value ( anal -> reg , val -> regdelta )"	47:2:1024:1073	6392270	0	True				
ANR	6392335	AssignmentExpression	"num += r_reg_get_value ( anal -> reg , val -> regdelta )"		6392270	0		+=			
ANR	6392336	Identifier	num		6392270	0					
ANR	6392337	CallExpression	"r_reg_get_value ( anal -> reg , val -> regdelta )"		6392270	1					
ANR	6392338	Callee	r_reg_get_value		6392270	0					
ANR	6392339	Identifier	r_reg_get_value		6392270	0					
ANR	6392340	ArgumentList	anal -> reg		6392270	1					
ANR	6392341	Argument	anal -> reg		6392270	0					
ANR	6392342	PtrMemberAccess	anal -> reg		6392270	0					
ANR	6392343	Identifier	anal		6392270	0					
ANR	6392344	Identifier	reg		6392270	1					
ANR	6392345	Argument	val -> regdelta		6392270	1					
ANR	6392346	PtrMemberAccess	val -> regdelta		6392270	0					
ANR	6392347	Identifier	val		6392270	0					
ANR	6392348	Identifier	regdelta		6392270	1					
ANR	6392349	SwitchStatement	switch ( val -> memref )		6392270	5					
ANR	6392350	Condition	val -> memref	49:9:1087:1097	6392270	0	True				
ANR	6392351	PtrMemberAccess	val -> memref		6392270	0					
ANR	6392352	Identifier	val		6392270	0					
ANR	6392353	Identifier	memref		6392270	1					
ANR	6392354	CompoundStatement		13:22:265:265	6392270	1					
ANR	6392355	Label	case 1 :	50:1:1103:1109	6392270	0	True				
ANR	6392356	Label	case 2 :	51:1:1112:1118	6392270	1	True				
ANR	6392357	Label	case 4 :	52:1:1121:1127	6392270	2	True				
ANR	6392358	Label	case 8 :	53:1:1130:1136	6392270	3	True				
ANR	6392359	ExpressionStatement	"eprintf ( ""TODO: memref for to_ut64 not supported\\n"" )"	55:2:1158:1210	6392270	4	True				
ANR	6392360	CallExpression	"eprintf ( ""TODO: memref for to_ut64 not supported\\n"" )"		6392270	0					
ANR	6392361	Callee	eprintf		6392270	0					
ANR	6392362	Identifier	eprintf		6392270	0					
ANR	6392363	ArgumentList	"""TODO: memref for to_ut64 not supported\\n"""		6392270	1					
ANR	6392364	Argument	"""TODO: memref for to_ut64 not supported\\n"""		6392270	0					
ANR	6392365	PrimaryExpression	"""TODO: memref for to_ut64 not supported\\n"""		6392270	0					
ANR	6392366	BreakStatement	break ;	56:2:1214:1219	6392270	5	True				
ANR	6392367	ReturnStatement	return num ;	58:1:1225:1235	6392270	6	True				
ANR	6392368	Identifier	num		6392270	0					
ANR	6392369	ReturnType	R_API ut64		6392270	1					
ANR	6392370	Identifier	r_anal_value_to_ut64		6392270	2					
ANR	6392371	ParameterList	"RAnal * anal , RAnalValue * val"		6392270	3					
ANR	6392372	Parameter	RAnal * anal	37:32:804:814	6392270	0	True				
ANR	6392373	ParameterType	RAnal *		6392270	0					
ANR	6392374	Identifier	anal		6392270	1					
ANR	6392375	Parameter	RAnalValue * val	37:45:817:831	6392270	1	True				
ANR	6392376	ParameterType	RAnalValue *		6392270	0					
ANR	6392377	Identifier	val		6392270	1					
ANR	6392378	CFGEntryNode	ENTRY		6392270		True				
ANR	6392379	CFGExitNode	EXIT		6392270		True				
ANR	6392380	Symbol	val		6392270						
ANR	6392381	Symbol	r_reg_get_value		6392270						
ANR	6392382	Symbol	anal -> reg		6392270						
ANR	6392383	Symbol	val -> mul		6392270						
ANR	6392384	Symbol	num		6392270						
ANR	6392385	Symbol	* val		6392270						
ANR	6392386	Symbol	* anal		6392270						
ANR	6392387	Symbol	anal		6392270						
ANR	6392388	Symbol	val -> regdelta		6392270						
ANR	6392389	Symbol	val -> reg		6392270						
ANR	6392390	Symbol	val -> memref		6392270						
ANR	6392391	Symbol	val -> base		6392270						
ANR	6392392	Symbol	val -> delta		6392270						
ANR	6392393	Function	r_anal_value_set_ut64	61:0:1240:1706							
ANR	6392394	FunctionDef	"r_anal_value_set_ut64 (RAnal * anal , RAnalValue * val , ut64 num)"		6392393	0					
ANR	6392395	CompoundStatement		61:72:1312:1706	6392393	0					
ANR	6392396	IfStatement	if ( val -> memref )		6392393	0					
ANR	6392397	Condition	val -> memref	62:5:1319:1329	6392393	0	True				
ANR	6392398	PtrMemberAccess	val -> memref		6392393	0					
ANR	6392399	Identifier	val		6392393	0					
ANR	6392400	Identifier	memref		6392393	1					
ANR	6392401	CompoundStatement		2:18:19:19	6392393	1					
ANR	6392402	IfStatement	if ( anal -> iob . io )		6392393	0					
ANR	6392403	Condition	anal -> iob . io	63:6:1340:1351	6392393	0	True				
ANR	6392404	MemberAccess	anal -> iob . io		6392393	0					
ANR	6392405	PtrMemberAccess	anal -> iob		6392393	0					
ANR	6392406	Identifier	anal		6392393	0					
ANR	6392407	Identifier	iob		6392393	1					
ANR	6392408	Identifier	io		6392393	1					
ANR	6392409	CompoundStatement		5:3:62:106	6392393	1					
ANR	6392410	IdentifierDeclStatement	ut8 data [ 8 ] ;	64:3:1359:1370	6392393	0	True				
ANR	6392411	IdentifierDecl	data [ 8 ]		6392393	0					
ANR	6392412	IdentifierDeclType	ut8 [ 8 ]		6392393	0					
ANR	6392413	Identifier	data		6392393	1					
ANR	6392414	PrimaryExpression	8		6392393	2					
ANR	6392415	IdentifierDeclStatement	"ut64 addr = r_anal_value_to_ut64 ( anal , val ) ;"	65:3:1375:1419	6392393	1	True				
ANR	6392416	IdentifierDecl	"addr = r_anal_value_to_ut64 ( anal , val )"		6392393	0					
ANR	6392417	IdentifierDeclType	ut64		6392393	0					
ANR	6392418	Identifier	addr		6392393	1					
ANR	6392419	AssignmentExpression	"addr = r_anal_value_to_ut64 ( anal , val )"		6392393	2		=			
ANR	6392420	Identifier	addr		6392393	0					
ANR	6392421	CallExpression	"r_anal_value_to_ut64 ( anal , val )"		6392393	1					
ANR	6392422	Callee	r_anal_value_to_ut64		6392393	0					
ANR	6392423	Identifier	r_anal_value_to_ut64		6392393	0					
ANR	6392424	ArgumentList	anal		6392393	1					
ANR	6392425	Argument	anal		6392393	0					
ANR	6392426	Identifier	anal		6392393	0					
ANR	6392427	Argument	val		6392393	1					
ANR	6392428	Identifier	val		6392393	0					
ANR	6392429	ExpressionStatement	"r_mem_set_num ( data , val -> memref , num )"	66:3:1424:1462	6392393	2	True				
ANR	6392430	CallExpression	"r_mem_set_num ( data , val -> memref , num )"		6392393	0					
ANR	6392431	Callee	r_mem_set_num		6392393	0					
ANR	6392432	Identifier	r_mem_set_num		6392393	0					
ANR	6392433	ArgumentList	data		6392393	1					
ANR	6392434	Argument	data		6392393	0					
ANR	6392435	Identifier	data		6392393	0					
ANR	6392436	Argument	val -> memref		6392393	1					
ANR	6392437	PtrMemberAccess	val -> memref		6392393	0					
ANR	6392438	Identifier	val		6392393	0					
ANR	6392439	Identifier	memref		6392393	1					
ANR	6392440	Argument	num		6392393	2					
ANR	6392441	Identifier	num		6392393	0					
ANR	6392442	ExpressionStatement	"anal -> iob . write_at ( anal -> iob . io , addr , data , val -> memref )"	67:3:1467:1525	6392393	3	True				
ANR	6392443	CallExpression	"anal -> iob . write_at ( anal -> iob . io , addr , data , val -> memref )"		6392393	0					
ANR	6392444	Callee	anal -> iob . write_at		6392393	0					
ANR	6392445	MemberAccess	anal -> iob . write_at		6392393	0					
ANR	6392446	PtrMemberAccess	anal -> iob		6392393	0					
ANR	6392447	Identifier	anal		6392393	0					
ANR	6392448	Identifier	iob		6392393	1					
ANR	6392449	Identifier	write_at		6392393	1					
ANR	6392450	ArgumentList	anal -> iob . io		6392393	1					
ANR	6392451	Argument	anal -> iob . io		6392393	0					
ANR	6392452	MemberAccess	anal -> iob . io		6392393	0					
ANR	6392453	PtrMemberAccess	anal -> iob		6392393	0					
ANR	6392454	Identifier	anal		6392393	0					
ANR	6392455	Identifier	iob		6392393	1					
ANR	6392456	Identifier	io		6392393	1					
ANR	6392457	Argument	addr		6392393	1					
ANR	6392458	Identifier	addr		6392393	0					
ANR	6392459	Argument	data		6392393	2					
ANR	6392460	Identifier	data		6392393	0					
ANR	6392461	Argument	val -> memref		6392393	3					
ANR	6392462	PtrMemberAccess	val -> memref		6392393	0					
ANR	6392463	Identifier	val		6392393	0					
ANR	6392464	Identifier	memref		6392393	1					
ANR	6392465	ElseStatement	else		6392393	0					
ANR	6392466	CompoundStatement		8:9:223:223	6392393	0					
ANR	6392467	ExpressionStatement	"eprintf ( ""No IO binded to r_anal\\n"" )"	69:3:1541:1577	6392393	0	True				
ANR	6392468	CallExpression	"eprintf ( ""No IO binded to r_anal\\n"" )"		6392393	0					
ANR	6392469	Callee	eprintf		6392393	0					
ANR	6392470	Identifier	eprintf		6392393	0					
ANR	6392471	ArgumentList	"""No IO binded to r_anal\\n"""		6392393	1					
ANR	6392472	Argument	"""No IO binded to r_anal\\n"""		6392393	0					
ANR	6392473	PrimaryExpression	"""No IO binded to r_anal\\n"""		6392393	0					
ANR	6392474	ElseStatement	else		6392393	0					
ANR	6392475	CompoundStatement		11:8:278:278	6392393	0					
ANR	6392476	IfStatement	if ( val -> reg )		6392393	0					
ANR	6392477	Condition	val -> reg	72:6:1599:1606	6392393	0	True				
ANR	6392478	PtrMemberAccess	val -> reg		6392393	0					
ANR	6392479	Identifier	val		6392393	0					
ANR	6392480	Identifier	reg		6392393	1					
ANR	6392481	CompoundStatement		12:16:296:296	6392393	1					
ANR	6392482	ExpressionStatement	"r_reg_set_value ( anal -> reg , val -> reg , num )"	73:3:1614:1656	6392393	0	True				
ANR	6392483	CallExpression	"r_reg_set_value ( anal -> reg , val -> reg , num )"		6392393	0					
ANR	6392484	Callee	r_reg_set_value		6392393	0					
ANR	6392485	Identifier	r_reg_set_value		6392393	0					
ANR	6392486	ArgumentList	anal -> reg		6392393	1					
ANR	6392487	Argument	anal -> reg		6392393	0					
ANR	6392488	PtrMemberAccess	anal -> reg		6392393	0					
ANR	6392489	Identifier	anal		6392393	0					
ANR	6392490	Identifier	reg		6392393	1					
ANR	6392491	Argument	val -> reg		6392393	1					
ANR	6392492	PtrMemberAccess	val -> reg		6392393	0					
ANR	6392493	Identifier	val		6392393	0					
ANR	6392494	Identifier	reg		6392393	1					
ANR	6392495	Argument	num		6392393	2					
ANR	6392496	Identifier	num		6392393	0					
ANR	6392497	ReturnStatement	return false ;	76:1:1666:1678	6392393	1	True				
ANR	6392498	Identifier	false		6392393	0					
ANR	6392499	ReturnType	R_API int		6392393	1					
ANR	6392500	Identifier	r_anal_value_set_ut64		6392393	2					
ANR	6392501	ParameterList	"RAnal * anal , RAnalValue * val , ut64 num"		6392393	3					
ANR	6392502	Parameter	RAnal * anal	61:32:1272:1282	6392393	0	True				
ANR	6392503	ParameterType	RAnal *		6392393	0					
ANR	6392504	Identifier	anal		6392393	1					
ANR	6392505	Parameter	RAnalValue * val	61:45:1285:1299	6392393	1	True				
ANR	6392506	ParameterType	RAnalValue *		6392393	0					
ANR	6392507	Identifier	val		6392393	1					
ANR	6392508	Parameter	ut64 num	61:62:1302:1309	6392393	2	True				
ANR	6392509	ParameterType	ut64		6392393	0					
ANR	6392510	Identifier	num		6392393	1					
ANR	6392511	CFGEntryNode	ENTRY		6392393		True				
ANR	6392512	CFGExitNode	EXIT		6392393		True				
ANR	6392513	Symbol	val		6392393						
ANR	6392514	Symbol	anal -> reg		6392393						
ANR	6392515	Symbol	data		6392393						
ANR	6392516	Symbol	num		6392393						
ANR	6392517	Symbol	false		6392393						
ANR	6392518	Symbol	* val		6392393						
ANR	6392519	Symbol	r_anal_value_to_ut64		6392393						
ANR	6392520	Symbol	* anal		6392393						
ANR	6392521	Symbol	anal		6392393						
ANR	6392522	Symbol	val -> memref		6392393						
ANR	6392523	Symbol	val -> reg		6392393						
ANR	6392524	Symbol	anal -> iob		6392393						
ANR	6392525	Symbol	addr		6392393						
ANR	6392526	Symbol	anal -> iob . io		6392393						
ANR	6392527	Function	r_anal_value_to_string	79:0:1709:2944							
ANR	6392528	FunctionDef	r_anal_value_to_string (RAnalValue * value)		6392527	0					
ANR	6392529	CompoundStatement		79:55:1764:2944	6392527	0					
ANR	6392530	IdentifierDeclStatement	char * out = NULL ;	80:1:1767:1783	6392527	0	True				
ANR	6392531	IdentifierDecl	* out = NULL		6392527	0					
ANR	6392532	IdentifierDeclType	char *		6392527	0					
ANR	6392533	Identifier	out		6392527	1					
ANR	6392534	AssignmentExpression	* out = NULL		6392527	2		=			
ANR	6392535	Identifier	NULL		6392527	0					
ANR	6392536	Identifier	NULL		6392527	1					
ANR	6392537	IfStatement	if ( value )		6392527	1					
ANR	6392538	Condition	value	81:5:1790:1794	6392527	0	True				
ANR	6392539	Identifier	value		6392527	0					
ANR	6392540	CompoundStatement		3:12:32:32	6392527	1					
ANR	6392541	ExpressionStatement	"out = r_str_new ( """" )"	82:2:1801:1821	6392527	0	True				
ANR	6392542	AssignmentExpression	"out = r_str_new ( """" )"		6392527	0		=			
ANR	6392543	Identifier	out		6392527	0					
ANR	6392544	CallExpression	"r_str_new ( """" )"		6392527	1					
ANR	6392545	Callee	r_str_new		6392527	0					
ANR	6392546	Identifier	r_str_new		6392527	0					
ANR	6392547	ArgumentList	""""""		6392527	1					
ANR	6392548	Argument	""""""		6392527	0					
ANR	6392549	PrimaryExpression	""""""		6392527	0					
ANR	6392550	IfStatement	if ( ! value -> base && ! value -> reg )		6392527	1					
ANR	6392551	Condition	! value -> base && ! value -> reg	83:6:1829:1855	6392527	0	True				
ANR	6392552	AndExpression	! value -> base && ! value -> reg		6392527	0		&&			
ANR	6392553	UnaryOperationExpression	! value -> base		6392527	0					
ANR	6392554	UnaryOperator	!		6392527	0					
ANR	6392555	PtrMemberAccess	value -> base		6392527	1					
ANR	6392556	Identifier	value		6392527	0					
ANR	6392557	Identifier	base		6392527	1					
ANR	6392558	UnaryOperationExpression	! value -> reg		6392527	1					
ANR	6392559	UnaryOperator	!		6392527	0					
ANR	6392560	PtrMemberAccess	value -> reg		6392527	1					
ANR	6392561	Identifier	value		6392527	0					
ANR	6392562	Identifier	reg		6392527	1					
ANR	6392563	CompoundStatement		5:35:93:93	6392527	1					
ANR	6392564	Statement	if	84:3:1863:1864	6392527	0	True				
ANR	6392565	Statement	(	84:6:1866:1866	6392527	1	True				
ANR	6392566	Statement	value	84:7:1867:1871	6392527	2	True				
ANR	6392567	Statement	->	84:12:1872:1873	6392527	3	True				
ANR	6392568	Statement	imm	84:14:1874:1876	6392527	4	True				
ANR	6392569	Statement	!=	84:18:1878:1879	6392527	5	True				
ANR	6392570	Statement	-	84:21:1881:1881	6392527	6	True				
ANR	6392571	Statement	1L	84:22:1882:1883	6392527	7	True				
ANR	6392572	Statement	L	84:24:1884:1884	6392527	8	True				
ANR	6392573	Statement	)	84:25:1885:1885	6392527	9	True				
ANR	6392574	CompoundStatement		6:27:122:122	6392527	10					
ANR	6392575	Statement	out	85:4:1893:1895	6392527	0	True				
ANR	6392576	Statement	=	85:8:1897:1897	6392527	1	True				
ANR	6392577	Statement	r_str_appendf	85:10:1899:1911	6392527	2	True				
ANR	6392578	Statement	(	85:24:1913:1913	6392527	3	True				
ANR	6392579	Statement	out	85:25:1914:1916	6392527	4	True				
ANR	6392580	Statement	","	85:28:1917:1917	6392527	5	True				
ANR	6392581	Statement	"""0x%"""	85:30:1919:1923	6392527	6	True				
ANR	6392582	Statement	PFMT64x	85:35:1924:1930	6392527	7	True				
ANR	6392583	Statement	","	85:42:1931:1931	6392527	8	True				
ANR	6392584	Statement	value	85:44:1933:1937	6392527	9	True				
ANR	6392585	Statement	->	85:49:1938:1939	6392527	10	True				
ANR	6392586	Statement	imm	85:51:1940:1942	6392527	11	True				
ANR	6392587	Statement	)	85:54:1943:1943	6392527	12	True				
ANR	6392588	ExpressionStatement		85:55:1944:1944	6392527	13	True				
ANR	6392589	ElseStatement	else		6392527	0					
ANR	6392590	CompoundStatement		8:10:191:191	6392527	0					
ANR	6392591	ExpressionStatement	"out = r_str_append ( out , ""-1"" )"	87:4:1962:1992	6392527	0	True				
ANR	6392592	AssignmentExpression	"out = r_str_append ( out , ""-1"" )"		6392527	0		=			
ANR	6392593	Identifier	out		6392527	0					
ANR	6392594	CallExpression	"r_str_append ( out , ""-1"" )"		6392527	1					
ANR	6392595	Callee	r_str_append		6392527	0					
ANR	6392596	Identifier	r_str_append		6392527	0					
ANR	6392597	ArgumentList	out		6392527	1					
ANR	6392598	Argument	out		6392527	0					
ANR	6392599	Identifier	out		6392527	0					
ANR	6392600	Argument	"""-1"""		6392527	1					
ANR	6392601	PrimaryExpression	"""-1"""		6392527	0					
ANR	6392602	ElseStatement	else		6392527	0					
ANR	6392603	CompoundStatement		11:9:243:243	6392527	0					
ANR	6392604	IfStatement	if ( value -> memref )		6392527	0					
ANR	6392605	Condition	value -> memref	90:7:2017:2029	6392527	0	True				
ANR	6392606	PtrMemberAccess	value -> memref		6392527	0					
ANR	6392607	Identifier	value		6392527	0					
ANR	6392608	Identifier	memref		6392527	1					
ANR	6392609	CompoundStatement		12:22:267:267	6392527	1					
ANR	6392610	SwitchStatement	switch ( value -> memref )		6392527	0					
ANR	6392611	Condition	value -> memref	91:12:2046:2058	6392527	0	True				
ANR	6392612	PtrMemberAccess	value -> memref		6392527	0					
ANR	6392613	Identifier	value		6392527	0					
ANR	6392614	Identifier	memref		6392527	1					
ANR	6392615	CompoundStatement		13:27:296:296	6392527	1					
ANR	6392616	Label	case 1 :	92:4:2067:2073	6392527	0	True				
ANR	6392617	ExpressionStatement	"out = r_str_append ( out , ""(char)"" )"	92:12:2075:2109	6392527	1	True				
ANR	6392618	AssignmentExpression	"out = r_str_append ( out , ""(char)"" )"		6392527	0		=			
ANR	6392619	Identifier	out		6392527	0					
ANR	6392620	CallExpression	"r_str_append ( out , ""(char)"" )"		6392527	1					
ANR	6392621	Callee	r_str_append		6392527	0					
ANR	6392622	Identifier	r_str_append		6392527	0					
ANR	6392623	ArgumentList	out		6392527	1					
ANR	6392624	Argument	out		6392527	0					
ANR	6392625	Identifier	out		6392527	0					
ANR	6392626	Argument	"""(char)"""		6392527	1					
ANR	6392627	PrimaryExpression	"""(char)"""		6392527	0					
ANR	6392628	BreakStatement	break ;	92:48:2111:2116	6392527	2	True				
ANR	6392629	Label	case 2 :	93:4:2122:2128	6392527	3	True				
ANR	6392630	ExpressionStatement	"out = r_str_append ( out , ""(short)"" )"	93:12:2130:2165	6392527	4	True				
ANR	6392631	AssignmentExpression	"out = r_str_append ( out , ""(short)"" )"		6392527	0		=			
ANR	6392632	Identifier	out		6392527	0					
ANR	6392633	CallExpression	"r_str_append ( out , ""(short)"" )"		6392527	1					
ANR	6392634	Callee	r_str_append		6392527	0					
ANR	6392635	Identifier	r_str_append		6392527	0					
ANR	6392636	ArgumentList	out		6392527	1					
ANR	6392637	Argument	out		6392527	0					
ANR	6392638	Identifier	out		6392527	0					
ANR	6392639	Argument	"""(short)"""		6392527	1					
ANR	6392640	PrimaryExpression	"""(short)"""		6392527	0					
ANR	6392641	BreakStatement	break ;	93:49:2167:2172	6392527	5	True				
ANR	6392642	Label	case 4 :	94:4:2178:2184	6392527	6	True				
ANR	6392643	ExpressionStatement	"out = r_str_append ( out , ""(word)"" )"	94:12:2186:2220	6392527	7	True				
ANR	6392644	AssignmentExpression	"out = r_str_append ( out , ""(word)"" )"		6392527	0		=			
ANR	6392645	Identifier	out		6392527	0					
ANR	6392646	CallExpression	"r_str_append ( out , ""(word)"" )"		6392527	1					
ANR	6392647	Callee	r_str_append		6392527	0					
ANR	6392648	Identifier	r_str_append		6392527	0					
ANR	6392649	ArgumentList	out		6392527	1					
ANR	6392650	Argument	out		6392527	0					
ANR	6392651	Identifier	out		6392527	0					
ANR	6392652	Argument	"""(word)"""		6392527	1					
ANR	6392653	PrimaryExpression	"""(word)"""		6392527	0					
ANR	6392654	BreakStatement	break ;	94:48:2222:2227	6392527	8	True				
ANR	6392655	Label	case 8 :	95:4:2233:2239	6392527	9	True				
ANR	6392656	ExpressionStatement	"out = r_str_append ( out , ""(dword)"" )"	95:12:2241:2276	6392527	10	True				
ANR	6392657	AssignmentExpression	"out = r_str_append ( out , ""(dword)"" )"		6392527	0		=			
ANR	6392658	Identifier	out		6392527	0					
ANR	6392659	CallExpression	"r_str_append ( out , ""(dword)"" )"		6392527	1					
ANR	6392660	Callee	r_str_append		6392527	0					
ANR	6392661	Identifier	r_str_append		6392527	0					
ANR	6392662	ArgumentList	out		6392527	1					
ANR	6392663	Argument	out		6392527	0					
ANR	6392664	Identifier	out		6392527	0					
ANR	6392665	Argument	"""(dword)"""		6392527	1					
ANR	6392666	PrimaryExpression	"""(dword)"""		6392527	0					
ANR	6392667	BreakStatement	break ;	95:49:2278:2283	6392527	11	True				
ANR	6392668	ExpressionStatement	"out = r_str_append ( out , ""["" )"	97:4:2295:2324	6392527	1	True				
ANR	6392669	AssignmentExpression	"out = r_str_append ( out , ""["" )"		6392527	0		=			
ANR	6392670	Identifier	out		6392527	0					
ANR	6392671	CallExpression	"r_str_append ( out , ""["" )"		6392527	1					
ANR	6392672	Callee	r_str_append		6392527	0					
ANR	6392673	Identifier	r_str_append		6392527	0					
ANR	6392674	ArgumentList	out		6392527	1					
ANR	6392675	Argument	out		6392527	0					
ANR	6392676	Identifier	out		6392527	0					
ANR	6392677	Argument	"""["""		6392527	1					
ANR	6392678	PrimaryExpression	"""["""		6392527	0					
ANR	6392679	IfStatement	if ( value -> mul )		6392527	1					
ANR	6392680	Condition	value -> mul	99:7:2338:2347	6392527	0	True				
ANR	6392681	PtrMemberAccess	value -> mul		6392527	0					
ANR	6392682	Identifier	value		6392527	0					
ANR	6392683	Identifier	mul		6392527	1					
ANR	6392684	CompoundStatement		21:19:585:585	6392527	1					
ANR	6392685	ExpressionStatement	"out = r_str_appendf ( out , ""%d*"" , value -> mul )"	100:4:2356:2400	6392527	0	True				
ANR	6392686	AssignmentExpression	"out = r_str_appendf ( out , ""%d*"" , value -> mul )"		6392527	0		=			
ANR	6392687	Identifier	out		6392527	0					
ANR	6392688	CallExpression	"r_str_appendf ( out , ""%d*"" , value -> mul )"		6392527	1					
ANR	6392689	Callee	r_str_appendf		6392527	0					
ANR	6392690	Identifier	r_str_appendf		6392527	0					
ANR	6392691	ArgumentList	out		6392527	1					
ANR	6392692	Argument	out		6392527	0					
ANR	6392693	Identifier	out		6392527	0					
ANR	6392694	Argument	"""%d*"""		6392527	1					
ANR	6392695	PrimaryExpression	"""%d*"""		6392527	0					
ANR	6392696	Argument	value -> mul		6392527	2					
ANR	6392697	PtrMemberAccess	value -> mul		6392527	0					
ANR	6392698	Identifier	value		6392527	0					
ANR	6392699	Identifier	mul		6392527	1					
ANR	6392700	IfStatement	if ( value -> reg )		6392527	2					
ANR	6392701	Condition	value -> reg	102:7:2414:2423	6392527	0	True				
ANR	6392702	PtrMemberAccess	value -> reg		6392527	0					
ANR	6392703	Identifier	value		6392527	0					
ANR	6392704	Identifier	reg		6392527	1					
ANR	6392705	CompoundStatement		24:19:661:661	6392527	1					
ANR	6392706	ExpressionStatement	"out = r_str_appendf ( out , ""%s"" , value -> reg -> name )"	103:4:2432:2481	6392527	0	True				
ANR	6392707	AssignmentExpression	"out = r_str_appendf ( out , ""%s"" , value -> reg -> name )"		6392527	0		=			
ANR	6392708	Identifier	out		6392527	0					
ANR	6392709	CallExpression	"r_str_appendf ( out , ""%s"" , value -> reg -> name )"		6392527	1					
ANR	6392710	Callee	r_str_appendf		6392527	0					
ANR	6392711	Identifier	r_str_appendf		6392527	0					
ANR	6392712	ArgumentList	out		6392527	1					
ANR	6392713	Argument	out		6392527	0					
ANR	6392714	Identifier	out		6392527	0					
ANR	6392715	Argument	"""%s"""		6392527	1					
ANR	6392716	PrimaryExpression	"""%s"""		6392527	0					
ANR	6392717	Argument	value -> reg -> name		6392527	2					
ANR	6392718	PtrMemberAccess	value -> reg -> name		6392527	0					
ANR	6392719	PtrMemberAccess	value -> reg		6392527	0					
ANR	6392720	Identifier	value		6392527	0					
ANR	6392721	Identifier	reg		6392527	1					
ANR	6392722	Identifier	name		6392527	1					
ANR	6392723	IfStatement	if ( value -> regdelta )		6392527	3					
ANR	6392724	Condition	value -> regdelta	105:7:2495:2509	6392527	0	True				
ANR	6392725	PtrMemberAccess	value -> regdelta		6392527	0					
ANR	6392726	Identifier	value		6392527	0					
ANR	6392727	Identifier	regdelta		6392527	1					
ANR	6392728	CompoundStatement		27:24:747:747	6392527	1					
ANR	6392729	ExpressionStatement	"out = r_str_appendf ( out , ""+%s"" , value -> regdelta -> name )"	106:4:2518:2573	6392527	0	True				
ANR	6392730	AssignmentExpression	"out = r_str_appendf ( out , ""+%s"" , value -> regdelta -> name )"		6392527	0		=			
ANR	6392731	Identifier	out		6392527	0					
ANR	6392732	CallExpression	"r_str_appendf ( out , ""+%s"" , value -> regdelta -> name )"		6392527	1					
ANR	6392733	Callee	r_str_appendf		6392527	0					
ANR	6392734	Identifier	r_str_appendf		6392527	0					
ANR	6392735	ArgumentList	out		6392527	1					
ANR	6392736	Argument	out		6392527	0					
ANR	6392737	Identifier	out		6392527	0					
ANR	6392738	Argument	"""+%s"""		6392527	1					
ANR	6392739	PrimaryExpression	"""+%s"""		6392527	0					
ANR	6392740	Argument	value -> regdelta -> name		6392527	2					
ANR	6392741	PtrMemberAccess	value -> regdelta -> name		6392527	0					
ANR	6392742	PtrMemberAccess	value -> regdelta		6392527	0					
ANR	6392743	Identifier	value		6392527	0					
ANR	6392744	Identifier	regdelta		6392527	1					
ANR	6392745	Identifier	name		6392527	1					
ANR	6392746	IfStatement	if ( value -> base != 0 )		6392527	4					
ANR	6392747	Condition	value -> base != 0	108:7:2587:2602	6392527	0	True				
ANR	6392748	EqualityExpression	value -> base != 0		6392527	0		!=			
ANR	6392749	PtrMemberAccess	value -> base		6392527	0					
ANR	6392750	Identifier	value		6392527	0					
ANR	6392751	Identifier	base		6392527	1					
ANR	6392752	PrimaryExpression	0		6392527	1					
ANR	6392753	CompoundStatement		30:25:840:840	6392527	1					
ANR	6392754	Statement	out	109:4:2611:2613	6392527	0	True				
ANR	6392755	Statement	=	109:8:2615:2615	6392527	1	True				
ANR	6392756	Statement	r_str_appendf	109:10:2617:2629	6392527	2	True				
ANR	6392757	Statement	(	109:24:2631:2631	6392527	3	True				
ANR	6392758	Statement	out	109:25:2632:2634	6392527	4	True				
ANR	6392759	Statement	","	109:28:2635:2635	6392527	5	True				
ANR	6392760	Statement	"""0x%"""	109:30:2637:2641	6392527	6	True				
ANR	6392761	Statement	PFMT64x	109:36:2643:2649	6392527	7	True				
ANR	6392762	Statement	","	109:43:2650:2650	6392527	8	True				
ANR	6392763	Statement	value	109:45:2652:2656	6392527	9	True				
ANR	6392764	Statement	->	109:50:2657:2658	6392527	10	True				
ANR	6392765	Statement	base	109:52:2659:2662	6392527	11	True				
ANR	6392766	Statement	)	109:56:2663:2663	6392527	12	True				
ANR	6392767	ExpressionStatement		109:57:2664:2664	6392527	13	True				
ANR	6392768	IfStatement	if ( value -> delta > 0 )		6392527	5					
ANR	6392769	Condition	value -> delta > 0	111:7:2678:2693	6392527	0	True				
ANR	6392770	RelationalExpression	value -> delta > 0		6392527	0		>			
ANR	6392771	PtrMemberAccess	value -> delta		6392527	0					
ANR	6392772	Identifier	value		6392527	0					
ANR	6392773	Identifier	delta		6392527	1					
ANR	6392774	PrimaryExpression	0		6392527	1					
ANR	6392775	CompoundStatement		33:25:931:931	6392527	1					
ANR	6392776	Statement	out	112:4:2702:2704	6392527	0	True				
ANR	6392777	Statement	=	112:8:2706:2706	6392527	1	True				
ANR	6392778	Statement	r_str_appendf	112:10:2708:2720	6392527	2	True				
ANR	6392779	Statement	(	112:24:2722:2722	6392527	3	True				
ANR	6392780	Statement	out	112:25:2723:2725	6392527	4	True				
ANR	6392781	Statement	","	112:28:2726:2726	6392527	5	True				
ANR	6392782	Statement	"""+0x%"""	112:30:2728:2733	6392527	6	True				
ANR	6392783	Statement	PFMT64x	112:37:2735:2741	6392527	7	True				
ANR	6392784	Statement	","	112:44:2742:2742	6392527	8	True				
ANR	6392785	Statement	value	112:46:2744:2748	6392527	9	True				
ANR	6392786	Statement	->	112:51:2749:2750	6392527	10	True				
ANR	6392787	Statement	delta	112:53:2751:2755	6392527	11	True				
ANR	6392788	Statement	)	112:58:2756:2756	6392527	12	True				
ANR	6392789	ExpressionStatement		112:59:2757:2757	6392527	13	True				
ANR	6392790	ElseStatement	else		6392527	0					
ANR	6392791	IfStatement	if ( value -> delta < 0 )		6392527	0					
ANR	6392792	Condition	value -> delta < 0	113:14:2773:2788	6392527	0	True				
ANR	6392793	RelationalExpression	value -> delta < 0		6392527	0		<			
ANR	6392794	PtrMemberAccess	value -> delta		6392527	0					
ANR	6392795	Identifier	value		6392527	0					
ANR	6392796	Identifier	delta		6392527	1					
ANR	6392797	PrimaryExpression	0		6392527	1					
ANR	6392798	CompoundStatement		35:32:1026:1026	6392527	1					
ANR	6392799	Statement	out	114:4:2797:2799	6392527	0	True				
ANR	6392800	Statement	=	114:8:2801:2801	6392527	1	True				
ANR	6392801	Statement	r_str_appendf	114:10:2803:2815	6392527	2	True				
ANR	6392802	Statement	(	114:24:2817:2817	6392527	3	True				
ANR	6392803	Statement	out	114:25:2818:2820	6392527	4	True				
ANR	6392804	Statement	","	114:28:2821:2821	6392527	5	True				
ANR	6392805	Statement	"""-0x%"""	114:30:2823:2828	6392527	6	True				
ANR	6392806	Statement	PFMT64x	114:37:2830:2836	6392527	7	True				
ANR	6392807	Statement	","	114:44:2837:2837	6392527	8	True				
ANR	6392808	Statement	-	114:46:2839:2839	6392527	9	True				
ANR	6392809	Statement	value	114:47:2840:2844	6392527	10	True				
ANR	6392810	Statement	->	114:52:2845:2846	6392527	11	True				
ANR	6392811	Statement	delta	114:54:2847:2851	6392527	12	True				
ANR	6392812	Statement	)	114:59:2852:2852	6392527	13	True				
ANR	6392813	ExpressionStatement		114:60:2853:2853	6392527	14	True				
ANR	6392814	IfStatement	if ( value -> memref )		6392527	6					
ANR	6392815	Condition	value -> memref	116:7:2867:2879	6392527	0	True				
ANR	6392816	PtrMemberAccess	value -> memref		6392527	0					
ANR	6392817	Identifier	value		6392527	0					
ANR	6392818	Identifier	memref		6392527	1					
ANR	6392819	CompoundStatement		38:22:1117:1117	6392527	1					
ANR	6392820	ExpressionStatement	"out = r_str_append ( out , ""]"" )"	117:4:2888:2917	6392527	0	True				
ANR	6392821	AssignmentExpression	"out = r_str_append ( out , ""]"" )"		6392527	0		=			
ANR	6392822	Identifier	out		6392527	0					
ANR	6392823	CallExpression	"r_str_append ( out , ""]"" )"		6392527	1					
ANR	6392824	Callee	r_str_append		6392527	0					
ANR	6392825	Identifier	r_str_append		6392527	0					
ANR	6392826	ArgumentList	out		6392527	1					
ANR	6392827	Argument	out		6392527	0					
ANR	6392828	Identifier	out		6392527	0					
ANR	6392829	Argument	"""]"""		6392527	1					
ANR	6392830	PrimaryExpression	"""]"""		6392527	0					
ANR	6392831	ReturnStatement	return out ;	121:1:2932:2942	6392527	2	True				
ANR	6392832	Identifier	out		6392527	0					
ANR	6392833	ReturnType	R_API char *		6392527	1					
ANR	6392834	Identifier	r_anal_value_to_string		6392527	2					
ANR	6392835	ParameterList	RAnalValue * value		6392527	3					
ANR	6392836	Parameter	RAnalValue * value	79:36:1745:1761	6392527	0	True				
ANR	6392837	ParameterType	RAnalValue *		6392527	0					
ANR	6392838	Identifier	value		6392527	1					
ANR	6392839	CFGEntryNode	ENTRY		6392527		True				
ANR	6392840	CFGExitNode	EXIT		6392527		True				
ANR	6392841	Symbol	r_str_append		6392527						
ANR	6392842	Symbol	* value -> regdelta		6392527						
ANR	6392843	Symbol	NULL		6392527						
ANR	6392844	Symbol	* * value		6392527						
ANR	6392845	Symbol	value -> mul		6392527						
ANR	6392846	Symbol	value -> regdelta -> name		6392527						
ANR	6392847	Symbol	value -> base		6392527						
ANR	6392848	Symbol	out		6392527						
ANR	6392849	Symbol	* value		6392527						
ANR	6392850	Symbol	r_str_appendf		6392527						
ANR	6392851	Symbol	value -> memref		6392527						
ANR	6392852	Symbol	* value -> reg		6392527						
ANR	6392853	Symbol	value -> reg -> name		6392527						
ANR	6392854	Symbol	value -> reg		6392527						
ANR	6392855	Symbol	value -> delta		6392527						
ANR	6392856	Symbol	value -> regdelta		6392527						
ANR	6392857	Symbol	value		6392527						
ANR	6392858	Symbol	r_str_new		6392527						
