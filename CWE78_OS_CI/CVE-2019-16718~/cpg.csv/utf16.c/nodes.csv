command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6384632	File	data/converged/CVE-2019-16718~_radare2/utf16.c								
ANR	6384633	Function	r_utf16le_decode	7:0:142:608							
ANR	6384634	FunctionDef	"r_utf16le_decode (const ut8 * ptr , int ptrlen , RRune * ch)"		6384633	0					
ANR	6384635	CompoundStatement		7:66:208:608	6384633	0					
ANR	6384636	IfStatement	if ( ptrlen < 1 )		6384633	0					
ANR	6384637	Condition	ptrlen < 1	8:5:215:224	6384633	0	True				
ANR	6384638	RelationalExpression	ptrlen < 1		6384633	0		<			
ANR	6384639	Identifier	ptrlen		6384633	0					
ANR	6384640	PrimaryExpression	1		6384633	1					
ANR	6384641	CompoundStatement		2:17:18:18	6384633	1					
ANR	6384642	ReturnStatement	return 0 ;	9:2:231:239	6384633	0	True				
ANR	6384643	PrimaryExpression	0		6384633	0					
ANR	6384644	IfStatement	if ( ptrlen > 3 && ( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc )		6384633	1					
ANR	6384645	Condition	ptrlen > 3 && ( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc	11:5:249:312	6384633	0	True				
ANR	6384646	AndExpression	ptrlen > 3 && ( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc		6384633	0		&&			
ANR	6384647	RelationalExpression	ptrlen > 3		6384633	0		>			
ANR	6384648	Identifier	ptrlen		6384633	0					
ANR	6384649	PrimaryExpression	3		6384633	1					
ANR	6384650	AndExpression	( ptr [ 1 ] & 0xdc ) == 0xd8 && ( ptr [ 3 ] & 0xdc ) == 0xdc		6384633	1		&&			
ANR	6384651	EqualityExpression	( ptr [ 1 ] & 0xdc ) == 0xd8		6384633	0		==			
ANR	6384652	BitAndExpression	ptr [ 1 ] & 0xdc		6384633	0		&			
ANR	6384653	ArrayIndexing	ptr [ 1 ]		6384633	0					
ANR	6384654	Identifier	ptr		6384633	0					
ANR	6384655	PrimaryExpression	1		6384633	1					
ANR	6384656	PrimaryExpression	0xdc		6384633	1					
ANR	6384657	PrimaryExpression	0xd8		6384633	1					
ANR	6384658	EqualityExpression	( ptr [ 3 ] & 0xdc ) == 0xdc		6384633	1		==			
ANR	6384659	BitAndExpression	ptr [ 3 ] & 0xdc		6384633	0		&			
ANR	6384660	ArrayIndexing	ptr [ 3 ]		6384633	0					
ANR	6384661	Identifier	ptr		6384633	0					
ANR	6384662	PrimaryExpression	3		6384633	1					
ANR	6384663	PrimaryExpression	0xdc		6384633	1					
ANR	6384664	PrimaryExpression	0xdc		6384633	1					
ANR	6384665	CompoundStatement		5:71:106:106	6384633	1					
ANR	6384666	IfStatement	if ( ch )		6384633	0					
ANR	6384667	Condition	ch	12:6:323:324	6384633	0	True				
ANR	6384668	Identifier	ch		6384633	0					
ANR	6384669	CompoundStatement		6:10:118:118	6384633	1					
ANR	6384670	ExpressionStatement	* ch = ( ( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ] ) + 0x10000	13:3:332:412	6384633	0	True				
ANR	6384671	AssignmentExpression	* ch = ( ( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ] ) + 0x10000		6384633	0		=			
ANR	6384672	UnaryOperationExpression	* ch		6384633	0					
ANR	6384673	UnaryOperator	*		6384633	0					
ANR	6384674	Identifier	ch		6384633	1					
ANR	6384675	AdditiveExpression	( ( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ] ) + 0x10000		6384633	1		+			
ANR	6384676	InclusiveOrExpression	( ptr [ 1 ] & 3 ) << 24 | ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ]		6384633	0		|			
ANR	6384677	ShiftExpression	( ptr [ 1 ] & 3 ) << 24		6384633	0		<<			
ANR	6384678	BitAndExpression	ptr [ 1 ] & 3		6384633	0		&			
ANR	6384679	ArrayIndexing	ptr [ 1 ]		6384633	0					
ANR	6384680	Identifier	ptr		6384633	0					
ANR	6384681	PrimaryExpression	1		6384633	1					
ANR	6384682	PrimaryExpression	3		6384633	1					
ANR	6384683	PrimaryExpression	24		6384633	1					
ANR	6384684	InclusiveOrExpression	ptr [ 0 ] << 16 | ( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ]		6384633	1		|			
ANR	6384685	ShiftExpression	ptr [ 0 ] << 16		6384633	0		<<			
ANR	6384686	ArrayIndexing	ptr [ 0 ]		6384633	0					
ANR	6384687	Identifier	ptr		6384633	0					
ANR	6384688	PrimaryExpression	0		6384633	1					
ANR	6384689	PrimaryExpression	16		6384633	1					
ANR	6384690	InclusiveOrExpression	( ptr [ 3 ] & 3 ) << 8 | ptr [ 2 ]		6384633	1		|			
ANR	6384691	ShiftExpression	( ptr [ 3 ] & 3 ) << 8		6384633	0		<<			
ANR	6384692	BitAndExpression	ptr [ 3 ] & 3		6384633	0		&			
ANR	6384693	ArrayIndexing	ptr [ 3 ]		6384633	0					
ANR	6384694	Identifier	ptr		6384633	0					
ANR	6384695	PrimaryExpression	3		6384633	1					
ANR	6384696	PrimaryExpression	3		6384633	1					
ANR	6384697	PrimaryExpression	8		6384633	1					
ANR	6384698	ArrayIndexing	ptr [ 2 ]		6384633	1					
ANR	6384699	Identifier	ptr		6384633	0					
ANR	6384700	PrimaryExpression	2		6384633	1					
ANR	6384701	PrimaryExpression	0x10000		6384633	1					
ANR	6384702	ReturnStatement	return 4 ;	15:2:420:428	6384633	1	True				
ANR	6384703	PrimaryExpression	4		6384633	0					
ANR	6384704	IfStatement	if ( ptrlen > 1 && ptr [ 1 ] )		6384633	2					
ANR	6384705	Condition	ptrlen > 1 && ptr [ 1 ]	17:5:438:457	6384633	0	True				
ANR	6384706	AndExpression	ptrlen > 1 && ptr [ 1 ]		6384633	0		&&			
ANR	6384707	RelationalExpression	ptrlen > 1		6384633	0		>			
ANR	6384708	Identifier	ptrlen		6384633	0					
ANR	6384709	PrimaryExpression	1		6384633	1					
ANR	6384710	ArrayIndexing	ptr [ 1 ]		6384633	1					
ANR	6384711	Identifier	ptr		6384633	0					
ANR	6384712	PrimaryExpression	1		6384633	1					
ANR	6384713	CompoundStatement		11:27:251:251	6384633	1					
ANR	6384714	IfStatement	if ( ch )		6384633	0					
ANR	6384715	Condition	ch	18:6:468:469	6384633	0	True				
ANR	6384716	Identifier	ch		6384633	0					
ANR	6384717	CompoundStatement		12:10:263:263	6384633	1					
ANR	6384718	ExpressionStatement	* ch = ptr [ 1 ] << 8 | ptr [ 0 ]	19:3:477:503	6384633	0	True				
ANR	6384719	AssignmentExpression	* ch = ptr [ 1 ] << 8 | ptr [ 0 ]		6384633	0		=			
ANR	6384720	UnaryOperationExpression	* ch		6384633	0					
ANR	6384721	UnaryOperator	*		6384633	0					
ANR	6384722	Identifier	ch		6384633	1					
ANR	6384723	InclusiveOrExpression	ptr [ 1 ] << 8 | ptr [ 0 ]		6384633	1		|			
ANR	6384724	ShiftExpression	ptr [ 1 ] << 8		6384633	0		<<			
ANR	6384725	ArrayIndexing	ptr [ 1 ]		6384633	0					
ANR	6384726	Identifier	ptr		6384633	0					
ANR	6384727	PrimaryExpression	1		6384633	1					
ANR	6384728	PrimaryExpression	8		6384633	1					
ANR	6384729	ArrayIndexing	ptr [ 0 ]		6384633	1					
ANR	6384730	Identifier	ptr		6384633	0					
ANR	6384731	PrimaryExpression	0		6384633	1					
ANR	6384732	ReturnStatement	return 2 ;	21:2:511:519	6384633	1	True				
ANR	6384733	PrimaryExpression	2		6384633	0					
ANR	6384734	IfStatement	if ( ptrlen > 1 )		6384633	3					
ANR	6384735	Condition	ptrlen > 1	23:5:529:538	6384633	0	True				
ANR	6384736	RelationalExpression	ptrlen > 1		6384633	0		>			
ANR	6384737	Identifier	ptrlen		6384633	0					
ANR	6384738	PrimaryExpression	1		6384633	1					
ANR	6384739	CompoundStatement		17:17:332:332	6384633	1					
ANR	6384740	IfStatement	if ( ch )		6384633	0					
ANR	6384741	Condition	ch	24:6:549:550	6384633	0	True				
ANR	6384742	Identifier	ch		6384633	0					
ANR	6384743	CompoundStatement		18:10:344:344	6384633	1					
ANR	6384744	ExpressionStatement	* ch = ( ut32 ) ptr [ 0 ]	25:3:558:576	6384633	0	True				
ANR	6384745	AssignmentExpression	* ch = ( ut32 ) ptr [ 0 ]		6384633	0		=			
ANR	6384746	UnaryOperationExpression	* ch		6384633	0					
ANR	6384747	UnaryOperator	*		6384633	0					
ANR	6384748	Identifier	ch		6384633	1					
ANR	6384749	CastExpression	( ut32 ) ptr [ 0 ]		6384633	1					
ANR	6384750	CastTarget	ut32		6384633	0					
ANR	6384751	ArrayIndexing	ptr [ 0 ]		6384633	1					
ANR	6384752	Identifier	ptr		6384633	0					
ANR	6384753	PrimaryExpression	0		6384633	1					
ANR	6384754	ReturnStatement	return 1 ;	27:2:584:592	6384633	1	True				
ANR	6384755	PrimaryExpression	1		6384633	0					
ANR	6384756	ReturnStatement	return 0 ;	29:1:598:606	6384633	4	True				
ANR	6384757	PrimaryExpression	0		6384633	0					
ANR	6384758	ReturnType	R_API int		6384633	1					
ANR	6384759	Identifier	r_utf16le_decode		6384633	2					
ANR	6384760	ParameterList	"const ut8 * ptr , int ptrlen , RRune * ch"		6384633	3					
ANR	6384761	Parameter	const ut8 * ptr	7:27:169:182	6384633	0	True				
ANR	6384762	ParameterType	const ut8 *		6384633	0					
ANR	6384763	Identifier	ptr		6384633	1					
ANR	6384764	Parameter	int ptrlen	7:43:185:194	6384633	1	True				
ANR	6384765	ParameterType	int		6384633	0					
ANR	6384766	Identifier	ptrlen		6384633	1					
ANR	6384767	Parameter	RRune * ch	7:55:197:205	6384633	2	True				
ANR	6384768	ParameterType	RRune *		6384633	0					
ANR	6384769	Identifier	ch		6384633	1					
ANR	6384770	CFGEntryNode	ENTRY		6384633		True				
ANR	6384771	CFGExitNode	EXIT		6384633		True				
ANR	6384772	Symbol	ptrlen		6384633						
ANR	6384773	Symbol	ch		6384633						
ANR	6384774	Symbol	* ptr		6384633						
ANR	6384775	Symbol	* ch		6384633						
ANR	6384776	Symbol	ptr		6384633						
ANR	6384777	Function	r_utf16le_encode	33:0:661:1052							
ANR	6384778	FunctionDef	"r_utf16le_encode (ut8 * ptr , RRune ch)"		6384777	0					
ANR	6384779	CompoundStatement		33:47:708:1052	6384777	0					
ANR	6384780	IfStatement	if ( ch < 0x10000 )		6384777	0					
ANR	6384781	Condition	ch < 0x10000	34:5:715:726	6384777	0	True				
ANR	6384782	RelationalExpression	ch < 0x10000		6384777	0		<			
ANR	6384783	Identifier	ch		6384777	0					
ANR	6384784	PrimaryExpression	0x10000		6384777	1					
ANR	6384785	CompoundStatement		2:19:20:20	6384777	1					
ANR	6384786	ExpressionStatement	ptr [ 0 ] = ch & 0xff	35:2:733:751	6384777	0	True				
ANR	6384787	AssignmentExpression	ptr [ 0 ] = ch & 0xff		6384777	0		=			
ANR	6384788	ArrayIndexing	ptr [ 0 ]		6384777	0					
ANR	6384789	Identifier	ptr		6384777	0					
ANR	6384790	PrimaryExpression	0		6384777	1					
ANR	6384791	BitAndExpression	ch & 0xff		6384777	1		&			
ANR	6384792	Identifier	ch		6384777	0					
ANR	6384793	PrimaryExpression	0xff		6384777	1					
ANR	6384794	ExpressionStatement	ptr [ 1 ] = ch >> 8 & 0xff	36:2:755:778	6384777	1	True				
ANR	6384795	AssignmentExpression	ptr [ 1 ] = ch >> 8 & 0xff		6384777	0		=			
ANR	6384796	ArrayIndexing	ptr [ 1 ]		6384777	0					
ANR	6384797	Identifier	ptr		6384777	0					
ANR	6384798	PrimaryExpression	1		6384777	1					
ANR	6384799	BitAndExpression	ch >> 8 & 0xff		6384777	1		&			
ANR	6384800	ShiftExpression	ch >> 8		6384777	0		>>			
ANR	6384801	Identifier	ch		6384777	0					
ANR	6384802	PrimaryExpression	8		6384777	1					
ANR	6384803	PrimaryExpression	0xff		6384777	1					
ANR	6384804	ReturnStatement	return 2 ;	37:2:782:790	6384777	2	True				
ANR	6384805	PrimaryExpression	2		6384777	0					
ANR	6384806	IfStatement	if ( ch < 0x110000 )		6384777	1					
ANR	6384807	Condition	ch < 0x110000	39:5:800:812	6384777	0	True				
ANR	6384808	RelationalExpression	ch < 0x110000		6384777	0		<			
ANR	6384809	Identifier	ch		6384777	0					
ANR	6384810	PrimaryExpression	0x110000		6384777	1					
ANR	6384811	CompoundStatement		8:2:110:125	6384777	1					
ANR	6384812	IdentifierDeclStatement	"RRune high , low ;"	40:2:819:834	6384777	0	True				
ANR	6384813	IdentifierDecl	high		6384777	0					
ANR	6384814	IdentifierDeclType	RRune		6384777	0					
ANR	6384815	Identifier	high		6384777	1					
ANR	6384816	IdentifierDecl	low		6384777	1					
ANR	6384817	IdentifierDeclType	RRune		6384777	0					
ANR	6384818	Identifier	low		6384777	1					
ANR	6384819	ExpressionStatement	ch -= 0x10000	41:2:838:851	6384777	1	True				
ANR	6384820	AssignmentExpression	ch -= 0x10000		6384777	0		-=			
ANR	6384821	Identifier	ch		6384777	0					
ANR	6384822	PrimaryExpression	0x10000		6384777	1					
ANR	6384823	ExpressionStatement	high = 0xd800 + ( ch >> 10 & 0x3ff )	42:2:855:889	6384777	2	True				
ANR	6384824	AssignmentExpression	high = 0xd800 + ( ch >> 10 & 0x3ff )		6384777	0		=			
ANR	6384825	Identifier	high		6384777	0					
ANR	6384826	AdditiveExpression	0xd800 + ( ch >> 10 & 0x3ff )		6384777	1		+			
ANR	6384827	PrimaryExpression	0xd800		6384777	0					
ANR	6384828	BitAndExpression	ch >> 10 & 0x3ff		6384777	1		&			
ANR	6384829	ShiftExpression	ch >> 10		6384777	0		>>			
ANR	6384830	Identifier	ch		6384777	0					
ANR	6384831	PrimaryExpression	10		6384777	1					
ANR	6384832	PrimaryExpression	0x3ff		6384777	1					
ANR	6384833	ExpressionStatement	low = 0xdc00 + ( ch & 0x3ff )	43:2:893:920	6384777	3	True				
ANR	6384834	AssignmentExpression	low = 0xdc00 + ( ch & 0x3ff )		6384777	0		=			
ANR	6384835	Identifier	low		6384777	0					
ANR	6384836	AdditiveExpression	0xdc00 + ( ch & 0x3ff )		6384777	1		+			
ANR	6384837	PrimaryExpression	0xdc00		6384777	0					
ANR	6384838	BitAndExpression	ch & 0x3ff		6384777	1		&			
ANR	6384839	Identifier	ch		6384777	0					
ANR	6384840	PrimaryExpression	0x3ff		6384777	1					
ANR	6384841	ExpressionStatement	ptr [ 0 ] = high & 0xff	44:2:924:944	6384777	4	True				
ANR	6384842	AssignmentExpression	ptr [ 0 ] = high & 0xff		6384777	0		=			
ANR	6384843	ArrayIndexing	ptr [ 0 ]		6384777	0					
ANR	6384844	Identifier	ptr		6384777	0					
ANR	6384845	PrimaryExpression	0		6384777	1					
ANR	6384846	BitAndExpression	high & 0xff		6384777	1		&			
ANR	6384847	Identifier	high		6384777	0					
ANR	6384848	PrimaryExpression	0xff		6384777	1					
ANR	6384849	ExpressionStatement	ptr [ 1 ] = high >> 8 & 0xff	45:2:948:973	6384777	5	True				
ANR	6384850	AssignmentExpression	ptr [ 1 ] = high >> 8 & 0xff		6384777	0		=			
ANR	6384851	ArrayIndexing	ptr [ 1 ]		6384777	0					
ANR	6384852	Identifier	ptr		6384777	0					
ANR	6384853	PrimaryExpression	1		6384777	1					
ANR	6384854	BitAndExpression	high >> 8 & 0xff		6384777	1		&			
ANR	6384855	ShiftExpression	high >> 8		6384777	0		>>			
ANR	6384856	Identifier	high		6384777	0					
ANR	6384857	PrimaryExpression	8		6384777	1					
ANR	6384858	PrimaryExpression	0xff		6384777	1					
ANR	6384859	ExpressionStatement	ptr [ 2 ] = low & 0xff	46:2:977:996	6384777	6	True				
ANR	6384860	AssignmentExpression	ptr [ 2 ] = low & 0xff		6384777	0		=			
ANR	6384861	ArrayIndexing	ptr [ 2 ]		6384777	0					
ANR	6384862	Identifier	ptr		6384777	0					
ANR	6384863	PrimaryExpression	2		6384777	1					
ANR	6384864	BitAndExpression	low & 0xff		6384777	1		&			
ANR	6384865	Identifier	low		6384777	0					
ANR	6384866	PrimaryExpression	0xff		6384777	1					
ANR	6384867	ExpressionStatement	ptr [ 3 ] = low >> 8 & 0xff	47:2:1000:1024	6384777	7	True				
ANR	6384868	AssignmentExpression	ptr [ 3 ] = low >> 8 & 0xff		6384777	0		=			
ANR	6384869	ArrayIndexing	ptr [ 3 ]		6384777	0					
ANR	6384870	Identifier	ptr		6384777	0					
ANR	6384871	PrimaryExpression	3		6384777	1					
ANR	6384872	BitAndExpression	low >> 8 & 0xff		6384777	1		&			
ANR	6384873	ShiftExpression	low >> 8		6384777	0		>>			
ANR	6384874	Identifier	low		6384777	0					
ANR	6384875	PrimaryExpression	8		6384777	1					
ANR	6384876	PrimaryExpression	0xff		6384777	1					
ANR	6384877	ReturnStatement	return 4 ;	48:2:1028:1036	6384777	8	True				
ANR	6384878	PrimaryExpression	4		6384777	0					
ANR	6384879	ReturnStatement	return 0 ;	50:1:1042:1050	6384777	2	True				
ANR	6384880	PrimaryExpression	0		6384777	0					
ANR	6384881	ReturnType	R_API int		6384777	1					
ANR	6384882	Identifier	r_utf16le_encode		6384777	2					
ANR	6384883	ParameterList	"ut8 * ptr , RRune ch"		6384777	3					
ANR	6384884	Parameter	ut8 * ptr	33:27:688:695	6384777	0	True				
ANR	6384885	ParameterType	ut8 *		6384777	0					
ANR	6384886	Identifier	ptr		6384777	1					
ANR	6384887	Parameter	RRune ch	33:37:698:705	6384777	1	True				
ANR	6384888	ParameterType	RRune		6384777	0					
ANR	6384889	Identifier	ch		6384777	1					
ANR	6384890	CFGEntryNode	ENTRY		6384777		True				
ANR	6384891	CFGExitNode	EXIT		6384777		True				
ANR	6384892	Symbol	high		6384777						
ANR	6384893	Symbol	ch		6384777						
ANR	6384894	Symbol	low		6384777						
ANR	6384895	Symbol	* ptr		6384777						
ANR	6384896	Symbol	ptr		6384777						
