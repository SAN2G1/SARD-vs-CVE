command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1182788	File	data/converged/CVE-2019-16718~_radare2/crypto_rc2.c								
ANR	1182789	DeclStmt									
ANR	1182790	Decl							const ut8	const ut8 [ 256 ]	PITABLE
ANR	1182791	ClassDef	rc2_state	27:0:1717:1777							
ANR	1182792	DeclStmt									
ANR	1182793	Decl							ut16	ut16 [ RC2_KEY_SIZE ]	ekey
ANR	1182794	DeclStmt									
ANR	1182795	Decl							int	int	key_size
ANR	1182796	Function	rc2_expandKey	34:0:1845:2659							
ANR	1182797	FunctionDef	"rc2_expandKey (struct rc2_state * state , const ut8 * key , int key_len)"		1182796	0					
ANR	1182798	CompoundStatement		34:80:1925:2659	1182796	0					
ANR	1182799	IdentifierDeclStatement	int i ;	35:1:1928:1933	1182796	0	True				
ANR	1182800	IdentifierDecl	i		1182796	0					
ANR	1182801	IdentifierDeclType	int		1182796	0					
ANR	1182802	Identifier	i		1182796	1					
ANR	1182803	IfStatement	if ( key_len < 1 || key_len > 128 )		1182796	1					
ANR	1182804	Condition	key_len < 1 || key_len > 128	37:5:1941:1968	1182796	0	True				
ANR	1182805	OrExpression	key_len < 1 || key_len > 128		1182796	0		||			
ANR	1182806	RelationalExpression	key_len < 1		1182796	0		<			
ANR	1182807	Identifier	key_len		1182796	0					
ANR	1182808	PrimaryExpression	1		1182796	1					
ANR	1182809	RelationalExpression	key_len > 128		1182796	1		>			
ANR	1182810	Identifier	key_len		1182796	0					
ANR	1182811	PrimaryExpression	128		1182796	1					
ANR	1182812	CompoundStatement		4:35:45:45	1182796	1					
ANR	1182813	ReturnStatement	return false ;	38:2:1975:1987	1182796	0	True				
ANR	1182814	Identifier	false		1182796	0					
ANR	1182815	ExpressionStatement	"memcpy ( state -> ekey , key , key_len )"	40:1:1993:2026	1182796	2	True				
ANR	1182816	CallExpression	"memcpy ( state -> ekey , key , key_len )"		1182796	0					
ANR	1182817	Callee	memcpy		1182796	0					
ANR	1182818	Identifier	memcpy		1182796	0					
ANR	1182819	ArgumentList	state -> ekey		1182796	1					
ANR	1182820	Argument	state -> ekey		1182796	0					
ANR	1182821	PtrMemberAccess	state -> ekey		1182796	0					
ANR	1182822	Identifier	state		1182796	0					
ANR	1182823	Identifier	ekey		1182796	1					
ANR	1182824	Argument	key		1182796	1					
ANR	1182825	Identifier	key		1182796	0					
ANR	1182826	Argument	key_len		1182796	2					
ANR	1182827	Identifier	key_len		1182796	0					
ANR	1182828	ForStatement	for ( i = key_len ; i < 128 ; i ++ )		1182796	3					
ANR	1182829	ForInit	i = key_len ;	43:7:2051:2062	1182796	0	True				
ANR	1182830	AssignmentExpression	i = key_len		1182796	0		=			
ANR	1182831	Identifier	i		1182796	0					
ANR	1182832	Identifier	key_len		1182796	1					
ANR	1182833	Condition	i < 128	43:20:2064:2070	1182796	1	True				
ANR	1182834	RelationalExpression	i < 128		1182796	0		<			
ANR	1182835	Identifier	i		1182796	0					
ANR	1182836	PrimaryExpression	128		1182796	1					
ANR	1182837	PostIncDecOperationExpression	i ++	43:29:2073:2075	1182796	2	True				
ANR	1182838	Identifier	i		1182796	0					
ANR	1182839	IncDec	++		1182796	1					
ANR	1182840	CompoundStatement		10:34:152:152	1182796	3					
ANR	1182841	ExpressionStatement	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255 ]	44:3:2083:2189	1182796	0	True				
ANR	1182842	AssignmentExpression	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255 ]		1182796	0		=			
ANR	1182843	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		1182796	0					
ANR	1182844	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182845	CastTarget	ut8 *		1182796	0					
ANR	1182846	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182847	Identifier	state		1182796	0					
ANR	1182848	Identifier	ekey		1182796	1					
ANR	1182849	Identifier	i		1182796	1					
ANR	1182850	ArrayIndexing	PITABLE [ ( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255 ]		1182796	1					
ANR	1182851	Identifier	PITABLE		1182796	0					
ANR	1182852	BitAndExpression	( ( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ] ) & 255		1182796	1		&			
ANR	1182853	AdditiveExpression	( ( ut8 * ) state -> ekey ) [ i - key_len ] + ( ( ut8 * ) state -> ekey ) [ i - 1 ]		1182796	0		+			
ANR	1182854	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i - key_len ]		1182796	0					
ANR	1182855	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182856	CastTarget	ut8 *		1182796	0					
ANR	1182857	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182858	Identifier	state		1182796	0					
ANR	1182859	Identifier	ekey		1182796	1					
ANR	1182860	AdditiveExpression	i - key_len		1182796	1		-			
ANR	1182861	Identifier	i		1182796	0					
ANR	1182862	Identifier	key_len		1182796	1					
ANR	1182863	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i - 1 ]		1182796	1					
ANR	1182864	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182865	CastTarget	ut8 *		1182796	0					
ANR	1182866	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182867	Identifier	state		1182796	0					
ANR	1182868	Identifier	ekey		1182796	1					
ANR	1182869	AdditiveExpression	i - 1		1182796	1		-			
ANR	1182870	Identifier	i		1182796	0					
ANR	1182871	PrimaryExpression	1		1182796	1					
ANR	1182872	PrimaryExpression	255		1182796	1					
ANR	1182873	IdentifierDeclStatement	int ekey_len = ( BITS + 7 ) >> 3 ;	47:1:2197:2227	1182796	4	True				
ANR	1182874	IdentifierDecl	ekey_len = ( BITS + 7 ) >> 3		1182796	0					
ANR	1182875	IdentifierDeclType	int		1182796	0					
ANR	1182876	Identifier	ekey_len		1182796	1					
ANR	1182877	AssignmentExpression	ekey_len = ( BITS + 7 ) >> 3		1182796	2		=			
ANR	1182878	Identifier	ekey_len		1182796	0					
ANR	1182879	ShiftExpression	( BITS + 7 ) >> 3		1182796	1		>>			
ANR	1182880	AdditiveExpression	BITS + 7		1182796	0		+			
ANR	1182881	Identifier	BITS		1182796	0					
ANR	1182882	PrimaryExpression	7		1182796	1					
ANR	1182883	PrimaryExpression	3		1182796	1					
ANR	1182884	ExpressionStatement	i = 128 - ekey_len	48:1:2230:2248	1182796	5	True				
ANR	1182885	AssignmentExpression	i = 128 - ekey_len		1182796	0		=			
ANR	1182886	Identifier	i		1182796	0					
ANR	1182887	AdditiveExpression	128 - ekey_len		1182796	1		-			
ANR	1182888	PrimaryExpression	128		1182796	0					
ANR	1182889	Identifier	ekey_len		1182796	1					
ANR	1182890	ExpressionStatement	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) ) ]	49:2:2252:2333	1182796	6	True				
ANR	1182891	AssignmentExpression	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) ) ]		1182796	0		=			
ANR	1182892	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		1182796	0					
ANR	1182893	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182894	CastTarget	ut8 *		1182796	0					
ANR	1182895	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182896	Identifier	state		1182796	0					
ANR	1182897	Identifier	ekey		1182796	1					
ANR	1182898	Identifier	i		1182796	1					
ANR	1182899	ArrayIndexing	PITABLE [ ( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) ) ]		1182796	1					
ANR	1182900	Identifier	PITABLE		1182796	0					
ANR	1182901	BitAndExpression	( ( ut8 * ) state -> ekey ) [ i ] & ( 255 >> ( 7 & - BITS ) )		1182796	1		&			
ANR	1182902	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		1182796	0					
ANR	1182903	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182904	CastTarget	ut8 *		1182796	0					
ANR	1182905	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182906	Identifier	state		1182796	0					
ANR	1182907	Identifier	ekey		1182796	1					
ANR	1182908	Identifier	i		1182796	1					
ANR	1182909	ShiftExpression	255 >> ( 7 & - BITS )		1182796	1		>>			
ANR	1182910	PrimaryExpression	255		1182796	0					
ANR	1182911	BitAndExpression	7 & - BITS		1182796	1		&			
ANR	1182912	PrimaryExpression	7		1182796	0					
ANR	1182913	UnaryOperationExpression	- BITS		1182796	1					
ANR	1182914	UnaryOperator	-		1182796	0					
ANR	1182915	Identifier	BITS		1182796	1					
ANR	1182916	WhileStatement	while ( i -- )		1182796	7					
ANR	1182917	Condition	i --	52:9:2362:2364	1182796	0	True				
ANR	1182918	PostIncDecOperationExpression	i --		1182796	0					
ANR	1182919	Identifier	i		1182796	0					
ANR	1182920	IncDec	--		1182796	1					
ANR	1182921	CompoundStatement		19:14:441:441	1182796	1					
ANR	1182922	ExpressionStatement	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ] ]	53:3:2372:2471	1182796	0	True				
ANR	1182923	AssignmentExpression	( ( ut8 * ) state -> ekey ) [ i ] = PITABLE [ ( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ] ]		1182796	0		=			
ANR	1182924	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i ]		1182796	0					
ANR	1182925	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182926	CastTarget	ut8 *		1182796	0					
ANR	1182927	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182928	Identifier	state		1182796	0					
ANR	1182929	Identifier	ekey		1182796	1					
ANR	1182930	Identifier	i		1182796	1					
ANR	1182931	ArrayIndexing	PITABLE [ ( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ] ]		1182796	1					
ANR	1182932	Identifier	PITABLE		1182796	0					
ANR	1182933	ExclusiveOrExpression	( ( ut8 * ) state -> ekey ) [ i + 1 ] ^ ( ( ut8 * ) state -> ekey ) [ i + ekey_len ]		1182796	1		^			
ANR	1182934	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i + 1 ]		1182796	0					
ANR	1182935	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182936	CastTarget	ut8 *		1182796	0					
ANR	1182937	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182938	Identifier	state		1182796	0					
ANR	1182939	Identifier	ekey		1182796	1					
ANR	1182940	AdditiveExpression	i + 1		1182796	1		+			
ANR	1182941	Identifier	i		1182796	0					
ANR	1182942	PrimaryExpression	1		1182796	1					
ANR	1182943	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i + ekey_len ]		1182796	1					
ANR	1182944	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182945	CastTarget	ut8 *		1182796	0					
ANR	1182946	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182947	Identifier	state		1182796	0					
ANR	1182948	Identifier	ekey		1182796	1					
ANR	1182949	AdditiveExpression	i + ekey_len		1182796	1		+			
ANR	1182950	Identifier	i		1182796	0					
ANR	1182951	Identifier	ekey_len		1182796	1					
ANR	1182952	ForStatement	for ( i = RC2_KEY_SIZE - 1 ; i >= 0 ; i -- )		1182796	8					
ANR	1182953	ForInit	i = RC2_KEY_SIZE - 1 ;	57:7:2512:2532	1182796	0	True				
ANR	1182954	AssignmentExpression	i = RC2_KEY_SIZE - 1		1182796	0		=			
ANR	1182955	Identifier	i		1182796	0					
ANR	1182956	AdditiveExpression	RC2_KEY_SIZE - 1		1182796	1		-			
ANR	1182957	Identifier	RC2_KEY_SIZE		1182796	0					
ANR	1182958	PrimaryExpression	1		1182796	1					
ANR	1182959	Condition	i >= 0	57:29:2534:2539	1182796	1	True				
ANR	1182960	RelationalExpression	i >= 0		1182796	0		>=			
ANR	1182961	Identifier	i		1182796	0					
ANR	1182962	PrimaryExpression	0		1182796	1					
ANR	1182963	PostIncDecOperationExpression	i --	57:37:2542:2544	1182796	2	True				
ANR	1182964	Identifier	i		1182796	0					
ANR	1182965	IncDec	--		1182796	1					
ANR	1182966	CompoundStatement		24:42:621:621	1182796	3					
ANR	1182967	ExpressionStatement	state -> ekey [ i ] = ( ( ut8 * ) state -> ekey ) [ i * 2 ] + ( ( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8 )	58:3:2552:2637	1182796	0	True				
ANR	1182968	AssignmentExpression	state -> ekey [ i ] = ( ( ut8 * ) state -> ekey ) [ i * 2 ] + ( ( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8 )		1182796	0		=			
ANR	1182969	ArrayIndexing	state -> ekey [ i ]		1182796	0					
ANR	1182970	PtrMemberAccess	state -> ekey		1182796	0					
ANR	1182971	Identifier	state		1182796	0					
ANR	1182972	Identifier	ekey		1182796	1					
ANR	1182973	Identifier	i		1182796	1					
ANR	1182974	AdditiveExpression	( ( ut8 * ) state -> ekey ) [ i * 2 ] + ( ( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8 )		1182796	1		+			
ANR	1182975	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i * 2 ]		1182796	0					
ANR	1182976	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182977	CastTarget	ut8 *		1182796	0					
ANR	1182978	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182979	Identifier	state		1182796	0					
ANR	1182980	Identifier	ekey		1182796	1					
ANR	1182981	MultiplicativeExpression	i * 2		1182796	1		*			
ANR	1182982	Identifier	i		1182796	0					
ANR	1182983	PrimaryExpression	2		1182796	1					
ANR	1182984	ShiftExpression	( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ] << 8		1182796	1		<<			
ANR	1182985	ArrayIndexing	( ( ut8 * ) state -> ekey ) [ i * 2 + 1 ]		1182796	0					
ANR	1182986	CastExpression	( ut8 * ) state -> ekey		1182796	0					
ANR	1182987	CastTarget	ut8 *		1182796	0					
ANR	1182988	PtrMemberAccess	state -> ekey		1182796	1					
ANR	1182989	Identifier	state		1182796	0					
ANR	1182990	Identifier	ekey		1182796	1					
ANR	1182991	AdditiveExpression	i * 2 + 1		1182796	1		+			
ANR	1182992	MultiplicativeExpression	i * 2		1182796	0		*			
ANR	1182993	Identifier	i		1182796	0					
ANR	1182994	PrimaryExpression	2		1182796	1					
ANR	1182995	PrimaryExpression	1		1182796	1					
ANR	1182996	PrimaryExpression	8		1182796	1					
ANR	1182997	ReturnStatement	return true ;	61:2:2646:2657	1182796	9	True				
ANR	1182998	Identifier	true		1182796	0					
ANR	1182999	ReturnType	static bool		1182796	1					
ANR	1183000	Identifier	rc2_expandKey		1182796	2					
ANR	1183001	ParameterList	"struct rc2_state * state , const ut8 * key , int key_len"		1182796	3					
ANR	1183002	Parameter	struct rc2_state * state	34:26:1871:1893	1182796	0	True				
ANR	1183003	ParameterType	struct rc2_state *		1182796	0					
ANR	1183004	Identifier	state		1182796	1					
ANR	1183005	Parameter	const ut8 * key	34:51:1896:1909	1182796	1	True				
ANR	1183006	ParameterType	const ut8 *		1182796	0					
ANR	1183007	Identifier	key		1182796	1					
ANR	1183008	Parameter	int key_len	34:67:1912:1922	1182796	2	True				
ANR	1183009	ParameterType	int		1182796	0					
ANR	1183010	Identifier	key_len		1182796	1					
ANR	1183011	CFGEntryNode	ENTRY		1182796		True				
ANR	1183012	CFGExitNode	EXIT		1182796		True				
ANR	1183013	Symbol	* * i		1182796						
ANR	1183014	Symbol	false		1182796						
ANR	1183015	Symbol	i		1182796						
ANR	1183016	Symbol	* * ekey_len		1182796						
ANR	1183017	Symbol	* * state		1182796						
ANR	1183018	Symbol	* state		1182796						
ANR	1183019	Symbol	ekey_len		1182796						
ANR	1183020	Symbol	* * * state		1182796						
ANR	1183021	Symbol	* BITS		1182796						
ANR	1183022	Symbol	* i		1182796						
ANR	1183023	Symbol	* * key_len		1182796						
ANR	1183024	Symbol	* key_len		1182796						
ANR	1183025	Symbol	* * state -> ekey		1182796						
ANR	1183026	Symbol	PITABLE		1182796						
ANR	1183027	Symbol	true		1182796						
ANR	1183028	Symbol	BITS		1182796						
ANR	1183029	Symbol	RC2_KEY_SIZE		1182796						
ANR	1183030	Symbol	state		1182796						
ANR	1183031	Symbol	* state -> ekey		1182796						
ANR	1183032	Symbol	state -> ekey		1182796						
ANR	1183033	Symbol	* PITABLE		1182796						
ANR	1183034	Symbol	* ekey_len		1182796						
ANR	1183035	Symbol	key		1182796						
ANR	1183036	Symbol	key_len		1182796						
ANR	1183037	Function	rc2_crypt8	64:0:2662:3747							
ANR	1183038	FunctionDef	"rc2_crypt8 (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf)"		1183037	0					
ANR	1183039	CompoundStatement		64:79:2741:3747	1183037	0					
ANR	1183040	IdentifierDeclStatement	int i ;	65:1:2744:2749	1183037	0	True				
ANR	1183041	IdentifierDecl	i		1183037	0					
ANR	1183042	IdentifierDeclType	int		1183037	0					
ANR	1183043	Identifier	i		1183037	1					
ANR	1183044	IdentifierDeclStatement	"ut16 x76 , x54 , x32 , x10 ;"	66:1:2752:2775	1183037	1	True				
ANR	1183045	IdentifierDecl	x76		1183037	0					
ANR	1183046	IdentifierDeclType	ut16		1183037	0					
ANR	1183047	Identifier	x76		1183037	1					
ANR	1183048	IdentifierDecl	x54		1183037	1					
ANR	1183049	IdentifierDeclType	ut16		1183037	0					
ANR	1183050	Identifier	x54		1183037	1					
ANR	1183051	IdentifierDecl	x32		1183037	2					
ANR	1183052	IdentifierDeclType	ut16		1183037	0					
ANR	1183053	Identifier	x32		1183037	1					
ANR	1183054	IdentifierDecl	x10		1183037	3					
ANR	1183055	IdentifierDeclType	ut16		1183037	0					
ANR	1183056	Identifier	x10		1183037	1					
ANR	1183057	ExpressionStatement	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]	68:1:2779:2811	1183037	2	True				
ANR	1183058	AssignmentExpression	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		1183037	0		=			
ANR	1183059	Identifier	x76		1183037	0					
ANR	1183060	InclusiveOrExpression	( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		1183037	1		|			
ANR	1183061	ShiftExpression	inbuf [ 7 ] << 8		1183037	0		<<			
ANR	1183062	ArrayIndexing	inbuf [ 7 ]		1183037	0					
ANR	1183063	Identifier	inbuf		1183037	0					
ANR	1183064	PrimaryExpression	7		1183037	1					
ANR	1183065	PrimaryExpression	8		1183037	1					
ANR	1183066	ArrayIndexing	inbuf [ 6 ]		1183037	1					
ANR	1183067	Identifier	inbuf		1183037	0					
ANR	1183068	PrimaryExpression	6		1183037	1					
ANR	1183069	ExpressionStatement	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]	69:1:2814:2846	1183037	3	True				
ANR	1183070	AssignmentExpression	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		1183037	0		=			
ANR	1183071	Identifier	x54		1183037	0					
ANR	1183072	InclusiveOrExpression	( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		1183037	1		|			
ANR	1183073	ShiftExpression	inbuf [ 5 ] << 8		1183037	0		<<			
ANR	1183074	ArrayIndexing	inbuf [ 5 ]		1183037	0					
ANR	1183075	Identifier	inbuf		1183037	0					
ANR	1183076	PrimaryExpression	5		1183037	1					
ANR	1183077	PrimaryExpression	8		1183037	1					
ANR	1183078	ArrayIndexing	inbuf [ 4 ]		1183037	1					
ANR	1183079	Identifier	inbuf		1183037	0					
ANR	1183080	PrimaryExpression	4		1183037	1					
ANR	1183081	ExpressionStatement	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]	70:1:2849:2881	1183037	4	True				
ANR	1183082	AssignmentExpression	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		1183037	0		=			
ANR	1183083	Identifier	x32		1183037	0					
ANR	1183084	InclusiveOrExpression	( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		1183037	1		|			
ANR	1183085	ShiftExpression	inbuf [ 3 ] << 8		1183037	0		<<			
ANR	1183086	ArrayIndexing	inbuf [ 3 ]		1183037	0					
ANR	1183087	Identifier	inbuf		1183037	0					
ANR	1183088	PrimaryExpression	3		1183037	1					
ANR	1183089	PrimaryExpression	8		1183037	1					
ANR	1183090	ArrayIndexing	inbuf [ 2 ]		1183037	1					
ANR	1183091	Identifier	inbuf		1183037	0					
ANR	1183092	PrimaryExpression	2		1183037	1					
ANR	1183093	ExpressionStatement	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]	71:1:2884:2916	1183037	5	True				
ANR	1183094	AssignmentExpression	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		1183037	0		=			
ANR	1183095	Identifier	x10		1183037	0					
ANR	1183096	InclusiveOrExpression	( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		1183037	1		|			
ANR	1183097	ShiftExpression	inbuf [ 1 ] << 8		1183037	0		<<			
ANR	1183098	ArrayIndexing	inbuf [ 1 ]		1183037	0					
ANR	1183099	Identifier	inbuf		1183037	0					
ANR	1183100	PrimaryExpression	1		1183037	1					
ANR	1183101	PrimaryExpression	8		1183037	1					
ANR	1183102	ArrayIndexing	inbuf [ 0 ]		1183037	1					
ANR	1183103	Identifier	inbuf		1183037	0					
ANR	1183104	PrimaryExpression	0		1183037	1					
ANR	1183105	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		1183037	6					
ANR	1183106	ForInit	i = 0 ;	73:6:2925:2930	1183037	0	True				
ANR	1183107	AssignmentExpression	i = 0		1183037	0		=			
ANR	1183108	Identifier	i		1183037	0					
ANR	1183109	PrimaryExpression	0		1183037	1					
ANR	1183110	Condition	i < 16	73:13:2932:2937	1183037	1	True				
ANR	1183111	RelationalExpression	i < 16		1183037	0		<			
ANR	1183112	Identifier	i		1183037	0					
ANR	1183113	PrimaryExpression	16		1183037	1					
ANR	1183114	PostIncDecOperationExpression	i ++	73:21:2940:2942	1183037	2	True				
ANR	1183115	Identifier	i		1183037	0					
ANR	1183116	IncDec	++		1183037	1					
ANR	1183117	CompoundStatement		10:26:203:203	1183037	3					
ANR	1183118	ExpressionStatement	x10 += ( ( x32 & ~x76 ) + ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]	74:2:2949:3009	1183037	0	True				
ANR	1183119	AssignmentExpression	x10 += ( ( x32 & ~x76 ) + ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		1183037	0		+=			
ANR	1183120	Identifier	x10		1183037	0					
ANR	1183121	AdditiveExpression	( ( x32 & ~x76 ) + ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		1183037	1		+			
ANR	1183122	AdditiveExpression	( x32 & ~x76 ) + ( x54 & x76 )		1183037	0		+			
ANR	1183123	BitAndExpression	x32 & ~x76		1183037	0		&			
ANR	1183124	Identifier	x32		1183037	0					
ANR	1183125	Identifier	~x76		1183037	1					
ANR	1183126	BitAndExpression	x54 & x76		1183037	1		&			
ANR	1183127	Identifier	x54		1183037	0					
ANR	1183128	Identifier	x76		1183037	1					
ANR	1183129	ArrayIndexing	state -> ekey [ 4 * i + 0 ]		1183037	1					
ANR	1183130	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183131	Identifier	state		1183037	0					
ANR	1183132	Identifier	ekey		1183037	1					
ANR	1183133	AdditiveExpression	4 * i + 0		1183037	1		+			
ANR	1183134	MultiplicativeExpression	4 * i		1183037	0		*			
ANR	1183135	PrimaryExpression	4		1183037	0					
ANR	1183136	Identifier	i		1183037	1					
ANR	1183137	PrimaryExpression	0		1183037	1					
ANR	1183138	ExpressionStatement	x10 = ( x10 << 1 ) + ( x10 >> 15 & 1 )	75:2:3013:3047	1183037	1	True				
ANR	1183139	AssignmentExpression	x10 = ( x10 << 1 ) + ( x10 >> 15 & 1 )		1183037	0		=			
ANR	1183140	Identifier	x10		1183037	0					
ANR	1183141	AdditiveExpression	( x10 << 1 ) + ( x10 >> 15 & 1 )		1183037	1		+			
ANR	1183142	ShiftExpression	x10 << 1		1183037	0		<<			
ANR	1183143	Identifier	x10		1183037	0					
ANR	1183144	PrimaryExpression	1		1183037	1					
ANR	1183145	BitAndExpression	x10 >> 15 & 1		1183037	1		&			
ANR	1183146	ShiftExpression	x10 >> 15		1183037	0		>>			
ANR	1183147	Identifier	x10		1183037	0					
ANR	1183148	PrimaryExpression	15		1183037	1					
ANR	1183149	PrimaryExpression	1		1183037	1					
ANR	1183150	ExpressionStatement	x32 += ( ( x54 & ~x10 ) + ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]	77:2:3052:3112	1183037	2	True				
ANR	1183151	AssignmentExpression	x32 += ( ( x54 & ~x10 ) + ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		1183037	0		+=			
ANR	1183152	Identifier	x32		1183037	0					
ANR	1183153	AdditiveExpression	( ( x54 & ~x10 ) + ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		1183037	1		+			
ANR	1183154	AdditiveExpression	( x54 & ~x10 ) + ( x76 & x10 )		1183037	0		+			
ANR	1183155	BitAndExpression	x54 & ~x10		1183037	0		&			
ANR	1183156	Identifier	x54		1183037	0					
ANR	1183157	Identifier	~x10		1183037	1					
ANR	1183158	BitAndExpression	x76 & x10		1183037	1		&			
ANR	1183159	Identifier	x76		1183037	0					
ANR	1183160	Identifier	x10		1183037	1					
ANR	1183161	ArrayIndexing	state -> ekey [ 4 * i + 1 ]		1183037	1					
ANR	1183162	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183163	Identifier	state		1183037	0					
ANR	1183164	Identifier	ekey		1183037	1					
ANR	1183165	AdditiveExpression	4 * i + 1		1183037	1		+			
ANR	1183166	MultiplicativeExpression	4 * i		1183037	0		*			
ANR	1183167	PrimaryExpression	4		1183037	0					
ANR	1183168	Identifier	i		1183037	1					
ANR	1183169	PrimaryExpression	1		1183037	1					
ANR	1183170	ExpressionStatement	x32 = ( x32 << 2 ) + ( x32 >> 14 & 3 )	78:2:3116:3150	1183037	3	True				
ANR	1183171	AssignmentExpression	x32 = ( x32 << 2 ) + ( x32 >> 14 & 3 )		1183037	0		=			
ANR	1183172	Identifier	x32		1183037	0					
ANR	1183173	AdditiveExpression	( x32 << 2 ) + ( x32 >> 14 & 3 )		1183037	1		+			
ANR	1183174	ShiftExpression	x32 << 2		1183037	0		<<			
ANR	1183175	Identifier	x32		1183037	0					
ANR	1183176	PrimaryExpression	2		1183037	1					
ANR	1183177	BitAndExpression	x32 >> 14 & 3		1183037	1		&			
ANR	1183178	ShiftExpression	x32 >> 14		1183037	0		>>			
ANR	1183179	Identifier	x32		1183037	0					
ANR	1183180	PrimaryExpression	14		1183037	1					
ANR	1183181	PrimaryExpression	3		1183037	1					
ANR	1183182	ExpressionStatement	x54 += ( ( x76 & ~x32 ) + ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]	80:2:3155:3215	1183037	4	True				
ANR	1183183	AssignmentExpression	x54 += ( ( x76 & ~x32 ) + ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		1183037	0		+=			
ANR	1183184	Identifier	x54		1183037	0					
ANR	1183185	AdditiveExpression	( ( x76 & ~x32 ) + ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		1183037	1		+			
ANR	1183186	AdditiveExpression	( x76 & ~x32 ) + ( x10 & x32 )		1183037	0		+			
ANR	1183187	BitAndExpression	x76 & ~x32		1183037	0		&			
ANR	1183188	Identifier	x76		1183037	0					
ANR	1183189	Identifier	~x32		1183037	1					
ANR	1183190	BitAndExpression	x10 & x32		1183037	1		&			
ANR	1183191	Identifier	x10		1183037	0					
ANR	1183192	Identifier	x32		1183037	1					
ANR	1183193	ArrayIndexing	state -> ekey [ 4 * i + 2 ]		1183037	1					
ANR	1183194	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183195	Identifier	state		1183037	0					
ANR	1183196	Identifier	ekey		1183037	1					
ANR	1183197	AdditiveExpression	4 * i + 2		1183037	1		+			
ANR	1183198	MultiplicativeExpression	4 * i		1183037	0		*			
ANR	1183199	PrimaryExpression	4		1183037	0					
ANR	1183200	Identifier	i		1183037	1					
ANR	1183201	PrimaryExpression	2		1183037	1					
ANR	1183202	ExpressionStatement	x54 = ( x54 << 3 ) + ( x54 >> 13 & 7 )	81:2:3219:3253	1183037	5	True				
ANR	1183203	AssignmentExpression	x54 = ( x54 << 3 ) + ( x54 >> 13 & 7 )		1183037	0		=			
ANR	1183204	Identifier	x54		1183037	0					
ANR	1183205	AdditiveExpression	( x54 << 3 ) + ( x54 >> 13 & 7 )		1183037	1		+			
ANR	1183206	ShiftExpression	x54 << 3		1183037	0		<<			
ANR	1183207	Identifier	x54		1183037	0					
ANR	1183208	PrimaryExpression	3		1183037	1					
ANR	1183209	BitAndExpression	x54 >> 13 & 7		1183037	1		&			
ANR	1183210	ShiftExpression	x54 >> 13		1183037	0		>>			
ANR	1183211	Identifier	x54		1183037	0					
ANR	1183212	PrimaryExpression	13		1183037	1					
ANR	1183213	PrimaryExpression	7		1183037	1					
ANR	1183214	ExpressionStatement	x76 += ( ( x10 & ~x54 ) + ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]	83:2:3258:3318	1183037	6	True				
ANR	1183215	AssignmentExpression	x76 += ( ( x10 & ~x54 ) + ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		1183037	0		+=			
ANR	1183216	Identifier	x76		1183037	0					
ANR	1183217	AdditiveExpression	( ( x10 & ~x54 ) + ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		1183037	1		+			
ANR	1183218	AdditiveExpression	( x10 & ~x54 ) + ( x32 & x54 )		1183037	0		+			
ANR	1183219	BitAndExpression	x10 & ~x54		1183037	0		&			
ANR	1183220	Identifier	x10		1183037	0					
ANR	1183221	Identifier	~x54		1183037	1					
ANR	1183222	BitAndExpression	x32 & x54		1183037	1		&			
ANR	1183223	Identifier	x32		1183037	0					
ANR	1183224	Identifier	x54		1183037	1					
ANR	1183225	ArrayIndexing	state -> ekey [ 4 * i + 3 ]		1183037	1					
ANR	1183226	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183227	Identifier	state		1183037	0					
ANR	1183228	Identifier	ekey		1183037	1					
ANR	1183229	AdditiveExpression	4 * i + 3		1183037	1		+			
ANR	1183230	MultiplicativeExpression	4 * i		1183037	0		*			
ANR	1183231	PrimaryExpression	4		1183037	0					
ANR	1183232	Identifier	i		1183037	1					
ANR	1183233	PrimaryExpression	3		1183037	1					
ANR	1183234	ExpressionStatement	x76 = ( x76 << 5 ) + ( x76 >> 11 & 31 )	84:2:3322:3357	1183037	7	True				
ANR	1183235	AssignmentExpression	x76 = ( x76 << 5 ) + ( x76 >> 11 & 31 )		1183037	0		=			
ANR	1183236	Identifier	x76		1183037	0					
ANR	1183237	AdditiveExpression	( x76 << 5 ) + ( x76 >> 11 & 31 )		1183037	1		+			
ANR	1183238	ShiftExpression	x76 << 5		1183037	0		<<			
ANR	1183239	Identifier	x76		1183037	0					
ANR	1183240	PrimaryExpression	5		1183037	1					
ANR	1183241	BitAndExpression	x76 >> 11 & 31		1183037	1		&			
ANR	1183242	ShiftExpression	x76 >> 11		1183037	0		>>			
ANR	1183243	Identifier	x76		1183037	0					
ANR	1183244	PrimaryExpression	11		1183037	1					
ANR	1183245	PrimaryExpression	31		1183037	1					
ANR	1183246	IfStatement	if ( i == 4 || i == 10 )		1183037	8					
ANR	1183247	Condition	i == 4 || i == 10	86:6:3366:3382	1183037	0	True				
ANR	1183248	OrExpression	i == 4 || i == 10		1183037	0		||			
ANR	1183249	EqualityExpression	i == 4		1183037	0		==			
ANR	1183250	Identifier	i		1183037	0					
ANR	1183251	PrimaryExpression	4		1183037	1					
ANR	1183252	EqualityExpression	i == 10		1183037	1		==			
ANR	1183253	Identifier	i		1183037	0					
ANR	1183254	PrimaryExpression	10		1183037	1					
ANR	1183255	CompoundStatement		23:25:643:643	1183037	1					
ANR	1183256	ExpressionStatement	x10 += state -> ekey [ x76 & 63 ]	87:3:3390:3418	1183037	0	True				
ANR	1183257	AssignmentExpression	x10 += state -> ekey [ x76 & 63 ]		1183037	0		+=			
ANR	1183258	Identifier	x10		1183037	0					
ANR	1183259	ArrayIndexing	state -> ekey [ x76 & 63 ]		1183037	1					
ANR	1183260	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183261	Identifier	state		1183037	0					
ANR	1183262	Identifier	ekey		1183037	1					
ANR	1183263	BitAndExpression	x76 & 63		1183037	1		&			
ANR	1183264	Identifier	x76		1183037	0					
ANR	1183265	PrimaryExpression	63		1183037	1					
ANR	1183266	ExpressionStatement	x32 += state -> ekey [ x10 & 63 ]	88:3:3423:3451	1183037	1	True				
ANR	1183267	AssignmentExpression	x32 += state -> ekey [ x10 & 63 ]		1183037	0		+=			
ANR	1183268	Identifier	x32		1183037	0					
ANR	1183269	ArrayIndexing	state -> ekey [ x10 & 63 ]		1183037	1					
ANR	1183270	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183271	Identifier	state		1183037	0					
ANR	1183272	Identifier	ekey		1183037	1					
ANR	1183273	BitAndExpression	x10 & 63		1183037	1		&			
ANR	1183274	Identifier	x10		1183037	0					
ANR	1183275	PrimaryExpression	63		1183037	1					
ANR	1183276	ExpressionStatement	x54 += state -> ekey [ x32 & 63 ]	89:3:3456:3484	1183037	2	True				
ANR	1183277	AssignmentExpression	x54 += state -> ekey [ x32 & 63 ]		1183037	0		+=			
ANR	1183278	Identifier	x54		1183037	0					
ANR	1183279	ArrayIndexing	state -> ekey [ x32 & 63 ]		1183037	1					
ANR	1183280	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183281	Identifier	state		1183037	0					
ANR	1183282	Identifier	ekey		1183037	1					
ANR	1183283	BitAndExpression	x32 & 63		1183037	1		&			
ANR	1183284	Identifier	x32		1183037	0					
ANR	1183285	PrimaryExpression	63		1183037	1					
ANR	1183286	ExpressionStatement	x76 += state -> ekey [ x54 & 63 ]	90:3:3489:3517	1183037	3	True				
ANR	1183287	AssignmentExpression	x76 += state -> ekey [ x54 & 63 ]		1183037	0		+=			
ANR	1183288	Identifier	x76		1183037	0					
ANR	1183289	ArrayIndexing	state -> ekey [ x54 & 63 ]		1183037	1					
ANR	1183290	PtrMemberAccess	state -> ekey		1183037	0					
ANR	1183291	Identifier	state		1183037	0					
ANR	1183292	Identifier	ekey		1183037	1					
ANR	1183293	BitAndExpression	x54 & 63		1183037	1		&			
ANR	1183294	Identifier	x54		1183037	0					
ANR	1183295	PrimaryExpression	63		1183037	1					
ANR	1183296	ExpressionStatement	outbuf [ 0 ] = ( ut8 ) x10	94:1:3528:3549	1183037	7	True				
ANR	1183297	AssignmentExpression	outbuf [ 0 ] = ( ut8 ) x10		1183037	0		=			
ANR	1183298	ArrayIndexing	outbuf [ 0 ]		1183037	0					
ANR	1183299	Identifier	outbuf		1183037	0					
ANR	1183300	PrimaryExpression	0		1183037	1					
ANR	1183301	CastExpression	( ut8 ) x10		1183037	1					
ANR	1183302	CastTarget	ut8		1183037	0					
ANR	1183303	Identifier	x10		1183037	1					
ANR	1183304	ExpressionStatement	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )	95:1:3552:3580	1183037	8	True				
ANR	1183305	AssignmentExpression	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )		1183037	0		=			
ANR	1183306	ArrayIndexing	outbuf [ 1 ]		1183037	0					
ANR	1183307	Identifier	outbuf		1183037	0					
ANR	1183308	PrimaryExpression	1		1183037	1					
ANR	1183309	CastExpression	( ut8 ) ( x10 >> 8 )		1183037	1					
ANR	1183310	CastTarget	ut8		1183037	0					
ANR	1183311	ShiftExpression	x10 >> 8		1183037	1		>>			
ANR	1183312	Identifier	x10		1183037	0					
ANR	1183313	PrimaryExpression	8		1183037	1					
ANR	1183314	ExpressionStatement	outbuf [ 2 ] = ( ut8 ) x32	96:1:3583:3604	1183037	9	True				
ANR	1183315	AssignmentExpression	outbuf [ 2 ] = ( ut8 ) x32		1183037	0		=			
ANR	1183316	ArrayIndexing	outbuf [ 2 ]		1183037	0					
ANR	1183317	Identifier	outbuf		1183037	0					
ANR	1183318	PrimaryExpression	2		1183037	1					
ANR	1183319	CastExpression	( ut8 ) x32		1183037	1					
ANR	1183320	CastTarget	ut8		1183037	0					
ANR	1183321	Identifier	x32		1183037	1					
ANR	1183322	ExpressionStatement	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )	97:1:3607:3635	1183037	10	True				
ANR	1183323	AssignmentExpression	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )		1183037	0		=			
ANR	1183324	ArrayIndexing	outbuf [ 3 ]		1183037	0					
ANR	1183325	Identifier	outbuf		1183037	0					
ANR	1183326	PrimaryExpression	3		1183037	1					
ANR	1183327	CastExpression	( ut8 ) ( x32 >> 8 )		1183037	1					
ANR	1183328	CastTarget	ut8		1183037	0					
ANR	1183329	ShiftExpression	x32 >> 8		1183037	1		>>			
ANR	1183330	Identifier	x32		1183037	0					
ANR	1183331	PrimaryExpression	8		1183037	1					
ANR	1183332	ExpressionStatement	outbuf [ 4 ] = ( ut8 ) x54	98:1:3638:3659	1183037	11	True				
ANR	1183333	AssignmentExpression	outbuf [ 4 ] = ( ut8 ) x54		1183037	0		=			
ANR	1183334	ArrayIndexing	outbuf [ 4 ]		1183037	0					
ANR	1183335	Identifier	outbuf		1183037	0					
ANR	1183336	PrimaryExpression	4		1183037	1					
ANR	1183337	CastExpression	( ut8 ) x54		1183037	1					
ANR	1183338	CastTarget	ut8		1183037	0					
ANR	1183339	Identifier	x54		1183037	1					
ANR	1183340	ExpressionStatement	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )	99:1:3662:3690	1183037	12	True				
ANR	1183341	AssignmentExpression	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )		1183037	0		=			
ANR	1183342	ArrayIndexing	outbuf [ 5 ]		1183037	0					
ANR	1183343	Identifier	outbuf		1183037	0					
ANR	1183344	PrimaryExpression	5		1183037	1					
ANR	1183345	CastExpression	( ut8 ) ( x54 >> 8 )		1183037	1					
ANR	1183346	CastTarget	ut8		1183037	0					
ANR	1183347	ShiftExpression	x54 >> 8		1183037	1		>>			
ANR	1183348	Identifier	x54		1183037	0					
ANR	1183349	PrimaryExpression	8		1183037	1					
ANR	1183350	ExpressionStatement	outbuf [ 6 ] = ( ut8 ) x76	100:1:3693:3714	1183037	13	True				
ANR	1183351	AssignmentExpression	outbuf [ 6 ] = ( ut8 ) x76		1183037	0		=			
ANR	1183352	ArrayIndexing	outbuf [ 6 ]		1183037	0					
ANR	1183353	Identifier	outbuf		1183037	0					
ANR	1183354	PrimaryExpression	6		1183037	1					
ANR	1183355	CastExpression	( ut8 ) x76		1183037	1					
ANR	1183356	CastTarget	ut8		1183037	0					
ANR	1183357	Identifier	x76		1183037	1					
ANR	1183358	ExpressionStatement	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )	101:1:3717:3745	1183037	14	True				
ANR	1183359	AssignmentExpression	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )		1183037	0		=			
ANR	1183360	ArrayIndexing	outbuf [ 7 ]		1183037	0					
ANR	1183361	Identifier	outbuf		1183037	0					
ANR	1183362	PrimaryExpression	7		1183037	1					
ANR	1183363	CastExpression	( ut8 ) ( x76 >> 8 )		1183037	1					
ANR	1183364	CastTarget	ut8		1183037	0					
ANR	1183365	ShiftExpression	x76 >> 8		1183037	1		>>			
ANR	1183366	Identifier	x76		1183037	0					
ANR	1183367	PrimaryExpression	8		1183037	1					
ANR	1183368	ReturnType	static void		1183037	1					
ANR	1183369	Identifier	rc2_crypt8		1183037	2					
ANR	1183370	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf"		1183037	3					
ANR	1183371	Parameter	struct rc2_state * state	64:23:2685:2707	1183037	0	True				
ANR	1183372	ParameterType	struct rc2_state *		1183037	0					
ANR	1183373	Identifier	state		1183037	1					
ANR	1183374	Parameter	const ut8 * inbuf	64:48:2710:2725	1183037	1	True				
ANR	1183375	ParameterType	const ut8 *		1183037	0					
ANR	1183376	Identifier	inbuf		1183037	1					
ANR	1183377	Parameter	ut8 * outbuf	64:66:2728:2738	1183037	2	True				
ANR	1183378	ParameterType	ut8 *		1183037	0					
ANR	1183379	Identifier	outbuf		1183037	1					
ANR	1183380	CFGEntryNode	ENTRY		1183037		True				
ANR	1183381	CFGExitNode	EXIT		1183037		True				
ANR	1183382	Symbol	* x76		1183037						
ANR	1183383	Symbol	* x10		1183037						
ANR	1183384	Symbol	* x32		1183037						
ANR	1183385	Symbol	* x54		1183037						
ANR	1183386	Symbol	~x76		1183037						
ANR	1183387	Symbol	~x10		1183037						
ANR	1183388	Symbol	~x32		1183037						
ANR	1183389	Symbol	~x54		1183037						
ANR	1183390	Symbol	* inbuf		1183037						
ANR	1183391	Symbol	i		1183037						
ANR	1183392	Symbol	* * state		1183037						
ANR	1183393	Symbol	* state		1183037						
ANR	1183394	Symbol	* outbuf		1183037						
ANR	1183395	Symbol	* i		1183037						
ANR	1183396	Symbol	inbuf		1183037						
ANR	1183397	Symbol	outbuf		1183037						
ANR	1183398	Symbol	x76		1183037						
ANR	1183399	Symbol	x54		1183037						
ANR	1183400	Symbol	x10		1183037						
ANR	1183401	Symbol	x32		1183037						
ANR	1183402	Symbol	state		1183037						
ANR	1183403	Symbol	* state -> ekey		1183037						
ANR	1183404	Symbol	state -> ekey		1183037						
ANR	1183405	Function	rc2_dcrypt8	105:0:3751:4885							
ANR	1183406	FunctionDef	"rc2_dcrypt8 (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf)"		1183405	0					
ANR	1183407	CompoundStatement		105:80:3831:4885	1183405	0					
ANR	1183408	IdentifierDeclStatement	int i ;	106:1:3834:3839	1183405	0	True				
ANR	1183409	IdentifierDecl	i		1183405	0					
ANR	1183410	IdentifierDeclType	int		1183405	0					
ANR	1183411	Identifier	i		1183405	1					
ANR	1183412	IdentifierDeclStatement	"ut16 x76 , x54 , x32 , x10 ;"	107:1:3842:3865	1183405	1	True				
ANR	1183413	IdentifierDecl	x76		1183405	0					
ANR	1183414	IdentifierDeclType	ut16		1183405	0					
ANR	1183415	Identifier	x76		1183405	1					
ANR	1183416	IdentifierDecl	x54		1183405	1					
ANR	1183417	IdentifierDeclType	ut16		1183405	0					
ANR	1183418	Identifier	x54		1183405	1					
ANR	1183419	IdentifierDecl	x32		1183405	2					
ANR	1183420	IdentifierDeclType	ut16		1183405	0					
ANR	1183421	Identifier	x32		1183405	1					
ANR	1183422	IdentifierDecl	x10		1183405	3					
ANR	1183423	IdentifierDeclType	ut16		1183405	0					
ANR	1183424	Identifier	x10		1183405	1					
ANR	1183425	ExpressionStatement	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]	109:1:3869:3901	1183405	2	True				
ANR	1183426	AssignmentExpression	x76 = ( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		1183405	0		=			
ANR	1183427	Identifier	x76		1183405	0					
ANR	1183428	InclusiveOrExpression	( inbuf [ 7 ] << 8 ) | inbuf [ 6 ]		1183405	1		|			
ANR	1183429	ShiftExpression	inbuf [ 7 ] << 8		1183405	0		<<			
ANR	1183430	ArrayIndexing	inbuf [ 7 ]		1183405	0					
ANR	1183431	Identifier	inbuf		1183405	0					
ANR	1183432	PrimaryExpression	7		1183405	1					
ANR	1183433	PrimaryExpression	8		1183405	1					
ANR	1183434	ArrayIndexing	inbuf [ 6 ]		1183405	1					
ANR	1183435	Identifier	inbuf		1183405	0					
ANR	1183436	PrimaryExpression	6		1183405	1					
ANR	1183437	ExpressionStatement	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]	110:1:3904:3936	1183405	3	True				
ANR	1183438	AssignmentExpression	x54 = ( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		1183405	0		=			
ANR	1183439	Identifier	x54		1183405	0					
ANR	1183440	InclusiveOrExpression	( inbuf [ 5 ] << 8 ) | inbuf [ 4 ]		1183405	1		|			
ANR	1183441	ShiftExpression	inbuf [ 5 ] << 8		1183405	0		<<			
ANR	1183442	ArrayIndexing	inbuf [ 5 ]		1183405	0					
ANR	1183443	Identifier	inbuf		1183405	0					
ANR	1183444	PrimaryExpression	5		1183405	1					
ANR	1183445	PrimaryExpression	8		1183405	1					
ANR	1183446	ArrayIndexing	inbuf [ 4 ]		1183405	1					
ANR	1183447	Identifier	inbuf		1183405	0					
ANR	1183448	PrimaryExpression	4		1183405	1					
ANR	1183449	ExpressionStatement	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]	111:1:3939:3971	1183405	4	True				
ANR	1183450	AssignmentExpression	x32 = ( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		1183405	0		=			
ANR	1183451	Identifier	x32		1183405	0					
ANR	1183452	InclusiveOrExpression	( inbuf [ 3 ] << 8 ) | inbuf [ 2 ]		1183405	1		|			
ANR	1183453	ShiftExpression	inbuf [ 3 ] << 8		1183405	0		<<			
ANR	1183454	ArrayIndexing	inbuf [ 3 ]		1183405	0					
ANR	1183455	Identifier	inbuf		1183405	0					
ANR	1183456	PrimaryExpression	3		1183405	1					
ANR	1183457	PrimaryExpression	8		1183405	1					
ANR	1183458	ArrayIndexing	inbuf [ 2 ]		1183405	1					
ANR	1183459	Identifier	inbuf		1183405	0					
ANR	1183460	PrimaryExpression	2		1183405	1					
ANR	1183461	ExpressionStatement	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]	112:1:3974:4006	1183405	5	True				
ANR	1183462	AssignmentExpression	x10 = ( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		1183405	0		=			
ANR	1183463	Identifier	x10		1183405	0					
ANR	1183464	InclusiveOrExpression	( inbuf [ 1 ] << 8 ) | inbuf [ 0 ]		1183405	1		|			
ANR	1183465	ShiftExpression	inbuf [ 1 ] << 8		1183405	0		<<			
ANR	1183466	ArrayIndexing	inbuf [ 1 ]		1183405	0					
ANR	1183467	Identifier	inbuf		1183405	0					
ANR	1183468	PrimaryExpression	1		1183405	1					
ANR	1183469	PrimaryExpression	8		1183405	1					
ANR	1183470	ArrayIndexing	inbuf [ 0 ]		1183405	1					
ANR	1183471	Identifier	inbuf		1183405	0					
ANR	1183472	PrimaryExpression	0		1183405	1					
ANR	1183473	ForStatement	for ( i = 15 ; i >= 0 ; i -- )		1183405	6					
ANR	1183474	ForInit	i = 15 ;	114:6:4015:4021	1183405	0	True				
ANR	1183475	AssignmentExpression	i = 15		1183405	0		=			
ANR	1183476	Identifier	i		1183405	0					
ANR	1183477	PrimaryExpression	15		1183405	1					
ANR	1183478	Condition	i >= 0	114:14:4023:4028	1183405	1	True				
ANR	1183479	RelationalExpression	i >= 0		1183405	0		>=			
ANR	1183480	Identifier	i		1183405	0					
ANR	1183481	PrimaryExpression	0		1183405	1					
ANR	1183482	PostIncDecOperationExpression	i --	114:22:4031:4033	1183405	2	True				
ANR	1183483	Identifier	i		1183405	0					
ANR	1183484	IncDec	--		1183405	1					
ANR	1183485	CompoundStatement		10:27:204:204	1183405	3					
ANR	1183486	ExpressionStatement	x76 &= 65535	115:2:4040:4052	1183405	0	True				
ANR	1183487	AssignmentExpression	x76 &= 65535		1183405	0		&=			
ANR	1183488	Identifier	x76		1183405	0					
ANR	1183489	PrimaryExpression	65535		1183405	1					
ANR	1183490	ExpressionStatement	x76 = ( x76 << 11 ) | ( x76 >> 5 )	116:2:4056:4086	1183405	1	True				
ANR	1183491	AssignmentExpression	x76 = ( x76 << 11 ) | ( x76 >> 5 )		1183405	0		=			
ANR	1183492	Identifier	x76		1183405	0					
ANR	1183493	InclusiveOrExpression	( x76 << 11 ) | ( x76 >> 5 )		1183405	1		|			
ANR	1183494	ShiftExpression	x76 << 11		1183405	0		<<			
ANR	1183495	Identifier	x76		1183405	0					
ANR	1183496	PrimaryExpression	11		1183405	1					
ANR	1183497	ShiftExpression	x76 >> 5		1183405	1		>>			
ANR	1183498	Identifier	x76		1183405	0					
ANR	1183499	PrimaryExpression	5		1183405	1					
ANR	1183500	ExpressionStatement	x76 -= ( ( x10 & ~x54 ) | ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]	117:2:4090:4150	1183405	2	True				
ANR	1183501	AssignmentExpression	x76 -= ( ( x10 & ~x54 ) | ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		1183405	0		-=			
ANR	1183502	Identifier	x76		1183405	0					
ANR	1183503	AdditiveExpression	( ( x10 & ~x54 ) | ( x32 & x54 ) ) + state -> ekey [ 4 * i + 3 ]		1183405	1		+			
ANR	1183504	InclusiveOrExpression	( x10 & ~x54 ) | ( x32 & x54 )		1183405	0		|			
ANR	1183505	BitAndExpression	x10 & ~x54		1183405	0		&			
ANR	1183506	Identifier	x10		1183405	0					
ANR	1183507	Identifier	~x54		1183405	1					
ANR	1183508	BitAndExpression	x32 & x54		1183405	1		&			
ANR	1183509	Identifier	x32		1183405	0					
ANR	1183510	Identifier	x54		1183405	1					
ANR	1183511	ArrayIndexing	state -> ekey [ 4 * i + 3 ]		1183405	1					
ANR	1183512	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183513	Identifier	state		1183405	0					
ANR	1183514	Identifier	ekey		1183405	1					
ANR	1183515	AdditiveExpression	4 * i + 3		1183405	1		+			
ANR	1183516	MultiplicativeExpression	4 * i		1183405	0		*			
ANR	1183517	PrimaryExpression	4		1183405	0					
ANR	1183518	Identifier	i		1183405	1					
ANR	1183519	PrimaryExpression	3		1183405	1					
ANR	1183520	ExpressionStatement	x76 &= 65535	119:2:4155:4167	1183405	3	True				
ANR	1183521	AssignmentExpression	x76 &= 65535		1183405	0		&=			
ANR	1183522	Identifier	x76		1183405	0					
ANR	1183523	PrimaryExpression	65535		1183405	1					
ANR	1183524	ExpressionStatement	x54 = ( x54 << 13 ) | ( x54 >> 3 )	120:2:4171:4201	1183405	4	True				
ANR	1183525	AssignmentExpression	x54 = ( x54 << 13 ) | ( x54 >> 3 )		1183405	0		=			
ANR	1183526	Identifier	x54		1183405	0					
ANR	1183527	InclusiveOrExpression	( x54 << 13 ) | ( x54 >> 3 )		1183405	1		|			
ANR	1183528	ShiftExpression	x54 << 13		1183405	0		<<			
ANR	1183529	Identifier	x54		1183405	0					
ANR	1183530	PrimaryExpression	13		1183405	1					
ANR	1183531	ShiftExpression	x54 >> 3		1183405	1		>>			
ANR	1183532	Identifier	x54		1183405	0					
ANR	1183533	PrimaryExpression	3		1183405	1					
ANR	1183534	ExpressionStatement	x54 -= ( ( x76 & ~x32 ) | ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]	121:2:4205:4265	1183405	5	True				
ANR	1183535	AssignmentExpression	x54 -= ( ( x76 & ~x32 ) | ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		1183405	0		-=			
ANR	1183536	Identifier	x54		1183405	0					
ANR	1183537	AdditiveExpression	( ( x76 & ~x32 ) | ( x10 & x32 ) ) + state -> ekey [ 4 * i + 2 ]		1183405	1		+			
ANR	1183538	InclusiveOrExpression	( x76 & ~x32 ) | ( x10 & x32 )		1183405	0		|			
ANR	1183539	BitAndExpression	x76 & ~x32		1183405	0		&			
ANR	1183540	Identifier	x76		1183405	0					
ANR	1183541	Identifier	~x32		1183405	1					
ANR	1183542	BitAndExpression	x10 & x32		1183405	1		&			
ANR	1183543	Identifier	x10		1183405	0					
ANR	1183544	Identifier	x32		1183405	1					
ANR	1183545	ArrayIndexing	state -> ekey [ 4 * i + 2 ]		1183405	1					
ANR	1183546	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183547	Identifier	state		1183405	0					
ANR	1183548	Identifier	ekey		1183405	1					
ANR	1183549	AdditiveExpression	4 * i + 2		1183405	1		+			
ANR	1183550	MultiplicativeExpression	4 * i		1183405	0		*			
ANR	1183551	PrimaryExpression	4		1183405	0					
ANR	1183552	Identifier	i		1183405	1					
ANR	1183553	PrimaryExpression	2		1183405	1					
ANR	1183554	ExpressionStatement	x32 &= 65535	123:2:4270:4282	1183405	6	True				
ANR	1183555	AssignmentExpression	x32 &= 65535		1183405	0		&=			
ANR	1183556	Identifier	x32		1183405	0					
ANR	1183557	PrimaryExpression	65535		1183405	1					
ANR	1183558	ExpressionStatement	x32 = ( x32 << 14 ) | ( x32 >> 2 )	124:2:4286:4316	1183405	7	True				
ANR	1183559	AssignmentExpression	x32 = ( x32 << 14 ) | ( x32 >> 2 )		1183405	0		=			
ANR	1183560	Identifier	x32		1183405	0					
ANR	1183561	InclusiveOrExpression	( x32 << 14 ) | ( x32 >> 2 )		1183405	1		|			
ANR	1183562	ShiftExpression	x32 << 14		1183405	0		<<			
ANR	1183563	Identifier	x32		1183405	0					
ANR	1183564	PrimaryExpression	14		1183405	1					
ANR	1183565	ShiftExpression	x32 >> 2		1183405	1		>>			
ANR	1183566	Identifier	x32		1183405	0					
ANR	1183567	PrimaryExpression	2		1183405	1					
ANR	1183568	ExpressionStatement	x32 -= ( ( x54 & ~x10 ) | ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]	125:2:4320:4380	1183405	8	True				
ANR	1183569	AssignmentExpression	x32 -= ( ( x54 & ~x10 ) | ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		1183405	0		-=			
ANR	1183570	Identifier	x32		1183405	0					
ANR	1183571	AdditiveExpression	( ( x54 & ~x10 ) | ( x76 & x10 ) ) + state -> ekey [ 4 * i + 1 ]		1183405	1		+			
ANR	1183572	InclusiveOrExpression	( x54 & ~x10 ) | ( x76 & x10 )		1183405	0		|			
ANR	1183573	BitAndExpression	x54 & ~x10		1183405	0		&			
ANR	1183574	Identifier	x54		1183405	0					
ANR	1183575	Identifier	~x10		1183405	1					
ANR	1183576	BitAndExpression	x76 & x10		1183405	1		&			
ANR	1183577	Identifier	x76		1183405	0					
ANR	1183578	Identifier	x10		1183405	1					
ANR	1183579	ArrayIndexing	state -> ekey [ 4 * i + 1 ]		1183405	1					
ANR	1183580	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183581	Identifier	state		1183405	0					
ANR	1183582	Identifier	ekey		1183405	1					
ANR	1183583	AdditiveExpression	4 * i + 1		1183405	1		+			
ANR	1183584	MultiplicativeExpression	4 * i		1183405	0		*			
ANR	1183585	PrimaryExpression	4		1183405	0					
ANR	1183586	Identifier	i		1183405	1					
ANR	1183587	PrimaryExpression	1		1183405	1					
ANR	1183588	ExpressionStatement	x10 &= 65535	127:2:4385:4397	1183405	9	True				
ANR	1183589	AssignmentExpression	x10 &= 65535		1183405	0		&=			
ANR	1183590	Identifier	x10		1183405	0					
ANR	1183591	PrimaryExpression	65535		1183405	1					
ANR	1183592	ExpressionStatement	x10 = ( x10 << 15 ) | ( x10 >> 1 )	128:2:4401:4431	1183405	10	True				
ANR	1183593	AssignmentExpression	x10 = ( x10 << 15 ) | ( x10 >> 1 )		1183405	0		=			
ANR	1183594	Identifier	x10		1183405	0					
ANR	1183595	InclusiveOrExpression	( x10 << 15 ) | ( x10 >> 1 )		1183405	1		|			
ANR	1183596	ShiftExpression	x10 << 15		1183405	0		<<			
ANR	1183597	Identifier	x10		1183405	0					
ANR	1183598	PrimaryExpression	15		1183405	1					
ANR	1183599	ShiftExpression	x10 >> 1		1183405	1		>>			
ANR	1183600	Identifier	x10		1183405	0					
ANR	1183601	PrimaryExpression	1		1183405	1					
ANR	1183602	ExpressionStatement	x10 -= ( ( x32 & ~x76 ) | ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]	129:2:4435:4495	1183405	11	True				
ANR	1183603	AssignmentExpression	x10 -= ( ( x32 & ~x76 ) | ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		1183405	0		-=			
ANR	1183604	Identifier	x10		1183405	0					
ANR	1183605	AdditiveExpression	( ( x32 & ~x76 ) | ( x54 & x76 ) ) + state -> ekey [ 4 * i + 0 ]		1183405	1		+			
ANR	1183606	InclusiveOrExpression	( x32 & ~x76 ) | ( x54 & x76 )		1183405	0		|			
ANR	1183607	BitAndExpression	x32 & ~x76		1183405	0		&			
ANR	1183608	Identifier	x32		1183405	0					
ANR	1183609	Identifier	~x76		1183405	1					
ANR	1183610	BitAndExpression	x54 & x76		1183405	1		&			
ANR	1183611	Identifier	x54		1183405	0					
ANR	1183612	Identifier	x76		1183405	1					
ANR	1183613	ArrayIndexing	state -> ekey [ 4 * i + 0 ]		1183405	1					
ANR	1183614	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183615	Identifier	state		1183405	0					
ANR	1183616	Identifier	ekey		1183405	1					
ANR	1183617	AdditiveExpression	4 * i + 0		1183405	1		+			
ANR	1183618	MultiplicativeExpression	4 * i		1183405	0		*			
ANR	1183619	PrimaryExpression	4		1183405	0					
ANR	1183620	Identifier	i		1183405	1					
ANR	1183621	PrimaryExpression	0		1183405	1					
ANR	1183622	IfStatement	if ( i == 5 || i == 11 )		1183405	12					
ANR	1183623	Condition	i == 5 || i == 11	131:6:4504:4520	1183405	0	True				
ANR	1183624	OrExpression	i == 5 || i == 11		1183405	0		||			
ANR	1183625	EqualityExpression	i == 5		1183405	0		==			
ANR	1183626	Identifier	i		1183405	0					
ANR	1183627	PrimaryExpression	5		1183405	1					
ANR	1183628	EqualityExpression	i == 11		1183405	1		==			
ANR	1183629	Identifier	i		1183405	0					
ANR	1183630	PrimaryExpression	11		1183405	1					
ANR	1183631	CompoundStatement		27:25:691:691	1183405	1					
ANR	1183632	ExpressionStatement	x76 -= state -> ekey [ x54 & 63 ]	132:3:4528:4556	1183405	0	True				
ANR	1183633	AssignmentExpression	x76 -= state -> ekey [ x54 & 63 ]		1183405	0		-=			
ANR	1183634	Identifier	x76		1183405	0					
ANR	1183635	ArrayIndexing	state -> ekey [ x54 & 63 ]		1183405	1					
ANR	1183636	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183637	Identifier	state		1183405	0					
ANR	1183638	Identifier	ekey		1183405	1					
ANR	1183639	BitAndExpression	x54 & 63		1183405	1		&			
ANR	1183640	Identifier	x54		1183405	0					
ANR	1183641	PrimaryExpression	63		1183405	1					
ANR	1183642	ExpressionStatement	x54 -= state -> ekey [ x32 & 63 ]	133:3:4561:4589	1183405	1	True				
ANR	1183643	AssignmentExpression	x54 -= state -> ekey [ x32 & 63 ]		1183405	0		-=			
ANR	1183644	Identifier	x54		1183405	0					
ANR	1183645	ArrayIndexing	state -> ekey [ x32 & 63 ]		1183405	1					
ANR	1183646	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183647	Identifier	state		1183405	0					
ANR	1183648	Identifier	ekey		1183405	1					
ANR	1183649	BitAndExpression	x32 & 63		1183405	1		&			
ANR	1183650	Identifier	x32		1183405	0					
ANR	1183651	PrimaryExpression	63		1183405	1					
ANR	1183652	ExpressionStatement	x32 -= state -> ekey [ x10 & 63 ]	134:3:4594:4622	1183405	2	True				
ANR	1183653	AssignmentExpression	x32 -= state -> ekey [ x10 & 63 ]		1183405	0		-=			
ANR	1183654	Identifier	x32		1183405	0					
ANR	1183655	ArrayIndexing	state -> ekey [ x10 & 63 ]		1183405	1					
ANR	1183656	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183657	Identifier	state		1183405	0					
ANR	1183658	Identifier	ekey		1183405	1					
ANR	1183659	BitAndExpression	x10 & 63		1183405	1		&			
ANR	1183660	Identifier	x10		1183405	0					
ANR	1183661	PrimaryExpression	63		1183405	1					
ANR	1183662	ExpressionStatement	x10 -= state -> ekey [ x76 & 63 ]	135:3:4627:4655	1183405	3	True				
ANR	1183663	AssignmentExpression	x10 -= state -> ekey [ x76 & 63 ]		1183405	0		-=			
ANR	1183664	Identifier	x10		1183405	0					
ANR	1183665	ArrayIndexing	state -> ekey [ x76 & 63 ]		1183405	1					
ANR	1183666	PtrMemberAccess	state -> ekey		1183405	0					
ANR	1183667	Identifier	state		1183405	0					
ANR	1183668	Identifier	ekey		1183405	1					
ANR	1183669	BitAndExpression	x76 & 63		1183405	1		&			
ANR	1183670	Identifier	x76		1183405	0					
ANR	1183671	PrimaryExpression	63		1183405	1					
ANR	1183672	ExpressionStatement	outbuf [ 0 ] = ( ut8 ) x10	139:1:4666:4687	1183405	7	True				
ANR	1183673	AssignmentExpression	outbuf [ 0 ] = ( ut8 ) x10		1183405	0		=			
ANR	1183674	ArrayIndexing	outbuf [ 0 ]		1183405	0					
ANR	1183675	Identifier	outbuf		1183405	0					
ANR	1183676	PrimaryExpression	0		1183405	1					
ANR	1183677	CastExpression	( ut8 ) x10		1183405	1					
ANR	1183678	CastTarget	ut8		1183405	0					
ANR	1183679	Identifier	x10		1183405	1					
ANR	1183680	ExpressionStatement	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )	140:1:4690:4718	1183405	8	True				
ANR	1183681	AssignmentExpression	outbuf [ 1 ] = ( ut8 ) ( x10 >> 8 )		1183405	0		=			
ANR	1183682	ArrayIndexing	outbuf [ 1 ]		1183405	0					
ANR	1183683	Identifier	outbuf		1183405	0					
ANR	1183684	PrimaryExpression	1		1183405	1					
ANR	1183685	CastExpression	( ut8 ) ( x10 >> 8 )		1183405	1					
ANR	1183686	CastTarget	ut8		1183405	0					
ANR	1183687	ShiftExpression	x10 >> 8		1183405	1		>>			
ANR	1183688	Identifier	x10		1183405	0					
ANR	1183689	PrimaryExpression	8		1183405	1					
ANR	1183690	ExpressionStatement	outbuf [ 2 ] = ( ut8 ) x32	141:1:4721:4742	1183405	9	True				
ANR	1183691	AssignmentExpression	outbuf [ 2 ] = ( ut8 ) x32		1183405	0		=			
ANR	1183692	ArrayIndexing	outbuf [ 2 ]		1183405	0					
ANR	1183693	Identifier	outbuf		1183405	0					
ANR	1183694	PrimaryExpression	2		1183405	1					
ANR	1183695	CastExpression	( ut8 ) x32		1183405	1					
ANR	1183696	CastTarget	ut8		1183405	0					
ANR	1183697	Identifier	x32		1183405	1					
ANR	1183698	ExpressionStatement	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )	142:1:4745:4773	1183405	10	True				
ANR	1183699	AssignmentExpression	outbuf [ 3 ] = ( ut8 ) ( x32 >> 8 )		1183405	0		=			
ANR	1183700	ArrayIndexing	outbuf [ 3 ]		1183405	0					
ANR	1183701	Identifier	outbuf		1183405	0					
ANR	1183702	PrimaryExpression	3		1183405	1					
ANR	1183703	CastExpression	( ut8 ) ( x32 >> 8 )		1183405	1					
ANR	1183704	CastTarget	ut8		1183405	0					
ANR	1183705	ShiftExpression	x32 >> 8		1183405	1		>>			
ANR	1183706	Identifier	x32		1183405	0					
ANR	1183707	PrimaryExpression	8		1183405	1					
ANR	1183708	ExpressionStatement	outbuf [ 4 ] = ( ut8 ) x54	143:1:4776:4797	1183405	11	True				
ANR	1183709	AssignmentExpression	outbuf [ 4 ] = ( ut8 ) x54		1183405	0		=			
ANR	1183710	ArrayIndexing	outbuf [ 4 ]		1183405	0					
ANR	1183711	Identifier	outbuf		1183405	0					
ANR	1183712	PrimaryExpression	4		1183405	1					
ANR	1183713	CastExpression	( ut8 ) x54		1183405	1					
ANR	1183714	CastTarget	ut8		1183405	0					
ANR	1183715	Identifier	x54		1183405	1					
ANR	1183716	ExpressionStatement	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )	144:1:4800:4828	1183405	12	True				
ANR	1183717	AssignmentExpression	outbuf [ 5 ] = ( ut8 ) ( x54 >> 8 )		1183405	0		=			
ANR	1183718	ArrayIndexing	outbuf [ 5 ]		1183405	0					
ANR	1183719	Identifier	outbuf		1183405	0					
ANR	1183720	PrimaryExpression	5		1183405	1					
ANR	1183721	CastExpression	( ut8 ) ( x54 >> 8 )		1183405	1					
ANR	1183722	CastTarget	ut8		1183405	0					
ANR	1183723	ShiftExpression	x54 >> 8		1183405	1		>>			
ANR	1183724	Identifier	x54		1183405	0					
ANR	1183725	PrimaryExpression	8		1183405	1					
ANR	1183726	ExpressionStatement	outbuf [ 6 ] = ( ut8 ) x76	145:1:4831:4852	1183405	13	True				
ANR	1183727	AssignmentExpression	outbuf [ 6 ] = ( ut8 ) x76		1183405	0		=			
ANR	1183728	ArrayIndexing	outbuf [ 6 ]		1183405	0					
ANR	1183729	Identifier	outbuf		1183405	0					
ANR	1183730	PrimaryExpression	6		1183405	1					
ANR	1183731	CastExpression	( ut8 ) x76		1183405	1					
ANR	1183732	CastTarget	ut8		1183405	0					
ANR	1183733	Identifier	x76		1183405	1					
ANR	1183734	ExpressionStatement	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )	146:1:4855:4883	1183405	14	True				
ANR	1183735	AssignmentExpression	outbuf [ 7 ] = ( ut8 ) ( x76 >> 8 )		1183405	0		=			
ANR	1183736	ArrayIndexing	outbuf [ 7 ]		1183405	0					
ANR	1183737	Identifier	outbuf		1183405	0					
ANR	1183738	PrimaryExpression	7		1183405	1					
ANR	1183739	CastExpression	( ut8 ) ( x76 >> 8 )		1183405	1					
ANR	1183740	CastTarget	ut8		1183405	0					
ANR	1183741	ShiftExpression	x76 >> 8		1183405	1		>>			
ANR	1183742	Identifier	x76		1183405	0					
ANR	1183743	PrimaryExpression	8		1183405	1					
ANR	1183744	ReturnType	static void		1183405	1					
ANR	1183745	Identifier	rc2_dcrypt8		1183405	2					
ANR	1183746	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf"		1183405	3					
ANR	1183747	Parameter	struct rc2_state * state	105:24:3775:3797	1183405	0	True				
ANR	1183748	ParameterType	struct rc2_state *		1183405	0					
ANR	1183749	Identifier	state		1183405	1					
ANR	1183750	Parameter	const ut8 * inbuf	105:49:3800:3815	1183405	1	True				
ANR	1183751	ParameterType	const ut8 *		1183405	0					
ANR	1183752	Identifier	inbuf		1183405	1					
ANR	1183753	Parameter	ut8 * outbuf	105:67:3818:3828	1183405	2	True				
ANR	1183754	ParameterType	ut8 *		1183405	0					
ANR	1183755	Identifier	outbuf		1183405	1					
ANR	1183756	CFGEntryNode	ENTRY		1183405		True				
ANR	1183757	CFGExitNode	EXIT		1183405		True				
ANR	1183758	Symbol	* x54		1183405						
ANR	1183759	Symbol	* x32		1183405						
ANR	1183760	Symbol	* x10		1183405						
ANR	1183761	Symbol	* x76		1183405						
ANR	1183762	Symbol	~x54		1183405						
ANR	1183763	Symbol	~x32		1183405						
ANR	1183764	Symbol	~x10		1183405						
ANR	1183765	Symbol	~x76		1183405						
ANR	1183766	Symbol	* inbuf		1183405						
ANR	1183767	Symbol	i		1183405						
ANR	1183768	Symbol	* * state		1183405						
ANR	1183769	Symbol	* state		1183405						
ANR	1183770	Symbol	* outbuf		1183405						
ANR	1183771	Symbol	* i		1183405						
ANR	1183772	Symbol	inbuf		1183405						
ANR	1183773	Symbol	outbuf		1183405						
ANR	1183774	Symbol	x10		1183405						
ANR	1183775	Symbol	x32		1183405						
ANR	1183776	Symbol	x54		1183405						
ANR	1183777	Symbol	x76		1183405						
ANR	1183778	Symbol	state		1183405						
ANR	1183779	Symbol	* state -> ekey		1183405						
ANR	1183780	Symbol	state -> ekey		1183405						
ANR	1183781	Function	rc2_dcrypt	149:0:4888:5383							
ANR	1183782	FunctionDef	"rc2_dcrypt (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen)"		1183781	0					
ANR	1183783	CompoundStatement		149:91:4979:5383	1183781	0					
ANR	1183784	IdentifierDeclStatement	int i ;	150:1:4982:4987	1183781	0	True				
ANR	1183785	IdentifierDecl	i		1183781	0					
ANR	1183786	IdentifierDeclType	int		1183781	0					
ANR	1183787	Identifier	i		1183781	1					
ANR	1183788	IdentifierDeclStatement	char data_block [ BLOCK_SIZE + 1 ] = { 0 } ;	151:1:4990:5027	1183781	1	True				
ANR	1183789	IdentifierDecl	data_block [ BLOCK_SIZE + 1 ] = { 0 }		1183781	0					
ANR	1183790	IdentifierDeclType	char [ BLOCK_SIZE + 1 ]		1183781	0					
ANR	1183791	Identifier	data_block		1183781	1					
ANR	1183792	AdditiveExpression	BLOCK_SIZE + 1		1183781	2		+			
ANR	1183793	Identifier	BLOCK_SIZE		1183781	0					
ANR	1183794	PrimaryExpression	1		1183781	1					
ANR	1183795	AssignmentExpression	data_block [ BLOCK_SIZE + 1 ] = { 0 }		1183781	3		=			
ANR	1183796	Identifier	data_block		1183781	0					
ANR	1183797	InitializerList	0		1183781	1					
ANR	1183798	PrimaryExpression	0		1183781	0					
ANR	1183799	IdentifierDeclStatement	int idx = 0 ;	152:1:5030:5041	1183781	2	True				
ANR	1183800	IdentifierDecl	idx = 0		1183781	0					
ANR	1183801	IdentifierDeclType	int		1183781	0					
ANR	1183802	Identifier	idx		1183781	1					
ANR	1183803	AssignmentExpression	idx = 0		1183781	2		=			
ANR	1183804	Identifier	idx		1183781	0					
ANR	1183805	PrimaryExpression	0		1183781	1					
ANR	1183806	IdentifierDeclStatement	char dcrypted_block [ BLOCK_SIZE + 1 ] = { 0 } ;	153:1:5044:5085	1183781	3	True				
ANR	1183807	IdentifierDecl	dcrypted_block [ BLOCK_SIZE + 1 ] = { 0 }		1183781	0					
ANR	1183808	IdentifierDeclType	char [ BLOCK_SIZE + 1 ]		1183781	0					
ANR	1183809	Identifier	dcrypted_block		1183781	1					
ANR	1183810	AdditiveExpression	BLOCK_SIZE + 1		1183781	2		+			
ANR	1183811	Identifier	BLOCK_SIZE		1183781	0					
ANR	1183812	PrimaryExpression	1		1183781	1					
ANR	1183813	AssignmentExpression	dcrypted_block [ BLOCK_SIZE + 1 ] = { 0 }		1183781	3		=			
ANR	1183814	Identifier	dcrypted_block		1183781	0					
ANR	1183815	InitializerList	0		1183781	1					
ANR	1183816	PrimaryExpression	0		1183781	0					
ANR	1183817	IdentifierDeclStatement	char * ptr = ( char * ) outbuf ;	154:1:5088:5115	1183781	4	True				
ANR	1183818	IdentifierDecl	* ptr = ( char * ) outbuf		1183781	0					
ANR	1183819	IdentifierDeclType	char *		1183781	0					
ANR	1183820	Identifier	ptr		1183781	1					
ANR	1183821	AssignmentExpression	* ptr = ( char * ) outbuf		1183781	2		=			
ANR	1183822	Identifier	ptr		1183781	0					
ANR	1183823	CastExpression	( char * ) outbuf		1183781	1					
ANR	1183824	CastTarget	char *		1183781	0					
ANR	1183825	Identifier	outbuf		1183781	1					
ANR	1183826	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		1183781	5					
ANR	1183827	ForInit	i = 0 ;	156:6:5124:5129	1183781	0	True				
ANR	1183828	AssignmentExpression	i = 0		1183781	0		=			
ANR	1183829	Identifier	i		1183781	0					
ANR	1183830	PrimaryExpression	0		1183781	1					
ANR	1183831	Condition	i < buflen	156:13:5131:5140	1183781	1	True				
ANR	1183832	RelationalExpression	i < buflen		1183781	0		<			
ANR	1183833	Identifier	i		1183781	0					
ANR	1183834	Identifier	buflen		1183781	1					
ANR	1183835	PostIncDecOperationExpression	i ++	156:25:5143:5145	1183781	2	True				
ANR	1183836	Identifier	i		1183781	0					
ANR	1183837	IncDec	++		1183781	1					
ANR	1183838	CompoundStatement		8:30:168:168	1183781	3					
ANR	1183839	ExpressionStatement	data_block [ idx ] = inbuf [ i ]	157:2:5152:5178	1183781	0	True				
ANR	1183840	AssignmentExpression	data_block [ idx ] = inbuf [ i ]		1183781	0		=			
ANR	1183841	ArrayIndexing	data_block [ idx ]		1183781	0					
ANR	1183842	Identifier	data_block		1183781	0					
ANR	1183843	Identifier	idx		1183781	1					
ANR	1183844	ArrayIndexing	inbuf [ i ]		1183781	1					
ANR	1183845	Identifier	inbuf		1183781	0					
ANR	1183846	Identifier	i		1183781	1					
ANR	1183847	ExpressionStatement	idx += 1	158:2:5182:5190	1183781	1	True				
ANR	1183848	AssignmentExpression	idx += 1		1183781	0		+=			
ANR	1183849	Identifier	idx		1183781	0					
ANR	1183850	PrimaryExpression	1		1183781	1					
ANR	1183851	IfStatement	if ( idx % BLOCK_SIZE == 0 )		1183781	2					
ANR	1183852	Condition	idx % BLOCK_SIZE == 0	159:6:5198:5218	1183781	0	True				
ANR	1183853	EqualityExpression	idx % BLOCK_SIZE == 0		1183781	0		==			
ANR	1183854	MultiplicativeExpression	idx % BLOCK_SIZE		1183781	0		%			
ANR	1183855	Identifier	idx		1183781	0					
ANR	1183856	Identifier	BLOCK_SIZE		1183781	1					
ANR	1183857	PrimaryExpression	0		1183781	1					
ANR	1183858	CompoundStatement		11:29:241:241	1183781	1					
ANR	1183859	ExpressionStatement	"rc2_dcrypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) dcrypted_block )"	160:3:5226:5295	1183781	0	True				
ANR	1183860	CallExpression	"rc2_dcrypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) dcrypted_block )"		1183781	0					
ANR	1183861	Callee	rc2_dcrypt8		1183781	0					
ANR	1183862	Identifier	rc2_dcrypt8		1183781	0					
ANR	1183863	ArgumentList	state		1183781	1					
ANR	1183864	Argument	state		1183781	0					
ANR	1183865	Identifier	state		1183781	0					
ANR	1183866	Argument	( const ut8 * ) data_block		1183781	1					
ANR	1183867	CastExpression	( const ut8 * ) data_block		1183781	0					
ANR	1183868	CastTarget	const ut8 *		1183781	0					
ANR	1183869	Identifier	data_block		1183781	1					
ANR	1183870	Argument	( ut8 * ) dcrypted_block		1183781	2					
ANR	1183871	CastExpression	( ut8 * ) dcrypted_block		1183781	0					
ANR	1183872	CastTarget	ut8 *		1183781	0					
ANR	1183873	Identifier	dcrypted_block		1183781	1					
ANR	1183874	ExpressionStatement	"memcpy ( ptr , dcrypted_block , BLOCK_SIZE )"	161:3:5300:5340	1183781	1	True				
ANR	1183875	CallExpression	"memcpy ( ptr , dcrypted_block , BLOCK_SIZE )"		1183781	0					
ANR	1183876	Callee	memcpy		1183781	0					
ANR	1183877	Identifier	memcpy		1183781	0					
ANR	1183878	ArgumentList	ptr		1183781	1					
ANR	1183879	Argument	ptr		1183781	0					
ANR	1183880	Identifier	ptr		1183781	0					
ANR	1183881	Argument	dcrypted_block		1183781	1					
ANR	1183882	Identifier	dcrypted_block		1183781	0					
ANR	1183883	Argument	BLOCK_SIZE		1183781	2					
ANR	1183884	Identifier	BLOCK_SIZE		1183781	0					
ANR	1183885	ExpressionStatement	ptr += BLOCK_SIZE	162:3:5345:5362	1183781	2	True				
ANR	1183886	AssignmentExpression	ptr += BLOCK_SIZE		1183781	0		+=			
ANR	1183887	Identifier	ptr		1183781	0					
ANR	1183888	Identifier	BLOCK_SIZE		1183781	1					
ANR	1183889	ExpressionStatement	idx = 0	163:3:5367:5374	1183781	3	True				
ANR	1183890	AssignmentExpression	idx = 0		1183781	0		=			
ANR	1183891	Identifier	idx		1183781	0					
ANR	1183892	PrimaryExpression	0		1183781	1					
ANR	1183893	ReturnType	static void		1183781	1					
ANR	1183894	Identifier	rc2_dcrypt		1183781	2					
ANR	1183895	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen"		1183781	3					
ANR	1183896	Parameter	struct rc2_state * state	149:23:4911:4933	1183781	0	True				
ANR	1183897	ParameterType	struct rc2_state *		1183781	0					
ANR	1183898	Identifier	state		1183781	1					
ANR	1183899	Parameter	const ut8 * inbuf	149:48:4936:4951	1183781	1	True				
ANR	1183900	ParameterType	const ut8 *		1183781	0					
ANR	1183901	Identifier	inbuf		1183781	1					
ANR	1183902	Parameter	ut8 * outbuf	149:66:4954:4964	1183781	2	True				
ANR	1183903	ParameterType	ut8 *		1183781	0					
ANR	1183904	Identifier	outbuf		1183781	1					
ANR	1183905	Parameter	int buflen	149:79:4967:4976	1183781	3	True				
ANR	1183906	ParameterType	int		1183781	0					
ANR	1183907	Identifier	buflen		1183781	1					
ANR	1183908	CFGEntryNode	ENTRY		1183781		True				
ANR	1183909	CFGExitNode	EXIT		1183781		True				
ANR	1183910	Symbol	* inbuf		1183781						
ANR	1183911	Symbol	BLOCK_SIZE		1183781						
ANR	1183912	Symbol	i		1183781						
ANR	1183913	Symbol	data_block		1183781						
ANR	1183914	Symbol	ptr		1183781						
ANR	1183915	Symbol	* i		1183781						
ANR	1183916	Symbol	inbuf		1183781						
ANR	1183917	Symbol	outbuf		1183781						
ANR	1183918	Symbol	dcrypted_block		1183781						
ANR	1183919	Symbol	* idx		1183781						
ANR	1183920	Symbol	buflen		1183781						
ANR	1183921	Symbol	state		1183781						
ANR	1183922	Symbol	idx		1183781						
ANR	1183923	Symbol	* data_block		1183781						
ANR	1183924	Function	rc2_crypt	168:0:5386:6082							
ANR	1183925	FunctionDef	"rc2_crypt (struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen)"		1183924	0					
ANR	1183926	CompoundStatement		168:90:5476:6082	1183924	0					
ANR	1183927	IdentifierDeclStatement	int i ;	169:1:5479:5484	1183924	0	True				
ANR	1183928	IdentifierDecl	i		1183924	0					
ANR	1183929	IdentifierDeclType	int		1183924	0					
ANR	1183930	Identifier	i		1183924	1					
ANR	1183931	IdentifierDeclStatement	char data_block [ BLOCK_SIZE ] = { 0 } ;	170:1:5487:5520	1183924	1	True				
ANR	1183932	IdentifierDecl	data_block [ BLOCK_SIZE ] = { 0 }		1183924	0					
ANR	1183933	IdentifierDeclType	char [ BLOCK_SIZE ]		1183924	0					
ANR	1183934	Identifier	data_block		1183924	1					
ANR	1183935	Identifier	BLOCK_SIZE		1183924	2					
ANR	1183936	AssignmentExpression	data_block [ BLOCK_SIZE ] = { 0 }		1183924	3		=			
ANR	1183937	Identifier	BLOCK_SIZE		1183924	0					
ANR	1183938	InitializerList	0		1183924	1					
ANR	1183939	PrimaryExpression	0		1183924	0					
ANR	1183940	IdentifierDeclStatement	int idx = 0 ;	171:1:5523:5534	1183924	2	True				
ANR	1183941	IdentifierDecl	idx = 0		1183924	0					
ANR	1183942	IdentifierDeclType	int		1183924	0					
ANR	1183943	Identifier	idx		1183924	1					
ANR	1183944	AssignmentExpression	idx = 0		1183924	2		=			
ANR	1183945	Identifier	idx		1183924	0					
ANR	1183946	PrimaryExpression	0		1183924	1					
ANR	1183947	IdentifierDeclStatement	char crypted_block [ BLOCK_SIZE ] = { 0 } ;	173:1:5538:5574	1183924	3	True				
ANR	1183948	IdentifierDecl	crypted_block [ BLOCK_SIZE ] = { 0 }		1183924	0					
ANR	1183949	IdentifierDeclType	char [ BLOCK_SIZE ]		1183924	0					
ANR	1183950	Identifier	crypted_block		1183924	1					
ANR	1183951	Identifier	BLOCK_SIZE		1183924	2					
ANR	1183952	AssignmentExpression	crypted_block [ BLOCK_SIZE ] = { 0 }		1183924	3		=			
ANR	1183953	Identifier	BLOCK_SIZE		1183924	0					
ANR	1183954	InitializerList	0		1183924	1					
ANR	1183955	PrimaryExpression	0		1183924	0					
ANR	1183956	IdentifierDeclStatement	char * ptr = ( char * ) outbuf ;	174:1:5577:5604	1183924	4	True				
ANR	1183957	IdentifierDecl	* ptr = ( char * ) outbuf		1183924	0					
ANR	1183958	IdentifierDeclType	char *		1183924	0					
ANR	1183959	Identifier	ptr		1183924	1					
ANR	1183960	AssignmentExpression	* ptr = ( char * ) outbuf		1183924	2		=			
ANR	1183961	Identifier	ptr		1183924	0					
ANR	1183962	CastExpression	( char * ) outbuf		1183924	1					
ANR	1183963	CastTarget	char *		1183924	0					
ANR	1183964	Identifier	outbuf		1183924	1					
ANR	1183965	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		1183924	5					
ANR	1183966	ForInit	i = 0 ;	177:6:5653:5658	1183924	0	True				
ANR	1183967	AssignmentExpression	i = 0		1183924	0		=			
ANR	1183968	Identifier	i		1183924	0					
ANR	1183969	PrimaryExpression	0		1183924	1					
ANR	1183970	Condition	i < buflen	177:13:5660:5669	1183924	1	True				
ANR	1183971	RelationalExpression	i < buflen		1183924	0		<			
ANR	1183972	Identifier	i		1183924	0					
ANR	1183973	Identifier	buflen		1183924	1					
ANR	1183974	PostIncDecOperationExpression	i ++	177:25:5672:5674	1183924	2	True				
ANR	1183975	Identifier	i		1183924	0					
ANR	1183976	IncDec	++		1183924	1					
ANR	1183977	CompoundStatement		10:30:200:200	1183924	3					
ANR	1183978	ExpressionStatement	data_block [ idx ] = inbuf [ i ]	178:2:5681:5707	1183924	0	True				
ANR	1183979	AssignmentExpression	data_block [ idx ] = inbuf [ i ]		1183924	0		=			
ANR	1183980	ArrayIndexing	data_block [ idx ]		1183924	0					
ANR	1183981	Identifier	data_block		1183924	0					
ANR	1183982	Identifier	idx		1183924	1					
ANR	1183983	ArrayIndexing	inbuf [ i ]		1183924	1					
ANR	1183984	Identifier	inbuf		1183924	0					
ANR	1183985	Identifier	i		1183924	1					
ANR	1183986	ExpressionStatement	idx += 1	179:2:5711:5719	1183924	1	True				
ANR	1183987	AssignmentExpression	idx += 1		1183924	0		+=			
ANR	1183988	Identifier	idx		1183924	0					
ANR	1183989	PrimaryExpression	1		1183924	1					
ANR	1183990	IfStatement	if ( idx % BLOCK_SIZE == 0 )		1183924	2					
ANR	1183991	Condition	idx % BLOCK_SIZE == 0	180:6:5727:5747	1183924	0	True				
ANR	1183992	EqualityExpression	idx % BLOCK_SIZE == 0		1183924	0		==			
ANR	1183993	MultiplicativeExpression	idx % BLOCK_SIZE		1183924	0		%			
ANR	1183994	Identifier	idx		1183924	0					
ANR	1183995	Identifier	BLOCK_SIZE		1183924	1					
ANR	1183996	PrimaryExpression	0		1183924	1					
ANR	1183997	CompoundStatement		13:29:273:273	1183924	1					
ANR	1183998	ExpressionStatement	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"	181:3:5755:5821	1183924	0	True				
ANR	1183999	CallExpression	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"		1183924	0					
ANR	1184000	Callee	rc2_crypt8		1183924	0					
ANR	1184001	Identifier	rc2_crypt8		1183924	0					
ANR	1184002	ArgumentList	state		1183924	1					
ANR	1184003	Argument	state		1183924	0					
ANR	1184004	Identifier	state		1183924	0					
ANR	1184005	Argument	( const ut8 * ) data_block		1183924	1					
ANR	1184006	CastExpression	( const ut8 * ) data_block		1183924	0					
ANR	1184007	CastTarget	const ut8 *		1183924	0					
ANR	1184008	Identifier	data_block		1183924	1					
ANR	1184009	Argument	( ut8 * ) crypted_block		1183924	2					
ANR	1184010	CastExpression	( ut8 * ) crypted_block		1183924	0					
ANR	1184011	CastTarget	ut8 *		1183924	0					
ANR	1184012	Identifier	crypted_block		1183924	1					
ANR	1184013	ExpressionStatement	"strncpy ( ptr , crypted_block , BLOCK_SIZE )"	182:3:5826:5865	1183924	1	True				
ANR	1184014	CallExpression	"strncpy ( ptr , crypted_block , BLOCK_SIZE )"		1183924	0					
ANR	1184015	Callee	strncpy		1183924	0					
ANR	1184016	Identifier	strncpy		1183924	0					
ANR	1184017	ArgumentList	ptr		1183924	1					
ANR	1184018	Argument	ptr		1183924	0					
ANR	1184019	Identifier	ptr		1183924	0					
ANR	1184020	Argument	crypted_block		1183924	1					
ANR	1184021	Identifier	crypted_block		1183924	0					
ANR	1184022	Argument	BLOCK_SIZE		1183924	2					
ANR	1184023	Identifier	BLOCK_SIZE		1183924	0					
ANR	1184024	ExpressionStatement	ptr += BLOCK_SIZE	183:3:5870:5887	1183924	2	True				
ANR	1184025	AssignmentExpression	ptr += BLOCK_SIZE		1183924	0		+=			
ANR	1184026	Identifier	ptr		1183924	0					
ANR	1184027	Identifier	BLOCK_SIZE		1183924	1					
ANR	1184028	ExpressionStatement	idx = 0	184:3:5892:5899	1183924	3	True				
ANR	1184029	AssignmentExpression	idx = 0		1183924	0		=			
ANR	1184030	Identifier	idx		1183924	0					
ANR	1184031	PrimaryExpression	0		1183924	1					
ANR	1184032	IfStatement	if ( idx % 8 )		1183924	6					
ANR	1184033	Condition	idx % 8	188:5:5914:5920	1183924	0	True				
ANR	1184034	MultiplicativeExpression	idx % 8		1183924	0		%			
ANR	1184035	Identifier	idx		1183924	0					
ANR	1184036	PrimaryExpression	8		1183924	1					
ANR	1184037	CompoundStatement		21:14:446:446	1183924	1					
ANR	1184038	WhileStatement	while ( idx % 8 )		1183924	0					
ANR	1184039	Condition	idx % 8	189:9:5934:5940	1183924	0	True				
ANR	1184040	MultiplicativeExpression	idx % 8		1183924	0		%			
ANR	1184041	Identifier	idx		1183924	0					
ANR	1184042	PrimaryExpression	8		1183924	1					
ANR	1184043	CompoundStatement		22:18:466:466	1183924	1					
ANR	1184044	ExpressionStatement	data_block [ idx ++ ] = 0	190:3:5948:5969	1183924	0	True				
ANR	1184045	AssignmentExpression	data_block [ idx ++ ] = 0		1183924	0		=			
ANR	1184046	ArrayIndexing	data_block [ idx ++ ]		1183924	0					
ANR	1184047	Identifier	data_block		1183924	0					
ANR	1184048	PostIncDecOperationExpression	idx ++		1183924	1					
ANR	1184049	Identifier	idx		1183924	0					
ANR	1184050	IncDec	++		1183924	1					
ANR	1184051	PrimaryExpression	0		1183924	1					
ANR	1184052	ExpressionStatement	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"	192:2:5977:6043	1183924	1	True				
ANR	1184053	CallExpression	"rc2_crypt8 ( state , ( const ut8 * ) data_block , ( ut8 * ) crypted_block )"		1183924	0					
ANR	1184054	Callee	rc2_crypt8		1183924	0					
ANR	1184055	Identifier	rc2_crypt8		1183924	0					
ANR	1184056	ArgumentList	state		1183924	1					
ANR	1184057	Argument	state		1183924	0					
ANR	1184058	Identifier	state		1183924	0					
ANR	1184059	Argument	( const ut8 * ) data_block		1183924	1					
ANR	1184060	CastExpression	( const ut8 * ) data_block		1183924	0					
ANR	1184061	CastTarget	const ut8 *		1183924	0					
ANR	1184062	Identifier	data_block		1183924	1					
ANR	1184063	Argument	( ut8 * ) crypted_block		1183924	2					
ANR	1184064	CastExpression	( ut8 * ) crypted_block		1183924	0					
ANR	1184065	CastTarget	ut8 *		1183924	0					
ANR	1184066	Identifier	crypted_block		1183924	1					
ANR	1184067	ExpressionStatement	"strncpy ( ptr , crypted_block , 8 )"	193:2:6047:6077	1183924	2	True				
ANR	1184068	CallExpression	"strncpy ( ptr , crypted_block , 8 )"		1183924	0					
ANR	1184069	Callee	strncpy		1183924	0					
ANR	1184070	Identifier	strncpy		1183924	0					
ANR	1184071	ArgumentList	ptr		1183924	1					
ANR	1184072	Argument	ptr		1183924	0					
ANR	1184073	Identifier	ptr		1183924	0					
ANR	1184074	Argument	crypted_block		1183924	1					
ANR	1184075	Identifier	crypted_block		1183924	0					
ANR	1184076	Argument	8		1183924	2					
ANR	1184077	PrimaryExpression	8		1183924	0					
ANR	1184078	ReturnType	static void		1183924	1					
ANR	1184079	Identifier	rc2_crypt		1183924	2					
ANR	1184080	ParameterList	"struct rc2_state * state , const ut8 * inbuf , ut8 * outbuf , int buflen"		1183924	3					
ANR	1184081	Parameter	struct rc2_state * state	168:22:5408:5430	1183924	0	True				
ANR	1184082	ParameterType	struct rc2_state *		1183924	0					
ANR	1184083	Identifier	state		1183924	1					
ANR	1184084	Parameter	const ut8 * inbuf	168:47:5433:5448	1183924	1	True				
ANR	1184085	ParameterType	const ut8 *		1183924	0					
ANR	1184086	Identifier	inbuf		1183924	1					
ANR	1184087	Parameter	ut8 * outbuf	168:65:5451:5461	1183924	2	True				
ANR	1184088	ParameterType	ut8 *		1183924	0					
ANR	1184089	Identifier	outbuf		1183924	1					
ANR	1184090	Parameter	int buflen	168:78:5464:5473	1183924	3	True				
ANR	1184091	ParameterType	int		1183924	0					
ANR	1184092	Identifier	buflen		1183924	1					
ANR	1184093	CFGEntryNode	ENTRY		1183924		True				
ANR	1184094	CFGExitNode	EXIT		1183924		True				
ANR	1184095	Symbol	* inbuf		1183924						
ANR	1184096	Symbol	crypted_block		1183924						
ANR	1184097	Symbol	BLOCK_SIZE		1183924						
ANR	1184098	Symbol	i		1183924						
ANR	1184099	Symbol	data_block		1183924						
ANR	1184100	Symbol	ptr		1183924						
ANR	1184101	Symbol	* i		1183924						
ANR	1184102	Symbol	inbuf		1183924						
ANR	1184103	Symbol	outbuf		1183924						
ANR	1184104	Symbol	* idx		1183924						
ANR	1184105	Symbol	buflen		1183924						
ANR	1184106	Symbol	state		1183924						
ANR	1184107	Symbol	idx		1183924						
ANR	1184108	Symbol	* data_block		1183924						
ANR	1184109	DeclStmt									
ANR	1184110	Decl							struct rc2_state	struct rc2_state	state
ANR	1184111	DeclStmt									
ANR	1184112	Decl							int	int	flag
ANR	1184113	Function	rc2_set_key	202:0:6199:6379							
ANR	1184114	FunctionDef	"rc2_set_key (RCrypto * cry , const ut8 * key , int keylen , int mode , int direction)"		1184113	0					
ANR	1184115	CompoundStatement		202:91:6290:6379	1184113	0					
ANR	1184116	ExpressionStatement	flag = direction	203:1:6293:6309	1184113	0	True				
ANR	1184117	AssignmentExpression	flag = direction		1184113	0		=			
ANR	1184118	Identifier	flag		1184113	0					
ANR	1184119	Identifier	direction		1184113	1					
ANR	1184120	ExpressionStatement	state . key_size = 1024	204:1:6312:6333	1184113	1	True				
ANR	1184121	AssignmentExpression	state . key_size = 1024		1184113	0		=			
ANR	1184122	MemberAccess	state . key_size		1184113	0					
ANR	1184123	Identifier	state		1184113	0					
ANR	1184124	Identifier	key_size		1184113	1					
ANR	1184125	PrimaryExpression	1024		1184113	1					
ANR	1184126	ReturnStatement	"return rc2_expandKey ( & state , key , keylen ) ;"	205:1:6336:6377	1184113	2	True				
ANR	1184127	CallExpression	"rc2_expandKey ( & state , key , keylen )"		1184113	0					
ANR	1184128	Callee	rc2_expandKey		1184113	0					
ANR	1184129	Identifier	rc2_expandKey		1184113	0					
ANR	1184130	ArgumentList	& state		1184113	1					
ANR	1184131	Argument	& state		1184113	0					
ANR	1184132	UnaryOperationExpression	& state		1184113	0					
ANR	1184133	UnaryOperator	&		1184113	0					
ANR	1184134	Identifier	state		1184113	1					
ANR	1184135	Argument	key		1184113	1					
ANR	1184136	Identifier	key		1184113	0					
ANR	1184137	Argument	keylen		1184113	2					
ANR	1184138	Identifier	keylen		1184113	0					
ANR	1184139	ReturnType	static bool		1184113	1					
ANR	1184140	Identifier	rc2_set_key		1184113	2					
ANR	1184141	ParameterList	"RCrypto * cry , const ut8 * key , int keylen , int mode , int direction"		1184113	3					
ANR	1184142	Parameter	RCrypto * cry	202:24:6223:6234	1184113	0	True				
ANR	1184143	ParameterType	RCrypto *		1184113	0					
ANR	1184144	Identifier	cry		1184113	1					
ANR	1184145	Parameter	const ut8 * key	202:38:6237:6250	1184113	1	True				
ANR	1184146	ParameterType	const ut8 *		1184113	0					
ANR	1184147	Identifier	key		1184113	1					
ANR	1184148	Parameter	int keylen	202:54:6253:6262	1184113	2	True				
ANR	1184149	ParameterType	int		1184113	0					
ANR	1184150	Identifier	keylen		1184113	1					
ANR	1184151	Parameter	int mode	202:66:6265:6272	1184113	3	True				
ANR	1184152	ParameterType	int		1184113	0					
ANR	1184153	Identifier	mode		1184113	1					
ANR	1184154	Parameter	int direction	202:76:6275:6287	1184113	4	True				
ANR	1184155	ParameterType	int		1184113	0					
ANR	1184156	Identifier	direction		1184113	1					
ANR	1184157	CFGEntryNode	ENTRY		1184113		True				
ANR	1184158	CFGExitNode	EXIT		1184113		True				
ANR	1184159	Symbol	mode		1184113						
ANR	1184160	Symbol	flag		1184113						
ANR	1184161	Symbol	state . key_size		1184113						
ANR	1184162	Symbol	& state		1184113						
ANR	1184163	Symbol	rc2_expandKey		1184113						
ANR	1184164	Symbol	keylen		1184113						
ANR	1184165	Symbol	cry		1184113						
ANR	1184166	Symbol	state		1184113						
ANR	1184167	Symbol	key		1184113						
ANR	1184168	Symbol	direction		1184113						
ANR	1184169	Function	rc2_get_key_size	208:0:6382:6450							
ANR	1184170	FunctionDef	rc2_get_key_size (RCrypto * cry)		1184169	0					
ANR	1184171	CompoundStatement		208:42:6424:6450	1184169	0					
ANR	1184172	ReturnStatement	return state . key_size ;	209:1:6427:6448	1184169	0	True				
ANR	1184173	MemberAccess	state . key_size		1184169	0					
ANR	1184174	Identifier	state		1184169	0					
ANR	1184175	Identifier	key_size		1184169	1					
ANR	1184176	ReturnType	static int		1184169	1					
ANR	1184177	Identifier	rc2_get_key_size		1184169	2					
ANR	1184178	ParameterList	RCrypto * cry		1184169	3					
ANR	1184179	Parameter	RCrypto * cry	208:28:6410:6421	1184169	0	True				
ANR	1184180	ParameterType	RCrypto *		1184169	0					
ANR	1184181	Identifier	cry		1184169	1					
ANR	1184182	CFGEntryNode	ENTRY		1184169		True				
ANR	1184183	CFGExitNode	EXIT		1184169		True				
ANR	1184184	Symbol	state . key_size		1184169						
ANR	1184185	Symbol	cry		1184169						
ANR	1184186	Symbol	state		1184169						
ANR	1184187	Function	rc2_use	212:0:6453:6524							
ANR	1184188	FunctionDef	rc2_use (const char * algo)		1184187	0					
ANR	1184189	CompoundStatement		212:38:6491:6524	1184187	0					
ANR	1184190	ReturnStatement	"return ! strcmp ( algo , ""rc2"" ) ;"	213:1:6494:6522	1184187	0	True				
ANR	1184191	UnaryOperationExpression	"! strcmp ( algo , ""rc2"" )"		1184187	0					
ANR	1184192	UnaryOperator	!		1184187	0					
ANR	1184193	CallExpression	"strcmp ( algo , ""rc2"" )"		1184187	1					
ANR	1184194	Callee	strcmp		1184187	0					
ANR	1184195	Identifier	strcmp		1184187	0					
ANR	1184196	ArgumentList	algo		1184187	1					
ANR	1184197	Argument	algo		1184187	0					
ANR	1184198	Identifier	algo		1184187	0					
ANR	1184199	Argument	"""rc2"""		1184187	1					
ANR	1184200	PrimaryExpression	"""rc2"""		1184187	0					
ANR	1184201	ReturnType	static bool		1184187	1					
ANR	1184202	Identifier	rc2_use		1184187	2					
ANR	1184203	ParameterList	const char * algo		1184187	3					
ANR	1184204	Parameter	const char * algo	212:20:6473:6488	1184187	0	True				
ANR	1184205	ParameterType	const char *		1184187	0					
ANR	1184206	Identifier	algo		1184187	1					
ANR	1184207	CFGEntryNode	ENTRY		1184187		True				
ANR	1184208	CFGExitNode	EXIT		1184187		True				
ANR	1184209	Symbol	strcmp		1184187						
ANR	1184210	Symbol	algo		1184187						
ANR	1184211	Function	update	216:0:6527:6835							
ANR	1184212	FunctionDef	"update (RCrypto * cry , const ut8 * buf , int len)"		1184211	0					
ANR	1184213	CompoundStatement		216:58:6585:6835	1184211	0					
ANR	1184214	IdentifierDeclStatement	"ut8 * obuf = calloc ( 1 , len ) ;"	217:1:6588:6615	1184211	0	True				
ANR	1184215	IdentifierDecl	"* obuf = calloc ( 1 , len )"		1184211	0					
ANR	1184216	IdentifierDeclType	ut8 *		1184211	0					
ANR	1184217	Identifier	obuf		1184211	1					
ANR	1184218	AssignmentExpression	"* obuf = calloc ( 1 , len )"		1184211	2		=			
ANR	1184219	Identifier	obuf		1184211	0					
ANR	1184220	CallExpression	"calloc ( 1 , len )"		1184211	1					
ANR	1184221	Callee	calloc		1184211	0					
ANR	1184222	Identifier	calloc		1184211	0					
ANR	1184223	ArgumentList	1		1184211	1					
ANR	1184224	Argument	1		1184211	0					
ANR	1184225	PrimaryExpression	1		1184211	0					
ANR	1184226	Argument	len		1184211	1					
ANR	1184227	Identifier	len		1184211	0					
ANR	1184228	IfStatement	if ( ! obuf )		1184211	1					
ANR	1184229	Condition	! obuf	218:5:6622:6626	1184211	0	True				
ANR	1184230	UnaryOperationExpression	! obuf		1184211	0					
ANR	1184231	UnaryOperator	!		1184211	0					
ANR	1184232	Identifier	obuf		1184211	1					
ANR	1184233	CompoundStatement		3:12:43:43	1184211	1					
ANR	1184234	ReturnStatement	return false ;	219:2:6633:6645	1184211	0	True				
ANR	1184235	Identifier	false		1184211	0					
ANR	1184236	IfStatement	if ( flag == 0 )		1184211	2					
ANR	1184237	Condition	flag == 0	221:5:6655:6663	1184211	0	True				
ANR	1184238	EqualityExpression	flag == 0		1184211	0		==			
ANR	1184239	Identifier	flag		1184211	0					
ANR	1184240	PrimaryExpression	0		1184211	1					
ANR	1184241	CompoundStatement		6:16:80:80	1184211	1					
ANR	1184242	ExpressionStatement	"rc2_crypt ( & state , buf , obuf , len )"	222:2:6670:6704	1184211	0	True				
ANR	1184243	CallExpression	"rc2_crypt ( & state , buf , obuf , len )"		1184211	0					
ANR	1184244	Callee	rc2_crypt		1184211	0					
ANR	1184245	Identifier	rc2_crypt		1184211	0					
ANR	1184246	ArgumentList	& state		1184211	1					
ANR	1184247	Argument	& state		1184211	0					
ANR	1184248	UnaryOperationExpression	& state		1184211	0					
ANR	1184249	UnaryOperator	&		1184211	0					
ANR	1184250	Identifier	state		1184211	1					
ANR	1184251	Argument	buf		1184211	1					
ANR	1184252	Identifier	buf		1184211	0					
ANR	1184253	Argument	obuf		1184211	2					
ANR	1184254	Identifier	obuf		1184211	0					
ANR	1184255	Argument	len		1184211	3					
ANR	1184256	Identifier	len		1184211	0					
ANR	1184257	ElseStatement	else		1184211	0					
ANR	1184258	IfStatement	if ( flag == 1 )		1184211	0					
ANR	1184259	Condition	flag == 1	223:12:6718:6726	1184211	0	True				
ANR	1184260	EqualityExpression	flag == 1		1184211	0		==			
ANR	1184261	Identifier	flag		1184211	0					
ANR	1184262	PrimaryExpression	1		1184211	1					
ANR	1184263	CompoundStatement		8:23:143:143	1184211	1					
ANR	1184264	ExpressionStatement	"rc2_dcrypt ( & state , buf , obuf , len )"	224:2:6733:6768	1184211	0	True				
ANR	1184265	CallExpression	"rc2_dcrypt ( & state , buf , obuf , len )"		1184211	0					
ANR	1184266	Callee	rc2_dcrypt		1184211	0					
ANR	1184267	Identifier	rc2_dcrypt		1184211	0					
ANR	1184268	ArgumentList	& state		1184211	1					
ANR	1184269	Argument	& state		1184211	0					
ANR	1184270	UnaryOperationExpression	& state		1184211	0					
ANR	1184271	UnaryOperator	&		1184211	0					
ANR	1184272	Identifier	state		1184211	1					
ANR	1184273	Argument	buf		1184211	1					
ANR	1184274	Identifier	buf		1184211	0					
ANR	1184275	Argument	obuf		1184211	2					
ANR	1184276	Identifier	obuf		1184211	0					
ANR	1184277	Argument	len		1184211	3					
ANR	1184278	Identifier	len		1184211	0					
ANR	1184279	ExpressionStatement	"r_crypto_append ( cry , obuf , len )"	226:1:6774:6805	1184211	3	True				
ANR	1184280	CallExpression	"r_crypto_append ( cry , obuf , len )"		1184211	0					
ANR	1184281	Callee	r_crypto_append		1184211	0					
ANR	1184282	Identifier	r_crypto_append		1184211	0					
ANR	1184283	ArgumentList	cry		1184211	1					
ANR	1184284	Argument	cry		1184211	0					
ANR	1184285	Identifier	cry		1184211	0					
ANR	1184286	Argument	obuf		1184211	1					
ANR	1184287	Identifier	obuf		1184211	0					
ANR	1184288	Argument	len		1184211	2					
ANR	1184289	Identifier	len		1184211	0					
ANR	1184290	ExpressionStatement	free ( obuf )	227:1:6808:6819	1184211	4	True				
ANR	1184291	CallExpression	free ( obuf )		1184211	0					
ANR	1184292	Callee	free		1184211	0					
ANR	1184293	Identifier	free		1184211	0					
ANR	1184294	ArgumentList	obuf		1184211	1					
ANR	1184295	Argument	obuf		1184211	0					
ANR	1184296	Identifier	obuf		1184211	0					
ANR	1184297	ReturnStatement	return true ;	228:1:6822:6833	1184211	5	True				
ANR	1184298	Identifier	true		1184211	0					
ANR	1184299	ReturnType	static bool		1184211	1					
ANR	1184300	Identifier	update		1184211	2					
ANR	1184301	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		1184211	3					
ANR	1184302	Parameter	RCrypto * cry	216:19:6546:6557	1184211	0	True				
ANR	1184303	ParameterType	RCrypto *		1184211	0					
ANR	1184304	Identifier	cry		1184211	1					
ANR	1184305	Parameter	const ut8 * buf	216:33:6560:6573	1184211	1	True				
ANR	1184306	ParameterType	const ut8 *		1184211	0					
ANR	1184307	Identifier	buf		1184211	1					
ANR	1184308	Parameter	int len	216:49:6576:6582	1184211	2	True				
ANR	1184309	ParameterType	int		1184211	0					
ANR	1184310	Identifier	len		1184211	1					
ANR	1184311	CFGEntryNode	ENTRY		1184211		True				
ANR	1184312	CFGExitNode	EXIT		1184211		True				
ANR	1184313	Symbol	buf		1184211						
ANR	1184314	Symbol	flag		1184211						
ANR	1184315	Symbol	len		1184211						
ANR	1184316	Symbol	& state		1184211						
ANR	1184317	Symbol	obuf		1184211						
ANR	1184318	Symbol	false		1184211						
ANR	1184319	Symbol	true		1184211						
ANR	1184320	Symbol	cry		1184211						
ANR	1184321	Symbol	calloc		1184211						
ANR	1184322	Function	final	231:0:6838:6929							
ANR	1184323	FunctionDef	"final (RCrypto * cry , const ut8 * buf , int len)"		1184322	0					
ANR	1184324	CompoundStatement		231:57:6895:6929	1184322	0					
ANR	1184325	ReturnStatement	"return update ( cry , buf , len ) ;"	232:1:6898:6927	1184322	0	True				
ANR	1184326	CallExpression	"update ( cry , buf , len )"		1184322	0					
ANR	1184327	Callee	update		1184322	0					
ANR	1184328	Identifier	update		1184322	0					
ANR	1184329	ArgumentList	cry		1184322	1					
ANR	1184330	Argument	cry		1184322	0					
ANR	1184331	Identifier	cry		1184322	0					
ANR	1184332	Argument	buf		1184322	1					
ANR	1184333	Identifier	buf		1184322	0					
ANR	1184334	Argument	len		1184322	2					
ANR	1184335	Identifier	len		1184322	0					
ANR	1184336	ReturnType	static bool		1184322	1					
ANR	1184337	Identifier	final		1184322	2					
ANR	1184338	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		1184322	3					
ANR	1184339	Parameter	RCrypto * cry	231:18:6856:6867	1184322	0	True				
ANR	1184340	ParameterType	RCrypto *		1184322	0					
ANR	1184341	Identifier	cry		1184322	1					
ANR	1184342	Parameter	const ut8 * buf	231:32:6870:6883	1184322	1	True				
ANR	1184343	ParameterType	const ut8 *		1184322	0					
ANR	1184344	Identifier	buf		1184322	1					
ANR	1184345	Parameter	int len	231:48:6886:6892	1184322	2	True				
ANR	1184346	ParameterType	int		1184322	0					
ANR	1184347	Identifier	len		1184322	1					
ANR	1184348	CFGEntryNode	ENTRY		1184322		True				
ANR	1184349	CFGExitNode	EXIT		1184322		True				
ANR	1184350	Symbol	buf		1184322						
ANR	1184351	Symbol	len		1184322						
ANR	1184352	Symbol	update		1184322						
ANR	1184353	Symbol	cry		1184322						
ANR	1184354	DeclStmt									
ANR	1184355	Decl							RCryptoPlugin	RCryptoPlugin	r_crypto_plugin_rc2
ANR	1184356	DeclStmt									
ANR	1184357	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
ANR	1184358	Function	main	253:0:7269:7596							
ANR	1184359	FunctionDef	main ()		1184358	0					
ANR	1184360	CompoundStatement		253:11:7280:7596	1184358	0					
ANR	1184361	IdentifierDeclStatement	ut8 out [ 16 ] ;	254:1:7283:7294	1184358	0	True				
ANR	1184362	IdentifierDecl	out [ 16 ]		1184358	0					
ANR	1184363	IdentifierDeclType	ut8 [ 16 ]		1184358	0					
ANR	1184364	Identifier	out		1184358	1					
ANR	1184365	PrimaryExpression	16		1184358	2					
ANR	1184366	IdentifierDeclStatement	struct rc2_state st ;	255:1:7297:7316	1184358	1	True				
ANR	1184367	IdentifierDecl	st		1184358	0					
ANR	1184368	IdentifierDeclType	struct rc2_state		1184358	0					
ANR	1184369	Identifier	st		1184358	1					
ANR	1184370	ExpressionStatement	st . key_size = 3	256:1:7319:7334	1184358	2	True				
ANR	1184371	AssignmentExpression	st . key_size = 3		1184358	0		=			
ANR	1184372	MemberAccess	st . key_size		1184358	0					
ANR	1184373	Identifier	st		1184358	0					
ANR	1184374	Identifier	key_size		1184358	1					
ANR	1184375	PrimaryExpression	3		1184358	1					
ANR	1184376	ExpressionStatement	"rc2_expandKey ( ( const ut8 * ) ""key"" , 3 , BITS , & st )"	258:1:7352:7399	1184358	3	True				
ANR	1184377	CallExpression	"rc2_expandKey ( ( const ut8 * ) ""key"" , 3 , BITS , & st )"		1184358	0					
ANR	1184378	Callee	rc2_expandKey		1184358	0					
ANR	1184379	Identifier	rc2_expandKey		1184358	0					
ANR	1184380	ArgumentList	"( const ut8 * ) ""key"""		1184358	1					
ANR	1184381	Argument	"( const ut8 * ) ""key"""		1184358	0					
ANR	1184382	CastExpression	"( const ut8 * ) ""key"""		1184358	0					
ANR	1184383	CastTarget	const ut8 *		1184358	0					
ANR	1184384	PrimaryExpression	"""key"""		1184358	1					
ANR	1184385	Argument	3		1184358	1					
ANR	1184386	PrimaryExpression	3		1184358	0					
ANR	1184387	Argument	BITS		1184358	2					
ANR	1184388	Identifier	BITS		1184358	0					
ANR	1184389	Argument	& st		1184358	3					
ANR	1184390	UnaryOperationExpression	& st		1184358	0					
ANR	1184391	UnaryOperator	&		1184358	0					
ANR	1184392	Identifier	st		1184358	1					
ANR	1184393	ExpressionStatement	"rc2_crypt ( & st , ( const ut8 * ) ""12345678abc"" , out , 11 )"	259:1:7402:7453	1184358	4	True				
ANR	1184394	CallExpression	"rc2_crypt ( & st , ( const ut8 * ) ""12345678abc"" , out , 11 )"		1184358	0					
ANR	1184395	Callee	rc2_crypt		1184358	0					
ANR	1184396	Identifier	rc2_crypt		1184358	0					
ANR	1184397	ArgumentList	& st		1184358	1					
ANR	1184398	Argument	& st		1184358	0					
ANR	1184399	UnaryOperationExpression	& st		1184358	0					
ANR	1184400	UnaryOperator	&		1184358	0					
ANR	1184401	Identifier	st		1184358	1					
ANR	1184402	Argument	"( const ut8 * ) ""12345678abc"""		1184358	1					
ANR	1184403	CastExpression	"( const ut8 * ) ""12345678abc"""		1184358	0					
ANR	1184404	CastTarget	const ut8 *		1184358	0					
ANR	1184405	PrimaryExpression	"""12345678abc"""		1184358	1					
ANR	1184406	Argument	out		1184358	2					
ANR	1184407	Identifier	out		1184358	0					
ANR	1184408	Argument	11		1184358	3					
ANR	1184409	PrimaryExpression	11		1184358	0					
ANR	1184410	ExpressionStatement	"eprintf ( ""%s\\n"" , ( const char * ) out )"	260:1:7456:7491	1184358	5	True				
ANR	1184411	CallExpression	"eprintf ( ""%s\\n"" , ( const char * ) out )"		1184358	0					
ANR	1184412	Callee	eprintf		1184358	0					
ANR	1184413	Identifier	eprintf		1184358	0					
ANR	1184414	ArgumentList	"""%s\\n"""		1184358	1					
ANR	1184415	Argument	"""%s\\n"""		1184358	0					
ANR	1184416	PrimaryExpression	"""%s\\n"""		1184358	0					
ANR	1184417	Argument	( const char * ) out		1184358	1					
ANR	1184418	CastExpression	( const char * ) out		1184358	0					
ANR	1184419	CastTarget	const char *		1184358	0					
ANR	1184420	Identifier	out		1184358	1					
ANR	1184421	ExpressionStatement	"rc2_dcrypt ( & st , ( const ut8 * ) out , out , sizeof ( out ) )"	261:1:7494:7545	1184358	6	True				
ANR	1184422	CallExpression	"rc2_dcrypt ( & st , ( const ut8 * ) out , out , sizeof ( out ) )"		1184358	0					
ANR	1184423	Callee	rc2_dcrypt		1184358	0					
ANR	1184424	Identifier	rc2_dcrypt		1184358	0					
ANR	1184425	ArgumentList	& st		1184358	1					
ANR	1184426	Argument	& st		1184358	0					
ANR	1184427	UnaryOperationExpression	& st		1184358	0					
ANR	1184428	UnaryOperator	&		1184358	0					
ANR	1184429	Identifier	st		1184358	1					
ANR	1184430	Argument	( const ut8 * ) out		1184358	1					
ANR	1184431	CastExpression	( const ut8 * ) out		1184358	0					
ANR	1184432	CastTarget	const ut8 *		1184358	0					
ANR	1184433	Identifier	out		1184358	1					
ANR	1184434	Argument	out		1184358	2					
ANR	1184435	Identifier	out		1184358	0					
ANR	1184436	Argument	sizeof ( out )		1184358	3					
ANR	1184437	SizeofExpression	sizeof ( out )		1184358	0					
ANR	1184438	Sizeof	sizeof		1184358	0					
ANR	1184439	SizeofOperand	out		1184358	1					
ANR	1184440	ExpressionStatement	"eprintf ( ""%s\\n"" , ( const char * ) out )"	262:1:7548:7583	1184358	7	True				
ANR	1184441	CallExpression	"eprintf ( ""%s\\n"" , ( const char * ) out )"		1184358	0					
ANR	1184442	Callee	eprintf		1184358	0					
ANR	1184443	Identifier	eprintf		1184358	0					
ANR	1184444	ArgumentList	"""%s\\n"""		1184358	1					
ANR	1184445	Argument	"""%s\\n"""		1184358	0					
ANR	1184446	PrimaryExpression	"""%s\\n"""		1184358	0					
ANR	1184447	Argument	( const char * ) out		1184358	1					
ANR	1184448	CastExpression	( const char * ) out		1184358	0					
ANR	1184449	CastTarget	const char *		1184358	0					
ANR	1184450	Identifier	out		1184358	1					
ANR	1184451	ReturnStatement	return 0 ;	263:1:7586:7594	1184358	8	True				
ANR	1184452	PrimaryExpression	0		1184358	0					
ANR	1184453	ReturnType	int		1184358	1					
ANR	1184454	Identifier	main		1184358	2					
ANR	1184455	ParameterList			1184358	3					
ANR	1184456	CFGEntryNode	ENTRY		1184358		True				
ANR	1184457	CFGExitNode	EXIT		1184358		True				
ANR	1184458	Symbol	st		1184358						
ANR	1184459	Symbol	BITS		1184358						
ANR	1184460	Symbol	& st		1184358						
ANR	1184461	Symbol	st . key_size		1184358						
ANR	1184462	Symbol	out		1184358						
