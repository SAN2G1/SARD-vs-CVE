command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3279053	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_mips_gnu_mips-dis.c								
ANR	3279054	ClassDef	mips_cp0sel_name	51:0:1729:1825							
ANR	3279055	DeclStmt									
ANR	3279056	Decl							unsigned int	unsigned int	cp0reg
ANR	3279057	DeclStmt									
ANR	3279058	Decl							unsigned int	unsigned int	sel
ANR	3279059	DeclStmt									
ANR	3279060	Decl							const unsigned int	const unsigned int [ ]	mips16_to_32_reg_map
ANR	3279061	DeclStmt									
ANR	3279062	Decl							const struct mips_cp0sel_name	const struct mips_cp0sel_name [ ]	mips_cp0sel_names_mips3264
ANR	3279063	DeclStmt									
ANR	3279064	Decl							const struct mips_cp0sel_name	const struct mips_cp0sel_name [ ]	mips_cp0sel_names_mips3264r2
ANR	3279065	DeclStmt									
ANR	3279066	Decl							const struct mips_cp0sel_name	const struct mips_cp0sel_name [ ]	mips_cp0sel_names_sb1
ANR	3279067	ClassDef	mips_abi_choice	319:0:10719:10831							
ANR	3279068	DeclStmt									
ANR	3279069	Decl							const char	const char *	name
ANR	3279070	DeclStmt									
ANR	3279071	Decl							struct mips_abi_choice	struct mips_abi_choice [ ]	mips_abi_choices
ANR	3279072	ClassDef	mips_arch_choice	334:0:11114:11382							
ANR	3279073	DeclStmt									
ANR	3279074	Decl							const char	const char *	name
ANR	3279075	DeclStmt									
ANR	3279076	Decl							int	int	bfd_mach_valid
ANR	3279077	DeclStmt									
ANR	3279078	Decl							unsigned long	unsigned long	bfd_mach
ANR	3279079	DeclStmt									
ANR	3279080	Decl							int	int	processor
ANR	3279081	DeclStmt									
ANR	3279082	Decl							int	int	isa
ANR	3279083	DeclStmt									
ANR	3279084	Decl							const struct mips_cp0sel_name	const struct mips_cp0sel_name *	cp0sel_names
ANR	3279085	DeclStmt									
ANR	3279086	Decl							unsigned int	unsigned int	cp0sel_names_len
ANR	3279087	DeclStmt									
ANR	3279088	Decl							const struct mips_arch_choice	const struct mips_arch_choice [ ]	mips_arch_choices
ANR	3279089	DeclStmt									
ANR	3279090	Decl							int	int	mips_processor
ANR	3279091	DeclStmt									
ANR	3279092	Decl							int	int	mips_isa
ANR	3279093	DeclStmt									
ANR	3279094	Decl							const struct mips_cp0sel_name	const struct mips_cp0sel_name *	mips_cp0sel_names
ANR	3279095	DeclStmt									
ANR	3279096	Decl							int	int	mips_cp0sel_names_len
ANR	3279097	DeclStmt									
ANR	3279098	Decl							int	int	no_aliases
ANR	3279099	Function	choose_abi_by_name	454:0:16520:16911							
ANR	3279100	FunctionDef	"choose_abi_by_name (const char * name , unsigned int namelen)"		3279099	0					
ANR	3279101	CompoundStatement		456:0:16618:16911	3279099	0					
ANR	3279102	IdentifierDeclStatement	const struct mips_abi_choice * c ;	457:2:16622:16653	3279099	0	True				
ANR	3279103	IdentifierDecl	* c		3279099	0					
ANR	3279104	IdentifierDeclType	const struct mips_abi_choice *		3279099	0					
ANR	3279105	Identifier	c		3279099	1					
ANR	3279106	IdentifierDeclStatement	unsigned int i ;	458:2:16657:16671	3279099	1	True				
ANR	3279107	IdentifierDecl	i		3279099	0					
ANR	3279108	IdentifierDeclType	unsigned int		3279099	0					
ANR	3279109	Identifier	i		3279099	1					
ANR	3279110	ForStatement	"for ( i = 0 , c = NULL ; i < ARRAY_SIZE ( mips_abi_choices ) && ! c ; i ++ )"		3279099	2					
ANR	3279111	ForInit	"i = 0 , c = NULL ;"	460:7:16681:16696	3279099	0	True				
ANR	3279112	Expression	"i = 0 , c = NULL"		3279099	0					
ANR	3279113	AssignmentExpression	i = 0		3279099	0		=			
ANR	3279114	Identifier	i		3279099	0					
ANR	3279115	PrimaryExpression	0		3279099	1					
ANR	3279116	AssignmentExpression	c = NULL		3279099	1		=			
ANR	3279117	Identifier	c		3279099	0					
ANR	3279118	Identifier	NULL		3279099	1					
ANR	3279119	Condition	i < ARRAY_SIZE ( mips_abi_choices ) && ! c	460:24:16698:16736	3279099	1	True				
ANR	3279120	AndExpression	i < ARRAY_SIZE ( mips_abi_choices ) && ! c		3279099	0		&&			
ANR	3279121	RelationalExpression	i < ARRAY_SIZE ( mips_abi_choices )		3279099	0		<			
ANR	3279122	Identifier	i		3279099	0					
ANR	3279123	CallExpression	ARRAY_SIZE ( mips_abi_choices )		3279099	1					
ANR	3279124	Callee	ARRAY_SIZE		3279099	0					
ANR	3279125	Identifier	ARRAY_SIZE		3279099	0					
ANR	3279126	ArgumentList	mips_abi_choices		3279099	1					
ANR	3279127	Argument	mips_abi_choices		3279099	0					
ANR	3279128	Identifier	mips_abi_choices		3279099	0					
ANR	3279129	UnaryOperationExpression	! c		3279099	1					
ANR	3279130	UnaryOperator	!		3279099	0					
ANR	3279131	Identifier	c		3279099	1					
ANR	3279132	PostIncDecOperationExpression	i ++	460:65:16739:16741	3279099	2	True				
ANR	3279133	Identifier	i		3279099	0					
ANR	3279134	IncDec	++		3279099	1					
ANR	3279135	CompoundStatement		5:70:125:125	3279099	3					
ANR	3279136	IfStatement	"if ( strncmp ( mips_abi_choices [ i ] . name , name , namelen ) == 0 && strlen ( mips_abi_choices [ i ] . name ) == namelen )"		3279099	0					
ANR	3279137	Condition	"strncmp ( mips_abi_choices [ i ] . name , name , namelen ) == 0 && strlen ( mips_abi_choices [ i ] . name ) == namelen"	461:7:16753:16854	3279099	0	True				
ANR	3279138	AndExpression	"strncmp ( mips_abi_choices [ i ] . name , name , namelen ) == 0 && strlen ( mips_abi_choices [ i ] . name ) == namelen"		3279099	0		&&			
ANR	3279139	EqualityExpression	"strncmp ( mips_abi_choices [ i ] . name , name , namelen ) == 0"		3279099	0		==			
ANR	3279140	CallExpression	"strncmp ( mips_abi_choices [ i ] . name , name , namelen )"		3279099	0					
ANR	3279141	Callee	strncmp		3279099	0					
ANR	3279142	Identifier	strncmp		3279099	0					
ANR	3279143	ArgumentList	mips_abi_choices [ i ] . name		3279099	1					
ANR	3279144	Argument	mips_abi_choices [ i ] . name		3279099	0					
ANR	3279145	MemberAccess	mips_abi_choices [ i ] . name		3279099	0					
ANR	3279146	ArrayIndexing	mips_abi_choices [ i ]		3279099	0					
ANR	3279147	Identifier	mips_abi_choices		3279099	0					
ANR	3279148	Identifier	i		3279099	1					
ANR	3279149	Identifier	name		3279099	1					
ANR	3279150	Argument	name		3279099	1					
ANR	3279151	Identifier	name		3279099	0					
ANR	3279152	Argument	namelen		3279099	2					
ANR	3279153	Identifier	namelen		3279099	0					
ANR	3279154	PrimaryExpression	0		3279099	1					
ANR	3279155	EqualityExpression	strlen ( mips_abi_choices [ i ] . name ) == namelen		3279099	1		==			
ANR	3279156	CallExpression	strlen ( mips_abi_choices [ i ] . name )		3279099	0					
ANR	3279157	Callee	strlen		3279099	0					
ANR	3279158	Identifier	strlen		3279099	0					
ANR	3279159	ArgumentList	mips_abi_choices [ i ] . name		3279099	1					
ANR	3279160	Argument	mips_abi_choices [ i ] . name		3279099	0					
ANR	3279161	MemberAccess	mips_abi_choices [ i ] . name		3279099	0					
ANR	3279162	ArrayIndexing	mips_abi_choices [ i ]		3279099	0					
ANR	3279163	Identifier	mips_abi_choices		3279099	0					
ANR	3279164	Identifier	i		3279099	1					
ANR	3279165	Identifier	name		3279099	1					
ANR	3279166	Identifier	namelen		3279099	1					
ANR	3279167	CompoundStatement		6:111:238:238	3279099	1					
ANR	3279168	ExpressionStatement	c = & mips_abi_choices [ i ]	462:4:16863:16887	3279099	0	True				
ANR	3279169	AssignmentExpression	c = & mips_abi_choices [ i ]		3279099	0		=			
ANR	3279170	Identifier	c		3279099	0					
ANR	3279171	UnaryOperationExpression	& mips_abi_choices [ i ]		3279099	1					
ANR	3279172	UnaryOperator	&		3279099	0					
ANR	3279173	ArrayIndexing	mips_abi_choices [ i ]		3279099	1					
ANR	3279174	Identifier	mips_abi_choices		3279099	0					
ANR	3279175	Identifier	i		3279099	1					
ANR	3279176	ReturnStatement	return c ;	466:2:16901:16909	3279099	3	True				
ANR	3279177	Identifier	c		3279099	0					
ANR	3279178	ReturnType	static const struct mips_abi_choice *		3279099	1					
ANR	3279179	Identifier	choose_abi_by_name		3279099	2					
ANR	3279180	ParameterList	"const char * name , unsigned int namelen"		3279099	3					
ANR	3279181	Parameter	const char * name	455:20:16578:16593	3279099	0	True				
ANR	3279182	ParameterType	const char *		3279099	0					
ANR	3279183	Identifier	name		3279099	1					
ANR	3279184	Parameter	unsigned int namelen	455:38:16596:16615	3279099	1	True				
ANR	3279185	ParameterType	unsigned int		3279099	0					
ANR	3279186	Identifier	namelen		3279099	1					
ANR	3279187	CFGEntryNode	ENTRY		3279099		True				
ANR	3279188	CFGExitNode	EXIT		3279099		True				
ANR	3279189	Symbol	ARRAY_SIZE		3279099						
ANR	3279190	Symbol	strlen		3279099						
ANR	3279191	Symbol	strncmp		3279099						
ANR	3279192	Symbol	c		3279099						
ANR	3279193	Symbol	NULL		3279099						
ANR	3279194	Symbol	* i		3279099						
ANR	3279195	Symbol	mips_abi_choices		3279099						
ANR	3279196	Symbol	name		3279099						
ANR	3279197	Symbol	* mips_abi_choices		3279099						
ANR	3279198	Symbol	namelen		3279099						
ANR	3279199	Symbol	i		3279099						
ANR	3279200	Symbol	mips_abi_choices [ i ] . name		3279099						
ANR	3279201	Function	choose_arch_by_name	469:0:16914:17319							
ANR	3279202	FunctionDef	"choose_arch_by_name (const char * name , unsigned int namelen)"		3279201	0					
ANR	3279203	CompoundStatement		471:0:17014:17319	3279201	0					
ANR	3279204	IdentifierDeclStatement	const struct mips_arch_choice * c = NULL ;	472:2:17018:17057	3279201	0	True				
ANR	3279205	IdentifierDecl	* c = NULL		3279201	0					
ANR	3279206	IdentifierDeclType	const struct mips_arch_choice *		3279201	0					
ANR	3279207	Identifier	c		3279201	1					
ANR	3279208	AssignmentExpression	* c = NULL		3279201	2		=			
ANR	3279209	Identifier	NULL		3279201	0					
ANR	3279210	Identifier	NULL		3279201	1					
ANR	3279211	IdentifierDeclStatement	unsigned int i ;	473:2:17061:17075	3279201	1	True				
ANR	3279212	IdentifierDecl	i		3279201	0					
ANR	3279213	IdentifierDeclType	unsigned int		3279201	0					
ANR	3279214	Identifier	i		3279201	1					
ANR	3279215	ForStatement	"for ( i = 0 , c = NULL ; i < ARRAY_SIZE ( mips_arch_choices ) && ! c ; i ++ )"		3279201	2					
ANR	3279216	ForInit	"i = 0 , c = NULL ;"	475:7:17085:17100	3279201	0	True				
ANR	3279217	Expression	"i = 0 , c = NULL"		3279201	0					
ANR	3279218	AssignmentExpression	i = 0		3279201	0		=			
ANR	3279219	Identifier	i		3279201	0					
ANR	3279220	PrimaryExpression	0		3279201	1					
ANR	3279221	AssignmentExpression	c = NULL		3279201	1		=			
ANR	3279222	Identifier	c		3279201	0					
ANR	3279223	Identifier	NULL		3279201	1					
ANR	3279224	Condition	i < ARRAY_SIZE ( mips_arch_choices ) && ! c	475:24:17102:17141	3279201	1	True				
ANR	3279225	AndExpression	i < ARRAY_SIZE ( mips_arch_choices ) && ! c		3279201	0		&&			
ANR	3279226	RelationalExpression	i < ARRAY_SIZE ( mips_arch_choices )		3279201	0		<			
ANR	3279227	Identifier	i		3279201	0					
ANR	3279228	CallExpression	ARRAY_SIZE ( mips_arch_choices )		3279201	1					
ANR	3279229	Callee	ARRAY_SIZE		3279201	0					
ANR	3279230	Identifier	ARRAY_SIZE		3279201	0					
ANR	3279231	ArgumentList	mips_arch_choices		3279201	1					
ANR	3279232	Argument	mips_arch_choices		3279201	0					
ANR	3279233	Identifier	mips_arch_choices		3279201	0					
ANR	3279234	UnaryOperationExpression	! c		3279201	1					
ANR	3279235	UnaryOperator	!		3279201	0					
ANR	3279236	Identifier	c		3279201	1					
ANR	3279237	PostIncDecOperationExpression	i ++	475:66:17144:17146	3279201	2	True				
ANR	3279238	Identifier	i		3279201	0					
ANR	3279239	IncDec	++		3279201	1					
ANR	3279240	CompoundStatement		5:71:134:134	3279201	3					
ANR	3279241	IfStatement	"if ( strncmp ( mips_arch_choices [ i ] . name , name , namelen ) == 0 && strlen ( mips_arch_choices [ i ] . name ) == namelen )"		3279201	0					
ANR	3279242	Condition	"strncmp ( mips_arch_choices [ i ] . name , name , namelen ) == 0 && strlen ( mips_arch_choices [ i ] . name ) == namelen"	476:7:17158:17261	3279201	0	True				
ANR	3279243	AndExpression	"strncmp ( mips_arch_choices [ i ] . name , name , namelen ) == 0 && strlen ( mips_arch_choices [ i ] . name ) == namelen"		3279201	0		&&			
ANR	3279244	EqualityExpression	"strncmp ( mips_arch_choices [ i ] . name , name , namelen ) == 0"		3279201	0		==			
ANR	3279245	CallExpression	"strncmp ( mips_arch_choices [ i ] . name , name , namelen )"		3279201	0					
ANR	3279246	Callee	strncmp		3279201	0					
ANR	3279247	Identifier	strncmp		3279201	0					
ANR	3279248	ArgumentList	mips_arch_choices [ i ] . name		3279201	1					
ANR	3279249	Argument	mips_arch_choices [ i ] . name		3279201	0					
ANR	3279250	MemberAccess	mips_arch_choices [ i ] . name		3279201	0					
ANR	3279251	ArrayIndexing	mips_arch_choices [ i ]		3279201	0					
ANR	3279252	Identifier	mips_arch_choices		3279201	0					
ANR	3279253	Identifier	i		3279201	1					
ANR	3279254	Identifier	name		3279201	1					
ANR	3279255	Argument	name		3279201	1					
ANR	3279256	Identifier	name		3279201	0					
ANR	3279257	Argument	namelen		3279201	2					
ANR	3279258	Identifier	namelen		3279201	0					
ANR	3279259	PrimaryExpression	0		3279201	1					
ANR	3279260	EqualityExpression	strlen ( mips_arch_choices [ i ] . name ) == namelen		3279201	1		==			
ANR	3279261	CallExpression	strlen ( mips_arch_choices [ i ] . name )		3279201	0					
ANR	3279262	Callee	strlen		3279201	0					
ANR	3279263	Identifier	strlen		3279201	0					
ANR	3279264	ArgumentList	mips_arch_choices [ i ] . name		3279201	1					
ANR	3279265	Argument	mips_arch_choices [ i ] . name		3279201	0					
ANR	3279266	MemberAccess	mips_arch_choices [ i ] . name		3279201	0					
ANR	3279267	ArrayIndexing	mips_arch_choices [ i ]		3279201	0					
ANR	3279268	Identifier	mips_arch_choices		3279201	0					
ANR	3279269	Identifier	i		3279201	1					
ANR	3279270	Identifier	name		3279201	1					
ANR	3279271	Identifier	namelen		3279201	1					
ANR	3279272	CompoundStatement		6:113:249:249	3279201	1					
ANR	3279273	ExpressionStatement	c = & mips_arch_choices [ i ]	477:4:17270:17295	3279201	0	True				
ANR	3279274	AssignmentExpression	c = & mips_arch_choices [ i ]		3279201	0		=			
ANR	3279275	Identifier	c		3279201	0					
ANR	3279276	UnaryOperationExpression	& mips_arch_choices [ i ]		3279201	1					
ANR	3279277	UnaryOperator	&		3279201	0					
ANR	3279278	ArrayIndexing	mips_arch_choices [ i ]		3279201	1					
ANR	3279279	Identifier	mips_arch_choices		3279201	0					
ANR	3279280	Identifier	i		3279201	1					
ANR	3279281	ReturnStatement	return c ;	481:2:17309:17317	3279201	3	True				
ANR	3279282	Identifier	c		3279201	0					
ANR	3279283	ReturnType	static const struct mips_arch_choice *		3279201	1					
ANR	3279284	Identifier	choose_arch_by_name		3279201	2					
ANR	3279285	ParameterList	"const char * name , unsigned int namelen"		3279201	3					
ANR	3279286	Parameter	const char * name	470:21:16974:16989	3279201	0	True				
ANR	3279287	ParameterType	const char *		3279201	0					
ANR	3279288	Identifier	name		3279201	1					
ANR	3279289	Parameter	unsigned int namelen	470:39:16992:17011	3279201	1	True				
ANR	3279290	ParameterType	unsigned int		3279201	0					
ANR	3279291	Identifier	namelen		3279201	1					
ANR	3279292	CFGEntryNode	ENTRY		3279201		True				
ANR	3279293	CFGExitNode	EXIT		3279201		True				
ANR	3279294	Symbol	ARRAY_SIZE		3279201						
ANR	3279295	Symbol	strncmp		3279201						
ANR	3279296	Symbol	strlen		3279201						
ANR	3279297	Symbol	c		3279201						
ANR	3279298	Symbol	NULL		3279201						
ANR	3279299	Symbol	* i		3279201						
ANR	3279300	Symbol	* mips_arch_choices		3279201						
ANR	3279301	Symbol	name		3279201						
ANR	3279302	Symbol	mips_arch_choices [ i ] . name		3279201						
ANR	3279303	Symbol	namelen		3279201						
ANR	3279304	Symbol	i		3279201						
ANR	3279305	Symbol	mips_arch_choices		3279201						
ANR	3279306	Function	choose_arch_by_number	484:0:17322:18085							
ANR	3279307	FunctionDef	choose_arch_by_number (unsigned long mach)		3279306	0					
ANR	3279308	CompoundStatement		486:0:17404:18085	3279306	0					
ANR	3279309	Statement	static	487:2:17408:17413	3279306	0	True				
ANR	3279310	IdentifierDeclStatement	unsigned long hint_bfd_mach ;	487:9:17415:17442	3279306	1	True				
ANR	3279311	IdentifierDecl	hint_bfd_mach		3279306	0					
ANR	3279312	IdentifierDeclType	unsigned long		3279306	0					
ANR	3279313	Identifier	hint_bfd_mach		3279306	1					
ANR	3279314	Statement	static	488:2:17446:17451	3279306	2	True				
ANR	3279315	IdentifierDeclStatement	const struct mips_arch_choice * hint_arch_choice ;	488:9:17453:17500	3279306	3	True				
ANR	3279316	IdentifierDecl	* hint_arch_choice		3279306	0					
ANR	3279317	IdentifierDeclType	const struct mips_arch_choice *		3279306	0					
ANR	3279318	Identifier	hint_arch_choice		3279306	1					
ANR	3279319	IdentifierDeclStatement	const struct mips_arch_choice * c ;	489:2:17504:17536	3279306	4	True				
ANR	3279320	IdentifierDecl	* c		3279306	0					
ANR	3279321	IdentifierDeclType	const struct mips_arch_choice *		3279306	0					
ANR	3279322	Identifier	c		3279306	1					
ANR	3279323	IdentifierDeclStatement	unsigned int i ;	490:2:17540:17554	3279306	5	True				
ANR	3279324	IdentifierDecl	i		3279306	0					
ANR	3279325	IdentifierDeclType	unsigned int		3279306	0					
ANR	3279326	Identifier	i		3279306	1					
ANR	3279327	IfStatement	if ( hint_bfd_mach == mach && hint_arch_choice != NULL && hint_arch_choice -> bfd_mach == hint_bfd_mach )		3279306	6					
ANR	3279328	Condition	hint_bfd_mach == mach && hint_arch_choice != NULL && hint_arch_choice -> bfd_mach == hint_bfd_mach	494:6:17680:17775	3279306	0	True				
ANR	3279329	AndExpression	hint_bfd_mach == mach && hint_arch_choice != NULL && hint_arch_choice -> bfd_mach == hint_bfd_mach		3279306	0		&&			
ANR	3279330	EqualityExpression	hint_bfd_mach == mach		3279306	0		==			
ANR	3279331	Identifier	hint_bfd_mach		3279306	0					
ANR	3279332	Identifier	mach		3279306	1					
ANR	3279333	AndExpression	hint_arch_choice != NULL && hint_arch_choice -> bfd_mach == hint_bfd_mach		3279306	1		&&			
ANR	3279334	EqualityExpression	hint_arch_choice != NULL		3279306	0		!=			
ANR	3279335	Identifier	hint_arch_choice		3279306	0					
ANR	3279336	Identifier	NULL		3279306	1					
ANR	3279337	EqualityExpression	hint_arch_choice -> bfd_mach == hint_bfd_mach		3279306	1		==			
ANR	3279338	PtrMemberAccess	hint_arch_choice -> bfd_mach		3279306	0					
ANR	3279339	Identifier	hint_arch_choice		3279306	0					
ANR	3279340	Identifier	bfd_mach		3279306	1					
ANR	3279341	Identifier	hint_bfd_mach		3279306	1					
ANR	3279342	CompoundStatement		9:104:373:373	3279306	1					
ANR	3279343	ReturnStatement	return hint_arch_choice ;	495:3:17783:17806	3279306	0	True				
ANR	3279344	Identifier	hint_arch_choice		3279306	0					
ANR	3279345	ForStatement	"for ( i = 0 , c = NULL ; i < ARRAY_SIZE ( mips_arch_choices ) && ! c ; i ++ )"		3279306	7					
ANR	3279346	ForInit	"i = 0 , c = NULL ;"	498:7:17820:17835	3279306	0	True				
ANR	3279347	Expression	"i = 0 , c = NULL"		3279306	0					
ANR	3279348	AssignmentExpression	i = 0		3279306	0		=			
ANR	3279349	Identifier	i		3279306	0					
ANR	3279350	PrimaryExpression	0		3279306	1					
ANR	3279351	AssignmentExpression	c = NULL		3279306	1		=			
ANR	3279352	Identifier	c		3279306	0					
ANR	3279353	Identifier	NULL		3279306	1					
ANR	3279354	Condition	i < ARRAY_SIZE ( mips_arch_choices ) && ! c	498:24:17837:17876	3279306	1	True				
ANR	3279355	AndExpression	i < ARRAY_SIZE ( mips_arch_choices ) && ! c		3279306	0		&&			
ANR	3279356	RelationalExpression	i < ARRAY_SIZE ( mips_arch_choices )		3279306	0		<			
ANR	3279357	Identifier	i		3279306	0					
ANR	3279358	CallExpression	ARRAY_SIZE ( mips_arch_choices )		3279306	1					
ANR	3279359	Callee	ARRAY_SIZE		3279306	0					
ANR	3279360	Identifier	ARRAY_SIZE		3279306	0					
ANR	3279361	ArgumentList	mips_arch_choices		3279306	1					
ANR	3279362	Argument	mips_arch_choices		3279306	0					
ANR	3279363	Identifier	mips_arch_choices		3279306	0					
ANR	3279364	UnaryOperationExpression	! c		3279306	1					
ANR	3279365	UnaryOperator	!		3279306	0					
ANR	3279366	Identifier	c		3279306	1					
ANR	3279367	PostIncDecOperationExpression	i ++	498:66:17879:17881	3279306	2	True				
ANR	3279368	Identifier	i		3279306	0					
ANR	3279369	IncDec	++		3279306	1					
ANR	3279370	CompoundStatement		14:4:483:483	3279306	3					
ANR	3279371	IfStatement	if ( mips_arch_choices [ i ] . bfd_mach_valid && mips_arch_choices [ i ] . bfd_mach == mach )		3279306	0					
ANR	3279372	Condition	mips_arch_choices [ i ] . bfd_mach_valid && mips_arch_choices [ i ] . bfd_mach == mach	500:10:17900:17978	3279306	0	True				
ANR	3279373	AndExpression	mips_arch_choices [ i ] . bfd_mach_valid && mips_arch_choices [ i ] . bfd_mach == mach		3279306	0		&&			
ANR	3279374	MemberAccess	mips_arch_choices [ i ] . bfd_mach_valid		3279306	0					
ANR	3279375	ArrayIndexing	mips_arch_choices [ i ]		3279306	0					
ANR	3279376	Identifier	mips_arch_choices		3279306	0					
ANR	3279377	Identifier	i		3279306	1					
ANR	3279378	Identifier	bfd_mach_valid		3279306	1					
ANR	3279379	EqualityExpression	mips_arch_choices [ i ] . bfd_mach == mach		3279306	1		==			
ANR	3279380	MemberAccess	mips_arch_choices [ i ] . bfd_mach		3279306	0					
ANR	3279381	ArrayIndexing	mips_arch_choices [ i ]		3279306	0					
ANR	3279382	Identifier	mips_arch_choices		3279306	0					
ANR	3279383	Identifier	i		3279306	1					
ANR	3279384	Identifier	bfd_mach		3279306	1					
ANR	3279385	Identifier	mach		3279306	1					
ANR	3279386	CompoundStatement		17:1:577:577	3279306	1					
ANR	3279387	ExpressionStatement	c = & mips_arch_choices [ i ]	503:3:17987:18012	3279306	0	True				
ANR	3279388	AssignmentExpression	c = & mips_arch_choices [ i ]		3279306	0		=			
ANR	3279389	Identifier	c		3279306	0					
ANR	3279390	UnaryOperationExpression	& mips_arch_choices [ i ]		3279306	1					
ANR	3279391	UnaryOperator	&		3279306	0					
ANR	3279392	ArrayIndexing	mips_arch_choices [ i ]		3279306	1					
ANR	3279393	Identifier	mips_arch_choices		3279306	0					
ANR	3279394	Identifier	i		3279306	1					
ANR	3279395	ExpressionStatement	hint_bfd_mach = mach	504:3:18017:18037	3279306	1	True				
ANR	3279396	AssignmentExpression	hint_bfd_mach = mach		3279306	0		=			
ANR	3279397	Identifier	hint_bfd_mach		3279306	0					
ANR	3279398	Identifier	mach		3279306	1					
ANR	3279399	ExpressionStatement	hint_arch_choice = c	505:3:18042:18062	3279306	2	True				
ANR	3279400	AssignmentExpression	hint_arch_choice = c		3279306	0		=			
ANR	3279401	Identifier	hint_arch_choice		3279306	0					
ANR	3279402	Identifier	c		3279306	1					
ANR	3279403	ReturnStatement	return c ;	508:2:18075:18083	3279306	8	True				
ANR	3279404	Identifier	c		3279306	0					
ANR	3279405	ReturnType	static const struct mips_arch_choice *		3279306	1					
ANR	3279406	Identifier	choose_arch_by_number		3279306	2					
ANR	3279407	ParameterList	unsigned long mach		3279306	3					
ANR	3279408	Parameter	unsigned long mach	485:23:17384:17401	3279306	0	True				
ANR	3279409	ParameterType	unsigned long		3279306	0					
ANR	3279410	Identifier	mach		3279306	1					
ANR	3279411	CFGEntryNode	ENTRY		3279306		True				
ANR	3279412	CFGExitNode	EXIT		3279306		True				
ANR	3279413	Symbol	ARRAY_SIZE		3279306						
ANR	3279414	Symbol	hint_arch_choice		3279306						
ANR	3279415	Symbol	c		3279306						
ANR	3279416	Symbol	NULL		3279306						
ANR	3279417	Symbol	* mips_arch_choices		3279306						
ANR	3279418	Symbol	hint_arch_choice -> bfd_mach		3279306						
ANR	3279419	Symbol	mips_arch_choices [ i ] . bfd_mach_valid		3279306						
ANR	3279420	Symbol	i		3279306						
ANR	3279421	Symbol	mips_arch_choices		3279306						
ANR	3279422	Symbol	mach		3279306						
ANR	3279423	Symbol	* i		3279306						
ANR	3279424	Symbol	* hint_arch_choice		3279306						
ANR	3279425	Symbol	hint_bfd_mach		3279306						
ANR	3279426	Symbol	mips_arch_choices [ i ] . bfd_mach		3279306						
ANR	3279427	Function	is_newabi	513:0:18141:18450							
ANR	3279428	FunctionDef	is_newabi (Elf_Internal_Ehdr * header)		3279427	0					
ANR	3279429	CompoundStatement		515:0:18190:18450	3279427	0					
ANR	3279430	IfStatement	if ( header -> e_ident [ EI_CLASS ] == ELFCLASS64 )		3279427	0					
ANR	3279431	Condition	header -> e_ident [ EI_CLASS ] == ELFCLASS64	517:6:18257:18295	3279427	0	True				
ANR	3279432	EqualityExpression	header -> e_ident [ EI_CLASS ] == ELFCLASS64		3279427	0		==			
ANR	3279433	ArrayIndexing	header -> e_ident [ EI_CLASS ]		3279427	0					
ANR	3279434	PtrMemberAccess	header -> e_ident		3279427	0					
ANR	3279435	Identifier	header		3279427	0					
ANR	3279436	Identifier	e_ident		3279427	1					
ANR	3279437	Identifier	EI_CLASS		3279427	1					
ANR	3279438	Identifier	ELFCLASS64		3279427	1					
ANR	3279439	CompoundStatement		3:47:107:107	3279427	1					
ANR	3279440	ReturnStatement	return 1 ;	518:3:18303:18311	3279427	0	True				
ANR	3279441	PrimaryExpression	1		3279427	0					
ANR	3279442	IfStatement	if ( ( header -> e_flags & EF_MIPS_ABI2 ) != 0 )		3279427	1					
ANR	3279443	Condition	( header -> e_flags & EF_MIPS_ABI2 ) != 0	522:6:18379:18415	3279427	0	True				
ANR	3279444	EqualityExpression	( header -> e_flags & EF_MIPS_ABI2 ) != 0		3279427	0		!=			
ANR	3279445	BitAndExpression	header -> e_flags & EF_MIPS_ABI2		3279427	0		&			
ANR	3279446	PtrMemberAccess	header -> e_flags		3279427	0					
ANR	3279447	Identifier	header		3279427	0					
ANR	3279448	Identifier	e_flags		3279427	1					
ANR	3279449	Identifier	EF_MIPS_ABI2		3279427	1					
ANR	3279450	PrimaryExpression	0		3279427	1					
ANR	3279451	CompoundStatement		8:45:227:227	3279427	1					
ANR	3279452	ReturnStatement	return 1 ;	523:3:18423:18431	3279427	0	True				
ANR	3279453	PrimaryExpression	1		3279427	0					
ANR	3279454	ReturnStatement	return 0 ;	526:2:18440:18448	3279427	2	True				
ANR	3279455	PrimaryExpression	0		3279427	0					
ANR	3279456	ReturnType	static int		3279427	1					
ANR	3279457	Identifier	is_newabi		3279427	2					
ANR	3279458	ParameterList	Elf_Internal_Ehdr * header		3279427	3					
ANR	3279459	Parameter	Elf_Internal_Ehdr * header	514:11:18163:18187	3279427	0	True				
ANR	3279460	ParameterType	Elf_Internal_Ehdr *		3279427	0					
ANR	3279461	Identifier	header		3279427	1					
ANR	3279462	CFGEntryNode	ENTRY		3279427		True				
ANR	3279463	CFGExitNode	EXIT		3279427		True				
ANR	3279464	Symbol	* EI_CLASS		3279427						
ANR	3279465	Symbol	* * header		3279427						
ANR	3279466	Symbol	EI_CLASS		3279427						
ANR	3279467	Symbol	* header -> e_ident		3279427						
ANR	3279468	Symbol	header -> e_ident		3279427						
ANR	3279469	Symbol	EF_MIPS_ABI2		3279427						
ANR	3279470	Symbol	header		3279427						
ANR	3279471	Symbol	header -> e_flags		3279427						
ANR	3279472	Symbol	ELFCLASS64		3279427						
ANR	3279473	Symbol	* header		3279427						
ANR	3279474	Function	set_default_mips_dis_options	529:0:18453:20032							
ANR	3279475	FunctionDef	set_default_mips_dis_options (struct disassemble_info * info)		3279474	0					
ANR	3279476	CompoundStatement		531:0:18526:20032	3279474	0					
ANR	3279477	IdentifierDeclStatement	const struct mips_arch_choice * chosen_arch ;	532:2:18530:18572	3279474	0	True				
ANR	3279478	IdentifierDecl	* chosen_arch		3279474	0					
ANR	3279479	IdentifierDeclType	const struct mips_arch_choice *		3279474	0					
ANR	3279480	Identifier	chosen_arch		3279474	1					
ANR	3279481	ExpressionStatement	mips_isa = ISA_MIPS3	536:2:18701:18721	3279474	1	True				
ANR	3279482	AssignmentExpression	mips_isa = ISA_MIPS3		3279474	0		=			
ANR	3279483	Identifier	mips_isa		3279474	0					
ANR	3279484	Identifier	ISA_MIPS3		3279474	1					
ANR	3279485	ExpressionStatement	mips_processor = CPU_LOONGSON_2F	537:2:18725:18757	3279474	2	True				
ANR	3279486	AssignmentExpression	mips_processor = CPU_LOONGSON_2F		3279474	0		=			
ANR	3279487	Identifier	mips_processor		3279474	0					
ANR	3279488	Identifier	CPU_LOONGSON_2F		3279474	1					
ANR	3279489	ExpressionStatement	mips_gpr_names = mips_gpr_names_oldabi	538:2:18770:18808	3279474	3	True				
ANR	3279490	AssignmentExpression	mips_gpr_names = mips_gpr_names_oldabi		3279474	0		=			
ANR	3279491	Identifier	mips_gpr_names		3279474	0					
ANR	3279492	Identifier	mips_gpr_names_oldabi		3279474	1					
ANR	3279493	ExpressionStatement	mips_fpr_names = mips_fpr_names_numeric	539:2:18812:18851	3279474	4	True				
ANR	3279494	AssignmentExpression	mips_fpr_names = mips_fpr_names_numeric		3279474	0		=			
ANR	3279495	Identifier	mips_fpr_names		3279474	0					
ANR	3279496	Identifier	mips_fpr_names_numeric		3279474	1					
ANR	3279497	ExpressionStatement	mips_cp0_names = mips_cp0_names_numeric	540:2:18855:18894	3279474	5	True				
ANR	3279498	AssignmentExpression	mips_cp0_names = mips_cp0_names_numeric		3279474	0		=			
ANR	3279499	Identifier	mips_cp0_names		3279474	0					
ANR	3279500	Identifier	mips_cp0_names_numeric		3279474	1					
ANR	3279501	ExpressionStatement	mips_cp0sel_names = NULL	541:2:18898:18922	3279474	6	True				
ANR	3279502	AssignmentExpression	mips_cp0sel_names = NULL		3279474	0		=			
ANR	3279503	Identifier	mips_cp0sel_names		3279474	0					
ANR	3279504	Identifier	NULL		3279474	1					
ANR	3279505	ExpressionStatement	mips_cp0sel_names_len = 0	542:2:18926:18951	3279474	7	True				
ANR	3279506	AssignmentExpression	mips_cp0sel_names_len = 0		3279474	0		=			
ANR	3279507	Identifier	mips_cp0sel_names_len		3279474	0					
ANR	3279508	PrimaryExpression	0		3279474	1					
ANR	3279509	ExpressionStatement	mips_hwr_names = mips_hwr_names_numeric	543:2:18955:18994	3279474	8	True				
ANR	3279510	AssignmentExpression	mips_hwr_names = mips_hwr_names_numeric		3279474	0		=			
ANR	3279511	Identifier	mips_hwr_names		3279474	0					
ANR	3279512	Identifier	mips_hwr_names_numeric		3279474	1					
ANR	3279513	ExpressionStatement	no_aliases = 0	544:2:18998:19012	3279474	9	True				
ANR	3279514	AssignmentExpression	no_aliases = 0		3279474	0		=			
ANR	3279515	Identifier	no_aliases		3279474	0					
ANR	3279516	PrimaryExpression	0		3279474	1					
ANR	3279517	IfStatement	if ( info -> flavour == bfd_target_elf_flavour && info -> section != NULL )		3279474	10					
ANR	3279518	Condition	info -> flavour == bfd_target_elf_flavour && info -> section != NULL	547:6:19086:19149	3279474	0	True				
ANR	3279519	AndExpression	info -> flavour == bfd_target_elf_flavour && info -> section != NULL		3279474	0		&&			
ANR	3279520	EqualityExpression	info -> flavour == bfd_target_elf_flavour		3279474	0		==			
ANR	3279521	PtrMemberAccess	info -> flavour		3279474	0					
ANR	3279522	Identifier	info		3279474	0					
ANR	3279523	Identifier	flavour		3279474	1					
ANR	3279524	Identifier	bfd_target_elf_flavour		3279474	1					
ANR	3279525	EqualityExpression	info -> section != NULL		3279474	1		!=			
ANR	3279526	PtrMemberAccess	info -> section		3279474	0					
ANR	3279527	Identifier	info		3279474	0					
ANR	3279528	Identifier	section		3279474	1					
ANR	3279529	Identifier	NULL		3279474	1					
ANR	3279530	CompoundStatement		19:6:637:662	3279474	1					
ANR	3279531	IdentifierDeclStatement	Elf_Internal_Ehdr * header ;	549:6:19164:19189	3279474	0	True				
ANR	3279532	IdentifierDecl	* header		3279474	0					
ANR	3279533	IdentifierDeclType	Elf_Internal_Ehdr *		3279474	0					
ANR	3279534	Identifier	header		3279474	1					
ANR	3279535	ExpressionStatement	header = elf_elfheader ( info -> section -> owner )	551:6:19198:19243	3279474	1	True				
ANR	3279536	AssignmentExpression	header = elf_elfheader ( info -> section -> owner )		3279474	0		=			
ANR	3279537	Identifier	header		3279474	0					
ANR	3279538	CallExpression	elf_elfheader ( info -> section -> owner )		3279474	1					
ANR	3279539	Callee	elf_elfheader		3279474	0					
ANR	3279540	Identifier	elf_elfheader		3279474	0					
ANR	3279541	ArgumentList	info -> section -> owner		3279474	1					
ANR	3279542	Argument	info -> section -> owner		3279474	0					
ANR	3279543	PtrMemberAccess	info -> section -> owner		3279474	0					
ANR	3279544	PtrMemberAccess	info -> section		3279474	0					
ANR	3279545	Identifier	info		3279474	0					
ANR	3279546	Identifier	section		3279474	1					
ANR	3279547	Identifier	owner		3279474	1					
ANR	3279548	IfStatement	if ( is_newabi ( header ) )		3279474	2					
ANR	3279549	Condition	is_newabi ( header )	552:10:19255:19272	3279474	0	True				
ANR	3279550	CallExpression	is_newabi ( header )		3279474	0					
ANR	3279551	Callee	is_newabi		3279474	0					
ANR	3279552	Identifier	is_newabi		3279474	0					
ANR	3279553	ArgumentList	header		3279474	1					
ANR	3279554	Argument	header		3279474	0					
ANR	3279555	Identifier	header		3279474	0					
ANR	3279556	CompoundStatement		22:30:748:748	3279474	1					
ANR	3279557	ExpressionStatement	mips_gpr_names = mips_gpr_names_newabi	553:7:19284:19322	3279474	0	True				
ANR	3279558	AssignmentExpression	mips_gpr_names = mips_gpr_names_newabi		3279474	0		=			
ANR	3279559	Identifier	mips_gpr_names		3279474	0					
ANR	3279560	Identifier	mips_gpr_names_newabi		3279474	1					
ANR	3279561	ExpressionStatement	target_processor = mips_target_info . processor	561:2:19556:19601	3279474	11	True				
ANR	3279562	AssignmentExpression	target_processor = mips_target_info . processor		3279474	0		=			
ANR	3279563	Identifier	target_processor		3279474	0					
ANR	3279564	MemberAccess	mips_target_info . processor		3279474	1					
ANR	3279565	Identifier	mips_target_info		3279474	0					
ANR	3279566	Identifier	processor		3279474	1					
ANR	3279567	ExpressionStatement	mips_isa = mips_target_info . isa	562:2:19605:19636	3279474	12	True				
ANR	3279568	AssignmentExpression	mips_isa = mips_target_info . isa		3279474	0		=			
ANR	3279569	Identifier	mips_isa		3279474	0					
ANR	3279570	MemberAccess	mips_target_info . isa		3279474	1					
ANR	3279571	Identifier	mips_target_info		3279474	0					
ANR	3279572	Identifier	isa		3279474	1					
ANR	3279573	ReturnType	static void		3279474	1					
ANR	3279574	Identifier	set_default_mips_dis_options		3279474	2					
ANR	3279575	ParameterList	struct disassemble_info * info		3279474	3					
ANR	3279576	Parameter	struct disassemble_info * info	530:30:18495:18523	3279474	0	True				
ANR	3279577	ParameterType	struct disassemble_info *		3279474	0					
ANR	3279578	Identifier	info		3279474	1					
ANR	3279579	CFGEntryNode	ENTRY		3279474		True				
ANR	3279580	CFGExitNode	EXIT		3279474		True				
ANR	3279581	Symbol	CPU_LOONGSON_2F		3279474						
ANR	3279582	Symbol	* * info		3279474						
ANR	3279583	Symbol	info -> section		3279474						
ANR	3279584	Symbol	no_aliases		3279474						
ANR	3279585	Symbol	target_processor		3279474						
ANR	3279586	Symbol	mips_target_info . isa		3279474						
ANR	3279587	Symbol	info -> section -> owner		3279474						
ANR	3279588	Symbol	chosen_arch		3279474						
ANR	3279589	Symbol	mips_gpr_names_newabi		3279474						
ANR	3279590	Symbol	mips_processor		3279474						
ANR	3279591	Symbol	mips_hwr_names		3279474						
ANR	3279592	Symbol	bfd_target_elf_flavour		3279474						
ANR	3279593	Symbol	mips_fpr_names		3279474						
ANR	3279594	Symbol	is_newabi		3279474						
ANR	3279595	Symbol	mips_target_info		3279474						
ANR	3279596	Symbol	info		3279474						
ANR	3279597	Symbol	mips_gpr_names		3279474						
ANR	3279598	Symbol	NULL		3279474						
ANR	3279599	Symbol	info -> flavour		3279474						
ANR	3279600	Symbol	mips_target_info . processor		3279474						
ANR	3279601	Symbol	mips_cp0_names		3279474						
ANR	3279602	Symbol	mips_fpr_names_numeric		3279474						
ANR	3279603	Symbol	mips_cp0sel_names_len		3279474						
ANR	3279604	Symbol	* info -> section		3279474						
ANR	3279605	Symbol	mips_isa		3279474						
ANR	3279606	Symbol	mips_cp0_names_numeric		3279474						
ANR	3279607	Symbol	mips_hwr_names_numeric		3279474						
ANR	3279608	Symbol	header		3279474						
ANR	3279609	Symbol	ISA_MIPS3		3279474						
ANR	3279610	Symbol	mips_cp0sel_names		3279474						
ANR	3279611	Symbol	* info		3279474						
ANR	3279612	Symbol	mips_gpr_names_oldabi		3279474						
ANR	3279613	Symbol	elf_elfheader		3279474						
ANR	3279614	Function	parse_mips_dis_option	577:0:20035:22847							
ANR	3279615	FunctionDef	"parse_mips_dis_option (const char * option , unsigned int len)"		3279614	0					
ANR	3279616	CompoundStatement		579:0:20108:22847	3279614	0					
ANR	3279617	IdentifierDeclStatement	"unsigned int i , optionlen , vallen ;"	580:2:20112:20145	3279614	0	True				
ANR	3279618	IdentifierDecl	i		3279614	0					
ANR	3279619	IdentifierDeclType	unsigned int		3279614	0					
ANR	3279620	Identifier	i		3279614	1					
ANR	3279621	IdentifierDecl	optionlen		3279614	1					
ANR	3279622	IdentifierDeclType	unsigned int		3279614	0					
ANR	3279623	Identifier	optionlen		3279614	1					
ANR	3279624	IdentifierDecl	vallen		3279614	2					
ANR	3279625	IdentifierDeclType	unsigned int		3279614	0					
ANR	3279626	Identifier	vallen		3279614	1					
ANR	3279627	IdentifierDeclStatement	const char * val ;	581:2:20149:20164	3279614	1	True				
ANR	3279628	IdentifierDecl	* val		3279614	0					
ANR	3279629	IdentifierDeclType	const char *		3279614	0					
ANR	3279630	Identifier	val		3279614	1					
ANR	3279631	IdentifierDeclStatement	const struct mips_abi_choice * chosen_abi ;	582:2:20168:20208	3279614	2	True				
ANR	3279632	IdentifierDecl	* chosen_abi		3279614	0					
ANR	3279633	IdentifierDeclType	const struct mips_abi_choice *		3279614	0					
ANR	3279634	Identifier	chosen_abi		3279614	1					
ANR	3279635	IdentifierDeclStatement	const struct mips_arch_choice * chosen_arch ;	583:2:20212:20254	3279614	3	True				
ANR	3279636	IdentifierDecl	* chosen_arch		3279614	0					
ANR	3279637	IdentifierDeclType	const struct mips_arch_choice *		3279614	0					
ANR	3279638	Identifier	chosen_arch		3279614	1					
ANR	3279639	ForStatement	for ( i = 0 ; i < len ; i ++ )		3279614	4					
ANR	3279640	ForInit	i = 0 ;	593:7:20476:20481	3279614	0	True				
ANR	3279641	AssignmentExpression	i = 0		3279614	0		=			
ANR	3279642	Identifier	i		3279614	0					
ANR	3279643	PrimaryExpression	0		3279614	1					
ANR	3279644	Condition	i < len	593:14:20483:20489	3279614	1	True				
ANR	3279645	RelationalExpression	i < len		3279614	0		<			
ANR	3279646	Identifier	i		3279614	0					
ANR	3279647	Identifier	len		3279614	1					
ANR	3279648	PostIncDecOperationExpression	i ++	593:23:20492:20494	3279614	2	True				
ANR	3279649	Identifier	i		3279614	0					
ANR	3279650	IncDec	++		3279614	1					
ANR	3279651	CompoundStatement		15:28:388:388	3279614	3					
ANR	3279652	IfStatement	if ( option [ i ] == '=' )		3279614	0					
ANR	3279653	Condition	option [ i ] == '='	594:7:20506:20521	3279614	0	True				
ANR	3279654	EqualityExpression	option [ i ] == '='		3279614	0		==			
ANR	3279655	ArrayIndexing	option [ i ]		3279614	0					
ANR	3279656	Identifier	option		3279614	0					
ANR	3279657	Identifier	i		3279614	1					
ANR	3279658	PrimaryExpression	'='		3279614	1					
ANR	3279659	CompoundStatement		16:25:415:415	3279614	1					
ANR	3279660	BreakStatement	break ;	595:4:20530:20535	3279614	0	True				
ANR	3279661	IfStatement	if ( i == 0 )		3279614	5					
ANR	3279662	Condition	i == 0	599:6:20553:20558	3279614	0	True				
ANR	3279663	EqualityExpression	i == 0		3279614	0		==			
ANR	3279664	Identifier	i		3279614	0					
ANR	3279665	PrimaryExpression	0		3279614	1					
ANR	3279666	CompoundStatement		21:14:452:452	3279614	1					
ANR	3279667	ReturnStatement	return ;	600:3:20609:20615	3279614	0	True				
ANR	3279668	IfStatement	if ( i == len )		3279614	6					
ANR	3279669	Condition	i == len	602:6:20627:20634	3279614	0	True				
ANR	3279670	EqualityExpression	i == len		3279614	0		==			
ANR	3279671	Identifier	i		3279614	0					
ANR	3279672	Identifier	len		3279614	1					
ANR	3279673	CompoundStatement		24:16:528:528	3279614	1					
ANR	3279674	ReturnStatement	return ;	603:3:20673:20679	3279614	0	True				
ANR	3279675	IfStatement	if ( i == ( len - 1 ) )		3279614	7					
ANR	3279676	Condition	i == ( len - 1 )	605:6:20691:20704	3279614	0	True				
ANR	3279677	EqualityExpression	i == ( len - 1 )		3279614	0		==			
ANR	3279678	Identifier	i		3279614	0					
ANR	3279679	AdditiveExpression	len - 1		3279614	1		-			
ANR	3279680	Identifier	len		3279614	0					
ANR	3279681	PrimaryExpression	1		3279614	1					
ANR	3279682	CompoundStatement		27:22:598:598	3279614	1					
ANR	3279683	ReturnStatement	return ;	606:3:20755:20761	3279614	0	True				
ANR	3279684	ExpressionStatement	optionlen = i	609:2:20770:20783	3279614	8	True				
ANR	3279685	AssignmentExpression	optionlen = i		3279614	0		=			
ANR	3279686	Identifier	optionlen		3279614	0					
ANR	3279687	Identifier	i		3279614	1					
ANR	3279688	ExpressionStatement	val = option + ( optionlen + 1 )	610:2:20787:20817	3279614	9	True				
ANR	3279689	AssignmentExpression	val = option + ( optionlen + 1 )		3279614	0		=			
ANR	3279690	Identifier	val		3279614	0					
ANR	3279691	AdditiveExpression	option + ( optionlen + 1 )		3279614	1		+			
ANR	3279692	Identifier	option		3279614	0					
ANR	3279693	AdditiveExpression	optionlen + 1		3279614	1		+			
ANR	3279694	Identifier	optionlen		3279614	0					
ANR	3279695	PrimaryExpression	1		3279614	1					
ANR	3279696	ExpressionStatement	vallen = len - ( optionlen + 1 )	611:2:20821:20851	3279614	10	True				
ANR	3279697	AssignmentExpression	vallen = len - ( optionlen + 1 )		3279614	0		=			
ANR	3279698	Identifier	vallen		3279614	0					
ANR	3279699	AdditiveExpression	len - ( optionlen + 1 )		3279614	1		-			
ANR	3279700	Identifier	len		3279614	0					
ANR	3279701	AdditiveExpression	optionlen + 1		3279614	1		+			
ANR	3279702	Identifier	optionlen		3279614	0					
ANR	3279703	PrimaryExpression	1		3279614	1					
ANR	3279704	IfStatement	"if ( strncmp ( ""gpr-names"" , option , optionlen ) == 0 && strlen ( ""gpr-names"" ) == optionlen )"		3279614	11					
ANR	3279705	Condition	"strncmp ( ""gpr-names"" , option , optionlen ) == 0 && strlen ( ""gpr-names"" ) == optionlen"	613:6:20860:20947	3279614	0	True				
ANR	3279706	AndExpression	"strncmp ( ""gpr-names"" , option , optionlen ) == 0 && strlen ( ""gpr-names"" ) == optionlen"		3279614	0		&&			
ANR	3279707	EqualityExpression	"strncmp ( ""gpr-names"" , option , optionlen ) == 0"		3279614	0		==			
ANR	3279708	CallExpression	"strncmp ( ""gpr-names"" , option , optionlen )"		3279614	0					
ANR	3279709	Callee	strncmp		3279614	0					
ANR	3279710	Identifier	strncmp		3279614	0					
ANR	3279711	ArgumentList	"""gpr-names"""		3279614	1					
ANR	3279712	Argument	"""gpr-names"""		3279614	0					
ANR	3279713	PrimaryExpression	"""gpr-names"""		3279614	0					
ANR	3279714	Argument	option		3279614	1					
ANR	3279715	Identifier	option		3279614	0					
ANR	3279716	Argument	optionlen		3279614	2					
ANR	3279717	Identifier	optionlen		3279614	0					
ANR	3279718	PrimaryExpression	0		3279614	1					
ANR	3279719	EqualityExpression	"strlen ( ""gpr-names"" ) == optionlen"		3279614	1		==			
ANR	3279720	CallExpression	"strlen ( ""gpr-names"" )"		3279614	0					
ANR	3279721	Callee	strlen		3279614	0					
ANR	3279722	Identifier	strlen		3279614	0					
ANR	3279723	ArgumentList	"""gpr-names"""		3279614	1					
ANR	3279724	Argument	"""gpr-names"""		3279614	0					
ANR	3279725	PrimaryExpression	"""gpr-names"""		3279614	0					
ANR	3279726	Identifier	optionlen		3279614	1					
ANR	3279727	CompoundStatement		37:4:845:845	3279614	1					
ANR	3279728	ExpressionStatement	"chosen_abi = choose_abi_by_name ( val , vallen )"	616:6:20962:21007	3279614	0	True				
ANR	3279729	AssignmentExpression	"chosen_abi = choose_abi_by_name ( val , vallen )"		3279614	0		=			
ANR	3279730	Identifier	chosen_abi		3279614	0					
ANR	3279731	CallExpression	"choose_abi_by_name ( val , vallen )"		3279614	1					
ANR	3279732	Callee	choose_abi_by_name		3279614	0					
ANR	3279733	Identifier	choose_abi_by_name		3279614	0					
ANR	3279734	ArgumentList	val		3279614	1					
ANR	3279735	Argument	val		3279614	0					
ANR	3279736	Identifier	val		3279614	0					
ANR	3279737	Argument	vallen		3279614	1					
ANR	3279738	Identifier	vallen		3279614	0					
ANR	3279739	IfStatement	if ( chosen_abi != NULL )		3279614	1					
ANR	3279740	Condition	chosen_abi != NULL	617:10:21019:21036	3279614	0	True				
ANR	3279741	EqualityExpression	chosen_abi != NULL		3279614	0		!=			
ANR	3279742	Identifier	chosen_abi		3279614	0					
ANR	3279743	Identifier	NULL		3279614	1					
ANR	3279744	CompoundStatement		39:30:930:930	3279614	1					
ANR	3279745	ExpressionStatement	mips_gpr_names = chosen_abi -> gpr_names	618:7:21048:21086	3279614	0	True				
ANR	3279746	AssignmentExpression	mips_gpr_names = chosen_abi -> gpr_names		3279614	0		=			
ANR	3279747	Identifier	mips_gpr_names		3279614	0					
ANR	3279748	PtrMemberAccess	chosen_abi -> gpr_names		3279614	1					
ANR	3279749	Identifier	chosen_abi		3279614	0					
ANR	3279750	Identifier	gpr_names		3279614	1					
ANR	3279751	ReturnStatement	return ;	620:6:21102:21108	3279614	2	True				
ANR	3279752	IfStatement	"if ( strncmp ( ""fpr-names"" , option , optionlen ) == 0 && strlen ( ""fpr-names"" ) == optionlen )"		3279614	12					
ANR	3279753	Condition	"strncmp ( ""fpr-names"" , option , optionlen ) == 0 && strlen ( ""fpr-names"" ) == optionlen"	623:6:21123:21210	3279614	0	True				
ANR	3279754	AndExpression	"strncmp ( ""fpr-names"" , option , optionlen ) == 0 && strlen ( ""fpr-names"" ) == optionlen"		3279614	0		&&			
ANR	3279755	EqualityExpression	"strncmp ( ""fpr-names"" , option , optionlen ) == 0"		3279614	0		==			
ANR	3279756	CallExpression	"strncmp ( ""fpr-names"" , option , optionlen )"		3279614	0					
ANR	3279757	Callee	strncmp		3279614	0					
ANR	3279758	Identifier	strncmp		3279614	0					
ANR	3279759	ArgumentList	"""fpr-names"""		3279614	1					
ANR	3279760	Argument	"""fpr-names"""		3279614	0					
ANR	3279761	PrimaryExpression	"""fpr-names"""		3279614	0					
ANR	3279762	Argument	option		3279614	1					
ANR	3279763	Identifier	option		3279614	0					
ANR	3279764	Argument	optionlen		3279614	2					
ANR	3279765	Identifier	optionlen		3279614	0					
ANR	3279766	PrimaryExpression	0		3279614	1					
ANR	3279767	EqualityExpression	"strlen ( ""fpr-names"" ) == optionlen"		3279614	1		==			
ANR	3279768	CallExpression	"strlen ( ""fpr-names"" )"		3279614	0					
ANR	3279769	Callee	strlen		3279614	0					
ANR	3279770	Identifier	strlen		3279614	0					
ANR	3279771	ArgumentList	"""fpr-names"""		3279614	1					
ANR	3279772	Argument	"""fpr-names"""		3279614	0					
ANR	3279773	PrimaryExpression	"""fpr-names"""		3279614	0					
ANR	3279774	Identifier	optionlen		3279614	1					
ANR	3279775	CompoundStatement		47:4:1108:1108	3279614	1					
ANR	3279776	ExpressionStatement	"chosen_abi = choose_abi_by_name ( val , vallen )"	626:6:21225:21270	3279614	0	True				
ANR	3279777	AssignmentExpression	"chosen_abi = choose_abi_by_name ( val , vallen )"		3279614	0		=			
ANR	3279778	Identifier	chosen_abi		3279614	0					
ANR	3279779	CallExpression	"choose_abi_by_name ( val , vallen )"		3279614	1					
ANR	3279780	Callee	choose_abi_by_name		3279614	0					
ANR	3279781	Identifier	choose_abi_by_name		3279614	0					
ANR	3279782	ArgumentList	val		3279614	1					
ANR	3279783	Argument	val		3279614	0					
ANR	3279784	Identifier	val		3279614	0					
ANR	3279785	Argument	vallen		3279614	1					
ANR	3279786	Identifier	vallen		3279614	0					
ANR	3279787	IfStatement	if ( chosen_abi != NULL )		3279614	1					
ANR	3279788	Condition	chosen_abi != NULL	627:10:21282:21299	3279614	0	True				
ANR	3279789	EqualityExpression	chosen_abi != NULL		3279614	0		!=			
ANR	3279790	Identifier	chosen_abi		3279614	0					
ANR	3279791	Identifier	NULL		3279614	1					
ANR	3279792	CompoundStatement		49:30:1193:1193	3279614	1					
ANR	3279793	ExpressionStatement	mips_fpr_names = chosen_abi -> fpr_names	628:7:21311:21349	3279614	0	True				
ANR	3279794	AssignmentExpression	mips_fpr_names = chosen_abi -> fpr_names		3279614	0		=			
ANR	3279795	Identifier	mips_fpr_names		3279614	0					
ANR	3279796	PtrMemberAccess	chosen_abi -> fpr_names		3279614	1					
ANR	3279797	Identifier	chosen_abi		3279614	0					
ANR	3279798	Identifier	fpr_names		3279614	1					
ANR	3279799	ReturnStatement	return ;	630:6:21365:21371	3279614	2	True				
ANR	3279800	IfStatement	"if ( strncmp ( ""cp0-names"" , option , optionlen ) == 0 && strlen ( ""cp0-names"" ) == optionlen )"		3279614	13					
ANR	3279801	Condition	"strncmp ( ""cp0-names"" , option , optionlen ) == 0 && strlen ( ""cp0-names"" ) == optionlen"	633:6:21386:21473	3279614	0	True				
ANR	3279802	AndExpression	"strncmp ( ""cp0-names"" , option , optionlen ) == 0 && strlen ( ""cp0-names"" ) == optionlen"		3279614	0		&&			
ANR	3279803	EqualityExpression	"strncmp ( ""cp0-names"" , option , optionlen ) == 0"		3279614	0		==			
ANR	3279804	CallExpression	"strncmp ( ""cp0-names"" , option , optionlen )"		3279614	0					
ANR	3279805	Callee	strncmp		3279614	0					
ANR	3279806	Identifier	strncmp		3279614	0					
ANR	3279807	ArgumentList	"""cp0-names"""		3279614	1					
ANR	3279808	Argument	"""cp0-names"""		3279614	0					
ANR	3279809	PrimaryExpression	"""cp0-names"""		3279614	0					
ANR	3279810	Argument	option		3279614	1					
ANR	3279811	Identifier	option		3279614	0					
ANR	3279812	Argument	optionlen		3279614	2					
ANR	3279813	Identifier	optionlen		3279614	0					
ANR	3279814	PrimaryExpression	0		3279614	1					
ANR	3279815	EqualityExpression	"strlen ( ""cp0-names"" ) == optionlen"		3279614	1		==			
ANR	3279816	CallExpression	"strlen ( ""cp0-names"" )"		3279614	0					
ANR	3279817	Callee	strlen		3279614	0					
ANR	3279818	Identifier	strlen		3279614	0					
ANR	3279819	ArgumentList	"""cp0-names"""		3279614	1					
ANR	3279820	Argument	"""cp0-names"""		3279614	0					
ANR	3279821	PrimaryExpression	"""cp0-names"""		3279614	0					
ANR	3279822	Identifier	optionlen		3279614	1					
ANR	3279823	CompoundStatement		57:4:1371:1371	3279614	1					
ANR	3279824	ExpressionStatement	"chosen_arch = choose_arch_by_name ( val , vallen )"	636:6:21488:21535	3279614	0	True				
ANR	3279825	AssignmentExpression	"chosen_arch = choose_arch_by_name ( val , vallen )"		3279614	0		=			
ANR	3279826	Identifier	chosen_arch		3279614	0					
ANR	3279827	CallExpression	"choose_arch_by_name ( val , vallen )"		3279614	1					
ANR	3279828	Callee	choose_arch_by_name		3279614	0					
ANR	3279829	Identifier	choose_arch_by_name		3279614	0					
ANR	3279830	ArgumentList	val		3279614	1					
ANR	3279831	Argument	val		3279614	0					
ANR	3279832	Identifier	val		3279614	0					
ANR	3279833	Argument	vallen		3279614	1					
ANR	3279834	Identifier	vallen		3279614	0					
ANR	3279835	IfStatement	if ( chosen_arch != NULL )		3279614	1					
ANR	3279836	Condition	chosen_arch != NULL	637:10:21547:21565	3279614	0	True				
ANR	3279837	EqualityExpression	chosen_arch != NULL		3279614	0		!=			
ANR	3279838	Identifier	chosen_arch		3279614	0					
ANR	3279839	Identifier	NULL		3279614	1					
ANR	3279840	CompoundStatement		60:1:1460:1460	3279614	1					
ANR	3279841	ExpressionStatement	mips_cp0_names = chosen_arch -> cp0_names	639:3:21574:21613	3279614	0	True				
ANR	3279842	AssignmentExpression	mips_cp0_names = chosen_arch -> cp0_names		3279614	0		=			
ANR	3279843	Identifier	mips_cp0_names		3279614	0					
ANR	3279844	PtrMemberAccess	chosen_arch -> cp0_names		3279614	1					
ANR	3279845	Identifier	chosen_arch		3279614	0					
ANR	3279846	Identifier	cp0_names		3279614	1					
ANR	3279847	ExpressionStatement	mips_cp0sel_names = chosen_arch -> cp0sel_names	640:3:21618:21663	3279614	1	True				
ANR	3279848	AssignmentExpression	mips_cp0sel_names = chosen_arch -> cp0sel_names		3279614	0		=			
ANR	3279849	Identifier	mips_cp0sel_names		3279614	0					
ANR	3279850	PtrMemberAccess	chosen_arch -> cp0sel_names		3279614	1					
ANR	3279851	Identifier	chosen_arch		3279614	0					
ANR	3279852	Identifier	cp0sel_names		3279614	1					
ANR	3279853	ExpressionStatement	mips_cp0sel_names_len = chosen_arch -> cp0sel_names_len	641:3:21668:21721	3279614	2	True				
ANR	3279854	AssignmentExpression	mips_cp0sel_names_len = chosen_arch -> cp0sel_names_len		3279614	0		=			
ANR	3279855	Identifier	mips_cp0sel_names_len		3279614	0					
ANR	3279856	PtrMemberAccess	chosen_arch -> cp0sel_names_len		3279614	1					
ANR	3279857	Identifier	chosen_arch		3279614	0					
ANR	3279858	Identifier	cp0sel_names_len		3279614	1					
ANR	3279859	ReturnStatement	return ;	643:6:21732:21738	3279614	2	True				
ANR	3279860	IfStatement	"if ( strncmp ( ""hwr-names"" , option , optionlen ) == 0 && strlen ( ""hwr-names"" ) == optionlen )"		3279614	14					
ANR	3279861	Condition	"strncmp ( ""hwr-names"" , option , optionlen ) == 0 && strlen ( ""hwr-names"" ) == optionlen"	646:6:21753:21840	3279614	0	True				
ANR	3279862	AndExpression	"strncmp ( ""hwr-names"" , option , optionlen ) == 0 && strlen ( ""hwr-names"" ) == optionlen"		3279614	0		&&			
ANR	3279863	EqualityExpression	"strncmp ( ""hwr-names"" , option , optionlen ) == 0"		3279614	0		==			
ANR	3279864	CallExpression	"strncmp ( ""hwr-names"" , option , optionlen )"		3279614	0					
ANR	3279865	Callee	strncmp		3279614	0					
ANR	3279866	Identifier	strncmp		3279614	0					
ANR	3279867	ArgumentList	"""hwr-names"""		3279614	1					
ANR	3279868	Argument	"""hwr-names"""		3279614	0					
ANR	3279869	PrimaryExpression	"""hwr-names"""		3279614	0					
ANR	3279870	Argument	option		3279614	1					
ANR	3279871	Identifier	option		3279614	0					
ANR	3279872	Argument	optionlen		3279614	2					
ANR	3279873	Identifier	optionlen		3279614	0					
ANR	3279874	PrimaryExpression	0		3279614	1					
ANR	3279875	EqualityExpression	"strlen ( ""hwr-names"" ) == optionlen"		3279614	1		==			
ANR	3279876	CallExpression	"strlen ( ""hwr-names"" )"		3279614	0					
ANR	3279877	Callee	strlen		3279614	0					
ANR	3279878	Identifier	strlen		3279614	0					
ANR	3279879	ArgumentList	"""hwr-names"""		3279614	1					
ANR	3279880	Argument	"""hwr-names"""		3279614	0					
ANR	3279881	PrimaryExpression	"""hwr-names"""		3279614	0					
ANR	3279882	Identifier	optionlen		3279614	1					
ANR	3279883	CompoundStatement		70:4:1738:1738	3279614	1					
ANR	3279884	ExpressionStatement	"chosen_arch = choose_arch_by_name ( val , vallen )"	649:6:21855:21902	3279614	0	True				
ANR	3279885	AssignmentExpression	"chosen_arch = choose_arch_by_name ( val , vallen )"		3279614	0		=			
ANR	3279886	Identifier	chosen_arch		3279614	0					
ANR	3279887	CallExpression	"choose_arch_by_name ( val , vallen )"		3279614	1					
ANR	3279888	Callee	choose_arch_by_name		3279614	0					
ANR	3279889	Identifier	choose_arch_by_name		3279614	0					
ANR	3279890	ArgumentList	val		3279614	1					
ANR	3279891	Argument	val		3279614	0					
ANR	3279892	Identifier	val		3279614	0					
ANR	3279893	Argument	vallen		3279614	1					
ANR	3279894	Identifier	vallen		3279614	0					
ANR	3279895	IfStatement	if ( chosen_arch != NULL )		3279614	1					
ANR	3279896	Condition	chosen_arch != NULL	650:10:21914:21932	3279614	0	True				
ANR	3279897	EqualityExpression	chosen_arch != NULL		3279614	0		!=			
ANR	3279898	Identifier	chosen_arch		3279614	0					
ANR	3279899	Identifier	NULL		3279614	1					
ANR	3279900	CompoundStatement		72:31:1826:1826	3279614	1					
ANR	3279901	ExpressionStatement	mips_hwr_names = chosen_arch -> hwr_names	651:7:21944:21983	3279614	0	True				
ANR	3279902	AssignmentExpression	mips_hwr_names = chosen_arch -> hwr_names		3279614	0		=			
ANR	3279903	Identifier	mips_hwr_names		3279614	0					
ANR	3279904	PtrMemberAccess	chosen_arch -> hwr_names		3279614	1					
ANR	3279905	Identifier	chosen_arch		3279614	0					
ANR	3279906	Identifier	hwr_names		3279614	1					
ANR	3279907	ReturnStatement	return ;	653:6:21999:22005	3279614	2	True				
ANR	3279908	IfStatement	"if ( strncmp ( ""reg-names"" , option , optionlen ) == 0 && strlen ( ""reg-names"" ) == optionlen )"		3279614	15					
ANR	3279909	Condition	"strncmp ( ""reg-names"" , option , optionlen ) == 0 && strlen ( ""reg-names"" ) == optionlen"	656:6:22020:22107	3279614	0	True				
ANR	3279910	AndExpression	"strncmp ( ""reg-names"" , option , optionlen ) == 0 && strlen ( ""reg-names"" ) == optionlen"		3279614	0		&&			
ANR	3279911	EqualityExpression	"strncmp ( ""reg-names"" , option , optionlen ) == 0"		3279614	0		==			
ANR	3279912	CallExpression	"strncmp ( ""reg-names"" , option , optionlen )"		3279614	0					
ANR	3279913	Callee	strncmp		3279614	0					
ANR	3279914	Identifier	strncmp		3279614	0					
ANR	3279915	ArgumentList	"""reg-names"""		3279614	1					
ANR	3279916	Argument	"""reg-names"""		3279614	0					
ANR	3279917	PrimaryExpression	"""reg-names"""		3279614	0					
ANR	3279918	Argument	option		3279614	1					
ANR	3279919	Identifier	option		3279614	0					
ANR	3279920	Argument	optionlen		3279614	2					
ANR	3279921	Identifier	optionlen		3279614	0					
ANR	3279922	PrimaryExpression	0		3279614	1					
ANR	3279923	EqualityExpression	"strlen ( ""reg-names"" ) == optionlen"		3279614	1		==			
ANR	3279924	CallExpression	"strlen ( ""reg-names"" )"		3279614	0					
ANR	3279925	Callee	strlen		3279614	0					
ANR	3279926	Identifier	strlen		3279614	0					
ANR	3279927	ArgumentList	"""reg-names"""		3279614	1					
ANR	3279928	Argument	"""reg-names"""		3279614	0					
ANR	3279929	PrimaryExpression	"""reg-names"""		3279614	0					
ANR	3279930	Identifier	optionlen		3279614	1					
ANR	3279931	CompoundStatement		80:4:2005:2005	3279614	1					
ANR	3279932	ExpressionStatement	"chosen_abi = choose_abi_by_name ( val , vallen )"	663:6:22344:22389	3279614	0	True				
ANR	3279933	AssignmentExpression	"chosen_abi = choose_abi_by_name ( val , vallen )"		3279614	0		=			
ANR	3279934	Identifier	chosen_abi		3279614	0					
ANR	3279935	CallExpression	"choose_abi_by_name ( val , vallen )"		3279614	1					
ANR	3279936	Callee	choose_abi_by_name		3279614	0					
ANR	3279937	Identifier	choose_abi_by_name		3279614	0					
ANR	3279938	ArgumentList	val		3279614	1					
ANR	3279939	Argument	val		3279614	0					
ANR	3279940	Identifier	val		3279614	0					
ANR	3279941	Argument	vallen		3279614	1					
ANR	3279942	Identifier	vallen		3279614	0					
ANR	3279943	IfStatement	if ( chosen_abi != NULL )		3279614	1					
ANR	3279944	Condition	chosen_abi != NULL	664:10:22401:22418	3279614	0	True				
ANR	3279945	EqualityExpression	chosen_abi != NULL		3279614	0		!=			
ANR	3279946	Identifier	chosen_abi		3279614	0					
ANR	3279947	Identifier	NULL		3279614	1					
ANR	3279948	CompoundStatement		87:1:2313:2313	3279614	1					
ANR	3279949	ExpressionStatement	mips_gpr_names = chosen_abi -> gpr_names	666:3:22427:22465	3279614	0	True				
ANR	3279950	AssignmentExpression	mips_gpr_names = chosen_abi -> gpr_names		3279614	0		=			
ANR	3279951	Identifier	mips_gpr_names		3279614	0					
ANR	3279952	PtrMemberAccess	chosen_abi -> gpr_names		3279614	1					
ANR	3279953	Identifier	chosen_abi		3279614	0					
ANR	3279954	Identifier	gpr_names		3279614	1					
ANR	3279955	ExpressionStatement	mips_fpr_names = chosen_abi -> fpr_names	667:3:22470:22508	3279614	1	True				
ANR	3279956	AssignmentExpression	mips_fpr_names = chosen_abi -> fpr_names		3279614	0		=			
ANR	3279957	Identifier	mips_fpr_names		3279614	0					
ANR	3279958	PtrMemberAccess	chosen_abi -> fpr_names		3279614	1					
ANR	3279959	Identifier	chosen_abi		3279614	0					
ANR	3279960	Identifier	fpr_names		3279614	1					
ANR	3279961	ExpressionStatement	"chosen_arch = choose_arch_by_name ( val , vallen )"	669:6:22519:22566	3279614	2	True				
ANR	3279962	AssignmentExpression	"chosen_arch = choose_arch_by_name ( val , vallen )"		3279614	0		=			
ANR	3279963	Identifier	chosen_arch		3279614	0					
ANR	3279964	CallExpression	"choose_arch_by_name ( val , vallen )"		3279614	1					
ANR	3279965	Callee	choose_arch_by_name		3279614	0					
ANR	3279966	Identifier	choose_arch_by_name		3279614	0					
ANR	3279967	ArgumentList	val		3279614	1					
ANR	3279968	Argument	val		3279614	0					
ANR	3279969	Identifier	val		3279614	0					
ANR	3279970	Argument	vallen		3279614	1					
ANR	3279971	Identifier	vallen		3279614	0					
ANR	3279972	IfStatement	if ( chosen_arch != NULL )		3279614	3					
ANR	3279973	Condition	chosen_arch != NULL	670:10:22578:22596	3279614	0	True				
ANR	3279974	EqualityExpression	chosen_arch != NULL		3279614	0		!=			
ANR	3279975	Identifier	chosen_arch		3279614	0					
ANR	3279976	Identifier	NULL		3279614	1					
ANR	3279977	CompoundStatement		93:1:2491:2491	3279614	1					
ANR	3279978	ExpressionStatement	mips_cp0_names = chosen_arch -> cp0_names	672:3:22605:22644	3279614	0	True				
ANR	3279979	AssignmentExpression	mips_cp0_names = chosen_arch -> cp0_names		3279614	0		=			
ANR	3279980	Identifier	mips_cp0_names		3279614	0					
ANR	3279981	PtrMemberAccess	chosen_arch -> cp0_names		3279614	1					
ANR	3279982	Identifier	chosen_arch		3279614	0					
ANR	3279983	Identifier	cp0_names		3279614	1					
ANR	3279984	ExpressionStatement	mips_cp0sel_names = chosen_arch -> cp0sel_names	673:3:22649:22694	3279614	1	True				
ANR	3279985	AssignmentExpression	mips_cp0sel_names = chosen_arch -> cp0sel_names		3279614	0		=			
ANR	3279986	Identifier	mips_cp0sel_names		3279614	0					
ANR	3279987	PtrMemberAccess	chosen_arch -> cp0sel_names		3279614	1					
ANR	3279988	Identifier	chosen_arch		3279614	0					
ANR	3279989	Identifier	cp0sel_names		3279614	1					
ANR	3279990	ExpressionStatement	mips_cp0sel_names_len = chosen_arch -> cp0sel_names_len	674:3:22699:22752	3279614	2	True				
ANR	3279991	AssignmentExpression	mips_cp0sel_names_len = chosen_arch -> cp0sel_names_len		3279614	0		=			
ANR	3279992	Identifier	mips_cp0sel_names_len		3279614	0					
ANR	3279993	PtrMemberAccess	chosen_arch -> cp0sel_names_len		3279614	1					
ANR	3279994	Identifier	chosen_arch		3279614	0					
ANR	3279995	Identifier	cp0sel_names_len		3279614	1					
ANR	3279996	ExpressionStatement	mips_hwr_names = chosen_arch -> hwr_names	675:3:22757:22796	3279614	3	True				
ANR	3279997	AssignmentExpression	mips_hwr_names = chosen_arch -> hwr_names		3279614	0		=			
ANR	3279998	Identifier	mips_hwr_names		3279614	0					
ANR	3279999	PtrMemberAccess	chosen_arch -> hwr_names		3279614	1					
ANR	3280000	Identifier	chosen_arch		3279614	0					
ANR	3280001	Identifier	hwr_names		3279614	1					
ANR	3280002	ReturnStatement	return ;	677:6:22807:22813	3279614	4	True				
ANR	3280003	ReturnType	static void		3279614	1					
ANR	3280004	Identifier	parse_mips_dis_option		3279614	2					
ANR	3280005	ParameterList	"const char * option , unsigned int len"		3279614	3					
ANR	3280006	Parameter	const char * option	578:23:20070:20087	3279614	0	True				
ANR	3280007	ParameterType	const char *		3279614	0					
ANR	3280008	Identifier	option		3279614	1					
ANR	3280009	Parameter	unsigned int len	578:43:20090:20105	3279614	1	True				
ANR	3280010	ParameterType	unsigned int		3279614	0					
ANR	3280011	Identifier	len		3279614	1					
ANR	3280012	CFGEntryNode	ENTRY		3279614		True				
ANR	3280013	CFGExitNode	EXIT		3279614		True				
ANR	3280014	Symbol	* chosen_abi		3279614						
ANR	3280015	Symbol	choose_arch_by_name		3279614						
ANR	3280016	Symbol	choose_abi_by_name		3279614						
ANR	3280017	Symbol	chosen_abi		3279614						
ANR	3280018	Symbol	* chosen_arch		3279614						
ANR	3280019	Symbol	chosen_arch		3279614						
ANR	3280020	Symbol	strncmp		3279614						
ANR	3280021	Symbol	strlen		3279614						
ANR	3280022	Symbol	len		3279614						
ANR	3280023	Symbol	mips_hwr_names		3279614						
ANR	3280024	Symbol	mips_fpr_names		3279614						
ANR	3280025	Symbol	mips_gpr_names		3279614						
ANR	3280026	Symbol	val		3279614						
ANR	3280027	Symbol	chosen_abi -> fpr_names		3279614						
ANR	3280028	Symbol	NULL		3279614						
ANR	3280029	Symbol	chosen_abi -> gpr_names		3279614						
ANR	3280030	Symbol	chosen_arch -> cp0sel_names_len		3279614						
ANR	3280031	Symbol	* option		3279614						
ANR	3280032	Symbol	i		3279614						
ANR	3280033	Symbol	mips_cp0_names		3279614						
ANR	3280034	Symbol	chosen_arch -> cp0_names		3279614						
ANR	3280035	Symbol	vallen		3279614						
ANR	3280036	Symbol	* i		3279614						
ANR	3280037	Symbol	mips_cp0sel_names_len		3279614						
ANR	3280038	Symbol	chosen_arch -> hwr_names		3279614						
ANR	3280039	Symbol	chosen_arch -> cp0sel_names		3279614						
ANR	3280040	Symbol	mips_cp0sel_names		3279614						
ANR	3280041	Symbol	option		3279614						
ANR	3280042	Symbol	optionlen		3279614						
ANR	3280043	Function	parse_mips_dis_options	683:0:22850:23466							
ANR	3280044	FunctionDef	parse_mips_dis_options (const char * options)		3280043	0					
ANR	3280045	CompoundStatement		685:0:22900:23466	3280043	0					
ANR	3280046	IdentifierDeclStatement	const char * option_end ;	686:2:22904:22926	3280043	0	True				
ANR	3280047	IdentifierDecl	* option_end		3280043	0					
ANR	3280048	IdentifierDeclType	const char *		3280043	0					
ANR	3280049	Identifier	option_end		3280043	1					
ANR	3280050	IfStatement	if ( ! options )		3280043	1					
ANR	3280051	Condition	! options	688:6:22935:22942	3280043	0	True				
ANR	3280052	UnaryOperationExpression	! options		3280043	0					
ANR	3280053	UnaryOperator	!		3280043	0					
ANR	3280054	Identifier	options		3280043	1					
ANR	3280055	CompoundStatement		4:16:44:44	3280043	1					
ANR	3280056	ReturnStatement	return ;	689:3:22950:22956	3280043	0	True				
ANR	3280057	WhileStatement	while ( * options != '\\0' )		3280043	2					
ANR	3280058	Condition	* options != '\\0'	692:9:22972:22987	3280043	0	True				
ANR	3280059	EqualityExpression	* options != '\\0'		3280043	0		!=			
ANR	3280060	UnaryOperationExpression	* options		3280043	0					
ANR	3280061	UnaryOperator	*		3280043	0					
ANR	3280062	Identifier	options		3280043	1					
ANR	3280063	PrimaryExpression	'\\0'		3280043	1					
ANR	3280064	CompoundStatement		9:4:93:93	3280043	1					
ANR	3280065	IfStatement	"if ( * options == ',' )"		3280043	0					
ANR	3280066	Condition	"* options == ','"	695:10:23039:23053	3280043	0	True				
ANR	3280067	EqualityExpression	"* options == ','"		3280043	0		==			
ANR	3280068	UnaryOperationExpression	* options		3280043	0					
ANR	3280069	UnaryOperator	*		3280043	0					
ANR	3280070	Identifier	options		3280043	1					
ANR	3280071	PrimaryExpression	"','"		3280043	1					
ANR	3280072	CompoundStatement		12:1:156:156	3280043	1					
ANR	3280073	ExpressionStatement	options ++	697:3:23062:23071	3280043	0	True				
ANR	3280074	PostIncDecOperationExpression	options ++		3280043	0					
ANR	3280075	Identifier	options		3280043	0					
ANR	3280076	IncDec	++		3280043	1					
ANR	3280077	ContinueStatement	continue ;	698:3:23076:23084	3280043	1	True				
ANR	3280078	ExpressionStatement	option_end = options + 1	702:6:23158:23182	3280043	1	True				
ANR	3280079	AssignmentExpression	option_end = options + 1		3280043	0		=			
ANR	3280080	Identifier	option_end		3280043	0					
ANR	3280081	AdditiveExpression	options + 1		3280043	1		+			
ANR	3280082	Identifier	options		3280043	0					
ANR	3280083	PrimaryExpression	1		3280043	1					
ANR	3280084	WhileStatement	"while ( * option_end != ',' && * option_end != '\\0' )"		3280043	2					
ANR	3280085	Condition	"* option_end != ',' && * option_end != '\\0'"	703:13:23197:23237	3280043	0	True				
ANR	3280086	AndExpression	"* option_end != ',' && * option_end != '\\0'"		3280043	0		&&			
ANR	3280087	EqualityExpression	"* option_end != ','"		3280043	0		!=			
ANR	3280088	UnaryOperationExpression	* option_end		3280043	0					
ANR	3280089	UnaryOperator	*		3280043	0					
ANR	3280090	Identifier	option_end		3280043	1					
ANR	3280091	PrimaryExpression	"','"		3280043	1					
ANR	3280092	EqualityExpression	* option_end != '\\0'		3280043	1		!=			
ANR	3280093	UnaryOperationExpression	* option_end		3280043	0					
ANR	3280094	UnaryOperator	*		3280043	0					
ANR	3280095	Identifier	option_end		3280043	1					
ANR	3280096	PrimaryExpression	'\\0'		3280043	1					
ANR	3280097	CompoundStatement		19:56:339:339	3280043	1					
ANR	3280098	ExpressionStatement	option_end ++	704:7:23249:23261	3280043	0	True				
ANR	3280099	PostIncDecOperationExpression	option_end ++		3280043	0					
ANR	3280100	Identifier	option_end		3280043	0					
ANR	3280101	IncDec	++		3280043	1					
ANR	3280102	ExpressionStatement	"parse_mips_dis_option ( options , option_end - options )"	707:6:23278:23331	3280043	3	True				
ANR	3280103	CallExpression	"parse_mips_dis_option ( options , option_end - options )"		3280043	0					
ANR	3280104	Callee	parse_mips_dis_option		3280043	0					
ANR	3280105	Identifier	parse_mips_dis_option		3280043	0					
ANR	3280106	ArgumentList	options		3280043	1					
ANR	3280107	Argument	options		3280043	0					
ANR	3280108	Identifier	options		3280043	0					
ANR	3280109	Argument	option_end - options		3280043	1					
ANR	3280110	AdditiveExpression	option_end - options		3280043	0		-			
ANR	3280111	Identifier	option_end		3280043	0					
ANR	3280112	Identifier	options		3280043	1					
ANR	3280113	ExpressionStatement	options = option_end	711:6:23438:23458	3280043	4	True				
ANR	3280114	AssignmentExpression	options = option_end		3280043	0		=			
ANR	3280115	Identifier	options		3280043	0					
ANR	3280116	Identifier	option_end		3280043	1					
ANR	3280117	ReturnType	void		3280043	1					
ANR	3280118	Identifier	parse_mips_dis_options		3280043	2					
ANR	3280119	ParameterList	const char * options		3280043	3					
ANR	3280120	Parameter	const char * options	684:24:22879:22897	3280043	0	True				
ANR	3280121	ParameterType	const char *		3280043	0					
ANR	3280122	Identifier	options		3280043	1					
ANR	3280123	CFGEntryNode	ENTRY		3280043		True				
ANR	3280124	CFGExitNode	EXIT		3280043		True				
ANR	3280125	Symbol	option_end		3280043						
ANR	3280126	Symbol	options		3280043						
ANR	3280127	Symbol	* option_end		3280043						
ANR	3280128	Symbol	* options		3280043						
ANR	3280129	Function	lookup_mips_cp0sel_name	715:0:23469:23796							
ANR	3280130	FunctionDef	"lookup_mips_cp0sel_name (const struct mips_cp0sel_name * names , unsigned int len , unsigned int cp0reg , unsigned int sel)"		3280129	0					
ANR	3280131	CompoundStatement		720:0:23640:23796	3280129	0					
ANR	3280132	IdentifierDeclStatement	unsigned int i ;	721:2:23644:23658	3280129	0	True				
ANR	3280133	IdentifierDecl	i		3280129	0					
ANR	3280134	IdentifierDeclType	unsigned int		3280129	0					
ANR	3280135	Identifier	i		3280129	1					
ANR	3280136	ForStatement	for ( i = 0 ; i < len ; i ++ )		3280129	1					
ANR	3280137	ForInit	i = 0 ;	723:7:23668:23673	3280129	0	True				
ANR	3280138	AssignmentExpression	i = 0		3280129	0		=			
ANR	3280139	Identifier	i		3280129	0					
ANR	3280140	PrimaryExpression	0		3280129	1					
ANR	3280141	Condition	i < len	723:14:23675:23681	3280129	1	True				
ANR	3280142	RelationalExpression	i < len		3280129	0		<			
ANR	3280143	Identifier	i		3280129	0					
ANR	3280144	Identifier	len		3280129	1					
ANR	3280145	PostIncDecOperationExpression	i ++	723:23:23684:23686	3280129	2	True				
ANR	3280146	Identifier	i		3280129	0					
ANR	3280147	IncDec	++		3280129	1					
ANR	3280148	CompoundStatement		4:28:48:48	3280129	3					
ANR	3280149	IfStatement	if ( names [ i ] . cp0reg == cp0reg && names [ i ] . sel == sel )		3280129	0					
ANR	3280150	Condition	names [ i ] . cp0reg == cp0reg && names [ i ] . sel == sel	724:7:23698:23745	3280129	0	True				
ANR	3280151	AndExpression	names [ i ] . cp0reg == cp0reg && names [ i ] . sel == sel		3280129	0		&&			
ANR	3280152	EqualityExpression	names [ i ] . cp0reg == cp0reg		3280129	0		==			
ANR	3280153	MemberAccess	names [ i ] . cp0reg		3280129	0					
ANR	3280154	ArrayIndexing	names [ i ]		3280129	0					
ANR	3280155	Identifier	names		3280129	0					
ANR	3280156	Identifier	i		3280129	1					
ANR	3280157	Identifier	cp0reg		3280129	1					
ANR	3280158	Identifier	cp0reg		3280129	1					
ANR	3280159	EqualityExpression	names [ i ] . sel == sel		3280129	1		==			
ANR	3280160	MemberAccess	names [ i ] . sel		3280129	0					
ANR	3280161	ArrayIndexing	names [ i ]		3280129	0					
ANR	3280162	Identifier	names		3280129	0					
ANR	3280163	Identifier	i		3280129	1					
ANR	3280164	Identifier	sel		3280129	1					
ANR	3280165	Identifier	sel		3280129	1					
ANR	3280166	CompoundStatement		5:57:107:107	3280129	1					
ANR	3280167	ReturnStatement	return & names [ i ] ;	725:4:23754:23770	3280129	0	True				
ANR	3280168	UnaryOperationExpression	& names [ i ]		3280129	0					
ANR	3280169	UnaryOperator	&		3280129	0					
ANR	3280170	ArrayIndexing	names [ i ]		3280129	1					
ANR	3280171	Identifier	names		3280129	0					
ANR	3280172	Identifier	i		3280129	1					
ANR	3280173	ReturnStatement	return NULL ;	728:2:23783:23794	3280129	2	True				
ANR	3280174	Identifier	NULL		3280129	0					
ANR	3280175	ReturnType	static const struct mips_cp0sel_name *		3280129	1					
ANR	3280176	Identifier	lookup_mips_cp0sel_name		3280129	2					
ANR	3280177	ParameterList	"const struct mips_cp0sel_name * names , unsigned int len , unsigned int cp0reg , unsigned int sel"		3280129	3					
ANR	3280178	Parameter	const struct mips_cp0sel_name * names	716:25:23533:23568	3280129	0	True				
ANR	3280179	ParameterType	const struct mips_cp0sel_name *		3280129	0					
ANR	3280180	Identifier	names		3280129	1					
ANR	3280181	Parameter	unsigned int len	717:4:23575:23590	3280129	1	True				
ANR	3280182	ParameterType	unsigned int		3280129	0					
ANR	3280183	Identifier	len		3280129	1					
ANR	3280184	Parameter	unsigned int cp0reg	718:4:23597:23615	3280129	2	True				
ANR	3280185	ParameterType	unsigned int		3280129	0					
ANR	3280186	Identifier	cp0reg		3280129	1					
ANR	3280187	Parameter	unsigned int sel	719:4:23622:23637	3280129	3	True				
ANR	3280188	ParameterType	unsigned int		3280129	0					
ANR	3280189	Identifier	sel		3280129	1					
ANR	3280190	CFGEntryNode	ENTRY		3280129		True				
ANR	3280191	CFGExitNode	EXIT		3280129		True				
ANR	3280192	Symbol	cp0reg		3280129						
ANR	3280193	Symbol	names		3280129						
ANR	3280194	Symbol	* i		3280129						
ANR	3280195	Symbol	NULL		3280129						
ANR	3280196	Symbol	len		3280129						
ANR	3280197	Symbol	names [ i ] . sel		3280129						
ANR	3280198	Symbol	i		3280129						
ANR	3280199	Symbol	sel		3280129						
ANR	3280200	Symbol	names [ i ] . cp0reg		3280129						
ANR	3280201	Symbol	* names		3280129						
ANR	3280202	Function	print_insn_args	733:0:23849:36941							
ANR	3280203	FunctionDef	"print_insn_args (const char * d , register unsigned long int l , bfd_vma pc , struct disassemble_info * info , const struct mips_opcode * opp)"		3280202	0					
ANR	3280204	CompoundStatement		739:0:24009:36941	3280202	0					
ANR	3280205	IdentifierDeclStatement	"int op , delta ;"	740:2:24013:24026	3280202	0	True				
ANR	3280206	IdentifierDecl	op		3280202	0					
ANR	3280207	IdentifierDeclType	int		3280202	0					
ANR	3280208	Identifier	op		3280202	1					
ANR	3280209	IdentifierDecl	delta		3280202	1					
ANR	3280210	IdentifierDeclType	int		3280202	0					
ANR	3280211	Identifier	delta		3280202	1					
ANR	3280212	IdentifierDeclStatement	"unsigned int lsb , msb , msbd ;"	741:2:24030:24057	3280202	1	True				
ANR	3280213	IdentifierDecl	lsb		3280202	0					
ANR	3280214	IdentifierDeclType	unsigned int		3280202	0					
ANR	3280215	Identifier	lsb		3280202	1					
ANR	3280216	IdentifierDecl	msb		3280202	1					
ANR	3280217	IdentifierDeclType	unsigned int		3280202	0					
ANR	3280218	Identifier	msb		3280202	1					
ANR	3280219	IdentifierDecl	msbd		3280202	2					
ANR	3280220	IdentifierDeclType	unsigned int		3280202	0					
ANR	3280221	Identifier	msbd		3280202	1					
ANR	3280222	ExpressionStatement	lsb = 0	743:2:24062:24069	3280202	2	True				
ANR	3280223	AssignmentExpression	lsb = 0		3280202	0		=			
ANR	3280224	Identifier	lsb		3280202	0					
ANR	3280225	PrimaryExpression	0		3280202	1					
ANR	3280226	ForStatement	for ( ; * d != '\\0' ; d ++ )		3280202	3					
ANR	3280227	Condition	* d != '\\0'	745:9:24081:24090	3280202	0	True				
ANR	3280228	EqualityExpression	* d != '\\0'		3280202	0		!=			
ANR	3280229	UnaryOperationExpression	* d		3280202	0					
ANR	3280230	UnaryOperator	*		3280202	0					
ANR	3280231	Identifier	d		3280202	1					
ANR	3280232	PrimaryExpression	'\\0'		3280202	1					
ANR	3280233	PostIncDecOperationExpression	d ++	745:21:24093:24095	3280202	1	True				
ANR	3280234	Identifier	d		3280202	0					
ANR	3280235	IncDec	++		3280202	1					
ANR	3280236	CompoundStatement		8:4:92:92	3280202	2					
ANR	3280237	SwitchStatement	switch ( * d )		3280202	0					
ANR	3280238	Condition	* d	747:14:24118:24119	3280202	0	True				
ANR	3280239	UnaryOperationExpression	* d		3280202	0					
ANR	3280240	UnaryOperator	*		3280202	0					
ANR	3280241	Identifier	d		3280202	1					
ANR	3280242	CompoundStatement		10:1:113:113	3280202	1					
ANR	3280243	Label	"case ',' :"	749:1:24126:24134	3280202	0	True				
ANR	3280244	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%c "" , * d )"	750:3:24139:24186	3280202	1	True				
ANR	3280245	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%c "" , * d )"		3280202	0					
ANR	3280246	Callee	* info -> fprintf_func		3280202	0					
ANR	3280247	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280248	UnaryOperator	*		3280202	0					
ANR	3280249	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280250	Identifier	info		3280202	0					
ANR	3280251	Identifier	fprintf_func		3280202	1					
ANR	3280252	ArgumentList	info -> stream		3280202	1					
ANR	3280253	Argument	info -> stream		3280202	0					
ANR	3280254	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280255	Identifier	info		3280202	0					
ANR	3280256	Identifier	stream		3280202	1					
ANR	3280257	Argument	"""%c """		3280202	1					
ANR	3280258	PrimaryExpression	"""%c """		3280202	0					
ANR	3280259	Argument	* d		3280202	2					
ANR	3280260	UnaryOperationExpression	* d		3280202	0					
ANR	3280261	UnaryOperator	*		3280202	0					
ANR	3280262	Identifier	d		3280202	1					
ANR	3280263	BreakStatement	break ;	751:3:24191:24196	3280202	2	True				
ANR	3280264	Label	case '(' :	752:1:24199:24207	3280202	3	True				
ANR	3280265	Label	case ')' :	753:1:24210:24218	3280202	4	True				
ANR	3280266	Label	case '[' :	754:1:24221:24229	3280202	5	True				
ANR	3280267	Label	case ']' :	755:1:24232:24240	3280202	6	True				
ANR	3280268	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%c"" , * d )"	756:3:24245:24291	3280202	7	True				
ANR	3280269	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%c"" , * d )"		3280202	0					
ANR	3280270	Callee	* info -> fprintf_func		3280202	0					
ANR	3280271	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280272	UnaryOperator	*		3280202	0					
ANR	3280273	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280274	Identifier	info		3280202	0					
ANR	3280275	Identifier	fprintf_func		3280202	1					
ANR	3280276	ArgumentList	info -> stream		3280202	1					
ANR	3280277	Argument	info -> stream		3280202	0					
ANR	3280278	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280279	Identifier	info		3280202	0					
ANR	3280280	Identifier	stream		3280202	1					
ANR	3280281	Argument	"""%c"""		3280202	1					
ANR	3280282	PrimaryExpression	"""%c"""		3280202	0					
ANR	3280283	Argument	* d		3280202	2					
ANR	3280284	UnaryOperationExpression	* d		3280202	0					
ANR	3280285	UnaryOperator	*		3280202	0					
ANR	3280286	Identifier	d		3280202	1					
ANR	3280287	BreakStatement	break ;	757:3:24296:24301	3280202	8	True				
ANR	3280288	Label	case '+' :	759:1:24305:24313	3280202	9	True				
ANR	3280289	ExpressionStatement	d ++	761:3:24373:24376	3280202	10	True				
ANR	3280290	PostIncDecOperationExpression	d ++		3280202	0					
ANR	3280291	Identifier	d		3280202	0					
ANR	3280292	IncDec	++		3280202	1					
ANR	3280293	SwitchStatement	switch ( * d )		3280202	11					
ANR	3280294	Condition	* d	762:11:24389:24390	3280202	0	True				
ANR	3280295	UnaryOperationExpression	* d		3280202	0					
ANR	3280296	UnaryOperator	*		3280202	0					
ANR	3280297	Identifier	d		3280202	1					
ANR	3280298	CompoundStatement		25:5:388:388	3280202	1					
ANR	3280299	Label	case '\\0' :	764:5:24405:24414	3280202	0	True				
ANR	3280300	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal error, incomplete extension sequence (+)"" ) )"	766:7:24454:24557	3280202	1	True				
ANR	3280301	CallExpression	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal error, incomplete extension sequence (+)"" ) )"		3280202	0					
ANR	3280302	Callee	* info -> fprintf_func		3280202	0					
ANR	3280303	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280304	UnaryOperator	*		3280202	0					
ANR	3280305	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280306	Identifier	info		3280202	0					
ANR	3280307	Identifier	fprintf_func		3280202	1					
ANR	3280308	ArgumentList	info -> stream		3280202	1					
ANR	3280309	Argument	info -> stream		3280202	0					
ANR	3280310	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280311	Identifier	info		3280202	0					
ANR	3280312	Identifier	stream		3280202	1					
ANR	3280313	Argument	"_ ( ""# internal error, incomplete extension sequence (+)"" )"		3280202	1					
ANR	3280314	CallExpression	"_ ( ""# internal error, incomplete extension sequence (+)"" )"		3280202	0					
ANR	3280315	Callee	_		3280202	0					
ANR	3280316	Identifier	_		3280202	0					
ANR	3280317	ArgumentList	"""# internal error, incomplete extension sequence (+)"""		3280202	1					
ANR	3280318	Argument	"""# internal error, incomplete extension sequence (+)"""		3280202	0					
ANR	3280319	PrimaryExpression	"""# internal error, incomplete extension sequence (+)"""		3280202	0					
ANR	3280320	ReturnStatement	return ;	768:7:24566:24572	3280202	2	True				
ANR	3280321	Label	case 'A' :	770:5:24580:24588	3280202	3	True				
ANR	3280322	ExpressionStatement	lsb = ( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT	771:7:24597:24637	3280202	4	True				
ANR	3280323	AssignmentExpression	lsb = ( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT		3280202	0		=			
ANR	3280324	Identifier	lsb		3280202	0					
ANR	3280325	BitAndExpression	( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT		3280202	1		&			
ANR	3280326	ShiftExpression	l >> OP_SH_SHAMT		3280202	0		>>			
ANR	3280327	Identifier	l		3280202	0					
ANR	3280328	Identifier	OP_SH_SHAMT		3280202	1					
ANR	3280329	Identifier	OP_MASK_SHAMT		3280202	1					
ANR	3280330	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , lsb )"	772:7:24646:24695	3280202	5	True				
ANR	3280331	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , lsb )"		3280202	0					
ANR	3280332	Callee	* info -> fprintf_func		3280202	0					
ANR	3280333	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280334	UnaryOperator	*		3280202	0					
ANR	3280335	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280336	Identifier	info		3280202	0					
ANR	3280337	Identifier	fprintf_func		3280202	1					
ANR	3280338	ArgumentList	info -> stream		3280202	1					
ANR	3280339	Argument	info -> stream		3280202	0					
ANR	3280340	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280341	Identifier	info		3280202	0					
ANR	3280342	Identifier	stream		3280202	1					
ANR	3280343	Argument	"""0x%x"""		3280202	1					
ANR	3280344	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3280345	Argument	lsb		3280202	2					
ANR	3280346	Identifier	lsb		3280202	0					
ANR	3280347	BreakStatement	break ;	773:7:24704:24709	3280202	6	True				
ANR	3280348	Label	case 'B' :	775:5:24718:24726	3280202	7	True				
ANR	3280349	ExpressionStatement	msb = ( l >> OP_SH_INSMSB ) & OP_MASK_INSMSB	776:7:24735:24777	3280202	8	True				
ANR	3280350	AssignmentExpression	msb = ( l >> OP_SH_INSMSB ) & OP_MASK_INSMSB		3280202	0		=			
ANR	3280351	Identifier	msb		3280202	0					
ANR	3280352	BitAndExpression	( l >> OP_SH_INSMSB ) & OP_MASK_INSMSB		3280202	1		&			
ANR	3280353	ShiftExpression	l >> OP_SH_INSMSB		3280202	0		>>			
ANR	3280354	Identifier	l		3280202	0					
ANR	3280355	Identifier	OP_SH_INSMSB		3280202	1					
ANR	3280356	Identifier	OP_MASK_INSMSB		3280202	1					
ANR	3280357	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msb - lsb + 1 )"	777:7:24786:24845	3280202	9	True				
ANR	3280358	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msb - lsb + 1 )"		3280202	0					
ANR	3280359	Callee	* info -> fprintf_func		3280202	0					
ANR	3280360	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280361	UnaryOperator	*		3280202	0					
ANR	3280362	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280363	Identifier	info		3280202	0					
ANR	3280364	Identifier	fprintf_func		3280202	1					
ANR	3280365	ArgumentList	info -> stream		3280202	1					
ANR	3280366	Argument	info -> stream		3280202	0					
ANR	3280367	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280368	Identifier	info		3280202	0					
ANR	3280369	Identifier	stream		3280202	1					
ANR	3280370	Argument	"""0x%x"""		3280202	1					
ANR	3280371	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3280372	Argument	msb - lsb + 1		3280202	2					
ANR	3280373	AdditiveExpression	msb - lsb + 1		3280202	0		-			
ANR	3280374	Identifier	msb		3280202	0					
ANR	3280375	AdditiveExpression	lsb + 1		3280202	1		+			
ANR	3280376	Identifier	lsb		3280202	0					
ANR	3280377	PrimaryExpression	1		3280202	1					
ANR	3280378	BreakStatement	break ;	778:7:24854:24859	3280202	10	True				
ANR	3280379	Label	case '1' :	780:5:24867:24875	3280202	11	True				
ANR	3280380	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI1 ) & OP_MASK_UDI1 )"	781:7:24884:24972	3280202	12	True				
ANR	3280381	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI1 ) & OP_MASK_UDI1 )"		3280202	0					
ANR	3280382	Callee	* info -> fprintf_func		3280202	0					
ANR	3280383	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280384	UnaryOperator	*		3280202	0					
ANR	3280385	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280386	Identifier	info		3280202	0					
ANR	3280387	Identifier	fprintf_func		3280202	1					
ANR	3280388	ArgumentList	info -> stream		3280202	1					
ANR	3280389	Argument	info -> stream		3280202	0					
ANR	3280390	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280391	Identifier	info		3280202	0					
ANR	3280392	Identifier	stream		3280202	1					
ANR	3280393	Argument	"""0x%lx"""		3280202	1					
ANR	3280394	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280395	Argument	( l >> OP_SH_UDI1 ) & OP_MASK_UDI1		3280202	2					
ANR	3280396	BitAndExpression	( l >> OP_SH_UDI1 ) & OP_MASK_UDI1		3280202	0		&			
ANR	3280397	ShiftExpression	l >> OP_SH_UDI1		3280202	0		>>			
ANR	3280398	Identifier	l		3280202	0					
ANR	3280399	Identifier	OP_SH_UDI1		3280202	1					
ANR	3280400	Identifier	OP_MASK_UDI1		3280202	1					
ANR	3280401	BreakStatement	break ;	783:7:24981:24986	3280202	13	True				
ANR	3280402	Label	case '2' :	785:5:25001:25009	3280202	14	True				
ANR	3280403	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI2 ) & OP_MASK_UDI2 )"	786:7:25018:25106	3280202	15	True				
ANR	3280404	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI2 ) & OP_MASK_UDI2 )"		3280202	0					
ANR	3280405	Callee	* info -> fprintf_func		3280202	0					
ANR	3280406	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280407	UnaryOperator	*		3280202	0					
ANR	3280408	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280409	Identifier	info		3280202	0					
ANR	3280410	Identifier	fprintf_func		3280202	1					
ANR	3280411	ArgumentList	info -> stream		3280202	1					
ANR	3280412	Argument	info -> stream		3280202	0					
ANR	3280413	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280414	Identifier	info		3280202	0					
ANR	3280415	Identifier	stream		3280202	1					
ANR	3280416	Argument	"""0x%lx"""		3280202	1					
ANR	3280417	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280418	Argument	( l >> OP_SH_UDI2 ) & OP_MASK_UDI2		3280202	2					
ANR	3280419	BitAndExpression	( l >> OP_SH_UDI2 ) & OP_MASK_UDI2		3280202	0		&			
ANR	3280420	ShiftExpression	l >> OP_SH_UDI2		3280202	0		>>			
ANR	3280421	Identifier	l		3280202	0					
ANR	3280422	Identifier	OP_SH_UDI2		3280202	1					
ANR	3280423	Identifier	OP_MASK_UDI2		3280202	1					
ANR	3280424	BreakStatement	break ;	788:7:25115:25120	3280202	16	True				
ANR	3280425	Label	case '3' :	790:5:25135:25143	3280202	17	True				
ANR	3280426	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI3 ) & OP_MASK_UDI3 )"	791:7:25152:25240	3280202	18	True				
ANR	3280427	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI3 ) & OP_MASK_UDI3 )"		3280202	0					
ANR	3280428	Callee	* info -> fprintf_func		3280202	0					
ANR	3280429	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280430	UnaryOperator	*		3280202	0					
ANR	3280431	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280432	Identifier	info		3280202	0					
ANR	3280433	Identifier	fprintf_func		3280202	1					
ANR	3280434	ArgumentList	info -> stream		3280202	1					
ANR	3280435	Argument	info -> stream		3280202	0					
ANR	3280436	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280437	Identifier	info		3280202	0					
ANR	3280438	Identifier	stream		3280202	1					
ANR	3280439	Argument	"""0x%lx"""		3280202	1					
ANR	3280440	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280441	Argument	( l >> OP_SH_UDI3 ) & OP_MASK_UDI3		3280202	2					
ANR	3280442	BitAndExpression	( l >> OP_SH_UDI3 ) & OP_MASK_UDI3		3280202	0		&			
ANR	3280443	ShiftExpression	l >> OP_SH_UDI3		3280202	0		>>			
ANR	3280444	Identifier	l		3280202	0					
ANR	3280445	Identifier	OP_SH_UDI3		3280202	1					
ANR	3280446	Identifier	OP_MASK_UDI3		3280202	1					
ANR	3280447	BreakStatement	break ;	793:7:25249:25254	3280202	19	True				
ANR	3280448	Label	case '4' :	795:5:25268:25276	3280202	20	True				
ANR	3280449	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI4 ) & OP_MASK_UDI4 )"	796:7:25285:25373	3280202	21	True				
ANR	3280450	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_UDI4 ) & OP_MASK_UDI4 )"		3280202	0					
ANR	3280451	Callee	* info -> fprintf_func		3280202	0					
ANR	3280452	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280453	UnaryOperator	*		3280202	0					
ANR	3280454	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280455	Identifier	info		3280202	0					
ANR	3280456	Identifier	fprintf_func		3280202	1					
ANR	3280457	ArgumentList	info -> stream		3280202	1					
ANR	3280458	Argument	info -> stream		3280202	0					
ANR	3280459	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280460	Identifier	info		3280202	0					
ANR	3280461	Identifier	stream		3280202	1					
ANR	3280462	Argument	"""0x%lx"""		3280202	1					
ANR	3280463	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280464	Argument	( l >> OP_SH_UDI4 ) & OP_MASK_UDI4		3280202	2					
ANR	3280465	BitAndExpression	( l >> OP_SH_UDI4 ) & OP_MASK_UDI4		3280202	0		&			
ANR	3280466	ShiftExpression	l >> OP_SH_UDI4		3280202	0		>>			
ANR	3280467	Identifier	l		3280202	0					
ANR	3280468	Identifier	OP_SH_UDI4		3280202	1					
ANR	3280469	Identifier	OP_MASK_UDI4		3280202	1					
ANR	3280470	BreakStatement	break ;	798:7:25382:25387	3280202	22	True				
ANR	3280471	Label	case 'C' :	800:5:25402:25410	3280202	23	True				
ANR	3280472	Label	case 'H' :	801:5:25417:25425	3280202	24	True				
ANR	3280473	ExpressionStatement	msbd = ( l >> OP_SH_EXTMSBD ) & OP_MASK_EXTMSBD	802:7:25434:25479	3280202	25	True				
ANR	3280474	AssignmentExpression	msbd = ( l >> OP_SH_EXTMSBD ) & OP_MASK_EXTMSBD		3280202	0		=			
ANR	3280475	Identifier	msbd		3280202	0					
ANR	3280476	BitAndExpression	( l >> OP_SH_EXTMSBD ) & OP_MASK_EXTMSBD		3280202	1		&			
ANR	3280477	ShiftExpression	l >> OP_SH_EXTMSBD		3280202	0		>>			
ANR	3280478	Identifier	l		3280202	0					
ANR	3280479	Identifier	OP_SH_EXTMSBD		3280202	1					
ANR	3280480	Identifier	OP_MASK_EXTMSBD		3280202	1					
ANR	3280481	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msbd + 1 )"	803:7:25488:25542	3280202	26	True				
ANR	3280482	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msbd + 1 )"		3280202	0					
ANR	3280483	Callee	* info -> fprintf_func		3280202	0					
ANR	3280484	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280485	UnaryOperator	*		3280202	0					
ANR	3280486	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280487	Identifier	info		3280202	0					
ANR	3280488	Identifier	fprintf_func		3280202	1					
ANR	3280489	ArgumentList	info -> stream		3280202	1					
ANR	3280490	Argument	info -> stream		3280202	0					
ANR	3280491	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280492	Identifier	info		3280202	0					
ANR	3280493	Identifier	stream		3280202	1					
ANR	3280494	Argument	"""0x%x"""		3280202	1					
ANR	3280495	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3280496	Argument	msbd + 1		3280202	2					
ANR	3280497	AdditiveExpression	msbd + 1		3280202	0		+			
ANR	3280498	Identifier	msbd		3280202	0					
ANR	3280499	PrimaryExpression	1		3280202	1					
ANR	3280500	BreakStatement	break ;	804:7:25551:25556	3280202	27	True				
ANR	3280501	Label	case 'D' :	806:5:25564:25572	3280202	28	True				
ANR	3280502	CompoundStatement		71:2:1611:1635	3280202	29					
ANR	3280503	IdentifierDeclStatement	const struct mips_cp0sel_name * n ;	808:2:25585:25617	3280202	0	True				
ANR	3280504	IdentifierDecl	* n		3280202	0					
ANR	3280505	IdentifierDeclType	const struct mips_cp0sel_name *		3280202	0					
ANR	3280506	Identifier	n		3280202	1					
ANR	3280507	IdentifierDeclStatement	"unsigned int cp0reg , sel ;"	809:2:25621:25645	3280202	1	True				
ANR	3280508	IdentifierDecl	cp0reg		3280202	0					
ANR	3280509	IdentifierDeclType	unsigned int		3280202	0					
ANR	3280510	Identifier	cp0reg		3280202	1					
ANR	3280511	IdentifierDecl	sel		3280202	1					
ANR	3280512	IdentifierDeclType	unsigned int		3280202	0					
ANR	3280513	Identifier	sel		3280202	1					
ANR	3280514	ExpressionStatement	cp0reg = ( l >> OP_SH_RD ) & OP_MASK_RD	811:2:25650:25687	3280202	2	True				
ANR	3280515	AssignmentExpression	cp0reg = ( l >> OP_SH_RD ) & OP_MASK_RD		3280202	0		=			
ANR	3280516	Identifier	cp0reg		3280202	0					
ANR	3280517	BitAndExpression	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	1		&			
ANR	3280518	ShiftExpression	l >> OP_SH_RD		3280202	0		>>			
ANR	3280519	Identifier	l		3280202	0					
ANR	3280520	Identifier	OP_SH_RD		3280202	1					
ANR	3280521	Identifier	OP_MASK_RD		3280202	1					
ANR	3280522	ExpressionStatement	sel = ( l >> OP_SH_SEL ) & OP_MASK_SEL	812:2:25691:25727	3280202	3	True				
ANR	3280523	AssignmentExpression	sel = ( l >> OP_SH_SEL ) & OP_MASK_SEL		3280202	0		=			
ANR	3280524	Identifier	sel		3280202	0					
ANR	3280525	BitAndExpression	( l >> OP_SH_SEL ) & OP_MASK_SEL		3280202	1		&			
ANR	3280526	ShiftExpression	l >> OP_SH_SEL		3280202	0		>>			
ANR	3280527	Identifier	l		3280202	0					
ANR	3280528	Identifier	OP_SH_SEL		3280202	1					
ANR	3280529	Identifier	OP_MASK_SEL		3280202	1					
ANR	3280530	ExpressionStatement	"n = lookup_mips_cp0sel_name ( mips_cp0sel_names , mips_cp0sel_names_len , cp0reg , sel )"	819:2:25995:26086	3280202	4	True				
ANR	3280531	AssignmentExpression	"n = lookup_mips_cp0sel_name ( mips_cp0sel_names , mips_cp0sel_names_len , cp0reg , sel )"		3280202	0		=			
ANR	3280532	Identifier	n		3280202	0					
ANR	3280533	CallExpression	"lookup_mips_cp0sel_name ( mips_cp0sel_names , mips_cp0sel_names_len , cp0reg , sel )"		3280202	1					
ANR	3280534	Callee	lookup_mips_cp0sel_name		3280202	0					
ANR	3280535	Identifier	lookup_mips_cp0sel_name		3280202	0					
ANR	3280536	ArgumentList	mips_cp0sel_names		3280202	1					
ANR	3280537	Argument	mips_cp0sel_names		3280202	0					
ANR	3280538	Identifier	mips_cp0sel_names		3280202	0					
ANR	3280539	Argument	mips_cp0sel_names_len		3280202	1					
ANR	3280540	Identifier	mips_cp0sel_names_len		3280202	0					
ANR	3280541	Argument	cp0reg		3280202	2					
ANR	3280542	Identifier	cp0reg		3280202	0					
ANR	3280543	Argument	sel		3280202	3					
ANR	3280544	Identifier	sel		3280202	0					
ANR	3280545	IfStatement	if ( n != NULL )		3280202	5					
ANR	3280546	Condition	n != NULL	821:6:26094:26102	3280202	0	True				
ANR	3280547	EqualityExpression	n != NULL		3280202	0		!=			
ANR	3280548	Identifier	n		3280202	0					
ANR	3280549	Identifier	NULL		3280202	1					
ANR	3280550	CompoundStatement		83:17:2095:2095	3280202	1					
ANR	3280551	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , n -> name )"	822:3:26110:26161	3280202	0	True				
ANR	3280552	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , n -> name )"		3280202	0					
ANR	3280553	Callee	* info -> fprintf_func		3280202	0					
ANR	3280554	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280555	UnaryOperator	*		3280202	0					
ANR	3280556	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280557	Identifier	info		3280202	0					
ANR	3280558	Identifier	fprintf_func		3280202	1					
ANR	3280559	ArgumentList	info -> stream		3280202	1					
ANR	3280560	Argument	info -> stream		3280202	0					
ANR	3280561	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280562	Identifier	info		3280202	0					
ANR	3280563	Identifier	stream		3280202	1					
ANR	3280564	Argument	"""%s"""		3280202	1					
ANR	3280565	PrimaryExpression	"""%s"""		3280202	0					
ANR	3280566	Argument	n -> name		3280202	2					
ANR	3280567	PtrMemberAccess	n -> name		3280202	0					
ANR	3280568	Identifier	n		3280202	0					
ANR	3280569	Identifier	name		3280202	1					
ANR	3280570	ElseStatement	else		3280202	0					
ANR	3280571	CompoundStatement		85:9:2162:2162	3280202	0					
ANR	3280572	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$%d,%d"" , cp0reg , sel )"	824:3:26177:26236	3280202	0	True				
ANR	3280573	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$%d,%d"" , cp0reg , sel )"		3280202	0					
ANR	3280574	Callee	* info -> fprintf_func		3280202	0					
ANR	3280575	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280576	UnaryOperator	*		3280202	0					
ANR	3280577	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280578	Identifier	info		3280202	0					
ANR	3280579	Identifier	fprintf_func		3280202	1					
ANR	3280580	ArgumentList	info -> stream		3280202	1					
ANR	3280581	Argument	info -> stream		3280202	0					
ANR	3280582	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280583	Identifier	info		3280202	0					
ANR	3280584	Identifier	stream		3280202	1					
ANR	3280585	Argument	"""$%d,%d"""		3280202	1					
ANR	3280586	PrimaryExpression	"""$%d,%d"""		3280202	0					
ANR	3280587	Argument	cp0reg		3280202	2					
ANR	3280588	Identifier	cp0reg		3280202	0					
ANR	3280589	Argument	sel		3280202	3					
ANR	3280590	Identifier	sel		3280202	0					
ANR	3280591	BreakStatement	break ;	826:2:26244:26249	3280202	6	True				
ANR	3280592	Label	case 'E' :	829:5:26266:26274	3280202	30	True				
ANR	3280593	ExpressionStatement	lsb = ( ( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT ) + 32	830:7:26283:26330	3280202	31	True				
ANR	3280594	AssignmentExpression	lsb = ( ( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT ) + 32		3280202	0		=			
ANR	3280595	Identifier	lsb		3280202	0					
ANR	3280596	AdditiveExpression	( ( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT ) + 32		3280202	1		+			
ANR	3280597	BitAndExpression	( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT		3280202	0		&			
ANR	3280598	ShiftExpression	l >> OP_SH_SHAMT		3280202	0		>>			
ANR	3280599	Identifier	l		3280202	0					
ANR	3280600	Identifier	OP_SH_SHAMT		3280202	1					
ANR	3280601	Identifier	OP_MASK_SHAMT		3280202	1					
ANR	3280602	PrimaryExpression	32		3280202	1					
ANR	3280603	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , lsb )"	831:7:26339:26388	3280202	32	True				
ANR	3280604	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , lsb )"		3280202	0					
ANR	3280605	Callee	* info -> fprintf_func		3280202	0					
ANR	3280606	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280607	UnaryOperator	*		3280202	0					
ANR	3280608	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280609	Identifier	info		3280202	0					
ANR	3280610	Identifier	fprintf_func		3280202	1					
ANR	3280611	ArgumentList	info -> stream		3280202	1					
ANR	3280612	Argument	info -> stream		3280202	0					
ANR	3280613	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280614	Identifier	info		3280202	0					
ANR	3280615	Identifier	stream		3280202	1					
ANR	3280616	Argument	"""0x%x"""		3280202	1					
ANR	3280617	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3280618	Argument	lsb		3280202	2					
ANR	3280619	Identifier	lsb		3280202	0					
ANR	3280620	BreakStatement	break ;	832:7:26397:26402	3280202	33	True				
ANR	3280621	Label	case 'F' :	834:5:26411:26419	3280202	34	True				
ANR	3280622	ExpressionStatement	msb = ( ( l >> OP_SH_INSMSB ) & OP_MASK_INSMSB ) + 32	835:7:26428:26477	3280202	35	True				
ANR	3280623	AssignmentExpression	msb = ( ( l >> OP_SH_INSMSB ) & OP_MASK_INSMSB ) + 32		3280202	0		=			
ANR	3280624	Identifier	msb		3280202	0					
ANR	3280625	AdditiveExpression	( ( l >> OP_SH_INSMSB ) & OP_MASK_INSMSB ) + 32		3280202	1		+			
ANR	3280626	BitAndExpression	( l >> OP_SH_INSMSB ) & OP_MASK_INSMSB		3280202	0		&			
ANR	3280627	ShiftExpression	l >> OP_SH_INSMSB		3280202	0		>>			
ANR	3280628	Identifier	l		3280202	0					
ANR	3280629	Identifier	OP_SH_INSMSB		3280202	1					
ANR	3280630	Identifier	OP_MASK_INSMSB		3280202	1					
ANR	3280631	PrimaryExpression	32		3280202	1					
ANR	3280632	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msb - lsb + 1 )"	836:7:26486:26545	3280202	36	True				
ANR	3280633	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msb - lsb + 1 )"		3280202	0					
ANR	3280634	Callee	* info -> fprintf_func		3280202	0					
ANR	3280635	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280636	UnaryOperator	*		3280202	0					
ANR	3280637	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280638	Identifier	info		3280202	0					
ANR	3280639	Identifier	fprintf_func		3280202	1					
ANR	3280640	ArgumentList	info -> stream		3280202	1					
ANR	3280641	Argument	info -> stream		3280202	0					
ANR	3280642	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280643	Identifier	info		3280202	0					
ANR	3280644	Identifier	stream		3280202	1					
ANR	3280645	Argument	"""0x%x"""		3280202	1					
ANR	3280646	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3280647	Argument	msb - lsb + 1		3280202	2					
ANR	3280648	AdditiveExpression	msb - lsb + 1		3280202	0		-			
ANR	3280649	Identifier	msb		3280202	0					
ANR	3280650	AdditiveExpression	lsb + 1		3280202	1		+			
ANR	3280651	Identifier	lsb		3280202	0					
ANR	3280652	PrimaryExpression	1		3280202	1					
ANR	3280653	BreakStatement	break ;	837:7:26554:26559	3280202	37	True				
ANR	3280654	Label	case 'G' :	839:5:26567:26575	3280202	38	True				
ANR	3280655	ExpressionStatement	msbd = ( ( l >> OP_SH_EXTMSBD ) & OP_MASK_EXTMSBD ) + 32	840:7:26584:26636	3280202	39	True				
ANR	3280656	AssignmentExpression	msbd = ( ( l >> OP_SH_EXTMSBD ) & OP_MASK_EXTMSBD ) + 32		3280202	0		=			
ANR	3280657	Identifier	msbd		3280202	0					
ANR	3280658	AdditiveExpression	( ( l >> OP_SH_EXTMSBD ) & OP_MASK_EXTMSBD ) + 32		3280202	1		+			
ANR	3280659	BitAndExpression	( l >> OP_SH_EXTMSBD ) & OP_MASK_EXTMSBD		3280202	0		&			
ANR	3280660	ShiftExpression	l >> OP_SH_EXTMSBD		3280202	0		>>			
ANR	3280661	Identifier	l		3280202	0					
ANR	3280662	Identifier	OP_SH_EXTMSBD		3280202	1					
ANR	3280663	Identifier	OP_MASK_EXTMSBD		3280202	1					
ANR	3280664	PrimaryExpression	32		3280202	1					
ANR	3280665	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msbd + 1 )"	841:7:26645:26699	3280202	40	True				
ANR	3280666	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , msbd + 1 )"		3280202	0					
ANR	3280667	Callee	* info -> fprintf_func		3280202	0					
ANR	3280668	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280669	UnaryOperator	*		3280202	0					
ANR	3280670	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280671	Identifier	info		3280202	0					
ANR	3280672	Identifier	fprintf_func		3280202	1					
ANR	3280673	ArgumentList	info -> stream		3280202	1					
ANR	3280674	Argument	info -> stream		3280202	0					
ANR	3280675	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280676	Identifier	info		3280202	0					
ANR	3280677	Identifier	stream		3280202	1					
ANR	3280678	Argument	"""0x%x"""		3280202	1					
ANR	3280679	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3280680	Argument	msbd + 1		3280202	2					
ANR	3280681	AdditiveExpression	msbd + 1		3280202	0		+			
ANR	3280682	Identifier	msbd		3280202	0					
ANR	3280683	PrimaryExpression	1		3280202	1					
ANR	3280684	BreakStatement	break ;	842:7:26708:26713	3280202	41	True				
ANR	3280685	Label	case 't' :	844:5:26721:26729	3280202	42	True				
ANR	3280686	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_cp0_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"	845:7:26767:26875	3280202	43	True				
ANR	3280687	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_cp0_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"		3280202	0					
ANR	3280688	Callee	* info -> fprintf_func		3280202	0					
ANR	3280689	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280690	UnaryOperator	*		3280202	0					
ANR	3280691	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280692	Identifier	info		3280202	0					
ANR	3280693	Identifier	fprintf_func		3280202	1					
ANR	3280694	ArgumentList	info -> stream		3280202	1					
ANR	3280695	Argument	info -> stream		3280202	0					
ANR	3280696	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280697	Identifier	info		3280202	0					
ANR	3280698	Identifier	stream		3280202	1					
ANR	3280699	Argument	"""%s"""		3280202	1					
ANR	3280700	PrimaryExpression	"""%s"""		3280202	0					
ANR	3280701	Argument	mips_cp0_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	2					
ANR	3280702	ArrayIndexing	mips_cp0_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	0					
ANR	3280703	Identifier	mips_cp0_names		3280202	0					
ANR	3280704	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	1		&			
ANR	3280705	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3280706	Identifier	l		3280202	0					
ANR	3280707	Identifier	OP_SH_RT		3280202	1					
ANR	3280708	Identifier	OP_MASK_RT		3280202	1					
ANR	3280709	BreakStatement	break ;	848:7:26884:26889	3280202	44	True				
ANR	3280710	Label	case 'T' :	850:5:26897:26905	3280202	45	True				
ANR	3280711	CompoundStatement		115:2:2973:2997	3280202	46					
ANR	3280712	IdentifierDeclStatement	const struct mips_cp0sel_name * n ;	852:2:26947:26979	3280202	0	True				
ANR	3280713	IdentifierDecl	* n		3280202	0					
ANR	3280714	IdentifierDeclType	const struct mips_cp0sel_name *		3280202	0					
ANR	3280715	Identifier	n		3280202	1					
ANR	3280716	IdentifierDeclStatement	"unsigned int cp0reg , sel ;"	853:2:26983:27007	3280202	1	True				
ANR	3280717	IdentifierDecl	cp0reg		3280202	0					
ANR	3280718	IdentifierDeclType	unsigned int		3280202	0					
ANR	3280719	Identifier	cp0reg		3280202	1					
ANR	3280720	IdentifierDecl	sel		3280202	1					
ANR	3280721	IdentifierDeclType	unsigned int		3280202	0					
ANR	3280722	Identifier	sel		3280202	1					
ANR	3280723	ExpressionStatement	cp0reg = ( l >> OP_SH_RT ) & OP_MASK_RT	855:2:27012:27049	3280202	2	True				
ANR	3280724	AssignmentExpression	cp0reg = ( l >> OP_SH_RT ) & OP_MASK_RT		3280202	0		=			
ANR	3280725	Identifier	cp0reg		3280202	0					
ANR	3280726	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	1		&			
ANR	3280727	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3280728	Identifier	l		3280202	0					
ANR	3280729	Identifier	OP_SH_RT		3280202	1					
ANR	3280730	Identifier	OP_MASK_RT		3280202	1					
ANR	3280731	ExpressionStatement	sel = ( l >> OP_SH_SEL ) & OP_MASK_SEL	856:2:27053:27089	3280202	3	True				
ANR	3280732	AssignmentExpression	sel = ( l >> OP_SH_SEL ) & OP_MASK_SEL		3280202	0		=			
ANR	3280733	Identifier	sel		3280202	0					
ANR	3280734	BitAndExpression	( l >> OP_SH_SEL ) & OP_MASK_SEL		3280202	1		&			
ANR	3280735	ShiftExpression	l >> OP_SH_SEL		3280202	0		>>			
ANR	3280736	Identifier	l		3280202	0					
ANR	3280737	Identifier	OP_SH_SEL		3280202	1					
ANR	3280738	Identifier	OP_MASK_SEL		3280202	1					
ANR	3280739	ExpressionStatement	"n = lookup_mips_cp0sel_name ( mips_cp0sel_names , mips_cp0sel_names_len , cp0reg , sel )"	863:2:27349:27440	3280202	4	True				
ANR	3280740	AssignmentExpression	"n = lookup_mips_cp0sel_name ( mips_cp0sel_names , mips_cp0sel_names_len , cp0reg , sel )"		3280202	0		=			
ANR	3280741	Identifier	n		3280202	0					
ANR	3280742	CallExpression	"lookup_mips_cp0sel_name ( mips_cp0sel_names , mips_cp0sel_names_len , cp0reg , sel )"		3280202	1					
ANR	3280743	Callee	lookup_mips_cp0sel_name		3280202	0					
ANR	3280744	Identifier	lookup_mips_cp0sel_name		3280202	0					
ANR	3280745	ArgumentList	mips_cp0sel_names		3280202	1					
ANR	3280746	Argument	mips_cp0sel_names		3280202	0					
ANR	3280747	Identifier	mips_cp0sel_names		3280202	0					
ANR	3280748	Argument	mips_cp0sel_names_len		3280202	1					
ANR	3280749	Identifier	mips_cp0sel_names_len		3280202	0					
ANR	3280750	Argument	cp0reg		3280202	2					
ANR	3280751	Identifier	cp0reg		3280202	0					
ANR	3280752	Argument	sel		3280202	3					
ANR	3280753	Identifier	sel		3280202	0					
ANR	3280754	IfStatement	if ( n != NULL )		3280202	5					
ANR	3280755	Condition	n != NULL	865:6:27448:27456	3280202	0	True				
ANR	3280756	EqualityExpression	n != NULL		3280202	0		!=			
ANR	3280757	Identifier	n		3280202	0					
ANR	3280758	Identifier	NULL		3280202	1					
ANR	3280759	CompoundStatement		127:17:3449:3449	3280202	1					
ANR	3280760	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , n -> name )"	866:3:27464:27515	3280202	0	True				
ANR	3280761	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , n -> name )"		3280202	0					
ANR	3280762	Callee	* info -> fprintf_func		3280202	0					
ANR	3280763	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280764	UnaryOperator	*		3280202	0					
ANR	3280765	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280766	Identifier	info		3280202	0					
ANR	3280767	Identifier	fprintf_func		3280202	1					
ANR	3280768	ArgumentList	info -> stream		3280202	1					
ANR	3280769	Argument	info -> stream		3280202	0					
ANR	3280770	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280771	Identifier	info		3280202	0					
ANR	3280772	Identifier	stream		3280202	1					
ANR	3280773	Argument	"""%s"""		3280202	1					
ANR	3280774	PrimaryExpression	"""%s"""		3280202	0					
ANR	3280775	Argument	n -> name		3280202	2					
ANR	3280776	PtrMemberAccess	n -> name		3280202	0					
ANR	3280777	Identifier	n		3280202	0					
ANR	3280778	Identifier	name		3280202	1					
ANR	3280779	ElseStatement	else		3280202	0					
ANR	3280780	CompoundStatement		129:9:3516:3516	3280202	0					
ANR	3280781	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$%d,%d"" , cp0reg , sel )"	868:3:27531:27590	3280202	0	True				
ANR	3280782	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$%d,%d"" , cp0reg , sel )"		3280202	0					
ANR	3280783	Callee	* info -> fprintf_func		3280202	0					
ANR	3280784	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280785	UnaryOperator	*		3280202	0					
ANR	3280786	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280787	Identifier	info		3280202	0					
ANR	3280788	Identifier	fprintf_func		3280202	1					
ANR	3280789	ArgumentList	info -> stream		3280202	1					
ANR	3280790	Argument	info -> stream		3280202	0					
ANR	3280791	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280792	Identifier	info		3280202	0					
ANR	3280793	Identifier	stream		3280202	1					
ANR	3280794	Argument	"""$%d,%d"""		3280202	1					
ANR	3280795	PrimaryExpression	"""$%d,%d"""		3280202	0					
ANR	3280796	Argument	cp0reg		3280202	2					
ANR	3280797	Identifier	cp0reg		3280202	0					
ANR	3280798	Argument	sel		3280202	3					
ANR	3280799	Identifier	sel		3280202	0					
ANR	3280800	BreakStatement	break ;	870:2:27598:27603	3280202	6	True				
ANR	3280801	Label	default :	873:5:27620:27627	3280202	47	True				
ANR	3280802	Identifier	default		3280202	0					
ANR	3280803	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal error, undefined extension sequence (+%c)"" ) , * d )"	875:7:27667:27784	3280202	48	True				
ANR	3280804	CallExpression	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal error, undefined extension sequence (+%c)"" ) , * d )"		3280202	0					
ANR	3280805	Callee	* info -> fprintf_func		3280202	0					
ANR	3280806	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280807	UnaryOperator	*		3280202	0					
ANR	3280808	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280809	Identifier	info		3280202	0					
ANR	3280810	Identifier	fprintf_func		3280202	1					
ANR	3280811	ArgumentList	info -> stream		3280202	1					
ANR	3280812	Argument	info -> stream		3280202	0					
ANR	3280813	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280814	Identifier	info		3280202	0					
ANR	3280815	Identifier	stream		3280202	1					
ANR	3280816	Argument	"_ ( ""# internal error, undefined extension sequence (+%c)"" )"		3280202	1					
ANR	3280817	CallExpression	"_ ( ""# internal error, undefined extension sequence (+%c)"" )"		3280202	0					
ANR	3280818	Callee	_		3280202	0					
ANR	3280819	Identifier	_		3280202	0					
ANR	3280820	ArgumentList	"""# internal error, undefined extension sequence (+%c)"""		3280202	1					
ANR	3280821	Argument	"""# internal error, undefined extension sequence (+%c)"""		3280202	0					
ANR	3280822	PrimaryExpression	"""# internal error, undefined extension sequence (+%c)"""		3280202	0					
ANR	3280823	Argument	* d		3280202	2					
ANR	3280824	UnaryOperationExpression	* d		3280202	0					
ANR	3280825	UnaryOperator	*		3280202	0					
ANR	3280826	Identifier	d		3280202	1					
ANR	3280827	ReturnStatement	return ;	878:7:27793:27799	3280202	49	True				
ANR	3280828	BreakStatement	break ;	880:3:27811:27816	3280202	12	True				
ANR	3280829	Label	case '2' :	882:1:27820:27828	3280202	13	True				
ANR	3280830	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_BP ) & OP_MASK_BP )"	883:3:27833:27913	3280202	14	True				
ANR	3280831	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_BP ) & OP_MASK_BP )"		3280202	0					
ANR	3280832	Callee	* info -> fprintf_func		3280202	0					
ANR	3280833	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280834	UnaryOperator	*		3280202	0					
ANR	3280835	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280836	Identifier	info		3280202	0					
ANR	3280837	Identifier	fprintf_func		3280202	1					
ANR	3280838	ArgumentList	info -> stream		3280202	1					
ANR	3280839	Argument	info -> stream		3280202	0					
ANR	3280840	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280841	Identifier	info		3280202	0					
ANR	3280842	Identifier	stream		3280202	1					
ANR	3280843	Argument	"""0x%lx"""		3280202	1					
ANR	3280844	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280845	Argument	( l >> OP_SH_BP ) & OP_MASK_BP		3280202	2					
ANR	3280846	BitAndExpression	( l >> OP_SH_BP ) & OP_MASK_BP		3280202	0		&			
ANR	3280847	ShiftExpression	l >> OP_SH_BP		3280202	0		>>			
ANR	3280848	Identifier	l		3280202	0					
ANR	3280849	Identifier	OP_SH_BP		3280202	1					
ANR	3280850	Identifier	OP_MASK_BP		3280202	1					
ANR	3280851	BreakStatement	break ;	885:3:27918:27923	3280202	15	True				
ANR	3280852	Label	case '3' :	887:1:27927:27935	3280202	16	True				
ANR	3280853	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_SA3 ) & OP_MASK_SA3 )"	888:3:27940:28022	3280202	17	True				
ANR	3280854	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_SA3 ) & OP_MASK_SA3 )"		3280202	0					
ANR	3280855	Callee	* info -> fprintf_func		3280202	0					
ANR	3280856	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280857	UnaryOperator	*		3280202	0					
ANR	3280858	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280859	Identifier	info		3280202	0					
ANR	3280860	Identifier	fprintf_func		3280202	1					
ANR	3280861	ArgumentList	info -> stream		3280202	1					
ANR	3280862	Argument	info -> stream		3280202	0					
ANR	3280863	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280864	Identifier	info		3280202	0					
ANR	3280865	Identifier	stream		3280202	1					
ANR	3280866	Argument	"""0x%lx"""		3280202	1					
ANR	3280867	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280868	Argument	( l >> OP_SH_SA3 ) & OP_MASK_SA3		3280202	2					
ANR	3280869	BitAndExpression	( l >> OP_SH_SA3 ) & OP_MASK_SA3		3280202	0		&			
ANR	3280870	ShiftExpression	l >> OP_SH_SA3		3280202	0		>>			
ANR	3280871	Identifier	l		3280202	0					
ANR	3280872	Identifier	OP_SH_SA3		3280202	1					
ANR	3280873	Identifier	OP_MASK_SA3		3280202	1					
ANR	3280874	BreakStatement	break ;	890:3:28027:28032	3280202	18	True				
ANR	3280875	Label	case '4' :	892:1:28036:28044	3280202	19	True				
ANR	3280876	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_SA4 ) & OP_MASK_SA4 )"	893:3:28049:28131	3280202	20	True				
ANR	3280877	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_SA4 ) & OP_MASK_SA4 )"		3280202	0					
ANR	3280878	Callee	* info -> fprintf_func		3280202	0					
ANR	3280879	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280880	UnaryOperator	*		3280202	0					
ANR	3280881	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280882	Identifier	info		3280202	0					
ANR	3280883	Identifier	fprintf_func		3280202	1					
ANR	3280884	ArgumentList	info -> stream		3280202	1					
ANR	3280885	Argument	info -> stream		3280202	0					
ANR	3280886	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280887	Identifier	info		3280202	0					
ANR	3280888	Identifier	stream		3280202	1					
ANR	3280889	Argument	"""0x%lx"""		3280202	1					
ANR	3280890	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280891	Argument	( l >> OP_SH_SA4 ) & OP_MASK_SA4		3280202	2					
ANR	3280892	BitAndExpression	( l >> OP_SH_SA4 ) & OP_MASK_SA4		3280202	0		&			
ANR	3280893	ShiftExpression	l >> OP_SH_SA4		3280202	0		>>			
ANR	3280894	Identifier	l		3280202	0					
ANR	3280895	Identifier	OP_SH_SA4		3280202	1					
ANR	3280896	Identifier	OP_MASK_SA4		3280202	1					
ANR	3280897	BreakStatement	break ;	895:3:28136:28141	3280202	21	True				
ANR	3280898	Label	case '5' :	897:1:28145:28153	3280202	22	True				
ANR	3280899	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_IMM8 ) & OP_MASK_IMM8 )"	898:3:28158:28242	3280202	23	True				
ANR	3280900	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_IMM8 ) & OP_MASK_IMM8 )"		3280202	0					
ANR	3280901	Callee	* info -> fprintf_func		3280202	0					
ANR	3280902	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280903	UnaryOperator	*		3280202	0					
ANR	3280904	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280905	Identifier	info		3280202	0					
ANR	3280906	Identifier	fprintf_func		3280202	1					
ANR	3280907	ArgumentList	info -> stream		3280202	1					
ANR	3280908	Argument	info -> stream		3280202	0					
ANR	3280909	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280910	Identifier	info		3280202	0					
ANR	3280911	Identifier	stream		3280202	1					
ANR	3280912	Argument	"""0x%lx"""		3280202	1					
ANR	3280913	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280914	Argument	( l >> OP_SH_IMM8 ) & OP_MASK_IMM8		3280202	2					
ANR	3280915	BitAndExpression	( l >> OP_SH_IMM8 ) & OP_MASK_IMM8		3280202	0		&			
ANR	3280916	ShiftExpression	l >> OP_SH_IMM8		3280202	0		>>			
ANR	3280917	Identifier	l		3280202	0					
ANR	3280918	Identifier	OP_SH_IMM8		3280202	1					
ANR	3280919	Identifier	OP_MASK_IMM8		3280202	1					
ANR	3280920	BreakStatement	break ;	900:3:28247:28252	3280202	24	True				
ANR	3280921	Label	case '6' :	902:1:28256:28264	3280202	25	True				
ANR	3280922	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_RS ) & OP_MASK_RS )"	903:3:28269:28349	3280202	26	True				
ANR	3280923	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_RS ) & OP_MASK_RS )"		3280202	0					
ANR	3280924	Callee	* info -> fprintf_func		3280202	0					
ANR	3280925	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280926	UnaryOperator	*		3280202	0					
ANR	3280927	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280928	Identifier	info		3280202	0					
ANR	3280929	Identifier	fprintf_func		3280202	1					
ANR	3280930	ArgumentList	info -> stream		3280202	1					
ANR	3280931	Argument	info -> stream		3280202	0					
ANR	3280932	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280933	Identifier	info		3280202	0					
ANR	3280934	Identifier	stream		3280202	1					
ANR	3280935	Argument	"""0x%lx"""		3280202	1					
ANR	3280936	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280937	Argument	( l >> OP_SH_RS ) & OP_MASK_RS		3280202	2					
ANR	3280938	BitAndExpression	( l >> OP_SH_RS ) & OP_MASK_RS		3280202	0		&			
ANR	3280939	ShiftExpression	l >> OP_SH_RS		3280202	0		>>			
ANR	3280940	Identifier	l		3280202	0					
ANR	3280941	Identifier	OP_SH_RS		3280202	1					
ANR	3280942	Identifier	OP_MASK_RS		3280202	1					
ANR	3280943	BreakStatement	break ;	905:3:28354:28359	3280202	27	True				
ANR	3280944	Label	case '7' :	907:1:28363:28371	3280202	28	True				
ANR	3280945	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_DSPACC ) & OP_MASK_DSPACC )"	908:3:28376:28465	3280202	29	True				
ANR	3280946	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_DSPACC ) & OP_MASK_DSPACC )"		3280202	0					
ANR	3280947	Callee	* info -> fprintf_func		3280202	0					
ANR	3280948	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280949	UnaryOperator	*		3280202	0					
ANR	3280950	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280951	Identifier	info		3280202	0					
ANR	3280952	Identifier	fprintf_func		3280202	1					
ANR	3280953	ArgumentList	info -> stream		3280202	1					
ANR	3280954	Argument	info -> stream		3280202	0					
ANR	3280955	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280956	Identifier	info		3280202	0					
ANR	3280957	Identifier	stream		3280202	1					
ANR	3280958	Argument	"""$ac%ld"""		3280202	1					
ANR	3280959	PrimaryExpression	"""$ac%ld"""		3280202	0					
ANR	3280960	Argument	( l >> OP_SH_DSPACC ) & OP_MASK_DSPACC		3280202	2					
ANR	3280961	BitAndExpression	( l >> OP_SH_DSPACC ) & OP_MASK_DSPACC		3280202	0		&			
ANR	3280962	ShiftExpression	l >> OP_SH_DSPACC		3280202	0		>>			
ANR	3280963	Identifier	l		3280202	0					
ANR	3280964	Identifier	OP_SH_DSPACC		3280202	1					
ANR	3280965	Identifier	OP_MASK_DSPACC		3280202	1					
ANR	3280966	BreakStatement	break ;	910:3:28470:28475	3280202	30	True				
ANR	3280967	Label	case '8' :	912:1:28479:28487	3280202	31	True				
ANR	3280968	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_WRDSP ) & OP_MASK_WRDSP )"	913:3:28492:28578	3280202	32	True				
ANR	3280969	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_WRDSP ) & OP_MASK_WRDSP )"		3280202	0					
ANR	3280970	Callee	* info -> fprintf_func		3280202	0					
ANR	3280971	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280972	UnaryOperator	*		3280202	0					
ANR	3280973	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280974	Identifier	info		3280202	0					
ANR	3280975	Identifier	fprintf_func		3280202	1					
ANR	3280976	ArgumentList	info -> stream		3280202	1					
ANR	3280977	Argument	info -> stream		3280202	0					
ANR	3280978	PtrMemberAccess	info -> stream		3280202	0					
ANR	3280979	Identifier	info		3280202	0					
ANR	3280980	Identifier	stream		3280202	1					
ANR	3280981	Argument	"""0x%lx"""		3280202	1					
ANR	3280982	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3280983	Argument	( l >> OP_SH_WRDSP ) & OP_MASK_WRDSP		3280202	2					
ANR	3280984	BitAndExpression	( l >> OP_SH_WRDSP ) & OP_MASK_WRDSP		3280202	0		&			
ANR	3280985	ShiftExpression	l >> OP_SH_WRDSP		3280202	0		>>			
ANR	3280986	Identifier	l		3280202	0					
ANR	3280987	Identifier	OP_SH_WRDSP		3280202	1					
ANR	3280988	Identifier	OP_MASK_WRDSP		3280202	1					
ANR	3280989	BreakStatement	break ;	915:3:28583:28588	3280202	33	True				
ANR	3280990	Label	case '9' :	917:1:28592:28600	3280202	34	True				
ANR	3280991	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_DSPACC_S ) & OP_MASK_DSPACC_S )"	918:3:28605:28698	3280202	35	True				
ANR	3280992	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_DSPACC_S ) & OP_MASK_DSPACC_S )"		3280202	0					
ANR	3280993	Callee	* info -> fprintf_func		3280202	0					
ANR	3280994	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3280995	UnaryOperator	*		3280202	0					
ANR	3280996	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3280997	Identifier	info		3280202	0					
ANR	3280998	Identifier	fprintf_func		3280202	1					
ANR	3280999	ArgumentList	info -> stream		3280202	1					
ANR	3281000	Argument	info -> stream		3280202	0					
ANR	3281001	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281002	Identifier	info		3280202	0					
ANR	3281003	Identifier	stream		3280202	1					
ANR	3281004	Argument	"""$ac%ld"""		3280202	1					
ANR	3281005	PrimaryExpression	"""$ac%ld"""		3280202	0					
ANR	3281006	Argument	( l >> OP_SH_DSPACC_S ) & OP_MASK_DSPACC_S		3280202	2					
ANR	3281007	BitAndExpression	( l >> OP_SH_DSPACC_S ) & OP_MASK_DSPACC_S		3280202	0		&			
ANR	3281008	ShiftExpression	l >> OP_SH_DSPACC_S		3280202	0		>>			
ANR	3281009	Identifier	l		3280202	0					
ANR	3281010	Identifier	OP_SH_DSPACC_S		3280202	1					
ANR	3281011	Identifier	OP_MASK_DSPACC_S		3280202	1					
ANR	3281012	BreakStatement	break ;	920:3:28703:28708	3280202	36	True				
ANR	3281013	Label	case '0' :	922:1:28712:28720	3280202	37	True				
ANR	3281014	ExpressionStatement	delta = ( ( l >> OP_SH_DSPSFT ) & OP_MASK_DSPSFT )	923:3:28768:28814	3280202	38	True				
ANR	3281015	AssignmentExpression	delta = ( ( l >> OP_SH_DSPSFT ) & OP_MASK_DSPSFT )		3280202	0		=			
ANR	3281016	Identifier	delta		3280202	0					
ANR	3281017	BitAndExpression	( l >> OP_SH_DSPSFT ) & OP_MASK_DSPSFT		3280202	1		&			
ANR	3281018	ShiftExpression	l >> OP_SH_DSPSFT		3280202	0		>>			
ANR	3281019	Identifier	l		3280202	0					
ANR	3281020	Identifier	OP_SH_DSPSFT		3280202	1					
ANR	3281021	Identifier	OP_MASK_DSPSFT		3280202	1					
ANR	3281022	IfStatement	if ( delta & 0x20 )		3280202	39					
ANR	3281023	Condition	delta & 0x20	924:7:28823:28834	3280202	0	True				
ANR	3281024	BitAndExpression	delta & 0x20		3280202	0		&			
ANR	3281025	Identifier	delta		3280202	0					
ANR	3281026	PrimaryExpression	0x20		3280202	1					
ANR	3281027	CompoundStatement		186:21:4827:4827	3280202	1					
ANR	3281028	ExpressionStatement	delta |= ~OP_MASK_DSPSFT	925:4:28863:28887	3280202	0	True				
ANR	3281029	AssignmentExpression	delta |= ~OP_MASK_DSPSFT		3280202	0		|=			
ANR	3281030	Identifier	delta		3280202	0					
ANR	3281031	Identifier	~OP_MASK_DSPSFT		3280202	1					
ANR	3281032	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"	927:3:28897:28946	3280202	40	True				
ANR	3281033	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"		3280202	0					
ANR	3281034	Callee	* info -> fprintf_func		3280202	0					
ANR	3281035	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281036	UnaryOperator	*		3280202	0					
ANR	3281037	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281038	Identifier	info		3280202	0					
ANR	3281039	Identifier	fprintf_func		3280202	1					
ANR	3281040	ArgumentList	info -> stream		3280202	1					
ANR	3281041	Argument	info -> stream		3280202	0					
ANR	3281042	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281043	Identifier	info		3280202	0					
ANR	3281044	Identifier	stream		3280202	1					
ANR	3281045	Argument	"""%d"""		3280202	1					
ANR	3281046	PrimaryExpression	"""%d"""		3280202	0					
ANR	3281047	Argument	delta		3280202	2					
ANR	3281048	Identifier	delta		3280202	0					
ANR	3281049	BreakStatement	break ;	928:3:28951:28956	3280202	41	True				
ANR	3281050	Label	case ':' :	930:1:28960:28968	3280202	42	True				
ANR	3281051	ExpressionStatement	delta = ( ( l >> OP_SH_DSPSFT_7 ) & OP_MASK_DSPSFT_7 )	931:3:29016:29066	3280202	43	True				
ANR	3281052	AssignmentExpression	delta = ( ( l >> OP_SH_DSPSFT_7 ) & OP_MASK_DSPSFT_7 )		3280202	0		=			
ANR	3281053	Identifier	delta		3280202	0					
ANR	3281054	BitAndExpression	( l >> OP_SH_DSPSFT_7 ) & OP_MASK_DSPSFT_7		3280202	1		&			
ANR	3281055	ShiftExpression	l >> OP_SH_DSPSFT_7		3280202	0		>>			
ANR	3281056	Identifier	l		3280202	0					
ANR	3281057	Identifier	OP_SH_DSPSFT_7		3280202	1					
ANR	3281058	Identifier	OP_MASK_DSPSFT_7		3280202	1					
ANR	3281059	IfStatement	if ( delta & 0x40 )		3280202	44					
ANR	3281060	Condition	delta & 0x40	932:7:29075:29086	3280202	0	True				
ANR	3281061	BitAndExpression	delta & 0x40		3280202	0		&			
ANR	3281062	Identifier	delta		3280202	0					
ANR	3281063	PrimaryExpression	0x40		3280202	1					
ANR	3281064	CompoundStatement		194:21:5079:5079	3280202	1					
ANR	3281065	ExpressionStatement	delta |= ~OP_MASK_DSPSFT_7	933:4:29115:29141	3280202	0	True				
ANR	3281066	AssignmentExpression	delta |= ~OP_MASK_DSPSFT_7		3280202	0		|=			
ANR	3281067	Identifier	delta		3280202	0					
ANR	3281068	Identifier	~OP_MASK_DSPSFT_7		3280202	1					
ANR	3281069	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"	935:3:29151:29200	3280202	45	True				
ANR	3281070	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"		3280202	0					
ANR	3281071	Callee	* info -> fprintf_func		3280202	0					
ANR	3281072	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281073	UnaryOperator	*		3280202	0					
ANR	3281074	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281075	Identifier	info		3280202	0					
ANR	3281076	Identifier	fprintf_func		3280202	1					
ANR	3281077	ArgumentList	info -> stream		3280202	1					
ANR	3281078	Argument	info -> stream		3280202	0					
ANR	3281079	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281080	Identifier	info		3280202	0					
ANR	3281081	Identifier	stream		3280202	1					
ANR	3281082	Argument	"""%d"""		3280202	1					
ANR	3281083	PrimaryExpression	"""%d"""		3280202	0					
ANR	3281084	Argument	delta		3280202	2					
ANR	3281085	Identifier	delta		3280202	0					
ANR	3281086	BreakStatement	break ;	936:3:29205:29210	3280202	46	True				
ANR	3281087	Label	case '\\'' :	938:1:29214:29223	3280202	47	True				
ANR	3281088	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_RDDSP ) & OP_MASK_RDDSP )"	939:3:29228:29314	3280202	48	True				
ANR	3281089	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_RDDSP ) & OP_MASK_RDDSP )"		3280202	0					
ANR	3281090	Callee	* info -> fprintf_func		3280202	0					
ANR	3281091	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281092	UnaryOperator	*		3280202	0					
ANR	3281093	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281094	Identifier	info		3280202	0					
ANR	3281095	Identifier	fprintf_func		3280202	1					
ANR	3281096	ArgumentList	info -> stream		3280202	1					
ANR	3281097	Argument	info -> stream		3280202	0					
ANR	3281098	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281099	Identifier	info		3280202	0					
ANR	3281100	Identifier	stream		3280202	1					
ANR	3281101	Argument	"""0x%lx"""		3280202	1					
ANR	3281102	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281103	Argument	( l >> OP_SH_RDDSP ) & OP_MASK_RDDSP		3280202	2					
ANR	3281104	BitAndExpression	( l >> OP_SH_RDDSP ) & OP_MASK_RDDSP		3280202	0		&			
ANR	3281105	ShiftExpression	l >> OP_SH_RDDSP		3280202	0		>>			
ANR	3281106	Identifier	l		3280202	0					
ANR	3281107	Identifier	OP_SH_RDDSP		3280202	1					
ANR	3281108	Identifier	OP_MASK_RDDSP		3280202	1					
ANR	3281109	BreakStatement	break ;	941:3:29319:29324	3280202	49	True				
ANR	3281110	Label	case '@' :	943:1:29328:29336	3280202	50	True				
ANR	3281111	ExpressionStatement	delta = ( ( l >> OP_SH_IMM10 ) & OP_MASK_IMM10 )	944:3:29385:29429	3280202	51	True				
ANR	3281112	AssignmentExpression	delta = ( ( l >> OP_SH_IMM10 ) & OP_MASK_IMM10 )		3280202	0		=			
ANR	3281113	Identifier	delta		3280202	0					
ANR	3281114	BitAndExpression	( l >> OP_SH_IMM10 ) & OP_MASK_IMM10		3280202	1		&			
ANR	3281115	ShiftExpression	l >> OP_SH_IMM10		3280202	0		>>			
ANR	3281116	Identifier	l		3280202	0					
ANR	3281117	Identifier	OP_SH_IMM10		3280202	1					
ANR	3281118	Identifier	OP_MASK_IMM10		3280202	1					
ANR	3281119	IfStatement	if ( delta & 0x200 )		3280202	52					
ANR	3281120	Condition	delta & 0x200	945:7:29438:29450	3280202	0	True				
ANR	3281121	BitAndExpression	delta & 0x200		3280202	0		&			
ANR	3281122	Identifier	delta		3280202	0					
ANR	3281123	PrimaryExpression	0x200		3280202	1					
ANR	3281124	CompoundStatement		207:22:5443:5443	3280202	1					
ANR	3281125	ExpressionStatement	delta |= ~OP_MASK_IMM10	946:4:29479:29502	3280202	0	True				
ANR	3281126	AssignmentExpression	delta |= ~OP_MASK_IMM10		3280202	0		|=			
ANR	3281127	Identifier	delta		3280202	0					
ANR	3281128	Identifier	~OP_MASK_IMM10		3280202	1					
ANR	3281129	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"	948:3:29512:29561	3280202	53	True				
ANR	3281130	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"		3280202	0					
ANR	3281131	Callee	* info -> fprintf_func		3280202	0					
ANR	3281132	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281133	UnaryOperator	*		3280202	0					
ANR	3281134	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281135	Identifier	info		3280202	0					
ANR	3281136	Identifier	fprintf_func		3280202	1					
ANR	3281137	ArgumentList	info -> stream		3280202	1					
ANR	3281138	Argument	info -> stream		3280202	0					
ANR	3281139	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281140	Identifier	info		3280202	0					
ANR	3281141	Identifier	stream		3280202	1					
ANR	3281142	Argument	"""%d"""		3280202	1					
ANR	3281143	PrimaryExpression	"""%d"""		3280202	0					
ANR	3281144	Argument	delta		3280202	2					
ANR	3281145	Identifier	delta		3280202	0					
ANR	3281146	BreakStatement	break ;	949:3:29566:29571	3280202	54	True				
ANR	3281147	Label	case '!' :	951:1:29575:29583	3280202	55	True				
ANR	3281148	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_MT_U ) & OP_MASK_MT_U )"	952:3:29588:29670	3280202	56	True				
ANR	3281149	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_MT_U ) & OP_MASK_MT_U )"		3280202	0					
ANR	3281150	Callee	* info -> fprintf_func		3280202	0					
ANR	3281151	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281152	UnaryOperator	*		3280202	0					
ANR	3281153	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281154	Identifier	info		3280202	0					
ANR	3281155	Identifier	fprintf_func		3280202	1					
ANR	3281156	ArgumentList	info -> stream		3280202	1					
ANR	3281157	Argument	info -> stream		3280202	0					
ANR	3281158	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281159	Identifier	info		3280202	0					
ANR	3281160	Identifier	stream		3280202	1					
ANR	3281161	Argument	"""%ld"""		3280202	1					
ANR	3281162	PrimaryExpression	"""%ld"""		3280202	0					
ANR	3281163	Argument	( l >> OP_SH_MT_U ) & OP_MASK_MT_U		3280202	2					
ANR	3281164	BitAndExpression	( l >> OP_SH_MT_U ) & OP_MASK_MT_U		3280202	0		&			
ANR	3281165	ShiftExpression	l >> OP_SH_MT_U		3280202	0		>>			
ANR	3281166	Identifier	l		3280202	0					
ANR	3281167	Identifier	OP_SH_MT_U		3280202	1					
ANR	3281168	Identifier	OP_MASK_MT_U		3280202	1					
ANR	3281169	BreakStatement	break ;	954:3:29675:29680	3280202	57	True				
ANR	3281170	Label	case '$' :	956:1:29684:29692	3280202	58	True				
ANR	3281171	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_MT_H ) & OP_MASK_MT_H )"	957:3:29697:29779	3280202	59	True				
ANR	3281172	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_MT_H ) & OP_MASK_MT_H )"		3280202	0					
ANR	3281173	Callee	* info -> fprintf_func		3280202	0					
ANR	3281174	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281175	UnaryOperator	*		3280202	0					
ANR	3281176	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281177	Identifier	info		3280202	0					
ANR	3281178	Identifier	fprintf_func		3280202	1					
ANR	3281179	ArgumentList	info -> stream		3280202	1					
ANR	3281180	Argument	info -> stream		3280202	0					
ANR	3281181	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281182	Identifier	info		3280202	0					
ANR	3281183	Identifier	stream		3280202	1					
ANR	3281184	Argument	"""%ld"""		3280202	1					
ANR	3281185	PrimaryExpression	"""%ld"""		3280202	0					
ANR	3281186	Argument	( l >> OP_SH_MT_H ) & OP_MASK_MT_H		3280202	2					
ANR	3281187	BitAndExpression	( l >> OP_SH_MT_H ) & OP_MASK_MT_H		3280202	0		&			
ANR	3281188	ShiftExpression	l >> OP_SH_MT_H		3280202	0		>>			
ANR	3281189	Identifier	l		3280202	0					
ANR	3281190	Identifier	OP_SH_MT_H		3280202	1					
ANR	3281191	Identifier	OP_MASK_MT_H		3280202	1					
ANR	3281192	BreakStatement	break ;	959:3:29784:29789	3280202	60	True				
ANR	3281193	Label	case '*' :	961:1:29793:29801	3280202	61	True				
ANR	3281194	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_MTACC_T ) & OP_MASK_MTACC_T )"	962:3:29806:29897	3280202	62	True				
ANR	3281195	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_MTACC_T ) & OP_MASK_MTACC_T )"		3280202	0					
ANR	3281196	Callee	* info -> fprintf_func		3280202	0					
ANR	3281197	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281198	UnaryOperator	*		3280202	0					
ANR	3281199	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281200	Identifier	info		3280202	0					
ANR	3281201	Identifier	fprintf_func		3280202	1					
ANR	3281202	ArgumentList	info -> stream		3280202	1					
ANR	3281203	Argument	info -> stream		3280202	0					
ANR	3281204	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281205	Identifier	info		3280202	0					
ANR	3281206	Identifier	stream		3280202	1					
ANR	3281207	Argument	"""$ac%ld"""		3280202	1					
ANR	3281208	PrimaryExpression	"""$ac%ld"""		3280202	0					
ANR	3281209	Argument	( l >> OP_SH_MTACC_T ) & OP_MASK_MTACC_T		3280202	2					
ANR	3281210	BitAndExpression	( l >> OP_SH_MTACC_T ) & OP_MASK_MTACC_T		3280202	0		&			
ANR	3281211	ShiftExpression	l >> OP_SH_MTACC_T		3280202	0		>>			
ANR	3281212	Identifier	l		3280202	0					
ANR	3281213	Identifier	OP_SH_MTACC_T		3280202	1					
ANR	3281214	Identifier	OP_MASK_MTACC_T		3280202	1					
ANR	3281215	BreakStatement	break ;	964:3:29902:29907	3280202	63	True				
ANR	3281216	Label	case '&' :	966:1:29911:29919	3280202	64	True				
ANR	3281217	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_MTACC_D ) & OP_MASK_MTACC_D )"	967:3:29924:30015	3280202	65	True				
ANR	3281218	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$ac%ld"" , ( l >> OP_SH_MTACC_D ) & OP_MASK_MTACC_D )"		3280202	0					
ANR	3281219	Callee	* info -> fprintf_func		3280202	0					
ANR	3281220	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281221	UnaryOperator	*		3280202	0					
ANR	3281222	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281223	Identifier	info		3280202	0					
ANR	3281224	Identifier	fprintf_func		3280202	1					
ANR	3281225	ArgumentList	info -> stream		3280202	1					
ANR	3281226	Argument	info -> stream		3280202	0					
ANR	3281227	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281228	Identifier	info		3280202	0					
ANR	3281229	Identifier	stream		3280202	1					
ANR	3281230	Argument	"""$ac%ld"""		3280202	1					
ANR	3281231	PrimaryExpression	"""$ac%ld"""		3280202	0					
ANR	3281232	Argument	( l >> OP_SH_MTACC_D ) & OP_MASK_MTACC_D		3280202	2					
ANR	3281233	BitAndExpression	( l >> OP_SH_MTACC_D ) & OP_MASK_MTACC_D		3280202	0		&			
ANR	3281234	ShiftExpression	l >> OP_SH_MTACC_D		3280202	0		>>			
ANR	3281235	Identifier	l		3280202	0					
ANR	3281236	Identifier	OP_SH_MTACC_D		3280202	1					
ANR	3281237	Identifier	OP_MASK_MTACC_D		3280202	1					
ANR	3281238	BreakStatement	break ;	969:3:30020:30025	3280202	66	True				
ANR	3281239	Label	case 'g' :	971:1:30029:30037	3280202	67	True				
ANR	3281240	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$%ld"" , ( l >> OP_SH_RD ) & OP_MASK_RD )"	973:3:30105:30184	3280202	68	True				
ANR	3281241	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$%ld"" , ( l >> OP_SH_RD ) & OP_MASK_RD )"		3280202	0					
ANR	3281242	Callee	* info -> fprintf_func		3280202	0					
ANR	3281243	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281244	UnaryOperator	*		3280202	0					
ANR	3281245	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281246	Identifier	info		3280202	0					
ANR	3281247	Identifier	fprintf_func		3280202	1					
ANR	3281248	ArgumentList	info -> stream		3280202	1					
ANR	3281249	Argument	info -> stream		3280202	0					
ANR	3281250	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281251	Identifier	info		3280202	0					
ANR	3281252	Identifier	stream		3280202	1					
ANR	3281253	Argument	"""$%ld"""		3280202	1					
ANR	3281254	PrimaryExpression	"""$%ld"""		3280202	0					
ANR	3281255	Argument	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	2					
ANR	3281256	BitAndExpression	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	0		&			
ANR	3281257	ShiftExpression	l >> OP_SH_RD		3280202	0		>>			
ANR	3281258	Identifier	l		3280202	0					
ANR	3281259	Identifier	OP_SH_RD		3280202	1					
ANR	3281260	Identifier	OP_MASK_RD		3280202	1					
ANR	3281261	BreakStatement	break ;	975:3:30189:30194	3280202	69	True				
ANR	3281262	Label	case 's' :	977:1:30198:30206	3280202	70	True				
ANR	3281263	Label	case 'b' :	978:1:30209:30217	3280202	71	True				
ANR	3281264	Label	case 'r' :	979:1:30220:30228	3280202	72	True				
ANR	3281265	Label	case 'v' :	980:1:30231:30239	3280202	73	True				
ANR	3281266	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RS ) & OP_MASK_RS ] )"	981:3:30244:30337	3280202	74	True				
ANR	3281267	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RS ) & OP_MASK_RS ] )"		3280202	0					
ANR	3281268	Callee	* info -> fprintf_func		3280202	0					
ANR	3281269	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281270	UnaryOperator	*		3280202	0					
ANR	3281271	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281272	Identifier	info		3280202	0					
ANR	3281273	Identifier	fprintf_func		3280202	1					
ANR	3281274	ArgumentList	info -> stream		3280202	1					
ANR	3281275	Argument	info -> stream		3280202	0					
ANR	3281276	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281277	Identifier	info		3280202	0					
ANR	3281278	Identifier	stream		3280202	1					
ANR	3281279	Argument	"""%s"""		3280202	1					
ANR	3281280	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281281	Argument	mips_gpr_names [ ( l >> OP_SH_RS ) & OP_MASK_RS ]		3280202	2					
ANR	3281282	ArrayIndexing	mips_gpr_names [ ( l >> OP_SH_RS ) & OP_MASK_RS ]		3280202	0					
ANR	3281283	Identifier	mips_gpr_names		3280202	0					
ANR	3281284	BitAndExpression	( l >> OP_SH_RS ) & OP_MASK_RS		3280202	1		&			
ANR	3281285	ShiftExpression	l >> OP_SH_RS		3280202	0		>>			
ANR	3281286	Identifier	l		3280202	0					
ANR	3281287	Identifier	OP_SH_RS		3280202	1					
ANR	3281288	Identifier	OP_MASK_RS		3280202	1					
ANR	3281289	BreakStatement	break ;	983:3:30342:30347	3280202	75	True				
ANR	3281290	Label	case 't' :	985:1:30351:30359	3280202	76	True				
ANR	3281291	Label	case 'w' :	986:1:30362:30370	3280202	77	True				
ANR	3281292	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"	987:3:30375:30468	3280202	78	True				
ANR	3281293	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"		3280202	0					
ANR	3281294	Callee	* info -> fprintf_func		3280202	0					
ANR	3281295	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281296	UnaryOperator	*		3280202	0					
ANR	3281297	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281298	Identifier	info		3280202	0					
ANR	3281299	Identifier	fprintf_func		3280202	1					
ANR	3281300	ArgumentList	info -> stream		3280202	1					
ANR	3281301	Argument	info -> stream		3280202	0					
ANR	3281302	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281303	Identifier	info		3280202	0					
ANR	3281304	Identifier	stream		3280202	1					
ANR	3281305	Argument	"""%s"""		3280202	1					
ANR	3281306	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281307	Argument	mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	2					
ANR	3281308	ArrayIndexing	mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	0					
ANR	3281309	Identifier	mips_gpr_names		3280202	0					
ANR	3281310	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	1		&			
ANR	3281311	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3281312	Identifier	l		3280202	0					
ANR	3281313	Identifier	OP_SH_RT		3280202	1					
ANR	3281314	Identifier	OP_MASK_RT		3280202	1					
ANR	3281315	BreakStatement	break ;	989:3:30473:30478	3280202	79	True				
ANR	3281316	Label	case 'i' :	991:1:30482:30490	3280202	80	True				
ANR	3281317	Label	case 'u' :	992:1:30493:30501	3280202	81	True				
ANR	3281318	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_IMMEDIATE ) & OP_MASK_IMMEDIATE )"	993:3:30506:30600	3280202	82	True				
ANR	3281319	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_IMMEDIATE ) & OP_MASK_IMMEDIATE )"		3280202	0					
ANR	3281320	Callee	* info -> fprintf_func		3280202	0					
ANR	3281321	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281322	UnaryOperator	*		3280202	0					
ANR	3281323	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281324	Identifier	info		3280202	0					
ANR	3281325	Identifier	fprintf_func		3280202	1					
ANR	3281326	ArgumentList	info -> stream		3280202	1					
ANR	3281327	Argument	info -> stream		3280202	0					
ANR	3281328	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281329	Identifier	info		3280202	0					
ANR	3281330	Identifier	stream		3280202	1					
ANR	3281331	Argument	"""0x%lx"""		3280202	1					
ANR	3281332	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281333	Argument	( l >> OP_SH_IMMEDIATE ) & OP_MASK_IMMEDIATE		3280202	2					
ANR	3281334	BitAndExpression	( l >> OP_SH_IMMEDIATE ) & OP_MASK_IMMEDIATE		3280202	0		&			
ANR	3281335	ShiftExpression	l >> OP_SH_IMMEDIATE		3280202	0		>>			
ANR	3281336	Identifier	l		3280202	0					
ANR	3281337	Identifier	OP_SH_IMMEDIATE		3280202	1					
ANR	3281338	Identifier	OP_MASK_IMMEDIATE		3280202	1					
ANR	3281339	BreakStatement	break ;	995:3:30605:30610	3280202	83	True				
ANR	3281340	Label	case 'j' :	997:1:30614:30622	3280202	84	True				
ANR	3281341	Label	case 'o' :	998:1:30662:30670	3280202	85	True				
ANR	3281342	ExpressionStatement	delta = ( l >> OP_SH_DELTA ) & OP_MASK_DELTA	999:3:30675:30717	3280202	86	True				
ANR	3281343	AssignmentExpression	delta = ( l >> OP_SH_DELTA ) & OP_MASK_DELTA		3280202	0		=			
ANR	3281344	Identifier	delta		3280202	0					
ANR	3281345	BitAndExpression	( l >> OP_SH_DELTA ) & OP_MASK_DELTA		3280202	1		&			
ANR	3281346	ShiftExpression	l >> OP_SH_DELTA		3280202	0		>>			
ANR	3281347	Identifier	l		3280202	0					
ANR	3281348	Identifier	OP_SH_DELTA		3280202	1					
ANR	3281349	Identifier	OP_MASK_DELTA		3280202	1					
ANR	3281350	IfStatement	if ( delta & 0x8000 )		3280202	87					
ANR	3281351	Condition	delta & 0x8000	1000:7:30726:30739	3280202	0	True				
ANR	3281352	BitAndExpression	delta & 0x8000		3280202	0		&			
ANR	3281353	Identifier	delta		3280202	0					
ANR	3281354	PrimaryExpression	0x8000		3280202	1					
ANR	3281355	CompoundStatement		262:23:6732:6732	3280202	1					
ANR	3281356	ExpressionStatement	delta |= ~0xffff	1001:4:30748:30764	3280202	0	True				
ANR	3281357	AssignmentExpression	delta |= ~0xffff		3280202	0		|=			
ANR	3281358	Identifier	delta		3280202	0					
ANR	3281359	Identifier	~0xffff		3280202	1					
ANR	3281360	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"	1003:3:30774:30828	3280202	88	True				
ANR	3281361	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , delta )"		3280202	0					
ANR	3281362	Callee	* info -> fprintf_func		3280202	0					
ANR	3281363	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281364	UnaryOperator	*		3280202	0					
ANR	3281365	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281366	Identifier	info		3280202	0					
ANR	3281367	Identifier	fprintf_func		3280202	1					
ANR	3281368	ArgumentList	info -> stream		3280202	1					
ANR	3281369	Argument	info -> stream		3280202	0					
ANR	3281370	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281371	Identifier	info		3280202	0					
ANR	3281372	Identifier	stream		3280202	1					
ANR	3281373	Argument	"""%d"""		3280202	1					
ANR	3281374	PrimaryExpression	"""%d"""		3280202	0					
ANR	3281375	Argument	delta		3280202	2					
ANR	3281376	Identifier	delta		3280202	0					
ANR	3281377	BreakStatement	break ;	1005:3:30833:30838	3280202	89	True				
ANR	3281378	Label	case 'h' :	1007:1:30842:30850	3280202	90	True				
ANR	3281379	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , ( unsigned int ) ( ( l >> OP_SH_PREFX ) & OP_MASK_PREFX ) )"	1008:3:30855:30964	3280202	91	True				
ANR	3281380	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , ( unsigned int ) ( ( l >> OP_SH_PREFX ) & OP_MASK_PREFX ) )"		3280202	0					
ANR	3281381	Callee	* info -> fprintf_func		3280202	0					
ANR	3281382	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281383	UnaryOperator	*		3280202	0					
ANR	3281384	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281385	Identifier	info		3280202	0					
ANR	3281386	Identifier	fprintf_func		3280202	1					
ANR	3281387	ArgumentList	info -> stream		3280202	1					
ANR	3281388	Argument	info -> stream		3280202	0					
ANR	3281389	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281390	Identifier	info		3280202	0					
ANR	3281391	Identifier	stream		3280202	1					
ANR	3281392	Argument	"""0x%x"""		3280202	1					
ANR	3281393	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3281394	Argument	( unsigned int ) ( ( l >> OP_SH_PREFX ) & OP_MASK_PREFX )		3280202	2					
ANR	3281395	CastExpression	( unsigned int ) ( ( l >> OP_SH_PREFX ) & OP_MASK_PREFX )		3280202	0					
ANR	3281396	CastTarget	unsigned int		3280202	0					
ANR	3281397	BitAndExpression	( l >> OP_SH_PREFX ) & OP_MASK_PREFX		3280202	1		&			
ANR	3281398	ShiftExpression	l >> OP_SH_PREFX		3280202	0		>>			
ANR	3281399	Identifier	l		3280202	0					
ANR	3281400	Identifier	OP_SH_PREFX		3280202	1					
ANR	3281401	Identifier	OP_MASK_PREFX		3280202	1					
ANR	3281402	BreakStatement	break ;	1011:3:30969:30974	3280202	92	True				
ANR	3281403	Label	case 'k' :	1013:1:30978:30986	3280202	93	True				
ANR	3281404	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , ( unsigned int ) ( ( l >> OP_SH_CACHE ) & OP_MASK_CACHE ) )"	1014:3:30991:31100	3280202	94	True				
ANR	3281405	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , ( unsigned int ) ( ( l >> OP_SH_CACHE ) & OP_MASK_CACHE ) )"		3280202	0					
ANR	3281406	Callee	* info -> fprintf_func		3280202	0					
ANR	3281407	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281408	UnaryOperator	*		3280202	0					
ANR	3281409	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281410	Identifier	info		3280202	0					
ANR	3281411	Identifier	fprintf_func		3280202	1					
ANR	3281412	ArgumentList	info -> stream		3280202	1					
ANR	3281413	Argument	info -> stream		3280202	0					
ANR	3281414	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281415	Identifier	info		3280202	0					
ANR	3281416	Identifier	stream		3280202	1					
ANR	3281417	Argument	"""0x%x"""		3280202	1					
ANR	3281418	PrimaryExpression	"""0x%x"""		3280202	0					
ANR	3281419	Argument	( unsigned int ) ( ( l >> OP_SH_CACHE ) & OP_MASK_CACHE )		3280202	2					
ANR	3281420	CastExpression	( unsigned int ) ( ( l >> OP_SH_CACHE ) & OP_MASK_CACHE )		3280202	0					
ANR	3281421	CastTarget	unsigned int		3280202	0					
ANR	3281422	BitAndExpression	( l >> OP_SH_CACHE ) & OP_MASK_CACHE		3280202	1		&			
ANR	3281423	ShiftExpression	l >> OP_SH_CACHE		3280202	0		>>			
ANR	3281424	Identifier	l		3280202	0					
ANR	3281425	Identifier	OP_SH_CACHE		3280202	1					
ANR	3281426	Identifier	OP_MASK_CACHE		3280202	1					
ANR	3281427	BreakStatement	break ;	1017:3:31105:31110	3280202	95	True				
ANR	3281428	Label	case 'a' :	1019:1:31114:31122	3280202	96	True				
ANR	3281429	ExpressionStatement	info -> target = ( ( ( pc + 4 ) & ~ ( bfd_vma ) 0x0fffffff ) | ( ( ( l >> OP_SH_TARGET ) & OP_MASK_TARGET ) << 2 ) )	1020:3:31127:31231	3280202	97	True				
ANR	3281430	AssignmentExpression	info -> target = ( ( ( pc + 4 ) & ~ ( bfd_vma ) 0x0fffffff ) | ( ( ( l >> OP_SH_TARGET ) & OP_MASK_TARGET ) << 2 ) )		3280202	0		=			
ANR	3281431	PtrMemberAccess	info -> target		3280202	0					
ANR	3281432	Identifier	info		3280202	0					
ANR	3281433	Identifier	target		3280202	1					
ANR	3281434	InclusiveOrExpression	( ( pc + 4 ) & ~ ( bfd_vma ) 0x0fffffff ) | ( ( ( l >> OP_SH_TARGET ) & OP_MASK_TARGET ) << 2 )		3280202	1		|			
ANR	3281435	BitAndExpression	( pc + 4 ) & ~ ( bfd_vma ) 0x0fffffff		3280202	0		&			
ANR	3281436	AdditiveExpression	pc + 4		3280202	0		+			
ANR	3281437	Identifier	pc		3280202	0					
ANR	3281438	PrimaryExpression	4		3280202	1					
ANR	3281439	UnaryOperationExpression	~ ( bfd_vma ) 0x0fffffff		3280202	1					
ANR	3281440	UnaryOperator	~		3280202	0					
ANR	3281441	CastExpression	( bfd_vma ) 0x0fffffff		3280202	1					
ANR	3281442	CastTarget	bfd_vma		3280202	0					
ANR	3281443	PrimaryExpression	0x0fffffff		3280202	1					
ANR	3281444	ShiftExpression	( ( l >> OP_SH_TARGET ) & OP_MASK_TARGET ) << 2		3280202	1		<<			
ANR	3281445	BitAndExpression	( l >> OP_SH_TARGET ) & OP_MASK_TARGET		3280202	0		&			
ANR	3281446	ShiftExpression	l >> OP_SH_TARGET		3280202	0		>>			
ANR	3281447	Identifier	l		3280202	0					
ANR	3281448	Identifier	OP_SH_TARGET		3280202	1					
ANR	3281449	Identifier	OP_MASK_TARGET		3280202	1					
ANR	3281450	PrimaryExpression	2		3280202	1					
ANR	3281451	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	1026:3:31419:31467	3280202	98	True				
ANR	3281452	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3280202	0					
ANR	3281453	Callee	* info -> print_address_func		3280202	0					
ANR	3281454	UnaryOperationExpression	* info -> print_address_func		3280202	0					
ANR	3281455	UnaryOperator	*		3280202	0					
ANR	3281456	PtrMemberAccess	info -> print_address_func		3280202	1					
ANR	3281457	Identifier	info		3280202	0					
ANR	3281458	Identifier	print_address_func		3280202	1					
ANR	3281459	ArgumentList	info -> target		3280202	1					
ANR	3281460	Argument	info -> target		3280202	0					
ANR	3281461	PtrMemberAccess	info -> target		3280202	0					
ANR	3281462	Identifier	info		3280202	0					
ANR	3281463	Identifier	target		3280202	1					
ANR	3281464	Argument	info		3280202	1					
ANR	3281465	Identifier	info		3280202	0					
ANR	3281466	BreakStatement	break ;	1027:3:31472:31477	3280202	99	True				
ANR	3281467	Label	case 'p' :	1029:1:31481:31489	3280202	100	True				
ANR	3281468	ExpressionStatement	delta = ( l >> OP_SH_DELTA ) & OP_MASK_DELTA	1031:3:31534:31576	3280202	101	True				
ANR	3281469	AssignmentExpression	delta = ( l >> OP_SH_DELTA ) & OP_MASK_DELTA		3280202	0		=			
ANR	3281470	Identifier	delta		3280202	0					
ANR	3281471	BitAndExpression	( l >> OP_SH_DELTA ) & OP_MASK_DELTA		3280202	1		&			
ANR	3281472	ShiftExpression	l >> OP_SH_DELTA		3280202	0		>>			
ANR	3281473	Identifier	l		3280202	0					
ANR	3281474	Identifier	OP_SH_DELTA		3280202	1					
ANR	3281475	Identifier	OP_MASK_DELTA		3280202	1					
ANR	3281476	IfStatement	if ( delta & 0x8000 )		3280202	102					
ANR	3281477	Condition	delta & 0x8000	1032:7:31585:31598	3280202	0	True				
ANR	3281478	BitAndExpression	delta & 0x8000		3280202	0		&			
ANR	3281479	Identifier	delta		3280202	0					
ANR	3281480	PrimaryExpression	0x8000		3280202	1					
ANR	3281481	CompoundStatement		294:23:7591:7591	3280202	1					
ANR	3281482	ExpressionStatement	delta |= ~0xffff	1033:4:31607:31623	3280202	0	True				
ANR	3281483	AssignmentExpression	delta |= ~0xffff		3280202	0		|=			
ANR	3281484	Identifier	delta		3280202	0					
ANR	3281485	Identifier	~0xffff		3280202	1					
ANR	3281486	ExpressionStatement	info -> target = ( delta << 2 ) + pc + INSNLEN	1035:3:31633:31675	3280202	103	True				
ANR	3281487	AssignmentExpression	info -> target = ( delta << 2 ) + pc + INSNLEN		3280202	0		=			
ANR	3281488	PtrMemberAccess	info -> target		3280202	0					
ANR	3281489	Identifier	info		3280202	0					
ANR	3281490	Identifier	target		3280202	1					
ANR	3281491	AdditiveExpression	( delta << 2 ) + pc + INSNLEN		3280202	1		+			
ANR	3281492	ShiftExpression	delta << 2		3280202	0		<<			
ANR	3281493	Identifier	delta		3280202	0					
ANR	3281494	PrimaryExpression	2		3280202	1					
ANR	3281495	AdditiveExpression	pc + INSNLEN		3280202	1		+			
ANR	3281496	Identifier	pc		3280202	0					
ANR	3281497	Identifier	INSNLEN		3280202	1					
ANR	3281498	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	1036:3:31680:31728	3280202	104	True				
ANR	3281499	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3280202	0					
ANR	3281500	Callee	* info -> print_address_func		3280202	0					
ANR	3281501	UnaryOperationExpression	* info -> print_address_func		3280202	0					
ANR	3281502	UnaryOperator	*		3280202	0					
ANR	3281503	PtrMemberAccess	info -> print_address_func		3280202	1					
ANR	3281504	Identifier	info		3280202	0					
ANR	3281505	Identifier	print_address_func		3280202	1					
ANR	3281506	ArgumentList	info -> target		3280202	1					
ANR	3281507	Argument	info -> target		3280202	0					
ANR	3281508	PtrMemberAccess	info -> target		3280202	0					
ANR	3281509	Identifier	info		3280202	0					
ANR	3281510	Identifier	target		3280202	1					
ANR	3281511	Argument	info		3280202	1					
ANR	3281512	Identifier	info		3280202	0					
ANR	3281513	BreakStatement	break ;	1037:3:31733:31738	3280202	105	True				
ANR	3281514	Label	case 'd' :	1039:1:31742:31750	3280202	106	True				
ANR	3281515	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ] )"	1040:3:31755:31848	3280202	107	True				
ANR	3281516	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ] )"		3280202	0					
ANR	3281517	Callee	* info -> fprintf_func		3280202	0					
ANR	3281518	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281519	UnaryOperator	*		3280202	0					
ANR	3281520	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281521	Identifier	info		3280202	0					
ANR	3281522	Identifier	fprintf_func		3280202	1					
ANR	3281523	ArgumentList	info -> stream		3280202	1					
ANR	3281524	Argument	info -> stream		3280202	0					
ANR	3281525	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281526	Identifier	info		3280202	0					
ANR	3281527	Identifier	stream		3280202	1					
ANR	3281528	Argument	"""%s"""		3280202	1					
ANR	3281529	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281530	Argument	mips_gpr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ]		3280202	2					
ANR	3281531	ArrayIndexing	mips_gpr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ]		3280202	0					
ANR	3281532	Identifier	mips_gpr_names		3280202	0					
ANR	3281533	BitAndExpression	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	1		&			
ANR	3281534	ShiftExpression	l >> OP_SH_RD		3280202	0		>>			
ANR	3281535	Identifier	l		3280202	0					
ANR	3281536	Identifier	OP_SH_RD		3280202	1					
ANR	3281537	Identifier	OP_MASK_RD		3280202	1					
ANR	3281538	BreakStatement	break ;	1042:3:31853:31858	3280202	108	True				
ANR	3281539	Label	case 'U' :	1044:1:31862:31870	3280202	109	True				
ANR	3281540	CompoundStatement		309:5:7928:7975	3280202	110					
ANR	3281541	IdentifierDeclStatement	unsigned int reg = ( l >> OP_SH_RD ) & OP_MASK_RD ;	1047:5:31938:31985	3280202	0	True				
ANR	3281542	IdentifierDecl	reg = ( l >> OP_SH_RD ) & OP_MASK_RD		3280202	0					
ANR	3281543	IdentifierDeclType	unsigned int		3280202	0					
ANR	3281544	Identifier	reg		3280202	1					
ANR	3281545	AssignmentExpression	reg = ( l >> OP_SH_RD ) & OP_MASK_RD		3280202	2		=			
ANR	3281546	Identifier	reg		3280202	0					
ANR	3281547	BitAndExpression	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	1		&			
ANR	3281548	ShiftExpression	l >> OP_SH_RD		3280202	0		>>			
ANR	3281549	Identifier	l		3280202	0					
ANR	3281550	Identifier	OP_SH_RD		3280202	1					
ANR	3281551	Identifier	OP_MASK_RD		3280202	1					
ANR	3281552	IfStatement	if ( reg == ( ( l >> OP_SH_RT ) & OP_MASK_RT ) )		3280202	1					
ANR	3281553	Condition	reg == ( ( l >> OP_SH_RT ) & OP_MASK_RT )	1048:9:31996:32032	3280202	0	True				
ANR	3281554	EqualityExpression	reg == ( ( l >> OP_SH_RT ) & OP_MASK_RT )		3280202	0		==			
ANR	3281555	Identifier	reg		3280202	0					
ANR	3281556	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	1		&			
ANR	3281557	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3281558	Identifier	l		3280202	0					
ANR	3281559	Identifier	OP_SH_RT		3280202	1					
ANR	3281560	Identifier	OP_MASK_RT		3280202	1					
ANR	3281561	CompoundStatement		310:48:8025:8025	3280202	1					
ANR	3281562	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ reg ] )"	1049:6:32043:32113	3280202	0	True				
ANR	3281563	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ reg ] )"		3280202	0					
ANR	3281564	Callee	* info -> fprintf_func		3280202	0					
ANR	3281565	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281566	UnaryOperator	*		3280202	0					
ANR	3281567	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281568	Identifier	info		3280202	0					
ANR	3281569	Identifier	fprintf_func		3280202	1					
ANR	3281570	ArgumentList	info -> stream		3280202	1					
ANR	3281571	Argument	info -> stream		3280202	0					
ANR	3281572	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281573	Identifier	info		3280202	0					
ANR	3281574	Identifier	stream		3280202	1					
ANR	3281575	Argument	"""%s"""		3280202	1					
ANR	3281576	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281577	Argument	mips_gpr_names [ reg ]		3280202	2					
ANR	3281578	ArrayIndexing	mips_gpr_names [ reg ]		3280202	0					
ANR	3281579	Identifier	mips_gpr_names		3280202	0					
ANR	3281580	Identifier	reg		3280202	1					
ANR	3281581	ElseStatement	else		3280202	0					
ANR	3281582	CompoundStatement		313:12:8117:8117	3280202	0					
ANR	3281583	IfStatement	if ( reg == 0 )		3280202	0					
ANR	3281584	Condition	reg == 0	1053:10:32182:32189	3280202	0	True				
ANR	3281585	EqualityExpression	reg == 0		3280202	0		==			
ANR	3281586	Identifier	reg		3280202	0					
ANR	3281587	PrimaryExpression	0		3280202	1					
ANR	3281588	CompoundStatement		315:20:8182:8182	3280202	1					
ANR	3281589	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"	1054:7:32201:32297	3280202	0	True				
ANR	3281590	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"		3280202	0					
ANR	3281591	Callee	* info -> fprintf_func		3280202	0					
ANR	3281592	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281593	UnaryOperator	*		3280202	0					
ANR	3281594	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281595	Identifier	info		3280202	0					
ANR	3281596	Identifier	fprintf_func		3280202	1					
ANR	3281597	ArgumentList	info -> stream		3280202	1					
ANR	3281598	Argument	info -> stream		3280202	0					
ANR	3281599	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281600	Identifier	info		3280202	0					
ANR	3281601	Identifier	stream		3280202	1					
ANR	3281602	Argument	"""%s"""		3280202	1					
ANR	3281603	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281604	Argument	mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	2					
ANR	3281605	ArrayIndexing	mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	0					
ANR	3281606	Identifier	mips_gpr_names		3280202	0					
ANR	3281607	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	1		&			
ANR	3281608	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3281609	Identifier	l		3280202	0					
ANR	3281610	Identifier	OP_SH_RT		3280202	1					
ANR	3281611	Identifier	OP_MASK_RT		3280202	1					
ANR	3281612	ElseStatement	else		3280202	0					
ANR	3281613	IfStatement	if ( ( ( l >> OP_SH_RT ) & OP_MASK_RT ) == 0 )		3280202	0					
ANR	3281614	Condition	( ( l >> OP_SH_RT ) & OP_MASK_RT ) == 0	1056:17:32316:32350	3280202	0	True				
ANR	3281615	EqualityExpression	( ( l >> OP_SH_RT ) & OP_MASK_RT ) == 0		3280202	0		==			
ANR	3281616	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	0		&			
ANR	3281617	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3281618	Identifier	l		3280202	0					
ANR	3281619	Identifier	OP_SH_RT		3280202	1					
ANR	3281620	Identifier	OP_MASK_RT		3280202	1					
ANR	3281621	PrimaryExpression	0		3280202	1					
ANR	3281622	CompoundStatement		318:54:8343:8343	3280202	1					
ANR	3281623	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ reg ] )"	1057:7:32362:32433	3280202	0	True				
ANR	3281624	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ reg ] )"		3280202	0					
ANR	3281625	Callee	* info -> fprintf_func		3280202	0					
ANR	3281626	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281627	UnaryOperator	*		3280202	0					
ANR	3281628	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281629	Identifier	info		3280202	0					
ANR	3281630	Identifier	fprintf_func		3280202	1					
ANR	3281631	ArgumentList	info -> stream		3280202	1					
ANR	3281632	Argument	info -> stream		3280202	0					
ANR	3281633	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281634	Identifier	info		3280202	0					
ANR	3281635	Identifier	stream		3280202	1					
ANR	3281636	Argument	"""%s"""		3280202	1					
ANR	3281637	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281638	Argument	mips_gpr_names [ reg ]		3280202	2					
ANR	3281639	ArrayIndexing	mips_gpr_names [ reg ]		3280202	0					
ANR	3281640	Identifier	mips_gpr_names		3280202	0					
ANR	3281641	Identifier	reg		3280202	1					
ANR	3281642	ElseStatement	else		3280202	0					
ANR	3281643	CompoundStatement		321:13:8438:8438	3280202	0					
ANR	3281644	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s or %s"" , mips_gpr_names [ reg ] , mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"	1060:7:32500:32631	3280202	0	True				
ANR	3281645	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s or %s"" , mips_gpr_names [ reg ] , mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ] )"		3280202	0					
ANR	3281646	Callee	* info -> fprintf_func		3280202	0					
ANR	3281647	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281648	UnaryOperator	*		3280202	0					
ANR	3281649	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281650	Identifier	info		3280202	0					
ANR	3281651	Identifier	fprintf_func		3280202	1					
ANR	3281652	ArgumentList	info -> stream		3280202	1					
ANR	3281653	Argument	info -> stream		3280202	0					
ANR	3281654	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281655	Identifier	info		3280202	0					
ANR	3281656	Identifier	stream		3280202	1					
ANR	3281657	Argument	"""%s or %s"""		3280202	1					
ANR	3281658	PrimaryExpression	"""%s or %s"""		3280202	0					
ANR	3281659	Argument	mips_gpr_names [ reg ]		3280202	2					
ANR	3281660	ArrayIndexing	mips_gpr_names [ reg ]		3280202	0					
ANR	3281661	Identifier	mips_gpr_names		3280202	0					
ANR	3281662	Identifier	reg		3280202	1					
ANR	3281663	Argument	mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	3					
ANR	3281664	ArrayIndexing	mips_gpr_names [ ( l >> OP_SH_RT ) & OP_MASK_RT ]		3280202	0					
ANR	3281665	Identifier	mips_gpr_names		3280202	0					
ANR	3281666	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	1		&			
ANR	3281667	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3281668	Identifier	l		3280202	0					
ANR	3281669	Identifier	OP_SH_RT		3280202	1					
ANR	3281670	Identifier	OP_MASK_RT		3280202	1					
ANR	3281671	BreakStatement	break ;	1066:3:32658:32663	3280202	111	True				
ANR	3281672	Label	case 'z' :	1068:1:32667:32675	3280202	112	True				
ANR	3281673	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 0 ] )"	1069:3:32680:32741	3280202	113	True				
ANR	3281674	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 0 ] )"		3280202	0					
ANR	3281675	Callee	* info -> fprintf_func		3280202	0					
ANR	3281676	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281677	UnaryOperator	*		3280202	0					
ANR	3281678	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281679	Identifier	info		3280202	0					
ANR	3281680	Identifier	fprintf_func		3280202	1					
ANR	3281681	ArgumentList	info -> stream		3280202	1					
ANR	3281682	Argument	info -> stream		3280202	0					
ANR	3281683	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281684	Identifier	info		3280202	0					
ANR	3281685	Identifier	stream		3280202	1					
ANR	3281686	Argument	"""%s"""		3280202	1					
ANR	3281687	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281688	Argument	mips_gpr_names [ 0 ]		3280202	2					
ANR	3281689	ArrayIndexing	mips_gpr_names [ 0 ]		3280202	0					
ANR	3281690	Identifier	mips_gpr_names		3280202	0					
ANR	3281691	PrimaryExpression	0		3280202	1					
ANR	3281692	BreakStatement	break ;	1070:3:32746:32751	3280202	114	True				
ANR	3281693	Label	case '<' :	1072:1:32755:32763	3280202	115	True				
ANR	3281694	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT )"	1073:3:32768:32854	3280202	116	True				
ANR	3281695	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT )"		3280202	0					
ANR	3281696	Callee	* info -> fprintf_func		3280202	0					
ANR	3281697	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281698	UnaryOperator	*		3280202	0					
ANR	3281699	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281700	Identifier	info		3280202	0					
ANR	3281701	Identifier	fprintf_func		3280202	1					
ANR	3281702	ArgumentList	info -> stream		3280202	1					
ANR	3281703	Argument	info -> stream		3280202	0					
ANR	3281704	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281705	Identifier	info		3280202	0					
ANR	3281706	Identifier	stream		3280202	1					
ANR	3281707	Argument	"""0x%lx"""		3280202	1					
ANR	3281708	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281709	Argument	( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT		3280202	2					
ANR	3281710	BitAndExpression	( l >> OP_SH_SHAMT ) & OP_MASK_SHAMT		3280202	0		&			
ANR	3281711	ShiftExpression	l >> OP_SH_SHAMT		3280202	0		>>			
ANR	3281712	Identifier	l		3280202	0					
ANR	3281713	Identifier	OP_SH_SHAMT		3280202	1					
ANR	3281714	Identifier	OP_MASK_SHAMT		3280202	1					
ANR	3281715	BreakStatement	break ;	1075:3:32859:32864	3280202	117	True				
ANR	3281716	Label	case 'c' :	1077:1:32868:32876	3280202	118	True				
ANR	3281717	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE ) & OP_MASK_CODE )"	1078:3:32881:32965	3280202	119	True				
ANR	3281718	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE ) & OP_MASK_CODE )"		3280202	0					
ANR	3281719	Callee	* info -> fprintf_func		3280202	0					
ANR	3281720	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281721	UnaryOperator	*		3280202	0					
ANR	3281722	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281723	Identifier	info		3280202	0					
ANR	3281724	Identifier	fprintf_func		3280202	1					
ANR	3281725	ArgumentList	info -> stream		3280202	1					
ANR	3281726	Argument	info -> stream		3280202	0					
ANR	3281727	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281728	Identifier	info		3280202	0					
ANR	3281729	Identifier	stream		3280202	1					
ANR	3281730	Argument	"""0x%lx"""		3280202	1					
ANR	3281731	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281732	Argument	( l >> OP_SH_CODE ) & OP_MASK_CODE		3280202	2					
ANR	3281733	BitAndExpression	( l >> OP_SH_CODE ) & OP_MASK_CODE		3280202	0		&			
ANR	3281734	ShiftExpression	l >> OP_SH_CODE		3280202	0		>>			
ANR	3281735	Identifier	l		3280202	0					
ANR	3281736	Identifier	OP_SH_CODE		3280202	1					
ANR	3281737	Identifier	OP_MASK_CODE		3280202	1					
ANR	3281738	BreakStatement	break ;	1080:3:32970:32975	3280202	120	True				
ANR	3281739	Label	case 'q' :	1082:1:32979:32987	3280202	121	True				
ANR	3281740	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE2 ) & OP_MASK_CODE2 )"	1083:3:32992:33078	3280202	122	True				
ANR	3281741	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE2 ) & OP_MASK_CODE2 )"		3280202	0					
ANR	3281742	Callee	* info -> fprintf_func		3280202	0					
ANR	3281743	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281744	UnaryOperator	*		3280202	0					
ANR	3281745	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281746	Identifier	info		3280202	0					
ANR	3281747	Identifier	fprintf_func		3280202	1					
ANR	3281748	ArgumentList	info -> stream		3280202	1					
ANR	3281749	Argument	info -> stream		3280202	0					
ANR	3281750	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281751	Identifier	info		3280202	0					
ANR	3281752	Identifier	stream		3280202	1					
ANR	3281753	Argument	"""0x%lx"""		3280202	1					
ANR	3281754	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281755	Argument	( l >> OP_SH_CODE2 ) & OP_MASK_CODE2		3280202	2					
ANR	3281756	BitAndExpression	( l >> OP_SH_CODE2 ) & OP_MASK_CODE2		3280202	0		&			
ANR	3281757	ShiftExpression	l >> OP_SH_CODE2		3280202	0		>>			
ANR	3281758	Identifier	l		3280202	0					
ANR	3281759	Identifier	OP_SH_CODE2		3280202	1					
ANR	3281760	Identifier	OP_MASK_CODE2		3280202	1					
ANR	3281761	BreakStatement	break ;	1085:3:33083:33088	3280202	123	True				
ANR	3281762	Label	case 'C' :	1087:1:33092:33100	3280202	124	True				
ANR	3281763	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_COPZ ) & OP_MASK_COPZ )"	1088:3:33105:33189	3280202	125	True				
ANR	3281764	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_COPZ ) & OP_MASK_COPZ )"		3280202	0					
ANR	3281765	Callee	* info -> fprintf_func		3280202	0					
ANR	3281766	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281767	UnaryOperator	*		3280202	0					
ANR	3281768	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281769	Identifier	info		3280202	0					
ANR	3281770	Identifier	fprintf_func		3280202	1					
ANR	3281771	ArgumentList	info -> stream		3280202	1					
ANR	3281772	Argument	info -> stream		3280202	0					
ANR	3281773	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281774	Identifier	info		3280202	0					
ANR	3281775	Identifier	stream		3280202	1					
ANR	3281776	Argument	"""0x%lx"""		3280202	1					
ANR	3281777	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281778	Argument	( l >> OP_SH_COPZ ) & OP_MASK_COPZ		3280202	2					
ANR	3281779	BitAndExpression	( l >> OP_SH_COPZ ) & OP_MASK_COPZ		3280202	0		&			
ANR	3281780	ShiftExpression	l >> OP_SH_COPZ		3280202	0		>>			
ANR	3281781	Identifier	l		3280202	0					
ANR	3281782	Identifier	OP_SH_COPZ		3280202	1					
ANR	3281783	Identifier	OP_MASK_COPZ		3280202	1					
ANR	3281784	BreakStatement	break ;	1090:3:33194:33199	3280202	126	True				
ANR	3281785	Label	case 'B' :	1092:1:33203:33211	3280202	127	True				
ANR	3281786	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE20 ) & OP_MASK_CODE20 )"	1093:3:33216:33305	3280202	128	True				
ANR	3281787	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE20 ) & OP_MASK_CODE20 )"		3280202	0					
ANR	3281788	Callee	* info -> fprintf_func		3280202	0					
ANR	3281789	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281790	UnaryOperator	*		3280202	0					
ANR	3281791	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281792	Identifier	info		3280202	0					
ANR	3281793	Identifier	fprintf_func		3280202	1					
ANR	3281794	ArgumentList	info -> stream		3280202	1					
ANR	3281795	Argument	info -> stream		3280202	0					
ANR	3281796	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281797	Identifier	info		3280202	0					
ANR	3281798	Identifier	stream		3280202	1					
ANR	3281799	Argument	"""0x%lx"""		3280202	1					
ANR	3281800	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281801	Argument	( l >> OP_SH_CODE20 ) & OP_MASK_CODE20		3280202	2					
ANR	3281802	BitAndExpression	( l >> OP_SH_CODE20 ) & OP_MASK_CODE20		3280202	0		&			
ANR	3281803	ShiftExpression	l >> OP_SH_CODE20		3280202	0		>>			
ANR	3281804	Identifier	l		3280202	0					
ANR	3281805	Identifier	OP_SH_CODE20		3280202	1					
ANR	3281806	Identifier	OP_MASK_CODE20		3280202	1					
ANR	3281807	BreakStatement	break ;	1096:3:33310:33315	3280202	129	True				
ANR	3281808	Label	case 'J' :	1098:1:33319:33327	3280202	130	True				
ANR	3281809	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE19 ) & OP_MASK_CODE19 )"	1099:3:33332:33420	3280202	131	True				
ANR	3281810	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_CODE19 ) & OP_MASK_CODE19 )"		3280202	0					
ANR	3281811	Callee	* info -> fprintf_func		3280202	0					
ANR	3281812	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281813	UnaryOperator	*		3280202	0					
ANR	3281814	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281815	Identifier	info		3280202	0					
ANR	3281816	Identifier	fprintf_func		3280202	1					
ANR	3281817	ArgumentList	info -> stream		3280202	1					
ANR	3281818	Argument	info -> stream		3280202	0					
ANR	3281819	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281820	Identifier	info		3280202	0					
ANR	3281821	Identifier	stream		3280202	1					
ANR	3281822	Argument	"""0x%lx"""		3280202	1					
ANR	3281823	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3281824	Argument	( l >> OP_SH_CODE19 ) & OP_MASK_CODE19		3280202	2					
ANR	3281825	BitAndExpression	( l >> OP_SH_CODE19 ) & OP_MASK_CODE19		3280202	0		&			
ANR	3281826	ShiftExpression	l >> OP_SH_CODE19		3280202	0		>>			
ANR	3281827	Identifier	l		3280202	0					
ANR	3281828	Identifier	OP_SH_CODE19		3280202	1					
ANR	3281829	Identifier	OP_MASK_CODE19		3280202	1					
ANR	3281830	BreakStatement	break ;	1101:3:33425:33430	3280202	132	True				
ANR	3281831	Label	case 'S' :	1103:1:33434:33442	3280202	133	True				
ANR	3281832	Label	case 'V' :	1104:1:33445:33453	3280202	134	True				
ANR	3281833	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FS ) & OP_MASK_FS ] )"	1105:3:33458:33551	3280202	135	True				
ANR	3281834	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FS ) & OP_MASK_FS ] )"		3280202	0					
ANR	3281835	Callee	* info -> fprintf_func		3280202	0					
ANR	3281836	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281837	UnaryOperator	*		3280202	0					
ANR	3281838	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281839	Identifier	info		3280202	0					
ANR	3281840	Identifier	fprintf_func		3280202	1					
ANR	3281841	ArgumentList	info -> stream		3280202	1					
ANR	3281842	Argument	info -> stream		3280202	0					
ANR	3281843	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281844	Identifier	info		3280202	0					
ANR	3281845	Identifier	stream		3280202	1					
ANR	3281846	Argument	"""%s"""		3280202	1					
ANR	3281847	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281848	Argument	mips_fpr_names [ ( l >> OP_SH_FS ) & OP_MASK_FS ]		3280202	2					
ANR	3281849	ArrayIndexing	mips_fpr_names [ ( l >> OP_SH_FS ) & OP_MASK_FS ]		3280202	0					
ANR	3281850	Identifier	mips_fpr_names		3280202	0					
ANR	3281851	BitAndExpression	( l >> OP_SH_FS ) & OP_MASK_FS		3280202	1		&			
ANR	3281852	ShiftExpression	l >> OP_SH_FS		3280202	0		>>			
ANR	3281853	Identifier	l		3280202	0					
ANR	3281854	Identifier	OP_SH_FS		3280202	1					
ANR	3281855	Identifier	OP_MASK_FS		3280202	1					
ANR	3281856	BreakStatement	break ;	1107:3:33556:33561	3280202	136	True				
ANR	3281857	Label	case 'T' :	1109:1:33565:33573	3280202	137	True				
ANR	3281858	Label	case 'W' :	1110:1:33576:33584	3280202	138	True				
ANR	3281859	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FT ) & OP_MASK_FT ] )"	1111:3:33589:33682	3280202	139	True				
ANR	3281860	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FT ) & OP_MASK_FT ] )"		3280202	0					
ANR	3281861	Callee	* info -> fprintf_func		3280202	0					
ANR	3281862	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281863	UnaryOperator	*		3280202	0					
ANR	3281864	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281865	Identifier	info		3280202	0					
ANR	3281866	Identifier	fprintf_func		3280202	1					
ANR	3281867	ArgumentList	info -> stream		3280202	1					
ANR	3281868	Argument	info -> stream		3280202	0					
ANR	3281869	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281870	Identifier	info		3280202	0					
ANR	3281871	Identifier	stream		3280202	1					
ANR	3281872	Argument	"""%s"""		3280202	1					
ANR	3281873	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281874	Argument	mips_fpr_names [ ( l >> OP_SH_FT ) & OP_MASK_FT ]		3280202	2					
ANR	3281875	ArrayIndexing	mips_fpr_names [ ( l >> OP_SH_FT ) & OP_MASK_FT ]		3280202	0					
ANR	3281876	Identifier	mips_fpr_names		3280202	0					
ANR	3281877	BitAndExpression	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	1		&			
ANR	3281878	ShiftExpression	l >> OP_SH_FT		3280202	0		>>			
ANR	3281879	Identifier	l		3280202	0					
ANR	3281880	Identifier	OP_SH_FT		3280202	1					
ANR	3281881	Identifier	OP_MASK_FT		3280202	1					
ANR	3281882	BreakStatement	break ;	1113:3:33687:33692	3280202	140	True				
ANR	3281883	Label	case 'D' :	1115:1:33696:33704	3280202	141	True				
ANR	3281884	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FD ) & OP_MASK_FD ] )"	1116:3:33709:33802	3280202	142	True				
ANR	3281885	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FD ) & OP_MASK_FD ] )"		3280202	0					
ANR	3281886	Callee	* info -> fprintf_func		3280202	0					
ANR	3281887	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281888	UnaryOperator	*		3280202	0					
ANR	3281889	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281890	Identifier	info		3280202	0					
ANR	3281891	Identifier	fprintf_func		3280202	1					
ANR	3281892	ArgumentList	info -> stream		3280202	1					
ANR	3281893	Argument	info -> stream		3280202	0					
ANR	3281894	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281895	Identifier	info		3280202	0					
ANR	3281896	Identifier	stream		3280202	1					
ANR	3281897	Argument	"""%s"""		3280202	1					
ANR	3281898	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281899	Argument	mips_fpr_names [ ( l >> OP_SH_FD ) & OP_MASK_FD ]		3280202	2					
ANR	3281900	ArrayIndexing	mips_fpr_names [ ( l >> OP_SH_FD ) & OP_MASK_FD ]		3280202	0					
ANR	3281901	Identifier	mips_fpr_names		3280202	0					
ANR	3281902	BitAndExpression	( l >> OP_SH_FD ) & OP_MASK_FD		3280202	1		&			
ANR	3281903	ShiftExpression	l >> OP_SH_FD		3280202	0		>>			
ANR	3281904	Identifier	l		3280202	0					
ANR	3281905	Identifier	OP_SH_FD		3280202	1					
ANR	3281906	Identifier	OP_MASK_FD		3280202	1					
ANR	3281907	BreakStatement	break ;	1118:3:33807:33812	3280202	143	True				
ANR	3281908	Label	case 'R' :	1120:1:33816:33824	3280202	144	True				
ANR	3281909	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FR ) & OP_MASK_FR ] )"	1121:3:33829:33922	3280202	145	True				
ANR	3281910	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_fpr_names [ ( l >> OP_SH_FR ) & OP_MASK_FR ] )"		3280202	0					
ANR	3281911	Callee	* info -> fprintf_func		3280202	0					
ANR	3281912	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281913	UnaryOperator	*		3280202	0					
ANR	3281914	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281915	Identifier	info		3280202	0					
ANR	3281916	Identifier	fprintf_func		3280202	1					
ANR	3281917	ArgumentList	info -> stream		3280202	1					
ANR	3281918	Argument	info -> stream		3280202	0					
ANR	3281919	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281920	Identifier	info		3280202	0					
ANR	3281921	Identifier	stream		3280202	1					
ANR	3281922	Argument	"""%s"""		3280202	1					
ANR	3281923	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281924	Argument	mips_fpr_names [ ( l >> OP_SH_FR ) & OP_MASK_FR ]		3280202	2					
ANR	3281925	ArrayIndexing	mips_fpr_names [ ( l >> OP_SH_FR ) & OP_MASK_FR ]		3280202	0					
ANR	3281926	Identifier	mips_fpr_names		3280202	0					
ANR	3281927	BitAndExpression	( l >> OP_SH_FR ) & OP_MASK_FR		3280202	1		&			
ANR	3281928	ShiftExpression	l >> OP_SH_FR		3280202	0		>>			
ANR	3281929	Identifier	l		3280202	0					
ANR	3281930	Identifier	OP_SH_FR		3280202	1					
ANR	3281931	Identifier	OP_MASK_FR		3280202	1					
ANR	3281932	BreakStatement	break ;	1123:3:33927:33932	3280202	146	True				
ANR	3281933	Label	case 'E' :	1125:1:33936:33944	3280202	147	True				
ANR	3281934	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$%ld"" , ( l >> OP_SH_RT ) & OP_MASK_RT )"	1133:3:34270:34349	3280202	148	True				
ANR	3281935	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$%ld"" , ( l >> OP_SH_RT ) & OP_MASK_RT )"		3280202	0					
ANR	3281936	Callee	* info -> fprintf_func		3280202	0					
ANR	3281937	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281938	UnaryOperator	*		3280202	0					
ANR	3281939	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281940	Identifier	info		3280202	0					
ANR	3281941	Identifier	fprintf_func		3280202	1					
ANR	3281942	ArgumentList	info -> stream		3280202	1					
ANR	3281943	Argument	info -> stream		3280202	0					
ANR	3281944	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281945	Identifier	info		3280202	0					
ANR	3281946	Identifier	stream		3280202	1					
ANR	3281947	Argument	"""$%ld"""		3280202	1					
ANR	3281948	PrimaryExpression	"""$%ld"""		3280202	0					
ANR	3281949	Argument	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	2					
ANR	3281950	BitAndExpression	( l >> OP_SH_RT ) & OP_MASK_RT		3280202	0		&			
ANR	3281951	ShiftExpression	l >> OP_SH_RT		3280202	0		>>			
ANR	3281952	Identifier	l		3280202	0					
ANR	3281953	Identifier	OP_SH_RT		3280202	1					
ANR	3281954	Identifier	OP_MASK_RT		3280202	1					
ANR	3281955	BreakStatement	break ;	1135:3:34354:34359	3280202	149	True				
ANR	3281956	Label	case 'G' :	1137:1:34363:34371	3280202	150	True				
ANR	3281957	ExpressionStatement	op = ( l >> OP_SH_OP ) & OP_MASK_OP	1142:3:34589:34622	3280202	151	True				
ANR	3281958	AssignmentExpression	op = ( l >> OP_SH_OP ) & OP_MASK_OP		3280202	0		=			
ANR	3281959	Identifier	op		3280202	0					
ANR	3281960	BitAndExpression	( l >> OP_SH_OP ) & OP_MASK_OP		3280202	1		&			
ANR	3281961	ShiftExpression	l >> OP_SH_OP		3280202	0		>>			
ANR	3281962	Identifier	l		3280202	0					
ANR	3281963	Identifier	OP_SH_OP		3280202	1					
ANR	3281964	Identifier	OP_MASK_OP		3280202	1					
ANR	3281965	IfStatement	if ( op == OP_OP_COP0 )		3280202	152					
ANR	3281966	Condition	op == OP_OP_COP0	1143:7:34631:34646	3280202	0	True				
ANR	3281967	EqualityExpression	op == OP_OP_COP0		3280202	0		==			
ANR	3281968	Identifier	op		3280202	0					
ANR	3281969	Identifier	OP_OP_COP0		3280202	1					
ANR	3281970	CompoundStatement		405:25:10639:10639	3280202	1					
ANR	3281971	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_cp0_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ] )"	1144:4:34655:34748	3280202	0	True				
ANR	3281972	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_cp0_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ] )"		3280202	0					
ANR	3281973	Callee	* info -> fprintf_func		3280202	0					
ANR	3281974	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3281975	UnaryOperator	*		3280202	0					
ANR	3281976	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3281977	Identifier	info		3280202	0					
ANR	3281978	Identifier	fprintf_func		3280202	1					
ANR	3281979	ArgumentList	info -> stream		3280202	1					
ANR	3281980	Argument	info -> stream		3280202	0					
ANR	3281981	PtrMemberAccess	info -> stream		3280202	0					
ANR	3281982	Identifier	info		3280202	0					
ANR	3281983	Identifier	stream		3280202	1					
ANR	3281984	Argument	"""%s"""		3280202	1					
ANR	3281985	PrimaryExpression	"""%s"""		3280202	0					
ANR	3281986	Argument	mips_cp0_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ]		3280202	2					
ANR	3281987	ArrayIndexing	mips_cp0_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ]		3280202	0					
ANR	3281988	Identifier	mips_cp0_names		3280202	0					
ANR	3281989	BitAndExpression	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	1		&			
ANR	3281990	ShiftExpression	l >> OP_SH_RD		3280202	0		>>			
ANR	3281991	Identifier	l		3280202	0					
ANR	3281992	Identifier	OP_SH_RD		3280202	1					
ANR	3281993	Identifier	OP_MASK_RD		3280202	1					
ANR	3281994	ElseStatement	else		3280202	0					
ANR	3281995	CompoundStatement		408:10:10750:10750	3280202	0					
ANR	3281996	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$%ld"" , ( l >> OP_SH_RD ) & OP_MASK_RD )"	1147:4:34766:34845	3280202	0	True				
ANR	3281997	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$%ld"" , ( l >> OP_SH_RD ) & OP_MASK_RD )"		3280202	0					
ANR	3281998	Callee	* info -> fprintf_func		3280202	0					
ANR	3281999	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282000	UnaryOperator	*		3280202	0					
ANR	3282001	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282002	Identifier	info		3280202	0					
ANR	3282003	Identifier	fprintf_func		3280202	1					
ANR	3282004	ArgumentList	info -> stream		3280202	1					
ANR	3282005	Argument	info -> stream		3280202	0					
ANR	3282006	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282007	Identifier	info		3280202	0					
ANR	3282008	Identifier	stream		3280202	1					
ANR	3282009	Argument	"""$%ld"""		3280202	1					
ANR	3282010	PrimaryExpression	"""$%ld"""		3280202	0					
ANR	3282011	Argument	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	2					
ANR	3282012	BitAndExpression	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	0		&			
ANR	3282013	ShiftExpression	l >> OP_SH_RD		3280202	0		>>			
ANR	3282014	Identifier	l		3280202	0					
ANR	3282015	Identifier	OP_SH_RD		3280202	1					
ANR	3282016	Identifier	OP_MASK_RD		3280202	1					
ANR	3282017	BreakStatement	break ;	1150:3:34855:34860	3280202	153	True				
ANR	3282018	Label	case 'K' :	1152:1:34864:34872	3280202	154	True				
ANR	3282019	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_hwr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ] )"	1153:3:34877:34970	3280202	155	True				
ANR	3282020	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_hwr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ] )"		3280202	0					
ANR	3282021	Callee	* info -> fprintf_func		3280202	0					
ANR	3282022	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282023	UnaryOperator	*		3280202	0					
ANR	3282024	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282025	Identifier	info		3280202	0					
ANR	3282026	Identifier	fprintf_func		3280202	1					
ANR	3282027	ArgumentList	info -> stream		3280202	1					
ANR	3282028	Argument	info -> stream		3280202	0					
ANR	3282029	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282030	Identifier	info		3280202	0					
ANR	3282031	Identifier	stream		3280202	1					
ANR	3282032	Argument	"""%s"""		3280202	1					
ANR	3282033	PrimaryExpression	"""%s"""		3280202	0					
ANR	3282034	Argument	mips_hwr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ]		3280202	2					
ANR	3282035	ArrayIndexing	mips_hwr_names [ ( l >> OP_SH_RD ) & OP_MASK_RD ]		3280202	0					
ANR	3282036	Identifier	mips_hwr_names		3280202	0					
ANR	3282037	BitAndExpression	( l >> OP_SH_RD ) & OP_MASK_RD		3280202	1		&			
ANR	3282038	ShiftExpression	l >> OP_SH_RD		3280202	0		>>			
ANR	3282039	Identifier	l		3280202	0					
ANR	3282040	Identifier	OP_SH_RD		3280202	1					
ANR	3282041	Identifier	OP_MASK_RD		3280202	1					
ANR	3282042	BreakStatement	break ;	1155:3:34975:34980	3280202	156	True				
ANR	3282043	Label	case 'N' :	1157:1:34984:34992	3280202	157	True				
ANR	3282044	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ( ( opp -> pinfo & ( FP_D | FP_S ) ) != 0 ? ""$fcc%ld"" : ""$cc%ld"" ) , ( l >> OP_SH_BCC ) & OP_MASK_BCC )"	1158:3:34997:35141	3280202	158	True				
ANR	3282045	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ( ( opp -> pinfo & ( FP_D | FP_S ) ) != 0 ? ""$fcc%ld"" : ""$cc%ld"" ) , ( l >> OP_SH_BCC ) & OP_MASK_BCC )"		3280202	0					
ANR	3282046	Callee	* info -> fprintf_func		3280202	0					
ANR	3282047	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282048	UnaryOperator	*		3280202	0					
ANR	3282049	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282050	Identifier	info		3280202	0					
ANR	3282051	Identifier	fprintf_func		3280202	1					
ANR	3282052	ArgumentList	info -> stream		3280202	1					
ANR	3282053	Argument	info -> stream		3280202	0					
ANR	3282054	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282055	Identifier	info		3280202	0					
ANR	3282056	Identifier	stream		3280202	1					
ANR	3282057	Argument	"( opp -> pinfo & ( FP_D | FP_S ) ) != 0 ? ""$fcc%ld"" : ""$cc%ld"""		3280202	1					
ANR	3282058	ConditionalExpression	"( opp -> pinfo & ( FP_D | FP_S ) ) != 0 ? ""$fcc%ld"" : ""$cc%ld"""		3280202	0					
ANR	3282059	Condition	( opp -> pinfo & ( FP_D | FP_S ) ) != 0		3280202	0					
ANR	3282060	EqualityExpression	( opp -> pinfo & ( FP_D | FP_S ) ) != 0		3280202	0		!=			
ANR	3282061	BitAndExpression	opp -> pinfo & ( FP_D | FP_S )		3280202	0		&			
ANR	3282062	PtrMemberAccess	opp -> pinfo		3280202	0					
ANR	3282063	Identifier	opp		3280202	0					
ANR	3282064	Identifier	pinfo		3280202	1					
ANR	3282065	InclusiveOrExpression	FP_D | FP_S		3280202	1		|			
ANR	3282066	Identifier	FP_D		3280202	0					
ANR	3282067	Identifier	FP_S		3280202	1					
ANR	3282068	PrimaryExpression	0		3280202	1					
ANR	3282069	PrimaryExpression	"""$fcc%ld"""		3280202	1					
ANR	3282070	PrimaryExpression	"""$cc%ld"""		3280202	2					
ANR	3282071	Argument	( l >> OP_SH_BCC ) & OP_MASK_BCC		3280202	2					
ANR	3282072	BitAndExpression	( l >> OP_SH_BCC ) & OP_MASK_BCC		3280202	0		&			
ANR	3282073	ShiftExpression	l >> OP_SH_BCC		3280202	0		>>			
ANR	3282074	Identifier	l		3280202	0					
ANR	3282075	Identifier	OP_SH_BCC		3280202	1					
ANR	3282076	Identifier	OP_MASK_BCC		3280202	1					
ANR	3282077	BreakStatement	break ;	1162:3:35146:35151	3280202	159	True				
ANR	3282078	Label	case 'M' :	1164:1:35155:35163	3280202	160	True				
ANR	3282079	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$fcc%ld"" , ( l >> OP_SH_CCC ) & OP_MASK_CCC )"	1165:3:35168:35252	3280202	161	True				
ANR	3282080	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$fcc%ld"" , ( l >> OP_SH_CCC ) & OP_MASK_CCC )"		3280202	0					
ANR	3282081	Callee	* info -> fprintf_func		3280202	0					
ANR	3282082	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282083	UnaryOperator	*		3280202	0					
ANR	3282084	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282085	Identifier	info		3280202	0					
ANR	3282086	Identifier	fprintf_func		3280202	1					
ANR	3282087	ArgumentList	info -> stream		3280202	1					
ANR	3282088	Argument	info -> stream		3280202	0					
ANR	3282089	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282090	Identifier	info		3280202	0					
ANR	3282091	Identifier	stream		3280202	1					
ANR	3282092	Argument	"""$fcc%ld"""		3280202	1					
ANR	3282093	PrimaryExpression	"""$fcc%ld"""		3280202	0					
ANR	3282094	Argument	( l >> OP_SH_CCC ) & OP_MASK_CCC		3280202	2					
ANR	3282095	BitAndExpression	( l >> OP_SH_CCC ) & OP_MASK_CCC		3280202	0		&			
ANR	3282096	ShiftExpression	l >> OP_SH_CCC		3280202	0		>>			
ANR	3282097	Identifier	l		3280202	0					
ANR	3282098	Identifier	OP_SH_CCC		3280202	1					
ANR	3282099	Identifier	OP_MASK_CCC		3280202	1					
ANR	3282100	BreakStatement	break ;	1167:3:35257:35262	3280202	162	True				
ANR	3282101	Label	case 'P' :	1169:1:35266:35274	3280202	163	True				
ANR	3282102	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_PERFREG ) & OP_MASK_PERFREG )"	1170:3:35279:35367	3280202	164	True				
ANR	3282103	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_PERFREG ) & OP_MASK_PERFREG )"		3280202	0					
ANR	3282104	Callee	* info -> fprintf_func		3280202	0					
ANR	3282105	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282106	UnaryOperator	*		3280202	0					
ANR	3282107	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282108	Identifier	info		3280202	0					
ANR	3282109	Identifier	fprintf_func		3280202	1					
ANR	3282110	ArgumentList	info -> stream		3280202	1					
ANR	3282111	Argument	info -> stream		3280202	0					
ANR	3282112	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282113	Identifier	info		3280202	0					
ANR	3282114	Identifier	stream		3280202	1					
ANR	3282115	Argument	"""%ld"""		3280202	1					
ANR	3282116	PrimaryExpression	"""%ld"""		3280202	0					
ANR	3282117	Argument	( l >> OP_SH_PERFREG ) & OP_MASK_PERFREG		3280202	2					
ANR	3282118	BitAndExpression	( l >> OP_SH_PERFREG ) & OP_MASK_PERFREG		3280202	0		&			
ANR	3282119	ShiftExpression	l >> OP_SH_PERFREG		3280202	0		>>			
ANR	3282120	Identifier	l		3280202	0					
ANR	3282121	Identifier	OP_SH_PERFREG		3280202	1					
ANR	3282122	Identifier	OP_MASK_PERFREG		3280202	1					
ANR	3282123	BreakStatement	break ;	1172:3:35372:35377	3280202	165	True				
ANR	3282124	Label	case 'e' :	1174:1:35381:35389	3280202	166	True				
ANR	3282125	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_VECBYTE ) & OP_MASK_VECBYTE )"	1175:3:35394:35482	3280202	167	True				
ANR	3282126	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_VECBYTE ) & OP_MASK_VECBYTE )"		3280202	0					
ANR	3282127	Callee	* info -> fprintf_func		3280202	0					
ANR	3282128	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282129	UnaryOperator	*		3280202	0					
ANR	3282130	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282131	Identifier	info		3280202	0					
ANR	3282132	Identifier	fprintf_func		3280202	1					
ANR	3282133	ArgumentList	info -> stream		3280202	1					
ANR	3282134	Argument	info -> stream		3280202	0					
ANR	3282135	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282136	Identifier	info		3280202	0					
ANR	3282137	Identifier	stream		3280202	1					
ANR	3282138	Argument	"""%ld"""		3280202	1					
ANR	3282139	PrimaryExpression	"""%ld"""		3280202	0					
ANR	3282140	Argument	( l >> OP_SH_VECBYTE ) & OP_MASK_VECBYTE		3280202	2					
ANR	3282141	BitAndExpression	( l >> OP_SH_VECBYTE ) & OP_MASK_VECBYTE		3280202	0		&			
ANR	3282142	ShiftExpression	l >> OP_SH_VECBYTE		3280202	0		>>			
ANR	3282143	Identifier	l		3280202	0					
ANR	3282144	Identifier	OP_SH_VECBYTE		3280202	1					
ANR	3282145	Identifier	OP_MASK_VECBYTE		3280202	1					
ANR	3282146	BreakStatement	break ;	1177:3:35487:35492	3280202	168	True				
ANR	3282147	Label	case '%' :	1179:1:35496:35504	3280202	169	True				
ANR	3282148	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_VECALIGN ) & OP_MASK_VECALIGN )"	1180:3:35509:35599	3280202	170	True				
ANR	3282149	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_VECALIGN ) & OP_MASK_VECALIGN )"		3280202	0					
ANR	3282150	Callee	* info -> fprintf_func		3280202	0					
ANR	3282151	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282152	UnaryOperator	*		3280202	0					
ANR	3282153	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282154	Identifier	info		3280202	0					
ANR	3282155	Identifier	fprintf_func		3280202	1					
ANR	3282156	ArgumentList	info -> stream		3280202	1					
ANR	3282157	Argument	info -> stream		3280202	0					
ANR	3282158	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282159	Identifier	info		3280202	0					
ANR	3282160	Identifier	stream		3280202	1					
ANR	3282161	Argument	"""%ld"""		3280202	1					
ANR	3282162	PrimaryExpression	"""%ld"""		3280202	0					
ANR	3282163	Argument	( l >> OP_SH_VECALIGN ) & OP_MASK_VECALIGN		3280202	2					
ANR	3282164	BitAndExpression	( l >> OP_SH_VECALIGN ) & OP_MASK_VECALIGN		3280202	0		&			
ANR	3282165	ShiftExpression	l >> OP_SH_VECALIGN		3280202	0		>>			
ANR	3282166	Identifier	l		3280202	0					
ANR	3282167	Identifier	OP_SH_VECALIGN		3280202	1					
ANR	3282168	Identifier	OP_MASK_VECALIGN		3280202	1					
ANR	3282169	BreakStatement	break ;	1182:3:35604:35609	3280202	171	True				
ANR	3282170	Label	case 'H' :	1184:1:35613:35621	3280202	172	True				
ANR	3282171	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_SEL ) & OP_MASK_SEL )"	1185:3:35626:35706	3280202	173	True				
ANR	3282172	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_SEL ) & OP_MASK_SEL )"		3280202	0					
ANR	3282173	Callee	* info -> fprintf_func		3280202	0					
ANR	3282174	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282175	UnaryOperator	*		3280202	0					
ANR	3282176	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282177	Identifier	info		3280202	0					
ANR	3282178	Identifier	fprintf_func		3280202	1					
ANR	3282179	ArgumentList	info -> stream		3280202	1					
ANR	3282180	Argument	info -> stream		3280202	0					
ANR	3282181	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282182	Identifier	info		3280202	0					
ANR	3282183	Identifier	stream		3280202	1					
ANR	3282184	Argument	"""%ld"""		3280202	1					
ANR	3282185	PrimaryExpression	"""%ld"""		3280202	0					
ANR	3282186	Argument	( l >> OP_SH_SEL ) & OP_MASK_SEL		3280202	2					
ANR	3282187	BitAndExpression	( l >> OP_SH_SEL ) & OP_MASK_SEL		3280202	0		&			
ANR	3282188	ShiftExpression	l >> OP_SH_SEL		3280202	0		>>			
ANR	3282189	Identifier	l		3280202	0					
ANR	3282190	Identifier	OP_SH_SEL		3280202	1					
ANR	3282191	Identifier	OP_MASK_SEL		3280202	1					
ANR	3282192	BreakStatement	break ;	1187:3:35711:35716	3280202	174	True				
ANR	3282193	Label	case 'O' :	1189:1:35720:35728	3280202	175	True				
ANR	3282194	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_ALN ) & OP_MASK_ALN )"	1190:3:35733:35813	3280202	176	True				
ANR	3282195	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , ( l >> OP_SH_ALN ) & OP_MASK_ALN )"		3280202	0					
ANR	3282196	Callee	* info -> fprintf_func		3280202	0					
ANR	3282197	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282198	UnaryOperator	*		3280202	0					
ANR	3282199	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282200	Identifier	info		3280202	0					
ANR	3282201	Identifier	fprintf_func		3280202	1					
ANR	3282202	ArgumentList	info -> stream		3280202	1					
ANR	3282203	Argument	info -> stream		3280202	0					
ANR	3282204	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282205	Identifier	info		3280202	0					
ANR	3282206	Identifier	stream		3280202	1					
ANR	3282207	Argument	"""%ld"""		3280202	1					
ANR	3282208	PrimaryExpression	"""%ld"""		3280202	0					
ANR	3282209	Argument	( l >> OP_SH_ALN ) & OP_MASK_ALN		3280202	2					
ANR	3282210	BitAndExpression	( l >> OP_SH_ALN ) & OP_MASK_ALN		3280202	0		&			
ANR	3282211	ShiftExpression	l >> OP_SH_ALN		3280202	0		>>			
ANR	3282212	Identifier	l		3280202	0					
ANR	3282213	Identifier	OP_SH_ALN		3280202	1					
ANR	3282214	Identifier	OP_MASK_ALN		3280202	1					
ANR	3282215	BreakStatement	break ;	1192:3:35818:35823	3280202	177	True				
ANR	3282216	Label	case 'Q' :	1194:1:35827:35835	3280202	178	True				
ANR	3282217	CompoundStatement		458:5:11837:11889	3280202	179					
ANR	3282218	IdentifierDeclStatement	unsigned int vsel = ( l >> OP_SH_VSEL ) & OP_MASK_VSEL ;	1196:5:35847:35899	3280202	0	True				
ANR	3282219	IdentifierDecl	vsel = ( l >> OP_SH_VSEL ) & OP_MASK_VSEL		3280202	0					
ANR	3282220	IdentifierDeclType	unsigned int		3280202	0					
ANR	3282221	Identifier	vsel		3280202	1					
ANR	3282222	AssignmentExpression	vsel = ( l >> OP_SH_VSEL ) & OP_MASK_VSEL		3280202	2		=			
ANR	3282223	Identifier	vsel		3280202	0					
ANR	3282224	BitAndExpression	( l >> OP_SH_VSEL ) & OP_MASK_VSEL		3280202	1		&			
ANR	3282225	ShiftExpression	l >> OP_SH_VSEL		3280202	0		>>			
ANR	3282226	Identifier	l		3280202	0					
ANR	3282227	Identifier	OP_SH_VSEL		3280202	1					
ANR	3282228	Identifier	OP_MASK_VSEL		3280202	1					
ANR	3282229	IfStatement	if ( ( vsel & 0x10 ) == 0 )		3280202	1					
ANR	3282230	Condition	( vsel & 0x10 ) == 0	1198:9:35911:35928	3280202	0	True				
ANR	3282231	EqualityExpression	( vsel & 0x10 ) == 0		3280202	0		==			
ANR	3282232	BitAndExpression	vsel & 0x10		3280202	0		&			
ANR	3282233	Identifier	vsel		3280202	0					
ANR	3282234	PrimaryExpression	0x10		3280202	1					
ANR	3282235	PrimaryExpression	0		3280202	1					
ANR	3282236	CompoundStatement		462:2:11932:11939	3280202	1					
ANR	3282237	IdentifierDeclStatement	int fmt ;	1200:2:35942:35949	3280202	0	True				
ANR	3282238	IdentifierDecl	fmt		3280202	0					
ANR	3282239	IdentifierDeclType	int		3280202	0					
ANR	3282240	Identifier	fmt		3280202	1					
ANR	3282241	ExpressionStatement	vsel &= 0x0f	1202:2:35954:35966	3280202	1	True				
ANR	3282242	AssignmentExpression	vsel &= 0x0f		3280202	0		&=			
ANR	3282243	Identifier	vsel		3280202	0					
ANR	3282244	PrimaryExpression	0x0f		3280202	1					
ANR	3282245	ForStatement	"for ( fmt = 0 ; fmt < 3 ; fmt ++ , vsel >>= 1 )"		3280202	2					
ANR	3282246	ForInit	fmt = 0 ;	1203:7:35975:35982	3280202	0	True				
ANR	3282247	AssignmentExpression	fmt = 0		3280202	0		=			
ANR	3282248	Identifier	fmt		3280202	0					
ANR	3282249	PrimaryExpression	0		3280202	1					
ANR	3282250	Condition	fmt < 3	1203:16:35984:35990	3280202	1	True				
ANR	3282251	RelationalExpression	fmt < 3		3280202	0		<			
ANR	3282252	Identifier	fmt		3280202	0					
ANR	3282253	PrimaryExpression	3		3280202	1					
ANR	3282254	Expression	"fmt ++ , vsel >>= 1"	1203:25:35993:36009	3280202	2	True				
ANR	3282255	PostIncDecOperationExpression	fmt ++		3280202	0					
ANR	3282256	Identifier	fmt		3280202	0					
ANR	3282257	IncDec	++		3280202	1					
ANR	3282258	AssignmentExpression	vsel >>= 1		3280202	1		>>=			
ANR	3282259	Identifier	vsel		3280202	0					
ANR	3282260	PrimaryExpression	1		3280202	1					
ANR	3282261	CompoundStatement		465:44:12002:12002	3280202	3					
ANR	3282262	IfStatement	if ( ( vsel & 1 ) == 0 )		3280202	0					
ANR	3282263	Condition	( vsel & 1 ) == 0	1204:7:36021:36035	3280202	0	True				
ANR	3282264	EqualityExpression	( vsel & 1 ) == 0		3280202	0		==			
ANR	3282265	BitAndExpression	vsel & 1		3280202	0		&			
ANR	3282266	Identifier	vsel		3280202	0					
ANR	3282267	PrimaryExpression	1		3280202	1					
ANR	3282268	PrimaryExpression	0		3280202	1					
ANR	3282269	CompoundStatement		466:24:12028:12028	3280202	1					
ANR	3282270	BreakStatement	break ;	1205:4:36044:36049	3280202	0	True				
ANR	3282271	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld[%d]"" , ( l >> OP_SH_FT ) & OP_MASK_FT , vsel >> 1 )"	1208:2:36062:36174	3280202	3	True				
ANR	3282272	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld[%d]"" , ( l >> OP_SH_FT ) & OP_MASK_FT , vsel >> 1 )"		3280202	0					
ANR	3282273	Callee	* info -> fprintf_func		3280202	0					
ANR	3282274	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282275	UnaryOperator	*		3280202	0					
ANR	3282276	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282277	Identifier	info		3280202	0					
ANR	3282278	Identifier	fprintf_func		3280202	1					
ANR	3282279	ArgumentList	info -> stream		3280202	1					
ANR	3282280	Argument	info -> stream		3280202	0					
ANR	3282281	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282282	Identifier	info		3280202	0					
ANR	3282283	Identifier	stream		3280202	1					
ANR	3282284	Argument	"""$v%ld[%d]"""		3280202	1					
ANR	3282285	PrimaryExpression	"""$v%ld[%d]"""		3280202	0					
ANR	3282286	Argument	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	2					
ANR	3282287	BitAndExpression	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	0		&			
ANR	3282288	ShiftExpression	l >> OP_SH_FT		3280202	0		>>			
ANR	3282289	Identifier	l		3280202	0					
ANR	3282290	Identifier	OP_SH_FT		3280202	1					
ANR	3282291	Identifier	OP_MASK_FT		3280202	1					
ANR	3282292	Argument	vsel >> 1		3280202	3					
ANR	3282293	ShiftExpression	vsel >> 1		3280202	0		>>			
ANR	3282294	Identifier	vsel		3280202	0					
ANR	3282295	PrimaryExpression	1		3280202	1					
ANR	3282296	ElseStatement	else		3280202	0					
ANR	3282297	IfStatement	if ( ( vsel & 0x08 ) == 0 )		3280202	0					
ANR	3282298	Condition	( vsel & 0x08 ) == 0	1212:14:36199:36216	3280202	0	True				
ANR	3282299	EqualityExpression	( vsel & 0x08 ) == 0		3280202	0		==			
ANR	3282300	BitAndExpression	vsel & 0x08		3280202	0		&			
ANR	3282301	Identifier	vsel		3280202	0					
ANR	3282302	PrimaryExpression	0x08		3280202	1					
ANR	3282303	PrimaryExpression	0		3280202	1					
ANR	3282304	CompoundStatement		475:7:12216:12216	3280202	1					
ANR	3282305	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FT ) & OP_MASK_FT )"	1214:2:36230:36316	3280202	0	True				
ANR	3282306	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FT ) & OP_MASK_FT )"		3280202	0					
ANR	3282307	Callee	* info -> fprintf_func		3280202	0					
ANR	3282308	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282309	UnaryOperator	*		3280202	0					
ANR	3282310	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282311	Identifier	info		3280202	0					
ANR	3282312	Identifier	fprintf_func		3280202	1					
ANR	3282313	ArgumentList	info -> stream		3280202	1					
ANR	3282314	Argument	info -> stream		3280202	0					
ANR	3282315	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282316	Identifier	info		3280202	0					
ANR	3282317	Identifier	stream		3280202	1					
ANR	3282318	Argument	"""$v%ld"""		3280202	1					
ANR	3282319	PrimaryExpression	"""$v%ld"""		3280202	0					
ANR	3282320	Argument	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	2					
ANR	3282321	BitAndExpression	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	0		&			
ANR	3282322	ShiftExpression	l >> OP_SH_FT		3280202	0		>>			
ANR	3282323	Identifier	l		3280202	0					
ANR	3282324	Identifier	OP_SH_FT		3280202	1					
ANR	3282325	Identifier	OP_MASK_FT		3280202	1					
ANR	3282326	ElseStatement	else		3280202	0					
ANR	3282327	CompoundStatement		480:7:12334:12334	3280202	0					
ANR	3282328	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_FT ) & OP_MASK_FT )"	1219:2:36348:36434	3280202	0	True				
ANR	3282329	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , ( l >> OP_SH_FT ) & OP_MASK_FT )"		3280202	0					
ANR	3282330	Callee	* info -> fprintf_func		3280202	0					
ANR	3282331	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282332	UnaryOperator	*		3280202	0					
ANR	3282333	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282334	Identifier	info		3280202	0					
ANR	3282335	Identifier	fprintf_func		3280202	1					
ANR	3282336	ArgumentList	info -> stream		3280202	1					
ANR	3282337	Argument	info -> stream		3280202	0					
ANR	3282338	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282339	Identifier	info		3280202	0					
ANR	3282340	Identifier	stream		3280202	1					
ANR	3282341	Argument	"""0x%lx"""		3280202	1					
ANR	3282342	PrimaryExpression	"""0x%lx"""		3280202	0					
ANR	3282343	Argument	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	2					
ANR	3282344	BitAndExpression	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	0		&			
ANR	3282345	ShiftExpression	l >> OP_SH_FT		3280202	0		>>			
ANR	3282346	Identifier	l		3280202	0					
ANR	3282347	Identifier	OP_SH_FT		3280202	1					
ANR	3282348	Identifier	OP_MASK_FT		3280202	1					
ANR	3282349	BreakStatement	break ;	1223:3:36453:36458	3280202	180	True				
ANR	3282350	Label	case 'X' :	1225:1:36462:36470	3280202	181	True				
ANR	3282351	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FD ) & OP_MASK_FD )"	1226:3:36475:36555	3280202	182	True				
ANR	3282352	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FD ) & OP_MASK_FD )"		3280202	0					
ANR	3282353	Callee	* info -> fprintf_func		3280202	0					
ANR	3282354	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282355	UnaryOperator	*		3280202	0					
ANR	3282356	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282357	Identifier	info		3280202	0					
ANR	3282358	Identifier	fprintf_func		3280202	1					
ANR	3282359	ArgumentList	info -> stream		3280202	1					
ANR	3282360	Argument	info -> stream		3280202	0					
ANR	3282361	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282362	Identifier	info		3280202	0					
ANR	3282363	Identifier	stream		3280202	1					
ANR	3282364	Argument	"""$v%ld"""		3280202	1					
ANR	3282365	PrimaryExpression	"""$v%ld"""		3280202	0					
ANR	3282366	Argument	( l >> OP_SH_FD ) & OP_MASK_FD		3280202	2					
ANR	3282367	BitAndExpression	( l >> OP_SH_FD ) & OP_MASK_FD		3280202	0		&			
ANR	3282368	ShiftExpression	l >> OP_SH_FD		3280202	0		>>			
ANR	3282369	Identifier	l		3280202	0					
ANR	3282370	Identifier	OP_SH_FD		3280202	1					
ANR	3282371	Identifier	OP_MASK_FD		3280202	1					
ANR	3282372	BreakStatement	break ;	1228:3:36560:36565	3280202	183	True				
ANR	3282373	Label	case 'Y' :	1230:1:36569:36577	3280202	184	True				
ANR	3282374	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FS ) & OP_MASK_FS )"	1231:3:36582:36662	3280202	185	True				
ANR	3282375	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FS ) & OP_MASK_FS )"		3280202	0					
ANR	3282376	Callee	* info -> fprintf_func		3280202	0					
ANR	3282377	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282378	UnaryOperator	*		3280202	0					
ANR	3282379	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282380	Identifier	info		3280202	0					
ANR	3282381	Identifier	fprintf_func		3280202	1					
ANR	3282382	ArgumentList	info -> stream		3280202	1					
ANR	3282383	Argument	info -> stream		3280202	0					
ANR	3282384	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282385	Identifier	info		3280202	0					
ANR	3282386	Identifier	stream		3280202	1					
ANR	3282387	Argument	"""$v%ld"""		3280202	1					
ANR	3282388	PrimaryExpression	"""$v%ld"""		3280202	0					
ANR	3282389	Argument	( l >> OP_SH_FS ) & OP_MASK_FS		3280202	2					
ANR	3282390	BitAndExpression	( l >> OP_SH_FS ) & OP_MASK_FS		3280202	0		&			
ANR	3282391	ShiftExpression	l >> OP_SH_FS		3280202	0		>>			
ANR	3282392	Identifier	l		3280202	0					
ANR	3282393	Identifier	OP_SH_FS		3280202	1					
ANR	3282394	Identifier	OP_MASK_FS		3280202	1					
ANR	3282395	BreakStatement	break ;	1233:3:36667:36672	3280202	186	True				
ANR	3282396	Label	case 'Z' :	1235:1:36676:36684	3280202	187	True				
ANR	3282397	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FT ) & OP_MASK_FT )"	1236:3:36689:36769	3280202	188	True				
ANR	3282398	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$v%ld"" , ( l >> OP_SH_FT ) & OP_MASK_FT )"		3280202	0					
ANR	3282399	Callee	* info -> fprintf_func		3280202	0					
ANR	3282400	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282401	UnaryOperator	*		3280202	0					
ANR	3282402	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282403	Identifier	info		3280202	0					
ANR	3282404	Identifier	fprintf_func		3280202	1					
ANR	3282405	ArgumentList	info -> stream		3280202	1					
ANR	3282406	Argument	info -> stream		3280202	0					
ANR	3282407	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282408	Identifier	info		3280202	0					
ANR	3282409	Identifier	stream		3280202	1					
ANR	3282410	Argument	"""$v%ld"""		3280202	1					
ANR	3282411	PrimaryExpression	"""$v%ld"""		3280202	0					
ANR	3282412	Argument	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	2					
ANR	3282413	BitAndExpression	( l >> OP_SH_FT ) & OP_MASK_FT		3280202	0		&			
ANR	3282414	ShiftExpression	l >> OP_SH_FT		3280202	0		>>			
ANR	3282415	Identifier	l		3280202	0					
ANR	3282416	Identifier	OP_SH_FT		3280202	1					
ANR	3282417	Identifier	OP_MASK_FT		3280202	1					
ANR	3282418	BreakStatement	break ;	1238:3:36774:36779	3280202	189	True				
ANR	3282419	Label	default :	1240:1:36783:36790	3280202	190	True				
ANR	3282420	Identifier	default		3280202	0					
ANR	3282421	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal error, undefined modifier(%c)"" ) , * d )"	1242:3:36822:36919	3280202	191	True				
ANR	3282422	CallExpression	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal error, undefined modifier(%c)"" ) , * d )"		3280202	0					
ANR	3282423	Callee	* info -> fprintf_func		3280202	0					
ANR	3282424	UnaryOperationExpression	* info -> fprintf_func		3280202	0					
ANR	3282425	UnaryOperator	*		3280202	0					
ANR	3282426	PtrMemberAccess	info -> fprintf_func		3280202	1					
ANR	3282427	Identifier	info		3280202	0					
ANR	3282428	Identifier	fprintf_func		3280202	1					
ANR	3282429	ArgumentList	info -> stream		3280202	1					
ANR	3282430	Argument	info -> stream		3280202	0					
ANR	3282431	PtrMemberAccess	info -> stream		3280202	0					
ANR	3282432	Identifier	info		3280202	0					
ANR	3282433	Identifier	stream		3280202	1					
ANR	3282434	Argument	"_ ( ""# internal error, undefined modifier(%c)"" )"		3280202	1					
ANR	3282435	CallExpression	"_ ( ""# internal error, undefined modifier(%c)"" )"		3280202	0					
ANR	3282436	Callee	_		3280202	0					
ANR	3282437	Identifier	_		3280202	0					
ANR	3282438	ArgumentList	"""# internal error, undefined modifier(%c)"""		3280202	1					
ANR	3282439	Argument	"""# internal error, undefined modifier(%c)"""		3280202	0					
ANR	3282440	PrimaryExpression	"""# internal error, undefined modifier(%c)"""		3280202	0					
ANR	3282441	Argument	* d		3280202	2					
ANR	3282442	UnaryOperationExpression	* d		3280202	0					
ANR	3282443	UnaryOperator	*		3280202	0					
ANR	3282444	Identifier	d		3280202	1					
ANR	3282445	ReturnStatement	return ;	1245:3:36924:36930	3280202	192	True				
ANR	3282446	ReturnType	static void		3280202	1					
ANR	3282447	Identifier	print_insn_args		3280202	2					
ANR	3282448	ParameterList	"const char * d , register unsigned long int l , bfd_vma pc , struct disassemble_info * info , const struct mips_opcode * opp"		3280202	3					
ANR	3282449	Parameter	const char * d	734:17:23878:23890	3280202	0	True				
ANR	3282450	ParameterType	const char *		3280202	0					
ANR	3282451	Identifier	d		3280202	1					
ANR	3282452	Parameter	register unsigned long int l	735:3:23896:23923	3280202	1	True				
ANR	3282453	ParameterType	register unsigned long int		3280202	0					
ANR	3282454	Identifier	l		3280202	1					
ANR	3282455	Parameter	bfd_vma pc	736:3:23929:23938	3280202	2	True				
ANR	3282456	ParameterType	bfd_vma		3280202	0					
ANR	3282457	Identifier	pc		3280202	1					
ANR	3282458	Parameter	struct disassemble_info * info	737:3:23944:23972	3280202	3	True				
ANR	3282459	ParameterType	struct disassemble_info *		3280202	0					
ANR	3282460	Identifier	info		3280202	1					
ANR	3282461	Parameter	const struct mips_opcode * opp	738:3:23978:24006	3280202	4	True				
ANR	3282462	ParameterType	const struct mips_opcode *		3280202	0					
ANR	3282463	Identifier	opp		3280202	1					
ANR	3282464	CFGEntryNode	ENTRY		3280202		True				
ANR	3282465	CFGExitNode	EXIT		3280202		True				
ANR	3282466	Symbol	OP_SH_ALN		3280202						
ANR	3282467	Symbol	delta		3280202						
ANR	3282468	Symbol	OP_MASK_MT_H		3280202						
ANR	3282469	Symbol	OP_SH_DSPSFT_7		3280202						
ANR	3282470	Symbol	OP_OP_COP0		3280202						
ANR	3282471	Symbol	info -> fprintf_func		3280202						
ANR	3282472	Symbol	OP_MASK_IMM8		3280202						
ANR	3282473	Symbol	OP_SH_RDDSP		3280202						
ANR	3282474	Symbol	OP_MASK_SEL		3280202						
ANR	3282475	Symbol	OP_SH_CACHE		3280202						
ANR	3282476	Symbol	OP_MASK_CODE19		3280202						
ANR	3282477	Symbol	OP_SH_OP		3280202						
ANR	3282478	Symbol	vsel		3280202						
ANR	3282479	Symbol	mips_fpr_names		3280202						
ANR	3282480	Symbol	OP_SH_SHAMT		3280202						
ANR	3282481	Symbol	* OP_SH_RS		3280202						
ANR	3282482	Symbol	OP_MASK_DELTA		3280202						
ANR	3282483	Symbol	* OP_SH_RT		3280202						
ANR	3282484	Symbol	OP_MASK_MT_U		3280202						
ANR	3282485	Symbol	OP_MASK_UDI4		3280202						
ANR	3282486	Symbol	n -> name		3280202						
ANR	3282487	Symbol	OP_MASK_MTACC_T		3280202						
ANR	3282488	Symbol	OP_MASK_UDI3		3280202						
ANR	3282489	Symbol	OP_MASK_UDI2		3280202						
ANR	3282490	Symbol	OP_MASK_UDI1		3280202						
ANR	3282491	Symbol	OP_SH_FT		3280202						
ANR	3282492	Symbol	OP_SH_FS		3280202						
ANR	3282493	Symbol	OP_SH_FR		3280202						
ANR	3282494	Symbol	OP_SH_IMMEDIATE		3280202						
ANR	3282495	Symbol	OP_MASK_DSPACC_S		3280202						
ANR	3282496	Symbol	OP_SH_DSPSFT		3280202						
ANR	3282497	Symbol	FP_D		3280202						
ANR	3282498	Symbol	OP_MASK_MTACC_D		3280202						
ANR	3282499	Symbol	OP_MASK_VECALIGN		3280202						
ANR	3282500	Symbol	OP_SH_FD		3280202						
ANR	3282501	Symbol	OP_MASK_WRDSP		3280202						
ANR	3282502	Symbol	* mips_cp0_names		3280202						
ANR	3282503	Symbol	mips_cp0sel_names		3280202						
ANR	3282504	Symbol	FP_S		3280202						
ANR	3282505	Symbol	OP_SH_RD		3280202						
ANR	3282506	Symbol	OP_SH_CODE		3280202						
ANR	3282507	Symbol	OP_MASK_IMMEDIATE		3280202						
ANR	3282508	Symbol	OP_MASK_ALN		3280202						
ANR	3282509	Symbol	OP_MASK_RDDSP		3280202						
ANR	3282510	Symbol	info -> stream		3280202						
ANR	3282511	Symbol	OP_MASK_COPZ		3280202						
ANR	3282512	Symbol	OP_SH_TARGET		3280202						
ANR	3282513	Symbol	OP_SH_IMM10		3280202						
ANR	3282514	Symbol	opp -> pinfo		3280202						
ANR	3282515	Symbol	OP_SH_DSPACC		3280202						
ANR	3282516	Symbol	OP_SH_MTACC_T		3280202						
ANR	3282517	Symbol	msbd		3280202						
ANR	3282518	Symbol	sel		3280202						
ANR	3282519	Symbol	OP_MASK_CODE2		3280202						
ANR	3282520	Symbol	_		3280202						
ANR	3282521	Symbol	OP_MASK_BP		3280202						
ANR	3282522	Symbol	mips_gpr_names		3280202						
ANR	3282523	Symbol	cp0reg		3280202						
ANR	3282524	Symbol	* mips_gpr_names		3280202						
ANR	3282525	Symbol	* OP_MASK_FR		3280202						
ANR	3282526	Symbol	OP_MASK_DSPACC		3280202						
ANR	3282527	Symbol	d		3280202						
ANR	3282528	Symbol	~OP_MASK_DSPSFT		3280202						
ANR	3282529	Symbol	OP_SH_DELTA		3280202						
ANR	3282530	Symbol	OP_MASK_CODE20		3280202						
ANR	3282531	Symbol	OP_SH_SA3		3280202						
ANR	3282532	Symbol	OP_MASK_RS		3280202						
ANR	3282533	Symbol	OP_SH_MTACC_D		3280202						
ANR	3282534	Symbol	OP_MASK_RT		3280202						
ANR	3282535	Symbol	OP_SH_SA4		3280202						
ANR	3282536	Symbol	l		3280202						
ANR	3282537	Symbol	OP_SH_CODE19		3280202						
ANR	3282538	Symbol	OP_MASK_DSPSFT		3280202						
ANR	3282539	Symbol	* OP_SH_RD		3280202						
ANR	3282540	Symbol	n		3280202						
ANR	3282541	Symbol	OP_SH_DSPACC_S		3280202						
ANR	3282542	Symbol	* OP_MASK_FT		3280202						
ANR	3282543	Symbol	* OP_MASK_FS		3280202						
ANR	3282544	Symbol	OP_SH_MT_U		3280202						
ANR	3282545	Symbol	OP_SH_EXTMSBD		3280202						
ANR	3282546	Symbol	OP_MASK_INSMSB		3280202						
ANR	3282547	Symbol	OP_MASK_SA3		3280202						
ANR	3282548	Symbol	OP_SH_CODE20		3280202						
ANR	3282549	Symbol	* info		3280202						
ANR	3282550	Symbol	OP_MASK_RD		3280202						
ANR	3282551	Symbol	OP_MASK_SA4		3280202						
ANR	3282552	Symbol	OP_SH_VECALIGN		3280202						
ANR	3282553	Symbol	msb		3280202						
ANR	3282554	Symbol	* OP_MASK_FD		3280202						
ANR	3282555	Symbol	OP_SH_IMM8		3280202						
ANR	3282556	Symbol	OP_SH_MT_H		3280202						
ANR	3282557	Symbol	OP_SH_CODE2		3280202						
ANR	3282558	Symbol	* OP_SH_FT		3280202						
ANR	3282559	Symbol	* OP_MASK_RD		3280202						
ANR	3282560	Symbol	fmt		3280202						
ANR	3282561	Symbol	OP_MASK_TARGET		3280202						
ANR	3282562	Symbol	OP_MASK_IMM10		3280202						
ANR	3282563	Symbol	reg		3280202						
ANR	3282564	Symbol	mips_hwr_names		3280202						
ANR	3282565	Symbol	* OP_SH_FS		3280202						
ANR	3282566	Symbol	* OP_SH_FR		3280202						
ANR	3282567	Symbol	OP_SH_INSMSB		3280202						
ANR	3282568	Symbol	* OP_SH_FD		3280202						
ANR	3282569	Symbol	lookup_mips_cp0sel_name		3280202						
ANR	3282570	Symbol	OP_SH_PREFX		3280202						
ANR	3282571	Symbol	info		3280202						
ANR	3282572	Symbol	OP_SH_WRDSP		3280202						
ANR	3282573	Symbol	OP_SH_UDI1		3280202						
ANR	3282574	Symbol	NULL		3280202						
ANR	3282575	Symbol	* mips_fpr_names		3280202						
ANR	3282576	Symbol	OP_SH_UDI2		3280202						
ANR	3282577	Symbol	OP_MASK_CCC		3280202						
ANR	3282578	Symbol	OP_SH_UDI3		3280202						
ANR	3282579	Symbol	OP_SH_BP		3280202						
ANR	3282580	Symbol	OP_SH_UDI4		3280202						
ANR	3282581	Symbol	OP_SH_CCC		3280202						
ANR	3282582	Symbol	mips_cp0_names		3280202						
ANR	3282583	Symbol	opp		3280202						
ANR	3282584	Symbol	OP_SH_RT		3280202						
ANR	3282585	Symbol	OP_MASK_SHAMT		3280202						
ANR	3282586	Symbol	OP_SH_RS		3280202						
ANR	3282587	Symbol	OP_MASK_VECBYTE		3280202						
ANR	3282588	Symbol	OP_MASK_EXTMSBD		3280202						
ANR	3282589	Symbol	lsb		3280202						
ANR	3282590	Symbol	OP_SH_COPZ		3280202						
ANR	3282591	Symbol	~0xffff		3280202						
ANR	3282592	Symbol	INSNLEN		3280202						
ANR	3282593	Symbol	OP_MASK_CACHE		3280202						
ANR	3282594	Symbol	OP_MASK_CODE		3280202						
ANR	3282595	Symbol	OP_MASK_PREFX		3280202						
ANR	3282596	Symbol	OP_MASK_OP		3280202						
ANR	3282597	Symbol	OP_MASK_DSPSFT_7		3280202						
ANR	3282598	Symbol	OP_MASK_PERFREG		3280202						
ANR	3282599	Symbol	info -> target		3280202						
ANR	3282600	Symbol	~OP_MASK_DSPSFT_7		3280202						
ANR	3282601	Symbol	info -> print_address_func		3280202						
ANR	3282602	Symbol	* opp		3280202						
ANR	3282603	Symbol	OP_SH_PERFREG		3280202						
ANR	3282604	Symbol	OP_MASK_FR		3280202						
ANR	3282605	Symbol	OP_MASK_FS		3280202						
ANR	3282606	Symbol	OP_SH_SEL		3280202						
ANR	3282607	Symbol	OP_MASK_FT		3280202						
ANR	3282608	Symbol	op		3280202						
ANR	3282609	Symbol	OP_SH_VECBYTE		3280202						
ANR	3282610	Symbol	OP_SH_BCC		3280202						
ANR	3282611	Symbol	OP_MASK_BCC		3280202						
ANR	3282612	Symbol	OP_MASK_VSEL		3280202						
ANR	3282613	Symbol	* d		3280202						
ANR	3282614	Symbol	OP_MASK_FD		3280202						
ANR	3282615	Symbol	OP_SH_VSEL		3280202						
ANR	3282616	Symbol	pc		3280202						
ANR	3282617	Symbol	mips_cp0sel_names_len		3280202						
ANR	3282618	Symbol	* l		3280202						
ANR	3282619	Symbol	* mips_hwr_names		3280202						
ANR	3282620	Symbol	* n		3280202						
ANR	3282621	Symbol	* OP_MASK_RT		3280202						
ANR	3282622	Symbol	* OP_MASK_RS		3280202						
ANR	3282623	Symbol	~OP_MASK_IMM10		3280202						
ANR	3282624	Symbol	* reg		3280202						
ANR	3282625	Function	print_insn_mips	1255:0:37196:39709							
ANR	3282626	FunctionDef	"print_insn_mips (bfd_vma memaddr , unsigned long int word , struct disassemble_info * info)"		3282625	0					
ANR	3282627	CompoundStatement		1259:0:37302:39709	3282625	0					
ANR	3282628	IdentifierDeclStatement	const struct mips_opcode * op ;	1260:2:37306:37334	3282625	0	True				
ANR	3282629	IdentifierDecl	* op		3282625	0					
ANR	3282630	IdentifierDeclType	const struct mips_opcode *		3282625	0					
ANR	3282631	Identifier	op		3282625	1					
ANR	3282632	Statement	static	1261:2:37338:37343	3282625	1	True				
ANR	3282633	IdentifierDeclStatement	bfd_boolean init = 0 ;	1261:9:37345:37365	3282625	2	True				
ANR	3282634	IdentifierDecl	init = 0		3282625	0					
ANR	3282635	IdentifierDeclType	bfd_boolean		3282625	0					
ANR	3282636	Identifier	init		3282625	1					
ANR	3282637	AssignmentExpression	init = 0		3282625	2		=			
ANR	3282638	Identifier	init		3282625	0					
ANR	3282639	PrimaryExpression	0		3282625	1					
ANR	3282640	Statement	static	1262:2:37369:37374	3282625	3	True				
ANR	3282641	IdentifierDeclStatement	const struct mips_opcode * mips_hash [ OP_MASK_OP + 1 ] ;	1262:9:37376:37427	3282625	4	True				
ANR	3282642	IdentifierDecl	* mips_hash [ OP_MASK_OP + 1 ]		3282625	0					
ANR	3282643	IdentifierDeclType	const struct mips_opcode * [ OP_MASK_OP + 1 ]		3282625	0					
ANR	3282644	Identifier	mips_hash		3282625	1					
ANR	3282645	AdditiveExpression	OP_MASK_OP + 1		3282625	2		+			
ANR	3282646	Identifier	OP_MASK_OP		3282625	0					
ANR	3282647	PrimaryExpression	1		3282625	1					
ANR	3282648	IfStatement	if ( ! init )		3282625	5					
ANR	3282649	Condition	! init	1265:6:37492:37497	3282625	0	True				
ANR	3282650	UnaryOperationExpression	! init		3282625	0					
ANR	3282651	UnaryOperator	!		3282625	0					
ANR	3282652	Identifier	init		3282625	1					
ANR	3282653	CompoundStatement		9:6:209:223	3282625	1					
ANR	3282654	IdentifierDeclStatement	unsigned int i ;	1267:6:37512:37526	3282625	0	True				
ANR	3282655	IdentifierDecl	i		3282625	0					
ANR	3282656	IdentifierDeclType	unsigned int		3282625	0					
ANR	3282657	Identifier	i		3282625	1					
ANR	3282658	ForStatement	for ( i = 0 ; i <= OP_MASK_OP ; i ++ )		3282625	1					
ANR	3282659	ForInit	i = 0 ;	1269:11:37540:37545	3282625	0	True				
ANR	3282660	AssignmentExpression	i = 0		3282625	0		=			
ANR	3282661	Identifier	i		3282625	0					
ANR	3282662	PrimaryExpression	0		3282625	1					
ANR	3282663	Condition	i <= OP_MASK_OP	1269:18:37547:37561	3282625	1	True				
ANR	3282664	RelationalExpression	i <= OP_MASK_OP		3282625	0		<=			
ANR	3282665	Identifier	i		3282625	0					
ANR	3282666	Identifier	OP_MASK_OP		3282625	1					
ANR	3282667	PostIncDecOperationExpression	i ++	1269:35:37564:37566	3282625	2	True				
ANR	3282668	Identifier	i		3282625	0					
ANR	3282669	IncDec	++		3282625	1					
ANR	3282670	CompoundStatement		12:1:267:267	3282625	3					
ANR	3282671	ForStatement	for ( op = mips_opcodes ; op < & mips_opcodes [ NUMOPCODES ] ; op ++ )		3282625	0					
ANR	3282672	ForInit	op = mips_opcodes ;	1271:8:37580:37597	3282625	0	True				
ANR	3282673	AssignmentExpression	op = mips_opcodes		3282625	0		=			
ANR	3282674	Identifier	op		3282625	0					
ANR	3282675	Identifier	mips_opcodes		3282625	1					
ANR	3282676	Condition	op < & mips_opcodes [ NUMOPCODES ]	1271:27:37599:37628	3282625	1	True				
ANR	3282677	RelationalExpression	op < & mips_opcodes [ NUMOPCODES ]		3282625	0		<			
ANR	3282678	Identifier	op		3282625	0					
ANR	3282679	UnaryOperationExpression	& mips_opcodes [ NUMOPCODES ]		3282625	1					
ANR	3282680	UnaryOperator	&		3282625	0					
ANR	3282681	ArrayIndexing	mips_opcodes [ NUMOPCODES ]		3282625	1					
ANR	3282682	Identifier	mips_opcodes		3282625	0					
ANR	3282683	Identifier	NUMOPCODES		3282625	1					
ANR	3282684	PostIncDecOperationExpression	op ++	1271:59:37631:37634	3282625	2	True				
ANR	3282685	Identifier	op		3282625	0					
ANR	3282686	IncDec	++		3282625	1					
ANR	3282687	CompoundStatement		14:5:339:339	3282625	3					
ANR	3282688	IfStatement	if ( op -> pinfo == INSN_MACRO || ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) )		3282625	0					
ANR	3282689	Condition	op -> pinfo == INSN_MACRO || ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) )	1273:8:37652:37720	3282625	0	True				
ANR	3282690	OrExpression	op -> pinfo == INSN_MACRO || ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) )		3282625	0		||			
ANR	3282691	EqualityExpression	op -> pinfo == INSN_MACRO		3282625	0		==			
ANR	3282692	PtrMemberAccess	op -> pinfo		3282625	0					
ANR	3282693	Identifier	op		3282625	0					
ANR	3282694	Identifier	pinfo		3282625	1					
ANR	3282695	Identifier	INSN_MACRO		3282625	1					
ANR	3282696	AndExpression	no_aliases && ( op -> pinfo2 & INSN2_ALIAS )		3282625	1		&&			
ANR	3282697	Identifier	no_aliases		3282625	0					
ANR	3282698	BitAndExpression	op -> pinfo2 & INSN2_ALIAS		3282625	1		&			
ANR	3282699	PtrMemberAccess	op -> pinfo2		3282625	0					
ANR	3282700	Identifier	op		3282625	0					
ANR	3282701	Identifier	pinfo2		3282625	1					
ANR	3282702	Identifier	INSN2_ALIAS		3282625	1					
ANR	3282703	CompoundStatement		15:79:420:420	3282625	1					
ANR	3282704	ContinueStatement	continue ;	1274:5:37730:37738	3282625	0	True				
ANR	3282705	IfStatement	if ( i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP ) )		3282625	1					
ANR	3282706	Condition	i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP )	1276:8:37754:37796	3282625	0	True				
ANR	3282707	EqualityExpression	i == ( ( op -> match >> OP_SH_OP ) & OP_MASK_OP )		3282625	0		==			
ANR	3282708	Identifier	i		3282625	0					
ANR	3282709	BitAndExpression	( op -> match >> OP_SH_OP ) & OP_MASK_OP		3282625	1		&			
ANR	3282710	ShiftExpression	op -> match >> OP_SH_OP		3282625	0		>>			
ANR	3282711	PtrMemberAccess	op -> match		3282625	0					
ANR	3282712	Identifier	op		3282625	0					
ANR	3282713	Identifier	match		3282625	1					
ANR	3282714	Identifier	OP_SH_OP		3282625	1					
ANR	3282715	Identifier	OP_MASK_OP		3282625	1					
ANR	3282716	CompoundStatement		18:53:496:496	3282625	1					
ANR	3282717	ExpressionStatement	mips_hash [ i ] = op	1277:5:37806:37823	3282625	0	True				
ANR	3282718	AssignmentExpression	mips_hash [ i ] = op		3282625	0		=			
ANR	3282719	ArrayIndexing	mips_hash [ i ]		3282625	0					
ANR	3282720	Identifier	mips_hash		3282625	0					
ANR	3282721	Identifier	i		3282625	1					
ANR	3282722	Identifier	op		3282625	1					
ANR	3282723	BreakStatement	break ;	1278:5:37830:37835	3282625	1	True				
ANR	3282724	ExpressionStatement	init = 1	1283:6:37858:37866	3282625	2	True				
ANR	3282725	AssignmentExpression	init = 1		3282625	0		=			
ANR	3282726	Identifier	init		3282625	0					
ANR	3282727	PrimaryExpression	1		3282625	1					
ANR	3282728	ExpressionStatement	info -> bytes_per_chunk = INSNLEN	1286:2:37877:37908	3282625	6	True				
ANR	3282729	AssignmentExpression	info -> bytes_per_chunk = INSNLEN		3282625	0		=			
ANR	3282730	PtrMemberAccess	info -> bytes_per_chunk		3282625	0					
ANR	3282731	Identifier	info		3282625	0					
ANR	3282732	Identifier	bytes_per_chunk		3282625	1					
ANR	3282733	Identifier	INSNLEN		3282625	1					
ANR	3282734	ExpressionStatement	info -> display_endian = info -> endian	1287:2:37912:37947	3282625	7	True				
ANR	3282735	AssignmentExpression	info -> display_endian = info -> endian		3282625	0		=			
ANR	3282736	PtrMemberAccess	info -> display_endian		3282625	0					
ANR	3282737	Identifier	info		3282625	0					
ANR	3282738	Identifier	display_endian		3282625	1					
ANR	3282739	PtrMemberAccess	info -> endian		3282625	1					
ANR	3282740	Identifier	info		3282625	0					
ANR	3282741	Identifier	endian		3282625	1					
ANR	3282742	ExpressionStatement	info -> insn_info_valid = 1	1288:2:37951:37976	3282625	8	True				
ANR	3282743	AssignmentExpression	info -> insn_info_valid = 1		3282625	0		=			
ANR	3282744	PtrMemberAccess	info -> insn_info_valid		3282625	0					
ANR	3282745	Identifier	info		3282625	0					
ANR	3282746	Identifier	insn_info_valid		3282625	1					
ANR	3282747	PrimaryExpression	1		3282625	1					
ANR	3282748	ExpressionStatement	info -> branch_delay_insns = 0	1289:2:37980:38008	3282625	9	True				
ANR	3282749	AssignmentExpression	info -> branch_delay_insns = 0		3282625	0		=			
ANR	3282750	PtrMemberAccess	info -> branch_delay_insns		3282625	0					
ANR	3282751	Identifier	info		3282625	0					
ANR	3282752	Identifier	branch_delay_insns		3282625	1					
ANR	3282753	PrimaryExpression	0		3282625	1					
ANR	3282754	ExpressionStatement	info -> data_size = 0	1290:2:38012:38031	3282625	10	True				
ANR	3282755	AssignmentExpression	info -> data_size = 0		3282625	0		=			
ANR	3282756	PtrMemberAccess	info -> data_size		3282625	0					
ANR	3282757	Identifier	info		3282625	0					
ANR	3282758	Identifier	data_size		3282625	1					
ANR	3282759	PrimaryExpression	0		3282625	1					
ANR	3282760	ExpressionStatement	info -> insn_type = dis_nonbranch	1291:2:38035:38066	3282625	11	True				
ANR	3282761	AssignmentExpression	info -> insn_type = dis_nonbranch		3282625	0		=			
ANR	3282762	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282763	Identifier	info		3282625	0					
ANR	3282764	Identifier	insn_type		3282625	1					
ANR	3282765	Identifier	dis_nonbranch		3282625	1					
ANR	3282766	ExpressionStatement	info -> target = 0	1292:2:38070:38086	3282625	12	True				
ANR	3282767	AssignmentExpression	info -> target = 0		3282625	0		=			
ANR	3282768	PtrMemberAccess	info -> target		3282625	0					
ANR	3282769	Identifier	info		3282625	0					
ANR	3282770	Identifier	target		3282625	1					
ANR	3282771	PrimaryExpression	0		3282625	1					
ANR	3282772	ExpressionStatement	info -> target2 = 0	1293:2:38090:38107	3282625	13	True				
ANR	3282773	AssignmentExpression	info -> target2 = 0		3282625	0		=			
ANR	3282774	PtrMemberAccess	info -> target2		3282625	0					
ANR	3282775	Identifier	info		3282625	0					
ANR	3282776	Identifier	target2		3282625	1					
ANR	3282777	PrimaryExpression	0		3282625	1					
ANR	3282778	ExpressionStatement	op = mips_hash [ ( word >> OP_SH_OP ) & OP_MASK_OP ]	1295:2:38112:38159	3282625	14	True				
ANR	3282779	AssignmentExpression	op = mips_hash [ ( word >> OP_SH_OP ) & OP_MASK_OP ]		3282625	0		=			
ANR	3282780	Identifier	op		3282625	0					
ANR	3282781	ArrayIndexing	mips_hash [ ( word >> OP_SH_OP ) & OP_MASK_OP ]		3282625	1					
ANR	3282782	Identifier	mips_hash		3282625	0					
ANR	3282783	BitAndExpression	( word >> OP_SH_OP ) & OP_MASK_OP		3282625	1		&			
ANR	3282784	ShiftExpression	word >> OP_SH_OP		3282625	0		>>			
ANR	3282785	Identifier	word		3282625	0					
ANR	3282786	Identifier	OP_SH_OP		3282625	1					
ANR	3282787	Identifier	OP_MASK_OP		3282625	1					
ANR	3282788	IfStatement	if ( op != NULL )		3282625	15					
ANR	3282789	Condition	op != NULL	1296:6:38167:38176	3282625	0	True				
ANR	3282790	EqualityExpression	op != NULL		3282625	0		!=			
ANR	3282791	Identifier	op		3282625	0					
ANR	3282792	Identifier	NULL		3282625	1					
ANR	3282793	CompoundStatement		39:4:880:880	3282625	1					
ANR	3282794	ForStatement	for ( ; op < & mips_opcodes [ NUMOPCODES ] ; op ++ )		3282625	0					
ANR	3282795	Condition	op < & mips_opcodes [ NUMOPCODES ]	1298:13:38198:38227	3282625	0	True				
ANR	3282796	RelationalExpression	op < & mips_opcodes [ NUMOPCODES ]		3282625	0		<			
ANR	3282797	Identifier	op		3282625	0					
ANR	3282798	UnaryOperationExpression	& mips_opcodes [ NUMOPCODES ]		3282625	1					
ANR	3282799	UnaryOperator	&		3282625	0					
ANR	3282800	ArrayIndexing	mips_opcodes [ NUMOPCODES ]		3282625	1					
ANR	3282801	Identifier	mips_opcodes		3282625	0					
ANR	3282802	Identifier	NUMOPCODES		3282625	1					
ANR	3282803	PostIncDecOperationExpression	op ++	1298:45:38230:38233	3282625	1	True				
ANR	3282804	Identifier	op		3282625	0					
ANR	3282805	IncDec	++		3282625	1					
ANR	3282806	CompoundStatement		41:1:934:934	3282625	2					
ANR	3282807	IfStatement	if ( op -> pinfo != INSN_MACRO && ! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( word & op -> mask ) == op -> match )		3282625	0					
ANR	3282808	Condition	op -> pinfo != INSN_MACRO && ! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( word & op -> mask ) == op -> match	1300:7:38246:38364	3282625	0	True				
ANR	3282809	AndExpression	op -> pinfo != INSN_MACRO && ! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( word & op -> mask ) == op -> match		3282625	0		&&			
ANR	3282810	EqualityExpression	op -> pinfo != INSN_MACRO		3282625	0		!=			
ANR	3282811	PtrMemberAccess	op -> pinfo		3282625	0					
ANR	3282812	Identifier	op		3282625	0					
ANR	3282813	Identifier	pinfo		3282625	1					
ANR	3282814	Identifier	INSN_MACRO		3282625	1					
ANR	3282815	AndExpression	! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( word & op -> mask ) == op -> match		3282625	1		&&			
ANR	3282816	UnaryOperationExpression	! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) )		3282625	0					
ANR	3282817	UnaryOperator	!		3282625	0					
ANR	3282818	AndExpression	no_aliases && ( op -> pinfo2 & INSN2_ALIAS )		3282625	1		&&			
ANR	3282819	Identifier	no_aliases		3282625	0					
ANR	3282820	BitAndExpression	op -> pinfo2 & INSN2_ALIAS		3282625	1		&			
ANR	3282821	PtrMemberAccess	op -> pinfo2		3282625	0					
ANR	3282822	Identifier	op		3282625	0					
ANR	3282823	Identifier	pinfo2		3282625	1					
ANR	3282824	Identifier	INSN2_ALIAS		3282625	1					
ANR	3282825	EqualityExpression	( word & op -> mask ) == op -> match		3282625	1		==			
ANR	3282826	BitAndExpression	word & op -> mask		3282625	0		&			
ANR	3282827	Identifier	word		3282625	0					
ANR	3282828	PtrMemberAccess	op -> mask		3282625	1					
ANR	3282829	Identifier	op		3282625	0					
ANR	3282830	Identifier	mask		3282625	1					
ANR	3282831	PtrMemberAccess	op -> match		3282625	1					
ANR	3282832	Identifier	op		3282625	0					
ANR	3282833	Identifier	match		3282625	1					
ANR	3282834	CompoundStatement		46:7:1078:1091	3282625	1					
ANR	3282835	IdentifierDeclStatement	const char * d ;	1304:7:38381:38394	3282625	0	True				
ANR	3282836	IdentifierDecl	* d		3282625	0					
ANR	3282837	IdentifierDeclType	const char *		3282625	0					
ANR	3282838	Identifier	d		3282625	1					
ANR	3282839	IfStatement	"if ( ! OPCODE_IS_MEMBER ( op , mips_isa , mips_processor ) && strcmp ( op -> name , ""jalx"" ) )"		3282625	1					
ANR	3282840	Condition	"! OPCODE_IS_MEMBER ( op , mips_isa , mips_processor ) && strcmp ( op -> name , ""jalx"" )"	1307:11:38475:38551	3282625	0	True				
ANR	3282841	AndExpression	"! OPCODE_IS_MEMBER ( op , mips_isa , mips_processor ) && strcmp ( op -> name , ""jalx"" )"		3282625	0		&&			
ANR	3282842	UnaryOperationExpression	"! OPCODE_IS_MEMBER ( op , mips_isa , mips_processor )"		3282625	0					
ANR	3282843	UnaryOperator	!		3282625	0					
ANR	3282844	CallExpression	"OPCODE_IS_MEMBER ( op , mips_isa , mips_processor )"		3282625	1					
ANR	3282845	Callee	OPCODE_IS_MEMBER		3282625	0					
ANR	3282846	Identifier	OPCODE_IS_MEMBER		3282625	0					
ANR	3282847	ArgumentList	op		3282625	1					
ANR	3282848	Argument	op		3282625	0					
ANR	3282849	Identifier	op		3282625	0					
ANR	3282850	Argument	mips_isa		3282625	1					
ANR	3282851	Identifier	mips_isa		3282625	0					
ANR	3282852	Argument	mips_processor		3282625	2					
ANR	3282853	Identifier	mips_processor		3282625	0					
ANR	3282854	CallExpression	"strcmp ( op -> name , ""jalx"" )"		3282625	1					
ANR	3282855	Callee	strcmp		3282625	0					
ANR	3282856	Identifier	strcmp		3282625	0					
ANR	3282857	ArgumentList	op -> name		3282625	1					
ANR	3282858	Argument	op -> name		3282625	0					
ANR	3282859	PtrMemberAccess	op -> name		3282625	0					
ANR	3282860	Identifier	op		3282625	0					
ANR	3282861	Identifier	name		3282625	1					
ANR	3282862	Argument	"""jalx"""		3282625	1					
ANR	3282863	PrimaryExpression	"""jalx"""		3282625	0					
ANR	3282864	CompoundStatement		49:90:1251:1251	3282625	1					
ANR	3282865	ContinueStatement	continue ;	1308:8:38564:38572	3282625	0	True				
ANR	3282866	IfStatement	if ( ( op -> pinfo & INSN_UNCOND_BRANCH_DELAY ) != 0 )		3282625	2					
ANR	3282867	Condition	( op -> pinfo & INSN_UNCOND_BRANCH_DELAY ) != 0	1312:11:38667:38709	3282625	0	True				
ANR	3282868	EqualityExpression	( op -> pinfo & INSN_UNCOND_BRANCH_DELAY ) != 0		3282625	0		!=			
ANR	3282869	BitAndExpression	op -> pinfo & INSN_UNCOND_BRANCH_DELAY		3282625	0		&			
ANR	3282870	PtrMemberAccess	op -> pinfo		3282625	0					
ANR	3282871	Identifier	op		3282625	0					
ANR	3282872	Identifier	pinfo		3282625	1					
ANR	3282873	Identifier	INSN_UNCOND_BRANCH_DELAY		3282625	1					
ANR	3282874	PrimaryExpression	0		3282625	1					
ANR	3282875	CompoundStatement		55:9:1418:1418	3282625	1					
ANR	3282876	IfStatement	if ( ( info -> insn_type & INSN_WRITE_GPR_31 ) != 0 )		3282625	0					
ANR	3282877	Condition	( info -> insn_type & INSN_WRITE_GPR_31 ) != 0	1314:12:38735:38776	3282625	0	True				
ANR	3282878	EqualityExpression	( info -> insn_type & INSN_WRITE_GPR_31 ) != 0		3282625	0		!=			
ANR	3282879	BitAndExpression	info -> insn_type & INSN_WRITE_GPR_31		3282625	0		&			
ANR	3282880	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282881	Identifier	info		3282625	0					
ANR	3282882	Identifier	insn_type		3282625	1					
ANR	3282883	Identifier	INSN_WRITE_GPR_31		3282625	1					
ANR	3282884	PrimaryExpression	0		3282625	1					
ANR	3282885	CompoundStatement		56:56:1476:1476	3282625	1					
ANR	3282886	ExpressionStatement	info -> insn_type = dis_jsr	1315:9:38790:38815	3282625	0	True				
ANR	3282887	AssignmentExpression	info -> insn_type = dis_jsr		3282625	0		=			
ANR	3282888	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282889	Identifier	info		3282625	0					
ANR	3282890	Identifier	insn_type		3282625	1					
ANR	3282891	Identifier	dis_jsr		3282625	1					
ANR	3282892	ElseStatement	else		3282625	0					
ANR	3282893	CompoundStatement		58:15:1529:1529	3282625	0					
ANR	3282894	ExpressionStatement	info -> insn_type = dis_branch	1317:9:38843:38871	3282625	0	True				
ANR	3282895	AssignmentExpression	info -> insn_type = dis_branch		3282625	0		=			
ANR	3282896	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282897	Identifier	info		3282625	0					
ANR	3282898	Identifier	insn_type		3282625	1					
ANR	3282899	Identifier	dis_branch		3282625	1					
ANR	3282900	ExpressionStatement	info -> branch_delay_insns = 1	1319:8:38891:38919	3282625	1	True				
ANR	3282901	AssignmentExpression	info -> branch_delay_insns = 1		3282625	0		=			
ANR	3282902	PtrMemberAccess	info -> branch_delay_insns		3282625	0					
ANR	3282903	Identifier	info		3282625	0					
ANR	3282904	Identifier	branch_delay_insns		3282625	1					
ANR	3282905	PrimaryExpression	1		3282625	1					
ANR	3282906	ElseStatement	else		3282625	0					
ANR	3282907	IfStatement	if ( ( op -> pinfo & ( INSN_COND_BRANCH_DELAY | INSN_COND_BRANCH_LIKELY ) ) != 0 )		3282625	0					
ANR	3282908	Condition	( op -> pinfo & ( INSN_COND_BRANCH_DELAY | INSN_COND_BRANCH_LIKELY ) ) != 0	1321:16:38941:39018	3282625	0	True				
ANR	3282909	EqualityExpression	( op -> pinfo & ( INSN_COND_BRANCH_DELAY | INSN_COND_BRANCH_LIKELY ) ) != 0		3282625	0		!=			
ANR	3282910	BitAndExpression	op -> pinfo & ( INSN_COND_BRANCH_DELAY | INSN_COND_BRANCH_LIKELY )		3282625	0		&			
ANR	3282911	PtrMemberAccess	op -> pinfo		3282625	0					
ANR	3282912	Identifier	op		3282625	0					
ANR	3282913	Identifier	pinfo		3282625	1					
ANR	3282914	InclusiveOrExpression	INSN_COND_BRANCH_DELAY | INSN_COND_BRANCH_LIKELY		3282625	1		|			
ANR	3282915	Identifier	INSN_COND_BRANCH_DELAY		3282625	0					
ANR	3282916	Identifier	INSN_COND_BRANCH_LIKELY		3282625	1					
ANR	3282917	PrimaryExpression	0		3282625	1					
ANR	3282918	CompoundStatement		65:2:1720:1720	3282625	1					
ANR	3282919	IfStatement	if ( ( info -> insn_type & INSN_WRITE_GPR_31 ) != 0 )		3282625	0					
ANR	3282920	Condition	( info -> insn_type & INSN_WRITE_GPR_31 ) != 0	1324:7:39032:39073	3282625	0	True				
ANR	3282921	EqualityExpression	( info -> insn_type & INSN_WRITE_GPR_31 ) != 0		3282625	0		!=			
ANR	3282922	BitAndExpression	info -> insn_type & INSN_WRITE_GPR_31		3282625	0		&			
ANR	3282923	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282924	Identifier	info		3282625	0					
ANR	3282925	Identifier	insn_type		3282625	1					
ANR	3282926	Identifier	INSN_WRITE_GPR_31		3282625	1					
ANR	3282927	PrimaryExpression	0		3282625	1					
ANR	3282928	CompoundStatement		66:51:1773:1773	3282625	1					
ANR	3282929	ExpressionStatement	info -> insn_type = dis_condjsr	1325:4:39082:39111	3282625	0	True				
ANR	3282930	AssignmentExpression	info -> insn_type = dis_condjsr		3282625	0		=			
ANR	3282931	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282932	Identifier	info		3282625	0					
ANR	3282933	Identifier	insn_type		3282625	1					
ANR	3282934	Identifier	dis_condjsr		3282625	1					
ANR	3282935	ElseStatement	else		3282625	0					
ANR	3282936	CompoundStatement		68:10:1820:1820	3282625	0					
ANR	3282937	ExpressionStatement	info -> insn_type = dis_condbranch	1327:4:39129:39161	3282625	0	True				
ANR	3282938	AssignmentExpression	info -> insn_type = dis_condbranch		3282625	0		=			
ANR	3282939	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282940	Identifier	info		3282625	0					
ANR	3282941	Identifier	insn_type		3282625	1					
ANR	3282942	Identifier	dis_condbranch		3282625	1					
ANR	3282943	ExpressionStatement	info -> branch_delay_insns = 1	1329:3:39171:39199	3282625	1	True				
ANR	3282944	AssignmentExpression	info -> branch_delay_insns = 1		3282625	0		=			
ANR	3282945	PtrMemberAccess	info -> branch_delay_insns		3282625	0					
ANR	3282946	Identifier	info		3282625	0					
ANR	3282947	Identifier	branch_delay_insns		3282625	1					
ANR	3282948	PrimaryExpression	1		3282625	1					
ANR	3282949	ElseStatement	else		3282625	0					
ANR	3282950	IfStatement	if ( ( op -> pinfo & ( INSN_STORE_MEMORY | INSN_LOAD_MEMORY_DELAY ) ) != 0 )		3282625	0					
ANR	3282951	Condition	( op -> pinfo & ( INSN_STORE_MEMORY | INSN_LOAD_MEMORY_DELAY ) ) != 0	1330:13:39214:39276	3282625	0	True				
ANR	3282952	EqualityExpression	( op -> pinfo & ( INSN_STORE_MEMORY | INSN_LOAD_MEMORY_DELAY ) ) != 0		3282625	0		!=			
ANR	3282953	BitAndExpression	op -> pinfo & ( INSN_STORE_MEMORY | INSN_LOAD_MEMORY_DELAY )		3282625	0		&			
ANR	3282954	PtrMemberAccess	op -> pinfo		3282625	0					
ANR	3282955	Identifier	op		3282625	0					
ANR	3282956	Identifier	pinfo		3282625	1					
ANR	3282957	InclusiveOrExpression	INSN_STORE_MEMORY | INSN_LOAD_MEMORY_DELAY		3282625	1		|			
ANR	3282958	Identifier	INSN_STORE_MEMORY		3282625	0					
ANR	3282959	Identifier	INSN_LOAD_MEMORY_DELAY		3282625	1					
ANR	3282960	PrimaryExpression	0		3282625	1					
ANR	3282961	CompoundStatement		72:78:1976:1976	3282625	1					
ANR	3282962	ExpressionStatement	info -> insn_type = dis_dref	1331:3:39284:39310	3282625	0	True				
ANR	3282963	AssignmentExpression	info -> insn_type = dis_dref		3282625	0		=			
ANR	3282964	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3282965	Identifier	info		3282625	0					
ANR	3282966	Identifier	insn_type		3282625	1					
ANR	3282967	Identifier	dis_dref		3282625	1					
ANR	3282968	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"	1334:2:39319:39371	3282625	3	True				
ANR	3282969	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"		3282625	0					
ANR	3282970	Callee	* info -> fprintf_func		3282625	0					
ANR	3282971	UnaryOperationExpression	* info -> fprintf_func		3282625	0					
ANR	3282972	UnaryOperator	*		3282625	0					
ANR	3282973	PtrMemberAccess	info -> fprintf_func		3282625	1					
ANR	3282974	Identifier	info		3282625	0					
ANR	3282975	Identifier	fprintf_func		3282625	1					
ANR	3282976	ArgumentList	info -> stream		3282625	1					
ANR	3282977	Argument	info -> stream		3282625	0					
ANR	3282978	PtrMemberAccess	info -> stream		3282625	0					
ANR	3282979	Identifier	info		3282625	0					
ANR	3282980	Identifier	stream		3282625	1					
ANR	3282981	Argument	"""%s"""		3282625	1					
ANR	3282982	PrimaryExpression	"""%s"""		3282625	0					
ANR	3282983	Argument	op -> name		3282625	2					
ANR	3282984	PtrMemberAccess	op -> name		3282625	0					
ANR	3282985	Identifier	op		3282625	0					
ANR	3282986	Identifier	name		3282625	1					
ANR	3282987	ExpressionStatement	d = op -> args	1336:2:39376:39388	3282625	4	True				
ANR	3282988	AssignmentExpression	d = op -> args		3282625	0		=			
ANR	3282989	Identifier	d		3282625	0					
ANR	3282990	PtrMemberAccess	op -> args		3282625	1					
ANR	3282991	Identifier	op		3282625	0					
ANR	3282992	Identifier	args		3282625	1					
ANR	3282993	IfStatement	if ( d != NULL && * d != '\\0' )		3282625	5					
ANR	3282994	Condition	d != NULL && * d != '\\0'	1337:6:39396:39418	3282625	0	True				
ANR	3282995	AndExpression	d != NULL && * d != '\\0'		3282625	0		&&			
ANR	3282996	EqualityExpression	d != NULL		3282625	0		!=			
ANR	3282997	Identifier	d		3282625	0					
ANR	3282998	Identifier	NULL		3282625	1					
ANR	3282999	EqualityExpression	* d != '\\0'		3282625	1		!=			
ANR	3283000	UnaryOperationExpression	* d		3282625	0					
ANR	3283001	UnaryOperator	*		3282625	0					
ANR	3283002	Identifier	d		3282625	1					
ANR	3283003	PrimaryExpression	'\\0'		3282625	1					
ANR	3283004	CompoundStatement		79:31:2118:2118	3282625	1					
ANR	3283005	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "" "" )"	1338:3:39426:39467	3282625	0	True				
ANR	3283006	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "" "" )"		3282625	0					
ANR	3283007	Callee	* info -> fprintf_func		3282625	0					
ANR	3283008	UnaryOperationExpression	* info -> fprintf_func		3282625	0					
ANR	3283009	UnaryOperator	*		3282625	0					
ANR	3283010	PtrMemberAccess	info -> fprintf_func		3282625	1					
ANR	3283011	Identifier	info		3282625	0					
ANR	3283012	Identifier	fprintf_func		3282625	1					
ANR	3283013	ArgumentList	info -> stream		3282625	1					
ANR	3283014	Argument	info -> stream		3282625	0					
ANR	3283015	PtrMemberAccess	info -> stream		3282625	0					
ANR	3283016	Identifier	info		3282625	0					
ANR	3283017	Identifier	stream		3282625	1					
ANR	3283018	Argument	""" """		3282625	1					
ANR	3283019	PrimaryExpression	""" """		3282625	0					
ANR	3283020	ExpressionStatement	"print_insn_args ( d , word , memaddr , info , op )"	1339:3:39472:39516	3282625	1	True				
ANR	3283021	CallExpression	"print_insn_args ( d , word , memaddr , info , op )"		3282625	0					
ANR	3283022	Callee	print_insn_args		3282625	0					
ANR	3283023	Identifier	print_insn_args		3282625	0					
ANR	3283024	ArgumentList	d		3282625	1					
ANR	3283025	Argument	d		3282625	0					
ANR	3283026	Identifier	d		3282625	0					
ANR	3283027	Argument	word		3282625	1					
ANR	3283028	Identifier	word		3282625	0					
ANR	3283029	Argument	memaddr		3282625	2					
ANR	3283030	Identifier	memaddr		3282625	0					
ANR	3283031	Argument	info		3282625	3					
ANR	3283032	Identifier	info		3282625	0					
ANR	3283033	Argument	op		3282625	4					
ANR	3283034	Identifier	op		3282625	0					
ANR	3283035	ReturnStatement	return INSNLEN ;	1342:7:39530:39544	3282625	6	True				
ANR	3283036	Identifier	INSNLEN		3282625	0					
ANR	3283037	ExpressionStatement	info -> insn_type = dis_noninsn	1348:2:39605:39634	3282625	16	True				
ANR	3283038	AssignmentExpression	info -> insn_type = dis_noninsn		3282625	0		=			
ANR	3283039	PtrMemberAccess	info -> insn_type		3282625	0					
ANR	3283040	Identifier	info		3282625	0					
ANR	3283041	Identifier	insn_type		3282625	1					
ANR	3283042	Identifier	dis_noninsn		3282625	1					
ANR	3283043	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , word )"	1349:2:39638:39689	3282625	17	True				
ANR	3283044	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%lx"" , word )"		3282625	0					
ANR	3283045	Callee	* info -> fprintf_func		3282625	0					
ANR	3283046	UnaryOperationExpression	* info -> fprintf_func		3282625	0					
ANR	3283047	UnaryOperator	*		3282625	0					
ANR	3283048	PtrMemberAccess	info -> fprintf_func		3282625	1					
ANR	3283049	Identifier	info		3282625	0					
ANR	3283050	Identifier	fprintf_func		3282625	1					
ANR	3283051	ArgumentList	info -> stream		3282625	1					
ANR	3283052	Argument	info -> stream		3282625	0					
ANR	3283053	PtrMemberAccess	info -> stream		3282625	0					
ANR	3283054	Identifier	info		3282625	0					
ANR	3283055	Identifier	stream		3282625	1					
ANR	3283056	Argument	"""0x%lx"""		3282625	1					
ANR	3283057	PrimaryExpression	"""0x%lx"""		3282625	0					
ANR	3283058	Argument	word		3282625	2					
ANR	3283059	Identifier	word		3282625	0					
ANR	3283060	ReturnStatement	return INSNLEN ;	1350:2:39693:39707	3282625	18	True				
ANR	3283061	Identifier	INSNLEN		3282625	0					
ANR	3283062	ReturnType	static int		3282625	1					
ANR	3283063	Identifier	print_insn_mips		3282625	2					
ANR	3283064	ParameterList	"bfd_vma memaddr , unsigned long int word , struct disassemble_info * info"		3282625	3					
ANR	3283065	Parameter	bfd_vma memaddr	1256:17:37224:37238	3282625	0	True				
ANR	3283066	ParameterType	bfd_vma		3282625	0					
ANR	3283067	Identifier	memaddr		3282625	1					
ANR	3283068	Parameter	unsigned long int word	1257:3:37244:37265	3282625	1	True				
ANR	3283069	ParameterType	unsigned long int		3282625	0					
ANR	3283070	Identifier	word		3282625	1					
ANR	3283071	Parameter	struct disassemble_info * info	1258:3:37271:37299	3282625	2	True				
ANR	3283072	ParameterType	struct disassemble_info *		3282625	0					
ANR	3283073	Identifier	info		3282625	1					
ANR	3283074	CFGEntryNode	ENTRY		3282625		True				
ANR	3283075	CFGExitNode	EXIT		3282625		True				
ANR	3283076	Symbol	* op		3282625						
ANR	3283077	Symbol	dis_jsr		3282625						
ANR	3283078	Symbol	dis_noninsn		3282625						
ANR	3283079	Symbol	INSN_MACRO		3282625						
ANR	3283080	Symbol	info -> target2		3282625						
ANR	3283081	Symbol	info -> data_size		3282625						
ANR	3283082	Symbol	op -> match		3282625						
ANR	3283083	Symbol	INSN2_ALIAS		3282625						
ANR	3283084	Symbol	info -> fprintf_func		3282625						
ANR	3283085	Symbol	op -> args		3282625						
ANR	3283086	Symbol	op -> pinfo2		3282625						
ANR	3283087	Symbol	dis_nonbranch		3282625						
ANR	3283088	Symbol	OP_SH_OP		3282625						
ANR	3283089	Symbol	INSN_COND_BRANCH_DELAY		3282625						
ANR	3283090	Symbol	op -> mask		3282625						
ANR	3283091	Symbol	info		3282625						
ANR	3283092	Symbol	strcmp		3282625						
ANR	3283093	Symbol	init		3282625						
ANR	3283094	Symbol	NULL		3282625						
ANR	3283095	Symbol	NUMOPCODES		3282625						
ANR	3283096	Symbol	INSN_UNCOND_BRANCH_DELAY		3282625						
ANR	3283097	Symbol	info -> endian		3282625						
ANR	3283098	Symbol	* mips_hash		3282625						
ANR	3283099	Symbol	info -> bytes_per_chunk		3282625						
ANR	3283100	Symbol	mips_isa		3282625						
ANR	3283101	Symbol	INSN_STORE_MEMORY		3282625						
ANR	3283102	Symbol	* OP_SH_OP		3282625						
ANR	3283103	Symbol	mips_opcodes		3282625						
ANR	3283104	Symbol	word		3282625						
ANR	3283105	Symbol	info -> insn_info_valid		3282625						
ANR	3283106	Symbol	INSNLEN		3282625						
ANR	3283107	Symbol	dis_condjsr		3282625						
ANR	3283108	Symbol	no_aliases		3282625						
ANR	3283109	Symbol	memaddr		3282625						
ANR	3283110	Symbol	OP_MASK_OP		3282625						
ANR	3283111	Symbol	info -> branch_delay_insns		3282625						
ANR	3283112	Symbol	dis_dref		3282625						
ANR	3283113	Symbol	info -> stream		3282625						
ANR	3283114	Symbol	mips_hash		3282625						
ANR	3283115	Symbol	mips_processor		3282625						
ANR	3283116	Symbol	info -> target		3282625						
ANR	3283117	Symbol	* OP_MASK_OP		3282625						
ANR	3283118	Symbol	info -> insn_type		3282625						
ANR	3283119	Symbol	op		3282625						
ANR	3283120	Symbol	d		3282625						
ANR	3283121	Symbol	* word		3282625						
ANR	3283122	Symbol	INSN_WRITE_GPR_31		3282625						
ANR	3283123	Symbol	op -> pinfo		3282625						
ANR	3283124	Symbol	i		3282625						
ANR	3283125	Symbol	dis_condbranch		3282625						
ANR	3283126	Symbol	* d		3282625						
ANR	3283127	Symbol	INSN_COND_BRANCH_LIKELY		3282625						
ANR	3283128	Symbol	OPCODE_IS_MEMBER		3282625						
ANR	3283129	Symbol	op -> name		3282625						
ANR	3283130	Symbol	* i		3282625						
ANR	3283131	Symbol	info -> display_endian		3282625						
ANR	3283132	Symbol	* info		3282625						
ANR	3283133	Symbol	dis_branch		3282625						
ANR	3283134	Symbol	INSN_LOAD_MEMORY_DELAY		3282625						
ANR	3283135	Function	print_mips16_insn_arg	1355:0:39770:51966							
ANR	3283136	FunctionDef	"print_mips16_insn_arg (char type , const struct mips_opcode * op , int l , bfd_boolean use_extend , int extend , bfd_vma memaddr , struct disassemble_info * info)"		3283135	0					
ANR	3283137	CompoundStatement		1363:0:39991:51966	3283135	0					
ANR	3283138	SwitchStatement	switch ( type )		3283135	0					
ANR	3283139	Condition	type	1364:10:40003:40006	3283135	0	True				
ANR	3283140	Identifier	type		3283135	0					
ANR	3283141	CompoundStatement		3:4:21:21	3283135	1					
ANR	3283142	Label	"case ',' :"	1366:4:40019:40027	3283135	0	True				
ANR	3283143	Label	case '(' :	1367:4:40033:40041	3283135	1	True				
ANR	3283144	Label	case ')' :	1368:4:40047:40055	3283135	2	True				
ANR	3283145	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%c"" , type )"	1369:6:40063:40111	3283135	3	True				
ANR	3283146	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%c"" , type )"		3283135	0					
ANR	3283147	Callee	* info -> fprintf_func		3283135	0					
ANR	3283148	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283149	UnaryOperator	*		3283135	0					
ANR	3283150	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283151	Identifier	info		3283135	0					
ANR	3283152	Identifier	fprintf_func		3283135	1					
ANR	3283153	ArgumentList	info -> stream		3283135	1					
ANR	3283154	Argument	info -> stream		3283135	0					
ANR	3283155	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283156	Identifier	info		3283135	0					
ANR	3283157	Identifier	stream		3283135	1					
ANR	3283158	Argument	"""%c"""		3283135	1					
ANR	3283159	PrimaryExpression	"""%c"""		3283135	0					
ANR	3283160	Argument	type		3283135	2					
ANR	3283161	Identifier	type		3283135	0					
ANR	3283162	BreakStatement	break ;	1370:6:40119:40124	3283135	4	True				
ANR	3283163	Label	case 'y' :	1372:4:40131:40139	3283135	5	True				
ANR	3283164	Label	case 'w' :	1373:4:40145:40153	3283135	6	True				
ANR	3283165	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) ) )"	1374:6:40161:40285	3283135	7	True				
ANR	3283166	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) ) )"		3283135	0					
ANR	3283167	Callee	* info -> fprintf_func		3283135	0					
ANR	3283168	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283169	UnaryOperator	*		3283135	0					
ANR	3283170	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283171	Identifier	info		3283135	0					
ANR	3283172	Identifier	fprintf_func		3283135	1					
ANR	3283173	ArgumentList	info -> stream		3283135	1					
ANR	3283174	Argument	info -> stream		3283135	0					
ANR	3283175	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283176	Identifier	info		3283135	0					
ANR	3283177	Identifier	stream		3283135	1					
ANR	3283178	Argument	"""%s"""		3283135	1					
ANR	3283179	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283180	Argument	mips16_reg_names ( ( ( l >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) )		3283135	2					
ANR	3283181	CallExpression	mips16_reg_names ( ( ( l >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) )		3283135	0					
ANR	3283182	Callee	mips16_reg_names		3283135	0					
ANR	3283183	Identifier	mips16_reg_names		3283135	0					
ANR	3283184	ArgumentList	( l >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY		3283135	1					
ANR	3283185	Argument	( l >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY		3283135	0					
ANR	3283186	BitAndExpression	( l >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY		3283135	0		&			
ANR	3283187	ShiftExpression	l >> MIPS16OP_SH_RY		3283135	0		>>			
ANR	3283188	Identifier	l		3283135	0					
ANR	3283189	Identifier	MIPS16OP_SH_RY		3283135	1					
ANR	3283190	Identifier	MIPS16OP_MASK_RY		3283135	1					
ANR	3283191	BreakStatement	break ;	1377:6:40293:40298	3283135	8	True				
ANR	3283192	Label	case 'x' :	1379:4:40305:40313	3283135	9	True				
ANR	3283193	Label	case 'v' :	1380:4:40319:40327	3283135	10	True				
ANR	3283194	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) ) )"	1381:6:40335:40459	3283135	11	True				
ANR	3283195	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) ) )"		3283135	0					
ANR	3283196	Callee	* info -> fprintf_func		3283135	0					
ANR	3283197	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283198	UnaryOperator	*		3283135	0					
ANR	3283199	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283200	Identifier	info		3283135	0					
ANR	3283201	Identifier	fprintf_func		3283135	1					
ANR	3283202	ArgumentList	info -> stream		3283135	1					
ANR	3283203	Argument	info -> stream		3283135	0					
ANR	3283204	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283205	Identifier	info		3283135	0					
ANR	3283206	Identifier	stream		3283135	1					
ANR	3283207	Argument	"""%s"""		3283135	1					
ANR	3283208	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283209	Argument	mips16_reg_names ( ( ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) )		3283135	2					
ANR	3283210	CallExpression	mips16_reg_names ( ( ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) )		3283135	0					
ANR	3283211	Callee	mips16_reg_names		3283135	0					
ANR	3283212	Identifier	mips16_reg_names		3283135	0					
ANR	3283213	ArgumentList	( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3283135	1					
ANR	3283214	Argument	( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3283135	0					
ANR	3283215	BitAndExpression	( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3283135	0		&			
ANR	3283216	ShiftExpression	l >> MIPS16OP_SH_RX		3283135	0		>>			
ANR	3283217	Identifier	l		3283135	0					
ANR	3283218	Identifier	MIPS16OP_SH_RX		3283135	1					
ANR	3283219	Identifier	MIPS16OP_MASK_RX		3283135	1					
ANR	3283220	BreakStatement	break ;	1384:6:40467:40472	3283135	12	True				
ANR	3283221	Label	case 'z' :	1386:4:40479:40487	3283135	13	True				
ANR	3283222	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) ) )"	1387:6:40495:40619	3283135	14	True				
ANR	3283223	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) ) )"		3283135	0					
ANR	3283224	Callee	* info -> fprintf_func		3283135	0					
ANR	3283225	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283226	UnaryOperator	*		3283135	0					
ANR	3283227	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283228	Identifier	info		3283135	0					
ANR	3283229	Identifier	fprintf_func		3283135	1					
ANR	3283230	ArgumentList	info -> stream		3283135	1					
ANR	3283231	Argument	info -> stream		3283135	0					
ANR	3283232	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283233	Identifier	info		3283135	0					
ANR	3283234	Identifier	stream		3283135	1					
ANR	3283235	Argument	"""%s"""		3283135	1					
ANR	3283236	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283237	Argument	mips16_reg_names ( ( ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) )		3283135	2					
ANR	3283238	CallExpression	mips16_reg_names ( ( ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) )		3283135	0					
ANR	3283239	Callee	mips16_reg_names		3283135	0					
ANR	3283240	Identifier	mips16_reg_names		3283135	0					
ANR	3283241	ArgumentList	( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3283135	1					
ANR	3283242	Argument	( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3283135	0					
ANR	3283243	BitAndExpression	( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3283135	0		&			
ANR	3283244	ShiftExpression	l >> MIPS16OP_SH_RZ		3283135	0		>>			
ANR	3283245	Identifier	l		3283135	0					
ANR	3283246	Identifier	MIPS16OP_SH_RZ		3283135	1					
ANR	3283247	Identifier	MIPS16OP_MASK_RZ		3283135	1					
ANR	3283248	BreakStatement	break ;	1390:6:40627:40632	3283135	15	True				
ANR	3283249	Label	case 'Z' :	1392:4:40639:40647	3283135	16	True				
ANR	3283250	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_MOVE32Z ) & MIPS16OP_MASK_MOVE32Z ) ) )"	1393:6:40655:40789	3283135	17	True				
ANR	3283251	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips16_reg_names ( ( ( l >> MIPS16OP_SH_MOVE32Z ) & MIPS16OP_MASK_MOVE32Z ) ) )"		3283135	0					
ANR	3283252	Callee	* info -> fprintf_func		3283135	0					
ANR	3283253	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283254	UnaryOperator	*		3283135	0					
ANR	3283255	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283256	Identifier	info		3283135	0					
ANR	3283257	Identifier	fprintf_func		3283135	1					
ANR	3283258	ArgumentList	info -> stream		3283135	1					
ANR	3283259	Argument	info -> stream		3283135	0					
ANR	3283260	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283261	Identifier	info		3283135	0					
ANR	3283262	Identifier	stream		3283135	1					
ANR	3283263	Argument	"""%s"""		3283135	1					
ANR	3283264	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283265	Argument	mips16_reg_names ( ( ( l >> MIPS16OP_SH_MOVE32Z ) & MIPS16OP_MASK_MOVE32Z ) )		3283135	2					
ANR	3283266	CallExpression	mips16_reg_names ( ( ( l >> MIPS16OP_SH_MOVE32Z ) & MIPS16OP_MASK_MOVE32Z ) )		3283135	0					
ANR	3283267	Callee	mips16_reg_names		3283135	0					
ANR	3283268	Identifier	mips16_reg_names		3283135	0					
ANR	3283269	ArgumentList	( l >> MIPS16OP_SH_MOVE32Z ) & MIPS16OP_MASK_MOVE32Z		3283135	1					
ANR	3283270	Argument	( l >> MIPS16OP_SH_MOVE32Z ) & MIPS16OP_MASK_MOVE32Z		3283135	0					
ANR	3283271	BitAndExpression	( l >> MIPS16OP_SH_MOVE32Z ) & MIPS16OP_MASK_MOVE32Z		3283135	0		&			
ANR	3283272	ShiftExpression	l >> MIPS16OP_SH_MOVE32Z		3283135	0		>>			
ANR	3283273	Identifier	l		3283135	0					
ANR	3283274	Identifier	MIPS16OP_SH_MOVE32Z		3283135	1					
ANR	3283275	Identifier	MIPS16OP_MASK_MOVE32Z		3283135	1					
ANR	3283276	BreakStatement	break ;	1396:6:40797:40802	3283135	18	True				
ANR	3283277	Label	case '0' :	1398:4:40809:40817	3283135	19	True				
ANR	3283278	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 0 ] )"	1399:6:40825:40886	3283135	20	True				
ANR	3283279	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 0 ] )"		3283135	0					
ANR	3283280	Callee	* info -> fprintf_func		3283135	0					
ANR	3283281	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283282	UnaryOperator	*		3283135	0					
ANR	3283283	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283284	Identifier	info		3283135	0					
ANR	3283285	Identifier	fprintf_func		3283135	1					
ANR	3283286	ArgumentList	info -> stream		3283135	1					
ANR	3283287	Argument	info -> stream		3283135	0					
ANR	3283288	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283289	Identifier	info		3283135	0					
ANR	3283290	Identifier	stream		3283135	1					
ANR	3283291	Argument	"""%s"""		3283135	1					
ANR	3283292	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283293	Argument	mips_gpr_names [ 0 ]		3283135	2					
ANR	3283294	ArrayIndexing	mips_gpr_names [ 0 ]		3283135	0					
ANR	3283295	Identifier	mips_gpr_names		3283135	0					
ANR	3283296	PrimaryExpression	0		3283135	1					
ANR	3283297	BreakStatement	break ;	1400:6:40894:40899	3283135	21	True				
ANR	3283298	Label	case 'S' :	1402:4:40906:40914	3283135	22	True				
ANR	3283299	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 29 ] )"	1403:6:40922:40984	3283135	23	True				
ANR	3283300	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 29 ] )"		3283135	0					
ANR	3283301	Callee	* info -> fprintf_func		3283135	0					
ANR	3283302	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283303	UnaryOperator	*		3283135	0					
ANR	3283304	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283305	Identifier	info		3283135	0					
ANR	3283306	Identifier	fprintf_func		3283135	1					
ANR	3283307	ArgumentList	info -> stream		3283135	1					
ANR	3283308	Argument	info -> stream		3283135	0					
ANR	3283309	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283310	Identifier	info		3283135	0					
ANR	3283311	Identifier	stream		3283135	1					
ANR	3283312	Argument	"""%s"""		3283135	1					
ANR	3283313	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283314	Argument	mips_gpr_names [ 29 ]		3283135	2					
ANR	3283315	ArrayIndexing	mips_gpr_names [ 29 ]		3283135	0					
ANR	3283316	Identifier	mips_gpr_names		3283135	0					
ANR	3283317	PrimaryExpression	29		3283135	1					
ANR	3283318	BreakStatement	break ;	1404:6:40992:40997	3283135	24	True				
ANR	3283319	Label	case 'P' :	1406:4:41004:41012	3283135	25	True				
ANR	3283320	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""$pc"" )"	1407:6:41020:41063	3283135	26	True				
ANR	3283321	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""$pc"" )"		3283135	0					
ANR	3283322	Callee	* info -> fprintf_func		3283135	0					
ANR	3283323	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283324	UnaryOperator	*		3283135	0					
ANR	3283325	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283326	Identifier	info		3283135	0					
ANR	3283327	Identifier	fprintf_func		3283135	1					
ANR	3283328	ArgumentList	info -> stream		3283135	1					
ANR	3283329	Argument	info -> stream		3283135	0					
ANR	3283330	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283331	Identifier	info		3283135	0					
ANR	3283332	Identifier	stream		3283135	1					
ANR	3283333	Argument	"""$pc"""		3283135	1					
ANR	3283334	PrimaryExpression	"""$pc"""		3283135	0					
ANR	3283335	BreakStatement	break ;	1408:6:41071:41076	3283135	27	True				
ANR	3283336	Label	case 'R' :	1410:4:41083:41091	3283135	28	True				
ANR	3283337	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 31 ] )"	1411:6:41099:41161	3283135	29	True				
ANR	3283338	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 31 ] )"		3283135	0					
ANR	3283339	Callee	* info -> fprintf_func		3283135	0					
ANR	3283340	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283341	UnaryOperator	*		3283135	0					
ANR	3283342	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283343	Identifier	info		3283135	0					
ANR	3283344	Identifier	fprintf_func		3283135	1					
ANR	3283345	ArgumentList	info -> stream		3283135	1					
ANR	3283346	Argument	info -> stream		3283135	0					
ANR	3283347	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283348	Identifier	info		3283135	0					
ANR	3283349	Identifier	stream		3283135	1					
ANR	3283350	Argument	"""%s"""		3283135	1					
ANR	3283351	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283352	Argument	mips_gpr_names [ 31 ]		3283135	2					
ANR	3283353	ArrayIndexing	mips_gpr_names [ 31 ]		3283135	0					
ANR	3283354	Identifier	mips_gpr_names		3283135	0					
ANR	3283355	PrimaryExpression	31		3283135	1					
ANR	3283356	BreakStatement	break ;	1412:6:41169:41174	3283135	30	True				
ANR	3283357	Label	case 'X' :	1414:4:41181:41189	3283135	31	True				
ANR	3283358	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( ( l >> MIPS16OP_SH_REGR32 ) & MIPS16OP_MASK_REGR32 ) ] )"	1415:6:41197:41324	3283135	32	True				
ANR	3283359	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ ( ( l >> MIPS16OP_SH_REGR32 ) & MIPS16OP_MASK_REGR32 ) ] )"		3283135	0					
ANR	3283360	Callee	* info -> fprintf_func		3283135	0					
ANR	3283361	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283362	UnaryOperator	*		3283135	0					
ANR	3283363	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283364	Identifier	info		3283135	0					
ANR	3283365	Identifier	fprintf_func		3283135	1					
ANR	3283366	ArgumentList	info -> stream		3283135	1					
ANR	3283367	Argument	info -> stream		3283135	0					
ANR	3283368	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283369	Identifier	info		3283135	0					
ANR	3283370	Identifier	stream		3283135	1					
ANR	3283371	Argument	"""%s"""		3283135	1					
ANR	3283372	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283373	Argument	mips_gpr_names [ ( ( l >> MIPS16OP_SH_REGR32 ) & MIPS16OP_MASK_REGR32 ) ]		3283135	2					
ANR	3283374	ArrayIndexing	mips_gpr_names [ ( ( l >> MIPS16OP_SH_REGR32 ) & MIPS16OP_MASK_REGR32 ) ]		3283135	0					
ANR	3283375	Identifier	mips_gpr_names		3283135	0					
ANR	3283376	BitAndExpression	( l >> MIPS16OP_SH_REGR32 ) & MIPS16OP_MASK_REGR32		3283135	1		&			
ANR	3283377	ShiftExpression	l >> MIPS16OP_SH_REGR32		3283135	0		>>			
ANR	3283378	Identifier	l		3283135	0					
ANR	3283379	Identifier	MIPS16OP_SH_REGR32		3283135	1					
ANR	3283380	Identifier	MIPS16OP_MASK_REGR32		3283135	1					
ANR	3283381	BreakStatement	break ;	1418:6:41332:41337	3283135	33	True				
ANR	3283382	Label	case 'Y' :	1420:4:41344:41352	3283135	34	True				
ANR	3283383	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ MIPS16OP_EXTRACT_REG32R ( l ) ] )"	1421:6:41360:41455	3283135	35	True				
ANR	3283384	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ MIPS16OP_EXTRACT_REG32R ( l ) ] )"		3283135	0					
ANR	3283385	Callee	* info -> fprintf_func		3283135	0					
ANR	3283386	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3283387	UnaryOperator	*		3283135	0					
ANR	3283388	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3283389	Identifier	info		3283135	0					
ANR	3283390	Identifier	fprintf_func		3283135	1					
ANR	3283391	ArgumentList	info -> stream		3283135	1					
ANR	3283392	Argument	info -> stream		3283135	0					
ANR	3283393	PtrMemberAccess	info -> stream		3283135	0					
ANR	3283394	Identifier	info		3283135	0					
ANR	3283395	Identifier	stream		3283135	1					
ANR	3283396	Argument	"""%s"""		3283135	1					
ANR	3283397	PrimaryExpression	"""%s"""		3283135	0					
ANR	3283398	Argument	mips_gpr_names [ MIPS16OP_EXTRACT_REG32R ( l ) ]		3283135	2					
ANR	3283399	ArrayIndexing	mips_gpr_names [ MIPS16OP_EXTRACT_REG32R ( l ) ]		3283135	0					
ANR	3283400	Identifier	mips_gpr_names		3283135	0					
ANR	3283401	CallExpression	MIPS16OP_EXTRACT_REG32R ( l )		3283135	1					
ANR	3283402	Callee	MIPS16OP_EXTRACT_REG32R		3283135	0					
ANR	3283403	Identifier	MIPS16OP_EXTRACT_REG32R		3283135	0					
ANR	3283404	ArgumentList	l		3283135	1					
ANR	3283405	Argument	l		3283135	0					
ANR	3283406	Identifier	l		3283135	0					
ANR	3283407	BreakStatement	break ;	1423:6:41463:41468	3283135	36	True				
ANR	3283408	Label	case '<' :	1425:4:41475:41483	3283135	37	True				
ANR	3283409	Label	case '>' :	1426:4:41489:41497	3283135	38	True				
ANR	3283410	Label	case '[' :	1427:4:41503:41511	3283135	39	True				
ANR	3283411	Label	case ']' :	1428:4:41517:41525	3283135	40	True				
ANR	3283412	Label	case '4' :	1429:4:41531:41539	3283135	41	True				
ANR	3283413	Label	case '5' :	1430:4:41545:41553	3283135	42	True				
ANR	3283414	Label	case 'H' :	1431:4:41559:41567	3283135	43	True				
ANR	3283415	Label	case 'W' :	1432:4:41573:41581	3283135	44	True				
ANR	3283416	Label	case 'D' :	1433:4:41587:41595	3283135	45	True				
ANR	3283417	Label	case 'j' :	1434:4:41601:41609	3283135	46	True				
ANR	3283418	Label	case '6' :	1435:4:41615:41623	3283135	47	True				
ANR	3283419	Label	case '8' :	1436:4:41629:41637	3283135	48	True				
ANR	3283420	Label	case 'V' :	1437:4:41643:41651	3283135	49	True				
ANR	3283421	Label	case 'C' :	1438:4:41657:41665	3283135	50	True				
ANR	3283422	Label	case 'U' :	1439:4:41671:41679	3283135	51	True				
ANR	3283423	Label	case 'k' :	1440:4:41685:41693	3283135	52	True				
ANR	3283424	Label	case 'K' :	1441:4:41699:41707	3283135	53	True				
ANR	3283425	Label	case 'p' :	1442:4:41713:41721	3283135	54	True				
ANR	3283426	Label	case 'q' :	1443:4:41727:41735	3283135	55	True				
ANR	3283427	Label	case 'A' :	1444:4:41741:41749	3283135	56	True				
ANR	3283428	Label	case 'B' :	1445:4:41755:41763	3283135	57	True				
ANR	3283429	Label	case 'E' :	1446:4:41769:41777	3283135	58	True				
ANR	3283430	CompoundStatement		86:1:1796:1858	3283135	59					
ANR	3283431	IdentifierDeclStatement	"int immed , nbits , shift , signedp , extbits , pcrel , extu , branch ;"	1448:1:41788:41850	3283135	0	True				
ANR	3283432	IdentifierDecl	immed		3283135	0					
ANR	3283433	IdentifierDeclType	int		3283135	0					
ANR	3283434	Identifier	immed		3283135	1					
ANR	3283435	IdentifierDecl	nbits		3283135	1					
ANR	3283436	IdentifierDeclType	int		3283135	0					
ANR	3283437	Identifier	nbits		3283135	1					
ANR	3283438	IdentifierDecl	shift		3283135	2					
ANR	3283439	IdentifierDeclType	int		3283135	0					
ANR	3283440	Identifier	shift		3283135	1					
ANR	3283441	IdentifierDecl	signedp		3283135	3					
ANR	3283442	IdentifierDeclType	int		3283135	0					
ANR	3283443	Identifier	signedp		3283135	1					
ANR	3283444	IdentifierDecl	extbits		3283135	4					
ANR	3283445	IdentifierDeclType	int		3283135	0					
ANR	3283446	Identifier	extbits		3283135	1					
ANR	3283447	IdentifierDecl	pcrel		3283135	5					
ANR	3283448	IdentifierDeclType	int		3283135	0					
ANR	3283449	Identifier	pcrel		3283135	1					
ANR	3283450	IdentifierDecl	extu		3283135	6					
ANR	3283451	IdentifierDeclType	int		3283135	0					
ANR	3283452	Identifier	extu		3283135	1					
ANR	3283453	IdentifierDecl	branch		3283135	7					
ANR	3283454	IdentifierDeclType	int		3283135	0					
ANR	3283455	Identifier	branch		3283135	1					
ANR	3283456	ExpressionStatement	shift = 0	1450:1:41854:41863	3283135	1	True				
ANR	3283457	AssignmentExpression	shift = 0		3283135	0		=			
ANR	3283458	Identifier	shift		3283135	0					
ANR	3283459	PrimaryExpression	0		3283135	1					
ANR	3283460	ExpressionStatement	signedp = 0	1451:1:41866:41877	3283135	2	True				
ANR	3283461	AssignmentExpression	signedp = 0		3283135	0		=			
ANR	3283462	Identifier	signedp		3283135	0					
ANR	3283463	PrimaryExpression	0		3283135	1					
ANR	3283464	ExpressionStatement	extbits = 16	1452:1:41880:41892	3283135	3	True				
ANR	3283465	AssignmentExpression	extbits = 16		3283135	0		=			
ANR	3283466	Identifier	extbits		3283135	0					
ANR	3283467	PrimaryExpression	16		3283135	1					
ANR	3283468	ExpressionStatement	pcrel = 0	1453:1:41895:41904	3283135	4	True				
ANR	3283469	AssignmentExpression	pcrel = 0		3283135	0		=			
ANR	3283470	Identifier	pcrel		3283135	0					
ANR	3283471	PrimaryExpression	0		3283135	1					
ANR	3283472	ExpressionStatement	extu = 0	1454:1:41907:41915	3283135	5	True				
ANR	3283473	AssignmentExpression	extu = 0		3283135	0		=			
ANR	3283474	Identifier	extu		3283135	0					
ANR	3283475	PrimaryExpression	0		3283135	1					
ANR	3283476	ExpressionStatement	branch = 0	1455:1:41918:41928	3283135	6	True				
ANR	3283477	AssignmentExpression	branch = 0		3283135	0		=			
ANR	3283478	Identifier	branch		3283135	0					
ANR	3283479	PrimaryExpression	0		3283135	1					
ANR	3283480	SwitchStatement	switch ( type )		3283135	7					
ANR	3283481	Condition	type	1456:9:41939:41942	3283135	0	True				
ANR	3283482	Identifier	type		3283135	0					
ANR	3283483	CompoundStatement		95:3:1956:1956	3283135	1					
ANR	3283484	Label	case '<' :	1458:3:41953:41961	3283135	0	True				
ANR	3283485	ExpressionStatement	nbits = 3	1459:5:41968:41977	3283135	1	True				
ANR	3283486	AssignmentExpression	nbits = 3		3283135	0		=			
ANR	3283487	Identifier	nbits		3283135	0					
ANR	3283488	PrimaryExpression	3		3283135	1					
ANR	3283489	ExpressionStatement	immed = ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ	1460:5:41984:42032	3283135	2	True				
ANR	3283490	AssignmentExpression	immed = ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3283135	0		=			
ANR	3283491	Identifier	immed		3283135	0					
ANR	3283492	BitAndExpression	( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3283135	1		&			
ANR	3283493	ShiftExpression	l >> MIPS16OP_SH_RZ		3283135	0		>>			
ANR	3283494	Identifier	l		3283135	0					
ANR	3283495	Identifier	MIPS16OP_SH_RZ		3283135	1					
ANR	3283496	Identifier	MIPS16OP_MASK_RZ		3283135	1					
ANR	3283497	ExpressionStatement	extbits = 5	1461:5:42039:42050	3283135	3	True				
ANR	3283498	AssignmentExpression	extbits = 5		3283135	0		=			
ANR	3283499	Identifier	extbits		3283135	0					
ANR	3283500	PrimaryExpression	5		3283135	1					
ANR	3283501	ExpressionStatement	extu = 1	1462:5:42057:42065	3283135	4	True				
ANR	3283502	AssignmentExpression	extu = 1		3283135	0		=			
ANR	3283503	Identifier	extu		3283135	0					
ANR	3283504	PrimaryExpression	1		3283135	1					
ANR	3283505	BreakStatement	break ;	1463:5:42072:42077	3283135	5	True				
ANR	3283506	Label	case '>' :	1464:3:42082:42090	3283135	6	True				
ANR	3283507	ExpressionStatement	nbits = 3	1465:5:42097:42106	3283135	7	True				
ANR	3283508	AssignmentExpression	nbits = 3		3283135	0		=			
ANR	3283509	Identifier	nbits		3283135	0					
ANR	3283510	PrimaryExpression	3		3283135	1					
ANR	3283511	ExpressionStatement	immed = ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX	1466:5:42113:42161	3283135	8	True				
ANR	3283512	AssignmentExpression	immed = ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3283135	0		=			
ANR	3283513	Identifier	immed		3283135	0					
ANR	3283514	BitAndExpression	( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3283135	1		&			
ANR	3283515	ShiftExpression	l >> MIPS16OP_SH_RX		3283135	0		>>			
ANR	3283516	Identifier	l		3283135	0					
ANR	3283517	Identifier	MIPS16OP_SH_RX		3283135	1					
ANR	3283518	Identifier	MIPS16OP_MASK_RX		3283135	1					
ANR	3283519	ExpressionStatement	extbits = 5	1467:5:42168:42179	3283135	9	True				
ANR	3283520	AssignmentExpression	extbits = 5		3283135	0		=			
ANR	3283521	Identifier	extbits		3283135	0					
ANR	3283522	PrimaryExpression	5		3283135	1					
ANR	3283523	ExpressionStatement	extu = 1	1468:5:42186:42194	3283135	10	True				
ANR	3283524	AssignmentExpression	extu = 1		3283135	0		=			
ANR	3283525	Identifier	extu		3283135	0					
ANR	3283526	PrimaryExpression	1		3283135	1					
ANR	3283527	BreakStatement	break ;	1469:5:42201:42206	3283135	11	True				
ANR	3283528	Label	case '[' :	1470:3:42211:42219	3283135	12	True				
ANR	3283529	ExpressionStatement	nbits = 3	1471:5:42226:42235	3283135	13	True				
ANR	3283530	AssignmentExpression	nbits = 3		3283135	0		=			
ANR	3283531	Identifier	nbits		3283135	0					
ANR	3283532	PrimaryExpression	3		3283135	1					
ANR	3283533	ExpressionStatement	immed = ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ	1472:5:42242:42290	3283135	14	True				
ANR	3283534	AssignmentExpression	immed = ( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3283135	0		=			
ANR	3283535	Identifier	immed		3283135	0					
ANR	3283536	BitAndExpression	( l >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3283135	1		&			
ANR	3283537	ShiftExpression	l >> MIPS16OP_SH_RZ		3283135	0		>>			
ANR	3283538	Identifier	l		3283135	0					
ANR	3283539	Identifier	MIPS16OP_SH_RZ		3283135	1					
ANR	3283540	Identifier	MIPS16OP_MASK_RZ		3283135	1					
ANR	3283541	ExpressionStatement	extbits = 6	1473:5:42297:42308	3283135	15	True				
ANR	3283542	AssignmentExpression	extbits = 6		3283135	0		=			
ANR	3283543	Identifier	extbits		3283135	0					
ANR	3283544	PrimaryExpression	6		3283135	1					
ANR	3283545	ExpressionStatement	extu = 1	1474:5:42315:42323	3283135	16	True				
ANR	3283546	AssignmentExpression	extu = 1		3283135	0		=			
ANR	3283547	Identifier	extu		3283135	0					
ANR	3283548	PrimaryExpression	1		3283135	1					
ANR	3283549	BreakStatement	break ;	1475:5:42330:42335	3283135	17	True				
ANR	3283550	Label	case ']' :	1476:3:42340:42348	3283135	18	True				
ANR	3283551	ExpressionStatement	nbits = 3	1477:5:42355:42364	3283135	19	True				
ANR	3283552	AssignmentExpression	nbits = 3		3283135	0		=			
ANR	3283553	Identifier	nbits		3283135	0					
ANR	3283554	PrimaryExpression	3		3283135	1					
ANR	3283555	ExpressionStatement	immed = ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX	1478:5:42371:42419	3283135	20	True				
ANR	3283556	AssignmentExpression	immed = ( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3283135	0		=			
ANR	3283557	Identifier	immed		3283135	0					
ANR	3283558	BitAndExpression	( l >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3283135	1		&			
ANR	3283559	ShiftExpression	l >> MIPS16OP_SH_RX		3283135	0		>>			
ANR	3283560	Identifier	l		3283135	0					
ANR	3283561	Identifier	MIPS16OP_SH_RX		3283135	1					
ANR	3283562	Identifier	MIPS16OP_MASK_RX		3283135	1					
ANR	3283563	ExpressionStatement	extbits = 6	1479:5:42426:42437	3283135	21	True				
ANR	3283564	AssignmentExpression	extbits = 6		3283135	0		=			
ANR	3283565	Identifier	extbits		3283135	0					
ANR	3283566	PrimaryExpression	6		3283135	1					
ANR	3283567	ExpressionStatement	extu = 1	1480:5:42444:42452	3283135	22	True				
ANR	3283568	AssignmentExpression	extu = 1		3283135	0		=			
ANR	3283569	Identifier	extu		3283135	0					
ANR	3283570	PrimaryExpression	1		3283135	1					
ANR	3283571	BreakStatement	break ;	1481:5:42459:42464	3283135	23	True				
ANR	3283572	Label	case '4' :	1482:3:42469:42477	3283135	24	True				
ANR	3283573	ExpressionStatement	nbits = 4	1483:5:42484:42493	3283135	25	True				
ANR	3283574	AssignmentExpression	nbits = 4		3283135	0		=			
ANR	3283575	Identifier	nbits		3283135	0					
ANR	3283576	PrimaryExpression	4		3283135	1					
ANR	3283577	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM4 ) & MIPS16OP_MASK_IMM4	1484:5:42500:42552	3283135	26	True				
ANR	3283578	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM4 ) & MIPS16OP_MASK_IMM4		3283135	0		=			
ANR	3283579	Identifier	immed		3283135	0					
ANR	3283580	BitAndExpression	( l >> MIPS16OP_SH_IMM4 ) & MIPS16OP_MASK_IMM4		3283135	1		&			
ANR	3283581	ShiftExpression	l >> MIPS16OP_SH_IMM4		3283135	0		>>			
ANR	3283582	Identifier	l		3283135	0					
ANR	3283583	Identifier	MIPS16OP_SH_IMM4		3283135	1					
ANR	3283584	Identifier	MIPS16OP_MASK_IMM4		3283135	1					
ANR	3283585	ExpressionStatement	signedp = 1	1485:5:42559:42570	3283135	27	True				
ANR	3283586	AssignmentExpression	signedp = 1		3283135	0		=			
ANR	3283587	Identifier	signedp		3283135	0					
ANR	3283588	PrimaryExpression	1		3283135	1					
ANR	3283589	ExpressionStatement	extbits = 15	1486:5:42577:42589	3283135	28	True				
ANR	3283590	AssignmentExpression	extbits = 15		3283135	0		=			
ANR	3283591	Identifier	extbits		3283135	0					
ANR	3283592	PrimaryExpression	15		3283135	1					
ANR	3283593	BreakStatement	break ;	1487:5:42596:42601	3283135	29	True				
ANR	3283594	Label	case '5' :	1488:3:42606:42614	3283135	30	True				
ANR	3283595	ExpressionStatement	nbits = 5	1489:5:42621:42630	3283135	31	True				
ANR	3283596	AssignmentExpression	nbits = 5		3283135	0		=			
ANR	3283597	Identifier	nbits		3283135	0					
ANR	3283598	PrimaryExpression	5		3283135	1					
ANR	3283599	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5	1490:5:42637:42689	3283135	32	True				
ANR	3283600	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	0		=			
ANR	3283601	Identifier	immed		3283135	0					
ANR	3283602	BitAndExpression	( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	1		&			
ANR	3283603	ShiftExpression	l >> MIPS16OP_SH_IMM5		3283135	0		>>			
ANR	3283604	Identifier	l		3283135	0					
ANR	3283605	Identifier	MIPS16OP_SH_IMM5		3283135	1					
ANR	3283606	Identifier	MIPS16OP_MASK_IMM5		3283135	1					
ANR	3283607	ExpressionStatement	info -> insn_type = dis_dref	1491:5:42696:42722	3283135	33	True				
ANR	3283608	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3283609	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283610	Identifier	info		3283135	0					
ANR	3283611	Identifier	insn_type		3283135	1					
ANR	3283612	Identifier	dis_dref		3283135	1					
ANR	3283613	ExpressionStatement	info -> data_size = 1	1492:5:42729:42748	3283135	34	True				
ANR	3283614	AssignmentExpression	info -> data_size = 1		3283135	0		=			
ANR	3283615	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3283616	Identifier	info		3283135	0					
ANR	3283617	Identifier	data_size		3283135	1					
ANR	3283618	PrimaryExpression	1		3283135	1					
ANR	3283619	BreakStatement	break ;	1493:5:42755:42760	3283135	35	True				
ANR	3283620	Label	case 'H' :	1494:3:42765:42773	3283135	36	True				
ANR	3283621	ExpressionStatement	nbits = 5	1495:5:42780:42789	3283135	37	True				
ANR	3283622	AssignmentExpression	nbits = 5		3283135	0		=			
ANR	3283623	Identifier	nbits		3283135	0					
ANR	3283624	PrimaryExpression	5		3283135	1					
ANR	3283625	ExpressionStatement	shift = 1	1496:5:42796:42805	3283135	38	True				
ANR	3283626	AssignmentExpression	shift = 1		3283135	0		=			
ANR	3283627	Identifier	shift		3283135	0					
ANR	3283628	PrimaryExpression	1		3283135	1					
ANR	3283629	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5	1497:5:42812:42864	3283135	39	True				
ANR	3283630	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	0		=			
ANR	3283631	Identifier	immed		3283135	0					
ANR	3283632	BitAndExpression	( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	1		&			
ANR	3283633	ShiftExpression	l >> MIPS16OP_SH_IMM5		3283135	0		>>			
ANR	3283634	Identifier	l		3283135	0					
ANR	3283635	Identifier	MIPS16OP_SH_IMM5		3283135	1					
ANR	3283636	Identifier	MIPS16OP_MASK_IMM5		3283135	1					
ANR	3283637	ExpressionStatement	info -> insn_type = dis_dref	1498:5:42871:42897	3283135	40	True				
ANR	3283638	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3283639	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283640	Identifier	info		3283135	0					
ANR	3283641	Identifier	insn_type		3283135	1					
ANR	3283642	Identifier	dis_dref		3283135	1					
ANR	3283643	ExpressionStatement	info -> data_size = 2	1499:5:42904:42923	3283135	41	True				
ANR	3283644	AssignmentExpression	info -> data_size = 2		3283135	0		=			
ANR	3283645	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3283646	Identifier	info		3283135	0					
ANR	3283647	Identifier	data_size		3283135	1					
ANR	3283648	PrimaryExpression	2		3283135	1					
ANR	3283649	BreakStatement	break ;	1500:5:42930:42935	3283135	42	True				
ANR	3283650	Label	case 'W' :	1501:3:42940:42948	3283135	43	True				
ANR	3283651	ExpressionStatement	nbits = 5	1502:5:42955:42964	3283135	44	True				
ANR	3283652	AssignmentExpression	nbits = 5		3283135	0		=			
ANR	3283653	Identifier	nbits		3283135	0					
ANR	3283654	PrimaryExpression	5		3283135	1					
ANR	3283655	ExpressionStatement	shift = 2	1503:5:42971:42980	3283135	45	True				
ANR	3283656	AssignmentExpression	shift = 2		3283135	0		=			
ANR	3283657	Identifier	shift		3283135	0					
ANR	3283658	PrimaryExpression	2		3283135	1					
ANR	3283659	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5	1504:5:42987:43039	3283135	46	True				
ANR	3283660	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	0		=			
ANR	3283661	Identifier	immed		3283135	0					
ANR	3283662	BitAndExpression	( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	1		&			
ANR	3283663	ShiftExpression	l >> MIPS16OP_SH_IMM5		3283135	0		>>			
ANR	3283664	Identifier	l		3283135	0					
ANR	3283665	Identifier	MIPS16OP_SH_IMM5		3283135	1					
ANR	3283666	Identifier	MIPS16OP_MASK_IMM5		3283135	1					
ANR	3283667	IfStatement	if ( ( op -> pinfo & MIPS16_INSN_READ_PC ) == 0 && ( op -> pinfo & MIPS16_INSN_READ_SP ) == 0 )		3283135	47					
ANR	3283668	Condition	( op -> pinfo & MIPS16_INSN_READ_PC ) == 0 && ( op -> pinfo & MIPS16_INSN_READ_SP ) == 0	1505:9:43050:43131	3283135	0	True				
ANR	3283669	AndExpression	( op -> pinfo & MIPS16_INSN_READ_PC ) == 0 && ( op -> pinfo & MIPS16_INSN_READ_SP ) == 0		3283135	0		&&			
ANR	3283670	EqualityExpression	( op -> pinfo & MIPS16_INSN_READ_PC ) == 0		3283135	0		==			
ANR	3283671	BitAndExpression	op -> pinfo & MIPS16_INSN_READ_PC		3283135	0		&			
ANR	3283672	PtrMemberAccess	op -> pinfo		3283135	0					
ANR	3283673	Identifier	op		3283135	0					
ANR	3283674	Identifier	pinfo		3283135	1					
ANR	3283675	Identifier	MIPS16_INSN_READ_PC		3283135	1					
ANR	3283676	PrimaryExpression	0		3283135	1					
ANR	3283677	EqualityExpression	( op -> pinfo & MIPS16_INSN_READ_SP ) == 0		3283135	1		==			
ANR	3283678	BitAndExpression	op -> pinfo & MIPS16_INSN_READ_SP		3283135	0		&			
ANR	3283679	PtrMemberAccess	op -> pinfo		3283135	0					
ANR	3283680	Identifier	op		3283135	0					
ANR	3283681	Identifier	pinfo		3283135	1					
ANR	3283682	Identifier	MIPS16_INSN_READ_SP		3283135	1					
ANR	3283683	PrimaryExpression	0		3283135	1					
ANR	3283684	CompoundStatement		145:7:3149:3149	3283135	1					
ANR	3283685	ExpressionStatement	info -> insn_type = dis_dref	1508:2:43145:43171	3283135	0	True				
ANR	3283686	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3283687	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283688	Identifier	info		3283135	0					
ANR	3283689	Identifier	insn_type		3283135	1					
ANR	3283690	Identifier	dis_dref		3283135	1					
ANR	3283691	ExpressionStatement	info -> data_size = 4	1509:2:43175:43194	3283135	1	True				
ANR	3283692	AssignmentExpression	info -> data_size = 4		3283135	0		=			
ANR	3283693	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3283694	Identifier	info		3283135	0					
ANR	3283695	Identifier	data_size		3283135	1					
ANR	3283696	PrimaryExpression	4		3283135	1					
ANR	3283697	BreakStatement	break ;	1511:5:43210:43215	3283135	48	True				
ANR	3283698	Label	case 'D' :	1512:3:43220:43228	3283135	49	True				
ANR	3283699	ExpressionStatement	nbits = 5	1513:5:43235:43244	3283135	50	True				
ANR	3283700	AssignmentExpression	nbits = 5		3283135	0		=			
ANR	3283701	Identifier	nbits		3283135	0					
ANR	3283702	PrimaryExpression	5		3283135	1					
ANR	3283703	ExpressionStatement	shift = 3	1514:5:43251:43260	3283135	51	True				
ANR	3283704	AssignmentExpression	shift = 3		3283135	0		=			
ANR	3283705	Identifier	shift		3283135	0					
ANR	3283706	PrimaryExpression	3		3283135	1					
ANR	3283707	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5	1515:5:43267:43319	3283135	52	True				
ANR	3283708	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	0		=			
ANR	3283709	Identifier	immed		3283135	0					
ANR	3283710	BitAndExpression	( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	1		&			
ANR	3283711	ShiftExpression	l >> MIPS16OP_SH_IMM5		3283135	0		>>			
ANR	3283712	Identifier	l		3283135	0					
ANR	3283713	Identifier	MIPS16OP_SH_IMM5		3283135	1					
ANR	3283714	Identifier	MIPS16OP_MASK_IMM5		3283135	1					
ANR	3283715	ExpressionStatement	info -> insn_type = dis_dref	1516:5:43326:43352	3283135	53	True				
ANR	3283716	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3283717	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283718	Identifier	info		3283135	0					
ANR	3283719	Identifier	insn_type		3283135	1					
ANR	3283720	Identifier	dis_dref		3283135	1					
ANR	3283721	ExpressionStatement	info -> data_size = 8	1517:5:43359:43378	3283135	54	True				
ANR	3283722	AssignmentExpression	info -> data_size = 8		3283135	0		=			
ANR	3283723	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3283724	Identifier	info		3283135	0					
ANR	3283725	Identifier	data_size		3283135	1					
ANR	3283726	PrimaryExpression	8		3283135	1					
ANR	3283727	BreakStatement	break ;	1518:5:43385:43390	3283135	55	True				
ANR	3283728	Label	case 'j' :	1519:3:43395:43403	3283135	56	True				
ANR	3283729	ExpressionStatement	nbits = 5	1520:5:43410:43419	3283135	57	True				
ANR	3283730	AssignmentExpression	nbits = 5		3283135	0		=			
ANR	3283731	Identifier	nbits		3283135	0					
ANR	3283732	PrimaryExpression	5		3283135	1					
ANR	3283733	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5	1521:5:43426:43478	3283135	58	True				
ANR	3283734	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	0		=			
ANR	3283735	Identifier	immed		3283135	0					
ANR	3283736	BitAndExpression	( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	1		&			
ANR	3283737	ShiftExpression	l >> MIPS16OP_SH_IMM5		3283135	0		>>			
ANR	3283738	Identifier	l		3283135	0					
ANR	3283739	Identifier	MIPS16OP_SH_IMM5		3283135	1					
ANR	3283740	Identifier	MIPS16OP_MASK_IMM5		3283135	1					
ANR	3283741	ExpressionStatement	signedp = 1	1522:5:43485:43496	3283135	59	True				
ANR	3283742	AssignmentExpression	signedp = 1		3283135	0		=			
ANR	3283743	Identifier	signedp		3283135	0					
ANR	3283744	PrimaryExpression	1		3283135	1					
ANR	3283745	BreakStatement	break ;	1523:5:43503:43508	3283135	60	True				
ANR	3283746	Label	case '6' :	1524:3:43513:43521	3283135	61	True				
ANR	3283747	ExpressionStatement	nbits = 6	1525:5:43528:43537	3283135	62	True				
ANR	3283748	AssignmentExpression	nbits = 6		3283135	0		=			
ANR	3283749	Identifier	nbits		3283135	0					
ANR	3283750	PrimaryExpression	6		3283135	1					
ANR	3283751	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM6 ) & MIPS16OP_MASK_IMM6	1526:5:43544:43596	3283135	63	True				
ANR	3283752	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM6 ) & MIPS16OP_MASK_IMM6		3283135	0		=			
ANR	3283753	Identifier	immed		3283135	0					
ANR	3283754	BitAndExpression	( l >> MIPS16OP_SH_IMM6 ) & MIPS16OP_MASK_IMM6		3283135	1		&			
ANR	3283755	ShiftExpression	l >> MIPS16OP_SH_IMM6		3283135	0		>>			
ANR	3283756	Identifier	l		3283135	0					
ANR	3283757	Identifier	MIPS16OP_SH_IMM6		3283135	1					
ANR	3283758	Identifier	MIPS16OP_MASK_IMM6		3283135	1					
ANR	3283759	BreakStatement	break ;	1527:5:43603:43608	3283135	64	True				
ANR	3283760	Label	case '8' :	1528:3:43613:43621	3283135	65	True				
ANR	3283761	ExpressionStatement	nbits = 8	1529:5:43628:43637	3283135	66	True				
ANR	3283762	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283763	Identifier	nbits		3283135	0					
ANR	3283764	PrimaryExpression	8		3283135	1					
ANR	3283765	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1530:5:43644:43696	3283135	67	True				
ANR	3283766	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283767	Identifier	immed		3283135	0					
ANR	3283768	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283769	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283770	Identifier	l		3283135	0					
ANR	3283771	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283772	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283773	BreakStatement	break ;	1531:5:43703:43708	3283135	68	True				
ANR	3283774	Label	case 'V' :	1532:3:43713:43721	3283135	69	True				
ANR	3283775	ExpressionStatement	nbits = 8	1533:5:43728:43737	3283135	70	True				
ANR	3283776	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283777	Identifier	nbits		3283135	0					
ANR	3283778	PrimaryExpression	8		3283135	1					
ANR	3283779	ExpressionStatement	shift = 2	1534:5:43744:43753	3283135	71	True				
ANR	3283780	AssignmentExpression	shift = 2		3283135	0		=			
ANR	3283781	Identifier	shift		3283135	0					
ANR	3283782	PrimaryExpression	2		3283135	1					
ANR	3283783	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1535:5:43760:43812	3283135	72	True				
ANR	3283784	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283785	Identifier	immed		3283135	0					
ANR	3283786	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283787	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283788	Identifier	l		3283135	0					
ANR	3283789	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283790	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283791	ExpressionStatement	info -> insn_type = dis_dref	1538:5:43929:43955	3283135	73	True				
ANR	3283792	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3283793	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283794	Identifier	info		3283135	0					
ANR	3283795	Identifier	insn_type		3283135	1					
ANR	3283796	Identifier	dis_dref		3283135	1					
ANR	3283797	ExpressionStatement	info -> data_size = 4	1539:5:43962:43981	3283135	74	True				
ANR	3283798	AssignmentExpression	info -> data_size = 4		3283135	0		=			
ANR	3283799	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3283800	Identifier	info		3283135	0					
ANR	3283801	Identifier	data_size		3283135	1					
ANR	3283802	PrimaryExpression	4		3283135	1					
ANR	3283803	BreakStatement	break ;	1540:5:43988:43993	3283135	75	True				
ANR	3283804	Label	case 'C' :	1541:3:43998:44006	3283135	76	True				
ANR	3283805	ExpressionStatement	nbits = 8	1542:5:44013:44022	3283135	77	True				
ANR	3283806	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283807	Identifier	nbits		3283135	0					
ANR	3283808	PrimaryExpression	8		3283135	1					
ANR	3283809	ExpressionStatement	shift = 3	1543:5:44029:44038	3283135	78	True				
ANR	3283810	AssignmentExpression	shift = 3		3283135	0		=			
ANR	3283811	Identifier	shift		3283135	0					
ANR	3283812	PrimaryExpression	3		3283135	1					
ANR	3283813	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1544:5:44045:44097	3283135	79	True				
ANR	3283814	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283815	Identifier	immed		3283135	0					
ANR	3283816	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283817	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283818	Identifier	l		3283135	0					
ANR	3283819	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283820	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283821	ExpressionStatement	info -> insn_type = dis_dref	1545:5:44104:44130	3283135	80	True				
ANR	3283822	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3283823	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283824	Identifier	info		3283135	0					
ANR	3283825	Identifier	insn_type		3283135	1					
ANR	3283826	Identifier	dis_dref		3283135	1					
ANR	3283827	ExpressionStatement	info -> data_size = 8	1546:5:44137:44156	3283135	81	True				
ANR	3283828	AssignmentExpression	info -> data_size = 8		3283135	0		=			
ANR	3283829	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3283830	Identifier	info		3283135	0					
ANR	3283831	Identifier	data_size		3283135	1					
ANR	3283832	PrimaryExpression	8		3283135	1					
ANR	3283833	BreakStatement	break ;	1547:5:44163:44168	3283135	82	True				
ANR	3283834	Label	case 'U' :	1548:3:44173:44181	3283135	83	True				
ANR	3283835	ExpressionStatement	nbits = 8	1549:5:44188:44197	3283135	84	True				
ANR	3283836	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283837	Identifier	nbits		3283135	0					
ANR	3283838	PrimaryExpression	8		3283135	1					
ANR	3283839	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1550:5:44204:44256	3283135	85	True				
ANR	3283840	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283841	Identifier	immed		3283135	0					
ANR	3283842	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283843	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283844	Identifier	l		3283135	0					
ANR	3283845	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283846	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283847	ExpressionStatement	extu = 1	1551:5:44263:44271	3283135	86	True				
ANR	3283848	AssignmentExpression	extu = 1		3283135	0		=			
ANR	3283849	Identifier	extu		3283135	0					
ANR	3283850	PrimaryExpression	1		3283135	1					
ANR	3283851	BreakStatement	break ;	1552:5:44278:44283	3283135	87	True				
ANR	3283852	Label	case 'k' :	1553:3:44288:44296	3283135	88	True				
ANR	3283853	ExpressionStatement	nbits = 8	1554:5:44303:44312	3283135	89	True				
ANR	3283854	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283855	Identifier	nbits		3283135	0					
ANR	3283856	PrimaryExpression	8		3283135	1					
ANR	3283857	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1555:5:44319:44371	3283135	90	True				
ANR	3283858	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283859	Identifier	immed		3283135	0					
ANR	3283860	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283861	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283862	Identifier	l		3283135	0					
ANR	3283863	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283864	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283865	ExpressionStatement	signedp = 1	1556:5:44378:44389	3283135	91	True				
ANR	3283866	AssignmentExpression	signedp = 1		3283135	0		=			
ANR	3283867	Identifier	signedp		3283135	0					
ANR	3283868	PrimaryExpression	1		3283135	1					
ANR	3283869	BreakStatement	break ;	1557:5:44396:44401	3283135	92	True				
ANR	3283870	Label	case 'K' :	1558:3:44406:44414	3283135	93	True				
ANR	3283871	ExpressionStatement	nbits = 8	1559:5:44421:44430	3283135	94	True				
ANR	3283872	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283873	Identifier	nbits		3283135	0					
ANR	3283874	PrimaryExpression	8		3283135	1					
ANR	3283875	ExpressionStatement	shift = 3	1560:5:44437:44446	3283135	95	True				
ANR	3283876	AssignmentExpression	shift = 3		3283135	0		=			
ANR	3283877	Identifier	shift		3283135	0					
ANR	3283878	PrimaryExpression	3		3283135	1					
ANR	3283879	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1561:5:44453:44505	3283135	96	True				
ANR	3283880	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283881	Identifier	immed		3283135	0					
ANR	3283882	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283883	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283884	Identifier	l		3283135	0					
ANR	3283885	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283886	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283887	ExpressionStatement	signedp = 1	1562:5:44512:44523	3283135	97	True				
ANR	3283888	AssignmentExpression	signedp = 1		3283135	0		=			
ANR	3283889	Identifier	signedp		3283135	0					
ANR	3283890	PrimaryExpression	1		3283135	1					
ANR	3283891	BreakStatement	break ;	1563:5:44530:44535	3283135	98	True				
ANR	3283892	Label	case 'p' :	1564:3:44540:44548	3283135	99	True				
ANR	3283893	ExpressionStatement	nbits = 8	1565:5:44555:44564	3283135	100	True				
ANR	3283894	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283895	Identifier	nbits		3283135	0					
ANR	3283896	PrimaryExpression	8		3283135	1					
ANR	3283897	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1566:5:44571:44623	3283135	101	True				
ANR	3283898	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283899	Identifier	immed		3283135	0					
ANR	3283900	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283901	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283902	Identifier	l		3283135	0					
ANR	3283903	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283904	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283905	ExpressionStatement	signedp = 1	1567:5:44630:44641	3283135	102	True				
ANR	3283906	AssignmentExpression	signedp = 1		3283135	0		=			
ANR	3283907	Identifier	signedp		3283135	0					
ANR	3283908	PrimaryExpression	1		3283135	1					
ANR	3283909	ExpressionStatement	pcrel = 1	1568:5:44648:44657	3283135	103	True				
ANR	3283910	AssignmentExpression	pcrel = 1		3283135	0		=			
ANR	3283911	Identifier	pcrel		3283135	0					
ANR	3283912	PrimaryExpression	1		3283135	1					
ANR	3283913	ExpressionStatement	branch = 1	1569:5:44664:44674	3283135	104	True				
ANR	3283914	AssignmentExpression	branch = 1		3283135	0		=			
ANR	3283915	Identifier	branch		3283135	0					
ANR	3283916	PrimaryExpression	1		3283135	1					
ANR	3283917	ExpressionStatement	info -> insn_type = dis_condbranch	1570:5:44681:44713	3283135	105	True				
ANR	3283918	AssignmentExpression	info -> insn_type = dis_condbranch		3283135	0		=			
ANR	3283919	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283920	Identifier	info		3283135	0					
ANR	3283921	Identifier	insn_type		3283135	1					
ANR	3283922	Identifier	dis_condbranch		3283135	1					
ANR	3283923	BreakStatement	break ;	1571:5:44720:44725	3283135	106	True				
ANR	3283924	Label	case 'q' :	1572:3:44730:44738	3283135	107	True				
ANR	3283925	ExpressionStatement	nbits = 11	1573:5:44745:44755	3283135	108	True				
ANR	3283926	AssignmentExpression	nbits = 11		3283135	0		=			
ANR	3283927	Identifier	nbits		3283135	0					
ANR	3283928	PrimaryExpression	11		3283135	1					
ANR	3283929	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM11 ) & MIPS16OP_MASK_IMM11	1574:5:44762:44816	3283135	109	True				
ANR	3283930	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM11 ) & MIPS16OP_MASK_IMM11		3283135	0		=			
ANR	3283931	Identifier	immed		3283135	0					
ANR	3283932	BitAndExpression	( l >> MIPS16OP_SH_IMM11 ) & MIPS16OP_MASK_IMM11		3283135	1		&			
ANR	3283933	ShiftExpression	l >> MIPS16OP_SH_IMM11		3283135	0		>>			
ANR	3283934	Identifier	l		3283135	0					
ANR	3283935	Identifier	MIPS16OP_SH_IMM11		3283135	1					
ANR	3283936	Identifier	MIPS16OP_MASK_IMM11		3283135	1					
ANR	3283937	ExpressionStatement	signedp = 1	1575:5:44823:44834	3283135	110	True				
ANR	3283938	AssignmentExpression	signedp = 1		3283135	0		=			
ANR	3283939	Identifier	signedp		3283135	0					
ANR	3283940	PrimaryExpression	1		3283135	1					
ANR	3283941	ExpressionStatement	pcrel = 1	1576:5:44841:44850	3283135	111	True				
ANR	3283942	AssignmentExpression	pcrel = 1		3283135	0		=			
ANR	3283943	Identifier	pcrel		3283135	0					
ANR	3283944	PrimaryExpression	1		3283135	1					
ANR	3283945	ExpressionStatement	branch = 1	1577:5:44857:44867	3283135	112	True				
ANR	3283946	AssignmentExpression	branch = 1		3283135	0		=			
ANR	3283947	Identifier	branch		3283135	0					
ANR	3283948	PrimaryExpression	1		3283135	1					
ANR	3283949	ExpressionStatement	info -> insn_type = dis_branch	1578:5:44874:44902	3283135	113	True				
ANR	3283950	AssignmentExpression	info -> insn_type = dis_branch		3283135	0		=			
ANR	3283951	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283952	Identifier	info		3283135	0					
ANR	3283953	Identifier	insn_type		3283135	1					
ANR	3283954	Identifier	dis_branch		3283135	1					
ANR	3283955	BreakStatement	break ;	1579:5:44909:44914	3283135	114	True				
ANR	3283956	Label	case 'A' :	1580:3:44919:44927	3283135	115	True				
ANR	3283957	ExpressionStatement	nbits = 8	1581:5:44934:44943	3283135	116	True				
ANR	3283958	AssignmentExpression	nbits = 8		3283135	0		=			
ANR	3283959	Identifier	nbits		3283135	0					
ANR	3283960	PrimaryExpression	8		3283135	1					
ANR	3283961	ExpressionStatement	shift = 2	1582:5:44950:44959	3283135	117	True				
ANR	3283962	AssignmentExpression	shift = 2		3283135	0		=			
ANR	3283963	Identifier	shift		3283135	0					
ANR	3283964	PrimaryExpression	2		3283135	1					
ANR	3283965	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8	1583:5:44966:45018	3283135	118	True				
ANR	3283966	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	0		=			
ANR	3283967	Identifier	immed		3283135	0					
ANR	3283968	BitAndExpression	( l >> MIPS16OP_SH_IMM8 ) & MIPS16OP_MASK_IMM8		3283135	1		&			
ANR	3283969	ShiftExpression	l >> MIPS16OP_SH_IMM8		3283135	0		>>			
ANR	3283970	Identifier	l		3283135	0					
ANR	3283971	Identifier	MIPS16OP_SH_IMM8		3283135	1					
ANR	3283972	Identifier	MIPS16OP_MASK_IMM8		3283135	1					
ANR	3283973	ExpressionStatement	pcrel = 1	1584:5:45025:45034	3283135	119	True				
ANR	3283974	AssignmentExpression	pcrel = 1		3283135	0		=			
ANR	3283975	Identifier	pcrel		3283135	0					
ANR	3283976	PrimaryExpression	1		3283135	1					
ANR	3283977	ExpressionStatement	info -> insn_type = dis_dref	1586:5:45103:45129	3283135	120	True				
ANR	3283978	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3283979	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3283980	Identifier	info		3283135	0					
ANR	3283981	Identifier	insn_type		3283135	1					
ANR	3283982	Identifier	dis_dref		3283135	1					
ANR	3283983	ExpressionStatement	info -> data_size = 4	1587:5:45136:45155	3283135	121	True				
ANR	3283984	AssignmentExpression	info -> data_size = 4		3283135	0		=			
ANR	3283985	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3283986	Identifier	info		3283135	0					
ANR	3283987	Identifier	data_size		3283135	1					
ANR	3283988	PrimaryExpression	4		3283135	1					
ANR	3283989	BreakStatement	break ;	1588:5:45162:45167	3283135	122	True				
ANR	3283990	Label	case 'B' :	1589:3:45172:45180	3283135	123	True				
ANR	3283991	ExpressionStatement	nbits = 5	1590:5:45187:45196	3283135	124	True				
ANR	3283992	AssignmentExpression	nbits = 5		3283135	0		=			
ANR	3283993	Identifier	nbits		3283135	0					
ANR	3283994	PrimaryExpression	5		3283135	1					
ANR	3283995	ExpressionStatement	shift = 3	1591:5:45203:45212	3283135	125	True				
ANR	3283996	AssignmentExpression	shift = 3		3283135	0		=			
ANR	3283997	Identifier	shift		3283135	0					
ANR	3283998	PrimaryExpression	3		3283135	1					
ANR	3283999	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5	1592:5:45219:45271	3283135	126	True				
ANR	3284000	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	0		=			
ANR	3284001	Identifier	immed		3283135	0					
ANR	3284002	BitAndExpression	( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	1		&			
ANR	3284003	ShiftExpression	l >> MIPS16OP_SH_IMM5		3283135	0		>>			
ANR	3284004	Identifier	l		3283135	0					
ANR	3284005	Identifier	MIPS16OP_SH_IMM5		3283135	1					
ANR	3284006	Identifier	MIPS16OP_MASK_IMM5		3283135	1					
ANR	3284007	ExpressionStatement	pcrel = 1	1593:5:45278:45287	3283135	127	True				
ANR	3284008	AssignmentExpression	pcrel = 1		3283135	0		=			
ANR	3284009	Identifier	pcrel		3283135	0					
ANR	3284010	PrimaryExpression	1		3283135	1					
ANR	3284011	ExpressionStatement	info -> insn_type = dis_dref	1594:5:45294:45320	3283135	128	True				
ANR	3284012	AssignmentExpression	info -> insn_type = dis_dref		3283135	0		=			
ANR	3284013	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3284014	Identifier	info		3283135	0					
ANR	3284015	Identifier	insn_type		3283135	1					
ANR	3284016	Identifier	dis_dref		3283135	1					
ANR	3284017	ExpressionStatement	info -> data_size = 8	1595:5:45327:45346	3283135	129	True				
ANR	3284018	AssignmentExpression	info -> data_size = 8		3283135	0		=			
ANR	3284019	PtrMemberAccess	info -> data_size		3283135	0					
ANR	3284020	Identifier	info		3283135	0					
ANR	3284021	Identifier	data_size		3283135	1					
ANR	3284022	PrimaryExpression	8		3283135	1					
ANR	3284023	BreakStatement	break ;	1596:5:45353:45358	3283135	130	True				
ANR	3284024	Label	case 'E' :	1597:3:45363:45371	3283135	131	True				
ANR	3284025	ExpressionStatement	nbits = 5	1598:5:45378:45387	3283135	132	True				
ANR	3284026	AssignmentExpression	nbits = 5		3283135	0		=			
ANR	3284027	Identifier	nbits		3283135	0					
ANR	3284028	PrimaryExpression	5		3283135	1					
ANR	3284029	ExpressionStatement	shift = 2	1599:5:45394:45403	3283135	133	True				
ANR	3284030	AssignmentExpression	shift = 2		3283135	0		=			
ANR	3284031	Identifier	shift		3283135	0					
ANR	3284032	PrimaryExpression	2		3283135	1					
ANR	3284033	ExpressionStatement	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5	1600:5:45410:45462	3283135	134	True				
ANR	3284034	AssignmentExpression	immed = ( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	0		=			
ANR	3284035	Identifier	immed		3283135	0					
ANR	3284036	BitAndExpression	( l >> MIPS16OP_SH_IMM5 ) & MIPS16OP_MASK_IMM5		3283135	1		&			
ANR	3284037	ShiftExpression	l >> MIPS16OP_SH_IMM5		3283135	0		>>			
ANR	3284038	Identifier	l		3283135	0					
ANR	3284039	Identifier	MIPS16OP_SH_IMM5		3283135	1					
ANR	3284040	Identifier	MIPS16OP_MASK_IMM5		3283135	1					
ANR	3284041	ExpressionStatement	pcrel = 1	1601:5:45469:45478	3283135	135	True				
ANR	3284042	AssignmentExpression	pcrel = 1		3283135	0		=			
ANR	3284043	Identifier	pcrel		3283135	0					
ANR	3284044	PrimaryExpression	1		3283135	1					
ANR	3284045	BreakStatement	break ;	1602:5:45485:45490	3283135	136	True				
ANR	3284046	Label	default :	1603:3:45495:45502	3283135	137	True				
ANR	3284047	Identifier	default		3283135	0					
ANR	3284048	ExpressionStatement	abort ( )	1604:5:45509:45517	3283135	138	True				
ANR	3284049	CallExpression	abort ( )		3283135	0					
ANR	3284050	Callee	abort		3283135	0					
ANR	3284051	Identifier	abort		3283135	0					
ANR	3284052	ArgumentList			3283135	1					
ANR	3284053	IfStatement	if ( ! use_extend )		3283135	8					
ANR	3284054	Condition	! use_extend	1607:5:45530:45541	3283135	0	True				
ANR	3284055	UnaryOperationExpression	! use_extend		3283135	0					
ANR	3284056	UnaryOperator	!		3283135	0					
ANR	3284057	Identifier	use_extend		3283135	1					
ANR	3284058	CompoundStatement		246:3:5555:5555	3283135	1					
ANR	3284059	IfStatement	if ( signedp && immed >= ( 1 << ( nbits - 1 ) ) )		3283135	0					
ANR	3284060	Condition	signedp && immed >= ( 1 << ( nbits - 1 ) )	1609:6:45555:45592	3283135	0	True				
ANR	3284061	AndExpression	signedp && immed >= ( 1 << ( nbits - 1 ) )		3283135	0		&&			
ANR	3284062	Identifier	signedp		3283135	0					
ANR	3284063	RelationalExpression	immed >= ( 1 << ( nbits - 1 ) )		3283135	1		>=			
ANR	3284064	Identifier	immed		3283135	0					
ANR	3284065	ShiftExpression	1 << ( nbits - 1 )		3283135	1		<<			
ANR	3284066	PrimaryExpression	1		3283135	0					
ANR	3284067	AdditiveExpression	nbits - 1		3283135	1		-			
ANR	3284068	Identifier	nbits		3283135	0					
ANR	3284069	PrimaryExpression	1		3283135	1					
ANR	3284070	CompoundStatement		247:46:5603:5603	3283135	1					
ANR	3284071	ExpressionStatement	immed -= 1 << nbits	1610:3:45600:45619	3283135	0	True				
ANR	3284072	AssignmentExpression	immed -= 1 << nbits		3283135	0		-=			
ANR	3284073	Identifier	immed		3283135	0					
ANR	3284074	ShiftExpression	1 << nbits		3283135	1		<<			
ANR	3284075	PrimaryExpression	1		3283135	0					
ANR	3284076	Identifier	nbits		3283135	1					
ANR	3284077	ExpressionStatement	immed <<= shift	1612:2:45627:45642	3283135	1	True				
ANR	3284078	AssignmentExpression	immed <<= shift		3283135	0		<<=			
ANR	3284079	Identifier	immed		3283135	0					
ANR	3284080	Identifier	shift		3283135	1					
ANR	3284081	IfStatement	if ( ( type == '<' || type == '>' || type == '[' || type == ']' ) && immed == 0 )		3283135	2					
ANR	3284082	Condition	( type == '<' || type == '>' || type == '[' || type == ']' ) && immed == 0	1613:6:45650:45721	3283135	0	True				
ANR	3284083	AndExpression	( type == '<' || type == '>' || type == '[' || type == ']' ) && immed == 0		3283135	0		&&			
ANR	3284084	OrExpression	type == '<' || type == '>' || type == '[' || type == ']'		3283135	0		||			
ANR	3284085	EqualityExpression	type == '<'		3283135	0		==			
ANR	3284086	Identifier	type		3283135	0					
ANR	3284087	PrimaryExpression	'<'		3283135	1					
ANR	3284088	OrExpression	type == '>' || type == '[' || type == ']'		3283135	1		||			
ANR	3284089	EqualityExpression	type == '>'		3283135	0		==			
ANR	3284090	Identifier	type		3283135	0					
ANR	3284091	PrimaryExpression	'>'		3283135	1					
ANR	3284092	OrExpression	type == '[' || type == ']'		3283135	1		||			
ANR	3284093	EqualityExpression	type == '['		3283135	0		==			
ANR	3284094	Identifier	type		3283135	0					
ANR	3284095	PrimaryExpression	'['		3283135	1					
ANR	3284096	EqualityExpression	type == ']'		3283135	1		==			
ANR	3284097	Identifier	type		3283135	0					
ANR	3284098	PrimaryExpression	']'		3283135	1					
ANR	3284099	EqualityExpression	immed == 0		3283135	1		==			
ANR	3284100	Identifier	immed		3283135	0					
ANR	3284101	PrimaryExpression	0		3283135	1					
ANR	3284102	CompoundStatement		251:80:5732:5732	3283135	1					
ANR	3284103	ExpressionStatement	immed = 8	1614:3:45729:45738	3283135	0	True				
ANR	3284104	AssignmentExpression	immed = 8		3283135	0		=			
ANR	3284105	Identifier	immed		3283135	0					
ANR	3284106	PrimaryExpression	8		3283135	1					
ANR	3284107	ElseStatement	else		3283135	0					
ANR	3284108	CompoundStatement		256:3:5766:5766	3283135	0					
ANR	3284109	IfStatement	if ( extbits == 16 )		3283135	0					
ANR	3284110	Condition	extbits == 16	1619:8:45768:45780	3283135	0	True				
ANR	3284111	EqualityExpression	extbits == 16		3283135	0		==			
ANR	3284112	Identifier	extbits		3283135	0					
ANR	3284113	PrimaryExpression	16		3283135	1					
ANR	3284114	CompoundStatement		257:23:5791:5791	3283135	1					
ANR	3284115	ExpressionStatement	immed |= ( ( extend & 0x1f ) << 11 ) | ( extend & 0x7e0 )	1620:5:45790:45841	3283135	0	True				
ANR	3284116	AssignmentExpression	immed |= ( ( extend & 0x1f ) << 11 ) | ( extend & 0x7e0 )		3283135	0		|=			
ANR	3284117	Identifier	immed		3283135	0					
ANR	3284118	InclusiveOrExpression	( ( extend & 0x1f ) << 11 ) | ( extend & 0x7e0 )		3283135	1		|			
ANR	3284119	ShiftExpression	( extend & 0x1f ) << 11		3283135	0		<<			
ANR	3284120	BitAndExpression	extend & 0x1f		3283135	0		&			
ANR	3284121	Identifier	extend		3283135	0					
ANR	3284122	PrimaryExpression	0x1f		3283135	1					
ANR	3284123	PrimaryExpression	11		3283135	1					
ANR	3284124	BitAndExpression	extend & 0x7e0		3283135	1		&			
ANR	3284125	Identifier	extend		3283135	0					
ANR	3284126	PrimaryExpression	0x7e0		3283135	1					
ANR	3284127	ElseStatement	else		3283135	0					
ANR	3284128	IfStatement	if ( extbits == 15 )		3283135	0					
ANR	3284129	Condition	extbits == 15	1621:15:45858:45870	3283135	0	True				
ANR	3284130	EqualityExpression	extbits == 15		3283135	0		==			
ANR	3284131	Identifier	extbits		3283135	0					
ANR	3284132	PrimaryExpression	15		3283135	1					
ANR	3284133	CompoundStatement		259:30:5881:5881	3283135	1					
ANR	3284134	ExpressionStatement	immed |= ( ( extend & 0xf ) << 11 ) | ( extend & 0x7f0 )	1622:5:45880:45930	3283135	0	True				
ANR	3284135	AssignmentExpression	immed |= ( ( extend & 0xf ) << 11 ) | ( extend & 0x7f0 )		3283135	0		|=			
ANR	3284136	Identifier	immed		3283135	0					
ANR	3284137	InclusiveOrExpression	( ( extend & 0xf ) << 11 ) | ( extend & 0x7f0 )		3283135	1		|			
ANR	3284138	ShiftExpression	( extend & 0xf ) << 11		3283135	0		<<			
ANR	3284139	BitAndExpression	extend & 0xf		3283135	0		&			
ANR	3284140	Identifier	extend		3283135	0					
ANR	3284141	PrimaryExpression	0xf		3283135	1					
ANR	3284142	PrimaryExpression	11		3283135	1					
ANR	3284143	BitAndExpression	extend & 0x7f0		3283135	1		&			
ANR	3284144	Identifier	extend		3283135	0					
ANR	3284145	PrimaryExpression	0x7f0		3283135	1					
ANR	3284146	ElseStatement	else		3283135	0					
ANR	3284147	CompoundStatement		261:11:5951:5951	3283135	0					
ANR	3284148	ExpressionStatement	immed = ( ( extend >> 6 ) & 0x1f ) | ( extend & 0x20 )	1624:5:45950:45998	3283135	0	True				
ANR	3284149	AssignmentExpression	immed = ( ( extend >> 6 ) & 0x1f ) | ( extend & 0x20 )		3283135	0		=			
ANR	3284150	Identifier	immed		3283135	0					
ANR	3284151	InclusiveOrExpression	( ( extend >> 6 ) & 0x1f ) | ( extend & 0x20 )		3283135	1		|			
ANR	3284152	BitAndExpression	( extend >> 6 ) & 0x1f		3283135	0		&			
ANR	3284153	ShiftExpression	extend >> 6		3283135	0		>>			
ANR	3284154	Identifier	extend		3283135	0					
ANR	3284155	PrimaryExpression	6		3283135	1					
ANR	3284156	PrimaryExpression	0x1f		3283135	1					
ANR	3284157	BitAndExpression	extend & 0x20		3283135	1		&			
ANR	3284158	Identifier	extend		3283135	0					
ANR	3284159	PrimaryExpression	0x20		3283135	1					
ANR	3284160	ExpressionStatement	immed &= ( 1 << extbits ) - 1	1626:4:46010:46037	3283135	1	True				
ANR	3284161	AssignmentExpression	immed &= ( 1 << extbits ) - 1		3283135	0		&=			
ANR	3284162	Identifier	immed		3283135	0					
ANR	3284163	AdditiveExpression	( 1 << extbits ) - 1		3283135	1		-			
ANR	3284164	ShiftExpression	1 << extbits		3283135	0		<<			
ANR	3284165	PrimaryExpression	1		3283135	0					
ANR	3284166	Identifier	extbits		3283135	1					
ANR	3284167	PrimaryExpression	1		3283135	1					
ANR	3284168	IfStatement	if ( ! extu && immed >= ( 1 << ( extbits - 1 ) ) )		3283135	2					
ANR	3284169	Condition	! extu && immed >= ( 1 << ( extbits - 1 ) )	1627:8:46047:46084	3283135	0	True				
ANR	3284170	AndExpression	! extu && immed >= ( 1 << ( extbits - 1 ) )		3283135	0		&&			
ANR	3284171	UnaryOperationExpression	! extu		3283135	0					
ANR	3284172	UnaryOperator	!		3283135	0					
ANR	3284173	Identifier	extu		3283135	1					
ANR	3284174	RelationalExpression	immed >= ( 1 << ( extbits - 1 ) )		3283135	1		>=			
ANR	3284175	Identifier	immed		3283135	0					
ANR	3284176	ShiftExpression	1 << ( extbits - 1 )		3283135	1		<<			
ANR	3284177	PrimaryExpression	1		3283135	0					
ANR	3284178	AdditiveExpression	extbits - 1		3283135	1		-			
ANR	3284179	Identifier	extbits		3283135	0					
ANR	3284180	PrimaryExpression	1		3283135	1					
ANR	3284181	CompoundStatement		265:48:6095:6095	3283135	1					
ANR	3284182	ExpressionStatement	immed -= 1 << extbits	1628:5:46094:46115	3283135	0	True				
ANR	3284183	AssignmentExpression	immed -= 1 << extbits		3283135	0		-=			
ANR	3284184	Identifier	immed		3283135	0					
ANR	3284185	ShiftExpression	1 << extbits		3283135	1		<<			
ANR	3284186	PrimaryExpression	1		3283135	0					
ANR	3284187	Identifier	extbits		3283135	1					
ANR	3284188	IfStatement	if ( ! pcrel )		3283135	9					
ANR	3284189	Condition	! pcrel	1632:7:46136:46141	3283135	0	True				
ANR	3284190	UnaryOperationExpression	! pcrel		3283135	0					
ANR	3284191	UnaryOperator	!		3283135	0					
ANR	3284192	Identifier	pcrel		3283135	1					
ANR	3284193	CompoundStatement		270:15:6152:6152	3283135	1					
ANR	3284194	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , immed )"	1633:4:46150:46199	3283135	0	True				
ANR	3284195	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%d"" , immed )"		3283135	0					
ANR	3284196	Callee	* info -> fprintf_func		3283135	0					
ANR	3284197	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284198	UnaryOperator	*		3283135	0					
ANR	3284199	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284200	Identifier	info		3283135	0					
ANR	3284201	Identifier	fprintf_func		3283135	1					
ANR	3284202	ArgumentList	info -> stream		3283135	1					
ANR	3284203	Argument	info -> stream		3283135	0					
ANR	3284204	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284205	Identifier	info		3283135	0					
ANR	3284206	Identifier	stream		3283135	1					
ANR	3284207	Argument	"""%d"""		3283135	1					
ANR	3284208	PrimaryExpression	"""%d"""		3283135	0					
ANR	3284209	Argument	immed		3283135	2					
ANR	3284210	Identifier	immed		3283135	0					
ANR	3284211	ElseStatement	else		3283135	0					
ANR	3284212	CompoundStatement		273:4:6225:6241	3283135	0					
ANR	3284213	IdentifierDeclStatement	bfd_vma baseaddr ;	1635:4:46217:46233	3283135	0	True				
ANR	3284214	IdentifierDecl	baseaddr		3283135	0					
ANR	3284215	IdentifierDeclType	bfd_vma		3283135	0					
ANR	3284216	Identifier	baseaddr		3283135	1					
ANR	3284217	IfStatement	if ( branch )		3283135	1					
ANR	3284218	Condition	branch	1637:8:46244:46249	3283135	0	True				
ANR	3284219	Identifier	branch		3283135	0					
ANR	3284220	CompoundStatement		275:16:6260:6260	3283135	1					
ANR	3284221	ExpressionStatement	immed *= 2	1638:5:46259:46269	3283135	0	True				
ANR	3284222	AssignmentExpression	immed *= 2		3283135	0		*=			
ANR	3284223	Identifier	immed		3283135	0					
ANR	3284224	PrimaryExpression	2		3283135	1					
ANR	3284225	ExpressionStatement	baseaddr = memaddr + 2	1639:5:46276:46298	3283135	1	True				
ANR	3284226	AssignmentExpression	baseaddr = memaddr + 2		3283135	0		=			
ANR	3284227	Identifier	baseaddr		3283135	0					
ANR	3284228	AdditiveExpression	memaddr + 2		3283135	1		+			
ANR	3284229	Identifier	memaddr		3283135	0					
ANR	3284230	PrimaryExpression	2		3283135	1					
ANR	3284231	ElseStatement	else		3283135	0					
ANR	3284232	IfStatement	if ( use_extend )		3283135	0					
ANR	3284233	Condition	use_extend	1640:15:46315:46324	3283135	0	True				
ANR	3284234	Identifier	use_extend		3283135	0					
ANR	3284235	CompoundStatement		278:27:6335:6335	3283135	1					
ANR	3284236	ExpressionStatement	baseaddr = memaddr - 2	1641:5:46334:46356	3283135	0	True				
ANR	3284237	AssignmentExpression	baseaddr = memaddr - 2		3283135	0		=			
ANR	3284238	Identifier	baseaddr		3283135	0					
ANR	3284239	AdditiveExpression	memaddr - 2		3283135	1		-			
ANR	3284240	Identifier	memaddr		3283135	0					
ANR	3284241	PrimaryExpression	2		3283135	1					
ANR	3284242	ElseStatement	else		3283135	0					
ANR	3284243	CompoundStatement		282:5:6401:6419	3283135	0					
ANR	3284244	IdentifierDeclStatement	int status ;	1643:5:46376:46386	3283135	0	True				
ANR	3284245	IdentifierDecl	status		3283135	0					
ANR	3284246	IdentifierDeclType	int		3283135	0					
ANR	3284247	Identifier	status		3283135	1					
ANR	3284248	IdentifierDeclStatement	bfd_byte buffer [ 2 ] ;	1644:5:46393:46411	3283135	1	True				
ANR	3284249	IdentifierDecl	buffer [ 2 ]		3283135	0					
ANR	3284250	IdentifierDeclType	bfd_byte [ 2 ]		3283135	0					
ANR	3284251	Identifier	buffer		3283135	1					
ANR	3284252	PrimaryExpression	2		3283135	2					
ANR	3284253	ExpressionStatement	baseaddr = memaddr	1646:5:46419:46437	3283135	2	True				
ANR	3284254	AssignmentExpression	baseaddr = memaddr		3283135	0		=			
ANR	3284255	Identifier	baseaddr		3283135	0					
ANR	3284256	Identifier	memaddr		3283135	1					
ANR	3284257	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr - 4 , buffer , 2 , info )"	1655:5:46896:46967	3283135	3	True				
ANR	3284258	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr - 4 , buffer , 2 , info )"		3283135	0		=			
ANR	3284259	Identifier	status		3283135	0					
ANR	3284260	CallExpression	"( * info -> read_memory_func ) ( memaddr - 4 , buffer , 2 , info )"		3283135	1					
ANR	3284261	Callee	* info -> read_memory_func		3283135	0					
ANR	3284262	UnaryOperationExpression	* info -> read_memory_func		3283135	0					
ANR	3284263	UnaryOperator	*		3283135	0					
ANR	3284264	PtrMemberAccess	info -> read_memory_func		3283135	1					
ANR	3284265	Identifier	info		3283135	0					
ANR	3284266	Identifier	read_memory_func		3283135	1					
ANR	3284267	ArgumentList	memaddr - 4		3283135	1					
ANR	3284268	Argument	memaddr - 4		3283135	0					
ANR	3284269	AdditiveExpression	memaddr - 4		3283135	0		-			
ANR	3284270	Identifier	memaddr		3283135	0					
ANR	3284271	PrimaryExpression	4		3283135	1					
ANR	3284272	Argument	buffer		3283135	1					
ANR	3284273	Identifier	buffer		3283135	0					
ANR	3284274	Argument	2		3283135	2					
ANR	3284275	PrimaryExpression	2		3283135	0					
ANR	3284276	Argument	info		3283135	3					
ANR	3284277	Identifier	info		3283135	0					
ANR	3284278	IfStatement	if ( status == 0 && ( ( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf800 ) == 0x1800 ) )		3283135	4					
ANR	3284279	Condition	status == 0 && ( ( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf800 ) == 0x1800 )	1657:9:46978:47131	3283135	0	True				
ANR	3284280	AndExpression	status == 0 && ( ( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf800 ) == 0x1800 )		3283135	0		&&			
ANR	3284281	EqualityExpression	status == 0		3283135	0		==			
ANR	3284282	Identifier	status		3283135	0					
ANR	3284283	PrimaryExpression	0		3283135	1					
ANR	3284284	EqualityExpression	( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf800 ) == 0x1800		3283135	1		==			
ANR	3284285	BitAndExpression	( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf800		3283135	0		&			
ANR	3284286	ConditionalExpression	info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer )		3283135	0					
ANR	3284287	Condition	info -> endian == BFD_ENDIAN_BIG		3283135	0					
ANR	3284288	EqualityExpression	info -> endian == BFD_ENDIAN_BIG		3283135	0		==			
ANR	3284289	PtrMemberAccess	info -> endian		3283135	0					
ANR	3284290	Identifier	info		3283135	0					
ANR	3284291	Identifier	endian		3283135	1					
ANR	3284292	Identifier	BFD_ENDIAN_BIG		3283135	1					
ANR	3284293	CallExpression	bfd_getb16 ( buffer )		3283135	1					
ANR	3284294	Callee	bfd_getb16		3283135	0					
ANR	3284295	Identifier	bfd_getb16		3283135	0					
ANR	3284296	ArgumentList	buffer		3283135	1					
ANR	3284297	Argument	buffer		3283135	0					
ANR	3284298	Identifier	buffer		3283135	0					
ANR	3284299	CallExpression	bfd_getl16 ( buffer )		3283135	2					
ANR	3284300	Callee	bfd_getl16		3283135	0					
ANR	3284301	Identifier	bfd_getl16		3283135	0					
ANR	3284302	ArgumentList	buffer		3283135	1					
ANR	3284303	Argument	buffer		3283135	0					
ANR	3284304	Identifier	buffer		3283135	0					
ANR	3284305	PrimaryExpression	0xf800		3283135	1					
ANR	3284306	PrimaryExpression	0x1800		3283135	1					
ANR	3284307	CompoundStatement		298:32:7142:7142	3283135	1					
ANR	3284308	ExpressionStatement	baseaddr = memaddr - 4	1661:6:47142:47164	3283135	0	True				
ANR	3284309	AssignmentExpression	baseaddr = memaddr - 4		3283135	0		=			
ANR	3284310	Identifier	baseaddr		3283135	0					
ANR	3284311	AdditiveExpression	memaddr - 4		3283135	1		-			
ANR	3284312	Identifier	memaddr		3283135	0					
ANR	3284313	PrimaryExpression	4		3283135	1					
ANR	3284314	ElseStatement	else		3283135	0					
ANR	3284315	CompoundStatement		300:12:7186:7186	3283135	0					
ANR	3284316	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr - 2 , buffer , 2 , info )"	1663:6:47186:47258	3283135	0	True				
ANR	3284317	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr - 2 , buffer , 2 , info )"		3283135	0		=			
ANR	3284318	Identifier	status		3283135	0					
ANR	3284319	CallExpression	"( * info -> read_memory_func ) ( memaddr - 2 , buffer , 2 , info )"		3283135	1					
ANR	3284320	Callee	* info -> read_memory_func		3283135	0					
ANR	3284321	UnaryOperationExpression	* info -> read_memory_func		3283135	0					
ANR	3284322	UnaryOperator	*		3283135	0					
ANR	3284323	PtrMemberAccess	info -> read_memory_func		3283135	1					
ANR	3284324	Identifier	info		3283135	0					
ANR	3284325	Identifier	read_memory_func		3283135	1					
ANR	3284326	ArgumentList	memaddr - 2		3283135	1					
ANR	3284327	Argument	memaddr - 2		3283135	0					
ANR	3284328	AdditiveExpression	memaddr - 2		3283135	0		-			
ANR	3284329	Identifier	memaddr		3283135	0					
ANR	3284330	PrimaryExpression	2		3283135	1					
ANR	3284331	Argument	buffer		3283135	1					
ANR	3284332	Identifier	buffer		3283135	0					
ANR	3284333	Argument	2		3283135	2					
ANR	3284334	PrimaryExpression	2		3283135	0					
ANR	3284335	Argument	info		3283135	3					
ANR	3284336	Identifier	info		3283135	0					
ANR	3284337	IfStatement	if ( status == 0 && ( ( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf81f ) == 0xe800 ) )		3283135	1					
ANR	3284338	Condition	status == 0 && ( ( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf81f ) == 0xe800 )	1665:10:47270:47426	3283135	0	True				
ANR	3284339	AndExpression	status == 0 && ( ( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf81f ) == 0xe800 )		3283135	0		&&			
ANR	3284340	EqualityExpression	status == 0		3283135	0		==			
ANR	3284341	Identifier	status		3283135	0					
ANR	3284342	PrimaryExpression	0		3283135	1					
ANR	3284343	EqualityExpression	( ( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf81f ) == 0xe800		3283135	1		==			
ANR	3284344	BitAndExpression	( info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer ) ) & 0xf81f		3283135	0		&			
ANR	3284345	ConditionalExpression	info -> endian == BFD_ENDIAN_BIG ? bfd_getb16 ( buffer ) : bfd_getl16 ( buffer )		3283135	0					
ANR	3284346	Condition	info -> endian == BFD_ENDIAN_BIG		3283135	0					
ANR	3284347	EqualityExpression	info -> endian == BFD_ENDIAN_BIG		3283135	0		==			
ANR	3284348	PtrMemberAccess	info -> endian		3283135	0					
ANR	3284349	Identifier	info		3283135	0					
ANR	3284350	Identifier	endian		3283135	1					
ANR	3284351	Identifier	BFD_ENDIAN_BIG		3283135	1					
ANR	3284352	CallExpression	bfd_getb16 ( buffer )		3283135	1					
ANR	3284353	Callee	bfd_getb16		3283135	0					
ANR	3284354	Identifier	bfd_getb16		3283135	0					
ANR	3284355	ArgumentList	buffer		3283135	1					
ANR	3284356	Argument	buffer		3283135	0					
ANR	3284357	Identifier	buffer		3283135	0					
ANR	3284358	CallExpression	bfd_getl16 ( buffer )		3283135	2					
ANR	3284359	Callee	bfd_getl16		3283135	0					
ANR	3284360	Identifier	bfd_getl16		3283135	0					
ANR	3284361	ArgumentList	buffer		3283135	1					
ANR	3284362	Argument	buffer		3283135	0					
ANR	3284363	Identifier	buffer		3283135	0					
ANR	3284364	PrimaryExpression	0xf81f		3283135	1					
ANR	3284365	PrimaryExpression	0xe800		3283135	1					
ANR	3284366	CompoundStatement		306:33:7437:7437	3283135	1					
ANR	3284367	ExpressionStatement	baseaddr = memaddr - 2	1669:7:47438:47460	3283135	0	True				
ANR	3284368	AssignmentExpression	baseaddr = memaddr - 2		3283135	0		=			
ANR	3284369	Identifier	baseaddr		3283135	0					
ANR	3284370	AdditiveExpression	memaddr - 2		3283135	1		-			
ANR	3284371	Identifier	memaddr		3283135	0					
ANR	3284372	PrimaryExpression	2		3283135	1					
ANR	3284373	ExpressionStatement	info -> target = ( baseaddr & ~ ( ( 1 << shift ) - 1 ) ) + immed	1673:4:47487:47542	3283135	2	True				
ANR	3284374	AssignmentExpression	info -> target = ( baseaddr & ~ ( ( 1 << shift ) - 1 ) ) + immed		3283135	0		=			
ANR	3284375	PtrMemberAccess	info -> target		3283135	0					
ANR	3284376	Identifier	info		3283135	0					
ANR	3284377	Identifier	target		3283135	1					
ANR	3284378	AdditiveExpression	( baseaddr & ~ ( ( 1 << shift ) - 1 ) ) + immed		3283135	1		+			
ANR	3284379	BitAndExpression	baseaddr & ~ ( ( 1 << shift ) - 1 )		3283135	0		&			
ANR	3284380	Identifier	baseaddr		3283135	0					
ANR	3284381	UnaryOperationExpression	~ ( ( 1 << shift ) - 1 )		3283135	1					
ANR	3284382	UnaryOperator	~		3283135	0					
ANR	3284383	AdditiveExpression	( 1 << shift ) - 1		3283135	1		-			
ANR	3284384	ShiftExpression	1 << shift		3283135	0		<<			
ANR	3284385	PrimaryExpression	1		3283135	0					
ANR	3284386	Identifier	shift		3283135	1					
ANR	3284387	PrimaryExpression	1		3283135	1					
ANR	3284388	Identifier	immed		3283135	1					
ANR	3284389	IfStatement	if ( pcrel && branch && info -> flavour == bfd_target_unknown_flavour )		3283135	3					
ANR	3284390	Condition	pcrel && branch && info -> flavour == bfd_target_unknown_flavour	1674:8:47552:47613	3283135	0	True				
ANR	3284391	AndExpression	pcrel && branch && info -> flavour == bfd_target_unknown_flavour		3283135	0		&&			
ANR	3284392	Identifier	pcrel		3283135	0					
ANR	3284393	AndExpression	branch && info -> flavour == bfd_target_unknown_flavour		3283135	1		&&			
ANR	3284394	Identifier	branch		3283135	0					
ANR	3284395	EqualityExpression	info -> flavour == bfd_target_unknown_flavour		3283135	1		==			
ANR	3284396	PtrMemberAccess	info -> flavour		3283135	0					
ANR	3284397	Identifier	info		3283135	0					
ANR	3284398	Identifier	flavour		3283135	1					
ANR	3284399	Identifier	bfd_target_unknown_flavour		3283135	1					
ANR	3284400	CompoundStatement		312:72:7624:7624	3283135	1					
ANR	3284401	ExpressionStatement	info -> target |= 1	1676:5:47679:47696	3283135	0	True				
ANR	3284402	AssignmentExpression	info -> target |= 1		3283135	0		|=			
ANR	3284403	PtrMemberAccess	info -> target		3283135	0					
ANR	3284404	Identifier	info		3283135	0					
ANR	3284405	Identifier	target		3283135	1					
ANR	3284406	PrimaryExpression	1		3283135	1					
ANR	3284407	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	1678:4:47708:47756	3283135	4	True				
ANR	3284408	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3283135	0					
ANR	3284409	Callee	* info -> print_address_func		3283135	0					
ANR	3284410	UnaryOperationExpression	* info -> print_address_func		3283135	0					
ANR	3284411	UnaryOperator	*		3283135	0					
ANR	3284412	PtrMemberAccess	info -> print_address_func		3283135	1					
ANR	3284413	Identifier	info		3283135	0					
ANR	3284414	Identifier	print_address_func		3283135	1					
ANR	3284415	ArgumentList	info -> target		3283135	1					
ANR	3284416	Argument	info -> target		3283135	0					
ANR	3284417	PtrMemberAccess	info -> target		3283135	0					
ANR	3284418	Identifier	info		3283135	0					
ANR	3284419	Identifier	target		3283135	1					
ANR	3284420	Argument	info		3283135	1					
ANR	3284421	Identifier	info		3283135	0					
ANR	3284422	BreakStatement	break ;	1681:6:47777:47782	3283135	60	True				
ANR	3284423	Label	case 'a' :	1683:4:47789:47797	3283135	61	True				
ANR	3284424	CompoundStatement		323:1:7816:7836	3283135	62					
ANR	3284425	IdentifierDeclStatement	int jalx = l & 0x400 ;	1685:1:47808:47828	3283135	0	True				
ANR	3284426	IdentifierDecl	jalx = l & 0x400		3283135	0					
ANR	3284427	IdentifierDeclType	int		3283135	0					
ANR	3284428	Identifier	jalx		3283135	1					
ANR	3284429	AssignmentExpression	jalx = l & 0x400		3283135	2		=			
ANR	3284430	Identifier	jalx		3283135	0					
ANR	3284431	BitAndExpression	l & 0x400		3283135	1		&			
ANR	3284432	Identifier	l		3283135	0					
ANR	3284433	PrimaryExpression	0x400		3283135	1					
ANR	3284434	IfStatement	if ( ! use_extend )		3283135	1					
ANR	3284435	Condition	! use_extend	1687:5:47836:47846	3283135	0	True				
ANR	3284436	UnaryOperationExpression	! use_extend		3283135	0					
ANR	3284437	UnaryOperator	!		3283135	0					
ANR	3284438	Identifier	use_extend		3283135	1					
ANR	3284439	CompoundStatement		325:18:7857:7857	3283135	1					
ANR	3284440	ExpressionStatement	extend = 0	1688:2:47853:47863	3283135	0	True				
ANR	3284441	AssignmentExpression	extend = 0		3283135	0		=			
ANR	3284442	Identifier	extend		3283135	0					
ANR	3284443	PrimaryExpression	0		3283135	1					
ANR	3284444	ExpressionStatement	l = ( ( l & 0x1f ) << 23 ) | ( ( l & 0x3e0 ) << 13 ) | ( extend << 2 )	1690:1:47869:47929	3283135	2	True				
ANR	3284445	AssignmentExpression	l = ( ( l & 0x1f ) << 23 ) | ( ( l & 0x3e0 ) << 13 ) | ( extend << 2 )		3283135	0		=			
ANR	3284446	Identifier	l		3283135	0					
ANR	3284447	InclusiveOrExpression	( ( l & 0x1f ) << 23 ) | ( ( l & 0x3e0 ) << 13 ) | ( extend << 2 )		3283135	1		|			
ANR	3284448	ShiftExpression	( l & 0x1f ) << 23		3283135	0		<<			
ANR	3284449	BitAndExpression	l & 0x1f		3283135	0		&			
ANR	3284450	Identifier	l		3283135	0					
ANR	3284451	PrimaryExpression	0x1f		3283135	1					
ANR	3284452	PrimaryExpression	23		3283135	1					
ANR	3284453	InclusiveOrExpression	( ( l & 0x3e0 ) << 13 ) | ( extend << 2 )		3283135	1		|			
ANR	3284454	ShiftExpression	( l & 0x3e0 ) << 13		3283135	0		<<			
ANR	3284455	BitAndExpression	l & 0x3e0		3283135	0		&			
ANR	3284456	Identifier	l		3283135	0					
ANR	3284457	PrimaryExpression	0x3e0		3283135	1					
ANR	3284458	PrimaryExpression	13		3283135	1					
ANR	3284459	ShiftExpression	extend << 2		3283135	1		<<			
ANR	3284460	Identifier	extend		3283135	0					
ANR	3284461	PrimaryExpression	2		3283135	1					
ANR	3284462	IfStatement	if ( ! jalx && info -> flavour == bfd_target_unknown_flavour )		3283135	3					
ANR	3284463	Condition	! jalx && info -> flavour == bfd_target_unknown_flavour	1691:5:47936:47987	3283135	0	True				
ANR	3284464	AndExpression	! jalx && info -> flavour == bfd_target_unknown_flavour		3283135	0		&&			
ANR	3284465	UnaryOperationExpression	! jalx		3283135	0					
ANR	3284466	UnaryOperator	!		3283135	0					
ANR	3284467	Identifier	jalx		3283135	1					
ANR	3284468	EqualityExpression	info -> flavour == bfd_target_unknown_flavour		3283135	1		==			
ANR	3284469	PtrMemberAccess	info -> flavour		3283135	0					
ANR	3284470	Identifier	info		3283135	0					
ANR	3284471	Identifier	flavour		3283135	1					
ANR	3284472	Identifier	bfd_target_unknown_flavour		3283135	1					
ANR	3284473	CompoundStatement		329:59:7998:7998	3283135	1					
ANR	3284474	ExpressionStatement	l |= 1	1693:2:48047:48053	3283135	0	True				
ANR	3284475	AssignmentExpression	l |= 1		3283135	0		|=			
ANR	3284476	Identifier	l		3283135	0					
ANR	3284477	PrimaryExpression	1		3283135	1					
ANR	3284478	ExpressionStatement	info -> target = ( ( memaddr + 4 ) & ~ ( bfd_vma ) 0x0fffffff ) | l	1696:6:48072:48130	3283135	63	True				
ANR	3284479	AssignmentExpression	info -> target = ( ( memaddr + 4 ) & ~ ( bfd_vma ) 0x0fffffff ) | l		3283135	0		=			
ANR	3284480	PtrMemberAccess	info -> target		3283135	0					
ANR	3284481	Identifier	info		3283135	0					
ANR	3284482	Identifier	target		3283135	1					
ANR	3284483	InclusiveOrExpression	( ( memaddr + 4 ) & ~ ( bfd_vma ) 0x0fffffff ) | l		3283135	1		|			
ANR	3284484	BitAndExpression	( memaddr + 4 ) & ~ ( bfd_vma ) 0x0fffffff		3283135	0		&			
ANR	3284485	AdditiveExpression	memaddr + 4		3283135	0		+			
ANR	3284486	Identifier	memaddr		3283135	0					
ANR	3284487	PrimaryExpression	4		3283135	1					
ANR	3284488	UnaryOperationExpression	~ ( bfd_vma ) 0x0fffffff		3283135	1					
ANR	3284489	UnaryOperator	~		3283135	0					
ANR	3284490	CastExpression	( bfd_vma ) 0x0fffffff		3283135	1					
ANR	3284491	CastTarget	bfd_vma		3283135	0					
ANR	3284492	PrimaryExpression	0x0fffffff		3283135	1					
ANR	3284493	Identifier	l		3283135	1					
ANR	3284494	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	1697:6:48138:48186	3283135	64	True				
ANR	3284495	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		3283135	0					
ANR	3284496	Callee	* info -> print_address_func		3283135	0					
ANR	3284497	UnaryOperationExpression	* info -> print_address_func		3283135	0					
ANR	3284498	UnaryOperator	*		3283135	0					
ANR	3284499	PtrMemberAccess	info -> print_address_func		3283135	1					
ANR	3284500	Identifier	info		3283135	0					
ANR	3284501	Identifier	print_address_func		3283135	1					
ANR	3284502	ArgumentList	info -> target		3283135	1					
ANR	3284503	Argument	info -> target		3283135	0					
ANR	3284504	PtrMemberAccess	info -> target		3283135	0					
ANR	3284505	Identifier	info		3283135	0					
ANR	3284506	Identifier	target		3283135	1					
ANR	3284507	Argument	info		3283135	1					
ANR	3284508	Identifier	info		3283135	0					
ANR	3284509	ExpressionStatement	info -> insn_type = dis_jsr	1698:6:48194:48219	3283135	65	True				
ANR	3284510	AssignmentExpression	info -> insn_type = dis_jsr		3283135	0		=			
ANR	3284511	PtrMemberAccess	info -> insn_type		3283135	0					
ANR	3284512	Identifier	info		3283135	0					
ANR	3284513	Identifier	insn_type		3283135	1					
ANR	3284514	Identifier	dis_jsr		3283135	1					
ANR	3284515	ExpressionStatement	info -> branch_delay_insns = 1	1699:6:48227:48255	3283135	66	True				
ANR	3284516	AssignmentExpression	info -> branch_delay_insns = 1		3283135	0		=			
ANR	3284517	PtrMemberAccess	info -> branch_delay_insns		3283135	0					
ANR	3284518	Identifier	info		3283135	0					
ANR	3284519	Identifier	branch_delay_insns		3283135	1					
ANR	3284520	PrimaryExpression	1		3283135	1					
ANR	3284521	BreakStatement	break ;	1700:6:48263:48268	3283135	67	True				
ANR	3284522	Label	case 'l' :	1702:4:48275:48283	3283135	68	True				
ANR	3284523	Label	case 'L' :	1703:4:48289:48297	3283135	69	True				
ANR	3284524	CompoundStatement		343:1:8316:8344	3283135	70					
ANR	3284525	IdentifierDeclStatement	"int need_comma , amask , smask ;"	1705:1:48308:48336	3283135	0	True				
ANR	3284526	IdentifierDecl	need_comma		3283135	0					
ANR	3284527	IdentifierDeclType	int		3283135	0					
ANR	3284528	Identifier	need_comma		3283135	1					
ANR	3284529	IdentifierDecl	amask		3283135	1					
ANR	3284530	IdentifierDeclType	int		3283135	0					
ANR	3284531	Identifier	amask		3283135	1					
ANR	3284532	IdentifierDecl	smask		3283135	2					
ANR	3284533	IdentifierDeclType	int		3283135	0					
ANR	3284534	Identifier	smask		3283135	1					
ANR	3284535	ExpressionStatement	need_comma = 0	1707:1:48340:48354	3283135	1	True				
ANR	3284536	AssignmentExpression	need_comma = 0		3283135	0		=			
ANR	3284537	Identifier	need_comma		3283135	0					
ANR	3284538	PrimaryExpression	0		3283135	1					
ANR	3284539	ExpressionStatement	l = ( l >> MIPS16OP_SH_IMM6 ) & MIPS16OP_MASK_IMM6	1709:1:48358:48406	3283135	2	True				
ANR	3284540	AssignmentExpression	l = ( l >> MIPS16OP_SH_IMM6 ) & MIPS16OP_MASK_IMM6		3283135	0		=			
ANR	3284541	Identifier	l		3283135	0					
ANR	3284542	BitAndExpression	( l >> MIPS16OP_SH_IMM6 ) & MIPS16OP_MASK_IMM6		3283135	1		&			
ANR	3284543	ShiftExpression	l >> MIPS16OP_SH_IMM6		3283135	0		>>			
ANR	3284544	Identifier	l		3283135	0					
ANR	3284545	Identifier	MIPS16OP_SH_IMM6		3283135	1					
ANR	3284546	Identifier	MIPS16OP_MASK_IMM6		3283135	1					
ANR	3284547	ExpressionStatement	amask = ( l >> 3 ) & 7	1711:1:48410:48430	3283135	3	True				
ANR	3284548	AssignmentExpression	amask = ( l >> 3 ) & 7		3283135	0		=			
ANR	3284549	Identifier	amask		3283135	0					
ANR	3284550	BitAndExpression	( l >> 3 ) & 7		3283135	1		&			
ANR	3284551	ShiftExpression	l >> 3		3283135	0		>>			
ANR	3284552	Identifier	l		3283135	0					
ANR	3284553	PrimaryExpression	3		3283135	1					
ANR	3284554	PrimaryExpression	7		3283135	1					
ANR	3284555	IfStatement	if ( amask > 0 && amask < 5 )		3283135	4					
ANR	3284556	Condition	amask > 0 && amask < 5	1713:5:48438:48459	3283135	0	True				
ANR	3284557	AndExpression	amask > 0 && amask < 5		3283135	0		&&			
ANR	3284558	RelationalExpression	amask > 0		3283135	0		>			
ANR	3284559	Identifier	amask		3283135	0					
ANR	3284560	PrimaryExpression	0		3283135	1					
ANR	3284561	RelationalExpression	amask < 5		3283135	1		<			
ANR	3284562	Identifier	amask		3283135	0					
ANR	3284563	PrimaryExpression	5		3283135	1					
ANR	3284564	CompoundStatement		352:3:8473:8473	3283135	1					
ANR	3284565	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 4 ] )"	1715:5:48472:48533	3283135	0	True				
ANR	3284566	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 4 ] )"		3283135	0					
ANR	3284567	Callee	* info -> fprintf_func		3283135	0					
ANR	3284568	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284569	UnaryOperator	*		3283135	0					
ANR	3284570	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284571	Identifier	info		3283135	0					
ANR	3284572	Identifier	fprintf_func		3283135	1					
ANR	3284573	ArgumentList	info -> stream		3283135	1					
ANR	3284574	Argument	info -> stream		3283135	0					
ANR	3284575	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284576	Identifier	info		3283135	0					
ANR	3284577	Identifier	stream		3283135	1					
ANR	3284578	Argument	"""%s"""		3283135	1					
ANR	3284579	PrimaryExpression	"""%s"""		3283135	0					
ANR	3284580	Argument	mips_gpr_names [ 4 ]		3283135	2					
ANR	3284581	ArrayIndexing	mips_gpr_names [ 4 ]		3283135	0					
ANR	3284582	Identifier	mips_gpr_names		3283135	0					
ANR	3284583	PrimaryExpression	4		3283135	1					
ANR	3284584	IfStatement	if ( amask > 1 )		3283135	1					
ANR	3284585	Condition	amask > 1	1716:9:48544:48552	3283135	0	True				
ANR	3284586	RelationalExpression	amask > 1		3283135	0		>			
ANR	3284587	Identifier	amask		3283135	0					
ANR	3284588	PrimaryExpression	1		3283135	1					
ANR	3284589	CompoundStatement		354:20:8563:8563	3283135	1					
ANR	3284590	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ amask + 3 ] )"	1717:6:48563:48640	3283135	0	True				
ANR	3284591	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ amask + 3 ] )"		3283135	0					
ANR	3284592	Callee	* info -> fprintf_func		3283135	0					
ANR	3284593	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284594	UnaryOperator	*		3283135	0					
ANR	3284595	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284596	Identifier	info		3283135	0					
ANR	3284597	Identifier	fprintf_func		3283135	1					
ANR	3284598	ArgumentList	info -> stream		3283135	1					
ANR	3284599	Argument	info -> stream		3283135	0					
ANR	3284600	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284601	Identifier	info		3283135	0					
ANR	3284602	Identifier	stream		3283135	1					
ANR	3284603	Argument	"""-%s"""		3283135	1					
ANR	3284604	PrimaryExpression	"""-%s"""		3283135	0					
ANR	3284605	Argument	mips_gpr_names [ amask + 3 ]		3283135	2					
ANR	3284606	ArrayIndexing	mips_gpr_names [ amask + 3 ]		3283135	0					
ANR	3284607	Identifier	mips_gpr_names		3283135	0					
ANR	3284608	AdditiveExpression	amask + 3		3283135	1		+			
ANR	3284609	Identifier	amask		3283135	0					
ANR	3284610	PrimaryExpression	3		3283135	1					
ANR	3284611	ExpressionStatement	need_comma = 1	1720:5:48654:48668	3283135	2	True				
ANR	3284612	AssignmentExpression	need_comma = 1		3283135	0		=			
ANR	3284613	Identifier	need_comma		3283135	0					
ANR	3284614	PrimaryExpression	1		3283135	1					
ANR	3284615	ExpressionStatement	smask = ( l >> 1 ) & 3	1723:1:48677:48697	3283135	5	True				
ANR	3284616	AssignmentExpression	smask = ( l >> 1 ) & 3		3283135	0		=			
ANR	3284617	Identifier	smask		3283135	0					
ANR	3284618	BitAndExpression	( l >> 1 ) & 3		3283135	1		&			
ANR	3284619	ShiftExpression	l >> 1		3283135	0		>>			
ANR	3284620	Identifier	l		3283135	0					
ANR	3284621	PrimaryExpression	1		3283135	1					
ANR	3284622	PrimaryExpression	3		3283135	1					
ANR	3284623	IfStatement	if ( smask == 3 )		3283135	6					
ANR	3284624	Condition	smask == 3	1724:5:48704:48713	3283135	0	True				
ANR	3284625	EqualityExpression	smask == 3		3283135	0		==			
ANR	3284626	Identifier	smask		3283135	0					
ANR	3284627	PrimaryExpression	3		3283135	1					
ANR	3284628	CompoundStatement		363:3:8727:8727	3283135	1					
ANR	3284629	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s??"" , need_comma ? "", "" : """" )"	1726:5:48726:48801	3283135	0	True				
ANR	3284630	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s??"" , need_comma ? "", "" : """" )"		3283135	0					
ANR	3284631	Callee	* info -> fprintf_func		3283135	0					
ANR	3284632	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284633	UnaryOperator	*		3283135	0					
ANR	3284634	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284635	Identifier	info		3283135	0					
ANR	3284636	Identifier	fprintf_func		3283135	1					
ANR	3284637	ArgumentList	info -> stream		3283135	1					
ANR	3284638	Argument	info -> stream		3283135	0					
ANR	3284639	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284640	Identifier	info		3283135	0					
ANR	3284641	Identifier	stream		3283135	1					
ANR	3284642	Argument	"""%s??"""		3283135	1					
ANR	3284643	PrimaryExpression	"""%s??"""		3283135	0					
ANR	3284644	Argument	"need_comma ? "", "" : """""		3283135	2					
ANR	3284645	ConditionalExpression	"need_comma ? "", "" : """""		3283135	0					
ANR	3284646	Condition	need_comma		3283135	0					
ANR	3284647	Identifier	need_comma		3283135	0					
ANR	3284648	PrimaryExpression	""", """		3283135	1					
ANR	3284649	PrimaryExpression	""""""		3283135	2					
ANR	3284650	ExpressionStatement	need_comma = 1	1728:5:48808:48822	3283135	1	True				
ANR	3284651	AssignmentExpression	need_comma = 1		3283135	0		=			
ANR	3284652	Identifier	need_comma		3283135	0					
ANR	3284653	PrimaryExpression	1		3283135	1					
ANR	3284654	ElseStatement	else		3283135	0					
ANR	3284655	IfStatement	if ( smask > 0 )		3283135	0					
ANR	3284656	Condition	smask > 0	1730:10:48839:48847	3283135	0	True				
ANR	3284657	RelationalExpression	smask > 0		3283135	0		>			
ANR	3284658	Identifier	smask		3283135	0					
ANR	3284659	PrimaryExpression	0		3283135	1					
ANR	3284660	CompoundStatement		369:3:8861:8861	3283135	1					
ANR	3284661	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s%s"" , need_comma ? "", "" : """" , mips_gpr_names [ 16 ] )"	1732:5:48860:48962	3283135	0	True				
ANR	3284662	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s%s"" , need_comma ? "", "" : """" , mips_gpr_names [ 16 ] )"		3283135	0					
ANR	3284663	Callee	* info -> fprintf_func		3283135	0					
ANR	3284664	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284665	UnaryOperator	*		3283135	0					
ANR	3284666	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284667	Identifier	info		3283135	0					
ANR	3284668	Identifier	fprintf_func		3283135	1					
ANR	3284669	ArgumentList	info -> stream		3283135	1					
ANR	3284670	Argument	info -> stream		3283135	0					
ANR	3284671	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284672	Identifier	info		3283135	0					
ANR	3284673	Identifier	stream		3283135	1					
ANR	3284674	Argument	"""%s%s"""		3283135	1					
ANR	3284675	PrimaryExpression	"""%s%s"""		3283135	0					
ANR	3284676	Argument	"need_comma ? "", "" : """""		3283135	2					
ANR	3284677	ConditionalExpression	"need_comma ? "", "" : """""		3283135	0					
ANR	3284678	Condition	need_comma		3283135	0					
ANR	3284679	Identifier	need_comma		3283135	0					
ANR	3284680	PrimaryExpression	""", """		3283135	1					
ANR	3284681	PrimaryExpression	""""""		3283135	2					
ANR	3284682	Argument	mips_gpr_names [ 16 ]		3283135	3					
ANR	3284683	ArrayIndexing	mips_gpr_names [ 16 ]		3283135	0					
ANR	3284684	Identifier	mips_gpr_names		3283135	0					
ANR	3284685	PrimaryExpression	16		3283135	1					
ANR	3284686	IfStatement	if ( smask > 1 )		3283135	1					
ANR	3284687	Condition	smask > 1	1735:9:48973:48981	3283135	0	True				
ANR	3284688	RelationalExpression	smask > 1		3283135	0		>			
ANR	3284689	Identifier	smask		3283135	0					
ANR	3284690	PrimaryExpression	1		3283135	1					
ANR	3284691	CompoundStatement		373:20:8992:8992	3283135	1					
ANR	3284692	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ smask + 15 ] )"	1736:6:48992:49070	3283135	0	True				
ANR	3284693	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ smask + 15 ] )"		3283135	0					
ANR	3284694	Callee	* info -> fprintf_func		3283135	0					
ANR	3284695	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284696	UnaryOperator	*		3283135	0					
ANR	3284697	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284698	Identifier	info		3283135	0					
ANR	3284699	Identifier	fprintf_func		3283135	1					
ANR	3284700	ArgumentList	info -> stream		3283135	1					
ANR	3284701	Argument	info -> stream		3283135	0					
ANR	3284702	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284703	Identifier	info		3283135	0					
ANR	3284704	Identifier	stream		3283135	1					
ANR	3284705	Argument	"""-%s"""		3283135	1					
ANR	3284706	PrimaryExpression	"""-%s"""		3283135	0					
ANR	3284707	Argument	mips_gpr_names [ smask + 15 ]		3283135	2					
ANR	3284708	ArrayIndexing	mips_gpr_names [ smask + 15 ]		3283135	0					
ANR	3284709	Identifier	mips_gpr_names		3283135	0					
ANR	3284710	AdditiveExpression	smask + 15		3283135	1		+			
ANR	3284711	Identifier	smask		3283135	0					
ANR	3284712	PrimaryExpression	15		3283135	1					
ANR	3284713	ExpressionStatement	need_comma = 1	1739:5:49084:49098	3283135	2	True				
ANR	3284714	AssignmentExpression	need_comma = 1		3283135	0		=			
ANR	3284715	Identifier	need_comma		3283135	0					
ANR	3284716	PrimaryExpression	1		3283135	1					
ANR	3284717	IfStatement	if ( l & 1 )		3283135	7					
ANR	3284718	Condition	l & 1	1742:5:49111:49115	3283135	0	True				
ANR	3284719	BitAndExpression	l & 1		3283135	0		&			
ANR	3284720	Identifier	l		3283135	0					
ANR	3284721	PrimaryExpression	1		3283135	1					
ANR	3284722	CompoundStatement		381:3:9129:9129	3283135	1					
ANR	3284723	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s%s"" , need_comma ? "", "" : """" , mips_gpr_names [ 31 ] )"	1744:5:49128:49230	3283135	0	True				
ANR	3284724	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s%s"" , need_comma ? "", "" : """" , mips_gpr_names [ 31 ] )"		3283135	0					
ANR	3284725	Callee	* info -> fprintf_func		3283135	0					
ANR	3284726	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284727	UnaryOperator	*		3283135	0					
ANR	3284728	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284729	Identifier	info		3283135	0					
ANR	3284730	Identifier	fprintf_func		3283135	1					
ANR	3284731	ArgumentList	info -> stream		3283135	1					
ANR	3284732	Argument	info -> stream		3283135	0					
ANR	3284733	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284734	Identifier	info		3283135	0					
ANR	3284735	Identifier	stream		3283135	1					
ANR	3284736	Argument	"""%s%s"""		3283135	1					
ANR	3284737	PrimaryExpression	"""%s%s"""		3283135	0					
ANR	3284738	Argument	"need_comma ? "", "" : """""		3283135	2					
ANR	3284739	ConditionalExpression	"need_comma ? "", "" : """""		3283135	0					
ANR	3284740	Condition	need_comma		3283135	0					
ANR	3284741	Identifier	need_comma		3283135	0					
ANR	3284742	PrimaryExpression	""", """		3283135	1					
ANR	3284743	PrimaryExpression	""""""		3283135	2					
ANR	3284744	Argument	mips_gpr_names [ 31 ]		3283135	3					
ANR	3284745	ArrayIndexing	mips_gpr_names [ 31 ]		3283135	0					
ANR	3284746	Identifier	mips_gpr_names		3283135	0					
ANR	3284747	PrimaryExpression	31		3283135	1					
ANR	3284748	ExpressionStatement	need_comma = 1	1747:5:49237:49251	3283135	1	True				
ANR	3284749	AssignmentExpression	need_comma = 1		3283135	0		=			
ANR	3284750	Identifier	need_comma		3283135	0					
ANR	3284751	PrimaryExpression	1		3283135	1					
ANR	3284752	IfStatement	if ( amask == 5 || amask == 6 )		3283135	8					
ANR	3284753	Condition	amask == 5 || amask == 6	1750:5:49264:49287	3283135	0	True				
ANR	3284754	OrExpression	amask == 5 || amask == 6		3283135	0		||			
ANR	3284755	EqualityExpression	amask == 5		3283135	0		==			
ANR	3284756	Identifier	amask		3283135	0					
ANR	3284757	PrimaryExpression	5		3283135	1					
ANR	3284758	EqualityExpression	amask == 6		3283135	1		==			
ANR	3284759	Identifier	amask		3283135	0					
ANR	3284760	PrimaryExpression	6		3283135	1					
ANR	3284761	CompoundStatement		389:3:9301:9301	3283135	1					
ANR	3284762	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s$f0"" , need_comma ? "", "" : """" )"	1752:5:49300:49376	3283135	0	True				
ANR	3284763	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s$f0"" , need_comma ? "", "" : """" )"		3283135	0					
ANR	3284764	Callee	* info -> fprintf_func		3283135	0					
ANR	3284765	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284766	UnaryOperator	*		3283135	0					
ANR	3284767	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284768	Identifier	info		3283135	0					
ANR	3284769	Identifier	fprintf_func		3283135	1					
ANR	3284770	ArgumentList	info -> stream		3283135	1					
ANR	3284771	Argument	info -> stream		3283135	0					
ANR	3284772	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284773	Identifier	info		3283135	0					
ANR	3284774	Identifier	stream		3283135	1					
ANR	3284775	Argument	"""%s$f0"""		3283135	1					
ANR	3284776	PrimaryExpression	"""%s$f0"""		3283135	0					
ANR	3284777	Argument	"need_comma ? "", "" : """""		3283135	2					
ANR	3284778	ConditionalExpression	"need_comma ? "", "" : """""		3283135	0					
ANR	3284779	Condition	need_comma		3283135	0					
ANR	3284780	Identifier	need_comma		3283135	0					
ANR	3284781	PrimaryExpression	""", """		3283135	1					
ANR	3284782	PrimaryExpression	""""""		3283135	2					
ANR	3284783	IfStatement	if ( amask == 6 )		3283135	1					
ANR	3284784	Condition	amask == 6	1754:9:49387:49396	3283135	0	True				
ANR	3284785	EqualityExpression	amask == 6		3283135	0		==			
ANR	3284786	Identifier	amask		3283135	0					
ANR	3284787	PrimaryExpression	6		3283135	1					
ANR	3284788	CompoundStatement		392:21:9407:9407	3283135	1					
ANR	3284789	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""-$f1"" )"	1755:6:49407:49451	3283135	0	True				
ANR	3284790	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""-$f1"" )"		3283135	0					
ANR	3284791	Callee	* info -> fprintf_func		3283135	0					
ANR	3284792	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284793	UnaryOperator	*		3283135	0					
ANR	3284794	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284795	Identifier	info		3283135	0					
ANR	3284796	Identifier	fprintf_func		3283135	1					
ANR	3284797	ArgumentList	info -> stream		3283135	1					
ANR	3284798	Argument	info -> stream		3283135	0					
ANR	3284799	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284800	Identifier	info		3283135	0					
ANR	3284801	Identifier	stream		3283135	1					
ANR	3284802	Argument	"""-$f1"""		3283135	1					
ANR	3284803	PrimaryExpression	"""-$f1"""		3283135	0					
ANR	3284804	BreakStatement	break ;	1759:6:49479:49484	3283135	71	True				
ANR	3284805	Label	case 'm' :	1761:4:49491:49499	3283135	72	True				
ANR	3284806	Label	case 'M' :	1762:4:49505:49513	3283135	73	True				
ANR	3284807	CompoundStatement		407:6:9673:9681	3283135	74					
ANR	3284808	IdentifierDeclStatement	int need_comma = 0 ;	1765:6:49564:49582	3283135	0	True				
ANR	3284809	IdentifierDecl	need_comma = 0		3283135	0					
ANR	3284810	IdentifierDeclType	int		3283135	0					
ANR	3284811	Identifier	need_comma		3283135	1					
ANR	3284812	AssignmentExpression	need_comma = 0		3283135	2		=			
ANR	3284813	Identifier	need_comma		3283135	0					
ANR	3284814	PrimaryExpression	0		3283135	1					
ANR	3284815	IdentifierDeclStatement	"int amask , args , statics ;"	1766:6:49590:49614	3283135	1	True				
ANR	3284816	IdentifierDecl	amask		3283135	0					
ANR	3284817	IdentifierDeclType	int		3283135	0					
ANR	3284818	Identifier	amask		3283135	1					
ANR	3284819	IdentifierDecl	args		3283135	1					
ANR	3284820	IdentifierDeclType	int		3283135	0					
ANR	3284821	Identifier	args		3283135	1					
ANR	3284822	IdentifierDecl	statics		3283135	2					
ANR	3284823	IdentifierDeclType	int		3283135	0					
ANR	3284824	Identifier	statics		3283135	1					
ANR	3284825	IdentifierDeclStatement	"int nsreg , smask ;"	1767:6:49622:49638	3283135	2	True				
ANR	3284826	IdentifierDecl	nsreg		3283135	0					
ANR	3284827	IdentifierDeclType	int		3283135	0					
ANR	3284828	Identifier	nsreg		3283135	1					
ANR	3284829	IdentifierDecl	smask		3283135	1					
ANR	3284830	IdentifierDeclType	int		3283135	0					
ANR	3284831	Identifier	smask		3283135	1					
ANR	3284832	IdentifierDeclStatement	int framesz ;	1768:6:49646:49657	3283135	3	True				
ANR	3284833	IdentifierDecl	framesz		3283135	0					
ANR	3284834	IdentifierDeclType	int		3283135	0					
ANR	3284835	Identifier	framesz		3283135	1					
ANR	3284836	IdentifierDeclStatement	"int i , j ;"	1769:6:49665:49673	3283135	4	True				
ANR	3284837	IdentifierDecl	i		3283135	0					
ANR	3284838	IdentifierDeclType	int		3283135	0					
ANR	3284839	Identifier	i		3283135	1					
ANR	3284840	IdentifierDecl	j		3283135	1					
ANR	3284841	IdentifierDeclType	int		3283135	0					
ANR	3284842	Identifier	j		3283135	1					
ANR	3284843	ExpressionStatement	l = l & 0x7f	1771:6:49682:49694	3283135	5	True				
ANR	3284844	AssignmentExpression	l = l & 0x7f		3283135	0		=			
ANR	3284845	Identifier	l		3283135	0					
ANR	3284846	BitAndExpression	l & 0x7f		3283135	1		&			
ANR	3284847	Identifier	l		3283135	0					
ANR	3284848	PrimaryExpression	0x7f		3283135	1					
ANR	3284849	IfStatement	if ( use_extend )		3283135	6					
ANR	3284850	Condition	use_extend	1772:10:49706:49715	3283135	0	True				
ANR	3284851	Identifier	use_extend		3283135	0					
ANR	3284852	CompoundStatement		410:22:9726:9726	3283135	1					
ANR	3284853	ExpressionStatement	l |= extend << 16	1773:7:49727:49744	3283135	0	True				
ANR	3284854	AssignmentExpression	l |= extend << 16		3283135	0		|=			
ANR	3284855	Identifier	l		3283135	0					
ANR	3284856	ShiftExpression	extend << 16		3283135	1		<<			
ANR	3284857	Identifier	extend		3283135	0					
ANR	3284858	PrimaryExpression	16		3283135	1					
ANR	3284859	ExpressionStatement	amask = ( l >> 16 ) & 0xf	1776:6:49761:49784	3283135	7	True				
ANR	3284860	AssignmentExpression	amask = ( l >> 16 ) & 0xf		3283135	0		=			
ANR	3284861	Identifier	amask		3283135	0					
ANR	3284862	BitAndExpression	( l >> 16 ) & 0xf		3283135	1		&			
ANR	3284863	ShiftExpression	l >> 16		3283135	0		>>			
ANR	3284864	Identifier	l		3283135	0					
ANR	3284865	PrimaryExpression	16		3283135	1					
ANR	3284866	PrimaryExpression	0xf		3283135	1					
ANR	3284867	IfStatement	if ( amask == MIPS16_ALL_ARGS )		3283135	8					
ANR	3284868	Condition	amask == MIPS16_ALL_ARGS	1777:10:49796:49819	3283135	0	True				
ANR	3284869	EqualityExpression	amask == MIPS16_ALL_ARGS		3283135	0		==			
ANR	3284870	Identifier	amask		3283135	0					
ANR	3284871	Identifier	MIPS16_ALL_ARGS		3283135	1					
ANR	3284872	CompoundStatement		416:8:9838:9838	3283135	1					
ANR	3284873	ExpressionStatement	args = 4	1779:10:49842:49850	3283135	0	True				
ANR	3284874	AssignmentExpression	args = 4		3283135	0		=			
ANR	3284875	Identifier	args		3283135	0					
ANR	3284876	PrimaryExpression	4		3283135	1					
ANR	3284877	ExpressionStatement	statics = 0	1780:10:49862:49873	3283135	1	True				
ANR	3284878	AssignmentExpression	statics = 0		3283135	0		=			
ANR	3284879	Identifier	statics		3283135	0					
ANR	3284880	PrimaryExpression	0		3283135	1					
ANR	3284881	ElseStatement	else		3283135	0					
ANR	3284882	IfStatement	if ( amask == MIPS16_ALL_STATICS )		3283135	0					
ANR	3284883	Condition	amask == MIPS16_ALL_STATICS	1782:15:49900:49926	3283135	0	True				
ANR	3284884	EqualityExpression	amask == MIPS16_ALL_STATICS		3283135	0		==			
ANR	3284885	Identifier	amask		3283135	0					
ANR	3284886	Identifier	MIPS16_ALL_STATICS		3283135	1					
ANR	3284887	CompoundStatement		421:8:9945:9945	3283135	1					
ANR	3284888	ExpressionStatement	args = 0	1784:10:49949:49957	3283135	0	True				
ANR	3284889	AssignmentExpression	args = 0		3283135	0		=			
ANR	3284890	Identifier	args		3283135	0					
ANR	3284891	PrimaryExpression	0		3283135	1					
ANR	3284892	ExpressionStatement	statics = 4	1785:10:49969:49980	3283135	1	True				
ANR	3284893	AssignmentExpression	statics = 4		3283135	0		=			
ANR	3284894	Identifier	statics		3283135	0					
ANR	3284895	PrimaryExpression	4		3283135	1					
ANR	3284896	ElseStatement	else		3283135	0					
ANR	3284897	CompoundStatement		426:8:10019:10019	3283135	0					
ANR	3284898	ExpressionStatement	args = amask >> 2	1789:10:50023:50040	3283135	0	True				
ANR	3284899	AssignmentExpression	args = amask >> 2		3283135	0		=			
ANR	3284900	Identifier	args		3283135	0					
ANR	3284901	ShiftExpression	amask >> 2		3283135	1		>>			
ANR	3284902	Identifier	amask		3283135	0					
ANR	3284903	PrimaryExpression	2		3283135	1					
ANR	3284904	ExpressionStatement	statics = amask & 3	1790:10:50052:50071	3283135	1	True				
ANR	3284905	AssignmentExpression	statics = amask & 3		3283135	0		=			
ANR	3284906	Identifier	statics		3283135	0					
ANR	3284907	BitAndExpression	amask & 3		3283135	1		&			
ANR	3284908	Identifier	amask		3283135	0					
ANR	3284909	PrimaryExpression	3		3283135	1					
ANR	3284910	IfStatement	if ( args > 0 )		3283135	9					
ANR	3284911	Condition	args > 0	1793:10:50094:50101	3283135	0	True				
ANR	3284912	RelationalExpression	args > 0		3283135	0		>			
ANR	3284913	Identifier	args		3283135	0					
ANR	3284914	PrimaryExpression	0		3283135	1					
ANR	3284915	CompoundStatement		431:20:10112:10112	3283135	1					
ANR	3284916	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 4 ] )"	1794:10:50116:50177	3283135	0	True				
ANR	3284917	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , mips_gpr_names [ 4 ] )"		3283135	0					
ANR	3284918	Callee	* info -> fprintf_func		3283135	0					
ANR	3284919	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284920	UnaryOperator	*		3283135	0					
ANR	3284921	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284922	Identifier	info		3283135	0					
ANR	3284923	Identifier	fprintf_func		3283135	1					
ANR	3284924	ArgumentList	info -> stream		3283135	1					
ANR	3284925	Argument	info -> stream		3283135	0					
ANR	3284926	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284927	Identifier	info		3283135	0					
ANR	3284928	Identifier	stream		3283135	1					
ANR	3284929	Argument	"""%s"""		3283135	1					
ANR	3284930	PrimaryExpression	"""%s"""		3283135	0					
ANR	3284931	Argument	mips_gpr_names [ 4 ]		3283135	2					
ANR	3284932	ArrayIndexing	mips_gpr_names [ 4 ]		3283135	0					
ANR	3284933	Identifier	mips_gpr_names		3283135	0					
ANR	3284934	PrimaryExpression	4		3283135	1					
ANR	3284935	IfStatement	if ( args > 1 )		3283135	1					
ANR	3284936	Condition	args > 1	1795:7:50186:50193	3283135	0	True				
ANR	3284937	RelationalExpression	args > 1		3283135	0		>			
ANR	3284938	Identifier	args		3283135	0					
ANR	3284939	PrimaryExpression	1		3283135	1					
ANR	3284940	CompoundStatement		433:17:10204:10204	3283135	1					
ANR	3284941	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ 4 + args - 1 ] )"	1796:4:50202:50280	3283135	0	True				
ANR	3284942	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ 4 + args - 1 ] )"		3283135	0					
ANR	3284943	Callee	* info -> fprintf_func		3283135	0					
ANR	3284944	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3284945	UnaryOperator	*		3283135	0					
ANR	3284946	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3284947	Identifier	info		3283135	0					
ANR	3284948	Identifier	fprintf_func		3283135	1					
ANR	3284949	ArgumentList	info -> stream		3283135	1					
ANR	3284950	Argument	info -> stream		3283135	0					
ANR	3284951	PtrMemberAccess	info -> stream		3283135	0					
ANR	3284952	Identifier	info		3283135	0					
ANR	3284953	Identifier	stream		3283135	1					
ANR	3284954	Argument	"""-%s"""		3283135	1					
ANR	3284955	PrimaryExpression	"""-%s"""		3283135	0					
ANR	3284956	Argument	mips_gpr_names [ 4 + args - 1 ]		3283135	2					
ANR	3284957	ArrayIndexing	mips_gpr_names [ 4 + args - 1 ]		3283135	0					
ANR	3284958	Identifier	mips_gpr_names		3283135	0					
ANR	3284959	AdditiveExpression	4 + args - 1		3283135	1		+			
ANR	3284960	PrimaryExpression	4		3283135	0					
ANR	3284961	AdditiveExpression	args - 1		3283135	1		-			
ANR	3284962	Identifier	args		3283135	0					
ANR	3284963	PrimaryExpression	1		3283135	1					
ANR	3284964	ExpressionStatement	need_comma = 1	1799:3:50290:50304	3283135	2	True				
ANR	3284965	AssignmentExpression	need_comma = 1		3283135	0		=			
ANR	3284966	Identifier	need_comma		3283135	0					
ANR	3284967	PrimaryExpression	1		3283135	1					
ANR	3284968	ExpressionStatement	framesz = ( ( ( l >> 16 ) & 0xf0 ) | ( l & 0x0f ) ) * 8	1802:6:50321:50368	3283135	10	True				
ANR	3284969	AssignmentExpression	framesz = ( ( ( l >> 16 ) & 0xf0 ) | ( l & 0x0f ) ) * 8		3283135	0		=			
ANR	3284970	Identifier	framesz		3283135	0					
ANR	3284971	MultiplicativeExpression	( ( ( l >> 16 ) & 0xf0 ) | ( l & 0x0f ) ) * 8		3283135	1		*			
ANR	3284972	InclusiveOrExpression	( ( l >> 16 ) & 0xf0 ) | ( l & 0x0f )		3283135	0		|			
ANR	3284973	BitAndExpression	( l >> 16 ) & 0xf0		3283135	0		&			
ANR	3284974	ShiftExpression	l >> 16		3283135	0		>>			
ANR	3284975	Identifier	l		3283135	0					
ANR	3284976	PrimaryExpression	16		3283135	1					
ANR	3284977	PrimaryExpression	0xf0		3283135	1					
ANR	3284978	BitAndExpression	l & 0x0f		3283135	1		&			
ANR	3284979	Identifier	l		3283135	0					
ANR	3284980	PrimaryExpression	0x0f		3283135	1					
ANR	3284981	PrimaryExpression	8		3283135	1					
ANR	3284982	IfStatement	if ( framesz == 0 && ! use_extend )		3283135	11					
ANR	3284983	Condition	framesz == 0 && ! use_extend	1803:10:50380:50406	3283135	0	True				
ANR	3284984	AndExpression	framesz == 0 && ! use_extend		3283135	0		&&			
ANR	3284985	EqualityExpression	framesz == 0		3283135	0		==			
ANR	3284986	Identifier	framesz		3283135	0					
ANR	3284987	PrimaryExpression	0		3283135	1					
ANR	3284988	UnaryOperationExpression	! use_extend		3283135	1					
ANR	3284989	UnaryOperator	!		3283135	0					
ANR	3284990	Identifier	use_extend		3283135	1					
ANR	3284991	CompoundStatement		441:39:10417:10417	3283135	1					
ANR	3284992	ExpressionStatement	framesz = 128	1804:7:50418:50431	3283135	0	True				
ANR	3284993	AssignmentExpression	framesz = 128		3283135	0		=			
ANR	3284994	Identifier	framesz		3283135	0					
ANR	3284995	PrimaryExpression	128		3283135	1					
ANR	3284996	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s%d"" , need_comma ? "", "" : """" , framesz )"	1807:6:50448:50584	3283135	12	True				
ANR	3284997	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s%d"" , need_comma ? "", "" : """" , framesz )"		3283135	0					
ANR	3284998	Callee	* info -> fprintf_func		3283135	0					
ANR	3284999	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3285000	UnaryOperator	*		3283135	0					
ANR	3285001	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3285002	Identifier	info		3283135	0					
ANR	3285003	Identifier	fprintf_func		3283135	1					
ANR	3285004	ArgumentList	info -> stream		3283135	1					
ANR	3285005	Argument	info -> stream		3283135	0					
ANR	3285006	PtrMemberAccess	info -> stream		3283135	0					
ANR	3285007	Identifier	info		3283135	0					
ANR	3285008	Identifier	stream		3283135	1					
ANR	3285009	Argument	"""%s%d"""		3283135	1					
ANR	3285010	PrimaryExpression	"""%s%d"""		3283135	0					
ANR	3285011	Argument	"need_comma ? "", "" : """""		3283135	2					
ANR	3285012	ConditionalExpression	"need_comma ? "", "" : """""		3283135	0					
ANR	3285013	Condition	need_comma		3283135	0					
ANR	3285014	Identifier	need_comma		3283135	0					
ANR	3285015	PrimaryExpression	""", """		3283135	1					
ANR	3285016	PrimaryExpression	""""""		3283135	2					
ANR	3285017	Argument	framesz		3283135	3					
ANR	3285018	Identifier	framesz		3283135	0					
ANR	3285019	IfStatement	if ( l & 0x40 )		3283135	13					
ANR	3285020	Condition	l & 0x40	1811:10:50597:50604	3283135	0	True				
ANR	3285021	BitAndExpression	l & 0x40		3283135	0		&			
ANR	3285022	Identifier	l		3283135	0					
ANR	3285023	PrimaryExpression	0x40		3283135	1					
ANR	3285024	CompoundStatement		449:20:10615:10615	3283135	1					
ANR	3285025	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "", %s"" , mips_gpr_names [ 31 ] )"	1812:7:50626:50690	3283135	0	True				
ANR	3285026	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "", %s"" , mips_gpr_names [ 31 ] )"		3283135	0					
ANR	3285027	Callee	* info -> fprintf_func		3283135	0					
ANR	3285028	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3285029	UnaryOperator	*		3283135	0					
ANR	3285030	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3285031	Identifier	info		3283135	0					
ANR	3285032	Identifier	fprintf_func		3283135	1					
ANR	3285033	ArgumentList	info -> stream		3283135	1					
ANR	3285034	Argument	info -> stream		3283135	0					
ANR	3285035	PtrMemberAccess	info -> stream		3283135	0					
ANR	3285036	Identifier	info		3283135	0					
ANR	3285037	Identifier	stream		3283135	1					
ANR	3285038	Argument	""", %s"""		3283135	1					
ANR	3285039	PrimaryExpression	""", %s"""		3283135	0					
ANR	3285040	Argument	mips_gpr_names [ 31 ]		3283135	2					
ANR	3285041	ArrayIndexing	mips_gpr_names [ 31 ]		3283135	0					
ANR	3285042	Identifier	mips_gpr_names		3283135	0					
ANR	3285043	PrimaryExpression	31		3283135	1					
ANR	3285044	ExpressionStatement	nsreg = ( l >> 24 ) & 0x7	1815:6:50707:50730	3283135	14	True				
ANR	3285045	AssignmentExpression	nsreg = ( l >> 24 ) & 0x7		3283135	0		=			
ANR	3285046	Identifier	nsreg		3283135	0					
ANR	3285047	BitAndExpression	( l >> 24 ) & 0x7		3283135	1		&			
ANR	3285048	ShiftExpression	l >> 24		3283135	0		>>			
ANR	3285049	Identifier	l		3283135	0					
ANR	3285050	PrimaryExpression	24		3283135	1					
ANR	3285051	PrimaryExpression	0x7		3283135	1					
ANR	3285052	ExpressionStatement	smask = 0	1816:6:50738:50747	3283135	15	True				
ANR	3285053	AssignmentExpression	smask = 0		3283135	0		=			
ANR	3285054	Identifier	smask		3283135	0					
ANR	3285055	PrimaryExpression	0		3283135	1					
ANR	3285056	IfStatement	if ( l & 0x20 )		3283135	16					
ANR	3285057	Condition	l & 0x20	1817:10:50759:50766	3283135	0	True				
ANR	3285058	BitAndExpression	l & 0x20		3283135	0		&			
ANR	3285059	Identifier	l		3283135	0					
ANR	3285060	PrimaryExpression	0x20		3283135	1					
ANR	3285061	CompoundStatement		455:20:10777:10777	3283135	1					
ANR	3285062	ExpressionStatement	smask |= 1 << 0	1818:7:50788:50803	3283135	0	True				
ANR	3285063	AssignmentExpression	smask |= 1 << 0		3283135	0		|=			
ANR	3285064	Identifier	smask		3283135	0					
ANR	3285065	ShiftExpression	1 << 0		3283135	1		<<			
ANR	3285066	PrimaryExpression	1		3283135	0					
ANR	3285067	PrimaryExpression	0		3283135	1					
ANR	3285068	IfStatement	if ( l & 0x10 )		3283135	17					
ANR	3285069	Condition	l & 0x10	1820:10:50823:50830	3283135	0	True				
ANR	3285070	BitAndExpression	l & 0x10		3283135	0		&			
ANR	3285071	Identifier	l		3283135	0					
ANR	3285072	PrimaryExpression	0x10		3283135	1					
ANR	3285073	CompoundStatement		458:20:10841:10841	3283135	1					
ANR	3285074	ExpressionStatement	smask |= 1 << 1	1821:7:50852:50867	3283135	0	True				
ANR	3285075	AssignmentExpression	smask |= 1 << 1		3283135	0		|=			
ANR	3285076	Identifier	smask		3283135	0					
ANR	3285077	ShiftExpression	1 << 1		3283135	1		<<			
ANR	3285078	PrimaryExpression	1		3283135	0					
ANR	3285079	PrimaryExpression	1		3283135	1					
ANR	3285080	IfStatement	if ( nsreg > 0 )		3283135	18					
ANR	3285081	Condition	nsreg > 0	1823:10:50887:50895	3283135	0	True				
ANR	3285082	RelationalExpression	nsreg > 0		3283135	0		>			
ANR	3285083	Identifier	nsreg		3283135	0					
ANR	3285084	PrimaryExpression	0		3283135	1					
ANR	3285085	CompoundStatement		461:21:10906:10906	3283135	1					
ANR	3285086	ExpressionStatement	smask |= ( ( 1 << nsreg ) - 1 ) << 2	1824:7:50921:50953	3283135	0	True				
ANR	3285087	AssignmentExpression	smask |= ( ( 1 << nsreg ) - 1 ) << 2		3283135	0		|=			
ANR	3285088	Identifier	smask		3283135	0					
ANR	3285089	ShiftExpression	( ( 1 << nsreg ) - 1 ) << 2		3283135	1		<<			
ANR	3285090	AdditiveExpression	( 1 << nsreg ) - 1		3283135	0		-			
ANR	3285091	ShiftExpression	1 << nsreg		3283135	0		<<			
ANR	3285092	PrimaryExpression	1		3283135	0					
ANR	3285093	Identifier	nsreg		3283135	1					
ANR	3285094	PrimaryExpression	1		3283135	1					
ANR	3285095	PrimaryExpression	2		3283135	1					
ANR	3285096	ForStatement	for ( i = 0 ; i < 9 ; i ++ )		3283135	19					
ANR	3285097	ForInit	i = 0 ;	1828:11:51019:51024	3283135	0	True				
ANR	3285098	AssignmentExpression	i = 0		3283135	0		=			
ANR	3285099	Identifier	i		3283135	0					
ANR	3285100	PrimaryExpression	0		3283135	1					
ANR	3285101	Condition	i < 9	1828:18:51026:51030	3283135	1	True				
ANR	3285102	RelationalExpression	i < 9		3283135	0		<			
ANR	3285103	Identifier	i		3283135	0					
ANR	3285104	PrimaryExpression	9		3283135	1					
ANR	3285105	PostIncDecOperationExpression	i ++	1828:25:51033:51035	3283135	2	True				
ANR	3285106	Identifier	i		3283135	0					
ANR	3285107	IncDec	++		3283135	1					
ANR	3285108	CompoundStatement		467:8:11054:11054	3283135	3					
ANR	3285109	IfStatement	if ( smask & ( 1 << i ) )		3283135	0					
ANR	3285110	Condition	smask & ( 1 << i )	1830:14:51062:51077	3283135	0	True				
ANR	3285111	BitAndExpression	smask & ( 1 << i )		3283135	0		&			
ANR	3285112	Identifier	smask		3283135	0					
ANR	3285113	ShiftExpression	1 << i		3283135	1		<<			
ANR	3285114	PrimaryExpression	1		3283135	0					
ANR	3285115	Identifier	i		3283135	1					
ANR	3285116	CompoundStatement		469:12:11100:11100	3283135	1					
ANR	3285117	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "", %s"" , mips_gpr_names [ i == 8 ? 30 : ( 16 + i ) ] )"	1832:14:51108:51229	3283135	0	True				
ANR	3285118	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "", %s"" , mips_gpr_names [ i == 8 ? 30 : ( 16 + i ) ] )"		3283135	0					
ANR	3285119	Callee	* info -> fprintf_func		3283135	0					
ANR	3285120	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3285121	UnaryOperator	*		3283135	0					
ANR	3285122	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3285123	Identifier	info		3283135	0					
ANR	3285124	Identifier	fprintf_func		3283135	1					
ANR	3285125	ArgumentList	info -> stream		3283135	1					
ANR	3285126	Argument	info -> stream		3283135	0					
ANR	3285127	PtrMemberAccess	info -> stream		3283135	0					
ANR	3285128	Identifier	info		3283135	0					
ANR	3285129	Identifier	stream		3283135	1					
ANR	3285130	Argument	""", %s"""		3283135	1					
ANR	3285131	PrimaryExpression	""", %s"""		3283135	0					
ANR	3285132	Argument	mips_gpr_names [ i == 8 ? 30 : ( 16 + i ) ]		3283135	2					
ANR	3285133	ArrayIndexing	mips_gpr_names [ i == 8 ? 30 : ( 16 + i ) ]		3283135	0					
ANR	3285134	Identifier	mips_gpr_names		3283135	0					
ANR	3285135	ConditionalExpression	i == 8 ? 30 : ( 16 + i )		3283135	1					
ANR	3285136	Condition	i == 8		3283135	0					
ANR	3285137	EqualityExpression	i == 8		3283135	0		==			
ANR	3285138	Identifier	i		3283135	0					
ANR	3285139	PrimaryExpression	8		3283135	1					
ANR	3285140	PrimaryExpression	30		3283135	1					
ANR	3285141	AdditiveExpression	16 + i		3283135	2		+			
ANR	3285142	PrimaryExpression	16		3283135	0					
ANR	3285143	Identifier	i		3283135	1					
ANR	3285144	ForStatement	for ( j = i ; smask & ( 2 << j ) ; j ++ )		3283135	1					
ANR	3285145	ForInit	j = i ;	1835:12:51294:51299	3283135	0	True				
ANR	3285146	AssignmentExpression	j = i		3283135	0		=			
ANR	3285147	Identifier	j		3283135	0					
ANR	3285148	Identifier	i		3283135	1					
ANR	3285149	Condition	smask & ( 2 << j )	1835:19:51301:51316	3283135	1	True				
ANR	3285150	BitAndExpression	smask & ( 2 << j )		3283135	0		&			
ANR	3285151	Identifier	smask		3283135	0					
ANR	3285152	ShiftExpression	2 << j		3283135	1		<<			
ANR	3285153	PrimaryExpression	2		3283135	0					
ANR	3285154	Identifier	j		3283135	1					
ANR	3285155	PostIncDecOperationExpression	j ++	1835:37:51319:51321	3283135	2	True				
ANR	3285156	Identifier	j		3283135	0					
ANR	3285157	IncDec	++		3283135	1					
ANR	3285158	CompoundStatement		473:42:11332:11332	3283135	3					
ANR	3285159	IfStatement	if ( j > i )		3283135	2					
ANR	3285160	Condition	j > i	1836:11:51338:51342	3283135	0	True				
ANR	3285161	RelationalExpression	j > i		3283135	0		>			
ANR	3285162	Identifier	j		3283135	0					
ANR	3285163	Identifier	i		3283135	1					
ANR	3285164	CompoundStatement		474:18:11353:11353	3283135	1					
ANR	3285165	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ j == 8 ? 30 : ( 16 + j ) ] )"	1837:8:51355:51447	3283135	0	True				
ANR	3285166	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""-%s"" , mips_gpr_names [ j == 8 ? 30 : ( 16 + j ) ] )"		3283135	0					
ANR	3285167	Callee	* info -> fprintf_func		3283135	0					
ANR	3285168	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3285169	UnaryOperator	*		3283135	0					
ANR	3285170	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3285171	Identifier	info		3283135	0					
ANR	3285172	Identifier	fprintf_func		3283135	1					
ANR	3285173	ArgumentList	info -> stream		3283135	1					
ANR	3285174	Argument	info -> stream		3283135	0					
ANR	3285175	PtrMemberAccess	info -> stream		3283135	0					
ANR	3285176	Identifier	info		3283135	0					
ANR	3285177	Identifier	stream		3283135	1					
ANR	3285178	Argument	"""-%s"""		3283135	1					
ANR	3285179	PrimaryExpression	"""-%s"""		3283135	0					
ANR	3285180	Argument	mips_gpr_names [ j == 8 ? 30 : ( 16 + j ) ]		3283135	2					
ANR	3285181	ArrayIndexing	mips_gpr_names [ j == 8 ? 30 : ( 16 + j ) ]		3283135	0					
ANR	3285182	Identifier	mips_gpr_names		3283135	0					
ANR	3285183	ConditionalExpression	j == 8 ? 30 : ( 16 + j )		3283135	1					
ANR	3285184	Condition	j == 8		3283135	0					
ANR	3285185	EqualityExpression	j == 8		3283135	0		==			
ANR	3285186	Identifier	j		3283135	0					
ANR	3285187	PrimaryExpression	8		3283135	1					
ANR	3285188	PrimaryExpression	30		3283135	1					
ANR	3285189	AdditiveExpression	16 + j		3283135	2		+			
ANR	3285190	PrimaryExpression	16		3283135	0					
ANR	3285191	Identifier	j		3283135	1					
ANR	3285192	ExpressionStatement	i = j + 1	1840:7:51465:51474	3283135	3	True				
ANR	3285193	AssignmentExpression	i = j + 1		3283135	0		=			
ANR	3285194	Identifier	i		3283135	0					
ANR	3285195	AdditiveExpression	j + 1		3283135	1		+			
ANR	3285196	Identifier	j		3283135	0					
ANR	3285197	PrimaryExpression	1		3283135	1					
ANR	3285198	IfStatement	if ( statics == 1 )		3283135	20					
ANR	3285199	Condition	statics == 1	1845:5:51538:51549	3283135	0	True				
ANR	3285200	EqualityExpression	statics == 1		3283135	0		==			
ANR	3285201	Identifier	statics		3283135	0					
ANR	3285202	PrimaryExpression	1		3283135	1					
ANR	3285203	CompoundStatement		483:19:11560:11560	3283135	1					
ANR	3285204	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "", %s"" , mips_gpr_names [ 7 ] )"	1846:2:51556:51619	3283135	0	True				
ANR	3285205	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "", %s"" , mips_gpr_names [ 7 ] )"		3283135	0					
ANR	3285206	Callee	* info -> fprintf_func		3283135	0					
ANR	3285207	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3285208	UnaryOperator	*		3283135	0					
ANR	3285209	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3285210	Identifier	info		3283135	0					
ANR	3285211	Identifier	fprintf_func		3283135	1					
ANR	3285212	ArgumentList	info -> stream		3283135	1					
ANR	3285213	Argument	info -> stream		3283135	0					
ANR	3285214	PtrMemberAccess	info -> stream		3283135	0					
ANR	3285215	Identifier	info		3283135	0					
ANR	3285216	Identifier	stream		3283135	1					
ANR	3285217	Argument	""", %s"""		3283135	1					
ANR	3285218	PrimaryExpression	""", %s"""		3283135	0					
ANR	3285219	Argument	mips_gpr_names [ 7 ]		3283135	2					
ANR	3285220	ArrayIndexing	mips_gpr_names [ 7 ]		3283135	0					
ANR	3285221	Identifier	mips_gpr_names		3283135	0					
ANR	3285222	PrimaryExpression	7		3283135	1					
ANR	3285223	ElseStatement	else		3283135	0					
ANR	3285224	IfStatement	if ( statics > 0 )		3283135	0					
ANR	3285225	Condition	statics > 0	1847:12:51633:51643	3283135	0	True				
ANR	3285226	RelationalExpression	statics > 0		3283135	0		>			
ANR	3285227	Identifier	statics		3283135	0					
ANR	3285228	PrimaryExpression	0		3283135	1					
ANR	3285229	CompoundStatement		485:25:11654:11654	3283135	1					
ANR	3285230	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "", %s-%s"" , mips_gpr_names [ 7 - statics + 1 ] , mips_gpr_names [ 7 ] )"	1848:2:51650:51755	3283135	0	True				
ANR	3285231	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "", %s-%s"" , mips_gpr_names [ 7 - statics + 1 ] , mips_gpr_names [ 7 ] )"		3283135	0					
ANR	3285232	Callee	* info -> fprintf_func		3283135	0					
ANR	3285233	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3285234	UnaryOperator	*		3283135	0					
ANR	3285235	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3285236	Identifier	info		3283135	0					
ANR	3285237	Identifier	fprintf_func		3283135	1					
ANR	3285238	ArgumentList	info -> stream		3283135	1					
ANR	3285239	Argument	info -> stream		3283135	0					
ANR	3285240	PtrMemberAccess	info -> stream		3283135	0					
ANR	3285241	Identifier	info		3283135	0					
ANR	3285242	Identifier	stream		3283135	1					
ANR	3285243	Argument	""", %s-%s"""		3283135	1					
ANR	3285244	PrimaryExpression	""", %s-%s"""		3283135	0					
ANR	3285245	Argument	mips_gpr_names [ 7 - statics + 1 ]		3283135	2					
ANR	3285246	ArrayIndexing	mips_gpr_names [ 7 - statics + 1 ]		3283135	0					
ANR	3285247	Identifier	mips_gpr_names		3283135	0					
ANR	3285248	AdditiveExpression	7 - statics + 1		3283135	1		-			
ANR	3285249	PrimaryExpression	7		3283135	0					
ANR	3285250	AdditiveExpression	statics + 1		3283135	1		+			
ANR	3285251	Identifier	statics		3283135	0					
ANR	3285252	PrimaryExpression	1		3283135	1					
ANR	3285253	Argument	mips_gpr_names [ 7 ]		3283135	3					
ANR	3285254	ArrayIndexing	mips_gpr_names [ 7 ]		3283135	0					
ANR	3285255	Identifier	mips_gpr_names		3283135	0					
ANR	3285256	PrimaryExpression	7		3283135	1					
ANR	3285257	BreakStatement	break ;	1853:6:51774:51779	3283135	75	True				
ANR	3285258	Label	default :	1855:4:51786:51793	3283135	76	True				
ANR	3285259	Identifier	default		3283135	0					
ANR	3285260	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal disassembler error, unrecognised modifier (%c)"" ) , type )"	1857:6:51831:51942	3283135	77	True				
ANR	3285261	CallExpression	"( * info -> fprintf_func ) ( info -> stream , _ ( ""# internal disassembler error, unrecognised modifier (%c)"" ) , type )"		3283135	0					
ANR	3285262	Callee	* info -> fprintf_func		3283135	0					
ANR	3285263	UnaryOperationExpression	* info -> fprintf_func		3283135	0					
ANR	3285264	UnaryOperator	*		3283135	0					
ANR	3285265	PtrMemberAccess	info -> fprintf_func		3283135	1					
ANR	3285266	Identifier	info		3283135	0					
ANR	3285267	Identifier	fprintf_func		3283135	1					
ANR	3285268	ArgumentList	info -> stream		3283135	1					
ANR	3285269	Argument	info -> stream		3283135	0					
ANR	3285270	PtrMemberAccess	info -> stream		3283135	0					
ANR	3285271	Identifier	info		3283135	0					
ANR	3285272	Identifier	stream		3283135	1					
ANR	3285273	Argument	"_ ( ""# internal disassembler error, unrecognised modifier (%c)"" )"		3283135	1					
ANR	3285274	CallExpression	"_ ( ""# internal disassembler error, unrecognised modifier (%c)"" )"		3283135	0					
ANR	3285275	Callee	_		3283135	0					
ANR	3285276	Identifier	_		3283135	0					
ANR	3285277	ArgumentList	"""# internal disassembler error, unrecognised modifier (%c)"""		3283135	1					
ANR	3285278	Argument	"""# internal disassembler error, unrecognised modifier (%c)"""		3283135	0					
ANR	3285279	PrimaryExpression	"""# internal disassembler error, unrecognised modifier (%c)"""		3283135	0					
ANR	3285280	Argument	type		3283135	2					
ANR	3285281	Identifier	type		3283135	0					
ANR	3285282	ExpressionStatement	abort ( )	1861:6:51950:51958	3283135	78	True				
ANR	3285283	CallExpression	abort ( )		3283135	0					
ANR	3285284	Callee	abort		3283135	0					
ANR	3285285	Identifier	abort		3283135	0					
ANR	3285286	ArgumentList			3283135	1					
ANR	3285287	ReturnType	static void		3283135	1					
ANR	3285288	Identifier	print_mips16_insn_arg		3283135	2					
ANR	3285289	ParameterList	"char type , const struct mips_opcode * op , int l , bfd_boolean use_extend , int extend , bfd_vma memaddr , struct disassemble_info * info"		3283135	3					
ANR	3285290	Parameter	char type	1356:23:39805:39813	3283135	0	True				
ANR	3285291	ParameterType	char		3283135	0					
ANR	3285292	Identifier	type		3283135	1					
ANR	3285293	Parameter	const struct mips_opcode * op	1357:9:39825:39852	3283135	1	True				
ANR	3285294	ParameterType	const struct mips_opcode *		3283135	0					
ANR	3285295	Identifier	op		3283135	1					
ANR	3285296	Parameter	int l	1358:9:39864:39868	3283135	2	True				
ANR	3285297	ParameterType	int		3283135	0					
ANR	3285298	Identifier	l		3283135	1					
ANR	3285299	Parameter	bfd_boolean use_extend	1359:9:39880:39901	3283135	3	True				
ANR	3285300	ParameterType	bfd_boolean		3283135	0					
ANR	3285301	Identifier	use_extend		3283135	1					
ANR	3285302	Parameter	int extend	1360:9:39913:39922	3283135	4	True				
ANR	3285303	ParameterType	int		3283135	0					
ANR	3285304	Identifier	extend		3283135	1					
ANR	3285305	Parameter	bfd_vma memaddr	1361:9:39934:39948	3283135	5	True				
ANR	3285306	ParameterType	bfd_vma		3283135	0					
ANR	3285307	Identifier	memaddr		3283135	1					
ANR	3285308	Parameter	struct disassemble_info * info	1362:9:39960:39988	3283135	6	True				
ANR	3285309	ParameterType	struct disassemble_info *		3283135	0					
ANR	3285310	Identifier	info		3283135	1					
ANR	3285311	CFGEntryNode	ENTRY		3283135		True				
ANR	3285312	CFGExitNode	EXIT		3283135		True				
ANR	3285313	Symbol	* smask		3283135						
ANR	3285314	Symbol	bfd_target_unknown_flavour		3283135						
ANR	3285315	Symbol	* op		3283135						
ANR	3285316	Symbol	* statics		3283135						
ANR	3285317	Symbol	dis_jsr		3283135						
ANR	3285318	Symbol	shift		3283135						
ANR	3285319	Symbol	MIPS16OP_SH_IMM5		3283135						
ANR	3285320	Symbol	MIPS16OP_SH_IMM6		3283135						
ANR	3285321	Symbol	info -> data_size		3283135						
ANR	3285322	Symbol	MIPS16OP_SH_IMM8		3283135						
ANR	3285323	Symbol	type		3283135						
ANR	3285324	Symbol	extbits		3283135						
ANR	3285325	Symbol	info -> fprintf_func		3283135						
ANR	3285326	Symbol	branch		3283135						
ANR	3285327	Symbol	MIPS16OP_SH_IMM4		3283135						
ANR	3285328	Symbol	* args		3283135						
ANR	3285329	Symbol	MIPS16OP_SH_IMM11		3283135						
ANR	3285330	Symbol	use_extend		3283135						
ANR	3285331	Symbol	MIPS16OP_MASK_IMM11		3283135						
ANR	3285332	Symbol	* MIPS16OP_SH_REGR32		3283135						
ANR	3285333	Symbol	buffer		3283135						
ANR	3285334	Symbol	info		3283135						
ANR	3285335	Symbol	pcrel		3283135						
ANR	3285336	Symbol	MIPS16OP_MASK_IMM8		3283135						
ANR	3285337	Symbol	mips16_reg_names		3283135						
ANR	3285338	Symbol	MIPS16_ALL_STATICS		3283135						
ANR	3285339	Symbol	info -> endian		3283135						
ANR	3285340	Symbol	baseaddr		3283135						
ANR	3285341	Symbol	MIPS16OP_EXTRACT_REG32R		3283135						
ANR	3285342	Symbol	signedp		3283135						
ANR	3285343	Symbol	MIPS16OP_MASK_IMM6		3283135						
ANR	3285344	Symbol	* MIPS16OP_MASK_REGR32		3283135						
ANR	3285345	Symbol	MIPS16OP_MASK_IMM5		3283135						
ANR	3285346	Symbol	statics		3283135						
ANR	3285347	Symbol	MIPS16OP_MASK_IMM4		3283135						
ANR	3285348	Symbol	extend		3283135						
ANR	3285349	Symbol	jalx		3283135						
ANR	3285350	Symbol	bfd_getl16		3283135						
ANR	3285351	Symbol	info -> read_memory_func		3283135						
ANR	3285352	Symbol	MIPS16_ALL_ARGS		3283135						
ANR	3285353	Symbol	* amask		3283135						
ANR	3285354	Symbol	status		3283135						
ANR	3285355	Symbol	bfd_getb16		3283135						
ANR	3285356	Symbol	MIPS16OP_SH_MOVE32Z		3283135						
ANR	3285357	Symbol	* * info		3283135						
ANR	3285358	Symbol	amask		3283135						
ANR	3285359	Symbol	MIPS16OP_MASK_REGR32		3283135						
ANR	3285360	Symbol	MIPS16OP_MASK_MOVE32Z		3283135						
ANR	3285361	Symbol	memaddr		3283135						
ANR	3285362	Symbol	nbits		3283135						
ANR	3285363	Symbol	info -> branch_delay_insns		3283135						
ANR	3285364	Symbol	dis_dref		3283135						
ANR	3285365	Symbol	info -> stream		3283135						
ANR	3285366	Symbol	immed		3283135						
ANR	3285367	Symbol	MIPS16OP_MASK_RZ		3283135						
ANR	3285368	Symbol	info -> target		3283135						
ANR	3285369	Symbol	MIPS16OP_MASK_RY		3283135						
ANR	3285370	Symbol	BFD_ENDIAN_BIG		3283135						
ANR	3285371	Symbol	info -> print_address_func		3283135						
ANR	3285372	Symbol	smask		3283135						
ANR	3285373	Symbol	framesz		3283135						
ANR	3285374	Symbol	extu		3283135						
ANR	3285375	Symbol	info -> insn_type		3283135						
ANR	3285376	Symbol	mips_gpr_names		3283135						
ANR	3285377	Symbol	* info -> read_memory_func		3283135						
ANR	3285378	Symbol	_		3283135						
ANR	3285379	Symbol	* mips_gpr_names		3283135						
ANR	3285380	Symbol	op		3283135						
ANR	3285381	Symbol	MIPS16OP_SH_RZ		3283135						
ANR	3285382	Symbol	MIPS16_INSN_READ_SP		3283135						
ANR	3285383	Symbol	info -> flavour		3283135						
ANR	3285384	Symbol	op -> pinfo		3283135						
ANR	3285385	Symbol	i		3283135						
ANR	3285386	Symbol	MIPS16OP_MASK_RX		3283135						
ANR	3285387	Symbol	j		3283135						
ANR	3285388	Symbol	dis_condbranch		3283135						
ANR	3285389	Symbol	nsreg		3283135						
ANR	3285390	Symbol	l		3283135						
ANR	3285391	Symbol	MIPS16OP_SH_RY		3283135						
ANR	3285392	Symbol	MIPS16OP_SH_RX		3283135						
ANR	3285393	Symbol	args		3283135						
ANR	3285394	Symbol	* i		3283135						
ANR	3285395	Symbol	* j		3283135						
ANR	3285396	Symbol	* l		3283135						
ANR	3285397	Symbol	MIPS16OP_SH_REGR32		3283135						
ANR	3285398	Symbol	MIPS16_INSN_READ_PC		3283135						
ANR	3285399	Symbol	* info		3283135						
ANR	3285400	Symbol	* MIPS16OP_EXTRACT_REG32R		3283135						
ANR	3285401	Symbol	dis_branch		3283135						
ANR	3285402	Symbol	need_comma		3283135						
ANR	3285403	Function	print_insn_mips16	1867:0:52010:55627							
ANR	3285404	FunctionDef	"print_insn_mips16 (bfd_vma memaddr , struct disassemble_info * info)"		3285403	0					
ANR	3285405	CompoundStatement		1869:0:52088:55627	3285403	0					
ANR	3285406	IdentifierDeclStatement	int status ;	1870:2:52092:52102	3285403	0	True				
ANR	3285407	IdentifierDecl	status		3285403	0					
ANR	3285408	IdentifierDeclType	int		3285403	0					
ANR	3285409	Identifier	status		3285403	1					
ANR	3285410	IdentifierDeclStatement	bfd_byte buffer [ 2 ] ;	1871:2:52106:52124	3285403	1	True				
ANR	3285411	IdentifierDecl	buffer [ 2 ]		3285403	0					
ANR	3285412	IdentifierDeclType	bfd_byte [ 2 ]		3285403	0					
ANR	3285413	Identifier	buffer		3285403	1					
ANR	3285414	PrimaryExpression	2		3285403	2					
ANR	3285415	IdentifierDeclStatement	int length ;	1872:2:52128:52138	3285403	2	True				
ANR	3285416	IdentifierDecl	length		3285403	0					
ANR	3285417	IdentifierDeclType	int		3285403	0					
ANR	3285418	Identifier	length		3285403	1					
ANR	3285419	IdentifierDeclStatement	int insn ;	1873:2:52142:52150	3285403	3	True				
ANR	3285420	IdentifierDecl	insn		3285403	0					
ANR	3285421	IdentifierDeclType	int		3285403	0					
ANR	3285422	Identifier	insn		3285403	1					
ANR	3285423	IdentifierDeclStatement	bfd_boolean use_extend ;	1874:2:52154:52176	3285403	4	True				
ANR	3285424	IdentifierDecl	use_extend		3285403	0					
ANR	3285425	IdentifierDeclType	bfd_boolean		3285403	0					
ANR	3285426	Identifier	use_extend		3285403	1					
ANR	3285427	IdentifierDeclStatement	int extend = 0 ;	1875:2:52180:52194	3285403	5	True				
ANR	3285428	IdentifierDecl	extend = 0		3285403	0					
ANR	3285429	IdentifierDeclType	int		3285403	0					
ANR	3285430	Identifier	extend		3285403	1					
ANR	3285431	AssignmentExpression	extend = 0		3285403	2		=			
ANR	3285432	Identifier	extend		3285403	0					
ANR	3285433	PrimaryExpression	0		3285403	1					
ANR	3285434	IdentifierDeclStatement	"const struct mips_opcode * op , * opend ;"	1876:2:52198:52234	3285403	6	True				
ANR	3285435	IdentifierDecl	* op		3285403	0					
ANR	3285436	IdentifierDeclType	const struct mips_opcode *		3285403	0					
ANR	3285437	Identifier	op		3285403	1					
ANR	3285438	IdentifierDecl	* opend		3285403	1					
ANR	3285439	IdentifierDeclType	const struct mips_opcode *		3285403	0					
ANR	3285440	Identifier	opend		3285403	1					
ANR	3285441	ExpressionStatement	info -> bytes_per_chunk = 2	1878:2:52239:52264	3285403	7	True				
ANR	3285442	AssignmentExpression	info -> bytes_per_chunk = 2		3285403	0		=			
ANR	3285443	PtrMemberAccess	info -> bytes_per_chunk		3285403	0					
ANR	3285444	Identifier	info		3285403	0					
ANR	3285445	Identifier	bytes_per_chunk		3285403	1					
ANR	3285446	PrimaryExpression	2		3285403	1					
ANR	3285447	ExpressionStatement	info -> display_endian = info -> endian	1879:2:52268:52303	3285403	8	True				
ANR	3285448	AssignmentExpression	info -> display_endian = info -> endian		3285403	0		=			
ANR	3285449	PtrMemberAccess	info -> display_endian		3285403	0					
ANR	3285450	Identifier	info		3285403	0					
ANR	3285451	Identifier	display_endian		3285403	1					
ANR	3285452	PtrMemberAccess	info -> endian		3285403	1					
ANR	3285453	Identifier	info		3285403	0					
ANR	3285454	Identifier	endian		3285403	1					
ANR	3285455	ExpressionStatement	info -> insn_info_valid = 1	1880:2:52307:52332	3285403	9	True				
ANR	3285456	AssignmentExpression	info -> insn_info_valid = 1		3285403	0		=			
ANR	3285457	PtrMemberAccess	info -> insn_info_valid		3285403	0					
ANR	3285458	Identifier	info		3285403	0					
ANR	3285459	Identifier	insn_info_valid		3285403	1					
ANR	3285460	PrimaryExpression	1		3285403	1					
ANR	3285461	ExpressionStatement	info -> branch_delay_insns = 0	1881:2:52336:52364	3285403	10	True				
ANR	3285462	AssignmentExpression	info -> branch_delay_insns = 0		3285403	0		=			
ANR	3285463	PtrMemberAccess	info -> branch_delay_insns		3285403	0					
ANR	3285464	Identifier	info		3285403	0					
ANR	3285465	Identifier	branch_delay_insns		3285403	1					
ANR	3285466	PrimaryExpression	0		3285403	1					
ANR	3285467	ExpressionStatement	info -> data_size = 0	1882:2:52368:52387	3285403	11	True				
ANR	3285468	AssignmentExpression	info -> data_size = 0		3285403	0		=			
ANR	3285469	PtrMemberAccess	info -> data_size		3285403	0					
ANR	3285470	Identifier	info		3285403	0					
ANR	3285471	Identifier	data_size		3285403	1					
ANR	3285472	PrimaryExpression	0		3285403	1					
ANR	3285473	ExpressionStatement	info -> insn_type = dis_nonbranch	1883:2:52391:52422	3285403	12	True				
ANR	3285474	AssignmentExpression	info -> insn_type = dis_nonbranch		3285403	0		=			
ANR	3285475	PtrMemberAccess	info -> insn_type		3285403	0					
ANR	3285476	Identifier	info		3285403	0					
ANR	3285477	Identifier	insn_type		3285403	1					
ANR	3285478	Identifier	dis_nonbranch		3285403	1					
ANR	3285479	ExpressionStatement	info -> target = 0	1884:2:52426:52442	3285403	13	True				
ANR	3285480	AssignmentExpression	info -> target = 0		3285403	0		=			
ANR	3285481	PtrMemberAccess	info -> target		3285403	0					
ANR	3285482	Identifier	info		3285403	0					
ANR	3285483	Identifier	target		3285403	1					
ANR	3285484	PrimaryExpression	0		3285403	1					
ANR	3285485	ExpressionStatement	info -> target2 = 0	1885:2:52446:52463	3285403	14	True				
ANR	3285486	AssignmentExpression	info -> target2 = 0		3285403	0		=			
ANR	3285487	PtrMemberAccess	info -> target2		3285403	0					
ANR	3285488	Identifier	info		3285403	0					
ANR	3285489	Identifier	target2		3285403	1					
ANR	3285490	PrimaryExpression	0		3285403	1					
ANR	3285491	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"	1887:2:52468:52529	3285403	15	True				
ANR	3285492	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"		3285403	0		=			
ANR	3285493	Identifier	status		3285403	0					
ANR	3285494	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"		3285403	1					
ANR	3285495	Callee	* info -> read_memory_func		3285403	0					
ANR	3285496	UnaryOperationExpression	* info -> read_memory_func		3285403	0					
ANR	3285497	UnaryOperator	*		3285403	0					
ANR	3285498	PtrMemberAccess	info -> read_memory_func		3285403	1					
ANR	3285499	Identifier	info		3285403	0					
ANR	3285500	Identifier	read_memory_func		3285403	1					
ANR	3285501	ArgumentList	memaddr		3285403	1					
ANR	3285502	Argument	memaddr		3285403	0					
ANR	3285503	Identifier	memaddr		3285403	0					
ANR	3285504	Argument	buffer		3285403	1					
ANR	3285505	Identifier	buffer		3285403	0					
ANR	3285506	Argument	2		3285403	2					
ANR	3285507	PrimaryExpression	2		3285403	0					
ANR	3285508	Argument	info		3285403	3					
ANR	3285509	Identifier	info		3285403	0					
ANR	3285510	IfStatement	if ( status != 0 )		3285403	16					
ANR	3285511	Condition	status != 0	1888:6:52537:52547	3285403	0	True				
ANR	3285512	EqualityExpression	status != 0		3285403	0		!=			
ANR	3285513	Identifier	status		3285403	0					
ANR	3285514	PrimaryExpression	0		3285403	1					
ANR	3285515	CompoundStatement		21:4:465:465	3285403	1					
ANR	3285516	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	1890:6:52562:52612	3285403	0	True				
ANR	3285517	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		3285403	0					
ANR	3285518	Callee	* info -> memory_error_func		3285403	0					
ANR	3285519	UnaryOperationExpression	* info -> memory_error_func		3285403	0					
ANR	3285520	UnaryOperator	*		3285403	0					
ANR	3285521	PtrMemberAccess	info -> memory_error_func		3285403	1					
ANR	3285522	Identifier	info		3285403	0					
ANR	3285523	Identifier	memory_error_func		3285403	1					
ANR	3285524	ArgumentList	status		3285403	1					
ANR	3285525	Argument	status		3285403	0					
ANR	3285526	Identifier	status		3285403	0					
ANR	3285527	Argument	memaddr		3285403	1					
ANR	3285528	Identifier	memaddr		3285403	0					
ANR	3285529	Argument	info		3285403	2					
ANR	3285530	Identifier	info		3285403	0					
ANR	3285531	ReturnStatement	return - 1 ;	1891:6:52620:52629	3285403	1	True				
ANR	3285532	UnaryOperationExpression	- 1		3285403	0					
ANR	3285533	UnaryOperator	-		3285403	0					
ANR	3285534	PrimaryExpression	1		3285403	1					
ANR	3285535	ExpressionStatement	length = 2	1894:2:52640:52650	3285403	17	True				
ANR	3285536	AssignmentExpression	length = 2		3285403	0		=			
ANR	3285537	Identifier	length		3285403	0					
ANR	3285538	PrimaryExpression	2		3285403	1					
ANR	3285539	IfStatement	if ( info -> endian == BFD_ENDIAN_BIG )		3285403	18					
ANR	3285540	Condition	info -> endian == BFD_ENDIAN_BIG	1896:6:52659:52688	3285403	0	True				
ANR	3285541	EqualityExpression	info -> endian == BFD_ENDIAN_BIG		3285403	0		==			
ANR	3285542	PtrMemberAccess	info -> endian		3285403	0					
ANR	3285543	Identifier	info		3285403	0					
ANR	3285544	Identifier	endian		3285403	1					
ANR	3285545	Identifier	BFD_ENDIAN_BIG		3285403	1					
ANR	3285546	CompoundStatement		28:38:602:602	3285403	1					
ANR	3285547	ExpressionStatement	insn = bfd_getb16 ( buffer )	1897:3:52696:52722	3285403	0	True				
ANR	3285548	AssignmentExpression	insn = bfd_getb16 ( buffer )		3285403	0		=			
ANR	3285549	Identifier	insn		3285403	0					
ANR	3285550	CallExpression	bfd_getb16 ( buffer )		3285403	1					
ANR	3285551	Callee	bfd_getb16		3285403	0					
ANR	3285552	Identifier	bfd_getb16		3285403	0					
ANR	3285553	ArgumentList	buffer		3285403	1					
ANR	3285554	Argument	buffer		3285403	0					
ANR	3285555	Identifier	buffer		3285403	0					
ANR	3285556	ElseStatement	else		3285403	0					
ANR	3285557	CompoundStatement		30:9:644:644	3285403	0					
ANR	3285558	ExpressionStatement	insn = bfd_getl16 ( buffer )	1899:3:52738:52764	3285403	0	True				
ANR	3285559	AssignmentExpression	insn = bfd_getl16 ( buffer )		3285403	0		=			
ANR	3285560	Identifier	insn		3285403	0					
ANR	3285561	CallExpression	bfd_getl16 ( buffer )		3285403	1					
ANR	3285562	Callee	bfd_getl16		3285403	0					
ANR	3285563	Identifier	bfd_getl16		3285403	0					
ANR	3285564	ArgumentList	buffer		3285403	1					
ANR	3285565	Argument	buffer		3285403	0					
ANR	3285566	Identifier	buffer		3285403	0					
ANR	3285567	ExpressionStatement	use_extend = FALSE	1903:2:52818:52836	3285403	19	True				
ANR	3285568	AssignmentExpression	use_extend = FALSE		3285403	0		=			
ANR	3285569	Identifier	use_extend		3285403	0					
ANR	3285570	Identifier	FALSE		3285403	1					
ANR	3285571	IfStatement	if ( ( insn & 0xf800 ) == 0xf000 )		3285403	20					
ANR	3285572	Condition	( insn & 0xf800 ) == 0xf000	1904:6:52844:52868	3285403	0	True				
ANR	3285573	EqualityExpression	( insn & 0xf800 ) == 0xf000		3285403	0		==			
ANR	3285574	BitAndExpression	insn & 0xf800		3285403	0		&			
ANR	3285575	Identifier	insn		3285403	0					
ANR	3285576	PrimaryExpression	0xf800		3285403	1					
ANR	3285577	PrimaryExpression	0xf000		3285403	1					
ANR	3285578	CompoundStatement		37:4:786:786	3285403	1					
ANR	3285579	ExpressionStatement	use_extend = TRUE	1906:6:52883:52900	3285403	0	True				
ANR	3285580	AssignmentExpression	use_extend = TRUE		3285403	0		=			
ANR	3285581	Identifier	use_extend		3285403	0					
ANR	3285582	Identifier	TRUE		3285403	1					
ANR	3285583	ExpressionStatement	extend = insn & 0x7ff	1907:6:52908:52929	3285403	1	True				
ANR	3285584	AssignmentExpression	extend = insn & 0x7ff		3285403	0		=			
ANR	3285585	Identifier	extend		3285403	0					
ANR	3285586	BitAndExpression	insn & 0x7ff		3285403	1		&			
ANR	3285587	Identifier	insn		3285403	0					
ANR	3285588	PrimaryExpression	0x7ff		3285403	1					
ANR	3285589	ExpressionStatement	memaddr += 2	1909:6:52938:52950	3285403	2	True				
ANR	3285590	AssignmentExpression	memaddr += 2		3285403	0		+=			
ANR	3285591	Identifier	memaddr		3285403	0					
ANR	3285592	PrimaryExpression	2		3285403	1					
ANR	3285593	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"	1911:6:52959:53020	3285403	3	True				
ANR	3285594	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"		3285403	0		=			
ANR	3285595	Identifier	status		3285403	0					
ANR	3285596	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"		3285403	1					
ANR	3285597	Callee	* info -> read_memory_func		3285403	0					
ANR	3285598	UnaryOperationExpression	* info -> read_memory_func		3285403	0					
ANR	3285599	UnaryOperator	*		3285403	0					
ANR	3285600	PtrMemberAccess	info -> read_memory_func		3285403	1					
ANR	3285601	Identifier	info		3285403	0					
ANR	3285602	Identifier	read_memory_func		3285403	1					
ANR	3285603	ArgumentList	memaddr		3285403	1					
ANR	3285604	Argument	memaddr		3285403	0					
ANR	3285605	Identifier	memaddr		3285403	0					
ANR	3285606	Argument	buffer		3285403	1					
ANR	3285607	Identifier	buffer		3285403	0					
ANR	3285608	Argument	2		3285403	2					
ANR	3285609	PrimaryExpression	2		3285403	0					
ANR	3285610	Argument	info		3285403	3					
ANR	3285611	Identifier	info		3285403	0					
ANR	3285612	IfStatement	if ( status != 0 )		3285403	4					
ANR	3285613	Condition	status != 0	1912:10:53032:53042	3285403	0	True				
ANR	3285614	EqualityExpression	status != 0		3285403	0		!=			
ANR	3285615	Identifier	status		3285403	0					
ANR	3285616	PrimaryExpression	0		3285403	1					
ANR	3285617	CompoundStatement		45:1:957:957	3285403	1					
ANR	3285618	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""extend 0x%x"" , ( unsigned int ) extend )"	1914:3:53051:53130	3285403	0	True				
ANR	3285619	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""extend 0x%x"" , ( unsigned int ) extend )"		3285403	0					
ANR	3285620	Callee	* info -> fprintf_func		3285403	0					
ANR	3285621	UnaryOperationExpression	* info -> fprintf_func		3285403	0					
ANR	3285622	UnaryOperator	*		3285403	0					
ANR	3285623	PtrMemberAccess	info -> fprintf_func		3285403	1					
ANR	3285624	Identifier	info		3285403	0					
ANR	3285625	Identifier	fprintf_func		3285403	1					
ANR	3285626	ArgumentList	info -> stream		3285403	1					
ANR	3285627	Argument	info -> stream		3285403	0					
ANR	3285628	PtrMemberAccess	info -> stream		3285403	0					
ANR	3285629	Identifier	info		3285403	0					
ANR	3285630	Identifier	stream		3285403	1					
ANR	3285631	Argument	"""extend 0x%x"""		3285403	1					
ANR	3285632	PrimaryExpression	"""extend 0x%x"""		3285403	0					
ANR	3285633	Argument	( unsigned int ) extend		3285403	2					
ANR	3285634	CastExpression	( unsigned int ) extend		3285403	0					
ANR	3285635	CastTarget	unsigned int		3285403	0					
ANR	3285636	Identifier	extend		3285403	1					
ANR	3285637	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	1916:3:53135:53185	3285403	1	True				
ANR	3285638	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		3285403	0					
ANR	3285639	Callee	* info -> memory_error_func		3285403	0					
ANR	3285640	UnaryOperationExpression	* info -> memory_error_func		3285403	0					
ANR	3285641	UnaryOperator	*		3285403	0					
ANR	3285642	PtrMemberAccess	info -> memory_error_func		3285403	1					
ANR	3285643	Identifier	info		3285403	0					
ANR	3285644	Identifier	memory_error_func		3285403	1					
ANR	3285645	ArgumentList	status		3285403	1					
ANR	3285646	Argument	status		3285403	0					
ANR	3285647	Identifier	status		3285403	0					
ANR	3285648	Argument	memaddr		3285403	1					
ANR	3285649	Identifier	memaddr		3285403	0					
ANR	3285650	Argument	info		3285403	2					
ANR	3285651	Identifier	info		3285403	0					
ANR	3285652	ReturnStatement	return - 1 ;	1917:3:53190:53199	3285403	2	True				
ANR	3285653	UnaryOperationExpression	- 1		3285403	0					
ANR	3285654	UnaryOperator	-		3285403	0					
ANR	3285655	PrimaryExpression	1		3285403	1					
ANR	3285656	IfStatement	if ( info -> endian == BFD_ENDIAN_BIG )		3285403	5					
ANR	3285657	Condition	info -> endian == BFD_ENDIAN_BIG	1920:5:53210:53239	3285403	0	True				
ANR	3285658	EqualityExpression	info -> endian == BFD_ENDIAN_BIG		3285403	0		==			
ANR	3285659	PtrMemberAccess	info -> endian		3285403	0					
ANR	3285660	Identifier	info		3285403	0					
ANR	3285661	Identifier	endian		3285403	1					
ANR	3285662	Identifier	BFD_ENDIAN_BIG		3285403	1					
ANR	3285663	CompoundStatement		52:37:1153:1153	3285403	1					
ANR	3285664	ExpressionStatement	insn = bfd_getb16 ( buffer )	1921:2:53246:53272	3285403	0	True				
ANR	3285665	AssignmentExpression	insn = bfd_getb16 ( buffer )		3285403	0		=			
ANR	3285666	Identifier	insn		3285403	0					
ANR	3285667	CallExpression	bfd_getb16 ( buffer )		3285403	1					
ANR	3285668	Callee	bfd_getb16		3285403	0					
ANR	3285669	Identifier	bfd_getb16		3285403	0					
ANR	3285670	ArgumentList	buffer		3285403	1					
ANR	3285671	Argument	buffer		3285403	0					
ANR	3285672	Identifier	buffer		3285403	0					
ANR	3285673	ElseStatement	else		3285403	0					
ANR	3285674	CompoundStatement		54:8:1193:1193	3285403	0					
ANR	3285675	ExpressionStatement	insn = bfd_getl16 ( buffer )	1923:2:53286:53312	3285403	0	True				
ANR	3285676	AssignmentExpression	insn = bfd_getl16 ( buffer )		3285403	0		=			
ANR	3285677	Identifier	insn		3285403	0					
ANR	3285678	CallExpression	bfd_getl16 ( buffer )		3285403	1					
ANR	3285679	Callee	bfd_getl16		3285403	0					
ANR	3285680	Identifier	bfd_getl16		3285403	0					
ANR	3285681	ArgumentList	buffer		3285403	1					
ANR	3285682	Argument	buffer		3285403	0					
ANR	3285683	Identifier	buffer		3285403	0					
ANR	3285684	IfStatement	if ( ( insn & 0xf800 ) == 0xf000 )		3285403	6					
ANR	3285685	Condition	( insn & 0xf800 ) == 0xf000	1927:5:53388:53412	3285403	0	True				
ANR	3285686	EqualityExpression	( insn & 0xf800 ) == 0xf000		3285403	0		==			
ANR	3285687	BitAndExpression	insn & 0xf800		3285403	0		&			
ANR	3285688	Identifier	insn		3285403	0					
ANR	3285689	PrimaryExpression	0xf800		3285403	1					
ANR	3285690	PrimaryExpression	0xf000		3285403	1					
ANR	3285691	CompoundStatement		59:32:1326:1326	3285403	1					
ANR	3285692	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""extend 0x%x"" , ( unsigned int ) extend )"	1928:2:53419:53495	3285403	0	True				
ANR	3285693	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""extend 0x%x"" , ( unsigned int ) extend )"		3285403	0					
ANR	3285694	Callee	* info -> fprintf_func		3285403	0					
ANR	3285695	UnaryOperationExpression	* info -> fprintf_func		3285403	0					
ANR	3285696	UnaryOperator	*		3285403	0					
ANR	3285697	PtrMemberAccess	info -> fprintf_func		3285403	1					
ANR	3285698	Identifier	info		3285403	0					
ANR	3285699	Identifier	fprintf_func		3285403	1					
ANR	3285700	ArgumentList	info -> stream		3285403	1					
ANR	3285701	Argument	info -> stream		3285403	0					
ANR	3285702	PtrMemberAccess	info -> stream		3285403	0					
ANR	3285703	Identifier	info		3285403	0					
ANR	3285704	Identifier	stream		3285403	1					
ANR	3285705	Argument	"""extend 0x%x"""		3285403	1					
ANR	3285706	PrimaryExpression	"""extend 0x%x"""		3285403	0					
ANR	3285707	Argument	( unsigned int ) extend		3285403	2					
ANR	3285708	CastExpression	( unsigned int ) extend		3285403	0					
ANR	3285709	CastTarget	unsigned int		3285403	0					
ANR	3285710	Identifier	extend		3285403	1					
ANR	3285711	ExpressionStatement	info -> insn_type = dis_noninsn	1930:2:53499:53528	3285403	1	True				
ANR	3285712	AssignmentExpression	info -> insn_type = dis_noninsn		3285403	0		=			
ANR	3285713	PtrMemberAccess	info -> insn_type		3285403	0					
ANR	3285714	Identifier	info		3285403	0					
ANR	3285715	Identifier	insn_type		3285403	1					
ANR	3285716	Identifier	dis_noninsn		3285403	1					
ANR	3285717	ReturnStatement	return length ;	1931:2:53532:53545	3285403	2	True				
ANR	3285718	Identifier	length		3285403	0					
ANR	3285719	ExpressionStatement	length += 2	1934:6:53557:53568	3285403	7	True				
ANR	3285720	AssignmentExpression	length += 2		3285403	0		+=			
ANR	3285721	Identifier	length		3285403	0					
ANR	3285722	PrimaryExpression	2		3285403	1					
ANR	3285723	ExpressionStatement	opend = mips16_opcodes + bfd_mips16_num_opcodes	1939:2:53655:53702	3285403	21	True				
ANR	3285724	AssignmentExpression	opend = mips16_opcodes + bfd_mips16_num_opcodes		3285403	0		=			
ANR	3285725	Identifier	opend		3285403	0					
ANR	3285726	AdditiveExpression	mips16_opcodes + bfd_mips16_num_opcodes		3285403	1		+			
ANR	3285727	Identifier	mips16_opcodes		3285403	0					
ANR	3285728	Identifier	bfd_mips16_num_opcodes		3285403	1					
ANR	3285729	ForStatement	for ( op = mips16_opcodes ; op < opend ; op ++ )		3285403	22					
ANR	3285730	ForInit	op = mips16_opcodes ;	1940:7:53711:53730	3285403	0	True				
ANR	3285731	AssignmentExpression	op = mips16_opcodes		3285403	0		=			
ANR	3285732	Identifier	op		3285403	0					
ANR	3285733	Identifier	mips16_opcodes		3285403	1					
ANR	3285734	Condition	op < opend	1940:28:53732:53741	3285403	1	True				
ANR	3285735	RelationalExpression	op < opend		3285403	0		<			
ANR	3285736	Identifier	op		3285403	0					
ANR	3285737	Identifier	opend		3285403	1					
ANR	3285738	PostIncDecOperationExpression	op ++	1940:40:53744:53747	3285403	2	True				
ANR	3285739	Identifier	op		3285403	0					
ANR	3285740	IncDec	++		3285403	1					
ANR	3285741	CompoundStatement		73:4:1665:1665	3285403	3					
ANR	3285742	IfStatement	if ( op -> pinfo != INSN_MACRO && ! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( insn & op -> mask ) == op -> match )		3285403	0					
ANR	3285743	Condition	op -> pinfo != INSN_MACRO && ! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( insn & op -> mask ) == op -> match	1942:10:53766:53875	3285403	0	True				
ANR	3285744	AndExpression	op -> pinfo != INSN_MACRO && ! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( insn & op -> mask ) == op -> match		3285403	0		&&			
ANR	3285745	EqualityExpression	op -> pinfo != INSN_MACRO		3285403	0		!=			
ANR	3285746	PtrMemberAccess	op -> pinfo		3285403	0					
ANR	3285747	Identifier	op		3285403	0					
ANR	3285748	Identifier	pinfo		3285403	1					
ANR	3285749	Identifier	INSN_MACRO		3285403	1					
ANR	3285750	AndExpression	! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) ) && ( insn & op -> mask ) == op -> match		3285403	1		&&			
ANR	3285751	UnaryOperationExpression	! ( no_aliases && ( op -> pinfo2 & INSN2_ALIAS ) )		3285403	0					
ANR	3285752	UnaryOperator	!		3285403	0					
ANR	3285753	AndExpression	no_aliases && ( op -> pinfo2 & INSN2_ALIAS )		3285403	1		&&			
ANR	3285754	Identifier	no_aliases		3285403	0					
ANR	3285755	BitAndExpression	op -> pinfo2 & INSN2_ALIAS		3285403	1		&			
ANR	3285756	PtrMemberAccess	op -> pinfo2		3285403	0					
ANR	3285757	Identifier	op		3285403	0					
ANR	3285758	Identifier	pinfo2		3285403	1					
ANR	3285759	Identifier	INSN2_ALIAS		3285403	1					
ANR	3285760	EqualityExpression	( insn & op -> mask ) == op -> match		3285403	1		==			
ANR	3285761	BitAndExpression	insn & op -> mask		3285403	0		&			
ANR	3285762	Identifier	insn		3285403	0					
ANR	3285763	PtrMemberAccess	op -> mask		3285403	1					
ANR	3285764	Identifier	op		3285403	0					
ANR	3285765	Identifier	mask		3285403	1					
ANR	3285766	PtrMemberAccess	op -> match		3285403	1					
ANR	3285767	Identifier	op		3285403	0					
ANR	3285768	Identifier	match		3285403	1					
ANR	3285769	CompoundStatement		78:3:1795:1808	3285403	1					
ANR	3285770	IdentifierDeclStatement	const char * s ;	1946:3:53884:53897	3285403	0	True				
ANR	3285771	IdentifierDecl	* s		3285403	0					
ANR	3285772	IdentifierDeclType	const char *		3285403	0					
ANR	3285773	Identifier	s		3285403	1					
ANR	3285774	IfStatement	"if ( strchr ( op -> args , 'a' ) != NULL )"		3285403	1					
ANR	3285775	Condition	"strchr ( op -> args , 'a' ) != NULL"	1948:7:53907:53936	3285403	0	True				
ANR	3285776	EqualityExpression	"strchr ( op -> args , 'a' ) != NULL"		3285403	0		!=			
ANR	3285777	CallExpression	"strchr ( op -> args , 'a' )"		3285403	0					
ANR	3285778	Callee	strchr		3285403	0					
ANR	3285779	Identifier	strchr		3285403	0					
ANR	3285780	ArgumentList	op -> args		3285403	1					
ANR	3285781	Argument	op -> args		3285403	0					
ANR	3285782	PtrMemberAccess	op -> args		3285403	0					
ANR	3285783	Identifier	op		3285403	0					
ANR	3285784	Identifier	args		3285403	1					
ANR	3285785	Argument	'a'		3285403	1					
ANR	3285786	PrimaryExpression	'a'		3285403	0					
ANR	3285787	Identifier	NULL		3285403	1					
ANR	3285788	CompoundStatement		81:5:1855:1855	3285403	1					
ANR	3285789	IfStatement	if ( use_extend )		3285403	0					
ANR	3285790	Condition	use_extend	1950:11:53957:53966	3285403	0	True				
ANR	3285791	Identifier	use_extend		3285403	0					
ANR	3285792	CompoundStatement		83:2:1882:1882	3285403	1					
ANR	3285793	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""extend 0x%x"" , ( unsigned int ) extend )"	1952:4:53977:54057	3285403	0	True				
ANR	3285794	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""extend 0x%x"" , ( unsigned int ) extend )"		3285403	0					
ANR	3285795	Callee	* info -> fprintf_func		3285403	0					
ANR	3285796	UnaryOperationExpression	* info -> fprintf_func		3285403	0					
ANR	3285797	UnaryOperator	*		3285403	0					
ANR	3285798	PtrMemberAccess	info -> fprintf_func		3285403	1					
ANR	3285799	Identifier	info		3285403	0					
ANR	3285800	Identifier	fprintf_func		3285403	1					
ANR	3285801	ArgumentList	info -> stream		3285403	1					
ANR	3285802	Argument	info -> stream		3285403	0					
ANR	3285803	PtrMemberAccess	info -> stream		3285403	0					
ANR	3285804	Identifier	info		3285403	0					
ANR	3285805	Identifier	stream		3285403	1					
ANR	3285806	Argument	"""extend 0x%x"""		3285403	1					
ANR	3285807	PrimaryExpression	"""extend 0x%x"""		3285403	0					
ANR	3285808	Argument	( unsigned int ) extend		3285403	2					
ANR	3285809	CastExpression	( unsigned int ) extend		3285403	0					
ANR	3285810	CastTarget	unsigned int		3285403	0					
ANR	3285811	Identifier	extend		3285403	1					
ANR	3285812	ExpressionStatement	info -> insn_type = dis_noninsn	1954:4:54063:54092	3285403	1	True				
ANR	3285813	AssignmentExpression	info -> insn_type = dis_noninsn		3285403	0		=			
ANR	3285814	PtrMemberAccess	info -> insn_type		3285403	0					
ANR	3285815	Identifier	info		3285403	0					
ANR	3285816	Identifier	insn_type		3285403	1					
ANR	3285817	Identifier	dis_noninsn		3285403	1					
ANR	3285818	ReturnStatement	return length - 2 ;	1955:4:54098:54115	3285403	2	True				
ANR	3285819	AdditiveExpression	length - 2		3285403	0		-			
ANR	3285820	Identifier	length		3285403	0					
ANR	3285821	PrimaryExpression	2		3285403	1					
ANR	3285822	ExpressionStatement	use_extend = FALSE	1958:7:54129:54147	3285403	1	True				
ANR	3285823	AssignmentExpression	use_extend = FALSE		3285403	0		=			
ANR	3285824	Identifier	use_extend		3285403	0					
ANR	3285825	Identifier	FALSE		3285403	1					
ANR	3285826	ExpressionStatement	memaddr += 2	1960:7:54157:54169	3285403	2	True				
ANR	3285827	AssignmentExpression	memaddr += 2		3285403	0		+=			
ANR	3285828	Identifier	memaddr		3285403	0					
ANR	3285829	PrimaryExpression	2		3285403	1					
ANR	3285830	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"	1962:7:54179:54248	3285403	3	True				
ANR	3285831	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"		3285403	0		=			
ANR	3285832	Identifier	status		3285403	0					
ANR	3285833	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , 2 , info )"		3285403	1					
ANR	3285834	Callee	* info -> read_memory_func		3285403	0					
ANR	3285835	UnaryOperationExpression	* info -> read_memory_func		3285403	0					
ANR	3285836	UnaryOperator	*		3285403	0					
ANR	3285837	PtrMemberAccess	info -> read_memory_func		3285403	1					
ANR	3285838	Identifier	info		3285403	0					
ANR	3285839	Identifier	read_memory_func		3285403	1					
ANR	3285840	ArgumentList	memaddr		3285403	1					
ANR	3285841	Argument	memaddr		3285403	0					
ANR	3285842	Identifier	memaddr		3285403	0					
ANR	3285843	Argument	buffer		3285403	1					
ANR	3285844	Identifier	buffer		3285403	0					
ANR	3285845	Argument	2		3285403	2					
ANR	3285846	PrimaryExpression	2		3285403	0					
ANR	3285847	Argument	info		3285403	3					
ANR	3285848	Identifier	info		3285403	0					
ANR	3285849	IfStatement	if ( status == 0 )		3285403	4					
ANR	3285850	Condition	status == 0	1964:11:54261:54271	3285403	0	True				
ANR	3285851	EqualityExpression	status == 0		3285403	0		==			
ANR	3285852	Identifier	status		3285403	0					
ANR	3285853	PrimaryExpression	0		3285403	1					
ANR	3285854	CompoundStatement		97:2:2187:2187	3285403	1					
ANR	3285855	ExpressionStatement	use_extend = TRUE	1966:4:54282:54299	3285403	0	True				
ANR	3285856	AssignmentExpression	use_extend = TRUE		3285403	0		=			
ANR	3285857	Identifier	use_extend		3285403	0					
ANR	3285858	Identifier	TRUE		3285403	1					
ANR	3285859	IfStatement	if ( info -> endian == BFD_ENDIAN_BIG )		3285403	1					
ANR	3285860	Condition	info -> endian == BFD_ENDIAN_BIG	1967:8:54309:54338	3285403	0	True				
ANR	3285861	EqualityExpression	info -> endian == BFD_ENDIAN_BIG		3285403	0		==			
ANR	3285862	PtrMemberAccess	info -> endian		3285403	0					
ANR	3285863	Identifier	info		3285403	0					
ANR	3285864	Identifier	endian		3285403	1					
ANR	3285865	Identifier	BFD_ENDIAN_BIG		3285403	1					
ANR	3285866	CompoundStatement		99:40:2252:2252	3285403	1					
ANR	3285867	ExpressionStatement	extend = bfd_getb16 ( buffer )	1968:5:54348:54376	3285403	0	True				
ANR	3285868	AssignmentExpression	extend = bfd_getb16 ( buffer )		3285403	0		=			
ANR	3285869	Identifier	extend		3285403	0					
ANR	3285870	CallExpression	bfd_getb16 ( buffer )		3285403	1					
ANR	3285871	Callee	bfd_getb16		3285403	0					
ANR	3285872	Identifier	bfd_getb16		3285403	0					
ANR	3285873	ArgumentList	buffer		3285403	1					
ANR	3285874	Argument	buffer		3285403	0					
ANR	3285875	Identifier	buffer		3285403	0					
ANR	3285876	ElseStatement	else		3285403	0					
ANR	3285877	CompoundStatement		101:11:2300:2300	3285403	0					
ANR	3285878	ExpressionStatement	extend = bfd_getl16 ( buffer )	1970:5:54396:54424	3285403	0	True				
ANR	3285879	AssignmentExpression	extend = bfd_getl16 ( buffer )		3285403	0		=			
ANR	3285880	Identifier	extend		3285403	0					
ANR	3285881	CallExpression	bfd_getl16 ( buffer )		3285403	1					
ANR	3285882	Callee	bfd_getl16		3285403	0					
ANR	3285883	Identifier	bfd_getl16		3285403	0					
ANR	3285884	ArgumentList	buffer		3285403	1					
ANR	3285885	Argument	buffer		3285403	0					
ANR	3285886	Identifier	buffer		3285403	0					
ANR	3285887	ExpressionStatement	length += 2	1972:4:54436:54447	3285403	2	True				
ANR	3285888	AssignmentExpression	length += 2		3285403	0		+=			
ANR	3285889	Identifier	length		3285403	0					
ANR	3285890	PrimaryExpression	2		3285403	1					
ANR	3285891	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"	1976:3:54464:54516	3285403	2	True				
ANR	3285892	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , op -> name )"		3285403	0					
ANR	3285893	Callee	* info -> fprintf_func		3285403	0					
ANR	3285894	UnaryOperationExpression	* info -> fprintf_func		3285403	0					
ANR	3285895	UnaryOperator	*		3285403	0					
ANR	3285896	PtrMemberAccess	info -> fprintf_func		3285403	1					
ANR	3285897	Identifier	info		3285403	0					
ANR	3285898	Identifier	fprintf_func		3285403	1					
ANR	3285899	ArgumentList	info -> stream		3285403	1					
ANR	3285900	Argument	info -> stream		3285403	0					
ANR	3285901	PtrMemberAccess	info -> stream		3285403	0					
ANR	3285902	Identifier	info		3285403	0					
ANR	3285903	Identifier	stream		3285403	1					
ANR	3285904	Argument	"""%s"""		3285403	1					
ANR	3285905	PrimaryExpression	"""%s"""		3285403	0					
ANR	3285906	Argument	op -> name		3285403	2					
ANR	3285907	PtrMemberAccess	op -> name		3285403	0					
ANR	3285908	Identifier	op		3285403	0					
ANR	3285909	Identifier	name		3285403	1					
ANR	3285910	IfStatement	if ( op -> args [ 0 ] != '\\0' )		3285403	3					
ANR	3285911	Condition	op -> args [ 0 ] != '\\0'	1977:7:54525:54543	3285403	0	True				
ANR	3285912	EqualityExpression	op -> args [ 0 ] != '\\0'		3285403	0		!=			
ANR	3285913	ArrayIndexing	op -> args [ 0 ]		3285403	0					
ANR	3285914	PtrMemberAccess	op -> args		3285403	0					
ANR	3285915	Identifier	op		3285403	0					
ANR	3285916	Identifier	args		3285403	1					
ANR	3285917	PrimaryExpression	0		3285403	1					
ANR	3285918	PrimaryExpression	'\\0'		3285403	1					
ANR	3285919	CompoundStatement		109:28:2457:2457	3285403	1					
ANR	3285920	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "" "" )"	1978:4:54552:54593	3285403	0	True				
ANR	3285921	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "" "" )"		3285403	0					
ANR	3285922	Callee	* info -> fprintf_func		3285403	0					
ANR	3285923	UnaryOperationExpression	* info -> fprintf_func		3285403	0					
ANR	3285924	UnaryOperator	*		3285403	0					
ANR	3285925	PtrMemberAccess	info -> fprintf_func		3285403	1					
ANR	3285926	Identifier	info		3285403	0					
ANR	3285927	Identifier	fprintf_func		3285403	1					
ANR	3285928	ArgumentList	info -> stream		3285403	1					
ANR	3285929	Argument	info -> stream		3285403	0					
ANR	3285930	PtrMemberAccess	info -> stream		3285403	0					
ANR	3285931	Identifier	info		3285403	0					
ANR	3285932	Identifier	stream		3285403	1					
ANR	3285933	Argument	""" """		3285403	1					
ANR	3285934	PrimaryExpression	""" """		3285403	0					
ANR	3285935	ForStatement	for ( s = op -> args ; * s != '\\0' ; s ++ )		3285403	4					
ANR	3285936	ForInit	s = op -> args ;	1981:8:54609:54621	3285403	0	True				
ANR	3285937	AssignmentExpression	s = op -> args		3285403	0		=			
ANR	3285938	Identifier	s		3285403	0					
ANR	3285939	PtrMemberAccess	op -> args		3285403	1					
ANR	3285940	Identifier	op		3285403	0					
ANR	3285941	Identifier	args		3285403	1					
ANR	3285942	Condition	* s != '\\0'	1981:22:54623:54632	3285403	1	True				
ANR	3285943	EqualityExpression	* s != '\\0'		3285403	0		!=			
ANR	3285944	UnaryOperationExpression	* s		3285403	0					
ANR	3285945	UnaryOperator	*		3285403	0					
ANR	3285946	Identifier	s		3285403	1					
ANR	3285947	PrimaryExpression	'\\0'		3285403	1					
ANR	3285948	PostIncDecOperationExpression	s ++	1981:34:54635:54637	3285403	2	True				
ANR	3285949	Identifier	s		3285403	0					
ANR	3285950	IncDec	++		3285403	1					
ANR	3285951	CompoundStatement		114:5:2556:2556	3285403	3					
ANR	3285952	IfStatement	"if ( * s == ',' && s [ 1 ] == 'w' && ( ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) == ( ( insn >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) ) )"		3285403	0					
ANR	3285953	Condition	"* s == ',' && s [ 1 ] == 'w' && ( ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) == ( ( insn >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) )"	1983:11:54658:54797	3285403	0	True				
ANR	3285954	AndExpression	"* s == ',' && s [ 1 ] == 'w' && ( ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) == ( ( insn >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) )"		3285403	0		&&			
ANR	3285955	EqualityExpression	"* s == ','"		3285403	0		==			
ANR	3285956	UnaryOperationExpression	* s		3285403	0					
ANR	3285957	UnaryOperator	*		3285403	0					
ANR	3285958	Identifier	s		3285403	1					
ANR	3285959	PrimaryExpression	"','"		3285403	1					
ANR	3285960	AndExpression	s [ 1 ] == 'w' && ( ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) == ( ( insn >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY ) )		3285403	1		&&			
ANR	3285961	EqualityExpression	s [ 1 ] == 'w'		3285403	0		==			
ANR	3285962	ArrayIndexing	s [ 1 ]		3285403	0					
ANR	3285963	Identifier	s		3285403	0					
ANR	3285964	PrimaryExpression	1		3285403	1					
ANR	3285965	PrimaryExpression	'w'		3285403	1					
ANR	3285966	EqualityExpression	( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) == ( ( insn >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY )		3285403	1		==			
ANR	3285967	BitAndExpression	( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3285403	0		&			
ANR	3285968	ShiftExpression	insn >> MIPS16OP_SH_RX		3285403	0		>>			
ANR	3285969	Identifier	insn		3285403	0					
ANR	3285970	Identifier	MIPS16OP_SH_RX		3285403	1					
ANR	3285971	Identifier	MIPS16OP_MASK_RX		3285403	1					
ANR	3285972	BitAndExpression	( insn >> MIPS16OP_SH_RY ) & MIPS16OP_MASK_RY		3285403	1		&			
ANR	3285973	ShiftExpression	insn >> MIPS16OP_SH_RY		3285403	0		>>			
ANR	3285974	Identifier	insn		3285403	0					
ANR	3285975	Identifier	MIPS16OP_SH_RY		3285403	1					
ANR	3285976	Identifier	MIPS16OP_MASK_RY		3285403	1					
ANR	3285977	CompoundStatement		119:2:2713:2713	3285403	1					
ANR	3285978	ExpressionStatement	++ s	1989:4:54852:54855	3285403	0	True				
ANR	3285979	UnaryExpression	++ s		3285403	0					
ANR	3285980	IncDec	++		3285403	0					
ANR	3285981	Identifier	s		3285403	1					
ANR	3285982	ContinueStatement	continue ;	1990:4:54861:54869	3285403	1	True				
ANR	3285983	IfStatement	"if ( * s == ',' && s [ 1 ] == 'v' && ( ( ( insn >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) == ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) ) )"		3285403	1					
ANR	3285984	Condition	"* s == ',' && s [ 1 ] == 'v' && ( ( ( insn >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) == ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) )"	1992:11:54886:55025	3285403	0	True				
ANR	3285985	AndExpression	"* s == ',' && s [ 1 ] == 'v' && ( ( ( insn >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) == ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) )"		3285403	0		&&			
ANR	3285986	EqualityExpression	"* s == ','"		3285403	0		==			
ANR	3285987	UnaryOperationExpression	* s		3285403	0					
ANR	3285988	UnaryOperator	*		3285403	0					
ANR	3285989	Identifier	s		3285403	1					
ANR	3285990	PrimaryExpression	"','"		3285403	1					
ANR	3285991	AndExpression	s [ 1 ] == 'v' && ( ( ( insn >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) == ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX ) )		3285403	1		&&			
ANR	3285992	EqualityExpression	s [ 1 ] == 'v'		3285403	0		==			
ANR	3285993	ArrayIndexing	s [ 1 ]		3285403	0					
ANR	3285994	Identifier	s		3285403	0					
ANR	3285995	PrimaryExpression	1		3285403	1					
ANR	3285996	PrimaryExpression	'v'		3285403	1					
ANR	3285997	EqualityExpression	( ( insn >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ ) == ( ( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX )		3285403	1		==			
ANR	3285998	BitAndExpression	( insn >> MIPS16OP_SH_RZ ) & MIPS16OP_MASK_RZ		3285403	0		&			
ANR	3285999	ShiftExpression	insn >> MIPS16OP_SH_RZ		3285403	0		>>			
ANR	3286000	Identifier	insn		3285403	0					
ANR	3286001	Identifier	MIPS16OP_SH_RZ		3285403	1					
ANR	3286002	Identifier	MIPS16OP_MASK_RZ		3285403	1					
ANR	3286003	BitAndExpression	( insn >> MIPS16OP_SH_RX ) & MIPS16OP_MASK_RX		3285403	1		&			
ANR	3286004	ShiftExpression	insn >> MIPS16OP_SH_RX		3285403	0		>>			
ANR	3286005	Identifier	insn		3285403	0					
ANR	3286006	Identifier	MIPS16OP_SH_RX		3285403	1					
ANR	3286007	Identifier	MIPS16OP_MASK_RX		3285403	1					
ANR	3286008	CompoundStatement		128:2:2941:2941	3285403	1					
ANR	3286009	ExpressionStatement	++ s	1998:4:55080:55083	3285403	0	True				
ANR	3286010	UnaryExpression	++ s		3285403	0					
ANR	3286011	IncDec	++		3285403	0					
ANR	3286012	Identifier	s		3285403	1					
ANR	3286013	ContinueStatement	continue ;	1999:4:55089:55097	3285403	1	True				
ANR	3286014	ExpressionStatement	"print_mips16_insn_arg ( * s , op , insn , use_extend , extend , memaddr , info )"	2001:7:55110:55190	3285403	2	True				
ANR	3286015	CallExpression	"print_mips16_insn_arg ( * s , op , insn , use_extend , extend , memaddr , info )"		3285403	0					
ANR	3286016	Callee	print_mips16_insn_arg		3285403	0					
ANR	3286017	Identifier	print_mips16_insn_arg		3285403	0					
ANR	3286018	ArgumentList	* s		3285403	1					
ANR	3286019	Argument	* s		3285403	0					
ANR	3286020	UnaryOperationExpression	* s		3285403	0					
ANR	3286021	UnaryOperator	*		3285403	0					
ANR	3286022	Identifier	s		3285403	1					
ANR	3286023	Argument	op		3285403	1					
ANR	3286024	Identifier	op		3285403	0					
ANR	3286025	Argument	insn		3285403	2					
ANR	3286026	Identifier	insn		3285403	0					
ANR	3286027	Argument	use_extend		3285403	3					
ANR	3286028	Identifier	use_extend		3285403	0					
ANR	3286029	Argument	extend		3285403	4					
ANR	3286030	Identifier	extend		3285403	0					
ANR	3286031	Argument	memaddr		3285403	5					
ANR	3286032	Identifier	memaddr		3285403	0					
ANR	3286033	Argument	info		3285403	6					
ANR	3286034	Identifier	info		3285403	0					
ANR	3286035	IfStatement	if ( ( op -> pinfo & INSN_UNCOND_BRANCH_DELAY ) != 0 )		3285403	5					
ANR	3286036	Condition	( op -> pinfo & INSN_UNCOND_BRANCH_DELAY ) != 0	2005:7:55207:55249	3285403	0	True				
ANR	3286037	EqualityExpression	( op -> pinfo & INSN_UNCOND_BRANCH_DELAY ) != 0		3285403	0		!=			
ANR	3286038	BitAndExpression	op -> pinfo & INSN_UNCOND_BRANCH_DELAY		3285403	0		&			
ANR	3286039	PtrMemberAccess	op -> pinfo		3285403	0					
ANR	3286040	Identifier	op		3285403	0					
ANR	3286041	Identifier	pinfo		3285403	1					
ANR	3286042	Identifier	INSN_UNCOND_BRANCH_DELAY		3285403	1					
ANR	3286043	PrimaryExpression	0		3285403	1					
ANR	3286044	CompoundStatement		138:5:3168:3168	3285403	1					
ANR	3286045	ExpressionStatement	info -> branch_delay_insns = 1	2007:7:55266:55294	3285403	0	True				
ANR	3286046	AssignmentExpression	info -> branch_delay_insns = 1		3285403	0		=			
ANR	3286047	PtrMemberAccess	info -> branch_delay_insns		3285403	0					
ANR	3286048	Identifier	info		3285403	0					
ANR	3286049	Identifier	branch_delay_insns		3285403	1					
ANR	3286050	PrimaryExpression	1		3285403	1					
ANR	3286051	IfStatement	if ( info -> insn_type != dis_jsr )		3285403	1					
ANR	3286052	Condition	info -> insn_type != dis_jsr	2008:11:55307:55332	3285403	0	True				
ANR	3286053	EqualityExpression	info -> insn_type != dis_jsr		3285403	0		!=			
ANR	3286054	PtrMemberAccess	info -> insn_type		3285403	0					
ANR	3286055	Identifier	info		3285403	0					
ANR	3286056	Identifier	insn_type		3285403	1					
ANR	3286057	Identifier	dis_jsr		3285403	1					
ANR	3286058	CompoundStatement		140:39:3246:3246	3285403	1					
ANR	3286059	ExpressionStatement	info -> insn_type = dis_branch	2009:8:55345:55373	3285403	0	True				
ANR	3286060	AssignmentExpression	info -> insn_type = dis_branch		3285403	0		=			
ANR	3286061	PtrMemberAccess	info -> insn_type		3285403	0					
ANR	3286062	Identifier	info		3285403	0					
ANR	3286063	Identifier	insn_type		3285403	1					
ANR	3286064	Identifier	dis_branch		3285403	1					
ANR	3286065	ReturnStatement	return length ;	2013:3:55395:55408	3285403	6	True				
ANR	3286066	Identifier	length		3285403	0					
ANR	3286067	IfStatement	if ( use_extend )		3285403	23					
ANR	3286068	Condition	use_extend	2017:8:55428:55437	3285403	0	True				
ANR	3286069	Identifier	use_extend		3285403	0					
ANR	3286070	CompoundStatement		149:20:3351:3351	3285403	1					
ANR	3286071	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , extend | 0xf000 )"	2018:5:55447:55508	3285403	0	True				
ANR	3286072	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , extend | 0xf000 )"		3285403	0					
ANR	3286073	Callee	* info -> fprintf_func		3285403	0					
ANR	3286074	UnaryOperationExpression	* info -> fprintf_func		3285403	0					
ANR	3286075	UnaryOperator	*		3285403	0					
ANR	3286076	PtrMemberAccess	info -> fprintf_func		3285403	1					
ANR	3286077	Identifier	info		3285403	0					
ANR	3286078	Identifier	fprintf_func		3285403	1					
ANR	3286079	ArgumentList	info -> stream		3285403	1					
ANR	3286080	Argument	info -> stream		3285403	0					
ANR	3286081	PtrMemberAccess	info -> stream		3285403	0					
ANR	3286082	Identifier	info		3285403	0					
ANR	3286083	Identifier	stream		3285403	1					
ANR	3286084	Argument	"""0x%x"""		3285403	1					
ANR	3286085	PrimaryExpression	"""0x%x"""		3285403	0					
ANR	3286086	Argument	extend | 0xf000		3285403	2					
ANR	3286087	InclusiveOrExpression	extend | 0xf000		3285403	0		|			
ANR	3286088	Identifier	extend		3285403	0					
ANR	3286089	PrimaryExpression	0xf000		3285403	1					
ANR	3286090	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , insn )"	2020:4:55520:55570	3285403	24	True				
ANR	3286091	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""0x%x"" , insn )"		3285403	0					
ANR	3286092	Callee	* info -> fprintf_func		3285403	0					
ANR	3286093	UnaryOperationExpression	* info -> fprintf_func		3285403	0					
ANR	3286094	UnaryOperator	*		3285403	0					
ANR	3286095	PtrMemberAccess	info -> fprintf_func		3285403	1					
ANR	3286096	Identifier	info		3285403	0					
ANR	3286097	Identifier	fprintf_func		3285403	1					
ANR	3286098	ArgumentList	info -> stream		3285403	1					
ANR	3286099	Argument	info -> stream		3285403	0					
ANR	3286100	PtrMemberAccess	info -> stream		3285403	0					
ANR	3286101	Identifier	info		3285403	0					
ANR	3286102	Identifier	stream		3285403	1					
ANR	3286103	Argument	"""0x%x"""		3285403	1					
ANR	3286104	PrimaryExpression	"""0x%x"""		3285403	0					
ANR	3286105	Argument	insn		3285403	2					
ANR	3286106	Identifier	insn		3285403	0					
ANR	3286107	ExpressionStatement	info -> insn_type = dis_noninsn	2021:4:55576:55605	3285403	25	True				
ANR	3286108	AssignmentExpression	info -> insn_type = dis_noninsn		3285403	0		=			
ANR	3286109	PtrMemberAccess	info -> insn_type		3285403	0					
ANR	3286110	Identifier	info		3285403	0					
ANR	3286111	Identifier	insn_type		3285403	1					
ANR	3286112	Identifier	dis_noninsn		3285403	1					
ANR	3286113	ReturnStatement	return length ;	2023:4:55612:55625	3285403	26	True				
ANR	3286114	Identifier	length		3285403	0					
ANR	3286115	ReturnType	static int		3285403	1					
ANR	3286116	Identifier	print_insn_mips16		3285403	2					
ANR	3286117	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		3285403	3					
ANR	3286118	Parameter	bfd_vma memaddr	1868:19:52040:52054	3285403	0	True				
ANR	3286119	ParameterType	bfd_vma		3285403	0					
ANR	3286120	Identifier	memaddr		3285403	1					
ANR	3286121	Parameter	struct disassemble_info * info	1868:36:52057:52085	3285403	1	True				
ANR	3286122	ParameterType	struct disassemble_info *		3285403	0					
ANR	3286123	Identifier	info		3285403	1					
ANR	3286124	CFGEntryNode	ENTRY		3285403		True				
ANR	3286125	CFGExitNode	EXIT		3285403		True				
ANR	3286126	Symbol	* op		3285403						
ANR	3286127	Symbol	dis_noninsn		3285403						
ANR	3286128	Symbol	dis_jsr		3285403						
ANR	3286129	Symbol	INSN_MACRO		3285403						
ANR	3286130	Symbol	info -> target2		3285403						
ANR	3286131	Symbol	strchr		3285403						
ANR	3286132	Symbol	opend		3285403						
ANR	3286133	Symbol	info -> data_size		3285403						
ANR	3286134	Symbol	op -> match		3285403						
ANR	3286135	Symbol	info -> fprintf_func		3285403						
ANR	3286136	Symbol	INSN2_ALIAS		3285403						
ANR	3286137	Symbol	op -> args		3285403						
ANR	3286138	Symbol	op -> pinfo2		3285403						
ANR	3286139	Symbol	dis_nonbranch		3285403						
ANR	3286140	Symbol	use_extend		3285403						
ANR	3286141	Symbol	bfd_mips16_num_opcodes		3285403						
ANR	3286142	Symbol	op -> mask		3285403						
ANR	3286143	Symbol	buffer		3285403						
ANR	3286144	Symbol	info		3285403						
ANR	3286145	Symbol	NULL		3285403						
ANR	3286146	Symbol	INSN_UNCOND_BRANCH_DELAY		3285403						
ANR	3286147	Symbol	TRUE		3285403						
ANR	3286148	Symbol	info -> endian		3285403						
ANR	3286149	Symbol	extend		3285403						
ANR	3286150	Symbol	info -> bytes_per_chunk		3285403						
ANR	3286151	Symbol	bfd_getl16		3285403						
ANR	3286152	Symbol	info -> read_memory_func		3285403						
ANR	3286153	Symbol	* op -> args		3285403						
ANR	3286154	Symbol	status		3285403						
ANR	3286155	Symbol	info -> insn_info_valid		3285403						
ANR	3286156	Symbol	bfd_getb16		3285403						
ANR	3286157	Symbol	* * info		3285403						
ANR	3286158	Symbol	no_aliases		3285403						
ANR	3286159	Symbol	memaddr		3285403						
ANR	3286160	Symbol	info -> branch_delay_insns		3285403						
ANR	3286161	Symbol	info -> stream		3285403						
ANR	3286162	Symbol	* * op		3285403						
ANR	3286163	Symbol	info -> target		3285403						
ANR	3286164	Symbol	MIPS16OP_MASK_RZ		3285403						
ANR	3286165	Symbol	BFD_ENDIAN_BIG		3285403						
ANR	3286166	Symbol	MIPS16OP_MASK_RY		3285403						
ANR	3286167	Symbol	info -> insn_type		3285403						
ANR	3286168	Symbol	* info -> read_memory_func		3285403						
ANR	3286169	Symbol	op		3285403						
ANR	3286170	Symbol	MIPS16OP_SH_RZ		3285403						
ANR	3286171	Symbol	mips16_opcodes		3285403						
ANR	3286172	Symbol	length		3285403						
ANR	3286173	Symbol	op -> pinfo		3285403						
ANR	3286174	Symbol	MIPS16OP_MASK_RX		3285403						
ANR	3286175	Symbol	info -> memory_error_func		3285403						
ANR	3286176	Symbol	MIPS16OP_SH_RY		3285403						
ANR	3286177	Symbol	MIPS16OP_SH_RX		3285403						
ANR	3286178	Symbol	insn		3285403						
ANR	3286179	Symbol	op -> name		3285403						
ANR	3286180	Symbol	s		3285403						
ANR	3286181	Symbol	info -> display_endian		3285403						
ANR	3286182	Symbol	FALSE		3285403						
ANR	3286183	Symbol	* info		3285403						
ANR	3286184	Symbol	dis_branch		3285403						
ANR	3286185	Symbol	* s		3285403						
ANR	3286186	Function	_print_insn_mips	2032:0:55964:57132							
ANR	3286187	FunctionDef	"_print_insn_mips (bfd_vma memaddr , struct disassemble_info * info , enum bfd_endian endianness)"		3286186	0					
ANR	3286188	CompoundStatement		2036:0:56077:57132	3286186	0					
ANR	3286189	IdentifierDeclStatement	bfd_byte buffer [ INSNLEN ] ;	2037:2:56081:56105	3286186	0	True				
ANR	3286190	IdentifierDecl	buffer [ INSNLEN ]		3286186	0					
ANR	3286191	IdentifierDeclType	bfd_byte [ INSNLEN ]		3286186	0					
ANR	3286192	Identifier	buffer		3286186	1					
ANR	3286193	Identifier	INSNLEN		3286186	2					
ANR	3286194	IdentifierDeclStatement	int status ;	2038:2:56109:56119	3286186	1	True				
ANR	3286195	IdentifierDecl	status		3286186	0					
ANR	3286196	IdentifierDeclType	int		3286186	0					
ANR	3286197	Identifier	status		3286186	1					
ANR	3286198	ExpressionStatement	set_default_mips_dis_options ( info )	2040:2:56124:56159	3286186	2	True				
ANR	3286199	CallExpression	set_default_mips_dis_options ( info )		3286186	0					
ANR	3286200	Callee	set_default_mips_dis_options		3286186	0					
ANR	3286201	Identifier	set_default_mips_dis_options		3286186	0					
ANR	3286202	ArgumentList	info		3286186	1					
ANR	3286203	Argument	info		3286186	0					
ANR	3286204	Identifier	info		3286186	0					
ANR	3286205	ExpressionStatement	parse_mips_dis_options ( info -> disassembler_options )	2041:2:56163:56214	3286186	3	True				
ANR	3286206	CallExpression	parse_mips_dis_options ( info -> disassembler_options )		3286186	0					
ANR	3286207	Callee	parse_mips_dis_options		3286186	0					
ANR	3286208	Identifier	parse_mips_dis_options		3286186	0					
ANR	3286209	ArgumentList	info -> disassembler_options		3286186	1					
ANR	3286210	Argument	info -> disassembler_options		3286186	0					
ANR	3286211	PtrMemberAccess	info -> disassembler_options		3286186	0					
ANR	3286212	Identifier	info		3286186	0					
ANR	3286213	Identifier	disassembler_options		3286186	1					
ANR	3286214	IfStatement	if ( memaddr & 0x01 )		3286186	4					
ANR	3286215	Condition	memaddr & 0x01	2046:6:56346:56359	3286186	0	True				
ANR	3286216	BitAndExpression	memaddr & 0x01		3286186	0		&			
ANR	3286217	Identifier	memaddr		3286186	0					
ANR	3286218	PrimaryExpression	0x01		3286186	1					
ANR	3286219	CompoundStatement		11:22:284:284	3286186	1					
ANR	3286220	ReturnStatement	"return print_insn_mips16 ( memaddr , info ) ;"	2047:3:56367:56407	3286186	0	True				
ANR	3286221	CallExpression	"print_insn_mips16 ( memaddr , info )"		3286186	0					
ANR	3286222	Callee	print_insn_mips16		3286186	0					
ANR	3286223	Identifier	print_insn_mips16		3286186	0					
ANR	3286224	ArgumentList	memaddr		3286186	1					
ANR	3286225	Argument	memaddr		3286186	0					
ANR	3286226	Identifier	memaddr		3286186	0					
ANR	3286227	Argument	info		3286186	1					
ANR	3286228	Identifier	info		3286186	0					
ANR	3286229	IfStatement	if ( info -> mach == bfd_mach_mips16 || ( info -> flavour == bfd_target_elf_flavour && info -> symbols != NULL && ( ( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other == STO_MIPS16 ) ) )		3286186	5					
ANR	3286230	Condition	info -> mach == bfd_mach_mips16 || ( info -> flavour == bfd_target_elf_flavour && info -> symbols != NULL && ( ( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other == STO_MIPS16 ) )	2052:6:56448:56629	3286186	0	True				
ANR	3286231	OrExpression	info -> mach == bfd_mach_mips16 || ( info -> flavour == bfd_target_elf_flavour && info -> symbols != NULL && ( ( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other == STO_MIPS16 ) )		3286186	0		||			
ANR	3286232	EqualityExpression	info -> mach == bfd_mach_mips16		3286186	0		==			
ANR	3286233	PtrMemberAccess	info -> mach		3286186	0					
ANR	3286234	Identifier	info		3286186	0					
ANR	3286235	Identifier	mach		3286186	1					
ANR	3286236	Identifier	bfd_mach_mips16		3286186	1					
ANR	3286237	AndExpression	info -> flavour == bfd_target_elf_flavour && info -> symbols != NULL && ( ( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other == STO_MIPS16 )		3286186	1		&&			
ANR	3286238	EqualityExpression	info -> flavour == bfd_target_elf_flavour		3286186	0		==			
ANR	3286239	PtrMemberAccess	info -> flavour		3286186	0					
ANR	3286240	Identifier	info		3286186	0					
ANR	3286241	Identifier	flavour		3286186	1					
ANR	3286242	Identifier	bfd_target_elf_flavour		3286186	1					
ANR	3286243	AndExpression	info -> symbols != NULL && ( ( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other == STO_MIPS16 )		3286186	1		&&			
ANR	3286244	EqualityExpression	info -> symbols != NULL		3286186	0		!=			
ANR	3286245	PtrMemberAccess	info -> symbols		3286186	0					
ANR	3286246	Identifier	info		3286186	0					
ANR	3286247	Identifier	symbols		3286186	1					
ANR	3286248	Identifier	NULL		3286186	1					
ANR	3286249	EqualityExpression	( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other == STO_MIPS16		3286186	1		==			
ANR	3286250	MemberAccess	( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other		3286186	0					
ANR	3286251	PtrMemberAccess	( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym		3286186	0					
ANR	3286252	UnaryOperationExpression	* ( elf_symbol_type * * ) info -> symbols		3286186	0					
ANR	3286253	UnaryOperator	*		3286186	0					
ANR	3286254	CastExpression	( elf_symbol_type * * ) info -> symbols		3286186	1					
ANR	3286255	CastTarget	elf_symbol_type * *		3286186	0					
ANR	3286256	PtrMemberAccess	info -> symbols		3286186	1					
ANR	3286257	Identifier	info		3286186	0					
ANR	3286258	Identifier	symbols		3286186	1					
ANR	3286259	Identifier	internal_elf_sym		3286186	1					
ANR	3286260	Identifier	st_other		3286186	1					
ANR	3286261	Identifier	STO_MIPS16		3286186	1					
ANR	3286262	CompoundStatement		17:190:554:554	3286186	1					
ANR	3286263	ReturnStatement	"return print_insn_mips16 ( memaddr , info ) ;"	2053:3:56637:56677	3286186	0	True				
ANR	3286264	CallExpression	"print_insn_mips16 ( memaddr , info )"		3286186	0					
ANR	3286265	Callee	print_insn_mips16		3286186	0					
ANR	3286266	Identifier	print_insn_mips16		3286186	0					
ANR	3286267	ArgumentList	memaddr		3286186	1					
ANR	3286268	Argument	memaddr		3286186	0					
ANR	3286269	Identifier	memaddr		3286186	0					
ANR	3286270	Argument	info		3286186	1					
ANR	3286271	Identifier	info		3286186	0					
ANR	3286272	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr , buffer , INSNLEN , info )"	2057:2:56693:56760	3286186	6	True				
ANR	3286273	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , INSNLEN , info )"		3286186	0		=			
ANR	3286274	Identifier	status		3286186	0					
ANR	3286275	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , INSNLEN , info )"		3286186	1					
ANR	3286276	Callee	* info -> read_memory_func		3286186	0					
ANR	3286277	UnaryOperationExpression	* info -> read_memory_func		3286186	0					
ANR	3286278	UnaryOperator	*		3286186	0					
ANR	3286279	PtrMemberAccess	info -> read_memory_func		3286186	1					
ANR	3286280	Identifier	info		3286186	0					
ANR	3286281	Identifier	read_memory_func		3286186	1					
ANR	3286282	ArgumentList	memaddr		3286186	1					
ANR	3286283	Argument	memaddr		3286186	0					
ANR	3286284	Identifier	memaddr		3286186	0					
ANR	3286285	Argument	buffer		3286186	1					
ANR	3286286	Identifier	buffer		3286186	0					
ANR	3286287	Argument	INSNLEN		3286186	2					
ANR	3286288	Identifier	INSNLEN		3286186	0					
ANR	3286289	Argument	info		3286186	3					
ANR	3286290	Identifier	info		3286186	0					
ANR	3286291	IfStatement	if ( status == 0 )		3286186	7					
ANR	3286292	Condition	status == 0	2058:6:56768:56778	3286186	0	True				
ANR	3286293	EqualityExpression	status == 0		3286186	0		==			
ANR	3286294	Identifier	status		3286186	0					
ANR	3286295	PrimaryExpression	0		3286186	1					
ANR	3286296	CompoundStatement		25:6:715:733	3286186	1					
ANR	3286297	IdentifierDeclStatement	unsigned long insn ;	2060:6:56793:56811	3286186	0	True				
ANR	3286298	IdentifierDecl	insn		3286186	0					
ANR	3286299	IdentifierDeclType	unsigned long		3286186	0					
ANR	3286300	Identifier	insn		3286186	1					
ANR	3286301	IfStatement	if ( endianness == BFD_ENDIAN_BIG )		3286186	1					
ANR	3286302	Condition	endianness == BFD_ENDIAN_BIG	2062:10:56824:56851	3286186	0	True				
ANR	3286303	EqualityExpression	endianness == BFD_ENDIAN_BIG		3286186	0		==			
ANR	3286304	Identifier	endianness		3286186	0					
ANR	3286305	Identifier	BFD_ENDIAN_BIG		3286186	1					
ANR	3286306	CompoundStatement		27:40:776:776	3286186	1					
ANR	3286307	ExpressionStatement	insn = ( unsigned long ) bfd_getb32 ( buffer )	2063:7:56863:56904	3286186	0	True				
ANR	3286308	AssignmentExpression	insn = ( unsigned long ) bfd_getb32 ( buffer )		3286186	0		=			
ANR	3286309	Identifier	insn		3286186	0					
ANR	3286310	CastExpression	( unsigned long ) bfd_getb32 ( buffer )		3286186	1					
ANR	3286311	CastTarget	unsigned long		3286186	0					
ANR	3286312	CallExpression	bfd_getb32 ( buffer )		3286186	1					
ANR	3286313	Callee	bfd_getb32		3286186	0					
ANR	3286314	Identifier	bfd_getb32		3286186	0					
ANR	3286315	ArgumentList	buffer		3286186	1					
ANR	3286316	Argument	buffer		3286186	0					
ANR	3286317	Identifier	buffer		3286186	0					
ANR	3286318	ElseStatement	else		3286186	0					
ANR	3286319	CompoundStatement		29:13:841:841	3286186	0					
ANR	3286320	ExpressionStatement	insn = ( unsigned long ) bfd_getl32 ( buffer )	2065:7:56928:56969	3286186	0	True				
ANR	3286321	AssignmentExpression	insn = ( unsigned long ) bfd_getl32 ( buffer )		3286186	0		=			
ANR	3286322	Identifier	insn		3286186	0					
ANR	3286323	CastExpression	( unsigned long ) bfd_getl32 ( buffer )		3286186	1					
ANR	3286324	CastTarget	unsigned long		3286186	0					
ANR	3286325	CallExpression	bfd_getl32 ( buffer )		3286186	1					
ANR	3286326	Callee	bfd_getl32		3286186	0					
ANR	3286327	Identifier	bfd_getl32		3286186	0					
ANR	3286328	ArgumentList	buffer		3286186	1					
ANR	3286329	Argument	buffer		3286186	0					
ANR	3286330	Identifier	buffer		3286186	0					
ANR	3286331	ReturnStatement	"return print_insn_mips ( memaddr , insn , info ) ;"	2068:6:56986:57030	3286186	2	True				
ANR	3286332	CallExpression	"print_insn_mips ( memaddr , insn , info )"		3286186	0					
ANR	3286333	Callee	print_insn_mips		3286186	0					
ANR	3286334	Identifier	print_insn_mips		3286186	0					
ANR	3286335	ArgumentList	memaddr		3286186	1					
ANR	3286336	Argument	memaddr		3286186	0					
ANR	3286337	Identifier	memaddr		3286186	0					
ANR	3286338	Argument	insn		3286186	1					
ANR	3286339	Identifier	insn		3286186	0					
ANR	3286340	Argument	info		3286186	2					
ANR	3286341	Identifier	info		3286186	0					
ANR	3286342	ElseStatement	else		3286186	0					
ANR	3286343	CompoundStatement		36:4:971:971	3286186	0					
ANR	3286344	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	2072:6:57057:57107	3286186	0	True				
ANR	3286345	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		3286186	0					
ANR	3286346	Callee	* info -> memory_error_func		3286186	0					
ANR	3286347	UnaryOperationExpression	* info -> memory_error_func		3286186	0					
ANR	3286348	UnaryOperator	*		3286186	0					
ANR	3286349	PtrMemberAccess	info -> memory_error_func		3286186	1					
ANR	3286350	Identifier	info		3286186	0					
ANR	3286351	Identifier	memory_error_func		3286186	1					
ANR	3286352	ArgumentList	status		3286186	1					
ANR	3286353	Argument	status		3286186	0					
ANR	3286354	Identifier	status		3286186	0					
ANR	3286355	Argument	memaddr		3286186	1					
ANR	3286356	Identifier	memaddr		3286186	0					
ANR	3286357	Argument	info		3286186	2					
ANR	3286358	Identifier	info		3286186	0					
ANR	3286359	ReturnStatement	return - 1 ;	2073:6:57115:57124	3286186	1	True				
ANR	3286360	UnaryOperationExpression	- 1		3286186	0					
ANR	3286361	UnaryOperator	-		3286186	0					
ANR	3286362	PrimaryExpression	1		3286186	1					
ANR	3286363	ReturnType	static int		3286186	1					
ANR	3286364	Identifier	_print_insn_mips		3286186	2					
ANR	3286365	ParameterList	"bfd_vma memaddr , struct disassemble_info * info , enum bfd_endian endianness"		3286186	3					
ANR	3286366	Parameter	bfd_vma memaddr	2033:18:55993:56007	3286186	0	True				
ANR	3286367	ParameterType	bfd_vma		3286186	0					
ANR	3286368	Identifier	memaddr		3286186	1					
ANR	3286369	Parameter	struct disassemble_info * info	2034:4:56014:56042	3286186	1	True				
ANR	3286370	ParameterType	struct disassemble_info *		3286186	0					
ANR	3286371	Identifier	info		3286186	1					
ANR	3286372	Parameter	enum bfd_endian endianness	2035:4:56049:56074	3286186	2	True				
ANR	3286373	ParameterType	enum bfd_endian		3286186	0					
ANR	3286374	Identifier	endianness		3286186	1					
ANR	3286375	CFGEntryNode	ENTRY		3286186		True				
ANR	3286376	CFGExitNode	EXIT		3286186		True				
ANR	3286377	Symbol	* * info		3286186						
ANR	3286378	Symbol	INSNLEN		3286186						
ANR	3286379	Symbol	* info -> symbols		3286186						
ANR	3286380	Symbol	memaddr		3286186						
ANR	3286381	Symbol	( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym		3286186						
ANR	3286382	Symbol	info -> symbols		3286186						
ANR	3286383	Symbol	STO_MIPS16		3286186						
ANR	3286384	Symbol	BFD_ENDIAN_BIG		3286186						
ANR	3286385	Symbol	bfd_target_elf_flavour		3286186						
ANR	3286386	Symbol	* * ( elf_symbol_type * * ) info -> symbols		3286186						
ANR	3286387	Symbol	buffer		3286186						
ANR	3286388	Symbol	info		3286186						
ANR	3286389	Symbol	* info -> read_memory_func		3286186						
ANR	3286390	Symbol	info -> disassembler_options		3286186						
ANR	3286391	Symbol	bfd_mach_mips16		3286186						
ANR	3286392	Symbol	( * ( elf_symbol_type * * ) info -> symbols ) -> internal_elf_sym . st_other		3286186						
ANR	3286393	Symbol	* * * info		3286186						
ANR	3286394	Symbol	NULL		3286186						
ANR	3286395	Symbol	* ( elf_symbol_type * * ) info -> symbols		3286186						
ANR	3286396	Symbol	bfd_getb32		3286186						
ANR	3286397	Symbol	info -> mach		3286186						
ANR	3286398	Symbol	info -> flavour		3286186						
ANR	3286399	Symbol	info -> memory_error_func		3286186						
ANR	3286400	Symbol	* * info -> symbols		3286186						
ANR	3286401	Symbol	insn		3286186						
ANR	3286402	Symbol	print_insn_mips16		3286186						
ANR	3286403	Symbol	print_insn_mips		3286186						
ANR	3286404	Symbol	info -> read_memory_func		3286186						
ANR	3286405	Symbol	* info		3286186						
ANR	3286406	Symbol	bfd_getl32		3286186						
ANR	3286407	Symbol	endianness		3286186						
ANR	3286408	Symbol	status		3286186						
ANR	3286409	Function	print_insn_big_mips	2077:0:57135:57269							
ANR	3286410	FunctionDef	"print_insn_big_mips (bfd_vma memaddr , struct disassemble_info * info)"		3286409	0					
ANR	3286411	CompoundStatement		2079:0:57208:57269	3286409	0					
ANR	3286412	ReturnStatement	"return _print_insn_mips ( memaddr , info , BFD_ENDIAN_BIG ) ;"	2080:2:57212:57267	3286409	0	True				
ANR	3286413	CallExpression	"_print_insn_mips ( memaddr , info , BFD_ENDIAN_BIG )"		3286409	0					
ANR	3286414	Callee	_print_insn_mips		3286409	0					
ANR	3286415	Identifier	_print_insn_mips		3286409	0					
ANR	3286416	ArgumentList	memaddr		3286409	1					
ANR	3286417	Argument	memaddr		3286409	0					
ANR	3286418	Identifier	memaddr		3286409	0					
ANR	3286419	Argument	info		3286409	1					
ANR	3286420	Identifier	info		3286409	0					
ANR	3286421	Argument	BFD_ENDIAN_BIG		3286409	2					
ANR	3286422	Identifier	BFD_ENDIAN_BIG		3286409	0					
ANR	3286423	ReturnType	int		3286409	1					
ANR	3286424	Identifier	print_insn_big_mips		3286409	2					
ANR	3286425	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		3286409	3					
ANR	3286426	Parameter	bfd_vma memaddr	2078:21:57160:57174	3286409	0	True				
ANR	3286427	ParameterType	bfd_vma		3286409	0					
ANR	3286428	Identifier	memaddr		3286409	1					
ANR	3286429	Parameter	struct disassemble_info * info	2078:38:57177:57205	3286409	1	True				
ANR	3286430	ParameterType	struct disassemble_info *		3286409	0					
ANR	3286431	Identifier	info		3286409	1					
ANR	3286432	CFGEntryNode	ENTRY		3286409		True				
ANR	3286433	CFGExitNode	EXIT		3286409		True				
ANR	3286434	Symbol	BFD_ENDIAN_BIG		3286409						
ANR	3286435	Symbol	_print_insn_mips		3286409						
ANR	3286436	Symbol	memaddr		3286409						
ANR	3286437	Symbol	info		3286409						
ANR	3286438	Function	print_insn_little_mips	2083:0:57272:57412							
ANR	3286439	FunctionDef	"print_insn_little_mips (bfd_vma memaddr , struct disassemble_info * info)"		3286438	0					
ANR	3286440	CompoundStatement		2085:0:57348:57412	3286438	0					
ANR	3286441	ReturnStatement	"return _print_insn_mips ( memaddr , info , BFD_ENDIAN_LITTLE ) ;"	2086:2:57352:57410	3286438	0	True				
ANR	3286442	CallExpression	"_print_insn_mips ( memaddr , info , BFD_ENDIAN_LITTLE )"		3286438	0					
ANR	3286443	Callee	_print_insn_mips		3286438	0					
ANR	3286444	Identifier	_print_insn_mips		3286438	0					
ANR	3286445	ArgumentList	memaddr		3286438	1					
ANR	3286446	Argument	memaddr		3286438	0					
ANR	3286447	Identifier	memaddr		3286438	0					
ANR	3286448	Argument	info		3286438	1					
ANR	3286449	Identifier	info		3286438	0					
ANR	3286450	Argument	BFD_ENDIAN_LITTLE		3286438	2					
ANR	3286451	Identifier	BFD_ENDIAN_LITTLE		3286438	0					
ANR	3286452	ReturnType	int		3286438	1					
ANR	3286453	Identifier	print_insn_little_mips		3286438	2					
ANR	3286454	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		3286438	3					
ANR	3286455	Parameter	bfd_vma memaddr	2084:24:57300:57314	3286438	0	True				
ANR	3286456	ParameterType	bfd_vma		3286438	0					
ANR	3286457	Identifier	memaddr		3286438	1					
ANR	3286458	Parameter	struct disassemble_info * info	2084:41:57317:57345	3286438	1	True				
ANR	3286459	ParameterType	struct disassemble_info *		3286438	0					
ANR	3286460	Identifier	info		3286438	1					
ANR	3286461	CFGEntryNode	ENTRY		3286438		True				
ANR	3286462	CFGExitNode	EXIT		3286438		True				
ANR	3286463	Symbol	BFD_ENDIAN_LITTLE		3286438						
ANR	3286464	Symbol	_print_insn_mips		3286438						
ANR	3286465	Symbol	memaddr		3286438						
ANR	3286466	Symbol	info		3286438						
ANR	3286467	Function	print_mips_disassembler_options	2089:0:57416:59315							
ANR	3286468	FunctionDef	print_mips_disassembler_options (FILE * stream)		3286467	0					
ANR	3286469	CompoundStatement		2091:0:57468:59315	3286467	0					
ANR	3286470	IdentifierDeclStatement	unsigned int i ;	2092:2:57472:57486	3286467	0	True				
ANR	3286471	IdentifierDecl	i		3286467	0					
ANR	3286472	IdentifierDeclType	unsigned int		3286467	0					
ANR	3286473	Identifier	i		3286467	1					
ANR	3286474	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\nThe following MIPS specific disassembler options are supported for use\\n\\\\nwith the -M switch (multiple options should be separated by commas):\\n"" ) )"	2094:2:57491:57662	3286467	1	True				
ANR	3286475	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\nThe following MIPS specific disassembler options are supported for use\\n\\\\nwith the -M switch (multiple options should be separated by commas):\\n"" ) )"		3286467	0					
ANR	3286476	Callee	fprintf		3286467	0					
ANR	3286477	Identifier	fprintf		3286467	0					
ANR	3286478	ArgumentList	stream		3286467	1					
ANR	3286479	Argument	stream		3286467	0					
ANR	3286480	Identifier	stream		3286467	0					
ANR	3286481	Argument	"_ ( ""\\n\\\\nThe following MIPS specific disassembler options are supported for use\\n\\\\nwith the -M switch (multiple options should be separated by commas):\\n"" )"		3286467	1					
ANR	3286482	CallExpression	"_ ( ""\\n\\\\nThe following MIPS specific disassembler options are supported for use\\n\\\\nwith the -M switch (multiple options should be separated by commas):\\n"" )"		3286467	0					
ANR	3286483	Callee	_		3286467	0					
ANR	3286484	Identifier	_		3286467	0					
ANR	3286485	ArgumentList	"""\\n\\\\nThe following MIPS specific disassembler options are supported for use\\n\\\\nwith the -M switch (multiple options should be separated by commas):\\n"""		3286467	1					
ANR	3286486	Argument	"""\\n\\\\nThe following MIPS specific disassembler options are supported for use\\n\\\\nwith the -M switch (multiple options should be separated by commas):\\n"""		3286467	0					
ANR	3286487	PrimaryExpression	"""\\n\\\\nThe following MIPS specific disassembler options are supported for use\\n\\\\nwith the -M switch (multiple options should be separated by commas):\\n"""		3286467	0					
ANR	3286488	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  gpr-names=ABI            Print GPR names according to  specified ABI.\\n\\\\n                           Default: based on binary being disassembled.\\n"" ) )"	2098:2:57667:57842	3286467	2	True				
ANR	3286489	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  gpr-names=ABI            Print GPR names according to  specified ABI.\\n\\\\n                           Default: based on binary being disassembled.\\n"" ) )"		3286467	0					
ANR	3286490	Callee	fprintf		3286467	0					
ANR	3286491	Identifier	fprintf		3286467	0					
ANR	3286492	ArgumentList	stream		3286467	1					
ANR	3286493	Argument	stream		3286467	0					
ANR	3286494	Identifier	stream		3286467	0					
ANR	3286495	Argument	"_ ( ""\\n\\\\n  gpr-names=ABI            Print GPR names according to  specified ABI.\\n\\\\n                           Default: based on binary being disassembled.\\n"" )"		3286467	1					
ANR	3286496	CallExpression	"_ ( ""\\n\\\\n  gpr-names=ABI            Print GPR names according to  specified ABI.\\n\\\\n                           Default: based on binary being disassembled.\\n"" )"		3286467	0					
ANR	3286497	Callee	_		3286467	0					
ANR	3286498	Identifier	_		3286467	0					
ANR	3286499	ArgumentList	"""\\n\\\\n  gpr-names=ABI            Print GPR names according to  specified ABI.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	1					
ANR	3286500	Argument	"""\\n\\\\n  gpr-names=ABI            Print GPR names according to  specified ABI.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	0					
ANR	3286501	PrimaryExpression	"""\\n\\\\n  gpr-names=ABI            Print GPR names according to  specified ABI.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	0					
ANR	3286502	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  fpr-names=ABI            Print FPR names according to specified ABI.\\n\\\\n                           Default: numeric.\\n"" ) )"	2102:2:57847:57994	3286467	3	True				
ANR	3286503	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  fpr-names=ABI            Print FPR names according to specified ABI.\\n\\\\n                           Default: numeric.\\n"" ) )"		3286467	0					
ANR	3286504	Callee	fprintf		3286467	0					
ANR	3286505	Identifier	fprintf		3286467	0					
ANR	3286506	ArgumentList	stream		3286467	1					
ANR	3286507	Argument	stream		3286467	0					
ANR	3286508	Identifier	stream		3286467	0					
ANR	3286509	Argument	"_ ( ""\\n\\\\n  fpr-names=ABI            Print FPR names according to specified ABI.\\n\\\\n                           Default: numeric.\\n"" )"		3286467	1					
ANR	3286510	CallExpression	"_ ( ""\\n\\\\n  fpr-names=ABI            Print FPR names according to specified ABI.\\n\\\\n                           Default: numeric.\\n"" )"		3286467	0					
ANR	3286511	Callee	_		3286467	0					
ANR	3286512	Identifier	_		3286467	0					
ANR	3286513	ArgumentList	"""\\n\\\\n  fpr-names=ABI            Print FPR names according to specified ABI.\\n\\\\n                           Default: numeric.\\n"""		3286467	1					
ANR	3286514	Argument	"""\\n\\\\n  fpr-names=ABI            Print FPR names according to specified ABI.\\n\\\\n                           Default: numeric.\\n"""		3286467	0					
ANR	3286515	PrimaryExpression	"""\\n\\\\n  fpr-names=ABI            Print FPR names according to specified ABI.\\n\\\\n                           Default: numeric.\\n"""		3286467	0					
ANR	3286516	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  cp0-names=ARCH           Print CP0 register names according to\\n\\\\n                           specified architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" ) )"	2106:2:57999:58221	3286467	4	True				
ANR	3286517	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  cp0-names=ARCH           Print CP0 register names according to\\n\\\\n                           specified architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" ) )"		3286467	0					
ANR	3286518	Callee	fprintf		3286467	0					
ANR	3286519	Identifier	fprintf		3286467	0					
ANR	3286520	ArgumentList	stream		3286467	1					
ANR	3286521	Argument	stream		3286467	0					
ANR	3286522	Identifier	stream		3286467	0					
ANR	3286523	Argument	"_ ( ""\\n\\\\n  cp0-names=ARCH           Print CP0 register names according to\\n\\\\n                           specified architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" )"		3286467	1					
ANR	3286524	CallExpression	"_ ( ""\\n\\\\n  cp0-names=ARCH           Print CP0 register names according to\\n\\\\n                           specified architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" )"		3286467	0					
ANR	3286525	Callee	_		3286467	0					
ANR	3286526	Identifier	_		3286467	0					
ANR	3286527	ArgumentList	"""\\n\\\\n  cp0-names=ARCH           Print CP0 register names according to\\n\\\\n                           specified architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	1					
ANR	3286528	Argument	"""\\n\\\\n  cp0-names=ARCH           Print CP0 register names according to\\n\\\\n                           specified architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	0					
ANR	3286529	PrimaryExpression	"""\\n\\\\n  cp0-names=ARCH           Print CP0 register names according to\\n\\\\n                           specified architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	0					
ANR	3286530	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  hwr-names=ARCH           Print HWR names according to specified \\n\\\\n\\t\\t\\t   architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" ) )"	2111:2:58226:58419	3286467	5	True				
ANR	3286531	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  hwr-names=ARCH           Print HWR names according to specified \\n\\\\n\\t\\t\\t   architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" ) )"		3286467	0					
ANR	3286532	Callee	fprintf		3286467	0					
ANR	3286533	Identifier	fprintf		3286467	0					
ANR	3286534	ArgumentList	stream		3286467	1					
ANR	3286535	Argument	stream		3286467	0					
ANR	3286536	Identifier	stream		3286467	0					
ANR	3286537	Argument	"_ ( ""\\n\\\\n  hwr-names=ARCH           Print HWR names according to specified \\n\\\\n\\t\\t\\t   architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" )"		3286467	1					
ANR	3286538	CallExpression	"_ ( ""\\n\\\\n  hwr-names=ARCH           Print HWR names according to specified \\n\\\\n\\t\\t\\t   architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"" )"		3286467	0					
ANR	3286539	Callee	_		3286467	0					
ANR	3286540	Identifier	_		3286467	0					
ANR	3286541	ArgumentList	"""\\n\\\\n  hwr-names=ARCH           Print HWR names according to specified \\n\\\\n\\t\\t\\t   architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	1					
ANR	3286542	Argument	"""\\n\\\\n  hwr-names=ARCH           Print HWR names according to specified \\n\\\\n\\t\\t\\t   architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	0					
ANR	3286543	PrimaryExpression	"""\\n\\\\n  hwr-names=ARCH           Print HWR names according to specified \\n\\\\n\\t\\t\\t   architecture.\\n\\\\n                           Default: based on binary being disassembled.\\n"""		3286467	0					
ANR	3286544	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  reg-names=ABI            Print GPR and FPR names according to\\n\\\\n                           specified ABI.\\n"" ) )"	2116:2:58424:58561	3286467	6	True				
ANR	3286545	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  reg-names=ABI            Print GPR and FPR names according to\\n\\\\n                           specified ABI.\\n"" ) )"		3286467	0					
ANR	3286546	Callee	fprintf		3286467	0					
ANR	3286547	Identifier	fprintf		3286467	0					
ANR	3286548	ArgumentList	stream		3286467	1					
ANR	3286549	Argument	stream		3286467	0					
ANR	3286550	Identifier	stream		3286467	0					
ANR	3286551	Argument	"_ ( ""\\n\\\\n  reg-names=ABI            Print GPR and FPR names according to\\n\\\\n                           specified ABI.\\n"" )"		3286467	1					
ANR	3286552	CallExpression	"_ ( ""\\n\\\\n  reg-names=ABI            Print GPR and FPR names according to\\n\\\\n                           specified ABI.\\n"" )"		3286467	0					
ANR	3286553	Callee	_		3286467	0					
ANR	3286554	Identifier	_		3286467	0					
ANR	3286555	ArgumentList	"""\\n\\\\n  reg-names=ABI            Print GPR and FPR names according to\\n\\\\n                           specified ABI.\\n"""		3286467	1					
ANR	3286556	Argument	"""\\n\\\\n  reg-names=ABI            Print GPR and FPR names according to\\n\\\\n                           specified ABI.\\n"""		3286467	0					
ANR	3286557	PrimaryExpression	"""\\n\\\\n  reg-names=ABI            Print GPR and FPR names according to\\n\\\\n                           specified ABI.\\n"""		3286467	0					
ANR	3286558	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  reg-names=ARCH           Print CP0 register and HWR names according to\\n\\\\n                           specified architecture.\\n"" ) )"	2120:2:58566:58721	3286467	7	True				
ANR	3286559	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  reg-names=ARCH           Print CP0 register and HWR names according to\\n\\\\n                           specified architecture.\\n"" ) )"		3286467	0					
ANR	3286560	Callee	fprintf		3286467	0					
ANR	3286561	Identifier	fprintf		3286467	0					
ANR	3286562	ArgumentList	stream		3286467	1					
ANR	3286563	Argument	stream		3286467	0					
ANR	3286564	Identifier	stream		3286467	0					
ANR	3286565	Argument	"_ ( ""\\n\\\\n  reg-names=ARCH           Print CP0 register and HWR names according to\\n\\\\n                           specified architecture.\\n"" )"		3286467	1					
ANR	3286566	CallExpression	"_ ( ""\\n\\\\n  reg-names=ARCH           Print CP0 register and HWR names according to\\n\\\\n                           specified architecture.\\n"" )"		3286467	0					
ANR	3286567	Callee	_		3286467	0					
ANR	3286568	Identifier	_		3286467	0					
ANR	3286569	ArgumentList	"""\\n\\\\n  reg-names=ARCH           Print CP0 register and HWR names according to\\n\\\\n                           specified architecture.\\n"""		3286467	1					
ANR	3286570	Argument	"""\\n\\\\n  reg-names=ARCH           Print CP0 register and HWR names according to\\n\\\\n                           specified architecture.\\n"""		3286467	0					
ANR	3286571	PrimaryExpression	"""\\n\\\\n  reg-names=ARCH           Print CP0 register and HWR names according to\\n\\\\n                           specified architecture.\\n"""		3286467	0					
ANR	3286572	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  For the options above, the following values are supported for \\""ABI\\"":\\n\\\\n   "" ) )"	2124:2:58726:58832	3286467	8	True				
ANR	3286573	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  For the options above, the following values are supported for \\""ABI\\"":\\n\\\\n   "" ) )"		3286467	0					
ANR	3286574	Callee	fprintf		3286467	0					
ANR	3286575	Identifier	fprintf		3286467	0					
ANR	3286576	ArgumentList	stream		3286467	1					
ANR	3286577	Argument	stream		3286467	0					
ANR	3286578	Identifier	stream		3286467	0					
ANR	3286579	Argument	"_ ( ""\\n\\\\n  For the options above, the following values are supported for \\""ABI\\"":\\n\\\\n   "" )"		3286467	1					
ANR	3286580	CallExpression	"_ ( ""\\n\\\\n  For the options above, the following values are supported for \\""ABI\\"":\\n\\\\n   "" )"		3286467	0					
ANR	3286581	Callee	_		3286467	0					
ANR	3286582	Identifier	_		3286467	0					
ANR	3286583	ArgumentList	"""\\n\\\\n  For the options above, the following values are supported for \\""ABI\\"":\\n\\\\n   """		3286467	1					
ANR	3286584	Argument	"""\\n\\\\n  For the options above, the following values are supported for \\""ABI\\"":\\n\\\\n   """		3286467	0					
ANR	3286585	PrimaryExpression	"""\\n\\\\n  For the options above, the following values are supported for \\""ABI\\"":\\n\\\\n   """		3286467	0					
ANR	3286586	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( mips_abi_choices ) ; i ++ )		3286467	9					
ANR	3286587	ForInit	i = 0 ;	2127:7:58841:58846	3286467	0	True				
ANR	3286588	AssignmentExpression	i = 0		3286467	0		=			
ANR	3286589	Identifier	i		3286467	0					
ANR	3286590	PrimaryExpression	0		3286467	1					
ANR	3286591	Condition	i < ARRAY_SIZE ( mips_abi_choices )	2127:14:58848:58880	3286467	1	True				
ANR	3286592	RelationalExpression	i < ARRAY_SIZE ( mips_abi_choices )		3286467	0		<			
ANR	3286593	Identifier	i		3286467	0					
ANR	3286594	CallExpression	ARRAY_SIZE ( mips_abi_choices )		3286467	1					
ANR	3286595	Callee	ARRAY_SIZE		3286467	0					
ANR	3286596	Identifier	ARRAY_SIZE		3286467	0					
ANR	3286597	ArgumentList	mips_abi_choices		3286467	1					
ANR	3286598	Argument	mips_abi_choices		3286467	0					
ANR	3286599	Identifier	mips_abi_choices		3286467	0					
ANR	3286600	PostIncDecOperationExpression	i ++	2127:49:58883:58885	3286467	2	True				
ANR	3286601	Identifier	i		3286467	0					
ANR	3286602	IncDec	++		3286467	1					
ANR	3286603	CompoundStatement		37:54:1419:1419	3286467	3					
ANR	3286604	ExpressionStatement	"fprintf ( stream , "" %s"" , mips_abi_choices [ i ] . name )"	2128:3:58893:58942	3286467	0	True				
ANR	3286605	CallExpression	"fprintf ( stream , "" %s"" , mips_abi_choices [ i ] . name )"		3286467	0					
ANR	3286606	Callee	fprintf		3286467	0					
ANR	3286607	Identifier	fprintf		3286467	0					
ANR	3286608	ArgumentList	stream		3286467	1					
ANR	3286609	Argument	stream		3286467	0					
ANR	3286610	Identifier	stream		3286467	0					
ANR	3286611	Argument	""" %s"""		3286467	1					
ANR	3286612	PrimaryExpression	""" %s"""		3286467	0					
ANR	3286613	Argument	mips_abi_choices [ i ] . name		3286467	2					
ANR	3286614	MemberAccess	mips_abi_choices [ i ] . name		3286467	0					
ANR	3286615	ArrayIndexing	mips_abi_choices [ i ]		3286467	0					
ANR	3286616	Identifier	mips_abi_choices		3286467	0					
ANR	3286617	Identifier	i		3286467	1					
ANR	3286618	Identifier	name		3286467	1					
ANR	3286619	ExpressionStatement	"fprintf ( stream , _ ( ""\\n"" ) )"	2130:2:58950:58975	3286467	10	True				
ANR	3286620	CallExpression	"fprintf ( stream , _ ( ""\\n"" ) )"		3286467	0					
ANR	3286621	Callee	fprintf		3286467	0					
ANR	3286622	Identifier	fprintf		3286467	0					
ANR	3286623	ArgumentList	stream		3286467	1					
ANR	3286624	Argument	stream		3286467	0					
ANR	3286625	Identifier	stream		3286467	0					
ANR	3286626	Argument	"_ ( ""\\n"" )"		3286467	1					
ANR	3286627	CallExpression	"_ ( ""\\n"" )"		3286467	0					
ANR	3286628	Callee	_		3286467	0					
ANR	3286629	Identifier	_		3286467	0					
ANR	3286630	ArgumentList	"""\\n"""		3286467	1					
ANR	3286631	Argument	"""\\n"""		3286467	0					
ANR	3286632	PrimaryExpression	"""\\n"""		3286467	0					
ANR	3286633	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\n  For the options above, The following values are supported for \\""ARCH\\"":\\n\\\\n   "" ) )"	2132:2:58980:59087	3286467	11	True				
ANR	3286634	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\n  For the options above, The following values are supported for \\""ARCH\\"":\\n\\\\n   "" ) )"		3286467	0					
ANR	3286635	Callee	fprintf		3286467	0					
ANR	3286636	Identifier	fprintf		3286467	0					
ANR	3286637	ArgumentList	stream		3286467	1					
ANR	3286638	Argument	stream		3286467	0					
ANR	3286639	Identifier	stream		3286467	0					
ANR	3286640	Argument	"_ ( ""\\n\\\\n  For the options above, The following values are supported for \\""ARCH\\"":\\n\\\\n   "" )"		3286467	1					
ANR	3286641	CallExpression	"_ ( ""\\n\\\\n  For the options above, The following values are supported for \\""ARCH\\"":\\n\\\\n   "" )"		3286467	0					
ANR	3286642	Callee	_		3286467	0					
ANR	3286643	Identifier	_		3286467	0					
ANR	3286644	ArgumentList	"""\\n\\\\n  For the options above, The following values are supported for \\""ARCH\\"":\\n\\\\n   """		3286467	1					
ANR	3286645	Argument	"""\\n\\\\n  For the options above, The following values are supported for \\""ARCH\\"":\\n\\\\n   """		3286467	0					
ANR	3286646	PrimaryExpression	"""\\n\\\\n  For the options above, The following values are supported for \\""ARCH\\"":\\n\\\\n   """		3286467	0					
ANR	3286647	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( mips_arch_choices ) ; i ++ )		3286467	12					
ANR	3286648	ForInit	i = 0 ;	2135:7:59096:59101	3286467	0	True				
ANR	3286649	AssignmentExpression	i = 0		3286467	0		=			
ANR	3286650	Identifier	i		3286467	0					
ANR	3286651	PrimaryExpression	0		3286467	1					
ANR	3286652	Condition	i < ARRAY_SIZE ( mips_arch_choices )	2135:14:59103:59136	3286467	1	True				
ANR	3286653	RelationalExpression	i < ARRAY_SIZE ( mips_arch_choices )		3286467	0		<			
ANR	3286654	Identifier	i		3286467	0					
ANR	3286655	CallExpression	ARRAY_SIZE ( mips_arch_choices )		3286467	1					
ANR	3286656	Callee	ARRAY_SIZE		3286467	0					
ANR	3286657	Identifier	ARRAY_SIZE		3286467	0					
ANR	3286658	ArgumentList	mips_arch_choices		3286467	1					
ANR	3286659	Argument	mips_arch_choices		3286467	0					
ANR	3286660	Identifier	mips_arch_choices		3286467	0					
ANR	3286661	PostIncDecOperationExpression	i ++	2135:50:59139:59141	3286467	2	True				
ANR	3286662	Identifier	i		3286467	0					
ANR	3286663	IncDec	++		3286467	1					
ANR	3286664	CompoundStatement		45:55:1675:1675	3286467	3					
ANR	3286665	IfStatement	if ( * mips_arch_choices [ i ] . name != '\\0' )		3286467	0					
ANR	3286666	Condition	* mips_arch_choices [ i ] . name != '\\0'	2136:7:59153:59186	3286467	0	True				
ANR	3286667	EqualityExpression	* mips_arch_choices [ i ] . name != '\\0'		3286467	0		!=			
ANR	3286668	UnaryOperationExpression	* mips_arch_choices [ i ] . name		3286467	0					
ANR	3286669	UnaryOperator	*		3286467	0					
ANR	3286670	MemberAccess	mips_arch_choices [ i ] . name		3286467	1					
ANR	3286671	ArrayIndexing	mips_arch_choices [ i ]		3286467	0					
ANR	3286672	Identifier	mips_arch_choices		3286467	0					
ANR	3286673	Identifier	i		3286467	1					
ANR	3286674	Identifier	name		3286467	1					
ANR	3286675	PrimaryExpression	'\\0'		3286467	1					
ANR	3286676	CompoundStatement		46:43:1720:1720	3286467	1					
ANR	3286677	ExpressionStatement	"fprintf ( stream , "" %s"" , mips_arch_choices [ i ] . name )"	2137:4:59195:59245	3286467	0	True				
ANR	3286678	CallExpression	"fprintf ( stream , "" %s"" , mips_arch_choices [ i ] . name )"		3286467	0					
ANR	3286679	Callee	fprintf		3286467	0					
ANR	3286680	Identifier	fprintf		3286467	0					
ANR	3286681	ArgumentList	stream		3286467	1					
ANR	3286682	Argument	stream		3286467	0					
ANR	3286683	Identifier	stream		3286467	0					
ANR	3286684	Argument	""" %s"""		3286467	1					
ANR	3286685	PrimaryExpression	""" %s"""		3286467	0					
ANR	3286686	Argument	mips_arch_choices [ i ] . name		3286467	2					
ANR	3286687	MemberAccess	mips_arch_choices [ i ] . name		3286467	0					
ANR	3286688	ArrayIndexing	mips_arch_choices [ i ]		3286467	0					
ANR	3286689	Identifier	mips_arch_choices		3286467	0					
ANR	3286690	Identifier	i		3286467	1					
ANR	3286691	Identifier	name		3286467	1					
ANR	3286692	ExpressionStatement	"fprintf ( stream , _ ( ""\\n"" ) )"	2140:2:59258:59283	3286467	13	True				
ANR	3286693	CallExpression	"fprintf ( stream , _ ( ""\\n"" ) )"		3286467	0					
ANR	3286694	Callee	fprintf		3286467	0					
ANR	3286695	Identifier	fprintf		3286467	0					
ANR	3286696	ArgumentList	stream		3286467	1					
ANR	3286697	Argument	stream		3286467	0					
ANR	3286698	Identifier	stream		3286467	0					
ANR	3286699	Argument	"_ ( ""\\n"" )"		3286467	1					
ANR	3286700	CallExpression	"_ ( ""\\n"" )"		3286467	0					
ANR	3286701	Callee	_		3286467	0					
ANR	3286702	Identifier	_		3286467	0					
ANR	3286703	ArgumentList	"""\\n"""		3286467	1					
ANR	3286704	Argument	"""\\n"""		3286467	0					
ANR	3286705	PrimaryExpression	"""\\n"""		3286467	0					
ANR	3286706	ExpressionStatement	"fprintf ( stream , _ ( ""\\n"" ) )"	2142:2:59288:59313	3286467	14	True				
ANR	3286707	CallExpression	"fprintf ( stream , _ ( ""\\n"" ) )"		3286467	0					
ANR	3286708	Callee	fprintf		3286467	0					
ANR	3286709	Identifier	fprintf		3286467	0					
ANR	3286710	ArgumentList	stream		3286467	1					
ANR	3286711	Argument	stream		3286467	0					
ANR	3286712	Identifier	stream		3286467	0					
ANR	3286713	Argument	"_ ( ""\\n"" )"		3286467	1					
ANR	3286714	CallExpression	"_ ( ""\\n"" )"		3286467	0					
ANR	3286715	Callee	_		3286467	0					
ANR	3286716	Identifier	_		3286467	0					
ANR	3286717	ArgumentList	"""\\n"""		3286467	1					
ANR	3286718	Argument	"""\\n"""		3286467	0					
ANR	3286719	PrimaryExpression	"""\\n"""		3286467	0					
ANR	3286720	ReturnType	void		3286467	1					
ANR	3286721	Identifier	print_mips_disassembler_options		3286467	2					
ANR	3286722	ParameterList	FILE * stream		3286467	3					
ANR	3286723	Parameter	FILE * stream	2090:33:57454:57465	3286467	0	True				
ANR	3286724	ParameterType	FILE *		3286467	0					
ANR	3286725	Identifier	stream		3286467	1					
ANR	3286726	CFGEntryNode	ENTRY		3286467		True				
ANR	3286727	CFGExitNode	EXIT		3286467		True				
ANR	3286728	Symbol	ARRAY_SIZE		3286467						
ANR	3286729	Symbol	* * i		3286467						
ANR	3286730	Symbol	* mips_arch_choices		3286467						
ANR	3286731	Symbol	mips_abi_choices		3286467						
ANR	3286732	Symbol	mips_arch_choices [ i ] . name		3286467						
ANR	3286733	Symbol	i		3286467						
ANR	3286734	Symbol	mips_arch_choices		3286467						
ANR	3286735	Symbol	* i		3286467						
ANR	3286736	Symbol	stream		3286467						
ANR	3286737	Symbol	* mips_arch_choices [ i ] . name		3286467						
ANR	3286738	Symbol	* mips_abi_choices		3286467						
ANR	3286739	Symbol	mips_abi_choices [ i ] . name		3286467						
ANR	3286740	Symbol	* * mips_arch_choices		3286467						
ANR	3286741	Symbol	_		3286467						
