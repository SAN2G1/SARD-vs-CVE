command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4320471	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_project.c								
ANR	4320472	DeclStmt									
ANR	4320473	Decl							const char	const char * [ ]	help_msg_P
ANR	4320474	DeclStmt									
ANR	4320475	Decl							const char	const char * [ ]	help_msg_Pn
ANR	4320476	Function	cmd_project_init	38:0:1196:1309							
ANR	4320477	FunctionDef	cmd_project_init (RCore * core)		4320476	0					
ANR	4320478	CompoundStatement		38:42:1238:1309	4320476	0					
ANR	4320479	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , P )"	39:1:1241:1272	4320476	0	True				
ANR	4320480	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , P )"		4320476	0					
ANR	4320481	Callee	DEFINE_CMD_DESCRIPTOR		4320476	0					
ANR	4320482	Identifier	DEFINE_CMD_DESCRIPTOR		4320476	0					
ANR	4320483	ArgumentList	core		4320476	1					
ANR	4320484	Argument	core		4320476	0					
ANR	4320485	Identifier	core		4320476	0					
ANR	4320486	Argument	P		4320476	1					
ANR	4320487	Identifier	P		4320476	0					
ANR	4320488	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , Pn )"	40:1:1275:1307	4320476	1	True				
ANR	4320489	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , Pn )"		4320476	0					
ANR	4320490	Callee	DEFINE_CMD_DESCRIPTOR		4320476	0					
ANR	4320491	Identifier	DEFINE_CMD_DESCRIPTOR		4320476	0					
ANR	4320492	ArgumentList	core		4320476	1					
ANR	4320493	Argument	core		4320476	0					
ANR	4320494	Identifier	core		4320476	0					
ANR	4320495	Argument	Pn		4320476	1					
ANR	4320496	Identifier	Pn		4320476	0					
ANR	4320497	ReturnType	static void		4320476	1					
ANR	4320498	Identifier	cmd_project_init		4320476	2					
ANR	4320499	ParameterList	RCore * core		4320476	3					
ANR	4320500	Parameter	RCore * core	38:29:1225:1235	4320476	0	True				
ANR	4320501	ParameterType	RCore *		4320476	0					
ANR	4320502	Identifier	core		4320476	1					
ANR	4320503	CFGEntryNode	ENTRY		4320476		True				
ANR	4320504	CFGExitNode	EXIT		4320476		True				
ANR	4320505	Symbol	P		4320476						
ANR	4320506	Symbol	core		4320476						
ANR	4320507	Symbol	Pn		4320476						
ANR	4320508	Function	cmd_project	43:0:1312:6050							
ANR	4320509	FunctionDef	"cmd_project (void * data , const char * input)"		4320508	0					
ANR	4320510	CompoundStatement		43:54:1366:6050	4320508	0					
ANR	4320511	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	44:1:1369:1397	4320508	0	True				
ANR	4320512	IdentifierDecl	* core = ( RCore * ) data		4320508	0					
ANR	4320513	IdentifierDeclType	RCore *		4320508	0					
ANR	4320514	Identifier	core		4320508	1					
ANR	4320515	AssignmentExpression	* core = ( RCore * ) data		4320508	2		=			
ANR	4320516	Identifier	core		4320508	0					
ANR	4320517	CastExpression	( RCore * ) data		4320508	1					
ANR	4320518	CastTarget	RCore *		4320508	0					
ANR	4320519	Identifier	data		4320508	1					
ANR	4320520	IdentifierDeclStatement	"const char * file , * arg ;"	45:1:1400:1422	4320508	1	True				
ANR	4320521	IdentifierDecl	* file		4320508	0					
ANR	4320522	IdentifierDeclType	const char *		4320508	0					
ANR	4320523	Identifier	file		4320508	1					
ANR	4320524	IdentifierDecl	* arg		4320508	1					
ANR	4320525	IdentifierDeclType	const char *		4320508	0					
ANR	4320526	Identifier	arg		4320508	1					
ANR	4320527	IdentifierDeclStatement	"const char * fileproject = r_config_get ( core -> config , ""prj.name"" ) ;"	46:1:1425:1490	4320508	2	True				
ANR	4320528	IdentifierDecl	"* fileproject = r_config_get ( core -> config , ""prj.name"" )"		4320508	0					
ANR	4320529	IdentifierDeclType	const char *		4320508	0					
ANR	4320530	Identifier	fileproject		4320508	1					
ANR	4320531	AssignmentExpression	"* fileproject = r_config_get ( core -> config , ""prj.name"" )"		4320508	2		=			
ANR	4320532	Identifier	fileproject		4320508	0					
ANR	4320533	CallExpression	"r_config_get ( core -> config , ""prj.name"" )"		4320508	1					
ANR	4320534	Callee	r_config_get		4320508	0					
ANR	4320535	Identifier	r_config_get		4320508	0					
ANR	4320536	ArgumentList	core -> config		4320508	1					
ANR	4320537	Argument	core -> config		4320508	0					
ANR	4320538	PtrMemberAccess	core -> config		4320508	0					
ANR	4320539	Identifier	core		4320508	0					
ANR	4320540	Identifier	config		4320508	1					
ANR	4320541	Argument	"""prj.name"""		4320508	1					
ANR	4320542	PrimaryExpression	"""prj.name"""		4320508	0					
ANR	4320543	IdentifierDeclStatement	char * str = NULL ;	47:1:1493:1509	4320508	3	True				
ANR	4320544	IdentifierDecl	* str = NULL		4320508	0					
ANR	4320545	IdentifierDeclType	char *		4320508	0					
ANR	4320546	Identifier	str		4320508	1					
ANR	4320547	AssignmentExpression	* str = NULL		4320508	2		=			
ANR	4320548	Identifier	NULL		4320508	0					
ANR	4320549	Identifier	NULL		4320508	1					
ANR	4320550	IfStatement	if ( ! input )		4320508	4					
ANR	4320551	Condition	! input	49:5:1517:1522	4320508	0	True				
ANR	4320552	UnaryOperationExpression	! input		4320508	0					
ANR	4320553	UnaryOperator	!		4320508	0					
ANR	4320554	Identifier	input		4320508	1					
ANR	4320555	CompoundStatement		7:13:158:158	4320508	1					
ANR	4320556	ReturnStatement	return false ;	50:2:1529:1541	4320508	0	True				
ANR	4320557	Identifier	false		4320508	0					
ANR	4320558	ExpressionStatement	str = strdup ( fileproject )	52:1:1547:1573	4320508	5	True				
ANR	4320559	AssignmentExpression	str = strdup ( fileproject )		4320508	0		=			
ANR	4320560	Identifier	str		4320508	0					
ANR	4320561	CallExpression	strdup ( fileproject )		4320508	1					
ANR	4320562	Callee	strdup		4320508	0					
ANR	4320563	Identifier	strdup		4320508	0					
ANR	4320564	ArgumentList	fileproject		4320508	1					
ANR	4320565	Argument	fileproject		4320508	0					
ANR	4320566	Identifier	fileproject		4320508	0					
ANR	4320567	ExpressionStatement	"arg = strchr ( input , ' ' )"	53:1:1576:1601	4320508	6	True				
ANR	4320568	AssignmentExpression	"arg = strchr ( input , ' ' )"		4320508	0		=			
ANR	4320569	Identifier	arg		4320508	0					
ANR	4320570	CallExpression	"strchr ( input , ' ' )"		4320508	1					
ANR	4320571	Callee	strchr		4320508	0					
ANR	4320572	Identifier	strchr		4320508	0					
ANR	4320573	ArgumentList	input		4320508	1					
ANR	4320574	Argument	input		4320508	0					
ANR	4320575	Identifier	input		4320508	0					
ANR	4320576	Argument	' '		4320508	1					
ANR	4320577	PrimaryExpression	' '		4320508	0					
ANR	4320578	IfStatement	if ( arg )		4320508	7					
ANR	4320579	Condition	arg	54:5:1608:1610	4320508	0	True				
ANR	4320580	Identifier	arg		4320508	0					
ANR	4320581	CompoundStatement		12:10:246:246	4320508	1					
ANR	4320582	ExpressionStatement	arg ++	55:2:1617:1622	4320508	0	True				
ANR	4320583	PostIncDecOperationExpression	arg ++		4320508	0					
ANR	4320584	Identifier	arg		4320508	0					
ANR	4320585	IncDec	++		4320508	1					
ANR	4320586	ElseStatement	else		4320508	0					
ANR	4320587	CompoundStatement		14:8:265:265	4320508	0					
ANR	4320588	IfStatement	if ( * input )		4320508	0					
ANR	4320589	Condition	* input	57:6:1640:1645	4320508	0	True				
ANR	4320590	UnaryOperationExpression	* input		4320508	0					
ANR	4320591	UnaryOperator	*		4320508	0					
ANR	4320592	Identifier	input		4320508	1					
ANR	4320593	CompoundStatement		15:14:281:281	4320508	1					
ANR	4320594	ExpressionStatement	arg = input + 1	58:3:1653:1668	4320508	0	True				
ANR	4320595	AssignmentExpression	arg = input + 1		4320508	0		=			
ANR	4320596	Identifier	arg		4320508	0					
ANR	4320597	AdditiveExpression	input + 1		4320508	1		+			
ANR	4320598	Identifier	input		4320508	0					
ANR	4320599	PrimaryExpression	1		4320508	1					
ANR	4320600	IfStatement	if ( * arg == '&' )		4320508	1					
ANR	4320601	Condition	* arg == '&'	59:7:1677:1687	4320508	0	True				
ANR	4320602	EqualityExpression	* arg == '&'		4320508	0		==			
ANR	4320603	UnaryOperationExpression	* arg		4320508	0					
ANR	4320604	UnaryOperator	*		4320508	0					
ANR	4320605	Identifier	arg		4320508	1					
ANR	4320606	PrimaryExpression	'&'		4320508	1					
ANR	4320607	CompoundStatement		17:20:323:323	4320508	1					
ANR	4320608	ExpressionStatement	arg ++	60:4:1696:1701	4320508	0	True				
ANR	4320609	PostIncDecOperationExpression	arg ++		4320508	0					
ANR	4320610	Identifier	arg		4320508	0					
ANR	4320611	IncDec	++		4320508	1					
ANR	4320612	ExpressionStatement	file = arg	64:1:1716:1726	4320508	8	True				
ANR	4320613	AssignmentExpression	file = arg		4320508	0		=			
ANR	4320614	Identifier	file		4320508	0					
ANR	4320615	Identifier	arg		4320508	1					
ANR	4320616	SwitchStatement	switch ( input [ 0 ] )		4320508	9					
ANR	4320617	Condition	input [ 0 ]	65:9:1737:1744	4320508	0	True				
ANR	4320618	ArrayIndexing	input [ 0 ]		4320508	0					
ANR	4320619	Identifier	input		4320508	0					
ANR	4320620	PrimaryExpression	0		4320508	1					
ANR	4320621	CompoundStatement		23:19:380:380	4320508	1					
ANR	4320622	Label	case 'c' :	66:1:1750:1758	4320508	0	True				
ANR	4320623	IfStatement	if ( input [ 1 ] == ' ' )		4320508	1					
ANR	4320624	Condition	input [ 1 ] == ' '	67:6:1766:1780	4320508	0	True				
ANR	4320625	EqualityExpression	input [ 1 ] == ' '		4320508	0		==			
ANR	4320626	ArrayIndexing	input [ 1 ]		4320508	0					
ANR	4320627	Identifier	input		4320508	0					
ANR	4320628	PrimaryExpression	1		4320508	1					
ANR	4320629	PrimaryExpression	' '		4320508	1					
ANR	4320630	CompoundStatement		25:23:416:416	4320508	1					
ANR	4320631	ExpressionStatement	"r_core_project_cat ( core , input + 2 )"	68:3:1788:1824	4320508	0	True				
ANR	4320632	CallExpression	"r_core_project_cat ( core , input + 2 )"		4320508	0					
ANR	4320633	Callee	r_core_project_cat		4320508	0					
ANR	4320634	Identifier	r_core_project_cat		4320508	0					
ANR	4320635	ArgumentList	core		4320508	1					
ANR	4320636	Argument	core		4320508	0					
ANR	4320637	Identifier	core		4320508	0					
ANR	4320638	Argument	input + 2		4320508	1					
ANR	4320639	AdditiveExpression	input + 2		4320508	0		+			
ANR	4320640	Identifier	input		4320508	0					
ANR	4320641	PrimaryExpression	2		4320508	1					
ANR	4320642	ElseStatement	else		4320508	0					
ANR	4320643	CompoundStatement		27:9:468:468	4320508	0					
ANR	4320644	ExpressionStatement	"eprintf ( ""Usage: Pc [prjname]\\n"" )"	70:3:1840:1873	4320508	0	True				
ANR	4320645	CallExpression	"eprintf ( ""Usage: Pc [prjname]\\n"" )"		4320508	0					
ANR	4320646	Callee	eprintf		4320508	0					
ANR	4320647	Identifier	eprintf		4320508	0					
ANR	4320648	ArgumentList	"""Usage: Pc [prjname]\\n"""		4320508	1					
ANR	4320649	Argument	"""Usage: Pc [prjname]\\n"""		4320508	0					
ANR	4320650	PrimaryExpression	"""Usage: Pc [prjname]\\n"""		4320508	0					
ANR	4320651	BreakStatement	break ;	72:2:1881:1886	4320508	2	True				
ANR	4320652	Label	case 'o' :	73:1:1889:1897	4320508	3	True				
ANR	4320653	IfStatement	if ( input [ 1 ] == '&' )		4320508	4					
ANR	4320654	Condition	input [ 1 ] == '&'	75:6:1940:1954	4320508	0	True				
ANR	4320655	EqualityExpression	input [ 1 ] == '&'		4320508	0		==			
ANR	4320656	ArrayIndexing	input [ 1 ]		4320508	0					
ANR	4320657	Identifier	input		4320508	0					
ANR	4320658	PrimaryExpression	1		4320508	1					
ANR	4320659	PrimaryExpression	'&'		4320508	1					
ANR	4320660	CompoundStatement		33:23:590:590	4320508	1					
ANR	4320661	ExpressionStatement	"r_core_cmdf ( core , ""& Po %s"" , file )"	76:3:1962:1997	4320508	0	True				
ANR	4320662	CallExpression	"r_core_cmdf ( core , ""& Po %s"" , file )"		4320508	0					
ANR	4320663	Callee	r_core_cmdf		4320508	0					
ANR	4320664	Identifier	r_core_cmdf		4320508	0					
ANR	4320665	ArgumentList	core		4320508	1					
ANR	4320666	Argument	core		4320508	0					
ANR	4320667	Identifier	core		4320508	0					
ANR	4320668	Argument	"""& Po %s"""		4320508	1					
ANR	4320669	PrimaryExpression	"""& Po %s"""		4320508	0					
ANR	4320670	Argument	file		4320508	2					
ANR	4320671	Identifier	file		4320508	0					
ANR	4320672	ElseStatement	else		4320508	0					
ANR	4320673	IfStatement	if ( input [ 1 ] )		4320508	0					
ANR	4320674	Condition	input [ 1 ]	77:13:2012:2019	4320508	0	True				
ANR	4320675	ArrayIndexing	input [ 1 ]		4320508	0					
ANR	4320676	Identifier	input		4320508	0					
ANR	4320677	PrimaryExpression	1		4320508	1					
ANR	4320678	CompoundStatement		35:23:655:655	4320508	1					
ANR	4320679	ExpressionStatement	"r_core_project_open ( core , file , false )"	78:3:2027:2066	4320508	0	True				
ANR	4320680	CallExpression	"r_core_project_open ( core , file , false )"		4320508	0					
ANR	4320681	Callee	r_core_project_open		4320508	0					
ANR	4320682	Identifier	r_core_project_open		4320508	0					
ANR	4320683	ArgumentList	core		4320508	1					
ANR	4320684	Argument	core		4320508	0					
ANR	4320685	Identifier	core		4320508	0					
ANR	4320686	Argument	file		4320508	1					
ANR	4320687	Identifier	file		4320508	0					
ANR	4320688	Argument	false		4320508	2					
ANR	4320689	Identifier	false		4320508	0					
ANR	4320690	ElseStatement	else		4320508	0					
ANR	4320691	CompoundStatement		37:9:710:710	4320508	0					
ANR	4320692	IfStatement	if ( file && * file )		4320508	0					
ANR	4320693	Condition	file && * file	80:7:2086:2098	4320508	0	True				
ANR	4320694	AndExpression	file && * file		4320508	0		&&			
ANR	4320695	Identifier	file		4320508	0					
ANR	4320696	UnaryOperationExpression	* file		4320508	1					
ANR	4320697	UnaryOperator	*		4320508	0					
ANR	4320698	Identifier	file		4320508	1					
ANR	4320699	CompoundStatement		38:22:734:734	4320508	1					
ANR	4320700	ExpressionStatement	r_cons_println ( file )	81:4:2107:2128	4320508	0	True				
ANR	4320701	CallExpression	r_cons_println ( file )		4320508	0					
ANR	4320702	Callee	r_cons_println		4320508	0					
ANR	4320703	Identifier	r_cons_println		4320508	0					
ANR	4320704	ArgumentList	file		4320508	1					
ANR	4320705	Argument	file		4320508	0					
ANR	4320706	Identifier	file		4320508	0					
ANR	4320707	BreakStatement	break ;	84:2:2141:2146	4320508	5	True				
ANR	4320708	Label	case 'd' :	85:1:2149:2157	4320508	6	True				
ANR	4320709	Label	case '-' :	86:1:2160:2168	4320508	7	True				
ANR	4320710	ExpressionStatement	"r_core_project_delete ( core , file )"	87:2:2172:2206	4320508	8	True				
ANR	4320711	CallExpression	"r_core_project_delete ( core , file )"		4320508	0					
ANR	4320712	Callee	r_core_project_delete		4320508	0					
ANR	4320713	Identifier	r_core_project_delete		4320508	0					
ANR	4320714	ArgumentList	core		4320508	1					
ANR	4320715	Argument	core		4320508	0					
ANR	4320716	Identifier	core		4320508	0					
ANR	4320717	Argument	file		4320508	1					
ANR	4320718	Identifier	file		4320508	0					
ANR	4320719	BreakStatement	break ;	88:2:2210:2215	4320508	9	True				
ANR	4320720	Label	case 's' :	89:1:2218:2226	4320508	10	True				
ANR	4320721	IfStatement	if ( ! file || ! file [ 0 ] )		4320508	11					
ANR	4320722	Condition	! file || ! file [ 0 ]	90:6:2234:2250	4320508	0	True				
ANR	4320723	OrExpression	! file || ! file [ 0 ]		4320508	0		||			
ANR	4320724	UnaryOperationExpression	! file		4320508	0					
ANR	4320725	UnaryOperator	!		4320508	0					
ANR	4320726	Identifier	file		4320508	1					
ANR	4320727	UnaryOperationExpression	! file [ 0 ]		4320508	1					
ANR	4320728	UnaryOperator	!		4320508	0					
ANR	4320729	ArrayIndexing	file [ 0 ]		4320508	1					
ANR	4320730	Identifier	file		4320508	0					
ANR	4320731	PrimaryExpression	0		4320508	1					
ANR	4320732	CompoundStatement		48:25:886:886	4320508	1					
ANR	4320733	ExpressionStatement	file = str	91:3:2309:2319	4320508	0	True				
ANR	4320734	AssignmentExpression	file = str		4320508	0		=			
ANR	4320735	Identifier	file		4320508	0					
ANR	4320736	Identifier	str		4320508	1					
ANR	4320737	IfStatement	"if ( r_core_project_save ( core , file ) )"		4320508	12					
ANR	4320738	Condition	"r_core_project_save ( core , file )"	93:6:2331:2362	4320508	0	True				
ANR	4320739	CallExpression	"r_core_project_save ( core , file )"		4320508	0					
ANR	4320740	Callee	r_core_project_save		4320508	0					
ANR	4320741	Identifier	r_core_project_save		4320508	0					
ANR	4320742	ArgumentList	core		4320508	1					
ANR	4320743	Argument	core		4320508	0					
ANR	4320744	Identifier	core		4320508	0					
ANR	4320745	Argument	file		4320508	1					
ANR	4320746	Identifier	file		4320508	0					
ANR	4320747	CompoundStatement		51:40:998:998	4320508	1					
ANR	4320748	ExpressionStatement	r_cons_println ( file )	94:3:2370:2391	4320508	0	True				
ANR	4320749	CallExpression	r_cons_println ( file )		4320508	0					
ANR	4320750	Callee	r_cons_println		4320508	0					
ANR	4320751	Identifier	r_cons_println		4320508	0					
ANR	4320752	ArgumentList	file		4320508	1					
ANR	4320753	Argument	file		4320508	0					
ANR	4320754	Identifier	file		4320508	0					
ANR	4320755	BreakStatement	break ;	96:2:2399:2404	4320508	13	True				
ANR	4320756	Label	case 'S' :	97:1:2407:2415	4320508	14	True				
ANR	4320757	IfStatement	if ( input [ 1 ] == ' ' )		4320508	15					
ANR	4320758	Condition	input [ 1 ] == ' '	98:6:2423:2437	4320508	0	True				
ANR	4320759	EqualityExpression	input [ 1 ] == ' '		4320508	0		==			
ANR	4320760	ArrayIndexing	input [ 1 ]		4320508	0					
ANR	4320761	Identifier	input		4320508	0					
ANR	4320762	PrimaryExpression	1		4320508	1					
ANR	4320763	PrimaryExpression	' '		4320508	1					
ANR	4320764	CompoundStatement		56:23:1073:1073	4320508	1					
ANR	4320765	ExpressionStatement	"r_core_project_save_rdb ( core , input + 2 , R_CORE_PRJ_ALL )"	99:3:2445:2502	4320508	0	True				
ANR	4320766	CallExpression	"r_core_project_save_rdb ( core , input + 2 , R_CORE_PRJ_ALL )"		4320508	0					
ANR	4320767	Callee	r_core_project_save_rdb		4320508	0					
ANR	4320768	Identifier	r_core_project_save_rdb		4320508	0					
ANR	4320769	ArgumentList	core		4320508	1					
ANR	4320770	Argument	core		4320508	0					
ANR	4320771	Identifier	core		4320508	0					
ANR	4320772	Argument	input + 2		4320508	1					
ANR	4320773	AdditiveExpression	input + 2		4320508	0		+			
ANR	4320774	Identifier	input		4320508	0					
ANR	4320775	PrimaryExpression	2		4320508	1					
ANR	4320776	Argument	R_CORE_PRJ_ALL		4320508	2					
ANR	4320777	Identifier	R_CORE_PRJ_ALL		4320508	0					
ANR	4320778	ElseStatement	else		4320508	0					
ANR	4320779	CompoundStatement		58:9:1146:1146	4320508	0					
ANR	4320780	ExpressionStatement	"eprintf ( ""Usage: PS [file]\\n"" )"	101:3:2518:2548	4320508	0	True				
ANR	4320781	CallExpression	"eprintf ( ""Usage: PS [file]\\n"" )"		4320508	0					
ANR	4320782	Callee	eprintf		4320508	0					
ANR	4320783	Identifier	eprintf		4320508	0					
ANR	4320784	ArgumentList	"""Usage: PS [file]\\n"""		4320508	1					
ANR	4320785	Argument	"""Usage: PS [file]\\n"""		4320508	0					
ANR	4320786	PrimaryExpression	"""Usage: PS [file]\\n"""		4320508	0					
ANR	4320787	BreakStatement	break ;	103:2:2556:2561	4320508	16	True				
ANR	4320788	Label	case 'n' :	104:1:2564:2572	4320508	17	True				
ANR	4320789	IfStatement	if ( input [ 1 ] == '?' )		4320508	18					
ANR	4320790	Condition	input [ 1 ] == '?'	105:6:2588:2602	4320508	0	True				
ANR	4320791	EqualityExpression	input [ 1 ] == '?'		4320508	0		==			
ANR	4320792	ArrayIndexing	input [ 1 ]		4320508	0					
ANR	4320793	Identifier	input		4320508	0					
ANR	4320794	PrimaryExpression	1		4320508	1					
ANR	4320795	PrimaryExpression	'?'		4320508	1					
ANR	4320796	CompoundStatement		63:23:1238:1238	4320508	1					
ANR	4320797	ExpressionStatement	"r_core_cmd_help ( core , help_msg_Pn )"	106:3:2610:2645	4320508	0	True				
ANR	4320798	CallExpression	"r_core_cmd_help ( core , help_msg_Pn )"		4320508	0					
ANR	4320799	Callee	r_core_cmd_help		4320508	0					
ANR	4320800	Identifier	r_core_cmd_help		4320508	0					
ANR	4320801	ArgumentList	core		4320508	1					
ANR	4320802	Argument	core		4320508	0					
ANR	4320803	Identifier	core		4320508	0					
ANR	4320804	Argument	help_msg_Pn		4320508	1					
ANR	4320805	Identifier	help_msg_Pn		4320508	0					
ANR	4320806	ElseStatement	else		4320508	0					
ANR	4320807	IfStatement	if ( ! fileproject || ! * fileproject )		4320508	0					
ANR	4320808	Condition	! fileproject || ! * fileproject	107:13:2660:2688	4320508	0	True				
ANR	4320809	OrExpression	! fileproject || ! * fileproject		4320508	0		||			
ANR	4320810	UnaryOperationExpression	! fileproject		4320508	0					
ANR	4320811	UnaryOperator	!		4320508	0					
ANR	4320812	Identifier	fileproject		4320508	1					
ANR	4320813	UnaryOperationExpression	! * fileproject		4320508	1					
ANR	4320814	UnaryOperator	!		4320508	0					
ANR	4320815	UnaryOperationExpression	* fileproject		4320508	1					
ANR	4320816	UnaryOperator	*		4320508	0					
ANR	4320817	Identifier	fileproject		4320508	1					
ANR	4320818	CompoundStatement		65:44:1324:1324	4320508	1					
ANR	4320819	ExpressionStatement	"eprintf ( ""No project\\n"" )"	108:3:2696:2720	4320508	0	True				
ANR	4320820	CallExpression	"eprintf ( ""No project\\n"" )"		4320508	0					
ANR	4320821	Callee	eprintf		4320508	0					
ANR	4320822	Identifier	eprintf		4320508	0					
ANR	4320823	ArgumentList	"""No project\\n"""		4320508	1					
ANR	4320824	Argument	"""No project\\n"""		4320508	0					
ANR	4320825	PrimaryExpression	"""No project\\n"""		4320508	0					
ANR	4320826	ElseStatement	else		4320508	0					
ANR	4320827	CompoundStatement		67:9:1364:1364	4320508	0					
ANR	4320828	SwitchStatement	switch ( input [ 1 ] )		4320508	0					
ANR	4320829	Condition	input [ 1 ]	110:11:2744:2751	4320508	0	True				
ANR	4320830	ArrayIndexing	input [ 1 ]		4320508	0					
ANR	4320831	Identifier	input		4320508	0					
ANR	4320832	PrimaryExpression	1		4320508	1					
ANR	4320833	CompoundStatement		68:21:1387:1387	4320508	1					
ANR	4320834	Label	case '-' :	111:3:2759:2767	4320508	0	True				
ANR	4320835	CompoundStatement		72:4:1469:1506	4320508	1					
ANR	4320836	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( str , ""w"" ) ;"	114:4:2836:2873	4320508	0	True				
ANR	4320837	IdentifierDecl	"* fd = r_sandbox_fopen ( str , ""w"" )"		4320508	0					
ANR	4320838	IdentifierDeclType	FILE *		4320508	0					
ANR	4320839	Identifier	fd		4320508	1					
ANR	4320840	AssignmentExpression	"* fd = r_sandbox_fopen ( str , ""w"" )"		4320508	2		=			
ANR	4320841	Identifier	fd		4320508	0					
ANR	4320842	CallExpression	"r_sandbox_fopen ( str , ""w"" )"		4320508	1					
ANR	4320843	Callee	r_sandbox_fopen		4320508	0					
ANR	4320844	Identifier	r_sandbox_fopen		4320508	0					
ANR	4320845	ArgumentList	str		4320508	1					
ANR	4320846	Argument	str		4320508	0					
ANR	4320847	Identifier	str		4320508	0					
ANR	4320848	Argument	"""w"""		4320508	1					
ANR	4320849	PrimaryExpression	"""w"""		4320508	0					
ANR	4320850	IfStatement	if ( ! fd )		4320508	1					
ANR	4320851	Condition	! fd	115:8:2883:2885	4320508	0	True				
ANR	4320852	UnaryOperationExpression	! fd		4320508	0					
ANR	4320853	UnaryOperator	!		4320508	0					
ANR	4320854	Identifier	fd		4320508	1					
ANR	4320855	CompoundStatement		73:13:1521:1521	4320508	1					
ANR	4320856	ExpressionStatement	"eprintf ( ""Cannot open %s\\n"" , str )"	116:5:2895:2928	4320508	0	True				
ANR	4320857	CallExpression	"eprintf ( ""Cannot open %s\\n"" , str )"		4320508	0					
ANR	4320858	Callee	eprintf		4320508	0					
ANR	4320859	Identifier	eprintf		4320508	0					
ANR	4320860	ArgumentList	"""Cannot open %s\\n"""		4320508	1					
ANR	4320861	Argument	"""Cannot open %s\\n"""		4320508	0					
ANR	4320862	PrimaryExpression	"""Cannot open %s\\n"""		4320508	0					
ANR	4320863	Argument	str		4320508	1					
ANR	4320864	Identifier	str		4320508	0					
ANR	4320865	ElseStatement	else		4320508	0					
ANR	4320866	CompoundStatement		78:5:1689:1700	4320508	0					
ANR	4320867	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	118:5:2948:3005	4320508	0	True				
ANR	4320868	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	0					
ANR	4320869	IdentifierDeclType	char *		4320508	0					
ANR	4320870	Identifier	str		4320508	1					
ANR	4320871	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	2		=			
ANR	4320872	Identifier	str		4320508	0					
ANR	4320873	CallExpression	"r_core_project_notes_file ( core , fileproject )"		4320508	1					
ANR	4320874	Callee	r_core_project_notes_file		4320508	0					
ANR	4320875	Identifier	r_core_project_notes_file		4320508	0					
ANR	4320876	ArgumentList	core		4320508	1					
ANR	4320877	Argument	core		4320508	0					
ANR	4320878	Identifier	core		4320508	0					
ANR	4320879	Argument	fileproject		4320508	1					
ANR	4320880	Identifier	fileproject		4320508	0					
ANR	4320881	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	119:5:3012:3049	4320508	1	True				
ANR	4320882	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		4320508	0					
ANR	4320883	IdentifierDeclType	char *		4320508	0					
ANR	4320884	Identifier	data		4320508	1					
ANR	4320885	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		4320508	2		=			
ANR	4320886	Identifier	data		4320508	0					
ANR	4320887	CallExpression	"r_file_slurp ( str , NULL )"		4320508	1					
ANR	4320888	Callee	r_file_slurp		4320508	0					
ANR	4320889	Identifier	r_file_slurp		4320508	0					
ANR	4320890	ArgumentList	str		4320508	1					
ANR	4320891	Argument	str		4320508	0					
ANR	4320892	Identifier	str		4320508	0					
ANR	4320893	Argument	NULL		4320508	1					
ANR	4320894	Identifier	NULL		4320508	0					
ANR	4320895	IdentifierDeclStatement	int del = 0 ;	120:5:3056:3067	4320508	2	True				
ANR	4320896	IdentifierDecl	del = 0		4320508	0					
ANR	4320897	IdentifierDeclType	int		4320508	0					
ANR	4320898	Identifier	del		4320508	1					
ANR	4320899	AssignmentExpression	del = 0		4320508	2		=			
ANR	4320900	Identifier	del		4320508	0					
ANR	4320901	PrimaryExpression	0		4320508	1					
ANR	4320902	IfStatement	if ( data )		4320508	3					
ANR	4320903	Condition	data	121:9:3078:3081	4320508	0	True				
ANR	4320904	Identifier	data		4320508	0					
ANR	4320905	CompoundStatement		80:6:1725:1739	4320508	1					
ANR	4320906	IdentifierDeclStatement	"char * ptr , * nl ;"	122:6:3092:3106	4320508	0	True				
ANR	4320907	IdentifierDecl	* ptr		4320508	0					
ANR	4320908	IdentifierDeclType	char *		4320508	0					
ANR	4320909	Identifier	ptr		4320508	1					
ANR	4320910	IdentifierDecl	* nl		4320508	1					
ANR	4320911	IdentifierDeclType	char *		4320508	0					
ANR	4320912	Identifier	nl		4320508	1					
ANR	4320913	ForStatement	for ( ptr = data ; ptr ; ptr = nl )		4320508	1					
ANR	4320914	ForInit	ptr = data ;	123:11:3119:3129	4320508	0	True				
ANR	4320915	AssignmentExpression	ptr = data		4320508	0		=			
ANR	4320916	Identifier	ptr		4320508	0					
ANR	4320917	Identifier	data		4320508	1					
ANR	4320918	Condition	ptr	123:23:3131:3133	4320508	1	True				
ANR	4320919	Identifier	ptr		4320508	0					
ANR	4320920	AssignmentExpression	ptr = nl	123:28:3136:3143	4320508	2	True	=			
ANR	4320921	Identifier	ptr		4320508	0					
ANR	4320922	Identifier	nl		4320508	1					
ANR	4320923	CompoundStatement		81:38:1779:1779	4320508	3					
ANR	4320924	ExpressionStatement	"nl = strchr ( ptr , '\\n' )"	124:7:3155:3178	4320508	0	True				
ANR	4320925	AssignmentExpression	"nl = strchr ( ptr , '\\n' )"		4320508	0		=			
ANR	4320926	Identifier	nl		4320508	0					
ANR	4320927	CallExpression	"strchr ( ptr , '\\n' )"		4320508	1					
ANR	4320928	Callee	strchr		4320508	0					
ANR	4320929	Identifier	strchr		4320508	0					
ANR	4320930	ArgumentList	ptr		4320508	1					
ANR	4320931	Argument	ptr		4320508	0					
ANR	4320932	Identifier	ptr		4320508	0					
ANR	4320933	Argument	'\\n'		4320508	1					
ANR	4320934	PrimaryExpression	'\\n'		4320508	0					
ANR	4320935	IfStatement	if ( nl )		4320508	1					
ANR	4320936	Condition	nl	125:11:3191:3192	4320508	0	True				
ANR	4320937	Identifier	nl		4320508	0					
ANR	4320938	CompoundStatement		83:15:1828:1828	4320508	1					
ANR	4320939	ExpressionStatement	* nl ++ = 0	126:8:3205:3214	4320508	0	True				
ANR	4320940	AssignmentExpression	* nl ++ = 0		4320508	0		=			
ANR	4320941	UnaryOperationExpression	* nl ++		4320508	0					
ANR	4320942	UnaryOperator	*		4320508	0					
ANR	4320943	PostIncDecOperationExpression	nl ++		4320508	1					
ANR	4320944	Identifier	nl		4320508	0					
ANR	4320945	IncDec	++		4320508	1					
ANR	4320946	PrimaryExpression	0		4320508	1					
ANR	4320947	IfStatement	"if ( strstr ( ptr , input + 2 ) )"		4320508	1					
ANR	4320948	Condition	"strstr ( ptr , input + 2 )"	127:12:3228:3250	4320508	0	True				
ANR	4320949	CallExpression	"strstr ( ptr , input + 2 )"		4320508	0					
ANR	4320950	Callee	strstr		4320508	0					
ANR	4320951	Identifier	strstr		4320508	0					
ANR	4320952	ArgumentList	ptr		4320508	1					
ANR	4320953	Argument	ptr		4320508	0					
ANR	4320954	Identifier	ptr		4320508	0					
ANR	4320955	Argument	input + 2		4320508	1					
ANR	4320956	AdditiveExpression	input + 2		4320508	0		+			
ANR	4320957	Identifier	input		4320508	0					
ANR	4320958	PrimaryExpression	2		4320508	1					
ANR	4320959	CompoundStatement		85:37:1886:1886	4320508	1					
ANR	4320960	ExpressionStatement	del ++	128:9:3264:3269	4320508	0	True				
ANR	4320961	PostIncDecOperationExpression	del ++		4320508	0					
ANR	4320962	Identifier	del		4320508	0					
ANR	4320963	IncDec	++		4320508	1					
ANR	4320964	ElseStatement	else		4320508	0					
ANR	4320965	CompoundStatement		87:15:1919:1919	4320508	0					
ANR	4320966	ExpressionStatement	"fprintf ( fd , ""%s\\n"" , ptr )"	130:9:3297:3322	4320508	0	True				
ANR	4320967	CallExpression	"fprintf ( fd , ""%s\\n"" , ptr )"		4320508	0					
ANR	4320968	Callee	fprintf		4320508	0					
ANR	4320969	Identifier	fprintf		4320508	0					
ANR	4320970	ArgumentList	fd		4320508	1					
ANR	4320971	Argument	fd		4320508	0					
ANR	4320972	Identifier	fd		4320508	0					
ANR	4320973	Argument	"""%s\\n"""		4320508	1					
ANR	4320974	PrimaryExpression	"""%s\\n"""		4320508	0					
ANR	4320975	Argument	ptr		4320508	2					
ANR	4320976	Identifier	ptr		4320508	0					
ANR	4320977	ExpressionStatement	free ( data )	134:6:3357:3368	4320508	2	True				
ANR	4320978	CallExpression	free ( data )		4320508	0					
ANR	4320979	Callee	free		4320508	0					
ANR	4320980	Identifier	free		4320508	0					
ANR	4320981	ArgumentList	data		4320508	1					
ANR	4320982	Argument	data		4320508	0					
ANR	4320983	Identifier	data		4320508	0					
ANR	4320984	IfStatement	if ( del > 0 )		4320508	4					
ANR	4320985	Condition	del > 0	136:9:3386:3392	4320508	0	True				
ANR	4320986	RelationalExpression	del > 0		4320508	0		>			
ANR	4320987	Identifier	del		4320508	0					
ANR	4320988	PrimaryExpression	0		4320508	1					
ANR	4320989	CompoundStatement		94:18:2028:2028	4320508	1					
ANR	4320990	ExpressionStatement	"eprintf ( ""Deleted %d lines\\n"" , del )"	137:6:3403:3438	4320508	0	True				
ANR	4320991	CallExpression	"eprintf ( ""Deleted %d lines\\n"" , del )"		4320508	0					
ANR	4320992	Callee	eprintf		4320508	0					
ANR	4320993	Identifier	eprintf		4320508	0					
ANR	4320994	ArgumentList	"""Deleted %d lines\\n"""		4320508	1					
ANR	4320995	Argument	"""Deleted %d lines\\n"""		4320508	0					
ANR	4320996	PrimaryExpression	"""Deleted %d lines\\n"""		4320508	0					
ANR	4320997	Argument	del		4320508	1					
ANR	4320998	Identifier	del		4320508	0					
ANR	4320999	ExpressionStatement	free ( str )	139:5:3452:3462	4320508	5	True				
ANR	4321000	CallExpression	free ( str )		4320508	0					
ANR	4321001	Callee	free		4320508	0					
ANR	4321002	Identifier	free		4320508	0					
ANR	4321003	ArgumentList	str		4320508	1					
ANR	4321004	Argument	str		4320508	0					
ANR	4321005	Identifier	str		4320508	0					
ANR	4321006	ExpressionStatement	fclose ( fd )	140:5:3469:3480	4320508	6	True				
ANR	4321007	CallExpression	fclose ( fd )		4320508	0					
ANR	4321008	Callee	fclose		4320508	0					
ANR	4321009	Identifier	fclose		4320508	0					
ANR	4321010	ArgumentList	fd		4320508	1					
ANR	4321011	Argument	fd		4320508	0					
ANR	4321012	Identifier	fd		4320508	0					
ANR	4321013	BreakStatement	break ;	143:3:3496:3501	4320508	2	True				
ANR	4321014	Label	case ' ' :	144:3:3506:3514	4320508	3	True				
ANR	4321015	IfStatement	if ( input [ 2 ] == '-' )		4320508	4					
ANR	4321016	Condition	input [ 2 ] == '-'	145:8:3533:3547	4320508	0	True				
ANR	4321017	EqualityExpression	input [ 2 ] == '-'		4320508	0		==			
ANR	4321018	ArrayIndexing	input [ 2 ]		4320508	0					
ANR	4321019	Identifier	input		4320508	0					
ANR	4321020	PrimaryExpression	2		4320508	1					
ANR	4321021	PrimaryExpression	'-'		4320508	1					
ANR	4321022	CompoundStatement		106:5:2283:2345	4320508	1					
ANR	4321023	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	146:5:3557:3614	4320508	0	True				
ANR	4321024	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	0					
ANR	4321025	IdentifierDeclType	char *		4320508	0					
ANR	4321026	Identifier	str		4320508	1					
ANR	4321027	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	2		=			
ANR	4321028	Identifier	str		4320508	0					
ANR	4321029	CallExpression	"r_core_project_notes_file ( core , fileproject )"		4320508	1					
ANR	4321030	Callee	r_core_project_notes_file		4320508	0					
ANR	4321031	Identifier	r_core_project_notes_file		4320508	0					
ANR	4321032	ArgumentList	core		4320508	1					
ANR	4321033	Argument	core		4320508	0					
ANR	4321034	Identifier	core		4320508	0					
ANR	4321035	Argument	fileproject		4320508	1					
ANR	4321036	Identifier	fileproject		4320508	0					
ANR	4321037	IdentifierDeclStatement	"const char * editor = r_config_get ( core -> config , ""cfg.editor"" ) ;"	148:5:3650:3712	4320508	1	True				
ANR	4321038	IdentifierDecl	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		4320508	0					
ANR	4321039	IdentifierDeclType	const char *		4320508	0					
ANR	4321040	Identifier	editor		4320508	1					
ANR	4321041	AssignmentExpression	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		4320508	2		=			
ANR	4321042	Identifier	editor		4320508	0					
ANR	4321043	CallExpression	"r_config_get ( core -> config , ""cfg.editor"" )"		4320508	1					
ANR	4321044	Callee	r_config_get		4320508	0					
ANR	4321045	Identifier	r_config_get		4320508	0					
ANR	4321046	ArgumentList	core -> config		4320508	1					
ANR	4321047	Argument	core -> config		4320508	0					
ANR	4321048	PtrMemberAccess	core -> config		4320508	0					
ANR	4321049	Identifier	core		4320508	0					
ANR	4321050	Identifier	config		4320508	1					
ANR	4321051	Argument	"""cfg.editor"""		4320508	1					
ANR	4321052	PrimaryExpression	"""cfg.editor"""		4320508	0					
ANR	4321053	IfStatement	if ( str && * str && editor && * editor )		4320508	2					
ANR	4321054	Condition	str && * str && editor && * editor	149:9:3723:3754	4320508	0	True				
ANR	4321055	AndExpression	str && * str && editor && * editor		4320508	0		&&			
ANR	4321056	Identifier	str		4320508	0					
ANR	4321057	AndExpression	* str && editor && * editor		4320508	1		&&			
ANR	4321058	UnaryOperationExpression	* str		4320508	0					
ANR	4321059	UnaryOperator	*		4320508	0					
ANR	4321060	Identifier	str		4320508	1					
ANR	4321061	AndExpression	editor && * editor		4320508	1		&&			
ANR	4321062	Identifier	editor		4320508	0					
ANR	4321063	UnaryOperationExpression	* editor		4320508	1					
ANR	4321064	UnaryOperator	*		4320508	0					
ANR	4321065	Identifier	editor		4320508	1					
ANR	4321066	CompoundStatement		107:43:2390:2390	4320508	1					
ANR	4321067	ExpressionStatement	"r_sys_cmdf ( ""%s %s"" , editor , str )"	150:6:3765:3798	4320508	0	True				
ANR	4321068	CallExpression	"r_sys_cmdf ( ""%s %s"" , editor , str )"		4320508	0					
ANR	4321069	Callee	r_sys_cmdf		4320508	0					
ANR	4321070	Identifier	r_sys_cmdf		4320508	0					
ANR	4321071	ArgumentList	"""%s %s"""		4320508	1					
ANR	4321072	Argument	"""%s %s"""		4320508	0					
ANR	4321073	PrimaryExpression	"""%s %s"""		4320508	0					
ANR	4321074	Argument	editor		4320508	1					
ANR	4321075	Identifier	editor		4320508	0					
ANR	4321076	Argument	str		4320508	2					
ANR	4321077	Identifier	str		4320508	0					
ANR	4321078	ElseStatement	else		4320508	0					
ANR	4321079	CompoundStatement		109:12:2445:2445	4320508	0					
ANR	4321080	ExpressionStatement	"eprintf ( ""No cfg.editor configured\\n"" )"	152:6:3820:3858	4320508	0	True				
ANR	4321081	CallExpression	"eprintf ( ""No cfg.editor configured\\n"" )"		4320508	0					
ANR	4321082	Callee	eprintf		4320508	0					
ANR	4321083	Identifier	eprintf		4320508	0					
ANR	4321084	ArgumentList	"""No cfg.editor configured\\n"""		4320508	1					
ANR	4321085	Argument	"""No cfg.editor configured\\n"""		4320508	0					
ANR	4321086	PrimaryExpression	"""No cfg.editor configured\\n"""		4320508	0					
ANR	4321087	ExpressionStatement	free ( str )	154:5:3872:3882	4320508	3	True				
ANR	4321088	CallExpression	free ( str )		4320508	0					
ANR	4321089	Callee	free		4320508	0					
ANR	4321090	Identifier	free		4320508	0					
ANR	4321091	ArgumentList	str		4320508	1					
ANR	4321092	Argument	str		4320508	0					
ANR	4321093	Identifier	str		4320508	0					
ANR	4321094	ElseStatement	else		4320508	0					
ANR	4321095	CompoundStatement		118:5:2747:2784	4320508	0					
ANR	4321096	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	158:5:4006:4063	4320508	0	True				
ANR	4321097	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	0					
ANR	4321098	IdentifierDeclType	char *		4320508	0					
ANR	4321099	Identifier	str		4320508	1					
ANR	4321100	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	2		=			
ANR	4321101	Identifier	str		4320508	0					
ANR	4321102	CallExpression	"r_core_project_notes_file ( core , fileproject )"		4320508	1					
ANR	4321103	Callee	r_core_project_notes_file		4320508	0					
ANR	4321104	Identifier	r_core_project_notes_file		4320508	0					
ANR	4321105	ArgumentList	core		4320508	1					
ANR	4321106	Argument	core		4320508	0					
ANR	4321107	Identifier	core		4320508	0					
ANR	4321108	Argument	fileproject		4320508	1					
ANR	4321109	Identifier	fileproject		4320508	0					
ANR	4321110	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	159:5:4070:4107	4320508	1	True				
ANR	4321111	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		4320508	0					
ANR	4321112	IdentifierDeclType	char *		4320508	0					
ANR	4321113	Identifier	data		4320508	1					
ANR	4321114	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		4320508	2		=			
ANR	4321115	Identifier	data		4320508	0					
ANR	4321116	CallExpression	"r_file_slurp ( str , NULL )"		4320508	1					
ANR	4321117	Callee	r_file_slurp		4320508	0					
ANR	4321118	Identifier	r_file_slurp		4320508	0					
ANR	4321119	ArgumentList	str		4320508	1					
ANR	4321120	Argument	str		4320508	0					
ANR	4321121	Identifier	str		4320508	0					
ANR	4321122	Argument	NULL		4320508	1					
ANR	4321123	Identifier	NULL		4320508	0					
ANR	4321124	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( str , ""a"" ) ;"	160:5:4114:4151	4320508	2	True				
ANR	4321125	IdentifierDecl	"* fd = r_sandbox_fopen ( str , ""a"" )"		4320508	0					
ANR	4321126	IdentifierDeclType	FILE *		4320508	0					
ANR	4321127	Identifier	fd		4320508	1					
ANR	4321128	AssignmentExpression	"* fd = r_sandbox_fopen ( str , ""a"" )"		4320508	2		=			
ANR	4321129	Identifier	fd		4320508	0					
ANR	4321130	CallExpression	"r_sandbox_fopen ( str , ""a"" )"		4320508	1					
ANR	4321131	Callee	r_sandbox_fopen		4320508	0					
ANR	4321132	Identifier	r_sandbox_fopen		4320508	0					
ANR	4321133	ArgumentList	str		4320508	1					
ANR	4321134	Argument	str		4320508	0					
ANR	4321135	Identifier	str		4320508	0					
ANR	4321136	Argument	"""a"""		4320508	1					
ANR	4321137	PrimaryExpression	"""a"""		4320508	0					
ANR	4321138	IfStatement	if ( fd )		4320508	3					
ANR	4321139	Condition	fd	161:9:4162:4163	4320508	0	True				
ANR	4321140	Identifier	fd		4320508	0					
ANR	4321141	CompoundStatement		119:13:2799:2799	4320508	1					
ANR	4321142	ExpressionStatement	"fprintf ( fd , ""%s\\n"" , input + 2 )"	162:6:4174:4205	4320508	0	True				
ANR	4321143	CallExpression	"fprintf ( fd , ""%s\\n"" , input + 2 )"		4320508	0					
ANR	4321144	Callee	fprintf		4320508	0					
ANR	4321145	Identifier	fprintf		4320508	0					
ANR	4321146	ArgumentList	fd		4320508	1					
ANR	4321147	Argument	fd		4320508	0					
ANR	4321148	Identifier	fd		4320508	0					
ANR	4321149	Argument	"""%s\\n"""		4320508	1					
ANR	4321150	PrimaryExpression	"""%s\\n"""		4320508	0					
ANR	4321151	Argument	input + 2		4320508	2					
ANR	4321152	AdditiveExpression	input + 2		4320508	0		+			
ANR	4321153	Identifier	input		4320508	0					
ANR	4321154	PrimaryExpression	2		4320508	1					
ANR	4321155	ExpressionStatement	fclose ( fd )	163:6:4213:4224	4320508	1	True				
ANR	4321156	CallExpression	fclose ( fd )		4320508	0					
ANR	4321157	Callee	fclose		4320508	0					
ANR	4321158	Identifier	fclose		4320508	0					
ANR	4321159	ArgumentList	fd		4320508	1					
ANR	4321160	Argument	fd		4320508	0					
ANR	4321161	Identifier	fd		4320508	0					
ANR	4321162	ExpressionStatement	free ( str )	165:5:4238:4248	4320508	4	True				
ANR	4321163	CallExpression	free ( str )		4320508	0					
ANR	4321164	Callee	free		4320508	0					
ANR	4321165	Identifier	free		4320508	0					
ANR	4321166	ArgumentList	str		4320508	1					
ANR	4321167	Argument	str		4320508	0					
ANR	4321168	Identifier	str		4320508	0					
ANR	4321169	ExpressionStatement	free ( data )	166:5:4255:4266	4320508	5	True				
ANR	4321170	CallExpression	free ( data )		4320508	0					
ANR	4321171	Callee	free		4320508	0					
ANR	4321172	Identifier	free		4320508	0					
ANR	4321173	ArgumentList	data		4320508	1					
ANR	4321174	Argument	data		4320508	0					
ANR	4321175	Identifier	data		4320508	0					
ANR	4321176	BreakStatement	break ;	168:4:4278:4283	4320508	5	True				
ANR	4321177	Label	case '+' :	169:3:4288:4296	4320508	6	True				
ANR	4321178	CompoundStatement		130:5:3015:3052	4320508	7					
ANR	4321179	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	171:5:4318:4375	4320508	0	True				
ANR	4321180	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	0					
ANR	4321181	IdentifierDeclType	char *		4320508	0					
ANR	4321182	Identifier	str		4320508	1					
ANR	4321183	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	2		=			
ANR	4321184	Identifier	str		4320508	0					
ANR	4321185	CallExpression	"r_core_project_notes_file ( core , fileproject )"		4320508	1					
ANR	4321186	Callee	r_core_project_notes_file		4320508	0					
ANR	4321187	Identifier	r_core_project_notes_file		4320508	0					
ANR	4321188	ArgumentList	core		4320508	1					
ANR	4321189	Argument	core		4320508	0					
ANR	4321190	Identifier	core		4320508	0					
ANR	4321191	Argument	fileproject		4320508	1					
ANR	4321192	Identifier	fileproject		4320508	0					
ANR	4321193	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	172:5:4382:4419	4320508	1	True				
ANR	4321194	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		4320508	0					
ANR	4321195	IdentifierDeclType	char *		4320508	0					
ANR	4321196	Identifier	data		4320508	1					
ANR	4321197	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		4320508	2		=			
ANR	4321198	Identifier	data		4320508	0					
ANR	4321199	CallExpression	"r_file_slurp ( str , NULL )"		4320508	1					
ANR	4321200	Callee	r_file_slurp		4320508	0					
ANR	4321201	Identifier	r_file_slurp		4320508	0					
ANR	4321202	ArgumentList	str		4320508	1					
ANR	4321203	Argument	str		4320508	0					
ANR	4321204	Identifier	str		4320508	0					
ANR	4321205	Argument	NULL		4320508	1					
ANR	4321206	Identifier	NULL		4320508	0					
ANR	4321207	ExpressionStatement	"data = r_str_append ( data , input + 2 )"	173:5:4426:4463	4320508	2	True				
ANR	4321208	AssignmentExpression	"data = r_str_append ( data , input + 2 )"		4320508	0		=			
ANR	4321209	Identifier	data		4320508	0					
ANR	4321210	CallExpression	"r_str_append ( data , input + 2 )"		4320508	1					
ANR	4321211	Callee	r_str_append		4320508	0					
ANR	4321212	Identifier	r_str_append		4320508	0					
ANR	4321213	ArgumentList	data		4320508	1					
ANR	4321214	Argument	data		4320508	0					
ANR	4321215	Identifier	data		4320508	0					
ANR	4321216	Argument	input + 2		4320508	1					
ANR	4321217	AdditiveExpression	input + 2		4320508	0		+			
ANR	4321218	Identifier	input		4320508	0					
ANR	4321219	PrimaryExpression	2		4320508	1					
ANR	4321220	ExpressionStatement	"data = r_str_append ( data , ""\\n"" )"	174:5:4470:4502	4320508	3	True				
ANR	4321221	AssignmentExpression	"data = r_str_append ( data , ""\\n"" )"		4320508	0		=			
ANR	4321222	Identifier	data		4320508	0					
ANR	4321223	CallExpression	"r_str_append ( data , ""\\n"" )"		4320508	1					
ANR	4321224	Callee	r_str_append		4320508	0					
ANR	4321225	Identifier	r_str_append		4320508	0					
ANR	4321226	ArgumentList	data		4320508	1					
ANR	4321227	Argument	data		4320508	0					
ANR	4321228	Identifier	data		4320508	0					
ANR	4321229	Argument	"""\\n"""		4320508	1					
ANR	4321230	PrimaryExpression	"""\\n"""		4320508	0					
ANR	4321231	ExpressionStatement	"r_file_dump ( str , ( const ut8 * ) data , strlen ( data ) , false )"	175:5:4509:4566	4320508	4	True				
ANR	4321232	CallExpression	"r_file_dump ( str , ( const ut8 * ) data , strlen ( data ) , false )"		4320508	0					
ANR	4321233	Callee	r_file_dump		4320508	0					
ANR	4321234	Identifier	r_file_dump		4320508	0					
ANR	4321235	ArgumentList	str		4320508	1					
ANR	4321236	Argument	str		4320508	0					
ANR	4321237	Identifier	str		4320508	0					
ANR	4321238	Argument	( const ut8 * ) data		4320508	1					
ANR	4321239	CastExpression	( const ut8 * ) data		4320508	0					
ANR	4321240	CastTarget	const ut8 *		4320508	0					
ANR	4321241	Identifier	data		4320508	1					
ANR	4321242	Argument	strlen ( data )		4320508	2					
ANR	4321243	CallExpression	strlen ( data )		4320508	0					
ANR	4321244	Callee	strlen		4320508	0					
ANR	4321245	Identifier	strlen		4320508	0					
ANR	4321246	ArgumentList	data		4320508	1					
ANR	4321247	Argument	data		4320508	0					
ANR	4321248	Identifier	data		4320508	0					
ANR	4321249	Argument	false		4320508	3					
ANR	4321250	Identifier	false		4320508	0					
ANR	4321251	ExpressionStatement	free ( data )	176:5:4573:4584	4320508	5	True				
ANR	4321252	CallExpression	free ( data )		4320508	0					
ANR	4321253	Callee	free		4320508	0					
ANR	4321254	Identifier	free		4320508	0					
ANR	4321255	ArgumentList	data		4320508	1					
ANR	4321256	Argument	data		4320508	0					
ANR	4321257	Identifier	data		4320508	0					
ANR	4321258	ExpressionStatement	free ( str )	177:5:4591:4601	4320508	6	True				
ANR	4321259	CallExpression	free ( str )		4320508	0					
ANR	4321260	Callee	free		4320508	0					
ANR	4321261	Identifier	free		4320508	0					
ANR	4321262	ArgumentList	str		4320508	1					
ANR	4321263	Argument	str		4320508	0					
ANR	4321264	Identifier	str		4320508	0					
ANR	4321265	BreakStatement	break ;	179:4:4613:4618	4320508	8	True				
ANR	4321266	Label	case 'j' :	180:3:4623:4631	4320508	9	True				
ANR	4321267	IfStatement	if ( ! input [ 2 ] )		4320508	10					
ANR	4321268	Condition	! input [ 2 ]	181:8:4650:4658	4320508	0	True				
ANR	4321269	UnaryOperationExpression	! input [ 2 ]		4320508	0					
ANR	4321270	UnaryOperator	!		4320508	0					
ANR	4321271	ArrayIndexing	input [ 2 ]		4320508	1					
ANR	4321272	Identifier	input		4320508	0					
ANR	4321273	PrimaryExpression	2		4320508	1					
ANR	4321274	CompoundStatement		142:5:3348:3405	4320508	1					
ANR	4321275	IdentifierDeclStatement	int len = 0 ;	182:5:4668:4679	4320508	0	True				
ANR	4321276	IdentifierDecl	len = 0		4320508	0					
ANR	4321277	IdentifierDeclType	int		4320508	0					
ANR	4321278	Identifier	len		4320508	1					
ANR	4321279	AssignmentExpression	len = 0		4320508	2		=			
ANR	4321280	Identifier	len		4320508	0					
ANR	4321281	PrimaryExpression	0		4320508	1					
ANR	4321282	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	184:5:4715:4772	4320508	1	True				
ANR	4321283	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	0					
ANR	4321284	IdentifierDeclType	char *		4320508	0					
ANR	4321285	Identifier	str		4320508	1					
ANR	4321286	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	2		=			
ANR	4321287	Identifier	str		4320508	0					
ANR	4321288	CallExpression	"r_core_project_notes_file ( core , fileproject )"		4320508	1					
ANR	4321289	Callee	r_core_project_notes_file		4320508	0					
ANR	4321290	Identifier	r_core_project_notes_file		4320508	0					
ANR	4321291	ArgumentList	core		4320508	1					
ANR	4321292	Argument	core		4320508	0					
ANR	4321293	Identifier	core		4320508	0					
ANR	4321294	Argument	fileproject		4320508	1					
ANR	4321295	Identifier	fileproject		4320508	0					
ANR	4321296	IfStatement	if ( str )		4320508	2					
ANR	4321297	Condition	str	185:9:4783:4785	4320508	0	True				
ANR	4321298	Identifier	str		4320508	0					
ANR	4321299	CompoundStatement		145:6:3474:3517	4320508	1					
ANR	4321300	IdentifierDeclStatement	"char * data = r_file_slurp ( str , & len ) ;"	186:6:4796:4833	4320508	0	True				
ANR	4321301	IdentifierDecl	"* data = r_file_slurp ( str , & len )"		4320508	0					
ANR	4321302	IdentifierDeclType	char *		4320508	0					
ANR	4321303	Identifier	data		4320508	1					
ANR	4321304	AssignmentExpression	"* data = r_file_slurp ( str , & len )"		4320508	2		=			
ANR	4321305	Identifier	data		4320508	0					
ANR	4321306	CallExpression	"r_file_slurp ( str , & len )"		4320508	1					
ANR	4321307	Callee	r_file_slurp		4320508	0					
ANR	4321308	Identifier	r_file_slurp		4320508	0					
ANR	4321309	ArgumentList	str		4320508	1					
ANR	4321310	Argument	str		4320508	0					
ANR	4321311	Identifier	str		4320508	0					
ANR	4321312	Argument	& len		4320508	1					
ANR	4321313	UnaryOperationExpression	& len		4320508	0					
ANR	4321314	UnaryOperator	&		4320508	0					
ANR	4321315	Identifier	len		4320508	1					
ANR	4321316	IdentifierDeclStatement	"char * res = r_base64_encode_dyn ( data , len ) ;"	187:6:4841:4884	4320508	1	True				
ANR	4321317	IdentifierDecl	"* res = r_base64_encode_dyn ( data , len )"		4320508	0					
ANR	4321318	IdentifierDeclType	char *		4320508	0					
ANR	4321319	Identifier	res		4320508	1					
ANR	4321320	AssignmentExpression	"* res = r_base64_encode_dyn ( data , len )"		4320508	2		=			
ANR	4321321	Identifier	res		4320508	0					
ANR	4321322	CallExpression	"r_base64_encode_dyn ( data , len )"		4320508	1					
ANR	4321323	Callee	r_base64_encode_dyn		4320508	0					
ANR	4321324	Identifier	r_base64_encode_dyn		4320508	0					
ANR	4321325	ArgumentList	data		4320508	1					
ANR	4321326	Argument	data		4320508	0					
ANR	4321327	Identifier	data		4320508	0					
ANR	4321328	Argument	len		4320508	1					
ANR	4321329	Identifier	len		4320508	0					
ANR	4321330	IfStatement	if ( res )		4320508	2					
ANR	4321331	Condition	res	188:10:4896:4898	4320508	0	True				
ANR	4321332	Identifier	res		4320508	0					
ANR	4321333	CompoundStatement		146:15:3534:3534	4320508	1					
ANR	4321334	ExpressionStatement	r_cons_println ( res )	189:7:4910:4930	4320508	0	True				
ANR	4321335	CallExpression	r_cons_println ( res )		4320508	0					
ANR	4321336	Callee	r_cons_println		4320508	0					
ANR	4321337	Identifier	r_cons_println		4320508	0					
ANR	4321338	ArgumentList	res		4320508	1					
ANR	4321339	Argument	res		4320508	0					
ANR	4321340	Identifier	res		4320508	0					
ANR	4321341	ExpressionStatement	free ( res )	190:7:4939:4949	4320508	1	True				
ANR	4321342	CallExpression	free ( res )		4320508	0					
ANR	4321343	Callee	free		4320508	0					
ANR	4321344	Identifier	free		4320508	0					
ANR	4321345	ArgumentList	res		4320508	1					
ANR	4321346	Argument	res		4320508	0					
ANR	4321347	Identifier	res		4320508	0					
ANR	4321348	ExpressionStatement	free ( data )	192:6:4965:4976	4320508	3	True				
ANR	4321349	CallExpression	free ( data )		4320508	0					
ANR	4321350	Callee	free		4320508	0					
ANR	4321351	Identifier	free		4320508	0					
ANR	4321352	ArgumentList	data		4320508	1					
ANR	4321353	Argument	data		4320508	0					
ANR	4321354	Identifier	data		4320508	0					
ANR	4321355	ExpressionStatement	free ( str )	193:6:4984:4994	4320508	4	True				
ANR	4321356	CallExpression	free ( str )		4320508	0					
ANR	4321357	Callee	free		4320508	0					
ANR	4321358	Identifier	free		4320508	0					
ANR	4321359	ArgumentList	str		4320508	1					
ANR	4321360	Argument	str		4320508	0					
ANR	4321361	Identifier	str		4320508	0					
ANR	4321362	ElseStatement	else		4320508	0					
ANR	4321363	IfStatement	if ( input [ 2 ] == ' ' )		4320508	0					
ANR	4321364	Condition	input [ 2 ] == ' '	195:15:5018:5032	4320508	0	True				
ANR	4321365	EqualityExpression	input [ 2 ] == ' '		4320508	0		==			
ANR	4321366	ArrayIndexing	input [ 2 ]		4320508	0					
ANR	4321367	Identifier	input		4320508	0					
ANR	4321368	PrimaryExpression	2		4320508	1					
ANR	4321369	PrimaryExpression	' '		4320508	1					
ANR	4321370	CompoundStatement		155:5:3704:3751	4320508	1					
ANR	4321371	IdentifierDeclStatement	"ut8 * data = r_base64_decode_dyn ( input + 3 , - 1 ) ;"	197:5:5071:5118	4320508	0	True				
ANR	4321372	IdentifierDecl	"* data = r_base64_decode_dyn ( input + 3 , - 1 )"		4320508	0					
ANR	4321373	IdentifierDeclType	ut8 *		4320508	0					
ANR	4321374	Identifier	data		4320508	1					
ANR	4321375	AssignmentExpression	"* data = r_base64_decode_dyn ( input + 3 , - 1 )"		4320508	2		=			
ANR	4321376	Identifier	data		4320508	0					
ANR	4321377	CallExpression	"r_base64_decode_dyn ( input + 3 , - 1 )"		4320508	1					
ANR	4321378	Callee	r_base64_decode_dyn		4320508	0					
ANR	4321379	Identifier	r_base64_decode_dyn		4320508	0					
ANR	4321380	ArgumentList	input + 3		4320508	1					
ANR	4321381	Argument	input + 3		4320508	0					
ANR	4321382	AdditiveExpression	input + 3		4320508	0		+			
ANR	4321383	Identifier	input		4320508	0					
ANR	4321384	PrimaryExpression	3		4320508	1					
ANR	4321385	Argument	- 1		4320508	1					
ANR	4321386	UnaryOperationExpression	- 1		4320508	0					
ANR	4321387	UnaryOperator	-		4320508	0					
ANR	4321388	PrimaryExpression	1		4320508	1					
ANR	4321389	IfStatement	if ( data )		4320508	1					
ANR	4321390	Condition	data	198:9:5129:5132	4320508	0	True				
ANR	4321391	Identifier	data		4320508	0					
ANR	4321392	CompoundStatement		157:6:3776:3833	4320508	1					
ANR	4321393	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	199:6:5143:5200	4320508	0	True				
ANR	4321394	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	0					
ANR	4321395	IdentifierDeclType	char *		4320508	0					
ANR	4321396	Identifier	str		4320508	1					
ANR	4321397	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	2		=			
ANR	4321398	Identifier	str		4320508	0					
ANR	4321399	CallExpression	"r_core_project_notes_file ( core , fileproject )"		4320508	1					
ANR	4321400	Callee	r_core_project_notes_file		4320508	0					
ANR	4321401	Identifier	r_core_project_notes_file		4320508	0					
ANR	4321402	ArgumentList	core		4320508	1					
ANR	4321403	Argument	core		4320508	0					
ANR	4321404	Identifier	core		4320508	0					
ANR	4321405	Argument	fileproject		4320508	1					
ANR	4321406	Identifier	fileproject		4320508	0					
ANR	4321407	IfStatement	if ( str )		4320508	1					
ANR	4321408	Condition	str	200:10:5212:5214	4320508	0	True				
ANR	4321409	Identifier	str		4320508	0					
ANR	4321410	CompoundStatement		158:15:3850:3850	4320508	1					
ANR	4321411	ExpressionStatement	"r_file_dump ( str , data , strlen ( ( const char * ) data ) , 0 )"	201:7:5226:5282	4320508	0	True				
ANR	4321412	CallExpression	"r_file_dump ( str , data , strlen ( ( const char * ) data ) , 0 )"		4320508	0					
ANR	4321413	Callee	r_file_dump		4320508	0					
ANR	4321414	Identifier	r_file_dump		4320508	0					
ANR	4321415	ArgumentList	str		4320508	1					
ANR	4321416	Argument	str		4320508	0					
ANR	4321417	Identifier	str		4320508	0					
ANR	4321418	Argument	data		4320508	1					
ANR	4321419	Identifier	data		4320508	0					
ANR	4321420	Argument	strlen ( ( const char * ) data )		4320508	2					
ANR	4321421	CallExpression	strlen ( ( const char * ) data )		4320508	0					
ANR	4321422	Callee	strlen		4320508	0					
ANR	4321423	Identifier	strlen		4320508	0					
ANR	4321424	ArgumentList	( const char * ) data		4320508	1					
ANR	4321425	Argument	( const char * ) data		4320508	0					
ANR	4321426	CastExpression	( const char * ) data		4320508	0					
ANR	4321427	CastTarget	const char *		4320508	0					
ANR	4321428	Identifier	data		4320508	1					
ANR	4321429	Argument	0		4320508	3					
ANR	4321430	PrimaryExpression	0		4320508	0					
ANR	4321431	ExpressionStatement	free ( str )	202:7:5291:5301	4320508	1	True				
ANR	4321432	CallExpression	free ( str )		4320508	0					
ANR	4321433	Callee	free		4320508	0					
ANR	4321434	Identifier	free		4320508	0					
ANR	4321435	ArgumentList	str		4320508	1					
ANR	4321436	Argument	str		4320508	0					
ANR	4321437	Identifier	str		4320508	0					
ANR	4321438	ExpressionStatement	free ( data )	204:6:5317:5328	4320508	2	True				
ANR	4321439	CallExpression	free ( data )		4320508	0					
ANR	4321440	Callee	free		4320508	0					
ANR	4321441	Identifier	free		4320508	0					
ANR	4321442	ArgumentList	data		4320508	1					
ANR	4321443	Argument	data		4320508	0					
ANR	4321444	Identifier	data		4320508	0					
ANR	4321445	ElseStatement	else		4320508	0					
ANR	4321446	CompoundStatement		164:11:3981:3981	4320508	0					
ANR	4321447	ExpressionStatement	"eprintf ( ""Usage: `Pnj` or `Pnj ...`\\n"" )"	207:5:5355:5394	4320508	0	True				
ANR	4321448	CallExpression	"eprintf ( ""Usage: `Pnj` or `Pnj ...`\\n"" )"		4320508	0					
ANR	4321449	Callee	eprintf		4320508	0					
ANR	4321450	Identifier	eprintf		4320508	0					
ANR	4321451	ArgumentList	"""Usage: `Pnj` or `Pnj ...`\\n"""		4320508	1					
ANR	4321452	Argument	"""Usage: `Pnj` or `Pnj ...`\\n"""		4320508	0					
ANR	4321453	PrimaryExpression	"""Usage: `Pnj` or `Pnj ...`\\n"""		4320508	0					
ANR	4321454	BreakStatement	break ;	209:4:5406:5411	4320508	11	True				
ANR	4321455	Label	case 'x' :	210:3:5416:5424	4320508	12	True				
ANR	4321456	ExpressionStatement	"r_core_project_execute_cmds ( core , fileproject )"	211:4:5439:5486	4320508	13	True				
ANR	4321457	CallExpression	"r_core_project_execute_cmds ( core , fileproject )"		4320508	0					
ANR	4321458	Callee	r_core_project_execute_cmds		4320508	0					
ANR	4321459	Identifier	r_core_project_execute_cmds		4320508	0					
ANR	4321460	ArgumentList	core		4320508	1					
ANR	4321461	Argument	core		4320508	0					
ANR	4321462	Identifier	core		4320508	0					
ANR	4321463	Argument	fileproject		4320508	1					
ANR	4321464	Identifier	fileproject		4320508	0					
ANR	4321465	BreakStatement	break ;	212:4:5492:5497	4320508	14	True				
ANR	4321466	Label	case 0 :	213:3:5502:5508	4320508	15	True				
ANR	4321467	CompoundStatement		174:4:4223:4260	4320508	16					
ANR	4321468	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	215:4:5527:5584	4320508	0	True				
ANR	4321469	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	0					
ANR	4321470	IdentifierDeclType	char *		4320508	0					
ANR	4321471	Identifier	str		4320508	1					
ANR	4321472	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		4320508	2		=			
ANR	4321473	Identifier	str		4320508	0					
ANR	4321474	CallExpression	"r_core_project_notes_file ( core , fileproject )"		4320508	1					
ANR	4321475	Callee	r_core_project_notes_file		4320508	0					
ANR	4321476	Identifier	r_core_project_notes_file		4320508	0					
ANR	4321477	ArgumentList	core		4320508	1					
ANR	4321478	Argument	core		4320508	0					
ANR	4321479	Identifier	core		4320508	0					
ANR	4321480	Argument	fileproject		4320508	1					
ANR	4321481	Identifier	fileproject		4320508	0					
ANR	4321482	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	216:4:5590:5627	4320508	1	True				
ANR	4321483	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		4320508	0					
ANR	4321484	IdentifierDeclType	char *		4320508	0					
ANR	4321485	Identifier	data		4320508	1					
ANR	4321486	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		4320508	2		=			
ANR	4321487	Identifier	data		4320508	0					
ANR	4321488	CallExpression	"r_file_slurp ( str , NULL )"		4320508	1					
ANR	4321489	Callee	r_file_slurp		4320508	0					
ANR	4321490	Identifier	r_file_slurp		4320508	0					
ANR	4321491	ArgumentList	str		4320508	1					
ANR	4321492	Argument	str		4320508	0					
ANR	4321493	Identifier	str		4320508	0					
ANR	4321494	Argument	NULL		4320508	1					
ANR	4321495	Identifier	NULL		4320508	0					
ANR	4321496	IfStatement	if ( data )		4320508	2					
ANR	4321497	Condition	data	217:8:5637:5640	4320508	0	True				
ANR	4321498	Identifier	data		4320508	0					
ANR	4321499	CompoundStatement		175:14:4276:4276	4320508	1					
ANR	4321500	ExpressionStatement	r_cons_println ( data )	218:5:5650:5671	4320508	0	True				
ANR	4321501	CallExpression	r_cons_println ( data )		4320508	0					
ANR	4321502	Callee	r_cons_println		4320508	0					
ANR	4321503	Identifier	r_cons_println		4320508	0					
ANR	4321504	ArgumentList	data		4320508	1					
ANR	4321505	Argument	data		4320508	0					
ANR	4321506	Identifier	data		4320508	0					
ANR	4321507	ExpressionStatement	free ( data )	219:5:5678:5689	4320508	1	True				
ANR	4321508	CallExpression	free ( data )		4320508	0					
ANR	4321509	Callee	free		4320508	0					
ANR	4321510	Identifier	free		4320508	0					
ANR	4321511	ArgumentList	data		4320508	1					
ANR	4321512	Argument	data		4320508	0					
ANR	4321513	Identifier	data		4320508	0					
ANR	4321514	ExpressionStatement	free ( str )	221:4:5701:5711	4320508	3	True				
ANR	4321515	CallExpression	free ( str )		4320508	0					
ANR	4321516	Callee	free		4320508	0					
ANR	4321517	Identifier	free		4320508	0					
ANR	4321518	ArgumentList	str		4320508	1					
ANR	4321519	Argument	str		4320508	0					
ANR	4321520	Identifier	str		4320508	0					
ANR	4321521	BreakStatement	break ;	223:3:5721:5726	4320508	17	True				
ANR	4321522	BreakStatement	break ;	226:2:5739:5744	4320508	19	True				
ANR	4321523	Label	case 'i' :	227:1:5747:5755	4320508	20	True				
ANR	4321524	IfStatement	if ( file && * file )		4320508	21					
ANR	4321525	Condition	file && * file	228:6:5763:5775	4320508	0	True				
ANR	4321526	AndExpression	file && * file		4320508	0		&&			
ANR	4321527	Identifier	file		4320508	0					
ANR	4321528	UnaryOperationExpression	* file		4320508	1					
ANR	4321529	UnaryOperator	*		4320508	0					
ANR	4321530	Identifier	file		4320508	1					
ANR	4321531	CompoundStatement		187:3:4416:4464	4320508	1					
ANR	4321532	IdentifierDeclStatement	"char * prjName = r_core_project_info ( core , file ) ;"	229:3:5783:5831	4320508	0	True				
ANR	4321533	IdentifierDecl	"* prjName = r_core_project_info ( core , file )"		4320508	0					
ANR	4321534	IdentifierDeclType	char *		4320508	0					
ANR	4321535	Identifier	prjName		4320508	1					
ANR	4321536	AssignmentExpression	"* prjName = r_core_project_info ( core , file )"		4320508	2		=			
ANR	4321537	Identifier	prjName		4320508	0					
ANR	4321538	CallExpression	"r_core_project_info ( core , file )"		4320508	1					
ANR	4321539	Callee	r_core_project_info		4320508	0					
ANR	4321540	Identifier	r_core_project_info		4320508	0					
ANR	4321541	ArgumentList	core		4320508	1					
ANR	4321542	Argument	core		4320508	0					
ANR	4321543	Identifier	core		4320508	0					
ANR	4321544	Argument	file		4320508	1					
ANR	4321545	Identifier	file		4320508	0					
ANR	4321546	ExpressionStatement	r_cons_println ( prjName )	230:3:5836:5860	4320508	1	True				
ANR	4321547	CallExpression	r_cons_println ( prjName )		4320508	0					
ANR	4321548	Callee	r_cons_println		4320508	0					
ANR	4321549	Identifier	r_cons_println		4320508	0					
ANR	4321550	ArgumentList	prjName		4320508	1					
ANR	4321551	Argument	prjName		4320508	0					
ANR	4321552	Identifier	prjName		4320508	0					
ANR	4321553	ExpressionStatement	free ( prjName )	231:3:5865:5879	4320508	2	True				
ANR	4321554	CallExpression	free ( prjName )		4320508	0					
ANR	4321555	Callee	free		4320508	0					
ANR	4321556	Identifier	free		4320508	0					
ANR	4321557	ArgumentList	prjName		4320508	1					
ANR	4321558	Argument	prjName		4320508	0					
ANR	4321559	Identifier	prjName		4320508	0					
ANR	4321560	BreakStatement	break ;	233:2:5887:5892	4320508	22	True				
ANR	4321561	Label	case 0 :	234:1:5895:5901	4320508	23	True				
ANR	4321562	Label	case 'j' :	235:1:5904:5912	4320508	24	True				
ANR	4321563	ExpressionStatement	"r_core_project_list ( core , input [ 0 ] )"	236:2:5916:5952	4320508	25	True				
ANR	4321564	CallExpression	"r_core_project_list ( core , input [ 0 ] )"		4320508	0					
ANR	4321565	Callee	r_core_project_list		4320508	0					
ANR	4321566	Identifier	r_core_project_list		4320508	0					
ANR	4321567	ArgumentList	core		4320508	1					
ANR	4321568	Argument	core		4320508	0					
ANR	4321569	Identifier	core		4320508	0					
ANR	4321570	Argument	input [ 0 ]		4320508	1					
ANR	4321571	ArrayIndexing	input [ 0 ]		4320508	0					
ANR	4321572	Identifier	input		4320508	0					
ANR	4321573	PrimaryExpression	0		4320508	1					
ANR	4321574	BreakStatement	break ;	237:2:5956:5961	4320508	26	True				
ANR	4321575	Label	default :	238:1:5964:5971	4320508	27	True				
ANR	4321576	Identifier	default		4320508	0					
ANR	4321577	ExpressionStatement	"r_core_cmd_help ( core , help_msg_P )"	239:2:5975:6009	4320508	28	True				
ANR	4321578	CallExpression	"r_core_cmd_help ( core , help_msg_P )"		4320508	0					
ANR	4321579	Callee	r_core_cmd_help		4320508	0					
ANR	4321580	Identifier	r_core_cmd_help		4320508	0					
ANR	4321581	ArgumentList	core		4320508	1					
ANR	4321582	Argument	core		4320508	0					
ANR	4321583	Identifier	core		4320508	0					
ANR	4321584	Argument	help_msg_P		4320508	1					
ANR	4321585	Identifier	help_msg_P		4320508	0					
ANR	4321586	BreakStatement	break ;	240:2:6013:6018	4320508	29	True				
ANR	4321587	ExpressionStatement	free ( str )	242:1:6024:6034	4320508	10	True				
ANR	4321588	CallExpression	free ( str )		4320508	0					
ANR	4321589	Callee	free		4320508	0					
ANR	4321590	Identifier	free		4320508	0					
ANR	4321591	ArgumentList	str		4320508	1					
ANR	4321592	Argument	str		4320508	0					
ANR	4321593	Identifier	str		4320508	0					
ANR	4321594	ReturnStatement	return true ;	243:1:6037:6048	4320508	11	True				
ANR	4321595	Identifier	true		4320508	0					
ANR	4321596	ReturnType	static int		4320508	1					
ANR	4321597	Identifier	cmd_project		4320508	2					
ANR	4321598	ParameterList	"void * data , const char * input"		4320508	3					
ANR	4321599	Parameter	void * data	43:23:1335:1344	4320508	0	True				
ANR	4321600	ParameterType	void *		4320508	0					
ANR	4321601	Identifier	data		4320508	1					
ANR	4321602	Parameter	const char * input	43:35:1347:1363	4320508	1	True				
ANR	4321603	ParameterType	const char *		4320508	0					
ANR	4321604	Identifier	input		4320508	1					
ANR	4321605	CFGEntryNode	ENTRY		4320508		True				
ANR	4321606	CFGExitNode	EXIT		4320508		True				
ANR	4321607	Symbol	r_str_append		4320508						
ANR	4321608	Symbol	data		4320508						
ANR	4321609	Symbol	* core		4320508						
ANR	4321610	Symbol	r_config_get		4320508						
ANR	4321611	Symbol	* input		4320508						
ANR	4321612	Symbol	strchr		4320508						
ANR	4321613	Symbol	del		4320508						
ANR	4321614	Symbol	strlen		4320508						
ANR	4321615	Symbol	r_base64_encode_dyn		4320508						
ANR	4321616	Symbol	file		4320508						
ANR	4321617	Symbol	len		4320508						
ANR	4321618	Symbol	R_CORE_PRJ_ALL		4320508						
ANR	4321619	Symbol	arg		4320508						
ANR	4321620	Symbol	fileproject		4320508						
ANR	4321621	Symbol	* str		4320508						
ANR	4321622	Symbol	* fileproject		4320508						
ANR	4321623	Symbol	core -> config		4320508						
ANR	4321624	Symbol	editor		4320508						
ANR	4321625	Symbol	res		4320508						
ANR	4321626	Symbol	r_file_slurp		4320508						
ANR	4321627	Symbol	NULL		4320508						
ANR	4321628	Symbol	help_msg_Pn		4320508						
ANR	4321629	Symbol	r_base64_decode_dyn		4320508						
ANR	4321630	Symbol	r_core_project_info		4320508						
ANR	4321631	Symbol	* editor		4320508						
ANR	4321632	Symbol	false		4320508						
ANR	4321633	Symbol	* file		4320508						
ANR	4321634	Symbol	* nl ++		4320508						
ANR	4321635	Symbol	prjName		4320508						
ANR	4321636	Symbol	ptr		4320508						
ANR	4321637	Symbol	str		4320508						
ANR	4321638	Symbol	input		4320508						
ANR	4321639	Symbol	core		4320508						
ANR	4321640	Symbol	r_core_project_save		4320508						
ANR	4321641	Symbol	help_msg_P		4320508						
ANR	4321642	Symbol	strstr		4320508						
ANR	4321643	Symbol	true		4320508						
ANR	4321644	Symbol	r_sandbox_fopen		4320508						
ANR	4321645	Symbol	strdup		4320508						
ANR	4321646	Symbol	& len		4320508						
ANR	4321647	Symbol	fd		4320508						
ANR	4321648	Symbol	nl		4320508						
ANR	4321649	Symbol	* arg		4320508						
ANR	4321650	Symbol	r_core_project_notes_file		4320508						
