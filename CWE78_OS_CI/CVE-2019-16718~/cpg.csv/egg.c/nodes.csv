command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1300451	File	data/converged/CVE-2019-16718~_radare2/egg.c								
ANR	1300452	DeclStmt									
ANR	1300453	Decl							include < config . h >	include < config . h > ( r_egg )	R_LIB_VERSION
ANR	1300454	DeclStmt									
ANR	1300455	Decl							extern REggEmit	extern REggEmit	emit_x86
ANR	1300456	DeclStmt									
ANR	1300457	Decl							extern REggEmit	extern REggEmit	emit_x64
ANR	1300458	DeclStmt									
ANR	1300459	Decl							extern REggEmit	extern REggEmit	emit_arm
ANR	1300460	DeclStmt									
ANR	1300461	Decl							extern REggEmit	extern REggEmit	emit_trace
ANR	1300462	DeclStmt									
ANR	1300463	Decl							REggPlugin	REggPlugin * [ ]	egg_static_plugins
ANR	1300464	ClassDef	egg_patch_t	17:0:319:363							
ANR	1300465	DeclStmt									
ANR	1300466	Decl							RBuffer	RBuffer *	b
ANR	1300467	DeclStmt									
ANR	1300468	Decl							int	int	off
ANR	1300469	Function	egg_patch_free	22:0:367:483							
ANR	1300470	FunctionDef	egg_patch_free (void * p)		1300469	0					
ANR	1300471	CompoundStatement		22:30:397:483	1300469	0					
ANR	1300472	IdentifierDeclStatement	struct egg_patch_t * ep = ( struct egg_patch_t * ) p ;	23:1:400:448	1300469	0	True				
ANR	1300473	IdentifierDecl	* ep = ( struct egg_patch_t * ) p		1300469	0					
ANR	1300474	IdentifierDeclType	struct egg_patch_t *		1300469	0					
ANR	1300475	Identifier	ep		1300469	1					
ANR	1300476	AssignmentExpression	* ep = ( struct egg_patch_t * ) p		1300469	2		=			
ANR	1300477	Identifier	ep		1300469	0					
ANR	1300478	CastExpression	( struct egg_patch_t * ) p		1300469	1					
ANR	1300479	CastTarget	struct egg_patch_t *		1300469	0					
ANR	1300480	Identifier	p		1300469	1					
ANR	1300481	ExpressionStatement	r_buf_free ( ep -> b )	24:1:451:469	1300469	1	True				
ANR	1300482	CallExpression	r_buf_free ( ep -> b )		1300469	0					
ANR	1300483	Callee	r_buf_free		1300469	0					
ANR	1300484	Identifier	r_buf_free		1300469	0					
ANR	1300485	ArgumentList	ep -> b		1300469	1					
ANR	1300486	Argument	ep -> b		1300469	0					
ANR	1300487	PtrMemberAccess	ep -> b		1300469	0					
ANR	1300488	Identifier	ep		1300469	0					
ANR	1300489	Identifier	b		1300469	1					
ANR	1300490	ExpressionStatement	free ( ep )	25:1:472:481	1300469	2	True				
ANR	1300491	CallExpression	free ( ep )		1300469	0					
ANR	1300492	Callee	free		1300469	0					
ANR	1300493	Identifier	free		1300469	0					
ANR	1300494	ArgumentList	ep		1300469	1					
ANR	1300495	Argument	ep		1300469	0					
ANR	1300496	Identifier	ep		1300469	0					
ANR	1300497	ReturnType	void		1300469	1					
ANR	1300498	Identifier	egg_patch_free		1300469	2					
ANR	1300499	ParameterList	void * p		1300469	3					
ANR	1300500	Parameter	void * p	22:21:388:394	1300469	0	True				
ANR	1300501	ParameterType	void *		1300469	0					
ANR	1300502	Identifier	p		1300469	1					
ANR	1300503	CFGEntryNode	ENTRY		1300469		True				
ANR	1300504	CFGExitNode	EXIT		1300469		True				
ANR	1300505	Symbol	p		1300469						
ANR	1300506	Symbol	* ep		1300469						
ANR	1300507	Symbol	ep -> b		1300469						
ANR	1300508	Symbol	ep		1300469						
ANR	1300509	Function	r_egg_new	28:0:486:1283							
ANR	1300510	FunctionDef	r_egg_new ()		1300509	0					
ANR	1300511	CompoundStatement		28:24:510:1283	1300509	0					
ANR	1300512	IdentifierDeclStatement	int i ;	29:1:513:518	1300509	0	True				
ANR	1300513	IdentifierDecl	i		1300509	0					
ANR	1300514	IdentifierDeclType	int		1300509	0					
ANR	1300515	Identifier	i		1300509	1					
ANR	1300516	IdentifierDeclStatement	REgg * egg = R_NEW0 ( REgg ) ;	30:1:521:546	1300509	1	True				
ANR	1300517	IdentifierDecl	* egg = R_NEW0 ( REgg )		1300509	0					
ANR	1300518	IdentifierDeclType	REgg *		1300509	0					
ANR	1300519	Identifier	egg		1300509	1					
ANR	1300520	AssignmentExpression	* egg = R_NEW0 ( REgg )		1300509	2		=			
ANR	1300521	Identifier	egg		1300509	0					
ANR	1300522	CallExpression	R_NEW0 ( REgg )		1300509	1					
ANR	1300523	Callee	R_NEW0		1300509	0					
ANR	1300524	Identifier	R_NEW0		1300509	0					
ANR	1300525	ArgumentList	REgg		1300509	1					
ANR	1300526	Argument	REgg		1300509	0					
ANR	1300527	Identifier	REgg		1300509	0					
ANR	1300528	IfStatement	if ( ! egg )		1300509	2					
ANR	1300529	Condition	! egg	31:5:553:556	1300509	0	True				
ANR	1300530	UnaryOperationExpression	! egg		1300509	0					
ANR	1300531	UnaryOperator	!		1300509	0					
ANR	1300532	Identifier	egg		1300509	1					
ANR	1300533	CompoundStatement		4:11:48:48	1300509	1					
ANR	1300534	ReturnStatement	return NULL ;	32:2:563:574	1300509	0	True				
ANR	1300535	Identifier	NULL		1300509	0					
ANR	1300536	ExpressionStatement	egg -> src = r_buf_new ( )	34:1:580:603	1300509	3	True				
ANR	1300537	AssignmentExpression	egg -> src = r_buf_new ( )		1300509	0		=			
ANR	1300538	PtrMemberAccess	egg -> src		1300509	0					
ANR	1300539	Identifier	egg		1300509	0					
ANR	1300540	Identifier	src		1300509	1					
ANR	1300541	CallExpression	r_buf_new ( )		1300509	1					
ANR	1300542	Callee	r_buf_new		1300509	0					
ANR	1300543	Identifier	r_buf_new		1300509	0					
ANR	1300544	ArgumentList			1300509	1					
ANR	1300545	IfStatement	if ( ! egg -> src )		1300509	4					
ANR	1300546	Condition	! egg -> src	35:5:610:618	1300509	0	True				
ANR	1300547	UnaryOperationExpression	! egg -> src		1300509	0					
ANR	1300548	UnaryOperator	!		1300509	0					
ANR	1300549	PtrMemberAccess	egg -> src		1300509	1					
ANR	1300550	Identifier	egg		1300509	0					
ANR	1300551	Identifier	src		1300509	1					
ANR	1300552	CompoundStatement		8:16:110:110	1300509	1					
ANR	1300553	GotoStatement	goto beach ;	36:2:625:635	1300509	0	True				
ANR	1300554	Identifier	beach		1300509	0					
ANR	1300555	ExpressionStatement	egg -> buf = r_buf_new ( )	38:1:641:664	1300509	5	True				
ANR	1300556	AssignmentExpression	egg -> buf = r_buf_new ( )		1300509	0		=			
ANR	1300557	PtrMemberAccess	egg -> buf		1300509	0					
ANR	1300558	Identifier	egg		1300509	0					
ANR	1300559	Identifier	buf		1300509	1					
ANR	1300560	CallExpression	r_buf_new ( )		1300509	1					
ANR	1300561	Callee	r_buf_new		1300509	0					
ANR	1300562	Identifier	r_buf_new		1300509	0					
ANR	1300563	ArgumentList			1300509	1					
ANR	1300564	IfStatement	if ( ! egg -> buf )		1300509	6					
ANR	1300565	Condition	! egg -> buf	39:5:671:679	1300509	0	True				
ANR	1300566	UnaryOperationExpression	! egg -> buf		1300509	0					
ANR	1300567	UnaryOperator	!		1300509	0					
ANR	1300568	PtrMemberAccess	egg -> buf		1300509	1					
ANR	1300569	Identifier	egg		1300509	0					
ANR	1300570	Identifier	buf		1300509	1					
ANR	1300571	CompoundStatement		12:16:171:171	1300509	1					
ANR	1300572	GotoStatement	goto beach ;	40:2:686:696	1300509	0	True				
ANR	1300573	Identifier	beach		1300509	0					
ANR	1300574	ExpressionStatement	egg -> bin = r_buf_new ( )	42:1:702:725	1300509	7	True				
ANR	1300575	AssignmentExpression	egg -> bin = r_buf_new ( )		1300509	0		=			
ANR	1300576	PtrMemberAccess	egg -> bin		1300509	0					
ANR	1300577	Identifier	egg		1300509	0					
ANR	1300578	Identifier	bin		1300509	1					
ANR	1300579	CallExpression	r_buf_new ( )		1300509	1					
ANR	1300580	Callee	r_buf_new		1300509	0					
ANR	1300581	Identifier	r_buf_new		1300509	0					
ANR	1300582	ArgumentList			1300509	1					
ANR	1300583	IfStatement	if ( ! egg -> bin )		1300509	8					
ANR	1300584	Condition	! egg -> bin	43:5:732:740	1300509	0	True				
ANR	1300585	UnaryOperationExpression	! egg -> bin		1300509	0					
ANR	1300586	UnaryOperator	!		1300509	0					
ANR	1300587	PtrMemberAccess	egg -> bin		1300509	1					
ANR	1300588	Identifier	egg		1300509	0					
ANR	1300589	Identifier	bin		1300509	1					
ANR	1300590	CompoundStatement		16:16:232:232	1300509	1					
ANR	1300591	GotoStatement	goto beach ;	44:2:747:757	1300509	0	True				
ANR	1300592	Identifier	beach		1300509	0					
ANR	1300593	ExpressionStatement	egg -> remit = & emit_x86	46:1:763:785	1300509	9	True				
ANR	1300594	AssignmentExpression	egg -> remit = & emit_x86		1300509	0		=			
ANR	1300595	PtrMemberAccess	egg -> remit		1300509	0					
ANR	1300596	Identifier	egg		1300509	0					
ANR	1300597	Identifier	remit		1300509	1					
ANR	1300598	UnaryOperationExpression	& emit_x86		1300509	1					
ANR	1300599	UnaryOperator	&		1300509	0					
ANR	1300600	Identifier	emit_x86		1300509	1					
ANR	1300601	ExpressionStatement	egg -> syscall = r_syscall_new ( )	47:1:788:819	1300509	10	True				
ANR	1300602	AssignmentExpression	egg -> syscall = r_syscall_new ( )		1300509	0		=			
ANR	1300603	PtrMemberAccess	egg -> syscall		1300509	0					
ANR	1300604	Identifier	egg		1300509	0					
ANR	1300605	Identifier	syscall		1300509	1					
ANR	1300606	CallExpression	r_syscall_new ( )		1300509	1					
ANR	1300607	Callee	r_syscall_new		1300509	0					
ANR	1300608	Identifier	r_syscall_new		1300509	0					
ANR	1300609	ArgumentList			1300509	1					
ANR	1300610	IfStatement	if ( ! egg -> syscall )		1300509	11					
ANR	1300611	Condition	! egg -> syscall	48:5:826:838	1300509	0	True				
ANR	1300612	UnaryOperationExpression	! egg -> syscall		1300509	0					
ANR	1300613	UnaryOperator	!		1300509	0					
ANR	1300614	PtrMemberAccess	egg -> syscall		1300509	1					
ANR	1300615	Identifier	egg		1300509	0					
ANR	1300616	Identifier	syscall		1300509	1					
ANR	1300617	CompoundStatement		21:20:330:330	1300509	1					
ANR	1300618	GotoStatement	goto beach ;	49:2:845:855	1300509	0	True				
ANR	1300619	Identifier	beach		1300509	0					
ANR	1300620	ExpressionStatement	egg -> rasm = r_asm_new ( )	51:1:861:885	1300509	12	True				
ANR	1300621	AssignmentExpression	egg -> rasm = r_asm_new ( )		1300509	0		=			
ANR	1300622	PtrMemberAccess	egg -> rasm		1300509	0					
ANR	1300623	Identifier	egg		1300509	0					
ANR	1300624	Identifier	rasm		1300509	1					
ANR	1300625	CallExpression	r_asm_new ( )		1300509	1					
ANR	1300626	Callee	r_asm_new		1300509	0					
ANR	1300627	Identifier	r_asm_new		1300509	0					
ANR	1300628	ArgumentList			1300509	1					
ANR	1300629	IfStatement	if ( ! egg -> rasm )		1300509	13					
ANR	1300630	Condition	! egg -> rasm	52:5:892:901	1300509	0	True				
ANR	1300631	UnaryOperationExpression	! egg -> rasm		1300509	0					
ANR	1300632	UnaryOperator	!		1300509	0					
ANR	1300633	PtrMemberAccess	egg -> rasm		1300509	1					
ANR	1300634	Identifier	egg		1300509	0					
ANR	1300635	Identifier	rasm		1300509	1					
ANR	1300636	CompoundStatement		25:17:393:393	1300509	1					
ANR	1300637	GotoStatement	goto beach ;	53:2:908:918	1300509	0	True				
ANR	1300638	Identifier	beach		1300509	0					
ANR	1300639	ExpressionStatement	egg -> bits = 0	55:1:924:937	1300509	14	True				
ANR	1300640	AssignmentExpression	egg -> bits = 0		1300509	0		=			
ANR	1300641	PtrMemberAccess	egg -> bits		1300509	0					
ANR	1300642	Identifier	egg		1300509	0					
ANR	1300643	Identifier	bits		1300509	1					
ANR	1300644	PrimaryExpression	0		1300509	1					
ANR	1300645	ExpressionStatement	egg -> endian = 0	56:1:940:955	1300509	15	True				
ANR	1300646	AssignmentExpression	egg -> endian = 0		1300509	0		=			
ANR	1300647	PtrMemberAccess	egg -> endian		1300509	0					
ANR	1300648	Identifier	egg		1300509	0					
ANR	1300649	Identifier	endian		1300509	1					
ANR	1300650	PrimaryExpression	0		1300509	1					
ANR	1300651	ExpressionStatement	"egg -> db = sdb_new ( NULL , NULL , 0 )"	57:1:958:991	1300509	16	True				
ANR	1300652	AssignmentExpression	"egg -> db = sdb_new ( NULL , NULL , 0 )"		1300509	0		=			
ANR	1300653	PtrMemberAccess	egg -> db		1300509	0					
ANR	1300654	Identifier	egg		1300509	0					
ANR	1300655	Identifier	db		1300509	1					
ANR	1300656	CallExpression	"sdb_new ( NULL , NULL , 0 )"		1300509	1					
ANR	1300657	Callee	sdb_new		1300509	0					
ANR	1300658	Identifier	sdb_new		1300509	0					
ANR	1300659	ArgumentList	NULL		1300509	1					
ANR	1300660	Argument	NULL		1300509	0					
ANR	1300661	Identifier	NULL		1300509	0					
ANR	1300662	Argument	NULL		1300509	1					
ANR	1300663	Identifier	NULL		1300509	0					
ANR	1300664	Argument	0		1300509	2					
ANR	1300665	PrimaryExpression	0		1300509	0					
ANR	1300666	IfStatement	if ( ! egg -> db )		1300509	17					
ANR	1300667	Condition	! egg -> db	58:5:998:1005	1300509	0	True				
ANR	1300668	UnaryOperationExpression	! egg -> db		1300509	0					
ANR	1300669	UnaryOperator	!		1300509	0					
ANR	1300670	PtrMemberAccess	egg -> db		1300509	1					
ANR	1300671	Identifier	egg		1300509	0					
ANR	1300672	Identifier	db		1300509	1					
ANR	1300673	CompoundStatement		31:15:497:497	1300509	1					
ANR	1300674	GotoStatement	goto beach ;	59:2:1012:1022	1300509	0	True				
ANR	1300675	Identifier	beach		1300509	0					
ANR	1300676	ExpressionStatement	egg -> patches = r_list_newf ( egg_patch_free )	61:1:1028:1071	1300509	18	True				
ANR	1300677	AssignmentExpression	egg -> patches = r_list_newf ( egg_patch_free )		1300509	0		=			
ANR	1300678	PtrMemberAccess	egg -> patches		1300509	0					
ANR	1300679	Identifier	egg		1300509	0					
ANR	1300680	Identifier	patches		1300509	1					
ANR	1300681	CallExpression	r_list_newf ( egg_patch_free )		1300509	1					
ANR	1300682	Callee	r_list_newf		1300509	0					
ANR	1300683	Identifier	r_list_newf		1300509	0					
ANR	1300684	ArgumentList	egg_patch_free		1300509	1					
ANR	1300685	Argument	egg_patch_free		1300509	0					
ANR	1300686	Identifier	egg_patch_free		1300509	0					
ANR	1300687	IfStatement	if ( ! egg -> patches )		1300509	19					
ANR	1300688	Condition	! egg -> patches	62:5:1078:1090	1300509	0	True				
ANR	1300689	UnaryOperationExpression	! egg -> patches		1300509	0					
ANR	1300690	UnaryOperator	!		1300509	0					
ANR	1300691	PtrMemberAccess	egg -> patches		1300509	1					
ANR	1300692	Identifier	egg		1300509	0					
ANR	1300693	Identifier	patches		1300509	1					
ANR	1300694	CompoundStatement		35:20:582:582	1300509	1					
ANR	1300695	GotoStatement	goto beach ;	63:2:1097:1107	1300509	0	True				
ANR	1300696	Identifier	beach		1300509	0					
ANR	1300697	ExpressionStatement	egg -> plugins = r_list_new ( )	65:1:1113:1141	1300509	20	True				
ANR	1300698	AssignmentExpression	egg -> plugins = r_list_new ( )		1300509	0		=			
ANR	1300699	PtrMemberAccess	egg -> plugins		1300509	0					
ANR	1300700	Identifier	egg		1300509	0					
ANR	1300701	Identifier	plugins		1300509	1					
ANR	1300702	CallExpression	r_list_new ( )		1300509	1					
ANR	1300703	Callee	r_list_new		1300509	0					
ANR	1300704	Identifier	r_list_new		1300509	0					
ANR	1300705	ArgumentList			1300509	1					
ANR	1300706	ForStatement	for ( i = 0 ; egg_static_plugins [ i ] ; i ++ )		1300509	21					
ANR	1300707	ForInit	i = 0 ;	66:6:1149:1152	1300509	0	True				
ANR	1300708	AssignmentExpression	i = 0		1300509	0		=			
ANR	1300709	Identifier	i		1300509	0					
ANR	1300710	PrimaryExpression	0		1300509	1					
ANR	1300711	Condition	egg_static_plugins [ i ]	66:11:1154:1174	1300509	1	True				
ANR	1300712	ArrayIndexing	egg_static_plugins [ i ]		1300509	0					
ANR	1300713	Identifier	egg_static_plugins		1300509	0					
ANR	1300714	Identifier	i		1300509	1					
ANR	1300715	PostIncDecOperationExpression	i ++	66:34:1177:1179	1300509	2	True				
ANR	1300716	Identifier	i		1300509	0					
ANR	1300717	IncDec	++		1300509	1					
ANR	1300718	CompoundStatement		39:39:671:671	1300509	3					
ANR	1300719	ExpressionStatement	"r_egg_add ( egg , egg_static_plugins [ i ] )"	67:2:1186:1224	1300509	0	True				
ANR	1300720	CallExpression	"r_egg_add ( egg , egg_static_plugins [ i ] )"		1300509	0					
ANR	1300721	Callee	r_egg_add		1300509	0					
ANR	1300722	Identifier	r_egg_add		1300509	0					
ANR	1300723	ArgumentList	egg		1300509	1					
ANR	1300724	Argument	egg		1300509	0					
ANR	1300725	Identifier	egg		1300509	0					
ANR	1300726	Argument	egg_static_plugins [ i ]		1300509	1					
ANR	1300727	ArrayIndexing	egg_static_plugins [ i ]		1300509	0					
ANR	1300728	Identifier	egg_static_plugins		1300509	0					
ANR	1300729	Identifier	i		1300509	1					
ANR	1300730	ReturnStatement	return egg ;	69:1:1230:1240	1300509	22	True				
ANR	1300731	Identifier	egg		1300509	0					
ANR	1300732	Label	beach :	71:0:1243:1248	1300509	23	True				
ANR	1300733	Identifier	beach		1300509	0					
ANR	1300734	ExpressionStatement	r_egg_free ( egg )	72:1:1251:1267	1300509	24	True				
ANR	1300735	CallExpression	r_egg_free ( egg )		1300509	0					
ANR	1300736	Callee	r_egg_free		1300509	0					
ANR	1300737	Identifier	r_egg_free		1300509	0					
ANR	1300738	ArgumentList	egg		1300509	1					
ANR	1300739	Argument	egg		1300509	0					
ANR	1300740	Identifier	egg		1300509	0					
ANR	1300741	ReturnStatement	return NULL ;	73:1:1270:1281	1300509	25	True				
ANR	1300742	Identifier	NULL		1300509	0					
ANR	1300743	ReturnType	R_API REgg *		1300509	1					
ANR	1300744	Identifier	r_egg_new		1300509	2					
ANR	1300745	ParameterList			1300509	3					
ANR	1300746	CFGEntryNode	ENTRY		1300509		True				
ANR	1300747	CFGExitNode	EXIT		1300509		True				
ANR	1300748	Symbol	egg		1300509						
ANR	1300749	Symbol	egg -> endian		1300509						
ANR	1300750	Symbol	egg_static_plugins		1300509						
ANR	1300751	Symbol	& emit_x86		1300509						
ANR	1300752	Symbol	egg -> remit		1300509						
ANR	1300753	Symbol	r_syscall_new		1300509						
ANR	1300754	Symbol	egg -> rasm		1300509						
ANR	1300755	Symbol	* egg		1300509						
ANR	1300756	Symbol	egg -> bits		1300509						
ANR	1300757	Symbol	egg -> src		1300509						
ANR	1300758	Symbol	egg -> buf		1300509						
ANR	1300759	Symbol	r_buf_new		1300509						
ANR	1300760	Symbol	egg -> db		1300509						
ANR	1300761	Symbol	r_asm_new		1300509						
ANR	1300762	Symbol	NULL		1300509						
ANR	1300763	Symbol	egg -> plugins		1300509						
ANR	1300764	Symbol	egg -> syscall		1300509						
ANR	1300765	Symbol	r_list_newf		1300509						
ANR	1300766	Symbol	* egg_static_plugins		1300509						
ANR	1300767	Symbol	i		1300509						
ANR	1300768	Symbol	egg_patch_free		1300509						
ANR	1300769	Symbol	R_NEW0		1300509						
ANR	1300770	Symbol	sdb_new		1300509						
ANR	1300771	Symbol	* i		1300509						
ANR	1300772	Symbol	REgg		1300509						
ANR	1300773	Symbol	egg -> bin		1300509						
ANR	1300774	Symbol	egg -> patches		1300509						
ANR	1300775	Symbol	r_list_new		1300509						
ANR	1300776	Function	r_egg_add	76:0:1286:1622							
ANR	1300777	FunctionDef	"r_egg_add (REgg * a , REggPlugin * foo)"		1300776	0					
ANR	1300778	CompoundStatement		76:46:1332:1622	1300776	0					
ANR	1300779	IdentifierDeclStatement	RListIter * iter ;	77:1:1335:1350	1300776	0	True				
ANR	1300780	IdentifierDecl	* iter		1300776	0					
ANR	1300781	IdentifierDeclType	RListIter *		1300776	0					
ANR	1300782	Identifier	iter		1300776	1					
ANR	1300783	IdentifierDeclStatement	RAsmPlugin * h ;	78:1:1353:1366	1300776	1	True				
ANR	1300784	IdentifierDecl	* h		1300776	0					
ANR	1300785	IdentifierDeclType	RAsmPlugin *		1300776	0					
ANR	1300786	Identifier	h		1300776	1					
ANR	1300787	IfStatement	if ( ! foo -> name )		1300776	2					
ANR	1300788	Condition	! foo -> name	80:5:1439:1448	1300776	0	True				
ANR	1300789	UnaryOperationExpression	! foo -> name		1300776	0					
ANR	1300790	UnaryOperator	!		1300776	0					
ANR	1300791	PtrMemberAccess	foo -> name		1300776	1					
ANR	1300792	Identifier	foo		1300776	0					
ANR	1300793	Identifier	name		1300776	1					
ANR	1300794	CompoundStatement		5:17:118:118	1300776	1					
ANR	1300795	ReturnStatement	return false ;	81:2:1455:1467	1300776	0	True				
ANR	1300796	Identifier	false		1300776	0					
ANR	1300797	Statement	r_list_foreach	83:1:1473:1486	1300776	3	True				
ANR	1300798	Statement	(	83:16:1488:1488	1300776	4	True				
ANR	1300799	Statement	a	83:17:1489:1489	1300776	5	True				
ANR	1300800	Statement	->	83:18:1490:1491	1300776	6	True				
ANR	1300801	Statement	plugins	83:20:1492:1498	1300776	7	True				
ANR	1300802	Statement	","	83:27:1499:1499	1300776	8	True				
ANR	1300803	Statement	iter	83:29:1501:1504	1300776	9	True				
ANR	1300804	Statement	","	83:33:1505:1505	1300776	10	True				
ANR	1300805	Statement	h	83:35:1507:1507	1300776	11	True				
ANR	1300806	Statement	)	83:36:1508:1508	1300776	12	True				
ANR	1300807	CompoundStatement		8:38:177:177	1300776	13					
ANR	1300808	IfStatement	"if ( ! strcmp ( h -> name , foo -> name ) )"		1300776	0					
ANR	1300809	Condition	"! strcmp ( h -> name , foo -> name )"	84:6:1518:1545	1300776	0	True				
ANR	1300810	UnaryOperationExpression	"! strcmp ( h -> name , foo -> name )"		1300776	0					
ANR	1300811	UnaryOperator	!		1300776	0					
ANR	1300812	CallExpression	"strcmp ( h -> name , foo -> name )"		1300776	1					
ANR	1300813	Callee	strcmp		1300776	0					
ANR	1300814	Identifier	strcmp		1300776	0					
ANR	1300815	ArgumentList	h -> name		1300776	1					
ANR	1300816	Argument	h -> name		1300776	0					
ANR	1300817	PtrMemberAccess	h -> name		1300776	0					
ANR	1300818	Identifier	h		1300776	0					
ANR	1300819	Identifier	name		1300776	1					
ANR	1300820	Argument	foo -> name		1300776	1					
ANR	1300821	PtrMemberAccess	foo -> name		1300776	0					
ANR	1300822	Identifier	foo		1300776	0					
ANR	1300823	Identifier	name		1300776	1					
ANR	1300824	CompoundStatement		9:36:215:215	1300776	1					
ANR	1300825	ReturnStatement	return false ;	85:3:1553:1565	1300776	0	True				
ANR	1300826	Identifier	false		1300776	0					
ANR	1300827	ExpressionStatement	"r_list_append ( a -> plugins , foo )"	88:1:1575:1606	1300776	14	True				
ANR	1300828	CallExpression	"r_list_append ( a -> plugins , foo )"		1300776	0					
ANR	1300829	Callee	r_list_append		1300776	0					
ANR	1300830	Identifier	r_list_append		1300776	0					
ANR	1300831	ArgumentList	a -> plugins		1300776	1					
ANR	1300832	Argument	a -> plugins		1300776	0					
ANR	1300833	PtrMemberAccess	a -> plugins		1300776	0					
ANR	1300834	Identifier	a		1300776	0					
ANR	1300835	Identifier	plugins		1300776	1					
ANR	1300836	Argument	foo		1300776	1					
ANR	1300837	Identifier	foo		1300776	0					
ANR	1300838	ReturnStatement	return true ;	89:1:1609:1620	1300776	15	True				
ANR	1300839	Identifier	true		1300776	0					
ANR	1300840	ReturnType	R_API int		1300776	1					
ANR	1300841	Identifier	r_egg_add		1300776	2					
ANR	1300842	ParameterList	"REgg * a , REggPlugin * foo"		1300776	3					
ANR	1300843	Parameter	REgg * a	76:20:1306:1312	1300776	0	True				
ANR	1300844	ParameterType	REgg *		1300776	0					
ANR	1300845	Identifier	a		1300776	1					
ANR	1300846	Parameter	REggPlugin * foo	76:29:1315:1329	1300776	1	True				
ANR	1300847	ParameterType	REggPlugin *		1300776	0					
ANR	1300848	Identifier	foo		1300776	1					
ANR	1300849	CFGEntryNode	ENTRY		1300776		True				
ANR	1300850	CFGExitNode	EXIT		1300776		True				
ANR	1300851	Symbol	strcmp		1300776						
ANR	1300852	Symbol	a		1300776						
ANR	1300853	Symbol	foo -> name		1300776						
ANR	1300854	Symbol	foo		1300776						
ANR	1300855	Symbol	h		1300776						
ANR	1300856	Symbol	false		1300776						
ANR	1300857	Symbol	iter		1300776						
ANR	1300858	Symbol	* a		1300776						
ANR	1300859	Symbol	* foo		1300776						
ANR	1300860	Symbol	h -> name		1300776						
ANR	1300861	Symbol	* h		1300776						
ANR	1300862	Symbol	true		1300776						
ANR	1300863	Symbol	a -> plugins		1300776						
ANR	1300864	Function	r_egg_to_string	92:0:1625:1702							
ANR	1300865	FunctionDef	r_egg_to_string (REgg * egg)		1300864	0					
ANR	1300866	CompoundStatement		92:39:1664:1702	1300864	0					
ANR	1300867	ReturnStatement	return r_buf_to_string ( egg -> buf ) ;	93:1:1667:1700	1300864	0	True				
ANR	1300868	CallExpression	r_buf_to_string ( egg -> buf )		1300864	0					
ANR	1300869	Callee	r_buf_to_string		1300864	0					
ANR	1300870	Identifier	r_buf_to_string		1300864	0					
ANR	1300871	ArgumentList	egg -> buf		1300864	1					
ANR	1300872	Argument	egg -> buf		1300864	0					
ANR	1300873	PtrMemberAccess	egg -> buf		1300864	0					
ANR	1300874	Identifier	egg		1300864	0					
ANR	1300875	Identifier	buf		1300864	1					
ANR	1300876	ReturnType	R_API char *		1300864	1					
ANR	1300877	Identifier	r_egg_to_string		1300864	2					
ANR	1300878	ParameterList	REgg * egg		1300864	3					
ANR	1300879	Parameter	REgg * egg	92:28:1653:1661	1300864	0	True				
ANR	1300880	ParameterType	REgg *		1300864	0					
ANR	1300881	Identifier	egg		1300864	1					
ANR	1300882	CFGEntryNode	ENTRY		1300864		True				
ANR	1300883	CFGExitNode	EXIT		1300864		True				
ANR	1300884	Symbol	* egg		1300864						
ANR	1300885	Symbol	egg		1300864						
ANR	1300886	Symbol	egg -> buf		1300864						
ANR	1300887	Symbol	r_buf_to_string		1300864						
ANR	1300888	Function	r_egg_free	96:0:1705:2037							
ANR	1300889	FunctionDef	r_egg_free (REgg * egg)		1300888	0					
ANR	1300890	CompoundStatement		96:33:1738:2037	1300888	0					
ANR	1300891	IfStatement	if ( egg )		1300888	0					
ANR	1300892	Condition	egg	97:5:1745:1747	1300888	0	True				
ANR	1300893	Identifier	egg		1300888	0					
ANR	1300894	CompoundStatement		2:10:11:11	1300888	1					
ANR	1300895	ExpressionStatement	r_buf_free ( egg -> src )	98:2:1754:1775	1300888	0	True				
ANR	1300896	CallExpression	r_buf_free ( egg -> src )		1300888	0					
ANR	1300897	Callee	r_buf_free		1300888	0					
ANR	1300898	Identifier	r_buf_free		1300888	0					
ANR	1300899	ArgumentList	egg -> src		1300888	1					
ANR	1300900	Argument	egg -> src		1300888	0					
ANR	1300901	PtrMemberAccess	egg -> src		1300888	0					
ANR	1300902	Identifier	egg		1300888	0					
ANR	1300903	Identifier	src		1300888	1					
ANR	1300904	ExpressionStatement	r_buf_free ( egg -> buf )	99:2:1779:1800	1300888	1	True				
ANR	1300905	CallExpression	r_buf_free ( egg -> buf )		1300888	0					
ANR	1300906	Callee	r_buf_free		1300888	0					
ANR	1300907	Identifier	r_buf_free		1300888	0					
ANR	1300908	ArgumentList	egg -> buf		1300888	1					
ANR	1300909	Argument	egg -> buf		1300888	0					
ANR	1300910	PtrMemberAccess	egg -> buf		1300888	0					
ANR	1300911	Identifier	egg		1300888	0					
ANR	1300912	Identifier	buf		1300888	1					
ANR	1300913	ExpressionStatement	r_buf_free ( egg -> bin )	100:2:1804:1825	1300888	2	True				
ANR	1300914	CallExpression	r_buf_free ( egg -> bin )		1300888	0					
ANR	1300915	Callee	r_buf_free		1300888	0					
ANR	1300916	Identifier	r_buf_free		1300888	0					
ANR	1300917	ArgumentList	egg -> bin		1300888	1					
ANR	1300918	Argument	egg -> bin		1300888	0					
ANR	1300919	PtrMemberAccess	egg -> bin		1300888	0					
ANR	1300920	Identifier	egg		1300888	0					
ANR	1300921	Identifier	bin		1300888	1					
ANR	1300922	ExpressionStatement	r_list_free ( egg -> list )	101:2:1829:1852	1300888	3	True				
ANR	1300923	CallExpression	r_list_free ( egg -> list )		1300888	0					
ANR	1300924	Callee	r_list_free		1300888	0					
ANR	1300925	Identifier	r_list_free		1300888	0					
ANR	1300926	ArgumentList	egg -> list		1300888	1					
ANR	1300927	Argument	egg -> list		1300888	0					
ANR	1300928	PtrMemberAccess	egg -> list		1300888	0					
ANR	1300929	Identifier	egg		1300888	0					
ANR	1300930	Identifier	list		1300888	1					
ANR	1300931	ExpressionStatement	r_asm_free ( egg -> rasm )	102:2:1856:1878	1300888	4	True				
ANR	1300932	CallExpression	r_asm_free ( egg -> rasm )		1300888	0					
ANR	1300933	Callee	r_asm_free		1300888	0					
ANR	1300934	Identifier	r_asm_free		1300888	0					
ANR	1300935	ArgumentList	egg -> rasm		1300888	1					
ANR	1300936	Argument	egg -> rasm		1300888	0					
ANR	1300937	PtrMemberAccess	egg -> rasm		1300888	0					
ANR	1300938	Identifier	egg		1300888	0					
ANR	1300939	Identifier	rasm		1300888	1					
ANR	1300940	ExpressionStatement	r_syscall_free ( egg -> syscall )	103:2:1882:1911	1300888	5	True				
ANR	1300941	CallExpression	r_syscall_free ( egg -> syscall )		1300888	0					
ANR	1300942	Callee	r_syscall_free		1300888	0					
ANR	1300943	Identifier	r_syscall_free		1300888	0					
ANR	1300944	ArgumentList	egg -> syscall		1300888	1					
ANR	1300945	Argument	egg -> syscall		1300888	0					
ANR	1300946	PtrMemberAccess	egg -> syscall		1300888	0					
ANR	1300947	Identifier	egg		1300888	0					
ANR	1300948	Identifier	syscall		1300888	1					
ANR	1300949	ExpressionStatement	sdb_free ( egg -> db )	104:2:1915:1933	1300888	6	True				
ANR	1300950	CallExpression	sdb_free ( egg -> db )		1300888	0					
ANR	1300951	Callee	sdb_free		1300888	0					
ANR	1300952	Identifier	sdb_free		1300888	0					
ANR	1300953	ArgumentList	egg -> db		1300888	1					
ANR	1300954	Argument	egg -> db		1300888	0					
ANR	1300955	PtrMemberAccess	egg -> db		1300888	0					
ANR	1300956	Identifier	egg		1300888	0					
ANR	1300957	Identifier	db		1300888	1					
ANR	1300958	ExpressionStatement	r_list_free ( egg -> plugins )	105:2:1937:1963	1300888	7	True				
ANR	1300959	CallExpression	r_list_free ( egg -> plugins )		1300888	0					
ANR	1300960	Callee	r_list_free		1300888	0					
ANR	1300961	Identifier	r_list_free		1300888	0					
ANR	1300962	ArgumentList	egg -> plugins		1300888	1					
ANR	1300963	Argument	egg -> plugins		1300888	0					
ANR	1300964	PtrMemberAccess	egg -> plugins		1300888	0					
ANR	1300965	Identifier	egg		1300888	0					
ANR	1300966	Identifier	plugins		1300888	1					
ANR	1300967	ExpressionStatement	r_list_free ( egg -> patches )	106:2:1967:1993	1300888	8	True				
ANR	1300968	CallExpression	r_list_free ( egg -> patches )		1300888	0					
ANR	1300969	Callee	r_list_free		1300888	0					
ANR	1300970	Identifier	r_list_free		1300888	0					
ANR	1300971	ArgumentList	egg -> patches		1300888	1					
ANR	1300972	Argument	egg -> patches		1300888	0					
ANR	1300973	PtrMemberAccess	egg -> patches		1300888	0					
ANR	1300974	Identifier	egg		1300888	0					
ANR	1300975	Identifier	patches		1300888	1					
ANR	1300976	ExpressionStatement	r_egg_lang_free ( egg )	107:2:1997:2018	1300888	9	True				
ANR	1300977	CallExpression	r_egg_lang_free ( egg )		1300888	0					
ANR	1300978	Callee	r_egg_lang_free		1300888	0					
ANR	1300979	Identifier	r_egg_lang_free		1300888	0					
ANR	1300980	ArgumentList	egg		1300888	1					
ANR	1300981	Argument	egg		1300888	0					
ANR	1300982	Identifier	egg		1300888	0					
ANR	1300983	ExpressionStatement	free ( egg )	108:2:2022:2032	1300888	10	True				
ANR	1300984	CallExpression	free ( egg )		1300888	0					
ANR	1300985	Callee	free		1300888	0					
ANR	1300986	Identifier	free		1300888	0					
ANR	1300987	ArgumentList	egg		1300888	1					
ANR	1300988	Argument	egg		1300888	0					
ANR	1300989	Identifier	egg		1300888	0					
ANR	1300990	ReturnType	R_API void		1300888	1					
ANR	1300991	Identifier	r_egg_free		1300888	2					
ANR	1300992	ParameterList	REgg * egg		1300888	3					
ANR	1300993	Parameter	REgg * egg	96:22:1727:1735	1300888	0	True				
ANR	1300994	ParameterType	REgg *		1300888	0					
ANR	1300995	Identifier	egg		1300888	1					
ANR	1300996	CFGEntryNode	ENTRY		1300888		True				
ANR	1300997	CFGExitNode	EXIT		1300888		True				
ANR	1300998	Symbol	* egg		1300888						
ANR	1300999	Symbol	egg -> plugins		1300888						
ANR	1301000	Symbol	egg		1300888						
ANR	1301001	Symbol	egg -> syscall		1300888						
ANR	1301002	Symbol	egg -> bin		1300888						
ANR	1301003	Symbol	egg -> src		1300888						
ANR	1301004	Symbol	egg -> patches		1300888						
ANR	1301005	Symbol	egg -> buf		1300888						
ANR	1301006	Symbol	egg -> list		1300888						
ANR	1301007	Symbol	egg -> db		1300888						
ANR	1301008	Symbol	egg -> rasm		1300888						
ANR	1301009	Function	r_egg_reset	112:0:2040:2340							
ANR	1301010	FunctionDef	r_egg_reset (REgg * egg)		1301009	0					
ANR	1301011	CompoundStatement		112:34:2074:2340	1301009	0					
ANR	1301012	ExpressionStatement	r_egg_lang_include_init ( egg )	113:1:2077:2106	1301009	0	True				
ANR	1301013	CallExpression	r_egg_lang_include_init ( egg )		1301009	0					
ANR	1301014	Callee	r_egg_lang_include_init		1301009	0					
ANR	1301015	Identifier	r_egg_lang_include_init		1301009	0					
ANR	1301016	ArgumentList	egg		1301009	1					
ANR	1301017	Argument	egg		1301009	0					
ANR	1301018	Identifier	egg		1301009	0					
ANR	1301019	ExpressionStatement	r_buf_free ( egg -> src )	115:1:2161:2182	1301009	1	True				
ANR	1301020	CallExpression	r_buf_free ( egg -> src )		1301009	0					
ANR	1301021	Callee	r_buf_free		1301009	0					
ANR	1301022	Identifier	r_buf_free		1301009	0					
ANR	1301023	ArgumentList	egg -> src		1301009	1					
ANR	1301024	Argument	egg -> src		1301009	0					
ANR	1301025	PtrMemberAccess	egg -> src		1301009	0					
ANR	1301026	Identifier	egg		1301009	0					
ANR	1301027	Identifier	src		1301009	1					
ANR	1301028	ExpressionStatement	r_buf_free ( egg -> buf )	116:1:2185:2206	1301009	2	True				
ANR	1301029	CallExpression	r_buf_free ( egg -> buf )		1301009	0					
ANR	1301030	Callee	r_buf_free		1301009	0					
ANR	1301031	Identifier	r_buf_free		1301009	0					
ANR	1301032	ArgumentList	egg -> buf		1301009	1					
ANR	1301033	Argument	egg -> buf		1301009	0					
ANR	1301034	PtrMemberAccess	egg -> buf		1301009	0					
ANR	1301035	Identifier	egg		1301009	0					
ANR	1301036	Identifier	buf		1301009	1					
ANR	1301037	ExpressionStatement	r_buf_free ( egg -> bin )	117:1:2209:2230	1301009	3	True				
ANR	1301038	CallExpression	r_buf_free ( egg -> bin )		1301009	0					
ANR	1301039	Callee	r_buf_free		1301009	0					
ANR	1301040	Identifier	r_buf_free		1301009	0					
ANR	1301041	ArgumentList	egg -> bin		1301009	1					
ANR	1301042	Argument	egg -> bin		1301009	0					
ANR	1301043	PtrMemberAccess	egg -> bin		1301009	0					
ANR	1301044	Identifier	egg		1301009	0					
ANR	1301045	Identifier	bin		1301009	1					
ANR	1301046	ExpressionStatement	egg -> src = r_buf_new ( )	118:1:2233:2256	1301009	4	True				
ANR	1301047	AssignmentExpression	egg -> src = r_buf_new ( )		1301009	0		=			
ANR	1301048	PtrMemberAccess	egg -> src		1301009	0					
ANR	1301049	Identifier	egg		1301009	0					
ANR	1301050	Identifier	src		1301009	1					
ANR	1301051	CallExpression	r_buf_new ( )		1301009	1					
ANR	1301052	Callee	r_buf_new		1301009	0					
ANR	1301053	Identifier	r_buf_new		1301009	0					
ANR	1301054	ArgumentList			1301009	1					
ANR	1301055	ExpressionStatement	egg -> buf = r_buf_new ( )	119:1:2259:2282	1301009	5	True				
ANR	1301056	AssignmentExpression	egg -> buf = r_buf_new ( )		1301009	0		=			
ANR	1301057	PtrMemberAccess	egg -> buf		1301009	0					
ANR	1301058	Identifier	egg		1301009	0					
ANR	1301059	Identifier	buf		1301009	1					
ANR	1301060	CallExpression	r_buf_new ( )		1301009	1					
ANR	1301061	Callee	r_buf_new		1301009	0					
ANR	1301062	Identifier	r_buf_new		1301009	0					
ANR	1301063	ArgumentList			1301009	1					
ANR	1301064	ExpressionStatement	egg -> bin = r_buf_new ( )	120:1:2285:2308	1301009	6	True				
ANR	1301065	AssignmentExpression	egg -> bin = r_buf_new ( )		1301009	0		=			
ANR	1301066	PtrMemberAccess	egg -> bin		1301009	0					
ANR	1301067	Identifier	egg		1301009	0					
ANR	1301068	Identifier	bin		1301009	1					
ANR	1301069	CallExpression	r_buf_new ( )		1301009	1					
ANR	1301070	Callee	r_buf_new		1301009	0					
ANR	1301071	Identifier	r_buf_new		1301009	0					
ANR	1301072	ArgumentList			1301009	1					
ANR	1301073	ExpressionStatement	r_list_purge ( egg -> patches )	121:1:2311:2338	1301009	7	True				
ANR	1301074	CallExpression	r_list_purge ( egg -> patches )		1301009	0					
ANR	1301075	Callee	r_list_purge		1301009	0					
ANR	1301076	Identifier	r_list_purge		1301009	0					
ANR	1301077	ArgumentList	egg -> patches		1301009	1					
ANR	1301078	Argument	egg -> patches		1301009	0					
ANR	1301079	PtrMemberAccess	egg -> patches		1301009	0					
ANR	1301080	Identifier	egg		1301009	0					
ANR	1301081	Identifier	patches		1301009	1					
ANR	1301082	ReturnType	R_API void		1301009	1					
ANR	1301083	Identifier	r_egg_reset		1301009	2					
ANR	1301084	ParameterList	REgg * egg		1301009	3					
ANR	1301085	Parameter	REgg * egg	112:23:2063:2071	1301009	0	True				
ANR	1301086	ParameterType	REgg *		1301009	0					
ANR	1301087	Identifier	egg		1301009	1					
ANR	1301088	CFGEntryNode	ENTRY		1301009		True				
ANR	1301089	CFGExitNode	EXIT		1301009		True				
ANR	1301090	Symbol	* egg		1301009						
ANR	1301091	Symbol	egg		1301009						
ANR	1301092	Symbol	egg -> bin		1301009						
ANR	1301093	Symbol	egg -> src		1301009						
ANR	1301094	Symbol	egg -> patches		1301009						
ANR	1301095	Symbol	egg -> buf		1301009						
ANR	1301096	Symbol	r_buf_new		1301009						
ANR	1301097	Function	r_egg_setup	124:0:2343:3445							
ANR	1301098	FunctionDef	"r_egg_setup (REgg * egg , const char * arch , int bits , int endian , const char * os)"		1301097	0					
ANR	1301099	CompoundStatement		124:89:2432:3445	1301097	0					
ANR	1301100	IdentifierDeclStatement	const char * asmcpu = NULL ;	125:1:2435:2460	1301097	0	True				
ANR	1301101	IdentifierDecl	* asmcpu = NULL		1301097	0					
ANR	1301102	IdentifierDeclType	const char *		1301097	0					
ANR	1301103	Identifier	asmcpu		1301097	1					
ANR	1301104	AssignmentExpression	* asmcpu = NULL		1301097	2		=			
ANR	1301105	Identifier	NULL		1301097	0					
ANR	1301106	Identifier	NULL		1301097	1					
ANR	1301107	ExpressionStatement	egg -> remit = NULL	126:1:2471:2488	1301097	1	True				
ANR	1301108	AssignmentExpression	egg -> remit = NULL		1301097	0		=			
ANR	1301109	PtrMemberAccess	egg -> remit		1301097	0					
ANR	1301110	Identifier	egg		1301097	0					
ANR	1301111	Identifier	remit		1301097	1					
ANR	1301112	Identifier	NULL		1301097	1					
ANR	1301113	ExpressionStatement	egg -> os = os ? r_str_hash ( os ) : R_EGG_OS_DEFAULT	128:1:2492:2539	1301097	2	True				
ANR	1301114	AssignmentExpression	egg -> os = os ? r_str_hash ( os ) : R_EGG_OS_DEFAULT		1301097	0		=			
ANR	1301115	PtrMemberAccess	egg -> os		1301097	0					
ANR	1301116	Identifier	egg		1301097	0					
ANR	1301117	Identifier	os		1301097	1					
ANR	1301118	ConditionalExpression	os ? r_str_hash ( os ) : R_EGG_OS_DEFAULT		1301097	1					
ANR	1301119	Condition	os		1301097	0					
ANR	1301120	Identifier	os		1301097	0					
ANR	1301121	CallExpression	r_str_hash ( os )		1301097	1					
ANR	1301122	Callee	r_str_hash		1301097	0					
ANR	1301123	Identifier	r_str_hash		1301097	0					
ANR	1301124	ArgumentList	os		1301097	1					
ANR	1301125	Argument	os		1301097	0					
ANR	1301126	Identifier	os		1301097	0					
ANR	1301127	Identifier	R_EGG_OS_DEFAULT		1301097	2					
ANR	1301128	IfStatement	"if ( ! strcmp ( arch , ""x86"" ) )"		1301097	3					
ANR	1301129	Condition	"! strcmp ( arch , ""x86"" )"	131:5:2682:2702	1301097	0	True				
ANR	1301130	UnaryOperationExpression	"! strcmp ( arch , ""x86"" )"		1301097	0					
ANR	1301131	UnaryOperator	!		1301097	0					
ANR	1301132	CallExpression	"strcmp ( arch , ""x86"" )"		1301097	1					
ANR	1301133	Callee	strcmp		1301097	0					
ANR	1301134	Identifier	strcmp		1301097	0					
ANR	1301135	ArgumentList	arch		1301097	1					
ANR	1301136	Argument	arch		1301097	0					
ANR	1301137	Identifier	arch		1301097	0					
ANR	1301138	Argument	"""x86"""		1301097	1					
ANR	1301139	PrimaryExpression	"""x86"""		1301097	0					
ANR	1301140	CompoundStatement		8:28:272:272	1301097	1					
ANR	1301141	ExpressionStatement	egg -> arch = R_SYS_ARCH_X86	132:2:2709:2735	1301097	0	True				
ANR	1301142	AssignmentExpression	egg -> arch = R_SYS_ARCH_X86		1301097	0		=			
ANR	1301143	PtrMemberAccess	egg -> arch		1301097	0					
ANR	1301144	Identifier	egg		1301097	0					
ANR	1301145	Identifier	arch		1301097	1					
ANR	1301146	Identifier	R_SYS_ARCH_X86		1301097	1					
ANR	1301147	SwitchStatement	switch ( bits )		1301097	1					
ANR	1301148	Condition	bits	133:10:2747:2750	1301097	0	True				
ANR	1301149	Identifier	bits		1301097	0					
ANR	1301150	CompoundStatement		10:16:320:320	1301097	1					
ANR	1301151	Label	case 32 :	134:2:2757:2764	1301097	0	True				
ANR	1301152	ExpressionStatement	"r_syscall_setup ( egg -> syscall , arch , bits , asmcpu , os )"	135:3:2769:2823	1301097	1	True				
ANR	1301153	CallExpression	"r_syscall_setup ( egg -> syscall , arch , bits , asmcpu , os )"		1301097	0					
ANR	1301154	Callee	r_syscall_setup		1301097	0					
ANR	1301155	Identifier	r_syscall_setup		1301097	0					
ANR	1301156	ArgumentList	egg -> syscall		1301097	1					
ANR	1301157	Argument	egg -> syscall		1301097	0					
ANR	1301158	PtrMemberAccess	egg -> syscall		1301097	0					
ANR	1301159	Identifier	egg		1301097	0					
ANR	1301160	Identifier	syscall		1301097	1					
ANR	1301161	Argument	arch		1301097	1					
ANR	1301162	Identifier	arch		1301097	0					
ANR	1301163	Argument	bits		1301097	2					
ANR	1301164	Identifier	bits		1301097	0					
ANR	1301165	Argument	asmcpu		1301097	3					
ANR	1301166	Identifier	asmcpu		1301097	0					
ANR	1301167	Argument	os		1301097	4					
ANR	1301168	Identifier	os		1301097	0					
ANR	1301169	ExpressionStatement	egg -> remit = & emit_x86	136:3:2828:2850	1301097	2	True				
ANR	1301170	AssignmentExpression	egg -> remit = & emit_x86		1301097	0		=			
ANR	1301171	PtrMemberAccess	egg -> remit		1301097	0					
ANR	1301172	Identifier	egg		1301097	0					
ANR	1301173	Identifier	remit		1301097	1					
ANR	1301174	UnaryOperationExpression	& emit_x86		1301097	1					
ANR	1301175	UnaryOperator	&		1301097	0					
ANR	1301176	Identifier	emit_x86		1301097	1					
ANR	1301177	ExpressionStatement	egg -> bits = bits	137:3:2855:2871	1301097	3	True				
ANR	1301178	AssignmentExpression	egg -> bits = bits		1301097	0		=			
ANR	1301179	PtrMemberAccess	egg -> bits		1301097	0					
ANR	1301180	Identifier	egg		1301097	0					
ANR	1301181	Identifier	bits		1301097	1					
ANR	1301182	Identifier	bits		1301097	1					
ANR	1301183	BreakStatement	break ;	138:3:2876:2881	1301097	4	True				
ANR	1301184	Label	case 64 :	139:2:2885:2892	1301097	5	True				
ANR	1301185	ExpressionStatement	"r_syscall_setup ( egg -> syscall , arch , bits , asmcpu , os )"	140:3:2897:2951	1301097	6	True				
ANR	1301186	CallExpression	"r_syscall_setup ( egg -> syscall , arch , bits , asmcpu , os )"		1301097	0					
ANR	1301187	Callee	r_syscall_setup		1301097	0					
ANR	1301188	Identifier	r_syscall_setup		1301097	0					
ANR	1301189	ArgumentList	egg -> syscall		1301097	1					
ANR	1301190	Argument	egg -> syscall		1301097	0					
ANR	1301191	PtrMemberAccess	egg -> syscall		1301097	0					
ANR	1301192	Identifier	egg		1301097	0					
ANR	1301193	Identifier	syscall		1301097	1					
ANR	1301194	Argument	arch		1301097	1					
ANR	1301195	Identifier	arch		1301097	0					
ANR	1301196	Argument	bits		1301097	2					
ANR	1301197	Identifier	bits		1301097	0					
ANR	1301198	Argument	asmcpu		1301097	3					
ANR	1301199	Identifier	asmcpu		1301097	0					
ANR	1301200	Argument	os		1301097	4					
ANR	1301201	Identifier	os		1301097	0					
ANR	1301202	ExpressionStatement	egg -> remit = & emit_x64	141:3:2956:2978	1301097	7	True				
ANR	1301203	AssignmentExpression	egg -> remit = & emit_x64		1301097	0		=			
ANR	1301204	PtrMemberAccess	egg -> remit		1301097	0					
ANR	1301205	Identifier	egg		1301097	0					
ANR	1301206	Identifier	remit		1301097	1					
ANR	1301207	UnaryOperationExpression	& emit_x64		1301097	1					
ANR	1301208	UnaryOperator	&		1301097	0					
ANR	1301209	Identifier	emit_x64		1301097	1					
ANR	1301210	ExpressionStatement	egg -> bits = bits	142:3:2983:2999	1301097	8	True				
ANR	1301211	AssignmentExpression	egg -> bits = bits		1301097	0		=			
ANR	1301212	PtrMemberAccess	egg -> bits		1301097	0					
ANR	1301213	Identifier	egg		1301097	0					
ANR	1301214	Identifier	bits		1301097	1					
ANR	1301215	Identifier	bits		1301097	1					
ANR	1301216	BreakStatement	break ;	143:3:3004:3009	1301097	9	True				
ANR	1301217	ElseStatement	else		1301097	0					
ANR	1301218	IfStatement	"if ( ! strcmp ( arch , ""arm"" ) )"		1301097	0					
ANR	1301219	Condition	"! strcmp ( arch , ""arm"" )"	145:12:3027:3047	1301097	0	True				
ANR	1301220	UnaryOperationExpression	"! strcmp ( arch , ""arm"" )"		1301097	0					
ANR	1301221	UnaryOperator	!		1301097	0					
ANR	1301222	CallExpression	"strcmp ( arch , ""arm"" )"		1301097	1					
ANR	1301223	Callee	strcmp		1301097	0					
ANR	1301224	Identifier	strcmp		1301097	0					
ANR	1301225	ArgumentList	arch		1301097	1					
ANR	1301226	Argument	arch		1301097	0					
ANR	1301227	Identifier	arch		1301097	0					
ANR	1301228	Argument	"""arm"""		1301097	1					
ANR	1301229	PrimaryExpression	"""arm"""		1301097	0					
ANR	1301230	CompoundStatement		22:35:617:617	1301097	1					
ANR	1301231	ExpressionStatement	egg -> arch = R_SYS_ARCH_ARM	146:2:3054:3080	1301097	0	True				
ANR	1301232	AssignmentExpression	egg -> arch = R_SYS_ARCH_ARM		1301097	0		=			
ANR	1301233	PtrMemberAccess	egg -> arch		1301097	0					
ANR	1301234	Identifier	egg		1301097	0					
ANR	1301235	Identifier	arch		1301097	1					
ANR	1301236	Identifier	R_SYS_ARCH_ARM		1301097	1					
ANR	1301237	SwitchStatement	switch ( bits )		1301097	1					
ANR	1301238	Condition	bits	147:10:3092:3095	1301097	0	True				
ANR	1301239	Identifier	bits		1301097	0					
ANR	1301240	CompoundStatement		24:16:665:665	1301097	1					
ANR	1301241	Label	case 16 :	148:2:3102:3109	1301097	0	True				
ANR	1301242	Label	case 32 :	149:2:3113:3120	1301097	1	True				
ANR	1301243	ExpressionStatement	"r_syscall_setup ( egg -> syscall , arch , bits , asmcpu , os )"	150:3:3125:3179	1301097	2	True				
ANR	1301244	CallExpression	"r_syscall_setup ( egg -> syscall , arch , bits , asmcpu , os )"		1301097	0					
ANR	1301245	Callee	r_syscall_setup		1301097	0					
ANR	1301246	Identifier	r_syscall_setup		1301097	0					
ANR	1301247	ArgumentList	egg -> syscall		1301097	1					
ANR	1301248	Argument	egg -> syscall		1301097	0					
ANR	1301249	PtrMemberAccess	egg -> syscall		1301097	0					
ANR	1301250	Identifier	egg		1301097	0					
ANR	1301251	Identifier	syscall		1301097	1					
ANR	1301252	Argument	arch		1301097	1					
ANR	1301253	Identifier	arch		1301097	0					
ANR	1301254	Argument	bits		1301097	2					
ANR	1301255	Identifier	bits		1301097	0					
ANR	1301256	Argument	asmcpu		1301097	3					
ANR	1301257	Identifier	asmcpu		1301097	0					
ANR	1301258	Argument	os		1301097	4					
ANR	1301259	Identifier	os		1301097	0					
ANR	1301260	ExpressionStatement	egg -> remit = & emit_arm	151:3:3184:3206	1301097	3	True				
ANR	1301261	AssignmentExpression	egg -> remit = & emit_arm		1301097	0		=			
ANR	1301262	PtrMemberAccess	egg -> remit		1301097	0					
ANR	1301263	Identifier	egg		1301097	0					
ANR	1301264	Identifier	remit		1301097	1					
ANR	1301265	UnaryOperationExpression	& emit_arm		1301097	1					
ANR	1301266	UnaryOperator	&		1301097	0					
ANR	1301267	Identifier	emit_arm		1301097	1					
ANR	1301268	ExpressionStatement	egg -> bits = bits	152:3:3211:3227	1301097	4	True				
ANR	1301269	AssignmentExpression	egg -> bits = bits		1301097	0		=			
ANR	1301270	PtrMemberAccess	egg -> bits		1301097	0					
ANR	1301271	Identifier	egg		1301097	0					
ANR	1301272	Identifier	bits		1301097	1					
ANR	1301273	Identifier	bits		1301097	1					
ANR	1301274	ExpressionStatement	egg -> endian = endian	153:3:3232:3252	1301097	5	True				
ANR	1301275	AssignmentExpression	egg -> endian = endian		1301097	0		=			
ANR	1301276	PtrMemberAccess	egg -> endian		1301097	0					
ANR	1301277	Identifier	egg		1301097	0					
ANR	1301278	Identifier	endian		1301097	1					
ANR	1301279	Identifier	endian		1301097	1					
ANR	1301280	BreakStatement	break ;	154:3:3257:3262	1301097	6	True				
ANR	1301281	ElseStatement	else		1301097	0					
ANR	1301282	IfStatement	"if ( ! strcmp ( arch , ""trace"" ) )"		1301097	0					
ANR	1301283	Condition	"! strcmp ( arch , ""trace"" )"	156:12:3280:3302	1301097	0	True				
ANR	1301284	UnaryOperationExpression	"! strcmp ( arch , ""trace"" )"		1301097	0					
ANR	1301285	UnaryOperator	!		1301097	0					
ANR	1301286	CallExpression	"strcmp ( arch , ""trace"" )"		1301097	1					
ANR	1301287	Callee	strcmp		1301097	0					
ANR	1301288	Identifier	strcmp		1301097	0					
ANR	1301289	ArgumentList	arch		1301097	1					
ANR	1301290	Argument	arch		1301097	0					
ANR	1301291	Identifier	arch		1301097	0					
ANR	1301292	Argument	"""trace"""		1301097	1					
ANR	1301293	PrimaryExpression	"""trace"""		1301097	0					
ANR	1301294	CompoundStatement		33:37:872:872	1301097	1					
ANR	1301295	ExpressionStatement	egg -> remit = & emit_trace	158:2:3361:3385	1301097	0	True				
ANR	1301296	AssignmentExpression	egg -> remit = & emit_trace		1301097	0		=			
ANR	1301297	PtrMemberAccess	egg -> remit		1301097	0					
ANR	1301298	Identifier	egg		1301097	0					
ANR	1301299	Identifier	remit		1301097	1					
ANR	1301300	UnaryOperationExpression	& emit_trace		1301097	1					
ANR	1301301	UnaryOperator	&		1301097	0					
ANR	1301302	Identifier	emit_trace		1301097	1					
ANR	1301303	ExpressionStatement	egg -> bits = bits	159:2:3389:3405	1301097	1	True				
ANR	1301304	AssignmentExpression	egg -> bits = bits		1301097	0		=			
ANR	1301305	PtrMemberAccess	egg -> bits		1301097	0					
ANR	1301306	Identifier	egg		1301097	0					
ANR	1301307	Identifier	bits		1301097	1					
ANR	1301308	Identifier	bits		1301097	1					
ANR	1301309	ExpressionStatement	egg -> endian = endian	160:2:3409:3429	1301097	2	True				
ANR	1301310	AssignmentExpression	egg -> endian = endian		1301097	0		=			
ANR	1301311	PtrMemberAccess	egg -> endian		1301097	0					
ANR	1301312	Identifier	egg		1301097	0					
ANR	1301313	Identifier	endian		1301097	1					
ANR	1301314	Identifier	endian		1301097	1					
ANR	1301315	ReturnStatement	return 0 ;	162:1:3435:3443	1301097	4	True				
ANR	1301316	PrimaryExpression	0		1301097	0					
ANR	1301317	ReturnType	R_API int		1301097	1					
ANR	1301318	Identifier	r_egg_setup		1301097	2					
ANR	1301319	ParameterList	"REgg * egg , const char * arch , int bits , int endian , const char * os"		1301097	3					
ANR	1301320	Parameter	REgg * egg	124:22:2365:2373	1301097	0	True				
ANR	1301321	ParameterType	REgg *		1301097	0					
ANR	1301322	Identifier	egg		1301097	1					
ANR	1301323	Parameter	const char * arch	124:33:2376:2391	1301097	1	True				
ANR	1301324	ParameterType	const char *		1301097	0					
ANR	1301325	Identifier	arch		1301097	1					
ANR	1301326	Parameter	int bits	124:51:2394:2401	1301097	2	True				
ANR	1301327	ParameterType	int		1301097	0					
ANR	1301328	Identifier	bits		1301097	1					
ANR	1301329	Parameter	int endian	124:61:2404:2413	1301097	3	True				
ANR	1301330	ParameterType	int		1301097	0					
ANR	1301331	Identifier	endian		1301097	1					
ANR	1301332	Parameter	const char * os	124:73:2416:2429	1301097	4	True				
ANR	1301333	ParameterType	const char *		1301097	0					
ANR	1301334	Identifier	os		1301097	1					
ANR	1301335	CFGEntryNode	ENTRY		1301097		True				
ANR	1301336	CFGExitNode	EXIT		1301097		True				
ANR	1301337	Symbol	asmcpu		1301097						
ANR	1301338	Symbol	strcmp		1301097						
ANR	1301339	Symbol	egg -> arch		1301097						
ANR	1301340	Symbol	R_EGG_OS_DEFAULT		1301097						
ANR	1301341	Symbol	NULL		1301097						
ANR	1301342	Symbol	egg		1301097						
ANR	1301343	Symbol	os		1301097						
ANR	1301344	Symbol	egg -> syscall		1301097						
ANR	1301345	Symbol	& emit_arm		1301097						
ANR	1301346	Symbol	egg -> endian		1301097						
ANR	1301347	Symbol	& emit_trace		1301097						
ANR	1301348	Symbol	bits		1301097						
ANR	1301349	Symbol	& emit_x86		1301097						
ANR	1301350	Symbol	& emit_x64		1301097						
ANR	1301351	Symbol	endian		1301097						
ANR	1301352	Symbol	egg -> remit		1301097						
ANR	1301353	Symbol	r_str_hash		1301097						
ANR	1301354	Symbol	R_SYS_ARCH_ARM		1301097						
ANR	1301355	Symbol	* egg		1301097						
ANR	1301356	Symbol	R_SYS_ARCH_X86		1301097						
ANR	1301357	Symbol	egg -> bits		1301097						
ANR	1301358	Symbol	egg -> os		1301097						
ANR	1301359	Symbol	arch		1301097						
ANR	1301360	Function	r_egg_include	165:0:3448:3883							
ANR	1301361	FunctionDef	"r_egg_include (REgg * egg , const char * file , int format)"		1301360	0					
ANR	1301362	CompoundStatement		165:65:3513:3883	1301360	0					
ANR	1301363	IdentifierDeclStatement	int sz ;	166:1:3516:3522	1301360	0	True				
ANR	1301364	IdentifierDecl	sz		1301360	0					
ANR	1301365	IdentifierDeclType	int		1301360	0					
ANR	1301366	Identifier	sz		1301360	1					
ANR	1301367	IdentifierDeclStatement	"const ut8 * foo = ( const ut8 * ) r_file_slurp ( file , & sz ) ;"	167:1:3525:3579	1301360	1	True				
ANR	1301368	IdentifierDecl	"* foo = ( const ut8 * ) r_file_slurp ( file , & sz )"		1301360	0					
ANR	1301369	IdentifierDeclType	const ut8 *		1301360	0					
ANR	1301370	Identifier	foo		1301360	1					
ANR	1301371	AssignmentExpression	"* foo = ( const ut8 * ) r_file_slurp ( file , & sz )"		1301360	2		=			
ANR	1301372	Identifier	foo		1301360	0					
ANR	1301373	CastExpression	"( const ut8 * ) r_file_slurp ( file , & sz )"		1301360	1					
ANR	1301374	CastTarget	const ut8 *		1301360	0					
ANR	1301375	CallExpression	"r_file_slurp ( file , & sz )"		1301360	1					
ANR	1301376	Callee	r_file_slurp		1301360	0					
ANR	1301377	Identifier	r_file_slurp		1301360	0					
ANR	1301378	ArgumentList	file		1301360	1					
ANR	1301379	Argument	file		1301360	0					
ANR	1301380	Identifier	file		1301360	0					
ANR	1301381	Argument	& sz		1301360	1					
ANR	1301382	UnaryOperationExpression	& sz		1301360	0					
ANR	1301383	UnaryOperator	&		1301360	0					
ANR	1301384	Identifier	sz		1301360	1					
ANR	1301385	IfStatement	if ( ! foo )		1301360	2					
ANR	1301386	Condition	! foo	168:5:3586:3589	1301360	0	True				
ANR	1301387	UnaryOperationExpression	! foo		1301360	0					
ANR	1301388	UnaryOperator	!		1301360	0					
ANR	1301389	Identifier	foo		1301360	1					
ANR	1301390	CompoundStatement		4:11:78:78	1301360	1					
ANR	1301391	ReturnStatement	return 0 ;	169:2:3596:3604	1301360	0	True				
ANR	1301392	PrimaryExpression	0		1301360	0					
ANR	1301393	SwitchStatement	switch ( format )		1301360	3					
ANR	1301394	Condition	format	172:9:3657:3662	1301360	0	True				
ANR	1301395	Identifier	format		1301360	0					
ANR	1301396	CompoundStatement		8:17:151:151	1301360	1					
ANR	1301397	Label	case 'r' :	173:1:3668:3676	1301360	0	True				
ANR	1301398	ExpressionStatement	"r_egg_raw ( egg , foo , sz )"	174:2:3687:3711	1301360	1	True				
ANR	1301399	CallExpression	"r_egg_raw ( egg , foo , sz )"		1301360	0					
ANR	1301400	Callee	r_egg_raw		1301360	0					
ANR	1301401	Identifier	r_egg_raw		1301360	0					
ANR	1301402	ArgumentList	egg		1301360	1					
ANR	1301403	Argument	egg		1301360	0					
ANR	1301404	Identifier	egg		1301360	0					
ANR	1301405	Argument	foo		1301360	1					
ANR	1301406	Identifier	foo		1301360	0					
ANR	1301407	Argument	sz		1301360	2					
ANR	1301408	Identifier	sz		1301360	0					
ANR	1301409	BreakStatement	break ;	175:2:3715:3720	1301360	2	True				
ANR	1301410	Label	case 'a' :	176:1:3723:3731	1301360	3	True				
ANR	1301411	ExpressionStatement	"r_buf_append_bytes ( egg -> buf , foo , sz )"	177:2:3747:3785	1301360	4	True				
ANR	1301412	CallExpression	"r_buf_append_bytes ( egg -> buf , foo , sz )"		1301360	0					
ANR	1301413	Callee	r_buf_append_bytes		1301360	0					
ANR	1301414	Identifier	r_buf_append_bytes		1301360	0					
ANR	1301415	ArgumentList	egg -> buf		1301360	1					
ANR	1301416	Argument	egg -> buf		1301360	0					
ANR	1301417	PtrMemberAccess	egg -> buf		1301360	0					
ANR	1301418	Identifier	egg		1301360	0					
ANR	1301419	Identifier	buf		1301360	1					
ANR	1301420	Argument	foo		1301360	1					
ANR	1301421	Identifier	foo		1301360	0					
ANR	1301422	Argument	sz		1301360	2					
ANR	1301423	Identifier	sz		1301360	0					
ANR	1301424	BreakStatement	break ;	178:2:3789:3794	1301360	5	True				
ANR	1301425	Label	default :	179:1:3797:3804	1301360	6	True				
ANR	1301426	Identifier	default		1301360	0					
ANR	1301427	ExpressionStatement	"r_buf_append_bytes ( egg -> src , foo , sz )"	180:2:3808:3846	1301360	7	True				
ANR	1301428	CallExpression	"r_buf_append_bytes ( egg -> src , foo , sz )"		1301360	0					
ANR	1301429	Callee	r_buf_append_bytes		1301360	0					
ANR	1301430	Identifier	r_buf_append_bytes		1301360	0					
ANR	1301431	ArgumentList	egg -> src		1301360	1					
ANR	1301432	Argument	egg -> src		1301360	0					
ANR	1301433	PtrMemberAccess	egg -> src		1301360	0					
ANR	1301434	Identifier	egg		1301360	0					
ANR	1301435	Identifier	src		1301360	1					
ANR	1301436	Argument	foo		1301360	1					
ANR	1301437	Identifier	foo		1301360	0					
ANR	1301438	Argument	sz		1301360	2					
ANR	1301439	Identifier	sz		1301360	0					
ANR	1301440	ExpressionStatement	free ( ( void * ) foo )	182:1:3852:3870	1301360	4	True				
ANR	1301441	CallExpression	free ( ( void * ) foo )		1301360	0					
ANR	1301442	Callee	free		1301360	0					
ANR	1301443	Identifier	free		1301360	0					
ANR	1301444	ArgumentList	( void * ) foo		1301360	1					
ANR	1301445	Argument	( void * ) foo		1301360	0					
ANR	1301446	CastExpression	( void * ) foo		1301360	0					
ANR	1301447	CastTarget	void *		1301360	0					
ANR	1301448	Identifier	foo		1301360	1					
ANR	1301449	ReturnStatement	return 1 ;	183:1:3873:3881	1301360	5	True				
ANR	1301450	PrimaryExpression	1		1301360	0					
ANR	1301451	ReturnType	R_API int		1301360	1					
ANR	1301452	Identifier	r_egg_include		1301360	2					
ANR	1301453	ParameterList	"REgg * egg , const char * file , int format"		1301360	3					
ANR	1301454	Parameter	REgg * egg	165:24:3472:3480	1301360	0	True				
ANR	1301455	ParameterType	REgg *		1301360	0					
ANR	1301456	Identifier	egg		1301360	1					
ANR	1301457	Parameter	const char * file	165:35:3483:3498	1301360	1	True				
ANR	1301458	ParameterType	const char *		1301360	0					
ANR	1301459	Identifier	file		1301360	1					
ANR	1301460	Parameter	int format	165:53:3501:3510	1301360	2	True				
ANR	1301461	ParameterType	int		1301360	0					
ANR	1301462	Identifier	format		1301360	1					
ANR	1301463	CFGEntryNode	ENTRY		1301360		True				
ANR	1301464	CFGExitNode	EXIT		1301360		True				
ANR	1301465	Symbol	& sz		1301360						
ANR	1301466	Symbol	* egg		1301360						
ANR	1301467	Symbol	r_file_slurp		1301360						
ANR	1301468	Symbol	file		1301360						
ANR	1301469	Symbol	egg		1301360						
ANR	1301470	Symbol	egg -> src		1301360						
ANR	1301471	Symbol	sz		1301360						
ANR	1301472	Symbol	foo		1301360						
ANR	1301473	Symbol	format		1301360						
ANR	1301474	Symbol	egg -> buf		1301360						
ANR	1301475	Function	r_egg_load	186:0:3886:4158							
ANR	1301476	FunctionDef	"r_egg_load (REgg * egg , const char * code , int format)"		1301475	0					
ANR	1301477	CompoundStatement		186:63:3949:4158	1301475	0					
ANR	1301478	SwitchStatement	switch ( format )		1301475	0					
ANR	1301479	Condition	format	187:9:3960:3965	1301475	0	True				
ANR	1301480	Identifier	format		1301475	0					
ANR	1301481	CompoundStatement		2:17:18:18	1301475	1					
ANR	1301482	Label	case 'a' :	188:1:3971:3979	1301475	0	True				
ANR	1301483	ExpressionStatement	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) code , strlen ( code ) )"	189:2:3995:4058	1301475	1	True				
ANR	1301484	CallExpression	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) code , strlen ( code ) )"		1301475	0					
ANR	1301485	Callee	r_buf_append_bytes		1301475	0					
ANR	1301486	Identifier	r_buf_append_bytes		1301475	0					
ANR	1301487	ArgumentList	egg -> buf		1301475	1					
ANR	1301488	Argument	egg -> buf		1301475	0					
ANR	1301489	PtrMemberAccess	egg -> buf		1301475	0					
ANR	1301490	Identifier	egg		1301475	0					
ANR	1301491	Identifier	buf		1301475	1					
ANR	1301492	Argument	( const ut8 * ) code		1301475	1					
ANR	1301493	CastExpression	( const ut8 * ) code		1301475	0					
ANR	1301494	CastTarget	const ut8 *		1301475	0					
ANR	1301495	Identifier	code		1301475	1					
ANR	1301496	Argument	strlen ( code )		1301475	2					
ANR	1301497	CallExpression	strlen ( code )		1301475	0					
ANR	1301498	Callee	strlen		1301475	0					
ANR	1301499	Identifier	strlen		1301475	0					
ANR	1301500	ArgumentList	code		1301475	1					
ANR	1301501	Argument	code		1301475	0					
ANR	1301502	Identifier	code		1301475	0					
ANR	1301503	BreakStatement	break ;	190:2:4062:4067	1301475	2	True				
ANR	1301504	Label	default :	191:1:4070:4077	1301475	3	True				
ANR	1301505	Identifier	default		1301475	0					
ANR	1301506	ExpressionStatement	"r_buf_append_bytes ( egg -> src , ( const ut8 * ) code , strlen ( code ) )"	192:2:4081:4144	1301475	4	True				
ANR	1301507	CallExpression	"r_buf_append_bytes ( egg -> src , ( const ut8 * ) code , strlen ( code ) )"		1301475	0					
ANR	1301508	Callee	r_buf_append_bytes		1301475	0					
ANR	1301509	Identifier	r_buf_append_bytes		1301475	0					
ANR	1301510	ArgumentList	egg -> src		1301475	1					
ANR	1301511	Argument	egg -> src		1301475	0					
ANR	1301512	PtrMemberAccess	egg -> src		1301475	0					
ANR	1301513	Identifier	egg		1301475	0					
ANR	1301514	Identifier	src		1301475	1					
ANR	1301515	Argument	( const ut8 * ) code		1301475	1					
ANR	1301516	CastExpression	( const ut8 * ) code		1301475	0					
ANR	1301517	CastTarget	const ut8 *		1301475	0					
ANR	1301518	Identifier	code		1301475	1					
ANR	1301519	Argument	strlen ( code )		1301475	2					
ANR	1301520	CallExpression	strlen ( code )		1301475	0					
ANR	1301521	Callee	strlen		1301475	0					
ANR	1301522	Identifier	strlen		1301475	0					
ANR	1301523	ArgumentList	code		1301475	1					
ANR	1301524	Argument	code		1301475	0					
ANR	1301525	Identifier	code		1301475	0					
ANR	1301526	BreakStatement	break ;	193:2:4148:4153	1301475	5	True				
ANR	1301527	ReturnType	R_API void		1301475	1					
ANR	1301528	Identifier	r_egg_load		1301475	2					
ANR	1301529	ParameterList	"REgg * egg , const char * code , int format"		1301475	3					
ANR	1301530	Parameter	REgg * egg	186:22:3908:3916	1301475	0	True				
ANR	1301531	ParameterType	REgg *		1301475	0					
ANR	1301532	Identifier	egg		1301475	1					
ANR	1301533	Parameter	const char * code	186:33:3919:3934	1301475	1	True				
ANR	1301534	ParameterType	const char *		1301475	0					
ANR	1301535	Identifier	code		1301475	1					
ANR	1301536	Parameter	int format	186:51:3937:3946	1301475	2	True				
ANR	1301537	ParameterType	int		1301475	0					
ANR	1301538	Identifier	format		1301475	1					
ANR	1301539	CFGEntryNode	ENTRY		1301475		True				
ANR	1301540	CFGExitNode	EXIT		1301475		True				
ANR	1301541	Symbol	* egg		1301475						
ANR	1301542	Symbol	strlen		1301475						
ANR	1301543	Symbol	code		1301475						
ANR	1301544	Symbol	egg		1301475						
ANR	1301545	Symbol	egg -> src		1301475						
ANR	1301546	Symbol	format		1301475						
ANR	1301547	Symbol	egg -> buf		1301475						
ANR	1301548	Function	r_egg_syscall	197:0:4161:4451							
ANR	1301549	FunctionDef	"r_egg_syscall (REgg * egg , const char * arg)"		1301548	0					
ANR	1301550	CompoundStatement		197:58:4219:4451	1301548	0					
ANR	1301551	IdentifierDeclStatement	"RSyscallItem * item = r_syscall_get ( egg -> syscall , r_syscall_get_num ( egg -> syscall , arg ) , - 1 ) ;"	198:1:4222:4316	1301548	0	True				
ANR	1301552	IdentifierDecl	"* item = r_syscall_get ( egg -> syscall , r_syscall_get_num ( egg -> syscall , arg ) , - 1 )"		1301548	0					
ANR	1301553	IdentifierDeclType	RSyscallItem *		1301548	0					
ANR	1301554	Identifier	item		1301548	1					
ANR	1301555	AssignmentExpression	"* item = r_syscall_get ( egg -> syscall , r_syscall_get_num ( egg -> syscall , arg ) , - 1 )"		1301548	2		=			
ANR	1301556	Identifier	item		1301548	0					
ANR	1301557	CallExpression	"r_syscall_get ( egg -> syscall , r_syscall_get_num ( egg -> syscall , arg ) , - 1 )"		1301548	1					
ANR	1301558	Callee	r_syscall_get		1301548	0					
ANR	1301559	Identifier	r_syscall_get		1301548	0					
ANR	1301560	ArgumentList	egg -> syscall		1301548	1					
ANR	1301561	Argument	egg -> syscall		1301548	0					
ANR	1301562	PtrMemberAccess	egg -> syscall		1301548	0					
ANR	1301563	Identifier	egg		1301548	0					
ANR	1301564	Identifier	syscall		1301548	1					
ANR	1301565	Argument	"r_syscall_get_num ( egg -> syscall , arg )"		1301548	1					
ANR	1301566	CallExpression	"r_syscall_get_num ( egg -> syscall , arg )"		1301548	0					
ANR	1301567	Callee	r_syscall_get_num		1301548	0					
ANR	1301568	Identifier	r_syscall_get_num		1301548	0					
ANR	1301569	ArgumentList	egg -> syscall		1301548	1					
ANR	1301570	Argument	egg -> syscall		1301548	0					
ANR	1301571	PtrMemberAccess	egg -> syscall		1301548	0					
ANR	1301572	Identifier	egg		1301548	0					
ANR	1301573	Identifier	syscall		1301548	1					
ANR	1301574	Argument	arg		1301548	1					
ANR	1301575	Identifier	arg		1301548	0					
ANR	1301576	Argument	- 1		1301548	2					
ANR	1301577	UnaryOperationExpression	- 1		1301548	0					
ANR	1301578	UnaryOperator	-		1301548	0					
ANR	1301579	PrimaryExpression	1		1301548	1					
ANR	1301580	IfStatement	"if ( ! strcmp ( arg , ""close"" ) )"		1301548	1					
ANR	1301581	Condition	"! strcmp ( arg , ""close"" )"	200:5:4323:4344	1301548	0	True				
ANR	1301582	UnaryOperationExpression	"! strcmp ( arg , ""close"" )"		1301548	0					
ANR	1301583	UnaryOperator	!		1301548	0					
ANR	1301584	CallExpression	"strcmp ( arg , ""close"" )"		1301548	1					
ANR	1301585	Callee	strcmp		1301548	0					
ANR	1301586	Identifier	strcmp		1301548	0					
ANR	1301587	ArgumentList	arg		1301548	1					
ANR	1301588	Argument	arg		1301548	0					
ANR	1301589	Identifier	arg		1301548	0					
ANR	1301590	Argument	"""close"""		1301548	1					
ANR	1301591	PrimaryExpression	"""close"""		1301548	0					
ANR	1301592	CompoundStatement		4:29:127:127	1301548	1					
ANR	1301593	IfStatement	if ( ! item )		1301548	2					
ANR	1301594	Condition	! item	203:5:4390:4394	1301548	0	True				
ANR	1301595	UnaryOperationExpression	! item		1301548	0					
ANR	1301596	UnaryOperator	!		1301548	0					
ANR	1301597	Identifier	item		1301548	1					
ANR	1301598	CompoundStatement		7:12:177:177	1301548	1					
ANR	1301599	ReturnStatement	return ;	204:2:4401:4407	1301548	0	True				
ANR	1301600	ExpressionStatement	"egg -> remit -> syscall ( egg , item -> num )"	206:1:4413:4449	1301548	3	True				
ANR	1301601	CallExpression	"egg -> remit -> syscall ( egg , item -> num )"		1301548	0					
ANR	1301602	Callee	egg -> remit -> syscall		1301548	0					
ANR	1301603	PtrMemberAccess	egg -> remit -> syscall		1301548	0					
ANR	1301604	PtrMemberAccess	egg -> remit		1301548	0					
ANR	1301605	Identifier	egg		1301548	0					
ANR	1301606	Identifier	remit		1301548	1					
ANR	1301607	Identifier	syscall		1301548	1					
ANR	1301608	ArgumentList	egg		1301548	1					
ANR	1301609	Argument	egg		1301548	0					
ANR	1301610	Identifier	egg		1301548	0					
ANR	1301611	Argument	item -> num		1301548	1					
ANR	1301612	PtrMemberAccess	item -> num		1301548	0					
ANR	1301613	Identifier	item		1301548	0					
ANR	1301614	Identifier	num		1301548	1					
ANR	1301615	ReturnType	R_API void		1301548	1					
ANR	1301616	Identifier	r_egg_syscall		1301548	2					
ANR	1301617	ParameterList	"REgg * egg , const char * arg"		1301548	3					
ANR	1301618	Parameter	REgg * egg	197:25:4186:4194	1301548	0	True				
ANR	1301619	ParameterType	REgg *		1301548	0					
ANR	1301620	Identifier	egg		1301548	1					
ANR	1301621	Parameter	const char * arg	197:36:4197:4211	1301548	1	True				
ANR	1301622	ParameterType	const char *		1301548	0					
ANR	1301623	Identifier	arg		1301548	1					
ANR	1301624	CFGEntryNode	ENTRY		1301548		True				
ANR	1301625	CFGExitNode	EXIT		1301548		True				
ANR	1301626	Symbol	* egg		1301548						
ANR	1301627	Symbol	strcmp		1301548						
ANR	1301628	Symbol	item		1301548						
ANR	1301629	Symbol	egg		1301548						
ANR	1301630	Symbol	egg -> syscall		1301548						
ANR	1301631	Symbol	r_syscall_get		1301548						
ANR	1301632	Symbol	* item		1301548						
ANR	1301633	Symbol	arg		1301548						
ANR	1301634	Symbol	r_syscall_get_num		1301548						
ANR	1301635	Symbol	item -> num		1301548						
ANR	1301636	Symbol	egg -> remit		1301548						
ANR	1301637	Function	r_egg_alloc	209:0:4454:4512							
ANR	1301638	FunctionDef	"r_egg_alloc (REgg * egg , int n)"		1301637	0					
ANR	1301639	CompoundStatement		209:41:4495:4512	1301637	0					
ANR	1301640	ReturnType	R_API void		1301637	1					
ANR	1301641	Identifier	r_egg_alloc		1301637	2					
ANR	1301642	ParameterList	"REgg * egg , int n"		1301637	3					
ANR	1301643	Parameter	REgg * egg	209:23:4477:4485	1301637	0	True				
ANR	1301644	ParameterType	REgg *		1301637	0					
ANR	1301645	Identifier	egg		1301637	1					
ANR	1301646	Parameter	int n	209:34:4488:4492	1301637	1	True				
ANR	1301647	ParameterType	int		1301637	0					
ANR	1301648	Identifier	n		1301637	1					
ANR	1301649	CFGEntryNode	ENTRY		1301637		True				
ANR	1301650	CFGExitNode	EXIT		1301637		True				
ANR	1301651	Symbol	egg		1301637						
ANR	1301652	Symbol	n		1301637						
ANR	1301653	Function	r_egg_label	213:0:4515:4605							
ANR	1301654	FunctionDef	"r_egg_label (REgg * egg , const char * name)"		1301653	0					
ANR	1301655	CompoundStatement		213:52:4567:4605	1301653	0					
ANR	1301656	ExpressionStatement	"r_egg_printf ( egg , ""%s:\\n"" , name )"	214:1:4570:4603	1301653	0	True				
ANR	1301657	CallExpression	"r_egg_printf ( egg , ""%s:\\n"" , name )"		1301653	0					
ANR	1301658	Callee	r_egg_printf		1301653	0					
ANR	1301659	Identifier	r_egg_printf		1301653	0					
ANR	1301660	ArgumentList	egg		1301653	1					
ANR	1301661	Argument	egg		1301653	0					
ANR	1301662	Identifier	egg		1301653	0					
ANR	1301663	Argument	"""%s:\\n"""		1301653	1					
ANR	1301664	PrimaryExpression	"""%s:\\n"""		1301653	0					
ANR	1301665	Argument	name		1301653	2					
ANR	1301666	Identifier	name		1301653	0					
ANR	1301667	ReturnType	R_API void		1301653	1					
ANR	1301668	Identifier	r_egg_label		1301653	2					
ANR	1301669	ParameterList	"REgg * egg , const char * name"		1301653	3					
ANR	1301670	Parameter	REgg * egg	213:23:4538:4546	1301653	0	True				
ANR	1301671	ParameterType	REgg *		1301653	0					
ANR	1301672	Identifier	egg		1301653	1					
ANR	1301673	Parameter	const char * name	213:34:4549:4564	1301653	1	True				
ANR	1301674	ParameterType	const char *		1301653	0					
ANR	1301675	Identifier	name		1301653	1					
ANR	1301676	CFGEntryNode	ENTRY		1301653		True				
ANR	1301677	CFGExitNode	EXIT		1301653		True				
ANR	1301678	Symbol	egg		1301653						
ANR	1301679	Symbol	name		1301653						
ANR	1301680	Function	r_egg_math	217:0:4608:4744							
ANR	1301681	FunctionDef	r_egg_math (REgg * egg)		1301680	0					
ANR	1301682	CompoundStatement		217:33:4641:4744	1301680	0					
ANR	1301683	ReturnType	R_API void		1301680	1					
ANR	1301684	Identifier	r_egg_math		1301680	2					
ANR	1301685	ParameterList	REgg * egg		1301680	3					
ANR	1301686	Parameter	REgg * egg	217:22:4630:4638	1301680	0	True				
ANR	1301687	ParameterType	REgg *		1301680	0					
ANR	1301688	Identifier	egg		1301680	1					
ANR	1301689	CFGEntryNode	ENTRY		1301680		True				
ANR	1301690	CFGExitNode	EXIT		1301680		True				
ANR	1301691	Symbol	egg		1301680						
ANR	1301692	Function	r_egg_raw	222:0:4747:5159							
ANR	1301693	FunctionDef	"r_egg_raw (REgg * egg , const ut8 * b , int len)"		1301692	0					
ANR	1301694	CompoundStatement		222:54:4801:5159	1301692	0					
ANR	1301695	IdentifierDeclStatement	int outlen = len * 2 ;	223:1:4804:4824	1301692	0	True				
ANR	1301696	IdentifierDecl	outlen = len * 2		1301692	0					
ANR	1301697	IdentifierDeclType	int		1301692	0					
ANR	1301698	Identifier	outlen		1301692	1					
ANR	1301699	AssignmentExpression	outlen = len * 2		1301692	2		=			
ANR	1301700	Identifier	outlen		1301692	0					
ANR	1301701	MultiplicativeExpression	len * 2		1301692	1		*			
ANR	1301702	Identifier	len		1301692	0					
ANR	1301703	PrimaryExpression	2		1301692	1					
ANR	1301704	IdentifierDeclStatement	char * out = malloc ( outlen + 1 ) ;	224:1:4862:4893	1301692	1	True				
ANR	1301705	IdentifierDecl	* out = malloc ( outlen + 1 )		1301692	0					
ANR	1301706	IdentifierDeclType	char *		1301692	0					
ANR	1301707	Identifier	out		1301692	1					
ANR	1301708	AssignmentExpression	* out = malloc ( outlen + 1 )		1301692	2		=			
ANR	1301709	Identifier	out		1301692	0					
ANR	1301710	CallExpression	malloc ( outlen + 1 )		1301692	1					
ANR	1301711	Callee	malloc		1301692	0					
ANR	1301712	Identifier	malloc		1301692	0					
ANR	1301713	ArgumentList	outlen + 1		1301692	1					
ANR	1301714	Argument	outlen + 1		1301692	0					
ANR	1301715	AdditiveExpression	outlen + 1		1301692	0		+			
ANR	1301716	Identifier	outlen		1301692	0					
ANR	1301717	PrimaryExpression	1		1301692	1					
ANR	1301718	IfStatement	if ( ! out )		1301692	2					
ANR	1301719	Condition	! out	225:5:4900:4903	1301692	0	True				
ANR	1301720	UnaryOperationExpression	! out		1301692	0					
ANR	1301721	UnaryOperator	!		1301692	0					
ANR	1301722	Identifier	out		1301692	1					
ANR	1301723	CompoundStatement		4:11:104:104	1301692	1					
ANR	1301724	ReturnStatement	return false ;	226:2:4910:4922	1301692	0	True				
ANR	1301725	Identifier	false		1301692	0					
ANR	1301726	ExpressionStatement	"( void ) r_hex_bin2str ( b , len , out )"	228:1:4928:4961	1301692	3	True				
ANR	1301727	CastExpression	"( void ) r_hex_bin2str ( b , len , out )"		1301692	0					
ANR	1301728	CastTarget	void		1301692	0					
ANR	1301729	CallExpression	"r_hex_bin2str ( b , len , out )"		1301692	1					
ANR	1301730	Callee	r_hex_bin2str		1301692	0					
ANR	1301731	Identifier	r_hex_bin2str		1301692	0					
ANR	1301732	ArgumentList	b		1301692	1					
ANR	1301733	Argument	b		1301692	0					
ANR	1301734	Identifier	b		1301692	0					
ANR	1301735	Argument	len		1301692	1					
ANR	1301736	Identifier	len		1301692	0					
ANR	1301737	Argument	out		1301692	2					
ANR	1301738	Identifier	out		1301692	0					
ANR	1301739	ExpressionStatement	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) "".hex "" , 5 )"	229:1:4964:5018	1301692	4	True				
ANR	1301740	CallExpression	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) "".hex "" , 5 )"		1301692	0					
ANR	1301741	Callee	r_buf_append_bytes		1301692	0					
ANR	1301742	Identifier	r_buf_append_bytes		1301692	0					
ANR	1301743	ArgumentList	egg -> buf		1301692	1					
ANR	1301744	Argument	egg -> buf		1301692	0					
ANR	1301745	PtrMemberAccess	egg -> buf		1301692	0					
ANR	1301746	Identifier	egg		1301692	0					
ANR	1301747	Identifier	buf		1301692	1					
ANR	1301748	Argument	"( const ut8 * ) "".hex """		1301692	1					
ANR	1301749	CastExpression	"( const ut8 * ) "".hex """		1301692	0					
ANR	1301750	CastTarget	const ut8 *		1301692	0					
ANR	1301751	PrimaryExpression	""".hex """		1301692	1					
ANR	1301752	Argument	5		1301692	2					
ANR	1301753	PrimaryExpression	5		1301692	0					
ANR	1301754	ExpressionStatement	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) out , outlen )"	230:1:5021:5076	1301692	5	True				
ANR	1301755	CallExpression	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) out , outlen )"		1301692	0					
ANR	1301756	Callee	r_buf_append_bytes		1301692	0					
ANR	1301757	Identifier	r_buf_append_bytes		1301692	0					
ANR	1301758	ArgumentList	egg -> buf		1301692	1					
ANR	1301759	Argument	egg -> buf		1301692	0					
ANR	1301760	PtrMemberAccess	egg -> buf		1301692	0					
ANR	1301761	Identifier	egg		1301692	0					
ANR	1301762	Identifier	buf		1301692	1					
ANR	1301763	Argument	( const ut8 * ) out		1301692	1					
ANR	1301764	CastExpression	( const ut8 * ) out		1301692	0					
ANR	1301765	CastTarget	const ut8 *		1301692	0					
ANR	1301766	Identifier	out		1301692	1					
ANR	1301767	Argument	outlen		1301692	2					
ANR	1301768	Identifier	outlen		1301692	0					
ANR	1301769	ExpressionStatement	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) ""\\n"" , 1 )"	231:1:5079:5130	1301692	6	True				
ANR	1301770	CallExpression	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) ""\\n"" , 1 )"		1301692	0					
ANR	1301771	Callee	r_buf_append_bytes		1301692	0					
ANR	1301772	Identifier	r_buf_append_bytes		1301692	0					
ANR	1301773	ArgumentList	egg -> buf		1301692	1					
ANR	1301774	Argument	egg -> buf		1301692	0					
ANR	1301775	PtrMemberAccess	egg -> buf		1301692	0					
ANR	1301776	Identifier	egg		1301692	0					
ANR	1301777	Identifier	buf		1301692	1					
ANR	1301778	Argument	"( const ut8 * ) ""\\n"""		1301692	1					
ANR	1301779	CastExpression	"( const ut8 * ) ""\\n"""		1301692	0					
ANR	1301780	CastTarget	const ut8 *		1301692	0					
ANR	1301781	PrimaryExpression	"""\\n"""		1301692	1					
ANR	1301782	Argument	1		1301692	2					
ANR	1301783	PrimaryExpression	1		1301692	0					
ANR	1301784	ExpressionStatement	free ( out )	232:1:5133:5143	1301692	7	True				
ANR	1301785	CallExpression	free ( out )		1301692	0					
ANR	1301786	Callee	free		1301692	0					
ANR	1301787	Identifier	free		1301692	0					
ANR	1301788	ArgumentList	out		1301692	1					
ANR	1301789	Argument	out		1301692	0					
ANR	1301790	Identifier	out		1301692	0					
ANR	1301791	ReturnStatement	return true ;	233:1:5146:5157	1301692	8	True				
ANR	1301792	Identifier	true		1301692	0					
ANR	1301793	ReturnType	R_API int		1301692	1					
ANR	1301794	Identifier	r_egg_raw		1301692	2					
ANR	1301795	ParameterList	"REgg * egg , const ut8 * b , int len"		1301692	3					
ANR	1301796	Parameter	REgg * egg	222:20:4767:4775	1301692	0	True				
ANR	1301797	ParameterType	REgg *		1301692	0					
ANR	1301798	Identifier	egg		1301692	1					
ANR	1301799	Parameter	const ut8 * b	222:31:4778:4789	1301692	1	True				
ANR	1301800	ParameterType	const ut8 *		1301692	0					
ANR	1301801	Identifier	b		1301692	1					
ANR	1301802	Parameter	int len	222:45:4792:4798	1301692	2	True				
ANR	1301803	ParameterType	int		1301692	0					
ANR	1301804	Identifier	len		1301692	1					
ANR	1301805	CFGEntryNode	ENTRY		1301692		True				
ANR	1301806	CFGExitNode	EXIT		1301692		True				
ANR	1301807	Symbol	* egg		1301692						
ANR	1301808	Symbol	malloc		1301692						
ANR	1301809	Symbol	b		1301692						
ANR	1301810	Symbol	egg		1301692						
ANR	1301811	Symbol	len		1301692						
ANR	1301812	Symbol	outlen		1301692						
ANR	1301813	Symbol	false		1301692						
ANR	1301814	Symbol	true		1301692						
ANR	1301815	Symbol	egg -> buf		1301692						
ANR	1301816	Symbol	out		1301692						
ANR	1301817	Function	r_egg_raw_prepend	236:0:5162:5580							
ANR	1301818	FunctionDef	"r_egg_raw_prepend (REgg * egg , const ut8 * b , int len)"		1301817	0					
ANR	1301819	CompoundStatement		236:63:5225:5580	1301817	0					
ANR	1301820	IdentifierDeclStatement	int outlen = len * 2 ;	237:1:5228:5248	1301817	0	True				
ANR	1301821	IdentifierDecl	outlen = len * 2		1301817	0					
ANR	1301822	IdentifierDeclType	int		1301817	0					
ANR	1301823	Identifier	outlen		1301817	1					
ANR	1301824	AssignmentExpression	outlen = len * 2		1301817	2		=			
ANR	1301825	Identifier	outlen		1301817	0					
ANR	1301826	MultiplicativeExpression	len * 2		1301817	1		*			
ANR	1301827	Identifier	len		1301817	0					
ANR	1301828	PrimaryExpression	2		1301817	1					
ANR	1301829	IdentifierDeclStatement	char * out = malloc ( outlen + 1 ) ;	238:1:5286:5317	1301817	1	True				
ANR	1301830	IdentifierDecl	* out = malloc ( outlen + 1 )		1301817	0					
ANR	1301831	IdentifierDeclType	char *		1301817	0					
ANR	1301832	Identifier	out		1301817	1					
ANR	1301833	AssignmentExpression	* out = malloc ( outlen + 1 )		1301817	2		=			
ANR	1301834	Identifier	out		1301817	0					
ANR	1301835	CallExpression	malloc ( outlen + 1 )		1301817	1					
ANR	1301836	Callee	malloc		1301817	0					
ANR	1301837	Identifier	malloc		1301817	0					
ANR	1301838	ArgumentList	outlen + 1		1301817	1					
ANR	1301839	Argument	outlen + 1		1301817	0					
ANR	1301840	AdditiveExpression	outlen + 1		1301817	0		+			
ANR	1301841	Identifier	outlen		1301817	0					
ANR	1301842	PrimaryExpression	1		1301817	1					
ANR	1301843	IfStatement	if ( ! out )		1301817	2					
ANR	1301844	Condition	! out	239:5:5324:5327	1301817	0	True				
ANR	1301845	UnaryOperationExpression	! out		1301817	0					
ANR	1301846	UnaryOperator	!		1301817	0					
ANR	1301847	Identifier	out		1301817	1					
ANR	1301848	CompoundStatement		4:11:104:104	1301817	1					
ANR	1301849	ReturnStatement	return false ;	240:2:5334:5346	1301817	0	True				
ANR	1301850	Identifier	false		1301817	0					
ANR	1301851	ExpressionStatement	"r_hex_bin2str ( b , len , out )"	242:1:5352:5379	1301817	3	True				
ANR	1301852	CallExpression	"r_hex_bin2str ( b , len , out )"		1301817	0					
ANR	1301853	Callee	r_hex_bin2str		1301817	0					
ANR	1301854	Identifier	r_hex_bin2str		1301817	0					
ANR	1301855	ArgumentList	b		1301817	1					
ANR	1301856	Argument	b		1301817	0					
ANR	1301857	Identifier	b		1301817	0					
ANR	1301858	Argument	len		1301817	1					
ANR	1301859	Identifier	len		1301817	0					
ANR	1301860	Argument	out		1301817	2					
ANR	1301861	Identifier	out		1301817	0					
ANR	1301862	ExpressionStatement	"r_buf_prepend_bytes ( egg -> buf , ( const ut8 * ) ""\\n"" , 1 )"	243:1:5382:5434	1301817	4	True				
ANR	1301863	CallExpression	"r_buf_prepend_bytes ( egg -> buf , ( const ut8 * ) ""\\n"" , 1 )"		1301817	0					
ANR	1301864	Callee	r_buf_prepend_bytes		1301817	0					
ANR	1301865	Identifier	r_buf_prepend_bytes		1301817	0					
ANR	1301866	ArgumentList	egg -> buf		1301817	1					
ANR	1301867	Argument	egg -> buf		1301817	0					
ANR	1301868	PtrMemberAccess	egg -> buf		1301817	0					
ANR	1301869	Identifier	egg		1301817	0					
ANR	1301870	Identifier	buf		1301817	1					
ANR	1301871	Argument	"( const ut8 * ) ""\\n"""		1301817	1					
ANR	1301872	CastExpression	"( const ut8 * ) ""\\n"""		1301817	0					
ANR	1301873	CastTarget	const ut8 *		1301817	0					
ANR	1301874	PrimaryExpression	"""\\n"""		1301817	1					
ANR	1301875	Argument	1		1301817	2					
ANR	1301876	PrimaryExpression	1		1301817	0					
ANR	1301877	ExpressionStatement	"r_buf_prepend_bytes ( egg -> buf , ( const ut8 * ) out , outlen )"	244:1:5437:5493	1301817	5	True				
ANR	1301878	CallExpression	"r_buf_prepend_bytes ( egg -> buf , ( const ut8 * ) out , outlen )"		1301817	0					
ANR	1301879	Callee	r_buf_prepend_bytes		1301817	0					
ANR	1301880	Identifier	r_buf_prepend_bytes		1301817	0					
ANR	1301881	ArgumentList	egg -> buf		1301817	1					
ANR	1301882	Argument	egg -> buf		1301817	0					
ANR	1301883	PtrMemberAccess	egg -> buf		1301817	0					
ANR	1301884	Identifier	egg		1301817	0					
ANR	1301885	Identifier	buf		1301817	1					
ANR	1301886	Argument	( const ut8 * ) out		1301817	1					
ANR	1301887	CastExpression	( const ut8 * ) out		1301817	0					
ANR	1301888	CastTarget	const ut8 *		1301817	0					
ANR	1301889	Identifier	out		1301817	1					
ANR	1301890	Argument	outlen		1301817	2					
ANR	1301891	Identifier	outlen		1301817	0					
ANR	1301892	ExpressionStatement	"r_buf_prepend_bytes ( egg -> buf , ( const ut8 * ) "".hex "" , 5 )"	245:1:5496:5551	1301817	6	True				
ANR	1301893	CallExpression	"r_buf_prepend_bytes ( egg -> buf , ( const ut8 * ) "".hex "" , 5 )"		1301817	0					
ANR	1301894	Callee	r_buf_prepend_bytes		1301817	0					
ANR	1301895	Identifier	r_buf_prepend_bytes		1301817	0					
ANR	1301896	ArgumentList	egg -> buf		1301817	1					
ANR	1301897	Argument	egg -> buf		1301817	0					
ANR	1301898	PtrMemberAccess	egg -> buf		1301817	0					
ANR	1301899	Identifier	egg		1301817	0					
ANR	1301900	Identifier	buf		1301817	1					
ANR	1301901	Argument	"( const ut8 * ) "".hex """		1301817	1					
ANR	1301902	CastExpression	"( const ut8 * ) "".hex """		1301817	0					
ANR	1301903	CastTarget	const ut8 *		1301817	0					
ANR	1301904	PrimaryExpression	""".hex """		1301817	1					
ANR	1301905	Argument	5		1301817	2					
ANR	1301906	PrimaryExpression	5		1301817	0					
ANR	1301907	ExpressionStatement	free ( out )	246:1:5554:5564	1301817	7	True				
ANR	1301908	CallExpression	free ( out )		1301817	0					
ANR	1301909	Callee	free		1301817	0					
ANR	1301910	Identifier	free		1301817	0					
ANR	1301911	ArgumentList	out		1301817	1					
ANR	1301912	Argument	out		1301817	0					
ANR	1301913	Identifier	out		1301817	0					
ANR	1301914	ReturnStatement	return true ;	247:1:5567:5578	1301817	8	True				
ANR	1301915	Identifier	true		1301817	0					
ANR	1301916	ReturnType	static int		1301817	1					
ANR	1301917	Identifier	r_egg_raw_prepend		1301817	2					
ANR	1301918	ParameterList	"REgg * egg , const ut8 * b , int len"		1301817	3					
ANR	1301919	Parameter	REgg * egg	236:29:5191:5199	1301817	0	True				
ANR	1301920	ParameterType	REgg *		1301817	0					
ANR	1301921	Identifier	egg		1301817	1					
ANR	1301922	Parameter	const ut8 * b	236:40:5202:5213	1301817	1	True				
ANR	1301923	ParameterType	const ut8 *		1301817	0					
ANR	1301924	Identifier	b		1301817	1					
ANR	1301925	Parameter	int len	236:54:5216:5222	1301817	2	True				
ANR	1301926	ParameterType	int		1301817	0					
ANR	1301927	Identifier	len		1301817	1					
ANR	1301928	CFGEntryNode	ENTRY		1301817		True				
ANR	1301929	CFGExitNode	EXIT		1301817		True				
ANR	1301930	Symbol	* egg		1301817						
ANR	1301931	Symbol	malloc		1301817						
ANR	1301932	Symbol	b		1301817						
ANR	1301933	Symbol	egg		1301817						
ANR	1301934	Symbol	len		1301817						
ANR	1301935	Symbol	outlen		1301817						
ANR	1301936	Symbol	false		1301817						
ANR	1301937	Symbol	true		1301817						
ANR	1301938	Symbol	egg -> buf		1301817						
ANR	1301939	Symbol	out		1301817						
ANR	1301940	Function	r_egg_prepend_bytes	250:0:5583:5791							
ANR	1301941	FunctionDef	"r_egg_prepend_bytes (REgg * egg , const ut8 * b , int len)"		1301940	0					
ANR	1301942	CompoundStatement		250:65:5648:5791	1301940	0					
ANR	1301943	IfStatement	"if ( ! r_egg_raw_prepend ( egg , b , len ) )"		1301940	0					
ANR	1301944	Condition	"! r_egg_raw_prepend ( egg , b , len )"	251:5:5655:5686	1301940	0	True				
ANR	1301945	UnaryOperationExpression	"! r_egg_raw_prepend ( egg , b , len )"		1301940	0					
ANR	1301946	UnaryOperator	!		1301940	0					
ANR	1301947	CallExpression	"r_egg_raw_prepend ( egg , b , len )"		1301940	1					
ANR	1301948	Callee	r_egg_raw_prepend		1301940	0					
ANR	1301949	Identifier	r_egg_raw_prepend		1301940	0					
ANR	1301950	ArgumentList	egg		1301940	1					
ANR	1301951	Argument	egg		1301940	0					
ANR	1301952	Identifier	egg		1301940	0					
ANR	1301953	Argument	b		1301940	1					
ANR	1301954	Identifier	b		1301940	0					
ANR	1301955	Argument	len		1301940	2					
ANR	1301956	Identifier	len		1301940	0					
ANR	1301957	CompoundStatement		2:39:40:40	1301940	1					
ANR	1301958	ReturnStatement	return false ;	252:2:5693:5705	1301940	0	True				
ANR	1301959	Identifier	false		1301940	0					
ANR	1301960	IfStatement	"if ( ! r_buf_prepend_bytes ( egg -> bin , b , len ) )"		1301940	1					
ANR	1301961	Condition	"! r_buf_prepend_bytes ( egg -> bin , b , len )"	254:5:5715:5753	1301940	0	True				
ANR	1301962	UnaryOperationExpression	"! r_buf_prepend_bytes ( egg -> bin , b , len )"		1301940	0					
ANR	1301963	UnaryOperator	!		1301940	0					
ANR	1301964	CallExpression	"r_buf_prepend_bytes ( egg -> bin , b , len )"		1301940	1					
ANR	1301965	Callee	r_buf_prepend_bytes		1301940	0					
ANR	1301966	Identifier	r_buf_prepend_bytes		1301940	0					
ANR	1301967	ArgumentList	egg -> bin		1301940	1					
ANR	1301968	Argument	egg -> bin		1301940	0					
ANR	1301969	PtrMemberAccess	egg -> bin		1301940	0					
ANR	1301970	Identifier	egg		1301940	0					
ANR	1301971	Identifier	bin		1301940	1					
ANR	1301972	Argument	b		1301940	1					
ANR	1301973	Identifier	b		1301940	0					
ANR	1301974	Argument	len		1301940	2					
ANR	1301975	Identifier	len		1301940	0					
ANR	1301976	CompoundStatement		5:46:107:107	1301940	1					
ANR	1301977	ReturnStatement	return false ;	255:2:5760:5772	1301940	0	True				
ANR	1301978	Identifier	false		1301940	0					
ANR	1301979	ReturnStatement	return true ;	257:1:5778:5789	1301940	2	True				
ANR	1301980	Identifier	true		1301940	0					
ANR	1301981	ReturnType	static int		1301940	1					
ANR	1301982	Identifier	r_egg_prepend_bytes		1301940	2					
ANR	1301983	ParameterList	"REgg * egg , const ut8 * b , int len"		1301940	3					
ANR	1301984	Parameter	REgg * egg	250:31:5614:5622	1301940	0	True				
ANR	1301985	ParameterType	REgg *		1301940	0					
ANR	1301986	Identifier	egg		1301940	1					
ANR	1301987	Parameter	const ut8 * b	250:42:5625:5636	1301940	1	True				
ANR	1301988	ParameterType	const ut8 *		1301940	0					
ANR	1301989	Identifier	b		1301940	1					
ANR	1301990	Parameter	int len	250:56:5639:5645	1301940	2	True				
ANR	1301991	ParameterType	int		1301940	0					
ANR	1301992	Identifier	len		1301940	1					
ANR	1301993	CFGEntryNode	ENTRY		1301940		True				
ANR	1301994	CFGExitNode	EXIT		1301940		True				
ANR	1301995	Symbol	* egg		1301940						
ANR	1301996	Symbol	b		1301940						
ANR	1301997	Symbol	r_buf_prepend_bytes		1301940						
ANR	1301998	Symbol	egg		1301940						
ANR	1301999	Symbol	len		1301940						
ANR	1302000	Symbol	egg -> bin		1301940						
ANR	1302001	Symbol	r_egg_raw_prepend		1301940						
ANR	1302002	Symbol	false		1301940						
ANR	1302003	Symbol	true		1301940						
ANR	1302004	Function	r_egg_append_bytes	260:0:5794:5994							
ANR	1302005	FunctionDef	"r_egg_append_bytes (REgg * egg , const ut8 * b , int len)"		1302004	0					
ANR	1302006	CompoundStatement		260:64:5858:5994	1302004	0					
ANR	1302007	IfStatement	"if ( ! r_egg_raw ( egg , b , len ) )"		1302004	0					
ANR	1302008	Condition	"! r_egg_raw ( egg , b , len )"	261:5:5865:5888	1302004	0	True				
ANR	1302009	UnaryOperationExpression	"! r_egg_raw ( egg , b , len )"		1302004	0					
ANR	1302010	UnaryOperator	!		1302004	0					
ANR	1302011	CallExpression	"r_egg_raw ( egg , b , len )"		1302004	1					
ANR	1302012	Callee	r_egg_raw		1302004	0					
ANR	1302013	Identifier	r_egg_raw		1302004	0					
ANR	1302014	ArgumentList	egg		1302004	1					
ANR	1302015	Argument	egg		1302004	0					
ANR	1302016	Identifier	egg		1302004	0					
ANR	1302017	Argument	b		1302004	1					
ANR	1302018	Identifier	b		1302004	0					
ANR	1302019	Argument	len		1302004	2					
ANR	1302020	Identifier	len		1302004	0					
ANR	1302021	CompoundStatement		2:31:32:32	1302004	1					
ANR	1302022	ReturnStatement	return false ;	262:2:5895:5907	1302004	0	True				
ANR	1302023	Identifier	false		1302004	0					
ANR	1302024	IfStatement	"if ( ! r_buf_append_bytes ( egg -> bin , b , len ) )"		1302004	1					
ANR	1302025	Condition	"! r_buf_append_bytes ( egg -> bin , b , len )"	265:5:5918:5955	1302004	0	True				
ANR	1302026	UnaryOperationExpression	"! r_buf_append_bytes ( egg -> bin , b , len )"		1302004	0					
ANR	1302027	UnaryOperator	!		1302004	0					
ANR	1302028	CallExpression	"r_buf_append_bytes ( egg -> bin , b , len )"		1302004	1					
ANR	1302029	Callee	r_buf_append_bytes		1302004	0					
ANR	1302030	Identifier	r_buf_append_bytes		1302004	0					
ANR	1302031	ArgumentList	egg -> bin		1302004	1					
ANR	1302032	Argument	egg -> bin		1302004	0					
ANR	1302033	PtrMemberAccess	egg -> bin		1302004	0					
ANR	1302034	Identifier	egg		1302004	0					
ANR	1302035	Identifier	bin		1302004	1					
ANR	1302036	Argument	b		1302004	1					
ANR	1302037	Identifier	b		1302004	0					
ANR	1302038	Argument	len		1302004	2					
ANR	1302039	Identifier	len		1302004	0					
ANR	1302040	CompoundStatement		6:45:99:99	1302004	1					
ANR	1302041	ReturnStatement	return false ;	266:2:5962:5974	1302004	0	True				
ANR	1302042	Identifier	false		1302004	0					
ANR	1302043	ReturnStatement	return true ;	269:1:5981:5992	1302004	2	True				
ANR	1302044	Identifier	true		1302004	0					
ANR	1302045	ReturnType	static int		1302004	1					
ANR	1302046	Identifier	r_egg_append_bytes		1302004	2					
ANR	1302047	ParameterList	"REgg * egg , const ut8 * b , int len"		1302004	3					
ANR	1302048	Parameter	REgg * egg	260:30:5824:5832	1302004	0	True				
ANR	1302049	ParameterType	REgg *		1302004	0					
ANR	1302050	Identifier	egg		1302004	1					
ANR	1302051	Parameter	const ut8 * b	260:41:5835:5846	1302004	1	True				
ANR	1302052	ParameterType	const ut8 *		1302004	0					
ANR	1302053	Identifier	b		1302004	1					
ANR	1302054	Parameter	int len	260:55:5849:5855	1302004	2	True				
ANR	1302055	ParameterType	int		1302004	0					
ANR	1302056	Identifier	len		1302004	1					
ANR	1302057	CFGEntryNode	ENTRY		1302004		True				
ANR	1302058	CFGExitNode	EXIT		1302004		True				
ANR	1302059	Symbol	* egg		1302004						
ANR	1302060	Symbol	b		1302004						
ANR	1302061	Symbol	egg		1302004						
ANR	1302062	Symbol	len		1302004						
ANR	1302063	Symbol	egg -> bin		1302004						
ANR	1302064	Symbol	r_egg_raw		1302004						
ANR	1302065	Symbol	false		1302004						
ANR	1302066	Symbol	true		1302004						
ANR	1302067	Symbol	r_buf_append_bytes		1302004						
ANR	1302068	Function	r_egg_if	273:0:6063:6148							
ANR	1302069	FunctionDef	"r_egg_if (REgg * egg , const char * reg , char cmp , int v)"		1302068	0					
ANR	1302070	CompoundStatement		273:65:6128:6148	1302068	0					
ANR	1302071	ReturnType	R_API void		1302068	1					
ANR	1302072	Identifier	r_egg_if		1302068	2					
ANR	1302073	ParameterList	"REgg * egg , const char * reg , char cmp , int v"		1302068	3					
ANR	1302074	Parameter	REgg * egg	273:20:6083:6091	1302068	0	True				
ANR	1302075	ParameterType	REgg *		1302068	0					
ANR	1302076	Identifier	egg		1302068	1					
ANR	1302077	Parameter	const char * reg	273:31:6094:6108	1302068	1	True				
ANR	1302078	ParameterType	const char *		1302068	0					
ANR	1302079	Identifier	reg		1302068	1					
ANR	1302080	Parameter	char cmp	273:48:6111:6118	1302068	2	True				
ANR	1302081	ParameterType	char		1302068	0					
ANR	1302082	Identifier	cmp		1302068	1					
ANR	1302083	Parameter	int v	273:58:6121:6125	1302068	3	True				
ANR	1302084	ParameterType	int		1302068	0					
ANR	1302085	Identifier	v		1302068	1					
ANR	1302086	CFGEntryNode	ENTRY		1302068		True				
ANR	1302087	CFGExitNode	EXIT		1302068		True				
ANR	1302088	Symbol	egg		1302068						
ANR	1302089	Symbol	reg		1302068						
ANR	1302090	Symbol	v		1302068						
ANR	1302091	Symbol	cmp		1302068						
ANR	1302092	Function	r_egg_printf	277:0:6151:6387							
ANR	1302093	FunctionDef	"r_egg_printf (REgg * egg , const char * fmt)"		1302092	0					
ANR	1302094	CompoundStatement		277:57:6208:6387	1302092	0					
ANR	1302095	IdentifierDeclStatement	va_list ap ;	278:1:6211:6221	1302092	0	True				
ANR	1302096	IdentifierDecl	ap		1302092	0					
ANR	1302097	IdentifierDeclType	va_list		1302092	0					
ANR	1302098	Identifier	ap		1302092	1					
ANR	1302099	IdentifierDeclStatement	int len ;	279:1:6224:6231	1302092	1	True				
ANR	1302100	IdentifierDecl	len		1302092	0					
ANR	1302101	IdentifierDeclType	int		1302092	0					
ANR	1302102	Identifier	len		1302092	1					
ANR	1302103	IdentifierDeclStatement	char buf [ 1024 ] ;	280:1:6234:6248	1302092	2	True				
ANR	1302104	IdentifierDecl	buf [ 1024 ]		1302092	0					
ANR	1302105	IdentifierDeclType	char [ 1024 ]		1302092	0					
ANR	1302106	Identifier	buf		1302092	1					
ANR	1302107	PrimaryExpression	1024		1302092	2					
ANR	1302108	ExpressionStatement	"va_start ( ap , fmt )"	281:1:6251:6269	1302092	3	True				
ANR	1302109	CallExpression	"va_start ( ap , fmt )"		1302092	0					
ANR	1302110	Callee	va_start		1302092	0					
ANR	1302111	Identifier	va_start		1302092	0					
ANR	1302112	ArgumentList	ap		1302092	1					
ANR	1302113	Argument	ap		1302092	0					
ANR	1302114	Identifier	ap		1302092	0					
ANR	1302115	Argument	fmt		1302092	1					
ANR	1302116	Identifier	fmt		1302092	0					
ANR	1302117	ExpressionStatement	"len = vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"	282:1:6272:6316	1302092	4	True				
ANR	1302118	AssignmentExpression	"len = vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		1302092	0		=			
ANR	1302119	Identifier	len		1302092	0					
ANR	1302120	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		1302092	1					
ANR	1302121	Callee	vsnprintf		1302092	0					
ANR	1302122	Identifier	vsnprintf		1302092	0					
ANR	1302123	ArgumentList	buf		1302092	1					
ANR	1302124	Argument	buf		1302092	0					
ANR	1302125	Identifier	buf		1302092	0					
ANR	1302126	Argument	sizeof ( buf )		1302092	1					
ANR	1302127	SizeofExpression	sizeof ( buf )		1302092	0					
ANR	1302128	Sizeof	sizeof		1302092	0					
ANR	1302129	SizeofOperand	buf		1302092	1					
ANR	1302130	Argument	fmt		1302092	2					
ANR	1302131	Identifier	fmt		1302092	0					
ANR	1302132	Argument	ap		1302092	3					
ANR	1302133	Identifier	ap		1302092	0					
ANR	1302134	ExpressionStatement	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) buf , len )"	283:1:6319:6371	1302092	5	True				
ANR	1302135	CallExpression	"r_buf_append_bytes ( egg -> buf , ( const ut8 * ) buf , len )"		1302092	0					
ANR	1302136	Callee	r_buf_append_bytes		1302092	0					
ANR	1302137	Identifier	r_buf_append_bytes		1302092	0					
ANR	1302138	ArgumentList	egg -> buf		1302092	1					
ANR	1302139	Argument	egg -> buf		1302092	0					
ANR	1302140	PtrMemberAccess	egg -> buf		1302092	0					
ANR	1302141	Identifier	egg		1302092	0					
ANR	1302142	Identifier	buf		1302092	1					
ANR	1302143	Argument	( const ut8 * ) buf		1302092	1					
ANR	1302144	CastExpression	( const ut8 * ) buf		1302092	0					
ANR	1302145	CastTarget	const ut8 *		1302092	0					
ANR	1302146	Identifier	buf		1302092	1					
ANR	1302147	Argument	len		1302092	2					
ANR	1302148	Identifier	len		1302092	0					
ANR	1302149	ExpressionStatement	va_end ( ap )	284:1:6374:6385	1302092	6	True				
ANR	1302150	CallExpression	va_end ( ap )		1302092	0					
ANR	1302151	Callee	va_end		1302092	0					
ANR	1302152	Identifier	va_end		1302092	0					
ANR	1302153	ArgumentList	ap		1302092	1					
ANR	1302154	Argument	ap		1302092	0					
ANR	1302155	Identifier	ap		1302092	0					
ANR	1302156	ReturnType	R_API void		1302092	1					
ANR	1302157	Identifier	r_egg_printf		1302092	2					
ANR	1302158	ParameterList	"REgg * egg , const char * fmt"		1302092	3					
ANR	1302159	Parameter	REgg * egg	277:24:6175:6183	1302092	0	True				
ANR	1302160	ParameterType	REgg *		1302092	0					
ANR	1302161	Identifier	egg		1302092	1					
ANR	1302162	Parameter	const char * fmt	277:35:6186:6200	1302092	1	True				
ANR	1302163	ParameterType	const char *		1302092	0					
ANR	1302164	Identifier	fmt		1302092	1					
ANR	1302165	CFGEntryNode	ENTRY		1302092		True				
ANR	1302166	CFGExitNode	EXIT		1302092		True				
ANR	1302167	Symbol	* egg		1302092						
ANR	1302168	Symbol	buf		1302092						
ANR	1302169	Symbol	egg		1302092						
ANR	1302170	Symbol	len		1302092						
ANR	1302171	Symbol	egg -> buf		1302092						
ANR	1302172	Symbol	fmt		1302092						
ANR	1302173	Symbol	vsnprintf		1302092						
ANR	1302174	Symbol	ap		1302092						
ANR	1302175	Function	r_egg_assemble_asm	287:0:6390:7430							
ANR	1302176	FunctionDef	"r_egg_assemble_asm (REgg * egg , char * * asm_list)"		1302175	0					
ANR	1302177	CompoundStatement		287:58:6448:7430	1302175	0					
ANR	1302178	IdentifierDeclStatement	RAsmCode * asmcode = NULL ;	288:1:6451:6475	1302175	0	True				
ANR	1302179	IdentifierDecl	* asmcode = NULL		1302175	0					
ANR	1302180	IdentifierDeclType	RAsmCode *		1302175	0					
ANR	1302181	Identifier	asmcode		1302175	1					
ANR	1302182	AssignmentExpression	* asmcode = NULL		1302175	2		=			
ANR	1302183	Identifier	NULL		1302175	0					
ANR	1302184	Identifier	NULL		1302175	1					
ANR	1302185	IdentifierDeclStatement	char * code = NULL ;	289:1:6478:6495	1302175	1	True				
ANR	1302186	IdentifierDecl	* code = NULL		1302175	0					
ANR	1302187	IdentifierDeclType	char *		1302175	0					
ANR	1302188	Identifier	code		1302175	1					
ANR	1302189	AssignmentExpression	* code = NULL		1302175	2		=			
ANR	1302190	Identifier	NULL		1302175	0					
ANR	1302191	Identifier	NULL		1302175	1					
ANR	1302192	IdentifierDeclStatement	char * asm_name = NULL ;	290:1:6498:6519	1302175	2	True				
ANR	1302193	IdentifierDecl	* asm_name = NULL		1302175	0					
ANR	1302194	IdentifierDeclType	char *		1302175	0					
ANR	1302195	Identifier	asm_name		1302175	1					
ANR	1302196	AssignmentExpression	* asm_name = NULL		1302175	2		=			
ANR	1302197	Identifier	NULL		1302175	0					
ANR	1302198	Identifier	NULL		1302175	1					
ANR	1302199	IfStatement	if ( asm_list )		1302175	3					
ANR	1302200	Condition	asm_list	292:5:6527:6534	1302175	0	True				
ANR	1302201	Identifier	asm_list		1302175	0					
ANR	1302202	CompoundStatement		7:2:92:103	1302175	1					
ANR	1302203	IdentifierDeclStatement	char * * asm_ ;	293:2:6541:6552	1302175	0	True				
ANR	1302204	IdentifierDecl	* * asm_		1302175	0					
ANR	1302205	IdentifierDeclType	char * *		1302175	0					
ANR	1302206	Identifier	asm_		1302175	1					
ANR	1302207	ForStatement	for ( asm_ = asm_list ; * asm_ ; asm_ += 2 )		1302175	1					
ANR	1302208	ForInit	asm_ = asm_list ;	295:7:6562:6577	1302175	0	True				
ANR	1302209	AssignmentExpression	asm_ = asm_list		1302175	0		=			
ANR	1302210	Identifier	asm_		1302175	0					
ANR	1302211	Identifier	asm_list		1302175	1					
ANR	1302212	Condition	* asm_	295:24:6579:6583	1302175	1	True				
ANR	1302213	UnaryOperationExpression	* asm_		1302175	0					
ANR	1302214	UnaryOperator	*		1302175	0					
ANR	1302215	Identifier	asm_		1302175	1					
ANR	1302216	AssignmentExpression	asm_ += 2	295:31:6586:6594	1302175	2	True	+=			
ANR	1302217	Identifier	asm_		1302175	0					
ANR	1302218	PrimaryExpression	2		1302175	1					
ANR	1302219	CompoundStatement		9:42:148:148	1302175	3					
ANR	1302220	IfStatement	"if ( ! strcmp ( egg -> remit -> arch , asm_ [ 0 ] ) )"		1302175	0					
ANR	1302221	Condition	"! strcmp ( egg -> remit -> arch , asm_ [ 0 ] )"	296:7:6606:6640	1302175	0	True				
ANR	1302222	UnaryOperationExpression	"! strcmp ( egg -> remit -> arch , asm_ [ 0 ] )"		1302175	0					
ANR	1302223	UnaryOperator	!		1302175	0					
ANR	1302224	CallExpression	"strcmp ( egg -> remit -> arch , asm_ [ 0 ] )"		1302175	1					
ANR	1302225	Callee	strcmp		1302175	0					
ANR	1302226	Identifier	strcmp		1302175	0					
ANR	1302227	ArgumentList	egg -> remit -> arch		1302175	1					
ANR	1302228	Argument	egg -> remit -> arch		1302175	0					
ANR	1302229	PtrMemberAccess	egg -> remit -> arch		1302175	0					
ANR	1302230	PtrMemberAccess	egg -> remit		1302175	0					
ANR	1302231	Identifier	egg		1302175	0					
ANR	1302232	Identifier	remit		1302175	1					
ANR	1302233	Identifier	arch		1302175	1					
ANR	1302234	Argument	asm_ [ 0 ]		1302175	1					
ANR	1302235	ArrayIndexing	asm_ [ 0 ]		1302175	0					
ANR	1302236	Identifier	asm_		1302175	0					
ANR	1302237	PrimaryExpression	0		1302175	1					
ANR	1302238	CompoundStatement		10:44:194:194	1302175	1					
ANR	1302239	ExpressionStatement	asm_name = asm_ [ 1 ]	297:4:6649:6667	1302175	0	True				
ANR	1302240	AssignmentExpression	asm_name = asm_ [ 1 ]		1302175	0		=			
ANR	1302241	Identifier	asm_name		1302175	0					
ANR	1302242	ArrayIndexing	asm_ [ 1 ]		1302175	1					
ANR	1302243	Identifier	asm_		1302175	0					
ANR	1302244	PrimaryExpression	1		1302175	1					
ANR	1302245	BreakStatement	break ;	298:4:6673:6678	1302175	1	True				
ANR	1302246	IfStatement	if ( ! asm_name )		1302175	4					
ANR	1302247	Condition	! asm_name	302:5:6697:6705	1302175	0	True				
ANR	1302248	UnaryOperationExpression	! asm_name		1302175	0					
ANR	1302249	UnaryOperator	!		1302175	0					
ANR	1302250	Identifier	asm_name		1302175	1					
ANR	1302251	CompoundStatement		16:16:259:259	1302175	1					
ANR	1302252	IfStatement	if ( egg -> remit == & emit_x86 || egg -> remit == & emit_x64 )		1302175	0					
ANR	1302253	Condition	egg -> remit == & emit_x86 || egg -> remit == & emit_x64	303:6:6716:6765	1302175	0	True				
ANR	1302254	OrExpression	egg -> remit == & emit_x86 || egg -> remit == & emit_x64		1302175	0		||			
ANR	1302255	EqualityExpression	egg -> remit == & emit_x86		1302175	0		==			
ANR	1302256	PtrMemberAccess	egg -> remit		1302175	0					
ANR	1302257	Identifier	egg		1302175	0					
ANR	1302258	Identifier	remit		1302175	1					
ANR	1302259	UnaryOperationExpression	& emit_x86		1302175	1					
ANR	1302260	UnaryOperator	&		1302175	0					
ANR	1302261	Identifier	emit_x86		1302175	1					
ANR	1302262	EqualityExpression	egg -> remit == & emit_x64		1302175	1		==			
ANR	1302263	PtrMemberAccess	egg -> remit		1302175	0					
ANR	1302264	Identifier	egg		1302175	0					
ANR	1302265	Identifier	remit		1302175	1					
ANR	1302266	UnaryOperationExpression	& emit_x64		1302175	1					
ANR	1302267	UnaryOperator	&		1302175	0					
ANR	1302268	Identifier	emit_x64		1302175	1					
ANR	1302269	CompoundStatement		17:58:319:319	1302175	1					
ANR	1302270	ExpressionStatement	"asm_name = ""x86.nz"""	304:3:6773:6792	1302175	0	True				
ANR	1302271	AssignmentExpression	"asm_name = ""x86.nz"""		1302175	0		=			
ANR	1302272	Identifier	asm_name		1302175	0					
ANR	1302273	PrimaryExpression	"""x86.nz"""		1302175	1					
ANR	1302274	ElseStatement	else		1302175	0					
ANR	1302275	IfStatement	if ( egg -> remit == & emit_arm )		1302175	0					
ANR	1302276	Condition	egg -> remit == & emit_arm	305:13:6807:6829	1302175	0	True				
ANR	1302277	EqualityExpression	egg -> remit == & emit_arm		1302175	0		==			
ANR	1302278	PtrMemberAccess	egg -> remit		1302175	0					
ANR	1302279	Identifier	egg		1302175	0					
ANR	1302280	Identifier	remit		1302175	1					
ANR	1302281	UnaryOperationExpression	& emit_arm		1302175	1					
ANR	1302282	UnaryOperator	&		1302175	0					
ANR	1302283	Identifier	emit_arm		1302175	1					
ANR	1302284	CompoundStatement		19:38:383:383	1302175	1					
ANR	1302285	ExpressionStatement	"asm_name = ""arm"""	306:3:6837:6853	1302175	0	True				
ANR	1302286	AssignmentExpression	"asm_name = ""arm"""		1302175	0		=			
ANR	1302287	Identifier	asm_name		1302175	0					
ANR	1302288	PrimaryExpression	"""arm"""		1302175	1					
ANR	1302289	IfStatement	if ( asm_name )		1302175	5					
ANR	1302290	Condition	asm_name	309:5:6867:6874	1302175	0	True				
ANR	1302291	Identifier	asm_name		1302175	0					
ANR	1302292	CompoundStatement		23:15:428:428	1302175	1					
ANR	1302293	ExpressionStatement	"r_asm_use ( egg -> rasm , asm_name )"	310:2:6881:6912	1302175	0	True				
ANR	1302294	CallExpression	"r_asm_use ( egg -> rasm , asm_name )"		1302175	0					
ANR	1302295	Callee	r_asm_use		1302175	0					
ANR	1302296	Identifier	r_asm_use		1302175	0					
ANR	1302297	ArgumentList	egg -> rasm		1302175	1					
ANR	1302298	Argument	egg -> rasm		1302175	0					
ANR	1302299	PtrMemberAccess	egg -> rasm		1302175	0					
ANR	1302300	Identifier	egg		1302175	0					
ANR	1302301	Identifier	rasm		1302175	1					
ANR	1302302	Argument	asm_name		1302175	1					
ANR	1302303	Identifier	asm_name		1302175	0					
ANR	1302304	ExpressionStatement	"r_asm_set_bits ( egg -> rasm , egg -> bits )"	311:2:6916:6953	1302175	1	True				
ANR	1302305	CallExpression	"r_asm_set_bits ( egg -> rasm , egg -> bits )"		1302175	0					
ANR	1302306	Callee	r_asm_set_bits		1302175	0					
ANR	1302307	Identifier	r_asm_set_bits		1302175	0					
ANR	1302308	ArgumentList	egg -> rasm		1302175	1					
ANR	1302309	Argument	egg -> rasm		1302175	0					
ANR	1302310	PtrMemberAccess	egg -> rasm		1302175	0					
ANR	1302311	Identifier	egg		1302175	0					
ANR	1302312	Identifier	rasm		1302175	1					
ANR	1302313	Argument	egg -> bits		1302175	1					
ANR	1302314	PtrMemberAccess	egg -> bits		1302175	0					
ANR	1302315	Identifier	egg		1302175	0					
ANR	1302316	Identifier	bits		1302175	1					
ANR	1302317	ExpressionStatement	"r_asm_set_big_endian ( egg -> rasm , egg -> endian )"	312:2:6957:7002	1302175	2	True				
ANR	1302318	CallExpression	"r_asm_set_big_endian ( egg -> rasm , egg -> endian )"		1302175	0					
ANR	1302319	Callee	r_asm_set_big_endian		1302175	0					
ANR	1302320	Identifier	r_asm_set_big_endian		1302175	0					
ANR	1302321	ArgumentList	egg -> rasm		1302175	1					
ANR	1302322	Argument	egg -> rasm		1302175	0					
ANR	1302323	PtrMemberAccess	egg -> rasm		1302175	0					
ANR	1302324	Identifier	egg		1302175	0					
ANR	1302325	Identifier	rasm		1302175	1					
ANR	1302326	Argument	egg -> endian		1302175	1					
ANR	1302327	PtrMemberAccess	egg -> endian		1302175	0					
ANR	1302328	Identifier	egg		1302175	0					
ANR	1302329	Identifier	endian		1302175	1					
ANR	1302330	ExpressionStatement	"r_asm_set_syntax ( egg -> rasm , R_ASM_SYNTAX_INTEL )"	313:2:7006:7054	1302175	3	True				
ANR	1302331	CallExpression	"r_asm_set_syntax ( egg -> rasm , R_ASM_SYNTAX_INTEL )"		1302175	0					
ANR	1302332	Callee	r_asm_set_syntax		1302175	0					
ANR	1302333	Identifier	r_asm_set_syntax		1302175	0					
ANR	1302334	ArgumentList	egg -> rasm		1302175	1					
ANR	1302335	Argument	egg -> rasm		1302175	0					
ANR	1302336	PtrMemberAccess	egg -> rasm		1302175	0					
ANR	1302337	Identifier	egg		1302175	0					
ANR	1302338	Identifier	rasm		1302175	1					
ANR	1302339	Argument	R_ASM_SYNTAX_INTEL		1302175	1					
ANR	1302340	Identifier	R_ASM_SYNTAX_INTEL		1302175	0					
ANR	1302341	ExpressionStatement	code = r_buf_to_string ( egg -> buf )	314:2:7058:7091	1302175	4	True				
ANR	1302342	AssignmentExpression	code = r_buf_to_string ( egg -> buf )		1302175	0		=			
ANR	1302343	Identifier	code		1302175	0					
ANR	1302344	CallExpression	r_buf_to_string ( egg -> buf )		1302175	1					
ANR	1302345	Callee	r_buf_to_string		1302175	0					
ANR	1302346	Identifier	r_buf_to_string		1302175	0					
ANR	1302347	ArgumentList	egg -> buf		1302175	1					
ANR	1302348	Argument	egg -> buf		1302175	0					
ANR	1302349	PtrMemberAccess	egg -> buf		1302175	0					
ANR	1302350	Identifier	egg		1302175	0					
ANR	1302351	Identifier	buf		1302175	1					
ANR	1302352	ExpressionStatement	"asmcode = r_asm_massemble ( egg -> rasm , code )"	315:2:7095:7138	1302175	5	True				
ANR	1302353	AssignmentExpression	"asmcode = r_asm_massemble ( egg -> rasm , code )"		1302175	0		=			
ANR	1302354	Identifier	asmcode		1302175	0					
ANR	1302355	CallExpression	"r_asm_massemble ( egg -> rasm , code )"		1302175	1					
ANR	1302356	Callee	r_asm_massemble		1302175	0					
ANR	1302357	Identifier	r_asm_massemble		1302175	0					
ANR	1302358	ArgumentList	egg -> rasm		1302175	1					
ANR	1302359	Argument	egg -> rasm		1302175	0					
ANR	1302360	PtrMemberAccess	egg -> rasm		1302175	0					
ANR	1302361	Identifier	egg		1302175	0					
ANR	1302362	Identifier	rasm		1302175	1					
ANR	1302363	Argument	code		1302175	1					
ANR	1302364	Identifier	code		1302175	0					
ANR	1302365	IfStatement	if ( asmcode )		1302175	6					
ANR	1302366	Condition	asmcode	316:6:7146:7152	1302175	0	True				
ANR	1302367	Identifier	asmcode		1302175	0					
ANR	1302368	CompoundStatement		30:15:706:706	1302175	1					
ANR	1302369	IfStatement	if ( asmcode -> len > 0 )		1302175	0					
ANR	1302370	Condition	asmcode -> len > 0	317:7:7164:7179	1302175	0	True				
ANR	1302371	RelationalExpression	asmcode -> len > 0		1302175	0		>			
ANR	1302372	PtrMemberAccess	asmcode -> len		1302175	0					
ANR	1302373	Identifier	asmcode		1302175	0					
ANR	1302374	Identifier	len		1302175	1					
ANR	1302375	PrimaryExpression	0		1302175	1					
ANR	1302376	CompoundStatement		31:25:733:733	1302175	1					
ANR	1302377	ExpressionStatement	"r_buf_append_bytes ( egg -> bin , asmcode -> bytes , asmcode -> len )"	318:4:7188:7247	1302175	0	True				
ANR	1302378	CallExpression	"r_buf_append_bytes ( egg -> bin , asmcode -> bytes , asmcode -> len )"		1302175	0					
ANR	1302379	Callee	r_buf_append_bytes		1302175	0					
ANR	1302380	Identifier	r_buf_append_bytes		1302175	0					
ANR	1302381	ArgumentList	egg -> bin		1302175	1					
ANR	1302382	Argument	egg -> bin		1302175	0					
ANR	1302383	PtrMemberAccess	egg -> bin		1302175	0					
ANR	1302384	Identifier	egg		1302175	0					
ANR	1302385	Identifier	bin		1302175	1					
ANR	1302386	Argument	asmcode -> bytes		1302175	1					
ANR	1302387	PtrMemberAccess	asmcode -> bytes		1302175	0					
ANR	1302388	Identifier	asmcode		1302175	0					
ANR	1302389	Identifier	bytes		1302175	1					
ANR	1302390	Argument	asmcode -> len		1302175	2					
ANR	1302391	PtrMemberAccess	asmcode -> len		1302175	0					
ANR	1302392	Identifier	asmcode		1302175	0					
ANR	1302393	Identifier	len		1302175	1					
ANR	1302394	ElseStatement	else		1302175	0					
ANR	1302395	CompoundStatement		35:9:852:852	1302175	0					
ANR	1302396	ExpressionStatement	"eprintf ( ""fail assembling\\n"" )"	322:3:7306:7335	1302175	0	True				
ANR	1302397	CallExpression	"eprintf ( ""fail assembling\\n"" )"		1302175	0					
ANR	1302398	Callee	eprintf		1302175	0					
ANR	1302399	Identifier	eprintf		1302175	0					
ANR	1302400	ArgumentList	"""fail assembling\\n"""		1302175	1					
ANR	1302401	Argument	"""fail assembling\\n"""		1302175	0					
ANR	1302402	PrimaryExpression	"""fail assembling\\n"""		1302175	0					
ANR	1302403	ExpressionStatement	free ( code )	325:1:7345:7356	1302175	6	True				
ANR	1302404	CallExpression	free ( code )		1302175	0					
ANR	1302405	Callee	free		1302175	0					
ANR	1302406	Identifier	free		1302175	0					
ANR	1302407	ArgumentList	code		1302175	1					
ANR	1302408	Argument	code		1302175	0					
ANR	1302409	Identifier	code		1302175	0					
ANR	1302410	IdentifierDeclStatement	bool ret = ( asmcode != NULL ) ;	326:1:7359:7387	1302175	7	True				
ANR	1302411	IdentifierDecl	ret = ( asmcode != NULL )		1302175	0					
ANR	1302412	IdentifierDeclType	bool		1302175	0					
ANR	1302413	Identifier	ret		1302175	1					
ANR	1302414	AssignmentExpression	ret = ( asmcode != NULL )		1302175	2		=			
ANR	1302415	Identifier	ret		1302175	0					
ANR	1302416	EqualityExpression	asmcode != NULL		1302175	1		!=			
ANR	1302417	Identifier	asmcode		1302175	0					
ANR	1302418	Identifier	NULL		1302175	1					
ANR	1302419	ExpressionStatement	r_asm_code_free ( asmcode )	327:1:7390:7415	1302175	8	True				
ANR	1302420	CallExpression	r_asm_code_free ( asmcode )		1302175	0					
ANR	1302421	Callee	r_asm_code_free		1302175	0					
ANR	1302422	Identifier	r_asm_code_free		1302175	0					
ANR	1302423	ArgumentList	asmcode		1302175	1					
ANR	1302424	Argument	asmcode		1302175	0					
ANR	1302425	Identifier	asmcode		1302175	0					
ANR	1302426	ReturnStatement	return ret ;	328:1:7418:7428	1302175	9	True				
ANR	1302427	Identifier	ret		1302175	0					
ANR	1302428	ReturnType	R_API bool		1302175	1					
ANR	1302429	Identifier	r_egg_assemble_asm		1302175	2					
ANR	1302430	ParameterList	"REgg * egg , char * * asm_list"		1302175	3					
ANR	1302431	Parameter	REgg * egg	287:30:6420:6428	1302175	0	True				
ANR	1302432	ParameterType	REgg *		1302175	0					
ANR	1302433	Identifier	egg		1302175	1					
ANR	1302434	Parameter	char * * asm_list	287:41:6431:6445	1302175	1	True				
ANR	1302435	ParameterType	char * *		1302175	0					
ANR	1302436	Identifier	asm_list		1302175	1					
ANR	1302437	CFGEntryNode	ENTRY		1302175		True				
ANR	1302438	CFGExitNode	EXIT		1302175		True				
ANR	1302439	Symbol	asmcode		1302175						
ANR	1302440	Symbol	R_ASM_SYNTAX_INTEL		1302175						
ANR	1302441	Symbol	code		1302175						
ANR	1302442	Symbol	egg		1302175						
ANR	1302443	Symbol	egg -> endian		1302175						
ANR	1302444	Symbol	& emit_x64		1302175						
ANR	1302445	Symbol	& emit_x86		1302175						
ANR	1302446	Symbol	egg -> remit		1302175						
ANR	1302447	Symbol	asm_list		1302175						
ANR	1302448	Symbol	egg -> rasm		1302175						
ANR	1302449	Symbol	* egg		1302175						
ANR	1302450	Symbol	asmcode -> bytes		1302175						
ANR	1302451	Symbol	egg -> bits		1302175						
ANR	1302452	Symbol	r_asm_massemble		1302175						
ANR	1302453	Symbol	* * egg		1302175						
ANR	1302454	Symbol	egg -> buf		1302175						
ANR	1302455	Symbol	r_buf_to_string		1302175						
ANR	1302456	Symbol	strcmp		1302175						
ANR	1302457	Symbol	ret		1302175						
ANR	1302458	Symbol	asm_name		1302175						
ANR	1302459	Symbol	NULL		1302175						
ANR	1302460	Symbol	& emit_arm		1302175						
ANR	1302461	Symbol	* asm_		1302175						
ANR	1302462	Symbol	* egg -> remit		1302175						
ANR	1302463	Symbol	asm_		1302175						
ANR	1302464	Symbol	asmcode -> len		1302175						
ANR	1302465	Symbol	egg -> bin		1302175						
ANR	1302466	Symbol	egg -> remit -> arch		1302175						
ANR	1302467	Symbol	* asmcode		1302175						
ANR	1302468	Function	r_egg_assemble	331:0:7433:7512							
ANR	1302469	FunctionDef	r_egg_assemble (REgg * egg)		1302468	0					
ANR	1302470	CompoundStatement		331:37:7470:7512	1302468	0					
ANR	1302471	ReturnStatement	"return r_egg_assemble_asm ( egg , NULL ) ;"	332:1:7473:7510	1302468	0	True				
ANR	1302472	CallExpression	"r_egg_assemble_asm ( egg , NULL )"		1302468	0					
ANR	1302473	Callee	r_egg_assemble_asm		1302468	0					
ANR	1302474	Identifier	r_egg_assemble_asm		1302468	0					
ANR	1302475	ArgumentList	egg		1302468	1					
ANR	1302476	Argument	egg		1302468	0					
ANR	1302477	Identifier	egg		1302468	0					
ANR	1302478	Argument	NULL		1302468	1					
ANR	1302479	Identifier	NULL		1302468	0					
ANR	1302480	ReturnType	R_API bool		1302468	1					
ANR	1302481	Identifier	r_egg_assemble		1302468	2					
ANR	1302482	ParameterList	REgg * egg		1302468	3					
ANR	1302483	Parameter	REgg * egg	331:26:7459:7467	1302468	0	True				
ANR	1302484	ParameterType	REgg *		1302468	0					
ANR	1302485	Identifier	egg		1302468	1					
ANR	1302486	CFGEntryNode	ENTRY		1302468		True				
ANR	1302487	CFGExitNode	EXIT		1302468		True				
ANR	1302488	Symbol	NULL		1302468						
ANR	1302489	Symbol	egg		1302468						
ANR	1302490	Symbol	r_egg_assemble_asm		1302468						
ANR	1302491	Function	r_egg_compile	335:0:7515:8250							
ANR	1302492	FunctionDef	r_egg_compile (REgg * egg)		1302491	0					
ANR	1302493	CompoundStatement		335:35:7550:8250	1302491	0					
ANR	1302494	ExpressionStatement	"r_buf_seek ( egg -> src , 0 , R_BUF_SET )"	336:1:7553:7588	1302491	0	True				
ANR	1302495	CallExpression	"r_buf_seek ( egg -> src , 0 , R_BUF_SET )"		1302491	0					
ANR	1302496	Callee	r_buf_seek		1302491	0					
ANR	1302497	Identifier	r_buf_seek		1302491	0					
ANR	1302498	ArgumentList	egg -> src		1302491	1					
ANR	1302499	Argument	egg -> src		1302491	0					
ANR	1302500	PtrMemberAccess	egg -> src		1302491	0					
ANR	1302501	Identifier	egg		1302491	0					
ANR	1302502	Identifier	src		1302491	1					
ANR	1302503	Argument	0		1302491	1					
ANR	1302504	PrimaryExpression	0		1302491	0					
ANR	1302505	Argument	R_BUF_SET		1302491	2					
ANR	1302506	Identifier	R_BUF_SET		1302491	0					
ANR	1302507	IdentifierDeclStatement	char b ;	337:1:7591:7597	1302491	1	True				
ANR	1302508	IdentifierDecl	b		1302491	0					
ANR	1302509	IdentifierDeclType	char		1302491	0					
ANR	1302510	Identifier	b		1302491	1					
ANR	1302511	IdentifierDeclStatement	"int r = r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) ) ;"	338:1:7600:7652	1302491	2	True				
ANR	1302512	IdentifierDecl	"r = r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) )"		1302491	0					
ANR	1302513	IdentifierDeclType	int		1302491	0					
ANR	1302514	Identifier	r		1302491	1					
ANR	1302515	AssignmentExpression	"r = r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) )"		1302491	2		=			
ANR	1302516	Identifier	r		1302491	0					
ANR	1302517	CallExpression	"r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) )"		1302491	1					
ANR	1302518	Callee	r_buf_read		1302491	0					
ANR	1302519	Identifier	r_buf_read		1302491	0					
ANR	1302520	ArgumentList	egg -> src		1302491	1					
ANR	1302521	Argument	egg -> src		1302491	0					
ANR	1302522	PtrMemberAccess	egg -> src		1302491	0					
ANR	1302523	Identifier	egg		1302491	0					
ANR	1302524	Identifier	src		1302491	1					
ANR	1302525	Argument	( ut8 * ) & b		1302491	1					
ANR	1302526	CastExpression	( ut8 * ) & b		1302491	0					
ANR	1302527	CastTarget	ut8 *		1302491	0					
ANR	1302528	UnaryOperationExpression	& b		1302491	1					
ANR	1302529	UnaryOperator	&		1302491	0					
ANR	1302530	Identifier	b		1302491	1					
ANR	1302531	Argument	sizeof ( b )		1302491	2					
ANR	1302532	SizeofExpression	sizeof ( b )		1302491	0					
ANR	1302533	Sizeof	sizeof		1302491	0					
ANR	1302534	SizeofOperand	b		1302491	1					
ANR	1302535	IfStatement	if ( r != sizeof ( b ) || ! egg -> remit )		1302491	3					
ANR	1302536	Condition	r != sizeof ( b ) || ! egg -> remit	339:5:7659:7688	1302491	0	True				
ANR	1302537	OrExpression	r != sizeof ( b ) || ! egg -> remit		1302491	0		||			
ANR	1302538	EqualityExpression	r != sizeof ( b )		1302491	0		!=			
ANR	1302539	Identifier	r		1302491	0					
ANR	1302540	SizeofExpression	sizeof ( b )		1302491	1					
ANR	1302541	Sizeof	sizeof		1302491	0					
ANR	1302542	SizeofOperand	b		1302491	1					
ANR	1302543	UnaryOperationExpression	! egg -> remit		1302491	1					
ANR	1302544	UnaryOperator	!		1302491	0					
ANR	1302545	PtrMemberAccess	egg -> remit		1302491	1					
ANR	1302546	Identifier	egg		1302491	0					
ANR	1302547	Identifier	remit		1302491	1					
ANR	1302548	CompoundStatement		5:37:140:140	1302491	1					
ANR	1302549	ReturnStatement	return true ;	340:2:7695:7706	1302491	0	True				
ANR	1302550	Identifier	true		1302491	0					
ANR	1302551	ExpressionStatement	r_egg_lang_init ( egg )	343:1:7749:7770	1302491	4	True				
ANR	1302552	CallExpression	r_egg_lang_init ( egg )		1302491	0					
ANR	1302553	Callee	r_egg_lang_init		1302491	0					
ANR	1302554	Identifier	r_egg_lang_init		1302491	0					
ANR	1302555	ArgumentList	egg		1302491	1					
ANR	1302556	Argument	egg		1302491	0					
ANR	1302557	Identifier	egg		1302491	0					
ANR	1302558	ForStatement	for ( ; b ; )		1302491	5					
ANR	1302559	Condition	b	344:8:7780:7780	1302491	0	True				
ANR	1302560	Identifier	b		1302491	0					
ANR	1302561	CompoundStatement		16:2:379:431	1302491	1					
ANR	1302562	ExpressionStatement	"r_egg_lang_parsechar ( egg , b )"	345:2:7789:7818	1302491	0	True				
ANR	1302563	CallExpression	"r_egg_lang_parsechar ( egg , b )"		1302491	0					
ANR	1302564	Callee	r_egg_lang_parsechar		1302491	0					
ANR	1302565	Identifier	r_egg_lang_parsechar		1302491	0					
ANR	1302566	ArgumentList	egg		1302491	1					
ANR	1302567	Argument	egg		1302491	0					
ANR	1302568	Identifier	egg		1302491	0					
ANR	1302569	Argument	b		1302491	1					
ANR	1302570	Identifier	b		1302491	0					
ANR	1302571	IfStatement	if ( egg -> lang . elem_n >= sizeof ( egg -> lang . elem ) )		1302491	1					
ANR	1302572	Condition	egg -> lang . elem_n >= sizeof ( egg -> lang . elem )	346:6:7826:7868	1302491	0	True				
ANR	1302573	RelationalExpression	egg -> lang . elem_n >= sizeof ( egg -> lang . elem )		1302491	0		>=			
ANR	1302574	MemberAccess	egg -> lang . elem_n		1302491	0					
ANR	1302575	PtrMemberAccess	egg -> lang		1302491	0					
ANR	1302576	Identifier	egg		1302491	0					
ANR	1302577	Identifier	lang		1302491	1					
ANR	1302578	Identifier	elem_n		1302491	1					
ANR	1302579	SizeofExpression	sizeof ( egg -> lang . elem )		1302491	1					
ANR	1302580	Sizeof	sizeof		1302491	0					
ANR	1302581	MemberAccess	egg -> lang . elem		1302491	1					
ANR	1302582	PtrMemberAccess	egg -> lang		1302491	0					
ANR	1302583	Identifier	egg		1302491	0					
ANR	1302584	Identifier	lang		1302491	1					
ANR	1302585	Identifier	elem		1302491	1					
ANR	1302586	CompoundStatement		12:51:320:320	1302491	1					
ANR	1302587	ExpressionStatement	"eprintf ( ""ERROR: elem too large.\\n"" )"	347:3:7876:7912	1302491	0	True				
ANR	1302588	CallExpression	"eprintf ( ""ERROR: elem too large.\\n"" )"		1302491	0					
ANR	1302589	Callee	eprintf		1302491	0					
ANR	1302590	Identifier	eprintf		1302491	0					
ANR	1302591	ArgumentList	"""ERROR: elem too large.\\n"""		1302491	1					
ANR	1302592	Argument	"""ERROR: elem too large.\\n"""		1302491	0					
ANR	1302593	PrimaryExpression	"""ERROR: elem too large.\\n"""		1302491	0					
ANR	1302594	BreakStatement	break ;	348:3:7917:7922	1302491	1	True				
ANR	1302595	IdentifierDeclStatement	"int r = r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) ) ;"	350:2:7930:7982	1302491	2	True				
ANR	1302596	IdentifierDecl	"r = r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) )"		1302491	0					
ANR	1302597	IdentifierDeclType	int		1302491	0					
ANR	1302598	Identifier	r		1302491	1					
ANR	1302599	AssignmentExpression	"r = r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) )"		1302491	2		=			
ANR	1302600	Identifier	r		1302491	0					
ANR	1302601	CallExpression	"r_buf_read ( egg -> src , ( ut8 * ) & b , sizeof ( b ) )"		1302491	1					
ANR	1302602	Callee	r_buf_read		1302491	0					
ANR	1302603	Identifier	r_buf_read		1302491	0					
ANR	1302604	ArgumentList	egg -> src		1302491	1					
ANR	1302605	Argument	egg -> src		1302491	0					
ANR	1302606	PtrMemberAccess	egg -> src		1302491	0					
ANR	1302607	Identifier	egg		1302491	0					
ANR	1302608	Identifier	src		1302491	1					
ANR	1302609	Argument	( ut8 * ) & b		1302491	1					
ANR	1302610	CastExpression	( ut8 * ) & b		1302491	0					
ANR	1302611	CastTarget	ut8 *		1302491	0					
ANR	1302612	UnaryOperationExpression	& b		1302491	1					
ANR	1302613	UnaryOperator	&		1302491	0					
ANR	1302614	Identifier	b		1302491	1					
ANR	1302615	Argument	sizeof ( b )		1302491	2					
ANR	1302616	SizeofExpression	sizeof ( b )		1302491	0					
ANR	1302617	Sizeof	sizeof		1302491	0					
ANR	1302618	SizeofOperand	b		1302491	1					
ANR	1302619	IfStatement	if ( r != sizeof ( b ) )		1302491	3					
ANR	1302620	Condition	r != sizeof ( b )	351:6:7990:8004	1302491	0	True				
ANR	1302621	EqualityExpression	r != sizeof ( b )		1302491	0		!=			
ANR	1302622	Identifier	r		1302491	0					
ANR	1302623	SizeofExpression	sizeof ( b )		1302491	1					
ANR	1302624	Sizeof	sizeof		1302491	0					
ANR	1302625	SizeofOperand	b		1302491	1					
ANR	1302626	CompoundStatement		17:23:456:456	1302491	1					
ANR	1302627	BreakStatement	break ;	352:3:8012:8017	1302491	0	True				
ANR	1302628	IfStatement	if ( egg -> context > 0 )		1302491	6					
ANR	1302629	Condition	egg -> context > 0	356:5:8087:8100	1302491	0	True				
ANR	1302630	RelationalExpression	egg -> context > 0		1302491	0		>			
ANR	1302631	PtrMemberAccess	egg -> context		1302491	0					
ANR	1302632	Identifier	egg		1302491	0					
ANR	1302633	Identifier	context		1302491	1					
ANR	1302634	PrimaryExpression	0		1302491	1					
ANR	1302635	CompoundStatement		22:21:552:552	1302491	1					
ANR	1302636	ExpressionStatement	"eprintf ( ""ERROR: expected '}' at the end of the file. %d left\\n"" , egg -> context )"	357:2:8107:8186	1302491	0	True				
ANR	1302637	CallExpression	"eprintf ( ""ERROR: expected '}' at the end of the file. %d left\\n"" , egg -> context )"		1302491	0					
ANR	1302638	Callee	eprintf		1302491	0					
ANR	1302639	Identifier	eprintf		1302491	0					
ANR	1302640	ArgumentList	"""ERROR: expected '}' at the end of the file. %d left\\n"""		1302491	1					
ANR	1302641	Argument	"""ERROR: expected '}' at the end of the file. %d left\\n"""		1302491	0					
ANR	1302642	PrimaryExpression	"""ERROR: expected '}' at the end of the file. %d left\\n"""		1302491	0					
ANR	1302643	Argument	egg -> context		1302491	1					
ANR	1302644	PtrMemberAccess	egg -> context		1302491	0					
ANR	1302645	Identifier	egg		1302491	0					
ANR	1302646	Identifier	context		1302491	1					
ANR	1302647	ReturnStatement	return false ;	358:2:8190:8202	1302491	1	True				
ANR	1302648	Identifier	false		1302491	0					
ANR	1302649	ReturnStatement	return true ;	361:1:8237:8248	1302491	7	True				
ANR	1302650	Identifier	true		1302491	0					
ANR	1302651	ReturnType	R_API int		1302491	1					
ANR	1302652	Identifier	r_egg_compile		1302491	2					
ANR	1302653	ParameterList	REgg * egg		1302491	3					
ANR	1302654	Parameter	REgg * egg	335:24:7539:7547	1302491	0	True				
ANR	1302655	ParameterType	REgg *		1302491	0					
ANR	1302656	Identifier	egg		1302491	1					
ANR	1302657	CFGEntryNode	ENTRY		1302491		True				
ANR	1302658	CFGExitNode	EXIT		1302491		True				
ANR	1302659	Symbol	R_BUF_SET		1302491						
ANR	1302660	Symbol	b		1302491						
ANR	1302661	Symbol	egg		1302491						
ANR	1302662	Symbol	egg -> lang . elem		1302491						
ANR	1302663	Symbol	& b		1302491						
ANR	1302664	Symbol	false		1302491						
ANR	1302665	Symbol	r_buf_read		1302491						
ANR	1302666	Symbol	egg -> remit		1302491						
ANR	1302667	Symbol	egg -> lang		1302491						
ANR	1302668	Symbol	egg -> lang . elem_n		1302491						
ANR	1302669	Symbol	* egg		1302491						
ANR	1302670	Symbol	r		1302491						
ANR	1302671	Symbol	egg -> src		1302491						
ANR	1302672	Symbol	true		1302491						
ANR	1302673	Symbol	egg -> context		1302491						
ANR	1302674	Function	r_egg_get_bin	364:0:8253:8342							
ANR	1302675	FunctionDef	r_egg_get_bin (REgg * egg)		1302674	0					
ANR	1302676	CompoundStatement		364:40:8293:8342	1302674	0					
ANR	1302677	ReturnStatement	return egg -> bin ;	366:1:8325:8340	1302674	0	True				
ANR	1302678	PtrMemberAccess	egg -> bin		1302674	0					
ANR	1302679	Identifier	egg		1302674	0					
ANR	1302680	Identifier	bin		1302674	1					
ANR	1302681	ReturnType	R_API RBuffer *		1302674	1					
ANR	1302682	Identifier	r_egg_get_bin		1302674	2					
ANR	1302683	ParameterList	REgg * egg		1302674	3					
ANR	1302684	Parameter	REgg * egg	364:29:8282:8290	1302674	0	True				
ANR	1302685	ParameterType	REgg *		1302674	0					
ANR	1302686	Identifier	egg		1302674	1					
ANR	1302687	CFGEntryNode	ENTRY		1302674		True				
ANR	1302688	CFGExitNode	EXIT		1302674		True				
ANR	1302689	Symbol	* egg		1302674						
ANR	1302690	Symbol	egg		1302674						
ANR	1302691	Symbol	egg -> bin		1302674						
ANR	1302692	Function	r_egg_get_source	371:0:8403:8481							
ANR	1302693	FunctionDef	r_egg_get_source (REgg * egg)		1302692	0					
ANR	1302694	CompoundStatement		371:40:8443:8481	1302692	0					
ANR	1302695	ReturnStatement	return r_buf_to_string ( egg -> src ) ;	372:1:8446:8479	1302692	0	True				
ANR	1302696	CallExpression	r_buf_to_string ( egg -> src )		1302692	0					
ANR	1302697	Callee	r_buf_to_string		1302692	0					
ANR	1302698	Identifier	r_buf_to_string		1302692	0					
ANR	1302699	ArgumentList	egg -> src		1302692	1					
ANR	1302700	Argument	egg -> src		1302692	0					
ANR	1302701	PtrMemberAccess	egg -> src		1302692	0					
ANR	1302702	Identifier	egg		1302692	0					
ANR	1302703	Identifier	src		1302692	1					
ANR	1302704	ReturnType	R_API char *		1302692	1					
ANR	1302705	Identifier	r_egg_get_source		1302692	2					
ANR	1302706	ParameterList	REgg * egg		1302692	3					
ANR	1302707	Parameter	REgg * egg	371:29:8432:8440	1302692	0	True				
ANR	1302708	ParameterType	REgg *		1302692	0					
ANR	1302709	Identifier	egg		1302692	1					
ANR	1302710	CFGEntryNode	ENTRY		1302692		True				
ANR	1302711	CFGExitNode	EXIT		1302692		True				
ANR	1302712	Symbol	* egg		1302692						
ANR	1302713	Symbol	egg		1302692						
ANR	1302714	Symbol	egg -> src		1302692						
ANR	1302715	Symbol	r_buf_to_string		1302692						
ANR	1302716	Function	r_egg_get_assembly	375:0:8484:8564							
ANR	1302717	FunctionDef	r_egg_get_assembly (REgg * egg)		1302716	0					
ANR	1302718	CompoundStatement		375:42:8526:8564	1302716	0					
ANR	1302719	ReturnStatement	return r_buf_to_string ( egg -> buf ) ;	376:1:8529:8562	1302716	0	True				
ANR	1302720	CallExpression	r_buf_to_string ( egg -> buf )		1302716	0					
ANR	1302721	Callee	r_buf_to_string		1302716	0					
ANR	1302722	Identifier	r_buf_to_string		1302716	0					
ANR	1302723	ArgumentList	egg -> buf		1302716	1					
ANR	1302724	Argument	egg -> buf		1302716	0					
ANR	1302725	PtrMemberAccess	egg -> buf		1302716	0					
ANR	1302726	Identifier	egg		1302716	0					
ANR	1302727	Identifier	buf		1302716	1					
ANR	1302728	ReturnType	R_API char *		1302716	1					
ANR	1302729	Identifier	r_egg_get_assembly		1302716	2					
ANR	1302730	ParameterList	REgg * egg		1302716	3					
ANR	1302731	Parameter	REgg * egg	375:31:8515:8523	1302716	0	True				
ANR	1302732	ParameterType	REgg *		1302716	0					
ANR	1302733	Identifier	egg		1302716	1					
ANR	1302734	CFGEntryNode	ENTRY		1302716		True				
ANR	1302735	CFGExitNode	EXIT		1302716		True				
ANR	1302736	Symbol	* egg		1302716						
ANR	1302737	Symbol	egg		1302716						
ANR	1302738	Symbol	egg -> buf		1302716						
ANR	1302739	Symbol	r_buf_to_string		1302716						
ANR	1302740	Function	r_egg_append	379:0:8567:8684							
ANR	1302741	FunctionDef	"r_egg_append (REgg * egg , const char * src)"		1302740	0					
ANR	1302742	CompoundStatement		379:52:8619:8684	1302740	0					
ANR	1302743	ExpressionStatement	"r_buf_append_bytes ( egg -> src , ( const ut8 * ) src , strlen ( src ) )"	380:1:8622:8682	1302740	0	True				
ANR	1302744	CallExpression	"r_buf_append_bytes ( egg -> src , ( const ut8 * ) src , strlen ( src ) )"		1302740	0					
ANR	1302745	Callee	r_buf_append_bytes		1302740	0					
ANR	1302746	Identifier	r_buf_append_bytes		1302740	0					
ANR	1302747	ArgumentList	egg -> src		1302740	1					
ANR	1302748	Argument	egg -> src		1302740	0					
ANR	1302749	PtrMemberAccess	egg -> src		1302740	0					
ANR	1302750	Identifier	egg		1302740	0					
ANR	1302751	Identifier	src		1302740	1					
ANR	1302752	Argument	( const ut8 * ) src		1302740	1					
ANR	1302753	CastExpression	( const ut8 * ) src		1302740	0					
ANR	1302754	CastTarget	const ut8 *		1302740	0					
ANR	1302755	Identifier	src		1302740	1					
ANR	1302756	Argument	strlen ( src )		1302740	2					
ANR	1302757	CallExpression	strlen ( src )		1302740	0					
ANR	1302758	Callee	strlen		1302740	0					
ANR	1302759	Identifier	strlen		1302740	0					
ANR	1302760	ArgumentList	src		1302740	1					
ANR	1302761	Argument	src		1302740	0					
ANR	1302762	Identifier	src		1302740	0					
ANR	1302763	ReturnType	R_API void		1302740	1					
ANR	1302764	Identifier	r_egg_append		1302740	2					
ANR	1302765	ParameterList	"REgg * egg , const char * src"		1302740	3					
ANR	1302766	Parameter	REgg * egg	379:24:8591:8599	1302740	0	True				
ANR	1302767	ParameterType	REgg *		1302740	0					
ANR	1302768	Identifier	egg		1302740	1					
ANR	1302769	Parameter	const char * src	379:35:8602:8616	1302740	1	True				
ANR	1302770	ParameterType	const char *		1302740	0					
ANR	1302771	Identifier	src		1302740	1					
ANR	1302772	CFGEntryNode	ENTRY		1302740		True				
ANR	1302773	CFGExitNode	EXIT		1302740		True				
ANR	1302774	Symbol	* egg		1302740						
ANR	1302775	Symbol	strlen		1302740						
ANR	1302776	Symbol	egg		1302740						
ANR	1302777	Symbol	src		1302740						
ANR	1302778	Symbol	egg -> src		1302740						
ANR	1302779	Function	r_egg_run	384:0:8727:8871							
ANR	1302780	FunctionDef	r_egg_run (REgg * egg)		1302779	0					
ANR	1302781	CompoundStatement		384:31:8758:8871	1302779	0					
ANR	1302782	IdentifierDeclStatement	ut64 tmpsz ;	385:1:8761:8771	1302779	0	True				
ANR	1302783	IdentifierDecl	tmpsz		1302779	0					
ANR	1302784	IdentifierDeclType	ut64		1302779	0					
ANR	1302785	Identifier	tmpsz		1302779	1					
ANR	1302786	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( egg -> bin , & tmpsz ) ;"	386:1:8774:8820	1302779	1	True				
ANR	1302787	IdentifierDecl	"* tmp = r_buf_data ( egg -> bin , & tmpsz )"		1302779	0					
ANR	1302788	IdentifierDeclType	const ut8 *		1302779	0					
ANR	1302789	Identifier	tmp		1302779	1					
ANR	1302790	AssignmentExpression	"* tmp = r_buf_data ( egg -> bin , & tmpsz )"		1302779	2		=			
ANR	1302791	Identifier	tmp		1302779	0					
ANR	1302792	CallExpression	"r_buf_data ( egg -> bin , & tmpsz )"		1302779	1					
ANR	1302793	Callee	r_buf_data		1302779	0					
ANR	1302794	Identifier	r_buf_data		1302779	0					
ANR	1302795	ArgumentList	egg -> bin		1302779	1					
ANR	1302796	Argument	egg -> bin		1302779	0					
ANR	1302797	PtrMemberAccess	egg -> bin		1302779	0					
ANR	1302798	Identifier	egg		1302779	0					
ANR	1302799	Identifier	bin		1302779	1					
ANR	1302800	Argument	& tmpsz		1302779	1					
ANR	1302801	UnaryOperationExpression	& tmpsz		1302779	0					
ANR	1302802	UnaryOperator	&		1302779	0					
ANR	1302803	Identifier	tmpsz		1302779	1					
ANR	1302804	IdentifierDeclStatement	"bool res = r_sys_run ( tmp , tmpsz ) ;"	387:1:8823:8856	1302779	2	True				
ANR	1302805	IdentifierDecl	"res = r_sys_run ( tmp , tmpsz )"		1302779	0					
ANR	1302806	IdentifierDeclType	bool		1302779	0					
ANR	1302807	Identifier	res		1302779	1					
ANR	1302808	AssignmentExpression	"res = r_sys_run ( tmp , tmpsz )"		1302779	2		=			
ANR	1302809	Identifier	res		1302779	0					
ANR	1302810	CallExpression	"r_sys_run ( tmp , tmpsz )"		1302779	1					
ANR	1302811	Callee	r_sys_run		1302779	0					
ANR	1302812	Identifier	r_sys_run		1302779	0					
ANR	1302813	ArgumentList	tmp		1302779	1					
ANR	1302814	Argument	tmp		1302779	0					
ANR	1302815	Identifier	tmp		1302779	0					
ANR	1302816	Argument	tmpsz		1302779	1					
ANR	1302817	Identifier	tmpsz		1302779	0					
ANR	1302818	ReturnStatement	return res ;	388:1:8859:8869	1302779	3	True				
ANR	1302819	Identifier	res		1302779	0					
ANR	1302820	ReturnType	R_API int		1302779	1					
ANR	1302821	Identifier	r_egg_run		1302779	2					
ANR	1302822	ParameterList	REgg * egg		1302779	3					
ANR	1302823	Parameter	REgg * egg	384:20:8747:8755	1302779	0	True				
ANR	1302824	ParameterType	REgg *		1302779	0					
ANR	1302825	Identifier	egg		1302779	1					
ANR	1302826	CFGEntryNode	ENTRY		1302779		True				
ANR	1302827	CFGExitNode	EXIT		1302779		True				
ANR	1302828	Symbol	* egg		1302779						
ANR	1302829	Symbol	res		1302779						
ANR	1302830	Symbol	egg		1302779						
ANR	1302831	Symbol	egg -> bin		1302779						
ANR	1302832	Symbol	tmp		1302779						
ANR	1302833	Symbol	& tmpsz		1302779						
ANR	1302834	Symbol	tmpsz		1302779						
ANR	1302835	Symbol	r_sys_run		1302779						
ANR	1302836	Symbol	r_buf_data		1302779						
ANR	1302837	Function	r_egg_run_rop	391:0:8874:9000							
ANR	1302838	FunctionDef	r_egg_run_rop (REgg * egg)		1302837	0					
ANR	1302839	CompoundStatement		391:35:8909:9000	1302837	0					
ANR	1302840	IdentifierDeclStatement	ut64 sz ;	392:1:8912:8919	1302837	0	True				
ANR	1302841	IdentifierDecl	sz		1302837	0					
ANR	1302842	IdentifierDeclType	ut64		1302837	0					
ANR	1302843	Identifier	sz		1302837	1					
ANR	1302844	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( egg -> bin , & sz ) ;"	393:1:8922:8965	1302837	1	True				
ANR	1302845	IdentifierDecl	"* tmp = r_buf_data ( egg -> bin , & sz )"		1302837	0					
ANR	1302846	IdentifierDeclType	const ut8 *		1302837	0					
ANR	1302847	Identifier	tmp		1302837	1					
ANR	1302848	AssignmentExpression	"* tmp = r_buf_data ( egg -> bin , & sz )"		1302837	2		=			
ANR	1302849	Identifier	tmp		1302837	0					
ANR	1302850	CallExpression	"r_buf_data ( egg -> bin , & sz )"		1302837	1					
ANR	1302851	Callee	r_buf_data		1302837	0					
ANR	1302852	Identifier	r_buf_data		1302837	0					
ANR	1302853	ArgumentList	egg -> bin		1302837	1					
ANR	1302854	Argument	egg -> bin		1302837	0					
ANR	1302855	PtrMemberAccess	egg -> bin		1302837	0					
ANR	1302856	Identifier	egg		1302837	0					
ANR	1302857	Identifier	bin		1302837	1					
ANR	1302858	Argument	& sz		1302837	1					
ANR	1302859	UnaryOperationExpression	& sz		1302837	0					
ANR	1302860	UnaryOperator	&		1302837	0					
ANR	1302861	Identifier	sz		1302837	1					
ANR	1302862	ReturnStatement	"return r_sys_run_rop ( tmp , sz ) ;"	394:1:8968:8998	1302837	2	True				
ANR	1302863	CallExpression	"r_sys_run_rop ( tmp , sz )"		1302837	0					
ANR	1302864	Callee	r_sys_run_rop		1302837	0					
ANR	1302865	Identifier	r_sys_run_rop		1302837	0					
ANR	1302866	ArgumentList	tmp		1302837	1					
ANR	1302867	Argument	tmp		1302837	0					
ANR	1302868	Identifier	tmp		1302837	0					
ANR	1302869	Argument	sz		1302837	1					
ANR	1302870	Identifier	sz		1302837	0					
ANR	1302871	ReturnType	R_API int		1302837	1					
ANR	1302872	Identifier	r_egg_run_rop		1302837	2					
ANR	1302873	ParameterList	REgg * egg		1302837	3					
ANR	1302874	Parameter	REgg * egg	391:24:8898:8906	1302837	0	True				
ANR	1302875	ParameterType	REgg *		1302837	0					
ANR	1302876	Identifier	egg		1302837	1					
ANR	1302877	CFGEntryNode	ENTRY		1302837		True				
ANR	1302878	CFGExitNode	EXIT		1302837		True				
ANR	1302879	Symbol	* egg		1302837						
ANR	1302880	Symbol	& sz		1302837						
ANR	1302881	Symbol	egg		1302837						
ANR	1302882	Symbol	egg -> bin		1302837						
ANR	1302883	Symbol	tmp		1302837						
ANR	1302884	Symbol	sz		1302837						
ANR	1302885	Symbol	r_sys_run_rop		1302837						
ANR	1302886	Symbol	r_buf_data		1302837						
ANR	1302887	Function	eon	403:0:9146:9244							
ANR	1302888	FunctionDef	eon (char * n)		1302887	0					
ANR	1302889	CompoundStatement		403:33:9179:9244	1302887	0					
ANR	1302890	WhileStatement	while ( * n && ( * n >= '0' && * n <= '9' ) )		1302887	0					
ANR	1302891	Condition	* n && ( * n >= '0' && * n <= '9' )	404:8:9189:9218	1302887	0	True				
ANR	1302892	AndExpression	* n && ( * n >= '0' && * n <= '9' )		1302887	0		&&			
ANR	1302893	UnaryOperationExpression	* n		1302887	0					
ANR	1302894	UnaryOperator	*		1302887	0					
ANR	1302895	Identifier	n		1302887	1					
ANR	1302896	AndExpression	* n >= '0' && * n <= '9'		1302887	1		&&			
ANR	1302897	RelationalExpression	* n >= '0'		1302887	0		>=			
ANR	1302898	UnaryOperationExpression	* n		1302887	0					
ANR	1302899	UnaryOperator	*		1302887	0					
ANR	1302900	Identifier	n		1302887	1					
ANR	1302901	PrimaryExpression	'0'		1302887	1					
ANR	1302902	RelationalExpression	* n <= '9'		1302887	1		<=			
ANR	1302903	UnaryOperationExpression	* n		1302887	0					
ANR	1302904	UnaryOperator	*		1302887	0					
ANR	1302905	Identifier	n		1302887	1					
ANR	1302906	PrimaryExpression	'9'		1302887	1					
ANR	1302907	CompoundStatement		2:40:41:41	1302887	1					
ANR	1302908	ExpressionStatement	n ++	405:2:9225:9228	1302887	0	True				
ANR	1302909	PostIncDecOperationExpression	n ++		1302887	0					
ANR	1302910	Identifier	n		1302887	0					
ANR	1302911	IncDec	++		1302887	1					
ANR	1302912	ReturnStatement	return n ;	407:1:9234:9242	1302887	1	True				
ANR	1302913	Identifier	n		1302887	0					
ANR	1302914	ReturnType	static inline char *		1302887	1					
ANR	1302915	Identifier	eon		1302887	2					
ANR	1302916	ParameterList	char * n		1302887	3					
ANR	1302917	Parameter	char * n	403:24:9170:9176	1302887	0	True				
ANR	1302918	ParameterType	char *		1302887	0					
ANR	1302919	Identifier	n		1302887	1					
ANR	1302920	CFGEntryNode	ENTRY		1302887		True				
ANR	1302921	CFGExitNode	EXIT		1302887		True				
ANR	1302922	Symbol	* n		1302887						
ANR	1302923	Symbol	n		1302887						
ANR	1302924	Function	r_egg_padding	413:0:9295:10388							
ANR	1302925	FunctionDef	"r_egg_padding (REgg * egg , const char * pad)"		1302924	0					
ANR	1302926	CompoundStatement		413:52:9347:10388	1302924	0					
ANR	1302927	IdentifierDeclStatement	int number ;	414:1:9350:9360	1302924	0	True				
ANR	1302928	IdentifierDecl	number		1302924	0					
ANR	1302929	IdentifierDeclType	int		1302924	0					
ANR	1302930	Identifier	number		1302924	1					
ANR	1302931	IdentifierDeclStatement	"ut8 * buf , padding_byte ;"	415:1:9363:9385	1302924	1	True				
ANR	1302932	IdentifierDecl	* buf		1302924	0					
ANR	1302933	IdentifierDeclType	ut8 *		1302924	0					
ANR	1302934	Identifier	buf		1302924	1					
ANR	1302935	IdentifierDecl	padding_byte		1302924	1					
ANR	1302936	IdentifierDeclType	ut8		1302924	0					
ANR	1302937	Identifier	padding_byte		1302924	1					
ANR	1302938	IdentifierDeclStatement	"char * p , * o = strdup ( pad ) ;"	416:1:9388:9414	1302924	2	True				
ANR	1302939	IdentifierDecl	* p		1302924	0					
ANR	1302940	IdentifierDeclType	char *		1302924	0					
ANR	1302941	Identifier	p		1302924	1					
ANR	1302942	IdentifierDecl	* o = strdup ( pad )		1302924	1					
ANR	1302943	IdentifierDeclType	char *		1302924	0					
ANR	1302944	Identifier	o		1302924	1					
ANR	1302945	AssignmentExpression	* o = strdup ( pad )		1302924	2		=			
ANR	1302946	Identifier	o		1302924	0					
ANR	1302947	CallExpression	strdup ( pad )		1302924	1					
ANR	1302948	Callee	strdup		1302924	0					
ANR	1302949	Identifier	strdup		1302924	0					
ANR	1302950	ArgumentList	pad		1302924	1					
ANR	1302951	Argument	pad		1302924	0					
ANR	1302952	Identifier	pad		1302924	0					
ANR	1302953	ForStatement	for ( p = o ; * p ; )		1302924	3					
ANR	1302954	ForInit	p = o ;	418:6:9423:9428	1302924	0	True				
ANR	1302955	AssignmentExpression	p = o		1302924	0		=			
ANR	1302956	Identifier	p		1302924	0					
ANR	1302957	Identifier	o		1302924	1					
ANR	1302958	Condition	* p	418:13:9430:9431	1302924	1	True				
ANR	1302959	UnaryOperationExpression	* p		1302924	0					
ANR	1302960	UnaryOperator	*		1302924	0					
ANR	1302961	Identifier	p		1302924	1					
ANR	1302962	CompoundStatement		7:2:111:130	1302924	2					
ANR	1302963	IdentifierDeclStatement	const char f = * p ++ ;	419:2:9459:9478	1302924	0	True				
ANR	1302964	IdentifierDecl	f = * p ++		1302924	0					
ANR	1302965	IdentifierDeclType	const char		1302924	0					
ANR	1302966	Identifier	f		1302924	1					
ANR	1302967	AssignmentExpression	f = * p ++		1302924	2		=			
ANR	1302968	Identifier	f		1302924	0					
ANR	1302969	UnaryOperationExpression	* p ++		1302924	1					
ANR	1302970	UnaryOperator	*		1302924	0					
ANR	1302971	PostIncDecOperationExpression	p ++		1302924	1					
ANR	1302972	Identifier	p		1302924	0					
ANR	1302973	IncDec	++		1302924	1					
ANR	1302974	ExpressionStatement	"number = strtol ( p , NULL , 10 )"	420:2:9482:9511	1302924	1	True				
ANR	1302975	AssignmentExpression	"number = strtol ( p , NULL , 10 )"		1302924	0		=			
ANR	1302976	Identifier	number		1302924	0					
ANR	1302977	CallExpression	"strtol ( p , NULL , 10 )"		1302924	1					
ANR	1302978	Callee	strtol		1302924	0					
ANR	1302979	Identifier	strtol		1302924	0					
ANR	1302980	ArgumentList	p		1302924	1					
ANR	1302981	Argument	p		1302924	0					
ANR	1302982	Identifier	p		1302924	0					
ANR	1302983	Argument	NULL		1302924	1					
ANR	1302984	Identifier	NULL		1302924	0					
ANR	1302985	Argument	10		1302924	2					
ANR	1302986	PrimaryExpression	10		1302924	0					
ANR	1302987	IfStatement	if ( number < 1 )		1302924	2					
ANR	1302988	Condition	number < 1	422:6:9520:9529	1302924	0	True				
ANR	1302989	RelationalExpression	number < 1		1302924	0		<			
ANR	1302990	Identifier	number		1302924	0					
ANR	1302991	PrimaryExpression	1		1302924	1					
ANR	1302992	CompoundStatement		10:18:184:184	1302924	1					
ANR	1302993	ExpressionStatement	"eprintf ( ""Invalid padding length at %d\\n"" , number )"	423:3:9537:9587	1302924	0	True				
ANR	1302994	CallExpression	"eprintf ( ""Invalid padding length at %d\\n"" , number )"		1302924	0					
ANR	1302995	Callee	eprintf		1302924	0					
ANR	1302996	Identifier	eprintf		1302924	0					
ANR	1302997	ArgumentList	"""Invalid padding length at %d\\n"""		1302924	1					
ANR	1302998	Argument	"""Invalid padding length at %d\\n"""		1302924	0					
ANR	1302999	PrimaryExpression	"""Invalid padding length at %d\\n"""		1302924	0					
ANR	1303000	Argument	number		1302924	1					
ANR	1303001	Identifier	number		1302924	0					
ANR	1303002	ExpressionStatement	free ( o )	424:3:9592:9600	1302924	1	True				
ANR	1303003	CallExpression	free ( o )		1302924	0					
ANR	1303004	Callee	free		1302924	0					
ANR	1303005	Identifier	free		1302924	0					
ANR	1303006	ArgumentList	o		1302924	1					
ANR	1303007	Argument	o		1302924	0					
ANR	1303008	Identifier	o		1302924	0					
ANR	1303009	ReturnStatement	return false ;	425:3:9605:9617	1302924	2	True				
ANR	1303010	Identifier	false		1302924	0					
ANR	1303011	ExpressionStatement	p = eon ( p )	427:2:9625:9635	1302924	3	True				
ANR	1303012	AssignmentExpression	p = eon ( p )		1302924	0		=			
ANR	1303013	Identifier	p		1302924	0					
ANR	1303014	CallExpression	eon ( p )		1302924	1					
ANR	1303015	Callee	eon		1302924	0					
ANR	1303016	Identifier	eon		1302924	0					
ANR	1303017	ArgumentList	p		1302924	1					
ANR	1303018	Argument	p		1302924	0					
ANR	1303019	Identifier	p		1302924	0					
ANR	1303020	SwitchStatement	switch ( f )		1302924	4					
ANR	1303021	Condition	f	429:10:9648:9648	1302924	0	True				
ANR	1303022	Identifier	f		1302924	0					
ANR	1303023	CompoundStatement		17:13:303:303	1302924	1					
ANR	1303024	Label	case 's' :	430:2:9655:9663	1302924	0	True				
ANR	1303025	Label	case 'S' :	430:12:9665:9673	1302924	1	True				
ANR	1303026	ExpressionStatement	padding_byte = 0	430:22:9675:9691	1302924	2	True				
ANR	1303027	AssignmentExpression	padding_byte = 0		1302924	0		=			
ANR	1303028	Identifier	padding_byte		1302924	0					
ANR	1303029	PrimaryExpression	0		1302924	1					
ANR	1303030	BreakStatement	break ;	430:40:9693:9698	1302924	3	True				
ANR	1303031	Label	case 'n' :	431:2:9702:9710	1302924	4	True				
ANR	1303032	Label	case 'N' :	431:12:9712:9720	1302924	5	True				
ANR	1303033	ExpressionStatement	padding_byte = 0x90	431:22:9722:9741	1302924	6	True				
ANR	1303034	AssignmentExpression	padding_byte = 0x90		1302924	0		=			
ANR	1303035	Identifier	padding_byte		1302924	0					
ANR	1303036	PrimaryExpression	0x90		1302924	1					
ANR	1303037	BreakStatement	break ;	431:43:9743:9748	1302924	7	True				
ANR	1303038	Label	case 'a' :	432:2:9752:9760	1302924	8	True				
ANR	1303039	Label	case 'A' :	433:2:9764:9772	1302924	9	True				
ANR	1303040	ExpressionStatement	padding_byte = 'A'	433:12:9774:9792	1302924	10	True				
ANR	1303041	AssignmentExpression	padding_byte = 'A'		1302924	0		=			
ANR	1303042	Identifier	padding_byte		1302924	0					
ANR	1303043	PrimaryExpression	'A'		1302924	1					
ANR	1303044	BreakStatement	break ;	433:32:9794:9799	1302924	11	True				
ANR	1303045	Label	case 't' :	434:2:9803:9811	1302924	12	True				
ANR	1303046	Label	case 'T' :	435:2:9815:9823	1302924	13	True				
ANR	1303047	ExpressionStatement	padding_byte = 0xcc	435:12:9825:9844	1302924	14	True				
ANR	1303048	AssignmentExpression	padding_byte = 0xcc		1302924	0		=			
ANR	1303049	Identifier	padding_byte		1302924	0					
ANR	1303050	PrimaryExpression	0xcc		1302924	1					
ANR	1303051	BreakStatement	break ;	435:33:9846:9851	1302924	15	True				
ANR	1303052	Label	default :	436:2:9855:9862	1302924	16	True				
ANR	1303053	Identifier	default		1302924	0					
ANR	1303054	ExpressionStatement	"eprintf ( ""Invalid padding format (%c)\\n"" , * p )"	437:3:9867:9912	1302924	17	True				
ANR	1303055	CallExpression	"eprintf ( ""Invalid padding format (%c)\\n"" , * p )"		1302924	0					
ANR	1303056	Callee	eprintf		1302924	0					
ANR	1303057	Identifier	eprintf		1302924	0					
ANR	1303058	ArgumentList	"""Invalid padding format (%c)\\n"""		1302924	1					
ANR	1303059	Argument	"""Invalid padding format (%c)\\n"""		1302924	0					
ANR	1303060	PrimaryExpression	"""Invalid padding format (%c)\\n"""		1302924	0					
ANR	1303061	Argument	* p		1302924	1					
ANR	1303062	UnaryOperationExpression	* p		1302924	0					
ANR	1303063	UnaryOperator	*		1302924	0					
ANR	1303064	Identifier	p		1302924	1					
ANR	1303065	ExpressionStatement	"eprintf ( ""Valid ones are:\\n"" )"	438:3:9917:9946	1302924	18	True				
ANR	1303066	CallExpression	"eprintf ( ""Valid ones are:\\n"" )"		1302924	0					
ANR	1303067	Callee	eprintf		1302924	0					
ANR	1303068	Identifier	eprintf		1302924	0					
ANR	1303069	ArgumentList	"""Valid ones are:\\n"""		1302924	1					
ANR	1303070	Argument	"""Valid ones are:\\n"""		1302924	0					
ANR	1303071	PrimaryExpression	"""Valid ones are:\\n"""		1302924	0					
ANR	1303072	ExpressionStatement	"eprintf ( ""\\ts S : NULL byte"" )"	439:3:9951:9979	1302924	19	True				
ANR	1303073	CallExpression	"eprintf ( ""\\ts S : NULL byte"" )"		1302924	0					
ANR	1303074	Callee	eprintf		1302924	0					
ANR	1303075	Identifier	eprintf		1302924	0					
ANR	1303076	ArgumentList	"""\\ts S : NULL byte"""		1302924	1					
ANR	1303077	Argument	"""\\ts S : NULL byte"""		1302924	0					
ANR	1303078	PrimaryExpression	"""\\ts S : NULL byte"""		1302924	0					
ANR	1303079	ExpressionStatement	"eprintf ( ""\\tn N : nop"" )"	440:3:9984:10006	1302924	20	True				
ANR	1303080	CallExpression	"eprintf ( ""\\tn N : nop"" )"		1302924	0					
ANR	1303081	Callee	eprintf		1302924	0					
ANR	1303082	Identifier	eprintf		1302924	0					
ANR	1303083	ArgumentList	"""\\tn N : nop"""		1302924	1					
ANR	1303084	Argument	"""\\tn N : nop"""		1302924	0					
ANR	1303085	PrimaryExpression	"""\\tn N : nop"""		1302924	0					
ANR	1303086	ExpressionStatement	"eprintf ( ""\\ta A : 0x41"" )"	441:3:10011:10034	1302924	21	True				
ANR	1303087	CallExpression	"eprintf ( ""\\ta A : 0x41"" )"		1302924	0					
ANR	1303088	Callee	eprintf		1302924	0					
ANR	1303089	Identifier	eprintf		1302924	0					
ANR	1303090	ArgumentList	"""\\ta A : 0x41"""		1302924	1					
ANR	1303091	Argument	"""\\ta A : 0x41"""		1302924	0					
ANR	1303092	PrimaryExpression	"""\\ta A : 0x41"""		1302924	0					
ANR	1303093	ExpressionStatement	"eprintf ( ""\\tt T : trap (0xcc)"" )"	442:3:10039:10069	1302924	22	True				
ANR	1303094	CallExpression	"eprintf ( ""\\tt T : trap (0xcc)"" )"		1302924	0					
ANR	1303095	Callee	eprintf		1302924	0					
ANR	1303096	Identifier	eprintf		1302924	0					
ANR	1303097	ArgumentList	"""\\tt T : trap (0xcc)"""		1302924	1					
ANR	1303098	Argument	"""\\tt T : trap (0xcc)"""		1302924	0					
ANR	1303099	PrimaryExpression	"""\\tt T : trap (0xcc)"""		1302924	0					
ANR	1303100	ExpressionStatement	free ( o )	443:3:10074:10082	1302924	23	True				
ANR	1303101	CallExpression	free ( o )		1302924	0					
ANR	1303102	Callee	free		1302924	0					
ANR	1303103	Identifier	free		1302924	0					
ANR	1303104	ArgumentList	o		1302924	1					
ANR	1303105	Argument	o		1302924	0					
ANR	1303106	Identifier	o		1302924	0					
ANR	1303107	ReturnStatement	return false ;	444:3:10087:10099	1302924	24	True				
ANR	1303108	Identifier	false		1302924	0					
ANR	1303109	ExpressionStatement	buf = malloc ( number )	447:2:10108:10129	1302924	5	True				
ANR	1303110	AssignmentExpression	buf = malloc ( number )		1302924	0		=			
ANR	1303111	Identifier	buf		1302924	0					
ANR	1303112	CallExpression	malloc ( number )		1302924	1					
ANR	1303113	Callee	malloc		1302924	0					
ANR	1303114	Identifier	malloc		1302924	0					
ANR	1303115	ArgumentList	number		1302924	1					
ANR	1303116	Argument	number		1302924	0					
ANR	1303117	Identifier	number		1302924	0					
ANR	1303118	IfStatement	if ( ! buf )		1302924	6					
ANR	1303119	Condition	! buf	448:6:10137:10140	1302924	0	True				
ANR	1303120	UnaryOperationExpression	! buf		1302924	0					
ANR	1303121	UnaryOperator	!		1302924	0					
ANR	1303122	Identifier	buf		1302924	1					
ANR	1303123	CompoundStatement		36:12:795:795	1302924	1					
ANR	1303124	ExpressionStatement	free ( o )	449:3:10148:10156	1302924	0	True				
ANR	1303125	CallExpression	free ( o )		1302924	0					
ANR	1303126	Callee	free		1302924	0					
ANR	1303127	Identifier	free		1302924	0					
ANR	1303128	ArgumentList	o		1302924	1					
ANR	1303129	Argument	o		1302924	0					
ANR	1303130	Identifier	o		1302924	0					
ANR	1303131	ReturnStatement	return false ;	450:3:10161:10173	1302924	1	True				
ANR	1303132	Identifier	false		1302924	0					
ANR	1303133	ExpressionStatement	"memset ( buf , padding_byte , number )"	453:2:10182:10216	1302924	7	True				
ANR	1303134	CallExpression	"memset ( buf , padding_byte , number )"		1302924	0					
ANR	1303135	Callee	memset		1302924	0					
ANR	1303136	Identifier	memset		1302924	0					
ANR	1303137	ArgumentList	buf		1302924	1					
ANR	1303138	Argument	buf		1302924	0					
ANR	1303139	Identifier	buf		1302924	0					
ANR	1303140	Argument	padding_byte		1302924	1					
ANR	1303141	Identifier	padding_byte		1302924	0					
ANR	1303142	Argument	number		1302924	2					
ANR	1303143	Identifier	number		1302924	0					
ANR	1303144	IfStatement	if ( f >= 'a' && f <= 'z' )		1302924	8					
ANR	1303145	Condition	f >= 'a' && f <= 'z'	454:6:10224:10243	1302924	0	True				
ANR	1303146	AndExpression	f >= 'a' && f <= 'z'		1302924	0		&&			
ANR	1303147	RelationalExpression	f >= 'a'		1302924	0		>=			
ANR	1303148	Identifier	f		1302924	0					
ANR	1303149	PrimaryExpression	'a'		1302924	1					
ANR	1303150	RelationalExpression	f <= 'z'		1302924	1		<=			
ANR	1303151	Identifier	f		1302924	0					
ANR	1303152	PrimaryExpression	'z'		1302924	1					
ANR	1303153	CompoundStatement		42:28:898:898	1302924	1					
ANR	1303154	ExpressionStatement	"r_egg_prepend_bytes ( egg , buf , number )"	455:3:10251:10288	1302924	0	True				
ANR	1303155	CallExpression	"r_egg_prepend_bytes ( egg , buf , number )"		1302924	0					
ANR	1303156	Callee	r_egg_prepend_bytes		1302924	0					
ANR	1303157	Identifier	r_egg_prepend_bytes		1302924	0					
ANR	1303158	ArgumentList	egg		1302924	1					
ANR	1303159	Argument	egg		1302924	0					
ANR	1303160	Identifier	egg		1302924	0					
ANR	1303161	Argument	buf		1302924	1					
ANR	1303162	Identifier	buf		1302924	0					
ANR	1303163	Argument	number		1302924	2					
ANR	1303164	Identifier	number		1302924	0					
ANR	1303165	ElseStatement	else		1302924	0					
ANR	1303166	CompoundStatement		44:9:951:951	1302924	0					
ANR	1303167	ExpressionStatement	"r_egg_append_bytes ( egg , buf , number )"	457:3:10304:10340	1302924	0	True				
ANR	1303168	CallExpression	"r_egg_append_bytes ( egg , buf , number )"		1302924	0					
ANR	1303169	Callee	r_egg_append_bytes		1302924	0					
ANR	1303170	Identifier	r_egg_append_bytes		1302924	0					
ANR	1303171	ArgumentList	egg		1302924	1					
ANR	1303172	Argument	egg		1302924	0					
ANR	1303173	Identifier	egg		1302924	0					
ANR	1303174	Argument	buf		1302924	1					
ANR	1303175	Identifier	buf		1302924	0					
ANR	1303176	Argument	number		1302924	2					
ANR	1303177	Identifier	number		1302924	0					
ANR	1303178	ExpressionStatement	free ( buf )	459:2:10348:10358	1302924	9	True				
ANR	1303179	CallExpression	free ( buf )		1302924	0					
ANR	1303180	Callee	free		1302924	0					
ANR	1303181	Identifier	free		1302924	0					
ANR	1303182	ArgumentList	buf		1302924	1					
ANR	1303183	Argument	buf		1302924	0					
ANR	1303184	Identifier	buf		1302924	0					
ANR	1303185	ExpressionStatement	free ( o )	461:1:10364:10372	1302924	4	True				
ANR	1303186	CallExpression	free ( o )		1302924	0					
ANR	1303187	Callee	free		1302924	0					
ANR	1303188	Identifier	free		1302924	0					
ANR	1303189	ArgumentList	o		1302924	1					
ANR	1303190	Argument	o		1302924	0					
ANR	1303191	Identifier	o		1302924	0					
ANR	1303192	ReturnStatement	return true ;	462:1:10375:10386	1302924	5	True				
ANR	1303193	Identifier	true		1302924	0					
ANR	1303194	ReturnType	R_API int		1302924	1					
ANR	1303195	Identifier	r_egg_padding		1302924	2					
ANR	1303196	ParameterList	"REgg * egg , const char * pad"		1302924	3					
ANR	1303197	Parameter	REgg * egg	413:24:9319:9327	1302924	0	True				
ANR	1303198	ParameterType	REgg *		1302924	0					
ANR	1303199	Identifier	egg		1302924	1					
ANR	1303200	Parameter	const char * pad	413:35:9330:9344	1302924	1	True				
ANR	1303201	ParameterType	const char *		1302924	0					
ANR	1303202	Identifier	pad		1302924	1					
ANR	1303203	CFGEntryNode	ENTRY		1302924		True				
ANR	1303204	CFGExitNode	EXIT		1302924		True				
ANR	1303205	Symbol	malloc		1302924						
ANR	1303206	Symbol	NULL		1302924						
ANR	1303207	Symbol	egg		1302924						
ANR	1303208	Symbol	eon		1302924						
ANR	1303209	Symbol	f		1302924						
ANR	1303210	Symbol	* p ++		1302924						
ANR	1303211	Symbol	false		1302924						
ANR	1303212	Symbol	o		1302924						
ANR	1303213	Symbol	p		1302924						
ANR	1303214	Symbol	number		1302924						
ANR	1303215	Symbol	pad		1302924						
ANR	1303216	Symbol	buf		1302924						
ANR	1303217	Symbol	strtol		1302924						
ANR	1303218	Symbol	padding_byte		1302924						
ANR	1303219	Symbol	true		1302924						
ANR	1303220	Symbol	* p		1302924						
ANR	1303221	Symbol	strdup		1302924						
ANR	1303222	Function	r_egg_fill	465:0:10391:10476							
ANR	1303223	FunctionDef	"r_egg_fill (REgg * egg , int pos , int type , int argc , int length)"		1303222	0					
ANR	1303224	CompoundStatement		465:74:10465:10476	1303222	0					
ANR	1303225	ReturnType	R_API void		1303222	1					
ANR	1303226	Identifier	r_egg_fill		1303222	2					
ANR	1303227	ParameterList	"REgg * egg , int pos , int type , int argc , int length"		1303222	3					
ANR	1303228	Parameter	REgg * egg	465:22:10413:10421	1303222	0	True				
ANR	1303229	ParameterType	REgg *		1303222	0					
ANR	1303230	Identifier	egg		1303222	1					
ANR	1303231	Parameter	int pos	465:33:10424:10430	1303222	1	True				
ANR	1303232	ParameterType	int		1303222	0					
ANR	1303233	Identifier	pos		1303222	1					
ANR	1303234	Parameter	int type	465:42:10433:10440	1303222	2	True				
ANR	1303235	ParameterType	int		1303222	0					
ANR	1303236	Identifier	type		1303222	1					
ANR	1303237	Parameter	int argc	465:52:10443:10450	1303222	3	True				
ANR	1303238	ParameterType	int		1303222	0					
ANR	1303239	Identifier	argc		1303222	1					
ANR	1303240	Parameter	int length	465:62:10453:10462	1303222	4	True				
ANR	1303241	ParameterType	int		1303222	0					
ANR	1303242	Identifier	length		1303222	1					
ANR	1303243	CFGEntryNode	ENTRY		1303222		True				
ANR	1303244	CFGExitNode	EXIT		1303222		True				
ANR	1303245	Symbol	argc		1303222						
ANR	1303246	Symbol	egg		1303222						
ANR	1303247	Symbol	pos		1303222						
ANR	1303248	Symbol	length		1303222						
ANR	1303249	Symbol	type		1303222						
ANR	1303250	Function	r_egg_option_set	469:0:10479:10587							
ANR	1303251	FunctionDef	"r_egg_option_set (REgg * egg , const char * key , const char * val)"		1303250	0					
ANR	1303252	CompoundStatement		469:73:10552:10587	1303250	0					
ANR	1303253	ExpressionStatement	"sdb_set ( egg -> db , key , val , 0 )"	470:1:10555:10585	1303250	0	True				
ANR	1303254	CallExpression	"sdb_set ( egg -> db , key , val , 0 )"		1303250	0					
ANR	1303255	Callee	sdb_set		1303250	0					
ANR	1303256	Identifier	sdb_set		1303250	0					
ANR	1303257	ArgumentList	egg -> db		1303250	1					
ANR	1303258	Argument	egg -> db		1303250	0					
ANR	1303259	PtrMemberAccess	egg -> db		1303250	0					
ANR	1303260	Identifier	egg		1303250	0					
ANR	1303261	Identifier	db		1303250	1					
ANR	1303262	Argument	key		1303250	1					
ANR	1303263	Identifier	key		1303250	0					
ANR	1303264	Argument	val		1303250	2					
ANR	1303265	Identifier	val		1303250	0					
ANR	1303266	Argument	0		1303250	3					
ANR	1303267	PrimaryExpression	0		1303250	0					
ANR	1303268	ReturnType	R_API void		1303250	1					
ANR	1303269	Identifier	r_egg_option_set		1303250	2					
ANR	1303270	ParameterList	"REgg * egg , const char * key , const char * val"		1303250	3					
ANR	1303271	Parameter	REgg * egg	469:28:10507:10515	1303250	0	True				
ANR	1303272	ParameterType	REgg *		1303250	0					
ANR	1303273	Identifier	egg		1303250	1					
ANR	1303274	Parameter	const char * key	469:39:10518:10532	1303250	1	True				
ANR	1303275	ParameterType	const char *		1303250	0					
ANR	1303276	Identifier	key		1303250	1					
ANR	1303277	Parameter	const char * val	469:56:10535:10549	1303250	2	True				
ANR	1303278	ParameterType	const char *		1303250	0					
ANR	1303279	Identifier	val		1303250	1					
ANR	1303280	CFGEntryNode	ENTRY		1303250		True				
ANR	1303281	CFGExitNode	EXIT		1303250		True				
ANR	1303282	Symbol	val		1303250						
ANR	1303283	Symbol	* egg		1303250						
ANR	1303284	Symbol	egg		1303250						
ANR	1303285	Symbol	key		1303250						
ANR	1303286	Symbol	egg -> db		1303250						
ANR	1303287	Function	r_egg_option_get	473:0:10590:10687							
ANR	1303288	FunctionDef	"r_egg_option_get (REgg * egg , const char * key)"		1303287	0					
ANR	1303289	CompoundStatement		473:57:10647:10687	1303287	0					
ANR	1303290	ReturnStatement	"return sdb_get ( egg -> db , key , NULL ) ;"	474:1:10650:10685	1303287	0	True				
ANR	1303291	CallExpression	"sdb_get ( egg -> db , key , NULL )"		1303287	0					
ANR	1303292	Callee	sdb_get		1303287	0					
ANR	1303293	Identifier	sdb_get		1303287	0					
ANR	1303294	ArgumentList	egg -> db		1303287	1					
ANR	1303295	Argument	egg -> db		1303287	0					
ANR	1303296	PtrMemberAccess	egg -> db		1303287	0					
ANR	1303297	Identifier	egg		1303287	0					
ANR	1303298	Identifier	db		1303287	1					
ANR	1303299	Argument	key		1303287	1					
ANR	1303300	Identifier	key		1303287	0					
ANR	1303301	Argument	NULL		1303287	2					
ANR	1303302	Identifier	NULL		1303287	0					
ANR	1303303	ReturnType	R_API char *		1303287	1					
ANR	1303304	Identifier	r_egg_option_get		1303287	2					
ANR	1303305	ParameterList	"REgg * egg , const char * key"		1303287	3					
ANR	1303306	Parameter	REgg * egg	473:29:10619:10627	1303287	0	True				
ANR	1303307	ParameterType	REgg *		1303287	0					
ANR	1303308	Identifier	egg		1303287	1					
ANR	1303309	Parameter	const char * key	473:40:10630:10644	1303287	1	True				
ANR	1303310	ParameterType	const char *		1303287	0					
ANR	1303311	Identifier	key		1303287	1					
ANR	1303312	CFGEntryNode	ENTRY		1303287		True				
ANR	1303313	CFGExitNode	EXIT		1303287		True				
ANR	1303314	Symbol	* egg		1303287						
ANR	1303315	Symbol	NULL		1303287						
ANR	1303316	Symbol	egg		1303287						
ANR	1303317	Symbol	sdb_get		1303287						
ANR	1303318	Symbol	key		1303287						
ANR	1303319	Symbol	egg -> db		1303287						
ANR	1303320	Function	r_egg_shellcode	477:0:10690:11146							
ANR	1303321	FunctionDef	"r_egg_shellcode (REgg * egg , const char * name)"		1303320	0					
ANR	1303322	CompoundStatement		477:55:10745:11146	1303320	0					
ANR	1303323	IdentifierDeclStatement	REggPlugin * p ;	478:1:10748:10761	1303320	0	True				
ANR	1303324	IdentifierDecl	* p		1303320	0					
ANR	1303325	IdentifierDeclType	REggPlugin *		1303320	0					
ANR	1303326	Identifier	p		1303320	1					
ANR	1303327	IdentifierDeclStatement	RListIter * iter ;	479:1:10764:10779	1303320	1	True				
ANR	1303328	IdentifierDecl	* iter		1303320	0					
ANR	1303329	IdentifierDeclType	RListIter *		1303320	0					
ANR	1303330	Identifier	iter		1303320	1					
ANR	1303331	IdentifierDeclStatement	RBuffer * b ;	480:1:10782:10792	1303320	2	True				
ANR	1303332	IdentifierDecl	* b		1303320	0					
ANR	1303333	IdentifierDeclType	RBuffer *		1303320	0					
ANR	1303334	Identifier	b		1303320	1					
ANR	1303335	Statement	r_list_foreach	481:1:10795:10808	1303320	3	True				
ANR	1303336	Statement	(	481:16:10810:10810	1303320	4	True				
ANR	1303337	Statement	egg	481:17:10811:10813	1303320	5	True				
ANR	1303338	Statement	->	481:20:10814:10815	1303320	6	True				
ANR	1303339	Statement	plugins	481:22:10816:10822	1303320	7	True				
ANR	1303340	Statement	","	481:29:10823:10823	1303320	8	True				
ANR	1303341	Statement	iter	481:31:10825:10828	1303320	9	True				
ANR	1303342	Statement	","	481:35:10829:10829	1303320	10	True				
ANR	1303343	Statement	p	481:37:10831:10831	1303320	11	True				
ANR	1303344	Statement	)	481:38:10832:10832	1303320	12	True				
ANR	1303345	CompoundStatement		5:40:88:88	1303320	13					
ANR	1303346	IfStatement	"if ( p -> type == R_EGG_PLUGIN_SHELLCODE && ! strcmp ( name , p -> name ) )"		1303320	0					
ANR	1303347	Condition	"p -> type == R_EGG_PLUGIN_SHELLCODE && ! strcmp ( name , p -> name )"	482:6:10842:10901	1303320	0	True				
ANR	1303348	AndExpression	"p -> type == R_EGG_PLUGIN_SHELLCODE && ! strcmp ( name , p -> name )"		1303320	0		&&			
ANR	1303349	EqualityExpression	p -> type == R_EGG_PLUGIN_SHELLCODE		1303320	0		==			
ANR	1303350	PtrMemberAccess	p -> type		1303320	0					
ANR	1303351	Identifier	p		1303320	0					
ANR	1303352	Identifier	type		1303320	1					
ANR	1303353	Identifier	R_EGG_PLUGIN_SHELLCODE		1303320	1					
ANR	1303354	UnaryOperationExpression	"! strcmp ( name , p -> name )"		1303320	1					
ANR	1303355	UnaryOperator	!		1303320	0					
ANR	1303356	CallExpression	"strcmp ( name , p -> name )"		1303320	1					
ANR	1303357	Callee	strcmp		1303320	0					
ANR	1303358	Identifier	strcmp		1303320	0					
ANR	1303359	ArgumentList	name		1303320	1					
ANR	1303360	Argument	name		1303320	0					
ANR	1303361	Identifier	name		1303320	0					
ANR	1303362	Argument	p -> name		1303320	1					
ANR	1303363	PtrMemberAccess	p -> name		1303320	0					
ANR	1303364	Identifier	p		1303320	0					
ANR	1303365	Identifier	name		1303320	1					
ANR	1303366	CompoundStatement		13:3:289:328	1303320	1					
ANR	1303367	ExpressionStatement	b = p -> build ( egg )	483:3:10909:10927	1303320	0	True				
ANR	1303368	AssignmentExpression	b = p -> build ( egg )		1303320	0		=			
ANR	1303369	Identifier	b		1303320	0					
ANR	1303370	CallExpression	p -> build ( egg )		1303320	1					
ANR	1303371	Callee	p -> build		1303320	0					
ANR	1303372	PtrMemberAccess	p -> build		1303320	0					
ANR	1303373	Identifier	p		1303320	0					
ANR	1303374	Identifier	build		1303320	1					
ANR	1303375	ArgumentList	egg		1303320	1					
ANR	1303376	Argument	egg		1303320	0					
ANR	1303377	Identifier	egg		1303320	0					
ANR	1303378	IfStatement	if ( ! b )		1303320	1					
ANR	1303379	Condition	! b	484:7:10936:10937	1303320	0	True				
ANR	1303380	UnaryOperationExpression	! b		1303320	0					
ANR	1303381	UnaryOperator	!		1303320	0					
ANR	1303382	Identifier	b		1303320	1					
ANR	1303383	CompoundStatement		8:11:194:194	1303320	1					
ANR	1303384	ExpressionStatement	"eprintf ( ""%s Shellcode has failed\\n"" , p -> name )"	485:4:10946:10992	1303320	0	True				
ANR	1303385	CallExpression	"eprintf ( ""%s Shellcode has failed\\n"" , p -> name )"		1303320	0					
ANR	1303386	Callee	eprintf		1303320	0					
ANR	1303387	Identifier	eprintf		1303320	0					
ANR	1303388	ArgumentList	"""%s Shellcode has failed\\n"""		1303320	1					
ANR	1303389	Argument	"""%s Shellcode has failed\\n"""		1303320	0					
ANR	1303390	PrimaryExpression	"""%s Shellcode has failed\\n"""		1303320	0					
ANR	1303391	Argument	p -> name		1303320	1					
ANR	1303392	PtrMemberAccess	p -> name		1303320	0					
ANR	1303393	Identifier	p		1303320	0					
ANR	1303394	Identifier	name		1303320	1					
ANR	1303395	ReturnStatement	return false ;	486:4:10998:11010	1303320	1	True				
ANR	1303396	Identifier	false		1303320	0					
ANR	1303397	IdentifierDeclStatement	ut64 tmpsz ;	488:3:11020:11030	1303320	2	True				
ANR	1303398	IdentifierDecl	tmpsz		1303320	0					
ANR	1303399	IdentifierDeclType	ut64		1303320	0					
ANR	1303400	Identifier	tmpsz		1303320	1					
ANR	1303401	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( b , & tmpsz ) ;"	489:3:11035:11074	1303320	3	True				
ANR	1303402	IdentifierDecl	"* tmp = r_buf_data ( b , & tmpsz )"		1303320	0					
ANR	1303403	IdentifierDeclType	const ut8 *		1303320	0					
ANR	1303404	Identifier	tmp		1303320	1					
ANR	1303405	AssignmentExpression	"* tmp = r_buf_data ( b , & tmpsz )"		1303320	2		=			
ANR	1303406	Identifier	tmp		1303320	0					
ANR	1303407	CallExpression	"r_buf_data ( b , & tmpsz )"		1303320	1					
ANR	1303408	Callee	r_buf_data		1303320	0					
ANR	1303409	Identifier	r_buf_data		1303320	0					
ANR	1303410	ArgumentList	b		1303320	1					
ANR	1303411	Argument	b		1303320	0					
ANR	1303412	Identifier	b		1303320	0					
ANR	1303413	Argument	& tmpsz		1303320	1					
ANR	1303414	UnaryOperationExpression	& tmpsz		1303320	0					
ANR	1303415	UnaryOperator	&		1303320	0					
ANR	1303416	Identifier	tmpsz		1303320	1					
ANR	1303417	ExpressionStatement	"r_egg_raw ( egg , tmp , tmpsz )"	490:3:11079:11106	1303320	4	True				
ANR	1303418	CallExpression	"r_egg_raw ( egg , tmp , tmpsz )"		1303320	0					
ANR	1303419	Callee	r_egg_raw		1303320	0					
ANR	1303420	Identifier	r_egg_raw		1303320	0					
ANR	1303421	ArgumentList	egg		1303320	1					
ANR	1303422	Argument	egg		1303320	0					
ANR	1303423	Identifier	egg		1303320	0					
ANR	1303424	Argument	tmp		1303320	1					
ANR	1303425	Identifier	tmp		1303320	0					
ANR	1303426	Argument	tmpsz		1303320	2					
ANR	1303427	Identifier	tmpsz		1303320	0					
ANR	1303428	ReturnStatement	return true ;	491:3:11111:11122	1303320	5	True				
ANR	1303429	Identifier	true		1303320	0					
ANR	1303430	ReturnStatement	return false ;	494:1:11132:11144	1303320	14	True				
ANR	1303431	Identifier	false		1303320	0					
ANR	1303432	ReturnType	R_API int		1303320	1					
ANR	1303433	Identifier	r_egg_shellcode		1303320	2					
ANR	1303434	ParameterList	"REgg * egg , const char * name"		1303320	3					
ANR	1303435	Parameter	REgg * egg	477:26:10716:10724	1303320	0	True				
ANR	1303436	ParameterType	REgg *		1303320	0					
ANR	1303437	Identifier	egg		1303320	1					
ANR	1303438	Parameter	const char * name	477:37:10727:10742	1303320	1	True				
ANR	1303439	ParameterType	const char *		1303320	0					
ANR	1303440	Identifier	name		1303320	1					
ANR	1303441	CFGEntryNode	ENTRY		1303320		True				
ANR	1303442	CFGExitNode	EXIT		1303320		True				
ANR	1303443	Symbol	strcmp		1303320						
ANR	1303444	Symbol	b		1303320						
ANR	1303445	Symbol	egg		1303320						
ANR	1303446	Symbol	false		1303320						
ANR	1303447	Symbol	iter		1303320						
ANR	1303448	Symbol	tmpsz		1303320						
ANR	1303449	Symbol	R_EGG_PLUGIN_SHELLCODE		1303320						
ANR	1303450	Symbol	p -> type		1303320						
ANR	1303451	Symbol	p		1303320						
ANR	1303452	Symbol	p -> build		1303320						
ANR	1303453	Symbol	tmp		1303320						
ANR	1303454	Symbol	name		1303320						
ANR	1303455	Symbol	true		1303320						
ANR	1303456	Symbol	& tmpsz		1303320						
ANR	1303457	Symbol	* p		1303320						
ANR	1303458	Symbol	p -> name		1303320						
ANR	1303459	Symbol	r_buf_data		1303320						
ANR	1303460	Function	r_egg_encode	497:0:11149:11500							
ANR	1303461	FunctionDef	"r_egg_encode (REgg * egg , const char * name)"		1303460	0					
ANR	1303462	CompoundStatement		497:52:11201:11500	1303460	0					
ANR	1303463	IdentifierDeclStatement	REggPlugin * p ;	498:1:11204:11217	1303460	0	True				
ANR	1303464	IdentifierDecl	* p		1303460	0					
ANR	1303465	IdentifierDeclType	REggPlugin *		1303460	0					
ANR	1303466	Identifier	p		1303460	1					
ANR	1303467	IdentifierDeclStatement	RListIter * iter ;	499:1:11220:11235	1303460	1	True				
ANR	1303468	IdentifierDecl	* iter		1303460	0					
ANR	1303469	IdentifierDeclType	RListIter *		1303460	0					
ANR	1303470	Identifier	iter		1303460	1					
ANR	1303471	IdentifierDeclStatement	RBuffer * b ;	500:1:11238:11248	1303460	2	True				
ANR	1303472	IdentifierDecl	* b		1303460	0					
ANR	1303473	IdentifierDeclType	RBuffer *		1303460	0					
ANR	1303474	Identifier	b		1303460	1					
ANR	1303475	Statement	r_list_foreach	501:1:11251:11264	1303460	3	True				
ANR	1303476	Statement	(	501:16:11266:11266	1303460	4	True				
ANR	1303477	Statement	egg	501:17:11267:11269	1303460	5	True				
ANR	1303478	Statement	->	501:20:11270:11271	1303460	6	True				
ANR	1303479	Statement	plugins	501:22:11272:11278	1303460	7	True				
ANR	1303480	Statement	","	501:29:11279:11279	1303460	8	True				
ANR	1303481	Statement	iter	501:31:11281:11284	1303460	9	True				
ANR	1303482	Statement	","	501:35:11285:11285	1303460	10	True				
ANR	1303483	Statement	p	501:37:11287:11287	1303460	11	True				
ANR	1303484	Statement	)	501:38:11288:11288	1303460	12	True				
ANR	1303485	CompoundStatement		5:40:88:88	1303460	13					
ANR	1303486	IfStatement	"if ( p -> type == R_EGG_PLUGIN_ENCODER && ! strcmp ( name , p -> name ) )"		1303460	0					
ANR	1303487	Condition	"p -> type == R_EGG_PLUGIN_ENCODER && ! strcmp ( name , p -> name )"	502:6:11298:11355	1303460	0	True				
ANR	1303488	AndExpression	"p -> type == R_EGG_PLUGIN_ENCODER && ! strcmp ( name , p -> name )"		1303460	0		&&			
ANR	1303489	EqualityExpression	p -> type == R_EGG_PLUGIN_ENCODER		1303460	0		==			
ANR	1303490	PtrMemberAccess	p -> type		1303460	0					
ANR	1303491	Identifier	p		1303460	0					
ANR	1303492	Identifier	type		1303460	1					
ANR	1303493	Identifier	R_EGG_PLUGIN_ENCODER		1303460	1					
ANR	1303494	UnaryOperationExpression	"! strcmp ( name , p -> name )"		1303460	1					
ANR	1303495	UnaryOperator	!		1303460	0					
ANR	1303496	CallExpression	"strcmp ( name , p -> name )"		1303460	1					
ANR	1303497	Callee	strcmp		1303460	0					
ANR	1303498	Identifier	strcmp		1303460	0					
ANR	1303499	ArgumentList	name		1303460	1					
ANR	1303500	Argument	name		1303460	0					
ANR	1303501	Identifier	name		1303460	0					
ANR	1303502	Argument	p -> name		1303460	1					
ANR	1303503	PtrMemberAccess	p -> name		1303460	0					
ANR	1303504	Identifier	p		1303460	0					
ANR	1303505	Identifier	name		1303460	1					
ANR	1303506	CompoundStatement		6:66:156:156	1303460	1					
ANR	1303507	ExpressionStatement	b = p -> build ( egg )	503:3:11363:11381	1303460	0	True				
ANR	1303508	AssignmentExpression	b = p -> build ( egg )		1303460	0		=			
ANR	1303509	Identifier	b		1303460	0					
ANR	1303510	CallExpression	p -> build ( egg )		1303460	1					
ANR	1303511	Callee	p -> build		1303460	0					
ANR	1303512	PtrMemberAccess	p -> build		1303460	0					
ANR	1303513	Identifier	p		1303460	0					
ANR	1303514	Identifier	build		1303460	1					
ANR	1303515	ArgumentList	egg		1303460	1					
ANR	1303516	Argument	egg		1303460	0					
ANR	1303517	Identifier	egg		1303460	0					
ANR	1303518	IfStatement	if ( ! b )		1303460	1					
ANR	1303519	Condition	! b	504:7:11390:11391	1303460	0	True				
ANR	1303520	UnaryOperationExpression	! b		1303460	0					
ANR	1303521	UnaryOperator	!		1303460	0					
ANR	1303522	Identifier	b		1303460	1					
ANR	1303523	CompoundStatement		8:11:192:192	1303460	1					
ANR	1303524	ReturnStatement	return false ;	505:4:11400:11412	1303460	0	True				
ANR	1303525	Identifier	false		1303460	0					
ANR	1303526	ExpressionStatement	r_buf_free ( egg -> bin )	507:3:11422:11443	1303460	2	True				
ANR	1303527	CallExpression	r_buf_free ( egg -> bin )		1303460	0					
ANR	1303528	Callee	r_buf_free		1303460	0					
ANR	1303529	Identifier	r_buf_free		1303460	0					
ANR	1303530	ArgumentList	egg -> bin		1303460	1					
ANR	1303531	Argument	egg -> bin		1303460	0					
ANR	1303532	PtrMemberAccess	egg -> bin		1303460	0					
ANR	1303533	Identifier	egg		1303460	0					
ANR	1303534	Identifier	bin		1303460	1					
ANR	1303535	ExpressionStatement	egg -> bin = b	508:3:11448:11460	1303460	3	True				
ANR	1303536	AssignmentExpression	egg -> bin = b		1303460	0		=			
ANR	1303537	PtrMemberAccess	egg -> bin		1303460	0					
ANR	1303538	Identifier	egg		1303460	0					
ANR	1303539	Identifier	bin		1303460	1					
ANR	1303540	Identifier	b		1303460	1					
ANR	1303541	ReturnStatement	return true ;	509:3:11465:11476	1303460	4	True				
ANR	1303542	Identifier	true		1303460	0					
ANR	1303543	ReturnStatement	return false ;	512:1:11486:11498	1303460	14	True				
ANR	1303544	Identifier	false		1303460	0					
ANR	1303545	ReturnType	R_API int		1303460	1					
ANR	1303546	Identifier	r_egg_encode		1303460	2					
ANR	1303547	ParameterList	"REgg * egg , const char * name"		1303460	3					
ANR	1303548	Parameter	REgg * egg	497:23:11172:11180	1303460	0	True				
ANR	1303549	ParameterType	REgg *		1303460	0					
ANR	1303550	Identifier	egg		1303460	1					
ANR	1303551	Parameter	const char * name	497:34:11183:11198	1303460	1	True				
ANR	1303552	ParameterType	const char *		1303460	0					
ANR	1303553	Identifier	name		1303460	1					
ANR	1303554	CFGEntryNode	ENTRY		1303460		True				
ANR	1303555	CFGExitNode	EXIT		1303460		True				
ANR	1303556	Symbol	strcmp		1303460						
ANR	1303557	Symbol	R_EGG_PLUGIN_ENCODER		1303460						
ANR	1303558	Symbol	b		1303460						
ANR	1303559	Symbol	egg		1303460						
ANR	1303560	Symbol	false		1303460						
ANR	1303561	Symbol	iter		1303460						
ANR	1303562	Symbol	p -> type		1303460						
ANR	1303563	Symbol	p		1303460						
ANR	1303564	Symbol	* egg		1303460						
ANR	1303565	Symbol	p -> build		1303460						
ANR	1303566	Symbol	egg -> bin		1303460						
ANR	1303567	Symbol	name		1303460						
ANR	1303568	Symbol	true		1303460						
ANR	1303569	Symbol	* p		1303460						
ANR	1303570	Symbol	p -> name		1303460						
ANR	1303571	Function	r_egg_patch	515:0:11503:11821							
ANR	1303572	FunctionDef	"r_egg_patch (REgg * egg , int off , const ut8 * buf , int len)"		1303571	0					
ANR	1303573	CompoundStatement		515:67:11570:11821	1303571	0					
ANR	1303574	Statement	struct	516:1:11573:11578	1303571	0	True				
ANR	1303575	Statement	egg_patch_t	516:8:11580:11590	1303571	1	True				
ANR	1303576	Statement	*	516:20:11592:11592	1303571	2	True				
ANR	1303577	Statement	ep	516:21:11593:11594	1303571	3	True				
ANR	1303578	Statement	=	516:24:11596:11596	1303571	4	True				
ANR	1303579	Statement	R_NEW	516:26:11598:11602	1303571	5	True				
ANR	1303580	Statement	(	516:32:11604:11604	1303571	6	True				
ANR	1303581	Statement	struct	516:33:11605:11610	1303571	7	True				
ANR	1303582	Statement	egg_patch_t	516:40:11612:11622	1303571	8	True				
ANR	1303583	Statement	)	516:51:11623:11623	1303571	9	True				
ANR	1303584	ExpressionStatement		516:52:11624:11624	1303571	10	True				
ANR	1303585	IfStatement	if ( ! ep )		1303571	11					
ANR	1303586	Condition	! ep	517:5:11631:11633	1303571	0	True				
ANR	1303587	UnaryOperationExpression	! ep		1303571	0					
ANR	1303588	UnaryOperator	!		1303571	0					
ANR	1303589	Identifier	ep		1303571	1					
ANR	1303590	CompoundStatement		3:10:65:65	1303571	1					
ANR	1303591	ReturnStatement	return false ;	518:2:11640:11652	1303571	0	True				
ANR	1303592	Identifier	false		1303571	0					
ANR	1303593	ExpressionStatement	"ep -> b = r_buf_new_with_bytes ( buf , len )"	520:1:11658:11697	1303571	12	True				
ANR	1303594	AssignmentExpression	"ep -> b = r_buf_new_with_bytes ( buf , len )"		1303571	0		=			
ANR	1303595	PtrMemberAccess	ep -> b		1303571	0					
ANR	1303596	Identifier	ep		1303571	0					
ANR	1303597	Identifier	b		1303571	1					
ANR	1303598	CallExpression	"r_buf_new_with_bytes ( buf , len )"		1303571	1					
ANR	1303599	Callee	r_buf_new_with_bytes		1303571	0					
ANR	1303600	Identifier	r_buf_new_with_bytes		1303571	0					
ANR	1303601	ArgumentList	buf		1303571	1					
ANR	1303602	Argument	buf		1303571	0					
ANR	1303603	Identifier	buf		1303571	0					
ANR	1303604	Argument	len		1303571	1					
ANR	1303605	Identifier	len		1303571	0					
ANR	1303606	IfStatement	if ( ! ep -> b )		1303571	13					
ANR	1303607	Condition	! ep -> b	521:5:11704:11709	1303571	0	True				
ANR	1303608	UnaryOperationExpression	! ep -> b		1303571	0					
ANR	1303609	UnaryOperator	!		1303571	0					
ANR	1303610	PtrMemberAccess	ep -> b		1303571	1					
ANR	1303611	Identifier	ep		1303571	0					
ANR	1303612	Identifier	b		1303571	1					
ANR	1303613	CompoundStatement		7:13:141:141	1303571	1					
ANR	1303614	ExpressionStatement	egg_patch_free ( ep )	522:2:11716:11735	1303571	0	True				
ANR	1303615	CallExpression	egg_patch_free ( ep )		1303571	0					
ANR	1303616	Callee	egg_patch_free		1303571	0					
ANR	1303617	Identifier	egg_patch_free		1303571	0					
ANR	1303618	ArgumentList	ep		1303571	1					
ANR	1303619	Argument	ep		1303571	0					
ANR	1303620	Identifier	ep		1303571	0					
ANR	1303621	ReturnStatement	return false ;	523:2:11739:11751	1303571	1	True				
ANR	1303622	Identifier	false		1303571	0					
ANR	1303623	ExpressionStatement	ep -> off = off	525:1:11757:11770	1303571	14	True				
ANR	1303624	AssignmentExpression	ep -> off = off		1303571	0		=			
ANR	1303625	PtrMemberAccess	ep -> off		1303571	0					
ANR	1303626	Identifier	ep		1303571	0					
ANR	1303627	Identifier	off		1303571	1					
ANR	1303628	Identifier	off		1303571	1					
ANR	1303629	ExpressionStatement	"r_list_append ( egg -> patches , ep )"	526:1:11773:11805	1303571	15	True				
ANR	1303630	CallExpression	"r_list_append ( egg -> patches , ep )"		1303571	0					
ANR	1303631	Callee	r_list_append		1303571	0					
ANR	1303632	Identifier	r_list_append		1303571	0					
ANR	1303633	ArgumentList	egg -> patches		1303571	1					
ANR	1303634	Argument	egg -> patches		1303571	0					
ANR	1303635	PtrMemberAccess	egg -> patches		1303571	0					
ANR	1303636	Identifier	egg		1303571	0					
ANR	1303637	Identifier	patches		1303571	1					
ANR	1303638	Argument	ep		1303571	1					
ANR	1303639	Identifier	ep		1303571	0					
ANR	1303640	ReturnStatement	return true ;	527:1:11808:11819	1303571	16	True				
ANR	1303641	Identifier	true		1303571	0					
ANR	1303642	ReturnType	R_API int		1303571	1					
ANR	1303643	Identifier	r_egg_patch		1303571	2					
ANR	1303644	ParameterList	"REgg * egg , int off , const ut8 * buf , int len"		1303571	3					
ANR	1303645	Parameter	REgg * egg	515:22:11525:11533	1303571	0	True				
ANR	1303646	ParameterType	REgg *		1303571	0					
ANR	1303647	Identifier	egg		1303571	1					
ANR	1303648	Parameter	int off	515:33:11536:11542	1303571	1	True				
ANR	1303649	ParameterType	int		1303571	0					
ANR	1303650	Identifier	off		1303571	1					
ANR	1303651	Parameter	const ut8 * buf	515:42:11545:11558	1303571	2	True				
ANR	1303652	ParameterType	const ut8 *		1303571	0					
ANR	1303653	Identifier	buf		1303571	1					
ANR	1303654	Parameter	int len	515:58:11561:11567	1303571	3	True				
ANR	1303655	ParameterType	int		1303571	0					
ANR	1303656	Identifier	len		1303571	1					
ANR	1303657	CFGEntryNode	ENTRY		1303571		True				
ANR	1303658	CFGExitNode	EXIT		1303571		True				
ANR	1303659	Symbol	egg		1303571						
ANR	1303660	Symbol	ep -> b		1303571						
ANR	1303661	Symbol	false		1303571						
ANR	1303662	Symbol	ep		1303571						
ANR	1303663	Symbol	r_buf_new_with_bytes		1303571						
ANR	1303664	Symbol	off		1303571						
ANR	1303665	Symbol	* egg		1303571						
ANR	1303666	Symbol	buf		1303571						
ANR	1303667	Symbol	* ep		1303571						
ANR	1303668	Symbol	len		1303571						
ANR	1303669	Symbol	egg -> patches		1303571						
ANR	1303670	Symbol	true		1303571						
ANR	1303671	Symbol	ep -> off		1303571						
ANR	1303672	Function	r_egg_finalize	530:0:11824:12439							
ANR	1303673	FunctionDef	r_egg_finalize (REgg * egg)		1303672	0					
ANR	1303674	CompoundStatement		530:37:11861:12439	1303672	0					
ANR	1303675	IdentifierDeclStatement	struct egg_patch_t * ep ;	531:1:11864:11886	1303672	0	True				
ANR	1303676	IdentifierDecl	* ep		1303672	0					
ANR	1303677	IdentifierDeclType	struct egg_patch_t *		1303672	0					
ANR	1303678	Identifier	ep		1303672	1					
ANR	1303679	IdentifierDeclStatement	RListIter * iter ;	532:1:11889:11904	1303672	1	True				
ANR	1303680	IdentifierDecl	* iter		1303672	0					
ANR	1303681	IdentifierDeclType	RListIter *		1303672	0					
ANR	1303682	Identifier	iter		1303672	1					
ANR	1303683	IfStatement	if ( ! egg -> bin )		1303672	2					
ANR	1303684	Condition	! egg -> bin	533:5:11911:11919	1303672	0	True				
ANR	1303685	UnaryOperationExpression	! egg -> bin		1303672	0					
ANR	1303686	UnaryOperator	!		1303672	0					
ANR	1303687	PtrMemberAccess	egg -> bin		1303672	1					
ANR	1303688	Identifier	egg		1303672	0					
ANR	1303689	Identifier	bin		1303672	1					
ANR	1303690	CompoundStatement		4:16:60:60	1303672	1					
ANR	1303691	ExpressionStatement	r_buf_free ( egg -> bin )	534:2:11926:11947	1303672	0	True				
ANR	1303692	CallExpression	r_buf_free ( egg -> bin )		1303672	0					
ANR	1303693	Callee	r_buf_free		1303672	0					
ANR	1303694	Identifier	r_buf_free		1303672	0					
ANR	1303695	ArgumentList	egg -> bin		1303672	1					
ANR	1303696	Argument	egg -> bin		1303672	0					
ANR	1303697	PtrMemberAccess	egg -> bin		1303672	0					
ANR	1303698	Identifier	egg		1303672	0					
ANR	1303699	Identifier	bin		1303672	1					
ANR	1303700	ExpressionStatement	egg -> bin = r_buf_new ( )	535:2:11951:11974	1303672	1	True				
ANR	1303701	AssignmentExpression	egg -> bin = r_buf_new ( )		1303672	0		=			
ANR	1303702	PtrMemberAccess	egg -> bin		1303672	0					
ANR	1303703	Identifier	egg		1303672	0					
ANR	1303704	Identifier	bin		1303672	1					
ANR	1303705	CallExpression	r_buf_new ( )		1303672	1					
ANR	1303706	Callee	r_buf_new		1303672	0					
ANR	1303707	Identifier	r_buf_new		1303672	0					
ANR	1303708	ArgumentList			1303672	1					
ANR	1303709	Statement	r_list_foreach	537:1:11980:11993	1303672	3	True				
ANR	1303710	Statement	(	537:16:11995:11995	1303672	4	True				
ANR	1303711	Statement	egg	537:17:11996:11998	1303672	5	True				
ANR	1303712	Statement	->	537:20:11999:12000	1303672	6	True				
ANR	1303713	Statement	patches	537:22:12001:12007	1303672	7	True				
ANR	1303714	Statement	","	537:29:12008:12008	1303672	8	True				
ANR	1303715	Statement	iter	537:31:12010:12013	1303672	9	True				
ANR	1303716	Statement	","	537:35:12014:12014	1303672	10	True				
ANR	1303717	Statement	ep	537:37:12016:12017	1303672	11	True				
ANR	1303718	Statement	)	537:39:12018:12018	1303672	12	True				
ANR	1303719	CompoundStatement		8:41:158:158	1303672	13					
ANR	1303720	IfStatement	if ( ep -> off < 0 )		1303672	0					
ANR	1303721	Condition	ep -> off < 0	538:6:12028:12038	1303672	0	True				
ANR	1303722	RelationalExpression	ep -> off < 0		1303672	0		<			
ANR	1303723	PtrMemberAccess	ep -> off		1303672	0					
ANR	1303724	Identifier	ep		1303672	0					
ANR	1303725	Identifier	off		1303672	1					
ANR	1303726	PrimaryExpression	0		1303672	1					
ANR	1303727	CompoundStatement		11:3:196:236	1303672	1					
ANR	1303728	IdentifierDeclStatement	ut64 sz ;	539:3:12046:12053	1303672	0	True				
ANR	1303729	IdentifierDecl	sz		1303672	0					
ANR	1303730	IdentifierDeclType	ut64		1303672	0					
ANR	1303731	Identifier	sz		1303672	1					
ANR	1303732	IdentifierDeclStatement	"const ut8 * buf = r_buf_data ( ep -> b , & sz ) ;"	540:3:12058:12098	1303672	1	True				
ANR	1303733	IdentifierDecl	"* buf = r_buf_data ( ep -> b , & sz )"		1303672	0					
ANR	1303734	IdentifierDeclType	const ut8 *		1303672	0					
ANR	1303735	Identifier	buf		1303672	1					
ANR	1303736	AssignmentExpression	"* buf = r_buf_data ( ep -> b , & sz )"		1303672	2		=			
ANR	1303737	Identifier	buf		1303672	0					
ANR	1303738	CallExpression	"r_buf_data ( ep -> b , & sz )"		1303672	1					
ANR	1303739	Callee	r_buf_data		1303672	0					
ANR	1303740	Identifier	r_buf_data		1303672	0					
ANR	1303741	ArgumentList	ep -> b		1303672	1					
ANR	1303742	Argument	ep -> b		1303672	0					
ANR	1303743	PtrMemberAccess	ep -> b		1303672	0					
ANR	1303744	Identifier	ep		1303672	0					
ANR	1303745	Identifier	b		1303672	1					
ANR	1303746	Argument	& sz		1303672	1					
ANR	1303747	UnaryOperationExpression	& sz		1303672	0					
ANR	1303748	UnaryOperator	&		1303672	0					
ANR	1303749	Identifier	sz		1303672	1					
ANR	1303750	ExpressionStatement	"r_egg_append_bytes ( egg , buf , sz )"	541:3:12103:12136	1303672	2	True				
ANR	1303751	CallExpression	"r_egg_append_bytes ( egg , buf , sz )"		1303672	0					
ANR	1303752	Callee	r_egg_append_bytes		1303672	0					
ANR	1303753	Identifier	r_egg_append_bytes		1303672	0					
ANR	1303754	ArgumentList	egg		1303672	1					
ANR	1303755	Argument	egg		1303672	0					
ANR	1303756	Identifier	egg		1303672	0					
ANR	1303757	Argument	buf		1303672	1					
ANR	1303758	Identifier	buf		1303672	0					
ANR	1303759	Argument	sz		1303672	2					
ANR	1303760	Identifier	sz		1303672	0					
ANR	1303761	ElseStatement	else		1303672	0					
ANR	1303762	IfStatement	if ( ep -> off < r_buf_size ( egg -> bin ) )		1303672	0					
ANR	1303763	Condition	ep -> off < r_buf_size ( egg -> bin )	542:13:12151:12181	1303672	0	True				
ANR	1303764	RelationalExpression	ep -> off < r_buf_size ( egg -> bin )		1303672	0		<			
ANR	1303765	PtrMemberAccess	ep -> off		1303672	0					
ANR	1303766	Identifier	ep		1303672	0					
ANR	1303767	Identifier	off		1303672	1					
ANR	1303768	CallExpression	r_buf_size ( egg -> bin )		1303672	1					
ANR	1303769	Callee	r_buf_size		1303672	0					
ANR	1303770	Identifier	r_buf_size		1303672	0					
ANR	1303771	ArgumentList	egg -> bin		1303672	1					
ANR	1303772	Argument	egg -> bin		1303672	0					
ANR	1303773	PtrMemberAccess	egg -> bin		1303672	0					
ANR	1303774	Identifier	egg		1303672	0					
ANR	1303775	Identifier	bin		1303672	1					
ANR	1303776	CompoundStatement		16:3:384:435	1303672	1					
ANR	1303777	IdentifierDeclStatement	ut64 sz ;	543:3:12189:12196	1303672	0	True				
ANR	1303778	IdentifierDecl	sz		1303672	0					
ANR	1303779	IdentifierDeclType	ut64		1303672	0					
ANR	1303780	Identifier	sz		1303672	1					
ANR	1303781	IdentifierDeclStatement	"const ut8 * buf = r_buf_data ( ep -> b , & sz ) ;"	544:3:12201:12241	1303672	1	True				
ANR	1303782	IdentifierDecl	"* buf = r_buf_data ( ep -> b , & sz )"		1303672	0					
ANR	1303783	IdentifierDeclType	const ut8 *		1303672	0					
ANR	1303784	Identifier	buf		1303672	1					
ANR	1303785	AssignmentExpression	"* buf = r_buf_data ( ep -> b , & sz )"		1303672	2		=			
ANR	1303786	Identifier	buf		1303672	0					
ANR	1303787	CallExpression	"r_buf_data ( ep -> b , & sz )"		1303672	1					
ANR	1303788	Callee	r_buf_data		1303672	0					
ANR	1303789	Identifier	r_buf_data		1303672	0					
ANR	1303790	ArgumentList	ep -> b		1303672	1					
ANR	1303791	Argument	ep -> b		1303672	0					
ANR	1303792	PtrMemberAccess	ep -> b		1303672	0					
ANR	1303793	Identifier	ep		1303672	0					
ANR	1303794	Identifier	b		1303672	1					
ANR	1303795	Argument	& sz		1303672	1					
ANR	1303796	UnaryOperationExpression	& sz		1303672	0					
ANR	1303797	UnaryOperator	&		1303672	0					
ANR	1303798	Identifier	sz		1303672	1					
ANR	1303799	IdentifierDeclStatement	"int r = r_buf_write_at ( egg -> bin , ep -> off , buf , sz ) ;"	545:3:12246:12297	1303672	2	True				
ANR	1303800	IdentifierDecl	"r = r_buf_write_at ( egg -> bin , ep -> off , buf , sz )"		1303672	0					
ANR	1303801	IdentifierDeclType	int		1303672	0					
ANR	1303802	Identifier	r		1303672	1					
ANR	1303803	AssignmentExpression	"r = r_buf_write_at ( egg -> bin , ep -> off , buf , sz )"		1303672	2		=			
ANR	1303804	Identifier	r		1303672	0					
ANR	1303805	CallExpression	"r_buf_write_at ( egg -> bin , ep -> off , buf , sz )"		1303672	1					
ANR	1303806	Callee	r_buf_write_at		1303672	0					
ANR	1303807	Identifier	r_buf_write_at		1303672	0					
ANR	1303808	ArgumentList	egg -> bin		1303672	1					
ANR	1303809	Argument	egg -> bin		1303672	0					
ANR	1303810	PtrMemberAccess	egg -> bin		1303672	0					
ANR	1303811	Identifier	egg		1303672	0					
ANR	1303812	Identifier	bin		1303672	1					
ANR	1303813	Argument	ep -> off		1303672	1					
ANR	1303814	PtrMemberAccess	ep -> off		1303672	0					
ANR	1303815	Identifier	ep		1303672	0					
ANR	1303816	Identifier	off		1303672	1					
ANR	1303817	Argument	buf		1303672	2					
ANR	1303818	Identifier	buf		1303672	0					
ANR	1303819	Argument	sz		1303672	3					
ANR	1303820	Identifier	sz		1303672	0					
ANR	1303821	IfStatement	if ( r < sz )		1303672	3					
ANR	1303822	Condition	r < sz	546:7:12306:12311	1303672	0	True				
ANR	1303823	RelationalExpression	r < sz		1303672	0		<			
ANR	1303824	Identifier	r		1303672	0					
ANR	1303825	Identifier	sz		1303672	1					
ANR	1303826	CompoundStatement		17:15:452:452	1303672	1					
ANR	1303827	ExpressionStatement	"eprintf ( ""Error during patch\\n"" )"	547:4:12320:12352	1303672	0	True				
ANR	1303828	CallExpression	"eprintf ( ""Error during patch\\n"" )"		1303672	0					
ANR	1303829	Callee	eprintf		1303672	0					
ANR	1303830	Identifier	eprintf		1303672	0					
ANR	1303831	ArgumentList	"""Error during patch\\n"""		1303672	1					
ANR	1303832	Argument	"""Error during patch\\n"""		1303672	0					
ANR	1303833	PrimaryExpression	"""Error during patch\\n"""		1303672	0					
ANR	1303834	ReturnStatement	return ;	548:4:12358:12364	1303672	1	True				
ANR	1303835	ElseStatement	else		1303672	0					
ANR	1303836	CompoundStatement		21:9:518:518	1303672	0					
ANR	1303837	ExpressionStatement	"eprintf ( ""Cannot patch outside\\n"" )"	551:3:12385:12419	1303672	0	True				
ANR	1303838	CallExpression	"eprintf ( ""Cannot patch outside\\n"" )"		1303672	0					
ANR	1303839	Callee	eprintf		1303672	0					
ANR	1303840	Identifier	eprintf		1303672	0					
ANR	1303841	ArgumentList	"""Cannot patch outside\\n"""		1303672	1					
ANR	1303842	Argument	"""Cannot patch outside\\n"""		1303672	0					
ANR	1303843	PrimaryExpression	"""Cannot patch outside\\n"""		1303672	0					
ANR	1303844	ReturnStatement	return ;	552:3:12424:12430	1303672	1	True				
ANR	1303845	ReturnType	R_API void		1303672	1					
ANR	1303846	Identifier	r_egg_finalize		1303672	2					
ANR	1303847	ParameterList	REgg * egg		1303672	3					
ANR	1303848	Parameter	REgg * egg	530:26:11850:11858	1303672	0	True				
ANR	1303849	ParameterType	REgg *		1303672	0					
ANR	1303850	Identifier	egg		1303672	1					
ANR	1303851	CFGEntryNode	ENTRY		1303672		True				
ANR	1303852	CFGExitNode	EXIT		1303672		True				
ANR	1303853	Symbol	egg		1303672						
ANR	1303854	Symbol	ep -> b		1303672						
ANR	1303855	Symbol	sz		1303672						
ANR	1303856	Symbol	iter		1303672						
ANR	1303857	Symbol	ep		1303672						
ANR	1303858	Symbol	r_buf_write_at		1303672						
ANR	1303859	Symbol	* egg		1303672						
ANR	1303860	Symbol	& sz		1303672						
ANR	1303861	Symbol	* ep		1303672						
ANR	1303862	Symbol	buf		1303672						
ANR	1303863	Symbol	r		1303672						
ANR	1303864	Symbol	egg -> bin		1303672						
ANR	1303865	Symbol	r_buf_new		1303672						
ANR	1303866	Symbol	ep -> off		1303672						
ANR	1303867	Symbol	r_buf_data		1303672						
ANR	1303868	Symbol	r_buf_size		1303672						
ANR	1303869	Function	r_egg_pattern	557:0:12442:12692							
ANR	1303870	FunctionDef	"r_egg_pattern (REgg * egg , int size)"		1303869	0					
ANR	1303871	CompoundStatement		557:46:12488:12692	1303869	0					
ANR	1303872	IdentifierDeclStatement	"char * ret = r_debruijn_pattern ( ( int ) size , 0 , NULL ) ;"	558:1:12491:12542	1303869	0	True				
ANR	1303873	IdentifierDecl	"* ret = r_debruijn_pattern ( ( int ) size , 0 , NULL )"		1303869	0					
ANR	1303874	IdentifierDeclType	char *		1303869	0					
ANR	1303875	Identifier	ret		1303869	1					
ANR	1303876	AssignmentExpression	"* ret = r_debruijn_pattern ( ( int ) size , 0 , NULL )"		1303869	2		=			
ANR	1303877	Identifier	ret		1303869	0					
ANR	1303878	CallExpression	"r_debruijn_pattern ( ( int ) size , 0 , NULL )"		1303869	1					
ANR	1303879	Callee	r_debruijn_pattern		1303869	0					
ANR	1303880	Identifier	r_debruijn_pattern		1303869	0					
ANR	1303881	ArgumentList	( int ) size		1303869	1					
ANR	1303882	Argument	( int ) size		1303869	0					
ANR	1303883	CastExpression	( int ) size		1303869	0					
ANR	1303884	CastTarget	int		1303869	0					
ANR	1303885	Identifier	size		1303869	1					
ANR	1303886	Argument	0		1303869	1					
ANR	1303887	PrimaryExpression	0		1303869	0					
ANR	1303888	Argument	NULL		1303869	2					
ANR	1303889	Identifier	NULL		1303869	0					
ANR	1303890	IfStatement	if ( ret )		1303869	1					
ANR	1303891	Condition	ret	559:5:12549:12551	1303869	0	True				
ANR	1303892	Identifier	ret		1303869	0					
ANR	1303893	CompoundStatement		3:10:65:65	1303869	1					
ANR	1303894	ExpressionStatement	"r_egg_prepend_bytes ( egg , ( const ut8 * ) ret , strlen ( ret ) )"	560:2:12558:12613	1303869	0	True				
ANR	1303895	CallExpression	"r_egg_prepend_bytes ( egg , ( const ut8 * ) ret , strlen ( ret ) )"		1303869	0					
ANR	1303896	Callee	r_egg_prepend_bytes		1303869	0					
ANR	1303897	Identifier	r_egg_prepend_bytes		1303869	0					
ANR	1303898	ArgumentList	egg		1303869	1					
ANR	1303899	Argument	egg		1303869	0					
ANR	1303900	Identifier	egg		1303869	0					
ANR	1303901	Argument	( const ut8 * ) ret		1303869	1					
ANR	1303902	CastExpression	( const ut8 * ) ret		1303869	0					
ANR	1303903	CastTarget	const ut8 *		1303869	0					
ANR	1303904	Identifier	ret		1303869	1					
ANR	1303905	Argument	strlen ( ret )		1303869	2					
ANR	1303906	CallExpression	strlen ( ret )		1303869	0					
ANR	1303907	Callee	strlen		1303869	0					
ANR	1303908	Identifier	strlen		1303869	0					
ANR	1303909	ArgumentList	ret		1303869	1					
ANR	1303910	Argument	ret		1303869	0					
ANR	1303911	Identifier	ret		1303869	0					
ANR	1303912	ExpressionStatement	free ( ret )	561:2:12617:12627	1303869	1	True				
ANR	1303913	CallExpression	free ( ret )		1303869	0					
ANR	1303914	Callee	free		1303869	0					
ANR	1303915	Identifier	free		1303869	0					
ANR	1303916	ArgumentList	ret		1303869	1					
ANR	1303917	Argument	ret		1303869	0					
ANR	1303918	Identifier	ret		1303869	0					
ANR	1303919	ElseStatement	else		1303869	0					
ANR	1303920	CompoundStatement		6:8:148:148	1303869	0					
ANR	1303921	ExpressionStatement	"eprintf ( ""Invalid debruijn pattern length.\\n"" )"	563:2:12641:12687	1303869	0	True				
ANR	1303922	CallExpression	"eprintf ( ""Invalid debruijn pattern length.\\n"" )"		1303869	0					
ANR	1303923	Callee	eprintf		1303869	0					
ANR	1303924	Identifier	eprintf		1303869	0					
ANR	1303925	ArgumentList	"""Invalid debruijn pattern length.\\n"""		1303869	1					
ANR	1303926	Argument	"""Invalid debruijn pattern length.\\n"""		1303869	0					
ANR	1303927	PrimaryExpression	"""Invalid debruijn pattern length.\\n"""		1303869	0					
ANR	1303928	ReturnType	R_API void		1303869	1					
ANR	1303929	Identifier	r_egg_pattern		1303869	2					
ANR	1303930	ParameterList	"REgg * egg , int size"		1303869	3					
ANR	1303931	Parameter	REgg * egg	557:25:12467:12475	1303869	0	True				
ANR	1303932	ParameterType	REgg *		1303869	0					
ANR	1303933	Identifier	egg		1303869	1					
ANR	1303934	Parameter	int size	557:36:12478:12485	1303869	1	True				
ANR	1303935	ParameterType	int		1303869	0					
ANR	1303936	Identifier	size		1303869	1					
ANR	1303937	CFGEntryNode	ENTRY		1303869		True				
ANR	1303938	CFGExitNode	EXIT		1303869		True				
ANR	1303939	Symbol	ret		1303869						
ANR	1303940	Symbol	strlen		1303869						
ANR	1303941	Symbol	NULL		1303869						
ANR	1303942	Symbol	egg		1303869						
ANR	1303943	Symbol	size		1303869						
ANR	1303944	Symbol	r_debruijn_pattern		1303869						
